MbP?
?333333
9@333333
MbP?
^8U)zj
333333
?^8U)zj
333333
?ffffff
Mb`?
?::::::
?zzzzzz
@ffffff
333333
?333333
** WARNING: The interpretation of automaticAcceptanceInterval has changed to be a delta from the end of playback, which means a value of 0.0 now represents the end of playback time. Use NAN or INFINITY to explicitly disable automatic acceptance.
InternalBuild
-[AVAirTransportStreams stream:handleEvent:]
/Library/Caches/com.apple.xbs/Sources/MobileAVKit_Sim/MobileAVKit-786.2.17/Common/AirMessaging/AVAirTransport.m
isRunningEventThread()
Input
Output
-[AVAirTransportStreams _inputStreamHasBytesAvailable]
-[AVAirTransportStreams _inputStreamHasBytesAvailable]_block_invoke
-[AVAirTransportStreams _readAvailableData]
-[AVAirTransportStreams _readDataNonBlockingUpToMaxLength:]
<%@ %p: (<%@, >%@), delegate=%@>
<%@ %p>
-[AVAirTransportStreams invalidate]
-[AVAirTransport sendResponse:]
-[AVAirTransport sendObject:receiveResponse:]_block_invoke
isReadyToSend should be implemented by subclass
-[AVAirTransport writeData:]
-[AVAirTransport writeMore]
_writeData must be implmemented by subclass
-[AVAirTransport terminatePendingRequests]_block_invoke
<%@ %p: delegate=%@>
-[AVAirTransport dealloc]
com.apple.avkit.AirChannel
+[AVAirTransport startEventThreadIfNecessary]_block_invoke_2
v16@?0@"NSTimer"8
%@ is not a valid initializer. You must call -[%@ initWithTraitCollection:opaque:].
PICTURE_IN_PICTURE_INDICATOR_LAYER_TITLE
AVSimpleChannelInterstitialViewController.view
-[AVAirMessageTransformer dataForMessage:]
missing implementation
opacity
_AVSpinnerRepeatingGroupAnimation
@"CALayer"32@?0{CGSize=dd}8@"UIColor"24
discrete
transform.rotation.z
unrated_mask
tvy7fv_mask
tvy7_mask
tvy_mask
tvpg_mask
tvma_mask
tvg_mask
tv14_mask
r_mask
pg13_mask
pg_mask
NZ_RP16
NZ_RP13
NZ_R18
NZ_R16
NZ_R15
NZ_R13
NZ_R
NZ_PG
NZ_M
NZ_G
nr_mask
g_mask
badge_explicit_mask
BBFC_U
BBFC_R18
BBFC_PG
BBFC_18
BBFC_15
BBFC_12A
BBFC_12
bars-l
bars-18
bars-16
bars-14
bars-12
bars-10
unrated
tvy7fv
tvy7
tvpg
tvma
tv14
pg13
nzrp16
nzrp13
nzr18
nzr16
nzr15
nzr13
nzpg
explicit
bbfcu
bbfcr18
bbfcpg
bbfc18
bbfc15
bbfc12a
bbfc12
barsl
bars18
bars16
bars14
bars12
bars10
<AVMediaContentRating: "%@" %d "%@" %@ (%@) - %@>
not restricted
restricted
TVShows
Movies
Unknown
init unavailable
EnableExtraScanLogging
EdgeSwipeMaximumStartingInset
TrackingMode
com.apple.TVPeripheralAgent.RemoteClickpadModeDidChange
-[AVGlobalUserSettings init]
-[AVGlobalUserSettings init]_block_invoke
rotary
non-rotary
Prototype
Classic
com.apple.UIKit
com.apple.AVKit
-[AVInterstitialController didPresentInterstitialTimeRange:]
-[AVInterstitialController willPresentInterstitialTimeRange:]
-[AVInterstitialController skipInterstitialTimeRange:]
-[AVInterstitialController _startObservingInterstitialTimeRanges]_block_invoke
/Library/Caches/com.apple.xbs/Sources/MobileAVKit_Sim/MobileAVKit-786.2.17/Embedded/TVAVKit/Playback/AVInterstitialController_TV.m
![self interstitialBoundaryTimeObserver]
-[AVInterstitialController _sendInterstitialBoundaryNotificationsForTime:]
-[AVInterstitialController timeToSeekAfterUserNavigatedFromTime:toTime:]
interstitialPolicyEnforcement value is not supported
-[AVInterstitialController _updateInterstitialTimeRangeCollection]
player.currentItem
v32@?0@"AVInterstitialController"8@16@"AVKeyValueChange"24
duration
reversePlaybackEndTime
forwardPlaybackEndTime
interstitialTimeRanges
-[AVFrameSet _handleMemoryWarning:]
-[AVFrameSet _fetchNextFrame]
 (timeout)
v32@?0d8@"UIImage"16@"NSError"24
-[AVFrameSet _fetchNextFrame]_block_invoke
/Library/Caches/com.apple.xbs/Sources/MobileAVKit_Sim/MobileAVKit-786.2.17/Embedded/TVAVKit/Utilities/AVFrameSet.m
(image || error) && !(image && error)
B24@?0Q8^B16
v32@?0@8Q16^B24
v24@?0Q8^B16
<%@: %p> image %@, actualTime %1.f
-[AVFrameSet requestFrameRange:]
range.length != NSNotFound
range.length < NSNotFound
!self.invalidated
-[AVFrameSet framesRequestedAndOnScreenStoppingAfterFirst:]
-[AVFrameSet invalidate]
asset.duration
-[AVFrameSet initWithImageGenerator:asset:frameInterval:maximumImageSize:]
imageGenerator
-[AVFrameSet initWithAsset:videoComposition:frameInterval:maximumImageSize:]
asset
canAssetImageGeneratorFetchFrames
com.apple.AVKit.imageFetching
-[AVPlayerThumbLayerController _seekToDesiredTime]_block_invoke
-[AVPlayerThumbLayerController setActualTimeInterval:]
<%@ %p> currentTime = %.2f, duration = %.2f, reversePlaybackEndTime = %.2f, forwardPlaybackEndTime = %.2f
streaming
-[AVNowPlayingTransportBar reloadFrames]
-[AVNowPlayingTransportBar _updateThumbnailImage]
-[AVNowPlayingTransportBar setScrubPlayerItem:]
-[AVNowPlayingTransportBar setClonedPlayer:]
-[AVNowPlayingTransportBar _updateAccessoryVisibility]
-[AVNowPlayingTransportBar setScrubMode:gestureInfo:]
-[AVNowPlayingTransportBar setHint:]
NowPlayingPrevChapter.png
NowPlayingNextChapter.png
NowPlayingSkip10Backward.png
NowPlayingSkip10Forward.png
NowPlayingRewind.png
NowPlayingFastForward.png
v24@?0@"UIImageView"8@"NSString"16
-[AVNowPlayingTransportBar _updateRotaryNeedleElapsedTimeLabelOffset]
-[AVNowPlayingTransportBar setDisplaysRemainingTime:]
-[AVNowPlayingTransportBar setDisplaysCurrentTime:]
-[AVNowPlayingTransportBar setDuration:]
-[AVNowPlayingTransportBar _setCurrentTimeInterval:updatingNeedlePositions:animated:]
-[AVNowPlayingTransportBar _updateTimeLabelVisibility]
-[AVNowPlayingTransportBar _updateRemainingTimeText]
-[AVNowPlayingTransportBar setDisplaysClockTimes:animated:]
/Library/Caches/com.apple.xbs/Sources/MobileAVKit_Sim/MobileAVKit-786.2.17/Embedded/TVAVKit/Views/AVNowPlayingTransportBar.m
oldRelativeTimeAlpha == 0.0 || newRelativeTimeAlpha == 0.0
-[AVNowPlayingTransportBar stopScrubbingWithResetToPauseMarker:animated:]
-[AVNowPlayingTransportBar startScrubbingForPauseTime:]
-[AVNowPlayingTransportBar setDisplaysScrubbingFrames:]
-[AVNowPlayingTransportBar setThumbLayerController:]
-[AVNowPlayingTransportBar setAvailableFractionFrom:to:animated:]
-[AVNowPlayingTransportBar setUnusable:]
-[AVNowPlayingTransportBar setLoading:]
-[AVNowPlayingTransportBar setStartDate:]
-[AVNowPlayingTransportBar setLive:]
-[AVNowPlayingTransportBar setHidden:animated:]
AVTransportBarCaptureGroup
-[AVNowPlayingTransportBar _setupScrubNeedleAnimatorIfNeeded]
-[AVNowPlayingTransportBar setFocusTrackingTension:]
Forward Scanning Speed
Right Icon Hint
Reverse Scanning Speed
Left Icon Hint
Interstitial Time Remaining
Remaining Time
Elapsed Time
Elapsed Time Scrubbing Marker
@"UILabel"8@?0
@"AVAnimatingLabel"8@?0
@"UIView"16@?0#8
v24@?0@"UIView"8@"UIColor"16
AVKitShouldIdentifyScrubbers
AVShouldIdentifyScrubbers
Thumbnail View
Scrub Needle
Elapsed Time Marker
-[AVNowPlayingTransportBar initWithFrame:]
player.currentItem.presentationSize
player.currentItem.videoComposition.renderSize
NAVIGATION_WITHOUT_INFO
Info
v32@?0@"AVMusicAppBehaviorContext"8@16@"NSNotification"24
v32@?0@"AVMusicAppBehaviorContext"8@16@"AVKeyValueChange"24
playerController.player.currentItem
 (-> [%@...%@])
[%@...%@]
-[AVTimeRange timeRangeByAddingTimeInterval:shiftingDates:]
/Library/Caches/com.apple.xbs/Sources/MobileAVKit_Sim/MobileAVKit-786.2.17/Embedded/TVAVKit/Utilities/AVTimeRange.m
startTime
-[AVTimeRange initWithUnionOfCMTimeRanges:]
B16@?0@"AVTimeRange"8
v32@?0@"AVTimeRange"8Q16^B24
<%@: %p; %@%@%@%@>
autoplay
requiresFullSubtitles
allowedSubtitleOptionLanguages = %@
 = %@; 
 = YES; 
image
com.apple.AVKit.ChapterImageQueue
AVTintColor
AVImage
AVTitle
AVEnabled
<%@ %p; %@>
@"UIImage"8@?0
AVStartOrSwapPictureInPicture
START_PICTURE_IN_PICTURE_ACCESSIBILITYLABEL
AVStopPictureInPicture
STOP_PICTURE_IN_PICTURE_ACCESSIBILITYLABEL
AVCancelPictureInPicture
CANCEL_PICTURE_IN_PICTURE_ACCESSIBILITYLABEL
availableChapterLocales
isRequestingSeek
isSeeking
primaryNavigationMarkersGroup
v16@?0B8B12
-[AVPlayerController(tvOS) requestSeekToTime:reason:playWhenReady:]
-[AVPlayerController(tvOS) requestPauseWithCompletion:]
-[AVPlayerController(tvOS) requestPlayWithCompletion:]
v20@?0B8d12
-[AVPlayerController(tvOS) requestSeekToDate:seekReason:completionHandler:]
/Library/Caches/com.apple.xbs/Sources/MobileAVKit_Sim/MobileAVKit-786.2.17/Embedded/TVAVKit/Playback/AVPlayerController_TV.m
seekReason != AVSeekReasonNone
v20@?0B8@"NSDate"12
-[AVPlayerController(tvOS) requestSeekToTime:seekReason:permissionHandler:completionHandler:]
-[AVPlayerController(tvOS) seekToDate:seekReason:completionHandler:]
-[AVPlayerController(tvOS) seekToTime:seekReason:completionHandler:]
[NSThread isMainThread]
isSeekingTV
tracks
naturalSize
timeRangeSeekable
currentItem
initialEstimatedDate
navigationMarkerGroups
seekableTimeRanges
status
layer
playerLayer
V:|[simplePlayerLayerView]|
H:|[simplePlayerLayerView]|
simplePlayerLayerView
cannot specify duration of AVInterstitialDateRange except by providing dates
timeRange
AVTimeRange
AVInfoViewsVisualEffectGroup
-[AVInfoPanelViewController _menuButtonGestureDetected:]
-[AVInfoPanelViewController _upArrowGestureDetected:]
-[AVInfoPanelViewController _swipeUpGestureDetected:]
-[AVInfoPanelViewController _dismiss]
v24@?0@"AVInfoPanelContentViewController"8@"NSMutableArray"16
-[AVInfoPanelViewController didUpdateFocusInContext:withAnimationCoordinator:]
v16@?0@"<UIViewControllerTransitionCoordinatorContext>"8
_infoPanelCaptureView
AVInfoMenuController.view
_tabBarBackgroundView
AVInfoPanelVC.view
transform
checkmark
ShareAudio
Share_Audio
2zyzecwSf2ZYRpB3tuQhOQ
Speaker
Headphones
Placeholder
@"UICollectionReusableView"32@?0@"UICollectionView"8@"NSString"16@"NSIndexPath"24
NowPlayingSpeakers
NowPlayingHeadphones
@"UICollectionViewCell"32@?0@"UICollectionView"8@"NSIndexPath"16@"NSString"24
AudioHeaderIdentifier
AudioCellIdentifier
-[AVSharedDisplayManager displayState:didChangeWithConnection:]
displayCriteriaMatchingEnabled
-[AVSharedDisplayManager considerDisplayModeSwitchFinished]
-[AVSharedDisplayManager setPreferredDisplayCriteria:forScene:]
v16@?0@"UIMutableApplicationSceneClientSettings"8
-[AVSharedDisplayManager setPreferredDisplayCriteria:forScene:]_block_invoke
com.apple.pineboard.display_mode_switch_active
v12@?0i8
-[AVSharedDisplayManager initPrivate]_block_invoke
-[AVPlaybackControlsViewController _beginObservations]
/Library/Caches/com.apple.xbs/Sources/MobileAVKit_Sim/MobileAVKit-786.2.17/Embedded/TVAVKit/View Controllers/AVPlaybackControlsViewController.m
showsStreamingControls
playerController.hasLiveStreamingContent
playPauseButtonEnabled
playerController.canTogglePlayback
playbackRate
playerController.rate
playing
playerController.playing
scrubberEnabled
playerController.canSeek
-[AVInfoPanelCollectionViewThumbnailCell setImageProxy:]
v32@?0@"AVInfoPanelCollectionViewThumbnailCell"8@16@"AVKeyValueChange"24
imageProxy.image
NowPlayingCheckmark
center.y
center.x
layer.transform.rotation.x
layer.transform.rotation.y
layer.videoRect
layer.readyForDisplay
layer.videoGravity
NPI/_MPNowPlayingInfoPropertyExternalContentIdentifier
avkt/MPNowPlayingInfoPropertyExternalContentIdentifier
avkt/MPNowPlayingInfoPropertyExternalUserProfileIdentifier
avkt/MPNowPlayingInfoPropertyPlaybackProgress
avkt/MPNowPlayingInfoPropertyServiceIdentifier
avkt/com.apple.avkit.totalTrackCount
avkt/com.apple.avkit.rottenTomatoesFreshness
avkt/com.apple.avkit.rottenTomatoesRating
avkt/com.apple.avkit.seasonNumber
avkt/com.apple.avkit.episodeNumber
avkt/com.apple.avkit.iTunesStoreIdentifier
avkt/com.apple.avkit.releaseDate
avkt/com.apple.avkit.alternateSubTitle
avkt/com.apple.avkit.BrandIdentifier
avkt/com.apple.avkit.exactStartDate
avkt/com.apple.avkit.approximateStartDate
avkt/com.apple.avkit.exactEndDate
avkt/com.apple.avkit.approximateEndDate
-[AVAirMessageNotificationCenterDelegate airTrafficController:didReceiveMessage:completion:]_block_invoke
array argument required
description
unable to interpret image data
-[AVPlayerItem(AVPlayerViewControllerAdditions) cancelPlaybackRestrictionsAuthorizationRequest]
-[AVPlayerItem(AVPlayerViewControllerAdditions) requestPlaybackRestrictionsAuthorization:]
playbackRestrictionsAuthorizationToken
AVRestrictionValue
This item does not have a valid content rating.
validatedMediaContentRating
validatedDate
avkitMediaType
-[AVPlayerItem(AVPlayerViewControllerAdditions) setAirPlayedContent:]
airPlayedContent
overrideForReversePlaybackEndTime
overrideForForwardPlaybackEndTime
imageGeneratorForScrubbing
playerItemForScrubbing
nextContentProposal
selectedExternalSubtitleOptionLanguage
externalSubtitleOptionLanguages
-[AVPlayerItem(AVPlayerViewControllerAdditions) setTransInterstitialNavigationPolicy:]
transInterstitialNavigationPolicy
-[AVPlayerItem(AVPlayerViewControllerAdditions) setInterstitialPolicyEnforcement:]
interstitialPolicyEnforcement
externalMetadata
mediaContentRating
musicBehaviorContext
pendingTimeBoundary
uniqueIdentifier
-[AVInfoCollectionViewHorizontalLayout _lazilyLoadAllCellSizes]
/Library/Caches/com.apple.xbs/Sources/MobileAVKit_Sim/MobileAVKit-786.2.17/Embedded/TVAVKit/InfoPanels/Common/AVInfoCollectionViewHorizontalLayout_TV.m
[delegate respondsToSelector:@selector(collectionView:layout:sizeForItemAtIndexPath:)]
{CGSize=dd}
 (%@)
<%@ %p; frame = %@; focused = %@; %@>
AVPlayerViewController should not be subclassed
view controller is %@
warning: no view has focus
not full screen (playback is non-interactive)
AVPlayerViewController
-[_AVPlayerViewControllerContainerView _updateFullScreenIfAppropriate]
<AVInfoPanelMediaOption %p %@>
route
deviceImage
selectionState
displayName
tv.and.hifispeaker.fill
TV_SPEAKERS_TITLE
RECEIVER_SPEAKERS_TITLE
SHARE_AUDIO_TITLE
Full Dynamic Range
Reduce Loud Sounds
Auto
v32@?0@"AVRoutePickerView"8@16@"NSNotification"24
-[AVRoutePickerView updateButtonAppearance]
Inactive
Active
-[AVRoutePickerView setAirPlayActive:]
airPlayActive
com.apple.avkit.avroutepickerview
%@ is not a valid initializer. You must call -[%@ initWithTimeInterval:queue:block:repeats:].
com.apple.avkit.AVTimer.timer %p
com.apple.avkit.AVTimer.manage %p
AVRoutePickerViewCircularAirPlayGlyph
AVRoutePickerViewSquareAirPlayGlyph
VolumeGlyph
plusL
caml
-RTL
v32@?0@"CAState"8Q16^B24
v32@?0@"CALayer"8Q16^B24
LKStateTransitionElement
LKStateTransition
LKStateSetProperty
LKStateSetValue
LKStateRemoveElement
LKStateRemoveAnimation
LKStateElement
LKStateAddElement
LKStateAddAnimation
LKEventHandler
LKState
com.apple.avkit.caml
start
hidden
collapsed
UP NEXT
.mainLayoutGuide
AVKitIsStandardContentProposalAllowed
*** AVPlayerViewControllerAnimationCoordinator: Animations added to coordinator after animations performed will be ignored.
-[AVFocusTensionGestureRecognizer touchesMoved:withEvent:]
-[AVxOverlayViewController _handleSwipeDown:]
-[AVxOverlayViewController _handleMenu:]
-[AVxOverlayViewController _dismissAnimated:]
-[AVxOverlayViewController hideAnimating:]
-[AVxOverlayViewController hideAnimating:]_block_invoke_2
-[AVxOverlayViewController showAnimating:completion:]
-[AVxOverlayViewController showAnimating:completion:]_block_invoke
AVxOverlayViewController.m
%s-%d
AVXOverlayToolCellIdentifier
-[AVxOverlayViewController setOverlayPresented:]
-[UIResponder(AVxOverlayViewController) _handlePlayPauseTapGesture:]
@"NSString"16@?0@"NSDate"8
yyyy
v32@?0@"NSData"8@"NSURLResponse"16@"NSError"24
value
Warning: Metadata item %@ should contain image data, not a string
SUBTITLE_FORMAT
SEASON_EPISODE_FORMAT
AudioFormatDolbyAtmos
AudioDolbyAtmos
VideoDynamicRangeDolbyVision
ColorDolbyVision
VideoDynamicRangeHDR
ColorHDR
Fh2Ga0/Sj4T3Qn5Z9A9BMw
VideoResolutionHD
ResolutionHD
VideoResolution4K
Resolution4K
AVInfoPanelDescriptionPosterFocusGuide
AVSummary
AVClosedCaptions
cc_mask
AVAudioFormat
AVVideoDynamicRange
AVVideoResolution
AVMediaContentRatingImage
AVMediaContentRatingLabel
AVDate
AVGenre
AVDuration
AVSeasonEpisode
AVSubtitle
@"AVDarkModeCompatibleLabel"8@?0
AVPoster
UserAssignedDeviceName
-[AVPlayerController(AudioVideoClassification) updateAudioFormats]
availableVideoDynamicRanges
maximumVideoResolution
-[AVTransportBarViewController setElapsedTime:animated:]
com.apple.preferences-sounds
latenightmode
pbsMediaRemoteProxy.volumeControlTargetDeviceType
speakerManager.routes
com.apple.mobilemusicsettings.latenightmode
NowPlayingSound
NowPlayingLanguage
com.apple.TVPAudioVideoSettings.disableLateNightMode
com.apple.TVPAudioVideoSettings.enableLateNightMode
Audio
@"UIColor"16@?0@"UITraitCollection"8
-[AVDigitizerTouchGestureRecognizer reset]
-[AVDigitizerTouchGestureRecognizer touchesCancelled:withEvent:]
-[AVDigitizerTouchGestureRecognizer touchesEnded:withEvent:]
-[AVDigitizerTouchGestureRecognizer touchesBegan:withEvent:]
com.apple.AVKit.scrubbing_session
preliminary_user_delay
interaction_duration
direction_reversal_count
final_seek_delta
final_seek_fraction
@"NSDictionary"8@?0
-[AVPermissiveSwipeGestureRecognizer disableRecognitionOfCurrentTouch]
-[AVPermissiveSwipeGestureRecognizer _fireTouchRestTimeout]
-[AVPermissiveSwipeGestureRecognizer swipeGestureWasRecognized:]
-[AVPermissiveSwipeGestureRecognizer touchesCancelled:withEvent:]
down
-[AVPermissiveSwipeGestureRecognizer touchesEnded:withEvent:]
-[AVPermissiveSwipeGestureRecognizer touchesMoved:withEvent:]
-[AVPermissiveSwipeGestureRecognizer setRequiresStartFromEdge:]
gestureRecognizer
AVxOverlayCellDidInteract
-[AVxHostView didMoveToWindow]
-[AVxHostView didMoveToSuperview:]
AVxHostView.bottom
-[AVxHostView willMoveToSuperview:]
-[AVxCustomOverlayHostViewController didUpdateFocusInContext:withAnimationCoordinator:]
-[AVxCustomOverlayHostViewController _handleMenuTapGesture:]
-[AVxCustomOverlayHostViewController _timeoutDismissal]
-[AVxCustomOverlayHostViewController _dismiss]
-[AVxCustomOverlayHostViewController viewWillAppear:]
-[AVxCustomOverlayHostViewController viewDidLoad]
AVxCustomOverlayHostViewController.constrainWidthToHost
AVxCustomOverlayHostViewController.backdropView
-[AVPictureInPicturePlatformAdapter(Common) _setRoutingVideoToHostedWindow:pictureInPictureViewController:source:]
shouldRoute
-[AVPictureInPicturePlatformAdapter(Common) _updateStatusUsingProposedStatus:]
self.status != AVPictureInPictureControllerStatusProhibited
-[AVPictureInPicturePlatformAdapter(Common) _setStatusAndNotifyDelegateIfNeeded:]
TIME_REMAINING_FORMAT
AVNavigationMarkersGroupNoImagesLeftToLoadNotification
-[AVNavigationMarkersGroup indexOfClosestMarkerPriorOrEqualToDate:]
/Library/Caches/com.apple.xbs/Sources/MobileAVKit_Sim/MobileAVKit-786.2.17/Embedded/TVAVKit/Navigation/AVNavigationMarkersGroup.m
markerLimit == markerFirst
-[AVNavigationMarkersGroup indexOfClosestMarkerPriorOrEqualToTime:]
-[AVNavigationMarkersGroup loadFirstImageSynchronouslyWithTimeout:]
DEFAULT_CHAPTER_TITLE_FORMAT
B24@?0@"NSDate"8d16
-[%@ %@] is deprecated, please migrate to -initWithTitle:timedNavigationMarkers
-[AVAirMessageParts decompressBodyUsingNamedAlgorithm:]
lzma
zlib
lzfse
none
-[AVAirMessageParts decompressBodyUsingAlgorithm:]
-[AVAirMessageParts bodyAsJSON]
-[AVAirMessageParts(AVAirMessages) airMessage]
compression
length
AVPlayerViewControllerVideoPresentationDidBecomeNowPlayingNotification
AVPlayerViewControllerVideoPresentationDidResignNowPlayingNotification
-[AVPlayerViewController _didSelectMediaSelectionOption:withMediaCharacteristic:]
Warning: installing a Menu UITapGestureRecognizer on the root view of AVPlayerViewController is deprecated; clients should implement the delegate method `playerViewControllerShouldDismiss:` instead.
-[AVPlayerViewController _outputObscuredDueToInsufficientExternalProtectionDidChange]
focused
unfocused
-[AVPlayerViewController _stopSpinningAndPlay]
HDCP timer queue
HDCP_REQUIRED_BUT_UNAVAILABLE_ALERT_ACTION_TITLE
HDCP_REQUIRED_BUT_UNAVAILABLE_ALERT_MESSAGE
HDCP_REQUIRED_BUT_UNAVAILABLE_ALERT_TITLE
_showsPlaybackControlsView
-[AVPlayerViewController _handleSelectTapGesture:]
-[AVPlayerViewController _handlePlayPauseTapGesture:]
-[AVPlayerViewController _handlePreviousNavigationMarker]
-[AVPlayerViewController _handleNextNavigationMarker]
-[AVPlayerViewController _handlePlay]
-[AVPlayerViewController _handlePause]
-[AVPlayerViewController _handleTogglePlayPauseCommand]
-[AVPlayerViewController _handleTogglePlayPause]
-[AVPlayerViewController _didChangeFullScreen]
-[AVPlayerViewController _considerDisplayModeSwitchFinishedIfPlaying]
-[AVPlayerViewController _updatePreferredDisplayCriteria]
-[AVPlayerViewController _updatePreferredDisplayCriteriaForAsset:]
/Library/Caches/com.apple.xbs/Sources/MobileAVKit_Sim/MobileAVKit-786.2.17/Embedded/TVAVKit/AVPlayerViewController.m
[[self _containerView] isFullScreen]
preferredDisplayCriteria
-[AVPlayerViewController _clearPreferredDisplayCriteria]
-[AVPlayerViewController _setPreferredDisplayCriteria:]
-[AVPlayerViewController viewDidDisappear:]
-[AVPlayerViewController viewWillDisappear:]
-[AVPlayerViewController viewDidAppear:]
AVPlayerViewControllerTransitionDurationKey
-[AVPlayerViewControllerTransition animationControllerForPresentedController:presentingController:sourceController:]
[presented isKindOfClass:[AVPlayerViewController class]]
-[AVPlayerViewController _becomeNowPlaying]
_isAllowedToBecomeNowPlaying
errorPtr
requiresLinearPlayback=%@; showsPlaybackControls=%@; isFocused=%@
another player view controller is now playing
no player item
-[AVPlayerViewController didUpdateFocusToFocusContainerView:]
-[AVPlayerViewController didUpdateFocusInContext:withAnimationCoordinator:]
enabling
disabling
-[AVPlayerViewController _updateUXState]
-[AVPlayerViewController activateForActivatingApp]
-[AVPlayerViewController deactivateForApplicationSwitcher]
-[AVPlayerViewController _handleMenuTapGestureOther:]
-[AVPlayerViewController _handleMenuTapGestureDismissal:]
-[AVPlayerViewController _handleSeekToTime:]
-[AVPlayerViewController _handleSkipBackwardBy:]
-[AVPlayerViewController _handleSkipForwardBy:]
-[AVPlayerViewController didPressRightArrowDigitizer]
-[AVPlayerViewController didPressLeftArrowDigitizer]
-[AVPlayerViewController didSwipeDown]
-[AVPlayerViewController rotaryGesture:]
-[AVPlayerViewController _swipeUpGesture:]
-[AVPlayerViewController _swipeDownGesture:]
-[AVPlayerViewController _presentCustomOverlayViewController]_block_invoke
-[AVPlayerViewController _presentInteractiveOverlayViewController]
-[AVPlayerViewController loadView]
v16@?0@"_UIRotaryGestureRecognizer"8
B16@?0@"_UIRotaryGestureRecognizer"8
view.userInteractionEnabled
view.fullScreen
@"NSArray"16@?0@"UIView"8
AVUnobscuredContentGuide
com.espn.
Cannot change appliesPreferredDisplayCriteriaAutomatically during full-screen playback!
-[AVPlayerViewController setShowsPlaybackControls:]
-[AVPlayerViewController setPlayer:]
%@ only supports AVPlayer instances that have been initialized with the main queue as the dispatch queue for serializing key-value observations.
com.apple.podcasts
AVShowsPlaybackControls
-[AVPlayerViewController initWithCoder:]
globalUserSettings.rotaryDeviceConnected
playbackControlsViewController.unoccludedBounds
com.apple.AVPlayerViewController
playerController.hasEnabledAudio
playerController.hasEnabledVideo
playerController.hasVideo
playerController.player.outputObscuredDueToInsufficientExternalProtection
playerController.player.currentItem.status
playerController.player.currentItem.nextContentProposal
playerController.player.currentItem.externalMetadata
avkit-
-[AVPlayerViewController dealloc]
-[AVPlayerViewController initWithNibName:bundle:]
AVShowCustomOverlay
SHOW_CUSTOM_INTERACTIVE_OVERLAY_ACCESSIBILITYLABEL
CustomOverlayButton
playerLayerView.videoRect
playerLayerView.readyForDisplay
playerLayerView.videoGravity
-[AVPlayerViewController(AVPlayerViewControllerSubtitleOptions) setRequiresFullSubtitles:]
-[AVPlayerViewController(AVPlayerViewControllerSkippingBehavior) setSkipBackwardEnabled:]
-[AVPlayerViewController(AVPlayerViewControllerSkippingBehavior) setSkipForwardEnabled:]
-[AVPlayerViewController(AVPlayerViewControllerSkippingBehavior) setSkippingBehavior:]
-[AVPlayerViewController(AVPlayerViewControllerPictureInPictureImplementation) pictureInPictureController:didSendPlaybackCommand:]
-[AVPlayerViewController(AVPlayerViewControllerInfoViewsPrivate) setCustomInfoViewControllers:]
-[AVPlayerViewController(AVPlayerViewControllerControls) setPlaybackControlsIncludeInfoViews:]
-[AVPlayerViewController(AVPlayerViewControllerControls) setPlaybackControlsIncludeTransportBar:]
timeRemainingForCurrentAdvertisements
-[AVPlayerViewController(AVContentProposalViewController) setContentProposalViewController:]
-[AVPlayerViewController(AVContentProposal) _replayFromBeginning]
-[AVPlayerViewController(AVContentProposal) presentViewController:animated:completion:]
viewControllerToPresent != [self presentedViewController]
-[AVPlayerViewController(AVContentProposal) _didPlayToEnd]
-[AVPlayerViewController(AVContentProposal) _scheduleNextContentProposal]
nowPlayingPlaybackControlsViewController.alternateThumbnailStreamURL
AVInfoMenuControllerMenuCell
-[AVInfoMenuController setSelectedViewController:]
/Library/Caches/com.apple.xbs/Sources/MobileAVKit_Sim/MobileAVKit-786.2.17/Embedded/TVAVKit/InfoPanels/Menu/AVInfoMenuController_TV.m
index != NSNotFound
InfoMenu.panelWrapperView
Divider
DividerContainer
SubtitleCellIdentifier
identifier
extendedLanguageTag
localeIdentifier
time
dataType
startDate
-[AVMetadataItem(AVAirSerialization) airDictionaryRepresentation]
b64:%@
+[AVMetadataItem(AVAirSerialization) itemWithAirDictionaryRepresentation:]
b64:
v16@?0@8
v16@?0@"<AVBehaviorContext>"8
v16@?0@"<AVBehavior>"8
AVMore
More
AVSummaryText
error from convolution %ld
-[%@ %@:%f] blur value should be in [0..1]
v48@?0^{CGContext=}8{CGRect={CGPoint=dd}{CGSize=dd}}16
RottenTomatoesFresh
RTFresh
RottenTomatoesCertifiedFresh
RTCertified
RottenTomatoesRotten
RTRotten
AVTomatoRatingLabel
AVTomatoRatingIcon
AVPictureInPictureControllerWillStartNotification
AVPictureInPictureControllerDidStartNotification
AVPictureInPictureControllerWillStopNotification
AVPictureInPictureControllerDidStopNotification
AVPictureInPictureControllerPlaybackStateDidChangeNotification
AVPictureInPictureControllerPlaybackStateIsPlayingKey
AVPictureInPictureControllerContentSourceKey
v32@?0@"AVPictureInPictureController"8@16@"AVKeyValueChange"24
videoRect
player
-[AVPictureInPictureController pictureInPicturePlatformAdapter:statusDidChange:fromStatus:]
shouldRetainSource
self.sourceIfRetainedDuringPictureInPicturePlayback == nil
-[AVPictureInPictureController pictureInPicturePlatformAdapter:prepareToStopForRestoringUserInterface:]
-[AVPictureInPictureController setPictureInPicturePossible:]
pictureInPicturePossible
-[AVPictureInPictureController setRequiresLinearPlayback:]
requiresLinearPlayback
-[AVPictureInPictureController setCanStartAutomaticallyWhenEnteringBackground:]
canStartAutomaticallyWhenEnteringBackground
-[AVPictureInPictureController setMicrophoneEnabled:]
microphoneEnabled
-[AVPictureInPictureController setAllowsPictureInPicturePlayback:]
allowsPictureInPicturePlayback
-[AVPictureInPictureController startPictureInPicture]
playerController.contentDimensions
-[AVPictureInPictureController _commonInitWithSource:]_block_invoke
owner.isOtherPictureInPictureActive
anyPictureInPictureActive
%@ is not a valid initializer. You must call -[%@ initWithPlayerLayer:].
AVPlayerControllerCurrentTimeJumpedNotification
AVPlayerControllerPlaybackDidEndNotification
AVPlayerControllerContentDimensionsChangedNotification
AVPlayerControllerSelectedMediaOptionDidChangeNotification
AVPlayerControllerDidBeginScanningNotification
AVPlayerControllerDidEndScanningNotification
AVPlayerControllerScanningDirectionKey
availableTrackAssociationTypes
mediaCharacteristics
metadata
mediaType
languageCode
enabled
commonMetadata
availableMetadataFormats
nominalFrameRate
assetCache
availableMediaCharacteristicsWithMediaSelectionOptions
compatibleWithAirPlayVideo
composable
hasProtectedContent
-[AVPlayerController _updateRateForScrubbingAndSeeking]
Reducing Resources for Picture in Picture
AVPlayerControllerResourceReductionIdentifier
v16@?0@"BSSimpleAssertion"8
-[AVPlayerController endReducingResourcesForPictureInPicturePlayerLayer:]
-[AVPlayerController beginReducingResourcesForPictureInPicturePlayerLayer:]
shouldRemovePlayer
PIPStashPeakBitRate
PIPStashBufferDuration
-[AVPlayerController externalPlaybackAirPlayDeviceLocalizedName]
EXTERNAL_PLAYBACK_DEVICE_NAME_NIL
-[AVPlayerController updateMinMaxTiming]
-[AVPlayerController seekOrStepByFrameCount:]
-[AVPlayerController actuallySeekToTime]
com.apple.motion.notserializable
-[AVPlayerController setVolume:]
-[AVPlayerController setPlaying:]
-[AVPlayerController setRate:]_block_invoke
com.apple.videos
isPiPAvailable
audioFormats
player.externalPlaybackActive
seekToTimeInternal
player.rate
player.currentItem.loadedTimeRanges
player.currentItem.playbackBufferEmpty
player.currentItem.playbackLikelyToKeepUp
timeControlStatus
hasLiveStreamingContent
player.currentItem.seekableTimeRanges
currentAssetIfReady
-[AVPlayerController _queuePlayer]
v16@?0@"AVPlayerController"8
currentAudioMediaSelectionOption
hasEnabledAudio
player.currentItem.duration
readyToPlay
player.currentItem.asset
v32@?0@"AVPlayerController"8@16@"AVKeyValueChange"24
contentDimensions
-[AVPlayerController dealloc]
v32@?0@"AVPlayerController"8@16@"NSNotification"24
v32@?0{?=qiIq}8
-[AVPlayerController initWithPlayer:]
com.apple.avkit.playerControllerAssetInspectionQueue
com.apple.avkit.seekQueue
playingOnExternalScreen
hasEnabledVideo
bestAvailableVideoResolution
bestAvailableVideoRange
hasVideo
pictureInPictureSupported
externalPlaybackType
player.airPlayVideoActive
playingOnSecondScreen
externalPlaybackActive
player.allowsExternalPlayback
atMinTime
atMaxTime
canSeek
player.currentItem.canPlayFastReverse
player.currentItem.canPlayFastForward
touchBarRequiresLinearPlayback
hasSeekableLiveStreamingContent
player.timeControlStatus
completelySeekable
player.currentItem.seekableTimeRangesLastModifiedTime
player.currentItem.liveUpdateInterval
maxTiming
minTiming
player.currentItem.hasEnabledVideo
player.currentItem.hasVideo
player.currentItem.hasEnabledAudio
contentDuration
minTime
currentTime
maxTime
player.currentItem.forwardPlaybackEndTime
player.currentItem.reversePlaybackEndTime
timing
presentationSize
player.muted
player.volume
rate
player.error
player.currentItem.status
player.status
-[AVPlayerController(AVPlayerControllerExternalPlaybackSupportInternal) setHandlesAudioSessionInterruptions:]
handlesAudioSessionInterruptions
player.usesExternalPlaybackWhileExternalScreenIsActive
AVDisplayManagerModeSwitchStartNotification
AVDisplayManagerModeSwitchEndNotification
AVDisplayManagerModeSwitchSettingsChangedNotification
AVDisplayManagerConsiderDisplayModeSwitchFinished
*** Do not create AVDisplayManager directly, use -[UIWindow avDisplayManager]
-[AVAirMessageNotificationCenter airTransportInputDidClose:]
-[AVAirMessageNotificationCenter airTransport:didReceiveObject:]
v24@?0q8@"NSDictionary"16
-[AVAirMessageNotificationCenter airTransport:didReceiveObject:]_block_invoke
-[AVAirMessageNotificationCenter bonjourService:didCloseChannel:]
currentItemIdentifier
-[AVAirMessageNotificationCenter bonjourService:didAcceptConnectionChannel:]
-[AVAirMessageNotificationCenter handleCommandMessage:completion:]
com.apple.avkit.AirMessageNotificationCenter
do not create your own AVAirMessageNotificationCenter
com.apple.TVAirPlay
AVNowPlayingPlaybackControlsViewControllerScrubbingBeganNotification
AVNowPlayingPlaybackControlsViewControllerScrubbingEndedNotification
-[AVNowPlayingPlaybackControlsViewController heartbeat:]
AVScrubberVelocityUpperBound
v16@?0d8
v16@?0@"AVFrameSet"8
creationDate
-[AVNowPlayingPlaybackControlsViewController _setPlaybackControlsState:animated:]
-[AVNowPlayingPlaybackControlsViewController setPlaybackControlsState:visibleState:animated:]
-[AVNowPlayingPlaybackControlsViewController _setControlsContainerVisible:animated:]
-[AVNowPlayingPlaybackControlsViewController _setControlsContainerVisible:animated:]_block_invoke
-[AVNowPlayingPlaybackControlsViewController stopFFRWWithBounceBack:]
-[AVNowPlayingPlaybackControlsViewController startFFRWRate:]
v40@?0{?=qiIq}8@"UIImage"32
-[AVNowPlayingPlaybackControlsViewController startFFRWRate:]_block_invoke
Scanning delegate calling invalid imageBlock
Error: Scanning delegate calling imageBlock after scanning stopped.
custom
standard
playbackControlsState
v32@?0@"AVPlayerItem"8{CGSize=dd}16
-[AVNowPlayingPlaybackControlsViewController _handleLeftRightTouchPressGesture:]
-[AVNowPlayingPlaybackControlsViewController handleB39LongPressGesture:]
-[AVNowPlayingPlaybackControlsViewController didPressSelectB39]
-[AVNowPlayingPlaybackControlsViewController didPressDownArrowB39]
-[AVNowPlayingPlaybackControlsViewController didLongPressRightArrowB39]
-[AVNowPlayingPlaybackControlsViewController didLongPressLeftArrowB39]
-[AVNowPlayingPlaybackControlsViewController didPressRightArrowB39]
-[AVNowPlayingPlaybackControlsViewController didPressLeftArrowB39]
-[AVNowPlayingPlaybackControlsViewController mediaRemoteSeekToDisplayTime:]
-[AVNowPlayingPlaybackControlsViewController mediaRemoteSkipBy:]
-[AVNowPlayingPlaybackControlsViewController skipToNextNavigationMarker]
-[AVNowPlayingPlaybackControlsViewController _skipDisplayTimeByAdding:seeking:]
-[AVNowPlayingPlaybackControlsViewController channelInterstitialDidSwipeRight:]
-[AVNowPlayingPlaybackControlsViewController channelInterstitialDidSwipeLeft:]
-[AVNowPlayingPlaybackControlsViewController _currentItemDidChange]_block_invoke_2
unoccludedBounds
-[AVNowPlayingPlaybackControlsViewController rotaryGestureDetected:]
-[AVNowPlayingPlaybackControlsViewController rotaryGestureFailedToBegin:]
-[AVNowPlayingPlaybackControlsViewController rotaryGestureWillBegin:]
-[AVNowPlayingPlaybackControlsViewController _enableOrDisableScrubbingGestureRecognizer]
disabled
-[AVNowPlayingPlaybackControlsViewController touchesCancelled:]
-[AVNowPlayingPlaybackControlsViewController touchesEnded:]
-[AVNowPlayingPlaybackControlsViewController touchesBegan:]
-[AVNowPlayingPlaybackControlsViewController _isTouchingRemote]
-[AVNowPlayingPlaybackControlsViewController updateHintsForEvent:]
-[AVNowPlayingPlaybackControlsViewController showHintBriefly:]
-[AVNowPlayingPlaybackControlsViewController clearHintAfterDelay]
-[AVNowPlayingPlaybackControlsViewController clearHintIfMatching:]
-[AVNowPlayingPlaybackControlsViewController didReceiveMemoryWarning]
-[AVNowPlayingPlaybackControlsViewController _dismissInteractiveOverlay]
-[AVNowPlayingPlaybackControlsViewController _presentInteractiveOverlay]
-[AVNowPlayingPlaybackControlsViewController _presentInteractiveOverlay]_block_invoke
-[AVNowPlayingPlaybackControlsViewController _swipeLeftOrRight:]
avkitAllowNonLiveChannels
-[AVNowPlayingPlaybackControlsViewController _presentChannelInterstitialFromSwipeDirection:]_block_invoke
-[AVNowPlayingPlaybackControlsViewController loadView]
V:|-(0)-[controlsContainerView]-(0)-|
H:|[controlsContainerView]|
controlsContainerView
HINT_TO_REVEAL_CUSTOM_OVERLAY
HINT_TO_REVEAL_INFO
Media Controls
transportBar
AVKit.controlsContainerView
AVKit.AVFloatingPlaybackControlsView root
-[AVNowPlayingPlaybackControlsViewController resetToPausePoint]
-[AVNowPlayingPlaybackControlsViewController resetToPausePointWithoutPlaying]
-[AVNowPlayingPlaybackControlsViewController _resetToPausePointResumingPlayback:]
keyPath
-[AVNowPlayingPlaybackControlsViewController _updateLoadingAndErrorIndicators]
-[AVNowPlayingPlaybackControlsViewController didChangePlayerController]
v24@?0@"AVTimeRange"8d16
v16@?0@"AVTimeRange"8
-[AVNowPlayingPlaybackControlsViewController isScrubbingSupported]
-[AVNowPlayingPlaybackControlsViewController cancelUserDidInteract]
-[AVNowPlayingPlaybackControlsViewController userDidInteract]
-[AVNowPlayingPlaybackControlsViewController _timerFiredForHidingPlaybackControls:]
-[AVNowPlayingPlaybackControlsViewController hidePlaybackControlsAfterUserInteraction]
-[AVNowPlayingPlaybackControlsViewController dealloc]
-[AVNowPlayingPlaybackControlsViewController initWithCoder:]
overlayViewController.overlayPresented
transportBar.scrubPlayerItem.status
playbackOptions.requiresLinearPlayback
playerController.player.currentItem.timebase
playerController.programStartDate
playerController.programEndDate
playerController.player.currentItem.overrideForReversePlaybackEndTime
playerController.player.currentItem.overrideForForwardPlaybackEndTime
playerController.reversePlaybackEndTime
playerController.forwardPlaybackEndTime
playerController.timeRangeSeekable
playerController.player.presentationSize
playerController.player
playerController.player.error
playerController.player.currentItem.playerItemForScrubbing.status
playerController.player.currentItem.playerItemForScrubbing
playerController.player.currentItem.playbackLikelyToKeepUp
frameSet.canFetchFrames
frameSet.ready
playerController.primaryNavigationMarkersGroup
playerController.isSeekingTV
playerController.player.reasonForWaitingToPlay
playerController.effectiveRateNonZero
playerController.currentLegibleMediaSelectionOption
playerController.currentAudioMediaSelectionOption
playerController.player.timeControlStatus
playerController.player.currentItem.duration
-[AVNowPlayingPlaybackControlsViewController initWithNibName:bundle:]
Application
CFBundleDisplayName
MEDIA_SELECTION_OPTION_AUTO_TITLE
MEDIA_SELECTION_OPTION_OFF_TITLE
PanelContent.contentView
InfoPanelContentVC.backdropView
PanelContent.view
Sizing Cell
Subtitles
labelValue
receiverPairingIdentity
deviceName
local.
-[AVBonjourService netServiceDidPublish:]
-[AVBonjourService _restartService]
-[AVBonjourService _restartService]_block_invoke
-[AVBonjourService start]
<%@ %p: %@>
-[AVBonjourService dealloc]
-[AVBonjourService initWithNetServiceType:]_block_invoke
managedConfigDeviceID
systemBuild
MPNowPlayingInfoPropertyElapsedPlaybackTime
MPNowPlayingInfoPropertyPlaybackRate
MPMediaItemPropertyPlaybackDuration
AVMediaRemoteManagerNowPlayingInfoCurrentPlaybackDate
AVMediaRemoteManagerNowPlayingInfoHasDescription
* * * AVKit will not transfer %@ and may override its value!
* * * AVKit will override %@!
MPNowPlayingInfoPropertyServiceIdentifier
MPNowPlayingInfoPropertyExternalContentIdentifier
MPNowPlayingInfoPropertyExternalUserProfileIdentifier
MPNowPlayingInfoPropertyPlaybackProgress
* * * AVKit for tvOS clients should not set MPNowPlayingInfoCenter fields directly; use AVPlayerItem externalMetadata instead (see <AVKit/AVPlayerItem.h>)
MPNowPlayingInfoCenter
v16@?0@"UIImage"8
v16@?0@"NSData"8
v12@?0B8
com.apple.avkit.
com.apple.avkit.[%@].s%d
.s%d
v24@?0^v8^{__CFError=}16
v16@?0^v8
v16@?0^{__CFError=}8
com.apple.avkit.%d.%x
installing
uninstalling
-[AVMediaRemoteManager setInstallPlaybackQueueCallbacks:]
true
-[AVMediaRemoteManager currentPlayerPath]
-[AVMediaRemoteManager currentPlayerPath]_block_invoke
player-%ld
playerViewController.playerController.player.currentItem.status
playerViewController.playerController.hasVideo
playerViewController.playerController.player.currentItem.interstitialTimeRanges
playerViewController.playerController.hasLiveStreamingContent
playerViewController.playerController.contentDuration
playerViewController.playerController.rate
-[AVMediaRemoteManager initWithPlayerViewController:]
playerViewController.playerController.primaryNavigationMarkersGroup
^v24@?0q8^v16
v32@?0^v8^v16@?<v@?^{__CFError=}>24
^v16@?0q8
playerViewController
-[AVMediaRemoteManager _stopPublishing]
-[AVMediaRemoteManager _startPublishing]
AVKitTitleKey
AVKitMediaRemoteIdentifier
%@-%@-%@
+[AVMediaRemoteManager(PictureInPicture) setPictureInPictureActive:forPlayer:]
+[AVMediaRemoteManager(PictureInPicture) setPictureInPictureActive:forPlayer:]_block_invoke
inactive
ACTIVE
-[AVRatingProviders findRatingString:domain:country:shouldPreferTVDomain:]
ratingString
_bestMatch
/Library/Caches/com.apple.xbs/Sources/MobileAVKit_Sim/MobileAVKit-786.2.17/Embedded/TVAVKit/Utilities/AVRatingProviders.m
[countryCode length]
_bestMatchForCountry
[countryCode length] > 0
_bestMatchForDomain
[countryCode length] > 0 && domain != AVMediaContentRatingDomainUnknown
ratingTVShows
rating
rank
ratingMovies
domain
-[AVRatingProviders initWithFileURL:]
RatingProviders.plist
AVContentRestrictionsBlockedNotification
-[AVContentRestrictionsViewController validateMediaContentRating:allowInteraction:completion:]
/Library/Caches/com.apple.xbs/Sources/MobileAVKit_Sim/MobileAVKit-786.2.17/Embedded/TVAVKit/View Controllers/AVContentRestrictionsViewController.m
[self requestToken]
AVContentRestrictionsView
v16@?0@"UIGraphicsImageRendererContext"8
AVKitShowDiagnosticAids
-[AVContentRestrictionsViewController setBlockedPlayer:]
blockedPlayer.rate
v16@?0@"AVContentRestrictionsViewController"8
com.hbo.hbonow
com.hbo.hbogo
requestToken
NavigationTextCellIdentifier
NavigationImageCellIdentifier
AVKit
%@ (%p) %@
v16@?0@"NSDictionary"8
None
UpperLeft
UpperMiddle
UpperRight
LowerLeft
LowerMiddle
LowerRight
+[_AVInfoMenuCellBlurEffect darkModeEffect]
/Library/Caches/com.apple.xbs/Sources/MobileAVKit_Sim/MobileAVKit-786.2.17/Embedded/TVAVKit/InfoPanels/Menu/AVInfoMenuCell_TV.m
[result isKindOfClass:self]
v16@?0@"<UIFocusAnimationContext>"8
v32@?0@8@16@"AVKeyValueChange"24
Full Screen Info Panel Description
_avairtvui._tcp.
AVKitAir/1
-[AVAirMessage messageDataRepresentation]
mimetype
languagetag
application/octet-stream
%@:%@
item
messagetype
-[AVAirMessage jsonDataRepresentation]
 %@: %@
type
-[AVAirMessage initWithMessageType:itemIdentifier:dictionaryRepresentation:]
+[AVAirMessage messageWithParts:]
+[AVAirMessage _nameForDataCompressionAlgorithm:]
+[AVAirMessage _decompressBodyData:forCompressionAlgorithm:]
+[AVAirMessage isAirMessagingEnabled]_block_invoke
airmessaging
build
sender
kern.osversion
tvOS
-[AVMediaPlayerDelegate _handleDisableLegibleLanguageOptionCommand]
-[AVMediaPlayerDelegate _handleEnableLanguageOptionCommandWithLegibleOption:]
auto
-[AVMediaPlayerDelegate _handleDisableAudibleLanguageOptionCommand]
-[AVMediaPlayerDelegate _handleEnableLanguageOptionCommandWithAudibleOption:]
-[AVMediaPlayerDelegate handleSpecialSeekBackward:]
-[AVMediaPlayerDelegate handleSpecialSeekForward:]
-[AVMediaPlayerDelegate handleChangePlaybackPosition:]
-[AVMediaPlayerDelegate handleDisableLanguageOption:]
-[AVMediaPlayerDelegate handleEnableLanguageOption:]
-[AVMediaPlayerDelegate handleChangePlaybackRate:]
-[AVMediaPlayerDelegate handleSeekBackward:]
-[AVMediaPlayerDelegate handleSeekForward:]
-[AVMediaPlayerDelegate handleSkipBackward:]
-[AVMediaPlayerDelegate handleSkipForward:]
-[AVMediaPlayerDelegate handleStopCommand:]
-[AVMediaPlayerDelegate handlePlayPauseCommand:]
-[AVMediaPlayerDelegate handlePauseCommand:]
-[AVMediaPlayerDelegate handlePlayCommand:]
v28@?0I8^{__CFDictionary=}12@?<v@?^{__CFArray=}>20
void *_AddCommandHandlerRedirects(MRPlayerPath *__strong)_block_invoke
v20@?0I8^{__CFArray=}12
MPRemoteCommandCenter
PineBoard
Third_Party_PIP
AVKitErrorDomain
AVResolution
AVInterval
AVPlayerController
playerController.minTime
playerController.minTiming
playerController.maxTime
playerController.maxTiming
playerController.timing
playerController.seekableTimeRanges
playerController.contentDuration
targetTime
playerController.seekToTime
playerController.seeking
Full Screen Loading Spinner
playerLayoutGuide
AVContentProposalPlayerLayoutGuide
%@ does not support unarchiving from a nib.
-[AVPictureInPictureViewController dealloc]
-[AVPictureInPictureViewController initWithPictureInPicturePlayerLayerView:]
v16@?0@"NSNotification"8
v32@?0@8@16@24
v48@?0@8@"NSString"16@24@32@"NSString"40
-[AVStandardScanningDelegate playerViewController:scanFromElapsedTime:rate:imageBlock:]
/Library/Caches/com.apple.xbs/Sources/MobileAVKit_Sim/MobileAVKit-786.2.17/Embedded/TVAVKit/Playback/AVStandardScanningDelegate.m
false
-[%@ %@] currentScanningTimeInterval is NAN
-[%@ %@] was called when scanning inactive, or without an imageBlock
-[%@ %@] still firing after player was deallocated!
-[AVStandardScanningDelegate startDisplayLink]
-[AVStandardScanningDelegate invalidate]
com.apple.avkit
*** -%@ only defined for abstract class.  Define %c[%@ %@]!
*** -%@ cannot be sent to an abstract object of class %@: Create a concrete instance!
time stamp
*** initialization method -%@ cannot be sent to an abstract object of class %@: Create a concrete instance!
v16@?0Q8
v8@?0
-[AVContentRestrictionsService shouldRevalidateMediaContentRating:validatedRating:validatedDate:]
MediaContentValidationExpirationTimeInterval
v16@?0@"UIAlertAction"8
RESTRICTIONS_BLOCKED_ACTION_TITLE
RESTRICTIONS_BLOCKED_BY_PROFILE
com.apple.avkit.ContentRestrictionsService
AVKitAirResponse/1
response-status
-[AVAirMessageResponse bodyData]
%@ status %ld; "%@"
response-description
+[AVAirMessageResponse messageWithVersion:headers:bodyData:]
pip.remove
pip.enter
BOOL _isScreenZoomed()
/System/Library/PrivateFrameworks/ZoomServices.framework/ZoomServices
/System/Library/PrivateFrameworks/ZoomServices.framework/Contents/MacOS/ZoomServices
ZoomServices
-[AVxCollectionViewController collectionView:shouldUpdateFocusInContext:]
v16@?0q8
q24@?0@"AVxOverlayToolCell"8@"AVxOverlayToolCell"16
-[AVxCollectionViewLayout _loadGroups]
/Library/Caches/com.apple.xbs/Sources/MobileAVKit_Sim/MobileAVKit-786.2.17/Embedded/TVAVKit/InteractiveOverlay/AVxCollectionViewLayout.m
[delegate respondsToSelector:@selector(collectionView:layout:controlItemForIndexPath:)]
PictureInPictureIndicatorLarge
-[AVPlayerLayer(AVPictureInPictureContentSource) avkit_stopRoutingVideoToPictureInPictureViewController:]
self.isPIPModeEnabled
-[AVPlayerLayer(AVPictureInPictureContentSource) avkit_startRoutingVideoToPictureInPictureViewController:]
 "%@"
NowPlayingSwipeRight
NowPlayingSwipeLeft
NowPlayingInfo
NowPlayingSwipeUp
routes
B32@?0@"MPAVRoute"8Q16^B24
v16@?0@"NSArray"8
q24@?0@"MPAVRoute"8@"MPAVRoute"16
-[AVSpeakerManager selectRoute:withPassword:replacingSelection:]
v16@?0@"NSError"8
-[AVSpeakerManager selectRoute:withPassword:replacingSelection:]_block_invoke
Remove
AVSpeakerManager
MPAVRoutingController
Unable to find class %s
/System/Library/Frameworks/MediaPlayer.framework/MediaPlayer
/System/Library/Frameworks/MediaPlayer.framework/Contents/MacOS/MediaPlayer
MPAVOutputDeviceRoutingDataSource
-[AVPlayerController(AVMediaSelection) _setMediaOption:mediaCharacteristic:]
-[AVPlayerController(AVMediaSelection) _enableAutoMediaSelection:]
-[AVPlayerController(AVMediaSelection) _disableLegibleMediaSelectionOptions:]
-[AVPlayerController(AVMediaSelection) _ensureUserCaptionDisplayType:]
q24@?0@8@16
B8@?0
avkit_persistentIdentifier
-[AVPlayerController(AVMediaSelection) selectedMediaOptionMayHaveChanged:]
player.appliesMediaSelectionCriteriaAutomatically
-[AVPlayerController(AVMediaSelection) currentLegibleMediaSelectionOption]
-[AVPlayerController(AVMediaSelection) setLegibleMediaSelectionOptions:]
-[AVPlayerController(AVMediaSelection) setAudioMediaSelectionOptions:]
MediaSelectionOptionsPersistentID
legibleMediaSelectionOptions
audioMediaSelectionOptions
hasLegibleMediaSelectionOptions
hasAudioMediaSelectionOptions
+[AVPlayerController(AVMediaSelection) canonicalLanguageIdentifierFromString:]
NilString
%s %{public}@: ErrorOccurred
%s %{public}@: OpenCompleted
%s %{public}@: EndEncountered
%s %{public}@: HasSpaceAvailable
%s %{public}@: HasBytesAvailable
%s inputStream hasBytesAvailable
%s ... but the data couldn't be read
%s message data failed to deserialize
%s unexpected message/response received; delegate not expecting messages
%s an error prevented bytes from being read! (%{public}@)
%s the input data disappeared! the input stream has closed.
%s the input data disappeared! Are multiple clients trying to read from this stream? (status = %d)
%s shutting down streams %p and %p
%s failed to transform response object (%@)
%s failed to transform message object (%@)
%s sending %ld bytes...
%s ...succeeded, now waiting for/reading the response...
%s writing %ld bytes...
%s wrote %ld bytes
%s write error occurred
%s write error: stream closed
%s response never received
%s bye bye
%s Starting event thread..
%s Ending event thread..
%s value does not implement AVMessageTransformerProtocol
%s value not represented by NSData (%@)
Invalid track type for frame stepping.
Invalid input base frame time.
%s notify_register_check(%s) failed (%d)
%s %s has state %lld (status %d)
%s %s passed state = %lld (status %d)
_remoteTouchSurfaceType is %s
%s trackingMode is now %{public}@
%s TrackingMode is set to an unrecognized value (%@)
%s Leaving interstitial %{public}@
%s [interstitial] continuing at %.1f
%s Entering interstitial %{public}@
%s timeRange = %{public}@
skipInterstitialTimeRangeBlock not set; providing default skipping behavior
skipInterstitialTimeRange seek complete (finished = %@)
%s time %.1f; interstitialTimeRangeInProgress = %@, timeRange = %@
%s [interstitial] Redirecting playback to %{public}@ to enforce policy
Updating interstitial time ranges: %@
%s Flushing cached images due to memory warning
%s *** No frames in frameSet
%s FAILED to fetch frame for time %.1f sec because %{public}@
%s FAILED to fetch frame for time %.1f sec because %@%@
actualTime must be less than or equal to the requested time!
%s *** %{public}@.framesOnScreenNow is not set
%s physicallyMovedScrubberAway = %@, desired = %.3f, actual = %.3f; saved = %.3f
showing clonedPlayerView
showing scrubPlayerView
showing scrubImageView
%s scrubPlayerItem: %@
%s clonedPlayer: %@
%s leftAlpha: %f rightAlpha: %f
Gesture info is expected for AVTransportBarScrubModeRotary
%s show rotary needle
%s hide rotary needle
%s hint: %ld
%s Calculated offset %f
%s displaysRemainingTime: %d
%s displaysCurrentTime: %d
%s duration: %f
currentTimeInterval: %f
%s update thumbnail
%s elapsedTimeAlpha: %f remainingTimeAlpha: %f startTimeAlpha: %f
%s flooredTimeRemaining should always be <= 0.0; is currentTimeInterval wrong? %.f
%s resetToPauseMarker: %d animated: %d savedTimeInterval: %f
%s : %@
settingCurrentTimeInterval for i-frame sync (requested %{public}@)
%s NOT updating available fraction right now, because the scrubber is coasting!
%s NOT updating available fraction right now, because the user is actively scrubbing!
%s unusable: %d
%s loading: %d
%s startDate: %@
%s live: %d
%s hidden: %d animated: %d
%s attachment range size changed (from %.7f to %.7f)
%s Creating/rebuilding dynamic animator
%s tension --> %.2f;  constraint --> %.1f
%s frame: (%f, %f, %f, %f)
setMapDate:toTime: expects startDate to be valid. Did the caller want setMapTime:toDate: instead?
setMapDate:toTime: is changing _startTime to NAN!
%s There's a loadedTimeRange that doesn't respond to -CMTimeRangeValue (<%{public}@ %p>)
startPiP.isEnabled = %s; pipController = %{public}@, possible = %s, allowed = %s; haveReadyPlayerItem = %{public}@
The Start PiP button was pressed. Now Playing: %{public}@
Unable to start PiP because we lack a controller (now playing: %@)
The Stop PiP button was pressed.
The Cancel PiP button was pressed.
requestSeekToDate expected startAndEndDates
%s targetAssetTime: %f seekReason: %ld playWhenReady: %d
%s pauseTime: %f
shouldPause allowedToPause: %d
%s time: %f
shouldPlayFromTime: %f allowedToPlay: %d adjustedTime: %f
%s date: %@ reason: %ld
shouldSeekToDate: %{time_t}ld adjustedDate: %{time_t}ld allowedToSeek: %d
%s time: %.3f reason: %ld
shouldSeekToTime: %f allowedToSeek: %d adjustedTime: %f
requestSeekToTime: original time %.2f; final seek time %.2f
seekToTime:completionHandler: seek (to %@) finished: %s
seekToTime:completionHandler: seek (to %.3f) finished: %s
AVPlayerController_TV: %@ wants to seekToTime %.3f
-[AVPlayerController <%p> shouldContinuePlaybackInBackground (for %@): avkitMediaType = %d
The client specified a start date %{time_t}ld later than the currentDate: %{time_t}ld
The current date is now within the bounds of the specified startDate %{time_t}ld
SeekableTimeRanges changed {%f, %f} -> {%f, %f}.
Not an event stream.
%s not dismissing after all (isBeingDismissed = %s)
%s %{public}@ --> %{public}@
![self isBeingDismissed]
Not already presented!
interstitial presentation animation complete (finished = %@)
%s isDisplayCriteriaMatchingEnabled changed to %@
%s mode switch in progress: %d
%s criteria = %{public}@ [scene %{public}@]
unexpected CMVideoDynamicRange value (%d)
%s Requesting display configuration %{public}@
%s imageWidthConstraint constant = %.1f, imageWidthHeightConstraint = %.1f (imageAspectRatio = %.2f, title = '%@', proxy = %@, image = %@)
Cross-dissolving info cell image %p
Cell installing placeholder image %p
%s setting external poster artwork
%s setting external metadata
%s setting navigation markers
%s setting interstitial time ranges
%s expected callback to be triggered and playbackRestrictionsAuthorizationToken cleared!
%s requestToken %@
Client is setting nonatomic AVPlayerItem property %{public}@ from a secondary thread!
Did not expect restrictionValue %d
%s Starting AVAirMessageNotificationCenter...
%s set to %d
New StartDate: %{time_t}ld New EndDate: %{time_t}ld
NOT becoming full screen, even though the size is right, because our origin is wrong. Scheduling re-check...
%s Delayed change to fullscreen status
%@ should be called from a background thread
%s Setting mica color: (R: %.2f G: %.2f B: %.2f Alpha: %.2f) and state: %@.
%s %s %s
Unexpectedly missing URL for CAML file. %@
%s translation = %@, offset = %.3f,%.3f; adjusted = %.3f,%.3f; tension = %@
%s swipe down
%s menu button pressed
viewWillAppear: presenting AVxOverlayViewController
-[AVxOverlayViewController viewWillAppear:] Expect to either have a parent view controller or to be presented
%s starting hide animation
%s not animating; settings scales to 0
%s finished animation; settings scales to 0
%s showAnimating:%@  not showing because isVisible already!
%s Showing, but no buttons are enabled, so nothing will be visible!
%s animating, scaling to 0 to prepare
%s animation did not finish
%s No buttons are enabled!
%s I do not handle it. Let's try our nextResponder, %@!
Downgrading range; preferred = %{public}@; current = %{public}@
audio formatDesc = %@
%s format = %d; channels = %d
Best available video resolution %d, best available video range %d
%s settingCurrentTimeInterval
Updating available speakers in panel
pbsMediaRemoteProxy.volumeControlTargetDeviceType changed
speakerManager.routes changed
AVInfoPanelAudioViewController viewDidLayoutSubviews
%s isTouching will be inaccurate until the user removes their finger from the remote!
%s  %@
*** Adding touch target during touch! This target will receive moved/ended/cancelled events without a begin.
didMoveWithTranslation:velocity: called without matching call to willMoveWithTranslation:velocity:
scrubbing analytics: Recording directional reversal; new velocity is %.2f; translation = %.2f
transport bar has no time
Sending scrubbing analytics event (preliminaryUserDelay = %.2f, interactionDuration %.2f, reversalCount %ld, finalSeekDelta %.1f, fraction %.4f
%s %d
%s Resetting [%d] (%d)
%s Failing; minimumRestTimeBeforeSwipe not exceeded
%s Failed; UIKit recognizer failed (%d)
%s Failed; touches cancelled (%d)
%s Failed (%s); touches did not match (%d)
%s ignoring active touch
%s  --> %s
%s postponed; the user is still touching
%s Whoops. We do not have a hosted view controller. Can't load what we don't have.
%s We don't know how tall this view controller wants to be!
%s current status: %ld -> proposed status: %ld
%s  newStatus: %ld
%s image failed to load in time (status %d); chapter navigation may be temporarily disabled
%{public}@: '%@' Image aspect ratio differs from its proxy aspect ratio
 -- just resizing, because the difference is very slight.
 -- aspect-filling to fit.
%s failed to decompress data; algorithm name '%{public}@' is not recognized
%s failed to decompress data (%{public}@)
%s JSON deserialization failed: %{public}@
%s no class registered for version '%{public}@'
%s class %{public}@ does not implement messageWithParts:
%s option %{public}@
Delegate indicated we should not handle dismissal
Automatic dismissal: dismissing the AVPlayerViewController
Automatic dismissal: popping the AVPlayerViewController
the candidate menu tap gesture recognizers are %@
Firing client menu gesture recognizer (%@)
-- failed to trigger client gesture recognizer %p --
We are unable to handle dismissal automatically, and the delegate did not implement playerViewControllerShouldDismiss: and have it return YES, AND we could not identify the client's menu tap gesture recognizer.
We are unable to handle dismissal automatically, and the delegate did not implement playerViewControllerShouldDismiss: and have it return YES!
%s Pausing due to obscuration
%s Obscuration ended; app state is %d; view is %s
state %ld
%s %@ (UIDigitizerTapGestureRecognizer), %@ (_panGestureRecognizer)
%s disabled
pause: user interaction is disabled
pausing is disabled
HDCP unavailable
_containerView.isFullScreen = %@
%s denied: %{public}@
_isAllowedToBecomeNowPlaying: %{public}@ is active Picture in Picture
%s  view gained focus: %@
%s gaining focus: %@
%s losing focus to %@
isFullUXEnabled changing to %s
resigning Now Playing: %{public}@
%s %s rotary gesture
%s becoming NowPlaying (app reactivated)
isPlaying: %s
touchPosition: %ld (%@)
unrecognized touchPosition
to time %.2f
%s Not seeking, timeInterval is bad (%f)
delta %.2f
%s Not skipping, because playbackControlsState = .Info
%d tap(s)
showing controls
toggling aspect ratio
%s isPresentingInteractiveOverlay = YES
%s %@
heeey... put up the custom overlay instead
%s The customViewController is now active
%s Cannot present interactive overlay while presenting content proposal!
applicationWillResign: _shouldPlayAfterAppBecomesActive = %s
Default playback rates of less than 0.5 are not supported. Ignoring.
%s Warning: showsPlaybackControls modified after loading the view of an AVPlayerViewController; this is unsupported!
%s *** This AVPlayerViewController has not been initialized! %{public}@
[PiP] AVAudioSession category is %{public}@ instead of AVAudioSessionCategoryPlayback
[PiP] AVAudioSession mode is %{public}@ instead of AVAudioSessionModeMoviePlayback
[PiP] AVAudioSession options missing AVAudioSessionCategoryOptionMixWithOthers
Adjusting PiP avoidance insets. unoccludedBounds = %@; insets = %@
The custom overlay button was pressed.
transportVarViewController %@
%s : %s
%s : %d
%s playbackCommand: %d
%s request to play failed!
%s request to pause failed!
%s request to toggle play/pause failed!
unexpected PBSPictureInPicture{PlaybackCommand <-- %d
%s PBSPictureInPictureCommand received while not PiP'd
didDismiss %@
willDismiss %@
didPresent %@
willPresent %{public}@
Presenting content proposal after navigation
Attempting to present a content proposal during content proposal presentation!
Presenting content proposal on top
Presenting content proposal on bottom
%s currentItem = %@, nextContentProposal = %@
transition request to panel already subview (%@)
finished transition (from %@, to %@)
%s ** WARNING: the value of this metadata item %@ has not yet been loaded; we're about to force it
%s ** AVMetadataItem representation has no identifier!
%s The value passed for '%{public}@' is raw data, but we do not expect it. Discarding.
%s Metadata values should not be arrays/dictionaries. Lookin' at you, '%@'.
%s old: %ld --> new: %ld
%s starting for playerController %{public}@
%s failed; status = %d
*** %s must be called on main thread. ***
Calls to -[AVPlayerController stopUsingNetworkResourcesForLiveStreamingWhilePaused] must be counterbalanced with calls to -[AVPlayerController startUsingNetworkResourcesForLiveStreamingWhilePaused].
Resource Reduction assertion was invalidated.
%s Using output context %@
Modifying seekableTimeRange by: %f
segmentDuration: %f
minTimingNeedsUpdate: %d, new minTiming with minTime: %f, rate: %f, old minTime: %f, delta: %f
maxTimingNeedsUpdate: %d, new maxTiming with maxTime: %f old maxTime: %f, delta: %f
%s stepByCount: %ld
%s sampleBasedSeekTarget: %f
%s time: %f toleranceBefore: %f toleranceAfter: %f
Seek completed: %s
Scrubbing Ended
Scrubbing Started
%s %f
Can play immediately: %d
Retrying play immediately.
Calling playImmediatelyAtRate: %f
Could not play immediately, setting a play immediately retry block.
%s %.1f on %p
%s immediately %.1f on %p
PlayerItemDidChange
New playerItem: <%{public}@: %p>
New asset: <%{public}@: %p>
liveStreamEventModePossible: %d
Time control status = %ld
Playback likely to keep up changed to: %@
isPlaybackBufferEmpty: %d
Rate changed to: %f
Failed to handle %@ %@
%s queuePlayer: %d
Interruption notification: AVAudioSessionInterruptionNotification player.rate: %.1f userinfo: %@
AVAudioSessionInterruptionTypeBegan: %f
AVAudioSessionInterruptionTypeEnded: %f
Interruption notification: AVPlayerPlaybackWasInterruptedNotification player.rate: %.1f userinfo: %@
%s player: %p
%s Removing channel from active list (%@)
%s unable to receive message : %{public}@
%s unexpectedly received a response -- expected a message only
%s I just received something, I know not what
%s Unexpectedly received object from inactive channel (%@)
%s responding with result %d
%s %{public}@
%s new channel %@; activeChannels has %@
%s received message %{public}@
%s Hiding timer exists but should have already fired! %{public}@ (current run loop mode is %{public}@)
attempting to change the playback controls state while locked
%s playbackControlsState: %ld VisibleControlsState: %ld
playback controls state already unlocked
playback controls state already locked
%s hiding interactive overlay as the transport bar is now hidden
%s hiding interactive overlay
%s seeking from %.1f to %.1f to complete scan
%s scanning (FF/RW) requires the transport bar
%@ scanning; startFFRWRate:%.1f
%s scanning: AVScanResultUsePlayer
%s scanning: AVScanResultDefault / AVScanResultWaitForImages
%s scanning: AVScanResultUsePlayerUntilFirstImageDelivered
%s scanning: telling the player to setRate:%.1f
%s scanning: starting playback controls displaylink
%s stopping the player (image-based scanning) (playerController setRate:0)
%s scanning: setRate:0
-[AVNowPlayingPlaybackControlsViewController startFFWRate:] settingCurrentTimeInterval
%s scanning: setting new scanningImage (not using player)
Unexpectedly not still in state .Info upon completion of presentViewController!
%s no associated action in this state
%s ignoring dpad-> for this remote during scrubbing
%s ignoring dpad<-- for this remote during scrubbing
%s Failing (%@, %@, %f)
%s view is not loaded
%s requiresLinearPlayback!
%s playbackControlsState = .Info
settingCurrentTimeInterval
%s skipping support requires the transport bar
%s [handleClickAtPosition] changing display time from %.1f to %.1f
pause: disabled by requiresLinearPlayback (live stream, or event stream that is just starting). longest seekable duration observed is %.1f
-[AVNowPlayingPlaybackControlsViewController pause] settingCurrentTimeInterval
Current Item Did Change
-[AVNowPlayingPlaybackControlsViewController _currentItemDurationDidChange] settingCurrentTimeInterval
shouldHonorActualThumbnailTime = %@
%s accumulatedDistance = %.1f; delta = %.3f; velocity = %.1f; startRegion = %ld
%s adjusted: translation = %.2f;  velocity = %.2f
%s startRegion = %ld position = %f
%s %@ (playbackControlsState = %d, isScrubberEnabled = %@)
delayed actions in touchesMoved: (touchPosition %@)
delayed actions in touchesBegan: (touchPosition %@)
%s ** we still have isTouching, but it's been a long time since we saw any touch events; something may be broken!
%s digitizerLocation = %@ (event %@)
%s hint: %d
%s  (not clearing because it isn't %d)
This streaming asset does not have i-frames, so scrubbing thumbnails are not supported: %@
%s The interactive overlay has already been presented!
%s setting overlayPresented
%s finished animating interactive overlay
%s transitionToInterstitialViewController finished = %@
%s The player item has failed. error = %{public}@
cannot hide playback controls while in .InteractiveOverlay
didLeaveRequiredInterstitial %{public}@
didLeaveInterstitial %{public}@
didEnterInterstitial %{public}@
setLoading: %d
Pause is diabled because navigation is restricted, and the longest seekable duration seen for this item is %.2f
Pause is diabled even though navigation is unrestricted, because the longest seekable duration seen for this item is %.2f
%s - hasStartAndEndDates: %d, MeaningfulScrubDuration: %d, currentDate?: %d, isLive: %d
setPlaying: %d
%s Ignoring obsolete timer
%s Cannot hide controls now, rescheduling (%d %d %d %d %d (%d && !%d))
Failed to create/install NSTimer! %{public}@
Hiding timer should fire at %{public}@
scrubPlayerItem failed! [error is %{public}@] switching to 'thumbless' scrubbing.
scrubPlayerItem errorLog: %{public}@
transition from %@ (%@) to %@ (%@)
ERROR: timeInterval (%f) must be a number
Stopping service %{public}@
Initializing service for %{public}@
final deviceInfoDict = %@
Bonjour publish failed %{public}@ with error: %{public}@
Retrying after %.0fs...
%s didPublish %{public}@
Did accept connection for service type %{public}@ [channel %{public}@]
calling delegate -bonjourService:didAcceptConnectionChannel: (delegate = %@)
%s restarting...
%s stopping service (%@)
%s service is going away
%s AVPlayerCurrentItemDidChangeNotification triggering service restart
%s kMRDeviceInfoDidChangeNotification triggering service restart
%s initializing service (first time)
deviceInfoDict = %@
.localReceiverPairingIdentity = %{public}@
Client set MP Now Playing Info to %@
Overriding %@ specified by client
Client provided %@, which will not be transferred
After transferring MPNowPlayingInfo items, item info = %@
Attempting to fetch metadata item when commonMetadata is not loaded (identifiers: %@)
invalidate all content item info: Using existing content item %p
invalidate all content item info: Determining what content item to use for new player item
invalidate all content item info: reporting content item changed: %p
invalidate all content item info: content item metadata callback failed: %@
Media Remote Manager: player item is ready to play; the content item we have is: %p
Media Remote Manager: invalidating the playback queue
%s %s
%s unable to uninstall as we do not have a playerPathRef
%s making Now Playing --> %{public}@
%s MRMediaRemoteCanBecomeActivePlayer = %@
%s Making this player Now Playing (%{public}@)...
MRMediaRemoteSetNowPlayingPlayer failed to make playerRef NowPlaying (%{public}@)
MRMediaRemoteSetNowPlayingPlayer successfully made playerRef NowPlaying (%@)
%s We have an existing MRPlayerPath for the player's mxSessionID, so we'll be using that (%@)
%s playerID = %@, mrPlayerPath = %@
%s MRMediaRemoteSetMXSessionIDForPlayer failure %@
%s MediaRemote: failed to set Picture-in-Picture status for player (%@); error = %{public}@
%s MRMediaRemoteSetCanBeNowPlayingApplication(true)
Media Remote Manager: player item is ready to play; invalidating the playback queue
CreateChildContentItemCallback returning NULL because we were called during initialization.
CreateChildContentItemCallback returning new section %ld item %p
LanguageOptionsCallback received request for item %p
ContentItemLanguageOptionsCallback short-circuiting because we were called during initialization.
ContentItemArtworkCallback short-circuiting because we were called during initialization.
CurrentItemArtworkCallback added artwork for section item %p
ContentItemMetadataCallback received request for item %@ (currently playing: %{public}@)
ContentItemMetadataCallback short-circuiting because we were called during initialization.
ContentItemMetadataCallback added available metadata for section %@
Unrecognized AVKitMediaType (%d)
avkitMediaType = %d; mediaSubType = %d (hasEnabledVideo = %@)
ContentItemMetadataCallback added available metadata for content item %p; isArtworkAvailable = %@
CreateContentItemCallback returning NULL because we were called during initialization.
CreateContentItemCallback for offset %ld; returning NULL
CreateContentItemCallback returning NULL because nothing is playing/active.
CreateContentItemCallback created itemRef %p
Posting %@ to notificationCenter (%{public}@)
Resigning now playing.
%s attempting to set MediaRemote PIP status to %@ for %{public}@...
%s changed MediaRemote PIP status to %@
%s FAILED to set MediaRemote PIP status: %{public}@
%s * There is no rating that matches '%{public}@' (%{public}@, %{public}@)
expected fileURL
%s Failed to read %{public}@: %{public}@
%s error: keys of root dictionary should be country codes
%s error: expect root values to be dictionaries
%s error: expect value dictionaries to have 'ratingMovies' at least
%s error: expect ratingMovies to be an array
%s error: expect ratingMovies elements to be dictionaries
%s error: expect ratingMovies elements to have 'rank' and 'rating' keys
%s setting blockedPlayer to %@
%s failed to compress data (%ld/%{public}@): %{public}@
%s failed to serialize %{public}@ to JSON (%{public}@)
%s incoming message type %d is unrecognized!
%s removing unrecognized key '%{public}@'
%s error: json deserialization failed
%s This code has not been updated to handle algorithm %ld!
%s failed to decompress data (%{public}@ algorithm): %{public}@
%s isAirMessageEnabled %@; global %@; app %@; environ %{public}@
value for '%{public}@' is neither a string nor convertible to one
%s legibleLanguageOption '%@'
%s legibleLanguageOption does not match any valid option (%@).
%s No player or playerViewController (%p)
%s audioLanguageOption '%@'
%s audioLanguageOption does not match any valid audio option (%@).
%s There is no player / playerViewController (%p)!
%s unhandled event.type (%d)
%s command event has no languageOption
mediaRemotePlayerPath is nil!
no player identifier. what now, chief?
%s forwarding MediaRemoteCommand %d to the sharedCommandCenter handlers
%s %d %p
You must call -[AVObservationController stopAllObservation] before destroying it, perhaps in its owner's dealloc. %@
AVStandardScanningDelegate: stopScanning received
AVStandardScanningDelegate: starting
%s player cannot service scan, because the currentTime is not at the starting point [playerItem is at %.1f, UI is at %.1f)
%s player cannot service scan, so will not
AVStandardScanningDelegate: isStarting / Playing; but isWaitingForPreroll
AVStandardScanningDelegate: isStarting, .Playing; isPlaybackLikelyToKeepUp = %s
AVStandardScanningDelegate: isStarting, WaitingForPlayAtSpecifiedRate, not in an interstitial
AVStandardScanningDelegate: apparent stall (or preroll), but hasIFrames
%s stopping displayLink
scanning: playerServicingScan -> %@
!! PBSRestrictionService unexpectedly called us on the main thread/dispatch queue !!
denialPresentationSemaphore = %@
WAITING for denialPresentationSemaphore = %@...
DONE waiting for denialPresentationSemaphore %@
signaling (2) denialPresentationSemaphore = %@
signaling (1) denialPresentationSemaphore = %@
%s The previous validation has expired (%@).
_presentDeniedByProfile: Unable to present error message!
Unrecognized PBSRestrictionValue (%d)
%s failed to serialize response body: %{public}@
%s response received: %{public}@
%s response version seems incorrect; have '%{public}@' but expecting '%{public}@'
%s response is invalid: the %{public}@ header is missing
%s isZoomTouchEnabled = %s, currently zoomed = %s
%s shouldUpdate from %@ to %@?
Yea! nextFocusedIndexPath is valid. Go for it!
Boo! nextFocusedIndexPath is nil. Don't go there!
setScaleOfEveryVisibleCell:%.1f animated:%@
setScaleOfEveryVisibleCell:%.1f completed; finalPosition = %d
Failed to pick route with error: %@
%s Attempting to %@ route: %@
%s %@ %@ failed with error: %@
%s %@ %@ succeeded.
%s mediaOption: %{public}@ mediaCharacteristic: %{public}@
%s Skipped setting identical option.
%s Changing MACaptionAppearanceDisplayType: %ld -> %ld
%s Enabling automatic display type because receiver changed captions to forced-only.
%s Persisting preferences for remote legible option change: %{public}@ -> %{public}@
%s Selected legible option: %{public}@ 
%s Selected audible option: %{public}@ 
*** %s Received a forced-only media selection (%{public}@) when display type was NOT forced-only (was %ld). mediaSelectionCriteriaCanBeAppliedAutomaticallyToMediaSelectionGroup: %d. ***
*** %s Received a non-forced-only media selection (%{public}@) from automatic media selection when display type was forced-only. ***
%s LegibleMediaSelectionOptions: %{public}@
%s AudioMediaSelectionOptions: %{public}@
softlink:r:path:/System/Library/Frameworks/MediaPlayer.framework/MediaPlayer
softlink:r:path:/System/Library/Frameworks/MediaPlayer.framework/MediaPlayer
softlink:r:path:/System/Library/Frameworks/MediaPlayer.framework/MediaPlayer
softlink:r:path:/System/Library/Frameworks/MediaPlayer.framework/MediaPlayer
softlink:r:path:/System/Library/PrivateFrameworks/ZoomServices.framework/ZoomServices
softlink:r:path:/System/Library/Frameworks/MediaPlayer.framework/MediaPlayer
AVContentProposal
NSCopying
AVAirTransportStreams
NSStreamDelegate
NSObject
AVAirTransport
StreamBased
AVPictureInPictureIndicatorLayer
AVPictureInPictureIndicatorSublayer
AVSimpleChannelInterstitialViewController
AVAirMessageTransformer
AVDataValueTransformer
AVAirTransportTransformationProtocol
UIViewControllerAnimatedTransitioning
AVInfoPanelTransitionAnimator
AVFocusProxyView
AVAdditions
AVSpinnerView
AVMediaContentRatings
AVMediaContentRating
AVGlobalUserSettings
AVInterstitialController
AVFrameSet
AVFrame
AVImagesThumbLayerController
AVThumbLayerController
AVPlayerThumbLayerController
AVKitPrivateAdditions
_AVBlockedView
_AVPlayerLayerThumbnailView
313$
AVNowPlayingTransportBar
AVInfoPanelMetadataViewController
AVNowPlayingDimmingView
AVMusicAppBehaviorPlaybackState
AVMusicAppBehaviorContext
AVBehaviorContext
AVPlayerViewControllerPlaybackDelegate
AVPlayerViewControllerBehaviorContext
AVBehaviorContextInternal
AVTimeRange
AVTimeRangeCollection
AVInternalPlaybackOptions
AVChapter
AVControlItem
UIAccessibilityIdentification
NSSecureCoding
NSCoding
AVUpdatingControlItem
tvOS
Internal
PiPPrivate
_AVChapterInfo
AVPlayerControllerTVExtras
_AVSimplePlayerLayerView
AVPictureInPicturePlayerLayerView
AVTimeRangeForInterstitial
AVInterstitialDateRange
AVInterstitialTimeRange
AVInterstitial
Interstitials
AVInfoPanelViewController
AVInfoMenuDelegate
UITabBarControllerDelegate
AVChannelInterstitialContainerView
AVChannelInterstitialContainer
AVKitSelfDismissal
Directionality
AVInfoPanelCollectionViewTextOnlyCell
AVInfoPanelAudioRoutesCollectionViewController
UICollectionViewDelegateFlowLayout
UICollectionViewDelegate
UIScrollViewDelegate
AVSharedDisplayManager
PBSDisplayStateObserver
AVPlaybackControlsViewController
AVInfoPanelCollectionViewThumbnailCell
AVInfoPanelNavigationMarkerImage
AVImageProxyProtocol
AVPlayerLayerView
AVFocusProxyViewDelegateProtocol
Convenience
AVAirMessageNotificationCenterDelegate
AVPlayerItemAVKitExtras
AVPlayerViewControllerAdditions
AVPlayerItem_AVMusicAppBehaviorContextAdditions
AVInfoCollectionViewHorizontalLayout
_AVFocusContainerView
_AVPlayerViewControllerContainerView
AVInfoPanelMediaOption
AVRoutePickerView
AVTimer
AVMicaPackage
CAStateControllerDelegate
CAMLParserDelegate
AVAirSerializationProtocol
AVAirSerialization
AVStringPair
AVInfoMenuTransitioningAnimation
AVStandardContentProposalViewController
AVInternetDateFormatter
AVPlayerViewControllerAnimationCoordinator
AVFocusTensionGestureRecognizer
AVTransportBarObserver
AVxOverlayViewController
AVxCollectionViewControllerDelegate
AVDarkModeCompatibleLabel
AVInfoPanelDescriptionViewController
AudioVideoClassification
AVTransportBarViewController
Private
AVInfoPanelAudioViewController
AVInfoPanelAudioRouteSelectionDelegate
AVInfoPanelMediaOptionSelectionDelegate
AVInfoPanelCollectionReusableHeaderView
AVDigitizerTouchGestureRecognizer
AVTouchEventForwardingProtocol
AVScrubbingAnalytics
AVPermissiveSwipeGestureRecognizer
_AVPermissiveSwipeGestureDelegate
UIGestureRecognizerDelegate
_AVDetachedSwipeGestureRecognizer
Digitizer
AVGradientView
AVxOverlayToolCell
AVxHostView
AVxCustomOverlayHostViewController
Common
AVDurationTimeFormatter
AVNavigationMarkerImageProxy
AVNavigationMarkersGroup
AVMessageParser
AVAirMessageParts
AVAirTransportReverseTransformationResultProtocol
AVAirMessages
AVScrubbingPanGestureRecognizer
AVPlayerViewController
_AVFocusContainerDelegate
AVPlayerViewControllerTransition
UIViewControllerTransitioningDelegate
AVPictureInPictureControllerDelegate
PBSPictureInPicturePlaybackDelegate
AVPlayerViewController_AdLibOnly
AVPlayerViewControllerPlayerController
AVContentProposalViewController
AVPlayerViewControllerSkippingBehavior
AVPlayerViewControllerAdvertisements
AVPlayerViewControllerSubtitleOptions
AVPlayerViewControllerThumbnails
AVPlayerViewControllerInfoViewsPrivate
AVPlayerViewControllerControls
TransportBarViewController
AVPlayerViewControllerPictureInPictureImplementation
AVInfoMenuController
AVInfoCollectionViewHorizontalLayoutDelegate
UICollectionViewDataSource
_AVBundle
AVInfoPanelSubtitleCollectionViewController
AVDefaultBehaviorContext
AVBehaviorStorage
AVBehaviorInternal
AVBehavior
AVBehaviorSupport
AVInfoPanelExpandingSummaryView
_UIFloatingContentViewDelegate
AVTomatoRatingView
AVPictureInPictureController
AVPictureInPictureControlsStyleAppearance
AVPictureInPicturePlatformAdapterDelegate
AVInfoPanelMediaOptionCollectionViewController
AVTransportBarMask
AVPlayerController
AVPlayerControllerExternalPlaybackSupportInternal
AVDisplayManager
AVAirMessageNotificationCenter
AVAirTransportDelegate
AVBonjourServiceDelegate
AVNowPlayingPlaybackControlsViewController
AVInfoPanelViewControllerDelegate
AVInfoPanelLanguageDelegate
AVInfoPanelSubtitlesDelegate
AVInfoPanelNavigationDelegate
AVFrameSetDelegate
AVNowPlayingFrameSource
AVChannelInterstitialContainerDelegate
Constraints
AVSlidewaysTransition
AVGestureRecognizerDelegate
AVWheelScrubberView
AVInfoPanelCustomViewController
AVInfoPanelContentViewController
AVInfoPanelSubtitlesViewController
AVAnimatingLabelLayer
AVAnimatingLabel
LittleShopOfHorrors
AVBonjourService
NSNetServiceDelegate
AVMediaRemoteManager
PictureInPicture
AVKitMediaRemote
AVMusicAppBehavior
AVRatingProviders
AVContentRestrictionsViewController
AVInfoPanelNavigationCollectionViewController
AVDelegateManager
AVKeyValueObserverCollection
AVKitExtensions
_AVInfoMenuCellBlurEffect
AVInfoMenuCell
AVInfoPanelAudioCollectionViewCell
AVFocusableScrollView
AVInfoPanelFullScreenSummaryViewController
AVAirMessage
AVAirMessageExtensions
AVMediaPlayerDelegate
AVPlayerControllerTimeResolver
TimeObserverAdditions
AVLoadingIndicatorView
AVPictureInPictureViewController
PGPictureInPictureViewControllerSupport
AVObservationController
AVKeyValueChange
AVProxyKVOObserver
AVStandardScanningDelegate
AVScanningDelegate
AVThemeManager
AVValueTiming
NSMutableCopying
AVMutableValueTiming
AVConcreteMutableValueTiming
AVConcreteValueTiming
AVValueTimingCreation
AVExtendedValueTiming
AVExtendedMutableValueTiming
AVContentRestrictionsServiceToken
AVContentRestrictionsService
AVInfoPanelAudioCollectionViewController
AVAirMessageResponse
AVMessageTransformerProtocol
AVPictureInPicturePlatformAdapter
AVNonDigitizerTapRecognizer
AVxCollectionViewController
AVxGroup
AVxGroupList
AVxCollectionViewLayout
AVNowPlayingChapter
AVPictureInPictureContentSource
AVNowPlayingInfoHintView
AVSpeakerManager
MPAVRoutingControllerDelegate
AVMediaSelection
T{?=qiIq},R,N,V_contentTimeForTransition
Td,N,V_automaticAcceptanceInterval
T@"NSString",R,C,N,V_title
T@"UIImage",R,N,V_previewImage
T@"NSURL",&,N,V_URL
T@"NSArray",C,N,V_metadata
_automaticAcceptanceInterval
_title
_previewImage
_URL
_metadata
_contentTimeForTransition
copyWithZone:
initWithContentTimeForTransition:title:previewImage:
isEqualToContentProposal:
isEqual:
hash
setAutomaticAcceptanceInterval:
contentTimeForTransition
automaticAcceptanceInterval
title
previewImage
setURL:
metadata
setMetadata:
.cxx_destruct
isEqualToArray:
isEqualToString:
copy
T@"NSInputStream",R,N,V_inputStream
T@"NSOutputStream",R,N,V_outputStream
TQ,R
superclass
T#,R
T@"NSString",R,C
debugDescription
_inputStream
_outputStream
stream:handleEvent:
class
self
performSelector:
performSelector:withObject:
performSelector:withObject:withObject:
isProxy
isKindOfClass:
isMemberOfClass:
conformsToProtocol:
respondsToSelector:
retain
release
autorelease
retainCount
zone
description
initWithInput:output:
invalidate
open
_readDataNonBlockingUpToMaxLength:
isReadyToSend
canWrite
_readAvailableData
_writeData:
_inputStreamHasBytesAvailable
_outputStreamDidOpen
_outputStreamCanWrite
_inputStreamDidClose
inputStream
outputStream
eventThread
currentThread
delegate
terminatePendingRequests
writeMore
performOnAirChannelQueueSync:
removeObjectAtIndex:
streamDataTransformer
firstObject
receiveResponseBlocks
write:maxLength:
length
bytes
hasSpaceAvailable
streamStatus
streamError
setLength:
increaseLengthBy:
read:maxLength:
mutableBytes
initWithLength:
hasBytesAvailable
stringWithFormat:
close
removeFromRunLoop:forMode:
eventRunLoop
setDelegate:
scheduleInRunLoop:forMode:
_initPrivate
T@"NSMutableArray",R,N,V_receiveResponseBlocks
TB,R,N
T@"<AVAirTransportTransformationProtocol>",&,N,V_streamDataTransformer
T@"<AVAirTransportDelegate>",W,N,V_delegate
_outputQueue
_leftoverInputData
_requestCompletions
_streamDataTransformer
_delegate
_receiveResponseBlocks
dealloc
requestCompletions
writeData:
sendObject:receiveResponse:
sendResponse:
setStreamDataTransformer:
performSync:
addObject:
airTransportQueue
_isRunningOnAirChannelQueue
raise:format:
performAsync:
removeObject:
setObject:atIndexedSubscript:
subdataWithRange:
timeIntervalSinceReferenceDate
removeAllObjects
countByEnumeratingWithState:objects:count:
T@"NSRunLoop",R,N
T@"NSThread",R,N
startEventThreadIfNecessary
__performBlock:
performSelector:onThread:withObject:waitUntilDone:
currentRunLoop
setName:
addTimer:forMode:
timerWithTimeInterval:repeats:block:
distantFuture
initWithBlock:
channelWithInput:output:
T@"AVPictureInPictureIndicatorSublayer",R,N,V_contentLayer
T{CGRect={CGPoint=dd}{CGSize=dd}},R,N,V_videoRectWhenPIPBegan
T@"NSString",C,N
_contentLayer
_videoRectWhenPIPBegan
initWithDisplayScale:placeholderImage:opaque:videoRectWhenPIPBegan:
layoutSublayers
init
setCustomText:
customText
contentLayer
videoRectWhenPIPBegan
setPosition:
bounds
addSublayer:
initWithDisplayScale:placeholderImage:opaque:
T@"NSString",C,N,V_customText
_attributedText
_imageSize
_languageAwareOutsets
_lineHeight
_baselineOffset
_textLayer
_imageLayer
_customText
textBoundingRectWhenDrawnInRect:
boundingRectWithSize:options:context:
commit
setDisableActions:
begin
setNeedsLayout
setString:
initWithString:attributes:
dictionaryWithObjects:forKeys:count:
systemFontOfSize:
setWrapped:
setTruncationMode:
setAlignmentMode:
setForegroundColor:
setFontSize:
setContentsScale:
setContentsGravity:
setContents:
layer
ascender
userInterfaceIdiom
traitCollection
mainScreen
lineHeight
CGColor
T@"AVLoadingIndicatorView",R,N,V_loadingIndicator
T@"UILabel",R,N
_label
_loadingIndicator
label
loadView
viewDidAppear:
viewDidDisappear:
loadingIndicator
setAlpha:
animateWithDuration:delay:options:animations:completion:
activateConstraints:
arrayWithObjects:count:
widthAnchor
constraintEqualToAnchor:constant:
topAnchor
centerYAnchor
constraintEqualToAnchor:
centerXAnchor
setTranslatesAutoresizingMaskIntoConstraints:
colorWithWhite:alpha:
_setLayoutDebuggingIdentifier:
sizeToFit
preferredFontForTextStyle:
T#,R,N,V_messageClass
_previousUnusedData
_messageClass
initWithMessageClass:
resetState
dataForMessage:
reverseTransformerForMessageData:
messageClass
appendData:
initWithCapacity:
messageTransformerWithClass:
interruptibleAnimatorForTransition:
animationEnded:
transitionDuration:
animateTransition:
_presentationSpringTimingParameters
presentationSpringTimingParameters
_drawerAnimatorFromViewController:toViewController:containerView:completion:
removeFromSuperview
initWithDuration:controlPoint1:controlPoint2:animations:
addCompletion:
addAnimations:
initWithDuration:timingParameters:
settlingDuration
frame
isBeingPresented
startAnimation
completeTransition:
viewControllerForKey:
containerView
isBeingDismissed
initWithMass:stiffness:damping:initialVelocity:
T@"NSArray",&,N,V_constraintsToTargetView
targetView
T@"UIView<AVFocusProxyViewDelegateProtocol>",&,N,G_targetView,S_setTargetView:,V_targetView
_targetView
_constraintsToTargetView
initWithFrame:
initWithCoder:
setBackgroundColor:
setProxyViewVisible:
addSubview:
_setTargetView:
didMoveToWindow
addSpecialGestureRecognizer:
removeSpecialGestureRecognizer:
addGestureRecognizer:
removeGestureRecognizer:
canBecomeFocused
shouldUpdateFocusInContext:
didUpdateFocusInContext:withAnimationCoordinator:
constraintsToTargetView
setConstraintsToTargetView:
previouslyFocusedView
nextFocusedView
deactivateConstraints:
bottomAnchor
rightAnchor
leftAnchor
colorWithRed:green:blue:alpha:
setOpaque:
mediaType
minFrameDuration
avkit_timeForFrameSteppedByFrameCount:fromFrameAtTime:
_avkit_timeForFrameUsingSampleCursorSteppedByFrameCount:fromFrameAtTime:
_avkit_findTimeForFrameUsingFrameRateSteppedByFrameCount:fromFrameAtTime:
_avkit_frameRateIsValid:
T@"CAAnimationGroup",&,N,V_animations
T@"UIColor",&,N,V_color
T@"CALayer",&,N,V_mainLayer
T@"CALayer",&,N,V_overlayLayer
animating
TB,N,GisAnimating,V_animating
_size
_didBecomeActiveNotificationObserver
_willResignActiveNotificationObserver
_animating
_animations
_color
_mainLayer
_overlayLayer
initWithSize:
layoutSubviews
intrinsicContentSize
setAnimating:
_addAnimations
_removeAnimations
_animationToOpacity:
isAnimating
animations
setAnimations:
color
setColor:
mainLayer
setMainLayer:
overlayLayer
setOverlayLayer:
setFillMode:
setRemovedOnCompletion:
setToValue:
numberWithDouble:
setFromValue:
valueForKey:
presentationLayer
setBeginTime:
animationWithKeyPath:
setCompletionBlock:
removeAnimationForKey:
addAnimation:forKey:
removeObserver:
defaultCenter
addObserverForName:object:queue:usingBlock:
mainQueue
spinnerAnimationGroup
setOpacity:
setAllowsGroupBlending:
setAllowsGroupOpacity:
setCompositingFilter:
spinnerImageWithSize:color:
repeatingRotationAnimation
setRepeatCount:
setCalculationMode:
setValues:
setKeyPath:
animation
getRed:green:blue:alpha:
contentRatingsDictionary
imageForRating:
displayStringForRating:
imageForMetadataItem:
displayStringForMetadataItem:
stringValue
uppercaseString
imageNamed:inBundle:compatibleWithTraitCollection:
objectForKeyedSubscript:
stringByReplacingOccurrencesOfString:withString:
lowercaseString
restricted
TB,N,GisRestricted,S_setRestricted:,V_restricted
T@"NSString",R,N,V_displayName
T@"UIImage",R,N
Tq,R,N,V_rank
T@"NSString",R,N,V_countryCode
Tq,R,N,V_domain
_restrictionSettingsChangeObserver
_restricted
_displayName
_rank
_countryCode
_domain
initWithRating:rank:countryCode:domain:
image
isEqualToMediaContentRating:
isExplicitContentRestricted
_isCurrentlyRestricted
displayName
rank
countryCode
domain
isRestricted
_setRestricted:
integerValue
maximumEffectiveTVShowRanking
maximumEffectiveMovieRanking
allowsExplicitContent
sharedInstance
localizedStringForCountryCode:
currentLocale
contentRestrictionsCountryCode
rotaryDeviceConnected
TB,N,GisRotaryDeviceConnected,V_rotaryDeviceConnected
clickOnly
TB,N,GisClickOnly,V_clickOnly
Tq,R,N,V_surroundSound
atmosDisabled
TB,R,N,GisAtmosDisabled
experimentalScrubbingMomentumCurveEnabled
TB,R,N,GisExperimentalScrubbingMomentumCurveEnabled,V_experimentalScrubbingMomentumCurveEnabled
Td,R,N
_avkitGlobalUserDefaults
_uikitUserDefaults
_experimentalScrubbingMomentumCurveSettingObservation
_rotaryDeviceNotificationObserver
_clickpadModeNotificationToken
_experimentalScrubbingMomentumCurveEnabled
_rotaryDeviceConnected
_clickOnly
_surroundSound
isAtmosDisabled
edgeSwipeMaximumStartingInset
enableExtraScanLogging
surroundSound
isExperimentalScrubbingMomentumCurveEnabled
isRotaryDeviceConnected
setRotaryDeviceConnected:
isClickOnly
setClickOnly:
boolForKey:
doubleValue
objectForKey:
shared
_remoteTouchSurfaceType
currentDevice
addObserverBlock:
stringForKey:
keyPathWithRootObject:path:
initWithSuiteName:
initialize
T@"AVObservationController",&,N,V_kvo
T@"AVObservationController",&,N,V_kvoPlayerItem
T@"AVTimeRange",&,N,V_interstitialTimeRangeInProgress
T@,&,N,V_interstitialBoundaryTimeObserver
T@"AVTimeRangeCollection",&,N,V_interstitialTimeRangeCollection
T@"AVPlayer",&,N,V_player
T@"<AVInterstitialControllerDelegateManager>",&,N,V_delegateManager
T@"AVTimeRange",R,N
Td,R,N,V_continuationTimeAfterInterstitial
T@?,C,N,V_didEnterInterstitialTimeRangeBlock
T@?,C,N,V_didLeaveInterstitialTimeRangeBlock
T@?,C,N,V_didLeaveRequiredInterstitialTimeRangeBlock
T@?,C,N,V_skipInterstitialTimeRangeBlock
_playerItemTimeJumpedObserver
_player
_delegateManager
_interstitialTimeRangeCollection
_continuationTimeAfterInterstitial
_didEnterInterstitialTimeRangeBlock
_didLeaveInterstitialTimeRangeBlock
_didLeaveRequiredInterstitialTimeRangeBlock
_skipInterstitialTimeRangeBlock
_kvo
_kvoPlayerItem
_interstitialTimeRangeInProgress
_interstitialBoundaryTimeObserver
timeFromDisplayTime:
displayTimeFromTime:
currentItem
currentTime
currentDisplayTime
currentOrEstimatedDate
isLive
timeRemainingInCurrentInterstitial
_updateInterstitialTimeRangeCollection
shouldEnforceInterstitialPolicy
requiresLinearPlayback
timeToSeekAfterUserNavigatedFromTime:toTime:
_sendInterstitialBoundaryNotificationsForTime:
sendInterstitialBoundaryNotificationsForTimeJumpIfNeeded
sendPendingInterstitialBoundaryNotificationIfNeeded
_startObservingInterstitialTimeRanges
_stopObservingInterstitialTimeRanges
currentInterstitialTimeRange
previousInterstitialTimeRange
_shouldSkipInterstitialTimeRange:
didBeginOrResumePlayback
skipInterstitialTimeRange:
willPresentInterstitialTimeRange:
didPresentInterstitialTimeRange:
player
setPlayer:
delegateManager
setDelegateManager:
interstitialTimeRangeCollection
setInterstitialTimeRangeCollection:
continuationTimeAfterInterstitial
didEnterInterstitialTimeRangeBlock
setDidEnterInterstitialTimeRangeBlock:
didLeaveInterstitialTimeRangeBlock
setDidLeaveInterstitialTimeRangeBlock:
didLeaveRequiredInterstitialTimeRangeBlock
setDidLeaveRequiredInterstitialTimeRangeBlock:
skipInterstitialTimeRangeBlock
setSkipInterstitialTimeRangeBlock:
setKvo:
kvoPlayerItem
setKvoPlayerItem:
interstitialTimeRangeInProgress
setInterstitialTimeRangeInProgress:
interstitialBoundaryTimeObserver
setInterstitialBoundaryTimeObserver:
seekToTime:toleranceBefore:toleranceAfter:completionHandler:
removeTimeObserver:
addBoundaryTimeObserverForTimes:queue:usingBlock:
containsObject:
currentEstimatedDate
T@"NSMutableIndexSet",&,N,V_frameSet
T@"NSMutableIndexSet",R,V_requestedTimes
T@"NSMutableDictionary",&,V_cacheImages
T@"AVAssetImageGenerator",&,V_assetImageGenerator
TB,V_invalidated
TB,V_canAssetImageGeneratorFetchFrames
TB,V_haveSeenAssetImageGeneratorTimeout
memoryConstrained
TB,GisMemoryConstrained,V_memoryConstrained
T@"NSMutableArray",&,V_completionBlocks
T{?=qiIq},V_assetDuration
Td,V_earliestAllowedFetchTime
T@"AVAsset",R,V_asset
T@"NSURL",R,V_assetURL
Td,R,V_frameInterval
T@?,R,V_imageGenerator
T@"<AVFrameSetDelegate>",W,V_delegate
T@"NSIndexSet",C,V_framesOnScreenNow
T{CGSize=dd},R,V_desiredImageSize
ready
TB,R,GisReady,V_ready
TB,R
T@"NSIndexSet",C,V_highPriorityFrames
_unfairLock
_ready
_invalidated
_canAssetImageGeneratorFetchFrames
_haveSeenAssetImageGeneratorTimeout
_memoryConstrained
_asset
_assetURL
_frameInterval
_imageGenerator
_framesOnScreenNow
_highPriorityFrames
_frameSet
_requestedTimes
_cacheImages
_assetImageGenerator
_completionBlocks
_earliestAllowedFetchTime
_desiredImageSize
_assetDuration
initWithAsset:frameInterval:maximumImageSize:
initWithAsset:videoComposition:frameInterval:maximumImageSize:
initWithImageGenerator:asset:frameInterval:maximumImageSize:
_assetImageGeneratorForAsset:videoComposition:
observeValueForKeyPath:ofObject:change:context:
imageFetchingQueue
setReady:
numberOfFrames
flushSomeFrames
flushUndisplayedFrames
canFetchFrames
numberOfRequestedFrames
addRequestedFrameIndex:
addRequestedFrameSet:
removeRequestedFrameIndex:
removeRequestedFrameRange:
removeAllFrameRequests
isRequestedFrameIndex:
copyOfRequestedFrames
frameIndexForRequestedTime:
timeIntervalRequestedForFrameIndex:
addRequestedTime:
removeRequestedTime:
isRequestedTime:
framesRequestedAndOnScreenStoppingAfterFirst:
requestFrame:
requestFrameForTime:
requestFrameRange:
_cacheImage:forFrame:actualTime:
_arrayOfTimesForFrames:
whenDoneCallBlock:
_callDoneBlocks
_flushSomeLowPriorityFramesExcluding:
_fetchNextFrame
_rangeFramesAffectedByLoadedFrame:
frameForTime:
frameForIndex:
availableFrameIndexForIndex:
imageForFrame:
flushAllCachedImages
_estimatedImageMemoryFootprint
_handleMemoryWarning:
_mediaServicesReset:
asset
assetURL
frameInterval
imageGenerator
framesOnScreenNow
setFramesOnScreenNow:
desiredImageSize
isReady
highPriorityFrames
setHighPriorityFrames:
frameSet
setFrameSet:
requestedTimes
cacheImages
setCacheImages:
assetImageGenerator
setAssetImageGenerator:
invalidated
setInvalidated:
canAssetImageGeneratorFetchFrames
setCanAssetImageGeneratorFetchFrames:
haveSeenAssetImageGeneratorTimeout
setHaveSeenAssetImageGeneratorTimeout:
isMemoryConstrained
setMemoryConstrained:
completionBlocks
setCompletionBlocks:
assetDuration
setAssetDuration:
earliestAllowedFetchTime
setEarliestAllowedFetchTime:
didChangeValueForKey:
willChangeValueForKey:
estimatedSizeOfImageInMemory
allValues
removeAllIndexes
removeIndex:
removeObjectForKey:
numberWithInteger:
indexLessThanOrEqualToIndex:
indexGreaterThanIndex:
cancelAllCGImageGeneration
userInfo
code
imageWithCGImage:
copyCGImageAtTime:actualTime:error:
indexesInRange:options:passingTest:
firstIndex
containsIndex:
unsignedIntegerValue
allKeys
enumerateObjectsUsingBlock:
enumerateIndexesWithOptions:usingBlock:
valueWithCMTime:
addIndex:
setObject:forKey:
initWithImage:actualTime:frameIndex:
Tq,R,V_frameIndex
TB,V_preserveCompressedImageRepresentation
T@"UIImage",R,V_image
Td,R,V_actualTime
_preserveCompressedImageRepresentation
_image
_actualTime
_frameIndex
actualTime
frameIndex
preserveCompressedImageRepresentation
setPreserveCompressedImageRepresentation:
CGImage
indexSetWithIndexesInRange:
indexesWithOptions:passingTest:
removeIndexesInRange:
addIndexes:
containsIndexes:
setObject:forKeyedSubscript:
indexSet
lastIndex
numberWithUnsignedInteger:
isMainThread
setRequestedTimeToleranceBefore:
setRequestedTimeToleranceAfter:
setVideoComposition:
setRenderScale:
mutableCopy
setAppliesPreferredTrackTransform:
setMaximumSize:
removeObserver:forKeyPath:context:
removeObserver:name:object:
addObserver:selector:name:object:
addObserver:forKeyPath:options:context:
keyPathsForValuesAffectingCanFetchFrames
setWithObject:
T@"AVFrameSet",&,N,V_frameSet
T@"AVFrame",&,N,V_currentFrame
Td,N,V_desiredTimeInterval
Td,R,V_toleranceBefore
Td,R,V_toleranceAfter
Td,R
T@?,C,N,V_actualTimeUpdateBlock
T@"UIImage",R
_desiredTimeInterval
_toleranceBefore
_toleranceAfter
_actualTimeUpdateBlock
_currentFrame
Td,N
T@?,C,N
prefetchForTime:
prefetchForTimes:
isExact
desiredTimeInterval
setDesiredTimeInterval:
toleranceBefore
toleranceAfter
actualTimeInterval
actualTimeUpdateBlock
setActualTimeUpdateBlock:
initWithFrameSet:
currentFrame
desiredFrameIndex
setExactTimeInterval:
setCurrentFrame:
T@"AVPlayerItem",R,V_playerItem
seeking
TB,GisSeeking,V_seeking
seekPending
TB,GisSeekPending,V_seekPending
T@"AVPlayer",R,V_player
_lastSeekTime
_actualTimeInterval
_playerEnteredIFrameMode
_seeking
_seekPending
_playerItem
initWithPlayerItem:maximumImageSize:
playerItemVariantChanged:
cmtimeDesired
cmtimeToleranceBefore
cmtimeToleranceAfter
setActualTimeInterval:
_seekToDesiredTime
playerItem
isSeeking
setSeeking:
isSeekPending
setSeekPending:
replaceCurrentItemWithPlayerItem:
setPlayerRole:
setIFramePrefetchTargetDimensions:
selectMediaOption:inMediaSelectionGroup:
statusOfValueForKey:error:
_isStreaming
_avkitIsStreaming
canPlayFastForward
_avkitIsStreamingWithoutIFrames
_isPlayerScrubbingSupported
_avkitDescription
setLineCap:
setStrokeColor:
redColor
setLineWidth:
setPath:
layerClass
T@"AVPlayer",&,N
playerLayer
renderSize
videoComposition
maximumSizeForFrameImages
T@"UIImage",&,N,V_maskImage
T@"<AVThumbLayerController>",&,N,V_thumbLayerController
T@"NSArray",&,N,V_interstitialTimes
T@"AVTransportBarMask",R,V_mask
T@"AVDurationTimeFormatter",R,V_durationTimeFormatter
Td,N,V_unavailableFractionLeading
Td,N,V_availableFraction
T@"NSDateFormatter",R,V_dateFormatter
T@"NSDateFormatter",R,V_currentDateFormatter
T@"NSDate",&,N,V_dateCorrespondingToStartTimeTextLabel
T@"NSDate",&,N,V_dateCorrespondingToTimeRemainingTextLabel
T{CGRect={CGPoint=dd}{CGSize=dd}},N,V_scrubbingRegionBounds
coastingAlive
TB,N,G_isCoastingAlive,S_setCoastingAlive:,V_coastingAlive
trackingScrubTouch
TB,N,G_isTrackingScrubTouch,S_setTrackingScrubTouch:,V_trackingScrubTouch
animatingVisibility
TB,R,N,GisAnimatingVisibility,V_animatingVisibility
T@"_UIVisualEffectBackdropView",&,N,V_transportBarCaptureView
T@"UIVisualEffectView",R,N
T@"<AVNowPlayingFrameSource>",W,N,V_frameSource
T@"AVPlayerItem",&,N
T@"AVFrameSet",&,N
Tq,N,V_focusTracking
Td,N,V_focusTrackingTension
live
TB,N,GisLive,V_live
loading
TB,N,GisLoading,V_loading
unusable
TB,N,GisUnusable,V_unusable
TB,N,V_hidesSeekableRange
Td,N,V_startTime
T@"NSDate",C,N,V_startDate
T@"NSDate",C,N,V_endDate
T@"NSDate",&,N,V_clockDateForTimeZero
TB,N,V_displaysClockTimes
Td,N,V_duration
Td,R,N,V_currentTimeInterval
Td,R,N,V_savedTimeInterval
TB,N,V_honorsActualThumbnailTime
displaysCurrentTime
TB,N,GisCurrentTimeDisplayed,V_displaysCurrentTime
displaysRemainingTime
TB,N,GisRemainingTimeDisplayed,V_displaysRemainingTime
T@"NSArray",&,N
scrubbing
TB,R,N,GisScrubbing,V_scrubbing
TB,N,V_displaysScrubbingFrames
TQ,R,N
T@"NSString",C,N,V_needleText
Tq,N,V_hint
Tq,N,V_scrubMode
TQ,N,V_scanningSpeedHintNumber
_barView
_barVisualEffectView
_barBorderView
_barFillImageView
_visualEffectMaskView
_visibleScrubNeedle
_scrubNeedleHeight
_scrubNeedleBottom
_animatedScrubNeedle
_scrubNeedleAnimator
_scrubNeedleBehavior
_scrubNeedleMovementBehavior
_scrubNeedleSlidingBehavior
_scrubNeedleMomentumBehavior
_accumulatedScrubTranslation
_initialScrubGestureInfo
_lastScrubGestureInfo
_rotaryElapsedTimeMarker
_rotaryScrubNeedle
_rotaryScrubCenterPunchout
_rotaryScrubNeedleLabelOffset
_layoutConstraintElapsedTimeLabelTopFromRotaryNeedle
_rotaryScrubHideAnimator
_rotaryScrubUnhideAnimator
_elapsedTimeMarker
_elapsedTimeMarkerLeft
_thumbnailView
_thumbnailWidthZero
_thumbnailHeightZero
_clonedPlayerView
_scrubPlayerView
_scrubImageView
_gradientView
_isClonedPlayerViewActive
_shouldFadeTimeLabels
_scrubNeedleTimeLabel
_elapsedTimeLabel
_currentClockTimeLabel
_layoutConstraintElapsedTimeLabelTop
_layoutConstraintCurrentClockTimeLabelTop
_startTimeLabel
_remainingTimeLabel
_endingClockTimeLabel
_interstitialTimeLabel
_hintIconLeft
_scanningSpeedLeft
_hintIconRight
_scanningSpeedRight
_hintIconLeftRelativeTimeHorizontalConstraint
_hintIconLeftClockTimeHorizontalConstraint
_hintIconRightRelativeTimeHorizontalConstraint
_hintIconRightClockTimeHorizontalConstraint
_loadingSpinner
_blockedView
_timeCorrespondingToElapsedTimeTextLabel
_timeCorrespondingToRemainingTimeTextLabel
_timeIntervalFromStreamTimeToClockDate
_timeOfLastCoastingAliveUpdate
_clonedPlayer
_scrubPlayerItem
_animatingVisibility
_live
_loading
_unusable
_hidesSeekableRange
_displaysClockTimes
_honorsActualThumbnailTime
_displaysCurrentTime
_displaysRemainingTime
_scrubbing
_displaysScrubbingFrames
_coastingAlive
_trackingScrubTouch
_maskImage
_transportBarCaptureView
_frameSource
_thumbLayerController
_focusTracking
_focusTrackingTension
_startTime
_startDate
_endDate
_clockDateForTimeZero
_duration
_currentTimeInterval
_savedTimeInterval
_needleText
_hint
_scrubMode
_scanningSpeedHintNumber
_interstitialTimes
_mask
_durationTimeFormatter
_unavailableFractionLeading
_availableFraction
_dateFormatter
_currentDateFormatter
_dateCorrespondingToStartTimeTextLabel
_dateCorrespondingToTimeRemainingTextLabel
_scrubbingRegionBounds
createViews
_updateScanningSpeedHintLabel
setScanningSpeedHintNumber:
_updateBackgroundAppearanceOfLabel:
_setFocusedAppearance:forLabel:
setFocusTracking:
setFocusTrackingTension:
_attachmentRangeForScrubNeedle
_setupScrubNeedleAnimatorIfNeeded
isHiddenOrHasHiddenAncestor
setAnimatingVisibility:
barVisualEffectView
setTransportBarCaptureView:
isHidden
setHidden:animated:
setLive:
setStartDate:
setLoading:
setUnusable:
setUnavailableFractionLeading:
setAvailableFraction:
_setCoastingAlive:
_isScrubberCoasting
setAvailableFractionFrom:to:animated:
setAvailableTimeFrom:to:
endTime
timeIntervalSinceNow
currentDateReal
_currentTimeFraction
_savedTimeFraction
setThumbLayerController:
setDisplaysScrubbingFrames:
startScrubbingForPauseTime:
currentTimeIntervalForThumbnailOrNeedle
stopScrubbingWithResetToPauseMarker:animated:
_updateScrubbingRegionBounds
_updateTransportBarMaskIfNeeded
_updateBorderWidth
setDisplaysClockTimes:
setDisplaysClockTimes:animated:
_updateStartTimeText
_updateRemainingTimeText
_updateElapsedTimeText
_areTimeLabelsVisible
_updateTimeLabelVisibility
setCurrentTimeInterval:animated:
_setCurrentTimeInterval:updatingNeedlePositions:animated:
_timeIntervalFromScrubNeedlePosition
_timeIntervalFromScrubNeedlePositionOrThumbnail
updateNeedlePositionToReflectThumbnailTime
setDuration:
setStartTime:
setDisplaysCurrentTime:
setDisplaysRemainingTime:
_updateNeedlePositions
_updateNeedlePositionsShouldUpdateElapsedTimeMarker:
maskCornersForNeedlePosition:
_updateRotaryNeedleElapsedTimeLabelOffset
_updateRotaryFingerPositionWithScrubInfo:
_rotaryTransformForInitialScrubInfo:currentInfo:
scrubBegan
scrubMovedWithTranslation:velocity:enableSnapping:gestureInfo:
scrubEndedWithTranslation:velocity:
_stopScrubNeedleMomentum
setHint:
setScrubMode:
setScrubMode:gestureInfo:
_updateAccessoryVisibility
setNeedleText:
frameIndexForTime:
currentFrameIndex
clonedPlayer
setClonedPlayer:
scrubPlayerItem
setScrubPlayerItem:
scrubFrameSet
setScrubFrameSet:
_updateThumbnailImage
reloadFrames
interstitialDisplayTimes
setInterstitialDisplayTimes:
makeMaskImageWasDirty:
accessibilityElements
isAnimatingVisibility
maskImage
setMaskImage:
transportBarCaptureView
frameSource
setFrameSource:
thumbLayerController
focusTracking
focusTrackingTension
isLoading
isUnusable
hidesSeekableRange
setHidesSeekableRange:
startTime
startDate
endDate
setEndDate:
clockDateForTimeZero
setClockDateForTimeZero:
displaysClockTimes
duration
currentTimeInterval
savedTimeInterval
honorsActualThumbnailTime
setHonorsActualThumbnailTime:
isCurrentTimeDisplayed
isRemainingTimeDisplayed
isScrubbing
displaysScrubbingFrames
scrubbingRegionBounds
setScrubbingRegionBounds:
needleText
hint
scrubMode
scanningSpeedHintNumber
interstitialTimes
setInterstitialTimes:
mask
durationTimeFormatter
unavailableFractionLeading
availableFraction
dateFormatter
currentDateFormatter
dateCorrespondingToStartTimeTextLabel
setDateCorrespondingToStartTimeTextLabel:
dateCorrespondingToTimeRemainingTextLabel
setDateCorrespondingToTimeRemainingTextLabel:
_isCoastingAlive
_isTrackingScrubTouch
_setTrackingScrubTouch:
sortedArrayWithOptions:usingComparator:
animateWithDuration:animations:
layoutIfNeeded
noteHintShown:
addAnimations:delayFactor:
transform
stopAnimation:
filterWithType:
setTransform:
shouldShowHint:
setConstant:
setResistance:
setMagnitude:
setPushDirection:
initWithItems:mode:
setAnchorPoint:
center
anchorPoint
initWithItem:attachedToAnchor:
finishAnimationAtPosition:
setActive:
setMaskedCorners:
updateItemUsingCurrentState:
alpha
performWithoutAnimation:
date
dateByAddingTimeInterval:
dateWithTimeIntervalSinceNow:
isEqualToDate:
animateWithDuration:animations:completion:
setBorderWidth:
convertRect:toView:
timeIntervalSinceDate:
earlierDate:
constant
setAttachmentRange:
slidingAttachmentWithItem:attachmentAnchor:axisOfTranslation:
_setGroupName:
_setCaptureView:
setFriction:
setElasticity:
setDensity:
setAllowsRotation:
initWithItems:
initWithReferenceView:
attachmentRange
_setContinuousCornerRadius:
blackColor
colorWithAlphaComponent:
whiteColor
trailingAnchor
leadingAnchor
firstBaselineAnchor
setContentMode:
greenColor
purpleColor
yellowColor
standardUserDefaults
setPriority:
constraintLessThanOrEqualToAnchor:
constraintGreaterThanOrEqualToAnchor:
heightAnchor
constraintEqualToConstant:
setMaskView:
initWithEffect:
effectWithStyle:
setMasksToBounds:
setBorderColor:
addObjectsFromArray:
setIsAccessibilityElement:
preheat
setTimeStyle:
setDateStyle:
invalidateIntrinsicContentSize
setLegibleDisplayEnabled:
setLanczosFilterDownscaleFactor:
setForScrubbingOnly:
setLanczosFilterDownscalingEnabled:
TB,N,V_suppressDescription
T@"AVInfoPanelDescriptionViewController",R
T@"AVInfoPanelNavigationCollectionViewController",R
_descriptionViewController
_navigationViewController
_dividerView
_suppressDescription
descriptionViewController
navigationViewController
hasContent
setSuppressDescription:
willMoveToParentViewController:
_navigationFlowLayout
suppressDescription
setScrollDirection:
setMinimumLineSpacing:
setMinimumInteritemSpacing:
setEstimatedItemSize:
effectForBlurEffect:
addChildViewController:
addArrangedSubview:
setSpacing:
setDistribution:
setAxis:
_titleForInfo
_titleForNavigationOnly
viewIfLoaded
_preventsAppearanceProxyCustomization
T@"UIView",&,N,V_flatBackdrop
T@"AVGradientView",&,N,V_gradientBackdrop
TB,N,V_dimsEntireBounds
_dimsEntireBounds
_flatBackdrop
_gradientBackdrop
setDimsEntireBounds:
dimsEntireBounds
flatBackdrop
setFlatBackdrop:
gradientBackdrop
setGradientBackdrop:
clearColor
setAutoresizingMask:
TQ,R,N,V_currentScanningDirection
TB,R,N,V_isSeeking
_isSeeking
_currentScanningDirection
initWithScanningDirection:isSeeking:
currentScanningDirection
T@"AVMusicAppBehavior",W,N,V_behavior
T@"AVObservationController",R,N,V_observationController
T@"AVPlayerController",&,N,V_playerController
TB,N,GisScrubbing,V_scrubbing
T@"NSNumber",&,N,V_seekTargetTime
T@"AVMusicAppBehaviorPlaybackState",&,N,V_playbackState
TB,N,V_showsSkipItemButtons
skipToPreviousItemButtonEnabled
TB,N,GisSkipToPreviousItemButtonEnabled,V_skipToPreviousItemButtonEnabled
skipToNextItemButtonEnabled
TB,N,GisSkipToNextItemButtonEnabled,V_skipToNextItemButtonEnabled
T@"AVPlayerViewController",R,W,N,V_playerViewController
_showsSkipItemButtons
_skipToPreviousItemButtonEnabled
_skipToNextItemButtonEnabled
_playerViewController
_behavior
_seekTargetTime
_observationController
_playerController
_playbackState
T@"AVPlayerViewController",R,W,N
playerViewController
playerViewController:shouldSeekToTime:completion:
playerViewController:shouldSeekToDate:completion:
playerViewController:shouldPlayFromTime:completion:
playerViewController:shouldPauseWithCompletion:
playerViewController:shouldScanAtRate:completion:
didFinishSeekForPlayerViewController:
didFinishScanningForPlayerViewController:
viewDidLoad
contentViewWillTransitionToSize:withCoordinator:
willStartPictureInPictureWithViewController:
didStopPictureInPicture
makePlaybackContentContainerWithFrame:activeContentView:
playerControllerDidChange
T@,W,N
initWithAVKitOwner:
willAddBehavior:
didAddBehavior:
willRemoveBehavior:
didRemoveBehavior:
behavior
setBehavior:
setSkipToNextItemButtonEnabled:
setSkipToPreviousItemButtonEnabled:
setShowsSkipItemButtons:
_updateSkippingBehavior
showsSkipItemButtons
isSkipToPreviousItemButtonEnabled
isSkipToNextItemButtonEnabled
seekTargetTime
setSeekTargetTime:
setScrubbing:
observationController
playerController
setPlayerController:
playbackState
setPlaybackState:
T{?=qiIq},R
T@"NSDate",&,N,V_startDate
Td,R,V_startTime
Td,R,V_duration
initWithStartTime:duration:
initWithStartTime:endTime:
initWithCMTimeRange:
initWithAVTimedMetadataGroup:
initWithUnionOfCMTimeRanges:
setMapTime:toDate:
setMapDate:toTime:
dateForTime:
timeForDate:
startCMTime
endCMTime
cmTimeRange
containsTime:
containsDate:
deltaTimeFromOutsideTime:
pinnedTime:
timeRangeIntersectingWithTimeRange:
timeRangeExcludingTimeRange:
timeRangeByAddingTimeInterval:shiftingDates:
timeRangeByAddingTimeInterval:
isEqualToTimeRange:
compare:
stringByAppendingFormat:
stringFromSeconds:
setFormatTemplate:
setStyle:
timeRangeZero
CMTimeRangeValue
T@"NSArray",R,V_timeRanges
Td,R,V_combinedDuration
_timeRanges
_combinedDuration
initWithTimeRanges:
initWithTimedMetadataGroups:
count
timeRangeContainingTime:
timeRangeClosestToTime:
timeRangeBeforeTime:
arrayOfBoundaryTimes
arrayOfDisplayTimesMatching:
arrayOfDisplayTimes
timeRangesBetweenDisplayTime:and:
displayTimeRangeTrimmedToTimeRange:
timeRanges
combinedDuration
enumerateObjectsWithOptions:usingBlock:
sortedArrayUsingSelector:
TB,N,V_includeTransportBar
TB,N,V_includeInfoViews
TB,N,V_includeInteractiveOverlay
TB,N,V_requiresLinearPlayback
T@"NSArray",C,N,V_allowedSubtitleOptionLanguages
TB,N,V_requiresFullSubtitles
TB,N,V_disableScrubbingThumbnails
T@"AVTransportBarViewController",&,N,V_clientTransportBarViewController
TB,N,V_appliesPreferredDisplayCriteriaAutomatically
T@"UIViewController",&,N,V_customOverlayViewController
Tq,N,V_skippingBehavior
skipForwardEnabled
TB,N,GisSkipForwardEnabled,V_skipForwardEnabled
skipBackwardEnabled
TB,N,GisSkipBackwardEnabled,V_skipBackwardEnabled
T@?,C,N,V_skipToNextItem
T@?,C,N,V_skipToPreviousItem
offOptionAvailableForSubtitles
TB,R,GisOffOptionAvailableForSubtitles
TB,N,V_allowInfoMetadataSubpanel
TB,N,V_allowsPictureInPicturePlayback
TB,N,V_waitingForNextStream
T@"AVControlItem",&,N,V_interactiveOverlayItem
_includeTransportBar
_includeInfoViews
_includeInteractiveOverlay
_requiresLinearPlayback
_requiresFullSubtitles
_disableScrubbingThumbnails
_appliesPreferredDisplayCriteriaAutomatically
_skipForwardEnabled
_skipBackwardEnabled
_allowInfoMetadataSubpanel
_allowsPictureInPicturePlayback
_waitingForNextStream
_allowedSubtitleOptionLanguages
_clientTransportBarViewController
_customOverlayViewController
_skippingBehavior
_skipToNextItem
_skipToPreviousItem
_interactiveOverlayItem
isOffOptionAvailableForSubtitles
_descriptionOfTrueBooleanProperty:
_descriptionOfBooleanProperty:
includeTransportBar
setIncludeTransportBar:
includeInfoViews
setIncludeInfoViews:
includeInteractiveOverlay
setIncludeInteractiveOverlay:
setRequiresLinearPlayback:
allowedSubtitleOptionLanguages
setAllowedSubtitleOptionLanguages:
requiresFullSubtitles
setRequiresFullSubtitles:
disableScrubbingThumbnails
setDisableScrubbingThumbnails:
clientTransportBarViewController
setClientTransportBarViewController:
appliesPreferredDisplayCriteriaAutomatically
setAppliesPreferredDisplayCriteriaAutomatically:
customOverlayViewController
setCustomOverlayViewController:
skippingBehavior
setSkippingBehavior:
isSkipForwardEnabled
setSkipForwardEnabled:
isSkipBackwardEnabled
setSkipBackwardEnabled:
skipToNextItem
setSkipToNextItem:
skipToPreviousItem
setSkipToPreviousItem:
allowInfoMetadataSubpanel
setAllowInfoMetadataSubpanel:
allowsPictureInPicturePlayback
setAllowsPictureInPicturePlayback:
waitingForNextStream
setWaitingForNextStream:
interactiveOverlayItem
setInteractiveOverlayItem:
boolValue
stringByAppendingString:
TQ,R,V_number
T@"NSString",R,C,V_title
_imageBlock
_number
initWithStartTime:duration:number:title:imageFaultBlock:
number
initWithCGImage:
playbackChapterWithStartTime:duration:number:title:imageFaultBlock:
chapterAtTime:inChapters:
objectAtIndexedSubscript:
T@?,C,N,V_actionBlock
T@"NSString",C,N,V_title
_private
TB,N,G_isPrivate,S_setPrivate:,V__private
T@"UIImage",&,N,G_privateImage,S_setPrivateImage:
T@"UIImage",&,N
enabled
TB,N,GisEnabled,V_enabled
T@?,C,N,V_action
T@"UIColor",&,N,V_tintColor
T@"NSString",C,N,V_accessibilityIdentifier
_enabled
__private
_accessibilityIdentifier
_action
_tintColor
_actionBlock
accessibilityIdentifier
setAccessibilityIdentifier:
supportsSecureCoding
encodeWithCoder:
setImage:
setTintColor:
setActionBlock:
_blockAction:
_privateImage
_setPrivateImage:
__pipDummy:
isEnabled
setEnabled:
action
setAction:
tintColor
actionBlock
setTitle:
_isPrivate
_setPrivate:
encodeObject:forKey:
encodeBool:forKey:
decodeObjectOfClass:forKey:
decodeBoolForKey:
imageUpdatingBlock
T@?,C,N,G_imageUpdatingBlock,S_setImageUpdatingBlock:,V_imageUpdatingBlock
enabledBlock
T@?,C,N,G_isEnabledBlock,S_setEnabledBlock:,V_enabledBlock
_imageUpdatingBlock
_enabledBlock
_setImageUpdatingBlock:
_isEnabledBlock
_setEnabledBlock:
controlItemWithImage:action:
size
accessibilityLabel
_isSpacer
_sendAction
width
cancelPictureInPictureFromPlayerInterface:
currentState
setAccessibilityLabel:
_cancelPiPControlItem
_stopPiPControlItem
_startPiPControlItem
spacer
TB,R,N,G_isSpacer
TB,N,G_isPrivate,S_setPrivate:
T@"AVAsset",W,V_asset
T@"AVNavigationMarkersGroup",R,N,V_navigationMarkersGroup
_navigationMarkersGroup
initWithAsset:
setAsset:
navigationMarkersGroup
T@"AVKeyValueObserverCollection",&,N,V_kvoPlayer
T@"AVKeyValueObserverCollection",&,N,V_kvoPlayerItem
T@"AVDelegateManager",&,N,V_delegateManager
T@"AVInterstitialController",&,N,V_interstitialController
T@"AVTimeRange",&,N,V_timeRangeSeekable
Td,N,V_longestSeekableDurationSeenForCurrentItem
Tq,N,V_currentSeekReason
Td,N,V_contentDurationCached
TB,N,V_isContentDurationIndefinite
T@"NSDate",&,N,V_programStartDate
TB,N,V_isProgramStartDateExact
T@"NSDate",&,N,V_programEndDate
T@"NSDate",&,N,V_clientSpecifiedDate
TB,N,V_isProgramEndDateExact
TB,N,V_liveStreamEventModePossible
T@"_AVChapterInfo",&,N,V_chapterInfo
loadingChapterInfo
TB,GisLoadingChapterInfo,V_loadingChapterInfo
TB,N,V_haveLoadedEmbeddedChapters
T@"NSArray",&,N,V_filteredNavigationMarkerGroups
T@"AVNavigationMarkersGroup",&,N,V_filteredEmbeddedChaptersNavigationMarkersGroup
lastObservedEffectiveRateNonZero
TB,N,GisLastObservedEffectiveRateNonZero,V_lastObservedEffectiveRateNonZero
TB,N,V_resumePlaybackAfterNextSuccessfulSeek
T@"AVPlayerItem",W,N,V_currentPlayerItemForPlayerItemDelegate
_seekCount
_seekRequestCount
_isContentDurationIndefinite
_isProgramStartDateExact
_isProgramEndDateExact
_liveStreamEventModePossible
_loadingChapterInfo
_haveLoadedEmbeddedChapters
_lastObservedEffectiveRateNonZero
_resumePlaybackAfterNextSuccessfulSeek
_kvoPlayer
_interstitialController
_timeRangeSeekable
_longestSeekableDurationSeenForCurrentItem
_currentSeekReason
_contentDurationCached
_programStartDate
_programEndDate
_clientSpecifiedDate
_chapterInfo
_filteredNavigationMarkerGroups
_filteredEmbeddedChaptersNavigationMarkersGroup
_currentPlayerItemForPlayerItemDelegate
willBeginSeek
didEndSeek
isRequestingSeek
willRequestSeek
didRequestSeek
kvoPlayer
setKvoPlayer:
interstitialController
setInterstitialController:
timeRangeSeekable
setTimeRangeSeekable:
longestSeekableDurationSeenForCurrentItem
setLongestSeekableDurationSeenForCurrentItem:
currentSeekReason
setCurrentSeekReason:
contentDurationCached
setContentDurationCached:
isContentDurationIndefinite
setIsContentDurationIndefinite:
programStartDate
setProgramStartDate:
isProgramStartDateExact
setIsProgramStartDateExact:
programEndDate
setProgramEndDate:
clientSpecifiedDate
setClientSpecifiedDate:
isProgramEndDateExact
setIsProgramEndDateExact:
liveStreamEventModePossible
setLiveStreamEventModePossible:
chapterInfo
setChapterInfo:
isLoadingChapterInfo
setLoadingChapterInfo:
haveLoadedEmbeddedChapters
setHaveLoadedEmbeddedChapters:
filteredNavigationMarkerGroups
setFilteredNavigationMarkerGroups:
filteredEmbeddedChaptersNavigationMarkersGroup
setFilteredEmbeddedChaptersNavigationMarkersGroup:
isLastObservedEffectiveRateNonZero
setLastObservedEffectiveRateNonZero:
resumePlaybackAfterNextSuccessfulSeek
setResumePlaybackAfterNextSuccessfulSeek:
currentPlayerItemForPlayerItemDelegate
setCurrentPlayerItemForPlayerItemDelegate:
tvExtras
_nukeTVExtras
_updateNavigationMarkers
updateStartAndEndDates
updateTimeRanges
queuePlayer
items
timeRangeForNonLivePlayback
laterDate:
timeRangeForNavigation
_durationDidChange
displayedDuration
isLiveStreamEventModePossible
timeIntervalSince1970
hasMoreEnqueuedContent
tracksWithMediaType:
naturalSize
loadValuesAsynchronouslyForKeys:completionHandler:
avkitMediaType
_willBeginSeek
_didEndSeek
requestNavigateToTime:fromTime:reason:playWhenReady:permissionHandler:seekCompletion:
seekToDate:completionHandler:
_willRequestSeek
_didRequestSeek
seekToTime:seekReason:completionHandler:
seekToDate:seekReason:completionHandler:
playbackEndTime
hasStartAndEndDates
requestPlayWithCompletion:
requestSeekToDate:seekReason:completionHandler:
requestSeekToTime:seekReason:permissionHandler:completionHandler:
seekableTimeRangesLastModifiedTime
sharedAVSystemController
mainBundle
bundleIdentifier
setAttribute:forKey:error:
requestPauseWithCompletion:
setResourceConservationLevelWhilePaused:
_loadEmbeddedChapterNavigationMarkersGroupAsynchronously:
isFirstUnfilteredNavigationGroupChapters
isFirstFilteredNavigationGroupChapters
externalNavigationMarkerGroups
embeddedChapterNavigationMarkersGroup
initWithTVPlayer:
invalidateTV
linearPlaybackRequiredByInterstitial:
displayTimeRangeForNavigation
isEffectiveRateNonZero
setEffectiveRateNonZero:
exactStartDate
exactEndDate
shouldBounceBackAfterScanForwardPastEndTime
bounceBackReturningDisplayTime
loadAspectRatio:
shouldContinuePlaybackInBackground
isSeekingTV
playerItem:shouldSeekToTime:toleranceBefore:toleranceAfter:
gotoEndOfSeekableRanges:
requestSeekToTime:reason:playWhenReady:
requestSeekToDate:reason:playWhenReady:
requestNavigateToDate:fromDate:reason:playWhenReady:permissionHandler:completion:
togglePlaybackEvenWhenInBackground:
setLimitReadAheadIfAllowed:
externalChapterNavigationMarkersGroup
primaryNavigationMarkersGroup
timebase
T@"AVDelegateManager",&,N
T@"AVInterstitialController",R,N
Tq,R,N
T@"NSDate",&,N
T@"NSDate",R,N
effectiveRateNonZero
TB,R,N,GisEffectiveRateNonZero
T@"AVQueuePlayer",R,N
TB,R,N,GisLiveStreamEventModePossible
T@"AVPlayerItem",R,N
T@"AVNavigationMarkersGroup",R,N
T@"NSArray",R,N
T@"AVPlayerLayer",R,N
keyPathsForValuesAffectingPlayerLayer
setWithObjects:
_simplePlayerLayerView
attachPlayerLayer
detachPlayerLayer
constraintsWithVisualFormat:options:metrics:views:
T@"AVInterstitialTimeRange",R,V_interstice
_interstice
initWithInterstice:
interstice
timeRange
T@"NSDate",R,V_startDate
T@"NSDate",R,V_endDate
initWithTimeRange:
initWithStart:end:
isEqualToInterstitialTimeRange:
_setDurationTimeInterval:
_setCollapsedInTimeLine:
distantPast
active
TB,N,GisActive,S_setActive:,V_active
TQ,N,S_setWatchCount:,V__watchCount
Td,N,V_linearPlaybackRequirementDuration
Tq,N,V_requiredViewingPolicy
T{?={?=qiIq}{?=qiIq}},R,V_timeRange
_hidden
_collapsedInTimeLine
_active
__watchCount
_linearPlaybackRequirementDuration
_requiredViewingPolicy
_timeRange
initWithHiddenTimeRange:
isSkipped
isCollapsedInTimeLine
_setActive:
isActive
_watchCount
_setWatchCount:
linearPlaybackRequirementDuration
setLinearPlaybackRequirementDuration:
requiredViewingPolicy
setRequiredViewingPolicy:
decodeObjectForKey:
dateBasedInterstice
requiresLinearPlaybackForTime:
timeRangeWithInterstice:
initWithInterstitialTimeRanges:
T@"AVInterstitialTimeRange",R
T@"AVInterstitialDateRange",R
hidden
TB,R,GisHidden
skipped
TB,R,GisSkipped
collapsedInTimeLine
TB,R,GisCollapsedInTimeLine
TB,N
T@"AVInfoPanelAudioViewController",R,V_audioViewController
T@"AVInfoPanelSubtitlesViewController",R,V_subtitlesViewController
T@"NSArray",&,N,V_customViewControllers
T@"<AVInfoPanelViewControllerDelegate>",W,N,V_delegate
T{CGRect={CGPoint=dd}{CGSize=dd}},R,N
_tabBarController
_metadataViewController
_subtitlesViewController
_audioViewController
_tabBarBackgroundView
_infoPanelCaptureView
_infoPanelCaptureViewHeightConstraint
_customViewControllers
infoMenuController:willSelectViewController:
infoMenuController:didSelectViewController:
tabBarController:shouldSelectViewController:
tabBarController:didSelectViewController:
tabBarController:willBeginCustomizingViewControllers:
tabBarController:willEndCustomizingViewControllers:changed:
tabBarController:didEndCustomizingViewControllers:changed:
tabBarControllerSupportedInterfaceOrientations:
tabBarControllerPreferredInterfaceOrientationForPresentation:
tabBarController:interactionControllerForAnimationController:
tabBarController:animationControllerForTransitionFromViewController:toViewController:
viewWillAppear:
viewWillLayoutSubviews
viewWillDisappear:
setCustomViewControllers:
suppressDescriptionSubpanel
setSuppressDescriptionSubpanel:
viewBoundsOccluded
_findWrapperForCustomViewController:
_setupTabs
_dismiss
_swipeUpGestureDetected:
_upArrowGestureDetected:
_menuButtonGestureDetected:
_playPauseButtonGestureDetected:
audioViewController
subtitlesViewController
customViewControllers
presentedViewController
presentingViewController
cancelPreviousPerformRequestsWithTarget:selector:object:
parentViewController
performSelector:withObject:afterDelay:
nextFocusedItem
previouslyFocusedItem
isDescendantOfView:
animateAlongsideTransition:completion:
isCancelled
transitionCoordinator
insertSubview:above:
superview
setAllowedPressTypes:
_setCornerRadius:continuous:maskedCorners:
setModalPresentationStyle:
T@"<AVChannelInterstitialContainerDelegate>",W,N,V_containerDelegate
T@"UIViewController",&,N,V_interstitialViewController
T@"UIView",&,N,V_snapshotView
_swipeLeft
_swipeRight
_containerDelegate
_interstitialViewController
_snapshotView
initWithNibName:bundle:
initWithInterstitialViewController:
_isPresented
willTransitionInterstitialViewController
transitionToInterstitialViewController:direction:completion:
_addIntersitialView:
setInterstitialViewController:
preferredFocusEnvironments
_swipeLeft:
_swipeRight:
containerDelegate
setContainerDelegate:
interstitialViewController
snapshotView
setSnapshotView:
arrayByAddingObjectsFromArray:
childViewControllers
makeObjectsPerformSelector:withObject:
numberWithBool:
setNeedsFocusUpdate
setView:
isViewLoaded
setInterruptible:
insertSubview:aboveSubview:
setLeftToRight:
animationForKey:
insertSubview:belowSubview:
snapshotViewAfterScreenUpdates:
dismissIfPresentedWithAnimated:completion:
T@"NSString",&,N
_checkmarkImageView
_titleLabel
prepareForReuse
setSelected:
traitCollectionDidChange:
_updateAppearance
setMarqueeRunning:
isFocused
setContentCompressionResistancePriority:forAxis:
constraintLessThanOrEqualToAnchor:constant:
constraintGreaterThanOrEqualToAnchor:constant:
setPreferredSymbolConfiguration:
configurationWithFont:scale:
systemImageNamed:
setMarqueeEnabled:
_labelFontForCellWithoutImage
labelForTitle
sizeForTitle:
systemLayoutSizeFittingSize:
imageWithConfiguration:
T@"NSDiffableDataSourceSnapshot",&,N,V_currentSnapshot
T@"UICollectionViewDiffableDataSource",&,N,V_audioRoutesDataSource
T@"NSMutableDictionary",&,N,V_mediaOptionsByID
T@"NSString",&,N,V_focusedMediaOptionIdentifier
T@"<AVInfoPanelAudioRouteSelectionDelegate>",W,N,V_selectionDelegate
T@"NSArray",&,N,V_mediaOptions
_selectionDelegate
_mediaOptions
_currentSnapshot
_audioRoutesDataSource
_mediaOptionsByID
_focusedMediaOptionIdentifier
collectionView:layout:sizeForItemAtIndexPath:
collectionView:layout:insetForSectionAtIndex:
collectionView:layout:minimumLineSpacingForSectionAtIndex:
collectionView:layout:minimumInteritemSpacingForSectionAtIndex:
collectionView:layout:referenceSizeForHeaderInSection:
collectionView:layout:referenceSizeForFooterInSection:
collectionView:shouldHighlightItemAtIndexPath:
collectionView:didHighlightItemAtIndexPath:
collectionView:didUnhighlightItemAtIndexPath:
collectionView:shouldSelectItemAtIndexPath:
collectionView:shouldDeselectItemAtIndexPath:
collectionView:didSelectItemAtIndexPath:
collectionView:didDeselectItemAtIndexPath:
collectionView:willDisplayCell:forItemAtIndexPath:
collectionView:willDisplaySupplementaryView:forElementKind:atIndexPath:
collectionView:didEndDisplayingCell:forItemAtIndexPath:
collectionView:didEndDisplayingSupplementaryView:forElementOfKind:atIndexPath:
collectionView:shouldShowMenuForItemAtIndexPath:
collectionView:canPerformAction:forItemAtIndexPath:withSender:
collectionView:performAction:forItemAtIndexPath:withSender:
collectionView:transitionLayoutForOldLayout:newLayout:
collectionView:canFocusItemAtIndexPath:
collectionView:shouldUpdateFocusInContext:
collectionView:didUpdateFocusInContext:withAnimationCoordinator:
indexPathForPreferredFocusedViewInCollectionView:
collectionView:targetIndexPathForMoveFromItemAtIndexPath:toProposedIndexPath:
collectionView:targetContentOffsetForProposedContentOffset:
collectionView:canEditItemAtIndexPath:
collectionView:shouldSpringLoadItemAtIndexPath:withContext:
collectionView:shouldBeginMultipleSelectionInteractionAtIndexPath:
collectionView:didBeginMultipleSelectionInteractionAtIndexPath:
collectionViewDidEndMultipleSelectionInteraction:
collectionView:contextMenuConfigurationForItemAtIndexPath:point:
collectionView:previewForHighlightingContextMenuWithConfiguration:
collectionView:previewForDismissingContextMenuWithConfiguration:
collectionView:willPerformPreviewActionForMenuWithConfiguration:animator:
collectionView:willDisplayContextMenuWithConfiguration:animator:
collectionView:willEndContextMenuInteractionWithConfiguration:animator:
scrollViewDidScroll:
scrollViewDidZoom:
scrollViewWillBeginDragging:
scrollViewWillEndDragging:withVelocity:targetContentOffset:
scrollViewDidEndDragging:willDecelerate:
scrollViewWillBeginDecelerating:
scrollViewDidEndDecelerating:
scrollViewDidEndScrollingAnimation:
viewForZoomingInScrollView:
scrollViewWillBeginZooming:withView:
scrollViewDidEndZooming:withView:atScale:
scrollViewShouldScrollToTop:
scrollViewDidScrollToTop:
scrollViewDidChangeAdjustedContentInset:
sectionHeaderViewHeight
setMediaOptions:
setAllowsMultipleSelection:
allowsMultipleSelection
updateCollectionViewWithMediaOptions:
widthOfWidestCell
fullHeightForCellHeight:
_didSelectItemAtIndexPath:
selectionDelegate
setSelectionDelegate:
mediaOptions
currentSnapshot
setCurrentSnapshot:
audioRoutesDataSource
setAudioRoutesDataSource:
mediaOptionsByID
setMediaOptionsByID:
focusedMediaOptionIdentifier
setFocusedMediaOptionIdentifier:
section
indexPathsForSelectedItems
itemIdentifierForIndexPath:
indexPathForItemIdentifier:
nextFocusedIndexPath
presentShareAudioUIWithCompletion:
deselectItemAtIndexPath:animated:
sizeWithAttributes:
applySnapshot:animatingDifferences:completion:
scrollToItemAtIndexPath:atScrollPosition:animated:
deleteSectionsWithIdentifiers:
numberOfItemsInSection:
sectionIdentifiers
isHeadphonesRoute
appendItemsWithIdentifiers:intoSectionWithIdentifier:
isH1Route
isW1Route
isAirPlayRoute
routeSubtype
routeUID
appendSectionsWithIdentifiers:
setSupplementaryViewProvider:
dequeueReusableSupplementaryViewOfKind:withReuseIdentifier:forIndexPath:
snapshot
initWithCollectionView:cellProvider:
dequeueReusableCellWithReuseIdentifier:forIndexPath:
setRemembersLastFocusedIndexPath:
setContentInsetAdjustmentBehavior:
_setGradientMaskLengths:
registerClass:forSupplementaryViewOfKind:withReuseIdentifier:
registerClass:forCellWithReuseIdentifier:
setClearsSelectionOnViewWillAppear:
displayModeSwitchInProgress
TB,N,GisDisplayModeSwitchInProgress,S_setDisplayModeSwitchInProgress:,V_displayModeSwitchInProgress
_pbDisplayModeSwitchActiveNotification
_numberOfDisplayModeSwitchesInProgress
_displayCriteriaMatchingEnabledValue
_activeScenesDisplayCriteria
_displayModeSwitchInProgress
displayState:didChangeWithConnection:
initPrivate
preferredDisplayCriteriaForScene:
setPreferredDisplayCriteria:forScene:
considerDisplayModeSwitchFinished
isDisplayCriteriaMatchingEnabled
isDisplayModeSwitchInProgress
_setDisplayModeSwitchInProgress:
postNotificationName:object:userInfo:
shouldModeSwitchForFrameRate
shouldModeSwitchForDynamicRange
postNotificationName:object:
_updateUIClientSettingsWithBlock:
setDisplayConfigurationRequest:
setHdrMode:
setRefreshRate:
refreshRate
videoDynamicRange
removeStateObserver:
addStateObserver:
mapTableWithKeyOptions:valueOptions:
T@"AVKeyValueObserverCollection",R,V_keyValueObservers
TB,N,V_viewHasAppeared
playing
TB,N,GisPlaying,V_playing
Tf,N,V_playbackRate
scrubberEnabled
TB,N,GisScrubberEnabled,V_scrubberEnabled
playPauseButtonEnabled
TB,N,GisPlayPauseButtonEnabled,V_playPauseButtonEnabled
TB,N,V_showsStreamingControls
TB,N,V_showsLoadingIndicator
controlsVisible
TB,R,N,GareControlsVisible
_playing
_scrubberEnabled
_playPauseButtonEnabled
_showsStreamingControls
_showsLoadingIndicator
_viewHasAppeared
_playbackRate
_keyValueObservers
_beginObservations
_endObservations
areControlsVisible
setControlsVisible:animated:
upToNextNavigationMode
downToNextNavigationMode
skipToNextFrame
skipToPreviousFrame
_didChangePlayerControllerFrom:to:
didChangePlayerController
forwardMethodToPlayerViewController:sender:
isPlaying
setPlaying:
playbackRate
setPlaybackRate:
isScrubberEnabled
setScrubberEnabled:
isPlayPauseButtonEnabled
setPlayPauseButtonEnabled:
showsStreamingControls
setShowsStreamingControls:
showsLoadingIndicator
setShowsLoadingIndicator:
keyValueObservers
viewHasAppeared
setViewHasAppeared:
nextResponder
T@"<AVImageProxyProtocol>",&,N
_imageView
_imageHeightConstraint
_imageWidthConstraint
_imageViewLeftAnchorContraint
_imageViewRightAnchorContraint
_titleWidthConstraint
_titleLabelTopConstraint
_titleLabelBottomConstraint
_imageProxy
_kvoController
_updateImage
imageProxy
setImageProxy:
focusedFrameGuide
_labelFontForCellWithImage
constraintLessThanOrEqualToConstant:
proxySize
_imageWithColor:andSize:
transitionWithView:duration:options:animations:completion:
currentMode
convertRect:fromView:
config
_layeredImageContainer
_setLayeredImageCornerRadius:
setAdjustsImageWhenAncestorFocused:
_checkmarkImage
T@"UIImage",R,N,V_image
T{CGSize=dd},N,V_proxySize
_proxySize
T{CGSize=dd},R,N
initWithImage:
setProxySize:
T@"UIMotionEffectGroup",&,N,V_stackMotionEffects
T@"UIMotionEffectGroup",&,N,V_highlightMotionEffects
T@"UITapGestureRecognizer",R,N
T@"UIImageView",&,N,V_highlightView
T@"AVPlayerController",&,N
readyForDisplay
TB,R,N,GisReadyForDisplay
T@"NSDictionary",C,N
TB,N,V_acceptsFocus
T@"AVPlayerLayer",&,N,V_playerLayer
T@?,C,N,V_selectionAction
_selectGestureRecognizer
_acceptsFocus
_playerLayer
_selectionAction
_stackMotionEffects
_highlightMotionEffects
_highlightView
didReceiveFocusInContext:withAnimationCoordinator:
didLoseFocusInContext:withAnimationCoordinator:
videoGravity
setVideoGravity:
isReadyForDisplay
videoRect
pixelBufferAttributes
setPixelBufferAttributes:
selectGestureRecognizer
didClickSelect:
setAcceptsFocus:
_installMotionEffects
_uninstallMotionEffects
acceptsFocus
setPlayerLayer:
selectionAction
setSelectionAction:
stackMotionEffects
setStackMotionEffects:
highlightMotionEffects
setHighlightMotionEffects:
highlightView
setHighlightView:
setAllowsEdgeAntialiasing:
removeMotionEffect:
addMotionEffect:
setMotionEffects:
setMaximumRelativeValue:
setMinimumRelativeValue:
initWithKeyPath:type:
setClipsToBounds:
setCenter:
highlightViewWithSize:
keyPathsForValuesAffectingVideoGravity
keyPathsForValuesAffectingReadyForDisplay
keyPathsForValuesAffectingVideoRect
isVideoScaled
setVideoScaled:
keyPathsForValuesAffectingVideoScaled
videoScaled
TB,N,GisVideoScaled
airTrafficController:didReceiveMessage:completion:
airTrafficControllerCurrentItemIdentifier:
currentPlayerItem
_updatePlayerItem:externalMetadata:newArtwork:
setInterstitialTimeRanges:
setNavigationMarkerGroups:
setIdentifier:
metadataItem
imageWithData:
setExternalMetadata:
removeObjectsInArray:
metadataItemsFromArray:filteredByIdentifier:
identifier
externalMetadata
T@"NSArray",&,N,V_navigationMarkerGroups
T@"NSArray",&,N,V_externalMetadata
T@"NSArray",&,N,V_interstitialTimeRanges
Tq,N,V_interstitialPolicyEnforcement
Tq,N,V_transInterstitialNavigationPolicy
T@"NSArray",&,N,V_externalSubtitleOptionLanguages
T@"NSString",&,N,V_selectedExternalSubtitleOptionLanguage
T@"AVContentProposal",&,N,V_nextContentProposal
T@"AVPlayerItem",&,N,V_playerItemForScrubbing
T@?,C,N,V_imageGeneratorForScrubbing
T@"NSNumber",&,N,V_uniqueIdentifier
T@"NSValue",&,N,V_overrideForForwardPlaybackEndTime
T@"NSValue",&,N,V_overrideForReversePlaybackEndTime
Tq,N,V_avkitMediaType
T@"NSDate",&,N,V_validatedDate
T@"AVMediaContentRating",&,N,V_validatedMediaContentRating
T@,&,N,V_playbackRestrictionsAuthorizationToken
airPlayedContent
TB,N,GisAirPlayedContent,V_airPlayedContent
Td,V_pendingTimeBoundary
Tq,V_progressiveDownloadContentState
T@"AVMusicAppBehaviorContext",&,N,V_musicBehaviorContext
_airPlayedContent
_navigationMarkerGroups
_externalMetadata
_interstitialTimeRanges
_interstitialPolicyEnforcement
_transInterstitialNavigationPolicy
_externalSubtitleOptionLanguages
_selectedExternalSubtitleOptionLanguage
_nextContentProposal
_playerItemForScrubbing
_imageGeneratorForScrubbing
_uniqueIdentifier
_overrideForForwardPlaybackEndTime
_overrideForReversePlaybackEndTime
_avkitMediaType
_validatedDate
_validatedMediaContentRating
_playbackRestrictionsAuthorizationToken
_pendingTimeBoundary
_progressiveDownloadContentState
_musicBehaviorContext
navigationMarkerGroups
interstitialTimeRanges
interstitialPolicyEnforcement
setInterstitialPolicyEnforcement:
transInterstitialNavigationPolicy
setTransInterstitialNavigationPolicy:
externalSubtitleOptionLanguages
setExternalSubtitleOptionLanguages:
selectedExternalSubtitleOptionLanguage
setSelectedExternalSubtitleOptionLanguage:
nextContentProposal
setNextContentProposal:
playerItemForScrubbing
setPlayerItemForScrubbing:
imageGeneratorForScrubbing
setImageGeneratorForScrubbing:
uniqueIdentifier
setUniqueIdentifier:
overrideForForwardPlaybackEndTime
setOverrideForForwardPlaybackEndTime:
overrideForReversePlaybackEndTime
setOverrideForReversePlaybackEndTime:
setAvkitMediaType:
validatedDate
setValidatedDate:
validatedMediaContentRating
setValidatedMediaContentRating:
playbackRestrictionsAuthorizationToken
setPlaybackRestrictionsAuthorizationToken:
isAirPlayedContent
setAirPlayedContent:
pendingTimeBoundary
setPendingTimeBoundary:
progressiveDownloadContentState
setProgressiveDownloadContentState:
musicBehaviorContext
setMusicBehaviorContext:
AVKitData
_sendExternalMetadataIfPossible
CMTimeValue
_setValidatedDate:
errorWithDomain:code:userInfo:
_isValidatedForMediaContentRating:
setAVKitMediaType:
requestPlaybackRestrictionsAuthorization:
cancelPlaybackRestrictionsAuthorizationRequest
arrayByAddingObject:
avkit_musicAppBehaviorContext
setAvkit_musicAppBehaviorContext:
setValue:forKey:
setAVKitData:
dateValue
currentCalendar
components:fromDate:
minute
setMinute:
setSecond:
nanosecond
setNanosecond:
dateByAddingComponents:toDate:options:
numberWithLongLong:
T@"NSArray",C,N
T@"AVMusicAppBehaviorContext",R,W,N
centered
TB,N,GisCentered,V_centered
Td,N,V_interitemSpacing
Td,N,V_minimumItemHeight
_allCellSizes
_sumOfCellWidths
_maxCellHeight
_allLayoutAttributes
_isLayoutInProgress
_centered
_interitemSpacing
_minimumItemHeight
_lazilyLoadAllCellSizes
_contentSizeUsedByCells
collectionViewContentSize
prepareLayout
layoutAttributesForElementsInRect:
layoutAttributesForItemAtIndexPath:
_sizeForCellAtIndexPath:
_buildLayout
isCentered
setCentered:
interitemSpacing
setInteritemSpacing:
minimumItemHeight
setMinimumItemHeight:
setZIndex:
layoutAttributesForCellWithIndexPath:
indexPathForRow:inSection:
contentInset
CGSizeValue
setSize:
item
dataSource
valueWithBytes:objCType:
T@"<_AVFocusContainerDelegate>",W,N,V_focusContainerDelegate
_focusContainerDelegate
canBecomeFirstResponder
willMoveToWindow:
_extraDescription
focusContainerDelegate
setFocusContainerDelegate:
componentsJoinedByString:
isSubclassOfClass:
focusedView
screen
convertRect:toCoordinateSpace:
coordinateSpace
fullScreen
TB,N,GisFullScreen,V_fullScreen
T@"UIView",&,N,V_forwardFocusView
uxAllowed
TB,R,N,G_isUXAllowed
T@"AVNowPlayingPlaybackControlsViewController",W,N,V_nowPlayingPlaybackControlsViewController
_mostRecentEndOrCancelTouchesEvent
_fullScreen
_forwardFocusView
_nowPlayingPlaybackControlsViewController
_isUXAllowed
_updateFullScreenIfAppropriateForFrame:
_updateFullScreenIfAppropriate
setFrame:
setBounds:
forwardFocusView
setForwardFocusView:
isFullScreen
setFullScreen:
nowPlayingPlaybackControlsViewController
setNowPlayingPlaybackControlsViewController:
URLForResource:withExtension:
stringByDeletingPathExtension
checkResourceIsReachableAndReturnError:
imageForResource:size:
URLForMovieResource:
dataWithContentsOfURL:
pathExtension
T@"NSString",R,N,V_languageCode
T@"AVMediaSelectionOption",R,N,V_mediaSelectionOption
T@"MPAVRoute",R,N,V_route
T@"UIImage",R,N,V_deviceImage
TQ,R,N,V_selectionState
_languageCode
_mediaSelectionOption
_route
_deviceImage
_selectionState
initWithLanguageCode:displayName:mediaSelectionOption:route:
initWithLanguageCode:displayName:mediaSelectionOption:
initWithLanguageCode:
initWithDisplayName:
initWithMediaSelectionOption:
updateWithRoute:selectionState:overrideTitle:
isEqualToMediaOption:
languageCode
mediaSelectionOption
route
deviceImage
selectionState
_imageForRoute:
routeName
locale
optionOff
optionAuto
displayNameForKey:value:
optionLateNight
optionNormal
optionShareAudio
optionLocalDevicePreliminary
mediaOptionDisplayNameForDeviceType:
_iconImageForRoute:
T@"NSString",C,N,V_overrideRoutingContextUID
T@"<AVRoutePickerViewDelegate>",W,N,V_delegate
T@"UIColor",&,N
Tq,N
_getAirPlayStatusQueue
_activeTintColor
_routePickerButton
_customButton
_oldSize
_buttonHighlightAnimator
_outputContext
_airPlayActive
_prioritizesVideoDevices
_routePickerButtonMicaPackage
_routePickerButtonStyle
_overrideRoutingContextUID
tintColorDidChange
activeTintColor
setActiveTintColor:
isAirPlayActive
setAirPlayActive:
customButton
setCustomButton:
updateButtonAppearance
prioritizesVideoDevices
setPrioritizesVideoDevices:
routePickerButtonStyle
setRoutePickerButtonStyle:
_createOrUpdateRoutePickerButton
_routePickerButtonTapped:
_registerNotifications
_updateAirPlayActive
_setupOutputContext
_isAirPlayActive
_defaultActiveTintColor
_normalizedRectInWindow
overrideRoutingContextUID
setOverrideRoutingContextUID:
deviceType
outputDevices
outputContextForID:
routingContextUID
presentSystemRoutingUIWithOptions:completion:
routePickerViewDidEndPresentingRoutes:
routePickerViewWillBeginPresentingRoutes:
addTarget:action:forControlEvents:
overlayContentView
setImage:forState:
imageWithRenderingMode:
resizableImageWithCapInsets:
fillRect:
setFill
imageWithActions:
effectiveUserInterfaceLayoutDirection
setContentVerticalAlignment:
setContentHorizontalAlignment:
setContentEdgeInsets:
buttonWithType:
position
Td,R,V_interval
_queue
_timer
_interval
initWithTimeInterval:queue:block:repeats:
interval
UTF8String
T@"CAStateController",R,N,V_stateController
T{CGSize=dd},N,V_unscaledSize
Tq,N,V_layoutDirection
T@"CALayer",&,N,V_rootLayer
T@"NSString",R,C,N,V_state
T{CGSize=dd},N,V_targetSize
T@"NSString",R,N,V_packageName
_state
_packageName
_stateController
_layoutDirection
_rootLayer
_targetSize
_unscaledSize
stateController:didSetStateOfLayer:
stateController:transitionDidStart:speed:
stateController:transitionDidStop:completed:
CAMLParser:resourceForURL:
CAMLParser:didLoadResource:fromURL:
CAMLParser:didFailToLoadResourceFromURL:
CAMLParser:didFailToFindClassWithName:
CAMLParser:evaluateScriptElement:sourceURL:lineNumber:
CAMLParser:evaluateScriptValue:sourceURL:lineNumber:
CAMLParser:formatWarningString:arguments:lineNumber:
CAMLParser:formatErrorString:arguments:lineNumber:
initWithPackageName:layoutDirection:
rootLayer
setTargetSize:
setState:color:
removeCompositingFiltersWithName:
_setState:
_recursivelyFindSublayerWithName:rootLayer:
_recursivelySetFillColor:rootLayer:
_recursivelyRemoveCompositingFiltersWithName:rootLayer:
transitionToStateWithName:
transitionToStateWithName:onLayer:
availableStates
availableStatesOnLayer:
sublayerWithName:
_loadRootLayerIfNeeded
state
targetSize
unscaledSize
setUnscaledSize:
packageName
stateController
layoutDirection
setLayoutDirection:
setRootLayer:
result
parseContentsOfURL:
parser
activateBackground:
name
states
setState:ofLayer:transitionSpeed:
stateWithName:
compositingFilter
sublayers
setFillColor:
classSubstitions
T@"NSDictionary",R,N
asynchronouslyPrepareMicaPackageWithName:layoutDirection:completion:
itemWithAirDictionaryRepresentation:
airRepresentationForArray:
itemArrayWithAirRepresentations:
airDictionaryRepresentation
T@"NSString",R,N,V_first
T@"NSString",R,N,V_second
T@"NSString",R,N
_first
_second
initWithString:separatedByString:
value
keyEquals:
first
second
caseInsensitiveCompare:
substringFromIndex:
substringToIndex:
rangeOfString:
T@"NSArray",R,N,V_animators
T@"AVInfoPanelContentViewController",R,N,V_fromViewController
T@"AVInfoPanelContentViewController",R,N,V_toViewController
running
TB,R,N,GisRunning
T@?,C,N,V_completion
_completion
_animators
_fromViewController
_toViewController
initWithFrom:to:animators:
stop
isRunning
completion
setCompletion:
animators
fromViewController
toViewController
infoPanelTransitioningAnimationFrom:to:containerView:completion:
startAnimationAfterDelay:
T@"UIFocusGuide",&,N,V_mainLayoutGuide
T@"UIButton",&,N,V_headingLabel
T@"UIButton",&,N,V_timeRemainingButton
T@"UIButton",&,N,V_titleButton
T@"UILabel",&,N,V_dismissalView
T@"UIButton",&,N,V_imageButton
T@"NSString",&,N,V_timeRemainingString
T@"NSTimer",&,N,V_countdownTimer
T@"AVDurationTimeFormatter",&,N,V_timeFormatter
T@"UITapGestureRecognizer",&,N,V_menuPressRecognizer
T@"NSLayoutConstraint",&,N,V_constraintOnScreen
T@"NSLayoutConstraint",&,N,V_constraintOffScreen
_mainLayoutGuide
_headingLabel
_timeRemainingButton
_titleButton
_dismissalView
_imageButton
_timeRemainingString
_countdownTimer
_timeFormatter
_menuPressRecognizer
_constraintOnScreen
_constraintOffScreen
isUserInteractionAllowed
setCountdownTimer:
setDateOfAutomaticAcceptance:
performAnimationForDismissal:
didAccept:
didAutoAccept
didAbortCountdown:
didPressMenuButton:
scaledPreviewImage
borderColorForUnfocusedImage
borderColorForFocusedImage
updateViewsFromModel
setContentProposal:
desiredPlayerViewBounds
hideCountdown
_countdownTimerFired:
mainLayoutGuide
setMainLayoutGuide:
headingLabel
setHeadingLabel:
timeRemainingButton
setTimeRemainingButton:
titleButton
setTitleButton:
dismissalView
setDismissalView:
imageButton
setImageButton:
timeRemainingString
setTimeRemainingString:
countdownTimer
timeFormatter
setTimeFormatter:
menuPressRecognizer
setMenuPressRecognizer:
constraintOnScreen
setConstraintOnScreen:
constraintOffScreen
setConstraintOffScreen:
titleColorForState:
titleForState:
imageForState:
setTitle:forState:
imageWithCGImage:scale:orientation:
scheduledTimerWithTimeInterval:target:selector:userInfo:repeats:
constraintGreaterThanOrEqualToConstant:
setPreferredFocusEnvironments:
setAdjustsImageWhenHighlighted:
setUserInteractionEnabled:
setHighlightedTextColor:
setTitleColor:forState:
addLayoutGuide:
setShadowOpacity:
setShadowRadius:
setShadowOffset:
setShadowColor:
stringFromDate:
dateFromString:
internetDateFormatter
T@"NSMutableArray",R,N,V_animations
T@"NSMutableArray",R,N,V_completions
_completions
addCoordinatedAnimations:completion:
performCoordinatedAnimations
didFinishAnimations:
completions
TB,N,S_setTouching:,V_isTouching
T{CGPoint=dd},N,S_setTension:,V_tension
TQ,N,V_blockedSwipeDirection
_lastTouchesBeganTime
_isTransportBarAnimatingVisibility
_isTransportBarFullyVisible
_isTouching
_blockedSwipeDirection
_tension
willShowTransportBarAnimated:
didShowTransportBarAnimated:
willHideTransportBarAnimated:
didHideTransportBarAnimated:
canPreventGestureRecognizer:
touchesBegan:withEvent:
touchesMoved:withEvent:
touchesEnded:withEvent:
touchesCancelled:withEvent:
isTouching
_setTouching:
tension
_setTension:
blockedSwipeDirection
setBlockedSwipeDirection:
translationInView:
T@"AVxCollectionViewController",R,N,V_collectionViewController
T@"AVPermissiveSwipeGestureRecognizer",R,N,V_swipeDownGestureRecognizer
T@"AVNonDigitizerTapRecognizer",R,N,V_b39ArrowGestureRecognizer
T@"UITapGestureRecognizer",R,N,V_playPauseGestureRecognizer
T@"UITapGestureRecognizer",R,N,V_menuGestureRecognizer
T@"AVControlItem",&,N,V_startPictureInPicture
T@"AVControlItem",&,N,V_swapPictureInPicture
T@"NSLayoutConstraint",&,N,V_bottomConstraint
overlayPresented
TB,N,GisOverlayPresented,V_overlayPresented
Td,N,V_bottomInset
T@"NSArray",C,N,V_buttonItems
_isVisible
_cellDidInteractObserver
_overlayPresented
_bottomInset
_buttonItems
_collectionViewController
_swipeDownGestureRecognizer
_b39ArrowGestureRecognizer
_playPauseGestureRecognizer
_menuGestureRecognizer
_startPictureInPicture
_swapPictureInPicture
_bottomConstraint
didSelectButtonItem:
collectionView
initialFocus
setInitialFocus:
systemLayoutSizeFittingSize:withHorizontalFittingPriority:verticalFittingPriority:
shouldShowPlaybackControls
setButtonItems:
hasEnabledItems
setOverlayPresented:
reloadCollection
setBottomInset:
isVisible
_isAnyButtonEnabled
showAnimating:completion:
hideAnimating:
_dismissAnimated:
_autoDismiss
_dismissAfterDelay
_cancelAutoDismiss
_handleMenu:
_handleSwipeDown:
_handleB39Arrow:
setScaleOfEveryVisibleCell:animated:
isOverlayPresented
bottomInset
buttonItems
collectionViewController
swipeDownGestureRecognizer
b39ArrowGestureRecognizer
playPauseGestureRecognizer
menuGestureRecognizer
startPictureInPicture
setStartPictureInPicture:
swapPictureInPicture
setSwapPictureInPicture:
bottomConstraint
setBottomConstraint:
avkitDidDismissOverlayViewController
avkitWillDismissOverlayViewController
reloadData
invalidateLayout
collectionViewLayout
_handlePlayPauseTapGesture:
T@"NSDate",C,N,V_creationDate
closedCaptioned
TB,N,GisClosedCaptioned,V_closedCaptioned
Tq,N,V_videoResolution
Tq,N,V_videoRange
Tq,N,V_audioFormat
T@"AVPlayerController",W,N,V_playerController
_posterView
_nextToPosterStackView
_posterFocusGuide
_subtitleLabel
_seasonEpisodeLabel
_durationLabel
_genreLabel
_dateLabel
_mediaContentRatingLabel
_mediaContentRatingImageView
_closedCaptionBadge
_videoResolutionBadge
_colorDepthBadge
_audioFormatBadge
_tomatoRatingView
_summaryView
_posterViewWidthConstraint
_posterViewHeightConstraint
_yearFormatter
_monthDayYearFormatter
_posterFetchingTask
_closedCaptioned
_creationDate
_videoResolution
_videoRange
_audioFormat
setVideoResolution:
setVideoRange:
setAudioFormat:
_updateVideoResolutionBadge
_updateDynamicRangeBadge
_updateAudioFormatBadge
_metadataItemForIdentifiers:
_updateViewsWithNewMetadata
_updatePosterViewWithImage:
_loadPosterFromMetadataItem:
_loadPosterFromURL:
_releaseDateStringStyle:
_durationString
_presentFullScreenDescription
creationDate
setCreationDate:
isClosedCaptioned
setClosedCaptioned:
videoResolution
videoRange
audioFormat
setModalTransitionStyle:
stringFromTimeInterval:
setUnitsStyle:
setAllowedUnits:
setDateFormat:
identifierForKey:keySpace:
resume
dataTaskWithURL:completionHandler:
cancel
sharedSession
imageWithContentsOfFile:
path
isFileURL
URLWithString:
dataValue
constraintEqualToAnchor:multiplier:
floatValue
numberValue
setAccessibilityValue:
isDolbyAtmosAvailable
hdrMode
preferredMode
mainDisplay
nativeScale
_setTextAlignmentFollowsWritingDirection:
setLineBreakMode:
_avUserDeviceName
stringWithString:
_videoAssetTracks
availableVideoDynamicRanges
intValue
formatDescriptions
tracks
_updateVideoResolutionAndRange
_audioAssetTracks
updateVideoResolutionAndRange
updateAudioFormats
assetTrack
T@"AVNowPlayingTransportBar",R,N,V_transportBar
T@"AVPlayerViewController",W,N,V_playerViewController
T@"NSMutableDictionary",R,N,V_animationBlocks
T@"NSMutableDictionary",R,N,V_animationCompletionBlocks
T@"NSArray",C,N,S_setInterstitials:,V__interstitials
transportBarHidden
TB,R,N,GisTransportBarHidden
T@"UIView",R,N
_transportBar
_animationBlocks
_animationCompletionBlocks
__interstitials
transportBar
transportBarView
isTransportBarHidden
setTransportBarHidden:animated:
elapsedTime
setElapsedTime:animated:
setElapsedTime:
setAvailableFraction:animated:
addCoordinatedTransportBarAnimation:animations:completion:
_applyInterstitials
_setInterstitials:
setPlayerViewController:
animationBlocks
animationCompletionBlocks
_interstitials
arrayWithCapacity:
addActionsForTransportBarAnimation:animating:
callCompletionBlocksForTransportBarAnimation:finished:
T@"AVSpeakerManager",&,N,V_speakerManager
T@"NSMutableDictionary",&,N,V_routeOptionsByUID
T@"NSObject<PBSMediaRemoteServiceInterface>",R,N,V_pbsMediaRemoteProxy
T@"<AVInfoPanelLanguageDelegate>",W,N,V_delegate
TQ,N,V_selectedLanguageOptionIndex
TQ,N,V_selectedSoundOptionIndex
TB,R,N,GisShareAudioPresented,V_shareAudioPresented
_languageCollectionViewController
_soundCollectionViewController
_speakerCollectionViewController
_languageCollectionViewWidthConstraint
_soundCollectionViewWidthConstraint
_speakerCollectionViewWidthConstraint
_languageCollectionViewHeightConstraint
_soundCollectionViewHeightConstraint
_speakerCollectionViewHeightConstraint
_hasSetupColumnWidthConstraints
_hasSetupColumnHeightConstraints
_lateNightModeNotificationToken
_isSpeakerRefreshPending
_minimumRequiredHeightForHeadings
_shareAudioPresented
_selectedLanguageOptionIndex
_selectedSoundOptionIndex
_speakerManager
_routeOptionsByUID
_pbsMediaRemoteProxy
audioRouteSelected:newGroupSelected:
shareAudioPresented
shareAudioDismissed
mediaOptionCollectionViewController:didSelectMediaOption:
setAudibleMediaSelectionOptions:
clearPreviouslySelectedAppleTVs
setSelectedLanguageOptionIndex:
_viewWillAppearSoon
viewDidLayoutSubviews
_setupLanguageColumn
_setupSoundColumn
_setupSpeakerColumn
_preferredCellHeight
_preferredLanguageColumnHeightForCellHeight:
_preferredSoundColumnHeightForCellHeight:
_preferredSpeakersColumnHeightForCellHeight:
_largestColumnHeight
contentSizeForWidth:
_createOrUpdateColumnHeightConstraints
_createOrUpdateColumnWidthConstraints
_updateSelectedSoundOption
_updateAvailableSpeakers
_textAlignmentForUserInterfaceLayout
selectedLanguageOptionIndex
selectedSoundOptionIndex
setSelectedSoundOptionIndex:
isShareAudioPresented
speakerManager
setSpeakerManager:
routeOptionsByUID
setRouteOptionsByUID:
pbsMediaRemoteProxy
volumeControlTargetDeviceType
indexOfObject:
setSectionInset:
setHeaderReferenceSize:
mediaRemoteServiceProxy
sharedConnection
T@"UILabel",&,N,V_titleLabel
T@"NSString",&,N,V_headerTitle
_headerTitle
setHeaderTitle:
headerTitle
titleLabel
setTitleLabel:
uppercaseStringWithLocale:
localeWithLocaleIdentifier:
preferredLocalizations
userInterfaceStyle
colorWithDynamicProvider:
minimumRequiredHeight
touching
TB,N,GisTouching,V_touching
Tq,N,V_touchPositionAtStart
cancelled
TB,N,GwasCancelled,V_cancelled
Td,R,N,V_timeIntervalSinceReferenceDateOfMostRecentTouchBeganOrMoved
T{CGPoint=dd},R,N,V_digitizerLocation
Tq,R,D,N
_touchTargets
_touching
_cancelled
_touchPositionAtStart
_timeIntervalSinceReferenceDateOfMostRecentTouchBeganOrMoved
_digitizerLocation
initWithTarget:action:
addTouchesTarget:
removeTouchesTarget:
avTouchPosition
_viewForTouchEventForwarding
timeIntervalSinceMostRecentTouchMovement
isTouchingStatusDubious
_forwardToSelector:touches:event:
reset
_updateDigitizerLocationWithEvent:
digitizerLocation
setTouching:
wasCancelled
setCancelled:
touchPositionAtStart
setTouchPositionAtStart:
timeIntervalSinceReferenceDateOfMostRecentTouchBeganOrMoved
touchesMoved:withForwardedEvent:
touchesCancelled:withForwardedEvent:
touchesEnded:withForwardedEvent:
touchesBegan:withForwardedEvent:
allObjects
removePointerAtIndex:
pointerAtIndex:
addPointer:
weakObjectsPointerArray
_shouldDefaultToTouches
T@"AVNowPlayingTransportBar",&,N,V_transportBar
Td,R,N,V_pauseTimeSinceReferenceDate
Td,R,N,V_startTimeSinceReferenceDate
Td,R,N,V_originalAssetTime
TQ,R,N,V_numberOfDirectionalChanges
_lastScrubDirection
_previousTransportBarTime
_pauseTimeSinceReferenceDate
_startTimeSinceReferenceDate
_originalAssetTime
_numberOfDirectionalChanges
hasStarted
didPause
didStartMovement
willResetToPausePoint
willCommit
willMoveWithTranslation:velocity:
didMoveWithTranslation:velocity:
setTransportBar:
pauseTimeSinceReferenceDate
startTimeSinceReferenceDate
originalAssetTime
numberOfDirectionalChanges
T@"_AVDetachedSwipeGestureRecognizer",R,N,V_swipeGestureRecognizer
swipeGestureActive
TB,N,GisSwipeGestureActive,V_swipeGestureActive
swipeGestureRecognizedOrFailed
TB,N,GisSwipeGestureRecognizedOrFailed,V_swipeGestureRecognizedOrFailed
T{CGPoint=dd},N,V_currentTouchLocation
T{CGPoint=dd},N,V_currentDigitizerLocation
T{CGPoint=dd},N,V_startingDigitizerLocation
T@"_AVPermissiveSwipeGestureDelegate",&,N,V_permissiveDelegate
Td,N,V_timeTouchesBegan
TQ,N
Td,N,V_minimumRestTimeBeforeSwipe
Td,N,V_maximumSwipeDuration
Td,D,N
TB,N,V_requiresStartFromEdge
transportBarVisible
TB,N,GisTransportBarVisible,V_transportBarVisible
TB,R,N,V_transportBarVisibleAtTouchesBegan
Td,R,N,V_timeSinceTouchesBegan
_numberOfTouchMovedEventsReceived
_ignoringActiveTouch
_requiresStartFromEdge
_transportBarVisible
_transportBarVisibleAtTouchesBegan
_swipeGestureActive
_swipeGestureRecognizedOrFailed
_minimumRestTimeBeforeSwipe
_maximumSwipeDuration
_timeSinceTouchesBegan
_swipeGestureRecognizer
_permissiveDelegate
_timeTouchesBegan
_currentTouchLocation
_currentDigitizerLocation
_startingDigitizerLocation
minimumPrimaryMovement
setMinimumPrimaryMovement:
_shouldSwipeStartFromDigitizerLocation:
setRequiresStartFromEdge:
canBePreventedByGestureRecognizer:
setState:
swipeGestureWasRecognized:
direction
setDirection:
_cancelTouchRestTimeout
_fireTouchRestTimeout
_scheduleTouchRestTimeout
disableRecognitionOfCurrentTouch
minimumRestTimeBeforeSwipe
setMinimumRestTimeBeforeSwipe:
maximumSwipeDuration
setMaximumSwipeDuration:
requiresStartFromEdge
isTransportBarVisible
setTransportBarVisible:
transportBarVisibleAtTouchesBegan
timeSinceTouchesBegan
swipeGestureRecognizer
isSwipeGestureActive
setSwipeGestureActive:
isSwipeGestureRecognizedOrFailed
setSwipeGestureRecognizedOrFailed:
currentTouchLocation
setCurrentTouchLocation:
currentDigitizerLocation
setCurrentDigitizerLocation:
startingDigitizerLocation
setStartingDigitizerLocation:
permissiveDelegate
setPermissiveDelegate:
timeTouchesBegan
setTimeTouchesBegan:
performSelector:withObject:afterDelay:inModes:
_resetGestureRecognizer
locationInView:
view
anyObject
setAssociatedView:
setMaximumSecondaryMovement:
setParentGestureRecognizer:
T@"UIGestureRecognizer",W,N,V_parentGestureRecognizer
_parentGestureRecognizer
gestureRecognizerShouldBegin:
gestureRecognizer:shouldRecognizeSimultaneouslyWithGestureRecognizer:
gestureRecognizer:shouldRequireFailureOfGestureRecognizer:
gestureRecognizer:shouldBeRequiredToFailByGestureRecognizer:
gestureRecognizer:shouldReceiveTouch:
gestureRecognizer:shouldReceivePress:
gestureRecognizer:shouldReceiveEvent:
parentDelegate
parentGestureRecognizer
hasPrefix:
T@,R,W,N,V_initialTarget
T:,R,N,V_initialAction
T@"UIView",W,N,V_associatedView
_initialTarget
_initialAction
_associatedView
initialTarget
initialAction
associatedView
setAllowedTouchTypes:
T{CGPoint=dd},N
T@"CAGradientLayer",R,N
_gradientLayer
colors
setColors:
locations
setLocations:
type
setType:
startPoint
setStartPoint:
endPoint
setEndPoint:
colorWithCGColor:
T@"UIVisualEffectView",R,N,V_visualEffectView
T@"_UIFloatingContentView",&,N,V_floatingView
T@"UIView",&,N,V_focusView
T@"UILabel",R,N,V_label
T@"UIImageView",R,N,V_imageView
T@"AVControlItem",&,N,V_controlItem
Td,N,V_minimumWidth
Td,N,V_scale
_lastInteractionNotificationTimeInterval
_controlItem
_minimumWidth
_scale
_visualEffectView
_floatingView
_focusView
setControlItem:
setMinimumWidth:
__postUXNotification
_cancelPendingUXNotification
_postUXNotificationAfterDelay
didHintFocusMovement:
updateFocusState:
setScale:
imageView
controlItem
minimumWidth
scale
visualEffectView
floatingView
setFloatingView:
focusView
setFocusView:
addCoordinatedFocusingAnimations:completion:
addCoordinatedUnfocusingAnimations:completion:
setControlState:
bringSubviewToFront:
accessibilityValue
setAccessibilityHint:
accessibilityHint
setContentHuggingPriority:forAxis:
setBackgroundColor:forState:
setContentMotionRotation:translation:
setFocusedSizeIncrease:
setShadowVerticalOffset:
visualEffectContainerView
_constraint
willMoveToSuperview:
avkitDidMoveToSuperview:
didMoveToSuperview:
didMoveToSuperview
T@"UIViewController",R,N
enforcingMargins
TB,N,GisEnforcingMargins,V_enforcingMargins
T@"UIVisualEffectView",R,N,V_backgroundView
_menuTapGestureRecognizer
_enforcingMargins
_backgroundView
hostedViewController
_updatePresentationStyle
_updateCornerCurves:
_updatePresentationStyleAfterLayout
_timeoutDismissal
cancelAutoDismiss
autoDismissAfterDelay
_handleMenuTapGesture:
isEnforcingMargins
setEnforcingMargins:
backgroundView
modalPresentationStyle
_setStatusAndNotifyDelegateIfNeeded:
_updateStatus
_setRoutingVideoToHostedWindow:pictureInPictureViewController:source:
_updateStatusUsingProposedStatus:
T@"NSDateComponentsFormatter",R,V_longerFormatter
T@"NSDateComponentsFormatter",R,V_shorterFormatter
_longerFormatter
_shorterFormatter
stringForObjectValue:
stringForTimeInterval:
longerFormatter
shorterFormatter
stringFromDateComponents:
setZeroFormattingBehavior:
T@"UIImage",&,N,V_image
TB,N,V_failed
_failed
setFailed:
failed
TQ,N,V_numberOfImagesRemainingToLoad
T@"NSString",R,N,V_title
T@"NSArray",R,N,V_timedNavigationMarkers
T@"NSArray",R,N,V_dateRangeNavigationMarkers
_markerImageMap
_timedNavigationMarkers
_dateRangeNavigationMarkers
_numberOfImagesRemainingToLoad
initWithTitle:timedNavigationMarkers:
initWithTitle:dateRangeNavigationMarkers:
initWithTitle:navigationMarkers:
initWithChaptersFromAsset:
setNumberOfImagesRemainingToLoad:
isDateBased
_navMarkers
navigationMarkers
navigationMarkersGroupFilteredWithBlock:
navigationMarkersGroupFromTimeRange:
isChapterGroup
timeRangeForMarker:
startTimeForMarker:
startDateForMarker:
_stringForMarker:identifier:
_defaultTitleForMarker:
titleForMarker:
_loggingTitleForMarker:
descriptionForMarker:
_imageMetadataItemForMarker:
_loadImageForMarker:
imageProxyForMarker:
imageForMarker:
haveImageForMarker:
loadAllImages
loadFirstImageSynchronouslyWithTimeout:
haveImages
indexOfClosestMarkerPriorOrEqualToTime:
indexOfClosestMarkerToTime:
indexOfMarkerContainingTime:
indexOfClosestMarkerPriorOrEqualToDate:
indexOfMarkerContainingDate:
enumerateStartTimes:
enumerateStartDates:
copyArrayOfFractionsForStartDate:endDate:
copyArrayOfFractionsForDuration:
timedNavigationMarkers
dateRangeNavigationMarkers
numberOfImagesRemainingToLoad
metadataItemsFromArray:withKey:keySpace:
localizedStringFromNumber:numberStyle:
numberWithUnsignedLong:
metadataItemsFromArray:filteredAndSortedAccordingToPreferredLanguages:
preferredLanguages
valueWithCMTimeRange:
sortedArrayUsingComparator:
chapterMetadataGroupsBestMatchingPreferredLanguages:
availableChapterLocales
navigationMarkerGroups:filteredWithBlock:
navigationMarkerGroups:inTimeRange:
T@"NSString",C,N,V_lineSeparator
T@"NSString",C,N,V_headerBodySeparator
T@"NSString",C,N,V_bodyLengthKey
T@"NSString",C,N,V_compressionMethodKey
T@"NSData",&,N,V_lineSeparatorData
T@"NSData",&,N,V_headerBodySeparatorData
_lineSeparator
_headerBodySeparator
_bodyLengthKey
_compressionMethodKey
_lineSeparatorData
_headerBodySeparatorData
initWithLineSeparator:headerBodySeparator:bodyLengthKey:compressionMethodKey:
setLineSeparator:
setHeaderBodySeparator:
partsWithData:
lineSeparator
headerBodySeparator
bodyLengthKey
setBodyLengthKey:
compressionMethodKey
setCompressionMethodKey:
lineSeparatorData
setLineSeparatorData:
headerBodySeparatorData
setHeaderBodySeparatorData:
setUncompressedBodyData:
decompressBodyUsingNamedAlgorithm:
uniqueHeaders
messagePartsWithData:lineSeparator:data:headerBodySeparator:data:bodyLengthKey:
T@"NSData",&,N,V_uncompressedBodyData
TB,R,N,V_isIncomplete
T@"NSString",R,N,V_version
T@"NSArray",R,N,V_headers
Tq,R,N,V_expectedBodyLength
T@"NSData",R,N,V_rawBodyData
T@"NSData",R,N,V_extraData
T@,R,N
_uniqueHeaders
_repeatedHeaders
_isIncomplete
_version
_headers
_expectedBodyLength
_rawBodyData
_extraData
_uncompressedBodyData
isIncomplete
shouldCallReverseTransformerAgain
initWithVersion:headers:expectedBodyLength:body:extra:
_setIncomplete
_identifyUniqueAndRepeatedHeadersIfNecessary
repeatedHeaders
bodyAsUTF8Text
bodyAsJSON
bodyAsJSONDictionary
decompressBodyUsingAlgorithm:
version
headers
expectedBodyLength
rawBodyData
extraData
uncompressedBodyData
decompressedDataUsingAlgorithm:error:
JSONObjectWithData:options:error:
initWithData:encoding:
componentsSeparatedByString:
rangeOfData:options:range:
dataUsingEncoding:
_matchingClass
airMessage
registerClass:forMessageVersion:
airMessageParser
T@"AVMessageParser",R,N
systemGrayColor
AV_indicatorBackgroundColor
AV_indicatorForegroundColor
T@"AVInternalPlaybackOptions",R,N,V_playbackOptions
T@"AVPictureInPictureController",R,N,V_pictureInPictureController
T@"UIView",&,N,V__placeholderViewDuringPresentation
presentingContentProposal
TB,N,GisPresentingContentProposal,S_setPresentingContentProposal:,V_presentingContentProposal
T@"AVBehaviorStorage",R,N,V__behaviorStorage
T@"AVPlayerLayerView",&,N,V_playerLayerView
TB,N,V_shouldObscureOutputDueToInsufficientExternalProtection
playbackControlsViewController
T@"AVNowPlayingPlaybackControlsViewController",&,N,G_playbackControlsViewController,S_setPlaybackControlsViewController:,V_playbackControlsViewController
T@"AVContentRestrictionsViewController",R,N
T@"NSString",R,N,V__playerIdentifier
T@"MRPlayerPath",&,N,S_setMediaRemotePlayerPath:,V__mediaRemotePlayerPath
T@"NSString",C,N,V_videoGravity
T@"UILayoutGuide",R,N
T@"<AVPlayerViewControllerDelegate>",W,N
_showsPlaybackControls
_playbackControlsViewControllerShouldShowLoadingIndicator
_showsPlaybackControlsView
_isShowingPlaybackControlsViewForUserInteraction
_isShowingPlaybackControlsViewForAudioOnlyContent
_isShowingPlaybackControlsViewForPlayingOnExternalScreen
_isFullUXEnabled
_deactivated
_shouldPlayAfterAppBecomesActive
_shouldBecomeNowPlayingAfterAppBecomesActive
_playerHasBeenValid
_shouldEndLimitingRemoteInput
_startingContentProposalPresentation
_HDCPMonitoringActive
_shouldHidePlaybackControlsWhenMultipleTapGestureRecognized
_haveShownCustomOverlayHint
_pausedDueToInsufficientExternalProtection
_deactivationReasons
_playControlsStateToRestoreWhenAppBecomesActive
_videoGravity
__playerIdentifier
__mediaRemotePlayerPath
_mediaRemoteManager
_contentContainerView
_contentOverlayView
_iAdPrerollView
_HDCPObscuringView
_playerLayerViewConstraints
_constraintsForContentProposal
_playbackOptions
_customOverlayControlItem
_customOverlayHostViewController
__contentRestrictionsViewController
_contentProposalViewController
_mediaServicesWereResetObserver
_willAddDeactivationReasonObserver
_didRemoveDeactivationReasonObserver
_applicationWillResignActiveObserver
_applicationDidBecomeActiveObserver
_playerItemDidPlayToEndObserver
_playerItemBlockedDueToRestrictionsObserver
_contentProposalBoundaryTimeObserver
_playerForContentProposalBoundaryTimeObserver
_loadingIndicatorTimer
_showPlaybackControlsViewCount
_hidePlaybackControlsViewAfterDelayTimer
__defaultPlaybackRateStorage
_gestureRecognizerDelegate
_panGestureRecognizer
_scrubGestureRecognizer
_b39ArrowLongPressGestureRecognizer
_b39SelectGestureRecognizer
_swipeUpGestureRecognizer
_rotaryGestureRecognizer
_selectDigitizerTapRecognizer
_selectLongPressRecognizer
_menuTapRecognizerDismissal
_menuTapRecognizerOther
_playPauseTapRecognizer
_independentTouchRecognizer
_singleTouchRecognizer
_doubleTouchRecognizer
_timeRemainingForCurrentAdvertisements
_timeIntervalOfLastSwitchToFullScreen
_alternateThumbnailStreamURL
_allowedSubtitleLanguages
_customInfoViewControllers
_infoHint
_playerViewControllerTransition
_unobscuredContentGuide
_unobscuredContentGuideTopConstraint
_unobscuredContentGuideBottomConstraint
_HDCPTimerQueue
_HDCPTimer
_HDCPAlertController
_pixelBufferAttributes
_globalUserSettings
_presentingContentProposal
_shouldObscureOutputDueToInsufficientExternalProtection
_pictureInPictureController
__placeholderViewDuringPresentation
__behaviorStorage
_playerLayerView
_playbackControlsViewController
didUpdateFocusToFocusContainerView:
didUpdateFocusFromFocusContainerView:
shouldUpdateFocusToFocusContainerView:
focusContainerView:willMoveToWindow:
focusContainerViewDidMoveToWindow:
_contentRestrictionsViewController
privateDelegate
setPrivateDelegate:
showsPlaybackControls
setShowsPlaybackControls:
_loadContentOverlayViewIfNeeded
_layoutContentOverlayViewIfLoaded
contentOverlayView
unobscuredContentGuide
_containerView
_isAnotherPlayerViewControllerNowPlaying
isActiveNowPlaying
resignNowPlaying
resignNowPlayingWithoutUpdating
updateNowPlayingInfo
updateNowPlayingInfoFull
_ensureBehaviorStorage
videoBounds
isPictureInPictureActive
setDefaultPlaybackRate:
defaultPlaybackRate
setShouldObscureOutputDueToInsufficientExternalProtection:
preferredContentSize
interactiveOverlayViewController
_updateInteractiveOverlayControls
_presentInteractiveOverlayViewController
isPresentingInteractiveOverlay
_presentCustomOverlayViewController
avkitDidArrowUp:
_swipeDownGesture:
_swipeUpGesture:
panningGesture:
scrubbingGesture:
rotaryGesture:
navigateUp:
navigateDown:
didSwipeDown
didPressLeftArrowDigitizer
didPressRightArrowDigitizer
doubleTouchRecognizer:
_independentSingleTouchRecognizer:
touchRecognizer:
_handleSkipForwardBy:
_handleSkipBackwardBy:
_handleSeekToTime:
_handleMenuTapGestureDismissal:
_handleMenuTapGestureOther:
_menuTapRecognizerOtherShouldBegin
adjustVolume:
handleClickAtPosition:
deactivateForApplicationSwitcher
deactivateForResigningApp
activateForActivatingApp
_updateUXState
_becomeNowPlaying
becomeFirstResponder
_viewAppearingOrGainingFocus
_viewDisappearingOrLosingFocus
_setPreferredDisplayCriteria:
_clearPreferredDisplayCriteria
_updatePreferredDisplayCriteriaForAsset:
_updatePreferredDisplayCriteria
_considerDisplayModeSwitchFinishedIfPlaying
_hideCustomOverlayHintTimeout
_showCustomOverlayHintIfApplicable
_didChangeFullScreen
updateViewConstraints
_fireLoadingIndicatorTimer:
_isAudioOnlyContent
_didResetMediaServices
_updateUnobscuredContentGuide
_installPlaybackControlsGestureRecognizers
_updatePlaybackControlsViewController
_updatePlaybackControlsViewVisibilityForAudioOnlyContent
_handleTogglePlayPause
_handleTogglePlayPauseCommand
_handlePause
_handlePlay
_handleStop
_handleNextNavigationMarker
_handlePreviousNavigationMarker
_handleSelectTapGesture:
_handleSelectLongPressGesture:
_handleB39Select:
_showPlaybackControlsViewIfNeeded
_hidePlaybackControlsViewIfPossible
_showPlaybackControlsViewIfNeededForUserInteraction
_hidePlaybackControlsViewIfPossibleForUserInteraction
_showPlaybackControlsViewIfNeededAndHideAfterDelayIfPlayingForUserInteraction
_hidePlaybackControlsViewIfPossibleAfterDelayForUserInteraction
_fireHidePlaybackControlsViewAfterDelayTimer:
_showOrHidePlaybackControlsView
_setupHDCPMonitoring
_updateOutputObscuredDueToInsufficientExternalProtection:
_cancelHDCPTimer
_stopSpinningAndPlay
_outputObscuredDueToInsufficientExternalProtectionDidChange
_dismissUsingExternalGestureRecognizerIfNecessary:
dismissAction:
_canDismiss
togglePlayback:
_didSelectMediaSelectionOption:withMediaCharacteristic:
pictureInPictureController
_placeholderViewDuringPresentation
set_placeholderViewDuringPresentation:
isPresentingContentProposal
_setPresentingContentProposal:
_behaviorStorage
playerLayerView
setPlayerLayerView:
shouldObscureOutputDueToInsufficientExternalProtection
_setPlaybackControlsViewController:
_playerIdentifier
_mediaRemotePlayerPath
_setMediaRemotePlayerPath:
topViewController
navigationController
playerViewControllerShouldDismiss:
dismissPlayerViewController:
popViewControllerAnimated:
dismissViewControllerAnimated:completion:
setTransitioningDelegate:
isEqualToNumber:
allowedPressTypes
gestureRecognizers
applicationState
outputObscuredDueToInsufficientExternalProtection
presentViewController:animated:completion:
addAction:
actionWithTitle:style:handler:
alertControllerWithTitle:message:preferredStyle:
isUserInteractionEnabled
transportBarViewController
insertSubview:below:
addTarget:action:
setInfoHint:
setCustomInfoViewControllers:
setAlternateThumbnailStreamURL:
_setManualLayoutFrame:
playbackControlsIncludeTransportBar
playbackControlsIncludeInfoViews
endLimitingRemoteInput
resignFirstResponder
T@"AVPlayerViewController",&,N,V_playerViewController
animationControllerForPresentedController:presentingController:sourceController:
animationControllerForDismissedController:
interactionControllerForPresentation:
interactionControllerForDismissal:
presentationControllerForPresentedViewController:presentingViewController:sourceViewController:
placeholderView
doubleForKey:
transitioningDelegate
isFirstResponder
beginLimitingRemoteInput
subviews
_buttonType
numberOfTapsRequired
setMaximumPressDuration:
_setDelaysRecognitionForGreaterTapCounts:
requireGestureRecognizerToFail:
setNumberOfTapsRequired:
_setButtonType:
object
_didPlayToEnd
setMaxRateForAudioPlayback:
dispatchQueue
containsValueForKey:
setPictureInPictureAvoidanceInsets:usingIdentifier:
valueWithUIEdgeInsets:
setAdditionalSafeAreaInsets:
_scheduleNextContentProposal
UUIDString
UUID
categoryOptions
mode
category
removeAllGestureRecognizers
imageNamed:inBundle:
activePictureInPictureController
setActivePictureInPictureController:
activePictureInPicturePlayerViewController
keyPathsForValuesAffectingVideoBounds
T@"UIWindow",R,N
avkit_makePlayerControllerIfNeeded:
avkit_pictureInPictureViewController
avkit_startRoutingVideoToPictureInPictureViewController:
avkit_stopRoutingVideoToPictureInPictureViewController:
avkit_beginReducingResourcesForPictureInPictureViewController:playerController:
avkit_endReducingResourcesForPictureInPictureViewController:playerController:
avkit_videoRectInWindow
avkit_isVisible
avkit_window
pictureInPictureControllerWillStartPictureInPicture:
pictureInPictureControllerDidStartPictureInPicture:
pictureInPictureController:failedToStartPictureInPictureWithError:
pictureInPictureControllerWillStopPictureInPicture:
pictureInPictureControllerDidStopPictureInPicture:
pictureInPictureController:restoreUserInterfaceForPictureInPictureStopWithCompletionHandler:
pictureInPictureController:didSendPlaybackCommand:
iAdPrerollView
contentProposalViewController
nextContentProposalForCurrentItem
_invalidateContentProposalBoundaryTimeObserver
contentTimeToPresentContentProposal
presentContentProposal:animated:completion:
owningView
setAnimationDuration:
updateConstraintsIfNeeded
_presentContentProposal:animated:completion:
_willPresentViewController:
_didPresentViewController:
_willDismissViewController:
_didDismissViewController:
_presentedContentProposal
_replayFromBeginning
assetWithURL:
playerItemWithAsset:automaticallyLoadedAssetKeys:
playerWithPlayerItem:
dateOfAutomaticContentProposalAcceptance
dismissContentProposalAnimated:completion:
_internalWillResumePlaybackAfterUserNavigatedFromTime:toTime:
hideContentProposalViewController:animated:hidingPlayerView:completion:
contentProposalViewController:acceptContentProposal:completion:
contentProposalViewController:rejectContentProposal:completion:
setContentProposalViewController:
timeRemainingForCurrentAdvertisements
setTimeRemainingForCurrentAdvertisements:
alternateThumbnailStreamURL
keyPathsForValuesAffectingAlternateThumbnailStreamURL
customInfoViewControllers
infoHint
setPlaybackControlsIncludeTransportBar:
setPlaybackControlsIncludeInfoViews:
customInfoViewController
setCustomInfoViewController:
_isPresentingTransportBarViewController
_dismissTransportBarViewControllerAnimated:completion:
setTransportBarViewController:
_presentTransportBarViewControllerAnimated:completion:
stopPictureInPicture
setPlaybackDelegate:
playerViewControllerWillStartPictureInPicture:
playerViewControllerDidStartPictureInPicture:
playerViewControllerShouldAutomaticallyDismissAtPictureInPictureStart:
playerViewController:failedToStartPictureInPictureWithError:
playbackDelegate
playerViewControllerWillStopPictureInPicture:
playerViewControllerDidStopPictureInPicture:
playerViewController:restoreUserInterfaceForPictureInPictureStopWithCompletionHandler:
bundleForClass:
pictureInPictureActive
TB,R,N,GisPictureInPictureActive
T@"AVContentProposalViewController",&,N
TB,N,GisSkipForwardEnabled
TB,N,GisSkipBackwardEnabled
TB,D,N
T@"UIViewController",&,N
T@"AVTransportBarViewController",&,N
T@"NSIndexPath",&,N,V_selectedIndexPath
T@"UICollectionView",R,N,V_collectionView
T@"UIView",R,N,V_panelWrapperView
T@"NSLayoutConstraint",&,N,V_panelWrapperViewHeightConstraint
T@"<AVInfoMenuDelegate>",W,N,V_delegate
T@"NSArray",C,N,V_viewControllers
T@"AVInfoPanelContentViewController",&,N
T@"UIView",&,N
_dividerContainer
_divider
_selectedViewController
_timeOfLastFocusChange
_transitioningAnimation
_viewControllers
_selectedIndexPath
_collectionView
_panelWrapperView
_panelWrapperViewHeightConstraint
numberOfSectionsInCollectionView:
collectionView:viewForSupplementaryElementOfKind:atIndexPath:
collectionView:canMoveItemAtIndexPath:
collectionView:moveItemAtIndexPath:toIndexPath:
indexTitlesForCollectionView:
collectionView:indexPathForIndexTitle:atIndex:
collectionView:numberOfItemsInSection:
collectionView:cellForItemAtIndexPath:
initWithCollectionViewLayout:
infoMenuLayout
menuView
setBackgroundView:
dividerContainer
divider
setViewControllers:
selectedIndex
setSelectedIndex:
selectedViewController
setSelectedViewController:
_indexForIndexPath:
_indexPathForIndex:
_firstIndexPath
_viewControllerForIndexPath:
_focusIndexPath:
preferredSizeForViewController:
transitionSelectionFrom:to:animated:
_isTransitioning
_interruptTransitioningAnimation
viewControllers
selectedIndexPath
setSelectedIndexPath:
panelWrapperView
panelWrapperViewHeightConstraint
setPanelWrapperViewHeightConstraint:
cellForItemAtIndexPath:
previouslyFocusedIndexPath
indexPathForItem:inSection:
selectItemAtIndexPath:animated:scrollPosition:
overscanCompensationInsets
sendSubviewToBack:
setSemanticContentAttribute:
setContentInset:
setDataSource:
initWithFrame:collectionViewLayout:
bundle
localizedStringForKey:value:table:
setSelectedMediaOptionIndex:
_indexPathForMediaOptionIndex:
_scrollToAndSelectCurrentSubtitleOption
_selectSubtitleAtIndex:shouldScrollToCenter:
contentSize
setExtraAttributes:
localeIdentifier
time
dataType
base64EncodedStringWithOptions:
extraAttributes
setLocale:
setTime:
initWithBase64EncodedString:options:
T@,W,N,V_AVKitOwner
T@"NSMapTable",R,N,V_behaviorsAndBehaviorContexts
_AVKitOwner
_behaviorsAndBehaviorContexts
behaviors
addBehavior:
removeBehavior:
enumerateAllBehaviorsUsingBlock:
enumerateAllBehaviorsConformingToProtocol:usingBlock:
behaviorOfClass:
enumerateAllBehaviorContextsUsingBlock:
enumerateAllBehaviorContextsConformingToProtocol:usingBlock:
enumerateAllBehaviorContextsImplementingSelector:forProtocol:usingBlock:
behaviorContextOfClass:
AVKitOwner
setAVKitOwner:
behaviorsAndBehaviorContexts
objectEnumerator
keyEnumerator
setBehaviorContext:
behaviorContextClass
behaviorContext
willMoveToContext:
strongToStrongObjectsMapTable
highLighted
TB,N,GisHighlighted,V_highLighted
_summaryTextView
_moreLabel
_horizontalConstraintOfMoreButton
_isTextTruncating
_highLighted
floatingContentView:didFinishTransitioningToState:
floatingContentView:isTransitioningFromState:toState:
setHighlighted:
text
setText:
maxNumberOfLines
setMaxNumberOfLines:
_createViews
_moreLabelExclusionPath
isHighlighted
setHighLighted:
bezierPathWithRect:
attributedText
setControlState:animated:
localizedUppercaseString
setMaximumNumberOfLines:
textContainer
setTextContainerInset:
setScrollEnabled:
setEditable:
setSynchronizesAlignmentToDirection:
layoutManager
_setCornerRadius:
setFloatingContentDelegate:
maximumNumberOfLines
_isNaturallyRTL
setExclusionPaths:
shadowColor
dataWithLength:
imageRendererFormat
initWithBounds:format:
CGContext
drawInRect:
imageWithEtchedBorderOfColor:radius:
imageWithShadow:
imageWithBoxBlur:
isSolidColor
imageScaledDownToFit:
imageScaledToAspectFill:
shadowOffset
shadowBlurRadius
Tf,N,V_tomatoRating
TQ,N,V_tomatoFreshness
_tomatoRatingIcon
_tomatoRatingLabel
_tomatoRating
_tomatoFreshness
setTomatoFreshness:
setTomatoRating:
tomatoRating
tomatoFreshness
stringFromNumber:
numberWithFloat:
setNumberStyle:
lastBaselineAnchor
T@"AVPictureInPicturePlatformAdapter",R,N,V_platformAdapter
T@"<AVPictureInPictureContentSource>",&,N,V_sourceIfRetainedDuringPictureInPicturePlayback
T@,&,N,V_playerControllerIsPlayingObservationToken
pictureInPicturePossible
TB,N,GisPictureInPicturePossible,V_pictureInPicturePossible
TB,N,GisPictureInPictureActive,V_pictureInPictureActive
pictureInPictureSuspended
TB,N,GisPictureInPictureSuspended,V_pictureInPictureSuspended
otherPictureInPictureActive
TB,N,GisOtherPictureInPictureActive,V_otherPictureInPictureActive
TB,N,S_setCanStopPictureInPicture:,V_canStopPictureInPicture
TB,N,V_wantsImmediateAssetInspection
TB,N,V_wasPlayingWhenPictureInPictureInterruptionBegan
T@"<AVPictureInPictureContentSource>",R,W,N,V_source
T@"AVPictureInPictureViewController",R,N
TB,R,N,V_wantsResourceReduction
TB,N,V_retainsSourceDuringPictureInPicturePlayback
TB,N,V_allowsPictureInPictureFromInlineWhenEnteringBackground
TB,N,V_pictureInPictureWasStartedWhenEnteringBackground
microphoneEnabled
TB,N,GisMicrophoneEnabled,V_microphoneEnabled
TB,N,V_canStartAutomaticallyWhenEnteringBackground
T@"<AVPictureInPicturePrerollDelegate>",W,N,V_prerollDelegate
T@"AVPictureInPictureControllerContentSource",&,N,V_contentSource
T@"AVPlayerLayer",R,N,V_playerLayer
T@"<AVPictureInPictureControllerDelegate>",W,N,V_delegate
Tq,N,V_controlsStyle
_microphoneEnabled
_pictureInPicturePossible
_pictureInPictureActive
_pictureInPictureSuspended
_canStopPictureInPicture
_otherPictureInPictureActive
_wantsImmediateAssetInspection
_wasPlayingWhenPictureInPictureInterruptionBegan
_wantsResourceReduction
_retainsSourceDuringPictureInPicturePlayback
_allowsPictureInPictureFromInlineWhenEnteringBackground
_pictureInPictureWasStartedWhenEnteringBackground
_canStartAutomaticallyWhenEnteringBackground
_controlsStyle
_platformAdapter
_sourceIfRetainedDuringPictureInPicturePlayback
_playerControllerIsPlayingObservationToken
_source
_prerollDelegate
_contentSource
controlsStyle
setControlsStyle:
pictureInPicturePlatformAdapter:failedToStartError:
pictureInPicturePlatformAdapter:prepareToStopForRestoringUserInterface:
pictureInPicturePlatformAdapterPrepareToStopForDismissal:
pictureInPicturePlatformAdapter:stopPictureInPictureAndRestoreUserInterface:
pictureInPicturePlatformAdapter:handlePlaybackCommand:
pictureInPicturePlatformAdapter:statusDidChange:fromStatus:
pictureInPicturePlatformAdapterBeginReducingResourcesForEligibleOffScreenState
pictureInPicturePlatformAdapterEndReducingResourcesForEligibleOffScreenState
initWithPlayerLayer:
initWithSource:
_commonInitWithSource:
stopPictureInPictureEvenWhenInBackground
contentSourceVideoRectInWindowChanged
pictureInPictureViewController
setAllowsPictureInPictureFromInlineWhenEnteringBackground:
setPictureInPictureActive:
setOtherPictureInPictureActive:
setMicrophoneEnabled:
setCanStartAutomaticallyWhenEnteringBackground:
setPictureInPicturePossible:
startObservingPlayerController:
stopObservingPlayerController:
sampleBufferDisplayLayer
reloadPrerollAttributes
_delegateIfRespondsToSelector:
_stopPictureInPictureAndRestoreUserInterface:
_observePlayerLayer:
isMicrophoneEnabled
isPictureInPicturePossible
isPictureInPictureSuspended
setPictureInPictureSuspended:
canStopPictureInPicture
_setCanStopPictureInPicture:
platformAdapter
sourceIfRetainedDuringPictureInPicturePlayback
setSourceIfRetainedDuringPictureInPicturePlayback:
playerControllerIsPlayingObservationToken
setPlayerControllerIsPlayingObservationToken:
isOtherPictureInPictureActive
wantsImmediateAssetInspection
setWantsImmediateAssetInspection:
wasPlayingWhenPictureInPictureInterruptionBegan
setWasPlayingWhenPictureInPictureInterruptionBegan:
source
wantsResourceReduction
retainsSourceDuringPictureInPicturePlayback
setRetainsSourceDuringPictureInPicturePlayback:
allowsPictureInPictureFromInlineWhenEnteringBackground
pictureInPictureWasStartedWhenEnteringBackground
setPictureInPictureWasStartedWhenEnteringBackground:
canStartAutomaticallyWhenEnteringBackground
prerollDelegate
setPrerollDelegate:
contentSource
setContentSource:
addEntriesFromDictionary:
dictionaryWithObject:forKey:
isPictureInPictureSupported
_imageNamed:compatibileWithTraitCollection:
pictureInPictureButtonStartImageCompatibleWithTraitCollection:
pictureInPictureButtonStopImageCompatibleWithTraitCollection:
pictureInPictureButtonStartImage
pictureInPictureButtonStopImage
systemImageNamed:withConfiguration:
configurationByApplyingConfiguration:
Tq,N,V_selectedMediaOptionIndex
T@"NSIndexSet",C,N,V_selectedMediaOptionIndexes
T@"<AVInfoPanelMediaOptionSelectionDelegate>",W,N,V_selectionDelegate
orderMatchedToUIDirection
TB,N,GisOrderMatchedToUIDirection,V_orderMatchedToUIDirection
_orderMatchedToUIDirection
_selectedMediaOptionIndex
_selectedMediaOptionIndexes
setSelectedMediaOptionIndexes:
mediaOptionAtIndexPath:
selectedMediaOptionIndex
selectedMediaOptionIndexes
isOrderMatchedToUIDirection
setOrderMatchedToUIDirection:
isEqualToIndexSet:
indexPathWithIndex:
indexSetWithIndex:
T{CGSize=dd},N,V_barSize
Td,N,V_xNeedlePosition
Td,N,V_savedPosition
Td,N,V_unavailableFractionTrailing
Tq,N,V_fillStyle
Td,N,V_navigationAlpha
dirty
TB,R,GisDirty
_xNeedlePosition
_savedPosition
_unavailableFractionTrailing
_fillStyle
_navigationAlpha
_barSize
setXNeedlePosition:
setUnavailableFractionTrailing:
setBarSize:
setFillStyle:
isDirty
_newMaskImage
barSize
xNeedlePosition
savedPosition
setSavedPosition:
unavailableFractionTrailing
fillStyle
navigationAlpha
setNavigationAlpha:
atMaxTime
TB,N,GisAtMaxTime,V_atMaxTime
atMinTime
TB,N,GisAtMinTime,V_atMinTime
T{CGSize=dd},N,V_presentationSize
T@"AVAsset",&,N,V_currentAssetIfReady
T@"NSObject<OS_dispatch_queue>",&,N,V_assetInspectionQueue
T@"AVAsset",&,N,V_assetBeingPrepared
pictureInPictureSupported
TB,N,GisPictureInPictureSupported,V_pictureInPictureSupported
readyToPlay
TB,R,N,GisReadyToPlay
T@"AVValueTiming",&,N,V_timing
T@"AVValueTiming",&,N,V_minTiming
T@"AVValueTiming",&,N,V_maxTiming
T@"AVAssetTrack",&,N,V_currentAudioTrack
seekingInternal
TB,GisSeekingInternal,V_seekingInternal
TB,N,GisSeeking,V_seeking
T{?=qiIq},V_seekToTimeInternal
Td,N,V_seekToTime
T@"NSDictionary",&,N,V_metadata
composable
TB,N,GisComposable,V_composable
TB,N,V_hasProtectedContent
T@"NSArray",&,N,V_availableMetadataFormats
compatibleWithAirPlayVideo
TB,N,GisCompatibleWithAirPlayVideo,V_compatibleWithAirPlayVideo
Td,N,V_rateBeforeScrubBegan
preventingIdleSystemSleep
TB,N,GisPreventingIdleSystemSleep,V_preventingIdleSystemSleep
preventingIdleDisplaySleep
TB,N,GisPreventingIdleDisplaySleep,V_preventingIdleDisplaySleep
disablingAutomaticTermination
TB,N,GisDisablingAutomaticTermination,V_disablingAutomaticTermination
TB,N,V_canTogglePictureInPicture
TB,N,V_hasBegunInspection
T@"BSSimpleAssertion",&,N
T@"AVPlayerLayer",W,N,V_playerLayerForReducingResources
T@"NSObject<OS_dispatch_source>",R,N,V_seekTimer
Tq,N,V_bestAvailableVideoResolution
Tq,N,V_bestAvailableVideoRange
Tq,N,V_bestAvailableAudioFormat
T@"NSError",R,N
_jKeyDown
_kKeyDown
_lKeyDown
_audioMediaSelectionOptions
_legibleMediaSelectionOptions
_cachedSelectedAudioMediaSelectionOption
_cachedSelectedLegibleMediaSelectionOption
_cachedSelectedLegibleMediaSelectionOptionAccordingToAVFoundation
_lastKnownPersistedExtendedLanguageTag
_seekQueue
_ignoreRateKeyValueChange
_observationInfo
_inspectionSuspended
_updateAtMinMaxTimePeriodicObserverToken
_timecodePeriodicObserverToken
_pictureInPictureInterrupted
_handlesAudioSessionInterruptions
_isDeallocating
_rateToRestoreAfterAudioSessionInterruptionEnds
_retryPlayingImmediatelyBlock
_shouldPlayImmediately
_looping
_actionAtItemEnd
_pendingSeek
_isScanningForward
_isScanningBackward
_scanningCount
_preScanningRate
_liveStreamMinTiming
_liveStreamMaxTiming
_canUseNetworkResourcesForLiveStreamingWhilePausedCount
_previousValueOfCanUseNetworkResourcesForLiveStreamingWhilePaused
_shouldPlayWhenLikelyToKeepUp
_playingOnSecondScreen
_reduceResourceUsageAssertion
_defaultPlaybackRate
_touchBarRequiresLinearPlayback
_atMaxTime
_atMinTime
_pictureInPictureSupported
_seekingInternal
_composable
_hasProtectedContent
_compatibleWithAirPlayVideo
_preventingIdleSystemSleep
_preventingIdleDisplaySleep
_disablingAutomaticTermination
_canTogglePictureInPicture
_hasBegunInspection
_currentAssetIfReady
_assetInspectionQueue
_assetBeingPrepared
_timing
_minTiming
_maxTiming
_currentAudioTrack
_seekToTime
_availableMetadataFormats
_rateBeforeScrubBegan
_playerLayerForReducingResources
_seekTimer
_bestAvailableVideoResolution
_bestAvailableVideoRange
_bestAvailableAudioFormat
_presentationSize
_seekToTimeInternal
initWithPlayer:
startInspectionIfNeeded
startKVO
observationInfo
setObservationInfo:
_queuePlayer
status
isReadyToPlay
error
isCompletelySeekable
_observeValueForKeyPath:oldValue:newValue:
rate
setRate:
_retryPlayImmediatelyIfNeeded
canPlayImmediately
canPlay
play:
autoplay:
canPause
pause:
canTogglePlayback
touchBarRequiresLinearPlayback
setTouchBarRequiresLinearPlayback:
isLooping
setLooping:
updateAtMinMaxTime
volume
setVolume:
increaseVolume:
decreaseVolume:
changeVolumeToMinimum:
changeVolumeToMaximum:
isMuted
setMuted:
toggleMuted:
isInspectionSuspended
setInspectionSuspended:
contentDuration
nominalFrameRate
contentDimensions
minTime
setMinTime:
reversePlaybackEndTime
setReversePlaybackEndTime:
maxTime
setMaxTime:
forwardPlaybackEndTime
setForwardPlaybackEndTime:
_setMinTiming:maxTiming:
contentDurationWithinEndTimes
currentDate
currentTimeWithinEndTimes
seekableTimeRanges
loadedTimeRanges
hasEnabledAudio
hasVideo
hasEnabledVideo
hasContentChapters
isStreaming
hasLiveStreamingContent
hasSeekableLiveStreamingContent
hasTrimmableContent
hasShareableContent
_assetIsRestrictedFromSaving:
audioWaveform
_assetIsMarkedNotSerializable:
_assetContainsProResRaw:
_updateCurrentAudioTrackIfNeeded
timeControlStatus
canSeek
seekToTime:
beginScrubbing
endScrubbing
seekToTime:toleranceBefore:toleranceAfter:
seekToCMTime:toleranceBefore:toleranceAfter:
throttledSeekToTime:toleranceBefore:toleranceAfter:
actuallySeekToTime
seekByTimeInterval:
seekByTimeInterval:toleranceBefore:toleranceAfter:
canScanForward
scanForward:
beginScanningForward:
_updateScanningForwardRate
endScanningForward:
canScanBackward
scanBackward:
beginScanningBackward:
_updateScanningBackwardRate
endScanningBackward:
canSeekToBeginning
seekToBeginning:
canSeekToEnd
seekToEnd:
canSeekFrameForward
seekFrameForward:
canSeekFrameBackward
seekFrameBackward:
seekOrStepByFrameCount:
skipBackwardThirtySeconds:
beginScrubbing:
endScrubbing:
updateTiming
updateMinMaxTiming
allowsExternalPlayback
setAllowsExternalPlayback:
isPlayingOnExternalScreen
isPlayingOnSecondScreen
isExternalPlaybackActive
externalPlaybackType
externalPlaybackAirPlayDeviceLocalizedName
isPictureInPictureInterrupted
setPictureInPictureInterrupted:
togglePictureInPicture:
beginReducingResourcesForPictureInPicturePlayerLayer:
endReducingResourcesForPictureInPicturePlayerLayer:
acquireResourceReductionAssertion
setReduceResourceUsageAssertion:
reduceResourceUsageAssertion
isReducingResourcesForPictureInPicture
startUsingNetworkResourcesForLiveStreamingWhilePaused
stopUsingNetworkResourcesForLiveStreamingWhilePaused
canUseNetworkResourcesForLiveStreamingWhilePaused
setCanUseNetworkResourcesForLiveStreamingWhilePaused:
_timecodeTrack
_cancelPendingSeeksIfNeeded
_updateRateForScrubbingAndSeeking
scanningDelays
_prepareAssetForInspectionIfNeeded
isAtMaxTime
setAtMaxTime:
isAtMinTime
setAtMinTime:
presentationSize
setPresentationSize:
currentAssetIfReady
setCurrentAssetIfReady:
assetInspectionQueue
setAssetInspectionQueue:
assetBeingPrepared
setAssetBeingPrepared:
setPictureInPictureSupported:
timing
setTiming:
minTiming
setMinTiming:
maxTiming
setMaxTiming:
currentAudioTrack
setCurrentAudioTrack:
isSeekingInternal
setSeekingInternal:
seekToTimeInternal
setSeekToTimeInternal:
seekToTime
setSeekToTime:
isComposable
setComposable:
hasProtectedContent
setHasProtectedContent:
availableMetadataFormats
setAvailableMetadataFormats:
isCompatibleWithAirPlayVideo
setCompatibleWithAirPlayVideo:
rateBeforeScrubBegan
setRateBeforeScrubBegan:
isPreventingIdleSystemSleep
setPreventingIdleSystemSleep:
isPreventingIdleDisplaySleep
setPreventingIdleDisplaySleep:
isDisablingAutomaticTermination
setDisablingAutomaticTermination:
canTogglePictureInPicture
setCanTogglePictureInPicture:
hasBegunInspection
setHasBegunInspection:
playerLayerForReducingResources
setPlayerLayerForReducingResources:
seekTimer
bestAvailableVideoResolution
setBestAvailableVideoResolution:
bestAvailableVideoRange
setBestAvailableVideoRange:
bestAvailableAudioFormat
setBestAvailableAudioFormat:
cancelPendingSeeks
associatedTracksOfType:
initWithIdentifier:forReason:invalidationBlock:
setPreferredForwardBufferDuration:
setPreferredPeakBitRate:
preferredForwardBufferDuration
preferredPeakBitRate
deviceName
supportsMultipleOutputDevices
outputContext
liveUpdateInterval
stepByCount:
canStepBackward
canStepForward
canPlayFastReverse
track
getBytes:length:
objectAtIndex:
numberWithUnsignedInt:
metadataForFormat:
numberWithInt:
setActionAtItemEnd:
actionAtItemEnd
isPlaybackLikelyToKeepUp
isPlaybackBufferEmpty
playImmediatelyAtRate:
isPiPAvailable
sharedApplication
dictionaryWithDictionary:
commonMetadata
handlesAudioSessionInterruptions
addPeriodicTimeObserverForInterval:queue:usingBlock:
keyPathsForValuesAffectingStatus
keyPathsForValuesAffectingReadyToPlay
keyPathsForValuesAffectingError
keyPathsForValuesAffectingCompletelySeekable
keyPathsForValuesAffectingRate
keyPathsForValuesAffectingCanPlay
keyPathsForValuesAffectingPlaying
keyPathsForValuesAffectingCanPause
keyPathsForValuesAffectingCanTogglePlayback
keyPathsForValuesAffectingVolume
keyPathsForValuesAffectingMuted
keyPathsForValuesAffectingHasContent
keyPathsForValuesAffectingContentDuration
keyPathsForValuesAffectingContentDimensions
keyPathsForValuesAffectingCurrentTime
keyPathsForValuesAffectingMinTime
keyPathsForValuesAffectingReversePlaybackEndTime
keyPathsForValuesAffectingMaxTime
keyPathsForValuesAffectingForwardPlaybackEndTime
keyPathsForValuesAffectingContentDurationWithinEndTimes
keyPathsForValuesAffectingCurrentTimeWithinEndTimes
keyPathsForValuesAffectingSeekableTimeRanges
keyPathsForValuesAffectingLoadedTimeRanges
keyPathsForValuesAffectingHasEnabledAudio
keyPathsForValuesAffectingHasVideo
keyPathsForValuesAffectingHasEnabledVideo
keyPathsForValuesAffectingStreaming
keyPathsForValuesAffectingHasLiveStreamingContent
keyPathsForValuesAffectingHasSeekableLiveStreamingContent
keyPathsForValuesAffectingHasTrimmableContent
keyPathsForValuesAffectingHasShareableContent
keyPathsForValuesAffectingTimeControlStatus
keyPathsForValuesAffectingCanSeek
keyPathsForValuesAffectingCanScanForward
keyPathsForValuesAffectingCanScanBackward
keyPathsForValuesAffectingCanSeekToBeginning
keyPathsForValuesAffectingCanSeekToEnd
keyPathsForValuesAffectingCanSeekFrameForward
keyPathsForValuesAffectingCanSeekFrameBackward
keyPathsForValuesAffectingAllowsExternalPlayback
keyPathsForValuesAffectingPlayingOnExternalScreen
keyPathsForValuesAffectingExternalPlaybackActive
keyPathsForValuesAffectingExternalPlaybackType
keyPathsForValuesAffectingExternalPlaybackAirPlayDeviceLocalizedName
keyPathsForValuesAffectingPictureInPicturePossible
setWithArray:
usesExternalPlaybackWhileExternalScreenIsActive
preferredDisplayCriteria
maximumVideoResolution
setPlayingOnSecondScreen:
setHandlesAudioSessionInterruptions:
keyPathsForValuesAffectingUsesExternalPlaybackWhileExternalScreenIsActive
keyPathsForValuesAffectingPreferredDisplayCriteria
keyPathsForValuesAffectingMaximumVideoResolution
playingOnSecondScreen
TB,N,GisPlayingOnSecondScreen
T@"UIWindow",W,N,V_window
T@"UIWindowScene",&,N,V_windowScene
T@"AVDisplayCriteria",C,N
TB,R,N,GisDisplayModeSwitchInProgress
displayCriteriaMatchingEnabled
TB,R,N,GisDisplayCriteriaMatchingEnabled
_window
_windowScene
initPrivateWithWindow:
_currentWindowScene
setPreferredDisplayCriteria:
window
setWindow:
windowScene
setWindowScene:
T@"NSObject<OS_dispatch_queue>",R,N,V_queue
T@"NSMutableSet",&,N,V_activeChannels
T@"<AVAirMessageNotificationCenterDelegate>",W,N,V_delegate
T@"AVBonjourService",R,N,V_mainService
T@"AVPlayerItem",&,N,V_nowPlayingPlayerItem
_started
_mainService
_nowPlayingPlayerItem
_activeChannels
airTransportOutputDidOpen:
airTransport:didReceiveObject:
airTransportInputDidClose:
bonjourServiceAdditionalTXTRecordInfo:
bonjourService:didAcceptConnectionChannel:
bonjourService:didCloseChannel:
start
playerItemForIdentifier:
handleCommandMessage:completion:
mainService
nowPlayingPlayerItem
setNowPlayingPlayerItem:
queue
activeChannels
setActiveChannels:
_isNotificationCenterEnabled
prepare
isPrepared
T@"AVKeyValueObserverCollection",&,N,V_nowPlayingKVO
TB,N,V_shouldShowInfoHint
frameSetForNavigationMarkersOnly
TB,R,GisFrameSetForNavigationMarkersOnly
T@"AVDurationTimeFormatter",&,N,V_interstitialTimeFormatter
TB,R,GisSeeking
T@"NSUUID",&,N,V_scanningSesssionUUID
T@"AVStandardScanningDelegate",&,N,V_standardScanningDelegate
TB,N,V_scanningImageBlockCalled
Td,N,V_assetTimeAtStartOfScan
Tf,N,V_currentScanRate
scanningTriggeredBySelectButton
TB,N,GwasScanningTriggeredBySelectButton,V_scanningTriggeredBySelectButton
scrubbingSupported
TB,R,N,GisScrubbingSupported
T@"AVInternalPlaybackOptions",&,N,V_playbackOptions
Tq,R,V_playbackControlsState
T{CGRect={CGPoint=dd}{CGSize=dd}},R,N,V_unoccludedBounds
T@"NSURL",&,N,V_alternateThumbnailStreamURL
T@"<AVPlayerViewControllerDelegate>",W,N,V_delegate
T@"AVxOverlayViewController",R,N,V_overlayViewController
T@"NSArray",C,N,V_customInfoViewControllers
T@"NSString",C,N,V_infoHint
applicationResigning
TB,N,GisApplicationResigning,V_applicationResigning
scanning
TB,R,N,GisScanning
T@"_AVFocusContainerView",R,N
T@"NSArray",&,N,V_transportBarObservers
T@"UIPanGestureRecognizer",&,N,V_scrubbingGestureRecognizer
T@"_UIRotaryGestureRecognizer",&,N,V_rotaryGestureRecognizer
T@"AVDigitizerTouchGestureRecognizer",&,N,V_digitizerTouchGestureRecognizer
customOverlayHintVisible
TB,N,GisCustomOverlayHintVisible,V_customOverlayHintVisible
_contentFullyLoaded
_selectButtonHeldDown
_assetHasDates
_initialPlaybackBegun
_shouldFadeOutPlaybackControlsOncePlaybackBegins
_shouldDisableNavigationMarkerImagesInInfoPanel
_isPlaybackControlsStateLocked
_lastAccumulatedDistanceRotary
_playbackControlsStateWhenVisible
_maxMinusMinDurationCached
_timeOfLastCurrentDateCheck
_loadingIndicatorView
_controlsContainerView
_transportCaptureView
_dimmingView
_scanningImageView
_infoPanelViewController
_infoHintView
_customOverlayHintView
_nextChannelHintView
_previousChannelHintView
_focusTensionGestureRecognizer
_channelInterstitialContainer
_channelInterstitialViewController
_channelTransition
_displayLink
_touch
_scrubbingMetrics
_audioSessionInterruptionNotificationObserver
_playerItemDidScanToEndTimeObserver
_applicationResigning
_customOverlayHintVisible
_shouldShowInfoHint
_scanningImageBlockCalled
_scanningTriggeredBySelectButton
_currentScanRate
_playbackControlsState
_overlayViewController
_transportBarObservers
_scrubbingGestureRecognizer
_digitizerTouchGestureRecognizer
_nowPlayingKVO
_interstitialTimeFormatter
_scanningSesssionUUID
_standardScanningDelegate
_assetTimeAtStartOfScan
_unoccludedBounds
didDismissInfoPanelViewController
infoPanelViewController:willShowViewController:
infoPanelViewController:playPauseRecognizedByViewController:
viewController:didSelectLanguageOption:
viewController:didSelectSubtitleOption:
numberOfMarkersForNavigationViewController:
navigationViewController:imageProxyForMarkerIndex:
navigationViewController:titleForMarkerIndex:
navigationViewController:didSelectMarkerIndex:
didLoadFrameAffectingRange:
mediaServerResetInvalidatedFrameSet:
timeForFrameIndex:
numberOfFramesForTransportBar:
transportBar:frameTimeForDisplayTime:
transportBar:displayTimeForFrameTime:
transportBar:didRevealFrameIndex:
channelInterstitialDidSwipeLeft:
channelInterstitialDidSwipeRight:
removeFromParentViewController
updateDisplayLinkInterval
startDisplayLink
stopDisplayLink
hidePlaybackControlsAfterUserInteraction
_timerFiredForHidingPlaybackControls:
userDidInteract
cancelUserDidInteract
isStalled
setDigitizerTouchGestureRecognizer:
isScrubbingSupported
isScanning
isScanningEnabled
setScanningImage:
isPausingEnabled
setShowsLoadingIndicator:afterDelay:
hasThumbNails
_updateLoadingAndErrorIndicators
_keyDidChangeAffectingLoadingOrErrorStatus:
_updateSeekableRangesOnceOnMain
_seekableRangesDidChange
_playerStatusDidChange:
_updateStartAndEndDatesAndTimes
_playerItemForScrubbingDidChange:
_scrubbingPlayerItemStatusDidChange:
isAtPausePoint
_resetToPausePointResumingPlayback:
resetToPausePointWithoutPlaying
resetToPausePoint
didChangeFullScreen
focusContainerView
_shouldChannelSkipToNextForSwipeDirection:
_presentedChannelInterstitialViewController
_viewControllerForChannelInterstitial:
_willDismissChannelInterstitialResumingPlayback:
_didDismissChannelInterstitialResumingPlayback:
_presentChannelInterstitialFromSwipeDirection:
_isPlayerItemChannel
_isChannelSkippingEnabled
_updateChannelSkippingGestures
_swipeLeftOrRight:
_presentInteractiveOverlay
_dismissInteractiveOverlay
isFrameSetForNavigationMarkersOnly
_updateTransportBarScrubDataSource
didReceiveMemoryWarning
_updateHintsForTouchPosition:
_updateHintsForDigitizerLocation:
clearHintIfMatching:
_clearHintIfMatchingNumber:
clearHintAfterDelay
showHintBriefly:
updateHintsForEvent:
setShouldShowInfoHint:
_updateShowInfoHintForScrubbingState
_cancelInfoHint
_scheduleInfoHint
_showInfoHint
setCustomOverlayHintVisible:
setCustomOverlayHintVisible:animated:completion:
shouldIgnoreTouchEvents
shouldShowLeftRightTouchHints
_isTouchingRemote
touchesBegan:
didReceiveTouchCount:
touchesMoved:
touchesEnded:
touchesCancelled:
_enableOrDisableScrubbingGestureRecognizer
setScrubbingGestureRecognizer:
_shouldTransportBarScrub
setRotaryGestureRecognizer:
rotaryGestureWillBegin:
rotaryGestureFailedToBegin:
rotaryGestureDetected:
scrubGestureDetected:
_focusTensionGestureRecognizer:
_currentItemDurationDidChange
updateTransportBarLiveState
_updateUnoccludedBounds
_currentItemDidChange
_togglePlayback:
togglePlayback
wantPlayback
setWantPlayback:
pause
pauseForModalInterruption
resumeAfterModalInterruption
timeFromTransportBar
_skipDisplayTimeByAdding:seeking:
skipToNextScrubbingFrame
skipToPreviousScrubbingFrame
_skipToNextItemIfEnabled
_skipToPreviousItemIfEnabled
skipToNextNavigationMarker
skipToPreviousNavigationMarker
mediaRemoteSkipBy:
mediaRemoteSeekToDisplayTime:
_updateScanningSpeedHintNumberForRate:
_setHintForRate:
_startScanningSession
_startScanningSessionIfNecessary
scanForwardNext
scanBackwardNext
scanAtRate:displayingRateIndicator:
scanAtRate:
didPressLeftArrowB39
didPressRightArrowB39
didLongPressLeftArrowB39
didLongPressRightArrowB39
didPressUpArrowB39
navigateDown
didPressDownArrowB39
didPressSelectB39
handleB39LongPressGesture:
_handleLeftRightTouchPressGesture:
handleB39ClickGesture:
isInfoPaneActive
_availableSubtitleMediaSelectionOptions
_availableExternalSubtitleLanguageOptions
_updateMediaSelectionOptions
_updateCurrentLegibleMediaSelectionOption
_updateCurrentAudibleMediaSelectionOption
showInfoPaneAnimated:completion:
isSystemOverlayPresentedOverInfoPane
hideInfoPaneAnimated:completion:
didSelectAudioMediaSelectionOption:
didSelectLegibleMediaSelectionOption:externalLanguage:
_isFullScreen
_isInfoAllowed
_isTransportBarAllowed
playerViewController:willDismissViewController:
playerViewController:didDismissViewController:
remoteSelectButtonDown:
currentScanRate
startFFRWRate:
removePlayerItemDidScanToEndTimeObserverIfNeeded
handlePlayerItemDidScanPastEndTime:
stopFFRW
stopFFRWWithBounceBack:
startFFRWDirection:
remoteSelectButtonHeld:
remoteSelectButtonUp:
_setControlsContainerSubviewsVisible:animated:
_setControlsContainerVisible:animated:
_lockPlaybackControlsState
_unlockPlaybackControlsState
setPlaybackControlsStateToHiddenWithVisibleState:animated:
setPlaybackControlsState:animated:
setPlaybackControlsState:visibleState:animated:
_setPlaybackControlsState:animated:
_setVisiblePlaybackControlsState:
secondsPerScrubbingFrame
cleanupScrubbingFrames
invalidateFrameSet
isCurrentTimeValid
_isLive
endTimeInterval
nearestAvailableFrameIndexToScrubbingFrameIndex:
nearestAvailableImageToScrubbingFrameIndex:
existingImageForScrubbingFrameIndex:
imageForScrubbingFrameIndex:
numberOfScrubbingFrames
prepareInfoMetadata
_scrubbingIndexForMarkerIndex:
_navigationMarkerIndexPathsForFrameRange:
_imageProxyForNavigationMarkerIndex:
_updateAdMarkers
_prefetchFramesForSliceSize:completion:
_prefetchThumbnails
_prefetchChapterFramesThenOthers
_frameSetDidBecomeReady
_scrubberTranslationForGesture:
_scrubbingVelocityUpperBound
timeRangeForScrubbing
displayedTimeRangeOfContentLoaded
interstitialNeedleText
updateDisplayLink:
updateFractionOfContentLoaded
heartbeat:
playbackOptions
setPlaybackOptions:
playbackControlsState
unoccludedBounds
overlayViewController
isApplicationResigning
setApplicationResigning:
transportBarObservers
setTransportBarObservers:
scrubbingGestureRecognizer
rotaryGestureRecognizer
digitizerTouchGestureRecognizer
isCustomOverlayHintVisible
nowPlayingKVO
setNowPlayingKVO:
shouldShowInfoHint
interstitialTimeFormatter
setInterstitialTimeFormatter:
scanningSesssionUUID
setScanningSesssionUUID:
standardScanningDelegate
setStandardScanningDelegate:
scanningImageBlockCalled
setScanningImageBlockCalled:
assetTimeAtStartOfScan
setAssetTimeAtStartOfScan:
setCurrentScanRate:
wasScanningTriggeredBySelectButton
setScanningTriggeredBySelectButton:
mainRunLoop
fireDate
animationKeys
floatForKey:
velocityInView:
raise
exceptionWithName:reason:userInfo:
hasMediaCharacteristic:
mediaSelectionOptionsFromArray:filteredAndSortedAccordingToPreferredLanguages:
insertObject:atIndex:
setTranslation:inView:
startRegion
delta
accumulatedDistance
velocity
phase
allTouches
playerItemWithAsset:
environment
processInfo
addConstraint:
constraintWithItem:attribute:relatedBy:toItem:attribute:multiplier:constant:
layoutConstraintsForPresentationInView:
addConstraints:
setLayoutMargins:
valueForKeyPath:
reasonForWaitingToPlay
isValid
timerWithTimeInterval:target:selector:userInfo:repeats:
setPaused:
addToRunLoop:forMode:
displayLinkWithTarget:selector:
setPreferredFramesPerSecond:
cancelPreviousPerformRequestsWithTarget:
errorLog
T@"UISpringTimingParameters",R,N
springTimingParameters
viewPropertyAnimatorWithParameters:
Tq,N,V_transitionDirection
TB,N,V_shouldMovePresentingViewInParallel
_springTimingParameters
_shouldMovePresentingViewInParallel
_transitionDirection
prepareViewController:forTransitionInDirection:
initialFrameForViewController:
finalFrameForViewController:
transitionDirection
setTransitionDirection:
shouldMovePresentingViewInParallel
setShouldMovePresentingViewInParallel:
viewForKey:
T@"NSSet",&,N,V_exclusiveGestureRecognizers
T@"NSSet",&,N,V_gestureRecognizersThatMustFail
T@"UITapGestureRecognizer",&,N,V_dismissalMenuTapRecognizer
T@"UITapGestureRecognizer",&,N,V_otherMenuTapRecognizer
T@?,C,N,V_userInteractionAllowedBlock
userInteractionAllowed
TB,R,N,GisUserInteractionAllowed
T@?,C,N,V_shouldBeginDismissalMenuTapGesture
T@?,C,N,V_shouldBeginOtherMenuTapBlockGesture
T@?,C,N,V_shouldBeginRotaryFromRest
T@?,C,N,V_willBeginRotaryFromRest
T@?,C,N,V_failedBeginRotaryFromRest
_exclusiveGestureRecognizers
_gestureRecognizersThatMustFail
_dismissalMenuTapRecognizer
_otherMenuTapRecognizer
_userInteractionAllowedBlock
_shouldBeginDismissalMenuTapGesture
_shouldBeginOtherMenuTapBlockGesture
_shouldBeginRotaryFromRest
_willBeginRotaryFromRest
_failedBeginRotaryFromRest
rotaryGestureRecognizerCanBeginFromRest:
rotaryGestureRecognizerMustBeginFromRest:
rotaryGestureRecognizerIsAttemptingToBeginFromRest:
rotaryGestureRecognizerFailedToBeginFromRest:
exclusiveGestureRecognizers
setExclusiveGestureRecognizers:
gestureRecognizersThatMustFail
setGestureRecognizersThatMustFail:
dismissalMenuTapRecognizer
setDismissalMenuTapRecognizer:
otherMenuTapRecognizer
setOtherMenuTapRecognizer:
userInteractionAllowedBlock
setUserInteractionAllowedBlock:
shouldBeginDismissalMenuTapGesture
setShouldBeginDismissalMenuTapGesture:
shouldBeginOtherMenuTapBlockGesture
setShouldBeginOtherMenuTapBlockGesture:
shouldBeginRotaryFromRest
setShouldBeginRotaryFromRest:
willBeginRotaryFromRest
setWillBeginRotaryFromRest:
failedBeginRotaryFromRest
setFailedBeginRotaryFromRest:
_ringView
_fingerPositionView
_roundPointerView
T@"UIViewController",R,N,V_externalViewController
_externalViewController
initWithExternalViewController:
_preferredContentHeight
externalViewController
localizedInfoDictionary
stringByTrimmingCharactersInSet:
whitespaceAndNewlineCharacterSet
avkit_offOption
avkit_autoOption
localizedDisplayName
shortLocalizedDisplayName
T@"AVMediaSelectionOption",R
T@"UIView",R,N,V_contentView
T@"UIVisualEffectView",R,N,V_backdropView
TB,R,N,V_hasContent
_hasContent
_contentView
_backdropView
contentView
backdropView
setCornerRadius:
cornerRadius
T@"<AVInfoPanelSubtitlesDelegate>",W,N,V_delegate
TQ,N,V_selectedSubtitleOptionIndex
_subtitleCollectionViewController
_subtitleOptions
_subtitleCollectionViewWidthConstraint
_selectedSubtitleOptionIndex
setSelectedSubtitleOptionIndex:
setLegibleMediaSelectionOptions:externalSubtitleOptions:
_subtitleFlowLayout
_createOrUpdateSubtitleCollectionViewWidthConstraint
selectedSubtitleOptionIndex
labelValue
T@,&,D,N
T@"AVAnimatingLabelLayer",R,N
presentationAnimatingLabelLayer
initWithLayer:
actionForKey:
setTimingFunction:
functionWithName:
_isCustomAnimationKey:
setLabelValue:
needsDisplayForKey:
T@"UILabel",&,N,V_label
T@"NSFormatter",&,N,V_formatter
T@,&,N
T{UIEdgeInsets=dddd},N,V_layoutInsets
T@"UIFont",&,N
_isTextOverridden
_valuesRepresentDates
_formatter
_layoutInsets
initWithFrame:formatter:
animatingLabelLayer
font
setFont:
textColor
setTextColor:
textAlignment
setTextAlignment:
isEmpty
setLayoutInsets:
setFormatter:
labelPresentationValue
displayLayer:
formatter
layoutInsets
setLabel:
dateWithTimeIntervalSinceReferenceDate:
inheritedAnimationDuration
areAnimationsEnabled
setTimeInterval:animated:
timeInterval
setTimeInterval:
animatingNumberLabel
animatingDurationLabel
animatingDateLabelForTimeStyle:
T@"NSString",R,N,V_netServiceType
T@"<AVBonjourServiceDelegate>",W,N,V_delegate
_networkService
_deviceInfoChangedObserver
_playerItemChangedObserver
_netServiceType
netServiceWillPublish:
netServiceDidPublish:
netService:didNotPublish:
netServiceWillResolve:
netServiceDidResolveAddress:
netService:didNotResolve:
netServiceDidStop:
netService:didUpdateTXTRecordData:
netService:didAcceptConnectionWithInputStream:outputStream:
initWithNetServiceType:
_restartService
netMethodService:didNotPublish:
txtRecordDataForDevice:
_initializeBonjourServiceWithDeviceInfo:
netServiceType
setTXTRecordData:
initWithDomain:type:name:
dataFromTXTRecordDictionary:
_defaultTXTRecordWithDeviceInfo:
startMonitoring
publishWithOptions:
T@"AVDisplayManager",R,N
T@"AVPlayerController",R,N
T@"AVMediaPlayerDelegate",&,N,V_mediaPlayerDelegate
T@"AVPlayer",R
T@"AVPlayerItem",R
T@"AVAsset",R
T@,&,N,V_playerControllerCurrentTimeJumpedObserver
T@,&,N,V_mediaSelectionOptionsDidChangeObserver
T@"NSMutableArray",&,N,V_navigationGroupArtworkLoadedObservers
T^v,N
T@"AVPlayerItem",W,N,V_playerItemForContentItemRef
T@?,C,N,V_playbackQueueRequestCreateContentItemCallback
T@?,C,N,V_playbackQueueRequestContentItemMetadataCallback
T@?,C,N,V_playbackQueueRequestContentItemArtworkCallback
T@?,C,N,V_playbackQueueRequestContentItemLanguageOptionsCallback
T@?,C,N,V_playbackQueueRequestContentItemDescriptionCallback
T@?,C,N,V_playbackQueueRequestCreateChildContentItemCallback
T^v,N,V_tokenForCreateContentItemCallback
T^v,N,V_tokenForContentItemMetadataCallback
T^v,N,V_tokenForContentItemArtworkCallback
T^v,N,V_tokenForContentItemLanguageOptionsCallback
T^v,N,V_tokenForCreateChildContentItemCallback
T^v,N,V_tokenForContentItemInfoCallback
T@"NSMutableDictionary",&,N,V_contentItemSectionIdentifiers
nowPlaying
TB,N,GisNowPlaying
pictureInPicture
TB,N,GisPictureInPicture
T@"AVPlayerViewController",R,N,V_playerViewController
_contentItemRef
_lastPlayerPathInstalled
_playerViewControllerBecameNowPlaying
_isInstallationOfCallbacksComplete
_readyToPlayPlayerItem
_mediaPlayerDelegate
_playerControllerCurrentTimeJumpedObserver
_mediaSelectionOptionsDidChangeObserver
_navigationGroupArtworkLoadedObservers
_playerItemForContentItemRef
_playbackQueueRequestCreateContentItemCallback
_playbackQueueRequestContentItemMetadataCallback
_playbackQueueRequestContentItemArtworkCallback
_playbackQueueRequestContentItemLanguageOptionsCallback
_playbackQueueRequestContentItemDescriptionCallback
_playbackQueueRequestCreateChildContentItemCallback
_tokenForCreateContentItemCallback
_tokenForContentItemMetadataCallback
_tokenForContentItemArtworkCallback
_tokenForContentItemLanguageOptionsCallback
_tokenForCreateChildContentItemCallback
_tokenForContentItemInfoCallback
_contentItemSectionIdentifiers
isNowPlaying
setNowPlaying:
isPictureInPicture
setPictureInPicture:
isPublishing
_startPublishing
_stopPublishing
initWithPlayerViewController:
currentPlayerPath
setInstallPlaybackQueueCallbacks:
setMediaPlayerDelegate:
remoteCommandCenter
_updateNowPlayingSession
playerDidChange
displayManager
contentItemRef
setContentItemRef:
playerItemIdentifier
_postDidBecomeNowPlayingNotificationIfNecessary
_displayedDuration
_elapsedDisplayTime
_updateNowPlayingInfoDeferred
__updateLanguageSelectionForContentItem:
_updateNowPlayingInfoLanguageSelectionOnlyDeferred
_cancelDeferredUpdates
updateNowPlayingInfoLanguageOptions
_invalidateAllContentItemInfo
availableLanguageOptionGroups
currentLanguageOptions
numberOfSectionsForCurrentItem
sectionContentItemWithParentItem:sectionIndex:
addMetadataForSectionItem:sectionIndex:
addArtworkForSectionItem:sectionIndex:requestedSize:completion:
_externalContentIdentifier
_fetchNowPlayingInfo:
_metadataForPlayerItem:identifiers:
_determineArtworkAvailability:
_fetchNowPlayingInfoArtworkForSize:completion:
_scaleImage:toSize:completion:
_nowPlayingInfo
mediaPlayerDelegate
playerControllerCurrentTimeJumpedObserver
setPlayerControllerCurrentTimeJumpedObserver:
mediaSelectionOptionsDidChangeObserver
setMediaSelectionOptionsDidChangeObserver:
navigationGroupArtworkLoadedObservers
setNavigationGroupArtworkLoadedObservers:
playerItemForContentItemRef
setPlayerItemForContentItemRef:
playbackQueueRequestCreateContentItemCallback
setPlaybackQueueRequestCreateContentItemCallback:
playbackQueueRequestContentItemMetadataCallback
setPlaybackQueueRequestContentItemMetadataCallback:
playbackQueueRequestContentItemArtworkCallback
setPlaybackQueueRequestContentItemArtworkCallback:
playbackQueueRequestContentItemLanguageOptionsCallback
setPlaybackQueueRequestContentItemLanguageOptionsCallback:
playbackQueueRequestContentItemDescriptionCallback
setPlaybackQueueRequestContentItemDescriptionCallback:
playbackQueueRequestCreateChildContentItemCallback
setPlaybackQueueRequestCreateChildContentItemCallback:
tokenForCreateContentItemCallback
setTokenForCreateContentItemCallback:
tokenForContentItemMetadataCallback
setTokenForContentItemMetadataCallback:
tokenForContentItemArtworkCallback
setTokenForContentItemArtworkCallback:
tokenForContentItemLanguageOptionsCallback
setTokenForContentItemLanguageOptionsCallback:
tokenForCreateChildContentItemCallback
setTokenForCreateChildContentItemCallback:
tokenForContentItemInfoCallback
setTokenForContentItemInfoCallback:
contentItemSectionIdentifiers
setContentItemSectionIdentifiers:
_createMediaRemoteLanguageOptionWithSubtitleOption:
_createMediaRemoteLanguageOptionWithAudioOption:
enableLanguageOptionCommand
_createMediaRemoteLanguageOptionGroupWithSubtitleOptions:
_createMediaRemoteLanguageOptionGroupWithAudioOptions:
nowPlayingInfo
processIdentifier
null
unsignedIntValue
sharedCommandCenter
_isThirdPartyPIPSupported
shouldUsePlayerPath
initWithOrigin:client:player:
localClient
localOrigin
initWithIdentifier:displayName:
mxSessionID
numberWithLong:
T@"AVMediaRemoteManager",R,N
nowPlayingMediaRemoteManager
pictureInPictureMediaRemoteManager
_mediaRemoteLanguageOptionCharacteristicsForAVMediaSelectionOption:
_avMediaCharacteristics
_mediaRemoteLanguageOptionCharacteristicForAVMediaCharacteristic:
initWithObjectsAndKeys:
avkit_mediaRemoteIdentifier
playerPathForPlayer:
mediaRemoteManagerPublishingForPlayer:
setPictureInPictureActive:forPlayer:
avkit_title
T@"AVMusicAppBehaviorContext",W,N,V_behaviorContext
_behaviorContext
pictureInPictureActionButtonTapped
playbackControlsDidChangePlayerVolume:
didMoveToContext:
willRemoveFromContext:
didRemoveFromContext:
contextWillHandleUserAction:
T@"NSDictionary",C,N,V_plist
T@"NSDictionary",R,N,V_mapForMovies
T@"NSDictionary",R,N,V_mapForTVShows
_plist
_mapForMovies
_mapForTVShows
initWithFileURL:
_loadRatingsMaps
_loadRatingMapsIfNeeded
_movieMapForRating:
_tvShowsMapForRating:
findRatingString:domain:country:shouldPreferTVDomain:
findRatingString:
plist
setPlist:
mapForMovies
mapForTVShows
sortUsingSelector:
systemLocale
propertyListWithData:options:format:error:
dataWithContentsOfFile:
ratingProvidersWithName:
mediaContentRating
T@"AVMediaContentRating",R,N
T@,&,N,V_requestToken
T@"AVPlayer",&,N,V_blockedPlayer
Td,N,V_requestedRateForBlockedPlayer
T@"AVObservationController",R,N,V_kvo
contentConcealed
TB,N,GisContentConcealed,V_contentConcealed
requestingAccess
TB,R,N,GisRequestingAccess
_requestingAccess
_contentConcealed
_requestToken
_blockedPlayer
_requestedRateForBlockedPlayer
setBlockedPlayer:
setContentConcealed:
isRequestingAccess
_shouldShowDiagnosticAids
backdropColor
validateMediaContentRating:allowInteraction:completion:
_cancelPlaybackForPlayerItem:
validateCurrentItemForPlayer:
isContentConcealed
requestToken
setRequestToken:
blockedPlayer
requestedRateForBlockedPlayer
setRequestedRateForBlockedPlayer:
colorWithPatternImage:
stroke
addLineToPoint:
moveToPoint:
bezierPath
setStroke
format
initWithBounds:
shouldAutomaticallyValidateForThisClient
keyPathsForValuesAffectingRequestingAccess
T@"<AVInfoPanelNavigationDelegate>",W,N,V_delegate
T{CGSize=dd},N,V_aspectRatio
Tq,N,V_selectedNavigationMarkerIndex
navigationEnabled
TB,N,GisNavigationEnabled,V_navigationEnabled
_widthConstraint
_heightConstraint
_isAtLeastOneImageLoaded
_navigationEnabled
_selectedNavigationMarkerIndex
_aspectRatio
setSelectedNavigationMarkerIndex:
_createOrUpdateWidthConstraint
_createOrUpdateHeightConstraint
_selectNavigationMarkerAtIndex:shouldScrollToCenter:
aspectRatio
setAspectRatio:
selectedNavigationMarkerIndex
isNavigationEnabled
setNavigationEnabled:
T@"AVPlayerViewController",R,W,V_playerViewController
T@"<AVPlayerViewControllerDelegate><AVPlayerViewControllerDelegatePrivate>",W,N,V_delegate
T@"<AVPlayerViewControllerPlaybackDelegate><NSObject>",W,N,V_privateDelegate
T@"<AVScanningDelegate>",W,N,V_scanningDelegate
scanningSupportedByMainDelegate
TB,R,N,GisScanningSupportedByMainDelegate
_privateDelegate
_scanningDelegate
isScanningSupportedByMainDelegate
shouldDismiss
willBeginDismissalTransition
didEndDismissalTransition
willPresentInterstitialGroup:
didPresentInterstitialGroup:
willResumePlaybackAfterUserNavigatedFromTime:toTime:
willResumePlaybackAfterUserNavigatedFromDate:toDate:
didSelectMediaSelectionOption:inMediaSelectionGroup:
didSelectExternalSubtitleOptionLanguage:
skipToNextChannel:
skipToPreviousChannel:
hasChannelSkipping
nextChannelInterstitialViewController
previousChannelInterstitialViewController
hasCustomScanning
scanFromElapsedTime:rate:imageBlock:
stopScanning
shouldHandleScanningForPlayerItem:
shouldPlayFromTime:completion:
shouldSeekToTime:completion:
shouldSeekToDate:completion:
shouldPauseWithCompletion:
shouldScanAtRate:completion:
didFinishScanning
didFinishSeek
supportsContentProposals
didAcceptContentProposal:
handlesRejectContentProposal
didRejectContentProposal:
shouldPresentContentProposal:
willTransitionToVisibilityOfTransportBar:withAnimationCoordinator:
delegateIfRespondsTo:
_hasStopScanning
scanningDelegate
setScanningDelegate:
playerViewController:willTransitionToVisibilityOfTransportBar:withAnimationCoordinator:
playerViewController:shouldPresentContentProposal:
playerViewController:didRejectContentProposal:
playerViewController:didAcceptContentProposal:
previousChannelInterstitialViewControllerForPlayerViewController:
nextChannelInterstitialViewControllerForPlayerViewController:
playerViewController:skipToNextChannel:
playerViewController:skipToPreviousChannel:
skipToPreviousItemForPlayerViewController:
skipToNextItemForPlayerViewController:
playerViewController:didSelectExternalSubtitleOptionLanguage:
mediaSelectionOptionWithPropertyList:
propertyList
playerViewController:didSelectMediaSelectionOption:inMediaSelectionGroup:
playerViewController:timeToSeekAfterUserNavigatedFromTime:toTime:
playerViewController:willResumePlaybackAfterUserNavigatedFromDate:toDate:
playerViewController:willResumePlaybackAfterUserNavigatedFromTime:toTime:
playerViewController:didPresentInterstitialTimeRange:
playerViewController:willPresentInterstitialTimeRange:
playerViewControllerDidEndDismissalTransition:
playerViewControllerWillBeginDismissalTransition:
T@"NSMutableDictionary",R,V_keyObserverMap
T@,R,V_rootObject
_keyObserverMap
_rootObject
initWithObservedObject:
startObservingKeyPath:options:block:
stopObservingKeyPath:
startObservingKeyPath:options:selector:
bindKeyPath:toKeyPath:nilNumber:
bindKeyPath:toKeyPath:
bindKeyPath:toBoolKeyPath:
keyObserverMap
rootObject
setValue:forKeyPath:
_isSynthetic
effectSettings
setSaturationDeltaFactor:
setColorTintAlpha:
setColorTint:
darkModeEffect
lightModeEffect
infoMenuCellEffectForTraitCollection:
T@"UIVisualEffectView",&,N,V_visualEffectView
T@"NSLayoutConstraint",&,N,V_floatingViewHeightConstraint
_floatingViewHeightConstraint
elementControlState
unfocusedElementTintColor
elementTintColor
elementFocusViewOpacity
applyFocusStateForEvent:controlState:
pressesBegan:withEvent:
pressesEnded:withEvent:
pressesCancelled:withEvent:
setVisualEffectView:
floatingViewHeightConstraint
setFloatingViewHeightConstraint:
allPresses
setEffect:
isSelected
setClipsSubviews:
setFocusScaleAnchorPoint:
setClipsContentToBounds:
widthForText:
T@"UIImage",&,N,V_deviceImage
T@"AVInfoPanelMediaOption",&,N,V_mediaOption
TB,N,V_canBeSelected
TB,N,V_displayAsSelected
pendingSelect
TB,N,GisPendingSelect,V_pendingSelect
_iconImageView
_symbolImageView
_pendingSelectView
_iconSpaceConstraint
_cellWidthConstraint
_canBeSelected
_displayAsSelected
_pendingSelect
_mediaOption
setDeviceImage:
setMediaOption:
setCanBeSelected:
setPendingSelect:
setDisplayAsSelected:
constrainWidthTo:
_haveImage
_updateIconConstraint
_checkmarkImageIfSelected
mediaOption
canBeSelected
displayAsSelected
isPendingSelect
stopAnimating
startAnimating
isSymbolImage
estimatedWidthForAdornmentsForMediaOption:
T@"NSString",C,N,V_text
TB,N,V_shouldResumePlayback
_scrollView
_textLabel
_shouldResumePlayback
_text
shouldResumePlayback
setShouldResumePlayback:
setContentSize:
setNumberOfLines:
panGestureRecognizer
_setGradientMaskInsets:
setShowsVerticalScrollIndicator:
setBounces:
T@"NSString",C,N,V_itemIdentifier
T@"NSString",C,N,V_MIMEType
T@"NSString",C,N,V_extendedLanguageTag
T@"NSValue",&,N,V_value
T@"NSData",&,N,V_rawData
T@"NSArray",&,N,V_array
T@"NSDictionary",&,N,V_dictionary
T@"NSDictionary",R,N,V_initialRepresentation
TI,R,N,V_type
T@"NSData",R,N
_type
_itemIdentifier
_MIMEType
_extendedLanguageTag
_value
_rawData
_array
_dictionary
_initialRepresentation
initWithMessageType:itemIdentifier:
initWithMessageType:itemIdentifier:dictionaryRepresentation:
dictionaryRepresentation
allRecognizedKeysForDictionaryRepresentation
jsonDataRepresentation
headerTextRepresenationForBodyDataLength:extraHeaders:
shouldUseJSONForBody
messageDataRepresentation
itemIdentifier
setItemIdentifier:
MIMEType
setMIMEType:
extendedLanguageTag
setExtendedLanguageTag:
setValue:
rawData
setRawData:
array
setArray:
dictionary
setDictionary:
initialRepresentation
dataUsingEncoding:allowLossyConversion:
compressedDataUsingAlgorithm:error:
_nameForDataCompressionAlgorithm:
airMessageCanonicalForm
initWithDictionary:
arrayWithObject:
dataWithJSONObject:options:error:
commonDictionaryRepresentationKeys
dictionaryRepresentationCommon
isAirMessagingEnabled
currentOSIdentifier
currentAppIdentifier
buildVersion
_decompressBodyData:forCompressionAlgorithm:
messageWithRequiresLinearPlayback:itemIdentifier:
messageWithUserScrubToAssetTime:itemIdentifier:
messageWithExternalMetadata:itemIdentifier:
messageWithPosterArtworkMetadata:itemIdentifier:
messageWithInterstitials:itemIdentifier:
messageWithParts:
stringWithUTF8String:
absoluteString
avkitACMIdentifier
T@"MPRemoteCommandCenter",&,N,V_commandCenter
_areCommandHandlersInstalled
_mediaRemoteCommandHandlerRef
_commandCenter
initWithPlayerViewController:commandCenter:
installCommandHandlers
removeCommandHandlers
mediaRemoteManager
enableCommandsForUserInteraction
handlePlayCommand:
handlePauseCommand:
handlePlayPauseCommand:
handleStopCommand:
handleSkipForward:
handleSkipBackward:
handleSeekForward:
handleSeekBackward:
handleChangePlaybackRate:
handleEnableLanguageOption:
handleDisableLanguageOption:
handleChangePlaybackPosition:
handleSpecialSeekForward:
handleSpecialSeekBackward:
_handleEnableLanguageOptionCommandWithAudibleOption:
_handleDisableAudibleLanguageOptionCommand
_handleEnableLanguageOptionCommandWithLegibleOption:
_handleDisableLegibleLanguageOptionCommand
commandCenter
setCommandCenter:
isAutomaticLegibleLanguageOption
positionTime
languageOptionType
languageOption
togglePlayPauseCommand
playCommand
pauseCommand
specialSeekBackwardCommand
specialSeekForwardCommand
changePlaybackPositionCommand
changePlaybackRateCommand
seekBackwardCommand
seekForwardCommand
skipBackwardCommand
skipForwardCommand
stopCommand
disableLanguageOptionCommand
removeTarget:
setPreferredIntervals:
localPlayerPath
initWithPlayerID:
commandCenterForPlayerID:
Td,V_minTime
Td,V_maxTime
T@"<AVTimeControlling>",&
_resolution
_currentTime
_minTime
_maxTime
setInterval:
resolution
setResolution:
setCurrentTime:
seekableTimeRangeDuration
encodeDouble:forKey:
decodeDoubleForKey:
automaticallyNotifiesObserversOfCurrentTime
targetTimeWithinEndTimes
setTargetTimeWithinEndTimes:
remainingTargetTimeWithinEndTimes
setCurrentTimeWithinEndTimes:
remainingTime
remainingTimeWithinEndTimes
isThirtySecondsBeforeCurrentTimeWithinSeekableTimeRanges
isCurrentTimeAtEndOfSeekableTimeRanges
keyPathsForValuesAffectingTargetTime
keyPathsForValuesAffectingTargetTimeWithinEndTimes
keyPathsForValuesAffectingRemainingTargetTimeWithinEndTimes
keyPathsForValuesAffectingRemainingTime
keyPathsForValuesAffectingRemainingTimeWithinEndTimes
keyPathsForValuesAffectingSeekableTimeRangeDuration
keyPathsForValuesAffectingThirtySecondsBeforeCurrentTimeWithinSeekableTimeRanges
keyPathsForValuesAffectingCurrentTimeAtEndOfSeekableTimeRanges
targetTime
setTargetTime:
thirtySecondsBeforeCurrentTimeWithinSeekableTimeRanges
TB,R,GisThirtySecondsBeforeCurrentTimeWithinSeekableTimeRanges
currentTimeAtEndOfSeekableTimeRanges
TB,R,GisCurrentTimeAtEndOfSeekableTimeRanges
_activityIndicatorView
setHidden:
initWithActivityIndicatorStyle:
T@"<AVContentProposalViewControllerDelegate>",W,N,V_contentProposalViewControllerDelegate
T@"AVContentProposal",&,N,V_contentProposal
T@"NSTimer",&,N,V_acceptanceTimer
T@"AVFocusProxyView",&,N,V_playerFocusProxyView
T@"UITapGestureRecognizer",&,N,V_selectPlayerGestureRecognizer
T@"UITapGestureRecognizer",&,N,V_menuGestureRecognizer
T@"NSDate",&,N,V_dateOfAutomaticAcceptance
_playerFocusGuide
_contentProposal
_dateOfAutomaticAcceptance
_contentProposalViewControllerDelegate
_acceptanceTimer
_playerFocusProxyView
_selectPlayerGestureRecognizer
_addPlayerFocusShadowView
playerFocusGuide
setPlayerFocusGuide:
playerLayoutGuide
didMoveToParentViewController:
_dateMainContentWillEnd
_ensureFocusProxyViewInstalled
_didSelectPlayerView:
_didPressMenuButton:
_acceptanceTimerFired:
autoAcceptProposal
preferredPlayerViewFrame
dismissContentProposalForAction:animated:completion:
hideProposalAnimated:completion:
acceptProposalAnimated:completion:
rejectProposalAnimated:completion:
contentProposal
dateOfAutomaticAcceptance
contentProposalViewControllerDelegate
setContentProposalViewControllerDelegate:
acceptanceTimer
setAcceptanceTimer:
playerFocusProxyView
setPlayerFocusProxyView:
selectPlayerGestureRecognizer
setSelectPlayerGestureRecognizer:
setMenuGestureRecognizer:
T@"AVPictureInPicturePlayerLayerView",R,N,V_pictureInPicturePlayerLayerView
TB,N,V_shouldShowAlternateActionButtonImage
T@"<AVPictureInPictureViewControllerDelegate>",W,N,V_delegate
T@"AVPictureInPictureViewController",&,N,V_contentViewController
_shouldShowAlternateActionButtonImage
_pictureInPicturePlayerLayerView
_contentViewController
initWithPictureInPicturePlayerLayerView:
pictureInPicturePlayerLayerView
shouldShowAlternateActionButtonImage
setShouldShowAlternateActionButtonImage:
contentViewController
setContentViewController:
pictureInPictureViewControllerViewDidAppear:
pictureInPictureViewControllerViewWillDisappear:
willAnimatePictureInPictureStart
didAnimatePictureInPictureStop
_proxyObserversByTokens
_notificationObservers
_notificationCenters
_owner
initWithOwner:
startObserving:keyPaths:includeInitialValue:includeChanges:observationHandler:
startObserving:keyPath:includeInitialValue:observationHandler:
startObserving:keyPaths:observationHandler:
startObserving:keyPath:observationHandler:
startObserving:keyPaths:includeInitialValue:observationHandler:
startObservingNotificationForName:object:notificationCenter:observationHandler:
stopObserving:
stopAllObservation
_stopAllObservation
stopObserving
initWithName:object:userInfo:
token
startObserving:completion:
initWithObservedObject:observer:keyPaths:retainingObservedObject:includeInitialValue:includeChanges:changesBlock:
initWithValue:oldValue:keyPath:observationToken:
T@,R,N,V_value
T@,R,N,V_oldValue
T@"NSString",R,N,V_keyPath
T@,R,N,V_observationToken
_oldValue
_keyPath
_observationToken
oldValue
keyPath
observationToken
T@"NSString",R,N,V_token
TB,R,N,V_includeInitialValue
TB,R,N,V_includeChanges
T@"NSSet",R,N,V_keyPaths
T@?,R,N,V_changesBlock
_retainedObservedObject
_unsafeUnretainedObservedObject
_canHandleChanges
_includeInitialValue
_includeChanges
_token
_keyPaths
_changesBlock
_handleValueChangeForKeyPath:ofObject:oldValue:newValue:context:
includeInitialValue
includeChanges
keyPaths
changesBlock
globallyUniqueString
T@"AVKeyValueObserverCollection",&,N,V_kvo
scanningActive
TB,N,GisScanningActive,V_scanningActive
T@?,C,N,V_imageBlock
T@"CADisplayLink",&,N,V_displayLink
Td,N,V_elapsedDisplayTimeWhenScanStarted
Td,N,V_clockTimeWhenScanStarted
Td,N,V_rate
TB,N,V_canPlayerServiceScan
playerServicingScan
TB,N,GisPlayerServicingScan,V_playerServicingScan
Td,N,V_minTime
Td,N,V_maxTime
starting
TB,N,GisStarting,V_starting
TB,N,V_hasIFrames
waitingForPreroll
TB,N,GisWaitingForPreroll,V_waitingForPreroll
TB,N,V_enableExtraLogging
_scanningActive
_canPlayerServiceScan
_playerServicingScan
_starting
_hasIFrames
_waitingForPreroll
_enableExtraLogging
_elapsedDisplayTimeWhenScanStarted
_clockTimeWhenScanStarted
_rate
playerViewController:scanFromElapsedTime:rate:imageBlock:
stopScanningPlayerViewController:
playerViewController:shouldHandleScanningForPlayerItem:
setPlayerServicingScan:
setImageBlock:
_clockTimeElapsed
_updateMinMaxTimes
_currentScanningTimeInterval
setElapsedTimeWhenScanStarted:
_didFireDisplayLink:
_stopWaitingForPreroll
isScanningActive
setScanningActive:
imageBlock
displayLink
setDisplayLink:
elapsedDisplayTimeWhenScanStarted
setElapsedDisplayTimeWhenScanStarted:
clockTimeWhenScanStarted
setClockTimeWhenScanStarted:
canPlayerServiceScan
setCanPlayerServiceScan:
isPlayerServicingScan
isStarting
setStarting:
hasIFrames
setHasIFrames:
isWaitingForPreroll
setWaitingForPreroll:
enableExtraLogging
setEnableExtraLogging:
canPlaySlowReverse
canPlaySlowForward
_userInterfaceStyle
fontMedium
subheadlineFont
bodyFont
subheadFont
caption1Font
headlineFont
title4Font
infoPanelListItemFont
infoPanelImageListItemFont
infoPanelBlurEffectStyle
infoPanelTextColor
infoPanelHighlightedTextColor
infoPanelHighlightedDescriptionTextColor
infoPanelBackdropColor
fontForTransportBarNeedleText
fontForTransportBarTimeLabels
imageSymbolConfigurationForTransportBar
_lightModeinfoPanelTextColor
infoPanelAudioPanelHeadingFont
_darkModeinfoPanelTextColor
infoMenuFont
infoMenuElementFocusViewColor
infoMenuElementSelectedBackgroundColor
infoMenuElementNormalColor
infoMenuElementFocusColor
infoMenuElementSelectedTextColor
infoMenuDividerLineColor
systemFontOfSize:weight:
fontWithDescriptor:size:
fontDescriptorByAddingAttributes:
fontDescriptor
_preferredFontForTextStyle:variant:
configurationWithPointSize:weight:
pointSize
mutableCopyWithZone:
classForCoder
anchorValue
anchorTimeStamp
initWithAnchorValue:anchorTimeStamp:rate:
initWithValueTiming:
allocWithZone:
setAnchorValue:
setAnchorTimeStamp:
_timeStamp
isEqualToValueTiming:
valueTimingWithAnchorValue:anchorTimeStamp:rate:
systemUptime
currentTimeStamp
valueForTimeStamp:
currentValue
timeStampForValue:
setValueTiming:
T@,&,N,V_serviceToken
_serviceToken
serviceToken
setServiceToken:
T@"PBSRestrictionService",R,N
TB,R,N,GisRequestingAccess,V_requestingAccess
presentingPasscodePrompt
TB,N,GisPresentingPasscodePrompt,V_presentingPasscodePrompt
profileRestrictingMovies
TB,N,GhasProfileRestrictingMovies,V_profileRestrictingMovies
profileRestrictingTVShows
TB,N,GhasProfileRestrictingTVShows,V_profileRestrictingTVShows
_dispatchQueueForRequests
_presentingPasscodePrompt
_profileRestrictingMovies
_profileRestrictingTVShows
_init
_restrictionValueFromPBSRestrictionValue:
_pbsRestrictedContentTypeFromDomain:
_presentDeniedByProfile:
shouldRevalidateMediaContentRating:validatedRating:validatedDate:
cancelRequest:
restrictionService
_updateProfileRestrictions
isPresentingPasscodePrompt
setPresentingPasscodePrompt:
hasProfileRestrictingMovies
setProfileRestrictingMovies:
hasProfileRestrictingTVShows
setProfileRestrictingTVShows:
validateRestrictionForContentType:withRating:allowInteraction:withCompletion:
cancelRestrictionAuthorization:
rootViewController
keyWindow
_setAttributedMessage:
T@"NSString",&,N,V_sectionTitle
_sectionTitle
sectionTitle
setSectionTitle:
Tq,R,N,V_status
T@"NSString",R,N,V_localizedDescription
_status
_localizedDescription
initWithStatus:localizedDescription:
headersForContentLength:compression:
bodyData
localizedDescription
messageWithVersion:headers:bodyData:
responseWithParts:
TB,R,N,GisPictureInPictureSupported
T@"UIImageSymbolConfiguration",R,N
imageSymbolConfiguration
startPictureInPictureButtonImageName
stopPictureInPictureButtonImageName
T@"<AVPictureInPictureContentSource>",W,N,V_source
Tq,N,V_status
routingVideoToHostedWindow
TB,N,GisRoutingVideoToHostedWindow,V_routingVideoToHostedWindow
T@"<AVPictureInPicturePlatformAdapterDelegate>",W,N,V_delegate
systemPictureInPicturePossible
TB,R,N,GisSystemPictureInPicturePossible,V_systemPictureInPicturePossible
TB,N,V_alwaysStartsAutomaticallyWhenEnteringBackground
TB,N,V_managesWiredSecondScreenPlayback
TB,R,N,V_canAnimatePictureInPictureTransition
T@"AVPictureInPictureViewController",R,N,V_pictureInPictureViewController
anyPictureInPictureActive
TB,R,N,GisAnyPictureInPictureActive,V_anyPictureInPictureActive
_systemPictureInPicturePossible
_alwaysStartsAutomaticallyWhenEnteringBackground
_managesWiredSecondScreenPlayback
_canAnimatePictureInPictureTransition
_anyPictureInPictureActive
_routingVideoToHostedWindow
_pictureInPictureViewController
stopPictureInPictureAndRestoreUserInterface:
updateLayoutDependentBehaviors
isSystemPictureInPicturePossible
alwaysStartsAutomaticallyWhenEnteringBackground
setAlwaysStartsAutomaticallyWhenEnteringBackground:
managesWiredSecondScreenPlayback
setManagesWiredSecondScreenPlayback:
canAnimatePictureInPictureTransition
isAnyPictureInPictureActive
setStatus:
setSource:
isRoutingVideoToHostedWindow
setRoutingVideoToHostedWindow:
TB,N,V_hasTouchAssociatedWithPress
T@"UIPress",R,N,V_recognizedPress
Td,N,V_minimumPressDuration
enabledInSubviews
TB,N,GisEnabledInSubviews,V_enabledInSubviews
_enabledInSubviews
_hasTouchAssociatedWithPress
_recognizedPress
_minimumPressDuration
setRecognizedPress:
_senderOfPressHasTouchSurface:withEvent:
_cancelLongPressAction
_scheduleLongPressAction
_triggerLongPressAction
pressesChanged:withEvent:
recognizedPress
minimumPressDuration
setMinimumPressDuration:
isEnabledInSubviews
setEnabledInSubviews:
hasTouchAssociatedWithPress
setHasTouchAssociatedWithPress:
inStandbyMode
_hidEvent
pressType:withTarget:action:
arrowsRecognizerWithTarget:action:
T@"<AVxCollectionViewControllerDelegate>",W,N,V_interactiveCollectionViewControllerDelegate
Tq,N,V_initialFocus
T@"NSMutableArray",R,N,V_leftItems
T@"NSMutableArray",R,N,V_centerItems
T@"NSMutableArray",R,N,V_rightItems
T@"NSIndexPath",R,N
_interactiveCollectionViewControllerDelegate
_initialFocus
_leftItems
_centerItems
_rightItems
controlItemForIndexPath:
indexPathForControlItem:
firstAvailableIndexPathInSection:
initialFocusIndexPath
visibleCellsLoadingIfNecessary
cellsLeadingToTrailing
collectionView:layout:controlItemForIndexPath:
interactiveCollectionViewControllerDelegate
setInteractiveCollectionViewControllerDelegate:
leftItems
centerItems
rightItems
visibleCells
setRestoresFocusAfterTransition:
T@"NSMutableArray",&,N,V_buttonItems
Td,N,V_totalWidth
Td,N,V_interitemSpace
Tq,N,V_alignment
_itemWidth
_totalWidth
_interitemSpace
_alignment
addItem:
setItemWidth:
offsetForItem:
totalWidth
setTotalWidth:
interitemSpace
setInteritemSpace:
alignment
setAlignment:
T@"NSArray",&,N,V_groups
_groups
initWithGroups:
groupForItemIndex:
itemForIndex:
originForItemAtIndex:
groups
setGroups:
groupsFromBarButtonItems:
T@"AVxGroupList",&,N,V_groups
T{CGSize=dd},N,V_itemSize
_isLayoutClean
_itemSize
flipsHorizontallyInOppositeLayoutDirection
_loadGroups
_availableLeft
_availableRight
_availableWidth
_visibleItemsForSection:
_calculateWidthForSection:maxWidthAllowed:
_buildLayoutForSection:minX:maxX:
itemSize
setItemSize:
Td,R,N,V_startTime
initWithStartTime:title:image:
startRedirectingVideoToLayer:forMode:
avkit_makePictureInPicturePlatformAdapterContentPlaceholderLayer
setPlaceholderContentLayerDuringPIPMode:
stopRedirectingVideoToLayer:
superlayer
convertRect:fromLayer:
_flatImageWithColor:
displayScale
isPIPModeEnabled
avDisplayManager
initWithFrame:title:arrow:
string
descender
imageForHintArrow:
setShadowPathIsBounds:
T@"NSMutableArray",&,N,V_selectedAppleTVRouteUIDs
T@"NSArray",R,C,N,V_routes
T@"NSSet",R,N
_fetchingRoutes
_routingController
_routes
_selectedAppleTVRouteUIDs
routingControllerAvailableRoutesDidChange:
routingController:didFailToPickRouteWithError:
routingController:pickedRoutesDidChange:
routingController:pickedRouteDidChange:
routingController:shouldHijackRoute:alertStyle:busyRouteName:presentingAppName:completion:
routingController:volumeControlAvailabilityDidChange:
routingControllerExternalScreenTypeDidChange:
routingControllerDidPauseFromActiveRouteChange:
supportsMultipleRouteSelection
selectedAppleTVRouteUIDs
selectedRoutes
pendingRoutes
selectRoute:withPassword:replacingSelection:
compareRoute:toRoute:
_updateAvailableRoutes
routes
setSelectedAppleTVRouteUIDs:
objectsAtIndexes:
indexesOfObjectsPassingTest:
isTVRoute
isDeviceRoute
isDisplayedAsPicked
fetchAvailableRoutesWithCompletionHandler:
isClusterRoute
localizedCaseInsensitiveCompare:
selectRoute:operation:completion:
supportsGrouping
pickedRoutes
pendingPickedRoutes
supportsMultipleSelection
setDiscoveryMode:
initWithDataSource:name:
setEndpointRoute:
systemRoute
legibleOptions
setLegibleMediaSelectionOptions:audioMediaSelectionOptions:assumeMediaOptionMayHaveChanged:
_optionsForGroup:
playableMediaSelectionOptionsFromArray:
autoupdatingCurrentLocale
languageCompare:currentLanguageCode:currentLanguageIdentifier:
hasAudioMediaSelectionOptions
isAC3Only
arrayWithArray:
hasLegibleMediaSelectionOptions
currentMediaSelection
selectedMediaOptionInMediaSelectionGroup:
mediaSelectionOptionsFromArray:withoutMediaCharacteristics:
mediaSelectionOptionsFromArray:withMediaCharacteristics:
avkit_persistentIdentifier
isEqualToSet:
isCC
isAuxiliary
isEasyReader
isSDH
isMain
selectMediaOptionAutomaticallyInMediaSelectionGroup:
_performAutomaticMediaSelectionForUserCaptionDisplayType:
mediaSelectionCriteriaCanBeAppliedAutomaticallyToMediaSelectionGroup:
hasMediaSelectionOptions
keyPathsForValuesAffectingCurrentAudioMediaSelectionOption
setCurrentAudioMediaSelectionOption:
keyPathsForValuesAffectingCurrentLegibleMediaSelectionOption
setCurrentLegibleMediaSelectionOption:
selectedMediaOptionMayHaveChanged
reloadOptions
reloadOptionsAndCurrentSelections
reloadAudioOptions
reloadLegibleOptions
keyPathsForValuesAffectingHasMediaSelectionOptions
keyPathsForValuesAffectingHasAudioMediaSelectionOptions
keyPathsForValuesAffectingHasLegibleMediaSelectionOptions
mediaSubTypes
audioMediaSelectionOptions
audioFormats
setAudioMediaSelectionOptions:
setLegibleMediaSelectionOptions:
selectedMediaOptionMayHaveChanged:
_selectedMediaOptionWithMediaCharacteristic:
_setMediaOption:mediaCharacteristic:
legibleMediaSelectionOptions
appliesMediaSelectionCriteriaAutomatically
_mediaSelectionCriteriaCanBeAppliedAutomaticallyToLegibleMediaSelectionGroup
_disableLegibleMediaSelectionOptions:
_enableAutoMediaSelection:
mediaSelectionGroupForMediaCharacteristic:
options
canonicalLanguageIdentifierFromString:
_ensureUserCaptionDisplayType:
currentLegibleMediaSelectionOption
currentAudioMediaSelectionOption
reloadOptionsAssumingMediaOptionsMayHaveChanged:
audioOptions
AC3Only
TB,R,GisAC3Only
main
TB,R,GisMain
TB,R,GisSDH
TB,R,GisCC
easyReader
TB,R,GisEasyReader
auxiliary
TB,R,GisAuxiliary
T@"NSNumber",R
@"NSString"
@"UIImage"
@"NSURL"
@"NSArray"
{?="value"q"timescale"i"flags"I"epoch"q}
@24@0:8^{_NSZone=}16
@56@0:8{?=qiIq}16@40@48
B24@0:8@16
Q16@0:8
v24@0:8d16
{?=qiIq}16@0:8
d16@0:8
@16@0:8
v24@0:8@16
v16@0:8
@"NSInputStream"
@"NSOutputStream"
v32@0:8@"NSStream"16Q24
v32@0:8@16Q24
#16@0:8
@24@0:8:16
@32@0:8:16@24
@40@0:8:16@24@32
B16@0:8
B24@0:8#16
B24@0:8@"Protocol"16
B24@0:8:16
Vv16@0:8
^{_NSZone=}16@0:8
@"NSString"16@0:8
@32@0:8@16@24
@24@0:8Q16
q24@0:8@16
@"NSMutableArray"
@"NSData"
@"<AVAirTransportTransformationProtocol>"
@"<AVAirTransportDelegate>"
v24@0:8@?16
v32@0:8@16@?24
@"AVPictureInPictureIndicatorSublayer"
{CGRect="origin"{CGPoint="x"d"y"d}"size"{CGSize="width"d"height"d}}
@68@0:8d16^{CGImage=}24B32{CGRect={CGPoint=dd}{CGSize=dd}}36
{CGRect={CGPoint=dd}{CGSize=dd}}16@0:8
@"NSAttributedString"
{CGSize="width"d"height"d}
{NSEdgeInsets="top"d"left"d"bottom"d"right"d}
@"CATextLayer"
@"CALayer"
@36@0:8d16^{CGImage=}24B32
{CGRect={CGPoint=dd}{CGSize=dd}}48@0:8{CGRect={CGPoint=dd}{CGSize=dd}}16
@"UILabel"
@"AVLoadingIndicatorView"
v20@0:8B16
@24@0:8#16
@24@0:8@16
@"NSData"24@0:8@"<AVMessageTransformerProtocol>"16
@"AVAirMessageParts<AVAirTransportReverseTransformationResultProtocol>"24@0:8@"NSData"16
d24@0:8@"<UIViewControllerContextTransitioning>"16
v24@0:8@"<UIViewControllerContextTransitioning>"16
@"<UIViewImplicitlyAnimating>"24@0:8@"<UIViewControllerContextTransitioning>"16
d24@0:8@16
@"UISpringTimingParameters"
@48@0:8@16@24@32@?40
@"UIView<AVFocusProxyViewDelegateProtocol>"
@48@0:8{CGRect={CGPoint=dd}{CGSize=dd}}16
v32@0:8@16@24
{?=qiIq}48@0:8q16{?=qiIq}24
B20@0:8f16
@"CAAnimationGroup"
@"UIColor"
@32@0:8{CGSize=dd}16
{CGSize=dd}16@0:8
@24@0:8d16
^{CGImage=}40@0:8{CGSize=dd}16@32
@48@0:8@16q24@32q40
q16@0:8
@"NSUserDefaults"
@"NSObservation"
@"<NSObject>"
@"AVPlayer"
@"<AVInterstitialControllerDelegateManager>"
@"AVTimeRangeCollection"
@"AVObservationController"
@"AVTimeRange"
d24@0:8d16
d32@0:8d16d24
@?16@0:8
{os_unfair_lock_s="_os_unfair_lock_opaque"I}
@"AVAsset"
@"<AVFrameSetDelegate>"
@"NSIndexSet"
@"NSMutableIndexSet"
@"NSMutableDictionary"
@"AVAssetImageGenerator"
@48@0:8@16d24{CGSize=dd}32
@56@0:8@16@24d32{CGSize=dd}40
@56@0:8@?16@24d32{CGSize=dd}40
v48@0:8@16@24@32^v40
B24@0:8q16
v24@0:8q16
v32@0:8{_NSRange=QQ}16
q24@0:8d16
d24@0:8q16
B24@0:8d16
@20@0:8B16
v40@0:8@16q24d32
v24@0:8Q16
{_NSRange=QQ}24@0:8q16
@24@0:8q16
q24@0:8q16
v40@0:8{?=qiIq}16
@40@0:8@16d24q32
@"AVFrameSet"
@"AVFrame"
v24@0:8@"NSArray"16
@?<v@?d>16@0:8
v24@0:8@?<v@?d>16
@"AVPlayerItem"
@40@0:8@16{CGSize=dd}24
@"UIView"
@"UIVisualEffectView"
@"UIImageView"
@"NSLayoutConstraint"
@"UIDynamicAnimator"
@"UIDynamicItemBehavior"
@"UIAttachmentBehavior"
@"UIPushBehavior"
{?="position"d"accumulatedDistance"d}
@"AVWheelScrubberView"
@"UIViewPropertyAnimator"
@"_AVPlayerLayerThumbnailView"
@"AVGradientView"
@"AVAnimatingLabel"
@"AVSpinnerView"
@"_AVBlockedView"
@"_UIVisualEffectBackdropView"
@"<AVNowPlayingFrameSource>"
@"<AVThumbLayerController>"
@"NSDate"
@"AVTransportBarMask"
@"AVDurationTimeFormatter"
@"NSDateFormatter"
v28@0:8B16@20
{?=dd}16@0:8
v24@0:8B16B20
v36@0:8d16d24B32
v32@0:8d16d24
v28@0:8d16B24
v32@0:8d16B24B28
v32@0:8{?=dd}16
{CGAffineTransform=dddddd}48@0:8{?=dd}16{?=dd}32
v52@0:8d16d24B32{?=dd}36
v40@0:8q16{?=dd}24
Q24@0:8d16
@24@0:8^B16
v48@0:8{CGRect={CGPoint=dd}{CGSize=dd}}16
@"AVInfoPanelDescriptionViewController"
@"AVInfoPanelNavigationCollectionViewController"
@28@0:8Q16B24
@"AVPlayerViewController"
@"AVMusicAppBehavior"
@"NSNumber"
@"AVPlayerController"
@"AVMusicAppBehaviorPlaybackState"
@"AVPlayerViewController"16@0:8
v40@0:8@"AVPlayerViewController"16d24@?<v@?Bd>32
v40@0:8@"AVPlayerViewController"16@"NSDate"24@?<v@?B@"NSDate">32
v32@0:8@"AVPlayerViewController"16@?<v@?B>24
v40@0:8@"AVPlayerViewController"16d24@?<v@?B>32
v24@0:8@"AVPlayerViewController"16
v40@0:8@16d24@?32
v40@0:8@16@24@?32
v40@0:8{CGSize=dd}16@"<UIViewControllerTransitionCoordinator>"32
v24@0:8@"UIViewController"16
@"UIView<AVPlaybackContentContainer>"56@0:8{CGRect={CGPoint=dd}{CGSize=dd}}16@"AVPlaybackContentContainerView"48
v40@0:8{CGSize=dd}16@32
@56@0:8{CGRect={CGPoint=dd}{CGSize=dd}}16@48
v24@0:8@"<AVBehavior>"16
@32@0:8d16d24
@64@0:8{?={?=qiIq}{?=qiIq}}16
v32@0:8d16@24
v32@0:8@16d24
{?={?=qiIq}{?=qiIq}}16@0:8
@28@0:8d16B24
@24@0:8@?16
@"AVTransportBarViewController"
@"UIViewController"
@"AVControlItem"
@56@0:8d16d24Q32@40@?48
@32@0:8d16@24
v24@0:8@"NSString"16
v24@0:8@"NSCoder"16
@24@0:8@"NSCoder"16
@32@0:8@16@?24
@"AVNavigationMarkersGroup"
@"AVKeyValueObserverCollection"
@"AVDelegateManager"
@"AVInterstitialController"
@"_AVChapterInfo"
B48@0:8@16^{?=qiIq}24^{?=qiIq}32^{?=qiIq}40
v40@0:8d16q24@?32
v40@0:8@16q24@?32
{?=qiIq}32@0:8d16d24
v48@0:8d16q24@?32@?40
v36@0:8d16q24B32
v60@0:8d16d24q32B40@?44@?52
v36@0:8@16q24B32
v60@0:8@16@24q32B40@?44@?52
@"_AVSimplePlayerLayerView"
@"AVInterstitialTimeRange"
{?="start"{?="value"q"timescale"i"flags"I"epoch"q}"duration"{?="value"q"timescale"i"flags"I"epoch"q}}
@"AVInfoMenuController"
@"AVInfoPanelMetadataViewController"
@"AVInfoPanelSubtitlesViewController"
@"AVInfoPanelAudioViewController"
@"<AVInfoPanelViewControllerDelegate>"
v32@0:8@"AVInfoMenuController"16@"UIViewController"24
B32@0:8@"UITabBarController"16@"UIViewController"24
v32@0:8@"UITabBarController"16@"UIViewController"24
v32@0:8@"UITabBarController"16@"NSArray"24
v36@0:8@"UITabBarController"16@"NSArray"24B32
Q24@0:8@"UITabBarController"16
q24@0:8@"UITabBarController"16
@"<UIViewControllerInteractiveTransitioning>"32@0:8@"UITabBarController"16@"<UIViewControllerAnimatedTransitioning>"24
@"<UIViewControllerAnimatedTransitioning>"40@0:8@"UITabBarController"16@"UIViewController"24@"UIViewController"32
B32@0:8@16@24
v36@0:8@16@24B32
Q24@0:8@16
@40@0:8@16@24@32
@"AVPermissiveSwipeGestureRecognizer"
@"<AVChannelInterstitialContainerDelegate>"
v28@0:8B16@?20
{CGSize=dd}24@0:8@16
@"<AVInfoPanelAudioRouteSelectionDelegate>"
@"NSDiffableDataSourceSnapshot"
@"UICollectionViewDiffableDataSource"
{CGSize=dd}40@0:8@"UICollectionView"16@"UICollectionViewLayout"24@"NSIndexPath"32
{UIEdgeInsets=dddd}40@0:8@"UICollectionView"16@"UICollectionViewLayout"24q32
d40@0:8@"UICollectionView"16@"UICollectionViewLayout"24q32
{CGSize=dd}40@0:8@"UICollectionView"16@"UICollectionViewLayout"24q32
{CGSize=dd}40@0:8@16@24@32
{UIEdgeInsets=dddd}40@0:8@16@24q32
d40@0:8@16@24q32
{CGSize=dd}40@0:8@16@24q32
B32@0:8@"UICollectionView"16@"NSIndexPath"24
v32@0:8@"UICollectionView"16@"NSIndexPath"24
v40@0:8@"UICollectionView"16@"UICollectionViewCell"24@"NSIndexPath"32
v48@0:8@"UICollectionView"16@"UICollectionReusableView"24@"NSString"32@"NSIndexPath"40
B48@0:8@"UICollectionView"16:24@"NSIndexPath"32@40
v48@0:8@"UICollectionView"16:24@"NSIndexPath"32@40
@"UICollectionViewTransitionLayout"40@0:8@"UICollectionView"16@"UICollectionViewLayout"24@"UICollectionViewLayout"32
B32@0:8@"UICollectionView"16@"UICollectionViewFocusUpdateContext"24
v40@0:8@"UICollectionView"16@"UICollectionViewFocusUpdateContext"24@"UIFocusAnimationCoordinator"32
@"NSIndexPath"24@0:8@"UICollectionView"16
@"NSIndexPath"40@0:8@"UICollectionView"16@"NSIndexPath"24@"NSIndexPath"32
{CGPoint=dd}40@0:8@"UICollectionView"16{CGPoint=dd}24
B40@0:8@"UICollectionView"16@"NSIndexPath"24@"<UISpringLoadedInteractionContext>"32
v24@0:8@"UICollectionView"16
@"UIContextMenuConfiguration"48@0:8@"UICollectionView"16@"NSIndexPath"24{CGPoint=dd}32
@"UITargetedPreview"32@0:8@"UICollectionView"16@"UIContextMenuConfiguration"24
v40@0:8@"UICollectionView"16@"UIContextMenuConfiguration"24@"<UIContextMenuInteractionCommitAnimating>"32
v40@0:8@"UICollectionView"16@"UIContextMenuConfiguration"24@"<UIContextMenuInteractionAnimating>"32
v40@0:8@16@24@32
v48@0:8@16@24@32@40
B48@0:8@16:24@32@40
v48@0:8@16:24@32@40
{CGPoint=dd}40@0:8@16{CGPoint=dd}24
B40@0:8@16@24@32
@48@0:8@16@24{CGPoint=dd}32
v24@0:8@"UIScrollView"16
v48@0:8@"UIScrollView"16{CGPoint=dd}24N^{CGPoint=dd}40
v28@0:8@"UIScrollView"16B24
@"UIView"24@0:8@"UIScrollView"16
v32@0:8@"UIScrollView"16@"UIView"24
v40@0:8@"UIScrollView"16@"UIView"24d32
B24@0:8@"UIScrollView"16
v48@0:8@16{CGPoint=dd}24N^{CGPoint=dd}40
v28@0:8@16B24
v40@0:8@16@24d32
@"NSMapTable"
v32@0:8@"<PBSDisplayState>"16q24
v32@0:8@16q24
B32@0:8:16@24
f16@0:8
v20@0:8f16
@"<AVImageProxyProtocol>"
@"UIImage"16@0:8
v32@0:8{CGSize=dd}16
@"UITapGestureRecognizer"
@"AVPlayerLayer"
@"UIMotionEffectGroup"
v32@0:8@"UIFocusUpdateContext"16@"UIFocusAnimationCoordinator"24
v40@0:8@"AVAirMessageNotificationCenter"16@"AVAirMessage"24@?<v@?q@"NSDictionary">32
@"NSString"24@0:8@"AVAirMessageNotificationCenter"16
@"AVContentProposal"
@"NSValue"
@"AVMediaContentRating"
@"AVMusicAppBehaviorContext"
@"<_AVFocusContainerDelegate>"
@"UIEvent"
@"AVNowPlayingPlaybackControlsViewController"
@"AVMediaSelectionOption"
@"MPAVRoute"
@48@0:8@16@24@32@40
v40@0:8@16Q24@32
@"NSObject<OS_dispatch_queue>"
@"UIButton"
@"AVOutputContext"
@"AVMicaPackage"
@"<AVRoutePickerViewDelegate>"
@"NSObject<OS_dispatch_source>"
@44@0:8d16@24@?32B40
@"CAStateController"
v32@0:8@"CAStateController"16@"CALayer"24
v36@0:8@"CAStateController"16@"CAStateTransition"24f32
v36@0:8@"CAStateController"16@"CAStateTransition"24B32
v36@0:8@16@24f32
@32@0:8@"CAMLParser"16@"NSURL"24
v40@0:8@"CAMLParser"16@24@"NSURL"32
#32@0:8@"CAMLParser"16@"NSString"24
v44@0:8@"CAMLParser"16@"NSString"24@"NSURL"32I40
@44@0:8@"CAMLParser"16@"NSString"24@"NSURL"32I40
v48@0:8@"CAMLParser"16r*24[1{__va_list_tag=II^v^v}]32Q40
#32@0:8@16@24
v44@0:8@16@24@32I40
@44@0:8@16@24@32I40
v48@0:8@16r*24[1{__va_list_tag=II^v^v}]32Q40
@32@0:8@16q24
v32@0:8@16^{CGColor=}24
v32@0:8^{CGColor=}16@24
@"NSDictionary"16@0:8
@24@0:8@"NSDictionary"16
@"NSArray"24@0:8@"NSArray"16
@"AVInfoPanelContentViewController"
@"UIFocusGuide"
@"NSTimer"
@"NSISO8601DateFormatter"
v32@0:8@?<v@?>16@?<v@?B>24
v32@0:8@?16@?24
{CGPoint="x"d"y"d}
{CGPoint=dd}16@0:8
v32@0:8{CGPoint=dd}16
@"AVxCollectionViewController"
@"AVNonDigitizerTapRecognizer"
v24@0:8@"AVControlItem"16
{CGSize=dd}40@0:8{CGSize=dd}16f32f36
@"UIStackView"
@"AVDarkModeCompatibleLabel"
@"AVTomatoRatingView"
@"AVInfoPanelExpandingSummaryView"
@"NSURLSessionDataTask"
@"AVNowPlayingTransportBar"
v40@0:8q16@?24@?32
v28@0:8q16B24
@"AVInfoPanelAudioCollectionViewController"
@"AVInfoPanelAudioRoutesCollectionViewController"
@"<AVInfoPanelLanguageDelegate>"
@"AVSpeakerManager"
@"NSObject<PBSMediaRemoteServiceInterface>"
v28@0:8@"AVInfoPanelMediaOption"16B24
v32@0:8@"AVInfoPanelMediaOptionCollectionViewController"16@"AVInfoPanelMediaOption"24
{CGSize=dd}24@0:8d16
@"NSPointerArray"
@32@0:8@16:24
v40@0:8:16@24@32
v32@0:8@"NSSet"16@"UIEvent"24
@"_AVDetachedSwipeGestureRecognizer"
@"_AVPermissiveSwipeGestureDelegate"
B32@0:8{CGPoint=dd}16
@"UIGestureRecognizer"
B24@0:8@"UIGestureRecognizer"16
B32@0:8@"UIGestureRecognizer"16@"UIGestureRecognizer"24
B32@0:8@"UIGestureRecognizer"16@"UITouch"24
B32@0:8@"UIGestureRecognizer"16@"UIPress"24
B32@0:8@"UIGestureRecognizer"16@"UIEvent"24
:16@0:8
@"_UIFloatingContentView"
v36@0:8B16@20@28
@"NSDateComponentsFormatter"
{?={?=qiIq}{?=qiIq}}24@0:8Q16
d24@0:8Q16
@32@0:8Q16@24
B24@0:8Q16
@"NSDictionary"
@56@0:8@16@24q32@40@48
@64@0:8@16@24@32@40@48@56
v32@0:8#16@24
@"MRPlayerPath"
@"AVMediaRemoteManager"
@"AVInternalPlaybackOptions"
@"AVxCustomOverlayHostViewController"
@"AVContentRestrictionsViewController"
@"AVContentProposalViewController"
@"AVGestureRecognizerDelegate"
@"AVDigitizerTouchGestureRecognizer"
@"AVScrubbingPanGestureRecognizer"
@"_UIRotaryGestureRecognizer"
@"UIDigitizerTapGestureRecognizer"
@"UIDigitizerLongPressGestureRecognizer"
@"AVPlayerViewControllerTransition"
@"UILayoutGuide"
@"UIAlertController"
@"AVGlobalUserSettings"
@"AVPictureInPictureController"
@"AVBehaviorStorage"
@"AVPlayerLayerView"
v24@0:8@"_AVFocusContainerView"16
B24@0:8@"_AVFocusContainerView"16
v32@0:8@"_AVFocusContainerView"16@"UIWindow"24
@"<UIViewControllerAnimatedTransitioning>"40@0:8@"UIViewController"16@"UIViewController"24@"UIViewController"32
@"<UIViewControllerAnimatedTransitioning>"24@0:8@"UIViewController"16
@"<UIViewControllerInteractiveTransitioning>"24@0:8@"<UIViewControllerAnimatedTransitioning>"16
@"UIPresentationController"40@0:8@"UIViewController"16@"UIViewController"24@"UIViewController"32
@"AVPlayerController"24@0:8@"AVPlayerController"16
@"AVPictureInPictureViewController"16@0:8
v24@0:8@"AVPictureInPictureViewController"16
v32@0:8@"AVPictureInPictureViewController"16@"AVPlayerController"24
@"UIWindow"16@0:8
v24@0:8@"AVPictureInPictureController"16
v32@0:8@"AVPictureInPictureController"16@"NSError"24
v32@0:8@"AVPictureInPictureController"16@?<v@?B>24
v32@0:8@"PBSPictureInPictureController"16Q24
v36@0:8@16B24@?28
v64@0:8{?=qiIq}16{?=qiIq}40
v40@0:8@16B24B28@?32
@"AVInfoMenuTransitioningAnimation"
@"<AVInfoMenuDelegate>"
@"NSIndexPath"
@"UICollectionView"
q32@0:8@"UICollectionView"16q24
@"UICollectionViewCell"32@0:8@"UICollectionView"16@"NSIndexPath"24
q24@0:8@"UICollectionView"16
@"UICollectionReusableView"40@0:8@"UICollectionView"16@"NSString"24@"NSIndexPath"32
v40@0:8@"UICollectionView"16@"NSIndexPath"24@"NSIndexPath"32
@"NSArray"24@0:8@"UICollectionView"16
@"NSIndexPath"40@0:8@"UICollectionView"16@"NSString"24q32
@40@0:8@16@24q32
q32@0:8@16q24
v40@0:8:16@24@?32
v24@0:8@"<AVBehaviorContext>"16
@"UITextView"
v40@0:8@"_UIFloatingContentView"16Q24Q32
v32@0:8@"_UIFloatingContentView"16Q24
v40@0:8@16Q24Q32
@32@0:8@16d24
@"<AVPictureInPictureControllerDelegate>"
@"AVPictureInPicturePlatformAdapter"
@"<AVPictureInPictureContentSource>"
@"<AVPictureInPicturePrerollDelegate>"
@"AVPictureInPictureControllerContentSource"
v32@0:8@"AVPictureInPicturePlatformAdapter"16@"NSError"24
v32@0:8@"AVPictureInPicturePlatformAdapter"16@?<v@?B>24
v24@0:8@"AVPictureInPicturePlatformAdapter"16
v28@0:8@"AVPictureInPicturePlatformAdapter"16B24
v32@0:8@"AVPictureInPicturePlatformAdapter"16q24
v40@0:8@"AVPictureInPicturePlatformAdapter"16q24q32
v40@0:8@16q24q32
@"<AVInfoPanelMediaOptionSelectionDelegate>"
@"AVValueTiming"
@"BSSimpleAssertion"
@"AVAssetTrack"
^v16@0:8
v24@0:8^v16
v40@0:8d16d24d32
v88@0:8{?=qiIq}16{?=qiIq}40{?=qiIq}64
@"UIWindow"
@"UIWindowScene"
@"<AVAirMessageNotificationCenterDelegate>"
@"AVBonjourService"
@"NSMutableSet"
v32@0:8@"AVAirTransport"16@"<AVAirTransportReverseTransformationResultProtocol>"24
v24@0:8@"AVAirTransport"16
v32@0:8@"AVBonjourService"16@"AVAirTransport"24
@"NSDictionary"24@0:8@"AVBonjourService"16
@"AVNowPlayingDimmingView"
@"AVInfoPanelViewController"
@"AVNowPlayingInfoHintView"
@"AVFocusTensionGestureRecognizer"
@"AVChannelInterstitialContainer"
@"AVSlidewaysTransition"
@"CADisplayLink"
{?="_isTouchRecent"B"wasVisibleAtStart"B"_positionAtLastMove"q}
@"AVScrubbingAnalytics"
@"<AVPlayerViewControllerDelegate>"
@"AVxOverlayViewController"
@"UIPanGestureRecognizer"
@"NSUUID"
@"AVStandardScanningDelegate"
v32@0:8@"UIViewController"16@"UIViewController"24
v32@0:8@"UIViewController"16@"AVInfoPanelMediaOption"24
Q24@0:8@"UIViewController"16
@"<AVImageProxyProtocol>"32@0:8@"UIViewController"16Q24
@"NSString"32@0:8@"UIViewController"16Q24
v32@0:8@"UIViewController"16Q24
@32@0:8@16Q24
v24@0:8@"AVFrameSet"16
Q24@0:8@"AVNowPlayingTransportBar"16
d32@0:8@"AVNowPlayingTransportBar"16d24
v32@0:8@"AVNowPlayingTransportBar"16Q24
d32@0:8@16d24
v24@0:8@"AVChannelInterstitialContainer"16
v28@0:8B16d20
v32@0:8B16B20@?24
B28@0:8B16@?20
v36@0:8q16q24B32
Q24@0:8Q16
q24@0:8Q16
@32@0:8{_NSRange=QQ}16
Q32@0:8Q16@?24
{CGRect={CGPoint=dd}{CGSize=dd}}24@0:8@16
@"NSSet"
@"AVInfoPanelSubtitleCollectionViewController"
@"<AVInfoPanelSubtitlesDelegate>"
@"NSFormatter"
{UIEdgeInsets="top"d"left"d"bottom"d"right"d}
v48@0:8{UIEdgeInsets=dddd}16
{UIEdgeInsets=dddd}16@0:8
@"NSNetService"
@"<AVBonjourServiceDelegate>"
v24@0:8@"NSNetService"16
v32@0:8@"NSNetService"16@"NSDictionary"24
v32@0:8@"NSNetService"16@"NSData"24
v40@0:8@"NSNetService"16@"NSInputStream"24@"NSOutputStream"32
@24@0:8^v16
@24@0:8^^v16
@"AVMediaPlayerDelegate"
^v32@0:8^v16Q24
B32@0:8^v16Q24
v56@0:8^v16Q24{CGSize=dd}32@?48
v40@0:8{CGSize=dd}16@?32
v48@0:8@16{CGSize=dd}24@?40
^v24@0:8@16
@44@0:8@16q24@32B40
@"<AVInfoPanelNavigationDelegate>"
@"<AVPlayerViewControllerDelegate><AVPlayerViewControllerDelegatePrivate>"
@"<AVPlayerViewControllerPlaybackDelegate><NSObject>"
@"<AVScanningDelegate>"
{?=qiIq}64@0:8{?=qiIq}16{?=qiIq}40
q56@0:8{?=qiIq}16d40@?48
v32@0:8d16@?24
v40@0:8@16Q24@?32
v40@0:8@16Q24:32
@"UIActivityIndicatorView"
@"AVInfoPanelMediaOption"
@"AVFocusableScrollView"
@28@0:8I16@20
@36@0:8I16@20@28
I16@0:8
@28@0:8B16@20
@"MPRemoteCommandCenter"
@"<AVTimeControlling>"
@"AVTimer"
@"<AVContentProposalViewControllerDelegate>"
@"AVFocusProxyView"
v36@0:8q16B24@?28
@"AVPictureInPicturePlayerLayerView"
@"<AVPictureInPictureViewControllerDelegate>"
@"AVPictureInPictureViewController"
@48@0:8@16@24B32B36@?40
@44@0:8@16@24B32@?36
@40@0:8@16@24@?32
v48@0:8@16@24@32@?40
@60@0:8@16@24@32B40B44B48@?52
v56@0:8@16@24@32@40^v48
q64@0:8@"AVPlayerViewController"16{?=qiIq}24d48@?<v@?{?=qiIq}@"UIImage">56
B32@0:8@"AVPlayerViewController"16@"AVPlayerItem"24
q64@0:8@16{?=qiIq}24d48@?56
@40@0:8d16d24d32
Q24@0:8q16
@36@0:8@16B24@?28
@"NSData"16@0:8
@32@0:8q16@24
@"<AVPictureInPicturePlatformAdapterDelegate>"
@"UIPress"
@40@0:8q16@24:32
@"<AVxCollectionViewControllerDelegate>"
{CGPoint=dd}24@0:8Q16
@"AVxGroupList"
d32@0:8q16d24
v40@0:8q16d24d32
@40@0:8d16@24@32
@64@0:8{CGRect={CGPoint=dd}{CGSize=dd}}16@48q56
@"MPAVRoutingController"
v24@0:8@"MPAVRoutingController"16
v32@0:8@"MPAVRoutingController"16@"NSError"24
v32@0:8@"MPAVRoutingController"16@"NSArray"24
v32@0:8@"MPAVRoutingController"16@"MPAVRoute"24
v64@0:8@"MPAVRoutingController"16@"MPAVRoute"24q32@"NSString"40@"NSString"48@?<v@?B>56
v28@0:8@"MPAVRoutingController"16B24
v64@0:8@16@24q32@40@48@?56
q32@0:8@16@24
q40@0:8@16@24@32
