dsid
-[ACRemoteCommandHandler handleCommand:forAccount:options:completion:]
v20@?0B8@"NSError"12
-[ACRemoteCommandHandler _promptUserForAccountCredential:withOptions:completion:]
-[ACRemoteCommandHandler _promptUserForAccountCredential:withOptions:completion:]_block_invoke
v24@?0q8@"NSError"16
-[ACRemoteCommandHandler _fetchAccountsWithCompletion:]
ICLOUD_STORAGE
Localizable
Credential data is currently unavailable for Account 
v8@?0
Credential data is currently unavailable.
v24@?0@"NSString"8@"NSArray"16
apple
v32@?0@"NSString"8Q16^B24
Unable to fetch credential from keychain (%ld)
com.apple.linkedin
mcPayloadUUID
Unable to fetch existing credential due to error %@
Unable to store credential due to error %@
Unable to remove credential due to error %@
%@%@%@
/BuildRoot/Library/Caches/com.apple.xbs/Sources/Accounts_Sim/Accounts-748.5/AccountsDaemon/ACDKeychainManager.m
<Unknown File>
*** _fallbackToUnsyncedOAuthTokens: bad format
servicename
username
description
accountSync
Account Sync Unable to store credential due to error %@
Account Sync Unable to add credential due to lacking username and hostname %@, %d
hostname
Account Sync - Unable to save nil username item %@
Migrated
dataclassActions
%@%@
%@@%@
Account Sync Unable to remove credential due to lacking username and hostname %@, %d
Account Sync Unable to store migrated credential due to error %@
%@-%@
iOSVersion
server
T@"ACDServer",W,N
/BuildRoot/Library/Caches/com.apple.xbs/Sources/Accounts_Sim/Accounts-748.5/AccountsDaemon/ACDDatabaseInitializer.m
Invalid parameter not satisfying: %@
databaseConnection
Account
AccountType
Dataclass
AccessOptionsKey
Twitter
AppleID
appleid-tokens
FaceTime
Messages
Game Center
iTunes Store
Facebook
Sina Weibo
com.apple.weibo
CalDAV
CardDAV
Flickr
Vimeo
LinkedIn
Tudou
Youku
Yelp
iCloud
com.apple.account.Liverpool
Liverpool
liverpool-tokens
Tencent Weibo
ACFacebookPermissionGroupKey
ACFacebookAppVersionKey
SMTP
Gmail
Yahoo
ACLinkedInAppIdKey
ACLinkedInPermissionsKey
SubscribedCalendar
BookmarkDAV
Exchange
IMAPNotes
LDAP
Hotmail
IMAP
IMAPMail
Device Locator
OS X Server
macOS Server
Holiday Calendar
Find My Friends
Apple ID
com.apple.accountsd
com.apple.Dataclass.CloudDB
com.apple.Dataclass.ShareService
CloudKit
Jabber
Yahoo IM
OSX Server
IDMS
Single Sign-on
On My Device
Facebook Legacy
CalDAV Legacy
CardDAV Legacy
iTunes Store (Sandbox)
LinkedIn Legacy
VerifiedBackup
UnverifiedBackup
/BuildRoot/Library/Caches/com.apple.xbs/Sources/Accounts_Sim/Accounts-748.5/AccountsDaemon/ACDDatabase.m
databaseURL
Attempt to initialize database with non-file URL!
TriggeringException
backupURL
unverifiedBackupURL
integrity_check
<%@: %p { %@ }>
error
Fatal database error encountered: %@
hash
TQ,R
superclass
T#,R
T@"NSString",R,C
debugDescription
T@"NSURL",R,N,V_databaseURL
momd
IdleTimeout
com.apple.accounts
sharedPreferences
T@"ACDPreferences",R
%@ %@
timestamp
accountType
avoidUI
shouldForce
clientBundleID
hasTimestamp
TB,N
TQ,N,V_timestamp
hasAccountType
TB,R,N
T@"NSString",&,N,V_accountType
hasAvoidUI
TB,N,V_avoidUI
hasShouldForce
TB,N,V_shouldForce
hasClientBundleID
T@"NSString",&,N,V_clientBundleID
changeType
Ti,R,N,V_changeType
account
T@"ACAccount",R,N,V_account
oldAccount
T@"ACAccount",R,N,V_oldAccount
-[ACDAccountStore init]
accountType.identifier == %@
-[ACDAccountStore accountsOnPairedDeviceWithAccountType:handler:]
v24@?0@"NSArray"8@"NSError"16
-[ACDAccountStore _removeAccountNoSave:withDataclassActions:withError:]
AccountSyncDelete
Failed to remove account with identifier %@ because it does not exist
-[ACDAccountStore _saveWithError:]
v32@?0@"NSString"8@"ACDataclassAction"16^B24
-[ACDAccountStore addAccountNoSave:error:]
-[ACDAccountStore _addAccountNoSave:withDataclassActions:error:]
identifier == %@
An account with that identifier already exists
com.apple.accounts.accountsd
exception_name
exception_reason
@"NSError"8@?0
-[ACDAccountStore updateAccountNoSave:error:]
-[ACDAccountStore _updateAccountNoSave:withDataclassActions:error:]
owningBundleID
dataclassProperties
@"NSError"16@?0@"ACAccount"8
B16@?0^@8
parentIdentifier
accountProperties
v32@?0@"NSMutableSet"8@"NSString"16@"NSString"24
/BuildRoot/Library/Caches/com.apple.xbs/Sources/Accounts_Sim/Accounts-748.5/AccountsDaemon/ACDAccountStore.m
Failed to read provisionedDataclasses from database
v32@?0@"NSString"8@"NSString"16^B24
Failed to read enabledDataclasses from database
credential
%@ Requested By: %@
-[ACDAccountStore _handleAccountMod:withDataclassActions:withError:]
accountIdentifier == %@ AND serviceName == %@
date
v24@?0@"ACAccountCredential"8@"NSError"16
Client does not have access to credentials
A credential item with the account identifier: %@ and service name: %@ already exists
accountType == %@
accountType == %@ AND active == %@
accountType.identifier = %@ AND parentAccount.identifier = %@
parentAccount.identifier = %@
name
accountType.identifier IN %@
%@ is not a valid account type.
An account type with the identifier: %@ already exists
Creating %@ accounts is not supported.
v24@?0@"NSURL"8@"NSError"16
The account being saved is missing a valid account type
v24@?0@"ACAccount"8@"NSError"16
-[ACDAccountStore _completeSave:dataclassActions:completion:]
The account with object ID %@ is unknown to our DB, so it cannot be updated. It has probably already been deleted.
The account type specified could not be found.
website_accounts
plist
website_domains
accountType.identifier=%@
@"NSArray"32@?0@"NSString"8@"NSString"16^@24
accountDescription == %@
GetTetheredSyncingDisabledForDataType failed!
accountType.identifier matches 'com.apple.account.kerberos.sso.*'
domains
com.apple.accounts.clienttoken
com.apple.account.clientToken
client_token
visible == YES && parentAccount == nil && accountType.identifier IN %@
-[ACDAccountStore notifyRemoteDevicesOfModifiedAccount:withChangeType:completion:]
v28@?0B8@"NSObject<NSCoding>"12@"NSError"20
-[ACDAccountStore saveAccount:toPairedDeviceWithOptions:completion:]
-[ACDAccountStore removeAccountsFromPairedDeviceWithCompletion:]
-[ACDAccountStore triggerKeychainMigrationIfNecessary:]
-[ACDAccountStore reportTelemetryForLandmarkEvent:]
T@"ACDDatabaseConnection",R,N,V_databaseConnection
authenticationPluginManager
T@"ACDAuthenticationPluginManager",&,N,V_authenticationPluginManager
accessPluginManager
T@"ACDAccessPluginManager",&,N,V_accessPluginManager
dataclassOwnersManager
T@"ACDDataclassOwnersManager",&,N,V_dataclassOwnersManager
authenticationDialogManager
T@"ACDAuthenticationDialogManager",&,N,V_authenticationDialogManager
remoteDeviceProxy
T@"ACRemoteDeviceProxy",&,N,V_remoteDeviceProxy
accountNotifier
T@"ACDAccountNotifier",&,N,V_accountNotifier
databaseBackupActivity
T@"ACDDatabaseBackupActivity",&,N,V_databaseBackupActivity
notificationsEnabled
TB,N,V_notificationsEnabled
migrationInProgress
TB,N,GisMigrationInProgress,V_migrationInProgress
delegate
T@"<ACDAccountStoreDelegate>",W,N,V_delegate
client
T@"ACDClient",W,N,V_client
authorizationManager
T@"ACDClientAuthorizationManager",R,N,V_authorizationManager
<failed>
@"NSObject"8@?0
v24@?0@"NSString"8^B16
dirtyProperties
dirtyAccountProperties
added
modified
deleted
failed
unknown
Notification
@"<ACDPluginEntryProtocol>"32@?0@"NSBundle"8Q16^B24
com.apple.accounts.notifierworkq
/BuildRoot/Library/Caches/com.apple.xbs/Sources/Accounts_Sim/Accounts-748.5/AccountsDaemon/Plugin Management/ACDAccountNotifier.m
store
Plugin denied account save but provided no error: %@
A %@ account already exists. Only a single %@ account is allowed to be saved.
The account save was rejected by '%@'.
Plugin denied account remove but provided no error: %@
Can't remove account with identifier %@ because one plugin doesn't allow it.
The account removal was rejected by '%@'.
dataclasses
B24@?0@"<ACDPluginEntryProtocol>"8@"NSDictionary"16
allNotificationEntries
T@"NSArray",R,C,N
notificationEntries
T@"NSArray",R,C,N,V_notificationEntries
v32@?0@"NSString"8@"NSString"16@"NSString"24
v32@?0@"NSString"8@"NSMutableSet"16^B24
B32@?0@"ACDKeychainItem"8Q16^B24
System/Library
Accounts
bundle
B24@?0@"NSURL"8@"NSError"16
Authentication
ACSupportedAccountTypes
%@PluginCache
LastSystemVersion
daemon
connection
keychain
notification
plugin
save
entitlement
notification.signpost
void _ACDLazyArrayInitializeIfNecessary(ACDLazyArray * _Nonnull __strong)
<Unknown Function>
/BuildRoot/Library/Caches/com.apple.xbs/Sources/Accounts_Sim/Accounts-748.5/AccountsDaemon/ACDLazyArray.m
self
ACKeychainItemVersion
<%@: %p {username: %@, service: %@, synchronizable: %@}>
<%@: %p {
account: %@,
service: %@,
accessGroup: %@,
accessibility: %@,
synchronizable: %@,
dirtyProperties: %@
persistentRef
Tr^{__CFData=},R,N,V_persistentRef
T@"NSString",C,N
service
accessGroup
accessibility
synchronizable
accessControlRef
T^{__SecAccessControl=},R,N
metadata
T@"NSDictionary",C,N
version
Tq,N
/BuildRoot/Library/Caches/com.apple.xbs/Sources/Accounts_Sim/Accounts-748.5/AccountsDaemon/Remote Commands/ACRemoteDeviceMessage.m
No data was provided to initalize ACRemoteDeviceMessage!
SUCCESS
FAIL 
{Reply to %@: %@}
(RSVP!) 
{%@Internal ID: %@. Command: %@. Account ID: %@.}
data
T@"NSData",R,N
identifier
T@"NSString",R,N,V_identifier
needsReply
TB,N,V_needsReply
isReply
TB,N,V_isReply
No command was provided to initialize action ACRemoteDeviceMessage!
command
T@"NSString",R,N
T@"ACAccount",R,N
options
T@"NSDictionary",R,N
No message was provided to initalize reply ACRemoteDeviceMessage!
sentMessageIdentifier
success
T@"NSError",R,N
result
T@"NSObject<NSSecureCoding>",R,N
hasResult
TI,N,V_result
AuthenticationPluginQueue
No auth plugin to verify credentials for accounts of type %@
No auth plugin to renew credentials for accounts of type %@
%@.%@
No auth plugin to discover properties for accounts of type %@
UNKNOWN
RENEWED
REJECTED
FAILED
NSErrorPeerCertificateChainKey
renewalRateLimiter
T@"ACRateLimiter",&
PreferredOAuthConsumerKey
PreferredOAuthConsumerSecret
XX[E:QjlmkJZqTBNhLOT:g
3878861889
lh11ykuiycpw
b84f8d61205456:e:416:fd08c7811:4
97d4b8:a6350926e2ab4gedefa7432:2:88530f7
902265845
Bav5TVOpCZd0XCrn8DuQrMGZbkHivaFYBnsbz3HUJE
9911g0d2c25782d6ebed:a4dbc14762c
{Mgj6CGuJT:c{qMb
f058gbed57167f91
33b67328e3fe8c697325g9d1666c672agbcagc1f
49b7ccffdbg14a5b234345cf1acc86c4
com.apple.private.alloy.accountssync
com.apple.accounts.IDSQ
com.apple.accounts.IDS.commandProcessing
-[ACRemoteDeviceProxy sendCommand:withAccount:options:completion:]
-[ACRemoteDeviceProxy service:account:incomingData:fromID:context:]
com.apple.accounts.rdp-txn
v28@?0B8@"NSObject<NSSecureCoding>"12@"NSError"20
-[ACRemoteDeviceProxy _enqueueCompletionHandler:forMessageWithInternalID:transportID:]
/BuildRoot/Library/Caches/com.apple.xbs/Sources/Accounts_Sim/Accounts-748.5/AccountsDaemon/ACDServer.m
accountStoreListener
oauthSignerListener
authenticationDialogListener
com.apple.accounts.preMigrationStoreConnectionResumeQueue
com.apple.accounts.performMigrationQueue
@"ACDAccessPluginManager"8@?0
@"ACDAccountNotifier"8@?0
@"ACDAuthenticationDialogManager"8@?0
@"ACDAuthenticationPluginManager"8@?0
@"ACDDataclassOwnersManager"8@?0
Attempt to create ACDClient without a configured clientProvider!
Attempt to create ACDDatabase without a configured database!
com.apple.accounts.idle-exit
com.apple.language.changed
__ACSYNCBUBBLE
clientProvider
T@"<ACDClientProviderProtocol>",&,N,V_clientProvider
database
T@"<ACDDatabaseProtocol>",&,N,V_database
T@"NSXPCListener",R,N,V_accountStoreListener
T@"NSXPCListener",R,N,V_oauthSignerListener
T@"NSXPCListener",R,N,V_authenticationDialogListener
com.apple.ACDAccessPluginQueue
No access plugin was found that supports the account type %@
Access
com.apple.Accounts
com.apple.springboard
com.apple.
.xpc
bundleID
T@"NSString",&,N
T^{__CFBundle=},R,N
localizedAppName
adamOrDisplayID
T@"NSNumber",R,N
T@"NSXPCConnection",R,N,V_connection
exited?
-[ACDClientAuthorizationManager authorizationForClient:accountTypeWithIdentifier:]
bundleID == %@ AND accountType.identifier == %@
Authorization
-[ACDClientAuthorizationManager setAuthorization:forClient:onAccountType:]
Setting TCC failed.
-[ACDClientAuthorizationManager removeAuthorizationForClient:accountTypeWithIdentifier:]
Removing TCC state failed. God knows why.
-[ACDClientAuthorizationManager allAuthorizationsForAccountTypeWithIdentifier:]
-[ACDClientAuthorizationManager removeAllClientAuthorizationsForAccountTypeWithIdentifier:]
com.apple.accounts.ACDPairedDeviceAccountCache
sharedInstance
T@"ACDPairedDeviceAccountCache",R
accounts
AccountProperty
CredentialItem
ACDManagedObjectContextIsAccountsContext
ACAccountTypeVersion
ACKeychainVersion
/BuildRoot/Library/Caches/com.apple.xbs/Sources/Accounts_Sim/Accounts-748.5/AccountsDaemon/ACDDatabaseConnection.m
Unexpected number of persistent stores (%@), expected 1
key = %@ AND owner = %@
owner
value
****** An %@ exception was caught from -[NSManagedObjectContext save:]. %@
Attempt to begin observing MoC notifications with an existing observer!
v16@?0@"NSNotification"8
Attempt to end observing MoC notifications without an observer!
persistentStoreCoordinator
T@"NSPersistentStoreCoordinator",R,N,V_persistentStoreCoordinator
managedObjectContext
T@"NSManagedObjectContext",R,N,V_managedObjectContext
T@"<ACDDatabaseConnectionDelegate>",W,N,V_delegate
T@"NSNumber",&,N
keychainVersion
accountCount
hasAccountCount
TI,N,V_accountCount
com.apple.AccountAuthenticationDialog
T@"NSURL",C,N,V_url
confirmationRequired
TB,N,V_confirmationRequired
T@"ACAccount",&,N,V_account
authDelegateClassName
T@"NSString",C,N,V_authDelegateClassName
authDelegateClassBundlePath
T@"NSString",C,N,V_authDelegateClassBundlePath
completion
T@?,C,N,V_completion
v28@?0B8@"NSDictionary"12@"NSError"20
v12@?0B8
v16@?0@"NSError"8
VERIFICATION_REQUIRED_MESSAGE_FORMAT
VERIFICATION_REQUIRED_TITLE
CANCEL
CONTINUE
v24@?0^{__CFUserNotification=}8Q16
/BuildRoot/Library/Caches/com.apple.xbs/Sources/Accounts_Sim/Accounts-748.5/AccountsDaemon/ACDKeychain.m
Must pass service and username
isGranted
TB,N,V_isGranted
T@"ACDClient",&,N,V_client
grantedPermissions
T@"NSSet",&,N,V_grantedPermissions
T@"NSDictionary",C,N,V_options
com.apple.accounts.DBbackup-txn
v16@?0@"NSObject<OS_xpc_object>"8
T@"ACDDatabase",R,N,V_database
com.apple.accounts.databasebackup.queue
com.apple.accounts.databasebackup.activity
accounts-brighton-bridge
objectID
properties
granted
oldOptions
newOptions
oldName
newName
ClientAuthorization
Permission
storeOptions
T@"NSDictionary",R,C,N,V_storeOptions
com.apple.mobilesafari
com.apple.MobileAddressBook
com.apple.Maps
com.apple.youtube
com.apple.mobileslideshow
self like %@
The application is not permitted to delete %@ accounts
PID %@ does not have permission to add an account
The application is not permitted to access %@ accounts
%@ does not have permission to add an account
You are not allowed to modify the authorization model.
B32@?0@"NSString"8Q16^B24
backingAccountStore
T@"ACDAccountStore",R,N,V_backingAccountStore
com.apple.accounts.dom
XPCInterface
T@"NSXPCInterface",R
com.apple.accounts.cleanup.activity
The credential item %@ is set to expire in the future, at %@
sharedActivity
T@"ACDKeychainCleanupActivity",R
com.apple.accounts.cleanup
Database
RateLimit
UnrecoverableDatabaseError
RenewCredentials
com.apple.accounts.accountsync
ACDisableAccountSync
ACOneTimeMigrateAccountSync
ACOneTimeSMTPFixAccountSync
ACOneTimeLDAPFixAccountSync
.accountsync
.asynchost
.dasync
qualifiedUsername
devices
AccountSync
Class
Protocol
ExchangeType
primaryAccount
mail.apple.com
phonehome.apple.com
calendar.apple.com
im.apple.com
eightball.apple.com
swechat.apple.com
mailtest.apple.com
phonehome-test.apple.com
ical3uat.corp.apple.com
imnew.apple.com
ssical.apple.com
ical.corp.apple.com
relay.apple.com
syncQueue
com.apple.accountSync
iPhone
iPad
iPod
OSVersion
com.apple.security.keychainchanged
v12@?0i8
remoteAdds
localAdds
ACPrincipal
%@@%@-%@
personID
PLAIN
DAAccountHost
DAAccountPort
DAAccountUseSSL
DAAccountEmailAddress
DAAccountPrincipalPath
LDAPAccountSearchSettings
LDAPAccountSearchBase
LDAPAccountScope
base
FullUserName
IMAPAccount
SMTPAccount
%@:%@
SMTPIdentifier
DAAccountDidAutodiscover
GmailAccount
AOLAccount
YahooAccount
14A1
Bookmarks
Calendars
Contacts
Mail Accounts
Notes
com.apple.mobile.tethered_sync
DisableTethered
No out disabled boolean passed to GetTetheredSyncingDisabledForDataType. What did you expect us to do?
com.apple.mobile.data_sync
AccountNames
Sources
SyncingOS
ACSupportedDataclasses
<%@: %p { bundle: %@ }>
@"NSObject"20@?0@"NSObject"8B16
(not loaded)
<%@: %p { bundle: %@, supportedAccountTypes: %@, supportedDataclasses: %@ }>
supportedAccountTypes
T@"NSSet",R,N
supportedDataclasses
principalObject
T@,R,N
T@"NSBundle",R,N,V_bundle
/BuildRoot/Library/Caches/com.apple.xbs/Sources/Accounts_Sim/Accounts-748.5/AccountsDaemon/ACDTestManager.m
There can only be one test server running at a time
remoteAccountStoreEndpoint
T@"NSXPCListenerEndpoint",R,N
remoteOAuthSignerEndpoint
%{private}s:%{public}d called (%@, %@)
"Saved verified account %@"
"Save verified account failed: %@"
%{private}s:%{public}d called (%@)
"Renewal completed with result: %@. Error: %@"
%{private}s:%{public}d is returning
"Couldn't find matching account"
%{private}s:%{public}d called
"Remote account '%@' matched local account '%@' by identifier"
"Remote account '%@' matched local account '%@' by accountType and dsid"
"Remote account '%@' matched local account '%@' by accountType and username"
Client %@ is asking for the credential for account %@
Credential for account %@ is not currently available
Nil qualifiedUsername for account %@. Can't look up credential
Credential fetch failed. Will try again with UUID instead of qualifiedUserName. Error: %@
Found a legacy username-based credential for account %@! Migrating to qualifiedUsreName-based credential. Error: %@
Credential fetch failed for UUID. Will try again with username instead of qualifiedUserName or UUID. Error: %@
Found a legacy username-based credential for account %@! Migrating to QualifiedUsername-based credential. Error: %@
No username for account %@. Can't look up credential
ACDKeychainManager is fetching credential for account %@ and client ID %@.
Setting credential for account=%@; client=%@; handle credential removals=%@
Unable to remove existing TouchID-protected credential for account %@. Error: %@
Removal from keychain failed for account %@. Error: %@
Finished setting account credential
Asked to save credential: %@ for Account - %@ with the clientID - %@
NOT setting timer to erase volatile keychain items because of user preference.
Queuing non-persistent credential removal, account: %@
Removing credential for account=%@; client=%@
Removing account credential for client: %@
Unable to remove credential %@ from %@. Error: %@
Remove credential key: %@ for account: %@
The attempt to remove item for service %@ and username %@ failed.
Will try to remove item for service %@ and accountID %@ instead.
Keychain fetch succeeded for item: %@
Keychain fetch failed with error: %@ for item: %@
Keychain fetch succeeded with empty results for item: %@
Setting item accessibility to: %@ for serviceName: %@
Keychain update succeeded for item %@
Keychain update failed with error: %@ for item: %@
Password/Token hasn't changed. Not updating keychain for %@
Keychain add succeeded for item %@
Keychain add failed with error: %@ for item: %@
_removeItemForService - Exit.
Keychain item removal succeeded for item service:%@ username:%@ group:%@
Keychain item removal failed for item %@: %@
"Account sync - setting up options: %@"
"Account Sync - error - %@"
"Account Sync - Account lacks a username and a hostname - %@"
"Account Sync - nil username error - %@"
"Account is malformed - username %@ - type %@"
"Account is of an unsupported type or is a child account:%@"
"Account sync - setting up Dataclass Delete Item with options: %@"
"Create Dataclass Sync Item - %@ and %@"
"Keychain add Dataclass delete succeeded for item %@"
"Keychain add Dataclass delete  failed with error: %@ for item: %@"
"Account Sync - Dataclass Delete Item Error - %@"
"Dataclass Account is malformed - username %@ - type %@"
"Dataclass Account is of an unsupported type or is a child account:%@"
"Account Sync - Unable to remove exchange account sync item %@ from %@. Error: %@"
"Account Sync - Unable to remove exchange hostname account sync item %@ from %@. Error: %@"
"Account Sync - Unable to remove account sync item %@ from %@. Error: %@"
"Account Sync - Successfully removed account by hostname"
"Remove Dataclass Sync Item - %@ and %@"
"Keychain remove succeeded for Dataclassi tem %@"
"Keychain remove failed with error: %@ for item: %@"
"Account Sync - User - %@ with Service - %@"
"ReCreate Account Sync Item - %@ and %@"
"Keychain remove tombstone failed with error: %@ for item: %@"
"Setting item accessibility to: %@ for serviceName: %@"
"Update Account Sync Item - %@ and %@"
"Create Account Sync Item - %@ and %@"
"Keychain add succeeded for item %@"
"Keychain add failed with error: %@ for item: %@"
"Account Sync - error with plist - %@"
"Update Hostname Account Sync Item - %@ and hostname %@"
"Create Hostname Account Sync Item - %@ and hostname %@"
"Update Dataclass Sync Item - %@ and %@"
"Create Account Sync Migrated Item - %@ and %@"
"Keychain add succeeded for migrated item %@"
"Keychain add migrated failed with error: %@ for item: %@"
"Account Sync - Account already Migrated"
"Account Sync - Found item that exists %@ "
"Account Sync - Found Migrated item that exists %@ "
"Create iOS Version Sync Item - %@ and %@"
"Account Sync - iOS Version item already exists"
"Account Sync - Unable to update non-invisible items: %d"
"Account Sync - Item is not invisible - %@"
"Account Sync - Found Deleted items %@ "
"Account Sync - Found Tombstone %@ "
"Account Sync - Found Hostname Deleted items %@ "
"Database initialization failed. Stuck at version %@. Error: %@"
"Failed to update current version %@. Error: %@"
"Could not find account type %@ to set credential type %@"
"Adding OS X account types..."
"Missing kAccountDataclassNews!"
"kAccountDataclassNews is already present."
"kAccountDataclassKeychainSync not found. Creating..."
"Unable to get kAccountDataclassKeychainSync!"
"Missing account type with ID: ACAccountTypeIdentifierAol"
"Missing kAccountDataclassMail!"
"Missing kAccountDataclassNotes!"
"Missing account type with ID: ACAccountTypeIdentifierAppleAccount"
"Removing Messages from google account type."
"Updating supported dataclass on account %@"
"Removing AIM account %@"
"Removing AIM account type"
"Adding Facebook legacy account types"
"Changing Facebook account types"
"Changing account type of Facebook account %@"
"Changing account type of Facebook child CalDAV account %@"
"Changing account type of Facebook child CardDAV account %@"
"Adding obsolete attribute to Account Types"
"Marking account type %@ as obsolete"
"Removing Messages from AOL account type."
"Adding LinkedIn legacy account type"
"Removing redundant dataclass of name %@ %@"
"Replacing with canonical dataclass %@"
"Redundant dataclass removal affected %@"
"Ostensibly removed dataclass still exists! %@"
"Ostensibly removed dataclass still among account.provisionedDataclasses! %@ %@"
"Ostensibly removed dataclass still among account.enabledDataclasses! %@ %@"
"Ostensibly removed dataclass still among accountType.supportedDataclasses! %@ %@"
"Ostensibly removed dataclass still among accountType.syncableDataclasses! %@ %@"
"Successfully added persistentStore with options: %{private}@"
"Failed to add persistentStore with options: %{private}@, error: %@"
"Reset persistentStoreCoordinator, success: %@, error: %@"
"Disk is full. Not initializing the database, and exiting."
"Attempt to restore from backup that doesn't exist!"
"Caught an exception during the first attempt to open the Accounts DB: %@"
"Attempting to migrate persistentStore..."
"Successfully migrated existing persistentStore!"
"Failed to migrate existing persistentStore!"
"Attempting to restore persistentStore..."
"Successfully restored persistentStore!"
"Failed to restore persistentStore, error: %@"
"Successfully restored with backup at URL: %@"
"Failed to restore with backup at URL: %@, error: %@"
"Successfully reset the database at URL: %@"
"Failed to reset the database at URL: %@, error: %@"
"Deprecated method called: %{private}s %{private}@"
"Initializing new ACDAccountStore: client=%@, connection=%@"
"Determining account existent: %@, %@"
"Number of account is %@"
"Plugins did not deny account %@ removal"
"%@ is being deleted."
"Account Sync is enabled - marking account with dataclasses - %@ - %@"
"Account Sync - Account was marked to NOT sync the delete, we will not delete credentials for: %@"
%{private}s:%{public}d is returning: %@
%{public}@ %{public}@ account: %{private}@, changes: %{private}@
"ACDAccountStore failed to save its MOC. %{public}@"
"Failed to perform dataclass actions, error: %@"
"Account is being created: %@"
"Unable to add account: %@ Error: %@"
"ACAccount: _updateAccountNoSave called with no-op change"
"Unable to update account: %@ Error: %@"
"Could not find existing account with identifier %@: %@"
"Account %@ is being deleted"
"Adding dataclass with name %@"
"Can save account failed, plugin denied save of %@, error: %@"
"Account type %@ does support multiples."
"Account type %@ does NOT support multiples."
"Found active account %@ of type %@ that does NOT support multiples.  Returning NO."
"Failed to fetch similar accounts, error: %@"
"Found 0 accounts of type %@, returning YES."
"%@: qualifiedUsername changed from %@ to %@"
"Non-entitled client with no bundle ID (%@) trying to save an OAuth2 token"
"Ignoring credential-save error because we're migrating. %@"
"Updating existing account: %@"
"Adding new account: %@"
"Error inserting new account: %@"
"Owning bundleID: %@"
"Failed to save account, error: %{public}@"
"%@ is entitled for all account access - returning OAuth 2 master token."
"Fetching credential for account with ID: %@ for service %@"
"Setting credential (%p) for account with ID: %@ for service %@"
"Credential for account %@ is being requested by %@."
"No ACAccountType found for account with identifier %@."
"No managed object was found for account with identifier %@."
"credentialForAccount called: client=%@, account=%@"
"No plugin provides credentials for account %@. Falling back to legacy behavior."
"An unexpected error occurred: %@"
"The credential for account %@ is missing. It may have been withheld by its auth plugin."
"Credential for account %@ was successfully retrieved from its auth plugin."
"Could not find existing credential item with identifier: %@ service name: %@"
"accountsWithAccountType %@ returned an error: %@"
"accountsWithAccountType %@ returned: %@"
"Failed to get an NSManagedObjectID for account type %@"
"accountID is nil!"
"Could not save account: %@"
"Inserted account type with object ID: %@"
"Could not remove account: %@"
"Account Sync - Account was marked to NOT sync the delete, we will not create a tombstone for: %@"
"Daemon save called for account %@: username=%@, client=%@ (%{public}@), verify=%{public}@"
"TIMING: Daemon save took %@"
"Account save rejected by plugins, error: %@"
"Could not verify account: %@"
"Could not verify account, unknown error!"
"%@ is trying to verify account credentials for account: %@"
"%@ is trying to renew credentials for an account that's already been deleted: %@"
"%@ is trying to request access for accounts of type: %@"
"Access request result: %@"
"Could not save permissions: %@"
"All access was successfully revoked."
"Could not clear permissions: %@"
"All access for client was successfully revoked."
"Failed to get actions for dataclass: %@, changeType: %@, error: %@"
"Failed to query actions for dataclass %@, error: %@"
"kerberosAccountsForDomainFromURL %@"
"ERROR: Incoming account identifier is nil."
"Error fetch client token: %@"
"client token removal failed: %@"
"Handling URL %@"
"Found a matching account with identifier %@"
"Couldn't find an account matching the URL %@"
"Database keychain version: %@, expected version: %@, will migrate: %@"
"Failed to migrate keychain items to version %@. Error: %@"
"Will report telemetry - %@ count %@"
BEGIN [%lld]: FaultPlugins 
Failed to preflight bundle: %@, error: %@
FaultPlugins
END [%lld] %fs: FaultPlugins 
accounts/can-save-account
CanSaveAccount
BEGIN [%lld]: CanSaveAccount account: %@
Failed to load principal object for entry: %@
Entry reported inability to save account: %@, entry: %@
%{public}@
END [%lld] %fs: CanSaveAccount %{public}@
accounts/can-remove-account
account: %@
BEGIN [%lld]: CanRemoveAccount account: %@
Entry reported inability to remove account: %@, entry: %@
CanRemoveAccount
END [%lld] %fs: CanRemoveAccount %{public}@
accounts/will-change-notifications
%@ (changeType: %@, oldAccount: %@)
BEGIN [%lld]: AccountWillChange %@ (changeType: %@, oldAccount: %@)
AccountWillChange
END [%lld] %fs: AccountWillChange %{public}@
accounts/did-change-notifications
BEGIN [%lld]: AccountDidChange %@ (changeType: %@, oldAccount: %@)
AccountDidChange
END [%lld] %fs: AccountDidChange 
accounts/will-perform-dataclass-actions
%@ (dataclasses: %@)
BEGIN [%lld]: AccountWillPerform %@ (dataclasses: %@)
AccountWillPerform
END [%lld] %fs: AccountWillPerform 
accounts/did-perform-dataclass-actions
BEGIN [%lld]: AccountDidPerform %@ (dataclasses: %@)
AccountDidPerform
END [%lld] %fs: AccountDidPerform 
BEGIN [%lld]: AccountWillChangePlugin %@
AccountWillChangePlugin
END [%lld] %fs: AccountWillChangePlugin %{public}@
BEGIN [%lld]: AccountDidChangePlugin %@
AccountDidChangePlugin
END [%lld] %fs: AccountDidChangePlugin 
Attempting to migrate keychain item %@ from %@ to %@
Failed to migrate keychain item %@: %@
Successfully migrated keychain item %@.
Unable to parse `accountTypeIdentifier` from service name %@.
Unable to parse `key` from service name %@.
Could not find account type for identifier %@.
Could not determine expected accessibility for %@.
Found mismatched keychain item accessibility: %@ :: expected: %@
Keychain item 'acct' did not match Account UUID format
Could not find an account with identifier %@, assuming item already username-based.
Found account %@ is missing username, will not update item.
Updating keychain item acct: %@ old: %@
Account (%@) has and empty accountType identifier!
Failed to query keychain for account: %@, errno %@
"Couldn't find the system library directory to search for plugins."
"Couldn't get value for the directory at %@: %@"
"Skipping file at %@ because it isn't a directory"
"Couldn't create plugin at %@"
"Encountered an error while scanning for plugins at %@: %@"
"Building plugin cache"
"Plugin %@ does not have any supported account types in its plist!"
"Adding %@ to cache as supporting %@"
"System build version changed from %@ to %@"
"Unable to load bundle %@ in cache!"
"Loaded auth plugin %@"
"No bundle name for %@ in cache!"
"Unable to get current build version!"
Failed to decode keychain metadata: %@
Failed to encode keychain metadata: %@
Got invalid type from keychain!
Got invalid status from keychain: %@
"Failed to decode message data, error: %@"
"Entering isPushSupportedForAccount: for account %@..."
"isPushSupportedForAccount: using authType: %@"
"The plugin for account %@ does not implement isPushSupportedForAccount:"
"Returning isPushSupported == %@ for account %@."
"Entering credentialForAccount:client: for account %@..."
"credentialForAccount:client using authType: %@"
"No auth plugin to fetch credentials for accounts of type %@, defaulting to ACDKeychain..."
"The plugin for account %@ does not implement credentialForAccount"
"Returning credential %@ for account %@ to %@."
"verifyCredentialsForAccount %@ (should save? %@) was called for client %@..."
"verifyCredentials using authType: %@"
"No auth plugin to verify credentials for accounts of type %@, bailing!"
"It appears we are already verifying credentials for %@. We will enqueue the current request's completion handler and call it when done."
"Plugin started on queue, will authenticate account %@"
"The plugin for account %@ does not implement verifyCredentials"
"ACDAuthenticationPluginManager _handleVerificationCompletion: plugin reports being done for account %@. Verified account is %@ and error is %@"
"ACDAuthenticationPluginManager _handleVerificationCompletion is saving the verified account %@..."
"ACDAuthenticationPluginManager _handleVerificationCompletion: saving verified account %@ completed with result %@ and error %@"
"ACDAuthenticationPluginManager _handleVerificationCompletion is intentionally NOT saving the verified account %@"
"ACDAuthenticationPluginManager _handleVerificationCompletion is invoking all queued completion blocks for account %@"
"renewCredentialsForAccount %{public}@ was called by client %{public}@ with reason %@ shouldForce %{public}@ shouldAvoidUI %{public}@"
"renewCredentials using authType: %@"
"Password dialogs suppressed, force-rejecting renewal request."
"No auth plugin to renew credentials for accounts of type %@, bailing!"
"It appears we are already renewing credentials for account %@ with renewal ID %@. We will enqueue the current request's completion handler and call it when done."
"Allow new renewal for account %@ with renewal ID %@."
"Limit renewal for account %@ with renewal ID %@."
"Plugin started on queue, will renew credentials for %@"
"The plugin for account %@ does not implement renewCredentials"
"The user has declined an identical request to renew credentials for %@ within the past 24 hours. Suppressing the password prompt and failing immediately."
"%{public}@ (%{public}@) exceeded %{public}@ renewals per %{public}@ minutes -- rejecting"
"ACDAuthenticationPluginManager _handleRenewalCompletion: plugin reports being done for account %@ with result %@ and error %@"
"ACDAuthenticationPluginManager _handleRenewalCompletion is saving account %@"
"ACDAuthenticationPluginManager _handleRenewalCompletion failed to save account: %@ error: %@"
"ACDAuthenticationPluginManager _handleRenewalCompletion is invoking all queued completion blocks under renewal ID %@"
"discoverPropertiesForAccount %@ was called by client %@"
"discoverPropertiesForAccount using authType: %@"
"No auth plugin to discover properties for accounts of type %@, bailing!"
"It appears we are already discovering settings for account %@. We will enqueue the current request's completion handler and call it when done."
"Plugin started on queue, will discover settings for %@"
"The plugin for account %@ does not implement discoverProperties"
"ACDAuthenticationPluginManager _handleDiscoveryCompletion: plugin reports being done for account %@ with error %@"
"ACDAuthenticationPluginManager _handleDiscoveryCompletion is saving account %@"
"ACDAuthenticationPluginManager _handleDiscoveryCompletion failed to save account: %@ error: %@"
"ACDAuthenticationPluginManager: got pluginBundle %@"
"ACDAuthenticationPluginManager: got principalClass %@"
"ACDAuthenticationPluginManager: created plugin %@"
"ACDAuthenticationPluginManager: authentication plugin of class %@ does not conform to ACDAccountAuthenticationPlugin protocol!"
"ACDAuthenticationPluginManager: an authentication plugin of class %@ for auth type %@ could not be instantiated! Load Error: %@"
"ACDAuthenticationPluginManager: no authentication bundle for auth type %@, nothing to do here..."
"Account %@ depends on parent for Authentication"
"Returning a parent's account type as the authentication type: %@"
"Returning a parent's authenticationType: %@"
"Returning account's accountType as the authentication type: %@"
"Returning account's authenticationType: %@"
Authentication plugin '%s' indicated failure but provided no error! (selector: %s)
"Calling app passed a pid, but doesn't have com.apple.accounts.applicationidfrompid entitlement."
"No application ID to sign with."
"No applicationID to sign with"
"Initializing ACRemoteDeviceProxy..."
"Command %@ cannot be sent from this platform."
"Message is about to be sent with priority %@: %@"
"Command message is deletion. Will also send to non-active paired devices."
"IDSCopyIDForDevice failed for inactive paired device: %@"
"IDSService send request: %@ bytes to destination %@ with priority %@."
"IDSService send request failed. Error: %@"
"IDSService send request succeeded. Transport ID for sent message: %@"
"No data for reply to message %@!"
"Reply %@ successfully sent in response to message %@. Transport ID: %@"
"IDS callback did not provide a message identifier!"
"Message with Transport ID %@ could not be sent!"
"Success for message with Transport ID %@!"
"IDS is calling us back with no data!"
"Reply received without a sentMessageIdentifier! %@"
"Reply message succesfully received. %@"
"Action message received. Dispatching to handler. %@"
"Processing: %@"
"Processed message that requires a reply. %@"
"Processed message that does not need a reply. %@. Success: %@. Error: %@"
"Calling out to %@ pending completions about message with ID %@"
"No internal identifier was found for message with transport ID: %@"
"Account migration may not have occurred. Taking the lock and doing a synchronized check."
"Account migration has already occurred. No need to block non-migration connections."
"Account migration has not occurred."
"Blocking non-migration connections until migration finishes."
"Un-blocking non-migration connections."
"calling DMPerformMigrationIfNeeded"
"DMPerformMigrationIfNeeded completed"
"Unlocked the account migration lock."
Connection from %{public}@
"%@ (%@) received"
"Connection %@ for %@ was closed."
"Connection %@ for %@ was interrupted."
"Setting migrationInProgress to YES for the ACDAccountStore of %@"
"Queuing setMigrationInProgress to NO for the ACDAccountStore of %@"
"Setting migrationInProgress to NO for the ACDAccountStore of %@"
"Queuing connection resume for %@"
"Resuming connection for %@"
"New connection to ACDOAuthSigner initiated by %@"
"New connection to ACDAuthenticationDialogManager initiated by %@"
"Idle-exit-preventing transaction started! We will remain dirty for at least 2 seconds..."
"Idle-exit-preventing transaction ended!"
"Signaling the semaphore blocking our connection resume queue."
"Language changed, will exit when all clear."
"Notified client account store of database change for identifiers: %@"
"Notified connected clients of credential changes for account %@."
"accountsd is running in the sync bubble, not initalizing ACRemoteDeviceProxy"
"Notified of account migration finish."
"Notified of language change."
"Looking for plugin to authorize access to account type %@ for %@"
"Dispatching to access plugin queue..."
"Called out to plugin (handleAccessRequest), now waiting for signal from completion handler..."
"Plugin result handler called with result %@."
"Called out to plugin (authorizeAccess), now waiting for signal from completion handler..."
"Looking for plugin to revoke access to account type %@ for %@"
"Called out to plugin (revokeAccess), now waiting for signal from completion handler..."
"Looking for plugin to revoke ALL access to account type %@"
"Called out to plugin (revokeAllAccess), now waiting for signal from completion handler..."
"Testing if plugin %@ supports account type %@"
"Account type supported!"
"Account type not supported!"
"CFBundleCreate failed: %@, %@"
"Entitlement %@ verification for %@ result cached as: %@"
"%@ has a nil bundle ID. Will not try to find ClientAuthorization."
"No TCC state found: %@, %@"
"Found %@ Authorization entities in DB. Taking the last one."
%{private}s:%{public}d called (%@, %@, %@)
"Client (%@) with no bundle ID passed to setAccessGranted! Ignoring..."
"Failed to set TCC state for: %@"
"Could not save new Authorization entity: %@"
"Exiting - setAuthorizationForClient: %@"
"Failed to clear TCC state for %@"
"Could not delete Authorization entities: %@"
"Exiting - removeAuthorizationForClient: %@"
"No match found in TCC for bundleID: %@ - setting isGranted to TRUE"
"Exiting - allAuthorizationsForAccountType: %@ found %@ results."
"Exiting - removeAllClientAuthorizationsForAccountType: %@"
"_accountsIsValid %@ _accounts.count %@ _completions.count %@"
"will fetch from remote device"
"fetched accounts.count %@ error %@"
"calling %@ completions"
"will invalidate"
"Got nil entityDescription for %@"
"-[ACDDatabaseConnection existingObjectWithURI:] called with an invalid URI %@. "
"-[ACDDatabaseConnection existingObjectWithURI:] failed to fetch managed object at %@"
"There are more than one account property with the key '%@' for object '%@'. Deleting duplicates..."
"Could not save context: %@"
"ACDAuthenticationDialogManager current queue: %@"
"ACDAuthenticationDialogRequest: added dialog request to queue under ID %@"
"ACDAuthenticationDialogRequest: OOPA dialog host launched!"
"Launching app with identifier %@"
"Failed to lauch %@ app: %@"
"ACDAuthenticationDialogRequest: asking user to confirm showing auth dialog."
"ACDAuthenticationDialogRequest: user asked to continue."
"ACDAuthenticationDialogRequest: user declined."
"ACDAuthenticationDialogManager: an authentication dialog is trying to talk to me, but I have no record of launching it!"
"ACDAuthenticationDialogManager: providing active dialog with URL: %@ title: %@ username: %@ authDelegateClassName %@ authDelegateClassBundlePath %@"
"ACDAuthenticationDialogManager: an authentication dialog reports being done, but I have no record of launching it!"
Keychain query - %@ with result - %@
Account Sync - Found Tombstones %@ 
Keychain item (%@) has custom access control, skipping...
Keychain item (%@) known to be migrated, skipping...
Failed to migrate keychain item %@.
"ACDDatabaseBackupActivity already has an xpc_activity pending"
"Registering activity %s (scheduling backup: %d)"
"Checking in for accounts database backup activity"
"Setting accounts database backup activity criteria"
"Running accounts database backup activity"
"Successfully backed up database: %{private}@"
"Failed to backup database, error: %@"
"Couldn't set ACDDatabaseBackupActivity activity state to XPC_ACTIVITY_STATE_CONTINUE"
"Accounts' database local backup file exists."
"ACDDatabaseMigrator will begin running..."
"The model version compatible with the pre-migration store is: %@."
"Performing bridge migration on a database that was created on 6.1 or earlier. Pray to the deity of your choosing that this will work."
"There are %@ accounts."
"All migrations are done. Saving context now."
"Attempting to open the store with auto-migration on."
"Unable to open database post-migration: %@"
"Caught an exception while opening the persistent store post-migration: %@"
"ACDDatabaseMigrator finished running! Result: %@"
"Moving all permission bits over to TCC..."
"Found %@ authorization entities."
"Found authorization for client: %@"
"Failed to transform old options attribute!"
"No entity was found with name Dataclass."
"No entity was found with name: %@"
"Setting up a context to migrate DB at path: %@"
"Context successfully created!"
"Could not add the store to the persistent store coordinator. %@"
"Could not find a model version compatible with database. This is really bad!"
"Found %@ MOMs. Looking for match..."
"Checking MOM at path: %@"
"That's the one!"
"Post-processing migration."
"Unable to save database post-migration: %@"
"Cannot check access to a private account type: %@"
"%@ is requesting access to a private account type: %@"
"%@ seems to have a NULL bundle. Sorry can't work with that."
"Setting TCC access bit returned: %@"
"Cannot clear access for account type %@, which has no backing TCC service."
"Cannot reset TCC Access with nil bundle: %@"
Unentitled access by client '%{public}@' (selector: %s)
"Client %@ is not allowed to access accounts of type %@."
"Cannot renew credentials because %@ is not entitled or permitted to access to account %@."
"Client (%@) attempted to access restricted account type: %@"
"Client not entitled to send account via IDS proxy"
"Client not entitled to send accounts to paired devices."
"Client not entitled to remove accounts from paired devices."
"Client is not entitled to migrate keychain items."
"Client is not entitled to report telemetry."
"Client is not entitled to schedule backups."
"Remote dataclass owners manager returned an error: %@"
"Client DOM is connecting to remote service."
"Connection to remote DOM interrupted!"
"Connection to remote DOM closed."
"No credentials items queued for deletion, will not start cleanup activity."
"Failed to save credential item: %@"
"Extending credential item: %@ expiration date: %@"
"Creating credential item: %@ expiration date: %@"
"XPC criteria not changed, ignoring criteria."
"Configuring keychain cleanup activity: %@"
"Starting up XPC activity..."
"XPC Activity block invoked with state %@..."
"Setting cleanup activity criteria..."
accounts/keychain-cleanup-activity
"Running cleanup activity credential removal..."
"Credential item not yet expired, will remove later"
"Failed to remove credential item: %@"
"Attempting to remove credential item (and keychain item) for %@"
"Stopping keychain cleanup activity..."
"Account Sync - checking status"
"Account Sync - returning status: %@"
"Account Sync - returning device list: %@"
"Account Sync - Asked to delete - %@"
"Account Sync = Failed to delete keychain item for local account: %@ with error: %@"
"Account Sync - Local Peer %@ with id %@ with Peers - %@"
"Account Sync - Peer - %@"
"Account Sync - Found peer with new version in circle marking migration - %@"
"Account Sync - OSVersion is from a previous release - %@"
"Account Sync - skipping peer with matching local peer name - %@"
"Account Sync - unable to get local peer info due to - %@ - %@"
"Account Sync - User disabled via default"
"Account Sync - device is in the circle and keychain syncing is enabled"
"Account Sync - Device is not in the circle - status %@ error:%@"
"Account Sync - received com.apple.security.keychainchanged notification"
"Enqueing sync due to : %@"
"Enqueing sync due to KVS : %@"
"Account Sync - Adds:%@"
"Account Sync - Deletes:%@"
"Account Sync - Hostname Adds:%@"
"Account Sync - Hostname Deletes:%@"
"Account Sync - Account found to remote add that is scheduled for delete: %@ and %@"
"Account Sync - Account found to local add that is scheduled for delete: %@ and %@"
"Account Sync - Remote Adds: %@"
"Account Sync - Remote Deletes: %@"
"Account Sync - Duchess Detected - %@"
"Account Sync - Duchess NOT Detected"
"Account Sync - Remote Data: %@"
"Account Sync - Local Data: %@"
"Account Sync - DataActions Data: %@"
"Account Sync - Account exists locally - %@"
"Account Sync - Account exists locally with username %@ - %@"
"Account Sync - Account exists locally with identityEmail %@ - %@"
"Account Sync - Warning - Account is already in que for creation: %@ - %@"
"Account Sync - Unsupported type for this platform: %@"
"Account Sync - iCloud Account matches Primary, skipping ; %@"
"Account Sync - Malformed Primary iCloud Account found: %@"
"Account Sync - iCloud Account lacks a personID - %@"
"Account Sync - Facebook Account found that matches UID - %@ vs %@"
"Account Sync - Remote Facebook Account found that matches UID - %@ vs %@"
"Account Sync - Malformed Facebook Account - lacks UID - %@"
"Account Sync - Account lacks a hostname %@"
"Account Sync - Account does not exist locally, creating account with properties: %@"
"Account Sync - Account does not exist queing for local adding: %@"
"Account Sync - Account exists remotely - %@"
"Account Sync - Account exists remotely with qualified username %@ - %@"
"Account Sync - Account does not exist remotely, creating account with properties: %@"
"Account Sync - Account qued for remote adding: %@"
"Account Sync - Account is already in que for creation: %@"
"Account Sync - Unsupported local type - %@"
"Account Sync - Remote Hostname Data: %@"
"Account Sync - Local Hostname Data: %@"
"Account Sync - Account Hostname exists locally - %@"
"Account Sync - Account exists locally with hostname %@ - %@"
"Account Sync - Malformed Hostname Account - lacks hostname/service: %@"
"Account Sync - Account is malformed - lacks hostname: %@"
"Account Sync - Account Hostname does not exist remotely, creating account with properties: %@"
"Account Sync - Account qued for remote hostname adding: %@"
"Account Sync - Unsupported local type for hostname add - %@"
"Account Sync - Duchess Enabled - Detected Host for Local Account that should be ignored - %@"
"Account Sync - why does this already exist? -  previous %@ vs %@ for idhash - %@"
"Account Sync - Usernameless account : %@"
"Account Sync - Unsupported local account : %@"
"Account Sync - Account without a username and hostname - %@"
"Account Sync - Duchess Enabled - Detected Local Hostname Account that should be ignored - %@"
"Account Sync - Account has a username, skipping : %@"
"Account Sync - Duchess Enabled - Detected Host that should be ignored - %@"
"Account Sync - Account is already in remote accounts: %@"
"Account Sync - Duchess Enabled - Detected UsernameLess Host that should be ignored - %@"
"Account Sync - Primary Account found: %@"
"Account Sync - No Primary iCloud Account found..."
"Account Sync - SMTP Account Creation for - %@ with properties - %@"
"Account Sync - SMTP Account Creation successful for - %@ with properties - %@"
"Account Sync - SMTP Account Creation Failed - %@"
"Account Sync - SMTP Account Timed out waiting for account creation - %@"
"Account Sync - SMTP Accounts: %@"
"Account Sync - Account Creation for - %@"
"Account Sync - Account Creation successful for - %@"
"Account Sync - Account Creation Failed - %@"
"Account Sync - Timed out waiting for account creation - %@"
"Account Sync = Failed to created keychain item for local account: %@ with error: %@"
"Account Sync - posting notification for %@"
"Account Sync - Checking Account - %@ vs %@-%@"
"Account Sync - Deleted Account exists locally - %@"
"Account Sync - Account needs to be deleted: %@"
"Account Sync - Account is already in que for deletion: %@"
"Account Sync - Remote Hostname Deletes: %@"
"Account Sync - Checking Hostname Account - %@ vs %@-%@"
"Account Sync - Hostname Account needs to be deleted: %@"
"Account Sync - Account is already in que for hostname deletion: %@"
"Account Sync - deleting with actions: %@"
"Account Sync - Data class action missing %@ - %@"
"Account Sync - deleting with account: %@ - %@"
"Account Sync - delete was a success."
"Account Sync - delete failed - %@"
"Account Sync - scheduling sync"
"Account Sync - resetting timer"
"Account Sync - SMTP account with null qualifiedUsername - %@"
"Account Sync - User has already had LDAP Accounts fixed"
"Account Sync - LDAP Delete for  - %@"
"Account Sync - LDAP Delete Successful for - %@"
"Account Sync - LDAP Delete Failed - %@"
"Account Sync - Timed out waiting for account deletion - %@"
"Account Sync - User has already been migrated"
"Account Sync - Convert Mail keys"
"Account Sync - Convert ACAccountPropertySendingAccountIdentifier to SMTPIdentifier format"
"Account Sync - Convert Sending keys from this string - %@ to %@"
"Account Sync - Error creating Account Sync Migrated Item - %@"
ACRemoteCommandHandler
0 2A
ACDKeychainManager
ACDUserNotification
ACDQueueDictionary
ACDDatabaseInitializer
ACDDatabase
ACDDatabaseConnectionDelegate
NSObject
ACDDatabaseProtocol
ACDTransientDatabase
ACDPreferences
AWDAccountsRenewCredentialsBegin
NSCopying
ACDAccountChange
ACDFakeRemoteAccountStoreSession
ACDAccountStore
ACRemoteAccountStoreProtocol
ACDAccountNotifier
ACDKeychainMigrator
ACDPluginLoader
ACDLazyArray
ACDKeychainItem
ACRemoteDeviceMessage
Action
Reply
AWDAccountsRenewCredentialsEnd
ACDAccountAuthenticationPlugin
ACDAuthenticationPluginManager
UnitTesting
ACDOAuthSigner
ACDOAuthSignerProtocol
ACRemoteDeviceProxy
IDSServiceDelegate
ACAccountStoreProtocol
ACDAuthenticationDialogManagerProtocol
ACDServer
ACDAccountStoreDelegate
NSXPCListenerDelegate
ACDAccessPluginManager
ACDClient
ACDClientAuthorizationManager
ACDPairedDeviceAccountCache
ACDAWDMetricsReporter
ACDDatabaseConnection
AWDAccountsLandmarkEventAccountTypeCounts
ACDAuthenticationDialogRequest
ACDAuthenticationDialogManager
ACDKeychain
ACDClientAuthorization
ACDDatabaseBackupActivity
ACDDatabaseMigrator
ACDTCCUtilities
ACDAccountStoreFilter
ACDDataclassOwnersManager
ACDDataclassOwnersManagerProtocol
ACDDataclassOwnersManagerInterface
ACDKeychainCleanupActivity
ACDClientProvider
ACDClientProviderProtocol
ACDAutoBugCapture
ACDAccountSync
ACDPluginEntry
ACDPluginEntryProtocol
ACDTestManager
init
isEqualToString:
_addAccount:withOptions:completion:
_updateAccount:withCompletion:
_promptUserForAccountCredential:withOptions:completion:
_deleteAccount:withCompletion:
_authenticateAccount:withOptions:completion:
_removeAllAccountsWithCompletion:
_fetchAccountsWithCompletion:
_invalidateFetchedAccountsCacheWithCompletion:
saveVerifiedAccount:withCompletionHandler:
_localAccountMatchingRemoteAccount:
mutableCopy
numberWithBool:
setObject:forKeyedSubscript:
numberWithInteger:
credential
credentialItemForKey:
renewCredentialsForAccount:options:completion:
errorWithDomain:code:userInfo:
accounts
identifier
accountWithIdentifier:
accountType
accountTypeWithAccountTypeIdentifier:
accountsWithAccountType:
countByEnumeratingWithState:objects:count:
objectForKeyedSubscript:
isEqual:
username
handleCommand:forAccount:options:completion:
_saveAccount:completion:
.cxx_destruct
_accountStore
_shouldSyncCredentialForAccount:
bundleForClass:
localizedStringForKey:value:table:
count
copy
initWithManagedAccount:
credentialForAccount:clientID:error:
credentialForManagedAccountObject:clientID:error:
credentialForManagedAccountObject:clientID:
credentialType
credentialProtectionPolicy
canAccessPasswordsWithPolicy:
dictionaryWithObjects:forKeys:count:
qualifiedUsername
_fetchOptionsForAccount:
_credentialForAccountWithID:accountTypeID:credentialType:clientID:allowAdditionalAccountTypeSegment:options:error:
keysForCredentialItems
_migrateCredential:forAccount:clientID:
length
oauthTokenNoSync
_fallbackToUnsyncedOAuthTokens:
_createNoSyncOAuthTokens:account:clientID:
performWithinPersonaForAccount:withBlock:
setCredentialType:
supportedKeysForAccountTypeIdentifier:credentialType:
additionalServiceSegmentForAccountTypeIdentifier:
keychainServiceNameForClientID:accountTypeIdentifier:additionalAccountTypeSegment:key:
_itemForServiceName:username:accessGroup:options:error:
code
setCredentialItem:forKey:
_setCredentialForAccount:clientID:handleCredentialItemRemovals:error:
requiresTouchID
removeCredentialForAccount:clientID:error:
_saveCredential:forAccount:clientID:error:
removeObjectsInArray:
_removeCredentialItemWithKey:forAccountWithID:username:accountTypeID:clientID:options:error:
server
credentialsDidChangeForAccountWithIdentifier:
nonPersistentKeysForAccountTypeIdentifier:credentialType:
_setNonPersistentCredentialTimerForAccount:
credentialPolicyForAccountTypeIdentifier:key:clientID:
_setItem:forServiceName:username:accessGroup:accessibility:syncable:requiresTouchID:options:error:
sharedInstance
valueForManagedDefault:
boolValue
sharedActivity
queueNonPersistentCredentialRemoval:
removeCredentialForAccount:error:
_removeCredentialForAccountWithUsername:accountQualifiedUsername:accountIdentifier:accountTypeIdentifier:credentialType:clientID:options:error:
_removeItemForService:username:accessGroup:options:error:
initWithCapacity:
addObject:
componentsJoinedByString:
componentsSeparatedByString:
lastObject
removeLastObject
allSupportedKeys
containsObject:
allIdentifiers
_accountTypeIdentifierFromComponents:handler:
insertObject:atIndex:
enumerateObjectsWithOptions:usingBlock:
subarrayWithRange:
passwordForServiceName:username:accessGroup:options:error:
stringWithFormat:
arrayWithObjects:count:
accountPropertyForKey:
lock
_keychainLock_updateItem:existingPassword:forServiceName:username:accessGroup:accessibility:options:error:
_keychainLock_addItem:forServiceName:username:accessGroup:accessibility:syncable:requiresTouchID:error:
unlock
dictionaryWithCapacity:
dataUsingEncoding:
setObject:forKey:
updateItemForServiceName:username:accessGroup:newValues:options:error:
addItemWithServiceName:username:accessGroup:passwordData:options:error:
_keychainLock_removeItemForService:username:accessGroup:options:error:
removeItemForServiceName:username:accessGroup:options:error:
oauthToken
setOauthTokenNoSync:
oauthTokenSecret
setOauthToken:
stringWithUTF8String:
currentHandler
handleFailureInMethod:object:file:lineNumber:description:
objectAtIndexedSubscript:
setOauthTokenSecret:
dictionary
accountDescription
addEntriesFromDictionary:
_setAccountSyncItem:username:accessGroup:accessibility:options:error:
removeDataclassAccountSyncItemForAccount:
_setAccountSyncItem:hostname:accessGroup:accessibility:options:error:
_setAccountSyncMigrateItem:username:accessGroup:accessibility:options:error:
_setDataclassSyncItem:username:accessGroup:accessibility:options:error:
host
array
keychainDeletedAccounts
objectForKey:
lowercaseString
removeTombstoneForServiceName:username:accessGroup:extension:error:
_accountSyncItemExistsForServiceName:username:
dataWithPropertyList:format:options:error:
updateSyncItemForServiceName:username:accessGroup:newValues:extension:error:
addSyncItemWithServiceName:username:accessGroup:options:extension:error:
_accountSyncItemExistsForServiceName:hostname:
_dataclassSyncItemExistsForServiceName:username:
accountSyncMigrated
keychainAccounts
keychainHostnameAccounts
keychainDeletedContactAccounts
firstObject
valueForKey:
containsString:
propertyListWithData:options:format:error:
objectAtIndex:
dictionaryWithDictionary:
makeItemInvisibleWithService:andAccount:
stringByReplacingOccurrencesOfString:withString:
dictionaryWithObjectsAndKeys:
initialize
setServer:
credentialForManagedAccountObject:
credentialForAccount:clientID:
setCredentialForAccount:
setCredentialForAccount:clientID:
setCredentialForAccount:error:
setCredentialForAccount:clientID:error:
setCredentialForNewAccount:clientID:error:
removeCredentialForAccount:
removeCredentialForAccount:clientID:
removeCredentialForAccount:key:error:
componentsFromKeychainServiceName:handler:
createAccountSyncItemForAccount:clientID:properties:error:
createAccountSyncMigratedItemWithError:
createDataclassAccountSyncItemForAccount:withDataclassActions:
removeAccountSyncItemForAccount:clientID:properties:error:
removeTombstonesForAccount:clientID:error:
accountSynciOSVersion
setAccountSynciOSVersion:
keychainDeletedHostnameAccounts
showUserNotificationWithTitle:message:cancelButtonTitle:otherButtonTitle:withCompletionBlock:
allKeys
isQueueEmptyForKey:
removeObjectAtIndex:
removeObjectForKey:
description
isEmpty
addObject:toQueueForKey:
dequeueFirstObjectInQueueForKey:
firstObjectInQueueForKey:
dequeueAllObjectsInQueueForKey:
keyForRandomQueue
_allQueuesByID
doesNotRecognizeSelector:
managedObjectContext
version
_addTwitterAccountType
_addWeiboAccountType
_addAppleIDAccountType
_addFlickrAccountType
_addVimeoAccountType
_addLinkedInAccountType
_addFacebookAccountType
_addCalDAVAccountType
_addCardDAVAccountType
_addDataclassWithName:
_addContactsCalendarsDataclassesToFB
_addTudouAccountType
_addYoukuAccountType
_updateWeiboAccountTypeIfNecessary
_addSupportsAuthenticationAttributeToAccountTypes
_addSupportsAuthenticationAttributeToAccounts
_addMissingAccountTypes
_addSyncableDataclassesToCardAndCalDAV
_addSupportsMultipleAccountsAttributeToAccountTypes
_addYelpAccountType
_addFacebookAccessKeys
_addAccessKeysAttributeToFacebookAccountType
_removeFacebookPermissionGroupAccessKey
_removeFacebookAppVersionAccessKey
_addFacebookAudienceAccessKey
_addFacebookAudienceAccessKeyToFacebookAccountType
_addAppleAccountType
_addLiverpoolAccountType
_addLiverpoolAccessKeys
_addAccessKeysAttributeToLiverpoolAccountType
_addTencentWeiboAccountType
_upgradeLinkedInAccountType
_addSMTPAccountType
_addGmailAccountType
_addYahooAccountType
_addRemindersDataclassToCalDAVAccountType
_addFaceTimeAccountType
_addMadridAccountType
_addGameCenterAccountType
_addiTunesStoreAccountType
_addLinkedInAccessKeys
_addAccessKeysAttributeToLinkedInAccountType
_limitFlickrToOneAccount
_limitVimeoToOneAccount
_updateFlickrCredentialTypeToOAuth
_updateVimeoCredentialTypeToOAuth
_addIdentityServicesAccountType
_limitLinkedInToOneAccount
_ensureDataclassesAllExist
_addSubscribedCalendarAccountType
_addBookmarkDAVAccountType
_addExchangeAccountType
_addHotmailAccountType
_addIMAPNotesAccountType
_addLDAPAccountType
_ensureProperAccountTypeDataclasses
_addPasswordCredentialTypeToSMTPAccountType
_addPasswordCredentialTypeToGmailAccountType
_addTokenCredentialTypeToYahooAccountType
_addIMAPAccountType
_addPOPAccountType
_addIMAPMailAccountType
_updateTencentWeiboCredentialTypeToOAuth2
_addTencentWeiboAccessKeys
_addAccessKeysAttributeToTencentWeiboAccountType
_addFindMyiPhoneAccountType
_updateIdentityServicesAccountTypeToSupportAuthenticationAndMultipleAccounts
_updateIdentityServicesAccountDescription
_makeTencentWeiboSingleton
_addHolidayCalendarAccountType
_addFMFAccountType
_setOwningBundleIDForNativeAccountTypes
_createLiverpoolDataclasses
_addCloudKitAccountType
_addAccessKeysAttributeToCloudKitAccountType
_addAppleIDAuthenticationAccountType
_removeLiverpoolTypes
_addCloudKitDataclasses
_setCloudKitCredentialType
_addAndConfigureAllOSXAccountTypes
_switchGoogleToOAuthAuthentication
_addDocumentsAndVPNDataclass
_addIDMSAccountType
_updateAOLAndAddNotificationsDataclass
_addOnMyDeviceAccountType
_switchYahooToOAuthAuthentication
_updateOSXServerAccountDescription
_configureSMTPAccountType
_allowMultipleAppleIDAuthenticationAccounts
_makeTudouYoukuSingletons
_supportiCloudNewsDataclass
_ensurePresenceOfNewsDataclass
_supportiCloudKeychainSyncDataclass
_addMSOAccountType
_addSingleSignOnAccountType
_switchHotmailToOAuthAuthentication
_setSupportedDataclassesForAOLAccountType
_addNotesDataclassToAASupportedDataclasses
_updateMacOSServerAccountDescription
_removeMessengerFromYahooSupportedDataclasses
_setYahooAccountsProvisionedDataclassesToSupportedOnes
_setCloudKitAllowsMultipleAccounts
_removeMessagesFromGoogleSupportedDataclasses
_removeAIMAccounts
_addFacebookAndDAVLegacyAccountTypes
_changeFacebookAccountToLegacyAccountType
_addObsoleteAttributeToAccountTypes
_removeMessagesFromAOLSupportedDataclasses
_addiTunesStoreSandboxAccountType
_addLinkedInLegacyAccountType
_changeFacebookAndLinkedInAccountsToLegacyAccountTypes
_changeSocialAccountTypeObsoleteAttributes
_removeBTMMType
_switchAolAccountsToOAuth
_aolSupportsAuthentication
_removeRedundantDataclasses
saveWithError:
numberWithInt:
setVersion:
performBlockAndWait:
fetchObjectsForEntityNamed:
_dataclasses
name
_accountTypes
_accessKeys
_addAccountTypeWithIdentifier:displayName:visibility:supportedDataclasses:syncableDataclasses:credentialType:supportsAuthentication:supportsMultipleAccounts:
_addAccountTypeWithIdentifier:displayName:visibility:supportedDataclasses:syncableDataclasses:credentialType:supportsAuthentication:supportsMultipleAccounts:credentialProtectionPolicy:
insertNewObjectForEntityForName:inManagedObjectContext:
setIdentifier:
setAccountTypeDescription:
setVisibility:
setSupportsAuthentication:
setSupportsMultipleAccounts:
setSupportedDataclasses:
setSyncableDataclasses:
setCredentialProtectionPolicy:
_accountTypeWithIdentifier:
setName:
_addAccountTypeWithIdentifier:displayName:visibility:supportedDataclasses:credentialType:supportsAuthentication:supportsMultipleAccounts:
_dataclassWithName:
setWithObjects:
initWithObjects:
_accounts
supportsAuthentication
_addAccessKeyWithName:
_accessKeyWithName:
setWithArray:
setAccessKeys:
deleteObject:
supportedDataclasses
isEqualToSet:
syncableDataclasses
_ensureAccountTypeWithIdentifier:supportsDataclasses:syncsDataclasses:
_addCredentialType:toAccountType:supportsAuthentication:
setWithObject:
owningBundleID
setOwningBundleID:
allObjects
addObjectsFromArray:
setByAddingObject:
removeObject:
setProvisionedDataclasses:
setAccountType:
childAccounts
setObsolete:
objectID
URIRepresentation
provisionedAccounts
addProvisionedAccounts:
unionSet:
enabledAccounts
addEnabledAccounts:
supportedTypes
addSupportedTypes:
syncableTypes
addSyncableTypes:
provisionedDataclasses
enabledDataclasses
initWithDatabaseConnection:
updateDefaultContentIfNecessary:
_resultsForEntityNamed:
_switchYahooToPasswordAuthentication
_databaseConnection
integerValue
initWithDatabaseURL:storeOptions:
isFileURL
initWithManagedObjectModel:
_addPersistentStoreWithType:configuration:URL:options:error:
_shouldResetPersistentStoreAfterError:
UTF8String
_persistentStoreCoodinator_resetPersistentStoreCoordinatorWithError:
ac_isDiskFullSQLError
databaseURL
lastPathComponent
URLByDeletingLastPathComponent
URLByAppendingPathComponent:isDirectory:
_backupURL
_unverifiedBackupURL
defaultManager
createDirectoryAtURL:withIntermediateDirectories:attributes:error:
_performBackupToURL:unverifiedBackupURL:error:
removeItemAtURL:error:
path
fileExistsAtPath:
replacePersistentStoreAtURL:destinationOptions:withPersistentStoreFromURL:sourceOptions:storeType:error:
addPersistentStoreWithType:configuration:URL:options:error:
userInfo
initForDatabaseAtURL:persistentStoreCoordinator:storeOptions:
runReturningError:
ac_isUnrecoverableDatabaseError
restoreFromBackupReturningError:
_validateDatabaseAtURL:error:
moveItemAtURL:toURL:error:
managedObjectModel
null
destroyPersistentStoreAtURL:withType:options:error:
exceptionWithName:reason:userInfo:
initWithPersistentStoreCoordinator:
setDelegate:
class
self
performSelector:
performSelector:withObject:
performSelector:withObject:withObject:
isProxy
isKindOfClass:
isMemberOfClass:
conformsToProtocol:
respondsToSelector:
retain
release
autorelease
retainCount
zone
hash
superclass
debugDescription
databaseConnection:encounteredUnrecoverableError:
createConnection
initWithDatabaseURL:
performBackupReturningError:
resetReturningError:
_persistentStoreCoordinator
_storeOptions
_databaseURL
URLForResource:withExtension:
initWithContentsOfURL:
handleFailureInFunction:file:lineNumber:description:
intValue
synchronize
sharedPreferences
serverTimeoutInterval
reset
dictionaryRepresentation
numberWithUnsignedLongLong:
setClientBundleID:
allocWithZone:
copyWithZone:
setTimestamp:
setHasTimestamp:
hasTimestamp
hasAccountType
setAvoidUI:
setHasAvoidUI:
hasAvoidUI
setShouldForce:
setHasShouldForce:
hasShouldForce
hasClientBundleID
readFrom:
writeTo:
copyTo:
mergeFrom:
timestamp
avoidUI
shouldForce
clientBundleID
_timestamp
_accountType
_clientBundleID
_avoidUI
_shouldForce
_has
initWithChangeType:account:oldAccount:
changeWithChangeType:account:oldAccount:
changeType
account
oldAccount
_changeType
_account
_oldAccount
initWithFakeProxy:
remoteObjectProxy
remoteObjectProxyWithErrorHandler:
synchronousRemoteObjectProxyWithErrorHandler:
_proxy
callStackSymbols
initWithClient:databaseConnection:
connection
connectToRemoteAccountStoreUsingEndpoint:
initWithManagedAccountType:accountStore:
predicateWithFormat:
fetchObjectsForEntityNamed:withPredicate:
initWithManagedAccount:accountStore:
accountsFromRemoteDeviceProxy:completion:
countOfEntityNamed:withPredicate:
numberWithUnsignedInteger:
notificationsEnabled
accountNotifier
canRemoveAccount:inStore:error:
existingObjectWithURI:
_loadAllCachedProperties
_childAccountsForAccountWithID:
isMigrationInProgress
postWillChangeNotificationForType:inStore:newAccount:oldAccount:
type
_performDataclassActions:forAccount:error:
_clientTokenQueue
_removeClientTokenForAccountIdentifer:
dictionaryWithObject:forKey:
client
_delegate_accountStoreDidSaveAccount:
ac_secureCodingError
removeAllObjects
_accountWithIdentifier:
_setObjectID:
postDidChangeNotificationForType:inStore:newAccount:oldAccount:
sendCommand:withAccount:completion:
_isError
isPropertyDirty:
setEnabled:forDataclass:
enumerateKeysAndObjectsUsingBlock:
postWillPerformDataclassActionsOnAccount:forDataclasses:
dataclassOwnersManager
performDataclassActions:forAccount:withChildren:withError:
postDidPerformDataclassActionsOnAccount:forDataclasses:
_setAccountStore:
_addAccountNoSave:withDataclassActions:error:
fetchObjectsForEntityNamed:withPredicate:sortDescriptor:
validateRequiredAttributesForObject:error:
setValuesWithObject:
date
setDate:
_setAccountManagedObjectRelationships:withAccount:oldAccount:error:
reason
_commitOrRollbackDataclassActions:forAccount:originalEnabledDataclasses:
rollback
bundleID
_updateAccountNoSave:withDataclassActions:error:
setDirty:forProperty:
dataclassProperties
dirtyDataclassProperties
setValue:forKey:
_applyDirtyStateFromAccount:
_isDifferentFrom:
takeValuesFromModifiedAccount:
localizedDescription
_deleteAccountNoSave:withDataclassActions:error:
parentAccount
_displayAccountForAccount:
canSaveAccount:inStore:error:
supportsMultipleAccounts
accountsWithAccountType:options:error:
accountTypeDescription
persistentStoreCoordinator
managedObjectIDForURIRepresentation:
objectWithID:
parentAccountIdentifier
setParentAccount:
accountProperties
dirtyAccountProperties
deleteAccountPropertyWithKey:owner:
encryptAccountProperties
encryptProperty:
setAccountPropertyWithKey:value:owner:
setDataclassProperties:
_dataclassWithName:createIfNecessary:
wasProvisionedDataclassesReset
trackedProvisionedDataclasses
enumerateModificationsUsingBlock:
wasEnabledDataclassesReset
trackedEnabledDataclasses
setEnabledDataclasses:
authenticationType
setCredential:
hasEntitlement:
domain
_updateExistenceCacheOfAccountWithTypeIdentifier:withHandler:
delegate
accountStore:didSaveAccount:
_saveWithError:
markAllPropertiesDirty
setBundleID:
sortDescriptorWithKey:ascending:
_allAccounts_sync
_legacyCredentialForAccount:client:error:
credentialForAccount:client:store:handler:
initWithManagedCredentialItem:accountStore:
_credentialItemWithAccountIdentifier:serviceName:
accountIdentifier
setAccountStore:
serviceName
setObjectID:
performWithinPersonaForAccountIdentifier:withBlock:
saveWithError:rollbackOnFailure:
accountsWithAccountType:options:completion:
_accountsWithAccountType:options:error:
managedObjectIDForURI:
_predicateForFetchingAccountsWithManagedAccountTypeID:options:
arrayWithCapacity:
_canManagedAccountType:syncManagedDataclass:
_isManagedAccount:enabledForManagedDataclass:
intersectsSet:
accessKeys
accountsExistWithAccountTypeIdentifier:
_removeAccountNoSave:withDataclassActions:withError:
isObsolete
shouldPreventAccountCreationWithObsoleteAccountType
_canSaveAccount:error:
saveAccount:verify:dataclassActions:completion:
beginTransaction
numberWithDouble:
endTransaction
obsolete
isActive
isAuthenticated
_completeSave:dataclassActions:completion:
verifyCredentialsForAccount:saveWhenAuthorized:withHandler:
_lockForAccountType:
_handleAccountAdd:withDataclassActions:error:
_handleAccountMod:withDataclassActions:withError:
verifyCredentialsForAccount:accountStore:options:handler:
renewCredentialsForAccount:accountStore:options:completion:
accountTypeWithIdentifier:
handleAccessRequestToAccountsOfType:forClient:withOptions:store:allowUserInteraction:completion:
_requestAccessForAccountTypeWithIdentifier:options:allowUserInteraction:withHandler:
allAuthorizationsForAccountTypeWithIdentifier:
isGranted
clientWithBundleID:
revokeAccessToAccountsOfType:forClient:store:completion:
authorizeAccessToAccountsOfType:forClient:store:completion:
revokeAllAccessToAccountsOfType:store:withCompletion:
authorizationForClient:accountTypeWithIdentifier:
grantedPermissions
authorizationManager
removeAuthorizationForClient:accountType:
pathForResource:ofType:
initWithContentsOfFile:
setAccountsWithAccountTypeIdentifier:exist:
setCountOfAccounts:withAccountTypeIdentifier:
preloadDataclassOwnersWithError:
actionsForEnablingDataclass:onAccount:withError:
actionsForDisablingDataclass:onAccount:withError:
allModifications
_actionForError:
actionsForDeletingAccount:affectingDataclass:withError:
isPerformingDataclassActionsForAccount:
absoluteString
isPushSupportedForAccount:
discoverPropertiesForAccount:accountStore:options:completion:
_clientTokenForAccountIdentifier:error:
compare:options:
substringFromIndex:
setLastCredentialRenewalRejectionDate:
setAuthenticated:
saveVerifiedAccount:error:
remoteAccountStoreSession
authenticationDialogManager
openAuthenticationURL:forAccount:shouldConfirm:completion:
openAuthenticationURLForAccount:withDelegateClassName:fromBundleAtPath:shouldConfirm:completion:
setWithSet:
setTrackedEnabledDataclasses:
setTrackedProvisionedDataclasses:
notifyRemoteDevicesOfModifiedAccount:withChangeType:completion:
sendCommand:withAccount:options:completion:
keychainVersion
migrateAllKeychainItems
setKeychainVersion:
unsignedIntegerValue
numberWithUnsignedLong:
unsignedIntValue
landmarkEventForAccountType:count:
databaseBackupActivity
scheduleBackupIfNonexistent
setClientBundleID:withHandler:
setNotificationsEnabled:
accountsWithHandler:
accountTypesWithHandler:
accountWithIdentifier:handler:
accountsWithAccountType:handler:
parentAccountForAccountWithIdentifier:handler:
childAccountsForAccountWithIdentifier:handler:
accountIdentifiersEnabledToSyncDataclass:handler:
accountIdentifiersEnabledForDataclass:handler:
accountExistsWithDescription:completion:
kerberosAccountsForDomainFromURL:completion:
visibleTopLevelAccountsWithAccountTypeIdentifiers:completion:
accountsWithAccountTypeIdentifiers:preloadedProperties:completion:
accountsOnPairedDeviceWithAccountType:handler:
childAccountsWithAccountTypeIdentifier:parentAccountIdentifier:handler:
displayAccountTypeForAccountWithIdentifier:handler:
accountTypeWithIdentifier:handler:
credentialForAccountWithIdentifier:handler:
credentialForAccount:serviceID:handler:
setCredential:forAccount:serviceID:completion:
credentialItemsWithCompletion:
credentialItemForAccount:serviceName:completion:
insertCredentialItem:completion:
saveCredentialItem:completion:
removeCredentialItem:completion:
enabledDataclassesForAccountWithIdentifier:handler:
provisionedDataclassesForAccountWithIdentifier:handler:
dataclassesWithHandler:
supportedDataclassesForAccountType:handler:
syncableDataclassesForAccountType:handler:
preloadDataclassOwnersWithCompletion:
dataclassActionsForAccountSave:completion:
dataclassActionsForAccountDeletion:completion:
isPerformingDataclassActionsForAccount:completion:
accessKeysForAccountType:handler:
removeAccount:withDataclassActions:completion:
canSaveAccount:completion:
saveAccount:withHandler:
updateExistenceCacheOfAccountWithTypeIdentifier:withHandler:
insertAccountType:withHandler:
removeAccountType:withHandler:
requestAccessForAccountTypeWithIdentifier:options:withHandler:
appPermissionsForAccountType:withHandler:
setPermissionGranted:forBundleID:onAccountType:withHandler:
permissionForAccountType:withHandler:
grantedPermissionsForAccountType:withHandler:
clearGrantedPermissionsForAccountType:withHandler:
typeIdentifierForDomain:withHandler:
clearAllPermissionsGrantedForAccountType:withHandler:
verifyCredentialsForAccount:options:completion:
isTetheredSyncingEnabledForDataclass:completion:
tetheredSyncSourceTypeForDataclass:completion:
isPushSupportedForAccount:completion:
accountIdentifiersEnabledForDataclasses:withAccountTypeIdentifiers:completion:
handleURL:
addClientToken:forAccountIdentifier:completion:
clientTokenForAccountIdentifier:completion:
discoverPropertiesForAccount:options:completion:
notifyRemoteDevicesOfModifiedAccount:withChangeType:
saveAccount:toPairedDeviceWithOptions:completion:
removeAccountsFromPairedDeviceWithCompletion:
triggerKeychainMigrationIfNecessary:
reportTelemetryForLandmarkEvent:
scheduleBackupIfNonexistent:
accountsWithAccountTypeIdentifier:
addAccountNoSave:error:
updateAccountNoSave:error:
deleteAccountNoSave:error:
masterCredentialForAccountIdentifier:
_accountsWithAcountType:error:
saveAccount:pid:verify:dataclassActions:completion:
longLivedRemoteAccountStoreSession
setClient:
remoteDeviceProxy
setRemoteDeviceProxy:
databaseConnection
authenticationPluginManager
setAuthenticationPluginManager:
accessPluginManager
setAccessPluginManager:
setDataclassOwnersManager:
setAuthenticationDialogManager:
setAccountNotifier:
setDatabaseBackupActivity:
setMigrationInProgress:
_accountChanges
_authorizationManager
_fakeRemoteAccountStoreSession
_notificationsEnabled
_migrationInProgress
_delegate
_client
_remoteDeviceProxy
_authenticationPluginManager
_accessPluginManager
_dataclassOwnersManager
_authenticationDialogManager
_accountNotifier
_databaseBackupActivity
dirtyProperties
enumerateObjectsUsingBlock:
pluginBundlesAtSubpath:
preflightAndReturnError:
initWithBundle:
ac_mapNullable:
initWithNotificationEntries:
_pluginsRegisteredForAccount:
principalObjectRespondsToSelector:
principalObject
canSaveAccount:inStore:
canRemoveAccount:inStore:
_pluginsRegisteredForNewAccount:oldAccount:
account:willChangeWithType:inStore:oldAccount:
account:didChangeWithType:inStore:oldAccount:
account:willPerformActionsForDataclasses:
account:didPerformActionsForDataclasses:
arrayByAddingObject:
_unsafe_pluginsRegisteredForAccount:
makeObjectsPerformSelector:
supportedAccountTypes
predicateWithBlock:
initWithType:subpredicates:
filteredArrayUsingPredicate:
_unsafe_pluginsRegisteredForNewAccount:oldAccount:
_provisionedDataclassesForNewAccount:oldAccount:
setByAddingObjectsFromSet:
allNotificationEntries
addNotificationEntry:
removeAllNotificationEntries
notificationEntries
_notificationEntryQueue
_notificationEntries
alloc
allKeychainItems
migrateKeychainItem:
_validateKeychainItemClass:
_migrateUUIDKeychainItems:
save:
service
accessibility
setAccessibility:
setAccount:
_keychainItemsForAccount:accountTypeIdentifiers:
_keychainItemFromAttributesArray:
indexesOfObjectsPassingTest:
objectsAtIndexes:
initWithPersistentRef:properties:
_keychainItemFromAttributes:
stringByAppendingPathComponent:
fileURLWithPath:
URLByAppendingPathComponent:
hasSuffix:
getResourceValue:forKey:error:
bundleWithURL:
_accountsPluginDirectoryURL:
arrayWithObjects:
enumeratorAtURL:includingPropertiesForKeys:options:errorHandler:
nextObject
_validatedBundleAtURL:
bundlePath
objectForInfoDictionaryKey:
_currentSystemVersion
_buildPluginCache
pluginWithName:inSubpath:
pluginForIdentifier:subpath:
initWithInitializer:
initWithCoder:
initWithObjects:count:
_initializationLock
_initializationBlock
_underlyingArray
_reloadProperties
initWithDictionary:
dealloc
_clearDirtyProperties
_modifiedProperties
_metadataWithError:
metadata
_setValue:forProperty:
accessGroup
synchronizable
_setMetadata:withError:
data
setMetadata:
_markPropertyDirty:
objectsForKeys:notFoundMarker:
dictionaryWithObjects:forKeys:
initWithPersistentRef:
reload
accessControlRef
setService:
setAccessGroup:
setSynchronizable:
persistentRef
_properties
_dirtyProperties
_persistentRef
UUID
UUIDString
_whitelistedClasses
unarchivedObjectOfClasses:fromData:error:
_invalidateCachedData
archivedDataWithRootObject:requiringSecureCoding:error:
success
error
sentMessageIdentifier
needsReply
command
initWithData:
_setPayloadObject:forKey:
_payloadObjectForKey:
setNeedsReply:
setIsReply:
isReply
_payload
_data
_needsReply
_isReply
_identifier
_loadCachedPropertiesWithoutCredentials
options
actionMessageWithCommand:account:options:
replyForMessage:withSuccess:result:error:
result
replyForMessage:withSuccess:error:
numberWithUnsignedInt:
setResult:
setHasResult:
hasResult
_result
initWithMaximum:inTimeInterval:
_authenticationTypeForAccount:
_pluginForAuthenticationType:
credentialForAccount:client:
credentialForAccount:client:error:
credentialForAccount:client:store:error:
_unsanitizeOptionsDictionary:
_authCapableParentAccountForAccount:
accountByCleaningThirdPartyTransformations
_sanitizeError:
_handleVerificationCompletionForAccount:verifiedAccount:error:store:shouldSave:
verifyCredentialsForAccount:accountStore:options:completion:
verifyCredentialsForAccount:accountStore:completion:
verifyCredentialsForAccount:client:withHandler:
renewCredentialsBeginForAccountType:avoidUI:shouldForce:requestedBy:
renewalIDsForAccount:accountStore:options:
renewalIDForAccount:
_renewalRequestIsWithinLimitsForAccount:accountStore:
_handleRenewalCompletionResult:forAccount:renewalID:accountStore:error:
renewCredentialsForAccount:accountStore:reason:completion:
lastCredentialRenewalRejectionDate
timeIntervalSinceDate:
reservePerformActionForKey:
maximum
timeInterval
triggerAutoBugCaptureWithType:subType:subtypeContext:detectedProcess:
_descriptionForRenewalResult:
renewCredentialsEndForAccountType:result:
_handleDiscoveryCompletionResult:forAccount:discoveryID:accountStore:shouldSave:error:
loadAndReturnError:
principalClass
_verificationHandlerQueues
_renewalHandlerQueues
_discoveryHandlerQueues
_renewalRateLimiter
_keysForRateExceededBugSent
_verificationHandlersLock
_renewalHandlersLock
_discoveryHandlersLock
_authenticationPluginsByType
_authenticationPluginQueue
renewalRateLimiter
setRenewalRateLimiter:
_propertyForKey:
setConsumerKey:
setConsumerSecret:
ckForAccountType:
csForAccountType:
initWithCredential:
signedURLRequestWithRequest:applicationID:timestamp:
initWithManagedAccountType:
adamOrDisplayID
_permissionGrantedForBundleID:onAccountType:
_signedRequest:withAccountObject:applicationID:timestamp:
authorizationForClient:accountType:
setShouldIncludeAppIdInRequest:
signURLRequest:withAccount:callingPID:timestamp:handler:
signURLRequest:withAccount:applicationID:timestamp:handler:
signedRequest:withAccount:applicationID:timestamp:
_shouldIncludeAppIdInRequest
initWithService:
addDelegate:queue:
_isValidCommandForOutgoingMessage:
_priorityForMessageCarryingCommand:
_sendMessageData:toDestination:withPriority:bypassDuet:transportID:error:
devices
_enqueueCompletionHandler:forMessageWithInternalID:transportID:
sendData:toDestinations:priority:options:identifier:error:
_dequeueCompletionHandlersForMessageWithTransportID:success:result:error:
_dequeueCompletionHandlersForMessageWithInternalID:success:result:error:
_sendReplyForMessage:withSuccess:result:error:
service:account:incomingOpportunisticData:withIdentifier:fromID:context:
service:didSendOpportunisticDataWithIdentifier:toIDs:
service:account:incomingMessage:fromID:context:
service:account:incomingData:fromID:context:
service:account:incomingUnhandledProtobuf:fromID:context:
service:account:incomingResourceAtURL:fromID:context:
service:account:incomingResourceAtURL:metadata:fromID:context:
service:account:incomingPendingMessageOfType:fromID:context:
service:activeAccountsChanged:
service:devicesChanged:
service:nearbyDevicesChanged:
service:connectedDevicesChanged:
service:account:identifier:didSendWithSuccess:error:
service:account:identifier:didSendWithSuccess:error:context:
service:account:identifier:sentBytes:totalBytes:
service:account:identifier:hasBeenDeliveredWithContext:
service:account:identifier:fromID:hasBeenDeliveredWithContext:
service:account:inviteReceivedForSession:fromID:
service:account:inviteReceivedForSession:fromID:withOptions:
service:account:inviteReceivedForSession:fromID:withContext:
service:account:receivedGroupSessionParticipantUpdate:
service:account:receivedGroupSessionParticipantDataUpdate:
serviceSpaceDidBecomeAvailable:
serviceAllowedTrafficClassifiersDidReset:
service:didSwitchActivePairedDevice:acknowledgementBlock:
_messageSendingService
_messageSendingQueue
_commandProcessingQueue
_remoteCommandHandler
_completionHandlersByInternalMessageID
_internalMessageIDsByTransportID
_completionHandlersLock
anonymousListener
initWithAccountStoreListener:oauthSignerListener:authenticationDialogListener:
isMigrationFinished
_beginObservingMigrationDidFinishDarwinNotifications
_signalDeferredConnectionResumeQueueSemaphore
writeMigrationVersionPref
invalidate
_beginObservingIDSProxyNotifications
_beginObservingLanguageChangeNotfication
enableTransactions
resume
checkInIfNecessary
sharedAccountSyncServer
setupAccountSync
_endObservingLanguageChangeNotification
_endObservingMigrationDidFinishDarwinNotifications
suspend
clientProvider
createClientForConnection:
database
_keyForConnection:
valueWithNonretainedObject:
createDatabaseConnection
initWithBackingAccountStore:
_newDaemonAccountStoreFilterForClient:
accountCredentialsDidChangeForAccountWithIdentifier:
interfaceWithProtocol:
setRemoteObjectInterface:
XPCInterface
setExportedInterface:
setExportedObject:
setInvalidationHandler:
setInterruptionHandler:
backingAccountStore
exportedObject
_newOAuthSignerForClient:
contextForAuthenticationDialog:
authenticationDialogDidFinishWithSuccess:response:
authenticationDialogCrashed
notificationCenterForType:
postNotificationName:object:userInfo:
listener:shouldAcceptNewConnection:
start
shutdown
clientForConnection:
_handleLanguageChangedDarwinNotification
accountStoreListener
oauthSignerListener
authenticationDialogListener
setClientProvider:
setDatabase:
_propertyLock
_accountStoreClients
_oauthSignerClients
_authenticationDialogManagerClients
_clientsByConnection
_deferredConnectionResumeQueue
_deferredConnectionResumeQueueSemaphore
_performMigrationQueue
_accountStoreListener
_oauthSignerListener
_authenticationDialogListener
_clientProvider
_database
_authorizationPluginForAccountType:
bundleURL
supportsAccountTypeWithIdentifier:
_accessPlugins
_accessPluginQueue
initWithConnection:
processIdentifier
initWithBytes:length:encoding:
containingAppForPlugInWithPid:
_bundleForNonPlugInPID:
bundleIdentifier
applicationProxyForIdentifier:
_bundleIDForPID:
_displayNameFromLaunchServicesForPID:
_displayNameFromBundleInfoDictionaryForPID:
localizedName
_bundleForPID:
applicationProxyForBundleURL:
localizedNameForContext:
localizedInfoDictionary
valueForEntitlement:
hasPrefix:
localizedAppName
bundle
_connection
_bundle
_bundleID
_didManuallySetBundleID
_pid
_localizedAppName
_name
_entitlementChecks
TCCStateForClient:accountTypeID:
initForClient:
_setFromCSVString:
setGrantedPermissions:
setOptions:
TCCSupportedForAccountTypeID:
setIsGranted:
setTCCStateForClient:accountTypeID:toGranted:
_csvStringFromSet:
objectForObjectURI:
removeAuthorizationForClient:accountTypeWithIdentifier:
clearTCCStateForClient:accountTypeID:
allTCCStatesForAccountTypeID:
removeAllClientAuthorizationsForAccountTypeWithIdentifier:
clearAllTCCStatesForAccountTypeID:
setAuthorization:forClient:onAccountType:
allAuthorizationsForAccountType:
removeAllClientAuthorizationsForAccountType:
_didFetchAccounts:error:
_synchronizationQueue
_accountsIsValid
_completions
setAccountCount:
_setupManagedObjectContextWithPersistentStoreCoodinator:
_beginObservingManagedObjectContextDidSaveNotifications
_endObservingManagedObjectContextDidSaveNotifications
_persistentStore
persistentStores
entityForName:inManagedObjectContext:
setEntity:
setReturnsObjectsAsFaults:
setPredicate:
arrayWithObject:
setSortDescriptors:
executeFetchRequest:error:
_handleManagedObjectContextError:
existingObjectWithID:error:
deletedObjects
countForFetchRequest:error:
_accountPropertyWithKey:owner:
removeCustomPropertiesObject:
addCustomPropertiesObject:
initWithConcurrencyType:
initWithMergeType:
setMergePolicy:
setPersistentStoreCoordinator:
_delegate_databaseConnectionEncounteredUnrecoverableError:
defaultCenter
_managedObjectContextDidSave:
addObserverForName:object:queue:usingBlock:
object
mergeChangesFromContextDidSaveNotification:
performBlock:
removeObserver:
_managedObjectModel
_managedObjectContextDidSaveObserver
_managedObjectContext
setHasAccountCount:
hasAccountCount
accountCount
_accountCount
setUrl:
confirmationRequired
setConfirmationRequired:
authDelegateClassName
setAuthDelegateClassName:
authDelegateClassBundlePath
setAuthDelegateClassBundlePath:
completion
setCompletion:
_confirmationRequired
_url
_authDelegateClassName
_authDelegateClassBundlePath
_completion
_launchDialogContainerAppForAccount:shouldConfirm:completion:
_confirmUserWantsToOpenAuthenticationURLForAccount:
sharedService
openApplication:options:withResult:
_dialogRequestQueues
_activeAccountID
initWithData:encoding:
_migrateKeychainItemIfNecessary:
_knownMigratedKeychainItems
_isKnownMigratedKeychainItem:
_addKnownMigratedKeychainItem:
_isGranted
_grantedPermissions
_options
_registerActivityIfNeededSchedulingBackup:
_registerActivitySchedulingBackup:
activityCriteria
scheduleBackup
initWithDatabase:
registerActivityIfNeeded
_xpcActivityPending
_activityExecutionCriteria
_queue
_setUpContextForMigration
_versionForModel:
_migrateAccessAuthorizationsToTCCFromModelVersion:
_migrateNameAttributeOfDataclassEntities
_migrateOptionsAttributeOfAuthorizatinEntitiesFromModelVersion:
_postProcessMigrationFromVersion:migrationData:
_fetchAllAuthorizationEntitiesForModelVersion:
initForReadingFromData:error:
decodeObjectOfClasses:forKey:
finishDecoding
_fetchAllDataclassEntitles
_compatibleModelForStoreAtURL:
metadataForPersistentStoreOfType:URL:options:error:
pathsForResourcesOfType:inDirectory:
isConfiguration:compatibleWithStoreMetadata:
pathForResource:ofType:inDirectory:
versionIdentifiers
anyObject
setKey:
setValue:
setOwner:
storeOptions
_migrationContext
_privateCoordinator
_TCCServiceForAccountTypeID:
numberWithUnsignedChar:
_accessGrantedForClient:onAccountTypeID:
_whiteList
_wildCardAuthorizationMatchingForAccountTypeIdentifier:
_appPermissionsForAccountTypeIdentifier:
evaluateWithObject:
_isClientPermittedToAccessAccountTypeWithIdentifier:
_isClientPermittedToAccessAccount:
_isClientPermittedToRemoveAccount:
_clientHasPermissionToAddAccount:
ac_filter:
_accessGrantedForBundleID:onAccountTypeID:
_backingAccountStore
_dataclassOwnersManagerConnection
actionsForAddingAccount:affectingDataclass:completion:
actionsForDeletingAccount:affectingDataclass:completion:
actionsForEnablingDataclass:onAccount:completion:
actionsForDisablingDataclass:onAccount:completion:
performDataclassActions:forAccount:withChildren:completion:
initWithServiceName:
actionsForAddingAccount:affectingDataclass:withError:
_connectionLock
setClasses:forSelector:argumentIndex:ofReply:
allCredentialItems
_activityQueue_checkIn
performWithinPersona:withBlock:
_activityQueue_queueCredentialItemWithAccount:serviceName:
_activityQueue_configureXPCActivityWithCriteria:
dateWithTimeIntervalSinceNow:
credentialItemForAccount:serviceName:
setExpirationDate:
saveCredentialItem:withCompletionHandler:
initWithAccountIdentifier:serviceName:
setPersistent:
insertCredentialItem:withCompletionHandler:
_activityQueue_registerXPCActivityWithCriteria:
numberWithLong:
_activityQueue_removeExpiredCredentials
_removeExpiredCredentials
_activityQueue_unregisterActivity
_activityQueue_removeCredentialItem:withCompletionHandler:
isExpired
expirationDate
removeCredentialItem:withCompletionHandler:
_xpcActivity
_activityQueue
checkCircleState
accountSyncUnsupportedTypes
accountSyncSupportedTypes
isDataSeparatedAccount
accountSyncPropertiesForAccount:
initWithEffectiveBundleID:
registerForNotifications
scheduleSync
compare:
markMigrated
getiOSVersion
accountChanges:
addObserver:selector:name:object:
detectDuchess
processAdds
processDeletes
createKeychainItems:
processHostnameAdds
processHostnameDeletes
createAccounts:
deleteAccounts:
localAccounts
remoteAccounts
primaryiCloudAccount
getAccountsOfType:
initWithAccountType:
setUsername:
setAccountDescription:
setProvisioned:forDataclass:
setActive:
accountPropertiesFromDictionary:forType:
setAccountProperties:
unsupportedType:
supportedType:
remoteHostnameAccounts
localHostnameAccounts
duchessHostnames
arrayWithArray:
smtpAccounts
postNotificationFor:
isDataclassActionRequired:
actionWithType:
queueSync
scheduledTimerWithTimeInterval:target:selector:userInfo:repeats:
locallyMigrated
fixSMTP
fixLDAP
migrate
sync
ldapAccounts
removeAccount:withCompletionHandler:
isMigrated
rangeOfString:options:
substringToIndex:
URLWithString:
kvsChanges:
setiOSVersion
_circleToken
_keychainToken
_timer
_syncQueue
_enabled
_duchessEnabled
_store
instancesRespondToSelector:
_principalObject
_supportedAccountTypes
_supportedDataclasses
_fetchedFlags
initWithArray:
endpoint
testServer
startTestServer
stopTestServer
remoteAccountStoreEndpoint
remoteOAuthSignerEndpoint
@16@0:8
v48@0:8@16@24@32@?40
v24@0:8@?16
v40@0:8@16@24@?32
v32@0:8@16@?24
@24@0:8@16
v16@0:8
@"ACAccountStore"
v24@0:8@16
@40@0:8@16@24^@32
@32@0:8@16@24
@68@0:8@16@24@32@40B48@52^@60
v32@0:8@16@24
v32@0:8@16^@24
v40@0:8@16@24^@32
v44@0:8@16@24B32^@36
v48@0:8@16@24@32^@40
v80@0:8@16@24@32@40@48@56@64^@72
B72@0:8@16@24@32@40@48@56^@64
@48@0:8@16@24@32@40
v40@0:8@16@24@32
@56@0:8@16@24@32@40^@48
B24@0:8@16
v80@0:8@16@24@32@40@48B56B60@64^@72
v72@0:8@16@24@32@40@48B56B60^@64
B56@0:8@16@24@32@40^@48
B48@0:8@16@24@32^@40
B24@0:8^@16
B64@0:8@16@24@32@40@48^@56
B32@0:8@16@24
B16@0:8
v56@0:8@16@24@32@40@?48
@"NSMutableDictionary"
@60@0:8@16@24i32@36@44B52B56
@68@0:8@16@24i32@36@44@52B60B64
@76@0:8@16@24i32@36@44@52B60B64@68
v36@0:8@16@24B32
@"ACDDatabaseConnection"
@"NSArray"
#16@0:8
@24@0:8:16
@32@0:8:16@24
@40@0:8:16@24@32
B24@0:8#16
B24@0:8:16
Vv16@0:8
Q16@0:8
^{_NSZone=}16@0:8
B24@0:8@"Protocol"16
@"NSString"16@0:8
v32@0:8@"ACDDatabaseConnection"16@"NSError"24
@"ACDDatabaseConnection"16@0:8
B40@0:8@16@24^@32
B32@0:8@16^@24
@"NSPersistentStoreCoordinator"
@"NSDictionary"
@"NSURL"
d16@0:8
@24@0:8^{_NSZone=}16
v24@0:8Q16
v20@0:8B16
@"NSString"
{?="timestamp"b1"avoidUI"b1"shouldForce"b1}
@36@0:8i16@20@28
i16@0:8
@"ACAccount"
@24@0:8@?16
@"NSObject"
v40@0:8@16Q24@?32
v44@0:8@16B24@28@?36
v44@0:8@16@24B32@?36
v52@0:8@16@24@32B40@?44
v32@0:8@"NSString"16@?<v@?B@"NSError">24
v24@0:8@?<v@?@"NSArray"@"NSError">16
v32@0:8@"NSString"16@?<v@?@"ACAccount"@"NSError">24
v32@0:8@"ACAccountType"16@?<v@?@"NSArray"@"NSError">24
v40@0:8@"ACAccountType"16Q24@?<v@?@"NSArray"@"NSError">32
v32@0:8@"NSString"16@?<v@?@"NSArray"@"NSError">24
v32@0:8@"NSURL"16@?<v@?@"NSArray"@"NSError">24
v32@0:8@"NSArray"16@?<v@?@"NSArray"@"NSError">24
v40@0:8@"NSArray"16@"NSArray"24@?<v@?@"NSArray"@"NSError">32
v40@0:8@"NSString"16@"NSString"24@?<v@?@"NSArray"@"NSError">32
v32@0:8@"NSString"16@?<v@?@"ACAccountType"@"NSError">24
v32@0:8@"NSString"16@?<v@?@"ACAccountCredential"@"NSError">24
v40@0:8@"ACAccount"16@"NSString"24@?<v@?@"ACAccountCredential"@"NSError">32
v48@0:8@"ACAccountCredential"16@"ACAccount"24@"NSString"32@?<v@?B@"NSError">40
v40@0:8@"ACAccount"16@"NSString"24@?<v@?@"ACCredentialItem"@"NSError">32
v32@0:8@"ACCredentialItem"16@?<v@?@"ACCredentialItem"@"NSError">24
v32@0:8@"ACCredentialItem"16@?<v@?@"NSURL"@"NSError">24
v32@0:8@"ACCredentialItem"16@?<v@?B@"NSError">24
v32@0:8@"NSString"16@?<v@?@"NSSet"@"NSError">24
v32@0:8@"ACAccountType"16@?<v@?@"NSSet"@"NSError">24
v24@0:8@?<v@?@"NSError">16
v32@0:8@"ACAccount"16@?<v@?@"NSDictionary"@"NSError">24
v32@0:8@"ACAccount"16@?<v@?B@"NSError">24
v40@0:8@"ACAccount"16@"NSDictionary"24@?<v@?B@"NSError">32
v32@0:8@"ACAccount"16@?<v@?@"NSURL"@"NSError">24
v44@0:8@"ACAccount"16B24@"NSDictionary"28@?<v@?@"NSURL"@"NSError">36
v32@0:8@"NSString"16@?<v@?@"NSNumber"@"NSError">24
v32@0:8@"ACAccountType"16@?<v@?@"ACAccountType"@"NSError">24
v32@0:8@"ACAccountType"16@?<v@?@"NSNumber"@"NSError">24
v40@0:8@"NSString"16@"NSDictionary"24@?<v@?@"NSNumber"@"NSError">32
v32@0:8@"ACAccountType"16@?<v@?@"NSDictionary"@"NSError">24
v48@0:8@"NSNumber"16@"NSString"24@"ACAccountType"32@?<v@?@@"NSError">40
v32@0:8@"ACAccountType"16@?<v@?@"NSError">24
v32@0:8@"NSString"16@?<v@?@"NSString"@"NSError">24
v32@0:8@"ACAccountType"16@?<v@?@@"NSError">24
v40@0:8@"ACAccount"16@"NSDictionary"24@?<v@?@"ACAccount"@"NSError">32
v40@0:8@"ACAccount"16@"NSDictionary"24@?<v@?@"NSNumber"@"NSError">32
v24@0:8@"NSURL"16
v40@0:8@"NSString"16@"NSString"24@?<v@?B@"NSError">32
v44@0:8@"NSURL"16@"ACAccount"24B32@?<v@?B@"NSError">36
v52@0:8@"ACAccount"16@"NSString"24@"NSString"32B40@?<v@?B@"NSDictionary"@"NSError">44
v32@0:8@"ACAccount"16@"NSString"24
v40@0:8@"ACAccount"16@"NSString"24@?<v@?B@"NSError">32
v24@0:8@?<v@?B@"NSError">16
@40@0:8@16@24@32
@28@0:8@16B24
@32@0:8@16^@24
@40@0:8@16Q24^@32
@32@0:8@16Q24
v52@0:8@16@24B32@36@?44
@"NSMutableArray"
@"ACDClientAuthorizationManager"
@"ACDFakeRemoteAccountStoreSession"
@"<ACDAccountStoreDelegate>"
@"ACDClient"
@"ACRemoteDeviceProxy"
@"ACDAuthenticationPluginManager"
@"ACDAccessPluginManager"
@"ACDDataclassOwnersManager"
@"ACDAuthenticationDialogManager"
@"ACDAccountNotifier"
@"ACDDatabaseBackupActivity"
B44@0:8i16@20@28@36
v44@0:8i16@20@28@36
@"NSObject<OS_dispatch_queue>"
@32@0:8r^@16Q24
@24@0:8Q16
{os_unfair_lock_s="_os_unfair_lock_opaque"I}
@24@0:8r^{__CFData=}16
@32@0:8r^{__CFData=}16@24
^{__SecAccessControl=}16@0:8
@24@0:8^@16
q16@0:8
v24@0:8q16
r^{__CFData=}16@0:8
@"NSMutableSet"
r^{__CFData=}
@"NSData"
@44@0:8@16B24@28@36
@36@0:8@16B24@28
v20@0:8I16
I16@0:8
{?="timestamp"b1"result"b1}
@48@0:8@16@24@32^@40
v48@0:8@"ACAccount"16@"ACDAccountStore"24@"NSDictionary"32@?<v@?@"ACAccount"@"NSError">40
v48@0:8@"ACAccount"16@"ACDAccountStore"24@"NSDictionary"32@?<v@?q@"NSError">40
B24@0:8@"ACAccount"16
@"ACAccountCredential"48@0:8@"ACAccount"16@"ACDClient"24@"ACDAccountStore"32^@40
@"NSString"24@0:8@"ACAccount"16
@"NSArray"40@0:8@"ACAccount"16@"ACDAccountStore"24@"NSDictionary"32
v48@0:8@"ACAccount"16@"ACDAccountStore"24@"NSString"32@?<v@?q@"NSError">40
v40@0:8@"ACAccount"16@"ACDClient"24@?<v@?@"ACAccount"@"NSError">32
@"ACAccountCredential"32@0:8@"ACAccount"16@"ACDClient"24
@"ACAccountCredential"40@0:8@"ACAccount"16@"ACDClient"24^@32
v40@0:8@"ACAccount"16@"ACDAccountStore"24@?<v@?@"ACAccount"@"NSError">32
v52@0:8@16@24@32@40B48
v56@0:8q16@24@32@40@48
v60@0:8@16@24@32@40B48@52
@24@0:8q16
@"ACDQueueDictionary"
@"ACRateLimiter"
@"NSLock"
v56@0:8@"NSURLRequest"16@"ACAccount"24@"NSNumber"32@"NSDate"40@?<v@?@"NSURLRequest"@"NSError">48
v56@0:8@"NSURLRequest"16@"ACAccount"24@"NSString"32@"NSDate"40@?<v@?@"NSURLRequest"@"NSError">48
v64@0:8@16@24@32@40@48@56
v56@0:8@16@24@32@40@48
v56@0:8@16@24q32@40@48
v52@0:8@16@24@32B40@44
v60@0:8@16@24@32B40@44@52
v56@0:8@16@24@32q40q48
v48@0:8@16@24@32@40
v64@0:8@"IDSService"16@"IDSAccount"24@"NSData"32@"NSString"40@"NSString"48@"IDSMessageContext"56
v40@0:8@"IDSService"16@"NSString"24@"NSArray"32
v56@0:8@"IDSService"16@"IDSAccount"24@"NSDictionary"32@"NSString"40@"IDSMessageContext"48
v56@0:8@"IDSService"16@"IDSAccount"24@"NSData"32@"NSString"40@"IDSMessageContext"48
v56@0:8@"IDSService"16@"IDSAccount"24@"IDSProtobuf"32@"NSString"40@"IDSMessageContext"48
v56@0:8@"IDSService"16@"IDSAccount"24@"NSURL"32@"NSString"40@"IDSMessageContext"48
v64@0:8@"IDSService"16@"IDSAccount"24@"NSURL"32@"NSDictionary"40@"NSString"48@"IDSMessageContext"56
v56@0:8@"IDSService"16@"IDSAccount"24q32@"NSString"40@"IDSMessageContext"48
v32@0:8@"IDSService"16@"NSSet"24
v32@0:8@"IDSService"16@"NSArray"24
v52@0:8@"IDSService"16@"IDSAccount"24@"NSString"32B40@"NSError"44
v60@0:8@"IDSService"16@"IDSAccount"24@"NSString"32B40@"NSError"44@"IDSMessageContext"52
v56@0:8@"IDSService"16@"IDSAccount"24@"NSString"32q40q48
v48@0:8@"IDSService"16@"IDSAccount"24@"NSString"32@40
v56@0:8@"IDSService"16@"IDSAccount"24@"NSString"32@"NSString"40@48
v48@0:8@"IDSService"16@"IDSAccount"24@"IDSSession"32@"NSString"40
v56@0:8@"IDSService"16@"IDSAccount"24@"IDSSession"32@"NSString"40@"NSDictionary"48
v56@0:8@"IDSService"16@"IDSAccount"24@"IDSSession"32@"NSString"40@"NSData"48
v40@0:8@"IDSService"16@"IDSAccount"24@"IDSGroupSessionParticipantUpdate"32
v24@0:8@"IDSService"16
v40@0:8@"IDSService"16@"IDSDevice"24@?<v@?>32
B60@0:8@16@24q32B40^@44^@52
v44@0:8@16B24@28@36
v40@0:8@?16@24@32
q24@0:8@16
@"IDSService"
@"ACRemoteCommandHandler"
v24@0:8@"NSString"16
v28@0:8B16@20
v24@0:8@?<v@?@"NSURL"@"NSString"@"NSString"@"NSString"@"NSString">16
v28@0:8B16@"NSDictionary"20
v32@0:8@"ACDAccountStore"16@"ACAccount"24
B32@0:8@"NSXPCListener"16@"NSXPCConnection"24
@"NSObject<OS_dispatch_semaphore>"
@"NSXPCListener"
@"<ACDClientProviderProtocol>"
@"<ACDDatabaseProtocol>"
v60@0:8@16@24@32@40B48@?52
@"NSSet"
@20@0:8i16
^{__CFBundle=}16@0:8
@"NSXPCConnection"
^{__CFBundle=}
@"NSNumber"
v40@0:8@16B24B28@32
v28@0:8@16I24
Q32@0:8@16@24
B28@0:8^@16B24
@"<NSObject>"
@"NSManagedObjectContext"
@"<ACDDatabaseConnectionDelegate>"
{?="timestamp"b1"accountCount"b1}
@?16@0:8
v36@0:8@16B24@?28
v64@0:8@16@24@32@40@48^@56
@"NSObject<OS_xpc_object>"
@"ACDDatabase"
v32@0:8q16@24
i32@0:8@16@24
B36@0:8@16@24B32
^{__CFString=}24@0:8@16
@"ACDAccountStore"
v24@0:8^@16
v40@0:8@"ACAccount"16@"NSString"24@?<v@?@"NSArray"@"NSError">32
v40@0:8@"NSString"16@"ACAccount"24@?<v@?@"NSArray"@"NSError">32
v48@0:8@"NSDictionary"16@"ACAccount"24@"NSArray"32@?<v@?B@"NSError">40
@"ACDClient"24@0:8@"NSXPCConnection"16
@"NSTimer"
@"NSSet"16@0:8
{?="principalObject"b1"supportedAccountTypes"b1"supportedDataclasses"b1}
@"NSBundle"
