@(#)PROGRAM:CoreHaptics  PROJECT:CoreHaptics-1
@NSt3__110__function6__funcIZN18CASmartPreferences10AddHandlerIiEEvPK10__CFStringS6_PFT_PKvRbENS_8functionIFvS7_EEEEUlS9_E_NS_9allocatorISG_EEFbS9_EEE
NSt3__110__function6__baseIFbPKvEEE
NSt3__117bad_function_callE
ZN18CASmartPreferences10AddHandlerIiEEvPK10__CFStringS3_PFT_PKvRbENSt3__18functionIFvS4_EEEEUlS6_E_
NSt3__110__function6__funcIZN5CALog5Scope34SetPriorityThresholdFromPreferenceEPK10__CFStringS6_E3$_0NS_9allocatorIS7_EEFviEEE
NSt3__110__function6__baseIFviEEE
ZN5CALog5Scope34SetPriorityThresholdFromPreferenceEPK10__CFStringS3_E3$_0
12CAXException
(knN
NSt3__120__shared_ptr_emplaceI13AudioResourceNS_9allocatorIS1_EEEE
com.apple.CoreHaptics
CHHapticPatternPlayer.mm
-[PatternPlayer initWithPlayable:engine:privileged:error:]
-[PatternPlayer dealloc]
-[PatternPlayer doSetMute:]
-[PatternPlayer clearExternalResources:]
-[PatternPlayer startAtTime:error:]
/Library/Caches/com.apple.xbs/Sources/CoreHaptics_Sim/CoreHaptics-166.60/Source/CHHapticPatternPlayer.mm
time >= 0.0
-[PatternPlayer stopAtTime:error:]
-[PatternPlayer sendParameters:atTime:error:]
-[PatternPlayer cancelAndReturnError:]
-[PatternPlayer scheduleParameterCurve:atTime:error:]
OSStatus
HapticUtils.h
_Haptic_Check
Error 
%s: %s
CHDeviceCapability.mm
-[CHDefaultHapticDeviceCapability attributesForEventParameter:eventType:error:]
-[CHDefaultHapticDeviceCapability attributesForDynamicParameter:error:]
Default
HapticServerConfig.mm
-[HapticServerConfig initWithHapticPlayer:withOptions:error:]
RequestedLocality
SupportsAudioPlayback
SupportsAdvancedPatternPlayers
UsingInternalHaptics
HapticContinuousTimeLimit
HapticTransientDefaultIntensity
HapticTransientDefaultSharpness
HapticContinuousDefaultIntensity
HapticContinuousDefaultSharpness
HapticTransientEventIDs
HapticContinuousSustainedEventIDs
HapticContinuousNonsustainedEventIDs
RequestedPriority
RequestedPowerUsage
-[HapticServerConfig initWithHapticPlayer:withOptions:error:]_block_invoke
v24@?0@"NSDictionary"8@"NSError"16
allocator<T>::allocate(size_t n) 'n' exceeds maximum supported size
CHHapticAdvancedPatternPlayer.mm
-[AdvancedPatternPlayer finishInit]
-[AdvancedPatternPlayer finishInit]_block_invoke
v16@?0@"NSError"8
-[AdvancedPatternPlayer initWithPattern:engine:privileged:error:]
-[AdvancedPatternPlayer dealloc]
-[AdvancedPatternPlayer doSetMute:]
-[AdvancedPatternPlayer clearExternalResources:]
-[AdvancedPatternPlayer doStartFromStoppedAtTime:error:]
-[AdvancedPatternPlayer doStartFromPausedAtTime:error:]
-[AdvancedPatternPlayer doResumeAtTime:error:]
-[AdvancedPatternPlayer startAtTime:error:]
/Library/Caches/com.apple.xbs/Sources/CoreHaptics_Sim/CoreHaptics-166.60/Source/CHHapticAdvancedPatternPlayer.mm
_sequence != nil
-[AdvancedPatternPlayer stopAtTime:error:]
-[AdvancedPatternPlayer sendParameters:atTime:error:]
-[AdvancedPatternPlayer scheduleParameterCurve:atTime:error:]
-[AdvancedPatternPlayer pauseAtTime:error:]
-[AdvancedPatternPlayer resumeAtTime:error:]
-[AdvancedPatternPlayer seekToOffset:error:]
-[AdvancedPatternPlayer cancelAndReturnError:]
-[AdvancedPatternPlayer setCompletionHandler:]
-[AdvancedPatternPlayer setCompletionHandler:]_block_invoke_2
v8@?0
-[AdvancedPatternPlayer setCompletionHandler:]_block_invoke
-[AdvancedPatternPlayer activateChannelByIndex:atTime:error:]
-[AdvancedPatternPlayer setVolume:atTime:error:]
AudioResource.mm
open
verifyAudioFile
readAndAllocateRawBuffer
incrementAllocatedBytes
decrementAllocatedBytes
error
warning
note
notice
info
details
minutiae
spew
AudioSineTransient
AudioSine
HapticSineTransient
HapticSine
HapticSineLow
HapticSineLowMid
HapticSineMid
HapticSineMidHigh
HapticSineHigh
HapticMicroTap2
HapticMicroTap3
HapticMicroTap4
HapticMicroTap5
HapticMicroTap6
HapticMicroTap7
HapticMicroTap8
HapticMicroTap9
HapticMiniTap2
HapticMiniTap3
HapticMiniTap4
HapticMiniTap5
HapticMiniTap6
HapticMiniTap7
HapticMiniTap8
HapticMiniTap9
HapticFullTap2
HapticFullTap3
HapticFullTap4
HapticFullTap5
HapticFullTap6
HapticFullTap7
HapticFullTap8
HapticFullTap9
AudioVolume
AudioTransposition
AudioAttackTime
AudioDecayTime
AudioReleaseTime
AudioLPFilterCutoff
HapticVolume
HapticTransposition
HapticAttackTime
HapticDecayTime
HapticReleaseTime
Type
Value
Time
Param
EventToDictionaryConverter.mm
+[EventToDictionaryConverter convertEvents:]
Event
Pattern
HapticDictionaryWriter.mm
-[HapticDictionaryWriter eventToDictionary:embeddedResourceInfo:]
CoreHapticsOperationNotPermittedException
Cannot export AudioCustom events
HapticCommandConverter.mm
-[HapticCommandConverter eventForAudioEventType:time:eventParams:duration:]
CoreHapticInvalidParamException
Unknown event param type
-[HapticCommandConverter eventForTransientHapticAtTime:params:duration:]
-[HapticCommandConverter eventForLegacyTransientHapticAtTime:params:duration:]
CoreHapticsBadEventEntryException
Cannot mix privileged and unprivileged Sharpness parameters
Cannot mix Fullness with unprivileged Sharpness parameter
Unknown event parameter type
-[HapticCommandConverter eventForContinuousHapticEventType:time:params:duration:]
-[HapticCommandConverter eventForSPIEventType:time:eventParams:duration:]
Unsupported event param type
-[HapticCommandConverter eventForEventEntry:engine:privileged:]
CoreHapticInvalidEventTimeException
Illegal time value
CoreHapticInvalidEventDurationException
Illegal event duration
B32@?0@"CHHapticEventParameter"8Q16^B24
Illegal or missing event duration
CoreHapticInvalidAudioResourceException
Invalid or missing audio resource
CoreHapticInvalidEventTypeException
Unknown privileged event type
Unknown event type
-[HapticCommandConverter eventForDynamicParameterEntry:]
Unknown dynamic parameter
-[HapticCommandConverter eventForParameterCurveEntry:]
-[HapticCommandConverter CHtoAVParameterCurve:]
Invalid dynamic parameter for curve
LimitEventParameterValue
LimitDynamicParameterValue
HapticDictionaryReader.mm
-[HapticDictionaryReader readPatternID:error:]
-[HapticDictionaryReader readAndVerifyVersion:error:]
-[HapticDictionaryReader parseConfiguration:error:]_block_invoke
v32@?0@"NSString"8@16^B24
-[HapticDictionaryReader scanForEmbeddedResources:]_block_invoke
-[HapticDictionaryReader parseEventsAndParameters:reply:]
EventTime
v32@?0@8@16^B24
-[HapticDictionaryReader parseEvent:]
CoreHapticsMissingEventTypeException
Missing event type
CoreHapticsInvalidEventTimeException
Illegal or missing event time
CoreHapticsInvalidEventDurationException
Missing or invalid audio resource path
Invalid audio resource path
CoreHapticsInvalidAudioResourceException
Invalid audio resource
-[HapticDictionaryReader parseEventParams:]
CoreHapticsBadParameterEntryException
Event parameter has invalid or missing parameter ID
Event parameter has invalid or missing parameter value
ParameterTime
-[HapticDictionaryReader parseParam:]
time
type
Parameter has invalid or missing time or type key
-[HapticDictionaryReader parseParamCurve:]
ParameterCurve has invalid or missing time or type key
-[HapticDictionaryReader parseParamCurveControlPoints:]
com.apple.coreaudio
CHHapticPattern.mm
-[CHHapticPattern initWithDictionary:error:]
v40@?0@"NSMutableArray"8@"NSMutableArray"16@"NSMutableArray"24@"NSError"32
FullURLPathFromURL
-[CHHapticPattern resolveExternalResources:error:]
+[CHHapticPattern patternForKey:error:]
/Library/Audio/Tunings/Generic/Haptics/Library/hapticpatternlibrary.plist
PatternID
Version
Configuration
Locality
Priority
HapticPowerUsage
AudioPowerUsage
EventType
EventDuration
EventWaveformPath
EventWaveformUseVolumeEnvelope
EventParameters
Parameter
ParameterID
ParameterValue
ParameterCurve
ParameterCurveControlPoints
TestPattern01
TestPattern02
ScreenLocked
ConnectedToPower
KeyboardInputText
KeyboardInputSeparator
KeyboardDeletion
KeyboardDeletionRepeat
KeyboardDeletionRapid
KeyboardOther
hapi
com.apple.corehaptics
hapticapi_verbose
hpwr
hapticpower_verbose
hmet
hapticmetrics_verbose
LowPriority
HighPriority
HighestPriority
LowPower
HighPower
HapticTransient
HapticContinuous
AudioCustom
AudioContinuous
WheelsOfTime
AudioClick
HapticIntensity
HapticSharpness
AttackTime
DecayTime
ReleaseTime
Sustained
AudioPitch
AudioPan
AudioBrightness
HapticIntensityControl
HapticSharpnessControl
HapticAttackTimeControl
HapticDecayTimeControl
HapticReleaseTimeControl
AudioVolumeControl
AudioPanControl
AudioBrightnessControl
AudioPitchControl
AudioAttackTimeControl
AudioDecayTimeControl
AudioReleaseTimeControl
HapticSharpnessSelect
HapticFullnessSelect
UseVolumeEnvelope
CHHapticEngine.mm
+[CHHapticEngine lazyInitResourceMap]
-[CHHapticEngine setAutoShutdownEnabled:]
-[CHHapticEngine setAutoShutdownEnabled:]_block_invoke
CHHapticLocalityEngineDefault
-[CHHapticEngine setAutoShutdownTimeout:]
-[CHHapticEngine setupUnsharedAudioSessionAndReturnError:]
-[CHHapticEngine handleMediaServerRecovery:]_block_invoke
CHHapticErrorCodeServerInitFailedException
Failed to set up audio session
-[CHHapticEngine createHapticPlayerWithOptions:]
Failed to connect to server
-[CHHapticEngine finishInit:]_block_invoke
-[CHHapticEngine finishInit:]
v16@?0q8
-[CHHapticEngine startIdleTimerWithHandler:]
-[CHHapticEngine startIdleTimerWithHandler:]_block_invoke
-[CHHapticEngine beginIdleTimer]_block_invoke
-[CHHapticEngine beginIdleTimer]_block_invoke_2
-[CHHapticEngine cancelIdleTimer]
-[CHHapticEngine handleFinish:]
-[CHHapticEngine handleFinish:]_block_invoke
-[CHHapticEngine updateEngineBehavior]
-[CHHapticEngine stopAndWait]
-[CHHapticEngine stopAndWait]_block_invoke
-[CHHapticEngine dealloc]
AudioSessionID
AudioSessionIsShared
-[CHHapticEngine doInit:sessionIsShared:options:error:]
CHHapticEngineDispatchQueue
-[CHHapticEngine initAndReturnError:]
-[CHHapticEngine initWithAudioSession:error:]
-[CHHapticEngine doInitWithOptions:error:]
-[CHHapticEngine prewarmWithCompletionHandler:]
-[CHHapticEngine prewarmWithCompletionHandler:]_block_invoke
-[CHHapticEngine stopPrewarm]
-[CHHapticEngine doStartWithCompletionHandler:]
-[CHHapticEngine doStartWithCompletionHandler:]_block_invoke_2
-[CHHapticEngine doStartWithCompletionHandler:]_block_invoke
-[CHHapticEngine startWithCompletionHandler:]
/Library/Caches/com.apple.xbs/Sources/CoreHaptics_Sim/CoreHaptics-166.60/Source/CHHapticEngine.mm
_player != nil
-[CHHapticEngine startWithCompletionHandler:]_block_invoke
-[CHHapticEngine doStartEngineAndWait:]_block_invoke
-[CHHapticEngine doStartEngineAndWait:]
-[CHHapticEngine startAndReturnError:]
-[CHHapticEngine doStopEngineAndWait:]
-[CHHapticEngine doStopEngineAndWait:]_block_invoke
-[CHHapticEngine doStopWithCompletionHandler:]
-[CHHapticEngine doStopWithCompletionHandler:]_block_invoke
-[CHHapticEngine stopWithCompletionHandler:]
-[CHHapticEngine stopWithCompletionHandler:]_block_invoke
-[CHHapticEngine notifyWhenPlayersFinished:]
-[CHHapticEngine notifyWhenPlayersFinished:]_block_invoke_2
-[CHHapticEngine notifyWhenPlayersFinished:]_block_invoke
-[CHHapticEngine initWithAudioSessionID:error:]
-[CHHapticEngine initWithAudioSession:sessionIsShared:options:error:]
shared
unshared
-[CHHapticEngine createPlayerWithPattern:error:]
-[CHHapticEngine createAdvancedPlayerWithPattern:error:]
-[CHHapticEngine createAdvancedPlayerWithRingtoneData:error:]
-[CHHapticEngine createAdvancedPlayerWithRingtonePattern:error:]
-[CHHapticEngine createPrivilegedPlayerWithPlayable:error:]
-[CHHapticEngine getDurationForResource:]
-[CHHapticEngine addPublicAudioResourceID:withURL:options:]
-[CHHapticEngine hasPublicAudioResourceID:]
found
did not find
-[CHHapticEngine removePublicAudioResourceID:]
-[CHHapticEngine registerAudioResource:options:error:]
self.player != nil
-[CHHapticEngine unregisterAudioResource:error:]
-[CHHapticEngine doUnregisterAllPublicAudioResources]
-[CHHapticEngine playPatternFromURL:error:]
json
ahap
plist
-[CHHapticEngine playPatternFromData:error:]
-[CHHapticEngine doPlayPatternFromDictionary:error:]
-[CHHapticEngine doPlayPatternFromDictionary:error:]_block_invoke
-[CHHapticEngine(CHHapticEngineInternal) dispatchOnLocal:]
-[CHHapticEngine(CHHapticEngineInternal) dispatchOnLocal:]_block_invoke
-[CHHapticEngine(CHHapticEngineInternal) dispatchSyncOnLocal:]
-[CHHapticEngine(CHHapticEngineInternal) dispatchSyncOnLocal:]_block_invoke
-[CHHapticEngine(CHHapticEngineInternal) checkEngineStateOnStart:]
self.running
-[CHHapticEngine(CHHapticEngineInternal) checkEngineRunning:]
-[CHHapticEngine(CHHapticEngineInternal) notifyPlayerStarted:atTime:]_block_invoke_2
-[CHHapticEngine(CHHapticEngineInternal) notifyPlayerStarted:atTime:]_block_invoke
-[CHHapticEngine(CHHapticEngineInternal) notifyPlayerStopped:atTime:]
-[CHHapticEngine(CHHapticEngineInternal) getAvailableChannel:]
-[CHHapticEngine(CHHapticEngineInternal) releaseChannel:]
-[CHHapticEngine(CHHapticEngineInternal) doReferenceAudioResourceByID:]
+[CHHapticEngine(CHHapticEngineInternal) doRegisterAudioResource:options:fromPattern:player:error:]
Public
+[CHHapticEngine(CHHapticEngineInternal) doRegisterAudioResource:options:fromPattern:player:error:]_block_invoke
v24@?0Q8@"NSError"16
resource->verifyAudioFile(false)
status
+[CHHapticEngine(CHHapticEngineInternal) doUnregisterAudioResource:fromPattern:player:error:]
pattern-loaded
public-loaded
newStateFromOld
/System/Library/Frameworks/AVFoundation.framework/AVFoundation
AVAudioFormat
AVAudioSession
AVAudioSessionMediaServicesWereResetNotification
AVAudioSessionCategorySystemSoundsAndHaptics
AVAudioSessionModeHapticsConstantVolume
AudioResourceIndex
 enableTelemetry=YES 
%25s:%-5d %s: creating player %p
%25s:%-5d %s: ERROR: pattern contains no playable events
PatternPlayer_initWithPlayable
%25s:%-5d %s: destroying player %p
%25s:%-5d %s: Sending %smute params
%25s:%-5d %s: Clearing any externally-registered audio resources
%25s:%-5d %s: Starting simple player %p at time %.3f
PatternPlayer_startAtTime
%25s:%-5d %s: Stopping simple player %p at time %.3f
PatternPlayer_stopAtTime
%25s:%-5d %s: Sending simple player %p parameters at time %.3f
PatternPlayer_sendParameters
%25s:%-5d %s: Cancelling events on simple player %p immediately
PatternPlayer_cancelAndReturnError
%25s:%-5d %s: Sending player %p a parameter curve
PatternPlayer_scheduleParameterCurve
%25s:%-5d %s: %s: %s error %d
%25s:%-5d %s: In parameter %@ is not a valid CHHapticEventParameter
%25s:%-5d %s: In parameter %@ is not a valid CHHapticDynamicParameter
%25s:%-5d %s: Engine not configured with a Locality - querying using '%@'
%25s:%-5d %s: Querying server for capabilities with '%@' Locality
%25s:%-5d %s: Querying server for capabilities with Priority '%@'
%25s:%-5d %s: ERROR: Illegal priority: %@
%25s:%-5d %s: Querying server for capabilities with HapticPowerUsage '%@'
%25s:%-5d %s: ERROR: Illegal power usage: %@
%25s:%-5d %s: Server returned: supports audio: %d adv players: %d internal: %d cont time limit: %us
%25s:%-5d %s: Recieved %u haptic transient IDs
%25s:%-5d %s: Recieved %u haptic continuous sustained IDs
%25s:%-5d %s: Recieved %u haptic continuous nonsustained IDs
%25s:%-5d %s: ERROR: Caught exception during dictionary parse
%25s:%-5d %s: ERROR: Server query returned error '%@'
%25s:%-5d %s: Setting default completion handler on underlying AVHapticSequence
%25s:%-5d %s: Player %p default completion handler called
%25s:%-5d %s: Creating advanced player %p
AdvancedPatternPlayer_initWithPattern
%25s:%-5d %s: Destroying advanced player %p
%25s:%-5d %s: Starting sequence with offset %.3f
%25s:%-5d %s: Restarting paused sequence with offset %.3f
%25s:%-5d ASSERTION FAILURE [(self.paused) != 0 is false]: 
%25s:%-5d %s: Resuming paused sequence with offset %.3f
%25s:%-5d %s: Starting player %p at time %.3f
AdvancedPatternPlayer_startAtTime
%25s:%-5d %s: Stopping player %p at time %.3f
AdvancedPatternPlayer_stopAtTime
%25s:%-5d %s: Sending player %p parameters at time %.3f
AdvancedPatternPlayer_sendParameters
%25s:%-5d %s: ERROR: Parameter curves are not yet supported on CHHapticAdvancedPlayers
%25s:%-5d %s: Pausing player %p at time %.3f
%25s:%-5d %s: Resuming player %p at time %.3f
%25s:%-5d %s: Caching player %p offset %.2f for later start/resume
%25s:%-5d %s: Seeking on player %p to offset %.2f
%25s:%-5d %s: Cancelling commands for player %p immediately
%25s:%-5d %s: Wrapping client's completion handler block %p in our block and setting on underlying AVHapticSequence
%25s:%-5d %s: Player %p client-supplied completion handler called - calling captured block %p on internal queue
%25s:%-5d %s: Client-supplied completion handler called on destroyed player - calling captured block %p on global queue
AdvancedPatternPlayer_initWithRingtoneData
%25s:%-5d %s: ERROR: Failed to open audio resource %@: %u
%25s:%-5d %s: ERROR: Failed to get property for audio resource %@
%25s:%-5d %s: ERROR: Failed to set property on audio resource %@
%25s:%-5d %s: ERROR: Failed to read from audio resource %@: %u
%25s:%-5d %s: Adding %llu bytes to our existing %llu
%25s:%-5d %s: Memory limit reached on custom audio resources - unregister others to make space
%25s:%-5d %s: Removing %llu bytes from our existing %llu
%25s:%-5d ASSERTION FAILURE [(_sTotalAllocatedBytes >= bytes) != 0 is false]: 
%25s:%-5d %s: ERROR: Unknown event param type: %u
%25s:%-5d %s: ERROR: Unknown param type: %u
%25s:%-5d %s: ERROR: Cannot export AudioCustom events
%25s:%-5d %s: Type %u time: %.2f secs dur: %.2f secs %u event params
%25s:%-5d %s: Fixed Param '%@': value %f
%25s:%-5d %s: ERROR: Unknown event param type: %@
%25s:%-5d %s: Time: %.2f secs dur %.2f secs %u event params
%25s:%-5d %s: Fixed Param '%@': value: %f
%25s:%-5d %s: Normalized sharpness %f -> event type %u
%25s:%-5d %s: Ignoring for HapticTransient
%25s:%-5d %s: Event has no HapticSharpness EventParameter. Default event type: %u
%25s:%-5d %s: Adding event param for haptic gain: %.2f
%25s:%-5d %s: Normalized value %f -> sharpness index %d
%25s:%-5d %s: ERROR: Cannot mix Fullness with unprivileged Sharpness parameter
%25s:%-5d %s: Normalized value %f -> fullness index %d
%25s:%-5d %s: ERROR: Cannot mix privileged and unprivileged Sharpness parameters
%25s:%-5d %s: ERROR: Unknown event parameter type: %@
%25s:%-5d %s: Handling as a non-privileged event
%25s:%-5d %s: Type %u time: %.2f secs duration: %.2f secs %u client event params
%25s:%-5d %s: Event has no HapticSharpness EventParameter. Using default event ID %u
%25s:%-5d %s: Adding event param for continuous haptic intensity: %.2f
%25s:%-5d %s: ERROR: Unsupported event param type: %@
%25s:%-5d %s: Event type '%@':
%25s:%-5d %s: ERROR: Illegal time value: %f
%25s:%-5d %s: ERROR: Illegal duration value: %f
%25s:%-5d %s: ERROR: Continuous haptic event has a missing or zero-length duration
%25s:%-5d %s: Haptic event duration capped at %f seconds
%25s:%-5d %s: ERROR: Continuous audio event has a missing or zero-length duration
%25s:%-5d %s: ERROR: Invalid or missing audio resource with ID %u
%25s:%-5d %s: ERROR: Unknown privileged event type: %@
%25s:%-5d %s: ERROR: Unknown event type: %@
%25s:%-5d %s: Dynamic parameter ID '%@':
%25s:%-5d %s: Creating event for haptic volume %f for time %f seconds
%25s:%-5d %s: Creating event for haptic transposition %f for time %f seconds
%25s:%-5d %s: Creating event for haptic attack time %f for time %f seconds
%25s:%-5d %s: Creating event for haptic decay time %f for time %f seconds
%25s:%-5d %s: Creating event for haptic release time %f for time %f seconds
%25s:%-5d %s: Creating event for audio volume %f for time %f seconds
%25s:%-5d %s: Creating event for audio brightness %f for time %f seconds
%25s:%-5d %s: Creating event for audio pan %f for time %f seconds
%25s:%-5d %s: Creating event for audio transposition %f for time %f seconds
%25s:%-5d %s: Creating event for audio attack time %f for time %f seconds
%25s:%-5d %s: Creating event for audio decay time %f for time %f seconds
%25s:%-5d %s: Creating event for audio release time %f for time %f seconds
%25s:%-5d %s: ERROR: Unrecognized dynamic parameter: %@
%25s:%-5d %s: Parameter curve ID: '%@', relative time: %f
%25s:%-5d %s: ERROR: ID %@ is not supported by parameter curves
%25s:%-5d %s: ERROR: Invalid event parameter ID.
%25s:%-5d %s: ERROR: Invalid dynamic parameter ID
%25s:%-5d %s: Pattern ID: '%@'
%25s:%-5d %s: ERROR: Pattern ID must be an NSString
%25s:%-5d %s: WARNING: Missing or malformed version key - assuming v1.0
%25s:%-5d %s: ERROR: Unsupported version number: %.1f
%25s:%-5d %s: Pattern version %.1f
%25s:%-5d %s: Pattern Locality: '%@'
%25s:%-5d %s: Pattern Priority: '%@'
%25s:%-5d %s: Pattern HapticPowerUsage: '%@'
%25s:%-5d %s: Pattern AudioPowerUsage: '%@'
%25s:%-5d %s: Adding embedded audio resource path '%@', options '%@'
%25s:%-5d %s: ERROR: Pattern dictionary is missing '%@' key
%25s:%-5d %s: ERROR: Empty pattern
%25s:%-5d %s: ERROR: Missing event type
%25s:%-5d %s: ERROR: Illegal or missing event time
%25s:%-5d %s: ERROR: Illegal event duration
%25s:%-5d %s: ERROR: Custom event is missing its audio resource path
%25s:%-5d %s: ERROR: Custom event's audio resource path cannot be resolved
%25s:%-5d %s: ERROR: Event parameter has invalid or missing parameter ID
%25s:%-5d %s: ERROR: Event parameter has invalid or missing parameter value
%25s:%-5d %s: ERROR: Param is missing a %s
%25s:%-5d %s: ERROR: Parameter curve control point has invalid or missing time
%25s:%-5d %s: ERROR: Parameter curve control point has invalid or missing value
%25s:%-5d %s: Pattern version > %.1f - looking for config dictionary
%25s:%-5d %s: Searching for resource in '%@'
%25s:%-5d %s: Found it at '%@'
%25s:%-5d %s: WARNING: Skipping Custom Audio event - server does not support audio
%25s:%-5d %s: Creating pattern for key '%@'
%25s:%-5d %s: Pattern library path: %@
%25s:%-5d %s: Failed to read pattern library data: %@
%25s:%-5d %s: Read pattern library data
%25s:%-5d %s: Failed to load pattern library: %@
%25s:%-5d %s: Loaded pattern library dict:
%25s:%-5d %s: Haptic pattern with key '%@' not found
%25s:%-5d %s: '%@' path: %@
%25s:%-5d %s: Failed to read pattern data: %@
%25s:%-5d %s: Read pattern data
%25s:%-5d %s: Failed to serialize pattern data: %@
%25s:%-5d %s: '%@' pattern dict:
%25s:%-5d %s: Creating resource map on first use
%25s:%-5d %s: auto-shutdown being enabled while running - wait for any existing players
%25s:%-5d %s: <Top of AV finishWithCompletionHandler block>
%25s:%-5d %s: finishWithCompletionHandler callback returned error: %@
%25s:%-5d %s: <Bottom of AV finishWithCompletionHandler block>
%25s:%-5d %s: auto-shutdown being disabled
%25s:%-5d %s: Invalid shutdown timeout (%f) being ignored
%25s:%-5d %s: Setting SS&H category, disabling notifications and NowPlaying for this audio session
%25s:%-5d %s: Failed to set category on audio session
%25s:%-5d %s: Setting ConstantVolume mode on audio session
%25s:%-5d %s: Failed to set mode on audio session
%25s:%-5d %s: Cannot set audio session with session flags. Continue
%25s:%-5d %s: Cannot set audio buffer frame size to %u. Using default buffer size
%25s:%-5d %s: This build does not yet support AVAudioSessionModeHapticsConstantVolume!
%25s:%-5d %s: Failed to disable audio session notifications
%25s:%-5d %s: Failed to disable audio session now-playing policy
%25s:%-5d %s: Setting NeedsPowerBudgeting property on audio session
%25s:%-5d %s: Failed to set audio session NeedsPowerBudgeting
%25s:%-5d %s: Attempting to reconnect engine %p to server
%25s:%-5d %s: Engine already destroyed - noop
%25s:%-5d %s: Calling engine-reset handler on default queue
%25s:%-5d %s: Done with reconnect for engine %p
%25s:%-5d %s: FATAL ERROR: Unable to reconnect to server
HapticEngine_handleMediaServerRecovery
%25s:%-5d %s: Creating underlying Haptic Player
%25s:%-5d %s: Attempt #%d...
%25s:%-5d %s: ERROR: Server failure: %@
%25s:%-5d %s: ERROR: Server connection broke with error '%@'
%25s:%-5d %s: Waiting to reconnect
%25s:%-5d %s: Allocating resources...
%25s:%-5d %s: ERROR: Resource allocation failure: %@
%25s:%-5d %s: Releasing lock
%25s:%-5d %s: Waiting for server...
%25s:%-5d %s: ERROR: Server timeout
%25s:%-5d %s: Default behavior is to follow audio route
%25s:%-5d %s: Setting behavior to not follow audio route
%25s:%-5d %s: In player's stopRunningHandler block.  Stopped reason: %d
%25s:%-5d %s: Calling engine-stopped handler with reason %d
%25s:%-5d %s: Finished initializing
%25s:%-5d %s: Creating idle timer for %.3f seconds
%25s:%-5d %s: Calling idle timeout handler on internal queue
%25s:%-5d %s: Starting idle timer (on async dispatch)
%25s:%-5d %s: Stopping engine in response to timeout
%25s:%-5d %s: Calling client's engine-stopped handler on internal queue
%25s:%-5d %s: Cancelling idle timer
%25s:%-5d %s: Called on engine %p with error %@
%25s:%-5d %s: Calling client's finishedHandler on internal queue
%25s:%-5d %s: Client requested engine stop-on-finish
%25s:%-5d %s: Client finishedHandler is nil
%25s:%-5d %s: <Top of doStopWithCompletionHandler block>
%25s:%-5d %s: Calling engine-stopped handler on internal queue
%25s:%-5d %s: Engine stop completed
%25s:%-5d %s: Client-supplied stopped handler called on destroyed player - calling captured block %p on global queue
%25s:%-5d %s: Requested not to stop-on-finish
%25s:%-5d %s: Done handling finish
%25s:%-5d %s: Setting player's behavior to 0x%x
%25s:%-5d %s: Synchronously stopping the underlying player %p
%25s:%-5d %s: Calling stop completion handler on internal queue
%25s:%-5d %s: Underlying player %p not running
%25s:%-5d %s: synchronously stopping and destroying engine %p
%25s:%-5d %s: done destroying engine %p
%25s:%-5d %s: sessionID: %u, isShared: %u options: '%@'
%25s:%-5d %s: ERROR: Invalid audio session ID: %u
%25s:%-5d %s: Creating engine %p with legacy initializer
HapticEngine_initAndReturnError
%25s:%-5d %s: Creating engine %p with audio session %p
%25s:%-5d %s: Creating engine %p with internal audio session
HapticEngine_initWithAudioSession
%25s:%-5d %s: options: '%@'
HapticEngine_initWithOptions
%25s:%-5d %s: Prewarming the underlying Haptic Player
%25s:%-5d %s: ERROR: Player prewarm failed: %@
%25s:%-5d %s: Calling prewarm completion handler
HapticEngine_prewarmWithCompletionHandler
%25s:%-5d %s: Stopping prewarm on the underlying Haptic Player
HapticEngine_stopPrewarm
%25s:%-5d %s: Starting underlying Haptic Player
%25s:%-5d %s: In underlying AVHapticPlayer's completion handler block
%25s:%-5d %s: ERROR: Player start failed: %@
%25s:%-5d %s: Calling start completion handler on internal queue
%25s:%-5d %s: Called on engine %p
%25s:%-5d %s: Engine already running
%25s:%-5d %s: Directly calling start completionHandler on internal queue
HapticEngine_startWithCompletionHandler
%25s:%-5d %s: Waiting for startup...
%25s:%-5d %s: ERROR: Startup timeout
%25s:%-5d %s: Startup complete
HapticEngine_startAndReturnError
%25s:%-5d %s: Synchronously stopping underlying Haptic Player
%25s:%-5d %s: In underlying AVHapticPlayer's completion handler block for doStopEngineAndWait
%25s:%-5d %s: ERROR: Player stop failed: %@
%25s:%-5d %s: Waiting for player stop...
%25s:%-5d %s: WARNING: timed out waiting for underlying player to stop
%25s:%-5d %s: Done waiting for underlying player stop
%25s:%-5d %s: Stopping underlying Haptic Player
%25s:%-5d %s: In underlying AVHapticPlayer's completion handler block for doStopWithCompletionHandler
%25s:%-5d %s: ERROR: Lower-level player stop failed: %@
%25s:%-5d %s: Engine not running
%25s:%-5d %s: Directly calling stop completionHandler on internal queue
HapticEngine_stopWithCompletionHandler
%25s:%-5d %s: Called on engine %p with finishedHandler %p
%25s:%-5d %s: Creating engine %p with shared audio session ID %u
HapticEngine_initWithAudioSessionID
%25s:%-5d %s: Creating engine %p with %s audio session %p
%25s:%-5d %s: Shared audio session cannot be nil
%25s:%-5d %s: Creating internal unshared audio session
%25s:%-5d %s: Using passed-in audio session
%25s:%-5d %s: Setting behavior to not activate audio session (if haptics-only)
%25s:%-5d %s: Creating player from pattern
%25s:%-5d %s: Creating advanced player from pattern
%25s:%-5d %s: Creating advanced player from ringtone data
%25s:%-5d %s: Creating advanced player from ringtone pattern
%25s:%-5d %s: Creating privileged player from Playable
%25s:%-5d %s: Cannot find resource referenced by ID %u. Returning 0.0
%25s:%-5d %s: Engine %p adding resID %u
%25s:%-5d ASSERTION FAILURE [([self doFindPublicAudioResourceID:resourceID] == std::end(_publicAudioResources)) != 0 is false]: 
%25s:%-5d %s: Engine %p %s resID %u
%25s:%-5d %s: Engine %p removing resID %u
%25s:%-5d ASSERTION FAILURE [(result != std::end(_publicAudioResources)) != 0 is false]: 
HapticEngine_registerAudioResource
%25s:%-5d %s: ERROR: audio resource ID %u not registered on this CHHapticEngine
HapticEngine_unregisterAudioResource
%25s:%-5d %s: Attempting to remove all remaining public audio resources for this engine
%25s:%-5d %s: Creating haptic pattern from JSON or AHAP...
%25s:%-5d %s: Creating haptic pattern from plist...
%25s:%-5d %s: Incoming URL not a valid file path URL or file type not supported
%25s:%-5d %s: Incoming fileURL cannot be nil
HapticEngine_playPatternFromURL
%25s:%-5d %s: Incoming NSData is invalid
HapticEngine_playPatternFromData
%25s:%-5d %s: Incoming NSData cannot be nil
%25s:%-5d %s: Creating Pattern Player
%25s:%-5d %s: Starting CHHapticEngine...
%25s:%-5d %s: Cannot start haptic engine: error %@
%25s:%-5d %s: Starting Pattern Player...
%25s:%-5d %s: <Dispatching block %p async...>
%25s:%-5d ASSERTION FAILURE [(!in_dispatch_sync) != 0 is false]: 
%25s:%-5d %s: <Block async dispatch complete>
%25s:%-5d %s: <Dispatching block %p sync...>
%25s:%-5d %s: <Block sync dispatch complete>
%25s:%-5d %s: AutoShutdown on and engine stopped - auto start
%25s:%-5d %s: player %p notified engine it will be stopping at time %.3f
%25s:%-5d %s: ERROR: Unable to add an additional player channel
%25s:%-5d %s: ERROR: This channel was not registered
%25s:%-5d %s: Adding reference to audio resource ID %u from pattern
%25s:%-5d %s:    found it - reference count now %u
%25s:%-5d %s: Resource ID %u not previously registered!
%25s:%-5d %s: Registering %s audio resource '%@'
%25s:%-5d %s: -- Entry list has '%@' with ID %u, and count %u
%25s:%-5d %s: Resource already registered and request uses matching options - referencing and returning existing ID (%u)
%25s:%-5d %s: ERROR: unable to reference server-side audio resource with ID %u: %@
%25s:%-5d %s: Resource already registered but request uses options - copy existing ID (%u) as new ID
%25s:%-5d %s: ERROR: Server failed to copy custom audio event: %@
%25s:%-5d ASSERTION FAILURE [(_sResourceEntries->emplace(copiedResourceID, ResourceEntry(resource, options, 1)).second == true) != 0 is false]: 
%25s:%-5d %s: Returning ID %u for copied resource '%@'
%25s:%-5d %s: Resource not already registered - creating new entry
%25s:%-5d %s: ERROR: Server failed to create custom audio event: %@
%25s:%-5d %s: Adding new ID %u for %s resource '%@'
%25s:%-5d ASSERTION FAILURE [(_sResourceEntries->emplace(resourceID, ResourceEntry(resource, options, 1)).second == true) != 0 is false]: 
%25s:%-5d %s: Attempting to remove %s ID %u
%25s:%-5d %s:    found it and refcount is at zero - erasing and releasing on server
%25s:%-5d %s: ERROR: unable to release server-side audio resource with ID %u: %@
%25s:%-5d %s:    found it and decrementing refcount
%25s:%-5d %s: ERROR: could not find audio resource with ID %u
%25s:%-5d %s: Old: %d mute: %d running: %d => New: %d
PatternPlayer
CHHapticPatternPlayer
NSObject
CHHapticParameterAttributesImpl
CHHapticParameterAttributes
CHDefaultHapticDeviceCapability
CHHapticDeviceCapability
CHHapticParameterCurve
CHHapticParameterCurveControlPoint
HapticServerConfig
AdvancedPatternPlayer
CHHapticAdvancedPatternPlayerExtended
CHHapticAdvancedPatternPlayer
EventToDictionaryConverter
PatternPlayerBase
PatternPlayerDetails
HapticDictionaryWriter
HapticCommandConverter
HapticDictionaryReader
CHHapticEventParameter
CHHapticDynamicParameter
CHMetrics
CHHapticPattern
CHHapticPlayable
CHEmbeddedAudioResourceInfo
CHHapticEngine
CHHapticEngineInternal
CHHapticEvent
CHHapticEventInternal
init
getAvailableChannel:
resolveExternalResources:error:
parameters
parameterCurves
eventListFromEvents:parameters:parameterCurves:engine:privileged:
count
patternID
duration
metrics
handleInitForPlayer:events:isAdvanced:
handleParamCurveEncountered
clearExternalResources:
releaseChannel:
dealloc
setParameter:value:atTime:error:
objectAtIndexedSubscript:
eventType
resourceIsRegistered:
player
doUnregisterAudioResource:fromPattern:player:error:
checkEngineStateOnStart:
doSetMute:
needsResetForAction:
resetAtTime:error:
sendEvents:atTime:error:
notifyPlayerStarted:atTime:
handleStartForPlayer:time:isAdvanced:patternID:
checkEngineRunning:
clearEvents:error:
notifyPlayerStopped:atTime:
handleActionForPlayer:action:time:isAdvanced:
relativeTime
setRelativeTime:
arrayWithObjects:count:
running
isEqual:
class
self
performSelector:
performSelector:withObject:
performSelector:withObject:withObject:
isProxy
isKindOfClass:
isMemberOfClass:
conformsToProtocol:
respondsToSelector:
retain
release
autorelease
retainCount
zone
hash
superclass
description
debugDescription
TQ,R
T#,R
T@"NSString",R,C
startAtTime:error:
stopAtTime:error:
sendParameters:atTime:error:
scheduleParameterCurve:atTime:error:
cancelAndReturnError:
isMuted
setIsMuted:
initWithPlayable:engine:privileged:error:
.cxx_destruct
_channel
name
userInfo
objectForKey:
integerValue
errorWithDomain:code:userInfo:
stringWithUTF8String:
dictionaryWithObjectsAndKeys:
stringWithCString:encoding:
numberWithInteger:
dictionaryWithObject:forKey:
exceptionWithName:reason:userInfo:
minValue
maxValue
defaultValue
Tf,R
initWithMinValue:maxValue:defaultValue:
_minValue
_maxValue
_defaultValue
Tf,R,V_minValue
Tf,R,V_maxValue
Tf,R,V_defaultValue
isSupported
dictionaryWithObjects:forKeys:count:
floatValue
isEqualToString:
minimumValueForEventParameter:
maximumValueForEventParameter:
defaultValueForEventParameter:eventType:
minimumValueForDynamicParameter:
maximumValueForDynamicParameter:
defaultValueForDynamicParameter:
attributesForEventParameter:eventType:error:
attributesForDynamicParameter:error:
supportsHaptics
supportsAudio
TB,R
initPrivate
maximumNumberOfHapticChannels
maximumNumberOfAudioChannels
_supports3rdPartyHaptics
copy
initWithParameterID:controlPoints:relativeTime:
controlPoints
parameterID
_param
_time
_controlPoints
T@"NSString",R,V_param
Td,V_time
T@"NSArray",R
initWithRelativeTime:value:
value
setValue:
_value
Tf,V_value
numberWithBool:
numberWithUnsignedInt:
numberWithFloat:
array
containsString:
numberWithUnsignedInteger:
setObject:forKey:
boolValue
unsignedIntValue
countByEnumeratingWithState:objects:count:
unsignedIntegerValue
queryServerCapabilities:reply:
initWithHapticPlayer:withOptions:error:
usingInternalHaptics
supportsAudioPlayback
supportsAdvancedPatternPlayers
hapticContinuousTimeLimit
currentLocality
defaultHapticTransientEventSharpness
defaultHapticContinuousEventSharpness
defaultHapticTransientEventIntensity
defaultHapticContinuousEventIntensity
hapticTransientIDs
hapticContinuousSustainedIDs
hapticContinuousNonsustainedIDs
.cxx_construct
_currentLocality
_usingInternalHaptics
_supportsAudioPlayback
_supportsAdvancedPatternPlayers
_hapticContinuousTimeLimit
_defaultHapticTransientEventSharpness
_defaultHapticContinuousEventSharpness
_defaultHapticTransientEventIntensity
_defaultHapticContinuousEventIntensity
_hapticTransientIDs
_hapticContinuousSustainedIDs
_hapticContinuousNonsustainedIDs
TB,R,V_usingInternalHaptics
TB,R,V_supportsAudioPlayback
TB,R,V_supportsAdvancedPatternPlayers
Tf,R,V_hapticContinuousTimeLimit
T@"NSString",R,V_currentLocality
Tf,R,V_defaultHapticTransientEventSharpness
Tf,R,V_defaultHapticContinuousEventSharpness
Tf,R,V_defaultHapticTransientEventIntensity
Tf,R,V_defaultHapticContinuousEventIntensity
T{vector<unsigned long, std::allocator<unsigned long>>=^Q^Q{__compressed_pair<unsigned long *, std::allocator<unsigned long>>=^Q}},R,V_hapticTransientIDs
T{vector<unsigned long, std::allocator<unsigned long>>=^Q^Q{__compressed_pair<unsigned long *, std::allocator<unsigned long>>=^Q}},R,V_hapticContinuousSustainedIDs
T{vector<unsigned long, std::allocator<unsigned long>>=^Q^Q{__compressed_pair<unsigned long *, std::allocator<unsigned long>>=^Q}},R,V_hapticContinuousNonsustainedIDs
eventBehavior
muteHapticsWhileRecordingAudio
setEventBehavior:
setSeekOffset:
resetState
setCompletionHandler:
initWithEvents:player:error:
patternDuration
setLoopEnd:
finishInit
setParameter:value:channel:atTime:error:
engine
seekOffset
playAtTime:offset:error:
setRunning
paused
seekToTime:error:
resumeAtTime:error:
doStartFromPausedAtTime:error:
doStartFromStoppedAtTime:error:
currentTime
paramType
time
pauseAtTime:error:
setPaused
doResumeAtTime:error:
loopingEnabled
playbackRate
setLoopingEnabled:
setLoopLength:error:
setPlaybackRate:
dispatchOnLocal:
dispatchOnGlobal:
initWithData:player:error:
activateChannelByIndex:atTime:error:
setVolume:atTime:error:
seekToOffset:error:
loopEnabled
setLoopEnabled:
loopEnd
completionHandler
T@?,C
initWithPattern:engine:privileged:error:
initWithRingtoneData:engine:error:
_sequence
_loopEnd
_state
_seekOffset
_completionHandler
Td,V_seekOffset
numberWithUnsignedLong:
eventCategory
paramTypeToNSString:
addObject:
eventTypeToNSString:
fixedParamCount
fixedParams
setObject:forKeyedSubscript:
initWithObjectsAndKeys:
convertEvents:
Td,R
setEngine:
_engine
_events
_patternID
_patternDuration
_muteState
_previousAction
T@"CHHapticEngine",W,V_engine
T@"NSString",R,V_patternID
Td,R,V_patternDuration
objectForKeyedSubscript:
eventToDictionary:embeddedResourceInfo:
paramToDictionary:
paramCurveToDictionary:
type
audioResID
path
options
numberWithDouble:
eventParameters
eventParamsToArray:
paramCurveControlPointsToArray:
patternToDictionary:events:parameters:parameterCurves:embeddedResourceInfo:configuration:
_urlIndex
capabilitiesForHardware
eventWithEventType:time:parameters:count:duration:
eventWithEventType:time:duration:
serverConfig
transientHapticEventTypeFromSharpness:
transientHapticEventTypeForDefaultSharpness
eventForTransientHapticAtTime:params:duration:
continuousHapticEventTypeFromSharpness:sustained:
continuousHapticEventTypeForDefaultSharpness:
eventForLegacyTransientHapticAtTime:params:duration:
indexOfObjectPassingTest:
eventForContinuousHapticEventType:time:params:duration:
eventForAudioEventType:time:eventParams:duration:
getDurationForResource:
setDuration:
eventForSPIEventType:time:eventParams:duration:
eventWithParameter:value:time:
CHtoAVParameterCurve:
eventWithParameterCurve:
initWithCapacity:
objectAtIndex:
initWithTime:value:
initWithType:relativeTime:shape:controlPoints:
initWithServerConfig:
eventForEventEntry:engine:privileged:
eventForDynamicParameterEntry:
eventForParameterCurveEntry:
_serverConfig
T@"HapticServerConfig",R,V_serverConfig
dictionary
length
enumerateKeysAndObjectsUsingBlock:
fileURLWithPath:isDirectory:
initWithURL:options:
parseEvent:
parseParam:
parseParamCurve:
parseEventParams:
initWithAudioResourceIndex:parameters:time:duration:
initWithEventType:parameters:relativeTime:duration:
initWithParameterID:value:
initWithParameterID:value:relativeTime:
parseParamCurveControlPoints:
doubleValue
readPatternID:error:
readAndVerifyVersion:error:
parseConfiguration:error:
scanForEmbeddedResources:
parseEventsAndParameters:reply:
initWithEngine:audioSessionID:sessionIsShared:isSPI:
handleServerRecovery
handleEngineStart
handleEngineStop
handleFinishedForPlayersAtTime:
arrayWithArray:
initWithArray:
version
fullDuration
relativePath
characterAtIndex:
mainBundle
bundleURL
arrayWithObject:
defaultManager
URLsForDirectory:inDomains:
addObjectsFromArray:
ubiquityIdentityToken
URLForUbiquityContainerIdentifier:
initFileURLWithPath:isDirectory:relativeToURL:
checkResourceIsReachableAndReturnError:
events
doRegisterAudioResource:options:fromPattern:player:error:
initWithAudioResourceID:parameters:relativeTime:
doReferenceAudioResourceByID:
dataWithContentsOfFile:options:error:
propertyListWithData:options:format:error:
JSONObjectWithData:options:error:
initWithDictionary:error:
patternForKey:error:
locality
priority
hapticPowerUsage
audioPowerUsage
T@"NSString",R
initWithEvents:parameters:error:
initWithEvents:parameterCurves:error:
exportDictionaryAndReturnError:
exportDictionaryWithConfigurationAndReturnError:
eventListFromDictionary:error:
configurationDictionary
_version
_configurationDictionary
_embeddedResourceInfo
_parameters
_parameterCurves
T@"NSDictionary",R,N,V_configurationDictionary
Td,R,N
_url
_options
T@"NSURL",R,V_url
T@"NSDictionary",R,V_options
currentPlayerBehavior
setCurrentPlayerBehavior:
currentMediaTime
isBehaviorSet:
toggleBehavior:set:
channels
updateEngineBehavior
handleFinish:
finishWithCompletionHandler:
cancelIdleTimer
avAudioSession
setCategory:error:
sessionIsConstantVolume
setMode:error:
setAudioHardwareControlFlags:error:
setPreferredIOBufferFrameSize:error:
enableNotifications:error:
setParticipatesInNowPlayingAppPolicy:error:
needsAudioPowerBudget
setNeedsHighPowerBudgeting:error:
isAutoShutdownEnabled
getSessionIDFromAVAudioSession:
sessionIsShared
setupUnsharedAudioSessionAndReturnError:
code
audioSessionID
createOptionsFromAudioSessionID:shared:
createHapticPlayerWithOptions:
finishInit:
resetHandler
defaultCenter
handleMediaServerRecovery:
addObserver:selector:name:object:
removeObserver:name:object:
opaqueSessionID
initWithOptions:error:
setRunning:
localizedDescription
handleConnectionError
setConnectionErrorHandler:
allocateRenderResourcesWithCompletionHandler:
setFollowAudioRoute:
stoppedHandler
setStopRunningHandler:
autoShutdownTimeout
stopWithCompletionHandler:
startIdleTimerWithHandler:
timer
setTimer:
clientFinishedHandler
setClientFinishedHandler:
doStopWithCompletionHandler:
beginIdleTimer
setBehavior:
doStopEngineAndWait:
stopAndWait
disconnectAudioSession:
doUnregisterAllPublicAudioResources
valueForKey:
auxiliarySession
connectAudioSession:
doInit:sessionIsShared:options:error:
doInitWithOptions:error:
prewarmWithCompletionHandler:
stopPrewarm
startRunningWithCompletionHandler:
doStartWithCompletionHandler:
doStartEngineAndWait:
stopRunningWithCompletionHandler:
storeOptions:
setActivateAudioSessionOnStart:
initWithAudioSession:sessionIsShared:options:error:
getMetricsForPlayer:
setMetricsTestModeEnabled
doFindPublicAudioResourceID:
absoluteString
isEqualToDictionary:
idForPublicAudioResourceURL:withOptions:
addPublicAudioResourceID:withURL:options:
hasPublicAudioResourceID:
removePublicAudioResourceID:
isFileURL
pathExtension
dataWithContentsOfFile:
initWithContentsOfURL:error:
doPlayPatternFromDictionary:error:
createPlayerWithPattern:error:
startWithCompletionHandler:
initialize
lazyInitResourceMap
supports1stPartyHaptics
playsHapticsOnly
setPlaysHapticsOnly:
setMuteHapticsWhileRecordingAudio:
isMutedForAudio
setIsMutedForAudio:
isMutedForHaptics
setIsMutedForHaptics:
setAutoShutdownEnabled:
followAudioRoute
highPriority
setHighPriority:
availableLocalities
setAutoShutdownTimeout:
getReporterIDFromAVAudioSession:
initAndReturnError:
initWithAudioSession:error:
startAndReturnError:
notifyWhenPlayersFinished:
initWithAudioSessionID:error:
initWithAudioSession:sessionIsShared:error:
createAdvancedPlayerWithPattern:error:
createAdvancedPlayerWithRingtoneData:error:
createAdvancedPlayerWithRingtonePattern:error:
createPrivilegedPlayerWithPlayable:error:
debugEngineIsRunning
registerAudioResource:options:error:
unregisterAudioResource:error:
playPatternFromURL:error:
playPatternFromData:error:
setStoppedHandler:
setResetHandler:
_dispatchQueue
_avAudioSession
_audioSessionID
_sessionIsShared
_sessionIsConstantVolume
_publicAudioResources
_player
_timer
_stoppedHandler
_resetHandler
_autoShutdownEnabled
_clientFinishedHandler
_running
_currentPlayerBehavior
_muteHapticsWhileRecordingAudio
_priority
_hapticPowerUsage
_audioPowerUsage
_runTimeout
_metrics
T@"AVAudioSession",R,V_avAudioSession
TI,R,V_audioSessionID
TB,R,V_sessionIsShared
TB,R,V_sessionIsConstantVolume
T@?,C,V_clientFinishedHandler
T@"NSObject<OS_dispatch_source>",&,V_timer
TQ,V_currentPlayerBehavior
TB,N
T@"NSString",R,V_priority
T@"NSString",R,V_hapticPowerUsage
T@"NSString",R,V_audioPowerUsage
T@?,C,V_stoppedHandler
T@?,C,V_resetHandler
autoShutdownEnabled
TB,N,GisAutoShutdownEnabled
addChannel:
removeChannel:error:
referenceCustomAudioEvent:reply:
copyCustomAudioEvent:options:reply:
dataWithBytesNoCopy:length:freeWhenDone:
initWithStreamDescription:channelLayout:
createCustomAudioEvent:format:frames:options:reply:
releaseCustomAudioEvent:reply:
activateAudioSessionOnStart
dispatchSyncOnLocal:
T@"AVHapticPlayer",R
T@"CHMetrics",R
parameterValuesFromLegacyEventType:sharpness:fullness:error:
initWithEventType:parameters:relativeTime:
initWithAudioResourceID:parameters:relativeTime:duration:
getType
_type
_audioResID
_eventParams
_duration
T@"NSString",R,V_type
T@"NSArray",R,V_eventParams
Td,V_duration
B24@0:8@16
#16@0:8
@16@0:8
@24@0:8:16
@32@0:8:16@24
@40@0:8:16@24@32
B16@0:8
B24@0:8#16
B24@0:8:16
Vv16@0:8
Q16@0:8
^{_NSZone=}16@0:8
B24@0:8@"Protocol"16
@"NSString"16@0:8
B32@0:8d16^@24
B40@0:8@16d24^@32
B24@0:8^@16
v20@0:8B16
B40@0:8@"NSArray"16d24^@32
B40@0:8@"CHHapticParameterCurve"16d24^@32
@44@0:8@16@24B32^@36
v16@0:8
v24@0:8@16
@"AVHapticPlayerChannel"
f16@0:8
@28@0:8f16f20f24
@40@0:8@16@24^@32
@32@0:8@16^@24
@"<CHHapticParameterAttributes>"40@0:8@"NSString"16@"NSString"24^@32
@"<CHHapticParameterAttributes>"32@0:8@"NSString"16^@24
f24@0:8@16
f32@0:8@16@24
@40@0:8@16@24d32
d16@0:8
v24@0:8d16
@"NSString"
@"NSArray"
@28@0:8d16f24
v20@0:8f16
{vector<unsigned long, std::allocator<unsigned long>>=^Q^Q{__compressed_pair<unsigned long *, std::allocator<unsigned long>>=^Q}}16@0:8
{vector<unsigned long, std::allocator<unsigned long>>="__begin_"^Q"__end_"^Q"__end_cap_"{__compressed_pair<unsigned long *, std::allocator<unsigned long>>="__value_"^Q}}
@?16@0:8
v24@0:8@?16
@?<v@?@"NSError">16@0:8
v24@0:8@?<v@?@"NSError">16
B40@0:8Q16d24^@32
B36@0:8f16d20^@28
@"AVHapticSequence"
@24@0:8Q16
@24@0:8@16
B20@0:8C16
@"CHHapticEngine"
@64@0:8@16@24@32@40@48@56
@32@0:8@16@24
@48@0:8Q16d24@32d40
Q20@0:8f16
@40@0:8d16@24d32
Q24@0:8f16B20
Q20@0:8B16
@44@0:8i16d20@28d36
@36@0:8@16@24B32
@"HapticServerConfig"
B32@0:8@16@?24
@28@0:8@16f24
@36@0:8@16f24d28
@36@0:8@16I24B28B32
v36@0:8@16@24B32
v44@0:8@16d24B32@36
v44@0:8@16q24d32B40
@52@0:8@16@24@32@40B48
@"NSArray"32@0:8@"CHHapticEngine"16^@24
@"NSArray"16@0:8
@24@0:8^@16
@"NSNumber"
@"NSDictionary"
@"NSMutableArray"
@"NSURL"
B24@0:8Q16
v28@0:8Q16B24
I24@0:8@16
q24@0:8@16
@24@0:8I16B20
B40@0:8I16B20@24^@32
B32@0:8@16^@24
@28@0:8I16^@20
@44@0:8@16B24@28^@36
@36@0:8@16B24^@28
d24@0:8Q16
{__map_iterator<std::__tree_iterator<std::__value_type<unsigned long, std::pair<NSURL *, NSDictionary *>>, std::__tree_node<std::__value_type<unsigned long, std::pair<NSURL *, NSDictionary *>>, void *> *, long>>={__tree_iterator<std::__value_type<unsigned long, std::pair<NSURL *, NSDictionary *>>, std::__tree_node<std::__value_type<unsigned long, std::pair<NSURL *, NSDictionary *>>, void *> *, long>=^v}}24@0:8Q16
v40@0:8Q16@24@32
Q32@0:8@16@24
v24@0:8Q16
Q40@0:8@16@24^@32
B32@0:8Q16^@24
I16@0:8
@"NSObject<OS_dispatch_queue>"
@"AVAudioSession"
{map<unsigned long, std::pair<NSURL *, NSDictionary *>, std::less<unsigned long>, std::allocator<std::pair<const unsigned long, std::pair<NSURL *, NSDictionary *>>>>="__tree_"{__tree<std::__value_type<unsigned long, std::pair<NSURL *, NSDictionary *>>, std::__map_value_compare<unsigned long, std::__value_type<unsigned long, std::pair<NSURL *, NSDictionary *>>, std::less<unsigned long>, true>, std::allocator<std::__value_type<unsigned long, std::pair<NSURL *, NSDictionary *>>>>="__begin_node_"^v"__pair1_"{__compressed_pair<std::__tree_end_node<std::__tree_node_base<void *> *>, std::allocator<std::__tree_node<std::__value_type<unsigned long, std::pair<NSURL *, NSDictionary *>>, void *>>>="__value_"{__tree_end_node<std::__tree_node_base<void *> *>="__left_"^v}}"__pair3_"{__compressed_pair<unsigned long, std::__map_value_compare<unsigned long, std::__value_type<unsigned long, std::pair<NSURL *, NSDictionary *>>, std::less<unsigned long>, true>>="__value_"Q}}}
@"AVHapticPlayer"
@"NSObject<OS_dispatch_source>"
@"CHMetrics"
B32@0:8@16d24
v32@0:8@16d24
Q52@0:8@16@24B32@36^@44
B44@0:8Q16B24@28^@36
B48@0:8Q16^f24^f32^@40
@48@0:8@16@24d32d40
@40@0:8Q16@24d32
@48@0:8Q16@24d32d40
333333
@(#)PROGRAM:CoreHaptics  PROJECT:CoreHaptics-1
@mcpl
NSt3__110__function6__funcIZN18CASmartPreferences10AddHandlerIiEEvPK10__CFStringS6_PFT_PKvRbENS_8functionIFvS7_EEEEUlS9_E_NS_9allocatorISG_EEFbS9_EEE
NSt3__110__function6__baseIFbPKvEEE
NSt3__117bad_function_callE
ZN18CASmartPreferences10AddHandlerIiEEvPK10__CFStringS3_PFT_PKvRbENSt3__18functionIFvS4_EEEEUlS6_E_
NSt3__110__function6__funcIZN5CALog5Scope34SetPriorityThresholdFromPreferenceEPK10__CFStringS6_E3$_0NS_9allocatorIS7_EEFviEEE
NSt3__110__function6__baseIFviEEE
ZN5CALog5Scope34SetPriorityThresholdFromPreferenceEPK10__CFStringS3_E3$_0
12CAXException
(knN
NSt3__120__shared_ptr_emplaceI13AudioResourceNS_9allocatorIS1_EEEE
com.apple.CoreHaptics
CHHapticPatternPlayer.mm
-[PatternPlayer initWithPlayable:engine:privileged:error:]
-[PatternPlayer dealloc]
-[PatternPlayer doSetMute:]
-[PatternPlayer clearExternalResources:]
-[PatternPlayer startAtTime:error:]
/Library/Caches/com.apple.xbs/Sources/CoreHaptics_Sim/CoreHaptics-166.60/Source/CHHapticPatternPlayer.mm
time >= 0.0
-[PatternPlayer stopAtTime:error:]
-[PatternPlayer sendParameters:atTime:error:]
-[PatternPlayer cancelAndReturnError:]
-[PatternPlayer scheduleParameterCurve:atTime:error:]
OSStatus
HapticUtils.h
_Haptic_Check
Error 
%s: %s
CHDeviceCapability.mm
-[CHDefaultHapticDeviceCapability attributesForEventParameter:eventType:error:]
-[CHDefaultHapticDeviceCapability attributesForDynamicParameter:error:]
Default
HapticServerConfig.mm
-[HapticServerConfig initWithHapticPlayer:withOptions:error:]
RequestedLocality
SupportsAudioPlayback
SupportsAdvancedPatternPlayers
UsingInternalHaptics
HapticContinuousTimeLimit
HapticTransientDefaultIntensity
HapticTransientDefaultSharpness
HapticContinuousDefaultIntensity
HapticContinuousDefaultSharpness
HapticTransientEventIDs
HapticContinuousSustainedEventIDs
HapticContinuousNonsustainedEventIDs
RequestedPriority
RequestedPowerUsage
-[HapticServerConfig initWithHapticPlayer:withOptions:error:]_block_invoke
v24@?0@"NSDictionary"8@"NSError"16
allocator<T>::allocate(size_t n) 'n' exceeds maximum supported size
CHHapticAdvancedPatternPlayer.mm
-[AdvancedPatternPlayer finishInit]
-[AdvancedPatternPlayer finishInit]_block_invoke
v16@?0@"NSError"8
-[AdvancedPatternPlayer initWithPattern:engine:privileged:error:]
-[AdvancedPatternPlayer dealloc]
-[AdvancedPatternPlayer doSetMute:]
-[AdvancedPatternPlayer clearExternalResources:]
-[AdvancedPatternPlayer doStartFromStoppedAtTime:error:]
-[AdvancedPatternPlayer doStartFromPausedAtTime:error:]
-[AdvancedPatternPlayer doResumeAtTime:error:]
-[AdvancedPatternPlayer startAtTime:error:]
/Library/Caches/com.apple.xbs/Sources/CoreHaptics_Sim/CoreHaptics-166.60/Source/CHHapticAdvancedPatternPlayer.mm
_sequence != nil
-[AdvancedPatternPlayer stopAtTime:error:]
-[AdvancedPatternPlayer sendParameters:atTime:error:]
-[AdvancedPatternPlayer scheduleParameterCurve:atTime:error:]
-[AdvancedPatternPlayer pauseAtTime:error:]
-[AdvancedPatternPlayer resumeAtTime:error:]
-[AdvancedPatternPlayer seekToOffset:error:]
-[AdvancedPatternPlayer cancelAndReturnError:]
-[AdvancedPatternPlayer setCompletionHandler:]
-[AdvancedPatternPlayer setCompletionHandler:]_block_invoke_2
v8@?0
-[AdvancedPatternPlayer setCompletionHandler:]_block_invoke
-[AdvancedPatternPlayer activateChannelByIndex:atTime:error:]
-[AdvancedPatternPlayer setVolume:atTime:error:]
AudioResource.mm
open
verifyAudioFile
readAndAllocateRawBuffer
incrementAllocatedBytes
decrementAllocatedBytes
error
warning
note
notice
info
details
minutiae
spew
AudioSineTransient
AudioSine
HapticSineTransient
HapticSine
HapticSineLow
HapticSineLowMid
HapticSineMid
HapticSineMidHigh
HapticSineHigh
HapticMicroTap2
HapticMicroTap3
HapticMicroTap4
HapticMicroTap5
HapticMicroTap6
HapticMicroTap7
HapticMicroTap8
HapticMicroTap9
HapticMiniTap2
HapticMiniTap3
HapticMiniTap4
HapticMiniTap5
HapticMiniTap6
HapticMiniTap7
HapticMiniTap8
HapticMiniTap9
HapticFullTap2
HapticFullTap3
HapticFullTap4
HapticFullTap5
HapticFullTap6
HapticFullTap7
HapticFullTap8
HapticFullTap9
AudioVolume
AudioTransposition
AudioAttackTime
AudioDecayTime
AudioReleaseTime
AudioLPFilterCutoff
HapticVolume
HapticTransposition
HapticAttackTime
HapticDecayTime
HapticReleaseTime
Type
Value
Time
Param
EventToDictionaryConverter.mm
+[EventToDictionaryConverter convertEvents:]
Event
Pattern
HapticDictionaryWriter.mm
-[HapticDictionaryWriter eventToDictionary:embeddedResourceInfo:]
CoreHapticsOperationNotPermittedException
Cannot export AudioCustom events
HapticCommandConverter.mm
-[HapticCommandConverter eventForAudioEventType:time:eventParams:duration:]
CoreHapticInvalidParamException
Unknown event param type
-[HapticCommandConverter eventForTransientHapticAtTime:params:duration:]
-[HapticCommandConverter eventForLegacyTransientHapticAtTime:params:duration:]
CoreHapticsBadEventEntryException
Cannot mix privileged and unprivileged Sharpness parameters
Cannot mix Fullness with unprivileged Sharpness parameter
Unknown event parameter type
-[HapticCommandConverter eventForContinuousHapticEventType:time:params:duration:]
-[HapticCommandConverter eventForSPIEventType:time:eventParams:duration:]
Unsupported event param type
-[HapticCommandConverter eventForEventEntry:engine:privileged:]
CoreHapticInvalidEventTimeException
Illegal time value
CoreHapticInvalidEventDurationException
Illegal event duration
B32@?0@"CHHapticEventParameter"8Q16^B24
Illegal or missing event duration
CoreHapticInvalidAudioResourceException
Invalid or missing audio resource
CoreHapticInvalidEventTypeException
Unknown privileged event type
Unknown event type
-[HapticCommandConverter eventForDynamicParameterEntry:]
Unknown dynamic parameter
-[HapticCommandConverter eventForParameterCurveEntry:]
-[HapticCommandConverter CHtoAVParameterCurve:]
Invalid dynamic parameter for curve
LimitEventParameterValue
LimitDynamicParameterValue
HapticDictionaryReader.mm
-[HapticDictionaryReader readPatternID:error:]
-[HapticDictionaryReader readAndVerifyVersion:error:]
-[HapticDictionaryReader parseConfiguration:error:]_block_invoke
v32@?0@"NSString"8@16^B24
-[HapticDictionaryReader scanForEmbeddedResources:]_block_invoke
-[HapticDictionaryReader parseEventsAndParameters:reply:]
EventTime
v32@?0@8@16^B24
-[HapticDictionaryReader parseEvent:]
CoreHapticsMissingEventTypeException
Missing event type
CoreHapticsInvalidEventTimeException
Illegal or missing event time
CoreHapticsInvalidEventDurationException
Missing or invalid audio resource path
Invalid audio resource path
CoreHapticsInvalidAudioResourceException
Invalid audio resource
-[HapticDictionaryReader parseEventParams:]
CoreHapticsBadParameterEntryException
Event parameter has invalid or missing parameter ID
Event parameter has invalid or missing parameter value
ParameterTime
-[HapticDictionaryReader parseParam:]
time
type
Parameter has invalid or missing time or type key
-[HapticDictionaryReader parseParamCurve:]
ParameterCurve has invalid or missing time or type key
-[HapticDictionaryReader parseParamCurveControlPoints:]
com.apple.coreaudio
CHHapticPattern.mm
-[CHHapticPattern initWithDictionary:error:]
v40@?0@"NSMutableArray"8@"NSMutableArray"16@"NSMutableArray"24@"NSError"32
FullURLPathFromURL
-[CHHapticPattern resolveExternalResources:error:]
+[CHHapticPattern patternForKey:error:]
/Library/Audio/Tunings/Generic/Haptics/Library/hapticpatternlibrary.plist
PatternID
Version
Configuration
Locality
Priority
HapticPowerUsage
AudioPowerUsage
EventType
EventDuration
EventWaveformPath
EventWaveformUseVolumeEnvelope
EventParameters
Parameter
ParameterID
ParameterValue
ParameterCurve
ParameterCurveControlPoints
TestPattern01
TestPattern02
ScreenLocked
ConnectedToPower
KeyboardInputText
KeyboardInputSeparator
KeyboardDeletion
KeyboardDeletionRepeat
KeyboardDeletionRapid
KeyboardOther
hapi
com.apple.corehaptics
hapticapi_verbose
hpwr
hapticpower_verbose
hmet
hapticmetrics_verbose
LowPriority
HighPriority
HighestPriority
LowPower
HighPower
HapticTransient
HapticContinuous
AudioCustom
AudioContinuous
WheelsOfTime
AudioClick
HapticIntensity
HapticSharpness
AttackTime
DecayTime
ReleaseTime
Sustained
AudioPitch
AudioPan
AudioBrightness
HapticIntensityControl
HapticSharpnessControl
HapticAttackTimeControl
HapticDecayTimeControl
HapticReleaseTimeControl
AudioVolumeControl
AudioPanControl
AudioBrightnessControl
AudioPitchControl
AudioAttackTimeControl
AudioDecayTimeControl
AudioReleaseTimeControl
HapticSharpnessSelect
HapticFullnessSelect
UseVolumeEnvelope
CHHapticEngine.mm
+[CHHapticEngine lazyInitResourceMap]
-[CHHapticEngine setAutoShutdownEnabled:]
-[CHHapticEngine setAutoShutdownEnabled:]_block_invoke
CHHapticLocalityEngineDefault
-[CHHapticEngine setAutoShutdownTimeout:]
-[CHHapticEngine setupUnsharedAudioSessionAndReturnError:]
-[CHHapticEngine handleMediaServerRecovery:]_block_invoke
CHHapticErrorCodeServerInitFailedException
Failed to set up audio session
-[CHHapticEngine createHapticPlayerWithOptions:]
Failed to connect to server
-[CHHapticEngine finishInit:]_block_invoke
-[CHHapticEngine finishInit:]
v16@?0q8
-[CHHapticEngine startIdleTimerWithHandler:]
-[CHHapticEngine startIdleTimerWithHandler:]_block_invoke
-[CHHapticEngine beginIdleTimer]_block_invoke
-[CHHapticEngine beginIdleTimer]_block_invoke_2
-[CHHapticEngine cancelIdleTimer]
-[CHHapticEngine handleFinish:]
-[CHHapticEngine handleFinish:]_block_invoke
-[CHHapticEngine updateEngineBehavior]
-[CHHapticEngine stopAndWait]
-[CHHapticEngine stopAndWait]_block_invoke
-[CHHapticEngine dealloc]
AudioSessionID
AudioSessionIsShared
-[CHHapticEngine doInit:sessionIsShared:options:error:]
CHHapticEngineDispatchQueue
-[CHHapticEngine initAndReturnError:]
-[CHHapticEngine initWithAudioSession:error:]
-[CHHapticEngine doInitWithOptions:error:]
-[CHHapticEngine prewarmWithCompletionHandler:]
-[CHHapticEngine prewarmWithCompletionHandler:]_block_invoke
-[CHHapticEngine stopPrewarm]
-[CHHapticEngine doStartWithCompletionHandler:]
-[CHHapticEngine doStartWithCompletionHandler:]_block_invoke_2
-[CHHapticEngine doStartWithCompletionHandler:]_block_invoke
-[CHHapticEngine startWithCompletionHandler:]
/Library/Caches/com.apple.xbs/Sources/CoreHaptics_Sim/CoreHaptics-166.60/Source/CHHapticEngine.mm
_player != nil
-[CHHapticEngine startWithCompletionHandler:]_block_invoke
-[CHHapticEngine doStartEngineAndWait:]_block_invoke
-[CHHapticEngine doStartEngineAndWait:]
-[CHHapticEngine startAndReturnError:]
-[CHHapticEngine doStopEngineAndWait:]
-[CHHapticEngine doStopEngineAndWait:]_block_invoke
-[CHHapticEngine doStopWithCompletionHandler:]
-[CHHapticEngine doStopWithCompletionHandler:]_block_invoke
-[CHHapticEngine stopWithCompletionHandler:]
-[CHHapticEngine stopWithCompletionHandler:]_block_invoke
-[CHHapticEngine notifyWhenPlayersFinished:]
-[CHHapticEngine notifyWhenPlayersFinished:]_block_invoke_2
-[CHHapticEngine notifyWhenPlayersFinished:]_block_invoke
-[CHHapticEngine initWithAudioSessionID:error:]
-[CHHapticEngine initWithAudioSession:sessionIsShared:options:error:]
shared
unshared
-[CHHapticEngine createPlayerWithPattern:error:]
-[CHHapticEngine createAdvancedPlayerWithPattern:error:]
-[CHHapticEngine createAdvancedPlayerWithRingtoneData:error:]
-[CHHapticEngine createAdvancedPlayerWithRingtonePattern:error:]
-[CHHapticEngine createPrivilegedPlayerWithPlayable:error:]
-[CHHapticEngine getDurationForResource:]
-[CHHapticEngine addPublicAudioResourceID:withURL:options:]
-[CHHapticEngine hasPublicAudioResourceID:]
found
did not find
-[CHHapticEngine removePublicAudioResourceID:]
-[CHHapticEngine registerAudioResource:options:error:]
self.player != nil
-[CHHapticEngine unregisterAudioResource:error:]
-[CHHapticEngine doUnregisterAllPublicAudioResources]
-[CHHapticEngine playPatternFromURL:error:]
json
ahap
plist
-[CHHapticEngine playPatternFromData:error:]
-[CHHapticEngine doPlayPatternFromDictionary:error:]
-[CHHapticEngine doPlayPatternFromDictionary:error:]_block_invoke
-[CHHapticEngine(CHHapticEngineInternal) dispatchOnLocal:]
-[CHHapticEngine(CHHapticEngineInternal) dispatchOnLocal:]_block_invoke
-[CHHapticEngine(CHHapticEngineInternal) dispatchSyncOnLocal:]
-[CHHapticEngine(CHHapticEngineInternal) dispatchSyncOnLocal:]_block_invoke
-[CHHapticEngine(CHHapticEngineInternal) checkEngineStateOnStart:]
self.running
-[CHHapticEngine(CHHapticEngineInternal) checkEngineRunning:]
-[CHHapticEngine(CHHapticEngineInternal) notifyPlayerStarted:atTime:]_block_invoke_2
-[CHHapticEngine(CHHapticEngineInternal) notifyPlayerStarted:atTime:]_block_invoke
-[CHHapticEngine(CHHapticEngineInternal) notifyPlayerStopped:atTime:]
-[CHHapticEngine(CHHapticEngineInternal) getAvailableChannel:]
-[CHHapticEngine(CHHapticEngineInternal) releaseChannel:]
-[CHHapticEngine(CHHapticEngineInternal) doReferenceAudioResourceByID:]
+[CHHapticEngine(CHHapticEngineInternal) doRegisterAudioResource:options:fromPattern:player:error:]
Public
+[CHHapticEngine(CHHapticEngineInternal) doRegisterAudioResource:options:fromPattern:player:error:]_block_invoke
v24@?0Q8@"NSError"16
resource->verifyAudioFile(false)
status
+[CHHapticEngine(CHHapticEngineInternal) doUnregisterAudioResource:fromPattern:player:error:]
pattern-loaded
public-loaded
newStateFromOld
/System/Library/Frameworks/AVFoundation.framework/AVFoundation
AVAudioFormat
AVAudioSession
AVAudioSessionMediaServicesWereResetNotification
AVAudioSessionCategorySystemSoundsAndHaptics
AVAudioSessionModeHapticsConstantVolume
AudioResourceIndex
 enableTelemetry=YES 
%25s:%-5d %s: creating player %p
%25s:%-5d %s: ERROR: pattern contains no playable events
PatternPlayer_initWithPlayable
%25s:%-5d %s: destroying player %p
%25s:%-5d %s: Sending %smute params
%25s:%-5d %s: Clearing any externally-registered audio resources
%25s:%-5d %s: Starting simple player %p at time %.3f
PatternPlayer_startAtTime
%25s:%-5d %s: Stopping simple player %p at time %.3f
PatternPlayer_stopAtTime
%25s:%-5d %s: Sending simple player %p parameters at time %.3f
PatternPlayer_sendParameters
%25s:%-5d %s: Cancelling events on simple player %p immediately
PatternPlayer_cancelAndReturnError
%25s:%-5d %s: Sending player %p a parameter curve
PatternPlayer_scheduleParameterCurve
%25s:%-5d %s: %s: %s error %d
%25s:%-5d %s: In parameter %@ is not a valid CHHapticEventParameter
%25s:%-5d %s: In parameter %@ is not a valid CHHapticDynamicParameter
%25s:%-5d %s: Engine not configured with a Locality - querying using '%@'
%25s:%-5d %s: Querying server for capabilities with '%@' Locality
%25s:%-5d %s: Querying server for capabilities with Priority '%@'
%25s:%-5d %s: ERROR: Illegal priority: %@
%25s:%-5d %s: Querying server for capabilities with HapticPowerUsage '%@'
%25s:%-5d %s: ERROR: Illegal power usage: %@
%25s:%-5d %s: Server returned: supports audio: %d adv players: %d internal: %d cont time limit: %us
%25s:%-5d %s: Recieved %u haptic transient IDs
%25s:%-5d %s: Recieved %u haptic continuous sustained IDs
%25s:%-5d %s: Recieved %u haptic continuous nonsustained IDs
%25s:%-5d %s: ERROR: Caught exception during dictionary parse
%25s:%-5d %s: ERROR: Server query returned error '%@'
%25s:%-5d %s: Setting default completion handler on underlying AVHapticSequence
%25s:%-5d %s: Player %p default completion handler called
%25s:%-5d %s: Creating advanced player %p
AdvancedPatternPlayer_initWithPattern
%25s:%-5d %s: Destroying advanced player %p
%25s:%-5d %s: Starting sequence with offset %.3f
%25s:%-5d %s: Restarting paused sequence with offset %.3f
%25s:%-5d ASSERTION FAILURE [(self.paused) != 0 is false]: 
%25s:%-5d %s: Resuming paused sequence with offset %.3f
%25s:%-5d %s: Starting player %p at time %.3f
AdvancedPatternPlayer_startAtTime
%25s:%-5d %s: Stopping player %p at time %.3f
AdvancedPatternPlayer_stopAtTime
%25s:%-5d %s: Sending player %p parameters at time %.3f
AdvancedPatternPlayer_sendParameters
%25s:%-5d %s: ERROR: Parameter curves are not yet supported on CHHapticAdvancedPlayers
%25s:%-5d %s: Pausing player %p at time %.3f
%25s:%-5d %s: Resuming player %p at time %.3f
%25s:%-5d %s: Caching player %p offset %.2f for later start/resume
%25s:%-5d %s: Seeking on player %p to offset %.2f
%25s:%-5d %s: Cancelling commands for player %p immediately
%25s:%-5d %s: Wrapping client's completion handler block %p in our block and setting on underlying AVHapticSequence
%25s:%-5d %s: Player %p client-supplied completion handler called - calling captured block %p on internal queue
%25s:%-5d %s: Client-supplied completion handler called on destroyed player - calling captured block %p on global queue
AdvancedPatternPlayer_initWithRingtoneData
%25s:%-5d %s: ERROR: Failed to open audio resource %@: %u
%25s:%-5d %s: ERROR: Failed to get property for audio resource %@
%25s:%-5d %s: ERROR: Failed to set property on audio resource %@
%25s:%-5d %s: ERROR: Failed to read from audio resource %@: %u
%25s:%-5d %s: Adding %llu bytes to our existing %llu
%25s:%-5d %s: Memory limit reached on custom audio resources - unregister others to make space
%25s:%-5d %s: Removing %llu bytes from our existing %llu
%25s:%-5d ASSERTION FAILURE [(_sTotalAllocatedBytes >= bytes) != 0 is false]: 
%25s:%-5d %s: ERROR: Unknown event param type: %u
%25s:%-5d %s: ERROR: Unknown param type: %u
%25s:%-5d %s: ERROR: Cannot export AudioCustom events
%25s:%-5d %s: Type %u time: %.2f secs dur: %.2f secs %u event params
%25s:%-5d %s: Fixed Param '%@': value %f
%25s:%-5d %s: ERROR: Unknown event param type: %@
%25s:%-5d %s: Time: %.2f secs dur %.2f secs %u event params
%25s:%-5d %s: Fixed Param '%@': value: %f
%25s:%-5d %s: Normalized sharpness %f -> event type %u
%25s:%-5d %s: Ignoring for HapticTransient
%25s:%-5d %s: Event has no HapticSharpness EventParameter. Default event type: %u
%25s:%-5d %s: Adding event param for haptic gain: %.2f
%25s:%-5d %s: Normalized value %f -> sharpness index %d
%25s:%-5d %s: ERROR: Cannot mix Fullness with unprivileged Sharpness parameter
%25s:%-5d %s: Normalized value %f -> fullness index %d
%25s:%-5d %s: ERROR: Cannot mix privileged and unprivileged Sharpness parameters
%25s:%-5d %s: ERROR: Unknown event parameter type: %@
%25s:%-5d %s: Handling as a non-privileged event
%25s:%-5d %s: Type %u time: %.2f secs duration: %.2f secs %u client event params
%25s:%-5d %s: Event has no HapticSharpness EventParameter. Using default event ID %u
%25s:%-5d %s: Adding event param for continuous haptic intensity: %.2f
%25s:%-5d %s: ERROR: Unsupported event param type: %@
%25s:%-5d %s: Event type '%@':
%25s:%-5d %s: ERROR: Illegal time value: %f
%25s:%-5d %s: ERROR: Illegal duration value: %f
%25s:%-5d %s: ERROR: Continuous haptic event has a missing or zero-length duration
%25s:%-5d %s: Haptic event duration capped at %f seconds
%25s:%-5d %s: ERROR: Continuous audio event has a missing or zero-length duration
%25s:%-5d %s: ERROR: Invalid or missing audio resource with ID %u
%25s:%-5d %s: ERROR: Unknown privileged event type: %@
%25s:%-5d %s: ERROR: Unknown event type: %@
%25s:%-5d %s: Dynamic parameter ID '%@':
%25s:%-5d %s: Creating event for haptic volume %f for time %f seconds
%25s:%-5d %s: Creating event for haptic transposition %f for time %f seconds
%25s:%-5d %s: Creating event for haptic attack time %f for time %f seconds
%25s:%-5d %s: Creating event for haptic decay time %f for time %f seconds
%25s:%-5d %s: Creating event for haptic release time %f for time %f seconds
%25s:%-5d %s: Creating event for audio volume %f for time %f seconds
%25s:%-5d %s: Creating event for audio brightness %f for time %f seconds
%25s:%-5d %s: Creating event for audio pan %f for time %f seconds
%25s:%-5d %s: Creating event for audio transposition %f for time %f seconds
%25s:%-5d %s: Creating event for audio attack time %f for time %f seconds
%25s:%-5d %s: Creating event for audio decay time %f for time %f seconds
%25s:%-5d %s: Creating event for audio release time %f for time %f seconds
%25s:%-5d %s: ERROR: Unrecognized dynamic parameter: %@
%25s:%-5d %s: Parameter curve ID: '%@', relative time: %f
%25s:%-5d %s: ERROR: ID %@ is not supported by parameter curves
%25s:%-5d %s: ERROR: Invalid event parameter ID.
%25s:%-5d %s: ERROR: Invalid dynamic parameter ID
%25s:%-5d %s: Pattern ID: '%@'
%25s:%-5d %s: ERROR: Pattern ID must be an NSString
%25s:%-5d %s: WARNING: Missing or malformed version key - assuming v1.0
%25s:%-5d %s: ERROR: Unsupported version number: %.1f
%25s:%-5d %s: Pattern version %.1f
%25s:%-5d %s: Pattern Locality: '%@'
%25s:%-5d %s: Pattern Priority: '%@'
%25s:%-5d %s: Pattern HapticPowerUsage: '%@'
%25s:%-5d %s: Pattern AudioPowerUsage: '%@'
%25s:%-5d %s: Adding embedded audio resource path '%@', options '%@'
%25s:%-5d %s: ERROR: Pattern dictionary is missing '%@' key
%25s:%-5d %s: ERROR: Empty pattern
%25s:%-5d %s: ERROR: Missing event type
%25s:%-5d %s: ERROR: Illegal or missing event time
%25s:%-5d %s: ERROR: Illegal event duration
%25s:%-5d %s: ERROR: Custom event is missing its audio resource path
%25s:%-5d %s: ERROR: Custom event's audio resource path cannot be resolved
%25s:%-5d %s: ERROR: Event parameter has invalid or missing parameter ID
%25s:%-5d %s: ERROR: Event parameter has invalid or missing parameter value
%25s:%-5d %s: ERROR: Param is missing a %s
%25s:%-5d %s: ERROR: Parameter curve control point has invalid or missing time
%25s:%-5d %s: ERROR: Parameter curve control point has invalid or missing value
%25s:%-5d %s: Pattern version > %.1f - looking for config dictionary
%25s:%-5d %s: Searching for resource in '%@'
%25s:%-5d %s: Found it at '%@'
%25s:%-5d %s: WARNING: Skipping Custom Audio event - server does not support audio
%25s:%-5d %s: Creating pattern for key '%@'
%25s:%-5d %s: Pattern library path: %@
%25s:%-5d %s: Failed to read pattern library data: %@
%25s:%-5d %s: Read pattern library data
%25s:%-5d %s: Failed to load pattern library: %@
%25s:%-5d %s: Loaded pattern library dict:
%25s:%-5d %s: Haptic pattern with key '%@' not found
%25s:%-5d %s: '%@' path: %@
%25s:%-5d %s: Failed to read pattern data: %@
%25s:%-5d %s: Read pattern data
%25s:%-5d %s: Failed to serialize pattern data: %@
%25s:%-5d %s: '%@' pattern dict:
%25s:%-5d %s: Creating resource map on first use
%25s:%-5d %s: auto-shutdown being enabled while running - wait for any existing players
%25s:%-5d %s: <Top of AV finishWithCompletionHandler block>
%25s:%-5d %s: finishWithCompletionHandler callback returned error: %@
%25s:%-5d %s: <Bottom of AV finishWithCompletionHandler block>
%25s:%-5d %s: auto-shutdown being disabled
%25s:%-5d %s: Invalid shutdown timeout (%f) being ignored
%25s:%-5d %s: Setting SS&H category, disabling notifications and NowPlaying for this audio session
%25s:%-5d %s: Failed to set category on audio session
%25s:%-5d %s: Setting ConstantVolume mode on audio session
%25s:%-5d %s: Failed to set mode on audio session
%25s:%-5d %s: Cannot set audio session with session flags. Continue
%25s:%-5d %s: Cannot set audio buffer frame size to %u. Using default buffer size
%25s:%-5d %s: This build does not yet support AVAudioSessionModeHapticsConstantVolume!
%25s:%-5d %s: Failed to disable audio session notifications
%25s:%-5d %s: Failed to disable audio session now-playing policy
%25s:%-5d %s: Setting NeedsPowerBudgeting property on audio session
%25s:%-5d %s: Failed to set audio session NeedsPowerBudgeting
%25s:%-5d %s: Attempting to reconnect engine %p to server
%25s:%-5d %s: Engine already destroyed - noop
%25s:%-5d %s: Calling engine-reset handler on default queue
%25s:%-5d %s: Done with reconnect for engine %p
%25s:%-5d %s: FATAL ERROR: Unable to reconnect to server
HapticEngine_handleMediaServerRecovery
%25s:%-5d %s: Creating underlying Haptic Player
%25s:%-5d %s: Attempt #%d...
%25s:%-5d %s: ERROR: Server failure: %@
%25s:%-5d %s: ERROR: Server connection broke with error '%@'
%25s:%-5d %s: Waiting to reconnect
%25s:%-5d %s: Allocating resources...
%25s:%-5d %s: ERROR: Resource allocation failure: %@
%25s:%-5d %s: Releasing lock
%25s:%-5d %s: Waiting for server...
%25s:%-5d %s: ERROR: Server timeout
%25s:%-5d %s: Default behavior is to follow audio route
%25s:%-5d %s: Setting behavior to not follow audio route
%25s:%-5d %s: In player's stopRunningHandler block.  Stopped reason: %d
%25s:%-5d %s: Calling engine-stopped handler with reason %d
%25s:%-5d %s: Finished initializing
%25s:%-5d %s: Creating idle timer for %.3f seconds
%25s:%-5d %s: Calling idle timeout handler on internal queue
%25s:%-5d %s: Starting idle timer (on async dispatch)
%25s:%-5d %s: Stopping engine in response to timeout
%25s:%-5d %s: Calling client's engine-stopped handler on internal queue
%25s:%-5d %s: Cancelling idle timer
%25s:%-5d %s: Called on engine %p with error %@
%25s:%-5d %s: Calling client's finishedHandler on internal queue
%25s:%-5d %s: Client requested engine stop-on-finish
%25s:%-5d %s: Client finishedHandler is nil
%25s:%-5d %s: <Top of doStopWithCompletionHandler block>
%25s:%-5d %s: Calling engine-stopped handler on internal queue
%25s:%-5d %s: Engine stop completed
%25s:%-5d %s: Client-supplied stopped handler called on destroyed player - calling captured block %p on global queue
%25s:%-5d %s: Requested not to stop-on-finish
%25s:%-5d %s: Done handling finish
%25s:%-5d %s: Setting player's behavior to 0x%x
%25s:%-5d %s: Synchronously stopping the underlying player %p
%25s:%-5d %s: Calling stop completion handler on internal queue
%25s:%-5d %s: Underlying player %p not running
%25s:%-5d %s: synchronously stopping and destroying engine %p
%25s:%-5d %s: done destroying engine %p
%25s:%-5d %s: sessionID: %u, isShared: %u options: '%@'
%25s:%-5d %s: ERROR: Invalid audio session ID: %u
%25s:%-5d %s: Creating engine %p with legacy initializer
HapticEngine_initAndReturnError
%25s:%-5d %s: Creating engine %p with audio session %p
%25s:%-5d %s: Creating engine %p with internal audio session
HapticEngine_initWithAudioSession
%25s:%-5d %s: options: '%@'
HapticEngine_initWithOptions
%25s:%-5d %s: Prewarming the underlying Haptic Player
%25s:%-5d %s: ERROR: Player prewarm failed: %@
%25s:%-5d %s: Calling prewarm completion handler
HapticEngine_prewarmWithCompletionHandler
%25s:%-5d %s: Stopping prewarm on the underlying Haptic Player
HapticEngine_stopPrewarm
%25s:%-5d %s: Starting underlying Haptic Player
%25s:%-5d %s: In underlying AVHapticPlayer's completion handler block
%25s:%-5d %s: ERROR: Player start failed: %@
%25s:%-5d %s: Calling start completion handler on internal queue
%25s:%-5d %s: Called on engine %p
%25s:%-5d %s: Engine already running
%25s:%-5d %s: Directly calling start completionHandler on internal queue
HapticEngine_startWithCompletionHandler
%25s:%-5d %s: Waiting for startup...
%25s:%-5d %s: ERROR: Startup timeout
%25s:%-5d %s: Startup complete
HapticEngine_startAndReturnError
%25s:%-5d %s: Synchronously stopping underlying Haptic Player
%25s:%-5d %s: In underlying AVHapticPlayer's completion handler block for doStopEngineAndWait
%25s:%-5d %s: ERROR: Player stop failed: %@
%25s:%-5d %s: Waiting for player stop...
%25s:%-5d %s: WARNING: timed out waiting for underlying player to stop
%25s:%-5d %s: Done waiting for underlying player stop
%25s:%-5d %s: Stopping underlying Haptic Player
%25s:%-5d %s: In underlying AVHapticPlayer's completion handler block for doStopWithCompletionHandler
%25s:%-5d %s: ERROR: Lower-level player stop failed: %@
%25s:%-5d %s: Engine not running
%25s:%-5d %s: Directly calling stop completionHandler on internal queue
HapticEngine_stopWithCompletionHandler
%25s:%-5d %s: Called on engine %p with finishedHandler %p
%25s:%-5d %s: Creating engine %p with shared audio session ID %u
HapticEngine_initWithAudioSessionID
%25s:%-5d %s: Creating engine %p with %s audio session %p
%25s:%-5d %s: Shared audio session cannot be nil
%25s:%-5d %s: Creating internal unshared audio session
%25s:%-5d %s: Using passed-in audio session
%25s:%-5d %s: Setting behavior to not activate audio session (if haptics-only)
%25s:%-5d %s: Creating player from pattern
%25s:%-5d %s: Creating advanced player from pattern
%25s:%-5d %s: Creating advanced player from ringtone data
%25s:%-5d %s: Creating advanced player from ringtone pattern
%25s:%-5d %s: Creating privileged player from Playable
%25s:%-5d %s: Cannot find resource referenced by ID %u. Returning 0.0
%25s:%-5d %s: Engine %p adding resID %u
%25s:%-5d ASSERTION FAILURE [([self doFindPublicAudioResourceID:resourceID] == std::end(_publicAudioResources)) != 0 is false]: 
%25s:%-5d %s: Engine %p %s resID %u
%25s:%-5d %s: Engine %p removing resID %u
%25s:%-5d ASSERTION FAILURE [(result != std::end(_publicAudioResources)) != 0 is false]: 
HapticEngine_registerAudioResource
%25s:%-5d %s: ERROR: audio resource ID %u not registered on this CHHapticEngine
HapticEngine_unregisterAudioResource
%25s:%-5d %s: Attempting to remove all remaining public audio resources for this engine
%25s:%-5d %s: Creating haptic pattern from JSON or AHAP...
%25s:%-5d %s: Creating haptic pattern from plist...
%25s:%-5d %s: Incoming URL not a valid file path URL or file type not supported
%25s:%-5d %s: Incoming fileURL cannot be nil
HapticEngine_playPatternFromURL
%25s:%-5d %s: Incoming NSData is invalid
HapticEngine_playPatternFromData
%25s:%-5d %s: Incoming NSData cannot be nil
%25s:%-5d %s: Creating Pattern Player
%25s:%-5d %s: Starting CHHapticEngine...
%25s:%-5d %s: Cannot start haptic engine: error %@
%25s:%-5d %s: Starting Pattern Player...
%25s:%-5d %s: <Dispatching block %p async...>
%25s:%-5d ASSERTION FAILURE [(!in_dispatch_sync) != 0 is false]: 
%25s:%-5d %s: <Block async dispatch complete>
%25s:%-5d %s: <Dispatching block %p sync...>
%25s:%-5d %s: <Block sync dispatch complete>
%25s:%-5d %s: AutoShutdown on and engine stopped - auto start
%25s:%-5d %s: player %p notified engine it will be stopping at time %.3f
%25s:%-5d %s: ERROR: Unable to add an additional player channel
%25s:%-5d %s: ERROR: This channel was not registered
%25s:%-5d %s: Adding reference to audio resource ID %u from pattern
%25s:%-5d %s:    found it - reference count now %u
%25s:%-5d %s: Resource ID %u not previously registered!
%25s:%-5d %s: Registering %s audio resource '%@'
%25s:%-5d %s: -- Entry list has '%@' with ID %u, and count %u
%25s:%-5d %s: Resource already registered and request uses matching options - referencing and returning existing ID (%u)
%25s:%-5d %s: ERROR: unable to reference server-side audio resource with ID %u: %@
%25s:%-5d %s: Resource already registered but request uses options - copy existing ID (%u) as new ID
%25s:%-5d %s: ERROR: Server failed to copy custom audio event: %@
%25s:%-5d ASSERTION FAILURE [(_sResourceEntries->emplace(copiedResourceID, ResourceEntry(resource, options, 1)).second == true) != 0 is false]: 
%25s:%-5d %s: Returning ID %u for copied resource '%@'
%25s:%-5d %s: Resource not already registered - creating new entry
%25s:%-5d %s: ERROR: Server failed to create custom audio event: %@
%25s:%-5d %s: Adding new ID %u for %s resource '%@'
%25s:%-5d ASSERTION FAILURE [(_sResourceEntries->emplace(resourceID, ResourceEntry(resource, options, 1)).second == true) != 0 is false]: 
%25s:%-5d %s: Attempting to remove %s ID %u
%25s:%-5d %s:    found it and refcount is at zero - erasing and releasing on server
%25s:%-5d %s: ERROR: unable to release server-side audio resource with ID %u: %@
%25s:%-5d %s:    found it and decrementing refcount
%25s:%-5d %s: ERROR: could not find audio resource with ID %u
%25s:%-5d %s: Old: %d mute: %d running: %d => New: %d
PatternPlayer
CHHapticPatternPlayer
NSObject
CHHapticParameterAttributesImpl
CHHapticParameterAttributes
CHDefaultHapticDeviceCapability
CHHapticDeviceCapability
CHHapticParameterCurve
CHHapticParameterCurveControlPoint
HapticServerConfig
AdvancedPatternPlayer
CHHapticAdvancedPatternPlayerExtended
CHHapticAdvancedPatternPlayer
EventToDictionaryConverter
PatternPlayerBase
PatternPlayerDetails
HapticDictionaryWriter
HapticCommandConverter
HapticDictionaryReader
CHHapticEventParameter
CHHapticDynamicParameter
CHMetrics
CHHapticPattern
CHHapticPlayable
CHEmbeddedAudioResourceInfo
CHHapticEngine
CHHapticEngineInternal
CHHapticEvent
CHHapticEventInternal
init
getAvailableChannel:
resolveExternalResources:error:
parameters
parameterCurves
eventListFromEvents:parameters:parameterCurves:engine:privileged:
count
patternID
duration
metrics
handleInitForPlayer:events:isAdvanced:
handleParamCurveEncountered
clearExternalResources:
releaseChannel:
dealloc
setParameter:value:atTime:error:
objectAtIndexedSubscript:
eventType
resourceIsRegistered:
player
doUnregisterAudioResource:fromPattern:player:error:
checkEngineStateOnStart:
doSetMute:
needsResetForAction:
resetAtTime:error:
sendEvents:atTime:error:
notifyPlayerStarted:atTime:
handleStartForPlayer:time:isAdvanced:patternID:
checkEngineRunning:
clearEvents:error:
notifyPlayerStopped:atTime:
handleActionForPlayer:action:time:isAdvanced:
relativeTime
setRelativeTime:
arrayWithObjects:count:
running
isEqual:
class
self
performSelector:
performSelector:withObject:
performSelector:withObject:withObject:
isProxy
isKindOfClass:
isMemberOfClass:
conformsToProtocol:
respondsToSelector:
retain
release
autorelease
retainCount
zone
hash
superclass
description
debugDescription
TQ,R
T#,R
T@"NSString",R,C
startAtTime:error:
stopAtTime:error:
sendParameters:atTime:error:
scheduleParameterCurve:atTime:error:
cancelAndReturnError:
isMuted
setIsMuted:
initWithPlayable:engine:privileged:error:
.cxx_destruct
_channel
name
userInfo
objectForKey:
integerValue
errorWithDomain:code:userInfo:
stringWithUTF8String:
dictionaryWithObjectsAndKeys:
stringWithCString:encoding:
numberWithInteger:
dictionaryWithObject:forKey:
exceptionWithName:reason:userInfo:
minValue
maxValue
defaultValue
Tf,R
initWithMinValue:maxValue:defaultValue:
_minValue
_maxValue
_defaultValue
Tf,R,V_minValue
Tf,R,V_maxValue
Tf,R,V_defaultValue
isSupported
dictionaryWithObjects:forKeys:count:
floatValue
isEqualToString:
minimumValueForEventParameter:
maximumValueForEventParameter:
defaultValueForEventParameter:eventType:
minimumValueForDynamicParameter:
maximumValueForDynamicParameter:
defaultValueForDynamicParameter:
attributesForEventParameter:eventType:error:
attributesForDynamicParameter:error:
supportsHaptics
supportsAudio
TB,R
initPrivate
maximumNumberOfHapticChannels
maximumNumberOfAudioChannels
_supports3rdPartyHaptics
copy
initWithParameterID:controlPoints:relativeTime:
controlPoints
parameterID
_param
_time
_controlPoints
T@"NSString",R,V_param
Td,V_time
T@"NSArray",R
initWithRelativeTime:value:
value
setValue:
_value
Tf,V_value
numberWithBool:
numberWithUnsignedInt:
numberWithFloat:
array
containsString:
numberWithUnsignedInteger:
setObject:forKey:
boolValue
unsignedIntValue
countByEnumeratingWithState:objects:count:
unsignedIntegerValue
queryServerCapabilities:reply:
initWithHapticPlayer:withOptions:error:
usingInternalHaptics
supportsAudioPlayback
supportsAdvancedPatternPlayers
hapticContinuousTimeLimit
currentLocality
defaultHapticTransientEventSharpness
defaultHapticContinuousEventSharpness
defaultHapticTransientEventIntensity
defaultHapticContinuousEventIntensity
hapticTransientIDs
hapticContinuousSustainedIDs
hapticContinuousNonsustainedIDs
.cxx_construct
_currentLocality
_usingInternalHaptics
_supportsAudioPlayback
_supportsAdvancedPatternPlayers
_hapticContinuousTimeLimit
_defaultHapticTransientEventSharpness
_defaultHapticContinuousEventSharpness
_defaultHapticTransientEventIntensity
_defaultHapticContinuousEventIntensity
_hapticTransientIDs
_hapticContinuousSustainedIDs
_hapticContinuousNonsustainedIDs
TB,R,V_usingInternalHaptics
TB,R,V_supportsAudioPlayback
TB,R,V_supportsAdvancedPatternPlayers
Tf,R,V_hapticContinuousTimeLimit
T@"NSString",R,V_currentLocality
Tf,R,V_defaultHapticTransientEventSharpness
Tf,R,V_defaultHapticContinuousEventSharpness
Tf,R,V_defaultHapticTransientEventIntensity
Tf,R,V_defaultHapticContinuousEventIntensity
T{vector<unsigned long, std::allocator<unsigned long>>=^Q^Q{__compressed_pair<unsigned long *, std::allocator<unsigned long>>=^Q}},R,V_hapticTransientIDs
T{vector<unsigned long, std::allocator<unsigned long>>=^Q^Q{__compressed_pair<unsigned long *, std::allocator<unsigned long>>=^Q}},R,V_hapticContinuousSustainedIDs
T{vector<unsigned long, std::allocator<unsigned long>>=^Q^Q{__compressed_pair<unsigned long *, std::allocator<unsigned long>>=^Q}},R,V_hapticContinuousNonsustainedIDs
eventBehavior
muteHapticsWhileRecordingAudio
setEventBehavior:
setSeekOffset:
resetState
setCompletionHandler:
initWithEvents:player:error:
patternDuration
setLoopEnd:
finishInit
setParameter:value:channel:atTime:error:
engine
seekOffset
playAtTime:offset:error:
setRunning
paused
seekToTime:error:
resumeAtTime:error:
doStartFromPausedAtTime:error:
doStartFromStoppedAtTime:error:
currentTime
paramType
time
pauseAtTime:error:
setPaused
doResumeAtTime:error:
loopingEnabled
playbackRate
setLoopingEnabled:
setLoopLength:error:
setPlaybackRate:
dispatchOnLocal:
dispatchOnGlobal:
initWithData:player:error:
activateChannelByIndex:atTime:error:
setVolume:atTime:error:
seekToOffset:error:
loopEnabled
setLoopEnabled:
loopEnd
completionHandler
T@?,C
initWithPattern:engine:privileged:error:
initWithRingtoneData:engine:error:
_sequence
_loopEnd
_state
_seekOffset
_completionHandler
Td,V_seekOffset
numberWithUnsignedLong:
eventCategory
paramTypeToNSString:
addObject:
eventTypeToNSString:
fixedParamCount
fixedParams
setObject:forKeyedSubscript:
initWithObjectsAndKeys:
convertEvents:
Td,R
setEngine:
_engine
_events
_patternID
_patternDuration
_muteState
_previousAction
T@"CHHapticEngine",W,V_engine
T@"NSString",R,V_patternID
Td,R,V_patternDuration
objectForKeyedSubscript:
eventToDictionary:embeddedResourceInfo:
paramToDictionary:
paramCurveToDictionary:
type
audioResID
path
options
numberWithDouble:
eventParameters
eventParamsToArray:
paramCurveControlPointsToArray:
patternToDictionary:events:parameters:parameterCurves:embeddedResourceInfo:configuration:
_urlIndex
capabilitiesForHardware
eventWithEventType:time:parameters:count:duration:
eventWithEventType:time:duration:
serverConfig
transientHapticEventTypeFromSharpness:
transientHapticEventTypeForDefaultSharpness
eventForTransientHapticAtTime:params:duration:
continuousHapticEventTypeFromSharpness:sustained:
continuousHapticEventTypeForDefaultSharpness:
eventForLegacyTransientHapticAtTime:params:duration:
indexOfObjectPassingTest:
eventForContinuousHapticEventType:time:params:duration:
eventForAudioEventType:time:eventParams:duration:
getDurationForResource:
setDuration:
eventForSPIEventType:time:eventParams:duration:
eventWithParameter:value:time:
CHtoAVParameterCurve:
eventWithParameterCurve:
initWithCapacity:
objectAtIndex:
initWithTime:value:
initWithType:relativeTime:shape:controlPoints:
initWithServerConfig:
eventForEventEntry:engine:privileged:
eventForDynamicParameterEntry:
eventForParameterCurveEntry:
_serverConfig
T@"HapticServerConfig",R,V_serverConfig
dictionary
length
enumerateKeysAndObjectsUsingBlock:
fileURLWithPath:isDirectory:
initWithURL:options:
parseEvent:
parseParam:
parseParamCurve:
parseEventParams:
initWithAudioResourceIndex:parameters:time:duration:
initWithEventType:parameters:relativeTime:duration:
initWithParameterID:value:
initWithParameterID:value:relativeTime:
parseParamCurveControlPoints:
doubleValue
readPatternID:error:
readAndVerifyVersion:error:
parseConfiguration:error:
scanForEmbeddedResources:
parseEventsAndParameters:reply:
initWithEngine:audioSessionID:sessionIsShared:isSPI:
handleServerRecovery
handleEngineStart
handleEngineStop
handleFinishedForPlayersAtTime:
arrayWithArray:
initWithArray:
version
fullDuration
relativePath
characterAtIndex:
mainBundle
bundleURL
arrayWithObject:
defaultManager
URLsForDirectory:inDomains:
addObjectsFromArray:
ubiquityIdentityToken
URLForUbiquityContainerIdentifier:
initFileURLWithPath:isDirectory:relativeToURL:
checkResourceIsReachableAndReturnError:
events
doRegisterAudioResource:options:fromPattern:player:error:
initWithAudioResourceID:parameters:relativeTime:
doReferenceAudioResourceByID:
dataWithContentsOfFile:options:error:
propertyListWithData:options:format:error:
JSONObjectWithData:options:error:
initWithDictionary:error:
patternForKey:error:
locality
priority
hapticPowerUsage
audioPowerUsage
T@"NSString",R
initWithEvents:parameters:error:
initWithEvents:parameterCurves:error:
exportDictionaryAndReturnError:
exportDictionaryWithConfigurationAndReturnError:
eventListFromDictionary:error:
configurationDictionary
_version
_configurationDictionary
_embeddedResourceInfo
_parameters
_parameterCurves
T@"NSDictionary",R,N,V_configurationDictionary
Td,R,N
_url
_options
T@"NSURL",R,V_url
T@"NSDictionary",R,V_options
currentPlayerBehavior
setCurrentPlayerBehavior:
currentMediaTime
isBehaviorSet:
toggleBehavior:set:
channels
updateEngineBehavior
handleFinish:
finishWithCompletionHandler:
cancelIdleTimer
avAudioSession
setCategory:error:
sessionIsConstantVolume
setMode:error:
setAudioHardwareControlFlags:error:
setPreferredIOBufferFrameSize:error:
enableNotifications:error:
setParticipatesInNowPlayingAppPolicy:error:
needsAudioPowerBudget
setNeedsHighPowerBudgeting:error:
isAutoShutdownEnabled
getSessionIDFromAVAudioSession:
sessionIsShared
setupUnsharedAudioSessionAndReturnError:
code
audioSessionID
createOptionsFromAudioSessionID:shared:
createHapticPlayerWithOptions:
finishInit:
resetHandler
defaultCenter
handleMediaServerRecovery:
addObserver:selector:name:object:
removeObserver:name:object:
opaqueSessionID
initWithOptions:error:
setRunning:
localizedDescription
handleConnectionError
setConnectionErrorHandler:
allocateRenderResourcesWithCompletionHandler:
setFollowAudioRoute:
stoppedHandler
setStopRunningHandler:
autoShutdownTimeout
stopWithCompletionHandler:
startIdleTimerWithHandler:
timer
setTimer:
clientFinishedHandler
setClientFinishedHandler:
doStopWithCompletionHandler:
beginIdleTimer
setBehavior:
doStopEngineAndWait:
stopAndWait
disconnectAudioSession:
doUnregisterAllPublicAudioResources
valueForKey:
auxiliarySession
connectAudioSession:
doInit:sessionIsShared:options:error:
doInitWithOptions:error:
prewarmWithCompletionHandler:
stopPrewarm
startRunningWithCompletionHandler:
doStartWithCompletionHandler:
doStartEngineAndWait:
stopRunningWithCompletionHandler:
storeOptions:
setActivateAudioSessionOnStart:
initWithAudioSession:sessionIsShared:options:error:
getMetricsForPlayer:
setMetricsTestModeEnabled
doFindPublicAudioResourceID:
absoluteString
isEqualToDictionary:
idForPublicAudioResourceURL:withOptions:
addPublicAudioResourceID:withURL:options:
hasPublicAudioResourceID:
removePublicAudioResourceID:
isFileURL
pathExtension
dataWithContentsOfFile:
initWithContentsOfURL:error:
doPlayPatternFromDictionary:error:
createPlayerWithPattern:error:
startWithCompletionHandler:
initialize
lazyInitResourceMap
supports1stPartyHaptics
playsHapticsOnly
setPlaysHapticsOnly:
setMuteHapticsWhileRecordingAudio:
isMutedForAudio
setIsMutedForAudio:
isMutedForHaptics
setIsMutedForHaptics:
setAutoShutdownEnabled:
followAudioRoute
highPriority
setHighPriority:
availableLocalities
setAutoShutdownTimeout:
getReporterIDFromAVAudioSession:
initAndReturnError:
initWithAudioSession:error:
startAndReturnError:
notifyWhenPlayersFinished:
initWithAudioSessionID:error:
initWithAudioSession:sessionIsShared:error:
createAdvancedPlayerWithPattern:error:
createAdvancedPlayerWithRingtoneData:error:
createAdvancedPlayerWithRingtonePattern:error:
createPrivilegedPlayerWithPlayable:error:
debugEngineIsRunning
registerAudioResource:options:error:
unregisterAudioResource:error:
playPatternFromURL:error:
playPatternFromData:error:
setStoppedHandler:
setResetHandler:
_dispatchQueue
_avAudioSession
_audioSessionID
_sessionIsShared
_sessionIsConstantVolume
_publicAudioResources
_player
_timer
_stoppedHandler
_resetHandler
_autoShutdownEnabled
_clientFinishedHandler
_running
_currentPlayerBehavior
_muteHapticsWhileRecordingAudio
_priority
_hapticPowerUsage
_audioPowerUsage
_runTimeout
_metrics
T@"AVAudioSession",R,V_avAudioSession
TI,R,V_audioSessionID
TB,R,V_sessionIsShared
TB,R,V_sessionIsConstantVolume
T@?,C,V_clientFinishedHandler
T@"NSObject<OS_dispatch_source>",&,V_timer
TQ,V_currentPlayerBehavior
TB,N
T@"NSString",R,V_priority
T@"NSString",R,V_hapticPowerUsage
T@"NSString",R,V_audioPowerUsage
T@?,C,V_stoppedHandler
T@?,C,V_resetHandler
autoShutdownEnabled
TB,N,GisAutoShutdownEnabled
addChannel:
removeChannel:error:
referenceCustomAudioEvent:reply:
copyCustomAudioEvent:options:reply:
dataWithBytesNoCopy:length:freeWhenDone:
initWithStreamDescription:channelLayout:
createCustomAudioEvent:format:frames:options:reply:
releaseCustomAudioEvent:reply:
activateAudioSessionOnStart
dispatchSyncOnLocal:
T@"AVHapticPlayer",R
T@"CHMetrics",R
parameterValuesFromLegacyEventType:sharpness:fullness:error:
initWithEventType:parameters:relativeTime:
initWithAudioResourceID:parameters:relativeTime:duration:
getType
_type
_audioResID
_eventParams
_duration
T@"NSString",R,V_type
T@"NSArray",R,V_eventParams
Td,V_duration
B24@0:8@16
#16@0:8
@16@0:8
@24@0:8:16
@32@0:8:16@24
@40@0:8:16@24@32
B16@0:8
B24@0:8#16
B24@0:8:16
Vv16@0:8
Q16@0:8
^{_NSZone=}16@0:8
B24@0:8@"Protocol"16
@"NSString"16@0:8
B32@0:8d16^@24
B40@0:8@16d24^@32
B24@0:8^@16
v20@0:8B16
B40@0:8@"NSArray"16d24^@32
B40@0:8@"CHHapticParameterCurve"16d24^@32
@44@0:8@16@24B32^@36
v16@0:8
v24@0:8@16
@"AVHapticPlayerChannel"
f16@0:8
@28@0:8f16f20f24
@40@0:8@16@24^@32
@32@0:8@16^@24
@"<CHHapticParameterAttributes>"40@0:8@"NSString"16@"NSString"24^@32
@"<CHHapticParameterAttributes>"32@0:8@"NSString"16^@24
f24@0:8@16
f32@0:8@16@24
@40@0:8@16@24d32
d16@0:8
v24@0:8d16
@"NSString"
@"NSArray"
@28@0:8d16f24
v20@0:8f16
{vector<unsigned long, std::allocator<unsigned long>>=^Q^Q{__compressed_pair<unsigned long *, std::allocator<unsigned long>>=^Q}}16@0:8
{vector<unsigned long, std::allocator<unsigned long>>="__begin_"^Q"__end_"^Q"__end_cap_"{__compressed_pair<unsigned long *, std::allocator<unsigned long>>="__value_"^Q}}
@?16@0:8
v24@0:8@?16
@?<v@?@"NSError">16@0:8
v24@0:8@?<v@?@"NSError">16
B40@0:8Q16d24^@32
B36@0:8f16d20^@28
@"AVHapticSequence"
@24@0:8Q16
@24@0:8@16
B20@0:8C16
@"CHHapticEngine"
@64@0:8@16@24@32@40@48@56
@32@0:8@16@24
@48@0:8Q16d24@32d40
Q20@0:8f16
@40@0:8d16@24d32
Q24@0:8f16B20
Q20@0:8B16
@44@0:8i16d20@28d36
@36@0:8@16@24B32
@"HapticServerConfig"
B32@0:8@16@?24
@28@0:8@16f24
@36@0:8@16f24d28
@36@0:8@16I24B28B32
v36@0:8@16@24B32
v44@0:8@16d24B32@36
v44@0:8@16q24d32B40
@52@0:8@16@24@32@40B48
@"NSArray"32@0:8@"CHHapticEngine"16^@24
@"NSArray"16@0:8
@24@0:8^@16
@"NSNumber"
@"NSDictionary"
@"NSMutableArray"
@"NSURL"
B24@0:8Q16
v28@0:8Q16B24
I24@0:8@16
q24@0:8@16
@24@0:8I16B20
B40@0:8I16B20@24^@32
B32@0:8@16^@24
@28@0:8I16^@20
@44@0:8@16B24@28^@36
@36@0:8@16B24^@28
d24@0:8Q16
{__map_iterator<std::__tree_iterator<std::__value_type<unsigned long, std::pair<NSURL *, NSDictionary *>>, std::__tree_node<std::__value_type<unsigned long, std::pair<NSURL *, NSDictionary *>>, void *> *, long>>={__tree_iterator<std::__value_type<unsigned long, std::pair<NSURL *, NSDictionary *>>, std::__tree_node<std::__value_type<unsigned long, std::pair<NSURL *, NSDictionary *>>, void *> *, long>=^v}}24@0:8Q16
v40@0:8Q16@24@32
Q32@0:8@16@24
v24@0:8Q16
Q40@0:8@16@24^@32
B32@0:8Q16^@24
I16@0:8
@"NSObject<OS_dispatch_queue>"
@"AVAudioSession"
{map<unsigned long, std::pair<NSURL *, NSDictionary *>, std::less<unsigned long>, std::allocator<std::pair<const unsigned long, std::pair<NSURL *, NSDictionary *>>>>="__tree_"{__tree<std::__value_type<unsigned long, std::pair<NSURL *, NSDictionary *>>, std::__map_value_compare<unsigned long, std::__value_type<unsigned long, std::pair<NSURL *, NSDictionary *>>, std::less<unsigned long>, true>, std::allocator<std::__value_type<unsigned long, std::pair<NSURL *, NSDictionary *>>>>="__begin_node_"^v"__pair1_"{__compressed_pair<std::__tree_end_node<std::__tree_node_base<void *> *>, std::allocator<std::__tree_node<std::__value_type<unsigned long, std::pair<NSURL *, NSDictionary *>>, void *>>>="__value_"{__tree_end_node<std::__tree_node_base<void *> *>="__left_"^v}}"__pair3_"{__compressed_pair<unsigned long, std::__map_value_compare<unsigned long, std::__value_type<unsigned long, std::pair<NSURL *, NSDictionary *>>, std::less<unsigned long>, true>>="__value_"Q}}}
@"AVHapticPlayer"
@"NSObject<OS_dispatch_source>"
@"CHMetrics"
B32@0:8@16d24
v32@0:8@16d24
Q52@0:8@16@24B32@36^@44
B44@0:8Q16B24@28^@36
B48@0:8Q16^f24^f32^@40
@48@0:8@16@24d32d40
@40@0:8Q16@24d32
@48@0:8Q16@24d32d40
333333
