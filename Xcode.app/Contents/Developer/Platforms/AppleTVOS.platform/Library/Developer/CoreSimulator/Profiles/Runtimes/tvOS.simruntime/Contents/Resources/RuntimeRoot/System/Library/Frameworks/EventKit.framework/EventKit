recurrenceEnd
v8@?0
Interval must be greater than 0
%@ <%p> RRULE %@
Encountered illegal value for EKRecurrenceFrequency
EKRecurrenceRule.m
Interval must be greater than or equal to 1
@8@?0
Invalid parameter not satisfying: %@
(int)firstDay <= EKWeekdaySaturday
dayOfTheWeek
DAILY
WEEKLY
MONTHLY
YEARLY
Encountered illegal value for  EKRecurrenceFrequency
yyyyMMdd
yyyyMMdd'T'HHmmss
yyyyMMdd'T'HHmmss'Z'
FREQ=%@
;INTERVAL=%lu
;UNTIL=%@
;COUNT=%lu
;BYMONTH=%@
;BYMONTHDAY=%@
;BYYEARDAY=%@
;BYWEEKNO=%@
;BYDAY=%@
;BYSETPOS=%@
;WKST=SU
Calendar
%@ <%p> {UUID = %@; displayName = %@; address = %@; firstName = %@; lastName = %@; status = %lu; accessLevel = %lu;}
-[CNContact predicateForContactMatchingEKParticipantWithName:emailAddress:URL:predicateDescription:]
startDateComponents
dueDateComponents
calendar
Source
Sharee
Alarm
Notification
%@ <%p> {title = %@; allowsModify = %s; color = %@; source = %@; sharees = %@}
EKFeatureSetDidChangeNotification
ContinuityCapability
s+gaKNe68Gs3PfqKrZhi1w
EKAvailabilityCacheError
%@-%@-processing
%@-%@-callback
accountID
sourceIsInvalid
sourceSupportsAvailabilityRequests
addressesToCachedSpanRanges
ignoredEventIDsToAddressBasedCaches
AvailabilityCacheMiss
AvailabilityCacheHit
B24@?0@"NSString"8@"NSDictionary"16
v16@?0@"NSDictionary"8
v16@?0@"NSError"8
v32@?0@"NSString"8@"NSArray"16^B24
v32@?0@8Q16^B24
(3-5)
(6-10)
(11-15)
(16-20)
(21-25)
(26-50)
(51-100)
(101-150)
(151-200)
(201+)
AvailabilityCacheRoundtripTimeInMilliseconds-%@
elapsedTime
EKOccurrenceCacheSearch.m
calendars != nil
searchTerm != nil
store != nil
callback != nil
v12@?0i8
name
emailAddress
phoneNumber
participantRole
participantStatus
participantType
Name should not be nil.
Either url, phoneNumber or emailAddress should not be nil.
CalendarsExcludedFromNotifications
%@{type: %d, rowID: %d, date: %@}
EKObject.m
iOS doesn't support cross-store copies yet
@24@?0@"EKObject"8@"NSString"16
frozenObject
v16@?0@"EKObject"8
persistentObject
startDate
owner_id
role
status
email
CalendarItem
%@ <%p> {frequency = %ld; interval = %ld; firstDayOfWeek = %ld; enddate = %@; count = %lu; specifier = %@}
ConnectionLock
ReplyLock
com.apple.calaccessd
v16@?0i8i12
You have overridden beginRequestWithExtensionContext: on your subclass of EKVirtualConferenceProvider (%@) - this is not allowed
v24@?0@"NSArray"8@"NSError"16
v24@?0@"EKVirtualConferenceDescriptor"8@"NSError"16
v28@?0B8q12@"NSArray"20
com.apple.eventkit.debug.preference.notification.travelEngineThrottlePeriod
com.apple.eventkit.preference.notification.refiringReminderAlarmsEnabled
com.apple.eventkit.preference.notification.selectedCalendarIdentifiers
com.apple.eventkit.preference.notification.ShowDeclinedEvents
com.apple.eventkit.preference.notification.AlertInviteeDeclines
com.apple.mobilecal.preference.notification.selectedCalendarSyncHashesChanged
com.apple.eventkit.preference.notification.deselectedCalendarIdentifiers
TravelEngineThrottlePeriod
refiringReminderAlarmsEnabled
useShortReminderSnoozeInterval
useShortReminderRefireInterval
alwaysSetArrivedAndSettledForReminders
LastConfirmedSplashScreenVersionViewed
privacyPaneBypass
LastDeselectedCalendars
DeselectedCalendarIdentifiersChanged
LastDeselectedCalendarSyncHashes
LastDeselectedCalendarSyncIdentifiers
LastViewedCalendars
ShowDeclinedEvents
InviteeDeclineAlerts
conferenceRoomTypeIdentifiersByMRU
calendar_id
old_calendar_id
external_id
old_external_id
summary
location_id
start_date
start_tz
end_date
end_tz
description
all_day
title is empty
identifier is empty
url is empty
No URLs provided
TITLE=%@;
ADDRESS=%@;
%f:%f:%f
%f:%f
v32@?0@"EKParticipant"8Q16^B24
q24@?0@8@16
v24@?0@"NSString"8@"EKObject"16
[%@] opaqueKey: %@, uniqueKey: %@, extractionGroupIdentifier: %@, changedFields: %lu, changesAcknowledged: %d, timestamp: %f
v16@?0@"NSNotification"8
CNNameComponentsStringTokenizer
[%@] Display name: [%@], isEmail: [%@]
CRRecentContactsLibrary
CRAddressKindEmail
CRAddressKindPhoneNumber
CRRecentsDomainCalendar
title
completionDate
dueDate
UUID
displayOrder
dueDateTimeZone
priority
dueDateAllDay
hasAlarms
hasRecurrenceRules
recurrenceRules
com.apple.mobilecal.autocompletesearchcontroller.internalqueue
com.apple.mobilecal.autocompletesearchcontroller.eventkitqueue
EKAutocompleteSearch.m
searchWithString:completionHandler: called multiple times
com.apple.mobilecal
SuggestionsOriginBundleId
%@ <%p> {URLString = %@; fileName = %@; fileFormat = %@; fileSize = %lu; localRelativePath = %@; UUID = %@;}
remove
modify
creationDate
statusModifiedDate
itemID
B32@?0@8Q16^B24
EKDiff.m
One of these has to be non-nil
%@.%@
No object for comparison, %@ is entirely different
-------------------------
<weak relation: %@>
(null)
There is a difference for the multi-valued key: %@
%@: 
* %@
%@%@ <0x%x>
, %@:%@
Please use the appropriate designated initializer for this class.
EKAvailabilitySpan.m
startDate != nil
endDate != nil
'startDate' must not be after 'endDate'
[%@] startDate: [%@] endDate: [%@] type: [%@]
Unknown
Busy
Free
NoData
OutOfOffice
Tentative
Unavailable
Error
B24@?0@8@"NSDictionary"16
_float
%@ <%p>
 title = 
%@; 
 location = 
%@; 
 calendar = 
%@; 
 alarms = 
%@; 
 URL = 
%@; 
 lastModified = %@; 
 startTimeZone = 
%@; 
 endTimeZone = 
singleRecurrenceRule
v24@?0@"NSData"8@"NSError"16
Error exporting event to ICS: %@
v20@?0i8@"NSData"12
events
reminders
actionsState
X-APPLE-NO-ACTION
OUT-OF-DATE
DELEGATORS-COPY
DELEGATEES-COPY
v32@?0@"EKAlarm"8Q16^B24
EKCalendarItem.m
Can't snooze an alarm with location but no proximity.
Committed Value class is incorrect!
actions
detachedItems
v16@?0@"EKCalendarItem"8
Original item class must match our class
date
work
callback
B32@?0@"NSString"8@"EKPersistentObject"16@"EKPersistentObject"24
%@ <%p> {title = %@; address = %@; lat = %@; long = %@; abID = %@; radius = %@, routing = %@}
value
<%@: %p>(externalID = %@, externalIDTag = %@, source = %@)
conferenceURLDetectedKey
parsedConferenceKey
junk
not junk
cachedJunkStatus
could be junk
permit
not permit
com.apple.calendar
store.log.travel.engine
store.log.travel.engine.throttle
calendar.source
externalTrackingStatus
uniqueId
externalID
externalFolderID
invitationStatus
endDate
originalItem.objectID.rowID
availabilityRequests
processing
Reset
ConflictFound
SearchProgressed
radar.18233777
B32@?0@"EKInviteeTimeSpan"8Q16^B24
q24@?0@"EKInviteeTimeSpan"8@"EKInviteeTimeSpan"16
v32@?0@"EKAvailabilitySpan"8Q16^B24
v32@?0@"EKInviteeTimeSpan"8Q16^B24
NSErrorPeerCertificateChainKey
v32@?0@"NSString"8@16^B24
v16@?0@"CNContactStore"8
EKParticipant.m
Setting inviter name string not supported on iOS
<%@: %p>(name = %@)
EKCalendarSharedCalendarNotification.m
Invalid type for EKCalendarSharedCalendarNotification.
start
_cachedSpans
v32@?0@"EKAvailabilityCachedSpan"8Q16^B24
EKAvailabilityCachedSpanRange.m
ERROR: We tried to insert a span with no end date.
q24@?0@"EKAvailabilitySpan"8@"EKAvailabilitySpan"16
%@ <%p> {UUID = %@; displayName = %@; email = %@; phoneNumber = %@; firstName = %@, lastName = %@, status = %ld; role = %ld; type = %ld}
kDefaultAlarmSemanticIdentifier
ABSOLUTE=%f;
RELATIVE=%f;
EMAIL=%@;
URL=%@;
None
Enter
Leave
VehicleConnect
VehicleDisconnect
isExecuting
v20@?0@"NSError"8B16
v32@?0@"DAECalendarDirectorySearchResult"8Q16^B24
isFinished
In order to save a new notification, add it to a NotificationCollection, save, and commit the collection instead.
[%@] rowID: [%d] date: [%f]
v32@?0@"EKAttendee"8Q16^B24
v32@?0@"EKCalendarEventInvitationNotificationAttendee"8Q16^B24
calLocation
EKSerializableStructuredLocation is not implemented in iOS
EKICSImportErrorDomain
vcal
icbu
ICSImport
com.apple.EventKit.ICSImporter
B24@?0@"NSDictionary"8^@16
@16@?0@"EKSource"8
Title:(%@) Email:(%@) SourceIdentifier:(%@)
Title:(%@) Email:(%@) UID:(%@)
B16@?0@"ICSUserAddress"8
@"NSString"16@?0@"ICSUserAddress"8
q16@?0@"EKCalendar"8
record
type
ROWID
sequence_number
v32@?0i8B12q16@"NSArray"24
delete
insert
update
[<%@: %p>: type=%@, row=%i, seq=%li, changeID=%li]
entityType must be implemented by an EKObjectChange inheriting class.
consumed_entity_class
consumed_entity_id
consumed_change_id
BirthdayEventsGenerationVersion
BirthdayEventsGenerationLastLocale
BirthdayEventsGenerationLastAttemptTimeResetKey
BirthdayEventsGenerationAttemptsToResetKey
EKBirthdayListener
v16@?0q8
@"EKEventStore"8@?0
Birthdays
v24@?0@"CNContact"8^B16
relative=%i
%@/%@
identifier
v24@?0@"EKEvent"8^B16
Location
%@ <%p> {triggerDate = %@; proximity = %ld; location = %@, type = %ld}
%@ <%p> {triggerInterval = %lf; proximity = %ld; location = %@, type = %ld}
%Y%m%dT%H%M%SZ
%Y%m%dT%H%M%S
%Y%m%d
UID %@ is of unexpected size.
B32@?0@8@16^B24
singleValueChanges: %@ 
multiValueAdditions: %@ 
multiValueRemovals: %@ 
is new: %d is deleted: %d is saved: %d is modified: %d
is undeleted: %d
%@ <%p> {date = %@}
Adding nil Notification to notification collection.
Removing nil Notification from notification collection.
EKCalendarInviteReplyNotification.m
Invalid type for EKCalendarInviteReplyNotification.
EKPredicateSearch
Unknown entity type
Didn't recognize entity class %@
v20@?0i8@"NSArray"12
v24@?0@"CADEntityWrapper"8@"NSMutableArray"16
v16@?0@"NSArray"8
EKReminderModifiedNotification
firstAlertDate
/?&:$+,;=@
%@://%@/%@
%@ <%p> {title = %@; dueDate = %@; completionDate = %@; priority = %ld; calendarItemIdentifier = %@; alarms = %@}
@"EKPersistentObject"16@?0@"EKPersistentObject"8
event_id_tomb
EKNotificationsLoadedNotification
EKNotificationsChangedNotification
EKNotificationCountChangedNotification
EKNotificationCountChangedExternallyNotification
EKNotificationChangedNotificationsKey
com.apple.eventkit.notificationMonitor
notification
v16@?0@"EKTimedEventStorePurger"8
com.apple.eventkit.invitationmonitor
blacklistedNotificationQueue
v24@?0@"EKObjectID"8^B16
v32@?0@"EKCalendarNotificationReference"8Q16^B24
B24@?0@"EKCalendarNotificationReference"8@"NSDictionary"16
pending
no pending
v28@?0i8@"NSData"12Q20
principalPath
displayName
preferredAddress
com.apple.eventkit.debug.preference.notification.availabilityFreshnessWindow
com.apple.eventkit.debug.preference.notification.saveGeocodedLocationsInTravelEngine
com.apple.eventkit.debug.preference.notification.overrideTravelAdvisoryHypothesis
com.apple.eventkit.debug.preference.notification.overriddenTravelAdvisoryHypothesisTransportType
com.apple.eventkit.debug.preference.notification.overriddenTravelAdvisoryHypothesisConservativeTravelTime
com.apple.eventkit.debug.preference.notification.overriddenTravelAdvisoryHypothesisEstimatedTravelTime
com.apple.eventkit.debug.preference.notification.overriddenTravelAdvisoryHypothesisAggressiveTravelTime
com.apple.eventkit.debug.preference.notification.overriddenTravelAdvisoryHypothesisSupportsLiveTraffic
com.apple.eventkit.debug.preference.notification.overriddenTravelAdvisoryHypothesisCurrentTrafficDensity
com.apple.eventkit.debug.preference.notification.overriddenTravelAdvisoryHypothesisRouteName
com.apple.eventkit.debug.preference.notification.overriddenTravelAdvisoryHypothesisTravelState
com.apple.eventkit.debug.preference.notification.preventMarkingTravelAdvisoryEntriesAsDismissed
com.apple.eventkit.debug.preference.notification.forceDisplayOfNewTravelAdvisoryHypotheses
com.apple.eventkit.debug.preference.notification.performAgendaEntryEqualityChecksInTravelEngine
com.apple.eventkit.debug.preference.notification.verifyIntegrityOfAvailabilityTimeSearchTimelines
com.apple.eventkit.debug.preference.notification.showDepartureDateForTransitTimeToLeave
com.apple.eventkit.debug.preference.notification.shouldBypassTravelEngineThrottle
com.apple.eventkit.debug.preference.notification.syntheticTravelAdvisoriesEnabled
availabilityFreshnessWindow
saveGeocodedLocationsInTravelEngine
overrideTravelAdvisoryHypothesis
overriddenTravelAdvisoryHypothesisTransportType
overriddenTravelAdvisoryHypothesisConservativeTravelTime
overriddenTravelAdvisoryHypothesisEstimatedTravelTime
overriddenTravelAdvisoryHypothesisAggressiveTravelTime
overriddenTravelAdvisoryHypothesisSupportsLiveTraffic
overriddenTravelAdvisoryHypothesisCurrentTrafficDensity
overriddenTravelAdvisoryHypothesisRouteName
overriddenTravelAdvisoryHypothesisTravelState
preventMarkingTravelAdvisoryEntriesAsDismissed
forceDisplayOfNewTravelAdvisoryHypotheses
performAgendaEntryEqualityChecksInTravelEngine
verifyIntegrityOfAvailabilityTimeSearchTimelines
showDepartureDateForTransitTimeToLeave
shouldBypassTravelEngineThrottle
syntheticTravelAdvisoriesEnabled
Version
Version mismatch. Archiver version: [%@]. Encoded Data Version: [%@].
Unable to unarchive version string.
Data
Unable to unarchive data.
Unable to encode data.
Unable to decode version string.
B32@?0@"EKEvent"8Q16^B24
EKErrorDomain
EKCADErrorDomain
XPC error communicating with calaccessd: Invalid parameter
XPC error communicating with calaccessd: Internal error
XPC error communicating with calaccessd: Property not found
Object not found. It may have been deleted.
XPC error communicating with calaccessd: Invalid data type
XPC error communicating with calaccessd: Invalid operation
Access denied
XPC error communicating with calaccessd: Unknown IPC message
XPC error communicating with calaccessd: Unknown error
This operation is not supported on the current OS
XPC error communicating with calaccessd: Failed to rebuild occurrence cache
XPC error communicating with calaccessd: Missing client specifier
XPC error communicating with calaccessd: Connection not initialized
XPC error communicating with calaccessd: Data already exists
This process has too many EKEventStore instances. Use fewer event stores.
XPC error communicating with calaccessd: Data not accessible
The event cannot be edited.
No calendar has been set.
No start date has been set.
No end date has been set.
The start date must be before the end date.
An unexpected error occurred.
The calendar is read only.
That event does not belong to that event store.
Invites cannot be moved to another calendar.
The event is too far in the future.
The event is too long to repeat this often.
The event repeats before the alert occurs.
Another instance of this event occurs on this date.
An invalid span was specified.
A repeating reminder must have a due date.
Calendar does not match parent event
Calendar has no source
That calendar may not be moved to another account.
The privacy level field cannot be changed.
The repeat field cannot be changed.
Alarms cannot be changed.
Attendees cannot be changed.
That calendar can not be changed or deleted.
Locations with geo information are not supported by this account.
Actions are not supported by this account.
Locations for reminders are not supported by this account.
Proximity-based alarms are not supported by this account.
That account does not allow calendars to be added or removed.
That calendar does not allow events to be added.
That calendar does not allow reminders to be added.
That account does not support events.
That account does not support reminders.
You can't move events with attendees between accounts.
Priorities must be between %d and %d.
This is not a valid EKEntityType.
Choose another way to repeat this event or move it to another calendar.
The Suggested Event Calendar cannot be modified.
That calendar does not allow events to start outside of their recurrence patterns.
You can't move events with attachments between accounts.
A source must have a sourceIdentifier
A new attachment can only be created by adding to an event and saving the event
A reminder alarm should not contain emailAddress or urlString because these properties are unsupported
%@ <%p> {UUID = %@; displayName = %@; email = %@; phoneNumber = %@; firstName = %@; lastName = %@; isSelf = %d}
ApproachingDeparture
LeaveNow
RunningLate
%@ <%p> Date = %@
EventAction
ExceptionDate
SuggestedEventInfo
ConferencesSet
%@ <%p> 
 {title = %@; 
 calendar = %@; 
 alarms = %@; 
 URLString = %@; 
 lastModified = %@}
%@ <%p> {%@; 
 location = %@; 
 startLocation = %@; 
 startDate = %@; 
 endDate = %@; 
 allDay = %u; 
 timeZone = %@; 
 travelTime: %ld; 
 recurrences = %@; 
 attendees = %@}
EKChangedCalendar
EKChangedTitle
EKChangedLocation
EKChangedAllDay
EKChangedStartDate
EKChangedEndDate
EKChangedTimeZone
EKChangedEndTimeZone
EKChangedTravelTime
EKChangedRecurrenceRule
EKChangedAvailability
EKChangedPrivacy
EKChangedNotes
EKChangedAttendeeComment
EKChangedURL
EKChangedParticipationStatus
EKChangedAlternateTimeProposal
EKChangedJunkStatus
EKChangedResponseComment
EKChangedPriority
EKChangedSequence
EKChangedAlarmsAdded
EKChangedAlarmsRemoved
EKChangedAlarmsModified
EKChangedAttendeesAdded
EKChangedAttendeesRemoved
EKChangedAttendeesModified
EKChangedShareesAdded
EKChangedShareesRemoved
EKChangedShareesModified
EKChangedAttachmentsAdded
EKChangedAttachmentsRemoved
EKChangedAttachmentsModified
EKChangedCalendarColor
EKChangedCalendarTitle
EKObjectChangeSummarizer.m
Diff summary called on objects of different class
<%@: %p>(transportType = %@, conservativeDepartureDate = %@, conservativeTravelTime = %@, suggestedDepartureDate = %@, estimatedTravelTime = %@, aggressiveDepartureDate = %@, aggressiveTravelTime = %@, routeName = %@, supportsLiveTraffic = %@, currentTrafficDensity = %@, trafficDensityDescription = %@, travelState = %@)
transportType
conservativeDepartureDate
conservativeTravelTime
suggestedDepartureDate
estimatedTravelTime
aggressiveDepartureDate
aggressiveTravelTime
routeName
supportsLiveTraffic
currentTrafficDensity
trafficDensityDescription
travelState
AUTOMOBILE
TRANSIT
WALKING
BICYCLE
UNKNOWN_TRANSPORT_TYPE
FERRY
RIDESHARE
(unknown: %i)
NotTraveling
Traveling
TravelingSpecificallyToThisDestination
TravelingInDirectionOfThisDestination
TravelingAwayFromDestination
Arrived
(unknown: %lu)
event_id
+[EKPersistentObject relations] not implemented in subclass
Subclass %@ of EKPersistentObject did not implement +relations
uniqueIdentifier
EKPersistentObject.m
Trying to set the object ID on an object that has one!
Error checking whether object %@ exists: %@
v16@?0i8B12
Error loading default properties for object %@ from daemon: %@
'%@' is not a relation of '%@'
Trying to add an object as a related object for property %@ on %@, but it's not a relation or not to-many
Trying to remove an object as a related object for property %@ on %@, but it's not a relation or not to-many
Requested set of relation called %@ on a %@, but that doesn't exist.
Setting a to-many relation requires an NSSet
Setting a relation requires an EKPersistentObject
v20@?0i8@"NSNumber"12
@16@?0@"NSString"8
v20@?0i8@"NSDate"12
v20@?0i8@"NSString"12
@"NSString"16@?0@"NSString"8
v20@?0i8@"NSSecurityScopedURLWrapper"12
v20@?0i8@"CADObjectID"12
v20@?0i8@"NSSet"12
Values and Keys arrays must have the same length, but keys has %lu elements and values has %lu.
v16@?0@"EKPersistentObject"8
v32@?0@"NSString"8@"EKRelation"16^B24
    %@ = %@
%@ <%p> {loaded = %@; updated = %@}
entityType
rowID
v24@?0@"NSDictionary"8@"NSError"16
frequency
interval
firstDayOfTheWeek
daysOfTheWeek
daysOfTheMonth
monthsOfTheYear
daysOfTheYear
weeksOfTheYear
setPositions
(%.4f, %.4f)
TravelingToDestination
TravelingTowardsDestination
Light
Medium
Heavy
ExtremelyHeavy
Unknown status
Not Determined
Restricted
Denied
Authorized Always
Authorized In Use
Event
Nil resource change passed.
EKEventModifiedNotification
EKEventNaturalLanguageSuggestedEventExpirationDate
EKEventSuggestedEventSavedFromSyncKey
You must use [EKEvent eventWithEventStore:] to create an event
Trying to initialize an EKEvent as a copy of an object that is not an EKEvent
Can't create EKEvent without persistent event
EKEventLocationPrediction
%@%@%@
x-apple-calevent
x-apple-calevent://%@/%@?o=%lld
Private Event
birthdayTitle
Invalid pin mode: %d
%ld hours, %ld minutes
%ld minutes
NOT 
Prediction not attempted due to past timeouts
privacyLevelString
cachedTimeValuesCalendar
cachedStartOfDayForStartDate
cachedStartOfDayForEndDate
cachedDaysSpanned
cachedIsMultiDayTimedEvent
%@ <%p>
 %@; 
 location = 
%@; 
 structuredLocation = 
%@; 
 startDate = 
%@; 
 endDate = 
%@; 
 allDay = 
%u; 
 floating = 
%u; 
 recurrence = 
%@; 
 travelTime = 
%@; 
 startLocation = 
<%@ rowid=[%d] UUID=[%@] start-date=[%@]>
endLocation
Modified properties changed: YES. Old modified properties: %u
Modified properties changed: NO
alarmSet
@max.self
v24@?0@"EKCalendarItem"8^B16
suggestionInfo
This Calendar Cannot Repeat Events on Multiple Months in a Year
This Calendar Cannot Repeat Events on Multiple Days in a Month
This Calendar Cannot Repeat Events Every %ld Years
EKEvent.m
I screwed up somewhere in date calculation
Normal
Personal
Private
Confidential
/RID=
calshow:%lf?eventid=%d
%@/RID=%llu
alarms
v32@?0@"NSDate"8Q16^B24
%@ <%p> {UUID = %@; name = %@; email = %@; phone = %@; isSelf = %d}
_isFinished
_isExecuting
_availabilityCache
_startDate
_endDate
_ignoredEventID
_addresses
_resultsBlock
_requestID
_queue
error
 <%@>
%@ <%p> {UUID = %@; name = %@; email = %@; phone = %@; status = %ld; role = %ld; type = %ld}
owner
calendaritem_owner_id
notes
location
structuredLocation
attendees
attachments
travelTime
calendarIdentifier
timeZone
calendar.calendarIdentifier
B16@?0@"NSSet"8
B16@?0@"<EKFrozenMeltedPair>"8
B16@?0@"NSString"8
@"NSSet"16@?0@"NSSet"8
@16@?0@"NSSet"8
not nil
v24@?0@"EKObject"8^B16
v24@?0@"<EKFrozenMeltedPair>"8^B16
v24@?0@8^B16
v32@?0@"NSString"8@"NSSet"16^B24
v32@?0@"NSString"8@"NSMutableSet"16^B24
<%@ uniqueIdentifier=[%@]>
EKObject Shared Lock %lu
Invalid day number
weekNumber
%ld%@
%@ <%p> { %@ }
isAllDay
rrule_%d_frequency
rrule_%d_interval
rrule_%d_end
alarm_%d_absoluteDate
alarm_%d_relativeOffset
alarm_%d_locationTitle
alarm_%d_proximity
public.calendar-event
CSSearchQuery
CSSearchQueryContext
comment
namedLocation
primaryRecipients
authors
com.apple.iCal
primaryRecipients == "%@*"cdwt || authors == "%@*"cdwt || recipientNames == "%@*"cdwt || recipientEmailAddresses == "%@*"cdwt || authorNames == "%@*"cdwt || authorEmailAddresses ==  "%@*"cdwt || 
contentType == "%@" && (
title == "%@*"cdwt || comment == "%@*"cdwt || namedLocation == "%@*"cdwt || 
title == "%@*"cdwt || 
namedLocation == "%@*"cdwt || 
comment == "%@*"cdwt || 
 || 
&& startDate <= $time.absolute(%f) && endDate >= $time.absolute(%f)
&& endDate > $time.absolute(%f)
&& startDate < $time.absolute(%f)
Birthday
CalDAV
Local
Subscription
Exchange
Suggestions
CGColor
hasSharees
Invalid entity type passed: %d
Can't directly init a calendar. Use calendarWithEventStore
DEFAULT_TASK_CALENDAR_NAME
default reminders list name
Reminders
DEFAULT_CALENDAR_NAME
Default calendar name
Siri Suggestions
Name of default reminders calendar
#%02X%02X%02X
#%02x%02x%02x
Encountered illegal value for EKCalendarType
%@ <%p> {title = %@; type = %@; allowsModify = %@; color = %@;}
B16@?0@"EKCalendar"8
LOCAL
BIRTHDAYS
;%d;
x-apple-calendar://%@
Error checking whether calendar has events: %@
Error checking whether calendar has reminders: %@
Not implemented
This stub exists for compatibility with macOS
B24@?0@"EKAlarm"8@"NSDictionary"16
v24@?0@"EKAlarm"8^B16
EKCalendar.m
v32@?0@"NSString"8@"NSString"16@"NSError"24
%@ <%p> info = %@ url = %@
Calendar must be nil or Gregorian
Invalid date components: must have at least a year, a month, and a day
/System/Library/LocationBundles/RemindersAlerts.bundle
EKAlarm.m
date != nil
%@ <%p> {triggerDate = %@}
%@ <%p> {triggerInterval = %lf}
location-reminders
EKVirtualConferenceError
v24@?0@"EKVirtualConference"8@"NSError"16
v24@?0@"<NSCopying>"8@"NSArray"16
EKVirtualConference title: %@, conferenceDetails: %@, joinMethods: %@, source: %@
com.apple.calendar.virtualconference
(nil)
v24@?0@"<NSCopying>"8@"NSError"16
v16@?0@"<NSCopying>"8
EKVirtualConferenceRoomType title: %@, identifier: %@, extensionBundleIdentifier: %@
EKVirtualConferenceJoinMethod title: %@, url: %@, isBroadcast: %@
%@ <%p> {UUID = %@; name = %@; email = %@; status = %lu; accessLevel = %lu;}
invite-accepted
invite-declined
invite-deleted
invite-invalid
invite-noresponse
.plist
v20@?0i8Q12
v32@?0@"NSString"8@"NSArray"16@"NSError"24
v32@?0@"CalDAVOfficeHour"8Q16^B24
v24@?0@"NSString"8@"NSError"16
MobileMe
Subscribed
Other
%@ <%p> {UUID = %@; type = %@; title = %@; externalID = %@}
host
port
useSSL
ownerAddresses
ownerAddress
preferredOwnerAddress
v24@?0@"NSError"8@"DAAccountExternalIdentificationInfo"16
timeOfLastExternalIdentification
managedConfigurationAccountAccess
_EKVirtualConferenceRequestTypeKey
_EKVirtualConferenceRequestTypeRoomTypes
_EKVirutalConferenceRequestTypeJoinMethodsForRoomType
_EKVirtualConferenceRequestTypeURLInvalidate
_EKVirtualConferenceRequestRoomTypeIdentifier
_EKVirtualConferenceRequestURLParameterForInvalidation
_EKVirtualConferenceRoomTypeTitleKey
_EKVirtualConferenceRoomTypeIdentifierKey
_EKVirtualConferenceJoinMethodTypeIdentifierKey
_EKVirtualConferenceJoinMethodTitleKey
_EKVirtualConferenceJoinMethodURLKey
_EKVirtualConferenceInfoTypeIdentifierKey
_EKVirtualConferenceInfoTitleKey
_EKVirtualConferenceInfoDetailsKey
_EKVirtualConferenceInvalidationResultKey
_EKVirtualConferenceInvalidationResultSucceeded
_EKVirtualConferenceInvalidationResultFailed
_EKVirtualConferenceTypeIdentifierKey
EKVirtualConferenceExtensionContext.m
Invalid completion method called for request type
color
display_order
EKTravelTimeErrorDomain
v24@?0@"CalRoute"8@"NSError"16
MKPlacemark
MKMapItem
MKDirectionsRequest
MKDirections
MKErrorUnknown
MKErrorServerFailure
MKErrorLoadingThrottled
MKErrorPlacemarkNotFound
MKErrorDirectionsNotFound
EKTravelLookupErrorUnknown
v24@?0@"MKETAResponse"8@"NSError"16
v24@?0@"CLPlacemark"8@"NSError"16
CLGeocoder
RTRoutineManager
CLLocation
semanticIdentifier
GEOMapService
Trying to initialize an EKStructuredLocation as a copy of an object that is not an EKStructuredLocation
geoLocation
%4f, %4f
ab://
ab\://
%@ <%p> {title = %@; address = %@; geo = %@; abID = %@; routing = %@; radius = %f;}
geo:%f,%f
x-apple-eventkit
Reminder
RecurrenceRule
Attendee
Organizer
ResourceChange
InviteReplyNotification
ResourceChangeNotification
SuggestionNotification
CategoryLink
Participant
temporary
%@:///%@/%@%d
endDate is nil
occurrenceCount == 0
occurrenceCount
%@ <%p> { UNTIL=%@ } 
%@ <%p> { COUNT=%lu }
Attachment
ClientLocation
StartLocation
EndLocation
calendarItemOwner
<%@ %p> %@
file
%@ <%p> {%@; URL:%@; localRelativePath:%@; filename:%@; fileFormat:%@; fileSize:%@; UUID: %@
_MKLaunchOptionsFromTimeToLeaveNotificationKey
v28@?0@"MKMapItem"8@"NSError"16B24
v24@?0@"MKMapItem"8@"NSError"16
FIRST=%@;
LAST=%@;
B24@?0@"EKCalendar"8@"NSDictionary"16
EKCalendarVisibilityManagerDefaultQ
Method not implemented on iOS.
EKEventStoreChangedNotification
EKEventStoreChangedObjectIDsUserInfoKey
EKEventStoreChangeTypeUserInfoKey
EKEventStoreCalendarDataChangedUserInfoKey
EKEventStoreRemindersDataChangedUserInfoKey
EKEventStoreTimeZoneChangedNotification
EKEventStoreBatchedChangeEventNotification
EKEventStoreCalendarsChangedNotification
EKEventStore_DistributedNotification_AutomaticGeocodingAllowedChanged
EKEventStoreIdleChangeTrackingClientWasPurgedNotification
EKEventStoreModifiedObjectIdentifiers
EKEventStoreRevert
x-apple-reminderkit
REMCDReminder
x-apple-calendar
Conference
com.apple.eventkit.eventstore.calendars
com.apple.eventkit.eventstore.registered
com.apple.eventkit.eventstore.unsaved
com.apple.eventkit.eventstore.dbchanged
com.apple.eventkit.eventstore.constraintsCache
com.apple.eventkit.eventstore.notificationCollectionCache
kCalTimedDefaultAlarmChangedNote
kCalAllDayDefaultAlarmChangedNote
v20@?0B8@"NSError"12
v12@?0C8
v20@?0i8@"NSDictionary"12
v20@?0@"EKEventStore"8B16
CADObjectID
com.apple.eventkit.autoreset
v28@?0i8@"NSArray"12@"NSArray"20
v32@?0@"NSNumber"8Q16^B24
B24@?0@"EKSource"8@"NSDictionary"16
EKEventStore.m
Invalid entity type passed
objectID
%@/RID=%lu
%@:%@
Nil URI passed
%@: path is empty or nil
externalIdentifier must be an instance of NSString
externalIdentifier is empty
predicate is nil
predicate is not a calendar item predicate created through EKEventStore
predicate is not a reminder predicate created through EKEventStore
v20@?0i8B12B16
-[EKEventStore contactIdentifierForCalendarItem:]_block_invoke
-[EKEventStore addContactIdentifier:forCalendarItem:]_block_invoke
-[EKEventStore removeContactIdentifier:forCalendarItem:]_block_invoke
-[EKEventStore countOfRemindersWithContactIdentifier:]_block_invoke
-[EKEventStore remindersWithContactIdentifier:]_block_invoke
v20@?0@"NSArray"8i16
-[EKEventStore birthdayCalendarEnabled]_block_invoke
-[EKEventStore setBirthdayCalendarEnabled:]_block_invoke
-[EKEventStore suggestedEventCalendar]_block_invoke_2
-[EKEventStore insertSuggestedEventCalendar]_block_invoke_2
-[EKEventStore insertSuggestedEventCalendar]_block_invoke
-[EKEventStore removeSuggestedEventCalendar]_block_invoke_2
-[EKEventStore confirmSuggestedEvent:]
-[EKEventStore acceptSuggestedEvent:]
-[EKEventStore deleteSuggestedEvent:]
SGSuggestionsService
-[EKEventStore naturalLanguageSuggestedEventCalendar]_block_invoke_2
nil notification passed in to [EKEventStore saveNotification:commit:error:]
Nil notification collection passed in to [EKEventStore saveNotificationCollection:commit:error:]
Unsupported status for responding to shared calendar invitation. Only accept and decline are supported
B24@?0@"EKResourceChange"8@"NSDictionary"16
v44@?0i8@"NSArray"12@"NSArray"20@"NSArray"28@"NSDate"36
v28@?0i8Q12@"NSArray"20
nil attachment passed in to [EKEventStore saveAttachment:commit:error:]
Object is not an EKPersistentObject
Unknown entity name %@ for objectID: %@ with entity type: %d
Object is not an EKObject
Can't add deleted or inserted object to update set
Attempt to insert a nil object.
Attempt to insert something that is not a EKPersistentObject.
Attempt to insert an object that belongs to a different event store.
Attempt to delete a nil object.
Attempt to delete something that is not a EKPersistentObject.
predicate was not created with EKCalendarStore methods
FetchEventsMatchingPredicate
duration
block is nil
v28@?0@"NSDate"8B16^B20
@"NSArray"16@?0@"CalDateRange"8
%@: startDate is nil
%@: endDate is nil
v20@?0i8q12
v44@?0i8B12q16@"NSData"24i32i36i40
Constraints data size is wrong.  Your version of EventKit is incompatible with the running version of calaccessd.
%@.simulated.calendar.apple.com
simulated.calendar.apple.com
EKConferenceUtils.workQueue
v16@?0@"LSApplicationRecord"8
com.microsoft.lync2013.iphone
Skype
v24@?0@"LSAppLink"8@"NSError"16
com.apple.InCallService
com.apple.facetime
v16@?0@"NSString"8
com.apple.mobilecal.FacetimeExtension
[%@] startDate: [%@] endDate: [%@] duration: [%@ seconds] conflictedParticipants count: [%@]
Event update: %@
iTIP
%@ has updated the event: %@, scheduled for %@. To acknowledge this invitation, click the link below.
%@ has updated the event: %@, scheduled for %@ at %@. To acknowledge this invitation, click the link below.
%@ has updated the event: %@, scheduled for %@ at %@ (%@). To acknowledge this invitation, click the link below.
iCal-Request.ics
Event invitation: %@
%@ has invited you to the event: %@, scheduled for %@. To accept or decline this invitation, click the link below.
%@ has invited you to the event: %@, scheduled for %@ at %@. To accept or decline this invitation, click the link below.
%@ has invited you to the event: %@, scheduled for %@ at %@ (%@). To accept or decline this invitation, click the link below.
Event canceled: %@
%@ has canceled the event: %@. To handle this cancellation, click the link below.
iCal-Cancel.ics
selfAttendee.statusRaw
Event accepted: %@
Event declined: %@
Event tentatively accepted: %@
%@ has accepted your invitation to the event: %@, scheduled for %@.
%@ has accepted your invitation to the event: %@, scheduled for %@ at %@.
%@ has accepted your invitation to the event: %@, scheduled for %@ at %@ (%@).
%@ has declined your invitation to the event: %@, scheduled for %@.
%@ has declined your invitation to the event: %@, scheduled for %@ at %@.
%@ has declined your invitation to the event: %@, scheduled for %@ at %@ (%@).
%@ has tentatively accepted your invitation to the event: %@, scheduled for %@.
%@ has tentatively accepted your invitation to the event: %@, scheduled for %@ at %@.
%@ has tentatively accepted your invitation to the event: %@, scheduled for %@ at %@ (%@).
iCal-Reply.ics
[%@] username: [%@], password: [%@]
******
%@ <%p> {UUID = %@; type = %@; title = %@; externalId = %@}
@"CalVirtualConferenceJoinMethod"16@?0@"EKVirtualConferenceJoinMethod"8
@"EKVirtualConferenceJoinMethod"16@?0@"CalVirtualConferenceJoinMethod"8
Video Conference
relativeOffset
absoluteDate
isAbsolute
Either the relative offset or absolute date must be set.
,%s%ld%s
%s%ld%s
com.apple.eventkit
mailto:
%@%@
EKUIAttendeeUtils_AttendeeHasResponded
com.apple.eventkit.redaction
<EKRedacted>
<%@: %p; Conflicts: %lu Out of total: %lu>
span
com.apple.iCal.viewModelChanged
DisabledCalendars
CollapsedTopLevelNodes
AccountDisplayOrder
LocalGroupsDisplayOrder
com.apple.calendar.preference.notification.changed
SharedCalendarNotificationsDisabled
InvitationNotificationsDisabled
showDeclinedEvents
TimeToLeaveEnabled
TimeToLeaveEnabledNotification
MainWindow
EventKit
Availability
UIAvailabilitySearch
Saving
com.apple.CoreRoutine.LocationOfInterest
v24@?0@"<GEOMapItem>"8@"NSError"16
Swim Lesson
Type
Poker Night
Book Club
Staff Meeting
v32@?0@"NSString"8@"NSDictionary"16^B24
%@ CONTAINS SELF
Unexpected frequency value loaded from database: %d
Unexpected CalDayOfWeek: %d
Unexpected EKWeekday: %d
The given source's 'accountID' is nil.  The availability cache will not be able to give availability data.  Cache: [%@]
[%@] initialized.
Gathering cached availability for address: [%@]
No cached spans found for address: [%@].  Ignored event ID: [%@].  Will send out remote fetch for availability.
Found stale cached spans for address [%@] in range with start date [%@] and end date: [%@].  Will send out remote fetch for availability.
Cache hit.   freshly cached spans found.
This availability cache's source is invalid.  Will not execute the availability request.  Cache: [%@]
This availability cache's source does not support availability requests. Will not execute the availability request.  Source account ID: [%@]. Cache: [%@].
Invalid start and end dates given.  Will not execute the availability request.
No addresses given in the availability request.  Completing quickly.
A client requested availability between start date [%@] and end date [%@].  Ignored event ID: [%@].  Addresses: [%@]
[%lu] local cached spans were found for addresses: [%@].  Ignored event ID: [%@].  Sending these results immediately to the requesting client.
Sending network request for addresses: [%@].  Start date: [%@].  End date: [%@]  Ignored event ID: [%@].  Account ID: [%@]
Availability request with ID [%@] received a response with results: [%@]. Elapsed milliseconds: [%f]
Availability request with ID [%@] completed with error: [%@].  Total elapsed milliseconds: [%f]
Cancelling availability request with request ID: [%@]
No spans were returned for address [%@] and ignored event ID [%@]
Failed to deserialize structured data. Error: %@
Failed to serialize structured data dictionary: %@. Error: %@
Running occurrence cache search for search term = %@
Call to calendar daemon failed: %@
Received batch results from server for search term = %@, results = %{public}@, finished = %{public}@, reply ID = %{public}@
EKCalendarNotificationReference: failed to get persistent object for notification
After generating a notification, it was observed that its backing data was removed from the database.  Clearing the notification.  Object ID: [%@]  Generated notification: [%@]
Attempting a cross-store copy for object of type %@. myEventStore = %p, other = %p
Failed to create committed relationship for relation %@ (%{public}@)
Connection interrupted!
Client tried to open too many connections to calaccessd. Refusing to open another
Error setting initialization options: %@
Will not set a travel lookahead interval of less than 0.  Given value: [%f]
Saving of invisible calendars commencing.
No calendar identifier found.  Will not be able to save all invisible calendars.  Calendar: [%@]
Saving calendar identifier [%@] of invisible calendar
Saving of invisible calendars completed.
Not updating deselected calendar identifiers because nothing has actually changed.
Error archiving contact by email predicate. Error: %@.
EKAutocompleteSearch: Beginning spotlight search.
EKAutocompleteSearch: Got spotlight search results.
EKAutocompleteSearch: Search was cancelled before we processed results. Abandoning.
Spotlight query controller returned an error when searching for string (%@), error: %@
EKAutocompleteSearch: Processing results.
EKAutocompleteSearch: Search was cancelled while processing results. Abandoning.
EKAutocompleteSearch: Search took longer than allowed time. Stopping earlier.
EKAutocompleteSearch: Finished processing results.
EKAutocompleteSearch: Search was cancelled while we processed results. Abandoning.
EKAutocompleteSearch: Returning results via callback.
Nil rowID passed in to createOwnerIDWithRowID:objectType:
Invalid owner object type. Type: %@
Invalid rowID passed in. rowID: %@
Computing diff between %@ and %@
Objects are of different classes.  Diff finished
Objects have different values.  Diff finished
Objects have different identities.  Diff finished
One or both objects are nil.
Computing single value differences.
Single value differences? [%d]
Computing single value relationship differences.
Single value relationship differences? [%d] - %@
Computing multi value relationship differences.
Multi value relationship differences? [%d] - %@
Computing identity differences.
Identity differences? [%d] - %@
Computing immutable differences.
Immutable differences? [%d] - %@
-[EKAccountRefresher _eventStoreChanged], and _currentlySyncing changed from %{BOOL}i to %{BOOL}i (sources=%{BOOL}i; calendars=%{BOOL}i)
-[EKAccountRefresher _eventStoreChanged], and _currentlySyncing is still %{BOOL}i (sources=%{BOOL}i; calendars=%{BOOL}i)
%@ has not yet finished refreshing
Calling -[EKAccountRefresher refresh] more than once is not supported.
Started a refresh of %lu accounts and %lu subscribed calendars
_refreshControlMaximumVisibleTimeElapsed; calling sync completed
timed out waiting for sync to start; calling sync completed
Hiding sync spinner after %fs
Validation is failing for %@ because access has not been granted for %{public}@.
Validation is failing for %@ because readonly items can't be removed.
Validation is failing for %@ because it's not deletable by shared calendar sharees.
Attempting to set the same selfAttendee using a different EKAttendee instance. There is no work to be done, but if the passed in instance had changes then they will not be saved when this calendar item is saved.
Changing timeout in [%@] from [%@] to [%@].
Set 'purgingAllowed' from [%@] to [%@] in [%@]
No existing store was found in [%@].  Created event store: [%@].
The purging timeout is 0.  Will not set up an idle timer for [%@].
There is no event store being cached at the moment.  Will not set up an idle timer for [%@].
Purging is disallowed.  Will not set up an idle timer for [%@].
No existing timer found in [%@].  Will create a timer.
Idle timer fired in [%@].
Clearing event store: [%@] in [%@]
Setting the timer's timeout to [%@] seconds and its leeway to [%@] seconds.  The timer will fire around [%@] in [%@]
Uninstalling dispatch timer in [%@]
Adding persistent notification observers for [%@]
Removing persistent notification observers for [%@]
[%@] received notification: [%@]
Ignored low-level [%@] notification in [%@].
Removing transient event store change observer for event store [%@] in [%@]
Firing changed block from [%@]
Error saving event for reporting as %@. Error = %@
(cachedJunkStatus) junkStatus was set on the event to %d
(cachedJunkStatus) event was just created event is not junk
(cachedJunkStatus) event is not junk because it was either organized by me or has no attendees
(cachedJunkStatus) my status on the event is accepted or tentative so the event is not junk
(cachedJunkStatus) junk status for the invitation is %@
(couldBeJunk) event could be junk [%@]
(couldBeJunk) event is not junk [%@]
(junkStatusForInvitation) junk reporting is not supported on the server
(junkStatusForInvitation) junk reporting is supported on the server
(junkStatusForInvitation) our contacts reputation check returned that we should %@ the organizer
(junkStatusForInvitation) our eventstore reputation check returned that we should %@ the organizer
Unknown CADFilter subclass: %@
A request to search for more times when all attendees can attend was made.
A request to search for more times when some attendees can attend was made.
Searching reset with organizerAddressForNewlyScheduledEvent [%@] and event [%@]
No event given.  Will not search for alternative times.
The event's source does not support availability requests.  Will not issue search for alternative times.
The event's start date is the same as its end date.  Will not issue search for alternative times.
The event is an all-day.  This is currently not supported.  Will not issue search for alternative times.
Starting original conflict detection - event start date: [%@] event end date: [%@] ignored event ID: [%@] source: [%@]
Extracting attendees for original conflict detection.
Will not consider attendee for conflict detection because it is a room: [%@]
No participant address found for participant: [%@].  Will not search use this participant to search for alternative times.
The event has a dirty date property, so we'll forcibly request availability for this participant: [%@]
Attendee has declined: [%@]
Attendee needs to respond: [%@]
Adding participant with address [%@] to the list of attendees to be included in conflict resolution.  Participant: [%@]
Could not find the organizer's address.  This can sometimes happen if the event is being scheduled for the first time.  Organizer: [%@]
No 'organizerAddressForNewlyScheduledEvent' given.  The organizer for this event is unknown and conflict resolution will likely be incorrect and irrelevant.
Adding organizer with address [%@] to the list of attendees to be included in conflict resolution.  Participant: [%@]
The event's dates have not been dirtied and there are no addresses collected for looking up availability information for the event's original time span.
Detected a conflict.  [%@] attendees have declined.  Will perform conflict resolution by searching for time slots in the future. 
No conflicts detected, but noConflictFound flag set. Will attempt to perform conflict resolution.
No conflicts detected.  Will not attempt to perform conflict resolution.
We need to figure out the availability status of some attendees in order to complete conflict detection.  Attendees: [%@].
self went away.  Returning early.
The availability operation went away.  Returning early.
Error encountered while searching.  Error: [%@]
Could not find participant.  Will not count as busy.  Address: [%@]
This participant is busy during the event's time range: [%@]
This participant is completely free during the event's time range: [%@]
Including declined participants in the list of participants with conflicts.
Conflict detection complete.  Conflicted participants: [%@]
Participants with conflicts found.  Will search for other time slots.  Participants with conflicts: [%@]
No participants with conflicts found.  Will not continue on by searching for other time slots.
Sending off availability request operation for execution: [%@]
A search attempt was requested.
There are no more search attempts remaining.  Will not search.
There is an availability request in progress.  Will not search.
Preparing to search for alternate times in order to proceed with conflict resolution.
The availability search operation went away.  Returning early.
This availability search operation was cancelled: [%@]
Operation resulted in an error.  Re-trying search.  Error: [%@]
Searching for time slots between start date [%@] and end date [%@] with ignored event ID [%@] and addresses [%@]
Resetting search fallback numbers.  Current remaining search attempts: [%@].  Current availability search duration multiplier: [%@]
Resetting of search fallback numbers complete.  New remaining search attempts: [%@].  New availability search duration multiplier: [%@]
No 'state changed' callback found.  Will not send state changed information.  State: [%@]
Sending state change.  State: [%@]
Transitioning to the [%@] state and attempting a search.
Processing results - start date: [%@] end date: [%@] results: [%@]
Found [%@] free times and [%@] non-free times.
Work remains, but there are no more remaining search attempts left.  Search exhausted.
Search has not progressed and no more work remains.  This is an invalid state, as there should always be work to do until we've seen search results or there are no more search attempts left.
There are [%@] remaining search attempts left.  Continuing search.
Halting search.
No leftover spans found for latest date: [%@]
No participant found for participant with address: [%@].  Will not generate time spans for this participant's availability information.
This span's start date is equal to its end date: [%@].  Will not consider this span in alternative time calculations.
Could not find a time span that contains date: [%@]
No replacement spans found.
Validating [%@] spans.
Found span whose start date doesn't match previous span's end date.  Previous lastEndDate: [%@].  Cached span: [%@]
Span's start and end date is the same: [%@]
Span's start date is after its end date: [%@]
Contiguous free spans exist.  Last inspected span: [%@].  This span: [%@]
Time gaps exist in the spans range: [%@]
A zero-duration span exists in the spans range: [%@]
At least one span's start date comes after its end date in the spans range: [%@]
At least two contiguous spans are marked as being free in the spans range: [%@]
Deserialization of trust error [%@]
We were unable to serialize the trust for a certificate error [%@].
Gathering freshly cached spans between [%@] and [%@]
There were no valid non-overlapping results %@
We are trying to insert a span with no end date (%@). current dates: (%@)
Inserting spans [%@].
ERROR: No span given to insert results.
ERROR: No valid span given to insert results.
Clamping date range for spans between [%@] and [%@]
Clamping date range for spans.  Original start date: [%@].  Original end date: [%@].  New start date: [%@].  New end date: [%@].
There is only one span.  Created a new span and set its type to: [%@]
Clamped the spans.  firstTruncatedSpan: [%@].  lastTruncatedSpan: [%@]
No clamping needed.
Failed to fetch event for attendee replied notification %{public}@ when attempting to acknowledge. Silently ignoring.
Failed to clear attendee replied notification %{public}@: %@
We completed the import during the file separation phase.
We failed to figure out the different types of files we were trying to import. Aborting import.
Importing iCal files (%@) and vCal files (%@) to calendar %@
Importing files to user-specified calendar with identifier ( %@ )
No destination calendar provided.  Will attempt to choose appropriate calendars.
%@ doesn't have a default calendar to put the items into.
Couldn't handle import for all iTIP files.  Bailing.
Couldn't handle import for all non-iTIP files.  Bailing.
We don't know what calendar to import some files to and we don't have a callback for Calendar selection.  Bailing.
No destination calendar provided. We need to ask the user what calendar to import to for %lu files.
User didn't select calendar, instead cancelled, returning. [%@]
User selected calendar: UID( %@ )
User selected calendar %@
Found a calendar archive among multiple files to import. Ignoring the other files.
Found a calendar archive to import but no method for restoring from the backup file.
Attempting to open version 1.0 .ics file.  Will treat it as a vcs file and import.
Couldn't read calendar data from file "%@".  Aborting open.
File %@ has method PUBLISH or NONE.
Not importing file "%@" because it has either zero or more than one ICSEvent
File %@ is an iTIP message.
File %@ has no VCALENDAR.
Error importing iTIP ICS: %@
We did not import the iTip files [%@].
Importing pre-existing event.  Will stay on current calendar: objectID ( %@ )
Importing a pre-existing event but there were no eligible writeable calendars.
Finding preferred source for event with organizer (%@) and attendees (%@)
Failed to import event that has no organizer but it does have attendees.
Event has no organizer or attendees.
Preferring principal because its primary address is an attendee: %@
Failed to choose a preferred source because more than one principal had an attendee as its primary address: %@
Preferring principal because at least one of its alternate email addresses is an attendee: %@
Failed to choose a preferred source because more than one principal had an attendee as an alternate email address: %@
Chose a preferred source because its primary email address matches the domain of the organizer: %@
Failed to choose a preferred source because more than one principal's primary email address matched the domain of the organizer: %@
Chose a preferred source because it is the only source
Failed to choose a preferred source because we didn't match any auto-import criteria. Either the imported file had an organizer or had no organizer/no attendees.
ICS calendar expected to contain a single item, but instead it contained %lu
Expected an event but got %@
Import of [%@] failed with error [%@]
Error fetching changed object IDs: %@
Unsupported entity type: %d
Invalid entity type: %d
Failed to fetch any event sources despite having access to events. Skipping reminder sources and returning 0 sources
Failed to fetch any reminder sources despite having access to reminders. Skipping event sources and returning 0 sources
Event or reminder source without ID: eventSourceID=%@, reminderSourceID=%@, eventSource=%@, reminderSource=%@
Unexpected nil self in birthday update block
Not updating birthday events -- need reset? [%{BOOL}d] birthdays enabled? [%{BOOL}d]
BirthdayEventsGenerationVersion (%d) does not match current version (%d). Forcing regeneration.
BirthdayEventsGenerationLocale (%@) does not match current (%@). Forcing regeneration.
BirthdayEventsGenerationLocale ignoring locale change because locale identifier has not changed (%@)
EKBirthdayListener unable to delete birthday calendar %@, %@
EKBirthdayListener unable to commit birthday calendar deletion %@
Creating Birthday Calendar
EKBirthdayListenerFailed to save calendar to event store with error: %@
EKBirthdayListener inserting birthday for %@ (%@)
EKBirthdayListener unable to save event %@, %@
Resetting All Birthdays in Store
Expected exactly 1 birthday calendar, but instead there are %lu
EKBirthdayListener unable to commit to store %@
EKBirthdayListener received %ld inserted, %ld updated, %ld deleted contacts
No birthday calendar found when trying to add birthdays
EKBirthdayListener removing birthday for %@ (%@)
EKBirthdayListener removing invalid birthday for %@ (%@), No Contact Name!
EKBirthdayListener removing invalid birthday for %@ (%@), Invalid Contact Identifier!
EKBirthdayListener unable to remove event %@ %@
EKBirthdayListener committing changes
Object %@ has no unique identifier: %@
Attempted to acknowledge calendar invite reply notification with objectID %{public}@, but it was not found. Silently ignoring this request.
CADEventPredicate
CADNotifiableEventsPredicate
CADEventsForAssistantSearchPredicate
CADNotificationCenterVisibleEventsPredicate
CADUnacknowledgedEventsPredicate
CADUnalertedEventsPredicate
CADRespondedEventsPredicate
CADUpcomingEventsPredicate
EKMasterEventsPredicate
CADTravelEventsPredicate
CADUpNextEventsPredicate
CADContactEventsPredicate
CADEventCreatedFromSuggestionPredicate
EKReminderPredicate
EKScheduledReminderPredicate
CADCalendarItemsWithExternalIdentifierPredicate
CADPropertySearchPredicate
CADEventTimeWindowPredicate
CADNaturalLanguageSuggestedEventsSearchPredicate
CADEventsForConferenceURLPredicate
Unexpected predicate class: %@
Unknown Predicate Search
predicateClass=%@; predicateFormat=%@
EKPredicateSearch
error=%i; foundItems=%lu
Error (%d) in reply block for CADDatabaseFetchCalendarItemsWithPredicate attempt %d/%d
All retries exhausted for CADDatabaseFetchCalendarItemsWithPredicate
%@: failed to register result object with objectID: %@
Monitor starting up.
Monitor shutting down.
Ignoring expiration timer because the notification monitor is not running.
Data protection is on. Unable to check for updates.
Sync running, but we've been explicitly told to ignore that and refresh anyway.
Sync running. Waiting for it to finish before checking for updates.
Notification monitor wants to reload notification count. Will fetch notification count from the event store as a result
Set notification count to %{public}@.
Notification monitor wants to reload notifications. Will fetch notification references from the event store as a result.
Set notification references to %@.
Current notification count: %{public}@. Last event notification count: %{public}@.
Is initial check: %{public}@.
Count changed to %{public}@ events, Notifying.
Application badges are not supported on this platform. Will not notify.
Posting notification count changed notification.
No expiring notifications. Not setting expiration timer.
Received multiple expiration dates in the past. Will not set expiration timer. Most recent expiration date received was %{public}@
Next expiration fire time will be %{public}@.
Database changed.
Notification count changed externally.
Alert pref changed.
Expiration timer fired.
Fetching event notifications from event store: %@.
Fetched event notifications from event store: %@.
Faulted in notification: %@.
Sync timer fired.
Sync started. Suppressing notification monitor checks while it runs.
Sync done, %@ changes.
Will not set an availability freshness window of less than 0.  Given value: [%f]
Will not set an overridden travel advisory hypothesis conservative travel time of less than 0.  Given value: [%f]
Will not set an overridden travel advisory hypothesis estimated travel time of less than 0.  Given value: [%f]
Will not set an overridden travel advisory hypothesis aggressive travel time of less than 0.  Given value: [%f]
Unexpected error code given to +_defaultDescriptionForCADErrorCode: %d
Already active.  Will not activate [%@]
Already inactive.  Will not deactivate [%@]
nil 'hypothesis' received in [%@]
Updating [%@] based on new hypothesis. now: [%@] startOfLeaveNowPeriod: [%@] startOfRunningLatePeriod: [%@]
Refreshing [%@]
Period refreshed from [%@] to [%@] in [%@]
Calculated next refresh date of [%@] in [%@]
[%@] is before now.  Will not set up a timer to refresh [%@]
Timer fired in [%@].
+alternateUniverseClass called on a class that does not implement it (%{public}@)
Error loading number %@ from daemon: %@
Error loading date %@ from daemon: %@
Error loading string %@ from daemon: %@
Error loading data %@ from daemon: %@
Error loading to-one relation %@ from daemon: %@
Error loading to-many relation %@ from daemon: %@
Failed to take value for related object with key %@
Could not convert dictionary into EKObjectID. entityType = %@, rowID = %@
nil 'string' given.  Will not find a corresponding travel state.
Unknown travel state given: [%@].  Will not find a corresponding travel state.
RIDESHARE is unsupported in geoTransportTypeAsString. Returning nil.
nil 'string' given.  Will not find a corresponding transport type.
Unknown transport type given: [%@].  Will not find a corresponding transport type.
nil 'string' given.  Will not find a corresponding traffic density.
Unknown traffic density given: [%@].  Will not find a corresponding traffic density.
Could not archive last sync user info, error = %@
Could not unarchive last sync user info, error = %@
Tried to set proposed start date on invalid event: %@
Beginning location prediction for event: %@
Failed to predict a structured location for event: %@ : %@
Returning location prediction [%@] for event: %@
Setting predicted location title to %@ for the event %@
LocationPrediction: this is %@the main thread. Using timeout %f
LocationPrediction: Reset timeout
LocationPrediction: Updating timeout from %f to %f
LocationPrediction: Not attempting prediction due to past timeouts
Calling _hasRecurrenceRuleChangeRequiringSpanAll on an event that has or had multiple recurrence rules is not supported. Results may be unpredictable. Current count = %d, previous = %d
Updating modified properties for event: %{public}@.
Updating modified properties for detached items: %@.
Updated modified properties: %u. %{public}@. Clear modified flags: %lu. Event: %{public}@
Event %{public}@ is not significantly detached because it is not detached
Event %{public}@ is significantly detached because its master is a phantom
Event %{public}@ is significantly detached because its start date differs
Event %{public}@ is significantly detached because its duration differs
Event %{public}@ is significantly detached because its location differs
Event %{public}@ is significantly detached because its title differs
Event %{public}@ is significantly detached because its status differs
Event %{public}@ is significantly detached because it is externally organized and its participation status differs
Event %{public}@ is significantly detached because its organizer differs
-[EKEvent updateEventToEvent:] is about to save itself [%@] with EKSuggestedEventInfo [%@]
-[EKEvent updateEventToEvent:] failed to save with error: %@
-[EKEvent updateEventToEvent:] saved itself correctly [%@]
-[EKEvent updateEventToEvent:] was given a nil event and will CANCEL itself [%@] with EKSuggestedEventInfo [%@]
-[EKEvent updateEventToEvent:] CANCEL finished correctly [%@], now attempting to save
-[EKEvent updateEventToEvent:] CANCEL failed with error: %@
-[EKEvent updateEventToEvent:] was called on an event without a EKSuggestedEventInfo: %@
Operation was cancelled.  Will not return results.  Operation: [%@]
No results block.  Will not pass along results [%@] for operation: [%@]
Finishing operation with error: [%@].  Operation: [%@]
Data protection state changed.  New 'dataIsAccessible' state: [%@].
Unexpected CalAttendeeStatus: %d
Unexpected EKParticipantStatus: %d
Error creating alarm: [%@]
Error creating attendee: [%@]
Error creating recurrence rule: [%@]
Reached maximum depth while validating root object %{public}@
Object of type %{public}@ (uniqueIdentifier = %{public}@) failed validation while validating relation %{public}@ with error [%@].
Property %@ was unavailable on backingObject %@. %@
Unable to set single changed value %@. Property %@ was unavailable on backingObject %@. %@
Unable to add multi changed object values %@. Property %@ was unavailable on backingObject %@. %@
Unable to remove multi changed object values %@. Property %@ was unavailable on backingObject %@. %@
Failed to get melted object for frozen object related by key %@. Event store is %@
Missing corresponding added object with semantic identifier %@ for relation key %{public}@.
All EKObjects need to have a unique identifier but %@ does not. %@
Attempted to apply change from incompatible object. My class = %{public}@, other class = %{public}@
Unexpected object type %{public}@ in change set for change to single value key %{public}@
Unexpected object type %{public}@ in change set for multi value add for key %{public}@
Unexpected object type %{public}@ in change set for multi value delete for key %{public}@
Validating deletion on an EKCalendar that allows both events and reminders. This may not work as expected: %@
Can't merge %@ with %@ because they are the same calendar.
Can't merge %@ with %@ because they are in different sources.
Can't merge %@ with %@ because %@ doesn't allow content modifications
Can't merge %@ with %@ because %@ is a shared calendar
Can't merge %@ with %@ because %@ is a reminder list
Can't merge %@ with %@ because this account doesn't support sharing scheduling and %@ is a shared calendar and %@ isn't.
Can't merge %@ with %@ because %@ isn't deletable
Error moving subscribed calendar: %@
Unable to export calendar data: %@
Error trying to report calendar invite as junk. Error: %@
Could not load extension for room type title: %@ identifier: %@ extensionIdentifier: %@, error = %@
Skipping extension join method %@ because it has insufficient information. Title = %@ URL = %@
Extension %@ did not provide any join methods.
Failed to get virtual conference join methods, extension = %@ request = %@ error = %@
Failed to find virtual conference extensions. Error = %@
Skipping extension room type %@ because it has insufficient information. Identifier = %@ title = %@
Request for virtual conference room type cancelled, request = %@ error = %@
Request for virtual conference room interrupted, request = %@ error = %@
Request for virtual conference room types failed, extension = %@ request = %@ error = %@
Request for virtual conference room types failed,timed out
Unexpected CalShareeStatus: %d
Unexpected EKShareeStatus: %d
Unexpected CalShareeAccessLevel: %d
Unexpected EKShareeAccessLevel: %d
Unexpected EKPrivacyLevel: %d
Unexpected CalEventPrivacyLevel: %d
Attempting to set a path (%{public}@) with -[EKSource setConstraintsName:]. Only the name should be supplied without an extension.
Attempting to set a file name with .plist extension (%{public}@) with -[EKSource setConstraintsName:]. Only the name should be supplied without an extension.
Attempting to set an unrecognized constraints name (%{public}@) with -[EKSource setConstraintsName:]. The given name should be a valid .plist resource in CalendarFoundation.
Ignoring attempt to set allowsTasks to %d on source %{public}@. Forcing to NO
Source has more than one calendar with the same external Id: %@
Error: externalIdentificationForAccountID: %{public}@, error: %@
Received request to find travel time from %@ to %@ by %@ arriving on date %@
Calculating travel time from %@ to %@ by %@ on date %@
Didn't find route or error for routeType %@
Found no travel times, only errors.  Trying again with start as current location
Found no travel times, only errors.  Bailing.
Finished finding travel times with results %@
Getting directions %@ with request %@
Travel time lookup failed with error code %@: %@
Found travel time in seconds %lul
Updating start location with current location information
Updated location to %@
Failed to get placemark with error %@
Making sure that %@ has coordinates
%@ already has coordinates
%@ is for current location.  Let MapKit handle
%@ doesn't have coordinates
%@ has no address
%@ has an address.  Looking up coordinates
Found coordinates for address. Updated location to %@
Couldn't find coordinates for address for %@
Couldn't find coordinates for address for %@ and failed with error %@
Wrong scheme for EKObjectID URL; got %@, expected %@; will return nil for objectIDWithURL:
EKObjectID URL has no path
URL with unrecognized ID type %c
EKObjectID URL has no entity name
Unknown entity name %@ with URI %@
Invalid range passed to +[EKObjectIDsFromData:range:]. Need at least %lu bytes, but only have %lu
Unable to write temporary file
Unable to read file at %@: error = %@
Could not get security scoped local URL wrapper for attachment, error = %{public}@, attachment ID = %{public}@
'nil' 'event' provided.  Will not generate URL for an event location.
No structured location found.  Will not generate URL for event: [%@]
Error: Could not weak link MapKit string constant symbol '_MKLaunchOptionsFromTimeToLeaveNotificationKey'. Cannot add '_MKLaunchOptionsFromTimeToLeaveNotificationKey' map item URL option as a result.
MapKit handle found.  Generated URL [%@] for location [%@].
Geolocation found.  Generated URL [%@] for location [%@].
No map kit handle or geolocation found.  Will not generate URL for location: [%@]
Travel advisory not supported.  Will not attempt geocode for event: [%@]
Event has no location.  Will not attempt geocode for event: [%@]
Event has geoLocation but no mapKitHandle.  Will not attempt geocode for event: [%@]
Event is a suggested event.  Will not attempt geocode for event: [%@]
Event has unsaved location changes.  Will not attempt geocode for event: [%@]
Event location hasn't changed since we geocoded 24 hours ago.  Will not attempt geocode for event: [%@]
Geocoding finished but the event location changed. Not saving results of geocode.
Geocoding finished with an error: [%@]
Failed to save geocoded event: [%@]
Geocoding finished and event was updated.
Geocoding finished but the location string was not geocodable.
The event has a location that is a conference room.  Will not attempt to geocode its location string.
Automatic location geocoding is disallowed.  Will not attempt to geocode this event's location string.
Starting geocode of location string for event: [%@]
Starting geocode of mapHandle for event: [%@]
Underlying calendar visibility preferences changed.  Notifying client of [%@]
No calendar identifier found.  Will not be able to find all visible calendars.  Calendar: [%@]
No calendar identifier found.  Will not be able get all deselected calendar identifiers.  Calendar: [%@]
[%@] initialized in process: [%@]
Data is protected.  Will not say that protected data became available.
Data is not protected.  Saying that protected data became available.
Initialized event store with access to events only, initialization options include allowing events only = %{public}@, current process disallows reminders by default = %{public}@
Error closing the database: %@
Error getting changes sequence number from daemon: %@
Error getting changes since sequence number from daemon: %@
No completion block given.  Will not validate object IDs: [%@]
No object IDs given.  Will not validate object IDs: [%@]
Got a not found error when validating an array of objectIDs. Assuming all are invalid
Error validating object IDs from daemon: %@
Not handling notification "%@" because there is no action for that notification name.
Error getting changed object IDs since timestamp %llu from daemon: %@
EventKit received changed object ID with rowid 0 of entity type %li.
Error getting UUID: %@
Attempted to cache a source before _sources was initialized. Ignoring.
Error getting sources: %@
Invalid source type passed to sourcesEnabledForEntityType: %@
Error getting deletable sources: %@
Failed to get scubscribed calendars source: %@
Failed to get local birthday calendar: %@
parentSourceForDelegateSource called with non-delegate source
Error getting granted delegates list: %@
Error updating granted delegate: %@
Error checking whether source (%{public}@, rowID = %d) is managed: %@
Cannot check whether source (%{public}@) is managed because we don't have access to the entity type it supports
Error clearing calendar %@ from notification center: %@
Attempted to cache a calendar before _calendars was initialized. Ignoring.
Error getting all calendars: %@
Error getting deletable calendars: %@
Error getting event with identifier %@: %@
Malformed event URI (%@) passed to _eventWithURI. Expected scheme: %@
Error getting calendar item with URI %@: %@
Error checking for existence of event in eventForUID: %@
Error getting event with uniqueId %@: %@
Error getting calendar item with UUID %@: %@
Error getting all events with uniqueId %@: %@
saveEvent
removeEvent
Error setting invitation status for event: %@
Error importing ICS data into calendars %@: %@
Error getting next assignable color: %@
Error getting default local calendar: %@
Non-delegate sources do not have their own default calendar.  Pass nil to get the default across all non-delegate sources
Error getting default calendar for new events: %@
You cannot set a default calendar on a non-delegate source.  Pass nil to set the default across all non-delegate sources
A delegate source's default calendar must be one of its own calendars.
Can't save reminder either because you have no access or you're trying to save using the legacy store, which is no longer supported
Malformed event URI (%@) passed to _reminderWithURI. Expected scheme: %@
Malformed event URI passed to _reminderWithURI: %@
%ld events were found for predicate: %@
Error fetching properties %@ for reminders: %@
Error getting closest occurrence date for event with row ID %i: %@
Error asking daemon if events have occurrences after date: %@
Cached calendar has no calendarIdentifier: %{public}@
Malformed calendar URI passed to calendarWithExternalURI: %@
%s: Could not fetch contact identifiers with error %@
%s: Could not add contact with error %@
%s: Could not remove contact with error %@
Error asking daemon whether OC occurrences are being generated: %@
Error getting occurrence cache occurrences for calendars %@ from daemon: %@
Error getting occurrence cache counts for calendars %@ from daemon: %@
Error getting scheduled task cache days and task counts from daemon: %@
Sending request to rebuild the occurrence cache.
The occurrence cache was rebuilt successfully.
The occurrence cache was not rebuilt successfully.  Error: [%@]
%s: Failed find out if birthday calendars are enabled with error %@
%s: Unable to set birthday calendars enabled with error %@
%s: Failed to get the Found in Mail calendar with error %@
%s: Could not insert the Found in Mail calendar because it already exists.
%s: Could not insert the Found in Mail calendar with error %@
%s: Could not remove the Found in Mail calendar with error %@
%s not available on this platform
Error determining if the suggested event calendar is modifiable: %@
%s: Failed to get the Natural Language Suggestions calendar with error %@
Error getting unacknowledged event count from daemon: %@
Error getting notifiable event count from daemon: %@
Error getting shared calendar invitations for entity types %i from daemon: %@
Failed to respond to shared calendar invitation with calendar ID %{public}@, account ID %{public}@: %@
Error getting resource changes: %@
Error marking resource change alerted: %@
EKEventStore: Can't get event notification information. Error: [%@]
EKEventStore: Can't get event notification count. Error: [%@]
Error getting replied event invitation information: %@
Error fetching attachment with UUID. UUID: [%{public}@].  Error: [%@]
Error refreshing source: %@
Unknown entity type: %d for object with rowid: %d
No object ID provided.  Will not find out if the object exists.
Error encountered while checking for existence of object with ID: [%@]  Error: [%@]
Error rolling back event store: %@
Attempting to commit changes in event store: [%@].
Client not allowed to modify the calendar database.  Will not commit.
No changes detected.  Calling commit successful.
Error committing event store: [%@]
Failed to insert %{public}@ delete %{public}@ update %{public}@
Enumeration attempt for events that were fetched is complete.  Predicate: [%@]
Invalid fetchIdentifier given to cancelFetchRequest. Type: %{public}@
Error fetching alarm with UUID.  UUID: [%@].  Error: [%@]
Error fetching alarm with externalID.  externalID: [%@].  Error: [%@]
Error getting alarm occurrences in range: %@
Error getting location-based alarms in range: %@
Error getting vehicle trigger alarms in range: %@
%@: Error building fetch predicate for 'Time to Leave' events. Start date is nil.
%@: Error building fetch predicate for 'Time to Leave' events. End date is nil.
%@: Error building fetch predicate for 'Up Next' events. Start date is nil.
%@: Error building fetch predicate for 'Up Next' events. End date is nil.
Error fetching location authorization status for TTL: %@
Error registering for detailed change tracking: %@
Error unregistering for detailed change tracking: %@
Error fetching changed object IDs since token %lu: %@
Change data was the wrong size to hold the changes we received. Told of %i inserts, %i updates, and %i deletes, but change data was only %lu bytes long.
Error marking changed object IDs as consumed: %@
Somebody called clearSuperfluousChanges. This call is no longer needed and does nothing.
Error in call to _saveWithoutNotify: %@
Cannot get source constraints for source %{public}@ because we don't have access to the entity type it supports
Error getting constraints for source: %@
Constraints data size is wrong.  Your version of EventKit is incompatible with the running version of calaccessd.
Error getting notificationCollection for source: %@
NotificationCollectionID requested when it has not yet been created. SourceID: %@
Error checking whether to permit email address: %@
Error checking whether to permitted phone number: %@
Error getting storage usage: %@
Posting synthetic route hypothesis for event external url = %{public}@, route hypothesis = %@
Could not post synthetic route hypothesis for event with external url = %{public}@, error = %d, route hypothesis = %@
Failed to create destination .icbu: %@
Failed to backup: %@
Failed to restore: %@
Attempt to set the default calendar for new reminders using EventKit. This is unsupported. You must use ReminderKit.
Couldn't find out what app opens URL as a universal link, trying to see what opens it as a custom URL scheme: %@
URL should be opened with the FaceTime app, but there was an error fetching FaceTime's application record: %@
Error getting claim binding for URL, error: %@
Failed to find app extension record for extension bundle identifier: %@
Containing record for app extension record could not be found or was the wrong type
Unable to find application record for URL %@, not invalidating.
Could not load extension for extensionIdentifier: %@, error = %@
URL invalidated successfully: %@
Unable to invalidate URL: %@
Failed to invalidate virtual conference URL, extension = %@ request = %@ error = %@
Me Card missing email address, can't send iMIP event: %@
Missing Subject, (invalid part-stat?) can't send iMIP event: %@
No email recipients for iMIP event: %@
Could not parse ICSDocument from data: %@
No 'address' given.  Will not create an adjusted address.
'nil' participant given to function: [%s].  Will not compute needs response state.
Migration returned error code %d
Skipping looking up predicted location because process is not entitled.
Failed to get map item from GEOMapService. error code = %ld, domain = %{public}@, error = %@
Got user interaction for mocked location of interest (%{public}@). Interaction type = %d
error reverse geocoding: %@
no results from reverse geocode for %@
reverse geocode timeout for %@
softlink:r:path:/System/Library/Frameworks/AddressBook.framework/AddressBook
EKDirectorySearchResultSet
EKRecurrenceRule
NSCopying
EKSourceConstraints
EKFrozenReminderCalendar
EKPersistentSharee
Shared
EKFrozenReminderReminder
EKReminderKitSaveAdditions
EKPersistentCalendar
EKFeatureSet
EKAvailabilityCache
EKPredicateEvaluating
EKPredicateEvaluator
CADPredicateValidator
NSObject
EKOccurrenceCacheSearch
EKCancellableRemoteOperation
EKSerializableParticipant
UnitTesting
EKPersistentNotification
EKCalendarNotificationReference
EKObject
EKFrozenMeltedPair
EKProtocolMutableObject
EKProtocolObject
EKRecurrenceGenerator
EKEventAction
EKAttendeeChange
EKOwnerIDProviding
EKPersistentRecurrenceRule
CADInterface
CADAccessInterface
CADDatabaseInterface
CADObjectInterface
CADSourceInterface
CADCalendarInterface
CADCalendarItemInterface
CADEventInterface
CADReminderInterface
CADAlarmEngineInterface
CADNotificationMonitorInterface
CADSpotlightInterface
CADInternalInterface
CADTestingInterface
CADMigrationInterface
CADSyncInterface
CADCalendarToolInterface
CADNotificationCountInterface
CADDatabaseStorageManagementInterface
CADBackupRestoreInterface
EKDaemonConnection
CADClientInterface
CADXPCProxyHelperDelegate
EKVirtualConferenceProvider
NSExtensionRequestHandling
EKPreferences
EKCalendarItemChange
EKNotificationChange
EKReminderFetchRequestToken
EKFetchRequestToken
EKReminderStore
EKUpdatedReminderBackingObjectProvider
EKVirtualConferenceRoomTypeDescriptor
EKVirtualConferenceURLDescriptor
EKVirtualConferenceDescriptor
EKStructuredLocationSemanticIdentifierGenerator
EKAutocompleteSearchResult
EKChangeListener
EKSuggestedEventInfo
EKParticipantForSorting
EKReminderChange
EKShareeChange
EKRecents
EKDirectoryResource
EKAutocompletePendingSearch
EKAutocompletePendingSearchProtocol
EKAutocompleteSearch
EKObjectChangeOwnerIDHelper
EKPersistentAttachment
EKDiff
EKObjectSummaryHelpers
EKAvailabilitySpan
CalDateRangeProtocol
EKFrozenReminderStructuredLocation
EKAccountRefresher
EKCalendarItem
EKOccurrenceCacheLocationSearch
EKCompatibility
EKTimedEventStorePurger
EKDirectoryLocation
EKPersistentLocation
EKFrozenReminderObject
EKParticipantToContactMatcher
EKNotificationCollectionOptions
EKNullFetchRequestToken
EKEvent_Shared
EKJunkInvitationProtocol_Shared
EKInviteeAlternativeTimeSearcher
EKAdditions
EKInviteReplyNotification
EKAttachmentChange
EKParticipant
EKParticipantSemanticIdentifierGeneratorDelegate
EKIdentityProtocol
EKCalendarSharedCalendarNotification
EKAvailabilitySpanDate
EKAvailabilityCachedSpanRange
EKPersistentAttendee
EKCalendarSuggestionNotification
EKDirectoryPerson
EKAlarmSemanticIdentifierGenerator
EKCalendarNotification
EKDirectorySearchOperation
EKNotification
EKEventOccurrenceInfo
EKDirectorySearchQuery
EKCalendarEventInvitationNotification
EKCalendarEventInvitationNotificationAttendee
EKSerializableStructuredLocation
EKICSImporter
EKObjectChange
Reminders
EKBirthdayListener
CalContactsProviderDelegate
EKPersistentAlarm
EKOfficeHour
EKEphemeralCacheEventStoreProvider
EKEventStoreProvider
EKPersistentResourceChange
EKFrozenReminderRecurrenceRule
EKRecurrenceIdentifier
EKChangeSet
EKPersistentExceptionDate
EKNotificationCollection
EKCalendarInviteReplyNotification
EKEventFetchRequestToken
EKPredicateExpanding
EKDefaultPropertiesLoading
EKPredicateSearch
EKResourceChangeNotificationChange
EKReminder
EKRecurrenceChange
_EKNotificationMonitor
EKDirectoryRecord
EKDebugPreferences
EKSecureKeyedArchiverSerializer
EKSerializer
EventKit
EKPersistentOrganizer
EKOrganizerChange
EKPersistentInviteReplyNotification
EKTravelAdvisoryTimelinessAuthority
CalActivatable
EKExceptionDate
EKPersistentEvent
EKObjectChangeSummarizer
EKTravelEngineHypothesis
NSMutableCopying
NSSecureCoding
NSCoding
EKMutableTravelEngineHypothesis
EKEventActionChange
EKWeakReference
EKPersistentObject
EKParticipantChange
EKGroupExpansionOperation
EKSerializableRecurrenceRule
EKTravelEngineUtilities
EKSharedEventStoreProvider
EKPersistentEventAction
EKAvailabilityUtilities
EKSyncStatusUtils
EKResourceChangeNotification
EKEvent
EKJunkInvitationProtocol_Private
EKOrganizer
EKRequestAvailabilityOperation
EKDataProtectionObserver
EKAttendee
EKAlarmChange
EKChangeTrackingClientId
EKSerializableEvent
EKObjectValidationContext
EKPersistentSuggestedEventInfo
EKRecurrenceDayOfWeek
EKDirectoryGroup
EKDuetSignalEventSerializer
EKSpotlightSearch
UnitTest
EKCalendar
CGColorWrapper
EKCalendarShareeOrOwner
EKConference
EKAlarm
EKVirtualConference
EKVirtualConferenceRoomType
EKVirtualConferenceJoinMethod
EKSharee
EKSource
EKVirtualConferenceExtensionContext
EKCalendarResourceChangeNotification
EKPersistentParticipant
EKCalendarChange
EKPredictedLocationOfInterest
EKTravelLookupManager
EKStructuredLocation
EKObjectID
EKRecurrenceEnd
EKPersistentCalendarItem
EKRelation
EKSerializableObject
EKAttachment
EKEventStore
EKMapsUtilities
EKEventChange
EKParticipantSemanticIdentifierGenerator
EKCalendarVisibilityManager
EKSerializableAttachment
EKEventStoreWeakWrapper
EKDaemonConnectionDelegate
EKResourceChange
EKSourceChange
EKConferenceUtils
EKPersistentConference
EKInviteeAlternativeTime
EKContactChange
EKFrozenReminderAlarm
EKiMIPHandler
EKiMIPUpdate
EKiMIPInvitation
EKiMIPCancel
EKiMIPReply
EKFrozenReminderSource
EKReadWriteLock
EKCredentials
EKPersistentResourceChangeNotification
EKSuggestionNotificationChange
EKPersistentSource
EKConferenceDeserializationResult
ConferenceDatatypeConverter
EKConferencePersistence
EKSerializableAlarm
EKRecurrenceHelper
EKExceptionDateChange
EKConflictDetails
EKInviteReplyNotificationChange
EKAvailabilityCachedSpan
EKCalendarPreferences
EKNotificationPreferences
CalendarAdditions
EKInviteeTimeSpan
EKStructuredLocationPrediction
locations
setLocations:
groups
setGroups:
resources
setResources:
people
setPeople:
.cxx_destruct
_locations
_groups
_resources
_people
T@"NSSet",&,N,V_locations
T@"NSSet",&,N,V_groups
T@"NSSet",&,N,V_resources
T@"NSSet",&,N,V_people
arrayWithObjects:count:
initRecurrenceWithFrequency:interval:end:
init
setUUID:
setFrequency:
setInterval:
setFirstDayOfTheWeek:
raise:format:
setRecurrenceEnd:
setDaysOfTheWeek:
setDaysOfTheMonth:
setSetPositions:
setMonthsOfTheYear:
setDaysOfTheYear:
setWeeksOfTheYear:
initRecurrenceWithFrequency:interval:daysOfTheWeek:daysOfTheMonth:monthsOfTheYear:weeksOfTheYear:daysOfTheYear:setPositions:end:
singleChangedValueForKey:
setSingleChangedValue:forKey:
stringValueAsDateOnly:isFloating:
stringWithFormat:
isProgramSDKAtLeast:
copyWithZone:
frequency
interval
recurrenceEnd
specifier
setSpecifier:
firstDayOfTheWeekRaw
setFirstDayOfTheWeekRaw:
setDay:
setMonth:
setYear:
exceptionWithName:reason:userInfo:
integerValue
numberWithUnsignedInt:
currentHandler
handleFailureInMethod:object:file:lineNumber:description:
numberWithUnsignedInteger:
unsignedIntegerValue
endDate
count
initWithEndDate:
initWithOccurrenceCount:
cachedValueForKey:populateBlock:
isEqual:
copy
setCachedValue:forKey:
setEndDate:
setCount:
usesEndDate
occurrenceCount
intValue
_ekWeekdayFromCalDayOfWeek:
_calDayOfWeekFromEKWeekday:
initWithSpecifier:
_recurrenceHelper
daysOfTheWeek
_updateSpecifierIfNeeded
daysOfTheMonth
daysOfTheYear
weeksOfTheYear
monthsOfTheYear
setPositions
isDirty
reset
clearCachedValueForKey:
rollback
changeSet
changedKeys
countByEnumeratingWithState:objects:count:
isEqualToString:
compare:
cachedEndDate
currentCalendar
timeZone
setTimeZone:
eventStore
startDate
components:fromDate:
dueDate
numberWithInteger:
array
addObject:
valueForKey:
isEqualToArray:
setFormatterBehavior:
timeZoneWithName:
setDateFormat:
stringFromDate:
string
iCalendarValueFromRecurrenceType:
appendFormat:
iCalendarValueFromDate:isDateOnly:isFloating:
objectAtIndex:
iCalendarDescription
stringWithString:
humanReadableDescriptionWithStartDate:isConcise:
dayOfTheWeek
icsWeekDayFromDayOfTheWeek:
weekNumber
initWithWeekday:number:
daysTypeForDayArray:
humanReadableDescriptionWithStartDate:ofRecurrenceRuleICSString:isConcise:
mutableCopy
objectAtIndexedSubscript:
setObject:atIndexedSubscript:
_acceptableStartDateRangeWithCurrentStartDate:calendar:
containsDate:
newStartDateIsValid:currentStartDate:calendar:
distantPast
distantFuture
rangeWithStartDate:endDate:
rangeOfUnit:startDate:interval:forDate:
rangeWithStartDate:duration:
_acceptableStartDateRangeForDailyRecurrenceWithCurrentStartDate:
_acceptableStartDateRangeForWeeklyRecurrenceWithCurrentStartDate:calendar:
_acceptableStartDateRangeForMonthlyRecurrenceWithCurrentStartDate:calendar:
_acceptableStartDateRangeForYearlyRecurrenceWithCurrentStartDate:calendar:
firstDayOfTheWeek
calendarIdentifier
knownSingleValueKeysForComparison
frozenClass
knownIdentityKeysForComparison
recurrenceRuleWithType:interval:end:
iCalendarValueFromDayOfTheWeek:
UUID
description
dateComponents
dirtyStateMayAffectExceptionDates
mayOccurAfterDate:
pinToEndsOfMonthsWithCalendarItem:
isWeekdayRule
isWeekendRule
isAnyDayRule
isSimpleRule
humanReadableDescriptionWithStartDate:
hasDuplicateMonthsOfYear
newStartDateIsInvalid:currentStartDate:calendar:
isEqualToRecurrenceRule:
shouldPinMonthDays
_shouldPinMonthDays
_usesEndDate
TB,R,N,V_shouldPinMonthDays
T@"NSDateComponents",R,N
TB,R,V_usesEndDate
T@"NSString",R,N
T@"NSDate",R,N
TB,R,N
T@"EKRecurrenceEnd",C,N
Tq,R,N
T@"NSArray",R,N
initWithCDBSourceConstraintFlags:
allAllowSourceConstraints
maxAlarmsAllowed
setMaxAlarmsAllowed:
maxRecurrencesAllowed
setMaxRecurrencesAllowed:
supportsAlarmTriggerIntervals
setSupportsAlarmTriggerIntervals:
supportsAlarmTriggerDates
setSupportsAlarmTriggerDates:
supportsAlarmsTriggeringAfterStartDate
setSupportsAlarmsTriggeringAfterStartDate:
snoozeAlarmRequiresDetach
setSnoozeAlarmRequiresDetach:
organizerCanSeeAttendeeStatuses
setOrganizerCanSeeAttendeeStatuses:
inviteesCanSeeAttendeeStatuses
setInviteesCanSeeAttendeeStatuses:
statusesAreAccurate
setStatusesAreAccurate:
supportsIncomingInvitations
setSupportsIncomingInvitations:
supportsOutgoingInvitations
setSupportsOutgoingInvitations:
requiresOutgoingInvitationsInDefaultCalendar
setRequiresOutgoingInvitationsInDefaultCalendar:
supportsInvitationModifications
setSupportsInvitationModifications:
supportsEventForwarding
setSupportsEventForwarding:
supportsResponseComments
setSupportsResponseComments:
deliverySourceOrExternalIDRequiredForResponse
setDeliverySourceOrExternalIDRequiredForResponse:
proposedStatusRequiredForResponse
setProposedStatusRequiredForResponse:
declinedStatusChangeRequiresNoPendingStatus
setDeclinedStatusChangeRequiresNoPendingStatus:
eventDurationConstrainedToRecurrenceInterval
setEventDurationConstrainedToRecurrenceInterval:
alarmTriggerIntervalConstrainedToRecurrenceInterval
setAlarmTriggerIntervalConstrainedToRecurrenceInterval:
occurrencesMustOccurOnSeparateDays
setOccurrencesMustOccurOnSeparateDays:
futureStartDateLimitedToOccurrenceCacheBounds
setFutureStartDateLimitedToOccurrenceCacheBounds:
supportsRecurrencesOnDetachedEvents
setSupportsRecurrencesOnDetachedEvents:
recurrencesShouldPinToMonthDays
setRecurrencesShouldPinToMonthDays:
requiresAttendeeSearchInSingleAccount
setRequiresAttendeeSearchInSingleAccount:
mustAcknowledgeMasterEvent
setMustAcknowledgeMasterEvent:
canSetAvailability
setCanSetAvailability:
eventAvailabilityLimited
setEventAvailabilityLimited:
requiresMSFormattedUID
setRequiresMSFormattedUID:
shouldCancelDeletedEvents
setShouldCancelDeletedEvents:
shouldDeclineDeletedInvitations
setShouldDeclineDeletedInvitations:
supportsStructuredLocations
setSupportsStructuredLocations:
supportsReminderActions
setSupportsReminderActions:
supportsReminderLocations
setSupportsReminderLocations:
supportsAlarmProximity
setSupportsAlarmProximity:
allowsCalendarAddDeleteModify
setAllowsCalendarAddDeleteModify:
allowsTasks
setAllowsTasks:
allowsEvents
setAllowsEvents:
supportsURLField
setSupportsURLField:
supportsAllDayDueDates
setSupportsAllDayDueDates:
supportsSharedCalendars
setSupportsSharedCalendars:
isFacebook
setIsFacebook:
recurrenceSeriesMustIncludeMoreThanFirstOccurrence
setRecurrenceSeriesMustIncludeMoreThanFirstOccurrence:
supportsPrivateEvents
setSupportsPrivateEvents:
prohibitsPrivateEventsWithAttendees
setProhibitsPrivateEventsWithAttendees:
supportsAvailabilityRequests
setSupportsAvailabilityRequests:
supportsIgnoringEventsInAvailabilityRequests
setSupportsIgnoringEventsInAvailabilityRequests:
supportsLocationDirectorySearches
setSupportsLocationDirectorySearches:
requiresSamePrivacyLevelAcrossRecurrenceSeries
setRequiresSamePrivacyLevelAcrossRecurrenceSeries:
supportsInboxAvailability
setSupportsInboxAvailability:
prohibitsMultipleMonthsInYearlyRecurrence
setProhibitsMultipleMonthsInYearlyRecurrence:
prohibitsMultipleDaysInMonthlyRecurrence
setProhibitsMultipleDaysInMonthlyRecurrence:
prohibitsYearlyRecurrenceInterval
setProhibitsYearlyRecurrenceInterval:
requiresOccurrencesConformToRecurrenceRule
setRequiresOccurrencesConformToRecurrenceRule:
prohibitsDetachmentOnCommentChange
setProhibitsDetachmentOnCommentChange:
allowsProposeNewTime
setAllowsProposeNewTime:
prohibitsICSImport
setProhibitsICSImport:
supportsAutoGeocodingStructuredLocations
setSupportsAutoGeocodingStructuredLocations:
supportsJunkReporting
setSupportsJunkReporting:
supportsPhoneNumbers
setSupportsPhoneNumbers:
attendeesUseDeletedByOrganizerStatus
setAttendeesUseDeletedByOrganizerStatus:
prohibitsSlicingEventsWithAttendees
setProhibitsSlicingEventsWithAttendees:
supportsSubscribedCalendars
setSupportsSubscribedCalendars:
supportsManagedSubscribedCalendars
setSupportsManagedSubscribedCalendars:
supportsSubscriptionMirroring
setSupportsSubscriptionMirroring:
supportsParticipantRoles
setSupportsParticipantRoles:
supportsAttachments
setSupportsAttachments:
requiresOpeningAttachmentAsLink
setRequiresOpeningAttachmentAsLink:
shouldUseDeleteAndAddInsteadOfMoveBetweenCalendars
setShouldUseDeleteAndAddInsteadOfMoveBetweenCalendars:
supportsFloatingTimeZone
setSupportsFloatingTimeZone:
prohibitsUsingEventOrganizerEmailWhenComposingMail
setProhibitsUsingEventOrganizerEmailWhenComposingMail:
supportsDelegation
setSupportsDelegation:
supportsDelegateEnumeration
setSupportsDelegateEnumeration:
supportsInvitationModificationsWithoutNotification
setSupportsInvitationModificationsWithoutNotification:
supportsRecurrenceSplit
setSupportsRecurrenceSplit:
supportsPush
setSupportsPush:
_flags
Ti,N
TB,N
setWithObject:
relationWithEntityName:toMany:inversePropertyNames:ownsRelated:
initWithObjectsAndKeys:
displayName
setDisplayName:
address
setAddress:
externalID
setExternalID:
shareeStatusRaw
setShareeStatusRaw:
shareeAccessLevelRaw
setShareeAccessLevelRaw:
primitiveStringValueForKey:
primitiveSetStringValue:forKey:
primitiveIntValueForKey:
primitiveSetIntValue:forKey:
primitiveSetRelationValue:forKey:
primitiveRelationValueForKey:
firstName
lastName
defaultPropertiesToLoad
relations
meltedClass
entityType
setFirstName:
setLastName:
setOwner:
owner
source
isFacebookSource
URLWithString:
name
emailAddress
predicateForContactMatchingEKParticipantWithName:emailAddress:URL:predicateDescription:
contactPredicate
hasUnsavedChangeForKey:
forceChangeValue:forKey:
forceUpdateFrozenCalendar:
relationWithEntityName:toMany:inversePropertyNames:
primitiveDataValueForKey:
primitiveSetDataValue:forKey:
primitiveBoolValueForKey:
primitiveSetBoolValue:forKey:
flags
unlocalizedTitle
colorStringRaw
sharees
primitiveDateValueForKey:
primitiveSetDateValue:forKey:
propertyKeyForUniqueIdentifier
externalIDTag
setExternalIDTag:
externalModificationTag
setExternalModificationTag:
syncToken
setSyncToken:
externalRepresentation
setExternalRepresentation:
setUnlocalizedTitle:
isColorDisplayOnly
setColorDisplayOnly:
symbolicColorName
setSymbolicColorName:
setColorStringRaw:
displayOrder
setDisplayOrder:
setFlags:
sharingStatus
setSharingStatus:
sharedOwnerName
setSharedOwnerName:
sharedOwnerURLString
setSharedOwnerURLString:
sharingInvitationResponse
setSharingInvitationResponse:
publishURLString
setPublishURLString:
setIsPublished:
isPublished
setPublished:
notifications
setNotifications:
setSharees:
setSource:
invitationStatus
setInvitationStatus:
allowedEntities
setAllowedEntities:
selfIdentityDisplayName
setSelfIdentityDisplayName:
selfIdentityEmail
setSelfIdentityEmail:
selfIdentityPhoneNumber
setSelfIdentityPhoneNumber:
selfIdentityAddressString
setSelfIdentityAddressString:
selfIdentityFirstName
setSelfIdentityFirstName:
selfIdentityLastName
setSelfIdentityLastName:
ownerIdentityDisplayName
ownerIdentityId
setOwnerIdentityId:
setOwnerIdentityDisplayName:
ownerIdentityEmail
setOwnerIdentityEmail:
ownerIdentityPhoneNumber
setOwnerIdentityPhoneNumber:
ownerIdentityAddressString
setOwnerIdentityAddressString:
ownerIdentityFirstName
setOwnerIdentityFirstName:
ownerIdentityLastName
setOwnerIdentityLastName:
notes
setNotes:
pubcalAccountID
setPubcalAccountID:
subcalAccountID
setSubcalAccountID:
subcalURL
setSubcalURL:
pushKey
setPushKey:
digest
setDigest:
setAllAlarms:
allAlarms
refreshDate
setRefreshDate:
refreshInterval
setRefreshInterval:
subscriptionID
setSubscriptionID:
lastSyncStartDate
setLastSyncStartDate:
lastSyncEndDate
setLastSyncEndDate:
lastSyncError
setLastSyncError:
lastSyncErrorData
setLastSyncErrorData:
shared
bypassSplashScreen
lastConfirmedSplashScreenVersion
_currentSplashScreenVersion
setLastConfirmedSplashScreenVersion:
isTravelAdvisorySupported
isConservativeEntryEnabled
areVehicleTriggersEnabled
eventDetailsDayPreviewEnabled
calendarListViewCellsFeaturesExtraContent
calendarListViewCellsFeaturesAttendeeInformation
areQuickActionsSupported
areApplicationBadgesSupported
isSuggestionsEnabled
isContinuitySupported
areContextualRemindersSupported
mustDisplaySplashScreenToUser
userAcknowledgedSplashScreen
automaticGeocodingEnabled
eventsFoundInAppsEnabled
initWithSource:
constraints
sourceIdentifier
title
initWithFormat:
UTF8String
initWithSuperclassDescription:
setKey:withString:
setKey:withBoolean:
setKey:withDictionary:
build
_dictionaryForIgnoredEventID:
objectForKey:
gatherFreshlyCachedSpansBetweenStartDate:endDate:
setObject:forKey:
errorWithDomain:code:userInfo:
_isValidStartDate:endDate:
_validateRequestStartDate:endDate:addresses:error:
_cachedSpanResultsBetweenStartDate:endDate:ignoredEventID:addresses:
allKeys
objectForKeyedSubscript:
predicateWithBlock:
filteredArrayUsingPredicate:
start
elapsedTimeAsNumber:
_handleResults:resultsBlock:ignoredEventID:
dictionaryWithObjects:forKeys:count:
_logRequestElapsedTime:forNumberOfAddresses:
sharedConnection
requestCalendarAvailabilityWithAccountID:startDate:endDate:ignoredEventID:addresses:resultsBlock:completionBlock:
cancelCalendarAvailabilityRequestWithID:
_generateEventKitSpansFromPersistenceSpans:
enumerateKeysAndObjectsUsingBlock:
insertSpans:
CalIsAfterDate:
initWithCapacity:
type
_convertType:
initWithStartDate:endDate:type:
enumerateObjectsUsingBlock:
numberWithDouble:
requestAvailabilityBetweenStartDate:endDate:ignoredEventID:addresses:resultsBlock:completionBlock:
cachedAvailabilityInDateRange:ignoredEventID:addresses:
cancelAvailabilityRequestWithID:
_sourceIsInvalid
_accountID
_sourceSupportsAvailabilityRequests
_processingQueue
_callbackQueue
_addressesToCachedSpanRanges
_ignoredEventIDsToAddressBasedCaches
_nextRequestID
_cancelledID
ekPredicateEvaluateWithObject:
evaluatePredicate:withObject:
class
self
performSelector:
performSelector:withObject:
performSelector:withObject:withObject:
isProxy
isKindOfClass:
isMemberOfClass:
conformsToProtocol:
respondsToSelector:
retain
release
autorelease
retainCount
zone
hash
superclass
debugDescription
TQ,R
T#,R
T@"NSString",R,C
unarchiveDictionaryFromData:error:
archiveDictionary:error:
localStructuredData
structuredData
_structuredDataDictionaryFromData:
removeObjectForKey:
_dataFromStructuredDataDictionary:
setLocalStructuredData:
setStructuredData:
_customObjectForKey:local:
_setCustomObject:forKey:local:
customObjectForKey:
setCustomObject:forKey:
localCustomObjectForKey:
setLocalCustomObject:forKey:
willSave
T@"NSData",C,N
initWithCalendars:searchTerm:store:callback:
connection
CADOperationProxySync
CADOccurrenceCacheSearchWithTerm:inCalendars:responseToken:reply:
objectID
rowID
numberWithInt:
addCancellableRemoteOperation:
performSearchOperation:inCalendars:withEventStore:andSearchTerm:
errorWithCADResult:
removeCancellableRemoteOperation:
CADOperationProxy
unsignedIntValue
CADOccurrenceCacheCancelSearchWithReplyID:
cancel
numberWithBool:
searchWithCalendars:searchTerm:store:callback:
disconnect
receivedBatchResultsFromServer:finished:
searchTerm
_calendars
_searchTerm
_store
_callback
_replyID
_canceled
setName:
setEmailAddress:
phoneNumber
setPhoneNumber:
setUrl:
participantRole
setParticipantRole:
participantStatus
setParticipantStatus:
participantType
setParticipantType:
attendeeWithName:emailAddress:phoneNumber:url:
classesForKey
initWithParticipant:
createAttendee:
_name
_emailAddress
_phoneNumber
_url
_participantRole
_participantStatus
_participantType
T@"NSString",C,N,V_name
T@"NSString",C,N,V_emailAddress
T@"NSString",C,N,V_phoneNumber
T@"NSURL",&,N,V_url
Tq,N,V_participantRole
Tq,N,V_participantStatus
Tq,N,V_participantType
CADObjectID
cachedConstraintsForSourceWithCADObjectID:
T@"NSString",R,D,N
sourceType
Tq,D,N
T@"NSString",C,D,N
defaultAlarmOffset
T@"NSNumber",C,D,N
disabled
TB,D,N
onlyCreatorCanModify
preferredEventPrivateValue
Ti,D,N
strictestEventPrivateValue
hostURL
setHostURL:
calendar
initWithType:objectID:date:eventStore:
registerFetchedObjectWithID:
initWithPersistentObject:occurrenceDate:
initWithEvent:
initWithPersistentObject:
initWithType:
setTitle:
setHiddenFromNotificationCenter:
sharedOwnerEmail
sharedOwnerPhoneNumber
sharedOwnerURL
setURL:
setAlerted:
CGColor
setDotColor:
setObjectID:
externalURI
allowedEntityTypes
setAllowedEntityTypes:
couldBeJunk
setCouldBeJunk:
publicObjectWithPersistentObject:
shareeStatus
calendarName
shareeDisplayName
shareeEmailAddress
shareePhoneNumber
shareeURL
alerted
setStatus:
URIRepresentation
sourceForInviteReplyNotification:
inviteReplyCalendar
calendarItem
_notificationTypeForResourceChange:notificationType:
changeType
deletedTitle
setWithArray:
changedByDisplayName
setCalendarName:
eventIdentifier
setEventID:
containsObject:
setChangeType:
createCount
setCreateCount:
updateCount
setUpdateCount:
deleteCount
setDeleteCount:
dateChanged
setDateChanged:
timeChanged
setTimeChanged:
locationChanged
setLocationChanged:
titleChanged
setTitleChanged:
setStartDate:
_dateForNextOccurrence
setStartDateForNextOccurrence:
isAllDay
setAllDay:
locationWithoutPrediction
setLocation:
objectWithIDExists:
currentLocale
descriptionWithLocale:
initWithType:objectID:eventStore:
notification
_date
_eventStore
_notification
_type
_objectID
Ti,R,N,V_type
T@"EKCalendarNotification",R,N
T@"EKObjectID",R,N,V_objectID
_sharedInit
isNew
markAsNew
persistentObject
additionalFrozenProperties
backingObject
isPropertyUnavailable:
uniqueIdentifier
_isNew
_hasChanges
committedCopy
diffWithObject:
result
doesNotRecognizeSelector:
isEqual:comparingKeys:compareImmutableKeys:ignoringProperties:
_object:equalsObject:forKeys:compareImmutableKeys:ignoringProperties:
_objects:haveSameMeltedClass:frozenClass:
_compareKnownKeys:forObject:againstObject:compareImmutableKeys:propertiesToIgnore:
_compareKnownKeys:forObject:againstObject:compareIdentityKeys:compareImmutableKeys:propertiesToIgnore:
_compareIdentityKeysForObject:againstObject:propertiesToIgnore:
_compareNonIdentityKeys:forObject:againstObject:compareImmutableKeys:propertiesToIgnore:
knownRelationshipMultiValueKeys
knownRelationshipSingleValueKeys
knownImmutableKeys
intersectSet:
allObjects
_compareSingleValueRelationshipKeys:forObject:againstObject:propertiesToIgnore:
_compareMultiValueRelationshipKeys:forObject:againstObject:propertiesToIgnore:
_compareNonRelationshipKeys:forObject:againstObject:propertiesToIgnore:
_compareSingleValueRelationshipKey:forObject:againstObject:propertiesToIgnore:
_compareMutliValueRelationshipKey:forObject:againstObject:propertiesToIgnore:
dictionaryWithCapacity:
setObject:forKeyedSubscript:
_compareRelationshipObject1:againstRelationshipObject2:propertiesToIgnore:
isWeakRelationship
isEqual:ignoringProperties:
_isPropertyUnavailable:convertToFullObjectIfUnavailable:
rebaseToEventStore:
rebaseSkippingRelationProperties:toEventStore:
_initChangeSetIfNone
_setEventStore:
isMeltedAndNotWeakRelationshipObject:forKey:
frozenObject
addMultiChangedObjectValue:forKey:
setPersistentObject:
existsInStore
mutableCopyWithZone:
_copyWithoutChangesInZone:
hasUnsavedChanges
addChangesFromObject:copyingBackingObjects:
allocWithZone:
initWithObjectForCopy:
setAdditionalFrozenProperties:
duplicateToEventStore:
loadedPropertyForKey:
null
_recursiveSnapshotCopyWithPropertyAccessor:propertyKeysToCopy:recurseOnWeakRelations:
snapshotCopyWithPropertyKeysToCopy:
_previousValueForKey:
_arrayIntersectingArray:withSet:
isWeakRelationObject:forKey:
meltedObjectInStore:
setCachedMeltedObject:forSingleValueKey:
setWithSet:
setCachedMeltedObjects:forMultiValueKey:
dictionaryWithDictionary:
_rollbackCommon
_reset
_resetCommon
refreshAndNotify:
_refreshCommon
setWithCapacity:
_markAsNewCommon
_markAsNotNewCommon
_markAsDeletedCommon
rebase
_markAsUndeletedCommon
_markAsSavedCommon
_markAsCommittedCommon
markAsCommitted
_performBlockOnOwnedCachedRelatedObjects:
cachedMeltedObjectForSingleValueKey:
cachedMeltedObjectsForMultiValueKey:
_hasChangesForKey:
_updatePersistentValueForKey:
_propertyValueForKey:
setValue:forKey:
updatePersistentObject
meltedAndCachedSingleRelationObjectForKey:
meltedAndCachedMultiRelationObjectsForKey:
_isPendingInsert
_insertObject:
insertPersistentObjectIfNeeded
updatePersistentObjectSkippingProperties:
_deleteObject:
addCoCommitObject:
propertiesUnavailableForPartialObjects
initWithObject:
existingMeltedObject
isCompletelyEqual:
isFrozen
isPartialObject
semanticIdentifier
canBeConvertedToFullObject
preFrozenRelationshipObjects
T@"NSDictionary",R,N
setBackingObject:
hasChanges
isDifferentFromCommitted
rebaseSkippingRelationProperties:
setEventStore:
shallowCopyWithoutChanges
duplicate
snapshotCopy
previouslySavedCopy
refresh
committedValueForKey:
markAsNotNew
markAsDeleted
markAsUndeleted
markAsSaved
updatePersistentValueForKeyIfNeeded:
deletePersistentObject
setChangeSet:
_cachedMeltedObjects
set_cachedMeltedObjects:
_cachedValues
set_cachedValues:
_validationContext
set_validationContext:
_persistentObject
_changeSet
__cachedMeltedObjects
_additionalFrozenProperties
__cachedValues
__validationContext
T@"EKPersistentObject",&,N,V_persistentObject
T@"CADGenerationStampedObjectID",R,N
T@"EKEventStore",&,N
T@"EKChangeSet",&,N,V_changeSet
T@"NSMutableDictionary",&,N,V__cachedMeltedObjects
T@"NSDictionary",&,N,V_additionalFrozenProperties
T@"NSMutableDictionary",&,N,V__cachedValues
T@"EKObjectValidationContext",&,N,V__validationContext
T@"EKPersistentObject",&,N
TB,R,N,GisNew
initialStartDate
setEventStartDate:
initialEndDate
setEventEndDate:
setEventTimeZone:
allDay
eventStartDate
dateInTimeZone:fromTimeZone:
eventEndDate
_setupForEKEvent:adjustDatesForAllDayEvents:
recurrenceRules
_prepareForEKRecurrence:forCalendarItem:
copyOccurrenceDatesBetweenStartDate:endDate:timeZone:limit:
addObjectsFromArray:
_copyOccurrenceDatesWithEKEvent:recurrenceRule:startDate:endDate:timeZone:exceptionDates:limit:adjustDatesForAllDayEvents:
removeObject:
occurrenceDate:matchesRecurrenceRule:forEvent:includeDetachedEventsInSeries:
date
dateByAddingTimeInterval:
exceptionDates
detachedItems
nextOccurrenceDateWithEKRecurrences:forCalendarItem:exceptionDates:initialDate:afterDate:
dateWithTimeIntervalSinceReferenceDate:
calendarDateWithDate:timeZone:
calendarDateByAddingSeconds:
_convertEKRecurrenceFrequencyToCalRecurrenceFrequency:
setWeekStart:
weekStart
setShouldPinMonthDays:
computeRecurrenceEndDate:
copyOccurrenceDatesWithEKEvent:startDate:endDate:timeZone:limit:
copyOccurrenceDatesWithEKEvent:recurrenceRule:startDate:endDate:timeZone:limit:
copyOccurrenceDatesWithEKEvent:recurrenceRule:startDate:endDate:timeZone:limit:adjustDatesForAllDayEvents:
copyOccurrenceDatesWithEKEvent:recurrenceRule:startDate:endDate:timeZone:exceptionDates:limit:
isOccurrenceDate:validForEvent:
nextOccurrenceDateWithEKRecurrences:forCalendarItem:initialDate:afterDate:
hasRecurrenceRules
timeIntervalSinceDate:
second
setSecond:
CalGregorianCalendarForTimeZone:
CalDateByComponentwiseAddingComponents:inCalendar:
timeIntervalSinceReferenceDate
duration
CalIsBeforeOrSameAsDate:
CalIsAfterOrSameAsDate:
isFloating
defaultTimeZone
externalFolderID
setExternalFolderID:
externalScheduleID
setExternalScheduleID:
T@"NSString",C,N
objectType
fetchChangesToObjectsOfTypes:inStore:resultHandler:
fetchChangesToObjectsOfTypes:inSource:resultHandler:
fetchChangesToObjectsOfTypes:inCalendar:resultHandler:
initWithChangeProperties:
createOwnerIDWithRowID:objectType:
boolValue
fetchAttendeeChangesInStore:resultHandler:
fetchAttendeeChangesInSource:resultHandler:
fetchAttendeeChangesInCalendar:resultHandler:
ownerID
T@"EKObjectID",R,N
attendeeRole
attendeeStatus
attendeeEmailAddress
_attendeeRole
_attendeeStatus
_ownerID
_attendeeEmailAddress
T@"EKObjectID",R,N,V_ownerID
TB,R,N,V_attendeeRole
TB,R,N,V_attendeeStatus
T@"NSString",R,N,V_attendeeEmailAddress
alternateUniverseClass
dealloc
_connectToServer
initializationOptions
_tryRegisterNewConnection
initWithMachServiceName:options:
setRemoteObjectInterface:
setExportedInterface:
setExportedObject:
setInterruptionHandler:
unitTesting
CADDatabaseSetInitializationOptions:reply:
CADDatabaseGetAccess:
CADDatabaseResetWithReply:
CADDatabaseGetUUID:
CADDatabaseRegisterForDetailedChangeTrackingInSource:reply:
CADDatabaseUnregisterForDetailedChangeTracking:
CADDatabaseFetchChangedObjectIDsSinceSequenceNumber:reply:
CADDatabaseFetchObjectChangesForEntityTypes:insideObject:reply:
CADDatabaseMarkChangedObjectIDsConsumedUpToSequenceNumber:reply:
CADDatabaseMarkIndividualChangesConsumed:reply:
CADDatabaseGetSequenceNumber:
CADDatabaseGetChangesSinceSequenceNumber:reply:
CADDatabaseGetChangedEntityIDsSinceTimestamp:reply:
CADDatabaseGetNextAssignableColorWithReply:
CADDatabaseImportEvents:fromICSData:intoCalendarsWithIDs:optionsMask:batchSize:reply:
CADDatabaseExportICSDataForCalendarItems:options:reply:
CADDatabaseExportICSDataForCalendar:options:reply:
CADDatabaseSetShowsDeclinedEvents:reply:
CADDatabaseRebuildOccurrenceCacheWithReply:
CADDatabaseInsert:delete:update:andCommit:
CADDatabaseRollbackWithReply:
CADDatabaseCanModifyCalendarDatabase:
CADDatabaseLastConfirmedSplashScreenVersion:
CADDatabaseMigrateSubscribedCalendar:toSource:reply:
CADObjectExists:reply:
CADObjectsExist:reply:
CADObject:getPropertiesWithNames:reply:
CADObject:getPropertyWithName:reply:
CADObject:getStringPropertyWithName:reply:
CADObject:getNumberPropertyWithName:reply:
CADObject:getDatePropertyWithName:reply:
CADObject:getDataPropertyWithName:reply:
CADObject:getSecurityScopedURLWrapperPropertyWithName:reply:
CADObject:getRelatedObjectWithRelationName:reply:
CADObject:getRelatedObjectsWithRelationName:reply:
CADObjectIsManaged:reply:
CADDatabaseGetSourcesWithFaultedProperties:reply:
CADDatabaseGetLocalSourceWithEnableIfNeeded:reply:
CADDatabaseGetLocalBirthdaySource:
CADSourceGetConstraints:reply:
CADSourceGetNotificationCollection:reply:
CADSourceRefresh:isUserRequested:reply:
CADCountCalendarItemsOfType:inSource:reply:
CADRemoveCalendarItemsOlderThanDate:ofType:inSource:reply:
CADSourceGetGrantedDelegatesList:reply:
CADSourceUpdateGrantedDelegate:action:sourceID:reply:
CADSourceGetManagedConfigurationAccountAccess:reply:
CADDatabaseGetCalendarsWithFaultedProperties:reply:
CADCalendar:hasEvents:
CADCalendar:hasReminders:
CADDatabaseGetCalendarItemWithUUID:reply:
CADDatabaseGetCalendarItemsWithUniqueIdentifier:inCalendar:reply:
CADDatabaseGetAlarmWithExternalID:reply:
CADDatabaseFetchCalendarItemsWithPredicate:entityType:fetchIdentifier:reply:
CADDatabaseCancelFetchRequestWithIdentifier:
CADDatabaseiTIPImport:intoCalendarID:reply:
CADDatabaseExportCalendarItemAsICS:withOptions:reply:
CADDatabaseGetContactIdentifierForCalendarItem:reply:
CADDatabaseAddContactWithIdentifier:forCalendarItem:withReply:
CADDatabaseRemoveContactIdentifier:forCalendarItem:withReply:
CADDatabaseCountEntitiesOfType:withContactIdentifier:withReply:
CADDatabaseFetchEntitiesOfType:withContactIdentifier:withReply:
CADDatabaseGetDefaultLocalCalendarWithReply:
CADDatabaseGetOrCreateSubscribedCalendarsSource:
CADDatabaseGetOrCreateBirthdayCalendar:
CADDatabaseGetDefaultCalendarForNewEventsInDelegateSource:withReply:
CADDatabaseSetDefaultCalendarForNewEvents:delegateSource:
CADDatabaseGetEventWithEventIdentifier:reply:
CADDatabaseGetEventWithUniqueID:reply:
CADDatabaseGetAllEventsWithUniqueID:reply:
CADDatabaseGetCountOfUnacknowledgedEvents:
CADDatabaseGetCountOfNotifiableEvents:
CADDatabaseSetShowsDeclinedEvents:
CADDatabaseGetBirthdayCalendarEnabledWithReply:
CADDatabaseSetBirthdayCalendarEnabled:withReply:
CADDatabaseGetSuggestedEventCalendarWithReply:
CADDatabaseGetNaturalLanguageSuggestedEventCalendarWithReply:
CADDatabaseCanModifySuggestedEventCalendar:
CADDatabaseInsertSuggestedEventCalendarWithReply:
CADDatabaseRemoveSuggestedEventCalendarWithReply:
CADDatabaseActOnSuggestedEvent:action:reply:
CADOccurrenceCacheAreOccurrencesBeingGenerated:
CADOccurrenceCacheGetOccurrenceCountsForCalendars:reply:
CADOccurrenceCacheGetOccurrenceForCalendars:onDay:reply:
CADOccurrenceCacheGetOccurrenceDateOfEventWithRowID:nearestDate:prefersForwardSearch:reply:
CADOccurrenceCacheDoEvents:haveOccurrencesAfterDate:reply:
CADOccurrenceCacheSearchLocationsWithTerm:inCalendars:responseToken:reply:
CADOccurrencesExistInRangeForEvent:startDate:endDate:mustStartInInterval:timezone:reply:
CADDatabaseShouldPermitOrganizerEmailFromJunkChecks:reply:
CADDatabaseShouldPermitOrganizerPhoneNumberFromJunkChecks:reply:
CADDatabaseGetAttachmentWithUUID:reply:
CADDatabaseGetSecurityScopedLocalURLWrapperForAttachment:reply:
CADDatabaseGetTTLLocationAuthorizationStatus:
CADDatabaseGetDefaultCalendarForNewRemindersWithReply:
CADDatabaseSetDefaultCalendarForNewReminders:
CADDatabaseGetCountOfRemindersWithPredicate:reply:
CADDatabaseGetProperties:forReminders:reply:
CADScheduledTaskCacheGetDaysAndTaskCounts:
CADDatabaseGetAlarmWithUUID:reply:
CADDatabaseGetAlarmOccurrencesInRangeFromStart:toEnd:inCalendars:reply:
CADDatabaseGetLocationBasedAlarmsWithReply:
CADDatabaseGetVehicleTriggerAlarmsWithReply:
CADDatabaseGetSharedCalendarInvitationsWithReply:
CADCalendarSetClearedFromNotificationCenter:error:
CADDatabaseGetResourceChanges:
CADDatabaseGetInviteReplyNotifications:
CADDatabaseGetEventNotificationItemsAfterDate:filteredByShowsNotificationsFlag:calculateEarliestExpirationDate:reply:
CADDatabaseGetNotificationCountForSourceWithExternalIdentifier:excludingDelegateSources:filteredByShowsNotificationsFlag:reply:
CADDatabaseGetInboxRepliedSectionItems:
CADEvent:setAlertedWithError:
CADCalendar:setAlertedWithError:
CADResourceChange:setAlertedWithError:
CADInviteReplyNotification:setAlertedWithError:
CADEventSetInvitationStatus:forEvents:error:
CADPushItemsToSpotlight:reply:
CADWaitForSpotlightUpdatesWithReply:
CADInternalForceStatCollection:
CADTestingSimulateDaemonCrash
CADTestingCloseDatabase:
CADMigrateDatabaseIfNeeded:
CADDatabaseGetDeletableCalendars:
CADDatabaseGetDeletableSources:
CADPurgeChangeTrackingReply:
CADPostSyntheticRouteHypothesis:forEventWithExternalURL:reply:
CADDatabaseGetNotificationCount:
CADDatabaseGetStorageUsage:
CADBackupDatabaseToFileNamed:inDirectory:includeAttachments:reply:
CADBackupToICBU:reply:
CADRestoreFromDatabaseBackupFileNamed:inDirectory:includeAttachments:reply:
CADRestoreFromICBU:reply:
initWithXPCConnection:protocol:synchronous:
setDelegate:
setInitializationOptions:
resume
setHasEverConnected:
_unregisterConnection
invalidate
_createConnectionAndOperationProxyIfNeeded
_finishAllRepliesOnServerDeath
daemonRestarted
setDatabaseRestoreGeneration:
delegate
databaseRestoreGenerationChangedExternally:
removeAllObjects
CADClientReceiveOccurrenceCacheSearchResults:forSearchToken:finished:
databaseRestoreGeneration
shouldValidateObjectIDs
xpcConnection
_daemonRestarted
databaseRestoreGenerationChangedByThisClient:
cancelRemoteOperation:
hasEverConnected
_connectionLock
_remoteOperationProxy
_syncRemoteOperationProxy
_replyHandlerLock
_cancellableOperations
_nextCancellationToken
_registeredForStartNote
_wasAbortedDueToExcessiveConnctions
_databaseRestoreGenerationLock
_databaseRestoreGeneration
_databaseRestoreGenerationHasEverChangedSignificantly
_hasEverConnected
_xpcConnection
_delegate
_initializationOptions
TB,N,V_hasEverConnected
T@"NSXPCConnection",R,&,N,V_xpcConnection
T@"<CADInterface>",R,&,N
T@"<EKDaemonConnectionDelegate>",W,V_delegate
T@"CADDatabaseInitializationOptions",&,N,V_initializationOptions
Ti,R,N
maxNumberOfOpenConnections
TQ,R,N
beginRequestWithExtensionContext:
requestType
completeRequestWithAvailableRoomTypes:completionHandler:
fetchAvailableRoomTypesWithCompletionHandler:
roomTypeIdentifier
completeRequestWithVirtualConference:completionHandler:
fetchVirtualConferenceForIdentifier:completionHandler:
URLForInvalidation
completeRequestWithInvalidationSuccess:error:completionHandler:
invalidateURL:withCompletionHandler:
completeRequestReturningItems:completionHandler:
isURLValid:withCompletion:
extendExpirationOfURL:toRequestedDate:withCompletion:
_filterObjectChangesNotConformingToOwnerIDProvidingProtocol:
arrayWithCapacity:
fetchChangesToOwnerIDProvidingObjectsOfTypes:inStore:resultHandler:
fetchChangesToOwnerIDProvidingObjectsOfTypes:inSource:resultHandler:
fetchChangesToOwnerIDProvidingObjectsOfTypes:inCalendar:resultHandler:
initWithDomain:
registerReflectionForPreferenceWithNotificationName:
getValueForPreference:expectedClass:
doubleValue
setValueForPreference:value:notificationName:
getBooleanPreference:defaultValue:
setBooleanPreference:value:notificationName:
getIntegerPreference:defaultValue:
setIntegerPreference:value:notificationName:
_setDeselectedCalendarIdentifiers:
_array:hasSameElementAsArray:
travelEngineThrottlePeriod
setTravelEngineThrottlePeriod:
refiringReminderAlarmsEnabled
setRefiringReminderAlarmsEnabled:
useShortReminderSnoozeInterval
setUseShortReminderSnoozeInterval:
useShortReminderRefireInterval
setUseShortReminderRefireInterval:
alwaysSetArrivedAndSettledForReminders
setAlwaysSetArrivedAndSettledForReminders:
setDeselectedCalendars:
deselectedCalendarIdentifiers
deselectedCalendarSyncHashes
_setDeselectedCalendarSyncHashes:
deselectedCalendarSyncIdentifiers
_setDeselectedCalendarSyncIdentifiers:
selectedCalendarIdentifiers
setSelectedCalendarIdentifiers:
showDeclinedEvents
setShowDeclinedEvents:
alertInviteeDeclines
setAlertInviteeDeclines:
conferenceRoomTypeIdentifiersByMRU
setConferenceRoomTypeIdentifiersByMRU:
_preferences
Td,N
TQ,N
TB,R
T@"NSArray",&,N
T@"NSDictionary",&,N
objectIDWithEntityType:rowID:
fetchCalendarItemChangesInStore:resultHandler:
fetchCalendarItemChangesInSource:resultHandler:
fetchCalendarItemChangesInCalendar:resultHandler:
calendarID
oldCalendarID
oldExternalID
startDateChanged
startTimezoneChanged
endDateChanged
endTimezoneChanged
notesChanged
allDayChanged
_titleChanged
_locationChanged
_startDateChanged
_startTimezoneChanged
_endDateChanged
_endTimezoneChanged
_notesChanged
_allDayChanged
_calendarID
_oldCalendarID
_externalID
_oldExternalID
T@"EKObjectID",R,N,V_calendarID
T@"EKObjectID",R,N,V_oldCalendarID
T@"NSString",R,N,V_externalID
T@"NSString",R,N,V_oldExternalID
TB,R,N,V_titleChanged
TB,R,N,V_locationChanged
TB,R,N,V_startDateChanged
TB,R,N,V_startTimezoneChanged
TB,R,N,V_endDateChanged
TB,R,N,V_endTimezoneChanged
TB,R,N,V_notesChanged
TB,R,N,V_allDayChanged
fetchNotificationChangesInStore:resultHandler:
fetchNotificationChangesInSource:resultHandler:
fetchNotificationChangesInCalendar:resultHandler:
reminderStore
completionBlockForFetchRequestToken:remove:
initWithReminderStore:
_reminderStore
T@"EKReminderStore",R,W,N,V_reminderStore
existingUpdatedObject:
T@"NSObject<OS_os_log>",R
initWithEventStore:token:
remStore
sources
calendars
_remStore
_sources
T@"REMStore",R,N,V_remStore
T@"EKEventStore",R,W,V_eventStore
T@"NSArray",R,V_sources
T@"NSArray",R,V_calendars
length
initWithTitle:identifier:
identifier
_title
_identifier
T@"NSString",R,C,N,V_title
T@"NSString",R,C,N,V_identifier
absoluteString
initWithTitle:URL:
_URL
T@"NSURL",R,C,N,V_URL
initWithTitle:URLDescriptors:conferenceDetails:
URLDescriptors
conferenceDetails
_URLDescriptors
_conferenceDetails
T@"NSArray",R,C,N,V_URLDescriptors
T@"NSString",R,C,N,V_conferenceDetails
base64EncodedStringWithOptions:
floatValue
semanticIdentifierForLocationWithTitle:address:mapKitHandle:contactLabel:latitude:longitude:radius:
setUniqueID:
uniqueID
isCurrentUser
isLocationRoom
_participantShouldBeUsedForAutocomplete:
initWithUniqueID:
setCalendarColor:
setAttendees:
location
setLocationWithoutPrediction:
preferredLocation
setPreferredLocation:
alarms
setAlarms:
attendees
setCalendar:
calendarColor
isSuggested
setSuggested:
suggestionInfo
setSuggestionInfo:
foundInBundleID
setFoundInBundleID:
structuredLocation
setStructuredLocation:
privacyLevel
setPrivacyLevel:
availability
setAvailability:
attachments
setAttachments:
isNaturalLanguageSuggested
setIsNaturalLanguageSuggested:
_calendarColor
_allDay
_suggested
_isNaturalLanguageSuggested
_startDate
_endDate
_timeZone
_location
_locationWithoutPrediction
_preferredLocation
_alarms
_attendees
_notes
_calendar
_suggestionInfo
_foundInBundleID
_structuredLocation
_privacyLevel
_availability
_attachments
_localStructuredData
_uniqueID
T@"NSString",&,N,V_uniqueID
T@"NSString",&,N,V_title
T@"NSDate",&,N,V_startDate
T@"NSDate",&,N,V_endDate
T@"NSTimeZone",&,N,V_timeZone
TB,N,GisAllDay,V_allDay
T@"NSString",&,N,V_location
T@"NSString",&,N,V_locationWithoutPrediction
T@"EKStructuredLocation",&,N,V_preferredLocation
T@"NSArray",&,N,V_alarms
T@"NSArray",&,N,V_attendees
T@"NSURL",&,N,V_URL
T@"NSString",&,N,V_notes
T@"EKCalendar",&,N,V_calendar
T^{CGColor=},N,V_calendarColor
suggested
TB,N,GisSuggested,V_suggested
T@"EKSuggestedEventInfo",&,N,V_suggestionInfo
T@"NSString",&,N,V_foundInBundleID
T@"EKStructuredLocation",&,N,V_structuredLocation
Tq,N,V_privacyLevel
Tq,N,V_availability
T@"NSArray",&,N,V_attachments
TB,N,V_isNaturalLanguageSuggested
T@"NSData",&,N,V_localStructuredData
weakObjectsPointerArray
setDelegates:
defaultCenter
objectsChangedNotification:
addObserver:selector:name:object:
delegates
addPointer:
hasUpdatePriority
sortedArrayUsingComparator:
isSyncStatusChangeNotification:
compact
userInfo
changedIdentifiersForNotification:
_orderedDelegates
dictionary
updatedObjectFor:changeNotification:
specificIdentifier
trackedObjectMap
trackedObjects
trackedObjectsDidRevert:
trackedObjectsDidUpdate:
relatedObjectsDidUpdate:
notifyObservers
_refreshable
registerDelegate:
_delegates
T@"NSPointerArray",&,V_delegates
initWithEventStore:opaqueKey:uniqueKey:
initWithEventStore:opaqueKey:uniqueKey:extractionGroupIdentifier:
setOpaqueKey:
setUniqueKey:
setChangedFields:
setChangesAcknowledged:
setExtractionGroupIdentifier:
opaqueKey
uniqueKey
extractionGroupIdentifier
changedFields
changesAcknowledged
timestamp
setTimestamp:
setTimestampAsDate:
timestampAsDate
initWithOpaqueKey:uniqueKey:
initWithOpaqueKey:uniqueKey:extractionGroupIdentifier:
relatedEvent
_sharedParticipantForSortingWithIdentity:participant:contactPredicate:
phoneNumberWithStringValue:
predicateForContactsMatchingPhoneNumber:
setCountLimit:
addObserverForName:object:queue:usingBlock:
archivedDataWithRootObject:requiringSecureCoding:error:
descriptorForRequiredKeysForStyle:
defaultProvider
unifiedContactsMatchingPredicate:keysToFetch:
isPhoneNumber
componentsFromString:
nickname
setNickname:
familyName
setFamilyName:
givenName
setGivenName:
namePrefix
setNamePrefix:
nameSuffix
setNameSuffix:
middleName
setMiddleName:
stringFromContact:style:
setCachedDisplayName:
setIsEmail:
setIsPhone:
setParticipant:
setIdentity:
participantIsOptional:
participant
compareByEmailThenByContactName:
isEmail
compare:options:
compareByContactNames:
sharedDefaults
sortOrder
participantForSortingWithEKParticipant:
participantForSortingWithIdentity:
identity
cachedDisplayName
isPhone
_isEmail
_isPhone
_participant
_identity
_firstName
_lastName
_cachedDisplayName
T@"EKParticipant",W,N,V_participant
T@"<EKIdentityProtocol>",W,N,V_identity
T@"NSString",C,N,V_firstName
T@"NSString",C,N,V_lastName
T@"NSString",C,N,V_cachedDisplayName
TB,N,V_isEmail
TB,N,V_isPhone
fetchReminderChangesInStore:resultHandler:
fetchReminderChangesInSource:resultHandler:
fetchReminderChangesInCalendar:resultHandler:
fetchShareeChangesInStore:resultHandler:
fetchShareeChangesInSource:resultHandler:
fetchShareeChangesInCalendar:resultHandler:
crRecentContactsLibraryClass
recentEventForAddress:displayName:kind:date:weight:metadata:options:
recentForContactWithAddress:name:kind:
defaultInstance
crRecentsDomainCalendarString
recordContactEvents:recentsDomain:sendingAddress:completion:
crAddressKindEmailString
recordRecentWithAddress:name:kind:
crAddressKindPhoneNumberString
recordRecentForContactWithName:emailAddress:phoneNumber:
searchWithString:completionHandler:
predicateForNaturalLanguageSuggestedEventsWithSearchString:
eventsMatchingPredicate:
firstObject
setIdentifier:
setNaturalLanguageSuggestedEvent:
allowsContentModifications
isNaturalLanguageSuggestedEventCalendar
hasAttendees
_eventKitQueue
firstNaturalLanguageResultWithSearchString:
_queue
insertObject:atIndex:
whitespaceCharacterSet
stringByTrimmingCharactersInSet:
lowercaseString
eventWithUniqueId:
_shouldReturnResultForEvent:
_updateResult:withEvent:
searchWithString:clientBundleID:completionHandler:
initWithEventStore:searchString:maximumResultCount:ignoreScheduledEvents:initialEvent:completionHandler:
_maximumResultCount
_ignoreScheduledEvents
_initialEvent
_pendingSearch
searchWithEventStore:searchString:maximumResultCount:ignoreScheduledEvents:initialEvent:completionHandler:
maximumResultCount
setMaximumResultCount:
TQ,V_maximumResultCount
URLString
setURLString:
fileNameRaw
setFileNameRaw:
fileFormat
setFileFormat:
isBinary
setIsBinary:
localRelativePath
setLocalRelativePath:
fileSize
setFileSize:
XPropertiesData
setXPropertiesData:
primitiveNumberValueForKey:
primitiveSetNumberValue:forKey:
unsignedLongValue
primitiveSecurityScopedURLWrapperValueForKey:
primitiveSetSecurityScopedURLWrapperValue:forKey:
securityScopedURLWrapperForPendingFileCopy
setSecurityScopedURLWrapperForPendingFileCopy:
setFirstObject:
setSecondObject:
secondObject
initWithFirstObject:secondObject:
setResult:
_populateSingleValueKeysForDiff:
_populateImmutableKeysForDiff:
_populateSingleValueRelationshipKeysForDiff:
_populateMultiValueRelationshipKeysForDiff:
differentSingleValueKeys
differentRelationshipSingleValueKeys
differentRelationshipMultiValueKeys
differentImmutableKeys
_populateIdentityKeysForDiff:
differentIdentityKeys
_nonNilObject
_keysToIgnoreForComputingDiff
indexesOfObjectsPassingTest:
objectsAtIndexes:
setDifferentSingleValueKeys:
knownDerivedAndSingleValueRelationshipKeys
setDifferentRelationshipSingleValueKeys:
setRelationshipSingleValueModifies:
_compareMultiValueRelationshipKey:forObject:againstObject:propertiesToIgnore:
setDifferentRelationshipMultiValueKeys:
setByAddingObjectsFromArray:
diffBetweenObject:andObject:
setRelationshipMultiValueAdds:
setRelationshipMultiValueRemoves:
setRelationshipMultiValueModifies:
setDifferentIdentityKeys:
setDifferentImmutableKeys:
relationshipMultiValueModifies
allValues
unionSet:
arrayWithArray:
summaryKeyForChangedProperty:subProperty:
relationshipMultiValueAdds
summaryKeyForMultiValueAddOfPropertyKey:
_addObject:forKey:toDiff:
relationshipMultiValueRemoves
summaryKeyForMultiValueRemoveOfPropertyKey:
_multiValueModifiedObjectsForKey:
summaryKeyForMultiValueModifyOfPropertyKey:
_summaryKeyForMultiValueChange:ofPropertyKey:
_summarizeDiffsBetweenFirstObject:secondObject:mutableString:depth:
appendString:
_basicSummaryWithDepth:
_addSummaryWithDepth:toMutableString:forSingleValueKeys:firstObject:secondObject:
_addSummaryWithDepth:toMutableString:forRelationshipSingleValueKeys:firstObject:secondObject:
_addSummaryWithDepth:toMutableString:forRelationshipMultiValueKeys:firstObject:secondObject:
_addChangeStarIfChangedKey:onObject:
_addPaddedHeaderToMutableString:forKey:withDepth:
_addSummaryWithDepth:toMutableString:indentFirstLine:
_indentStringAtDepth:
stringByPaddingToLength:withString:startingAtIndex:
relationshipSingleValueModifies
changeSetForDiff
addChanges:
initWithSingleValueChanges:multiValueAdditions:multiValueRemovals:
differentKeys
summaryDictionary
summaryString
_result
_firstObject
_secondObject
_differentIdentityKeys
_differentImmutableKeys
_differentSingleValueKeys
_differentRelationshipSingleValueKeys
_differentRelationshipMultiValueKeys
_relationshipMultiValueAdds
_relationshipMultiValueRemoves
_relationshipMultiValueModifies
_relationshipSingleValueModifies
T@"EKObject",&,N,V_firstObject
T@"EKObject",&,N,V_secondObject
Ti,N,V_result
T@"NSSet",&,N,V_differentIdentityKeys
T@"NSSet",&,N,V_differentImmutableKeys
T@"NSSet",&,N,V_differentSingleValueKeys
T@"NSSet",&,N,V_differentRelationshipSingleValueKeys
T@"NSSet",&,N,V_differentRelationshipMultiValueKeys
T@"NSDictionary",&,N,V_relationshipMultiValueAdds
T@"NSDictionary",&,N,V_relationshipMultiValueRemoves
T@"NSDictionary",&,N,V_relationshipMultiValueModifies
T@"NSDictionary",&,N,V_relationshipSingleValueModifies
knownSummaryKeys
arrayByAddingObjectsFromArray:
_summaryWithDepth:
Tq,R,N,V_type
_eventStoreChanged:
_areAnySourcesCurrentlySyncing
_areAnyCalendarsCurrentlySyncing
_syncDidStart
_syncDidEnd
_cancelSyncStartTimeout
_allSourcesRefreshed
_allCalendarsRefreshed
_syncCompleted
_beginSyncStartTimeout
sourceFinishedRefreshing:
isSyncing
calendarFinishedRefreshing:
_beginMaximumTimeElapsedTimeout
resetTimersAndWarnings
refreshEverythingIfNecessary:
calendarsForEntityType:
isSubscribed
isSubscribedHolidayCalendar
filterUsingPredicate:
_cancelMaximumTimeElapsedTimeout
_syncStartTimeoutExpired
performSelector:withObject:afterDelay:
cancelPreviousPerformRequestsWithTarget:selector:object:
_refreshControlMaximumVisibleTimeElapsed
timeIntervalSinceNow
accountRefreshFinished:
laterDate:
initWithEventStore:
allAccountsOffline
refreshing
_currentlySyncing
_refreshStartDate
_refreshingSources
_refreshingCalendars
_refreshing
T@"<EKAccountRefresherDelegate>",W,N,V_delegate
TB,R,N,V_refreshing
lastModifiedDate
startTimeZone
endTimeZone
calendarItemIdentifier
originalItem
fullDisplayStringWithTitle:address:
locationWithTitle:
updateMeltedAndCachedSingleRelationObject:forKey:frozenClass:
setStructuredLocationWithoutPrediction:
structuredLocationWithoutPrediction
clientLocation
actionString
setActionString:
appLinkData
_initWithUserActivityData:
_createUserActivityDataWithOptions:completionHandler:
setAppLinkData:
setStartTimeZone:
setEndTimeZone:
startTimeZoneName
timeZoneFromTimeZoneName:withFloatingTimeZone:
timeZoneNameFromTimeZone:
setStartTimeZoneName:
endTimeZoneName
setEndTimeZoneName:
exportToICSWithOptions:
isMutableSuggestionsCalendar
isMutableNaturalLanguageSuggestionsCalendar
isSelfOrganized
isOrganizedBySharedCalendarOwner
_validateDeletable:
_validateAccessConsent:
_validateDeletableInCalendarWithError:
_validateDeletableBySharedCalendarShareeWithError:
accessGrantedForEntityType:
errorWithEKErrorCode:
isSuggestedEventCalendar
allowsScheduling
_isInSharedToMeCalendarWithNoSharingScheduling
organizer
isExternallyOrganizedInvitation
selfParticipantStatus
needsResponseForParticipantStatus:
isEditable
externalData
metadataWithData:
x_props
isSubclassOfClass:
value
adjustDateFromUTC:allDay:timeZone:
dateInTimeZone:fromFloatingDateInGMT:
orderedSetWithCapacity:
isSnoozed
snoozedAlarms
_excludeAlarmDueToConnectionTrigger:
setAllAlarmsSet:
sortedArrayUsingSelector:
sortedAlarms
proximity
maxPublicProximity
updateMeltedAndCachedMultiRelationObjects:forKey:
allAlarmsSet
addCachedMeltedObject:forMultiValueKey:
removeCachedMeltedObject:forMultiValueKey:
calendarItemOwner
removeAlarm:
originalAlarm
setAcknowledgedDate:
setProximity:
findOriginalAlarmStartingWith:
setOriginalAlarm:
addAlarm:
_isOnlyChangedKey:
acknowledgedDate
singleRecurrenceRule
lastObject
setRecurrenceRules:
initWithArray:
setRecurrenceRulesSet:
recurrenceRulesSet
attendeesRaw
filterAttendeesPendingDeletion:
setAttendeesRaw:
selfAttendee
_setSelfAttendee:
_removeAttendee:
addAttendee:
selfParticipantStatusRaw
initWithContacts:
matchingParticipantsFromItem:
sharedItemCreatedByFirstName
sharedItemCreatedByLastName
sharedItemCreatedByAddressString
setSharedItemCreatedByAddressString:
sharedItemCreatedTimeZoneName
setSharedItemCreatedTimeZoneName:
sharedItemModifiedByFirstName
sharedItemModifiedByLastName
sharedItemModifiedByAddressString
setSharedItemModifiedByAddressString:
sharedItemModifiedTimeZoneName
setSharedItemModifiedTimeZoneName:
attachmentsSet
setAttachmentsSet:
contactIdentifierForCalendarItem:
contactIdentifiers
addContactIdentifier:forCalendarItem:
removeContactIdentifier:forCalendarItem:
canMoveToCalendar:fromCalendar:error:
validate:
_areOnlyChangedKeys:
canMoveOrCopyToCalendar:fromCalendar:error:
isStructured
travelStartLocation
_moveToCalendar:forSavingItem:
_shouldDeleteAndAddForMoveFromCalendar:toCalendar:
_recursivelyPerformBlockOnSelfAndDetachedItems:forSavingItem:
emptyMeltedCacheForKey:
setOriginalItem:
_generateNewUniqueID
_adjustAfterRebaseForMovingFromOldSource:toNewSource:savingItem:
_setCalendarRecursively:forSavingItem:
_addObjectToPendingCommits:
_resetFieldsAfterMovingToNewCalendar
setExternalData:
_deletePersistentItemAndDetachedItems:forSavingItem:
ekExceptionDates
initWithDate:
setEkExceptionDates:
isEqualToDate:
setDetachedItems:
setAppLink:
_determineMatchingApplicationBundleIdentifierWithOptions:
applicationProxyForIdentifier:
localizedName
contentAttributeSet
textSelected
activityType
webpageURL
host
contentDescription
isOnlyAlarmAcknowledgedPropertyDirty
modifiedProperties
setModifiedProperties:
_updateHasRecurrenceRulesIfNeeded
_updateHasAttendeesIfNeeded
_updateHasNotesIfNeeded
canonicalizedEqualityTestValue1:value2:key:object1:object2:
knownRelationshipSingleValueKeysForValidation
knownRelationshipMultiValueKeysForValidation
knownRelationshipWeakKeys
knownDerivedRelationshipKeys
startDateRaw
setStartDateRaw:
setCalendarItemIdentifier:
calendarItemExternalIdentifier
uniqueId
setUniqueId:
localUID
displayNotes
setDisplayNotes:
hasNotes
setClientLocation:
setTravelStartLocation:
setLastModifiedDate:
creationDate
setCreationDate:
calendarScale
setCalendarScale:
priority
setPriority:
action
setAction:
appLink
defaultAlarms
defaultAlarmWasDeleted
setDefaultAlarmWasDeleted:
sequenceNumber
exportToICS
requiresDetach
allowsSpansOtherThanThisEvent
isDeletable
isSelfOrganizedInvitation
needsResponse
allowsCalendarModifications
allowsRecurrenceModifications
allowsAlarmModifications
allowsAttendeesModifications
actionsState
adjustDateFromUTC:
hasAlarms
indexForAlarm:
snoozeAlarm:withTimeIntervalFromNow:
snoozeAlarm:withLocation:proximity:
isAlarmAcknowledgedPropertyDirty
removeAcknowledgedSnoozedAlarms
removeAllSnoozedAlarms
recurrenceRuleString
setSingleRecurrenceRule:
_hadRecurrenceRules
addRecurrenceRule:
removeRecurrenceRule:
startDateForRecurrence
_hadAttendees
removeAttendee:
setSelfAttendee:
participantMatchingContact:
attendeeMatchingEmailAddress:
setOrganizer:
sharedItemCreatedByDisplayName
setSharedItemCreatedByDisplayName:
sharedItemCreatedByAddress
setSharedItemCreatedByAddress:
setSharedItemCreatedByFirstName:
setSharedItemCreatedByLastName:
sharedItemCreatedDate
setSharedItemCreatedDate:
sharedItemCreatedTimeZone
setSharedItemCreatedTimeZone:
sharedItemModifiedByDisplayName
setSharedItemModifiedByDisplayName:
sharedItemModifiedByAddress
setSharedItemModifiedByAddress:
setSharedItemModifiedByFirstName:
setSharedItemModifiedByLastName:
sharedItemModifiedDate
setSharedItemModifiedDate:
sharedItemModifiedTimeZone
setSharedItemModifiedTimeZone:
addAttachment:
removeAttachment:
hasAttachment
setContactIdentifiers:
canMoveToCalendar:error:
moveToCalendar:
_addDetachedItem:
_removeDetachedItem:
_deleteSelfAndDetached
setExceptionDates:
_addExceptionDate:
_removeExceptionDate:
updateWithAppLink:usedSelectedText:
_updateModifiedAlarmByAcknowledging
_willSave
T@"NSString",&,N
T@"EKCalendar",&,N
T@"NSURL",C,N
T@"NSTimeZone",C,N
T@"NSArray",C,N
simulateLegacyBehaviors
perform:whileSimulatingLegacyBehaviors:
setSimulateLegacyBehaviors:
performWhileSimulatingLegacyBehaviors:
setWorkQueue:
setCallbackQueue:
_addPersistentNotificationObservers
_uninstallTimer
_removePersistentNotificationObservers
_removeTransientEventStoreChangeObserver
workQueue
internalTimeout
setInternalTimeout:
_resetIdleTimer
setInternalStore:
setInternalCreationBlock:
internalCreationBlock
setInternalChangedBlock:
internalChangedBlock
internalPurgingAllowed
setInternalPurgingAllowed:
internalStore
_eventStoreChangedNotification:
setIgnoreLowLevelDatabaseChangedNotifications:
timer
setTimer:
ignoreLowLevelDatabaseChangedNotifications
_fireChangedBlock
removeObserver:name:object:
callbackQueue
setTimeout:
timeout
setCreationBlock:
creationBlock
setChangedBlock:
changedBlock
setPurgingAllowed:
purgingAllowed
acquireCachedEventStoreOrCreate:
_databaseChangedExternally
_ignoreLowLevelDatabaseChangedNotifications
_internalPurgingAllowed
_workQueue
_timer
_internalTimeout
_internalCreationBlock
_internalChangedBlock
_internalStore
T@"NSObject<OS_dispatch_queue>",&,N,V_workQueue
T@"NSObject<OS_dispatch_queue>",&,N,V_callbackQueue
T@"NSObject<OS_dispatch_source>",&,N,V_timer
Td,N,V_internalTimeout
T@?,C,N,V_internalCreationBlock
T@?,C,N,V_internalChangedBlock
TB,N,V_ignoreLowLevelDatabaseChangedNotifications
TB,N,V_internalPurgingAllowed
T@"EKEventStore",&,N,V_internalStore
T@?,C,N
setWithObjects:
setInversePropertyIsApplicable:
latitude
setLatitude:
longitude
setLongitude:
contactLabel
setContactLabel:
mapKitHandle
setMapKitHandle:
radius
setRadius:
routing
setRouting:
referenceFrame
setReferenceFrame:
derivedFrom
setDerivedFrom:
setCalendarItemOwner:
setAlarmOwner:
alarmOwner
_cacheContactData
contacts
isKeyAvailable:
emailAddresses
_nameComponentsForContact:reverse:
organizationName
setContactEmailAddresses:
setContactNameComponents:
setContactCompanyNames:
_nameComponentsWithGivenName:familyName:
_allParticipantsOnItem:
anyContactMatchesAnyParticipant:
anyContactMatchesParticipant:
matchingParticipantsFromParticipants:
contactEmailAddresses
nameComponents
contactNameComponents
contactCompanyNames
anyContactMatchesAnyParticipantFromItem:
setContacts:
_contacts
_contactEmailAddresses
_contactNameComponents
_contactCompanyNames
T@"NSArray",&,N,V_contacts
T@"NSSet",&,N,V_contactEmailAddresses
T@"NSSet",&,N,V_contactNameComponents
T@"NSSet",&,N,V_contactCompanyNames
initWithExternalID:externalIDTag:inSource:
_source
_externalIDTag
T@"EKSource",R,N,V_source
T@"NSString",R,N,V_externalIDTag
sharedToken
setJunkStatus:
saveEvent:span:commit:error:
junkStatus
junkStatusForInvitation:
cachedJunkStatus
componentsSeparatedByString:
_locationStringForLocations:
componentsJoinedByString:
clearDetectedConferenceURL
clearParsedConference
deserializeConference:
conferenceURL
conferenceURLDetected
_detectConferenceURL
_prioritizedConferencesSources
conferenceURLFromSources:
setIsJunk:shouldSave:
setCachedJunkStatus:
_couldBeJunkCommon
locationsWithoutPrediction
setNotesCommon:
setURLCommon:
parsedConference
conferenceURLForDisplayCached
conferenceURLForDisplay
reputationStore
junkStatusForInvitation:withReputationStore:
sendersEmail
shouldPermitOrganizerEmailFromJunkChecks:inReputationStore:
sendersPhoneNumber
shouldPermitOrganizerPhoneNumberFromJunkChecks:inReputationStore:
shouldPermitOrganizerEmailFromJunkChecks:
shouldPermitOrganizerPhoneNumberFromJunkChecks:
calendarRowIDs
valueForKeyPath:
sourceID
isMasterOrDetachedOccurrence
filters
ekPredicateFilterMatches:
property
isInteger
isString
stringValue
isDate
dateValue
comparison
operation
setStateChanged:
setParticipantAddressesToParticipants:
setInternalTimesWhenAllAttendeesCanAttend:
setInternalTimesWhenSomeAttendeesCanAttend:
setInternalOriginalConflictedParticipants:
setInternalProposedTimes:
setLeftoverSpans:
setAvailabilityRequestsQueue:
setProcessingQueue:
availabilityRequestsQueue
cancelAllOperations
processingQueue
internalOriginalStartDate
internalOriginalEndDate
internalOriginalConflictedParticipants
internalTimesWhenAllAttendeesCanAttend
internalTimesWhenSomeAttendeesCanAttend
internalProposedTimes
internalSearchingForMoreTimesWhenAllAttendeesCanAttend
internalSearchingForMoreTimesWhenSomeAttendeesCanAttend
setInternalSearchingForMoreTimesWhenAllAttendeesCanAttend:
_resetSearchFallbackNumbers
_attemptSearch
setInternalSearchingForMoreTimesWhenSomeAttendeesCanAttend:
setAvailabilityRequestInProgress:
participantAddressesToParticipants
leftoverSpans
setNextAvailabilityRangeStartDate:
setInternalOriginalStartDate:
setInternalOriginalEndDate:
setOriginalRangeStartDate:
setIgnoredEventID:
setOrganizerAddress:
_sendStateChange:
isEqualToTimeZone:
dateByAddingHours:inCalendar:
dateRoundedToNearestFifteenMinutesInCalendar:
originalRangeStartDate
isStartDateDirty
isEndDateDirty
isEqualToParticipant:
proposedStartDateForEvent:
internalProposedStarts
_selfOrganizerForNewlyScheduledEventWithAddress:
_transitionToConflictFoundStateAndSearch
noConflictRequired
addEntriesFromDictionary:
ignoredEventID
initWithSource:startDate:endDate:ignoredEventID:addresses:resultsBlock:
isCancelled
error
_haltSearchWithError:
spansIncludeBusyPeriod:
_participantforParticipantAddress:
setCompletionBlock:
addOperation:
initWithStartDate:endDate:conflictedParticipants:
remainingSearchAttempts
availabilityRequestInProgress
nextAvailabilityRangeStartDate
availabilitySearchDurationMultiplier
setAvailabilitySearchDurationMultiplier:
_processResults:betweenStartDate:endDate:
setRemainingSearchAttempts:
stateChanged
stateAsString:
_generateTimeSpansForResults:betweenStartDate:endDate:
_spliceLeftTimeSpans:andNewTimeSpans:
_mergeAdjacentSpansWithSameConflictedParticipants:
_generateOpenFreeTimesFromTimeSpans:
_generateNonOptimalTimesFromTimeSpans:
_findLeftoverSpans:usingFreeTimes:andNonOptimalTimes:
setArray:
_binarySearchForIndexOfTimeSpanInArray:containingDate:
_invalidBinarySearchIndex
subarrayWithRange:
verifyIntegrityOfAvailabilityTimeSearchTimelines
_validateSpans:
conflictedParticipants
_addressesForParticipants:
isEqualToSet:
_span:hasSameConflictedParticipantsAsSpan:
_allButLastItemInArray:
setConflictedParticipants:
_allButFirstItemInArray:
CalIsBeforeDate:
_insertUniqueParticipants:intoExistingParticipantsArray:
_filterOutUnreasonableTimeSlots:
_rankNonOptimalTimeSpans:
_findHighestRankedNonOptimalTimeSpans:
removeObjectAtIndex:
sortedArrayWithOptions:usingComparator:
showTypeAsBusy:
replaceObjectsInRange:withObjectsFromArray:
myFullName
localizedStringForKey:value:table:
initWithString:
organizerWithName:emailAddress:phoneNumber:address:isCurrentUser:
initWithStateChangedCallback:
originalStartDate
originalEndDate
originalConflictedParticipants
timesWhenAllAttendeesCanAttend
timesWhenSomeAttendeesCanAttend
proposedTimes
searchingForMoreTimesWhenAllAttendeesCanAttend
searchingForMoreTimesWhenSomeAttendeesCanAttend
searchForMoreTimesWhenAllAttendeesCanAttend
searchForMoreTimesWhenSomeAttendeesCanAttend
resetWithEvent:organizerAddressForNewlyScheduledEvent:
setNoConflictRequired:
setInternalProposedStarts:
organizerAddress
_noConflictRequired
_availabilityRequestInProgress
_internalSearchingForMoreTimesWhenAllAttendeesCanAttend
_internalSearchingForMoreTimesWhenSomeAttendeesCanAttend
_internalOriginalStartDate
_internalOriginalEndDate
_originalRangeStartDate
_internalProposedStarts
_ignoredEventID
_availabilityRequestsQueue
_participantAddressesToParticipants
_organizerAddress
_nextAvailabilityRangeStartDate
_availabilitySearchDurationMultiplier
_remainingSearchAttempts
_leftoverSpans
_internalTimesWhenAllAttendeesCanAttend
_internalTimesWhenSomeAttendeesCanAttend
_internalProposedTimes
_internalOriginalConflictedParticipants
_stateChanged
T@"NSObject<OS_dispatch_queue>",&,N,V_processingQueue
T@"NSDate",&,N,V_internalOriginalStartDate
T@"NSDate",&,N,V_internalOriginalEndDate
T@"NSDate",&,N,V_originalRangeStartDate
T@"NSMutableArray",&,N,V_internalProposedStarts
T@"EKSource",&,N,V_source
T@"NSString",&,N,V_ignoredEventID
T@"NSOperationQueue",&,N,V_availabilityRequestsQueue
T@"NSMutableDictionary",&,N,V_participantAddressesToParticipants
T@"NSString",&,N,V_organizerAddress
TB,N,V_availabilityRequestInProgress
T@"NSDate",&,N,V_nextAvailabilityRangeStartDate
Td,N,V_availabilitySearchDurationMultiplier
TQ,N,V_remainingSearchAttempts
T@"NSMutableArray",&,N,V_leftoverSpans
T@"NSMutableArray",&,N,V_internalTimesWhenAllAttendeesCanAttend
T@"NSMutableArray",&,N,V_internalTimesWhenSomeAttendeesCanAttend
T@"NSMutableArray",&,N,V_internalProposedTimes
T@"NSMutableArray",&,N,V_internalOriginalConflictedParticipants
TB,N,V_internalSearchingForMoreTimesWhenAllAttendeesCanAttend
TB,N,V_internalSearchingForMoreTimesWhenSomeAttendeesCanAttend
T@?,C,N,V_stateChanged
TB,N,V_noConflictRequired
domain
code
cal_serializableError
_cal_serializedEntryForKey:value:outKey:outValue:
cal_serializableUserInfo
cal_isCertificateError
cal_trustInfoCopy
_setInviteReplyCalendar:
shareeFirstName
shareeLastName
shareeURLString
setShareeURLString:
summary
cal_emailAddressString
cal_phoneNumberString
unloadPropertyForKey:
initWithInviteReplyCalendar:
inReplyTo
setInReplyTo:
setShareeDisplayName:
setShareeFirstName:
setShareeLastName:
setShareeURL:
setShareeStatus:
setSummary:
clearAlertedStatus
T@"EKCalendar",R,N
T@"NSDate",C,N
fetchAttachmentChangesInStore:resultHandler:
fetchAttachmentChangesInSource:resultHandler:
fetchAttachmentChangesInCalendar:resultHandler:
participantWithName:emailAddress:phoneNumber:url:
initWithName:emailAddress:phoneNumber:url:
setDisplayNameRaw:
stringAddingMailto
stringAddingTel
cal_hasSchemeMailto
cal_resourceSpecifierNoLeadingSlashes
cal_hasSchemeTel
displayNameRaw
doesParticipantURLString:email:andPhoneNumber:matchParticipantURLString:email:andPhoneNumber:
unifiedContactsMatchingPredicate:keysToFetch:error:
publicABPersonFromContact:publicAddressBook:
isDetached
proposedStartDate
adjustedPersistedDateForDate:withAdjustmentMode:
setProposedStartDate:
setProposedStartDateStatus:
invitedBy
CalKeys
semanticIdentifierForParticipant:
participantWithName:url:
existingContact
newContact
nameUsingAddressAsBackup
comment
setComment:
ABRecordWithAddressBook:
setProposedStartDate:forEvent:
hasProposedStartDate
proposedStartDateStatus
inviterNameString
setInviterNameString
scheduleStatus
_owner
T@"EKCalendarItem",R,N,V_owner
T@"NSURL",R,N
currentUser
TB,R,N,GisCurrentUser
T@"NSPredicate",R,D,N
calendarWithID:
calendarFromEventStore:
isSharedCalendarInvitation
_sharingInvitationResponse
_allowedEntityTypes
TQ,N,V_sharingInvitationResponse
TQ,N,V_allowedEntityTypes
spanDate
spanType
valueForSpanType:
dateType
initWithDate:dateType:spanType:
setSpanDate:
setDateType:
setSpanType:
_spanDate
_dateType
_spanType
T@"NSDate",&,N,V_spanDate
Tq,V_dateType
Tq,V_spanType
setKey:withArray:
_rangeCompletelyCoversPeriodBetweenStartDate:endDate:
span
availabilityFreshnessWindow
_clampDateRangeForSpans:startDate:endDate:
_currentMaxSpanTypeIn:
isBeforeDate:
isAfterDate:
initWithSpan:
cachedSpansFromSpans:
_eliminateOverlapsInResults:
initWithStartDate:endDate:
containsRange:
deDupSpans:
intersectsRange:
replaceObjectAtIndex:withObject:
sanitizeAndInsertResults:inRange:
spans
_cachedSpans
wrappedPredicate
evaluateWithObject:
mustStartInInterval
timeZoneWithAbbreviation:
occurrencesExistInRangeForEvent:startDate:endDate:mustStartInInterval:timezone:
statusRaw
setStatusRaw:
pendingStatusRaw
setPendingStatusRaw:
lastModifiedParticipationStatus
setLastModifiedParticipationStatus:
originAppName
recordFromSearchResult:
principalPath
setPrincipalPath:
isDefaultAlarm
absoluteDate
relativeOffset
semanticIdentifierForAlarmIsDefault:absoluteDate:relativeOffset:emailAddress:url:
semanticIdentifierForAlarm:
_stringForAlarmProximity:
setType:
stringRepresentation
needsAlert
isInvitation
acknowledgeWithEventStore:error:
isProposedNewTime
proposedStartDateIsInFutureForAttendee:
dotColor
hiddenFromNotificationCenter
event
setEvent:
_dotColor
_hiddenFromNotificationCenter
_alerted
_couldBeJunk
_event
Tq,N,V_type
T@"NSString",&,N,V_name
T@"NSString",&,N,V_firstName
T@"NSString",&,N,V_lastName
T@"NSString",&,N,V_emailAddress
T@"NSString",&,N,V_phoneNumber
T@"EKObjectID",&,N,V_objectID
T^{CGColor=},N,V_dotColor
TB,N,V_hiddenFromNotificationCenter
TB,N,V_alerted
TB,N,V_couldBeJunk
T@"EKEvent",&,N,V_event
isExecuting
isFinished
main
willChangeValueForKey:
didChangeValueForKey:
_recordTypes
_finishWithError:
terms
resultLimit
_processResults:
setNumberOfMatchesExceededLimit:
performCalendarDirectorySearchWithAccountID:terms:recordTypes:resultLimit:resultsBlock:completionBlock:
cancelCalendarDirectorySearchWithID:
findGroups
findLocations
findResources
findUsers
_processResults:class:
setError:
isSupported
initWithSource:query:resultsBlock:
isConcurrent
numberOfMatchesExceededLimit
_isFinished
_isExecuting
_query
_resultsBlock
_searchID
_numberOfMatchesExceededLimit
_error
TB,N,V_numberOfMatchesExceededLimit
T@"NSError",&,N,V_error
errorWithEKErrorCode:description:
save:
initWithObjectID:date:
setDate:
Td,N,V_date
setTerms:
setFindGroups:
setFindLocations:
setFindResources:
setFindUsers:
setResultLimit:
_findGroups
_findLocations
_findResources
_findUsers
_terms
_resultLimit
T@"NSSet",&,N,V_terms
TB,N,V_findGroups
TB,N,V_findLocations
TB,N,V_findResources
TB,N,V_findUsers
TQ,N,V_resultLimit
status
attendeeReplyChanged
videoConferenceChanged
externalURL
setRecurrenceRule:
participationStatusModifiedDate
setParticipationStatusModifiedDate:
participationStatus
setParticipationStatus:
setVideoConferenceChanged:
setAttendeeReplyChanged:
initWithParticipant:forEvent:
proposedStartDateDeclined
statusChanged
proposedStartDateChanged
commentChanged
setIsLocationDecline:
publicObjectWithObjectID:
recurrenceRule
rsvpRequested
expanded
expandedProposedTimeAttendee
CalSimulatedDateForNow
eventFromEventStore:
dismissAttendeeRepliedNotification
setIsAlerted:
needsReply
nearestProposedTime
startDateForNextOccurrence
isLocationDecline
setExpandedProposedTimeAttendee:
setExpanded:
isForReReply
setIsForReReply:
_timeChanged
_dateChanged
_videoConferenceChanged
_attendeeReplyChanged
_isLocationDecline
_expanded
_isForReReply
_startDateForNextOccurrence
_participationStatusModifiedDate
_participationStatus
_status
_recurrenceRule
_invitedBy
_expandedProposedTimeAttendee
T@"NSDate",&,N,V_startDateForNextOccurrence
T@"NSDate",&,N,V_participationStatusModifiedDate
Tq,N,V_participationStatus
Tq,N,V_status
T@"EKRecurrenceRule",&,N,V_recurrenceRule
TB,N,V_timeChanged
TB,N,V_dateChanged
TB,N,V_titleChanged
TB,N,V_locationChanged
TB,N,V_videoConferenceChanged
TB,N,V_attendeeReplyChanged
T@"EKCalendarEventInvitationNotificationAttendee",&,N,V_owner
T@"NSString",R,N,V_invitedBy
TB,N,V_isLocationDecline
T@"EKCalendarEventInvitationNotificationAttendee",&,N,V_expandedProposedTimeAttendee
TB,N,V_expanded
TB,N,V_isForReReply
_statusChanged
_commentChanged
_proposedStartDateChanged
_proposedStartDateDeclined
_isCurrentUser
_comment
_proposedStartDate
T@"NSString",R,N,V_name
T@"NSString",R,N,V_firstName
T@"NSString",R,N,V_lastName
T@"NSString",R,N,V_emailAddress
T@"NSString",R,N,V_phoneNumber
T@"NSURL",R,N,V_URL
TB,R,N,V_statusChanged
TB,R,N,V_commentChanged
TB,R,N,V_proposedStartDateChanged
Tq,R,N,V_participantType
Tq,R,N,V_participantStatus
T@"NSString",R,N,V_comment
T@"NSDate",R,N,V_proposedStartDate
TB,R,N,V_proposedStartDateDeclined
TB,R,N,V_isCurrentUser
calLocation
setCalLocation:
initWithStructuredLocation:
createStructuredLocation
_calLocation
T@"CalLocation",C,N,V_calLocation
_initWithFilePaths:orderedCalendarUIDs:orderedSourceUIDs:eventStore:calendar:options:
_createImportHandle
setAsynchronous:
_importWithCompletion:
setImportProgressAsIndeterminate
setCompletionCallback:
importFilePaths
_separateFilesForImport:
callCompletionWithSuccess:
importICalFiles
iCalFilesToImport
vCalFilesToImport
_separateICalFilesForITIP
_sortFilesByImportCalendar
_doImportFiles
callImportDroppedRemindersCallbackIfThereWereReminders
iTIPFiles
addArray:withKey:toStrongTableOfArrays:
nonITIPFiles
_findCalendarForExistingEvent:
addItem:withKey:toStrongTableOfArrays:
addObject:toArray:
isDefaultSchedulingCalendar
setImportError:
addArray:toArray:
selectCalendar
infoForNewCalendarForFiles:forITIPFiles:nonITIPFiles:
x_apple_calendar_color
green
blue
x_wr_calname
x_wr_caldesc
lastPathComponent
stringByDeletingPathExtension
selectCalendarWithTitle:color:description:error:
isPathToBackupFile
importFoundBackupFile
fileURLWithPath:
importFoundBackupFile:
isPathToICalData
dataWithContentsOfFile:
initWithData:options:error:
version
setValue:withKey:inDictionary:
isPathToVCalData
countReminders:
method
makeDecision
shouldImportContinueGivenDecision:eventsAffected:
numInvalidEvents
setNumInvalidEvents:
document
ownerIdentityAddress
calendarToITIPFiles
initWithData:filename:
eventFromDocument:
_existingEventFromICSEvent:
importICSData:intoCalendar:options:
_doITIPFileImport
calendarToICalFiles
importICSData:intoCalendars:options:
eventsWithExternalIdentifier:inCalendars:
isEnabledForEvents
isDelegate
existingEventIDs
attendee
allSourceUIDs
sourceWithIdentifier:
preferredOwnerAddress
_isAnyAttendeeAddressFrom:organizer:equivalentTo:
_matchingAttendeeAddressesFrom:organizer:inSource:
addSet:withKey:toDictionaryOfSets:
resourceSpecifier
_cn_map:
anyObject
compareToLocalURL:
cal_isEquivalentToEmailAddress:
cal_isEquivalentToPhoneNumber:
ownerAddresses
addObject:toSet:
allCalendarUIDs
calendarWithIdentifier:
componentKeys
componentForKey:
componentOccurrencesForKey:
_getImportedCalendarItems
importError
completionCallback
asynchronous
importSetProgressAsIndeterminate
importDroppedReminders
allowedImportFileTypes
initWithFilePaths:orderedCalendarUIDs:orderedSourceUIDs:eventStore:options:
initWithFilePaths:calendar:options:
asyncImportWithCompletion:
syncImportWithCompletion:
_message:hasNewSelfOrganizedEventForCalendar:
_findPreferredSourceForDocument:
_defaultImportCalendarRequiringSource:
async_queue
setAsync_queue:
setSelectCalendar:
setImportFoundBackupFile:
setImportDroppedReminders:
setMakeDecision:
importSetProgressValue
setImportSetProgressValue:
setImportSetProgressAsIndeterminate:
options
setOptions:
setAllCalendarUIDs:
setAllSourceUIDs:
setICalFilesToImport:
setVCalFilesToImport:
setCalendarToICalFiles:
setCalendarToITIPFiles:
calendarToVCalFiles
setCalendarToVCalFiles:
setExistingEventIDs:
setITIPFiles:
setNonITIPFiles:
filesWithReminders
setFilesWithReminders:
droppedReminderCount
setDroppedReminderCount:
importedItems
setImportedItems:
_asynchronous
_importError
_async_queue
_selectCalendar
_importFoundBackupFile
_importDroppedReminders
_makeDecision
_importSetProgressValue
_importSetProgressAsIndeterminate
_numInvalidEvents
_importFilePaths
_options
_allCalendarUIDs
_allSourceUIDs
_iCalFilesToImport
_vCalFilesToImport
_calendarToICalFiles
_calendarToITIPFiles
_calendarToVCalFiles
_existingEventIDs
_iTIPFiles
_nonITIPFiles
_filesWithReminders
_droppedReminderCount
_importedItems
_completionCallback
TB,N,V_asynchronous
TQ,N,V_numInvalidEvents
T@"EKEventStore",&,N,V_eventStore
T@"NSArray",R,N,V_importFilePaths
TQ,N,V_options
T@"NSArray",&,N,V_allCalendarUIDs
T@"NSArray",&,N,V_allSourceUIDs
T@"NSMutableDictionary",&,N,V_iCalFilesToImport
T@"NSMutableArray",&,N,V_vCalFilesToImport
T@"NSMapTable",&,N,V_calendarToICalFiles
T@"NSMapTable",&,N,V_calendarToITIPFiles
T@"NSMapTable",&,N,V_calendarToVCalFiles
T@"NSMutableSet",&,N,V_existingEventIDs
T@"NSMutableDictionary",&,N,V_iTIPFiles
T@"NSMutableDictionary",&,N,V_nonITIPFiles
T@"NSMutableArray",&,N,V_filesWithReminders
TQ,N,V_droppedReminderCount
T@"NSMutableArray",&,N,V_importedItems
T@?,C,N,V_completionCallback
T@"NSError",&,N,V_importError
T@"NSObject<OS_dispatch_queue>",&,N,V_async_queue
T@?,C,N,V_selectCalendar
T@?,C,N,V_importFoundBackupFile
T@?,C,N,V_importDroppedReminders
T@?,C,N,V_makeDecision
T@?,C,N,V_importSetProgressValue
T@?,C,N,V_importSetProgressAsIndeterminate
components
changeID
initWithEntityType:changeID:
processFetchResults:
objectChangeWithProperties:
raise
objectIDWithCADObjectID:
CADObjectChangeIDsFromEKObjectChanges:
fetchObjectChangesInStore:resultHandler:
fetchObjectChangesInSource:resultHandler:
fetchObjectChangesInCalendar:resultHandler:
callClientResultsHandler:changesTruncated:latestToken:changes:
serializedPropertiesForConsumingChange
changedObjectID
_changeType
_changedObjectID
_changeID
_sequenceNumber
Tq,R,N,V_changeID
Tq,R,N,V_sequenceNumber
T@"EKObjectID",R,N,V_changedObjectID
Ti,R,N,V_changeType
reminderSourceMapLock
eventSources
returnEventResults
reminderSources
returnReminderResults
_combineEventSources:withReminderSources:
performHoldingReminderSourceMapLock:
_rebuildSourceMapsWithEventSources:reminderSources:
reminderSourceIDToEventSourceIDMapping
setReminderSourceIDToEventSourceIDMapping:
setEventSourceIDToReminderSourceIDMapping:
isPrimaryLocalSource
isWritable
eventSourceIDForReminderSourceID:
reminderSourceMap
eventSourceMap
eventSourceIDToReminderSourceIDMapping
getMapsWithReminderSourceMap:eventSourceMap:
initializeEKEventStorePlusReminders
combinedReminderAndEventSources
combineEventCalendars:withReminderCalendars:
eventSourceForReminderSource:
reminderSourceForEventSource:
invalidateReminderSourceMaps
initSingleton
areBirthdaysEnabled
birthdayCalendarsInStore:
resetAllBirthdaysInStore:
disableBirthdayCalendarsInStore:
initWithQueue:andBlock:
integerForKey:
setInteger:forKey:
_localeChanged
localeIdentifier
checkForFailures
executeBlock
registerForContactChangeNotifications:
removeObserver:
deregisterForContactChangeNotifications:
initWithBirthdayCalendarModifications
initWithCreationBlock:
eventStoreProvider
boolForKey:
setBool:forKey:
removeCalendar:commit:error:
commit:
bundleForClass:
localBirthdayCalendarCreateIfNeededWithError:
setCalendarIdentifier:
saveCalendar:commit:error:
contactStore
initWithKeysToFetch:
birthday
nonGregorianBirthday
enumerateContactsWithFetchRequest:error:usingBlock:
eventWithEventStore:
CalDateFromBirthdayComponents:
CalDisplayName
birthdayStringForContactName:eventDate:birthDate:lunarCalendar:
alarmWithRelativeOffset:
setBirthdayContact:
setLunarCalendarString:
insertEventWithContact:forDateComponents:intoCalendar:inStore:
birthdayCalendarsCreateIfNeeded:inStore:originalIdentifier:originalAlarms:ignoreAlarms:
allContactsWithBirthdays
_insertEventsForContact:intoCalendar:inStore:
predicateForMasterEventsInCalendar:
birthdayContactIdentifier
removeEvent:span:commit:error:
birthdayContactName
unifiedContactWithIdentifier:
enumerateEventsMatchingPredicate:usingBlock:
sharedListener
contactsInserted:updated:deleted:
contactsReset
stop
addBirthdayCalendars
disableBirthdayCalendars
_updateQueue
_updateJobQueue
_needsReset
_shutdown
setAbsoluteDate:
setRelativeOffset:
urlWrapper
setUrlWrapper:
calendarOwner
setCalendarOwner:
setIsDefaultAlarm:
setSnoozedAlarmsSet:
snoozedAlarmsSet
initWithEnabled:weekday:startTime:endTime:timeZone:
enabled
setEnabled:
weekday
setWeekday:
startTime
setStartTime:
endTime
setEndTime:
_enabled
_weekday
_startTime
_endTime
TB,N,V_enabled
Tq,N,V_weekday
T@"NSDate",&,N,V_startTime
T@"NSDate",&,N,V_endTime
_eventStorePurger
changedByAddress
changedByFirstName
changedByLastName
changedProperties
publicStatus
setLocalUID:
setRecurrenceDate:
setIdentifierString:
_splitIdentifier:intoLocalUID:recurrenceDate:
recurrenceDate
_recurrenceIdentifierWithRecurrenceDate:localUID:stripTime:stripTimeZone:
identifierString
stringWithUTF8String:
_dateFormatStripTime:stripTimeZone:
dateWithTimeIntervalSince1970:
timeIntervalSince1970
recurrenceIdentifierWithLocalUID:recurrenceDate:
recurrenceIdentifierWithString:
localUIDForIdentifierString:
_recurrenceStringForDate:stripTime:stripTimeZone:
_localUID
_recurrenceDate
_identifierString
T@"NSString",&,V_localUID
T@"NSDate",&,V_recurrenceDate
T@"NSString",&,N,V_identifierString
initWithChangeSet:
singleValueChanges
multiValueAdditions
multiValueRemovals
_initWithChangeSet:filter:
filteredDictionaryPassingTest:
setIsNew:
isModified
setIsModified:
isSaved
setIsSaved:
isDeleted
setIsDeleted:
isUndeleted
setIsUndeleted:
initWithDictionary:
setSingleValueChanges:
setMultiValueAdditions:
setMultiValueRemovals:
removeObjectsForKeys:
rollbackChanges
changedSingleValueKeys
changedMultiValueKeys
_isNewAndUnsaved
valueForSingleValueKey:basedOn:and:
changeSingleValue:forKey:basedOn:and:
valuesForMultiValueKey:basedOnSet:
addChanges:shouldCopyKeyCallback:
removeFromChanges:forMultiValueKey:basedOn:and:
_addToChanges:forMultiValueKey:basedOn:and:shouldCopyKeyCallback:
_semanticIdentifierToObjectMapForObjects:
_cleanupEmptySetsForMultiValueKey:
replaceUniqueMultiValueObjectsWithUpdatedObjects:
callStackSymbols
CalDictionaryWithEmptyObjectsRemoved
initWithChangeSet:changesToSkip:
initWithChangeSet:changesToKeep:
rollbackChangesForKeys:
markChangesAsSaved
hasUnsavedMultiValueAdditionForKey:
unsavedMultiValueAddedObjectsForKey:
hasUnsavedMultiValueRemovalForKey:
unsavedMultiValueRemovedObjectsForKey:
valueForSingleValueKey:basedOn:
changeSingleValue:forKey:basedOn:
valuesForMultiValueKey:basedOn:and:
isUniqueAddedObject:forKey:
replaceMultiChangeAddedObject:withObject:forKey:
addToChanges:forMultiValueKey:basedOn:and:
addChangesAndUpdateUniqueMultiValueObjects:
skipsPersistentObjectCopy
setSkipsPersistentObjectCopy:
isEffectivelyEqual:
_skipsPersistentObjectCopy
_isModified
_isSaved
_isDeleted
_isUndeleted
_singleValueChanges
_multiValueAdditions
_multiValueRemovals
T@"NSMutableDictionary",&,N,V_singleValueChanges
T@"NSMutableDictionary",&,N,V_multiValueAdditions
T@"NSMutableDictionary",&,N,V_multiValueRemovals
TB,N,V_isNew
TB,N,V_isModified
TB,N,V_isSaved
TB,N,V_isDeleted
TB,N,V_isUndeleted
_setNotificationsCollectionFlag
_registerObject:
_hasNotificationsCollectionFlag
initWithOptions:
addNotification:
removeNotification:
T@"EKSource",R,N
T@"NSSet",C,N
inviteReplyNotificationFromEventStore:
removeInviteReplyNotification:error:
TQ,N,V_status
suggestedEventInfoWithOpaqueKey:uniqueKey:
T@"EKPersistentEvent",D,N
TQ,D,N
T@"NSDate",C,D,N
token
_token
T@"EKEventStore",R,W,N,V_eventStore
TI,R,N,V_token
initWithEntityClass:predicate:store:
signpostHandle
predicateFormat
_createOSActivity
signpostStart
_startActualWithCompletion:synchronous:
_fetchObjectIDsActualWithCompletion:synchronous:
_startProcessingWithCompletion:synchronous:processor:
expandWithObjectsPendingCommit:deletedObjectIDs:andResultArray:
objectsPendingCommit
deletedObjectIDsPendingCommit
signpostEndWithError:count:
shouldLoadDefaultProperties
loadedValues
registerFetchedObjectWithID:withDefaultLoadedPropertyKeys:values:
occurrenceDate
_startActivityWithCompletion:synchronous:
_startFetchObjectIDsActivityWithCompletion:synchronous:
searchWithEntityClass:predicate:store:
terminate
startWithCompletion:
runSynchronously
fetchObjectIDs
_entityClass
_predicate
_cancellationToken
_finished
_isCancelled
_retryCount
createNewReminder
reminderIdentifier
URLFragmentAllowedCharacterSet
removeCharactersInString:
stringByAddingPercentEncodingWithAllowedCharacters:
completionDate
setCompletionDate:
setParentID:
allowReminders
dueDateComponents
generateUniqueIDWithReminder:calendar:
backingReminderWithIdentifier:
_resetIfBackingObjectIsOfClass:fetchResetFrozenObjectBlock:
isAbsolute
reminderWithEventStore:
_removeSnoozedAlarmsFromReminder:usingDueDate:
firstAlertDate
setFirstAlertDate:
setCompleted:
isCompleted
clearParentID
bestDisplayAlarm
startDateComponents
setStartDateComponents:
setDueDateComponents:
parentID
_startDateComponents
_dueDateComponents
_parentID
T@"EKObjectID",&,N,V_parentID
T@"NSDateComponents",C,N,V_startDateComponents
T@"NSDateComponents",C,N,V_dueDateComponents
completed
TB,N,GisCompleted
fetchRecurrenceChangesInStore:resultHandler:
fetchRecurrenceChangesInSource:resultHandler:
fetchRecurrenceChangesInCalendar:resultHandler:
_initWithOptions:eventStore:eventStoreGetter:
_killSyncTimer:
logHandle
attemptReload
_eventStoreChanged
notificationQueue
_killTimer
isMonitoringOnlyNotificationCount
notificationReferences
attemptReloadSynchronously:
isDataProtected
eventNotificationCount
_fetchEventNotificationReferencesFromEventStore:earliestExpiringNotification:
_updateTimerFireDate:
effectiveCallbackQueue
postNotificationName:object:userInfo:
_addRemovedOrAddedObjectIDsTo:oldNotifications:newNotifications:
minusSet:
_timerFired
initWithFireDate:serviceIdentifier:target:selector:userInfo:
setMinimumEarlyFireProportion:
mainRunLoop
scheduleInRunLoop:
_syncDidEnd:
_notificationCountChangedExternally
_alertPrefChanged
_databaseChanged
trackChangesInEventStore
adjust
blacklistedNotificationQueue
eventNotificationsFilteredByShowsNotificationsFlag:earliestExpiringNotification:
dateWithTimeIntervalSinceNow:
_syncTimerFired:
initWithFireDate:interval:target:selector:userInfo:repeats:
addTimer:forMode:
_resetSyncTimer
EKObjectIDsFromData:
requestedDarwinNotifications
addBlacklistedNotificationObjectID:
blacklistedRowIDs
T@"NSObject<OS_os_log>",R,N
initWithOptions:eventStore:
initWithOptions:eventStoreGetter:
notificationCount
handleDarwinNotification:
callbackNotificationQueue
setCallbackNotificationQueue:
eventStorePurger
_eventStoreGetter
_running
_nextFireTime
_syncTimer
_pendingChanges
_lastChangedTimestamp
_changedIDsValid
_changedIDs
_ignoreSyncTimer
_initialCheck
_shouldInstallPersistentTimer
_useSyncIdleTimer
_registerForDarwinNotifications
_filteredByShowsNotificationsFlag
_computeChangedNotificationSet
_automaticallyFaultNotifications
_lastExpirationTimerFireDateWasInThePast
_isMonitoringOnlyNotificationCount
_notificationCount
_notificationReferences
_callbackNotificationQueue
_notificationQueue
T@"NSObject<OS_dispatch_queue>",R,N,V_notificationQueue
TB,R,N,V_isMonitoringOnlyNotificationCount
T@"EKTimedEventStorePurger",R,N,V_eventStorePurger
T@"EKEventStore",R,N,V_eventStore
T@"NSObject<OS_dispatch_queue>",&,N,V_callbackNotificationQueue
TQ,R,N,V_notificationCount
T@"NSArray",R,N,V_notificationReferences
preferredAddress
setPreferredAddress:
_displayName
_preferredAddress
_principalPath
T@"NSString",&,N,V_displayName
T@"NSString",&,N,V_preferredAddress
T@"NSString",C,N,V_principalPath
T@"NSDictionary",R
setAvailabilityFreshnessWindow:
saveGeocodedLocationsInTravelEngine
setSaveGeocodedLocationsInTravelEngine:
overrideTravelAdvisoryHypothesis
setOverrideTravelAdvisoryHypothesis:
overriddenTravelAdvisoryHypothesisTransportType
setOverriddenTravelAdvisoryHypothesisTransportType:
overriddenTravelAdvisoryHypothesisConservativeTravelTime
setOverriddenTravelAdvisoryHypothesisConservativeTravelTime:
overriddenTravelAdvisoryHypothesisEstimatedTravelTime
setOverriddenTravelAdvisoryHypothesisEstimatedTravelTime:
overriddenTravelAdvisoryHypothesisAggressiveTravelTime
setOverriddenTravelAdvisoryHypothesisAggressiveTravelTime:
overriddenTravelAdvisoryHypothesisSupportsLiveTraffic
setOverriddenTravelAdvisoryHypothesisSupportsLiveTraffic:
overriddenTravelAdvisoryHypothesisCurrentTrafficDensity
setOverriddenTravelAdvisoryHypothesisCurrentTrafficDensity:
overriddenTravelAdvisoryHypothesisRouteName
setOverriddenTravelAdvisoryHypothesisRouteName:
overriddenTravelAdvisoryHypothesisTravelState
setOverriddenTravelAdvisoryHypothesisTravelState:
preventMarkingTravelAdvisoryEntriesAsDismissed
setPreventMarkingTravelAdvisoryEntriesAsDismissed:
forceDisplayOfNewTravelAdvisoryHypotheses
setForceDisplayOfNewTravelAdvisoryHypotheses:
performAgendaEntryEqualityChecksInTravelEngine
setPerformAgendaEntryEqualityChecksInTravelEngine:
setVerifyIntegrityOfAvailabilityTimeSearchTimelines:
showDepartureDateForTransitTimeToLeave
setShowDepartureDateForTransitTimeToLeave:
shouldBypassTravelEngineThrottle
setShouldBypassTravelEngineThrottle:
syntheticTravelAdvisoriesEnabled
setSyntheticTravelAdvisoriesEnabled:
initForReadingFromData:error:
decodeObjectOfClass:forKey:
createEventInEventStore:
initRequiringSecureCoding:
encodeObject:forKey:
encodedData
serializeEvent:error:
deserializeData:error:
versionFromData:error:
initWithEventStore:withVersion:
_version
T@"NSString",R,N,V_version
eventUUID
excludeTimedEvents
excludeAllDayEvents
excludeDeclined
excludeProposed
isProposedTimeEvent
excludeDeclinedUnlessProposed
removeObjectsAtIndexes:
arrayWithObject:
CalIsBetweenStartDate:endDate:
_addEventOccurrenceAndProposedTimeOccurrenceFor:withOccurrenceStartDate:toResults:
localizedStringWithFormat:
errorWithCADErrorCode:
_defaultDescriptionForCADErrorCode:
errorWithCADErrorCode:description:
errorWithDomain:code:description:underlyingError:reason:
_defaultDescriptionForEKErrorCode:
errorWithEKErrorCode:description:underlyingError:reason:
initWithDomain:code:userInfo:
errorWithEKErrorCode:underlyingError:
errorWithEKErrorCode:description:reason:
setIsCurrentUser:
scheduleAgent
setScheduleAgent:
fetchOrganizerChangesInStore:resultHandler:
fetchOrganizerChangesInSource:resultHandler:
fetchOrganizerChangesInCalendar:resultHandler:
setInviteReplyCalendar:
sharedInstance
initWithDateProvider:
internalActive
setInternalActive:
_refresh
startOfLeaveNowPeriodInternal
startOfRunningLatePeriodInternal
suggestedDepartureDate
setStartOfLeaveNowPeriodInternal:
aggressiveDepartureDate
setStartOfRunningLatePeriodInternal:
setInternalPeriodChangedCallback:
internalPeriodChangedCallback
internalPeriod
_refreshPeriod
_refreshTimer
dateProvider
stringForPeriod:
setInternalPeriod:
_refreshOnDate:
activate
deactivate
active
startOfLeaveNowPeriod
startOfRunningLatePeriod
updateWithHypothesis:
setPeriodChangedCallback:
periodChangedCallback
period
_internalActive
_startOfLeaveNowPeriodInternal
_startOfRunningLatePeriodInternal
_internalPeriod
_internalPeriodChangedCallback
_dateProvider
T@"NSDate",&,N,V_startOfLeaveNowPeriodInternal
T@"NSDate",&,N,V_startOfRunningLatePeriodInternal
TB,N,V_internalActive
TQ,N,V_internalPeriod
T@?,C,N,V_internalPeriodChangedCallback
T@"<CalDateProvider>",R,N,V_dateProvider
T@"NSDate",&,N
endDateRaw
setEndDateRaw:
travelTime
setTravelTime:
setOriginalStartDate:
travelAdvisoryBehavior
setTravelAdvisoryBehavior:
responseComment
setResponseComment:
locationPredictionState
setLocationPredictionState:
birthdayID
setBirthdayID:
canForward
setCanForward:
disallowProposeNewTime
setDisallowProposeNewTime:
needsOccurrenceCacheUpdate
setNeedsOccurrenceCacheUpdate:
invitationChangedProperties
setInvitationChangedProperties:
externalTrackingStatus
setExternalTrackingStatus:
actions
setActions:
conferenceURLString
setConferenceURLString:
setBirthdayContactIdentifier:
setBirthdayContactName:
recurrenceSet
setRecurrenceSet:
conferencesSet
setConferencesSet:
firedTTL
setFiredTTL:
diffSummaryBetweenObject:andObject:
EKObjectChangeSummarizer_singleValueDiffKeys
EKObjectChangeSummarizer_multiValueDiffKeys
changeSummaryForObject:
transportType
conservativeDepartureDate
conservativeTravelTime
estimatedTravelTime
aggressiveTravelTime
routeName
supportsLiveTraffic
currentTrafficDensity
geoTrafficDensityAsString:
trafficDensityDescription
travelState
isEqualToHypothesis:
initWithTransportType:conservativeDepartureDate:conservativeTravelTime:suggestedDepartureDate:estimatedTravelTime:aggressiveDepartureDate:aggressiveTravelTime:routeName:supportsLiveTraffic:currentTrafficDensity:trafficDensityDescription:travelState:
supportsSecureCoding
syntheticHypothesisWithStartDate:conservativeTravelTime:estimatedTravelTime:aggressiveTravelTime:
encodeWithCoder:
initWithCoder:
_transportType
_conservativeDepartureDate
_conservativeTravelTime
_suggestedDepartureDate
_estimatedTravelTime
_aggressiveDepartureDate
_aggressiveTravelTime
_routeName
_supportsLiveTraffic
_currentTrafficDensity
_trafficDensityDescription
_travelState
Ti,R,N,V_transportType
T@"NSDate",R,C,N,V_conservativeDepartureDate
Td,R,N,V_conservativeTravelTime
T@"NSDate",R,C,N,V_suggestedDepartureDate
Td,R,N,V_estimatedTravelTime
T@"NSDate",R,C,N,V_aggressiveDepartureDate
Td,R,N,V_aggressiveTravelTime
T@"NSString",R,C,N,V_routeName
TB,R,N,V_supportsLiveTraffic
TQ,R,N,V_currentTrafficDensity
T@"NSString",R,C,N,V_trafficDensityDescription
Tq,R,N,V_travelState
setTransportType:
setConservativeDepartureDate:
setConservativeTravelTime:
setSuggestedDepartureDate:
setEstimatedTravelTime:
setAggressiveDepartureDate:
setAggressiveTravelTime:
setRouteName:
setSupportsLiveTraffic:
setCurrentTrafficDensity:
setTrafficDensityDescription:
setTravelState:
Td,D,N
fetchEventActionChangesInStore:resultHandler:
fetchEventActionChangesInSource:resultHandler:
fetchEventActionChangesInCalendar:resultHandler:
initWithValue:
setValue:
_value
T@,W,N,V_value
temporaryObjectIDWithEntityType:
_propertyForKey:
isTemporary
CADObjectIDWithGeneration:
_CADObjectID
_isPendingUpdate
_isPendingDelete
_trackModifiedObject:
_loadedPropertyKeys
_loadedPropertyForKey:
_relationForKey:
toMany
_releaseLoadedProperties
_setDefaultPropertiesLoaded:
_setPendingUpdate:
_objectDidReset:
ownsRelatedObject
internalAddCoCommitObject:
initWithOptions:capacity:
_loadDefaultPropertiesIfNeeded
_takeValues:forKeys:
_setProperty:forKey:forRelation:isUpdatedProperty:
_createUpdatedPropertiesIfNeeded
changed
_createLoadedPropertiesIfNeeded
_loadChildIdentifiersForKey:values:
_setProperty:forKey:isUpdatedProperty:
_loadRelationForKey:value:
inversePropertyNames
shouldSetInverseProperty:onObject:forObject:
_addObjectCore:toValues:relation:
_removeObjectCore:fromValues:relation:
_primitiveValueForKey:loader:
_primitiveSetValue:forKey:
_loadStringValueForKey:
isPropertyLoaded:
_setProperty:forKey:isRelation:isUpdatedProperty:
_takeValuesForDefaultPropertyKeys:values:
_areDefaultPropertiesLoaded
removeLastObject
coCommitObjects
stringWithCapacity:
_shouldRetainPropertyForKey:
allObjectsWithChangesRelatedToObjects:
initWithAlternateUniverseObject:inEventStore:withUpdatedChildObjects:
_setObjectID:inDatabaseRestoreGeneration:
isPropertyDirty:
dirtyPropertiesAndValues
saved
_setPendingInsert:
_setPendingDelete:
primitiveAddRelatedObject:forKey:
primitiveRemoveRelatedObject:forKey:
primitiveDoubleValueForKey:
primitiveSetDoubleValue:forKey:
takeValues:forKeys:
takeValuesForDefaultPropertyKeys:values:
dump
_lock
_coCommitObjects
_loadedProperties
_updatedProperties
T@"EKEventStore",R,N
fetchParticipantChangesInStore:resultHandler:
fetchParticipantChangesInSource:resultHandler:
fetchParticipantChangesInCalendar:resultHandler:
performGroupExpansionWithAccountID:principalPath:completionBlock:
initWithSource:group:completionBlock:
_group
_completionBlock
_resultsSet
initWithArray:copyItems:
initWithRecurrenceRule:
createRecurrenceRule:
_frequency
_interval
_recurrenceEnd
_firstDayOfTheWeek
_daysOfTheWeek
_daysOfTheMonth
_daysOfTheYear
_weeksOfTheYear
_monthsOfTheYear
_setPositions
Tq,R,N,V_frequency
Tq,R,N,V_interval
T@"EKRecurrenceEnd",C,N,V_recurrenceEnd
Tq,R,N,V_firstDayOfTheWeek
T@"NSArray",R,N,V_daysOfTheWeek
T@"NSArray",R,N,V_daysOfTheMonth
T@"NSArray",R,N,V_daysOfTheYear
T@"NSArray",R,N,V_weeksOfTheYear
T@"NSArray",R,N,V_monthsOfTheYear
T@"NSArray",R,N,V_setPositions
coordinate
date:representsApproachingDepartureDateForHypothesis:
date:representsLatenessForHypothesis:
travelStateIndicatesTravelingTowardDestination:
formattedLocationCoordinates:
geoRouteHypothesisTravelStateForString:
geoTransportTypeAsString:
geoTransportTypeForString:
geoTrafficDensityForString:
authorizationStatusAsString:
geoTransportTypeForCalLocationRoutingMode:
date:representsImmediateDepartureForHypothesis:
maximumAllowableTravelTime
minimumAllowableTravelTime
cadRouteHypothesisForEKTravelEngineHypothesis:
sharedEventStore
_sharedEventStore
T@"EKEventStore",R,N,V_sharedEventStore
CALFreeBusyTypeFromEKAvailType:
getCALFreeBusyFromEKSpans:inRange:
_orderForType:
leastAvailabileFreeBusyTypeForArray:
getCALFreeBusyFromResults:forAttendees:inRange:
summarizedAvailabilityTypeForSpans:
_permittedClassesForArchivingLastSyncErrorUserInfo
archiveDictionary:permittedClasses:error:
unarchiveDictionaryFromData:permittedClasses:error:
dataFromErrorUserInfo:
errorUserInfoFromData:
resourceChanges
setResourceChanges:
addResourceChange:
removeResourceChange:
originalOccurrenceStartDate
initWithName:
_isAllDay
setOccurrenceIsAllDay:
_adjustedPersistedDateForDate:withAdjustmentMode:pinMode:clientCalendarDate:
setOccurrenceStartDate:
setOccurrenceEndDate:
effectiveTimeZone
occurrenceIsAllDay
_calculateDurationWithStart:end:allDay:
calendarDateByComponentwiseAddingComponents:
differenceAsComponentwiseDateComponents:
differenceAsDateComponents:units:
eventOccurrenceID
recurrenceIdentifier
occurrenceStartDate
absoluteTime
_modifiedNotificationUserInfoWithIdentifier:forRevert:
postModifiedNotificationWithUserInfo:
needsGeocodingForEvent:
setNeedsGeocoding:forEvent:
originalOccurrenceEndDate
_clearLocationPredictionCacheIfNotFrozen
CalCalendarWithUnsanitizedCalendarIdentifier:
_committedStartDate
isPhantom
setIsPhantom:
setOriginalOccurrenceIsAllDay:
_updateDefaultAlarms
_updateStartDateForDate:withAdjustmentMode:
_updateEndDateForDate:withAdjustmentMode:
forceSetTimeZone:
clearCachedTimeValues
startDateIncludingTravel
_setStartDate:andClearProposedTimes:
dateForDayInTimeZone:
ek_ios_dateForEndOfDayInTimeZone:
_pinDate:withPinMode:
setOriginalOccurrenceStartDate:
occurrenceEndDate
setOriginalOccurrenceEndDate:
setProposedStartDateChanged:
setCommentChanged:
setStatusChanged:
_settingTimeZoneChangesStartEndDates
_isOriginalOccurrenceStartDateSameAsCommittedStartDate
_isParticipantStatusDirty
allowsParticipationStatusModifications
supportedEventAvailabilities
_eventAvailabilityForParticipantStatus:supportedEventAvailabilities:isAllDayEvent:
stringRemovingMailto
currentUserMayActAsOrganizer
initWithObjects:
recurrenceEndWithEndDate:
recurrenceEndWithOccurrenceCount:
sharedAutoupdatingCurrentCalendar
month
_nsCalendar
allowsAvailabilityModifications
defaultAllDayAlarmOffset
setDefaultAlarm:
defaultAllDayAlarm
defaultTimedAlarm
_removeDefaultAlarms
_addDefaultAlarms
virtualConference
joinMethods
conference
serializeConference:
_buildConferenceStringFromNotesWithoutConference:serializedConference:
_originallyCommittedVirtualConference
invalidateConferenceURL:
hasSuffix:
_setInvitationStatusAlertedIfNecessary
_setInvitationStatusUnalertedIfNecessary
_shouldAlertInviteeDeclines
initWithTimeInterval:sinceDate:
components:fromDate:toDate:options:
hour
minute
privacyDescription
routingModeEnumForCalRouteType:
currentProcessHasSyncClientEntitlement
isFacebookBirthdayCalendar
allowsPrivacyLevelModifications
_invitationChangedPropertyForFlag:
_setInvitationChangedProperty:forFlag:
_isEventNotSendingNotification:
_setEvent:isNotSendingNotification:
serverSupportedProposeNewTime
hasOwnerEmailAddress
range
stringByReplacingCharactersInRange:withString:
substringToIndex:
CDVStringByXMLUnquoting
substringWithRange:
setPredictedLocationFrozen:
_updatePredictedLocationCacheIfNeeded
roomAttendees
removeConferenceRooms:
_conferenceRoomDisplayStrings
setStructuredLocation:preserveConferenceRooms:
removeObjectsInArray:
displayString
_needsPredictedLocationCacheUpdateHoldingLock
_updatedPredictedLocationRespectingTimeoutBudgetForEvent:error:
localizedDescription
_firstNonConferenceRoomLocationTitle
isMainThread
locationPredictionForEvent:error:timeout:
performWithReadLock:
_updatePredictedLocationCacheIfNeededHoldingLock
performWithWriteLock:
_clearLocationPredictionCacheIfNotFrozenHoldingLock
preferredLocationWithoutPrediction
setPredictedLOI:
isPrediction
shouldDoLocationPredictionForEvent:
isPrivateEventSharedToMe
isAllDayDirty
hasAttachmentChanges
_hasBasicChangesRequiringSpanAll
_hasRecurrenceRuleChangeRequiringSpanAll
_basicChangesRequiringSpanAll
_hasOrHadRecurrenceRule
hasUnsavedChangesInKeys:
automaticEventLocationGeocodingAllowed
_eligibleForTravelAdvisoriesIncludePotential:
locationIsAConferenceRoom
hasKnownSpatialData
automaticLocationGeocodingAllowed
predictedLOI
eligibleForTravelAdvisories
get_enableTravelAdvisoriesForAutomaticBehavior
_relatedCachedTimeKeys
clearCachedValuesForKeys:
startOfDayForDate:
cachedValueForKey:expectingCachedValue:forMasterKey:relatedKeys:populateBlock:
startOfDayForStartDateInCalendar:
daysSpannedInCalendar:
dateByAddingDays:inCalendar:
daysSpannedFromStartDate:toEndDate:allDay:inCalendar:
isMultiDayTimedEventWithStartDate:endDate:allDay:inCalendar:
isSameDayAsDate:inCalendar:
dateOnlyComponentsInCalendar:
setHour:
dateFromComponents:
_resetInternalState
pendingStatus
hasValidEventAction
_hasExternalIDOrDeliverySource
pendingParticipationStatus
_travelTimeInternalDescription
clearModifiedFlags
setClearModifiedFlags:
validateAndUpdateOccurrenceDateFieldsAfterRefresh
postModifiedNotification
_committedEndDate
setRequiresDetachDueToSnoozedAlarm:
validateWithSpan:error:
allowEvents
_isParticipationStatusDirty
validateRecurrenceRule:error:
_validateDatesAndRecurrencesGivenSpan:error:
endLocation
generateUniqueIDWithEvent:originalEvent:calendar:
_adjustForNewCalendarBeforeSave
responseMustApplyToAll
requiresDetachDueToSnoozedAlarm
_detachWithStartDate:newStartDate:future:
_isSimpleRepeatingEvent
conformsToRecurrenceRules:
_isSignificantlyDetachedComparedToMaster:shouldIgnorePartStat:
_updateVideoConferenceOnlyModified
_propagateChangesToDetachedEvents:significantlyDetachedEvents:startDateOffset:duration:calendar:
_clearExceptionDatesAndUpdateDetachedOriginalDates
_filterExceptionDatesAndDetachments
_applyTimeChangesToMaster
_updateModifiedPropertiesForThisEventAndAllDetachments
invalidateConferenceURLIfNeeded:inEventStore:
_updateModifiedProperties
applyChanges:
knownKeysToSkipForFutureChanges
addChangesFromObject:toObjects:except:
_propagateAlarmChangesToDetachedEvents:
dateByAddingComponents:toDate:options:
knownKeysToUseForFutureChanges
addChangesFromObject:toObjects:keep:
_updateMasterDate:forChangeToOccurrenceDate:fromOriginalOccurrenceDate:
_leftoversInDates:withGeneratedDates:
_addOrganizerToRecentsIfNeeded
_addNewAttendeesToRecentsIfNeeded
_clearOriginalDateFields
revert
originalOccurrenceIsAllDay
startCalendarDate
calendarTimeZone
_keysToChangeForDuplicateWithOptions:
dateForStartOfDayInTimeZone:
_occurrenceExistsOnDate:timeZone:
_checkStartDateConstraintAgainstDate:timeZone:error:
durationOverlapsRecurrenceInterval
overlapsWithOrIsSameDayAsEventInSeries
_validateAlarmIntervalConstrainedToRecurrenceInterval:
_deleteFromOccurrenceDateOnward:
_deleteThisOccurrence
_updateSelfFromDetachedEventIfNeededForDelete
enumerateObjectsWithOptions:usingBlock:
_cancelDetachedEventsWithSpan:
_eventIsTheOnlyRemainingOccurrence
_noRemainingEarlierOccurrences
_shouldCancelInsteadOfDeleteWithSpan:
_cancelWithSpan:error:
_shouldDeclineInsteadOfDelete
_deleteWithSpan:error:
isFirstOccurrence
setByAddingObject:
_shouldPreserveFutureWhenSlicingWithStartDate:newStartDate:
masterEvent
emptyMeltedCacheForKeys:
UUIDString
_resetAfterUpdatingChangeSetOrBackingObject
rebaseForDetachment
updateEventToEvent:commit:
isDate:inSameDayAsDate:
isEqualToLocation:
infoWithConflicts:needsAction:event:
isAffectingAvailability
potentialConflictOccurrenceDatesInTimePeriod:
predicateForEventsWithStartDate:endDate:calendars:loadDefaultProperties:
_fetchedEventIsConflict:forStartDate:endDate:
isTentative
dateWithTimeInterval:sinceDate:
infoWithConflictsInSeries:outOf:withPeriod:conflictingDates:
updateFromMapItem:
_clearAttendeeChangedFlags
setAttendeeComment:
setAttendeeStatus:
setAttendeeProposedStartDate:
setAttendeeDeclinedStartDate:
dismissAcceptedProposeNewTimeNotification
_respondToProposedTimeFromAttendee:shouldAccept:
isDifferentWithDiff:
knownRequireRSVPKeys
intersectsSet:
_diff:isDifferentFromCommittedEventHelperRequiresReschedule:
currentUserGeneralizedParticipantRole
isDifferentAndModifiedAttendeesWithDiff:
knownPerUserPropertyKeys
initWithSet:
diffFromCommitted
isDifferentAndRequiresRescheduleWithDiff:
isDifferentAndRequiresRSVPWithDiff:
isDifferentAndHasUnscheduledAttendeesWithDiff:
_requirementsToMoveOrCopyToCalendarHelperAllowedToMoveOrCopyEventFromCalendar:toCalendar:
_requirementsToMoveToCalendarHelperDuplicationRequiredToMoveEventFromCalendar:toCalendar:
_requirementsToMoveToCalendarHelperAlterationsRequiredToMoveEventFromCalendar:toCalendar:
_requirementsToMoveToCalendarHelperReinviteAttendeesRequiredToMoveEventFromCalendar:toCalendar:
_requirementsToMoveToCalendarHelperNeedToRemoveOriginalToMoveEventFromCalendar:toCalendar:
_requirementsToMoveToCalendarHelperRemoveAttendeesRequiredToMoveEventFromCalendar:toCalendar:
requirementsToMoveFromCalendar:toCalendar:
canMoveToCalendar:fromCalendar:allowedRequirements:error:
_canMoveOrCopyFromCalendar:toCalendar:allowedRequirements:error:
seriesHasOutOfOrderEvents
seriesHasOverlappingOrOnSameDayOrOutOfOrderEvents
CalGregorianGMTCalendar
component:fromDate:
_suggestedStartDateHelperRecurrenceRuleRequiresExpansion:forDate:
dateWithDatePartFromDate:timePartFromDate:inCalendar:
isSameWeekAsDate:inCalendar:
roundToCurrentWeekInCalendar:withFirstWeekdayIndex:
URLForNoMail
isAttendeeSameAsOrganizer:
arrayByExcludingObjectsInArray:
isPrivacySet
supportsMultipleAlarms
_hasAbsoluteAlarms
suggestedStartDateForCurrentRecurrenceRule
supportsURLs
isValidAttendee:forCalendar:
supportsMultipleDaysInMonthlyRecurrence
supportsMultipleMonthsInYearlyRecurrence
supportsYearlyRecurrenceWithArbitraryInterval
sharedOwnerAddress
isCurrentUserInvitedAttendee
_calendarsAreSharedToMeInSameSourceAndHaveSameOwner:
setComponents:options:
initWithCalendar:
ICSDataWithOptions:
initWithEKOptions:
defaultCalendarForNewEvents
externalUriScheme
_coercedEventAvailabilityForDesiredAvailability:supportedAvailabilities:
eventFromICSEvent:inStore:
isStatusDirty
needsGeocoding
setNeedsGeocoding:
phantomMaster
setPhantomMaster:
startCalendarDateIncludingTravelTime
overrideStartDate:
durationIncludingTravel
endCalendarDate
isMaster
supportsParticipationStatusModificationsWithoutNotification
allowsParticipantStatusModifications
_userAddressesRepresentInvitedAttendee:checkEmailAddresses:
markEventAsAttendeeForward
_parentParticipationStatus
birthdayPersonID
isBirthday
lunarCalendarString
makeRecurrenceEndDateBased
makeRecurrenceEndCountBased
hasComplexRecurrence
futureOccurrencesCannotBeAffectedByChangingStartDateToDate:
virtualConferenceTextRepresentation
setVirtualConference:
clearInvitationStatus
addEventAction:
removeEventAction:
isAlerted
proposedEndDate
travelRoutingMode
allowsTravelTimeModifications
allowsAllDayModifications
attendeeComment
attendeeProposedStartDate
attendeeDeclinedStartDate
dontSendNotificationForChanges
setDontSendNotificationForChanges:
allowsProposedTimeModifications
supportsAddingAttachments
addConferenceRooms:
confirmPredictedLocation:
rejectPredictedLocation
hasPredictedLocation
setLocationPredictionAllowed:
forceLocationPredictionUpdate
setConferenceURL:
setEndLocation:
compareStartDateWithEvent:
compareStartDateIncludingTravelWithEvent:
canDetachSingleOccurrence
changingAllDayPropertyIsAllowed
hasChangesRequiringSpanAll
potentiallyEligibleForTravelAdvisories
travelAdvisoryBehaviorIsEffectivelyEnabled
startOfDayForEndDateInCalendar:
isMultiDayTimedEventInCalendar:
canBeRespondedTo
saveWithSpan:error:
isSignificantlyDetached
isSignificantlyDetachedIgnoringParticipation
nextOccurrenceOrDetachmentAfter:
hasAttendeeProposedTimes
duplicateWithOptions:
countOfAttendeeProposedTimes
allowsResponseCommentModifications
removeWithSpan:error:
isMainOccurrence
isOnlyOccurrence
privacyLevelString
updateEventToEvent:
scanForConflicts
updateWithGeocodedMapItemAndSaveWithCommit:eventStore:error:
launchURL
acceptProposedTimeNotificationFromAttendee:
declineProposedTimeNotificationFromAttendee:
isEqual:comparingKeys:
isDifferentAndHasForwardedAttendeesWithDiff:
isDifferentAndHasNewProposedTimeWithDiff:
isDifferentExceptingPerUserPropertiesWithDiff:
isDifferentFromCommittedEventAndRequiresReschedule
isDifferentFromCommittedEventAndRequiresRSVP
isDifferentFromCommittedEventAndHasUnscheduledAttendees
requirementsToMoveToCalendar:
requiresCopyToMoveFromCalendar:toCalendar:
attendeesNotIncludingOrganizer
birthdayPersonUniqueID
setProposedEndDate:
preventConferenceURLDetection
setPreventConferenceURLDetection:
showEventURLString
setVirtualConferenceTextRepresentation:
_cachedLocationPrediction
_cachedLocationPredictionExpirationDate
_locationPredictionFrozen
_locationPredictionAllowed
_locationPredictionLock
_occurrenceIsAllDay
_requiresDetachDueToSnoozedAlarm
_preventConferenceURLDetection
_clearModifiedFlags
_birthdayPersonUniqueID
_occurrenceStartDate
_occurrenceEndDate
_originalOccurrenceStartDate
_originalOccurrenceEndDate
_originalOccurrenceIsAllDay
_proposedEndDate
_showEventURLString
_virtualConferenceTextRepresentation
T@"EKCalendarDate",C,N,V_occurrenceStartDate
T@"EKCalendarDate",C,N,V_occurrenceEndDate
TB,N,V_occurrenceIsAllDay
T@"EKCalendarDate",C,N,V_originalOccurrenceStartDate
T@"EKCalendarDate",C,N,V_originalOccurrenceEndDate
T@"NSNumber",C,N,V_originalOccurrenceIsAllDay
TB,N,V_requiresDetachDueToSnoozedAlarm
Ti,N,V_clearModifiedFlags
T@"EKRecurrenceIdentifier",R,N
Tq,N
Td,R,N
T@"EKStructuredLocation",&,D,N
T@"EKSuggestedEventInfo",&,N
T@"EKStructuredLocation",R,N
T@"NSDate",&,N,V_proposedEndDate
T@"NSURL",&,N
TB,N,V_preventConferenceURLDetection
T@"NSString",R,N,V_showEventURLString
currentUserInvitedAttendee
TB,R,N,GisCurrentUserInvitedAttendee
T@"NSDate",R,C,N
T@"EKCalendarDate",R,N
privacySet
TB,R,N,GisPrivacySet
T@"EKVirtualConference",&,N
T@"NSString",&,N,V_virtualConferenceTextRepresentation
TB,N,GisAllDay
T@"EKStructuredLocation",C,D,N
T@"EKParticipant",R,D,N
T@"NSString",R,N,V_birthdayPersonUniqueID
CalDateByComponentwiseAddingSeconds:inCalendar:
initWithName:emailAddress:phoneNumber:address:isCurrentUser:
setCurrentUser:
availabilityCache
setKey:withObject:
setKey:withDate:
setKey:withPointerAddress:
_availabilityCache
_addresses
_requestID
setDataProtectionObserver:
_dataProtectionStateChanged
dataProtectionObserver
setStateChangedCallback:
dataIsAccessible
stateChangedCallback
stateChangedNotificationName
_stateChangedCallback
_dataProtectionObserver
T@"CDBDataProtectionObserver",&,N,V_dataProtectionObserver
T@?,C,N,V_stateChangedCallback
_ekParticipantStatusFromCalAttendeeStatus:
_calAttendeeStatusFromEKParticipantStatus:
setPendingStatus:
resemblesEmailAddress
_valueForFlag:
_setFlag:value:
attendeeWithEmailAddress:name:
attendeeWithName:url:
attendeeWithName:emailAddress:
attendeeWithName:phoneNumber:
attendeeWithName:emailAddress:address:
markAsForward
fetchAlarmChangesInStore:resultHandler:
fetchAlarmChangesInSource:resultHandler:
fetchAlarmChangesInCalendar:resultHandler:
initWithCustomClientId:suffix:
customClientId
initWithCustomClientId:
suffix
initWithSuffix:
CADChangeTrackingClientId
_suffix
_customClientId
T@"NSString",R,C,N,V_suffix
T@"NSString",R,C,N,V_customClientId
T@"CADChangeTrackingClientId",R,N
_initAlarms:
_initAttachments:
_initAttendees:
_initRecurrenceRules:
initWithAlarm:
initWithAttachment:
createAlarm:
serializedProperties
setIsAllDay:
_travelTime
_recurrenceRules
_calendarIdentifier
T@"NSDate",C,N,V_startDate
T@"NSDate",C,N,V_endDate
T@"NSTimeZone",C,N,V_timeZone
TB,N,V_isAllDay
Td,N,V_travelTime
T@"NSMutableArray",&,N,V_recurrenceRules
T@"NSString",C,N,V_title
T@"NSString",C,N,V_notes
T@"NSString",C,N,V_calendarIdentifier
T@"NSString",C,N,V_location
T@"EKSerializableStructuredLocation",&,N,V_structuredLocation
cal_changeMayAffectAnyObjectOfType:
cal_changeMayAffectCalendarsOrSources
reachedMaxDepth
rootObject
initWithRootObject:
faultIfNeededForObject:
depth
setDepth:
setReachedMaxDepth:
_reachedMaxDepth
_rootObject
_depth
T@"EKObject",R,N,V_rootObject
TQ,N,V_depth
TB,N,V_reachedMaxDepth
_readWriteLock
_performWithReadLock:
_performWithWriteLock:
validateWithOwner:error:
_resetWithFrozenObject:
_cachedMeltedObjectsCount
_hasChangeHelperInKeys:ignoreKeys:checkUnsaved:
hasUnsavedChangesIgnoreKeys:
_hasUnsavedChangesInKeys:ignoreKeys:
_hasChangesForKey:checkUnsaved:
_singleRelationshipKeysToCheckForChanges
_multiRelationshipKeysToCheckForChanges
isSubsetOfSet:
_addChangesFromObject:except:keep:ignoreRelations:copyingBackingObjects:
_addChanges:copyingBackingObjects:
_addChangesFromObject:toObjects:except:keep:copyingBackingObjects:
updateAfterApplyingChanges:
addMultiChangedObjectValues:forKey:
removeMultiChangedObjectValues:forKey:
multiChangedObjectValuesForKey:
frozenOrMeltedCachedSingleRelationObjectForKey:
frozenOrMeltedCachedMultiRelationObjectsForKey:
_addCachedMeltedObject:forMultiValueKey:
updateMultiValueCacheForChangeSet:preservingExistingAdds:
_applyDefinedAfterFirstSaveFrom:
_applyKnownImmutableValuesFrom:
_updateCachedMeltedObjectSetForMultiValueKey:usingBlock:
_removeCachedMeltedObject:forMultiValueKey:
removeMultiChangedObjectValue:forKey:
replaceMultiChangedObjectValuesWithObjectValues:forKey:
updateMeltedCacheForChangeSet:
_resetMeltedCache
_changeSetForDiff:
_compareAllKnownKeysExceptKeys:forObject:againstObject:compareIdentityKeys:
_compareRelationshipObject1:againstRelationshipObject2:propertiesToIgnore:relationshipObjectKey:
indexOfObjectPassingTest:
_cachedMeltedChildIdentifierToParentMap:
cachedValueForKey:
addChangesFromObject:
refetch
meltedAndCachedMultiRelationCountForKey:
emptyMeltedCache
inverseObjectWithObject:diff:
applyChangeSetFromOtherObject:
cachedMeltedChildIdentifierToParentMap
_numberOfSharedLocksForUnitTesting
isDerivedRelationship
_compareAllKnownKeysExceptKeys:forObject:againstObject:
_compareKnownKeys:forObject:againstObject:
_compareNonIdentityKeys:forObject:againstObject:propertiesToIgnore:
hasMailto
initWithDayOfTheWeek:weekNumber:
decodeIntegerForKey:
encodeInteger:forKey:
dayOfWeek:
dayOfWeek:weekNumber:
_dayOfTheWeek
_weekNumber
Tq,R,N,V_dayOfTheWeek
Tq,R,N,V_weekNumber
componentsForDate:inTimeZone:
systemTimeZone
initWithCalendarIdentifier:
serializedEventWithEvent:
initWithSearchWithCSQuery:inStore:resultHandler:completionHandler:
setFetchAttributes:
setBundleIDs:
initWithQueryString:context:
attributeSet
eventWithUUID:occurrenceDate:
setFoundItemsHandler:
setCompletionHandler:
queryString
queryStringForSearchTerm:matchingTypes:fromStartDate:toEndDate:
_queryStringForPeopleMatchingSearchTerm:
replaceCharactersInRange:withString:
searchWithCSQuery:inStore:resultHandler:completionHandler:
queryStringForSearchTerm:matchingTypes:
query
csQuery
T@"EKEventStore",W,V_eventStore
eventWithRandomUUID
calendarForEntityType:eventStore:
calendarForEntityTypes:eventStore:
createNewReminderCalendar
_clearCGColorCache
backingCalendarWithIdentifier:
_eventKitBundle
colorString
getColorRed:green:blue:
initWithCGColor:
color
setColorString:
allowsBirthdayModifications
readOnly
setReadOnly:
_flagValueWithMask:
_setFlagValue:withMask:
typeDescription:
_validateDeletableHelper:
isMarkedUndeletable
isFamilyCalendar
_anotherCalendarForDefaultSchedulingExists
_anotherCalendarForRemindersExists
eligibleForDefaultSchedulingCalendar
_anyCalendarOfType:inSameSourceExistsPassingTest:
prohibitsScheduling
setProhibitsScheduling:
setSharedOwnerURL:
canModifySuggestedEventCalendar
initWithBytesNoCopy:length:freeWhenDone:
setCanBeShared:
setCanBePublished:
setReminderSource:
setLastSyncErrorUserInfo:
lastSyncErrorUserInfo
shareeWithEKSharee:forCalendar:
ownerForEKCalendar:
filteredSetUsingPredicate:
addAlarms:
removeAlarms:
matchesOneOfMyEmails:
urlMatchesOneOfMyEmails:
isImmutable
currentProcessIsFirstPartyCalendarApp
isSourceManaged:
exportDataWithOptions:
reportSharedCalendarInviteAsJunkForCalendarWithID:accountID:queue:completionBlock:
rowIDsForCalendars:
calendarWithEventStore:
setCGColor:
setAllowsContentModifications:
setIsDefaultSchedulingCalendar:
isInbox
setInbox:
isNotificationsCollection
setNotificationsCollection:
setSubscribed:
isHidden
setHidden:
isImmutableRaw
setImmutable:
isSubscribedCalendarJunk
setIsSubscribedCalendarJunk:
deletionWarningsMask
canMergeWithCalendar:
setAllowsScheduling:
isSharingInvitation
setSharingInvitation:
setSharedOwnerAddress:
publishURL
setPublishURL:
canBePublished
canBeShared
setFacebookBirthdayCalendar:
isHolidaySubscribedCalendar
setSubscribedHolidayCalendar:
setFamilyCalendar:
setMarkedUndeletable:
isMarkedImmutableSharees
setMarkedImmutableSharees:
isSuggestionsCalendar
isIgnoringEventAlerts
setIsIgnoringEventAlerts:
allowsIgnoringSharedEventChangeNotifications
isIgnoringSharedCalendarNotifications
setIsIgnoringSharedCalendarNotifications:
setIsAffectingAvailability:
syncHash
selectionSyncIdentifier
hasEvents
hasTasks
setAllowReminders:
setLastSyncError:userInfo:
calendarError
stripAlarms
setStripAlarms:
stripAttachments
setStripAttachments:
moveSubscribedCalendarToSource:
addSharee:
removeSharee:
hasSharees
shareesAndOwner
selfIdentityAddress
setSelfIdentityAddress:
setOwnerIdentityAddress:
ownerIdentityOrganizer
remove:
isManaged
exportData
setIsJunk:
_cachedJunkStatus
TQ,N,V_cachedJunkStatus
T@"EKSource",&,N
subscribed
TB,R,N,GisSubscribed
immutable
TB,R,N,GisImmutable
T^{CGColor=},N
_color
T^{CGColor=},R,N
alloc
isCurrentUserForScheduling
isCurrentUserForSharing
_isCurrentUserForSharing
_UUID
T@"NSString",R,N,V_UUID
TB,R,N,V_isCurrentUserForSharing
setInfo:
info
urlString
setUrlString:
initWithInfo:url:
dueDateTimeZone
dueDateAllDay
componentsInTimeZone:fromDate:
year
timeZoneForSecondsFromGMT:
_adjustPersistedStartDateComponentsForNewTimeZone:
startDateComponentsRaw
startDateTimeZone
setStartDateTimeZone:
startDateAllDay
setStartDateAllDay:
setDueDate:
T@"NSTimeZone",R,N
initWithAbsoluteDate:
initWithRelativeOffset:
_setEmailAddress:
_setUrlWrapper:
_setType:
relativeOffsetRaw
setRelativeOffsetRaw:
initWithURL:readonly:
resetBackingAlarmWithBackingAlarm:
bundleWithPath:
authorizationStatusForBundle:
_currentAuthorizationStatus
areLocationsAllowedWithAuthorizationStatus:
areLocationsAvailable
alarmWithAbsoluteDate:
areLocationsAllowed
areLocationsCurrentlyEnabled
defaultGeofencedReminderRadius
ownerUUID
defaultAlarm
setSnoozedAlarms:
addSnoozedAlarm:
removeSnoozedAlarm:
setIsSnoozed:
setBookmarkURL:
bookmarkURL
isTopographicallyEqualToAlarm:
soundName
setSoundName:
_soundName
TB,N,GisDefaultAlarm
T@"EKObject",R,N
T@"EKCalendarItem",R,N
T@"EKAlarm",&,N
T@"EKStructuredLocation",C,N
T@"NSString",C,N,V_soundName
extensionBundleIdentifier
extensionWithIdentifier:error:
initWithTitle:url:
initWithTitle:joinMethods:conferenceDetails:
setRequestCompletionBlock:
setUserInfo:
beginExtensionRequestWithOptions:inputItems:error:
virtualConferenceForRoomType:completion:queue:
firstPhoneNumber
setJoinMethods:
setConferenceDetails:
serializationBlockTitle
setSerializationBlockTitle:
_joinMethods
_serializationBlockTitle
T@"NSArray",&,N,V_joinMethods
T@"NSString",&,N,V_conferenceDetails
T@"NSString",&,N,V_serializationBlockTitle
TQ,N,V_source
initWithTitle:identifier:extensionBundleIdentifier:
setRequestCancellationBlock:
setRequestInterruptionBlock:
beginExtensionRequestWithOptions:inputItems:completion:
extensionsWithMatchingAttributes:completion:
virtualConferenceRoomTypesWithCompletion:queue:
originatingExtensionIdentifier
_extensionBundleIdentifier
_originatingExtensionIdentifier
T@"NSString",R,N,V_originatingExtensionIdentifier
T@"NSString",R,N,V_title
T@"NSString",R,N,V_identifier
T@"NSString",R,N,V_extensionBundleIdentifier
isBroadcast
setIsBroadcast:
_isBroadcast
TB,N,V_isBroadcast
shareeWithName:url:
_urlForEmailAddress:andPhoneNumber:
initWithName:url:
initWithName:url:externalID:
shareeWithName:emailAddress:phoneNumber:
setShareeAccessLevel:
shareeAccessLevel
hasTel
stringRemovingTel
_ekShareeStatusFromCalShareeStatus:
_calShareeStatusFromEKShareeStatus:
_ekShareeAccessLevelFromCalShareeAccessLevel:
_calShareeAccessLevelFromEKShareeAccessLevel:
shareeWithName:emailAddress:
shareeWithName:phoneNumber:
shareeWithName:emailAddress:phoneNumber:externalID:
shareeWithUUID:name:emailAddress:phoneNumber:
statusEnumFromString:
statusStringFromEnum:
setSourceIdentifier:
preferredEventPrivateValueRaw
_calEventPrivacyLevelToEKPrivacyLevel:
_ekPrivacyLevelToCalEventPrivacyLevel:
setPreferredEventPrivateValueRaw:
strictestEventPrivateValueRaw
setStrictestEventPrivateValueRaw:
constraintsName
backwardsCompatibleConstraintsPathForName:
_setConstraintsNameWithoutValidation:
isAbsolutePath
constraintsURLForName:
flags2
setFlags2:
flag2:
setFlag2:value:
flag:
setFlag:value:
setDisabled:
delegatedAccountOwnerStoreID
_allCalendars
allCalendars
_countCalendarItemsOfCalType:resultHandler:
cachedConstraintsForSource:
symbolicColorForNewCalendarWithExistingSymbolicNames:
personaIdentifierForAccountIdentifier:
_ekOfficeHoursFromCalDAVOfficeHours:
fetchOfficeHoursForAccountWithID:queue:completionBlock:
_calDAVOfficeHoursFromEKOfficeHours:
setOfficeHours:forAccountWithID:queue:completionBlock:
primaryLocalSourceID
currentProcessHasTestingEntitlement
currentProcessIsPreferences
_validateClientCanModifySources:
isInMainWindow
isInSeparateWindow
port
useSSL
externalIdentificationInfoForAccountID:resultsBlock:
_cacheExternalIdentification
_cacheExternalIdentificationIfNeeded
managedConfigurationAccountAccess
supportsCalendarCreation
sourceWithEventStore:
setSourceType:
setPreferredEventPrivateValue:
setStrictestEventPrivateValue:
setDefaultAlarmOffset:
setDefaultAllDayAlarmOffset:
constraintsDescriptionPath
setConstraintsDescriptionPath:
setConstraintsName:
constraintsDescriptionPathForUnitTesting
setConstraintsDescriptionPathForUnitTesting:
creatorBundleID
setCreatorBundleID:
creatorCodeSigningIdentity
setCreatorCodeSigningIdentity:
setOnlyCreatorCanModify:
setIsInMainWindow:
setIsInSeparateWindow:
doesSyncDefaultAlarmsToServer
setDoesSyncDefaultAlarmsToServer:
wasMigrated
setWasMigrated:
showsNotifications
setShowsNotifications:
usesSelfAttendee
setUsesSelfAttendee:
isEnabled
supportsAlarmAcknowledgedDate
setSupportsAlarmAcknowledgedDate:
setDelegatedAccountOwnerStoreID:
calendarWithExternalIdentifier:
removeCalendarItemsOlderThanDate:entityTypeMask:error:
readWriteCalendarsForEntityType:
countCalendarItemsWithResultHandler:
countCalendarItemsOfType:resultHandler:
displayOrderForNewCalendar
symbolicColorForNewCalendar
personaIdentifier
fetchOfficeHoursWithCompletion:onQueue:
setOfficeHours:withCompletion:onQueue:
sourceError
syncs
ownerName
setOwnerName:
isNestedLocalSource
wantsCommentPromptWhenDeclining
serverHost
serverPort
serverUsesSSL
supportsFreebusy
supportsEventCalendarCreation
prefersSuggestingNewTimeViaEmail
supportsAttendeeEventForwarding
preferUsingEventOrganizerEmailWhenComposingMail
timeOfLastExternalIdentificationCache
setTimeOfLastExternalIdentificationCache:
cachedHost
setCachedHost:
cachedPort
setCachedPort:
cachedOwnerAddresses
setCachedOwnerAddresses:
_isFacebook
_snoozeAlarmRequiresDetach
_timeOfLastExternalIdentificationCache
_cachedHost
_cachedPort
_cachedOwnerAddresses
T@"NSDate",&,N,V_timeOfLastExternalIdentificationCache
T@"NSString",&,N,V_cachedHost
Tq,N,V_cachedPort
T@"NSSet",&,N,V_cachedOwnerAddresses
T@"NSData",&,N
T@"NSSet",R,N
T@"EKAvailabilityCache",R,N
TB,N,GisEnabled
T@"EKSourceConstraints",R,N
T@"NSError",R,N
primaryLocalSource
TB,R,N,GisPrimaryLocalSource
nestedLocalSource
TB,R,N,GisNestedLocalSource
T@"NSNumber",C,N
TB,N,V_isFacebook
TB,N,V_snoozeAlarmRequiresDetach
T@"NSDictionary",R,C,N
inputItems
_allowedItemPayloadClasses
resourceChangeFromEventStore:
eventID
_calendarName
_eventID
_createCount
_updateCount
_deleteCount
T@"NSString",&,N,V_calendarName
TB,N,V_allDay
T@"NSString",&,N,V_eventID
TI,N,V_changeType
T@"NSNumber",&,N,V_createCount
T@"NSNumber",&,N,V_updateCount
T@"NSNumber",&,N,V_deleteCount
setScheduleStatus:
fetchCalendarChangesInStore:resultHandler:
fetchCalendarChangesInSource:resultHandler:
colorChanged
orderChanged
_colorChanged
_orderChanged
TB,R,N,V_colorChanged
TB,R,N,V_orderChanged
locationOfInterest
mapItem
customLabel
countryCode
thoroughfare
locality
initWithType:customLabel:mapItemName:addressCountryCode:addressThoroughFare:addressLocality:
initWithPredictedLocationOfInterest:
mapItemName
addressCountryCode
addressThoroughfare
addressLocality
rtPredictedLocationOfInterest
_customLabel
_mapItemName
_addressCountryCode
_addressThoroughfare
_addressLocality
_rtPredictedLocationOfInterest
T@"RTPredictedLocationOfInterest",R,N,V_rtPredictedLocationOfInterest
T@"NSString",R,C,N,V_customLabel
T@"NSString",R,C,N,V_mapItemName
T@"NSString",R,C,N,V_addressCountryCode
T@"NSString",R,C,N,V_addressThoroughfare
T@"NSString",R,C,N,V_addressLocality
_travelTimeWithStartCoordinate:endCoordinate:arrivalDate:withRouteType:completionBlock:
findCoordinatesForLocation:completionBlock:
isCurrentLocation
travelTimeFrom:to:arrivalDate:withRouteTypes:withCompletionBlock:
travelTimeFrom:to:arrivalDate:withRouteType:withCompletionBlock:
mapItemForCurrentLocation
placemark
addressDictionary
initWithCoordinate:addressDictionary:
initWithPlacemark:
setDestination:
setArrivalDate:
initWithRequest:
expectedTravelTime
setStart:
setEnd:
setDuration:
setRoute:
_updateLocation:withMapItem:forRoute:withCompletionBlock:
calculateETAWithCompletionHandler:
postalAddressWithAddressBookDictionaryRepresentation:
stringFromPostalAddress:style:
setPlacemark:
placemarkForLocation:withCompletionBlock:
placemarkForAddress:withCompletionBlock:
geocodeAddressString:completionHandler:
confidence
initWithLatitude:longitude:
fetchLocationsOfInterestAssociatedToIdentifier:withHandler:
defaultManager
geocodeAddress:withCompletionBlock:
estimateGeolocationFromHistoricDevicePositionAtLocation:withCompletionBlock:
controlCharacterSet
invert
whitespaceAndNewlineCharacterSet
formUnionWithCharacterSet:
componentsSeparatedByCharactersInSet:
setGeoLocation:
region
locationWithPlacemark:
_stringByStrippingControlCharactersFromString:
_handle
placemarkWithGEOMapItem:
_place
sharedService
handleForMapItem:
geoLocation
_clearGeoLocationCache
radiusRaw
setRadiusRaw:
stringByReplacingOccurrencesOfString:withString:
stringByRemovingPercentEncoding
resetBackingLocationWithBackingLocation:
isImprecise
setImprecise:
isEqualToData:
setRouteType:
localizedStringForLabel:
capitalizedString
contactType
contactIdentifierIsMe:
locationWithMapItem:
locationWithGEOMapItem:
displayLabelForContact:unlocalizedLabel:
cacheKey
geoURLString
_imprecise
_predictedLOI
imprecise
TB,N,GisImprecise,V_imprecise
T@"EKPredictedLocationOfInterest",&,N,V_predictedLOI
prediction
TB,R,N,GisPrediction
T@"CLLocation",&,N
entityID
initWithEntityType:rowID:temporary:
scheme
path
characterAtIndex:
substringFromIndex:
pathComponents
decodeIntForKey:
decodeBoolForKey:
encodeInt:forKey:
encodeBool:forKey:
initWithEntityType:entityID:generation:
entityName
EKObjectIDsFromData:range:
bytes
objectIDWithURL:
CADObjectIDsFromEKObjectIDs:withGeneration:
EKObjectIDsFromCADObjectIDs:
initWithDictionaryRepresentation:
dictionaryRepresentation
_temporary
_entityType
_rowID
T@"CADObjectID",R,N
_occurrenceCount
T@"NSDate",R,N,V_endDate
TQ,R,N,V_occurrenceCount
setSequenceNumber:
setHasNotes:
setHasRecurrenceRules:
setHasAttendees:
initWithEntityName:toMany:inversePropertyNames:ownsRelated:
inversePropertyIsApplicable
_entityName
_toMany
_ownsRelated
_inversePropertyNames
_inversePropertyIsApplicable
T@?,C,N,V_inversePropertyIsApplicable
decodeObjectOfClasses:forKey:
getResourceValue:forKey:error:
createTempDestinationURLWithExtension:
archiveURLToFile:toFile:createPKZipArchive:
setURLForPendingFileCopy:
_copyFileAtURLToTemporaryDirectory:
setScheme:
URLByAppendingPathComponent:
URLByAppendingPathExtension:
pathExtension
dataWithContentsOfURL:options:error:
writeToFile:atomically:
URLForPendingFileCopy
fileName
initWithFilepath:
localURL
compareFileNames:
T@"NSNumber",&,N
_urlForMapItemHandles:options:
_locationStringForStructuredLocation:withTitle:
_urlForLocation:address:label:options:
hasPrefix:
CalContainsSubstring:
eventForUID:occurrenceDate:checkValid:
geocodeLocationString:withCompletionBlock:
_mapItemFromHandle:completionHandler:
mapsURLForLocation:onEvent:hasMapItemLaunchOptionFromTimeToLeaveNotification:
geocodeEventIfNeeded:
fetchEventChangesInStore:resultHandler:
fetchEventChangesInSource:resultHandler:
fetchEventChangesInCalendar:resultHandler:
initWithEventStore:limitedToSource:visibilityChangedCallback:queue:activate:
_defaultQueue
visibilityChangedNotificationName
visibilityChangedCallback
initWithNotificationName:callback:queue:
setActive:
notificationListener
_calendarsThatAreVisible:filteredByIdentity:
limitedToSource
_deselectedCalendarIdentifiers
initWithEventStore:visibilityChangedCallback:queue:
initWithEventStore:limitedToSource:visibilityChangedCallback:queue:
visibleCalendars
invisibleCalendars
visibleCalendarsForAllIdentities
invisibleCalendarsForAllIdentities
initWithEventStore:visibilityChangedCallback:
initWithEventStore:limitedToSource:visibilityChangedCallback:
setInvisibleCalendars:
setLimitedToSource:
_active
_invisibleCalendars
_limitedToSource
_visibilityChangedCallback
_notificationListener
T@?,R,N,V_visibilityChangedCallback
T@"CalDarwinNotificationListener",R,N,V_notificationListener
TB,V_active
T@"NSArray",&,N,V_invisibleCalendars
T@"EKSource",&,N,V_limitedToSource
createAttachment
urlOnDisk
setUrlOnDisk:
contentTypeFromServer
setContentTypeFromServer:
_urlOnDisk
_contentTypeFromServer
T@"NSURL",&,N,V_urlOnDisk
T@"NSString",&,N,V_contentTypeFromServer
weakEventStore
unsafeRawPointer
_unsafeRawPointer
_weakEventStore
T^v,R,N
initWithOptions:path:
initWithOptions:path:allowDelegateSources:
initWithEKOptions:path:changeTrackingClientId:enablePropertyModificationLogging:allowDelegateSources:
ekEventStoreInitOptionsFromCalDatabaseInitOptions:
processInfo
processName
setValidator:
_accessStatusChanged
calDatabaseInitOptionsFromEKEventStoreInitOptions:
setDatabaseInitOptions:
setChangeTrackingClientId:
setEnablePropertyModificationLogging:
setDatabaseDirectory:
setAllowDelegateSources:
hashTableWithOptions:
eventStoreChangedDistributedNotificationName
_requestAccessForEntityType:
currentProcessIsCalendarDaemon
currentProcessIsDataAccess
currentProcessHasContactsUIEntitlement
_skipTCCAccessCheck
authorizationStatusForEntityType:
requestAccessToEntityType:completion:
databaseDirectory
currentProcessHasBirthdayModificationEntitlement
setSourceAccountManagement:withBundleID:
setManagement:
setManagementBundleIdentifier:
setUnitTesting:
setSpotlightTesting:
_handleExternalDatabaseChangeNotification:synchronously:
_databaseChangedExternally:processSynchronously:
_defaultCalendarChangedExternally
_defaultAlarmChangedExternally
postNotificationName:object:
databaseInitOptions
_postEventStoreChangedNotificationWithChangeType:changedObjectIDs:
setRestoreGenerationChangedAndGetPreviousValue:
_resetAndNotifyAfterDatabaseRestoreGenerationChanged
database
_removeCachedCalendarWithCADID:
_clearCachedSources
_clearCachedConstraintsForSourceWithCADObjectID:
_unregisterObject:
_detachObject:
objectsForKeys:notFoundMarker:
_clearCachedCalendars
_cacheCalendarWithCADObjectID:withDefaultLoadedPropertyValues:forKeys:
_validateCADObjectIDs:completion:
_modifiedObjectIdentifiersForChangedObjectIDs:
calendarSourcesAndDefaultsQueue
setRestoreGenerationChanged:
objectWithObjectID:
_cacheSourceWithCADObjectID:withDefaultLoadedPropertyValues:forKeys:
_loadSourcesIfNeeded
_sourceWithID:
publicObjectWithFetchedObjectID:
_clearAllCaches
_localSourceWithEnableIfNeeded:
stampedCopyWithGeneration:
_loadCalendarsIfNeeded
_calendar:supportsEntityType:
restoreGeneration
shouldSaveCalendarAsEventCalendar:
_saveCalendar:commit:error:
shouldSaveCalendarAsReminderCalendar:
saveCalendar:error:
canModifyCalendarDatabase
_removeCalendar:commit:error:
removeCalendar:error:
eventWithIdentifier:
calendarItemWithIdentifier:
rangeOfString:
_eventWithEventIdentifier:
_eventWithRecurrenceIdentifier:
validatedNonDeletedPersistentObjectWithObjectID:
validatedNonDeletedPublicObjectWithObjectID:
_eventWithURI:checkValid:
_parseURI:expectedScheme:identifier:options:
closestCachedOccurrenceToDate:forEventUID:
initWithEntityType:entityID:
eventWithUniqueId:occurrenceDate:
_saveEvent:span:commit:error:
_isRegisteredObject:
_removeEvent:span:commit:error:
setInvitationStatus:forEvents:error:
initWithContentsOfFile:
_importEventsWithExternalIDs:fromICSData:intoCalendarsWithIDs:options:batchSize:
ICSDataForCalendarItems:options:
calendarWithCADID:
defaultCalendarForNewEventsInDelegateSource:
setDefaultCalendar:forNewEventsInDelegateSource:
defaultCalendarForNewReminders
saveReminder:commit:error:
saveReminder:error:
removeReminder:commit:error:
removeReminder:error:
reminderWithUniqueId:
reminderWithIdentifier:
remindersWithExternalIdentifier:
initWithExternalIdentifier:entityType:
setCalendars:
_calendarItemsMatchingPredicate:
calendarItemsWithExternalIdentifier:inCalendars:
_calendarItemsWithExternalIdentifier:inCalendars:entityTypes:
remindersMatchingPredicate:
_validateReminderPredicate:
fetchRemindersMatchingPredicate:completion:
predicateForRemindersInCalendars:
predicateForCalendarStoreForRemindersInCalendars:
predicateWithCalendars:
setShouldLoadDefaultProperties:
setDefaultPropertiesToLoad:
predicateForIncompleteRemindersWithDueDateStarting:ending:calendars:
predicateForCompletedRemindersWithCompletionDateStarting:ending:calendars:
_predicateForRemindersWithDate:useAsCompletionDate:calendars:limitToCompletedOrIncomplete:completed:includeDatesBefore:sortOrder:preloadProperties:maxResults:
calendarDateForDay
calendarDateByAddingDays:
setUseCompletionDateAsAlternate:
setLimitToCompletedOrIncomplete:
setDueAfter:
setDueBefore:
setSortOrder:
setMaxResults:
_predicateForRemindersWithDate:useAsCompletionDate:calendars:limitToCompletedOrIncomplete:completed:includeDatesBefore:sortOrder:preloadProperties:
predicateForRemindersWithTitle:listTitle:limitToCompletedOrIncomplete:completed:dueAfter:dueBefore:searchTerm:sortOrder:maxResults:
setListTitle:
setSearchTerm:
closestCachedOccurrenceToDate:forEventUID:prefersForwardSearch:
sharedCalendarInvitationsForEntityTypes:
_populateCalendarsByIdentifierIfNeeded
_eventCalendarWithIdentifier:
scheduledTaskCacheFetchTasksOnDay:maxResults:
predicateForScheduledRemindersInCalendars:onDay:
fetchingSharedCalendarInvitationsDisallowed
setFetchingSharedCalendarInvitationsDisallowed:
respondToSharedCalendarInvite:forCalendarWithID:accountID:queue:completionBlock:
removeResourceChanges:error:
resourceChangesForEntityTypes:
eventNotificationsAfterDate:
eventNotificationsAfterDate:filteredByShowsNotificationsFlag:earliestExpiringNotification:
initWithTimeIntervalSinceReferenceDate:
removeInviteReplyNotifications:error:
updateFolderListForAccountID:andDataclasses:isUserRequested:
_shouldRefreshSource:
_refreshDASource:isUserRequested:
refreshSourcesIfNecessary:
_refreshFolderListForSource:isUserRequested:
refreshFolderListsIfNecessary:
setByAddingObjectsFromSet:
_registerObjectImmediate:
makeObjectsPerformSelector:withObject:
classForEntityName:
_addFetchedObjectWithID:
weakObjectsHashTable
_forgetRegisteredObjects
_commitObjectsWithIdentifiers:error:
_filteredObjectsWithIdentifiers:fromObjects:
_markObjectsWithIdentifiersAsCommitted:
_clearEventsNeedingGeocodingWithCommittedObjects:
_iMIPScheduledEvent:attendeesDeleted:
shouldSendEmailForEvent:removedAttendees:
initWithEvent:andAttendees:
shouldSendEmailForEvent:withDiff:
initWithEvent:withDiff:
objectIDsNotSendingNotifications
_removeCachedCalendarFromSource:
_fetchAndClearEventsNeedingGeocoding:withCommittedObjects:
sendEmail
_filteredArrayWithIdentifiers:fromObjects:
_validateEventPredicate:
predicateForEventsWithStartDate:endDate:calendars:prefetchHint:exclusionOptions:
_addDaysSpannedByEvent:toCountedSet:inRange:withNSCalendar:
fetchEventsMatchingPredicate:resultHandler:
intersectsRangeWithStartDate:endDate:allowSinglePointIntersection:
earlierDate:
setMinute:
enumerateDatesStartingAfterDate:matchingComponents:options:usingBlock:
predicateForEventsWithStartDate:endDate:calendarIdentifiers:exclusionOptions:
_nextEventWithFetchBlock:steps:
predicateWithStartDate:endDate:timeZone:calendars:loadDefaultProperties:
predicateWithStartDate:endDate:timeZone:eventUUID:calendars:
setExcludeTimedEvents:
setExcludeAllDayEvents:
setExcludeDeclined:
setExcludeProposed:
setExcludeDeclinedUnlessProposed:
predicateForEventsWithStartDate:endDate:calendarIdentifiers:prefetchHint:exclusionOptions:
initWithTimeZone:startDate:endDate:title:location:notes:participants:limit:
predicate
predicateWithLimit:
predicateWithCalendarIDs:
travelEligibleEventsInCalendars:startDate:endDate:
predicateForPotentialTravelEventsInCalendars:startDate:endDate:
initWithCalendarIDs:startDate:endDate:
setStartDateRestrictionThreshold:
predicateWithStartDate:title:calendars:
initWithSearchString:timeZone:
initWithSearchString:startDate:timeZone:
predicateForAllSuggestedEvents
initWithOpaqueKey:
initWithExtractionGroupIdentifier:
predicateForEventsWithStartDate:endDate:calendars:
initWithCalendarIDs:startDate:endDate:contacts:
initWithEntityType:filters:calendar:
initWithProperty:comparison:integerValue:
initWithProperty:comparison:stringValue:
initWithEntityType:filters:source:
initWithProperty:comparison:dateValue:
initWithFilters:operation:
initWithPredicate:limitWithStartDate:endDate:mustStartInInterval:
initWithEntityType:filters:calendars:
initWithURL:limit:
registerForDetailedChangeTrackingInSource:error:
_processChangedObjectIDsWithToken:errorCode:changesTruncated:latestToken:changeData:insertCount:updateCount:deleteCount:resultHandler:
constraintsCacheQueue
_cachedConstraints
_fetchConstraintsForSourceWithCADObjectID:
set_cachedConstraints:
getBytes:length:
notificationCollectionCacheQueue
_cachedNotificationCollections
_fetchPersistentNotificationCollectionForSourceWithCADObjectID:
set_cachedNotificationCollections:
beginCalDAVServerSimulationWithHostname:
endCalDAVServerSimulationWithHostname:
createDirectoryAtURL:withIntermediateDirectories:attributes:error:
initWithURL:
URLByDeletingLastPathComponent
reminderStoreContainerTokenProvider
setReminderStoreContainerTokenProvider:
setDenyAccessToEvents:
setDenyAccessToReminders:
_isConfirmedSuggestedEvent:uniqueKey:
T@?,C
restoreGenerationChanged
setFetchingSharedCalendarInvitationsDisallowedAndGetPreviousValue:
initWithAccessToDelegateSources
initWithOptions:path:changeTrackingClientId:enablePropertyModificationLogging:allowDelegateSources:
databasePath
setSourceAccountManagement:
_setIsUnitTesting:
_setIsSpotlightTesting:
_isUnitTesting
_simulateDaemonCrashForUnitTests
changesSinceSequenceNumber:
reminderStoreChanged
handleExternalDatabaseChangeNotification:
eventStoreIdentifier
sourcesEnabledForEntityType:
_deletableSources
getSubscribedCalendarsSourceCreateIfNeededWithError:
delegateSources
delegateSourcesForSource:
parentSourceForDelegateSource:
fetchGrantedDelegatesForSource:results:
updateGrantedDelegate:action:source:completion:
localSource
localSourceEnableIfNeeded
localSubscribedCalendarSource
localBirthdayCalendarSource
sourceWithExternalID:
saveSource:commit:error:
removeSource:commit:error:
hideCalendarsFromNotificationCenter:error:
_deletableCalendars
readWriteCalendarCountForEntityType:
deleteCalendar:forEntityType:error:
eventsWithIdentifiers:
eventWithUniqueIdentifier:
eventWithExternalURI:
_eventOccurrenceWithURI:
eventForUID:occurrenceDate:
allEventsWithUniqueId:occurrenceDate:
saveEvent:span:error:
removeEvent:span:error:
setInvitationStatus:forEvent:error:
importICS:intoCalendar:options:
importEventsWithExternalIDs:fromICSData:intoCalendars:options:batchSize:
ICSDataForCalendarItems:preventLineFolding:
copyCGColorForNewCalendar
defaultLocalCalendar
acquireDefaultCalendarForNewEvents
setDefaultCalendarForNewEvents:
acquireDefaultCalendarForNewReminders
_removeReminder:commit:error:
reminderWithExternalURI:
calendarItemsWithUniqueIdentifier:inCalendar:
calendarItemsWithExternalIdentifier:
remindersWithExternalIdentifier:inCalendars:
_remindersMatchingPredicate:
countOfRemindersMatchingPredicate:
reminderObjectIDsMatchingPredicate:
predicateForRemindersInCalendars:preloadProperties:
predicateForPreloadedIncompleteRemindersWithDueDate:calendars:sortOrder:preloadProperties:
predicateForPreloadedIncompleteRemindersWithDueDate:calendars:sortOrder:preloadProperties:maxResults:
predicateForPreloadedCompletedRemindersWithDueDate:calendars:sortOrder:preloadProperties:
predicateForRemindersWithTitle:listTitle:limitToCompletedOrIncomplete:completed:dueAfter:dueBefore:searchTerm:sortOrder:
fetchProperties:forReminders:
eventWithUUID:
doEvents:haveOccurrencesAfterDate:
calendarWithUniqueID:
calendarWithExternalID:
calendarWithExternalURI:
countOfRemindersWithContactIdentifier:
remindersWithContactIdentifier:
occurrenceCacheOccurrencesAreBeingGenerated
occurrenceCacheGetOccurrencesForCalendars:onDay:
occurrenceCacheGetOccurrencesForCalendars:
scheduledTaskCacheFetchDaysAndTaskCounts
scheduledTaskCacheFetchTasksOnDay:
rebuildOccurrenceCache
birthdayCalendarEnabled
setBirthdayCalendarEnabled:
suggestedEventCalendar
insertSuggestedEventCalendar
removeSuggestedEventCalendar
confirmSuggestedEvent:
acceptSuggestedEvent:
deleteSuggestedEvent:
_SGSuggestionsServiceClass
naturalLanguageSuggestedEventCalendar
unacknowledgedEventCount
notifiableEventCount
saveNotification:commit:error:
saveNotificationCollection:commit:error:
respondToSharedCalendarInvitation:withStatus:
markResourceChangeAlertedAndSave:error:
removeResourceChange:error:
removeResourceChangesForCalendarItem:error:
eventNotifications
eventNotificationCountForSource:excludingDelegateSources:filteredByShowsNotificationsFlag:excludeRowIDs:
acknowledgeNotifications:error:
inboxRepliedSectionItems
attachmentWithUUID:
saveAttachment:commit:error:
refreshSourcesIfNecessary
refreshSource:userRequested:
_reregisterObject:oldID:
_setNeedsCommitForRemoteChanges
commitObjects:error:
eventObjectIDsMatchingPredicate:
fetchObjectsMatchingPredicate:completion:
objectsMatchingPredicate:
fetchEventCountsInRange:inCalendars:exclusionOptions:completion:
cancelFetchRequest:
nextEventWithCalendarIdentifiers:exclusionOptions:
alarmWithUUID:
alarmWithExternalID:
alarmOccurrencesBetweenStartDate:endDate:inCalendars:completion:
locationBasedAlarmOccurrencesWithCompletion:
vehicleTriggerAlarmOccurrencesWithCompletion:
predicateForEventsWithStartDate:endDate:uniqueID:calendars:
predicateForAssistantEventSearchWithTimeZone:startDate:endDate:title:location:notes:participants:calendars:limit:
predicateForNotifiableEvents
predicateForNotificationCenterVisibleEvents
predicateForUnacknowledgedEvents
predicateForUnalertedEvents
predicateForUpcomingEventsWithLimit:
predicateForMasterEventsInCalendars:
hasImmediatelyEligibleTravelEvents
predicateForUpNextEventsInCalendars:startDate:endDate:startDateRestrictionThreshold:
predicateForEventsWithStartDate:title:source:
predicateForNaturalLanguageSuggestedEventsWithSearchString:startDate:
predicateForEventsCreatedFromSuggestion
predicateForEventCreatedFromSuggestionWithOpaqueKey:
predicateForEventsCreatedFromSuggestionWithExtractionGroupIdentifier:
predicateForEventsWithStartDate:endDate:calendars:matchingContacts:
predicateForCalendarItemsOfType:inCalendar:
predicateForMasterEventsWithExternalTrackingStatusInCalendar:
predicateForCalendarItemsOfType:withUniqueIdentifier:inCalendar:
predicateForCalendarItemsOfType:withUniqueIdentifier:inSource:
predicateForCalendarItemsOfType:withExternalID:inCalendar:
predicateForCalendarItemsOfType:withExternalID:inSource:
predicateForMasterEventsWithStartDate:title:inCalendar:
predicateForMasterEventsWithOccurrencesWithStartDate:endDate:inCalendar:
predicateForMasterEventsWithInvitationsAndOccurrencesAfter:inCalendar:
predicateForNonrecurringEventsWithStartDate:endDate:calendars:
predicateForIncompleteRemindersAndRemindersCompletedAfter:inCalendar:
timeToLeaveLocationAuthorizationStatus
predicateForEventsWithConferenceURL:limit:
registerForDetailedChangeTracking:
unregisterForDetailedChangeTracking:
fetchChangedObjectIDsSinceToken:resultHandler:
changedObjectIDsSinceToken:resultHandler:
markChangedObjectIDsConsumedUpToToken:
markIndividualChangesConsumed:error:
clearSuperfluousChanges
purgeChangelog
cacheValidationStatusForAddress:status:
addressValidationStatus:
pushSpotlightUpdatesForCalendarItemUUIDs:
waitForSpotlightUpdates
notificationCollectionForSource:
fetchStorageUsage
setCachedEKSourceConstraintObject:forKey:
postSyntheticRouteHypothesis:forEventWithExternalURL:
endCalDAVServerSimulation:
backupDatabaseToDestination:withFormat:error:
restoreDatabaseFromBackup:withFormat:error:
setDefaultCalendarForNewReminders:
insertedObjects
setInsertedObjects:
deletedObjects
setDeletedObjects:
updatedObjects
setUpdatedObjects:
objectsPendingSave
setObjectsPendingSave:
setObjectIDsNotSendingNotifications:
needsCommitForRemoteChanges
setNeedsCommitForRemoteChanges:
setDatabase:
lastDatabaseNotificationTimestamp
setLastDatabaseNotificationTimestamp:
registeredQueue
unsavedChangesQueue
dbChangedQueue
registeredObjects
setRegisteredObjects:
inboxRepliedSectionHasContent
_birthdaySourceID
_defaultCalendarsForNewEventsIDBySourceID
_suggestedEventCalendarID
_naturalLanguageSuggestedEventCalendarID
_subscribedCalendarsSourceID
_calendarsByIdentifier
_cachedValidatedAddresses
_objectsPendingCommit
_eventsNeedsGeocoding
_defaultTimedAlarmOffset
_defaultAllDayAlarmOffset
_allowsBirthdayCalendarModifications
_hasAccessToEvents
_hasAccessToReminders
_accessDetermined
_reminderSourceMapLock
_isIgnoringExternalChanges
_flagsLock
_needsCommitForRemoteChanges
_inboxRepliedSectionHasContent
_insertedObjects
_deletedObjects
_updatedObjects
_objectsPendingSave
_objectIDsNotSendingNotifications
_database
_lastDatabaseNotificationTimestamp
_calendarSourcesAndDefaultsQueue
_registeredQueue
_unsavedChangesQueue
_dbChangedQueue
_constraintsCacheQueue
_notificationCollectionCacheQueue
__cachedConstraints
__cachedNotificationCollections
_reminderSourceIDToEventSourceIDMapping
_eventSourceIDToReminderSourceIDMapping
_registeredObjects
T@"NSHashTable",&,N,V_insertedObjects
T@"NSMutableSet",&,N,V_deletedObjects
T@"NSMutableSet",&,N,V_updatedObjects
T@"NSMutableSet",&,N,V_objectsPendingSave
T@"NSMutableSet",&,N,V_objectIDsNotSendingNotifications
TB,N,V_needsCommitForRemoteChanges
T@"EKDaemonConnection",&,N,V_database
TQ,N,V_lastDatabaseNotificationTimestamp
T@"NSObject<OS_dispatch_queue>",R,N,V_calendarSourcesAndDefaultsQueue
T@"NSObject<OS_dispatch_queue>",R,N,V_registeredQueue
T@"NSObject<OS_dispatch_queue>",R,N,V_unsavedChangesQueue
T@"NSObject<OS_dispatch_queue>",R,N,V_dbChangedQueue
T@"NSObject<OS_dispatch_queue>",R,N,V_constraintsCacheQueue
T@"NSObject<OS_dispatch_queue>",R,N,V_notificationCollectionCacheQueue
T@"EKDataProtectionObserver",&,N,V_dataProtectionObserver
T@"NSMutableDictionary",&,N,V__cachedConstraints
T@"NSMutableDictionary",&,N,V__cachedNotificationCollections
T@"EKReminderStore",R,N,V_reminderStore
T@"NSDictionary",&,N,V_reminderSourceIDToEventSourceIDMapping
T@"NSDictionary",&,N,V_eventSourceIDToReminderSourceIDMapping
T^{os_unfair_lock_s=I},R,N
T@"NSMutableDictionary",&,N,V_registeredObjects
TB,R,N,V_inboxRepliedSectionHasContent
T@"NSString",R,C,N
T@"EKAlarm",R,N
T@"EKDaemonConnection",R
_propertyWithFlagDidChange:
T@"EKCalendar",R,&,N
T@"EKCalendarItem",R,&,N
T@"NSURL",R,C,N
TI,R,N
T@"NSNumber",R,N
calendarItemPropertyName
fetchSourceChangesInStore:resultHandler:
bundleIdentifier
parentAppBundleIdentifierForExtensionBundleIdentifier:
applicationRecordForURL:completionHandler:
applicationRecordForURL:
_applicationRecordFromAppLink:appLinkError:orCustomScheme:
getAppLinkWithURL:completionHandler:
appLinksWithURL:limit:error:
targetApplicationRecord
initWithBundleIdentifier:allowPlaceholder:error:
initWithURL:error:
bundleRecord
initWithBundleIdentifier:error:
containingBundleRecord
isTUConversationLink:
_findExtensionIdentifierForURL:completionHandler:
conferenceImageSize
virtualConference:likelyCameFromRoomTypes:completionHandler:
synchronousAppTitleOnlyForURL:
initWithName:emailAddress:address:isCurrentUser:
organizerWithName:emailAddress:address:isCurrentUser:
T@"NSString",&,D,N
_conflictedParticipants
T@"NSArray",&,N,V_conflictedParticipants
fetchContactChangesInStore:resultHandler:
fetchContactChangesInSource:resultHandler:
fetchContactChangesInCalendar:resultHandler:
initWithName:emailAddress:address:
initWithEmailAddress:name:
initWithAddress:name:
lastModified
icsMethod
iCalendarDocumentWithMethod:
emailsFromAttendees:
emailSubject
myEmailAddress
setMethod:
setX_calendarserver_access:
initWithYear:month:day:hour:minute:second:timeZone:
setDtstamp:
setAttendee:
URLForMail:
myShortDisplayName
setCn:
setRsvp:
sequence
setSequence:
setX_wr_rsvpneeded:
emailBody
emailAttachmentName
attachmentData
T@"EKEvent",&,V_event
localizedLongDate
localizedShortTime
_attachmentData
remAccount
_sourceIdentifier
_remAccount
T@"NSString",R,N,V_sourceIdentifier
T@"REMAccount",R,N,V_remAccount
credentialsWithUsername:password:
username
password
_username
_password
T@"NSString",R,N,V_username
T@"NSString",R,N,V_password
reminderSource
_reminderSource
T@"EKFrozenReminderSource",&,V_reminderSource
initWithConference:range:
_conference
_range
T{_NSRange=QQ},R,N,V_range
T@"EKVirtualConference",R,N,V_conference
_ekVirtualConferenceFromCalVirtualConference:
blockTitle
_calJoinMethodsFromEKJoinMethods:
_calSourceFromEKSource:
initWithTitle:joinMethods:conferenceDetails:source:isWritable:
_ekJoinMethodsFromCalJoinMethods:
_ekSourceFromCalSource:
initWithTitle:URL:isBroadcast:
_calJoinMethodFromEKJoinMethod:
CalMap:
_ekJoinMethodFromCalJoinMethod:
ekDeserializationResultFromCalDeserializationResult:
calVirtualConferenceFromEKVirtualConference:
serializeConference:serializationBlockTitle:
setIsAbsolute:
_isAbsolute
_relativeOffset
_absoluteDate
Td,N,V_relativeOffset
T@"NSDate",C,N,V_absoluteDate
TB,N,V_isAbsolute
_updateSpecifier
_clearArrays
_parseSpecifierIfNeeded
_appendDaysOfTheWeek:toSpecifier:
_appendIndexList:toSpecifier:propertyKey:
_parseDaysOfWeek:range:
_parseIndexList:range:
stringWithCharacters:length:
_specifier
_dirty
_parsed
fetchExceptionDateChangesInStore:resultHandler:
fetchExceptionDateChangesInSource:resultHandler:
fetchExceptionDateChangesInCalendar:resultHandler:
bundleWithIdentifier:
CalAutoCommentPrefix
base64EncodedDataWithOptions:
setTotalOccurrencesInSeries:
setTotalConflictsInSeries:
setConflictPeriodForSeries:
setConflictingDates:
setConflictingEvents:
setNeedsActionEvents:
setTotalConflictingEvents:
setTotalNeedsActionEvents:
totalConflictsInSeries
totalOccurrencesInSeries
_dateRangeToScanForConflictsForEvent:dateForNow:
_maxRangeLengthForRule:
dateRangeToScanForConflictsForEvent:
calendarIdentifiersToScanForConflictsForEvent:
initWithConflictingDates:conflictingEvents:needsActionEvents:totalOccurrencesInSeries:conflictPeriodForSeries:
conflictingDates
conflictingEvents
needsActionEvents
totalConflictingEvents
totalNeedsActionEvents
conflictPeriodForSeries
_conflictingDates
_conflictingEvents
_needsActionEvents
_totalOccurrencesInSeries
_totalConflictsInSeries
_totalConflictingEvents
_totalNeedsActionEvents
_conflictPeriodForSeries
T@"NSArray",&,V_conflictingDates
T@"NSArray",&,V_conflictingEvents
T@"NSArray",&,V_needsActionEvents
TQ,V_totalOccurrencesInSeries
TQ,V_totalConflictsInSeries
TQ,V_totalConflictingEvents
TQ,V_totalNeedsActionEvents
T@"CalDateRange",&,V_conflictPeriodForSeries
setSpan:
_creationDate
_span
T@"NSDate",&,N,V_creationDate
T@"EKAvailabilitySpan",&,N,V_span
_updateStateForDisabledOrCollapsedItemWithUID:delegateID:state:withKey:withNotification:
_disabledOrCollapsedItemsForDelegateID:withKey:
disabledCalendarsForDelegateWithUID:
_keyForDelegateID:
removeObject:inRange:
_displayOrderForSourceWithIdentifier:key:
_updateDisplayOrderForSources:key:
indexOfObject:
calendarPreferences
sharedCalendarNotificationsDisabled
setSharedCalendarNotificationsDisabled:
invitationNotificationsDisabled
setInvitationNotificationsDisabled:
showDeclinedEventsEnabled
setShowDeclinedEventsEnabled:
timeToLeaveEnabled
setTimeToLeaveEnabled:
updateCheckedStateForCalendarWithUID:delegateID:state:
checkedStateForCalendarWithUID:delegateID:
disabledCalendarsForMainWindow
updateExpandedStateForTopLevelNodeWithUID:state:
expandedStateForTopLevelNodeWithUID:
_checkedStateForDisabledOrCollapsedItemWithUID:delegateID:withKey:
displayOrderForLocalGroupWithSourceIdentifier:
updateDisplayOrderForLocalGroupsWithSourceIdentifiers:
displayOrderForAccounts
displayOrderForAccountWithSourceIdentifier:
updateDisplayOrderForAccountsWithSourceIdentifiers:
calPreferences
setCalPreferences:
_calPreferences
T@"CalPreferences",&,V_calPreferences
T@"NSMutableArray",&,N,V_conflictedParticipants
currentProcessHasBooleanEntitlement:
get_suggestedLocationsTestMode
_mockLocationForEvent:
predictedLocationOfInterestForEventTitle:eventLocation:calendarIdentifier:timeout:error:
geoMapItemHandle
horizontalUncertainty
resolveMapItemLocallyFromHandle:completionHandler:
userInteractionWithPredictedLocationOfInterest:interaction:feedback:
ticketForReverseGeocodeCoordinate:shiftLocationsIfNeeded:traits:
geoAddress
structuredAddress
submitWithHandler:networkActivity:
enumerateKeysAndObjectsWithOptions:usingBlock:
predicateWithFormat:
userInteractionWithPredictedLocationOfInterest:interaction:
calendarWithRandomUUID
T@"EKPersistentSource",&,D,N
colorDisplayOnly
TB,D,N,GisColorDisplayOnly
T@"NSSet",C,D,N
publishedURL
published
TB,D,N,GisPublished
@16@0:8
v24@0:8@16
v16@0:8
@"NSSet"
#16@0:8
@40@0:8q16Q24@32
q20@0:8i16
i24@0:8q16
@24@0:8q16
@24@0:8Q16
@32@0:8@16B24B28
q24@0:8@16
@24@0:8@16
@32@0:8@16@24
@24@0:8^{_NSZone=}16
@88@0:8q16q24@32@40@48@56@64@72@80
@40@0:8q16q24@32
q16@0:8
v24@0:8q16
v24@0:8Q16
Q16@0:8
i16@0:8
v20@0:8i16
B16@0:8
B24@0:8@16
@24@0:8B16B20
@28@0:8@16B24
B40@0:8@16@24@32
@"EKRecurrenceHelper"
@36@0:8{?=IIb1b1b1b1b1b1b1b1b1b1b1b1b1b1b1b1b1b1b1b1b1b1b1b1b1b1b1b1b1b1b1b1b1b1b1b1b1b1b1b1b1b1b1b1b1b1b1b1b1b1b1b1b1b1b1b1b1b1b1b1b1b1b1b1b1b1b1b1b1b1b1b1b1b1}16
v20@0:8B16
{?="maxAlarmsAllowed"I"maxRecurrencesAllowed"I"supportsAlarmTriggerIntervals"b1"supportsAlarmTriggerDates"b1"supportsAlarmsTriggeringAfterStartDate"b1"snoozeAlarmRequiresDetach"b1"organizerCanSeeAttendeeStatuses"b1"inviteesCanSeeAttendeeStatuses"b1"statusesAreAccurate"b1"supportsIncomingInvitations"b1"supportsOutgoingInvitations"b1"requiresOutgoingInvitationsInDefaultCalendar"b1"supportsInvitationModifications"b1"supportsEventForwarding"b1"supportsResponseComments"b1"deliverySourceOrExternalIDRequiredForResponse"b1"proposedStatusRequiredForResponse"b1"declinedStatusChangeRequiresNoPendingStatus"b1"eventDurationConstrainedToRecurrenceInterval"b1"alarmTriggerIntervalConstrainedToRecurrenceInterval"b1"occurrencesMustOccurOnSeparateDays"b1"futureStartDateLimitedToOccurrenceCacheBounds"b1"supportsRecurrencesOnDetachedEvents"b1"recurrencesShouldPinToMonthDays"b1"requiresAttendeeSearchInSingleAccount"b1"mustAcknowledgeMasterEvent"b1"canSetAvailability"b1"eventAvailabilityLimited"b1"requiresMSFormattedUID"b1"shouldCancelDeletedEvents"b1"shouldDeclineDeletedInvitations"b1"supportsStructuredLocations"b1"supportsReminderActions"b1"supportsReminderLocations"b1"supportsAlarmProximity"b1"allowsCalendarAddDeleteModify"b1"allowsTasks"b1"allowsEvents"b1"supportsURLField"b1"supportsAllDayDueDates"b1"supportsSharedCalendars"b1"isFacebook"b1"recurrenceSeriesMustIncludeMoreThanFirstOccurrence"b1"supportsPrivateEvents"b1"prohibitsPrivateEventsWithAttendees"b1"supportsAvailabilityRequests"b1"supportsIgnoringEventsInAvailabilityRequests"b1"supportsLocationDirectorySearches"b1"requiresSamePrivacyLevelAcrossRecurrenceSeries"b1"supportsInboxAvailability"b1"prohibitsMultipleMonthsInYearlyRecurrence"b1"prohibitsMultipleDaysInMonthlyRecurrence"b1"prohibitsYearlyRecurrenceInterval"b1"requiresOccurrencesConformToRecurrenceRule"b1"prohibitsDetachmentOnCommentChange"b1"allowsProposeNewTime"b1"prohibitsICSImport"b1"supportsAutoGeocodingStructuredLocations"b1"supportsJunkReporting"b1"supportsPhoneNumbers"b1"attendeesUseDeletedByOrganizerStatus"b1"prohibitsSlicingEventsWithAttendees"b1"supportsSubscribedCalendars"b1"supportsAttachments"b1"supportsDelegation"b1"supportsDelegateEnumeration"b1"supportsFloatingTimeZone"b1"prohibitsUsingEventOrganizerEmailWhenComposingMail"b1"supportsRecurrenceSplit"b1"requiresOpeningAttachmentAsLink"b1"shouldUseDeleteAndAddInsteadOfMoveBetweenCalendars"b1"supportsInvitationModificationsWithoutNotification"b1"supportsManagedSubscribedCalendars"b1"supportsSubscriptionMirroring"b1"supportsParticipantRoles"b1"supportsPush"b1}
B32@0:8@16@24
q24@0:8q16
v32@0:8d16Q24
@48@0:8@16@24@32@40
B48@0:8@16@24@32^@40
@64@0:8@16@24@32@40@?48@?56
@40@0:8@16@24@32
v40@0:8@16@?24@32
@"NSString"
@"NSObject<OS_dispatch_queue>"
@"NSMutableDictionary"
@24@0:8:16
@32@0:8:16@24
@40@0:8:16@24@32
B24@0:8#16
B24@0:8:16
Vv16@0:8
^{_NSZone=}16@0:8
B24@0:8@"Protocol"16
@"NSString"16@0:8
B32@0:8@"NSPredicate"16@24
v36@0:8@16@24B32
v32@0:8@16@24
@48@0:8@16@24@32@?40
v28@0:8@16B24
i44@0:8I16@20@28@36
@"EKEventStore"
@"NSNumber"
@24@0:8^@16
@"NSURL"
@44@0:8i16@20@28@36
@36@0:8i16@20@28
q28@0:8@16i24
@"NSDate"
@"EKCalendarNotification"
@"EKObjectID"
B52@0:8@16@24@32B40@44
B56@0:8@16@24@32B40B44@48
B48@0:8@16@24@32@40
B40@0:8@16#24#32
@24@0:8@"<EKProtocolObject>"16
@"EKChangeSet"16@0:8
@"EKObject"16@0:8
@"EKPersistentObject"16@0:8
B24@0:8@"NSString"16
@"EKObject"24@0:8@"EKEventStore"16
v32@0:8@16@"NSString"24
@24@0:8@"NSString"16
B24@0:8@"<EKFrozenMeltedPair>"16
B32@0:8@"<EKFrozenMeltedPair>"16@"NSSet"24
@"NSDictionary"16@0:8
@"NSSet"16@0:8
B28@0:8@16B24
B44@0:8@16@24B32@36
@36@0:8@?16@24B32
B20@0:8B16
v24@0:8@?16
@"EKPersistentObject"
@"EKChangeSet"
@"NSDictionary"
@"EKObjectValidationContext"
@56@0:8@16@24@32@40q48
@64@0:8@16@24@32@40@48q56
@68@0:8@16@24@32@40@48q56B64
@72@0:8@16@24@32@40@48@56q64
@76@0:8@16@24@32@40@48@56q64B72
B44@0:8@16@24@32B40
@56@0:8@16@24@32@40@48
v32@0:8@16@?24
@"EKObjectID"16@0:8
v32@0:8@"CADDatabaseInitializationOptions"16@?<v@?ii>24
v24@0:8@?<v@?iBB>16
v24@0:8@?<v@?i>16
v32@0:8q16@?24
v40@0:8@16@24@?32
v28@0:8i16@?20
v32@0:8d16@?24
v60@0:8@16@24@32Q40i48@?52
v40@0:8@16Q24@?32
v28@0:8B16@?20
v48@0:8@16@24@32@?40
v24@0:8@?<v@?i@"NSString">16
v32@0:8@"CADObjectID"16@?<v@?iq>24
v32@0:8q16@?<v@?iBq@"NSData"iii>24
v40@0:8@"NSArray"16@"CADObjectID"24@?<v@?iBq@"NSArray">32
v32@0:8q16@?<v@?i>24
v32@0:8@"NSArray"16@?<v@?i>24
v24@0:8@?<v@?ii>16
v28@0:8i16@?<v@?i@"NSDictionary">20
v32@0:8d16@?<v@?i@"NSData"Q>24
v60@0:8@"NSArray"16@"NSArray"24@"NSArray"32Q40i48@?<v@?i@"NSArray">52
v40@0:8@"NSArray"16Q24@?<v@?i@"NSData">32
v40@0:8@"CADObjectID"16Q24@?<v@?i@"NSData">32
v28@0:8B16@?<v@?i>20
v48@0:8@"NSArray"16@"NSArray"24@"NSDictionary"32@?<v@?i@"NSDictionary">40
v24@0:8@?<v@?iB>16
v24@0:8@?<v@?iQ>16
v40@0:8@"CADObjectID"16@"CADObjectID"24@?<v@?i@"CADObjectID">32
v32@0:8@"CADObjectID"16@?<v@?iB>24
v32@0:8@"NSArray"16@?<v@?i@"NSArray">24
v40@0:8@"CADObjectID"16@"NSArray"24@?<v@?i@"NSArray">32
v40@0:8@"CADObjectID"16@"NSString"24@?<v@?i@"NSObject<NSSecureCoding>">32
v40@0:8@"CADObjectID"16@"NSString"24@?<v@?i@"NSString">32
v40@0:8@"CADObjectID"16@"NSString"24@?<v@?i@"NSNumber">32
v40@0:8@"CADObjectID"16@"NSString"24@?<v@?i@"NSDate">32
v40@0:8@"CADObjectID"16@"NSString"24@?<v@?i@"NSData">32
v40@0:8@"CADObjectID"16@"NSString"24@?<v@?i@"NSSecurityScopedURLWrapper">32
v40@0:8@"CADObjectID"16@"NSString"24@?<v@?i@"CADObjectID">32
v40@0:8@"CADObjectID"16@"NSString"24@?<v@?i@"NSSet">32
v36@0:8@16B24@?28
v36@0:8i16@20@?28
v44@0:8@16i24@28@?36
v48@0:8@16q24@32@?40
v32@0:8@"NSArray"16@?<v@?i@"NSArray"@"NSArray">24
v28@0:8B16@?<v@?i@"CADObjectID">20
v24@0:8@?<v@?i@"CADObjectID">16
v32@0:8@"CADObjectID"16@?<v@?i@"NSData">24
v32@0:8@"CADObjectID"16@?<v@?i@"CADObjectID">24
v36@0:8@"CADObjectID"16B24@?<v@?iB>28
v36@0:8i16@"CADObjectID"20@?<v@?iQ>28
v44@0:8@"NSDate"16i24@"CADObjectID"28@?<v@?i>36
v32@0:8@"CADObjectID"16@?<v@?i@"NSArray">24
v48@0:8@"CalGrantedDelegate"16q24@"CADObjectID"32@?<v@?i>40
v32@0:8@"CADObjectID"16@?<v@?ii>24
v40@0:8@16i24i28@?32
v20@0:8I16
v32@0:8@"NSString"16@?<v@?i@"CADObjectID">24
v40@0:8@"NSString"16@"CADObjectID"24@?<v@?i@"NSArray">32
v40@0:8@"NSPredicate"16i24i28@?<v@?i@"NSArray">32
v40@0:8@"NSData"16@"CADObjectID"24@?<v@?i>32
v40@0:8@"NSString"16@"CADObjectID"24@?<v@?i>32
v36@0:8i16@"NSString"20@?<v@?ii>28
v36@0:8i16@"NSString"20@?<v@?@"NSArray"i>28
v36@0:8@16i24@?28
v40@0:8i16@20B28@?32
v44@0:8@16@24i32@?36
v60@0:8@16@24@32B40@44@?52
v24@0:8@?<v@?i@"NSNumber">16
v32@0:8@"CADObjectID"16@"CADObjectID"24
v32@0:8@"NSString"16@?<v@?i@"NSArray">24
v36@0:8@"CADObjectID"16i24@?<v@?B>28
v40@0:8@"NSArray"16@"NSDate"24@?<v@?i@"NSArray">32
v40@0:8i16@"NSDate"20B28@?<v@?i@"NSDate">32
v44@0:8@"NSString"16@"NSArray"24i32@?<v@?i>36
v60@0:8@"CADObjectID"16@"NSDate"24@"NSDate"32B40@"NSTimeZone"44@?<v@?iB>52
v32@0:8@"NSString"16@?<v@?iB>24
v32@0:8@"CADObjectID"16@?<v@?i@"NSSecurityScopedURLWrapper">24
v24@0:8@"CADObjectID"16
v32@0:8@"EKReminderPredicate"16@?<v@?ii>24
v40@0:8@"NSArray"16@"NSArray"24@?<v@?i@"NSArray">32
v24@0:8@?<v@?i@"NSArray">16
v48@0:8@"NSDate"16@"NSDate"24@"NSArray"32@?<v@?i@"NSArray">40
v40@0:8@16B24B28@?32
v32@0:8@"CADObjectID"16@?<v@?i>24
v40@0:8@"NSDate"16B24B28@?<v@?i@"NSArray"@"NSArray"@"NSArray"@"NSDate">32
v40@0:8@"NSString"16B24B28@?<v@?iQ@"NSArray">32
v24@0:8@?<v@?i@"NSArray"@"NSArray">16
v36@0:8i16@"NSArray"20@?<v@?i>28
v40@0:8@"CADRouteHypothesis"16@"NSString"24@?<v@?i>32
v24@0:8@?<v@?i@"NSDictionary">16
v44@0:8@16@24B32@?36
v44@0:8@"NSString"16@"NSSecurityScopedURLWrapper"24B32@?<v@?i>36
v32@0:8@"NSSecurityScopedURLWrapper"16@?<v@?i>24
v44@0:8@"NSString"16@"NSSecurityScopedURLWrapper"24B32@?<v@?ii>36
v32@0:8@"NSSecurityScopedURLWrapper"16@?<v@?ii>24
v32@0:8@16I24B28
v32@0:8@"NSArray"16I24B28
I24@0:8@16
@"<CADInterface>"
{os_unfair_lock_s="_os_unfair_lock_opaque"I}
@"NSXPCConnection"
@"<EKDaemonConnectionDelegate>"
@"CADDatabaseInitializationOptions"
v24@0:8@"NSExtensionContext"16
@?24@0:8@?16
d16@0:8
v24@0:8d16
@"CalPreferences"
@"EKReminderStore"
@"EKFrozenReminderObject"24@0:8@"NSString"16
@"REMStore"
@"NSArray"
@72@0:8@16@24@32@40@48@56@64
v24@0:8^{CGColor=}16
^{CGColor=}16@0:8
^{CGColor=}
@"NSTimeZone"
@"EKStructuredLocation"
@"EKCalendar"
@"EKSuggestedEventInfo"
@"NSData"
@"NSPointerArray"
@"EKParticipant"
@"<EKIdentityProtocol>"
v40@0:8@16@24@32
@60@0:8@16@24Q32B40@44@?52
@"EKEvent"
@"<CalSpotlightQueryPendingSearchProtocol>"
@32@0:8@16q24
v56@0:8q16@24@32@40@48
v40@0:8@16@24q32
v48@0:8@16@24@32q40
@"EKObject"
v36@0:8q16@24B32
@"NSDate"16@0:8
@40@0:8@16@24q32
@"<EKAccountRefresherDelegate>"
@36@0:8@16B24@28
B56@0:8@16@24@32@40@48
I16@0:8
B24@0:8^@16
v32@0:8@16d24
B32@0:8@16^@24
B40@0:8@16@24^@32
v32@0:8@?16@24
v32@0:8@16^B24
B24@0:8{?=II}16
v28@0:8@?16B24
@?16@0:8
@20@0:8B16
@"NSObject<OS_dispatch_source>"
@"EKSource"
v24@0:8B16B20
Q24@0:8@16
Q32@0:8@16@24
q32@0:8@16@24
@24@0:8@?16
@"NSMutableArray"
@"NSOperationQueue"
^{__SecTrust=}16@0:8
B48@0:8@16@24^@32^@40
B24@0:8q16
B64@0:8@16@24@32@40@48@56
@"NSURL"16@0:8
@"NSPredicate"16@0:8
@"CNContact"16@0:8
r^v24@0:8^v16
@"EKCalendarItem"
I24@0:8q16
@40@0:8@16q24q32
@52@0:8B16@20@28@36@44
@40@0:8@16@24@?32
@32@0:8@16#24
@"EKDirectorySearchQuery"
@"NSError"
@32@0:8@16d24
@"EKRecurrenceRule"
@"EKCalendarEventInvitationNotificationAttendee"
@"CalLocation"
@56@0:8@16@24@32@40Q48
@40@0:8@16@24Q32
@64@0:8@16@24@32@40@48Q56
i24@0:8@16
@48@0:8@16@24@32^@40
B28@0:8i16Q20
@"NSMapTable"
@"NSMutableSet"
v44@0:8@?16B24q28@36
v32@0:8^@16^@24
v40@0:8@"NSArray"16@"NSArray"24@"NSArray"32
@48@0:8B16@20@28@36B44
v48@0:8@16@24@32@40
@"CalLimitingQueue"
@52@0:8B16q20@28@36@44
@"EKEventStore"16@0:8
@"EKTimedEventStorePurger"
r*24@0:8B16B20
B40@0:8@16^@24^@32
@40@0:8@16@24B32B36
@32@0:8@16@?24
v56@0:8@16@24@32@40@?48
@28@0:8@16i24
v40@0:8@"NSArray"16@"NSSet"24@"NSMutableArray"32
@"NSArray"16@0:8
@40@0:8#16@24@32
v28@0:8i16Q20
v36@0:8@?16B24@?28
@"NSPredicate"
@"NSDateComponents"
@32@0:8q16@24
@32@0:8q16@?24
@40@0:8q16@24@?32
@32@0:8@16^@24
@"PCPersistentTimer"
@"NSTimer"
@"NSData"32@0:8@"EKEvent"16^@24
@"EKEvent"32@0:8@"NSData"16^@24
@"NSString"32@0:8@"NSData"16^@24
@20@0:8i16
@28@0:8i16@20
@40@0:8q16@24@32
@48@0:8q16@24@32@40
@56@0:8@16Q24@32@40@48
@"<CalDateProvider>"
@48@0:8@16d24d32d40
v24@0:8@"NSCoder"16
@24@0:8@"NSCoder"16
@104@0:8i16@20d28@36d44@52d60@68B76Q80@88q96
v28@0:8@16i24
v40@0:8@16@24B32B36
v44@0:8@16@24@32B40
v28@0:8i16@20
d24@0:8@16
v32@0:8d16@24
v28@0:8B16@20
{_opaque_pthread_mutex_t="__sig"q"__opaque"[56c]}
@"NSHashTable"
@"EKDirectoryGroup"
@"EKDirectorySearchResultSet"
@"EKRecurrenceEnd"
q36@0:8q16Q24B32
q32@0:8q16Q24
@36@0:8@16@24B32
@32@0:8@16Q24
@48@0:8@16Q24Q32^@40
v32@0:8@16Q24
B20@0:8I16
v24@0:8B16I20
B32@0:8q16^@24
v56@0:8@16@24@32@40@48
B48@0:8{?=iccccd}16@32^@40
@24@0:8^d16
B48@0:8@16@24q32^@40
@"EKReadWriteLock"
@"EKCalendarDate"
@52@0:8@16@24@32@40B48
@64@0:8@16@24@32@40@48@?56
@"EKAvailabilityCache"
@"CDBDataProtectionObserver"
v24@0:8I16B20
@"EKSerializableStructuredLocation"
@56@0:8@16@24@32@40@?48
B36@0:8@16@24B32
v52@0:8@16@24@32@40B48
B32@0:8#16@?24
v40@0:8@16@24#32
@32@0:8q16q24
@48@0:8@16@24@?32@?40
@48@0:8@16Q24@32@40
@"CSSearchQuery"
@32@0:8Q16@24
B40@0:8^i16^i24^i32
B32@0:8Q16@?24
v32@0:8Q16@24
@24@0:8^{CGColor=}16
@24@0:8d16
B20@0:8i16
Q20@0:8i16
i24@0:8Q16
v24@0:8i16B20
B40@0:8@16Q24^@32
v32@0:8Q16@?24
v36@0:8B16@20@?28
@64@0:8q16@24@32@40@48@56
@"RTPredictedLocationOfInterest"
@"EKPredictedLocationOfInterest"
@24@0:8i16i20
@40@0:8@16{_NSRange=QQ}24
@28@0:8i16i20B24
@40@0:8@16B24@28B36
@40@0:8@16@?24@32
@48@0:8@16@24@?32@40
@52@0:8@16@24@?32@40B48
@"CalDarwinNotificationListener"
^v16@0:8
#24@0:8@16
q24@0:8Q16
B24@0:8Q16
@32@0:8i16@20B28
@48@0:8Q16@24@32B40B44
@44@0:8i16@20@28B36B40
v28@0:8Q16B24
B36@0:8@16B24^@28
B32@0:8@16Q24
B40@0:8@16q24^@32
B44@0:8@16q24B32^@36
B40@0:8Q16@24^@32
@52@0:8@16@24@32Q40i48
@60@0:8@16B24@28B36B40B44i48@52
@68@0:8@16B24@28B36B40B44i48@52Q60
@44@0:8@16@24i32@36
@52@0:8@16@24i32@36Q44
@68@0:8@16@24B32B36@40@48@56i64
@76@0:8@16@24B32B36@40@48@56i64Q68
^{os_unfair_lock_s=I}16@0:8
@28@0:8d16i24
@32@0:8d16i24B28
@28@0:8B16^@20
@36@0:8@16B24^@28
Q40@0:8@16B24B28@32
v32@0:8^@16@24
v48@0:8@16@24q32@?40
@32@0:8@?16@24
@44@0:8@16@24@32B40
@56@0:8@16@24@32q40q48
@48@0:8@16@24@32q40
@88@0:8@16@24@32@40@48@56@64@72q80
@48@0:8@16@24@32d40
@40@0:8Q16@24@32
q24@0:8^@16
q32@0:8@16^@24
v24@0:8^@16
v68@0:8q16i24B28q32@40i48i52i56@?60
@"CADGenerationStampedObjectID"
{?="restoreGenerationChanged"b1"fetchingSharedCalendarInvitationsDisallowed"b1}
@"EKDaemonConnection"
@"EKDataProtectionObserver"
@"REMAccount"
@24@0:8r*16
@"EKFrozenReminderSource"
{_NSRange=QQ}16@0:8
@"EKVirtualConference"
{_NSRange="location"Q"length"Q}
Q24@0:8Q16
v36@0:8@16@24S32
@40@0:8^{?=[64S]^{__CFString}^S*{?=qq}qq}16{?=qq}24
@48@0:8q16q24@32@40
@56@0:8@16@24@32Q40@48
@"CalDateRange"
@"EKAvailabilitySpan"
v52@0:8@16@24B32@36@44
@40@0:8@16^@24d32
 #&),/258
,77777
!$'*
#(-27<AFKPUZ_dinsx}
9844
recurrenceEnd
v8@?0
Interval must be greater than 0
%@ <%p> RRULE %@
Encountered illegal value for EKRecurrenceFrequency
EKRecurrenceRule.m
Interval must be greater than or equal to 1
@8@?0
Invalid parameter not satisfying: %@
(int)firstDay <= EKWeekdaySaturday
dayOfTheWeek
DAILY
WEEKLY
MONTHLY
YEARLY
Encountered illegal value for  EKRecurrenceFrequency
yyyyMMdd
yyyyMMdd'T'HHmmss
yyyyMMdd'T'HHmmss'Z'
FREQ=%@
;INTERVAL=%lu
;UNTIL=%@
;COUNT=%lu
;BYMONTH=%@
;BYMONTHDAY=%@
;BYYEARDAY=%@
;BYWEEKNO=%@
;BYDAY=%@
;BYSETPOS=%@
;WKST=SU
Calendar
%@ <%p> {UUID = %@; displayName = %@; address = %@; firstName = %@; lastName = %@; status = %lu; accessLevel = %lu;}
-[CNContact predicateForContactMatchingEKParticipantWithName:emailAddress:URL:predicateDescription:]
startDateComponents
dueDateComponents
calendar
Source
Sharee
Alarm
Notification
%@ <%p> {title = %@; allowsModify = %s; color = %@; source = %@; sharees = %@}
EKFeatureSetDidChangeNotification
ContinuityCapability
s+gaKNe68Gs3PfqKrZhi1w
EKAvailabilityCacheError
%@-%@-processing
%@-%@-callback
accountID
sourceIsInvalid
sourceSupportsAvailabilityRequests
addressesToCachedSpanRanges
ignoredEventIDsToAddressBasedCaches
AvailabilityCacheMiss
AvailabilityCacheHit
B24@?0@"NSString"8@"NSDictionary"16
v16@?0@"NSDictionary"8
v16@?0@"NSError"8
v32@?0@"NSString"8@"NSArray"16^B24
v32@?0@8Q16^B24
(3-5)
(6-10)
(11-15)
(16-20)
(21-25)
(26-50)
(51-100)
(101-150)
(151-200)
(201+)
AvailabilityCacheRoundtripTimeInMilliseconds-%@
elapsedTime
EKOccurrenceCacheSearch.m
calendars != nil
searchTerm != nil
store != nil
callback != nil
v12@?0i8
name
emailAddress
phoneNumber
participantRole
participantStatus
participantType
Name should not be nil.
Either url, phoneNumber or emailAddress should not be nil.
CalendarsExcludedFromNotifications
%@{type: %d, rowID: %d, date: %@}
EKObject.m
iOS doesn't support cross-store copies yet
@24@?0@"EKObject"8@"NSString"16
frozenObject
v16@?0@"EKObject"8
persistentObject
startDate
owner_id
role
status
email
CalendarItem
%@ <%p> {frequency = %ld; interval = %ld; firstDayOfWeek = %ld; enddate = %@; count = %lu; specifier = %@}
ConnectionLock
ReplyLock
com.apple.calaccessd
v16@?0i8i12
You have overridden beginRequestWithExtensionContext: on your subclass of EKVirtualConferenceProvider (%@) - this is not allowed
v24@?0@"NSArray"8@"NSError"16
v24@?0@"EKVirtualConferenceDescriptor"8@"NSError"16
v28@?0B8q12@"NSArray"20
com.apple.eventkit.debug.preference.notification.travelEngineThrottlePeriod
com.apple.eventkit.preference.notification.refiringReminderAlarmsEnabled
com.apple.eventkit.preference.notification.selectedCalendarIdentifiers
com.apple.eventkit.preference.notification.ShowDeclinedEvents
com.apple.eventkit.preference.notification.AlertInviteeDeclines
com.apple.mobilecal.preference.notification.selectedCalendarSyncHashesChanged
com.apple.eventkit.preference.notification.deselectedCalendarIdentifiers
TravelEngineThrottlePeriod
refiringReminderAlarmsEnabled
useShortReminderSnoozeInterval
useShortReminderRefireInterval
alwaysSetArrivedAndSettledForReminders
LastConfirmedSplashScreenVersionViewed
privacyPaneBypass
LastDeselectedCalendars
DeselectedCalendarIdentifiersChanged
LastDeselectedCalendarSyncHashes
LastDeselectedCalendarSyncIdentifiers
LastViewedCalendars
ShowDeclinedEvents
InviteeDeclineAlerts
conferenceRoomTypeIdentifiersByMRU
calendar_id
old_calendar_id
external_id
old_external_id
summary
location_id
start_date
start_tz
end_date
end_tz
description
all_day
title is empty
identifier is empty
url is empty
No URLs provided
TITLE=%@;
ADDRESS=%@;
%f:%f:%f
%f:%f
v32@?0@"EKParticipant"8Q16^B24
q24@?0@8@16
v24@?0@"NSString"8@"EKObject"16
[%@] opaqueKey: %@, uniqueKey: %@, extractionGroupIdentifier: %@, changedFields: %lu, changesAcknowledged: %d, timestamp: %f
v16@?0@"NSNotification"8
CNNameComponentsStringTokenizer
[%@] Display name: [%@], isEmail: [%@]
CRRecentContactsLibrary
CRAddressKindEmail
CRAddressKindPhoneNumber
CRRecentsDomainCalendar
title
completionDate
dueDate
UUID
displayOrder
dueDateTimeZone
priority
dueDateAllDay
hasAlarms
hasRecurrenceRules
recurrenceRules
com.apple.mobilecal.autocompletesearchcontroller.internalqueue
com.apple.mobilecal.autocompletesearchcontroller.eventkitqueue
EKAutocompleteSearch.m
searchWithString:completionHandler: called multiple times
com.apple.mobilecal
SuggestionsOriginBundleId
%@ <%p> {URLString = %@; fileName = %@; fileFormat = %@; fileSize = %lu; localRelativePath = %@; UUID = %@;}
remove
modify
creationDate
statusModifiedDate
itemID
B32@?0@8Q16^B24
EKDiff.m
One of these has to be non-nil
%@.%@
No object for comparison, %@ is entirely different
-------------------------
<weak relation: %@>
(null)
There is a difference for the multi-valued key: %@
%@: 
* %@
%@%@ <0x%x>
, %@:%@
Please use the appropriate designated initializer for this class.
EKAvailabilitySpan.m
startDate != nil
endDate != nil
'startDate' must not be after 'endDate'
[%@] startDate: [%@] endDate: [%@] type: [%@]
Unknown
Busy
Free
NoData
OutOfOffice
Tentative
Unavailable
Error
B24@?0@8@"NSDictionary"16
_float
%@ <%p>
 title = 
%@; 
 location = 
%@; 
 calendar = 
%@; 
 alarms = 
%@; 
 URL = 
%@; 
 lastModified = %@; 
 startTimeZone = 
%@; 
 endTimeZone = 
singleRecurrenceRule
v24@?0@"NSData"8@"NSError"16
Error exporting event to ICS: %@
v20@?0i8@"NSData"12
events
reminders
actionsState
X-APPLE-NO-ACTION
OUT-OF-DATE
DELEGATORS-COPY
DELEGATEES-COPY
v32@?0@"EKAlarm"8Q16^B24
EKCalendarItem.m
Can't snooze an alarm with location but no proximity.
Committed Value class is incorrect!
actions
detachedItems
v16@?0@"EKCalendarItem"8
Original item class must match our class
date
work
callback
B32@?0@"NSString"8@"EKPersistentObject"16@"EKPersistentObject"24
%@ <%p> {title = %@; address = %@; lat = %@; long = %@; abID = %@; radius = %@, routing = %@}
value
<%@: %p>(externalID = %@, externalIDTag = %@, source = %@)
conferenceURLDetectedKey
parsedConferenceKey
junk
not junk
cachedJunkStatus
could be junk
permit
not permit
com.apple.calendar
store.log.travel.engine
store.log.travel.engine.throttle
calendar.source
externalTrackingStatus
uniqueId
externalID
externalFolderID
invitationStatus
endDate
originalItem.objectID.rowID
availabilityRequests
processing
Reset
ConflictFound
SearchProgressed
radar.18233777
B32@?0@"EKInviteeTimeSpan"8Q16^B24
q24@?0@"EKInviteeTimeSpan"8@"EKInviteeTimeSpan"16
v32@?0@"EKAvailabilitySpan"8Q16^B24
v32@?0@"EKInviteeTimeSpan"8Q16^B24
NSErrorPeerCertificateChainKey
v32@?0@"NSString"8@16^B24
v16@?0@"CNContactStore"8
EKParticipant.m
Setting inviter name string not supported on iOS
<%@: %p>(name = %@)
EKCalendarSharedCalendarNotification.m
Invalid type for EKCalendarSharedCalendarNotification.
start
_cachedSpans
v32@?0@"EKAvailabilityCachedSpan"8Q16^B24
EKAvailabilityCachedSpanRange.m
ERROR: We tried to insert a span with no end date.
q24@?0@"EKAvailabilitySpan"8@"EKAvailabilitySpan"16
%@ <%p> {UUID = %@; displayName = %@; email = %@; phoneNumber = %@; firstName = %@, lastName = %@, status = %ld; role = %ld; type = %ld}
kDefaultAlarmSemanticIdentifier
ABSOLUTE=%f;
RELATIVE=%f;
EMAIL=%@;
URL=%@;
None
Enter
Leave
VehicleConnect
VehicleDisconnect
isExecuting
v20@?0@"NSError"8B16
v32@?0@"DAECalendarDirectorySearchResult"8Q16^B24
isFinished
In order to save a new notification, add it to a NotificationCollection, save, and commit the collection instead.
[%@] rowID: [%d] date: [%f]
v32@?0@"EKAttendee"8Q16^B24
v32@?0@"EKCalendarEventInvitationNotificationAttendee"8Q16^B24
calLocation
EKSerializableStructuredLocation is not implemented in iOS
EKICSImportErrorDomain
vcal
icbu
ICSImport
com.apple.EventKit.ICSImporter
B24@?0@"NSDictionary"8^@16
@16@?0@"EKSource"8
Title:(%@) Email:(%@) SourceIdentifier:(%@)
Title:(%@) Email:(%@) UID:(%@)
B16@?0@"ICSUserAddress"8
@"NSString"16@?0@"ICSUserAddress"8
q16@?0@"EKCalendar"8
record
type
ROWID
sequence_number
v32@?0i8B12q16@"NSArray"24
delete
insert
update
[<%@: %p>: type=%@, row=%i, seq=%li, changeID=%li]
entityType must be implemented by an EKObjectChange inheriting class.
consumed_entity_class
consumed_entity_id
consumed_change_id
BirthdayEventsGenerationVersion
BirthdayEventsGenerationLastLocale
BirthdayEventsGenerationLastAttemptTimeResetKey
BirthdayEventsGenerationAttemptsToResetKey
EKBirthdayListener
v16@?0q8
@"EKEventStore"8@?0
Birthdays
v24@?0@"CNContact"8^B16
relative=%i
%@/%@
identifier
v24@?0@"EKEvent"8^B16
Location
%@ <%p> {triggerDate = %@; proximity = %ld; location = %@, type = %ld}
%@ <%p> {triggerInterval = %lf; proximity = %ld; location = %@, type = %ld}
%Y%m%dT%H%M%SZ
%Y%m%dT%H%M%S
%Y%m%d
UID %@ is of unexpected size.
B32@?0@8@16^B24
singleValueChanges: %@ 
multiValueAdditions: %@ 
multiValueRemovals: %@ 
is new: %d is deleted: %d is saved: %d is modified: %d
is undeleted: %d
%@ <%p> {date = %@}
Adding nil Notification to notification collection.
Removing nil Notification from notification collection.
EKCalendarInviteReplyNotification.m
Invalid type for EKCalendarInviteReplyNotification.
EKPredicateSearch
Unknown entity type
Didn't recognize entity class %@
v20@?0i8@"NSArray"12
v24@?0@"CADEntityWrapper"8@"NSMutableArray"16
v16@?0@"NSArray"8
EKReminderModifiedNotification
firstAlertDate
/?&:$+,;=@
%@://%@/%@
%@ <%p> {title = %@; dueDate = %@; completionDate = %@; priority = %ld; calendarItemIdentifier = %@; alarms = %@}
@"EKPersistentObject"16@?0@"EKPersistentObject"8
event_id_tomb
EKNotificationsLoadedNotification
EKNotificationsChangedNotification
EKNotificationCountChangedNotification
EKNotificationCountChangedExternallyNotification
EKNotificationChangedNotificationsKey
com.apple.eventkit.notificationMonitor
notification
v16@?0@"EKTimedEventStorePurger"8
com.apple.eventkit.invitationmonitor
blacklistedNotificationQueue
v24@?0@"EKObjectID"8^B16
v32@?0@"EKCalendarNotificationReference"8Q16^B24
B24@?0@"EKCalendarNotificationReference"8@"NSDictionary"16
pending
no pending
v28@?0i8@"NSData"12Q20
principalPath
displayName
preferredAddress
com.apple.eventkit.debug.preference.notification.availabilityFreshnessWindow
com.apple.eventkit.debug.preference.notification.saveGeocodedLocationsInTravelEngine
com.apple.eventkit.debug.preference.notification.overrideTravelAdvisoryHypothesis
com.apple.eventkit.debug.preference.notification.overriddenTravelAdvisoryHypothesisTransportType
com.apple.eventkit.debug.preference.notification.overriddenTravelAdvisoryHypothesisConservativeTravelTime
com.apple.eventkit.debug.preference.notification.overriddenTravelAdvisoryHypothesisEstimatedTravelTime
com.apple.eventkit.debug.preference.notification.overriddenTravelAdvisoryHypothesisAggressiveTravelTime
com.apple.eventkit.debug.preference.notification.overriddenTravelAdvisoryHypothesisSupportsLiveTraffic
com.apple.eventkit.debug.preference.notification.overriddenTravelAdvisoryHypothesisCurrentTrafficDensity
com.apple.eventkit.debug.preference.notification.overriddenTravelAdvisoryHypothesisRouteName
com.apple.eventkit.debug.preference.notification.overriddenTravelAdvisoryHypothesisTravelState
com.apple.eventkit.debug.preference.notification.preventMarkingTravelAdvisoryEntriesAsDismissed
com.apple.eventkit.debug.preference.notification.forceDisplayOfNewTravelAdvisoryHypotheses
com.apple.eventkit.debug.preference.notification.performAgendaEntryEqualityChecksInTravelEngine
com.apple.eventkit.debug.preference.notification.verifyIntegrityOfAvailabilityTimeSearchTimelines
com.apple.eventkit.debug.preference.notification.showDepartureDateForTransitTimeToLeave
com.apple.eventkit.debug.preference.notification.shouldBypassTravelEngineThrottle
com.apple.eventkit.debug.preference.notification.syntheticTravelAdvisoriesEnabled
availabilityFreshnessWindow
saveGeocodedLocationsInTravelEngine
overrideTravelAdvisoryHypothesis
overriddenTravelAdvisoryHypothesisTransportType
overriddenTravelAdvisoryHypothesisConservativeTravelTime
overriddenTravelAdvisoryHypothesisEstimatedTravelTime
overriddenTravelAdvisoryHypothesisAggressiveTravelTime
overriddenTravelAdvisoryHypothesisSupportsLiveTraffic
overriddenTravelAdvisoryHypothesisCurrentTrafficDensity
overriddenTravelAdvisoryHypothesisRouteName
overriddenTravelAdvisoryHypothesisTravelState
preventMarkingTravelAdvisoryEntriesAsDismissed
forceDisplayOfNewTravelAdvisoryHypotheses
performAgendaEntryEqualityChecksInTravelEngine
verifyIntegrityOfAvailabilityTimeSearchTimelines
showDepartureDateForTransitTimeToLeave
shouldBypassTravelEngineThrottle
syntheticTravelAdvisoriesEnabled
Version
Version mismatch. Archiver version: [%@]. Encoded Data Version: [%@].
Unable to unarchive version string.
Data
Unable to unarchive data.
Unable to encode data.
Unable to decode version string.
B32@?0@"EKEvent"8Q16^B24
EKErrorDomain
EKCADErrorDomain
XPC error communicating with calaccessd: Invalid parameter
XPC error communicating with calaccessd: Internal error
XPC error communicating with calaccessd: Property not found
Object not found. It may have been deleted.
XPC error communicating with calaccessd: Invalid data type
XPC error communicating with calaccessd: Invalid operation
Access denied
XPC error communicating with calaccessd: Unknown IPC message
XPC error communicating with calaccessd: Unknown error
This operation is not supported on the current OS
XPC error communicating with calaccessd: Failed to rebuild occurrence cache
XPC error communicating with calaccessd: Missing client specifier
XPC error communicating with calaccessd: Connection not initialized
XPC error communicating with calaccessd: Data already exists
This process has too many EKEventStore instances. Use fewer event stores.
XPC error communicating with calaccessd: Data not accessible
The event cannot be edited.
No calendar has been set.
No start date has been set.
No end date has been set.
The start date must be before the end date.
An unexpected error occurred.
The calendar is read only.
That event does not belong to that event store.
Invites cannot be moved to another calendar.
The event is too far in the future.
The event is too long to repeat this often.
The event repeats before the alert occurs.
Another instance of this event occurs on this date.
An invalid span was specified.
A repeating reminder must have a due date.
Calendar does not match parent event
Calendar has no source
That calendar may not be moved to another account.
The privacy level field cannot be changed.
The repeat field cannot be changed.
Alarms cannot be changed.
Attendees cannot be changed.
That calendar can not be changed or deleted.
Locations with geo information are not supported by this account.
Actions are not supported by this account.
Locations for reminders are not supported by this account.
Proximity-based alarms are not supported by this account.
That account does not allow calendars to be added or removed.
That calendar does not allow events to be added.
That calendar does not allow reminders to be added.
That account does not support events.
That account does not support reminders.
You can't move events with attendees between accounts.
Priorities must be between %d and %d.
This is not a valid EKEntityType.
Choose another way to repeat this event or move it to another calendar.
The Suggested Event Calendar cannot be modified.
That calendar does not allow events to start outside of their recurrence patterns.
You can't move events with attachments between accounts.
A source must have a sourceIdentifier
A new attachment can only be created by adding to an event and saving the event
A reminder alarm should not contain emailAddress or urlString because these properties are unsupported
%@ <%p> {UUID = %@; displayName = %@; email = %@; phoneNumber = %@; firstName = %@; lastName = %@; isSelf = %d}
ApproachingDeparture
LeaveNow
RunningLate
%@ <%p> Date = %@
EventAction
ExceptionDate
SuggestedEventInfo
ConferencesSet
%@ <%p> 
 {title = %@; 
 calendar = %@; 
 alarms = %@; 
 URLString = %@; 
 lastModified = %@}
%@ <%p> {%@; 
 location = %@; 
 startLocation = %@; 
 startDate = %@; 
 endDate = %@; 
 allDay = %u; 
 timeZone = %@; 
 travelTime: %ld; 
 recurrences = %@; 
 attendees = %@}
EKChangedCalendar
EKChangedTitle
EKChangedLocation
EKChangedAllDay
EKChangedStartDate
EKChangedEndDate
EKChangedTimeZone
EKChangedEndTimeZone
EKChangedTravelTime
EKChangedRecurrenceRule
EKChangedAvailability
EKChangedPrivacy
EKChangedNotes
EKChangedAttendeeComment
EKChangedURL
EKChangedParticipationStatus
EKChangedAlternateTimeProposal
EKChangedJunkStatus
EKChangedResponseComment
EKChangedPriority
EKChangedSequence
EKChangedAlarmsAdded
EKChangedAlarmsRemoved
EKChangedAlarmsModified
EKChangedAttendeesAdded
EKChangedAttendeesRemoved
EKChangedAttendeesModified
EKChangedShareesAdded
EKChangedShareesRemoved
EKChangedShareesModified
EKChangedAttachmentsAdded
EKChangedAttachmentsRemoved
EKChangedAttachmentsModified
EKChangedCalendarColor
EKChangedCalendarTitle
EKObjectChangeSummarizer.m
Diff summary called on objects of different class
<%@: %p>(transportType = %@, conservativeDepartureDate = %@, conservativeTravelTime = %@, suggestedDepartureDate = %@, estimatedTravelTime = %@, aggressiveDepartureDate = %@, aggressiveTravelTime = %@, routeName = %@, supportsLiveTraffic = %@, currentTrafficDensity = %@, trafficDensityDescription = %@, travelState = %@)
transportType
conservativeDepartureDate
conservativeTravelTime
suggestedDepartureDate
estimatedTravelTime
aggressiveDepartureDate
aggressiveTravelTime
routeName
supportsLiveTraffic
currentTrafficDensity
trafficDensityDescription
travelState
AUTOMOBILE
TRANSIT
WALKING
BICYCLE
UNKNOWN_TRANSPORT_TYPE
FERRY
RIDESHARE
(unknown: %i)
NotTraveling
Traveling
TravelingSpecificallyToThisDestination
TravelingInDirectionOfThisDestination
TravelingAwayFromDestination
Arrived
(unknown: %lu)
event_id
+[EKPersistentObject relations] not implemented in subclass
Subclass %@ of EKPersistentObject did not implement +relations
uniqueIdentifier
EKPersistentObject.m
Trying to set the object ID on an object that has one!
Error checking whether object %@ exists: %@
v16@?0i8B12
Error loading default properties for object %@ from daemon: %@
'%@' is not a relation of '%@'
Trying to add an object as a related object for property %@ on %@, but it's not a relation or not to-many
Trying to remove an object as a related object for property %@ on %@, but it's not a relation or not to-many
Requested set of relation called %@ on a %@, but that doesn't exist.
Setting a to-many relation requires an NSSet
Setting a relation requires an EKPersistentObject
v20@?0i8@"NSNumber"12
@16@?0@"NSString"8
v20@?0i8@"NSDate"12
v20@?0i8@"NSString"12
@"NSString"16@?0@"NSString"8
v20@?0i8@"NSSecurityScopedURLWrapper"12
v20@?0i8@"CADObjectID"12
v20@?0i8@"NSSet"12
Values and Keys arrays must have the same length, but keys has %lu elements and values has %lu.
v16@?0@"EKPersistentObject"8
v32@?0@"NSString"8@"EKRelation"16^B24
    %@ = %@
%@ <%p> {loaded = %@; updated = %@}
entityType
rowID
v24@?0@"NSDictionary"8@"NSError"16
frequency
interval
firstDayOfTheWeek
daysOfTheWeek
daysOfTheMonth
monthsOfTheYear
daysOfTheYear
weeksOfTheYear
setPositions
(%.4f, %.4f)
TravelingToDestination
TravelingTowardsDestination
Light
Medium
Heavy
ExtremelyHeavy
Unknown status
Not Determined
Restricted
Denied
Authorized Always
Authorized In Use
Event
Nil resource change passed.
EKEventModifiedNotification
EKEventNaturalLanguageSuggestedEventExpirationDate
EKEventSuggestedEventSavedFromSyncKey
You must use [EKEvent eventWithEventStore:] to create an event
Trying to initialize an EKEvent as a copy of an object that is not an EKEvent
Can't create EKEvent without persistent event
EKEventLocationPrediction
%@%@%@
x-apple-calevent
x-apple-calevent://%@/%@?o=%lld
Private Event
birthdayTitle
Invalid pin mode: %d
%ld hours, %ld minutes
%ld minutes
NOT 
Prediction not attempted due to past timeouts
privacyLevelString
cachedTimeValuesCalendar
cachedStartOfDayForStartDate
cachedStartOfDayForEndDate
cachedDaysSpanned
cachedIsMultiDayTimedEvent
%@ <%p>
 %@; 
 location = 
%@; 
 structuredLocation = 
%@; 
 startDate = 
%@; 
 endDate = 
%@; 
 allDay = 
%u; 
 floating = 
%u; 
 recurrence = 
%@; 
 travelTime = 
%@; 
 startLocation = 
<%@ rowid=[%d] UUID=[%@] start-date=[%@]>
endLocation
Modified properties changed: YES. Old modified properties: %u
Modified properties changed: NO
alarmSet
@max.self
v24@?0@"EKCalendarItem"8^B16
suggestionInfo
This Calendar Cannot Repeat Events on Multiple Months in a Year
This Calendar Cannot Repeat Events on Multiple Days in a Month
This Calendar Cannot Repeat Events Every %ld Years
EKEvent.m
I screwed up somewhere in date calculation
Normal
Personal
Private
Confidential
/RID=
calshow:%lf?eventid=%d
%@/RID=%llu
alarms
v32@?0@"NSDate"8Q16^B24
%@ <%p> {UUID = %@; name = %@; email = %@; phone = %@; isSelf = %d}
_isFinished
_isExecuting
_availabilityCache
_startDate
_endDate
_ignoredEventID
_addresses
_resultsBlock
_requestID
_queue
error
 <%@>
%@ <%p> {UUID = %@; name = %@; email = %@; phone = %@; status = %ld; role = %ld; type = %ld}
owner
calendaritem_owner_id
notes
location
structuredLocation
attendees
attachments
travelTime
calendarIdentifier
timeZone
calendar.calendarIdentifier
B16@?0@"NSSet"8
B16@?0@"<EKFrozenMeltedPair>"8
B16@?0@"NSString"8
@"NSSet"16@?0@"NSSet"8
@16@?0@"NSSet"8
not nil
v24@?0@"EKObject"8^B16
v24@?0@"<EKFrozenMeltedPair>"8^B16
v24@?0@8^B16
v32@?0@"NSString"8@"NSSet"16^B24
v32@?0@"NSString"8@"NSMutableSet"16^B24
<%@ uniqueIdentifier=[%@]>
EKObject Shared Lock %lu
Invalid day number
weekNumber
%ld%@
%@ <%p> { %@ }
isAllDay
rrule_%d_frequency
rrule_%d_interval
rrule_%d_end
alarm_%d_absoluteDate
alarm_%d_relativeOffset
alarm_%d_locationTitle
alarm_%d_proximity
public.calendar-event
CSSearchQuery
CSSearchQueryContext
comment
namedLocation
primaryRecipients
authors
com.apple.iCal
primaryRecipients == "%@*"cdwt || authors == "%@*"cdwt || recipientNames == "%@*"cdwt || recipientEmailAddresses == "%@*"cdwt || authorNames == "%@*"cdwt || authorEmailAddresses ==  "%@*"cdwt || 
contentType == "%@" && (
title == "%@*"cdwt || comment == "%@*"cdwt || namedLocation == "%@*"cdwt || 
title == "%@*"cdwt || 
namedLocation == "%@*"cdwt || 
comment == "%@*"cdwt || 
 || 
&& startDate <= $time.absolute(%f) && endDate >= $time.absolute(%f)
&& endDate > $time.absolute(%f)
&& startDate < $time.absolute(%f)
Birthday
CalDAV
Local
Subscription
Exchange
Suggestions
CGColor
hasSharees
Invalid entity type passed: %d
Can't directly init a calendar. Use calendarWithEventStore
DEFAULT_TASK_CALENDAR_NAME
default reminders list name
Reminders
DEFAULT_CALENDAR_NAME
Default calendar name
Siri Suggestions
Name of default reminders calendar
#%02X%02X%02X
#%02x%02x%02x
Encountered illegal value for EKCalendarType
%@ <%p> {title = %@; type = %@; allowsModify = %@; color = %@;}
B16@?0@"EKCalendar"8
LOCAL
BIRTHDAYS
;%d;
x-apple-calendar://%@
Error checking whether calendar has events: %@
Error checking whether calendar has reminders: %@
Not implemented
This stub exists for compatibility with macOS
B24@?0@"EKAlarm"8@"NSDictionary"16
v24@?0@"EKAlarm"8^B16
EKCalendar.m
v32@?0@"NSString"8@"NSString"16@"NSError"24
%@ <%p> info = %@ url = %@
Calendar must be nil or Gregorian
Invalid date components: must have at least a year, a month, and a day
/System/Library/LocationBundles/RemindersAlerts.bundle
EKAlarm.m
date != nil
%@ <%p> {triggerDate = %@}
%@ <%p> {triggerInterval = %lf}
location-reminders
EKVirtualConferenceError
v24@?0@"EKVirtualConference"8@"NSError"16
v24@?0@"<NSCopying>"8@"NSArray"16
EKVirtualConference title: %@, conferenceDetails: %@, joinMethods: %@, source: %@
com.apple.calendar.virtualconference
(nil)
v24@?0@"<NSCopying>"8@"NSError"16
v16@?0@"<NSCopying>"8
EKVirtualConferenceRoomType title: %@, identifier: %@, extensionBundleIdentifier: %@
EKVirtualConferenceJoinMethod title: %@, url: %@, isBroadcast: %@
%@ <%p> {UUID = %@; name = %@; email = %@; status = %lu; accessLevel = %lu;}
invite-accepted
invite-declined
invite-deleted
invite-invalid
invite-noresponse
.plist
v20@?0i8Q12
v32@?0@"NSString"8@"NSArray"16@"NSError"24
v32@?0@"CalDAVOfficeHour"8Q16^B24
v24@?0@"NSString"8@"NSError"16
MobileMe
Subscribed
Other
%@ <%p> {UUID = %@; type = %@; title = %@; externalID = %@}
host
port
useSSL
ownerAddresses
ownerAddress
preferredOwnerAddress
v24@?0@"NSError"8@"DAAccountExternalIdentificationInfo"16
timeOfLastExternalIdentification
managedConfigurationAccountAccess
_EKVirtualConferenceRequestTypeKey
_EKVirtualConferenceRequestTypeRoomTypes
_EKVirutalConferenceRequestTypeJoinMethodsForRoomType
_EKVirtualConferenceRequestTypeURLInvalidate
_EKVirtualConferenceRequestRoomTypeIdentifier
_EKVirtualConferenceRequestURLParameterForInvalidation
_EKVirtualConferenceRoomTypeTitleKey
_EKVirtualConferenceRoomTypeIdentifierKey
_EKVirtualConferenceJoinMethodTypeIdentifierKey
_EKVirtualConferenceJoinMethodTitleKey
_EKVirtualConferenceJoinMethodURLKey
_EKVirtualConferenceInfoTypeIdentifierKey
_EKVirtualConferenceInfoTitleKey
_EKVirtualConferenceInfoDetailsKey
_EKVirtualConferenceInvalidationResultKey
_EKVirtualConferenceInvalidationResultSucceeded
_EKVirtualConferenceInvalidationResultFailed
_EKVirtualConferenceTypeIdentifierKey
EKVirtualConferenceExtensionContext.m
Invalid completion method called for request type
color
display_order
EKTravelTimeErrorDomain
v24@?0@"CalRoute"8@"NSError"16
MKPlacemark
MKMapItem
MKDirectionsRequest
MKDirections
MKErrorUnknown
MKErrorServerFailure
MKErrorLoadingThrottled
MKErrorPlacemarkNotFound
MKErrorDirectionsNotFound
EKTravelLookupErrorUnknown
v24@?0@"MKETAResponse"8@"NSError"16
v24@?0@"CLPlacemark"8@"NSError"16
CLGeocoder
RTRoutineManager
CLLocation
semanticIdentifier
GEOMapService
Trying to initialize an EKStructuredLocation as a copy of an object that is not an EKStructuredLocation
geoLocation
%4f, %4f
ab://
ab\://
%@ <%p> {title = %@; address = %@; geo = %@; abID = %@; routing = %@; radius = %f;}
geo:%f,%f
x-apple-eventkit
Reminder
RecurrenceRule
Attendee
Organizer
ResourceChange
InviteReplyNotification
ResourceChangeNotification
SuggestionNotification
CategoryLink
Participant
temporary
%@:///%@/%@%d
endDate is nil
occurrenceCount == 0
occurrenceCount
%@ <%p> { UNTIL=%@ } 
%@ <%p> { COUNT=%lu }
Attachment
ClientLocation
StartLocation
EndLocation
calendarItemOwner
<%@ %p> %@
file
%@ <%p> {%@; URL:%@; localRelativePath:%@; filename:%@; fileFormat:%@; fileSize:%@; UUID: %@
_MKLaunchOptionsFromTimeToLeaveNotificationKey
v28@?0@"MKMapItem"8@"NSError"16B24
v24@?0@"MKMapItem"8@"NSError"16
FIRST=%@;
LAST=%@;
B24@?0@"EKCalendar"8@"NSDictionary"16
EKCalendarVisibilityManagerDefaultQ
Method not implemented on iOS.
EKEventStoreChangedNotification
EKEventStoreChangedObjectIDsUserInfoKey
EKEventStoreChangeTypeUserInfoKey
EKEventStoreCalendarDataChangedUserInfoKey
EKEventStoreRemindersDataChangedUserInfoKey
EKEventStoreTimeZoneChangedNotification
EKEventStoreBatchedChangeEventNotification
EKEventStoreCalendarsChangedNotification
EKEventStore_DistributedNotification_AutomaticGeocodingAllowedChanged
EKEventStoreIdleChangeTrackingClientWasPurgedNotification
EKEventStoreModifiedObjectIdentifiers
EKEventStoreRevert
x-apple-reminderkit
REMCDReminder
x-apple-calendar
Conference
com.apple.eventkit.eventstore.calendars
com.apple.eventkit.eventstore.registered
com.apple.eventkit.eventstore.unsaved
com.apple.eventkit.eventstore.dbchanged
com.apple.eventkit.eventstore.constraintsCache
com.apple.eventkit.eventstore.notificationCollectionCache
kCalTimedDefaultAlarmChangedNote
kCalAllDayDefaultAlarmChangedNote
v20@?0B8@"NSError"12
v12@?0C8
v20@?0i8@"NSDictionary"12
v20@?0@"EKEventStore"8B16
CADObjectID
com.apple.eventkit.autoreset
v28@?0i8@"NSArray"12@"NSArray"20
v32@?0@"NSNumber"8Q16^B24
B24@?0@"EKSource"8@"NSDictionary"16
EKEventStore.m
Invalid entity type passed
objectID
%@/RID=%lu
%@:%@
Nil URI passed
%@: path is empty or nil
externalIdentifier must be an instance of NSString
externalIdentifier is empty
predicate is nil
predicate is not a calendar item predicate created through EKEventStore
predicate is not a reminder predicate created through EKEventStore
v20@?0i8B12B16
-[EKEventStore contactIdentifierForCalendarItem:]_block_invoke
-[EKEventStore addContactIdentifier:forCalendarItem:]_block_invoke
-[EKEventStore removeContactIdentifier:forCalendarItem:]_block_invoke
-[EKEventStore countOfRemindersWithContactIdentifier:]_block_invoke
-[EKEventStore remindersWithContactIdentifier:]_block_invoke
v20@?0@"NSArray"8i16
-[EKEventStore birthdayCalendarEnabled]_block_invoke
-[EKEventStore setBirthdayCalendarEnabled:]_block_invoke
-[EKEventStore suggestedEventCalendar]_block_invoke_2
-[EKEventStore insertSuggestedEventCalendar]_block_invoke_2
-[EKEventStore insertSuggestedEventCalendar]_block_invoke
-[EKEventStore removeSuggestedEventCalendar]_block_invoke_2
-[EKEventStore confirmSuggestedEvent:]
-[EKEventStore acceptSuggestedEvent:]
-[EKEventStore deleteSuggestedEvent:]
SGSuggestionsService
-[EKEventStore naturalLanguageSuggestedEventCalendar]_block_invoke_2
nil notification passed in to [EKEventStore saveNotification:commit:error:]
Nil notification collection passed in to [EKEventStore saveNotificationCollection:commit:error:]
Unsupported status for responding to shared calendar invitation. Only accept and decline are supported
B24@?0@"EKResourceChange"8@"NSDictionary"16
v44@?0i8@"NSArray"12@"NSArray"20@"NSArray"28@"NSDate"36
v28@?0i8Q12@"NSArray"20
nil attachment passed in to [EKEventStore saveAttachment:commit:error:]
Object is not an EKPersistentObject
Unknown entity name %@ for objectID: %@ with entity type: %d
Object is not an EKObject
Can't add deleted or inserted object to update set
Attempt to insert a nil object.
Attempt to insert something that is not a EKPersistentObject.
Attempt to insert an object that belongs to a different event store.
Attempt to delete a nil object.
Attempt to delete something that is not a EKPersistentObject.
predicate was not created with EKCalendarStore methods
FetchEventsMatchingPredicate
duration
block is nil
v28@?0@"NSDate"8B16^B20
@"NSArray"16@?0@"CalDateRange"8
%@: startDate is nil
%@: endDate is nil
v20@?0i8q12
v44@?0i8B12q16@"NSData"24i32i36i40
Constraints data size is wrong.  Your version of EventKit is incompatible with the running version of calaccessd.
%@.simulated.calendar.apple.com
simulated.calendar.apple.com
EKConferenceUtils.workQueue
v16@?0@"LSApplicationRecord"8
com.microsoft.lync2013.iphone
Skype
v24@?0@"LSAppLink"8@"NSError"16
com.apple.InCallService
com.apple.facetime
v16@?0@"NSString"8
com.apple.mobilecal.FacetimeExtension
[%@] startDate: [%@] endDate: [%@] duration: [%@ seconds] conflictedParticipants count: [%@]
Event update: %@
iTIP
%@ has updated the event: %@, scheduled for %@. To acknowledge this invitation, click the link below.
%@ has updated the event: %@, scheduled for %@ at %@. To acknowledge this invitation, click the link below.
%@ has updated the event: %@, scheduled for %@ at %@ (%@). To acknowledge this invitation, click the link below.
iCal-Request.ics
Event invitation: %@
%@ has invited you to the event: %@, scheduled for %@. To accept or decline this invitation, click the link below.
%@ has invited you to the event: %@, scheduled for %@ at %@. To accept or decline this invitation, click the link below.
%@ has invited you to the event: %@, scheduled for %@ at %@ (%@). To accept or decline this invitation, click the link below.
Event canceled: %@
%@ has canceled the event: %@. To handle this cancellation, click the link below.
iCal-Cancel.ics
selfAttendee.statusRaw
Event accepted: %@
Event declined: %@
Event tentatively accepted: %@
%@ has accepted your invitation to the event: %@, scheduled for %@.
%@ has accepted your invitation to the event: %@, scheduled for %@ at %@.
%@ has accepted your invitation to the event: %@, scheduled for %@ at %@ (%@).
%@ has declined your invitation to the event: %@, scheduled for %@.
%@ has declined your invitation to the event: %@, scheduled for %@ at %@.
%@ has declined your invitation to the event: %@, scheduled for %@ at %@ (%@).
%@ has tentatively accepted your invitation to the event: %@, scheduled for %@.
%@ has tentatively accepted your invitation to the event: %@, scheduled for %@ at %@.
%@ has tentatively accepted your invitation to the event: %@, scheduled for %@ at %@ (%@).
iCal-Reply.ics
[%@] username: [%@], password: [%@]
******
%@ <%p> {UUID = %@; type = %@; title = %@; externalId = %@}
@"CalVirtualConferenceJoinMethod"16@?0@"EKVirtualConferenceJoinMethod"8
@"EKVirtualConferenceJoinMethod"16@?0@"CalVirtualConferenceJoinMethod"8
Video Conference
relativeOffset
absoluteDate
isAbsolute
Either the relative offset or absolute date must be set.
,%s%ld%s
%s%ld%s
com.apple.eventkit
mailto:
%@%@
EKUIAttendeeUtils_AttendeeHasResponded
com.apple.eventkit.redaction
<EKRedacted>
<%@: %p; Conflicts: %lu Out of total: %lu>
span
com.apple.iCal.viewModelChanged
DisabledCalendars
CollapsedTopLevelNodes
AccountDisplayOrder
LocalGroupsDisplayOrder
com.apple.calendar.preference.notification.changed
SharedCalendarNotificationsDisabled
InvitationNotificationsDisabled
showDeclinedEvents
TimeToLeaveEnabled
TimeToLeaveEnabledNotification
MainWindow
EventKit
Availability
UIAvailabilitySearch
Saving
com.apple.CoreRoutine.LocationOfInterest
v24@?0@"<GEOMapItem>"8@"NSError"16
Swim Lesson
Type
Poker Night
Book Club
Staff Meeting
v32@?0@"NSString"8@"NSDictionary"16^B24
%@ CONTAINS SELF
Unexpected frequency value loaded from database: %d
Unexpected CalDayOfWeek: %d
Unexpected EKWeekday: %d
The given source's 'accountID' is nil.  The availability cache will not be able to give availability data.  Cache: [%@]
[%@] initialized.
Gathering cached availability for address: [%@]
No cached spans found for address: [%@].  Ignored event ID: [%@].  Will send out remote fetch for availability.
Found stale cached spans for address [%@] in range with start date [%@] and end date: [%@].  Will send out remote fetch for availability.
Cache hit.   freshly cached spans found.
This availability cache's source is invalid.  Will not execute the availability request.  Cache: [%@]
This availability cache's source does not support availability requests. Will not execute the availability request.  Source account ID: [%@]. Cache: [%@].
Invalid start and end dates given.  Will not execute the availability request.
No addresses given in the availability request.  Completing quickly.
A client requested availability between start date [%@] and end date [%@].  Ignored event ID: [%@].  Addresses: [%@]
[%lu] local cached spans were found for addresses: [%@].  Ignored event ID: [%@].  Sending these results immediately to the requesting client.
Sending network request for addresses: [%@].  Start date: [%@].  End date: [%@]  Ignored event ID: [%@].  Account ID: [%@]
Availability request with ID [%@] received a response with results: [%@]. Elapsed milliseconds: [%f]
Availability request with ID [%@] completed with error: [%@].  Total elapsed milliseconds: [%f]
Cancelling availability request with request ID: [%@]
No spans were returned for address [%@] and ignored event ID [%@]
Failed to deserialize structured data. Error: %@
Failed to serialize structured data dictionary: %@. Error: %@
Running occurrence cache search for search term = %@
Call to calendar daemon failed: %@
Received batch results from server for search term = %@, results = %{public}@, finished = %{public}@, reply ID = %{public}@
EKCalendarNotificationReference: failed to get persistent object for notification
After generating a notification, it was observed that its backing data was removed from the database.  Clearing the notification.  Object ID: [%@]  Generated notification: [%@]
Attempting a cross-store copy for object of type %@. myEventStore = %p, other = %p
Failed to create committed relationship for relation %@ (%{public}@)
Connection interrupted!
Client tried to open too many connections to calaccessd. Refusing to open another
Error setting initialization options: %@
Will not set a travel lookahead interval of less than 0.  Given value: [%f]
Saving of invisible calendars commencing.
No calendar identifier found.  Will not be able to save all invisible calendars.  Calendar: [%@]
Saving calendar identifier [%@] of invisible calendar
Saving of invisible calendars completed.
Not updating deselected calendar identifiers because nothing has actually changed.
Error archiving contact by email predicate. Error: %@.
EKAutocompleteSearch: Beginning spotlight search.
EKAutocompleteSearch: Got spotlight search results.
EKAutocompleteSearch: Search was cancelled before we processed results. Abandoning.
Spotlight query controller returned an error when searching for string (%@), error: %@
EKAutocompleteSearch: Processing results.
EKAutocompleteSearch: Search was cancelled while processing results. Abandoning.
EKAutocompleteSearch: Search took longer than allowed time. Stopping earlier.
EKAutocompleteSearch: Finished processing results.
EKAutocompleteSearch: Search was cancelled while we processed results. Abandoning.
EKAutocompleteSearch: Returning results via callback.
Nil rowID passed in to createOwnerIDWithRowID:objectType:
Invalid owner object type. Type: %@
Invalid rowID passed in. rowID: %@
Computing diff between %@ and %@
Objects are of different classes.  Diff finished
Objects have different values.  Diff finished
Objects have different identities.  Diff finished
One or both objects are nil.
Computing single value differences.
Single value differences? [%d]
Computing single value relationship differences.
Single value relationship differences? [%d] - %@
Computing multi value relationship differences.
Multi value relationship differences? [%d] - %@
Computing identity differences.
Identity differences? [%d] - %@
Computing immutable differences.
Immutable differences? [%d] - %@
-[EKAccountRefresher _eventStoreChanged], and _currentlySyncing changed from %{BOOL}i to %{BOOL}i (sources=%{BOOL}i; calendars=%{BOOL}i)
-[EKAccountRefresher _eventStoreChanged], and _currentlySyncing is still %{BOOL}i (sources=%{BOOL}i; calendars=%{BOOL}i)
%@ has not yet finished refreshing
Calling -[EKAccountRefresher refresh] more than once is not supported.
Started a refresh of %lu accounts and %lu subscribed calendars
_refreshControlMaximumVisibleTimeElapsed; calling sync completed
timed out waiting for sync to start; calling sync completed
Hiding sync spinner after %fs
Validation is failing for %@ because access has not been granted for %{public}@.
Validation is failing for %@ because readonly items can't be removed.
Validation is failing for %@ because it's not deletable by shared calendar sharees.
Attempting to set the same selfAttendee using a different EKAttendee instance. There is no work to be done, but if the passed in instance had changes then they will not be saved when this calendar item is saved.
Changing timeout in [%@] from [%@] to [%@].
Set 'purgingAllowed' from [%@] to [%@] in [%@]
No existing store was found in [%@].  Created event store: [%@].
The purging timeout is 0.  Will not set up an idle timer for [%@].
There is no event store being cached at the moment.  Will not set up an idle timer for [%@].
Purging is disallowed.  Will not set up an idle timer for [%@].
No existing timer found in [%@].  Will create a timer.
Idle timer fired in [%@].
Clearing event store: [%@] in [%@]
Setting the timer's timeout to [%@] seconds and its leeway to [%@] seconds.  The timer will fire around [%@] in [%@]
Uninstalling dispatch timer in [%@]
Adding persistent notification observers for [%@]
Removing persistent notification observers for [%@]
[%@] received notification: [%@]
Ignored low-level [%@] notification in [%@].
Removing transient event store change observer for event store [%@] in [%@]
Firing changed block from [%@]
Error saving event for reporting as %@. Error = %@
(cachedJunkStatus) junkStatus was set on the event to %d
(cachedJunkStatus) event was just created event is not junk
(cachedJunkStatus) event is not junk because it was either organized by me or has no attendees
(cachedJunkStatus) my status on the event is accepted or tentative so the event is not junk
(cachedJunkStatus) junk status for the invitation is %@
(couldBeJunk) event could be junk [%@]
(couldBeJunk) event is not junk [%@]
(junkStatusForInvitation) junk reporting is not supported on the server
(junkStatusForInvitation) junk reporting is supported on the server
(junkStatusForInvitation) our contacts reputation check returned that we should %@ the organizer
(junkStatusForInvitation) our eventstore reputation check returned that we should %@ the organizer
Unknown CADFilter subclass: %@
A request to search for more times when all attendees can attend was made.
A request to search for more times when some attendees can attend was made.
Searching reset with organizerAddressForNewlyScheduledEvent [%@] and event [%@]
No event given.  Will not search for alternative times.
The event's source does not support availability requests.  Will not issue search for alternative times.
The event's start date is the same as its end date.  Will not issue search for alternative times.
The event is an all-day.  This is currently not supported.  Will not issue search for alternative times.
Starting original conflict detection - event start date: [%@] event end date: [%@] ignored event ID: [%@] source: [%@]
Extracting attendees for original conflict detection.
Will not consider attendee for conflict detection because it is a room: [%@]
No participant address found for participant: [%@].  Will not search use this participant to search for alternative times.
The event has a dirty date property, so we'll forcibly request availability for this participant: [%@]
Attendee has declined: [%@]
Attendee needs to respond: [%@]
Adding participant with address [%@] to the list of attendees to be included in conflict resolution.  Participant: [%@]
Could not find the organizer's address.  This can sometimes happen if the event is being scheduled for the first time.  Organizer: [%@]
No 'organizerAddressForNewlyScheduledEvent' given.  The organizer for this event is unknown and conflict resolution will likely be incorrect and irrelevant.
Adding organizer with address [%@] to the list of attendees to be included in conflict resolution.  Participant: [%@]
The event's dates have not been dirtied and there are no addresses collected for looking up availability information for the event's original time span.
Detected a conflict.  [%@] attendees have declined.  Will perform conflict resolution by searching for time slots in the future. 
No conflicts detected, but noConflictFound flag set. Will attempt to perform conflict resolution.
No conflicts detected.  Will not attempt to perform conflict resolution.
We need to figure out the availability status of some attendees in order to complete conflict detection.  Attendees: [%@].
self went away.  Returning early.
The availability operation went away.  Returning early.
Error encountered while searching.  Error: [%@]
Could not find participant.  Will not count as busy.  Address: [%@]
This participant is busy during the event's time range: [%@]
This participant is completely free during the event's time range: [%@]
Including declined participants in the list of participants with conflicts.
Conflict detection complete.  Conflicted participants: [%@]
Participants with conflicts found.  Will search for other time slots.  Participants with conflicts: [%@]
No participants with conflicts found.  Will not continue on by searching for other time slots.
Sending off availability request operation for execution: [%@]
A search attempt was requested.
There are no more search attempts remaining.  Will not search.
There is an availability request in progress.  Will not search.
Preparing to search for alternate times in order to proceed with conflict resolution.
The availability search operation went away.  Returning early.
This availability search operation was cancelled: [%@]
Operation resulted in an error.  Re-trying search.  Error: [%@]
Searching for time slots between start date [%@] and end date [%@] with ignored event ID [%@] and addresses [%@]
Resetting search fallback numbers.  Current remaining search attempts: [%@].  Current availability search duration multiplier: [%@]
Resetting of search fallback numbers complete.  New remaining search attempts: [%@].  New availability search duration multiplier: [%@]
No 'state changed' callback found.  Will not send state changed information.  State: [%@]
Sending state change.  State: [%@]
Transitioning to the [%@] state and attempting a search.
Processing results - start date: [%@] end date: [%@] results: [%@]
Found [%@] free times and [%@] non-free times.
Work remains, but there are no more remaining search attempts left.  Search exhausted.
Search has not progressed and no more work remains.  This is an invalid state, as there should always be work to do until we've seen search results or there are no more search attempts left.
There are [%@] remaining search attempts left.  Continuing search.
Halting search.
No leftover spans found for latest date: [%@]
No participant found for participant with address: [%@].  Will not generate time spans for this participant's availability information.
This span's start date is equal to its end date: [%@].  Will not consider this span in alternative time calculations.
Could not find a time span that contains date: [%@]
No replacement spans found.
Validating [%@] spans.
Found span whose start date doesn't match previous span's end date.  Previous lastEndDate: [%@].  Cached span: [%@]
Span's start and end date is the same: [%@]
Span's start date is after its end date: [%@]
Contiguous free spans exist.  Last inspected span: [%@].  This span: [%@]
Time gaps exist in the spans range: [%@]
A zero-duration span exists in the spans range: [%@]
At least one span's start date comes after its end date in the spans range: [%@]
At least two contiguous spans are marked as being free in the spans range: [%@]
Deserialization of trust error [%@]
We were unable to serialize the trust for a certificate error [%@].
Gathering freshly cached spans between [%@] and [%@]
There were no valid non-overlapping results %@
We are trying to insert a span with no end date (%@). current dates: (%@)
Inserting spans [%@].
ERROR: No span given to insert results.
ERROR: No valid span given to insert results.
Clamping date range for spans between [%@] and [%@]
Clamping date range for spans.  Original start date: [%@].  Original end date: [%@].  New start date: [%@].  New end date: [%@].
There is only one span.  Created a new span and set its type to: [%@]
Clamped the spans.  firstTruncatedSpan: [%@].  lastTruncatedSpan: [%@]
No clamping needed.
Failed to fetch event for attendee replied notification %{public}@ when attempting to acknowledge. Silently ignoring.
Failed to clear attendee replied notification %{public}@: %@
We completed the import during the file separation phase.
We failed to figure out the different types of files we were trying to import. Aborting import.
Importing iCal files (%@) and vCal files (%@) to calendar %@
Importing files to user-specified calendar with identifier ( %@ )
No destination calendar provided.  Will attempt to choose appropriate calendars.
%@ doesn't have a default calendar to put the items into.
Couldn't handle import for all iTIP files.  Bailing.
Couldn't handle import for all non-iTIP files.  Bailing.
We don't know what calendar to import some files to and we don't have a callback for Calendar selection.  Bailing.
No destination calendar provided. We need to ask the user what calendar to import to for %lu files.
User didn't select calendar, instead cancelled, returning. [%@]
User selected calendar: UID( %@ )
User selected calendar %@
Found a calendar archive among multiple files to import. Ignoring the other files.
Found a calendar archive to import but no method for restoring from the backup file.
Attempting to open version 1.0 .ics file.  Will treat it as a vcs file and import.
Couldn't read calendar data from file "%@".  Aborting open.
File %@ has method PUBLISH or NONE.
Not importing file "%@" because it has either zero or more than one ICSEvent
File %@ is an iTIP message.
File %@ has no VCALENDAR.
Error importing iTIP ICS: %@
We did not import the iTip files [%@].
Importing pre-existing event.  Will stay on current calendar: objectID ( %@ )
Importing a pre-existing event but there were no eligible writeable calendars.
Finding preferred source for event with organizer (%@) and attendees (%@)
Failed to import event that has no organizer but it does have attendees.
Event has no organizer or attendees.
Preferring principal because its primary address is an attendee: %@
Failed to choose a preferred source because more than one principal had an attendee as its primary address: %@
Preferring principal because at least one of its alternate email addresses is an attendee: %@
Failed to choose a preferred source because more than one principal had an attendee as an alternate email address: %@
Chose a preferred source because its primary email address matches the domain of the organizer: %@
Failed to choose a preferred source because more than one principal's primary email address matched the domain of the organizer: %@
Chose a preferred source because it is the only source
Failed to choose a preferred source because we didn't match any auto-import criteria. Either the imported file had an organizer or had no organizer/no attendees.
ICS calendar expected to contain a single item, but instead it contained %lu
Expected an event but got %@
Import of [%@] failed with error [%@]
Error fetching changed object IDs: %@
Unsupported entity type: %d
Invalid entity type: %d
Failed to fetch any event sources despite having access to events. Skipping reminder sources and returning 0 sources
Failed to fetch any reminder sources despite having access to reminders. Skipping event sources and returning 0 sources
Event or reminder source without ID: eventSourceID=%@, reminderSourceID=%@, eventSource=%@, reminderSource=%@
Unexpected nil self in birthday update block
Not updating birthday events -- need reset? [%{BOOL}d] birthdays enabled? [%{BOOL}d]
BirthdayEventsGenerationVersion (%d) does not match current version (%d). Forcing regeneration.
BirthdayEventsGenerationLocale (%@) does not match current (%@). Forcing regeneration.
BirthdayEventsGenerationLocale ignoring locale change because locale identifier has not changed (%@)
EKBirthdayListener unable to delete birthday calendar %@, %@
EKBirthdayListener unable to commit birthday calendar deletion %@
Creating Birthday Calendar
EKBirthdayListenerFailed to save calendar to event store with error: %@
EKBirthdayListener inserting birthday for %@ (%@)
EKBirthdayListener unable to save event %@, %@
Resetting All Birthdays in Store
Expected exactly 1 birthday calendar, but instead there are %lu
EKBirthdayListener unable to commit to store %@
EKBirthdayListener received %ld inserted, %ld updated, %ld deleted contacts
No birthday calendar found when trying to add birthdays
EKBirthdayListener removing birthday for %@ (%@)
EKBirthdayListener removing invalid birthday for %@ (%@), No Contact Name!
EKBirthdayListener removing invalid birthday for %@ (%@), Invalid Contact Identifier!
EKBirthdayListener unable to remove event %@ %@
EKBirthdayListener committing changes
Object %@ has no unique identifier: %@
Attempted to acknowledge calendar invite reply notification with objectID %{public}@, but it was not found. Silently ignoring this request.
CADEventPredicate
CADNotifiableEventsPredicate
CADEventsForAssistantSearchPredicate
CADNotificationCenterVisibleEventsPredicate
CADUnacknowledgedEventsPredicate
CADUnalertedEventsPredicate
CADRespondedEventsPredicate
CADUpcomingEventsPredicate
EKMasterEventsPredicate
CADTravelEventsPredicate
CADUpNextEventsPredicate
CADContactEventsPredicate
CADEventCreatedFromSuggestionPredicate
EKReminderPredicate
EKScheduledReminderPredicate
CADCalendarItemsWithExternalIdentifierPredicate
CADPropertySearchPredicate
CADEventTimeWindowPredicate
CADNaturalLanguageSuggestedEventsSearchPredicate
CADEventsForConferenceURLPredicate
Unexpected predicate class: %@
Unknown Predicate Search
predicateClass=%@; predicateFormat=%@
EKPredicateSearch
error=%i; foundItems=%lu
Error (%d) in reply block for CADDatabaseFetchCalendarItemsWithPredicate attempt %d/%d
All retries exhausted for CADDatabaseFetchCalendarItemsWithPredicate
%@: failed to register result object with objectID: %@
Monitor starting up.
Monitor shutting down.
Ignoring expiration timer because the notification monitor is not running.
Data protection is on. Unable to check for updates.
Sync running, but we've been explicitly told to ignore that and refresh anyway.
Sync running. Waiting for it to finish before checking for updates.
Notification monitor wants to reload notification count. Will fetch notification count from the event store as a result
Set notification count to %{public}@.
Notification monitor wants to reload notifications. Will fetch notification references from the event store as a result.
Set notification references to %@.
Current notification count: %{public}@. Last event notification count: %{public}@.
Is initial check: %{public}@.
Count changed to %{public}@ events, Notifying.
Application badges are not supported on this platform. Will not notify.
Posting notification count changed notification.
No expiring notifications. Not setting expiration timer.
Received multiple expiration dates in the past. Will not set expiration timer. Most recent expiration date received was %{public}@
Next expiration fire time will be %{public}@.
Database changed.
Notification count changed externally.
Alert pref changed.
Expiration timer fired.
Fetching event notifications from event store: %@.
Fetched event notifications from event store: %@.
Faulted in notification: %@.
Sync timer fired.
Sync started. Suppressing notification monitor checks while it runs.
Sync done, %@ changes.
Will not set an availability freshness window of less than 0.  Given value: [%f]
Will not set an overridden travel advisory hypothesis conservative travel time of less than 0.  Given value: [%f]
Will not set an overridden travel advisory hypothesis estimated travel time of less than 0.  Given value: [%f]
Will not set an overridden travel advisory hypothesis aggressive travel time of less than 0.  Given value: [%f]
Unexpected error code given to +_defaultDescriptionForCADErrorCode: %d
Already active.  Will not activate [%@]
Already inactive.  Will not deactivate [%@]
nil 'hypothesis' received in [%@]
Updating [%@] based on new hypothesis. now: [%@] startOfLeaveNowPeriod: [%@] startOfRunningLatePeriod: [%@]
Refreshing [%@]
Period refreshed from [%@] to [%@] in [%@]
Calculated next refresh date of [%@] in [%@]
[%@] is before now.  Will not set up a timer to refresh [%@]
Timer fired in [%@].
+alternateUniverseClass called on a class that does not implement it (%{public}@)
Error loading number %@ from daemon: %@
Error loading date %@ from daemon: %@
Error loading string %@ from daemon: %@
Error loading data %@ from daemon: %@
Error loading to-one relation %@ from daemon: %@
Error loading to-many relation %@ from daemon: %@
Failed to take value for related object with key %@
Could not convert dictionary into EKObjectID. entityType = %@, rowID = %@
nil 'string' given.  Will not find a corresponding travel state.
Unknown travel state given: [%@].  Will not find a corresponding travel state.
RIDESHARE is unsupported in geoTransportTypeAsString. Returning nil.
nil 'string' given.  Will not find a corresponding transport type.
Unknown transport type given: [%@].  Will not find a corresponding transport type.
nil 'string' given.  Will not find a corresponding traffic density.
Unknown traffic density given: [%@].  Will not find a corresponding traffic density.
Could not archive last sync user info, error = %@
Could not unarchive last sync user info, error = %@
Tried to set proposed start date on invalid event: %@
Beginning location prediction for event: %@
Failed to predict a structured location for event: %@ : %@
Returning location prediction [%@] for event: %@
Setting predicted location title to %@ for the event %@
LocationPrediction: this is %@the main thread. Using timeout %f
LocationPrediction: Reset timeout
LocationPrediction: Updating timeout from %f to %f
LocationPrediction: Not attempting prediction due to past timeouts
Calling _hasRecurrenceRuleChangeRequiringSpanAll on an event that has or had multiple recurrence rules is not supported. Results may be unpredictable. Current count = %d, previous = %d
Updating modified properties for event: %{public}@.
Updating modified properties for detached items: %@.
Updated modified properties: %u. %{public}@. Clear modified flags: %lu. Event: %{public}@
Event %{public}@ is not significantly detached because it is not detached
Event %{public}@ is significantly detached because its master is a phantom
Event %{public}@ is significantly detached because its start date differs
Event %{public}@ is significantly detached because its duration differs
Event %{public}@ is significantly detached because its location differs
Event %{public}@ is significantly detached because its title differs
Event %{public}@ is significantly detached because its status differs
Event %{public}@ is significantly detached because it is externally organized and its participation status differs
Event %{public}@ is significantly detached because its organizer differs
-[EKEvent updateEventToEvent:] is about to save itself [%@] with EKSuggestedEventInfo [%@]
-[EKEvent updateEventToEvent:] failed to save with error: %@
-[EKEvent updateEventToEvent:] saved itself correctly [%@]
-[EKEvent updateEventToEvent:] was given a nil event and will CANCEL itself [%@] with EKSuggestedEventInfo [%@]
-[EKEvent updateEventToEvent:] CANCEL finished correctly [%@], now attempting to save
-[EKEvent updateEventToEvent:] CANCEL failed with error: %@
-[EKEvent updateEventToEvent:] was called on an event without a EKSuggestedEventInfo: %@
Operation was cancelled.  Will not return results.  Operation: [%@]
No results block.  Will not pass along results [%@] for operation: [%@]
Finishing operation with error: [%@].  Operation: [%@]
Data protection state changed.  New 'dataIsAccessible' state: [%@].
Unexpected CalAttendeeStatus: %d
Unexpected EKParticipantStatus: %d
Error creating alarm: [%@]
Error creating attendee: [%@]
Error creating recurrence rule: [%@]
Reached maximum depth while validating root object %{public}@
Object of type %{public}@ (uniqueIdentifier = %{public}@) failed validation while validating relation %{public}@ with error [%@].
Property %@ was unavailable on backingObject %@. %@
Unable to set single changed value %@. Property %@ was unavailable on backingObject %@. %@
Unable to add multi changed object values %@. Property %@ was unavailable on backingObject %@. %@
Unable to remove multi changed object values %@. Property %@ was unavailable on backingObject %@. %@
Failed to get melted object for frozen object related by key %@. Event store is %@
Missing corresponding added object with semantic identifier %@ for relation key %{public}@.
All EKObjects need to have a unique identifier but %@ does not. %@
Attempted to apply change from incompatible object. My class = %{public}@, other class = %{public}@
Unexpected object type %{public}@ in change set for change to single value key %{public}@
Unexpected object type %{public}@ in change set for multi value add for key %{public}@
Unexpected object type %{public}@ in change set for multi value delete for key %{public}@
Validating deletion on an EKCalendar that allows both events and reminders. This may not work as expected: %@
Can't merge %@ with %@ because they are the same calendar.
Can't merge %@ with %@ because they are in different sources.
Can't merge %@ with %@ because %@ doesn't allow content modifications
Can't merge %@ with %@ because %@ is a shared calendar
Can't merge %@ with %@ because %@ is a reminder list
Can't merge %@ with %@ because this account doesn't support sharing scheduling and %@ is a shared calendar and %@ isn't.
Can't merge %@ with %@ because %@ isn't deletable
Error moving subscribed calendar: %@
Unable to export calendar data: %@
Error trying to report calendar invite as junk. Error: %@
Could not load extension for room type title: %@ identifier: %@ extensionIdentifier: %@, error = %@
Skipping extension join method %@ because it has insufficient information. Title = %@ URL = %@
Extension %@ did not provide any join methods.
Failed to get virtual conference join methods, extension = %@ request = %@ error = %@
Failed to find virtual conference extensions. Error = %@
Skipping extension room type %@ because it has insufficient information. Identifier = %@ title = %@
Request for virtual conference room type cancelled, request = %@ error = %@
Request for virtual conference room interrupted, request = %@ error = %@
Request for virtual conference room types failed, extension = %@ request = %@ error = %@
Request for virtual conference room types failed,timed out
Unexpected CalShareeStatus: %d
Unexpected EKShareeStatus: %d
Unexpected CalShareeAccessLevel: %d
Unexpected EKShareeAccessLevel: %d
Unexpected EKPrivacyLevel: %d
Unexpected CalEventPrivacyLevel: %d
Attempting to set a path (%{public}@) with -[EKSource setConstraintsName:]. Only the name should be supplied without an extension.
Attempting to set a file name with .plist extension (%{public}@) with -[EKSource setConstraintsName:]. Only the name should be supplied without an extension.
Attempting to set an unrecognized constraints name (%{public}@) with -[EKSource setConstraintsName:]. The given name should be a valid .plist resource in CalendarFoundation.
Ignoring attempt to set allowsTasks to %d on source %{public}@. Forcing to NO
Source has more than one calendar with the same external Id: %@
Error: externalIdentificationForAccountID: %{public}@, error: %@
Received request to find travel time from %@ to %@ by %@ arriving on date %@
Calculating travel time from %@ to %@ by %@ on date %@
Didn't find route or error for routeType %@
Found no travel times, only errors.  Trying again with start as current location
Found no travel times, only errors.  Bailing.
Finished finding travel times with results %@
Getting directions %@ with request %@
Travel time lookup failed with error code %@: %@
Found travel time in seconds %lul
Updating start location with current location information
Updated location to %@
Failed to get placemark with error %@
Making sure that %@ has coordinates
%@ already has coordinates
%@ is for current location.  Let MapKit handle
%@ doesn't have coordinates
%@ has no address
%@ has an address.  Looking up coordinates
Found coordinates for address. Updated location to %@
Couldn't find coordinates for address for %@
Couldn't find coordinates for address for %@ and failed with error %@
Wrong scheme for EKObjectID URL; got %@, expected %@; will return nil for objectIDWithURL:
EKObjectID URL has no path
URL with unrecognized ID type %c
EKObjectID URL has no entity name
Unknown entity name %@ with URI %@
Invalid range passed to +[EKObjectIDsFromData:range:]. Need at least %lu bytes, but only have %lu
Unable to write temporary file
Unable to read file at %@: error = %@
Could not get security scoped local URL wrapper for attachment, error = %{public}@, attachment ID = %{public}@
'nil' 'event' provided.  Will not generate URL for an event location.
No structured location found.  Will not generate URL for event: [%@]
Error: Could not weak link MapKit string constant symbol '_MKLaunchOptionsFromTimeToLeaveNotificationKey'. Cannot add '_MKLaunchOptionsFromTimeToLeaveNotificationKey' map item URL option as a result.
MapKit handle found.  Generated URL [%@] for location [%@].
Geolocation found.  Generated URL [%@] for location [%@].
No map kit handle or geolocation found.  Will not generate URL for location: [%@]
Travel advisory not supported.  Will not attempt geocode for event: [%@]
Event has no location.  Will not attempt geocode for event: [%@]
Event has geoLocation but no mapKitHandle.  Will not attempt geocode for event: [%@]
Event is a suggested event.  Will not attempt geocode for event: [%@]
Event has unsaved location changes.  Will not attempt geocode for event: [%@]
Event location hasn't changed since we geocoded 24 hours ago.  Will not attempt geocode for event: [%@]
Geocoding finished but the event location changed. Not saving results of geocode.
Geocoding finished with an error: [%@]
Failed to save geocoded event: [%@]
Geocoding finished and event was updated.
Geocoding finished but the location string was not geocodable.
The event has a location that is a conference room.  Will not attempt to geocode its location string.
Automatic location geocoding is disallowed.  Will not attempt to geocode this event's location string.
Starting geocode of location string for event: [%@]
Starting geocode of mapHandle for event: [%@]
Underlying calendar visibility preferences changed.  Notifying client of [%@]
No calendar identifier found.  Will not be able to find all visible calendars.  Calendar: [%@]
No calendar identifier found.  Will not be able get all deselected calendar identifiers.  Calendar: [%@]
[%@] initialized in process: [%@]
Data is protected.  Will not say that protected data became available.
Data is not protected.  Saying that protected data became available.
Initialized event store with access to events only, initialization options include allowing events only = %{public}@, current process disallows reminders by default = %{public}@
Error closing the database: %@
Error getting changes sequence number from daemon: %@
Error getting changes since sequence number from daemon: %@
No completion block given.  Will not validate object IDs: [%@]
No object IDs given.  Will not validate object IDs: [%@]
Got a not found error when validating an array of objectIDs. Assuming all are invalid
Error validating object IDs from daemon: %@
Not handling notification "%@" because there is no action for that notification name.
Error getting changed object IDs since timestamp %llu from daemon: %@
EventKit received changed object ID with rowid 0 of entity type %li.
Error getting UUID: %@
Attempted to cache a source before _sources was initialized. Ignoring.
Error getting sources: %@
Invalid source type passed to sourcesEnabledForEntityType: %@
Error getting deletable sources: %@
Failed to get scubscribed calendars source: %@
Failed to get local birthday calendar: %@
parentSourceForDelegateSource called with non-delegate source
Error getting granted delegates list: %@
Error updating granted delegate: %@
Error checking whether source (%{public}@, rowID = %d) is managed: %@
Cannot check whether source (%{public}@) is managed because we don't have access to the entity type it supports
Error clearing calendar %@ from notification center: %@
Attempted to cache a calendar before _calendars was initialized. Ignoring.
Error getting all calendars: %@
Error getting deletable calendars: %@
Error getting event with identifier %@: %@
Malformed event URI (%@) passed to _eventWithURI. Expected scheme: %@
Error getting calendar item with URI %@: %@
Error checking for existence of event in eventForUID: %@
Error getting event with uniqueId %@: %@
Error getting calendar item with UUID %@: %@
Error getting all events with uniqueId %@: %@
saveEvent
removeEvent
Error setting invitation status for event: %@
Error importing ICS data into calendars %@: %@
Error getting next assignable color: %@
Error getting default local calendar: %@
Non-delegate sources do not have their own default calendar.  Pass nil to get the default across all non-delegate sources
Error getting default calendar for new events: %@
You cannot set a default calendar on a non-delegate source.  Pass nil to set the default across all non-delegate sources
A delegate source's default calendar must be one of its own calendars.
Can't save reminder either because you have no access or you're trying to save using the legacy store, which is no longer supported
Malformed event URI (%@) passed to _reminderWithURI. Expected scheme: %@
Malformed event URI passed to _reminderWithURI: %@
%ld events were found for predicate: %@
Error fetching properties %@ for reminders: %@
Error getting closest occurrence date for event with row ID %i: %@
Error asking daemon if events have occurrences after date: %@
Cached calendar has no calendarIdentifier: %{public}@
Malformed calendar URI passed to calendarWithExternalURI: %@
%s: Could not fetch contact identifiers with error %@
%s: Could not add contact with error %@
%s: Could not remove contact with error %@
Error asking daemon whether OC occurrences are being generated: %@
Error getting occurrence cache occurrences for calendars %@ from daemon: %@
Error getting occurrence cache counts for calendars %@ from daemon: %@
Error getting scheduled task cache days and task counts from daemon: %@
Sending request to rebuild the occurrence cache.
The occurrence cache was rebuilt successfully.
The occurrence cache was not rebuilt successfully.  Error: [%@]
%s: Failed find out if birthday calendars are enabled with error %@
%s: Unable to set birthday calendars enabled with error %@
%s: Failed to get the Found in Mail calendar with error %@
%s: Could not insert the Found in Mail calendar because it already exists.
%s: Could not insert the Found in Mail calendar with error %@
%s: Could not remove the Found in Mail calendar with error %@
%s not available on this platform
Error determining if the suggested event calendar is modifiable: %@
%s: Failed to get the Natural Language Suggestions calendar with error %@
Error getting unacknowledged event count from daemon: %@
Error getting notifiable event count from daemon: %@
Error getting shared calendar invitations for entity types %i from daemon: %@
Failed to respond to shared calendar invitation with calendar ID %{public}@, account ID %{public}@: %@
Error getting resource changes: %@
Error marking resource change alerted: %@
EKEventStore: Can't get event notification information. Error: [%@]
EKEventStore: Can't get event notification count. Error: [%@]
Error getting replied event invitation information: %@
Error fetching attachment with UUID. UUID: [%{public}@].  Error: [%@]
Error refreshing source: %@
Unknown entity type: %d for object with rowid: %d
No object ID provided.  Will not find out if the object exists.
Error encountered while checking for existence of object with ID: [%@]  Error: [%@]
Error rolling back event store: %@
Attempting to commit changes in event store: [%@].
Client not allowed to modify the calendar database.  Will not commit.
No changes detected.  Calling commit successful.
Error committing event store: [%@]
Failed to insert %{public}@ delete %{public}@ update %{public}@
Enumeration attempt for events that were fetched is complete.  Predicate: [%@]
Invalid fetchIdentifier given to cancelFetchRequest. Type: %{public}@
Error fetching alarm with UUID.  UUID: [%@].  Error: [%@]
Error fetching alarm with externalID.  externalID: [%@].  Error: [%@]
Error getting alarm occurrences in range: %@
Error getting location-based alarms in range: %@
Error getting vehicle trigger alarms in range: %@
%@: Error building fetch predicate for 'Time to Leave' events. Start date is nil.
%@: Error building fetch predicate for 'Time to Leave' events. End date is nil.
%@: Error building fetch predicate for 'Up Next' events. Start date is nil.
%@: Error building fetch predicate for 'Up Next' events. End date is nil.
Error fetching location authorization status for TTL: %@
Error registering for detailed change tracking: %@
Error unregistering for detailed change tracking: %@
Error fetching changed object IDs since token %lu: %@
Change data was the wrong size to hold the changes we received. Told of %i inserts, %i updates, and %i deletes, but change data was only %lu bytes long.
Error marking changed object IDs as consumed: %@
Somebody called clearSuperfluousChanges. This call is no longer needed and does nothing.
Error in call to _saveWithoutNotify: %@
Cannot get source constraints for source %{public}@ because we don't have access to the entity type it supports
Error getting constraints for source: %@
Constraints data size is wrong.  Your version of EventKit is incompatible with the running version of calaccessd.
Error getting notificationCollection for source: %@
NotificationCollectionID requested when it has not yet been created. SourceID: %@
Error checking whether to permit email address: %@
Error checking whether to permitted phone number: %@
Error getting storage usage: %@
Posting synthetic route hypothesis for event external url = %{public}@, route hypothesis = %@
Could not post synthetic route hypothesis for event with external url = %{public}@, error = %d, route hypothesis = %@
Failed to create destination .icbu: %@
Failed to backup: %@
Failed to restore: %@
Attempt to set the default calendar for new reminders using EventKit. This is unsupported. You must use ReminderKit.
Couldn't find out what app opens URL as a universal link, trying to see what opens it as a custom URL scheme: %@
URL should be opened with the FaceTime app, but there was an error fetching FaceTime's application record: %@
Error getting claim binding for URL, error: %@
Failed to find app extension record for extension bundle identifier: %@
Containing record for app extension record could not be found or was the wrong type
Unable to find application record for URL %@, not invalidating.
Could not load extension for extensionIdentifier: %@, error = %@
URL invalidated successfully: %@
Unable to invalidate URL: %@
Failed to invalidate virtual conference URL, extension = %@ request = %@ error = %@
Me Card missing email address, can't send iMIP event: %@
Missing Subject, (invalid part-stat?) can't send iMIP event: %@
No email recipients for iMIP event: %@
Could not parse ICSDocument from data: %@
No 'address' given.  Will not create an adjusted address.
'nil' participant given to function: [%s].  Will not compute needs response state.
Migration returned error code %d
Skipping looking up predicted location because process is not entitled.
Failed to get map item from GEOMapService. error code = %ld, domain = %{public}@, error = %@
Got user interaction for mocked location of interest (%{public}@). Interaction type = %d
error reverse geocoding: %@
no results from reverse geocode for %@
reverse geocode timeout for %@
softlink:r:path:/System/Library/Frameworks/AddressBook.framework/AddressBook
EKDirectorySearchResultSet
EKRecurrenceRule
NSCopying
EKSourceConstraints
EKFrozenReminderCalendar
EKPersistentSharee
Shared
EKFrozenReminderReminder
EKReminderKitSaveAdditions
EKPersistentCalendar
EKFeatureSet
EKAvailabilityCache
EKPredicateEvaluating
EKPredicateEvaluator
CADPredicateValidator
NSObject
EKOccurrenceCacheSearch
EKCancellableRemoteOperation
EKSerializableParticipant
UnitTesting
EKPersistentNotification
EKCalendarNotificationReference
EKObject
EKFrozenMeltedPair
EKProtocolMutableObject
EKProtocolObject
EKRecurrenceGenerator
EKEventAction
EKAttendeeChange
EKOwnerIDProviding
EKPersistentRecurrenceRule
CADInterface
CADAccessInterface
CADDatabaseInterface
CADObjectInterface
CADSourceInterface
CADCalendarInterface
CADCalendarItemInterface
CADEventInterface
CADReminderInterface
CADAlarmEngineInterface
CADNotificationMonitorInterface
CADSpotlightInterface
CADInternalInterface
CADTestingInterface
CADMigrationInterface
CADSyncInterface
CADCalendarToolInterface
CADNotificationCountInterface
CADDatabaseStorageManagementInterface
CADBackupRestoreInterface
EKDaemonConnection
CADClientInterface
CADXPCProxyHelperDelegate
EKVirtualConferenceProvider
NSExtensionRequestHandling
EKPreferences
EKCalendarItemChange
EKNotificationChange
EKReminderFetchRequestToken
EKFetchRequestToken
EKReminderStore
EKUpdatedReminderBackingObjectProvider
EKVirtualConferenceRoomTypeDescriptor
EKVirtualConferenceURLDescriptor
EKVirtualConferenceDescriptor
EKStructuredLocationSemanticIdentifierGenerator
EKAutocompleteSearchResult
EKChangeListener
EKSuggestedEventInfo
EKParticipantForSorting
EKReminderChange
EKShareeChange
EKRecents
EKDirectoryResource
EKAutocompletePendingSearch
EKAutocompletePendingSearchProtocol
EKAutocompleteSearch
EKObjectChangeOwnerIDHelper
EKPersistentAttachment
EKDiff
EKObjectSummaryHelpers
EKAvailabilitySpan
CalDateRangeProtocol
EKFrozenReminderStructuredLocation
EKAccountRefresher
EKCalendarItem
EKOccurrenceCacheLocationSearch
EKCompatibility
EKTimedEventStorePurger
EKDirectoryLocation
EKPersistentLocation
EKFrozenReminderObject
EKParticipantToContactMatcher
EKNotificationCollectionOptions
EKNullFetchRequestToken
EKEvent_Shared
EKJunkInvitationProtocol_Shared
EKInviteeAlternativeTimeSearcher
EKAdditions
EKInviteReplyNotification
EKAttachmentChange
EKParticipant
EKParticipantSemanticIdentifierGeneratorDelegate
EKIdentityProtocol
EKCalendarSharedCalendarNotification
EKAvailabilitySpanDate
EKAvailabilityCachedSpanRange
EKPersistentAttendee
EKCalendarSuggestionNotification
EKDirectoryPerson
EKAlarmSemanticIdentifierGenerator
EKCalendarNotification
EKDirectorySearchOperation
EKNotification
EKEventOccurrenceInfo
EKDirectorySearchQuery
EKCalendarEventInvitationNotification
EKCalendarEventInvitationNotificationAttendee
EKSerializableStructuredLocation
EKICSImporter
EKObjectChange
Reminders
EKBirthdayListener
CalContactsProviderDelegate
EKPersistentAlarm
EKOfficeHour
EKEphemeralCacheEventStoreProvider
EKEventStoreProvider
EKPersistentResourceChange
EKFrozenReminderRecurrenceRule
EKRecurrenceIdentifier
EKChangeSet
EKPersistentExceptionDate
EKNotificationCollection
EKCalendarInviteReplyNotification
EKEventFetchRequestToken
EKPredicateExpanding
EKDefaultPropertiesLoading
EKPredicateSearch
EKResourceChangeNotificationChange
EKReminder
EKRecurrenceChange
_EKNotificationMonitor
EKDirectoryRecord
EKDebugPreferences
EKSecureKeyedArchiverSerializer
EKSerializer
EventKit
EKPersistentOrganizer
EKOrganizerChange
EKPersistentInviteReplyNotification
EKTravelAdvisoryTimelinessAuthority
CalActivatable
EKExceptionDate
EKPersistentEvent
EKObjectChangeSummarizer
EKTravelEngineHypothesis
NSMutableCopying
NSSecureCoding
NSCoding
EKMutableTravelEngineHypothesis
EKEventActionChange
EKWeakReference
EKPersistentObject
EKParticipantChange
EKGroupExpansionOperation
EKSerializableRecurrenceRule
EKTravelEngineUtilities
EKSharedEventStoreProvider
EKPersistentEventAction
EKAvailabilityUtilities
EKSyncStatusUtils
EKResourceChangeNotification
EKEvent
EKJunkInvitationProtocol_Private
EKOrganizer
EKRequestAvailabilityOperation
EKDataProtectionObserver
EKAttendee
EKAlarmChange
EKChangeTrackingClientId
EKSerializableEvent
EKObjectValidationContext
EKPersistentSuggestedEventInfo
EKRecurrenceDayOfWeek
EKDirectoryGroup
EKDuetSignalEventSerializer
EKSpotlightSearch
UnitTest
EKCalendar
CGColorWrapper
EKCalendarShareeOrOwner
EKConference
EKAlarm
EKVirtualConference
EKVirtualConferenceRoomType
EKVirtualConferenceJoinMethod
EKSharee
EKSource
EKVirtualConferenceExtensionContext
EKCalendarResourceChangeNotification
EKPersistentParticipant
EKCalendarChange
EKPredictedLocationOfInterest
EKTravelLookupManager
EKStructuredLocation
EKObjectID
EKRecurrenceEnd
EKPersistentCalendarItem
EKRelation
EKSerializableObject
EKAttachment
EKEventStore
EKMapsUtilities
EKEventChange
EKParticipantSemanticIdentifierGenerator
EKCalendarVisibilityManager
EKSerializableAttachment
EKEventStoreWeakWrapper
EKDaemonConnectionDelegate
EKResourceChange
EKSourceChange
EKConferenceUtils
EKPersistentConference
EKInviteeAlternativeTime
EKContactChange
EKFrozenReminderAlarm
EKiMIPHandler
EKiMIPUpdate
EKiMIPInvitation
EKiMIPCancel
EKiMIPReply
EKFrozenReminderSource
EKReadWriteLock
EKCredentials
EKPersistentResourceChangeNotification
EKSuggestionNotificationChange
EKPersistentSource
EKConferenceDeserializationResult
ConferenceDatatypeConverter
EKConferencePersistence
EKSerializableAlarm
EKRecurrenceHelper
EKExceptionDateChange
EKConflictDetails
EKInviteReplyNotificationChange
EKAvailabilityCachedSpan
EKCalendarPreferences
EKNotificationPreferences
CalendarAdditions
EKInviteeTimeSpan
EKStructuredLocationPrediction
locations
setLocations:
groups
setGroups:
resources
setResources:
people
setPeople:
.cxx_destruct
_locations
_groups
_resources
_people
T@"NSSet",&,N,V_locations
T@"NSSet",&,N,V_groups
T@"NSSet",&,N,V_resources
T@"NSSet",&,N,V_people
arrayWithObjects:count:
initRecurrenceWithFrequency:interval:end:
init
setUUID:
setFrequency:
setInterval:
setFirstDayOfTheWeek:
raise:format:
setRecurrenceEnd:
setDaysOfTheWeek:
setDaysOfTheMonth:
setSetPositions:
setMonthsOfTheYear:
setDaysOfTheYear:
setWeeksOfTheYear:
initRecurrenceWithFrequency:interval:daysOfTheWeek:daysOfTheMonth:monthsOfTheYear:weeksOfTheYear:daysOfTheYear:setPositions:end:
singleChangedValueForKey:
setSingleChangedValue:forKey:
stringValueAsDateOnly:isFloating:
stringWithFormat:
isProgramSDKAtLeast:
copyWithZone:
frequency
interval
recurrenceEnd
specifier
setSpecifier:
firstDayOfTheWeekRaw
setFirstDayOfTheWeekRaw:
setDay:
setMonth:
setYear:
exceptionWithName:reason:userInfo:
integerValue
numberWithUnsignedInt:
currentHandler
handleFailureInMethod:object:file:lineNumber:description:
numberWithUnsignedInteger:
unsignedIntegerValue
endDate
count
initWithEndDate:
initWithOccurrenceCount:
cachedValueForKey:populateBlock:
isEqual:
copy
setCachedValue:forKey:
setEndDate:
setCount:
usesEndDate
occurrenceCount
intValue
_ekWeekdayFromCalDayOfWeek:
_calDayOfWeekFromEKWeekday:
initWithSpecifier:
_recurrenceHelper
daysOfTheWeek
_updateSpecifierIfNeeded
daysOfTheMonth
daysOfTheYear
weeksOfTheYear
monthsOfTheYear
setPositions
isDirty
reset
clearCachedValueForKey:
rollback
changeSet
changedKeys
countByEnumeratingWithState:objects:count:
isEqualToString:
compare:
cachedEndDate
currentCalendar
timeZone
setTimeZone:
eventStore
startDate
components:fromDate:
dueDate
numberWithInteger:
array
addObject:
valueForKey:
isEqualToArray:
setFormatterBehavior:
timeZoneWithName:
setDateFormat:
stringFromDate:
string
iCalendarValueFromRecurrenceType:
appendFormat:
iCalendarValueFromDate:isDateOnly:isFloating:
objectAtIndex:
iCalendarDescription
stringWithString:
humanReadableDescriptionWithStartDate:isConcise:
dayOfTheWeek
icsWeekDayFromDayOfTheWeek:
weekNumber
initWithWeekday:number:
daysTypeForDayArray:
humanReadableDescriptionWithStartDate:ofRecurrenceRuleICSString:isConcise:
mutableCopy
objectAtIndexedSubscript:
setObject:atIndexedSubscript:
_acceptableStartDateRangeWithCurrentStartDate:calendar:
containsDate:
newStartDateIsValid:currentStartDate:calendar:
distantPast
distantFuture
rangeWithStartDate:endDate:
rangeOfUnit:startDate:interval:forDate:
rangeWithStartDate:duration:
_acceptableStartDateRangeForDailyRecurrenceWithCurrentStartDate:
_acceptableStartDateRangeForWeeklyRecurrenceWithCurrentStartDate:calendar:
_acceptableStartDateRangeForMonthlyRecurrenceWithCurrentStartDate:calendar:
_acceptableStartDateRangeForYearlyRecurrenceWithCurrentStartDate:calendar:
firstDayOfTheWeek
calendarIdentifier
knownSingleValueKeysForComparison
frozenClass
knownIdentityKeysForComparison
recurrenceRuleWithType:interval:end:
iCalendarValueFromDayOfTheWeek:
UUID
description
dateComponents
dirtyStateMayAffectExceptionDates
mayOccurAfterDate:
pinToEndsOfMonthsWithCalendarItem:
isWeekdayRule
isWeekendRule
isAnyDayRule
isSimpleRule
humanReadableDescriptionWithStartDate:
hasDuplicateMonthsOfYear
newStartDateIsInvalid:currentStartDate:calendar:
isEqualToRecurrenceRule:
shouldPinMonthDays
_shouldPinMonthDays
_usesEndDate
TB,R,N,V_shouldPinMonthDays
T@"NSDateComponents",R,N
TB,R,V_usesEndDate
T@"NSString",R,N
T@"NSDate",R,N
TB,R,N
T@"EKRecurrenceEnd",C,N
Tq,R,N
T@"NSArray",R,N
initWithCDBSourceConstraintFlags:
allAllowSourceConstraints
maxAlarmsAllowed
setMaxAlarmsAllowed:
maxRecurrencesAllowed
setMaxRecurrencesAllowed:
supportsAlarmTriggerIntervals
setSupportsAlarmTriggerIntervals:
supportsAlarmTriggerDates
setSupportsAlarmTriggerDates:
supportsAlarmsTriggeringAfterStartDate
setSupportsAlarmsTriggeringAfterStartDate:
snoozeAlarmRequiresDetach
setSnoozeAlarmRequiresDetach:
organizerCanSeeAttendeeStatuses
setOrganizerCanSeeAttendeeStatuses:
inviteesCanSeeAttendeeStatuses
setInviteesCanSeeAttendeeStatuses:
statusesAreAccurate
setStatusesAreAccurate:
supportsIncomingInvitations
setSupportsIncomingInvitations:
supportsOutgoingInvitations
setSupportsOutgoingInvitations:
requiresOutgoingInvitationsInDefaultCalendar
setRequiresOutgoingInvitationsInDefaultCalendar:
supportsInvitationModifications
setSupportsInvitationModifications:
supportsEventForwarding
setSupportsEventForwarding:
supportsResponseComments
setSupportsResponseComments:
deliverySourceOrExternalIDRequiredForResponse
setDeliverySourceOrExternalIDRequiredForResponse:
proposedStatusRequiredForResponse
setProposedStatusRequiredForResponse:
declinedStatusChangeRequiresNoPendingStatus
setDeclinedStatusChangeRequiresNoPendingStatus:
eventDurationConstrainedToRecurrenceInterval
setEventDurationConstrainedToRecurrenceInterval:
alarmTriggerIntervalConstrainedToRecurrenceInterval
setAlarmTriggerIntervalConstrainedToRecurrenceInterval:
occurrencesMustOccurOnSeparateDays
setOccurrencesMustOccurOnSeparateDays:
futureStartDateLimitedToOccurrenceCacheBounds
setFutureStartDateLimitedToOccurrenceCacheBounds:
supportsRecurrencesOnDetachedEvents
setSupportsRecurrencesOnDetachedEvents:
recurrencesShouldPinToMonthDays
setRecurrencesShouldPinToMonthDays:
requiresAttendeeSearchInSingleAccount
setRequiresAttendeeSearchInSingleAccount:
mustAcknowledgeMasterEvent
setMustAcknowledgeMasterEvent:
canSetAvailability
setCanSetAvailability:
eventAvailabilityLimited
setEventAvailabilityLimited:
requiresMSFormattedUID
setRequiresMSFormattedUID:
shouldCancelDeletedEvents
setShouldCancelDeletedEvents:
shouldDeclineDeletedInvitations
setShouldDeclineDeletedInvitations:
supportsStructuredLocations
setSupportsStructuredLocations:
supportsReminderActions
setSupportsReminderActions:
supportsReminderLocations
setSupportsReminderLocations:
supportsAlarmProximity
setSupportsAlarmProximity:
allowsCalendarAddDeleteModify
setAllowsCalendarAddDeleteModify:
allowsTasks
setAllowsTasks:
allowsEvents
setAllowsEvents:
supportsURLField
setSupportsURLField:
supportsAllDayDueDates
setSupportsAllDayDueDates:
supportsSharedCalendars
setSupportsSharedCalendars:
isFacebook
setIsFacebook:
recurrenceSeriesMustIncludeMoreThanFirstOccurrence
setRecurrenceSeriesMustIncludeMoreThanFirstOccurrence:
supportsPrivateEvents
setSupportsPrivateEvents:
prohibitsPrivateEventsWithAttendees
setProhibitsPrivateEventsWithAttendees:
supportsAvailabilityRequests
setSupportsAvailabilityRequests:
supportsIgnoringEventsInAvailabilityRequests
setSupportsIgnoringEventsInAvailabilityRequests:
supportsLocationDirectorySearches
setSupportsLocationDirectorySearches:
requiresSamePrivacyLevelAcrossRecurrenceSeries
setRequiresSamePrivacyLevelAcrossRecurrenceSeries:
supportsInboxAvailability
setSupportsInboxAvailability:
prohibitsMultipleMonthsInYearlyRecurrence
setProhibitsMultipleMonthsInYearlyRecurrence:
prohibitsMultipleDaysInMonthlyRecurrence
setProhibitsMultipleDaysInMonthlyRecurrence:
prohibitsYearlyRecurrenceInterval
setProhibitsYearlyRecurrenceInterval:
requiresOccurrencesConformToRecurrenceRule
setRequiresOccurrencesConformToRecurrenceRule:
prohibitsDetachmentOnCommentChange
setProhibitsDetachmentOnCommentChange:
allowsProposeNewTime
setAllowsProposeNewTime:
prohibitsICSImport
setProhibitsICSImport:
supportsAutoGeocodingStructuredLocations
setSupportsAutoGeocodingStructuredLocations:
supportsJunkReporting
setSupportsJunkReporting:
supportsPhoneNumbers
setSupportsPhoneNumbers:
attendeesUseDeletedByOrganizerStatus
setAttendeesUseDeletedByOrganizerStatus:
prohibitsSlicingEventsWithAttendees
setProhibitsSlicingEventsWithAttendees:
supportsSubscribedCalendars
setSupportsSubscribedCalendars:
supportsManagedSubscribedCalendars
setSupportsManagedSubscribedCalendars:
supportsSubscriptionMirroring
setSupportsSubscriptionMirroring:
supportsParticipantRoles
setSupportsParticipantRoles:
supportsAttachments
setSupportsAttachments:
requiresOpeningAttachmentAsLink
setRequiresOpeningAttachmentAsLink:
shouldUseDeleteAndAddInsteadOfMoveBetweenCalendars
setShouldUseDeleteAndAddInsteadOfMoveBetweenCalendars:
supportsFloatingTimeZone
setSupportsFloatingTimeZone:
prohibitsUsingEventOrganizerEmailWhenComposingMail
setProhibitsUsingEventOrganizerEmailWhenComposingMail:
supportsDelegation
setSupportsDelegation:
supportsDelegateEnumeration
setSupportsDelegateEnumeration:
supportsInvitationModificationsWithoutNotification
setSupportsInvitationModificationsWithoutNotification:
supportsRecurrenceSplit
setSupportsRecurrenceSplit:
supportsPush
setSupportsPush:
_flags
Ti,N
TB,N
setWithObject:
relationWithEntityName:toMany:inversePropertyNames:ownsRelated:
initWithObjectsAndKeys:
displayName
setDisplayName:
address
setAddress:
externalID
setExternalID:
shareeStatusRaw
setShareeStatusRaw:
shareeAccessLevelRaw
setShareeAccessLevelRaw:
primitiveStringValueForKey:
primitiveSetStringValue:forKey:
primitiveIntValueForKey:
primitiveSetIntValue:forKey:
primitiveSetRelationValue:forKey:
primitiveRelationValueForKey:
firstName
lastName
defaultPropertiesToLoad
relations
meltedClass
entityType
setFirstName:
setLastName:
setOwner:
owner
source
isFacebookSource
URLWithString:
name
emailAddress
predicateForContactMatchingEKParticipantWithName:emailAddress:URL:predicateDescription:
contactPredicate
hasUnsavedChangeForKey:
forceChangeValue:forKey:
forceUpdateFrozenCalendar:
relationWithEntityName:toMany:inversePropertyNames:
primitiveDataValueForKey:
primitiveSetDataValue:forKey:
primitiveBoolValueForKey:
primitiveSetBoolValue:forKey:
flags
unlocalizedTitle
colorStringRaw
sharees
primitiveDateValueForKey:
primitiveSetDateValue:forKey:
propertyKeyForUniqueIdentifier
externalIDTag
setExternalIDTag:
externalModificationTag
setExternalModificationTag:
syncToken
setSyncToken:
externalRepresentation
setExternalRepresentation:
setUnlocalizedTitle:
isColorDisplayOnly
setColorDisplayOnly:
symbolicColorName
setSymbolicColorName:
setColorStringRaw:
displayOrder
setDisplayOrder:
setFlags:
sharingStatus
setSharingStatus:
sharedOwnerName
setSharedOwnerName:
sharedOwnerURLString
setSharedOwnerURLString:
sharingInvitationResponse
setSharingInvitationResponse:
publishURLString
setPublishURLString:
setIsPublished:
isPublished
setPublished:
notifications
setNotifications:
setSharees:
setSource:
invitationStatus
setInvitationStatus:
allowedEntities
setAllowedEntities:
selfIdentityDisplayName
setSelfIdentityDisplayName:
selfIdentityEmail
setSelfIdentityEmail:
selfIdentityPhoneNumber
setSelfIdentityPhoneNumber:
selfIdentityAddressString
setSelfIdentityAddressString:
selfIdentityFirstName
setSelfIdentityFirstName:
selfIdentityLastName
setSelfIdentityLastName:
ownerIdentityDisplayName
ownerIdentityId
setOwnerIdentityId:
setOwnerIdentityDisplayName:
ownerIdentityEmail
setOwnerIdentityEmail:
ownerIdentityPhoneNumber
setOwnerIdentityPhoneNumber:
ownerIdentityAddressString
setOwnerIdentityAddressString:
ownerIdentityFirstName
setOwnerIdentityFirstName:
ownerIdentityLastName
setOwnerIdentityLastName:
notes
setNotes:
pubcalAccountID
setPubcalAccountID:
subcalAccountID
setSubcalAccountID:
subcalURL
setSubcalURL:
pushKey
setPushKey:
digest
setDigest:
setAllAlarms:
allAlarms
refreshDate
setRefreshDate:
refreshInterval
setRefreshInterval:
subscriptionID
setSubscriptionID:
lastSyncStartDate
setLastSyncStartDate:
lastSyncEndDate
setLastSyncEndDate:
lastSyncError
setLastSyncError:
lastSyncErrorData
setLastSyncErrorData:
shared
bypassSplashScreen
lastConfirmedSplashScreenVersion
_currentSplashScreenVersion
setLastConfirmedSplashScreenVersion:
isTravelAdvisorySupported
isConservativeEntryEnabled
areVehicleTriggersEnabled
eventDetailsDayPreviewEnabled
calendarListViewCellsFeaturesExtraContent
calendarListViewCellsFeaturesAttendeeInformation
areQuickActionsSupported
areApplicationBadgesSupported
isSuggestionsEnabled
isContinuitySupported
areContextualRemindersSupported
mustDisplaySplashScreenToUser
userAcknowledgedSplashScreen
automaticGeocodingEnabled
eventsFoundInAppsEnabled
initWithSource:
constraints
sourceIdentifier
title
initWithFormat:
UTF8String
initWithSuperclassDescription:
setKey:withString:
setKey:withBoolean:
setKey:withDictionary:
build
_dictionaryForIgnoredEventID:
objectForKey:
gatherFreshlyCachedSpansBetweenStartDate:endDate:
setObject:forKey:
errorWithDomain:code:userInfo:
_isValidStartDate:endDate:
_validateRequestStartDate:endDate:addresses:error:
_cachedSpanResultsBetweenStartDate:endDate:ignoredEventID:addresses:
allKeys
objectForKeyedSubscript:
predicateWithBlock:
filteredArrayUsingPredicate:
start
elapsedTimeAsNumber:
_handleResults:resultsBlock:ignoredEventID:
dictionaryWithObjects:forKeys:count:
_logRequestElapsedTime:forNumberOfAddresses:
sharedConnection
requestCalendarAvailabilityWithAccountID:startDate:endDate:ignoredEventID:addresses:resultsBlock:completionBlock:
cancelCalendarAvailabilityRequestWithID:
_generateEventKitSpansFromPersistenceSpans:
enumerateKeysAndObjectsUsingBlock:
insertSpans:
CalIsAfterDate:
initWithCapacity:
type
_convertType:
initWithStartDate:endDate:type:
enumerateObjectsUsingBlock:
numberWithDouble:
requestAvailabilityBetweenStartDate:endDate:ignoredEventID:addresses:resultsBlock:completionBlock:
cachedAvailabilityInDateRange:ignoredEventID:addresses:
cancelAvailabilityRequestWithID:
_sourceIsInvalid
_accountID
_sourceSupportsAvailabilityRequests
_processingQueue
_callbackQueue
_addressesToCachedSpanRanges
_ignoredEventIDsToAddressBasedCaches
_nextRequestID
_cancelledID
ekPredicateEvaluateWithObject:
evaluatePredicate:withObject:
class
self
performSelector:
performSelector:withObject:
performSelector:withObject:withObject:
isProxy
isKindOfClass:
isMemberOfClass:
conformsToProtocol:
respondsToSelector:
retain
release
autorelease
retainCount
zone
hash
superclass
debugDescription
TQ,R
T#,R
T@"NSString",R,C
unarchiveDictionaryFromData:error:
archiveDictionary:error:
localStructuredData
structuredData
_structuredDataDictionaryFromData:
removeObjectForKey:
_dataFromStructuredDataDictionary:
setLocalStructuredData:
setStructuredData:
_customObjectForKey:local:
_setCustomObject:forKey:local:
customObjectForKey:
setCustomObject:forKey:
localCustomObjectForKey:
setLocalCustomObject:forKey:
willSave
T@"NSData",C,N
initWithCalendars:searchTerm:store:callback:
connection
CADOperationProxySync
CADOccurrenceCacheSearchWithTerm:inCalendars:responseToken:reply:
objectID
rowID
numberWithInt:
addCancellableRemoteOperation:
performSearchOperation:inCalendars:withEventStore:andSearchTerm:
errorWithCADResult:
removeCancellableRemoteOperation:
CADOperationProxy
unsignedIntValue
CADOccurrenceCacheCancelSearchWithReplyID:
cancel
numberWithBool:
searchWithCalendars:searchTerm:store:callback:
disconnect
receivedBatchResultsFromServer:finished:
searchTerm
_calendars
_searchTerm
_store
_callback
_replyID
_canceled
setName:
setEmailAddress:
phoneNumber
setPhoneNumber:
setUrl:
participantRole
setParticipantRole:
participantStatus
setParticipantStatus:
participantType
setParticipantType:
attendeeWithName:emailAddress:phoneNumber:url:
classesForKey
initWithParticipant:
createAttendee:
_name
_emailAddress
_phoneNumber
_url
_participantRole
_participantStatus
_participantType
T@"NSString",C,N,V_name
T@"NSString",C,N,V_emailAddress
T@"NSString",C,N,V_phoneNumber
T@"NSURL",&,N,V_url
Tq,N,V_participantRole
Tq,N,V_participantStatus
Tq,N,V_participantType
CADObjectID
cachedConstraintsForSourceWithCADObjectID:
T@"NSString",R,D,N
sourceType
Tq,D,N
T@"NSString",C,D,N
defaultAlarmOffset
T@"NSNumber",C,D,N
disabled
TB,D,N
onlyCreatorCanModify
preferredEventPrivateValue
Ti,D,N
strictestEventPrivateValue
hostURL
setHostURL:
calendar
initWithType:objectID:date:eventStore:
registerFetchedObjectWithID:
initWithPersistentObject:occurrenceDate:
initWithEvent:
initWithPersistentObject:
initWithType:
setTitle:
setHiddenFromNotificationCenter:
sharedOwnerEmail
sharedOwnerPhoneNumber
sharedOwnerURL
setURL:
setAlerted:
CGColor
setDotColor:
setObjectID:
externalURI
allowedEntityTypes
setAllowedEntityTypes:
couldBeJunk
setCouldBeJunk:
publicObjectWithPersistentObject:
shareeStatus
calendarName
shareeDisplayName
shareeEmailAddress
shareePhoneNumber
shareeURL
alerted
setStatus:
URIRepresentation
sourceForInviteReplyNotification:
inviteReplyCalendar
calendarItem
_notificationTypeForResourceChange:notificationType:
changeType
deletedTitle
setWithArray:
changedByDisplayName
setCalendarName:
eventIdentifier
setEventID:
containsObject:
setChangeType:
createCount
setCreateCount:
updateCount
setUpdateCount:
deleteCount
setDeleteCount:
dateChanged
setDateChanged:
timeChanged
setTimeChanged:
locationChanged
setLocationChanged:
titleChanged
setTitleChanged:
setStartDate:
_dateForNextOccurrence
setStartDateForNextOccurrence:
isAllDay
setAllDay:
locationWithoutPrediction
setLocation:
objectWithIDExists:
currentLocale
descriptionWithLocale:
initWithType:objectID:eventStore:
notification
_date
_eventStore
_notification
_type
_objectID
Ti,R,N,V_type
T@"EKCalendarNotification",R,N
T@"EKObjectID",R,N,V_objectID
_sharedInit
isNew
markAsNew
persistentObject
additionalFrozenProperties
backingObject
isPropertyUnavailable:
uniqueIdentifier
_isNew
_hasChanges
committedCopy
diffWithObject:
result
doesNotRecognizeSelector:
isEqual:comparingKeys:compareImmutableKeys:ignoringProperties:
_object:equalsObject:forKeys:compareImmutableKeys:ignoringProperties:
_objects:haveSameMeltedClass:frozenClass:
_compareKnownKeys:forObject:againstObject:compareImmutableKeys:propertiesToIgnore:
_compareKnownKeys:forObject:againstObject:compareIdentityKeys:compareImmutableKeys:propertiesToIgnore:
_compareIdentityKeysForObject:againstObject:propertiesToIgnore:
_compareNonIdentityKeys:forObject:againstObject:compareImmutableKeys:propertiesToIgnore:
knownRelationshipMultiValueKeys
knownRelationshipSingleValueKeys
knownImmutableKeys
intersectSet:
allObjects
_compareSingleValueRelationshipKeys:forObject:againstObject:propertiesToIgnore:
_compareMultiValueRelationshipKeys:forObject:againstObject:propertiesToIgnore:
_compareNonRelationshipKeys:forObject:againstObject:propertiesToIgnore:
_compareSingleValueRelationshipKey:forObject:againstObject:propertiesToIgnore:
_compareMutliValueRelationshipKey:forObject:againstObject:propertiesToIgnore:
dictionaryWithCapacity:
setObject:forKeyedSubscript:
_compareRelationshipObject1:againstRelationshipObject2:propertiesToIgnore:
isWeakRelationship
isEqual:ignoringProperties:
_isPropertyUnavailable:convertToFullObjectIfUnavailable:
rebaseToEventStore:
rebaseSkippingRelationProperties:toEventStore:
_initChangeSetIfNone
_setEventStore:
isMeltedAndNotWeakRelationshipObject:forKey:
frozenObject
addMultiChangedObjectValue:forKey:
setPersistentObject:
existsInStore
mutableCopyWithZone:
_copyWithoutChangesInZone:
hasUnsavedChanges
addChangesFromObject:copyingBackingObjects:
allocWithZone:
initWithObjectForCopy:
setAdditionalFrozenProperties:
duplicateToEventStore:
loadedPropertyForKey:
null
_recursiveSnapshotCopyWithPropertyAccessor:propertyKeysToCopy:recurseOnWeakRelations:
snapshotCopyWithPropertyKeysToCopy:
_previousValueForKey:
_arrayIntersectingArray:withSet:
isWeakRelationObject:forKey:
meltedObjectInStore:
setCachedMeltedObject:forSingleValueKey:
setWithSet:
setCachedMeltedObjects:forMultiValueKey:
dictionaryWithDictionary:
_rollbackCommon
_reset
_resetCommon
refreshAndNotify:
_refreshCommon
setWithCapacity:
_markAsNewCommon
_markAsNotNewCommon
_markAsDeletedCommon
rebase
_markAsUndeletedCommon
_markAsSavedCommon
_markAsCommittedCommon
markAsCommitted
_performBlockOnOwnedCachedRelatedObjects:
cachedMeltedObjectForSingleValueKey:
cachedMeltedObjectsForMultiValueKey:
_hasChangesForKey:
_updatePersistentValueForKey:
_propertyValueForKey:
setValue:forKey:
updatePersistentObject
meltedAndCachedSingleRelationObjectForKey:
meltedAndCachedMultiRelationObjectsForKey:
_isPendingInsert
_insertObject:
insertPersistentObjectIfNeeded
updatePersistentObjectSkippingProperties:
_deleteObject:
addCoCommitObject:
propertiesUnavailableForPartialObjects
initWithObject:
existingMeltedObject
isCompletelyEqual:
isFrozen
isPartialObject
semanticIdentifier
canBeConvertedToFullObject
preFrozenRelationshipObjects
T@"NSDictionary",R,N
setBackingObject:
hasChanges
isDifferentFromCommitted
rebaseSkippingRelationProperties:
setEventStore:
shallowCopyWithoutChanges
duplicate
snapshotCopy
previouslySavedCopy
refresh
committedValueForKey:
markAsNotNew
markAsDeleted
markAsUndeleted
markAsSaved
updatePersistentValueForKeyIfNeeded:
deletePersistentObject
setChangeSet:
_cachedMeltedObjects
set_cachedMeltedObjects:
_cachedValues
set_cachedValues:
_validationContext
set_validationContext:
_persistentObject
_changeSet
__cachedMeltedObjects
_additionalFrozenProperties
__cachedValues
__validationContext
T@"EKPersistentObject",&,N,V_persistentObject
T@"CADGenerationStampedObjectID",R,N
T@"EKEventStore",&,N
T@"EKChangeSet",&,N,V_changeSet
T@"NSMutableDictionary",&,N,V__cachedMeltedObjects
T@"NSDictionary",&,N,V_additionalFrozenProperties
T@"NSMutableDictionary",&,N,V__cachedValues
T@"EKObjectValidationContext",&,N,V__validationContext
T@"EKPersistentObject",&,N
TB,R,N,GisNew
initialStartDate
setEventStartDate:
initialEndDate
setEventEndDate:
setEventTimeZone:
allDay
eventStartDate
dateInTimeZone:fromTimeZone:
eventEndDate
_setupForEKEvent:adjustDatesForAllDayEvents:
recurrenceRules
_prepareForEKRecurrence:forCalendarItem:
copyOccurrenceDatesBetweenStartDate:endDate:timeZone:limit:
addObjectsFromArray:
_copyOccurrenceDatesWithEKEvent:recurrenceRule:startDate:endDate:timeZone:exceptionDates:limit:adjustDatesForAllDayEvents:
removeObject:
occurrenceDate:matchesRecurrenceRule:forEvent:includeDetachedEventsInSeries:
date
dateByAddingTimeInterval:
exceptionDates
detachedItems
nextOccurrenceDateWithEKRecurrences:forCalendarItem:exceptionDates:initialDate:afterDate:
dateWithTimeIntervalSinceReferenceDate:
calendarDateWithDate:timeZone:
calendarDateByAddingSeconds:
_convertEKRecurrenceFrequencyToCalRecurrenceFrequency:
setWeekStart:
weekStart
setShouldPinMonthDays:
computeRecurrenceEndDate:
copyOccurrenceDatesWithEKEvent:startDate:endDate:timeZone:limit:
copyOccurrenceDatesWithEKEvent:recurrenceRule:startDate:endDate:timeZone:limit:
copyOccurrenceDatesWithEKEvent:recurrenceRule:startDate:endDate:timeZone:limit:adjustDatesForAllDayEvents:
copyOccurrenceDatesWithEKEvent:recurrenceRule:startDate:endDate:timeZone:exceptionDates:limit:
isOccurrenceDate:validForEvent:
nextOccurrenceDateWithEKRecurrences:forCalendarItem:initialDate:afterDate:
hasRecurrenceRules
timeIntervalSinceDate:
second
setSecond:
CalGregorianCalendarForTimeZone:
CalDateByComponentwiseAddingComponents:inCalendar:
timeIntervalSinceReferenceDate
duration
CalIsBeforeOrSameAsDate:
CalIsAfterOrSameAsDate:
isFloating
defaultTimeZone
externalFolderID
setExternalFolderID:
externalScheduleID
setExternalScheduleID:
T@"NSString",C,N
objectType
fetchChangesToObjectsOfTypes:inStore:resultHandler:
fetchChangesToObjectsOfTypes:inSource:resultHandler:
fetchChangesToObjectsOfTypes:inCalendar:resultHandler:
initWithChangeProperties:
createOwnerIDWithRowID:objectType:
boolValue
fetchAttendeeChangesInStore:resultHandler:
fetchAttendeeChangesInSource:resultHandler:
fetchAttendeeChangesInCalendar:resultHandler:
ownerID
T@"EKObjectID",R,N
attendeeRole
attendeeStatus
attendeeEmailAddress
_attendeeRole
_attendeeStatus
_ownerID
_attendeeEmailAddress
T@"EKObjectID",R,N,V_ownerID
TB,R,N,V_attendeeRole
TB,R,N,V_attendeeStatus
T@"NSString",R,N,V_attendeeEmailAddress
alternateUniverseClass
dealloc
_connectToServer
initializationOptions
_tryRegisterNewConnection
initWithMachServiceName:options:
setRemoteObjectInterface:
setExportedInterface:
setExportedObject:
setInterruptionHandler:
unitTesting
CADDatabaseSetInitializationOptions:reply:
CADDatabaseGetAccess:
CADDatabaseResetWithReply:
CADDatabaseGetUUID:
CADDatabaseRegisterForDetailedChangeTrackingInSource:reply:
CADDatabaseUnregisterForDetailedChangeTracking:
CADDatabaseFetchChangedObjectIDsSinceSequenceNumber:reply:
CADDatabaseFetchObjectChangesForEntityTypes:insideObject:reply:
CADDatabaseMarkChangedObjectIDsConsumedUpToSequenceNumber:reply:
CADDatabaseMarkIndividualChangesConsumed:reply:
CADDatabaseGetSequenceNumber:
CADDatabaseGetChangesSinceSequenceNumber:reply:
CADDatabaseGetChangedEntityIDsSinceTimestamp:reply:
CADDatabaseGetNextAssignableColorWithReply:
CADDatabaseImportEvents:fromICSData:intoCalendarsWithIDs:optionsMask:batchSize:reply:
CADDatabaseExportICSDataForCalendarItems:options:reply:
CADDatabaseExportICSDataForCalendar:options:reply:
CADDatabaseSetShowsDeclinedEvents:reply:
CADDatabaseRebuildOccurrenceCacheWithReply:
CADDatabaseInsert:delete:update:andCommit:
CADDatabaseRollbackWithReply:
CADDatabaseCanModifyCalendarDatabase:
CADDatabaseLastConfirmedSplashScreenVersion:
CADDatabaseMigrateSubscribedCalendar:toSource:reply:
CADObjectExists:reply:
CADObjectsExist:reply:
CADObject:getPropertiesWithNames:reply:
CADObject:getPropertyWithName:reply:
CADObject:getStringPropertyWithName:reply:
CADObject:getNumberPropertyWithName:reply:
CADObject:getDatePropertyWithName:reply:
CADObject:getDataPropertyWithName:reply:
CADObject:getSecurityScopedURLWrapperPropertyWithName:reply:
CADObject:getRelatedObjectWithRelationName:reply:
CADObject:getRelatedObjectsWithRelationName:reply:
CADObjectIsManaged:reply:
CADDatabaseGetSourcesWithFaultedProperties:reply:
CADDatabaseGetLocalSourceWithEnableIfNeeded:reply:
CADDatabaseGetLocalBirthdaySource:
CADSourceGetConstraints:reply:
CADSourceGetNotificationCollection:reply:
CADSourceRefresh:isUserRequested:reply:
CADCountCalendarItemsOfType:inSource:reply:
CADRemoveCalendarItemsOlderThanDate:ofType:inSource:reply:
CADSourceGetGrantedDelegatesList:reply:
CADSourceUpdateGrantedDelegate:action:sourceID:reply:
CADSourceGetManagedConfigurationAccountAccess:reply:
CADDatabaseGetCalendarsWithFaultedProperties:reply:
CADCalendar:hasEvents:
CADCalendar:hasReminders:
CADDatabaseGetCalendarItemWithUUID:reply:
CADDatabaseGetCalendarItemsWithUniqueIdentifier:inCalendar:reply:
CADDatabaseGetAlarmWithExternalID:reply:
CADDatabaseFetchCalendarItemsWithPredicate:entityType:fetchIdentifier:reply:
CADDatabaseCancelFetchRequestWithIdentifier:
CADDatabaseiTIPImport:intoCalendarID:reply:
CADDatabaseExportCalendarItemAsICS:withOptions:reply:
CADDatabaseGetContactIdentifierForCalendarItem:reply:
CADDatabaseAddContactWithIdentifier:forCalendarItem:withReply:
CADDatabaseRemoveContactIdentifier:forCalendarItem:withReply:
CADDatabaseCountEntitiesOfType:withContactIdentifier:withReply:
CADDatabaseFetchEntitiesOfType:withContactIdentifier:withReply:
CADDatabaseGetDefaultLocalCalendarWithReply:
CADDatabaseGetOrCreateSubscribedCalendarsSource:
CADDatabaseGetOrCreateBirthdayCalendar:
CADDatabaseGetDefaultCalendarForNewEventsInDelegateSource:withReply:
CADDatabaseSetDefaultCalendarForNewEvents:delegateSource:
CADDatabaseGetEventWithEventIdentifier:reply:
CADDatabaseGetEventWithUniqueID:reply:
CADDatabaseGetAllEventsWithUniqueID:reply:
CADDatabaseGetCountOfUnacknowledgedEvents:
CADDatabaseGetCountOfNotifiableEvents:
CADDatabaseSetShowsDeclinedEvents:
CADDatabaseGetBirthdayCalendarEnabledWithReply:
CADDatabaseSetBirthdayCalendarEnabled:withReply:
CADDatabaseGetSuggestedEventCalendarWithReply:
CADDatabaseGetNaturalLanguageSuggestedEventCalendarWithReply:
CADDatabaseCanModifySuggestedEventCalendar:
CADDatabaseInsertSuggestedEventCalendarWithReply:
CADDatabaseRemoveSuggestedEventCalendarWithReply:
CADDatabaseActOnSuggestedEvent:action:reply:
CADOccurrenceCacheAreOccurrencesBeingGenerated:
CADOccurrenceCacheGetOccurrenceCountsForCalendars:reply:
CADOccurrenceCacheGetOccurrenceForCalendars:onDay:reply:
CADOccurrenceCacheGetOccurrenceDateOfEventWithRowID:nearestDate:prefersForwardSearch:reply:
CADOccurrenceCacheDoEvents:haveOccurrencesAfterDate:reply:
CADOccurrenceCacheSearchLocationsWithTerm:inCalendars:responseToken:reply:
CADOccurrencesExistInRangeForEvent:startDate:endDate:mustStartInInterval:timezone:reply:
CADDatabaseShouldPermitOrganizerEmailFromJunkChecks:reply:
CADDatabaseShouldPermitOrganizerPhoneNumberFromJunkChecks:reply:
CADDatabaseGetAttachmentWithUUID:reply:
CADDatabaseGetSecurityScopedLocalURLWrapperForAttachment:reply:
CADDatabaseGetTTLLocationAuthorizationStatus:
CADDatabaseGetDefaultCalendarForNewRemindersWithReply:
CADDatabaseSetDefaultCalendarForNewReminders:
CADDatabaseGetCountOfRemindersWithPredicate:reply:
CADDatabaseGetProperties:forReminders:reply:
CADScheduledTaskCacheGetDaysAndTaskCounts:
CADDatabaseGetAlarmWithUUID:reply:
CADDatabaseGetAlarmOccurrencesInRangeFromStart:toEnd:inCalendars:reply:
CADDatabaseGetLocationBasedAlarmsWithReply:
CADDatabaseGetVehicleTriggerAlarmsWithReply:
CADDatabaseGetSharedCalendarInvitationsWithReply:
CADCalendarSetClearedFromNotificationCenter:error:
CADDatabaseGetResourceChanges:
CADDatabaseGetInviteReplyNotifications:
CADDatabaseGetEventNotificationItemsAfterDate:filteredByShowsNotificationsFlag:calculateEarliestExpirationDate:reply:
CADDatabaseGetNotificationCountForSourceWithExternalIdentifier:excludingDelegateSources:filteredByShowsNotificationsFlag:reply:
CADDatabaseGetInboxRepliedSectionItems:
CADEvent:setAlertedWithError:
CADCalendar:setAlertedWithError:
CADResourceChange:setAlertedWithError:
CADInviteReplyNotification:setAlertedWithError:
CADEventSetInvitationStatus:forEvents:error:
CADPushItemsToSpotlight:reply:
CADWaitForSpotlightUpdatesWithReply:
CADInternalForceStatCollection:
CADTestingSimulateDaemonCrash
CADTestingCloseDatabase:
CADMigrateDatabaseIfNeeded:
CADDatabaseGetDeletableCalendars:
CADDatabaseGetDeletableSources:
CADPurgeChangeTrackingReply:
CADPostSyntheticRouteHypothesis:forEventWithExternalURL:reply:
CADDatabaseGetNotificationCount:
CADDatabaseGetStorageUsage:
CADBackupDatabaseToFileNamed:inDirectory:includeAttachments:reply:
CADBackupToICBU:reply:
CADRestoreFromDatabaseBackupFileNamed:inDirectory:includeAttachments:reply:
CADRestoreFromICBU:reply:
initWithXPCConnection:protocol:synchronous:
setDelegate:
setInitializationOptions:
resume
setHasEverConnected:
_unregisterConnection
invalidate
_createConnectionAndOperationProxyIfNeeded
_finishAllRepliesOnServerDeath
daemonRestarted
setDatabaseRestoreGeneration:
delegate
databaseRestoreGenerationChangedExternally:
removeAllObjects
CADClientReceiveOccurrenceCacheSearchResults:forSearchToken:finished:
databaseRestoreGeneration
shouldValidateObjectIDs
xpcConnection
_daemonRestarted
databaseRestoreGenerationChangedByThisClient:
cancelRemoteOperation:
hasEverConnected
_connectionLock
_remoteOperationProxy
_syncRemoteOperationProxy
_replyHandlerLock
_cancellableOperations
_nextCancellationToken
_registeredForStartNote
_wasAbortedDueToExcessiveConnctions
_databaseRestoreGenerationLock
_databaseRestoreGeneration
_databaseRestoreGenerationHasEverChangedSignificantly
_hasEverConnected
_xpcConnection
_delegate
_initializationOptions
TB,N,V_hasEverConnected
T@"NSXPCConnection",R,&,N,V_xpcConnection
T@"<CADInterface>",R,&,N
T@"<EKDaemonConnectionDelegate>",W,V_delegate
T@"CADDatabaseInitializationOptions",&,N,V_initializationOptions
Ti,R,N
maxNumberOfOpenConnections
TQ,R,N
beginRequestWithExtensionContext:
requestType
completeRequestWithAvailableRoomTypes:completionHandler:
fetchAvailableRoomTypesWithCompletionHandler:
roomTypeIdentifier
completeRequestWithVirtualConference:completionHandler:
fetchVirtualConferenceForIdentifier:completionHandler:
URLForInvalidation
completeRequestWithInvalidationSuccess:error:completionHandler:
invalidateURL:withCompletionHandler:
completeRequestReturningItems:completionHandler:
isURLValid:withCompletion:
extendExpirationOfURL:toRequestedDate:withCompletion:
_filterObjectChangesNotConformingToOwnerIDProvidingProtocol:
arrayWithCapacity:
fetchChangesToOwnerIDProvidingObjectsOfTypes:inStore:resultHandler:
fetchChangesToOwnerIDProvidingObjectsOfTypes:inSource:resultHandler:
fetchChangesToOwnerIDProvidingObjectsOfTypes:inCalendar:resultHandler:
initWithDomain:
registerReflectionForPreferenceWithNotificationName:
getValueForPreference:expectedClass:
doubleValue
setValueForPreference:value:notificationName:
getBooleanPreference:defaultValue:
setBooleanPreference:value:notificationName:
getIntegerPreference:defaultValue:
setIntegerPreference:value:notificationName:
_setDeselectedCalendarIdentifiers:
_array:hasSameElementAsArray:
travelEngineThrottlePeriod
setTravelEngineThrottlePeriod:
refiringReminderAlarmsEnabled
setRefiringReminderAlarmsEnabled:
useShortReminderSnoozeInterval
setUseShortReminderSnoozeInterval:
useShortReminderRefireInterval
setUseShortReminderRefireInterval:
alwaysSetArrivedAndSettledForReminders
setAlwaysSetArrivedAndSettledForReminders:
setDeselectedCalendars:
deselectedCalendarIdentifiers
deselectedCalendarSyncHashes
_setDeselectedCalendarSyncHashes:
deselectedCalendarSyncIdentifiers
_setDeselectedCalendarSyncIdentifiers:
selectedCalendarIdentifiers
setSelectedCalendarIdentifiers:
showDeclinedEvents
setShowDeclinedEvents:
alertInviteeDeclines
setAlertInviteeDeclines:
conferenceRoomTypeIdentifiersByMRU
setConferenceRoomTypeIdentifiersByMRU:
_preferences
Td,N
TQ,N
TB,R
T@"NSArray",&,N
T@"NSDictionary",&,N
objectIDWithEntityType:rowID:
fetchCalendarItemChangesInStore:resultHandler:
fetchCalendarItemChangesInSource:resultHandler:
fetchCalendarItemChangesInCalendar:resultHandler:
calendarID
oldCalendarID
oldExternalID
startDateChanged
startTimezoneChanged
endDateChanged
endTimezoneChanged
notesChanged
allDayChanged
_titleChanged
_locationChanged
_startDateChanged
_startTimezoneChanged
_endDateChanged
_endTimezoneChanged
_notesChanged
_allDayChanged
_calendarID
_oldCalendarID
_externalID
_oldExternalID
T@"EKObjectID",R,N,V_calendarID
T@"EKObjectID",R,N,V_oldCalendarID
T@"NSString",R,N,V_externalID
T@"NSString",R,N,V_oldExternalID
TB,R,N,V_titleChanged
TB,R,N,V_locationChanged
TB,R,N,V_startDateChanged
TB,R,N,V_startTimezoneChanged
TB,R,N,V_endDateChanged
TB,R,N,V_endTimezoneChanged
TB,R,N,V_notesChanged
TB,R,N,V_allDayChanged
fetchNotificationChangesInStore:resultHandler:
fetchNotificationChangesInSource:resultHandler:
fetchNotificationChangesInCalendar:resultHandler:
reminderStore
completionBlockForFetchRequestToken:remove:
initWithReminderStore:
_reminderStore
T@"EKReminderStore",R,W,N,V_reminderStore
existingUpdatedObject:
T@"NSObject<OS_os_log>",R
initWithEventStore:token:
remStore
sources
calendars
_remStore
_sources
T@"REMStore",R,N,V_remStore
T@"EKEventStore",R,W,V_eventStore
T@"NSArray",R,V_sources
T@"NSArray",R,V_calendars
length
initWithTitle:identifier:
identifier
_title
_identifier
T@"NSString",R,C,N,V_title
T@"NSString",R,C,N,V_identifier
absoluteString
initWithTitle:URL:
_URL
T@"NSURL",R,C,N,V_URL
initWithTitle:URLDescriptors:conferenceDetails:
URLDescriptors
conferenceDetails
_URLDescriptors
_conferenceDetails
T@"NSArray",R,C,N,V_URLDescriptors
T@"NSString",R,C,N,V_conferenceDetails
base64EncodedStringWithOptions:
floatValue
semanticIdentifierForLocationWithTitle:address:mapKitHandle:contactLabel:latitude:longitude:radius:
setUniqueID:
uniqueID
isCurrentUser
isLocationRoom
_participantShouldBeUsedForAutocomplete:
initWithUniqueID:
setCalendarColor:
setAttendees:
location
setLocationWithoutPrediction:
preferredLocation
setPreferredLocation:
alarms
setAlarms:
attendees
setCalendar:
calendarColor
isSuggested
setSuggested:
suggestionInfo
setSuggestionInfo:
foundInBundleID
setFoundInBundleID:
structuredLocation
setStructuredLocation:
privacyLevel
setPrivacyLevel:
availability
setAvailability:
attachments
setAttachments:
isNaturalLanguageSuggested
setIsNaturalLanguageSuggested:
_calendarColor
_allDay
_suggested
_isNaturalLanguageSuggested
_startDate
_endDate
_timeZone
_location
_locationWithoutPrediction
_preferredLocation
_alarms
_attendees
_notes
_calendar
_suggestionInfo
_foundInBundleID
_structuredLocation
_privacyLevel
_availability
_attachments
_localStructuredData
_uniqueID
T@"NSString",&,N,V_uniqueID
T@"NSString",&,N,V_title
T@"NSDate",&,N,V_startDate
T@"NSDate",&,N,V_endDate
T@"NSTimeZone",&,N,V_timeZone
TB,N,GisAllDay,V_allDay
T@"NSString",&,N,V_location
T@"NSString",&,N,V_locationWithoutPrediction
T@"EKStructuredLocation",&,N,V_preferredLocation
T@"NSArray",&,N,V_alarms
T@"NSArray",&,N,V_attendees
T@"NSURL",&,N,V_URL
T@"NSString",&,N,V_notes
T@"EKCalendar",&,N,V_calendar
T^{CGColor=},N,V_calendarColor
suggested
TB,N,GisSuggested,V_suggested
T@"EKSuggestedEventInfo",&,N,V_suggestionInfo
T@"NSString",&,N,V_foundInBundleID
T@"EKStructuredLocation",&,N,V_structuredLocation
Tq,N,V_privacyLevel
Tq,N,V_availability
T@"NSArray",&,N,V_attachments
TB,N,V_isNaturalLanguageSuggested
T@"NSData",&,N,V_localStructuredData
weakObjectsPointerArray
setDelegates:
defaultCenter
objectsChangedNotification:
addObserver:selector:name:object:
delegates
addPointer:
hasUpdatePriority
sortedArrayUsingComparator:
isSyncStatusChangeNotification:
compact
userInfo
changedIdentifiersForNotification:
_orderedDelegates
dictionary
updatedObjectFor:changeNotification:
specificIdentifier
trackedObjectMap
trackedObjects
trackedObjectsDidRevert:
trackedObjectsDidUpdate:
relatedObjectsDidUpdate:
notifyObservers
_refreshable
registerDelegate:
_delegates
T@"NSPointerArray",&,V_delegates
initWithEventStore:opaqueKey:uniqueKey:
initWithEventStore:opaqueKey:uniqueKey:extractionGroupIdentifier:
setOpaqueKey:
setUniqueKey:
setChangedFields:
setChangesAcknowledged:
setExtractionGroupIdentifier:
opaqueKey
uniqueKey
extractionGroupIdentifier
changedFields
changesAcknowledged
timestamp
setTimestamp:
setTimestampAsDate:
timestampAsDate
initWithOpaqueKey:uniqueKey:
initWithOpaqueKey:uniqueKey:extractionGroupIdentifier:
relatedEvent
_sharedParticipantForSortingWithIdentity:participant:contactPredicate:
phoneNumberWithStringValue:
predicateForContactsMatchingPhoneNumber:
setCountLimit:
addObserverForName:object:queue:usingBlock:
archivedDataWithRootObject:requiringSecureCoding:error:
descriptorForRequiredKeysForStyle:
defaultProvider
unifiedContactsMatchingPredicate:keysToFetch:
isPhoneNumber
componentsFromString:
nickname
setNickname:
familyName
setFamilyName:
givenName
setGivenName:
namePrefix
setNamePrefix:
nameSuffix
setNameSuffix:
middleName
setMiddleName:
stringFromContact:style:
setCachedDisplayName:
setIsEmail:
setIsPhone:
setParticipant:
setIdentity:
participantIsOptional:
participant
compareByEmailThenByContactName:
isEmail
compare:options:
compareByContactNames:
sharedDefaults
sortOrder
participantForSortingWithEKParticipant:
participantForSortingWithIdentity:
identity
cachedDisplayName
isPhone
_isEmail
_isPhone
_participant
_identity
_firstName
_lastName
_cachedDisplayName
T@"EKParticipant",W,N,V_participant
T@"<EKIdentityProtocol>",W,N,V_identity
T@"NSString",C,N,V_firstName
T@"NSString",C,N,V_lastName
T@"NSString",C,N,V_cachedDisplayName
TB,N,V_isEmail
TB,N,V_isPhone
fetchReminderChangesInStore:resultHandler:
fetchReminderChangesInSource:resultHandler:
fetchReminderChangesInCalendar:resultHandler:
fetchShareeChangesInStore:resultHandler:
fetchShareeChangesInSource:resultHandler:
fetchShareeChangesInCalendar:resultHandler:
crRecentContactsLibraryClass
recentEventForAddress:displayName:kind:date:weight:metadata:options:
recentForContactWithAddress:name:kind:
defaultInstance
crRecentsDomainCalendarString
recordContactEvents:recentsDomain:sendingAddress:completion:
crAddressKindEmailString
recordRecentWithAddress:name:kind:
crAddressKindPhoneNumberString
recordRecentForContactWithName:emailAddress:phoneNumber:
searchWithString:completionHandler:
predicateForNaturalLanguageSuggestedEventsWithSearchString:
eventsMatchingPredicate:
firstObject
setIdentifier:
setNaturalLanguageSuggestedEvent:
allowsContentModifications
isNaturalLanguageSuggestedEventCalendar
hasAttendees
_eventKitQueue
firstNaturalLanguageResultWithSearchString:
_queue
insertObject:atIndex:
whitespaceCharacterSet
stringByTrimmingCharactersInSet:
lowercaseString
eventWithUniqueId:
_shouldReturnResultForEvent:
_updateResult:withEvent:
searchWithString:clientBundleID:completionHandler:
initWithEventStore:searchString:maximumResultCount:ignoreScheduledEvents:initialEvent:completionHandler:
_maximumResultCount
_ignoreScheduledEvents
_initialEvent
_pendingSearch
searchWithEventStore:searchString:maximumResultCount:ignoreScheduledEvents:initialEvent:completionHandler:
maximumResultCount
setMaximumResultCount:
TQ,V_maximumResultCount
URLString
setURLString:
fileNameRaw
setFileNameRaw:
fileFormat
setFileFormat:
isBinary
setIsBinary:
localRelativePath
setLocalRelativePath:
fileSize
setFileSize:
XPropertiesData
setXPropertiesData:
primitiveNumberValueForKey:
primitiveSetNumberValue:forKey:
unsignedLongValue
primitiveSecurityScopedURLWrapperValueForKey:
primitiveSetSecurityScopedURLWrapperValue:forKey:
securityScopedURLWrapperForPendingFileCopy
setSecurityScopedURLWrapperForPendingFileCopy:
setFirstObject:
setSecondObject:
secondObject
initWithFirstObject:secondObject:
setResult:
_populateSingleValueKeysForDiff:
_populateImmutableKeysForDiff:
_populateSingleValueRelationshipKeysForDiff:
_populateMultiValueRelationshipKeysForDiff:
differentSingleValueKeys
differentRelationshipSingleValueKeys
differentRelationshipMultiValueKeys
differentImmutableKeys
_populateIdentityKeysForDiff:
differentIdentityKeys
_nonNilObject
_keysToIgnoreForComputingDiff
indexesOfObjectsPassingTest:
objectsAtIndexes:
setDifferentSingleValueKeys:
knownDerivedAndSingleValueRelationshipKeys
setDifferentRelationshipSingleValueKeys:
setRelationshipSingleValueModifies:
_compareMultiValueRelationshipKey:forObject:againstObject:propertiesToIgnore:
setDifferentRelationshipMultiValueKeys:
setByAddingObjectsFromArray:
diffBetweenObject:andObject:
setRelationshipMultiValueAdds:
setRelationshipMultiValueRemoves:
setRelationshipMultiValueModifies:
setDifferentIdentityKeys:
setDifferentImmutableKeys:
relationshipMultiValueModifies
allValues
unionSet:
arrayWithArray:
summaryKeyForChangedProperty:subProperty:
relationshipMultiValueAdds
summaryKeyForMultiValueAddOfPropertyKey:
_addObject:forKey:toDiff:
relationshipMultiValueRemoves
summaryKeyForMultiValueRemoveOfPropertyKey:
_multiValueModifiedObjectsForKey:
summaryKeyForMultiValueModifyOfPropertyKey:
_summaryKeyForMultiValueChange:ofPropertyKey:
_summarizeDiffsBetweenFirstObject:secondObject:mutableString:depth:
appendString:
_basicSummaryWithDepth:
_addSummaryWithDepth:toMutableString:forSingleValueKeys:firstObject:secondObject:
_addSummaryWithDepth:toMutableString:forRelationshipSingleValueKeys:firstObject:secondObject:
_addSummaryWithDepth:toMutableString:forRelationshipMultiValueKeys:firstObject:secondObject:
_addChangeStarIfChangedKey:onObject:
_addPaddedHeaderToMutableString:forKey:withDepth:
_addSummaryWithDepth:toMutableString:indentFirstLine:
_indentStringAtDepth:
stringByPaddingToLength:withString:startingAtIndex:
relationshipSingleValueModifies
changeSetForDiff
addChanges:
initWithSingleValueChanges:multiValueAdditions:multiValueRemovals:
differentKeys
summaryDictionary
summaryString
_result
_firstObject
_secondObject
_differentIdentityKeys
_differentImmutableKeys
_differentSingleValueKeys
_differentRelationshipSingleValueKeys
_differentRelationshipMultiValueKeys
_relationshipMultiValueAdds
_relationshipMultiValueRemoves
_relationshipMultiValueModifies
_relationshipSingleValueModifies
T@"EKObject",&,N,V_firstObject
T@"EKObject",&,N,V_secondObject
Ti,N,V_result
T@"NSSet",&,N,V_differentIdentityKeys
T@"NSSet",&,N,V_differentImmutableKeys
T@"NSSet",&,N,V_differentSingleValueKeys
T@"NSSet",&,N,V_differentRelationshipSingleValueKeys
T@"NSSet",&,N,V_differentRelationshipMultiValueKeys
T@"NSDictionary",&,N,V_relationshipMultiValueAdds
T@"NSDictionary",&,N,V_relationshipMultiValueRemoves
T@"NSDictionary",&,N,V_relationshipMultiValueModifies
T@"NSDictionary",&,N,V_relationshipSingleValueModifies
knownSummaryKeys
arrayByAddingObjectsFromArray:
_summaryWithDepth:
Tq,R,N,V_type
_eventStoreChanged:
_areAnySourcesCurrentlySyncing
_areAnyCalendarsCurrentlySyncing
_syncDidStart
_syncDidEnd
_cancelSyncStartTimeout
_allSourcesRefreshed
_allCalendarsRefreshed
_syncCompleted
_beginSyncStartTimeout
sourceFinishedRefreshing:
isSyncing
calendarFinishedRefreshing:
_beginMaximumTimeElapsedTimeout
resetTimersAndWarnings
refreshEverythingIfNecessary:
calendarsForEntityType:
isSubscribed
isSubscribedHolidayCalendar
filterUsingPredicate:
_cancelMaximumTimeElapsedTimeout
_syncStartTimeoutExpired
performSelector:withObject:afterDelay:
cancelPreviousPerformRequestsWithTarget:selector:object:
_refreshControlMaximumVisibleTimeElapsed
timeIntervalSinceNow
accountRefreshFinished:
laterDate:
initWithEventStore:
allAccountsOffline
refreshing
_currentlySyncing
_refreshStartDate
_refreshingSources
_refreshingCalendars
_refreshing
T@"<EKAccountRefresherDelegate>",W,N,V_delegate
TB,R,N,V_refreshing
lastModifiedDate
startTimeZone
endTimeZone
calendarItemIdentifier
originalItem
fullDisplayStringWithTitle:address:
locationWithTitle:
updateMeltedAndCachedSingleRelationObject:forKey:frozenClass:
setStructuredLocationWithoutPrediction:
structuredLocationWithoutPrediction
clientLocation
actionString
setActionString:
appLinkData
_initWithUserActivityData:
_createUserActivityDataWithOptions:completionHandler:
setAppLinkData:
setStartTimeZone:
setEndTimeZone:
startTimeZoneName
timeZoneFromTimeZoneName:withFloatingTimeZone:
timeZoneNameFromTimeZone:
setStartTimeZoneName:
endTimeZoneName
setEndTimeZoneName:
exportToICSWithOptions:
isMutableSuggestionsCalendar
isMutableNaturalLanguageSuggestionsCalendar
isSelfOrganized
isOrganizedBySharedCalendarOwner
_validateDeletable:
_validateAccessConsent:
_validateDeletableInCalendarWithError:
_validateDeletableBySharedCalendarShareeWithError:
accessGrantedForEntityType:
errorWithEKErrorCode:
isSuggestedEventCalendar
allowsScheduling
_isInSharedToMeCalendarWithNoSharingScheduling
organizer
isExternallyOrganizedInvitation
selfParticipantStatus
needsResponseForParticipantStatus:
isEditable
externalData
metadataWithData:
x_props
isSubclassOfClass:
value
adjustDateFromUTC:allDay:timeZone:
dateInTimeZone:fromFloatingDateInGMT:
orderedSetWithCapacity:
isSnoozed
snoozedAlarms
_excludeAlarmDueToConnectionTrigger:
setAllAlarmsSet:
sortedArrayUsingSelector:
sortedAlarms
proximity
maxPublicProximity
updateMeltedAndCachedMultiRelationObjects:forKey:
allAlarmsSet
addCachedMeltedObject:forMultiValueKey:
removeCachedMeltedObject:forMultiValueKey:
calendarItemOwner
removeAlarm:
originalAlarm
setAcknowledgedDate:
setProximity:
findOriginalAlarmStartingWith:
setOriginalAlarm:
addAlarm:
_isOnlyChangedKey:
acknowledgedDate
singleRecurrenceRule
lastObject
setRecurrenceRules:
initWithArray:
setRecurrenceRulesSet:
recurrenceRulesSet
attendeesRaw
filterAttendeesPendingDeletion:
setAttendeesRaw:
selfAttendee
_setSelfAttendee:
_removeAttendee:
addAttendee:
selfParticipantStatusRaw
initWithContacts:
matchingParticipantsFromItem:
sharedItemCreatedByFirstName
sharedItemCreatedByLastName
sharedItemCreatedByAddressString
setSharedItemCreatedByAddressString:
sharedItemCreatedTimeZoneName
setSharedItemCreatedTimeZoneName:
sharedItemModifiedByFirstName
sharedItemModifiedByLastName
sharedItemModifiedByAddressString
setSharedItemModifiedByAddressString:
sharedItemModifiedTimeZoneName
setSharedItemModifiedTimeZoneName:
attachmentsSet
setAttachmentsSet:
contactIdentifierForCalendarItem:
contactIdentifiers
addContactIdentifier:forCalendarItem:
removeContactIdentifier:forCalendarItem:
canMoveToCalendar:fromCalendar:error:
validate:
_areOnlyChangedKeys:
canMoveOrCopyToCalendar:fromCalendar:error:
isStructured
travelStartLocation
_moveToCalendar:forSavingItem:
_shouldDeleteAndAddForMoveFromCalendar:toCalendar:
_recursivelyPerformBlockOnSelfAndDetachedItems:forSavingItem:
emptyMeltedCacheForKey:
setOriginalItem:
_generateNewUniqueID
_adjustAfterRebaseForMovingFromOldSource:toNewSource:savingItem:
_setCalendarRecursively:forSavingItem:
_addObjectToPendingCommits:
_resetFieldsAfterMovingToNewCalendar
setExternalData:
_deletePersistentItemAndDetachedItems:forSavingItem:
ekExceptionDates
initWithDate:
setEkExceptionDates:
isEqualToDate:
setDetachedItems:
setAppLink:
_determineMatchingApplicationBundleIdentifierWithOptions:
applicationProxyForIdentifier:
localizedName
contentAttributeSet
textSelected
activityType
webpageURL
host
contentDescription
isOnlyAlarmAcknowledgedPropertyDirty
modifiedProperties
setModifiedProperties:
_updateHasRecurrenceRulesIfNeeded
_updateHasAttendeesIfNeeded
_updateHasNotesIfNeeded
canonicalizedEqualityTestValue1:value2:key:object1:object2:
knownRelationshipSingleValueKeysForValidation
knownRelationshipMultiValueKeysForValidation
knownRelationshipWeakKeys
knownDerivedRelationshipKeys
startDateRaw
setStartDateRaw:
setCalendarItemIdentifier:
calendarItemExternalIdentifier
uniqueId
setUniqueId:
localUID
displayNotes
setDisplayNotes:
hasNotes
setClientLocation:
setTravelStartLocation:
setLastModifiedDate:
creationDate
setCreationDate:
calendarScale
setCalendarScale:
priority
setPriority:
action
setAction:
appLink
defaultAlarms
defaultAlarmWasDeleted
setDefaultAlarmWasDeleted:
sequenceNumber
exportToICS
requiresDetach
allowsSpansOtherThanThisEvent
isDeletable
isSelfOrganizedInvitation
needsResponse
allowsCalendarModifications
allowsRecurrenceModifications
allowsAlarmModifications
allowsAttendeesModifications
actionsState
adjustDateFromUTC:
hasAlarms
indexForAlarm:
snoozeAlarm:withTimeIntervalFromNow:
snoozeAlarm:withLocation:proximity:
isAlarmAcknowledgedPropertyDirty
removeAcknowledgedSnoozedAlarms
removeAllSnoozedAlarms
recurrenceRuleString
setSingleRecurrenceRule:
_hadRecurrenceRules
addRecurrenceRule:
removeRecurrenceRule:
startDateForRecurrence
_hadAttendees
removeAttendee:
setSelfAttendee:
participantMatchingContact:
attendeeMatchingEmailAddress:
setOrganizer:
sharedItemCreatedByDisplayName
setSharedItemCreatedByDisplayName:
sharedItemCreatedByAddress
setSharedItemCreatedByAddress:
setSharedItemCreatedByFirstName:
setSharedItemCreatedByLastName:
sharedItemCreatedDate
setSharedItemCreatedDate:
sharedItemCreatedTimeZone
setSharedItemCreatedTimeZone:
sharedItemModifiedByDisplayName
setSharedItemModifiedByDisplayName:
sharedItemModifiedByAddress
setSharedItemModifiedByAddress:
setSharedItemModifiedByFirstName:
setSharedItemModifiedByLastName:
sharedItemModifiedDate
setSharedItemModifiedDate:
sharedItemModifiedTimeZone
setSharedItemModifiedTimeZone:
addAttachment:
removeAttachment:
hasAttachment
setContactIdentifiers:
canMoveToCalendar:error:
moveToCalendar:
_addDetachedItem:
_removeDetachedItem:
_deleteSelfAndDetached
setExceptionDates:
_addExceptionDate:
_removeExceptionDate:
updateWithAppLink:usedSelectedText:
_updateModifiedAlarmByAcknowledging
_willSave
T@"NSString",&,N
T@"EKCalendar",&,N
T@"NSURL",C,N
T@"NSTimeZone",C,N
T@"NSArray",C,N
simulateLegacyBehaviors
perform:whileSimulatingLegacyBehaviors:
setSimulateLegacyBehaviors:
performWhileSimulatingLegacyBehaviors:
setWorkQueue:
setCallbackQueue:
_addPersistentNotificationObservers
_uninstallTimer
_removePersistentNotificationObservers
_removeTransientEventStoreChangeObserver
workQueue
internalTimeout
setInternalTimeout:
_resetIdleTimer
setInternalStore:
setInternalCreationBlock:
internalCreationBlock
setInternalChangedBlock:
internalChangedBlock
internalPurgingAllowed
setInternalPurgingAllowed:
internalStore
_eventStoreChangedNotification:
setIgnoreLowLevelDatabaseChangedNotifications:
timer
setTimer:
ignoreLowLevelDatabaseChangedNotifications
_fireChangedBlock
removeObserver:name:object:
callbackQueue
setTimeout:
timeout
setCreationBlock:
creationBlock
setChangedBlock:
changedBlock
setPurgingAllowed:
purgingAllowed
acquireCachedEventStoreOrCreate:
_databaseChangedExternally
_ignoreLowLevelDatabaseChangedNotifications
_internalPurgingAllowed
_workQueue
_timer
_internalTimeout
_internalCreationBlock
_internalChangedBlock
_internalStore
T@"NSObject<OS_dispatch_queue>",&,N,V_workQueue
T@"NSObject<OS_dispatch_queue>",&,N,V_callbackQueue
T@"NSObject<OS_dispatch_source>",&,N,V_timer
Td,N,V_internalTimeout
T@?,C,N,V_internalCreationBlock
T@?,C,N,V_internalChangedBlock
TB,N,V_ignoreLowLevelDatabaseChangedNotifications
TB,N,V_internalPurgingAllowed
T@"EKEventStore",&,N,V_internalStore
T@?,C,N
setWithObjects:
setInversePropertyIsApplicable:
latitude
setLatitude:
longitude
setLongitude:
contactLabel
setContactLabel:
mapKitHandle
setMapKitHandle:
radius
setRadius:
routing
setRouting:
referenceFrame
setReferenceFrame:
derivedFrom
setDerivedFrom:
setCalendarItemOwner:
setAlarmOwner:
alarmOwner
_cacheContactData
contacts
isKeyAvailable:
emailAddresses
_nameComponentsForContact:reverse:
organizationName
setContactEmailAddresses:
setContactNameComponents:
setContactCompanyNames:
_nameComponentsWithGivenName:familyName:
_allParticipantsOnItem:
anyContactMatchesAnyParticipant:
anyContactMatchesParticipant:
matchingParticipantsFromParticipants:
contactEmailAddresses
nameComponents
contactNameComponents
contactCompanyNames
anyContactMatchesAnyParticipantFromItem:
setContacts:
_contacts
_contactEmailAddresses
_contactNameComponents
_contactCompanyNames
T@"NSArray",&,N,V_contacts
T@"NSSet",&,N,V_contactEmailAddresses
T@"NSSet",&,N,V_contactNameComponents
T@"NSSet",&,N,V_contactCompanyNames
initWithExternalID:externalIDTag:inSource:
_source
_externalIDTag
T@"EKSource",R,N,V_source
T@"NSString",R,N,V_externalIDTag
sharedToken
setJunkStatus:
saveEvent:span:commit:error:
junkStatus
junkStatusForInvitation:
cachedJunkStatus
componentsSeparatedByString:
_locationStringForLocations:
componentsJoinedByString:
clearDetectedConferenceURL
clearParsedConference
deserializeConference:
conferenceURL
conferenceURLDetected
_detectConferenceURL
_prioritizedConferencesSources
conferenceURLFromSources:
setIsJunk:shouldSave:
setCachedJunkStatus:
_couldBeJunkCommon
locationsWithoutPrediction
setNotesCommon:
setURLCommon:
parsedConference
conferenceURLForDisplayCached
conferenceURLForDisplay
reputationStore
junkStatusForInvitation:withReputationStore:
sendersEmail
shouldPermitOrganizerEmailFromJunkChecks:inReputationStore:
sendersPhoneNumber
shouldPermitOrganizerPhoneNumberFromJunkChecks:inReputationStore:
shouldPermitOrganizerEmailFromJunkChecks:
shouldPermitOrganizerPhoneNumberFromJunkChecks:
calendarRowIDs
valueForKeyPath:
sourceID
isMasterOrDetachedOccurrence
filters
ekPredicateFilterMatches:
property
isInteger
isString
stringValue
isDate
dateValue
comparison
operation
setStateChanged:
setParticipantAddressesToParticipants:
setInternalTimesWhenAllAttendeesCanAttend:
setInternalTimesWhenSomeAttendeesCanAttend:
setInternalOriginalConflictedParticipants:
setInternalProposedTimes:
setLeftoverSpans:
setAvailabilityRequestsQueue:
setProcessingQueue:
availabilityRequestsQueue
cancelAllOperations
processingQueue
internalOriginalStartDate
internalOriginalEndDate
internalOriginalConflictedParticipants
internalTimesWhenAllAttendeesCanAttend
internalTimesWhenSomeAttendeesCanAttend
internalProposedTimes
internalSearchingForMoreTimesWhenAllAttendeesCanAttend
internalSearchingForMoreTimesWhenSomeAttendeesCanAttend
setInternalSearchingForMoreTimesWhenAllAttendeesCanAttend:
_resetSearchFallbackNumbers
_attemptSearch
setInternalSearchingForMoreTimesWhenSomeAttendeesCanAttend:
setAvailabilityRequestInProgress:
participantAddressesToParticipants
leftoverSpans
setNextAvailabilityRangeStartDate:
setInternalOriginalStartDate:
setInternalOriginalEndDate:
setOriginalRangeStartDate:
setIgnoredEventID:
setOrganizerAddress:
_sendStateChange:
isEqualToTimeZone:
dateByAddingHours:inCalendar:
dateRoundedToNearestFifteenMinutesInCalendar:
originalRangeStartDate
isStartDateDirty
isEndDateDirty
isEqualToParticipant:
proposedStartDateForEvent:
internalProposedStarts
_selfOrganizerForNewlyScheduledEventWithAddress:
_transitionToConflictFoundStateAndSearch
noConflictRequired
addEntriesFromDictionary:
ignoredEventID
initWithSource:startDate:endDate:ignoredEventID:addresses:resultsBlock:
isCancelled
error
_haltSearchWithError:
spansIncludeBusyPeriod:
_participantforParticipantAddress:
setCompletionBlock:
addOperation:
initWithStartDate:endDate:conflictedParticipants:
remainingSearchAttempts
availabilityRequestInProgress
nextAvailabilityRangeStartDate
availabilitySearchDurationMultiplier
setAvailabilitySearchDurationMultiplier:
_processResults:betweenStartDate:endDate:
setRemainingSearchAttempts:
stateChanged
stateAsString:
_generateTimeSpansForResults:betweenStartDate:endDate:
_spliceLeftTimeSpans:andNewTimeSpans:
_mergeAdjacentSpansWithSameConflictedParticipants:
_generateOpenFreeTimesFromTimeSpans:
_generateNonOptimalTimesFromTimeSpans:
_findLeftoverSpans:usingFreeTimes:andNonOptimalTimes:
setArray:
_binarySearchForIndexOfTimeSpanInArray:containingDate:
_invalidBinarySearchIndex
subarrayWithRange:
verifyIntegrityOfAvailabilityTimeSearchTimelines
_validateSpans:
conflictedParticipants
_addressesForParticipants:
isEqualToSet:
_span:hasSameConflictedParticipantsAsSpan:
_allButLastItemInArray:
setConflictedParticipants:
_allButFirstItemInArray:
CalIsBeforeDate:
_insertUniqueParticipants:intoExistingParticipantsArray:
_filterOutUnreasonableTimeSlots:
_rankNonOptimalTimeSpans:
_findHighestRankedNonOptimalTimeSpans:
removeObjectAtIndex:
sortedArrayWithOptions:usingComparator:
showTypeAsBusy:
replaceObjectsInRange:withObjectsFromArray:
myFullName
localizedStringForKey:value:table:
initWithString:
organizerWithName:emailAddress:phoneNumber:address:isCurrentUser:
initWithStateChangedCallback:
originalStartDate
originalEndDate
originalConflictedParticipants
timesWhenAllAttendeesCanAttend
timesWhenSomeAttendeesCanAttend
proposedTimes
searchingForMoreTimesWhenAllAttendeesCanAttend
searchingForMoreTimesWhenSomeAttendeesCanAttend
searchForMoreTimesWhenAllAttendeesCanAttend
searchForMoreTimesWhenSomeAttendeesCanAttend
resetWithEvent:organizerAddressForNewlyScheduledEvent:
setNoConflictRequired:
setInternalProposedStarts:
organizerAddress
_noConflictRequired
_availabilityRequestInProgress
_internalSearchingForMoreTimesWhenAllAttendeesCanAttend
_internalSearchingForMoreTimesWhenSomeAttendeesCanAttend
_internalOriginalStartDate
_internalOriginalEndDate
_originalRangeStartDate
_internalProposedStarts
_ignoredEventID
_availabilityRequestsQueue
_participantAddressesToParticipants
_organizerAddress
_nextAvailabilityRangeStartDate
_availabilitySearchDurationMultiplier
_remainingSearchAttempts
_leftoverSpans
_internalTimesWhenAllAttendeesCanAttend
_internalTimesWhenSomeAttendeesCanAttend
_internalProposedTimes
_internalOriginalConflictedParticipants
_stateChanged
T@"NSObject<OS_dispatch_queue>",&,N,V_processingQueue
T@"NSDate",&,N,V_internalOriginalStartDate
T@"NSDate",&,N,V_internalOriginalEndDate
T@"NSDate",&,N,V_originalRangeStartDate
T@"NSMutableArray",&,N,V_internalProposedStarts
T@"EKSource",&,N,V_source
T@"NSString",&,N,V_ignoredEventID
T@"NSOperationQueue",&,N,V_availabilityRequestsQueue
T@"NSMutableDictionary",&,N,V_participantAddressesToParticipants
T@"NSString",&,N,V_organizerAddress
TB,N,V_availabilityRequestInProgress
T@"NSDate",&,N,V_nextAvailabilityRangeStartDate
Td,N,V_availabilitySearchDurationMultiplier
TQ,N,V_remainingSearchAttempts
T@"NSMutableArray",&,N,V_leftoverSpans
T@"NSMutableArray",&,N,V_internalTimesWhenAllAttendeesCanAttend
T@"NSMutableArray",&,N,V_internalTimesWhenSomeAttendeesCanAttend
T@"NSMutableArray",&,N,V_internalProposedTimes
T@"NSMutableArray",&,N,V_internalOriginalConflictedParticipants
TB,N,V_internalSearchingForMoreTimesWhenAllAttendeesCanAttend
TB,N,V_internalSearchingForMoreTimesWhenSomeAttendeesCanAttend
T@?,C,N,V_stateChanged
TB,N,V_noConflictRequired
domain
code
cal_serializableError
_cal_serializedEntryForKey:value:outKey:outValue:
cal_serializableUserInfo
cal_isCertificateError
cal_trustInfoCopy
_setInviteReplyCalendar:
shareeFirstName
shareeLastName
shareeURLString
setShareeURLString:
summary
cal_emailAddressString
cal_phoneNumberString
unloadPropertyForKey:
initWithInviteReplyCalendar:
inReplyTo
setInReplyTo:
setShareeDisplayName:
setShareeFirstName:
setShareeLastName:
setShareeURL:
setShareeStatus:
setSummary:
clearAlertedStatus
T@"EKCalendar",R,N
T@"NSDate",C,N
fetchAttachmentChangesInStore:resultHandler:
fetchAttachmentChangesInSource:resultHandler:
fetchAttachmentChangesInCalendar:resultHandler:
participantWithName:emailAddress:phoneNumber:url:
initWithName:emailAddress:phoneNumber:url:
setDisplayNameRaw:
stringAddingMailto
stringAddingTel
cal_hasSchemeMailto
cal_resourceSpecifierNoLeadingSlashes
cal_hasSchemeTel
displayNameRaw
doesParticipantURLString:email:andPhoneNumber:matchParticipantURLString:email:andPhoneNumber:
unifiedContactsMatchingPredicate:keysToFetch:error:
publicABPersonFromContact:publicAddressBook:
isDetached
proposedStartDate
adjustedPersistedDateForDate:withAdjustmentMode:
setProposedStartDate:
setProposedStartDateStatus:
invitedBy
CalKeys
semanticIdentifierForParticipant:
participantWithName:url:
existingContact
newContact
nameUsingAddressAsBackup
comment
setComment:
ABRecordWithAddressBook:
setProposedStartDate:forEvent:
hasProposedStartDate
proposedStartDateStatus
inviterNameString
setInviterNameString
scheduleStatus
_owner
T@"EKCalendarItem",R,N,V_owner
T@"NSURL",R,N
currentUser
TB,R,N,GisCurrentUser
T@"NSPredicate",R,D,N
calendarWithID:
calendarFromEventStore:
isSharedCalendarInvitation
_sharingInvitationResponse
_allowedEntityTypes
TQ,N,V_sharingInvitationResponse
TQ,N,V_allowedEntityTypes
spanDate
spanType
valueForSpanType:
dateType
initWithDate:dateType:spanType:
setSpanDate:
setDateType:
setSpanType:
_spanDate
_dateType
_spanType
T@"NSDate",&,N,V_spanDate
Tq,V_dateType
Tq,V_spanType
setKey:withArray:
_rangeCompletelyCoversPeriodBetweenStartDate:endDate:
span
availabilityFreshnessWindow
_clampDateRangeForSpans:startDate:endDate:
_currentMaxSpanTypeIn:
isBeforeDate:
isAfterDate:
initWithSpan:
cachedSpansFromSpans:
_eliminateOverlapsInResults:
initWithStartDate:endDate:
containsRange:
deDupSpans:
intersectsRange:
replaceObjectAtIndex:withObject:
sanitizeAndInsertResults:inRange:
spans
_cachedSpans
wrappedPredicate
evaluateWithObject:
mustStartInInterval
timeZoneWithAbbreviation:
occurrencesExistInRangeForEvent:startDate:endDate:mustStartInInterval:timezone:
statusRaw
setStatusRaw:
pendingStatusRaw
setPendingStatusRaw:
lastModifiedParticipationStatus
setLastModifiedParticipationStatus:
originAppName
recordFromSearchResult:
principalPath
setPrincipalPath:
isDefaultAlarm
absoluteDate
relativeOffset
semanticIdentifierForAlarmIsDefault:absoluteDate:relativeOffset:emailAddress:url:
semanticIdentifierForAlarm:
_stringForAlarmProximity:
setType:
stringRepresentation
needsAlert
isInvitation
acknowledgeWithEventStore:error:
isProposedNewTime
proposedStartDateIsInFutureForAttendee:
dotColor
hiddenFromNotificationCenter
event
setEvent:
_dotColor
_hiddenFromNotificationCenter
_alerted
_couldBeJunk
_event
Tq,N,V_type
T@"NSString",&,N,V_name
T@"NSString",&,N,V_firstName
T@"NSString",&,N,V_lastName
T@"NSString",&,N,V_emailAddress
T@"NSString",&,N,V_phoneNumber
T@"EKObjectID",&,N,V_objectID
T^{CGColor=},N,V_dotColor
TB,N,V_hiddenFromNotificationCenter
TB,N,V_alerted
TB,N,V_couldBeJunk
T@"EKEvent",&,N,V_event
isExecuting
isFinished
main
willChangeValueForKey:
didChangeValueForKey:
_recordTypes
_finishWithError:
terms
resultLimit
_processResults:
setNumberOfMatchesExceededLimit:
performCalendarDirectorySearchWithAccountID:terms:recordTypes:resultLimit:resultsBlock:completionBlock:
cancelCalendarDirectorySearchWithID:
findGroups
findLocations
findResources
findUsers
_processResults:class:
setError:
isSupported
initWithSource:query:resultsBlock:
isConcurrent
numberOfMatchesExceededLimit
_isFinished
_isExecuting
_query
_resultsBlock
_searchID
_numberOfMatchesExceededLimit
_error
TB,N,V_numberOfMatchesExceededLimit
T@"NSError",&,N,V_error
errorWithEKErrorCode:description:
save:
initWithObjectID:date:
setDate:
Td,N,V_date
setTerms:
setFindGroups:
setFindLocations:
setFindResources:
setFindUsers:
setResultLimit:
_findGroups
_findLocations
_findResources
_findUsers
_terms
_resultLimit
T@"NSSet",&,N,V_terms
TB,N,V_findGroups
TB,N,V_findLocations
TB,N,V_findResources
TB,N,V_findUsers
TQ,N,V_resultLimit
status
attendeeReplyChanged
videoConferenceChanged
externalURL
setRecurrenceRule:
participationStatusModifiedDate
setParticipationStatusModifiedDate:
participationStatus
setParticipationStatus:
setVideoConferenceChanged:
setAttendeeReplyChanged:
initWithParticipant:forEvent:
proposedStartDateDeclined
statusChanged
proposedStartDateChanged
commentChanged
setIsLocationDecline:
publicObjectWithObjectID:
recurrenceRule
rsvpRequested
expanded
expandedProposedTimeAttendee
CalSimulatedDateForNow
eventFromEventStore:
dismissAttendeeRepliedNotification
setIsAlerted:
needsReply
nearestProposedTime
startDateForNextOccurrence
isLocationDecline
setExpandedProposedTimeAttendee:
setExpanded:
isForReReply
setIsForReReply:
_timeChanged
_dateChanged
_videoConferenceChanged
_attendeeReplyChanged
_isLocationDecline
_expanded
_isForReReply
_startDateForNextOccurrence
_participationStatusModifiedDate
_participationStatus
_status
_recurrenceRule
_invitedBy
_expandedProposedTimeAttendee
T@"NSDate",&,N,V_startDateForNextOccurrence
T@"NSDate",&,N,V_participationStatusModifiedDate
Tq,N,V_participationStatus
Tq,N,V_status
T@"EKRecurrenceRule",&,N,V_recurrenceRule
TB,N,V_timeChanged
TB,N,V_dateChanged
TB,N,V_titleChanged
TB,N,V_locationChanged
TB,N,V_videoConferenceChanged
TB,N,V_attendeeReplyChanged
T@"EKCalendarEventInvitationNotificationAttendee",&,N,V_owner
T@"NSString",R,N,V_invitedBy
TB,N,V_isLocationDecline
T@"EKCalendarEventInvitationNotificationAttendee",&,N,V_expandedProposedTimeAttendee
TB,N,V_expanded
TB,N,V_isForReReply
_statusChanged
_commentChanged
_proposedStartDateChanged
_proposedStartDateDeclined
_isCurrentUser
_comment
_proposedStartDate
T@"NSString",R,N,V_name
T@"NSString",R,N,V_firstName
T@"NSString",R,N,V_lastName
T@"NSString",R,N,V_emailAddress
T@"NSString",R,N,V_phoneNumber
T@"NSURL",R,N,V_URL
TB,R,N,V_statusChanged
TB,R,N,V_commentChanged
TB,R,N,V_proposedStartDateChanged
Tq,R,N,V_participantType
Tq,R,N,V_participantStatus
T@"NSString",R,N,V_comment
T@"NSDate",R,N,V_proposedStartDate
TB,R,N,V_proposedStartDateDeclined
TB,R,N,V_isCurrentUser
calLocation
setCalLocation:
initWithStructuredLocation:
createStructuredLocation
_calLocation
T@"CalLocation",C,N,V_calLocation
_initWithFilePaths:orderedCalendarUIDs:orderedSourceUIDs:eventStore:calendar:options:
_createImportHandle
setAsynchronous:
_importWithCompletion:
setImportProgressAsIndeterminate
setCompletionCallback:
importFilePaths
_separateFilesForImport:
callCompletionWithSuccess:
importICalFiles
iCalFilesToImport
vCalFilesToImport
_separateICalFilesForITIP
_sortFilesByImportCalendar
_doImportFiles
callImportDroppedRemindersCallbackIfThereWereReminders
iTIPFiles
addArray:withKey:toStrongTableOfArrays:
nonITIPFiles
_findCalendarForExistingEvent:
addItem:withKey:toStrongTableOfArrays:
addObject:toArray:
isDefaultSchedulingCalendar
setImportError:
addArray:toArray:
selectCalendar
infoForNewCalendarForFiles:forITIPFiles:nonITIPFiles:
x_apple_calendar_color
green
blue
x_wr_calname
x_wr_caldesc
lastPathComponent
stringByDeletingPathExtension
selectCalendarWithTitle:color:description:error:
isPathToBackupFile
importFoundBackupFile
fileURLWithPath:
importFoundBackupFile:
isPathToICalData
dataWithContentsOfFile:
initWithData:options:error:
version
setValue:withKey:inDictionary:
isPathToVCalData
countReminders:
method
makeDecision
shouldImportContinueGivenDecision:eventsAffected:
numInvalidEvents
setNumInvalidEvents:
document
ownerIdentityAddress
calendarToITIPFiles
initWithData:filename:
eventFromDocument:
_existingEventFromICSEvent:
importICSData:intoCalendar:options:
_doITIPFileImport
calendarToICalFiles
importICSData:intoCalendars:options:
eventsWithExternalIdentifier:inCalendars:
isEnabledForEvents
isDelegate
existingEventIDs
attendee
allSourceUIDs
sourceWithIdentifier:
preferredOwnerAddress
_isAnyAttendeeAddressFrom:organizer:equivalentTo:
_matchingAttendeeAddressesFrom:organizer:inSource:
addSet:withKey:toDictionaryOfSets:
resourceSpecifier
_cn_map:
anyObject
compareToLocalURL:
cal_isEquivalentToEmailAddress:
cal_isEquivalentToPhoneNumber:
ownerAddresses
addObject:toSet:
allCalendarUIDs
calendarWithIdentifier:
componentKeys
componentForKey:
componentOccurrencesForKey:
_getImportedCalendarItems
importError
completionCallback
asynchronous
importSetProgressAsIndeterminate
importDroppedReminders
allowedImportFileTypes
initWithFilePaths:orderedCalendarUIDs:orderedSourceUIDs:eventStore:options:
initWithFilePaths:calendar:options:
asyncImportWithCompletion:
syncImportWithCompletion:
_message:hasNewSelfOrganizedEventForCalendar:
_findPreferredSourceForDocument:
_defaultImportCalendarRequiringSource:
async_queue
setAsync_queue:
setSelectCalendar:
setImportFoundBackupFile:
setImportDroppedReminders:
setMakeDecision:
importSetProgressValue
setImportSetProgressValue:
setImportSetProgressAsIndeterminate:
options
setOptions:
setAllCalendarUIDs:
setAllSourceUIDs:
setICalFilesToImport:
setVCalFilesToImport:
setCalendarToICalFiles:
setCalendarToITIPFiles:
calendarToVCalFiles
setCalendarToVCalFiles:
setExistingEventIDs:
setITIPFiles:
setNonITIPFiles:
filesWithReminders
setFilesWithReminders:
droppedReminderCount
setDroppedReminderCount:
importedItems
setImportedItems:
_asynchronous
_importError
_async_queue
_selectCalendar
_importFoundBackupFile
_importDroppedReminders
_makeDecision
_importSetProgressValue
_importSetProgressAsIndeterminate
_numInvalidEvents
_importFilePaths
_options
_allCalendarUIDs
_allSourceUIDs
_iCalFilesToImport
_vCalFilesToImport
_calendarToICalFiles
_calendarToITIPFiles
_calendarToVCalFiles
_existingEventIDs
_iTIPFiles
_nonITIPFiles
_filesWithReminders
_droppedReminderCount
_importedItems
_completionCallback
TB,N,V_asynchronous
TQ,N,V_numInvalidEvents
T@"EKEventStore",&,N,V_eventStore
T@"NSArray",R,N,V_importFilePaths
TQ,N,V_options
T@"NSArray",&,N,V_allCalendarUIDs
T@"NSArray",&,N,V_allSourceUIDs
T@"NSMutableDictionary",&,N,V_iCalFilesToImport
T@"NSMutableArray",&,N,V_vCalFilesToImport
T@"NSMapTable",&,N,V_calendarToICalFiles
T@"NSMapTable",&,N,V_calendarToITIPFiles
T@"NSMapTable",&,N,V_calendarToVCalFiles
T@"NSMutableSet",&,N,V_existingEventIDs
T@"NSMutableDictionary",&,N,V_iTIPFiles
T@"NSMutableDictionary",&,N,V_nonITIPFiles
T@"NSMutableArray",&,N,V_filesWithReminders
TQ,N,V_droppedReminderCount
T@"NSMutableArray",&,N,V_importedItems
T@?,C,N,V_completionCallback
T@"NSError",&,N,V_importError
T@"NSObject<OS_dispatch_queue>",&,N,V_async_queue
T@?,C,N,V_selectCalendar
T@?,C,N,V_importFoundBackupFile
T@?,C,N,V_importDroppedReminders
T@?,C,N,V_makeDecision
T@?,C,N,V_importSetProgressValue
T@?,C,N,V_importSetProgressAsIndeterminate
components
changeID
initWithEntityType:changeID:
processFetchResults:
objectChangeWithProperties:
raise
objectIDWithCADObjectID:
CADObjectChangeIDsFromEKObjectChanges:
fetchObjectChangesInStore:resultHandler:
fetchObjectChangesInSource:resultHandler:
fetchObjectChangesInCalendar:resultHandler:
callClientResultsHandler:changesTruncated:latestToken:changes:
serializedPropertiesForConsumingChange
changedObjectID
_changeType
_changedObjectID
_changeID
_sequenceNumber
Tq,R,N,V_changeID
Tq,R,N,V_sequenceNumber
T@"EKObjectID",R,N,V_changedObjectID
Ti,R,N,V_changeType
reminderSourceMapLock
eventSources
returnEventResults
reminderSources
returnReminderResults
_combineEventSources:withReminderSources:
performHoldingReminderSourceMapLock:
_rebuildSourceMapsWithEventSources:reminderSources:
reminderSourceIDToEventSourceIDMapping
setReminderSourceIDToEventSourceIDMapping:
setEventSourceIDToReminderSourceIDMapping:
isPrimaryLocalSource
isWritable
eventSourceIDForReminderSourceID:
reminderSourceMap
eventSourceMap
eventSourceIDToReminderSourceIDMapping
getMapsWithReminderSourceMap:eventSourceMap:
initializeEKEventStorePlusReminders
combinedReminderAndEventSources
combineEventCalendars:withReminderCalendars:
eventSourceForReminderSource:
reminderSourceForEventSource:
invalidateReminderSourceMaps
initSingleton
areBirthdaysEnabled
birthdayCalendarsInStore:
resetAllBirthdaysInStore:
disableBirthdayCalendarsInStore:
initWithQueue:andBlock:
integerForKey:
setInteger:forKey:
_localeChanged
localeIdentifier
checkForFailures
executeBlock
registerForContactChangeNotifications:
removeObserver:
deregisterForContactChangeNotifications:
initWithBirthdayCalendarModifications
initWithCreationBlock:
eventStoreProvider
boolForKey:
setBool:forKey:
removeCalendar:commit:error:
commit:
bundleForClass:
localBirthdayCalendarCreateIfNeededWithError:
setCalendarIdentifier:
saveCalendar:commit:error:
contactStore
initWithKeysToFetch:
birthday
nonGregorianBirthday
enumerateContactsWithFetchRequest:error:usingBlock:
eventWithEventStore:
CalDateFromBirthdayComponents:
CalDisplayName
birthdayStringForContactName:eventDate:birthDate:lunarCalendar:
alarmWithRelativeOffset:
setBirthdayContact:
setLunarCalendarString:
insertEventWithContact:forDateComponents:intoCalendar:inStore:
birthdayCalendarsCreateIfNeeded:inStore:originalIdentifier:originalAlarms:ignoreAlarms:
allContactsWithBirthdays
_insertEventsForContact:intoCalendar:inStore:
predicateForMasterEventsInCalendar:
birthdayContactIdentifier
removeEvent:span:commit:error:
birthdayContactName
unifiedContactWithIdentifier:
enumerateEventsMatchingPredicate:usingBlock:
sharedListener
contactsInserted:updated:deleted:
contactsReset
stop
addBirthdayCalendars
disableBirthdayCalendars
_updateQueue
_updateJobQueue
_needsReset
_shutdown
setAbsoluteDate:
setRelativeOffset:
urlWrapper
setUrlWrapper:
calendarOwner
setCalendarOwner:
setIsDefaultAlarm:
setSnoozedAlarmsSet:
snoozedAlarmsSet
initWithEnabled:weekday:startTime:endTime:timeZone:
enabled
setEnabled:
weekday
setWeekday:
startTime
setStartTime:
endTime
setEndTime:
_enabled
_weekday
_startTime
_endTime
TB,N,V_enabled
Tq,N,V_weekday
T@"NSDate",&,N,V_startTime
T@"NSDate",&,N,V_endTime
_eventStorePurger
changedByAddress
changedByFirstName
changedByLastName
changedProperties
publicStatus
setLocalUID:
setRecurrenceDate:
setIdentifierString:
_splitIdentifier:intoLocalUID:recurrenceDate:
recurrenceDate
_recurrenceIdentifierWithRecurrenceDate:localUID:stripTime:stripTimeZone:
identifierString
stringWithUTF8String:
_dateFormatStripTime:stripTimeZone:
dateWithTimeIntervalSince1970:
timeIntervalSince1970
recurrenceIdentifierWithLocalUID:recurrenceDate:
recurrenceIdentifierWithString:
localUIDForIdentifierString:
_recurrenceStringForDate:stripTime:stripTimeZone:
_localUID
_recurrenceDate
_identifierString
T@"NSString",&,V_localUID
T@"NSDate",&,V_recurrenceDate
T@"NSString",&,N,V_identifierString
initWithChangeSet:
singleValueChanges
multiValueAdditions
multiValueRemovals
_initWithChangeSet:filter:
filteredDictionaryPassingTest:
setIsNew:
isModified
setIsModified:
isSaved
setIsSaved:
isDeleted
setIsDeleted:
isUndeleted
setIsUndeleted:
initWithDictionary:
setSingleValueChanges:
setMultiValueAdditions:
setMultiValueRemovals:
removeObjectsForKeys:
rollbackChanges
changedSingleValueKeys
changedMultiValueKeys
_isNewAndUnsaved
valueForSingleValueKey:basedOn:and:
changeSingleValue:forKey:basedOn:and:
valuesForMultiValueKey:basedOnSet:
addChanges:shouldCopyKeyCallback:
removeFromChanges:forMultiValueKey:basedOn:and:
_addToChanges:forMultiValueKey:basedOn:and:shouldCopyKeyCallback:
_semanticIdentifierToObjectMapForObjects:
_cleanupEmptySetsForMultiValueKey:
replaceUniqueMultiValueObjectsWithUpdatedObjects:
callStackSymbols
CalDictionaryWithEmptyObjectsRemoved
initWithChangeSet:changesToSkip:
initWithChangeSet:changesToKeep:
rollbackChangesForKeys:
markChangesAsSaved
hasUnsavedMultiValueAdditionForKey:
unsavedMultiValueAddedObjectsForKey:
hasUnsavedMultiValueRemovalForKey:
unsavedMultiValueRemovedObjectsForKey:
valueForSingleValueKey:basedOn:
changeSingleValue:forKey:basedOn:
valuesForMultiValueKey:basedOn:and:
isUniqueAddedObject:forKey:
replaceMultiChangeAddedObject:withObject:forKey:
addToChanges:forMultiValueKey:basedOn:and:
addChangesAndUpdateUniqueMultiValueObjects:
skipsPersistentObjectCopy
setSkipsPersistentObjectCopy:
isEffectivelyEqual:
_skipsPersistentObjectCopy
_isModified
_isSaved
_isDeleted
_isUndeleted
_singleValueChanges
_multiValueAdditions
_multiValueRemovals
T@"NSMutableDictionary",&,N,V_singleValueChanges
T@"NSMutableDictionary",&,N,V_multiValueAdditions
T@"NSMutableDictionary",&,N,V_multiValueRemovals
TB,N,V_isNew
TB,N,V_isModified
TB,N,V_isSaved
TB,N,V_isDeleted
TB,N,V_isUndeleted
_setNotificationsCollectionFlag
_registerObject:
_hasNotificationsCollectionFlag
initWithOptions:
addNotification:
removeNotification:
T@"EKSource",R,N
T@"NSSet",C,N
inviteReplyNotificationFromEventStore:
removeInviteReplyNotification:error:
TQ,N,V_status
suggestedEventInfoWithOpaqueKey:uniqueKey:
T@"EKPersistentEvent",D,N
TQ,D,N
T@"NSDate",C,D,N
token
_token
T@"EKEventStore",R,W,N,V_eventStore
TI,R,N,V_token
initWithEntityClass:predicate:store:
signpostHandle
predicateFormat
_createOSActivity
signpostStart
_startActualWithCompletion:synchronous:
_fetchObjectIDsActualWithCompletion:synchronous:
_startProcessingWithCompletion:synchronous:processor:
expandWithObjectsPendingCommit:deletedObjectIDs:andResultArray:
objectsPendingCommit
deletedObjectIDsPendingCommit
signpostEndWithError:count:
shouldLoadDefaultProperties
loadedValues
registerFetchedObjectWithID:withDefaultLoadedPropertyKeys:values:
occurrenceDate
_startActivityWithCompletion:synchronous:
_startFetchObjectIDsActivityWithCompletion:synchronous:
searchWithEntityClass:predicate:store:
terminate
startWithCompletion:
runSynchronously
fetchObjectIDs
_entityClass
_predicate
_cancellationToken
_finished
_isCancelled
_retryCount
createNewReminder
reminderIdentifier
URLFragmentAllowedCharacterSet
removeCharactersInString:
stringByAddingPercentEncodingWithAllowedCharacters:
completionDate
setCompletionDate:
setParentID:
allowReminders
dueDateComponents
generateUniqueIDWithReminder:calendar:
backingReminderWithIdentifier:
_resetIfBackingObjectIsOfClass:fetchResetFrozenObjectBlock:
isAbsolute
reminderWithEventStore:
_removeSnoozedAlarmsFromReminder:usingDueDate:
firstAlertDate
setFirstAlertDate:
setCompleted:
isCompleted
clearParentID
bestDisplayAlarm
startDateComponents
setStartDateComponents:
setDueDateComponents:
parentID
_startDateComponents
_dueDateComponents
_parentID
T@"EKObjectID",&,N,V_parentID
T@"NSDateComponents",C,N,V_startDateComponents
T@"NSDateComponents",C,N,V_dueDateComponents
completed
TB,N,GisCompleted
fetchRecurrenceChangesInStore:resultHandler:
fetchRecurrenceChangesInSource:resultHandler:
fetchRecurrenceChangesInCalendar:resultHandler:
_initWithOptions:eventStore:eventStoreGetter:
_killSyncTimer:
logHandle
attemptReload
_eventStoreChanged
notificationQueue
_killTimer
isMonitoringOnlyNotificationCount
notificationReferences
attemptReloadSynchronously:
isDataProtected
eventNotificationCount
_fetchEventNotificationReferencesFromEventStore:earliestExpiringNotification:
_updateTimerFireDate:
effectiveCallbackQueue
postNotificationName:object:userInfo:
_addRemovedOrAddedObjectIDsTo:oldNotifications:newNotifications:
minusSet:
_timerFired
initWithFireDate:serviceIdentifier:target:selector:userInfo:
setMinimumEarlyFireProportion:
mainRunLoop
scheduleInRunLoop:
_syncDidEnd:
_notificationCountChangedExternally
_alertPrefChanged
_databaseChanged
trackChangesInEventStore
adjust
blacklistedNotificationQueue
eventNotificationsFilteredByShowsNotificationsFlag:earliestExpiringNotification:
dateWithTimeIntervalSinceNow:
_syncTimerFired:
initWithFireDate:interval:target:selector:userInfo:repeats:
addTimer:forMode:
_resetSyncTimer
EKObjectIDsFromData:
requestedDarwinNotifications
addBlacklistedNotificationObjectID:
blacklistedRowIDs
T@"NSObject<OS_os_log>",R,N
initWithOptions:eventStore:
initWithOptions:eventStoreGetter:
notificationCount
handleDarwinNotification:
callbackNotificationQueue
setCallbackNotificationQueue:
eventStorePurger
_eventStoreGetter
_running
_nextFireTime
_syncTimer
_pendingChanges
_lastChangedTimestamp
_changedIDsValid
_changedIDs
_ignoreSyncTimer
_initialCheck
_shouldInstallPersistentTimer
_useSyncIdleTimer
_registerForDarwinNotifications
_filteredByShowsNotificationsFlag
_computeChangedNotificationSet
_automaticallyFaultNotifications
_lastExpirationTimerFireDateWasInThePast
_isMonitoringOnlyNotificationCount
_notificationCount
_notificationReferences
_callbackNotificationQueue
_notificationQueue
T@"NSObject<OS_dispatch_queue>",R,N,V_notificationQueue
TB,R,N,V_isMonitoringOnlyNotificationCount
T@"EKTimedEventStorePurger",R,N,V_eventStorePurger
T@"EKEventStore",R,N,V_eventStore
T@"NSObject<OS_dispatch_queue>",&,N,V_callbackNotificationQueue
TQ,R,N,V_notificationCount
T@"NSArray",R,N,V_notificationReferences
preferredAddress
setPreferredAddress:
_displayName
_preferredAddress
_principalPath
T@"NSString",&,N,V_displayName
T@"NSString",&,N,V_preferredAddress
T@"NSString",C,N,V_principalPath
T@"NSDictionary",R
setAvailabilityFreshnessWindow:
saveGeocodedLocationsInTravelEngine
setSaveGeocodedLocationsInTravelEngine:
overrideTravelAdvisoryHypothesis
setOverrideTravelAdvisoryHypothesis:
overriddenTravelAdvisoryHypothesisTransportType
setOverriddenTravelAdvisoryHypothesisTransportType:
overriddenTravelAdvisoryHypothesisConservativeTravelTime
setOverriddenTravelAdvisoryHypothesisConservativeTravelTime:
overriddenTravelAdvisoryHypothesisEstimatedTravelTime
setOverriddenTravelAdvisoryHypothesisEstimatedTravelTime:
overriddenTravelAdvisoryHypothesisAggressiveTravelTime
setOverriddenTravelAdvisoryHypothesisAggressiveTravelTime:
overriddenTravelAdvisoryHypothesisSupportsLiveTraffic
setOverriddenTravelAdvisoryHypothesisSupportsLiveTraffic:
overriddenTravelAdvisoryHypothesisCurrentTrafficDensity
setOverriddenTravelAdvisoryHypothesisCurrentTrafficDensity:
overriddenTravelAdvisoryHypothesisRouteName
setOverriddenTravelAdvisoryHypothesisRouteName:
overriddenTravelAdvisoryHypothesisTravelState
setOverriddenTravelAdvisoryHypothesisTravelState:
preventMarkingTravelAdvisoryEntriesAsDismissed
setPreventMarkingTravelAdvisoryEntriesAsDismissed:
forceDisplayOfNewTravelAdvisoryHypotheses
setForceDisplayOfNewTravelAdvisoryHypotheses:
performAgendaEntryEqualityChecksInTravelEngine
setPerformAgendaEntryEqualityChecksInTravelEngine:
setVerifyIntegrityOfAvailabilityTimeSearchTimelines:
showDepartureDateForTransitTimeToLeave
setShowDepartureDateForTransitTimeToLeave:
shouldBypassTravelEngineThrottle
setShouldBypassTravelEngineThrottle:
syntheticTravelAdvisoriesEnabled
setSyntheticTravelAdvisoriesEnabled:
initForReadingFromData:error:
decodeObjectOfClass:forKey:
createEventInEventStore:
initRequiringSecureCoding:
encodeObject:forKey:
encodedData
serializeEvent:error:
deserializeData:error:
versionFromData:error:
initWithEventStore:withVersion:
_version
T@"NSString",R,N,V_version
eventUUID
excludeTimedEvents
excludeAllDayEvents
excludeDeclined
excludeProposed
isProposedTimeEvent
excludeDeclinedUnlessProposed
removeObjectsAtIndexes:
arrayWithObject:
CalIsBetweenStartDate:endDate:
_addEventOccurrenceAndProposedTimeOccurrenceFor:withOccurrenceStartDate:toResults:
localizedStringWithFormat:
errorWithCADErrorCode:
_defaultDescriptionForCADErrorCode:
errorWithCADErrorCode:description:
errorWithDomain:code:description:underlyingError:reason:
_defaultDescriptionForEKErrorCode:
errorWithEKErrorCode:description:underlyingError:reason:
initWithDomain:code:userInfo:
errorWithEKErrorCode:underlyingError:
errorWithEKErrorCode:description:reason:
setIsCurrentUser:
scheduleAgent
setScheduleAgent:
fetchOrganizerChangesInStore:resultHandler:
fetchOrganizerChangesInSource:resultHandler:
fetchOrganizerChangesInCalendar:resultHandler:
setInviteReplyCalendar:
sharedInstance
initWithDateProvider:
internalActive
setInternalActive:
_refresh
startOfLeaveNowPeriodInternal
startOfRunningLatePeriodInternal
suggestedDepartureDate
setStartOfLeaveNowPeriodInternal:
aggressiveDepartureDate
setStartOfRunningLatePeriodInternal:
setInternalPeriodChangedCallback:
internalPeriodChangedCallback
internalPeriod
_refreshPeriod
_refreshTimer
dateProvider
stringForPeriod:
setInternalPeriod:
_refreshOnDate:
activate
deactivate
active
startOfLeaveNowPeriod
startOfRunningLatePeriod
updateWithHypothesis:
setPeriodChangedCallback:
periodChangedCallback
period
_internalActive
_startOfLeaveNowPeriodInternal
_startOfRunningLatePeriodInternal
_internalPeriod
_internalPeriodChangedCallback
_dateProvider
T@"NSDate",&,N,V_startOfLeaveNowPeriodInternal
T@"NSDate",&,N,V_startOfRunningLatePeriodInternal
TB,N,V_internalActive
TQ,N,V_internalPeriod
T@?,C,N,V_internalPeriodChangedCallback
T@"<CalDateProvider>",R,N,V_dateProvider
T@"NSDate",&,N
endDateRaw
setEndDateRaw:
travelTime
setTravelTime:
setOriginalStartDate:
travelAdvisoryBehavior
setTravelAdvisoryBehavior:
responseComment
setResponseComment:
locationPredictionState
setLocationPredictionState:
birthdayID
setBirthdayID:
canForward
setCanForward:
disallowProposeNewTime
setDisallowProposeNewTime:
needsOccurrenceCacheUpdate
setNeedsOccurrenceCacheUpdate:
invitationChangedProperties
setInvitationChangedProperties:
externalTrackingStatus
setExternalTrackingStatus:
actions
setActions:
conferenceURLString
setConferenceURLString:
setBirthdayContactIdentifier:
setBirthdayContactName:
recurrenceSet
setRecurrenceSet:
conferencesSet
setConferencesSet:
firedTTL
setFiredTTL:
diffSummaryBetweenObject:andObject:
EKObjectChangeSummarizer_singleValueDiffKeys
EKObjectChangeSummarizer_multiValueDiffKeys
changeSummaryForObject:
transportType
conservativeDepartureDate
conservativeTravelTime
estimatedTravelTime
aggressiveTravelTime
routeName
supportsLiveTraffic
currentTrafficDensity
geoTrafficDensityAsString:
trafficDensityDescription
travelState
isEqualToHypothesis:
initWithTransportType:conservativeDepartureDate:conservativeTravelTime:suggestedDepartureDate:estimatedTravelTime:aggressiveDepartureDate:aggressiveTravelTime:routeName:supportsLiveTraffic:currentTrafficDensity:trafficDensityDescription:travelState:
supportsSecureCoding
syntheticHypothesisWithStartDate:conservativeTravelTime:estimatedTravelTime:aggressiveTravelTime:
encodeWithCoder:
initWithCoder:
_transportType
_conservativeDepartureDate
_conservativeTravelTime
_suggestedDepartureDate
_estimatedTravelTime
_aggressiveDepartureDate
_aggressiveTravelTime
_routeName
_supportsLiveTraffic
_currentTrafficDensity
_trafficDensityDescription
_travelState
Ti,R,N,V_transportType
T@"NSDate",R,C,N,V_conservativeDepartureDate
Td,R,N,V_conservativeTravelTime
T@"NSDate",R,C,N,V_suggestedDepartureDate
Td,R,N,V_estimatedTravelTime
T@"NSDate",R,C,N,V_aggressiveDepartureDate
Td,R,N,V_aggressiveTravelTime
T@"NSString",R,C,N,V_routeName
TB,R,N,V_supportsLiveTraffic
TQ,R,N,V_currentTrafficDensity
T@"NSString",R,C,N,V_trafficDensityDescription
Tq,R,N,V_travelState
setTransportType:
setConservativeDepartureDate:
setConservativeTravelTime:
setSuggestedDepartureDate:
setEstimatedTravelTime:
setAggressiveDepartureDate:
setAggressiveTravelTime:
setRouteName:
setSupportsLiveTraffic:
setCurrentTrafficDensity:
setTrafficDensityDescription:
setTravelState:
Td,D,N
fetchEventActionChangesInStore:resultHandler:
fetchEventActionChangesInSource:resultHandler:
fetchEventActionChangesInCalendar:resultHandler:
initWithValue:
setValue:
_value
T@,W,N,V_value
temporaryObjectIDWithEntityType:
_propertyForKey:
isTemporary
CADObjectIDWithGeneration:
_CADObjectID
_isPendingUpdate
_isPendingDelete
_trackModifiedObject:
_loadedPropertyKeys
_loadedPropertyForKey:
_relationForKey:
toMany
_releaseLoadedProperties
_setDefaultPropertiesLoaded:
_setPendingUpdate:
_objectDidReset:
ownsRelatedObject
internalAddCoCommitObject:
initWithOptions:capacity:
_loadDefaultPropertiesIfNeeded
_takeValues:forKeys:
_setProperty:forKey:forRelation:isUpdatedProperty:
_createUpdatedPropertiesIfNeeded
changed
_createLoadedPropertiesIfNeeded
_loadChildIdentifiersForKey:values:
_setProperty:forKey:isUpdatedProperty:
_loadRelationForKey:value:
inversePropertyNames
shouldSetInverseProperty:onObject:forObject:
_addObjectCore:toValues:relation:
_removeObjectCore:fromValues:relation:
_primitiveValueForKey:loader:
_primitiveSetValue:forKey:
_loadStringValueForKey:
isPropertyLoaded:
_setProperty:forKey:isRelation:isUpdatedProperty:
_takeValuesForDefaultPropertyKeys:values:
_areDefaultPropertiesLoaded
removeLastObject
coCommitObjects
stringWithCapacity:
_shouldRetainPropertyForKey:
allObjectsWithChangesRelatedToObjects:
initWithAlternateUniverseObject:inEventStore:withUpdatedChildObjects:
_setObjectID:inDatabaseRestoreGeneration:
isPropertyDirty:
dirtyPropertiesAndValues
saved
_setPendingInsert:
_setPendingDelete:
primitiveAddRelatedObject:forKey:
primitiveRemoveRelatedObject:forKey:
primitiveDoubleValueForKey:
primitiveSetDoubleValue:forKey:
takeValues:forKeys:
takeValuesForDefaultPropertyKeys:values:
dump
_lock
_coCommitObjects
_loadedProperties
_updatedProperties
T@"EKEventStore",R,N
fetchParticipantChangesInStore:resultHandler:
fetchParticipantChangesInSource:resultHandler:
fetchParticipantChangesInCalendar:resultHandler:
performGroupExpansionWithAccountID:principalPath:completionBlock:
initWithSource:group:completionBlock:
_group
_completionBlock
_resultsSet
initWithArray:copyItems:
initWithRecurrenceRule:
createRecurrenceRule:
_frequency
_interval
_recurrenceEnd
_firstDayOfTheWeek
_daysOfTheWeek
_daysOfTheMonth
_daysOfTheYear
_weeksOfTheYear
_monthsOfTheYear
_setPositions
Tq,R,N,V_frequency
Tq,R,N,V_interval
T@"EKRecurrenceEnd",C,N,V_recurrenceEnd
Tq,R,N,V_firstDayOfTheWeek
T@"NSArray",R,N,V_daysOfTheWeek
T@"NSArray",R,N,V_daysOfTheMonth
T@"NSArray",R,N,V_daysOfTheYear
T@"NSArray",R,N,V_weeksOfTheYear
T@"NSArray",R,N,V_monthsOfTheYear
T@"NSArray",R,N,V_setPositions
coordinate
date:representsApproachingDepartureDateForHypothesis:
date:representsLatenessForHypothesis:
travelStateIndicatesTravelingTowardDestination:
formattedLocationCoordinates:
geoRouteHypothesisTravelStateForString:
geoTransportTypeAsString:
geoTransportTypeForString:
geoTrafficDensityForString:
authorizationStatusAsString:
geoTransportTypeForCalLocationRoutingMode:
date:representsImmediateDepartureForHypothesis:
maximumAllowableTravelTime
minimumAllowableTravelTime
cadRouteHypothesisForEKTravelEngineHypothesis:
sharedEventStore
_sharedEventStore
T@"EKEventStore",R,N,V_sharedEventStore
CALFreeBusyTypeFromEKAvailType:
getCALFreeBusyFromEKSpans:inRange:
_orderForType:
leastAvailabileFreeBusyTypeForArray:
getCALFreeBusyFromResults:forAttendees:inRange:
summarizedAvailabilityTypeForSpans:
_permittedClassesForArchivingLastSyncErrorUserInfo
archiveDictionary:permittedClasses:error:
unarchiveDictionaryFromData:permittedClasses:error:
dataFromErrorUserInfo:
errorUserInfoFromData:
resourceChanges
setResourceChanges:
addResourceChange:
removeResourceChange:
originalOccurrenceStartDate
initWithName:
_isAllDay
setOccurrenceIsAllDay:
_adjustedPersistedDateForDate:withAdjustmentMode:pinMode:clientCalendarDate:
setOccurrenceStartDate:
setOccurrenceEndDate:
effectiveTimeZone
occurrenceIsAllDay
_calculateDurationWithStart:end:allDay:
calendarDateByComponentwiseAddingComponents:
differenceAsComponentwiseDateComponents:
differenceAsDateComponents:units:
eventOccurrenceID
recurrenceIdentifier
occurrenceStartDate
absoluteTime
_modifiedNotificationUserInfoWithIdentifier:forRevert:
postModifiedNotificationWithUserInfo:
needsGeocodingForEvent:
setNeedsGeocoding:forEvent:
originalOccurrenceEndDate
_clearLocationPredictionCacheIfNotFrozen
CalCalendarWithUnsanitizedCalendarIdentifier:
_committedStartDate
isPhantom
setIsPhantom:
setOriginalOccurrenceIsAllDay:
_updateDefaultAlarms
_updateStartDateForDate:withAdjustmentMode:
_updateEndDateForDate:withAdjustmentMode:
forceSetTimeZone:
clearCachedTimeValues
startDateIncludingTravel
_setStartDate:andClearProposedTimes:
dateForDayInTimeZone:
ek_ios_dateForEndOfDayInTimeZone:
_pinDate:withPinMode:
setOriginalOccurrenceStartDate:
occurrenceEndDate
setOriginalOccurrenceEndDate:
setProposedStartDateChanged:
setCommentChanged:
setStatusChanged:
_settingTimeZoneChangesStartEndDates
_isOriginalOccurrenceStartDateSameAsCommittedStartDate
_isParticipantStatusDirty
allowsParticipationStatusModifications
supportedEventAvailabilities
_eventAvailabilityForParticipantStatus:supportedEventAvailabilities:isAllDayEvent:
stringRemovingMailto
currentUserMayActAsOrganizer
initWithObjects:
recurrenceEndWithEndDate:
recurrenceEndWithOccurrenceCount:
sharedAutoupdatingCurrentCalendar
month
_nsCalendar
allowsAvailabilityModifications
defaultAllDayAlarmOffset
setDefaultAlarm:
defaultAllDayAlarm
defaultTimedAlarm
_removeDefaultAlarms
_addDefaultAlarms
virtualConference
joinMethods
conference
serializeConference:
_buildConferenceStringFromNotesWithoutConference:serializedConference:
_originallyCommittedVirtualConference
invalidateConferenceURL:
hasSuffix:
_setInvitationStatusAlertedIfNecessary
_setInvitationStatusUnalertedIfNecessary
_shouldAlertInviteeDeclines
initWithTimeInterval:sinceDate:
components:fromDate:toDate:options:
hour
minute
privacyDescription
routingModeEnumForCalRouteType:
currentProcessHasSyncClientEntitlement
isFacebookBirthdayCalendar
allowsPrivacyLevelModifications
_invitationChangedPropertyForFlag:
_setInvitationChangedProperty:forFlag:
_isEventNotSendingNotification:
_setEvent:isNotSendingNotification:
serverSupportedProposeNewTime
hasOwnerEmailAddress
range
stringByReplacingCharactersInRange:withString:
substringToIndex:
CDVStringByXMLUnquoting
substringWithRange:
setPredictedLocationFrozen:
_updatePredictedLocationCacheIfNeeded
roomAttendees
removeConferenceRooms:
_conferenceRoomDisplayStrings
setStructuredLocation:preserveConferenceRooms:
removeObjectsInArray:
displayString
_needsPredictedLocationCacheUpdateHoldingLock
_updatedPredictedLocationRespectingTimeoutBudgetForEvent:error:
localizedDescription
_firstNonConferenceRoomLocationTitle
isMainThread
locationPredictionForEvent:error:timeout:
performWithReadLock:
_updatePredictedLocationCacheIfNeededHoldingLock
performWithWriteLock:
_clearLocationPredictionCacheIfNotFrozenHoldingLock
preferredLocationWithoutPrediction
setPredictedLOI:
isPrediction
shouldDoLocationPredictionForEvent:
isPrivateEventSharedToMe
isAllDayDirty
hasAttachmentChanges
_hasBasicChangesRequiringSpanAll
_hasRecurrenceRuleChangeRequiringSpanAll
_basicChangesRequiringSpanAll
_hasOrHadRecurrenceRule
hasUnsavedChangesInKeys:
automaticEventLocationGeocodingAllowed
_eligibleForTravelAdvisoriesIncludePotential:
locationIsAConferenceRoom
hasKnownSpatialData
automaticLocationGeocodingAllowed
predictedLOI
eligibleForTravelAdvisories
get_enableTravelAdvisoriesForAutomaticBehavior
_relatedCachedTimeKeys
clearCachedValuesForKeys:
startOfDayForDate:
cachedValueForKey:expectingCachedValue:forMasterKey:relatedKeys:populateBlock:
startOfDayForStartDateInCalendar:
daysSpannedInCalendar:
dateByAddingDays:inCalendar:
daysSpannedFromStartDate:toEndDate:allDay:inCalendar:
isMultiDayTimedEventWithStartDate:endDate:allDay:inCalendar:
isSameDayAsDate:inCalendar:
dateOnlyComponentsInCalendar:
setHour:
dateFromComponents:
_resetInternalState
pendingStatus
hasValidEventAction
_hasExternalIDOrDeliverySource
pendingParticipationStatus
_travelTimeInternalDescription
clearModifiedFlags
setClearModifiedFlags:
validateAndUpdateOccurrenceDateFieldsAfterRefresh
postModifiedNotification
_committedEndDate
setRequiresDetachDueToSnoozedAlarm:
validateWithSpan:error:
allowEvents
_isParticipationStatusDirty
validateRecurrenceRule:error:
_validateDatesAndRecurrencesGivenSpan:error:
endLocation
generateUniqueIDWithEvent:originalEvent:calendar:
_adjustForNewCalendarBeforeSave
responseMustApplyToAll
requiresDetachDueToSnoozedAlarm
_detachWithStartDate:newStartDate:future:
_isSimpleRepeatingEvent
conformsToRecurrenceRules:
_isSignificantlyDetachedComparedToMaster:shouldIgnorePartStat:
_updateVideoConferenceOnlyModified
_propagateChangesToDetachedEvents:significantlyDetachedEvents:startDateOffset:duration:calendar:
_clearExceptionDatesAndUpdateDetachedOriginalDates
_filterExceptionDatesAndDetachments
_applyTimeChangesToMaster
_updateModifiedPropertiesForThisEventAndAllDetachments
invalidateConferenceURLIfNeeded:inEventStore:
_updateModifiedProperties
applyChanges:
knownKeysToSkipForFutureChanges
addChangesFromObject:toObjects:except:
_propagateAlarmChangesToDetachedEvents:
dateByAddingComponents:toDate:options:
knownKeysToUseForFutureChanges
addChangesFromObject:toObjects:keep:
_updateMasterDate:forChangeToOccurrenceDate:fromOriginalOccurrenceDate:
_leftoversInDates:withGeneratedDates:
_addOrganizerToRecentsIfNeeded
_addNewAttendeesToRecentsIfNeeded
_clearOriginalDateFields
revert
originalOccurrenceIsAllDay
startCalendarDate
calendarTimeZone
_keysToChangeForDuplicateWithOptions:
dateForStartOfDayInTimeZone:
_occurrenceExistsOnDate:timeZone:
_checkStartDateConstraintAgainstDate:timeZone:error:
durationOverlapsRecurrenceInterval
overlapsWithOrIsSameDayAsEventInSeries
_validateAlarmIntervalConstrainedToRecurrenceInterval:
_deleteFromOccurrenceDateOnward:
_deleteThisOccurrence
_updateSelfFromDetachedEventIfNeededForDelete
enumerateObjectsWithOptions:usingBlock:
_cancelDetachedEventsWithSpan:
_eventIsTheOnlyRemainingOccurrence
_noRemainingEarlierOccurrences
_shouldCancelInsteadOfDeleteWithSpan:
_cancelWithSpan:error:
_shouldDeclineInsteadOfDelete
_deleteWithSpan:error:
isFirstOccurrence
setByAddingObject:
_shouldPreserveFutureWhenSlicingWithStartDate:newStartDate:
masterEvent
emptyMeltedCacheForKeys:
UUIDString
_resetAfterUpdatingChangeSetOrBackingObject
rebaseForDetachment
updateEventToEvent:commit:
isDate:inSameDayAsDate:
isEqualToLocation:
infoWithConflicts:needsAction:event:
isAffectingAvailability
potentialConflictOccurrenceDatesInTimePeriod:
predicateForEventsWithStartDate:endDate:calendars:loadDefaultProperties:
_fetchedEventIsConflict:forStartDate:endDate:
isTentative
dateWithTimeInterval:sinceDate:
infoWithConflictsInSeries:outOf:withPeriod:conflictingDates:
updateFromMapItem:
_clearAttendeeChangedFlags
setAttendeeComment:
setAttendeeStatus:
setAttendeeProposedStartDate:
setAttendeeDeclinedStartDate:
dismissAcceptedProposeNewTimeNotification
_respondToProposedTimeFromAttendee:shouldAccept:
isDifferentWithDiff:
knownRequireRSVPKeys
intersectsSet:
_diff:isDifferentFromCommittedEventHelperRequiresReschedule:
currentUserGeneralizedParticipantRole
isDifferentAndModifiedAttendeesWithDiff:
knownPerUserPropertyKeys
initWithSet:
diffFromCommitted
isDifferentAndRequiresRescheduleWithDiff:
isDifferentAndRequiresRSVPWithDiff:
isDifferentAndHasUnscheduledAttendeesWithDiff:
_requirementsToMoveOrCopyToCalendarHelperAllowedToMoveOrCopyEventFromCalendar:toCalendar:
_requirementsToMoveToCalendarHelperDuplicationRequiredToMoveEventFromCalendar:toCalendar:
_requirementsToMoveToCalendarHelperAlterationsRequiredToMoveEventFromCalendar:toCalendar:
_requirementsToMoveToCalendarHelperReinviteAttendeesRequiredToMoveEventFromCalendar:toCalendar:
_requirementsToMoveToCalendarHelperNeedToRemoveOriginalToMoveEventFromCalendar:toCalendar:
_requirementsToMoveToCalendarHelperRemoveAttendeesRequiredToMoveEventFromCalendar:toCalendar:
requirementsToMoveFromCalendar:toCalendar:
canMoveToCalendar:fromCalendar:allowedRequirements:error:
_canMoveOrCopyFromCalendar:toCalendar:allowedRequirements:error:
seriesHasOutOfOrderEvents
seriesHasOverlappingOrOnSameDayOrOutOfOrderEvents
CalGregorianGMTCalendar
component:fromDate:
_suggestedStartDateHelperRecurrenceRuleRequiresExpansion:forDate:
dateWithDatePartFromDate:timePartFromDate:inCalendar:
isSameWeekAsDate:inCalendar:
roundToCurrentWeekInCalendar:withFirstWeekdayIndex:
URLForNoMail
isAttendeeSameAsOrganizer:
arrayByExcludingObjectsInArray:
isPrivacySet
supportsMultipleAlarms
_hasAbsoluteAlarms
suggestedStartDateForCurrentRecurrenceRule
supportsURLs
isValidAttendee:forCalendar:
supportsMultipleDaysInMonthlyRecurrence
supportsMultipleMonthsInYearlyRecurrence
supportsYearlyRecurrenceWithArbitraryInterval
sharedOwnerAddress
isCurrentUserInvitedAttendee
_calendarsAreSharedToMeInSameSourceAndHaveSameOwner:
setComponents:options:
initWithCalendar:
ICSDataWithOptions:
initWithEKOptions:
defaultCalendarForNewEvents
externalUriScheme
_coercedEventAvailabilityForDesiredAvailability:supportedAvailabilities:
eventFromICSEvent:inStore:
isStatusDirty
needsGeocoding
setNeedsGeocoding:
phantomMaster
setPhantomMaster:
startCalendarDateIncludingTravelTime
overrideStartDate:
durationIncludingTravel
endCalendarDate
isMaster
supportsParticipationStatusModificationsWithoutNotification
allowsParticipantStatusModifications
_userAddressesRepresentInvitedAttendee:checkEmailAddresses:
markEventAsAttendeeForward
_parentParticipationStatus
birthdayPersonID
isBirthday
lunarCalendarString
makeRecurrenceEndDateBased
makeRecurrenceEndCountBased
hasComplexRecurrence
futureOccurrencesCannotBeAffectedByChangingStartDateToDate:
virtualConferenceTextRepresentation
setVirtualConference:
clearInvitationStatus
addEventAction:
removeEventAction:
isAlerted
proposedEndDate
travelRoutingMode
allowsTravelTimeModifications
allowsAllDayModifications
attendeeComment
attendeeProposedStartDate
attendeeDeclinedStartDate
dontSendNotificationForChanges
setDontSendNotificationForChanges:
allowsProposedTimeModifications
supportsAddingAttachments
addConferenceRooms:
confirmPredictedLocation:
rejectPredictedLocation
hasPredictedLocation
setLocationPredictionAllowed:
forceLocationPredictionUpdate
setConferenceURL:
setEndLocation:
compareStartDateWithEvent:
compareStartDateIncludingTravelWithEvent:
canDetachSingleOccurrence
changingAllDayPropertyIsAllowed
hasChangesRequiringSpanAll
potentiallyEligibleForTravelAdvisories
travelAdvisoryBehaviorIsEffectivelyEnabled
startOfDayForEndDateInCalendar:
isMultiDayTimedEventInCalendar:
canBeRespondedTo
saveWithSpan:error:
isSignificantlyDetached
isSignificantlyDetachedIgnoringParticipation
nextOccurrenceOrDetachmentAfter:
hasAttendeeProposedTimes
duplicateWithOptions:
countOfAttendeeProposedTimes
allowsResponseCommentModifications
removeWithSpan:error:
isMainOccurrence
isOnlyOccurrence
privacyLevelString
updateEventToEvent:
scanForConflicts
updateWithGeocodedMapItemAndSaveWithCommit:eventStore:error:
launchURL
acceptProposedTimeNotificationFromAttendee:
declineProposedTimeNotificationFromAttendee:
isEqual:comparingKeys:
isDifferentAndHasForwardedAttendeesWithDiff:
isDifferentAndHasNewProposedTimeWithDiff:
isDifferentExceptingPerUserPropertiesWithDiff:
isDifferentFromCommittedEventAndRequiresReschedule
isDifferentFromCommittedEventAndRequiresRSVP
isDifferentFromCommittedEventAndHasUnscheduledAttendees
requirementsToMoveToCalendar:
requiresCopyToMoveFromCalendar:toCalendar:
attendeesNotIncludingOrganizer
birthdayPersonUniqueID
setProposedEndDate:
preventConferenceURLDetection
setPreventConferenceURLDetection:
showEventURLString
setVirtualConferenceTextRepresentation:
_cachedLocationPrediction
_cachedLocationPredictionExpirationDate
_locationPredictionFrozen
_locationPredictionAllowed
_locationPredictionLock
_occurrenceIsAllDay
_requiresDetachDueToSnoozedAlarm
_preventConferenceURLDetection
_clearModifiedFlags
_birthdayPersonUniqueID
_occurrenceStartDate
_occurrenceEndDate
_originalOccurrenceStartDate
_originalOccurrenceEndDate
_originalOccurrenceIsAllDay
_proposedEndDate
_showEventURLString
_virtualConferenceTextRepresentation
T@"EKCalendarDate",C,N,V_occurrenceStartDate
T@"EKCalendarDate",C,N,V_occurrenceEndDate
TB,N,V_occurrenceIsAllDay
T@"EKCalendarDate",C,N,V_originalOccurrenceStartDate
T@"EKCalendarDate",C,N,V_originalOccurrenceEndDate
T@"NSNumber",C,N,V_originalOccurrenceIsAllDay
TB,N,V_requiresDetachDueToSnoozedAlarm
Ti,N,V_clearModifiedFlags
T@"EKRecurrenceIdentifier",R,N
Tq,N
Td,R,N
T@"EKStructuredLocation",&,D,N
T@"EKSuggestedEventInfo",&,N
T@"EKStructuredLocation",R,N
T@"NSDate",&,N,V_proposedEndDate
T@"NSURL",&,N
TB,N,V_preventConferenceURLDetection
T@"NSString",R,N,V_showEventURLString
currentUserInvitedAttendee
TB,R,N,GisCurrentUserInvitedAttendee
T@"NSDate",R,C,N
T@"EKCalendarDate",R,N
privacySet
TB,R,N,GisPrivacySet
T@"EKVirtualConference",&,N
T@"NSString",&,N,V_virtualConferenceTextRepresentation
TB,N,GisAllDay
T@"EKStructuredLocation",C,D,N
T@"EKParticipant",R,D,N
T@"NSString",R,N,V_birthdayPersonUniqueID
CalDateByComponentwiseAddingSeconds:inCalendar:
initWithName:emailAddress:phoneNumber:address:isCurrentUser:
setCurrentUser:
availabilityCache
setKey:withObject:
setKey:withDate:
setKey:withPointerAddress:
_availabilityCache
_addresses
_requestID
setDataProtectionObserver:
_dataProtectionStateChanged
dataProtectionObserver
setStateChangedCallback:
dataIsAccessible
stateChangedCallback
stateChangedNotificationName
_stateChangedCallback
_dataProtectionObserver
T@"CDBDataProtectionObserver",&,N,V_dataProtectionObserver
T@?,C,N,V_stateChangedCallback
_ekParticipantStatusFromCalAttendeeStatus:
_calAttendeeStatusFromEKParticipantStatus:
setPendingStatus:
resemblesEmailAddress
_valueForFlag:
_setFlag:value:
attendeeWithEmailAddress:name:
attendeeWithName:url:
attendeeWithName:emailAddress:
attendeeWithName:phoneNumber:
attendeeWithName:emailAddress:address:
markAsForward
fetchAlarmChangesInStore:resultHandler:
fetchAlarmChangesInSource:resultHandler:
fetchAlarmChangesInCalendar:resultHandler:
initWithCustomClientId:suffix:
customClientId
initWithCustomClientId:
suffix
initWithSuffix:
CADChangeTrackingClientId
_suffix
_customClientId
T@"NSString",R,C,N,V_suffix
T@"NSString",R,C,N,V_customClientId
T@"CADChangeTrackingClientId",R,N
_initAlarms:
_initAttachments:
_initAttendees:
_initRecurrenceRules:
initWithAlarm:
initWithAttachment:
createAlarm:
serializedProperties
setIsAllDay:
_travelTime
_recurrenceRules
_calendarIdentifier
T@"NSDate",C,N,V_startDate
T@"NSDate",C,N,V_endDate
T@"NSTimeZone",C,N,V_timeZone
TB,N,V_isAllDay
Td,N,V_travelTime
T@"NSMutableArray",&,N,V_recurrenceRules
T@"NSString",C,N,V_title
T@"NSString",C,N,V_notes
T@"NSString",C,N,V_calendarIdentifier
T@"NSString",C,N,V_location
T@"EKSerializableStructuredLocation",&,N,V_structuredLocation
cal_changeMayAffectAnyObjectOfType:
cal_changeMayAffectCalendarsOrSources
reachedMaxDepth
rootObject
initWithRootObject:
faultIfNeededForObject:
depth
setDepth:
setReachedMaxDepth:
_reachedMaxDepth
_rootObject
_depth
T@"EKObject",R,N,V_rootObject
TQ,N,V_depth
TB,N,V_reachedMaxDepth
_readWriteLock
_performWithReadLock:
_performWithWriteLock:
validateWithOwner:error:
_resetWithFrozenObject:
_cachedMeltedObjectsCount
_hasChangeHelperInKeys:ignoreKeys:checkUnsaved:
hasUnsavedChangesIgnoreKeys:
_hasUnsavedChangesInKeys:ignoreKeys:
_hasChangesForKey:checkUnsaved:
_singleRelationshipKeysToCheckForChanges
_multiRelationshipKeysToCheckForChanges
isSubsetOfSet:
_addChangesFromObject:except:keep:ignoreRelations:copyingBackingObjects:
_addChanges:copyingBackingObjects:
_addChangesFromObject:toObjects:except:keep:copyingBackingObjects:
updateAfterApplyingChanges:
addMultiChangedObjectValues:forKey:
removeMultiChangedObjectValues:forKey:
multiChangedObjectValuesForKey:
frozenOrMeltedCachedSingleRelationObjectForKey:
frozenOrMeltedCachedMultiRelationObjectsForKey:
_addCachedMeltedObject:forMultiValueKey:
updateMultiValueCacheForChangeSet:preservingExistingAdds:
_applyDefinedAfterFirstSaveFrom:
_applyKnownImmutableValuesFrom:
_updateCachedMeltedObjectSetForMultiValueKey:usingBlock:
_removeCachedMeltedObject:forMultiValueKey:
removeMultiChangedObjectValue:forKey:
replaceMultiChangedObjectValuesWithObjectValues:forKey:
updateMeltedCacheForChangeSet:
_resetMeltedCache
_changeSetForDiff:
_compareAllKnownKeysExceptKeys:forObject:againstObject:compareIdentityKeys:
_compareRelationshipObject1:againstRelationshipObject2:propertiesToIgnore:relationshipObjectKey:
indexOfObjectPassingTest:
_cachedMeltedChildIdentifierToParentMap:
cachedValueForKey:
addChangesFromObject:
refetch
meltedAndCachedMultiRelationCountForKey:
emptyMeltedCache
inverseObjectWithObject:diff:
applyChangeSetFromOtherObject:
cachedMeltedChildIdentifierToParentMap
_numberOfSharedLocksForUnitTesting
isDerivedRelationship
_compareAllKnownKeysExceptKeys:forObject:againstObject:
_compareKnownKeys:forObject:againstObject:
_compareNonIdentityKeys:forObject:againstObject:propertiesToIgnore:
hasMailto
initWithDayOfTheWeek:weekNumber:
decodeIntegerForKey:
encodeInteger:forKey:
dayOfWeek:
dayOfWeek:weekNumber:
_dayOfTheWeek
_weekNumber
Tq,R,N,V_dayOfTheWeek
Tq,R,N,V_weekNumber
componentsForDate:inTimeZone:
systemTimeZone
initWithCalendarIdentifier:
serializedEventWithEvent:
initWithSearchWithCSQuery:inStore:resultHandler:completionHandler:
setFetchAttributes:
setBundleIDs:
initWithQueryString:context:
attributeSet
eventWithUUID:occurrenceDate:
setFoundItemsHandler:
setCompletionHandler:
queryString
queryStringForSearchTerm:matchingTypes:fromStartDate:toEndDate:
_queryStringForPeopleMatchingSearchTerm:
replaceCharactersInRange:withString:
searchWithCSQuery:inStore:resultHandler:completionHandler:
queryStringForSearchTerm:matchingTypes:
query
csQuery
T@"EKEventStore",W,V_eventStore
eventWithRandomUUID
calendarForEntityType:eventStore:
calendarForEntityTypes:eventStore:
createNewReminderCalendar
_clearCGColorCache
backingCalendarWithIdentifier:
_eventKitBundle
colorString
getColorRed:green:blue:
initWithCGColor:
color
setColorString:
allowsBirthdayModifications
readOnly
setReadOnly:
_flagValueWithMask:
_setFlagValue:withMask:
typeDescription:
_validateDeletableHelper:
isMarkedUndeletable
isFamilyCalendar
_anotherCalendarForDefaultSchedulingExists
_anotherCalendarForRemindersExists
eligibleForDefaultSchedulingCalendar
_anyCalendarOfType:inSameSourceExistsPassingTest:
prohibitsScheduling
setProhibitsScheduling:
setSharedOwnerURL:
canModifySuggestedEventCalendar
initWithBytesNoCopy:length:freeWhenDone:
setCanBeShared:
setCanBePublished:
setReminderSource:
setLastSyncErrorUserInfo:
lastSyncErrorUserInfo
shareeWithEKSharee:forCalendar:
ownerForEKCalendar:
filteredSetUsingPredicate:
addAlarms:
removeAlarms:
matchesOneOfMyEmails:
urlMatchesOneOfMyEmails:
isImmutable
currentProcessIsFirstPartyCalendarApp
isSourceManaged:
exportDataWithOptions:
reportSharedCalendarInviteAsJunkForCalendarWithID:accountID:queue:completionBlock:
rowIDsForCalendars:
calendarWithEventStore:
setCGColor:
setAllowsContentModifications:
setIsDefaultSchedulingCalendar:
isInbox
setInbox:
isNotificationsCollection
setNotificationsCollection:
setSubscribed:
isHidden
setHidden:
isImmutableRaw
setImmutable:
isSubscribedCalendarJunk
setIsSubscribedCalendarJunk:
deletionWarningsMask
canMergeWithCalendar:
setAllowsScheduling:
isSharingInvitation
setSharingInvitation:
setSharedOwnerAddress:
publishURL
setPublishURL:
canBePublished
canBeShared
setFacebookBirthdayCalendar:
isHolidaySubscribedCalendar
setSubscribedHolidayCalendar:
setFamilyCalendar:
setMarkedUndeletable:
isMarkedImmutableSharees
setMarkedImmutableSharees:
isSuggestionsCalendar
isIgnoringEventAlerts
setIsIgnoringEventAlerts:
allowsIgnoringSharedEventChangeNotifications
isIgnoringSharedCalendarNotifications
setIsIgnoringSharedCalendarNotifications:
setIsAffectingAvailability:
syncHash
selectionSyncIdentifier
hasEvents
hasTasks
setAllowReminders:
setLastSyncError:userInfo:
calendarError
stripAlarms
setStripAlarms:
stripAttachments
setStripAttachments:
moveSubscribedCalendarToSource:
addSharee:
removeSharee:
hasSharees
shareesAndOwner
selfIdentityAddress
setSelfIdentityAddress:
setOwnerIdentityAddress:
ownerIdentityOrganizer
remove:
isManaged
exportData
setIsJunk:
_cachedJunkStatus
TQ,N,V_cachedJunkStatus
T@"EKSource",&,N
subscribed
TB,R,N,GisSubscribed
immutable
TB,R,N,GisImmutable
T^{CGColor=},N
_color
T^{CGColor=},R,N
alloc
isCurrentUserForScheduling
isCurrentUserForSharing
_isCurrentUserForSharing
_UUID
T@"NSString",R,N,V_UUID
TB,R,N,V_isCurrentUserForSharing
setInfo:
info
urlString
setUrlString:
initWithInfo:url:
dueDateTimeZone
dueDateAllDay
componentsInTimeZone:fromDate:
year
timeZoneForSecondsFromGMT:
_adjustPersistedStartDateComponentsForNewTimeZone:
startDateComponentsRaw
startDateTimeZone
setStartDateTimeZone:
startDateAllDay
setStartDateAllDay:
setDueDate:
T@"NSTimeZone",R,N
initWithAbsoluteDate:
initWithRelativeOffset:
_setEmailAddress:
_setUrlWrapper:
_setType:
relativeOffsetRaw
setRelativeOffsetRaw:
initWithURL:readonly:
resetBackingAlarmWithBackingAlarm:
bundleWithPath:
authorizationStatusForBundle:
_currentAuthorizationStatus
areLocationsAllowedWithAuthorizationStatus:
areLocationsAvailable
alarmWithAbsoluteDate:
areLocationsAllowed
areLocationsCurrentlyEnabled
defaultGeofencedReminderRadius
ownerUUID
defaultAlarm
setSnoozedAlarms:
addSnoozedAlarm:
removeSnoozedAlarm:
setIsSnoozed:
setBookmarkURL:
bookmarkURL
isTopographicallyEqualToAlarm:
soundName
setSoundName:
_soundName
TB,N,GisDefaultAlarm
T@"EKObject",R,N
T@"EKCalendarItem",R,N
T@"EKAlarm",&,N
T@"EKStructuredLocation",C,N
T@"NSString",C,N,V_soundName
extensionBundleIdentifier
extensionWithIdentifier:error:
initWithTitle:url:
initWithTitle:joinMethods:conferenceDetails:
setRequestCompletionBlock:
setUserInfo:
beginExtensionRequestWithOptions:inputItems:error:
virtualConferenceForRoomType:completion:queue:
firstPhoneNumber
setJoinMethods:
setConferenceDetails:
serializationBlockTitle
setSerializationBlockTitle:
_joinMethods
_serializationBlockTitle
T@"NSArray",&,N,V_joinMethods
T@"NSString",&,N,V_conferenceDetails
T@"NSString",&,N,V_serializationBlockTitle
TQ,N,V_source
initWithTitle:identifier:extensionBundleIdentifier:
setRequestCancellationBlock:
setRequestInterruptionBlock:
beginExtensionRequestWithOptions:inputItems:completion:
extensionsWithMatchingAttributes:completion:
virtualConferenceRoomTypesWithCompletion:queue:
originatingExtensionIdentifier
_extensionBundleIdentifier
_originatingExtensionIdentifier
T@"NSString",R,N,V_originatingExtensionIdentifier
T@"NSString",R,N,V_title
T@"NSString",R,N,V_identifier
T@"NSString",R,N,V_extensionBundleIdentifier
isBroadcast
setIsBroadcast:
_isBroadcast
TB,N,V_isBroadcast
shareeWithName:url:
_urlForEmailAddress:andPhoneNumber:
initWithName:url:
initWithName:url:externalID:
shareeWithName:emailAddress:phoneNumber:
setShareeAccessLevel:
shareeAccessLevel
hasTel
stringRemovingTel
_ekShareeStatusFromCalShareeStatus:
_calShareeStatusFromEKShareeStatus:
_ekShareeAccessLevelFromCalShareeAccessLevel:
_calShareeAccessLevelFromEKShareeAccessLevel:
shareeWithName:emailAddress:
shareeWithName:phoneNumber:
shareeWithName:emailAddress:phoneNumber:externalID:
shareeWithUUID:name:emailAddress:phoneNumber:
statusEnumFromString:
statusStringFromEnum:
setSourceIdentifier:
preferredEventPrivateValueRaw
_calEventPrivacyLevelToEKPrivacyLevel:
_ekPrivacyLevelToCalEventPrivacyLevel:
setPreferredEventPrivateValueRaw:
strictestEventPrivateValueRaw
setStrictestEventPrivateValueRaw:
constraintsName
backwardsCompatibleConstraintsPathForName:
_setConstraintsNameWithoutValidation:
isAbsolutePath
constraintsURLForName:
flags2
setFlags2:
flag2:
setFlag2:value:
flag:
setFlag:value:
setDisabled:
delegatedAccountOwnerStoreID
_allCalendars
allCalendars
_countCalendarItemsOfCalType:resultHandler:
cachedConstraintsForSource:
symbolicColorForNewCalendarWithExistingSymbolicNames:
personaIdentifierForAccountIdentifier:
_ekOfficeHoursFromCalDAVOfficeHours:
fetchOfficeHoursForAccountWithID:queue:completionBlock:
_calDAVOfficeHoursFromEKOfficeHours:
setOfficeHours:forAccountWithID:queue:completionBlock:
primaryLocalSourceID
currentProcessHasTestingEntitlement
currentProcessIsPreferences
_validateClientCanModifySources:
isInMainWindow
isInSeparateWindow
port
useSSL
externalIdentificationInfoForAccountID:resultsBlock:
_cacheExternalIdentification
_cacheExternalIdentificationIfNeeded
managedConfigurationAccountAccess
supportsCalendarCreation
sourceWithEventStore:
setSourceType:
setPreferredEventPrivateValue:
setStrictestEventPrivateValue:
setDefaultAlarmOffset:
setDefaultAllDayAlarmOffset:
constraintsDescriptionPath
setConstraintsDescriptionPath:
setConstraintsName:
constraintsDescriptionPathForUnitTesting
setConstraintsDescriptionPathForUnitTesting:
creatorBundleID
setCreatorBundleID:
creatorCodeSigningIdentity
setCreatorCodeSigningIdentity:
setOnlyCreatorCanModify:
setIsInMainWindow:
setIsInSeparateWindow:
doesSyncDefaultAlarmsToServer
setDoesSyncDefaultAlarmsToServer:
wasMigrated
setWasMigrated:
showsNotifications
setShowsNotifications:
usesSelfAttendee
setUsesSelfAttendee:
isEnabled
supportsAlarmAcknowledgedDate
setSupportsAlarmAcknowledgedDate:
setDelegatedAccountOwnerStoreID:
calendarWithExternalIdentifier:
removeCalendarItemsOlderThanDate:entityTypeMask:error:
readWriteCalendarsForEntityType:
countCalendarItemsWithResultHandler:
countCalendarItemsOfType:resultHandler:
displayOrderForNewCalendar
symbolicColorForNewCalendar
personaIdentifier
fetchOfficeHoursWithCompletion:onQueue:
setOfficeHours:withCompletion:onQueue:
sourceError
syncs
ownerName
setOwnerName:
isNestedLocalSource
wantsCommentPromptWhenDeclining
serverHost
serverPort
serverUsesSSL
supportsFreebusy
supportsEventCalendarCreation
prefersSuggestingNewTimeViaEmail
supportsAttendeeEventForwarding
preferUsingEventOrganizerEmailWhenComposingMail
timeOfLastExternalIdentificationCache
setTimeOfLastExternalIdentificationCache:
cachedHost
setCachedHost:
cachedPort
setCachedPort:
cachedOwnerAddresses
setCachedOwnerAddresses:
_isFacebook
_snoozeAlarmRequiresDetach
_timeOfLastExternalIdentificationCache
_cachedHost
_cachedPort
_cachedOwnerAddresses
T@"NSDate",&,N,V_timeOfLastExternalIdentificationCache
T@"NSString",&,N,V_cachedHost
Tq,N,V_cachedPort
T@"NSSet",&,N,V_cachedOwnerAddresses
T@"NSData",&,N
T@"NSSet",R,N
T@"EKAvailabilityCache",R,N
TB,N,GisEnabled
T@"EKSourceConstraints",R,N
T@"NSError",R,N
primaryLocalSource
TB,R,N,GisPrimaryLocalSource
nestedLocalSource
TB,R,N,GisNestedLocalSource
T@"NSNumber",C,N
TB,N,V_isFacebook
TB,N,V_snoozeAlarmRequiresDetach
T@"NSDictionary",R,C,N
inputItems
_allowedItemPayloadClasses
resourceChangeFromEventStore:
eventID
_calendarName
_eventID
_createCount
_updateCount
_deleteCount
T@"NSString",&,N,V_calendarName
TB,N,V_allDay
T@"NSString",&,N,V_eventID
TI,N,V_changeType
T@"NSNumber",&,N,V_createCount
T@"NSNumber",&,N,V_updateCount
T@"NSNumber",&,N,V_deleteCount
setScheduleStatus:
fetchCalendarChangesInStore:resultHandler:
fetchCalendarChangesInSource:resultHandler:
colorChanged
orderChanged
_colorChanged
_orderChanged
TB,R,N,V_colorChanged
TB,R,N,V_orderChanged
locationOfInterest
mapItem
customLabel
countryCode
thoroughfare
locality
initWithType:customLabel:mapItemName:addressCountryCode:addressThoroughFare:addressLocality:
initWithPredictedLocationOfInterest:
mapItemName
addressCountryCode
addressThoroughfare
addressLocality
rtPredictedLocationOfInterest
_customLabel
_mapItemName
_addressCountryCode
_addressThoroughfare
_addressLocality
_rtPredictedLocationOfInterest
T@"RTPredictedLocationOfInterest",R,N,V_rtPredictedLocationOfInterest
T@"NSString",R,C,N,V_customLabel
T@"NSString",R,C,N,V_mapItemName
T@"NSString",R,C,N,V_addressCountryCode
T@"NSString",R,C,N,V_addressThoroughfare
T@"NSString",R,C,N,V_addressLocality
_travelTimeWithStartCoordinate:endCoordinate:arrivalDate:withRouteType:completionBlock:
findCoordinatesForLocation:completionBlock:
isCurrentLocation
travelTimeFrom:to:arrivalDate:withRouteTypes:withCompletionBlock:
travelTimeFrom:to:arrivalDate:withRouteType:withCompletionBlock:
mapItemForCurrentLocation
placemark
addressDictionary
initWithCoordinate:addressDictionary:
initWithPlacemark:
setDestination:
setArrivalDate:
initWithRequest:
expectedTravelTime
setStart:
setEnd:
setDuration:
setRoute:
_updateLocation:withMapItem:forRoute:withCompletionBlock:
calculateETAWithCompletionHandler:
postalAddressWithAddressBookDictionaryRepresentation:
stringFromPostalAddress:style:
setPlacemark:
placemarkForLocation:withCompletionBlock:
placemarkForAddress:withCompletionBlock:
geocodeAddressString:completionHandler:
confidence
initWithLatitude:longitude:
fetchLocationsOfInterestAssociatedToIdentifier:withHandler:
defaultManager
geocodeAddress:withCompletionBlock:
estimateGeolocationFromHistoricDevicePositionAtLocation:withCompletionBlock:
controlCharacterSet
invert
whitespaceAndNewlineCharacterSet
formUnionWithCharacterSet:
componentsSeparatedByCharactersInSet:
setGeoLocation:
region
locationWithPlacemark:
_stringByStrippingControlCharactersFromString:
_handle
placemarkWithGEOMapItem:
_place
sharedService
handleForMapItem:
geoLocation
_clearGeoLocationCache
radiusRaw
setRadiusRaw:
stringByReplacingOccurrencesOfString:withString:
stringByRemovingPercentEncoding
resetBackingLocationWithBackingLocation:
isImprecise
setImprecise:
isEqualToData:
setRouteType:
localizedStringForLabel:
capitalizedString
contactType
contactIdentifierIsMe:
locationWithMapItem:
locationWithGEOMapItem:
displayLabelForContact:unlocalizedLabel:
cacheKey
geoURLString
_imprecise
_predictedLOI
imprecise
TB,N,GisImprecise,V_imprecise
T@"EKPredictedLocationOfInterest",&,N,V_predictedLOI
prediction
TB,R,N,GisPrediction
T@"CLLocation",&,N
entityID
initWithEntityType:rowID:temporary:
scheme
path
characterAtIndex:
substringFromIndex:
pathComponents
decodeIntForKey:
decodeBoolForKey:
encodeInt:forKey:
encodeBool:forKey:
initWithEntityType:entityID:generation:
entityName
EKObjectIDsFromData:range:
bytes
objectIDWithURL:
CADObjectIDsFromEKObjectIDs:withGeneration:
EKObjectIDsFromCADObjectIDs:
initWithDictionaryRepresentation:
dictionaryRepresentation
_temporary
_entityType
_rowID
T@"CADObjectID",R,N
_occurrenceCount
T@"NSDate",R,N,V_endDate
TQ,R,N,V_occurrenceCount
setSequenceNumber:
setHasNotes:
setHasRecurrenceRules:
setHasAttendees:
initWithEntityName:toMany:inversePropertyNames:ownsRelated:
inversePropertyIsApplicable
_entityName
_toMany
_ownsRelated
_inversePropertyNames
_inversePropertyIsApplicable
T@?,C,N,V_inversePropertyIsApplicable
decodeObjectOfClasses:forKey:
getResourceValue:forKey:error:
createTempDestinationURLWithExtension:
archiveURLToFile:toFile:createPKZipArchive:
setURLForPendingFileCopy:
_copyFileAtURLToTemporaryDirectory:
setScheme:
URLByAppendingPathComponent:
URLByAppendingPathExtension:
pathExtension
dataWithContentsOfURL:options:error:
writeToFile:atomically:
URLForPendingFileCopy
fileName
initWithFilepath:
localURL
compareFileNames:
T@"NSNumber",&,N
_urlForMapItemHandles:options:
_locationStringForStructuredLocation:withTitle:
_urlForLocation:address:label:options:
hasPrefix:
CalContainsSubstring:
eventForUID:occurrenceDate:checkValid:
geocodeLocationString:withCompletionBlock:
_mapItemFromHandle:completionHandler:
mapsURLForLocation:onEvent:hasMapItemLaunchOptionFromTimeToLeaveNotification:
geocodeEventIfNeeded:
fetchEventChangesInStore:resultHandler:
fetchEventChangesInSource:resultHandler:
fetchEventChangesInCalendar:resultHandler:
initWithEventStore:limitedToSource:visibilityChangedCallback:queue:activate:
_defaultQueue
visibilityChangedNotificationName
visibilityChangedCallback
initWithNotificationName:callback:queue:
setActive:
notificationListener
_calendarsThatAreVisible:filteredByIdentity:
limitedToSource
_deselectedCalendarIdentifiers
initWithEventStore:visibilityChangedCallback:queue:
initWithEventStore:limitedToSource:visibilityChangedCallback:queue:
visibleCalendars
invisibleCalendars
visibleCalendarsForAllIdentities
invisibleCalendarsForAllIdentities
initWithEventStore:visibilityChangedCallback:
initWithEventStore:limitedToSource:visibilityChangedCallback:
setInvisibleCalendars:
setLimitedToSource:
_active
_invisibleCalendars
_limitedToSource
_visibilityChangedCallback
_notificationListener
T@?,R,N,V_visibilityChangedCallback
T@"CalDarwinNotificationListener",R,N,V_notificationListener
TB,V_active
T@"NSArray",&,N,V_invisibleCalendars
T@"EKSource",&,N,V_limitedToSource
createAttachment
urlOnDisk
setUrlOnDisk:
contentTypeFromServer
setContentTypeFromServer:
_urlOnDisk
_contentTypeFromServer
T@"NSURL",&,N,V_urlOnDisk
T@"NSString",&,N,V_contentTypeFromServer
weakEventStore
unsafeRawPointer
_unsafeRawPointer
_weakEventStore
T^v,R,N
initWithOptions:path:
initWithOptions:path:allowDelegateSources:
initWithEKOptions:path:changeTrackingClientId:enablePropertyModificationLogging:allowDelegateSources:
ekEventStoreInitOptionsFromCalDatabaseInitOptions:
processInfo
processName
setValidator:
_accessStatusChanged
calDatabaseInitOptionsFromEKEventStoreInitOptions:
setDatabaseInitOptions:
setChangeTrackingClientId:
setEnablePropertyModificationLogging:
setDatabaseDirectory:
setAllowDelegateSources:
hashTableWithOptions:
eventStoreChangedDistributedNotificationName
_requestAccessForEntityType:
currentProcessIsCalendarDaemon
currentProcessIsDataAccess
currentProcessHasContactsUIEntitlement
_skipTCCAccessCheck
authorizationStatusForEntityType:
requestAccessToEntityType:completion:
databaseDirectory
currentProcessHasBirthdayModificationEntitlement
setSourceAccountManagement:withBundleID:
setManagement:
setManagementBundleIdentifier:
setUnitTesting:
setSpotlightTesting:
_handleExternalDatabaseChangeNotification:synchronously:
_databaseChangedExternally:processSynchronously:
_defaultCalendarChangedExternally
_defaultAlarmChangedExternally
postNotificationName:object:
databaseInitOptions
_postEventStoreChangedNotificationWithChangeType:changedObjectIDs:
setRestoreGenerationChangedAndGetPreviousValue:
_resetAndNotifyAfterDatabaseRestoreGenerationChanged
database
_removeCachedCalendarWithCADID:
_clearCachedSources
_clearCachedConstraintsForSourceWithCADObjectID:
_unregisterObject:
_detachObject:
objectsForKeys:notFoundMarker:
_clearCachedCalendars
_cacheCalendarWithCADObjectID:withDefaultLoadedPropertyValues:forKeys:
_validateCADObjectIDs:completion:
_modifiedObjectIdentifiersForChangedObjectIDs:
calendarSourcesAndDefaultsQueue
setRestoreGenerationChanged:
objectWithObjectID:
_cacheSourceWithCADObjectID:withDefaultLoadedPropertyValues:forKeys:
_loadSourcesIfNeeded
_sourceWithID:
publicObjectWithFetchedObjectID:
_clearAllCaches
_localSourceWithEnableIfNeeded:
stampedCopyWithGeneration:
_loadCalendarsIfNeeded
_calendar:supportsEntityType:
restoreGeneration
shouldSaveCalendarAsEventCalendar:
_saveCalendar:commit:error:
shouldSaveCalendarAsReminderCalendar:
saveCalendar:error:
canModifyCalendarDatabase
_removeCalendar:commit:error:
removeCalendar:error:
eventWithIdentifier:
calendarItemWithIdentifier:
rangeOfString:
_eventWithEventIdentifier:
_eventWithRecurrenceIdentifier:
validatedNonDeletedPersistentObjectWithObjectID:
validatedNonDeletedPublicObjectWithObjectID:
_eventWithURI:checkValid:
_parseURI:expectedScheme:identifier:options:
closestCachedOccurrenceToDate:forEventUID:
initWithEntityType:entityID:
eventWithUniqueId:occurrenceDate:
_saveEvent:span:commit:error:
_isRegisteredObject:
_removeEvent:span:commit:error:
setInvitationStatus:forEvents:error:
initWithContentsOfFile:
_importEventsWithExternalIDs:fromICSData:intoCalendarsWithIDs:options:batchSize:
ICSDataForCalendarItems:options:
calendarWithCADID:
defaultCalendarForNewEventsInDelegateSource:
setDefaultCalendar:forNewEventsInDelegateSource:
defaultCalendarForNewReminders
saveReminder:commit:error:
saveReminder:error:
removeReminder:commit:error:
removeReminder:error:
reminderWithUniqueId:
reminderWithIdentifier:
remindersWithExternalIdentifier:
initWithExternalIdentifier:entityType:
setCalendars:
_calendarItemsMatchingPredicate:
calendarItemsWithExternalIdentifier:inCalendars:
_calendarItemsWithExternalIdentifier:inCalendars:entityTypes:
remindersMatchingPredicate:
_validateReminderPredicate:
fetchRemindersMatchingPredicate:completion:
predicateForRemindersInCalendars:
predicateForCalendarStoreForRemindersInCalendars:
predicateWithCalendars:
setShouldLoadDefaultProperties:
setDefaultPropertiesToLoad:
predicateForIncompleteRemindersWithDueDateStarting:ending:calendars:
predicateForCompletedRemindersWithCompletionDateStarting:ending:calendars:
_predicateForRemindersWithDate:useAsCompletionDate:calendars:limitToCompletedOrIncomplete:completed:includeDatesBefore:sortOrder:preloadProperties:maxResults:
calendarDateForDay
calendarDateByAddingDays:
setUseCompletionDateAsAlternate:
setLimitToCompletedOrIncomplete:
setDueAfter:
setDueBefore:
setSortOrder:
setMaxResults:
_predicateForRemindersWithDate:useAsCompletionDate:calendars:limitToCompletedOrIncomplete:completed:includeDatesBefore:sortOrder:preloadProperties:
predicateForRemindersWithTitle:listTitle:limitToCompletedOrIncomplete:completed:dueAfter:dueBefore:searchTerm:sortOrder:maxResults:
setListTitle:
setSearchTerm:
closestCachedOccurrenceToDate:forEventUID:prefersForwardSearch:
sharedCalendarInvitationsForEntityTypes:
_populateCalendarsByIdentifierIfNeeded
_eventCalendarWithIdentifier:
scheduledTaskCacheFetchTasksOnDay:maxResults:
predicateForScheduledRemindersInCalendars:onDay:
fetchingSharedCalendarInvitationsDisallowed
setFetchingSharedCalendarInvitationsDisallowed:
respondToSharedCalendarInvite:forCalendarWithID:accountID:queue:completionBlock:
removeResourceChanges:error:
resourceChangesForEntityTypes:
eventNotificationsAfterDate:
eventNotificationsAfterDate:filteredByShowsNotificationsFlag:earliestExpiringNotification:
initWithTimeIntervalSinceReferenceDate:
removeInviteReplyNotifications:error:
updateFolderListForAccountID:andDataclasses:isUserRequested:
_shouldRefreshSource:
_refreshDASource:isUserRequested:
refreshSourcesIfNecessary:
_refreshFolderListForSource:isUserRequested:
refreshFolderListsIfNecessary:
setByAddingObjectsFromSet:
_registerObjectImmediate:
makeObjectsPerformSelector:withObject:
classForEntityName:
_addFetchedObjectWithID:
weakObjectsHashTable
_forgetRegisteredObjects
_commitObjectsWithIdentifiers:error:
_filteredObjectsWithIdentifiers:fromObjects:
_markObjectsWithIdentifiersAsCommitted:
_clearEventsNeedingGeocodingWithCommittedObjects:
_iMIPScheduledEvent:attendeesDeleted:
shouldSendEmailForEvent:removedAttendees:
initWithEvent:andAttendees:
shouldSendEmailForEvent:withDiff:
initWithEvent:withDiff:
objectIDsNotSendingNotifications
_removeCachedCalendarFromSource:
_fetchAndClearEventsNeedingGeocoding:withCommittedObjects:
sendEmail
_filteredArrayWithIdentifiers:fromObjects:
_validateEventPredicate:
predicateForEventsWithStartDate:endDate:calendars:prefetchHint:exclusionOptions:
_addDaysSpannedByEvent:toCountedSet:inRange:withNSCalendar:
fetchEventsMatchingPredicate:resultHandler:
intersectsRangeWithStartDate:endDate:allowSinglePointIntersection:
earlierDate:
setMinute:
enumerateDatesStartingAfterDate:matchingComponents:options:usingBlock:
predicateForEventsWithStartDate:endDate:calendarIdentifiers:exclusionOptions:
_nextEventWithFetchBlock:steps:
predicateWithStartDate:endDate:timeZone:calendars:loadDefaultProperties:
predicateWithStartDate:endDate:timeZone:eventUUID:calendars:
setExcludeTimedEvents:
setExcludeAllDayEvents:
setExcludeDeclined:
setExcludeProposed:
setExcludeDeclinedUnlessProposed:
predicateForEventsWithStartDate:endDate:calendarIdentifiers:prefetchHint:exclusionOptions:
initWithTimeZone:startDate:endDate:title:location:notes:participants:limit:
predicate
predicateWithLimit:
predicateWithCalendarIDs:
travelEligibleEventsInCalendars:startDate:endDate:
predicateForPotentialTravelEventsInCalendars:startDate:endDate:
initWithCalendarIDs:startDate:endDate:
setStartDateRestrictionThreshold:
predicateWithStartDate:title:calendars:
initWithSearchString:timeZone:
initWithSearchString:startDate:timeZone:
predicateForAllSuggestedEvents
initWithOpaqueKey:
initWithExtractionGroupIdentifier:
predicateForEventsWithStartDate:endDate:calendars:
initWithCalendarIDs:startDate:endDate:contacts:
initWithEntityType:filters:calendar:
initWithProperty:comparison:integerValue:
initWithProperty:comparison:stringValue:
initWithEntityType:filters:source:
initWithProperty:comparison:dateValue:
initWithFilters:operation:
initWithPredicate:limitWithStartDate:endDate:mustStartInInterval:
initWithEntityType:filters:calendars:
initWithURL:limit:
registerForDetailedChangeTrackingInSource:error:
_processChangedObjectIDsWithToken:errorCode:changesTruncated:latestToken:changeData:insertCount:updateCount:deleteCount:resultHandler:
constraintsCacheQueue
_cachedConstraints
_fetchConstraintsForSourceWithCADObjectID:
set_cachedConstraints:
getBytes:length:
notificationCollectionCacheQueue
_cachedNotificationCollections
_fetchPersistentNotificationCollectionForSourceWithCADObjectID:
set_cachedNotificationCollections:
beginCalDAVServerSimulationWithHostname:
endCalDAVServerSimulationWithHostname:
createDirectoryAtURL:withIntermediateDirectories:attributes:error:
initWithURL:
URLByDeletingLastPathComponent
reminderStoreContainerTokenProvider
setReminderStoreContainerTokenProvider:
setDenyAccessToEvents:
setDenyAccessToReminders:
_isConfirmedSuggestedEvent:uniqueKey:
T@?,C
restoreGenerationChanged
setFetchingSharedCalendarInvitationsDisallowedAndGetPreviousValue:
initWithAccessToDelegateSources
initWithOptions:path:changeTrackingClientId:enablePropertyModificationLogging:allowDelegateSources:
databasePath
setSourceAccountManagement:
_setIsUnitTesting:
_setIsSpotlightTesting:
_isUnitTesting
_simulateDaemonCrashForUnitTests
changesSinceSequenceNumber:
reminderStoreChanged
handleExternalDatabaseChangeNotification:
eventStoreIdentifier
sourcesEnabledForEntityType:
_deletableSources
getSubscribedCalendarsSourceCreateIfNeededWithError:
delegateSources
delegateSourcesForSource:
parentSourceForDelegateSource:
fetchGrantedDelegatesForSource:results:
updateGrantedDelegate:action:source:completion:
localSource
localSourceEnableIfNeeded
localSubscribedCalendarSource
localBirthdayCalendarSource
sourceWithExternalID:
saveSource:commit:error:
removeSource:commit:error:
hideCalendarsFromNotificationCenter:error:
_deletableCalendars
readWriteCalendarCountForEntityType:
deleteCalendar:forEntityType:error:
eventsWithIdentifiers:
eventWithUniqueIdentifier:
eventWithExternalURI:
_eventOccurrenceWithURI:
eventForUID:occurrenceDate:
allEventsWithUniqueId:occurrenceDate:
saveEvent:span:error:
removeEvent:span:error:
setInvitationStatus:forEvent:error:
importICS:intoCalendar:options:
importEventsWithExternalIDs:fromICSData:intoCalendars:options:batchSize:
ICSDataForCalendarItems:preventLineFolding:
copyCGColorForNewCalendar
defaultLocalCalendar
acquireDefaultCalendarForNewEvents
setDefaultCalendarForNewEvents:
acquireDefaultCalendarForNewReminders
_removeReminder:commit:error:
reminderWithExternalURI:
calendarItemsWithUniqueIdentifier:inCalendar:
calendarItemsWithExternalIdentifier:
remindersWithExternalIdentifier:inCalendars:
_remindersMatchingPredicate:
countOfRemindersMatchingPredicate:
reminderObjectIDsMatchingPredicate:
predicateForRemindersInCalendars:preloadProperties:
predicateForPreloadedIncompleteRemindersWithDueDate:calendars:sortOrder:preloadProperties:
predicateForPreloadedIncompleteRemindersWithDueDate:calendars:sortOrder:preloadProperties:maxResults:
predicateForPreloadedCompletedRemindersWithDueDate:calendars:sortOrder:preloadProperties:
predicateForRemindersWithTitle:listTitle:limitToCompletedOrIncomplete:completed:dueAfter:dueBefore:searchTerm:sortOrder:
fetchProperties:forReminders:
eventWithUUID:
doEvents:haveOccurrencesAfterDate:
calendarWithUniqueID:
calendarWithExternalID:
calendarWithExternalURI:
countOfRemindersWithContactIdentifier:
remindersWithContactIdentifier:
occurrenceCacheOccurrencesAreBeingGenerated
occurrenceCacheGetOccurrencesForCalendars:onDay:
occurrenceCacheGetOccurrencesForCalendars:
scheduledTaskCacheFetchDaysAndTaskCounts
scheduledTaskCacheFetchTasksOnDay:
rebuildOccurrenceCache
birthdayCalendarEnabled
setBirthdayCalendarEnabled:
suggestedEventCalendar
insertSuggestedEventCalendar
removeSuggestedEventCalendar
confirmSuggestedEvent:
acceptSuggestedEvent:
deleteSuggestedEvent:
_SGSuggestionsServiceClass
naturalLanguageSuggestedEventCalendar
unacknowledgedEventCount
notifiableEventCount
saveNotification:commit:error:
saveNotificationCollection:commit:error:
respondToSharedCalendarInvitation:withStatus:
markResourceChangeAlertedAndSave:error:
removeResourceChange:error:
removeResourceChangesForCalendarItem:error:
eventNotifications
eventNotificationCountForSource:excludingDelegateSources:filteredByShowsNotificationsFlag:excludeRowIDs:
acknowledgeNotifications:error:
inboxRepliedSectionItems
attachmentWithUUID:
saveAttachment:commit:error:
refreshSourcesIfNecessary
refreshSource:userRequested:
_reregisterObject:oldID:
_setNeedsCommitForRemoteChanges
commitObjects:error:
eventObjectIDsMatchingPredicate:
fetchObjectsMatchingPredicate:completion:
objectsMatchingPredicate:
fetchEventCountsInRange:inCalendars:exclusionOptions:completion:
cancelFetchRequest:
nextEventWithCalendarIdentifiers:exclusionOptions:
alarmWithUUID:
alarmWithExternalID:
alarmOccurrencesBetweenStartDate:endDate:inCalendars:completion:
locationBasedAlarmOccurrencesWithCompletion:
vehicleTriggerAlarmOccurrencesWithCompletion:
predicateForEventsWithStartDate:endDate:uniqueID:calendars:
predicateForAssistantEventSearchWithTimeZone:startDate:endDate:title:location:notes:participants:calendars:limit:
predicateForNotifiableEvents
predicateForNotificationCenterVisibleEvents
predicateForUnacknowledgedEvents
predicateForUnalertedEvents
predicateForUpcomingEventsWithLimit:
predicateForMasterEventsInCalendars:
hasImmediatelyEligibleTravelEvents
predicateForUpNextEventsInCalendars:startDate:endDate:startDateRestrictionThreshold:
predicateForEventsWithStartDate:title:source:
predicateForNaturalLanguageSuggestedEventsWithSearchString:startDate:
predicateForEventsCreatedFromSuggestion
predicateForEventCreatedFromSuggestionWithOpaqueKey:
predicateForEventsCreatedFromSuggestionWithExtractionGroupIdentifier:
predicateForEventsWithStartDate:endDate:calendars:matchingContacts:
predicateForCalendarItemsOfType:inCalendar:
predicateForMasterEventsWithExternalTrackingStatusInCalendar:
predicateForCalendarItemsOfType:withUniqueIdentifier:inCalendar:
predicateForCalendarItemsOfType:withUniqueIdentifier:inSource:
predicateForCalendarItemsOfType:withExternalID:inCalendar:
predicateForCalendarItemsOfType:withExternalID:inSource:
predicateForMasterEventsWithStartDate:title:inCalendar:
predicateForMasterEventsWithOccurrencesWithStartDate:endDate:inCalendar:
predicateForMasterEventsWithInvitationsAndOccurrencesAfter:inCalendar:
predicateForNonrecurringEventsWithStartDate:endDate:calendars:
predicateForIncompleteRemindersAndRemindersCompletedAfter:inCalendar:
timeToLeaveLocationAuthorizationStatus
predicateForEventsWithConferenceURL:limit:
registerForDetailedChangeTracking:
unregisterForDetailedChangeTracking:
fetchChangedObjectIDsSinceToken:resultHandler:
changedObjectIDsSinceToken:resultHandler:
markChangedObjectIDsConsumedUpToToken:
markIndividualChangesConsumed:error:
clearSuperfluousChanges
purgeChangelog
cacheValidationStatusForAddress:status:
addressValidationStatus:
pushSpotlightUpdatesForCalendarItemUUIDs:
waitForSpotlightUpdates
notificationCollectionForSource:
fetchStorageUsage
setCachedEKSourceConstraintObject:forKey:
postSyntheticRouteHypothesis:forEventWithExternalURL:
endCalDAVServerSimulation:
backupDatabaseToDestination:withFormat:error:
restoreDatabaseFromBackup:withFormat:error:
setDefaultCalendarForNewReminders:
insertedObjects
setInsertedObjects:
deletedObjects
setDeletedObjects:
updatedObjects
setUpdatedObjects:
objectsPendingSave
setObjectsPendingSave:
setObjectIDsNotSendingNotifications:
needsCommitForRemoteChanges
setNeedsCommitForRemoteChanges:
setDatabase:
lastDatabaseNotificationTimestamp
setLastDatabaseNotificationTimestamp:
registeredQueue
unsavedChangesQueue
dbChangedQueue
registeredObjects
setRegisteredObjects:
inboxRepliedSectionHasContent
_birthdaySourceID
_defaultCalendarsForNewEventsIDBySourceID
_suggestedEventCalendarID
_naturalLanguageSuggestedEventCalendarID
_subscribedCalendarsSourceID
_calendarsByIdentifier
_cachedValidatedAddresses
_objectsPendingCommit
_eventsNeedsGeocoding
_defaultTimedAlarmOffset
_defaultAllDayAlarmOffset
_allowsBirthdayCalendarModifications
_hasAccessToEvents
_hasAccessToReminders
_accessDetermined
_reminderSourceMapLock
_isIgnoringExternalChanges
_flagsLock
_needsCommitForRemoteChanges
_inboxRepliedSectionHasContent
_insertedObjects
_deletedObjects
_updatedObjects
_objectsPendingSave
_objectIDsNotSendingNotifications
_database
_lastDatabaseNotificationTimestamp
_calendarSourcesAndDefaultsQueue
_registeredQueue
_unsavedChangesQueue
_dbChangedQueue
_constraintsCacheQueue
_notificationCollectionCacheQueue
__cachedConstraints
__cachedNotificationCollections
_reminderSourceIDToEventSourceIDMapping
_eventSourceIDToReminderSourceIDMapping
_registeredObjects
T@"NSHashTable",&,N,V_insertedObjects
T@"NSMutableSet",&,N,V_deletedObjects
T@"NSMutableSet",&,N,V_updatedObjects
T@"NSMutableSet",&,N,V_objectsPendingSave
T@"NSMutableSet",&,N,V_objectIDsNotSendingNotifications
TB,N,V_needsCommitForRemoteChanges
T@"EKDaemonConnection",&,N,V_database
TQ,N,V_lastDatabaseNotificationTimestamp
T@"NSObject<OS_dispatch_queue>",R,N,V_calendarSourcesAndDefaultsQueue
T@"NSObject<OS_dispatch_queue>",R,N,V_registeredQueue
T@"NSObject<OS_dispatch_queue>",R,N,V_unsavedChangesQueue
T@"NSObject<OS_dispatch_queue>",R,N,V_dbChangedQueue
T@"NSObject<OS_dispatch_queue>",R,N,V_constraintsCacheQueue
T@"NSObject<OS_dispatch_queue>",R,N,V_notificationCollectionCacheQueue
T@"EKDataProtectionObserver",&,N,V_dataProtectionObserver
T@"NSMutableDictionary",&,N,V__cachedConstraints
T@"NSMutableDictionary",&,N,V__cachedNotificationCollections
T@"EKReminderStore",R,N,V_reminderStore
T@"NSDictionary",&,N,V_reminderSourceIDToEventSourceIDMapping
T@"NSDictionary",&,N,V_eventSourceIDToReminderSourceIDMapping
T^{os_unfair_lock_s=I},R,N
T@"NSMutableDictionary",&,N,V_registeredObjects
TB,R,N,V_inboxRepliedSectionHasContent
T@"NSString",R,C,N
T@"EKAlarm",R,N
T@"EKDaemonConnection",R
_propertyWithFlagDidChange:
T@"EKCalendar",R,&,N
T@"EKCalendarItem",R,&,N
T@"NSURL",R,C,N
TI,R,N
T@"NSNumber",R,N
calendarItemPropertyName
fetchSourceChangesInStore:resultHandler:
bundleIdentifier
parentAppBundleIdentifierForExtensionBundleIdentifier:
applicationRecordForURL:completionHandler:
applicationRecordForURL:
_applicationRecordFromAppLink:appLinkError:orCustomScheme:
getAppLinkWithURL:completionHandler:
appLinksWithURL:limit:error:
targetApplicationRecord
initWithBundleIdentifier:allowPlaceholder:error:
initWithURL:error:
bundleRecord
initWithBundleIdentifier:error:
containingBundleRecord
isTUConversationLink:
_findExtensionIdentifierForURL:completionHandler:
conferenceImageSize
virtualConference:likelyCameFromRoomTypes:completionHandler:
synchronousAppTitleOnlyForURL:
initWithName:emailAddress:address:isCurrentUser:
organizerWithName:emailAddress:address:isCurrentUser:
T@"NSString",&,D,N
_conflictedParticipants
T@"NSArray",&,N,V_conflictedParticipants
fetchContactChangesInStore:resultHandler:
fetchContactChangesInSource:resultHandler:
fetchContactChangesInCalendar:resultHandler:
initWithName:emailAddress:address:
initWithEmailAddress:name:
initWithAddress:name:
lastModified
icsMethod
iCalendarDocumentWithMethod:
emailsFromAttendees:
emailSubject
myEmailAddress
setMethod:
setX_calendarserver_access:
initWithYear:month:day:hour:minute:second:timeZone:
setDtstamp:
setAttendee:
URLForMail:
myShortDisplayName
setCn:
setRsvp:
sequence
setSequence:
setX_wr_rsvpneeded:
emailBody
emailAttachmentName
attachmentData
T@"EKEvent",&,V_event
localizedLongDate
localizedShortTime
_attachmentData
remAccount
_sourceIdentifier
_remAccount
T@"NSString",R,N,V_sourceIdentifier
T@"REMAccount",R,N,V_remAccount
credentialsWithUsername:password:
username
password
_username
_password
T@"NSString",R,N,V_username
T@"NSString",R,N,V_password
reminderSource
_reminderSource
T@"EKFrozenReminderSource",&,V_reminderSource
initWithConference:range:
_conference
_range
T{_NSRange=QQ},R,N,V_range
T@"EKVirtualConference",R,N,V_conference
_ekVirtualConferenceFromCalVirtualConference:
blockTitle
_calJoinMethodsFromEKJoinMethods:
_calSourceFromEKSource:
initWithTitle:joinMethods:conferenceDetails:source:isWritable:
_ekJoinMethodsFromCalJoinMethods:
_ekSourceFromCalSource:
initWithTitle:URL:isBroadcast:
_calJoinMethodFromEKJoinMethod:
CalMap:
_ekJoinMethodFromCalJoinMethod:
ekDeserializationResultFromCalDeserializationResult:
calVirtualConferenceFromEKVirtualConference:
serializeConference:serializationBlockTitle:
setIsAbsolute:
_isAbsolute
_relativeOffset
_absoluteDate
Td,N,V_relativeOffset
T@"NSDate",C,N,V_absoluteDate
TB,N,V_isAbsolute
_updateSpecifier
_clearArrays
_parseSpecifierIfNeeded
_appendDaysOfTheWeek:toSpecifier:
_appendIndexList:toSpecifier:propertyKey:
_parseDaysOfWeek:range:
_parseIndexList:range:
stringWithCharacters:length:
_specifier
_dirty
_parsed
fetchExceptionDateChangesInStore:resultHandler:
fetchExceptionDateChangesInSource:resultHandler:
fetchExceptionDateChangesInCalendar:resultHandler:
bundleWithIdentifier:
CalAutoCommentPrefix
base64EncodedDataWithOptions:
setTotalOccurrencesInSeries:
setTotalConflictsInSeries:
setConflictPeriodForSeries:
setConflictingDates:
setConflictingEvents:
setNeedsActionEvents:
setTotalConflictingEvents:
setTotalNeedsActionEvents:
totalConflictsInSeries
totalOccurrencesInSeries
_dateRangeToScanForConflictsForEvent:dateForNow:
_maxRangeLengthForRule:
dateRangeToScanForConflictsForEvent:
calendarIdentifiersToScanForConflictsForEvent:
initWithConflictingDates:conflictingEvents:needsActionEvents:totalOccurrencesInSeries:conflictPeriodForSeries:
conflictingDates
conflictingEvents
needsActionEvents
totalConflictingEvents
totalNeedsActionEvents
conflictPeriodForSeries
_conflictingDates
_conflictingEvents
_needsActionEvents
_totalOccurrencesInSeries
_totalConflictsInSeries
_totalConflictingEvents
_totalNeedsActionEvents
_conflictPeriodForSeries
T@"NSArray",&,V_conflictingDates
T@"NSArray",&,V_conflictingEvents
T@"NSArray",&,V_needsActionEvents
TQ,V_totalOccurrencesInSeries
TQ,V_totalConflictsInSeries
TQ,V_totalConflictingEvents
TQ,V_totalNeedsActionEvents
T@"CalDateRange",&,V_conflictPeriodForSeries
setSpan:
_creationDate
_span
T@"NSDate",&,N,V_creationDate
T@"EKAvailabilitySpan",&,N,V_span
_updateStateForDisabledOrCollapsedItemWithUID:delegateID:state:withKey:withNotification:
_disabledOrCollapsedItemsForDelegateID:withKey:
disabledCalendarsForDelegateWithUID:
_keyForDelegateID:
removeObject:inRange:
_displayOrderForSourceWithIdentifier:key:
_updateDisplayOrderForSources:key:
indexOfObject:
calendarPreferences
sharedCalendarNotificationsDisabled
setSharedCalendarNotificationsDisabled:
invitationNotificationsDisabled
setInvitationNotificationsDisabled:
showDeclinedEventsEnabled
setShowDeclinedEventsEnabled:
timeToLeaveEnabled
setTimeToLeaveEnabled:
updateCheckedStateForCalendarWithUID:delegateID:state:
checkedStateForCalendarWithUID:delegateID:
disabledCalendarsForMainWindow
updateExpandedStateForTopLevelNodeWithUID:state:
expandedStateForTopLevelNodeWithUID:
_checkedStateForDisabledOrCollapsedItemWithUID:delegateID:withKey:
displayOrderForLocalGroupWithSourceIdentifier:
updateDisplayOrderForLocalGroupsWithSourceIdentifiers:
displayOrderForAccounts
displayOrderForAccountWithSourceIdentifier:
updateDisplayOrderForAccountsWithSourceIdentifiers:
calPreferences
setCalPreferences:
_calPreferences
T@"CalPreferences",&,V_calPreferences
T@"NSMutableArray",&,N,V_conflictedParticipants
currentProcessHasBooleanEntitlement:
get_suggestedLocationsTestMode
_mockLocationForEvent:
predictedLocationOfInterestForEventTitle:eventLocation:calendarIdentifier:timeout:error:
geoMapItemHandle
horizontalUncertainty
resolveMapItemLocallyFromHandle:completionHandler:
userInteractionWithPredictedLocationOfInterest:interaction:feedback:
ticketForReverseGeocodeCoordinate:shiftLocationsIfNeeded:traits:
geoAddress
structuredAddress
submitWithHandler:networkActivity:
enumerateKeysAndObjectsWithOptions:usingBlock:
predicateWithFormat:
userInteractionWithPredictedLocationOfInterest:interaction:
calendarWithRandomUUID
T@"EKPersistentSource",&,D,N
colorDisplayOnly
TB,D,N,GisColorDisplayOnly
T@"NSSet",C,D,N
publishedURL
published
TB,D,N,GisPublished
@16@0:8
v24@0:8@16
v16@0:8
@"NSSet"
#16@0:8
@40@0:8q16Q24@32
q20@0:8i16
i24@0:8q16
@24@0:8q16
@24@0:8Q16
@32@0:8@16B24B28
q24@0:8@16
@24@0:8@16
@32@0:8@16@24
@24@0:8^{_NSZone=}16
@88@0:8q16q24@32@40@48@56@64@72@80
@40@0:8q16q24@32
q16@0:8
v24@0:8q16
v24@0:8Q16
Q16@0:8
i16@0:8
v20@0:8i16
B16@0:8
B24@0:8@16
@24@0:8B16B20
@28@0:8@16B24
B40@0:8@16@24@32
@"EKRecurrenceHelper"
@36@0:8{?=IIb1b1b1b1b1b1b1b1b1b1b1b1b1b1b1b1b1b1b1b1b1b1b1b1b1b1b1b1b1b1b1b1b1b1b1b1b1b1b1b1b1b1b1b1b1b1b1b1b1b1b1b1b1b1b1b1b1b1b1b1b1b1b1b1b1b1b1b1b1b1b1b1b1b1}16
v20@0:8B16
{?="maxAlarmsAllowed"I"maxRecurrencesAllowed"I"supportsAlarmTriggerIntervals"b1"supportsAlarmTriggerDates"b1"supportsAlarmsTriggeringAfterStartDate"b1"snoozeAlarmRequiresDetach"b1"organizerCanSeeAttendeeStatuses"b1"inviteesCanSeeAttendeeStatuses"b1"statusesAreAccurate"b1"supportsIncomingInvitations"b1"supportsOutgoingInvitations"b1"requiresOutgoingInvitationsInDefaultCalendar"b1"supportsInvitationModifications"b1"supportsEventForwarding"b1"supportsResponseComments"b1"deliverySourceOrExternalIDRequiredForResponse"b1"proposedStatusRequiredForResponse"b1"declinedStatusChangeRequiresNoPendingStatus"b1"eventDurationConstrainedToRecurrenceInterval"b1"alarmTriggerIntervalConstrainedToRecurrenceInterval"b1"occurrencesMustOccurOnSeparateDays"b1"futureStartDateLimitedToOccurrenceCacheBounds"b1"supportsRecurrencesOnDetachedEvents"b1"recurrencesShouldPinToMonthDays"b1"requiresAttendeeSearchInSingleAccount"b1"mustAcknowledgeMasterEvent"b1"canSetAvailability"b1"eventAvailabilityLimited"b1"requiresMSFormattedUID"b1"shouldCancelDeletedEvents"b1"shouldDeclineDeletedInvitations"b1"supportsStructuredLocations"b1"supportsReminderActions"b1"supportsReminderLocations"b1"supportsAlarmProximity"b1"allowsCalendarAddDeleteModify"b1"allowsTasks"b1"allowsEvents"b1"supportsURLField"b1"supportsAllDayDueDates"b1"supportsSharedCalendars"b1"isFacebook"b1"recurrenceSeriesMustIncludeMoreThanFirstOccurrence"b1"supportsPrivateEvents"b1"prohibitsPrivateEventsWithAttendees"b1"supportsAvailabilityRequests"b1"supportsIgnoringEventsInAvailabilityRequests"b1"supportsLocationDirectorySearches"b1"requiresSamePrivacyLevelAcrossRecurrenceSeries"b1"supportsInboxAvailability"b1"prohibitsMultipleMonthsInYearlyRecurrence"b1"prohibitsMultipleDaysInMonthlyRecurrence"b1"prohibitsYearlyRecurrenceInterval"b1"requiresOccurrencesConformToRecurrenceRule"b1"prohibitsDetachmentOnCommentChange"b1"allowsProposeNewTime"b1"prohibitsICSImport"b1"supportsAutoGeocodingStructuredLocations"b1"supportsJunkReporting"b1"supportsPhoneNumbers"b1"attendeesUseDeletedByOrganizerStatus"b1"prohibitsSlicingEventsWithAttendees"b1"supportsSubscribedCalendars"b1"supportsAttachments"b1"supportsDelegation"b1"supportsDelegateEnumeration"b1"supportsFloatingTimeZone"b1"prohibitsUsingEventOrganizerEmailWhenComposingMail"b1"supportsRecurrenceSplit"b1"requiresOpeningAttachmentAsLink"b1"shouldUseDeleteAndAddInsteadOfMoveBetweenCalendars"b1"supportsInvitationModificationsWithoutNotification"b1"supportsManagedSubscribedCalendars"b1"supportsSubscriptionMirroring"b1"supportsParticipantRoles"b1"supportsPush"b1}
B32@0:8@16@24
q24@0:8q16
v32@0:8d16Q24
@48@0:8@16@24@32@40
B48@0:8@16@24@32^@40
@64@0:8@16@24@32@40@?48@?56
@40@0:8@16@24@32
v40@0:8@16@?24@32
@"NSString"
@"NSObject<OS_dispatch_queue>"
@"NSMutableDictionary"
@24@0:8:16
@32@0:8:16@24
@40@0:8:16@24@32
B24@0:8#16
B24@0:8:16
Vv16@0:8
^{_NSZone=}16@0:8
B24@0:8@"Protocol"16
@"NSString"16@0:8
B32@0:8@"NSPredicate"16@24
v36@0:8@16@24B32
v32@0:8@16@24
@48@0:8@16@24@32@?40
v28@0:8@16B24
i44@0:8I16@20@28@36
@"EKEventStore"
@"NSNumber"
@24@0:8^@16
@"NSURL"
@44@0:8i16@20@28@36
@36@0:8i16@20@28
q28@0:8@16i24
@"NSDate"
@"EKCalendarNotification"
@"EKObjectID"
B52@0:8@16@24@32B40@44
B56@0:8@16@24@32B40B44@48
B48@0:8@16@24@32@40
B40@0:8@16#24#32
@24@0:8@"<EKProtocolObject>"16
@"EKChangeSet"16@0:8
@"EKObject"16@0:8
@"EKPersistentObject"16@0:8
B24@0:8@"NSString"16
@"EKObject"24@0:8@"EKEventStore"16
v32@0:8@16@"NSString"24
@24@0:8@"NSString"16
B24@0:8@"<EKFrozenMeltedPair>"16
B32@0:8@"<EKFrozenMeltedPair>"16@"NSSet"24
@"NSDictionary"16@0:8
@"NSSet"16@0:8
B28@0:8@16B24
B44@0:8@16@24B32@36
@36@0:8@?16@24B32
B20@0:8B16
v24@0:8@?16
@"EKPersistentObject"
@"EKChangeSet"
@"NSDictionary"
@"EKObjectValidationContext"
@56@0:8@16@24@32@40q48
@64@0:8@16@24@32@40@48q56
@68@0:8@16@24@32@40@48q56B64
@72@0:8@16@24@32@40@48@56q64
@76@0:8@16@24@32@40@48@56q64B72
B44@0:8@16@24@32B40
@56@0:8@16@24@32@40@48
v32@0:8@16@?24
@"EKObjectID"16@0:8
v32@0:8@"CADDatabaseInitializationOptions"16@?<v@?ii>24
v24@0:8@?<v@?iBB>16
v24@0:8@?<v@?i>16
v32@0:8q16@?24
v40@0:8@16@24@?32
v28@0:8i16@?20
v32@0:8d16@?24
v60@0:8@16@24@32Q40i48@?52
v40@0:8@16Q24@?32
v28@0:8B16@?20
v48@0:8@16@24@32@?40
v24@0:8@?<v@?i@"NSString">16
v32@0:8@"CADObjectID"16@?<v@?iq>24
v32@0:8q16@?<v@?iBq@"NSData"iii>24
v40@0:8@"NSArray"16@"CADObjectID"24@?<v@?iBq@"NSArray">32
v32@0:8q16@?<v@?i>24
v32@0:8@"NSArray"16@?<v@?i>24
v24@0:8@?<v@?ii>16
v28@0:8i16@?<v@?i@"NSDictionary">20
v32@0:8d16@?<v@?i@"NSData"Q>24
v60@0:8@"NSArray"16@"NSArray"24@"NSArray"32Q40i48@?<v@?i@"NSArray">52
v40@0:8@"NSArray"16Q24@?<v@?i@"NSData">32
v40@0:8@"CADObjectID"16Q24@?<v@?i@"NSData">32
v28@0:8B16@?<v@?i>20
v48@0:8@"NSArray"16@"NSArray"24@"NSDictionary"32@?<v@?i@"NSDictionary">40
v24@0:8@?<v@?iB>16
v24@0:8@?<v@?iQ>16
v40@0:8@"CADObjectID"16@"CADObjectID"24@?<v@?i@"CADObjectID">32
v32@0:8@"CADObjectID"16@?<v@?iB>24
v32@0:8@"NSArray"16@?<v@?i@"NSArray">24
v40@0:8@"CADObjectID"16@"NSArray"24@?<v@?i@"NSArray">32
v40@0:8@"CADObjectID"16@"NSString"24@?<v@?i@"NSObject<NSSecureCoding>">32
v40@0:8@"CADObjectID"16@"NSString"24@?<v@?i@"NSString">32
v40@0:8@"CADObjectID"16@"NSString"24@?<v@?i@"NSNumber">32
v40@0:8@"CADObjectID"16@"NSString"24@?<v@?i@"NSDate">32
v40@0:8@"CADObjectID"16@"NSString"24@?<v@?i@"NSData">32
v40@0:8@"CADObjectID"16@"NSString"24@?<v@?i@"NSSecurityScopedURLWrapper">32
v40@0:8@"CADObjectID"16@"NSString"24@?<v@?i@"CADObjectID">32
v40@0:8@"CADObjectID"16@"NSString"24@?<v@?i@"NSSet">32
v36@0:8@16B24@?28
v36@0:8i16@20@?28
v44@0:8@16i24@28@?36
v48@0:8@16q24@32@?40
v32@0:8@"NSArray"16@?<v@?i@"NSArray"@"NSArray">24
v28@0:8B16@?<v@?i@"CADObjectID">20
v24@0:8@?<v@?i@"CADObjectID">16
v32@0:8@"CADObjectID"16@?<v@?i@"NSData">24
v32@0:8@"CADObjectID"16@?<v@?i@"CADObjectID">24
v36@0:8@"CADObjectID"16B24@?<v@?iB>28
v36@0:8i16@"CADObjectID"20@?<v@?iQ>28
v44@0:8@"NSDate"16i24@"CADObjectID"28@?<v@?i>36
v32@0:8@"CADObjectID"16@?<v@?i@"NSArray">24
v48@0:8@"CalGrantedDelegate"16q24@"CADObjectID"32@?<v@?i>40
v32@0:8@"CADObjectID"16@?<v@?ii>24
v40@0:8@16i24i28@?32
v20@0:8I16
v32@0:8@"NSString"16@?<v@?i@"CADObjectID">24
v40@0:8@"NSString"16@"CADObjectID"24@?<v@?i@"NSArray">32
v40@0:8@"NSPredicate"16i24i28@?<v@?i@"NSArray">32
v40@0:8@"NSData"16@"CADObjectID"24@?<v@?i>32
v40@0:8@"NSString"16@"CADObjectID"24@?<v@?i>32
v36@0:8i16@"NSString"20@?<v@?ii>28
v36@0:8i16@"NSString"20@?<v@?@"NSArray"i>28
v36@0:8@16i24@?28
v40@0:8i16@20B28@?32
v44@0:8@16@24i32@?36
v60@0:8@16@24@32B40@44@?52
v24@0:8@?<v@?i@"NSNumber">16
v32@0:8@"CADObjectID"16@"CADObjectID"24
v32@0:8@"NSString"16@?<v@?i@"NSArray">24
v36@0:8@"CADObjectID"16i24@?<v@?B>28
v40@0:8@"NSArray"16@"NSDate"24@?<v@?i@"NSArray">32
v40@0:8i16@"NSDate"20B28@?<v@?i@"NSDate">32
v44@0:8@"NSString"16@"NSArray"24i32@?<v@?i>36
v60@0:8@"CADObjectID"16@"NSDate"24@"NSDate"32B40@"NSTimeZone"44@?<v@?iB>52
v32@0:8@"NSString"16@?<v@?iB>24
v32@0:8@"CADObjectID"16@?<v@?i@"NSSecurityScopedURLWrapper">24
v24@0:8@"CADObjectID"16
v32@0:8@"EKReminderPredicate"16@?<v@?ii>24
v40@0:8@"NSArray"16@"NSArray"24@?<v@?i@"NSArray">32
v24@0:8@?<v@?i@"NSArray">16
v48@0:8@"NSDate"16@"NSDate"24@"NSArray"32@?<v@?i@"NSArray">40
v40@0:8@16B24B28@?32
v32@0:8@"CADObjectID"16@?<v@?i>24
v40@0:8@"NSDate"16B24B28@?<v@?i@"NSArray"@"NSArray"@"NSArray"@"NSDate">32
v40@0:8@"NSString"16B24B28@?<v@?iQ@"NSArray">32
v24@0:8@?<v@?i@"NSArray"@"NSArray">16
v36@0:8i16@"NSArray"20@?<v@?i>28
v40@0:8@"CADRouteHypothesis"16@"NSString"24@?<v@?i>32
v24@0:8@?<v@?i@"NSDictionary">16
v44@0:8@16@24B32@?36
v44@0:8@"NSString"16@"NSSecurityScopedURLWrapper"24B32@?<v@?i>36
v32@0:8@"NSSecurityScopedURLWrapper"16@?<v@?i>24
v44@0:8@"NSString"16@"NSSecurityScopedURLWrapper"24B32@?<v@?ii>36
v32@0:8@"NSSecurityScopedURLWrapper"16@?<v@?ii>24
v32@0:8@16I24B28
v32@0:8@"NSArray"16I24B28
I24@0:8@16
@"<CADInterface>"
{os_unfair_lock_s="_os_unfair_lock_opaque"I}
@"NSXPCConnection"
@"<EKDaemonConnectionDelegate>"
@"CADDatabaseInitializationOptions"
v24@0:8@"NSExtensionContext"16
@?24@0:8@?16
d16@0:8
v24@0:8d16
@"CalPreferences"
@"EKReminderStore"
@"EKFrozenReminderObject"24@0:8@"NSString"16
@"REMStore"
@"NSArray"
@72@0:8@16@24@32@40@48@56@64
v24@0:8^{CGColor=}16
^{CGColor=}16@0:8
^{CGColor=}
@"NSTimeZone"
@"EKStructuredLocation"
@"EKCalendar"
@"EKSuggestedEventInfo"
@"NSData"
@"NSPointerArray"
@"EKParticipant"
@"<EKIdentityProtocol>"
v40@0:8@16@24@32
@60@0:8@16@24Q32B40@44@?52
@"EKEvent"
@"<CalSpotlightQueryPendingSearchProtocol>"
@32@0:8@16q24
v56@0:8q16@24@32@40@48
v40@0:8@16@24q32
v48@0:8@16@24@32q40
@"EKObject"
v36@0:8q16@24B32
@"NSDate"16@0:8
@40@0:8@16@24q32
@"<EKAccountRefresherDelegate>"
@36@0:8@16B24@28
B56@0:8@16@24@32@40@48
I16@0:8
B24@0:8^@16
v32@0:8@16d24
B32@0:8@16^@24
B40@0:8@16@24^@32
v32@0:8@?16@24
v32@0:8@16^B24
B24@0:8{?=II}16
v28@0:8@?16B24
@?16@0:8
@20@0:8B16
@"NSObject<OS_dispatch_source>"
@"EKSource"
v24@0:8B16B20
Q24@0:8@16
Q32@0:8@16@24
q32@0:8@16@24
@24@0:8@?16
@"NSMutableArray"
@"NSOperationQueue"
^{__SecTrust=}16@0:8
B48@0:8@16@24^@32^@40
B24@0:8q16
B64@0:8@16@24@32@40@48@56
@"NSURL"16@0:8
@"NSPredicate"16@0:8
@"CNContact"16@0:8
r^v24@0:8^v16
@"EKCalendarItem"
I24@0:8q16
@40@0:8@16q24q32
@52@0:8B16@20@28@36@44
@40@0:8@16@24@?32
@32@0:8@16#24
@"EKDirectorySearchQuery"
@"NSError"
@32@0:8@16d24
@"EKRecurrenceRule"
@"EKCalendarEventInvitationNotificationAttendee"
@"CalLocation"
@56@0:8@16@24@32@40Q48
@40@0:8@16@24Q32
@64@0:8@16@24@32@40@48Q56
i24@0:8@16
@48@0:8@16@24@32^@40
B28@0:8i16Q20
@"NSMapTable"
@"NSMutableSet"
v44@0:8@?16B24q28@36
v32@0:8^@16^@24
v40@0:8@"NSArray"16@"NSArray"24@"NSArray"32
@48@0:8B16@20@28@36B44
v48@0:8@16@24@32@40
@"CalLimitingQueue"
@52@0:8B16q20@28@36@44
@"EKEventStore"16@0:8
@"EKTimedEventStorePurger"
r*24@0:8B16B20
B40@0:8@16^@24^@32
@40@0:8@16@24B32B36
@32@0:8@16@?24
v56@0:8@16@24@32@40@?48
@28@0:8@16i24
v40@0:8@"NSArray"16@"NSSet"24@"NSMutableArray"32
@"NSArray"16@0:8
@40@0:8#16@24@32
v28@0:8i16Q20
v36@0:8@?16B24@?28
@"NSPredicate"
@"NSDateComponents"
@32@0:8q16@24
@32@0:8q16@?24
@40@0:8q16@24@?32
@32@0:8@16^@24
@"PCPersistentTimer"
@"NSTimer"
@"NSData"32@0:8@"EKEvent"16^@24
@"EKEvent"32@0:8@"NSData"16^@24
@"NSString"32@0:8@"NSData"16^@24
@20@0:8i16
@28@0:8i16@20
@40@0:8q16@24@32
@48@0:8q16@24@32@40
@56@0:8@16Q24@32@40@48
@"<CalDateProvider>"
@48@0:8@16d24d32d40
v24@0:8@"NSCoder"16
@24@0:8@"NSCoder"16
@104@0:8i16@20d28@36d44@52d60@68B76Q80@88q96
v28@0:8@16i24
v40@0:8@16@24B32B36
v44@0:8@16@24@32B40
v28@0:8i16@20
d24@0:8@16
v32@0:8d16@24
v28@0:8B16@20
{_opaque_pthread_mutex_t="__sig"q"__opaque"[56c]}
@"NSHashTable"
@"EKDirectoryGroup"
@"EKDirectorySearchResultSet"
@"EKRecurrenceEnd"
q36@0:8q16Q24B32
q32@0:8q16Q24
@36@0:8@16@24B32
@32@0:8@16Q24
@48@0:8@16Q24Q32^@40
v32@0:8@16Q24
B20@0:8I16
v24@0:8B16I20
B32@0:8q16^@24
v56@0:8@16@24@32@40@48
B48@0:8{?=iccccd}16@32^@40
@24@0:8^d16
B48@0:8@16@24q32^@40
@"EKReadWriteLock"
@"EKCalendarDate"
@52@0:8@16@24@32@40B48
@64@0:8@16@24@32@40@48@?56
@"EKAvailabilityCache"
@"CDBDataProtectionObserver"
v24@0:8I16B20
@"EKSerializableStructuredLocation"
@56@0:8@16@24@32@40@?48
B36@0:8@16@24B32
v52@0:8@16@24@32@40B48
B32@0:8#16@?24
v40@0:8@16@24#32
@32@0:8q16q24
@48@0:8@16@24@?32@?40
@48@0:8@16Q24@32@40
@"CSSearchQuery"
@32@0:8Q16@24
B40@0:8^i16^i24^i32
B32@0:8Q16@?24
v32@0:8Q16@24
@24@0:8^{CGColor=}16
@24@0:8d16
B20@0:8i16
Q20@0:8i16
i24@0:8Q16
v24@0:8i16B20
B40@0:8@16Q24^@32
v32@0:8Q16@?24
v36@0:8B16@20@?28
@64@0:8q16@24@32@40@48@56
@"RTPredictedLocationOfInterest"
@"EKPredictedLocationOfInterest"
@24@0:8i16i20
@40@0:8@16{_NSRange=QQ}24
@28@0:8i16i20B24
@40@0:8@16B24@28B36
@40@0:8@16@?24@32
@48@0:8@16@24@?32@40
@52@0:8@16@24@?32@40B48
@"CalDarwinNotificationListener"
^v16@0:8
#24@0:8@16
q24@0:8Q16
B24@0:8Q16
@32@0:8i16@20B28
@48@0:8Q16@24@32B40B44
@44@0:8i16@20@28B36B40
v28@0:8Q16B24
B36@0:8@16B24^@28
B32@0:8@16Q24
B40@0:8@16q24^@32
B44@0:8@16q24B32^@36
B40@0:8Q16@24^@32
@52@0:8@16@24@32Q40i48
@60@0:8@16B24@28B36B40B44i48@52
@68@0:8@16B24@28B36B40B44i48@52Q60
@44@0:8@16@24i32@36
@52@0:8@16@24i32@36Q44
@68@0:8@16@24B32B36@40@48@56i64
@76@0:8@16@24B32B36@40@48@56i64Q68
^{os_unfair_lock_s=I}16@0:8
@28@0:8d16i24
@32@0:8d16i24B28
@28@0:8B16^@20
@36@0:8@16B24^@28
Q40@0:8@16B24B28@32
v32@0:8^@16@24
v48@0:8@16@24q32@?40
@32@0:8@?16@24
@44@0:8@16@24@32B40
@56@0:8@16@24@32q40q48
@48@0:8@16@24@32q40
@88@0:8@16@24@32@40@48@56@64@72q80
@48@0:8@16@24@32d40
@40@0:8Q16@24@32
q24@0:8^@16
q32@0:8@16^@24
v24@0:8^@16
v68@0:8q16i24B28q32@40i48i52i56@?60
@"CADGenerationStampedObjectID"
{?="restoreGenerationChanged"b1"fetchingSharedCalendarInvitationsDisallowed"b1}
@"EKDaemonConnection"
@"EKDataProtectionObserver"
@"REMAccount"
@24@0:8r*16
@"EKFrozenReminderSource"
{_NSRange=QQ}16@0:8
@"EKVirtualConference"
{_NSRange="location"Q"length"Q}
Q24@0:8Q16
v36@0:8@16@24S32
@40@0:8^{?=[64S]^{__CFString}^S*{?=qq}qq}16{?=qq}24
@48@0:8q16q24@32@40
@56@0:8@16@24@32Q40@48
@"CalDateRange"
@"EKAvailabilitySpan"
v52@0:8@16@24B32@36@44
@40@0:8@16^@24d32
