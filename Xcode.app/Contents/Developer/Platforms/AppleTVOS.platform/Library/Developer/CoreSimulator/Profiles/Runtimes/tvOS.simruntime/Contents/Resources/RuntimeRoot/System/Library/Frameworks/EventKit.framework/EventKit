v8@?0
.webex.com
.webex.com.cn
.dmz.webex.com
web.ciscospark.com
.skype.com
locations
T@"NSSet",&,N,V_locations
groups
T@"NSSet",&,N,V_groups
resources
T@"NSSet",&,N,V_resources
people
T@"NSSet",&,N,V_people
Interval must be greater than 0
UUID
%@ <%p> RRULE %@
Encountered illegal value for EKRecurrenceFrequency
frequency
interval
/BuildRoot/Library/Caches/com.apple.xbs/Sources/EventKit_Sim/EventKit-1336.1/EventKit/iOS/src/EKRecurrenceRule.m
<Unknown File>
Interval must be greater than or equal to 1
endDate
count
recurrenceEnd
@8@?0
cachedEndDate
firstDayOfTheWeek
Invalid parameter not satisfying: %@
(int)firstDay <= EKWeekdaySaturday
specifier
dayOfTheWeek
DAILY
WEEKLY
MONTHLY
YEARLY
Encountered illegal value for  EKRecurrenceFrequency
yyyyMMdd
yyyyMMdd'T'HHmmss
yyyyMMdd'T'HHmmss'Z'
FREQ=%@
;INTERVAL=%lu
;UNTIL=%@
;COUNT=%lu
;BYMONTH=%@
;BYMONTHDAY=%@
;BYYEARDAY=%@
;BYWEEKNO=%@
;BYDAY=%@
;BYSETPOS=%@
;WKST=SU
shouldPinMonthDays
TB,R,N,V_shouldPinMonthDays
gregorianUnits
T{?=iiiiid},R,N
usesEndDate
TB,R,V_usesEndDate
T@"NSString",R,N
T@"NSDate",R,N
dirtyStateMayAffectExceptionDates
TB,R,N
calendarIdentifier
T@"EKRecurrenceEnd",C,N
Tq,R,N
daysOfTheWeek
T@"NSArray",R,N
daysOfTheMonth
daysOfTheYear
weeksOfTheYear
monthsOfTheYear
setPositions
hash
TQ,R
superclass
T#,R
description
T@"NSString",R,C
debugDescription
T@"NSObject<OS_os_log>",R
remStore
T@"REMStore",R,N,V_remStore
eventStore
T@"EKEventStore",R,W,V_eventStore
sources
T@"NSArray",R,V_sources
calendars
T@"NSArray",R,V_calendars
alerted
invite_reply_calendar
changed_by_address
changed_by_display_name
changed_by_first_name
changed_by_last_name
status
creation_date
in_reply_to
summary
Calendar
externalID
display_name
sharees
owner
address
first_name
last_name
accessLevel
%@ <%p> {UUID = %@; displayName = %@; address = %@; firstName = %@; lastName = %@; status = %lu; accessLevel = %lu;}
alarms
allowedEntities
bulkRequests
color
digest
displayOrder
externalIDTag
externalModificationTag
externalRepresentation
flags
invitationStatus
isColorDisplayOnly
isPublished
notes
ownerIdentityAddress
ownerIdentityDisplayName
ownerIdentityEmail
ownerIdentityFirstName
ownerIdentityId
ownerIdentityLastName
ownerIdentityPhoneNumber
publishedURL
pushKey
selfIdentityAddress
selfIdentityDisplayName
selfIdentityEmail
selfIdentityFirstName
selfIdentityLastName
selfIdentityPhoneNumber
sharedOwnerAddress
sharedOwnerName
notifications
sharingInvitationResponse
sharingStatus
source
subcalAccountID
symbolicColorName
syncToken
title
Source
Sharee
Alarm
calendarOwner
Notification
%@ <%p> {title = %@; allowsModify = %s; color = %@; source = %@; sharees = %@}
EKFeatureSetDidChangeNotification
ContinuityCapability
s+gaKNe68Gs3PfqKrZhi1w
EKAvailabilityCacheError
%@-%@-processing
%@-%@-callback
accountID
sourceIsInvalid
sourceSupportsAvailabilityRequests
addressesToCachedSpanRanges
ignoredEventIDsToAddressBasedCaches
AvailabilityCacheMiss
AvailabilityCacheHit
B24@?0@"NSString"8@"NSDictionary"16
v16@?0@"NSDictionary"8
v16@?0@"NSError"8
v32@?0@"NSString"8@"NSArray"16^B24
v32@?0@8Q16^B24
(3-5)
(6-10)
(11-15)
(16-20)
(21-25)
(26-50)
(51-100)
(101-150)
(151-200)
(201+)
AvailabilityCacheRoundtripTimeInMilliseconds-%@
elapsedTime
simulateLegacyBehaviors
structuredData
localStructuredData
T@"NSData",C,N
startDate
location
structuredLocation
attendees
attachments
travelTime
recurrenceRules
timeZone
calendar.calendarIdentifier
T@"NSDate",C,N,V_startDate
T@"NSDate",C,N,V_endDate
T@"NSTimeZone",C,N,V_timeZone
isAllDay
TB,N,V_isAllDay
Td,N,V_travelTime
T@"NSMutableArray",&,N,V_recurrenceRules
T@"NSString",C,N,V_title
T@"NSString",C,N,V_notes
T@"NSURL",&,N,V_url
T@"NSString",C,N,V_calendarIdentifier
T@"NSString",C,N,V_location
T@"EKSerializableStructuredLocation",&,N,V_structuredLocation
T@"NSArray",&,N,V_attendees
T@"NSArray",&,N,V_alarms
T@"NSArray",&,N,V_attachments
FIRST=%@;
LAST=%@;
/BuildRoot/Library/Caches/com.apple.xbs/Sources/EventKit_Sim/EventKit-1336.1/EventKit/iOS/src/EKOccurrenceCacheSearch.m
calendars != nil
searchTerm != nil
store != nil
callback != nil
v12@?0i8
Call to calendar daemon failed: %@
T@"NSString",R,D,N
sourceType
Tq,D,N
T@"NSString",C,D,N
defaultAlarmOffset
T@"NSNumber",C,D,N
disabled
TB,D,N
onlyCreatorCanModify
preferredEventPrivateValue
Ti,D,N
strictestEventPrivateValue
CalendarsExcludedFromNotifications
com.apple.mobilecal
%@{type: %d, rowID: %d, date: %@}
type
Ti,R,N,V_type
notification
T@"EKCalendarNotification",R,N
objectID
T@"EKObjectID",R,N,V_objectID
/BuildRoot/Library/Caches/com.apple.xbs/Sources/EventKit_Sim/EventKit-1336.1/EventKit/iOS/src/EKObject.m
iOS doesn't support cross-store copies yet
v16@?0@"EKObject"8
persistentObject
isFrozen
isPartialObject
uniqueIdentifier
semanticIdentifier
canBeConvertedToFullObject
preFrozenRelationshipObjects
T@"NSDictionary",R,N
T@"EKEventStore",&,N
changeSet
T@"EKChangeSet",&,N,V_changeSet
_cachedMeltedObjects
T@"NSMutableDictionary",&,N,V__cachedMeltedObjects
additionalFrozenProperties
T@"NSDictionary",&,N,V_additionalFrozenProperties
_cachedValues
T@"NSMutableDictionary",&,N,V__cachedValues
_validationContext
T@"EKObjectValidationContext",&,N,V__validationContext
backingObject
T@"EKPersistentObject",&,N
hasChanges
TB,R,N,GisNew
Encountered an illegal EKRecurrenceFrequency value
externalFolderID
externalScheduleID
T@"NSString",C,N
owner_id
ownerID
T@"EKObjectID",R,N
T@"EKObjectID",R,N,V_ownerID
weekStart
CalendarItem
%@ <%p> {frequency = %ld; interval = %ld; firstDayOfWeek = %ld; enddate = %@; count = %lu; specifier = %@}
TITLE=%@;
ADDRESS=%@;
%f:%f:%f
%f:%f
ConnectionLock
ReplyLock
com.apple.calaccessd
hasEverConnected
TB,N,V_hasEverConnected
xpcConnection
T@"NSXPCConnection",R,&,N,V_xpcConnection
CADOperationProxy
T@"<CADInterface>",R,&,N
CADOperationProxySync
delegate
T@"<EKDaemonConnectionDelegate>",W,V_delegate
initializationOptions
T@"CADDatabaseInitializationOptions",&,N,V_initializationOptions
com.apple.eventkit.debug.preference.notification.travelEngineThrottlePeriod
com.apple.eventkit.preference.notification.refiringReminderAlarmsEnabled
com.apple.eventkit.preference.notification.selectedCalendarIdentifiers
com.apple.eventkit.preference.notification.ShowDeclinedEvents
com.apple.eventkit.preference.notification.AlertInviteeDeclines
com.apple.mobilecal.preference.notification.selectedCalendarSyncHashesChanged
com.apple.eventkit.preference.notification.deselectedCalendarIdentifiers
TravelEngineThrottlePeriod
refiringReminderAlarmsEnabled
useShortReminderSnoozeInterval
useShortReminderRefireInterval
alwaysSetArrivedAndSettledForReminders
remindMeAboutThisInCalendarWidgetEnabled
LastConfirmedSplashScreenVersionViewed
privacyPaneBypass
LastDeselectedCalendars
LastDeselectedCalendarSyncHashes
LastDeselectedCalendarSyncIdentifiers
LastViewedCalendars
ShowDeclinedEvents
InviteeDeclineAlerts
travelEngineThrottlePeriod
Td,N
TB,N
lastConfirmedSplashScreenVersion
TQ,N
bypassSplashScreen
TB,R
showDeclinedEvents
alertInviteeDeclines
deselectedCalendarIdentifiers
deselectedCalendarSyncHashes
deselectedCalendarSyncIdentifiers
selectedCalendarIdentifiers
T@"NSArray",&,N
calendar_id
old_calendar_id
external_id
old_external_id
location_id
start_date
start_tz
end_date
end_tz
all_day
calendarID
T@"EKObjectID",R,N,V_calendarID
oldCalendarID
T@"EKObjectID",R,N,V_oldCalendarID
T@"NSString",R,N,V_externalID
oldExternalID
T@"NSString",R,N,V_oldExternalID
titleChanged
TB,R,N,V_titleChanged
locationChanged
TB,R,N,V_locationChanged
startDateChanged
TB,R,N,V_startDateChanged
startTimezoneChanged
TB,R,N,V_startTimezoneChanged
endDateChanged
TB,R,N,V_endDateChanged
endTimezoneChanged
TB,R,N,V_endTimezoneChanged
notesChanged
TB,R,N,V_notesChanged
allDayChanged
TB,R,N,V_allDayChanged
[%@] opaqueKey: %@, uniqueKey: %@, changedFields: %lu, changesAcknowledged: %d, timestamp: %f
opaqueKey
uniqueKey
changedFields
changesAcknowledged
timestamp
v16@?0@"NSNotification"8
[%@] Display name: [%@], isEmail: [%@]
participant
T@"EKParticipant",W,N,V_participant
firstName
T@"NSString",C,N,V_firstName
lastName
T@"NSString",C,N,V_lastName
cachedDisplayName
T@"NSString",C,N,V_cachedDisplayName
isEmail
TB,N,V_isEmail
isPhone
TB,N,V_isPhone
CRRecentContactsLibrary
CRAddressKindEmail
CRAddressKindPhoneNumber
CRRecentsDomainCalendar
completionDate
dueDate
dueDateTimeZone
priority
dueDateAllDay
hasAlarms
hasRecurrenceRules
Version
Version mismatch. Archiver version: [%@]. Encoded Data Version: [%@].
Unable to unarchive version string.
Data
Unable to unarchive data.
Unable to encode data.
Unable to decode version string.
T@"EKEventStore",R,N,V_eventStore
version
T@"NSString",R,N,V_version
suffix
T@"NSString",R,C,N,V_suffix
customClientId
T@"NSString",R,C,N,V_customClientId
CADChangeTrackingClientId
T@"CADChangeTrackingClientId",R,N
calendar
hostURL
In order to save a new notification, add it to a NotificationCollection, save, and commit the collection instead.
T@"NSURL",C,N
calLocation
EKSerializableStructuredLocation is not implemented in iOS
T@"CalLocation",C,N,V_calLocation
filename
format
isBinary
localRelativePath
fileSize
xprops
externalId
%@ <%p> {URL = %@; fileName = %@; fileFormat = %@; fileSize = %lu; localRelativePath = %@; UUID = %@;}
url_pending_copy
Please use the appropriate designated initializer for this class.
/BuildRoot/Library/Caches/com.apple.xbs/Sources/EventKit_Sim/EventKit-1336.1/EventKit/EKAvailabilitySpan.m
startDate != nil
endDate != nil
'startDate' must not be after 'endDate'
[%@] startDate: [%@] endDate: [%@] type: [%@]
Tq,R,N,V_type
T@"NSDate",&,N,V_startDate
T@"NSDate",&,N,V_endDate
Unknown
Busy
Free
NoData
OutOfOffice
Tentative
Unavailable
_float
structuredLocationWithoutPrediction
%@ <%p>
 title = 
%@; 
 location = 
%@; 
 calendar = 
%@; 
 alarms = 
%@; 
 URL = 
%@; 
 lastModified = %@; 
 startTimeZone = 
%@; 
 startTimeZone = 
clientLocation
organizer
selfAttendee
originalItem
travelStartLocation
detachedItems
ekExceptionDates
uniqueID
hasNotes
lastModifiedDate
creationDate
allDay
calendarScale
action
appLink
v24@?0@"NSData"8@"NSError"16
startTimeZoneName
endTimeZoneName
defaultAlarmRemoved
externalData
modifiedProperties
sequenceNumber
Error exporting event to ICS: %@
v20@?0i8@"NSData"12
actionsState
X-APPLE-NO-ACTION
OUT-OF-DATE
DELEGATORS-COPY
DELEGATEES-COPY
v32@?0@"EKAlarm"8Q16^B24
/BuildRoot/Library/Caches/com.apple.xbs/Sources/EventKit_Sim/EventKit-1336.1/EventKit/iOS/src/EKCalendarItem.m
Can't snooze an alarm with location but no proximity.
acknowledgedDate
hasAttendees
selfParticipantStatus
sharedItemCreatedByDisplayName
sharedItemCreatedByAddress
sharedItemCreatedByFirstName
sharedItemCreatedByLastName
sharedItemCreatedDate
sharedItemCreatedTimeZoneName
sharedItemModifiedByDisplayName
sharedItemModifiedByAddress
sharedItemModifiedByFirstName
sharedItemModifiedByLastName
sharedItemModifiedDate
sharedItemModifiedTimeZoneName
Committed Value class is incorrect!
v16@?0@"EKCalendarItem"8
Original item class must match our class
date
calendarItemIdentifier
T@"NSString",&,N
T@"EKCalendar",&,N
calendarItemExternalIdentifier
T@"NSTimeZone",C,N
T@"NSArray",C,N
kDefaultAlarmSemanticIdentifier
ABSOLUTE=%f;
RELATIVE=%f;
LOCATION=%@;
PROXIMITY=%@;
None
Enter
Leave
work
callback
workQueue
T@"NSObject<OS_dispatch_queue>",&,N,V_workQueue
callbackQueue
T@"NSObject<OS_dispatch_queue>",&,N,V_callbackQueue
timer
T@"NSObject<OS_dispatch_source>",&,N,V_timer
internalTimeout
Td,N,V_internalTimeout
internalCreationBlock
T@?,C,N,V_internalCreationBlock
internalChangedBlock
T@?,C,N,V_internalChangedBlock
ignoreLowLevelDatabaseChangedNotifications
TB,N,V_ignoreLowLevelDatabaseChangedNotifications
internalPurgingAllowed
TB,N,V_internalPurgingAllowed
internalStore
T@"EKEventStore",&,N,V_internalStore
creationBlock
T@?,C,N
changedBlock
purgingAllowed
timeout
maxAlarmsAllowed
Ti,N
maxRecurrencesAllowed
supportsAlarmTriggerIntervals
supportsAlarmTriggerDates
supportsAlarmsTriggeringAfterStartDate
snoozeAlarmRequiresDetach
organizerCanSeeAttendeeStatuses
inviteesCanSeeAttendeeStatuses
statusesAreAccurate
supportsIncomingInvitations
supportsOutgoingInvitations
requiresOutgoingInvitationsInDefaultCalendar
supportsInvitationModifications
supportsEventForwarding
supportsResponseComments
deliverySourceOrExternalIDRequiredForResponse
proposedStatusRequiredForResponse
declinedStatusChangeRequiresNoPendingStatus
eventDurationConstrainedToRecurrenceInterval
alarmTriggerIntervalConstrainedToRecurrenceInterval
occurrencesMustOccurOnSeparateDays
futureStartDateLimitedToOccurrenceCacheBounds
supportsRecurrencesOnDetachedEvents
recurrencesShouldPinToMonthDays
requiresAttendeeSearchInSingleAccount
mustAcknowledgeMasterEvent
canSetAvailability
eventAvalabilityLimited
TB,N,V_eventAvalabilityLimited
requiresMSFormattedUID
shouldCancelDeletedEvents
shouldDeclineDeletedInvitations
supportsStructuredLocations
supportsReminderActions
supportsReminderLocations
supportsAlarmProximity
allowsCalendarAddDeleteModify
allowsTasks
allowsEvents
supportsURLField
supportsAllDayDueDates
supportsSharedCalendars
isFacebook
supportsPrivateEvents
prohibitsPrivateEventsWithAttendees
requiresSamePrivacyLevelAcrossRecurrenceSeries
supportsAvailabilityRequests
supportsIgnoringEventsInAvailabilityRequests
supportsLocationDirectorySearches
supportsInboxAvailability
recurrenceSeriesMustIncludeMoreThanFirstOccurrence
prohibitsMultipleMonthsInYearlyRecurrence
prohibitsMultipleDaysInMonthlyRecurrence
prohibitsYearlyRecurrenceInterval
requiresOccurrencesConformToRecurrenceRule
prohibitsDetachmentOnCommentChange
allowsProposeNewTime
prohibitsICSImport
supportsAutoGeocodingStructuredLocations
supportsJunkReporting
supportsPhoneNumbers
attendeesUseDeletedByOrganizerStatus
prohibitsSlicingEventsWithAttendees
supportsSubscribedCalendars
supportsAttachments
requiresOpeningAttachmentAsLink
supportsDelegation
supportsDelegateEnumeration
supportsRecurrenceSplit
latitude
longitude
addressBookEntityID
mapKitHandle
routing
startLocation
B32@?0@"NSString"8@"EKPersistentObject"16@"EKPersistentObject"24
calendarItemOwner
alarmOwner
referenceFrame
radius
derivedFrom
%@ <%p> {title = %@; address = %@; lat = %@; long = %@; abID = %@; radius = %@, routing = %@}
value
contacts
T@"NSArray",&,N,V_contacts
contactEmailAddresses
T@"NSSet",&,N,V_contactEmailAddresses
contactNameComponents
T@"NSSet",&,N,V_contactNameComponents
contactCompanyNames
T@"NSSet",&,N,V_contactCompanyNames
conferenceURLDetectedKey
junk
not junk
cachedJunkStatus
could be junk
locationsWithoutPrediction
whitelist
not whitelist
com.apple.calendar
store.log.travel.engine
store.log.travel.engine.throttle
Adding nil Notification to notification collection.
Removing nil Notification from notification collection.
T@"EKSource",R,N
T@"NSSet",C,N
calendar.source
externalTrackingStatus
uniqueId
originalItem.objectID.rowID
availabilityRequests
processing
Reset
ConflictFound
SearchProgressed
radar.18233777
B32@?0@"EKInviteeTimeSpan"8Q16^B24
q24@?0@"EKInviteeTimeSpan"8@"EKInviteeTimeSpan"16
v32@?0@"EKAvailabilitySpan"8Q16^B24
v32@?0@"EKInviteeTimeSpan"8Q16^B24
processingQueue
T@"NSObject<OS_dispatch_queue>",&,N,V_processingQueue
internalOriginalStartDate
T@"NSDate",&,N,V_internalOriginalStartDate
internalOriginalEndDate
T@"NSDate",&,N,V_internalOriginalEndDate
originalRangeStartDate
T@"NSDate",&,N,V_originalRangeStartDate
internalProposedStarts
T@"NSMutableArray",&,N,V_internalProposedStarts
T@"EKSource",&,N,V_source
ignoredEventID
T@"NSString",&,N,V_ignoredEventID
availabilityRequestsQueue
T@"NSOperationQueue",&,N,V_availabilityRequestsQueue
participantAddressesToParticipants
T@"NSMutableDictionary",&,N,V_participantAddressesToParticipants
organizerAddress
T@"NSString",&,N,V_organizerAddress
availabilityRequestInProgress
TB,N,V_availabilityRequestInProgress
nextAvailabilityRangeStartDate
T@"NSDate",&,N,V_nextAvailabilityRangeStartDate
availabilitySearchDurationMultiplier
Td,N,V_availabilitySearchDurationMultiplier
remainingSearchAttempts
TQ,N,V_remainingSearchAttempts
leftoverSpans
T@"NSMutableArray",&,N,V_leftoverSpans
internalTimesWhenAllAttendeesCanAttend
T@"NSMutableArray",&,N,V_internalTimesWhenAllAttendeesCanAttend
internalTimesWhenSomeAttendeesCanAttend
T@"NSMutableArray",&,N,V_internalTimesWhenSomeAttendeesCanAttend
internalProposedTimes
T@"NSMutableArray",&,N,V_internalProposedTimes
internalOriginalConflictedParticipants
T@"NSMutableArray",&,N,V_internalOriginalConflictedParticipants
internalSearchingForMoreTimesWhenAllAttendeesCanAttend
TB,N,V_internalSearchingForMoreTimesWhenAllAttendeesCanAttend
internalSearchingForMoreTimesWhenSomeAttendeesCanAttend
TB,N,V_internalSearchingForMoreTimesWhenSomeAttendeesCanAttend
stateChanged
T@?,C,N,V_stateChanged
originalStartDate
originalEndDate
originalConflictedParticipants
timesWhenAllAttendeesCanAttend
timesWhenSomeAttendeesCanAttend
proposedTimes
searchingForMoreTimesWhenAllAttendeesCanAttend
searchingForMoreTimesWhenSomeAttendeesCanAttend
noConflictRequired
TB,N,V_noConflictRequired
inviteReplyCalendar
shareeURL
shareeDisplayName
shareeFirstName
shareeLastName
shareeStatus
inReplyTo
T@"EKCalendar",R,N
calendarName
shareeEmailAddress
shareePhoneNumber
T@"NSDate",C,N
sourceIdentifier
T@"NSString",R,N,V_sourceIdentifier
remAccount
T@"REMAccount",R,N,V_remAccount
comment
emailAddress
displayName
phoneNumber
proposedStartDate
proposedStartDateStatus
CNNameComponentsStringTokenizer
-[CNContact predicateForContactMatchingEKParticipantWithName:emailAddress:URL:predicateDescription:]
v16@?0@"CNContactStore"8
invitedBy
/BuildRoot/Library/Caches/com.apple.xbs/Sources/EventKit_Sim/EventKit-1336.1/EventKit/iOS/src/EKParticipant.m
Setting inviter name string not supported on iOS
<%@: %p>(name = %@)
inviterNameString
T@"EKCalendarItem",R,N,V_owner
T@"NSURL",R,N
name
participantStatus
participantRole
participantType
currentUser
TB,R,N,GisCurrentUser
contactPredicate
T@"NSPredicate",R,D,N
/BuildRoot/Library/Caches/com.apple.xbs/Sources/EventKit_Sim/EventKit-1336.1/EventKit/iOS/src/EKCalendarSharedCalendarNotification.m
Invalid type for EKCalendarSharedCalendarNotification.
TQ,N,V_sharingInvitationResponse
allowedEntityTypes
TQ,N,V_allowedEntityTypes
start
spanDate
T@"NSDate",&,N,V_spanDate
dateType
Tq,V_dateType
spanType
Tq,V_spanType
_cachedSpans
v32@?0@"EKAvailabilityCachedSpan"8Q16^B24
/BuildRoot/Library/Caches/com.apple.xbs/Sources/EventKit_Sim/EventKit-1336.1/EventKit/EKAvailabilityCachedSpanRange.m
ERROR: We tried to insert a span with no end date.
q24@?0@"EKAvailabilitySpan"8@"EKAvailabilitySpan"16
role
proposedStart
%@ <%p> {UUID = %@; displayName = %@; email = %@; phoneNumber = %@; firstName = %@, lastName = %@, status = %ld; role = %ld; type = %ld}
pendingStatus
lastModified
originAppName
[%@] username: [%@], password: [%@]
******
username
T@"NSString",R,N,V_username
password
T@"NSString",R,N,V_password
firstAlertDate
%@ <%p> {title = %@; dueDate = %@; completionDate = %@; priority = %u; UUID = %@}
<%@: %p>(externalID = %@, externalIDTag = %@, source = %@)
T@"EKSource",R,N,V_source
T@"NSString",R,N,V_externalIDTag
supportsSecureCoding
Tq,N,V_type
T@"NSString",&,N,V_title
T@"NSString",&,N,V_name
T@"NSString",&,N,V_firstName
T@"NSString",&,N,V_lastName
T@"NSString",&,N,V_emailAddress
T@"NSString",&,N,V_phoneNumber
T@"NSURL",&,N,V_URL
T@"EKObjectID",&,N,V_objectID
dotColor
T^{CGColor=},N,V_dotColor
hiddenFromNotificationCenter
TB,N,V_hiddenFromNotificationCenter
TB,N,V_alerted
needsAlert
couldBeJunk
TB,N,V_couldBeJunk
relativeOffset
absoluteDate
isAbsolute
Either the relative offset or absolute date must be set.
Td,N,V_relativeOffset
T@"NSDate",C,N,V_absoluteDate
TB,N,V_isAbsolute
isExecuting
v20@?0@"NSError"8B16
v32@?0@"DAECalendarDirectorySearchResult"8Q16^B24
isFinished
numberOfMatchesExceededLimit
TB,N,V_numberOfMatchesExceededLimit
error
T@"NSError",&,N,V_error
[%@] rowID: [%d] date: [%f]
Td,N,V_date
terms
T@"NSSet",&,N,V_terms
findGroups
TB,N,V_findGroups
findLocations
TB,N,V_findLocations
findResources
TB,N,V_findResources
findUsers
TB,N,V_findUsers
resultLimit
TQ,N,V_resultLimit
v32@?0@"EKAttendee"8Q16^B24
v32@?0@"EKCalendarEventInvitationNotificationAttendee"8Q16^B24
T@"NSString",&,N,V_location
startDateForNextOccurrence
T@"NSDate",&,N,V_startDateForNextOccurrence
participationStatusModifiedDate
T@"NSDate",&,N,V_participationStatusModifiedDate
T@"NSTimeZone",&,N,V_timeZone
participationStatus
Tq,N,V_participationStatus
Tq,N,V_status
TB,N,GisAllDay,V_allDay
recurrenceRule
T@"EKRecurrenceRule",&,N,V_recurrenceRule
timeChanged
TB,N,V_timeChanged
dateChanged
TB,N,V_dateChanged
TB,N,V_locationChanged
attendeeReplyChanged
TB,N,V_attendeeReplyChanged
T@"EKCalendarEventInvitationNotificationAttendee",&,N,V_owner
T@"NSString",R,N,V_invitedBy
T@"NSString",R,N,V_name
T@"NSString",R,N,V_firstName
T@"NSString",R,N,V_lastName
T@"NSString",R,N,V_emailAddress
T@"NSString",R,N,V_phoneNumber
T@"NSURL",R,N,V_URL
statusChanged
TB,R,N,V_statusChanged
commentChanged
TB,R,N,V_commentChanged
proposedStartDateChanged
TB,R,N,V_proposedStartDateChanged
Tq,R,N,V_participantStatus
T@"NSString",R,N,V_comment
T@"NSDate",R,N,V_proposedStartDate
proposedStartDateDeclined
TB,R,N,V_proposedStartDateDeclined
isCurrentUser
TB,R,N,V_isCurrentUser
record
ROWID
sequence_number
v32@?0i8B12q16@"NSArray"24
entityType must be implemented by an EKObjectChange inheriting class.
consumed_entity_class
consumed_entity_id
consumed_change_id
changeID
Tq,R,N,V_changeID
Tq,R,N,V_sequenceNumber
changedObjectID
T@"EKObjectID",R,N,V_changedObjectID
changeType
Ti,R,N,V_changeType
Location
snoozedAlarms
originalAlarm
proximity
alarmType
externalRep
defaultAlarm
%@ <%p> {triggerDate = %@; proximity = %ld; location = %@}
%@ <%p> {triggerInterval = %lf; proximity = %ld; location = %@}
com.apple.eventkit.ekeventstore_reminders
calendarItem
changedByAddress
changedByDisplayName
changedByFirstName
changedByLastName
changedProperties
createCount
deleteCount
deletedTitle
publicStatus
resource_changes
updateCount
B32@?0@8@16^B24
v32@?0@"NSString"8@16^B24
singleValueChanges: %@ 
multiValueAdditions: %@ 
multiValueRemovals: %@ 
is new: %d is deleted: %d is saved: %d is modified: %d
is undeleted: %d
singleValueChanges
T@"NSMutableDictionary",&,N,V_singleValueChanges
multiValueAdditions
T@"NSMutableDictionary",&,N,V_multiValueAdditions
multiValueRemovals
T@"NSMutableDictionary",&,N,V_multiValueRemovals
isNew
TB,N,V_isNew
isModified
TB,N,V_isModified
isSaved
TB,N,V_isSaved
isDeleted
TB,N,V_isDeleted
isUndeleted
TB,N,V_isUndeleted
exceptionDates
%@ <%p> {date = %@}
/BuildRoot/Library/Caches/com.apple.xbs/Sources/EventKit_Sim/EventKit-1336.1/EventKit/iOS/src/EKCalendarInviteReplyNotification.m
Invalid type for EKCalendarInviteReplyNotification.
TQ,N,V_status
T@"EKPersistentEvent",D,N
TQ,D,N
T@"NSDate",C,D,N
v28@?0B8q12@"NSArray"20
Method not implemented on iOS.
urlOnDisk
T@"NSURL",&,N,V_urlOnDisk
contentTypeFromServer
T@"NSString",&,N,V_contentTypeFromServer
EKPredicateSearch
Unknown entity type
Didn't recognize entity class %@
v20@?0i8@"NSArray"12
v24@?0@"CADEntityWrapper"8@"NSMutableArray"16
v16@?0@"NSArray"8
Name should not be nil.
Either url, phoneNumber or emailAddress should not be nil.
T@"NSString",C,N,V_name
T@"NSString",C,N,V_emailAddress
T@"NSString",C,N,V_phoneNumber
Tq,N,V_participantRole
Tq,N,V_participantStatus
Tq,N,V_participantType
EKReminderModifiedNotification
/?&:$+,;=@
x-apple-reminder://%@
startDateComponents
Calendar must be nil or Gregorian
Invalid date components: must have at least a year, a month, and a day
dueDateComponents
%@ <%p> {title = %@; dueDate = %@; completionDate = %@; priority = %ld; calendarItemIdentifier = %@; alarms = %@}
AlertToCompletionDuration
duration
parentID
T@"EKObjectID",&,N,V_parentID
T@"NSDateComponents",C,N
completed
TB,N,GisCompleted
event_id_tomb
EKNotificationsChangedNotification
EKNotificationCountChangedNotification
EKNotificationCountChangedExternallyNotification
EKNotificationChangedNotificationsKey
@"EKEventStore"8@?0
com.apple.eventkit.notificationMonitor
com.apple.eventkit.notificationMonitorTimer
v16@?0@"EKTimedEventStorePurger"8
com.apple.eventkit.invitationmonitor
v32@?0@"EKCalendarNotificationReference"8Q16^B24
pending
no pending
v32@?0i8B12@"NSArray"16d24
logHandle
T@"NSObject<OS_os_log>",R,N
notificationQueue
T@"NSObject<OS_dispatch_queue>",R,N,V_notificationQueue
eventStorePurger
T@"EKTimedEventStorePurger",R,N,V_eventStorePurger
notificationCount
TQ,R,N
notificationReferences
T@"NSArray",R,N,V_notificationReferences
principalPath
preferredAddress
T@"NSString",&,N,V_displayName
T@"NSString",&,N,V_preferredAddress
T@"NSString",C,N,V_principalPath
userInfo
T@"NSDictionary",R
com.apple.eventkit.debug.preference.notification.availabilityFreshnessWindow
com.apple.eventkit.debug.preference.notification.saveGeocodedLocationsInTravelEngine
com.apple.eventkit.debug.preference.notification.overrideTravelAdvisoryHypothesis
com.apple.eventkit.debug.preference.notification.overriddenTravelAdvisoryHypothesisTransportType
com.apple.eventkit.debug.preference.notification.overriddenTravelAdvisoryHypothesisConservativeTravelTime
com.apple.eventkit.debug.preference.notification.overriddenTravelAdvisoryHypothesisEstimatedTravelTime
com.apple.eventkit.debug.preference.notification.overriddenTravelAdvisoryHypothesisAggressiveTravelTime
com.apple.eventkit.debug.preference.notification.overriddenTravelAdvisoryHypothesisSupportsLiveTraffic
com.apple.eventkit.debug.preference.notification.overriddenTravelAdvisoryHypothesisCurrentTrafficDensity
com.apple.eventkit.debug.preference.notification.overriddenTravelAdvisoryHypothesisRouteName
com.apple.eventkit.debug.preference.notification.overriddenTravelAdvisoryHypothesisTravelState
com.apple.eventkit.debug.preference.notification.preventMarkingTravelAdvisoryEntriesAsDismissed
com.apple.eventkit.debug.preference.notification.forceDisplayOfNewTravelAdvisoryHypotheses
com.apple.eventkit.debug.preference.notification.performAgendaEntryEqualityChecksInTravelEngine
com.apple.eventkit.debug.preference.notification.verifyIntegrityOfAvailabilityTimeSearchTimelines
com.apple.eventkit.debug.preference.notification.showDepartureDateForTransitTimeToLeave
com.apple.eventkit.debug.preference.notification.shouldBypassTravelEngineThrottle
com.apple.eventkit.debug.preference.notification.syntheticTravelAdvisoriesEnabled
availabilityFreshnessWindow
saveGeocodedLocationsInTravelEngine
overrideTravelAdvisoryHypothesis
overriddenTravelAdvisoryHypothesisTransportType
overriddenTravelAdvisoryHypothesisConservativeTravelTime
overriddenTravelAdvisoryHypothesisEstimatedTravelTime
overriddenTravelAdvisoryHypothesisAggressiveTravelTime
overriddenTravelAdvisoryHypothesisSupportsLiveTraffic
overriddenTravelAdvisoryHypothesisCurrentTrafficDensity
overriddenTravelAdvisoryHypothesisRouteName
overriddenTravelAdvisoryHypothesisTravelState
preventMarkingTravelAdvisoryEntriesAsDismissed
forceDisplayOfNewTravelAdvisoryHypotheses
performAgendaEntryEqualityChecksInTravelEngine
verifyIntegrityOfAvailabilityTimeSearchTimelines
showDepartureDateForTransitTimeToLeave
shouldBypassTravelEngineThrottle
syntheticTravelAdvisoriesEnabled
external_mod_tag
host_url
EKErrorDomain
EKCADErrorDomain
The event cannot be edited.
No calendar has been set.
No start date has been set.
No end date has been set.
The start date must be before the end date.
An unexpected error occurred.
The calendar is read only.
That event does not belong to that event store.
Invites cannot be moved to another calendar.
The event is too far in the future.
The event is too long to repeat this often.
The event repeats before the alert occurs.
Another instance of this event occurs on this date.
An invalid span was specified.
A repeating reminder must have a due date.
Calendar does not match parent event
Calendar has no source
That calendar may not be moved to another account.
The privacy level field cannot be changed.
The repeat field cannot be changed.
Alarms cannot be changed.
Attendees cannot be changed.
That calendar can not be changed or deleted.
Locations with geo information are not supported by this account.
Actions are not supported by this account.
Locations for reminders are not supported by this account.
Proximity-based alarms are not supported by this account.
That account does not allow calendars to be added or removed.
That calendar does not allow events to be added.
That calendar does not allow reminders to be added.
That account does not support events.
That account does not support reminders.
You can't move events with attendees between accounts.
Priorities must be between %d and %d.
This is not a valid EKEntityType.
Choose another way to repeat this event or move it to another calendar.
The Suggested Event Calendar cannot be modified.
That calendar does not allow events to start outside of their recurrence patterns.
You can't move events with attachments between accounts.
A source must have a sourceIdentifier
isSelf
%@ <%p> {UUID = %@; displayName = %@; email = %@; phoneNumber = %@; firstName = %@; lastName = %@; isSelf = %d}
ApproachingDeparture
LeaveNow
RunningLate
startOfLeaveNowPeriodInternal
T@"NSDate",&,N,V_startOfLeaveNowPeriodInternal
startOfRunningLatePeriodInternal
T@"NSDate",&,N,V_startOfRunningLatePeriodInternal
internalActive
TB,N,V_internalActive
internalPeriod
TQ,N,V_internalPeriod
internalPeriodChangedCallback
T@?,C,N,V_internalPeriodChangedCallback
dateProvider
T@"<CalDateProvider>",R,N,V_dateProvider
startOfLeaveNowPeriod
startOfRunningLatePeriod
periodChangedCallback
period
resourceChanges
Nil resource change passed.
%@ <%p> Date = %@
T@"NSDate",&,N
BirthdayEventsGenerationVersion
EKBirthdayListener
Birthdays
v24@?0@"CNContact"8^B16
v24@?0@"EKEvent"8^B16
v32@?0@"NSString"8@"CNContact"16^B24
EventAction
actions
ExceptionDate
SuggestedEventInfo
suggestedEventInfo
birthdayID
needsOccurrenceCacheUpdate
locationPredictionState
invitationChangedProperties
availability
privacyLevel
travelAdvisoryBehavior
responseComment
canForward
disallowProposeNewTime
junkStatus
conferenceURL
contactIdentifier
recurrenceSet
%@ <%p> 
 {title = %@; 
 calendar = %@; 
 alarms = %@; 
 URL = %@; 
 lastModified = %@}
%@ <%p> {%@; 
 location = %@; 
 startLocation = %@; 
 startDate = %@; 
 endDate = %@; 
 allDay = %u; 
 timeZone = %@; 
 travelTime: %ld; 
 recurrences = %@; 
 attendees = %@}
firedTTL
<%@: %p>(transportType = %@, conservativeDepartureDate = %@, conservativeTravelTime = %@, suggestedDepartureDate = %@, estimatedTravelTime = %@, aggressiveDepartureDate = %@, aggressiveTravelTime = %@, routeName = %@, supportsLiveTraffic = %@, currentTrafficDensity = %@, trafficDensityDescription = %@, travelState = %@)
transportType
conservativeDepartureDate
conservativeTravelTime
suggestedDepartureDate
estimatedTravelTime
aggressiveDepartureDate
aggressiveTravelTime
routeName
supportsLiveTraffic
currentTrafficDensity
trafficDensityDescription
travelState
Ti,R,N,V_transportType
T@"NSDate",R,C,N,V_conservativeDepartureDate
Td,R,N,V_conservativeTravelTime
T@"NSDate",R,C,N,V_suggestedDepartureDate
Td,R,N,V_estimatedTravelTime
T@"NSDate",R,C,N,V_aggressiveDepartureDate
Td,R,N,V_aggressiveTravelTime
T@"NSString",R,C,N,V_routeName
TB,R,N,V_supportsLiveTraffic
TQ,R,N,V_currentTrafficDensity
T@"NSString",R,C,N,V_trafficDensityDescription
Tq,R,N,V_travelState
Td,D,N
AUTOMOBILE
TRANSIT
WALKING
BICYCLE
UNKNOWN_TRANSPORT_TYPE
FERRY
RIDESHARE
(unknown: %i)
NotTraveling
Traveling
TravelingSpecificallyToThisDestination
TravelingInDirectionOfThisDestination
TravelingAwayFromDestination
Arrived
(unknown: %lu)
event_id
T@,W,N,V_value
+[EKPersistentObject relations] not implemented in subclass
Subclass %@ of EKPersistentObject did not implement +relations
/BuildRoot/Library/Caches/com.apple.xbs/Sources/EventKit_Sim/EventKit-1336.1/EventKit/iOS/src/EKPersistentObject.m
Trying to set the object ID on an object that has one!
Error checking whether object %@ exists: %@
v16@?0i8B12
Error loading property %@ from daemon: %@
v20@?0i8@"NSObject<NSSecureCoding>"12
'%@' is not a relation of '%@'
Trying to add an object as a related object for property %@ on %@, but it's not a relation or not to-many
Trying to remove an object as a related object for property %@ on %@, but it's not a relation or not to-many
Requested set of relation called %@ on a %@, but that doesn't exist.
Setting a to-many relation requires an NSSet
Setting a relation requires an EKPersistentObject
Error loading number %@ from daemon: %@
v20@?0i8@"NSNumber"12
@16@?0@"NSString"8
Error loading date %@ from daemon: %@
v20@?0i8@"NSDate"12
Error loading string %@ from daemon: %@
v20@?0i8@"NSString"12
@"NSString"16@?0@"NSString"8
Error loading data %@ from daemon: %@
Error loading to-one relation %@ from daemon: %@
v20@?0i8@"CADObjectID"12
Error loading to-many relation %@ from daemon: %@
v20@?0i8@"NSSet"12
Values and Keys arrays must have the same length, but keys has %lu elements and values has %lu.
Error loading default properties for object %@ from daemon: %@
    %@ = %@
%@ <%p> {loaded = %@; dirty = %@}
committedProperties
T@"NSMutableDictionary",&,N,V_committedProperties
entityType
Ti,R,N
T@"EKEventStore",R,N
rowID
(%.4f, %.4f)
TravelingToDestination
TravelingTowardsDestination
Light
Medium
Heavy
ExtremelyHeavy
Unknown status
Not Determined
Restricted
Denied
Authorized Always
Authorized In Use
externalModTag
Event
EKEventModifiedNotification
EKEventNaturalLanguageSuggestedEventExpirationDate
EKEventSuggestedEventSavedFromSyncKey
suggestionInfo
You must use [EKEvent eventWithEventStore:] to create an event
Can't create EKEvent without persistent event
EKEventLocationPrediction
%@:%@
x-apple-calevent
x-apple-calevent://%@/%@?o=%lld
Private Event
birthdayTitle
phantomMaster
birthdayContactIdentifier
%ld hours, %ld minutes
%ld minutes
%@ <%p>
 %@; 
 location = 
%@; 
 structuredLocation = 
%@; 
 startDate = 
%@; 
 endDate = 
%@; 
 allDay = 
%u; 
 floating = 
%u; 
 recurrence = 
%@; 
 attendees = 
%@; 
 travelTime = 
%@; 
 startLocation = 
<%@ rowid=[%d] UUID=[%@] start-date=[%@]>
Modified properties changed: YES. Old modified properties: %u
Modified properties changed: NO
@max.self
v24@?0@"EKCalendarItem"8^B16
This Calendar Cannot Repeat Events on Multiple Months in a Year
This Calendar Cannot Repeat Events on Multiple Days in a Month
This Calendar Cannot Repeat Events Every %ld Years
/BuildRoot/Library/Caches/com.apple.xbs/Sources/EventKit_Sim/EventKit-1336.1/EventKit/iOS/src/EKEvent.m
I screwed up somewhere in date calculation
Normal
Personal
Private
Confidential
/RID=
calshow:%lf?eventid=%d
%@/RID=%llu
sendersEmail
sendersPhoneNumber
occurrenceStartDate
T@"EKCalendarDate",C,N,V_occurrenceStartDate
occurrenceEndDate
T@"EKCalendarDate",C,N,V_occurrenceEndDate
occurrenceIsAllDay
TB,N,V_occurrenceIsAllDay
originalOccurrenceStartDate
T@"EKCalendarDate",C,N,V_originalOccurrenceStartDate
originalOccurrenceEndDate
T@"EKCalendarDate",C,N,V_originalOccurrenceEndDate
originalOccurrenceIsAllDay
T@"NSNumber",C,N,V_originalOccurrenceIsAllDay
requiresDetachDueToSnoozedAlarm
TB,N,V_requiresDetachDueToSnoozedAlarm
clearModifiedFlags
Ti,N,V_clearModifiedFlags
Tq,N
locationIsAConferenceRoom
Td,R,N
startDateIncludingTravel
isStartDateDirty
isEndDateDirty
allowsTravelTimeModifications
T@"EKStructuredLocation",&,D,N
automaticLocationGeocodingAllowed
travelAdvisoryBehaviorIsEffectivelyEnabled
eligibleForTravelAdvisories
T@"EKSuggestedEventInfo",&,N
locationWithoutPrediction
preferredLocationWithoutPrediction
T@"EKStructuredLocation",R,N
allowsProposedTimeModifications
isPhantom
isSignificantlyDetached
isSignificantlyDetachedIgnoringParticipation
T@"NSURL",&,N
externalURL
isEditable
launchURL
pendingParticipationStatus
allowsParticipationStatusModifications
allowsAvailabilityModifications
allowsPrivacyLevelModifications
isAlerted
attendeeComment
attendeeStatus
attendeeProposedStartDate
attendeeDeclinedStartDate
initialStartDate
T@"NSDate",R,C,N
initialEndDate
isMaster
isStatusDirty
isAllDayDirty
startCalendarDateIncludingTravelTime
T@"EKCalendarDate",R,N
durationIncludingTravel
travelRoutingMode
canBeRespondedTo
canDetachSingleOccurrence
startCalendarDate
endCalendarDate
hasPredictedLocation
responseMustApplyToAll
startDateGr
T{?=iccccd},R,N
endDateGr
eventIdentifier
TB,N,GisAllDay
T@"EKStructuredLocation",C,D,N
T@"EKParticipant",R,D,N
isDetached
occurrenceDate
birthdayPersonID
birthdayPersonUniqueID
T@"NSString",R,N,V_birthdayPersonUniqueID
%@ <%p> {UUID = %@; name = %@; email = %@; phone = %@; isSelf = %d}
_isFinished
_isExecuting
_availabilityCache
_startDate
_endDate
_ignoredEventID
_addresses
_resultsBlock
_requestID
_queue
stateChangedNotificationName
dataProtectionObserver
T@"CDBDataProtectionObserver",&,N,V_dataProtectionObserver
stateChangedCallback
T@?,C,N,V_stateChangedCallback
dataIsAccessible
Tq,R,N,V_frequency
Tq,R,N,V_interval
T@"EKRecurrenceEnd",C,N,V_recurrenceEnd
Tq,R,N,V_firstDayOfTheWeek
T@"NSArray",R,N,V_daysOfTheWeek
T@"NSArray",R,N,V_daysOfTheMonth
T@"NSArray",R,N,V_daysOfTheYear
T@"NSArray",R,N,V_weeksOfTheYear
T@"NSArray",R,N,V_monthsOfTheYear
T@"NSArray",R,N,V_setPositions
%@ <%p> {UUID = %@; name = %@; email = %@; phone = %@; status = %ld; role = %ld; type = %ld}
lastModifiedParticipationStatus
calendaritem_owner_id
rootObject
T@"EKObject",R,N,V_rootObject
depth
TQ,N,V_depth
reachedMaxDepth
TB,N,V_reachedMaxDepth
B16@?0@"NSSet"8
B16@?0@"<EKFrozenMeltedPair>"8
@"NSSet"16@?0@"NSSet"8
@16@?0@"NSSet"8
not nil
v24@?0@"EKObject"8^B16
v24@?0@"<EKFrozenMeltedPair>"8^B16
v24@?0@8^B16
<%@ uniqueIdentifier=[%@]>
EKObject Shared Lock %lu
hasOwnerEmailAddress
Invalid day number
weekNumber
%ld%@
%@ <%p> { %@ }
Tq,R,N,V_dayOfTheWeek
Tq,R,N,V_weekNumber
Birthday
CalDAV
Local
Subscription
Exchange
Suggestions
Other
CGColor
colorDisplayOnly
colorString
Invalid entity type passed: %d
Can't directly init a calendar. Use calendarWithEventStore
DEFAULT_TASK_CALENDAR_NAME
default reminders list name
Reminders
DEFAULT_CALENDAR_NAME
Default calendar name
Siri Suggestions
Name of default reminders calendar
#%02X%02X%02X
#%02x%02x%02x
Encountered illegal value for EKCalendarType
%@ <%p> {title = %@; type = %@; allowsModify = %@; color = %@;}
LOCAL
OTHER
BIRTHDAYS
;%d;
x-apple-calendar://%@
You cannot add calendars to the birthday source
Error checking whether calendar has events: %@
Error checking whether calendar has reminders: %@
Not implemented
This stub exists for compatabilitty with OSX
B24@?0@"EKAlarm"8@"NSDictionary"16
v24@?0@"EKAlarm"8^B16
/BuildRoot/Library/Caches/com.apple.xbs/Sources/EventKit_Sim/EventKit-1336.1/EventKit/iOS/src/EKCalendar.m
Error checking whether calendar is managed: %@
v32@?0@"NSString"8@"NSString"16@"NSError"24
TQ,N,V_cachedJunkStatus
T@"EKSource",&,N
allowsContentModifications
subscribed
TB,R,N,GisSubscribed
immutable
TB,R,N,GisImmutable
T^{CGColor=},N
supportedEventAvailabilities
T^{CGColor=},R,N
enabled
TB,N,V_enabled
weekday
Tq,N,V_weekday
startTime
T@"NSDate",&,N,V_startTime
endTime
T@"NSDate",&,N,V_endTime
/System/Library/LocationBundles/RemindersAlerts.bundle
/BuildRoot/Library/Caches/com.apple.xbs/Sources/EventKit_Sim/EventKit-1336.1/EventKit/iOS/src/EKAlarm.m
date != nil
%@ <%p> {triggerDate = %@}
%@ <%p> {triggerInterval = %lf}
location-reminders
This SPI Method is not implemented on iOS,
Please feel free to implement %@ so we can converge EventKit headers.
isSnoozed
TB,N,GisDefaultAlarm
T@"EKObject",R,N
T@"EKCalendarItem",R,N
T@"EKAlarm",&,N
T@"EKStructuredLocation",C,N
soundName
T@"NSString",C,N,V_soundName
T@"NSURL",C,N,V_url
%@ <%p> {UUID = %@; name = %@; email = %@; status = %lu; accessLevel = %lu;}
shareeAccessLevel
invite-accepted
invite-declined
invite-deleted
invite-invalid
invite-noresponse
constraintsDescriptionPath
creatorBundleID
creatorCodeSigningIdentity
showsNotifications
delegatedAccountOwnerStoreID
v20@?0i8Q12
lastSyncError
lastSyncStartDate
lastSyncEndDate
MobileMe
Subcribed
%@ <%p> {UUID = %@; type = %@; title = %@; externalID = %@}
host
port
ownerAddresses
Error: externalIdentificationForAccountID: %@, error: %@
v40@?0@"NSError"8@"NSString"16q24@"NSArray"32
timeOfLastExternalIdentification
managedConfigurationAccountAccess
v16@?0i8i12
timeOfLastExternalIdentificationCache
T@"NSDate",&,N,V_timeOfLastExternalIdentificationCache
cachedHost
T@"NSString",&,N,V_cachedHost
cachedPort
Tq,N,V_cachedPort
cachedOwnerAddresses
T@"NSSet",&,N,V_cachedOwnerAddresses
isDelegate
allCalendars
T@"NSSet",R,N
availabilityCache
T@"EKAvailabilityCache",R,N
displayOrderForNewCalendar
TB,N,GisEnabled
isFacebookSource
supportsCalendarCreation
constraints
T@"EKSourceConstraints",R,N
isWritable
syncs
T@"NSNumber",C,N
wantsCommentPromptWhenDeclining
serverHost
serverPort
wasMigrated
supportsAlarmAcknowledgedDate
TB,N,V_isFacebook
usesSelfAttendee
TB,N,V_snoozeAlarmRequiresDetach
personaIdentifier
isSyncing
T@"NSString",&,N,V_calendarName
TB,N,V_allDay
eventID
T@"NSString",&,N,V_eventID
TI,N,V_changeType
TB,N,V_titleChanged
T@"NSNumber",&,N,V_createCount
T@"NSNumber",&,N,V_updateCount
T@"NSNumber",&,N,V_deleteCount
email
phone_number
proposedStartStatus
EKTravelTimeErrorDomain
v24@?0@"CalRoute"8@"NSError"16
MKPlacemark
MKMapItem
MKDirectionsRequest
MKDirections
MKErrorUnknown
MKErrorServerFailure
MKErrorLoadingThrottled
MKErrorPlacemarkNotFound
MKErrorDirectionsNotFound
EKTravelLookupErrorUnknown
v24@?0@"MKETAResponse"8@"NSError"16
v24@?0@"CLPlacemark"8@"NSError"16
CLGeocoder
v24@?0@"NSArray"8@"NSError"16
RTRoutineManager
CLLocation
rtPredictedLocationOfInterest
T@"RTPredictedLocationOfInterest",R,N,V_rtPredictedLocationOfInterest
customLabel
T@"NSString",R,C,N,V_customLabel
mapItemName
T@"NSString",R,C,N,V_mapItemName
addressCountryCode
T@"NSString",R,C,N,V_addressCountryCode
addressThoroughfare
T@"NSString",R,C,N,V_addressThoroughfare
addressLocality
T@"NSString",R,C,N,V_addressLocality
geoLocation
%4f, %4f
contactLabel
ab://
ab\://
%@ <%p> {title = %@; address = %@; geo = %@; abID = %@; routing = %@; radius = %f;}
geo:%f,%f
isStructured
hasKnownSpatialData
imprecise
TB,N,GisImprecise,V_imprecise
predictedLOI
T@"EKPredictedLocationOfInterest",&,N,V_predictedLOI
prediction
TB,R,N,GisPrediction
T@"CLLocation",&,N
last_modified
ResourceChange
x-apple-eventkit
Reminder
RecurrenceRule
Attendee
Organizer
InviteReplyNotification
ResourceChangeNotification
SuggestionNotification
CategoryLink
Participant
temporary
%@:///%@/%@%d
entityName
isTemporary
stringRepresentation
URIRepresentation
dictionaryRepresentation
CADObjectID
T@"CADObjectID",R,N
sharedEventStore
T@"EKEventStore",R,N,V_sharedEventStore
endDate is nil
occurrenceCount == 0
occurrenceCount
%@ <%p> { UNTIL=%@ } 
%@ <%p> { COUNT=%lu }
T@"NSDate",R,N,V_endDate
TQ,R,N,V_occurrenceCount
Attachment
ClientLocation
StartLocation
Contact
startTimeZone
endTimeZone
sequence
hasRecurrences
createdByDisplayName
createdByAddress
createdByFirstName
createdByLastName
sharedItemCreatedTz
modifiedByDisplayName
modifiedByAddress
modifiedByFirstName
modifiedByLastName
sharedItemModifiedTz
TB,N,GisDefaultAlarmRemoved
<%@ %p> %@
toMany
inversePropertyNames
ownsRelatedObject
inversePropertyIsApplicable
T@?,C,N,V_inversePropertyIsApplicable
file
fileName
fileFormat
v20@?0i8@"NSSecurityScopedURLWrapper"12
XPropertiesData
URLForPendingFileCopy
%@ <%p> {%@; URL:%@; localRelativePath:%@; filename:%@; fileFormat:%@; fileSize:%@; UUID: %@
localURL
T@"NSNumber",R,N
Usage of this initializer is forbidden.
B24@?0@"EKCalendar"8@"NSDictionary"16
visibilityChangedNotificationName
T@"EKEventStore",&,N,V_eventStore
visibilityChangedCallback
T@?,C,N,V_visibilityChangedCallback
notificationListener
T@"CalDarwinNotificationListener",&,N,V_notificationListener
visibleCalendars
visibleCalendarsForAllIdentities
invisibleCalendarsForAllIdentities
invisibleCalendars
T@"NSArray",&,N,V_invisibleCalendars
limitedToSource
T@"EKSource",&,N,V_limitedToSource
EKEventStoreChangedNotification
EKEventStoreChangedObjectIDsUserInfoKey
EKEventStoreChangeTypeUserInfoKey
EKEventStoreTimeZoneChangedNotification
EKEventStoreCalendarsChangedNotification
EKEventStoreClosedNotification
EKEventStore_DistributedNotification_AutomaticGeocodingAllowedChanged
EKEventStoreIdleChangeTrackingClientWasPurgedNotification
x-apple-reminder
x-apple-calendar
weakEventStore
unsafeRawPointer
T^v,R,N
Task
com.apple.eventkit.eventstore.calendars
com.apple.eventkit.eventstore.registered
com.apple.eventkit.eventstore.unsaved
com.apple.eventkit.eventstore.dbchanged
com.apple.eventkit.eventstore.constraintsCache
com.apple.eventkit.eventstore.notificationCollectionCache
kCalTimedDefaultAlarmChangedNote
kCalAllDayDefaultAlarmChangedNote
v20@?0B8@"NSError"12
v12@?0C8
v20@?0i8@"NSDictionary"12
v28@?0i8@"NSArray"12@"NSArray"20
v32@?0@"NSNumber"8Q16^B24
B24@?0@"EKSource"8@"NSDictionary"16
/BuildRoot/Library/Caches/com.apple.xbs/Sources/EventKit_Sim/EventKit-1336.1/EventKit/iOS/src/EKEventStore.m
Invalid entity type passed
com.apple.calendar.EventKit.logMainThreadWarning
com.apple.reminders
com.apple.Preferences
com.apple.mobilemail
com.apple.AdSheetPhone
com.apple.AdSheetPad
com.apple.datadetectors.DDActionsService
com.apple.reminders.RemindersEditorExtension
com.apple.reminders.RemindersActionExtension
com.apple
*********** WARNING ***********
A process is fetching data from calaccessd on the main thread. This is a performance bug.
Please file a radar and include the following backtrace.
***********
Nil URI passed
%@: path is empty or nil
ReminderCreated
isLocationAlarm
isVehicleAlarm
hasAction
externalIdentifier must be an instance of NSString
externalIdentifier is empty
predicate is nil
predicate is not a calendar item predicate created through EKEventStore
predicate is not a reminder predicate created through EKEventStore
v20@?0i8B12B16
-[EKEventStore contactIdentifierForCalendarItem:]_block_invoke
-[EKEventStore addContactIdentifier:forCalendarItem:]_block_invoke
-[EKEventStore removeContactIdentifier:forCalendarItem:]_block_invoke
-[EKEventStore countOfRemindersWithContactIdentifier:]_block_invoke
-[EKEventStore remindersWithContactIdentifier:]_block_invoke
v20@?0@"NSArray"8i16
-[EKEventStore suggestedEventCalendar]_block_invoke_2
-[EKEventStore insertSuggestedEventCalendar]_block_invoke_2
-[EKEventStore insertSuggestedEventCalendar]_block_invoke
-[EKEventStore removeSuggestedEventCalendar]_block_invoke_2
-[EKEventStore confirmSuggestedEvent:]
-[EKEventStore acceptSuggestedEvent:]
-[EKEventStore deleteSuggestedEvent:]
SGSuggestionsService
-[EKEventStore naturalLanguageSuggestedEventCalendar]_block_invoke_2
nil notification passed in to [EKEventStore saveNotification:commit:error:]
Nil notification colleciton passed in to [EKEventStore saveNotificationCollection:commit:error:]
B24@?0@"EKResourceChange"8@"NSDictionary"16
v36@?0i8@"NSArray"12@"NSArray"20@"NSArray"28
Object is not an EKPersistentObject
Unknown entity name %@ for objectID: %@ with entity type: %d
Object is not an EKObject
Can't add deleted or inserted object to update set
Attempt to insert a nil object.
Attempt to insert something that is not a EKPersistentObject.
Attempt to insert an object that belongs to a different event store.
Attempt to delete a nil object.
Attempt to delete something that is not a EKPersistentObject.
v24@?0i8B12@"NSDictionary"16
predicate was not created with EKCalendarStore methods
FetchEventsMatchingPredicate
block is nil
Attempted to cancel a fetch request with an invalid fetch identifier
%@: startDate is nil
%@: endDate is nil
v20@?0i8q12
v48@?0i8B12q16@"NSArray"24@"NSArray"32@"NSArray"40
Constraints data size is wrong.  Your version of EventKit is incompatible with the running version of calaccessd.
reminderStoreContainerTokenProvider
T@?,C
eventStoreChangedDistributedNotificationName
insertedObjects
T@"NSMutableSet",&,N,V_insertedObjects
deletedObjects
T@"NSMutableSet",&,N,V_deletedObjects
updatedObjects
T@"NSMutableSet",&,N,V_updatedObjects
objectsPendingCommit
T@"NSMutableSet",&,N,V_objectsPendingCommit
database
T@"EKDaemonConnection",&,N,V_database
lastDatabaseNotificationTimestamp
Td,N,V_lastDatabaseNotificationTimestamp
TI,N,V_flags
calendarSourcesAndDefaultsQueue
T@"NSObject<OS_dispatch_queue>",R,N,V_calendarSourcesAndDefaultsQueue
registeredQueue
T@"NSObject<OS_dispatch_queue>",R,N,V_registeredQueue
unsavedChangesQueue
T@"NSObject<OS_dispatch_queue>",R,N,V_unsavedChangesQueue
dbChangedQueue
T@"NSObject<OS_dispatch_queue>",R,N,V_dbChangedQueue
constraintsCacheQueue
T@"NSObject<OS_dispatch_queue>",R,N,V_constraintsCacheQueue
notificationCollectionCacheQueue
T@"NSObject<OS_dispatch_queue>",R,N,V_notificationCollectionCacheQueue
T@"EKDataProtectionObserver",&,N,V_dataProtectionObserver
_cachedConstraints
T@"NSMutableDictionary",&,N,V__cachedConstraints
_cachedNotificationCollections
T@"NSMutableDictionary",&,N,V__cachedNotificationCollections
reminderStore
T@"EKReminderStore",R,N,V_reminderStore
reminderSourceIDToEventSourceIDMapping
T@"NSDictionary",&,N,V_reminderSourceIDToEventSourceIDMapping
eventSourceIDToReminderSourceIDMapping
T@"NSDictionary",&,N,V_eventSourceIDToReminderSourceIDMapping
reminderSourceMapLock
T@"NSObject<OS_dispatch_queue>",&,N,V_reminderSourceMapLock
registeredObjects
T@"NSMutableDictionary",&,N,V_registeredObjects
defaultCalendarForNewEvents
inboxRepliedSectionItems
suggestedEventCalendar
naturalLanguageSuggestedEventCalendar
allowsBirthdayModifications
databasePath
T@"NSString",R,C,N
defaultTimedAlarm
T@"EKAlarm",R,N
defaultAllDayAlarm
unacknowledgedEventCount
notifiableEventCount
isDataProtected
calendarDataContainerProvider
T@"<CalCalendarDataContainerProvider>",R,N,V_calendarDataContainerProvider
connection
T@"EKDaemonConnection",R
eventNotifications
eventNotificationCount
eventStoreIdentifier
delegateSources
T@"EKCalendar",R,&,N
T@"EKCalendarItem",R,&,N
T@"NSURL",R,C,N
TI,R,N
T@"NSString",&,D,N
T@"NSURL",&,D,N
TB,D,N,GisCurrentUser
[%@] startDate: [%@] endDate: [%@] duration: [%@ seconds] conflictedParticipants count: [%@]
conflictedParticipants
T@"NSArray",&,N,V_conflictedParticipants
%@ <%p> {UUID = %@; type = %@; title = %@; externalId = %@}
reminderSource
T@"EKFrozenReminderSource",&,V_reminderSource
,%s%ld%s
%s%ld%s
isDirty
com.apple.eventkit
mailto:
%@%@
EKUIAttendeeUtils_AttendeeHasResponded
<%@: %p; Conflicts: %lu Out of total: %lu>
conflictingDates
T@"NSArray",&,V_conflictingDates
conflictingEvents
T@"NSArray",&,V_conflictingEvents
needsActionEvents
T@"NSArray",&,V_needsActionEvents
totalOccurrencesInSeries
TQ,V_totalOccurrencesInSeries
totalConflictsInSeries
TQ,V_totalConflictsInSeries
totalConflictingEvents
TQ,V_totalConflictingEvents
totalNeedsActionEvents
TQ,V_totalNeedsActionEvents
conflictPeriodForSeries
T@"CalDateRange",&,V_conflictPeriodForSeries
span
T@"NSDate",&,N,V_creationDate
T@"EKAvailabilitySpan",&,N,V_span
EventKit
Availability
UIAvailabilitySearch
T@"NSMutableArray",&,N,V_conflictedParticipants
com.apple.CoreRoutine.LocationOfInterest
GEOMapService
v24@?0@"<GEOMapItem>"8@"NSError"16
Swim Lesson
Poker Night
Book Club
Staff Meeting
v32@?0@"NSString"8@"NSDictionary"16^B24
%@ CONTAINS SELF
T@"EKPersistentSource",&,D,N
TB,D,N,GisColorDisplayOnly
T@"NSURL",C,D,N
T@"NSSet",C,D,N
published
TB,D,N,GisPublished
Error initializing the data detector.
Unexpected frequency value loaded from database: %d
Unexpected CalDayOfWeek: %d
Unexpected EKWeekday: %d
The given source's 'accountID' is nil.  The availability cache will not be able to give availability data.  Cache: [%@]
[%@] initialized.
Gathering cached availability for address: [%@]
No cached spans found for address: [%@].  Ignored event ID: [%@].  Will send out remote fetch for availability.
Found stale cached spans for address [%@] in range with start date [%@] and end date: [%@].  Will send out remote fetch for availability.
Cache hit.   freshly cached spans found.
This availability cache's source is invalid.  Will not execute the availability request.  Cache: [%@]
This availability cache's source does not support availability requests. Will not execute the availability request.  Source account ID: [%@]. Cache: [%@].
Invalid start and end dates given.  Will not execute the availability request.
No addresses given in the availability request.  Completing quickly.
A client requested availability between start date [%@] and end date [%@].  Ignored event ID: [%@].  Addresses: [%@]
[%lu] local cached spans were found for addresses: [%@].  Ignored event ID: [%@].  Sending these results immediately to the requesting client.
Sending network request for addresses: [%@].  Start date: [%@].  End date: [%@]  Ignored event ID: [%@].  Account ID: [%@]
Availability request with ID [%@] received a response with results: [%@]. Elapsed milliseconds: [%f]
Availability request with ID [%@] completed with error: [%@].  Total elapsed milliseconds: [%f]
Cancelling availability request with request ID: [%@]
No spans were returned for address [%@] and ignored event ID [%@]
Failed to deserialize structured data. Error: %@
Failed to serialize structured data dictionary: %@. Error: %@
Error creating alarm: [%@]
Error creating attendee: [%@]
Error creating recurrence rule: [%@]
EKCalendarNotificationReference: failed to get persistent object for notification
After generating a notification, it was observed that its backing data was removed from the database.  Clearing the notification.  Object ID: [%@]  Generated notification: [%@]
Attempting a cross-store copy for object of type %@. myEventStore = %p, other = %p
Nil rowID passed in to createOwnerIDWithRowID:objectType:
Invalid owner object type. Type: %@
Invalid rowID passed in. rowID: %@
Connection interrupted!
Error setting initialization options: %@
Will not set a travel lookahead interval of less than 0.  Given value: [%f]
Saving of invisible calendars commencing.
No calendar identifier found.  Will not be able to save all invisible calendars.  Calendar: [%@]
Saving calendar identifier [%@] of invisible calendar
Saving of invisible calendars completed.
Error archiving contact by email predicate. Error: %@.
Attempting to set the same selfAttendee using a different EKAttendee instance. There is no work to be done, but if the passed in instance had changes then they will not be saved when this calendar item is saved.
Changing timeout in [%@] from [%@] to [%@].
Set 'purgingAllowed' from [%@] to [%@] in [%@]
No existing store was found in [%@].  Created event store: [%@].
The purging timeout is 0.  Will not set up an idle timer for [%@].
There is no event store being cached at the moment.  Will not set up an idle timer for [%@].
Purging is disallowed.  Will not set up an idle timer for [%@].
No existing timer found in [%@].  Will create a timer.
Idle timer fired in [%@].
Clearing event store: [%@] in [%@]
Setting the timer's timeout to [%@] seconds and its leeway to [%@] seconds.  The timer will fire around [%@] in [%@]
Uninstalling dispatch timer in [%@]
Adding persistent notification observers for [%@]
Removing persistent notification observers for [%@]
[%@] received notification: [%@]
Ignored low-level [%@] notification in [%@].
Removing transient event store change observer for event store [%@] in [%@]
Firing changed block from [%@]
Error saving event for reporting as %@. Error = %@
(cachedJunkStatus) junkStatus was set on the event to %d
(cachedJunkStatus) event was just created event is not junk
(cachedJunkStatus) event is not junk because it was either organized by me or has no attendees
(cachedJunkStatus) my status on the event is accepted or tentative so the event is not junk
(cachedJunkStatus) junk status for the invitation is %@
(couldBeJunk) event could be junk [%@]
(couldBeJunk) event is not junk [%@]
(junkStatusForInvitation) junk reporting is not supported on the server
(junkStatusForInvitation) junk reporting is supported on the server
(junkStatusForInvitation) our contacts reputation check returned that we should %@ the organizer
(junkStatusForInvitation) our eventstore reputation check returned that we should %@ the organizer
Unknown CADFilter subclass: %@
A request to search for more times when all attendees can attend was made.
A request to search for more times when some attendees can attend was made.
Searching reset with organizerAddressForNewlyScheduledEvent [%@] and event [%@]
No event given.  Will not search for alternative times.
The event's source does not support availability requests.  Will not issue search for alternative times.
The event's start date is the same as its end date.  Will not issue search for alternative times.
The event is an all-day.  This is currently not supported.  Will not issue search for alternative times.
Starting original conflict detection - event start date: [%@] event end date: [%@] ignored event ID: [%@] source: [%@]
Extracting attendees for original conflict detection.
Will not consider attendee for conflict detection because it is a room: [%@]
No participant address found for participant: [%@].  Will not search use this participant to search for alternative times.
The event has a dirty date property, so we'll forcibly request availability for this participant: [%@]
Attendee has declined: [%@]
Attendee needs to respond: [%@]
Adding participant with address [%@] to the list of attendees to be included in conflict resolution.  Participant: [%@]
Could not find the organizer's address.  This can sometimes happen if the event is being scheduled for the first time.  Organizer: [%@]
No 'organizerAddressForNewlyScheduledEvent' given.  The organizer for this event is unknown and conflict resolution will likely be incorrect and irrelevant.
Adding organizer with address [%@] to the list of attendees to be included in conflict resolution.  Participant: [%@]
The event's dates have not been dirtied and there are no addresses collected for looking up availability information for the event's original time span.
Detected a conflict.  [%@] attendees have declined.  Will perform conflict resolution by searching for time slots in the future. 
No conflicts detected, but noConflictFound flag set. Will attempt to perform conflict resolution.
No conflicts detected.  Will not attempt to perform conflict resolution.
We need to figure out the availability status of some attendees in order to complete conflict detection.  Attendees: [%@].
self went away.  Returning early.
The availability operation went away.  Returning early.
Error encountered while searching.  Error: [%@]
Could not find participant.  Will not count as busy.  Address: [%@]
This participant is busy during the event's time range: [%@]
This participant is completely free during the event's time range: [%@]
Including declined participants in the list of participants with conflicts.
Conflict detection complete.  Conflicted participants: [%@]
Participants with conflicts found.  Will search for other time slots.  Participants with conflicts: [%@]
No participants with conflicts found.  Will not continue on by searching for other time slots.
Sending off availability request operation for execution: [%@]
A search attempt was requested.
There are no more search attempts remaining.  Will not search.
There is an availability request in progress.  Will not search.
Preparing to search for alternate times in order to proceed with conflict resolution.
The availability search operation went away.  Returning early.
This availability search operation was cancelled: [%@]
Operation resulted in an error.  Re-trying search.  Error: [%@]
Searching for time slots between start date [%@] and end date [%@] with ignored event ID [%@] and addresses [%@]
Resetting search fallback numbers.  Current remaining search attempts: [%@].  Current availability search duration multiplier: [%@]
Resetting of search fallback numbers complete.  New remaining search attempts: [%@].  New availability search duration multiplier: [%@]
No 'state changed' callback found.  Will not send state changed information.  State: [%@]
Sending state change.  State: [%@]
Transitioning to the [%@] state and attempting a search.
Processing results - start date: [%@] end date: [%@] results: [%@]
Found [%@] free times and [%@] non-free times.
Work remains, but there are no more remaining search attempts left.  Search exhausted.
Search has not progressed and no more work remains.  This is an invalid state, as there should always be work to do until we've seen search results or there are no more search attempts left.
There are [%@] remaining search attempts left.  Continuing search.
Halting search.
No leftover spans found for latest date: [%@]
No participant found for participant with address: [%@].  Will not generate time spans for this participant's availability information.
This span's start date is equal to its end date: [%@].  Will not consider this span in alternative time calculations.
Could not find a time span that contains date: [%@]
No replacement spans found.
Validating [%@] spans.
Found span whose start date doesn't match previous span's end date.  Previous lastEndDate: [%@].  Cached span: [%@]
Span's start and end date is the same: [%@]
Span's start date is after its end date: [%@]
Contiguous free spans exist.  Last inspected span: [%@].  This span: [%@]
Time gaps exist in the spans range: [%@]
A zero-duration span exists in the spans range: [%@]
At least one span's start date comes after its end date in the spans range: [%@]
At least two contiguous spans are marked as being free in the spans range: [%@]
Gathering freshly cached spans between [%@] and [%@]
There were no valid non-overlapping results %@
We are trying to insert a span with no end date (%@). current dates: (%@)
Inserting spans [%@].
ERROR: No span given to insert results.
ERROR: No valid span given to insert results.
Clamping date range for spans between [%@] and [%@]
Clamping date range for spans.  Original start date: [%@].  Original end date: [%@].  New start date: [%@].  New end date: [%@].
There is only one span.  Created a new span and set its type to: [%@]
Clamped the spans.  firstTruncatedSpan: [%@].  lastTruncatedSpan: [%@]
No clamping needed.
Error fetching changed object IDs: %@
Unsupported entity type: %d
Invalid entity type: %d
Failed to fetch any event sources despite having access to events. Skipping reminder sources and returning 0 sources
Failed to fetch any reminder sources despite having access to reminders. Skipping event sources and returning 0 sources
Event or reminder source without ID: eventSourceID=%@, reminderSourceID=%@, eventSource=%@, reminderSource=%@
Object %@ has no unique identifier: %@
CADEventPredicate
CADNotifiableEventsPredicate
CADEventsForAssistantSearchPredicate
CADNotificationCenterVisibleEventsPredicate
CADUnacknowledgedEventsPredicate
CADUnalertedEventsPredicate
CADRespondedEventsPredicate
CADUpcomingEventsPredicate
EKMasterEventsPredicate
CADTravelEventsPredicate
CADUpNextEventsPredicate
CADContactEventsPredicate
CADEventCreatedFromSuggestionPredicate
EKReminderPredicate
EKScheduledReminderPredicate
CADCalendarItemsWithExternalIdentifierPredicate
CADPropertySearchPredicate
CADEventTimeWindowPredicate
CADNaturalLanguageSuggestedEventsSearchPredicate
Unexpected predicate class: %@
Unknown Predicate Search
predicateClass=%@; predicateFormat=%@
EKPredicateSearch
error=%i; foundItems=%lu
Error (%d) in reply block for CADDatabaseFetchCalendarItemsWithPredicate attempt %d/%d
All retries exhausted for CADDatabaseFetchCalendarItemsWithPredicate
%@: failed to register result object with objectID: %@
Monitor starting up.
Monitor shutting down.
Data protection is on. Unable to check for updates.
Sync running, but we've been explicitly told to ignore that and refresh anyway.
Sync running. Waiting for it to finish before checking for updates.
Notification monitor wants to reload notifications. Will fetch notification references from the event store as a result.
Set notification references to %@.
Current notification count: %{public}@. Last event notification count: %{public}@.
Is initial check: %{public}@.
Count changed to %{public}@ events, Notifying.
Application badges are not supported on this platform. Will not notify.
Posting notification count changed notification.
Resetting timer.
Data protection is on. Unable to reset timer.
Next expiration fire time will be %@.
Database changed.
Notification count changed externally.
Alert pref changed.
Expiration timer fired.
Fetching event notifications from event store: %@.
Fetched event notifications from event store: %@.
Faulted in notification: %@.
Sync timer fired.
Sync started. Suppressing notification monitor checks while it runs.
Sync done, %@ changes.
Will not set an availability freshness window of less than 0.  Given value: [%f]
Will not set an overridden travel advisory hypothesis conservative travel time of less than 0.  Given value: [%f]
Will not set an overridden travel advisory hypothesis estimated travel time of less than 0.  Given value: [%f]
Will not set an overridden travel advisory hypothesis aggressive travel time of less than 0.  Given value: [%f]
Already active.  Will not activate [%@]
Already inactive.  Will not deactivate [%@]
nil 'hypothesis' received in [%@]
Updating [%@] based on new hypothesis. now: [%@] startOfLeaveNowPeriod: [%@] startOfRunningLatePeriod: [%@]
Refreshing [%@]
Period refreshed from [%@] to [%@] in [%@]
Calculated next refresh date of [%@] in [%@]
[%@] is before now.  Will not set up a timer to refresh [%@]
Timer fired in [%@].
Unexpected nil self in birthday update block
Not updating birthday events -- need reset? [%{BOOL}d] birthdays enabled? [%{BOOL}d]
BirthdayEventsGenerationVersion (%d) does not match current version (%d). Forcing regeneration.
EKBirthdayListener unable to delete birthday calendar %@, %@
EKBirthdayListener unable to commit birthday calendar deletion %@
Creating Birthday Calendar
EKBirthdayListenerFailed to save calendar to event store with error: %@
EKBirthdayListener unable to save event %@, %@
Resetting All Birthdays in Store
EKBirthdayListener unable to commit to store %@
No birthday calendar found when trying to add birthdays
EKBirthdayListener unable to remove event %@ %@
Pushed properties to push again: %{public}@ for %@
+alternateUniverseClass called on a class that does not implement it (%{public}@)
Error pushing dirty properties for %{public}@ to daemon: %{public}@
Failed to take value for related object with key %@
Could not convert dictionary into EKObjectID. entityType = %@, rowID = %@
nil 'string' given.  Will not find a corresponding travel state.
Unknown travel state given: [%@].  Will not find a corresponding travel state.
RIDESHARE is unsupported in geoTransportTypeAsString. Returning nil.
nil 'string' given.  Will not find a corresponding transport type.
Unknown transport type given: [%@].  Will not find a corresponding transport type.
nil 'string' given.  Will not find a corresponding traffic density.
Unknown traffic density given: [%@].  Will not find a corresponding traffic density.
Tried to set proposed start date on invalid event: %@
Beginning location prediction for event: %@
Failed to predict a structured location for event: %@ : %@
Returning location prediction [%@] for event: %@
Setting predicted location title to %@ for the event %@
Updating modified properties for event: %{public}@.
Updating modified properties for detached items: %@.
Updated modified properties: %u. %{public}@. Clear modified flags: %lu. Event: %{public}@
Event %{public}@ is not significantly detached because it is not detached
Event %{public}@ is significantly detached because its master is a phantom
Event %{public}@ is significantly detached because its start date differs
Event %{public}@ is significantly detached because its duration differs
Event %{public}@ is significantly detached because its location differs
Event %{public}@ is significantly detached because its title differs
Event %{public}@ is significantly detached because its status differs
Event %{public}@ is significantly detached because it is externally organized and its participation status differs
Event %{public}@ is significantly detached because its organizer differs
-[EKEvent updateEventToEvent:] is about to save itself [%@] with EKSuggestedEventInfo [%@]
-[EKEvent updateEventToEvent:] failed to save with error: %@
-[EKEvent updateEventToEvent:] saved itself correctly [%@]
-[EKEvent updateEventToEvent:] was given a nil event and will CANCEL itself [%@] with EKSuggestedEventInfo [%@]
-[EKEvent updateEventToEvent:] CANCEL finished correctly [%@], now attempting to save
-[EKEvent updateEventToEvent:] CANCEL failed with error: %@
-[EKEvent updateEventToEvent:] was called on an event without a EKSuggestedEventInfo: %@
Operation was cancelled.  Will not return results.  Operation: [%@]
No results block.  Will not pass along results [%@] for operation: [%@]
Finishing operation with error: [%@].  Operation: [%@]
Data protection state changed.  New 'dataIsAccessible' state: [%@].
Unexpected CalAttendeeStatus: %d
Unexpected EKParticipantStatus: %d
Reached maximum depth while validating root object %{public}@
Object of type %{public}@ (uniqueIdentifier = %{public}@) failed validation while validating relation %{public}@.
Property %@ was unavailable on backingObject %@. %@
Unable to set single changed value %@. Property %@ was unavailable on backingObject %@. %@
Unable to add multi changed object values %@. Property %@ was unavailable on backingObject %@. %@
Unable to remove multi changed object values %@. Property %@ was unavailable on backingObject %@. %@
Failed to get melted object for frozen object related by key %@. Event store is %@
Missing corresponding added object with semantic identifier %@ for relation key %{public}@.
All EKObjects need to have a unique identifier but %@ does not. %@
Error trying to report calendar invite as junk. Error: %@
Unexpected CalShareeStatus: %d
Unexpected EKShareeStatus: %d
Unexpected CalShareeAccessLevel: %d
Unexpected EKShareeAccessLevel: %d
Unexpected EKPrivacyLevel: %d
Unexpected CalEventPrivacyLevel: %d
Ignoring attempt to set allowsTasks to %d on source %{public}@. Forcing to NO
Source has more than one calendar with the same external Id: %@
Received request to find travel time from %@ to %@ by %@ arriving on date %@
Calculating travel time from %@ to %@ by %@ on date %@
Didn't find route or error for routeType %@
Found no travel times, only errors.  Trying again with start as current location
Found no travel times, only errors.  Bailing.
Finished finding travel times with results %@
Getting directions %@ with request %@
Travel time lookup failed with error code %@: %@
Found travel time in seconds %lul
Updating start location with current location information
Updated location to %@
Failed to get placemark with error %@
Making sure that %@ has coordinates
%@ already has coordinates
%@ is for current location.  Let MapKit handle
%@ doesn't have coordinates
%@ has no address
%@ has an address.  Looking up coordinates
Found coordinates for address. Updated location to %@
Couldn't find coordinates for address for %@
Couldn't find coordinates for address for %@ and failed with error %@
Wrong scheme for EKObjectID URL; got %@, expected %@; will return nil for objectIDWithURL:
EKObjectID URL has no path
URL with unrecognized ID type %c
EKObjectID URL has no entity name
Unknown entity name %@ with URI %@
Unable to write temporary file
Unable to read file at %@: error = %@
Could not get security scoped local URL wrapper for attachment, error = %{public}@, attachment ID = %{public}@
Underlying calendar visibility preferences changed.  Notifying client of [%@]
No calendar identifier found.  Will not be able to find all visible calendars.  Calendar: [%@]
No calendar identifier found.  Will not be able get all deselected calendar identifiers.  Calendar: [%@]
[%@] initialized in process: [%@]
Data is protected.  Will not say that protected data became available.
Data is not protected.  Saying that protected data became available.
Initialized event store with access to events only, initialization options include allowing events only = %{public}@, current process disallows reminders by default = %{public}@
Error from daemon when saving pending database upon dealloc: %@
Error closing the database: %@
Error getting changes sequence number from daemon: %@
Error getting changes since sequence number from daemon: %@
No completion block given.  Will not validate object IDs: [%@]
No object IDs given.  Will not validate object IDs: [%@]
Error validating object IDs from daemon: %@
Error getting changed object IDs since timestamp %f from daemon: %@
EventKit received changed object ID with rowid 0 of entity type %li.
Error getting UUID: %@
Error in call to _saveWithoutNotify: %@
Attempted to cache a source before _sources was initialized. Ignoring.
Error getting sources: %@
Error getting deletable sources: %@
Error getting granted delegates list: %@
Error updating granted delegate: %@
Error clearing calendar %@ from notification center: %@
Attempted to cache a calendar before _calendars was initialized. Ignoring.
Error getting all calendars: %@
Error getting deletable calendars: %@
Error getting event with identifier %@: %@
Malformed event URI (%@) passed to _eventWithURI. Expected scheme: %@
Error getting calendar item with URI %@: %@
Error checking for existence of event in eventForUID: %@
Error getting event with uniqueId %@: %@
Error getting all events with uniqueId %@: %@
Error setting invitation status for event: %@
Error importing ICS data into calendars %@: %@
Error getting next assignable color: %@
Error getting default local calendar: %@
Non-delegate sources do not have their own default calendar.  Pass nil to get the default across all non-delegate sources
Error getting default calendar for new events: %@
You cannot set a default calendar on a non-delegate source.  Pass nil to set the default across all non-delegate sources
A delegate source's default calendar must be one of its own calendars.
Error getting default calendar for new reminders: %@
Malformed event URI (%@) passed to _reminderWithURI. Expected scheme: %@
Malformed event URI passed to _reminderWithURI: %@
Error getting calendar item with UUID %@: %@
%ld events were found for predicate: %@
Error fetching properties %@ for reminders: %@
Error getting closest occurrence date for event with row ID %i: %@
Error asking daemon if events have occurrences after date: %@
Malformed calendar URI passed to calendarWithExternalURI: %@
%s: Could not fetch contact identifiers with error %@
%s: Could not add contact with error %@
%s: Could not remove contact with error %@
Error asking daemon whether OC occurrences are being generated: %@
Error getting occurrence cache occurrences for calendars %@ from daemon: %@
Error getting occurrence cache counts for calendars %@ from daemon: %@
Error getting scheduled task cache days and task counts from daemon: %@
Sending request to rebuild the occurrence cache.
The occurrence cache was rebuilt successfully.
The occurrence cache was not rebuilt successfully.  Error: [%@]
%s: Failed to get the Found in Mail calendar with error %@
%s: Could not insert the Found in Mail calendar because it already exists.
%s: Could not insert the Found in Mail calendar with error %@
%s: Could not remove the Found in Mail calendar with error %@
%s not available on this platform
Error determining if the suggested event calendar is modifiable: %@
%s: Failed to get the Natural Language Suggestions calendar with error %@
Error getting unacknowledged event count from daemon: %@
Error getting notifiable event count from daemon: %@
Error getting earliest expiring notifiable event end date after date from daemon: %@
Error getting shared calendar invitations for entity types %i from daemon: %@
Error getting resource changes: %@
EKEventStore: Can't get event notification information. Error: [%@]
EKEventStore: Can't get event notification count. Error: [%@]
Error getting replied event invitation information: %@
Error refreshing source: %@
Unknown entity type: %d for object with rowid: %d
No object ID provided.  Will not find out if the object exists.
Error encountered while checking for existence of object with ID: [%@]  Error: [%@]
Error rolling back event store: %@
Attempting to commit changes in event store: [%@].
Client not allowed to modify the calendar database.  Will not commit.
No changes detected.  Calling commit successful.
Requesting insertion of object with temporary obejct IDs: [%@]
Pushing dirty properties was not successful.  Will not complete commit.  Object: [%@].  Error: [%@]
Requesting deletion of objects with IDs: [%@]
Error committing event store: [%@]
Enumeration attempt for events that were fetched is complete.  Predicate: [%@]
Error fetching alarm with UUID.  UUID: [%@].  Error: [%@]
Error getting alarm occurrences in range: %@
Error getting location-based alarms in range: %@
Error getting vehicle trigger alarms in range: %@
%@: Error building fetch predicate for 'Time to Leave' events. Start date is nil.
%@: Error building fetch predicate for 'Time to Leave' events. End date is nil.
%@: Error building fetch predicate for 'Up Next' events. Start date is nil.
%@: Error building fetch predicate for 'Up Next' events. End date is nil.
Error registering for detailed change tracking: %@
Error unregistering for detailed change tracking: %@
Error fetching changed object IDs since token %lu: %@
Error marking changed object IDs as consumed: %@
Error clearing superfluous changes: %@
Cannot get source constraints for source %{public}@ because we don't have access to the entity type it supports
Error getting constraints for source: %@
Constraints data size is wrong.  Your version of EventKit is incompatible with the running version of calaccessd.
Error getting notificationCollection for source: %@
NotificationCollectionID requested when it has not yet been created. SourceID: %@
Error checking whether to whitelist email address: %@
Error checking whether to whitelist phone number: %@
Posting synthetic route hypothesis for event external url = %{public}@, route hypothesis = %@
Could not post snythetic route hypothesis for event with external url = %{public}@, error = %d, route hypothesis = %@
No 'address' given.  Will not create an adjusted address.
'nil' participant given to function: [%s].  Will not compute needs response state.
Migration returned error code %d
Skipping looking up predicted location because process is not entitled.
Failed to get map item from GEOMapService. error code = %ld, domain = %{public}@, error = %@
Got user interaction for mocked location of interest (%{public}@). Interaction type = %d
error reverse geocoding: %@
no results from reverse geocode for %@
reverse geocode timeout for %@
PPPPPP
H@K<
EKConferenceURLDetector
EKDirectorySearchResultSet
EKRecurrenceRule
NSCopying
EKReminderStore
EKUpdatedReminderBackingObjectProvider
NSObject
EKPersistentInviteReplyNotification
EKPersistentSharee
EKPersistentCalendar
EKDefaultSerializerFactory
EKFeatureSet
EKAvailabilityCache
EKPredicateEvaluating
EKCompatibility
UnitTesting
EKPredicateEvaluator
CADPredicateValidator
Shared
EKSerializableEvent
EKParticipantSemanticIdentifierGenerator
EKOccurrenceCacheSearch
EKCancellableRemoteOperation
EKCalendarNotificationReference
EKObject
EKFrozenMeltedPair
EKProtocolMutableObject
EKProtocolObject
EKRecurrenceGenerator
EKEventAction
EKObjectChangeOwnerIDHelper
EKFrozenReminderCalendar
EKAttendeeChange
EKOwnerIDProviding
EKPersistentRecurrenceRule
EKStructuredLocationSemanticIdentifierGenerator
CADInterface
CADAccessInterface
CADDatabaseInterface
CADObjectInterface
CADSourceInterface
CADCalendarInterface
CADCalendarItemInterface
CADEventInterface
CADReminderInterface
CADAlarmEngineInterface
CADNotificationMonitorInterface
CADSpotlightInterface
CADInternalInterface
CADTestingInterface
CADMigrationInterface
CADSyncInterface
CADCalendarToolInterface
CADNotificationCountInterface
EKDaemonConnection
CADClientInterface
EKPreferences
EKCalendarItemChange
EKEphemeralCacheEventStoreProvider
EKEventStoreProvider
EKNotificationChange
EKSuggestedEventInfo
EKParticipantForSorting
EKReminderChange
EKShareeChange
EKRecents
EKSecureKeyedArchiverSerializer
EKSerializer
EKDirectoryResource
EKChangeTrackingClientId
EKNotification
EKSerializableStructuredLocation
EKPersistentAttachment
EKAvailabilitySpan
CalDateRangeProtocol
EKCalendarItem
EKAlarmSemanticIdentifierGenerator
EKOccurrenceCacheLocationSearch
EKTimedEventStorePurger
EKSourceConstraints
EKDirectoryLocation
EKPersistentLocation
EKParticipantToContactMatcher
EKEvent_Shared
EKJunkInvitationProtocol_Shared
EKNotificationCollection
EKInviteeAlternativeTimeSearcher
EKInviteReplyNotification
EKAttachmentChange
EKFrozenReminderSource
EKParticipant
EKParticipantSemanticIdentifierGeneratorDelegate
EKIdentityProtocol
EKCalendarSharedCalendarNotification
EKAvailabilitySpanDate
EKAvailabilityCachedSpanRange
EKPersistentAttendee
EKCalendarSuggestionNotification
EKCredentials
EKDirectoryPerson
EKPersistentReminder
EKNotificationCollectionOptions
EKSerializableObject
NSSecureCoding
NSCoding
EKCalendarNotification
EKSerializableAlarm
EKDirectorySearchOperation
EKEventOccurrenceInfo
EKDirectorySearchQuery
EKCalendarEventInvitationNotification
EKCalendarEventInvitationNotificationAttendee
EKObjectChange
EKPersistentAlarm
Reminders
EKFrozenReminderObject
EKPersistentResourceChange
EKFrozenReminderRecurrenceRule
EKFrozenReminderReminder
EKReminderKitSaveAdditions
EKChangeSet
EKPersistentExceptionDate
EKCalendarInviteReplyNotification
EKSerializableAttachment
EKDefaultPropertiesLoading
EKPredicateSearch
EKSerializableParticipant
EKResourceChangeNotificationChange
EKReminder
EKRecurrenceChange
_EKNotificationMonitor
EKDirectoryRecord
EKDebugPreferences
EKPersistentNotification
EKFrozenReminderAlarm
EventKit
EKPersistentOrganizer
EKOrganizerChange
EKTravelAdvisoryTimelinessAuthority
CalActivatable
EKResourceChangeNotification
EKExceptionDate
EKBirthdayListener
CalContactsProviderDelegate
EKPersistentEvent
EKTravelEngineHypothesis
NSMutableCopying
EKMutableTravelEngineHypothesis
EKEventActionChange
EKFrozenReminderStructuredLocation
EKWeakReference
EKPersistentObject
EKParticipantChange
EKTravelEngineUtilities
EKPersistentEventAction
EKAvailabilityUtilities
EKEvent
EKJunkInvitationProtocol_Private
EKOrganizer
EKRequestAvailabilityOperation
EKDataProtectionObserver
EKSerializableRecurrenceRule
EKAttendee
EKAlarmChange
EKObjectValidationContext
EKPersistentSuggestedEventInfo
EKRecurrenceDayOfWeek
EKDirectoryGroup
UnitTest
EKCalendar
CGColorWrapper
EKOfficeHour
EKAlarm
EKSharee
EKSource
EKCalendarResourceChangeNotification
EKPersistentParticipant
EKCalendarChange
EKTravelLookupManager
EKPredictedLocationOfInterest
EKStructuredLocation
EKPersistentResourceChangeNotification
EKObjectID
EKSharedEventStoreProvider
EKRecurrenceEnd
EKPersistentCalendarItem
EKRelation
EKAttachment
EKEventChange
EKCalendarVisibilityManager
EKEventStoreWeakWrapper
EKEventStore
EKDaemonConnectionDelegate
EKResourceChange
EKSourceChange
EKInviteeAlternativeTime
EKContactChange
EKReadWriteLock
EKPersistentSource
EKRecurrenceHelper
EKConflictDetails
EKInviteReplyNotificationChange
EKAvailabilityCachedSpan
CalendarAdditions
EKInviteeTimeSpan
EKStructuredLocationPrediction
countByEnumeratingWithState:objects:count:
_linksInSource:
resultType
_isPreferredURL:
_isValidTelURL:
phoneNumber
phoneURL
_dataDetector
length
matchesInString:options:range:
host
_preferredHostSuffixes
hasSuffix:
cal_hasSchemeTel
resourceSpecifier
stringByReplacingOccurrencesOfString:withString:
arrayWithObjects:count:
initWithTypes:error:
logHandle
UTF8String
conferenceURLFromSources:
.cxx_destruct
locations
setLocations:
groups
setGroups:
resources
setResources:
people
setPeople:
_locations
_groups
_resources
_people
alloc
initRecurrenceWithFrequency:interval:end:
init
setUUID:
setFrequency:
setInterval:
setFirstDayOfTheWeek:
raise:format:
setRecurrenceEnd:
setDaysOfTheWeek:
setDaysOfTheMonth:
setSetPositions:
setMonthsOfTheYear:
setDaysOfTheYear:
setWeeksOfTheYear:
initRecurrenceWithFrequency:interval:daysOfTheWeek:daysOfTheMonth:monthsOfTheYear:weeksOfTheYear:daysOfTheYear:setPositions:end:
singleChangedValueForKey:
setSingleChangedValue:forKey:
stringValueAsDateOnly:isFloating:
stringWithFormat:
frequency
interval
recurrenceEnd
specifier
setSpecifier:
firstDayOfTheWeekRaw
setFirstDayOfTheWeekRaw:
exceptionWithName:reason:userInfo:
integerValue
numberWithUnsignedInt:
stringWithUTF8String:
currentHandler
handleFailureInMethod:object:file:lineNumber:description:
numberWithUnsignedInteger:
unsignedIntegerValue
endDate
count
initWithEndDate:
initWithOccurrenceCount:
cachedValueForKey:populateBlock:
isEqual:
copy
setCachedValue:forKey:
setEndDate:
setCount:
usesEndDate
occurrenceCount
intValue
_ekWeekdayFromCalDayOfWeek:
_calDayOfWeekFromEKWeekday:
initWithSpecifier:
_recurrenceHelper
daysOfTheWeek
_updateSpecifierIfNeeded
daysOfTheMonth
daysOfTheYear
weeksOfTheYear
monthsOfTheYear
setPositions
isDirty
reset
clearCachedValueForKey:
rollback
changeSet
changedKeys
isEqualToString:
compare:
cachedEndDate
currentCalendar
timeZone
setTimeZone:
eventStore
startDate
components:fromDate:
dueDate
numberWithInteger:
array
numberWithInt:
addObject:
valueForKey:
isEqualToArray:
setFormatterBehavior:
timeZoneWithName:
setDateFormat:
stringFromDate:
string
iCalendarValueFromRecurrenceType:
appendFormat:
iCalendarValueFromDate:isDateOnly:isFloating:
objectAtIndex:
iCalendarDescription
stringWithString:
firstDayOfTheWeek
calendarIdentifier
frozenClass
recurrenceRuleWithType:interval:end:
iCalendarValueFromDayOfTheWeek:
copyWithZone:
UUID
description
gregorianUnits
dirtyStateMayAffectExceptionDates
mayOccurAfterDate:
pinToEndsOfMonthsWithCalendarItem:
isWeekdayRule
isWeekendRule
isAnyDayRule
isSimpleRule
isEqualToRecurrenceRule:
shouldPinMonthDays
_shouldPinMonthDays
_usesEndDate
class
self
performSelector:
performSelector:withObject:
performSelector:withObject:withObject:
isProxy
isKindOfClass:
isMemberOfClass:
conformsToProtocol:
respondsToSelector:
retain
release
autorelease
retainCount
zone
hash
superclass
debugDescription
existingUpdatedObject:
initWithEventStore:token:
remStore
sources
calendars
_remStore
_eventStore
_sources
_calendars
relations
mutableCopy
relationWithEntityName:toMany:inversePropertyNames:ownsRelated:
setObject:forKey:
primitiveRelationValueForKey:
primitiveSetStringValue:forKey:
primitiveStringValueForKey:
primitiveURLValueForKey:
primitiveSetURLValue:forKey:
primitiveIntValueForKey:
primitiveSetIntValue:forKey:
primitiveDateValueForKey:
primitiveSetDateValue:forKey:
primitiveBoolValueForKey:
primitiveSetRelationValue:forKey:
defaultPropertiesToLoad
meltedClass
entityType
inReplyTo
setInReplyTo:
shareeDisplayName
setShareeDisplayName:
shareeFirstName
setShareeFirstName:
shareeLastName
setShareeLastName:
shareeURL
setShareeURL:
shareeStatus
setShareeStatus:
creationDate
setCreationDate:
summary
setSummary:
alerted
inviteReplyCalendar
setInviteReplyCalendar:
setWithObject:
initWithObjectsAndKeys:
displayName
setDisplayName:
address
setAddress:
externalID
setExternalID:
shareeAccessLevel
setShareeAccessLevel:
firstName
lastName
setFirstName:
setLastName:
setOwner:
owner
relationWithEntityName:toMany:inversePropertyNames:
primitiveDataValueForKey:
primitiveSetDataValue:forKey:
primitiveSetBoolValue:forKey:
flags
title
colorString
source
sharees
externalIDTag
setExternalIDTag:
externalModificationTag
setExternalModificationTag:
syncToken
setSyncToken:
externalRepresentation
setExternalRepresentation:
setTitle:
isColorDisplayOnly
setColorDisplayOnly:
symbolicColorName
setSymbolicColorName:
setColorString:
displayOrder
setDisplayOrder:
setFlags:
sharingStatus
setSharingStatus:
sharedOwnerName
setSharedOwnerName:
sharedOwnerAddress
setSharedOwnerAddress:
sharingInvitationResponse
setSharingInvitationResponse:
publishedURL
setPublishedURL:
setIsPublished:
isPublished
setPublished:
notifications
setNotifications:
setSharees:
setSource:
invitationStatus
setInvitationStatus:
allowedEntities
setAllowedEntities:
selfIdentityDisplayName
setSelfIdentityDisplayName:
selfIdentityEmail
setSelfIdentityEmail:
selfIdentityPhoneNumber
setSelfIdentityPhoneNumber:
selfIdentityAddress
setSelfIdentityAddress:
selfIdentityFirstName
setSelfIdentityFirstName:
selfIdentityLastName
setSelfIdentityLastName:
ownerIdentityDisplayName
ownerIdentityId
setOwnerIdentityId:
setOwnerIdentityDisplayName:
ownerIdentityEmail
setOwnerIdentityEmail:
ownerIdentityPhoneNumber
setOwnerIdentityPhoneNumber:
ownerIdentityAddress
setOwnerIdentityAddress:
ownerIdentityFirstName
setOwnerIdentityFirstName:
ownerIdentityLastName
setOwnerIdentityLastName:
notes
setNotes:
bulkRequests
setBulkRequests:
subcalAccountID
setSubcalAccountID:
pushKey
setPushKey:
digest
setDigest:
setAlarms:
alarms
initWithEventStore:withVersion:
createSerializerWithEventStore:withVersion:
shared
bypassSplashScreen
lastConfirmedSplashScreenVersion
_currentSplashScreenVersion
setLastConfirmedSplashScreenVersion:
isTravelAdvisorySupported
isConservativeEntryEnabled
areVehicleTriggersEnabled
eventDetailsDayPreviewEnabled
calendarListViewCellsFeaturesExtraContent
calendarListViewCellsFeaturesAttendeeInformation
areQuickActionsSupported
areApplicationBadgesSupported
isSuggestionsEnabled
isContinuitySupported
areContextualRemindersSupported
mustDisplaySplashScreenToUser
userAcknowledgedSplashScreen
automaticGeocodingEnabled
eventsFoundInAppsEnabled
initWithSource:
constraints
supportsAvailabilityRequests
sourceIdentifier
initWithFormat:
initWithSuperclassDescription:
setKey:withString:
setKey:withBoolean:
setKey:withDictionary:
build
_dictionaryForIgnoredEventID:
objectForKey:
gatherFreshlyCachedSpansBetweenStartDate:endDate:
errorWithDomain:code:userInfo:
_isValidStartDate:endDate:
_validateRequestStartDate:endDate:addresses:error:
_cachedSpanResultsBetweenStartDate:endDate:ignoredEventID:addresses:
allKeys
objectForKeyedSubscript:
predicateWithBlock:
filteredArrayUsingPredicate:
start
elapsedTimeAsNumber:
_handleResults:resultsBlock:ignoredEventID:
dictionaryWithObjects:forKeys:count:
_logRequestElapsedTime:forNumberOfAddresses:
sharedConnection
requestCalendarAvailabilityWithAccountID:startDate:endDate:ignoredEventID:addresses:resultsBlock:completionBlock:
cancelCalendarAvailabilityRequestWithID:
_generateEventKitSpansFromPersistenceSpans:
enumerateKeysAndObjectsUsingBlock:
insertSpans:
CalIsAfterDate:
initWithCapacity:
type
_convertType:
initWithStartDate:endDate:type:
enumerateObjectsUsingBlock:
numberWithDouble:
requestAvailabilityBetweenStartDate:endDate:ignoredEventID:addresses:resultsBlock:completionBlock:
cachedAvailabilityInDateRange:ignoredEventID:addresses:
cancelAvailabilityRequestWithID:
_sourceIsInvalid
_accountID
_sourceSupportsAvailabilityRequests
_processingQueue
_callbackQueue
_addressesToCachedSpanRanges
_ignoredEventIDsToAddressBasedCaches
_nextRequestID
_cancelledID
ekPredicateEvaluateWithObject:
simulateLegacyBehaviors
isProgramSDKAtLeast:
perform:whileSimulatingLegacyBehaviors:
setSimulateLegacyBehaviors:
performWhileSimulatingLegacyBehaviors:
evaluatePredicate:withObject:
unarchiveDictionaryFromData:error:
archiveDictionary:error:
localStructuredData
structuredData
_structuredDataDictionaryFromData:
removeObjectForKey:
_dataFromStructuredDataDictionary:
setLocalStructuredData:
setStructuredData:
_customObjectForKey:local:
_setCustomObject:forKey:local:
customObjectForKey:
setCustomObject:forKey:
localCustomObjectForKey:
setLocalCustomObject:forKey:
willSave
setStartDate:
setUrl:
travelTime
setTravelTime:
location
setLocation:
structuredLocation
initWithStructuredLocation:
setStructuredLocation:
calendar
setCalendarIdentifier:
allAlarms
_initAlarms:
attachments
_initAttachments:
attendees
_initAttendees:
recurrenceRules
_initRecurrenceRules:
arrayWithCapacity:
isCurrentUser
initWithParticipant:
setAttendees:
initWithAlarm:
initWithAttachment:
setAttachments:
setRecurrenceRules:
initWithRecurrenceRule:
eventWithEventStore:
setURL:
createStructuredLocation
calendarWithIdentifier:
setCalendar:
createAlarm:
addAlarm:
createAttendee:
addAttendee:
createRecurrenceRule:
addRecurrenceRule:
serializedProperties
classesForKey
initWithEvent:
createEventInEventStore:
isAllDay
setIsAllDay:
_isAllDay
_startDate
_endDate
_timeZone
_travelTime
_recurrenceRules
_title
_notes
_url
_calendarIdentifier
_location
_structuredLocation
_attendees
_alarms
_attachments
emailAddress
absoluteString
semanticIdentifierForParticipant:
initWithCalendars:searchTerm:store:callback:
connection
CADOperationProxySync
CADOccurrenceCacheSearchWithTerm:inCalendars:responseToken:reply:
objectID
rowID
addCancellableRemoteOperation:
performSearchOperation:inCalendars:withEventStore:andSearchTerm:
errorWithCADResult:
removeCancellableRemoteOperation:
CADOperationProxy
unsignedIntValue
CADOccurrenceCacheCancelSearchWithReplyID:
cancel
searchWithCalendars:searchTerm:store:callback:
disconnect
receivedBatchResultsFromServer:finished:
searchTerm
_searchTerm
_store
_callback
_replyID
_canceled
cachedConstraintsForSourceWithObjectID:
initWithType:objectID:date:eventStore:
registerFetchedObjectWithID:
initWithPersistentObject:occurrenceDate:
initWithPersistentObject:
initWithType:
setHiddenFromNotificationCenter:
setName:
sharedOwnerEmail
setEmailAddress:
sharedOwnerPhoneNumber
setPhoneNumber:
sharedOwnerURL
setAlerted:
CGColor
setDotColor:
setObjectID:
externalURI
allowedEntityTypes
setAllowedEntityTypes:
couldBeJunk
setCouldBeJunk:
publicObjectWithPersistentObject:
calendarName
shareeEmailAddress
shareePhoneNumber
setStatus:
URIRepresentation
sourceForInviteReplyNotification:
calendarItem
_notificationTypeForResourceChange:notificationType:
changeType
deletedTitle
setWithArray:
changedByDisplayName
setCalendarName:
eventIdentifier
setEventID:
containsObject:
setChangeType:
createCount
setCreateCount:
updateCount
setUpdateCount:
deleteCount
setDeleteCount:
dateChanged
setDateChanged:
timeChanged
setTimeChanged:
locationChanged
setLocationChanged:
titleChanged
setTitleChanged:
_dateForNextOccurrence
setStartDateForNextOccurrence:
setAllDay:
objectWithIDExists:
currentLocale
descriptionWithLocale:
initWithType:objectID:eventStore:
notification
_date
_notification
_type
_objectID
_sharedInit
isNew
markAsNew
persistentObject
_unregisterObject:
dealloc
uniqueIdentifier
_isNew
_hasChanges
doesNotRecognizeSelector:
_isPropertyUnavailable:convertToFullObjectIfUnavailable:
rebaseSkippingRelationProperties:
_initChangeSetIfNone
_insertObject:
knownRelationshipSingleValueKeys
isMeltedAndNotWeakRelationshipObject:forKey:
rebase
frozenObject
forceChangeValue:forKey:
knownRelationshipMultiValueKeys
addMultiChangedObjectValue:forKey:
setPersistentObject:
existsInStore
_rollbackCommon
_reset
_resetCommon
_refreshCommon
_previousValueForKey:
meltedObjectInStore:
setWithCapacity:
setWithSet:
_markAsNewCommon
_markAsNotNewCommon
_markAsDeletedCommon
_markAsUndeletedCommon
_markAsSavedCommon
_markAsCommittedCommon
markAsCommitted
_performBlockOnOwnedCachedRelatedObjects:
cachedMeltedObjectForSingleValueKey:
cachedMeltedObjectsForMultiValueKey:
_hasChangesForKey:
_updatePersistentValueForKey:
_propertyValueForKey:
setValue:forKey:
updatePersistentObject
meltedAndCachedSingleRelationObjectForKey:
meltedAndCachedMultiRelationObjectsForKey:
null
markAsSaved
_isPendingInsert
updatePersistentObjectSkippingProperties:
_deleteObject:
propertiesUnavailableForPartialObjects
initWithObject:
existingMeltedObject
isPropertyUnavailable:
isCompletelyEqual:
isEqual:ignoringProperties:
isFrozen
isPartialObject
semanticIdentifier
canBeConvertedToFullObject
preFrozenRelationshipObjects
backingObject
setBackingObject:
hasChanges
setEventStore:
refresh
committedValueForKey:
markAsNotNew
markAsDeleted
markAsUndeleted
updatePersistentValueForKeyIfNeeded:
didCommit
insertPersistentObjectIfNeeded
deletePersistentObject
setChangeSet:
_cachedMeltedObjects
set_cachedMeltedObjects:
additionalFrozenProperties
setAdditionalFrozenProperties:
_cachedValues
set_cachedValues:
_validationContext
set_validationContext:
_persistentObject
_changeSet
__cachedMeltedObjects
_additionalFrozenProperties
__cachedValues
__validationContext
initialStartDate
setEventStartDate:
initialEndDate
setEventEndDate:
setEventTimeZone:
allDay
eventStartDate
dateInTimeZone:fromTimeZone:
eventEndDate
_setupForEKEvent:adjustDatesForAllDayEvents:
_prepareForEKRecurrence:forCalendarItem:
copyOccurrenceDatesBetweenStartDate:endDate:timeZone:limit:
addObjectsFromArray:
_copyOccurrenceDatesWithEKEvent:recurrenceRule:startDate:endDate:timeZone:exceptionDates:limit:adjustDatesForAllDayEvents:
removeObject:
occurrenceDate:matchesRecurrenceRule:forEvent:includeDetachedEventsInSeries:
gregorianDate
calendarDateByAddingGregorianUnits:
date
exceptionDates
detachedItems
nextOccurrenceDateWithEKRecurrences:forCalendarItem:exceptionDates:initialDate:afterDate:
dateWithTimeIntervalSinceReferenceDate:
calendarDateWithDate:timeZone:
absoluteTime
calendarDateWithAbsoluteTime:timeZone:
_convertEKRecurrenceFrequencyToCalRecurrenceFrequency:
setWeekStart:
weekStart
recurrencesShouldPinToMonthDays
setShouldPinMonthDays:
computeRecurrenceEndDate:
copyOccurrenceDatesWithEKEvent:startDate:endDate:timeZone:limit:
copyOccurrenceDatesWithEKEvent:recurrenceRule:startDate:endDate:timeZone:limit:
copyOccurrenceDatesWithEKEvent:recurrenceRule:startDate:endDate:timeZone:limit:adjustDatesForAllDayEvents:
copyOccurrenceDatesWithEKEvent:recurrenceRule:startDate:endDate:timeZone:exceptionDates:limit:
isOccurrenceDate:validForEvent:
nextOccurrenceDateWithEKRecurrences:forCalendarItem:initialDate:afterDate:
hasRecurrenceRules
timeIntervalSinceReferenceDate
duration
isFloating
initWithTimeIntervalSinceReferenceDate:
externalFolderID
setExternalFolderID:
externalScheduleID
setExternalScheduleID:
objectIDWithEntityType:rowID:
createOwnerIDWithRowID:objectType:
objectType
fetchChangesToObjectsOfTypes:inStore:resultHandler:
fetchChangesToObjectsOfTypes:inSource:resultHandler:
fetchChangesToObjectsOfTypes:inCalendar:resultHandler:
initWithChangeProperties:
fetchAttendeeChangesInStore:resultHandler:
fetchAttendeeChangesInSource:resultHandler:
fetchAttendeeChangesInCalendar:resultHandler:
ownerID
_ownerID
alternateUniverseClass
base64EncodedStringWithOptions:
floatValue
semanticIdentifierForLocationWithTitle:address:mapKitHandle:contactLabel:latitude:longitude:radius:
_connectToServer
initWithMachServiceName:options:
setRemoteObjectInterface:
setExportedInterface:
setExportedObject:
setInterruptionHandler:
CADDatabaseSetInitializationOptions:reply:
CADDatabaseGetAccess:
CADDatabaseGetUUID:
CADDatabaseRegisterForDetailedChangeTracking:
CADDatabaseUnregisterForDetailedChangeTracking:
CADDatabaseFetchChangedObjectIDsSinceSequenceNumber:reply:
CADDatabaseFetchObjectChangesForEntityTypes:insideObject:reply:
CADDatabaseMarkChangedObjectIDsConsumedUpToSequenceNumber:reply:
CADDatabaseMarkIndividualChangesConsumed:reply:
CADDatabaseClearSuperfluousChanges:
CADDatabaseGetSequenceNumber:
CADDatabaseGetChangesSinceSequenceNumber:reply:
CADDatabaseGetChangedEntityIDsSinceTimestamp:reply:
CADDatabaseGetNextAssignableColorWithReply:
CADDatabaseImportICSData:intoCalendarsWithIDs:optionsMask:reply:
CADDatabaseExportICSDataForCalendarItems:preventLineFolding:reply:
CADDatabaseSetShowsDeclinedEvents:reply:
CADDatabaseRebuildOccurrenceCacheWithReply:
CADDatabaseSaveWithReply:
CADDatabaseCommitWithReply:
CADDatabaseRollbackWithReply:
CADDatabaseResetWithReply:
CADDatabaseCanModifyCalendarDatabase:
CADDatabaseLastConfirmedSplashScreenVersion:
CADObjectExists:reply:
CADObjectsExist:reply:
CADObject:getPropertiesWithNames:reply:
CADObject:getPropertyWithName:reply:
CADObject:getStringPropertyWithName:reply:
CADObject:getNumberPropertyWithName:reply:
CADObject:getDatePropertyWithName:reply:
CADObject:getDataPropertyWithName:reply:
CADObject:getRelatedObjectWithRelationName:reply:
CADObject:getRelatedObjectsWithRelationName:reply:
CADObject:setAttributes:andRelations:reply:
CADDatabaseInsertObjectsWithTempObjectIDs:reply:
CADDatabaseDeleteObjectsWithObjectIDs:reply:
CADObjectIsManaged:reply:
CADDatabaseGetSourcesWithFaultedProperties:reply:
CADDatabaseGetLocalSource:
CADDatabaseGetLocalBirthdaySource:
CADSourceGetConstraints:reply:
CADSourceGetNotificationCollection:reply:
CADSourceRefresh:isUserRequested:reply:
CADCountCalendarItemsOfType:inSource:reply:
CADRemoveCalendarItemsOlderThanDate:ofType:inSource:reply:
CADSourceGetGrantedDelegatesList:reply:
CADSourceUpdateGrantedDelegatePermission:sourceID:reply:
CADSourceGetManagedConfigurationAccountAccess:reply:
CADDatabaseGetCalendarsWithFaultedProperties:reply:
CADCalendar:hasEvents:
CADCalendar:hasReminders:
CADCalendar:removeAllCalendarItems:
CADDatabaseGetCalendarItemWithUUID:reply:
CADDatabaseGetCalendarItemsWithUniqueIdentifier:inCalendar:reply:
CADDatabaseFetchCalendarItemsWithPredicate:entityType:fetchIdentifier:reply:
CADDatabaseCancelFetchRequestWithIdentifier:
CADDatabaseExportCalendarItemAsICS:reply:
CADDatabaseGetContactIdentifierForCalendarItem:reply:
CADDatabaseAddContactWithIdentifier:forCalendarItem:withReply:
CADDatabaseRemoveContactIdentifier:forCalendarItem:withReply:
CADDatabaseCountEntitiesOfType:withContactIdentifier:withReply:
CADDatabaseFetchEntitiesOfType:withContactIdentifier:withReply:
CADDatabaseGetDefaultLocalCalendarWithReply:
CADDatabaseGetDefaultCalendarForNewEventsInDelegateSource:withReply:
CADDatabaseSetDefaultCalendarForNewEvents:delegateSource:
CADDatabaseGetEventWithEventIdentifier:reply:
CADDatabaseGetEventWithUniqueID:reply:
CADDatabaseGetAllEventsWithUniqueID:reply:
CADDatabaseGetCountOfUnacknowledgedEvents:
CADDatabaseGetCountOfNotifiableEvents:
CADDatabaseGetEndDateOfEarliestExpiringNotifiableEventAfterDate:timeZone:reply:
CADDatabaseSetShowsDeclinedEvents:
CADDatabaseGetSuggestedEventCalendarWithReply:
CADDatabaseGetNaturalLanguageSuggestedEventCalendarWithReply:
CADDatabaseCanModifySuggestedEventCalendar:
CADDatabaseInsertSuggestedEventCalendarWithReply:
CADDatabaseRemoveSuggestedEventCalendarWithReply:
CADDatabaseActOnSuggestedEvent:action:reply:
CADOccurrenceCacheAreOccurrencesBeingGenerated:
CADOccurrenceCacheGetOccurrenceCountsForCalendars:reply:
CADOccurrenceCacheGetOccurrenceForCalendars:onDay:reply:
CADOccurrenceCacheGetOccurrenceDateOfEventWithRowID:nearestDate:prefersForwardSearch:reply:
CADOccurrenceCacheDoEvents:haveOccurrencesAfterDate:reply:
CADOccurrenceCacheSearchLocationsWithTerm:inCalendars:responseToken:reply:
CADOccurrencesExistInRangeForEvent:startDate:endDate:mustStartInInterval:timezone:reply:
CADDatabaseShouldWhitelistOrganizerEmailFromJunkChecks:reply:
CADDatabaseShouldWhitelistOrganizerPhoneNumberFromJunkChecks:reply:
CADDatabaseGetSecurityScopedLocalURLWrapperForAttachment:reply:
CADDatabaseGetDefaultCalendarForNewRemindersWithReply:
CADDatabaseSetDefaultCalendarForNewReminders:
CADDatabaseGetCountOfRemindersWithPredicate:reply:
CADDatabaseGetProperties:forReminders:reply:
CADScheduledTaskCacheGetDaysAndTaskCounts:
CADDatabaseGetAlarmWithUUID:reply:
CADDatabaseGetAlarmOccurrencesInRangeFromStart:toEnd:inCalendars:reply:
CADDatabaseGetLocationBasedAlarmsWithReply:
CADDatabaseGetVehicleTriggerAlarmsWithReply:
CADDatabaseGetSharedCalendarInvitationsWithReply:
CADCalendarSetClearedFromNotificationCenter:error:
CADDatabaseGetResourceChanges:
CADDatabaseGetInviteReplyNotifications:
CADDatabaseGetEventNotificationItemsFilteredByShowsNotificationsFlag:reply:
CADDatabaseGetNotificationCountForSourceWithExternalIdentifier:excludingDelegateSources:filteredByShowsNotificationsFlag:reply:
CADDatabaseGetInboxRepliedSectionItems:
CADEvent:setAlertedWithError:
CADCalendar:setAlertedWithError:
CADResourceChange:setAlertedWithError:
CADInviteReplyNotification:setAlertedWithError:
CADEventSetInvitationStatus:forEvent:error:
CADPushItemsToSpotlight:reply:
CADInternalForceStatCollection:
CADTestingSimulateDaemonCrash
CADTestingCloseDatabase:
CADMigrateDatabaseIfNeeded:
CADDatabaseGetDeletableCalendars:
CADDatabaseGetDeletableSources:
CADPurgeChangeTrackingReply:
CADPostSyntheticRouteHypothesis:forEventWithExternalURL:reply:
CADDatabaseGetNotificationCount:
initWithXPCConnection:protocol:synchronous:
initializationOptions
setInitializationOptions:
resume
setHasEverConnected:
invalidate
_createConnectionAndOperationProxyIfNeeded
_finishAllRepliesOnServerDeath
daemonRestarted
removeAllObjects
CADClientReceiveOccurrenceCacheSearchResults:forSearchToken:finished:
xpcConnection
_daemonRestarted
cancelRemoteOperation:
delegate
setDelegate:
hasEverConnected
_connectionLock
_remoteOperationProxy
_syncRemoteOperationProxy
_replyHandlerLock
_cancellableOperations
_nextCancellationToken
_registeredForStartNote
_hasEverConnected
_xpcConnection
_delegate
_initializationOptions
initWithDomain:
registerReflectionForPreferenceWithNotificationName:
getValueForPreference:expectedClass:
doubleValue
setValueForPreference:value:notificationName:
getBooleanPreference:defaultValue:
setBooleanPreference:value:notificationName:
getIntegerPreference:defaultValue:
setIntegerPreference:value:notificationName:
_setDeselectedCalendarIdentifiers:
travelEngineThrottlePeriod
setTravelEngineThrottlePeriod:
refiringReminderAlarmsEnabled
setRefiringReminderAlarmsEnabled:
useShortReminderSnoozeInterval
setUseShortReminderSnoozeInterval:
useShortReminderRefireInterval
setUseShortReminderRefireInterval:
alwaysSetArrivedAndSettledForReminders
setAlwaysSetArrivedAndSettledForReminders:
remindMeAboutThisInCalendarWidgetEnabled
setRemindMeAboutThisInCalendarWidgetEnabled:
setDeselectedCalendars:
deselectedCalendarIdentifiers
deselectedCalendarSyncHashes
_setDeselectedCalendarSyncHashes:
deselectedCalendarSyncIdentifiers
_setDeselectedCalendarSyncIdentifiers:
selectedCalendarIdentifiers
setSelectedCalendarIdentifiers:
showDeclinedEvents
setShowDeclinedEvents:
alertInviteeDeclines
setAlertInviteeDeclines:
_preferences
boolValue
fetchCalendarItemChangesInStore:resultHandler:
fetchCalendarItemChangesInSource:resultHandler:
fetchCalendarItemChangesInCalendar:resultHandler:
calendarID
oldCalendarID
oldExternalID
startDateChanged
startTimezoneChanged
endDateChanged
endTimezoneChanged
notesChanged
allDayChanged
_titleChanged
_locationChanged
_startDateChanged
_startTimezoneChanged
_endDateChanged
_endTimezoneChanged
_notesChanged
_allDayChanged
_calendarID
_oldCalendarID
_externalID
_oldExternalID
setPurgingAllowed:
setTimeout:
setCreationBlock:
acquireCachedEventStoreOrCreate:
initWithCreationBlock:
_eventStorePurger
fetchNotificationChangesInStore:resultHandler:
fetchNotificationChangesInSource:resultHandler:
fetchNotificationChangesInCalendar:resultHandler:
initWithEventStore:opaqueKey:uniqueKey:
setOpaqueKey:
setUniqueKey:
setChangedFields:
setChangesAcknowledged:
opaqueKey
uniqueKey
changedFields
changesAcknowledged
timestamp
setTimestamp:
numberWithBool:
setTimestampAsDate:
timestampAsDate
initWithOpaqueKey:uniqueKey:
relatedEvent
setCountLimit:
defaultCenter
addObserverForName:object:queue:usingBlock:
contactPredicate
archivedDataWithRootObject:requiringSecureCoding:error:
descriptorForRequiredKeysForStyle:
defaultProvider
unifiedContactsMatchingPredicate:keysToFetch:
objectAtIndexedSubscript:
name
isPhoneNumber
nameComponents
nickname
setNickname:
familyName
setFamilyName:
givenName
setGivenName:
namePrefix
setNamePrefix:
nameSuffix
setNameSuffix:
middleName
setMiddleName:
stringFromContact:style:
setCachedDisplayName:
setIsEmail:
setIsPhone:
setParticipant:
participantIsOptional:
participant
compareByEmailThenByContactName:
participantRole
isEmail
compare:options:
compareByContactNames:
sharedDefaults
sortOrder
allocWithZone:
participantForSortingWithEKParticipant:
cachedDisplayName
isPhone
_isEmail
_isPhone
_participant
_firstName
_lastName
_cachedDisplayName
fetchReminderChangesInStore:resultHandler:
fetchReminderChangesInSource:resultHandler:
fetchReminderChangesInCalendar:resultHandler:
fetchShareeChangesInStore:resultHandler:
fetchShareeChangesInSource:resultHandler:
fetchShareeChangesInCalendar:resultHandler:
crRecentContactsLibraryClass
recentEventForAddress:displayName:kind:date:weight:metadata:options:
recentForContactWithAddress:name:kind:
defaultInstance
crRecentsDomainCalendarString
recordContactEvents:recentsDomain:sendingAddress:completion:
crAddressKindEmailString
recordRecentWithAddress:name:kind:
crAddressKindPhoneNumberString
recordRecentForContactWithName:emailAddress:phoneNumber:
initForReadingFromData:error:
decodeObjectOfClass:forKey:
version
initRequiringSecureCoding:
encodeObject:forKey:
encodedData
serializeEvent:error:
deserializeData:error:
versionFromData:error:
_version
initWithCustomClientId:suffix:
customClientId
initWithCustomClientId:
suffix
initWithSuffix:
CADChangeTrackingClientId
_suffix
_customClientId
errorWithEKErrorCode:description:
hostURL
setHostURL:
commit:
calLocation
setCalLocation:
_calLocation
fileName
setFileName:
fileFormat
setFileFormat:
isBinary
setIsBinary:
localRelativePath
setLocalRelativePath:
fileSize
setFileSize:
XPropertiesData
setXPropertiesData:
externalId
setExternalId:
primitiveNumberValueForKey:
primitiveSetNumberValue:forKey:
unsignedLongValue
URLForPendingFileCopy
setURLForPendingFileCopy:
lastModifiedDate
startTimeZone
endTimeZone
calendarItemIdentifier
preferredLocation
fullDisplayStringWithTitle:address:
locationWithTitle:
updateMeltedAndCachedSingleRelationObject:forKey:frozenClass:
setStructuredLocationWithoutPrediction:
structuredLocationWithoutPrediction
clientLocation
_updateDefaultAlarms
appLinkData
_initWithUserActivityData:
_createUserActivityDataWithOptions:completionHandler:
setAppLinkData:
isDefaultAlarm
removeAlarm:
defaultAllDayAlarm
defaultTimedAlarm
defaultAlarmWasDeleted
_removeDefaultAlarms
_addDefaultAlarms
setStartTimeZone:
setEndTimeZone:
startTimeZoneName
timeZoneFromTimeZoneName:withFloatingTimeZone:
timeZoneNameFromTimeZone:
setStartTimeZoneName:
endTimeZoneName
setEndTimeZoneName:
CADObjectID
allowsContentModifications
isMutableSuggestionsCalendar
isMutableNaturalLanguageSuggestionsCalendar
hasAttendees
supportsInvitationModifications
_isExternallyOrganizedInvitationWithAttendees:
isOrganizedBySharedCalendarOwner
organizer
isSelfOrganized
isEditable
supportsAlarmTriggerIntervals
supportsAlarmTriggerDates
maxAlarmsAllowed
isExternallyOrganizedInvitation
externalData
metadataWithData:
x_props
isSubclassOfClass:
value
orderedSetWithCapacity:
isSnoozed
snoozedAlarms
_excludeAlarmDueToConnectionTrigger:
updateMeltedAndCachedMultiRelationObjects:forKey:
sortedArrayUsingSelector:
sortedAlarms
proximity
maxPublicProximity
allObjects
addCachedMeltedObject:forMultiValueKey:
removeCachedMeltedObject:forMultiValueKey:
calendarItemOwner
originalAlarm
setAcknowledgedDate:
setProximity:
findOriginalAlarmStartingWith:
setOriginalAlarm:
_isOnlyChangedKey:
acknowledgedDate
attendeesRaw
filterAttendeesPendingDeletion:
participantStatus
selfAttendee
_setSelfAttendee:
_removeAttendee:
selfParticipantStatusRaw
initWithContacts:
matchingParticipantsFromItem:
firstObject
sharedItemCreatedByFirstName
sharedItemCreatedByLastName
sharedItemCreatedTimeZoneName
setSharedItemCreatedTimeZoneName:
sharedItemModifiedByFirstName
sharedItemModifiedByLastName
sharedItemModifiedTimeZoneName
setSharedItemModifiedTimeZoneName:
contactIdentifierForCalendarItem:
contactIdentifiers
addContactIdentifier:forCalendarItem:
removeContactIdentifier:forCalendarItem:
canMoveToCalendar:fromCalendar:error:
errorWithEKErrorCode:
requiresOutgoingInvitationsInDefaultCalendar
validate:
supportsStructuredLocations
isSuggestedEventCalendar
isNaturalLanguageSuggestedEventCalendar
isStructured
travelStartLocation
_moveToCalendar:forCommittingItem:
originalItem
_recursivelyPerformBlockOnSelfAndDetachedItems:forCommittingItem:
_adjustAfterRebaseForMovingFromOldSource:toNewSource:committingItem:
_clearFieldsAfterMovingToNewCalendarOnSameSource
_setCalendarRecursively:forCommittingItem:
_deletePersistentItemAndDetachedItems:forCommittingItem:
_addObjectToPendingCommits:
setExternalData:
ekExceptionDates
initWithDate:
setEkExceptionDates:
isEqualToDate:
setDetachedItems:
setAppLink:
_determineMatchingApplicationBundleIdentifierWithOptions:
applicationProxyForIdentifier:
localizedName
contentAttributeSet
textSelected
activityType
webpageURL
contentDescription
isOnlyAlarmAcknowledgedPropertyDirty
modifiedProperties
setModifiedProperties:
uniqueID
_generateNewUniqueID
setUniqueID:
_updateHasRecurrenceRulesIfNeeded
_updateHasAttendeesIfNeeded
_updateHasNotesIfNeeded
knownRelationshipWeakKeys
uniqueId
setUniqueId:
setCalendarItemIdentifier:
calendarItemExternalIdentifier
hasNotes
setClientLocation:
setTravelStartLocation:
setLastModifiedDate:
calendarScale
setCalendarScale:
priority
setPriority:
action
setAction:
appLink
setDefaultAlarmWasDeleted:
sequenceNumber
exportToICS
requiresDetach
allowsSpansOtherThanThisEvent
isSelfOrganizedInvitation
allowsCalendarModifications
allowsRecurrenceModifications
allowsAlarmModifications
allowsAttendeesModifications
actionsState
hasAlarms
indexForAlarm:
setAllAlarms:
snoozeAlarm:withTimeIntervalFromNow:
snoozeAlarm:withLocation:proximity:
isAlarmAcknowledgedPropertyDirty
removeAcknowledgedSnoozedAlarms
removeAllSnoozedAlarms
_hadRecurrenceRules
removeRecurrenceRule:
startDateForRecurrence
_hadAttendees
removeAttendee:
setSelfAttendee:
attendeeForMe
selfParticipantStatus
participantMatchingContact:
attendeeMatchingEmailAddress:
setOrganizer:
sharedItemCreatedByDisplayName
setSharedItemCreatedByDisplayName:
sharedItemCreatedByAddress
setSharedItemCreatedByAddress:
setSharedItemCreatedByFirstName:
setSharedItemCreatedByLastName:
sharedItemCreatedDate
setSharedItemCreatedDate:
sharedItemCreatedTimeZone
setSharedItemCreatedTimeZone:
sharedItemModifiedByDisplayName
setSharedItemModifiedByDisplayName:
sharedItemModifiedByAddress
setSharedItemModifiedByAddress:
setSharedItemModifiedByFirstName:
setSharedItemModifiedByLastName:
sharedItemModifiedDate
setSharedItemModifiedDate:
sharedItemModifiedTimeZone
setSharedItemModifiedTimeZone:
_addAttachment:
_removeAttachment:
setContactIdentifiers:
canMoveToCalendar:error:
moveToCalendar:
setOriginalItem:
_addDetachedItem:
_removeDetachedItem:
_deleteSelfAndDetached
setExceptionDates:
_addExceptionDate:
_removeExceptionDate:
updateWithAppLink:usedSelectedText:
_updateModifiedAlarmByAcknowledging
_validateDeletable:
_willCommit
_stringForAlarmProximity:
semanticIdentifierForAlarmIsDefault:absoluteDate:relativeOffset:locationSemanticIdentifier:proximity:
setWorkQueue:
setCallbackQueue:
_addPersistentNotificationObservers
_uninstallTimer
_removePersistentNotificationObservers
_removeTransientEventStoreChangeObserver
workQueue
internalTimeout
setInternalTimeout:
_resetIdleTimer
setInternalStore:
setInternalCreationBlock:
internalCreationBlock
setInternalChangedBlock:
internalChangedBlock
internalPurgingAllowed
setInternalPurgingAllowed:
internalStore
_eventStoreChangedNotification:
addObserver:selector:name:object:
setIgnoreLowLevelDatabaseChangedNotifications:
timer
setTimer:
dateByAddingTimeInterval:
ignoreLowLevelDatabaseChangedNotifications
_fireChangedBlock
removeObserver:name:object:
callbackQueue
timeout
creationBlock
setChangedBlock:
changedBlock
purgingAllowed
_databaseChangedExternally
_ignoreLowLevelDatabaseChangedNotifications
_internalPurgingAllowed
_workQueue
_timer
_internalTimeout
_internalCreationBlock
_internalChangedBlock
_internalStore
initWithCDBSourceConstraintFlags:
setMaxAlarmsAllowed:
maxRecurrencesAllowed
setMaxRecurrencesAllowed:
setSupportsAlarmTriggerIntervals:
setSupportsAlarmTriggerDates:
supportsAlarmsTriggeringAfterStartDate
setSupportsAlarmsTriggeringAfterStartDate:
snoozeAlarmRequiresDetach
setSnoozeAlarmRequiresDetach:
organizerCanSeeAttendeeStatuses
setOrganizerCanSeeAttendeeStatuses:
inviteesCanSeeAttendeeStatuses
setInviteesCanSeeAttendeeStatuses:
statusesAreAccurate
setStatusesAreAccurate:
supportsIncomingInvitations
setSupportsIncomingInvitations:
supportsOutgoingInvitations
setSupportsOutgoingInvitations:
setRequiresOutgoingInvitationsInDefaultCalendar:
setSupportsInvitationModifications:
supportsEventForwarding
setSupportsEventForwarding:
supportsResponseComments
setSupportsResponseComments:
deliverySourceOrExternalIDRequiredForResponse
setDeliverySourceOrExternalIDRequiredForResponse:
proposedStatusRequiredForResponse
setProposedStatusRequiredForResponse:
declinedStatusChangeRequiresNoPendingStatus
setDeclinedStatusChangeRequiresNoPendingStatus:
eventDurationConstrainedToRecurrenceInterval
setEventDurationConstrainedToRecurrenceInterval:
alarmTriggerIntervalConstrainedToRecurrenceInterval
setAlarmTriggerIntervalConstrainedToRecurrenceInterval:
occurrencesMustOccurOnSeparateDays
setOccurrencesMustOccurOnSeparateDays:
futureStartDateLimitedToOccurrenceCacheBounds
setFutureStartDateLimitedToOccurrenceCacheBounds:
supportsRecurrencesOnDetachedEvents
setSupportsRecurrencesOnDetachedEvents:
setRecurrencesShouldPinToMonthDays:
requiresAttendeeSearchInSingleAccount
setRequiresAttendeeSearchInSingleAccount:
mustAcknowledgeMasterEvent
setMustAcknowledgeMasterEvent:
canSetAvailability
setCanSetAvailability:
eventAvailabilityLimited
setEventAvalabilityLimited:
requiresMSFormattedUID
setRequiresMSFormattedUID:
shouldCancelDeletedEvents
setShouldCancelDeletedEvents:
shouldDeclineDeletedInvitations
setShouldDeclineDeletedInvitations:
setSupportsStructuredLocations:
supportsReminderActions
setSupportsReminderActions:
supportsReminderLocations
setSupportsReminderLocations:
supportsAlarmProximity
setSupportsAlarmProximity:
allowsCalendarAddDeleteModify
setAllowsCalendarAddDeleteModify:
allowsTasks
setAllowsTasks:
allowsEvents
setAllowsEvents:
supportsURLField
setSupportsURLField:
supportsAllDayDueDates
setSupportsAllDayDueDates:
supportsSharedCalendars
setSupportsSharedCalendars:
isFacebook
setIsFacebook:
recurrenceSeriesMustIncludeMoreThanFirstOccurrence
setRecurrenceSeriesMustIncludeMoreThanFirstOccurrence:
supportsPrivateEvents
setSupportsPrivateEvents:
prohibitsPrivateEventsWithAttendees
setProhibitsPrivateEventsWithAttendees:
setSupportsAvailabilityRequests:
supportsIgnoringEventsInAvailabilityRequests
setSupportsIgnoringEventsInAvailabilityRequests:
supportsLocationDirectorySearches
setSupportsLocationDirectorySearches:
requiresSamePrivacyLevelAcrossRecurrenceSeries
setRequiresSamePrivacyLevelAcrossRecurrenceSeries:
supportsInboxAvailability
setSupportsInboxAvailability:
prohibitsMultipleMonthsInYearlyRecurrence
setProhibitsMultipleMonthsInYearlyRecurrence:
prohibitsMultipleDaysInMonthlyRecurrence
setProhibitsMultipleDaysInMonthlyRecurrence:
prohibitsYearlyRecurrenceInterval
setProhibitsYearlyRecurrenceInterval:
requiresOccurrencesConformToRecurrenceRule
setRequiresOccurrencesConformToRecurrenceRule:
prohibitsDetachmentOnCommentChange
setProhibitsDetachmentOnCommentChange:
allowsProposeNewTime
setAllowsProposeNewTime:
prohibitsICSImport
setProhibitsICSImport:
supportsAutoGeocodingStructuredLocations
setSupportsAutoGeocodingStructuredLocations:
supportsJunkReporting
setSupportsJunkReporting:
supportsPhoneNumbers
setSupportsPhoneNumbers:
attendeesUseDeletedByOrganizerStatus
setAttendeesUseDeletedByOrganizerStatus:
prohibitsSlicingEventsWithAttendees
setProhibitsSlicingEventsWithAttendees:
supportsSubscribedCalendars
setSupportsSubscribedCalendars:
supportsAttachments
setSupportsAttachments:
requiresOpeningAttachmentAsLink
setRequiresOpeningAttachmentAsLink:
supportsFloatingTimeZone
setSupportsFloatingTimeZone:
prohibitsUsingEventOrganizerEmailWhenComposingMail
setProhibitsUsingEventOrganizerEmailWhenComposingMail:
supportsDelegation
setSupportsDelegation:
supportsDelegateEnumeration
setSupportsDelegateEnumeration:
supportsRecurrenceSplit
setSupportsRecurrenceSplit:
eventAvalabilityLimited
_flags
_eventAvalabilityLimited
setWithObjects:
setInversePropertyIsApplicable:
latitude
setLatitude:
longitude
setLongitude:
contactLabel
setContactLabel:
mapKitHandle
setMapKitHandle:
radius
setRadius:
routing
setRouting:
referenceFrame
setReferenceFrame:
derivedFrom
setDerivedFrom:
setCalendarItemOwner:
setAlarmOwner:
alarmOwner
_cacheContactData
contacts
isKeyAvailable:
emailAddresses
lowercaseString
_nameComponentsForContact:reverse:
organizationName
setContactEmailAddresses:
setContactNameComponents:
setContactCompanyNames:
_nameComponentsWithGivenName:familyName:
arrayWithArray:
_allParticipantsOnItem:
anyContactMatchesAnyParticipant:
anyContactMatchesParticipant:
matchingParticipantsFromParticipants:
contactEmailAddresses
contactNameComponents
contactCompanyNames
anyContactMatchesAnyParticipantFromItem:
setContacts:
_contacts
_contactEmailAddresses
_contactNameComponents
_contactCompanyNames
setJunkStatus:
saveEvent:span:commit:error:
junkStatus
junkStatusForInvitation:
cachedJunkStatus
componentsSeparatedByString:
_locationStringForLocations:
locationWithoutPrediction
componentsJoinedByString:
clearDetectedConferenceURL
sourceType
conferenceURLDetected
conferenceURL
_detectConferenceURL
_prioritizedConferencesSources
_hasChangesForConferenceURLDetection
_updateConferenceURL
_canWriteConferenceURL
setConferenceURL:
setIsJunk:shouldSave:
setCachedJunkStatus:
_couldBeJunkCommon
locationsWithoutPrediction
setNotesCommon:
setURLCommon:
conferenceURLForDisplay
updateConferenceURLIfNeeded
reputationStore
junkStatusForInvitation:withReputationStore:
sendersEmail
shouldWhiteListOrganizerEmailFromJunkChecks:inReputationStore:
sendersPhoneNumber
shouldWhiteListOrganizerPhoneNumberFromJunkChecks:inReputationStore:
shouldWhitelistOrganizerEmailFromJunkChecks:
shouldWhitelistOrganizerPhoneNumberFromJunkChecks:
_setSource:
_setExternalID:
_setExternalIDTag:
_setNotificationsCollectionFlag
_registerObject:
_hasNotificationsCollectionFlag
_setFlags:
isWeakRelationship
initWithOptions:
addNotification:
removeNotification:
calendarRowIDs
valueForKeyPath:
sourceID
isMaster
filters
ekPredicateFilterMatches:
property
isInteger
isString
stringValue
isDate
dateValue
comparison
operation
setStateChanged:
setParticipantAddressesToParticipants:
setInternalTimesWhenAllAttendeesCanAttend:
setInternalTimesWhenSomeAttendeesCanAttend:
setInternalOriginalConflictedParticipants:
setInternalProposedTimes:
setLeftoverSpans:
setAvailabilityRequestsQueue:
setProcessingQueue:
availabilityRequestsQueue
cancelAllOperations
processingQueue
internalOriginalStartDate
internalOriginalEndDate
internalOriginalConflictedParticipants
internalTimesWhenAllAttendeesCanAttend
internalTimesWhenSomeAttendeesCanAttend
internalProposedTimes
internalSearchingForMoreTimesWhenAllAttendeesCanAttend
internalSearchingForMoreTimesWhenSomeAttendeesCanAttend
setInternalSearchingForMoreTimesWhenAllAttendeesCanAttend:
_resetSearchFallbackNumbers
_attemptSearch
setInternalSearchingForMoreTimesWhenSomeAttendeesCanAttend:
setAvailabilityRequestInProgress:
participantAddressesToParticipants
leftoverSpans
setNextAvailabilityRangeStartDate:
setInternalOriginalStartDate:
setInternalOriginalEndDate:
setOriginalRangeStartDate:
setIgnoredEventID:
setOrganizerAddress:
_sendStateChange:
isEqualToTimeZone:
dateByAddingHours:inCalendar:
dateRoundedToNearestFifteenMinutesInCalendar:
originalRangeStartDate
isStartDateDirty
isEndDateDirty
participantType
isEqualToParticipant:
proposedStartDateForEvent:
internalProposedStarts
_selfOrganizerForNewlyScheduledEventWithAddress:
_transitionToConflictFoundStateAndSearch
noConflictRequired
addEntriesFromDictionary:
ignoredEventID
initWithSource:startDate:endDate:ignoredEventID:addresses:resultsBlock:
isCancelled
error
spansIncludeBusyPeriod:
_participantforParticipantAddress:
setCompletionBlock:
addOperation:
timeIntervalSinceDate:
initWithStartDate:endDate:conflictedParticipants:
remainingSearchAttempts
availabilityRequestInProgress
nextAvailabilityRangeStartDate
availabilitySearchDurationMultiplier
setAvailabilitySearchDurationMultiplier:
_processResults:betweenStartDate:endDate:
setRemainingSearchAttempts:
stateChanged
stateAsString:
_generateTimeSpansForResults:betweenStartDate:endDate:
_spliceLeftTimeSpans:andNewTimeSpans:
_mergeAdjacentSpansWithSameConflictedParticipants:
_generateOpenFreeTimesFromTimeSpans:
_generateNonOptimalTimesFromTimeSpans:
_findLeftoverSpans:usingFreeTimes:andNonOptimalTimes:
setArray:
lastObject
_binarySearchForIndexOfTimeSpanInArray:containingDate:
_invalidBinarySearchIndex
subarrayWithRange:
verifyIntegrityOfAvailabilityTimeSearchTimelines
_validateSpans:
conflictedParticipants
_addressesForParticipants:
isEqualToSet:
_span:hasSameConflictedParticipantsAsSpan:
_allButLastItemInArray:
setConflictedParticipants:
_allButFirstItemInArray:
allValues
CalIsBeforeDate:
initWithArray:
_insertUniqueParticipants:intoExistingParticipantsArray:
_filterOutUnreasonableTimeSlots:
_rankNonOptimalTimeSpans:
_findHighestRankedNonOptimalTimeSpans:
indexesOfObjectsPassingTest:
objectsAtIndexes:
removeObjectAtIndex:
sortedArrayWithOptions:usingComparator:
showTypeAsBusy:
insertObject:atIndex:
CalIsBeforeOrSameAsDate:
replaceObjectsInRange:withObjectsFromArray:
CalIsAfterOrSameAsDate:
myFullName
localizedStringForKey:value:table:
initWithString:
organizerWithName:emailAddress:phoneNumber:address:isCurrentUser:
initWithStateChangedCallback:
originalStartDate
originalEndDate
originalConflictedParticipants
timesWhenAllAttendeesCanAttend
timesWhenSomeAttendeesCanAttend
proposedTimes
searchingForMoreTimesWhenAllAttendeesCanAttend
searchingForMoreTimesWhenSomeAttendeesCanAttend
searchForMoreTimesWhenAllAttendeesCanAttend
searchForMoreTimesWhenSomeAttendeesCanAttend
resetWithEvent:organizerAddressForNewlyScheduledEvent:
setNoConflictRequired:
setInternalProposedStarts:
organizerAddress
_noConflictRequired
_availabilityRequestInProgress
_internalSearchingForMoreTimesWhenAllAttendeesCanAttend
_internalSearchingForMoreTimesWhenSomeAttendeesCanAttend
_internalOriginalStartDate
_internalOriginalEndDate
_originalRangeStartDate
_internalProposedStarts
_source
_ignoredEventID
_availabilityRequestsQueue
_participantAddressesToParticipants
_organizerAddress
_nextAvailabilityRangeStartDate
_availabilitySearchDurationMultiplier
_remainingSearchAttempts
_leftoverSpans
_internalTimesWhenAllAttendeesCanAttend
_internalTimesWhenSomeAttendeesCanAttend
_internalProposedTimes
_internalOriginalConflictedParticipants
_stateChanged
arrayByAddingObjectsFromArray:
_setInviteReplyCalendar:
cal_emailAddressString
cal_phoneNumberString
unloadPropertyForKey:
initWithInviteReplyCalendar:
clearAlertedStatus
fetchAttachmentChangesInStore:resultHandler:
fetchAttachmentChangesInSource:resultHandler:
fetchAttachmentChangesInCalendar:resultHandler:
remAccount
_sourceIdentifier
_remAccount
participantWithName:emailAddress:phoneNumber:url:
initWithName:emailAddress:phoneNumber:url:
stringAddingMailto
URLWithString:
stringAddingTel
cal_hasSchemeMailto
cal_resourceSpecifierNoLeadingSlashes
displayNameRaw
componentsFromString:
predicateForContactMatchingEKParticipantWithName:emailAddress:URL:predicateDescription:
unifiedContactsMatchingPredicate:keysToFetch:error:
publicABPersonFromContact:publicAddressBook:
isDetached
proposedStartDate
setProposedStartDate:
setProposedStartDateStatus:
invitedBy
participantWithName:url:
existingContact
newContact
comment
setComment:
ABRecordWithAddressBook:
isLocationRoom
setProposedStartDate:forEvent:
proposedStartDateStatus
inviterNameString
setInviterNameString
_owner
calendarWithID:
calendarFromEventStore:
_sharingInvitationResponse
_allowedEntityTypes
spanDate
spanType
valueForSpanType:
dateType
initWithDate:dateType:spanType:
setSpanDate:
setDateType:
setSpanType:
_spanDate
_dateType
_spanType
setKey:withArray:
_rangeCompletelyCoversPeriodBetweenStartDate:endDate:
span
availabilityFreshnessWindow
_clampDateRangeForSpans:startDate:endDate:
_currentMaxSpanTypeIn:
setObject:atIndexedSubscript:
isBeforeDate:
isAfterDate:
initWithSpan:
cachedSpansFromSpans:
sortedArrayUsingComparator:
_eliminateOverlapsInResults:
initWithStartDate:endDate:
containsRange:
deDupSpans:
intersectsRange:
replaceObjectAtIndex:withObject:
sanitizeAndInsertResults:inRange:
spans
_cachedSpans
wrappedPredicate
evaluateWithObject:
mustStartInInterval
timeZoneWithAbbreviation:
occurrencesExistInRangeForEvent:startDate:endDate:mustStartInInterval:timezone:
status
setParticipantRole:
pendingStatus
setPendingStatus:
lastModified
setLastModified:
setParticipantType:
hiddenFromNotificationCenter
originAppName
credentialsWithUsername:password:
username
password
_username
_password
completionDate
setDueDate:
dueDateTimeZone
setDueDateTimeZone:
dueDateAllDay
setDueDateAllDay:
setCompletionDate:
firstAlertDate
setFirstAlertDate:
initWithExternalID:externalIDTag:inSource:
_externalIDTag
decodeObjectOfClasses:forKey:
supportsSecureCoding
encodeWithCoder:
initWithCoder:
setType:
needsAlert
dotColor
_name
_emailAddress
_phoneNumber
_URL
_dotColor
_hiddenFromNotificationCenter
_alerted
_couldBeJunk
relativeOffset
setRelativeOffset:
absoluteDate
setAbsoluteDate:
isAbsolute
setIsAbsolute:
alarmWithAbsoluteDate:
alarmWithRelativeOffset:
_isAbsolute
_relativeOffset
_absoluteDate
isExecuting
isFinished
main
willChangeValueForKey:
didChangeValueForKey:
_recordTypes
_finishWithError:
terms
resultLimit
_processResults:
setNumberOfMatchesExceededLimit:
performCalendarDirectorySearchWithAccountID:terms:recordTypes:resultLimit:resultsBlock:completionBlock:
cancelCalendarDirectorySearchWithID:
findGroups
findLocations
findResources
findUsers
_processGroupsInResults:
_processLocationsInResults:
_processResourcesInResults:
_processPeopleInResults:
preferredAddress
setPreferredAddress:
principalPath
setPrincipalPath:
setError:
initWithSource:query:resultsBlock:
isConcurrent
numberOfMatchesExceededLimit
_isFinished
_isExecuting
_query
_resultsBlock
_searchID
_numberOfMatchesExceededLimit
_error
initWithObjectID:date:
setDate:
setTerms:
setFindGroups:
setFindLocations:
setFindResources:
setFindUsers:
setResultLimit:
_findGroups
_findLocations
_findResources
_findUsers
_terms
_resultLimit
attendeeReplyChanged
externalURL
setRecurrenceRule:
participationStatusModifiedDate
setParticipationStatusModifiedDate:
participationStatus
setParticipationStatus:
setAttendeeReplyChanged:
initWithParticipant:forEvent:
proposedStartDateDeclined
statusChanged
proposedStartDateChanged
commentChanged
publicObjectWithObjectID:
recurrenceRule
eventFromEventStore:
startDateForNextOccurrence
_allDay
_timeChanged
_dateChanged
_attendeeReplyChanged
_startDateForNextOccurrence
_participationStatusModifiedDate
_participationStatus
_status
_recurrenceRule
_invitedBy
_statusChanged
_commentChanged
_proposedStartDateChanged
_proposedStartDateDeclined
_isCurrentUser
_participantStatus
_comment
_proposedStartDate
changeID
initWithEntityType:changeID:
processFetchResults:
objectChangeWithProperties:
raise
objectIDWithCADObjectID:
setObject:forKeyedSubscript:
CADObjectChangeIDsFromEKObjectChanges:
fetchObjectChangesInStore:resultHandler:
fetchObjectChangesInSource:resultHandler:
fetchObjectChangesInCalendar:resultHandler:
callClientResultsHandler:changesTruncated:latestToken:changes:
serializedPropertiesForConsumingChange
changedObjectID
_changeType
_changedObjectID
_changeID
_sequenceNumber
alarmType
setAlarmType:
calendarOwner
setCalendarOwner:
setDefaultAlarm:
setSnoozedAlarms:
setReminderSourceMapLock:
reminderSourceMapLock
eventSources
returnEventResults
reminderSources
returnReminderResults
_combineEventSources:withReminderSources:
_rebuildSourceMapsWithEventSources:reminderSources:
reminderSourceIDToEventSourceIDMapping
setReminderSourceIDToEventSourceIDMapping:
setEventSourceIDToReminderSourceIDMapping:
isWritable
eventSourceIDForReminderSourceID:
sourceWithIdentifier:
reminderSourceMap
reminderStore
eventSourceMap
eventSourceIDToReminderSourceIDMapping
getMapsWithReminderSourceMap:eventSourceMap:
initializeEKEventStorePlusReminders
combinedReminderAndEventSources
combineEventCalendars:withReminderCalendars:
eventSourceForReminderSource:
reminderSourceForEventSource:
invalidateReminderSourceMaps
suggestionInfo
isFacebookSource
changedByAddress
changedByFirstName
changedByLastName
changedProperties
publicStatus
hasUnsavedChangeForKey:
forceUpdateFrozenCalendar:
initWithChangeSet:
singleValueChanges
multiValueAdditions
multiValueRemovals
initWithSingleValueChanges:multiValueAdditions:multiValueRemovals:
_initWithChangeSet:filter:
filteredDictionaryPassingTest:
setIsNew:
isModified
setIsModified:
isSaved
setIsSaved:
isDeleted
setIsDeleted:
isUndeleted
setIsUndeleted:
initWithDictionary:
setSingleValueChanges:
setMultiValueAdditions:
setMultiValueRemovals:
mutableCopyWithZone:
dictionary
rollbackChanges
changedSingleValueKeys
unionSet:
changedMultiValueKeys
_isNewAndUnsaved
valueForSingleValueKey:basedOn:and:
changeSingleValue:forKey:basedOn:and:
valuesForMultiValueKey:basedOnSet:
dictionaryWithCapacity:
removeFromChanges:forMultiValueKey:basedOn:
addToChanges:forMultiValueKey:basedOn:
_semanticIdentifierToObjectMapForObjects:
_cleanupEmptySetsForMultiValueKey:
addChanges:
replaceUniqueMultiValueObjectsWithUpdatedObjects:
callStackSymbols
appendString:
initWithChangeSet:changesToSkip:
initWithChangeSet:changesToKeep:
markChangesAsSaved
hasUnsavedChanges
hasUnsavedMultiValueAdditionForKey:
unsavedMultiValueAddedObjectsForKey:
hasUnsavedMultiValueRemovalForKey:
unsavedMultiValueRemovedObjectsForKey:
valueForSingleValueKey:basedOn:
changeSingleValue:forKey:basedOn:
valuesForMultiValueKey:basedOn:
isUniqueAddedObject:forKey:
replaceMultiChangeAddedObject:withObject:forKey:
addChangesAndUpdateUniqueMultiValueObjects:
skipsPersistentObjectCopy
setSkipsPersistentObjectCopy:
_skipsPersistentObjectCopy
_isModified
_isSaved
_isDeleted
_isUndeleted
_singleValueChanges
_multiValueAdditions
_multiValueRemovals
inviteReplyNotificationFromEventStore:
suggestedEventInfoWithOpaqueKey:uniqueKey:
_filterObjectChangesNotConformingToOwnerIDProvidingProtocol:
fetchChangesToOwnerIDProvidingObjectsOfTypes:inStore:resultHandler:
fetchChangesToOwnerIDProvidingObjectsOfTypes:inSource:resultHandler:
fetchChangesToOwnerIDProvidingObjectsOfTypes:inCalendar:resultHandler:
createAttachment
urlOnDisk
setUrlOnDisk:
contentTypeFromServer
setContentTypeFromServer:
_urlOnDisk
_contentTypeFromServer
initWithEntityClass:predicate:store:
signpostHandle
predicateFormat
_createOSActivity
signpostStart
_startActualWithCompletion:synchronous:
_fetchObjectIDsActualWithCompletion:synchronous:
_startProcessingWithCompletion:synchronous:processor:
signpostEndWithError:count:
shouldLoadDefaultProperties
loadedValues
registerFetchedObjectWithID:withDefaultLoadedPropertyKeys:values:
occurrenceDate
_startActivityWithCompletion:synchronous:
_startFetchObjectIDsActivityWithCompletion:synchronous:
searchWithEntityClass:predicate:store:
terminate
startWithCompletion:
runSynchronously
fetchObjectIDs
_entityClass
_predicate
_cancellationToken
_finished
_isCancelled
_retryCount
setParticipantStatus:
attendeeWithName:emailAddress:phoneNumber:url:
_participantRole
_participantType
createNewReminder
reminderIdentifier
URLFragmentAllowedCharacterSet
removeCharactersInString:
stringByAddingPercentEncodingWithAllowedCharacters:
startDateRaw
startDateTimeZone
startDateAllDay
_dateComponentsWithDate:timeZone:allDay:
year
month
second
setSecond:
setStartDateRaw:
setStartDateTimeZone:
setStartDateAllDay:
hour
timeZoneForSecondsFromGMT:
dueDateTimeZoneName
setDueDateTimeZoneName:
dueDateComponents
dueDateRaw
initWithCalendarIdentifier:
setDueDateComponents:
startDateComponents
setStartDateComponents:
setDueDateRaw:
setParentID:
allowReminders
generateUniqueIDWithReminder:calendar:
_removeSnoozedAlarmsFromReminder:usingDueDate:
recurrenceEndWithOccurrenceCount:
saveReminder:commit:error:
backingReminderWithIdentifier:
_resetWithFrozenObject:
reminderWithEventStore:
setCompleted:
isCompleted
clearParentID
bestDisplayAlarm
parentID
_parentID
fetchRecurrenceChangesInStore:resultHandler:
fetchRecurrenceChangesInSource:resultHandler:
fetchRecurrenceChangesInCalendar:resultHandler:
_initWithOptions:eventStore:eventStoreGetter:
_killSyncTimer:
stop
_resetTimer
attemptReload
_eventStoreChanged
notificationQueue
killTimer
notificationReferences
attemptReloadSynchronously:
isDataProtected
_fetchEventNotificationReferencesFromEventStore:
postNotificationName:object:userInfo:
_addRemovedOrAddedObjectIDsTo:oldNotifications:newNotifications:
intersectSet:
minusSet:
earliestExpiringNotifiableEventEndDateAfterDate:timeZone:
_timerFired
initWithFireDate:serviceIdentifier:target:selector:userInfo:
setMinimumEarlyFireProportion:
currentRunLoop
scheduleInRunLoop:
_syncDidStart
_syncDidEnd:
_notificationCountChangedExternally
_alertPrefChanged
_databaseChanged
trackChangesInEventStore
adjust
eventNotificationsFilteredByShowsNotificationsFlag:
dateWithTimeIntervalSinceNow:
_syncTimerFired:
initWithFireDate:interval:target:selector:userInfo:repeats:
mainRunLoop
addTimer:forMode:
_resetSyncTimer
EKObjectIDsFromCADObjectIDs:
requestedDarwinNotifications
initWithOptions:eventStore:
initWithOptions:eventStoreGetter:
notificationCount
handleDarwinNotification:
eventStorePurger
_eventStoreGetter
_running
_nextFireTime
_syncTimer
_pendingChanges
_queue
_timerQueue
_lastChangedTimestamp
_changedIDsValid
_changedIDs
_ignoreSyncTimer
_initialCheck
_shouldInstallPersistentTimer
_useSyncIdleTimer
_registerForDarwinNotifications
_filteredByShowsNotificationsFlag
_computeChangedNotificationSet
_automaticallyFaultNotifications
_notificationReferences
_notificationQueue
userInfo
_displayName
_preferredAddress
_principalPath
setAvailabilityFreshnessWindow:
saveGeocodedLocationsInTravelEngine
setSaveGeocodedLocationsInTravelEngine:
overrideTravelAdvisoryHypothesis
setOverrideTravelAdvisoryHypothesis:
overriddenTravelAdvisoryHypothesisTransportType
setOverriddenTravelAdvisoryHypothesisTransportType:
overriddenTravelAdvisoryHypothesisConservativeTravelTime
setOverriddenTravelAdvisoryHypothesisConservativeTravelTime:
overriddenTravelAdvisoryHypothesisEstimatedTravelTime
setOverriddenTravelAdvisoryHypothesisEstimatedTravelTime:
overriddenTravelAdvisoryHypothesisAggressiveTravelTime
setOverriddenTravelAdvisoryHypothesisAggressiveTravelTime:
overriddenTravelAdvisoryHypothesisSupportsLiveTraffic
setOverriddenTravelAdvisoryHypothesisSupportsLiveTraffic:
overriddenTravelAdvisoryHypothesisCurrentTrafficDensity
setOverriddenTravelAdvisoryHypothesisCurrentTrafficDensity:
overriddenTravelAdvisoryHypothesisRouteName
setOverriddenTravelAdvisoryHypothesisRouteName:
overriddenTravelAdvisoryHypothesisTravelState
setOverriddenTravelAdvisoryHypothesisTravelState:
preventMarkingTravelAdvisoryEntriesAsDismissed
setPreventMarkingTravelAdvisoryEntriesAsDismissed:
forceDisplayOfNewTravelAdvisoryHypotheses
setForceDisplayOfNewTravelAdvisoryHypotheses:
performAgendaEntryEqualityChecksInTravelEngine
setPerformAgendaEntryEqualityChecksInTravelEngine:
setVerifyIntegrityOfAvailabilityTimeSearchTimelines:
showDepartureDateForTransitTimeToLeave
setShowDepartureDateForTransitTimeToLeave:
shouldBypassTravelEngineThrottle
setShouldBypassTravelEngineThrottle:
syntheticTravelAdvisoriesEnabled
setSyntheticTravelAdvisoriesEnabled:
eventUUID
localizedStringWithFormat:
errorWithCADResult:action:
dictionaryWithObjectsAndKeys:
_defaultDescriptionForCode:
errorWithEKErrorCode:description:underlyingError:reason:
initWithDomain:code:userInfo:
errorWithEKErrorCode:underlyingError:
errorWithEKErrorCode:description:reason:
phoneNumberWithStringValue:
predicateForContactsMatchingPhoneNumber:
arrayByAddingObject:
setCurrentUser:
fetchOrganizerChangesInStore:resultHandler:
fetchOrganizerChangesInSource:resultHandler:
fetchOrganizerChangesInCalendar:resultHandler:
sharedInstance
initWithDateProvider:
internalActive
setInternalActive:
_refresh
startOfLeaveNowPeriodInternal
startOfRunningLatePeriodInternal
suggestedDepartureDate
setStartOfLeaveNowPeriodInternal:
aggressiveDepartureDate
setStartOfRunningLatePeriodInternal:
setInternalPeriodChangedCallback:
internalPeriodChangedCallback
internalPeriod
_refreshPeriod
_refreshTimer
dateProvider
stringForPeriod:
setInternalPeriod:
_refreshOnDate:
timeIntervalSinceNow
activate
deactivate
active
startOfLeaveNowPeriod
startOfRunningLatePeriod
updateWithHypothesis:
setPeriodChangedCallback:
periodChangedCallback
period
_internalActive
_startOfLeaveNowPeriodInternal
_startOfRunningLatePeriodInternal
_internalPeriod
_internalPeriodChangedCallback
_dateProvider
resourceChanges
setResourceChanges:
addResourceChange:
removeResourceChange:
areBirthdaysEnabled
birthdayCalendarsInStore:
resetAllBirthdaysInStore:
disableBirthdayCalendarsInStore:
initWithQueue:andBlock:
integerForKey:
setInteger:forKey:
executeBlock
registerForContactChangeNotifications:
initWithBirthdayCalendarModifications
boolForKey:
calendarsForEntityType:
removeCalendar:commit:error:
calendarForEntityType:eventStore:
localBirthdayCalendarSource
bundleForClass:
setCGColor:
saveCalendar:commit:error:
contactStore
CalKeys
initWithKeysToFetch:
birthday
nonGregorianBirthday
enumerateContactsWithFetchRequest:error:usingBlock:
CalDateFromBirthdayComponents:
CalDisplayName
setBirthdayContact:
setLunarCalendarString:
insertEventWithContact:forDateComponents:intoCalendar:inStore:
birthdayCalendarsCreateIfNeeded:inStore:
allContactsWithBirthdays
_insertEventsForContact:intoCalendar:inStore:
predicateForMasterEventsInCalendar:
birthdayContactIdentifier
removeEvent:span:commit:error:
enumerateEventsMatchingPredicate:usingBlock:
contactsFromContactIdentifiers:withKeys:
sharedListener
contactsInserted:updated:deleted:
contactsReset
addBirthdayCalendars
disableBirthdayCalendars
_updateQueue
_updateJobQueue
_needsReset
startLocation
availability
setAvailability:
privacyLevel
setPrivacyLevel:
setOriginalStartDate:
travelAdvisoryBehavior
setTravelAdvisoryBehavior:
responseComment
setResponseComment:
locationPredictionState
setLocationPredictionState:
birthdayID
setBirthdayID:
canForward
setCanForward:
disallowProposeNewTime
setDisallowProposeNewTime:
isPropertyDirty:
pushDirtyProperties:
setAttributes:relations:objectID:eventStore:error:
suggestedEventInfo
setSuggestedEventInfo:
needsOccurrenceCacheUpdate
setNeedsOccurrenceCacheUpdate:
invitationChangedProperties
setInvitationChangedProperties:
externalTrackingStatus
setExternalTrackingStatus:
actions
setActions:
setBirthdayContactIdentifier:
recurrenceSet
setRecurrenceSet:
setSuggestionInfo:
firedTTL
setFiredTTL:
transportType
conservativeDepartureDate
conservativeTravelTime
estimatedTravelTime
aggressiveTravelTime
routeName
supportsLiveTraffic
currentTrafficDensity
geoTrafficDensityAsString:
trafficDensityDescription
travelState
isEqualToHypothesis:
initWithTransportType:conservativeDepartureDate:conservativeTravelTime:suggestedDepartureDate:estimatedTravelTime:aggressiveDepartureDate:aggressiveTravelTime:routeName:supportsLiveTraffic:currentTrafficDensity:trafficDensityDescription:travelState:
syntheticHypothesisWithStartDate:conservativeTravelTime:estimatedTravelTime:aggressiveTravelTime:
_transportType
_conservativeDepartureDate
_conservativeTravelTime
_suggestedDepartureDate
_estimatedTravelTime
_aggressiveDepartureDate
_aggressiveTravelTime
_routeName
_supportsLiveTraffic
_currentTrafficDensity
_trafficDensityDescription
_travelState
setTransportType:
setConservativeDepartureDate:
setConservativeTravelTime:
setSuggestedDepartureDate:
setEstimatedTravelTime:
setAggressiveDepartureDate:
setAggressiveTravelTime:
setRouteName:
setSupportsLiveTraffic:
setCurrentTrafficDensity:
setTrafficDensityDescription:
setTravelState:
fetchEventActionChangesInStore:resultHandler:
fetchEventActionChangesInSource:resultHandler:
fetchEventActionChangesInCalendar:resultHandler:
initWithValue:
setValue:
_value
temporaryObjectIDWithEntityType:
stringRepresentation
isTemporary
_isPendingUpdate
_isPendingDelete
_trackModifiedObject:
_loadedPropertyKeys
changed
_propertyForKey:
_relationForKey:
toMany
_releaseLoadedProperties
_setDefaultPropertiesLoaded:
ownsRelatedObject
_setProperty:forKey:forRelation:
_createLoadedPropertiesIfNeeded
_loadRelationForKey:value:
_loadDefaultPropertiesIfNeeded
_loadChildIdentifiersForKey:values:
_setProperty:forKey:
inversePropertyNames
shouldSetInverseProperty:onObject:forObject:
_addDirtyProperty:
_addObjectCore:toValues:relation:
_removeObjectCore:fromValues:relation:
_primitiveValueForKey:loader:
_primitiveSetValue:forKey:daemonSetter:
_loadStringValueForKey:
_takeValues:forKeys:
isPropertyLoaded:
_setProperty:forKey:isRelation:
_takeValuesForDefaultPropertyKeys:values:
_areDefaultPropertiesLoaded
stringWithCapacity:
_shouldRetainPropertyForKey:
initWithAlternateUniverseObject:inEventStore:withUpdatedChildObjects:
_setEventStore:
_setObjectID:
dirtyProperties
saved
_setPendingInsert:
_setPendingUpdate:
_setPendingDelete:
primitiveAddRelatedObject:forKey:
primitiveRemoveRelatedObject:forKey:
primitiveDoubleValueForKey:
primitiveSetDoubleValue:forKey:
takeValues:forKeys:
takeValuesForDefaultPropertyKeys:values:
dump
committedProperties
setCommittedProperties:
_lock
_dirtyProperties
_loadedProperties
_committedProperties
fetchParticipantChangesInStore:resultHandler:
fetchParticipantChangesInSource:resultHandler:
fetchParticipantChangesInCalendar:resultHandler:
coordinate
date:representsApproachingDepartureDateForHypothesis:
date:representsLatenessForHypothesis:
travelStateIndicatesTravelingTowardDestination:
formattedLocationCoordinates:
geoRouteHypothesisTravelStateForString:
geoTransportTypeAsString:
geoTransportTypeForString:
geoTrafficDensityForString:
authorizationStatusAsString:
geoTransportTypeForCalLocationRoutingMode:
date:representsImmediateDepartureForHypothesis:
maximumAllowableTravelTime
minimumAllowableTravelTime
cadRouteHypothesisForEKTravelEngineHypothesis:
CALFreeBusyTypeFromEKAvailType:
getCALFreeBusyFromEKSpans:inRange:
_orderForType:
leastAvailabileFreeBusyTypeForArray:
getCALFreeBusyFromResults:forAttendees:inRange:
summarizedAvailabilityTypeForSpans:
initWithEventStore:
initWithName:
_effectiveTimeZone
endDateRaw
setOccurrenceIsAllDay:
occurrenceIsAllDay
setOccurrenceStartDate:
setOccurrenceEndDate:
differenceAsCalGregorianUnits:flags:
originalOccurrenceStartDate
occurrenceStartDate
postNotificationName:object:
originalOccurrenceEndDate
_clearLocationPredictionCacheIfNotFrozen
CalCalendarWithUnsanitizedCalendarIdentifier:
_committedStartDate
birthdayStringForContactName:eventDate:birthDate:lunarCalendar:
setOriginalOccurrenceIsAllDay:
updateStartDateForDate:
updateEndDateForDate:
startDateIncludingTravel
_setStartDate:andClearProposedTimes:
setOriginalOccurrenceStartDate:
occurrenceEndDate
setOriginalOccurrenceEndDate:
dateForDayInTimeZone:
setProposedStartDateChanged:
setCommentChanged:
setStatusChanged:
ek_ios_dateForEndOfDayInTimeZone:
setEndDateRaw:
_isInitialOccurrenceDate:
isEquivalentTo:
_gregorianDateCorrectedForTimeZone:fromCalendarDate:orNSDate:
_startDateGrForTimeZone:
_endDateGrForTimeZone:
startDateGr
endDateGr
_isParticipantStatusDirty
allowsParticipationStatusModifications
supportedEventAvailabilities
_eventAvailabilityForParticipantStatus:supportedEventAvailabilities:isAllDayEvent:
identifier
initWithObjects:
allowsAvailabilityModifications
_setInvitationStatusAlertedIfNecessary
_setInvitationStatusUnalertedIfNecessary
_invitationChangedPropertyFlags
_shouldAlertInviteeDeclines
initWithTimeInterval:sinceDate:
components:fromDate:toDate:options:
minute
privacyDescription
routingModeEnumForCalRouteType:
allowsScheduling
isDefaultSchedulingCalendar
isFacebookBirthdayCalendar
isSubscribedHolidayCalendar
isDelegate
allowsPrivacyLevelModifications
_invitationChangedPropertyForFlag:
_setInvitationChangedProperty:forFlag:
serverSupportedProposeNewTime
hasOwnerEmailAddress
setPredictedLocationFrozen:
_updatePredictedLocationCacheIfNeeded
_needsPredictedLocationCacheUpdateHoldingLock
locationPredictionForEvent:error:timeout:
localizedDescription
_firstNonConferenceRoomLocationTitle
performWithReadLock:
_updatePredictedLocationCacheIfNeededHoldingLock
performWithWriteLock:
_clearLocationPredictionCacheIfNotFrozenHoldingLock
preferredLocationWithoutPrediction
setPredictedLOI:
isPrediction
shouldDoLocationPredictionForEvent:
allowEvents
_validateDurationConstrainedToRecurrenceInterval
_validateAlarmIntervalConstrainedToRecurrenceInterval:
isAllDayDirty
automaticEventLocationGeocodingAllowed
hasKnownSpatialData
eligibleForTravelAdvisories
get_enableTravelAdvisoriesForAutomaticBehavior
frozenOrMeltedCachedSingleRelationObjectForKey:
hasValidEventAction
isInvitation
_hasExternalIDOrDeliverySource
pendingParticipationStatus
_travelTimeInternalDescription
clearModifiedFlags
setClearModifiedFlags:
_refreshDateForKey:
differenceAsGregorianUnits:flags:
_sendModifiedNote
setRequiresDetachDueToSnoozedAlarm:
validateWithSpan:error:
_isParticipationStatusDirty
validateRecurrenceRule:error:
_validateDatesAndRecurrencesGivenSpan:error:
generateUniqueIDWithEvent:originalEvent:calendar:
_adjustForNewCalendarBeforeCommit
committedCopy
responseMustApplyToAll
requiresDetachDueToSnoozedAlarm
_detachWithStartDate:newStartDate:future:
_isSimpleRepeatingEvent
conformsToRecurrenceRules:
_isSignificantlyDetachedComparedToMaster:shouldIgnorePartStat:
_propagateChangesToDetachedEvents:significantlyDetachedEvents:startDateOffset:duration:calendar:
_clearExceptionDatesAndUpdateDetachedOriginalDates
_filterExceptionDates
_applyTimeChangesToMaster
_updateModifiedPropertiesForThisEventAndAllDetachments
_updateModifiedProperties
knownKeysToSkipForFutureChanges
addChangesFromObject:except:
dateByAddingComponents:toDate:options:
knownKeysToUseForFutureChanges
addChangesFromObject:keep:
isPhantom
_updateMasterDate:forChangeToOccurrenceDate:fromOriginalOccurrenceDate:
strictestEventPrivateValue
_addOrganizerToRecentsIfNeeded
_addNewAttendeesToRecentsIfNeeded
revert
originalOccurrenceIsAllDay
startCalendarDate
calendarTimeZone
_checkStartDateConstraintAgainstDate:timeZone:error:
_occurrenceExistsOnDate:timeZone:
_deleteFromOccurrenceDateOnward:
_deleteThisOccurrence
recurrenceEndWithEndDate:
_updateSelfFromDetachedEventIfNeededForDelete
arrayWithObject:
enumerateObjectsWithOptions:usingBlock:
_cancelDetachedEventsWithSpan:
_eventIsTheOnlyRemainingOccurrence
_noRemainingEarlierOccurrences
_shouldCancelInsteadOfDeleteWithSpan:
_cancelWithSpan:error:
_shouldDeclineInsteadOfDelete
_deleteWithSpan:error:
distantPast
distantFuture
_shouldPreserveFutureWhenSlicingWithStartDate:newStartDate:
masterEvent
emptyMeltedCacheForKeys:
UUIDString
_resetMeltedCache
updateEventToEvent:commit:
isDate:inSameDayAsDate:
isEqualToLocation:
initWithDate:timeZone:
infoWithConflicts:needsAction:event:
potentialConflictOccurrenceDatesInTimePeriod:
predicateForEventsWithStartDate:endDate:calendars:loadDefaultProperties:
eventsMatchingPredicate:
_fetchedEventIsConflict:forStartDate:endDate:
isTentative
dateWithTimeInterval:sinceDate:
rangeWithStartDate:duration:
infoWithConflictsInSeries:outOf:withPeriod:conflictingDates:
updateFromMapItem:
defaultTimeZone
_clearAttendeeChangedFlags
setAttendeeComment:
setAttendeeStatus:
setAttendeeProposedStartDate:
setAttendeeDeclinedStartDate:
externalUriScheme
isStatusDirty
setIsPhantom:
startCalendarDateIncludingTravelTime
overrideStartDate:
durationIncludingTravel
endCalendarDate
startDatePinnedForAllDay
endDatePinnedForAllDay
markEventAsAttendeeForward
_parentParticipationStatus
birthdayPersonID
lunarCalendarString
clearInvitationStatus
addEventAction:
removeEventAction:
isAlerted
setIsAlerted:
isProposedTimeEvent
travelRoutingMode
allowsTravelTimeModifications
locationIsAConferenceRoom
attendeeComment
attendeeStatus
attendeeProposedStartDate
attendeeDeclinedStartDate
allowsProposedTimeModifications
supportsAddingAttachments
confirmPredictedLocation:
rejectPredictedLocation
hasPredictedLocation
setLocationPredictionAllowed:
compareStartDateWithEvent:
compareStartDateIncludingTravelWithEvent:
canDetachSingleOccurrence
changingAllDayPropertyIsAllowed
automaticLocationGeocodingAllowed
travelAdvisoryBehaviorIsEffectivelyEnabled
hasSelfAttendee
canBeRespondedTo
commitWithSpan:error:
isSignificantlyDetached
isSignificantlyDetachedIgnoringParticipation
hasAttendeeProposedTimes
removeWithSpan:error:
privacyLevelString
updateEventToEvent:
scanForConflicts
updateWithGeocodedMapItemAndSaveWithCommit:eventStore:error:
launchURL
dismissAcceptedProposeNewTimeNotification
birthdayPersonUniqueID
_cachedLocationPrediction
_cachedLocationPredictionExpirationDate
_locationPredictionFrozen
_locationPredictionAllowed
_locationPredictionLock
_occurrenceIsAllDay
_requiresDetachDueToSnoozedAlarm
_clearModifiedFlags
_birthdayPersonUniqueID
_occurrenceStartDate
_occurrenceEndDate
_originalOccurrenceStartDate
_originalOccurrenceEndDate
_originalOccurrenceIsAllDay
initWithName:emailAddress:phoneNumber:address:isCurrentUser:
availabilityCache
setKey:withObject:
setKey:withDate:
setKey:withPointerAddress:
_availabilityCache
_addresses
_requestID
setDataProtectionObserver:
_dataProtectionStateChanged
dataProtectionObserver
setStateChangedCallback:
dataIsAccessible
stateChangedCallback
stateChangedNotificationName
_stateChangedCallback
_dataProtectionObserver
initWithArray:copyItems:
_frequency
_interval
_recurrenceEnd
_firstDayOfTheWeek
_daysOfTheWeek
_daysOfTheMonth
_daysOfTheYear
_weeksOfTheYear
_monthsOfTheYear
_setPositions
_ekParticipantStatusFromCalAttendeeStatus:
_calAttendeeStatusFromEKParticipantStatus:
statusRaw
setStatusRaw:
setPendingStatusRaw:
pendingStatusRaw
_valueForFlag:
_setFlag:value:
attendeeWithEmailAddress:name:
attendeeWithName:url:
attendeeWithName:emailAddress:
attendeeWithName:phoneNumber:
attendeeWithName:emailAddress:address:
lastModifiedParticipationStatus
markAsForward
fetchAlarmChangesInStore:resultHandler:
fetchAlarmChangesInSource:resultHandler:
fetchAlarmChangesInCalendar:resultHandler:
reachedMaxDepth
rootObject
initWithRootObject:
faultIfNeededForObject:
depth
setDepth:
setReachedMaxDepth:
_reachedMaxDepth
_rootObject
_depth
_readWriteLock
_performWithReadLock:
_performWithWriteLock:
knownDerivedRelationshipKeys
_isWeakRelationMeltedObject:forKey:
validateWithOwner:error:
_cachedMeltedObjectsCount
_hasChangeHelperInKeys:ignoreKeys:checkUnsaved:
hasUnsavedChangesIgnoreKeys:
_hasUnsavedChangesInKeys:ignoreKeys:
_hasChangesForKey:checkUnsaved:
_singleRelationshipKeysToCheckForChanges
_multiRelationshipKeysToCheckForChanges
_areOnlyChangedKeys:
isSubsetOfSet:
_addChangesFromObject:except:keep:
addChangesFromObject:
updatedMeltedCacheForChangeSet:
addMultiChangedObjectValues:forKey:
removeMultiChangedObjectValues:forKey:
multiChangedObjectValuesForKey:
_addCachedMeltedObject:forMultiValueKey:
updateMultiValueCacheForChangeSet:preservingExistingAdds:
_applyDefinedAfterFirstSaveFrom:
_applyKnownImmutableValuesFrom:
knownImmutableKeys
setCachedMeltedObjects:forMultiValueKey:
setByAddingObject:
_updateCachedMeltedObjectSetForMultiValueKey:usingBlock:
_removeCachedMeltedObject:forMultiValueKey:
removeMultiChangedObjectValue:forKey:
setCachedMeltedObject:forSingleValueKey:
replaceMultiChangedObjectValuesWithObjectValues:forKey:
_emptyMeltedCacheForKey:
removeObjectsForKeys:
_cachedMeltedChildIdentifierToParentMap:
cachedValueForKey:
clearCachedValuesForKeys:
cachedValueForKey:expectingCachedValue:forMasterKey:relatedKeys:populateBlock:
hasUnsavedChangesInKeys:
applyChanges:
_refreshable
refetch
meltedAndCachedMultiRelationCountForKey:
emptyMeltedCache
cachedMeltedChildIdentifierToParentMap
_numberOfSharedLocksForUnitTesting
isDerivedRelationship
knownDerivedAndSingleValueRelationshipKeys
ownerAddresses
hasMailto
resemblesEmailAddress
initWithDayOfTheWeek:weekNumber:
decodeIntegerForKey:
encodeInteger:forKey:
dayOfTheWeek
weekNumber
dayOfWeek:
dayOfWeek:weekNumber:
_dayOfTheWeek
_weekNumber
eventWithRandomUUID
calendarForEntityTypes:eventStore:
createNewReminderCalendar
_clearCGColorCache
backingCalendarWithIdentifier:
unlocalizedTitle
_eventKitBundle
setColorStringRaw:
colorStringRaw
getColorRed:green:blue:
initWithCGColor:
color
isSubscribed
currentProcessHasSyncClientEntitlement
allowsBirthdayModifications
_flagValueWithMask:
_setFlagValue:withMask:
typeDescription:
prohibitsScheduling
setProhibitsScheduling:
canModifySuggestedEventCalendar
initWithBytesNoCopy:length:freeWhenDone:
setCanBeShared:
setCanBePublished:
setReminderSource:
_allowedEntities
_setAllowedEntities:
filteredSetUsingPredicate:
addAlarms:
removeAlarms:
isImmutable
reportSharedCalendarInviteAsJunkForCalendarWithID:accountID:queue:completionBlock:
rowIDsForCalendars:
calendarWithEventStore:
setAllowsContentModifications:
setIsDefaultSchedulingCalendar:
isInbox
setInbox:
isNotificationsCollection
setNotificationsCollection:
setSubscribed:
isHidden
setHidden:
isImmutableRaw
setImmutable:
setAllowsScheduling:
isSharingInvitation
setSharingInvitation:
publishURL
setPublishURL:
canBePublished
canBeShared
setFacebookBirthdayCalendar:
isHolidaySubscribedCalendar
setSubscribedHolidayCalendar:
isFamilyCalendar
setFamilyCalendar:
isMarkedUndeletable
setMarkedUndeletable:
isMarkedImmutableSharees
setMarkedImmutableSharees:
isSuggestionsCalendar
isIgnoringEventAlerts
setIsIgnoringEventAlerts:
allowsIgnoringSharedEventChangeNotifications
isIgnoringSharedCalendarNotifications
setIsIgnoringSharedCalendarNotifications:
isAffectingAvailability
setIsAffectingAvailability:
syncHash
selectionSyncIdentifier
hasEvents
hasTasks
setAllowReminders:
addSharee:
removeSharee:
remove:
removeAllCalendarItemsWithError:
isManaged
setIsJunk:
_cachedJunkStatus
_color
initWithEnabled:weekday:startTime:endTime:timeZone:
enabled
setEnabled:
weekday
setWeekday:
startTime
setStartTime:
endTime
setEndTime:
_enabled
_weekday
_startTime
_endTime
initWithAbsoluteDate:
initWithRelativeOffset:
relativeOffsetRaw
setRelativeOffsetRaw:
bundleWithPath:
authorizationStatusForBundle:
_currentAuthorizationStatus
areLocationsAllowedWithAuthorizationStatus:
areLocationsAvailable
areLocationsAllowed
areLocationsCurrentlyEnabled
defaultGeofencedReminderRadius
alarmWithAlarm:
noneTriggerDate
ownerUUID
addSnoozedAlarm:
removeSnoozedAlarm:
setIsSnoozed:
isTopographicallyEqualToAlarm:
triggerIsNotRelativeToTravelTime
setTriggerIsNotRelativeToTravelTime:
isVehicleAlarm
isTimeToLeaveAlarm
setIsTimeToLeaveAlarm:
shouldIncludeInNormalAlarms
soundName
setSoundName:
_soundName
shareeWithName:url:
_urlForEmailAddress:andPhoneNumber:
initWithName:url:
initWithName:url:externalID:
shareeStatusRaw
setShareeStatusRaw:
shareeAccessLevelRaw
setShareeAccessLevelRaw:
stringRemovingMailto
hasTel
stringRemovingTel
_ekShareeStatusFromCalShareeStatus:
_calShareeStatusFromEKShareeStatus:
_ekShareeAccessLevelFromCalShareeAccessLevel:
_calShareeAccessLevelFromEKShareeAccessLevel:
shareeWithName:emailAddress:
shareeWithName:emailAddress:phoneNumber:
shareeWithName:phoneNumber:
shareeWithName:emailAddress:phoneNumber:externalID:
statusEnumFromString:
statusStringFromEnum:
setSourceIdentifier:
preferredEventPrivateValueRaw
_calEventPrivacyLevelToEKPrivacyLevel:
_ekPrivacyLevelToCalEventPrivacyLevel:
setPreferredEventPrivateValueRaw:
strictestEventPrivateValueRaw
setStrictestEventPrivateValueRaw:
flag:
setFlag:value:
disabled
setDisabled:
delegatedAccountOwnerStoreID
_allCalendars
allCalendars
_countCalendarItemsOfCalType:resultHandler:
cachedConstraintsForSource:
personaIdentifierForAccountIdentifier:
lastSyncStartDate
lastSyncEndDate
laterDate:
externalIdentificationForAccountID:resultsBlock:
_cacheExternalIdentification
_cacheExternalIdentificationIfNeeded
managedConfigurationAccountAccess
sourceWithEventStore:
setSourceType:
preferredEventPrivateValue
setPreferredEventPrivateValue:
setStrictestEventPrivateValue:
defaultAlarmOffset
setDefaultAlarmOffset:
constraintsDescriptionPath
setConstraintsDescriptionPath:
creatorBundleID
setCreatorBundleID:
creatorCodeSigningIdentity
setCreatorCodeSigningIdentity:
onlyCreatorCanModify
setOnlyCreatorCanModify:
wasMigrated
setWasMigrated:
showsNotifications
setShowsNotifications:
usesSelfAttendee
setUsesSelfAttendee:
isEnabled
supportsAlarmAcknowledgedDate
setSupportsAlarmAcknowledgedDate:
setDelegatedAccountOwnerStoreID:
calendarWithExternalIdentifier:
removeCalendarItemsOlderThanDate:entityTypeMask:error:
readWriteCalendarsForEntityType:
supportsCalendarCreation
countCalendarItemsWithResultHandler:
countCalendarItemsOfType:resultHandler:
displayOrderForNewCalendar
personaIdentifier
setLastSyncError:
lastSyncError
setLastSyncStartDate:
setLastSyncEndDate:
isSyncing
syncs
wantsCommentPromptWhenDeclining
serverHost
serverPort
timeOfLastExternalIdentificationCache
setTimeOfLastExternalIdentificationCache:
cachedHost
setCachedHost:
cachedPort
setCachedPort:
cachedOwnerAddresses
setCachedOwnerAddresses:
_isFacebook
_snoozeAlarmRequiresDetach
_timeOfLastExternalIdentificationCache
_cachedHost
_cachedPort
_cachedOwnerAddresses
resourceChangeFromEventStore:
eventID
_calendarName
_eventID
_createCount
_updateCount
_deleteCount
fetchCalendarChangesInStore:resultHandler:
fetchCalendarChangesInSource:resultHandler:
_travelTimeWithStartCoordinate:endCoordinate:arrivalDate:withRouteType:completionBlock:
findCoordinatesForLocation:completionBlock:
code
isCurrentLocation
travelTimeFrom:to:arrivalDate:withRouteTypes:withCompletionBlock:
dictionaryWithDictionary:
travelTimeFrom:to:arrivalDate:withRouteType:withCompletionBlock:
mapItemForCurrentLocation
placemark
addressDictionary
initWithCoordinate:addressDictionary:
initWithPlacemark:
setDestination:
setArrivalDate:
initWithRequest:
expectedTravelTime
setStart:
setEnd:
setDuration:
setRoute:
_updateLocation:withMapItem:forRoute:withCompletionBlock:
calculateETAWithCompletionHandler:
postalAddressWithAddressBookDictionaryRepresentation:
stringFromPostalAddress:style:
setPlacemark:
placemarkForLocation:withCompletionBlock:
placemarkForAddress:withCompletionBlock:
geocodeAddressString:completionHandler:
confidence
initWithLatitude:longitude:
fetchLocationsOfInterestAssociatedToIdentifier:withHandler:
defaultManager
geocodeAddress:withCompletionBlock:
estimateGeolocationFromHistoricDevicePositionAtLocation:withCompletionBlock:
locationOfInterest
mapItem
customLabel
countryCode
thoroughfare
locality
initWithType:customLabel:mapItemName:addressCountryCode:addressThoroughFare:addressLocality:
initWithPredictedLocationOfInterest:
mapItemName
addressCountryCode
addressThoroughfare
addressLocality
rtPredictedLocationOfInterest
_customLabel
_mapItemName
_addressCountryCode
_addressThoroughfare
_addressLocality
_rtPredictedLocationOfInterest
controlCharacterSet
invert
whitespaceAndNewlineCharacterSet
formUnionWithCharacterSet:
componentsSeparatedByCharactersInSet:
_stringByStrippingControlCharactersFromString:
setGeoLocation:
region
_handle
geoLocation
_clearGeoLocationCache
radiusRaw
setRadiusRaw:
stringByRemovingPercentEncoding
predictedLOI
isImprecise
setImprecise:
isEqualToData:
setRouteType:
localizedStringForLabel:
capitalizedString
contactType
contactIdentifierIsMe:
locationWithMapItem:
displayLabelForContact:unlocalizedLabel:
cacheKey
geoURLString
_imprecise
_predictedLOI
entityID
initWithEntityType:rowID:temporary:
scheme
path
lastPathComponent
characterAtIndex:
substringFromIndex:
pathComponents
decodeIntForKey:
decodeBoolForKey:
encodeInt:forKey:
encodeBool:forKey:
initWithEntityType:entityID:
entityName
objectIDWithURL:
CADObjectIDsFromEKObjectIDs:
initWithDictionaryRepresentation:
dictionaryRepresentation
_temporary
_entityType
_rowID
sharedEventStore
_sharedEventStore
_occurrenceCount
sequence
setSequence:
isDefaultAlarmRemoved
setDefaultAlarmRemoved:
setStartLocation:
setHasNotes:
isPhantomMaster
setPhantomMaster:
setHasRecurrenceRules:
setHasAttendees:
addAttachment:
removeAttachment:
initWithEntityName:toMany:inversePropertyNames:ownsRelated:
inversePropertyIsApplicable
_entityName
_toMany
_ownsRelated
_inversePropertyNames
_inversePropertyIsApplicable
getResourceValue:forKey:error:
setFileNameRaw:
createTempDestinationURLWithExtension:
archiveURLToFile:toFile:createPKZipArchive:
_copyFileAtURLToTemporaryDirectory:
setScheme:
URLByAppendingPathComponent:
URLByAppendingPathExtension:
fileURLWithPath:
pathExtension
dataWithContentsOfURL:options:error:
writeToFile:atomically:
fileNameRaw
initWithFilepath:
localURL
compareFileNames:
fetchEventChangesInStore:resultHandler:
fetchEventChangesInSource:resultHandler:
fetchEventChangesInCalendar:resultHandler:
initWithEventStore:limitedToSource:visibilityChangedCallback:
setVisibilityChangedCallback:
setLimitedToSource:
visibilityChangedNotificationName
visibilityChangedCallback
initWithNotificationName:callback:
setNotificationListener:
notificationListener
_calendarsThatAreVisible:filteredByIdentity:
limitedToSource
_deselectedCalendarIdentifiers
initWithEventStore:visibilityChangedCallback:
visibleCalendars
invisibleCalendars
visibleCalendarsForAllIdentities
invisibleCalendarsForAllIdentities
setInvisibleCalendars:
_invisibleCalendars
_limitedToSource
_visibilityChangedCallback
_notificationListener
weakEventStore
unsafeRawPointer
_unsafeRawPointer
_weakEventStore
initWithOptions:path:
initWithOptions:path:allowDelegateSources:
initWithEKOptions:path:changeTrackingClientId:enablePropertyModificationLogging:allowDelegateSources:
ekEventStoreInitOptionsFromCalDatabaseInitOptions:
processInfo
processName
setValidator:
_accessStatusChanged
calDatabaseInitOptionsFromEKEventStoreInitOptions:
setDatabaseInitOptions:
setChangeTrackingClientId:
setEnablePropertyModificationLogging:
setDatabasePath:
setAllowDelegateSources:
eventStoreChangedDistributedNotificationName
_requestAccessForEntityType:
currentProcessIsFirstPartyCalendarApp
currentProcessIsCalendarDaemon
currentProcessIsDataAccess
makeObjectsPerformSelector:withObject:
unitTesting
currentProcessHasContactsUIEntitlement
authorizationStatusForEntityType:
requestAccessToEntityType:completion:
databasePath
currentProcessHasBirthdayModificationEntitlement
setSourceAccountManagement:withBundleID:
setManagement:
setManagementBundleIdentifier:
setUnitTesting:
databaseInitOptions
_postEventStoreChangedNotificationWithChangeType:changedObjectIDs:
_removeCachedCalendarWithID:
_clearCachedConstraintsForSourceWithObjectID:
objectsForKeys:notFoundMarker:
_clearCachedCalendars
_cacheSourceWithObjectID:withDefaultLoadedPropertyValues:forKeys:
_cacheCalendarWithObjectID:withDefaultLoadedPropertyValues:forKeys:
_clearCachedSources
_validateObjectIDs:completion:
calendarSourcesAndDefaultsQueue
_databaseChangedExternally:
objectWithObjectID:
_loadSourcesIfNeeded
_logMainThreadFetchWarningIfNeeded
_sourceWithID:
_saveWithoutNotify
_isUnitTesting
currentThread
isMainThread
mainBundle
bundleIdentifier
hasPrefix:
_loadCalendarsIfNeeded
_calendar:supportsEntityType:
shouldSaveCalendarAsEventCalendar:
_saveCalendar:commit:error:
shouldSaveCalendarAsReminderCalendar:
saveCalendar:error:
canModifyCalendarDatabase
_removeCalendar:commit:error:
removeCalendar:error:
query
_parseURI:expectedScheme:identifier:options:
_eventWithURI:checkValid:
closestCachedOccurrenceToDate:forEventUID:
eventForUID:occurrenceDate:checkValid:
eventWithUniqueId:occurrenceDate:
initWithContentsOfFile:
importICSData:intoCalendar:options:
_importICSData:intoCalendarsWithIDs:options:
defaultCalendarForNewEvents
defaultCalendarForNewEventsInDelegateSource:
setDefaultCalendar:forNewEventsInDelegateSource:
defaultCalendarForNewReminders
saveReminder:error:
_saveReminder:commit:error:
removeReminder:commit:error:
removeReminder:error:
_removeReminder:commit:error:
calendarItemWithIdentifier:
publicObjectWithFetchedObjectID:
reminderWithIdentifier:
initWithExternalIdentifier:entityType:
setCalendars:
_calendarItemsMatchingPredicate:
calendarItemsWithExternalIdentifier:inCalendars:
_calendarItemsWithExternalIdentifier:inCalendars:entityTypes:
remindersMatchingPredicate:
_remindersMatchingPredicate:
_validateReminderPredicate:
fetchRemindersMatchingPredicate:completion:
predicateForRemindersInCalendars:
predicateForRemindersInCalendars:preloadProperties:
predicateWithCalendars:
setShouldLoadDefaultProperties:
setDefaultPropertiesToLoad:
predicateForIncompleteRemindersWithDueDateStarting:ending:calendars:
setSortOrder:
setUseDueDateAsCompletionDate:
setLimitToCompletedOrIncomplete:
setDueAfter:
setDueBefore:
predicateForCompletedRemindersWithCompletionDateStarting:ending:calendars:
_predicateForRemindersWithDate:useAsCompletionDate:calendars:limitToCompletedOrIncomplete:completed:includeDatesBefore:sortOrder:preloadProperties:maxResults:
calendarDateForDay
setUseCompletionDateAsAlternate:
setMaxResults:
_predicateForRemindersWithDate:useAsCompletionDate:calendars:limitToCompletedOrIncomplete:completed:includeDatesBefore:sortOrder:preloadProperties:
predicateForCompletedRemindersWithDueDate:calendars:sortOrder:
predicateForRemindersWithSearchTerm:preloadProperties:
setSearchTerm:
predicateForRemindersWithTitle:listTitle:limitToCompletedOrIncomplete:completed:dueAfter:dueBefore:searchTerm:sortOrder:maxResults:
setListTitle:
accessGrantedForEntityType:
closestCachedOccurrenceToDate:forEventUID:prefersForwardSearch:
sharedCalendarInvitationsForEntityTypes:
scheduledTaskCacheFetchTasksOnDay:maxResults:
predicateForScheduledRemindersInCalendars:onDay:
removeResourceChanges:error:
resourceChangesForEntityTypes:
removeInviteReplyNotifications:error:
_refreshDASource:isUserRequested:
refreshSourcesIfNecessary:
_registerObjectImmediate:
classForEntityName:
_addFetchedObjectWithID:
_forgetRegisteredObjects
_commit:
database
_reregisterObject:oldID:
_removeCachedCalendarFromSource:
_validateEventPredicate:
predicateWithStartDate:endDate:timeZone:calendars:loadDefaultProperties:
initWithTimeZone:startDate:endDate:title:location:notes:participants:limit:
predicate
predicateWithLimit:
predicateWithCalendarIDs:
CalSimulatedDateForNow
travelEligibleEventsInCalendars:startDate:endDate:
predicateForPotentialTravelEventsInCalendars:startDate:endDate:
initWithCalendarIDs:startDate:endDate:
setStartDateRestrictionThreshold:
predicateWithStartDate:title:calendars:
initWithSearchString:
initWithOpaqueKey:
predicateForEventsWithStartDate:endDate:calendars:
initWithCalendarIDs:startDate:endDate:contacts:
initWithEntityType:filters:calendar:
initWithProperty:comparison:integerValue:
initWithProperty:comparison:stringValue:
initWithEntityType:filters:source:
initWithProperty:comparison:dateValue:
initWithFilters:operation:
initWithPredicate:limitWithStartDate:endDate:mustStartInInterval:
initWithEntityType:filters:calendars:
constraintsCacheQueue
_cachedConstraints
_fetchConstraintsForSourceWithObjectID:
set_cachedConstraints:
getBytes:length:
notificationCollectionCacheQueue
_cachedNotificationCollections
_fetchPersistentNotificationCollectionForSourceWithObjectID:
set_cachedNotificationCollections:
reminderStoreContainerTokenProvider
setReminderStoreContainerTokenProvider:
setDenyAccessToEvents:
setDenyAccessToReminders:
initWithAccessToDelegateSources
initWithEKOptions:
initWithOptions:path:changeTrackingClientId:enablePropertyModificationLogging:allowDelegateSources:
setSourceAccountManagement:
_setIsUnitTesting:
_simulateDaemonCrashForUnitTests
changesSinceSequenceNumber:
reminderStoreChanged
_defaultCalendarChangedExternally
_defaultAlarmChangedExternally
eventStoreIdentifier
_deletableSources
delegateSources
delegateSourcesForSource:
fetchGrantedDelegatesForSource:results:
updateGrantedDelegatePermission:source:completion:
localSource
ownedSources
sourceWithExternalID:
saveSource:commit:error:
removeSource:commit:error:
hideCalendarsFromNotificationCenter:error:
_deletableCalendars
readWriteCalendarCountForEntityType:
deleteCalendar:forEntityType:error:
eventWithIdentifier:
_eventOccurrenceWithURI:
eventForUID:occurrenceDate:
eventWithUniqueId:
allEventsWithUniqueId:occurrenceDate:
saveEvent:span:error:
removeEvent:span:error:
setInvitationStatus:forEvent:error:
setInvitationStatus:forEvents:error:
importICS:intoCalendar:options:
importICSData:intoCalendars:options:
ICSDataForCalendarItems:preventLineFolding:
copyCGColorForNewCalendar
defaultLocalCalendar
acquireDefaultCalendarForNewEvents
setDefaultCalendarForNewEvents:
acquireDefaultCalendarForNewReminders
setDefaultCalendarForNewReminders:
reminderWithExternalURI:
calendarItemsWithUniqueIdentifier:inCalendar:
calendarItemsWithExternalIdentifier:
eventsWithExternalIdentifier:inCalendars:
remindersWithExternalIdentifier:inCalendars:
countOfRemindersMatchingPredicate:
reminderObjectIDsMatchingPredicate:
predicateForIncompleteRemindersDueBeforeOrOnExactDueDate:calendars:sortOrder:
predicateForIncompleteRemindersWithDueDate:calendars:sortOrder:
predicateForPreloadedIncompleteRemindersWithDueDate:calendars:sortOrder:preloadProperties:
predicateForPreloadedIncompleteRemindersWithDueDate:calendars:sortOrder:preloadProperties:maxResults:
predicateForIncompleteRemindersDueBeforeOrOnDueDate:calendars:sortOrder:
predicateForPreloadedCompletedRemindersWithDueDate:calendars:sortOrder:preloadProperties:
predicateForCompletedRemindersWithDueDateOrCompletionDate:calendars:sortOrder:
predicateForAllRemindersWithDueDate:calendars:
predicateForAllRemindersDueBeforeOrOnDueDate:calendars:
predicateForRemindersWithTitle:calendars:
predicateForCompletedRemindersWithCalendars:
predicateForRemindersWithSearchTerm:
predicateForRemindersWithTitle:listTitle:limitToCompletedOrIncomplete:completed:dueAfter:dueBefore:searchTerm:sortOrder:
fetchProperties:forReminders:
eventWithUUID:
doEvents:haveOccurrencesAfterDate:
calendarWithExternalURI:
countOfRemindersWithContactIdentifier:
remindersWithContactIdentifier:
occurrenceCacheOccurrencesAreBeingGenerated
occurrenceCacheGetOccurrencesForCalendars:onDay:
occurrenceCacheGetOccurrencesForCalendars:
scheduledTaskCacheFetchDaysAndTaskCounts
scheduledTaskCacheFetchTasksOnDay:
rebuildOccurrenceCache
suggestedEventCalendar
insertSuggestedEventCalendar
removeSuggestedEventCalendar
confirmSuggestedEvent:
acceptSuggestedEvent:
deleteSuggestedEvent:
_SGSuggestionsServiceClass
naturalLanguageSuggestedEventCalendar
unacknowledgedEventCount
notifiableEventCount
saveNotification:commit:error:
saveNotificationCollection:commit:error:
removeResourceChange:error:
removeResourceChangesForCalendarItem:error:
eventNotifications
eventNotificationCount
eventNotificationCountForSource:excludingDelegateSources:filteredByShowsNotificationsFlag:
inboxRepliedSectionItems
removeInviteReplyNotification:error:
refreshSourcesIfNecessary
refreshSource:userRequested:
eventObjectIDsMatchingPredicate:
fetchEventsMatchingPredicate:resultHandler:
fetchObjectsMatchingPredicate:completion:
objectsMatchingPredicate:
cancelFetchRequest:
alarmWithUUID:
alarmOccurrencesBetweenStartDate:endDate:inCalendars:completion:
locationBasedAlarmOccurrencesWithCompletion:
vehicleTriggerAlarmOccurrencesWithCompletion:
predicateForAssistantEventSearchWithTimeZone:startDate:endDate:title:location:notes:participants:calendars:limit:
predicateForNotifiableEvents
predicateForNotificationCenterVisibleEvents
predicateForUnacknowledgedEvents
predicateForUnalertedEvents
predicateForUpcomingEventsWithLimit:
predicateForMasterEventsInCalendars:
hasImmediatelyEligibleTravelEvents
predicateForUpNextEventsInCalendars:startDate:endDate:startDateRestrictionThreshold:
predicateForEventsWithStartDate:title:source:
predicateForNaturalLanguageSuggestedEventsWithSearchString:
predicateForEventCreatedFromSuggestionWithOpaqueKey:
predicateForEventsWithStartDate:endDate:calendars:matchingContacts:
predicateForCalendarItemsOfType:inCalendar:
predicateForMasterEventsWithExternalTrackingStatusInCalendar:
predicateForCalendarItemsOfType:withUniqueIdentifier:inCalendar:
predicateForCalendarItemsOfType:withUniqueIdentifier:inSource:
predicateForCalendarItemsOfType:withExternalID:inCalendar:
predicateForCalendarItemsOfType:withExternalID:inSource:
predicateForMasterEventsWithStartDate:title:inCalendar:
predicateForMasterEventsWithOccurrencesWithStartDate:endDate:inCalendar:
predicateForMasterEventsWithInvitationsAndOccurrencesAfter:inCalendar:
predicateForNonrecurringEventsWithStartDate:endDate:calendars:
predicateForIncompleteRemindersAndRemindersCompletedAfter:inCalendar:
registerForDetailedChangeTracking:
unregisterForDetailedChangeTracking:
fetchChangedObjectIDsSinceToken:resultHandler:
markChangedObjectIDsConsumedUpToToken:
markIndividualChangesConsumed:error:
clearSuperfluousChanges
purgeChangelog
cacheValidationStatusForAddress:status:
addressValidationStatus:
pushSpotlightUpdatesForCalendarItemUUIDs:
notificationCollectionForSource:
postSyntheticRouteHypothesis:forEventWithExternalURL:
insertedObjects
setInsertedObjects:
deletedObjects
setDeletedObjects:
updatedObjects
setUpdatedObjects:
objectsPendingCommit
setObjectsPendingCommit:
setDatabase:
lastDatabaseNotificationTimestamp
setLastDatabaseNotificationTimestamp:
registeredQueue
unsavedChangesQueue
dbChangedQueue
registeredObjects
setRegisteredObjects:
calendarDataContainerProvider
_localSourceID
_birthdaySourceID
_defaultCalendarsForNewEventsIDBySourceID
_defaultCalendarForNewRemindersID
_suggestedEventCalendarID
_naturalLanguageSuggestedEventCalendarID
_cachedValidatedAddresses
_defaultTimedAlarmOffset
_defaultAllDayAlarmOffset
_allowsBirthdayCalendarModifications
_hasAccessToEvents
_hasAccessToReminders
_accessDetermined
_insertedObjects
_deletedObjects
_updatedObjects
_objectsPendingCommit
_database
_lastDatabaseNotificationTimestamp
_calendarSourcesAndDefaultsQueue
_registeredQueue
_unsavedChangesQueue
_dbChangedQueue
_constraintsCacheQueue
_notificationCollectionCacheQueue
__cachedConstraints
__cachedNotificationCollections
_reminderStore
_reminderSourceIDToEventSourceIDMapping
_eventSourceIDToReminderSourceIDMapping
_reminderSourceMapLock
_registeredObjects
_calendarDataContainerProvider
_propertyWithFlagDidChange:
calendarItemPropertyName
fetchSourceChangesInStore:resultHandler:
initWithName:emailAddress:address:isCurrentUser:
organizerWithName:emailAddress:address:isCurrentUser:
_conflictedParticipants
fetchContactChangesInStore:resultHandler:
fetchContactChangesInSource:resultHandler:
fetchContactChangesInCalendar:resultHandler:
initWithName:emailAddress:address:
initWithEmailAddress:name:
initWithAddress:name:
reminderSource
_reminderSource
_updateSpecifier
_clearArrays
_parseSpecifierIfNeeded
_appendDaysOfTheWeek:toSpecifier:
_appendIndexList:toSpecifier:propertyKey:
_parseDaysOfWeek:range:
_parseIndexList:range:
stringWithCharacters:length:
_specifier
_dirty
_parsed
bundleWithIdentifier:
setTotalOccurrencesInSeries:
setTotalConflictsInSeries:
setConflictPeriodForSeries:
setConflictingDates:
setConflictingEvents:
setNeedsActionEvents:
setTotalConflictingEvents:
setTotalNeedsActionEvents:
totalConflictsInSeries
totalOccurrencesInSeries
_dateRangeToScanForConflictsForEvent:dateForNow:
_maxRangeLengthForRule:
dateRangeToScanForConflictsForEvent:
calendarIdentifiersToScanForConflictsForEvent:
initWithConflictingDates:conflictingEvents:needsActionEvents:totalOccurrencesInSeries:conflictPeriodForSeries:
conflictingDates
conflictingEvents
needsActionEvents
totalConflictingEvents
totalNeedsActionEvents
conflictPeriodForSeries
_conflictingDates
_conflictingEvents
_needsActionEvents
_totalOccurrencesInSeries
_totalConflictsInSeries
_totalConflictingEvents
_totalNeedsActionEvents
_conflictPeriodForSeries
reminderWithRandomUUID
setSpan:
_creationDate
_span
currentProcessHasBooleanEntitlement:
get_suggestedLocationsTestMode
_mockLocationForEvent:
predictedLocationOfInterestForEventTitle:eventLocation:calendarIdentifier:timeout:error:
sharedService
geoMapItemHandle
_itemWithGeoMapItem:
uncertainty
domain
resolveMapItemLocallyFromHandle:completionHandler:
get_suggestEventLocations
authorizationStatusForBundleIdentifier:
userInteractionWithPredictedLocationOfInterest:interaction:feedback:
ticketForReverseGeocodeCoordinate:shiftLocationsIfNeeded:traits:
geoAddress
structuredAddress
submitWithHandler:networkActivity:
enumerateKeysAndObjectsWithOptions:usingBlock:
predicateWithFormat:
userInteractionWithPredictedLocationOfInterest:interaction:
calendarWithRandomUUID
@24@0:8@16
B24@0:8@16
@16@0:8
v16@0:8
v24@0:8@16
@"NSSet"
#16@0:8
@40@0:8q16Q24@32
q20@0:8i16
i24@0:8q16
@24@0:8q16
@24@0:8Q16
@32@0:8@16B24B28
@24@0:8^{_NSZone=}16
@88@0:8q16q24@32@40@48@56@64@72@80
@40@0:8q16q24@32
{?=iiiiid}16@0:8
q16@0:8
v24@0:8q16
v24@0:8Q16
Q16@0:8
i16@0:8
v20@0:8i16
B16@0:8
@24@0:8B16B20
@"EKRecurrenceHelper"
@24@0:8:16
@32@0:8:16@24
@40@0:8:16@24@32
B24@0:8#16
B24@0:8:16
Vv16@0:8
^{_NSZone=}16@0:8
B24@0:8@"Protocol"16
@"NSString"16@0:8
@"EKFrozenReminderObject"24@0:8@"NSString"16
@32@0:8@16@24
@"REMStore"
@"EKEventStore"
@"NSArray"
v20@0:8B16
B32@0:8@16@24
q24@0:8q16
v32@0:8d16Q24
@48@0:8@16@24@32@40
B48@0:8@16@24@32^@40
@64@0:8@16@24@32@40@?48@?56
@40@0:8@16@24@32
v40@0:8@16@?24@32
@"NSString"
@"NSObject<OS_dispatch_queue>"
@"NSMutableDictionary"
B24@0:8{?=II}16
v24@0:8@?16
v28@0:8@?16B24
B32@0:8@"NSPredicate"16@24
@28@0:8@16B24
v36@0:8@16@24B32
v32@0:8@16@24
d16@0:8
v24@0:8d16
@"NSDate"
@"NSTimeZone"
@"NSMutableArray"
@"NSURL"
@"EKSerializableStructuredLocation"
@48@0:8@16@24@32@?40
v28@0:8@16B24
i44@0:8I16@20@28@36
@"NSNumber"
@44@0:8i16@20@28@36
@36@0:8i16@20@28
q28@0:8@16i24
@"EKCalendarNotification"
@"EKObjectID"
^{EKPersistentObject=#}16@0:8
@24@0:8@"<EKProtocolObject>"16
@"EKChangeSet"16@0:8
@"EKObject"16@0:8
B24@0:8@"NSString"16
@"EKObject"24@0:8@"EKEventStore"16
v32@0:8@16@"NSString"24
@24@0:8@"NSString"16
B24@0:8@"<EKFrozenMeltedPair>"16
B32@0:8@"<EKFrozenMeltedPair>"16@"NSSet"24
@"NSDictionary"16@0:8
@"NSSet"16@0:8
B28@0:8@16B24
@"EKPersistentObject"
@"EKChangeSet"
@"NSDictionary"
@"EKObjectValidationContext"
@72@0:8@16{?=iccccd}24{?=iccccd}40@56q64
@80@0:8@16@24{?=iccccd}32{?=iccccd}48@64q72
@84@0:8@16@24{?=iccccd}32{?=iccccd}48@64q72B80
@88@0:8@16@24{?=iccccd}32{?=iccccd}48@64@72q80
@92@0:8@16@24{?=iccccd}32{?=iccccd}48@64@72q80B88
B44@0:8@16@24@32B40
@56@0:8@16@24@32@40@48
@32@0:8@16q24
v32@0:8@16@?24
@"EKObjectID"16@0:8
@72@0:8@16@24@32@40@48@56@64
v32@0:8@"CADDatabaseInitializationOptions"16@?<v@?i>24
v24@0:8@?<v@?iBB>16
v32@0:8q16@?24
v40@0:8@16@24@?32
v28@0:8i16@?20
v32@0:8d16@?24
v48@0:8@16@24Q32@?40
v36@0:8@16B24@?28
v28@0:8B16@?20
v24@0:8@?<v@?i@"NSString">16
v24@0:8@?<v@?iq>16
v24@0:8@?<v@?i>16
v32@0:8q16@?<v@?iBq@"NSArray"@"NSArray"@"NSArray">24
v40@0:8@"NSArray"16@"CADObjectID"24@?<v@?iBq@"NSArray">32
v32@0:8q16@?<v@?i>24
v32@0:8@"NSArray"16@?<v@?i>24
v24@0:8@?<v@?ii>16
v28@0:8i16@?<v@?i@"NSDictionary">20
v32@0:8d16@?<v@?iB@"NSArray"d>24
v48@0:8@"NSArray"16@"NSArray"24Q32@?<v@?i@"NSArray">40
v36@0:8@"NSArray"16B24@?<v@?i@"NSData">28
v28@0:8B16@?<v@?i>20
v24@0:8@?<v@?iB@"NSDictionary">16
v24@0:8@?<v@?iB>16
v24@0:8@?<v@?iQ>16
v48@0:8@16@24@32@?40
v32@0:8@"CADObjectID"16@?<v@?iB>24
v32@0:8@"NSArray"16@?<v@?i@"NSArray">24
v40@0:8@"CADObjectID"16@"NSArray"24@?<v@?i@"NSArray">32
v40@0:8@"CADObjectID"16@"NSString"24@?<v@?i@"NSObject<NSSecureCoding>">32
v40@0:8@"CADObjectID"16@"NSString"24@?<v@?i@"NSString">32
v40@0:8@"CADObjectID"16@"NSString"24@?<v@?i@"NSNumber">32
v40@0:8@"CADObjectID"16@"NSString"24@?<v@?i@"NSDate">32
v40@0:8@"CADObjectID"16@"NSString"24@?<v@?i@"NSData">32
v40@0:8@"CADObjectID"16@"NSString"24@?<v@?i@"CADObjectID">32
v40@0:8@"CADObjectID"16@"NSString"24@?<v@?i@"NSSet">32
v48@0:8@"CADObjectID"16@"NSDictionary"24@"NSDictionary"32@?<v@?i>40
v36@0:8i16@20@?28
v44@0:8@16i24@28@?36
v32@0:8@"NSArray"16@?<v@?i@"NSArray"@"NSArray">24
v24@0:8@?<v@?i@"CADObjectID">16
v32@0:8@"CADObjectID"16@?<v@?i@"NSData">24
v32@0:8@"CADObjectID"16@?<v@?i@"CADObjectID">24
v36@0:8@"CADObjectID"16B24@?<v@?iB>28
v36@0:8i16@"CADObjectID"20@?<v@?iQ>28
v44@0:8@"NSDate"16i24@"CADObjectID"28@?<v@?i>36
v32@0:8@"CADObjectID"16@?<v@?i@"NSArray">24
v40@0:8@"CalGrantedDelegate"16@"CADObjectID"24@?<v@?i>32
v32@0:8@"CADObjectID"16@?<v@?ii>24
v32@0:8@"CADObjectID"16@?<v@?i>24
v40@0:8@16i24i28@?32
v20@0:8I16
v32@0:8@"NSString"16@?<v@?i@"CADObjectID">24
v40@0:8@"NSString"16@"CADObjectID"24@?<v@?i@"NSArray">32
v40@0:8@"NSPredicate"16i24i28@?<v@?i@"NSArray">32
v40@0:8@"NSString"16@"CADObjectID"24@?<v@?i>32
v36@0:8i16@"NSString"20@?<v@?ii>28
v36@0:8i16@"NSString"20@?<v@?@"NSArray"i>28
v36@0:8@16i24@?28
v40@0:8i16@20B28@?32
v44@0:8@16@24i32@?36
v60@0:8@16@24@32B40@44@?52
v32@0:8@"CADObjectID"16@"CADObjectID"24
v32@0:8@"NSString"16@?<v@?i@"NSArray">24
v40@0:8@"NSDate"16@"NSTimeZone"24@?<v@?i@"NSDate">32
v36@0:8@"CADObjectID"16i24@?<v@?B>28
v40@0:8@"NSArray"16@"NSDate"24@?<v@?i@"NSArray">32
v40@0:8i16@"NSDate"20B28@?<v@?i@"NSDate">32
v44@0:8@"NSString"16@"NSArray"24i32@?<v@?i>36
v60@0:8@"CADObjectID"16@"NSDate"24@"NSDate"32B40@"NSTimeZone"44@?<v@?iB>52
v32@0:8@"NSString"16@?<v@?iB>24
v32@0:8@"CADObjectID"16@?<v@?i@"NSSecurityScopedURLWrapper">24
v24@0:8@"CADObjectID"16
v32@0:8@"EKReminderPredicate"16@?<v@?ii>24
v40@0:8@"NSArray"16@"NSArray"24@?<v@?i@"NSArray">32
v24@0:8@?<v@?i@"NSArray">16
v48@0:8@"NSDate"16@"NSDate"24@"NSArray"32@?<v@?i@"NSArray">40
v40@0:8@16B24B28@?32
v28@0:8B16@?<v@?i@"NSArray"@"NSArray"@"NSArray">20
v40@0:8@"NSString"16B24B28@?<v@?iQ>32
v24@0:8@?<v@?i@"NSArray"@"NSArray">16
v36@0:8i16@"CADObjectID"20@?<v@?i>28
v40@0:8@"CADRouteHypothesis"16@"NSString"24@?<v@?i>32
v32@0:8@16I24B28
v32@0:8@"NSArray"16I24B28
I24@0:8@16
@"<CADInterface>"
@"NSXPCConnection"
@"<EKDaemonConnectionDelegate>"
@"CADDatabaseInitializationOptions"
@"CalPreferences"
@"EKEventStore"16@0:8
@24@0:8@?16
@"EKTimedEventStorePurger"
q24@0:8@16
@"EKParticipant"
^{NSObject=#}40@0:8@16@24@32
v40@0:8@16@24@32
B40@0:8@16@24@32
@32@0:8@16^@24
@"NSData"32@0:8@"EKEvent"16^@24
@"EKEvent"32@0:8@"NSData"16^@24
@"NSString"32@0:8@"NSData"16^@24
B24@0:8^@16
@"CalLocation"
@"NSDate"16@0:8
@40@0:8@16@24q32
I16@0:8
B20@0:8B16
v32@0:8@16d24
v40@0:8@16@24q32
B32@0:8@16^@24
B40@0:8@16@24^@32
v32@0:8@?16@24
v32@0:8@16^B24
@52@0:8B16@20@28@36q44
@?16@0:8
@20@0:8B16
@"NSObject<OS_dispatch_source>"
@36@0:8{?=IIb1b1b1b1b1b1b1b1b1b1b1b1b1b1b1b1b1b1b1b1b1b1b1b1b1b1b1b1b1b1b1b1b1b1b1b1b1b1b1b1b1b1b1b1b1b1b1b1b1b1b1b1b1b1b1b1b1b1b1b1b1b1b1b1b1b1b1b1}16
{?="maxAlarmsAllowed"I"maxRecurrencesAllowed"I"supportsAlarmTriggerIntervals"b1"supportsAlarmTriggerDates"b1"supportsAlarmsTriggeringAfterStartDate"b1"snoozeAlarmRequiresDetach"b1"organizerCanSeeAttendeeStatuses"b1"inviteesCanSeeAttendeeStatuses"b1"statusesAreAccurate"b1"supportsIncomingInvitations"b1"supportsOutgoingInvitations"b1"requiresOutgoingInvitationsInDefaultCalendar"b1"supportsInvitationModifications"b1"supportsEventForwarding"b1"supportsResponseComments"b1"deliverySourceOrExternalIDRequiredForResponse"b1"proposedStatusRequiredForResponse"b1"declinedStatusChangeRequiresNoPendingStatus"b1"eventDurationConstrainedToRecurrenceInterval"b1"alarmTriggerIntervalConstrainedToRecurrenceInterval"b1"occurrencesMustOccurOnSeparateDays"b1"futureStartDateLimitedToOccurrenceCacheBounds"b1"supportsRecurrencesOnDetachedEvents"b1"recurrencesShouldPinToMonthDays"b1"requiresAttendeeSearchInSingleAccount"b1"mustAcknowledgeMasterEvent"b1"canSetAvailability"b1"eventAvailabilityLimited"b1"requiresMSFormattedUID"b1"shouldCancelDeletedEvents"b1"shouldDeclineDeletedInvitations"b1"supportsStructuredLocations"b1"supportsReminderActions"b1"supportsReminderLocations"b1"supportsAlarmProximity"b1"allowsCalendarAddDeleteModify"b1"allowsTasks"b1"allowsEvents"b1"supportsURLField"b1"supportsAllDayDueDates"b1"supportsSharedCalendars"b1"isFacebook"b1"recurrenceSeriesMustIncludeMoreThanFirstOccurrence"b1"supportsPrivateEvents"b1"prohibitsPrivateEventsWithAttendees"b1"supportsAvailabilityRequests"b1"supportsIgnoringEventsInAvailabilityRequests"b1"supportsLocationDirectorySearches"b1"requiresSamePrivacyLevelAcrossRecurrenceSeries"b1"supportsInboxAvailability"b1"prohibitsMultipleMonthsInYearlyRecurrence"b1"prohibitsMultipleDaysInMonthlyRecurrence"b1"prohibitsYearlyRecurrenceInterval"b1"requiresOccurrencesConformToRecurrenceRule"b1"prohibitsDetachmentOnCommentChange"b1"allowsProposeNewTime"b1"prohibitsICSImport"b1"supportsAutoGeocodingStructuredLocations"b1"supportsJunkReporting"b1"supportsPhoneNumbers"b1"attendeesUseDeletedByOrganizerStatus"b1"prohibitsSlicingEventsWithAttendees"b1"supportsSubscribedCalendars"b1"supportsAttachments"b1"supportsDelegation"b1"supportsDelegateEnumeration"b1"supportsFloatingTimeZone"b1"prohibitsUsingEventOrganizerEmailWhenComposingMail"b1"supportsRecurrenceSplit"b1"requiresOpeningAttachmentAsLink"b1}
v24@0:8B16B20
Q24@0:8@16
Q32@0:8@16@24
q32@0:8@16@24
@"EKSource"
@"NSOperationQueue"
@"REMAccount"
@"NSURL"16@0:8
@"NSPredicate"16@0:8
@"CNContact"16@0:8
r^v24@0:8^v16
@"EKCalendarItem"
I24@0:8q16
@40@0:8@16q24q32
v24@0:8@"NSCoder"16
@24@0:8@"NSCoder"16
v24@0:8^{CGColor=}16
^{CGColor=}16@0:8
^{CGColor=}
@24@0:8^@16
@40@0:8@16@24@?32
@"EKDirectorySearchQuery"
@"NSError"
@32@0:8@16d24
@"EKRecurrenceRule"
@"EKCalendarEventInvitationNotificationAttendee"
@?24@0:8@?16
v44@0:8@?16B24q28@36
v32@0:8^@16^@24
@32@0:8@16@?24
v48@0:8@16@24@32@40
@"NSArray"16@0:8
@40@0:8#16@24@32
v28@0:8i16Q20
v36@0:8@?16B24@?28
@"NSPredicate"
@36@0:8@16@24B32
@32@0:8q16@24
@32@0:8q16@?24
@40@0:8q16@24@?32
@"PCPersistentTimer"
@"NSTimer"
@20@0:8i16
@28@0:8i16@20
@40@0:8q16@24@32
@48@0:8q16@24@32@40
@"<CalDateProvider>"
v40@0:8@"NSArray"16@"NSArray"24@"NSArray"32
@28@0:8B16@20
@"CalLimitingQueue"
@48@0:8@16d24d32d40
@104@0:8i16@20d28@36d44@52d60@68B76Q80@88q96
^{EKPersistentObject=#{_opaque_pthread_mutex_t=q[56c]}@@@I@@}16@0:8
@40@0:8^{EKPersistentObject=#{_opaque_pthread_mutex_t=q[56c]}@@@I@@}16@24@32
B56@0:8@16@24@32@40^@48
i24@0:8@16
v28@0:8i16@20
d24@0:8@16
v32@0:8d16@24
v28@0:8B16@20
{_opaque_pthread_mutex_t="__sig"q"__opaque"[56c]}
@"NSMutableSet"
B24@0:8q16
q36@0:8q16Q24B32
{?=iccccd}40@0:8@16@24@32
{?=iccccd}24@0:8@16
{?=iccccd}16@0:8
B20@0:8I16
v24@0:8B16I20
B32@0:8q16^@24
v56@0:8@16@24@32@40@48
B32@0:8d16@24
B48@0:8{?=iccccd}16@32^@40
@24@0:8^d16
@"EKStructuredLocation"
@"EKReadWriteLock"
@"EKCalendarDate"
@52@0:8@16@24@32@40B48
@64@0:8@16@24@32@40@48@?56
@"EKAvailabilityCache"
@"CDBDataProtectionObserver"
@"EKRecurrenceEnd"
v24@0:8I16B20
@"EKObject"
@56@0:8@16@24@32@40@?48
B36@0:8@16@24B32
v24@0:8^{EKPersistentObject=#}16
v40@0:8@16@24#32
@32@0:8q16q24
@32@0:8Q16@24
B40@0:8^i16^i24^i32
@24@0:8^{CGColor=}16
@52@0:8B16q20@28@36@44
@24@0:8d16
B20@0:8i16
Q20@0:8i16
i24@0:8Q16
v24@0:8i16B20
B40@0:8@16Q24^@32
v32@0:8Q16@?24
v56@0:8@16@24@32@40@?48
@64@0:8q16@24@32@40@48@56
@"RTPredictedLocationOfInterest"
@"EKPredictedLocationOfInterest"
@24@0:8i16i20
@28@0:8i16i20B24
@36@0:8@16B24@28
@40@0:8@16B24@28B36
@"CalDarwinNotificationListener"
^v16@0:8
#24@0:8@16
q24@0:8Q16
@32@0:8i16@20B28
@48@0:8Q16@24@32B40B44
@44@0:8i16@20@28B36B40
v32@0:8Q16@24
B36@0:8@16B24^@28
B32@0:8@16Q24
B48@0:8@16@24^@32^@40
B40@0:8@16q24^@32
B44@0:8@16q24B32^@36
B40@0:8Q16@24^@32
@40@0:8@16@24Q32
@36@0:8@16@24i32
@60@0:8@16B24@28B36B40B44i48@52
@68@0:8@16B24@28B36B40B44i48@52Q60
@44@0:8@16@24i32@36
@52@0:8@16@24i32@36Q44
@68@0:8@16@24B32B36@40@48@56i64
@76@0:8@16@24B32B36@40@48@56i64Q68
B24@0:8Q16
@28@0:8d16i24
@32@0:8d16i24B28
@32@0:8@16Q24
Q32@0:8@16B24B28
@44@0:8@16@24@32B40
@88@0:8@16@24@32@40@48@56@64@72q80
@48@0:8@16@24@32d40
@40@0:8Q16@24@32
q24@0:8^@16
v24@0:8^@16
v32@0:8@16Q24
B52@0:8@16@24@32B40@44
@"EKDaemonConnection"
@"EKDataProtectionObserver"
@"EKReminderStore"
@"<CalCalendarDataContainerProvider>"
@24@0:8r*16
@"EKFrozenReminderSource"
v36@0:8@16@24S32
@40@0:8^{?=[64S]^{__CFString}^S*{?=qq}qq}16{?=qq}24
@48@0:8q16q24@32@40
@56@0:8@16@24@32Q40@48
@"CalDateRange"
@"EKAvailabilitySpan"
@40@0:8@16^@24d32
