init
description
stringWithFormat:
traceStream
dealloc
baseObject
drawIndexedPrimitives:indexCount:indexType:indexBuffer:indexBufferOffset:instanceCount:baseVertex:baseInstance:
drawPrimitives:vertexStart:vertexCount:instanceCount:baseInstance:
reset
setFragmentBuffer:offset:atIndex:
setRenderPipelineState:
setVertexBuffer:offset:atIndex:
isEqual:
class
self
performSelector:
performSelector:withObject:
performSelector:withObject:withObject:
isProxy
isKindOfClass:
isMemberOfClass:
conformsToProtocol:
respondsToSelector:
retain
release
autorelease
retainCount
zone
hash
superclass
debugDescription
touch
traceContext
streamReference
initWithBaseObject:captureContext:
originalObject
forwardingTargetForSelector:
.cxx_destruct
_baseObject
_traceContext
_traceStream
initWithOptions:capacity:
initWithKeyOptions:valueOptions:capacity:
nextDrawable
countByEnumeratingWithState:objects:count:
removeObject:
removeObjectForKey:
addObject:
containsObject:
mainBundle
bundleIdentifier
isEqualToString:
unsignedIntValue
methodForSelector:
allObjects
copy
device
framebufferOnly
pixelFormat
drawableSize
bounds
contentsScale
anchorPoint
mainScreen
position
zPosition
transform
superlayer
anchorPointZ
sublayerTransform
clearBarrier
concurrentDispatchThreadgroups:threadsPerThreadgroup:
concurrentDispatchThreads:threadsPerThreadgroup:
setBarrier
setComputePipelineState:
setKernelBuffer:offset:atIndex:
setStageInRegion:
setThreadgroupMemoryLength:atIndex:
setImageblockWidth:height:
attributes
objectForKeyedSubscript:
numberWithBool:
setObject:forKeyedSubscript:
kind
messageWithKind:attributes:objectPayload:
send:inReplyTo:error:
unsignedLongLongValue
dictionaryWithObjects:forKeys:count:
errorWithDomain:code:userInfo:
numberWithUnsignedLongLong:
bytes
length
boolValue
newLibraryWithData:error:
initWithBaseObject:captureDevice:
setPreprocessorMacros:
setFastMathEnabled:
setDebuggingEnabled:
setPreserveInvariance:
newLibraryWithSource:options:error:
localizedDescription
newRenderPipelineStateWithDescriptor:error:
stringWithUTF8String:
newComputePipelineStateWithDescriptor:options:reflection:error:
newComputePipelineStateWithFunction:error:
unsignedLongValue
swapObject:
newFunctionWithName:constantValues:error:
newFunctionWithName:
code
setWithObjects:
dataWithBytesNoCopy:length:freeWhenDone:
unarchivedObjectOfClasses:fromData:error:
setLanguageVersion:
setConstantValue:type:atIndex:
count
objectAtIndexedSubscript:
arrayWithCapacity:
computeFunction
setComputeFunction:
pipelineLibrary
setPipelineLibrary:
functionPointers
setFunctionPointers:
insertLibraries
setInsertLibraries:
binaryArchives
setBinaryArchives:
vertexFunction
setVertexFunction:
fragmentFunction
setFragmentFunction:
visibilityResultBuffer
setVisibilityResultBuffer:
_descriptorPrivate
_descriptorAtIndex:
texture
colorAttachments
setTexture:
resolveTexture
setResolveTexture:
depthAttachment
stencilAttachment
sampleBufferAttachments
sampleBuffer
setSampleBuffer:
gpuAddress
responsibleProcess
allocatedSize
allocationID
uniqueIdentifier
compressionFeedback
resourceIndex
dummyEncodeTextureIntoArgumentBufferForResourceIndex:withDescriptor:
supportIndirectCommandBuffers
dummyEncodeComputePSOIntoArgumentBufferForResourceIndex:withDescriptor:
sharedCaptureManager
initWithBaseObject:parent:
initWithCaptureContext:
drawPatches:patchStart:patchCount:patchIndexBuffer:patchIndexBufferOffset:instanceCount:baseInstance:
drawIndexedPatches:patchStart:patchCount:patchIndexBuffer:patchIndexBufferOffset:controlPointIndexBuffer:controlPointIndexBufferOffset:instanceCount:baseInstance:
dispatchThreadgroups:threadsPerThreadgroup:
size
dataWithLength:
indirectRenderCommandAtIndex:
mutableBytes
getCommandType
drawArguments
primitiveType
vertexStart
vertexCount
instanceCount
baseInstance
drawIndexedArguments
indexCount
indexType
indexBufferVirtualAddress
baseVertex
getPipelineStateUniqueIdentifier
getVertexBufferAtIndex:
getFragmentBufferAtIndex:
indirectComputeCommandAtIndex:
dispatchThreadgroupsArguments
threadgroupsPerGrid
threadsPerThreadgroup
getStageInRegion
hasBarrier
dispatchThreadsArguments
threadsPerGrid
getKernelBufferAtIndex:
getThreadgroupMemoryLengthAtIndex:
initWithCapacity:
insertDebugCaptureBoundary
setLabel:
UTF8String
isEnqueued
maxCommandBufferCount
newCommandQueueWithMaxCommandBufferCount:
setIsCommited:
isCommited
addRequestsToDownloadQueue:
removeObjectsInRange:
commandBufferWithDescriptor:
initWithBaseObject:captureCommandQueue:
isStatEnabled
setStatEnabled:
getStatLocations
setStatLocations:
getStatOptions
setStatOptions:
backgroundTrackingPID
setBackgroundTrackingPID:
commitQueue
commitSynchronously
completionQueue
disableCrossQueueHazardTracking
executionEnabled
setExecutionEnabled:
isOpenGLQueue
label
isProfilingEnabled
setProfilingEnabled:
qosLevel
skipRender
setSkipRender:
availableCounters
availableCountersAndDict
commandBuffer
commandBufferWithUnretainedReferences
counterInfo
finish
getBackgroundGPUPriority
getGPUPriority
getRequestedCounters
requestCounters:
requestCounters:withIndex:
setBackgroundGPUPriority:
setBackgroundGPUPriority:offset:
setCompletionQueue:
setGPUPriority:
setGPUPriority:offset:
setSubmissionQueue:
subdivideCounterList:
addPerfSampleHandler:
insertDebugBoundaryUsed
enqueueCommandBuffer:
commitCommandBuffer:
_captureDevice
_pendingQueue
_pendingQueueLock
_downloadQueue
_insertDebugBoundaryUsed
functionType
lineNumber
filePath
unpackedFilePath
vertexAttributes
attributeIndex
attributeType
name
isActive
stageInputAttributes
patchType
patchControlPointCount
reflection
pluginReturnData
stageInputDescriptor
format
bufferIndex
layouts
stepFunction
indexBufferIndex
maxTotalThreadsPerThreadgroup
threadExecutionWidth
performanceStatistics
archivedDataWithRootObject:requiringSecureCoding:error:
vertexPluginReturnData
fragmentPluginReturnData
iosurface
width
height
depth
mipmapLevelCount
sampleCount
iosurfacePlane
isFramebufferOnly
index
type
required
constantValueWithFunctionConstant:
propertyListWithData:options:format:error:
preprocessorMacros
fastMathEnabled
debuggingEnabled
languageVersion
additionalCompilerArguments
preserveInvariance
cpuCacheMode
hazardTrackingMode
heap
heapOffset
resourceOptions
setResponsibleProcess:
storageMode
unfilteredResourceOptions
doesAliasAllResources:count:
doesAliasAnyResources:count:
doesAliasResource:
isAliasable
isComplete
isPurgeable
makeAliasable
resetWithRange:
setPurgeableState:
waitUntilComplete
protectionOptions
appendBytes:length:
dictionaryWithDictionary:
downloader
downloadQueue
initWithQueue:forRequest:
objectAtIndex:
flushWithCallback:
dataWithBytes:length:
usedSize
currentAllocatedSize
maxAvailableSizeWithAlignment:
newBufferWithLength:options:
initWithBaseObject:captureHeap:
newBufferWithLength:options:offset:
newTextureWithDescriptor:
newTextureWithDescriptor:offset:
textureWriteRoundingMode
newFragmentShaderDebugInfo
newVertexShaderDebugInfo
vertexDebugInstrumentationData
fragmentDebugInstrumentationData
descriptor
setDescriptor:
_descriptor
setWaitValue:
setWaitEvent:
setDownloadValue:
setDownloadEvent:
waitEvent
waitValue
encodeSignalEvent:value:
encodeWaitForEvent:value:timeout:
downloadEvent
downloadValue
encodeWaitForEvent:value:
retainedReferences
newSharedEvent
addCompletedHandler:
_encodeDownloadPoint
setSignaledValue:
unionSet:
addScheduledHandler:
dispatchGroup
indirectArgumentBufferDecodingData
harvester
setDownloadQueue:
downloadRequest:atPoint:
status
enqueue
_frameBoundaryFlag
_preCommitWithIndex:
commit
commitAndWaitUntilSubmitted
presentDrawable:
presentDrawable:atTime:
debugCommandEncoder
initWithBaseObject:captureCommandBuffer:
blitCommandEncoderWithDescriptor:
computeCommandEncoderWithDescriptor:
sampledComputeCommandEncoderWithDescriptor:programInfoBuffer:capacity:
error
errorOptions
globalTraceObjectID
getListIndex
logs
profilingResults
userDictionary
addPurgedHeap:
addPurgedResource:
blitCommandEncoder
commitAndHold
computeCommandEncoder
computeCommandEncoderWithDispatchType:
debugBufferContentsWithLength:
parallelRenderCommandEncoderWithDescriptor:
popDebugGroup
pushDebugGroup:
renderCommandEncoderWithDescriptor:
sampledComputeCommandEncoderWithDispatchType:programInfoBuffer:capacity:
sampledComputeCommandEncoderWithProgramInfoBuffer:capacity:
sampledRenderCommandEncoderWithDescriptor:programInfoBuffer:capacity:
waitUntilCompleted
waitUntilScheduled
commandQueue
kernelStartTime
kernelEndTime
GPUStartTime
GPUEndTime
setProtectionOptions:
unionRetainSet:
retainedObjects
isCapturing
presentDrawableUsed
_captureCommandQueue
_retainMutex
_pool
_downloadEvent
_downloadPoints
_scheduledDispatchArray
_completedDispatchArray
_presentDrawableUsed
_isCommitted
_isCapturing
_isCommited
_retainedObjects
binaryData
libraryPath
formattedDescription:
serializeToURL:error:
serializeToURL:options:error:
installName
exportedFunctions
exportedVariables
importedSymbols
importedLibraries
libraryUUID
layer
present
presentAtTime:
textureType
arrayLength
usage
isDrawable
rotation
allowGPUOptimizedContents
compressionMode
forceResourceIndex
swizzle
swizzleKey
writeSwizzleEnabled
setTextureType:
setPixelFormat:
setUsage:
setWidth:
setHeight:
setDepth:
setArrayLength:
setStorageMode:
setSampleCount:
setCpuCacheMode:
setMipmapLevelCount:
setHazardTrackingMode:
setAllowGPUOptimizedContents:
setSwizzle:
setResourceIndex:
setForceResourceIndex:
setRotation:
setCompressionMode:
setWriteSwizzleEnabled:
setStepRate:
setStride:
setStepFunction:
setOffset:
setBufferIndex:
setFormat:
vertexDescriptor
rasterSampleCount
sampleMask
sampleCoverage
isAlphaToCoverageEnabled
isAlphaToOneEnabled
isRasterizationEnabled
depthAttachmentPixelFormat
stencilAttachmentPixelFormat
tessellationPartitionMode
maxTessellationFactor
isTessellationFactorScaleEnabled
tessellationFactorFormat
tessellationControlPointIndexType
tessellationFactorStepFunction
tessellationOutputWindingOrder
vertexBuffers
mutability
fragmentBuffers
openGLModeEnabled
logicOperation
alphaTestFunction
vertexDepthCompareClampMask
fragmentDepthCompareClampMask
isLogicOperationEnabled
isPointCoordLowerLeft
isPointSizeOutputVS
isTwoSideEnabled
isAlphaTestEnabled
isPointSmoothEnabled
clipDistanceEnableMask
sampleCoverageInvert
isDepthStencilWriteDisabled
pluginData
driverCompilerOptions
forceSoftwareVertexFetch
setRasterSampleCount:
setSampleMask:
setSampleCoverage:
setAlphaToCoverageEnabled:
setAlphaToOneEnabled:
setRasterizationEnabled:
setDepthAttachmentPixelFormat:
setStencilAttachmentPixelFormat:
setTessellationPartitionMode:
setMaxTessellationFactor:
setTessellationFactorScaleEnabled:
setTessellationFactorFormat:
setTessellationControlPointIndexType:
setTessellationFactorStepFunction:
setTessellationOutputWindingOrder:
setMutability:
setSupportIndirectCommandBuffers:
setSampleCoverageInvert:
setDepthStencilWriteDisabled:
setPluginData:
setDriverCompilerOptions:
setForceSoftwareVertexFetch:
depthCompareFunction
isDepthWriteEnabled
frontFaceStencil
backFaceStencil
setDepthCompareFunction:
setDepthWriteEnabled:
setStencilCompareFunction:
setStencilFailureOperation:
setDepthFailureOperation:
setDepthStencilPassOperation:
setReadMask:
setWriteMask:
setFrontFaceStencil:
setBackFaceStencil:
minFilter
magFilter
mipFilter
maxAnisotropy
sAddressMode
tAddressMode
rAddressMode
normalizedCoordinates
lodMinClamp
lodMaxClamp
compareFunction
lodAverage
supportArgumentBuffers
setMinFilter:
setMagFilter:
setMipFilter:
setMaxAnisotropy:
setSAddressMode:
setTAddressMode:
setRAddressMode:
setLodMinClamp:
setLodMaxClamp:
setCompareFunction:
setNormalizedCoordinates:
setLodAverage:
setSupportArgumentBuffers:
setSize:
setType:
setResourceOptions:
commandTypes
maxVertexBufferBindCount
maxFragmentBufferBindCount
inheritBuffers
maxKernelBufferBindCount
inheritPipelineState
getHeader:headerSize:
setCommandTypes:
setMaxVertexBufferBindCount:
setMaxFragmentBufferBindCount:
setInheritBuffers:
setMaxKernelBufferBindCount:
setInheritPipelineState:
clearColor
clearDepth
depthResolveFilter
clearStencil
getSamplePositions:count:
ditherEnabled
pointCoordYFlipEnabled
setClearColor:
setClearDepth:
setDepthResolveFilter:
setClearStencil:
setSamplePositions:count:
setOpenGLModeEnabled:
setDitherEnabled:
setPointCoordYFlipEnabled:
threadGroupSizeIsMultipleOfThreadExecutionWidth
stepRate
stride
offset
buffers
openCLModeEnabled
setThreadGroupSizeIsMultipleOfThreadExecutionWidth:
setIndexType:
setIndexBufferIndex:
setMaxTotalThreadsPerThreadgroup:
setTextureWriteRoundingMode:
setOpenCLModeEnabled:
maxThreadsPerThreadgroup
sharedMemorySize
dedicatedMemorySize
isPlacementHeapSupported
arrayWithObjects:count:
numberWithUnsignedInteger:
counterSet
counters
counterSets
setCounterSet:
captureObject
destination
outputURL
fileSystemRepresentation
isBlendingEnabled
sourceRGBBlendFactor
destinationRGBBlendFactor
rgbBlendOperation
sourceAlphaBlendFactor
destinationAlphaBlendFactor
alphaBlendOperation
writeMask
setBlendingEnabled:
setSourceRGBBlendFactor:
setDestinationRGBBlendFactor:
setRgbBlendOperation:
setSourceAlphaBlendFactor:
setDestinationAlphaBlendFactor:
setAlphaBlendOperation:
stencilCompareFunction
stencilFailureOperation
depthFailureOperation
depthStencilPassOperation
readMask
level
slice
depthPlane
resolveLevel
resolveSlice
resolveDepthPlane
loadAction
storeAction
storeActionOptions
yInvert
setLevel:
setSlice:
setDepthPlane:
setResolveLevel:
setResolveSlice:
setResolveDepthPlane:
setLoadAction:
setStoreAction:
setStoreActionOptions:
keys
options
addBinaryEntry:forKey:
addComputePipelineFunctionsWithDescriptor:error:
addComputePipelineFunctionsWithDescriptor:options:error:
addRenderPipelineFunctionsWithDescriptor:error:
addRenderPipelineFunctionsWithDescriptor:options:error:
getBinaryDataForKey:
bundleWithIdentifier:
infoDictionary
URLForResource:withExtension:
dictionaryWithContentsOfURL:
encodeObject:forKey:
interposeVersionGL
encodeInt32:forKey:
interposeVersionMetal
supportsSecureCoding
encodeWithCoder:
initWithCoder:
version
shortVersion
sourceVersion
_infoPlist
_versionPlist
stringByAppendingString:
stringByAppendingPathComponent:
_systemDevicePathForPath:
initWithContentsOfFile:
objectForKey:
objectForInfoDictionaryKey:
initWithUUIDBytes:
UUIDString
platform
doubleValue
mainScreenDescriptor
permanentIdentifier
runtimeIdentifier
encodeInt64:forKey:
productType
build
metalVersion
gputoolsVersionInfo
encodeDouble:forKey:
nativePointerSize
isEmbeddedPlatform
profiles
_profiles
scopeAddress
decodeInt64ForKey:
decodeObjectOfClass:forKey:
capturableObjectType
copyWithZone:
initWithCaptureScope:
displayName
deviceAddress
_displayName
_deviceAddress
_scopeAddress
_label
supportsFeatureSet:
supportsFamily:
numberWithInteger:
supportedFeatureSets
supportedGPUFamilies
initWithDevice:
_device
_name
_supportedFeatureSets
_supportedGPUFamilies
queueAddress
toolsQueueAddress
canBeCaptured
encodeBool:forKey:
isInternalQueue
initWithCommandQueue:
toolsDeviceAddress
numberWithUnsignedInt:
messageWithKind:attributes:
setClassName:forClass:
executablePath
numberWithInt:
bundlePath
send:error:
messageWithKind:objectPayload:
lastObject
replaceObjectAtIndex:withObject:
removeLastObject
messageWithKind:plistPayload:
plistPayload
mutableCopy
uint32ForKey:
boolForKey:
uint64ForKey:
doubleForKey:
defaultManager
isWritableFileAtPath:
defaultCaptureScope
resolveCounters:inRange:destinationBuffer:destinationOffset:
copyFromBuffer:sourceOffset:toBuffer:destinationOffset:size:
contents
copyFromBuffer:sourceOffset:sourceBytesPerRow:sourceBytesPerImage:sourceSize:toTexture:destinationSlice:destinationLevel:destinationOrigin:
copyFromBuffer:sourceOffset:sourceBytesPerRow:sourceBytesPerImage:sourceSize:toTexture:destinationSlice:destinationLevel:destinationOrigin:options:
copyFromTexture:sourceSlice:sourceLevel:sourceOrigin:sourceSize:toBuffer:destinationOffset:destinationBytesPerRow:destinationBytesPerImage:
copyFromTexture:sourceSlice:sourceLevel:sourceOrigin:sourceSize:toBuffer:destinationOffset:destinationBytesPerRow:destinationBytesPerImage:options:
copyFromTexture:sourceSlice:sourceLevel:sourceOrigin:sourceSize:toTexture:destinationSlice:destinationLevel:destinationOrigin:
copyFromTexture:sourceSlice:sourceLevel:toTexture:destinationSlice:destinationLevel:sliceCount:levelCount:
copyFromTexture:toTexture:
copyIndirectCommandBuffer:sourceRange:destination:destinationIndex:
endEncoding
fillBuffer:range:value:
generateMipmapsForTexture:
insertDebugSignpost:
optimizeContentsForCPUAccess:
optimizeContentsForCPUAccess:slice:level:
optimizeContentsForGPUAccess:
optimizeContentsForGPUAccess:slice:level:
optimizeIndirectCommandBuffer:withRange:
resetCommandsInBuffer:withRange:
sampleCountersInBuffer:atSampleIndex:withBarrier:
updateFence:
waitForFence:
synchronizeResource:
synchronizeTexture:slice:level:
_captureCommandBuffer
constantDataAtIndex:
alignment
encodedLength
newArgumentEncoderForBufferAtIndex:
setArgumentBuffer:offset:
setArgumentBuffer:startOffset:arrayElement:
setBuffer:offset:atIndex:
setBuffers:offsets:withRange:
setComputePipelineState:atIndex:
setComputePipelineStates:withRange:
setIndirectCommandBuffer:atIndex:
setIndirectCommandBuffers:withRange:
setRenderPipelineState:atIndex:
setRenderPipelineStates:withRange:
setSamplerState:atIndex:
setSamplerStates:withRange:
setTexture:atIndex:
setTextures:withRange:
executeCommandsInBuffer:withRange:
executeCommandsInBuffer:indirectBuffer:indirectBufferOffset:
drawIndexedPrimitives:indexCount:indexType:indexBuffer:indexBufferOffset:
drawIndexedPrimitives:indexCount:indexType:indexBuffer:indexBufferOffset:instanceCount:
drawIndexedPrimitives:indexType:indexBuffer:indexBufferOffset:indirectBuffer:indirectBufferOffset:
drawPrimitives:indirectBuffer:indirectBufferOffset:
drawPrimitives:vertexStart:vertexCount:
drawPrimitives:vertexStart:vertexCount:instanceCount:
isMemorylessRender
setAlphaTestReferenceValue:
setBlendColorRed:green:blue:alpha:
setClipPlane:p2:p3:p4:atIndex:
setColorResolveTexture:slice:depthPlane:level:atIndex:
setColorResolveTexture:slice:depthPlane:level:yInvert:atIndex:
setColorStoreAction:atIndex:
setColorStoreActionOptions:atIndex:
setCommandDataCorruptModeSPI:
setCullMode:
setDepthBias:slopeScale:clamp:
setDepthCleared
setDepthClipMode:
setDepthClipModeSPI:
setDepthResolveTexture:slice:depthPlane:level:
setDepthResolveTexture:slice:depthPlane:level:yInvert:
setDepthStencilState:
setDepthStoreAction:
setDepthStoreActionOptions:
setFragmentBufferOffset:atIndex:
setFragmentBuffers:offsets:withRange:
setFragmentBytes:length:atIndex:
setFragmentSamplerState:atIndex:
setFragmentSamplerState:lodMinClamp:lodMaxClamp:atIndex:
setFragmentSamplerState:lodMinClamp:lodMaxClamp:lodBias:atIndex:
setFragmentSamplerStates:lodMinClamps:lodMaxClamps:withRange:
setFragmentSamplerStates:withRange:
setFragmentTexture:atIndex:
setFragmentTexture:atTextureIndex:samplerState:atSamplerIndex:
setFragmentTextures:withRange:
setFrontFacingWinding:
setLineWidth:
setPointSize:
setPrimitiveRestartEnabled:
setPrimitiveRestartEnabled:index:
setProvokingVertexMode:
setScissorRect:
setStencilCleared
setStencilFrontReferenceValue:backReferenceValue:
setStencilReferenceValue:
setStencilStoreAction:
setStencilStoreActionOptions:
setTessellationFactorBuffer:offset:instanceStride:
setTessellationFactorScale:
setTransformFeedbackState:
setTriangleFillMode:
setTriangleFrontFillMode:backFillMode:
setVertexBufferOffset:atIndex:
setVertexBuffers:offsets:withRange:
setVertexBytes:length:atIndex:
setVertexSamplerState:atIndex:
setVertexSamplerState:lodMinClamp:lodMaxClamp:atIndex:
setVertexSamplerState:lodMinClamp:lodMaxClamp:lodBias:atIndex:
setVertexSamplerStates:lodMinClamps:lodMaxClamps:withRange:
setVertexSamplerStates:withRange:
setVertexTexture:atIndex:
setVertexTextures:withRange:
setViewport:
setViewportTransformEnabled:
setVisibilityResultMode:offset:
updateFence:afterStages:
useHeap:
useHeap:stages:
useHeaps:count:
useHeaps:count:stages:
useResource:usage:
useResource:usage:stages:
useResources:count:usage:
useResources:count:usage:stages:
waitForFence:beforeStages:
textureBarrier
memoryBarrierWithScope:afterStages:beforeStages:
memoryBarrierWithResources:count:afterStages:beforeStages:
addSplitHandler:
initWithBaseObject:captureParallelRenderCommandEncoder:
newIndirectCommandBufferWithDescriptor:maxCommandCount:options:
renderFunctionCopyIndirectCommandBuffer
newArgumentEncoderWithBufferIndex:
renderPipelineCopyIndirectCommandBuffer
renderPipelineCopyBuffer
_quicklookData
dataWithCapacity:
copyItemAtPath:toPath:error:
initRequiringSecureCoding:
encodedData
numberWithUnsignedChar:
numberWithUnsignedLong:
dataWithPropertyList:format:options:error:
writeToFile:atomically:
messageWithKind:
invalidateHarvester
removeItemAtPath:error:
messageWithKind:attributes:plistPayload:
data
messageWithKind:attributes:payload:
setLength:
dictionaryWithCapacity:
setSynchronous:
newSourceWithQueue:
setMessageHandler:
setRegistrationHandler:
resume
connect
boolResult
initWithDevice:commandQueue:
beginScope
endScope
initWithDevice:commandQueue:captureContext:
_stopCapture
resolveCounterRange:
setObject:forKey:
removeObjectsForKeys:
contentsOfDirectoryAtPath:error:
fileExistsAtPath:isDirectory:
contentsAtPath:
renderCommandEncoder
sampledRenderCommandEncoderWithProgramInfoBuffer:capacity:
enableNullBufferBinds:
dispatchType
dispatchThreadgroupsWithIndirectBuffer:indirectBufferOffset:threadsPerThreadgroup:
memoryBarrierWithResources:count:
memoryBarrierWithScope:
newKernelDebugInfo
setBufferOffset:atIndex:
setBytes:length:atIndex:
setSamplerState:lodMinClamp:lodMaxClamp:atIndex:
setSamplerStates:lodMinClamps:lodMaxClamps:withRange:
setStageInRegionWithIndirectBuffer:indirectBufferOffset:
computeFunctionCopyIndirectCommandBuffer
computePipelineCopyIndirectCommandBuffer
computePipelineCopyBuffer
addDebugMarker:range:
newLinearTextureWithDescriptor:offset:bytesPerRow:bytesPerImage:
initWithBaseObject:captureBuffer:
newTextureWithDescriptor:offset:bytesPerRow:
removeAllDebugMarkers
didModifyRange:
_captureHeap
_captureRemoteStorageBuffer
dumpBuffer:name:
dumpBuffer:
dumpTexture:name:glMode:
dumpTexture:name:
dumpTexture:
kprintf:
IOLog:
kprintfBytes:length:
IOLogBytes:length:
startCaptureWithSettings:from:
startCaptureWithSettings:
startCapture
stopCapture:
stopCapture
getLastStartStopCaptureResult
postFinishEvent:
postFinishEvent
newExternFunctionWithName:
newCaptureFunction:associatedWithBaseFunction:captureLibrary:
functionConstantsDictionary
newFunctionWithName:constantValues:completionHandler:
newFunctionWithDescriptor:completionHandler:
externFunctionNames
functionNames
overrideTriple
setOverrideTriple:
newFunctionWithDescriptor:error:
newFunctionWithName:constantValues:pipelineLibrary:error:
newFunctionWithName:constantValues:pipelineLibrary:completionHandler:
getBytes:bytesPerRow:bytesPerImage:fromRegion:mipmapLevel:slice:
replaceRegion:mipmapLevel:slice:withBytes:bytesPerRow:bytesPerImage:
getBytes:bytesPerRow:fromRegion:mipmapLevel:
replaceRegion:mipmapLevel:withBytes:bytesPerRow:
newTextureViewWithPixelFormat:
newTextureViewWithPixelFormat:textureType:levels:slices:
newTextureViewWithPixelFormat:textureType:levels:slices:swizzle:
rootResource
parentTexture
parentRelativeLevel
parentRelativeSlice
buffer
bufferOffset
bufferBytesPerRow
isCompressed
numFaces
canGenerateMipmapLevels
generateMipmapLevel:slice:
newCompressedTextureViewWithPixelFormat:textureType:level:slice:
initWithBaseObject:captureTexture:
newTextureViewWithPixelFormat:resourceIndex:
newTextureViewWithPixelFormat:textureType:levels:slices:resourceIndex:
newTextureViewWithPixelFormat:textureType:levels:slices:swizzle:resourceIndex:
_captureRootResource
_captureRemoteStorageTexture
domain
dy_errorSignature
integerValue
dictionaryWithObject:forKey:
dictionaryWithObjectsAndKeys:
userInfo
setObject:forIntKey:
enumerateKeysAndObjectsUsingBlock:
allowsKeyedCoding
decodeObjectOfClasses:forKey:
longLongValue
enumerateObjectsUsingBlock:
allKeys
removeObjectForIntKey:
objectForIntKey:
initWithLongLong:
initWithIntKeyedDictionary:
removeAllObjects
_private
future
setError:
setResult:
lock
unlock
_setResult:error:notify_NOLOCK:
broadcast
automaticallyNotifiesObserversForKey:
willChangeValueForKey:
didChangeValueForKey:
wait
_addDependency_REQUIRESLOCK:
_dependencies_NOLOCK
_start_NOLOCK
standardUserDefaults
isMainThread
logPerformance
date
waitUntilFinished
timeIntervalSinceNow
timeIntervalSinceReferenceDate
currentThread
valueForKeyPath:
callStackSymbols
componentsJoinedByString:
fileHandleForWritingAtPath:
seekToEndOfFile
dataUsingEncoding:
writeData:
closeFile
writeToFile:atomically:encoding:error:
waitUntilResolved
blockOperationWithBlock:
addResultHandler:
result
intValue
start
isFinished
addObserver:forKeyPath:options:context:
arrayWithArray:
futureWithResult:error:
isCancelled
isAsynchronous
isExecuting
queuePriority
setQueuePriority:
completionBlock
setCompletionBlock:
addDependency:
dependencies
requestResult:
uint32Result
intResult
cancel
timeoutAfter:label:
resolveWithFuture:
notifyOnQueue:handler:
notifyGroup:
observeValueForKeyPath:ofObject:change:context:
_waitForDependencies_REQUIRESLOCK
_timeout
_condition
_resolved
_cancelled
_result
_error
_notifyList
_inflightDependencies
_started
_completion
_priority
doesNotRecognizeSelector:
initWithQueue:block:
dispatch
queue
block
cancelled
initWithKind:attributes:payload:
initWithKind:attributes:boolPayload:
initWithKind:attributes:plistPayload:
initWithKind:attributes:stringPayload:
initWithKind:attributes:objectPayload:
initWithBytes:length:
allocWithZone:
serial
getBytes:length:
objectPayload
initForReadingFromData:error:
setDecodingFailurePolicy:
addObjectsFromArray:
finishDecoding
messageWithKind:payload:
messageWithKind:boolPayload:
messageWithKind:attributes:boolPayload:
messageWithKind:stringPayload:
messageWithKind:attributes:stringPayload:
hasBeenSent
_setSerial:replySerial:transport:
_setTransportSize:
attributeForKey:
boolPayload
stringPayload
payload
encodedAttributes
setEncodedAttributes:
replySerial
transport
transportSize
_payload
_attributes
_transport
_encodedAttributes
_decodedPayload
_decodedPayloadType
_kind
_serial
_replySerial
_transportSize
dispatchError:
timeout
replyCount
_register
_cancel
_callRegistrationHandler
_activateSource:
_cancelSource:
_callCancellationHandler
_initWithQueue:transport:
suspend
messageHandler
cancellationHandler
setCancellationHandler:
registrationHandler
_dispatch:
_messageHandler
_cancellationHandler
_registrationHandler
_queue
_mqueue
_state
initWithFormat:
connected
invalid
makeObjectsPerformSelector:
_handleReplyTimeout:count:
_scheduleInvalidation:
_invalidate
_packMessage:error:
_nextMessageSerial
_sendMessage:error:
send:inReplyTo:error:replyQueue:timeout:handler:
sendNewMessage:error:replyQueue:timeout:handler:
setTargetQueue:
_dispatchMessage:
invalidate
synchronous
send:error:replyQueue:timeout:handler:
sendNewMessage:error:
relayMessage:error:
drainQueue
prioritizeOutgoingMessages
setPrioritizeOutgoingMessages:
identifier
setIdentifier:
interposerVersion
setInterposerVersion:
_url
_rootQueue
_sendQueue
_messageCounter
_messageSendQueueDepth
_invalid
_prioritizeOutgoingMessages
_interposerVersion
_sources
_replyHandlersMap
_identifier
_dispatch_send
initWithGTVMBuffer:range:
initWithBytesNoCopy:length:deallocator:
GTGPUToolsData
subdataWithRange:
_parent
_range
initWithLength:
initWithVMBuffer:
vmBuffer
_vmBuffer
_read:size:
_performRead:size:
_syncTmuToHeader:ioBlock:
_unpackAndDispatchMessage
_allocateMessageBuffer
_clearBuffers
_write:size:
_waitEAGAIN
_writeBuffers:
initWithBytesNoCopy:length:freeWhenDone:
_relayBufferInner:size:
_readAndAccumulate
_relayBuffer:size:
_tmu
_messageBuffer
_messageBufferWritePtr
_bytesToRead
_iov
_buffers
_sendSema
_relayQueue
_relayTmu
message
setMessage:
replyTo
setReplyTo:
setQueue:
setTimeout:
replyBlock
setReplyBlock:
_message
_replyTo
_replyBlock
initWithMode:initialMessageSerial:
initWithString:
_accumulateMessageBytes
scheme
absoluteString
path
_relayPacket
substringFromIndex:
_calculateVMRegionMapSize:
_mapSharedMemoryFile:size:error:
_dequeueIncomingMessages
_getSharedMemoryNameWithSuffix:
getCString:maxLength:encoding:
_initializeSMRegion:size:name:error:
_setupIOBuffers
_createAndRunSources:
_openSMRegion:size:name:error:
_serverConnect:
_clientConnect:
_tearDownSharedMemory
_computeBytesAvailableToRead
_computeBytesAvailableToWrite
_copyToSM:size:
_updateReaderOffset:
_copyFromSM:size:
_dequeuePacket
initWithMode:
setUrl:
setRelayTransport:
deferred
_outgoingShmem
_incomingShmem
_masterSMRegion
_outgoingBuffer
_incomingBuffer
_relayTransport
_consumeBytesIMP
_consumeBytesSEL
_currentPacketBytesLeft
_mode
_deferred
_bufferedMessages
_sendName
_receiveName
closeSocketDescriptor
_readAndAccumulateLoop
_destroySharedMemoryTransport
createNewSharedMemoryTransportWithURL:
runWithSocket:
scheduleReadOnWritableSocket
createNewSharedMemoryTransport
destroySharedMemoryTransport
relayMessageOverSharedMemoryTransport:error:
smTransport
_readSource
_writeSource
_smTransport
_writeSourceIsSuspended
_scheduledReadOnWritableSocket
filePathURL
initFileURLWithPath:
_connectServer:future:
_connectClient:future:
_connSource
stringWithCString:encoding:
URLWithString:
framesToCapture
triggerFrame
apiTriggeredCapture
ignoreUnusedResources
newCommandQueue
heapTextureSizeAndAlignWithDescriptor:
heapBufferSizeAndAlignWithLength:options:
newHeapWithDescriptor:
newBufferWithBytes:length:options:
newBufferWithBytesNoCopy:length:options:deallocator:
newDepthStencilStateWithDescriptor:
newTextureWithDescriptor:iosurface:plane:
newSamplerStateWithDescriptor:
newDefaultLibrary
newDefaultLibraryWithBundle:error:
newLibraryWithFile:error:
newLibraryWithURL:error:
newLibraryWithSource:options:completionHandler:
newRenderPipelineStateWithDescriptor:options:reflection:error:
newRenderPipelineStateWithDescriptor:completionHandler:
newRenderPipelineStateWithDescriptor:options:completionHandler:
newComputePipelineStateWithFunction:options:reflection:error:
newComputePipelineStateWithFunction:completionHandler:
newComputePipelineStateWithFunction:options:completionHandler:
newComputePipelineStateWithDescriptor:options:completionHandler:
newFence
supportsTextureSampleCount:
minimumLinearTextureAlignmentForPixelFormat:
minimumTextureBufferAlignmentForPixelFormat:
getDefaultSamplePositions:count:
newArgumentEncoderWithArguments:
newEvent
newSharedEventWithHandle:
newCounterSampleBufferWithDescriptor:error:
sampleTimestamps:gpuTimestamp:
supportsCounterSampling:
newDynamicLibrary:error:
newDynamicLibraryWithURL:error:
newBinaryArchiveWithDescriptor:error:
registryID
isLowPower
isHeadless
isRemovable
hasUnifiedMemory
recommendedMaxWorkingSetSize
isDepth24Stencil8PixelFormatSupported
readWriteTextureSupport
argumentBuffersSupport
areRasterOrderGroupsSupported
supports32BitFloatFiltering
supports32BitMSAA
supportsBCTextureCompression
supportsPullModelInterpolation
maxThreadgroupMemoryLength
maxArgumentBufferSamplerCount
areProgrammableSamplePositionsSupported
maxBufferLength
supportsDynamicLibraries
supportsDestination:
pathExtension
lastPathComponent
createDirectoryAtURL:withIntermediateDirectories:attributes:error:
suspendAfterCapture
startCaptureWithDescriptor:error:
startCaptureWithDevice:
startCaptureWithCommandQueue:
startCaptureWithScope:
newCaptureScopeWithDevice:
newCaptureScopeWithCommandQueue:
initWithBaseObject:captureLibrary:
newArgumentEncoderWithBufferIndex:reflection:
newFunctionWithPluginData:bitcodeType:
newArgumentEncoderWithBufferIndex:reflection:pipelineLibrary:
reflectionWithOptions:binaryArchives:
newArgumentEncoderWithBufferIndex:reflection:binaryArchives:
arguments
returnType
bitCodeHash
bitcodeData
newArgumentEncoderWithBufferIndex:pipelineLibrary:
reflectionWithOptions:
reflectionWithOptions:pipelineLibrary:
reflectionWithOptions:completionHandler:
_captureLibrary
objects
getGPUBuffer:context:
createContext:
downloadContext
_downloadContext
_downloadValue
_waitValue
_waitEvent
retainMTLResource:
newCommandBuffer
flush
requests
setRequests:
setObjects:
usedGPUMemory
setUsedGPUMemory:
_command
_blit
_MTLResources
_originalMTLResources
_blitRequestCount
_requests
_objects
_usedGPUMemory
initWithTracking:
setBuffer:
_buffer
_offset
_size
linearTextureAlignmentBytes
fillGPUBuffer:size:context:
getGPUIndirectCommandBuffer:count:
_downloadRequest:atPoint:dispatchGroup:
initWithDispatchQueue:
notifyListener:atValue:block:
getGPUBuffer:
getGPUIndirectCommandBuffer:context:descriptor:
getFramebufferPipeline:
downloadRequest:
_pipelineCache
_dispatchGroup
_dispatchQueue
_framebufferPipelineMutex
_maxGPUMemory
_alignment
texture2DDescriptorWithPixelFormat:width:height:mipmapped:
renderPassDescriptor
newComputePipelineStateWithName:options:reflection:error:
newRenderPipelineStateWithName:options:reflection:error:
newComputePipelineDescriptorWithName:error:
newRenderPipelineDescriptorWithName:error:
setDisableRunTimeCompilation:
disableRunTimeCompilation
functionCache
pipelineCache
pipelineNames
_isBaseObjectDebugDevice
resourcePatchingTypeForResourceType:
argumentDescriptor
setDataType:
setIndex:
_initDummyEncoder
newLibraryWithImageFilterFunctionsSPI:imageFilterFunctionInfo:error:
newSharedEventHandle
eventPort
signaledValue
newSharedEventWithMachPort:
newLibraryWithCIFilters:imageFilterFunctionInfo:error:
newLibraryWithCIFiltersForComputePipeline:imageFilterFunctionInfo:error:
dummyEncodeRenderPSOIntoArgumentBufferForResourceIndex:withDescriptor:
setFunction:
supportsPrimitiveType:
setResourcesPurgeableState:newState:oldState:count:
_setDeviceWrapper:
newPipelineLibraryWithFilePath:error:
newFunctionWithGLIR:functionType:
newFunctionWithGLIR:inputsDescription:functionType:
newLibraryWithDAG:functions:error:
loadDynamicLibrariesForComputeDescriptor:error:
setObject:atIndexedSubscript:
commandBufferErrorOptions
setCommandBufferErrorOptions:
defaultTextureWriteRoundingMode
deviceLinearReadOnlyTextureAlignmentBytes
deviceLinearTextureAlignmentBytes
doubleFPConfig
featureProfile
areGPUAssertionsEnabled
halfFPConfig
indirectArgumentBufferCapabilities
iosurfaceReadOnlyTextureAlignmentBytes
iosurfaceTextureAlignmentBytes
limits
maxColorAttachments
maxComputeBuffers
maxComputeInlineDataSize
maxComputeLocalMemorySizes
maxComputeSamplers
maxComputeTextures
maxComputeThreadgroupMemory
maxComputeThreadgroupMemoryAlignmentBytes
maxCustomSamplePositions
maxFenceInstances
maxFragmentBuffers
maxFragmentInlineDataSize
maxFragmentSamplers
maxFragmentTextures
maxFramebufferStorageBits
maxFunctionConstantIndices
maxIndirectBuffers
maxIndirectSamplers
maxIndirectSamplersPerDevice
maxIndirectTextures
maxInterpolants
maxInterpolatedComponents
maxLineWidth
maxPointSize
maxTextureBufferWidth
maxTextureDepth3D
maxTextureDimensionCube
maxTextureHeight2D
maxTextureHeight3D
maxTextureLayers
maxTextureWidth1D
maxTextureWidth2D
maxTextureWidth3D
maxTotalComputeThreadsPerThreadgroup
maxVertexAttributes
maxVertexBuffers
maxVertexInlineDataSize
maxVertexSamplers
maxVertexTextures
maxVisibilityQueryOffset
metalAssertionsEnabled
setMetalAssertionsEnabled:
minBufferNoCopyAlignmentBytes
minConstantBufferAlignmentBytes
isQuadDataSharingSupported
shaderDebugInfoCaching
setShaderDebugInfoCaching:
singleFPConfig
supportPriorityBand
targetDeviceArchitecture
targetDeviceInfo
_deviceWrapper
compilerPropagatesThreadPriority:
copyShaderCacheToPath:
deserializeCompileTimeStats:addToDictionary:
deviceOrFeatureProfileSupportsFeatureSet:
deviceSupportsFeatureSet:
endCollectingPipelineDescriptors
familyName
getShaderCacheKeys
libraryCacheStats
mapShaderSampleBufferWithBuffer:capacity:size:
minLinearTextureAlignmentForPixelFormat:
newArgumentEncoderWithLayout:
newBinaryLibraryWithOptions:url:error:
newBufferWithBytes:length:options:gpuAddress:
newBufferWithBytesNoCopy:length:options:gpuAddress:deallocator:
newBufferWithIOSurface:
newBufferWithLength:options:gpuAddress:
newCommandQueueWithDescriptor:
newDynamicLibrary:computeDescriptor:error:
newDynamicLibraryFromURL:error:
newIndirectArgumentBufferLayoutWithStructType:
newIndirectArgumentEncoderWithArguments:
newIndirectArgumentEncoderWithLayout:
dummyEncodeICBIntoArgumentBufferForResourceIndex:withDescriptor:
newIndirectCommandBufferWithDescriptor:maxCount:options:
newIndirectComputeCommandEncoderWithBuffer:
newIndirectRenderCommandEncoderWithBuffer:
dummyEncodeSamplerIntoArgumentBufferForResourceIndex:withDescriptor:
newTextureLayoutWithDescriptor:isHeapOrBufferBacked:
newTextureWithBytesNoCopy:length:descriptor:deallocator:
pipelineCacheStats
productName
reserveGPUAddressRange:
setGPUAssertionsEnabled:
setIndirectArgumentBufferDecodingData:
setupMPSFunctionTable:
startCollectingPipelineDescriptors
startCollectingPipelineDescriptorsUsingPrefixForNames:
supportsSampleCount:
supportsTextureWriteRoundingMode:
unloadShaderCaches
unmapShaderSampleBuffer
validateDynamicLibrary:state:error:
validateDynamicLibraryURL:error:
vendorName
reserveResourceIndicesForResourceType:indices:indexCount:
reportLeaks
allowLibrariesFromOtherPlatforms
supportsBufferlessClientStorageTexture
supportsComputeMemoryBarrier
supportsRenderMemoryBarrier
supportsArgumentBuffersTier2
supportsReadWriteTextureArgumentsTier2
supportsProgrammableSamplePositions
supportsLargeFramebufferConfigs
supportsCustomBorderColor
supports3DBCTextures
supportsPrimitiveRestartOverride
supports32bpcMSAATextures
supportsPlacementHeaps
supportsOpenCLTextureWriteSwizzles
supportsInt64
supportsNonZeroTextureWriteLOD
supportsSharedTextureHandles
supportsBufferPrefetchStatistics
supportsLimitedYUVFormats
supportsNonPrivateDepthStencilTextures
supportsNonPrivateMSAATextures
supportsSharedStorageHeapResources
supportsSharedStorageTextures
supportsLinearTextureFromSharedBuffer
supportsPipelineLibraries
supportsFragmentOnlyEncoders
supportsBufferWithIOSurface
supportsProgrammableBlending
supportsRenderToLinearTextures
supportsMemorylessRenderTargets
supportsFastMathInfNaNPropagation
supportsInvariantVertexPosition
supportsShaderLODAverage
supportsRelaxedTextureViewRequirements
supportsSeparateDepthStencil
supportsGPUStatistics
supportsCompressedTextureViewSPI
supportsRenderTargetTextureRotation
supportsDynamicControlPointCount
supportsIABHashForTools
supportsBinaryArchives
supportsBinaryLibraries
supportsASTCTextureCompression
supportsExtendedYUVFormats
supportsPublicXR10Formats
supportsSRGBwrites
supportsDepthClipMode
supportsPacked32TextureBufferWrites
supports3DASTCTextures
supportsExtendedXR10Formats
supportsFragmentBufferWrites
supportsCountingOcclusionQuery
supportsBaseVertexInstanceDrawing
supportsIndirectDrawAndDispatch
supportsTessellation
supportsReadWriteBufferArguments
supportsArrayOfTextures
supportsArrayOfSamplers
supportsCombinedMSAAStoreAndResolveAction
supportsMutableTier1ArgumentBuffers
supportsSamplerCompareFunction
supportsMSAADepthResolve
supportsMSAAStencilResolve
supportsMSAADepthResolveFilter
supportsGFXIndirectCommandBuffers
supportsCMPIndirectCommandBuffers
supportsIndirectStageInRegion
supportsIndirectTextures
supportsNorm16BCubicFiltering
supportsTextureOutOfBoundsReads
supportsTextureSwizzle
supportsAlphaYUVFormats
supportsMemoryOrderAtomics
supportsQuadGroup
supportsRenderTextureWrites
supportsImageBlocks
supportsTileShaders
supportsImageBlockSampleCoverageControl
supportsNativeHardwareFP16
supportsPostDepthCoverage
supportsMipLevelsSmallerThanBlockSize
supportsNonUniformThreadgroupSize
supportsReadWriteTextureArguments
supportsReadWriteTextureCubeArguments
supportsTextureCubeArray
supportsQuadShufflesAndBroadcast
supportsConcurrentComputeDispatch
supportsRenderPassWithoutRenderTarget
supportsRasterOrderGroups
supportsRasterOrderGroupsColorAttachment
supportsLinearTexture2DArray
supportsNonSquareTileShaders
supportsSeparateVisibilityAndShadingRate
supports2DLinearTexArraySPI
supportsLayeredRendering
supportsViewportAndScissorArray
supportsIndirectTessellation
supportsMSAAStencilResolveFilter
supportsStencilFeedback
supportsFP32TessFactors
supportsUnalignedVertexFetch
supportsSIMDGroup
supportsShaderMinLODClamp
supportsSIMDShufflesAndBroadcast
supportsWritableArrayOfTextures
supportsIndirectWritableTextures
supportsStatefulDynamicLibraries
supportsBlackOrWhiteSamplerBorderColors
supportsMirrorClampToEdgeSamplerMode
supportsSIMDReduction
supportsDepthClipModeClampExtended
supportsTexture2DMultisampleArray
supportsForceSeamsOnCubemaps
supportsFloat16BCubicFiltering
supportsFloat16InfNanFiltering
deviceCreationFlags
maxComputeAttributes
maxConstantBufferArguments
isFloat32FilteringSupported
isMsaa32bSupported
registerDevices
newComputePipelineStateWithDescriptor:error:
newComputePipelineStateWithDescriptor:completionHandler:
newComputePipelineStateWithImageFilterFunctionsSPI:imageFilterFunctionInfo:error:
serializeRenderPipelineDescriptor:
serializeComputePipelineDescriptor:
newRenderPipelineDescriptorWithSerializedData:deserializationContext:
newComputePipelineDescriptorWithSerializedData:deserializationContext:
serializeStructType:
serializeStructType:version:
_harvesterPool
_onceToken
_renderFunctionCopyIndirectCommandBuffer
_computeFunctionCopyIndirectCommandBuffer
_renderPipelineCopyIndirectCommandBuffer
_renderPipelineCopyBuffer
_computePipelineCopyIndirectCommandBuffer
_computePipelineCopyBuffer
_dummyArgumentEncoder
isArgumentBufferPatchingTypeIndexed
_dummySamplerIndex
_dummyICBIndex
_dummyRenderPSOIndex
_dummyComputePSOIndex
_harvester
_downloader
readsDepth
readsStencil
writesDepth
writesStencil
access
textureDataType
bufferAlignment
bufferDataSize
bufferDataType
isVertexDescriptorBuffer
dataTypeDescription
threadgroupMemoryAlignment
threadgroupMemoryDataSize
vertexArguments
fragmentArguments
vertexBuiltInArguments
builtInArguments
dataType
members
argumentIndex
indirectArgumentIndex
elementType
argumentIndexStride
elementTypeDescription
dataSize
staticThreadgroupMemoryLength
functionPointerHandleWithFunction:
functionPointerHandlesWithFunctions:range:
debugInstrumentationData
initWithBaseObject:captureComputePipelineState:
function
_captureComputePipelineState
_function
copyGranularity
watermark
copyFromLinearBytes:linearOffset:linearBytesPerRow:linearBytesPerImage:toTextureMemory:textureSlice:textureLevel:textureRegion:
copyFromTextureMemory:textureSlice:textureLevel:textureRegion:toLinearBytes:linearOffset:linearBytesPerRow:linearBytesPerImage:
finalizeTextureMemory:
initializeTextureMemory:
%@ -> %@
hash
TQ,R
superclass
T#,R
description
T@"NSString",R,C
debugDescription
traceContext
T^{GTTraceContext=},R
traceStream
T^{GTTraceStream=},R
streamReference
baseObject
T@,R
T@"<MTLIndirectRenderCommand>",R
dealloc
init
UIScreen
v8@?0
backboardd
com.apple.backboardd
MainDisplayRotation
mainScreen
coordinateSpace
fixedCoordinateSpace
convertPoint:toCoordinateSpace:
T@"<MTLIndirectComputeCommand>",R
type
succeeded
context
object
DYPMTLResourceUpdaterErrorDomain
Unable to find library
Ensure the library or pipeline state isn't recreated every frame
error
isDefaultLib
source
options
preprocessorMacros
fastMathEnabled
debuggingEnabled
preserveInvariance
Failed to create new library
propagate
Unable to create render pipeline state
%@: %@
Unable to create compute pipeline state with function: %@
Unable to create function: %@
touch
METAL_DEVICE_WRAPPER_TYPE
MTLGPUDebugDevice
com.apple.dt.GPUTools.pendingQueueLock
label
T@"NSString",C
device
T@"<MTLDevice>",R
backgroundTrackingPID
maxCommandBufferCount
qosLevel
commitQueue
T@"NSObject<OS_dispatch_queue>",R
commitSynchronously
TB,R
completionQueue
disableCrossQueueHazardTracking
skipRender
executionEnabled
isOpenGLQueue
profilingEnabled
TB,GisProfilingEnabled
StatEnabled
TB,N,GisStatEnabled
StatOptions
TQ,N,GgetStatOptions
StatLocations
TQ,N,GgetStatLocations
T@"<MTLCommandQueue>",R
insertDebugBoundaryUsed
metalLib
cpuCacheMode
storageMode
hazardTrackingMode
resourceOptions
heap
T@"<MTLHeap>",R
heapOffset
allocatedSize
size
responsibleProcess
allocationID
protectionOptions
unfilteredResourceOptions
T@"<MTLIndirectCommandBuffer>",R
platform
capture
Failed to encode datatip data: %@
v16@?0@"NSArray"8
descriptor
usedSize
currentAllocatedSize
Tq,R
T@"NSString",R
supportIndirectCommandBuffers
resourceIndex
TQ,R,N
gpuAddress
textureWriteRoundingMode
uniqueIdentifier
vertexDebugInstrumentationData
T@"MTLDebugInstrumentationData",R,&,N
fragmentDebugInstrumentationData
T^{GTTraceContext={_opaque_pthread_mutex_t=q[56c]}^{GTTraceStore}AQAQ^{apr_hash_t}^(FreeNode)Ai[4c]^{GTTraceStream}[16{GTTraceStoreList=^(GTTraceStoreNode)^(GTTraceStoreNode)AiAi}]},R
T^{GTTraceStream=QQQ^{GTTraceMemPool}{GTTraceStoreList=^(GTTraceStoreNode)^(GTTraceStoreNode)AiAi}AQ},R
T@"<MTLRenderPipelineState>",R
T@"MTLRenderPipelineDescriptor",C,N,V_descriptor
v16@?0@"<MTLCommandBuffer>"8
kDYFEMTLCommandBuffer_blitCommandEncoderWithDescriptor
Counters
kDYFEMTLCommandBuffer_computeCommandEncoderWithDescriptor
commandQueue
retainedReferences
errorOptions
kernelStartTime
Td,R
kernelEndTime
logs
T@"<MTLLogContainer>",R
GPUStartTime
GPUEndTime
status
T@"NSError",R
listIndex
TQ,R,N,GgetListIndex
profilingResults
T@"NSDictionary",R
userDictionary
T@"NSMutableDictionary",R,N
globalTraceObjectID
T@"<MTLCommandBuffer>",R
presentDrawableUsed
TB,R,V_presentDrawableUsed
retainedObjects
T@"NSMutableSet",R,N,V_retainedObjects
isCapturing
TB,R,N,V_isCapturing
isCommited
TB,N,V_isCommited
kDYFEMTLDynamicLibrary_serializeToURL_error
Binary Linking
kDYFEMTLDynamicLibrary_serializeToURL_options_error
installName
binaryData
T@"NSObject<OS_dispatch_data>",R
exportedFunctions
T@"NSArray",R
exportedVariables
importedSymbols
importedLibraries
libraryPath
libraryUUID
Tr^{?=[32C]},R
T@"<MTLDynamicLibrary>",R
T@"<MTLDrawable>",R
device-resources-0x%llx
root
unused-device-resources-0x%llx
delta-device-resources-0x%llx
startup-0-platform
startup-1-platform
heaps
buffers
buffer
textures
texture
libraries
gl-metal
METAL_CAPTURE_GLIR
library
functions
function
__main
pipeline-libraries
fences
events
shared-events
render-pipeline-states
compute-pipeline-states
motion-estimation-pipeline-states
depth-stencil-states
samplers
indirect-command-buffers
counterSampleBuffers
indirect-render-commands
indirect-compute-commands
command-queue
rasterization-rate-maps
resource-groups
mps-filters
texture-views
pipeline-library
render-pipeline-state
compute-pipeline-state
motion-pipeline-state
depth-stencil-state
sampler
counterSampleBuffer
rasterization-rate-map
resource-group
mps-filter
fence
event
shared-event
kDYFEMTLBinaryArchive_addBinaryEntry_forKey
kDYFEMTLBinaryArchive_addComputePipelineFunctionsWithDescriptor_error
kDYFEMTLBinaryArchive_addComputePipelineFunctionsWithDescriptor_options_error
kDYFEMTLBinaryArchive_addRenderPipelineFunctionsWithDescriptor_error
kDYFEMTLBinaryArchive_addRenderPipelineFunctionsWithDescriptor_options_error
kDYFEMTLBinaryArchive_getBinaryDataForKey
kDYFEMTLBinaryArchive_serializeToURL_error
kDYFEMTLBinaryArchive_serializeToURL_options_error
keys
T@"<MTLBinaryArchive>",R
USE_DY_PROBES
PointsOfInterest
com.apple.GPUTools
version
plist
infoPlist
versionPlist
interposeVersion
interposeVersionMetal
CFBundleVersion
CFBundleShortVersionString
SourceVersion
supportsSecureCoding
T@"NSString",R,N
shortVersion
sourceVersion
interposeVersionGL
TI,R,N
 - Metal
HWModelStr
/System/Library/CoreServices/SystemVersion.plist
ProductVersion
ProductBuildVersion
com.apple.Metal
main-screen-width
main-screen-height
main-screen-scale
main-screen-orientation
main-screen-class
identifier
runtimeIdentifier
name
productType
build
metalVersion
gputoolsVersionInfo
mainScreenResolution.width
mainScreenResolution.height
mainScreenResolution.scale
mainScreenDescriptor.orientation
mainScreenDescriptor.type
supportedGLProfileContextsInfo
nativePointerSize
Ti,R,N
permanentIdentifier
T@"GTGPUToolsVersionInfo",R,N
isEmbeddedPlatform
TB,R,N
mainScreenDescriptor
T{?=dIIII},R,N
profiles
T@"NSArray",R,N
0x%llx -> %@
deviceAddress
scopeAddress
Capture Scope <0x%llx>
Capture Scope
capturableObjectType
T@"NSString",R,C,N
TQ,R,N,V_deviceAddress
TQ,R,N,V_scopeAddress
T@"NSString",R,C,N,V_label
displayName
T@"NSString",R,C,N,V_displayName
supportedFeatureSets
supportedGPUFamilies
T@"<MTLDevice>",R,N
queueAddress
toolsQueueAddress
canBeCaptured
isInternalQueue
toolsDeviceAddress
nanoseconds since epoch timestamp
mach absolute timestamp
mach timebase numerator
mach timebase denominator
DYMTLDeviceProfile
DYMTLCommandQueueInfo
DYMTLCaptureScopeInfo
path
executable-path
frame index
frame duration
timestamp
fenum
category
CFBundleInfoPlistURL
NSBundleInitialPath
NSBundleResolvedPath
trace mode
include backtraces
trace host type
profiling send period
profiling flags
override_flags
override_scale_tesselation_factor
HostCaptureArchivePath
sandbox_extensions
Serial
CaptureCommandQueueAddress
CaptureScopeAddress
FrameLimit
TriggerFrame
SuspendAfterCompletion
LockOpenGLAfterCompletion
T@"<MTLBlitCommandEncoder>",R
encodedLength
alignment
T@"<MTLArgumentEncoder>",R
com.apple.
SceneKit
SpriteKit
CoreImage
MTKTextureLoader
gttrace-dump
unsorted-capture
T@"<MTLRenderCommandEncoder>",R
index
store0
T@"<MTLSamplerState>",R
DYCaptureSession.deviceId
DYCaptureSession.unusedBufferCount
DYCaptureSession.unusedTextureCount
DYCaptureSession.unusedLibraryCount
DYCaptureSession.unusedFunctionCount
DYCaptureSession.unusedRenderPipelineStateCount
DYCaptureSession.unusedComputePipelineStateCount
DYCaptureSession.unusedDepthStencilStateCount
DYCaptureSession.unusedSamplerStateCount
DYCaptureSession.unusedCommandQueueCount
DYCaptureSession.unusedHeapCount
DYCaptureSession.unusedFenceCount
DYCaptureSession.unusedTextureLayoutCount
DYCaptureSession.unusedEventCount
DYCaptureSession.unusedIndirectCommandBufferCount
DYCaptureSession.unusedInternalBufferCount
DYCaptureSession.unusedInternalTextureCount
DYCaptureSession.unusedInternalLibraryCount
DYCaptureSession.unusedInternalFunctionCount
DYCaptureSession.unusedInternalRenderPipelineStateCount
DYCaptureSession.unusedInternalComputePipelineStateCount
DYCaptureSession.unusedInternalDepthStencilStateCount
DYCaptureSession.unusedInternalSamplerStateCount
DYCaptureSession.unusedInternalCommandQueueCount
DYCaptureSession.unusedInternalHeapCount
DYCaptureSession.unusedInternalFenceCount
DYCaptureSession.unusedInternalTextureLayoutCount
DYCaptureSession.unusedInternalEventCount
DYCaptureSession.unusedInternalIndirectCommandBufferCount
1.2.11
buffer name
has pstream header
capture serial
(device info)
(control device info)
(device profile)
metadata
DYDeviceInfo
DYGPUToolsVersionInfo
(uuid)
DYCaptureSession.capture_version
DYCaptureSession.interpose_feature_version
DYCaptureSession.interpose_patch_version
DYCaptureSession.nativePointerSize
DYCaptureSession.boundaryLess
DYCaptureSession.graphics_api
DYCaptureSession.library_link_time_versions
DYCaptureEngine.captured_frames_count
DYCaptureEngine.launch_dictionary
DYCaptureEngine.linked_on_apex_or_later
GPUTOOLS(info): Capture failed due to unsupported %s API usage
GPUTOOLS(info): Capture aborted, removing archive: @ %s
GPUTOOLS(info): Remove archive %s failed
TriggerOnNextGLCommand
Temporary harvested file path
Temporary harvested file size
System
CoreFoundation
Foundation
AppKit
UIKit
Metal
captured frames counter
library link-time versions
queue/thread labels
device profile
queues
threads
LinkedOnApexOrLater
BoundaryLess
interpose-feature-version
interpose-patch-version
gputools.global_sync
v16@?0@"GTTransportMessage_capture"8
GT_HOST_URL_MTL
IOAccelerator
IOAcceleratorES
T@"<MTLEvent>",R
T@"<MTLFence>",R
apr_global_pool
CiulSlS
C@%llutU<b>t
C@%zut@%zuul@2ul
C@%zut@2ul
C@%zutul
C@%zut@%zuf@%zuf@2ul
C@%zutulul
C@%zutulU<b>i
C@%zutululul
C@%zutU<b>@2ul
Cttulul@%llutU@%llutUtul
Cttulul@%llutU@%llutU@%llutUtul
Cttulul@%llutU@%llutUttitul
Cttul@%llutU@%llutUulultul
sampleCount
T@"<MTLCounterSampleBuffer>",R
T@"<MTLParallelRenderCommandEncoder>",R
commandBuffer
T@"CaptureMTLCommandBuffer",R
dispatchType
T@"<MTLComputeCommandEncoder>",R
kDYFEMTLDevice_newBinaryArchiveWithDescriptor_error
kDYFEMTLComputePipelineState_functionPointerHandleWithFunction
kDYFEMTLComputePipelineState_functionPointerHandlesWithFunctions_range
kDYFEMTLDevice_newBinaryLibraryWithOptions_url_error
kDYFEMTLDevice_newDynamicLibrary_computeDescriptor_error
kDYFEMTLDevice_newDynamicLibrary_error
kDYFEMTLDevice_newDynamicLibraryFromURL_error
kDYFEMTLDevice_loadDynamicLibrariesForComputeDescriptor_error
kDYFEMTLFunction_newArgumentEncoderWithBufferIndex_reflection_binaryArchives
kDYFEMTLFunction_reflectionWithOptions_binaryArchives
kDYFEMTLDevice_newDynamicLibraryWithURL_error
kDYFEMTLLibrary_newFunctionWithDescriptor_completionHandler
kDYFEMTLLibrary_newFunctionWithDescriptor_error
length
iosurface
T^{__IOSurface=},R
T@"<MTLBuffer>",R
apr_initialize
T@"<MTLDebugCommandEncoder>",R
v24@?0@"<MTLFunction>"8@"NSError"16
Function Pointers
functionNames
overrideTriple
externFunctionNames
T@"<MTLLibrary>",R
com.apple.Dyson
rootResource
T@"<MTLResource>",R
parentTexture
T@"<MTLTexture>",R
parentRelativeLevel
parentRelativeSlice
bufferOffset
bufferBytesPerRow
iosurfacePlane
textureType
pixelFormat
width
height
depth
mipmapLevelCount
arrayLength
usage
framebufferOnly
TB,R,GisFramebufferOnly
allowGPUOptimizedContents
swizzle
T{?=CCCC},R,N
rotation
isCompressed
compressionFeedback
swizzleKey
TI,R
numFaces
isDrawable
%@ (%llu)
DYErrorDomain
v32@?0q8@16^B24
-[GTIntKeyedDictionary initWithCoder:]
[coder allowsKeyedCoding]
%llu
-[GTIntKeyedDictionary initWithCoder:]_block_invoke
v32@?0@"NSNumber"8Q16^B24
-[GTIntKeyedDictionary encodeWithCoder:]
isFinished
isExecuting
GPUDebugger.DYFuture.LogPerformance
GPUDebugger.DYFuture.csv
%f, %@, %@, %f, %d, %d
private.seqNum
Timestamp, Thread, Symbol, Interval, Resolved, Main Thread
GPUDebugger.DYFuture.HardAssertMainThread
GPUDebugger.DYFuture.SoftAssertMainThread
v24@?0@8@"NSError"16
%@ kind=0x%x serial=%u, reply serial=%u
$archiver
NSKeyedArchiver
$top
$version
$objects
transport
T@"GTTransport_capture",R,&,N,V_transport
replySerial
TI,R,N,V_replySerial
transportSize
TI,R,N,V_transportSize
encodedAttributes
T@"NSData",&,N,V_encodedAttributes
kind
Ti,R,N,V_kind
serial
TI,R,N,V_serial
attributes
T@"NSDictionary",R,&,N,V_attributes
payload
T@"NSData",R,&,N,V_payload
gputools.%@.%p.%@
manager
message
messageHandler
T@?,C,N
registrationHandler
<%@ %p>
gputools.%@.%p
default
send
%@: url=%@, connected=%d, invalid=%d, error=%@, messageCounter=%u, messageSendQueueDepth=%u, sources=%@
T@"NSURL",R,&,N
connected
invalid
T@"NSError",R,&,N,V_error
T@"NSString",C,N,V_identifier
prioritizeOutgoingMessages
TB,N,V_prioritizeOutgoingMessages
interposerVersion
TI,N,V_interposerVersion
synchronous
TB,N
v24@?0^v8Q16
-[GTVMBuffer initWithVMBuffer:]
vmBuffer
T^{VMBuffer=QQQQQQ},R,N,V_vmBuffer
-[GTBaseStreamTransport init]
_tmu
_relayTmu
relay
-[GTBaseStreamTransport _allocateMessageBuffer]
_tmu->hasHeader
size_aligned <= MAXIMUM_MESSAGE_SIZE
_messageBuffer != nil
q8@?0
T@"GTTransportMessage_capture",&,N,V_message
replyTo
T@"GTTransportMessage_capture",&,N,V_replyTo
queue
T@"NSObject<OS_dispatch_queue>",N,V_queue
timeout
TQ,N,V_timeout
replyBlock
T@?,N,V_replyBlock
-[GTSharedMemoryTransport initWithMode:initialMessageSerial:]
_mode == kDYSharedMemoryTransportModeClient || _mode == kDYSharedMemoryTransportModeServer
dysmt://localhost/%lx%d
_consumeBytesIMP
-[GTSharedMemoryTransport setUrl:]
newUrl != nil
dysmt
dysmtdeferred
-[GTSharedMemoryTransport setRelayTransport:]_block_invoke
gdt-%@-%@
T@"NSURL",&,D,N
deferred
TB,R,N,V_deferred
-[GTBaseSocketTransport runWithSocket:]
_readSource == nullptr
_writeSource == nullptr
_invalid == NO
_readSource
_writeSource
-[GTBaseSocketTransport _invalidate]
smTransport
T@"GTSharedMemoryTransport_capture",R,N,V_smTransport
/tmp
dysonXXXXXX
GTTransport *DYCreateTransportC(const char *)
url_str
null
file
invalid filename (%ld)
data is too large (%ld)
IO failure (%ld)
out of memory (%ld)
timed out (%ld)
explicit invalidation (%ld)
truncated data (%ld)
invalid transport message payload (%ld)
unexpected transport message (%ld)
read-only capture archive (%ld)
truncated capture archive store (%ld)
truncated capture archive index (%ld)
invalid capture archive index (%ld)
unknown capture archive index version (%ld)
file exists in capture archive (%ld)
file does not exists in capture archive (%ld)
capture archive does not exist (%ld)
missing capture archive index (%ld)
invalid capture archive metadata (%ld)
corrupted capture archive store (%ld)
could not write capture archive metadata (%ld)
capture archive has been closed (%ld)
position does not exist in archive (%ld)
already tried to launch guest app (%ld)
invalid launch dictionary (%ld)
guest app not found (%ld)
guest app launch timed out (%ld)
invalid guest app session (%ld)
guest app has not been launched yet (%ld)
did not find interpose dylib (%ld)
failed to launch guest app (%ld)
guest app terminated (%ld)
guest app crashed (%ld)
another capture session is active (%ld)
capture session is already active (%ld)
capture session activation failed (%ld)
inferior already running (%ld)
GL dispatch table mismatch (%ld)
inferior and host session ids mismatch (%ld)
lost transport connection (%ld)
invalid transport (%ld)
transport is not connected (%ld)
message has already been sent (%ld)
in-reply-to message has not been sent (%ld)
failed to encode message attributes (%ld)
connect timed out (%ld)
undefined socket path (%ld)
socket path is too long (%ld)
message originated from this transport (%ld)
invalid socket descriptor (%ld)
invalid socket url (%ld)
transport source cancelled (%ld)
corrupt transport message header (%ld)
corrupt transport message attributes (%ld)
message too large (%ld)
initialized function stream with immutable data but swapping is required (%ld)
invalid function stream header (%ld)
transfer refused (%ld)
protocol error (%ld)
path outside destination root (%ld)
transfer aborted (%ld)
unknown item type (%ld)
no data (%ld)
guest app session error (%ld)
already replaying (%ld)
no loaded archives (%ld)
no resource streamer (%ld)
no archive data (%ld)
no thumbnail support (%ld)
failed to create core symbolicator (%ld)
Shader profiler does not support multi-context captures (%ld)
Shader profiler failed due to an internal error (%ld)
Cannot find the target path provided (%ld)
Metal.framework is not available on the remote machine (%ld)
Cannot authenticate SSH, make sure the authentication is done right (%ld)
Cannot find the specified username and host (%ld)
Specified remote machine is not available. Please make sure to login with specified user (%ld)
Cannot find Xcode.app on the remote machine. Please make sure that Xcode.app is in the Applications folder (%ld)
Missing environment variables, please make sure all the required environment variables are enabled (%ld)
allocator<T>::allocate(size_t n) 'n' exceeds maximum supported size
gputools.smt_poll.%p
Already capturing.
Stop running capture before starting a new one.
Unsupported API usage.
%@ API is not yet supported.
Capture Object property is not set.
Specify an object to be captured like MTLDevice.
registryID
maxThreadsPerThreadgroup
T{?=QQQ},R
lowPower
TB,R,GisLowPower
headless
TB,R,GisHeadless
removable
TB,R,GisRemovable
hasUnifiedMemory
recommendedMaxWorkingSetSize
depth24Stencil8PixelFormatSupported
TB,R,GisDepth24Stencil8PixelFormatSupported
readWriteTextureSupport
argumentBuffersSupport
rasterOrderGroupsSupported
TB,R,GareRasterOrderGroupsSupported
supports32BitFloatFiltering
supports32BitMSAA
supportsBCTextureCompression
supportsPullModelInterpolation
maxThreadgroupMemoryLength
maxArgumentBufferSamplerCount
programmableSamplePositionsSupported
TB,R,GareProgrammableSamplePositionsSupported
maxBufferLength
counterSets
supportsDynamicLibraries
Capture to another destination.
Don't specify an output file path.
Specify a valid output file path.
gputrace
Capture Destination is not valid.
Capturing to a valid destination.
Developer Tools
GPU Trace Document
functionType
patchType
patchControlPointCount
vertexAttributes
stageInputAttributes
functionConstantsDictionary
filePath
lineNumber
unpackedFilePath
returnType
T@"MTLType",R
arguments
T@"<MTLFunction>",R
MTLBuffer-%llu-%u
MTLIndirectCmdBuf-%llu-%u
MTLTexture-%llu-%u-Origin:%u-%u-%u-Size:%u-%u-%u-Level%u-Slice%u
MTLTexture-%llu-%u-mipmap%u-slice%u
IOSurface-%llu-%d-%u
downloadContext
T@"GTDownloadContext",R,N,V_downloadContext
downloadValue
TQ,N,V_downloadValue
downloadEvent
T@"<MTLSharedEvent>",&,N,V_downloadEvent
downloadQueue
T@"<MTLCommandQueue>",&,N,V_downloadQueue
waitValue
TQ,N,V_waitValue
waitEvent
T@"<MTLSharedEvent>",&,N,V_waitEvent
splitting command buffer for context %p
requests
T^{apr_array_header_t=^{apr_pool_t}iii*},N,V_requests
objects
T@"NSMutableArray",&,N,V_objects
usedGPUMemory
TQ,N,V_usedGPUMemory
T@"<MTLBuffer>",&,N,V_buffer
offset
TQ,N,V_offset
TQ,N,V_size
com.apple.dt.GPUTools.downloader
#include <metal_stdlib>
using namespace metal
;struct VOut { float4 pos [[position]]; float2 uv; };
vertex VOut Vertex(uint vid [[ vertex_id ]]) {VOut out; out.uv = float2((vid << 1) & 2, vid & 2); out.pos = float4(out.uv * 2.0f + -1.0f, 0.0f, 1.0f); return out; }
struct FOut { half4 rt0 [[color(0)]]; };
fragment FOut Fragment(VOut in [[stage_in]], texture2d<half> tex) { FOut out; out.rt0 = tex.read(uint2(tex.get_width() * (in.uv.x), tex.get_height() * (1.0 - in.uv.y))); return out; }
Vertex
Fragment
v24@?0@"<MTLSharedEvent>"8Q16
#include <metal_stdlib>
using namespace metal
;struct VOut { float4 pos [[position]]; float2 uv; };
vertex VOut Vertex(uint vid [[ vertex_id ]]) {VOut out; out.uv = float2((vid << 1) & 2, vid & 2); out.pos = float4(out.uv * 2.0f + -1.0f, 0.0f, 1.0f); return out; }
struct FOut { float4 rt0 [[color(0)]]; float rt1 [[color(1)]]; };
fragment FOut Fragment(VOut in [[stage_in]], texture2d<float> tex) { FOut out;
float4 texel = tex.read(uint2(tex.get_width() * (in.uv.x), tex.get_height() * (in.uv.y)));out.rt0 = float4(texel.rgb, 0.0);
out.rt1 = texel.a;
return out; }
MTLIOAccelIndirectCommandBuffer
MTLDebugPipelineLibrary
pipelineNames
disableRunTimeCompilation
pipelineCache
T@"<MTLPipelineCache>",R,N
functionCache
T@"<MTLPipelineLibrary>",R
MPSPlugin
MPSNeuralNetworkPlugin
MPSMatrixPlugin
newCNNConvolutionWithDescriptor:dataSource:fullyConnected:
newCNNConvolutionWithDescriptor:convolutionData:
newCNNConvolutionGradientWithDescriptor:convolutionData:
newCNNNeuronWithNeuronType:neuronParameterA:neuronParameterB:neuronParameterC:
newCNNNeuronWithNeuronType:neuronParameterAArray:count:
newMatrixMultiplicationWithTransposeLeft:transposeRight:resultRows:resultColumns:interiorColumns:alpha:beta:
newMatrixVectorMultiplicationWithTranspose:rows:columns:alpha:beta:
newMatrixFullyConnected
newCNNPoolingMaxWithKernelWidth:kernelHeight:strideInPixelsX:strideInPixelsY:
newCNNPoolingAverageWithKernelWidth:kernelHeight:strideInPixelsX:strideInPixelsY:
newCNNDilatedPoolingMaxWithKernelWidth:kernelHeight:strideInPixelsX:strideInPixelsY:dilationRateX:dilationRateY:
newCNNSoftMax
ciKernelMain
v24@?0@"<MTLLibrary>"8@"NSError"16
v32@?0@"<MTLRenderPipelineState>"8@"MTLRenderPipelineReflection"16@"NSError"24
v32@?0@"<MTLComputePipelineState>"8@"MTLComputePipelineReflection"16@"NSError"24
metallib
kDYFEMTLDevice_validateDynamicLibrary_state_error
kDYFEMTLDevice_validateDynamicLibraryURL_error
supportsBufferlessClientStorageTexture
supportsComputeMemoryBarrier
supportsRenderMemoryBarrier
supportsArgumentBuffersTier2
supportsReadWriteTextureArgumentsTier2
supportsProgrammableSamplePositions
supportsLargeFramebufferConfigs
supportsCustomBorderColor
supports3DBCTextures
supportsPrimitiveRestartOverride
supports32bpcMSAATextures
supportsPlacementHeaps
supportsOpenCLTextureWriteSwizzles
supportsInt64
supportsNonZeroTextureWriteLOD
supportsSharedTextureHandles
supportsBufferPrefetchStatistics
supportsLimitedYUVFormats
supportsNonPrivateDepthStencilTextures
supportsNonPrivateMSAATextures
supportsSharedStorageHeapResources
supportsSharedStorageTextures
supportsLinearTextureFromSharedBuffer
supportsPipelineLibraries
supportsFragmentOnlyEncoders
supportsBufferWithIOSurface
supportsProgrammableBlending
supportsRenderToLinearTextures
supportsMemorylessRenderTargets
supportsFastMathInfNaNPropagation
supportsInvariantVertexPosition
supportsShaderLODAverage
supportsRelaxedTextureViewRequirements
supportsSeparateDepthStencil
supportsGPUStatistics
supportsCompressedTextureViewSPI
supportsRenderTargetTextureRotation
supportsDynamicControlPointCount
supportsIABHashForTools
supportsBinaryArchives
supportsBinaryLibraries
supportsASTCTextureCompression
supportsExtendedYUVFormats
supportsPublicXR10Formats
supportsSRGBwrites
supportsDepthClipMode
supportsPacked32TextureBufferWrites
supports3DASTCTextures
supportsExtendedXR10Formats
supportsFragmentBufferWrites
supportsCountingOcclusionQuery
supportsBaseVertexInstanceDrawing
supportsIndirectDrawAndDispatch
supportsTessellation
supportsReadWriteBufferArguments
supportsArrayOfTextures
supportsArrayOfSamplers
supportsCombinedMSAAStoreAndResolveAction
supportsMutableTier1ArgumentBuffers
supportsSamplerCompareFunction
supportsMSAADepthResolve
supportsMSAAStencilResolve
supportsMSAADepthResolveFilter
supportsGFXIndirectCommandBuffers
supportsCMPIndirectCommandBuffers
supportsIndirectStageInRegion
supportsIndirectTextures
supportsNorm16BCubicFiltering
supportsTextureOutOfBoundsReads
supportsTextureSwizzle
supportsAlphaYUVFormats
supportsMemoryOrderAtomics
supportsQuadGroup
supportsRenderTextureWrites
supportsImageBlocks
supportsTileShaders
supportsImageBlockSampleCoverageControl
supportsNativeHardwareFP16
supportsPostDepthCoverage
supportsMipLevelsSmallerThanBlockSize
supportsNonUniformThreadgroupSize
supportsReadWriteTextureArguments
supportsReadWriteTextureCubeArguments
supportsTextureCubeArray
supportsQuadShufflesAndBroadcast
supportsConcurrentComputeDispatch
supportsRenderPassWithoutRenderTarget
supportsRasterOrderGroups
supportsRasterOrderGroupsColorAttachment
supportsLinearTexture2DArray
supportsNonSquareTileShaders
supportsSeparateVisibilityAndShadingRate
supports2DLinearTexArraySPI
supportsLayeredRendering
supportsViewportAndScissorArray
supportsIndirectTessellation
supportsMSAAStencilResolveFilter
supportsStencilFeedback
supportsFP32TessFactors
supportsUnalignedVertexFetch
supportsSIMDGroup
supportsShaderMinLODClamp
supportsSIMDShufflesAndBroadcast
supportsWritableArrayOfTextures
supportsIndirectWritableTextures
supportsStatefulDynamicLibraries
supportsBlackOrWhiteSamplerBorderColors
supportsMirrorClampToEdgeSamplerMode
supportsSIMDReduction
supportsDepthClipModeClampExtended
supportsTexture2DMultisampleArray
supportsForceSeamsOnCubemaps
supportsFloat16BCubicFiltering
supportsFloat16InfNanFiltering
deviceCreationFlags
gpuAssertionsEnabled
TB,GareGPUAssertionsEnabled,SsetGPUAssertionsEnabled:
commandBufferErrorOptions
TQ,N
targetDeviceInfo
Tr^{MTLTargetDeviceArch=QI*},R
targetDeviceArchitecture
T@"MTLTargetDeviceArchitecture",R
shaderDebugInfoCaching
halfFPConfig
singleFPConfig
doubleFPConfig
metalAssertionsEnabled
featureProfile
limits
Tr^{?=IIIIIIIIIIIIIIIIIIIffIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIQ},R
maxFramebufferStorageBits
maxColorAttachments
maxVertexAttributes
maxVertexBuffers
maxVertexTextures
maxVertexSamplers
maxVertexInlineDataSize
maxInterpolants
maxFragmentBuffers
maxFragmentTextures
maxFragmentSamplers
maxFragmentInlineDataSize
maxComputeBuffers
maxComputeTextures
maxComputeSamplers
maxComputeInlineDataSize
maxComputeLocalMemorySizes
maxTotalComputeThreadsPerThreadgroup
maxComputeThreadgroupMemory
maxLineWidth
Tf,R
maxPointSize
maxVisibilityQueryOffset
minConstantBufferAlignmentBytes
minBufferNoCopyAlignmentBytes
maxTextureWidth1D
maxTextureWidth2D
maxTextureHeight2D
maxTextureWidth3D
maxTextureHeight3D
maxTextureDepth3D
maxTextureDimensionCube
maxTextureLayers
linearTextureAlignmentBytes
iosurfaceTextureAlignmentBytes
iosurfaceReadOnlyTextureAlignmentBytes
deviceLinearTextureAlignmentBytes
deviceLinearReadOnlyTextureAlignmentBytes
maxFunctionConstantIndices
maxComputeThreadgroupMemoryAlignmentBytes
maxInterpolatedComponents
maxTessellationFactor
maxIndirectBuffers
maxIndirectTextures
maxIndirectSamplers
maxIndirectSamplersPerDevice
maxFenceInstances
maxCustomSamplePositions
maxTextureBufferWidth
maxComputeAttributes
maxConstantBufferArguments
supportPriorityBand
sharedMemorySize
dedicatedMemorySize
indirectArgumentBufferCapabilities
T{IndirectArgumentBufferCapabilities=b1b1b1b29},R
quadDataSharingSupported
TB,R,GisQuadDataSharingSupported
float32FilteringSupported
TB,R,GisFloat32FilteringSupported
msaa32bSupported
TB,R,GisMsaa32bSupported
defaultTextureWriteRoundingMode
placementHeapSupported
TB,R,GisPlacementHeapSupported
harvester
T^{GTResourceHarvester=},R,N,V_harvester
downloader
T@"GTResourceDownloader",R,N,V_downloader
renderFunctionCopyIndirectCommandBuffer
T@"<MTLFunction>",R,N
computeFunctionCopyIndirectCommandBuffer
renderPipelineCopyIndirectCommandBuffer
T@"<MTLRenderPipelineState>",R,N
renderPipelineCopyBuffer
computePipelineCopyIndirectCommandBuffer
T@"<MTLComputePipelineState>",R,N
computePipelineCopyBuffer
dispatchGroup
T@"NSObject<OS_dispatch_group>",R,N
#include <metal_stdlib>
using namespace metal;
struct CopyIndirectCommandBufferArgument {
command_buffer destination;
command_buffer source;
vertex void renderCopyIndirectCommandBuffer (device CopyIndirectCommandBufferArgument& in [[ buffer(0) ]], uint i [[ vertex_id ]])
render_command src(in.source, i);
render_command dest(in.destination, i);
dest.copy_command(src);
vertex void renderCopyBuffer (device char* dest [[ buffer(0) ]], constant char* src [[ buffer(1) ]], uint i [[ vertex_id ]])
dest[i] = src[i];
renderCopyIndirectCommandBuffer
renderCopyBuffer
#include <metal_stdlib>
using namespace metal;
struct CopyIndirectCommandBufferArgument {
command_buffer destination;
command_buffer source;
kernel void computeCopyIndirectCommandBuffer (device CopyIndirectCommandBufferArgument& in [[ buffer(0) ]], uint i [[ thread_position_in_grid ]])
compute_command src(in.source, i);
compute_command dest(in.destination, i);
dest.copy_command(src);
kernel void computeCopyBuffer (device char* dest [[ buffer(0) ]], constant char* src [[ buffer(1) ]], uint i [[ thread_position_in_grid ]])
dest[i] = src[i];
computeCopyIndirectCommandBuffer
computeCopyBuffer
readsDepth
writesDepth
readsStencil
writesStencil
T@"<MTLDepthStencilState>",R
maxTotalThreadsPerThreadgroup
threadExecutionWidth
staticThreadgroupMemoryLength
debugInstrumentationData
T@"<MTLComputePipelineState>",R
T@"<MTLFunction>",&,N,V_function
T@"MTLComputePipelineDescriptor",C,N,V_descriptor
copyGranularity
watermark
T{?=[2Q]},R
T@"<MTLTextureLayout>",R
signaledValue
T@"<MTLSharedEvent>",R
CaptureMTLIndirectRenderCommand
MTLIndirectRenderCommand
NSObject
CaptureMTLObject
CaptureMTLIndirectComputeCommand
MTLIndirectComputeCommand
CaptureMTLCommandQueue
MTLCommandQueueSPI
MTLCommandQueue
CaptureMTLIndirectCommandBuffer
MTLIndirectCommandBuffer
MTLResource
MTLResourceSPI
CaptureMTLHeap
MTLHeap
CaptureMTLRenderPipelineState
MTLRenderPipelineStateSPI
MTLRenderPipelineState
CaptureMTLCommandBuffer
MTLCommandBufferSPI
MTLCommandBuffer
CaptureMTLDynamicLibrary
MTLDynamicLibrarySPI
MTLDynamicLibrary
CaptureMTLDrawable
MTLDrawable
CaptureMTLBinaryArchive
MTLBinaryArchiveSPI
MTLBinaryArchive
GTGPUToolsVersionInfo
NSSecureCoding
NSCoding
GTDeviceInfo
GTMTLCaptureScopeInfo
NSCopying
GTMTLDeviceProfile
GTMTLCommandQueueInfo
CaptureMTLBlitCommandEncoder
MTLBlitCommandEncoder
MTLCommandEncoder
CaptureMTLArgumentEncoder
MTLArgumentEncoder
CaptureMTLRenderCommandEncoder
MTLRenderCommandEncoderSPI
MTLRenderCommandEncoder
CaptureMTLSamplerState
MTLSamplerStateSPI
MTLSamplerState
CaptureMTLEvent
MTLEvent
CaptureMTLFence
MTLFence
CaptureMTLCaptureScope
CaptureMTLCounterSampleBuffer
MTLCounterSampleBuffer
CaptureMTLParallelRenderCommandEncoder
MTLParallelRenderCommandEncoder
CaptureMTLComputeCommandEncoder
MTLComputeCommandEncoderSPI
MTLComputeCommandEncoder
CaptureMTLBuffer
MTLBufferSPI
MTLBuffer
CaptureMTLDebugCommandEncoder
MTLDebugCommandEncoder
CaptureMTLLibrary
MTLLibrarySPI
MTLLibrary
MTLTexture
CaptureMTLTexture
MTLTextureImplementation
MTLTextureSPI
DYNSErrorAdditions
GTError_capture
GTIntKeyedDictionary_capture
GTFuture_capture
GTContinuation_capture
GTTransportMessage_capture
GTTransportMessageReplyContinuation_capture
GTTransportSource_capture
GTTransport_capture
GTVMBufferSubRegion_capture
GTVMBufferSubRegion
GTVMBuffer_capture
GTVMBuffer
GTGPUVMBuffer
GTBaseStreamTransport_capture
GTBufferedSendOperation_capture
GTSharedMemoryTransport_capture
GTBaseSocketTransport_capture
GTUNIXDomainSocketTransport_capture
MTLDevice
CaptureMTLCaptureManager
CaptureMTLFunction
MTLFunctionSPI
MTLFunction
GTDownloadPoint
GTDownloadContext
GTDownloadGPUBuffer
GTResourceDownloader
CaptureMTLPipelineLibrary
MTLPipelineLibrarySPI
MTLPipelineLibrary
CaptureMTLDevice
MTLDeviceSPI
CaptureMTLDepthStencilState
MTLDepthStencilStateSPI
MTLDepthStencilState
CaptureMTLComputePipelineState
MTLComputePipelineStateSPI
MTLComputePipelineState
CaptureMTLTextureLayout
MTLTextureLayout
CaptureMTLSharedEvent
MTLSharedEvent
B24@0:8@16
#16@0:8
@16@0:8
@24@0:8:16
@32@0:8:16@24
@40@0:8:16@24@32
B16@0:8
B24@0:8#16
B24@0:8:16
Vv16@0:8
Q16@0:8
^{_NSZone=}16@0:8
B24@0:8@"Protocol"16
@"NSString"16@0:8
v24@0:8@16
v40@0:8@16Q24Q32
v56@0:8Q16Q24Q32Q40Q48
v80@0:8Q16Q24Q32@40Q48Q56q64Q72
v16@0:8
v24@0:8@"<MTLRenderPipelineState>"16
v40@0:8@"<MTLBuffer>"16Q24Q32
v80@0:8Q16Q24Q32@"<MTLBuffer>"40Q48Q56q64Q72
^{GTTraceContext=}16@0:8
^{GTTraceStream=}16@0:8
@32@0:8@16^{GTTraceContext=}24
@"<MTLIndirectRenderCommand>"
^{GTTraceContext=}
^{GTTraceStream=}
v64@0:8{?=QQQ}16{?=QQQ}40
v32@0:8Q16Q24
v64@0:8{?={?=QQQ}{?=QQQ}}16
v24@0:8@"<MTLComputePipelineState>"16
@"<MTLIndirectComputeCommand>"
@24@0:8@16
@"<MTLCommandBuffer>"16@0:8
@"<MTLCommandBuffer>"24@0:8@"MTLCommandBufferDescriptor"16
v24@0:8@"NSString"16
@"<MTLDevice>"16@0:8
B24@0:8Q16
B28@0:8Q16S24
i16@0:8
v20@0:8i16
v20@0:8B16
i24@0:8@16
i32@0:8@16Q24
v24@0:8@?16
v24@0:8Q16
v24@0:8@"NSObject<OS_dispatch_queue>"16
@"NSObject<OS_dispatch_queue>"16@0:8
@"NSArray"16@0:8
i24@0:8@"NSArray"16
i32@0:8@"NSArray"16Q24
@"NSArray"24@0:8@"NSArray"16
v24@0:8@?<v@?@"<MTLCommandBuffer>"@"NSData"Q>16
@"NSDictionary"16@0:8
@32@0:8@16@24
@"<MTLCommandQueueSPI>"
@"CaptureMTLDevice"
@"NSMutableArray"
@"NSObject<OS_dispatch_queue>"
@"<MTLCommandQueue>"
Q24@0:8Q16
@"<MTLHeap>"16@0:8
v32@0:8{_NSRange=QQ}16
@24@0:8Q16
@"<MTLIndirectRenderCommand>"24@0:8Q16
@"<MTLIndirectComputeCommand>"24@0:8Q16
B32@0:8r^@16Q24
B24@0:8@"<MTLResource>"16
@"<MTLIndirectCommandBuffer><MTLResourceSPI>"
@32@0:8Q16Q24
@40@0:8Q16Q24Q32
@32@0:8@16Q24
q16@0:8
@"<MTLBuffer>"32@0:8Q16Q24
@"<MTLTexture>"24@0:8@"MTLTextureDescriptor"16
@"<MTLBuffer>"40@0:8Q16Q24Q32
@"<MTLTexture>"32@0:8@"MTLTextureDescriptor"16Q24
@"<MTLHeap>"
@"NSData"16@0:8
@"MTLDebugInstrumentationData"16@0:8
^{GTTraceContext={_opaque_pthread_mutex_t=q[56c]}^{GTTraceStore}AQAQ^{apr_hash_t}^(FreeNode)Ai[4c]^{GTTraceStream}[16{GTTraceStoreList=^(GTTraceStoreNode)^(GTTraceStoreNode)AiAi}]}16@0:8
^{GTTraceStream=QQQ^{GTTraceMemPool}{GTTraceStoreList=^(GTTraceStoreNode)^(GTTraceStoreNode)AiAi}AQ}16@0:8
@"<MTLRenderPipelineStateSPI>"
^{GTTraceContext={_opaque_pthread_mutex_t=q[56c]}^{GTTraceStore}AQAQ^{apr_hash_t}^(FreeNode)Ai[4c]^{GTTraceStream}[16{GTTraceStoreList=^(GTTraceStoreNode)^(GTTraceStoreNode)AiAi}]}
^{GTTraceStream=QQQ^{GTTraceMemPool}{GTTraceStoreList=^(GTTraceStoreNode)^(GTTraceStoreNode)AiAi}AQ}
@"MTLRenderPipelineDescriptor"
v32@0:8@16d24
v32@0:8@16Q24
d16@0:8
v24@0:8@?<v@?@"<MTLCommandBuffer>">16
v24@0:8@"<MTLDrawable>"16
v32@0:8@"<MTLDrawable>"16d24
@"<MTLBlitCommandEncoder>"16@0:8
@"<MTLRenderCommandEncoder>"24@0:8@"MTLRenderPassDescriptor"16
@"<MTLComputeCommandEncoder>"24@0:8@"MTLComputePassDescriptor"16
@"<MTLBlitCommandEncoder>"24@0:8@"MTLBlitPassDescriptor"16
@"<MTLComputeCommandEncoder>"16@0:8
@"<MTLComputeCommandEncoder>"24@0:8Q16
v32@0:8@"<MTLEvent>"16Q24
@"<MTLParallelRenderCommandEncoder>"24@0:8@"MTLRenderPassDescriptor"16
@"<MTLCommandQueue>"16@0:8
@"<MTLLogContainer>"16@0:8
@"NSError"16@0:8
^v24@0:8^Q16
@40@0:8@16^(?={?=b8b24IQQ}{?=b8b24IQQ})24Q32
@32@0:8^(?={?=b8b24IQQ}{?=b8b24IQQ})16Q24
@40@0:8Q16^(?={?=b8b24IQQ}{?=b8b24IQQ})24Q32
v36@0:8@16Q24I32
@"NSMutableDictionary"16@0:8
@"<MTLRenderCommandEncoder>"40@0:8@"MTLRenderPassDescriptor"16^(?={?=b8b24IQQ}{?=b8b24IQQ})24Q32
@"<MTLComputeCommandEncoder>"32@0:8^(?={?=b8b24IQQ}{?=b8b24IQQ})16Q24
@"<MTLComputeCommandEncoder>"40@0:8Q16^(?={?=b8b24IQQ}{?=b8b24IQQ})24Q32
@"<MTLComputeCommandEncoder>"40@0:8@"MTLComputePassDescriptor"16^(?={?=b8b24IQQ}{?=b8b24IQQ})24Q32
@"<MTLDebugCommandEncoder>"16@0:8
v36@0:8@"<MTLEvent>"16Q24I32
v24@0:8@"<MTLResource>"16
v24@0:8@"<MTLHeap>"16
C16@0:8
@"CaptureMTLCommandQueue"
@"<MTLCommandBufferSPI>"
{_opaque_pthread_mutex_t="__sig"q"__opaque"[56c]}
^{apr_pool_t=}
@"<MTLSharedEvent>"
@"NSMutableSet"
B32@0:8@16^@24
B32@0:8@"NSURL"16^@24
B40@0:8@16Q24^@32
r^{?=[32C]}16@0:8
B40@0:8@"NSURL"16Q24^@32
@"NSString"24@0:8Q16
@"NSObject<OS_dispatch_data>"16@0:8
@"<MTLDynamicLibrarySPI>"
v24@0:8d16
@"<MTLDrawable>"
B32@0:8@"MTLComputePipelineDescriptor"16^@24
B32@0:8@"MTLRenderPipelineDescriptor"16^@24
v32@0:8@16@24
v32@0:8@"MTLBinaryEntry"16@"MTLBinaryKey"24
@"MTLBinaryEntry"24@0:8@"MTLBinaryKey"16
B40@0:8@"MTLComputePipelineDescriptor"16Q24^@32
B40@0:8@"MTLRenderPipelineDescriptor"16Q24^@32
@"<MTLBinaryArchiveSPI>"
v24@0:8@"NSCoder"16
@24@0:8@"NSCoder"16
I16@0:8
@"NSDictionary"
{?=dIIII}16@0:8
@"NSArray"
@24@0:8^{_NSZone=}16
@"NSString"
@"<MTLDevice>"
v136@0:8@16Q24Q32{?=QQQ}40{?=QQQ}64@88Q96Q104{?=QQQ}112
v120@0:8@16Q24Q32Q40{?=QQQ}48@72Q80Q88{?=QQQ}96
v128@0:8@16Q24Q32Q40{?=QQQ}48@72Q80Q88{?=QQQ}96Q120
v120@0:8@16Q24Q32{?=QQQ}40{?=QQQ}64@88Q96Q104Q112
v128@0:8@16Q24Q32{?=QQQ}40{?=QQQ}64@88Q96Q104Q112Q120
v44@0:8@16{_NSRange=QQ}24C40
v80@0:8@16Q24Q32@40Q48Q56Q64Q72
v56@0:8@16Q24@32Q40Q48
v40@0:8@16{_NSRange=QQ}24
v56@0:8@16{_NSRange=QQ}24@40Q48
v36@0:8@16Q24B32
v40@0:8@"<MTLTexture>"16Q24Q32
v136@0:8@"<MTLTexture>"16Q24Q32{?=QQQ}40{?=QQQ}64@"<MTLTexture>"88Q96Q104{?=QQQ}112
v120@0:8@"<MTLBuffer>"16Q24Q32Q40{?=QQQ}48@"<MTLTexture>"72Q80Q88{?=QQQ}96
v128@0:8@"<MTLBuffer>"16Q24Q32Q40{?=QQQ}48@"<MTLTexture>"72Q80Q88{?=QQQ}96Q120
v120@0:8@"<MTLTexture>"16Q24Q32{?=QQQ}40{?=QQQ}64@"<MTLBuffer>"88Q96Q104Q112
v128@0:8@"<MTLTexture>"16Q24Q32{?=QQQ}40{?=QQQ}64@"<MTLBuffer>"88Q96Q104Q112Q120
v24@0:8@"<MTLTexture>"16
v44@0:8@"<MTLBuffer>"16{_NSRange=QQ}24C40
v80@0:8@"<MTLTexture>"16Q24Q32@"<MTLTexture>"40Q48Q56Q64Q72
v32@0:8@"<MTLTexture>"16@"<MTLTexture>"24
v56@0:8@"<MTLBuffer>"16Q24@"<MTLBuffer>"32Q40Q48
v24@0:8@"<MTLFence>"16
v40@0:8@"<MTLIndirectCommandBuffer>"16{_NSRange=QQ}24
v56@0:8@"<MTLIndirectCommandBuffer>"16{_NSRange=QQ}24@"<MTLIndirectCommandBuffer>"40Q48
v36@0:8@"<MTLCounterSampleBuffer>"16Q24B32
v56@0:8@"<MTLCounterSampleBuffer>"16{_NSRange=QQ}24@"<MTLBuffer>"40Q48
@"<MTLBlitCommandEncoder>"
@"CaptureMTLCommandBuffer"
v48@0:8r^@16r^Q24{_NSRange=QQ}32
v40@0:8r^@16{_NSRange=QQ}24
^v24@0:8Q16
v32@0:8@"<MTLBuffer>"16Q24
v32@0:8@"<MTLTexture>"16Q24
v32@0:8@"<MTLSamplerState>"16Q24
v32@0:8@"<MTLRenderPipelineState>"16Q24
v32@0:8@"<MTLComputePipelineState>"16Q24
v32@0:8@"<MTLIndirectCommandBuffer>"16Q24
@"<MTLArgumentEncoder>"24@0:8Q16
@"<MTLArgumentEncoder>"
v40@0:8r^v16Q24Q32
v40@0:8@16f24f28Q32
v56@0:8r^@16r^f24r^f32{_NSRange=QQ}40
v64@0:8{?=dddddd}16
v28@0:8f16f20f24
v48@0:8{?=QQQQ}16
v32@0:8f16f20f24f28
v20@0:8I16
v24@0:8I16I20
v48@0:8Q16Q24Q32Q40
v40@0:8Q16Q24Q32
v64@0:8Q16Q24Q32@40Q48Q56
v56@0:8Q16Q24Q32@40Q48
v40@0:8Q16@24Q32
v64@0:8Q16Q24@32Q40@48Q56
v20@0:8f16
v72@0:8Q16Q24Q32@40Q48Q56Q64
v88@0:8Q16Q24Q32@40Q48@56Q64Q72Q80
v40@0:8r^@16Q24Q32
v48@0:8r^@16Q24Q32Q40
v32@0:8r^@16Q24
v40@0:8@16@24Q32
v40@0:8@"<MTLSamplerState>"16f24f28Q32
v24@0:8@"<MTLDepthStencilState>"16
v64@0:8Q16Q24Q32@"<MTLBuffer>"40Q48Q56
v56@0:8Q16Q24Q32@"<MTLBuffer>"40Q48
v40@0:8Q16@"<MTLBuffer>"24Q32
v64@0:8Q16Q24@"<MTLBuffer>"32Q40@"<MTLBuffer>"48Q56
v32@0:8@"<MTLFence>"16Q24
v72@0:8Q16Q24Q32@"<MTLBuffer>"40Q48Q56Q64
v88@0:8Q16Q24Q32@"<MTLBuffer>"40Q48@"<MTLBuffer>"56Q64Q72Q80
v32@0:8@"<MTLResource>"16Q24
v40@0:8@"<MTLResource>"16Q24Q32
v32@0:8@"<MTLHeap>"16Q24
v40@0:8@"<MTLIndirectCommandBuffer>"16@"<MTLBuffer>"24Q32
v48@0:8@16Q24@32Q40
v40@0:8f16f20f24f28Q32
v44@0:8@16f24f28f32Q36
v28@0:8B16Q20
v56@0:8@16Q24Q32Q40Q48
v60@0:8@16Q24Q32Q40B48Q52
v48@0:8@16Q24Q32Q40
v52@0:8@16Q24Q32Q40B48
v24@0:8@?<v@?@"<MTLRenderCommandEncoderSPI>"Q>16
v48@0:8@"<MTLTexture>"16Q24@"<MTLSamplerState>"32Q40
v44@0:8@"<MTLSamplerState>"16f24f28f32Q36
v56@0:8@"<MTLTexture>"16Q24Q32Q40Q48
v60@0:8@"<MTLTexture>"16Q24Q32Q40B48Q52
v48@0:8@"<MTLTexture>"16Q24Q32Q40
v52@0:8@"<MTLTexture>"16Q24Q32Q40B48
@"<MTLRenderCommandEncoderSPI>"
@"<MTLSamplerStateSPI>"
@"<MTLEvent>"
@"<MTLFence>"
@40@0:8@16@24^{GTTraceContext={_opaque_pthread_mutex_t=q[56c]}^{GTTraceStore}AQAQ^{apr_hash_t}^(FreeNode)Ai[4c]^{GTTraceStream}[16{GTTraceStoreList=^(GTTraceStoreNode)^(GTTraceStoreNode)AiAi}]}32
@32@0:8{_NSRange=QQ}16
@"NSData"32@0:8{_NSRange=QQ}16
@"<MTLCounterSampleBuffer>"
@"<MTLRenderCommandEncoder>"16@0:8
@"<MTLParallelRenderCommandEncoderSPI>"
v56@0:8@16Q24{?=QQQ}32
v56@0:8@"<MTLBuffer>"16Q24{?=QQQ}32
@"<MTLComputeCommandEncoderSPI>"
^v16@0:8
@40@0:8@16Q24Q32
@"<MTLTexture>"40@0:8@"MTLTextureDescriptor"16Q24Q32
v40@0:8@"NSString"16{_NSRange=QQ}24
@48@0:8@16Q24Q32Q40
^{__IOSurface=}16@0:8
@"<MTLTexture>"48@0:8@"MTLTextureDescriptor"16Q24Q32Q40
@"<MTLBufferSPI><MTLResourceSPI>"
@"<MTLBuffer>"
v32@0:8r*16Q24
v32@0:8r*16r*24
v24@0:8r*16
v32@0:8@16r*24
v36@0:8@16r*24B32
v32@0:8@"<MTLBuffer>"16r*24
v24@0:8@"<MTLBuffer>"16
v36@0:8@"<MTLTexture>"16r*24B32
v32@0:8@"<MTLTexture>"16r*24
@"<MTLDebugCommandEncoder>"
@40@0:8@16@24^@32
v40@0:8@16@24@?32
v32@0:8@16@?24
@32@0:8@16^@24
@"<MTLFunction>"24@0:8@"NSString"16
@"<MTLFunction>"40@0:8@"NSString"16@"MTLFunctionConstantValues"24^@32
v40@0:8@"NSString"16@"MTLFunctionConstantValues"24@?<v@?@"<MTLFunction>"@"NSError">32
v32@0:8@"MTLFunctionDescriptor"16@?<v@?@"<MTLFunction>"@"NSError">24
@"<MTLFunction>"32@0:8@"MTLFunctionDescriptor"16^@24
@48@0:8@16@24@32^@40
v48@0:8@16@24@32@?40
@"<MTLFunction>"48@0:8@"NSString"16@"MTLFunctionConstantValues"24@"<MTLPipelineLibrary>"32^@40
v48@0:8@"NSString"16@"MTLFunctionConstantValues"24@"<MTLPipelineLibrary>"32@?<v@?@"<MTLFunction>"@"NSError">40
@"<MTLLibrarySPI>"
v104@0:8^v16Q24Q32{?={?=QQQ}{?=QQQ}}40Q88Q96
v104@0:8{?={?=QQQ}{?=QQQ}}16Q64Q72r^v80Q88Q96
v88@0:8^v16Q24{?={?=QQQ}{?=QQQ}}32Q80
v88@0:8{?={?=QQQ}{?=QQQ}}16Q64r^v72Q80
@64@0:8Q16Q24{_NSRange=QQ}32{_NSRange=QQ}48
@68@0:8Q16Q24{_NSRange=QQ}32{_NSRange=QQ}48{?=CCCC}64
{?=CCCC}16@0:8
@"<MTLTexture>"24@0:8Q16
@"<MTLTexture>"64@0:8Q16Q24{_NSRange=QQ}32{_NSRange=QQ}48
@"<MTLTexture>"68@0:8Q16Q24{_NSRange=QQ}32{_NSRange=QQ}48{?=CCCC}64
@"<MTLResource>"16@0:8
@"<MTLTexture>"16@0:8
@"<MTLBuffer>"16@0:8
@48@0:8Q16Q24Q32Q40
@72@0:8Q16Q24{_NSRange=QQ}32{_NSRange=QQ}48Q64
@76@0:8Q16Q24{_NSRange=QQ}32{_NSRange=QQ}48{?=CCCC}64Q68
@"<MTLTexture>"48@0:8Q16Q24Q32Q40
@"<MTLTexture>"32@0:8Q16Q24
@"<MTLTexture>"72@0:8Q16Q24{_NSRange=QQ}32{_NSRange=QQ}48Q64
@"<MTLTexture>"76@0:8Q16Q24{_NSRange=QQ}32{_NSRange=QQ}48{?=CCCC}64Q68
@"<MTLTextureSPI><MTLResourceSPI>"
@"<MTLResource>"
@"<MTLTexture>"
v32@0:8@16q24
@24@0:8q16
v24@0:8q16
^{_IntKeyedDictionaryPrivate={unordered_map<long long, id<NSObject>, std::__1::hash<long long>, std::__1::equal_to<long long>, std::__1::allocator<std::__1::pair<const long long, id<NSObject> > > >={__hash_table<std::__1::__hash_value_type<long long, id<NSObject> >, std::__1::__unordered_map_hasher<long long, std::__1::__hash_value_type<long long, id<NSObject> >, std::__1::hash<long long>, true>, std::__1::__unordered_map_equal<long long, std::__1::__hash_value_type<long long, id<NSObject> >, std::__1::equal_to<long long>, true>, std::__1::allocator<std::__1::__hash_value_type<long long, id<NSObject> > > >={unique_ptr<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<long long, id<NSObject> >, void *> *> *[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<long long, id<NSObject> >, void *> *> *> > >={__compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<long long, id<NSObject> >, void *> *> **, std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<long long, id<NSObject> >, void *> *> *> > >=^^{__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<long long, id<NSObject> >, void *> *>}{__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<long long, id<NSObject> >, void *> *> *> >={__compressed_pair<unsigned long, std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<long long, id<NSObject> >, void *> *> *> >=Q}}}}{__compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<long long, id<NSObject> >, void *> *>, std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<long long, id<NSObject> >, void *> > >={__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<long long, id<NSObject> >, void *> *>=^{__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<long long, id<NSObject> >, void *> *>}}}{__compressed_pair<unsigned long, std::__1::__unordered_map_hasher<long long, std::__1::__hash_value_type<long long, id<NSObject> >, std::__1::hash<long long>, true> >=Q}{__compressed_pair<float, std::__1::__unordered_map_equal<long long, std::__1::__hash_value_type<long long, id<NSObject> >, std::__1::equal_to<long long>, true> >=f}}}}
@?16@0:8
v36@0:8@16@24B32
v32@0:8d16@24
v48@0:8@16@24@32^v40
@"NSTimer"
@"NSCondition"
@"NSError"
@32@0:8@16@?24
@20@0:8i16
@28@0:8i16@20
@36@0:8i16@20@28
@24@0:8i16B20
@32@0:8i16@20B28
v32@0:8I16I20@24
I24@0:8@16
Q24@0:8@16
d24@0:8@16
@"NSData"
@"GTTransport_capture"
{atomic<int>="__a_"{__cxx_atomic_impl<int, std::__1::__cxx_atomic_base_impl<int> >="__a_value"Ai}}
q32@0:8@16^@24
B64@0:8@16@24^@32@40Q48@?56
B40@0:8@16@24^@32
B56@0:8@16^@24@32Q40@?48
B52@0:8i16^@20@28Q36@?44
B28@0:8i16^@20
@"NSURL"
{atomic<unsigned int>="__a_"{__cxx_atomic_impl<unsigned int, std::__1::__cxx_atomic_base_impl<unsigned int> >="__a_value"AI}}
@"GTIntKeyedDictionary_capture"
@40@0:8@16{_NSRange=QQ}24
r^v16@0:8
@"GTVMBuffer_capture"
{_NSRange="location"Q"length"Q}
@"<GTVMBufferSubRegion>"32@0:8{_NSRange=QQ}16
@24@0:8^{VMBuffer=QQQQQQ}16
^{VMBuffer=QQQQQQ}16@0:8
^{VMBuffer=QQQQQQ}
q32@0:8^v16Q24
q32@0:8r^v16Q24
q32@0:8^{dy_transport_message_unpack_s={dy_transport_message_header=IIIIII}IIQQB}16@?24
q24@0:8^@16
^{dy_transport_message_unpack_s={dy_transport_message_header=IIIIII}IIQQB}
@"<GTVMBuffer>"
[3{iovec="iov_base"^v"iov_len"Q}]
[3@"NSData"]
@"NSObject<OS_dispatch_semaphore>"
@"GTTransportMessage_capture"
@24@0:8i16I20
^v36@0:8i16Q20^@28
B48@0:8^^{sm_region_header}16Q24r*32^@40
B24@0:8^@16
v32@0:8r^v16q24
v32@0:8^v16Q24
^{sm_region_header={atomic<unsigned int>={__cxx_atomic_impl<unsigned int, std::__1::__cxx_atomic_base_impl<unsigned int> >=AI}}{atomic<unsigned int>={__cxx_atomic_impl<unsigned int, std::__1::__cxx_atomic_base_impl<unsigned int> >=AI}}{atomic<unsigned int>={__cxx_atomic_impl<unsigned int, std::__1::__cxx_atomic_base_impl<unsigned int> >=AI}}{atomic<unsigned int>={__cxx_atomic_impl<unsigned int, std::__1::__cxx_atomic_base_impl<unsigned int> >=AI}}{atomic<unsigned int>={__cxx_atomic_impl<unsigned int, std::__1::__cxx_atomic_base_impl<unsigned int> >=AI}}{atomic<unsigned int>={__cxx_atomic_impl<unsigned int, std::__1::__cxx_atomic_base_impl<unsigned int> >=AI}}II}
@"GTBaseStreamTransport_capture"
[64c]
@"NSObject<OS_dispatch_source>"
@"GTSharedMemoryTransport_capture"
{?=QQ}24@0:8@16
{?=QQ}32@0:8Q16Q24
@40@0:8r^v16Q24Q32
@48@0:8^v16Q24Q32@?40
@40@0:8@16^{__IOSurface=}24Q32
@48@0:8@16Q24^@32^@40
v40@0:8@16Q24@?32
B24@0:8q16
v32@0:8^{?=ff}16Q24
v32@0:8^Q16^Q24
{?=QQQ}16@0:8
@"<MTLCommandQueue>"24@0:8Q16
{?=QQ}24@0:8@"MTLTextureDescriptor"16
@"<MTLHeap>"24@0:8@"MTLHeapDescriptor"16
@"<MTLBuffer>"40@0:8r^v16Q24Q32
@"<MTLBuffer>"48@0:8^v16Q24Q32@?<v@?^vQ>40
@"<MTLDepthStencilState>"24@0:8@"MTLDepthStencilDescriptor"16
@"<MTLTexture>"40@0:8@"MTLTextureDescriptor"16^{__IOSurface=}24Q32
@"<MTLSamplerState>"24@0:8@"MTLSamplerDescriptor"16
@"<MTLLibrary>"16@0:8
@"<MTLLibrary>"32@0:8@"NSBundle"16^@24
@"<MTLLibrary>"32@0:8@"NSString"16^@24
@"<MTLLibrary>"32@0:8@"NSURL"16^@24
@"<MTLLibrary>"32@0:8@"NSObject<OS_dispatch_data>"16^@24
@"<MTLLibrary>"40@0:8@"NSString"16@"MTLCompileOptions"24^@32
v40@0:8@"NSString"16@"MTLCompileOptions"24@?<v@?@"<MTLLibrary>"@"NSError">32
@"<MTLRenderPipelineState>"32@0:8@"MTLRenderPipelineDescriptor"16^@24
@"<MTLRenderPipelineState>"48@0:8@"MTLRenderPipelineDescriptor"16Q24^@32^@40
v32@0:8@"MTLRenderPipelineDescriptor"16@?<v@?@"<MTLRenderPipelineState>"@"NSError">24
v40@0:8@"MTLRenderPipelineDescriptor"16Q24@?<v@?@"<MTLRenderPipelineState>"@"MTLRenderPipelineReflection"@"NSError">32
@"<MTLComputePipelineState>"32@0:8@"<MTLFunction>"16^@24
@"<MTLComputePipelineState>"48@0:8@"<MTLFunction>"16Q24^@32^@40
v32@0:8@"<MTLFunction>"16@?<v@?@"<MTLComputePipelineState>"@"NSError">24
v40@0:8@"<MTLFunction>"16Q24@?<v@?@"<MTLComputePipelineState>"@"MTLComputePipelineReflection"@"NSError">32
@"<MTLComputePipelineState>"48@0:8@"MTLComputePipelineDescriptor"16Q24^@32^@40
v40@0:8@"MTLComputePipelineDescriptor"16Q24@?<v@?@"<MTLComputePipelineState>"@"MTLComputePipelineReflection"@"NSError">32
@"<MTLFence>"16@0:8
@"<MTLArgumentEncoder>"24@0:8@"NSArray"16
@"<MTLIndirectCommandBuffer>"40@0:8@"MTLIndirectCommandBufferDescriptor"16Q24Q32
@"<MTLEvent>"16@0:8
@"<MTLSharedEvent>"16@0:8
@"<MTLSharedEvent>"24@0:8@"MTLSharedEventHandle"16
@"<MTLCounterSampleBuffer>"32@0:8@"MTLCounterSampleBufferDescriptor"16^@24
@"<MTLDynamicLibrary>"32@0:8@"<MTLLibrary>"16^@24
@"<MTLDynamicLibrary>"32@0:8@"NSURL"16^@24
@"<MTLBinaryArchive>"32@0:8@"MTLBinaryArchiveDescriptor"16^@24
@24@0:8^{GTTraceContext={_opaque_pthread_mutex_t=q[56c]}^{GTTraceStore}AQAQ^{apr_hash_t}^(FreeNode)Ai[4c]^{GTTraceStream}[16{GTTraceStoreList=^(GTTraceStoreNode)^(GTTraceStoreNode)AiAi}]}16
B40@0:8o^@16@24@32
@32@0:8Q16^@24
@"<MTLArgumentEncoder>"32@0:8Q16^@24
@32@0:8Q16@24
v32@0:8Q16@?24
@40@0:8Q16^@24@32
@28@0:8@16C24
@"MTLFunctionReflection"24@0:8Q16
@"MTLFunctionReflection"32@0:8Q16@"<MTLPipelineLibrary>"24
@"MTLFunctionReflection"32@0:8Q16@"NSArray"24
v32@0:8Q16@?<v@?@"MTLFunctionReflection">24
@"<MTLArgumentEncoder>"32@0:8Q16@"<MTLPipelineLibrary>"24
@"<MTLArgumentEncoder>"40@0:8Q16^@24@"<MTLPipelineLibrary>"32
@"<MTLArgumentEncoder>"40@0:8Q16^@24@"NSArray"32
@"<MTLFunction>"28@0:8@"NSData"16C24
@"MTLType"16@0:8
@"<MTLFunctionSPI>"
@"CaptureMTLLibrary"
v24@0:8^{apr_array_header_t=^{apr_pool_t}iii*}16
@"GTDownloadContext"
@32@0:8@16^{apr_array_header_t=^{apr_pool_t}iii*}24
^{apr_array_header_t=^{apr_pool_t}iii*}16@0:8
@"<MTLCommandBuffer>"
^{apr_array_header_t=^{apr_pool_t}iii*}
@24@0:8^AQ16
v40@0:8@16Q24@32
@40@0:8Q16@24@32
v32@0:8^{apr_array_header_t=^{apr_pool_t}iii*}16@24
v40@0:8^{apr_array_header_t=^{apr_pool_t}iii*}16@24@32
@"<MTLDeviceSPI>"
@"NSMutableDictionary"
@"NSObject<OS_dispatch_group>"
@"<MTLComputePipelineState>"48@0:8@"NSString"16Q24^@32^@40
@"<MTLRenderPipelineState>"48@0:8@"NSString"16Q24^@32^@40
@"MTLComputePipelineDescriptor"32@0:8@"NSString"16^@24
@"MTLRenderPipelineDescriptor"32@0:8@"NSString"16^@24
@"<MTLPipelineCache>"16@0:8
@"<MTLPipelineLibrarySPI>"
@24@0:8^{__IOSurface=}16
{?=II}16@0:8
@20@0:8I16
B44@0:8^@16Q24^Q32i40
B36@0:8@16B24^@28
@40@0:8Q16@24^@32
r^{MTLTargetDeviceArch=QI*}16@0:8
r^{?=IIIIIIIIIIIIIIIIIIIffIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIQ}16@0:8
f16@0:8
{IndirectArgumentBufferCapabilities=b1b1b1b29}16@0:8
v24@0:8^{MPSFunctionTable=}16
v40@0:8Q16^Q24Q32
B32@0:8{_NSRange=QQ}16
@48@0:8r^v16Q24Q32Q40
@56@0:8^v16Q24Q32Q40@?48
B40@0:8^{?=III}16Q24Q32
@32@0:8^v16Q24
@40@0:8^v16@24Q32
@40@0:8@16r^{?=BQ^{?}}24^@32
@28@0:8@16I24
@48@0:8^v16Q24@32@?40
@28@0:8@16B24
v24@0:8@"<MTLDeviceSPI>"16
@"<MTLBuffer>"24@0:8^{__IOSurface=}16
B24@0:8@"NSString"16
@"<MTLCommandQueue>"24@0:8@"MTLCommandQueueDescriptor"16
@"_MTLIndirectArgumentBufferLayout"24@0:8@"MTLStructType"16
@"<MTLArgumentEncoder>"24@0:8@"_MTLIndirectArgumentBufferLayout"16
@"<MTLBuffer>"40@0:8@"MTLIndirectCommandBufferDescriptor"16Q24Q32
@"<MTLIndirectRenderCommandEncoder>"24@0:8@"<MTLBuffer>"16
@"<MTLIndirectComputeCommandEncoder>"24@0:8@"<MTLBuffer>"16
@"<MTLSharedEvent>"20@0:8I16
@"<MTLDynamicLibrary>"40@0:8@"<MTLLibrary>"16@"MTLComputePipelineDescriptor"24^@32
@"NSArray"32@0:8@"MTLComputePipelineDescriptor"16^@24
B36@0:8@"<MTLLibrary>"16B24^@28
@"<MTLBinaryArchive>"40@0:8Q16@"NSURL"24^@32
@"MTLTargetDeviceArchitecture"16@0:8
v24@0:8@"NSObject<OS_dispatch_data>"16
@"<MTLBuffer>"48@0:8r^v16Q24Q32Q40
@"<MTLBuffer>"56@0:8^v16Q24Q32Q40@?<v@?^vQ>48
@"<MTLComputePipelineState>"32@0:8@"MTLComputePipelineDescriptor"16^@24
v32@0:8@"MTLComputePipelineDescriptor"16@?<v@?@"<MTLComputePipelineState>"@"NSError">24
@"<MTLFunction>"32@0:8^v16Q24
@"<MTLFunction>"40@0:8^v16@"NSObject<OS_dispatch_data>"24Q32
@"<MTLIndirectArgumentEncoder>"24@0:8@"NSArray"16
@"<MTLComputePipelineState>"40@0:8@"NSArray"16r^{?=BQ^{?}}24^@32
@"<MTLLibrary>"40@0:8@"NSString"16@"NSArray"24^@32
@"<MTLLibrary>"40@0:8@"NSArray"16r^{?=BQ^{?}}24^@32
@"<MTLPipelineLibrarySPI>"32@0:8@"NSString"16^@24
@"NSObject<OS_dispatch_data>"24@0:8@"MTLRenderPipelineDescriptor"16
@"NSObject<OS_dispatch_data>"24@0:8@"MTLComputePipelineDescriptor"16
@"MTLRenderPipelineDescriptor"32@0:8@"NSObject<OS_dispatch_data>"16@"<MTLDeserializationContext>"24
@"MTLComputePipelineDescriptor"32@0:8@"NSObject<OS_dispatch_data>"16@"<MTLDeserializationContext>"24
@"NSObject<OS_dispatch_data>"24@0:8@"MTLStructType"16
@"NSObject<OS_dispatch_data>"28@0:8@"MTLStructType"16I24
@"<MTLTexture>"48@0:8^v16Q24@"MTLTextureDescriptor"32@?<v@?^vQ>40
@"<MTLTextureLayout>"28@0:8@"MTLTextureDescriptor"16B24
@"<MTLIndirectArgumentEncoder>"24@0:8@"_MTLIndirectArgumentBufferLayout"16
v32@0:8@"NSObject<OS_dispatch_data>"16@"NSMutableDictionary"24
@32@0:8@16^{GTTraceContext={_opaque_pthread_mutex_t=q[56c]}^{GTTraceStore}AQAQ^{apr_hash_t}^(FreeNode)Ai[4c]^{GTTraceStream}[16{GTTraceStoreList=^(GTTraceStoreNode)^(GTTraceStoreNode)AiAi}]}24
^{GTResourceHarvester=}16@0:8
@"<MTLFunction>"
@"<MTLRenderPipelineState>"
@"<MTLComputePipelineState>"
[6B]
^{GTResourceHarvester=}
@"GTResourceDownloader"
@"<MTLDepthStencilStateSPI>"
@"<MTLFunctionPointerHandleSPI>"24@0:8@"<MTLFunction>"16
@"NSArray"40@0:8@"NSArray"16{_NSRange=QQ}24
@"<MTLComputePipelineStateSPI>"
@"CaptureMTLComputePipelineState"
@"MTLComputePipelineDescriptor"
v120@0:8r^v16Q24Q32Q40^v48Q56Q64{?={?=QQQ}{?=QQQ}}72
v120@0:8r^v16Q24Q32{?={?=QQQ}{?=QQQ}}40^v88Q96Q104Q112
v24@0:8^v16
{?=[2Q]}16@0:8
@"<MTLTextureLayout>"
v40@0:8@"MTLSharedEventListener"16Q24@?<v@?@"<MTLSharedEvent>"Q>32
@"MTLSharedEventHandle"16@0:8
0123456789abcdef
_St12length_error
St11logic_error
St9exception
Uncaught selector, -[%s %s]
failed to create memory entry error 0x%x (%s)
failed to map memory error 0x%x (%s)
failed to mark memory(GRAPHICS) error 0x%x (%s)
TraceContextDumpStart
failed to create store0 (%s)
StartCapture
StopActiveCapture
CaptureSentAllMetadata
CaptureSentUsedData
CaptureSentAllData
queue cannot be NULL
block cannot be NULL
transport cannot be nil
tried to set URL on connected transport
url scheme has to be dysmt: %s
url path cannot be nil or empty: %s
tried to set socket path on connected unix domain socket transport
unix domain socket url must be a file url: %s
[create_transport] GT_HOST_URL environment not set
[create_transport] failed to parse GT_HOST_URL: %s
[create_transport] failed to create transport; GT_HOST_URL: %s
failed to mark GPU buffer memory(GRAPHICS)
failed to mark GPU indirect buffer memory(GRAPHICS)
WaitForDevice

