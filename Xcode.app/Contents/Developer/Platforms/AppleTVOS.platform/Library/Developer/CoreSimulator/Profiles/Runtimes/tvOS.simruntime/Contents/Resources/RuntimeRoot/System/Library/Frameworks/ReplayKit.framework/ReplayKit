@(#)PROGRAM:ReplayKit  PROJECT:ReplayKit-1
/System/Library/Frameworks/ReplayKit.framework
v8@?0
CFBundleDisplayName
Localizable
strings
%@.lproj
+[NSBundle(RPExtensions) bundleWithPID:]
RPBroadcastExtensionKeyBroadcastConfiguration
RPBroadcastExtensionKeyMovieClipURL
RPBroadcastExtensionKeyExtensionUserInfo
RPBroadcastExtensionKeyRequestedFinish
RPBroadcastExtensionKeyExtensionSandboxToken
v24@?0@"<NSSecureCoding>"8@"NSError"16
v32@?0@"NSExtensionItem"8Q16^B24
com.apple.share-services
NSExtensionActivationRule
NSExtensionActivationSupportsReplayStreaming
v24@?0@"NSArray"8@"NSError"16
/private/var/mobile/Library/ReplayKit/
error: %@
MM-dd-yyyy HH:mm:ss
%@/ScreenRecording_%@.mp4
%@/ClipRecording_%@.mp4
%@/%@_%@.mp4
%@/%@_trimmed.mp4
v16@?0@"NSError"8
error = %@
%@/%@
self BEGINSWITH[cd] %@
com.apple.ReplayKit.RPRecordingErrorDomain
RECORDING_ERROR_UNKNOWN
RECORDING_ERROR_USER_DECLINED
RECORDING_ERROR_DISABLED
RECORDING_ERROR_FAILED_TO_START
RECORDING_ERROR_FAILED
RECORDING_ERROR_INSUFFICIENT_STORAGE
RECORDING_ERROR_INTERRUPTED
RECORDING_ERROR_CONTENT_RESIZE
RECORDING_ERROR_INVALID_BROADCAST_SESSION
RECORDING_ERROR_SYSTEM_DORMANCY
RECORDING_ERROR_ENTITLEMENTS
RECORDING_ERROR_ACTIVE_PHONE_CALL
RECORDING_ERROR_FAILED_TO_SAVE
RECORDING_ERROR_CARPLAY
RECORDING_ERROR_CONNECTION_INVALID
RECORDING_ERROR_CONNECTION_INTERRUPTED
RECORDING_ERROR_NO_CONTEXTID_MATCH
RECORDING_ERROR_MEDIASERVICES_FAILED
RECORDING_ERROR_MIXING_FAILURE
RECORDING_ERROR_BROADCAST_SETUP_FAILED
RECORDING_ERROR_FAILED_TO_OBTAIN_URL
RECORDING_ERROR_INCORRECT_TIME_STAMPS
RECORDING_ERROR_FAILED_PROCESS_FIRST_SAMPLE
RECORDING_ERROR_ASSET_WRITER_FAILED_TO_SAVE
RECORDING_ERROR_NO_ASSET_WRITER
RECORDING_ERROR_ASSET_WRITER_IN_WRONG_STATE
RECORDING_ERROR_ASSET_WRITER_EXPORT_FAILED
RECORDING_ERROR_FAILED_TO_REOMOVE_FILE
RECORDING_ERROR_ASSET_WRITER_EXPORT_CANCELED
RECORDING_ERROR_STOPING_NON_RECORDING
RECORDING_ERROR_STARTING_IN_RECORDING_STATE
RECORDING_ERROR_FAILED_TO_SAVE_TO_PHOTOS
RECORDING_ERROR_INVALID_SESSION
RECORDING_ERROR_FAILURE_IN_CAPTURE_STACK
RECORDING_ERROR_INVALID_PARAMETER
RECORDING_ERROR_FILE_PERMISSIONS
RECORDING_ERROR_SUCCESSFUL
RECORDING_ERROR_CLIP_IN_PROGRESS
RPStoreInfoBundleIDKey
RPStoreInfoAppNameKey
RPStoreInfoAuthorKey
RPStoreInfoItemURLKey
-[RPScreenRecorder init]
-[RPScreenRecorder setDelegate:]
-[RPScreenRecorder setSecondDelegate:]
-[RPScreenRecorder setMicrophoneEnabled:]
+[RPScreenRecorder sharedRecorder]
-[RPScreenRecorder isAvailable]
-[RPScreenRecorder startRecordingWithMicrophoneEnabled:handler:]
-[RPScreenRecorder stopRecordingWithVideoURLHandler:]
-[RPScreenRecorder startRecordingWithHandler:]
-[RPScreenRecorder startRecordingWithHandler:]_block_invoke_2
-[RPScreenRecorder startRecordingWithHandler:]_block_invoke
v24@?0@"NSError"8B16B20
-[RPScreenRecorder stopRecordingWithHandler:]
-[RPScreenRecorder stopRecordingWithHandler:]_block_invoke
v16@?0@"RPPreviewViewController"8
v24@?0@"NSURL"8@"NSError"16
-[RPScreenRecorder stopRecordingWithOutputURL:completionHandler:]
-[RPScreenRecorder discardRecordingWithHandler:]
-[RPScreenRecorder pauseInAppRecording]
-[RPScreenRecorder resumeInAppRecording]
-[RPScreenRecorder resumeInAppRecording]_block_invoke
-[RPScreenRecorder startCaptureWithHandler:completionHandler:]
-[RPScreenRecorder startCaptureWithHandler:completionHandler:]_block_invoke_2
-[RPScreenRecorder startCaptureWithHandler:completionHandler:]_block_invoke
-[RPScreenRecorder stopCaptureWithHandler:]
-[RPScreenRecorder pauseInAppCapture]
-[RPScreenRecorder resumeInAppCapture]
-[RPScreenRecorder resumeInAppCapture]_block_invoke
-[RPScreenRecorder startInAppBroadcastWithHandler:]
-[RPScreenRecorder startInAppBroadcastWithHandler:]_block_invoke_2
-[RPScreenRecorder startInAppBroadcastWithHandler:]_block_invoke
-[RPScreenRecorder stopInAppBroadcastWithHandler:]
-[RPScreenRecorder stopInAppBroadcastWithHandler:]_block_invoke
-[RPScreenRecorder pauseInAppBroadcast]
-[RPScreenRecorder resumeInAppBroadcast]
-[RPScreenRecorder resumeInAppBroadcast]_block_invoke
-[RPScreenRecorder clientDidUpdateBroadcastServiceInfo:]
-[RPScreenRecorder startSystemRecordingWithMicrophoneEnabled:handler:]
FBRootWindow
-[RPScreenRecorder startSystemRecordingWithMicrophoneEnabled:handler:]_block_invoke
-[RPScreenRecorder stopSystemRecording:]
-[RPScreenRecorder stopSystemRecordingWithURLHandler:]
-[RPScreenRecorder startClipBufferingWithCompletionHandler:]
-[RPScreenRecorder startClipBufferingWithCompletionHandler:]_block_invoke_2
-[RPScreenRecorder startClipBufferingWithCompletionHandler:]_block_invoke
-[RPScreenRecorder stopClipBufferingWithCompletionHandler:]
-[RPScreenRecorder stopClipBufferingWithCompletionHandler:]_block_invoke
-[RPScreenRecorder exportClipToURL:duration:completionHandler:]
-[RPScreenRecorder resumeInAppClip]
-[RPScreenRecorder resumeInAppClip]_block_invoke
-[RPScreenRecorder saveVideoToCameraRoll:handler:]
-[RPScreenRecorder saveClipToCameraRoll:handler:]
-[RPScreenRecorder saveVideo:handler:]
-[RPScreenRecorder isScreenRecordingAvailable]_block_invoke
-[RPScreenRecorder updateStateWithActive:error:]
-[RPScreenRecorder handleUnavailableState]
-[RPScreenRecorder applicationWindow]
-[RPScreenRecorder currentWindowSize]
com.replaykit.capture.AudioSampleQueue
com.replaykit.capture.VideoSampleQueue
com.replaykit.capture.ProcessQueue
-[RPScreenRecorder recordingLockInterrupted:]
-[RPScreenRecorder shouldResumeSessionType:]
RPInAppRecording
RPInAppCapture
RPInAppBroadcast
RPInAppClip
-[RPScreenRecorder updateScreenRecordingStateWithCurrentState:]
-[RPScreenRecorder recordingDidStopWithError:movieURL:]_block_invoke
-[RPScreenRecorder updateRecordingAvailability:]
com.replaykit.broadcast.AudioSampleQueue
com.replaykit.broadcast.VideoSampleQueue
RPBroadcastProcessExtensionPayloadKeySampleType
RPBroadcastProcessExtensionPayloadKeyActionType
RPBroadcastProcessExtensionPayloadKeyFrontmostAppBundleID
v12@?0B8
+[RPAudioMixUtility mixAudioForMovie:finalMovieURL:withCompletionHandler:]
+[RPAudioMixUtility mixAudioForMovie:finalMovieURL:withCompletionHandler:]_block_invoke
%@/RPReplay_Final
.mp4
%@%@%@
RPVideoEditorExtensionMovieURLKey
RPVideoEditorExtensionAppNameKey
RPVideoEditorExtensionBundleIdentifierKey
RPVideoEditorExtensionFileAttachmentKey
RPVideoEditorExtensionOverrideShareMessageKey
RPVideoEditorExtensionOverrideTintColorKey
NSExtensionPointIdentifier %@ _extensionBundle %@
NSExtension
RPBroadcastProcessMode
RPBroadcastProcessModeSampleBuffer
-[RPDaemonProxy issueSandboxExtensionForMainBundleRead]
-[RPDaemonProxy issueSandboxExtensionForClientFileWrite:]
-[RPDaemonProxy consumeSandboxExtension:processNewConnection:]
-[RPDaemonProxy consumeSandboxExtension:processNewConnection:]_block_invoke
-[RPDaemonProxy captureHandlerWithSample:timingData:]
-[RPDaemonProxy captureHandlerWithAudioSample:bufferType:]
-[RPDaemonProxy connection:handleInvocation:isReply:]
RPVideoOverlayGlyphMask
RPVideoOverlayBackgroundMask
CFBundleIcons
CFBundlePrimaryIcon
CFBundleIconFiles
RPBroadcastExtensionKeyExtensionHostInfoAppName
RPBroadcastExtensionKeyExtensionHostInfoBundleID
RPBroadcastExtensionKeyExtensionHostInfoAppIcon
RPBroadcastExtensionKeyExtensionHostInfoBroadcastActivitiesNotInstalledAlertTitle
RPBroadcastExtensionKeyExtensionHostInfoBroadcastActivitiesNotInstalledAlertMessage
RPBroadcastExtensionKeyExtensionHostInfoPreferredExtension
com.apple.ReplayKit.RPBroadcastActivityViewControllerExtension
RPBroadcastExtensionKeyExtensionHostInfo
v16@?0@"_UIRemoteViewController"8
Error instantiating remote view controller for extension: %i
v32@?0@"<NSCopying>"8@"UIViewController"16@"NSError"24
clipDuration
videoCompressionProperties
MMMM d hh:mm a
RPBroadcastExtensionKeyExtensionServiceInfo
v24@?0@"NSDictionary"8@"NSError"16
com.apple.ReplayKit.RPVideoEditorExtension
v16@?0@"NSXPCListenerEndpoint"8
RPSampleBufferVideoOrientation
kRPBroadcastExtensionKeyExtensionServiceURL
RPBroadcastExtensionKeyExtensionBundleIdentifier
loadBroadcastingApplicationInfoWithCompletion: Error loading item Provider: %@
loadBroadcastingApplicationInfoWithCompletion: Error unarchiving hostInfo %@
 [DEBUG] %{public}s:%d  executableURL:%@
 [DEBUG] %{public}s:%d  bundleURL:%@
broadcast configuration = %p
beginRequestWithExtensionContext
Error loading input item for type
received movie clip URL
received user info
received request finished
received sandbox token
received all data, consumed sandbox token ret=%llu
calling subclass method
_srSetupTempDirectory
error creating temp directory
_srDeleteFilesOlderThanTimeToLiveInSeconds: %i
error in _rkRemoveFile_srDeleteFilesOlderThanTimeToLiveInSeconds, error code: %i
deleting old file
_rkRemoveFile error: %i
_rkMoveFileFromURL error: %i
_rkDeleteFilesWithPrefix error: %i
 [INFO] %{public}s:%d 
 [INFO] %{public}s:%d delegate %p
 [INFO] %{public}s:%d notify client available %d
 [INFO] %{public}s:%d secondDelegate %p
 [INFO] %{public}s:%d :%d from current mic state:%d
 [DEBUG] %{public}s:%d Accessing the sharedRecorder
 [INFO] %{public}s:%d isAvailable %d
 [ERROR] %{public}s:%d not supported on macOS or tvOS
 [ERROR] %{public}s:%d failed to start due to error: %@
 [INFO] %{public}s:%d started
 [ERROR] %{public}s:%d undefined completion handler
 [ERROR] %{public}s:%d failed to start because we're already active with another session
 [ERROR] %{public}s:%d stop recording error: %i
 [INFO] %{public}s:%d stop recording successful
 [ERROR] %{public}s:%d failed to stop in app recording because we're not recording
 [INFO] %{public}s:%d recording %d paused %d
 [INFO] %{public}s:%d can not resume with error %@
 [ERROR] %{public}s:%d failed to stop in app capture because we're not recording
 [ERROR] %{public}s:%d failed to stop in app broadacast due to error: %@
 [ERROR] %{public}s:%d failed to stop in app broadcast because we're not recording
 [INFO] %{public}s:%d activeBroadcastController: %@
 [INFO] %{public}s:%d activeBroadcastController delegate: %@
 [INFO] %{public}s:%d delegate responds to protocol
 [ERROR] %{public}s:%d delegate DOES NOT responds to protocol
 [ERROR] %{public}s:%d delegate does not exist
 [ERROR] %{public}s:%d No active broadcast controller
 [INFO] %{public}s:%d attempting to start system recording with mic:%d cam:%d
 [ERROR] %{public}s:%d failed to stop system recording because we're not recording
 [INFO] %{public}s:%d stopped
 [ERROR] %{public}s:%d failed to stop in app clip recording because we're not recording
 [ERROR] %{public}s:%d failed to export app clip because clip buferring has not started
 [INFO] %{public}s:%d recording available %i with display available %i, carplay active %d, allowed %i, and supported on device %i
 [INFO] %{public}s:%d update state with isActive %d error %d
 [ERROR] %{public}s:%d failed to start because screen is not allowed
 [ERROR] %{public}s:%d failed to start because screen is not available
 [INFO] %{public}s:%d appWindow: app doesn't have the window property set on UIApplicationDelegate. Using first window.
 [INFO] %{public}s:%d scaled window size width %.1f x height:%.1f
 [INFO] %{public}s:%d recordingLockInterrupted error[%d]
 [INFO] %{public}s:%d system recording %d isRecording %d paused %d
 [INFO] %{public}s:%d updateScreenRecordingStateWithCurrentState
 [INFO] %{public}s:%d movieURL: %@
 [INFO] %{public}s:%d previewViewController %@
error calling extension - %i
completed extension request
RPVideoEditorHostViewController:extensionsDidFinish
RPVideoEditorExtensionHostContext:extensionsDidFinish
 [INFO] %{public}s:%d movieURL  %@
 [INFO] %{public}s:%d finalMovieURL %@
 [INFO] %{public}s:%d starting export session
 [INFO] %{public}s:%d AVAssetExportSessionFailed
 [INFO] %{public}s:%d AVAssetExportSessionStatusCancelled
 [INFO] %{public}s:%d AVAssetExportSession returned with no errors
 [ERROR] %{public}s:%d video URL is nil
 [INFO] %{public}s:%d Issued sandbox extension for client folder path %s
 [ERROR] %{public}s:%d Error issuing sandbox extension for client folder path %s
 [ERROR] %{public}s:%d proxy error: %d
RPDaemonProxy: updateScreenRecordingStateWithCurrentState
RPDaemonProxy: recordingDidStopWithError:movieURL:
RPDaemonProxy: shouldResumeSessionType
RPDaemonProxy: recordingDidPause
RPDaemonProxy: updateBroadcastServiceInfo:
RPDaemonProxy: updateBroadcastURL:
 [DEBUG] %{public}s:%d 
RPDaemonProxy: recordingLockInterrupted:
RPDaemonProxy: recordingTimerDidUpdate:
 [DEBUG] %{public}s:%d received reply for invocation
 [DEBUG] %{public}s:%d did not receive reply for invocation
RPDaemonProtocol: hasUserConsentForMicrophone: proxy error: %d
Connected to extension.
RPVideoPreviewViewController:loadPreviewViewControllerWithCompletion
error getting extension: %i
RPPreviewViewController:viewControllerForExtension
Error instantiating remote view controller for extension: %i
RPPreviewViewController:extensionDidFinish
Requested vendor protocol
Set endpoint
RPExtensions
RPBroadcastMP4ClipHandler
ReplayKitErrors
RPStoreInfo
RPStoreManager
RPScreenRecorder
RPPreviewViewControllerDelegate
NSObject
UINavigationControllerDelegate
UIPopoverPresentationControllerDelegate
UIAdaptivePresentationControllerDelegate
RPBroadcastActivityHostViewController
RPBroadcastActivityCommunicationHostProtocol
RPBroadcastActivityCommunicationProtocol
RPBroadcastActivityExtensionHostContext
ReplayKitString
RPBroadcastSampleHandler
RPExtensionContextDelegate
RPVideoEditorHostViewController
RPVideoEditorExtensionHostProtocol
RPVideoEditorExtensionProtocol
RPVideoEditorExtensionHostContext
RPAudioMixUtility
RPDaemonProxy
NSXPCConnectionDelegate
RPDaemonProtocol
RPClientProtocol
RPVideoOverlayButton
RPHighFidelityVideoOverlayButton
RPFlatVideoOverlayButton
RPBroadcastActivityViewController
RPBroadcastConfiguration
NSCoding
NSSecureCoding
RPModalPresentationWindow
RPBroadcastExtensionProtocol
RPBroadcastDaemonProtocol
RPBroadcastHandler
NSXPCListenerDelegate
NSExtensionRequestHandling
RPBroadcastController
RPExtensionVendorProtocol
RPExtensionHostContext
RPPreviewViewController
RPVideoEditorViewControllerDelegate
RPExtensionContext
RPBroadcastHostViewController
RPBroadcastExtensionInitProtocol
RPBroadcastExtensionHostProtocol
RPBroadcastExtensionHostContext
RPBroadcastExtension
fileURLWithPath:
bundleWithURL:
localizedInfoDictionary
objectForKey:
infoDictionary
bundleWithIdentifier:
_rpLocalizedAppName
localizedBundle
localizedStringForKey:value:table:
fallbackBundle
_rpFrameworkBundle
preferredLanguages
firstObject
componentsSeparatedByString:
pathForResource:ofType:inDirectory:forLocalization:
stringByDeletingLastPathComponent
bundleWithPath:
localizations
preferredLocalizationsFromArray:forPreferences:
resourcePath
stringWithFormat:
stringByAppendingPathComponent:
mutableCopy
removeLastObject
componentsJoinedByString:
initWithBytes:length:encoding:
executablePathWithPID:
_rpLocalizedAppNameFromBundleID:
_rpLocalizedStringFromFrameworkBundleWithKey:
baseIdentifier:
bundleWithPID:
array
archivedDataWithRootObject:
_rpLocalizationNotNeeded:
initWithString:
setAttributedTitle:
initWithItem:typeIdentifier:
arrayWithObjects:count:
setAttachments:
addObject:
_completeRequestWithReturnItems:
extensionContext
cancelRequestWithError:
setExtensionContext:
inputItems
count
attachments
objectAtIndexedSubscript:
hasItemConformingToTypeIdentifier:
attributedTitle
string
isEqualToString:
boolValue
UTF8String
URLWithString:
processMP4ClipWithURL:setupInfo:finished:
loadItemForTypeIdentifier:options:completionHandler:
enumerateObjectsUsingBlock:
finishedProcessingMP4ClipWithUpdatedBroadcastConfiguration:error:
beginRequestWithExtensionContext:
dictionaryWithObjects:forKeys:count:
countByEnumeratingWithState:objects:count:
attributes
objectForKeyedSubscript:
initWithApplicationExtension:
extensionsWithMatchingAttributes:completion:
streamActivitiesWithCompletion:
stringByExpandingTildeInPath
_srTempPath
fileExistsAtPath:isDirectory:
createDirectoryAtPath:withIntermediateDirectories:attributes:error:
date
setDateFormat:
stringFromDate:
stringByReplacingOccurrencesOfString:withString:
dateSuffix
defaultManager
attributesOfItemAtPath:error:
fileSize
_srDeleteFilesOlderThanTimeToLiveInSeconds:
code
contentsOfDirectoryAtPath:error:
fileModificationDate
timeIntervalSinceDate:
removeItemAtPath:error:
path
fileExistsAtPath:
removeItemAtURL:error:
moveItemAtURL:toURL:error:
predicateWithFormat:
filteredArrayUsingPredicate:
_srDeviceFreeDiskSpace
attributesOfFileSystemForPath:error:
unsignedLongValue
_srSizeOfTempDir:
_srSetupTempDirectory
outputPath:bundleID:
trimmedOutputPath:
_srDeleteAllTempFiles
_srRemoveFile:completion:
_srMoveFileFromURL:toURL:completion:
_srDeleteFilesWithPrefix:
_srGetCreationDateForFile:
_srDeviceHasSufficientFreeSpaceForRecording
_srDeviceHasSufficientSpaceForCurrentRecording
dictionary
setValue:forKey:
errorWithDomain:code:userInfo:
_rpUserErrorForCode:userInfo:
setObject:forKeyedSubscript:
bundleID
setBundleID:
appName
setAppName:
author
setAuthor:
itemURL
setItemURL:
appArtworkURL
setAppArtworkURL:
.cxx_destruct
_bundleID
_appName
_author
_itemURL
_appArtworkURL
T@"NSString",&,N,V_bundleID
T@"NSString",&,N,V_appName
T@"NSString",&,N,V_author
T@"NSURL",&,N,V_itemURL
T@"NSURL",&,N,V_appArtworkURL
sharedManager
loadItemDetailsForBundleIdentifier:completionHandler:
init
updateStateWithActive:error:
isScreenRecordingAvailable
screenRecorderDidChangeAvailability:
isMicrophoneEnabled
notifyDelegateOfUpdatedState
defaultCenter
removeObserver:
dealloc
startRecordingWithHandler:
handleUnavailableState
currentWindowLayerContextID
currentWindowSize
registerAppForStateChangeSetRotationLock:
daemonProxy
numberWithInt:
setHasUserConsentForCamera:
setHasUserConsentForMicrophone:
instantiatePipView
startInAppRecordingWithContextID:windowSize:microphoneEnabled:cameraEnabled:withHandler:
setWindowRotationLocked:
currentDevice
userInterfaceIdiom
setModalPresentationStyle:
loadPreviewViewControllerWithMovieURL:attachmentURL:overrideShareMessage:overrideTintColor:completion:
stopInAppRecordingWithHandler:
setRecording:
updateProcessIDForAudioCapture:
stopInAppRecordingWithUrl:handler:
discardInAppRecordingWithHandler:
pauseInAppRecording
setPaused:
recordingDidStopWithError:movieURL:
resumeInAppRecordingWithWindowLayerContextID:completionHandler:
copy
setCaptureHandler:
startInAppCaptureWithContextID:windowSize:microphoneEnabled:cameraEnabled:withHandler:
stopInAppCaptureWithHandler:
pauseInAppCapture
resumeInAppCaptureWithWindowLayerContextID:completionHandler:
startInAppBroadcastWithContextID:windowSize:microphoneEnabled:cameraEnabled:listenerEndpoint:withHandler:
isRecording
stopInAppBroadcastWithHandler:
pauseInAppBroadcast
resumeInAppBroadcastWithWindowLayerContextID:completionHandler:
setBroadcastURL:
setServiceInfo:
delegate
broadcastController:didUpdateServiceInfo:
setSystemRecording:
sharedApplication
windows
setWindowToRecord:
startSystemRecordingWithContextID:windowSize:microphoneEnabled:cameraEnabled:withHandler:
stopSystemRecordingWithHandler:
stopSystemRecordingWithURLHandler:
startClipBufferingWithContextID:windowSize:microphoneEnabled:cameraEnabled:withCompletionHandler:
stopClipBufferingWithCompletionHandler:
exportClipToURL:duration:completionHandler:
resumeInAppClipWithWindowLayerContextID:completionHandler:
saveVideoToCameraRoll:handler:
saveClipToCameraRoll:handler:
saveVideo:handler:
processQueue
screenRecordingAllowed
screenRecordingSupportedOnDevice
removePipView
window
mainScreen
bounds
applicationWindow
frame
scale
windowToRecord
layer
context
contextId
privateDelegate
recordingTimerDidUpdate:
resumeInAppRecording
resumeInAppCapture
resumeInAppBroadcast
resumeInAppClip
broadcastController:didFinishWithError:
shouldNotifyDidStop
setPreviewControllerDelegate:
didStopRecordingWithError:previewViewController:
loadPreviewViewControllerWithMovieURL:completion:
screenRecorder:didStopRecordingWithError:previewViewController:
screenRecorder:didStopRecordingWithPreviewViewController:error:
secondDelegate
screenRecorderDidUpdateState:
updateProcessIDForAudioCaptureWithPID:
sharedConnection
effectiveBoolValueForSetting:
sharedRecorder
isEqual:
class
self
performSelector:
performSelector:withObject:
performSelector:withObject:withObject:
isProxy
isKindOfClass:
isMemberOfClass:
conformsToProtocol:
respondsToSelector:
retain
release
autorelease
retainCount
zone
hash
superclass
description
debugDescription
TQ,R
T#,R
T@"NSString",R,C
previewControllerDidFinish:
previewController:didFinishWithActivityTypes:
navigationController:willShowViewController:animated:
navigationController:didShowViewController:animated:
navigationControllerSupportedInterfaceOrientations:
navigationControllerPreferredInterfaceOrientationForPresentation:
navigationController:interactionControllerForAnimationController:
navigationController:animationControllerForOperation:fromViewController:toViewController:
adaptivePresentationStyleForPresentationController:
adaptivePresentationStyleForPresentationController:traitCollection:
presentationController:prepareAdaptivePresentationController:
presentationController:viewControllerForAdaptivePresentationStyle:
presentationController:willPresentWithAdaptiveStyle:transitionCoordinator:
presentationControllerShouldDismiss:
presentationControllerWillDismiss:
presentationControllerDidDismiss:
presentationControllerDidAttemptToDismiss:
prepareForPopoverPresentation:
popoverPresentationControllerShouldDismissPopover:
popoverPresentationControllerDidDismissPopover:
popoverPresentationController:willRepositionPopoverToRect:inView:
setDelegate:
setSecondDelegate:
setMicrophoneEnabled:
isAvailable
startRecordingWithMicrophoneEnabled:handler:
stopRecordingWithVideoURLHandler:
stopRecordingWithHandler:
stopRecordingWithOutputURL:completionHandler:
discardRecordingWithHandler:
startCaptureWithHandler:completionHandler:
stopCaptureWithHandler:
startInAppBroadcastWithHandler:
clientDidUpdateBroadcastServiceInfo:
startSystemRecordingWithMicrophoneEnabled:handler:
stopSystemRecording:
startClipBufferingWithCompletionHandler:
audioQueue
videoQueue
recordingLockInterrupted:
recordingDidPause
shouldResumeSessionType:
updateScreenRecordingStateWithCurrentState:
updateRecordingAvailability:
isCameraEnabled
setCameraEnabled:
cameraPosition
setCameraPosition:
cameraPreviewView
setCameraPreviewView:
previousAudioSessionOptions
setPreviousAudioSessionOptions:
previousAudioCategory
setPreviousAudioCategory:
setAvailable:
saveVideoToCameraRollCompletionBlock
setSaveVideoToCameraRollCompletionBlock:
hasUserConsentForCamera
hasUserConsentForMicrophone
captureHandler
activeBroadcastController
setActiveBroadcastController:
isPaused
processIDForAudioCapture
systemRecording
broadcastURL
setPrivateDelegate:
_recording
_microphoneEnabled
_cameraEnabled
_available
_hasUserConsentForCamera
_hasUserConsentForMicrophone
_paused
_systemRecording
_processIDForAudioCapture
_delegate
_cameraPosition
_cameraPreviewView
_previousAudioSessionOptions
_previousAudioCategory
_windowToRecord
_saveVideoToCameraRollCompletionBlock
_captureHandler
_activeBroadcastController
_broadcastURL
_privateDelegate
_secondDelegate
TQ,N,V_previousAudioSessionOptions
T@"NSString",&,N,V_previousAudioCategory
recording
TB,N,GisRecording,V_recording
available
TB,N,GisAvailable,V_available
T@"UIWindow",&,N,V_windowToRecord
T@"UIView",&,N,V_cameraPreviewView
T@?,C,N,V_saveVideoToCameraRollCompletionBlock
TB,N,V_hasUserConsentForCamera
TB,N,V_hasUserConsentForMicrophone
T@?,C,N,V_captureHandler
T@"RPBroadcastController",&,N,V_activeBroadcastController
paused
TB,N,GisPaused,V_paused
Ti,N,SupdateProcessIDForAudioCapture:,V_processIDForAudioCapture
TB,N,V_systemRecording
T@"NSURL",&,N,V_broadcastURL
T@"<RPScreenRecorderPrivateDelegate>",&,N,V_privateDelegate
T@"<RPScreenRecorderDelegate>",&,N,V_secondDelegate
T@"<RPScreenRecorderDelegate>",W,N,V_delegate
microphoneEnabled
TB,N,GisMicrophoneEnabled,V_microphoneEnabled
cameraEnabled
TB,N,GisCameraEnabled,V_cameraEnabled
Tq,N,V_cameraPosition
viewDidLoad
clearColor
view
setBackgroundColor:
extensionDidFinishWithLaunchURL:broadcastURL:extensionBundleID:cancelled:
popoverPresentationController
sourceView
sourceRect
superview
convertRect:toView:
arrowDirection
popoverControllerSourceRect
modalPresentationStyle
popoverArrowDirection
presentationInfoWithCompletion:
broadcastActivityViewController
setBroadcastActivityViewController:
_broadcastActivityViewController
T@"RPBroadcastActivityViewController",W,N,V_broadcastActivityViewController
interfaceWithProtocol:
_auxiliaryConnection
remoteObjectProxyWithErrorHandler:
_extensionAuxiliaryVendorProtocol
_extensionAuxiliaryHostProtocol
extensionObjectProxy
hostViewController
setHostViewController:
_hostViewController
T@"RPBroadcastActivityHostViewController",W,N,V_hostViewController
updateServiceInfo:
updateBroadcastURL:
group
finishBroadcastWithError:
_setupListenerWithEndpoint:
integerValue
_processPayloadWithVideoSample:
_processPayloadWithAudioSample:type:
broadcastStartedWithSetupInfo:
broadcastPaused
broadcastResumed
broadcastFinished
completeRequestReturningItems:completionHandler:
_processPayload:
extensionContext:setEndpoint:
processSampleBuffer:withType:
processPayload:completion:
setDaemonProxy:
_daemonProxy
T@"<RPBroadcastDaemonProtocol>",&,N,V_daemonProxy
previewViewController
extensionDidFinishWithActivityTypes:
hostContext
setMode:
setPreviewViewController:
setHostContext:
_previewViewController
_hostContext
T@"RPPreviewViewController",W,N,V_previewViewController
T@"RPVideoEditorExtensionHostContext",&,N,V_hostContext
doAction:
mode
Tq,N
T@"RPVideoEditorHostViewController",W,N,V_hostViewController
tempFileURL
mixAudioForMovie:finalMovieURL:withCompletionHandler:
assetWithURL:
initWithAsset:presetName:
setOutputURL:
setOutputFileType:
tracksWithMediaType:
audioMixInputParameters
trackID
setTrackID:
audioMix
setInputParameters:
setAudioMix:
status
exportAsynchronouslyWithCompletionHandler:
timeIntervalSince1970
mixAudioForMovie:withCompletionHandler:
initWithString:attributes:
itemWithTitle:attachmentItem:
extensionPointIdentifier
_extensionBundle
identifier
hasPrefix:
extensionsWithMatchingPointName:baseIdentifier:activationRule:unwantedActivationRule:completion:
processMode
extensionsWithMatchingPointName:baseIdentifier:completion:
extensionsWithMatchingPointName:baseIdentifier:unwantedActivationRule:completion:
extensionsWithMatchingPointName:activationRule:completion:
extensionsWithMatchingPointName:unwantedActivationRule:completion:
extensionsWithMatchingPointName:completion:
fileSystemRepresentation
stringWithCString:encoding:
consumeSandboxExtension:processNewConnection:
broadcastController:didUpdateBroadcastURL:
captureHandlerWithSample:timingData:
captureHandlerWithAudioSample:bufferType:
retainArguments
invoke
null
setTarget:
replacementObjectForXPCConnection:encoder:object:
connection:handleInvocation:isReply:
setupBroadcastWithHostBundleID:broadcastExtensionBundleID:broadcastConfigurationData:userInfo:handler:
getSystemBroadcastExtensionInfo:
macApplicationDidResignActive
macApplicationDidBecomeActiveWithContextID:completionHandler:
stopCurrentActiveSessionWithHandler:
stopAllActiveClients
stopInAppRecordingWithUrl:extensionToken:handler:
exportClipToURL:duration:extensionToken:completionHandler:
saveVideo:extensionToken:handler:
updateBroadcastServiceInfo:
issueSandboxExtensionForMainBundleRead
issueSandboxExtensionForClientFileWrite:
reportCameraUsage:
connection
setConnection:
_connection
T@"NSXPCConnection",&,N,V_connection
_graphicsQuality
initWithStyle:
_srVideoOverlayButtonWithStyle:
bundleForClass:
imageNamed:inBundle:
initWithFrame:
setImage:forState:
sizeToFit
_playButtonTapped:
addTarget:action:forControlEvents:
_playButtonActivate:
_playButtonDeactivate:
setDeliversTouchesForGesturesToSuperview:
addSubview:
setAutoresizingMask:
initWithImage:
initWithPrivateStyle:
insertSubview:belowSubview:
_setBackdropMaskViewFlags:
setAlpha:
updateMaskViewsForView:
style
setTarget:action:
target
action
setAction:
_style
_button
_backdropView
_target
_action
T@,W,N,V_target
T:,N,V_action
_normalButtonImage
_highlightedButtonImage
_handleTap:
_createOverlayImageWithBackgroundWhite:backgroundAlpha:glyphAlpha:
size
drawAtPoint:blendMode:alpha:
loadBroadcastActivityViewControllerWithPreferredExtension:handler:broadcastActivitiesNotInstalledAlertTitle:broadcastActivitiesNotInstalledAlertMessage:atPoint:fromWindow:
setDidFinishHandler:
mainBundle
bundleIdentifier
imageNamed:
extensionWithIdentifier:error:
setFrame:
addChildViewController:
didMoveToParentViewController:
viewControllerForExtension:inputItems:completionHandler:
_extensionContextForUUID:
instantiateViewControllerWithInputItems:connectionHandler:
openURL:options:completionHandler:
broadcastActivityViewController:didFinishWithBroadcastController:error:
initWithExtensionBundleID:broadcastURL:
loadBroadcastActivityViewControllerWithPreferredExtension:handler:
loadBroadcastActivityViewControllerWithHandler:
popoverPresentationControllerProxy
setPopoverPresentationControllerProxy:
didFinishHandler
_popoverPresentationControllerProxy
_didFinishHandler
T@"UIPopoverPresentationController",&,N,V_popoverPresentationControllerProxy
T@"RPBroadcastActivityHostViewController",&,N,V_hostViewController
T@?,C,N,V_didFinishHandler
T@"<RPBroadcastActivityViewControllerDelegate>",W,N,V_delegate
decodeObjectOfClass:forKey:
doubleValue
numberWithDouble:
encodeObject:forKey:
allValues
supportsSecureCoding
encodeWithCoder:
initWithCoder:
TB,R
clipDuration
setClipDuration:
videoCompressionProperties
setVideoCompressionProperties:
_clipDuration
_videoCompressionProperties
Td,N,V_clipDuration
T@"NSDictionary",&,N,V_videoCompressionProperties
setOpaque:
setScreen:
setWindowLevel:
setHidden:
mainWindow
beginDisablingInterfaceAutorotation
endDisablingInterfaceAutorotation
_presentationViewController
presentViewController:animated:completion:
presentedViewController
rootViewController
setSizesWindowToScene:
setRootViewController:
isInternalWindow
presentAlertController:animated:completion:
setLocalizedDateFormatFromTemplate:
timeZoneWithName:
setTimeZone:
_srGetStringFromDate:
arrayByAddingObject:
anonymousListener
setListener:
resume
endpoint
setListenerEndpoint:
setExportedObject:
setExportedInterface:
ping
setRemoteObjectInterface:
listener:shouldAcceptNewConnection:
serviceInfo
listenerEndpoint
listener
_serviceInfo
_extensionContext
_listenerEndpoint
_listener
T@"NSDictionary",&,N,V_serviceInfo
T@"NSExtensionContext",&,N,V_extensionContext
T@"NSXPCListenerEndpoint",&,N,V_listenerEndpoint
T@"NSXPCListener",&,N,V_listener
initWithCurrentSession
isBroadcasting
startBroadcastWithHandler:
pauseBroadcast
resumeBroadcast
finishBroadcastWithHandler:
broadcastExtensionBundleID
broadcastExtensionBundleIdentifier
setBroadcastExtensionBundleIdentifier:
_broadcastExtensionBundleID
_broadcastExtensionBundleIdentifier
T@"NSURL",&,N
T@"NSString",&,N,V_broadcastExtensionBundleIdentifier
broadcasting
TB,R,N,GisBroadcasting
TB,R,N,GisPaused
T@"<RPBroadcastControllerDelegate>",W,N,V_delegate
T@"NSString",R,N,V_broadcastExtensionBundleID
setEndpoint:completionHandler:
didConnectToVendor:
viewWillAppear:
isStatusBarHidden
setWasStatusBarHidden:
setStatusBarHidden:
viewDidAppear:
wasStatusBarHidden
viewWillDisappear:
viewDidDisappear:
load
setMovieURL:
setWithArray:
previewControllerDelegate
videoEditor:didFinishWithActivityTypes:
movieURL
_wasStatusBarHidden
_previewControllerDelegate
_mode
_movieURL
TB,N,V_wasStatusBarHidden
T@"NSURL",&,N,V_movieURL
T@"RPVideoEditorHostViewController",&,N,V_hostViewController
T@"<RPPreviewViewControllerDelegate>",W,N,V_previewControllerDelegate
Tq,N,V_mode
T@"<RPExtensionContextDelegate>",W,N,V_delegate
updateBroadcastHandlerListenerEndpoint:
completeSetupWithBroadcastURL:
updateBroadcastHandlerListenerEndpoint
T@"RPBroadcastExtensionHostContext",&,N,V_hostContext
setWithObject:
setClasses:forSelector:argumentIndex:ofReply:
T@"RPBroadcastHostViewController",W,N,V_hostViewController
completeRequestWithBroadcastURL:broadcastConfiguration:setupInfo:
unarchivedObjectOfClasses:fromData:error:
imageWithData:
completeRequestWithBroadcastURL:setupInfo:
loadBroadcastingApplicationInfoWithCompletion:
@16@0:8
@24@0:8@16
@20@0:8i16
v36@0:8@16@24B32
v32@0:8@16@24
v24@0:8@16
v24@0:8@?16
v16@0:8
@28@0:8i16@20
q24@0:8^@16
q16@0:8
q24@0:8d16
v32@0:8@16@?24
v40@0:8@16@24@?32
B16@0:8
Q16@0:8
@32@0:8q16@24
@"NSString"
@"NSURL"
B24@0:8@16
#16@0:8
@24@0:8:16
@32@0:8:16@24
@40@0:8:16@24@32
B24@0:8#16
B24@0:8:16
Vv16@0:8
^{_NSZone=}16@0:8
B24@0:8@"Protocol"16
@"NSString"16@0:8
v24@0:8@"RPPreviewViewController"16
v32@0:8@"RPPreviewViewController"16@"NSSet"24
Q24@0:8@16
q24@0:8@16
@32@0:8@16@24
@48@0:8@16q24@32@40
v36@0:8@"UINavigationController"16@"UIViewController"24B32
Q24@0:8@"UINavigationController"16
q24@0:8@"UINavigationController"16
@"<UIViewControllerInteractiveTransitioning>"32@0:8@"UINavigationController"16@"<UIViewControllerAnimatedTransitioning>"24
@"<UIViewControllerAnimatedTransitioning>"48@0:8@"UINavigationController"16q24@"UIViewController"32@"UIViewController"40
q32@0:8@16@24
@32@0:8@16q24
v40@0:8@16q24@32
q24@0:8@"UIPresentationController"16
q32@0:8@"UIPresentationController"16@"UITraitCollection"24
v32@0:8@"UIPresentationController"16@"UIPresentationController"24
@"UIViewController"32@0:8@"UIPresentationController"16q24
v40@0:8@"UIPresentationController"16q24@"<UIViewControllerTransitionCoordinator>"32
B24@0:8@"UIPresentationController"16
v24@0:8@"UIPresentationController"16
v40@0:8@16N^{CGRect={CGPoint=dd}{CGSize=dd}}24N^@32
v24@0:8@"UIPopoverPresentationController"16
B24@0:8@"UIPopoverPresentationController"16
v40@0:8@"UIPopoverPresentationController"16N^{CGRect={CGPoint=dd}{CGSize=dd}}24N^@32
v20@0:8B16
v28@0:8B16@?20
v32@0:8@?16@?24
v40@0:8@16d24@?32
v28@0:8B16@20
{CGSize=dd}16@0:8
I16@0:8
v20@0:8i16
v24@0:8q16
v24@0:8Q16
@?16@0:8
i16@0:8
@"<RPScreenRecorderDelegate>"
@"UIView"
@"UIWindow"
@"RPBroadcastController"
@"<RPScreenRecorderPrivateDelegate>"
Vv44@0:8@16@24@32B40
Vv24@0:8@?16
Vv44@0:8@"NSURL"16@"NSURL"24@"NSString"32B40
Vv24@0:8@?<v@?q{CGRect={CGPoint=dd}{CGSize=dd}}Q>16
{CGRect={CGPoint=dd}{CGSize=dd}}16@0:8
@"RPBroadcastActivityViewController"
@"RPBroadcastActivityHostViewController"
v32@0:8@"RPExtensionContext"16@"NSXPCListenerEndpoint"24
v32@0:8^{opaqueCMSampleBuffer=}16q24
v32@0:8@16q24
@"<RPBroadcastDaemonProtocol>"
Vv24@0:8@16
Vv24@0:8@"NSArray"16
@"RPPreviewViewController"
@"RPVideoEditorExtensionHostContext"
Vv24@0:8@"NSString"16
@"RPVideoEditorHostViewController"
v56@0:8@16@24@32@40@?48
v48@0:8@16@24@32@?40
@40@0:8@16@24@32
@"<NSSecureCoding>"40@0:8@"NSXPCConnection"16@"NSXPCCoder"24@32
v36@0:8@"NSXPCConnection"16@"NSInvocation"24B32
Vv56@0:8@16{CGSize=dd}24B40B44@?48
Vv32@0:8@16@?24
Vv28@0:8I16@?20
Vv64@0:8@16{CGSize=dd}24B40B44@48@?56
Vv56@0:8@16@24@32@40@?48
Vv40@0:8@16d24@?32
Vv20@0:8i16
Vv28@0:8@16B24
Vv40@0:8@16@24@?32
Vv48@0:8@16d24@32@?40
Vv56@0:8@"NSNumber"16{CGSize=dd}24B40B44@?<v@?@"NSError"BB>48
Vv24@0:8@?<v@?@"NSURL"@"NSError">16
Vv32@0:8@"NSURL"16@?<v@?@"NSError">24
Vv28@0:8I16@?<v@?@"NSError"BB>20
Vv24@0:8@?<v@?>16
Vv24@0:8@?<v@?@"NSError">16
Vv64@0:8@"NSNumber"16{CGSize=dd}24B40B44@"NSXPCListenerEndpoint"48@?<v@?@"NSError"BB>56
Vv56@0:8@"NSString"16@"NSString"24@"NSData"32@"NSDictionary"40@?<v@?@"NSError">48
Vv24@0:8@"NSURL"16
Vv56@0:8@"NSNumber"16{CGSize=dd}24B40B44@?<v@?@"NSError">48
Vv40@0:8@"NSURL"16d24@?<v@?@"NSError">32
Vv24@0:8@?<v@?@"NSArray"@"NSError">16
Vv28@0:8@"NSString"16B24
Vv24@0:8@?<v@?B>16
Vv40@0:8@"NSURL"16@"NSString"24@?<v@?@"NSError">32
Vv48@0:8@"NSURL"16d24@32@?<v@?@"NSError">40
Vv32@0:8@16@24
Vv32@0:8@16q24
Vv24@0:8@"NSDictionary"16
Vv32@0:8@"RPIOSurfaceObject"16@"NSData"24
Vv32@0:8@"NSDictionary"16q24
Vv32@0:8@"NSError"16@"NSURL"24
Vv24@0:8@"NSError"16
Vv24@0:8q16
@"NSXPCConnection"
@24@0:8q16
v32@0:8@16:24
:16@0:8
v24@0:8:16
@"UIButton"
@"_UIBackdropView"
@40@0:8d16d24d32
v72@0:8@16@?24@32@40{CGPoint=dd}48@64
v44@0:8@16@24@32B40
@"<RPBroadcastActivityViewControllerDelegate>"
@"UIPopoverPresentationController"
v24@0:8@"NSCoder"16
@24@0:8@"NSCoder"16
d16@0:8
v24@0:8d16
@"NSDictionary"
v36@0:8@16B24@?28
v32@0:8@"NSDictionary"16@?<v@?>24
v24@0:8@"NSDictionary"16
v24@0:8@"NSURL"16
v24@0:8@"NSError"16
B32@0:8@16@24
B32@0:8@"NSXPCListener"16@"NSXPCConnection"24
v24@0:8@"NSExtensionContext"16
@"NSExtensionContext"
@"NSXPCListenerEndpoint"
@"NSXPCListener"
@"<RPBroadcastControllerDelegate>"
v32@0:8@"NSXPCListenerEndpoint"16@?<v@?>24
v32@0:8@"RPVideoEditorViewController"16@"NSArray"24
@"<RPPreviewViewControllerDelegate>"
@"<RPExtensionContextDelegate>"
@"RPBroadcastExtensionHostContext"
Vv24@0:8@?<v@?@"NSXPCListenerEndpoint">16
@"RPBroadcastHostViewController"
v40@0:8@16@24@32
