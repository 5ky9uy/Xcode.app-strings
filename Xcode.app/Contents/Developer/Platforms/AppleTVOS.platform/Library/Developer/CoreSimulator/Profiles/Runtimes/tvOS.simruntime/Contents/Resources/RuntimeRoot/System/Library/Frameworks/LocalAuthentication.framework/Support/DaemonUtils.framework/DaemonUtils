@(#)PROGRAM:DaemonUtils  PROJECT:CoreAuthentication-827.100.23
5EEB160F-45FB-4CE9-B4E3-610359ABF6F8
v8@?0
%@:%@
IODeviceTree:/options
IONVRAM-DELETE-PROPERTY
Error setting NVRAM variable: %d
v32@?0@8@16^B24
default
double press from %llu has expired
Unable to determine request.
com.apple.LocalAuthentication
Request
{?=[8I]}
<Caller PID: %d UID: %d>
Caller
daemon-serial-queue
com.apple.services
com.apple.ctk-tokens
HasSEP
8olRm6C1xqr7AJGpLRnpSw
touch-id
+[DaemonUtils deviceSupports3D]
PushButtonMonitor has consumed existing double press, because %{public}@
PushButtonMonitor has consumed existing ax double press, because %{public}@
PushButtonMonitor will consume this double press after %0.1f seconds as required by %{public}@
PushButtonMonitor recognized a new double press at %llu
PushButtonMonitor has received AX confirmation of the ApplePay operation
PushButtonMonitor is restaring after %.0f seconds
Unable to determine request: %@
Releasing %{public}@
Holding %{public}@
Failed to get auditToken value.
Determined bundle ID %{public}@ for pid %d
Determined name %{public}@ and bundle ID %{public}@ for pid %d
Can't query SEP.
deviceHasSEP returned %d
Can't query Pearl.
deviceHasPearl returned %d
Can't query Touch ID.
deviceHasTouchID returned %d
%s returned %d
deviceSupportsSecureDoubleClick returned %d
LANVRAM
Merge
PushButtonMonitor
Request
EvaluationRequest
CredentialRequest
Caller
DaemonUtils
dataForKey:namespace:
stringWithFormat:
dataForKey:
initWithData:encoding:
dataUsingEncoding:
setData:forKey:
byteForKey:
getBytes:length:
sharedInstance
stringForKey:
setString:forKey:
boolForKey:
unsignedIntForKey:
unsignedLongLongForKey:
dictionaryWithDictionary:
objectForKey:
dictionaryByMergingWith:
setObject:forKey:
enumerateKeysAndObjectsUsingBlock:
mutableCopy
dictionaryByMerging:with:
init
stop
dealloc
_consumeDoubleTapWithReason:includingAX:
delegate
expirationTimeout
_defaultExpirationTimeout
description
serverQueue
_expireDoubleTap:delegate:
dispatchReallyAfter:tolerance:queue:block:
doubleTapDetected
monitor:doubleTapDetected:
timeIntervalSinceNow
_consumeDoubleTap
setAxDoubleTapDetected:
monitor:axApplePayConfirmation:
_startWithError:
_restartWithReactivationDelay:
start
prearmAssertion
consumeDoubleTapWithReason:
doubleTappedAt:
axApplePayConfirmation
setDelegate:
setDoubleTapDetected:
axDoubleTapDetected
.cxx_destruct
_lastTap
_lastDoubleTap
_axDoubleTapExpirationBlock
_doubleTapDetected
_axDoubleTapDetected
_delegate
TB,N,V_doubleTapDetected
TB,N,V_axDoubleTapDetected
T@"<PushButtonDelegate>",W,N,V_delegate
date
currentConnection
initWithConnection:
initWithCaller:
callStackSymbols
raise:format:
cachedValue:object:error:readValueBlock:
_complexIdentifier:object:
objectForKeyedSubscript:
_invalidateCachedValue:identifier:
numberWithInteger:
arrayWithObjects:count:
removeObjectForKey:
addObject:
requestFromCurrentConnection
localRequest
current
cachedValue:error:readValueBlock:
holdObject:
identifier
caller
received
interactive
setLog:
_cachedValues
_heldObjects
_interactive
_identifier
_caller
_received
_log
T@"NSObject<OS_os_log>",&,N,V_log
TI,R,N,V_identifier
T@"Caller",R,N,V_caller
T@"NSDate",R,N,V_received
TB,R,N,V_interactive
updateOptions:
boolValue
policy
isApplePayPolicy:
purpose
isApplePay
initWithPolicy:options:
initWithAcl:operation:options:
isUnlock
isInAppPayment
aclOperation
options
secureIntentRequested
setSecureIntentRequested:
_secureIntentRequested
_policy
_acl
_aclOperation
_options
_purpose
Tq,R,N,V_policy
T@"NSData",R,N,V_acl
T@,R,N,V_aclOperation
T@"NSDictionary",R,N,V_options
Tq,R,N,V_purpose
TB,R,N
TB,N,V_secureIntentRequested
initWithCredential:value:readOnly:
credentialType
credentialData
readOnly
_readOnly
_credentialType
_credentialData
Tq,R,N,V_credentialType
T@"LASecureData",R,N,V_credentialData
TB,R,N,V_readOnly
auditToken
isEqualToAuditToken:
isEqual:
bytes
valueWithBytes:objCType:
getValue:
euid
connection
processIdentifier
effectiveUserIdentifier
auditSessionIdentifier
auditTokenToData:
valueForEntitlement:
hash
isEqualToAuditTokenData:
asid
auditTokenData
hasEntitlement:
_connection
T@"NSXPCConnection",R,W,N,V_connection
Ti,R,N
TI,R,N
T{?=[8I]},R,N
T@"NSData",R,N
isEqualToString:
queue
callerDisplayNameWithPid:auditToken:bundleId:
_isNonUiExtensionPointIdentifier:
deviceHasSEP
deviceHasPearl
deviceHasTouchID
deviceSupports3D
deviceSupportsSecureDoubleClick
T@"NSObject<OS_dispatch_queue>",R,N
daemonDir
setDaemonDir:
_serverQueue
_daemonDir
T@"NSObject<OS_dispatch_queue>",R,N,V_serverQueue
T@"NSString",&,N,V_daemonDir
@16@0:8
@24@0:8@16
@32@0:8@16@24
B32@0:8@16@24
B24@0:8@16
C24@0:8@16
I24@0:8@16
Q24@0:8@16
v16@0:8
v24@0:8@16
v28@0:8@16B24
d16@0:8
v32@0:8Q16@24
v24@0:8d16
B24@0:8^@16
B16@0:8
v20@0:8B16
@"<PushButtonDelegate>"
@40@0:8q16^@24@?32
@48@0:8q16@24^@32@?40
@32@0:8q16@24
v32@0:8@16@24
I16@0:8
@"NSMutableDictionary"
@"NSMutableArray"
@"Caller"
@"NSDate"
@"NSObject<OS_os_log>"
B24@0:8q16
@40@0:8@16@24@32
q16@0:8
@"NSData"
@"NSDictionary"
@36@0:8q16@24B32
@"LASecureData"
Q16@0:8
B48@0:8{?=[8I]}16
i16@0:8
{?=[8I]}16@0:8
@"NSXPCConnection"
@60@0:8i16{?=[8I]}20^@52
v48@0:8q16d24@32@?40
@"NSObject<OS_dispatch_queue>"
@"NSString"
