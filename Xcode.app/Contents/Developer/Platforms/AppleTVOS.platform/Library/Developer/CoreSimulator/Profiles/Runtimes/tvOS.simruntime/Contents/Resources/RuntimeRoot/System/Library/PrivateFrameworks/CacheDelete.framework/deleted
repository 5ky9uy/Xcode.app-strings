<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE plist PUBLIC "-//Apple//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd">
<plist version="1.0">
<dict>
<key>com.apple.mobile.keybagd.UserManager.logout</key>
<true/>
<key>com.apple.private.CacheDelete</key>
<array>
<string>PURGEABLE_ENTITLEMENT</string>
<string>ITEMIZED_PURGEABLE_ENTITLEMENT</string>
<string>PURGE_ENTITLEMENT</string>
<string>CANCEL_PURGE_ENTITLEMENT</string>
<string>PERIODIC_ENTITLEMENT</string>
<string>SERVICE_REQUEST_ENTITLEMENT</string>
<string>NOTIFICATION_ENTITLEMENT</string>
</array>
<key>com.apple.private.MobileContainerManager.userManagedAssets</key>
<true/>
<key>com.apple.private.ind.client</key>
<true/>
<key>com.apple.private.security.storage-exempt.heritable</key>
<true/>
<key>com.apple.private.tcc.allow</key>
<array>
<string>kTCCServiceSystemPolicyRemovableVolumes</string>
<string>kTCCServiceSystemPolicyNetworkVolumes</string>
</array>
<key>com.apple.security.enterprise-volume-access</key>
<true/>
<key>com.apple.security.network.client</key>
<true/>
<key>seatbelt-profiles</key>
<array>
<string>deleted</string>
</array>
</dict>
</plist>
init
fileURLWithFileSystemRepresentation:isDirectory:relativeToURL:
fileSystemRepresentation
stringWithFormat:
arrayWithObjects:count:
initWithSuiteName:
dictionary
weakObjectsPointerArray
array
countByEnumeratingWithState:objects:count:
serviceWithInfo:
setObject:forKeyedSubscript:
addObject:
scanPlistsAtPath:execBlock:
addObjectsFromArray:
addEntriesFromDictionary:
daemonListenerWithExportedObject:
addRequiredEntitlement:
daemonPublicListenerWithExportedObject:
defaultPath
stringByAppendingPathExtension:
sharedPurgeableResultsCache
setPurgeableResultCache:
currentVersion
pathForVersion:
purgeableResultCache
invalidateAll
save:
startPersistenceTimer
setUpdateNotificationBlock:
valueForKey:
initWithServiceProvider:withPurgeableResultCache:
setAnalytics:
analytics
load:
listener
resume
publicListener
defaultManager
enumeratorAtPath:
dataWithContentsOfFile:options:error:
propertyListWithData:options:format:error:
objectForKeyedSubscript:
processLowDiskVolume:key:
containsObject:
volumeWithMountpoint:
validate
isSpecialVolume
shouldIgnore
mountPoint
extractThresholdsAndGoals:
freespace
numberWithUnsignedLongLong:
numberWithBool:
measureElapsedTimes
dictionaryWithObjects:forKeys:count:
purge:volume:callback:
thresholds
unsignedLongLongValue
broadcastLowDiskNotificationForVolume:key:
endComfortPurgeActivityForVolume:
beginCriticalPurgeActivityForVolume:
endCriticalPurgeActivityForVolume:
beginComfortPurgeActivityForVolume:
recentStateForVolume:
updateRecentStateforVolume:
reportBroadcastLowDiskNotification:forVolume:
isEqualToString:
volumeWithPath:
updateFollowup:
processLowDiskVolumes:key:
collection_queue
pendingLowDiskCount
setPendingLowDiskCount:
mutableCopy
pendingLowDiskVolumes
minusSet:
count
unionSet:
size
reportReceivedLowDiskNotification:forVolume:
state
numberWithInteger:
processLowDiskVolumes:filteringBySet:key:
allObjects
integerValue
checkNotificationState
handleVFSStreamXPCEvent:
registerActivityWithIdentifier:criteria:runHandler:
UTF8String
save
timer_queue
persistence_timer
setPersistence_timer:
saveRecentInfo
date
infoDictionary
services
serviceWithInfo:extension:
copy
beginMatchingExtensionsWithAttributes:completion:
setExtensionMatchContext:
extensionMatchContext
mountPointForUUID:
applicationExtensions
copyServices
hasPrefix:
doNotQuery
initWithInfo:services:volumes:
setResultCache:
setAnalyticsReporter:
registerOperation:
startOperation:
setWithArray:
prunePreserving:
removeObjectsForKeys:
operations_queue
initWithCapacity:
updateRecentResultsForVolumes:withInfo:qos:receiveResults:
currentConnection
_xpcConnection
initWithPath:isPrimary:
arrayWithObject:
intValue
recentInfoForVolumes:atUrgency:validateResults:targetVolume:
recentPurgeableTotals:
hasSnapshotsExcludingTimeMachine
keysOfEntriesPassingTest:
bsdDisk
asyncUpdateRecentResultsForAllVolumesWithInfo:
lastUpdateTimes
removeObjectForKey:
componentsJoinedByString:
numberWithDouble:
fsType
amountPurged
_purge:volume:services:callback:
fsPurgedVolumes:
appendFormat:
appendString:
prunePurgeHistory
allKeys
siblings
purgeOperations
forcePurgeNotify:
componentsSeparatedByString:
removeObjectAtIndex:
notifyRecipients:value:
validateVolumeAtPath:
notificationOptions
rangeOfString:
serviceNotify:replyBlock:
invokeAfterMaxSeconds:min:group:block:
volUUIDs
UUIDString
notify_queue
desiredNotifications
processPurgeNotification:forService:info:group:force:
_notifyRecipients:value:force:
initWithDomain:code:userInfo:
numberWithInt:
totalAvailable:
maybeCrashForTest:
daemons
errorWithDomain:code:userInfo:
serviceWithInfo:endpoint:
objectForKey:
removeServiceInfo:
setServiceInvalidationHandler:
servicePing:
setObject:forKey:
dictionaryWithObjectsAndKeys:
cancelOperation
info
serviceCallback:replyBlock:
handleVFSStreamXPCEventForVolume:event:
clientPurge:replyBlock:
clientPurgeableSpace:replyBlock:
clientItemizedPurgeableSpace:replyBlock:
clientPerformPeriodicsWithInfo:completion:
clientCancelPurge:
clientPerformVFSEventWithInfo:replyBlock:
clientPerformServiceRequest:replyBlock:
length
defaults_queue
userDefaults
synchronize
default_values
isEqual:
checkSettingEntitlements:onConnection:
stringWithUTF8String:
setNotificationOptions:
_clientSetState:key:
_clientGetState:replyBlock:
updateRecentInfoForServiceID:volume:info:
recentInfoForVolume:atUrgency:
reportLowDiskFunctionalFailure:failureType:isRoot:
inFlightOperations
addPointer:
operationsDebugState
servicesDebugState
numberWithUnsignedInteger:
rootVolume
debugDescription
iteratePendingOperations:
enumerateKeysAndObjectsUsingBlock:
sharedCacheDelete
clientCheckin:endpoint:info:reply:
clientPerformOperation:replyBlock:
clientSetState:key:
clientGetState:replyBlock:
clientUpdatePurgeable:
clientRequestCacheableSpaceGuidance:replyBlock:
clientRegisterLowDiskFailure:failureType:isRoot:
publicClientAvailableSpaceForVolume:availableSpaceClass:reply:
serviceWithID:
beginListening
cancelPersistenceTimer
log_recent_info
validateService:
removeOperation:
debugState
setListener:
setPublicListener:
rootPath
lastRefreshTimes
setLastRefreshTimes:
setUserDefaults:
setServices:
setDaemons:
setDefault_values:
setPurgeOperations:
setInFlightOperations:
setPendingLowDiskVolumes:
setLastUpdateTimes:
.cxx_destruct
_measureElapsedTimes
_collection_queue
_defaults_queue
_operations_queue
_listener
_publicListener
_extensionMatchContext
_notify_queue
_timer_queue
_persistence_timer
_rootPath
_lastRefreshTimes
_userDefaults
_services
_daemons
_default_values
_purgeOperations
_purgeableResultCache
_analytics
_inFlightOperations
_pendingLowDiskCount
_pendingLowDiskVolumes
_lastUpdateTimes
containsString:
addDailyStats:
postDailyStats:
dataWithPropertyList:format:options:error:
bytes
enumerateObjectsUsingBlock:
initWithVolumes:
volumes
validateServiceInfo:atUrgency:
copyInvalidsAtUrgency:
copyWithZone:
decodeObjectForKey:
isEqualToNumber:
version
encodeObject:forKey:
_recentInfoAtUrgency:validateResults:
_recentInfoForVolume:atUrgency:validateResults:
volumeState
CDRecentVolumeInfo:
setVolumeState:
removeServiceInfo:forVolume:
updateServiceInfoAmount:forService:atUrgency:withTimestamp:nonPurgeableAmount:
lookupAmountForService:atUrgency:
isEmpty
invalidate
supportsSecureCoding
recentInfoForVolumes:
encodeWithCoder:
initWithCoder:
validateForVolume:andService:atUrgency:
copyInvalidsForVolume:atUrgency:
updateRecentState:forVolume:
prune
updateServiceInfoAmount:forService:onVolume:atUrgency:withTimestamp:nonPurgeableAmount:
lookupAmountForService:onVolume:atUrgency:
hasInvalids
description
invalidateForVolume:
setVersion:
setVolumes:
_version
_volumes
setDailyStats:
dailyStats
setSerialQueue:
setServiceProvider:
stringByAppendingPathComponent:
serialQueue
persistPath
writeToFile:atomically:
dictionaryWithContentsOfFile:
timeIntervalSinceDate:
_postDailyStats:
removeItemAtPath:error:
domain
code
removeAllObjects
_addDailyStats:
_reportPurgeTimingInfo:
_reportPurgeableTimingInfo:
buildType
dailyPurgeableStats:
stringForUrgency:
applicationUsageStats
systemUsageStats
cacheManagementUsageStats
dictionaryWithCapacity:
sendCAEvent:key:value:
nandSize
sendPurgeableAmountStats
clear
monotonicBegin
monotonicEnd
secondsFrom:to:
stringForTime:
serviceName
incrementDailyValueForKey:
processPurgeOperationResult:
processPurgeableOperationResult:
processPeriodicOperationResult:
doubleValue
round:toSignificantDigits:
machTimeToSeconds:
longValue
numberWithLong:
numberWithUnsignedLong:
serviceProvider
capitalizedString
stringByAppendingString:
volumeNames
isRootVolume:
level
success
fsPurgeSuccess
totalMeasuredBytes
addDailyValueForKey:value:
totalReportedBytes
requestedBytes
isLowDisk
isVeryLowDisk
isNearLowDisk
results
urgency
reportedBytes
postStatsDictionary:summarize:
reportedPurgedBytes
_reportReceivedLowDiskNotification:forVolume:
_reportBroadcastLowDiskNotification:forVolume:
_reportLowDiskFunctionalFailure:failureType:isRoot:
currentSystemInfo
isDataCollectionEnabled
reportPurgeTimingInfo:
reportPurgeableTimingInfo:
fetchLowDiskStats
fetchStorageStats
fetchTimingStats:
fetchApplicationUsageStats
fetchAdditionalStats
anonymizeAndFlush:name:
reportPurge:
reportPurgeable:
reportPeriodic:
roundNumber:toSignificantDigits:
_serialQueue
_dailyStats
_serviceProvider
_nandSize
setMonotonicEnd:
setSuccess:
setFinished:
finished
finish
duration
isFinished
timedOut
setTimedOut:
_isFinished
_success
_timedOut
_finished
_monotonicBegin
_monotonicEnd
mutableResults
addResult:
setMutableResults:
_volumeNames
_mutableResults
endFreeSpace
beginFreeSpace
initWithVolumes:requestedBytes:beginFreeSpace:
setEndFreeSpace:
setLevel:
setFsPurgeSuccess:
setLowDisk:
setVeryLowDisk:
setNearLowDisk:
_fsPurgeSuccess
_lowDisk
_veryLowDisk
_nearLowDisk
_level
_requestedBytes
_beginFreeSpace
_endFreeSpace
setPath:
setEvents:
setAllowInvalidCert:
setQueue:
queue
ephemeralSessionConfiguration
sessionWithConfiguration:delegate:delegateQueue:
initWithString:
URLWithString:
scheme
dataTaskWithURL:completionHandler:
invalidateAndCancel
events
splunkUploadURL
setURL:
setHTTPMethod:
dataWithJSONObject:options:error:
setHTTPBody:
statusCode
dataTaskWithRequest:completionHandler:
previousFailureCount
protectionSpace
authenticationMethod
serverTrust
allowInvalidCert
credentialForTrust:
postEvents
class
self
performSelector:
performSelector:withObject:
performSelector:withObject:withObject:
isProxy
isKindOfClass:
isMemberOfClass:
conformsToProtocol:
respondsToSelector:
retain
release
autorelease
retainCount
zone
hash
superclass
URLSession:didBecomeInvalidWithError:
URLSession:didReceiveChallenge:completionHandler:
URLSessionDidFinishEventsForBackgroundURLSession:
initWithBufferPath:
logEventNamed:value:unique:
flush
path
_allowInvalidCert
_splunkUploadURL
_path
_events
_queue
timeIntervalSince1970
initWithPath:
setWithObjects:
unarchivedObjectOfClasses:fromData:error:
setRecentPurgeableResults:
recentPurgeableResults
name
archivedDataWithRootObject:requiringSecureCoding:error:
writeToFile:options:error:
recentInfoForVolume:atUrgency:validateResults:
_recentPurgeableTotals:validateResults:
distantFuture
dateWithTimeInterval:sinceDate:
timeIntervalSinceReferenceDate
updatedBlock
setUpdatedBlock:
copyInvalidServicesForVolume:atUrgency:
invalidateRecentResultsForVolume:
recentInfoForVolumes:atUrgency:
updateDiagnostics:onVolume:atUrgency:
diagnosticsForVolume:atUrgency:
empty
_empty
_recentPurgeableResults
_updatedBlock
doesPeriodic
setPeriodicResult:
validateDictionaryForXPC:
inFlight
setServiceName:
setUrgency:
servicesToTranslate
response_queue
setReportedPurgedBytes:
periodicResult
servicePeriodic:info:replyBlock:
analyticsReporter
resultCache
_startOperation:
_periodicResult
initWithAmount:atUrgency:withTimestamp:nonPurgeableAmount:
dateWithTimeIntervalSinceReferenceDate:
itemizedNonPurgeable
appendBytes:length:
dataWithBytes:length:
setItemizedNonPurgeable:
serialize
CDRecentServiceInfo:atUrgency:withTimestamp:nonPurgeableAmount:
validate:atUrgency:
amountAtUrgency:
nonPurgeableAmount
updateAmount:atUrgency:withTimestamp:nonPurgeableAmount:
recentinfo
_itemizedNonPurgeable
initWithServices:volumeName:
timestamp
setTimestamp:
setFreespace:
volume
setVolume:
containsValueForKey:
decodeIntegerForKey:
encodeInteger:forKey:
reserve
recentInfoAtUrgency:
cdVolume
setCdVolume:
diagnostics
setDiagnostics:
_volume
_cdVolume
_timestamp
_freespace
_volumeState
_diagnostics
dictionaryWithObject:forKey:
isRoot
rootOnly
operation_queue
raise:format:
hasRootOnlyServices
urgencyLimit
testFailures
setTestFailures:
serviceIsRegistered:
servicesForVolume:
performBlockWithUrgency:
processTestFailures:
setInfo:
result
setResult:
setVolumeNames:
setOperation_queue:
setResponse_queue:
measureElapsedTime
setMeasureElapsedTime:
_hasRootOnlyServices
_measureElapsedTime
_urgencyLimit
_urgency
_resultCache
_info
_result
_testFailures
_servicesToTranslate
_operation_queue
_response_queue
_analyticsReporter
initWithQueue:
totalPurgeableBytes
_totalPurgeableBytes
_reportedPurgedBytes
setRequestedBytes:
setReportedBytes:
_reportedBytes
reportedPurgeableBytes
setReportedPurgeableBytes:
_reportedPurgeableBytes
initWithName:uid:
_name
_uid
numberOfMatchesInString:options:range:
regularExpressionWithPattern:options:error:
timeMachineSnapshotRegex
hasSnapshotsExcludingRegularExpression:
snapshotsExcludingRegularExpression:
snapshots
hasSnapshotsMatchingRegularExpression:
snapshotsMatchingRegularExpression:
snapshotsExcludingTimeMachine
doesPurge
setCancel:
serviceCancelPurge:
compare:
sortedArrayUsingComparator:
allValues
initialFreespace
purge_amount_needed
setPurgeResult:
purgeResult
setPurge_amount_reported:
purgeSentinel:outInode:
filterServices:
volumeContribution:urgency:isTargetVolume:
purge_amount_reported
uuid
tryFSPurge:atUrgency:onVolume:orderedServices:completion:
oneShot:volume:urgency:donation:currentRoundResults:timeout:info:optionalTestInfo:
cancel
serviceRequest:volume:urgency:donation:info:optionalTestInfo:completion:
batchServicesForVolume:atUrgency:services:batchSize:block:
firstObject
servicePurge:info:replyBlock:
_cancel
_purge_amount_needed
_purge_amount_reported
_purgeResult
objectAtIndex:
setInflight_q:
setInflight:
inflight_q
inflight
removeObject:
setPurgeableResult:
intersectSet:
addInFlight:
longLongValue
purgeableResult
removeInFlight:
servicePurgeable:info:replyBlock:
copyInFlights
_purgeableResult
_inflight_q
_inflight
_serviceName
initWithUrgency:info:reply:
purgeOpAtUrgency:info:reply:
reply
setReply:
_reply
serviceQueue
purgeQueue
unsignedIntValue
drainPurgeQueue
_servicePurge:info:replyBlock:
requestQueue
_servicePurgeable:info:replyBlock:
removeObjectsInArray:
objectAtIndexedSubscript:
insertObject:atIndex:
_inFlight
_servicePeriodic:info:replyBlock:
_serviceCancelPurge:
_servicePing:
_serviceNotify:replyBlock:
_serviceCallback:replyBlock:
initWithFormat:
initWithInfo:
initWithInfo:endpoint:
initWithInfo:extension:
multiUserOnly
noQuota
setID:
setDoesPeriodic:
setDoesPurge:
setDoNotQuery:
setRootOnly:
setServiceQueue:
setRequestQueue:
setMultiUserOnly:
setNoQuota:
set_inFlight:
serviceInvalidationHandler
setPurgeQueue:
_doesPeriodic
_doesPurge
_doNotQuery
_rootOnly
_multiUserOnly
_noQuota
__inFlight
_volUUIDs
_serviceQueue
_requestQueue
_desiredNotifications
_notificationOptions
_serviceInvalidationHandler
_purgeQueue
isConnected
invalidateConnection
dealloc
doWithProxy:failure:
setXpcConnection:
setWatchdog_timer:
watchdog_timer
interfaceWithProtocol:
xpcConnection
setRemoteObjectInterface:
resumeConnection
setIsConnected:
remoteObjectProxyWithErrorHandler:
obtainXPCConnection:
connectionWasInvalidated
isInterrupted
setIsInterrupted:
isInvalidated
setIsInvalidated:
_isConnected
_isInterrupted
_isInvalidated
_watchdog_timer
initWithVolume:
primary
quota
isSystemVolume
_thresholds
stringByStandardizingPath
invalidateVolumesCache
isRecoveryVolume
isPrebootVolume
isVMVolume
isFixedSizeVolume
setReserve:
setQuota:
isAPFSVolume
_primary
_isSystemVolume
_isAPFSVolume
_uuid
_reserve
_quota
__thresholds
requestId
extension
_extensionContextForUUID:
_auxiliaryConnection
setRequestId:
beginExtensionRequestWithInputItems:completion:
cancelExtensionRequestWithIdentifier:
_extension
_requestId
initWithName:listener:protocol:exportedObj:isExtension:
setXpcServiceName:
xpcServiceName
options
setOptions:
initWithMachServiceName:options:
_xpcServiceName
_options
createHeartbeatConnection
heartbeatConnection
remoteObjectProxy
haveCreatedHeartbeat
setHaveCreatedHeartbeat:
endpoint
initWithListenerEndpoint:
setHeartbeatConnection:
setInvalidationHandler:
setInterruptionHandler:
_haveCreatedHeartbeat
_endpoint
_heartbeatConnection
/AppleInternal/Library/CacheDelete/
IPHONE_SIMULATOR_ROOT
%s%@
/System/Library/CacheDelete/
CACHE_DELETE_CACHE_ENABLED
com.apple.cache_delete
daemon
com.apple.cache_delete_timer
com.apple.cache_delete_notify
com.apple.cache_delete_collection
com.apple.cache_delete_defaults
com.apple.cache_delete_operations
v16@?0@"NSDictionary"8
CLIENT_ENTITLEMENT
v8@?0
v12@?0B8
CACHE_DELETE_MEASURE_ELAPSED_TIME
%@/%@
CACHE_DELETE_VOLUME
CACHE_DELETE_AMOUNT
CACHE_DELETE_QUOTA_EVENT
CACHE_DELETE_URGENCY
CACHE_DELETE_URGENCY_LIMIT
CACHE_DELETE_EVENT_KEY
UNKNOWN
CACHE_DELETE_PURGE_BEGIN
VERY_LOW_DISK_THRESHOLD
CD_VERYLOWDISK_EVENT
CACHE_DELETE_HIGH_PRIORITY_PURGE_FAILED
CD_NEAR_LOW_DISK_EVENT
CACHE_DELETE_LOW_MEDIUM_PRIORITY_PURGE_FAILED
CD_DESIRED_EVENT
CACHE_DELETE_PURGE_SUCCEEDED
LOW_DISK_THRESHOLD
DESIRED_DISK_THRESHOLD
CACHE_DELETE_LOW_DISK_NOTIFICATION
v16@?0@"NSString"8
_Flags
CD_LOWDISK_EVENT
Root
v16@?0@"NSObject<OS_xpc_object>"8
com.apple.cache_delete.CriticalPurge
com.apple.cache_delete.ComfortPurge
com.apple.cache_delete.startPersistenceTimer
CACHE_DELETE_PURGEABLE_UPDATED
/System/Library/PrivateFrameworks/PlugInKit.framework/PlugInKit
com.apple.cache_delete.applicationExtensions
com.apple.cache_delete_extension
NSExtension
CacheDeleteInfo
CACHE_DELETE_ID
v24@?0@"NSArray"8@"NSError"16
%@/%s
CacheDeletePurgeHistory.txt
CACHE_DELETE_FSPURGED_VOLUMES
CACHE_DELETE_
CACHE_DELETE_NO_CACHE
CACHE_DELETE_QUERY_PATH
FAST
CACHE_DELETE_CALLING_PROCESS
CACHE_DELETE_TOTAL_FSPURGEABLE
com.apple.photolibraryd.cacheDelete
com.apple.MUSIC
com.apple.MailCacheDelete
com.apple.fspurgeable_document
com.apple.fspurgeable_data
com.apple.PODCAST
com.apple.VIDEO
com.apple.MOVIE
com.apple.imagent.cache-delete
com.apple.ibooks.CacheDeleteExtension
com.apple.cache_delete.fsPurgeableQ
com.apple.deleted_helper
unknown
All Volumes
CACHE_DELETE_TOTAL_PURGEABLE
CACHE_DELETE_IGNORE_SNAPSHOTS
REFRESH
CACHE_DELETE_DIAGNOSTIC_INFO
CACHE_DELETE_INVALIDATE_CACHE
CACHE_DELETE_ERROR
INVALID VOLUME
CACHE_DELETE_PURGEABLE_RESULT_CACHE
B32@?0@"NSString"8@"NSNumber"16^B24
unknown container
CACHE_DELETE_PURGEABLE_BY_CONTAINER
SLOW
CACHE_DELETE_TOTAL_AVAILABLE
CACHE_DELETE_SERVICES_INFLIGHT
CACHE_DELETE_OPERATION_DIAGNOSTICS
%@_u%@
GRAND_TOTAL
CACHE_DELETE_SERVICES
CACHE_DELETE_ITEMIZED_NONPURGEABLE
CACHE_DELETE_NONPURGEABLE_AMOUNT
CACHE_DELETE_FREESPACE
%@ : %@
unknown caller
 (%@)
CACHE_DELETE_ELAPSED_TIME
P%@|%@|%@|%@
apfs
CACHE_DELETE_QOS
CACHE_DELETE_AMOUNT_REPORTED
|%@|%@
CACHE_DELETE_QUERY_AFTER_PURGE
Invalid Volume Parameter
Missing Volume Parameter
CACHE_DELETE_TOKEN
unable to create a purge operation for %@
CACHE_DELETE_FS_PURGE_NOTIFY
rescan
historyDone
path
v16@?0r^{__CFArray=}8
CACHE_DELETE_PURGE_NOTIFICATION
com.apple.cache_delete._notifyRecipients
CacheDeleteErrorDomain
SERVICE_ENTITLEMENT
ANON
ITEMIZED_PURGEABLE_ENTITLEMENT
PURGEABLE_ENTITLEMENT
PURGE_ENTITLEMENT
Invalid Volume
CACHE_DELETE_VOLUME_UUID
CACHE_DELETE_TEST_PARAMETERS
PERIODIC_ENTITLEMENT
Invalid volume: %@
CACHE_DELETE_DEMOTABLE_APPS
DEMOTABLE_APPS_ENTITLEMENT
CACHE_DELETE_DEMOTE_APPS
DEMOTE_APPS_ENTITLEMENT
CACHE_DELETE_OPERATIONS
Invalid arguments: missing key %@
CACHE_DELETE_SERVICE_REQUEST_OPERATION
Invalid arguments: missing operation key %@
CACHE_DELETE_SERVICE_REQUEST
Illegal service request type: %@
SERVICE_REQUEST_ENTITLEMENT
Unknown Service ID %@
Target service ID Required
Client is not entitled to perform a service request
TEST_ENTITLEMENT
CACHE_DELETE_TEST_VFS_EVENT_FLAGS
CACHE_DELETE_PURGE_OPERATION
CACHE_DELETE_PURGEABLE_OPERATION
CACHE_DELETE_ITEMIZED_PURGEABLE_OPERATION
CACHE_DELETE_PERIODIC_OPERATION
CACHE_DELETE_PURGE_CANCEL_OPERATION
CACHE_DELETE_TEST_VFS_EVENT
CACHE_DELETE_PURGE_USER_MANAGED_ASSETS
CACHE_DELETE_PURGE_USER_MANAGED_ASSETS_ENTITLEMENT
CACHE_DELETE_USER_DEFAULTS
clientGetState Client is not entitled to set key: %@
CACHE_DELETE_DESIRED_CACHE_INCREASE
Connection is not properly entitled for this request (requires ITEMIZED_PURGEABLE_ENTITLEMENT)
DesiredIncreaseInBytes was not a number!
Missing or invalid service ID
Missing or invalid path parameter
Missing or invalid urgency parameter
CACHE_DELETE_GUIDANCE_CAN_EXPAND_CACHE
CACHE_DELETE_GUIDANCE_WILL_EVICT_LOWER_PRIORITY
CACHE_DELETE_GUIDANCE_DO_NOT_EXPAND_CACHE
CACHE_DELETE_GUIDANCE
Missing or invalid volume in request
Operations
Services
PendingLowDiskCount
PendingLowDiskVolumes
Purgeable
v24@?0@"<CacheDeleteOperation>"8^B16
v32@?0@"NSString"8@"CDService"16^B24
CACHE_DELETE_TEST_CRASH
CACHE_DELETE_TEST_ASAN
listener
T@"CacheDeleteListener",&,N,V_listener
publicListener
T@"CacheDeleteListener",&,N,V_publicListener
measureElapsedTimes
TB,R,V_measureElapsedTimes
extensionMatchContext
T@,&,N,V_extensionMatchContext
notify_queue
T@"NSObject<OS_dispatch_queue>",R,N,V_notify_queue
timer_queue
T@"NSObject<OS_dispatch_queue>",R,N,V_timer_queue
persistence_timer
T@"NSObject<OS_dispatch_source>",&,N,V_persistence_timer
rootPath
T@"NSURL",R,N,V_rootPath
lastRefreshTimes
T@"NSMutableDictionary",&,N,V_lastRefreshTimes
userDefaults
T@"NSUserDefaults",&,N,V_userDefaults
services
T@"NSMutableDictionary",&,N,V_services
daemons
T@"NSMutableSet",&,N,V_daemons
default_values
T@"NSDictionary",&,N,V_default_values
purgeOperations
T@"NSMutableDictionary",&,N,V_purgeOperations
purgeableResultCache
T@"CDPurgeableResultCache",&,N,V_purgeableResultCache
analytics
T@"CacheDeleteAnalytics",&,N,V_analytics
inFlightOperations
T@"NSPointerArray",&,N,V_inFlightOperations
pendingLowDiskCount
TQ,N,V_pendingLowDiskCount
pendingLowDiskVolumes
T@"NSMutableSet",&,N,V_pendingLowDiskVolumes
lastUpdateTimes
T@"NSMutableDictionary",&,N,V_lastUpdateTimes
collection_queue
T@"NSObject<OS_dispatch_queue>",R,N,V_collection_queue
defaults_queue
T@"NSObject<OS_dispatch_queue>",R,N,V_defaults_queue
operations_queue
T@"NSObject<OS_dispatch_queue>",R,N,V_operations_queue
^{os_state_data_s=I(?=b32I){os_state_data_decoder_s=[64c][64c]}[64c][0C]}16@?0^{os_state_hints_s=I*II}8
com.apple.CacheDelete.daily
com.apple.cache_delete.daily_activity
dailyPurgeableAmountTotal
dailyPurgeableAmountTotalCentralized
com.apple.
dailyPurgeableAmount_%s
com.apple.dispatch.vfs
com.apple.cache_delete.low_disk_event
com.apple.cache_delete.launched
com.apple.cache_delete.startup_lowdisk_poll
v32@?0@"NSString"8Q16^B24
v32@?0@"NSString"8@"NSString"16^B24
v32@?0@8@16^B24
CACHE_DELETE_CACHED_RESULTS_VERSION
CACHE_DELETE_RECENT_PURGEABLE_STATS
v32@?0@"NSString"8@"CDRecentVolumeInfo"16^B24
Volume: %@
supportsSecureCoding
TB,R
version
T@"NSNumber",&,N,V_version
volumes
T@"NSMutableDictionary",&,N,V_volumes
DateStarted
systemBuildVersion
systemProductName
systemBuildType
Release
com.apple.cache_delete.analytics
CacheDeleteAnalytics.plist
/System/Library/CoreServices/SystemVersion.plist
ProductBuildVersion
ProductName
dailyNumVeryLowDiskEvents%s
dailyNumLowDiskEvents%s
dailyNumNearLowDiskEvents%s
dailyNumDesiredDiskEvents%s
dailyNumVeryLowDiskBroadcasts%s
dailyNumLowDiskBroadcasts%s
dailyNumNearLowDiskBroadcasts%s
dailyNumDesiredDiskBroadcasts%s
lowDiskFunctionalFailure
dailyPurgeReqs%s%s
dailyPurgeSuccess%s%s
dailyFSPurgeSuccess%s%s
dailyPurgedBytes%s%s
dailyPurgedReportedBytes%s%s
dailyActiveTimeS
dailyActiveTimePurgingS
dailyNumLowDiskPurges%s
dailyNumLowDiskSuccess%s
dailyNumVeryLowDiskPurges%s
dailyNumVeryLowDiskSuccess%s
dailyNumNearLowDiskPurges%s
dailyNumNearLowDiskSuccess%s
purge_time_%s_%s
purgeable_time_%s_%s
name
value
@"NSDictionary"8@?0
dailyPurgeableAmount
com.apple.cachedelete.purgeablestats
deviceNandSize
dailyFreeBytesRoot
addDailyValueForKey: Negative value (%f) for total measured bytes in: "%@"
None
Late
Verylate
dailyTotalBytesRoot
dailyPurgeableBytes%s
dailyItemizedPurgeableBytes%s_%s
dailyPurgeableBytesTot
dailyEffectiveFreeBytesRoot
dailyPurgeableOverTotalRatioRoot
dailyPurgeableOverUsedRatioRoot
dailyPurgeableOverEffectiveFreeRatioRoot
dailyIsNearLowDiskRoot
dailyIsLowDiskRoot
dailyIsVeryLowDiskRoot
com.apple.mobile.cache_delete_daily
CACHE_DELETE_ANALYTICS_REPORT
systemUsageStatsTimeout
com.apple.mobile.cache_delete_app_container_caches
applicationUsageStatsTimeout
appBundle_name
%@_%@
v32@?0@"NSString"8@"NSNumber"16^B24
v32@?0@"NSString"8@"NSDictionary"16^B24
com.apple.mobile.cache_delete_managed_assets
cacheManagementStatsTimeout
purgeRequestedRytes
purgeReportedBytes
purgeMeasuredBytes
purgeSuccess
purgeTimeS
purgeDefecitBytes
lowdiskSuccess
lowdiskTimeS
lowdiskPeriodS
verylowdiskSuccess
verylowdiskTimeS
verylowdiskPeriodS
nearlowdisk_success
nearlowdiskTimeS
nearlowdiskPeriodS
purgeRequestedBytes%s%s
purgeReportedBytes%s%s
purgePercentReported%s%s
v32@?0@"CDPurgeServiceRequestResult"8Q16^B24
dailyPurgeableReqs
dailyActiveTimePurgeableS
v32@?0@"CDPurgeableServiceRequestResult"8Q16^B24
dailyPeriodicReqs
dailyActiveTimePeriodicS
periodicTimeS%s%s
periodicReportedBytes%s%s
v32@?0@"CDPeriodicServiceRequestResult"8Q16^B24
lowDiskFunctionalFailure_%d_%s_%s
serialQueue
T@"NSObject<OS_dispatch_queue>",&,N,V_serialQueue
dailyStats
T@"NSMutableDictionary",&,N,V_dailyStats
T@"<CDPurgeableResultCache>",&,N,V_purgeableResultCache
serviceProvider
T@"<CacheDeleteServiceProvider>",&,N,V_serviceProvider
nandSize
TQ,R,V_nandSize
finished
TB,N,V_finished
monotonicEnd
TQ,N,V_monotonicEnd
monotonicBegin
TQ,R,N,V_monotonicBegin
duration
Td,R,N
isFinished
TB,R,N,V_isFinished
success
TB,N,V_success
timedOut
TB,N,V_timedOut
mutableResults
T@"NSMutableArray",&,N,V_mutableResults
results
T@"NSArray",R,N
volumeNames
T@"NSArray",R,N,V_volumeNames
requestedBytes
TQ,R,N,V_requestedBytes
beginFreeSpace
TQ,R,N,V_beginFreeSpace
endFreeSpace
TQ,N,V_endFreeSpace
level
Ti,N,V_level
fsPurgeSuccess
TB,N,V_fsPurgeSuccess
lowDisk
TB,N,GisLowDisk,V_lowDisk
veryLowDisk
TB,N,GisVeryLowDisk,V_veryLowDisk
nearLowDisk
TB,N,GisNearLowDisk,V_nearLowDisk
totalReportedBytes
TQ,R,D,N
totalMeasuredBytes
https://init.itunes.apple.com/bag.xml?ix=5
postTime
events
eventTime
topic
eventType
xp_coreos_cache_delete
com.apple.cache_delete.SplunkLogger
metrics
metricsUrl
/2/xp_coreos_cache_delete
https
v32@?0@"NSData"8@"NSURLResponse"16@"NSError"24
POST
hash
TQ,R
superclass
T#,R
description
T@"NSString",R,C
debugDescription
T@"NSString",&,N,V_path
T@"NSMutableArray",&,N,V_events
queue
T@"NSObject<OS_dispatch_queue>",&,N,V_queue
allowInvalidCert
TB,N,V_allowInvalidCert
splunkUploadURL
T@"NSURL",R,N,V_splunkUploadURL
_v%lu
CacheDeleteRecentInfo
No error information available
CDPurgeableResultCache
com.apple.cache_delete.saveRecentInfo
CACHE_DELETE_SHARED_PURGEABLE
CACHE_DELETE_PUSHED
CACHE_DELETE_TIMESTAMP
TRUE
FALSE
recentPurgeableResults
T@"CDRecentInfo",&,N,V_recentPurgeableResults
empty
TB,R,N,V_empty
hasInvalids
TB,R,N
updatedBlock
T@?,C,N,V_updatedBlock
CACHE_DELETE_PURGE_TIMEOUT
com.apple.cache_delete_periodic_results
Periodic callback firing more than once for service %{public}@
CACHE_DELETE_TEST_FAILURES
v32@?0@"NSString"8@"<CDService>"16^B24
resultCache
T@"<CDPurgeableResultCache>",&,N
T@"NSArray",&,N
periodicResult
T@"CDPeriodicOperationResult",&,N,V_periodicResult
CACHE_DELETE_SERVICE_INFO
u:%d : %llu : %@
itemizedNonPurgeable
T@"NSDictionary",&,N,V_itemizedNonPurgeable
CACHE_DELETE_VOLUME_STATE
-[CDRecentVolumeInfo _recentInfoAtUrgency:validateResults:]
-[CDRecentVolumeInfo prunePreserving:]
v32@?0@"NSString"8@"CDRecentServiceInfo"16^B24
volume
T@"NSString",&,N,V_volume
cdVolume
T@"CacheDeleteDaemonVolume",&,N,V_cdVolume
timestamp
T@"NSDate",&,V_timestamp
freespace
T@"NSNumber",&,V_freespace
volumeState
Tq,N,V_volumeState
diagnostics
T@"NSMutableDictionary",&,N,V_diagnostics
Parameter error, info is not a dict
com.apple.TMCacheDelete
com.apple.FileProvider.cache-delete
%s_%@_operation.%p
%s_%@_response.%p
_startOperation_InBaseClass
Must be implemented in the base class!
com.apple.cache_deleteoperation_test_failures
%@ <%p>: {
Volumes: [
Services: [
T@"<CDPurgeableResultCache>",&,N,V_resultCache
info
T@"NSDictionary",&,N,V_info
T@"NSDictionary",&,N,V_services
result
T@"NSMutableDictionary",&,N,V_result
testFailures
T@"NSMutableDictionary",&,N,V_testFailures
T@"NSArray",&,N,V_volumes
T@"NSArray",&,N,V_volumeNames
hasRootOnlyServices
TB,R,N,V_hasRootOnlyServices
servicesToTranslate
T@"NSArray",R,N,V_servicesToTranslate
urgencyLimit
Ti,R,V_urgencyLimit
urgency
Ti,R,V_urgency
operation_queue
T@"NSObject<OS_dispatch_queue>",&,V_operation_queue
response_queue
T@"NSObject<OS_dispatch_queue>",&,V_response_queue
measureElapsedTime
TB,V_measureElapsedTime
analyticsReporter
T@"CacheDeleteAnalytics",&,N,V_analyticsReporter
TB,N
T@"NSArray",R,N,V_volumes
totalPurgeableBytes
TQ,R,N,V_totalPurgeableBytes
reportedPurgedBytes
TQ,N,V_reportedPurgedBytes
TQ,N,V_requestedBytes
reportedBytes
TQ,N,V_reportedBytes
reportedPurgeableBytes
TQ,N,V_reportedPurgeableBytes
T@"NSString",R,N,V_name
TQ,R,N,V_uid
v24@?0r^{snapshot_info=QII[1024c]}8^B16
^com\.apple\.mobilebackup
com.apple.mobile.cache_delete_mobile_backup
CacheDeleteFSPurgeInProgress
No Error
q24@?0@8@16
CACHE_DELETE_FREESPACE_BEGIN
v16@?0@"CDPurgeServiceRequestResult"8
B12@?0i8
CACHE_DELETE_OPERATION_CANCELLED
proceed
do not proceed
B16@?0@"NSArray"8
Purge operation was cancelled
CACHE_DELETE_FREESPACE_END
Operation Cancelled
Purge callback firing more than once for service %{public}@ on volume: %{public}@
purgeResult
T@"CDPurgeOperationResult",&,N,V_purgeResult
cancel
TB,V_cancel
purge_amount_needed
TQ,R,V_purge_amount_needed
purge_amount_reported
TQ,V_purge_amount_reported
fileID
com.apple.cahce_delete.purgeable_inflight
Purgeable callback firing more than once for service %{public}@
CACHE_DELETE_ITEMIZED_PURGEABLE
NOT 
Reported
Duration
inFlight
Urgency
purgeableResult
T@"CDPurgeableOperationResult",&,N,V_purgeableResult
inflight_q
T@"NSObject<OS_dispatch_queue>",&,N,V_inflight_q
inflight
T@"NSCountedSet",&,N,V_inflight
serviceName
T@"NSString",&,N,V_serviceName
Ti,N,V_urgency
reply
T@?,C,N,V_reply
PERIODIC
PURGE
CACHE_DELETE_VOLUMES
CACHE_DELETE_OPT_OUT_QUOTA_EVENTS
CACHE_DELETE_MULTI_USER_MODE_ONLY
CACHE_DELETE_DO_NOT_QUERY
CACHE_DELETE_NOTIFICATIONS
.request
com.apple.cache_delete.CDService.servicePurgeable
Method must be implemented in subclass!
com.apple.cache_delete.CDService.servicePurge
com.apple.cache_delete.CDService.servicePeriodic
com.apple.cache_delete.CDService.serviceCancelPurge
com.apple.cache_delete.CDService.servicePing
com.apple.cache_delete.CDService.serviceNotify
com.apple.cache_delete.CDService.serviceCallback
<%@: %p (%@) = { inFlight=%s , purgeQueueLength=%d }>
ANONYMOUS_%p
T@"NSString",R,N
volUUIDs
doesPeriodic
doesPurge
rootOnly
doNotQuery
multiUserOnly
noQuota
purgeQueue
T@"NSMutableArray",&,N,V_purgeQueue
T@"NSArray",R,N,V_volUUIDs
T@"NSString",&,N,V_ID
TB,N,V_doesPeriodic
TB,N,V_doesPurge
TB,N,V_doNotQuery
TB,N,V_rootOnly
serviceQueue
T@"NSObject<OS_dispatch_queue>",&,N,V_serviceQueue
requestQueue
T@"NSObject<OS_dispatch_queue>",&,N,V_requestQueue
desiredNotifications
T@"NSSet",R,V_desiredNotifications
notificationOptions
T@"NSDictionary",&,V_notificationOptions
TB,N,V_multiUserOnly
TB,N,V_noQuota
_inFlight
TB,N,V__inFlight
serviceInvalidationHandler
T@?,C,N,V_serviceInvalidationHandler
v24@?0@"<CacheDeleteServiceProtocol>"8@?<B@?>16
v16@?0@"NSError"8
%@: obtainXPCConnection callback fired more than once for %@!
%@: Received an error after the request succeeded! error: %@
%@: Received completion after we sent a callback! Success = %d
B8@?0
v24@?0@"NSXPCConnection"8@"NSError"16
com.apple.cache_delete.CDXPCService.no_connection
Subclass needs to implement this
xpcConnection
T@"NSXPCConnection",&,N,V_xpcConnection
isConnected
TB,N,V_isConnected
isInterrupted
TB,N,V_isInterrupted
isInvalidated
TB,N,V_isInvalidated
watchdog_timer
T@"NSObject<OS_dispatch_source>",&,N,V_watchdog_timer
com.apple.cache_delete.volumes
isAPFSVolume
TB,R,V_isAPFSVolume
_thresholds
T@"NSDictionary",R,N,V__thresholds
uuid
T@"NSUUID",R,N,V_uuid
primary
TB,R,V_primary
siblings
T@"NSArray",R,D,N
isSpecialVolume
reserve
TQ,V_reserve
quota
TQ,V_quota
isRecoveryVolume
isPrebootVolume
isVMVolume
isSystemVolume
TB,R,N,V_isSystemVolume
ExtensionRequiredError
%@ Requires Extension!
com.apple.cache_delete.CDAnonymousXPCService.duplicate_connection
Asked to build a connection to %@ but we already have a perfectly good one!
com.apple.cache_delete.unexpected_multiple_callback
beginExtensionRequestWithInputItems callback fired more than once
v24@?0@"<NSCopying>"8@"NSError"16
requestId
T@"<NSCopying>",&,N,V_requestId
extension
T@"NSExtension",R,N,V_extension
com.apple.cache_delete.public
com.apple.cache_delete.CDNamedXPCService.duplicate_connection
xpcServiceName
T@"NSString",&,N,V_xpcServiceName
options
TQ,N,V_options
EndpointRequiredError
CDAnonymousService Required Endpoint!
com.apple.cache_delete.CDAnonymousXPCService.no_endpoint
Asked to build a connection to %@ but we have no endpoint!
heartbeatConnection
T@"NSXPCConnection",&,N,V_heartbeatConnection
haveCreatedHeartbeat
TB,N,V_haveCreatedHeartbeat
endpoint
T@"NSXPCListenerEndpoint",R,N,V_endpoint
Unable to initialize user defaults!
Scanning PropertyList Dir %@
unable to create service for plist: %@
Adding Services: %@
Previously crashed while loading purgeable result cache at %@
Unable to set result cache breadcrumb: %d (%s)
Resuming XPC Listeners
propertyListWithData failed: %@
unable to read plist at: %@ : %@
Not processing low disk %@
Unable to validate volume %@
Special Volume: %@, skipping
ignoring %@
Purging %@ to Desirable (%llu bytes)
%@ Desirable purge callback: %@
skipping lowMediumPriority purge for volume: "%@", freespace: %llu
Purging %{public}@ to get above LOW_DISK (%llu bytes)
%@ LOW_DISK purge callback: %@
skipping highPriority purge for volume: "%@", freespace: %llu
Failing to broadcast low disk notification for volume %@ because it became invalid
Broadcasting LowDisk Notification: (previous)%d -> (current)%d
Sent low disk notification
checkNotificationState: unable to get low disk threshold for %@, using %llu
checkNotificationState: found low disk notification marker for: %@ freespace: %llu, lowDiskThreshold: %@
checkNotificationState: found a low disk notification marker for %@
checkNotificationState: Leaving low disk notification marker (%@), freespace: %llu, lowDiskThreshold: %@
caught VQ_VERYLOWDISK on "%{public}@"
VeryLowDiskEvent
caught VQ_LOWDISK on "%{public}@"
LowDiskEvent
caught VQ_NEARLOWDISK on "%{public}@"
NearLowDiskEvent
caught VQ_DESIREDDISK on "%@"
caught VFS_QUOTA
Not purging for VFS event %p (pending count: %d, volumes: %@)
Volume %@ is above DESIRED now!
 enableTelemetry=YES %{public, signpost.telemetry:string1, name=VolumeDomain}@ %{public, signpost.telemetry:number1, name=VolumeSize}lld %{public, signpost.telemetry:number2, name=NANDSize}lld
DesiredDiskEvent
Registering delayed critical low disk activity for volume %@
Running critical purge activity %p
Clearing delayed critical low disk activity for volume %@
Begin delayed comfort low disk activity for volume %@
Running comfort purge activity %p
Clearing delayed comfort low disk activity for volume %@
Activity checked in
Failed to set activity to wait state
Polling activity
Activity %p running with state %ld
Restarted persistence timer
Creating persistence timer
Sending notification: %s
persistence timer fired
Started persistence timer
No PlugInKit, skip NSExtension exploration. %s : %s
beginMatchingExtensionsWithAttributes:: error: %@
beginMatchingExtensionsWithAttributes:: got Plugins: %@
extensionDict does not have a service ID: %@
Skipping creation of an existing extension
unable to create CDService for extension: %@
No CacheDeleteInfo dict in: %@
extensionDict is not class NSDictionary, skipping: %@
Waiting for extensions. Context: %@
prunePurgeHistory: pruning: %s
prunePurgeHistory: Unable to get caches directory path
NO services: %@
%d ***** %@ invalid: not registered and not mapped to an FSPurgeable type *****
%d ***** %@ does not respond to purgeable query *****
parameter error, info dictionary is nil.
%d %{public}s APFS Purgeable update for Calling process: %{public}@ on "%{public}@" ET: %f,  results:
%{public}@ : %{public}@
Pruning stale results for %{public}@ with doNotPrune list:
Refreshing results for %{public}@
Purgeable update results:
totalAvailable ENTRY, Volume: %@, Calling process: %@, info:
totalAvailable ENTRY %@ : %@
CACHE_DELETE_INVALIDATE_CACHE_KEY: Invalidated the results cache
caller has requested a forceRefresh (CACHE_DELETE_NO_CACHE = YES)
caller has NOT requested a forceRefresh (CACHE_DELETE_NO_CACHE = NO, or is not present)
unable to validate volume "%@"
%d totalAvailable: GrandTotal request for urgency: %@
%d totalAvailable got recentPurgeableTotals
Volume %{public}@ has 0 purgeable because it has been snapshotted
%d totalAvailable updating results
%d totalAvailable updated results
Volume %{public}@ has snapshots, returning 0 purgeable space
%d Waiting for purgeable refresh, query path: %@
%d Returning cached results for target: %@, with query path: %@ Calling process: %@
%d Volume: %@, update_block asynchronously refreshing any stale results. Calling process: %@
No results for volume %{public}@
<<<Purgeable Result (%{public}@, query path: %@, u: %@, ET: %f): "%{public}@"
%{public}@ : %{public}@%{public}@
Purgeable Result>>> %{public}@ bytes on: "%{public}@". Calling process: %@
Unconditionally calling update_block, self.lastUpdateTimes: %@, lastUpdateTimesKey: %@, lastUpdateTime: %@
trying fsPurge on volume: %@, with info: %@, services: %@
%d cache_delete purge satisfied the request
%d cache_delete FS purge did NOT satisfy the request %llu bytes short
cache_delete purge: fsPurge did NOT satisfy the request
%d Purge Result: %@
Purge: unable to validate volume
Invalid token
PurgeOperation on volume %@, registered services:
<<<Purge Result: %{public}@ measured bytes (%{public}@ reported) on volume: "%{public}@"
%{public}@ : %{public}@
Purge Result>>> (%{public}@ measured bytes on volume: "%{public}@")
fsPurgeNotify mountPoint: %@
CacheDeleteEnumerateRemovedFiles callback, events: %@
signalling historyDone
signalling rescan
invokeAfterMaxSeconds delay: %lld seconds
%d processPurgeNotification breadcrumb event, notified %@ with: %@
%d notifyRecipients: notified serviceID: %@, notifications: %@
%d processPurgeNotification affected: %@, service: %@, notificationInfo: %@, service.notificationOptions: %@
%d processPurgeNotification, dir: %@ normalizedDir: %@
%d processPurgeNotification adding: %@
%d notifyRecipients(filtered by directory): notified serviceID: %@, notifications: %@ with: %@
%d processPurgeNotification affected volUUIDs: %@ service volUUIDs: %@
%d notifyRecipients(filtered by volume): notified serviceID: %@, notifications: %@
%d processPurgeNotification notifying %@ with: %@
%d notifyRecipients(unfiltered): notified serviceID: %@, notifications: %@
Notifying services for "%@", value: %@
%d notifyRecipients
publicClientAvailableSpaceForVolume: %@ returning recentInfo: %llu
Client checkin for service %{public}@, info: %{public}@
Connection is not entitled!
Anonymous service %@ invalidated!
Forgetting anonymous service %@
Forgotten anonymous service %@ disconnected
Setting up anonymous service %@
Timed out waiting for ping for anonymous service %@
Added anonymous service %@
Unable to create anonymous service %@
Attempting to check in a duplicate service %@
Connection is not entitled to query purgeable space!
query_purgable_space_itemized
query_purgable_space
Connection is not entitled to purge!
purge
Invalid purge request did not include CACHE_DELETE_VOLUME_KEY
cancel
invalid or missing token or uuid
Connection is not entitled to trigger a periodic purge!
periodic
invalid serviceRequestOperation dictionary, more that one key
serviceRequestOperation is an unsupported object: %@
ServiceCallback results: %@
Client is not entitled to perform the service request!
Client Perform Operation: %@
there is no entitlement required for key: %@
Unable to realpath "%s" : %s
%d clientSetState setting %@ -> %@
clientSetState Client is not entitled to set key: %@
key is not an NSString: %@
persistent_state is not a dictionary: %@
using default value: %@ for key: %@
%d deleted clientUpdatePurgeable with: %@
Parameter Error
Parameter Error: missing or invalid cache volume %@
Request Error
Crashing On Purpose!
Crashing ( ASAN ) On Purpose!
main
CacheDelete Starting...
Failed to get timebase info
PERIODIC result: %{public}@
handle_vfs_xpc
notify_post failed: %s
poll_vfs_lowdisk
CacheDelete, open for business!
quotactl error: %s
RECEIVED SIGKILL
RECEIVED SIGTERM
RECEIVED SIGQUIT
*** CacheDelete SigInfo ***
* Pending Low-Disk Count: %@
* Pending Low-Disk Volumes: %@
* Operations = {
%lu: %@
* Services = {
* Purgeable (Root Volume) = {
%@ = %@
* CDPurgeableResultCache sharedPurgeableResultsCache = {
*** Posting Daily Stats ***
incompatible version: %@
got a compatible version
 Volume: %@
Unable to get persistPath to save analytics!
Failed to persist CacheDelete analytic data!
Did not load CacheDelete analytic data
No file to remove at %@
Failed to remove file at %@: %@
Requesting analytic data from daily service
Received response from daily service analytics data request
Failed to get system usage stats! %@
Requesting analytic data from app caches service
Received response from app caches service analytics data request
Received %@
Requesting analytic data from cache management service
Received response from cache management service analytics data request
Unknown low disk event: %@
_reportLowDiskFunctionalFailure key: %@
Unable to fetch splunk endpoint: %@
Malformed iTunes bag payload!
Failed to serialize Splunk payload: %@
Error in uploading the events to splunk: %@
Received the wrong kind of response: %@
Splunk upload success
Splunk upload unexpected status: %d
Splunk upload start
Splunk upload challenge
SecTrustEvaluateWithError failed: %@
Force Accepting Splunk Credential
NSKeyedUnarchiver unarchivedObjectOfClass failed to unarchive recent purgeable results: %@
Exception (%@) while unarchiving recent purgeable results
result is not of class CacheDeleteRecentInfo: %@
unarchived version of CacheDeleteRecentInfo (%@) is incompatible with current version (%d)
Unable to make data from %@ : %@
Failed to create data from: %@
unable to write results to cache file: %@: %@
%@ : %d : %@
no result for %@, setting to zero
parameter error (volume). mInfo: %@
bad key in amounts dictionary: %@
bad value in amounts dictionary: %@
Updating cache for service: %@, volume: %@, amounts: %@
Updating service info amount: %@, serviceID: %@, volume: %@, urgency: %@ pushed: %s, timestamp: %f
Periodic Operation: Service %{public}@ is in flight, skipping
Periodic callback firing more than once for service %{public}@
timed out (%llu seconds) waiting for:
%{public}@
parameter error, must supply amount and urgency
     urgency %d, amount : %llu, timestamp: %@
%d CDRecentVolumeInfo unable to validate mount point: %@
CDRecentVolumeInfo initWithCoder: No service dict present, creating new dict for volume: %@
%d NEW updateServiceInfoAmount for %@
%d updateServiceInfoAmount UPDATED %@, old: %@, new: %@
%d updateServiceInfoAmount NO CHANGE for %@ at %d on %@
%d : %s excluding: volume: %@, service: %@, value: %@
%d Unable to validate mount point: %@
%d %s ***** pruning volume: %@, service: %@, value: %@
  timestamp: %@, freespace: %@
   service: %@
Invalid parameter: volume: %@, freespace: %@, threshold: %@
returning: %s, freespace: %llu, cur_freespace: %llu, threshold: %llu, difference(%c): %llu
info is not a dictionary!
Volume became invalid: %{public}@
Failing to create operation: no valid volumes! (%{public}@)
CacheDeleteOperation unable to validate volume: %{public}@
unsupported type for CACHE_DELETE_SERVICES_KEY: %{public}@
filtering for user specified services: %{public}@
removing filtered services: %{public}@
User specified CACHE_DELETE_URGENCY: %{public}@
User specified CACHE_DELETE_URGENCY_LIMIT: %{public}@
Finished operation without firing completion!
processTestFailures: %@
processTestFailures key: %@, val: %@
processTestFailures parameter error, failures: %@
validateDictionaryForXPC Invalid dictionary (%@): %@
Failed to enumerate snapshots for volume %@: %s
Failed to enumerate shapshots for volume %@: %s
fs_snapshot_list failed: %s
CACHE_DELETE_AMOUNT is missing in info: %{public}@
CancelPurge complete (service=%{public}@)
purgeDoneSentinel mkdir failed for %s : %s
purgeDoneSentinel unable to open %s : %s
purgeDoneSentinel Created %s
purgeDoneSentinel Unable to fstat %@ : %s
purgeDoneSentinel ino: %llu
purgeDoneSentinel unlink'd %s : %s
%d sortedPurgeable:
%d batch block returned: %s
%d batch for loop done, proceed: %s
%d Calling block with %lu batch items
No volume name in info dictionary.
Unable to validate volume: %@
user_timeout_seconds: %llu
urgencyLimit: %d, info at start: %{public}@
mainVolume: %{public}@, fstype: %{public}@
beforePurgeEventID: %llu
unable to create sentinel file
statfs failed for "%{public}s" : %s
Created FSEventStream with: %@
unable to create fsEventStream: %s
VOLUMES: %@
Purge satisfied, skipping %@
fsPurge reports %llu purged (%llu total reported, %llu measured) of %llu needed on volume: %{public}@ at urgency: %d by purging volume: %@, ET: %f
fsPurge noting purge on %@ : %@
fsPurge satisfied request: %llu purged (%llu measured) of %llu needed on volume: %@, ET: %f
[Purge goal satisfied by fsPurge for %{public}@, skipping cleanup and services loop
[Purge VERY_LOWDISK]: asking snapshot holders for %llu bytes from %{public}@
[Purge goal satisfied for %{public}@, skipping services loop
Purging %{public}@ at urgency = %d
%d calling batchServicesForVolume: "%@", atUrgency: %d, with services:
%d proceed: %s, batch:
%d proceed: %s, numPlayers: %lu
[Purge Start] aborting, (roundGoal <= 0): %lld, purge_amount_needed: %lld, amountPurged: %lld
[Purge Start] aborting, (_donation <= 0), roundGoal: %lld
[Purge Start](Urgency %d : Round %d) Volume = %{public}@, Goal = %lld, Donation = %llu, Remaining Services:
[Purge Main](Volume: %{public}@, Urgency %d : Round %d) Begin
[Purge Main](Volume: %{public}@, Urgency %d : Round %d) %{public}@ request %llu bytes
[Purge Result](Volume: %{public}@, Urgency %d : Round %d) %{public}@ purged (%llu / %llu) bytes : elapsed time %lfs
** %{public}@ will continue purging at urgency %d on volume: %{public}@
** %{public}@ is disqualified from purging at urgency %d on volume: %{public}@
[Purge Result(tardy!)](Volume: %{public}@, Urgency %d : Round %d) %{public}@ purged (%llu / %llu) bytes : elapsed time %lfs
Purge failed (volume %{public}@ possibly invalid)
[Purge Main](Volume: %{public}@, Urgency %d : Round %d) Waiting for end of round: %llu seconds
[Purge Main](Volume: %{public}@, Urgency %d : Round %d) Timed out waiting for: %{public}@
Timed out with no inFlight list for volume: %{public}@
[Purge Cleanup](Volume: %{public}@, Urgency %d : Round %d) Begin
[Purge Cleanup](Volume: %{public}@, Urgency %d : Round %d) End
%d Retry loop: %s, currentRoundService.count: %lu
%d batch returning %s currentRoundServices count: %lu
%d Batch loop: %s
[Purge End](Volume %{public}@, Urgency %d) finished after %d Rounds (%llu bytes left)
%d Volume loop: %s
%d Urgency Loop [%d] returning: %s
CacheDelete was unable to satisfy the purge request for volume: %{public}@
Purge Result: %{public}llu bytes on: %{public}@
[Purge OneShot](Volume: %{public}@, Urgency %d) Begin
[Purge Result (oneShot)] %{public}@ purged (%llu / %llu) bytes on volume: %{public}@ in %lf seconds
[Purge Result (oneShot, tardy!)] %{public}@ purged (%llu / %llu) bytes on volume: %{public}@ in %lf seconds
Purge oneShot failed (volume %{public}@ was likely invalid)
[Purge OneShot] (Volume: %{public}@, Urgency %d) Timed out waiting for: %{public}@
[Purge OneShot](Volume: %{public}@, Urgency %d) End
Parameter error: service: %{public}@, volume %{public}@
Purge callback firing more than once for service %{public}@ on volume: %{public}@
%{public}@ took %f seconds, purged %llu bytes on volume: %{public}@
fsEventStreamMonitor no semaphore in context: %p
fsEventStreamMonitor sentinel remove event, ID: %llu, fileID: %@, path: %@, mapped: %@
fsEventStreamMonitor: Unexpected fsgetpath error: %{public}s
fsEventStreamMonitor: fsgetpath() was successful (%zd: %s) when expected to fail for: %{public}@
%d PurgeableOperation _startOperation query path: %{public}@ for volume: %@, info: %{public}@
Invalid volume parameter, info: %{public}@
NOT using cached purgeable values for %{public}@
%d PurgeableOperation Calling process: %{public}@, refreshAll is %{public}s, servicesToQuery: %{public}@
%d PurgeableOperation will query: %@
%d self.urgency: %d, self.urgencyLimit: %d
Service %{public}@ is still in-flight!
%{public}@ took %f seconds for Calling process: %{public}@, on volume: %{public}@, returned: %{public}@
Purgeable callback firing more than once for service %{public}@
%{public}@ returned an invalid CACHE_DELETE_AMOUNT, using zero
%{public}@ returned a negative number (%{public}@), setting its result to zero. Please file a bug report, including a sysdiagnose.
%{public}@ returned null result
dispatch_group_wait timed out after %d seconds, %srefreshing all services. Volumes: %{public}@, services in flight:
dispatch_group_wait_timeout_leave, service inFlight: %{public}@
[%{public}@] no servicesToQuery. refreshAll: %s
PurgeableOperation result: %{public}@
No Service ID! info dictionary: %@
%@ servicesProvided: %@
%@ : CACHE_DELETE_SERVICES value is not an array: %@
%@ doesPurge: %s
%@ is OPT_OUT_QUOTA_EVENTS service
%@ is MULTI_USER_MODE_ONLY service
%@ is DO_NOT_QUERY service
%@ desiredNotifications: %@
drainPurgeQueue %@ QOS: %u
dequeuePurge executing deferred purge for service %@ at urgency %d : %@
dequeuePurge %@ [%p] no purges queued
%@ servicePurgeable returned
Parameter error: info: %@, reply: %@
%@ [%p] queuing purge at urgency %d, info: %@
%@ [%p] dropping purge of urgency %d, amount %llu
%@ [%p] is enqueueing a purge of urgency %d amount %llu at index %lu
%@ [%p] is NOT inFlight, draining the purge queue: %@
%@ [%p] not purging, it has a pending purge (urgency=%d) enqueued already, skipping
ServiceCancelPurge failed: %@
ServiceNotify failed: %@
%@: obtainXPCConnection callback fired more than once for %@!
%@: failed to respond after %llu seconds, deleted is dirty for this reason.
Connecting to %@
%@: remoteObjectProxyWithErrorHandler error: %@
%@: Received an error after the request succeeded! error: %@
%@: Successful Request
%@: Received completion after we sent a callback! Success = %d
%@: obtainXPCConnection failed to get a connection: %@
%@: invalidate and connection is nil!
watchdog timer is nil, self: %p, timer: %p
Connection to %@ was invalidated.
CacheDeleteDaemonVolume volumeWithPath Unable to validate mount point for: %@
CacheDeleteDaemonVolume volumeWithPath: Unable to create a CacheDeleteDaemonVolume from %@
CacheDeleteDaemonVolume invalidateVolumesCache
beginExtensionRequestWithInputItems callback called multiple (%d) times!
BeginExtensionRequestWithInputItems returned after self went away (ID=%@)!
Unable to get xpc connection from app extension context for app extension service %@
Unable to get extension context for app extension service %@
hostExtensionContext for service %@ has no connection
Failed to create an XPC Connection to service %@: %s
Pinging heartbeat connection for service %@
Heartbeat established for service %@
Establishing heartbeat to service %@
Failed to create a heartbeat connection for service %@
Heartbeat lost for service %@
Heartbeat connection is dead for %@, unable to obtain XPC connection
Failed to create an XPC Connection to anonymous endpoint %@: %s
CacheDelete
CacheDeleteClientProtocol
CacheDeletePublicClientProtocol
CacheDeleteServiceProvider
CDRecentInfo
NSSecureCoding
NSCoding
NSCopying
CacheDeleteAnalytics
CDResult
CDPeriodicOperationResult
CDPurgeOperationResult
SplunkLogger
NSURLSessionDelegate
NSObject
CDPurgeableResultCache
CacheDeletePeriodicOperation
CacheDeleteOperation
CDRecentServiceInfo
CDRecentVolumeInfo
CacheDeleteAsyncTimeoutFlag
CDPurgeableOperationResult
CDPeriodicServiceRequestResult
CDPurgeServiceRequestResult
CDPurgeableServiceRequestResult
CacheDeleteSnapshotInfo
Snapshots
CacheDeletePurgeOperation
CacheDeletePurgeableOperation
CDServiceRequestResult
purgeOP
CDService
CacheDeleteServiceProtocol
CDXPCService
CacheDeleteDaemonVolume
CDAppExtensionService
Daemon
CDNamedXPCService
CDAnonymousXPCService
@16@0:8
v48@0:8@16@24@32@?40
v32@0:8@16@?24
v24@0:8@16
v32@0:8@16@24
v32@0:8@16i24B28
v48@0:8@"NSString"16@"NSXPCListenerEndpoint"24@"NSDictionary"32@?<v@?@"NSDictionary"@"NSError">40
v32@0:8@"NSDictionary"16@?<v@?@"NSDictionary">24
v24@0:8@"NSDictionary"16
v32@0:8@"NSDictionary"16@"NSString"24
v32@0:8@"NSString"16@?<v@?@>24
v32@0:8@"NSString"16i24B28
v36@0:8@16i24@?28
v36@0:8@"NSString"16i24@?<v@?@"NSNumber"@"NSError">28
@24@0:8@16
@"<CDService>"24@0:8@"NSString"16
v16@0:8
v40@0:8@16@24@32
{VolumeThresholdsAndGoals=QQQQ}24@0:8@16
@40@0:8@16@24@?32
B24@0:8@16
v44@0:8@16@24I32@?36
@48@0:8@16@24@32@?40
v40@0:8I16I20@24@?32
v52@0:8@16@24@32@40B48
v36@0:8@16@24B32
B32@0:8@16@24
v24@0:8@?16
B16@0:8
Q16@0:8
v24@0:8Q16
@"NSObject<OS_dispatch_queue>"
@"CacheDeleteListener"
@"NSObject<OS_dispatch_source>"
@"NSURL"
@"NSMutableDictionary"
@"NSUserDefaults"
@"NSMutableSet"
@"NSDictionary"
@"CDPurgeableResultCache"
@"CacheDeleteAnalytics"
@"NSPointerArray"
v24@0:8@"NSCoder"16
@24@0:8@"NSCoder"16
@24@0:8^{_NSZone=}16
B36@0:8@16@24i32
@28@0:8@16i24
@32@0:8@16i24B28
q24@0:8@16
B32@0:8q16@24
B60@0:8@16@24@32i40d44@52
@36@0:8@16@24i32
@"NSNumber"
@32@0:8@16@24
d28@0:8d16i24
v28@0:8@16B24
d24@0:8Q16
d32@0:8Q16Q24
v32@0:8@16d24
r*20@0:8i16
r*24@0:8d16
@20@0:8B16
@"<CDPurgeableResultCache>"
@"<CacheDeleteServiceProvider>"
d16@0:8
v20@0:8B16
@"NSArray"
@"NSMutableArray"
@40@0:8@16Q24Q32
i16@0:8
v20@0:8i16
#16@0:8
@24@0:8:16
@32@0:8:16@24
@40@0:8:16@24@32
B24@0:8#16
B24@0:8:16
Vv16@0:8
^{_NSZone=}16@0:8
B24@0:8@"Protocol"16
@"NSString"16@0:8
v40@0:8@16@24@?32
v32@0:8@"NSURLSession"16@"NSError"24
v40@0:8@"NSURLSession"16@"NSURLAuthenticationChallenge"24@?<v@?q@"NSURLCredential">32
v24@0:8@"NSURLSession"16
@"NSString"
@24@0:8Q16
@20@0:8i16
@40@0:8@16i24B28@32
@"NSDictionary"20@0:8i16
@"NSDictionary"32@0:8@"CacheDeleteDaemonVolume"16i24B28
@"NSDictionary"28@0:8@"CacheDeleteDaemonVolume"16i24
@"NSDictionary"40@0:8@"NSArray"16i24B28@"NSString"32
q24@0:8@"CacheDeleteDaemonVolume"16
v40@0:8@"NSString"16@"CacheDeleteDaemonVolume"24@"NSDictionary"32
v24@0:8@"NSString"16
v24@0:8@"NSSet"16
v24@0:8@"CacheDeleteDaemonVolume"16
@"NSSet"32@0:8@"CacheDeleteDaemonVolume"16@"NSNumber"24
v24@0:8@?<v@?B>16
@24@0:8i16B20
v36@0:8@16@24i32
@?16@0:8
@"CDRecentInfo"
v24@0:8@?<v@?@"NSDictionary">16
@"<CDPurgeableResultCache>"16@0:8
v24@0:8@"<CDPurgeableResultCache>"16
@"NSArray"16@0:8
v24@0:8@"NSArray"16
@40@0:8@16@24@32
@"CDPeriodicOperationResult"
@44@0:8@16i24d28@36
B28@0:8d16i24
B44@0:8@16i24d28@36
{?="urgencies"[4{?="timestamp"d"amount"Q}]"non_purgeable_amount"Q"data"[0C]}
B52@0:8@16@24i32d36@44
B28@0:8@16i24
q16@0:8
v24@0:8q16
@"CacheDeleteDaemonVolume"
@"NSDate"
@32@0:8@16Q24
v52@0:8Q16i24@28@36@?44
@28@0:8B16^Q20
v48@0:8@16i24@28i36@?40
Q32@0:8@16i24B28
v76@0:8@16@24i32Q36@44Q52@60@68
v68@0:8@16@24i32Q36@44@52@?60
@"CDPurgeOperationResult"
@"CDPurgeableOperationResult"
@"NSCountedSet"
@36@0:8i16@20@?28
v36@0:8i16@20@?28
v36@0:8i16@"NSDictionary"20@?<v@?@"NSDictionary">28
v24@0:8@?<v@?>16
v32@0:8@"NSDictionary"16@?<v@?>24
@"NSSet"
v32@0:8@?16@?24
@"NSXPCConnection"
@28@0:8@16B24
@"NSUUID"
@"NSExtension"
@"<NSCopying>"
@"NSXPCListenerEndpoint"
