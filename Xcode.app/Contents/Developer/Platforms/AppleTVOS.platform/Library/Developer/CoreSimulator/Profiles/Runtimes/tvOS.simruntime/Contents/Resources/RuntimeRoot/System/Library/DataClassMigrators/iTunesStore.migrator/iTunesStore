SSDeviceType
buildVersion
iTunes Store
%{public}@: didMigrateBackupFromDifferentDevice = %d | didRestoreFromBackup = %d | didRestoreFromCloudBackup = %d | didUpgrade = %d
{public}
com.apple.AppleMediaServices
AMSDeviceBiometricsState
[%{public}@] - Biometrics: Found AMS biometric state: %@
BiometricState
[%{public}@] - Biometrics: Found Legacy biometric state: %@
BiometricStateDidMigrate
[%{public}@] - Biometrics: Did migrate to AMS: %@
[%{public}@] - Biometrics: OS upgrade, is major version update? %{public}@
[%{public}@] - Biometrics: Major OS upgrade, setting Legacy biometric state to UNSET
[%{public}@] - Biometrics: Major OS upgrade, migrating AMS biometric state to UNSET
[%{public}@] - Biometrics: Migrating legacy StoreServices biometric state (%{public}@) to AMS biometric state (%{public}@)
[%{public}@] - Biometrics: Not an OS upgrade, setting AMS biometric state to ENABLED
[%{public}@] - Biometrics: Not an OS upgrade, setting Legacy biometric state to ENABLED
[%{public}@] - Biometrics: Not an OS upgrade, setting Legacy biometric state enabled to ENABLED
BiometricStateEnabled
[%{public}@]: Attempting to migrate itunes password profile settings
MCFeatureITunesStorePasswordEntryForced
MCProfileConnection
[%{public}@]: Updating forced itunes password setting to no
[%{public}@]: Deleting weak token cookie
mz_at0
[%{public}@]: Deleting session cookies
[@%{public}@]: Error deleting session cookies. error = %{public}@
DidShowHardRestoreFailureDialog
RestoreAccountIDs
RestoreFailRetryCount
RestoreItemKinds
RestoreSoftFailRetryCount
RestoreStoreFrontIDs
RestoreSuppressTermsAndConditions
UnsignedBags
InitiateSessionURL
https://init.itunes.apple.com/bag.xml?ix=6&custombag=true
com.apple.mobileipod
HasMigratedMusicAllowsCellularData
MusicAllowsCellularData
AllowAutoDownloadOnCellular
[%{public}@]: Scheduling AppStore Migrator
ASDMigrationRequestOptions
ASDMigrationRequest
[%{public}@]: AppStore Migrator scheduled: %{public}@
v16@?0@"NSError"8
[%{public}@]: Scheduling iTunes Migrator
[%{public}@]: iTunes Migrator Scheduled
v20@?0B8@"NSError"12
%{public}@: Repairing accounts BEFORE migrating accounts.
%{public}@: Repairing accounts AFTER migrating accounts.
%{public}@: No accounts were migrated, so we won't do a second cleanup pass.
%{public}@: Starting migration to iTunes Feature Enabler.
v24@?0@"NSSet"8@"NSError"16
v8@?0
migrator
com.apple.itunesstored
%{public}@: Cleaning follow ups
%{public}@: Clearing automatic download kinds after restoring a backup from a different device.
%{public}@: Checking to see if we need to enable automatic downloads for audiobooks.
%{public}@: Enabling automatic downloads for audiobooks since it's enabled for eBooks.
%{public}@: Automatic downloads for audiobooks are already enabled.
%{public}@: Not enabling automatic downloads for audiobooks since it's not enabled for eBooks.
%{public}@: Encrypting account flags if necessary.
%{public}@: No accounts to encrypt.
@"NSString"16@?0@"ACAccount"8
%{public}@: Encrypting account flags for accounts: %{public}@
%{public}@: Not encrypting flag for local account. account = %{public}@
%{public}@: Encrypted account flags, saving account. account = %{public}@
%{public}@: Encrypting account flags failed or they were already encrypted. account = %{public}@
%{public}@: Error configuration regular expression parser: %{public}@
%{public}@: Updating from %{public}@ with major version number %{public}@
BuildVersion
%{public}@: Updating to %{public}@ with major version number %{public}@
%{public}@: Is major version update: %{public}@
%{public}@: Starting migration to Accounts.framework.
%{public}@: There's no active account. Skipping migration of the AutomaticDownloadKinds default.
AutomaticDownloadKinds
%{public}@: Found a value for AutomaticDownloadKinds. Migrating it to the active account.
%{public}@: Failed to save the active account after migrating the AutomaticDownloadKinds default. account = %{public}@ | error = %{public}@
%{public}@: Success migrating the value for AutomaticDownloadKinds to the active account.
%{public}@: We didn't find a value for AutomaticDownloadKinds that needs to be migrated.
%{public}@: Migrating sandbox accounts.
scope
%{public}@: Migrating a sandbox account to the new account type. account = %{public}@
%{public}@: Failed to migrate the sandbox account because a sandbox version of it already exists. We'll remove it instead.
%{public}@: We failed to remove the duplicate, unmigrated sandbox account. error = %{public}@
%{public}@: Failed to migrate the sandbox account. error = %{public}@
%{public}@: Finished migrating sandbox accounts.
%{public}@: There's no active account. Skipping migration of ServerPrompt defaults.
ServerPrompt-%@
%{public}@: Found a value for %@. Migrating it to the active account.
ServerPromptDate-%@
%{public}@: Failed to save the active account after migrating ServerPrompt defaults to it. error = %{public}@
%{public}@: Success saving the active account after migrating ServerPrompt defaults to it.
%{public}@: Sending request to post push token
%{public}@: Failed to remove a PET from an account. account = %{public}@ | error = %{public}@
originalUsername
%{public}@: %{public}@ was broken or empty, so we removed it.
%{public}@: %{public}@ was broken or empty, but we failed to remove it. error = %{public}@
%{public}@: At the beginning of the cleanup, our active account was %{public}@.
B16@?0@"SSAccount"8
%{public}@: We didn't start the cleanup process with a valid active account. Deactivating all accounts.
%{public}@: There are no accounts we need to deactivate.
%{public}@: Successfully deactivated %{public}@.
%{public}@: Failed to deactivate %{public}@. error = %@
q24@?0@"SSAccount"8@"SSAccount"16
%{public}@: Removed a duplicate of %{public}@. duplicate = %{public}@
%{public}@: Failed to remove a duplicate of %{public}@. duplicate = %{public}@ | error = %@
%{public}@: Successfully merged duplicate accounts. The remaining account is %{public}@.
%{public}@: Failed to merge duplicate accounts. masterAccount = %{public}@ | error = %{public}@
@"NSString"16@?0@"SSAccount"8
%{public}@: currentAccounts = %{public}@
%{public}@: Found a DSID that's being stored as a NSString. Attempting to repair it. account = %{public}@
%{public}@: Failed to save the account after converting the NSString to a NSNumber. error = %{public}@
%{public}@: Failed to convert %{public}@ to a NSNumber.
sharedAccountsMigrationConfig
sharedConfig
shouldLog
OSLogObject
didMigrateBackupFromDifferentDevice
didRestoreFromBackup
didRestoreFromCloudBackup
didUpgrade
shouldLogToDisk
stringByReplacingOccurrencesOfString:withString:
_performCookieStorageMigration
_logConfig
numberWithLong:
numberWithBool:
_isMajorVersionUpdate
sharedConnection
isAppRatingLimitInEffect
setBoolValue:forSetting:
sharedStorage
useNewCookieStorage
ams_sharedAccountStore
dictionaryWithObjects:forKeys:count:
ams_removeCookiesMatchingProperties:error:
dictionaryWithObject:forKey:
removeCookiesWithProperties:
_removePasswordEquivalentTokensFromAccounts
isEqualToString:
numberWithUnsignedChar:
initWithMigrationType:
initWithOptions:
startWithCompletionBlock:
performMigration:completionBlock:
_repairAccounts
_migrateAccountsToAccountsFramework
_migrateSandboxAccounts
migrate
_migrateAutomaticDownloadKindsDefaultToActiveAccount
_migrateServerPromptDefaultsToActiveAccount
_encryptAccountFlags
_cleanupAutomaticDownloadKinds
_postPushToken
_cleanupFollowUps
migratedDeviceOffers
sharedDataMigrationConfig
ams_activeiTunesAccount
date
bagKeySet
bagSubProfile
bagSubProfileVersion
registerBagKeySet:forProfile:profileVersion:
bagForProfile:profileVersion:
initWithAccount:bag:
setLightweightCheckOnly:
perform
setMigratedDeviceOffers:
timeIntervalSinceDate:
addFinishBlock:
setCategory:
setSubsystem:
copy
currentDevice
setAutomaticDownloadKinds:withCompletionBlock:
automaticDownloadKinds
containsObject:
initWithObjects:
unionAutomaticDownloadKinds:withCompletionBlock:
ams_iTunesAccounts
count
hashedDescription
ams_mapWithTransform:
countByEnumeratingWithState:objects:count:
ams_isLocalAccount
ams_encryptAccountFlags
ams_saveAccount:verifyCredentials:
regularExpressionWithPattern:options:error:
standardUserDefaults
objectForKey:
length
matchesInString:options:range:
objectAtIndexedSubscript:
range
substringWithRange:
migrateToAccountsFramework
defaultStore
activeAccount
setAutomaticDownloadKinds:
saveAccount:verifyCredentials:error:
sharedAccountsConfig
accountTypeWithAccountTypeIdentifier:
accountsWithAccountType:options:error:
objectForKeyedSubscript:
unsignedIntegerValue
setAccountType:
saveVerifiedAccount:error:
domain
code
removeAccount:withCompletionHandler:
stringWithFormat:
setDisplayedServerPrompt:withIdentifier:
setLastAttemptDate:forServerPromptWithIdentifier:
performCookieStorageMigration
setMigratedToNewCookieStorage:
startWithCompletion:
accounts
passwordEquivalentToken
setPasswordEquivalentToken:
isLocalAccount
backingAccount
uniqueIdentifier
isEqualToNumber:
accountProperties
removeAccount:error:
firstObject
isDuplicate:
addObject:
_mergeDuplicateAccounts:inStore:
isActive
_ss_arrayByRemovingObjectsPassingTest:
identifier
setActive:
allKeys
isEqual:
setObject:forKeyedSubscript:
username
setUsername:
creationDate
compare:
sortedArrayUsingComparator:
_ss_firstObjectPassingTest:
reverseObjectEnumerator
allObjects
_copyAccountPropertiesIfNeededFromAccount:toAccount:
_ss_map:
sharedAccountsMigrationConfigOversize
_cleanupDuplicateAccounts
_firstActiveAccountInAccounts:
_repairBrokenAccounts
_cleanupBrokenAccounts:emptyAccounts:
_cleanupMultipleActiveAccountsWithPreferredActiveAccount:
_repairAccountsWithStringDSID
accountPropertyForKey:
setUniqueIdentifier:
hasBrokenDSID
repairAccountWithBrokenDSID:
dataClassName
performMigration
%{public}@: didMigrateBackupFromDifferentDevice = %d | didRestoreFromBackup = %d | didRestoreFromCloudBackup = %d | didUpgrade = %d
[%{public}@] - Biometrics: Found AMS biometric state: %@
[%{public}@] - Biometrics: Found Legacy biometric state: %@
[%{public}@] - Biometrics: Did migrate to AMS: %@
[%{public}@] - Biometrics: OS upgrade, is major version update? %{public}@
[%{public}@] - Biometrics: Major OS upgrade, setting Legacy biometric state to UNSET
[%{public}@] - Biometrics: Major OS upgrade, migrating AMS biometric state to UNSET
[%{public}@] - Biometrics: Migrating legacy StoreServices biometric state (%{public}@) to AMS biometric state (%{public}@)
[%{public}@] - Biometrics: Not an OS upgrade, setting AMS biometric state to ENABLED
[%{public}@] - Biometrics: Not an OS upgrade, setting Legacy biometric state to ENABLED
[%{public}@] - Biometrics: Not an OS upgrade, setting Legacy biometric state enabled to ENABLED
[%{public}@]: Attempting to migrate itunes password profile settings
[%{public}@]: Updating forced itunes password setting to no
[%{public}@]: Deleting weak token cookie
[%{public}@]: Deleting session cookies
[@%{public}@]: Error deleting session cookies. error = %{public}@
[%{public}@]: Scheduling AppStore Migrator
[%{public}@]: AppStore Migrator scheduled: %{public}@
[%{public}@]: Scheduling iTunes Migrator
[%{public}@]: iTunes Migrator Scheduled
%{public}@: Repairing accounts BEFORE migrating accounts.
%{public}@: Repairing accounts AFTER migrating accounts.
%{public}@: No accounts were migrated, so we won't do a second cleanup pass.
%{public}@: Starting migration to iTunes Feature Enabler.
%{public}@: [%{public}@] %{public}@ skipping. We already migrated.
%{public}@: [%{public}@] %{public}@ skipping. No account is signed in during upgrade.
%{public}@: [%{public}@] %{public}@ started.
%{public}@: [%{public}@] %{public}@ Error running the device offer registration. error = %{public}@.
%{public}@: [%{public}@] %{public}@ finished. executionTime = %f
%{public}@: Cleaning follow ups
%{public}@: Clearing automatic download kinds after restoring a backup from a different device.
%{public}@: Checking to see if we need to enable automatic downloads for audiobooks.
%{public}@: Enabling automatic downloads for audiobooks since it's enabled for eBooks.
%{public}@: Automatic downloads for audiobooks are already enabled.
%{public}@: Not enabling automatic downloads for audiobooks since it's not enabled for eBooks.
%{public}@: Encrypting account flags if necessary.
%{public}@: No accounts to encrypt.
%{public}@: Encrypting account flags for accounts: %{public}@
%{public}@: Not encrypting flag for local account. account = %{public}@
%{public}@: Encrypted account flags, saving account. account = %{public}@
%{public}@: Encrypting account flags failed or they were already encrypted. account = %{public}@
%{public}@: Error configuration regular expression parser: %{public}@
%{public}@: Updating from %{public}@ with major version number %{public}@
%{public}@: Updating to %{public}@ with major version number %{public}@
%{public}@: Is major version update: %{public}@
%{public}@: Starting migration to Accounts.framework.
%{public}@: There's no active account. Skipping migration of the AutomaticDownloadKinds default.
%{public}@: Found a value for AutomaticDownloadKinds. Migrating it to the active account.
%{public}@: Failed to save the active account after migrating the AutomaticDownloadKinds default. account = %{public}@ | error = %{public}@
%{public}@: Success migrating the value for AutomaticDownloadKinds to the active account.
%{public}@: We didn't find a value for AutomaticDownloadKinds that needs to be migrated.
%{public}@: Migrating sandbox accounts.
%{public}@: Migrating a sandbox account to the new account type. account = %{public}@
%{public}@: Failed to migrate the sandbox account because a sandbox version of it already exists. We'll remove it instead.
%{public}@: We failed to remove the duplicate, unmigrated sandbox account. error = %{public}@
%{public}@: Failed to migrate the sandbox account. error = %{public}@
%{public}@: Finished migrating sandbox accounts.
%{public}@: There's no active account. Skipping migration of ServerPrompt defaults.
%{public}@: Found a value for %@. Migrating it to the active account.
%{public}@: Failed to save the active account after migrating ServerPrompt defaults to it. error = %{public}@
%{public}@: Success saving the active account after migrating ServerPrompt defaults to it.
%{public}@: Beginning migration from SSVCookieStorage to AppleMediaServices.
%{public}@: Finished migration from SSVCookieStorage to AppleMediaServices.
%{public}@: Sending request to post push token
%{public}@: Failed to remove a PET from an account. account = %{public}@ | error = %{public}@
%{public}@: %{public}@ was broken or empty, so we removed it.
%{public}@: %{public}@ was broken or empty, but we failed to remove it. error = %{public}@
%{public}@: At the beginning of the cleanup, our active account was %{public}@.
%{public}@: We didn't start the cleanup process with a valid active account. Deactivating all accounts.
%{public}@: There are no accounts we need to deactivate.
%{public}@: Successfully deactivated %{public}@.
%{public}@: Failed to deactivate %{public}@. error = %@
%{public}@: Removed a duplicate of %{public}@. duplicate = %{public}@
%{public}@: Failed to remove a duplicate of %{public}@. duplicate = %{public}@ | error = %@
%{public}@: Successfully merged duplicate accounts. The remaining account is %{public}@.
%{public}@: Failed to merge duplicate accounts. masterAccount = %{public}@ | error = %{public}@
%{public}@: currentAccounts = %{public}@
%{public}@: Found a DSID that's being stored as a NSString. Attempting to repair it. account = %{public}@
%{public}@: Failed to save the account after converting the NSString to a NSNumber. error = %{public}@
%{public}@: Failed to convert %{public}@ to a NSNumber.
ISMMigrator
@16@0:8
v24@0:8B16B20
v16@0:8
v24@0:8@16
B32@0:8@16@24
@24@0:8@16
v32@0:8@16@24
B16@0:8
