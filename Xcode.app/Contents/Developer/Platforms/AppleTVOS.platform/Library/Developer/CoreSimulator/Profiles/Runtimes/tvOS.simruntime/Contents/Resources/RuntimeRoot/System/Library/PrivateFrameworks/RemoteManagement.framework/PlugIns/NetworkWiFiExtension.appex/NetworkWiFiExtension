NetworkWiFiAdapter
NetworkWiFiApplicator
NetworkWiFiConfigurationMonitor
NetworkWiFiPolicy
NSSecureCoding
NSCoding
NetworkWiFiRequestHandler
NSExtensionRequestHandling
NSObject
addNetworkWiFiWithIdentifier:declaration:error:
removeNetworkWiFiWithIdentifier:error:
initWithAdapter:
init
_currentPolicyByKey
allKeys
dictionaryWithValuesForKeys:
_removePolicyByKey:
_addConfigurationByKey:
standardUserDefaults
objectForKey:
setWithObjects:
unarchivedObjectOfClasses:fromData:error:
copy
archivedDataWithRootObject:requiringSecureCoding:error:
setObject:forKey:
content
loadData:serializationType:error:
payloadSSIDSTR
declarationIdentifier
account
identifier
initWithNetworkWiFiIdentifier:accountIdentifier:networkWiFiDeclaration:
adapter
_addOrUpdateUserDefaultsWithPolicy:
enumerateKeysAndObjectsUsingBlock:
networkWiFiIdentifier
networkWiFiDeclaration
_removePolicyFromUserDefaultsWithKey:
mutableCopy
setObject:forKeyedSubscript:
_setCurrentPolicyByKey:
removeObjectForKey:
applyConfigurations:
.cxx_destruct
_defaultsLock
_adapter
count
countByEnumeratingWithState:objects:count:
stringWithFormat:
setWithArray:
minusSet:
allObjects
intersectSet:
accountIdentifier
initWithConfigurationRepository:applicator:
lock
unlock
configurationRepository
arrayWithObjects:count:
applicator
objectForKeyedSubscript:
fetchConfigurationsWithTypes:completionHandler:
sharedMonitor
fetchThenApplyConfigurationsWithCompletionHandler:
setConfigurationRepository:
setApplicator:
_configurationRepositoryLock
_configurationRepository
_applicator
decodeObjectOfClass:forKey:
failWithError:
createInternalError
encodeObject:forKey:
serializeAsDataWithType:error:
isEqualToNetworkWiFiPolicy:
hash
isEqualToString:
declarationServerToken
supportsSecureCoding
encodeWithCoder:
initWithCoder:
isEqual:
_accountIdentifier
_networkWiFiDeclaration
_networkWiFiIdentifier
completeRequestReturningItems:completionHandler:
class
self
performSelector:
performSelector:withObject:
performSelector:withObject:withObject:
isProxy
isKindOfClass:
isMemberOfClass:
conformsToProtocol:
respondsToSelector:
retain
release
autorelease
retainCount
zone
superclass
description
debugDescription
beginRequestWithExtensionContext:
B40@0:8@16@24^@32
B32@0:8@16^@24
@16@0:8
@24@0:8@16
v24@0:8@16
^{NSDictionary=#}16@0:8
v24@0:8^{NSDictionary=#}16
v16@0:8
@"NSObject"
@"NetworkWiFiAdapter"
@32@0:8@16@24
v24@0:8@?16
@"NSLock"
@"RMConfigurationRepository"
@"NetworkWiFiApplicator"
B16@0:8
v24@0:8@"NSCoder"16
@24@0:8@"NSCoder"16
@40@0:8@16@24@32
B24@0:8@16
Q16@0:8
@"NSString"
@"RMModelNetworkWiFiDeclaration"
#16@0:8
@24@0:8:16
@32@0:8:16@24
@40@0:8:16@24@32
B24@0:8#16
B24@0:8:16
Vv16@0:8
^{_NSZone=}16@0:8
B24@0:8@"Protocol"16
@"NSString"16@0:8
v24@0:8@"NSExtensionContext"16
policyByKey
v32@?0@"NSString"8@"RMConfiguration"16^B24
v32@?0@"NSString"8@"NetworkWiFiPolicy"16^B24
adapter
T@"NetworkWiFiAdapter",R,N,V_adapter
%@/%@
v8@?0
com.apple.RemoteManagement.NetworkWiFiExtension.fetchingPolicies
v24@?0@"NSDictionary"8@"NSError"16
sharedMonitor
T@"NetworkWiFiConfigurationMonitor",R,N
configurationRepository
T@"RMConfigurationRepository",&,N,V_configurationRepository
applicator
T@"NetworkWiFiApplicator",&,N,V_applicator
accountIdentifier
networkWiFiDeclaration
networkWiFiIdentifier
supportsSecureCoding
TB,R
T@"NSString",R,C,N,V_accountIdentifier
T@"RMModelNetworkWiFiDeclaration",R,N,V_networkWiFiDeclaration
T@"NSString",R,C,N,V_networkWiFiIdentifier
hash
TQ,R
superclass
T#,R
description
T@"NSString",R,C
debugDescription
Unable to deserialize network wifi policy from user defaults: %{public}@
Unable to serialize network wifi policy to user defaults: %{public}@
Could not deserialize network wifi declaration %{public}@: %{public}@
Network wifi declaration %{public}@ is missing SSID_STR, which is currently required
Adding network WiFi %{public}@ (%{public}@)
Added network WiFi %{public}@ (%{public}@)
Failed to add network WiFi %{public}@ (%{public}@): %{public}@
Removing network WiFi %{public}@ (%{public}@)
Removed network WiFi %{public}@ (%{public}@)
@(#)PROGRAM:NetworkWiFiExtension  PROJECT:RemoteManagement-2.0
<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE plist PUBLIC "-//Apple//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd">
<plist version="1.0">
<dict>
<key>com.apple.private.remotemanagement.configuration-subscriber</key>
<true/>
<key>com.apple.security.exception.mach-lookup.global-name</key>
<array>
<string>com.apple.remotemanagementd</string>
</array>
<key>com.apple.wifi.manager-access</key>
<true/>
</dict>
</plist>
