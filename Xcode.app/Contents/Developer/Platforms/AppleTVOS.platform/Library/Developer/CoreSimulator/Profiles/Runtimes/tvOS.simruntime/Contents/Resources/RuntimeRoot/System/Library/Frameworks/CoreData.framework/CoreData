@(#)PROGRAM:CoreData  PROJECT:PersistenceFramework-1148
62a8480cd24caef341b5a6b5c6e848c4
333333
~~[[NO CHANGE]]~~
constantValue
NSPredicates and NSExpressions cannot be encoded by non-keyed archivers
NSConstantValue_XPCStoreObjectIDs
NSConstantValue
NSPredicates and NSExpressions cannot be decoded by non-keyed archivers
_NSPredicateUtilities
root
entityName
objectsToInsert
inputStream
resultType
secure
Unsupported Expression with the XPC Store: %@
predicate
columnsToUpdate
nullValueCount
includeSubEntities
Unsupported Expression for the XPC Store: %@
fetch
token
date
delete
transactionFromToken
fetchLimit
fetchOffset
fetchBatchSize
percentageOfDB
Someone tried to log something but failed because they didn't tell me what to log.
CoreData: XPC: %@
_NSXPCStoreObjectIDArrayConstantValueExpression
exception name
exception reason
controlled exception
Error: Exception raised: %@
Error: Callstack: %@
Error: UserInfo: %@
exception info
CoreData: XPC: Suspect response from server (bad size)
Reason
CoreData: XPC: Suspect response from server (no result)
CoreData: XPC: Suspect response from server (missing size)
name
CoreData: XPC: Suspect response from server (not enough room for fetch results header)
CoreData: XPC: Suspect response from server (not enough room for buffers and sizes)
NSXPCStoreDelegate
/dev/null/CDInternalXPCStore
CoreData: XPC: Suspect response from server (not enough room for first row)
Decoding failed: No oids.
Decoding failed: No rows.
CoreData: XPC: Suspect response from server (not enough room for row %d)
CoreData: XPC: Suspect response from server (remaining space for %d smaller than estimated size)
CoreData: XPC: Suspect response from server (remaining space for %@ insufficient (1))
CoreData: XPC: Suspect response from server (remaining space for %@ insufficient (2))
CoreData: XPC: Suspect response from server (remaining space for %@ insufficient (3))
CoreData: XPC: Suspect response from server (remaining space for %@ insufficient (4))
NSRemotePersistentStoreDidChangeNotification
skipModelCheck
NSXPCStoreSkipRetryWaitKey
com.apple.CoreData.XPCDebug
current
unpinned
serviceName
NSXPCStoreServerEndpointFactory
NSXPCStoreListenerEndpoint
No service name, endpoint factory, or endpoint supplied
PF_DEFAULT_CONFIGURATION_NAME
XPC store does not currently allow models containing ordered relationships
Unable to load model
NSPersistentHistoryTrackingKey must be a NSNumber
Unable to initialize client
sendMessage: failed #%d
Unable to sendMessage: to server
Got reply pointer: %p
Got reply: %@
Unable to connect to server with options %@
Unable to send to server; failed after %d attempts.
Problem
reply
error
 Request failed: (%@).
Send failed with no error; probably something wrong here
 Got success, but also an error. Ignoring the error (%@).
sendMessage: apparently succeeded, but no response or error
No data, cause unknown
CoreData: XPC: Can't move an XPC store from the client
CoreData: XPC: Can't change store identifier from the client
NSXPCStorePostUpdateNotifications
notificationName
Failed to enable remote store notifications: Can't get notification name. %@
Failed to enable remote store notifications: %@
NSFileBackedFuturePathKey
reason
missing faults directory URL in store whose model contains faults
NSMetadataKey
Server did not return model version info. (Unsupported configuration.)
Server schema is incompatible and ignore version enabled. (Unsupported configuration.)
Server side store changed, remove and re-add this client store
Unable to load metadata: %@
Unable to decode query generation
Nil result for query generation request
Unable to get query generation: %@
v8@?0
Unable to decode active generations result
Nil result for active generations request
Unable to check for active generations: %@
Unable to release query generation: %@
Attempt to release query generation failed: %@
Attempt to reopen query generation failed: %@
Executing fetch %@
Fetch threw on server (%@)
Fetch retrieved %lu results from server
Fetch retrieved null, error %@
Attempting to resend what looks like it may be a reinsert
Reinsert hit optimistic locking error, will discard and let the next save resolve it.
Something threw out of NSXPCStore executeSaveRequest:, got exception %@
Nil response received
NSFetchRequestExpression is unsupported for the XPC Store
Store Type does not support index tracking
Invalid request type
Something unexpected happened: %@ 
Unexpected number of property values returned from server
Firing fault %@
Returning cached value %@
Retrieved node from server %@
Decoded value for %@ - %@ : %@
Got a bad relationship value for %@, %@ (%@)
source
relationship
Wrong number of object IDs returned from server
Wrong number of object IDs returned from server (2)
com.apple.internetaccounts
com.apple.preferences.internetaccounts.remoteservices
objectID
Unable to decode history token
Nil result for history token request - %@
%@/%@
<NSPersistentHistoryTransaction: %lld, %@, %@, %@, %@, %@, %@>
NSPersistentHistoryTransactionStoreID
NSPersistentHistoryTransactionRowID
NSPersistentHistoryTransactionTimestamp
NSPersistentHistoryTransactionChangeSet
NSPersistentHistoryTransactionBundleID
NSPersistentHistoryTransactionProcessID
NSPersistentHistoryTransactionContextName
NSPersistentHistoryTransactionAuthor
NSPersistentHistoryTransactionQueryGen
NSManagedObjectIDURI
NSConnectionContext
PSCKey
XPC: Possible API misuse: Unable to find object for managed object URI %@, returning null instead
XPC: Missing oid uri
NSMOIDArchivingToken escaping un-de-tokenized (secured %d).
v8@?0
com.apple.coredata
unknown
CoreData: %s: %s
warning
annotation
CloudKit
debug
fault
details
%@ only accepts a NSFetchRequest that has the entity set to a Persistent History Entity
self
%@.%@
ANY TRANSACTIONID IN %@
ANY %@ %@ %lld
ANY %@.%@ %@ %f
%@ %@ %lld
_pk %@ %lld
ANY _pk IN %@
%@.%@ %@ %f
%@ %@ %f
NSPersistentHistoryChangeRequest : %@ < %@ - %@-%@> %lu
Delete
Fetch
NSPersistentHistoryChangeRequest : %@ <%@ - %@-%@> limit - %lu offset - %lu batchSize - %lu, resultType - %lu, fetchRequest - %@
Mismatched result types during aggregation of history status results
Results
Mismatched result types during aggregation of history count results
Mismatched result types during aggregation of history object IDs results
History Change Request failed NSPersistentHistoryResultTypeChangesOnly unsupported for multiple stores
NSPersistentHistoryResultTypeChangesOnly unsupported for multiple stores
Mismatched result types during aggregation of history results
timestamp
%s <%p> with @property result: %@
Unable to find a configuration named '%@' in the specified managed object model.
The configuration named '%@' does not contain any entities.
Cannot be used without an instance of %@.
%@: %@ cannot be applied to an entity type'
%@: %@ - Cannot locate value transformer with name '%@'
%@: %@ - Doesn't allow reverse transformation
%@: %@ - Unsupported attribute type (%@)
%@: %@ - Value must be an instance of '%@' or '%@' that evalutes to YES or NO using '%@'
%@: %@ - attribute is not optional
%@: %@ - Value for %@ must be an instance of '%@' or '%@' that evalutes to YES or NO using '%@'
%@:%@ - Encryption value should be set via -[NSAttributeDescription allowsCloudEncryption], please remove usage of 'NSPersistentCloudKitContainerEncryptedAttributeKey'
%@:%@ - Partial encryption cannot be used with device-to-device encryption
%@:%@ - Device-to-Device encryption cannot be used with partial encryption
%@: %@
v32@?0@"NSString"8@"NSAttributeDescription"16^B24
%@: %@ - %@
%@:%@
%@:%@ - %@
v32@?0@"NSString"8@"NSRelationshipDescription"16^B24
PFCloudKitModelValidator was handed an entity with unique constraints that aren't attributes or strings: %@ - %@
v32@?0@8Q16^B24
v32@?0@"NSArray"8Q16^B24
%@:%@ - preservesValueInHistoryOnDeletion should be YES
%@: Estimated size %lu bytes
CloudKit integration requires that all relationships have an inverse, the following do not:
v32@?0@"NSString"8Q16^B24
CloudKit integration does not support ordered relationships. The following relationships are marked ordered:
CloudKit integration requires that all attributes be optional, or have a default value set. The following attributes are marked non-optional but do not have a default value:
CloudKit integration requires that all relationships be optional, the following are not:
CloudKit integration does not support all attribute types. The following entities have attributes of an unsupported type:
CloudKit integration requires that the value transformers for transformable attributes are available via +[%@ %@] and allow reverse transformation:
CloudKit integration does not allow relationships to objects that aren't sync'd. The following relationships have destination entities that not in the specified configuration.
CloudKit integration requires that all entities tombstone %@ and %@ on delete if configured. The following entities are not properly configured:
CloudKit integration requires that all entities can be materialized in a CKRecord of less than %lu bytes. The following entities cannot:
The following attributes have invalid values for '%@':
CloudKit integration does not support ignored relationships. The following entities and relationships are marked ignored using '%@':
The following entities have invalid values:
The following attributes have invalid values:
CloudKit integration does not support encrypted relationships. The following entities and relationships are marked with '%@':
The following relationships are configured with unsupported delete rules:
CloudKit integration does not support unique constraints. The following entities are constrained:
Nullify
Deny
cascade
No-Action
routined
NSXPCStoreEntitlementNames
NSXPCStoreDaemonize
NSXPCStoreServiceName
NSXPCStoreListener
Can't create server - misconfigured server : %@ is nil
model
storeURL
application-identifier
Can't create server - misconfigured server : no service name supplied for daemonized server
Options dictionary contains service name and anonymous listener, defaulting to service name
Can't create server - unable to load model
XPC Store Server - Migration keys have been removed from %@
Attempting to create non-mach listener with service name: %@
modelURL
%@: Listening
NSUnderlyingException
%@: Unable to find model
Can't create coordinator - attempting SQLite recovery
Can't create coordinator - due to an error - %@
Unable to load store: %@
 Server Connection interrupted.
v8@?0
 Server Connection invalidated.
%@ - Incoming connection: %@
Unable to create stack
Unable to create connection context
NSConnectionInfo
Starting event handler
XPCStore server handling request: %@
Policy rejected connection from client: %@
Token mismatch
Metadata
Save
Fault
Rel fault
Request notification name
Query generation
Query generation reopen
Query generation release
Batch delete
Persistent history
Persistent history token
Batch update
Batch insert
Query generation active connections
Illegal input: %u from connection %p
SQLite exception on server: %@, recovery to be attempted
SQLite exception on server: %@, no recovery attempt
SQLite exception on server: %@, no recovery attempt (weird)
Unexpected Core Data exception on server: %@
Unexpected exception on server: %@
Unexpected unknown exception on server
Done event handler
request failed, store identifier mismatch
request failed, insufficient permission
request failed, exception raised during processing
SQLite error on server: %@, recovery being attempted
SQLite error on server: %@, no recovery being attempted
request failed (no result, no error)
Reply handler threw: %@, %@, %@
Request failed, threw in request handler logic (check console for details)
CoreData: XPC: Reply handler threw unknown exception.
Request failed, threw in request handler logic (unknown exception)
Sending reply %p, %p
Sent reply
Failed to set query generation on context: %@ -> %@ (%@)
Got oid  request for %@
Returning result %@
NSMetadata
Got save request: %@
Updating metadata
locked
Locking objects :%@
Not locking %@ because it's not in the db
Locking %@
Deleting object :%@
Inserting object with ID %@
Made save request: %@
Unable to unarchive save request with allowed classes: %@
Got relationship fault request: %@
Can't fulfill relationship fault request: can't find query generation: %@
unrecognized query generation
generation
request
Attempting to fire fault for %@, %@
originalRequest
Wrong in all kinds of ways. Less colloquially, that should be an object ID, but it's an instance of %@ instead
Fired relationship fault %@ - %@, returning values: %@
Attempted to fire relationship fault %@ - %@, no such luck
Attempting to fire fault for %@
Can't fulfill fault request: can't find query generation: %@
target
missing objectID
Got a fetch request %@
Can't fulfill fetch request: can't find query generation: %@
Which had result %d (%d)
Which archived %d (%d)
Fetch failed returning error %@
Fetch failed with no error.
no store
Got metadata %@
what on earth happened?
Which archives to %@
Got pull changes result %@
Got active connections %@
Got queryGeneration %@
Reopened generation %@
Unable to reopen generation %@
Bad parameter to reopen generation %@
Attempting to free nothing (or too many things) %@
Nil batch insert request
Unable to decode request, ensure policy allows for inserted class values
Which had result %@
Nil batch update request
Unable to decode request, ensure policy allows for updated class values
Nil batch delete request
Nil persistent history request
Got historyToken %@
Index beyond buffer: %ld, %ld, %ld, %ld
%@: backing buffer has been purged
%@: backing buffer can be purged
%@: index (%lu) beyond bounds (%lu)
Unsupported property type: %@
Unsupoorted type for buffer allocated dictionary: %@
Unexpected tagged string result
BufferAllocations Result Object has an invalid Object ID
<NSXPCStoreServerConnectionInfo: 
entitlements = %@ ;
coordinator = %@ ;
userInfo = %@>
<NSXPCStoreServerConnectionContext: 
entitlements = %@ ;
context = %@ ;
info = %@>
core data xpc: query generations
Coalesced prefetch keypaths to : %@
v8@?0
Process fetch request got nil result (check system log for details).
Process fetch request got %d results.
Source object %@ does not exist for relationship fault.
Source object does not match restricting predicate, so returning an error
Threw evaluating predicate for %@: %@
relationship name
self IN %@
self == %@
%@ IN %K
%K == %@
Prefetching inverse to-one relationship "%@".
destinations
Prefetched for many-to-many relationship "%@".  Got %lu rows
Which means oidSets %@
mtmObjects
Prefetched for one-to-many relationship "%@".  Got %lu rows
objects
Decoding prefetched rows for fetch %@
Prefetched %@/%@ and got no results, stopping now
Prefetched %@/%@ and got %@
swallowed an exception during prefetching of %@, %@: %@
swallowed an exception during XPC store prefetching of %@, %@: %@
Prefetched for source entity %@, key '%@'.  Got data with length %lu.
Recursively prefetching subkeys %@ of fetch %@ using OIDs %@ for objects %@
swallowed an exception during recursive prefetching for %@, %@: %@
swallowed an exception during XPC store recursive prefetching of %@, %@: %@
Done prefetching for %@, %@
Process fetch request aborting (predicate is nil)
Process fetch request returning no results (predicate is false)
SELF IN %@
Saving.
Inserted = %@
Updated = %@
Deleted = %@
Request description was nil.
Request
Prefetching keypaths %@, for fetch %@, sources %@
Prefetching %@, subkeypaths = %@
NSCoreDataXPCMessageCode
NSCoreDataXPCMessageBody
NSCoreDataXPCMessageToken
NSCoreDataXPCMessageContextName
NSCoreDataXPCMessageContextTransactionAuthor
NSCoreDataXPCMessageProcessName
agentOrDaemon
 Unable to create NSXPCConnection; no service name, factory, or endpoint provided.
 Unable to create NSXPCConnection
v8@?0
 Connection interrupted.
XPC connection was invalidated
 Connection invalidated.
Connection is nil
XPC: synchronousRemoteObjectProxyWithErrorHandler encountered error: %@
v16@?0@"NSError"8
Created reply dict: %@
Threw obc exception handling request %@
XPCStore sendMessage: Unhandled exception handling request.  %@
Threw unknown exception handling request
XPCStore sendMessage: Unhandled unknown exception handling request
v24@?0@"NSCoreDataXPCMessage"8@"NSData"16
Returning reply dict %@
Failed send (no reply dict).
PFCloudKitMetadataModelVersionHashesKey
PFCloudKitMetadataFrameworkVersionKey
PFCloudKitMetadataNeedsMetadataMigrationKey
com.apple.CoreData.cloudkit.metadata.transformer
PFCloudKitMetadataClientVersionHashesKey
PFCloudKitMetadataNeedsZoneFetchAfterClientMigrationKey
CoreData: CloudKit Metadata Model Migration
ZNSCK
NSCKExportMetadata
NSCKExportedObject
NSCKExportOperation
exportedAt
exportUUID
operations
operationUUID
sortIndex
status
exportMetadata
ckRecordName
changeType
operation
NSCKImportOperation
NSCKImportPendingRelationship
importDate
changeTokenBytes
pendingRelationships
recordName
relatedEntityName
relatedRecordName
relationshipName
isDeleted
isPending
isUploaded
NSCKMirroredRelationship
identifier
statusNum
changeToken
historyToken
operationError
zoneName
changeTypeNum
typeNum
stringValue
transformedValue
boolValueNum
integerValue
databaseName
databaseScopeNum
hasSubscriptionNum
currentChangeToken
ckRecordZoneName
ckOwnerName
hasRecordZoneNum
entityId
rootEntityId
entityPK
ckShare
uniqueIdentifier
recordZones
database
records
recordZone
cdEntityName
needsDelete
mirroredRelationships
ckRecordID
dateValue
lastFetchDate
hasChanges
needsUpload
needsCloudDelete
needsLocalDelete
lastExportedTransactionNumber
pendingExportTransactionNumber
pendingExportChangeTypeNumber
originalChangeTypeNum
originalTransactionNumber
finalTransactionNumber
finalChangeTypeNum
finalChangeAuthor
supportsFetchChanges
supportsAtomicChanges
supportsRecordSharing
recordType
queryCursor
queries
eventIdentifier
cloudKitEventType
startedAt
endedAt
succeeded
errorDomain
errorCode
countAffectedObjects
countFinishedObjects
needsImport
needsRecoveryFromZoneDelete
needsRecoveryFromUserPurge
recordZoneName
recordZoneOwnerName
relatedRecordZoneName
relatedRecordZoneOwnerName
supportsZoneSharing
encodedShareData
needsShareUpdate
mostRecentRecordModificationDate
ownerName
movedAt
recordMetadata
moveReceipts
encodedRecord
needsShareDelete
needsRecoveryFromIdentityLoss
Somehow got a temporary objectID for export: %s
This method only supports objectIDs from SQLite stores: %s
createRecordID called before the record has the necessary properties: %@
NCKRecordMetadata: System fields record name doesn't match row: %@
NSCKRecordMetadata: System fields record type doesn't match new schema: %@
Failed to reconstruct CKRecord from system fields in record metadata: %@
Cannot create objectID: called before the record has the necessary properties: %@
Cannot create objectID. Unable to find entity with id '%@' in store '%@'
Found more than one instance of NSCKRecordMetadata for object: %s
entityId = %@ and entityPK in %@
Exporter got record metadata back but doesn't have a corresponding objectID: %s
ckRecordName = %@ and recordZone.ckRecordZoneName = %@ and recordZone.ckOwnerName = %@
Found more than one instance of NSCKRecordMetadata for record: %s
Attempting to query cloudkit metadata without a mirroring delegate: %@
Invalid query for record metadata (by recordIDs): %@ returned no metadata or record names
recordZone = %@ AND ckRecordName in %@
%@_%@
CoreData+CloudKit: %s(%d): 
Failed to get a metadata zone while creating metadata for object: %@
+[NSCKRecordMetadata insertMetadataForObject:usingMetadataContext:setRecordName:inZoneWithID:recordNamePrefix:error:]
((recordZone.ckRecordZoneName = %@) AND (recordZone.ckOwnerName = %@) AND (ckRecordName IN %@)) OR (needsCloudDelete = 1 AND needsUpload = 0)
entityId = %@ AND entityPK IN %@
v32@?0@"NSNumber"8@"NSSet"16^B24
Illegal attempt to merge move receipts before assigning a record metadata to a store: %@
v24@?0@"CKRecordID"8@"NSDate"16
archiveDictionary
Unsupported: (unsupported function)
derived attribute
Z_DA_%@_%@_%@_PARAMETER
Z_DA_%@_%@_%@_SOURCE
DROP TRIGGER IF EXISTS %@_INSERT
DROP TRIGGER IF EXISTS %@_DELETE
dropStatements
 WHEN %d <= NEW.Z_ENT AND NEW.Z_ENT <= %d
 AND %d <= Z_ENT AND Z_ENT <= %d
 WHERE %d <= Z_ENT AND Z_ENT <= %d
 WHEN %d = NEW.Z_ENT
 AND %d = Z_ENT
 WHERE %d = Z_ENT
CREATE TRIGGER IF NOT EXISTS %@_INSERT AFTER INSERT ON %@ FOR EACH ROW
 BEGIN
 UPDATE %@ SET %@ = IFNULL(%@, 0) + 1 WHERE Z_PK = NEW.%@%@;
 SELECT NSCoreDataDATriggerUpdatedAffectedObjectValue('%@', Z_ENT, Z_PK, '%@', %@) FROM %@ WHERE Z_PK = NEW.%@%@;
 END
CREATE TRIGGER IF NOT EXISTS %@_DELETE AFTER DELETE ON %@ FOR EACH ROW
 UPDATE %@ SET %@ = %@ - 1 WHERE Z_PK = OLD.%@%@;
 SELECT NSCoreDataDATriggerUpdatedAffectedObjectValue('%@', Z_ENT, Z_PK, '%@', %@) FROM %@ WHERE Z_PK = OLD.%@%@;
CREATE TRIGGER IF NOT EXISTS %@_INSERT AFTER INSERT ON %@ FOR EACH ROW%@
 UPDATE %@ SET %@ = (SELECT IFNULL(COUNT(%@), 0) FROM %@ WHERE %@ = NEW.Z_PK) WHERE Z_PK = NEW.Z_PK;
 SELECT NSCoreDataDATriggerUpdatedAffectedObjectValue('%@', Z_ENT, Z_PK, '%@', %@) FROM %@ WHERE Z_PK = NEW.Z_PK;
UPDATE %@ SET %@ = (SELECT IFNULL(COUNT(%@), 0) FROM %@ WHERE %@ = %@.Z_PK)%@;
dataStatements
triggerCreationStatements
Unsupported: (multi-step keypath)
Unsupported: (bad keypath, should be toOne.attribute)
NEW.%@
NSCoreDataCanonical(NEW.%@)
NSCoreDataCanonical(%@)
NSCoreDataToUpper(NEW.%@)
NSCoreDataToUpper(%@)
NSCoreDataToLower(NEW.%@)
NSCoreDataToLower(%@)
Unsupported: (unsupported function for to one)
Unsupported: (unsupported expression for to one)
DROP TRIGGER IF EXISTS %@_UPDATE
%d <= NEW.Z_ENT AND NEW.Z_ENT <= %d
%d <= Z_ENT AND Z_ENT <= %d
%d = NEW.Z_ENT
%d = Z_ENT
 UPDATE %@ SET %@ = (SELECT %@ FROM %@ WHERE Z_PK = NEW.%@) WHERE Z_PK = NEW.Z_PK%@;
 AND %@
 SELECT NSCoreDataDATriggerInsertUpdatedAffectedObjectValue('%@', Z_ENT, Z_PK, '%@', %@) FROM %@ WHERE Z_PK = NEW.Z_PK%@;
CREATE TRIGGER IF NOT EXISTS %@_UPDATE AFTER UPDATE OF %@ ON %@ FOR EACH ROW%@
 WHEN %@
 UPDATE %@ SET %@ = (SELECT %@ FROM %@ WHERE Z_PK = NEW.%@) WHERE Z_PK = NEW.Z_PK;
 UPDATE %@ SET %@ = %@ WHERE %@ = NEW.Z_PK%@;
 SELECT NSCoreDataDATriggerInsertUpdatedAffectedObjectValue('%@', Z_ENT, Z_PK, '%@', %@) FROM %@ WHERE %@ = NEW.Z_PK%@;
CREATE TRIGGER IF NOT EXISTS %@_UPDATE AFTER UPDATE OF %@ ON %@ FOR EACH ROW
 SELECT NSCoreDataDATriggerUpdatedAffectedObjectValue('%@', Z_ENT, Z_PK, '%@', %@) FROM %@ WHERE %@ = NEW.Z_PK%@;
UPDATE %@ SET %@ = (SELECT %@ FROM %@ WHERE Z_PK = %@.%@)%@
%@, %@
Z_DA_%@_%@_%@
DROP TRIGGER IF EXISTS %@_UPDATE_SET
DROP TRIGGER IF EXISTS %@_UPDATE_UNSET
DROP TRIGGER IF EXISTS %@_%@_INSERT
CREATE TRIGGER IF NOT EXISTS %@_INSERT AFTER INSERT ON %@ FOR EACH ROW WHEN (NEW.%@ NOT NULL AND NEW.%@ NOT NULL)
 UPDATE %@ SET %@ = NEW.%@ WHERE Z_PK = NEW.%@%@ AND %@;
(%@ IS NULL OR NEW.%@ %@ %@)
 SELECT NSCoreDataDATriggerUpdatedAffectedObjectValue('%@', Z_ENT, Z_PK, '%@', %@) FROM %@ WHERE Z_PK = NEW.%@%@ AND %@;
(%@ IS NULL OR NEW.%@ %@= %@)
CREATE TRIGGER IF NOT EXISTS %@_UPDATE_SET AFTER UPDATE OF %@ ON %@ FOR EACH ROW WHEN (NEW.%@ NOT NULL AND NEW.%@ NOT NULL)
 UPDATE %@ SET %@ = (SELECT %@(%@) FROM %@ WHERE %@ = OLD.%@) WHERE Z_PK = OLD.%@%@ AND %@;
OLD.%@ %@= %@
 SELECT NSCoreDataDATriggerUpdatedAffectedObjectValue('%@', Z_ENT, Z_PK, '%@', %@) FROM %@ WHERE Z_PK = OLD.%@%@ AND %@;
NEW.%@ %@= %@
CREATE TRIGGER IF NOT EXISTS %@_UPDATE_UNSET AFTER UPDATE OF %@ ON %@ FOR EACH ROW WHEN (OLD.%@ NOT NULL AND OLD.%@ NOT NULL AND (NEW.%@ IS NULL OR NEW.%@ IS NULL))
(%@ IS NULL OR OLD.%@ %@= %@)
CREATE TRIGGER IF NOT EXISTS %@_DELETE AFTER DELETE ON %@ FOR EACH ROW WHEN (OLD.%@ NOT NULL AND OLD.%@ NOT NULL)
UPDATE %@ SET %@ = (SELECT %@(%@) FROM %@ WHERE %@ = %@.Z_PK)%@;
+ IFNULL(NEW.%@, 0)
- IFNULL(OLD.%@, 0)
DROP TRIGGER IF EXISTS %@_UPDATE_INCREMENT
DROP TRIGGER IF EXISTS %@_UPDATE_DECREMENT
CREATE TRIGGER IF NOT EXISTS %@_INSERT AFTER INSERT ON %@ FOR EACH ROW WHEN (NEW.%@ NOT NULL)
 UPDATE %@ SET %@ = IFNULL(%@, 0) %@ WHERE Z_PK = NEW.%@%@;
CREATE TRIGGER IF NOT EXISTS %@_UPDATE_INCREMENT AFTER UPDATE OF %@ ON %@ FOR EACH ROW WHEN (NEW.%@ NOT NULL)
 UPDATE %@ SET %@ = %@ %@ WHERE Z_PK = NEW.%@%@;
CREATE TRIGGER IF NOT EXISTS %@_UPDATE_DECREMENT AFTER UPDATE OF %@ ON %@ FOR EACH ROW WHEN (OLD.%@ NOT NULL)
 UPDATE %@ SET %@ = %@ %@ WHERE Z_PK = OLD.%@%@;
CREATE TRIGGER IF NOT EXISTS %@_DELETE AFTER DELETE ON %@ FOR EACH ROW WHEN (OLD.%@ NOT NULL)
 UPDATE %@ SET %@ = (SELECT IFNULL(%@(%@), 0) FROM %@ WHERE %@ = NEW.Z_PK) WHERE Z_PK = NEW.Z_PK;
COUNT
 SELECT NSCoreDataDATriggerInsertUpdatedAffectedObjectValue('%@', Z_ENT, Z_PK, '%@', %@) FROM %@ WHERE Z_PK = NEW.Z_PK;
UPDATE %@ SET %@ = (SELECT IFNULL(%@(%@), 0) FROM %@ WHERE %@ = %@.Z_PK)%@;
 WHEN (NEW.%@ NOT NULL)
 UPDATE %@ SET %@ = %@ WHERE Z_PK = NEW.Z_PK;
WHERE %d <= Z_ENT AND Z_ENT <= %d
NEW.
UPDATE %@ SET %@ = %@ %@
bad keypath
currently unsupported (bad root property type)
currently unsupported (wrong number of arguments)
bad parameter to function expression canonical: (not a keypath expression)
%@(%@)
NSCoreDataNow()
NSCoreDataCanonical
NSCoreDataToUpper
NSCoreDataToLower
random
currently unsupported (unsupported function)
Z_OPT
currently unsupported (extended keypath)
problem keypath
currently unsupported (unsupported function on to many (not count or sum))
malformed expression (dependent property is to many, derivation expression is not a function)
currently unsupported (unsupported keypath property type)
currently unsupported (unsupported expression type)
currently unsupported (predicate)
currently unsupported (too many steps)
currently unsupported (too many keypaths)
Updating relationship described by record: %@
-[PFCloudKitImportZoneContext initializeCachesWithManagedObjectContext:andObservedStore:error:]_block_invoke
%@ - Skipping unknown updated relationship record: %@
-[PFCloudKitImportZoneContext initializeCachesWithManagedObjectContext:andObservedStore:error:]_block_invoke_2
v32@?0@"NSString"8@"NSArray"16^B24
%@ - Skipping mirrored relationship for unknown relationships: %@
%@: Failed to serialize many to many relationship from record: %@
%@: Skipping invalid mirrored relationship record: %@
%@ - Skipping unknown updated record: %@
It is not a part of: %@
v32@?0@"CKRecord"8Q16^B24
Deleting record with id (%@): %@
%@ - Skipping unknown deleted relationship recordID: %@ - %@
%K = %@
Skipping mirrored relationship with record id (not found locally): %@
Import context failed to fetch mirrored relationships during import: %@
%@ - Skipping unknown deleted record: %@ - %@
Import is attempting to link objects across zones: %@
Deleting pending relationship because it's entities are no longer in the model: %@
-[PFCloudKitImportZoneContext initializeCachesWithManagedObjectContext:andObservedStore:error:]
Linking %@ to %@
-[PFCloudKitImportZoneContext registerObject:forInsertedRecord:withMetadata:]
v32@?0@"NSString"8@"NSMutableArray"16^B24
Populating unresolved relationships:
-[PFCloudKitImportZoneContext populateUnresolvedIDsInStore:withManagedObjectContext:error:]_block_invoke
Found temporary objectID for metadata link: %@
Found temporary objectID for metadata link: %@
<%@: %p> %@ -> %@
_NSCoreDataOptimisticLockingFailureConflictsKey
_NSCoreDataOptimisticLockingFailureMismatchWithObject
NSExceptionOmitCallstacks
expression
persistentStore
Bad compound predicate predicateOperator type
Invalid predicate: nil RHS
Too many KVC aggregates in keypath: %@
Malformed keypath: %@
valueForKey:
valueForKeyPath:
count:
supportedKVCAggregates
Unsupported KVC aggregate in keypath: %@
average
Subquery expressions must have a collection expression containing a single keypath
Relationship fault for %@ on %p
Relationship objects for %@ on %p: %@
Relationship '%@' fault on managed object (%p) %@
Relationship '%@' on managed object (%p) %@ with objects %@
add%sObject:
add%s:
remove%sObject:
remove%s:
intersect%s:
set%s:
IEM_
removedProperties
addedProperties
mappedProperties
couldFailValidation
Each source entity must have a unique renaming identifier
Each destination entity must have a unique renaming identifier
manager
fetchRequestForSourceEntityNamed:predicateString:
TRUEPREDICATE
sourceContext
Each property must have a unique renaming identifier
(migration) destination model property (renaming identifier '%@') matches the renaming identifier for a different type of property (%@) in the source model. Properties cannot be mapped to other property types.
(migration) uninferrable, non-transient property type '%u' for destination model property (renaming identifier '%@'), source model property (renaming identifier '%@').
Remove
Copy
Transform
(migration) attribute mapping for (%@->%@) requires data validation during store migration, mapping a new, mandatory attribute without a default value.
property
entity
Source and destination attribute types are incompatible
(migration) attribute mapping for (%@->%@ to %@->%@) requires data validation during store migration, mapping a previously optional attribute to a mandatory attribute without a default value.
_prependExternalBlobToken:
Unable to use inferred mapping to move external reference into store.
entityPolicy
_nonNilValueOrDefaultValueForAttribute:source:destination:
destination
Unable to infer mapping for attribute
(migration) relationship mapping for (%@->%@) requires data validation during store migration, mapping a new, mandatory relationship.
(migration) relationship mapping for (%@->%@ to %@->%@) requires data validation during store migration, mapping a previously optional relationship to a mandatory relationship.
Can not map from a to-many to a to-one relationship
destinationInstancesForSourceRelationshipNamed:sourceInstances:
Unable to infer mapping for relationship
%@%@_%@
_value
API misuse: there shouldn't be a connection here
Database connection failed to adopt query generation
Caught a non-object exception in the connectionManager
*RequestContext connection may not be reset
 { %@:%@:%@ }
v16@?0@"CKRecord"8
v24@?0@"CKQueryCursor"8@"NSError"16
%@: Finished with cursor: %@
-[PFCloudKitCKQueryBackedImportWorkItem queryOperationFinishedWithCursor:error:completion:]
%@: Failed due to querying for an unknown record type (not fatal, schema needs to be initialized): %@
Import failed because creating the zone query hit an unhandled exception.
Request '%@' was cancelled because the store was removed from the coordinator.
Import failed because applying the zone query metadata changes hit an unhandled exception.
%@ - Exception thrown during query import: %@
/System/Library/PrivateFrameworks/CoreAnalytics.framework/CoreAnalytics
AnalyticsSendEvent
 WHERE  (1 = 1) 
INSERT OR IGNORE INTO 
INSERT INTO 
) VALUES(?, ?, ?
 ON CONFLICT
 DO UPDATE SET Z_OPT = Z_OPT+1
excluded.
INSERT OR REPLACE INTO 
) VALUES (?, ?
UPDATE OR FAIL 
 SET 
 = ? WHERE 
 = ? AND 
 = ?
 WHERE 
DELETE FROM 
 WHERE Z_PK = ? AND (Z_OPT = ? OR Z_OPT IS NULL)
 WHERE Z_PK = ? AND Z_OPT = ?
Updating a constrained entity generated an UPDATE statement with no columns on entity %@
 WHERE Z_PK = ?
 WHERE %@ = ? AND %@ = ?
@"NSObject"40@?0@"NSCachingFetchRequest"8@"NSManagedObjectContext"16@"NSDictionary"24@32
Batched history request: %@ encountered an error
 error: %@
Batched history request encountered error %@
Batched persistent history request encountered an error
Batched persistent history request returned a result AND an error %@
Error attempted to convert unknown Ancillary Entity: %@
iBooks
Music
batch
%@: index (%lu) beyond bounds (%u)
%@ (%p) of %lu items for request %@
You're doing it wrong
Skanky class can only be used skankily.
NSOrderedSet wrapper '%@' for fetch request results: %@
batched fetch array received an error %@ with userInfo %@
 batched fetch request asked to fetch %d objects but received %d objects as %@
hw.activecpu
%@ is not a valid initializer for %@. Use %@ instead.
com.apple.CoreData
CoreData
 Can't find CoreData image header.
Can't find the hash for some reason, using empty data
B16@?0@"NSManagedObject"8
Failed to stat file, errno, %s.
Executing as effective user %u
Information for %s
---------------------------
File Device ID: 
Device ID: 
File Size: 
%lld bytes
File inode: 
%llu
File user ID: 
File group ID: 
File Permissions: 
The file %s a symbolic link
is not
Failed to statfs file, errno, %s.
Information for file system
File system type: 
%#lx
File system flags: 
%#lx
MNT_RDONLY
MNT_QUOTA
MNT_ROOTFS
MNT_UNKNOWNPERMISSIONS
MNT_JOURNALED
MNT_DEFWRITE
Total data blocks: 
Free data blocks: 
Free blocks for nonsuperuser:
Total i-nodes: 
File system ID: 
%#x, %#x
Free i-nodes: 
%llu
Owner UID: 
Filesystem type name: 
Mount on name: 
Mount from name: 
.interim
Failed to clone external data reference from %@ to %@ error: %@
Can't open externalDataReference interim file : %d
Problem Path
Can't create externalDataReference interim file : %d
Can't copy interim file to permanent location : %d
Problem object
Unable to open file with path %s (%d)
Unable to open file with path: %s (%d)
Missing bytes from file at path %s, expected %lu, got %lu
Unable to read content of file with path: %s (%d)
Unable to read requested number of bytes from path: %s (got %lu)
/dev/null
%@ threw while decoding a value.
%@ threw while encoding a value.
v32@?0@8@16^B24
UIApplicationDidEnterBackgroundNotification
UIApplicationWillResignActiveNotification
UIApplicationWillTerminateNotification
UISceneWillDeactivateNotification
UISceneDidEnterBackgroundNotification
UIApplicationWillEnterForegroundNotification
UIApplicationDidFinishLaunchingNotification
UIApplicationDidBecomeActiveNotification
UISceneDidActivateNotification
UISceneWillEnterForegroundNotification
This method can't be very efficient if you don't bother to set a batch size!
offendingFetch
Efficient batching requires the use of query generations: %@
Batch finished processing with pending changes in the moc. This prevents the context from being reset and purging rows / snapshots from memory. Please save at the end of each batch.
_PFLock deallocated while in use
_PFMutex deallocated while in use
.LINKS
_PFEncodedData
NSKnownKeysMappingStrategy2
Corrupted archive (unexpected data in pointer space).
Corrupted archive (failed to read row).
Corrupted branch row in optimized model detected:
Background Core Data task threw an exception.  Exception = %@ and userInfo = %@
_NSZombie_%s
_NSZombie_
metadataForPersistentStoreWithURL:error: must be overriden by your store class to provide metadata
NSMappedObjectStore must be initialized with initWithPersistentStoreCoordinator:configurationName:URL:options
Atomic stores do not support file backed futures
save: must be overriden by your store class to save data to the store
load: must be overriden by your store class to load data from the store
Store %@ cannot hold instances of entity %@
newCacheNodeForManagedObject: must be overriden by your store class to create a cache node from a managed object
updateCacheNode:fromManagedObject: must be overriden by your store class to update a cache node from a managed object
Cannot retrieve referenceObject from an objectID that was not created by this store
Store Type does not support Persistent History
Unknown command type %@
Unsupported fetch request: store %@ does not support GROUP BY
NSCoreDataPrimaryError
Error saving the persistent store.
NSPersistentCloudKitContainerEventResult initialized without any subresults to aggregate.
Unknown NSPersistentCloudKitContainerEventResultType in subResult: %@
NSAtomicStoreCacheNodes must be initialized using initWithObjectID:(NSManagedObjectID *)
NSAtomicStoreCacheNodes must be created with an objectID
NSAttributeType
NSAttributeValueClassName
NSDefaultValue
NSValueTransformerName
NSIsIndexed
NSFlagsKey
NSSecureUnarchiveFromDataTransformerName
NSValueTransformerName requires a NSString
NSAttributeValueClassName requires a NSString
NSMaxValueName
NSMinValueName
NSIsFileBackedFuture
%@, attributeType %lu , attributeValueClassName %@, defaultValue %@, preservesValueInHistoryOnDeletion %@, allowsCloudEncryption %@
Can't set attributeValueClassName to nil for a non-transient attribute.
Can't set attribute type to undefined for non-transient attribute.
'%@' is only supported for use with '%@'.
Can't find class for type %lu
_NSCreateIndex
SELF >= %@
SELF =< %@
length >= %@
length =< %@
timeIntervalSinceReferenceDate >= %@
timeIntervalSinceReferenceDate =< %@
self >= %@
self =< %@
B24@?0@"NSURL"8@"NSDictionary"16
NSDoubleAttributeType
NSDateAttributeType
NSFloatAttributeType
NSStringAttributeType
NSBooleanAttributeType
NSDecimalAttributeType
NSObjectIDAttributeType
NSInteger16AttributeType
NSInteger32AttributeType
NSInteger64AttributeType
NSBinaryDataAttributeType
NSTransformableAttributeType
NSURIAttributeType
NSUUIDAttributeType
NSUndefinedAttributeType
length
timeIntervalSinceReferenceDate
%@:%@ - Encryption must also be applied to all inherited attributes from the parent entity (%@)
no NSValueTransformer with class name '%@' was found for attribute '%@' on entity '%@'
xctest
cplctl
One or more models in this application are using transformable properties with transformer names that are either unset, or set to NSKeyedUnarchiveFromDataTransformerName. Please switch to using "%@" or a subclass of NSSecureUnarchiveFromDataTransformer instead. At some point, Core Data will default to using "%@" when nil is specified, and transformable properties containing classes that do not support NSSecureCoding will become unreadable.
Property '%@' on Entity '%@' is using nil or an insecure NSValueTransformer.  Please switch to using "%@" or a subclass of NSSecureUnarchiveFromDataTransformer instead.
NSTriggerKey
Error decoding default value for %@ : %@
INTEGER
NUMERIC
DOUBLE
TEXT
BOOLEAN
TIMESTAMP
BLOB
Undefined attribute type.
abstract
_NSCoreManagedObjectID
Entity name must not be nil.
Store must not be nil.
_NSObjectID_%s_%x
%@://%@/%@/p%@
x-coredata
x-coredata://
%@://%@/%@/p%qu
_NSCoreDataTaggedObjectID
-initWithObject: is not implemented on tagged objectIDs
%@://%@/%@/t%@%d
Cannot create a binary store with a nil URL.
CoreData binary stores only support file URLs (got %@).
Error validating url for store
Attempt to add read-only file at path %@ read/write. Adding it read-only instead. This will be a hard error in the future; you must specify the NSReadOnlyPersistentStoreOption.
Attempt to add read-only store read-write
NSBinaryObjectStore only supports file URLs right now.
Can't save store to %@ (read-only store)
Keyed archiver failure
metadata
mapData
Binary store: writeToFile error = %@ and userInfo = %@
NSAttributeValues
NSAttributes
Can't read binary data from file
Can't load binary data from file (file was created by an incompatible version of CoreData)
_NSStoreMapArchiveVersion
_NSStoreMapArchiveMetadata
_NSStoreMapArchiveNextPK
_NSStoreMapArchiveData
Can't load data from archived data (archived data was created by an incompatible version of CoreData)
Directory does not exist : %@
Not a directory : %@
Directory is not writable : %@
Binary store save failed.
Can't construct a node from nil.
Source object
Destination Object
Relationship
CoreData does not support persistent cross-store relationships
Can't find entity for object
_CoreDataEntityDescription
_CoreDataEntityName
NSKeyValueUndefinedSetter
NSKeyValueUndefinedGetter
+entityForName: nil is not a legal NSManagedObjectContext parameter searching for entity name '%@'
+entityForName: nil is not a legal NSPersistentStoreCoordinator for searching for entity name '%@'
+entityForName: could not locate an NSManagedObjectModel for entity name '%@'
+entityForName: could not locate an entity named '%@' in this model.
NSEntityName
NSClassNameForEntity
NSIsAbstract
NSManagedObjectModel
NSSuperentity
NSSubentities
NSProperties
NSUserInfo
NSVersionHashModifier
NSRenamingIdentifier
NSUniqueTuples
NSCoreSpotlightDisplayName
NSFetchIndexDescriptions
NSCompoundIndexes
ascending
desc
descending
binary
rtree
NSVersionHashModifier requires a NSString
NSClassNameForEntity requires a NSString
description
this value is required to be a dictionary
NSRenamingIdentifier requires a NSString
NSSupplementalIndexes
(%@) name %@, managedObjectClassName %@, renamingIdentifier %@, isAbstract %u, superentity name %@, properties %@, subentities %@, userInfo %@, versionHashModifier %@, uniquenessConstraints %@
NSManagedObject
B16@?0@"NSPropertyDescription"8
Can't add a subentity to an entity (missing name or bad properties).
Invalid property passed to setProperties: property has nil name or is an NSExpressionDescription.
Can't change name of entity from %@ to %@
can't find attribute named %@
can't find relationship named %@
can't create index %@, unsupported index element property type
element
Indexes must be declared at the highest applicable level. All properties are declared on superentity.
index
Cannot merge uniqueness constraints { %@ } on entity '%@' due to relationship '%@' having a mandatory to-one inverse relationship '%@' and not using a cascade delete rule on '%@'
Can't find property named %@
Problem name
Can't find property description '%@' %@ while setting unique constraints on entity '%@'
Cannot create unique constraints for to-many relationships.
Property type is not valid for unique constraints.
Uniqueness constraints must be defined at the highest level possible. All properties in constraint %@ are defined on parent entity.
Problem constraint
Can't add an entity to multiple superentities.
Can't add unnamed subentity.
Can't add multiple entities with duplicate names.
Can't add unnamed property to entity.
Entity already contains a property named %@.
Can't add NSExpressionDescriptions to NSEntityDescriptions
tried to add property %p '%@' to entity %p '%@' but it already belongs to entity %p '%@'
UNIQUE
Model must be immutable before mapping strategy can be created
Can't use an entity in two models.
B24@?0@"NSPropertyDescription"8^B16
Unable to load class named '%@' for entity '%@'.  Class not found, using default NSManagedObject instead.
Class '%s' for entity '%@' is not a subclass of NSManagedObject
"%@" is not a subclass of NSManagedObject.
Class '%s' for entity '%@' has an illegal override of NSManagedObject -isEqual:
Class '%s' for entity '%@' has an illegal override of NSManagedObject -hash
Cannot make an immutable entity editable again.
Can't set superentity of self to self.
Bad model.  For entity '%@' superentity '%@' does not think I am a subentity
Bad model.  For entity '%@' subentity '%@' does not think I am its superentity
Bad model.  For entity '%@' subentity '%@ (%p)' is not registered in NSManagedModelModel.  Model has a reference to %@ (%p)
Can't remove property '%@' - doesn't belong to this entity.
Property named '%@' in entity '%@' conflicts with property inherited from parent entity '%@'
Subentity has an index on parent property: %@
Entity %@ already has an index with name %@
Entity
Entity '%@' has unique constraints { %@ } with relationship '%@' and mandatory to-one inverse '%@' but is not using a cascade delete rule .
inverse
Entity '%@' has unique constraints { %@ } with a relationship and mandatory to-one inverse but is not using a cascade delete rule .
Entity wasn't finalized properly before use
Can't read entity into shell: Missing entity frontside delimiter
Root cause
Can't read entity: Not enough bytes left
Can't read entity: Missing version hash value
Can't read entity: Missing entity name
Cant' read entity: Miswired subentities dictionary
Cant' read entity: Mismatched subentity count
Cant' read entity: Properties dictionary has content
Cant' read entity: Properties buffer has content
Cant' read entity: Property entity does not match entity being decoded (1)
Cant' read entity: Property entity does not match entity being decoded (2)
Can't decode coreSpotlightDisplayNameExpression for entity %
Can't decode coreSpotlightDisplayNameExpression - wrong class decoded - %@
Cant' read entity: Mismatched number of fetch indexes
Cant' read entity: Mismatched number of fetch index elements
Unable to decode userInfo for entity '%@' : %@
Can't read entity into shell: Missing entity back-end delimiter
Relationship properties should be @dynamic, not ivars (entity %@, class %s, property %@).  This will be an error in the future.
validate%s:error:
(%@), name %@, mappingType %u, sourceEntityName %@, sourceEntityVersionHash %@, destinationEntityName %@, destinationEntityVersionHash %@, attributeMappings %@, relationshipMappings %@, sourceExpression %@, entityMigrationPolicyClassName %@, userInfo %@
%@->%@
NSMappingName
NSMappingType
NSSourceEntityName
NSSourceEntityVersionHash
NSDestinationEntityName
NSDestinationEntityVersionHash
NSSourceExpression
NSEntityMigrationPolicyClassName
NSAttributeMappings
NSRelationshipMappings
NSMappingName requires a NSString
NSSourceEntityName requires a NSString
NSDestinationEntityName requires a NSString
NSEntityMigrationPolicyClassName requires a NSString
Couldn't create mapping policy for class named (%@)
Entity Mappings cannot become mutable after being marked immutable.
Can't modify an immutable entity mapping.
entityMapping
propertyMapping
Can't find source for destination in default mapping policy
More than one source for destination in default mapping policy
Unknown/unsupported type for ordered toMany relationship destination
relationshipDestinations
Unknown/unsupported type for toMany relationship destination
More than one relationship destination for a toOne relationship
Unknown/unsupported type for toOne relationship destination
%@ -> %@
NSExpression
NSExpressionType
(<%@ : %p>), name %@, expression %@, resultType %lu, userInfo %@
Unable to decode expression for expression description %@ : %@
NSKeyValueIvarSetter
NSKeyValueMethodSetter
NSKeyValueIvarGetter
NSKeyValueMethodGetter
During prefetching, materialized to-many relationship '%@' on object %@ was null
During prefetching, materialized to-one relationship '%@' on object %@ was not a managed object but instead %@
FETCH_SOURCE
FETCHED_PROPERTY
CoreData could not fulfill a fetched property because '%@'
Fetched Property
CoreData Debug Logging: Exception = %@ with error code = %ld and userInfo = %@
message
failed to retrieve ordering information from fault for object %@ and relationship %@ due to nil NSManagedObjectContext
An NSManagedObject must have a valid NSEntityDescription.
NSPersistentStoreCoordinatorDelegate returned an illegal NSPersistentStoreCoordinatorDelegateErrorAction
avatarsd
CalendarAgent
CoreData could not fulfill a fault for '%@'
<UNKNOWN objectID>
An NSManagedObjectContext delegate overrode fault handling behavior to silently substitute nil/0 for all property values for the object with ID '%@'.  This is very unwise.
An NSManagedObjectContext delegate returned an illegal result
Unhandled error occurred during faulting: %@ (%@)
Unhandled error (%@, %ld) occurred during faulting and was ignored: %@
Unhandled error (%@, %ld) occurred during faulting and was thrown: %@
Client ill advisedly ignored an I/O or unknown error from faulting: %@
faulting failed to record an error for an serious condition
<NSPersistentHistoryChange: %lld %@ %@ %lld %@ %@>
NSPersistentHistoryChangeType
NSPersistentHistoryChangeTypeInsert
NSPersistentHistoryChangeTypeUpdate
NSPersistentHistoryChangeTypeDelete
'%ld' is an unknown NSPersistentHistoryChangeType value
Unexpected change - objectID failed for entity - %@, entityID - %ld,  pk - %lld,  model - %@ - %@, store - %@
entityID
Unexpected change - entity ID (%ld) not found in model - %@ - %@, store - %@
%@%lu
NSPersistentHistoryChangeObjectID
NSPersistentHistoryChangeID
NSPersistentHistoryChangeTombstone
NSPersistentHistoryChangeTransaction
NSPersistentHistoryChangeColumn
Z_%@_%@
%@%@_MIN, %@_MAX
%@NEW.%@, NEW.%@
%@%@, %@
%@%@ NOT NULL
 AND 
CREATE VIRTUAL TABLE IF NOT EXISTS %@ USING RTREE (Z_PK INTEGER PRIMARY KEY, %@)
DROP TABLE IF EXISTS %@
CREATE TRIGGER IF NOT EXISTS %@_INSERT AFTER INSERT ON %@ FOR EACH ROW BEGIN INSERT OR REPLACE INTO %@ (Z_PK, %@) VALUES (NEW.Z_PK, %@) ; END
CREATE TRIGGER IF NOT EXISTS %@_UPDATE AFTER UPDATE ON %@ FOR EACH ROW BEGIN DELETE FROM %@ WHERE Z_PK = NEW.Z_PK ; INSERT INTO %@ (Z_PK, %@) VALUES (NEW.Z_PK, %@) ; END
CREATE TRIGGER IF NOT EXISTS %@_DELETE AFTER DELETE ON %@ FOR EACH ROW BEGIN DELETE FROM %@ WHERE Z_PK = OLD.Z_PK ; END
INSERT OR REPLACE INTO %@ (Z_PK, %@) SELECT Z_PK, %@ from %@ where %@
NSFetchRequest
_NSFetchRequestEntityName
_NSFetchRequestEntityName requires a NSString
%@, fetchRequest %@
Can't use fetch request with fetched property description (entity model mismatch).
NSValuesToGroupBy
NSHavingPredicate
NSFetchOffset
NSValuesToFetch
NSEntity
NSPredicate
NSSortDescriptors
NSFetchLimit
NSBatchSize
NSRelationshipKeyPathsForPrefetching
NSResultType
NSAllocationType
NSAllocationSize
NSHasFetchRequestFlags
NSFetchRequestFlags
%@ (entity: %@; predicate: (%@); sortDescriptors: (%@); 
limit: %u; 
offset: %u; 
batch size: %u; 
type: %@; 
unknown request type
affected stores: (%@); 
includesSubentities: NO; 
includesPropertyValues: NO; 
returnsObjectsAsFaults: NO; 
includesPendingChanges: NO; 
returnsDistinctResults: YES; 
shouldRefreshRefetchedObjects: YES; 
NSFetchRequestBufferAllocationType
NSFetchRequestVMBufferAllocationType
allocation type: %@; 
allocation size: %u; 
relationshipKeyPathsForPrefetching: (%@); 
propertiesToFetch: (%@); 
havingPredicate: (%@); 
propertiesToGroupBy: (%@); 
Cannot fetch without an NSManagedObjectContext in scope
This fetch request (%p) was created with a string name (%@), and cannot respond to -entity until used by an NSManagedObjectContext
Invalid keypath %@ passed to %@
setPropertiesToGroupBy:
setPropertiesToFetch:
Invalid keypath %@ passed to setPropertiesToGroupBy:
Invalid keypath %@ passed to %@:
Invalid keypath %@ passed to %@ (non-terminal attribute)
Invalid to many relationship in setPropertiesToFetch: (%@)
Invalid keypath %@ passed to %@ (invalid property type)
Invalid property %@ passed to %@ (property is transient)
Attribute/relationship description names passed to %@ must match name on fetch entity (%@)
Invalid property (%@) passed to setPropertiesToFetch: (entity mismatch)
Invalid to many relationship (%@) passed to %@:
Invalid keypath expression (%@) passed to setPropertiesToFetch:
NSFetchRequest could not locate an NSEntityDescription for entity name '%@'
Can't modify a named fetch request in an immutable model.
Invalid groupByProperty type in archive
Can't decode predicate for fetch request
Invalid propertyToFetch type in archive
Can't decode sortDescriptor for fetch request
NSManagedObjectResultType
NSManagedObjectIDResultType
NSDictionaryResultType
NSCountResultType
Unknown fetch request result type: %ld
activityType
storePath
eventIdentifier = %@
Found multiple NSPersistentCloudKitContainerEvents for the identifier '%@'
No event was found for the identifier '%@' in this result: %@
An unhandled exception was caught while trying to finish the event for: %@
+[NSCKEvent finishEventForResult:withMonitor:error:]_block_invoke
Cannot create persistent event for request: %@
com.apple.CoreData.%@.%p
Remote Change Notification - posting NSRemotePersistentStoreDidChangeNotification for store  %@ 
Remote Change Notification - PSC to post notification for store  %@ with state %ld
Exception thrown posting NSRemotePersistentStoreDidChangeNotification: %@
Unknown exception thrown posting NSRemotePersistentStoreDidChangeNotification
v12@?0i8
 Failed to setup notification listener: %d
NSFRExpression
NSMOCExpression
NSCountOnlyFlag
NSFetchRequestExpression could not evaluate its request or context.
FETCH(%@, %@, %@)
Cannot substitute a nil substitution dictionary.
NSSourceAttributeName
NSDestinationAttributeName
branch row pointer is NULL
[%d]
branch row pointer%@ = %p flags.size = %d flags.operation = %d flags.parameter = %d flags.offset = %d lowerBound = %d lowerSlot = %d upperBound = %d upperSlot = %d generalSlots pointer = %p with contents = %@
mapping table pointer is NULL
mapping table has 0 branch rows
mapping table %p has %d branch rows:
%@ supports a maximum of 32,768 elements.  parameter was %lu
keys
length is a bogus value
version
mapping table %p has %d branch rows: (...)
%@ (%p) table of length %d with known keys:%@ and %@
searchMapping
emptyToken
values
__empty_slot_token_4c24_98dc_ac1e_b773__
The key '%@' is not defined for this NSKnownKeysDictionary
NSTargetObjectUserInfoKey
NSUnknownUserInfoKey
NSKnownKeysDictionary: dumping bad mapping: %@ with length:
 key[%d] = %@
NSKnownKeysDictionary: improper mapping detected with key '%@'
NSDetailedErrors
NSValidationErrorObject
NSValidationErrorKey
NSValidationErrorPredicate
NSValidationErrorValue
NSAffectedStoresErrorKey
NSAffectedObjectsErrorKey
NSOriginalSnapshot
NSInsertedObjects
NSDeletedObjects
NSCurrentObjects
NSSQLiteErrorDomain
Delete: %@
Insert: %@ at index: %lu
Move: %@ to index: %lu
(...not nil..)
<relationship fault: %p '%@'>
(...and %ld more...)
%@ (entity: %@; id: %@; data: %@)
<fault>
%@ (entity: <null>; id: %@; data: <fault>)
An NSManagedObject of class '%@' must have a valid NSEntityDescription.
NSEntityDescription '%@' can only support a single custom class (tried to instantiate class '%@'). Use a subentity with 0 properties to further specialize the NSManagedObject subclass.
CoreData: error: Failed to call designated initializer on NSManagedObject class '%@' 
[<%@ %p> valueForUndefinedKey:]: the entity %@ is not key value coding-compliant for the key "%@".
Mutating a managed object %@ (%p) after it has been removed from its context.
NSValidationErrorShouldAttemptRecoveryKey
NSManagedObjects of entity '%@' do not support -mutableArrayValueForKey: for the property '%@'
NSManagedObjects of entity '%@' do not support -mutableSetValueForKey: for the property '%@'
NSManagedObjects of entity '%@' do not support -mutableOrderedSetValueForKey: for the property '%@'
[<%@ %p> setValue:forUndefinedKey:]: the entity %@ is not key value coding-compliant for the key "%@".
[<%@ %p> setNilValueForKey]: instance of entity %@ could not set nil as the value for the key %@.
<null>
Cannot set BindableObject publisher after it has already been set
Unacceptable type of value for attribute: property = "%@"; desired type = %@; given type = %@; value = %@.
A class implementing the NSFileBackedFuture protocol
value
Cannot set value for attribute with undefined type: property = "%@"; entity = "%@"; value = %@
Illegal attempt to establish a relationship '%@' between objects in different contexts (source = %@ , destination = %@)
Unacceptable type of value in to-many relationship: property = "%@"; problem = %@; desired type = %@; given type = %@; value = %@.
Unacceptable type of value for %@ relationship: property = "%@"; desired type = %@; given type = %@; value = %@.
ordered to-many
to-many
Unacceptable type of value for to-one relationship: property = "%@"; desired type = %@; given type = %@; value = %@.
Insufficient information to maintain inverse relationship "%@" for relationship: %@.
Cannot maintain read-only inverse relationship "%@" for relationship: %@.
%{ENTITY}@
%{PROPERTY}@
Illegal validation warning: property = "%@"; predicate/warning index = %lu; warning = %@.
i24@?0r^v8r^v16
Object has pending changes
%@: null selector
%s_%s_
%s_%s_%x
Failed to generate function for '%s'
Failed to add function to class for '%s'
contextShouldIgnoreChangesFor
_cd_bits_%p
Incorrect ivar generation
[%dI]
class_addIvar failed
Testing generated function for +classForEntity: failed for entity %s (%p)
Testing generated function, factory %p != result %p
Factory and entity class skew over placeholder singleton.  Expected %p but got %p for entity '%s'
Exception %@ ui %@ occurred in +[NSManagedObject classForEntity:]
Unknown exception occurred in +[NSManagedObject classForEntity:]
Multiple NSEntityDescriptions claim the NSManagedObject subclass '%s' so +entity is unable to disambiguate.
 '%@' (%p) from NSManagedObjectModel (%p) claims '%s'.
No NSEntityDescriptions in any model claim the NSManagedObject subclass '%s' so +entity is confused.  Have you loaded your NSManagedObjectModel yet ?
Multiple NSEntityDescriptions in NSManagedObjectModel (%p) claim the NSManagedObject subclass '%s' so +entity is unable to disambiguate.  Both entities '%@' (%p) and '%@' (%p)
This NSManagedObjectContext (%p) does not have a coordinator and model assigned yet so +entity on '%s' is sad.
+[%s entity] Failed to find a unique match for an NSEntityDescription to a managed object subclass
Exception %@ ui %@ occurred in +[NSManagedObject _entityDeallocated:]
Unknown exception occurred in +[NSManagedObject _entityDeallocated:]
Snapshot class was nil
NULL _cd_rawData but the object is not being turned into a fault
automaticallyNotifiesObserversOf
primitive
setPrimitive
managedObjectOriginal_
Property '%s' is a 64 bit scalar type on class '%s' that does not match its entity's property's 32 bit scalar type.  Implicit coercion to 32 bits in the database is not recommended.
Property '%s' is a scalar type on class '%s' that does not match its Entity's property's scalar type.  Dynamically generated accessors do not support implicit type coercion.  Cannot generate a getter method for it.
Property '%s' is a scalar type on class '%s'.  Cannot generate a getter method for it.
dynamic accessors failed to find @property implementation for '%s' for entity '%@' while resolving selector '%s' on class '%s'.  Did you remember to declare it @dynamic or @synthesized in the @implementation ?
Property '%s' is marked __weak on class '%s'.  Cannot generate a setter method for it.
Property '%s' is a scalar type on class '%s' that does not match its Entity's property's scalar type.  Dynamically generated accessors do not support implicit type coercion.  Cannot generate a setter method for it.
Property '%s' is a scalar type on class '%s'.  Cannot generate a setter method for it.
Property '%s' is marked copy on class '%s'.  Cannot generate a copying setter method for NSManagedObject's to-one relationship.
Property '%s' is marked readonly on entity '%@'.  Cannot generate a setter method for it.
Object:
remove
AtIndex:
removeObjectFrom
v@:Q
AtIndexes:
insert
insertObject:in
v@:@Q
:atIndexes:
v@:@@
replace
replaceObjectIn
AtIndex:withObject:
v@:Q@
AtIndexes:with
validate
:error:
will
Change
Access
v@:@
v@:I
v24@?0@8d16
v20@?0@8f16
d16@?0@8
^v16@?0@8
@16@?0@8
@24@?0@8@16
@32@?0@8@16@24
@24@?0@8Q16
@20@?0@8I16
@32@?0@8Q16@24
v@:I@
@28@?0@8I16@20
@32@?0@8@16Q24
v@:@I
@28@?0@8@16I24
generateAccessorWithFunctionPtrSignature failed with unknown signature '%s'
v16@?0@"NSKeyValueSetter"8
inserted
updated
deleted
refreshed
invalidated
invalidatedAll
managedObjectContext
newQueryGeneration
newChangeToken
transactionAuthor
_NSTriggerModifiedObjectsKey
_NSTriggerModifiedObjectIDsKey
inserted_objectIDs
updated_objectIDs
deleted_objectIDs
refreshed_objectIDs
invalidated_objectIDs
NSObjectsChangedByMergeChangesKey
NSObjectsChangedInManagingContextNotification
_NSObjectsChangedInManagingContextPrivateNotification
NSManagingContextDidSaveChangesNotification
NSManagingContextWillSaveChangesNotification
NSManagedObjectContextDidSaveObjectIDsNotification
_NSManagedObjectContextDidSaveObjectIDsPrivateNotification
NSManagedObjectContextDidMergeChangesObjectIDsNotification
_NSManagedObjectContextDidMergeChangesObjectIDsPrivateNotification
ImplicitObservation
com.apple.CoreData.ConcurrencyDebug
com.apple.CoreData.Logging.oslog
com.apple.CoreData.Logging.stderr
com.apple.CoreData.Toolchain.EnableToolchainBehaviors
CommCenter
SpringBoard
News
assetsd
photolibraryd
accountsd
soagent
Radio
Podcasts
Core Data multi-threading assertions enabled.
Context already has a coordinator;  cannot replace.
An NSManagedObjectContext's retain policy cannot be changed while it has registered objects.  Trying using reset() first.
NSManagedObjectContext over-release triggered improper dealloc here:
Parameter #1 to -assignObject:toPersistentStore: must be an NSManagedObject or subclass.
Can't assign an object to a store that does not contain the object's entity.
Can't reassign an object to a different store once it has been saved.
newStoreURL
originalStoreURL
Cannot insert '%@' in this managed object context because it is not found in the associated managed object model.
-deleteObject: requires a non-nil argument
An NSManagedObjectContext cannot delete objects in other contexts.
Context does not have a coordinator;  cannot obtain permenant ids without a coordinator.
fatal: Unable to recover from optimistic locking failure.
Attempting to generate a constraint exception for non constraint error.
Conflicts
constraint validation failure
Exception while resetting query generation during exception recovery for save %@ %@
Unknown exception while resetting query generation during exception recovery for save
attempt to recursively call -save: on the context aborted
stack trace
failed to resolve optimistic locking failure: %@ with %@
failed to resolve optimistic locking failure.  Old save request was: %@
failed to resolve optimistic locking failure.  Next attempt will be: %@
NSErrorMergePolicy failed to resolve %ld conflicts (%@)
nil is not a valid object ID
existingObjectWithID incorrectly returned nil without an error set for objectID %@
Fetching generated a result AND an error: %@
Fetching returned nil AND failed to generate an error
unknown failure to generate an error during executeFetchRequest
NSSaveChangesRequest is not supported by executeRequest:error:
Context does not have a coordinator; cannot perform executeRequest:error:.
Unknown batch request - %@ - %lu
Unknown request - %@ - %lu
Either a non nil result OR an error OR an exception
%@ %@ is not a valid NSFetchRequest.
%@ A fetch request must have an entity.
The fetch request's entity %p '%@' appears to be from a different NSManagedObjectModel than this context's
Fetching generated an error AND a result: %@
Fetching failed to generate a result OR an error OR an exception
NSConfinementConcurrencyType context %@ cannot support asynchronous fetch request %@.
managed objects
An NSManagedObjectContext cannot refresh objects in other contexts.
NSConcurrencyType
NSFetchTimestamp
NSRetainsRegisteredObjects
NSPropagatesDeleted
NSMergePolicy
An NSManagedObjectContext cannot detect conflicts for objects in other contexts.
Can only use -performBlock: on an NSManagedObjectContext that was created with a queue.
Can only use -performBlockAndWait: on an NSManagedObjectContext that was created with a queue.
Parent NSManagedObjectContext must not be nil.
Parent NSManagedObjectContext must use either NSPrivateQueueConcurrencyType or NSMainQueueConcurrencyType.
NSManagedObjectContext %p: 
NSManagedObjectContext %p
Cannot set a query generation on an NSManagedObjectContext that does not have a coordinator
Child contexts inherit parent context generations and may not have their own
Automatic merging is not supported by contexts using NSConfinementConcurrencyType
isEditing
cannot record object with null globalID
An NSManagedObject may only be in (or observed by) a single NSManagedObjectContext.
fatal: Failed to re-registered lost fault. fault %p with oid %@ has a moc of %p but we expected %p
deallocated NSManagedObjectContext
_NSManagedObjectContextPrivateDidMutateObjectIDsNotification
_NSManagedObjectContextObjectIDMutationMappingKey
Could not allocate memory.
Multiple threads illegally accessing an NSManagedObjectContext (%p) during %@
The current thread is not the recognized owner of this NSManagedObjectContext(%p).  Illegal access during %@
attempt to insert a null object into this context
repairing validation failure %@ (%@) by deleting %@ because it no longer exists and the merge policy allows it
null
validation recovery attempt FAILED with %@ and %@.
An observer of NSManagedObjectContextDidSaveNotification illegally threw an exception.  Exception = %@ at %@ with userInfo = %@ and objects saved = %@
Crossword
Objects should not be both modified and additional
Mutating a managed object %@ (%p) that has a different context %p than the receiver %p.
Failed to process pending changes before save.  The context is still dirty after 1000 attempts.  Typically this recursive dirtying is caused by a bad validation method, -willSave, or notification handler.
Serious application error.  Exception was caught during Core Data change processing.  This is usually a bug within an observer of NSManagedObjectContextObjectsDidChangeNotification.  %@ with userInfo %@
Serious application error.  Unidentifiable exception was caught during Core Data change processing.  This is usually a bug within an observer of NSManagedObjectContextObjectsDidChangeNotification.
Delete propagation prefetching failed with error: %@
Delete propagation prefetching failed with exception: %@
illegally invoked -performWithOptions* on dying NSManagedObjectContext at:
-performWithOptions:andBlock: was called on a MOC of NSConfinementConcurrencyType unexpectedly.
Mismatched PSCs in parameter contexts
Either a non nil result OR an error in nexted context
Context has pending changes
Destination object is not kind of [relationship destinationEntity]
Relationship must be a to-many.
Can't find the order of objects in an unordered relationship
com.apple.CoreData.NSManagedObjectContext.mainQueue
Temporary object ID refers to object in different NSPersistentStoreCoordinator
Object %@ persistent store is not reachable from this NSManagedObjectContext's coordinator
Invalid state for objectID or NSManagedObjectContext
nostore
<NSQueryGenerationToken: %p>
unsupported
NSQueryTokenIsSingleton
NSQueryTokenWhichSingleton
NSQueryTokenIsCompound
NSQueryTokenStoreIdentifier
NSQueryTokenGenerationIdentifier
NSQueryGeneration -dealloc caught an unexpected exception: %@
<NSQueryGenerationToken : {
, %p
<NSQueryGenerationToken : %@/%@>
Can't reattach all stores specified by token
expected stores
%p <%@>
+mergedModelFromBundles: Failed to load model at URL '%@'
Can't merge models with two different entities named '%@'
Can't merge models with two different fetch request templates for name'%@'
NSEntities
NSConfigurations
NSFetchRequestTemplates
NSVersionIdentifiers
(%@) isEditable %u, entities %@, fetch request templates %@
Can't add an entity to a managed object model (missing name or bad properties).
Entities for a configuration must already be in the model.
Cannot set fetch request template.  This model does not contain entity '%@'.
momd
VersionInfo.plist
Unable to model NSManagedObjectModel
Invalid property; can't optimize
Base error
Property
Invalid value in warnings array
momv2$srsraori55717101jhus-[6910aathnnhi86786714[-;uadmiraenv143
Can't find hashorder for entity '%@'
Base Problem
Can't add unnamed entity to model.
Model already contains an entity named %@.
momv2$8129374fj;a30[5yo-]0-87ujuhok'p0907ljnlmmji870-oi43902[349
NSKnownKeysDictionary2
Bad: decoding optimized model smashed memory. Bailing.
 Cannot load NSManagedObjectModel.  nil is an illegal URL parameter
CoreData: Cannot load NSManagedObjectModel.  nil is an illegal URL parameter
 Failed to load model bundle at path '%@'
 Failed to load model as no file exists at path '%@'
 Failed to load optimized model at path '%@'
 Failed to load keyed archive model at path '%@' with error '%@'
Unable model at path (file is zero bytes) '%@'
 Failed to load NSManagedObjectModel with URL '%@'
com.apple.CoreData.OptimizedModelLayoutDebug
q24@?0@"NSString"8@"NSString"16
Mismatch: strategy has %lu length, archive has %u values
Mismatch: frt strategy has %d length, archive has %u values
Mismatch: frt strategy has %lu length, archive has %u values
Unable to decode versionIdentifiers for model: %@
Corrupted archive (missing pointer space).
System
Library
Cannot use uniqueness constraints { %@ } on entity '%@' due to relationship '%@' having a mandatory to-one inverse relationship '%@' and not using a cascade delete rule on '%@'
v24@?0@"NSEntityDescription"8@"NSString"16
Models cannot become mutable after being marked immutable.
Can't modify an immutable model.
Can't remove entity - doesn't belong to this model.
Cannot assign a negative reference ID offset to a managed object model.
Can't generate new column values for %@ - incompatible destination: %@
 = %@
Can't generate new column values for destination - incompatible entity foreign key state: %@
%@ = %@
, %@ = %@
Can't generate new column value from value: %@
= %@
aliasGenerator
Can't generate SQL for keypath %@ : invalid location of keypath aggregate function
Can't generate SQL for keypath %@ : invalid keypath
Can't generate SQL for keypath %@ : invalid attribute name location
Can't generate SQL for keypath %@ : multiple to many keypath components
Can't generate SQL for keypath %@ : unexpected problem
Unable to generate sql for components %@
Invalid keypath for update (not an attribute or a to one) %@
Attempting to insert a relationship value into an attribute or vice versa is not supported %@/%@
Invalid keypath expression (%@) in propertiesToUpdate - joins unsupported here
Unable to generate sql for update expression %@
Can't find property %@ on entity %@
Invalid property for update (not an attribute or a to one) %@/%@
Invalid property for update (can't batch update derived attributes) %@/%@
Fetch request expression evaluation (%@) failed
Invalid fetch expression (%@) in propertiesToUpdate - fetch has multiple results
Invalid new constant value %@ for %@ (not a managed object)
Invalid value expression (%@) in propertiesToUpdate : what does it mean to update a relationship to the result of a function?
Invalid expression (%@) in propertiesToUpdate
Can't generate new column value from expression %@
, Z_OPT = (Z_OPT + 1) 
NSManagedObjectModel_CurrentVersionName
NSManagedObjectModel_VersionHashes
VersionInfo
plist
Info
Exception while loading versioned model plist for %@.
Name: %@
Reason: %@
UserInfo: %@
Failed to intialize caches in a reasonable amount of time.
Stores failed to initialize but did not return an error.
Metadata corruption found, store appears to have been used with multiple CloudKit databases: %@
System fields shouldn't be set anymore: %@
x-coredata://%@/%@/p%@
NSMappedObjectStore must be initialized with initWithPersistentStoreCoordinator:configurationName:URL:options:
Core Data provided atomic stores do not support file backed futures
Core Data provided atomic stores do not support derived properties
NSPersistentCloudKitContainerEventChangedNotification
event
 { type: %@ store: %@ started: %@ ended: %@
 succeeded: %@
 error: %@:%ld
Setup
Export
Import
Unknown event type, cannot covert to string: %ld
Unsupported property type for index.
Can't mix and match collation types.
Can't create an index with no name
NSIndexName
NSIndexElements
NSPartialIndexPredicate
NSIndexName requires a NSString
NSIndexElements requires a NSArray
NSIndexElements requires a NSArray of NSFetchIndexElementDescription
<NSFetchIndexDescription : (%@:%@, elements: %@, predicate: %@)>
Can't set an index name to nil
IndexDescription
Can't change an collation type in a multi-element index
Index
com.apple.CoreData.MigrationDebug
(migration) checking mapping model %@
 source hashes: 
 destination hashes: %@
(migration) mismatched %@%@%@ hashes for mapping model %@
 and 
(migration) no match found for %d of %d mapping model source hashes
(migration) no match found for %d of %d mapping model destination hashes
(migration) found compatible mapping model %@
Cannot create an inferred NSMappingModel with a nil source model
Cannot create an inferred NSMappingModel with a nil destination model
(migration) inferring a mapping model between data models with 
 source hashes: 
 destination hashes: %@
(migration) inferring mapping model failed with error: %@ userInfo: %@
(%@), entityMappings %@
(migration) looking for mapping model with 
 source hashes: 
 destination hashes: %@
(migration) no suitable mapping model found
NSEntityMappings
NSEntityMappingsByName
Can't add unnamed entity mapping to model.
Model already contains an entity mapping named %@.
Can't modify an immutable mapping model.
_NSInMemoryStoreArchivedData
memory://%lx
Unsupported predicate, RHS of boundBy: must contain 2 values
Unsupported predicate, topLeft parameter of boundBy: RHS must be a constant or keypath
Unsupported predicate, bottomRight parameter of boundBy: RHS must be a constant or keypath
Unsupported predicate, RHS of boundBy: must be an aggregate or constant
Unsupported predicate, constant topLeft parameter of boundBy: RHS must respond to coordinate
Unsupported predicate, constant lowerRight parameter of boundBy: RHS must respond to coordinate
_NSLocationAttributeDerivedComponents
nestingLevel
SELECT %@.Z_PK FROM %@ %@ WHERE ? <= %@.%@_MAX AND %@.%@_MIN <= ? AND ? <= %@.%@_MAX AND %@.%@_MIN <= ?
bindVars
selectBindVars
conflictList
object snapshot
cached row
database row
%@ (%p) for NSManagedObject (%p) with objectID '%@' with oldVersion = %d and newVersion = %d and old %@ = %@ and new %@ = %@
%@ (%p) for NSManagedObject (%p) with objectID '%@' with oldVersion = %d and newVersion = <deleted> and old %@ = %@
Coder = %@ (%@)
Delegate = %@ (%@)
This is probably not where you want to be
_source
_snapshot1
_snapshot2
_snapshot3
_oldVersion
_newVersion
object
snapshot
cachedRow
databaseRow
newVersion
oldVersion
_constraint
_conflictedValues
_databaseObject
_databaseSnapshot
_conflictingObjects
%@ (%p) for constraint %@: database: %@, conflictedObjects: %@
NSTypeCode
Got non-object value back for property '%@' which returned an objectID from the snapshot.
Can't merge conflict : missing context
Can't merge conflict : conflicting objects have different entities.
Can't merge conflict : resolution stage failed
That was unexpected. Error trying to get %@ from %@ (%@)
B24@?0@"NSMergeConflict"8@"NSDictionary"16
currentEntityMapping
currentPropertyMapping
migrationProgress
Cannot create an NSMigrationManager with a nil source model
Cannot create an NSMigrationManager with a nil destination model
CoreData: Schema migration (manager)
Manager requires an entity mapping for associations
Can't find mapping for name (%@).
(migration) got more destinations for source than we expected. (%@, %@, %@)
Property mapping %@.%@ missing required relationship name argument to destinationInstancesForSourceRelationshipNamed:sourceInstances:
Can't find relationship for name (%@) for entity (%@) in source model.
more
fewer
(migration) got %@ destinations[%lu] for sources[%lu] than we expected. (%@, %@)
(migration) got more sources for destination than we expected. (%@, %@, %@)
Can't find entity named %@ in source model
versionHash
Mismatch between mapping and source/destination models
sourceModel
destinationModel
mappingModel
Can't add source store
journal_mode
journal_mode]
Can't add destination store
Failed to save new store after first pass of migration.
Failed to save new store after second pass of migration.
Failed to save new store.
B16@?0@"NSSQLStoreRequestContext"8
SQLQueue: %@ : %p
dispatch_queue_attr_make_with_qos_class() returned NULL in %s
NSSQLConnection manager failed to initialize with error domain '%s' code '%ld' reason:'%s' from %@
NSSQLConnection manager failed to initialize with exception %@
v16@?0@"NSSQLiteConnection"8
 NSSQLConnectionManager tried to blow a lock
handleStoreRequest failed with excception: %@
handleStoreRequest failed with unknown excception
scheduleBarrierBlock failed with excception: %@
scheduleBarrierBlock failed with unknown excception
scheduleConnectionsBarrier failed with excception: %@
scheduleConnectionsBarrier failed with unknown excception
disconnectAllConnections failed with excception: %@
disconnectAllConnections failed with unknown excception
enumerateAvailableConnectionsWithBlock failed with exception: %@
enumerateAvailableConnectionsWithBlock failed with unknown excception
%@ (URL: %@)
Store does not support encryption
objectIDFactoryForEntity invoked after store was removed
objectIDFactoryForEntity invoked before model was finalized
Unable to unload store file because file at path '%@' could not be removed
File appeared during sanity check; this seems suspicious
Failed to create file; code = %d
Component of path %@ is not a directory
Failed to access file: %d
Error opening store: %@
Could not write to file.
Store does not support this method
-init results in undefined behavior for NSBatchInsertRequest
<NSBatchInsertRequest : entity = %@ resultType = %@ and %@>
%lu objects
handler provided
This batch insert request (%p) was created with a string name (%@), and cannot respond to -entity until used by an NSManagedObjectContext
v32@?0@"NSString"8@"NSManagedObjectModel"16^B24
Can't find entity for batch insert (%@)
'%ld' is an unknown NSBatchInsertRequestResultType value
NSBatchInsertRequestResultTypeStatusOnly
NSBatchInsertRequestResultTypeCount
NSBatchInsertRequestResultTypeObjectIDs
Mismatched result types during aggregation of batch insert results
NSStoreType
NSStoreUUID
NSStoreModelVersionHashes
NSStoreModelVersionIdentifiers
NSStoreModelVersionHashesDigest
added
removed
changedUUID
NSPersistentStoreCoordinatorStoresWillChangeNotification
NSPersistentStoreCoordinatorStoresDidChangeNotification
_NSPersistentStoreCoordinatorStoresDidChangePrivateNotification
NSPersistentStoreCoordinatorWillRemoveStoreNotification
NSPersistentStoreCoordinatorDidAutomigrateStoreNotification
_NSPersistentStoreCoorindatorPrivateWillRemoveStoreNotification
NSPersistentStoreTypeKey
SQLite
Binary
InMemory
NSXPCStore
NSReadOnlyPersistentStoreOption
NSSQLitePragmasOption
NSSQLitePersistWALOption
NSIgnorePersistentStoreVersioningOption
NSMigratePersistentStoresAutomaticallyOption
NSInferMappingModelAutomaticallyOption
NSPersistentStoreTimeoutOption
NSPersistentStoreOSCompatibility
NSPersistentStoreConnectionPoolMaxSize
NSPersistentStoreUnlinkDestroyOption
NSPersistentStoreForceDestroyOption
NSPersistentStoreUbiquitousContentNameKey
NSPersistentStoreUbiquitousContentURLKey
NSPersistentStoreUbiquitousContainerIdentifierKey
NSPersistentStoreFileProtectionKey
NSPersistentStoreRemoveUbiquitousMetadataOption
NSPersistentStoreForceLightweightMigrationOption
NSPersistentStoreTrackIndexUseOptionKey
NSCoreDataCoreSpotlightExporter
NSSQLiteAnalyzeOption
NSSQLiteManualVacuumOption
_NSSQLitePageSizeStoreOption
_NSNotifyObserversOfStoreChange
NSStoreModelVersionHashesVersion
NSPersistenceFrameworkVersion
NSStoreLastReferecedObjectKey
NSPersistentStoreOrderKeyUpdateNotification
NSEntityRenamingShouldRebaseKey
NSPersistentHistoryTrackingKey
NSPersistentHistoryTombstoneAttributes
NSPersistentHistoryTrackingEntitiesToInclude
NSPersistentHistoryTrackingEntitiesToExclude
NSPersistentHistoryUseContextObjectsForDeletes
NSPersistentHistoryAllowPartialHistoryMigration
NSPersistentHistoryTrackingExcludeUnmodifiedPropertiesForBatchUpdate
_NSBinaryStoreInsecureDecodingCompatibilityOption
NSBinaryStoreSecureDecodingClasses
NSPersistentStoreRemoteChangeNotificationOptionKey
NSPersistentStoreRemoteChangeNotification
com.apple.coredata.NSPersistentStoreRemoteChangeNotification.remotenotification
NSPersistentStoreCoordinatorResourceBundlesForMigration
NSPersistentStoreServiceConfigurationOptionKey
NSPersistentStoreDeferredLightweightMigrationOptionKey
Can only use -performBlock: on an NSPersistentStoreCoordinator that was created with a queue.
Can only use -performBlockAndWait: on an NSPersistentStoreCoordinator that was created with a queue.
 API Misuse: Attempt to serialize store access on non-owning coordinator (PSC = %p, store PSC = %p)
NSPersistentStoreCoordinator %p: 
NSPersistentStoreCoordinator %p
Cannot register a store class using a 'nil' type.
Store type '%@' is reserved for Core Data, and cannot be re-registered.
Invalid store URL: nil
This is not the API you're looking for.
This is not the API you're looking for
Can't create store
Unknown
Cannot set metadata in read-only store.
v16@?0@"NSPersistentStore"8
An NSPersistentStore illegally threw an exception from -willRemoveFromPersistentStoreCoordinator:
client failed to call designated initializer on NSPersistentStoreCoordinator
Cannot create an NSPersistentStoreCoordinator with a nil model
%@: Attempting recovery from error encountered during addPersistentStore: %@
Use of the mirroring options requires that a mirroring delegate also be provided. The following options were set, but a mirroring delegate was not found at '%@':
Unhandled exception in developer completion handler for addPersistentStoreWithDescription %@
Unhandled unknown exception in developer completion handler for addPersistentStoreWithDescription
iCloud Syncing is not supported on this platform.
NSPersistentStoreMirroringDelegateOptionKey
%@ is only valid as a mirroring option. It should be set using '%@' on '%@'
CoreSpotlight integration is not supported on this platform. The following option key is forbidden: %@
CoreData: Adding persistent store
unknown or nil storeType argument or otherwise unable to infer storeType argument.  Inference requires an existing file with valid metadata.
Unsupported store type.
Default
Unable to initialize store.
Caught exception trying to load store metadata during error recovery: %@
Can't read store metadata.
The store type in the metadata does not match the specified store type.
The version hash version (and associated hashes) are incompatible with the current Core Data version.
 NOT 
Incompatible version schema for persistent store '%@'.  store metadata = %@ and current model versions = %@
(migration)
 will%@attempt automatic schema migration
CoreData: error: (migration) migration failed with error %@
Error User Info: %@
Underlying error: %@
(migration)
 Automatic schema migration succeeded for store at '%@'
The model used to open the store is incompatible with the one used to create the store
%@ returned error %@ (%ld)
userInfo:
%@ : %@
storeType: %@
configuration: %@
URL: %@
options:
NSPersistentStoreCoordinator's current model hashes are %@
NSPersistentStoreRebuildIndicies
store is nil or not registered with this coordinator
nil is not a valid store.
nil is not a valid persistent store
nil is not a valid persistent store URL
The specified URI is not a valid Core Data URI: %@
(unknown)
(schema mismatch or migration failure)
(corrupt file)
(device locked)
(can't open)
(permission denied)
(I/O error)
(disk full)
This NSPersistentStoreCoordinator has no persistent stores %@.  It cannot perform a save operation.
Illegal attempt to save to a file that was never opened.  "%@".  Last recorded error = %@(%ld) / %@
Illegal attempt to save to a file that was never opened. "%@". No last error recorded.
CoreData: Executing write request
Q8@?0
Store - %@ not found in token - %@
Unable to write to file opened Read Only.
File is in Read Only mode due to Persistent History being detected but NSPersistentHistoryTrackingKey was not included.
NSPersistentStoreOptions
optimistic locking failure
A sqlite store save failed but did not return an error: %@
A xpc store save failed but did not return an error: %@
A binary store save failed but did not return an error: %@
An in-memory store save failed but did not return an error: %@
Save failed
Save partially failed: %@
NSPersistentHistoryResultTypeChangesOnly unsupported for multiple stores [%@]
NSPersistentStoreRequest
NSPersistentStore
Store returned nil but no error.
NSPersistentStoreRequest failed unsupported by all stores on this coordinator.  Request: '%@' and stores [%@]
NSPersistentStores
Operation unsupported by all stores on this coordinator.
Underlying errors
One or more stores returned an error.
Coordinator failed to create a new query generation post save
v16@?0@"NSArray"8
Either a non nil result OR an error
com.apple.CoreData.PowerAssertionsDebug
chronod
UIApplication
beginBackgroundTaskWithName:expirationHandler:
Registration for _beginPowerAssertionNamed completed with class %p on app %p and result %@
sucess
failure
Unexpected background task assertion cancellation.
Failed to acquire background task assertion for task '%@'.
Successfully acquired background task assertion %d for task '%@'.
Ended background task assertion %d.
URI is not a valid Core Data URI
Can't add the same store twice
Store is not valid for this context's generation
store
context
NSManagedObjectContext is nil for objects passed to obtainPermanentIDsForObjects
CoreData: Executing obtain objectID request
Can't resolve how to assign objects to stores; Coordinator does not have any stores
Can't resolve how to assign objects to stores; some objects may have been assigned to stores; use [[managedObject objectID] persistentStore] to find out what is going where now; use [managedObjectContext assignObject:toStore:] to straighten things out
problemObject
Cannot insert objects into a read only store.
Cannot update objects into a read only store.
Cannot update object that was never inserted.
Cannot delete objects into a read only store.
Cannot delete object that was never inserted.
Cannot lock object that was never inserted.
Can't find store type for store %@ (class == %@) in %@.
Fetch instances of entity %@ from store %@ failed, reason: %@
Referential integrity problem found during migratePersistentStore:toURL:options:withType:error: %@
Save failed during during migratePersistentStore:toURL:options:withType:error:, object added to store during fetch.
Save failed during migratePersistentStore:toURL:options:withType:error:, %d objects in store were removed during fetch.
Remote Change Notification - posting for store  %@ with userInfo %@
Save failed.
Invalid destination store URL: nil
Invalid source store URL: nil
source and destination store are different classes of store: %@ != %@
Store currentQueryGeneration returned nil unexpectedly
Invalid generation token: this persistent store coordinator does not have any of the referenced stores
Provided persistent store must be of type NSSQLiteStoreType: %@
Provided persistent store must be from this coordinator: %@
Invalid store URL
%@ - One or more unknown attributes: %@
%@ - `@""` is not a valid value.
%@ - Wrong type: %@ but should be %@
The following entities did not have a valid configuration for %@. It should be a string of comma separated attribute names to tombstone on delete.
%@ expects an instance of %@ as its value but found: %@
Exception was caught during NSPersistentStoreCoordinator -performBlock: %@ with userInfo %@
Unidentifiable exception was caught during NSPersistentStoreCoordinator -performBlock.
Exception thrown during autorelease pool drain.
 (%@, %@:%@ -> %@:%@, %@)
ZT_%@_%@_%@
%@_%@_INSERT_INCREMENT
DROP TRIGGER IF EXISTS %@
CREATE TRIGGER IF NOT EXISTS %@ AFTER INSERT ON %@ FOR EACH ROW
 UPDATE %@ SET %@ = IFNULL(%@,0) + 1
 WHERE NEW.%@ IN (SELECT %@ FROM %@ WHERE %@)
 AND NEW.%@ = %@;
 SELECT NSCoreDataTriggerUpdateAffectedObjectValue('%@', %@, %@, '%@', %@) FROM %@ WHERE %@ = NEW.%@;
%@_UPDATE_INCREMENT
CREATE TRIGGER IF NOT EXISTS %@
 AFTER UPDATE OF %@ ON %@ FOR EACH ROW
 WHERE %@ IN (SELECT %@ FROM %@ WHERE %@ = NEW.%@ AND (%@));
%@_UPDATE_DECREMENT
 UPDATE %@ SET %@ = MAX(0,IFNULL(%@,0) - 1)
%@_%@_DELETE_DECREMENT
CREATE TRIGGER IF NOT EXISTS %@ AFTER DELETE ON %@ FOR EACH ROW
 WHERE OLD.%@ IN (SELECT %@ FROM %@ WHERE %@)
 AND OLD.%@ = %@;
 SELECT NSCoreDataTriggerUpdateAffectedObjectValue('%@', %@, %@, '%@', %@) FROM %@ WHERE %@ = OLD.%@;
%@_DELETE_DECREMENT
CREATE TRIGGER IF NOT EXISTS %@ AFTER DELETE ON %@ FOR EACH ROW WHEN %@
 WHERE %@ IN (SELECT %@ FROM %@ WHERE %@ = OLD.%@ AND (%@));
COUNT_%@
CREATE TEMP TABLE %@ AS
 SELECT %@, COUNT(DISTINCT(%@.%@)) AS COUNT
 FROM %@, %@
 WHERE %@ AND %@.%@ == %@.%@
 GROUP BY %@;
 CREATE INDEX %@_INDEX ON %@(%@,COUNT);
 UPDATE %@ SET %@ = IFNULL((SELECT COUNT FROM %@ WHERE %@ = %@),0);
 DROP TABLE %@;
%@_INSERT_INCREMENT
 AFTER INSERT ON %@ FOR EACH ROW WHEN %@
 WHERE NEW.%@ = %@;
 AFTER UPDATE OF %@ ON %@
 FOR EACH ROW WHEN (%@) AND (%@) AND (NEW.%@ == OLD.%@)
 FOR EACH ROW WHEN (%@) AND (%@) AND (OLD.%@ == NEW.%@)
 WHERE OLD.%@ = %@;
 AFTER DELETE ON %@ FOR EACH ROW WHEN %@
 UPDATE %@ SET %@ = MAX(0,IFNULL(%@,0) - 1) WHERE OLD.%@ = %@;
 AFTER INSERT ON %@ FOR EACH ROW
 UPDATE %@ SET %@ = (SELECT COUNT(%@) FROM %@ WHERE (%@ = NEW.%@) AND (%@)) WHERE %@ = NEW.%@;
%@_%@_UPDATE_INCREMENT
 AFTER UPDATE OF %@ ON %@ WHEN (%@) AND
 ((NEW.%@ IS NOT NULL AND OLD.%@ IS NULL) OR (NEW.%@ != OLD.%@))
 UPDATE %@ SET %@ = IFNULL(%@,0) + 1 WHERE %@ = NEW.%@;
%@_%@_UPDATE_DECREMENT
 ((OLD.%@ IS NOT NULL AND NEW.%@ IS NULL) OR (NEW.%@ != OLD.%@))
 UPDATE %@ SET %@ = MAX(0,IFNULL(%@,0) - 1) WHERE %@ = OLD.%@;
 FROM %@
 WHERE %@
 UPDATE %@ SET %@ = IFNULL((SELECT COUNT FROM %@ WHERE %@ = %@), 0);
 FOR EACH ROW WHEN (%@) AND (%@)
%@_%@_UPDATE_TO_NULL
 AFTER UPDATE OF %@ ON %@ WHEN
 (NEW.%@ IS NULL AND OLD.%@ IS NOT NULL)
 UPDATE %@ SET %@ = 0 WHERE %@ = NEW.%@;
 UPDATE %@ SET %@ = (SELECT COUNT(%@) FROM %@ WHERE %@ = NEW.%@ AND (%@)) WHERE %@ = NEW.%@;
 SELECT %@, COUNT(DISTINCT(%@)) AS COUNT
offendingString
Unable to parse trigger predicate to an instance of NSPredicate.
 %@ 
offendingPredicate
Invalid trigger predicate, compound predicates must be AND or OR predicates.
Invalid trigger predicate, predicate must evaluate to an instance of NSComparisonPredicate or NSCompoundPredicate.
 OR (NEW.%@ %@ %ld AND OLD.%@ %@ %ld)
(NEW.%@ %@ %ld AND OLD.%@ %@ %ld)
 OR 
NEW.%@ != OLD.%@
%@ %@ %ld
OLD.%@ %@ %ld
NEW.%@ %@ %ld
offendingAttribute
Invalid trigger predicate, unable to find the attribute specified by this predicate.
Invalid trigger predicate, this predicate appears to reference a different relationship than other predicates in this trigger.
Invalid trigger predicate, failed to find the relationship identified by the keyPath.
Invalid trigger predicate, predicate operator must be one of:
NSLessThanPredicateOperatorType,
NSLessThanOrEqualToPredicateOperatorType,
NSGreaterThanPredicateOperatorType,
NSGreaterThanOrEqualToPredicateOperatorType,
NSEqualToPredicateOperatorType,
NSNotEqualToPredicateOperatorType
Invalid trigger predicate, right expression must evaluate to a constant integer value.
Invalid trigger predicate, right expression must evaluate to an instance of NSConstantValueExpressionType.
Invalid trigger predicate, left expression must be a key-path with only two components.
Invalid trigger predicate, left expression must evaluate to an instance of NSKeyPathExpressionType.
<NSBatchUpdateRequest : entity = %@, properties = %@, subentities = %d, predicate = %@
This batch update request (%p) was created with a string name (%@), and cannot respond to -entity until used by an NSManagedObjectContext
Invalid string keypath %@ passed to propertiesToUpdate:
Invalid string key %@ passed to propertiesToUpdate:
Attribute/relationship description names passed to propertiesToUpdate must match name on fetch entity (%@)
Invalid property %@ passed as key to propertiesToUpdate:
Invalid expressionDescription %@ passed as key to propertiesToUpdate:
Invalid relationship (%@) passed to propertiesToUpdate:
Can't find entity for batch update (%@)
Mismatched result types during aggregation of batch update results
recordName = %@ AND zoneName = %@ AND ownerName = %@
NSPersistentCloudKitContainerOptionsKey
NSPersistentCloudKitContainerEncryptedAttributeKey
Cannot assign the same iCloud Container Identifier to multiple persistent stores with the same database scope.
%@.%@ must be of type '%@'
offendingObject
com.apple.developer.icloud-container-identifiers
%@: will initialize cloudkit schema for store: %@
-[NSPersistentCloudKitContainer initializeCloudKitSchemaWithOptions:error:]
Finished initialize schema with result: %@
-[NSPersistentCloudKitContainer initializeCloudKitSchemaWithOptions:error:]_block_invoke
Initialize schema request failed: %@
Initialize schema failed but did not set an error: %@
v16@?0@"NSCloudKitMirroringResult"8
Failed to initialize CloudKit schema because the requests timed out (a %lds wait failed).
Couldn't initialize CloudKit schema because no stores were able to succesfully initialize.
encounteredErrors
Couldn't initialize CloudKit schema because no stores in the coordinator are configured to use CloudKit: %@
NSPersistentCloudKitContainer got a result back that isn't of type 'NSCloudKitMirroringDelegateSerializationRequestResult' when asking about the record for a managed object id.
Record serialization failed with error: %@
-[NSPersistentCloudKitContainer recordForManagedObjectID:]_block_invoke
Wait timed out during call to recordForManagedObjectID
Failed to retrieve record for object '%@'
-[NSPersistentCloudKitContainer recordForManagedObjectID:]
NSPersistentCloudKitContainer got a result back that isn't of type 'NSCloudKitMirroringDelegateSerializationRequestResult' when asking about the records for a group of managed object ids.
-[NSPersistentCloudKitContainer recordsForManagedObjectIDs:]_block_invoke
Wait timed out during call to recordsForManagedObjectIDs
Failed to retrieve records for objects %@
-[NSPersistentCloudKitContainer recordsForManagedObjectIDs:]
An error occured while fetching record metadata to figure out if an object is mutable: %@
Failed to fetch the CKShare for an object in the shared database: %@ - %@
Client passed in objects from multiple contexts, this should return an error.
Metadata context was left dirty: %@
The object %@ is already assigned to the zone '%@' and cannot be moved to '%@'.
Target store has no mirroring delegate.
Target store has no mirroring delegate: %@
Metadata context was left dirty after preparing sharing metadata: %@
Share acceptance succeeded but did not return NSCloudKitMirroringAcceptShareInvitationsResult: %@
Share acceptance succeeded but did not return an acceptance result.
Provided persistent store is not set to the shared database scope and cannot accept share invitation.
databaseScope
Provided persistent store is not backed by CloudKit.
v16@?0@"CKShareParticipant"8
Encountered an error trying to update the store metadata while attempting to purge zone '%@': %@
-[NSPersistentCloudKitContainer purgeObjectsAndRecordsInZoneWithID:inPersistentStore:completion:]_block_invoke
fetchSharesMatchingObjectIDs failed but did not set an error.
encodedShareData != nil
fetchSharesInPersistentStore failed but did not set an error.
%@%@
%@: Sharing %lu objects from store: %@ to share: %@
-[NSPersistentCloudKitContainer shareManagedObjects:toShare:completion:]
Client attempting to share objects from multiple contexts, this should return an error.
NSPersistentCloudKitContainer does not support sharing objects across persistent stores. Objects must first be assigned to the correct persistent store (private, or shared as the case may be), so that they can be moved in to the correct record zone for sharing.
%@: Found %lu inserted objects to share.
-[NSPersistentCloudKitContainer shareManagedObjects:toShare:completion:]_block_invoke
Could not locate private store in which to share.
%@: Got zone and metadatas: %@
Metadata context was left dirty after attempting to share objects: %@
Failed to export: %@
Timed out waiting for share records to be exported: %@
The sharing operation timed out.
NSIsOptional
NSIsReadOnly
NSIsTransient
NSIndexedBySpotlight
NSIsStoredInTruth
NSIsOrdered
NSAllowsCloudEncryption
NSPropertyName
NSValidationPredicates
NSValidationWarnings
NSPropertyName requires a NSString
(%@), name %@, isOptional %d, isTransient %d, entity %@, renamingIdentifier %@, validation predicates %@, warnings %@, versionHashModifier %@
 userInfo %@
Can't change name of property from %@ to %@
Mismatch between length of validation predicates and warnings
Can't read property into shell: Not enough bytes left
Can't read property into shell: Unknown type
Can't read property into shell: Missing version hash value
Corrupted archive (missing property name).
Can't read property into shell: Can't read validation predicates
Unable to decode validation predicate for property %@ : %@
Can't read property into shell: Can't read validation warnings
Unable to decode validation warning for property %@ : %@
Unable to decode userInfo for property %@ : %@
range (%lu, %lu), offset %ld
An instance of %@ requires a non-nil fetchRequest and managedObjectContext
An instance of %@ requires a fetch request with sort descriptors
NSDiffableDataSourceSnapshot
_PFDiffableDataSourceSnapshot
Difference delegate method is not supported when fetched results controller is configured with a sectionNameKeyPath
%@ does not support both change tracking and fetch request's with NSDictionaryResultType
Result type of fetched object is not an NSManagedObjectIDResultType, NSDictionaryResultType or NSManagedObjectResultType.
v8@?0
NSFetchedResultsController: cannot access fetched objects before -performFetch:
NSFetchedResultsController: no section at index %lu in sections list
cannot access fetched objects before -performFetch:
no section at index %lu
NSFetchedResultsController: no object at index %lu in section at index %lu
no object at index %lu in section at index %lu
invalid Section Index offset%li
Index title at %li is not equal to '%@'
Count
41b5a6b5c6e848c462a8480cd24caef3
The fetched object at index %lu has an out of order section name '%@. Objects must be sorted by section name'
(%@) %@
distinct:
sectionCount
Fetching ERROR during section computation with request = %@ and error = %@ and userInfo = %@
(NSFetchedResultsController) A section returned nil value for section name key path '%@'. Objects will be placed in unnamed section
q24@?0@"_PFChangeInfo"8@"_PFChangeInfo"16
(NSFetchedResultsController) rebuilding section caches
(NSFetchedResultsController) error refetching objects after context update: %@
B24@?0@"_PFChangeInfo"8@"NSDictionary"16
Serious application error.  An exception was caught from the delegate of NSFetchedResultsController during a call to -controllerDidChangeContent:.  %@ with userInfo %@
Serious application error.  Unidentifiable exception was caught from the delegate of NSFetchedResultsController during a call to -controllerDidChangeContent:.
 (%@): couldn't read cache file to update store info timestamps
 (%@): error writing section cached info at %@ with error %d
 (%@): couldn't create section info cache directory at %@ : %@
 (%@): couldn't create section info file at %@ : %d
.CoreDataCaches
SectionInfoCaches
sectionInfo
d69e6c783a242772974cfc99189691b88e9d37c3
-wal
NSPropertyTransformMandatoryPropertyValidation
(%@), name %@, valueExpression %@, userInfo %@
NSDestinationPropertyName
NSValueExpression
NSPropertyTransforms
NSDestinationPropertyName requires a NSString
Can't modify an immutable property mapping.
NSPrerequisiteTransform
NSReplaceMissingValueOnly
(%@), propertyName %@, valueExpression %@, prerequisiteTransform %@, replaceMissingValueOnly %@
NSRelationshipDescriptionOrderKeyIndexOption
NSMaxCount
NSMinCount
NSDeleteRule
NSDestinationEntity
_NSDestinationEntityName
NSInverseRelationship
_NSInverseRelationshipName
_NSDestinationEntityName requires a NSString
_NSInverseRelationshipName requires a NSString
%@, destination entity %@, inverseRelationship %@, minCount %lu, maxCount %lu, isOrdered %d, deleteRule %lu
Relationship is not a toMany
Unsupported relationship type for ordered index
unsupported relationship
Relationship is not ordered
repairing missing delete propagation for to-one relationship %@ on object %p (%@) with bad fault %p (%@)
Dangling reference to an invalid object.
Illegal container for relationship: value = %@; relationship = "%@".
repairing missing delete propagation for to-many relationship %@ on object %p (%@) with bad fault %p (%@)
%@ { inserts (%@), updates (%@), deletes (%@) locks (%@) }
n%u_t%cu
__n%u_var%cu
__var%u
_Z_intarray%u
com.apple.coredatad.cloudkit.
CDDCloudKitServer
cdck.sqlite
v24@?0@"NSPersistentStoreDescription"8@"NSError"16
Failed to load persistent stores for CloudKit integration: %@
Failed to initialize storage:
Failed to create directory for persistent storage: %@
Called to accept connection for unknown listener: %@
Unknown message: %@
The server is not initialized due to: %@
The server was unable to process the request because it timed out waiting for initialization.
Bug in CoreData CloudKit Server: Response success == NO but error is also nil.
CloudKit Server is attempting to send back a nil response: %@
bundleIdentifier = %@ AND storeConfigurationName = %@ AND storePath = %@
Failed to register store for message '%@' due to the following error: %@
Provided file handle is invalid, the file is not writable.
%@: Asked to schedule activity for store: %@
-[CDDCloudKitServer _handleScheduleMessage:]
storePath = %@
Multiple clients registered for the same store path: %@
Found unknown activity type: %@
Scheduling activity: %@ for client: %@ with scheduler: %@
-[CDDCloudKitServer _handleScheduleMessage:]_block_invoke
Asked to run activity but no server: %@
v24@?0@"CKSchedulerActivity"8@?<v@?q>16
Already have scheduled activity for client: %@
Saving changes for client: %@
Failed to save changes: %@
No change to save for client: %@
Failed to get a container for '%@
No client is registered for: %@
Asked to run activity: %@
-[CDDCloudKitServer runActivity:completionHandler:]
activityUUID = %@
Looking up activities matching the identifier: %@
-[CDDCloudKitServer runActivity:completionHandler:]_block_invoke
Found more than one scheduled activities matching the identifier '%@': %@
Running scheduled activity: %@
Client: %@
PFCloudKitDidSetupNotificationName
result
Success was NO but expected YES
Error was non-nil, but expected nil
v16@?0@"NSNotification"8
Store initialized waiting for the mirroring delegate to set up.
Mirroring delegate initialized.
Backup export failed: %@
-[CDDCloudKitServer runActivity:completionHandler:]_block_invoke_3
Failed to execute export request: %@
Timed out waiting for the mirroring delegate to set up.
Failed to load persistent store for client: %@
Failed to load managed object model for registered client: %@
No activity registered with identifier: %@
Failed to handle activity because initialization took longer than expected: %@
Successfully finished activity, pruning: %@
-[CDDCloudKitServer finishedActivity:withResult:inManagedObjectContext:]_block_invoke
Failed to prune activity after successful execution: %@
Execution of activity encountered a fatal error, it will not be retried: %@
Failed to prune activity after fatal error: %@
Execution of activity failed: %@
Provided file handle is invalid, it doesn't point to the requested store.
Failed to fstat file descriptor (%d:%d): %d
Failed to stat file at url (%d:%d): %@
Failed to get a real path for the provided store path.
NSSQLAttributeTriggerAssociationKey
%@ called after the request was sent to %@
Request: %@
%@.%@ - attribute not found on entity
v32@?0@"NSAttributeDescription"8Q16^B24
%@ - entity not found in model
Invalid '%@'. The following validation failures occured:
createRecordZoneID called before object has an owner name and zone name: %@
Illegal attempt to work with the core-data or default zone in the shared database: %@
%K = %@ AND %K = %@ AND database.databaseScopeNum = %@
Multiple zone entires discovered for a single record zone: %@
entityId = %@ and entityPK IN %@
recordZone.ckRecordZoneName
recordZone.ckOwnerName
Invalid RHS for rtree query (should be an array but isn't) %@
properties
Invalid RHS for rtree query (array should have 2 elements) %@
Invalid RHS  element for rtree query (should be a constant value) %@
Mismatch between number of properties and number of ranges for rtree query
ranges
Invalid index name expression (should be a constant value)
indexNameExpression
Invalid index name (should be a string)
indexName
Invalid LHS for rtree query %@
Unsupported predicate; can't generate SQL for %@
Unable to generate SQL for keypath %@
Invalid ranged property (relationship?!?) %@
(no index name specified, multiple indices available)
(no index found for name %@)
Can't find index for rtree query %@
Can't generate SQL; crosscheck failed
Invalid RHS for rtree query %@
%@ <= %@.%@_MIN AND %@.%@_MAX <= %@
%@ IN (SELECT %@.Z_PK FROM %@ %@ WHERE (%@))
%@: columnName = %@, type = %d, slot = %d, fetchIndex = %d propertyType = %d
Problem with subpredicate %@
 NOT (
Unknown compound predicate type %@
Unable to generate compound where clause for predicate (%@) (unknown problem)
bundleIdentifier
fileProtectionType
storeConfigurationName
containerIdentifier
activityUUID
activityTypeNum
scheduledAt
isUserRequestedBackupTask
registeredClient
scheduledActivities
entitySpecificationKeypath
entitySpecificationKeypathContainsToMany
generatePairs
explicitRestrictingEntityQualifier
"%@" is not a valid entity name.
'%@'
Can't specify non string/number/date value as part of index
valueSpecified
(?, ?)
Attempt to init PFCloudKitHistoryAnalyzer with the wrong options class: %@
History analysis was aborted because the activity was deferred by the system.
Transaction appears to have been processed twice: %@
_NSSQLiteSEEKeychainItemOption
com.apple.CoreData.SQLDebug
com.apple.CoreData.ConcurrentFetching
com.apple.CoreData.BufferAllocations
Dictionary Result type overriden to use Buffered Results with level - %ld!!!
Keychain failed to return key for database encryption (error %d): %@
Keychain failed to return key for database encryption (error %d)
Keychain did not return a key for database encryption
entityForObjectID was passed a nil objectID
entityForObjectID failed to retrieve an NSSQLEntity for objectID %@
entityForObjectID passed a nil entity description from %@
_sqlCoreLookupSQLEntityForEntityDescription failed to return a result for objectID %@ with entity %@
path's fileSystemRepresentation returned NULL
 failed to open file due to illegal URL encoding.  error = %@ with userInfo %@
Cannot create an SQL store with a nil URL.
CoreData SQL stores only support file URLs (got %@).
Error - In Memory store at /dev/null can only have NSPersistentStoreConnectionPoolMaxSizeKey equal to 1
NSPersistentStoreRemoveStoreOnCleanup
Got a nil sqlmodel
Persistent History Tracking Option - Batch Update Only Tracks Modified Properties
NSPersistentHistoryTrackingEntitiesToInclude must be an NSArray of NSString
NSPersistentHistoryTrackingEntitiesToInclude has entities not included in the Managed Object Model
NSPersistentHistoryTrackingEntitiesToExclude must be an NSArray
NSPersistentHistoryTrackingEntitiesToExclude & NSPersistentHistoryTrackingEntitiesToInclude are mutually exclusive, you cannot set both options
NSPersistentHistoryTrackingEntitiesToExclude must be an NSArray of NSString
Entity (%@) was not found in model.
Persistent History is disabled - %@
Can't find table for entity '%@' in database at URL '%@'
com.apple.security.keychain-defaultContext.TrustedPeersHelper.db
Machine
ZMACHINE
Error encountered during check for existing table drop %@ with userInfo %@
Exception caught during check for existing table drop %@
Rebuilding indicies for store - %@
Photos.sqlite
COUNT(*)
ZSHAREPARTICIPANT
SELECT COUNT(*) FROM (SELECT * FROM %@ WHERE Z_ENT = 0 LIMIT 1)
Corruption encountered during a past migration - DB integrity has been compromised.
Attempting Repair - One entity found for table - %@ setting Z_ENT = %u
UPDATE OR FAIL %@ SET Z_ENT = %u
Unable to Repair - More than one entity found for table - %@ Entites - %@
Error encountered during check for db integrity %@ with userInfo %@
Exception caught during check for db integrity %@
Repairing old triggers failed with error = %@ and userInfo = %@
Error encountered during trigger recreation %@ with userInfo %@
Exception caught during trigger recreation %@
Repairing triggers failed with error = %@ and userInfo = %@
Repairing derived attributes failed with error = %@ and userInfo = %@
Exception caught during repair of triggers %@ with userInfo %@
Exception caught during repair of triggers %@
Exception caught during rebuild of DA triggers %@ with userInfo %@
Exception caught during rebuild of DA triggers %@
pragma auto_vacuum
pragma auto_vacuum=1
vacuum
Error caught during autovacuum check %@ with userInfo %@
Exception caught during autovacuum check %@
Exception caught during drop of old history tracking tables %@ with userInfo %@
Exception caught during drop of old history tracking tables %@
coreduetd
Exception caught during drop/create of history tracking tables %@ with userInfo %@
Exception caught during drop/create of history tracking tables %@
Exception caught during add of tombstone columns %@ with userInfo %@
Exception caught during add of tombstone columns %@
found Ancillary Entities in Persistent History - %@
Exception caught during checking for Ancillary Entities %@ with userInfo %@
Exception caught during checking for Ancillary Entities %@
Exception caught during adding transaction string table %@ with userInfo %@
Exception caught during adding transaction string table %@
Exception caught during create of history tracking tables %@ with userInfo %@
Exception caught during create of history tracking tables %@
Store opened without NSPersistentHistoryTrackingKey but previously had been opened with NSPersistentHistoryTrackingKey - Forcing into Read Only mode store at '%@'
Error caught during cached model check %@
Exception caught during cached model check %@
Exception caught during model caching %@ with userInfo %@
Exception caught during model caching %@
Exception trying to update primary key table
failed to set up index tracking, disabling
finished upgrade checks, bumping metadata
Exception caught during _ensureDatabaseMatchesModel %@ with userInfo %@
Exception caught during _ensureDatabaseMatchesModel %@
v16@?0@"NSSQLiteConnection"8
v16@?0@"NSSQLStoreRequestContext"8
Remote Change Notification - registered core observer for %@
unable to check registration for posting store changed notification
Remote Change Notification - Posting for %@
generational row cache %p failed to return a value for store '%@' with token %@
cannot find data for a temporary oid: %@
_NSSQLCoreTransactionStateChangeNotification
_NSSQLCoreTransactionType
_NSSQLCoreTransientSequenceNumber
_NSSQLCoreActiveSavingContext
History Change Request failed as no history tracking option detected on store %@ at %@
No history tracking option detected on store
Store - %@ is not found in token - %@
Store does not have index tracking enabled
-executeRequest: encountered exception = %@ with userInfo = %@
to-one key not allowed here
Keypath contains a toOne relationship that is unknown to the entity set on the Fetch Request
Finished rebuilding indicies for store - %@
Index recreation failed
Error encountered during index recreation %@ with userInfo %@
Exception caught during index recreation %@
Unable to reindex store(%@) - %@
read-only
nil coordinator
_SUPPORT
Can't write external data to non-file URL
_FBF
Can't create support directory (can't create directory)
Can't create fbf directory (file exists)
_EXTERNAL_DATA
Can't create external reference directory (file exists)
Could not connect to database.
_NSAutoVacuumLevel
URL is not a file URL or is nil
Only persistent stores backed by files can be destroyed
CoreData: Destroying store
Failed to delete support directory for store: %@
Both source and destination stores must be backed by files
CoreData: Replacing entire store
_transsrc_4052146efa0d85c9fbe0634c0e8bc4457ed82f7c
_transdst_878d188f109e9f52ae70b0b25413f6a38c8267a8
Failed to delete staging area for external support directory for store: %@
Failed to copy support directory from store: %@ to store: %@.  %@
Failed to delete support directory for store: %@.  %@
Failed to copy support directory from store: %@ to store: %@ (failed to move %@ to %@ due to %@)
Failed to unlink support directory %@ from old store location: %@ due to %@
Only persistent stores backed by files can be rekeyed
CoreData: Rekeying entire store
Exception occurred during initialization of query generation connection: %@
An unreported error occurred during initialization of query generation connection.
Preloading query generation connection success for store with options: %@
Preloading query generation connection failed without a reported error for store with options: %@
Preloading query generation connection for high protection class CloudKit store failed with exception: %@
Unsupported feature in this configuration
initializing query generations connection for current failed.
Failed to adopt query generation from remote change
SQLCore failed to get a currentQueryGeneration
initializing query generations connection failed.
SQLCore dispatchRequest: exception handling request: %@ , %@ with userInfo of %@
YouTube
CoreData: Saving index statistics
Invalid parameter value (bad entity)
Invalid parameter value (zero)
v32@?0@"NSCKEvent"8Q16^B24
failed to retrieve ordering information from fault for object %@ and relationship %@
v32@?0@"NSObject<NSSQLAttributeExtension>"8Q16^B24
Refreshing trigger values failed to adopt post transaction query generation with error %d
%@.queue.%p
Remote Change Notification - observer received for  %@ with state %lld
Remote Change Notification - PSC to post notification for store  %@ with transaction ID %lld
Exception thrown posting NSPersistentStoreRemoteChangeNotification: %@
Unknown exception thrown posting NSPersistentStoreRemoteChangeNotification
Remote Change Notification - Failed to setup notification listener for NSPersistentStoreRemoteChangeNotification: %d
Remote Change Notification - registered for  %@
Failed to fetch metadata for database: %@
-[PFCloudKitImporter importIfNecessaryWithCompletion:]_block_invoke
Import failed because fetching the database metadata encountered an unhandled exception.
v16@?0@"CKRecordZoneID"8
v16@?0@"CKServerChangeToken"8
v28@?0@"CKServerChangeToken"8B16@"NSError"20
The request was aborted because it was deferred by the system.
%@: Database fetch for request: %@ failed with error: %@
-[PFCloudKitImporter databaseFetchFinishWithContext:error:completion:]
needsImport = YES AND database.databaseScopeNum = %@
Import failed because an unhandled exception was encountered while trying to process the results of the database fetch operation.
%@: Import request finished: %@ - %@
-[PFCloudKitImporter databaseFetchFinishWithContext:error:completion:]_block_invoke
%@: Import request finished with no work to do: %@
%@: Error fetching database metadata update for request: %@
-[PFCloudKitImporter databaseFetchFinishWithContext:error:completion:]_block_invoke_2
%@: Processing work items: %@
-[PFCloudKitImporter processWorkItemsWithCompletion:]
Work item result failed but did not include an error: %@
The importer needs to be taught how to merge results of different types when dealing with multiple work items: %@
-[PFCloudKitImporter processWorkItemsWithCompletion:]_block_invoke
Import failed because the post-operation metadata commit hit an unhandled exception.
TEMP_CD%@
B12@?0C8
columnName
q24@?0@8@16
@count
Invalid keypaths found in derived attribute (derivationExpression)
Invalid keypaths found in derived attribute (filteringPredicate)
Invalid keypaths found in derived attribute (unsupported function)
Invalid keypaths found in derived attribute (can't find keypath component)
component
Invalid keypaths found in derived attribute (derived attribute found in dependency chain)
Invalid keypaths found in derived attribute (non-terminal attribute not followed by a function)
<NSSQLEntity %@ id=%d>
Trying to add a non-attribute, non-to-one property to an entity: %@
%@: %@
v32@?0@"PFCloudKitErrorLogEntry"8Q16^B24
storeRequest
Z_PK
SELECT
COUNT(
DISTINCT
t0.Z_PK)
FROM
SELECT COUNT(*) FROM %@
SELECT COUNT(*) FROM (
%@: Unable to set query generation on moc: %@
-[PFCloudKitSetupAssistant _checkAndInitializeMetadata:]_block_invoke_2
Failed to initialize CloudKit metadata: %@
-[PFCloudKitSetupAssistant _checkAndInitializeMetadata:]_block_invoke
The mirroring delegate could not initialize because it's store was removed from the coordinator.
Failed to asset file (and unlink:%d) at url: %@
-[PFCloudKitSetupAssistant _initializeAssetStorageURLError:]_block_invoke
Failed to create largeBlobDirectoryURL with observed store: %@
Failed to initialize the asset storage url because the store was removed from the coordinator.
%@: Could not create cloudkit container: %@
Unexpected exception thrown during account setup: %@
Unable to initialize the CloudKit container because this device does not support device to device encryption.
Unable to initialize the CloudKit container because this account does not support device to device encryption.
Unable to determine the status of the iCloud account (CKAccountStatusCouldNotDetermine).
Unable to initialize without a valid iCloud account (CKAccountStatusRestricted).
Unable to initialize without an iCloud account (CKAccountStatusNoAccount).
Unknown account status: %d
Unable to initialize without an iCloud account (CKErrorNotAuthenticated).
v24@?0@"CKAccountInfo"8@"NSError"16
Failed to get a container back for the identifier: %@
CloudKit integration does not support the '%@' database scope.
Failed to get a database back for scope '%@' from container: %@
database.databaseScopeNum = %@ AND %K == YES
An unhandled exception was caught during a fetch for zone in manatee identity loss recovery.
Deleting zones %@ in response to Manatee identity loss failed, %@
-[PFCloudKitSetupAssistant _recoverFromManateeIdentityLossIfNecessary:]_block_invoke
v32@?0@"NSArray"8@"NSArray"16@"NSError"24
Failed to fetch zone metadata during un-marking zones needing recovery from Manatee identity loss: %@
%@: Failed to save metadata while un-marking zones needing recovery from Manatee identity loss: %@
The mirroring delegate could not recovery from Manatee identity loss because it's store was removed from the coordinator.
Setup failed because an unhandled exception was caught during a fetch for zone creation.
%@ unable to recover from error: %@
Encountered subsequent error: %@
-[PFCloudKitSetupAssistant _createZoneIfNecessary:]
Could not locate the desired zone in the database with scope '%@': %@
Zone fetch didn't return an error or a dictionary of zones
v24@?0@"NSDictionary"8@"NSError"16
Custom zones aren't supported yet with the public database.
Setup failed because an unhandled exception was caught during a zone metadata fetch for the database subscription.
Subscription save succeeded but did not return '%@' as a saved subscription
v24@?0@"CKRecordID"8@"NSError"16
%@: CKIdentity record has changed from %@ to %@
-[PFCloudKitSetupAssistant _checkUserIdentity:]_block_invoke_2
%@: CKIdentity record matches store: %@
-[PFCloudKitSetupAssistant _checkUserIdentity:]_block_invoke
%@: CKIdentity record changed from nil to %@
Unexpected exception thrown during identity check: %@
%@: Identity fetch failed due to authentication but store was never assigned to a user record: %@
%@: First identity fetch failed due to authentication but store was never assigned to a user record: %@
Identity check was cancelled because the store was removed from the coordinator.
%@: Identity fetch failed with unknown error: %@
-[PFCloudKitSetupAssistant _checkUserIdentity:]
Identity fetch failed but did not set an error.
SELF
Setup failed because an unhandled exception was caught during event history truncation.
 AND (
WHERE 
GROUP BY 
HAVING 
%@%d_%@
<%@: %p - %@>
 { %@ }
success
CREATE %@INDEX IF NOT EXISTS Z_%@_%@ ON %@ (
UNIQUE 
%@ COLLATE BINARY %@
DESC
DROP INDEX IF EXISTS Z_%@_%@
Unable to generate sql for %@ as part of  expression (%@)
Wrong number of arguments to function add:to: (%@)
Unable to generate sql for add:to: argument 0(%@)
Unable to generate sql for add:to: argument 1(%@)
Unsupported expression in index description (%@)
(SELECT 
) FROM 
restrictingEntityPredicate
 WHERE (
 >= 
Can't generate sql for entityID
 <= 
Unsupported expression in index description (%@), '%@' not supported in this context
Unsupported join (min/max(key.path) not allowed in updates)
Invalid keypath element (not a relationship or attribute): %@
Invalid keypath (continues after attribute name): %@
Invalid keypath (request for aggregate operation on a toOne-only keypath): %@
Invalid keypath (too many toMany relationships): %@
count
Invalid keypath (no terminal attribute in call to math aggregate): %@
Failed to generate SQL for function expression: %@
Unsupported expression in index description (%@), aggregates not allowed here.
Non-attribute property passed to math function: %@
Unable to generate sql for %@, empty max/etc expression
Unable to generate sql for %@
Unable to generate sql for subquery: %@
Unsupported expression %@
Unable to generate sql for %@() : argument (%@) not supported
Unsupported expression in index description (%@), aggregate operations not allowed here
Unable to generate sql for %@, empty %@ expression
Unable to generate sql for %@, empty expression
Bad argument to upper/lower function (needs to be a keypath or a string) : %@
Invalid number of parameters passed to uppercase: function
Bad value
Unable to generate sql for %@, can't drop index on non-keypath
Invalid number of parameters passed to function (%@)
Unsupported expression in index description (%@), 'count' not supported in this context
Invalid number of arguments to count (requires at least 1 argument)
Unable to generate SQL for count expression %@
count(*)
.@count
Unable to generate SQL for expression: %@
COUNT (
Unsupported function expression : %@
Invalid number of arguments to avg function : %@
Bad argument to %@ (can't get the %@ of collection) : %@
Bad argument to sum (non-numeric, non-collection argument) : %@
Unable to generate SQL for keypath: %@
Bad argument to aggregate %@ in select (must be a keypath or constant value) : %@
Non-attribute property passed to sum: %@
Unable to generate SQL for subquery: %@
Unsupported argument to sum : %@
Unsupported expression in index description (%@), 'distinct' not allowed here
Invalid number of arguments to distinct : %@
Invalid argument to distinct : %@
Unable to generate SQL for distinct : %@
DISTINCT 
Unsupported expression in index description (%@), 'now' not allowed here
Invalid number of arguments to now function : %@
Invalid number of arguments to length: function : %@
Invalid argument to length: : %@
Unable to generate SQL for length : %@
length(
You should not have made it here, scope failed at its job : %@
NSCoreDataToUpper(
NSCoreDataToLower(
abs(
total
 << 
 >> 
Unsupported function type passed as index component (either not a valid function at all, or just not valid in this context).
Unsupported function type passed to SQL store
@min
@max
@sum
@avg
ignoreInheritance
outerFetch
Bad NSFetchRequestExpression (%@ propertiesToFetch)
Too few
Too many
Bad fetch request (NSManagedObjectResultType not compatible with contents of propertiesToFetch)
ZZ_PK
Unknown predicate type for predicate: %@
informationGatherer
havingPredicateAnalyser
havingPredicate
Invalid fetch request: HAVING with no GROUP BY
Invalid fetch request: GROUP BY requires NSDictionaryResultType
substitutionVariables
Unsupported predicate %@
Unsupported nested update inside of %@
nestedWhereSelect
duringPrefetching
subOrder
columnSubOrder
SELECT 0 FROM %@ WHERE 0 = 1
bindIntarrays
fabricatedSQLEntityForReadOnlyFetch
bindIntarraysSubstitutionOrder
Unable to generate index for %@
Reason: %@, %@
Reason: predicate always evaluates to false
%@ - Failed to archive system fields for record: %@
-[PFCloudKitArchivingUtilities newArchivedDataForSystemFieldsOfRecord:]
Decoded share zoneID doesn't match row: %@
A fatal error has occured trying to decode sharing metadata, please file a bug with a sysdiagnose and attach the application store files if possible.
NSUnderlyingExceptionKey
Unsupported function expression %@
Undefined variable expression %@
Unsupported: collections not allowed in index expressions.
Unsupported element in aggregate expression %@
(SELECT * FROM %@) 
VALUES 
Fetch request expressions not allowed in indexes
Unsupported fetch request expression in update - too many results
Unsupported subquery collection expression type
subquery
Unsupported expression type (%u, %@)
com.apple.coredatad
storeDirectoryPath: %@
machServiceName: %@
storeDirectoryPath
machServiceName
<NSPersistentHistoryToken - %@>
%@ is not supported for %@, use %@
Tokens have different number of stores.
Tokens have different set of stores.
v32@?0@"NSString"8@"NSNumber"16^B24
NSPersistentHistoryTokenDictionary
fileHandle
storeFileProtectionClass
storeType
DECIMAL
CHAR
VARCHAR
FLOAT
CLOB
UNDEFINED
INTEGER PRIMARY KEY
entity required
statement required
empty row
missing original
missing fetch request
DELETE FROM %@ WHERE Z_PK = OLD.%@ ; 
UPDATE OR FAIL %@ SET Z_OPT = (Z_OPT + 1) WHERE Z_PK = OLD.%@ ; 
%@; %@
Delete rule is not supported for batch deletes
CREATE TEMPORARY TRIGGER IF NOT EXISTS ZQ_%@_TRIGGER AFTER DELETE ON %@ FOR EACH ROW BEGIN %@%@ END
DROP TRIGGER IF EXISTS ZQ_%@_TRIGGER
CREATE TABLE 
%@ %@
CREATE TEMP TABLE 
%@ %@ UNIQUE
, CONSTRAINT %@ UNIQUE (
 INTEGER PRIMARY KEY, 
 VARCHAR, 
 INTEGER, 
 INTEGER)
INSERT INTO %@(%@, %@, %@, %@) VALUES(%u, '%@', %u, %qd)
UPDATE OR FAIL %@ SET %@ = MAX((SELECT %@ FROM %@ WHERE %@ = '%@'), (SELECT CASE WHEN (SELECT COUNT(*) FROM %@ )== 0 THEN 0 ELSE (SELECT MAX(%@) FROM %@) END)) WHERE %@ = '%@'
SELECT CASE WHEN (SELECT COUNT(*) FROM %@) == 0 THEN 0 ELSE (SELECT MAX (%@) FROM %@) END
MAX((SELECT %@ FROM %@ WHERE %@ = '%@'), (%@))
MAX((SELECT %@ FROM %@ WHERE %@ = '%@'),
(%@)
UPDATE OR FAIL %@ SET %@ = (%@) WHERE %@ = '%@'
ALTER TABLE 
 RENAME TO 
) SELECT 
 FROM 
DROP TABLE IF EXISTS 
DROP TABLE 
, PRIMARY KEY (
%@_%@_INDEX
CREATE INDEX IF NOT EXISTS %@ ON %@ (%@)
CREATE INDEX IF NOT EXISTS %@ ON %@ (%@, %@)
%@_%@_%@_%@_INDEX
CREATE INDEX IF NOT EXISTS %@ ON %@ (%@, %@, %@)
DROP INDEX IF EXISTS %@
_NSEntityOmitSubentityColumnIndex
Entity named:%@ not found for relationship named:%@
MissingEntity
Name: %@ Destination Entity:%@
DELETE FROM %@ WHERE Z_PK = OLD.%@
DELETE FROM %@ WHERE %@ = OLD.Z_PK
SELECT RAISE(FAIL, 'Batch delete failed due to mandatory OTO nullify inverse on %@/%@') FROM %@ WHERE Z_PK = OLD.%@
UPDATE OR FAIL %@ SET %@ = NULL , %@ = NULL, Z_OPT = (Z_OPT + 1) WHERE %@ = OLD.Z_PK
UPDATE OR FAIL %@ SET %@ = NULL , Z_OPT = (Z_OPT + 1) WHERE %@ = OLD.Z_PK
UPDATE OR FAIL %@ SET Z_OPT = (Z_OPT + 1) WHERE Z_PK = OLD.%@
SELECT RAISE(FAIL, 'Batch delete failed due to manadatory OTM nullify inverse on %@/%@') FROM %@ WHERE %@ = OLD.Z_PK
UPDATE OR FAIL %@ SET %@ = NULL, %@ = NULL, Z_OPT = (Z_OPT + 1) WHERE %@ = OLD.Z_PK
UPDATE OR FAIL %@ SET %@ = NULL, Z_OPT = (Z_OPT + 1) WHERE %@ = OLD.Z_PK
WITH ZCTE_INTERMEDIATE AS (SELECT %@, %@ FROM %@ WHERE %@ = OLD.Z_PK) SELECT RAISE(FAIL, 'Batch delete failed due to mandatory MTM nullify inverse on %@/%@') FROM ZCTE_INTERMEDIATE T0 WHERE (0 == (SELECT COUNT(*) FROM %@ T1 where T1.%@ = T0.%@ and T1.%@ != OLD.Z_PK))
(SELECT NSPersistentHistoryBatchDeleteUpdateTrigger(Z_ENT, '%@'))
ON CONFLICT(%@, %@) DO UPDATE SET %@ = NSPersistentHistoryBatchDeleteUpdateTriggerDataBlobOperator(%@, excluded.%@)
FROM %@ WHERE Z_PK = OLD.Z_PK
INSERT INTO %@ (%@, %@, %@, %@, %@) SELECT %u, Z_PK, Z_ENT, %ld, %@ %@ %@;
CREATE TEMPORARY TRIGGER IF NOT EXISTS ZQ_%@_%@_HISTORYBATCHDELETEUPDATE_TRIGGER AFTER UPDATE OF %@ ON %@ FOR EACH ROW BEGIN %@ END
DROP TRIGGER IF EXISTS ZQ_%@_%@_HISTORYBATCHDELETEUPDATE_TRIGGER
%@-%@
(SELECT NSPersistentHistoryBatchDeleteUpdateTrigger(OLD.%@, '%@'))
WHERE OLD.%@ > 0 AND OLD.%@ > 0
INSERT INTO %@ (%@, %@, %@, %@, %@) SELECT %u, OLD.%@, OLD.%@, %ld, %@ %@ %@
(SELECT NSPersistentHistoryBatchDeleteUpdateTrigger(%@.Z_ENT, '%@'))
FROM %@ WHERE Z_PK = OLD.%@
INSERT INTO %@ (%@, %@, %@, %@, %@) SELECT %u, Z_PK, Z_ENT, %ld, %@ %@ %@
CREATE TEMPORARY TRIGGER IF NOT EXISTS ZQ_%@_TRIGGER AFTER DELETE ON %@ FOR EACH ROW BEGIN %@ END
INSERT OR REPLACE INTO %@ 
%@, %@, %@, %@
v16@?0@"NSSQLEntity"8
, Z%@%u
SELECT %d, %@, %@, %ld
, OLD.%@
, CASE %@ 
WHEN %@ THEN (SELECT %@) 
ELSE NULL 
END 
(%@) %@ FROM %@ WHERE %@ = OLD.%@;
CREATE TEMPORARY TRIGGER IF NOT EXISTS ZQ_%@_HISTORYBATCHDELETE_TRIGGER BEFORE DELETE ON %@ FOR EACH ROW BEGIN %@ END
DROP TRIGGER IF EXISTS ZQ_%@_HISTORYBATCHDELETE_TRIGGER
ZQ_BATCH_DELETE_MARSHALLING
CREATE TEMPORARY TRIGGER IF NOT EXISTS ZQ_EDR_%@_%@%@ BEFORE DELETE ON %@ FOR EACH ROW WHEN OLD.%@ IS NOT NULL BEGIN INSERT INTO %@ VALUES (OLD.%@); END
DROP TRIGGER IF EXISTS ZQ_EDR_%@_%@%@
CREATE TEMP TABLE ZQ_BATCH_DELETE_MARSHALLING(refToDelete)
SELECT refToDelete FROM ZQ_BATCH_DELETE_MARSHALLING
DROP TABLE ZQ_BATCH_DELETE_MARSHALLING
Can't fetch source objects
NSBatchDeleteRequest could not locate an Entity for entity name '%@'
Model Configuration
t0.Z_ENT, 
DELETE FROM %@
DELETE FROM %@ WHERE Z_PK IN (%@)
SELECT %@, %@, %@ FROM %@ WHERE Z_PK = %u
T1.%@
SELECT T0.%@, %@, T0.%@ from %@ T0 JOIN %@ T1 on t0.%@ = t1.Z_PK where T0.%@ = %u
SELECT %@, %@, %@ FROM %@ WHERE %@ = %u
Z_PK, Z_ENT
, %@
%@ IN (
Unsupported property type for unique attribute on entity '%@': %@
SELECT %@ FROM %@ WHERE (
SELECT Z_PK FROM %@ WHERE %@ IN (
SELECT %@, %@ FROM %@ WHERE Z_PK IN (
 INTERSECT 
v32@?0@"<NSSQLAttributeExtension>"8Q16^B24
Invalid trigger configuration.
Invalid location index configuration.
NSSQLConnectionBeginTransactionNotification
NSSQLConnectionCommitTransactionNotification
NSSQLConnectionRollbackTransactionNotification
%s (%p) : %@
sqlite3_db_config for SQLITE_DBCONFIG_NO_CKPT_ON_CLOSE failed: %d
Failed to activate SQLite encryption extension
SQLQueue %p for %@
Force checkpointing -wal while initializing query generations due to its large size (%lld)
main
sqlite3_snapshot_recover failed with %d
failed to open journal file
pragma cache_size = 10
Failed to initialize query generation tracking connection due to exception %@ (%@) with error (%@)
Failed to initialize query generation tracking connection due to unknown exception with error (%@)
v8@?0
Exception was caught during NSSQLiteConnection -_performBlock: %@ with userInfo %@
Unidentifiable exception was caught during NSSQLiteConnection -_performBlock.
Attempted to perform an operation without an open database
Attempted to perform another operation with a statement prepared
Attempted to perform another operation with a fetch already in progress
Nested transactions are not supported
[32msql: 
[34m
[47m%@
I/O error for database at %@.  SQLite error code:%d, '%@' errno:%d
I/O error for database at %@.  SQLite error code:%d, '%@'
Fatal error.  The database at %@ is corrupted.  SQLite error code:%d, '%s'
[31m
[47mERROR:
[31m (%d) %s
(%d) %s
error during execution of SQL string '%s' : %s
The database operation timed out after %.2f seconds.
[31m
[47mERROR:
[31m (%d) %@
(%d) %@
error during SQL execution : %@
sql execution time: 
[31m%.4f
[0ms
sql execution time: %.4fs
SELECT MAX(%@) FROM %@
Fetching maximum primary key for entity failed
synchronous
integrity_check
  Execute create index statement: %@
Unable to create index: %@ due to error (%@)
Unable to create index: %@ due to exception (%@)
Unsupported derivedAttribute
  Execute DA trigger creation statement: %@
  Execute trigger creation statement: %@
CREATE TABLE %@ (%@ INTEGER PRIMARY KEY, %@ VARCHAR(255), %@ BLOB)
CREATE TABLE %@ (%@ BLOB)
CREATE TABLE IF NOT EXISTS Y_UBMETA (Y_PK INTEGER PRIMARY KEY ASC, YPEERID VARCHAR UNIQUE, YTRANSACTIONNUMBER INTEGER)
CREATE TABLE IF NOT EXISTS Y_UBRANGE (Y_PK INTEGER PRIMARY_KEY ASC, YPEERID VARCHAR, YENTITYNAME VARCHAR, YRANGESTART INTEGER, YRANGEEND INTEGER, YPEERSTART INTEGER, YPEEREND INTEGER)
CREATE TABLE IF NOT EXISTS Y_UBKVS (Y_PK INTEGER PRIMARY KEY ASC, YKEY VARCHAR UNIQUE, YVALUE VARCHAR)
page_size
pragma %@=%@
pragma %@
pragma recursive_triggers=1
Database failed integrity check.  Corrupted SQLite database at path: %@
lock_proxy_file
pragma %@='%@'
pragma %@=''
auto_vacuum
incremental
:memory:
/dev/null/
file:%@?mode=memory&cache=shared
Connecting to sqlite database file at "%@"
recursive_triggers
memory
File at path does not appear to be a SQLite database: %@
sqlite3_db_config for SQLITE_DBCONFIG_NO_CKPT_ON_CLOSE failed (_qGTC): %d
sqlite3_db_config for SQLITE_DBCONFIG_LOOKASIDE failed: %d
pragma cache_spill = 64
Cannot create a new database file with the read only option at path: %@
ANALYZE
VACUUM
:auto:
pragma lock_proxy_file='%@'
Failed to set file locking on source database
Failed to open source database
Failed to set file locking on destination database
Failed to open destination database
Failed to replace destination database
Source database Path
%@ failed to close destination database %@
%@ failed to close source database %@
-journal
ignoring unsupported page_size specified as truncate option: %@
full
unsupported auto_vacuum setting specified as truncate option: %@
-shm
-conch
Failed to truncate database
In-memory stores do not support rekeying
New key value must not be empty
CoreData: SQLite disconnection (forced error)
Disconnecting from sqlite database due to an error.
CoreData: SQLite disconnection
Disconnecting from sqlite database.
Marking -wal eligible for checkpointing in -disconnect due to its large size (%lld)
Disconnected from database with pending transactions: %@
Un-finalized statement: %p
BEGIN EXCLUSIVE
BEGIN TRANSACTION
%@ -- %@ %p: attempted to commit a transaction while a fetch was in progress
COMMIT
%@ -- %@ %p: attempted to rollback a transaction while a fetch was in progress
ROLLBACK
Optimistic locking failure for %@.  During updateRow.  Original row = %@ New Row = %@ context version match = %d
Optimistic locking failure for %@. During updateRow.  Original row = %p context version match = %d
%u-%lld
Optimistic locking failure for %@.  During updateRow, rows processed = %d.  Original row = %@ New row = %@
Optimistic locking failure for %@.  During updateRow, rows processed = %d.
Optimistic locking failure for %@.  During updateConstrainedValuesForRow, rows processed = %d.  New Row = %@
Optimistic locking failure for %@.  During updateConstrainedValuesForRow, rows processed = %d.  Row was updated.
Optimistic locking failure for %@.  During deleteRow.  Original row = %@ New Row = %@ context version match = %d
Optimistic locking failure for %@. During deleteRow. version match = %d
correlation bindings: %qu, %qu, %qu, %qu
v48@?0Q8Q16Q24Q32^B40
correlation bindings:  %qu, %qu
v32@?0Q8Q16^B24
correlation bindings: %qu, %qu, %qu
v40@?0Q8Q16Q24^B32
SQL statement is still active / leaked.  sql:'%@'
statement is still active
Statement
error during prepareSQL for SQL string '%s' : %s
CoreData: SQLite: error: Can't bind intarray. SQLite error code: %d
Bound intarray %@
Bound intarray value %lu at %d
Bound intarray values.
sqlite3_bind* failed
SQLite bind[%ld] = %@
<FBF url=%@>
<NSData len=%lu>
SQLite bind[%ld] = "%@"
SQLite bind[%ld] = (timestamp)%f
SQLite bind[%ld] = (int64)%qd
SQLite bind[%ld] = nil
binding not implemented for this SQLType %d
Unexpected or improperly formatted URI parameter type %@, expected NSURL or well-formed NSString
%lu/%lu
v16@?0^v8
Unexpected or improperly formatted UUID parameter with type %@, expected NSUUID or well-formed NSString
fetching not implemented for this value type
[31m
[47mERROR:
[31m %@
The database appears corrupt.  (invalid entity key)
The database appears corrupt.  (invalid primary key)
Row (pk = %lld) for entity '%@' is missing mandatory text data for property '%@'
BufferAllocations found a bad Object ID
Row (pk = %ld) for entity '%@' is missing mandatory text data for property '%@'
pragma secure_delete=1
pragma secure_delete=0
pragma locking_mode=EXCLUSIVE
pragma locking_mode=NORMAL
pragma integrity_check
performIntegrityCheck encountered an error %@
performIntegrityCheck encountered an exception %@
SELECT TBL_NAME FROM SQLITE_MASTER WHERE TYPE = "table" ORDER BY TBL_NAME
TBL_NAME
Encountered exception %@ with userInfo %@ while fetchTableNames from store: %@
SELECT TBL_NAME, SQL FROM SQLITE_MASTER WHERE TYPE = "%@"
 AND SQL LIKE "%%%@%%"
 ORDER BY TBL_NAME
Ubiquity: Encountered exception %@ with userInfo %@ while fetchTableCreationSQL from store: %@
table
trigger
SELECT 
SELECT TBL_NAME FROM %@ WHERE TBL_NAME = '%@'
SQLITE_TEMP_MASTER
SQLITE_MASTER
Encountered exception %@ with userInfo %@ while checking table name from store: %@
_DEFERRED_
_DEFERRED_TEMP__%@
Deferred Lightweight Migration %@ all tasks
with
without
Beginning lightweight migration on connection
Increasing SQLite cache size to 148MB
pragma cache_size = 38000
Beginning creation of deferred schema migration statements
Create alter table migration statements
Creation of alter table migration statements
Create create table migration statements
Creation of create table migration statements
Create insert migration statements
Creation of insert migration statements
Create drop table migration statements
Creation of drop table migration statements
Finished creating deferred schema migration statements
Total preparation time for schema migration statements
Beginning formal transaction
Execute alter table statements
  Execute alter table statement: %@
Execute create table statements
  Execute create table statement: %@
Execute insert statements
  Execute insert statement: %@
Execute drop table statements
  Execute drop table statement: %@
Execute create indexes statements
Execute create trigger statements
Finished updating metadata
Update store metadata
2.15
Committing formal transaction
Finished committing formal transaction
Time for COMMIT
2.16
Total formal transaction time
Checkpointing WAL journal
pragma wal_checkpoint(FULL)
Finished checkpointing WAL journal
Successfully completed deferred lightweight migration on connection
Reset SQLite cache size
pragma cache_size = 512
Checkpoint time
Total migration time (on connection)
    Deferred Migration step %@ '%@' took %2.2f seconds
Encountered exception %@ with userInfo %@ while finishing deferred lightweight migration for store: %@
Encountered exception %@ with userInfo %@ while rolling back failed deferred lightweight migration for store: %@
Encountered exception %@ with userInfo %@ while dropping table %@ from store: %@
metadata is not a dictionary: %@
The metadata is not a dictionary: %@
DELETE FROM %@ WHERE %@ = ?
failure writing metadata plist with data bytes: %@
An error %@ occurred converting the metadata plist data: %@
INSERT INTO %@ (%@, %@, %@) VALUES (?, ?, ?)
Saving new meta data; version = %@ ; UUID = %@
SELECT %@, %@, %@ FROM %@
failure reading metadata plist with data bytes: %@
Metadata table is missing database UUID.
Could not initialize compression decoder.
Failed to decompress model cache.
SELECT %@ FROM %@
Could not initialize compression encoder.
INSERT INTO %@ (%@) VALUES (?)
Saving new model cache
unable to cache model: %@
An internal error occurred while configuring functions in the SQLite database.
primary keys must be generated within a transaction
SELECT %@ FROM %@ WHERE %@ = ?
getting max pk for entityID = %u
Fetching maximum primary key failed
UPDATE OR FAIL %@ SET %@ = ? WHERE %@ = ? AND %@ = ?
updating max pk for entityID = %u with old = %qd and new = %qd
Updating max pk failed: %@
pragma auto_vacuum=%@
pragma page_size=%d
pragma journal_mode=wal
creating schema.
Encountered exception %@ with userInfo %@ in createSchema for store: %@
Encountered exception %@ with userInfo %@ rolling back failed createSchema for store: %@
Creating primary key table.
re-adding all missing indices
IF NOT EXISTS 
PostSaveMaintenance: fileSize %lld greater than prune threshold
PostSaveMaintenance: %@ override
forceWalCheckpoint
forceVacuum
pragma page_count
pragma freelist_count
PostSaveMaintenance: forced incremental_vacuum - %ld
pragma incremental_vacuum(%d)
PostSaveMaintenance: incremental_vacuum with freelist_count - %ld and pages_to_free %lld
PostSaveMaintenance: Full Vacuum
PostSaveMaintenance: performPostSaveTasks threw something (1). ex = %@
PostSaveMaintenance: wal_checkpoint(TRUNCATE) 
pragma wal_checkpoint(TRUNCATE)
PostSaveMaintenance: performPostSaveTasks threw something (2). ex = %@
EXPLAIN QUERY PLAN %s
SQLite: %s
     
%d %d %d %s
EXPLAIN QUERY PLAN %@
 INDEX 
%1023s
i16@?0^{sqlite3_stmt=}8
index tracking enabled on read-only store
unable to generate primary keys for index tracking
failed to set up index tracking: %@
failed to %@ index tracking setup transaction: %@
roll back
commit
ATRANSACTION
ACHANGE
ATRANSACTIONSTRING
UPDATE OR FAIL %@ set %@=0 where %@ = '%@'
v32@?0@"NSManagedObjectID"8@"NSManagedObjectID"16^B24
inserts
updates
Batch Insert resulted in updates with no updated properties - %@ - %@
Batch Insert resulted in no changes - %@ - %@
Batch Update resulted in updates with no updated properties - %@ - %@
ZCHANGETRACK
ZCHANGETRACKHISTORY
select sql from sqlite_master where name = 'ZCHANGETRACK'
ZCHANGETIMESTAMP FLOAT
ZBUNDLEID VARCHAR
ZCONTEXTNAME VARCHAR
ZPROCESSID VARCHAR
Unable to determine if old history table 1 Exists - %s
select sql from sqlite_master where name = 'ZCHANGETRACKHISTORY'
 ZCHANGETRACKHISTORYCHANGETYPE INTEGER
ZCHANGETRACKHISTORYENTITY INTEGER
ZCHANGETRACKHISTORYENTITYVERSION INTEGER
ZCHANGETRACKINGHISTORYTRANSACTIONID INTEGER
ZCHANGETRACKHISTORYTOMBSTONE BLOB
ZCHANGETRACKEHISTORYNTITYCOLUMNS BLOB
Unable to determine if old history table 2 Exists - %s
ZCHANGE
ZTRANSACTION
select sql from sqlite_master where name = 'ZCHANGE'
ZENTITY INTEGER, ZENTITYPK INTEGER
ZCHANGETYPE INTEGER
ZCOLUMNS BLOB
ZTRANSACTIONID INTEGER
select sql from sqlite_master where name = 'ZTRANSACTION'
 ZBUNDLEID VARCHAR
ZTIMESTAMP FLOAT
DROP TABLE ZCHANGETRACK
DROP TABLE ZCHANGETRACKHISTORY
DROP TABLE ZCHANGE
DROP TABLE ZTRANSACTION
SELECT COUNT(Z_PK) FROM %@ WHERE %@ = %@
SELECT Z_PK FROM %@ WHERE %@ = ?
ALTER TABLE %@ ADD Z%@%lu BLOB;
Executing new tombstone column statement: %@
select sql from sqlite_master where name = '%@'
Unable to determine if tombstones for change table - %s
ALTER TABLE %@ ADD Z%@ INTEGER;
SELECT MAX(%@) FROM %@ WHERE %@ >= 16000
DELETE FROM %@ WHERE Z_PK <= %@
DELETE FROM %@ WHERE %@ <= %@
com.apple.coredata.schemamigrator: lightweight migration from model with digest { %@ }
externalRef
unable to generate primary keys for transaction
unknown reason
Persitent History - Transaction constraint primary key violation
Transaction
History Transaction hit an Optimistic Locking Exception - %@
B16@?0@"NSMutableDictionary"8
v32@?0@"NSDictionary"8Q16^B24
Cannot set value for derived attribute: property = "%@"; entity = "%@"; value = %@
Property (%@) is not supported with NSBatchInsertRequest
property not found for entity
unable to generate primary keys for batch insert
mandatory property not set
unable to generate primary keys
Perssitent History - Change constraint primary key violation
History Change hit an Optimistic Locking Exception - %@
%u-%@
SELECT count(*) FROM 
SELECT count(*) FROM (SELECT 0 FROM %@ LIMIT 1)
SELECT DISTINCT ENTITYID, PRIMEKEY FROM %@
ENTITYID
PRIMEKEY
SELECT ENTITYID, PRIMEKEY, TYPE,  group_concat(ATTRIBUTENAME) FROM %@ GROUP BY ENTITYID, PRIMEKEY
TYPE
ATTRIBUTENAME
deletes
History Update for %@ without any updated columns.
Unable to construct objectID for History Change: %@-%@-%@-%@
incorrect number of results
%lld
DELETE FROM %@ WHERE %@ IN %@
UPDATE %@ SET Z%@ = %lld
INSERT INTO %@ (%@) SELECT %@ FROM %@
PRAGMA page_count
PRAGMA freelist_count
SELECT sum(pageno) FROM dbstat d, sqlite_master m WHERE d.name = m.name AND d.aggregate = TRUE
 AND m.tbl_name IN %@
tableName
Percentage History: total pages - %lld, free pages - %lld, historyPages - %lld
Percentage History calculation error. Total Pages - %lld  Free Pages - %lld
An internal error occurred while configuring migration functions in the SQLite database.
INSERT INTO Z_METADATA (Z_VERSION) VALUES (999)
DELETE FROM Z_METADATA where Z_VERSION = 999
database connection must not be nil here
connection %p created snapshot:
ss %@ value: 
pointer value:%@
pointer: %p
connection %p adopting snapshot:
ss value: %@
pointer value:%@
pointer: %p
sqlite3_snapshot_open failed with %ld
sqlite3_snapshot data was unexpectedly NULL
_registerNewQueryGenerationSnapshot failed to adopt query generation with error %d
Connection can't register generation: Uncaught exception: %@
B32@?0@8Q16^B24
currentQueryGenerationIdentifier failed to adopt currentQueryGeneration: %d
Failed to get a currentQueryGeneration: %@
currentQueryGenerationIdentifier failed with exception: %@
currentQueryGenerationIdentifier failed with NSError: %@
currentQueryGenerationIdentifier failed with sqlite error: %d
connection %p attempting to reopen snapshot: %p
Attempt to reopen sqlite3_snapshot_open failed %d
Failed to free sqlite3_snapshot
v32@?0@"_PFSQLiteSnapshotWrapper"8Q16^B24
DROP TRIGGER %@
Z_DA_
Z_RT_
INSERT
UPDATE
DELETE
UNSET
Missing one or more columns to query record metadata for missing rows
SELECT %@, %@, %@, %@ FROM %@ LEFT JOIN %@ ON %@ = %@ AND %@ = %@
SELECT %@, %@ FROM (%@) WHERE %@ IS NULL AND %@ IS NULL
Missing metadata query got an unexpected number of columns in the result: %@
Missing metadata query hit an exception: %@
Entity marked as needing unique constraint coalescing but does not appear to be uniqued: %@
SELECT %@, 
SELECT COUNT(DISTINCT(%@)) AS COUNT, MIN(%@) AS %@, 
v32@?0@"NSSQLColumn"8Q16^B24
 FROM %@ %@ ORDER BY COUNT DESC
 FROM (%@) WHERE COUNT > 1;
DELETE FROM %@ WHERE 
%@ = '%@'
CloudKit: Deduping for metadata entity doesn't know how to handle this type of object yet: %@ - %@
Invalid class type '%@' for lock_proxy_file pragma value, must be an NSNull or NSString
Constraint unique violation: %s
no message
Constraint trigger violation: %s
Constraint primary key violation
error during SQL execution : %s
NSCoreDataNow
NSCoreDataPrependExternalReferenceMarker
NSCoreDataLike
NSCoreDataStringSearch
NSCoreDataMatches
NSCoreDataStringCompare
NSCollateNoCase
NSCollateNumericallyNoCase
NSCollateLocaleSensitive
NSCollateLocaleSensitiveNoCase
NSCollateFinderlike
NSCoreDataTriggerUpdateAffectedObjectValue
NSCoreDataDATriggerInsertUpdatedAffectedObjectValue
NSCoreDataDATriggerUpdatedAffectedObjectValue
NSPersistentHistoryBatchDeleteUpdateTrigger
NSPersistentHistoryBatchDeleteUpdateTriggerDataBlobOperator
NSCoreCanonical
NSCoreToUpper
NSPersistentHistoryMigrateUpdates
NSCoreDataNow: requires no arguments
NSCoreDataPrependExternalReferenceMarker: malloc failure
NSCoreDataPrependExternalReferenceMarker: wrong number of parameters
NSCoreDataLike: variant must be an integer in the range [0,3]
NSCoreDataLike: requres 3 arguments (value, pattern, variant)
NSCoreStringSearch: requires 4 arguments (string1, string2, flags, localized)
NSCoreDataTo(Uppercase|Lowercase): requires one argument
_NSPredicateOperatorUtilities
NSCoreDataCanonical: requires one argument
NSCoreDataMatches: variant must be an integer in the range [0,3]
NSCoreDataMatches: requres 3 arguments (value, pattern, variant)
NSCoreDataStringCompare: unknown operation type
NSCoreDataStringCompare: incorrect number of arguments
NSPersistentHistoryBatchDeleteUpdateTrigger: malloc failure
_NSPersistentHistoryBatchDeleteUpdateTriggerDataBlobOperator: malloc failure
NSPersistentHistoryMigrateUpdates: malloc failure
Join being created outside a fetch scope for keypath %@ entity %@
subqueryCollectionContext
Join being created inside an update scope for keypath %@ entity %@
source (%@, %@), destination (%@, %@), correlation (%@)
INNER 
LEFT OUTER 
JOIN 
 ON 
 INNER
 LEFT OUTER
 JOIN 
Unsupported property %@ in update
Unsupported property %@ in update - no joins allowed here
keypathExpressionDestinationRelationship
transient property used in fetch request
to-many key not allowed here
multiple to-many keys not allowed here
this should be inside a fetch or an update
keypaths (joins) not supported in batch update statements
invalid keypath : %@
invalid keypath %@
ambiguous keypath %@
found
propertyDescription
(%@,%@)
Ambiguous keypath %@
keypath %@ not found in entity %@
LastKeyPathWasTransientProperty
Keypath containing KVC aggregate where there shouldn't be one; failed to handle %@
Bad keypath: too many joins for an index
Bad keypath: can't find property
Unable to generate SQL for keypath
Bad keypath: indexes may not contain to many relationshps
SELECT clauses in queries with GROUP BY components can only contain properties named in the GROUP BY or aggregate functions (%@ is not in the GROUP BY)
Unable to generate SQL - non-constant expression for limit substitution.
Unable to generate SQL - non-NSNumber value for limit substitution.
Invalid variable substitution - multiple values not supported for limit %@
 LIMIT %@
 LIMIT -1
CoreData: warning: Fetch Limit is too large, please set it to a value less than or equal to NSIntegerMax
 LIMIT %lu
%@_%d%@
improper model with nonsensical relationship definitions
REFLEXIVE
FOK_REFLEXIVE
 { %@ %@ %@ %@ }
Record fetch failed because fetching the record metadata hit an unhandled exception.
%@ '%@': %@ %f
-[PFCloudKitImporterFetchRecordsWorkItem executeImportOperationsAndAccumulateRecordsWithManagedObjectContext:completion:]_block_invoke
v24@?0@"CKRecordID"8d16
v32@?0@"CKRecord"8@"CKRecordID"16@"NSError"24
Fetch records request did not match any records in the store: %@
-[PFCloudKitImporterFetchRecordsWorkItem executeImportOperationsAndAccumulateRecordsWithManagedObjectContext:completion:]
%@ encountered error while fetching record %@
-[PFCloudKitImporterFetchRecordsWorkItem fetchFinishedForRecord:withID:error:]
Fetch operation was notified about a recordID that finished with an error that doesn't have an objectID: %@ - %@
Fetch operation was notified about an updated recordID that finished that doesn't have an objectID: %@
Fetch operation was notified via partial failure about a recordID that doesn't have an objectID: %@ - %@
startedAt > %@
SELF > %@
'%@' only supports fetch requests with the following result types: %@, %@
Cannot sort events by '%@', it is not an attribute of '%@'.
Fetch requests for '%@' must use '%@' as the entity name, '%@' is not valid. Please consider using +[%@ %@].
Fetch request validation for NSPersistentCloudKitContainerEventRequest failed but did not report a failure reason.
type
startDate
endDate
error.domain
error.code
'%@' does not support predicates with custom selectors: %@
'%@' does not support predicates of type '%@'.
NSPersistentCloudKitContainerEventRequest predicate translation failed but did not return a failure reason: %@
Cannot query events by '%@', it is not an attribute of '%@'.
Unable to generate optimized model (sql model generation failed %@)
Unsupported join (offsets not allowed in updates)
Invalid SQL (must specify a limit with an offset)
Unable to generate SQL - non-constant expression for offset substitution.
Unable to generate SQL - non-NSNumber value for offset substitution.
 OFFSET %@
 OFFSET %lu
Unknown request class: %@
Request '%@' was cancelled because there is already a pending request of type '%@'.
Dequeue called during an active request: %@
requestFinished called with a different request than the active request: %@
Called with: %@
requestFinished called without an active request: %@
History analysis corruption detected. State is behind (or overlaps) this copy but is attempting to be merged. %@ / %@
Tombstones aren't supported yet for CloudKit history analysis
Asked to purge user rows without any zones from which to purge.
%@ - Removing cloud metadata and client rows in zone: %@
-[PFCloudKitMetadataPurger purgeMetadataFromStore:inMonitor:withOptions:forRecordZones:inDatabaseWithScope:andTransactionAuthor:error:]_block_invoke
Asked to purge system fields without any zones from which to purge.
%@ - Purging system fields from data in zone: %@
Asked to purge zone metadata (trying to recreate after the purge) without any zones from which to purge.
recordName IN %@ OR relatedRecordName IN %@
recordZone.ckRecordZoneName = %@ AND recordZone.ckOwnerName = %@ AND entityId != NULL AND entityPK != NULL
v40@?0@"NSArray"8@"NSError"16^B24^B32
Cannot create objectID: got a 0 pk for entity: %@
v32@?0@"NSNumber"8@"NSMutableSet"16^B24
recordZone.ckRecordZoneName = %@ AND recordZone.ckOwnerName = %@
recordZoneName = %@ AND recordZoneOwnerName = %@
%@ - Removing rows after account change: %@
-[PFCloudKitMetadataPurger purgeMetadataAfterAccountChangeFromStore:inMonitor:inDatabaseWithScope:error:]_block_invoke
%@ - Removed cloud metadata after account change %@
Failed to purge cloudkit metadata entity (%@): %@
Attempting to delete a zone metadata that has records (%ld): %@ - %@
Unsupported join (ordering by mtm not allowed in updates): %@
Unsupported join (ordering by tm not allowed in updates): %@
ORDER BY
unsupported NSSortDescriptor (comparator blocks are not supported)
 COLLATE NSCollateNoCase 
 COLLATE NSCollateNumericallyNoCase 
 COLLATE NSCollateLocaleSensitive 
 COLLATE NSCollateLocaleSensitiveNoCase 
 COLLATE NSCollateFinderlike 
unsupported NSSortDescriptor selector: %@
 DESC
 NULLS FIRST
 ASC NULLS LAST
*** vm_allocate(size=%lld) failed (error code=%d)
Unable to allocate VM Memory
VMErrorCode
*** vm_deallocate(size=%lld) oldSize= %lld, failed (error code=%d)
Unable to deallocate VM Memory
*** vm_deallocate(size=%lld), failed (error code=%d)
%@ bufferResultSetPurgeable failed to set vm buffer as purgeable: %d
%@ bufferResultSetNonPurgeable failed to set vm buffer as non-purgeable: %d
sql connection fetch time: 
[31m%.4f
[0ms
sql connection fetch time: %.4fs
exception raised during multi-threaded fetch %@ (%@)
unidentifiable exception during multi-threaded fetch
result array has %lu entries, but we fetched %d rows
fetch using %@ returned %lu rows
 with values: %@
total fetch execution time: 
[31m%.4f
[0ms for %d rows.
total fetch execution time: %.4fs for %d rows.
Fetch cancelled.  Total fetch execution time: 
[31m%.4f
[0ms.
Fetch cancelled.  Total fetch execution time: %.4fs.
exception %@ raised processing result of multi-threaded fetch (%@)
unidentifiable processing result of multi-threaded fetch
exception %@ raised processing result of multi-threaded fetch while prepopulating objects (%@)
unidentifiable processing result of multi-threaded fetch while prepopulating objects
%@ doesn't know how to handle it's specified value. Please file a bug with this outpout and send to Core Data | New Bugs.
-[NSCKMetadataEntry describeValue]
key IN (%@)
v16@?0@"NSCKMetadataEntry"8
<%@: %p> %@
<NSConstraintCacheKey: %@>
<NSConstraintCache : entity = %@, constraint = %@, extension = %@>
v32@?0@8@"NSArray"16^B24
<%@ %@ (%@)>
Unable to resolve variable expression: %@
Can't generate select target token for expression: %@
Constant select targets must be values, not collections
Can't generate select target token for constant: %@
Sort descriptor key "%@" may refer to a modelled property or an expression; the modelled property will be used.
Can't generate select target token for fetch request expression: %@
Can't generate SQL for ternary expression: %@
Currently unsupported (%@), try again later
Unsupported value passed to valuesToFetch: (%@) not supported
 AS %@
%@{%@ %d-%qd-%qi
 %@=NULL
 %@=<NSFileBackedFuture fileSize=%lu>
 %@=<NSData len=%lu>
 %@="%@"
 %@=%@
 %@=%qd
 %@=%u
 and to-manys=%p}
unexpected key found for: %@
COUNT( 
Unknown predicate operator type parameter
illegal comparison with NULL
IS NULL
IS NOT NULL
Unable to generate SQL for predicate (%@) (problem on LHS)
Unable to generate SQL for predicate (%@) (problem on RHS)
Unable to generate SQL for predicate (%@) (problem with operator)
You really shouldn't be here
NSCoreDataStringCompare(
 , %d, %lu, %d)
%lu) 
Unimplemented SQL generation for predicate (%@)
Unimplemented SQL generatio for predicate (%@)
 NSCoreDataStringSearch(
%lu, %u)
unimplemented SQL generation for predicate (%@).
Invalid input string
Unknown error during string conversion
Malformed string (%@)
Bad string
Malformed string 2 (%@)
%@%C
Unsupported join (not allowed in updates): %@
Unsupported clause (not allowed in updates): %@.
 IN (SELECT 
unimplemented SQL generation for predicate : (%@) (bad LHS)
unimplemented SQL generation for predicate : (%@) (bad RHS)
unimplemented SQL generation for predicate : (%@) (LHS and RHS both keypaths)
 IN 
unimplemented SQL generation for predicate : (%@)
 BETWEEN 
Unimplemented SQL generation for predicate : (%@)
Unsupported predicate, LHS of boundedBy: must be a keypath
Unsupported predicate, LHS of boundedBy: is a bad keypath a keypath
Unsupported predicate, LHS of boundedBy: has a keypath (can't find %@)
Malformed keypath: non-terminal attribute %@
Unsupported predicate, LHS of boundedBy: does not terminate with a location attribute
Bad LHS attribute, missing derived lat/long names
Unsupported predicate, LHS of boundedBy: does not terminate with a location
Unsupported predicate, LHS of boundedBy: can't find location attribute
%@.Z_PK IN 
(%@) 
ALL modifier is not implemented
can't use NULL on left hand side
 NSCoreDataLike(
 NSCoreDataMatches(
Unknown/unsupported comparison predicate operator type
Unable to generate where clause for predicate (%@) (unknown problem)
%s <%p> on entity '%@' with sql text '%@'
exportIfNecessaryWithCompletion invoked multiple times.
-[PFCloudKitExporter exportIfNecessaryWithCompletion:]_block_invoke_2
hasRecordZoneNum = NO AND database.databaseScopeNum = %@
Export encountered an unhandled exception while analyzing history in the store.
%@: Scheduling modifyRecordZonesOperation in response to request: %@ operation: %@
-[PFCloudKitExporter exportIfNecessaryWithCompletion:]
needsCloudDelete == 1
-[PFCloudKitExporter exportIfNecessary]_block_invoke_2
%@: Found %lu objects needing export.
v32@?0@"NSString"8@"NSCloudKitMirroringResult"16^B24
-[PFCloudKitExporter analyzeHistoryInStore:withManagedObjectContext:error:]
Unable to read the last history token: %@
Unable to read the bypass entry: %@
%@: Exporting changes since (%d): %@
History analyzer should have set an error if the analyzer context is nil.
%@: Failed to save exporter history token after deferral: %@
%@: Failed to update exporter history token after deferral: %@
Export encountered a fatal exception while analyzing history.
Modify records finished: %@
-[PFCloudKitExporter exportOperationFinished:withSavedRecords:deletedRecordIDs:operationError:]
Failed to save record name updates: %@
-[PFCloudKitExporter exportOperationFinished:withSavedRecords:deletedRecordIDs:operationError:]_block_invoke_2
%@ - Failed to update metadadata after operation finished (%@): %@
Export encountered an unhandled exception while updating metadata after the operation finished.
Failed to delete asset file: %@
-[PFCloudKitExporter exportOperationFinished:withSavedRecords:deletedRecordIDs:operationError:]_block_invoke
Metadata Inconsistency: Missing metadata for record: %@
%@ - Failed to fetch metadata for post-export update: %@
-[PFCloudKitExporter updateMetadataForSavedRecords:deletedRecordIDs:inStore:withManagedObjectContext:error:]
%@: Fetching record zones: %@
-[PFCloudKitExporter fetchRecordZones:]
%@: Finished fetching record zones: %@ - %@
-[PFCloudKitExporter fetchRecordZonesOperationFinished:operationError:]
Z_ENT
Z_FOK
_ent
_opt
Z_METADATA
Z_VERSION
Z_UUID
Z_PLIST
Z_MODELCACHE
Z_CONTENT
Z_PRIMARYKEY
Z_NAME
Z_SUPER
Z_MAX
%c%@
COUNT(%@)
COUNT(%@.%@)
@total
Aggregate functions need to work on attributes: %@
Unsupported KVC function in trailing keypath %@, %@
Can't have a non-relationship collection element in a subquery%@
Bad collection keypath (%@) can't find property named (%@) 
Only allowed one toMany/manyToMany relationship in subquery expression collection (%@)
Bad collection keypath in subquery %@ (attribute in non-terminal position)
Unsupported subquery with multiple joins in update columns %@
Unsupported subquery collection type (%@)
Subquery expressions not allowed in indexes
Unsupported subquery (too many functions): %@
.@min
.@max
.@sum
.@avg
Unsupported subquery (non-aggregate not allowed in select or update column): %@
Unknown predicate type
Model map is unexpectedly nil
Model map is nil
Managed object model with offset %lu is not known to %@
Illegal attempt to register a client managed object model with a non-zero offset (%ld).
q24@?0#8#16
Attempt to register ancillary model with offset %ld but different entity count.
Attempt to register ancillary model with different version hashes than the currently registered model: %p has hashes
%p has hashes
%d%@
NSPrimaryKey64
NSKey
NSRelatedNodes
Can't find entity %@ in model %@
sourceAttributeName
_sourceModelForVersionHashes: testing model at path '%@'
 Choosing model at path '%@'
sourceModelForStoreAtURL: Testing models searched via resourceBundles
sourceModelForStoreAtURL: Testing models searched via mainBundle
sourceModelForStoreAtURL: Testing model cached in database file
 Choosing model from cache table in db at '%@'
sourceModelForStoreAtURL: Testing models searched via allBundles
sourceModelForStoreAtURL: allBundles is %@
sourceModelForStoreAtURL: Testing models searched via allFrameworks
sourceModelForStoreAtURL: allFrameworks is %@
Last ditch review of models with skewed hashing
Can't find model for source store
force
Can't find or automatically infer mapping model for migration
Can't find mapping model for migration
.migrationdestination_41b5a6b5c6e848c462a8480cd24caef3
_NSAutomaticMigrationResourceBundlesOption
CoreData: Schema migration (policy)
Unable to delete file (backup external data references URL)
Migration source and destination URLs must be different
sourceURL
destinationURL
(migration) Failed to remove orphaned, partially migrated store file %@: %@
(migration) leaving incompletely migrated store on disk after automatic migration failure. (%@)
NSTemporaryObjectID
NSTemporaryObjectID_default
%s_%x
%@://%@/%@/t%@
Contents
Model
strings
Entity/
Property/
/Entity/
ErrorString/
databaseScopeNum = %@
Public
Shared
Private
(NSFetchedResultsController) section '%@' not found in controller
Can't generate intermediate for ternary expression predicate.
Can't generate intermediate for ternary expression predicate (unknown type)
Ternary expression not supported as index component
(CASE (
Can't generate SQL for ternary expression predicate.
) when 1 then (
Can't generate SQL for ternary expression trueExpression.
) else (
Can't generate SQL for ternary expression falseExpression.
) end)
NSSQLiteInPlaceMigrationManager requires that the source and destination stores to be NSSQLiteStoreType
sourceStore
Failed to open the store
Invalid destination data model
Cannot migrate store in-place: 
Cannot migrate store in-place
(migration) leaving incompletely migrated store on disk after in-place migration error. (%@, %@)
unknown error
(migration) in-place migration completed successfully in %2.2f seconds
Invalid metric sent to PFCloudKitMetricsClient: %@
Attempt to log metric with PFCloudKitBaseMetric, but each subclass must provide it's own name.
com.apple.coredata.cloudkit.base
processName
%@ %@
com.apple.coredata.cloudkit.unhandledPartialError
com.apple.coredata.cloudkit.fatalError
requestClass
sizeInBytes
com.apple.coredata.cloudkit.exportedRecordBytes
com.apple.coredata.cloudkit.importedRecordBytes
com.apple.coredata.cloudkit.fetchedRecordBytes
com.apple.coredata.cloudkit.fetchedAssetBytes
%@ : %@ -> %@
Unsupported relationship migration: A to-one's inverse to-many source must be a to-many
sourceRelationship
destinationRelationship
Unrecognized destination property type in transform
transform
Invalid constant expression type for property type in transform
Unrecognized source property type in transform
Properties cannot be renamed in stores that are used with CloudKit. Cannot rename '%@.%@' to '%@.%@'.
NSCoreDataPrependExternalReferenceMarker(length(%@), %@)
Invalid source property type in transform
Unsupported value expression type in transform
Entity mapping includes property transform with unresolved prerequisite
pendingTransforms
CloudKit integration forbids renaming '%@' to '%@'. Older devices can't process the new relationships.
CloudKit integration forbids renaming '%@' to '%@'. Older devices can't process the new records.
UPDATE OR FAIL %@%@ SET 
%@ : %@ 
Unrecognized entity migration type
entityMigration
Cannot merge multiple root entity source tables into one destination entity root table
sourceRootEntities
destinationRootEntity
ALTER TABLE %@ RENAME COLUMN %@ TO _DEFERRED_%@__%@
q24@?0@"NSArray"8@"NSArray"16
ALTER TABLE %@ RENAME COLUMN %@ TO %@
ALTER TABLE %@ ADD COLUMN %@ %@
Unrecognized source property type for many-to-many migration
 IN (
Unrecognized column in entity
column
Wrong number of columns in migration insert statement
Mismatched columns and values in migration insert statement
UPDATE %@ SET 
%@ = ?
%@ IS NULL
_T_%@
 = (SELECT _EKT.
 _EKT WHERE 
 = _EKT.
 WHERE %@ is NULL
, 2000
 IS NOT NULL
 NOT IN (
Migration: CloudKit tables detected. Adding migration statements for removed table: %@
DELETE FROM ANSCKRECORDMETADATA WHERE ZENTITYID IN %@
 %@-%@:%@-%@-%@:%@
Attempt to link objects across zones: MTM `%@` is attempting to relate `%@` and `%@`
Got temporary objectIDs back during import where we should have permanent ones: %@ / %@
New many to many relationship type?: %@
q24@?0@"NSRelationshipDescription"8@"NSRelationshipDescription"16
CD_recordNames
CD_relationships
CD_entityNames
Attempting to link objects across zones via one-to-many relationship '%@': %@ / %@
Linking object with record name %@ to %@ via %@
-[PFMirroredOneToManyRelationship updateRelationshipValueUsingImportContext:andManagedObjectContext:error:]
Couldn't find related object to link for object with record name %@ to %@ via %@
Import context cache is stale. To-one mirrored relationship source object has gone missing: %@ - %@
ALTER TABLE %@ RENAME TO %@_ORIG
UPDATE OR FAIL %@ SET %@ = (SELECT %@ FROM %@_ORIG WHERE %@ = %d) WHERE %@ = %d
UPDATE OR FAIL %@ SET %@ = 0 WHERE %@ = %d
DROP TABLE %@_ORIG
Increasing SQLite cache size to 117MB
pragma cache_size = 30000
Beginning creation of schema migration statements
Creation of entity migration statements
Failed to generate statements to perform migration
Creating statements to update entity keys
Creation of update entity keys statements
Creating statements to update primary key table
Creation of update primary key table statements
Finished creating schema migration statements
Checking metadata
Migration was completed by another client
Beginning forced migration
Begin dropping attribute extensions.
Executing drop attribute extension statement: %@
Finished dropping attribute extensions.
Drop attribute extensions
Begin dropping derived properties.
Executing drop derived property statement: %@
End dropping derived properties.
Drop derived properties
Begin dropping indices.
Executing drop index statement: %@
Finished dropping indices.
Drop indices
Begin entity schema & data migration statements.
Executing entity schema & data migration statement: %@
Finished entity schema & data migration statements.
Execution of entity schema and data migration statements
Begin updating entity key columns.
Executing entity key column update statement: %@
Finished updating entity key columns.
Execution of entity key column updates
Begin updating primary key table.
Finished updating primary key table.
Update primary key table
Begin updating default values.
Finished updating default values.
Update default values
2.7.1
Begin attribute extension updates.
Executing attribute extension insert statement: %@
Executing attribute extension change statement: %@
Finished attribute extension updates.
Update attribute extensions
Begin index creation and updates.
Generate index creation statements
2.9.1
Executing index creation statement: %@
Execute index creation statements
2.9.2
Generate index update statements
2.9.3
Executing index update statement: %@
Execute index update statements
2.9.4
Finished index creation and updates.
Total index creation and update time
DROP INDEX IF EXISTS %@_Z_ENT_INDEX
Executing drop Z_ENT index statement: %@
Dropping Z_ENT indices
2.10
Begin updating derived properties.
Executing derived property update statement (data): %@
Executing derived property update statement (trigger): %@
Finished updating derived properties.
Update derived properties
2.11
Update ancillary model primary keys
2.12
Drop index tracking table
2.13
Beginning persistent history metadata tables update
Generate persistent history delete statements
2.14.1
Generate persistent history update statements
2.14.2
Dropping Persistent History b/c of an issue with migration
Finished dropping Persistent History b/c of an issue with migration
Drop persistent history tables
2.14.3
Executing history migration statement: %@
Execution of persistent history migration
2.14.4
Completed persistent history metadata tables update
Total persistent history migration
2.14
Beginning CloudKit metadata tables update
Executing CloudKit metadata table update: %@
Finished CloudKit metadata tables update
CloudKit metadata updates
NSSQLiteInPlaceMigrationManager
migrationManagerClass
Starting inferred mapping validation
Executing inferred mapping validation: %@
validation error
validation failed
Finished inferred mapping validation
Inferred mapping validation
2.16b
2.17
pragma wal_checkpoint(truncate)
Successfully completed lightweight migration on connection
    Migration step %@ '%@' took %2.2f seconds
Failed to create migration statements
Failed to execute migration statements
constraint violation during attempted migration
Failed lightweight migration on connection
Rolling back formal transaction
 is NULL
 = %d
 NOT IN (SELECT 
 IS NOT NULL)
Validation error missing attribute values on mandatory destination attribute
attribute
Validation error missing attribute values on mandatory destination relationship
Validation error missing relationship values on mandatory destination destination
Unrecognized transform validation in property mapping
q24@?0@"_NSSQLTableMigrationDescription"8@"_NSSQLTableMigrationDescription"16
ANSCKRECORDMETADATA
ANSCKHISTORYANALYZERSTATE
tableMigration returned nil cloudkit update statements: %@
CloudKit metadata migration generated a source / destination id mapping for identical ids: %@
UPDATE ANSCKRECORDMETADATA SET ZENTITYID = %@ WHERE ZENTITYID = %@
UPDATE ANSCKHISTORYANALYZERSTATE SET ZENTITYID = %@ WHERE ZENTITYID = %@
RENAME TO Z_
TEMP
 = ( CASE
 WHEN 
 = %d THEN %d
 ELSE 
 END ) WHERE 
v24@?0@"NSArray"8@"NSArray"16
Can't find entity migration description for entity
 UNIQUE
Unsupported entity mapping type with empty entity name
mappingType
_AsCopy
Collapsing Entity Hierarchy for: %@
Unsupported entity mapping type
UPDATE %@ SET Z%@%lu = NULL
Executing clearing tombstone column statement: %@
UPDATE 
Z%@%lu
 = NULL
 == 
Executing shift tombstone column statement: %@
SELECT MAX(%@) FROM %@ WHERE %@ IN (%@)
Warning: Persistent History will be removing entries that tracked the following entities being removed: %@
DELETE FROM %@ WHERE %@ IN (%@)
Begin executing mass delete of removed entries from history statement: %@
Completed execution mass delete of removed entries from history statement.
Error: Persistent History (%lld) has to be truncated due to the following entities being removed: %@
DELETE FROM %@ WHERE Z_PK <= %lld
DELETE FROM %@ WHERE %@ <= %lld
Warning: Dropping Indexes for Persistent History
Executing drop index from history statement: %@
Warning: Dropping Transactions prior to %lld for Persistent History
Executing mass delete of transactions from history statement: %@
Warning: Dropping Changes prior to TransactionID %lld for Persistent History
Executing mass delete of changes from history statement: %@
Beginning adding new tombstone columns
Finished adding new tombstone columns
Beginning remapping of shifted tombstone columns
Finished remapping of shifted tombstone columns
Beginning clearing contents from removed tombstone columns
Finished clearing contents from removed tombstone columns
UPDATE OR FAIL %@ SET %@ = NSPersistentHistoryMigrateUpdates(3, %d, %d, %@) WHERE %@ == %d AND %@ == %ld;
_ckAsset
Failed to write CKAsset data for '%@' on '%@' backing record '%@'.
-[PFCloudKitSerializer newCKRecordsFromObject:fullyMaterializeRecords:includeRelationships:error:]
B24@?0@"NSAttributeDescription"8@"NSDictionary"16
Failed to generate records for object: %@ due to exception: %@
q24@?0@"NSAttributeDescription"8@"NSAttributeDescription"16
Failed to copy CKAsset data for '%@' on '%@' backing record '%@'.
-[PFCloudKitSerializer newCKRecordsFromObject:fullyMaterializeRecords:includeRelationships:error:]_block_invoke
Serializer is attempting to link relationships across zones: %@ - %@ / %@
Failed to look up cached mirrored relationship for mtmKey: %@
Serializer has finished creating record: %@
Modified Fields: %@
Supposedly serialization succeeded but there's no record: %@
Object serialization failed but did not set an error: %@
v32@?0@"NSEntityDescription"8Q16^B24
Record metadata doesn't match row: %@
Failed to update attributes on object: %@
With record: %@
Due to exception: %@
-[PFCloudKitSerializer applyUpdatedRecords:deletedRecordIDs:toStore:inManagedObjectContext:onlyUpdatingAttributes:andRelationships:madeChanges:error:]_block_invoke
Error attempting to read move receipt CKAsset file: %@
Skipping record because its entity '%@' is no longer in the managed object model's configured entities: %@
Deleted relationship failed to update because one or more of the objects in it is already gone: %@
-[PFCloudKitSerializer applyUpdatedRecords:deletedRecordIDs:toStore:inManagedObjectContext:onlyUpdatingAttributes:andRelationships:madeChanges:error:]_block_invoke_2
Failed to update deleted mirrored relationship: %@
v32@?0@"PFMirroredRelationship"8Q16^B24
Updating relationship: %@
Need to handle fetch errors here for the zone and abort serialization. %@
Unknown recordID returned as part of fetch for missing pending relationship objectIDs: %@ - %@ - %@
Pending relationship Fallback fetch failed (%@ / %@): %@
Failed to find matching objectIDs for %@ / %@ in pending relationship: %@
Skipping pending relationship because it's destination object has gone missing: %@
Skipping pending relationship because existingObjectWithID failed: %@
Failed to resolve pending relationship: %@
Marking deleted mirrored relationship fulfilled, one or more of the related objects is missing: %@
Importer is rejecting updated value for '%@' on '%@' because there are pending local edits that haven't been exported yet.
-[PFCloudKitSerializer updateAttributes:andRelationships:onManagedObject:fromRecord:withRecordMetadata:importContext:error:]
Delegate didn't return a file url for asset: %@
Error attempting to read CKAsset file: %@
%@ encountered CKEncryptedData blob on record (%@): %@
Unknown value class (%@) for attribute:
Failed to initialize NSUUID from CKRecord with value: %@
Failed to initialize NSURL from CKAsset with value: %@
Failed to read value from asset at URL: %@
Failed to initialize NSURL from CKRecord with value: %@
Attribute serialization failed but did not set an error: %@.%@
Adding mirrored relationship to link for record %@ related to %@ by %@
Failed to get a metadata zone: %@
-[PFCloudKitSerializer getRecordMetadataForObject:inManagedObjectContext:error:]
ckAssetFiles
%@.fxd
Unable to provide a default CKRecordZoneID for database scope: %@
Unsupported clause (group by not allowed in updates)
Failed to generate SQL for group by property: %@
Unknown predicate type for having predicate: %@
Unsupported clause (having not allowed in updates)
%@ with fetch request %@
NSUnderlyingProperty
NSReferenceID
NSEntityDescription
Proxy for prop named %@ on ed %@, real %@
%@, attributeType %lu , attributeValueClassName %@, derivationExpression %@, filteringPredicate %@, preservesValueInHistoryOnDeletion %@
NSDerivationExpression
NSFilteringPredicate
sum:
.@total
Can't set a default value for a derived attribute
offending property
Can't set renaming identifiers for derived attributes
expression failed to generate keypaths
Can't get keypaths for derived attribute validation
predicate failed to generate keypaths
Bad keypath for derived property (unresolved variable)
keypath
Bad keypath for derived property (misplaced operator)
Bad keypath for derived property (missing keypath component)
Bad keypath for derived property (attribute in non-terminal location not followed by operator)
Bad keypath for derived property (attribute has multiple keys following)
Bad keypath for derived property (unsupported property type in keypath)
fstat failed
read failed
mmap failed
open failed
Unable to initialize %s.  stat() failed on '%s' with errno %d
NSData [%s] with address %p backed by file at '%@'
Could not open file.
Could not map file.
Class cannot be used this way.
Data may not be nil
%@_%p
databaseValue
UUID
Failed to link ubiquity file: %@ error: %@
External data reference can't find underlying file.
File URL
External data reference; unknown problem.
External data reference can't load ubiquitous file.
External Data Reference: <self = %p ; path = %s ; length = %qu>
External Data Reference: <self = %p ; path = nil ; length = %qu>
range {%lu, %lu} exceeds data length %lu
Cannot mutate an immutable faulting NSOrderedSet
Index of object > number of objects
_NSFaultingMutableOrderedSet
nil order keys and %d objects in real set
bad input oidsAndLocations => should have an even number
shareURLs: %@
shareMetadatas: %@
Invalid arguments to initialize a share invitations result. If the operation failed both acceptedShares and acceptedShareMetadatas should be nil, otherwise there should be both arrays.
Validating options: %@
storeOptions: %@
-[PFCloudKitOptionsValidator validateOptions:andStoreOptions:error:]
NSCloudKitMirroringDelegateOptions.containerIdentifier requires a value with a length greather than 0
NSCloudKitMirroringDelegateOptions.containerIdentifier only accepts values of type '%@'. The following is not a valid value:
A container identifier is required for the CloudKit integration.
%@ is required for the CloudKit integration.
NSCloudKitMirroringDelegateOptions.containerOptions only accepts values of type '%@'. The following is not a valid value:
The value for 'NSCloudKitMirroringDelegateOptions.ckAssetThresholdBytes' must be at least %@ bytes. The following value is invalid: %@
The value for 'NSCloudKitMirroringDelegateOptions.ckAssetThresholdBytes' must be an instance of '%@'. The following value is invalid: %@
The value for 'NSCloudKitMirroringDelegateOptions.operationMemoryThresholdBytes', %@, must be larger than the value of 'NSCloudKitMirroringDelegateOptions.ckAssetThresholdBytes', %@.
The value for 'NSCloudKitMirroringDelegateOptions.operationMemoryThresholdBytes' must be at least %@ bytes. The following value is invalid: %@
The value for 'NSCloudKitMirroringDelegateOptions.operationMemoryThresholdBytes' must be an instance of '%@'. The following value is invalid: %@
Exception %@ ui %@ occurred in +[_CDSnapshot _invalidateStaticCaches:] preparing entity deallocation delegate
Unknown exception occurred in +[_CDSnapshot _invalidateStaticCaches:] preparing entity deallocation delegate
Exception %@ ui %@ occurred in +[_CDSnapshot _invalidateStaticCaches:] objc_disposeClassPair
Unknown exception occurred in +[_CDSnapshot _invalidateStaticCaches:] objc_disposeClassPair
_CDSnapshot
_cd_nullFlags2_
[%dC]
_cd_nullFlags_
Exception %@ ui %@ occurred in +[_CDSnapshot classForEntity:]
Unknown exception occurred in +[_CDSnapshot classForEntity:]
Exception %@ ui %@ occurred in +[_CDSnapshot _entityDeallocated:]
Unknown exception occurred in +[_CDSnapshot _entityDeallocated:]
<deferred relationship fault>
%@ (entity: %@; id: %@ ; data: %@)
snapshot is marked read only
warning snapshot_get_value_as_object called on NULL
warning snapshot_set_value_as_object called on NULL
Unable to generate SQL for fetch
Bad request
SELECT COUNT(*) from (%@)
Token: %@
Changed:
Deleted:
Purged:
_NSMetadataLastIdentifier
Unknown failure
Failed to load metadata
Keyspace exhausted
%@ - %u
insertObject:in%sAtIndex:
insert%s:atIndexes:
removeObjectFrom%sAtIndex:
remove%sAtIndexes:
replaceObjectIn%sAtIndex:withObject:
replace%sAtIndexes:with%s
instruments
com.apple.coredata.ubiquity.importer.didfinishimport
Z_RT_%@_%@
latitude
longitude
'%@' is not a valid description for a location index, it should include two comma separated components or be an array of two string identifying the attributes which make up the location index.
%@.%@ has an invalid description for a location index. It must be either an array or a comma separated string of two components identifying the latitude / longitude properties to use.
Unable to configure location index: %@.%@ type is %@ but should be %@.
RTree tables can only be created to back transient attributes. %@.%@ is not transient.
Unable to configure location index: couldn't find an attribute named '%@' on '%@'
Unable to configure location index (invalid %@ on %@.%@): 
Unable to configure location index (invalid %@ on %@.%@): %@.%@ is of type %@ and should be of type %@.
%@.%@ is a transient attribute.
%@.%@ is a relationship.
couldn't find an attribute named '%@' on '%@' to use as the %@.
CREATE VIRTUAL TABLE IF NOT EXISTS %@ USING RTREE (Z_PK INTEGER PRIMARY KEY, %@_MIN FLOAT, %@_MAX FLOAT, %@_MIN FLOAT, %@_MAX FLOAT)
CREATE TRIGGER IF NOT EXISTS %@_INSERT AFTER INSERT ON %@ FOR EACH ROW BEGIN INSERT OR REPLACE INTO %@ (Z_PK, %@_MIN, %@_MAX, %@_MIN, %@_MAX) VALUES (NEW.Z_PK, NEW.%@ ,NEW.%@, NEW.%@, NEW.%@) ; END
CREATE TRIGGER IF NOT EXISTS %@_UPDATE AFTER UPDATE ON %@ FOR EACH ROW BEGIN DELETE FROM %@ WHERE Z_PK = NEW.Z_PK ; INSERT INTO %@ (Z_PK, %@_MIN, %@_MAX, %@_MIN, %@_MAX) VALUES (NEW.Z_PK, NEW.%@ ,NEW.%@, NEW.%@, NEW.%@) ; END
INSERT OR REPLACE INTO %@ (Z_PK, %@_MIN, %@_MAX, %@_MIN, %@_MAX) SELECT Z_PK, %@, %@, %@, %@ from %@ where %@ NOT NULL and %@ NOT NULL
XPCConnectionManager:%p
Something has gone badly awry initializing the XPC connection pool: %@
manager sendMessageWithContext: unable to checkout connection.
manager sendMessageWithContext: failed with exception (how? it should never throw): %@
manager sendMessageWithContext failed with unknown exception
CDDCloudKitScheduledActivity
NSAddStoreAsynchronouslyOption
NSInvokeCompletionHandlerConcurrently
%@ (type: %@, url: %@)
NSPersistentStoreMirroringOptionsKey
 %@.%@ = %@
The trigger on %@.%@ is not valid: Only expressions of the form 'relationship.@count' are supported.
The trigger on %@.%@ is not valid: could not turn '%@' in to an instance of %@
The trigger on %@.%@ is not valid: an exception was thrown while trying to parse the expression: %@:%@
The trigger on %@.%@ is not valid: empty string is not a valid expression.
The trigger on %@.%@ is not valid: must be an instance of %@.
The trigger on %@.%@ is not valid: nil is not a valid expression.
The trigger on %@.%@ is not valid: '%@' does not evaluate to a keypath expression.
The trigger on %@.%@ is not valid: The function '%@' is not supported, only 'count' is supported at this time.
The trigger on %@.%@ is not valid: '%@' does not evaluate to a function expression.
The trigger on %@.%@ is not valid: property '%@' is not an integer.
The trigger on %@.%@ is not valid: Must be set on an attribute of type %@.
The trigger on %@.%@ is not valid: property '%@' not found.
The trigger on %@.%@ is not valid: relationship '%@' is not a to-many.
The trigger on %@.%@ is not valid: keypath '%@' is not a relationship.
The trigger on %@.%@ is not valid: '%@' is not a property of '%@'.
 AFTER DELETE ON %@
 UPDATE %@ SET %@ = (SELECT COUNT(%@) FROM %@ WHERE (%@ = NEW.%@)) WHERE %@ = NEW.%@;
v32@?0@"NSManagedObjectID"8@"NSCKRecordMetadata"16^B24
TRANSACTIONID > %@ AND ENTITY = %@ AND ENTITYPK IN %@
Didn't get a minimum transaction number for change: %@
Expected to get an instance of NSCKRecordMetadata for this recordID: %@ but got: %@
Already have a mirrored relationship registered for this key: %@
Attempting to cache zone metadata but already have one: %@
Joins not supported in index
Can't find property for keypath
Indexes cannot contain to many relationships
Indexes can only contain attribute/relationship properties
Unsupported expression type in index
Unsupported property in index
SQL generation failure for property
SQL generation failure for index
indexDescription
SQL generation failure for index with predicate (1)
SQL generation failure for index with predicate (2)
v32@?0@"NSSQLAttribute"8@"NSSet"16^B24
 Found no possible URLs for directory type %lu
 Failed to create directory %@: %@ (%d)
 File %@ already exists and is not a directory!
+[%@ %@] Could not conjure up a useful location for writing persistent stores.
%@.sqlite
Unhandled exception finding default Directory URL '%@'
 View context accessed for persistent container %@ with no stores loaded
Failed to call designated initializer on '%@' 
 Failed to load model at path: %@
 Failed to load model named %@
-[NSPersistentContainer initWithName:managedObjectModel:] called with the empty string as its container name
-[NSPersistentContainer initWithName:managedObjectModel:] called with invalid container name '%@'
-[NSPersistentContainer loadPersistentStoresWithCompletionHandler:] called on an instance with no store descriptions
 Background context created for persistent container %@ with no stores loaded
cachedModelForPersistentStoreWithURL failed with error %@ and userInfo of %@
Store failed to load.  %@ with error = %@ with userInfo %@
Import failed because fetching the zone change token hit an unhandled exception.
v24@?0@"CKRecordID"8@"NSString"16
v32@?0@"CKRecordZoneID"8@"CKServerChangeToken"16@"NSData"24
v44@?0@"CKRecordZoneID"8@"CKServerChangeToken"16@"NSData"24B32@"NSError"36
Unable to fetch zone metadata for zone: %@
-[PFCloudKitImporterZoneChangedWorkItem updateMetadataForAccumulatedChangesInContext:inStore:error:]
-[PFCloudKitImporterZoneChangedWorkItem commitMetadataChangesWithContext:forStore:error:]
ckRecordSystemFields
NSCloudKitMirroringDelegateIgnoredPropertyKey
NSCloudKitMirroringDelegateWillResetSyncNotificationName
NSCloudKitMirroringDelegateDidResetSyncNotificationName
NSCloudKitMirroringDelegateResetSyncReasonKey
NSCloudKitMirroringDelegateReadOnlyOptionKey
com.apple.coredata.cloudkit.zone
com.apple.coredata.cloudkit.zone.subscription
com.apple.coredata.cloudkit.private.subscription
com.apple.coredata.cloudkit.public.subscription
com.apple.coredata.cloudkit.shared.subscription
com.apple.coredata.cloudkit.share.
PFCloudKitServerChangeTokenKey
NSCloudKitMirroringDelegateServerChangeTokensKey
CD_M2M_
CD_FAKE_
PFCloudKitWillExportNotificationName
PFCloudKitDidExportNotificationName
PFCloudKitDidImportNotificationName
PFCloudKitDidInitializeNotificationName
PFCloudKitFailedToInitializeNotificationName
NSCloudKitMirroringDelegate.schemaGenerator
CDMR
PFCloudKitNewUserIdentityKey
PFCloudKitOldUserIdentityKey
NSCloudKitMirroringDelegateLastHistoryTokenKey
NSCloudKitMirroringDelegateBypassHistoryOnExportKey
NSCloudKitMirroringDelegate.import
NSCloudKitMirroringDelegate.export
NSCloudKitMirroringDelegate.reset
NSCloudKitMirroringDelegate.migration
NSCloudKitMirroringDelegate.setup
NSCloudKitMirroringDelegate.event
com.apple.coredata.cloudkit.activity.export
com.apple.coredata.cloudkit.activity.import
com.apple.coredata.cloudkit.activity.setup
com.apple.coredatad.cloudkit
NSCloudKitMirroringDelegateScanForRowsMissingFromHistoryKey
moveReceipt
kCFErrorDomainCFNetwork
private
com.apple.coredata.cloudkit.queue
AccountChangeObserver
v16@?0@"NSString"8
CloudKit integration is only supported for %@ stores.
Instances of NSCloudKitMirroringDelegate are not reusable and should have a lifecycle tied to a given instance of NSPersistentStore.
com.apple.coredata.cloudkit.store.added
CoreData: CloudKit Add Persistent Store
v16@?0@"NSCloudKitMirroringDelegateWorkBlockContext"8
%@: Observing store: %@
-[NSCloudKitMirroringDelegate observeChangesForStore:inPersistentStoreCoordinator:]
ExportActivity
Got called back for an export activity but the mirroring delegate is gone.
-[NSCloudKitMirroringDelegate observeChangesForStore:inPersistentStoreCoordinator:]_block_invoke
CloudKit setup failed because there is another instance of this persistent store actively syncing with CloudKit in this process.
ImportActivity
Got called back for activity: %@, but the mirroring delegate is gone.
%@: Successfully enqueued setup request.
-[NSCloudKitMirroringDelegate _setUpCloudKitIntegration]
%@: Failed to enqueue setup request, this likely means one is already scheduled and this has collided: %@
resetAfterError illegally passed nil instead of an error on a failure condition
%@ - resetting internal state after error: %@
-[NSCloudKitMirroringDelegate resetAfterError:andKeepContainer:]
v32@?0@"NSObject"8@"NSError"16^B24
%@ - Got notification for subscription: %@
-[NSCloudKitMirroringDelegate _beginWatchingForChanges:]_block_invoke
%@ - Reviving the mirroring delegate after notification for subscription: %@
%@ - Not reviving the mirroring delegate (%@:%ld) after notification for subscription: %@
Got called back for subscription: %@, but the mirroring delegate is gone. Notification:
v24@?0@"CKNotification"8@"CKSubscription"16
%@: Scheduling post-setup export
-[NSCloudKitMirroringDelegate _beginWatchingForChanges:]
com.apple.coredata.cloudkit.setup.operations
CoreData: CloudKit Sandbox Operations
SandboxExport
SandboxImport
Tried to schedule sandbox operations but the mirroring delegate was gone.
com.apple.coredata.cloudkit.teardown
CoreData: CloudKit Teardown
%@: Told to tear down because the store has been removed.
-[NSCloudKitMirroringDelegate tearDown]_block_invoke
%@: Cancelling pending request: %@
%@: Asked to execute request: %@
-[NSCloudKitMirroringDelegate executeMirroringRequest:error:]
Instances of '%@' are ambiguous and not understood by '%@', use one of the subclasses instead.
com.apple.coredata.cloudkit.schedule.enqueue
CoreData: CloudKit Scheduling
%@: enqueuing request: %@
-[NSCloudKitMirroringDelegate _enqueueRequest:]_block_invoke
Enqueued request: %@
-[NSCloudKitMirroringDelegate _enqueueRequest:]_block_invoke_2
Failed to enqueue request: %@
%@: Asked to execute a request that isn't understood yet: %@
Reset request was scheduled without a root cause error: %@
com.apple.coredata.cloudkit.setup.reset
CoreData: CloudKit Setup Reset
Setup request executed with a completion block that will never be called: %@
com.apple.coredata.cloudkit.setup
CoreData: CloudKit Setup
Mirroring delegate asked to set up when already successfully initialized.
%@: Successfully set up CloudKit integration for store: %@
-[NSCloudKitMirroringDelegate _performSetupRequest:]_block_invoke
Failed to initialize because there is no user signed in to this device.
%@: Failed to set up CloudKit integration for store: %@
_initializeCloudKitForObservedStore failed but did not return an error.
Failed to finish setup event: %@
requestIdentifier
com.apple.coredata.cloudkit.import
CoreData: CloudKit Import
Failed to finish import event: %@
-[NSCloudKitMirroringDelegate _performImportWithRequest:]_block_invoke_2
madeChanges
%@: Import failed with error:
-[NSCloudKitMirroringDelegate _importFinishedWithResult:importer:]
com.apple.coredata.cloudkit.export
CoreData: CloudKit Export
%@: Illegal attempt to export without an account: %@ - %@
Failed to finish export event: %@
-[NSCloudKitMirroringDelegate _performExportWithRequest:]_block_invoke
Finished export: %@
-[NSCloudKitMirroringDelegate _exportFinishedWithResult:exporter:]
%@: Export failed with error:
com.apple.coredata.cloudkit.zone.reset
CoreData: CloudKit Zone Reset
Zone reset request failed: %@
Failed to clear metadata from store: %@
-[NSCloudKitMirroringDelegate _performResetZoneRequest:]_block_invoke_2
%@: Skipping delete of zone because it's not owned by the current user: %@
Request '%@' was aborted because the mirroring delegate failed to reset the local store's metadata: %@
%@: Asked to schedule a zone reset operation without a zoneID: %@
-[NSCloudKitMirroringDelegate _performResetZoneRequest:]_block_invoke
The mirroring delegate could not complete request '%@' because it does not have a zone.
com.apple.coredata.cloudkit.fetch.records
CoreData: CloudKit Fetch Records
-[NSCloudKitMirroringDelegate _performFetchRecordsRequest:]_block_invoke_2
com.apple.coredata.cloudkit.metadata.reset
CoreData: CloudKit Metadata Reset
Purged cloudkit metadata from store: %@
Result: %@
-[NSCloudKitMirroringDelegate _performMetadataResetRequest:]_block_invoke
Failed to purge cloudkit metadata from store: %@
com.apple.coredata.cloudkit.serialization
CoreData: CloudKit Record Serialization
Multiple records returned for object even though we didn't ask for relationships: %@
Unsupported resultType: %lu, %@
No records returned from the serializer for object: %@
%@ - Unable to serialize object '%@' because it appears to be missing from the store.
-[NSCloudKitMirroringDelegate _performSerializationRequest:]_block_invoke
Failed to save metadata changes from serialization of records: %@
com.apple.coredata.cloudkit.progress.export
CoreData: CloudKit Export Progress
com.apple.coredata.cloudkit.share.accept
CoreData: CloudKit Share Accept Invitation
No metadata or error for share URL: %@
v32@?0@"NSURL"8@"CKShareMetadata"16@"NSError"24
Some shareURLs failed to return metadata...
%@: Accepting shares defined by request: %@
-[NSCloudKitMirroringDelegate _acceptShareMetadatasInRequest:workBlockContext:]
No error or share for accepted share metadata: %@
v32@?0@"CKShareMetadata"8@"CKShare"16@"NSError"24
Some shares partially failed...
%@ - Never successfully initialized and cannot execute request '%@' due to error: %@
-[NSCloudKitMirroringDelegate _requestAbortedNotInitialized:]
Request '%@' was aborted because the mirroring delegate never successfully initialized due to error: %@
handleErrorInResult illegally passed nil instead of a result
handleErrorInResult passed a sucessful result (%@) with an illegal error object (%@)
handleErrorInResult illegally passed a failed result (%@) with nil instead of an error on a failure condition
recoverFromError illegally passed nil instead of an error on a failure condition
%@ - Attempting recovery from error: %@
-[NSCloudKitMirroringDelegate recoverFromError:]
The store was removed before the mirroring delegate could recover from an error:
-[NSCloudKitMirroringDelegate recoverFromError:]_block_invoke
Invalid recursion detected, this method should never have been passed a partial error: %@
The mirroring delegate can no longer export because it cannot stay under the CloudKit operation limits.
NSCloudKitMirroringDelegate recieved NSURLErrorDomain:NSURLErrorBadURL and probably shouldn't have.
NSCloudKitMirroringDelegate recieved NSURLErrorDomain:NSURLErrorUnsupportedURL and probably shouldn't have.
NSCloudKitMirroringDelegate recieved NSURLErrorDomain:NSURLErrorBadServerResponse and probably shouldn't have.
NSCloudKitMirroringDelegate recieved NSURLErrorDomain:NSURLErrorCannotDecodeRawData and probably shouldn't have.
NSCloudKitMirroringDelegate recieved NSURLErrorDomain:NSURLErrorCannotDecodeContentData and probably shouldn't have.
NSCloudKitMirroringDelegate recieved NSURLErrorDomain:NSURLErrorCannotParseResponse and probably shouldn't have.
NSCloudKitMirroringDelegate recieved NSURLErrorDomain:NSURLErrorAppTransportSecurityRequiresSecureConnection and probably shouldn't have.
NSCloudKitMirroringDelegate recieved NSURLErrorDomain:NSURLErrorServerCertificateHasBadDate and probably shouldn't have.
NSCloudKitMirroringDelegate recieved NSURLErrorDomain:NSURLErrorServerCertificateUntrusted and probably shouldn't have.
NSCloudKitMirroringDelegate recieved NSURLErrorDomain:NSURLErrorServerCertificateHasUnknownRoot and probably shouldn't have.
NSCloudKitMirroringDelegate recieved NSURLErrorDomain:NSURLErrorServerCertificateNotYetValid and probably shouldn't have.
NSCloudKitMirroringDelegate recieved NSURLErrorDomain:NSURLErrorClientCertificateRejected and probably shouldn't have.
NSCloudKitMirroringDelegate recieved NSURLErrorDomain:NSURLErrorClientCertificateRequired and probably shouldn't have.
NSCloudKitMirroringDelegate recieved NSURLErrorDomain:NSURLErrorRequestBodyStreamExhausted and probably shouldn't have.
NSCloudKitMirroringDelegate was handed a scary NRULErrorDomain error (of some code that's not already in the switch) that it probably shouldn't have been: %@
%@ - Failed to recover from error: %@:%ld
Recovery encountered the following error: %@:%ld
-[NSCloudKitMirroringDelegate _recoverFromError:withZoneIDs:forStore:inMonitor:]
%@ - Recovered from error: %@:%ld
Got server rejected request as part of a partial error for a CKRecord: %@ - %@
%@: Found unknown error as part of a partial failure: %@
-[NSCloudKitMirroringDelegate _recoverFromPartialError:forStore:inMonitor:]_block_invoke
%@: Found unknown itemID (%@) as part of a partial failure: %@
Unknown error passed to partial error handler: %@
-[NSCloudKitMirroringDelegate _recoverFromPartialError:forStore:inMonitor:]
%@: Sending '%@'
 with reason: '%@'
-[NSCloudKitMirroringDelegate logResetSyncNotification:]
Failed to get a reset sync reason for error even though we're posting a notification for it: %@
%@: Observed context save: %@ - %@
-[NSCloudKitMirroringDelegate managedObjectContextSaved:]
com.apple.coredata.cloudkit.schedule
%@: Observed remote store notification: %@ - %@ - %@ - %@
-[NSCloudKitMirroringDelegate remoteStoreDidChange:]
-[NSCloudKitMirroringDelegate remoteStoreDidChange:]_block_invoke_3
%@ - Ignoring remote change notification because the exporter has already caught up to this transaction: %@ / %@ - %@
-[NSCloudKitMirroringDelegate remoteStoreDidChange:]_block_invoke
%@ - Ignoring remote change notification because the current history token couldn't be read: %@ - %@
%@ - Ignoring remote change notification because it didn't change any entities in the monitored store: %@
%@ - Ignoring remote change notification because it didn't change any entities tracked by persistent history: %@
%@ - Ignoring remote change notification because it's for a different store: %@ / %@
%@: Ignoring remote change notification because the store has been removed from the coordinator: %@
%@: Failed to submit activity for export due to exception: %@
-[NSCloudKitMirroringDelegate scheduleExportAndStartAfterDate:]
%@: Deferring export because the mirroring delegate is not initialized:
com.apple.coredata.cloudkit.setup.push
CoreData: CloudKit Setup From Push
-[NSCloudKitMirroringDelegate setupMirroringDelegateFromPushNotification]_block_invoke
%@: Checking to see if an automated import should be scheduled.
-[NSCloudKitMirroringDelegate checkAndScheduleImportIfNecessary:andStartAfterDate:]_block_invoke_2
Failed to fetch database metadata during automatic import check: %@
%@: Failed to save metadata changes during import check: %@
-[NSCloudKitMirroringDelegate checkAndScheduleImportIfNecessary:andStartAfterDate:]_block_invoke
%@: Scheduling automated import with activity: %@
%@: Deferring scheduling an import because not initialized yet.
Attempt to schedule an import failed because of an unhandled exception.
%@: Cancelling import check because the store is dead.
Unsupported database scope in date threshold calculation: %ld
%@: Checking for pending requests.
-[NSCloudKitMirroringDelegate checkAndExecuteNextRequest]
%@: Deferring additional work. There is still an active request: %@
-[NSCloudKitMirroringDelegate checkAndExecuteNextRequest]_block_invoke
%@: Executing: %@
%@: No more requests to execute.
Unable to schedule work because the mirroring delegate was deallocated.
Finished request: %@ with result: %@
-[NSCloudKitMirroringDelegate _finishedRequest:withResult:]
Finished request '%@' with result: %@
-[NSCloudKitMirroringDelegate finishedAutomatedRequestWithResult:]
Can't handle automated requests of type '%@' yet.
%@ - Beginning automated import - %@ - in response to activity:
-[NSCloudKitMirroringDelegate _scheduleAutomatedImportWithLabel:activity:completionHandler:]
%@ - Finished automatic import - %@ - with result: %@
-[NSCloudKitMirroringDelegate _scheduleAutomatedImportWithLabel:activity:completionHandler:]_block_invoke
Failed to execute mirroring request for automated import: %@
%@ - Beginning automated export - %@:
-[NSCloudKitMirroringDelegate _scheduleAutomatedExportWithLabel:activity:completionHandler:]
%@ - Finished automatic export - %@ - with result: %@
-[NSCloudKitMirroringDelegate _scheduleAutomatedExportWithLabel:activity:completionHandler:]_block_invoke
Failed to execute mirroring request for automated export: %@
Expected a non-nil error to schedule a setup activity from.
%@: Submitting setup activity as recovery for %@
-[NSCloudKitMirroringDelegate _scheduleSetupActivityFromError:]
%@: Marking zones %@ needing recovery from Manatee identity loss
-[NSCloudKitMirroringDelegate _markZonesNeedingRecoveryFromManateeIdentityLoss:databaseScope:inStore:error:]_block_invoke
Failed to fetch zone metadata during marking zones needing recovery from Manatee identity loss: %@
%@: Failed to save metadata while marking zones needing recovery from Manatee identity loss: %@
Encountered an unhandled exception while marking zones needing recovery from Manatee identity loss.
%@: Cancelling marking zones needing recovery from Manatee identity loss because the store is dead.
com.apple.coredata.cloudkit.schema.initialize
CoreData: CloudKit Initialize Schema
Executing schema initialization request: %@
-[NSCloudKitMirroringDelegate _performSchemaInitializationRequest:]_block_invoke
Request '%@' was skipped because it was configured with databaseScope == CKDatabaseShared.
%@ generated the following records for the model associated with the store: %@
-[NSCloudKitMirroringDelegate _createSchemaForStore:withMonitor:options:error:]
AccountLogin
AccountChange
AccountLogout
UserPurgedZone
ZoneDeleted
HistoryExpired
ServerChangeTokenExpired
Can't generate string for unknown reset sync reason: %lu
com.apple.
AppDeactivationExport
Ignoring application deactivation notification because the store is dead.
-[NSCloudKitMirroringDelegate applicationStateMonitorEnteredBackground:]_block_invoke_2
AppActivationExport
AppActivationImport
Ignoring application activation notification because the store is dead.
-[NSCloudKitMirroringDelegate applicationStateMonitorEnteredForeground:]_block_invoke_2
%@: Deferring active request due to background timeout: %@
-[NSCloudKitMirroringDelegate applicationStateMonitorExpiredBackgroundActivityTimeout:]
com.apple.coredata.ubiquity.eat
Unhandled exception in rowCacheForGeneration %@
Failed to save import operation: %@
-[PFCloudKitImportRecordsWorkItem newMirroringResultByApplyingAccumulatedChanges]_block_invoke_2
Failed to save changes from import: %@
Failed to fetch import operation with identifier '%@': %@
Import failed because committing the metadata changes hit an unhandled exception.
Finished importing changes for request: %@
-[PFCloudKitImportRecordsWorkItem newMirroringResultByApplyingAccumulatedChanges]_block_invoke
%@ - Exception thrown during import: %@
%@: Unable to set query generation on managedObjectContext: %@
-[PFCloudKitImportRecordsWorkItem applyAccumulatedChangesToStore:inManagedObjectContext:withStoreMonitor:madeChanges:error:]_block_invoke
CloudKit Import: Failed to find entity for unknown item recordID: %@ - %@
%@ - Importing updated records:
Deleted RecordIDs:
Failed to save applied changes from import: %@
The request '%@' was cancelled because it conflicted with another active import operation.
Importing updated share: %@
Failed to encode an updated share: %@
Import failed because applying the accumulated changes hit an unhandled exception.
Finished importing applying changes for request: %@
-[PFCloudKitImportRecordsWorkItem applyAccumulatedChangesToStore:inManagedObjectContext:withStoreMonitor:madeChanges:error:]
-[PFCloudKitImportRecordsWorkItem commitMetadataChangesWithContext:forStore:error:]
Failed to purge mirrored relationships during import: %@
Failed to read attributes of asset file at URL: %@
-[PFCloudKitImportRecordsWorkItem addUpdatedRecord:]
Failed to copy asset to URL: %@
Importer didn't obey operation memory threshold, finished operation with more than double the threshold worth of work to do (%@ bytes): %@
%@ - Fetch finished with error:
-[PFCloudKitImportRecordsWorkItem fetchOperationFinishedWithError:completion:]_block_invoke
Unable to delete processed asset file: %@
-[PFCloudKitImportRecordsWorkItem removeDownloadedAssetFiles]
%@: Applying accumulated changes at change token: %@
-[PFCloudKitImportRecordsWorkItem checkAndApplyChangesIfNeeded:]_block_invoke_2
Incremental import left uncommitted changes in the managed object context: %@
%@: Successfully applied incremental changes during request: %@
-[PFCloudKitImportRecordsWorkItem checkAndApplyChangesIfNeeded:]_block_invoke
Should tear down here and stop subsequent attempts to import from happening.
%@: Failed to incrementally apply changes during request: %@
%@ - Exception thrown during incremental import: %@
CloudKit Import: Failed to handle item error for unknown itemID type: %@ - %@
v32@?0@8@"NSError"16^B24
 resultType: %@
objectIDsToSerialize:
Records
RecordIDs
Unknown result type: %lu
cdutil-stub-container
Failed to load persistent store at url: %@
Timed out waiting for the mirroring delegate to finish setting up. This is a bug. Please re-run and attach a sample of cdutil if you can.
CloudKit Metadata:
q24@?0@"NSCKMetadataEntry"8@"NSCKMetadataEntry"16
%@: %@
Failed to fetch metadata entries:
Database: %@ (%ld): hasSubscription: %@, currentChangeToken: %@
Zone: %@:%@: hasRecordZone: %@, hasSubscription: %@, currentChangeToken: %@
Failed to fetch database metadata entries:
Unable to create a copy of the store at url: %@
This store has never been used with CloudKit (use cdutil dumpmetadata [storePath] to show store metadata): %@
Unable to load model from store: %@
cdutil
Failed to create temporary directory: %@
Generated records:
Failed to generate records: %@
Failed to load a managed object model. Arguments:
storeURL: %@
modelURL: %@
Encountered error: %@
Failed to move store to a temporary location: %@
Failed to create a temporary directory for working on the store.
ANSCKMIRROREDRELATIONSHIP
Attepmting to check for CloudKit tables failed: %@
Failed to tear down read-only store: %@
Failed to open store: %@
error: unexpected type of change : %lu
Invalid entity for NSPersistentHistoryChangeRequest: %@
TRANSACTION
BUNDLEID
PROCESSID
CONTEXTNAME
AUTHOR
QUERYGEN
CHANGES
transactionNumber
bundleID
processID
contextName
author
BUNDLEIDTS
PROCESSIDTS
CONTEXTNAMETS
AUTHORTS
CHANGE
ENTITY
ENTITYPK
CHANGETYPE
COLUMNS
TOMBSTONE
TRANSACTIONID
changeID
changedObjectID
changedEntity
TRANSACTIONSTRING
NAME
NSPersistentHistoryTrackingKey only supports a max of 100 tombstones per entity in the Model
v24@?0@"NSSQLEntity"8@"NSMutableOrderedSet"16
TransactionTimestampIndex
TransactionAuthorIndex
PersistentHistory
PersistentFetchHistory
Invalid variable substitution - multiple values not supported here %@
unable to resolve variable expression: %@
Invalid rowCache row is nil
Optimistic locking failure for %@.  Original row was missing while recording to-many changes.  New row = %@
Optimistic locking failure for %@.  Original row was missing while recording to-many changes.
UIBackgroundModes
audio
bluetooth-central
bluetooth-peripheral
external-accessory
location
processing
voip
AppActivateObserver
AppDeactivateObserver
-[PFCloudKitExportContext processAnalyzedHistoryInStore:inManagedObjectContext:error:]_block_invoke
Unhandled persistent history change type: %@
Finished processing analyzed history with %lu metadata objects to create, %lu deleted rows without metadata.
-[PFCloudKitExportContext processAnalyzedHistoryInStore:inManagedObjectContext:error:]_block_invoke_3
%@: %@ - Failed to assign an object to a record zone. This usually means the object exists in a shared database and must be assigned to a zone using -[%@ %@]: %@
-[PFCloudKitExportContext processAnalyzedHistoryInStore:inManagedObjectContext:error:]_block_invoke_5
Failed to assign an object to a record zone. This usually means the object exists in a shared database and must be assigned to a zone using -[%@ %@]: %@
Object graph corruption detected. Objects related to '%@' are assigned to multiple zones: %@
NSCKRecordMetadata
Unexpected number of items in the pk / ent array: %@
needsUpload = YES
isUploaded = NO
needsShareUpdate = YES OR needsShareDelete = YES
Fetched dirty zone that didn't need a share update or delete: %@
(needsCloudDelete == 1) AND !(SELF IN %@)
needsCloudDelete = YES
%@: Can't find metadata for recordID '%@' even though it was supposedly saved in these records: %@
-[PFCloudKitExportContext modifyRecordsOperationFinishedForStore:withSavedRecords:deletedRecordIDs:operationError:managedObjectContext:error:]_block_invoke
%@: Can't find record for recordID '%@' even though it was supposedly saved in these records: %@
Failed to fetch record metadata for saved records: %@
B32@?0@"NSCKMirroredRelationship"8@"CKRecord"16^@24
zoneName = %@ AND ownerName = %@ AND recordName in %@
SELF in %@
q24@?0@"CKRecordID"8@"CKRecordID"16
Stores don't match because they do not have the same mirroring configuration:
%@ - %@
%@ - %@
Stores don't match because they do not have the same mirroring options:
%@ - %@
%@ - %@
Record name does not match recordID, even though our metadata linked this row with '%@': %@
Record name appears to point to two different objects: %@ / %@
Mirrored relationships don't match for stores:
Store has these extra keys: %@
Other Store has these extra keys: %@
I don't know how to handle skewed shares yet.
%@-scope
CloudKit database scope doesn't match.
Store identity record names do not match.
%@-identity
Stores do not contain the same record names. (%@:%lu / %@:%lu)
Stores do not contain the same identifiers. (%@:%lu / %@:%lu)
%@-RecordIDs
Objects appear to be from different entities:
Store: %@
Other Store: %@
Failed to retrieve object with recordID '%@' from store %@
Ignored attribute (%@:%@) appears to have been synced:
Value: %@
Other value: %@
Attribute values do not match.
storeObjectID
otherStoreObjectID
store-%@
otherStore-%@
Unknown value type '%@' for attribute: %@
Not sure what to do with undefined attributes
Unknown attribute type: %lu
Ignored relationship (%@:%@) appears to have been synced:
Value: %@
Other value: %@
Mirrored relationships don't match actual record for '%@' in %@
Object: %@
Mirrored Relationships: %@
Mirrored relationships don't match for object with record name (%@): 
Store: %@
Other Store: %@
Relationship doesn't match for object with record name (%@): %@
Store: %@
Other Store: %@
Found mirrored relationship for ignored relationship: %@
Found mirrored relationship not marked uploaded, but this method is supposed to make sure store contents are equal, so shouldn't it be?
Found mirrored relationship that's marked deleted but the objects are linked.
Found pending mirrored relationship for linked objects (%@).
v32@?0@"NSManagedObject"8Q16^B24
Stores disagree about whether or not CloudKit metadata tables are present: %@
Move receipt dates don't match.
recordID
movedRecordName
%@-receipts
Move receipts don't match.
Shares don't match for record zone.
%@-share
recordZone.ckRecordZoneName IN %@
Stores don't have the same number of mirrored relationships: %lu / %lu
Trimmed: %@
operationUUID == %@
Duplicate operations for identifier: %@
Must supply a non-zero number of objectIDs to request during initialization
mismatched objectIDs in batch delete initializer
objectIDs
Must supply a fetch request during initialization
Fetch must have an entity
<NSBatchDeleteRequest : resultType : %ld, fetch :%@ >
Mismatched result types during aggregation of batch delete results
Invalid collation type (rtree indexes can only be created on attributes).
Invalid collation type (rtree indexes can only be created for floats or integers < 32 bit).
Can't create an index element without a property
Can't create an index element with an unnamed property
Can't create an index element with non-attribute property
NSIndexedProperty
NSFetchIndexElementType
NSFetchIndexDescription
NSAscending
<NSFetchIndexElementDescription : (%@ (%@), %d, %@)>
modeled property
Broken logic around index elements
offender
Array with content where there should be a set.
Failed to acquire permanent objectIDs during schema generation: %@
An example core data string
Some example data
http://www.apple.com
Unsupported attribute type
com.apple.coredata.cloudkit.predicate
com.apple.coredata.cloudkit.query.cursor
modificationDate > %@
modificationDate
recordType = %@ AND recordZone = %@
Attempt to initialize PFCloudKitHistoryAnalyzerContext with options that aren't PFCloudKitHistoryAnalyzerOptions: %@
%@: Skipping change because its entity is not in the configured set of entities for this store: %@
-[PFCloudKitHistoryAnalyzerContext processChange:error:]
entityId = %@ AND entityPK in %@
History parsing corruption detected. An existing analyzer state was fetched from the database for '%@' but it's corresponding in-memory copy is no longer present in the in-memory cache.
originalChangeTypeNum = %@ AND finalChangeTypeNum = %@
(ckRecordID IN %@ OR recordName IN %@ OR relatedRecordName IN %@) AND recordZone.ckRecordZoneName = %@ AND recordZone.ckOwnerName = %@
isPending == 1
ckRecordID = %@
Found more than one mirrored relationship matching a many to many: %@
((recordZone.ckRecordZoneName = %@) AND (recordZone.ckOwnerName = %@) AND (ckRecordID IN %@))
(needsDelete = 1 AND isUploaded = 1)
((recordZone.ckRecordZoneName = %@) AND (recordZone.ckOwnerName = %@) AND ((recordName IN %@) OR (relatedRecordName IN %@))) OR needsDelete = 1
Attempted to update a mirrored relationship with a non-mirrored-relationship record: %@
Returning unbatched results for unsupported NSExpression in propertiesToFetch: %@
Returning unbatched results for NSFetchRequest with NSDictionaryResultType and fetchBatchSize > 0 however propertiesToFetch includes sentinel value 'isDeleted' property: %@
Returning unbatched results for NSFetchRequest with NSDictionaryResultType and fetchBatchSize > 0 however propertiesToFetch does not include required 'self' or 'objectID' property: %@
missing variable binding for %@
bad substitution variable for %@, must be a constant value
bad substitution variable for %@, must not be a collection
bad substitution variable for %@, must be a collection
bad substitution variable for %@, must be a collection of objects or objectIDs
oid = %@ [oid class] = %s expecting entity %@
PFCloudKitMetadataModelMigratorMigrationBeganCommitKey
v32@?0@"NSString"8@"NSSQLEntity"16^B24
Migration discovered mutated entity IDs, precomputing z_ent changes.
-[PFCloudKitMetadataModelMigrator prepareContextWithConnection:error:]
Unexpected exception thrown during metadata migration: %@
ZENTITYNAME
ZISDELETED
ALTER TABLE %@ ADD COLUMN %@ INTEGER
UPDATE %@ SET %@ = '%@'
Skipping migration for '%@' because it already has a column named '%@'
-[PFCloudKitMetadataModelMigrator calculateMigrationStepsWithConnection:error:]
ckRecordZoneName = %@ AND ckOwnerName = %@
Metadata migration failed due to an unhandled exception while fetching zone metadata.
ZHASCHANGES
CREATE TEMPORARY TABLE %@_tmp(
INSERT INTO %@_tmp (
INSERT INTO %@ (
 FROM %@_tmp
DROP TABLE %@
DROP TABLE %@_tmp
UPDATE %@ SET %@=0
UPDATE %@ SET Z_OPT = 1 WHERE Z_OPT IS NULL OR Z_OPT <= 0
Exception caught during execution of migration statement for cloudkit metadata tables %@ with userInfo %@
An unhandled exception was thrown during CloudKit metadata migration: %@
Exception caught during execution of migration statement for cloudkit metadata tables %@
-[PFCloudKitMetadataModelMigrator commitMigrationMetadataAndCleanup:]_block_invoke
entityId = 0
Found %lu corrupt analyzed history rows, purging.
_NSStoreAncillaryModelVersionHashesMetadataKey
DELETE FROM %@ WHERE Z_ENT = %@
UPDATE %@ SET Z_ENT = %@
Exception caught during cleanup of cloudkit metadata primary keys %@ with userInfo %@
Exception caught during cleanup of cloudkit metadata primary keys %@
Found corrupt zone on record metadata: %@
-[PFCloudKitMetadataModelMigrator checkForRecordMetadataZoneCorruptionInStore:error:]_block_invoke_2
Failed to refresh zone for assignment during corrupt zone cleanup: %@
ckRecordSystemFields == NULL
ckRecordSystemFields != NULL
%K != nil
ZNSCKEXPORTEDOBJECT
ZNSCKEXPORTMETADATA
ZNSCKEXPORTOPERATION
ZNSCKIMPORTOPERATION
ZNSCKIMPORTPENDINGRELATIONSHIP
Unable to find attribute to migrate to '%@' from '%@' on entity: %@
ckRecordID.@count
Found mirrored relationships without a recordID.
Found record metadata that points to missing entity: %@
-[PFCloudKitMetadataModelMigrator checkForCorruptedRecordMetadataInStore:inManagedObjectContext:error:]_block_invoke
Found record metadata that points to an entity that is no longer part of the store's configuration: %@
Successfully purged record metadata during migration due to corrupted metadatas.
-[PFCloudKitMetadataModelMigrator checkForCorruptedRecordMetadataInStore:inManagedObjectContext:error:]
Failed to purged corrupted record metadata during migration: %@
NOT (entityId IN %@)
Trying to return failure without an error set.
Couldn't find sql for table '%@', did you check if it exists first?
executionCount
instructionCount
rowCount
UPDATE OR IGNORE "%@" SET "%@" = "%@" + %lld, "%@" = "%@" + %lld, "%@" = "%@" + %lld WHERE "%@" = '%@'
Couldn't find NSSQLiteIndexStatistics entity
unexpected failure updating index statistics: %s
SQLiteIndexTracking
Illegal attempt to pass a non-file URL to a file backed NSData
%@ does not support eviction.
NSFileSize
No file exists at URL '%@'
_NSDataFileBackedFuture : <%@, %llu, %@ (%@)>
this class requires a keyed archiver
this keyed archiver does not support this class
NSUUID
NSFileURL
NSOriginalFileURL
this archiver forbids unarchiving this class
url is not a required file url
original url is not a required file url
file size exceeds maximum size for data
Underlying file for this file backed future has not been downloaded.
<null url>
Underlying url for this file backed future is not a file url.
Exception reading data for file backed future.  %@
<no error>
%@: First attempt at moving file to interim location failed: %@
Failed to copy file from %@ to %@ (%@)
%@: First attempt at moving in to place failed with error: %@
%@: Exporter / importer finished after %d tries. Allowing store to deallocate.
-[PFCloudKitStoreMonitor pfcloudstoremonitor_is_holding_your_store_open_waiting_for_cloudkit_activity_to_finish]
%@: Exporter / importer didn't tear down after 5 seconds, retrying (%d).
Attempt to create context without a store identifier.
Called after the store is dead. This method needs to be called inside a performBlock on the store monitor: %@
_executeObjectFaultRequest passed a nil objectID
exception fetching row for object with ID: %@ with userInfo of %@
Asked to fault objectID %@ but database returned row with different objectID %@
Database appears corrupt.  Asked to fault objectID %@ but database returned row with different objectID %@
Asked to fault objectID %@ but database returned multiple rows
failed to resolve fault to exactly one object for %@
fault fulfilled from database for : %@ with row values: %@
fault fulfilled from database for : %@
orderKey
exception during newFetchedPKsForSourceID: %@ with userInfo of %@
to-many relationship fault "%@" for objectID %@ fulfilled from database.  Got %d rows with values: %@
to-many relationship fault "%@" for objectID %@ fulfilled from database.  Got %d rows
Batch insert failed to generate a post transaction query generation with error %d
Batch insert did not affect any rows, not registering a query generation
Encountered error %@ with userInfo %@ while rolling back batchInsertRequest
Encountered exception %@ with userInfo %@ while rolling back batchInsertRequest
Batch delete failed to generate a post transaction query generation with error %d
Batch delete did not affect any rows, not registering a query generation
Unhandled error from executeBatchDeleteRequest %@ and userInfo %@
Unhandled opt lock error from executeBatchDeleteRequest %@ and userInfo %@
Unhandled exception from executeBatchDeleteRequest %@
drop external data reference triggers during NSBatchDeleteRequest failed because %@ with userInfo %@
drop triggers during NSBatchDeleteRequest failed because %@ with userInfo %@
drop external data reference temp table during NSBatchDeleteRequest failed because %@ with userInfo %@
drop temp history tables during NSBatchDeleteRequest failed because %@ with userInfo %@
rollback during NSBatchDeleteRequest failed because %@ with userInfo %@
Empty or Null Dictionary passed to propertiesToUpdate:
Unable to generate updateStatement for affected object IDs (cause unknown)
Short-circuiting batch update: impossible condition in where clause (2)
Batch update failed to generate a post transaction query generation with error %d
Batch update did not affect any rows, not registering a query generation
dropping triggers during NSBatchUpdateRequest failed because %@ with userInfo %@
Rollback during NSBatchUpdateRequest failed because %@ with userInfo %@
Persistent history request failed to adopt a query generation with error %d
Persistent History Token is expired for store at %@
Persistent history request failed to adopt query generation
Unhandled error encountered during change request %@ with userInfo %@
Unhandled exception encountered during change request: %@ with userInfo %@
Missing transaction scope for change tracking of changes.
, %qi
SELECT %@,%@ FROM %@ WHERE %@ IN (%@) ORDER BY %@
Optimistic locking failure for %@.  Row was deleted.  Original row = %@ New Row = <deleted>
Optimistic locking failure for %@.  Row was deleted.
Optimistic locking failure for %@.  Row was updated.  Original row = %@ New Row = %@
Optimistic locking failure for %@.  Row was updated.
Unsupported unique attribute type: %@
Optimistic locking failure for %@.  During write changes, deletion failed.  Row was updated.  Original row = %@ New Row = %@
Optimistic locking failure for %@.  During write changes, deletion failed.  Row was updated.
Constraint violation
SaveChanges: NSSQLCore: %p Transactions cannot be nested
_NSSQLCoreActiveSaveRequest
requestContext
_NSSQLCoreTransactionExternalDataReferencesToDelete
Save changes failed to generate a post transaction query generation with error %d
Missing transaction scope for commit changes.
addedOrUpdated
count using %@ returned %d
logically false count request %@ short circuits.
count request %@ returned %d
total count request execution time: 
[31m%.4f
[0ms for count of %d.
total count request execution time: %.4fs for count of %d.
%@ %@ JOIN %@ %@ %@%@
SELECT %@%@, %@%@ FROM 
SELECT %@%@ FROM 
SELECT 0, %@%@ FROM 
 %qi
 %@, %@
, %@.%@
%@ IN ( 
%qu, 
%qu ) 
AND 
q24@?0@"NSManagedObjectID"8@"NSManagedObjectID"16
Prefetching from join table for many-to-many relationship "%@" from database.  Got %lu rows with values: %@
Prefetching from join table for many-to-many relationship "%@" from database.  Got %lu rows
Prefetching with request %@.  Got %lu rows with values: %@
Prefetching with key '%@'.  Got %lu rows.
com.apple.CoreData.BufferAllocations.VMMemory
com.apple.CoreData.BufferAllocations.OneBuffer
VM Memory is already One Buffer Row that grows!!!
com.apple.CoreData.BufferAllocations.ManyResultSets
VM Memory does not support multiple result sets!!!
logically false fetch request %@ short circuits.
sql connection fetch statement: '%@'
XPC Store fetch encountered an error : %@
XPC Store fetch raised an exception : %@
Encountered exception %@ with userInfo %@ while rolling back generating permanent objectIDs
com.apple.CoreData.CloudKitDebug
Checking log level threw: %@
/System/Library/Frameworks/CloudKit.framework/CloudKit
CKContainer
CKContainerOptions
CKRecordZone
CKRecordZoneID
CKRecord
CKRecordID
CKAcceptSharesOperation
CKFetchDatabaseChangesOperation
CKModifyRecordZonesOperation
CKModifyRecordsOperation
CKFetchRecordZonesOperation
CKFetchRecordsOperation
CKDatabaseSubscription
CKModifySubscriptionsOperation
CKAsset
CKFetchRecordZoneChangesConfiguration
CKFetchRecordZoneChangesOperation
CKServerChangeToken
CKNotificationInfo
CKEncryptedData
CKOperationConfiguration
CKScheduler
CKSchedulerActivity
CKNotificationListener
CKShare
CKFetchShareParticipantsOperation
CKFetchShareMetadataOperation
CKQueryOperation
CKQuery
CKQueryCursor
CKCurrentUserDefaultName
CKErrorDomain
CKPartialErrorsByItemIDKey
CKAccountChangedNotification
CKIdentityUpdateNotification
CKErrorRetryAfterKey
CKRecordZoneDefaultName
CKRecordTypeShare
CKRecordNameZoneWideShare
CKDatabaseScopeString
initWithRequest passed an error (%@) on a succes condition
initWithRequest illegally passed nil instead of an error on a failure condition
 success: %d madeChanges: %d error: %@
CDDCloudKitRegisteredClient
TEMP_CDBATCHINSERTOBJECTIDS
TEMP_CDBATCHUPDATEOBJECTIDS
Unexpected batch operation: %@
CREATE TEMP TABLE IF NOT EXISTS %@ (ENTITYID INTEGER, PRIMEKEY INTEGER, TYPE INTEGER, ATTRIBUTENAME VARCHAR)
NEW.Z_PK
NEW.Z_ENT
ZQ_%@_%@_%@
INSERT INTO %@ (ENTITYID, PRIMEKEY, TYPE) SELECT %@, %@, %ld;
CREATE TEMPORARY TRIGGER IF NOT EXISTS %@ AFTER %@ ON %@ FOR EACH ROW BEGIN %@ END
ZQ_UPDATE_%@_%@
INSERT INTO %@ (ENTITYID, PRIMEKEY, TYPE) SELECT OLD.Z_ENT, OLD.Z_PK, %ld;
CREATE TEMPORARY TRIGGER IF NOT EXISTS %@ AFTER UPDATE ON %@ FOR EACH ROW BEGIN %@ END
ZQ_UPDATE_%@_%@_%@
INSERT INTO %@ (ENTITYID, PRIMEKEY, TYPE, ATTRIBUTENAME) SELECT OLD.Z_ENT, OLD.Z_PK, %ld, '%@';
CREATE TEMPORARY TRIGGER IF NOT EXISTS %@ AFTER UPDATE ON %@ FOR EACH ROW WHEN OLD.%@ IS NOT NEW.%@ BEGIN %@ END
Expected an attribute for the entity
History transaction processing failed but didn't return an error
%@: Failed to execute a history fetch: %@
History analyzer encountered an unhandled exception while fetching history
Invalid attempt to process transaction '%@' twice.
Invalid invocation of '%@', cannot be called after '%@'
q24@?0@"NSObject<PFHistoryAnalyzerObjectState>"8@"NSObject<PFHistoryAnalyzerObjectState>"16
v32@?0@"NSObject<PFHistoryAnalyzerObjectState>"8Q16^B24
CoreData: %@
%@: Got: %@ - %d
-[PFCloudKitThrottledNotificationObserver noteRecievedNotification:]
%@: Executing '%@' block for '%@' clearing %d iterations.
-[PFCloudKitThrottledNotificationObserver noteRecievedNotification:]_block_invoke
No notification handler block specified. Dropping: %@
%@ - Already scheduled a block to respond to '%@', %d notifications since.
NSCloudKitMirroringDelegateInitializedZoneDefaultsKey
NSCloudKitMirroringDelegateInitializedZoneSubscriptionDefaultsKey
NSCloudKitMirroringDelegateCKIdentityRecordNameDefaultsKey
NSCloudKitMirroringDelegateCheckedCKIdentityDefaultsKey
NSCloudKitMirroringDelegateInitializedDatabaseSubscriptionKey
<%@: %p; %@
loaded
not-loaded
,changed:%d
,initZone:%d
,initZoneSub:%d
,initDatabaseSub:%d
,identity:%@
,checkedIdentity:%d
,changeTokens:
,%@:%@
v32@?0@"NSString"8@"CKServerChangeToken"16^B24
empty
historyToken:%@
%@:%@ called before load.
Failed to deserialize '%@' out of the metadata for store: %@
.%@.%@
public
shared
Unknown database scope: %lu
Move
Update
Insert
Unset
<%@: %p> { object: %p, type: %@%@%@ }
, startIndex: %@
, finalIndex: %@
 containerIdentifier:%@
 databaseScope:%@
 ckAssetThresholdBytes:%@
 operationMemoryThresholdBytes:%@
 useEncryptedStorage:%@
 useDeviceToDeviceEncryption:%@
 automaticallyDownloadFileBackedFutures:%@
 automaticallyScheduleImportAndExportOperations:%@
 skipCloudKitSetup:%@
 preserveLegacyRecordMetadataBehavior:%@
 useDaemon:%@
 apsConnectionMachServiceName:%@
 containerProvider:%@
 storeMonitorProvider:%@
 metricsClient:%@
 metadataPurger:%@
 scheduler:%@
 notificationListener:%@
 containerOptions:%@
 defaultOperationConfiguration:%@
 progressProvider:%@
 test_useLegacySavePolicy:%@
 archivingUtilities:%@
NSCloudKitMirroringDelegateOptions.initializeSchema is no longer supported and will be removed in a future release. Please use -[NSPersistentCloudKitContainer initializeSchemaWithOptions:error:] or NSCloudKitMirroringInitializeSchemaRequest instead.
FETCH_REQUEST_LIMIT_SUBSTITUTION
FETCH_REQUEST_OFFSET_SUBSTITUTION
Unsupported substitution variable type for key %@
Mismatched variables dictionaries (count)
Mismatched variables dictionaries (missing value)
Mismatch: that which was once a collection is no longer (%@)
%{public}s: %{public}s
CoreData: %{public}s: %{public}s
CoreData: PFCloudKitModelValidator was handed an entity with unique constraints that aren't attributes or strings: %@ - %@
CoreData: Unexpected unknown exception on server
CoreData: Unexpected tagged string result
CoreData: swallowed an exception during XPC store prefetching of %@, %@: %@
CoreData: swallowed an exception during XPC store recursive prefetching of %@, %@: %@
CoreData: XPCStore sendMessage: Unhandled exception handling request.  %@
CoreData: XPCStore sendMessage: Unhandled unknown exception handling request
CoreData: Somehow got a temporary objectID for export: %s
CoreData: This method only supports objectIDs from SQLite stores: %s
CoreData: createRecordID called before the record has the necessary properties: %@
CoreData: NCKRecordMetadata: System fields record name doesn't match row: %@
CoreData: NSCKRecordMetadata: System fields record type doesn't match new schema: %@
CoreData: Failed to reconstruct CKRecord from system fields in record metadata: %@
CoreData: Cannot create objectID: called before the record has the necessary properties: %@
CoreData: Cannot create objectID. Unable to find entity with id '%@' in store '%@'
CoreData: Found more than one instance of NSCKRecordMetadata for object: %s
CoreData: Exporter got record metadata back but doesn't have a corresponding objectID: %s
CoreData: Found more than one instance of NSCKRecordMetadata for record: %s
CoreData: Invalid query for record metadata (by recordIDs): %@ returned no metadata or record names
CoreData: Attempting to query cloudkit metadata without a mirroring delegate: %@
CoreData: Illegal attempt to merge move receipts before assigning a record metadata to a store: %@
CoreData: Import is attempting to link objects across zones: %@
CoreData: Found temporary objectID for metadata link: %@
CoreData: %@ - Exception thrown during query import: %@
### Failed to Soft Link: /System/Library/PrivateFrameworks/CoreAnalytics.framework/CoreAnalytics
CoreData: Updating a constrained entity generated an UPDATE statement with no columns on entity %@
CoreData: Batched history request encountered error %@
CoreData: Batched persistent history request returned a result AND an error %@
CoreData: Efficient batching requires the use of query generations: %@
CoreData: _PFLock deallocated while in use
CoreData: _PFMutex deallocated while in use
CoreData: Background Core Data task threw an exception.  Exception = %@ and userInfo = %@
CoreData: NSPersistentCloudKitContainerEventResult initialized without any subresults to aggregate.
CoreData: Unknown NSPersistentCloudKitContainerEventResultType in subResult: %@
CoreData: One or more models in this application are using transformable properties with transformer names that are either unset, or set to NSKeyedUnarchiveFromDataTransformerName. Please switch to using "%@" or a subclass of NSSecureUnarchiveFromDataTransformer instead. At some point, Core Data will default to using "%@" when nil is specified, and transformable properties containing classes that do not support NSSecureCoding will become unreadable.
CoreData: Unhandled error (%@, %ld) occurred during faulting and was ignored: %@
CoreData: faulting failed to record an error for an serious condition
CoreData: Unexpected change - objectID failed for entity - %@, entityID - %ld,  pk - %lld,  model - %@ - %@, store - %@
CoreData: Unexpected change - entity ID (%ld) not found in model - %@ - %@, store - %@
CoreData: Unknown fetch request result type: %ld
CoreData: Found multiple NSPersistentCloudKitContainerEvents for the identifier '%@'
CoreData: No event was found for the identifier '%@' in this result: %@
CoreData: Cannot create persistent event for request: %@
CoreData: Unknown exception thrown posting NSRemotePersistentStoreDidChangeNotification
CoreData: NSKnownKeysDictionary: improper mapping detected with key '%@'
CoreData: Failed to generate function for '%s'
CoreData: Failed to add function to class for '%s'
CoreData: Testing generated function for +classForEntity: failed for entity %s (%p)
CoreData: Factory and entity class skew over placeholder singleton.  Expected %p but got %p for entity '%s'
CoreData: Exception %@ ui %@ occurred in +[NSManagedObject classForEntity:]
CoreData: Unknown exception occurred in +[NSManagedObject classForEntity:]
CoreData: Exception %@ ui %@ occurred in +[NSManagedObject _entityDeallocated:]
CoreData: Unknown exception occurred in +[NSManagedObject _entityDeallocated:]
CoreData: NULL _cd_rawData but the object is not being turned into a fault
CoreData: Unknown exception while resetting query generation during exception recovery for save
CoreData: NSErrorMergePolicy failed to resolve %ld conflicts (%@)
CoreData: existingObjectWithID incorrectly returned nil without an error set for objectID %@
CoreData: Fetching generated a result AND an error: %@
CoreData: Fetching returned nil AND failed to generate an error
CoreData: Unknown batch request - %@ - %lu
CoreData: Unknown request - %@ - %lu
CoreData: Either a non nil result OR an error OR an exception
CoreData: Fetching generated an error AND a result: %@
CoreData: Fetching failed to generate a result OR an error OR an exception
CoreData: An observer of NSManagedObjectContextDidSaveNotification illegally threw an exception.  Exception = %@ at %@ with userInfo = %@ and objects saved = %@
CoreData: Delete propagation prefetching failed with exception: %@
CoreData: Either a non nil result OR an error in nexted context
CoreData: NSQueryGeneration -dealloc caught an unexpected exception: %@
CoreData: Stores failed to initialize but did not return an error.
CoreData: Metadata corruption found, store appears to have been used with multiple CloudKit databases: %@
CoreData: System fields shouldn't be set anymore: %@
CoreData: Unknown event type, cannot covert to string: %ld
CoreData: Got non-object value back for property '%@' which returned an objectID from the snapshot.
CoreData: NSSQLConnection manager failed to initialize with exception %@
CoreData:  NSSQLConnectionManager tried to blow a lock
CoreData: handleStoreRequest failed with unknown excception
CoreData: scheduleBarrierBlock failed with unknown excception
CoreData: scheduleConnectionsBarrier failed with unknown excception
CoreData: disconnectAllConnections failed with unknown excception
CoreData: enumerateAvailableConnectionsWithBlock failed with unknown excception
CoreData: -init results in undefined behavior for NSBatchInsertRequest
CoreData: An NSPersistentStore illegally threw an exception from -willRemoveFromPersistentStoreCoordinator:
CoreData: Unhandled exception in developer completion handler for addPersistentStoreWithDescription %@
CoreData: Unhandled unknown exception in developer completion handler for addPersistentStoreWithDescription
Fetch
CoreData: A sqlite store save failed but did not return an error: %@
CoreData: A xpc store save failed but did not return an error: %@
CoreData: A binary store save failed but did not return an error: %@
CoreData: An in-memory store save failed but did not return an error: %@
Save
CoreData: Either a non nil result OR an error
CoreData: Exception was caught during NSPersistentStoreCoordinator -performBlock: %@ with userInfo %@
CoreData: Unidentifiable exception was caught during NSPersistentStoreCoordinator -performBlock.
CoreData: Exception thrown during autorelease pool drain.
CoreData: Initialize schema failed but did not set an error: %@
CoreData: NSPersistentCloudKitContainer got a result back that isn't of type 'NSCloudKitMirroringDelegateSerializationRequestResult' when asking about the record for a managed object id.
CoreData: Wait timed out during call to recordForManagedObjectID
CoreData: NSPersistentCloudKitContainer got a result back that isn't of type 'NSCloudKitMirroringDelegateSerializationRequestResult' when asking about the records for a group of managed object ids.
CoreData: Wait timed out during call to recordsForManagedObjectIDs
CoreData: An error occured while fetching record metadata to figure out if an object is mutable: %@
CoreData: Failed to fetch the CKShare for an object in the shared database: %@ - %@
CoreData: Client passed in objects from multiple contexts, this should return an error.
CoreData: Metadata context was left dirty: %@
CoreData: Target store has no mirroring delegate: %@
CoreData: Metadata context was left dirty after preparing sharing metadata: %@
CoreData: Share acceptance succeeded but did not return NSCloudKitMirroringAcceptShareInvitationsResult: %@
CoreData: fetchSharesMatchingObjectIDs failed but did not set an error.
CoreData: fetchSharesInPersistentStore failed but did not set an error.
CoreData: Client attempting to share objects from multiple contexts, this should return an error.
CoreData: Metadata context was left dirty after attempting to share objects: %@
CoreData: Timed out waiting for share records to be exported: %@
CoreData: Serious application error.  An exception was caught from the delegate of NSFetchedResultsController during a call to -controllerDidChangeContent:.  %@ with userInfo %@
CoreData: Serious application error.  Unidentifiable exception was caught from the delegate of NSFetchedResultsController during a call to -controllerDidChangeContent:.
CoreData: Called to accept connection for unknown listener: %@
CoreData: Bug in CoreData CloudKit Server: Response success == NO but error is also nil.
CoreData: CloudKit Server is attempting to send back a nil response: %@
CoreData: Multiple clients registered for the same store path: %@
CoreData: Found unknown activity type: %@
CoreData: Asked to run activity but no server: %@
CoreData: Found more than one scheduled activities matching the identifier '%@': %@
CoreData: Success was NO but expected YES
CoreData: Error was non-nil, but expected nil
CoreData: Failed to handle activity because initialization took longer than expected: %@
CoreData: createRecordZoneID called before object has an owner name and zone name: %@
CoreData: Illegal attempt to work with the core-data or default zone in the shared database: %@
CoreData: Multiple zone entires discovered for a single record zone: %@
CoreData: Attempt to init PFCloudKitHistoryAnalyzer with the wrong options class: %@
CoreData: Transaction appears to have been processed twice: %@
CoreData: entityForObjectID was passed a nil objectID
CoreData: entityForObjectID failed to retrieve an NSSQLEntity for objectID %@
CoreData: entityForObjectID passed a nil entity description from %@
CoreData: _sqlCoreLookupSQLEntityForEntityDescription failed to return a result for objectID %@ with entity %@
CoreData: Attempt to add read-only file at path %@ read/write. Adding it read-only instead. This will be a hard error in the future; you must specify the NSReadOnlyPersistentStoreOption.
CoreData: Exception caught during check for existing table drop %@
CoreData: Exception caught during check for db integrity %@
CoreData: Exception caught during trigger recreation %@
CoreData: Exception caught during repair of triggers %@ with userInfo %@
CoreData: Exception caught during repair of triggers %@
CoreData: Exception caught during rebuild of DA triggers %@ with userInfo %@
CoreData: Exception caught during rebuild of DA triggers %@
CoreData: Exception caught during autovacuum check %@
CoreData: Exception caught during drop of old history tracking tables %@ with userInfo %@
CoreData: Exception caught during drop of old history tracking tables %@
CoreData: Exception caught during drop/create of history tracking tables %@ with userInfo %@
CoreData: Exception caught during drop/create of history tracking tables %@
CoreData: Exception caught during add of tombstone columns %@ with userInfo %@
CoreData: Exception caught during add of tombstone columns %@
CoreData: Exception caught during checking for Ancillary Entities %@ with userInfo %@
CoreData: Exception caught during checking for Ancillary Entities %@
CoreData: Exception caught during adding transaction string table %@ with userInfo %@
CoreData: Exception caught during adding transaction string table %@
CoreData: Exception caught during create of history tracking tables %@ with userInfo %@
CoreData: Exception caught during create of history tracking tables %@
CoreData: Store opened without NSPersistentHistoryTrackingKey but previously had been opened with NSPersistentHistoryTrackingKey - Forcing into Read Only mode store at '%@'
CoreData: Exception caught during cached model check %@
CoreData: Exception caught during model caching %@ with userInfo %@
CoreData: Exception caught during model caching %@
CoreData: Exception caught during _ensureDatabaseMatchesModel %@ with userInfo %@
CoreData: Exception caught during _ensureDatabaseMatchesModel %@
CoreData: generational row cache %p failed to return a value for store '%@' with token %@
CoreData: Exception caught during index recreation %@
CoreData: An unreported error occurred during initialization of query generation connection.
CoreData: Preloading query generation connection for high protection class CloudKit store failed with exception: %@
CoreData: Failed to adopt query generation from remote change
CoreData: Refreshing trigger values failed to adopt post transaction query generation with error %d
CoreData: Exception thrown posting NSPersistentStoreRemoteChangeNotification: %@
CoreData: Unknown exception thrown posting NSPersistentStoreRemoteChangeNotification
CoreData: Remote Change Notification - Failed to setup notification listener for NSPersistentStoreRemoteChangeNotification: %d
CoreData: Work item result failed but did not include an error: %@
CoreData: The importer needs to be taught how to merge results of different types when dealing with multiple work items: %@
CoreData: %@: Could not create cloudkit container: %@
CoreData: Unexpected exception thrown during account setup: %@
CoreData: Failed to fetch zone metadata during un-marking zones needing recovery from Manatee identity loss: %@
CoreData: Zone fetch didn't return an error or a dictionary of zones
CoreData: Custom zones aren't supported yet with the public database.
CoreData: Unexpected exception thrown during identity check: %@
CoreData: Identity fetch failed but did not set an error.
CoreData: Decoded share zoneID doesn't match row: %@
CoreData: Unsupported property type for unique attribute on entity '%@': %@
CoreData: Failed to initialize query generation tracking connection due to exception %@ (%@) with error (%@)
CoreData: Failed to initialize query generation tracking connection due to unknown exception with error (%@)
CoreData: Exception was caught during NSSQLiteConnection -_performBlock: %@ with userInfo %@
CoreData: Unidentifiable exception was caught during NSSQLiteConnection -_performBlock.
CoreData: Unable to create index: %@ due to exception (%@)
CoreData: performIntegrityCheck encountered an exception %@
CoreData: unable to cache model: %@
CoreData: PostSaveMaintenance: performPostSaveTasks threw something (1). ex = %@
CoreData: PostSaveMaintenance: performPostSaveTasks threw something (2). ex = %@
CoreData: History Transaction hit an Optimistic Locking Exception - %@
CoreData: History Change hit an Optimistic Locking Exception - %@
CoreData: History Update for %@ without any updated columns.
CoreData: Unable to construct objectID for History Change: %@-%@-%@-%@
CoreData: incorrect number of results
CoreData: Percentage History calculation error. Total Pages - %lld  Free Pages - %lld
CoreData: sqlite3_snapshot data was unexpectedly NULL
CoreData: Connection can't register generation: Uncaught exception: %@
CoreData: currentQueryGenerationIdentifier failed with exception: %@
CoreData: currentQueryGenerationIdentifier failed with NSError: %@
CoreData: currentQueryGenerationIdentifier failed with sqlite error: %d
CoreData: Failed to free sqlite3_snapshot
CoreData: Missing metadata query got an unexpected number of columns in the result: %@
CoreData: Missing metadata query hit an exception: %@
CoreData: Entity marked as needing unique constraint coalescing but does not appear to be uniqued: %@
CoreData: CloudKit: Deduping for metadata entity doesn't know how to handle this type of object yet: %@ - %@
CoreData: Fetch operation was notified about a recordID that finished with an error that doesn't have an objectID: %@ - %@
CoreData: Fetch operation was notified about an updated recordID that finished that doesn't have an objectID: %@
CoreData: Fetch operation was notified via partial failure about a recordID that doesn't have an objectID: %@ - %@
CoreData: Fetch request validation for NSPersistentCloudKitContainerEventRequest failed but did not report a failure reason.
CoreData: NSPersistentCloudKitContainerEventRequest predicate translation failed but did not return a failure reason: %@
CoreData: Unknown request class: %@
CoreData: Dequeue called during an active request: %@
CoreData: requestFinished called with a different request than the active request: %@
Called with: %@
CoreData: requestFinished called without an active request: %@
CoreData: History analysis corruption detected. State is behind (or overlaps) this copy but is attempting to be merged. %@ / %@
CoreData: Tombstones aren't supported yet for CloudKit history analysis
CoreData: Asked to purge user rows without any zones from which to purge.
CoreData: Asked to purge system fields without any zones from which to purge.
CoreData: Asked to purge zone metadata (trying to recreate after the purge) without any zones from which to purge.
CoreData: Cannot create objectID: got a 0 pk for entity: %@
CoreData: Attempting to delete a zone metadata that has records (%ld): %@ - %@
CoreData: exception raised during multi-threaded fetch %@ (%@)
CoreData: unidentifiable exception during multi-threaded fetch
CoreData: exception %@ raised processing result of multi-threaded fetch (%@)
CoreData: unidentifiable processing result of multi-threaded fetch
CoreData: exception %@ raised processing result of multi-threaded fetch while prepopulating objects (%@)
CoreData: unidentifiable processing result of multi-threaded fetch while prepopulating objects
CoreData: exportIfNecessaryWithCompletion invoked multiple times.
CoreData: History analyzer should have set an error if the analyzer context is nil.
CoreData: Metadata Inconsistency: Missing metadata for record: %@
CoreData: Model map is unexpectedly nil
CoreData: Invalid metric sent to PFCloudKitMetricsClient: %@
CoreData: Attempt to log metric with PFCloudKitBaseMetric, but each subclass must provide it's own name.
CoreData: Attempt to link objects across zones: MTM `%@` is attempting to relate `%@` and `%@`
CoreData: Got temporary objectIDs back during import where we should have permanent ones: %@ / %@
CoreData: New many to many relationship type?: %@
CoreData: Attempting to link objects across zones via one-to-many relationship '%@': %@ / %@
CoreData: Import context cache is stale. To-one mirrored relationship source object has gone missing: %@ - %@
CoreData: tableMigration returned nil cloudkit update statements: %@
CoreData: CloudKit metadata migration generated a source / destination id mapping for identical ids: %@
CoreData: Serializer is attempting to link relationships across zones: %@ - %@ / %@
CoreData: Failed to look up cached mirrored relationship for mtmKey: %@
CoreData: Supposedly serialization succeeded but there's no record: %@
CoreData: Object serialization failed but did not set an error: %@
CoreData: Record metadata doesn't match row: %@
CoreData: Need to handle fetch errors here for the zone and abort serialization. %@
CoreData: Unknown recordID returned as part of fetch for missing pending relationship objectIDs: %@ - %@ - %@
CoreData: Delegate didn't return a file url for asset: %@
CoreData: Attribute serialization failed but did not set an error: %@.%@
CoreData: Unable to provide a default CKRecordZoneID for database scope: %@
CoreData: Invalid arguments to initialize a share invitations result. If the operation failed both acceptedShares and acceptedShareMetadatas should be nil, otherwise there should be both arrays.
CoreData: Exception %@ ui %@ occurred in +[_CDSnapshot _invalidateStaticCaches:] preparing entity deallocation delegate
CoreData: Unknown exception occurred in +[_CDSnapshot _invalidateStaticCaches:] preparing entity deallocation delegate
CoreData: Exception %@ ui %@ occurred in +[_CDSnapshot _invalidateStaticCaches:] objc_disposeClassPair
CoreData: Unknown exception occurred in +[_CDSnapshot _invalidateStaticCaches:] objc_disposeClassPair
CoreData: Exception %@ ui %@ occurred in +[_CDSnapshot classForEntity:]
CoreData: Unknown exception occurred in +[_CDSnapshot classForEntity:]
CoreData: Exception %@ ui %@ occurred in +[_CDSnapshot _entityDeallocated:]
CoreData: Unknown exception occurred in +[_CDSnapshot _entityDeallocated:]
CoreData: Something has gone badly awry initializing the XPC connection pool: %@
CoreData: manager sendMessageWithContext: failed with exception (how? it should never throw): %@
CoreData: manager sendMessageWithContext failed with unknown exception
CoreData: Didn't get a minimum transaction number for change: %@
CoreData: Expected to get an instance of NSCKRecordMetadata for this recordID: %@ but got: %@
CoreData: Already have a mirrored relationship registered for this key: %@
CoreData: Attempting to cache zone metadata but already have one: %@
CoreData: Unhandled exception finding default Directory URL '%@'
CoreData: -[NSPersistentContainer initWithName:managedObjectModel:] called with the empty string as its container name
CoreData: -[NSPersistentContainer initWithName:managedObjectModel:] called with invalid container name '%@'
CoreData: resetAfterError illegally passed nil instead of an error on a failure condition
CoreData: %@: Asked to execute a request that isn't understood yet: %@
CoreData: Reset request was scheduled without a root cause error: %@
CoreData: Setup request executed with a completion block that will never be called: %@
CoreData: Mirroring delegate asked to set up when already successfully initialized.
CoreData: _initializeCloudKitForObservedStore failed but did not return an error.
CoreData: %@: Illegal attempt to export without an account: %@ - %@
CoreData: Multiple records returned for object even though we didn't ask for relationships: %@
CoreData: Unsupported resultType: %lu, %@
CoreData: No records returned from the serializer for object: %@
CoreData: No metadata or error for share URL: %@
CoreData: Some shareURLs failed to return metadata...
CoreData: No error or share for accepted share metadata: %@
CoreData: Some shares partially failed...
CoreData: handleErrorInResult illegally passed nil instead of a result
CoreData: handleErrorInResult passed a sucessful result (%@) with an illegal error object (%@)
CoreData: handleErrorInResult illegally passed a failed result (%@) with nil instead of an error on a failure condition
CoreData: recoverFromError illegally passed nil instead of an error on a failure condition
CoreData: Invalid recursion detected, this method should never have been passed a partial error: %@
CoreData: NSCloudKitMirroringDelegate recieved NSURLErrorDomain:NSURLErrorBadURL and probably shouldn't have.
CoreData: NSCloudKitMirroringDelegate recieved NSURLErrorDomain:NSURLErrorUnsupportedURL and probably shouldn't have.
CoreData: NSCloudKitMirroringDelegate recieved NSURLErrorDomain:NSURLErrorBadServerResponse and probably shouldn't have.
CoreData: NSCloudKitMirroringDelegate recieved NSURLErrorDomain:NSURLErrorCannotDecodeRawData and probably shouldn't have.
CoreData: NSCloudKitMirroringDelegate recieved NSURLErrorDomain:NSURLErrorCannotDecodeContentData and probably shouldn't have.
CoreData: NSCloudKitMirroringDelegate recieved NSURLErrorDomain:NSURLErrorCannotParseResponse and probably shouldn't have.
CoreData: NSCloudKitMirroringDelegate recieved NSURLErrorDomain:NSURLErrorAppTransportSecurityRequiresSecureConnection and probably shouldn't have.
CoreData: NSCloudKitMirroringDelegate recieved NSURLErrorDomain:NSURLErrorServerCertificateHasBadDate and probably shouldn't have.
CoreData: NSCloudKitMirroringDelegate recieved NSURLErrorDomain:NSURLErrorServerCertificateUntrusted and probably shouldn't have.
CoreData: NSCloudKitMirroringDelegate recieved NSURLErrorDomain:NSURLErrorServerCertificateHasUnknownRoot and probably shouldn't have.
CoreData: NSCloudKitMirroringDelegate recieved NSURLErrorDomain:NSURLErrorServerCertificateNotYetValid and probably shouldn't have.
CoreData: NSCloudKitMirroringDelegate recieved NSURLErrorDomain:NSURLErrorClientCertificateRejected and probably shouldn't have.
CoreData: NSCloudKitMirroringDelegate recieved NSURLErrorDomain:NSURLErrorClientCertificateRequired and probably shouldn't have.
CoreData: NSCloudKitMirroringDelegate recieved NSURLErrorDomain:NSURLErrorRequestBodyStreamExhausted and probably shouldn't have.
CoreData: NSCloudKitMirroringDelegate was handed a scary NRULErrorDomain error (of some code that's not already in the switch) that it probably shouldn't have been: %@
CoreData: Got server rejected request as part of a partial error for a CKRecord: %@ - %@
CoreData: %@: Found unknown itemID (%@) as part of a partial failure: %@
CoreData: Failed to get a reset sync reason for error even though we're posting a notification for it: %@
CoreData: Failed to fetch database metadata during automatic import check: %@
CoreData: Unsupported database scope in date threshold calculation: %ld
CoreData: Can't handle automated requests of type '%@' yet.
CoreData: Failed to execute mirroring request for automated import: %@
CoreData: Failed to execute mirroring request for automated export: %@
CoreData: Expected a non-nil error to schedule a setup activity from.
CoreData: Failed to fetch zone metadata during marking zones needing recovery from Manatee identity loss: %@
CoreData: Can't generate string for unknown reset sync reason: %lu
CoreData: Unhandled exception in rowCacheForGeneration %@
CoreData: Failed to save import operation: %@
CoreData: %@ - Exception thrown during import: %@
CoreData: CloudKit Import: Failed to find entity for unknown item recordID: %@ - %@
CoreData: Importer didn't obey operation memory threshold, finished operation with more than double the threshold worth of work to do (%@ bytes): %@
CoreData: Incremental import left uncommitted changes in the managed object context: %@
CoreData: Should tear down here and stop subsequent attempts to import from happening.
CoreData: %@ - Exception thrown during incremental import: %@
CoreData: CloudKit Import: Failed to handle item error for unknown itemID type: %@ - %@
CoreData: Unknown result type: %lu
CoreData: Unhandled persistent history change type: %@
CoreData: Fetched dirty zone that didn't need a share update or delete: %@
CoreData: Record name does not match recordID, even though our metadata linked this row with '%@': %@
CoreData: Record name appears to point to two different objects: %@ / %@
CoreData: I don't know how to handle skewed shares yet.
CoreData: Objects appear to be from different entities:
Store: %@
Other Store: %@
CoreData: Unknown value type '%@' for attribute: %@
CoreData: Not sure what to do with undefined attributes
CoreData: Unknown attribute type: %lu
CoreData: Found mirrored relationship for ignored relationship: %@
CoreData: Found mirrored relationship not marked uploaded, but this method is supposed to make sure store contents are equal, so shouldn't it be?
CoreData: Found mirrored relationship that's marked deleted but the objects are linked.
CoreData: Found pending mirrored relationship for linked objects (%@).
CoreData: Duplicate operations for identifier: %@
CoreData: Failed to acquire permanent objectIDs during schema generation: %@
CoreData: Unsupported attribute type
CoreData: Attempt to initialize PFCloudKitHistoryAnalyzerContext with options that aren't PFCloudKitHistoryAnalyzerOptions: %@
CoreData: History parsing corruption detected. An existing analyzer state was fetched from the database for '%@' but it's corresponding in-memory copy is no longer present in the in-memory cache.
CoreData: Found more than one mirrored relationship matching a many to many: %@
CoreData: Attempted to update a mirrored relationship with a non-mirrored-relationship record: %@
CoreData: Unexpected exception thrown during metadata migration: %@
CoreData: Exception caught during execution of migration statement for cloudkit metadata tables %@ with userInfo %@
CoreData: Exception caught during execution of migration statement for cloudkit metadata tables %@
CoreData: Exception caught during cleanup of cloudkit metadata primary keys %@ with userInfo %@
CoreData: Exception caught during cleanup of cloudkit metadata primary keys %@
CoreData: Failed to refresh zone for assignment during corrupt zone cleanup: %@
CoreData: Unable to find attribute to migrate to '%@' from '%@' on entity: %@
CoreData: Found mirrored relationships without a recordID.
CoreData: Trying to return failure without an error set.
CoreData: Couldn't find sql for table '%@', did you check if it exists first?
CoreData: Couldn't find NSSQLiteIndexStatistics entity
CoreData: unexpected failure updating index statistics: %s
CoreData: Exception reading data for file backed future.  %@
CoreData: Attempt to create context without a store identifier.
CoreData: Called after the store is dead. This method needs to be called inside a performBlock on the store monitor: %@
CoreData: _executeObjectFaultRequest passed a nil objectID
Fault
%@ - %@
RelationshipFault
CoreData: Batch insert failed to generate a post transaction query generation with error %d
CoreData: Batch delete failed to generate a post transaction query generation with error %d
CoreData: Unhandled exception from executeBatchDeleteRequest %@
CoreData: Batch update failed to generate a post transaction query generation with error %d
CoreData: Persistent history request failed to adopt a query generation with error %d
CoreData: Unhandled exception encountered during change request: %@ with userInfo %@
CoreData: Unsupported unique attribute type: %@
CoreData: Save changes failed to generate a post transaction query generation with error %d
### Failed to Soft Link: /System/Library/Frameworks/CloudKit.framework/CloudKit
CoreData: initWithRequest passed an error (%@) on a succes condition
CoreData: initWithRequest illegally passed nil instead of an error on a failure condition
CoreData: Unexpected batch operation: %@
CoreData: Expected an attribute for the entity
CoreData: History transaction processing failed but didn't return an error
CoreData: No notification handler block specified. Dropping: %@
CoreData: NSCloudKitMirroringDelegateOptions.initializeSchema is no longer supported and will be removed in a future release. Please use -[NSPersistentCloudKitContainer initializeSchemaWithOptions:error:] or NSCloudKitMirroringInitializeSchemaRequest instead.
_NSNoChangeToken
NSCoding
NSSecureCoding
_NSXPCStoreObjectIDArrayConstantValueExpression
XPCStoreSupport
NSBatchInsertRequestEncodingToken
NSBatchUpdateRequestEncodingToken
NSBatchDeleteRequestEncodingToken
NSPersistentHistoryChangeRequestToken
_NSXPCStoreUtilities
NSXPCStore
NSCoreDataKeyedArchivingDelegate
Internal
NSSQLModelProvider
NSPersistentHistoryTransaction
NSCopying
_NSPersistentHistoryTransaction
NSXPCStoreManagedObjectArchivingToken
NSSQLBlockRequestContext
NSSQLBatchDeleteRequestContext
NSPersistentHistoryChangeRequest
NSPersistentHistoryResult
PFCloudKitModelValidator
NSXPCServerProtocol
NSObject
NSXPCStoreServer
NSXPCListenerDelegate
InternalMethods
_PFResultArray
_PFResultObject
_PFResultObjectKeyEnumerator
NSXPCStoreConnectionInfo
NSXPCStoreServerConnectionContext
NSXPCStoreServerPerConnectionCache
NSXPCStoreServerRequestHandlingPolicy
NSXPCRow
NSCoreDataXPCMessage
PFHistoryAnalyzerOptions
NSXPCStoreConnection
PFCloudKitMetadataModel
_PFAncillaryModelFactory
PFCloudKitMetadataValueTransformer
NSCKRecordMetadata
NSCKRecordMetadataReceiptArchive
NSSQLDerivedAttributeSQLGenerator
PFCloudKitImportZoneContext
_PFCKInsertedMetadataLink
_NSCoreDataException
_NSCoreDataOptimisticLockingException
_NSCoreDataConstraintViolationException
NSSQLBatchInsertRequestContext
_NSCoreDataSQLPredicateCategories
_NSFaultingMutableArray
_NSFaultingMutableSet
_NSFaultingMutableSetMutationMethods
_NSMappingModelBuilder
NSSQLBindIntarray
NSCachedFetchRequestThunk
NSCachedFetchRequestInfo
_NSMemoryStorePredicateRemapper
NSPredicateVisitor
_NSChildContextPredicateRemapper
_NSPersistentHistoryPredicateRemapper
_NSXPCStorePredicateRemapper
_PFSpawn
_NSNotifyingWrapperMutableSet
NSSQLStoreRequestContext
PFCloudKitCKQueryBackedImportWorkItem
_CoreData_Extensions
_NSPersistenceUtilities
_NSProxyWrapperMutableSet
_NSSQLGenerator
_PFArray
NSMutableCopying
PFObjectIDCollection
_PFBatchFaultingArray
_PFBatchHistoryFaultingArray
_PFMutableProxyArray
_PFEncodedArray
_PFFetchedResultOrderedSetWrapper
_PFCachedNumber
_PFContextMapTable
_PFTask
NSPrivateCoreDataClassForFindingBundle
_PFRoutines
_PFWeakReference
_PFLock
NSLocking
_PFMutex
_PFGarbageManager
_PFAutoreleasePoolThunk
_PFAbstractString
_PFEncodedString
_PFResultString
_PFResultASCIIString
_PFResultUniString
NSAtomicStore
_NSInternalMethods
NSPersistentStoreResult
NSUnknownRequestTypeResult
NSPersistentStoreAsynchronousResult
NSAsynchronousFetchResult
NSPersistentCloudKitContainerEventResult
NSAtomicStoreCacheNode
NSAttributeDescription
CoreDataSPI
NSAttributeStoreMapping
_NSCoreManagedObjectID
NSBasicObjectID
_NSScalarObjectID
NSScalarObjectID64
NSScalarObjectID48
_NSCoreDataTaggedObjectID
_NSCoreDataTaggedObjectIDFactory
NSCloudKitMirroringDelegateSerializationRequestResult
NSBinaryObjectStore
NSBinaryObjectStoreFile
NSDictionaryMapNode
NSDictionaryStoreMap
NSEntityDescription
NSFastEnumeration
_NSEntityDescriptionPrivateMethods
NSEntityMapping
NSEntityMigrationPolicy
NSEntityStoreMapping
NSExpressionDescription
NSPersistentCacheRow
NSFaultHandler
NSPersistentHistoryChange
_NSPersistentHistoryChange
NSSQLRTreeIndex
NSFetchedPropertyDescription
NSXPCStoreMessageContext
NSFetchedResultSupport
NSFetchRequestResult
NSFetchRequest
_NSCoreDataSPI
CDDCloudKitScheduleActivityMessage
NSCKEvent
NSXPCStoreNotificationObserver
NSFetchRequestExpression
NSJoin
NSKnownKeysMappingStrategy1
NSKnownKeysMappingStrategy2
NSKnownKeysDictionary1
_NSKnownKeysEnumerator
NSKnownKeysDictionary2
NSKnownKeysMappingStrategy
NSKnownKeysDictionary
_NSOrderedSetDiff
_NSOrderedSetDiffDelete
_NSOrderedSetDiffChange
_NSOrderedSetDiffInsert
_NSOrderedSetDiffMove
NSManagedObject
_PhotosOrderKeyUpdateSupport
PFCloudKitOperationBatch
_PFDynamicAccessorsAndPropertySupport
_NSManagedObject_st
NSManagedObjectContext
_NSInternalAdditions
_NSInternalChangeProcessing
_NSInternalNotificationHandling
_PFManagedObjectReferenceQueue
_NestedContextSupport
_PFTempNestedSnapshot
_InternalOverlaySupport_
NSQueryGenerationToken
_NSQueryGenerationToken
_NSXPCQueryGenerationToken
NSManagedObjectID
NSManagedObjectModel
NSSQLUpdateColumnsIntermediate
NSManagedObjectModelBundle
PFCloudKitStoreComparisonCache
PFCloudKitStoreComparisonCacheStoreCache
NSMappedObjectStore
NSPersistentCloudKitContainerEvent
NSFetchIndexDescription
NSMappingModel
PFCloudKitImporterWorkItem
NSMemoryObjectStore
NSSQLitePrefetchRequestCache
NSMemoryStoreEqualityPredicateOperator
NSMemoryStoreInPredicateOperator
NSSQLBoundedByIntermediate
NSMergeConflict
NSConstraintConflict
NSMergePolicy
_PFModelUtilities
NSMigrationContext
NSMigrationManager
NSSQLConnectionManager
NSSQLDefaultConnectionManager
NSPersistentStore
NSBatchInsertRequest
CoreDataIPI
NSBatchInsertResult
NSSQLiteStatementCache
NSPersistentStoreCache
NSPersistentStoreCoordinator
_NSPersistentStoreCoordinatorPrivateMethods
QueryGenerations
Triggers
PersistentHistory
PersistentHistoryInternal
Platform
DeferredLightweightMigration
DelegateInternal
PFHistoryAnalyzerDefaultObjectState
PFHistoryAnalyzerObjectState
NSSQLAttributeTrigger
NSSQLAttributeExtension
NSBatchUpdateRequest
NSPredicatedStoreRequest
NSBatchUpdateResult
NSPersistentStoreMap
NSCKRecordZoneMoveReceipt
NSPersistentCloudKitContainer
NSCloudKitMirroringDelegateProgressProvider
NSPersistentCloudKitContainerAdditions
_PFRequestExecutor
_PFObjectCKRecordZoneLink
NSPropertyDescription
_NSPropertyDescriptionPrivateMethods
_PFIndexCacheOffset
NSFetchedResultsController
PrivateMethods
NSPropertyMapping
NSPropertyStoreMapping
NSPropertyTransform
NSRelationshipDescription
NSRelationshipStoreMapping
PFCloudKitHistoryAnalyzerOptions
NSSaveChangesRequest
NSSaveChangesRequest_Internal
NSSQLAliasGenerator
CDDCloudKitServerProxy
CDDCloudKitServer
_PFCoreDataCloudKitServer
NSSQLAttribute
NSSQLBindVariable
NSCloudKitMirroringFetchRecordsRequest
NSCloudKitMirroringFetchRecordsResult
NSCKRecordZoneMetadata
NSSQLRTreeIndexQueryIntermediate
NSSQLColumn
NSSQLCompoundWhereIntermediate
CDDCloudKitMetadataModel
NSSQLConstantValueIntermediate
PFCloudKitHistoryAnalyzer
NSSQLBatchUpdateRequestContext
NSSQLCore
NSFilePresenter
_NSSQLCoreConnectionObserver
PFCloudKitImporter
NSSQLEntity
porting
PFCloudKitErrorLog
PFCloudKitErrorLogEntry
CDDCloudKitMessage
NSSQLEntityKey
NSSQLExpressionIntermediate
NSSQLFetchCountIntermediate
PFCloudKitSetupAssistant
CDDCloudKitClient
NSSQLFetchIntermediate
NSSQLForeignEntityKey
NSSQLForeignKey
NSSQLiteIndexStatisticsRequest
NSSQLiteIndexStatisticsResult
PFCloudKitImporterZonePurgedWorkItem
CDDCloudKitResponse
NSSQLForeignKeyIntermediate
NSCloudKitMirroringRequestOptions
NSSQLBinaryIndex
NSSQLFunctionExpressionIntermediate
NSSQLGenerator
PFCloudKitArchivingUtilities
NSSQLIntermediate
PFCloudKitMetadataMigrationContext
_PFCoreDataDaemonExtension
CDDCloudKitServerConfiguration
_NSPersistentHistoryToken
NSPersistentHistoryToken
CDDCloudKitRegistrationMessage
NSSQLiteAdapter
_PFSQLiteSnapshotWrapper
NSSQLiteConnection
NSSQLJoinIntermediate
NSSQLKeypathExpressionIntermediate
NSSQLLimitIntermediate
NSSQLManyToMany
PFCloudKitImporterFetchRecordsWorkItem
PFCloudKitContainerProvider
NSPersistentCloudKitContainerEventRequest
NSSQLModel
NSSQLOffsetIntermediate
NSSQLUbiquitizedStoreConnectionManager
NSCloudKitMirroringRequestManager
NSCKHistoryAnalyzerState
NSConstraintValidator
NSSQLOptLockKey
NSCloudKitMirroringDelegateResetRequest
PFCloudKitMetadataPurger
NSSQLOrderIntermediate
_PFFetchPlanHeader
NSSQLPredicateAnalyser
NSCKMetadataEntry
NSCloudKitMirroringRequest
NSCloudKitMirroringExportRequest
NSCloudKitMirroringImportRequest
NSCloudKitMirroringResetZoneRequest
NSCloudKitMirroringResetMetadataRequest
NSCloudKitMirroringInitializeSchemaRequest
NSConstraintCacheKey
NSConstraintCache
NSSQLPrimaryKey
NSSQLProperty
NSSQLReadOnlySelectIntermediate
NSSQLRelationship
NSSQLRow
NSSQLObjectFaultRequestContext
NSSQLRowCache
NSSQLSelectIntermediate
NSSQLSimpleWhereIntermediate
NSSQLiteStatement
PFCloudKitExporter
_NSCoreDataInternal
NSSQLStoreMappingGenerator
NSSQLSubqueryExpressionIntermediatePredicateVisitor
NSSQLSubqueryExpressionIntermediate
NSSQLToMany
_PFModelMap
NSSQLToOne
NSSQLWhereIntermediate
NSStoreMapNode
NSStoreMapping
NSStoreMappingGenerator
NSStoreMigrationPolicy
_NS128bitWrapper
NSTemporaryObjectID
_NSTemporaryObjectID2
NSValidationErrorLocalizationPolicy
NSMergedPolicyLocalizationPolicy
NSManagedImmutableObject
NSCKDatabaseMetadata
_NSDefaultSectionInfo
NSFetchedResultsSectionInfo
NSSQLTernaryExpressionIntermediate
NSSQLiteInPlaceMigrationManager
PFCloudKitMetricsClient
PFCloudKitBaseMetric
PFCloudKitMetric
PFCloudKitUnhandledPartialErrorMetric
PFCloudKitFatalErrorMetric
PFCloudKitSizeMetric
PFCloudKitExportedRecordBytesMetric
PFCloudKitImportedRecordBytesMetric
PFCloudKitFetchedRecordBytesMetric
PFCloudKitFetchedAssetBytesMetric
_NSSQLEntityMigrationDescription
NSSQLUpdateIntermediate
NSSQLiteIntarrayTable
_NSSQLTableMigrationDescription
PFMirroredRelationship
PFMirroredManyToManyRelationship
PFMirroredManyToManyRelationshipV2
PFMirroredOneToManyRelationship
PFCloudKitImporterOptions
_NSSQLiteStoreMigrator
PFCloudKitSerializer
NSSQLGroupByIntermediate
NSSQLHavingIntermediate
NSPersistentStoreRequest
NSAsynchronousFetchRequest
_NSPropertyDescriptionProxy
_NSPropertyDescriptionProxy2
NSDerivedAttributeDescription
_PFVMData
_PFEvanescentData
_PFEncodedData
_PFResultData
_PFExternalReferenceData
_NSFaultingMutableOrderedSet
NSSQLForeignOrderKey
NSCloudKitMirroringAcceptShareInvitationsRequest
NSCloudKitMirroringAcceptShareInvitationsResult
PFCloudKitOptionsValidator
PFCloudKitImporterZoneDeletedWorkItem
_CDSnapshot
NSSQLFetchDictionaryCountIntermediate
PFCloudKitImportDatabaseContext
NSIncrementalStore
NSIncrementalStoreNode
_NSFaultingMutableOrderedSetMutationMethods
PFCloudKitStoreMonitorProvider
_NSNotifyingWrapperMutableOrderedSet
_NSProxyWrapperMutableOrderedSet
NSSQLLocationAttributeRTreeExtension
NSXPCStoreConnectionManager
CDDCloudKitScheduledActivity
NSPersistentStoreDescription
NSSQLKeypathTriggerAttributeExtension
PFCloudKitMetadataCache
NSSQLIndexIntermediate
PFCloudKitExporterOptions
NSSQLEntity_DerivedAttributesExtension
NSCKImportPendingRelationship
NSPersistentContainer
PFCloudKitImporterZoneChangedWorkItem
NSCloudKitMirroringDelegate
PFCloudKitExporterDelegate
PFApplicationStateMonitorDelegate
NSPersistentStoreMirroringDelegate
NSCloudKitMirroringDelegateExtensions
NSCloudKitMirroringDelegateWorkBlockContext
NSCKExportedObject
NSGenerationalRowCache
NSSQLIndex
PFCloudKitImportRecordsWorkItem
PFCloudKitSerializerDelegate
NSSQLCorrelationTableUpdateTracker
NSCloudKitMirroringDelegateSerializationRequest
__CLI
NSSQLPersistentHistoryChangeRequestContext
_PFPersistentHistoryModel
_PFPersistentHistoryFetchModel
NSSQLCoreDispatchManager
NSSQLCountRequestContext
NSSQLVariableExpressionIntermediate
NSSQLAttributeExtensionFactory
NSSQLSavePlan
PFApplicationStateMonitor
PFCloudKitExportContext
NSPersistentCloudKitContainerOptions
PFCloudKitStoreComparer
NSCKImportOperation
NSBatchDeleteRequest
NSBatchDeleteResult
NSSQLGenerateObjectIDRequestContext
NSFetchIndexElementDescription
NSXPCSaveRequestContext
NSSQLRelationshipFaultRequestContext
_PFFreeMapEntry
PFCloudKitSchemaGenerator
NSCKRecordZoneQuery
NSCKRecordZoneQueryPredicateTransformer
NSCKRecordZoneQueryCursorTransformer
PFCloudKitHistoryAnalyzerContext
NSSQLStatementIntermediate
NSCKMirroredRelationship
NSSQLFetchRequestContext
NSSQLXPCFetchRequestContext
NSSQLObjectIDSetFetchRequestContext
NSSQLSaveChangesRequestContext
PFCloudKitMetadataModelMigrator
NSSQLiteIndexStatistics
NSSQLiteIndexTrackingModel
FileBackedFutures
_NSDataFileBackedFuture
_NSFileBackedFuture
_NSCloudKitDataFileBackedFuture
PFCloudKitStoreMonitor
PFCloudKitLogging
NSCloudKitMirroringResult
CDDCloudKitRegisteredClient
NSSQLBatchOperationRequestContext
PFHistoryAnalyzer
NSCloudKitMirroringExportProgressRequest
NSCloudKitMirroringExportProgressResult
NSCloudKitMirroringDelegateSetupRequestOptions
NSCloudKitMirroringDelegateSetupRequest
NSCloudKitMirroringDelegateSetupResult
PFHistoryAnalyzerContext
PFCloudKitThrottledNotificationObserver
NSCKExportMetadata
NSCloudKitMirroringDelegatePreJazzkonMetadata
_PFChangeInfo
NSCloudKitMirroringDelegateOptions
NSCKExportOperation
NSCachingFetchRequest
init
initialize
allocWithZone:
supportsSecureCoding
encodeWithCoder:
initWithCoder:
TB,R
retain
retainCount
release
_isDeallocating
_tryRetain
autorelease
description
isEqual:
hash
dealloc
allowsKeyedCoding
raise:format:
isNSArray__
isNSSet__
encodeObject:forKey:
allowedClasses
_constantValueClassesForSecureCoding
setByAddingObject:
count
mutableCopy
unionSet:
decodeObjectOfClasses:forKey:
delegate
persistentStoreCoordinator
initWithObject:
_constantValue
null
initWithCapacity:
countByEnumeratingWithState:objects:count:
isNSString__
addObject:
_propertyType
name
expressionResultType
numberWithInteger:
expression
objectAtIndex:
setName:
unsignedIntegerValue
setExpressionResultType:
setExpression:
initForReadingFromData:error:
setDelegate:
allowableClassesForClientWithContext:
setByAddingObjectsFromSet:
fetchRequestWithEntityName:
_setFlagsFromXPCEncoding:
setSortDescriptors:
setPredicate:
setHavingPredicate:
setRelationshipKeyPathsForPrefetching:
setFetchOffset:
unsignedLongValue
setFetchLimit:
setFetchBatchSize:
_newDenormalizedFetchProperties:
setPropertiesToFetch:
setPropertiesToGroupBy:
entityName
_XPCEncodedFlags
sortDescriptors
predicate
substitutionVariables
predicateWithSubstitutionVariables:
defaultInstance
createPredicateForFetchFromPredicate:
havingPredicate
relationshipKeyPathsForPrefetching
fetchOffset
fetchLimit
fetchBatchSize
resultType
propertiesToFetch
propertiesToGroupBy
drain
encodeForXPC
decodeFromXPCArchive:withContext:andPolicy:
copy
objectsToInsert
_secureOperation
decodeObjectOfClass:forKey:
decodeIntegerForKey:
decodeBoolForKey:
encodeInteger:forKey:
encodeBool:forKey:
initForRequest:
inputStream
secure
_entityName
_objectsToInsert
_inputStream
_resultType
_secure
T@"NSString",R,&,N,V_entityName
T@"NSArray",R,&,N,V_objectsToInsert
T@"NSInputStream",R,&,N,V_inputStream
TQ,R,N,V_resultType
TB,R,N,V_secure
initRequiringSecureCoding:
finishEncoding
encodedData
setWithObject:
initWithEntityName:objects:
setResultType:
_setSecureOperation:
decodeFromXPCArchive:withContext:withPolicy:
propertiesToUpdate
allValues
constantValue
includesSubentities
setWithObjects:
objectForKey:
setObject:forKey:
columnsToUpdate
nullValueCount
includeSubEntities
_predicate
_columnsToUpdate
_nullValueCount
_includeSubEntities
T@"NSPredicate",R,&,N,V_predicate
T@"NSDictionary",R,&,N,V_columnsToUpdate
Tq,R,N,V_resultType
Tq,R,N,V_nullValueCount
TB,R,N,V_includeSubEntities
initWithEntityName:
setPropertiesToUpdate:
setIncludesSubentities:
fetchRequest
fetchData
_fetchData
T@"NSData",R,&,N,V_fetchData
initWithFetchRequest:
token
storeTokens
date
isDelete
isFetchTransactionForToken
percentageOfDB
decodeInt64ForKey:
encodeInt64:forKey:
delete
transactionFromToken
_token
_date
_delete
_transactionFromToken
_fetchLimit
_fetchOffset
_fetchBatchSize
_percentageOfDB
T@"NSDictionary",R,&,N,V_token
T@"NSDate",R,&,N,V_date
TB,R,N,V_delete
TB,R,N,V_transactionFromToken
TQ,R,N,V_fetchLimit
TQ,R,N,V_fetchOffset
TQ,R,N,V_fetchBatchSize
TQ,R,N,V_percentageOfDB
deleteHistoryBeforeToken:whenHistoryPercentageOfStoreIsGreaterThan:
deleteHistoryBeforeToken:
fetchHistoryAfterToken:
fetchHistoryTransactionForToken:
deleteHistoryBeforeDate:whenHistoryPercentageOfStoreIsGreaterThan:
deleteHistoryBeforeDate:
fetchHistoryAfterDate:
identifier
currentQueryGenerationToken
unpinnedQueryGenerationToken
stringWithFormat:
initWithObjects:
_compoundPredicateClassesForSecureCoding
_extendedExpressionClassesForSecureCoding
_operatorClassesForSecureCoding
classesForArchiving
addObjectsFromArray:
initWithSet:
setValue:forKey:
reason
userInfo
valueForKey:
callStackSymbols
initWithObjectsAndKeys:
bytes
length
dictionaryWithObject:forKey:
errorWithDomain:code:userInfo:
entity
arrayWithCapacity:
isTransient
_isRelationship
initForKeys:
objectAtIndexedSubscript:
initWithSearchStrategy:
setValues:
initWithObjects:count:store:metadata:
sqlCore
configurationName
fileURLWithPath:
initWithPersistentStoreCoordinator:configurationName:URL:options:
model
adapter
_disablePersistentStoreResultCaching
objectIDFactoryForSQLEntity:
setForeignEntityKeySlot:entityKey:
instanceMethodForSelector:
setForeignOrderKeySlot:orderKey:
setForeignKeySlot:int64:
setOptLock:
entityForID:
allocateBatch:count:
newBatchRowAllocation:count:forSQLEntity:withOwnedObjectIDs:andTimestamp:
setObjectID:
initWithPK64:
initWithSQLEntity:ownedObjectID:andTimestamp:
toOneRelationship
destinationEntity
initWithString:
URLWithString:
propertyDescription
_isFileBackedFuture
dataWithBytes:length:
fileBackedFuturesDirectory
fileURLWithPath:isDirectory:
initWithStoreMetadata:directory:
initWithUUIDBytes:
_setValues:retain:
knownKeyValuesPointer
initWithObjects:count:andFlags:andContext:
objectID
URIRepresentation
initWithURI:
timeIntervalSinceReferenceDate
dateWithTimeIntervalSinceReferenceDate:
nostoresQueryGenerationToken
archiver:willEncodeObject:
replacementObjectForXPCConnection:encoder:object:
_persistentStoreCoordinator
managedObjectIDForURIRepresentation:
exceptionWithName:reason:userInfo:
boolValue
managedObjectModel
isEqualToString:
entities
entitiesForConfiguration:
isToMany
isOrdered
initWithStore:
initWithManagedObjectModel:configurationName:
initForStore:
isNSDictionary__
isNSNumber__
options
integerValue
processInfo
processName
initForMessage:store:
_isOnExtendedTimeout
debugDefault
code
_doCleanupForXPCStore:context:
domain
remoteStoreChangedNotificationName
initForObservationWithName:store:
load:
loadMetadata:
_updatedMetadataWithSeed:includeVersioning:
_setMetadataDirty:
_setMetadata:includeVersioning:
propertyListWithData:options:format:error:
entityVersionHashesByName
performBlockAndWait:
performBlock:
setEntity:
lastObject
_queryGenerationToken__
allocationType
setAllocationType:
bufferedAllocationsOverride
arrayWithObject:
arrayWithObjects:
getObjects:range:
initWithObjects:count:andFlags:
initWithPFArray:andRequest:andContext:
version
managedObjectContext
numberWithBool:
metadata
initForStore:request:metadata:forceInsertsToUpdates:context:
insertedObjects
sourceObject
initWithResultType:andObject:
_resolveEntityWithContext:
initWithResultType:andResult:
requestType
_propertyRangesByType
initWithObjectID:withValues:version:
initWithNode:
_isEnabled
objectWithID:
stalenessInterval
array
dictionaryWithObjectsAndKeys:
firstObject
objectRegisteredForID:
newValuesForObjectWithID:withContext:error:
valueForPropertyDescription:
dictionary
allKeys
indexForKey:
_allowCoreDataFutures
willRemoveFromPersistentStoreCoordinator:
supportsConcurrentRequestHandling
type
setURL:
setIdentifier:
_rawMetadata__
setMetadata:
supportsGenerationalQuerying
currentQueryGeneration
_hasActiveGenerations
freeQueryGenerationWithIdentifier:
reopenQueryGenerationWithIdentifier:error:
managedObjectContextDidRegisterObjectsWithIDs:generation:
managedObjectContextDidUnregisterObjectsWithIDs:generation:
executeRequest:withContext:error:
newValueForRelationship:forObjectWithID:withContext:error:
obtainPermanentIDsForObjects:error:
newForeignKeyID:entity:
_metadata
_cache
_fileBackedFuturesDirectory
_connectionManager
_model
_core
_sanityCheckToken
_observer
_remoteStoreChangedNotificationName
_stateLock
T@"NSString",R,C,V_remoteStoreChangedNotificationName
ancillaryModels
ancillarySQLModels
initWithArray:
inverseRelationship
setWithArray:
initWithSource:destinations:forRelationship:inContext:
minusSet:
primitiveValueForKey:
isFault
removeObject:
initWithObjectID:fromSQLRow:
objectIDFactoryForEntity:
_storeInfo1
_setStoreInfo1:
currentChangeToken
_objectIDClass
_storeInfoForEntityDescription:
_newObjectIDForEntityDescription:pk:
connectionManager
setDebugDefault:
entityDescription
entityDescriptionWithContext:
ancillaryModelNamespace
storeID
transactionNumber
timestamp
bundleID
processID
contextName
author
changes
distantFuture
notificationWithName:object:
copyWithZone:
T@"NSEntityDescription",R
T@"NSFetchRequest",R
initialQueryGenerationToken
postQueryGenerationToken
objectIDNotification
T@"NSDate",R,C
T@"NSArray",R,C
Tq,R
T@"NSString",R,C
T@"NSPersistentHistoryToken",R
_referenceData64
doubleValue
persistentStore
longLongValue
numberWithLongLong:
numberWithDouble:
isNSData__
fetchHistoryAfterTransaction:
result
notificationWithName:object:userInfo:
changedObjectID
changeType
dictionaryWithCapacity:
dictionaryWithDictionary:
initWithDictionary:andObjectID:
_backingObjectID
_rowIdentifier
_timestamp
_changes
_storeID
_bundleID
_processID
_contextName
_author
_queryGeneration
_coordinator
requiresSecureCoding
isMemberOfClass:
_managedObjectReferenceURI
initWithRequest:context:sqlCore:
initWithBlock:context:sqlCore:
isWritingRequest
executeRequestCore:
_workBlock
persistentStoreRequest
request
setIncludesPropertyValues:
setShouldRefreshRefetchedObjects:
setIncludesPendingChanges:
fetchStatement
setResult:
executePrologue
_fetchRequestForObjectsToDelete
_deleteStatements
_deletedObjectIDs
_fetchContext
_externalDataReferenceTriggerStatements
_externalDataReferencesToDelete
_fileBackedFuturesToDelete
T@"NSBatchDeleteRequest",R,N
initWithFormat:arguments:
UTF8String
initWithDate:
initWithToken:
initWithTransactionToken:
initWithDate:delete:
initWithToken:delete:
initWithDate:delete:percentageOfDB:
initWithToken:delete:percentageOfDB:
initWithTransactionID:delete:transactionOnly:percentageOfDB:
transactionIDs
propertiesToFetchForEntity:includeTransactionStrings:
arrayWithObjects:count:
expressionForEvaluatedObject
expressionForKeyPath:
attributeKeys
initWithUnsignedInteger:
predicateWithValue:
initWithStoreIdentifier:
andPredicateWithSubpredicates:
predicateWithFormat:
fetchHistoryWithFetchRequest:
deleteHistoryBeforeTransaction:
initWithTransactionIDs:
propertiesToFetchForEntity:
entityNameToFetch
isPercentageDelete
useQueryGenerationToken
setUseQueryGenerationToken:
setFetchRequest:
predicateForStoreIdentifier:
debugDescription
_transactionIDs
_transactionNumber
_persistentHistoryChangeRequestDescriptionFlags
_additionalPrivateIvars
Tq,V_resultType
T@"NSPersistentHistoryToken",R,V_token
T@"NSFetchRequest",&,N
dictionaryWithObjects:forKeys:count:
initWithInteger:
initWithObjects:forKeys:
initWithKey:ascending:
sortedArrayUsingDescriptors:
initWithSubresults:
_aggregatedResult
T@,R,V_aggregatedResult
Tq,R,V_resultType
initWithManagedObjectModel:configuration:mirroringDelegateOptions:
attributesByName
attributeType
valueTransformerName
valueTransformerForName:
allowsReverseTransformation
stringForAttributeType:
isOptional
allowsCloudEncryption
useDeviceToDeviceEncryption
preservesValueInHistoryOnDeletion
defaultValue
enumerateKeysAndObjectsUsingBlock:
relationshipsByName
containsObject:
deleteRule
uniquenessConstraints
stringWithUTF8String:
appendString:
enumerateObjectsUsingBlock:
componentsSeparatedByString:
initWithFormat:
initWithZoneName:ownerName:
size
localizedCaseInsensitiveCompare:
sortUsingSelector:
componentsJoinedByString:
propertiesByName
_configurationName
_skipValueTransformerValidation
_validateLegacyMetadataAttributes
_options
arrayWithArray:
arrayByAddingObject:
initWithDictionary:
removeObjectsForKeys:
isEqualToDictionary:
initWithMachServiceName:
initWithServiceName:
serviceListener
initWithOptions:
initWithKeyPointerFunctions:valuePointerFunctions:capacity:
initWithContentsOfURL:
initForStoreWithURL:usingModel:options:policy:
resume
invalidate
intValue
willPerformRecoveryForError:fromContext:
performRecoveryForError:fromContext:
identifierForConnection:
initWithManagedObjectModel:
addPersistentStoreWithType:configuration:URL:options:error:
removeObjectForKey:
setUserInfo:
initWithCoordinator:
setInterruptionHandler:
setInvalidationHandler:
auditToken
coordinator
initForToken:entitlementNames:cache:
setExportedObject:
class
self
performSelector:
performSelector:withObject:
performSelector:withObject:withObject:
isProxy
isKindOfClass:
conformsToProtocol:
respondsToSelector:
zone
superclass
TQ,R
T#,R
handleRequest:reply:
interfaceWithProtocol:
setExportedInterface:
currentConnection
initWithConnectionInfo:
shouldAcceptConnectionsFromClientWithContext:
initWithConcurrencyType:
setPersistentStoreCoordinator:
_setDelegate:
entitlements
setMergePolicy:
setUndoManager:
setManagedObjectContext:
transactionAuthor
setTransactionAuthor:
persistentStores
reset
listener:shouldAcceptNewConnection:
initForStoreWithURL:usingModelAtURL:options:policy:
startListening
errorHandlingDelegate
setErrorHandlingDelegate:
_delegate
_modelURL
_storeURL
_storeOptions
_entitlementNames
_listener
_policy
_connectionToCoordinatorMap
_cacheIDtoCoordinatorMap
T@"<NSXPCStoreServerDelegate>",&,N,V_delegate
cache
setQueryGenerationFromToken:error:
_setVersionReference__:
values
existingObjectWithID:error:
mutableSetValueForKey:
shouldAcceptMetadataChangesFromClientWithContext:
willAccessValueForKey:
isDeleted
detectConflictsForObject:
restrictingWritePredicateForEntity:fromClientWithContext:
evaluateWithObject:
deleteObject:
initWithEntity:insertIntoManagedObjectContext:
processPendingChanges
processRequest:fromClientWithContext:error:
setStalenessInterval:
processFaultForRelationshipWithName:onObjectWithID:fromClientWithContext:error:
processFaultForObjectWithID:fromClientWithContext:error:
dataWithPropertyList:format:options:error:
_retainedCurrentQueryGeneration:
currentPersistentHistoryTokenFromStores:
indexOfObject:inRange:
methodForSelector:
indexOfObjectIdenticalTo:inRange:
_setParentBuffer:
classForKeyedUnarchiver
accessInstanceVariablesDirectly
classForCoder
indexOfObject:
indexOfObjectIdenticalTo:
_setPurgeable:
getObjects:
mutableCopyWithZone:
_cd_rc
_count
_resultSet
_weakRequestStore
mapping
valueAtIndex:
decimalNumberWithString:
_storeBinaryDataExternally
initWithStoreBytes:length:externalLocation:safeguardLocation:protectionLevel:
defaultManager
stringWithFileSystemRepresentation:length:
externalDataReferencesDirectory
stringByAppendingPathComponent:
fileExistsAtPath:
bufferOffset
cfDeallocator
setParentObject:
numberWithInt:
keys
initWithArray:forTarget:withReferenceValues:andRange:
initWithObjects:forKeys:count:
keyEnumerator
_parent_buffer
_sql_entity_id
_primary_key
nextObject
_target
_keys
_referenceItems
_range
_index
_entitlements
_userInfo
_lock
inverseIsToOnePrefetchRequestForRelationshipNamed:onEntity:
manyToOnePrefetchRequestForRelationshipNamed:onEntity:
manyToManyPrefetchRequestsForRelationshipNamed:onEntity:
notificationManager
setNotificationManager:
_context
_info
_manager
initWithSQLCore:
_prefetchRequestCache
_generationTokenMap
_transaction
_connections
_clientIdentifier
T@"NSPersistentStoreCoordinator",R,N,V_coordinator
restrictingReadPredicateForEntity:fromClientWithContext:
includesPropertyValues
executeFetchRequest:error:
_snapshot_
expressionForConstantValue:
predicateWithLeftExpression:rightExpression:modifier:type:options:
initWithKeyPath:
initWithLeftExpression:rightExpression:modifier:type:options:
allObjects
updatedObjects
lockedObjects
entitiesByName
notPredicateWithSubpredicate:
deletedObjects
save:
executeRequest:error:
restrictingPullChangeHistoryPredicateForEntity:fromClientWithContext:
subentitiesByName
subentities
removeObjectAtIndex:
isKindOfEntity:
initWithOptions:andTimestamp:
_node
_messageCode
_messageBody
_contextTransactionAuthor
_processName
_automaticallyPruneTransientRecords
_transactionLimit
initWithMachServiceName:options:
newEndpoint
initWithListenerEndpoint:
setRemoteObjectInterface:
synchronousRemoteObjectProxyWithErrorHandler:
_store
_connection
setValueTransformer:forName:
isReadOnly
isCloudKitEnabled
mirroringDelegate
databaseScope
initWithStore:metadataContext:databaseScope:metricsClient:
isEqualToSet:
isEqualToData:
sqlString
whitespaceAndNewlineCharacterSet
stringByTrimmingCharactersInSet:
manyToManyRelationships
hasPrefix:
ancillaryEntityOffset
_setModelsReferenceIDOffset:
setEntities:
_setIsEditable:
setManagedObjectClassName:
setUniquenessConstraints:
objectForKeyedSubscript:
setValueTransformerName:
createMapOfEntityIDToPrimaryKeySetForObjectIDs:fromStore:
isTemporaryID
cStringUsingEncoding:
numberWithUnsignedInt:
_invalidateStaticCaches
ancillaryEntityCount
createMapOfEntityIDToPrimaryKeySetForObjectIDs:
allowedTopLevelClasses
recordZone
ckRecordName
initWithRecordName:zoneID:
ckRecordSystemFields
recordID
recordName
recordType
finishDecoding
entityId
entityPK
entityPath
setAffectedStores:
zoneID
zoneName
ownerName
insertNewObjectForEntityForName:inManagedObjectContext:
setCkRecordName:
assignObject:toPersistentStore:
UUID
UUIDString
stringByAppendingFormat:
setEntityId:
setEntityPK:
setRecordZone:
stringByAppendingString:
ckRecordZoneName
ckOwnerName
numberWithUnsignedInteger:
setReturnsObjectsAsFaults:
moveReceipts
initWithReceiptsToEncode:
archivedDataWithRootObject:requiringSecureCoding:error:
unarchivedObjectOfClass:fromData:error:
createRecordIDForMovedRecord
setRecordMetadata:
setMovedAt:
setNeedsCloudDelete:
setZoneName:
setOwnerName:
setRecordName:
enumerateArchivedRecordIDsUsingBlock:
compressedDataUsingAlgorithm:error:
decompressedDataUsingAlgorithm:error:
insertMetadataForObject:setRecordName:inZoneWithID:recordNamePrefix:error:
encodeRecord:error:
recordFromEncodedData:error:
T@"NSString",R,N
createRecordFromSystemFields
createEncodedMoveReceiptData:
mergeMoveReceiptsWithData:error:
T@"NSString",&,D,N
T@"NSData",&,D,N
encodedRecord
T@"NSNumber",&,D,N
ckShare
T@"NSCKRecordZoneMetadata",&,D,N
needsUpload
TB,D,N
needsLocalDelete
needsCloudDelete
lastExportedTransactionNumber
pendingExportTransactionNumber
pendingExportChangeTypeNumber
T@"NSSet",&,D,N
movedAt
_zoneIDToArchivedReceipts
derivationExpression
columnName
count:
selector
tableName
correlationTableName
initWithEntity:sqlString:
appendFormat:
propertyType
expressionType
canonical:
uppercase:
lowercase:
min:
max:
sum:
stringByReplacingOccurrencesOfString:withString:
keyPath
arguments
random
anyObject
initFileURLWithPath:
substringFromIndex:
encryptedValues
isValidMirroredRelationshipRecord:values:
setNeedsDelete:
setIsUploaded:
cdEntityName
relationshipName
initWithRecordID:forRecordWithID:relatedToRecordWithID:byRelationship:withInverse:andType:
relatedEntityName
pendingRelationships
recordZoneName
recordZoneOwnerName
relatedRecordZoneName
relatedRecordZoneOwnerName
relatedRecordName
isInserted
superentity
initWithUpdatedRecords:deletedRecordTypeToRecordIDs:options:fileBackedFuturesDirectory:
_updatedRecords
_deletedRecordTypeToRecordID
_modifiedRecords
_updatedRelationships
_deletedRelationships
_deletedMirroredRelationshipRecordIDs
_recordTypeToRecordIDToObjectID
_recordTypeToUnresolvedRecordIDs
_metadatasToLink
_importOperations
_mirroringOptions
_recordMetadata
_insertedObject
addEntriesFromDictionary:
initWithName:reason:userInfo:
errorObjectWithUserInfo:
_code
_domain
minimalFormInContext:
_keypathsForDerivedPropertyValidation:
minimalFormInContext:ofPredicate:
rightExpression
operatorType
leftExpression
isNSOrderedSet__
comparisonPredicateModifier
initWithType:subpredicates:
minimalFormInContext:ofPredicates:
predicateOperatorType
allowEvaluation
predicateOperator
initWithPredicateOperator:leftExpression:rightExpression:
subpredicates
collection
predicateFormat
valueForKeyPath:
operand
_newKeyPathExpressionForString:
initWithOperand:andKeyPath:
initWithExpressionType:operand:selector:argumentArray:
_mapKVCOperatorsToFunctionsInContext:
substringWithRange:
removeLastObject
expressionForFunction:selectorName:arguments:
expressionForFunction:arguments:
characterAtIndex:
rangeOfString:
rangeOfString:options:
variableExpression
initWithExpression:usingIteratorExpression:predicate:
localizedStandardRangeOfString:
trueExpression
falseExpression
initWithSource:forRelationship:asFault:
setArray:
descriptionWithLocale:
descriptionWithLocale:indent:
willRead
enumerateObjectsWithOptions:usingBlock:
enumerateObjectsAtIndexes:options:usingBlock:
indexOfObjectWithOptions:passingTest:
indexOfObjectAtIndexes:options:passingTest:
indexesOfObjectsWithOptions:passingTest:
indexesOfObjectsAtIndexes:options:passingTest:
objectEnumerator
insertObject:atIndex:
replaceObjectAtIndex:withObject:
alloc
turnIntoFault
source
relationship
_realArray
_source
_relationship
_flags
T@"NSManagedObject",R,N
T@"NSPropertyDescription",R,N
fault
TB,R,N,GisFault
_entitysReferenceID
willReadWithContents:
setSet:
member:
objectsWithOptions:passingTest:
intersectsSet:
isSubsetOfSet:
makeObjectsPerformSelector:
makeObjectsPerformSelector:withObject:
intersectSet:
removeAllObjects
_shouldProcessKVOChange
_isIdenticalFault:
replacementObjectForCoder:
_realSet
_classShouldAlwaysRegisterSelectorNamed:
_createMutationMethodsForClass:forKey:
_addObjectMethod
_removeObjectMethod
_addMethod
_removeMethod
_intersectMethod
_setMethod
migrationDebugLevel
setMigrationDebugLevel:
renamingIdentifier
initWithDomain:code:userInfo:
mappingType
setEntityMappings:
sourceEntityName
destinationEntityName
expressionForVariable:
expressionForFetch:context:countOnly:
setSourceExpression:
setAttributeMappings:
setRelationshipMappings:
_isSchemaEqual:
setSourceEntityName:
versionHash
setSourceEntityVersionHash:
setDestinationEntityName:
setDestinationEntityVersionHash:
setMappingType:
initWithPropertyName:valueExpression:
initWithObjects:count:
storesBinaryDataExternally
setValueExpression:
minCount
initWithSourceModel:destinationModel:
_sourceModel
_destinationModel
_currentEntityMapping
_error
initWithValue:
index
setIndex:
value
setValue:
setTableName:
_value
_tableName
TI,N,V_index
T@,&,N,V_value
T@"NSString",&,N,V_tableName
initForConnection:
_limitedStatement
_unlimitedStatement
_substVarBindOrdering
_substIntarrayBindOrdering
createPredicateForFetchFromPredicate:withContext:
acceptVisitor:flags:
modifier
isNegation
initWithOperatorType:modifier:negate:options:
initWithOperatorType:modifier:options:
setContext:
setPredicateOperator:
visitPredicate:
visitPredicateExpression:
visitPredicateOperator:
initWithContext:
initWithInt:
_previousKeyPathExpressionWasToken
fileSystemRepresentation
lastPathComponent
_pid
_termstatus
initWithSet:copyItems:
willChangeValueForKey:withSetMutation:usingObjects:
didChangeValueForKey:withSetMutation:usingObjects:
initWithContainer:key:mutableSet:
_container
_key
_mutableSet
coloredLoggingDefault
useConcurrentFetching
initWithObjectID:context:sqlCore:
rowCache
executeRequestUsingConnection:
executeEpilogue
_sqlCore
_persistentStoreRequest
_exception
_result
_transactionID
_useColoredLogging
_useConcurrentFetching
_hasHistoryTracking
_storeIsInMemory
T@"NSPersistentStoreRequest",R,N,V_persistentStoreRequest
T@,&,N,V_result
T@"NSSQLRowCache",R,N
TB,R,N
initWithOptions:request:
defaultRecordZoneIDForDatabaseScope:
addUpdatedRecord:
setRecordFetchedBlock:
setQueryCompletionBlock:
addOperation:
initWithRequest:success:madeChanges:error:
initWithQuery:
setZoneID:
queryCursor
setCursor:
requestIdentifier
modificationDate
compare:
applyAccumulatedChangesToStore:inManagedObjectContext:withStoreMonitor:madeChanges:error:
setMostRecentRecordModificationDate:
setLastFetchDate:
setQueryCursor:
lastFetchDate
updateMetadataForAccumulatedChangesInContext:inStore:error:
setNeedsImport:
queries
commitMetadataChangesWithContext:forStore:error:
initForRecordType:withOptions:request:
executeImportOperationsAndAccumulateRecordsWithManagedObjectContext:completion:
_recordType
_maxModificationDate
_queryCursor
_zoneIDToQuery
compare:options:range:
_caseInsensitiveNumericCompare:
setURL:forPersistentStore:
_setURL:forPersistentStore:withCoordinator:
_mutationMethods
foreignKeyColumns
foreignEntityKeyColumns
foreignOrderKeyColumns
attributeColumns
isConstrained
sqlType
initWithInt64:sqlType:
initWithUnsignedInt:sqlType:
slot
attributeDescription
initWithValue:sqlType:propertyDescription:
attributes
_statement
_adapter
_sqlString
_whereClause
_selectList
concurrencyType
newArrayFromObjectIDs
subarrayWithRange:
arrayFromObjectIDs
managedObjectIDAtIndex:
indexOfManagedObjectForObjectID:
_objectsPointer
_array
_weakContext
numberWithUnsignedLongLong:
affectedStores
_setTransaction:
initWithDictionary:andChangeObjectID:
returnsObjectsAsFaults
returnsDistinctResults
setReturnsDistinctResults:
shouldRefreshRefetchedObjects
_setDisablePersistentStoreResultCaching:
_fetchBatchLRUEntriesLimit
_newSubArrayInRange:asMutable:
initWithPFArray:inRange:
_turnAllBatchesIntoFaults
_turnAllBatchesIntoObjects
rangeCount
rangeAtIndex:
indexSet
addIndex:
initWithIndexesInRange:
sortedArrayUsingFunction:context:
sortedArrayUsingFunction:context:hint:
sortedArrayUsingSelector:
sortedArrayUsingComparator:
sortedArrayWithOptions:usingComparator:
filteredArrayUsingPredicate:
retainedObjectAtIndex:
_pinnedObjectAtIndex:
isEqualToArray:
objectsAtIndexes:
_entryFlags
_moc
_request
_batchSize
_LRUBatches
initWithPFBatchFaultingArray:
transaction
initWithPFArray:
_editCount
_offset
_limit
_originalArray
_updatedObjectsArray
_indicesVeneer
_replaceObject:atIndex:
_values
_sourceData
isEqualToOrderedSet:
initWithArray:andContext:
_underlyingArray
_weakmoc
_allowAncillaryEntities
_modelsReferenceIDOffset
setSubstitutionVariables:
stringValue
valueWithBytes:objCType:
value:withObjCType:
initWithBytes:objCType:
getValue:
objCType
charValue
unsignedCharValue
shortValue
unsignedShortValue
unsignedIntValue
longValue
unsignedLongLongValue
floatValue
_slotLimit
_objectsByTemporaryID
_objectsByPermanentObjectID
_objectsBy64bitPKID
_capacitiesFor64bitPKMappings
_modelMap
initWithFunction:withArgument:andPriority:
_task
lock
condition
isFinishedFlag
bundleForClass:
mainBundle
bundleWithPath:
hasSuffix:
localizedStringForKey:value:table:
persistentStoreForIdentifier:
initWithBytes:length:
data
getCString:maxLength:encoding:
environment
standardUserDefaults
stringForKey:
integerForKey:
boolForKey:
hasExternalReferenceContent
_externalReferenceLocation
_originalData
_safeguardLocation
preferredProtectionLevel
path
_bytesLengthForExternalReference
getBytes:range:
doCleanupOnDealloc
_safeguardLocationString
initWithContentsOfFile:options:error:
externalReferenceLocationString
removeItemAtPath:error:
copyItemAtPath:toPath:error:
isFileURL
initWithBytesNoCopy:length:encoding:freeWhenDone:
reverseTransformedValue:
transformedValue:
initWithOrderedSet:
indexSetWithIndexesInRange:
replaceObjectsAtIndexes:withObjects:
removeObjectsAtIndexes:
insertObjects:atIndexes:
caseInsensitiveCompare:
_createDictionaryPartitioningObjects:intoHierarchies:
_createDictionaryPartitioningObjectIDs:intoHierarchies:
isUbiquitousItemAtURL:
getResourceValue:forKey:error:
queryGenerationToken
hasChanges
_frameworkHash
wrapBlockInGuardedAutoreleasePool:
_object
_objectAddress
unlock
tryLock
_owner
contentsOfDirectoryAtPath:error:
stringByDeletingLastPathComponent
createDirectoryAtURL:withIntermediateDirectories:attributes:error:
_storeLinksDirs
_filesToCleanUp
appendBytes:length:
getCharacters:
initWithCharactersNoCopy:length:freeWhenDone:
getBytes:maxLength:usedLength:encoding:options:range:remainingRange:
appendData:
initWithBytesNoCopy:length:freeWhenDone:
_underlyingProperty
_setupForKeys:count:table:inData:
_action
initWithUTF8String:
cString
_fastCStringContents:
_fastCharacterContents
fastestEncoding
smallestEncoding
getCharacters:range:
_isCString
getCString:
cStringLength
_length
_parentObject
isFileBackedFuture
_referenceData
metadataForPersistentStoreWithURL:error:
addCacheNodes:
cacheNodes
willRemoveCacheNodes:
cacheNodeForObjectID:
newCacheNodeForManagedObject:
updateCacheNode:fromManagedObject:
newReferenceObjectForManagedObject:
objectIDForEntity:referenceObject:
referenceObjectForObjectID:
_nodeCache
_entityCache
_storeMetadata
_nextReference
_reserved4
_reserved5
expressionValueWithObject:context:
isCountOnlyRequest
requestExpression
initForKeys:count:
removeObjectsInRange:
numberWithUnsignedLong:
_subentitiesIncludes:
sortUsingDescriptors:
_versionNumber
_setVersionNumber:
_didLoadMetadata
_preflightCrossCheck
managedObjectContextDidRegisterObjectsWithIDs:
managedObjectContextDidUnregisterObjectsWithIDs:
_subresults
progress
cancel
initWithContext:andProgress:completetionBlock:
_cancelProgress
_isCancelled
operationError
setOperationError:
_requestProgress
_requestError
_requestContext
_requestCompletionBlock
T@"NSError",&,V_requestError
T@"NSManagedObjectContext",R,V_requestContext
T@"NSProgress",R
_setAsyncResultHandle:
initForFetchRequest:withContext:andProgress:completetionBlock:
finalResult
_fetchRequest
_finalResult
_intermediateResultCallback
T@"NSAsynchronousFetchRequest",R,V_fetchRequest
T@"NSArray",R
numberWithLong:
initWithResult:ofType:
T@,R,V_result
initWithObjectID:
propertyCache
setPropertyCache:
_objectID
__versionNumber
_propertyCache
_reserved1
T@"NSManagedObjectID",R,N
T@"NSMutableDictionary",&,N
encodeInt:forKey:
attributeValueClassName
isIndexed
_encodedAttributeFlagsForFlags:
encodeInt32:forKey:
numberWithFloat:
failWithError:
decodeIntForKey:
decodeInt32ForKey:
_extraIVars
decodeDoubleForKey:
setIndexed:
_isEqual:skipIndexCheck:
_attributeTypeIsSchemaEqual:
_throwIfNotEditable
setAttributeValueClassName:
_hasMinValueInExtraIvars
_hasMaxValueInExtraIvars
validationPredicates
absoluteString
predicateWithBlock:
validationWarnings
_allowsCloudEncryption
_preserveValueOnDelete
setAttributeType:
setDefaultValue:
allowsExternalBinaryDataStorage
setAllowsExternalBinaryDataStorage:
setAllowsCloudEncryption:
setPreservesValueInHistoryOnDeletion:
preserveValueOnDeletionInPersistentHistory
setPreserveValueOnDeletionInPersistentHistory:
_type
_attributeValueClass
_valueTransformerName
_attributeValueClassName
_defaultValue
T@"NSString",C
T@,&
T@"NSData",R,C
_initWithName:
_isTriggerBacked
isNSDate__
_rawValidationPredicates
_rawValidationWarnings
_comparePredicatesAndWarnings:
_createCachesAndOptimizeState
_replaceValidationPredicates:andWarnings:
_nonPredicateValidateValue:forKey:inObject:error:
_versionHash:inStyle:
_initWithName:type:withClassName:
_initWithName:type:
initWithDouble:
initWithFloat:
initWithTimeIntervalSinceReferenceDate:
unarchivedObjectOfClasses:fromData:error:
_appendPropertyFieldsToData:propertiesDict:uniquedPropertyNames:uniquedStrings:uniquedData:entitiesSlots:
replaceBytesInRange:withBytes:
setIsFileBackedFuture:
_isEqualWithoutIndex:
_epsilonEquals:rhs:withFlags:
_initWithType:
_writeIntoData:propertiesDict:uniquedPropertyNames:uniquedStrings:uniquedData:entitiesSlots:fetchRequests:
initWithProperty:
setExternalType:
externalType
property
externalName
attribute
_externalType
_externalPrecision
_externalScale
generatedNameSuffix
_retain_1
_release_1
isSubclassOfClass:
initWithUnsignedLongLong:
initWithBytes:length:encoding:
pathComponents
initWithEntity:andUUIDString:
_setPersistentStore:
setObjectStoreIdentifier:
_isPersistentStoreAlive
_retainedURIString
automaticallyNotifiesObserversForKey:
classWithStore:andEntity:
_usesTaggedPointers
managedObjectIDFromUTF8String:length:
managedObjectIDFromURIRepresentation:
_storeDeallocated
_storeIdentifier
_fallbackFactory
_preferReferenceData64
_referenceData48_cd_rc16
_taggedPoolIndex
_fallbackFactories
initWithRequest:serializedObjects:error:
serializedObjects
_serializedObjects
T@"NSDictionary",R,N,V_serializedObjects
doURLStuff:createdStubFile:readOnly:error:options:
doFilesystemCleanupOnRemove:
initWithStore:fromPath:
metadataForPersistentStoreWithURL:options:error:
setMetadata:forPersistentStoreWithURL:options:error:
setMetadata:forPersistentStoreWithURL:error:
saveDocumentToPath:
subdataWithRange:
setRequiresSecureCoding:
setDecodingFailurePolicy:
error
fileHandleForUpdatingAtPath:
readDataOfLength:
seekToFileOffset:
initForWritingWithMutableData:
_writeMetadataData:andMapDataData:toFile:error:
closeFile
fileHandleForReadingAtPath:
writeToFile:options:error:
_databaseVersion
_fullMetadata
_primaryKeyGeneration
_mapData
setByAddingObjectsFromArray:
_propertySearchMapping
fastIndexForKnownKey:
dataForKey:
initWithValues:objectID:
_attributes
_attributesAsEncoded
fileExistsAtPath:isDirectory:
removeObject:objectIDMap:
addObject:objectIDMap:
destinationsForRelationship:
dataWithCapacity:
initWithStore:fromArchivedData:
updateObject:objectIDMap:
retainedObjectIDsForRelationship:forObjectID:
handleFetchRequest:
_theMap
entityForName:inManagedObjectContext:
allocWithEntity:
_entityDeallocated
isAbstract
encodeConditionalObject:forKey:
versionHashModifier
initWithName:elements:
_setEntity:
setRenamingIdentifier:
setCompoundIndexes:
JSONObjectWithData:options:error:
indexes
coreSpotlightDisplayNameExpression
setCoreSpotlightDisplayNameExpression:
managedObjectClassName
getObjects:andKeys:count:
_addSubentity:
_valueCountByEnumeratingWithState:objects:count:
_addProperty:
_MOClassName
_addEntity:
getBytes:length:
properties
sortDescriptorWithKey:ascending:
elements
string
lowercaseString
initWithProperty:collationType:
containsString:
propertyName
collationType
isAscending
setSubentities:
relationshipsWithDestinationEntity:
setProperties:
setAbstract:
setVersionHashModifier:
setIndexes:
compoundIndexes
_snapshotClass
_versionHashModifier
_versionHash
_classNameForEntity
_instanceClass
_name
_rootentity
_superentity
_subentities
_properties
_propertyMapping
_propertyRanges
_entityDescriptionFlags
_extraIvars
_flattenedSubentities
_kvcPropertyAccessors
_modelsReferenceIDForEntity
T@"NSManagedObjectModel",R
abstract
TB,GisAbstract
T@"NSDictionary",R,C
T@"NSArray",&
T@"NSDictionary",&,N
T@"NSArray",C
T@"NSExpression",&,N
_setEntityAndMaintainIndices:
setElementID:
elementID
keypathsToPrefetchForDeletePropagation
isEditable
maxCount
_isGeneratedClass
classForEntity:
_localRelationshipNamed:
_flattenProperties
_isEditable
sortUsingFunction:context:
isIndexedBySpotlight
isStoredInExternalRecord
_setEntitysReferenceID:
_newMappingForPropertiesOfRange:
initWithKey:ascending:selector:
initWithPropertyDescription:
_stripForMigration
_restoreValidation
initWithName:predicate:elements:entity:
partialIndexPredicate
_addFactoryToRetainList:
_uniquenessConstraintsAsFetchIndexes
_propertyWithRenamingIdentifier:
toManyRelationshipKeys
toOneRelationshipKeys
inverseForRelationshipKey:
_offsetRelationshipIndex:fromSuperEntity:andIsToMany:
_newSnowLeopardStyleDictionaryContainingPropertiesOfType:
_leopardStyleRelationshipsByName
_leopardStyleAttributesByName
_skipValidation
_writeIntoData:propertiesDict:uniquedPropertyNames:uniquedStrings:uniquedData:uniquedMappings:entities:
_createValuePrimitiveSetterWithContainerClassID:key:
ivar
method
containerClassID
_createValuePrimitiveGetterWithContainerClassID:key:
_createValueSetterWithContainerClassID:key:
_createValueGetterWithContainerClassID:key:
_initWithSourceEntityDescription:destinationEntityDescription:
attributeMappings
relationshipMappings
sourceEntityVersionHash
destinationEntityVersionHash
sourceExpression
entityMigrationPolicyClassName
initWithData:
setEntityMigrationPolicyClassName:
_reserved
_mappingsByName
_mappingType
_sourceEntityName
_sourceEntityVersionHash
_destinationEntityName
_destinationEntityVersionHash
_sourceExpression
_entityMigrationPolicyClassName
_attributeMappings
_relationshipMappings
_entityMappingFlags
T@"NSData",C
T@"NSExpression",&
destinationContext
valueExpression
associateSourceInstance:withDestinationInstance:forEntityMapping:
sourceInstancesForEntityMappingNamed:destinationInstances:
destinationEntityForEntityMapping:
orderedSetWithSet:
orderedSetWithArray:
orderedSetWithObject:
beginEntityMapping:manager:error:
createDestinationInstancesForSourceInstance:entityMapping:manager:error:
endInstanceCreationForEntityMapping:manager:error:
createRelationshipsForDestinationInstance:entityMapping:manager:error:
endRelationshipCreationForEntityMapping:manager:error:
performCustomValidationForEntityMapping:manager:error:
endEntityMapping:manager:error:
_nonNilValueOrDefaultValueForAttribute:source:destination:
initWithExternalName:
propertyMappings
primaryKeys
isSingleTableEntity
subentityColumn
subentityID
initWithEntity:
_entity
_propertyMappings
_primaryKeys
_isSingleTableEntity
_subentityColumn
_subentityID
setReadOnly:
_reservedtype1_1
_reservedtype1_2
_reservedtype1_3
_reservedtype1_4
_reservedtype1_5
_reservedtype1_6
_reservedtype2_1
_reservedtype2_2
_underlyingAttribute
_expression
_expressionResultType
_externalReferenceCount
_externalRefFlags
_toManyMap
_birth
fulfillFault:withContext:error:
fulfillFault:withContext:
willFireFault
_willChangeValuesForKeys:
_didChangeValuesForKeys:
didFireFault
awakeFromFetch
_isToManyRelationship
fulfillFault:withContext:forIndex:
retainedFulfillAggregateFaultForObject:andRelationship:withContext:
localizedDescription
retainedOrderedFaultInformationForAggregateFaultForObject:andRelationship:withContext:error:
_newOrderedRelationshipInformationForRelationship:forObjectWithID:withContext:error:
turnObject:intoFaultWithContext:
willTurnIntoFault
didTurnIntoFault
_setFaultingError:
context:shouldHandleInaccessibleFault:forObjectID:andTrigger:
shouldHandleInaccessibleFault:forObjectID:triggeredByProperty:
changeID
shortStringForChangeType:
updatedProperties
tombstone
stringForChangeType:
T@"NSManagedObjectID",R,C
T@"NSPersistentHistoryTransaction",R
T@"NSSet",R,C
toManyRelationships
initWithLength:
mutableBytes
_changeID
_changedObjectID
_changeType
_tombstone
_columns
_sqlEntity
initForIndexDescription:sqlEntity:
stringWithString:
sqlEntity
indexDescription
generateStatementsForStore:
dropStatementsForStore:
bulkUpdateStatementsForStore:
setTransient:
_reserved6
_lazyFetchRequestEntityName
T@"NSFetchRequest",&
_message
initWithBool:
allocationSize
includesPendingChanges
purgeableResult
_encodedFetchRequestFlagsForFlags:
setPurgeableResult:
_stringForFetchRequestResultType:
execute:
setAllocationSize:
_groupByProperties
_havingPredicate
_valuesToFetch
_sortDescriptors
_allocationSize
_relationshipKeyPathsForPrefetching
TB,N
T@"NSEntityDescription",&,N
T@"NSPredicate",&,N
T@"NSArray",&,N
TQ,N
T@"NSArray",C,N
_isCachingFetchRequest
_asyncResultHandle
_isAsyncRequest
_setFetchBatchLRUEntriesLimit:
_copyForDirtyContext
_incrementInUseCounter
_activityType
_storePath
setEventIdentifier:
setCloudKitEventType:
setStartedAt:
initWithCKEvent:
setEndedAt:
success
setSucceeded:
setErrorDomain:
setErrorCode:
eventIdentifier
T@"NSUUID",&,D,N
cloudKitEventType
Tq,D,N
startedAt
T@"NSDate",&,D,N
endedAt
succeeded
errorDomain
errorCode
countAffectedObjects
countFinishedObjects
defaultCenter
postNotificationName:object:
.cxx_destruct
_queue
_psc
initWithExpressionType:
initForFetch:context:countOnly:
countForFetchRequest:error:
contextExpression
_expressionWithSubstitutionVariables:
_reserved2
_reserved3
_managedObjectContext
T@"NSExpression",R
countOnlyRequest
TB,R,GisCountOnlyRequest
initWithSourceAttributeName:destinationAttributeName:
decodeObjectForKey:
_sourceAttributeName
_destinationAttributeName
numberWithShort:
_reserved64
_table
getObjects:andKeys:
initWithDictionary:copyItems:
getKeys:
setValue:atIndex:
_subclassesMustBeExplicitlyMentionedWhenDecoded
_keySearch
_list
newInstanceWithSearchStrategy:inData:
TQ,R,N
T^@,R,N
T@"NSArray",R,N
T@"NSKnownKeysMappingStrategy",R,N
applyToSet:
_diffObject
_setGenericValue:forKey:withIndex:flags:
_genericValueForKey:withIndex:flags:
_PFPlaceHolderSingleton
willChangeValueForKey:
didChangeValueForKey:
willChange:valuesAtIndexes:forKey:
didChange:valuesAtIndexes:forKey:
alloc_10_4
allocWithZone_10_4:
_descriptionValues
substringToIndex:
insertObject:
_transientPropertiesChangesMask__
didAccessValueForKey:
mutableArrayValueForKey:
_genericMutableSetValueForKey:withIndex:flags:
_genericMutableOrderedSetValueForKey:withIndex:flags:
mutableOrderedSetValueForKey:
setValuesForKeysWithDictionary:
dictionaryWithValuesForKeys:
raise
_PFPlaceHolderSingleton_core
contextShouldIgnoreUnmodeledPropertyChanges
isUpdated
hasFaultForRelationshipNamed:
setObservationInfo:
observationInfo
awakeFromInsert
awakeFromSnapshotEvents:
prepareForDeletion
willSave
didSave
validateValue:forKey:error:
validateForDelete:
validateForInsert:
validateForUpdate:
setPrimitiveValue:forKey:
dictionaryWithPropertyValues
committedValuesForKeys:
changedValues
valueForUndefinedKey:
setValue:forUndefinedKey:
setNilValueForKey:
faultingState
changedValuesForCurrentEvent
hasPersistentChangedValues
objectIDsForRelationshipNamed:
_cd_lockingInfo
_cd_stateFlags
_cd_extraFlags
_cd_rawData
_cd_managedObjectContext
_cd_objectID
_cd_extras
_cd_queueReference
T@"NSManagedObjectContext",R,N
T@"NSEntityDescription",R,N
inserted
TB,R,N,GisInserted
updated
TB,R,N,GisUpdated
deleted
TB,R,N,GisDeleted
bindableObjectPublisher
setBindableObjectPublisher:
willRefresh:
didRefresh:
_newPropertiesForRetainedTypes:andCopiedTypes:preserveFaults:
_newChangedValuesForRefresh__
_newSnapshotForUndo__
_newCommittedSnapshotValues
_changedTransientProperties__
initWithIndex:
addObjects:count:
initWithContainer:key:mutableOrderedSet:
_propagateDelete:
_localizationPolicy
localizedEntityNameForEntity:
localizedPropertyNameForProperty:
replaceOccurrencesOfString:withString:options:range:
_validatePropertiesWithError:
_useFastValidationMethod
_validateForSave:
localizedModelStringForKey:
removeObjectsInArray:
_updateFromRefreshSnapshot:includingTransients:
_updateFromUndoSnapshot:
_initWithEntity:withID:withHandler:withContext:
_versionReference__
_implicitObservationInfo
_didChangeValue:forRelationship:named:withInverse:
_orderedObjectsAndKeys
_reorderObjectsToLocationsByOrderKey:error:
_orderKeysForRelationshipWithName__:
_updateLocationsOfObjectsToLocationByOrderKey:inRelationshipWithName:error:
_deletedRecordIDs
_recordTypeToDeletedRecordID
_records
_recordIDs
_sizeInBytes
signatureWithObjCTypes:
implementsSelector:
_isGeneratedClass_1
_PFMOClassFactoryData
resolveInstanceMethod:
allocBatch:withEntity:count:
allocateBatch:forEntity:count:
_initializeAccessorStubs
_initializePrimitiveAccessorStubs
_isOrdered
_defaultValidation:error:
methodSignatureForSelector:
batchAllocateWithEntity:insertIntoManagedObjectContext:count:
_hasOverriddenAwake
resolveClassMethod:
lastIndex
getIndexes:maxCount:inIndexRange:
replaceObjectsInRange:withObjects:count:
numberWithChar:
shouldDeleteInaccessibleFaults
discardEditing
_forgetObject:propagateToObjectStore:removeFromRegistry:
_setQueryGenerationFromToken:error:
_dealloc__
currentQueue
maxConcurrentOperationCount
_parentObtainPermanentIDsForObjects:context:error:
postNotificationName:object:userInfo:
mergePolicy
mergeType
resolveConflicts:error:
refreshAllObjects
initWithFetchRequest:completionBlock:
initWithResult:
_countForFetchRequest_:error:
_executeAsynchronousFetchRequest:
currentProgress
initWithParent:userInfo:
estimatedResultCount
setTotalUnitCount:
setKind:
completionBlock
setCancellationHandler:
completedUnitCount
setCompletedUnitCount:
propagatesDeletesAtEndOfEvent
setPropagatesDeletesAtEndOfEvent:
_mergeRefreshObject:mergeChanges:withPersistentSnapshot:
undo
redo
decodeFloatForKey:
encodeFloat:forKey:
parentContext
object
_mergeChangesFromRemoteContextSave:intoContexts:
_mergeChangesFromDidSaveDictionary:usingObjectIDs:
registeredObjects
refreshObject:mergeChanges:
performWithOptions:andBlock:
_validateQueryGeneration:error:
automaticallyMergesChangesFromParent
setAutomaticallyMergesChangesFromParent:
_changeTrackingToken__
removeObserver:name:object:
_automaticallyMergeChangesFromContextDidSaveNotification:
addObserver:selector:name:object:
mergeChangesFromContextDidSaveNotification:
isEditing
commitEditing
invocationWithMethodSignature:
setSelector:
setArgument:atIndex:
invokeWithTarget:
performSelector:withObject:afterDelay:inModes:
_managedObjectContextEditor:didCommit:contextInfo:
commitEditingWithDelegate:didCommitSelector:contextInfo:
mergeChangesFromRemoteContextSave:intoContexts:
objectWillChange:
setRetainsRegisteredObjects:
retainsRegisteredObjects
setShouldDeleteInaccessibleFaults:
undoManager
observeValueForKeyPath:ofObject:change:context:
rollback
setParentContext:
_setChangeTrackingTokenFromToken:error:
objectDidBeginEditing:
objectDidEndEditing:
commitEditingAndReturnError:
_queueOwner
_spinLock
_dispatchQueue
_parentObjectStore
_undoTransactionID
_ignoreChangeNotification
_lockCount
_unprocessedChanges
_unprocessedDeletes
_unprocessedInserts
_insertedObjects
_deletedObjects
_changedObjects
_lockedObjects
_refreshedObjects
_infoByGID
_cachedObsInfoByEntity
_fetchTimestamp
_referenceCallbackRegistration
_referenceQueue
_contextLabel
_persistentStoreIdentifiers
T@"NSPersistentStoreCoordinator",&
T@"NSManagedObjectContext",&
T@"NSUndoManager",&,N
T@"NSMutableDictionary",R,N
T@"NSSet",R,N
T@"NSQueryGenerationToken",R,N
lockObjectStore
unlockObjectStore
initWithInsertedObjects:updatedObjects:deletedObjects:lockedObjects:
_countWithNoChangesForRequest:error:
_countWithMergedChangesForRequest:possibleChanges:possibleDeletes:error:
initWithName:object:userInfo:
setGroupsByEvent:
isUndoRegistrationEnabled
removeAllActions
_retainedObjectWithID:optionalHandler:withInlineStorage:
_committedSnapshotForObject:
_currentEventSnapshotForObject:
_retainedObjectsFromRemovedStore:
_setDisableDiscardEditing:
_disableDiscardEditing
_setAllowAncillaryEntities:
_establishEventSnapshotsForObject:
_undoInsertions:
_undoDeletionsMovedToUpdates:
registerUndoWithTarget:selector:object:
_undoDeletions:
_undoUpdates:
groupsByEvent
isUndoing
isRedoing
beginUndoGrouping
_clearChangedThisTransaction:
disableUndoRegistration
enableUndoRegistration
_processRecentChanges:
endUndoGrouping
_forceInsertionForObject:
_noop:
_processEndOfEventNotification:
_willChange_Swift_Trampoline
instancesRespondToSelector:
_undoManagerCheckpoint:
removeAllActionsWithTarget:
_storeConfigurationChanged:
_processChangedStoreConfigurationNotification:
postNotification:
_implicitObservationInfoForEntity:forResultingClass:
defaultQueue
enqueueNotification:postingStyle:
_processReferenceQueue:
_setAllowsExpandedUserInfoKeys:
setShouldRefreshAfterSave:
shouldRefreshAfterSave
setShouldPerformSecureOperation:
shouldPerformSecureOperation
performBlockWithResult:
_orderedSetWithResultsFromFetchRequest:
_stopConflictDetectionForObject:
_mergeChangesFromRemoteContextSave:
_signalRunloop
_rlObserver
_processing
_copyChildObject:toParentObject:fromChildContext:
initWithOwnedKKsD:andVersion:
_snapshot
_version
_allOrderKeysForDestination:inRelationship:error:
_orderKeysForRelationshipWithName__:onObjectWithID:
_updateLocationsOfObjectsToLocationByOrderKey:inRelationshipWithName:onObjectWithID:error:
_performImmediate:
T@"NSQueryGenerationToken",R
_generationIdentifier
T@"NSPersistentStore",R,W
temporaryID
TB,R,GisTemporaryID
getUUIDBytes:
_temporaryIDCounter
modelByMergingModels:
fetchRequestTemplatesByName
fetchRequestTemplateForName:
addPolicy:
_setLocalizationPolicy:
setFetchRequestTemplate:forName:
versionIdentifiers
initWithPath:
modelByMergingModels:forStoreMetadata:
_modelForVersionHashes:
_initWithEntities:
_initWithContentsOfURL:options:
setEntities:forConfiguration:
setVersionIdentifiers:
_ensureFullLocalizationDictionaryIsLoaded
localizationDictionary
initWithURL:
setLocalizationDictionary:
mergedModelFromBundles:
mergedModelFromBundles:forStoreMetadata:
configurations
fetchRequestFromTemplateWithName:substitutionVariables:
isConfiguration:compatibleWithStoreMetadata:
_dataForOptimization
_optimizationHints
_entities
_configurations
_fetchRequestTemplates
_versionIdentifiers
_managedObjectModelFlags
T@"NSDictionary",&
T@"NSSet",C
pathExtension
dictionaryWithContentsOfURL:error:
_setIsEditable:optimizationStyle:
_optimizedEncoding:
initWithManagedObjectModel:configurationName:retainHashHack:
entityNamed:
initWithContentsOfURL:forStoreMetadata:
versionsHashesForModelAtURL:error:
versionHashes:compatibleWithStoreMetadata:
optimizedVersionURL
currentVersionURL
initWithContentsOfOptimizedURL:
initWithContentsOfFile:
base64EncodedStringWithOptions:
bundlePath
pathsForResourcesOfType:inDirectory:
initWithLong:
immutableCopy
_debugOptimizedModelLayout
Tq,N,S_setModelsReferenceIDOffset:
initWithScope:
initWithConstantValue:inScope:context:
generateSQLStringInContext:
initWithConstantValue:ofType:inScope:context:
governingAlias
expressionForSubquery:usingIteratorVariable:predicate:
initWithExpression:trailingKeypath:inScope:
initWithProperties:values:inScope:
isUpdateColumnsScoped
governingAliasForKeypathExpression:
_propertiesToUpdate
_valuesToUpdateTo
pathForResource:ofType:
dictionaryWithContentsOfFile:
currentVersion
urlForModelVersionWithName:
URLsForResourcesWithExtension:subdirectory:
modelVersions
_modelForVersionHashes:inStyle:
_bundle
_versionInfoDictionary
recordIDForObjectID:
URLByDeletingLastPathComponent
initWithStore:otherStore:
populate:
mirroredRelationshipForObject:relatedToObject:byRelationship:
mtmKeysForStore:
recordIDsRelatedToRecordID:byRelationshipNamed:inStore:
metadataForObjectWithID:
recordIdsForStore:
objectIDForRecordID:inStore:
identityRecordNameForStoreWithIdentifier:
databaseScopeForStoreWithIdentifier:
sharedZoneIDsForStore:
mtmKeysForRecordZone:inStore:
objectIDForIdentifier:inStore:
identifiersForStore:
deriveIdentifierForNonCloudObjectID:
_setCheckCloudKitMetadata:
store
otherStore
storeMoc
otherStoreMoc
checkCloudKitMetadata
_storeUUIDToStoreCache
_checkCloudKitMetadata
_otherStore
_storeMoc
_otherStoreMoc
T@"NSPersistentStore",R,N,V_store
T@"NSPersistentStore",R,N,V_otherStore
T@"NSManagedObjectContext",R,N,V_storeMoc
T@"NSManagedObjectContext",R,N,V_otherStoreMoc
TB,R,N,V_checkCloudKitMetadata
encodedShareData
_identifiers
_identifierToObjectID
_mtmKeyToMirroredRelationship
_mtmKeys
_zoneIDToMTMKeys
_recordIDToRelationshipNameToRelatedRecordIDs
_recordIDToMetadata
_objectIDToRecordMetadata
_recordIDToObjectID
_objectIDToRecordID
_recordZones
_sharedRecordZones
_recordZoneIDToRecordIDs
_identityRecordName
_databaseScopeNumber
nextPK64
_entitiesToFetch
eventTypeString:
storeIdentifier
startDate
endDate
_succeeded
_ckEventObjectID
_identifier
_startDate
_endDate
T@"NSUUID",R,N,V_identifier
T@"NSString",R,N,V_storeIdentifier
Tq,R,N,V_type
T@"NSDate",R,N,V_startDate
T@"NSDate",R,N,V_endDate
TB,R,N,V_succeeded
T@"NSError",R,N,V_error
setElements:
setPartialIndexPredicate:
_compare:
_elements
_partialIndexPredicate
T@"NSPredicate",C
entityMappings
_initWithEntityMappings:
dataWithContentsOfURL:
_newMappingModelFromBundles:forSourceHashes:destinationHashes:
mappingModelFromBundles:forSourceModel:destinationModel:
inferredMappingModelForSourceModel:destinationModel:error:
entityMappingsByName
_entityMappings
_entityMappingsByName
_modelMappingFlags
allBundles
allFrameworks
doWorkForStore:inMonitor:completion:
_disableSQLStatementCaching
foreignKey
_prefetchRequestsByEntity
performPrimitiveOperationUsingObject:andObject:
coordinate
initWithNestingLevel:
generateTableAlias
isWhereScoped
initWithWorkingEntity:target:bounds:scope:
_bounds
initWithSource:newVersion:oldVersion:snapshot1:snapshot2:snapshot3:
initWithSource:newVersion:oldVersion:cachedSnapshot:persistedSnapshot:
ancestorSnapshot
objectSnapshot
cachedSnapshot
persistedSnapshot
newVersionNumber
oldVersionNumber
_snapshot1
_snapshot2
_snapshot3
_newVersion
_oldVersion
T@"NSManagedObject",R,&,V_source
T@"NSDictionary",R,&,V_snapshot1
T@"NSDictionary",R,&,V_snapshot2
T@"NSDictionary",R,&,V_snapshot3
TQ,R,V_newVersion
TQ,R,V_oldVersion
conflictingObjects
constraint
databaseObject
initWithConstraint:databaseObject:databaseSnapshot:conflictingObjects:conflictingSnapshots:
_isDBConflict
constraintValues
conflictingSnapshots
databaseSnapshot
_constraint
_databaseObject
_databaseSnapshot
_conflictedValues
_conflictingObjects
_conflictingSnapshots
T@"NSArray",R,C,V_constraint
T@"NSDictionary",R,C,V_conflictedValues
T@"NSManagedObject",R,&,V_databaseObject
T@"NSDictionary",R,&,V_databaseSnapshot
T@"NSArray",R,C,V_conflictingObjects
T@"NSArray",R,C,V_conflictingSnapshots
initWithMergeType:
_mergeChangesStoreUpdatesTrumpForObject:withRecord:
_mergeChangesObjectUpdatesTrumpForObject:withRecord:
mergeToManyRelationshipForSourceObject:withOldSnapshot:newSnapshot:andAncestor:andLegacyPath:
resolveOptimisticLockingVersionConflicts:error:
resolveConstraintConflicts:error:
errorMergePolicy
mergeByPropertyStoreTrumpMergePolicy
mergeByPropertyObjectTrumpMergePolicy
overwriteMergePolicy
rollbackMergePolicy
T@"NSMergePolicy",R
setOptional:
setMaxCount:
setDestinationEntity:
setInverseRelationship:
setDeleteRule:
initWithMigrationManager:
_bySourceAssociationTable
_byDestinationAssociationTable
_byMappingBySourceAssociationTable
_byMappingByDestinationAssociationTable
_migrationManager
_currentMapping
_currentStep
_currentPropertyMapping
_destinationConfigurationForCloudKitValidation
usesStoreSpecificMigrationManager
registeredStoreTypes
isNSValue__
pointerValue
migrationManagerClass
_canMigrateWithMappingModel:
sourceModel
destinationModel
destinationConfigurationForCloudKitValidation
setDestinationConfigurationForCloudKitValidation:
migrateStoreFromURL:type:options:withMappingModel:toDestinationURL:destinationType:destinationOptions:error:
currentEntityMapping
currentPropertyMapping
sourceEntityForEntityMapping:
mappingModel
sourceContext
destinationInstancesForEntityMappingNamed:sourceInstances:
destinationInstancesForSourceRelationshipNamed:sourceInstances:
migrationProgress
cancelMigrationWithError:
setUsesStoreSpecificMigrationManager:
_sourceEntitiesByVersionHash
_destinationEntitiesByVersionHash
_mappingModel
_sourceManagedObjectContext
_destinationManagedObjectContext
_migrationContext
_migrationManagerFlags
_migrationCancellationError
T@"NSString",&,N,V_destinationConfigurationForCloudKitValidation
T@"NSMappingModel",R
T@"NSManagedObjectContext",R
T@"NSEntityMapping",R
Tf,R
fetchRequestForSourceEntityNamed:predicateString:includesSubentities:
removePersistentStore:error:
fetchRequestForSourceEntityNamed:predicateString:
T@"NSString",&,N
initWithSQLCore:priority:seedConnection:
initializationConnection
initWithSQLCore:seedConnection:
disconnectAllConnections
setExclusiveLockingMode:
handleStoreRequest:
scheduleBarrierBlock:
scheduleConnectionsBarrier:
_filter
initForSQLCore:
enumerateAvailableConnectionsWithBlock:
_availableConnections
_allConnections
_poolCounter
_connectionLock
_processingQueue
isWritableFileAtPath:
classForStore:
_unload:
didAddToPersistentStoreCoordinator:
_url
_oidFactories
_defaultFaultHandler
_temporaryIDClass
_coreSpotlightDelegate
_managedObjectModel
_entitiesInConfiguration
T@"NSPersistentStoreCoordinator",R,W,N
T@"NSDictionary",R
T@"NSURL",&
readOnly
TB,GisReadOnly
cachedModelForPersistentStoreWithURL:options:error:
_prepareForExecuteRequest:withContext:error:
_isCloudKitOptioned
_setupObserver
entityIDForEntityDescription:
propertyNamesInHistoryChangeDataForEntityDescription:
_rebuildIndiciesSynchronously:
finishDeferredLightweightMigration:withError:
_entitiesForConfiguration
rowCacheClass
_replacePersistentStoreAtURL:destinationOptions:withPersistentStoreFromURL:sourceOptions:error:
_destroyPersistentStoreAtURL:options:error:
_rekeyPersistentStoreAtURL:options:withKey:error:
_figureOutWhereExternalReferencesEndedUpRelativeTo:
initWithEntityName:dictionaryHandler:
initWithEntityName:managedObjectHandler:
batchInsertRequestWithEntityName:objects:
batchInsertRequestWithEntityName:dictionaryHandler:
batchInsertRequestWithEntityName:managedObjectHandler:
initWithEntity:objects:
initWithEntity:dictionaryHandler:
initWithEntity:managedObjectHandler:
dictionaryHandler
setDictionaryHandler:
managedObjectHandler
setManagedObjectHandler:
setObjectsToInsert:
_insertDictionaryHandler
_insertManagedObjectHandler
T@"NSArray",C,V_objectsToInsert
T@?,C
TQ,R,V_resultType
_insertStatementCache
_batchInsertStatementCache
_deletionStatementCache
_faultingStatementCache
_toManyRelationshipStatementCache
_correlationInsertCache
_correlationDeleteCache
_correlationMasterReorderCache
_correlationMasterReorderCachePart2
_correlationReorderCache
initWithValueCallbacks:preserveToManyRelationships:
initWithPersistentStore:
_externalData
_capacity
_externalDataValueCallbacks
_persistentStoreCacheFlags
valueWithPointer:
isReadableFileAtPath:
metadataForPersistentStoreOfType:URL:options:error:
createDirectoryAtPath:withIntermediateDirectories:attributes:error:
mirroringOptions
cloudKitContainerOptions
initWithCloudKitContainerOptions:
setMirroringDelegate:
validateManagedObjectModel:forUseWithStoreWithDescription:error:
configuration
persistentStoreCoordinator:didSuccessfullyAddPersistentStore:withDescription:
isMainThread
shouldInvokeCompletionHandlerConcurrently
shouldAddStoreAsynchronously
setOption:forMirroringKey:
_destroyPersistentStoreAtURL:withType:options:error:
_replacePersistentStoreAtURL:destinationOptions:withPersistentStoreFromURL:sourceOptions:storeType:error:
_exceptionNoStoreSaveFailureForError:recommendedFrame:
localizedFailureReason
_registerCoreDataStoreClass:forStoreType:
registerStoreClass:forStoreType:
metadataForPersistentStoreOfType:URL:error:
setMetadata:forPersistentStoreOfType:URL:options:error:
setMetadata:forPersistentStoreOfType:URL:error:
setMetadata:forPersistentStore:
metadataForPersistentStore:
addPersistentStoreWithDescription:completionHandler:
_removeAllPersistentStores:
persistentStoreForURL:
URLForPersistentStore:
migratePersistentStore:toURL:options:withType:error:
destroyPersistentStoreAtURL:withType:options:error:
replacePersistentStoreAtURL:destinationOptions:withPersistentStoreFromURL:sourceOptions:storeType:error:
_miniLock
_persistentStores
_queueLabel
_extendedStoreURLs
_lastOpenError
_xpcBundleID
_xpcProcessName
sharedApplication
endBackgroundTask:
removeObjectIdenticalTo:
_canSaveGraphRootedAtObject:intoStore:withPreviouslyChecked:withAcceptableEntities:
_doPreSaveAssignmentsForObjects:intoStores:
_checkRequestForStore:withContext:originalRequest:andOptimisticLocking:
_saveRequestForStore:withContext:originalRequest:andOptimisticLocking:
_assignObject:toPersistentStore:forConfiguration:
ubiquityStoreURLForStoreURL:ubiquityIdentityToken:ubiquityName:
currentQueryGenerationTokenFromStores:
_destroyPersistentStoreAtURL:withType:error:
_rekeyPersistentStoreAtURL:type:options:withKey:error:
_refreshTriggerValuesInStore:error:
dropPersistentHistoryforPersistentStoreWithURL:options:error:
removePersistentHistoryFromPersistentStoreAtURL:options:error:
finishDeferredLightweightMigration:
finishDeferredLightweightMigrationTask:
handleFaultingError:fromContext:
updateWithChange:
analyzedObjectID
originalTransactionNumber
originalChangeType
finalTransactionNumber
finalChangeType
finalChangeAuthor
T@"NSNumber",R,N
Tq,R,N
T@"NSDictionary",R,N
initWithOriginalChange:
_analyzedObjectID
_originalTransactionNumber
_originalChangeType
_finalTransactionNumber
_finalChangeType
_finalChangeAuthor
T@"NSManagedObjectID",R,N,V_analyzedObjectID
T@"NSNumber",R,N,V_originalTransactionNumber
Tq,R,N,V_originalChangeType
T@"NSNumber",R,N,V_finalTransactionNumber
Tq,R,N,V_finalChangeType
T@"NSDictionary",R,N,V_tombstone
T@"NSString",R,N,V_finalChangeAuthor
compoundPredicateType
initWithOperatorType:
symbol
initWithObjectFromUserInfo:onAttributeNamed:onEntity:
validate:
isEqualToExtension:
insertSQLStrings
dropSQLStrings
bulkUpdateSQLStrings
_predicateString
_attribute
_destinationEntity
_destinationAttributes
_mToManyInnerFetchWhereClause
_mToManyDecrementWhenClause
_mToManyIncrementWhenClause
_mOfClause
_mOldMatchingClause
_mNewMatchingClause
_mColumnChangedClause
_mSqlDropStrings
_mBulkChangeStrings
_insertSQLStrings
T@"NSArray",R,N,V_insertSQLStrings
batchUpdateRequestWithEntityName:
TB,N,G_secureOperation,S_setSecureOperation:
T@"NSEntityDescription",R,V_entity
T@"NSPredicate",&,V_predicate
T@"NSDictionary",C,V_columnsToUpdate
_databaseUUID
_nextPK64
_mappings
orPredicateWithSubpredicates:
moveReceiptsMatchingRecordIDs:inManagedObjectContext:persistentStore:error:
countMoveReceiptsInStore:matchingPredicate:withManagedObjectContext:error:
recordMetadata
T@"NSCKRecordMetadata",&,D,N
initWithName:managedObjectModel:
discoverDefaultContainerIdentifier
initWithContainerIdentifier:
persistentStoreDescriptions
setCloudKitContainerOptions:
containerIdentifier
setPersistentStoreDescriptions:
setProgressProvider:
setOption:forKey:
_loadStoreDescriptions:withCompletionHandler:
initWithOptions:completionBlock:
setSchemaInitializationOptions:
newBackgroundContext
requestFinished
setObjectIDsToSerialize:
executeRequest:inContext:error:
wait
objectIDsToSerialize
recordForManagedObjectID:
recordsForManagedObjectIDs:
creatorUserRecordID
fetchSharesMatchingObjectIDs:error:
currentUserParticipant
permission
preserveLegacyRecordMetadataBehavior
initWithObjectID:recordName:
initWithZoneID:
setNeedsUpload:
acceptedShareMetadatas
archivingUtilities
setEncodedShareData:
setNeedsShareUpdate:
initWithUserIdentityLookupInfos:
setShareParticipantFetchedBlock:
setFetchShareParticipantsCompletionBlock:
setNeedsShareDelete:
initWithRecordZoneID:
assignManagedObjects:toCloudKitRecordZone:inPersistentStore:error:
setNeedsLocalDelete:
setCkRecordSystemFields:
setEncodedRecord:
eventUpdated:
initializeCloudKitSchemaWithOptions:error:
recordIDForManagedObjectID:
recordIDsForManagedObjectIDs:
canUpdateRecordForManagedObjectWithID:
canDeleteRecordForManagedObjectWithID:
canModifyManagedObjectsInStore:
acceptShareInvitationsFromMetadata:intoPersistentStore:completion:
acceptShareInvitationsFromURLs:intoPersistentStore:completion:
persistUpdatedShare:inPersistentStore:completion:
fetchParticipantsMatchingLookupInfos:intoPersistentStore:completion:
purgeObjectsAndRecordsInZoneWithID:inPersistentStore:completion:
fetchSharesInPersistentStore:error:
shareManagedObjects:toShare:completion:
_operationTimeout
_metadataContext
T@"NSPersistentCloudKitContainerOptions",&
_requestGroup
_recordName
T@"NSManagedObjectID",R,N,V_objectID
T@"NSString",R,N,V_recordName
_encodedPropertyFlagsForFlags:
_initializeExtraIVars
setValidationPredicates:withValidationWarnings:
setIndexedBySpotlight:
setStoredInExternalRecord:
_validationPredicates
_validationWarnings
_propertyDescriptionFlags
_entitysReferenceIDForProperty
T@"NSString",C,N
optional
TB,GisOptional
transient
TB,GisTransient
indexed
TB,GisIndexed
indexedBySpotlight
TB,GisIndexedBySpotlight
storedInExternalRecord
TB,GisStoredInExternalRecord
_setOrdered:
isSpotlightIndexed
setSpotlightIndexed:
isStoredInTruthFile
setStoredInTruthFile:
isStoredInTruth
setStoredInTruth:
stringByDeletingPathExtension
_managedObjectContextDidSave:
controller:sectionIndexTitleForSectionName:
controller:didChangeContentWithSnapshot:
controller:didChangeContentWithDifference:
controllerDidChangeContent:
controller:didChangeObject:atIndexPath:forChangeType:newIndexPath:
controller:didChangeSection:atIndex:forChangeType:
controllerWillChangeContent:
_managedObjectContextDidChange:
_managedObjectContextDidChangeObjectIDs:
_managedObjectContextDidMutateObjectIDs:
indexAtPosition:
numberOfObjects
indexPathWithIndexes:length:
uppercaseString
indexTitle
sectionIndexTitles
deleteCacheWithName:
initWithFetchRequest:managedObjectContext:sectionNameKeyPath:cacheName:
performFetch:
_fetchedObjects
fetchedObjects
objectAtIndexPath:
indexPathForObject:
sectionIndexTitleForSectionName:
sections
sectionForSectionIndexTitle:atIndex:
sectionNameKeyPath
cacheName
_sectionNameKeyPath
_sectionNameKey
_cacheName
_remappedPredicate
_originalPredicate
_cachePath
_sortKeys
_sections
_sectionsByName
_sectionIndexTitles
_sectionIndexTitlesSections
_indexCache
_indexCacheOffsets
T@"NSFetchRequest",R,N,V_fetchRequest
T@"NSManagedObjectContext",R,N,V_managedObjectContext
T@"NSString",R,N,V_sectionNameKeyPath
T@"NSString",R,N,V_cacheName
T@"<NSFetchedResultsControllerDelegate>",N
initWithContentsOfMappedFile:
dictionaryWithObjects:forKeys:
ascending
sortUsingComparator:
changeWithObject:type:index:
changeWithObject:type:index:associatedIndex:
initWithChanges:
filteredSetUsingPredicate:
appendSectionsWithIdentifiers:
objects
appendItemsWithIdentifiers:intoSectionWithIdentifier:
reloadItemsWithIdentifiers:
bundleIdentifier
compareObject:toObject:
_initWithDestinationName:valueExpression:
_transformValidations
_propertyTransforms
_valueExpression
_propertyMappingFlags
initWithName:valueExpression:
_property
_propertyName
_prerequisiteTransform
_replaceMissingValueOnly
setMinCount:
setOrdered:
_lazyDestinationEntityName
_inverseRelationship
_lazyInverseRelationshipName
_maxCount
_minCount
_deleteRule
T@"NSEntityDescription",N
T@"NSRelationshipDescription",N
toMany
TB,R,GisToMany
ordered
TB,GisOrdered
_versionHash:inStyle:proxyContext:
destinationEntityExternalName
foreignKeys
joins
joinSemantic
_destinationEntityExternalName
_foreignKeys
_joins
_joinSemantic
_includePrivateTransactions
_updatedObjects
_optimisticallyLockedObjects
_mutatedObjectIDsNotifications
T@"NSSet",R
generateSubqueryVariableAlias
_nextTableAlias
_nextVariableAlias
_nextTempTableAlias
_tableBase
_variableBase
sharedScheduler
tearDown
newMetadataModel
URLByAppendingPathComponent:isDirectory:
loadPersistentStoresWithCompletionHandler:
handleMessage:reply:
setBundleIdentifier:
setStorePath:
setFileProtectionType:
setStoreConfigurationName:
setContainerIdentifier:
scheduledActivities
activityType
containerProvider
setActivityUUID:
setActivityType:
setRegisteredClient:
setScheduledAt:
activityUUID
initWithIdentifier:container:priority:
setAdditionalXPCActivityCriteria:
additionalXPCActivityCriteria
populateFromCriteria:
scheduler
registerActivityIdentifier:handler:
submitActivity:
initWithUUIDString:
registeredClient
storePath
storeConfigurationName
setConfiguration:
fileProtectionType
setAutomaticallyScheduleImportAndExportOperations:
addObserverForName:object:queue:usingBlock:
finishedActivity:withResult:inManagedObjectContext:
removeObserver:
unregisterActivityIdentifier:
xpcActivityCriteria
fileDescriptor
checkAndCreateDirectoryAtURL:wipeIfExists:error:
initWithCString:encoding:
setUp
T@"PFCloudKitContainerProvider",R,N
T@"CKScheduler",R,N
initWithListener:configuration:
listener
_initialized
_configuration
_metadataContainer
_initializationGroup
_lastInitializationError
_containerProvider
_scheduler
T@"NSXPCListener",R,N,V_listener
T@"CDDCloudKitServerConfiguration",R,C,N,V_configuration
T@"PFCloudKitContainerProvider",R,N,V_containerProvider
T@"CKScheduler",R,N,V_scheduler
initWithEntity:propertyDescription:
initForReadOnlyFetching
initForReadOnlyFetchWithExpression:
initWithValue:sqlType:propertyDescription:allowCoercion:
setInt64:
setUnsignedInt:
int64
unsignedInt
setSQLType:
hasObjectValue
allowsCoercion
setTombstonedPropertyDescription:
tombstonedPropertyDescription
_sqlType
_propertyDescription
_tombstonedPropertyDescription
_int64
validateForUseWithStore:error:
entityNameToAttributesToFetch
setEntityNameToAttributesToFetch:
setEntityNameToAttributeNamesToFetch:
setObjectIDsToFetch:
objectIDsToFetch
_objectIDsToFetch
_entityNameToAttributesToFetch
_entityNameToAttributeNamesToFetch
_editable
_perOperationObjectThreshold
T@"NSArray",C,N,V_objectIDsToFetch
T@"NSDictionary",R,C,N
initWithRequest:success:madeChanges:updatedObjectIDs:failedObjectIDToError:error:
updatedObjectIDs
failedObjectIDsToError
_updatedObjectIDs
_failedObjectIDsToError
T@"NSArray",R,N,V_updatedObjectIDs
T@"NSDictionary",R,N,V_failedObjectIDsToError
hasRecordZoneNum
setHasRecordZoneNum:
hasSubscriptionNum
setHasSubscriptionNum:
setCkRecordZoneName:
setCkOwnerName:
setDatabase:
fetchZoneIDsAssignedToObjectsWithIDs:fromStore:inContext:error:
hasRecordZone
setHasRecordZone:
hasSubscription
setHasSubscription:
T@"CKServerChangeToken",&,D,N
database
T@"NSCKDatabaseMetadata",&,D,N
records
mirroredRelationships
supportsFetchChanges
supportsAtomicChanges
supportsRecordSharing
supportsZoneSharing
needsImport
needsRecoveryFromZoneDelete
needsRecoveryFromUserPurge
needsShareUpdate
needsShareDelete
needsRecoveryFromIdentityLoss
keypathExpressionIsSafeLHSForIn:
initWithExpression:allowToMany:inScope:
initForIndexNamed:onEntity:properties:ranges:inScope:
_indexName
_ranges
cloneForReadOnlyFetching
copyValuesForReadOnlyFetch:
initWithColumnName:sqlType:
_columnName
initWithPredicate:inScope:
initWithPredicate:inScope:inContext:
disambiguatingEntity
disambiguationKeypath
disambiguationKeypathHasToMany
isOrScoped
setDisambiguatingEntity:withKeypath:hasToMany:
_subclauses
_disambiguatingEntity
_disambiguationKeypath
_disambiguationKeypathHasToMany
cloudKitMetadataTransformerName
isTargetColumnsScoped
governingEntityForKeypathExpression:
_lastScopedItem
isIndexScoped
initWithOptions:managedObjectContext:store:
isPrivateTransaction:
processTransaction:withContext:error:
isPrivateTransactionAuthor:
isPrivateContextName:
initWithOptions:managedObjectContext:
instantiateNewAnalyzerContextForChangesInStore:
_lastProcessedToken
createFetchRequestContextForObjectsToUpdate
_updateStatement
T@"NSBatchUpdateRequest",R,N
distantPast
_newZeroingDataWithBytes:length:
initWithManagedObjectModel:configurationName:brokenHashVersion:
sourceEntity
whitespaceCharacterSet
initWithObjectID:relationship:context:sqlCore:
initWithRequest:context:sqlCore:idSets:columnName:
initWithResultDictionary:storeID:
setObject:forKeyedSubscript:
rootEntity
initForEntitiesAndCounts:context:sqlCore:
removeItemAtURL:error:
copyItemAtURL:toURL:error:
moveItemAtURL:toURL:error:
initAsQueryGenerationTrackingConnectionForSQLCore:
registerCurrentQueryGenerationWithStore:
setColoredLoggingDefault:
presentedItemURL
presentedItemOperationQueue
relinquishPresentedItemToReader:
relinquishPresentedItemToWriter:
savePresentedItemChangesWithCompletionHandler:
accommodatePresentedItemDeletionWithCompletionHandler:
presentedItemDidMoveToURL:
presentedItemDidChange
presentedItemDidChangeUbiquityAttributes:
presentedItemDidGainVersion:
presentedItemDidLoseVersion:
presentedItemDidResolveConflictVersion:
accommodatePresentedSubitemDeletionAtURL:completionHandler:
presentedSubitemDidAppearAtURL:
presentedSubitemAtURL:didMoveToURL:
presentedSubitemDidChangeAtURL:
presentedSubitemAtURL:didGainVersion:
presentedSubitemAtURL:didLoseVersion:
presentedSubitemAtURL:didResolveConflictVersion:
primaryPresentedItemURL
observedPresentedItemUbiquityAttributes
T@"NSURL",R,C
T@"NSOperationQueue",R,&
objectIDFactoryForPersistentHistoryEntity:
_newObjectIDForEntity:referenceData64:
hasAncillaryModels
_schemaValidationConnection
_dispatchManager
_generationalRowCache
_sqlCoreStateLock
_externalDataReferencesDirectory
_externalDataLinksDirectory
_fileBackedFuturesPath
_transactionInMemorySequence
_metadataIsClean
_sqlCoreFlags
_queryGenerationTrackingConnection
_writerSerializationMutex
_ancillaryModels
_ancillarySQLModels
_historyTrackingOptions
_dbKey
_usedIndexes
_remoteStoresDidChange
_remoteNotificationToken
T@"NSSQLModel",R,N
T@"NSDictionary",R,N,V_ancillaryModels
setPreviousServerChangeToken:
setRecordZoneWithIDChangedBlock:
setRecordZoneWithIDWasDeletedBlock:
setRecordZoneWithIDWasPurgedBlock:
setChangeTokenUpdatedBlock:
setFetchDatabaseChangesCompletionBlock:
setCurrentChangeToken:
initWithChangedRecordZoneIDs:options:request:
initWithDeletedRecordZoneID:options:request:
initWithPurgedRecordZoneID:options:request:
madeChanges
_workItems
_workItemResults
_updatedDatabaseChangeToken
_totalImportedBytes
initWithEntity:inverseToMany:
setConstrained:
containsIndex:
addIndexes:
initWithModel:entityDescription:
_entityDescription
_propertyAllCache
_propertiesAllToManysCache
_propertyManyToManyCache
_columnsToFetch
_ekColumns
_fkColumns
_fokColumns
_attrColumns
_virtualFKs
_primaryKey
_entityKey
_optLockKey
_rootEntity
_mappingGenerator
_entityID
_subentityMaxID
_toOneRange
_uniqueProperties
_multicolumnUniquenessConstraints
_fetch_entity_plan
_rtreeIndices
_odiousHashHackStorage
_derivedAttributes
_derivedAttributeExtension
_sqlentityFlags
initWithError:annotation:
_entries
_annotation
_allowToMany
selectIntermediate
progressProvider
subpathsAtPath:
URLByAppendingPathComponent:
containerOptions
accountStatus
deviceToDeviceEncryptionAvailability
accountInfoWithCompletionHandler:
publicCloudDatabase
privateCloudDatabase
sharedCloudDatabase
initWithRecordZonesToSave:recordZoneIDsToDelete:
setModifyRecordZonesCompletionBlock:
setNeedsRecoveryFromIdentityLoss:
capabilities
setSupportsFetchChanges:
setSupportsRecordSharing:
setSupportsAtomicChanges:
setSupportsZoneSharing:
initWithRecordZoneIDs:
setFetchRecordZonesCompletionBlock:
initWithSubscriptionID:
setShouldSendContentAvailable:
setNotificationInfo:
initWithSubscriptionsToSave:subscriptionIDsToDelete:
subscriptionID
setModifySubscriptionsCompletionBlock:
fetchUserRecordIDWithCompletionHandler:
setBoolValue:
setStringValue:
initWithObjectIDs:
setAutomaticallyRetryNetworkFailures:
setDiscretionaryNetworkBehavior:
initWithSetupRequest:mirroringOptions:observedStore:
_database
_databaseSubscription
_largeBlobDirectoryURL
_cloudKitSemaphore
_storeMonitor
_setupEvent
_setupRequest
_currentUserRecordID
fileHandleForWritingToURL:error:
_valid
_interrupted
_invalidated
isFunctionScoped
_promoteJoinsForSubqueryScopedKeypaths
fetchIntermediateForKeypathExpression:
fetchIntermediate
_selectClause
_groupByClause
_havingClause
_offsetClause
_groupByKeypaths
_isDictionaryCountFetch
_joinIntermediates
_joinKeypaths
initWithEntity:foreignKey:
initWithUnsignedInt:
initForReadOnlyFetchingOfEntity:toOneRelationship:
_foreignKey
_columnValue
initWithEntity:toOneRelationship:
_toOne
indexStatistics
logResetSyncNotification:
_purgedRecordZoneID
_success
initWithConstantValue:inScope:
setOperationConfiguration:
setQualityOfService:
setAllowsCellularAccess:
allowsCellularAccess
qualityOfService
operationConfiguration
_operationConfiguration
T@"CKOperationConfiguration",&,N,V_operationConfiguration
Tq,N
isUnique
average:
isSimpleKeypath:
insertString:atIndex:
isUpdateScoped
onlyFetchesAggregates
isHavingScoped
function
onesComplement:
abs:
noindex:
add:to:
from:subtract:
multiply:by:
divide:by:
modulus:by:
bitwiseAnd:with:
bitwiseOr:with:
leftshift:by:
rightshift:by:
distinct:
length:
indexed:by:
initWithEntity:alias:fetchColumns:inScope:
initWithSortDescriptors:inScope:
initWithLimit:inScope:
initWithOffset:inScope:
initWithProperties:inScope:
initWithEntity:alias:inScope:
initWithFetchIntermediate:inScope:
initForIndex:withScope:
_persistentStore
encodeSystemFieldsWithCoder:
_strictlyUnarchivedObjectOfClasses:fromData:error:
isIndexExpressionScoped
expressionIsBasicKeypath:
governingEntity
_promoteJoinsForSubqueryScopedKeypath:
_generateSQLForKeyPathExpression:allowToMany:inContext:
_generateSQLForVariableExpression:allowToMany:inContext:
bindVariables
_scope
T@"NSSQLEntity",R,N
addConstrainedEntityToPreflight:
_migrationStatements
_sqlEntitiesToCreate
_constrainedEntitiesToPreflight
_hasWorkToDo
_needsMetdataMigrationToNSCKRecordMetadata
_needsOldTableDrop
_needsMirroredRelationshipsLinkedToZone
_needsImportAfterClientMigration
_needsBatchUpdateForSystemFieldsAndLastExportedTransaction
_needsAnalyzedHistoryCheck
_currentModel
_sqlModel
_storeMetadataModel
_storeSQLModel
_storeMetadataVersion
_storeMetadataVersionHashes
cloudKitMachServiceName
createCloudKitServerWithMachServiceName:andStorageDirectoryPath:
_storeDirectoryPath
_machServiceName
compareToken:error:
_storeTokens
_bundleIdentifier
_storeFileHandle
_storeFileProtectionClass
_storeType
_storeConfigurationName
_containerIdentifier
stringByReplacingCharactersInRange:withString:
bindIntarrays
_cachedDeleteTriggersByEntity
_externalReferences
Tr^v,R,N
setDictionary:
compare:options:
query
commitTransaction
rollbackTransaction
execute
sqlStatement
initWithName:storeID:
rangeValue
_bytesPtrForStore
_bytesLengthForStore
valueWithRange:
localizedStandardCompare:
setWithSet:
dateWithTimeIntervalSince1970:
initWithSQLEntity:objectID:
indexOfObjectPassingTest:
_workingURL
_dbPath
_transactionIsOpen
_transactionIsCurrentlyReadOnly
_useSyntaxColoredLogging
_sqlStatement
_metadataColumns
_vmstatement
_rowsProcessedCount
_lastEntityKey
_finalEntity
_lastEntity
_fetchPKStatement
_updatePKStatement
_beginStatement
_commitStatement
_rollbackStatement
_vmCachedStatements
_pragmaSettings
_mObjectIDsUpdatedByTriggers
_mObjectIDsInsertedByDATriggers
_mObjectIDsUpdatededByDATriggers
_saveRequest
_statementCachesByEntity
_cachedEntityUpdateStatements
_cachedEntityConstrainedValuesUpdateStatements
_timeOutOption
_timeOutIncrement
_extraBuffersForRegisteredFunctions
_dbPathRegisteredWithBackupd
_vacuumTracker
_temporaryTables
_sqliteConnectionFlags
_debugInode
_activeGenerations
_transactionStringName
operatorWithType:modifier:options:
performOperationUsingObject:andObject:
retainedLocale
lengthOfBytesUsingEncoding:
newStringFrom:usingUnicodeTransforms:
initWithLongLong:
_sourceAlias
_destinationAlias
_correlationAlias
_direct
_substitutePK
_correlationTableName
_orderColumnName
operationID
setRecordIDs:
setDesiredKeys:
setPerRecordProgressBlock:
setPerRecordCompletionBlock:
setFetchRecordsCompletionBlock:
createMirroringResultForRequest:success:madeChanges:error:
entityNameToAttributesToUpdate
entityNameToRelationshipsToUpdate
_operationsToExecute
containerWithIdentifier:
containerID
initWithContainerID:options:
initWithCKEventFetchRequest:
fetchEventsAfterDate:
fetchEventsAfterEvent:
fetchEventsMatchingFetchRequest:
fetchRequestForEvents
_ckEventFetchRequest
_generateModel:error:
_mom
_entitiesByName
_entityDescriptionToSQLMap
_brokenHashVersion
_retainLeopardStyleDictionaries
_modelHasPrecomputedKeyOrder
_hasVirtualToOnes
_entityIDOffset
_lastEntityID
_pendingImportRequest
_pendingExportRequest
_pendingSetupRequest
_pendingDelegateResetRequest
_pendingResetRequest
_pendingFetchRecordsRequest
_pendingResetMetadataRequest
_pendingSerializationRequest
_pendingInitializeSchemaRequest
_pendingExportProgressRequest
_pendingAcceptShareInvitationRequest
_activeRequest
setFinalChangeTypeNum:
originalChangeTypeNum
finalChangeTypeNum
setOriginalChangeTypeNum:
mergeWithState:
T@"NSNumber",R,D,N
T@"NSDictionary",R,D,N
T@"NSString",R,D,N
_cachesByEntity
initWithError:completionBlock:
_causedByError
recordZones
setCkShare:
comparator
localizedCompare:
reverseNullOrder
fetch_request
requested_batch_size
sql_core
sql_model
statement_entity
current_context
row_cache
entity_for_ek_funptr
flags
totalUnitCount
isCancelled
_compoundPredicate
_allModifierPredicates
_setExpressions
_subqueries
boolValueNum
setBoolValueNum:
transformedValue
dateValue
setTransformedValue:
setIntegerValue:
setKey:
T@"NSObject<NSSecureCoding>",&,D,N
shouldDefer
allRequestClasses
initWithActivity:options:completionBlock:
requestCompletionBlock
_requestIdentifier
_deferredByBackgroundTimeout
_activity
T@"NSUUID",R,N,V_requestIdentifier
T@"NSCloudKitMirroringRequestOptions",R,C,N,V_options
T@?,R,C,N,V_requestCompletionBlock
_recordZoneIDsToReset
objectIDsToReset
setObjectIDsToReset:
_objectIDsToReset
T@"NSSet",C,N,V_objectIDsToReset
schemaInitializationOptions
_schemaInitializationOptions
TQ,N,V_schemaInitializationOptions
_extension
_knownValues
_children
_fetchIndex
_slot
constrained
TB,N,GisConstrained
variable
initForReadOnlyFetchWithEntity:propertyDescription:
inverseOrderKey:
resolveVariableExpression:inContext:
_onlyFetchesAggregates
_variableToAliasMappings
_propertyToAliasMappings
_setForeignOrderKey:
_inverse
newBatchAllocation:count:withOwnedObjectIDs:
fileSize
newObjectIDForToOne:
setIsFaultRequest:
_forConflictAnalysis
_debug
initForCorrelationTarget:alias:fetchColumns:inScope:
_entityAlias
_correlationTarget
_fetchColumns
_useDistinct
_columnAlias
_isCount
_comparisonPredicateScopedItem
_effectiveLeftExpression
_effectiveRightExpression
_bindVariables
_bindIntarrays
_isImpossibleCondition
_trackChangedRowCount
_fakeEntityForFetch
_cachedStatementInfo
_cachedSQLiteStatement
recordZonesToSave
recordZoneIDsToDelete
processAnalyzedHistoryInStore:inManagedObjectContext:error:
checkForObjectsNeedingExportInStore:andReturnCount:withManagedObjectContext:error:
exporter:willScheduleOperations:
setSavePolicy:
setModifyRecordsCompletionBlock:
setLastExportedTransactionNumber:
setPendingExportTransactionNumber:
initWithOptions:request:monitor:workQueue:
_operationIDToResult
_exportCompletionBlock
_workQueue
_exportContext
_monitor
pflogFaultLog
T@"NSObject<OS_os_log>",R
_names
checkPredicate:
_foundKeypath
setGoverningAlias:
setGoverningEntity:
_trailingKeypath
_variableExpression
_fetchIntermediate
_selectFromEntity
_selectFromCorrelationTarget
_selectEntityAlias
_governingEntityForVariable
_variableColumn
_variableAlias
_targetColumn
_targetAlias
_keypathsToPromote
_hasTrailingFunction
_onlyTrailIsCount
_subqueryHasTruePredicate
ancillaryModelFactoryClasses
clientModel
allEntities
entitiesByPath
clientEntityCount
_clientModel
_allEntities
_models
_indexedEntities
_clientEntityCount
_entityCount
_entitiesByPath
_modelEntityCounts
T@"NSManagedObjectModel",R,N,V_clientModel
T@"NSArray",R,N,V_allEntities
T@"NSDictionary",R,N,V_entitiesByPath
TQ,R,N,V_clientEntityCount
_foreignEntityKey
_foreignOrderKey
_isVirtual
_map
_relatedNodes
_externalName
capitalizedString
arrayByAddingObjectsFromArray:
migrationStoreOptionsFromStoreOptions:
sourceModelForStoreAtURL:metadata:error:
createMigrationManagerForSourceModel:destinationModel:error:
migrateStoreAtURL:withManager:metadata:options:error:
_sourceURL
_sourceConfiguration
_sourceOptions
_sourceMetadata
_destinationURL
_destinationType
_destinationConfiguration
_destinationOptions
_resourceBundles
_workingWithSkewedSource
_forcedMigration
URLForDirectory:inDomain:appropriateForURL:create:error:
stringByAppendingPathExtension:
destinationURLForMigrationSourceURL:createDocumentReplacementDirectory:error:
bits
_counter
_uuid128
_cachedObjectForKey:value:
_localizationBundle
_modelStringsFileName
_localizationDictionary
_hasSetLocalizationDictionary
_mergedPolicies
T@"NSEntityDescription",R,D
T@"NSManagedObjectID",R,D
databaseScopeNum
setDatabaseScopeNum:
setDatabaseScope:
setDatabaseName:
databaseName
sectionId
_controller
_indexTitle
_sectionOffset
_numberOfObjects
_oldSectionNumber
_sectionObjects
_sectionId
T@,R,N,V_sectionId
T@"NSString",R,N,V_name
T@"NSString",R,N,V_indexTitle
TQ,R,N,V_numberOfObjects
payload
initWithContainerIdentifier:error:
_errorCode
_errorDomain
initWithContainerIdentifier:result:
_requestClass
validateCloudKitEntityMigration
_entityMapping
_sqlValuesByColumnName
_sourceEntitiesByToOneWithNewEntityKey
_dstEntity
_srcEntity
_migrationType
_addedManyToManys
_removedManyToManys
_transformedManyToManys
_processedTransforms
_pendingTransforms
_updateUsingCopy
T@"NSSQLEntity",R,N,V_srcEntity
_updateColumns
_intarrayTable
_intarrayTableName
setWithCapacity:
_sourceRootEntity
_addedEntityMigrations
_removedEntityMigrations
_copiedEntityMigrations
_transformedEntityMigrations
_migrationByEntity
_tempTableNames
_hasComplexSchemaTransformations
_addedColumnSet
_renamedTableSet
_renamedColumnSet
_renamedMTMSet
_raisedColumnSet
_droppedEntitySet
_collapsedEntitySet
_columnsUpgradedToMandatory
_delayedDropColumnSet
T@"NSSQLEntity",R,N,V_rootEntity
initWithManagedObject:withRecordName:relatedToRecordWithRecordName:byRelationship:
initWithRecordID:recordType:managedObjectModel:andType:
initWithRecord:andValues:withManagedObjectModel:andType:
_isValidMirroredRelationshipRecord:values:
updateRelationshipValueUsingImportContext:andManagedObjectContext:error:
_relationshipDescription
_inverseRelationshipDescription
_manyToManyRecordID
_manyToManyRecordType
_ckRecordID
_relatedCKRecordID
populateRecordValues:
_relatedRecordID
_recordID
initWithOptions:monitor:assetStorageURL:workQueue:andDatabase:
_assetStorageURL
_annotatesMigrationMetadata
isEqualToValue:
_setAnnotatesMigrationMetadata:
_dstModel
_srcModel
_tableGenerationSQL
_existingTableNames
_reindexedEntities
_reindexedPropertiesByEntity
_sourceToDestinationEntityMap
_tableMigrationDescriptionsByEntity
_hasPKTableChanges
_pkTableUpdateStatements
_attributeExtensionsToUpdate
_indexesToCreate
_indexesToDrop
_defaultValueStatements
_derivationsToDrop
_derivationsToRun
_historyMigrationPropertyDataForEntityCache
_cloudKitUpdateStatements
_hasCloudKitTables
_hasDeferredLightweightMigration
initWithRecordType:recordID:
ckAssetThresholdBytes
writeToURL:options:error:
initWithFileURL:
representativeValueForAttributeType:defaultValue:
filterUsingPredicate:
fileURL
dataUsingEncoding:allowLossyConversion:
isUploaded
ckRecordID
setIsPending:
changedKeys
cloudKitSerializer:safeSaveURLForAsset:
initWithContentsOfURL:options:error:
cloudKitSerializer:failedToUpdateRelationship:withError:
needsDelete
initWithStoreMetadata:directory:originalFileURL:
initWithContentsOfURL:encoding:error:
encryptedValueStore
initWithMirroringOptions:metadataCache:recordNamePrefix:
_manyToManyRecordNameToRecord
_recordNamePrefix
_writtenAssetURLs
_metadataCache
_recordZone
_affectedStores
setEstimatedResultCount:
_estimatedResultCount
T@"NSFetchRequest",R,V_fetchRequest
T@?,R,V_requestCompletionBlock
Tq,N,V_estimatedResultCount
forwardingTargetForSelector:
_sourceBuffer
classForArchiver
setDerivationExpression:
_derivationExpression
_filteringPredicate
_payload
enumerateByteRangesUsingBlock:
getBytes:
_fileURL
_openfd
_activeMap
_mapRefCount
initWithBytesNoCopy:length:
rangeOfData:options:range:
writeToFile:atomically:
writeToURL:atomically:
_aData
_byteCount
_bytesPtrForExternalReference
initForUbiquityDictionary:store:
initForExternalLocation:safeguardLocation:data:protectionLevel:
_setBytesForExternalReference:
_writeExternalReferenceToInterimLocation
_moveExternalReferenceToPermanentLocation
_deleteExternalReferenceFromPermanentLocation
databaseValue
_createdByUbiquityImport
_ubiquitousLocation
_externalDataFlags
insertObjects:count:atIndex:
firstIndex
minusOrderedSet:
unionOrderedSet:
sortRange:options:usingComparator:
_setProcessingIdempotentKVO:
sortWithOptions:usingComparator:
_orderKeys
_grottyHack
_forcedKeys
initWithArray:copyItems:
indexOfObject:inSortedRange:options:usingComparator:
indexSetWithIndex:
moveObjectsAtIndexes:toIndex:
_shareURLsToAccept
_shareMetadatasToAccept
initWithRequest:acceptedShares:acceptedShareMetadatas:error:
acceptedShares
setAcceptedShares:
setAcceptedShareMetadatas:
_acceptedShares
_acceptedShareMetadatas
T@"NSArray",&,N,V_acceptedShares
T@"NSArray",&,N,V_acceptedShareMetadatas
operationMemoryThresholdBytes
_parsedOptions
_deletedRecordZoneID
_cd_version
_cd_flags
_cd_nullFlags_
_realFetch
_changedRecordZoneIDs
_deletedRecordZoneIDs
_purgedRecordZoneIDs
_updatedChangeToken
identifierForNewStoreAtURL:
newObjectIDForEntity:referenceObject:
_lastIdentifier
_reserveda
_reservedb
updateWithValues:version:
_insertObjectMethod
_insertMethod
_replaceMethod
_replaceObjectMethod
initWithOrderedSet:copyItems:
intersectsOrderedSet:
isSubsetOfOrderedSet:
reverseObjectEnumerator
reversedOrderedSet
indexesOfObjectsPassingTest:
exchangeObjectAtIndex:withObjectAtIndex:
setObject:atIndex:
intersectOrderedSet:
_mutableOrderedSet
_userInfoObject
_components
_attributeName
_rtreeTableName
_attributeDescription
_latProp
_longProp
_dropSQLStrings
_bulkUpdateSQLStrings
_maxConnections
activityTypeNum
setActivityTypeNum:
setIsUserRequestedBackupTask:
isUserRequestedBackupTask
scheduledAt
T@"CDDCloudKitRegisteredClient",&,D,N
setType:
sqlitePragmas
persistentStoreDescriptionWithURL:
inMemoryPersistentStoreDescription
timeout
setTimeout:
setValue:forPragmaNamed:
setShouldAddStoreAsynchronously:
setShouldInvokeCompletionHandlerConcurrently:
shouldMigrateStoreAutomatically
setShouldMigrateStoreAutomatically:
shouldInferMappingModelAutomatically
setShouldInferMappingModelAutomatically:
usesPersistentHistoryTracking
setUsesPersistentHistoryTracking:
T@"NSString",C,V_type
T@"NSString",C,V_configuration
T@"NSURL",C,V_url
expressionWithFormat:
_objectFromUserInfo
_keypath
_countedRelationship
T@"NSArray",R,N,V_dropSQLStrings
T@"NSArray",R,N,V_bulkUpdateSQLStrings
_recordZoneIDToZoneMetadata
_recordIDToMirroredRelationshipOrRecordMetadata
_zoneIDToMtmKeyToMirroredRelationship
_objectIDToRelationshipNameToExistingMTMKeys
_objectIDToChangedPropertyKeys
_invalidatedMTMKeys
_isHandlingExpressions
initWithDatabase:options:
_mirroringDelegateOptions
_perOperationBytesThreshold
_triggerSQL
_migrationSQL
setRecordZoneName:
setRecordZoneOwnerName:
setCdEntityName:
setRelatedEntityName:
setRelatedRecordName:
setRelatedRecordZoneName:
setRelatedRecordZoneOwnerName:
setRelationshipName:
setOperation:
operation
T@"NSCKImportOperation",&,D,N
initWithName:
URLsForDirectory:inDomains:
_createDefaultStoreDescriptions
defaultDirectoryURL
persistentStoreDescriptionClass
URLForResource:withExtension:
_newModelForName:
stringByStandardizingPath
persistentContainerWithName:
persistentContainerWithName:managedObjectModel:
viewContext
performBackgroundTask:
_storeDescriptions
_viewContext
_storeCoordinator
T@"NSString",R,C,V_name
T@"NSManagedObjectContext",R,V_viewContext
T@"NSPersistentStoreCoordinator",R,V_storeCoordinator
persistentContainerWithPath:managedObjectModel:
persistentContainerWithPath:
persistentContainerWithPath:modelNamed:
persistentContainerUsingCachedModelWithPath:
automaticallyDownloadFileBackedFutures
initWithRecordZoneIDs:configurationsByRecordZoneID:
setRecordChangedBlock:
setRecordWithIDWasDeletedBlock:
setRecordZoneChangeTokensUpdatedBlock:
setRecordZoneFetchCompletionBlock:
setFetchRecordZoneChangesCompletionBlock:
_fetchedZoneIDToChangeToken
_fetchedZoneIDToMoreComing
initWithLabel:
automaticallyScheduleImportAndExportOperations
apsConnectionMachServiceName
coordinatorWillRemoveStore:
storesDidChange:
defaultOperationConfiguration
unregisterForSubscriptionWithID:inDatabase:
ckAccountOrIdentityChangedHandler:
managedObjectContextSaved:
remoteStoreDidChange:
registerForSubscription:inDatabase:handler:
isFirstPartyContainerIdentifier:
initWithTransactionLabel:powerAssertionLabel:
fromNotification
setMarkZonesAsUserPurged:
initWithRequest:objectIDToLastExportedToken:error:
initWithShareURLs:
setPerShareMetadataBlock:
setFetchShareMetadataCompletionBlock:
initWithShareMetadatas:
share
setPerShareCompletionBlock:
setAcceptSharesCompletionBlock:
stringForResetReason:
setEarliestStartDate:
setFromNotification:
timeIntervalSinceNow
dateWithTimeIntervalSinceNow:
initWithMirroringOptions:
initWithRecordsToSave:recordIDsToDelete:
applicationStateMonitorExpiredBackgroundActivityTimeout:
applicationStateMonitorEnteredForeground:
applicationStateMonitorEnteredBackground:
applicationMonitor
_ckDatabaseName
_cloudKitQueueSemaphore
_cloudKitQueue
_notificationListener
_hadObservedStore
_successfullyInitialized
_exporterOptions
_coredatadClient
_registeredForSubscription
_observedStore
_observedCoordinator
_accountChangeObserver
_requestManager
_observedStoreIdentifier
_importActivityIdentifier
_exportActivityIdentifier
_setupActivityIdentifier
_applicationMonitor
T@"PFApplicationStateMonitor",R,N,V_applicationMonitor
_transactionLabel
_powerAssertionLabel
_uiAppInstance
_powerAssertionID
typeNum
setTypeNum:
changeTypeNum
setChangeTypeNum:
setChangeType:
T@"NSCKExportOperation",&,D,N
_primaryCache
_rowCachesByGenerationToken
_indexDescription
_createStrings
_dropStrings
_updateStrings
T@"NSFetchIndexDescription",R,&,N,V_indexDescription
T@"NSSQLEntity",R,N,V_sqlEntity
setOperationUUID:
setImportDate:
attributesOfItemAtPath:error:
_assetPathToSafeSaveURL
_importOperationIdentifier
_totalOperationBytes
_fetchedAssetBytesMetric
_fetchedRecordBytesMetric
_allRecordIDs
_encounteredErrors
_failedRelationships
_incrementalResults
_unknownItemRecordIDs
_updatedShares
_currentOperationBytes
_countUpdatedRecords
_countDeletedRecords
initForRelationship:
_inserts
_deletes
_masterUpdates
_otherUpdates
_objectIDsToSerialize
TQ,N,V_resultType
T@"NSSet",C,N,V_objectIDsToSerialize
ensureContentsMatch:
printMetadataForStoreAtURL:withConfiguration:operateOnACopy:
printRepresentativeSchemaForModelAtURL:orStoreAtURL:withConfiguration:
checkIfContentsOfStore:matchContentsOfStore:error:
shouldUseBatches
createCountRequestContextForChanges
fetchRequestContextForChanges
createRequestContextForChangesWithTransactionIDs:
createDeleteTransactionsRequestContext
_shouldUseBatches
T@"NSPersistentHistoryChangeRequest",R,N
TB,R,N,V_shouldUseBatches
_connectionManagers
_createStatement
initWithArray:range:copyItems:
_isCloudKitSupportOriginated
initForRequestContext:
_changeCache
_insertCache
_toManyCache
_rowsToDelete
_updatedByRequest
_updatedByForeignKey
_rowsToAddToRowCache
_updatedFOKRowsInCurrentSave
_deletedFOKRowsInCurrentSave
_externalDataReferencesToSave
_fileBackedFuturesToCopy
_toManyRelationshipChanges
infoDictionary
applicationDidActivate:
applicationWillDeactivate:
_appActivateLifecycleObserver
_appDeactivateLifecycleObserver
_transitionCounter
_backgroundTimeout
_applicationState
setPendingExportChangeTypeNumber:
_totalBytes
_totalRecords
_totalRecordIDs
setUseDeviceToDeviceEncryption:
useEncryptedStorage
setUseEncryptedStorage:
setApsConnectionMachServiceName:
_useDeviceToDeviceEncryption
_apsConnectionMachServiceName
_databaseScope
_progressProvider
TB,V_useDeviceToDeviceEncryption
T@"NSString",&,N,V_apsConnectionMachServiceName
T@"NSObject<NSCloudKitMirroringDelegateProgressProvider>",W,N,V_progressProvider
T@"NSString",R,C,V_containerIdentifier
Tq,N,V_databaseScope
ensureContentsOfStore:matchContentsOfStore:error:
ensureStoresAgreeOnCloudKitTables:error:
compareContentOfStore:toStore:error:
compareCloudKitMetadataOfStore:toStore:error:
compareDatabaseScopeAndIdentityInStore:toStore:error:
compareObjectsInStore:toStore:error:
getObjectMatchingRecordID:fromStore:withManagedObjectContext:
compareAttributesOnObject:toObject:error:
compareRelationshipsOfRecordID:withStoreObject:andOtherObject:error:
validateValue:againstOtherValue:forIgnoredAttribute:
trimExcessiveValuesForLog:
isValue:equalToValue:forAttribute:
isEqualToDate:
isEqualToNumber:
getRecordIDsForRelationship:onObject:
isPending
ensureMirroredRelationshipsMatchForStore:otherStore:error:
ensureMoveReceiptsMatchForStore:otherStore:error:
onlyCompareSharedZones
setOnlyCompareSharedZones:
_onlyCompareSharedZones
_archivingUtilities
T@"PFCloudKitStoreComparisonCache",R,N,V_cache
T@"PFCloudKitArchivingUtilities",R,N,V_archivingUtilities
TB,N,V_onlyCompareSharedZones
importDate
operationUUID
changeTokenBytes
_deleteTarget
TQ,V_resultType
T@"NSFetchRequest",R,C
_entitiesAndCounts
setCollationType:
setAscending:
_collationType
_indexElementDescriptionFlags
T@"NSPropertyDescription",R,&
T@"NSString",R,&,V_propertyName
TB,GisAscending
T@"NSFetchIndexDescription",R,N
_interrupts
_forceUpdates
_retainCount
_owners
initWithRecordType:zoneID:
dataUsingEncoding:
mostRecentRecordModificationDate
initWithRecordType:predicate:
setRecordType:
T@"NSPredicate",&,D,N
T@"CKQueryCursor",&,D,N
transformedValueClass
resetStateForObjectID:error:
processChange:error:
reset:
finishProcessing:
newAnalyzerStateForChange:error:
fetchSortedStates:
_configuredEntityNames
_resetChangedObjectIDs
_entityIDToChangedPrimaryKeySet
_governingEntity
_governingAlias
_correlationToken
_limitClause
_orderIntermediate
setCkRecordID:
_cachedInfoForRequestor:
_cacheInfo:forRequestor:
createChildContextForNestedFetchRequest:
setFetchStatement:
isFaultRequest
_faultHandler
_fetchPlan
_objectIDsToRegister
_objectsToAwaken
_resultFaultsThatWereFired
_parentContext
_fileProtectionLevel
_isFaultRequest
_originalRequest
_storeIsUbiquitized
_isUsingCachedStatement
_concurrentFetchingPipelineRows
_prefetchingSubstitutionVariables
T@"NSFetchRequest",R,N
T@"NSSQLiteStatement",&,N
TB,N,V_isFaultRequest
_idSets
_metadataToWrite
_savePlan
_objectIDsInsertUpdatedToPruneDATrigger
_objectIDsUpdatedToPruneDATrigger
_objectIDsToPruneTrigger
_originalCachedRows
_updateMasksForHistoryTracking
_primaryRowCache
_contextGenerationRowCache
_metricsClient
indexName
executionCount
instructionCount
rowCount
_executionCount
_instructionCount
_rowCount
T@"NSString",R,N,V_indexName
Tq,R,N,V_executionCount
Tq,R,N,V_instructionCount
Tq,R,N,V_rowCount
evictFuture:withError:
createFutureForFileAtURL:
setAttributes:ofItemAtPath:error:
T@"NSURL",R
T@"NSUUID",R
_copyToInterimLocation
_moveToPermanentLocation
_originalFileURL
_fileSize
_uuid
_realData
_bytes
TQ,R,V_fileSize
T@"NSUUID",R,V_uuid
_monitorGroup
_aliveLock
_storeIsAlive
_declaredDead
_retryCount
_timeoutSeconds
_monitoredCoordinator
_monitoredStore
initWithUnsignedLong:
stringWithCapacity:
arrayByExcludingObjectsInArray:
setCatastrophicLoggingLevel
_madeChanges
T@"NSCloudKitMirroringRequest",R,N,V_request
TB,R,N,V_success
TB,R,N,V_madeChanges
_tempTableName
processTransaction:error:
T@"NSSet",C,N,V_objectIDsToFetch
objectIDToLastExportedToken
_objectIDToLastExportedToken
T@"NSDictionary",R,N,V_objectIDToLastExportedToken
_fromNotification
TB,N,V_fromNotification
initWithRequest:success:error:container:database:
analyzerStateForChangedObjectID:error:
_isFinished
_objectIDToState
_sortedStates
_processedTransactionIDs
_finalHistoryToken
_notificationIteration
_assertionLabel
_label
_notificationStalenessInterval
_notificationHandlerBlock
exportedAt
historyToken
T@"NSPersistentHistoryToken",&,D,N
operations
hasInitializedZone
setHasInitializedZone:
hasInitializedZoneSubscription
setHasInitializedZoneSubscription:
hasInitializedDatabaseSubscription
setHasInitializedDatabaseSubscription:
ckIdentityRecordName
setCKIdentityRecordName:
hasCheckedCKIdentity
setHasCheckedCKIdentity:
changeTokenForZoneWithID:inDatabase:
changeTokenForZoneWithID:inDatabaseWithScope:
changeTokenForDatabase:
changeTokenForDatabaseScope:
setChangeToken:forZoneWithID:inDatabase:
setChangeToken:forDatabase:
purgeCachedChangeTokens
_setChangeToken:forKey:
countChangeTokens
lastHistoryToken
setLastHistoryToken:
updateStoreMetadata:
_loaded
_hasChanges
_hasInitializedZone
_hasInitializedZoneSubscription
_hasInitializedDatabaseSubscription
_ckIdentityRecordName
_hasCheckedCKIdentity
_keyToPreviousServerChangeToken
_lastHistoryToken
_startIndexPath
_finalIndexPath
_startSectionInfo
_finalSectionInfo
T@"NSManagedObject",R,&,N,V_object
setInitializeSchema:
setArchivingUtilities:
initializeSchema
setCkAssetThresholdBytes:
setOperationMemoryThresholdBytes:
setContainerOptions:
setAutomaticallyDownloadFileBackedFutures:
setPreserveLegacyRecordMetadataBehavior:
setDefaultOperationConfiguration:
_initializeSchema
_automaticallyDownloadFileBackedFutures
_automaticallyScheduleImportAndExportOperations
_skipCloudKitSetup
_useDaemon
_useTestDaemon
_preserveLegacyRecordMetadataBehavior
_test_useLegacySavePolicy
_ckAssetThresholdBytes
_operationMemoryThresholdBytes
_containerOptions
_storeMonitorProvider
_metadataPurger
_defaultOperationConfiguration
T@"PFCloudKitArchivingUtilities",&,N,V_archivingUtilities
T@"CKOperationConfiguration",&,N,V_defaultOperationConfiguration
T@"NSString",&,N,V_containerIdentifier
T@"NSNumber",&,N,V_ckAssetThresholdBytes
TB,N,V_initializeSchema
T@"CKContainerOptions",&,N,V_containerOptions
TB,N,V_useDeviceToDeviceEncryption
T@"NSNumber",&,N,V_operationMemoryThresholdBytes
TB,N,V_automaticallyDownloadFileBackedFutures
TB,N,V_automaticallyScheduleImportAndExportOperations
TB,N,V_preserveLegacyRecordMetadataBehavior
statusNum
setStatusNum:
status
setStatus:
exportMetadata
T@"NSCKExportMetadata",&,D,N
_generateIdentifier
_substitutionVariables
_cachedInfo
T@,R,N,V_identifier
T@"NSDictionary",C,N
v16@0:8
@24@0:8^{_NSZone=}16
B16@0:8
v24@0:8@16
@24@0:8@16
v24@0:8@"NSCoder"16
@24@0:8@"NSCoder"16
@16@0:8
Q16@0:8
Vv16@0:8
B24@0:8@16
@40@0:8@16@24@32
@"NSString"
@"NSArray"
@"NSInputStream"
q16@0:8
@"NSPredicate"
@"NSDictionary"
@"NSData"
@"NSDate"
@32@0:8@16@24
@48@0:8@16@24@32@40
B24@0:8^@16
v28@0:8@16B24
@32@0:8@16^@24
v32@0:8@16@24
@40@0:8@16@24^@32
@48@0:8@16@24@32^@40
@32@0:8q16@24
@"NSGenerationalRowCache"
@"NSXPCStoreConnectionManager"
@"NSSQLModel"
@"NSSQLCore"
@"NSXPCStoreNotificationObserver"
{os_unfair_lock_s="_os_unfair_lock_opaque"I}
#16@0:8
#24@0:8@16
@32@0:8@16q24
i16@0:8
v20@0:8i16
@"NSSQLModel"16@0:8
@"NSDictionary"16@0:8
@"NSPersistentStoreCoordinator"
@"NSManagedObjectID"
@"NSURL"
@40@0:8@?16@24@32
@"NSFetchRequest"
@"NSSQLFetchRequestContext"
@32@0:8@16Q24
@28@0:8@16B24
@36@0:8@16B24Q28
@40@0:8@16B24B28Q32
v24@0:8q16
v20@0:8B16
v24@0:8Q16
@"NSPersistentHistoryToken"
@"NSNumber"
{__persistentHistoryChangeRequestDescriptionFlags="_useQueryGenerationToken"b1"_deleteHistoryRequest"b1"_fetchTransactionForToken"b1"_percentageDeleteHistoryRequest"b1"_reservedPersistentHistoryChangeRequestDescription"b28}
@"NSManagedObjectModel"
@"NSCloudKitMirroringDelegateOptions"
@24@0:8:16
@32@0:8:16@24
@40@0:8:16@24@32
B24@0:8#16
B24@0:8:16
^{_NSZone=}16@0:8
B24@0:8@"Protocol"16
@"NSString"16@0:8
Vv32@0:8@16@?24
Vv32@0:8@"NSCoreDataXPCMessage"16@?<v@?@"NSCoreDataXPCMessage"@"NSData">24
B32@0:8@16@24
B32@0:8@"NSXPCListener"16@"NSXPCConnection"24
@"NSXPCListener"
@"NSXPCStoreServerRequestHandlingPolicy"
@"NSMapTable"
@"NSMutableDictionary"
@44@0:8^{?=IdQIIII{?=b1b1b1b1b1b1b1b25}i^^v^I^v^v}16I24@28@36
Q24@0:8@16
Q40@0:8@16{_NSRange=QQ}24
B20@0:8B16
@24@0:8Q16
Q40@0:8^{?=Q^@^Q[5Q]}16^@24Q32
v24@0:8^@16
v40@0:8^@16{_NSRange=QQ}24
^{?=IdQIIII{?=b1b1b1b1b1b1b1b25}i^^v^I^v^v}
@"_PFWeakReference"
@"NSKnownKeysDictionary"
@40@0:8r^@16r^@24Q32
@"_PFResultArray"
@56@0:8r^@16@24^Q32{_NSRange=QQ}40
{_NSRange="location"Q"length"Q}
{?=[8I]}16@0:8
@"NSXPCStoreServerPerConnectionCache"
{?="val"[8I]}
@64@0:8{?=[8I]}16@48@56
@"NSManagedObjectContext"
@"NSXPCStoreConnectionInfo"
@"NSSQLitePrefetchRequestCache"
@"NSObject<OS_os_transaction>"
@"NSXPCStore"
@"NSXPCConnection"
@52@0:8@16B24@28@36^@44
@24@0:8^@16
B32@0:8@16^@24
v24@0:8@?16
@"NSSet"
@"NSMutableArray"
@"NSCKRecordMetadata"
@"NSManagedObject"
@36@0:8@16@24B32
v32@0:8Q16@?24
v40@0:8@16Q24@?32
Q32@0:8Q16@?24
Q40@0:8@16Q24@?32
@32@0:8Q16@?24
@40@0:8@16Q24@?32
v32@0:8@16Q24
v32@0:8Q16@24
@"NSPropertyDescription"
{_NSFaultingMutableArrayFlags="_isFault"b1"_reserved"b31}
v24@0:8:16
v32@0:8:16@24
{_NSFaultingMutableSetFlags="_isFault"b1"_mustPropagateDelete"b1"_reserved"b14"_relationship"b16}
@32@0:8#16@24
^{objc_method=}
@"NSEntityMapping"
@"NSError"
I16@0:8
v20@0:8I16
@"NSSQLiteStatement"
v24@0:8@"NSPredicate"16
v24@0:8@"NSExpression"16
v24@0:8@"NSPredicateOperator"16
@"NSMutableSet"
@"NSPersistentStoreRequest"
@"NSSQLiteConnection"
@"NSException"
@"NSQueryGenerationToken"
v32@0:8@16@?24
B56@0:8@16@24@32^B40^@48
B40@0:8@16@24^@32
@"CKQueryCursor"
@"CKRecordZoneID"
q24@0:8@16
B40@0:8@16@24@32
@"_NSFaultingMutableSetMutationMethods"
@"NSSQLiteAdapter"
@"NSMutableString"
@"NSArray"16@0:8
@"NSManagedObjectID"24@0:8Q16
Q24@0:8@"NSManagedObjectID"16
@32@0:8r^@16Q24
@32@0:8^@16I24I28
@40@0:8^@16I24I28@32
^@16@0:8
@32@0:8{_NSRange=QQ}16
{_PFArrayFlags="shouldRetain"b1"shouldRelease"b1"useExtendedRelease"b1"freeBackingArray"b1"copyBackingArray"b1"managedObjects"b1"_RESERVED"b27}
@32@0:8^?16^v24
@40@0:8^?16^v24@32
@24@0:8@?16
@"_PFArray"
@"NSCachingFetchRequest"
{_PFBatchFaultingArrayFlags="_LRUIndex"b8"_uniformEntity"b1"_LRUEntryCount"b11"_RESERVED"b12}
@"NSPersistentHistoryTransaction"
@40@0:8@16{_NSRange=QQ}24
^{__CFArray=}
r^@16@0:8
@32@0:8r^v16r*24
v24@0:8^v16
r*16@0:8
c16@0:8
C16@0:8
s16@0:8
S16@0:8
f16@0:8
d16@0:8
^{__CFDictionary=}
^^{__CFDictionary}
{_contextMapTableFlags="_usesWeakReferences"b1"_garbageCollectionEnabled"b1"_reservedFlags"b30}
@"_PFModelMap"
@36@0:8^?16^v24i32
{_opaque_pthread_mutex_t="__sig"q"__opaque"[56c]}
{_opaque_pthread_cond_t="__sig"q"__opaque"[40c]}
^{__CFDictionary=}28@0:8@16B24
^{_opaque_pthread_t=q^{__darwin_pthread_handler_rec}[8176c]}
r*20@0:8B16
r^S16@0:8
r*24@0:8Q16
S24@0:8Q16
v24@0:8^S16
v40@0:8^S16{_NSRange=QQ}24
v24@0:8*16
^{__CFAllocator=}16@0:8
@"NSProgress"
@48@0:8@16@24@32@?40
@"NSAsynchronousFetchRequest"
i20@0:8i16
B28@0:8@16B24
B24@0:8Q16
@40@0:8@16Q24@32
B36@0:8@16@24i32
B48@0:8^@16@24@32^@40
v32@0:8*16Q24
v72@0:8@16@24@32@40@48@56@64
*16@0:8
#32@0:8@16@24
I28@0:8^@16I24
@32@0:8r*16Q24
@24@0:8q16
B48@0:8@16@24@32^@40
@32@0:8^@16@24
@"NSEntityDescription"
^{_NSRange=QQ}
{__entityDescriptionFlags="_isAbstract"b1"_shouldValidateOnSave"b1"_isImmutable"b1"_isFlattened"b1"_skipValidation"b1"_hasPropertiesIndexedBySpotlight"b1"_hasPropertiesStoredInTruthFile"b1"_rangesAreInDataBlob"b1"_hasAttributesWithExternalDataReferences"b1"_hasNonstandardPrimitiveProperties"b2"_hasUniqueProperties"b1"_hasChildrenWithUniqueProperties"b1"_validationUniqueProperties"b1"_isPersistentHistoryEntity"b1"_hasAttributesWithFileBackedFutures"b1"_reservedEntityDescription"b16}
^{_ExtraEntityIVars=@@@@@@{os_unfair_lock_s=I}i^v}
@20@0:8I16
^{_NSRange=QQ}16@0:8
Q36@0:8Q16@24B32
^v24@0:8Q16
^v16@0:8
@"NSExpression"
{__entityMappingFlags="_isInUse"b1"_changeIsSchemaCompatible"b1"_reservedEntityMapping"b30}
@"NSAttributeDescription"
@28@0:8I16d20
{_externalRefFlags_st="_invalidToOnes"b1"_hasTemporaryID"b1"_backgroundDealloc"b1"_reservedFlags"b1"_virtualfk_count"b14"_ordkey_count"b14}
@40@0:8@16@24Q32
@"NSSQLEntity"
@"NSCoreDataXPCMessage"
Q24@0:8Q16
{_fetchRequestFlags="distinctValuesOnly"b1"includesSubentities"b1"includesPropertyValues"b1"resultType"b3"returnsObjectsAsFaults"b1"excludePendingChanges"b1"isInUse"b1"entityIsName"b1"refreshesRefetched"b1"propertiesValidated"b1"expressionsValidated"b1"disableCaching"b1"allocationType"b3"batchLRUEntries"b4"asyncRequest"b1"purgeable"b1"_RESERVED"b9}
@"NSObject<OS_dispatch_queue>"
{_fetchExpressionFlags="isCountOnly"b1"_RESERVED"b31}
@32@0:8^@16Q24
@48@0:8^@16Q24^v32@40
@40@0:8^@16^@24Q32
v28@0:8^@16B24
v32@0:8^@16^@24
@"NSKnownKeysMappingStrategy"
[0@]
v40@0:8Q16@24@32
v40@0:8@16Q24@32
B40@0:8^@16@24^@32
^{?=^v@@@@}
@40@0:8@16q24q32
v48@0:8@16@24@32@40
B32@0:8^@16^@24
^?24@0:8:16
v48@0:8@16@24q32q40
^{?=i^v@QCQ^v[32C]*{_moFactoryClassFlags=b1b1b1b1b1b1b1b25}}16@0:8
I36@0:8^@16@24I32
@36@0:8@16@24I32
B24@0:8r*16
v24@0:8d16
v48@0:8@16@24@32^v40
Q32@0:8@16^@24
v40@0:8@16:24^v32
v36@0:8@16B24^{?=@:^v}28
{_managedObjectContextFlags="_registeredForCallback"b1"_propagatesDeletesAtEndOfEvent"b1"_exhaustiveValidation"b1"_processingChanges"b1"_useCommittedSnapshot"b1"_registeredUndoTransactionID"b1"_retainsAllRegisteredObjects"b1"_savingInProgress"b1"_wasDisposed"b1"_unprocessedChangesPending"b1"_isDirty"b1"_ignoreUndoCheckpoints"b1"_propagatingDeletes"b1"_isNSEditorEditing"b1"_isMainThreadBlessed"b1"_isImportContext"b1"_preflightSaveInProgress"b1"_disableDiscardEditing"b1"_isParentStoreContext"b1"_postSaveNotifications"b1"_isMerging"b1"_concurrencyType"b1"_deleteInaccessible"b1"_priority"b2"_autoMerge"b1"_isXPCServerContext"b1"_pushSecureDelete"b1"_refreshAfterSave"b1"_allowAncillary"b1"_generatedMutatedIDsNotification"b1"_postSavedObjectNotifications"b1"_allowAdditionalUserInfoKeys"b1"_reservedFlags"b31}
@"_PFContextMapTable"
@"_PFManagedObjectReferenceQueue"
v32@0:8@16B24B28
^{__CFRunLoopObserver=}
B24@0:8@?16
{_queryGenerationFlags="_isCompound"b1"_isSingleton"b1"_freeValueOnDealloc"b1"_isUnmoored"b1"_reservedFlags"b12}
@"_PFVMData"
{__managedObjectModelFlags="_isInUse"b1"_isImmutable"b1"_isOptimizedForEncoding"b1"_hasEntityWithConstraints"b1"_skipUserInfoTombstones"b1"_reservedEntityDescription"b27}
v28@0:8B16Q20
@"NSBundle"
@"NSPersistentStore"
@"NSPersistentStoreMap"
@"NSUUID"
{__modelMappingFlags="_isInUse"b1"_reservedModelMapping"b31}
v40@0:8@16@24@?32
@"PFCloudKitImporterOptions"
@"NSCloudKitMirroringImportRequest"
@56@0:8@16Q24Q32@40@48
@64@0:8@16Q24Q32@40@48@56
@56@0:8@16@24@32@40@48
v52@0:8@16@24@32@40B48
@"NSMigrationManager"
@"NSPropertyMapping"
B80@0:8@16@24@32@40@48@56@64^@72
v40@0:8@16@24@32
@"NSMappingModel"
@"NSMigrationContext"
{_migrationManagerFlags="_migrationWasCancelled"b1"_usesStoreSpecificMigrationManager"b1"_migrationWasInPlace"b1"_forcedMigration"b1"_reservedMigrationManager"b28}
@"NSObject<OS_dispatch_semaphore>"
{_objectStoreFlags="isReadOnly"b1"cleanOnRemove"b1"isMDDirty"b1"_RESERVED"b29}
^{__CFSet=}
B28@0:8B16^@20
^{__CFSet=}16@0:8
B56@0:8@16@24@32@40^@48
B56@0:8@16^B24^B32^@40@48
@32@0:8@16@?24
@?16@0:8
{_insertRequestFlags="resultType"b2"entityIsName"b1"secureOperation"b1"_RESERVED"b28}
@32@0:8Q16@24
@28@0:8^v16B24
^{?=q^?^?^?^?}
{persistentStoreCacheFlags="_preserveToManyRelationships"b1"_reserved"b31}
v32@0:8#16@24
@56@0:8@16@24@32@40^@48
B64@0:8@16@24@32@40@48^@56
@32@0:8@16^i24
{_persistentStoreCoordinatorFlags="_isRegistered"b1"_canUseDirectDispatch"b1"_queueUsage"b1"_qosClass"b8"_reservedFlags"b21}
@"<NSPersistentStoreCoordinatorDelegate>"
v24@0:8@"NSPersistentHistoryChange"16
@"NSManagedObjectID"16@0:8
@"NSNumber"16@0:8
@40@0:8@16@"NSString"24@"NSSQLEntity"32
B24@0:8@"NSObject<NSSQLAttributeExtension>"16
@"NSSQLAttribute"
@"NSSQLRelationship"
@"NSEntityDescription"16@0:8
@"NSPredicate"16@0:8
{_requestFlags="includesSubentities"b1"resultType"b2"entityIsName"b1"secureOperation"b1"_RESERVED"b27}
@"NSMappedObjectStore"
v24@0:8@"NSPersistentCloudKitContainerEvent"16
B32@0:8Q16^@24
@"NSObject<OS_dispatch_group>"
^{_NSExtraPropertyIVars=@qq}
{__propertyDescriptionFlags="_isReadOnly"b1"_isTransient"b1"_isOptional"b1"_isIndexed"b1"_skipValidation"b1"_isIndexedBySpotlight"b1"_isStoredInExternalRecord"b1"_extraIvarsAreInDataBlob"b1"_isOrdered"b1"_hasMaxValueInExtraIvars"b1"_hasMinValueInExtraIvars"b1"_storeBinaryDataExternally"b1"_preserveValueOnDelete"b1"_isTriggerBacked"b1"_isFileBackedFuture"b1"_allowsCloudEncryption"b1}
^{_NSExtraPropertyIVars=@qq}16@0:8
v64@0:8@16@24@32@40@48@56
q32@0:8@16q24
{_fetchResultsControllerFlags="_changedResultsSinceLastSave"b1"_hasBatchedArrayResults"b1"_hasMutableFetchedResults"b1"_hasSections"b1"_includesSubentities"b1"_sendDidChangeContentDiffNotifications"b1"_sendDidChangeContentNotifications"b1"_sendDidChangeContentSnapshotNotifications"b1"_sendObjectChangeNotifications"b1"_sendSectionChangeNotifications"b1"_sendSectionIndexTitleForSectionName"b1"_sendWillChangeContentNotifications"b1"_usesNonpersistedProperties"b1"_reservedFlags"b19}
{__propertyMappingFlags="_isInUse"b1"_reservedPropertyMapping"b31}
@"NSPropertyTransform"
@"NSRelationshipDescription"
v40@0:8*16Q24@32
@"NSCloudKitMirroringRequest"
Vv32@0:8@"CDDCloudKitMessage"16@?<v@?@"CDDCloudKitResponse">24
@"PFCloudKitContainerProvider"16@0:8
@"CKScheduler"16@0:8
@"CDDCloudKitServerConfiguration"
@"NSPersistentContainer"
@"PFCloudKitContainerProvider"
@"CKScheduler"
@36@0:8@16C24@28
@40@0:8@16C24@28B36
@28@0:8q16C24
@24@0:8I16C20
v20@0:8C16
@56@0:8@16B24B28@32@40@48
@28@0:8@16C24
v36@0:8@16@24B32
@44@0:8@16C24@28@36
@"NSURL"16@0:8
@"NSOperationQueue"16@0:8
v24@0:8@?<v@?@?<v@?>>16
v24@0:8@?<v@?@"NSError">16
v24@0:8@"NSURL"16
v24@0:8@"NSSet"16
v24@0:8@"NSFileVersion"16
v32@0:8@"NSURL"16@?<v@?@"NSError">24
v32@0:8@"NSURL"16@"NSURL"24
v32@0:8@"NSURL"16@"NSFileVersion"24
@"NSSet"16@0:8
@"NSSQLCoreDispatchManager"
@"_NSSQLCoreConnectionObserver"
{_sqlCoreFlags="useSyntaxColoredLogging"b1"hasExternalDataReferences"b1"fileProtectionType"b3"notifyFOKChanges"b1"initializationComplete"b1"connectionsAreLocal"b1"isXPCDelegate"b1"queryGenerationInitializationFailed"b1"persistentHistoryTracking"b1"hasAncillaryModels"b1"postRemoteNotify"b1"hasFileBackedFutures"b1"isInMemory"b1"_debugRequestsHandling"b1"historyBatchUpdateModProperties"b1"indexTracking"b1"_RESERVED"b14}
@"_PFMutex"
@"CKServerChangeToken"
@"NSSQLPrimaryKey"
@"NSSQLEntityKey"
@"NSSQLOptLockKey"
@"NSSQLStoreMappingGenerator"
@"NSSQLEntity_DerivedAttributesExtension"
{__sqlentityFlags="_hasAttributesWithExternalDataReferences"b1"_hasAttributesWithFileBackedFutures"b1"_reserved"b30}
@36@0:8@16B24@28
@"CKContainer"
@"CKDatabase"
@"CKDatabaseSubscription"
@"PFCloudKitStoreMonitor"
@"NSPersistentCloudKitContainerEvent"
@"NSCloudKitMirroringDelegateSetupRequest"
@"CKRecordID"
@"NSSQLSelectIntermediate"
@"NSSQLGroupByIntermediate"
@"NSSQLHavingIntermediate"
@"NSSQLOffsetIntermediate"
@"NSSQLForeignKey"
@"NSSQLToOne"
@"CDDCloudKitMessage"
@"CKOperationConfiguration"
@"NSSQLIntermediate"
q32@0:8@16^@24
@"NSFileHandle"
r^v16@0:8
^{sqlite3_snapshot=[48C]}
i24@0:8@16
^{sqlite3=}
^{sqlite3_stmt=}
@"NSSQLSaveChangesRequestContext"
[5^v]
{__sqliteConnectionFlags="_readyToBind"b1"_fetchInProgress"b1"_fileSystemType"b2"_proxyLocking"b1"_vacuumSetupNeeded"b1"_usingWAL"b1"_disallowReconnect"b1"_isWriter"b1"_didSnapshotRecovery"b1"_hasTransactionStringTable"b1"_isQueryGenTracking"b1"_reserved"b20}
@40@0:8@16B24B28@32
@"NSCloudKitMirroringExportRequest"
@"NSCloudKitMirroringDelegateResetRequest"
@"NSCloudKitMirroringResetZoneRequest"
@"NSCloudKitMirroringFetchRecordsRequest"
@"NSCloudKitMirroringResetMetadataRequest"
@"NSCloudKitMirroringDelegateSerializationRequest"
@"NSCloudKitMirroringInitializeSchemaRequest"
@"NSCloudKitMirroringExportProgressRequest"
@"NSCloudKitMirroringAcceptShareInvitationsRequest"
@"NSSQLRowCache"
{?="principal_entity_has_subentities"b1"fetch_only_primary_keys"b1"fetch_results_style"b3"use_clean_memory"b1"_reserved"b26}
@40@0:8@16@24@?32
@"NSCloudKitMirroringRequestOptions"
@"CKSchedulerActivity"
{_sqlColumnFlags="_allowAliasing"b1"_unique"b1"_constrained"b1"_backedByTrigger"b1"_isDerivedAttribute"b1"_reservedFlags"b11}
I52@0:8^@16I24@28^@36d44
@40@0:8@16@24d32
v28@0:8I16q20
v24@0:8I16I20
@"_CDSnapshot"
@"NSCachedFetchRequestInfo"
@"PFCloudKitExporterOptions"
@"NSObject<PFCloudKitExporterDelegate>"
@"PFCloudKitExportContext"
@"NSSQLFetchIntermediate"
@"NSSQLColumn"
@"NSSQLForeignEntityKey"
@"NSSQLForeignOrderKey"
@36@0:8@16B24^@28
{_double_quad_uint="high64"Q"low64"Q}
@"_NS128bitWrapper"
@32@0:8@16^v24
^{?=i^v@QCQ^v@*{_moFactoryClassFlags=b1b1b1b1b1b1b26}}16@0:8
@"NSFetchedResultsController"
@"NSSQLUpdateColumnsIntermediate"
^{sqlite3_intarray=}
@48@0:8@16@24@32Q40
@64@0:8@16@24@32@40@48Q56
@"NSObject<PFCloudKitSerializerDelegate>"
@"PFCloudKitMetadataCache"
@"CKRecordZone"
@"NSSQLWhereIntermediate"
@32@0:8r^v16Q24
@40@0:8@16Q24^@32
v32@0:8^v16Q24
v40@0:8^v16{_NSRange=QQ}24
{_NSRange=QQ}48@0:8@16Q24{_NSRange=QQ}32
B40@0:8@16Q24^@32
@44@0:8@16@24@32i40
@52@0:8r^v16Q24@32@40i48
v24@0:8r^v16
{__externalDataFlags="_isStoredExternally"b1"_hasMappedData"b1"_cleanupOnDealloc"b1"_dataProtectionLevel"b3"_isStoredUbiquitously"b1"_createdByUbiquityImport"b1"_reserved"b24}
v32@0:8r^@16Q24
v40@0:8r^@16Q24Q32
v32@0:8{_NSRange=QQ}16
v48@0:8{_NSRange=QQ}16Q32@?40
{_NSFaultingMutableOrderedSetFlags="_isFault"b1"_mustPropagateDelete"b1"_ignoringIdempotentKVO"b1"_mustCopyOnWrite"b1"_isImmutableCopy"b1"_reserved"b11"_relationship"b16}
@"_NSFaultingMutableOrderedSet"
I36@0:8^@16I24^@28
{_snapshotFlags_st="_readOnly"b1"_reservedFlags"b7}
Q24@0:8@?16
Q56@0:8@16{_NSRange=QQ}24Q40@?48
v32@0:8Q16Q24
v40@0:8^@16Q24Q32
v48@0:8{_NSRange=QQ}16r^@32Q40
@"NSMutableOrderedSet"
@"_NSFaultingMutableOrderedSetMutationMethods"
@"NSObject"
@"NSSQLBinaryIndex"
v32@0:8@"PFCloudKitExporter"16@"NSArray"24
v24@0:8@"PFApplicationStateMonitor"16
B40@0:8@"NSManagedObjectModel"16@"NSPersistentStoreDescription"24^@32
v40@0:8@"NSPersistentStoreCoordinator"16@"NSPersistentStore"24@"NSPersistentStoreDescription"32
@"CKNotificationListener"
@"CDDCloudKitClient"
@"PFCloudKitThrottledNotificationObserver"
@"NSCloudKitMirroringRequestManager"
@"PFApplicationStateMonitor"
@"NSPersistentStoreCache"
@"NSFetchIndexDescription"
v40@0:8@"PFCloudKitSerializer"16@"PFMirroredRelationship"24@"NSError"32
@"NSURL"32@0:8@"PFCloudKitSerializer"16@"CKAsset"24
@"PFCloudKitFetchedAssetBytesMetric"
@"PFCloudKitFetchedRecordBytesMetric"
@"NSSQLManyToMany"
B36@0:8@16B24^@28
{_sqlSaveFlags="notifyFOKChanges"b1"hasChanges"b1"reserved"b30}
@"NSObject<PFApplicationStateMonitorDelegate>"
B48@0:8@16^Q24@32^@40
@"NSObject<NSCloudKitMirroringDelegateProgressProvider>"
@"PFCloudKitStoreComparisonCache"
@"PFCloudKitArchivingUtilities"
{__indexElementDescriptionFlags="_ascending"b1"_propertyIsRetained"b1"_unique"b1"_reservedEntityDescription"b29}
@52@0:8@16@24@32B40@44
@"NSSaveChangesRequest"
@"NSSQLLimitIntermediate"
@"NSSQLOrderIntermediate"
@"NSFaultHandler"
@"_PFFetchPlanHeader"
@"NSSQLSavePlan"
@48@0:8@16@24q32@40
@"PFCloudKitMetadataMigrationContext"
@"PFCloudKitMetricsClient"
@"NSUUID"16@0:8
@"PFHistoryAnalyzerOptions"
@52@0:8@16B24@28@36@44
@"NSIndexPath"
@"_NSDefaultSectionInfo"
@"CKContainerOptions"
@"PFCloudKitStoreMonitorProvider"
@"PFCloudKitMetadataPurger"
@(#)PROGRAM:CoreData  PROJECT:PersistenceFramework-1148
333333
!)18888
;!L!!]
K)KK4
K)KK4
~~[[NO CHANGE]]~~
constantValue
NSPredicates and NSExpressions cannot be encoded by non-keyed archivers
NSConstantValue_XPCStoreObjectIDs
NSConstantValue
NSPredicates and NSExpressions cannot be decoded by non-keyed archivers
_NSPredicateUtilities
root
entityName
objectsToInsert
inputStream
resultType
secure
Unsupported Expression with the XPC Store: %@
predicate
columnsToUpdate
nullValueCount
includeSubEntities
Unsupported Expression for the XPC Store: %@
fetch
token
date
delete
transactionFromToken
fetchLimit
fetchOffset
fetchBatchSize
percentageOfDB
Someone tried to log something but failed because they didn't tell me what to log.
CoreData: XPC: %@
_NSXPCStoreObjectIDArrayConstantValueExpression
exception name
exception reason
controlled exception
Error: Exception raised: %@
Error: Callstack: %@
Error: UserInfo: %@
exception info
CoreData: XPC: Suspect response from server (bad size)
Reason
CoreData: XPC: Suspect response from server (no result)
CoreData: XPC: Suspect response from server (missing size)
name
CoreData: XPC: Suspect response from server (not enough room for fetch results header)
CoreData: XPC: Suspect response from server (not enough room for buffers and sizes)
NSXPCStoreDelegate
/dev/null/CDInternalXPCStore
CoreData: XPC: Suspect response from server (not enough room for first row)
Decoding failed: No oids.
Decoding failed: No rows.
CoreData: XPC: Suspect response from server (not enough room for row %d)
CoreData: XPC: Suspect response from server (remaining space for %d smaller than estimated size)
CoreData: XPC: Suspect response from server (remaining space for %@ insufficient (1))
CoreData: XPC: Suspect response from server (remaining space for %@ insufficient (2))
CoreData: XPC: Suspect response from server (remaining space for %@ insufficient (3))
CoreData: XPC: Suspect response from server (remaining space for %@ insufficient (4))
NSRemotePersistentStoreDidChangeNotification
skipModelCheck
NSXPCStoreSkipRetryWaitKey
com.apple.CoreData.XPCDebug
current
unpinned
serviceName
NSXPCStoreServerEndpointFactory
NSXPCStoreListenerEndpoint
No service name, endpoint factory, or endpoint supplied
PF_DEFAULT_CONFIGURATION_NAME
XPC store does not currently allow models containing ordered relationships
Unable to load model
NSPersistentHistoryTrackingKey must be a NSNumber
Unable to initialize client
sendMessage: failed #%d
Unable to sendMessage: to server
Got reply pointer: %p
Got reply: %@
Unable to connect to server with options %@
Unable to send to server; failed after %d attempts.
Problem
reply
error
 Request failed: (%@).
Send failed with no error; probably something wrong here
 Got success, but also an error. Ignoring the error (%@).
sendMessage: apparently succeeded, but no response or error
No data, cause unknown
CoreData: XPC: Can't move an XPC store from the client
CoreData: XPC: Can't change store identifier from the client
NSXPCStorePostUpdateNotifications
notificationName
Failed to enable remote store notifications: Can't get notification name. %@
Failed to enable remote store notifications: %@
NSFileBackedFuturePathKey
reason
missing faults directory URL in store whose model contains faults
NSMetadataKey
Server did not return model version info. (Unsupported configuration.)
Server schema is incompatible and ignore version enabled. (Unsupported configuration.)
Server side store changed, remove and re-add this client store
Unable to load metadata: %@
Unable to decode query generation
Nil result for query generation request
Unable to get query generation: %@
v8@?0
Unable to decode active generations result
Nil result for active generations request
Unable to check for active generations: %@
Unable to release query generation: %@
Attempt to release query generation failed: %@
Attempt to reopen query generation failed: %@
Executing fetch %@
Fetch threw on server (%@)
Fetch retrieved %lu results from server
Fetch retrieved null, error %@
Attempting to resend what looks like it may be a reinsert
Reinsert hit optimistic locking error, will discard and let the next save resolve it.
Something threw out of NSXPCStore executeSaveRequest:, got exception %@
Nil response received
NSFetchRequestExpression is unsupported for the XPC Store
Store Type does not support index tracking
Invalid request type
Something unexpected happened: %@ 
Unexpected number of property values returned from server
Firing fault %@
Returning cached value %@
Retrieved node from server %@
Decoded value for %@ - %@ : %@
Got a bad relationship value for %@, %@ (%@)
source
relationship
Wrong number of object IDs returned from server
Wrong number of object IDs returned from server (2)
com.apple.internetaccounts
com.apple.preferences.internetaccounts.remoteservices
objectID
Unable to decode history token
Nil result for history token request - %@
%@/%@
<NSPersistentHistoryTransaction: %lld, %@, %@, %@, %@, %@, %@>
NSPersistentHistoryTransactionStoreID
NSPersistentHistoryTransactionRowID
NSPersistentHistoryTransactionTimestamp
NSPersistentHistoryTransactionChangeSet
NSPersistentHistoryTransactionBundleID
NSPersistentHistoryTransactionProcessID
NSPersistentHistoryTransactionContextName
NSPersistentHistoryTransactionAuthor
NSPersistentHistoryTransactionQueryGen
NSManagedObjectIDURI
NSConnectionContext
PSCKey
XPC: Possible API misuse: Unable to find object for managed object URI %@, returning null instead
XPC: Missing oid uri
NSMOIDArchivingToken escaping un-de-tokenized (secured %d).
v8@?0
com.apple.coredata
unknown
CoreData: %s: %s
warning
annotation
CloudKit
debug
fault
details
%@ only accepts a NSFetchRequest that has the entity set to a Persistent History Entity
self
%@.%@
ANY TRANSACTIONID IN %@
ANY %@ %@ %lld
ANY %@.%@ %@ %f
%@ %@ %lld
_pk %@ %lld
ANY _pk IN %@
%@.%@ %@ %f
%@ %@ %f
NSPersistentHistoryChangeRequest : %@ < %@ - %@-%@> %lu
Delete
Fetch
NSPersistentHistoryChangeRequest : %@ <%@ - %@-%@> limit - %lu offset - %lu batchSize - %lu, resultType - %lu, fetchRequest - %@
Mismatched result types during aggregation of history status results
Results
Mismatched result types during aggregation of history count results
Mismatched result types during aggregation of history object IDs results
History Change Request failed NSPersistentHistoryResultTypeChangesOnly unsupported for multiple stores
NSPersistentHistoryResultTypeChangesOnly unsupported for multiple stores
Mismatched result types during aggregation of history results
timestamp
%s <%p> with @property result: %@
Unable to find a configuration named '%@' in the specified managed object model.
The configuration named '%@' does not contain any entities.
Cannot be used without an instance of %@.
%@: %@ cannot be applied to an entity type'
%@: %@ - Cannot locate value transformer with name '%@'
%@: %@ - Doesn't allow reverse transformation
%@: %@ - Unsupported attribute type (%@)
%@: %@ - Value must be an instance of '%@' or '%@' that evalutes to YES or NO using '%@'
%@: %@ - attribute is not optional
%@: %@ - Value for %@ must be an instance of '%@' or '%@' that evalutes to YES or NO using '%@'
%@:%@ - Encryption value should be set via -[NSAttributeDescription allowsCloudEncryption], please remove usage of 'NSPersistentCloudKitContainerEncryptedAttributeKey'
%@:%@ - Partial encryption cannot be used with device-to-device encryption
%@:%@ - Device-to-Device encryption cannot be used with partial encryption
%@: %@
v32@?0@"NSString"8@"NSAttributeDescription"16^B24
%@: %@ - %@
%@:%@
%@:%@ - %@
v32@?0@"NSString"8@"NSRelationshipDescription"16^B24
PFCloudKitModelValidator was handed an entity with unique constraints that aren't attributes or strings: %@ - %@
v32@?0@8Q16^B24
v32@?0@"NSArray"8Q16^B24
%@:%@ - preservesValueInHistoryOnDeletion should be YES
%@: Estimated size %lu bytes
CloudKit integration requires that all relationships have an inverse, the following do not:
v32@?0@"NSString"8Q16^B24
CloudKit integration does not support ordered relationships. The following relationships are marked ordered:
CloudKit integration requires that all attributes be optional, or have a default value set. The following attributes are marked non-optional but do not have a default value:
CloudKit integration requires that all relationships be optional, the following are not:
CloudKit integration does not support all attribute types. The following entities have attributes of an unsupported type:
CloudKit integration requires that the value transformers for transformable attributes are available via +[%@ %@] and allow reverse transformation:
CloudKit integration does not allow relationships to objects that aren't sync'd. The following relationships have destination entities that not in the specified configuration.
CloudKit integration requires that all entities tombstone %@ and %@ on delete if configured. The following entities are not properly configured:
CloudKit integration requires that all entities can be materialized in a CKRecord of less than %lu bytes. The following entities cannot:
The following attributes have invalid values for '%@':
CloudKit integration does not support ignored relationships. The following entities and relationships are marked ignored using '%@':
The following entities have invalid values:
The following attributes have invalid values:
CloudKit integration does not support encrypted relationships. The following entities and relationships are marked with '%@':
The following relationships are configured with unsupported delete rules:
CloudKit integration does not support unique constraints. The following entities are constrained:
Nullify
Deny
cascade
No-Action
routined
NSXPCStoreEntitlementNames
NSXPCStoreDaemonize
NSXPCStoreServiceName
NSXPCStoreListener
Can't create server - misconfigured server : %@ is nil
model
storeURL
application-identifier
Can't create server - misconfigured server : no service name supplied for daemonized server
Options dictionary contains service name and anonymous listener, defaulting to service name
Can't create server - unable to load model
XPC Store Server - Migration keys have been removed from %@
Attempting to create non-mach listener with service name: %@
modelURL
%@: Listening
NSUnderlyingException
%@: Unable to find model
Can't create coordinator - attempting SQLite recovery
Can't create coordinator - due to an error - %@
Unable to load store: %@
 Server Connection interrupted.
v8@?0
 Server Connection invalidated.
%@ - Incoming connection: %@
Unable to create stack
Unable to create connection context
NSConnectionInfo
Starting event handler
XPCStore server handling request: %@
Policy rejected connection from client: %@
Token mismatch
Metadata
Save
Fault
Rel fault
Request notification name
Query generation
Query generation reopen
Query generation release
Batch delete
Persistent history
Persistent history token
Batch update
Batch insert
Query generation active connections
Illegal input: %u from connection %p
SQLite exception on server: %@, recovery to be attempted
SQLite exception on server: %@, no recovery attempt
SQLite exception on server: %@, no recovery attempt (weird)
Unexpected Core Data exception on server: %@
Unexpected exception on server: %@
Unexpected unknown exception on server
Done event handler
request failed, store identifier mismatch
request failed, insufficient permission
request failed, exception raised during processing
SQLite error on server: %@, recovery being attempted
SQLite error on server: %@, no recovery being attempted
request failed (no result, no error)
Reply handler threw: %@, %@, %@
Request failed, threw in request handler logic (check console for details)
CoreData: XPC: Reply handler threw unknown exception.
Request failed, threw in request handler logic (unknown exception)
Sending reply %p, %p
Sent reply
Failed to set query generation on context: %@ -> %@ (%@)
Got oid  request for %@
Returning result %@
NSMetadata
Got save request: %@
Updating metadata
locked
Locking objects :%@
Not locking %@ because it's not in the db
Locking %@
Deleting object :%@
Inserting object with ID %@
Made save request: %@
Unable to unarchive save request with allowed classes: %@
Got relationship fault request: %@
Can't fulfill relationship fault request: can't find query generation: %@
unrecognized query generation
generation
request
Attempting to fire fault for %@, %@
originalRequest
Wrong in all kinds of ways. Less colloquially, that should be an object ID, but it's an instance of %@ instead
Fired relationship fault %@ - %@, returning values: %@
Attempted to fire relationship fault %@ - %@, no such luck
Attempting to fire fault for %@
Can't fulfill fault request: can't find query generation: %@
target
missing objectID
Got a fetch request %@
Can't fulfill fetch request: can't find query generation: %@
Which had result %d (%d)
Which archived %d (%d)
Fetch failed returning error %@
Fetch failed with no error.
no store
Got metadata %@
what on earth happened?
Which archives to %@
Got pull changes result %@
Got active connections %@
Got queryGeneration %@
Reopened generation %@
Unable to reopen generation %@
Bad parameter to reopen generation %@
Attempting to free nothing (or too many things) %@
Nil batch insert request
Unable to decode request, ensure policy allows for inserted class values
Which had result %@
Nil batch update request
Unable to decode request, ensure policy allows for updated class values
Nil batch delete request
Nil persistent history request
Got historyToken %@
Index beyond buffer: %ld, %ld, %ld, %ld
%@: backing buffer has been purged
%@: backing buffer can be purged
%@: index (%lu) beyond bounds (%lu)
Unsupported property type: %@
Unsupoorted type for buffer allocated dictionary: %@
Unexpected tagged string result
BufferAllocations Result Object has an invalid Object ID
<NSXPCStoreServerConnectionInfo: 
entitlements = %@ ;
coordinator = %@ ;
userInfo = %@>
<NSXPCStoreServerConnectionContext: 
entitlements = %@ ;
context = %@ ;
info = %@>
core data xpc: query generations
Coalesced prefetch keypaths to : %@
v8@?0
Process fetch request got nil result (check system log for details).
Process fetch request got %d results.
Source object %@ does not exist for relationship fault.
Source object does not match restricting predicate, so returning an error
Threw evaluating predicate for %@: %@
relationship name
self IN %@
self == %@
%@ IN %K
%K == %@
Prefetching inverse to-one relationship "%@".
destinations
Prefetched for many-to-many relationship "%@".  Got %lu rows
Which means oidSets %@
mtmObjects
Prefetched for one-to-many relationship "%@".  Got %lu rows
objects
Decoding prefetched rows for fetch %@
Prefetched %@/%@ and got no results, stopping now
Prefetched %@/%@ and got %@
swallowed an exception during prefetching of %@, %@: %@
swallowed an exception during XPC store prefetching of %@, %@: %@
Prefetched for source entity %@, key '%@'.  Got data with length %lu.
Recursively prefetching subkeys %@ of fetch %@ using OIDs %@ for objects %@
swallowed an exception during recursive prefetching for %@, %@: %@
swallowed an exception during XPC store recursive prefetching of %@, %@: %@
Done prefetching for %@, %@
Process fetch request aborting (predicate is nil)
Process fetch request returning no results (predicate is false)
SELF IN %@
Saving.
Inserted = %@
Updated = %@
Deleted = %@
Request description was nil.
Request
Prefetching keypaths %@, for fetch %@, sources %@
Prefetching %@, subkeypaths = %@
NSCoreDataXPCMessageCode
NSCoreDataXPCMessageBody
NSCoreDataXPCMessageToken
NSCoreDataXPCMessageContextName
NSCoreDataXPCMessageContextTransactionAuthor
NSCoreDataXPCMessageProcessName
agentOrDaemon
 Unable to create NSXPCConnection; no service name, factory, or endpoint provided.
 Unable to create NSXPCConnection
v8@?0
 Connection interrupted.
XPC connection was invalidated
 Connection invalidated.
Connection is nil
XPC: synchronousRemoteObjectProxyWithErrorHandler encountered error: %@
v16@?0@"NSError"8
Created reply dict: %@
Threw obc exception handling request %@
XPCStore sendMessage: Unhandled exception handling request.  %@
Threw unknown exception handling request
XPCStore sendMessage: Unhandled unknown exception handling request
v24@?0@"NSCoreDataXPCMessage"8@"NSData"16
Returning reply dict %@
Failed send (no reply dict).
PFCloudKitMetadataModelVersionHashesKey
PFCloudKitMetadataFrameworkVersionKey
PFCloudKitMetadataNeedsMetadataMigrationKey
com.apple.CoreData.cloudkit.metadata.transformer
PFCloudKitMetadataClientVersionHashesKey
PFCloudKitMetadataNeedsZoneFetchAfterClientMigrationKey
CoreData: CloudKit Metadata Model Migration
ZNSCK
NSCKExportMetadata
NSCKExportedObject
NSCKExportOperation
exportedAt
exportUUID
operations
operationUUID
sortIndex
status
exportMetadata
ckRecordName
changeType
operation
NSCKImportOperation
NSCKImportPendingRelationship
importDate
changeTokenBytes
pendingRelationships
recordName
relatedEntityName
relatedRecordName
relationshipName
isDeleted
isPending
isUploaded
NSCKMirroredRelationship
identifier
statusNum
changeToken
historyToken
operationError
zoneName
changeTypeNum
typeNum
stringValue
transformedValue
boolValueNum
integerValue
databaseName
databaseScopeNum
hasSubscriptionNum
currentChangeToken
ckRecordZoneName
ckOwnerName
hasRecordZoneNum
entityId
rootEntityId
entityPK
ckShare
uniqueIdentifier
recordZones
database
records
recordZone
cdEntityName
needsDelete
mirroredRelationships
ckRecordID
dateValue
lastFetchDate
hasChanges
needsUpload
needsCloudDelete
needsLocalDelete
lastExportedTransactionNumber
pendingExportTransactionNumber
pendingExportChangeTypeNumber
originalChangeTypeNum
originalTransactionNumber
finalTransactionNumber
finalChangeTypeNum
finalChangeAuthor
supportsFetchChanges
supportsAtomicChanges
supportsRecordSharing
recordType
queryCursor
queries
eventIdentifier
cloudKitEventType
startedAt
endedAt
succeeded
errorDomain
errorCode
countAffectedObjects
countFinishedObjects
needsImport
needsRecoveryFromZoneDelete
needsRecoveryFromUserPurge
recordZoneName
recordZoneOwnerName
relatedRecordZoneName
relatedRecordZoneOwnerName
supportsZoneSharing
encodedShareData
needsShareUpdate
mostRecentRecordModificationDate
ownerName
movedAt
recordMetadata
moveReceipts
encodedRecord
needsShareDelete
needsRecoveryFromIdentityLoss
Somehow got a temporary objectID for export: %s
This method only supports objectIDs from SQLite stores: %s
createRecordID called before the record has the necessary properties: %@
NCKRecordMetadata: System fields record name doesn't match row: %@
NSCKRecordMetadata: System fields record type doesn't match new schema: %@
Failed to reconstruct CKRecord from system fields in record metadata: %@
Cannot create objectID: called before the record has the necessary properties: %@
Cannot create objectID. Unable to find entity with id '%@' in store '%@'
Found more than one instance of NSCKRecordMetadata for object: %s
entityId = %@ and entityPK in %@
Exporter got record metadata back but doesn't have a corresponding objectID: %s
ckRecordName = %@ and recordZone.ckRecordZoneName = %@ and recordZone.ckOwnerName = %@
Found more than one instance of NSCKRecordMetadata for record: %s
Attempting to query cloudkit metadata without a mirroring delegate: %@
Invalid query for record metadata (by recordIDs): %@ returned no metadata or record names
recordZone = %@ AND ckRecordName in %@
%@_%@
CoreData+CloudKit: %s(%d): 
Failed to get a metadata zone while creating metadata for object: %@
+[NSCKRecordMetadata insertMetadataForObject:usingMetadataContext:setRecordName:inZoneWithID:recordNamePrefix:error:]
((recordZone.ckRecordZoneName = %@) AND (recordZone.ckOwnerName = %@) AND (ckRecordName IN %@)) OR (needsCloudDelete = 1 AND needsUpload = 0)
entityId = %@ AND entityPK IN %@
v32@?0@"NSNumber"8@"NSSet"16^B24
Illegal attempt to merge move receipts before assigning a record metadata to a store: %@
v24@?0@"CKRecordID"8@"NSDate"16
archiveDictionary
Unsupported: (unsupported function)
derived attribute
Z_DA_%@_%@_%@_PARAMETER
Z_DA_%@_%@_%@_SOURCE
DROP TRIGGER IF EXISTS %@_INSERT
DROP TRIGGER IF EXISTS %@_DELETE
dropStatements
 WHEN %d <= NEW.Z_ENT AND NEW.Z_ENT <= %d
 AND %d <= Z_ENT AND Z_ENT <= %d
 WHERE %d <= Z_ENT AND Z_ENT <= %d
 WHEN %d = NEW.Z_ENT
 AND %d = Z_ENT
 WHERE %d = Z_ENT
CREATE TRIGGER IF NOT EXISTS %@_INSERT AFTER INSERT ON %@ FOR EACH ROW
 BEGIN
 UPDATE %@ SET %@ = IFNULL(%@, 0) + 1 WHERE Z_PK = NEW.%@%@;
 SELECT NSCoreDataDATriggerUpdatedAffectedObjectValue('%@', Z_ENT, Z_PK, '%@', %@) FROM %@ WHERE Z_PK = NEW.%@%@;
 END
CREATE TRIGGER IF NOT EXISTS %@_DELETE AFTER DELETE ON %@ FOR EACH ROW
 UPDATE %@ SET %@ = %@ - 1 WHERE Z_PK = OLD.%@%@;
 SELECT NSCoreDataDATriggerUpdatedAffectedObjectValue('%@', Z_ENT, Z_PK, '%@', %@) FROM %@ WHERE Z_PK = OLD.%@%@;
CREATE TRIGGER IF NOT EXISTS %@_INSERT AFTER INSERT ON %@ FOR EACH ROW%@
 UPDATE %@ SET %@ = (SELECT IFNULL(COUNT(%@), 0) FROM %@ WHERE %@ = NEW.Z_PK) WHERE Z_PK = NEW.Z_PK;
 SELECT NSCoreDataDATriggerUpdatedAffectedObjectValue('%@', Z_ENT, Z_PK, '%@', %@) FROM %@ WHERE Z_PK = NEW.Z_PK;
UPDATE %@ SET %@ = (SELECT IFNULL(COUNT(%@), 0) FROM %@ WHERE %@ = %@.Z_PK)%@;
dataStatements
triggerCreationStatements
Unsupported: (multi-step keypath)
Unsupported: (bad keypath, should be toOne.attribute)
NEW.%@
NSCoreDataCanonical(NEW.%@)
NSCoreDataCanonical(%@)
NSCoreDataToUpper(NEW.%@)
NSCoreDataToUpper(%@)
NSCoreDataToLower(NEW.%@)
NSCoreDataToLower(%@)
Unsupported: (unsupported function for to one)
Unsupported: (unsupported expression for to one)
DROP TRIGGER IF EXISTS %@_UPDATE
%d <= NEW.Z_ENT AND NEW.Z_ENT <= %d
%d <= Z_ENT AND Z_ENT <= %d
%d = NEW.Z_ENT
%d = Z_ENT
 UPDATE %@ SET %@ = (SELECT %@ FROM %@ WHERE Z_PK = NEW.%@) WHERE Z_PK = NEW.Z_PK%@;
 AND %@
 SELECT NSCoreDataDATriggerInsertUpdatedAffectedObjectValue('%@', Z_ENT, Z_PK, '%@', %@) FROM %@ WHERE Z_PK = NEW.Z_PK%@;
CREATE TRIGGER IF NOT EXISTS %@_UPDATE AFTER UPDATE OF %@ ON %@ FOR EACH ROW%@
 WHEN %@
 UPDATE %@ SET %@ = (SELECT %@ FROM %@ WHERE Z_PK = NEW.%@) WHERE Z_PK = NEW.Z_PK;
 UPDATE %@ SET %@ = %@ WHERE %@ = NEW.Z_PK%@;
 SELECT NSCoreDataDATriggerInsertUpdatedAffectedObjectValue('%@', Z_ENT, Z_PK, '%@', %@) FROM %@ WHERE %@ = NEW.Z_PK%@;
CREATE TRIGGER IF NOT EXISTS %@_UPDATE AFTER UPDATE OF %@ ON %@ FOR EACH ROW
 SELECT NSCoreDataDATriggerUpdatedAffectedObjectValue('%@', Z_ENT, Z_PK, '%@', %@) FROM %@ WHERE %@ = NEW.Z_PK%@;
UPDATE %@ SET %@ = (SELECT %@ FROM %@ WHERE Z_PK = %@.%@)%@
%@, %@
Z_DA_%@_%@_%@
DROP TRIGGER IF EXISTS %@_UPDATE_SET
DROP TRIGGER IF EXISTS %@_UPDATE_UNSET
DROP TRIGGER IF EXISTS %@_%@_INSERT
CREATE TRIGGER IF NOT EXISTS %@_INSERT AFTER INSERT ON %@ FOR EACH ROW WHEN (NEW.%@ NOT NULL AND NEW.%@ NOT NULL)
 UPDATE %@ SET %@ = NEW.%@ WHERE Z_PK = NEW.%@%@ AND %@;
(%@ IS NULL OR NEW.%@ %@ %@)
 SELECT NSCoreDataDATriggerUpdatedAffectedObjectValue('%@', Z_ENT, Z_PK, '%@', %@) FROM %@ WHERE Z_PK = NEW.%@%@ AND %@;
(%@ IS NULL OR NEW.%@ %@= %@)
CREATE TRIGGER IF NOT EXISTS %@_UPDATE_SET AFTER UPDATE OF %@ ON %@ FOR EACH ROW WHEN (NEW.%@ NOT NULL AND NEW.%@ NOT NULL)
 UPDATE %@ SET %@ = (SELECT %@(%@) FROM %@ WHERE %@ = OLD.%@) WHERE Z_PK = OLD.%@%@ AND %@;
OLD.%@ %@= %@
 SELECT NSCoreDataDATriggerUpdatedAffectedObjectValue('%@', Z_ENT, Z_PK, '%@', %@) FROM %@ WHERE Z_PK = OLD.%@%@ AND %@;
NEW.%@ %@= %@
CREATE TRIGGER IF NOT EXISTS %@_UPDATE_UNSET AFTER UPDATE OF %@ ON %@ FOR EACH ROW WHEN (OLD.%@ NOT NULL AND OLD.%@ NOT NULL AND (NEW.%@ IS NULL OR NEW.%@ IS NULL))
(%@ IS NULL OR OLD.%@ %@= %@)
CREATE TRIGGER IF NOT EXISTS %@_DELETE AFTER DELETE ON %@ FOR EACH ROW WHEN (OLD.%@ NOT NULL AND OLD.%@ NOT NULL)
UPDATE %@ SET %@ = (SELECT %@(%@) FROM %@ WHERE %@ = %@.Z_PK)%@;
+ IFNULL(NEW.%@, 0)
- IFNULL(OLD.%@, 0)
DROP TRIGGER IF EXISTS %@_UPDATE_INCREMENT
DROP TRIGGER IF EXISTS %@_UPDATE_DECREMENT
CREATE TRIGGER IF NOT EXISTS %@_INSERT AFTER INSERT ON %@ FOR EACH ROW WHEN (NEW.%@ NOT NULL)
 UPDATE %@ SET %@ = IFNULL(%@, 0) %@ WHERE Z_PK = NEW.%@%@;
CREATE TRIGGER IF NOT EXISTS %@_UPDATE_INCREMENT AFTER UPDATE OF %@ ON %@ FOR EACH ROW WHEN (NEW.%@ NOT NULL)
 UPDATE %@ SET %@ = %@ %@ WHERE Z_PK = NEW.%@%@;
CREATE TRIGGER IF NOT EXISTS %@_UPDATE_DECREMENT AFTER UPDATE OF %@ ON %@ FOR EACH ROW WHEN (OLD.%@ NOT NULL)
 UPDATE %@ SET %@ = %@ %@ WHERE Z_PK = OLD.%@%@;
CREATE TRIGGER IF NOT EXISTS %@_DELETE AFTER DELETE ON %@ FOR EACH ROW WHEN (OLD.%@ NOT NULL)
 UPDATE %@ SET %@ = (SELECT IFNULL(%@(%@), 0) FROM %@ WHERE %@ = NEW.Z_PK) WHERE Z_PK = NEW.Z_PK;
COUNT
 SELECT NSCoreDataDATriggerInsertUpdatedAffectedObjectValue('%@', Z_ENT, Z_PK, '%@', %@) FROM %@ WHERE Z_PK = NEW.Z_PK;
UPDATE %@ SET %@ = (SELECT IFNULL(%@(%@), 0) FROM %@ WHERE %@ = %@.Z_PK)%@;
 WHEN (NEW.%@ NOT NULL)
 UPDATE %@ SET %@ = %@ WHERE Z_PK = NEW.Z_PK;
WHERE %d <= Z_ENT AND Z_ENT <= %d
NEW.
UPDATE %@ SET %@ = %@ %@
bad keypath
currently unsupported (bad root property type)
currently unsupported (wrong number of arguments)
bad parameter to function expression canonical: (not a keypath expression)
%@(%@)
NSCoreDataNow()
NSCoreDataCanonical
NSCoreDataToUpper
NSCoreDataToLower
random
currently unsupported (unsupported function)
Z_OPT
currently unsupported (extended keypath)
problem keypath
currently unsupported (unsupported function on to many (not count or sum))
malformed expression (dependent property is to many, derivation expression is not a function)
currently unsupported (unsupported keypath property type)
currently unsupported (unsupported expression type)
currently unsupported (predicate)
currently unsupported (too many steps)
currently unsupported (too many keypaths)
Updating relationship described by record: %@
-[PFCloudKitImportZoneContext initializeCachesWithManagedObjectContext:andObservedStore:error:]_block_invoke
%@ - Skipping unknown updated relationship record: %@
-[PFCloudKitImportZoneContext initializeCachesWithManagedObjectContext:andObservedStore:error:]_block_invoke_2
v32@?0@"NSString"8@"NSArray"16^B24
%@ - Skipping mirrored relationship for unknown relationships: %@
%@: Failed to serialize many to many relationship from record: %@
%@: Skipping invalid mirrored relationship record: %@
%@ - Skipping unknown updated record: %@
It is not a part of: %@
v32@?0@"CKRecord"8Q16^B24
Deleting record with id (%@): %@
%@ - Skipping unknown deleted relationship recordID: %@ - %@
%K = %@
Skipping mirrored relationship with record id (not found locally): %@
Import context failed to fetch mirrored relationships during import: %@
%@ - Skipping unknown deleted record: %@ - %@
Import is attempting to link objects across zones: %@
Deleting pending relationship because it's entities are no longer in the model: %@
-[PFCloudKitImportZoneContext initializeCachesWithManagedObjectContext:andObservedStore:error:]
Linking %@ to %@
-[PFCloudKitImportZoneContext registerObject:forInsertedRecord:withMetadata:]
v32@?0@"NSString"8@"NSMutableArray"16^B24
Populating unresolved relationships:
-[PFCloudKitImportZoneContext populateUnresolvedIDsInStore:withManagedObjectContext:error:]_block_invoke
Found temporary objectID for metadata link: %@
Found temporary objectID for metadata link: %@
<%@: %p> %@ -> %@
_NSCoreDataOptimisticLockingFailureConflictsKey
_NSCoreDataOptimisticLockingFailureMismatchWithObject
NSExceptionOmitCallstacks
expression
persistentStore
Bad compound predicate predicateOperator type
Invalid predicate: nil RHS
Too many KVC aggregates in keypath: %@
Malformed keypath: %@
valueForKey:
valueForKeyPath:
count:
supportedKVCAggregates
Unsupported KVC aggregate in keypath: %@
average
Subquery expressions must have a collection expression containing a single keypath
Relationship fault for %@ on %p
Relationship objects for %@ on %p: %@
Relationship '%@' fault on managed object (%p) %@
Relationship '%@' on managed object (%p) %@ with objects %@
add%sObject:
add%s:
remove%sObject:
remove%s:
intersect%s:
set%s:
IEM_
removedProperties
addedProperties
mappedProperties
couldFailValidation
Each source entity must have a unique renaming identifier
Each destination entity must have a unique renaming identifier
manager
fetchRequestForSourceEntityNamed:predicateString:
TRUEPREDICATE
sourceContext
Each property must have a unique renaming identifier
(migration) destination model property (renaming identifier '%@') matches the renaming identifier for a different type of property (%@) in the source model. Properties cannot be mapped to other property types.
(migration) uninferrable, non-transient property type '%u' for destination model property (renaming identifier '%@'), source model property (renaming identifier '%@').
Remove
Copy
Transform
(migration) attribute mapping for (%@->%@) requires data validation during store migration, mapping a new, mandatory attribute without a default value.
property
entity
Source and destination attribute types are incompatible
(migration) attribute mapping for (%@->%@ to %@->%@) requires data validation during store migration, mapping a previously optional attribute to a mandatory attribute without a default value.
_prependExternalBlobToken:
Unable to use inferred mapping to move external reference into store.
entityPolicy
_nonNilValueOrDefaultValueForAttribute:source:destination:
destination
Unable to infer mapping for attribute
(migration) relationship mapping for (%@->%@) requires data validation during store migration, mapping a new, mandatory relationship.
(migration) relationship mapping for (%@->%@ to %@->%@) requires data validation during store migration, mapping a previously optional relationship to a mandatory relationship.
Can not map from a to-many to a to-one relationship
destinationInstancesForSourceRelationshipNamed:sourceInstances:
Unable to infer mapping for relationship
%@%@_%@
_value
API misuse: there shouldn't be a connection here
Database connection failed to adopt query generation
Caught a non-object exception in the connectionManager
*RequestContext connection may not be reset
 { %@:%@:%@ }
v16@?0@"CKRecord"8
v24@?0@"CKQueryCursor"8@"NSError"16
%@: Finished with cursor: %@
-[PFCloudKitCKQueryBackedImportWorkItem queryOperationFinishedWithCursor:error:completion:]
%@: Failed due to querying for an unknown record type (not fatal, schema needs to be initialized): %@
Import failed because creating the zone query hit an unhandled exception.
Request '%@' was cancelled because the store was removed from the coordinator.
Import failed because applying the zone query metadata changes hit an unhandled exception.
%@ - Exception thrown during query import: %@
/System/Library/PrivateFrameworks/CoreAnalytics.framework/CoreAnalytics
AnalyticsSendEvent
 WHERE  (1 = 1) 
INSERT OR IGNORE INTO 
INSERT INTO 
) VALUES(?, ?, ?
 ON CONFLICT
 DO UPDATE SET Z_OPT = Z_OPT+1
excluded.
INSERT OR REPLACE INTO 
) VALUES (?, ?
UPDATE OR FAIL 
 SET 
 = ? WHERE 
 = ? AND 
 = ?
 WHERE 
DELETE FROM 
 WHERE Z_PK = ? AND (Z_OPT = ? OR Z_OPT IS NULL)
 WHERE Z_PK = ? AND Z_OPT = ?
Updating a constrained entity generated an UPDATE statement with no columns on entity %@
 WHERE Z_PK = ?
 WHERE %@ = ? AND %@ = ?
@"NSObject"40@?0@"NSCachingFetchRequest"8@"NSManagedObjectContext"16@"NSDictionary"24@32
Batched history request: %@ encountered an error
 error: %@
Batched history request encountered error %@
Batched persistent history request encountered an error
Batched persistent history request returned a result AND an error %@
Error attempted to convert unknown Ancillary Entity: %@
iBooks
Music
batch
%@: index (%lu) beyond bounds (%u)
%@ (%p) of %lu items for request %@
You're doing it wrong
Skanky class can only be used skankily.
NSOrderedSet wrapper '%@' for fetch request results: %@
batched fetch array received an error %@ with userInfo %@
 batched fetch request asked to fetch %d objects but received %d objects as %@
hw.activecpu
%@ is not a valid initializer for %@. Use %@ instead.
com.apple.CoreData
CoreData
 Can't find CoreData image header.
Can't find the hash for some reason, using empty data
B16@?0@"NSManagedObject"8
Failed to stat file, errno, %s.
Executing as effective user %u
Information for %s
---------------------------
File Device ID: 
Device ID: 
File Size: 
%lld bytes
File inode: 
%llu
File user ID: 
File group ID: 
File Permissions: 
The file %s a symbolic link
is not
Failed to statfs file, errno, %s.
Information for file system
File system type: 
%#lx
File system flags: 
%#lx
MNT_RDONLY
MNT_QUOTA
MNT_ROOTFS
MNT_UNKNOWNPERMISSIONS
MNT_JOURNALED
MNT_DEFWRITE
Total data blocks: 
Free data blocks: 
Free blocks for nonsuperuser:
Total i-nodes: 
File system ID: 
%#x, %#x
Free i-nodes: 
%llu
Owner UID: 
Filesystem type name: 
Mount on name: 
Mount from name: 
.interim
Failed to clone external data reference from %@ to %@ error: %@
Can't open externalDataReference interim file : %d
Problem Path
Can't create externalDataReference interim file : %d
Can't copy interim file to permanent location : %d
Problem object
Unable to open file with path %s (%d)
Unable to open file with path: %s (%d)
Missing bytes from file at path %s, expected %lu, got %lu
Unable to read content of file with path: %s (%d)
Unable to read requested number of bytes from path: %s (got %lu)
/dev/null
%@ threw while decoding a value.
%@ threw while encoding a value.
v32@?0@8@16^B24
UIApplicationDidEnterBackgroundNotification
UIApplicationWillResignActiveNotification
UIApplicationWillTerminateNotification
UISceneWillDeactivateNotification
UISceneDidEnterBackgroundNotification
UIApplicationWillEnterForegroundNotification
UIApplicationDidFinishLaunchingNotification
UIApplicationDidBecomeActiveNotification
UISceneDidActivateNotification
UISceneWillEnterForegroundNotification
This method can't be very efficient if you don't bother to set a batch size!
offendingFetch
Efficient batching requires the use of query generations: %@
Batch finished processing with pending changes in the moc. This prevents the context from being reset and purging rows / snapshots from memory. Please save at the end of each batch.
_PFLock deallocated while in use
_PFMutex deallocated while in use
.LINKS
_PFEncodedData
NSKnownKeysMappingStrategy2
Corrupted archive (unexpected data in pointer space).
Corrupted archive (failed to read row).
Corrupted branch row in optimized model detected:
Background Core Data task threw an exception.  Exception = %@ and userInfo = %@
_NSZombie_%s
_NSZombie_
metadataForPersistentStoreWithURL:error: must be overriden by your store class to provide metadata
NSMappedObjectStore must be initialized with initWithPersistentStoreCoordinator:configurationName:URL:options
Atomic stores do not support file backed futures
save: must be overriden by your store class to save data to the store
load: must be overriden by your store class to load data from the store
Store %@ cannot hold instances of entity %@
newCacheNodeForManagedObject: must be overriden by your store class to create a cache node from a managed object
updateCacheNode:fromManagedObject: must be overriden by your store class to update a cache node from a managed object
Cannot retrieve referenceObject from an objectID that was not created by this store
Store Type does not support Persistent History
Unknown command type %@
Unsupported fetch request: store %@ does not support GROUP BY
NSCoreDataPrimaryError
Error saving the persistent store.
NSPersistentCloudKitContainerEventResult initialized without any subresults to aggregate.
Unknown NSPersistentCloudKitContainerEventResultType in subResult: %@
NSAtomicStoreCacheNodes must be initialized using initWithObjectID:(NSManagedObjectID *)
NSAtomicStoreCacheNodes must be created with an objectID
NSAttributeType
NSAttributeValueClassName
NSDefaultValue
NSValueTransformerName
NSIsIndexed
NSFlagsKey
NSSecureUnarchiveFromDataTransformerName
NSValueTransformerName requires a NSString
NSAttributeValueClassName requires a NSString
NSMaxValueName
NSMinValueName
NSIsFileBackedFuture
%@, attributeType %lu , attributeValueClassName %@, defaultValue %@, preservesValueInHistoryOnDeletion %@, allowsCloudEncryption %@
Can't set attributeValueClassName to nil for a non-transient attribute.
Can't set attribute type to undefined for non-transient attribute.
'%@' is only supported for use with '%@'.
Can't find class for type %lu
_NSCreateIndex
SELF >= %@
SELF =< %@
length >= %@
length =< %@
timeIntervalSinceReferenceDate >= %@
timeIntervalSinceReferenceDate =< %@
self >= %@
self =< %@
B24@?0@"NSURL"8@"NSDictionary"16
NSDoubleAttributeType
NSDateAttributeType
NSFloatAttributeType
NSStringAttributeType
NSBooleanAttributeType
NSDecimalAttributeType
NSObjectIDAttributeType
NSInteger16AttributeType
NSInteger32AttributeType
NSInteger64AttributeType
NSBinaryDataAttributeType
NSTransformableAttributeType
NSURIAttributeType
NSUUIDAttributeType
NSUndefinedAttributeType
length
timeIntervalSinceReferenceDate
%@:%@ - Encryption must also be applied to all inherited attributes from the parent entity (%@)
no NSValueTransformer with class name '%@' was found for attribute '%@' on entity '%@'
xctest
cplctl
One or more models in this application are using transformable properties with transformer names that are either unset, or set to NSKeyedUnarchiveFromDataTransformerName. Please switch to using "%@" or a subclass of NSSecureUnarchiveFromDataTransformer instead. At some point, Core Data will default to using "%@" when nil is specified, and transformable properties containing classes that do not support NSSecureCoding will become unreadable.
Property '%@' on Entity '%@' is using nil or an insecure NSValueTransformer.  Please switch to using "%@" or a subclass of NSSecureUnarchiveFromDataTransformer instead.
NSTriggerKey
Error decoding default value for %@ : %@
INTEGER
NUMERIC
DOUBLE
TEXT
BOOLEAN
TIMESTAMP
BLOB
Undefined attribute type.
abstract
_NSCoreManagedObjectID
Entity name must not be nil.
Store must not be nil.
_NSObjectID_%s_%x
%@://%@/%@/p%@
x-coredata
x-coredata://
%@://%@/%@/p%qu
_NSCoreDataTaggedObjectID
-initWithObject: is not implemented on tagged objectIDs
%@://%@/%@/t%@%d
Cannot create a binary store with a nil URL.
CoreData binary stores only support file URLs (got %@).
Error validating url for store
Attempt to add read-only file at path %@ read/write. Adding it read-only instead. This will be a hard error in the future; you must specify the NSReadOnlyPersistentStoreOption.
Attempt to add read-only store read-write
NSBinaryObjectStore only supports file URLs right now.
Can't save store to %@ (read-only store)
Keyed archiver failure
metadata
mapData
Binary store: writeToFile error = %@ and userInfo = %@
NSAttributeValues
NSAttributes
Can't read binary data from file
Can't load binary data from file (file was created by an incompatible version of CoreData)
_NSStoreMapArchiveVersion
_NSStoreMapArchiveMetadata
_NSStoreMapArchiveNextPK
_NSStoreMapArchiveData
Can't load data from archived data (archived data was created by an incompatible version of CoreData)
Directory does not exist : %@
Not a directory : %@
Directory is not writable : %@
Binary store save failed.
Can't construct a node from nil.
Source object
Destination Object
Relationship
CoreData does not support persistent cross-store relationships
Can't find entity for object
_CoreDataEntityDescription
_CoreDataEntityName
NSKeyValueUndefinedSetter
NSKeyValueUndefinedGetter
+entityForName: nil is not a legal NSManagedObjectContext parameter searching for entity name '%@'
+entityForName: nil is not a legal NSPersistentStoreCoordinator for searching for entity name '%@'
+entityForName: could not locate an NSManagedObjectModel for entity name '%@'
+entityForName: could not locate an entity named '%@' in this model.
NSEntityName
NSClassNameForEntity
NSIsAbstract
NSManagedObjectModel
NSSuperentity
NSSubentities
NSProperties
NSUserInfo
NSVersionHashModifier
NSRenamingIdentifier
NSUniqueTuples
NSCoreSpotlightDisplayName
NSFetchIndexDescriptions
NSCompoundIndexes
ascending
desc
descending
binary
rtree
NSVersionHashModifier requires a NSString
NSClassNameForEntity requires a NSString
description
this value is required to be a dictionary
NSRenamingIdentifier requires a NSString
NSSupplementalIndexes
(%@) name %@, managedObjectClassName %@, renamingIdentifier %@, isAbstract %u, superentity name %@, properties %@, subentities %@, userInfo %@, versionHashModifier %@, uniquenessConstraints %@
NSManagedObject
B16@?0@"NSPropertyDescription"8
Can't add a subentity to an entity (missing name or bad properties).
Invalid property passed to setProperties: property has nil name or is an NSExpressionDescription.
Can't change name of entity from %@ to %@
can't find attribute named %@
can't find relationship named %@
can't create index %@, unsupported index element property type
element
Indexes must be declared at the highest applicable level. All properties are declared on superentity.
index
Cannot merge uniqueness constraints { %@ } on entity '%@' due to relationship '%@' having a mandatory to-one inverse relationship '%@' and not using a cascade delete rule on '%@'
Can't find property named %@
Problem name
Can't find property description '%@' %@ while setting unique constraints on entity '%@'
Cannot create unique constraints for to-many relationships.
Property type is not valid for unique constraints.
Uniqueness constraints must be defined at the highest level possible. All properties in constraint %@ are defined on parent entity.
Problem constraint
Can't add an entity to multiple superentities.
Can't add unnamed subentity.
Can't add multiple entities with duplicate names.
Can't add unnamed property to entity.
Entity already contains a property named %@.
Can't add NSExpressionDescriptions to NSEntityDescriptions
tried to add property %p '%@' to entity %p '%@' but it already belongs to entity %p '%@'
UNIQUE
Model must be immutable before mapping strategy can be created
Can't use an entity in two models.
B24@?0@"NSPropertyDescription"8^B16
Unable to load class named '%@' for entity '%@'.  Class not found, using default NSManagedObject instead.
Class '%s' for entity '%@' is not a subclass of NSManagedObject
"%@" is not a subclass of NSManagedObject.
Class '%s' for entity '%@' has an illegal override of NSManagedObject -isEqual:
Class '%s' for entity '%@' has an illegal override of NSManagedObject -hash
Cannot make an immutable entity editable again.
Can't set superentity of self to self.
Bad model.  For entity '%@' superentity '%@' does not think I am a subentity
Bad model.  For entity '%@' subentity '%@' does not think I am its superentity
Bad model.  For entity '%@' subentity '%@ (%p)' is not registered in NSManagedModelModel.  Model has a reference to %@ (%p)
Can't remove property '%@' - doesn't belong to this entity.
Property named '%@' in entity '%@' conflicts with property inherited from parent entity '%@'
Subentity has an index on parent property: %@
Entity %@ already has an index with name %@
Entity
Entity '%@' has unique constraints { %@ } with relationship '%@' and mandatory to-one inverse '%@' but is not using a cascade delete rule .
inverse
Entity '%@' has unique constraints { %@ } with a relationship and mandatory to-one inverse but is not using a cascade delete rule .
Entity wasn't finalized properly before use
Can't read entity into shell: Missing entity frontside delimiter
Root cause
Can't read entity: Not enough bytes left
Can't read entity: Missing version hash value
Can't read entity: Missing entity name
Cant' read entity: Miswired subentities dictionary
Cant' read entity: Mismatched subentity count
Cant' read entity: Properties dictionary has content
Cant' read entity: Properties buffer has content
Cant' read entity: Property entity does not match entity being decoded (1)
Cant' read entity: Property entity does not match entity being decoded (2)
Can't decode coreSpotlightDisplayNameExpression for entity %
Can't decode coreSpotlightDisplayNameExpression - wrong class decoded - %@
Cant' read entity: Mismatched number of fetch indexes
Cant' read entity: Mismatched number of fetch index elements
Unable to decode userInfo for entity '%@' : %@
Can't read entity into shell: Missing entity back-end delimiter
Relationship properties should be @dynamic, not ivars (entity %@, class %s, property %@).  This will be an error in the future.
validate%s:error:
(%@), name %@, mappingType %u, sourceEntityName %@, sourceEntityVersionHash %@, destinationEntityName %@, destinationEntityVersionHash %@, attributeMappings %@, relationshipMappings %@, sourceExpression %@, entityMigrationPolicyClassName %@, userInfo %@
%@->%@
NSMappingName
NSMappingType
NSSourceEntityName
NSSourceEntityVersionHash
NSDestinationEntityName
NSDestinationEntityVersionHash
NSSourceExpression
NSEntityMigrationPolicyClassName
NSAttributeMappings
NSRelationshipMappings
NSMappingName requires a NSString
NSSourceEntityName requires a NSString
NSDestinationEntityName requires a NSString
NSEntityMigrationPolicyClassName requires a NSString
Couldn't create mapping policy for class named (%@)
Entity Mappings cannot become mutable after being marked immutable.
Can't modify an immutable entity mapping.
entityMapping
propertyMapping
Can't find source for destination in default mapping policy
More than one source for destination in default mapping policy
Unknown/unsupported type for ordered toMany relationship destination
relationshipDestinations
Unknown/unsupported type for toMany relationship destination
More than one relationship destination for a toOne relationship
Unknown/unsupported type for toOne relationship destination
%@ -> %@
NSExpression
NSExpressionType
(<%@ : %p>), name %@, expression %@, resultType %lu, userInfo %@
Unable to decode expression for expression description %@ : %@
NSKeyValueIvarSetter
NSKeyValueMethodSetter
NSKeyValueIvarGetter
NSKeyValueMethodGetter
During prefetching, materialized to-many relationship '%@' on object %@ was null
During prefetching, materialized to-one relationship '%@' on object %@ was not a managed object but instead %@
FETCH_SOURCE
FETCHED_PROPERTY
CoreData could not fulfill a fetched property because '%@'
Fetched Property
CoreData Debug Logging: Exception = %@ with error code = %ld and userInfo = %@
message
failed to retrieve ordering information from fault for object %@ and relationship %@ due to nil NSManagedObjectContext
An NSManagedObject must have a valid NSEntityDescription.
NSPersistentStoreCoordinatorDelegate returned an illegal NSPersistentStoreCoordinatorDelegateErrorAction
avatarsd
CalendarAgent
CoreData could not fulfill a fault for '%@'
<UNKNOWN objectID>
An NSManagedObjectContext delegate overrode fault handling behavior to silently substitute nil/0 for all property values for the object with ID '%@'.  This is very unwise.
An NSManagedObjectContext delegate returned an illegal result
Unhandled error occurred during faulting: %@ (%@)
Unhandled error (%@, %ld) occurred during faulting and was ignored: %@
Unhandled error (%@, %ld) occurred during faulting and was thrown: %@
Client ill advisedly ignored an I/O or unknown error from faulting: %@
faulting failed to record an error for an serious condition
<NSPersistentHistoryChange: %lld %@ %@ %lld %@ %@>
NSPersistentHistoryChangeType
NSPersistentHistoryChangeTypeInsert
NSPersistentHistoryChangeTypeUpdate
NSPersistentHistoryChangeTypeDelete
'%ld' is an unknown NSPersistentHistoryChangeType value
Unexpected change - objectID failed for entity - %@, entityID - %ld,  pk - %lld,  model - %@ - %@, store - %@
entityID
Unexpected change - entity ID (%ld) not found in model - %@ - %@, store - %@
%@%lu
NSPersistentHistoryChangeObjectID
NSPersistentHistoryChangeID
NSPersistentHistoryChangeTombstone
NSPersistentHistoryChangeTransaction
NSPersistentHistoryChangeColumn
Z_%@_%@
%@%@_MIN, %@_MAX
%@NEW.%@, NEW.%@
%@%@, %@
%@%@ NOT NULL
 AND 
CREATE VIRTUAL TABLE IF NOT EXISTS %@ USING RTREE (Z_PK INTEGER PRIMARY KEY, %@)
DROP TABLE IF EXISTS %@
CREATE TRIGGER IF NOT EXISTS %@_INSERT AFTER INSERT ON %@ FOR EACH ROW BEGIN INSERT OR REPLACE INTO %@ (Z_PK, %@) VALUES (NEW.Z_PK, %@) ; END
CREATE TRIGGER IF NOT EXISTS %@_UPDATE AFTER UPDATE ON %@ FOR EACH ROW BEGIN DELETE FROM %@ WHERE Z_PK = NEW.Z_PK ; INSERT INTO %@ (Z_PK, %@) VALUES (NEW.Z_PK, %@) ; END
CREATE TRIGGER IF NOT EXISTS %@_DELETE AFTER DELETE ON %@ FOR EACH ROW BEGIN DELETE FROM %@ WHERE Z_PK = OLD.Z_PK ; END
INSERT OR REPLACE INTO %@ (Z_PK, %@) SELECT Z_PK, %@ from %@ where %@
NSFetchRequest
_NSFetchRequestEntityName
_NSFetchRequestEntityName requires a NSString
%@, fetchRequest %@
Can't use fetch request with fetched property description (entity model mismatch).
NSValuesToGroupBy
NSHavingPredicate
NSFetchOffset
NSValuesToFetch
NSEntity
NSPredicate
NSSortDescriptors
NSFetchLimit
NSBatchSize
NSRelationshipKeyPathsForPrefetching
NSResultType
NSAllocationType
NSAllocationSize
NSHasFetchRequestFlags
NSFetchRequestFlags
%@ (entity: %@; predicate: (%@); sortDescriptors: (%@); 
limit: %u; 
offset: %u; 
batch size: %u; 
type: %@; 
unknown request type
affected stores: (%@); 
includesSubentities: NO; 
includesPropertyValues: NO; 
returnsObjectsAsFaults: NO; 
includesPendingChanges: NO; 
returnsDistinctResults: YES; 
shouldRefreshRefetchedObjects: YES; 
NSFetchRequestBufferAllocationType
NSFetchRequestVMBufferAllocationType
allocation type: %@; 
allocation size: %u; 
relationshipKeyPathsForPrefetching: (%@); 
propertiesToFetch: (%@); 
havingPredicate: (%@); 
propertiesToGroupBy: (%@); 
Cannot fetch without an NSManagedObjectContext in scope
This fetch request (%p) was created with a string name (%@), and cannot respond to -entity until used by an NSManagedObjectContext
Invalid keypath %@ passed to %@
setPropertiesToGroupBy:
setPropertiesToFetch:
Invalid keypath %@ passed to setPropertiesToGroupBy:
Invalid keypath %@ passed to %@:
Invalid keypath %@ passed to %@ (non-terminal attribute)
Invalid to many relationship in setPropertiesToFetch: (%@)
Invalid keypath %@ passed to %@ (invalid property type)
Invalid property %@ passed to %@ (property is transient)
Attribute/relationship description names passed to %@ must match name on fetch entity (%@)
Invalid property (%@) passed to setPropertiesToFetch: (entity mismatch)
Invalid to many relationship (%@) passed to %@:
Invalid keypath expression (%@) passed to setPropertiesToFetch:
NSFetchRequest could not locate an NSEntityDescription for entity name '%@'
Can't modify a named fetch request in an immutable model.
Invalid groupByProperty type in archive
Can't decode predicate for fetch request
Invalid propertyToFetch type in archive
Can't decode sortDescriptor for fetch request
NSManagedObjectResultType
NSManagedObjectIDResultType
NSDictionaryResultType
NSCountResultType
Unknown fetch request result type: %ld
activityType
storePath
eventIdentifier = %@
Found multiple NSPersistentCloudKitContainerEvents for the identifier '%@'
No event was found for the identifier '%@' in this result: %@
An unhandled exception was caught while trying to finish the event for: %@
+[NSCKEvent finishEventForResult:withMonitor:error:]_block_invoke
Cannot create persistent event for request: %@
com.apple.CoreData.%@.%p
Remote Change Notification - posting NSRemotePersistentStoreDidChangeNotification for store  %@ 
Remote Change Notification - PSC to post notification for store  %@ with state %ld
Exception thrown posting NSRemotePersistentStoreDidChangeNotification: %@
Unknown exception thrown posting NSRemotePersistentStoreDidChangeNotification
v12@?0i8
 Failed to setup notification listener: %d
NSFRExpression
NSMOCExpression
NSCountOnlyFlag
NSFetchRequestExpression could not evaluate its request or context.
FETCH(%@, %@, %@)
Cannot substitute a nil substitution dictionary.
NSSourceAttributeName
NSDestinationAttributeName
branch row pointer is NULL
[%d]
branch row pointer%@ = %p flags.size = %d flags.operation = %d flags.parameter = %d flags.offset = %d lowerBound = %d lowerSlot = %d upperBound = %d upperSlot = %d generalSlots pointer = %p with contents = %@
mapping table pointer is NULL
mapping table has 0 branch rows
mapping table %p has %d branch rows:
%@ supports a maximum of 32,768 elements.  parameter was %lu
keys
length is a bogus value
version
mapping table %p has %d branch rows: (...)
%@ (%p) table of length %d with known keys:%@ and %@
searchMapping
emptyToken
values
__empty_slot_token_4c24_98dc_ac1e_b773__
The key '%@' is not defined for this NSKnownKeysDictionary
NSTargetObjectUserInfoKey
NSUnknownUserInfoKey
NSKnownKeysDictionary: dumping bad mapping: %@ with length:
 key[%d] = %@
NSKnownKeysDictionary: improper mapping detected with key '%@'
NSDetailedErrors
NSValidationErrorObject
NSValidationErrorKey
NSValidationErrorPredicate
NSValidationErrorValue
NSAffectedStoresErrorKey
NSAffectedObjectsErrorKey
NSOriginalSnapshot
NSInsertedObjects
NSDeletedObjects
NSCurrentObjects
NSSQLiteErrorDomain
Delete: %@
Insert: %@ at index: %lu
Move: %@ to index: %lu
(...not nil..)
<relationship fault: %p '%@'>
(...and %ld more...)
%@ (entity: %@; id: %@; data: %@)
<fault>
%@ (entity: <null>; id: %@; data: <fault>)
An NSManagedObject of class '%@' must have a valid NSEntityDescription.
NSEntityDescription '%@' can only support a single custom class (tried to instantiate class '%@'). Use a subentity with 0 properties to further specialize the NSManagedObject subclass.
CoreData: error: Failed to call designated initializer on NSManagedObject class '%@' 
[<%@ %p> valueForUndefinedKey:]: the entity %@ is not key value coding-compliant for the key "%@".
Mutating a managed object %@ (%p) after it has been removed from its context.
NSValidationErrorShouldAttemptRecoveryKey
NSManagedObjects of entity '%@' do not support -mutableArrayValueForKey: for the property '%@'
NSManagedObjects of entity '%@' do not support -mutableSetValueForKey: for the property '%@'
NSManagedObjects of entity '%@' do not support -mutableOrderedSetValueForKey: for the property '%@'
[<%@ %p> setValue:forUndefinedKey:]: the entity %@ is not key value coding-compliant for the key "%@".
[<%@ %p> setNilValueForKey]: instance of entity %@ could not set nil as the value for the key %@.
<null>
Cannot set BindableObject publisher after it has already been set
Unacceptable type of value for attribute: property = "%@"; desired type = %@; given type = %@; value = %@.
A class implementing the NSFileBackedFuture protocol
value
Cannot set value for attribute with undefined type: property = "%@"; entity = "%@"; value = %@
Illegal attempt to establish a relationship '%@' between objects in different contexts (source = %@ , destination = %@)
Unacceptable type of value in to-many relationship: property = "%@"; problem = %@; desired type = %@; given type = %@; value = %@.
Unacceptable type of value for %@ relationship: property = "%@"; desired type = %@; given type = %@; value = %@.
ordered to-many
to-many
Unacceptable type of value for to-one relationship: property = "%@"; desired type = %@; given type = %@; value = %@.
Insufficient information to maintain inverse relationship "%@" for relationship: %@.
Cannot maintain read-only inverse relationship "%@" for relationship: %@.
%{ENTITY}@
%{PROPERTY}@
Illegal validation warning: property = "%@"; predicate/warning index = %lu; warning = %@.
i24@?0r^v8r^v16
Object has pending changes
%@: null selector
%s_%s_
%s_%s_%x
Failed to generate function for '%s'
Failed to add function to class for '%s'
contextShouldIgnoreChangesFor
_cd_bits_%p
Incorrect ivar generation
[%dI]
class_addIvar failed
Testing generated function for +classForEntity: failed for entity %s (%p)
Testing generated function, factory %p != result %p
Factory and entity class skew over placeholder singleton.  Expected %p but got %p for entity '%s'
Exception %@ ui %@ occurred in +[NSManagedObject classForEntity:]
Unknown exception occurred in +[NSManagedObject classForEntity:]
Multiple NSEntityDescriptions claim the NSManagedObject subclass '%s' so +entity is unable to disambiguate.
 '%@' (%p) from NSManagedObjectModel (%p) claims '%s'.
No NSEntityDescriptions in any model claim the NSManagedObject subclass '%s' so +entity is confused.  Have you loaded your NSManagedObjectModel yet ?
Multiple NSEntityDescriptions in NSManagedObjectModel (%p) claim the NSManagedObject subclass '%s' so +entity is unable to disambiguate.  Both entities '%@' (%p) and '%@' (%p)
This NSManagedObjectContext (%p) does not have a coordinator and model assigned yet so +entity on '%s' is sad.
+[%s entity] Failed to find a unique match for an NSEntityDescription to a managed object subclass
Exception %@ ui %@ occurred in +[NSManagedObject _entityDeallocated:]
Unknown exception occurred in +[NSManagedObject _entityDeallocated:]
Snapshot class was nil
NULL _cd_rawData but the object is not being turned into a fault
automaticallyNotifiesObserversOf
primitive
setPrimitive
managedObjectOriginal_
Property '%s' is a 64 bit scalar type on class '%s' that does not match its entity's property's 32 bit scalar type.  Implicit coercion to 32 bits in the database is not recommended.
Property '%s' is a scalar type on class '%s' that does not match its Entity's property's scalar type.  Dynamically generated accessors do not support implicit type coercion.  Cannot generate a getter method for it.
Property '%s' is a scalar type on class '%s'.  Cannot generate a getter method for it.
dynamic accessors failed to find @property implementation for '%s' for entity '%@' while resolving selector '%s' on class '%s'.  Did you remember to declare it @dynamic or @synthesized in the @implementation ?
Property '%s' is marked __weak on class '%s'.  Cannot generate a setter method for it.
Property '%s' is a scalar type on class '%s' that does not match its Entity's property's scalar type.  Dynamically generated accessors do not support implicit type coercion.  Cannot generate a setter method for it.
Property '%s' is a scalar type on class '%s'.  Cannot generate a setter method for it.
Property '%s' is marked copy on class '%s'.  Cannot generate a copying setter method for NSManagedObject's to-one relationship.
Property '%s' is marked readonly on entity '%@'.  Cannot generate a setter method for it.
Object:
remove
AtIndex:
removeObjectFrom
v@:Q
AtIndexes:
insert
insertObject:in
v@:@Q
:atIndexes:
v@:@@
replace
replaceObjectIn
AtIndex:withObject:
v@:Q@
AtIndexes:with
validate
:error:
will
Change
Access
v@:@
v@:I
v24@?0@8d16
v20@?0@8f16
d16@?0@8
^v16@?0@8
@16@?0@8
@24@?0@8@16
@32@?0@8@16@24
@24@?0@8Q16
@20@?0@8I16
@32@?0@8Q16@24
v@:I@
@28@?0@8I16@20
@32@?0@8@16Q24
v@:@I
@28@?0@8@16I24
generateAccessorWithFunctionPtrSignature failed with unknown signature '%s'
v16@?0@"NSKeyValueSetter"8
inserted
updated
deleted
refreshed
invalidated
invalidatedAll
managedObjectContext
newQueryGeneration
newChangeToken
transactionAuthor
_NSTriggerModifiedObjectsKey
_NSTriggerModifiedObjectIDsKey
inserted_objectIDs
updated_objectIDs
deleted_objectIDs
refreshed_objectIDs
invalidated_objectIDs
NSObjectsChangedByMergeChangesKey
NSObjectsChangedInManagingContextNotification
_NSObjectsChangedInManagingContextPrivateNotification
NSManagingContextDidSaveChangesNotification
NSManagingContextWillSaveChangesNotification
NSManagedObjectContextDidSaveObjectIDsNotification
_NSManagedObjectContextDidSaveObjectIDsPrivateNotification
NSManagedObjectContextDidMergeChangesObjectIDsNotification
_NSManagedObjectContextDidMergeChangesObjectIDsPrivateNotification
ImplicitObservation
com.apple.CoreData.ConcurrencyDebug
com.apple.CoreData.Logging.oslog
com.apple.CoreData.Logging.stderr
com.apple.CoreData.Toolchain.EnableToolchainBehaviors
CommCenter
SpringBoard
News
assetsd
photolibraryd
accountsd
soagent
Radio
Podcasts
Core Data multi-threading assertions enabled.
Context already has a coordinator;  cannot replace.
An NSManagedObjectContext's retain policy cannot be changed while it has registered objects.  Trying using reset() first.
NSManagedObjectContext over-release triggered improper dealloc here:
Parameter #1 to -assignObject:toPersistentStore: must be an NSManagedObject or subclass.
Can't assign an object to a store that does not contain the object's entity.
Can't reassign an object to a different store once it has been saved.
newStoreURL
originalStoreURL
Cannot insert '%@' in this managed object context because it is not found in the associated managed object model.
-deleteObject: requires a non-nil argument
An NSManagedObjectContext cannot delete objects in other contexts.
Context does not have a coordinator;  cannot obtain permenant ids without a coordinator.
fatal: Unable to recover from optimistic locking failure.
Attempting to generate a constraint exception for non constraint error.
Conflicts
constraint validation failure
Exception while resetting query generation during exception recovery for save %@ %@
Unknown exception while resetting query generation during exception recovery for save
attempt to recursively call -save: on the context aborted
stack trace
failed to resolve optimistic locking failure: %@ with %@
failed to resolve optimistic locking failure.  Old save request was: %@
failed to resolve optimistic locking failure.  Next attempt will be: %@
NSErrorMergePolicy failed to resolve %ld conflicts (%@)
nil is not a valid object ID
existingObjectWithID incorrectly returned nil without an error set for objectID %@
Fetching generated a result AND an error: %@
Fetching returned nil AND failed to generate an error
unknown failure to generate an error during executeFetchRequest
NSSaveChangesRequest is not supported by executeRequest:error:
Context does not have a coordinator; cannot perform executeRequest:error:.
Unknown batch request - %@ - %lu
Unknown request - %@ - %lu
Either a non nil result OR an error OR an exception
%@ %@ is not a valid NSFetchRequest.
%@ A fetch request must have an entity.
The fetch request's entity %p '%@' appears to be from a different NSManagedObjectModel than this context's
Fetching generated an error AND a result: %@
Fetching failed to generate a result OR an error OR an exception
NSConfinementConcurrencyType context %@ cannot support asynchronous fetch request %@.
managed objects
An NSManagedObjectContext cannot refresh objects in other contexts.
NSConcurrencyType
NSFetchTimestamp
NSRetainsRegisteredObjects
NSPropagatesDeleted
NSMergePolicy
An NSManagedObjectContext cannot detect conflicts for objects in other contexts.
Can only use -performBlock: on an NSManagedObjectContext that was created with a queue.
Can only use -performBlockAndWait: on an NSManagedObjectContext that was created with a queue.
Parent NSManagedObjectContext must not be nil.
Parent NSManagedObjectContext must use either NSPrivateQueueConcurrencyType or NSMainQueueConcurrencyType.
NSManagedObjectContext %p: 
NSManagedObjectContext %p
Cannot set a query generation on an NSManagedObjectContext that does not have a coordinator
Child contexts inherit parent context generations and may not have their own
Automatic merging is not supported by contexts using NSConfinementConcurrencyType
isEditing
cannot record object with null globalID
An NSManagedObject may only be in (or observed by) a single NSManagedObjectContext.
fatal: Failed to re-registered lost fault. fault %p with oid %@ has a moc of %p but we expected %p
deallocated NSManagedObjectContext
_NSManagedObjectContextPrivateDidMutateObjectIDsNotification
_NSManagedObjectContextObjectIDMutationMappingKey
Could not allocate memory.
Multiple threads illegally accessing an NSManagedObjectContext (%p) during %@
The current thread is not the recognized owner of this NSManagedObjectContext(%p).  Illegal access during %@
attempt to insert a null object into this context
repairing validation failure %@ (%@) by deleting %@ because it no longer exists and the merge policy allows it
null
validation recovery attempt FAILED with %@ and %@.
An observer of NSManagedObjectContextDidSaveNotification illegally threw an exception.  Exception = %@ at %@ with userInfo = %@ and objects saved = %@
Crossword
Objects should not be both modified and additional
Mutating a managed object %@ (%p) that has a different context %p than the receiver %p.
Failed to process pending changes before save.  The context is still dirty after 1000 attempts.  Typically this recursive dirtying is caused by a bad validation method, -willSave, or notification handler.
Serious application error.  Exception was caught during Core Data change processing.  This is usually a bug within an observer of NSManagedObjectContextObjectsDidChangeNotification.  %@ with userInfo %@
Serious application error.  Unidentifiable exception was caught during Core Data change processing.  This is usually a bug within an observer of NSManagedObjectContextObjectsDidChangeNotification.
Delete propagation prefetching failed with error: %@
Delete propagation prefetching failed with exception: %@
illegally invoked -performWithOptions* on dying NSManagedObjectContext at:
-performWithOptions:andBlock: was called on a MOC of NSConfinementConcurrencyType unexpectedly.
Mismatched PSCs in parameter contexts
Either a non nil result OR an error in nexted context
Context has pending changes
Destination object is not kind of [relationship destinationEntity]
Relationship must be a to-many.
Can't find the order of objects in an unordered relationship
com.apple.CoreData.NSManagedObjectContext.mainQueue
Temporary object ID refers to object in different NSPersistentStoreCoordinator
Object %@ persistent store is not reachable from this NSManagedObjectContext's coordinator
Invalid state for objectID or NSManagedObjectContext
nostore
<NSQueryGenerationToken: %p>
unsupported
NSQueryTokenIsSingleton
NSQueryTokenWhichSingleton
NSQueryTokenIsCompound
NSQueryTokenStoreIdentifier
NSQueryTokenGenerationIdentifier
NSQueryGeneration -dealloc caught an unexpected exception: %@
<NSQueryGenerationToken : {
, %p
<NSQueryGenerationToken : %@/%@>
Can't reattach all stores specified by token
expected stores
%p <%@>
+mergedModelFromBundles: Failed to load model at URL '%@'
Can't merge models with two different entities named '%@'
Can't merge models with two different fetch request templates for name'%@'
NSEntities
NSConfigurations
NSFetchRequestTemplates
NSVersionIdentifiers
(%@) isEditable %u, entities %@, fetch request templates %@
Can't add an entity to a managed object model (missing name or bad properties).
Entities for a configuration must already be in the model.
Cannot set fetch request template.  This model does not contain entity '%@'.
momd
VersionInfo.plist
Unable to model NSManagedObjectModel
Invalid property; can't optimize
Base error
Property
Invalid value in warnings array
momv2$srsraori55717101jhus-[6910aathnnhi86786714[-;uadmiraenv143
Can't find hashorder for entity '%@'
Base Problem
Can't add unnamed entity to model.
Model already contains an entity named %@.
momv2$8129374fj;a30[5yo-]0-87ujuhok'p0907ljnlmmji870-oi43902[349
NSKnownKeysDictionary2
Bad: decoding optimized model smashed memory. Bailing.
 Cannot load NSManagedObjectModel.  nil is an illegal URL parameter
CoreData: Cannot load NSManagedObjectModel.  nil is an illegal URL parameter
 Failed to load model bundle at path '%@'
 Failed to load model as no file exists at path '%@'
 Failed to load optimized model at path '%@'
 Failed to load keyed archive model at path '%@' with error '%@'
Unable model at path (file is zero bytes) '%@'
 Failed to load NSManagedObjectModel with URL '%@'
com.apple.CoreData.OptimizedModelLayoutDebug
q24@?0@"NSString"8@"NSString"16
Mismatch: strategy has %lu length, archive has %u values
Mismatch: frt strategy has %d length, archive has %u values
Mismatch: frt strategy has %lu length, archive has %u values
Unable to decode versionIdentifiers for model: %@
Corrupted archive (missing pointer space).
System
Library
Cannot use uniqueness constraints { %@ } on entity '%@' due to relationship '%@' having a mandatory to-one inverse relationship '%@' and not using a cascade delete rule on '%@'
v24@?0@"NSEntityDescription"8@"NSString"16
Models cannot become mutable after being marked immutable.
Can't modify an immutable model.
Can't remove entity - doesn't belong to this model.
Cannot assign a negative reference ID offset to a managed object model.
Can't generate new column values for %@ - incompatible destination: %@
 = %@
Can't generate new column values for destination - incompatible entity foreign key state: %@
%@ = %@
, %@ = %@
Can't generate new column value from value: %@
= %@
aliasGenerator
Can't generate SQL for keypath %@ : invalid location of keypath aggregate function
Can't generate SQL for keypath %@ : invalid keypath
Can't generate SQL for keypath %@ : invalid attribute name location
Can't generate SQL for keypath %@ : multiple to many keypath components
Can't generate SQL for keypath %@ : unexpected problem
Unable to generate sql for components %@
Invalid keypath for update (not an attribute or a to one) %@
Attempting to insert a relationship value into an attribute or vice versa is not supported %@/%@
Invalid keypath expression (%@) in propertiesToUpdate - joins unsupported here
Unable to generate sql for update expression %@
Can't find property %@ on entity %@
Invalid property for update (not an attribute or a to one) %@/%@
Invalid property for update (can't batch update derived attributes) %@/%@
Fetch request expression evaluation (%@) failed
Invalid fetch expression (%@) in propertiesToUpdate - fetch has multiple results
Invalid new constant value %@ for %@ (not a managed object)
Invalid value expression (%@) in propertiesToUpdate : what does it mean to update a relationship to the result of a function?
Invalid expression (%@) in propertiesToUpdate
Can't generate new column value from expression %@
, Z_OPT = (Z_OPT + 1) 
NSManagedObjectModel_CurrentVersionName
NSManagedObjectModel_VersionHashes
VersionInfo
plist
Info
Exception while loading versioned model plist for %@.
Name: %@
Reason: %@
UserInfo: %@
Failed to intialize caches in a reasonable amount of time.
Stores failed to initialize but did not return an error.
Metadata corruption found, store appears to have been used with multiple CloudKit databases: %@
System fields shouldn't be set anymore: %@
x-coredata://%@/%@/p%@
NSMappedObjectStore must be initialized with initWithPersistentStoreCoordinator:configurationName:URL:options:
Core Data provided atomic stores do not support file backed futures
Core Data provided atomic stores do not support derived properties
NSPersistentCloudKitContainerEventChangedNotification
event
 { type: %@ store: %@ started: %@ ended: %@
 succeeded: %@
 error: %@:%ld
Setup
Export
Import
Unknown event type, cannot covert to string: %ld
Unsupported property type for index.
Can't mix and match collation types.
Can't create an index with no name
NSIndexName
NSIndexElements
NSPartialIndexPredicate
NSIndexName requires a NSString
NSIndexElements requires a NSArray
NSIndexElements requires a NSArray of NSFetchIndexElementDescription
<NSFetchIndexDescription : (%@:%@, elements: %@, predicate: %@)>
Can't set an index name to nil
IndexDescription
Can't change an collation type in a multi-element index
Index
com.apple.CoreData.MigrationDebug
(migration) checking mapping model %@
 source hashes: 
 destination hashes: %@
(migration) mismatched %@%@%@ hashes for mapping model %@
 and 
(migration) no match found for %d of %d mapping model source hashes
(migration) no match found for %d of %d mapping model destination hashes
(migration) found compatible mapping model %@
Cannot create an inferred NSMappingModel with a nil source model
Cannot create an inferred NSMappingModel with a nil destination model
(migration) inferring a mapping model between data models with 
 source hashes: 
 destination hashes: %@
(migration) inferring mapping model failed with error: %@ userInfo: %@
(%@), entityMappings %@
(migration) looking for mapping model with 
 source hashes: 
 destination hashes: %@
(migration) no suitable mapping model found
NSEntityMappings
NSEntityMappingsByName
Can't add unnamed entity mapping to model.
Model already contains an entity mapping named %@.
Can't modify an immutable mapping model.
_NSInMemoryStoreArchivedData
memory://%lx
Unsupported predicate, RHS of boundBy: must contain 2 values
Unsupported predicate, topLeft parameter of boundBy: RHS must be a constant or keypath
Unsupported predicate, bottomRight parameter of boundBy: RHS must be a constant or keypath
Unsupported predicate, RHS of boundBy: must be an aggregate or constant
Unsupported predicate, constant topLeft parameter of boundBy: RHS must respond to coordinate
Unsupported predicate, constant lowerRight parameter of boundBy: RHS must respond to coordinate
_NSLocationAttributeDerivedComponents
nestingLevel
SELECT %@.Z_PK FROM %@ %@ WHERE ? <= %@.%@_MAX AND %@.%@_MIN <= ? AND ? <= %@.%@_MAX AND %@.%@_MIN <= ?
bindVars
selectBindVars
conflictList
object snapshot
cached row
database row
%@ (%p) for NSManagedObject (%p) with objectID '%@' with oldVersion = %d and newVersion = %d and old %@ = %@ and new %@ = %@
%@ (%p) for NSManagedObject (%p) with objectID '%@' with oldVersion = %d and newVersion = <deleted> and old %@ = %@
Coder = %@ (%@)
Delegate = %@ (%@)
This is probably not where you want to be
_source
_snapshot1
_snapshot2
_snapshot3
_oldVersion
_newVersion
object
snapshot
cachedRow
databaseRow
newVersion
oldVersion
_constraint
_conflictedValues
_databaseObject
_databaseSnapshot
_conflictingObjects
%@ (%p) for constraint %@: database: %@, conflictedObjects: %@
NSTypeCode
Got non-object value back for property '%@' which returned an objectID from the snapshot.
Can't merge conflict : missing context
Can't merge conflict : conflicting objects have different entities.
Can't merge conflict : resolution stage failed
That was unexpected. Error trying to get %@ from %@ (%@)
B24@?0@"NSMergeConflict"8@"NSDictionary"16
currentEntityMapping
currentPropertyMapping
migrationProgress
Cannot create an NSMigrationManager with a nil source model
Cannot create an NSMigrationManager with a nil destination model
CoreData: Schema migration (manager)
Manager requires an entity mapping for associations
Can't find mapping for name (%@).
(migration) got more destinations for source than we expected. (%@, %@, %@)
Property mapping %@.%@ missing required relationship name argument to destinationInstancesForSourceRelationshipNamed:sourceInstances:
Can't find relationship for name (%@) for entity (%@) in source model.
more
fewer
(migration) got %@ destinations[%lu] for sources[%lu] than we expected. (%@, %@)
(migration) got more sources for destination than we expected. (%@, %@, %@)
Can't find entity named %@ in source model
versionHash
Mismatch between mapping and source/destination models
sourceModel
destinationModel
mappingModel
Can't add source store
journal_mode
journal_mode]
Can't add destination store
Failed to save new store after first pass of migration.
Failed to save new store after second pass of migration.
Failed to save new store.
B16@?0@"NSSQLStoreRequestContext"8
SQLQueue: %@ : %p
dispatch_queue_attr_make_with_qos_class() returned NULL in %s
NSSQLConnection manager failed to initialize with error domain '%s' code '%ld' reason:'%s' from %@
NSSQLConnection manager failed to initialize with exception %@
v16@?0@"NSSQLiteConnection"8
 NSSQLConnectionManager tried to blow a lock
handleStoreRequest failed with excception: %@
handleStoreRequest failed with unknown excception
scheduleBarrierBlock failed with excception: %@
scheduleBarrierBlock failed with unknown excception
scheduleConnectionsBarrier failed with excception: %@
scheduleConnectionsBarrier failed with unknown excception
disconnectAllConnections failed with excception: %@
disconnectAllConnections failed with unknown excception
enumerateAvailableConnectionsWithBlock failed with exception: %@
enumerateAvailableConnectionsWithBlock failed with unknown excception
%@ (URL: %@)
Store does not support encryption
objectIDFactoryForEntity invoked after store was removed
objectIDFactoryForEntity invoked before model was finalized
Unable to unload store file because file at path '%@' could not be removed
File appeared during sanity check; this seems suspicious
Failed to create file; code = %d
Component of path %@ is not a directory
Failed to access file: %d
Error opening store: %@
Could not write to file.
Store does not support this method
-init results in undefined behavior for NSBatchInsertRequest
<NSBatchInsertRequest : entity = %@ resultType = %@ and %@>
%lu objects
handler provided
This batch insert request (%p) was created with a string name (%@), and cannot respond to -entity until used by an NSManagedObjectContext
v32@?0@"NSString"8@"NSManagedObjectModel"16^B24
Can't find entity for batch insert (%@)
'%ld' is an unknown NSBatchInsertRequestResultType value
NSBatchInsertRequestResultTypeStatusOnly
NSBatchInsertRequestResultTypeCount
NSBatchInsertRequestResultTypeObjectIDs
Mismatched result types during aggregation of batch insert results
NSStoreType
NSStoreUUID
NSStoreModelVersionHashes
NSStoreModelVersionIdentifiers
NSStoreModelVersionHashesDigest
added
removed
changedUUID
NSPersistentStoreCoordinatorStoresWillChangeNotification
NSPersistentStoreCoordinatorStoresDidChangeNotification
_NSPersistentStoreCoordinatorStoresDidChangePrivateNotification
NSPersistentStoreCoordinatorWillRemoveStoreNotification
NSPersistentStoreCoordinatorDidAutomigrateStoreNotification
_NSPersistentStoreCoorindatorPrivateWillRemoveStoreNotification
NSPersistentStoreTypeKey
SQLite
Binary
InMemory
NSXPCStore
NSReadOnlyPersistentStoreOption
NSSQLitePragmasOption
NSSQLitePersistWALOption
NSIgnorePersistentStoreVersioningOption
NSMigratePersistentStoresAutomaticallyOption
NSInferMappingModelAutomaticallyOption
NSPersistentStoreTimeoutOption
NSPersistentStoreOSCompatibility
NSPersistentStoreConnectionPoolMaxSize
NSPersistentStoreUnlinkDestroyOption
NSPersistentStoreForceDestroyOption
NSPersistentStoreUbiquitousContentNameKey
NSPersistentStoreUbiquitousContentURLKey
NSPersistentStoreUbiquitousContainerIdentifierKey
NSPersistentStoreFileProtectionKey
NSPersistentStoreRemoveUbiquitousMetadataOption
NSPersistentStoreForceLightweightMigrationOption
NSPersistentStoreTrackIndexUseOptionKey
NSCoreDataCoreSpotlightExporter
NSSQLiteAnalyzeOption
NSSQLiteManualVacuumOption
_NSSQLitePageSizeStoreOption
_NSNotifyObserversOfStoreChange
NSStoreModelVersionHashesVersion
NSPersistenceFrameworkVersion
NSStoreLastReferecedObjectKey
NSPersistentStoreOrderKeyUpdateNotification
NSEntityRenamingShouldRebaseKey
NSPersistentHistoryTrackingKey
NSPersistentHistoryTombstoneAttributes
NSPersistentHistoryTrackingEntitiesToInclude
NSPersistentHistoryTrackingEntitiesToExclude
NSPersistentHistoryUseContextObjectsForDeletes
NSPersistentHistoryAllowPartialHistoryMigration
NSPersistentHistoryTrackingExcludeUnmodifiedPropertiesForBatchUpdate
_NSBinaryStoreInsecureDecodingCompatibilityOption
NSBinaryStoreSecureDecodingClasses
NSPersistentStoreRemoteChangeNotificationOptionKey
NSPersistentStoreRemoteChangeNotification
com.apple.coredata.NSPersistentStoreRemoteChangeNotification.remotenotification
NSPersistentStoreCoordinatorResourceBundlesForMigration
NSPersistentStoreServiceConfigurationOptionKey
NSPersistentStoreDeferredLightweightMigrationOptionKey
Can only use -performBlock: on an NSPersistentStoreCoordinator that was created with a queue.
Can only use -performBlockAndWait: on an NSPersistentStoreCoordinator that was created with a queue.
 API Misuse: Attempt to serialize store access on non-owning coordinator (PSC = %p, store PSC = %p)
NSPersistentStoreCoordinator %p: 
NSPersistentStoreCoordinator %p
Cannot register a store class using a 'nil' type.
Store type '%@' is reserved for Core Data, and cannot be re-registered.
Invalid store URL: nil
This is not the API you're looking for.
This is not the API you're looking for
Can't create store
Unknown
Cannot set metadata in read-only store.
v16@?0@"NSPersistentStore"8
An NSPersistentStore illegally threw an exception from -willRemoveFromPersistentStoreCoordinator:
client failed to call designated initializer on NSPersistentStoreCoordinator
Cannot create an NSPersistentStoreCoordinator with a nil model
%@: Attempting recovery from error encountered during addPersistentStore: %@
Use of the mirroring options requires that a mirroring delegate also be provided. The following options were set, but a mirroring delegate was not found at '%@':
Unhandled exception in developer completion handler for addPersistentStoreWithDescription %@
Unhandled unknown exception in developer completion handler for addPersistentStoreWithDescription
iCloud Syncing is not supported on this platform.
NSPersistentStoreMirroringDelegateOptionKey
%@ is only valid as a mirroring option. It should be set using '%@' on '%@'
CoreSpotlight integration is not supported on this platform. The following option key is forbidden: %@
CoreData: Adding persistent store
unknown or nil storeType argument or otherwise unable to infer storeType argument.  Inference requires an existing file with valid metadata.
Unsupported store type.
Default
Unable to initialize store.
Caught exception trying to load store metadata during error recovery: %@
Can't read store metadata.
The store type in the metadata does not match the specified store type.
The version hash version (and associated hashes) are incompatible with the current Core Data version.
 NOT 
Incompatible version schema for persistent store '%@'.  store metadata = %@ and current model versions = %@
(migration)
 will%@attempt automatic schema migration
CoreData: error: (migration) migration failed with error %@
Error User Info: %@
Underlying error: %@
(migration)
 Automatic schema migration succeeded for store at '%@'
The model used to open the store is incompatible with the one used to create the store
%@ returned error %@ (%ld)
userInfo:
%@ : %@
storeType: %@
configuration: %@
URL: %@
options:
NSPersistentStoreCoordinator's current model hashes are %@
NSPersistentStoreRebuildIndicies
store is nil or not registered with this coordinator
nil is not a valid store.
nil is not a valid persistent store
nil is not a valid persistent store URL
The specified URI is not a valid Core Data URI: %@
(unknown)
(schema mismatch or migration failure)
(corrupt file)
(device locked)
(can't open)
(permission denied)
(I/O error)
(disk full)
This NSPersistentStoreCoordinator has no persistent stores %@.  It cannot perform a save operation.
Illegal attempt to save to a file that was never opened.  "%@".  Last recorded error = %@(%ld) / %@
Illegal attempt to save to a file that was never opened. "%@". No last error recorded.
CoreData: Executing write request
Q8@?0
Store - %@ not found in token - %@
Unable to write to file opened Read Only.
File is in Read Only mode due to Persistent History being detected but NSPersistentHistoryTrackingKey was not included.
NSPersistentStoreOptions
optimistic locking failure
A sqlite store save failed but did not return an error: %@
A xpc store save failed but did not return an error: %@
A binary store save failed but did not return an error: %@
An in-memory store save failed but did not return an error: %@
Save failed
Save partially failed: %@
NSPersistentHistoryResultTypeChangesOnly unsupported for multiple stores [%@]
NSPersistentStoreRequest
NSPersistentStore
Store returned nil but no error.
NSPersistentStoreRequest failed unsupported by all stores on this coordinator.  Request: '%@' and stores [%@]
NSPersistentStores
Operation unsupported by all stores on this coordinator.
Underlying errors
One or more stores returned an error.
Coordinator failed to create a new query generation post save
v16@?0@"NSArray"8
Either a non nil result OR an error
com.apple.CoreData.PowerAssertionsDebug
chronod
UIApplication
beginBackgroundTaskWithName:expirationHandler:
Registration for _beginPowerAssertionNamed completed with class %p on app %p and result %@
sucess
failure
Unexpected background task assertion cancellation.
Failed to acquire background task assertion for task '%@'.
Successfully acquired background task assertion %d for task '%@'.
Ended background task assertion %d.
URI is not a valid Core Data URI
Can't add the same store twice
Store is not valid for this context's generation
store
context
NSManagedObjectContext is nil for objects passed to obtainPermanentIDsForObjects
CoreData: Executing obtain objectID request
Can't resolve how to assign objects to stores; Coordinator does not have any stores
Can't resolve how to assign objects to stores; some objects may have been assigned to stores; use [[managedObject objectID] persistentStore] to find out what is going where now; use [managedObjectContext assignObject:toStore:] to straighten things out
problemObject
Cannot insert objects into a read only store.
Cannot update objects into a read only store.
Cannot update object that was never inserted.
Cannot delete objects into a read only store.
Cannot delete object that was never inserted.
Cannot lock object that was never inserted.
Can't find store type for store %@ (class == %@) in %@.
Fetch instances of entity %@ from store %@ failed, reason: %@
Referential integrity problem found during migratePersistentStore:toURL:options:withType:error: %@
Save failed during during migratePersistentStore:toURL:options:withType:error:, object added to store during fetch.
Save failed during migratePersistentStore:toURL:options:withType:error:, %d objects in store were removed during fetch.
Remote Change Notification - posting for store  %@ with userInfo %@
Save failed.
Invalid destination store URL: nil
Invalid source store URL: nil
source and destination store are different classes of store: %@ != %@
Store currentQueryGeneration returned nil unexpectedly
Invalid generation token: this persistent store coordinator does not have any of the referenced stores
Provided persistent store must be of type NSSQLiteStoreType: %@
Provided persistent store must be from this coordinator: %@
Invalid store URL
%@ - One or more unknown attributes: %@
%@ - `@""` is not a valid value.
%@ - Wrong type: %@ but should be %@
The following entities did not have a valid configuration for %@. It should be a string of comma separated attribute names to tombstone on delete.
%@ expects an instance of %@ as its value but found: %@
Exception was caught during NSPersistentStoreCoordinator -performBlock: %@ with userInfo %@
Unidentifiable exception was caught during NSPersistentStoreCoordinator -performBlock.
Exception thrown during autorelease pool drain.
 (%@, %@:%@ -> %@:%@, %@)
ZT_%@_%@_%@
%@_%@_INSERT_INCREMENT
DROP TRIGGER IF EXISTS %@
CREATE TRIGGER IF NOT EXISTS %@ AFTER INSERT ON %@ FOR EACH ROW
 UPDATE %@ SET %@ = IFNULL(%@,0) + 1
 WHERE NEW.%@ IN (SELECT %@ FROM %@ WHERE %@)
 AND NEW.%@ = %@;
 SELECT NSCoreDataTriggerUpdateAffectedObjectValue('%@', %@, %@, '%@', %@) FROM %@ WHERE %@ = NEW.%@;
%@_UPDATE_INCREMENT
CREATE TRIGGER IF NOT EXISTS %@
 AFTER UPDATE OF %@ ON %@ FOR EACH ROW
 WHERE %@ IN (SELECT %@ FROM %@ WHERE %@ = NEW.%@ AND (%@));
%@_UPDATE_DECREMENT
 UPDATE %@ SET %@ = MAX(0,IFNULL(%@,0) - 1)
%@_%@_DELETE_DECREMENT
CREATE TRIGGER IF NOT EXISTS %@ AFTER DELETE ON %@ FOR EACH ROW
 WHERE OLD.%@ IN (SELECT %@ FROM %@ WHERE %@)
 AND OLD.%@ = %@;
 SELECT NSCoreDataTriggerUpdateAffectedObjectValue('%@', %@, %@, '%@', %@) FROM %@ WHERE %@ = OLD.%@;
%@_DELETE_DECREMENT
CREATE TRIGGER IF NOT EXISTS %@ AFTER DELETE ON %@ FOR EACH ROW WHEN %@
 WHERE %@ IN (SELECT %@ FROM %@ WHERE %@ = OLD.%@ AND (%@));
COUNT_%@
CREATE TEMP TABLE %@ AS
 SELECT %@, COUNT(DISTINCT(%@.%@)) AS COUNT
 FROM %@, %@
 WHERE %@ AND %@.%@ == %@.%@
 GROUP BY %@;
 CREATE INDEX %@_INDEX ON %@(%@,COUNT);
 UPDATE %@ SET %@ = IFNULL((SELECT COUNT FROM %@ WHERE %@ = %@),0);
 DROP TABLE %@;
%@_INSERT_INCREMENT
 AFTER INSERT ON %@ FOR EACH ROW WHEN %@
 WHERE NEW.%@ = %@;
 AFTER UPDATE OF %@ ON %@
 FOR EACH ROW WHEN (%@) AND (%@) AND (NEW.%@ == OLD.%@)
 FOR EACH ROW WHEN (%@) AND (%@) AND (OLD.%@ == NEW.%@)
 WHERE OLD.%@ = %@;
 AFTER DELETE ON %@ FOR EACH ROW WHEN %@
 UPDATE %@ SET %@ = MAX(0,IFNULL(%@,0) - 1) WHERE OLD.%@ = %@;
 AFTER INSERT ON %@ FOR EACH ROW
 UPDATE %@ SET %@ = (SELECT COUNT(%@) FROM %@ WHERE (%@ = NEW.%@) AND (%@)) WHERE %@ = NEW.%@;
%@_%@_UPDATE_INCREMENT
 AFTER UPDATE OF %@ ON %@ WHEN (%@) AND
 ((NEW.%@ IS NOT NULL AND OLD.%@ IS NULL) OR (NEW.%@ != OLD.%@))
 UPDATE %@ SET %@ = IFNULL(%@,0) + 1 WHERE %@ = NEW.%@;
%@_%@_UPDATE_DECREMENT
 ((OLD.%@ IS NOT NULL AND NEW.%@ IS NULL) OR (NEW.%@ != OLD.%@))
 UPDATE %@ SET %@ = MAX(0,IFNULL(%@,0) - 1) WHERE %@ = OLD.%@;
 FROM %@
 WHERE %@
 UPDATE %@ SET %@ = IFNULL((SELECT COUNT FROM %@ WHERE %@ = %@), 0);
 FOR EACH ROW WHEN (%@) AND (%@)
%@_%@_UPDATE_TO_NULL
 AFTER UPDATE OF %@ ON %@ WHEN
 (NEW.%@ IS NULL AND OLD.%@ IS NOT NULL)
 UPDATE %@ SET %@ = 0 WHERE %@ = NEW.%@;
 UPDATE %@ SET %@ = (SELECT COUNT(%@) FROM %@ WHERE %@ = NEW.%@ AND (%@)) WHERE %@ = NEW.%@;
 SELECT %@, COUNT(DISTINCT(%@)) AS COUNT
offendingString
Unable to parse trigger predicate to an instance of NSPredicate.
 %@ 
offendingPredicate
Invalid trigger predicate, compound predicates must be AND or OR predicates.
Invalid trigger predicate, predicate must evaluate to an instance of NSComparisonPredicate or NSCompoundPredicate.
 OR (NEW.%@ %@ %ld AND OLD.%@ %@ %ld)
(NEW.%@ %@ %ld AND OLD.%@ %@ %ld)
 OR 
NEW.%@ != OLD.%@
%@ %@ %ld
OLD.%@ %@ %ld
NEW.%@ %@ %ld
offendingAttribute
Invalid trigger predicate, unable to find the attribute specified by this predicate.
Invalid trigger predicate, this predicate appears to reference a different relationship than other predicates in this trigger.
Invalid trigger predicate, failed to find the relationship identified by the keyPath.
Invalid trigger predicate, predicate operator must be one of:
NSLessThanPredicateOperatorType,
NSLessThanOrEqualToPredicateOperatorType,
NSGreaterThanPredicateOperatorType,
NSGreaterThanOrEqualToPredicateOperatorType,
NSEqualToPredicateOperatorType,
NSNotEqualToPredicateOperatorType
Invalid trigger predicate, right expression must evaluate to a constant integer value.
Invalid trigger predicate, right expression must evaluate to an instance of NSConstantValueExpressionType.
Invalid trigger predicate, left expression must be a key-path with only two components.
Invalid trigger predicate, left expression must evaluate to an instance of NSKeyPathExpressionType.
<NSBatchUpdateRequest : entity = %@, properties = %@, subentities = %d, predicate = %@
This batch update request (%p) was created with a string name (%@), and cannot respond to -entity until used by an NSManagedObjectContext
Invalid string keypath %@ passed to propertiesToUpdate:
Invalid string key %@ passed to propertiesToUpdate:
Attribute/relationship description names passed to propertiesToUpdate must match name on fetch entity (%@)
Invalid property %@ passed as key to propertiesToUpdate:
Invalid expressionDescription %@ passed as key to propertiesToUpdate:
Invalid relationship (%@) passed to propertiesToUpdate:
Can't find entity for batch update (%@)
Mismatched result types during aggregation of batch update results
recordName = %@ AND zoneName = %@ AND ownerName = %@
NSPersistentCloudKitContainerOptionsKey
NSPersistentCloudKitContainerEncryptedAttributeKey
Cannot assign the same iCloud Container Identifier to multiple persistent stores with the same database scope.
%@.%@ must be of type '%@'
offendingObject
com.apple.developer.icloud-container-identifiers
%@: will initialize cloudkit schema for store: %@
-[NSPersistentCloudKitContainer initializeCloudKitSchemaWithOptions:error:]
Finished initialize schema with result: %@
-[NSPersistentCloudKitContainer initializeCloudKitSchemaWithOptions:error:]_block_invoke
Initialize schema request failed: %@
Initialize schema failed but did not set an error: %@
v16@?0@"NSCloudKitMirroringResult"8
Failed to initialize CloudKit schema because the requests timed out (a %lds wait failed).
Couldn't initialize CloudKit schema because no stores were able to succesfully initialize.
encounteredErrors
Couldn't initialize CloudKit schema because no stores in the coordinator are configured to use CloudKit: %@
NSPersistentCloudKitContainer got a result back that isn't of type 'NSCloudKitMirroringDelegateSerializationRequestResult' when asking about the record for a managed object id.
Record serialization failed with error: %@
-[NSPersistentCloudKitContainer recordForManagedObjectID:]_block_invoke
Wait timed out during call to recordForManagedObjectID
Failed to retrieve record for object '%@'
-[NSPersistentCloudKitContainer recordForManagedObjectID:]
NSPersistentCloudKitContainer got a result back that isn't of type 'NSCloudKitMirroringDelegateSerializationRequestResult' when asking about the records for a group of managed object ids.
-[NSPersistentCloudKitContainer recordsForManagedObjectIDs:]_block_invoke
Wait timed out during call to recordsForManagedObjectIDs
Failed to retrieve records for objects %@
-[NSPersistentCloudKitContainer recordsForManagedObjectIDs:]
An error occured while fetching record metadata to figure out if an object is mutable: %@
Failed to fetch the CKShare for an object in the shared database: %@ - %@
Client passed in objects from multiple contexts, this should return an error.
Metadata context was left dirty: %@
The object %@ is already assigned to the zone '%@' and cannot be moved to '%@'.
Target store has no mirroring delegate.
Target store has no mirroring delegate: %@
Metadata context was left dirty after preparing sharing metadata: %@
Share acceptance succeeded but did not return NSCloudKitMirroringAcceptShareInvitationsResult: %@
Share acceptance succeeded but did not return an acceptance result.
Provided persistent store is not set to the shared database scope and cannot accept share invitation.
databaseScope
Provided persistent store is not backed by CloudKit.
v16@?0@"CKShareParticipant"8
Encountered an error trying to update the store metadata while attempting to purge zone '%@': %@
-[NSPersistentCloudKitContainer purgeObjectsAndRecordsInZoneWithID:inPersistentStore:completion:]_block_invoke
fetchSharesMatchingObjectIDs failed but did not set an error.
encodedShareData != nil
fetchSharesInPersistentStore failed but did not set an error.
%@%@
%@: Sharing %lu objects from store: %@ to share: %@
-[NSPersistentCloudKitContainer shareManagedObjects:toShare:completion:]
Client attempting to share objects from multiple contexts, this should return an error.
NSPersistentCloudKitContainer does not support sharing objects across persistent stores. Objects must first be assigned to the correct persistent store (private, or shared as the case may be), so that they can be moved in to the correct record zone for sharing.
%@: Found %lu inserted objects to share.
-[NSPersistentCloudKitContainer shareManagedObjects:toShare:completion:]_block_invoke
Could not locate private store in which to share.
%@: Got zone and metadatas: %@
Metadata context was left dirty after attempting to share objects: %@
Failed to export: %@
Timed out waiting for share records to be exported: %@
The sharing operation timed out.
NSIsOptional
NSIsReadOnly
NSIsTransient
NSIndexedBySpotlight
NSIsStoredInTruth
NSIsOrdered
NSAllowsCloudEncryption
NSPropertyName
NSValidationPredicates
NSValidationWarnings
NSPropertyName requires a NSString
(%@), name %@, isOptional %d, isTransient %d, entity %@, renamingIdentifier %@, validation predicates %@, warnings %@, versionHashModifier %@
 userInfo %@
Can't change name of property from %@ to %@
Mismatch between length of validation predicates and warnings
Can't read property into shell: Not enough bytes left
Can't read property into shell: Unknown type
Can't read property into shell: Missing version hash value
Corrupted archive (missing property name).
Can't read property into shell: Can't read validation predicates
Unable to decode validation predicate for property %@ : %@
Can't read property into shell: Can't read validation warnings
Unable to decode validation warning for property %@ : %@
Unable to decode userInfo for property %@ : %@
range (%lu, %lu), offset %ld
An instance of %@ requires a non-nil fetchRequest and managedObjectContext
An instance of %@ requires a fetch request with sort descriptors
NSDiffableDataSourceSnapshot
_PFDiffableDataSourceSnapshot
Difference delegate method is not supported when fetched results controller is configured with a sectionNameKeyPath
%@ does not support both change tracking and fetch request's with NSDictionaryResultType
Result type of fetched object is not an NSManagedObjectIDResultType, NSDictionaryResultType or NSManagedObjectResultType.
v8@?0
NSFetchedResultsController: cannot access fetched objects before -performFetch:
NSFetchedResultsController: no section at index %lu in sections list
cannot access fetched objects before -performFetch:
no section at index %lu
NSFetchedResultsController: no object at index %lu in section at index %lu
no object at index %lu in section at index %lu
invalid Section Index offset%li
Index title at %li is not equal to '%@'
Count
41b5a6b5c6e848c462a8480cd24caef3
The fetched object at index %lu has an out of order section name '%@. Objects must be sorted by section name'
(%@) %@
distinct:
sectionCount
Fetching ERROR during section computation with request = %@ and error = %@ and userInfo = %@
(NSFetchedResultsController) A section returned nil value for section name key path '%@'. Objects will be placed in unnamed section
q24@?0@"_PFChangeInfo"8@"_PFChangeInfo"16
(NSFetchedResultsController) rebuilding section caches
(NSFetchedResultsController) error refetching objects after context update: %@
B24@?0@"_PFChangeInfo"8@"NSDictionary"16
Serious application error.  An exception was caught from the delegate of NSFetchedResultsController during a call to -controllerDidChangeContent:.  %@ with userInfo %@
Serious application error.  Unidentifiable exception was caught from the delegate of NSFetchedResultsController during a call to -controllerDidChangeContent:.
 (%@): couldn't read cache file to update store info timestamps
 (%@): error writing section cached info at %@ with error %d
 (%@): couldn't create section info cache directory at %@ : %@
 (%@): couldn't create section info file at %@ : %d
.CoreDataCaches
SectionInfoCaches
sectionInfo
d69e6c783a242772974cfc99189691b88e9d37c3
-wal
NSPropertyTransformMandatoryPropertyValidation
(%@), name %@, valueExpression %@, userInfo %@
NSDestinationPropertyName
NSValueExpression
NSPropertyTransforms
NSDestinationPropertyName requires a NSString
Can't modify an immutable property mapping.
NSPrerequisiteTransform
NSReplaceMissingValueOnly
(%@), propertyName %@, valueExpression %@, prerequisiteTransform %@, replaceMissingValueOnly %@
NSRelationshipDescriptionOrderKeyIndexOption
NSMaxCount
NSMinCount
NSDeleteRule
NSDestinationEntity
_NSDestinationEntityName
NSInverseRelationship
_NSInverseRelationshipName
_NSDestinationEntityName requires a NSString
_NSInverseRelationshipName requires a NSString
%@, destination entity %@, inverseRelationship %@, minCount %lu, maxCount %lu, isOrdered %d, deleteRule %lu
Relationship is not a toMany
Unsupported relationship type for ordered index
unsupported relationship
Relationship is not ordered
repairing missing delete propagation for to-one relationship %@ on object %p (%@) with bad fault %p (%@)
Dangling reference to an invalid object.
Illegal container for relationship: value = %@; relationship = "%@".
repairing missing delete propagation for to-many relationship %@ on object %p (%@) with bad fault %p (%@)
%@ { inserts (%@), updates (%@), deletes (%@) locks (%@) }
n%u_t%cu
__n%u_var%cu
__var%u
_Z_intarray%u
com.apple.coredatad.cloudkit.
CDDCloudKitServer
cdck.sqlite
v24@?0@"NSPersistentStoreDescription"8@"NSError"16
Failed to load persistent stores for CloudKit integration: %@
Failed to initialize storage:
Failed to create directory for persistent storage: %@
Called to accept connection for unknown listener: %@
Unknown message: %@
The server is not initialized due to: %@
The server was unable to process the request because it timed out waiting for initialization.
Bug in CoreData CloudKit Server: Response success == NO but error is also nil.
CloudKit Server is attempting to send back a nil response: %@
bundleIdentifier = %@ AND storeConfigurationName = %@ AND storePath = %@
Failed to register store for message '%@' due to the following error: %@
Provided file handle is invalid, the file is not writable.
%@: Asked to schedule activity for store: %@
-[CDDCloudKitServer _handleScheduleMessage:]
storePath = %@
Multiple clients registered for the same store path: %@
Found unknown activity type: %@
Scheduling activity: %@ for client: %@ with scheduler: %@
-[CDDCloudKitServer _handleScheduleMessage:]_block_invoke
Asked to run activity but no server: %@
v24@?0@"CKSchedulerActivity"8@?<v@?q>16
Already have scheduled activity for client: %@
Saving changes for client: %@
Failed to save changes: %@
No change to save for client: %@
Failed to get a container for '%@
No client is registered for: %@
Asked to run activity: %@
-[CDDCloudKitServer runActivity:completionHandler:]
activityUUID = %@
Looking up activities matching the identifier: %@
-[CDDCloudKitServer runActivity:completionHandler:]_block_invoke
Found more than one scheduled activities matching the identifier '%@': %@
Running scheduled activity: %@
Client: %@
PFCloudKitDidSetupNotificationName
result
Success was NO but expected YES
Error was non-nil, but expected nil
v16@?0@"NSNotification"8
Store initialized waiting for the mirroring delegate to set up.
Mirroring delegate initialized.
Backup export failed: %@
-[CDDCloudKitServer runActivity:completionHandler:]_block_invoke_3
Failed to execute export request: %@
Timed out waiting for the mirroring delegate to set up.
Failed to load persistent store for client: %@
Failed to load managed object model for registered client: %@
No activity registered with identifier: %@
Failed to handle activity because initialization took longer than expected: %@
Successfully finished activity, pruning: %@
-[CDDCloudKitServer finishedActivity:withResult:inManagedObjectContext:]_block_invoke
Failed to prune activity after successful execution: %@
Execution of activity encountered a fatal error, it will not be retried: %@
Failed to prune activity after fatal error: %@
Execution of activity failed: %@
Provided file handle is invalid, it doesn't point to the requested store.
Failed to fstat file descriptor (%d:%d): %d
Failed to stat file at url (%d:%d): %@
Failed to get a real path for the provided store path.
NSSQLAttributeTriggerAssociationKey
%@ called after the request was sent to %@
Request: %@
%@.%@ - attribute not found on entity
v32@?0@"NSAttributeDescription"8Q16^B24
%@ - entity not found in model
Invalid '%@'. The following validation failures occured:
createRecordZoneID called before object has an owner name and zone name: %@
Illegal attempt to work with the core-data or default zone in the shared database: %@
%K = %@ AND %K = %@ AND database.databaseScopeNum = %@
Multiple zone entires discovered for a single record zone: %@
entityId = %@ and entityPK IN %@
recordZone.ckRecordZoneName
recordZone.ckOwnerName
Invalid RHS for rtree query (should be an array but isn't) %@
properties
Invalid RHS for rtree query (array should have 2 elements) %@
Invalid RHS  element for rtree query (should be a constant value) %@
Mismatch between number of properties and number of ranges for rtree query
ranges
Invalid index name expression (should be a constant value)
indexNameExpression
Invalid index name (should be a string)
indexName
Invalid LHS for rtree query %@
Unsupported predicate; can't generate SQL for %@
Unable to generate SQL for keypath %@
Invalid ranged property (relationship?!?) %@
(no index name specified, multiple indices available)
(no index found for name %@)
Can't find index for rtree query %@
Can't generate SQL; crosscheck failed
Invalid RHS for rtree query %@
%@ <= %@.%@_MIN AND %@.%@_MAX <= %@
%@ IN (SELECT %@.Z_PK FROM %@ %@ WHERE (%@))
%@: columnName = %@, type = %d, slot = %d, fetchIndex = %d propertyType = %d
Problem with subpredicate %@
 NOT (
Unknown compound predicate type %@
Unable to generate compound where clause for predicate (%@) (unknown problem)
bundleIdentifier
fileProtectionType
storeConfigurationName
containerIdentifier
activityUUID
activityTypeNum
scheduledAt
isUserRequestedBackupTask
registeredClient
scheduledActivities
entitySpecificationKeypath
entitySpecificationKeypathContainsToMany
generatePairs
explicitRestrictingEntityQualifier
"%@" is not a valid entity name.
'%@'
Can't specify non string/number/date value as part of index
valueSpecified
(?, ?)
Attempt to init PFCloudKitHistoryAnalyzer with the wrong options class: %@
History analysis was aborted because the activity was deferred by the system.
Transaction appears to have been processed twice: %@
_NSSQLiteSEEKeychainItemOption
com.apple.CoreData.SQLDebug
com.apple.CoreData.ConcurrentFetching
com.apple.CoreData.BufferAllocations
Dictionary Result type overriden to use Buffered Results with level - %ld!!!
Keychain failed to return key for database encryption (error %d): %@
Keychain failed to return key for database encryption (error %d)
Keychain did not return a key for database encryption
entityForObjectID was passed a nil objectID
entityForObjectID failed to retrieve an NSSQLEntity for objectID %@
entityForObjectID passed a nil entity description from %@
_sqlCoreLookupSQLEntityForEntityDescription failed to return a result for objectID %@ with entity %@
path's fileSystemRepresentation returned NULL
 failed to open file due to illegal URL encoding.  error = %@ with userInfo %@
Cannot create an SQL store with a nil URL.
CoreData SQL stores only support file URLs (got %@).
Error - In Memory store at /dev/null can only have NSPersistentStoreConnectionPoolMaxSizeKey equal to 1
NSPersistentStoreRemoveStoreOnCleanup
Got a nil sqlmodel
Persistent History Tracking Option - Batch Update Only Tracks Modified Properties
NSPersistentHistoryTrackingEntitiesToInclude must be an NSArray of NSString
NSPersistentHistoryTrackingEntitiesToInclude has entities not included in the Managed Object Model
NSPersistentHistoryTrackingEntitiesToExclude must be an NSArray
NSPersistentHistoryTrackingEntitiesToExclude & NSPersistentHistoryTrackingEntitiesToInclude are mutually exclusive, you cannot set both options
NSPersistentHistoryTrackingEntitiesToExclude must be an NSArray of NSString
Entity (%@) was not found in model.
Persistent History is disabled - %@
Can't find table for entity '%@' in database at URL '%@'
com.apple.security.keychain-defaultContext.TrustedPeersHelper.db
Machine
ZMACHINE
Error encountered during check for existing table drop %@ with userInfo %@
Exception caught during check for existing table drop %@
Rebuilding indicies for store - %@
Photos.sqlite
COUNT(*)
ZSHAREPARTICIPANT
SELECT COUNT(*) FROM (SELECT * FROM %@ WHERE Z_ENT = 0 LIMIT 1)
Corruption encountered during a past migration - DB integrity has been compromised.
Attempting Repair - One entity found for table - %@ setting Z_ENT = %u
UPDATE OR FAIL %@ SET Z_ENT = %u
Unable to Repair - More than one entity found for table - %@ Entites - %@
Error encountered during check for db integrity %@ with userInfo %@
Exception caught during check for db integrity %@
Repairing old triggers failed with error = %@ and userInfo = %@
Error encountered during trigger recreation %@ with userInfo %@
Exception caught during trigger recreation %@
Repairing triggers failed with error = %@ and userInfo = %@
Repairing derived attributes failed with error = %@ and userInfo = %@
Exception caught during repair of triggers %@ with userInfo %@
Exception caught during repair of triggers %@
Exception caught during rebuild of DA triggers %@ with userInfo %@
Exception caught during rebuild of DA triggers %@
pragma auto_vacuum
pragma auto_vacuum=1
vacuum
Error caught during autovacuum check %@ with userInfo %@
Exception caught during autovacuum check %@
Exception caught during drop of old history tracking tables %@ with userInfo %@
Exception caught during drop of old history tracking tables %@
coreduetd
Exception caught during drop/create of history tracking tables %@ with userInfo %@
Exception caught during drop/create of history tracking tables %@
Exception caught during add of tombstone columns %@ with userInfo %@
Exception caught during add of tombstone columns %@
found Ancillary Entities in Persistent History - %@
Exception caught during checking for Ancillary Entities %@ with userInfo %@
Exception caught during checking for Ancillary Entities %@
Exception caught during adding transaction string table %@ with userInfo %@
Exception caught during adding transaction string table %@
Exception caught during create of history tracking tables %@ with userInfo %@
Exception caught during create of history tracking tables %@
Store opened without NSPersistentHistoryTrackingKey but previously had been opened with NSPersistentHistoryTrackingKey - Forcing into Read Only mode store at '%@'
Error caught during cached model check %@
Exception caught during cached model check %@
Exception caught during model caching %@ with userInfo %@
Exception caught during model caching %@
Exception trying to update primary key table
failed to set up index tracking, disabling
finished upgrade checks, bumping metadata
Exception caught during _ensureDatabaseMatchesModel %@ with userInfo %@
Exception caught during _ensureDatabaseMatchesModel %@
v16@?0@"NSSQLiteConnection"8
v16@?0@"NSSQLStoreRequestContext"8
Remote Change Notification - registered core observer for %@
unable to check registration for posting store changed notification
Remote Change Notification - Posting for %@
generational row cache %p failed to return a value for store '%@' with token %@
cannot find data for a temporary oid: %@
_NSSQLCoreTransactionStateChangeNotification
_NSSQLCoreTransactionType
_NSSQLCoreTransientSequenceNumber
_NSSQLCoreActiveSavingContext
History Change Request failed as no history tracking option detected on store %@ at %@
No history tracking option detected on store
Store - %@ is not found in token - %@
Store does not have index tracking enabled
-executeRequest: encountered exception = %@ with userInfo = %@
to-one key not allowed here
Keypath contains a toOne relationship that is unknown to the entity set on the Fetch Request
Finished rebuilding indicies for store - %@
Index recreation failed
Error encountered during index recreation %@ with userInfo %@
Exception caught during index recreation %@
Unable to reindex store(%@) - %@
read-only
nil coordinator
_SUPPORT
Can't write external data to non-file URL
_FBF
Can't create support directory (can't create directory)
Can't create fbf directory (file exists)
_EXTERNAL_DATA
Can't create external reference directory (file exists)
Could not connect to database.
_NSAutoVacuumLevel
URL is not a file URL or is nil
Only persistent stores backed by files can be destroyed
CoreData: Destroying store
Failed to delete support directory for store: %@
Both source and destination stores must be backed by files
CoreData: Replacing entire store
_transsrc_4052146efa0d85c9fbe0634c0e8bc4457ed82f7c
_transdst_878d188f109e9f52ae70b0b25413f6a38c8267a8
Failed to delete staging area for external support directory for store: %@
Failed to copy support directory from store: %@ to store: %@.  %@
Failed to delete support directory for store: %@.  %@
Failed to copy support directory from store: %@ to store: %@ (failed to move %@ to %@ due to %@)
Failed to unlink support directory %@ from old store location: %@ due to %@
Only persistent stores backed by files can be rekeyed
CoreData: Rekeying entire store
Exception occurred during initialization of query generation connection: %@
An unreported error occurred during initialization of query generation connection.
Preloading query generation connection success for store with options: %@
Preloading query generation connection failed without a reported error for store with options: %@
Preloading query generation connection for high protection class CloudKit store failed with exception: %@
Unsupported feature in this configuration
initializing query generations connection for current failed.
Failed to adopt query generation from remote change
SQLCore failed to get a currentQueryGeneration
initializing query generations connection failed.
SQLCore dispatchRequest: exception handling request: %@ , %@ with userInfo of %@
YouTube
CoreData: Saving index statistics
Invalid parameter value (bad entity)
Invalid parameter value (zero)
v32@?0@"NSCKEvent"8Q16^B24
failed to retrieve ordering information from fault for object %@ and relationship %@
v32@?0@"NSObject<NSSQLAttributeExtension>"8Q16^B24
Refreshing trigger values failed to adopt post transaction query generation with error %d
%@.queue.%p
Remote Change Notification - observer received for  %@ with state %lld
Remote Change Notification - PSC to post notification for store  %@ with transaction ID %lld
Exception thrown posting NSPersistentStoreRemoteChangeNotification: %@
Unknown exception thrown posting NSPersistentStoreRemoteChangeNotification
Remote Change Notification - Failed to setup notification listener for NSPersistentStoreRemoteChangeNotification: %d
Remote Change Notification - registered for  %@
Failed to fetch metadata for database: %@
-[PFCloudKitImporter importIfNecessaryWithCompletion:]_block_invoke
Import failed because fetching the database metadata encountered an unhandled exception.
v16@?0@"CKRecordZoneID"8
v16@?0@"CKServerChangeToken"8
v28@?0@"CKServerChangeToken"8B16@"NSError"20
The request was aborted because it was deferred by the system.
%@: Database fetch for request: %@ failed with error: %@
-[PFCloudKitImporter databaseFetchFinishWithContext:error:completion:]
needsImport = YES AND database.databaseScopeNum = %@
Import failed because an unhandled exception was encountered while trying to process the results of the database fetch operation.
%@: Import request finished: %@ - %@
-[PFCloudKitImporter databaseFetchFinishWithContext:error:completion:]_block_invoke
%@: Import request finished with no work to do: %@
%@: Error fetching database metadata update for request: %@
-[PFCloudKitImporter databaseFetchFinishWithContext:error:completion:]_block_invoke_2
%@: Processing work items: %@
-[PFCloudKitImporter processWorkItemsWithCompletion:]
Work item result failed but did not include an error: %@
The importer needs to be taught how to merge results of different types when dealing with multiple work items: %@
-[PFCloudKitImporter processWorkItemsWithCompletion:]_block_invoke
Import failed because the post-operation metadata commit hit an unhandled exception.
TEMP_CD%@
B12@?0C8
columnName
q24@?0@8@16
@count
Invalid keypaths found in derived attribute (derivationExpression)
Invalid keypaths found in derived attribute (filteringPredicate)
Invalid keypaths found in derived attribute (unsupported function)
Invalid keypaths found in derived attribute (can't find keypath component)
component
Invalid keypaths found in derived attribute (derived attribute found in dependency chain)
Invalid keypaths found in derived attribute (non-terminal attribute not followed by a function)
<NSSQLEntity %@ id=%d>
Trying to add a non-attribute, non-to-one property to an entity: %@
%@: %@
v32@?0@"PFCloudKitErrorLogEntry"8Q16^B24
storeRequest
Z_PK
SELECT
COUNT(
DISTINCT
t0.Z_PK)
FROM
SELECT COUNT(*) FROM %@
SELECT COUNT(*) FROM (
%@: Unable to set query generation on moc: %@
-[PFCloudKitSetupAssistant _checkAndInitializeMetadata:]_block_invoke_2
Failed to initialize CloudKit metadata: %@
-[PFCloudKitSetupAssistant _checkAndInitializeMetadata:]_block_invoke
The mirroring delegate could not initialize because it's store was removed from the coordinator.
Failed to asset file (and unlink:%d) at url: %@
-[PFCloudKitSetupAssistant _initializeAssetStorageURLError:]_block_invoke
Failed to create largeBlobDirectoryURL with observed store: %@
Failed to initialize the asset storage url because the store was removed from the coordinator.
%@: Could not create cloudkit container: %@
Unexpected exception thrown during account setup: %@
Unable to initialize the CloudKit container because this device does not support device to device encryption.
Unable to initialize the CloudKit container because this account does not support device to device encryption.
Unable to determine the status of the iCloud account (CKAccountStatusCouldNotDetermine).
Unable to initialize without a valid iCloud account (CKAccountStatusRestricted).
Unable to initialize without an iCloud account (CKAccountStatusNoAccount).
Unknown account status: %d
Unable to initialize without an iCloud account (CKErrorNotAuthenticated).
v24@?0@"CKAccountInfo"8@"NSError"16
Failed to get a container back for the identifier: %@
CloudKit integration does not support the '%@' database scope.
Failed to get a database back for scope '%@' from container: %@
database.databaseScopeNum = %@ AND %K == YES
An unhandled exception was caught during a fetch for zone in manatee identity loss recovery.
Deleting zones %@ in response to Manatee identity loss failed, %@
-[PFCloudKitSetupAssistant _recoverFromManateeIdentityLossIfNecessary:]_block_invoke
v32@?0@"NSArray"8@"NSArray"16@"NSError"24
Failed to fetch zone metadata during un-marking zones needing recovery from Manatee identity loss: %@
%@: Failed to save metadata while un-marking zones needing recovery from Manatee identity loss: %@
The mirroring delegate could not recovery from Manatee identity loss because it's store was removed from the coordinator.
Setup failed because an unhandled exception was caught during a fetch for zone creation.
%@ unable to recover from error: %@
Encountered subsequent error: %@
-[PFCloudKitSetupAssistant _createZoneIfNecessary:]
Could not locate the desired zone in the database with scope '%@': %@
Zone fetch didn't return an error or a dictionary of zones
v24@?0@"NSDictionary"8@"NSError"16
Custom zones aren't supported yet with the public database.
Setup failed because an unhandled exception was caught during a zone metadata fetch for the database subscription.
Subscription save succeeded but did not return '%@' as a saved subscription
v24@?0@"CKRecordID"8@"NSError"16
%@: CKIdentity record has changed from %@ to %@
-[PFCloudKitSetupAssistant _checkUserIdentity:]_block_invoke_2
%@: CKIdentity record matches store: %@
-[PFCloudKitSetupAssistant _checkUserIdentity:]_block_invoke
%@: CKIdentity record changed from nil to %@
Unexpected exception thrown during identity check: %@
%@: Identity fetch failed due to authentication but store was never assigned to a user record: %@
%@: First identity fetch failed due to authentication but store was never assigned to a user record: %@
Identity check was cancelled because the store was removed from the coordinator.
%@: Identity fetch failed with unknown error: %@
-[PFCloudKitSetupAssistant _checkUserIdentity:]
Identity fetch failed but did not set an error.
SELF
Setup failed because an unhandled exception was caught during event history truncation.
 AND (
WHERE 
GROUP BY 
HAVING 
%@%d_%@
<%@: %p - %@>
 { %@ }
success
CREATE %@INDEX IF NOT EXISTS Z_%@_%@ ON %@ (
UNIQUE 
%@ COLLATE BINARY %@
DESC
DROP INDEX IF EXISTS Z_%@_%@
Unable to generate sql for %@ as part of  expression (%@)
Wrong number of arguments to function add:to: (%@)
Unable to generate sql for add:to: argument 0(%@)
Unable to generate sql for add:to: argument 1(%@)
Unsupported expression in index description (%@)
(SELECT 
) FROM 
restrictingEntityPredicate
 WHERE (
 >= 
Can't generate sql for entityID
 <= 
Unsupported expression in index description (%@), '%@' not supported in this context
Unsupported join (min/max(key.path) not allowed in updates)
Invalid keypath element (not a relationship or attribute): %@
Invalid keypath (continues after attribute name): %@
Invalid keypath (request for aggregate operation on a toOne-only keypath): %@
Invalid keypath (too many toMany relationships): %@
count
Invalid keypath (no terminal attribute in call to math aggregate): %@
Failed to generate SQL for function expression: %@
Unsupported expression in index description (%@), aggregates not allowed here.
Non-attribute property passed to math function: %@
Unable to generate sql for %@, empty max/etc expression
Unable to generate sql for %@
Unable to generate sql for subquery: %@
Unsupported expression %@
Unable to generate sql for %@() : argument (%@) not supported
Unsupported expression in index description (%@), aggregate operations not allowed here
Unable to generate sql for %@, empty %@ expression
Unable to generate sql for %@, empty expression
Bad argument to upper/lower function (needs to be a keypath or a string) : %@
Invalid number of parameters passed to uppercase: function
Bad value
Unable to generate sql for %@, can't drop index on non-keypath
Invalid number of parameters passed to function (%@)
Unsupported expression in index description (%@), 'count' not supported in this context
Invalid number of arguments to count (requires at least 1 argument)
Unable to generate SQL for count expression %@
count(*)
.@count
Unable to generate SQL for expression: %@
COUNT (
Unsupported function expression : %@
Invalid number of arguments to avg function : %@
Bad argument to %@ (can't get the %@ of collection) : %@
Bad argument to sum (non-numeric, non-collection argument) : %@
Unable to generate SQL for keypath: %@
Bad argument to aggregate %@ in select (must be a keypath or constant value) : %@
Non-attribute property passed to sum: %@
Unable to generate SQL for subquery: %@
Unsupported argument to sum : %@
Unsupported expression in index description (%@), 'distinct' not allowed here
Invalid number of arguments to distinct : %@
Invalid argument to distinct : %@
Unable to generate SQL for distinct : %@
DISTINCT 
Unsupported expression in index description (%@), 'now' not allowed here
Invalid number of arguments to now function : %@
Invalid number of arguments to length: function : %@
Invalid argument to length: : %@
Unable to generate SQL for length : %@
length(
You should not have made it here, scope failed at its job : %@
NSCoreDataToUpper(
NSCoreDataToLower(
abs(
total
 << 
 >> 
Unsupported function type passed as index component (either not a valid function at all, or just not valid in this context).
Unsupported function type passed to SQL store
@min
@max
@sum
@avg
ignoreInheritance
outerFetch
Bad NSFetchRequestExpression (%@ propertiesToFetch)
Too few
Too many
Bad fetch request (NSManagedObjectResultType not compatible with contents of propertiesToFetch)
ZZ_PK
Unknown predicate type for predicate: %@
informationGatherer
havingPredicateAnalyser
havingPredicate
Invalid fetch request: HAVING with no GROUP BY
Invalid fetch request: GROUP BY requires NSDictionaryResultType
substitutionVariables
Unsupported predicate %@
Unsupported nested update inside of %@
nestedWhereSelect
duringPrefetching
subOrder
columnSubOrder
SELECT 0 FROM %@ WHERE 0 = 1
bindIntarrays
fabricatedSQLEntityForReadOnlyFetch
bindIntarraysSubstitutionOrder
Unable to generate index for %@
Reason: %@, %@
Reason: predicate always evaluates to false
%@ - Failed to archive system fields for record: %@
-[PFCloudKitArchivingUtilities newArchivedDataForSystemFieldsOfRecord:]
Decoded share zoneID doesn't match row: %@
A fatal error has occured trying to decode sharing metadata, please file a bug with a sysdiagnose and attach the application store files if possible.
NSUnderlyingExceptionKey
Unsupported function expression %@
Undefined variable expression %@
Unsupported: collections not allowed in index expressions.
Unsupported element in aggregate expression %@
(SELECT * FROM %@) 
VALUES 
Fetch request expressions not allowed in indexes
Unsupported fetch request expression in update - too many results
Unsupported subquery collection expression type
subquery
Unsupported expression type (%u, %@)
com.apple.coredatad
storeDirectoryPath: %@
machServiceName: %@
storeDirectoryPath
machServiceName
<NSPersistentHistoryToken - %@>
%@ is not supported for %@, use %@
Tokens have different number of stores.
Tokens have different set of stores.
v32@?0@"NSString"8@"NSNumber"16^B24
NSPersistentHistoryTokenDictionary
fileHandle
storeFileProtectionClass
storeType
DECIMAL
CHAR
VARCHAR
FLOAT
CLOB
UNDEFINED
INTEGER PRIMARY KEY
entity required
statement required
empty row
missing original
missing fetch request
DELETE FROM %@ WHERE Z_PK = OLD.%@ ; 
UPDATE OR FAIL %@ SET Z_OPT = (Z_OPT + 1) WHERE Z_PK = OLD.%@ ; 
%@; %@
Delete rule is not supported for batch deletes
CREATE TEMPORARY TRIGGER IF NOT EXISTS ZQ_%@_TRIGGER AFTER DELETE ON %@ FOR EACH ROW BEGIN %@%@ END
DROP TRIGGER IF EXISTS ZQ_%@_TRIGGER
CREATE TABLE 
%@ %@
CREATE TEMP TABLE 
%@ %@ UNIQUE
, CONSTRAINT %@ UNIQUE (
 INTEGER PRIMARY KEY, 
 VARCHAR, 
 INTEGER, 
 INTEGER)
INSERT INTO %@(%@, %@, %@, %@) VALUES(%u, '%@', %u, %qd)
UPDATE OR FAIL %@ SET %@ = MAX((SELECT %@ FROM %@ WHERE %@ = '%@'), (SELECT CASE WHEN (SELECT COUNT(*) FROM %@ )== 0 THEN 0 ELSE (SELECT MAX(%@) FROM %@) END)) WHERE %@ = '%@'
SELECT CASE WHEN (SELECT COUNT(*) FROM %@) == 0 THEN 0 ELSE (SELECT MAX (%@) FROM %@) END
MAX((SELECT %@ FROM %@ WHERE %@ = '%@'), (%@))
MAX((SELECT %@ FROM %@ WHERE %@ = '%@'),
(%@)
UPDATE OR FAIL %@ SET %@ = (%@) WHERE %@ = '%@'
ALTER TABLE 
 RENAME TO 
) SELECT 
 FROM 
DROP TABLE IF EXISTS 
DROP TABLE 
, PRIMARY KEY (
%@_%@_INDEX
CREATE INDEX IF NOT EXISTS %@ ON %@ (%@)
CREATE INDEX IF NOT EXISTS %@ ON %@ (%@, %@)
%@_%@_%@_%@_INDEX
CREATE INDEX IF NOT EXISTS %@ ON %@ (%@, %@, %@)
DROP INDEX IF EXISTS %@
_NSEntityOmitSubentityColumnIndex
Entity named:%@ not found for relationship named:%@
MissingEntity
Name: %@ Destination Entity:%@
DELETE FROM %@ WHERE Z_PK = OLD.%@
DELETE FROM %@ WHERE %@ = OLD.Z_PK
SELECT RAISE(FAIL, 'Batch delete failed due to mandatory OTO nullify inverse on %@/%@') FROM %@ WHERE Z_PK = OLD.%@
UPDATE OR FAIL %@ SET %@ = NULL , %@ = NULL, Z_OPT = (Z_OPT + 1) WHERE %@ = OLD.Z_PK
UPDATE OR FAIL %@ SET %@ = NULL , Z_OPT = (Z_OPT + 1) WHERE %@ = OLD.Z_PK
UPDATE OR FAIL %@ SET Z_OPT = (Z_OPT + 1) WHERE Z_PK = OLD.%@
SELECT RAISE(FAIL, 'Batch delete failed due to manadatory OTM nullify inverse on %@/%@') FROM %@ WHERE %@ = OLD.Z_PK
UPDATE OR FAIL %@ SET %@ = NULL, %@ = NULL, Z_OPT = (Z_OPT + 1) WHERE %@ = OLD.Z_PK
UPDATE OR FAIL %@ SET %@ = NULL, Z_OPT = (Z_OPT + 1) WHERE %@ = OLD.Z_PK
WITH ZCTE_INTERMEDIATE AS (SELECT %@, %@ FROM %@ WHERE %@ = OLD.Z_PK) SELECT RAISE(FAIL, 'Batch delete failed due to mandatory MTM nullify inverse on %@/%@') FROM ZCTE_INTERMEDIATE T0 WHERE (0 == (SELECT COUNT(*) FROM %@ T1 where T1.%@ = T0.%@ and T1.%@ != OLD.Z_PK))
(SELECT NSPersistentHistoryBatchDeleteUpdateTrigger(Z_ENT, '%@'))
ON CONFLICT(%@, %@) DO UPDATE SET %@ = NSPersistentHistoryBatchDeleteUpdateTriggerDataBlobOperator(%@, excluded.%@)
FROM %@ WHERE Z_PK = OLD.Z_PK
INSERT INTO %@ (%@, %@, %@, %@, %@) SELECT %u, Z_PK, Z_ENT, %ld, %@ %@ %@;
CREATE TEMPORARY TRIGGER IF NOT EXISTS ZQ_%@_%@_HISTORYBATCHDELETEUPDATE_TRIGGER AFTER UPDATE OF %@ ON %@ FOR EACH ROW BEGIN %@ END
DROP TRIGGER IF EXISTS ZQ_%@_%@_HISTORYBATCHDELETEUPDATE_TRIGGER
%@-%@
(SELECT NSPersistentHistoryBatchDeleteUpdateTrigger(OLD.%@, '%@'))
WHERE OLD.%@ > 0 AND OLD.%@ > 0
INSERT INTO %@ (%@, %@, %@, %@, %@) SELECT %u, OLD.%@, OLD.%@, %ld, %@ %@ %@
(SELECT NSPersistentHistoryBatchDeleteUpdateTrigger(%@.Z_ENT, '%@'))
FROM %@ WHERE Z_PK = OLD.%@
INSERT INTO %@ (%@, %@, %@, %@, %@) SELECT %u, Z_PK, Z_ENT, %ld, %@ %@ %@
CREATE TEMPORARY TRIGGER IF NOT EXISTS ZQ_%@_TRIGGER AFTER DELETE ON %@ FOR EACH ROW BEGIN %@ END
INSERT OR REPLACE INTO %@ 
%@, %@, %@, %@
v16@?0@"NSSQLEntity"8
, Z%@%u
SELECT %d, %@, %@, %ld
, OLD.%@
, CASE %@ 
WHEN %@ THEN (SELECT %@) 
ELSE NULL 
END 
(%@) %@ FROM %@ WHERE %@ = OLD.%@;
CREATE TEMPORARY TRIGGER IF NOT EXISTS ZQ_%@_HISTORYBATCHDELETE_TRIGGER BEFORE DELETE ON %@ FOR EACH ROW BEGIN %@ END
DROP TRIGGER IF EXISTS ZQ_%@_HISTORYBATCHDELETE_TRIGGER
ZQ_BATCH_DELETE_MARSHALLING
CREATE TEMPORARY TRIGGER IF NOT EXISTS ZQ_EDR_%@_%@%@ BEFORE DELETE ON %@ FOR EACH ROW WHEN OLD.%@ IS NOT NULL BEGIN INSERT INTO %@ VALUES (OLD.%@); END
DROP TRIGGER IF EXISTS ZQ_EDR_%@_%@%@
CREATE TEMP TABLE ZQ_BATCH_DELETE_MARSHALLING(refToDelete)
SELECT refToDelete FROM ZQ_BATCH_DELETE_MARSHALLING
DROP TABLE ZQ_BATCH_DELETE_MARSHALLING
Can't fetch source objects
NSBatchDeleteRequest could not locate an Entity for entity name '%@'
Model Configuration
t0.Z_ENT, 
DELETE FROM %@
DELETE FROM %@ WHERE Z_PK IN (%@)
SELECT %@, %@, %@ FROM %@ WHERE Z_PK = %u
T1.%@
SELECT T0.%@, %@, T0.%@ from %@ T0 JOIN %@ T1 on t0.%@ = t1.Z_PK where T0.%@ = %u
SELECT %@, %@, %@ FROM %@ WHERE %@ = %u
Z_PK, Z_ENT
, %@
%@ IN (
Unsupported property type for unique attribute on entity '%@': %@
SELECT %@ FROM %@ WHERE (
SELECT Z_PK FROM %@ WHERE %@ IN (
SELECT %@, %@ FROM %@ WHERE Z_PK IN (
 INTERSECT 
v32@?0@"<NSSQLAttributeExtension>"8Q16^B24
Invalid trigger configuration.
Invalid location index configuration.
NSSQLConnectionBeginTransactionNotification
NSSQLConnectionCommitTransactionNotification
NSSQLConnectionRollbackTransactionNotification
%s (%p) : %@
sqlite3_db_config for SQLITE_DBCONFIG_NO_CKPT_ON_CLOSE failed: %d
Failed to activate SQLite encryption extension
SQLQueue %p for %@
Force checkpointing -wal while initializing query generations due to its large size (%lld)
main
sqlite3_snapshot_recover failed with %d
failed to open journal file
pragma cache_size = 10
Failed to initialize query generation tracking connection due to exception %@ (%@) with error (%@)
Failed to initialize query generation tracking connection due to unknown exception with error (%@)
v8@?0
Exception was caught during NSSQLiteConnection -_performBlock: %@ with userInfo %@
Unidentifiable exception was caught during NSSQLiteConnection -_performBlock.
Attempted to perform an operation without an open database
Attempted to perform another operation with a statement prepared
Attempted to perform another operation with a fetch already in progress
Nested transactions are not supported
[32msql: 
[34m
[47m%@
I/O error for database at %@.  SQLite error code:%d, '%@' errno:%d
I/O error for database at %@.  SQLite error code:%d, '%@'
Fatal error.  The database at %@ is corrupted.  SQLite error code:%d, '%s'
[31m
[47mERROR:
[31m (%d) %s
(%d) %s
error during execution of SQL string '%s' : %s
The database operation timed out after %.2f seconds.
[31m
[47mERROR:
[31m (%d) %@
(%d) %@
error during SQL execution : %@
sql execution time: 
[31m%.4f
[0ms
sql execution time: %.4fs
SELECT MAX(%@) FROM %@
Fetching maximum primary key for entity failed
synchronous
integrity_check
  Execute create index statement: %@
Unable to create index: %@ due to error (%@)
Unable to create index: %@ due to exception (%@)
Unsupported derivedAttribute
  Execute DA trigger creation statement: %@
  Execute trigger creation statement: %@
CREATE TABLE %@ (%@ INTEGER PRIMARY KEY, %@ VARCHAR(255), %@ BLOB)
CREATE TABLE %@ (%@ BLOB)
CREATE TABLE IF NOT EXISTS Y_UBMETA (Y_PK INTEGER PRIMARY KEY ASC, YPEERID VARCHAR UNIQUE, YTRANSACTIONNUMBER INTEGER)
CREATE TABLE IF NOT EXISTS Y_UBRANGE (Y_PK INTEGER PRIMARY_KEY ASC, YPEERID VARCHAR, YENTITYNAME VARCHAR, YRANGESTART INTEGER, YRANGEEND INTEGER, YPEERSTART INTEGER, YPEEREND INTEGER)
CREATE TABLE IF NOT EXISTS Y_UBKVS (Y_PK INTEGER PRIMARY KEY ASC, YKEY VARCHAR UNIQUE, YVALUE VARCHAR)
page_size
pragma %@=%@
pragma %@
pragma recursive_triggers=1
Database failed integrity check.  Corrupted SQLite database at path: %@
lock_proxy_file
pragma %@='%@'
pragma %@=''
auto_vacuum
incremental
:memory:
/dev/null/
file:%@?mode=memory&cache=shared
Connecting to sqlite database file at "%@"
recursive_triggers
memory
File at path does not appear to be a SQLite database: %@
sqlite3_db_config for SQLITE_DBCONFIG_NO_CKPT_ON_CLOSE failed (_qGTC): %d
sqlite3_db_config for SQLITE_DBCONFIG_LOOKASIDE failed: %d
pragma cache_spill = 64
Cannot create a new database file with the read only option at path: %@
ANALYZE
VACUUM
:auto:
pragma lock_proxy_file='%@'
Failed to set file locking on source database
Failed to open source database
Failed to set file locking on destination database
Failed to open destination database
Failed to replace destination database
Source database Path
%@ failed to close destination database %@
%@ failed to close source database %@
-journal
ignoring unsupported page_size specified as truncate option: %@
full
unsupported auto_vacuum setting specified as truncate option: %@
-shm
-conch
Failed to truncate database
In-memory stores do not support rekeying
New key value must not be empty
CoreData: SQLite disconnection (forced error)
Disconnecting from sqlite database due to an error.
CoreData: SQLite disconnection
Disconnecting from sqlite database.
Marking -wal eligible for checkpointing in -disconnect due to its large size (%lld)
Disconnected from database with pending transactions: %@
Un-finalized statement: %p
BEGIN EXCLUSIVE
BEGIN TRANSACTION
%@ -- %@ %p: attempted to commit a transaction while a fetch was in progress
COMMIT
%@ -- %@ %p: attempted to rollback a transaction while a fetch was in progress
ROLLBACK
Optimistic locking failure for %@.  During updateRow.  Original row = %@ New Row = %@ context version match = %d
Optimistic locking failure for %@. During updateRow.  Original row = %p context version match = %d
%u-%lld
Optimistic locking failure for %@.  During updateRow, rows processed = %d.  Original row = %@ New row = %@
Optimistic locking failure for %@.  During updateRow, rows processed = %d.
Optimistic locking failure for %@.  During updateConstrainedValuesForRow, rows processed = %d.  New Row = %@
Optimistic locking failure for %@.  During updateConstrainedValuesForRow, rows processed = %d.  Row was updated.
Optimistic locking failure for %@.  During deleteRow.  Original row = %@ New Row = %@ context version match = %d
Optimistic locking failure for %@. During deleteRow. version match = %d
correlation bindings: %qu, %qu, %qu, %qu
v48@?0Q8Q16Q24Q32^B40
correlation bindings:  %qu, %qu
v32@?0Q8Q16^B24
correlation bindings: %qu, %qu, %qu
v40@?0Q8Q16Q24^B32
SQL statement is still active / leaked.  sql:'%@'
statement is still active
Statement
error during prepareSQL for SQL string '%s' : %s
CoreData: SQLite: error: Can't bind intarray. SQLite error code: %d
Bound intarray %@
Bound intarray value %lu at %d
Bound intarray values.
sqlite3_bind* failed
SQLite bind[%ld] = %@
<FBF url=%@>
<NSData len=%lu>
SQLite bind[%ld] = "%@"
SQLite bind[%ld] = (timestamp)%f
SQLite bind[%ld] = (int64)%qd
SQLite bind[%ld] = nil
binding not implemented for this SQLType %d
Unexpected or improperly formatted URI parameter type %@, expected NSURL or well-formed NSString
%lu/%lu
v16@?0^v8
Unexpected or improperly formatted UUID parameter with type %@, expected NSUUID or well-formed NSString
fetching not implemented for this value type
[31m
[47mERROR:
[31m %@
The database appears corrupt.  (invalid entity key)
The database appears corrupt.  (invalid primary key)
Row (pk = %lld) for entity '%@' is missing mandatory text data for property '%@'
BufferAllocations found a bad Object ID
Row (pk = %ld) for entity '%@' is missing mandatory text data for property '%@'
pragma secure_delete=1
pragma secure_delete=0
pragma locking_mode=EXCLUSIVE
pragma locking_mode=NORMAL
pragma integrity_check
performIntegrityCheck encountered an error %@
performIntegrityCheck encountered an exception %@
SELECT TBL_NAME FROM SQLITE_MASTER WHERE TYPE = "table" ORDER BY TBL_NAME
TBL_NAME
Encountered exception %@ with userInfo %@ while fetchTableNames from store: %@
SELECT TBL_NAME, SQL FROM SQLITE_MASTER WHERE TYPE = "%@"
 AND SQL LIKE "%%%@%%"
 ORDER BY TBL_NAME
Ubiquity: Encountered exception %@ with userInfo %@ while fetchTableCreationSQL from store: %@
table
trigger
SELECT 
SELECT TBL_NAME FROM %@ WHERE TBL_NAME = '%@'
SQLITE_TEMP_MASTER
SQLITE_MASTER
Encountered exception %@ with userInfo %@ while checking table name from store: %@
_DEFERRED_
_DEFERRED_TEMP__%@
Deferred Lightweight Migration %@ all tasks
with
without
Beginning lightweight migration on connection
Increasing SQLite cache size to 148MB
pragma cache_size = 38000
Beginning creation of deferred schema migration statements
Create alter table migration statements
Creation of alter table migration statements
Create create table migration statements
Creation of create table migration statements
Create insert migration statements
Creation of insert migration statements
Create drop table migration statements
Creation of drop table migration statements
Finished creating deferred schema migration statements
Total preparation time for schema migration statements
Beginning formal transaction
Execute alter table statements
  Execute alter table statement: %@
Execute create table statements
  Execute create table statement: %@
Execute insert statements
  Execute insert statement: %@
Execute drop table statements
  Execute drop table statement: %@
Execute create indexes statements
Execute create trigger statements
Finished updating metadata
Update store metadata
2.15
Committing formal transaction
Finished committing formal transaction
Time for COMMIT
2.16
Total formal transaction time
Checkpointing WAL journal
pragma wal_checkpoint(FULL)
Finished checkpointing WAL journal
Successfully completed deferred lightweight migration on connection
Reset SQLite cache size
pragma cache_size = 512
Checkpoint time
Total migration time (on connection)
    Deferred Migration step %@ '%@' took %2.2f seconds
Encountered exception %@ with userInfo %@ while finishing deferred lightweight migration for store: %@
Encountered exception %@ with userInfo %@ while rolling back failed deferred lightweight migration for store: %@
Encountered exception %@ with userInfo %@ while dropping table %@ from store: %@
metadata is not a dictionary: %@
The metadata is not a dictionary: %@
DELETE FROM %@ WHERE %@ = ?
failure writing metadata plist with data bytes: %@
An error %@ occurred converting the metadata plist data: %@
INSERT INTO %@ (%@, %@, %@) VALUES (?, ?, ?)
Saving new meta data; version = %@ ; UUID = %@
SELECT %@, %@, %@ FROM %@
failure reading metadata plist with data bytes: %@
Metadata table is missing database UUID.
Could not initialize compression decoder.
Failed to decompress model cache.
SELECT %@ FROM %@
Could not initialize compression encoder.
INSERT INTO %@ (%@) VALUES (?)
Saving new model cache
unable to cache model: %@
An internal error occurred while configuring functions in the SQLite database.
primary keys must be generated within a transaction
SELECT %@ FROM %@ WHERE %@ = ?
getting max pk for entityID = %u
Fetching maximum primary key failed
UPDATE OR FAIL %@ SET %@ = ? WHERE %@ = ? AND %@ = ?
updating max pk for entityID = %u with old = %qd and new = %qd
Updating max pk failed: %@
pragma auto_vacuum=%@
pragma page_size=%d
pragma journal_mode=wal
creating schema.
Encountered exception %@ with userInfo %@ in createSchema for store: %@
Encountered exception %@ with userInfo %@ rolling back failed createSchema for store: %@
Creating primary key table.
re-adding all missing indices
IF NOT EXISTS 
PostSaveMaintenance: fileSize %lld greater than prune threshold
PostSaveMaintenance: %@ override
forceWalCheckpoint
forceVacuum
pragma page_count
pragma freelist_count
PostSaveMaintenance: forced incremental_vacuum - %ld
pragma incremental_vacuum(%d)
PostSaveMaintenance: incremental_vacuum with freelist_count - %ld and pages_to_free %lld
PostSaveMaintenance: Full Vacuum
PostSaveMaintenance: performPostSaveTasks threw something (1). ex = %@
PostSaveMaintenance: wal_checkpoint(TRUNCATE) 
pragma wal_checkpoint(TRUNCATE)
PostSaveMaintenance: performPostSaveTasks threw something (2). ex = %@
EXPLAIN QUERY PLAN %s
SQLite: %s
     
%d %d %d %s
EXPLAIN QUERY PLAN %@
 INDEX 
%1023s
i16@?0^{sqlite3_stmt=}8
index tracking enabled on read-only store
unable to generate primary keys for index tracking
failed to set up index tracking: %@
failed to %@ index tracking setup transaction: %@
roll back
commit
ATRANSACTION
ACHANGE
ATRANSACTIONSTRING
UPDATE OR FAIL %@ set %@=0 where %@ = '%@'
v32@?0@"NSManagedObjectID"8@"NSManagedObjectID"16^B24
inserts
updates
Batch Insert resulted in updates with no updated properties - %@ - %@
Batch Insert resulted in no changes - %@ - %@
Batch Update resulted in updates with no updated properties - %@ - %@
ZCHANGETRACK
ZCHANGETRACKHISTORY
select sql from sqlite_master where name = 'ZCHANGETRACK'
ZCHANGETIMESTAMP FLOAT
ZBUNDLEID VARCHAR
ZCONTEXTNAME VARCHAR
ZPROCESSID VARCHAR
Unable to determine if old history table 1 Exists - %s
select sql from sqlite_master where name = 'ZCHANGETRACKHISTORY'
 ZCHANGETRACKHISTORYCHANGETYPE INTEGER
ZCHANGETRACKHISTORYENTITY INTEGER
ZCHANGETRACKHISTORYENTITYVERSION INTEGER
ZCHANGETRACKINGHISTORYTRANSACTIONID INTEGER
ZCHANGETRACKHISTORYTOMBSTONE BLOB
ZCHANGETRACKEHISTORYNTITYCOLUMNS BLOB
Unable to determine if old history table 2 Exists - %s
ZCHANGE
ZTRANSACTION
select sql from sqlite_master where name = 'ZCHANGE'
ZENTITY INTEGER, ZENTITYPK INTEGER
ZCHANGETYPE INTEGER
ZCOLUMNS BLOB
ZTRANSACTIONID INTEGER
select sql from sqlite_master where name = 'ZTRANSACTION'
 ZBUNDLEID VARCHAR
ZTIMESTAMP FLOAT
DROP TABLE ZCHANGETRACK
DROP TABLE ZCHANGETRACKHISTORY
DROP TABLE ZCHANGE
DROP TABLE ZTRANSACTION
SELECT COUNT(Z_PK) FROM %@ WHERE %@ = %@
SELECT Z_PK FROM %@ WHERE %@ = ?
ALTER TABLE %@ ADD Z%@%lu BLOB;
Executing new tombstone column statement: %@
select sql from sqlite_master where name = '%@'
Unable to determine if tombstones for change table - %s
ALTER TABLE %@ ADD Z%@ INTEGER;
SELECT MAX(%@) FROM %@ WHERE %@ >= 16000
DELETE FROM %@ WHERE Z_PK <= %@
DELETE FROM %@ WHERE %@ <= %@
com.apple.coredata.schemamigrator: lightweight migration from model with digest { %@ }
externalRef
unable to generate primary keys for transaction
unknown reason
Persitent History - Transaction constraint primary key violation
Transaction
History Transaction hit an Optimistic Locking Exception - %@
B16@?0@"NSMutableDictionary"8
v32@?0@"NSDictionary"8Q16^B24
Cannot set value for derived attribute: property = "%@"; entity = "%@"; value = %@
Property (%@) is not supported with NSBatchInsertRequest
property not found for entity
unable to generate primary keys for batch insert
mandatory property not set
unable to generate primary keys
Perssitent History - Change constraint primary key violation
History Change hit an Optimistic Locking Exception - %@
%u-%@
SELECT count(*) FROM 
SELECT count(*) FROM (SELECT 0 FROM %@ LIMIT 1)
SELECT DISTINCT ENTITYID, PRIMEKEY FROM %@
ENTITYID
PRIMEKEY
SELECT ENTITYID, PRIMEKEY, TYPE,  group_concat(ATTRIBUTENAME) FROM %@ GROUP BY ENTITYID, PRIMEKEY
TYPE
ATTRIBUTENAME
deletes
History Update for %@ without any updated columns.
Unable to construct objectID for History Change: %@-%@-%@-%@
incorrect number of results
%lld
DELETE FROM %@ WHERE %@ IN %@
UPDATE %@ SET Z%@ = %lld
INSERT INTO %@ (%@) SELECT %@ FROM %@
PRAGMA page_count
PRAGMA freelist_count
SELECT sum(pageno) FROM dbstat d, sqlite_master m WHERE d.name = m.name AND d.aggregate = TRUE
 AND m.tbl_name IN %@
tableName
Percentage History: total pages - %lld, free pages - %lld, historyPages - %lld
Percentage History calculation error. Total Pages - %lld  Free Pages - %lld
An internal error occurred while configuring migration functions in the SQLite database.
INSERT INTO Z_METADATA (Z_VERSION) VALUES (999)
DELETE FROM Z_METADATA where Z_VERSION = 999
database connection must not be nil here
connection %p created snapshot:
ss %@ value: 
pointer value:%@
pointer: %p
connection %p adopting snapshot:
ss value: %@
pointer value:%@
pointer: %p
sqlite3_snapshot_open failed with %ld
sqlite3_snapshot data was unexpectedly NULL
_registerNewQueryGenerationSnapshot failed to adopt query generation with error %d
Connection can't register generation: Uncaught exception: %@
B32@?0@8Q16^B24
currentQueryGenerationIdentifier failed to adopt currentQueryGeneration: %d
Failed to get a currentQueryGeneration: %@
currentQueryGenerationIdentifier failed with exception: %@
currentQueryGenerationIdentifier failed with NSError: %@
currentQueryGenerationIdentifier failed with sqlite error: %d
connection %p attempting to reopen snapshot: %p
Attempt to reopen sqlite3_snapshot_open failed %d
Failed to free sqlite3_snapshot
v32@?0@"_PFSQLiteSnapshotWrapper"8Q16^B24
DROP TRIGGER %@
Z_DA_
Z_RT_
INSERT
UPDATE
DELETE
UNSET
Missing one or more columns to query record metadata for missing rows
SELECT %@, %@, %@, %@ FROM %@ LEFT JOIN %@ ON %@ = %@ AND %@ = %@
SELECT %@, %@ FROM (%@) WHERE %@ IS NULL AND %@ IS NULL
Missing metadata query got an unexpected number of columns in the result: %@
Missing metadata query hit an exception: %@
Entity marked as needing unique constraint coalescing but does not appear to be uniqued: %@
SELECT %@, 
SELECT COUNT(DISTINCT(%@)) AS COUNT, MIN(%@) AS %@, 
v32@?0@"NSSQLColumn"8Q16^B24
 FROM %@ %@ ORDER BY COUNT DESC
 FROM (%@) WHERE COUNT > 1;
DELETE FROM %@ WHERE 
%@ = '%@'
CloudKit: Deduping for metadata entity doesn't know how to handle this type of object yet: %@ - %@
Invalid class type '%@' for lock_proxy_file pragma value, must be an NSNull or NSString
Constraint unique violation: %s
no message
Constraint trigger violation: %s
Constraint primary key violation
error during SQL execution : %s
NSCoreDataNow
NSCoreDataPrependExternalReferenceMarker
NSCoreDataLike
NSCoreDataStringSearch
NSCoreDataMatches
NSCoreDataStringCompare
NSCollateNoCase
NSCollateNumericallyNoCase
NSCollateLocaleSensitive
NSCollateLocaleSensitiveNoCase
NSCollateFinderlike
NSCoreDataTriggerUpdateAffectedObjectValue
NSCoreDataDATriggerInsertUpdatedAffectedObjectValue
NSCoreDataDATriggerUpdatedAffectedObjectValue
NSPersistentHistoryBatchDeleteUpdateTrigger
NSPersistentHistoryBatchDeleteUpdateTriggerDataBlobOperator
NSCoreCanonical
NSCoreToUpper
NSPersistentHistoryMigrateUpdates
NSCoreDataNow: requires no arguments
NSCoreDataPrependExternalReferenceMarker: malloc failure
NSCoreDataPrependExternalReferenceMarker: wrong number of parameters
NSCoreDataLike: variant must be an integer in the range [0,3]
NSCoreDataLike: requres 3 arguments (value, pattern, variant)
NSCoreStringSearch: requires 4 arguments (string1, string2, flags, localized)
NSCoreDataTo(Uppercase|Lowercase): requires one argument
_NSPredicateOperatorUtilities
NSCoreDataCanonical: requires one argument
NSCoreDataMatches: variant must be an integer in the range [0,3]
NSCoreDataMatches: requres 3 arguments (value, pattern, variant)
NSCoreDataStringCompare: unknown operation type
NSCoreDataStringCompare: incorrect number of arguments
NSPersistentHistoryBatchDeleteUpdateTrigger: malloc failure
_NSPersistentHistoryBatchDeleteUpdateTriggerDataBlobOperator: malloc failure
NSPersistentHistoryMigrateUpdates: malloc failure
Join being created outside a fetch scope for keypath %@ entity %@
subqueryCollectionContext
Join being created inside an update scope for keypath %@ entity %@
source (%@, %@), destination (%@, %@), correlation (%@)
INNER 
LEFT OUTER 
JOIN 
 ON 
 INNER
 LEFT OUTER
 JOIN 
Unsupported property %@ in update
Unsupported property %@ in update - no joins allowed here
keypathExpressionDestinationRelationship
transient property used in fetch request
to-many key not allowed here
multiple to-many keys not allowed here
this should be inside a fetch or an update
keypaths (joins) not supported in batch update statements
invalid keypath : %@
invalid keypath %@
ambiguous keypath %@
found
propertyDescription
(%@,%@)
Ambiguous keypath %@
keypath %@ not found in entity %@
LastKeyPathWasTransientProperty
Keypath containing KVC aggregate where there shouldn't be one; failed to handle %@
Bad keypath: too many joins for an index
Bad keypath: can't find property
Unable to generate SQL for keypath
Bad keypath: indexes may not contain to many relationshps
SELECT clauses in queries with GROUP BY components can only contain properties named in the GROUP BY or aggregate functions (%@ is not in the GROUP BY)
Unable to generate SQL - non-constant expression for limit substitution.
Unable to generate SQL - non-NSNumber value for limit substitution.
Invalid variable substitution - multiple values not supported for limit %@
 LIMIT %@
 LIMIT -1
CoreData: warning: Fetch Limit is too large, please set it to a value less than or equal to NSIntegerMax
 LIMIT %lu
%@_%d%@
improper model with nonsensical relationship definitions
REFLEXIVE
FOK_REFLEXIVE
 { %@ %@ %@ %@ }
Record fetch failed because fetching the record metadata hit an unhandled exception.
%@ '%@': %@ %f
-[PFCloudKitImporterFetchRecordsWorkItem executeImportOperationsAndAccumulateRecordsWithManagedObjectContext:completion:]_block_invoke
v24@?0@"CKRecordID"8d16
v32@?0@"CKRecord"8@"CKRecordID"16@"NSError"24
Fetch records request did not match any records in the store: %@
-[PFCloudKitImporterFetchRecordsWorkItem executeImportOperationsAndAccumulateRecordsWithManagedObjectContext:completion:]
%@ encountered error while fetching record %@
-[PFCloudKitImporterFetchRecordsWorkItem fetchFinishedForRecord:withID:error:]
Fetch operation was notified about a recordID that finished with an error that doesn't have an objectID: %@ - %@
Fetch operation was notified about an updated recordID that finished that doesn't have an objectID: %@
Fetch operation was notified via partial failure about a recordID that doesn't have an objectID: %@ - %@
startedAt > %@
SELF > %@
'%@' only supports fetch requests with the following result types: %@, %@
Cannot sort events by '%@', it is not an attribute of '%@'.
Fetch requests for '%@' must use '%@' as the entity name, '%@' is not valid. Please consider using +[%@ %@].
Fetch request validation for NSPersistentCloudKitContainerEventRequest failed but did not report a failure reason.
type
startDate
endDate
error.domain
error.code
'%@' does not support predicates with custom selectors: %@
'%@' does not support predicates of type '%@'.
NSPersistentCloudKitContainerEventRequest predicate translation failed but did not return a failure reason: %@
Cannot query events by '%@', it is not an attribute of '%@'.
Unable to generate optimized model (sql model generation failed %@)
Unsupported join (offsets not allowed in updates)
Invalid SQL (must specify a limit with an offset)
Unable to generate SQL - non-constant expression for offset substitution.
Unable to generate SQL - non-NSNumber value for offset substitution.
 OFFSET %@
 OFFSET %lu
Unknown request class: %@
Request '%@' was cancelled because there is already a pending request of type '%@'.
Dequeue called during an active request: %@
requestFinished called with a different request than the active request: %@
Called with: %@
requestFinished called without an active request: %@
History analysis corruption detected. State is behind (or overlaps) this copy but is attempting to be merged. %@ / %@
Tombstones aren't supported yet for CloudKit history analysis
Asked to purge user rows without any zones from which to purge.
%@ - Removing cloud metadata and client rows in zone: %@
-[PFCloudKitMetadataPurger purgeMetadataFromStore:inMonitor:withOptions:forRecordZones:inDatabaseWithScope:andTransactionAuthor:error:]_block_invoke
Asked to purge system fields without any zones from which to purge.
%@ - Purging system fields from data in zone: %@
Asked to purge zone metadata (trying to recreate after the purge) without any zones from which to purge.
recordName IN %@ OR relatedRecordName IN %@
recordZone.ckRecordZoneName = %@ AND recordZone.ckOwnerName = %@ AND entityId != NULL AND entityPK != NULL
v40@?0@"NSArray"8@"NSError"16^B24^B32
Cannot create objectID: got a 0 pk for entity: %@
v32@?0@"NSNumber"8@"NSMutableSet"16^B24
recordZone.ckRecordZoneName = %@ AND recordZone.ckOwnerName = %@
recordZoneName = %@ AND recordZoneOwnerName = %@
%@ - Removing rows after account change: %@
-[PFCloudKitMetadataPurger purgeMetadataAfterAccountChangeFromStore:inMonitor:inDatabaseWithScope:error:]_block_invoke
%@ - Removed cloud metadata after account change %@
Failed to purge cloudkit metadata entity (%@): %@
Attempting to delete a zone metadata that has records (%ld): %@ - %@
Unsupported join (ordering by mtm not allowed in updates): %@
Unsupported join (ordering by tm not allowed in updates): %@
ORDER BY
unsupported NSSortDescriptor (comparator blocks are not supported)
 COLLATE NSCollateNoCase 
 COLLATE NSCollateNumericallyNoCase 
 COLLATE NSCollateLocaleSensitive 
 COLLATE NSCollateLocaleSensitiveNoCase 
 COLLATE NSCollateFinderlike 
unsupported NSSortDescriptor selector: %@
 DESC
 NULLS FIRST
 ASC NULLS LAST
*** vm_allocate(size=%lld) failed (error code=%d)
Unable to allocate VM Memory
VMErrorCode
*** vm_deallocate(size=%lld) oldSize= %lld, failed (error code=%d)
Unable to deallocate VM Memory
*** vm_deallocate(size=%lld), failed (error code=%d)
%@ bufferResultSetPurgeable failed to set vm buffer as purgeable: %d
%@ bufferResultSetNonPurgeable failed to set vm buffer as non-purgeable: %d
sql connection fetch time: 
[31m%.4f
[0ms
sql connection fetch time: %.4fs
exception raised during multi-threaded fetch %@ (%@)
unidentifiable exception during multi-threaded fetch
result array has %lu entries, but we fetched %d rows
fetch using %@ returned %lu rows
 with values: %@
total fetch execution time: 
[31m%.4f
[0ms for %d rows.
total fetch execution time: %.4fs for %d rows.
Fetch cancelled.  Total fetch execution time: 
[31m%.4f
[0ms.
Fetch cancelled.  Total fetch execution time: %.4fs.
exception %@ raised processing result of multi-threaded fetch (%@)
unidentifiable processing result of multi-threaded fetch
exception %@ raised processing result of multi-threaded fetch while prepopulating objects (%@)
unidentifiable processing result of multi-threaded fetch while prepopulating objects
%@ doesn't know how to handle it's specified value. Please file a bug with this outpout and send to Core Data | New Bugs.
-[NSCKMetadataEntry describeValue]
key IN (%@)
v16@?0@"NSCKMetadataEntry"8
<%@: %p> %@
<NSConstraintCacheKey: %@>
<NSConstraintCache : entity = %@, constraint = %@, extension = %@>
v32@?0@8@"NSArray"16^B24
<%@ %@ (%@)>
Unable to resolve variable expression: %@
Can't generate select target token for expression: %@
Constant select targets must be values, not collections
Can't generate select target token for constant: %@
Sort descriptor key "%@" may refer to a modelled property or an expression; the modelled property will be used.
Can't generate select target token for fetch request expression: %@
Can't generate SQL for ternary expression: %@
Currently unsupported (%@), try again later
Unsupported value passed to valuesToFetch: (%@) not supported
 AS %@
%@{%@ %d-%qd-%qi
 %@=NULL
 %@=<NSFileBackedFuture fileSize=%lu>
 %@=<NSData len=%lu>
 %@="%@"
 %@=%@
 %@=%qd
 %@=%u
 and to-manys=%p}
unexpected key found for: %@
COUNT( 
Unknown predicate operator type parameter
illegal comparison with NULL
IS NULL
IS NOT NULL
Unable to generate SQL for predicate (%@) (problem on LHS)
Unable to generate SQL for predicate (%@) (problem on RHS)
Unable to generate SQL for predicate (%@) (problem with operator)
You really shouldn't be here
NSCoreDataStringCompare(
 , %d, %lu, %d)
%lu) 
Unimplemented SQL generation for predicate (%@)
Unimplemented SQL generatio for predicate (%@)
 NSCoreDataStringSearch(
%lu, %u)
unimplemented SQL generation for predicate (%@).
Invalid input string
Unknown error during string conversion
Malformed string (%@)
Bad string
Malformed string 2 (%@)
%@%C
Unsupported join (not allowed in updates): %@
Unsupported clause (not allowed in updates): %@.
 IN (SELECT 
unimplemented SQL generation for predicate : (%@) (bad LHS)
unimplemented SQL generation for predicate : (%@) (bad RHS)
unimplemented SQL generation for predicate : (%@) (LHS and RHS both keypaths)
 IN 
unimplemented SQL generation for predicate : (%@)
 BETWEEN 
Unimplemented SQL generation for predicate : (%@)
Unsupported predicate, LHS of boundedBy: must be a keypath
Unsupported predicate, LHS of boundedBy: is a bad keypath a keypath
Unsupported predicate, LHS of boundedBy: has a keypath (can't find %@)
Malformed keypath: non-terminal attribute %@
Unsupported predicate, LHS of boundedBy: does not terminate with a location attribute
Bad LHS attribute, missing derived lat/long names
Unsupported predicate, LHS of boundedBy: does not terminate with a location
Unsupported predicate, LHS of boundedBy: can't find location attribute
%@.Z_PK IN 
(%@) 
ALL modifier is not implemented
can't use NULL on left hand side
 NSCoreDataLike(
 NSCoreDataMatches(
Unknown/unsupported comparison predicate operator type
Unable to generate where clause for predicate (%@) (unknown problem)
%s <%p> on entity '%@' with sql text '%@'
exportIfNecessaryWithCompletion invoked multiple times.
-[PFCloudKitExporter exportIfNecessaryWithCompletion:]_block_invoke_2
hasRecordZoneNum = NO AND database.databaseScopeNum = %@
Export encountered an unhandled exception while analyzing history in the store.
%@: Scheduling modifyRecordZonesOperation in response to request: %@ operation: %@
-[PFCloudKitExporter exportIfNecessaryWithCompletion:]
needsCloudDelete == 1
-[PFCloudKitExporter exportIfNecessary]_block_invoke_2
%@: Found %lu objects needing export.
v32@?0@"NSString"8@"NSCloudKitMirroringResult"16^B24
-[PFCloudKitExporter analyzeHistoryInStore:withManagedObjectContext:error:]
Unable to read the last history token: %@
Unable to read the bypass entry: %@
%@: Exporting changes since (%d): %@
History analyzer should have set an error if the analyzer context is nil.
%@: Failed to save exporter history token after deferral: %@
%@: Failed to update exporter history token after deferral: %@
Export encountered a fatal exception while analyzing history.
Modify records finished: %@
-[PFCloudKitExporter exportOperationFinished:withSavedRecords:deletedRecordIDs:operationError:]
Failed to save record name updates: %@
-[PFCloudKitExporter exportOperationFinished:withSavedRecords:deletedRecordIDs:operationError:]_block_invoke_2
%@ - Failed to update metadadata after operation finished (%@): %@
Export encountered an unhandled exception while updating metadata after the operation finished.
Failed to delete asset file: %@
-[PFCloudKitExporter exportOperationFinished:withSavedRecords:deletedRecordIDs:operationError:]_block_invoke
Metadata Inconsistency: Missing metadata for record: %@
%@ - Failed to fetch metadata for post-export update: %@
-[PFCloudKitExporter updateMetadataForSavedRecords:deletedRecordIDs:inStore:withManagedObjectContext:error:]
%@: Fetching record zones: %@
-[PFCloudKitExporter fetchRecordZones:]
%@: Finished fetching record zones: %@ - %@
-[PFCloudKitExporter fetchRecordZonesOperationFinished:operationError:]
Z_ENT
Z_FOK
_ent
_opt
Z_METADATA
Z_VERSION
Z_UUID
Z_PLIST
Z_MODELCACHE
Z_CONTENT
Z_PRIMARYKEY
Z_NAME
Z_SUPER
Z_MAX
%c%@
COUNT(%@)
COUNT(%@.%@)
@total
Aggregate functions need to work on attributes: %@
Unsupported KVC function in trailing keypath %@, %@
Can't have a non-relationship collection element in a subquery%@
Bad collection keypath (%@) can't find property named (%@) 
Only allowed one toMany/manyToMany relationship in subquery expression collection (%@)
Bad collection keypath in subquery %@ (attribute in non-terminal position)
Unsupported subquery with multiple joins in update columns %@
Unsupported subquery collection type (%@)
Subquery expressions not allowed in indexes
Unsupported subquery (too many functions): %@
.@min
.@max
.@sum
.@avg
Unsupported subquery (non-aggregate not allowed in select or update column): %@
Unknown predicate type
Model map is unexpectedly nil
Model map is nil
Managed object model with offset %lu is not known to %@
Illegal attempt to register a client managed object model with a non-zero offset (%ld).
q24@?0#8#16
Attempt to register ancillary model with offset %ld but different entity count.
Attempt to register ancillary model with different version hashes than the currently registered model: %p has hashes
%p has hashes
%d%@
NSPrimaryKey64
NSKey
NSRelatedNodes
Can't find entity %@ in model %@
sourceAttributeName
_sourceModelForVersionHashes: testing model at path '%@'
 Choosing model at path '%@'
sourceModelForStoreAtURL: Testing models searched via resourceBundles
sourceModelForStoreAtURL: Testing models searched via mainBundle
sourceModelForStoreAtURL: Testing model cached in database file
 Choosing model from cache table in db at '%@'
sourceModelForStoreAtURL: Testing models searched via allBundles
sourceModelForStoreAtURL: allBundles is %@
sourceModelForStoreAtURL: Testing models searched via allFrameworks
sourceModelForStoreAtURL: allFrameworks is %@
Last ditch review of models with skewed hashing
Can't find model for source store
force
Can't find or automatically infer mapping model for migration
Can't find mapping model for migration
.migrationdestination_41b5a6b5c6e848c462a8480cd24caef3
_NSAutomaticMigrationResourceBundlesOption
CoreData: Schema migration (policy)
Unable to delete file (backup external data references URL)
Migration source and destination URLs must be different
sourceURL
destinationURL
(migration) Failed to remove orphaned, partially migrated store file %@: %@
(migration) leaving incompletely migrated store on disk after automatic migration failure. (%@)
NSTemporaryObjectID
NSTemporaryObjectID_default
%s_%x
%@://%@/%@/t%@
Contents
Model
strings
Entity/
Property/
/Entity/
ErrorString/
databaseScopeNum = %@
Public
Shared
Private
(NSFetchedResultsController) section '%@' not found in controller
Can't generate intermediate for ternary expression predicate.
Can't generate intermediate for ternary expression predicate (unknown type)
Ternary expression not supported as index component
(CASE (
Can't generate SQL for ternary expression predicate.
) when 1 then (
Can't generate SQL for ternary expression trueExpression.
) else (
Can't generate SQL for ternary expression falseExpression.
) end)
NSSQLiteInPlaceMigrationManager requires that the source and destination stores to be NSSQLiteStoreType
sourceStore
Failed to open the store
Invalid destination data model
Cannot migrate store in-place: 
Cannot migrate store in-place
(migration) leaving incompletely migrated store on disk after in-place migration error. (%@, %@)
unknown error
(migration) in-place migration completed successfully in %2.2f seconds
Invalid metric sent to PFCloudKitMetricsClient: %@
Attempt to log metric with PFCloudKitBaseMetric, but each subclass must provide it's own name.
com.apple.coredata.cloudkit.base
processName
%@ %@
com.apple.coredata.cloudkit.unhandledPartialError
com.apple.coredata.cloudkit.fatalError
requestClass
sizeInBytes
com.apple.coredata.cloudkit.exportedRecordBytes
com.apple.coredata.cloudkit.importedRecordBytes
com.apple.coredata.cloudkit.fetchedRecordBytes
com.apple.coredata.cloudkit.fetchedAssetBytes
%@ : %@ -> %@
Unsupported relationship migration: A to-one's inverse to-many source must be a to-many
sourceRelationship
destinationRelationship
Unrecognized destination property type in transform
transform
Invalid constant expression type for property type in transform
Unrecognized source property type in transform
Properties cannot be renamed in stores that are used with CloudKit. Cannot rename '%@.%@' to '%@.%@'.
NSCoreDataPrependExternalReferenceMarker(length(%@), %@)
Invalid source property type in transform
Unsupported value expression type in transform
Entity mapping includes property transform with unresolved prerequisite
pendingTransforms
CloudKit integration forbids renaming '%@' to '%@'. Older devices can't process the new relationships.
CloudKit integration forbids renaming '%@' to '%@'. Older devices can't process the new records.
UPDATE OR FAIL %@%@ SET 
%@ : %@ 
Unrecognized entity migration type
entityMigration
Cannot merge multiple root entity source tables into one destination entity root table
sourceRootEntities
destinationRootEntity
ALTER TABLE %@ RENAME COLUMN %@ TO _DEFERRED_%@__%@
q24@?0@"NSArray"8@"NSArray"16
ALTER TABLE %@ RENAME COLUMN %@ TO %@
ALTER TABLE %@ ADD COLUMN %@ %@
Unrecognized source property type for many-to-many migration
 IN (
Unrecognized column in entity
column
Wrong number of columns in migration insert statement
Mismatched columns and values in migration insert statement
UPDATE %@ SET 
%@ = ?
%@ IS NULL
_T_%@
 = (SELECT _EKT.
 _EKT WHERE 
 = _EKT.
 WHERE %@ is NULL
, 2000
 IS NOT NULL
 NOT IN (
Migration: CloudKit tables detected. Adding migration statements for removed table: %@
DELETE FROM ANSCKRECORDMETADATA WHERE ZENTITYID IN %@
 %@-%@:%@-%@-%@:%@
Attempt to link objects across zones: MTM `%@` is attempting to relate `%@` and `%@`
Got temporary objectIDs back during import where we should have permanent ones: %@ / %@
New many to many relationship type?: %@
q24@?0@"NSRelationshipDescription"8@"NSRelationshipDescription"16
CD_recordNames
CD_relationships
CD_entityNames
Attempting to link objects across zones via one-to-many relationship '%@': %@ / %@
Linking object with record name %@ to %@ via %@
-[PFMirroredOneToManyRelationship updateRelationshipValueUsingImportContext:andManagedObjectContext:error:]
Couldn't find related object to link for object with record name %@ to %@ via %@
Import context cache is stale. To-one mirrored relationship source object has gone missing: %@ - %@
ALTER TABLE %@ RENAME TO %@_ORIG
UPDATE OR FAIL %@ SET %@ = (SELECT %@ FROM %@_ORIG WHERE %@ = %d) WHERE %@ = %d
UPDATE OR FAIL %@ SET %@ = 0 WHERE %@ = %d
DROP TABLE %@_ORIG
Increasing SQLite cache size to 117MB
pragma cache_size = 30000
Beginning creation of schema migration statements
Creation of entity migration statements
Failed to generate statements to perform migration
Creating statements to update entity keys
Creation of update entity keys statements
Creating statements to update primary key table
Creation of update primary key table statements
Finished creating schema migration statements
Checking metadata
Migration was completed by another client
Beginning forced migration
Begin dropping attribute extensions.
Executing drop attribute extension statement: %@
Finished dropping attribute extensions.
Drop attribute extensions
Begin dropping derived properties.
Executing drop derived property statement: %@
End dropping derived properties.
Drop derived properties
Begin dropping indices.
Executing drop index statement: %@
Finished dropping indices.
Drop indices
Begin entity schema & data migration statements.
Executing entity schema & data migration statement: %@
Finished entity schema & data migration statements.
Execution of entity schema and data migration statements
Begin updating entity key columns.
Executing entity key column update statement: %@
Finished updating entity key columns.
Execution of entity key column updates
Begin updating primary key table.
Finished updating primary key table.
Update primary key table
Begin updating default values.
Finished updating default values.
Update default values
2.7.1
Begin attribute extension updates.
Executing attribute extension insert statement: %@
Executing attribute extension change statement: %@
Finished attribute extension updates.
Update attribute extensions
Begin index creation and updates.
Generate index creation statements
2.9.1
Executing index creation statement: %@
Execute index creation statements
2.9.2
Generate index update statements
2.9.3
Executing index update statement: %@
Execute index update statements
2.9.4
Finished index creation and updates.
Total index creation and update time
DROP INDEX IF EXISTS %@_Z_ENT_INDEX
Executing drop Z_ENT index statement: %@
Dropping Z_ENT indices
2.10
Begin updating derived properties.
Executing derived property update statement (data): %@
Executing derived property update statement (trigger): %@
Finished updating derived properties.
Update derived properties
2.11
Update ancillary model primary keys
2.12
Drop index tracking table
2.13
Beginning persistent history metadata tables update
Generate persistent history delete statements
2.14.1
Generate persistent history update statements
2.14.2
Dropping Persistent History b/c of an issue with migration
Finished dropping Persistent History b/c of an issue with migration
Drop persistent history tables
2.14.3
Executing history migration statement: %@
Execution of persistent history migration
2.14.4
Completed persistent history metadata tables update
Total persistent history migration
2.14
Beginning CloudKit metadata tables update
Executing CloudKit metadata table update: %@
Finished CloudKit metadata tables update
CloudKit metadata updates
NSSQLiteInPlaceMigrationManager
migrationManagerClass
Starting inferred mapping validation
Executing inferred mapping validation: %@
validation error
validation failed
Finished inferred mapping validation
Inferred mapping validation
2.16b
2.17
pragma wal_checkpoint(truncate)
Successfully completed lightweight migration on connection
    Migration step %@ '%@' took %2.2f seconds
Failed to create migration statements
Failed to execute migration statements
constraint violation during attempted migration
Failed lightweight migration on connection
Rolling back formal transaction
 is NULL
 = %d
 NOT IN (SELECT 
 IS NOT NULL)
Validation error missing attribute values on mandatory destination attribute
attribute
Validation error missing attribute values on mandatory destination relationship
Validation error missing relationship values on mandatory destination destination
Unrecognized transform validation in property mapping
q24@?0@"_NSSQLTableMigrationDescription"8@"_NSSQLTableMigrationDescription"16
ANSCKRECORDMETADATA
ANSCKHISTORYANALYZERSTATE
tableMigration returned nil cloudkit update statements: %@
CloudKit metadata migration generated a source / destination id mapping for identical ids: %@
UPDATE ANSCKRECORDMETADATA SET ZENTITYID = %@ WHERE ZENTITYID = %@
UPDATE ANSCKHISTORYANALYZERSTATE SET ZENTITYID = %@ WHERE ZENTITYID = %@
RENAME TO Z_
TEMP
 = ( CASE
 WHEN 
 = %d THEN %d
 ELSE 
 END ) WHERE 
v24@?0@"NSArray"8@"NSArray"16
Can't find entity migration description for entity
 UNIQUE
Unsupported entity mapping type with empty entity name
mappingType
_AsCopy
Collapsing Entity Hierarchy for: %@
Unsupported entity mapping type
UPDATE %@ SET Z%@%lu = NULL
Executing clearing tombstone column statement: %@
UPDATE 
Z%@%lu
 = NULL
 == 
Executing shift tombstone column statement: %@
SELECT MAX(%@) FROM %@ WHERE %@ IN (%@)
Warning: Persistent History will be removing entries that tracked the following entities being removed: %@
DELETE FROM %@ WHERE %@ IN (%@)
Begin executing mass delete of removed entries from history statement: %@
Completed execution mass delete of removed entries from history statement.
Error: Persistent History (%lld) has to be truncated due to the following entities being removed: %@
DELETE FROM %@ WHERE Z_PK <= %lld
DELETE FROM %@ WHERE %@ <= %lld
Warning: Dropping Indexes for Persistent History
Executing drop index from history statement: %@
Warning: Dropping Transactions prior to %lld for Persistent History
Executing mass delete of transactions from history statement: %@
Warning: Dropping Changes prior to TransactionID %lld for Persistent History
Executing mass delete of changes from history statement: %@
Beginning adding new tombstone columns
Finished adding new tombstone columns
Beginning remapping of shifted tombstone columns
Finished remapping of shifted tombstone columns
Beginning clearing contents from removed tombstone columns
Finished clearing contents from removed tombstone columns
UPDATE OR FAIL %@ SET %@ = NSPersistentHistoryMigrateUpdates(3, %d, %d, %@) WHERE %@ == %d AND %@ == %ld;
_ckAsset
Failed to write CKAsset data for '%@' on '%@' backing record '%@'.
-[PFCloudKitSerializer newCKRecordsFromObject:fullyMaterializeRecords:includeRelationships:error:]
B24@?0@"NSAttributeDescription"8@"NSDictionary"16
Failed to generate records for object: %@ due to exception: %@
q24@?0@"NSAttributeDescription"8@"NSAttributeDescription"16
Failed to copy CKAsset data for '%@' on '%@' backing record '%@'.
-[PFCloudKitSerializer newCKRecordsFromObject:fullyMaterializeRecords:includeRelationships:error:]_block_invoke
Serializer is attempting to link relationships across zones: %@ - %@ / %@
Failed to look up cached mirrored relationship for mtmKey: %@
Serializer has finished creating record: %@
Modified Fields: %@
Supposedly serialization succeeded but there's no record: %@
Object serialization failed but did not set an error: %@
v32@?0@"NSEntityDescription"8Q16^B24
Record metadata doesn't match row: %@
Failed to update attributes on object: %@
With record: %@
Due to exception: %@
-[PFCloudKitSerializer applyUpdatedRecords:deletedRecordIDs:toStore:inManagedObjectContext:onlyUpdatingAttributes:andRelationships:madeChanges:error:]_block_invoke
Error attempting to read move receipt CKAsset file: %@
Skipping record because its entity '%@' is no longer in the managed object model's configured entities: %@
Deleted relationship failed to update because one or more of the objects in it is already gone: %@
-[PFCloudKitSerializer applyUpdatedRecords:deletedRecordIDs:toStore:inManagedObjectContext:onlyUpdatingAttributes:andRelationships:madeChanges:error:]_block_invoke_2
Failed to update deleted mirrored relationship: %@
v32@?0@"PFMirroredRelationship"8Q16^B24
Updating relationship: %@
Need to handle fetch errors here for the zone and abort serialization. %@
Unknown recordID returned as part of fetch for missing pending relationship objectIDs: %@ - %@ - %@
Pending relationship Fallback fetch failed (%@ / %@): %@
Failed to find matching objectIDs for %@ / %@ in pending relationship: %@
Skipping pending relationship because it's destination object has gone missing: %@
Skipping pending relationship because existingObjectWithID failed: %@
Failed to resolve pending relationship: %@
Marking deleted mirrored relationship fulfilled, one or more of the related objects is missing: %@
Importer is rejecting updated value for '%@' on '%@' because there are pending local edits that haven't been exported yet.
-[PFCloudKitSerializer updateAttributes:andRelationships:onManagedObject:fromRecord:withRecordMetadata:importContext:error:]
Delegate didn't return a file url for asset: %@
Error attempting to read CKAsset file: %@
%@ encountered CKEncryptedData blob on record (%@): %@
Unknown value class (%@) for attribute:
Failed to initialize NSUUID from CKRecord with value: %@
Failed to initialize NSURL from CKAsset with value: %@
Failed to read value from asset at URL: %@
Failed to initialize NSURL from CKRecord with value: %@
Attribute serialization failed but did not set an error: %@.%@
Adding mirrored relationship to link for record %@ related to %@ by %@
Failed to get a metadata zone: %@
-[PFCloudKitSerializer getRecordMetadataForObject:inManagedObjectContext:error:]
ckAssetFiles
%@.fxd
Unable to provide a default CKRecordZoneID for database scope: %@
Unsupported clause (group by not allowed in updates)
Failed to generate SQL for group by property: %@
Unknown predicate type for having predicate: %@
Unsupported clause (having not allowed in updates)
%@ with fetch request %@
NSUnderlyingProperty
NSReferenceID
NSEntityDescription
Proxy for prop named %@ on ed %@, real %@
%@, attributeType %lu , attributeValueClassName %@, derivationExpression %@, filteringPredicate %@, preservesValueInHistoryOnDeletion %@
NSDerivationExpression
NSFilteringPredicate
sum:
.@total
Can't set a default value for a derived attribute
offending property
Can't set renaming identifiers for derived attributes
expression failed to generate keypaths
Can't get keypaths for derived attribute validation
predicate failed to generate keypaths
Bad keypath for derived property (unresolved variable)
keypath
Bad keypath for derived property (misplaced operator)
Bad keypath for derived property (missing keypath component)
Bad keypath for derived property (attribute in non-terminal location not followed by operator)
Bad keypath for derived property (attribute has multiple keys following)
Bad keypath for derived property (unsupported property type in keypath)
fstat failed
read failed
mmap failed
open failed
Unable to initialize %s.  stat() failed on '%s' with errno %d
NSData [%s] with address %p backed by file at '%@'
Could not open file.
Could not map file.
Class cannot be used this way.
Data may not be nil
%@_%p
databaseValue
UUID
Failed to link ubiquity file: %@ error: %@
External data reference can't find underlying file.
File URL
External data reference; unknown problem.
External data reference can't load ubiquitous file.
External Data Reference: <self = %p ; path = %s ; length = %qu>
External Data Reference: <self = %p ; path = nil ; length = %qu>
range {%lu, %lu} exceeds data length %lu
Cannot mutate an immutable faulting NSOrderedSet
Index of object > number of objects
_NSFaultingMutableOrderedSet
nil order keys and %d objects in real set
bad input oidsAndLocations => should have an even number
shareURLs: %@
shareMetadatas: %@
Invalid arguments to initialize a share invitations result. If the operation failed both acceptedShares and acceptedShareMetadatas should be nil, otherwise there should be both arrays.
Validating options: %@
storeOptions: %@
-[PFCloudKitOptionsValidator validateOptions:andStoreOptions:error:]
NSCloudKitMirroringDelegateOptions.containerIdentifier requires a value with a length greather than 0
NSCloudKitMirroringDelegateOptions.containerIdentifier only accepts values of type '%@'. The following is not a valid value:
A container identifier is required for the CloudKit integration.
%@ is required for the CloudKit integration.
NSCloudKitMirroringDelegateOptions.containerOptions only accepts values of type '%@'. The following is not a valid value:
The value for 'NSCloudKitMirroringDelegateOptions.ckAssetThresholdBytes' must be at least %@ bytes. The following value is invalid: %@
The value for 'NSCloudKitMirroringDelegateOptions.ckAssetThresholdBytes' must be an instance of '%@'. The following value is invalid: %@
The value for 'NSCloudKitMirroringDelegateOptions.operationMemoryThresholdBytes', %@, must be larger than the value of 'NSCloudKitMirroringDelegateOptions.ckAssetThresholdBytes', %@.
The value for 'NSCloudKitMirroringDelegateOptions.operationMemoryThresholdBytes' must be at least %@ bytes. The following value is invalid: %@
The value for 'NSCloudKitMirroringDelegateOptions.operationMemoryThresholdBytes' must be an instance of '%@'. The following value is invalid: %@
Exception %@ ui %@ occurred in +[_CDSnapshot _invalidateStaticCaches:] preparing entity deallocation delegate
Unknown exception occurred in +[_CDSnapshot _invalidateStaticCaches:] preparing entity deallocation delegate
Exception %@ ui %@ occurred in +[_CDSnapshot _invalidateStaticCaches:] objc_disposeClassPair
Unknown exception occurred in +[_CDSnapshot _invalidateStaticCaches:] objc_disposeClassPair
_CDSnapshot
_cd_nullFlags2_
[%dC]
_cd_nullFlags_
Exception %@ ui %@ occurred in +[_CDSnapshot classForEntity:]
Unknown exception occurred in +[_CDSnapshot classForEntity:]
Exception %@ ui %@ occurred in +[_CDSnapshot _entityDeallocated:]
Unknown exception occurred in +[_CDSnapshot _entityDeallocated:]
<deferred relationship fault>
%@ (entity: %@; id: %@ ; data: %@)
snapshot is marked read only
warning snapshot_get_value_as_object called on NULL
warning snapshot_set_value_as_object called on NULL
Unable to generate SQL for fetch
Bad request
SELECT COUNT(*) from (%@)
Token: %@
Changed:
Deleted:
Purged:
_NSMetadataLastIdentifier
Unknown failure
Failed to load metadata
Keyspace exhausted
%@ - %u
insertObject:in%sAtIndex:
insert%s:atIndexes:
removeObjectFrom%sAtIndex:
remove%sAtIndexes:
replaceObjectIn%sAtIndex:withObject:
replace%sAtIndexes:with%s
instruments
com.apple.coredata.ubiquity.importer.didfinishimport
Z_RT_%@_%@
latitude
longitude
'%@' is not a valid description for a location index, it should include two comma separated components or be an array of two string identifying the attributes which make up the location index.
%@.%@ has an invalid description for a location index. It must be either an array or a comma separated string of two components identifying the latitude / longitude properties to use.
Unable to configure location index: %@.%@ type is %@ but should be %@.
RTree tables can only be created to back transient attributes. %@.%@ is not transient.
Unable to configure location index: couldn't find an attribute named '%@' on '%@'
Unable to configure location index (invalid %@ on %@.%@): 
Unable to configure location index (invalid %@ on %@.%@): %@.%@ is of type %@ and should be of type %@.
%@.%@ is a transient attribute.
%@.%@ is a relationship.
couldn't find an attribute named '%@' on '%@' to use as the %@.
CREATE VIRTUAL TABLE IF NOT EXISTS %@ USING RTREE (Z_PK INTEGER PRIMARY KEY, %@_MIN FLOAT, %@_MAX FLOAT, %@_MIN FLOAT, %@_MAX FLOAT)
CREATE TRIGGER IF NOT EXISTS %@_INSERT AFTER INSERT ON %@ FOR EACH ROW BEGIN INSERT OR REPLACE INTO %@ (Z_PK, %@_MIN, %@_MAX, %@_MIN, %@_MAX) VALUES (NEW.Z_PK, NEW.%@ ,NEW.%@, NEW.%@, NEW.%@) ; END
CREATE TRIGGER IF NOT EXISTS %@_UPDATE AFTER UPDATE ON %@ FOR EACH ROW BEGIN DELETE FROM %@ WHERE Z_PK = NEW.Z_PK ; INSERT INTO %@ (Z_PK, %@_MIN, %@_MAX, %@_MIN, %@_MAX) VALUES (NEW.Z_PK, NEW.%@ ,NEW.%@, NEW.%@, NEW.%@) ; END
INSERT OR REPLACE INTO %@ (Z_PK, %@_MIN, %@_MAX, %@_MIN, %@_MAX) SELECT Z_PK, %@, %@, %@, %@ from %@ where %@ NOT NULL and %@ NOT NULL
XPCConnectionManager:%p
Something has gone badly awry initializing the XPC connection pool: %@
manager sendMessageWithContext: unable to checkout connection.
manager sendMessageWithContext: failed with exception (how? it should never throw): %@
manager sendMessageWithContext failed with unknown exception
CDDCloudKitScheduledActivity
NSAddStoreAsynchronouslyOption
NSInvokeCompletionHandlerConcurrently
%@ (type: %@, url: %@)
NSPersistentStoreMirroringOptionsKey
 %@.%@ = %@
The trigger on %@.%@ is not valid: Only expressions of the form 'relationship.@count' are supported.
The trigger on %@.%@ is not valid: could not turn '%@' in to an instance of %@
The trigger on %@.%@ is not valid: an exception was thrown while trying to parse the expression: %@:%@
The trigger on %@.%@ is not valid: empty string is not a valid expression.
The trigger on %@.%@ is not valid: must be an instance of %@.
The trigger on %@.%@ is not valid: nil is not a valid expression.
The trigger on %@.%@ is not valid: '%@' does not evaluate to a keypath expression.
The trigger on %@.%@ is not valid: The function '%@' is not supported, only 'count' is supported at this time.
The trigger on %@.%@ is not valid: '%@' does not evaluate to a function expression.
The trigger on %@.%@ is not valid: property '%@' is not an integer.
The trigger on %@.%@ is not valid: Must be set on an attribute of type %@.
The trigger on %@.%@ is not valid: property '%@' not found.
The trigger on %@.%@ is not valid: relationship '%@' is not a to-many.
The trigger on %@.%@ is not valid: keypath '%@' is not a relationship.
The trigger on %@.%@ is not valid: '%@' is not a property of '%@'.
 AFTER DELETE ON %@
 UPDATE %@ SET %@ = (SELECT COUNT(%@) FROM %@ WHERE (%@ = NEW.%@)) WHERE %@ = NEW.%@;
v32@?0@"NSManagedObjectID"8@"NSCKRecordMetadata"16^B24
TRANSACTIONID > %@ AND ENTITY = %@ AND ENTITYPK IN %@
Didn't get a minimum transaction number for change: %@
Expected to get an instance of NSCKRecordMetadata for this recordID: %@ but got: %@
Already have a mirrored relationship registered for this key: %@
Attempting to cache zone metadata but already have one: %@
Joins not supported in index
Can't find property for keypath
Indexes cannot contain to many relationships
Indexes can only contain attribute/relationship properties
Unsupported expression type in index
Unsupported property in index
SQL generation failure for property
SQL generation failure for index
indexDescription
SQL generation failure for index with predicate (1)
SQL generation failure for index with predicate (2)
v32@?0@"NSSQLAttribute"8@"NSSet"16^B24
 Found no possible URLs for directory type %lu
 Failed to create directory %@: %@ (%d)
 File %@ already exists and is not a directory!
+[%@ %@] Could not conjure up a useful location for writing persistent stores.
%@.sqlite
Unhandled exception finding default Directory URL '%@'
 View context accessed for persistent container %@ with no stores loaded
Failed to call designated initializer on '%@' 
 Failed to load model at path: %@
 Failed to load model named %@
-[NSPersistentContainer initWithName:managedObjectModel:] called with the empty string as its container name
-[NSPersistentContainer initWithName:managedObjectModel:] called with invalid container name '%@'
-[NSPersistentContainer loadPersistentStoresWithCompletionHandler:] called on an instance with no store descriptions
 Background context created for persistent container %@ with no stores loaded
cachedModelForPersistentStoreWithURL failed with error %@ and userInfo of %@
Store failed to load.  %@ with error = %@ with userInfo %@
Import failed because fetching the zone change token hit an unhandled exception.
v24@?0@"CKRecordID"8@"NSString"16
v32@?0@"CKRecordZoneID"8@"CKServerChangeToken"16@"NSData"24
v44@?0@"CKRecordZoneID"8@"CKServerChangeToken"16@"NSData"24B32@"NSError"36
Unable to fetch zone metadata for zone: %@
-[PFCloudKitImporterZoneChangedWorkItem updateMetadataForAccumulatedChangesInContext:inStore:error:]
-[PFCloudKitImporterZoneChangedWorkItem commitMetadataChangesWithContext:forStore:error:]
ckRecordSystemFields
NSCloudKitMirroringDelegateIgnoredPropertyKey
NSCloudKitMirroringDelegateWillResetSyncNotificationName
NSCloudKitMirroringDelegateDidResetSyncNotificationName
NSCloudKitMirroringDelegateResetSyncReasonKey
NSCloudKitMirroringDelegateReadOnlyOptionKey
com.apple.coredata.cloudkit.zone
com.apple.coredata.cloudkit.zone.subscription
com.apple.coredata.cloudkit.private.subscription
com.apple.coredata.cloudkit.public.subscription
com.apple.coredata.cloudkit.shared.subscription
com.apple.coredata.cloudkit.share.
PFCloudKitServerChangeTokenKey
NSCloudKitMirroringDelegateServerChangeTokensKey
CD_M2M_
CD_FAKE_
PFCloudKitWillExportNotificationName
PFCloudKitDidExportNotificationName
PFCloudKitDidImportNotificationName
PFCloudKitDidInitializeNotificationName
PFCloudKitFailedToInitializeNotificationName
NSCloudKitMirroringDelegate.schemaGenerator
CDMR
PFCloudKitNewUserIdentityKey
PFCloudKitOldUserIdentityKey
NSCloudKitMirroringDelegateLastHistoryTokenKey
NSCloudKitMirroringDelegateBypassHistoryOnExportKey
NSCloudKitMirroringDelegate.import
NSCloudKitMirroringDelegate.export
NSCloudKitMirroringDelegate.reset
NSCloudKitMirroringDelegate.migration
NSCloudKitMirroringDelegate.setup
NSCloudKitMirroringDelegate.event
com.apple.coredata.cloudkit.activity.export
com.apple.coredata.cloudkit.activity.import
com.apple.coredata.cloudkit.activity.setup
com.apple.coredatad.cloudkit
NSCloudKitMirroringDelegateScanForRowsMissingFromHistoryKey
moveReceipt
kCFErrorDomainCFNetwork
private
com.apple.coredata.cloudkit.queue
AccountChangeObserver
v16@?0@"NSString"8
CloudKit integration is only supported for %@ stores.
Instances of NSCloudKitMirroringDelegate are not reusable and should have a lifecycle tied to a given instance of NSPersistentStore.
com.apple.coredata.cloudkit.store.added
CoreData: CloudKit Add Persistent Store
v16@?0@"NSCloudKitMirroringDelegateWorkBlockContext"8
%@: Observing store: %@
-[NSCloudKitMirroringDelegate observeChangesForStore:inPersistentStoreCoordinator:]
ExportActivity
Got called back for an export activity but the mirroring delegate is gone.
-[NSCloudKitMirroringDelegate observeChangesForStore:inPersistentStoreCoordinator:]_block_invoke
CloudKit setup failed because there is another instance of this persistent store actively syncing with CloudKit in this process.
ImportActivity
Got called back for activity: %@, but the mirroring delegate is gone.
%@: Successfully enqueued setup request.
-[NSCloudKitMirroringDelegate _setUpCloudKitIntegration]
%@: Failed to enqueue setup request, this likely means one is already scheduled and this has collided: %@
resetAfterError illegally passed nil instead of an error on a failure condition
%@ - resetting internal state after error: %@
-[NSCloudKitMirroringDelegate resetAfterError:andKeepContainer:]
v32@?0@"NSObject"8@"NSError"16^B24
%@ - Got notification for subscription: %@
-[NSCloudKitMirroringDelegate _beginWatchingForChanges:]_block_invoke
%@ - Reviving the mirroring delegate after notification for subscription: %@
%@ - Not reviving the mirroring delegate (%@:%ld) after notification for subscription: %@
Got called back for subscription: %@, but the mirroring delegate is gone. Notification:
v24@?0@"CKNotification"8@"CKSubscription"16
%@: Scheduling post-setup export
-[NSCloudKitMirroringDelegate _beginWatchingForChanges:]
com.apple.coredata.cloudkit.setup.operations
CoreData: CloudKit Sandbox Operations
SandboxExport
SandboxImport
Tried to schedule sandbox operations but the mirroring delegate was gone.
com.apple.coredata.cloudkit.teardown
CoreData: CloudKit Teardown
%@: Told to tear down because the store has been removed.
-[NSCloudKitMirroringDelegate tearDown]_block_invoke
%@: Cancelling pending request: %@
%@: Asked to execute request: %@
-[NSCloudKitMirroringDelegate executeMirroringRequest:error:]
Instances of '%@' are ambiguous and not understood by '%@', use one of the subclasses instead.
com.apple.coredata.cloudkit.schedule.enqueue
CoreData: CloudKit Scheduling
%@: enqueuing request: %@
-[NSCloudKitMirroringDelegate _enqueueRequest:]_block_invoke
Enqueued request: %@
-[NSCloudKitMirroringDelegate _enqueueRequest:]_block_invoke_2
Failed to enqueue request: %@
%@: Asked to execute a request that isn't understood yet: %@
Reset request was scheduled without a root cause error: %@
com.apple.coredata.cloudkit.setup.reset
CoreData: CloudKit Setup Reset
Setup request executed with a completion block that will never be called: %@
com.apple.coredata.cloudkit.setup
CoreData: CloudKit Setup
Mirroring delegate asked to set up when already successfully initialized.
%@: Successfully set up CloudKit integration for store: %@
-[NSCloudKitMirroringDelegate _performSetupRequest:]_block_invoke
Failed to initialize because there is no user signed in to this device.
%@: Failed to set up CloudKit integration for store: %@
_initializeCloudKitForObservedStore failed but did not return an error.
Failed to finish setup event: %@
requestIdentifier
com.apple.coredata.cloudkit.import
CoreData: CloudKit Import
Failed to finish import event: %@
-[NSCloudKitMirroringDelegate _performImportWithRequest:]_block_invoke_2
madeChanges
%@: Import failed with error:
-[NSCloudKitMirroringDelegate _importFinishedWithResult:importer:]
com.apple.coredata.cloudkit.export
CoreData: CloudKit Export
%@: Illegal attempt to export without an account: %@ - %@
Failed to finish export event: %@
-[NSCloudKitMirroringDelegate _performExportWithRequest:]_block_invoke
Finished export: %@
-[NSCloudKitMirroringDelegate _exportFinishedWithResult:exporter:]
%@: Export failed with error:
com.apple.coredata.cloudkit.zone.reset
CoreData: CloudKit Zone Reset
Zone reset request failed: %@
Failed to clear metadata from store: %@
-[NSCloudKitMirroringDelegate _performResetZoneRequest:]_block_invoke_2
%@: Skipping delete of zone because it's not owned by the current user: %@
Request '%@' was aborted because the mirroring delegate failed to reset the local store's metadata: %@
%@: Asked to schedule a zone reset operation without a zoneID: %@
-[NSCloudKitMirroringDelegate _performResetZoneRequest:]_block_invoke
The mirroring delegate could not complete request '%@' because it does not have a zone.
com.apple.coredata.cloudkit.fetch.records
CoreData: CloudKit Fetch Records
-[NSCloudKitMirroringDelegate _performFetchRecordsRequest:]_block_invoke_2
com.apple.coredata.cloudkit.metadata.reset
CoreData: CloudKit Metadata Reset
Purged cloudkit metadata from store: %@
Result: %@
-[NSCloudKitMirroringDelegate _performMetadataResetRequest:]_block_invoke
Failed to purge cloudkit metadata from store: %@
com.apple.coredata.cloudkit.serialization
CoreData: CloudKit Record Serialization
Multiple records returned for object even though we didn't ask for relationships: %@
Unsupported resultType: %lu, %@
No records returned from the serializer for object: %@
%@ - Unable to serialize object '%@' because it appears to be missing from the store.
-[NSCloudKitMirroringDelegate _performSerializationRequest:]_block_invoke
Failed to save metadata changes from serialization of records: %@
com.apple.coredata.cloudkit.progress.export
CoreData: CloudKit Export Progress
com.apple.coredata.cloudkit.share.accept
CoreData: CloudKit Share Accept Invitation
No metadata or error for share URL: %@
v32@?0@"NSURL"8@"CKShareMetadata"16@"NSError"24
Some shareURLs failed to return metadata...
%@: Accepting shares defined by request: %@
-[NSCloudKitMirroringDelegate _acceptShareMetadatasInRequest:workBlockContext:]
No error or share for accepted share metadata: %@
v32@?0@"CKShareMetadata"8@"CKShare"16@"NSError"24
Some shares partially failed...
%@ - Never successfully initialized and cannot execute request '%@' due to error: %@
-[NSCloudKitMirroringDelegate _requestAbortedNotInitialized:]
Request '%@' was aborted because the mirroring delegate never successfully initialized due to error: %@
handleErrorInResult illegally passed nil instead of a result
handleErrorInResult passed a sucessful result (%@) with an illegal error object (%@)
handleErrorInResult illegally passed a failed result (%@) with nil instead of an error on a failure condition
recoverFromError illegally passed nil instead of an error on a failure condition
%@ - Attempting recovery from error: %@
-[NSCloudKitMirroringDelegate recoverFromError:]
The store was removed before the mirroring delegate could recover from an error:
-[NSCloudKitMirroringDelegate recoverFromError:]_block_invoke
Invalid recursion detected, this method should never have been passed a partial error: %@
The mirroring delegate can no longer export because it cannot stay under the CloudKit operation limits.
NSCloudKitMirroringDelegate recieved NSURLErrorDomain:NSURLErrorBadURL and probably shouldn't have.
NSCloudKitMirroringDelegate recieved NSURLErrorDomain:NSURLErrorUnsupportedURL and probably shouldn't have.
NSCloudKitMirroringDelegate recieved NSURLErrorDomain:NSURLErrorBadServerResponse and probably shouldn't have.
NSCloudKitMirroringDelegate recieved NSURLErrorDomain:NSURLErrorCannotDecodeRawData and probably shouldn't have.
NSCloudKitMirroringDelegate recieved NSURLErrorDomain:NSURLErrorCannotDecodeContentData and probably shouldn't have.
NSCloudKitMirroringDelegate recieved NSURLErrorDomain:NSURLErrorCannotParseResponse and probably shouldn't have.
NSCloudKitMirroringDelegate recieved NSURLErrorDomain:NSURLErrorAppTransportSecurityRequiresSecureConnection and probably shouldn't have.
NSCloudKitMirroringDelegate recieved NSURLErrorDomain:NSURLErrorServerCertificateHasBadDate and probably shouldn't have.
NSCloudKitMirroringDelegate recieved NSURLErrorDomain:NSURLErrorServerCertificateUntrusted and probably shouldn't have.
NSCloudKitMirroringDelegate recieved NSURLErrorDomain:NSURLErrorServerCertificateHasUnknownRoot and probably shouldn't have.
NSCloudKitMirroringDelegate recieved NSURLErrorDomain:NSURLErrorServerCertificateNotYetValid and probably shouldn't have.
NSCloudKitMirroringDelegate recieved NSURLErrorDomain:NSURLErrorClientCertificateRejected and probably shouldn't have.
NSCloudKitMirroringDelegate recieved NSURLErrorDomain:NSURLErrorClientCertificateRequired and probably shouldn't have.
NSCloudKitMirroringDelegate recieved NSURLErrorDomain:NSURLErrorRequestBodyStreamExhausted and probably shouldn't have.
NSCloudKitMirroringDelegate was handed a scary NRULErrorDomain error (of some code that's not already in the switch) that it probably shouldn't have been: %@
%@ - Failed to recover from error: %@:%ld
Recovery encountered the following error: %@:%ld
-[NSCloudKitMirroringDelegate _recoverFromError:withZoneIDs:forStore:inMonitor:]
%@ - Recovered from error: %@:%ld
Got server rejected request as part of a partial error for a CKRecord: %@ - %@
%@: Found unknown error as part of a partial failure: %@
-[NSCloudKitMirroringDelegate _recoverFromPartialError:forStore:inMonitor:]_block_invoke
%@: Found unknown itemID (%@) as part of a partial failure: %@
Unknown error passed to partial error handler: %@
-[NSCloudKitMirroringDelegate _recoverFromPartialError:forStore:inMonitor:]
%@: Sending '%@'
 with reason: '%@'
-[NSCloudKitMirroringDelegate logResetSyncNotification:]
Failed to get a reset sync reason for error even though we're posting a notification for it: %@
%@: Observed context save: %@ - %@
-[NSCloudKitMirroringDelegate managedObjectContextSaved:]
com.apple.coredata.cloudkit.schedule
%@: Observed remote store notification: %@ - %@ - %@ - %@
-[NSCloudKitMirroringDelegate remoteStoreDidChange:]
-[NSCloudKitMirroringDelegate remoteStoreDidChange:]_block_invoke_3
%@ - Ignoring remote change notification because the exporter has already caught up to this transaction: %@ / %@ - %@
-[NSCloudKitMirroringDelegate remoteStoreDidChange:]_block_invoke
%@ - Ignoring remote change notification because the current history token couldn't be read: %@ - %@
%@ - Ignoring remote change notification because it didn't change any entities in the monitored store: %@
%@ - Ignoring remote change notification because it didn't change any entities tracked by persistent history: %@
%@ - Ignoring remote change notification because it's for a different store: %@ / %@
%@: Ignoring remote change notification because the store has been removed from the coordinator: %@
%@: Failed to submit activity for export due to exception: %@
-[NSCloudKitMirroringDelegate scheduleExportAndStartAfterDate:]
%@: Deferring export because the mirroring delegate is not initialized:
com.apple.coredata.cloudkit.setup.push
CoreData: CloudKit Setup From Push
-[NSCloudKitMirroringDelegate setupMirroringDelegateFromPushNotification]_block_invoke
%@: Checking to see if an automated import should be scheduled.
-[NSCloudKitMirroringDelegate checkAndScheduleImportIfNecessary:andStartAfterDate:]_block_invoke_2
Failed to fetch database metadata during automatic import check: %@
%@: Failed to save metadata changes during import check: %@
-[NSCloudKitMirroringDelegate checkAndScheduleImportIfNecessary:andStartAfterDate:]_block_invoke
%@: Scheduling automated import with activity: %@
%@: Deferring scheduling an import because not initialized yet.
Attempt to schedule an import failed because of an unhandled exception.
%@: Cancelling import check because the store is dead.
Unsupported database scope in date threshold calculation: %ld
%@: Checking for pending requests.
-[NSCloudKitMirroringDelegate checkAndExecuteNextRequest]
%@: Deferring additional work. There is still an active request: %@
-[NSCloudKitMirroringDelegate checkAndExecuteNextRequest]_block_invoke
%@: Executing: %@
%@: No more requests to execute.
Unable to schedule work because the mirroring delegate was deallocated.
Finished request: %@ with result: %@
-[NSCloudKitMirroringDelegate _finishedRequest:withResult:]
Finished request '%@' with result: %@
-[NSCloudKitMirroringDelegate finishedAutomatedRequestWithResult:]
Can't handle automated requests of type '%@' yet.
%@ - Beginning automated import - %@ - in response to activity:
-[NSCloudKitMirroringDelegate _scheduleAutomatedImportWithLabel:activity:completionHandler:]
%@ - Finished automatic import - %@ - with result: %@
-[NSCloudKitMirroringDelegate _scheduleAutomatedImportWithLabel:activity:completionHandler:]_block_invoke
Failed to execute mirroring request for automated import: %@
%@ - Beginning automated export - %@:
-[NSCloudKitMirroringDelegate _scheduleAutomatedExportWithLabel:activity:completionHandler:]
%@ - Finished automatic export - %@ - with result: %@
-[NSCloudKitMirroringDelegate _scheduleAutomatedExportWithLabel:activity:completionHandler:]_block_invoke
Failed to execute mirroring request for automated export: %@
Expected a non-nil error to schedule a setup activity from.
%@: Submitting setup activity as recovery for %@
-[NSCloudKitMirroringDelegate _scheduleSetupActivityFromError:]
%@: Marking zones %@ needing recovery from Manatee identity loss
-[NSCloudKitMirroringDelegate _markZonesNeedingRecoveryFromManateeIdentityLoss:databaseScope:inStore:error:]_block_invoke
Failed to fetch zone metadata during marking zones needing recovery from Manatee identity loss: %@
%@: Failed to save metadata while marking zones needing recovery from Manatee identity loss: %@
Encountered an unhandled exception while marking zones needing recovery from Manatee identity loss.
%@: Cancelling marking zones needing recovery from Manatee identity loss because the store is dead.
com.apple.coredata.cloudkit.schema.initialize
CoreData: CloudKit Initialize Schema
Executing schema initialization request: %@
-[NSCloudKitMirroringDelegate _performSchemaInitializationRequest:]_block_invoke
Request '%@' was skipped because it was configured with databaseScope == CKDatabaseShared.
%@ generated the following records for the model associated with the store: %@
-[NSCloudKitMirroringDelegate _createSchemaForStore:withMonitor:options:error:]
AccountLogin
AccountChange
AccountLogout
UserPurgedZone
ZoneDeleted
HistoryExpired
ServerChangeTokenExpired
Can't generate string for unknown reset sync reason: %lu
com.apple.
AppDeactivationExport
Ignoring application deactivation notification because the store is dead.
-[NSCloudKitMirroringDelegate applicationStateMonitorEnteredBackground:]_block_invoke_2
AppActivationExport
AppActivationImport
Ignoring application activation notification because the store is dead.
-[NSCloudKitMirroringDelegate applicationStateMonitorEnteredForeground:]_block_invoke_2
%@: Deferring active request due to background timeout: %@
-[NSCloudKitMirroringDelegate applicationStateMonitorExpiredBackgroundActivityTimeout:]
com.apple.coredata.ubiquity.eat
Unhandled exception in rowCacheForGeneration %@
Failed to save import operation: %@
-[PFCloudKitImportRecordsWorkItem newMirroringResultByApplyingAccumulatedChanges]_block_invoke_2
Failed to save changes from import: %@
Failed to fetch import operation with identifier '%@': %@
Import failed because committing the metadata changes hit an unhandled exception.
Finished importing changes for request: %@
-[PFCloudKitImportRecordsWorkItem newMirroringResultByApplyingAccumulatedChanges]_block_invoke
%@ - Exception thrown during import: %@
%@: Unable to set query generation on managedObjectContext: %@
-[PFCloudKitImportRecordsWorkItem applyAccumulatedChangesToStore:inManagedObjectContext:withStoreMonitor:madeChanges:error:]_block_invoke
CloudKit Import: Failed to find entity for unknown item recordID: %@ - %@
%@ - Importing updated records:
Deleted RecordIDs:
Failed to save applied changes from import: %@
The request '%@' was cancelled because it conflicted with another active import operation.
Importing updated share: %@
Failed to encode an updated share: %@
Import failed because applying the accumulated changes hit an unhandled exception.
Finished importing applying changes for request: %@
-[PFCloudKitImportRecordsWorkItem applyAccumulatedChangesToStore:inManagedObjectContext:withStoreMonitor:madeChanges:error:]
-[PFCloudKitImportRecordsWorkItem commitMetadataChangesWithContext:forStore:error:]
Failed to purge mirrored relationships during import: %@
Failed to read attributes of asset file at URL: %@
-[PFCloudKitImportRecordsWorkItem addUpdatedRecord:]
Failed to copy asset to URL: %@
Importer didn't obey operation memory threshold, finished operation with more than double the threshold worth of work to do (%@ bytes): %@
%@ - Fetch finished with error:
-[PFCloudKitImportRecordsWorkItem fetchOperationFinishedWithError:completion:]_block_invoke
Unable to delete processed asset file: %@
-[PFCloudKitImportRecordsWorkItem removeDownloadedAssetFiles]
%@: Applying accumulated changes at change token: %@
-[PFCloudKitImportRecordsWorkItem checkAndApplyChangesIfNeeded:]_block_invoke_2
Incremental import left uncommitted changes in the managed object context: %@
%@: Successfully applied incremental changes during request: %@
-[PFCloudKitImportRecordsWorkItem checkAndApplyChangesIfNeeded:]_block_invoke
Should tear down here and stop subsequent attempts to import from happening.
%@: Failed to incrementally apply changes during request: %@
%@ - Exception thrown during incremental import: %@
CloudKit Import: Failed to handle item error for unknown itemID type: %@ - %@
v32@?0@8@"NSError"16^B24
 resultType: %@
objectIDsToSerialize:
Records
RecordIDs
Unknown result type: %lu
cdutil-stub-container
Failed to load persistent store at url: %@
Timed out waiting for the mirroring delegate to finish setting up. This is a bug. Please re-run and attach a sample of cdutil if you can.
CloudKit Metadata:
q24@?0@"NSCKMetadataEntry"8@"NSCKMetadataEntry"16
%@: %@
Failed to fetch metadata entries:
Database: %@ (%ld): hasSubscription: %@, currentChangeToken: %@
Zone: %@:%@: hasRecordZone: %@, hasSubscription: %@, currentChangeToken: %@
Failed to fetch database metadata entries:
Unable to create a copy of the store at url: %@
This store has never been used with CloudKit (use cdutil dumpmetadata [storePath] to show store metadata): %@
Unable to load model from store: %@
cdutil
Failed to create temporary directory: %@
Generated records:
Failed to generate records: %@
Failed to load a managed object model. Arguments:
storeURL: %@
modelURL: %@
Encountered error: %@
Failed to move store to a temporary location: %@
Failed to create a temporary directory for working on the store.
ANSCKMIRROREDRELATIONSHIP
Attepmting to check for CloudKit tables failed: %@
Failed to tear down read-only store: %@
Failed to open store: %@
error: unexpected type of change : %lu
Invalid entity for NSPersistentHistoryChangeRequest: %@
TRANSACTION
BUNDLEID
PROCESSID
CONTEXTNAME
AUTHOR
QUERYGEN
CHANGES
transactionNumber
bundleID
processID
contextName
author
BUNDLEIDTS
PROCESSIDTS
CONTEXTNAMETS
AUTHORTS
CHANGE
ENTITY
ENTITYPK
CHANGETYPE
COLUMNS
TOMBSTONE
TRANSACTIONID
changeID
changedObjectID
changedEntity
TRANSACTIONSTRING
NAME
NSPersistentHistoryTrackingKey only supports a max of 100 tombstones per entity in the Model
v24@?0@"NSSQLEntity"8@"NSMutableOrderedSet"16
TransactionTimestampIndex
TransactionAuthorIndex
PersistentHistory
PersistentFetchHistory
Invalid variable substitution - multiple values not supported here %@
unable to resolve variable expression: %@
Invalid rowCache row is nil
Optimistic locking failure for %@.  Original row was missing while recording to-many changes.  New row = %@
Optimistic locking failure for %@.  Original row was missing while recording to-many changes.
UIBackgroundModes
audio
bluetooth-central
bluetooth-peripheral
external-accessory
location
processing
voip
AppActivateObserver
AppDeactivateObserver
-[PFCloudKitExportContext processAnalyzedHistoryInStore:inManagedObjectContext:error:]_block_invoke
Unhandled persistent history change type: %@
Finished processing analyzed history with %lu metadata objects to create, %lu deleted rows without metadata.
-[PFCloudKitExportContext processAnalyzedHistoryInStore:inManagedObjectContext:error:]_block_invoke_3
%@: %@ - Failed to assign an object to a record zone. This usually means the object exists in a shared database and must be assigned to a zone using -[%@ %@]: %@
-[PFCloudKitExportContext processAnalyzedHistoryInStore:inManagedObjectContext:error:]_block_invoke_5
Failed to assign an object to a record zone. This usually means the object exists in a shared database and must be assigned to a zone using -[%@ %@]: %@
Object graph corruption detected. Objects related to '%@' are assigned to multiple zones: %@
NSCKRecordMetadata
Unexpected number of items in the pk / ent array: %@
needsUpload = YES
isUploaded = NO
needsShareUpdate = YES OR needsShareDelete = YES
Fetched dirty zone that didn't need a share update or delete: %@
(needsCloudDelete == 1) AND !(SELF IN %@)
needsCloudDelete = YES
%@: Can't find metadata for recordID '%@' even though it was supposedly saved in these records: %@
-[PFCloudKitExportContext modifyRecordsOperationFinishedForStore:withSavedRecords:deletedRecordIDs:operationError:managedObjectContext:error:]_block_invoke
%@: Can't find record for recordID '%@' even though it was supposedly saved in these records: %@
Failed to fetch record metadata for saved records: %@
B32@?0@"NSCKMirroredRelationship"8@"CKRecord"16^@24
zoneName = %@ AND ownerName = %@ AND recordName in %@
SELF in %@
q24@?0@"CKRecordID"8@"CKRecordID"16
Stores don't match because they do not have the same mirroring configuration:
%@ - %@
%@ - %@
Stores don't match because they do not have the same mirroring options:
%@ - %@
%@ - %@
Record name does not match recordID, even though our metadata linked this row with '%@': %@
Record name appears to point to two different objects: %@ / %@
Mirrored relationships don't match for stores:
Store has these extra keys: %@
Other Store has these extra keys: %@
I don't know how to handle skewed shares yet.
%@-scope
CloudKit database scope doesn't match.
Store identity record names do not match.
%@-identity
Stores do not contain the same record names. (%@:%lu / %@:%lu)
Stores do not contain the same identifiers. (%@:%lu / %@:%lu)
%@-RecordIDs
Objects appear to be from different entities:
Store: %@
Other Store: %@
Failed to retrieve object with recordID '%@' from store %@
Ignored attribute (%@:%@) appears to have been synced:
Value: %@
Other value: %@
Attribute values do not match.
storeObjectID
otherStoreObjectID
store-%@
otherStore-%@
Unknown value type '%@' for attribute: %@
Not sure what to do with undefined attributes
Unknown attribute type: %lu
Ignored relationship (%@:%@) appears to have been synced:
Value: %@
Other value: %@
Mirrored relationships don't match actual record for '%@' in %@
Object: %@
Mirrored Relationships: %@
Mirrored relationships don't match for object with record name (%@): 
Store: %@
Other Store: %@
Relationship doesn't match for object with record name (%@): %@
Store: %@
Other Store: %@
Found mirrored relationship for ignored relationship: %@
Found mirrored relationship not marked uploaded, but this method is supposed to make sure store contents are equal, so shouldn't it be?
Found mirrored relationship that's marked deleted but the objects are linked.
Found pending mirrored relationship for linked objects (%@).
v32@?0@"NSManagedObject"8Q16^B24
Stores disagree about whether or not CloudKit metadata tables are present: %@
Move receipt dates don't match.
recordID
movedRecordName
%@-receipts
Move receipts don't match.
Shares don't match for record zone.
%@-share
recordZone.ckRecordZoneName IN %@
Stores don't have the same number of mirrored relationships: %lu / %lu
Trimmed: %@
operationUUID == %@
Duplicate operations for identifier: %@
Must supply a non-zero number of objectIDs to request during initialization
mismatched objectIDs in batch delete initializer
objectIDs
Must supply a fetch request during initialization
Fetch must have an entity
<NSBatchDeleteRequest : resultType : %ld, fetch :%@ >
Mismatched result types during aggregation of batch delete results
Invalid collation type (rtree indexes can only be created on attributes).
Invalid collation type (rtree indexes can only be created for floats or integers < 32 bit).
Can't create an index element without a property
Can't create an index element with an unnamed property
Can't create an index element with non-attribute property
NSIndexedProperty
NSFetchIndexElementType
NSFetchIndexDescription
NSAscending
<NSFetchIndexElementDescription : (%@ (%@), %d, %@)>
modeled property
Broken logic around index elements
offender
Array with content where there should be a set.
Failed to acquire permanent objectIDs during schema generation: %@
An example core data string
Some example data
http://www.apple.com
Unsupported attribute type
com.apple.coredata.cloudkit.predicate
com.apple.coredata.cloudkit.query.cursor
modificationDate > %@
modificationDate
recordType = %@ AND recordZone = %@
Attempt to initialize PFCloudKitHistoryAnalyzerContext with options that aren't PFCloudKitHistoryAnalyzerOptions: %@
%@: Skipping change because its entity is not in the configured set of entities for this store: %@
-[PFCloudKitHistoryAnalyzerContext processChange:error:]
entityId = %@ AND entityPK in %@
History parsing corruption detected. An existing analyzer state was fetched from the database for '%@' but it's corresponding in-memory copy is no longer present in the in-memory cache.
originalChangeTypeNum = %@ AND finalChangeTypeNum = %@
(ckRecordID IN %@ OR recordName IN %@ OR relatedRecordName IN %@) AND recordZone.ckRecordZoneName = %@ AND recordZone.ckOwnerName = %@
isPending == 1
ckRecordID = %@
Found more than one mirrored relationship matching a many to many: %@
((recordZone.ckRecordZoneName = %@) AND (recordZone.ckOwnerName = %@) AND (ckRecordID IN %@))
(needsDelete = 1 AND isUploaded = 1)
((recordZone.ckRecordZoneName = %@) AND (recordZone.ckOwnerName = %@) AND ((recordName IN %@) OR (relatedRecordName IN %@))) OR needsDelete = 1
Attempted to update a mirrored relationship with a non-mirrored-relationship record: %@
Returning unbatched results for unsupported NSExpression in propertiesToFetch: %@
Returning unbatched results for NSFetchRequest with NSDictionaryResultType and fetchBatchSize > 0 however propertiesToFetch includes sentinel value 'isDeleted' property: %@
Returning unbatched results for NSFetchRequest with NSDictionaryResultType and fetchBatchSize > 0 however propertiesToFetch does not include required 'self' or 'objectID' property: %@
missing variable binding for %@
bad substitution variable for %@, must be a constant value
bad substitution variable for %@, must not be a collection
bad substitution variable for %@, must be a collection
bad substitution variable for %@, must be a collection of objects or objectIDs
oid = %@ [oid class] = %s expecting entity %@
PFCloudKitMetadataModelMigratorMigrationBeganCommitKey
v32@?0@"NSString"8@"NSSQLEntity"16^B24
Migration discovered mutated entity IDs, precomputing z_ent changes.
-[PFCloudKitMetadataModelMigrator prepareContextWithConnection:error:]
Unexpected exception thrown during metadata migration: %@
ZENTITYNAME
ZISDELETED
ALTER TABLE %@ ADD COLUMN %@ INTEGER
UPDATE %@ SET %@ = '%@'
Skipping migration for '%@' because it already has a column named '%@'
-[PFCloudKitMetadataModelMigrator calculateMigrationStepsWithConnection:error:]
ckRecordZoneName = %@ AND ckOwnerName = %@
Metadata migration failed due to an unhandled exception while fetching zone metadata.
ZHASCHANGES
CREATE TEMPORARY TABLE %@_tmp(
INSERT INTO %@_tmp (
INSERT INTO %@ (
 FROM %@_tmp
DROP TABLE %@
DROP TABLE %@_tmp
UPDATE %@ SET %@=0
UPDATE %@ SET Z_OPT = 1 WHERE Z_OPT IS NULL OR Z_OPT <= 0
Exception caught during execution of migration statement for cloudkit metadata tables %@ with userInfo %@
An unhandled exception was thrown during CloudKit metadata migration: %@
Exception caught during execution of migration statement for cloudkit metadata tables %@
-[PFCloudKitMetadataModelMigrator commitMigrationMetadataAndCleanup:]_block_invoke
entityId = 0
Found %lu corrupt analyzed history rows, purging.
_NSStoreAncillaryModelVersionHashesMetadataKey
DELETE FROM %@ WHERE Z_ENT = %@
UPDATE %@ SET Z_ENT = %@
Exception caught during cleanup of cloudkit metadata primary keys %@ with userInfo %@
Exception caught during cleanup of cloudkit metadata primary keys %@
Found corrupt zone on record metadata: %@
-[PFCloudKitMetadataModelMigrator checkForRecordMetadataZoneCorruptionInStore:error:]_block_invoke_2
Failed to refresh zone for assignment during corrupt zone cleanup: %@
ckRecordSystemFields == NULL
ckRecordSystemFields != NULL
%K != nil
ZNSCKEXPORTEDOBJECT
ZNSCKEXPORTMETADATA
ZNSCKEXPORTOPERATION
ZNSCKIMPORTOPERATION
ZNSCKIMPORTPENDINGRELATIONSHIP
Unable to find attribute to migrate to '%@' from '%@' on entity: %@
ckRecordID.@count
Found mirrored relationships without a recordID.
Found record metadata that points to missing entity: %@
-[PFCloudKitMetadataModelMigrator checkForCorruptedRecordMetadataInStore:inManagedObjectContext:error:]_block_invoke
Found record metadata that points to an entity that is no longer part of the store's configuration: %@
Successfully purged record metadata during migration due to corrupted metadatas.
-[PFCloudKitMetadataModelMigrator checkForCorruptedRecordMetadataInStore:inManagedObjectContext:error:]
Failed to purged corrupted record metadata during migration: %@
NOT (entityId IN %@)
Trying to return failure without an error set.
Couldn't find sql for table '%@', did you check if it exists first?
executionCount
instructionCount
rowCount
UPDATE OR IGNORE "%@" SET "%@" = "%@" + %lld, "%@" = "%@" + %lld, "%@" = "%@" + %lld WHERE "%@" = '%@'
Couldn't find NSSQLiteIndexStatistics entity
unexpected failure updating index statistics: %s
SQLiteIndexTracking
Illegal attempt to pass a non-file URL to a file backed NSData
%@ does not support eviction.
NSFileSize
No file exists at URL '%@'
_NSDataFileBackedFuture : <%@, %llu, %@ (%@)>
this class requires a keyed archiver
this keyed archiver does not support this class
NSUUID
NSFileURL
NSOriginalFileURL
this archiver forbids unarchiving this class
url is not a required file url
original url is not a required file url
file size exceeds maximum size for data
Underlying file for this file backed future has not been downloaded.
<null url>
Underlying url for this file backed future is not a file url.
Exception reading data for file backed future.  %@
<no error>
%@: First attempt at moving file to interim location failed: %@
Failed to copy file from %@ to %@ (%@)
%@: First attempt at moving in to place failed with error: %@
%@: Exporter / importer finished after %d tries. Allowing store to deallocate.
-[PFCloudKitStoreMonitor pfcloudstoremonitor_is_holding_your_store_open_waiting_for_cloudkit_activity_to_finish]
%@: Exporter / importer didn't tear down after 5 seconds, retrying (%d).
Attempt to create context without a store identifier.
Called after the store is dead. This method needs to be called inside a performBlock on the store monitor: %@
_executeObjectFaultRequest passed a nil objectID
exception fetching row for object with ID: %@ with userInfo of %@
Asked to fault objectID %@ but database returned row with different objectID %@
Database appears corrupt.  Asked to fault objectID %@ but database returned row with different objectID %@
Asked to fault objectID %@ but database returned multiple rows
failed to resolve fault to exactly one object for %@
fault fulfilled from database for : %@ with row values: %@
fault fulfilled from database for : %@
orderKey
exception during newFetchedPKsForSourceID: %@ with userInfo of %@
to-many relationship fault "%@" for objectID %@ fulfilled from database.  Got %d rows with values: %@
to-many relationship fault "%@" for objectID %@ fulfilled from database.  Got %d rows
Batch insert failed to generate a post transaction query generation with error %d
Batch insert did not affect any rows, not registering a query generation
Encountered error %@ with userInfo %@ while rolling back batchInsertRequest
Encountered exception %@ with userInfo %@ while rolling back batchInsertRequest
Batch delete failed to generate a post transaction query generation with error %d
Batch delete did not affect any rows, not registering a query generation
Unhandled error from executeBatchDeleteRequest %@ and userInfo %@
Unhandled opt lock error from executeBatchDeleteRequest %@ and userInfo %@
Unhandled exception from executeBatchDeleteRequest %@
drop external data reference triggers during NSBatchDeleteRequest failed because %@ with userInfo %@
drop triggers during NSBatchDeleteRequest failed because %@ with userInfo %@
drop external data reference temp table during NSBatchDeleteRequest failed because %@ with userInfo %@
drop temp history tables during NSBatchDeleteRequest failed because %@ with userInfo %@
rollback during NSBatchDeleteRequest failed because %@ with userInfo %@
Empty or Null Dictionary passed to propertiesToUpdate:
Unable to generate updateStatement for affected object IDs (cause unknown)
Short-circuiting batch update: impossible condition in where clause (2)
Batch update failed to generate a post transaction query generation with error %d
Batch update did not affect any rows, not registering a query generation
dropping triggers during NSBatchUpdateRequest failed because %@ with userInfo %@
Rollback during NSBatchUpdateRequest failed because %@ with userInfo %@
Persistent history request failed to adopt a query generation with error %d
Persistent History Token is expired for store at %@
Persistent history request failed to adopt query generation
Unhandled error encountered during change request %@ with userInfo %@
Unhandled exception encountered during change request: %@ with userInfo %@
Missing transaction scope for change tracking of changes.
, %qi
SELECT %@,%@ FROM %@ WHERE %@ IN (%@) ORDER BY %@
Optimistic locking failure for %@.  Row was deleted.  Original row = %@ New Row = <deleted>
Optimistic locking failure for %@.  Row was deleted.
Optimistic locking failure for %@.  Row was updated.  Original row = %@ New Row = %@
Optimistic locking failure for %@.  Row was updated.
Unsupported unique attribute type: %@
Optimistic locking failure for %@.  During write changes, deletion failed.  Row was updated.  Original row = %@ New Row = %@
Optimistic locking failure for %@.  During write changes, deletion failed.  Row was updated.
Constraint violation
SaveChanges: NSSQLCore: %p Transactions cannot be nested
_NSSQLCoreActiveSaveRequest
requestContext
_NSSQLCoreTransactionExternalDataReferencesToDelete
Save changes failed to generate a post transaction query generation with error %d
Missing transaction scope for commit changes.
addedOrUpdated
count using %@ returned %d
logically false count request %@ short circuits.
count request %@ returned %d
total count request execution time: 
[31m%.4f
[0ms for count of %d.
total count request execution time: %.4fs for count of %d.
%@ %@ JOIN %@ %@ %@%@
SELECT %@%@, %@%@ FROM 
SELECT %@%@ FROM 
SELECT 0, %@%@ FROM 
 %qi
 %@, %@
, %@.%@
%@ IN ( 
%qu, 
%qu ) 
AND 
q24@?0@"NSManagedObjectID"8@"NSManagedObjectID"16
Prefetching from join table for many-to-many relationship "%@" from database.  Got %lu rows with values: %@
Prefetching from join table for many-to-many relationship "%@" from database.  Got %lu rows
Prefetching with request %@.  Got %lu rows with values: %@
Prefetching with key '%@'.  Got %lu rows.
com.apple.CoreData.BufferAllocations.VMMemory
com.apple.CoreData.BufferAllocations.OneBuffer
VM Memory is already One Buffer Row that grows!!!
com.apple.CoreData.BufferAllocations.ManyResultSets
VM Memory does not support multiple result sets!!!
logically false fetch request %@ short circuits.
sql connection fetch statement: '%@'
XPC Store fetch encountered an error : %@
XPC Store fetch raised an exception : %@
Encountered exception %@ with userInfo %@ while rolling back generating permanent objectIDs
com.apple.CoreData.CloudKitDebug
Checking log level threw: %@
/System/Library/Frameworks/CloudKit.framework/CloudKit
CKContainer
CKContainerOptions
CKRecordZone
CKRecordZoneID
CKRecord
CKRecordID
CKAcceptSharesOperation
CKFetchDatabaseChangesOperation
CKModifyRecordZonesOperation
CKModifyRecordsOperation
CKFetchRecordZonesOperation
CKFetchRecordsOperation
CKDatabaseSubscription
CKModifySubscriptionsOperation
CKAsset
CKFetchRecordZoneChangesConfiguration
CKFetchRecordZoneChangesOperation
CKServerChangeToken
CKNotificationInfo
CKEncryptedData
CKOperationConfiguration
CKScheduler
CKSchedulerActivity
CKNotificationListener
CKShare
CKFetchShareParticipantsOperation
CKFetchShareMetadataOperation
CKQueryOperation
CKQuery
CKQueryCursor
CKCurrentUserDefaultName
CKErrorDomain
CKPartialErrorsByItemIDKey
CKAccountChangedNotification
CKIdentityUpdateNotification
CKErrorRetryAfterKey
CKRecordZoneDefaultName
CKRecordTypeShare
CKRecordNameZoneWideShare
CKDatabaseScopeString
initWithRequest passed an error (%@) on a succes condition
initWithRequest illegally passed nil instead of an error on a failure condition
 success: %d madeChanges: %d error: %@
CDDCloudKitRegisteredClient
TEMP_CDBATCHINSERTOBJECTIDS
TEMP_CDBATCHUPDATEOBJECTIDS
Unexpected batch operation: %@
CREATE TEMP TABLE IF NOT EXISTS %@ (ENTITYID INTEGER, PRIMEKEY INTEGER, TYPE INTEGER, ATTRIBUTENAME VARCHAR)
NEW.Z_PK
NEW.Z_ENT
ZQ_%@_%@_%@
INSERT INTO %@ (ENTITYID, PRIMEKEY, TYPE) SELECT %@, %@, %ld;
CREATE TEMPORARY TRIGGER IF NOT EXISTS %@ AFTER %@ ON %@ FOR EACH ROW BEGIN %@ END
ZQ_UPDATE_%@_%@
INSERT INTO %@ (ENTITYID, PRIMEKEY, TYPE) SELECT OLD.Z_ENT, OLD.Z_PK, %ld;
CREATE TEMPORARY TRIGGER IF NOT EXISTS %@ AFTER UPDATE ON %@ FOR EACH ROW BEGIN %@ END
ZQ_UPDATE_%@_%@_%@
INSERT INTO %@ (ENTITYID, PRIMEKEY, TYPE, ATTRIBUTENAME) SELECT OLD.Z_ENT, OLD.Z_PK, %ld, '%@';
CREATE TEMPORARY TRIGGER IF NOT EXISTS %@ AFTER UPDATE ON %@ FOR EACH ROW WHEN OLD.%@ IS NOT NEW.%@ BEGIN %@ END
Expected an attribute for the entity
History transaction processing failed but didn't return an error
%@: Failed to execute a history fetch: %@
History analyzer encountered an unhandled exception while fetching history
Invalid attempt to process transaction '%@' twice.
Invalid invocation of '%@', cannot be called after '%@'
q24@?0@"NSObject<PFHistoryAnalyzerObjectState>"8@"NSObject<PFHistoryAnalyzerObjectState>"16
v32@?0@"NSObject<PFHistoryAnalyzerObjectState>"8Q16^B24
CoreData: %@
%@: Got: %@ - %d
-[PFCloudKitThrottledNotificationObserver noteRecievedNotification:]
%@: Executing '%@' block for '%@' clearing %d iterations.
-[PFCloudKitThrottledNotificationObserver noteRecievedNotification:]_block_invoke
No notification handler block specified. Dropping: %@
%@ - Already scheduled a block to respond to '%@', %d notifications since.
NSCloudKitMirroringDelegateInitializedZoneDefaultsKey
NSCloudKitMirroringDelegateInitializedZoneSubscriptionDefaultsKey
NSCloudKitMirroringDelegateCKIdentityRecordNameDefaultsKey
NSCloudKitMirroringDelegateCheckedCKIdentityDefaultsKey
NSCloudKitMirroringDelegateInitializedDatabaseSubscriptionKey
<%@: %p; %@
loaded
not-loaded
,changed:%d
,initZone:%d
,initZoneSub:%d
,initDatabaseSub:%d
,identity:%@
,checkedIdentity:%d
,changeTokens:
,%@:%@
v32@?0@"NSString"8@"CKServerChangeToken"16^B24
empty
historyToken:%@
%@:%@ called before load.
Failed to deserialize '%@' out of the metadata for store: %@
.%@.%@
public
shared
Unknown database scope: %lu
Move
Update
Insert
Unset
<%@: %p> { object: %p, type: %@%@%@ }
, startIndex: %@
, finalIndex: %@
 containerIdentifier:%@
 databaseScope:%@
 ckAssetThresholdBytes:%@
 operationMemoryThresholdBytes:%@
 useEncryptedStorage:%@
 useDeviceToDeviceEncryption:%@
 automaticallyDownloadFileBackedFutures:%@
 automaticallyScheduleImportAndExportOperations:%@
 skipCloudKitSetup:%@
 preserveLegacyRecordMetadataBehavior:%@
 useDaemon:%@
 apsConnectionMachServiceName:%@
 containerProvider:%@
 storeMonitorProvider:%@
 metricsClient:%@
 metadataPurger:%@
 scheduler:%@
 notificationListener:%@
 containerOptions:%@
 defaultOperationConfiguration:%@
 progressProvider:%@
 test_useLegacySavePolicy:%@
 archivingUtilities:%@
NSCloudKitMirroringDelegateOptions.initializeSchema is no longer supported and will be removed in a future release. Please use -[NSPersistentCloudKitContainer initializeSchemaWithOptions:error:] or NSCloudKitMirroringInitializeSchemaRequest instead.
FETCH_REQUEST_LIMIT_SUBSTITUTION
FETCH_REQUEST_OFFSET_SUBSTITUTION
Unsupported substitution variable type for key %@
Mismatched variables dictionaries (count)
Mismatched variables dictionaries (missing value)
Mismatch: that which was once a collection is no longer (%@)
%{public}s: %{public}s
CoreData: %{public}s: %{public}s
CoreData: PFCloudKitModelValidator was handed an entity with unique constraints that aren't attributes or strings: %@ - %@
CoreData: Unexpected unknown exception on server
CoreData: Unexpected tagged string result
CoreData: swallowed an exception during XPC store prefetching of %@, %@: %@
CoreData: swallowed an exception during XPC store recursive prefetching of %@, %@: %@
CoreData: XPCStore sendMessage: Unhandled exception handling request.  %@
CoreData: XPCStore sendMessage: Unhandled unknown exception handling request
CoreData: Somehow got a temporary objectID for export: %s
CoreData: This method only supports objectIDs from SQLite stores: %s
CoreData: createRecordID called before the record has the necessary properties: %@
CoreData: NCKRecordMetadata: System fields record name doesn't match row: %@
CoreData: NSCKRecordMetadata: System fields record type doesn't match new schema: %@
CoreData: Failed to reconstruct CKRecord from system fields in record metadata: %@
CoreData: Cannot create objectID: called before the record has the necessary properties: %@
CoreData: Cannot create objectID. Unable to find entity with id '%@' in store '%@'
CoreData: Found more than one instance of NSCKRecordMetadata for object: %s
CoreData: Exporter got record metadata back but doesn't have a corresponding objectID: %s
CoreData: Found more than one instance of NSCKRecordMetadata for record: %s
CoreData: Invalid query for record metadata (by recordIDs): %@ returned no metadata or record names
CoreData: Attempting to query cloudkit metadata without a mirroring delegate: %@
CoreData: Illegal attempt to merge move receipts before assigning a record metadata to a store: %@
CoreData: Import is attempting to link objects across zones: %@
CoreData: Found temporary objectID for metadata link: %@
CoreData: %@ - Exception thrown during query import: %@
### Failed to Soft Link: /System/Library/PrivateFrameworks/CoreAnalytics.framework/CoreAnalytics
CoreData: Updating a constrained entity generated an UPDATE statement with no columns on entity %@
CoreData: Batched history request encountered error %@
CoreData: Batched persistent history request returned a result AND an error %@
CoreData: Efficient batching requires the use of query generations: %@
CoreData: _PFLock deallocated while in use
CoreData: _PFMutex deallocated while in use
CoreData: Background Core Data task threw an exception.  Exception = %@ and userInfo = %@
CoreData: NSPersistentCloudKitContainerEventResult initialized without any subresults to aggregate.
CoreData: Unknown NSPersistentCloudKitContainerEventResultType in subResult: %@
CoreData: One or more models in this application are using transformable properties with transformer names that are either unset, or set to NSKeyedUnarchiveFromDataTransformerName. Please switch to using "%@" or a subclass of NSSecureUnarchiveFromDataTransformer instead. At some point, Core Data will default to using "%@" when nil is specified, and transformable properties containing classes that do not support NSSecureCoding will become unreadable.
CoreData: Unhandled error (%@, %ld) occurred during faulting and was ignored: %@
CoreData: faulting failed to record an error for an serious condition
CoreData: Unexpected change - objectID failed for entity - %@, entityID - %ld,  pk - %lld,  model - %@ - %@, store - %@
CoreData: Unexpected change - entity ID (%ld) not found in model - %@ - %@, store - %@
CoreData: Unknown fetch request result type: %ld
CoreData: Found multiple NSPersistentCloudKitContainerEvents for the identifier '%@'
CoreData: No event was found for the identifier '%@' in this result: %@
CoreData: Cannot create persistent event for request: %@
CoreData: Unknown exception thrown posting NSRemotePersistentStoreDidChangeNotification
CoreData: NSKnownKeysDictionary: improper mapping detected with key '%@'
CoreData: Failed to generate function for '%s'
CoreData: Failed to add function to class for '%s'
CoreData: Testing generated function for +classForEntity: failed for entity %s (%p)
CoreData: Factory and entity class skew over placeholder singleton.  Expected %p but got %p for entity '%s'
CoreData: Exception %@ ui %@ occurred in +[NSManagedObject classForEntity:]
CoreData: Unknown exception occurred in +[NSManagedObject classForEntity:]
CoreData: Exception %@ ui %@ occurred in +[NSManagedObject _entityDeallocated:]
CoreData: Unknown exception occurred in +[NSManagedObject _entityDeallocated:]
CoreData: NULL _cd_rawData but the object is not being turned into a fault
CoreData: Unknown exception while resetting query generation during exception recovery for save
CoreData: NSErrorMergePolicy failed to resolve %ld conflicts (%@)
CoreData: existingObjectWithID incorrectly returned nil without an error set for objectID %@
CoreData: Fetching generated a result AND an error: %@
CoreData: Fetching returned nil AND failed to generate an error
CoreData: Unknown batch request - %@ - %lu
CoreData: Unknown request - %@ - %lu
CoreData: Either a non nil result OR an error OR an exception
CoreData: Fetching generated an error AND a result: %@
CoreData: Fetching failed to generate a result OR an error OR an exception
CoreData: An observer of NSManagedObjectContextDidSaveNotification illegally threw an exception.  Exception = %@ at %@ with userInfo = %@ and objects saved = %@
CoreData: Delete propagation prefetching failed with exception: %@
CoreData: Either a non nil result OR an error in nexted context
CoreData: NSQueryGeneration -dealloc caught an unexpected exception: %@
CoreData: Stores failed to initialize but did not return an error.
CoreData: Metadata corruption found, store appears to have been used with multiple CloudKit databases: %@
CoreData: System fields shouldn't be set anymore: %@
CoreData: Unknown event type, cannot covert to string: %ld
CoreData: Got non-object value back for property '%@' which returned an objectID from the snapshot.
CoreData: NSSQLConnection manager failed to initialize with exception %@
CoreData:  NSSQLConnectionManager tried to blow a lock
CoreData: handleStoreRequest failed with unknown excception
CoreData: scheduleBarrierBlock failed with unknown excception
CoreData: scheduleConnectionsBarrier failed with unknown excception
CoreData: disconnectAllConnections failed with unknown excception
CoreData: enumerateAvailableConnectionsWithBlock failed with unknown excception
CoreData: -init results in undefined behavior for NSBatchInsertRequest
CoreData: An NSPersistentStore illegally threw an exception from -willRemoveFromPersistentStoreCoordinator:
CoreData: Unhandled exception in developer completion handler for addPersistentStoreWithDescription %@
CoreData: Unhandled unknown exception in developer completion handler for addPersistentStoreWithDescription
CoreData: A sqlite store save failed but did not return an error: %@
CoreData: A xpc store save failed but did not return an error: %@
CoreData: A binary store save failed but did not return an error: %@
CoreData: An in-memory store save failed but did not return an error: %@
Save
Fetch
CoreData: Either a non nil result OR an error
CoreData: Exception was caught during NSPersistentStoreCoordinator -performBlock: %@ with userInfo %@
CoreData: Unidentifiable exception was caught during NSPersistentStoreCoordinator -performBlock.
CoreData: Exception thrown during autorelease pool drain.
CoreData: Initialize schema failed but did not set an error: %@
CoreData: NSPersistentCloudKitContainer got a result back that isn't of type 'NSCloudKitMirroringDelegateSerializationRequestResult' when asking about the record for a managed object id.
CoreData: Wait timed out during call to recordForManagedObjectID
CoreData: NSPersistentCloudKitContainer got a result back that isn't of type 'NSCloudKitMirroringDelegateSerializationRequestResult' when asking about the records for a group of managed object ids.
CoreData: Wait timed out during call to recordsForManagedObjectIDs
CoreData: An error occured while fetching record metadata to figure out if an object is mutable: %@
CoreData: Failed to fetch the CKShare for an object in the shared database: %@ - %@
CoreData: Client passed in objects from multiple contexts, this should return an error.
CoreData: Metadata context was left dirty: %@
CoreData: Target store has no mirroring delegate: %@
CoreData: Metadata context was left dirty after preparing sharing metadata: %@
CoreData: Share acceptance succeeded but did not return NSCloudKitMirroringAcceptShareInvitationsResult: %@
CoreData: fetchSharesMatchingObjectIDs failed but did not set an error.
CoreData: fetchSharesInPersistentStore failed but did not set an error.
CoreData: Client attempting to share objects from multiple contexts, this should return an error.
CoreData: Metadata context was left dirty after attempting to share objects: %@
CoreData: Timed out waiting for share records to be exported: %@
CoreData: Serious application error.  An exception was caught from the delegate of NSFetchedResultsController during a call to -controllerDidChangeContent:.  %@ with userInfo %@
CoreData: Serious application error.  Unidentifiable exception was caught from the delegate of NSFetchedResultsController during a call to -controllerDidChangeContent:.
CoreData: Called to accept connection for unknown listener: %@
CoreData: Bug in CoreData CloudKit Server: Response success == NO but error is also nil.
CoreData: CloudKit Server is attempting to send back a nil response: %@
CoreData: Multiple clients registered for the same store path: %@
CoreData: Found unknown activity type: %@
CoreData: Asked to run activity but no server: %@
CoreData: Found more than one scheduled activities matching the identifier '%@': %@
CoreData: Success was NO but expected YES
CoreData: Error was non-nil, but expected nil
CoreData: Failed to handle activity because initialization took longer than expected: %@
CoreData: createRecordZoneID called before object has an owner name and zone name: %@
CoreData: Illegal attempt to work with the core-data or default zone in the shared database: %@
CoreData: Multiple zone entires discovered for a single record zone: %@
CoreData: Attempt to init PFCloudKitHistoryAnalyzer with the wrong options class: %@
CoreData: Transaction appears to have been processed twice: %@
CoreData: entityForObjectID was passed a nil objectID
CoreData: entityForObjectID failed to retrieve an NSSQLEntity for objectID %@
CoreData: entityForObjectID passed a nil entity description from %@
CoreData: _sqlCoreLookupSQLEntityForEntityDescription failed to return a result for objectID %@ with entity %@
CoreData: Attempt to add read-only file at path %@ read/write. Adding it read-only instead. This will be a hard error in the future; you must specify the NSReadOnlyPersistentStoreOption.
CoreData: Exception caught during check for existing table drop %@
CoreData: Exception caught during check for db integrity %@
CoreData: Exception caught during trigger recreation %@
CoreData: Exception caught during repair of triggers %@ with userInfo %@
CoreData: Exception caught during repair of triggers %@
CoreData: Exception caught during rebuild of DA triggers %@ with userInfo %@
CoreData: Exception caught during rebuild of DA triggers %@
CoreData: Exception caught during autovacuum check %@
CoreData: Exception caught during drop of old history tracking tables %@ with userInfo %@
CoreData: Exception caught during drop of old history tracking tables %@
CoreData: Exception caught during drop/create of history tracking tables %@ with userInfo %@
CoreData: Exception caught during drop/create of history tracking tables %@
CoreData: Exception caught during add of tombstone columns %@ with userInfo %@
CoreData: Exception caught during add of tombstone columns %@
CoreData: Exception caught during checking for Ancillary Entities %@ with userInfo %@
CoreData: Exception caught during checking for Ancillary Entities %@
CoreData: Exception caught during adding transaction string table %@ with userInfo %@
CoreData: Exception caught during adding transaction string table %@
CoreData: Exception caught during create of history tracking tables %@ with userInfo %@
CoreData: Exception caught during create of history tracking tables %@
CoreData: Store opened without NSPersistentHistoryTrackingKey but previously had been opened with NSPersistentHistoryTrackingKey - Forcing into Read Only mode store at '%@'
CoreData: Exception caught during cached model check %@
CoreData: Exception caught during model caching %@ with userInfo %@
CoreData: Exception caught during model caching %@
CoreData: Exception caught during _ensureDatabaseMatchesModel %@ with userInfo %@
CoreData: Exception caught during _ensureDatabaseMatchesModel %@
CoreData: generational row cache %p failed to return a value for store '%@' with token %@
CoreData: Exception caught during index recreation %@
CoreData: An unreported error occurred during initialization of query generation connection.
CoreData: Preloading query generation connection for high protection class CloudKit store failed with exception: %@
CoreData: Failed to adopt query generation from remote change
CoreData: Refreshing trigger values failed to adopt post transaction query generation with error %d
CoreData: Exception thrown posting NSPersistentStoreRemoteChangeNotification: %@
CoreData: Unknown exception thrown posting NSPersistentStoreRemoteChangeNotification
CoreData: Remote Change Notification - Failed to setup notification listener for NSPersistentStoreRemoteChangeNotification: %d
CoreData: Work item result failed but did not include an error: %@
CoreData: The importer needs to be taught how to merge results of different types when dealing with multiple work items: %@
CoreData: %@: Could not create cloudkit container: %@
CoreData: Unexpected exception thrown during account setup: %@
CoreData: Failed to fetch zone metadata during un-marking zones needing recovery from Manatee identity loss: %@
CoreData: Zone fetch didn't return an error or a dictionary of zones
CoreData: Custom zones aren't supported yet with the public database.
CoreData: Unexpected exception thrown during identity check: %@
CoreData: Identity fetch failed but did not set an error.
CoreData: Decoded share zoneID doesn't match row: %@
CoreData: Unsupported property type for unique attribute on entity '%@': %@
CoreData: Failed to initialize query generation tracking connection due to exception %@ (%@) with error (%@)
CoreData: Failed to initialize query generation tracking connection due to unknown exception with error (%@)
CoreData: Exception was caught during NSSQLiteConnection -_performBlock: %@ with userInfo %@
CoreData: Unidentifiable exception was caught during NSSQLiteConnection -_performBlock.
CoreData: Unable to create index: %@ due to exception (%@)
CoreData: performIntegrityCheck encountered an exception %@
CoreData: unable to cache model: %@
CoreData: PostSaveMaintenance: performPostSaveTasks threw something (1). ex = %@
CoreData: PostSaveMaintenance: performPostSaveTasks threw something (2). ex = %@
CoreData: History Transaction hit an Optimistic Locking Exception - %@
CoreData: History Change hit an Optimistic Locking Exception - %@
CoreData: History Update for %@ without any updated columns.
CoreData: Unable to construct objectID for History Change: %@-%@-%@-%@
CoreData: incorrect number of results
CoreData: Percentage History calculation error. Total Pages - %lld  Free Pages - %lld
CoreData: sqlite3_snapshot data was unexpectedly NULL
CoreData: Connection can't register generation: Uncaught exception: %@
CoreData: currentQueryGenerationIdentifier failed with exception: %@
CoreData: currentQueryGenerationIdentifier failed with NSError: %@
CoreData: currentQueryGenerationIdentifier failed with sqlite error: %d
CoreData: Failed to free sqlite3_snapshot
CoreData: Missing metadata query got an unexpected number of columns in the result: %@
CoreData: Missing metadata query hit an exception: %@
CoreData: Entity marked as needing unique constraint coalescing but does not appear to be uniqued: %@
CoreData: CloudKit: Deduping for metadata entity doesn't know how to handle this type of object yet: %@ - %@
CoreData: Fetch operation was notified about a recordID that finished with an error that doesn't have an objectID: %@ - %@
CoreData: Fetch operation was notified about an updated recordID that finished that doesn't have an objectID: %@
CoreData: Fetch operation was notified via partial failure about a recordID that doesn't have an objectID: %@ - %@
CoreData: Fetch request validation for NSPersistentCloudKitContainerEventRequest failed but did not report a failure reason.
CoreData: NSPersistentCloudKitContainerEventRequest predicate translation failed but did not return a failure reason: %@
CoreData: Unknown request class: %@
CoreData: Dequeue called during an active request: %@
CoreData: requestFinished called with a different request than the active request: %@
Called with: %@
CoreData: requestFinished called without an active request: %@
CoreData: History analysis corruption detected. State is behind (or overlaps) this copy but is attempting to be merged. %@ / %@
CoreData: Tombstones aren't supported yet for CloudKit history analysis
CoreData: Asked to purge user rows without any zones from which to purge.
CoreData: Asked to purge system fields without any zones from which to purge.
CoreData: Asked to purge zone metadata (trying to recreate after the purge) without any zones from which to purge.
CoreData: Cannot create objectID: got a 0 pk for entity: %@
CoreData: Attempting to delete a zone metadata that has records (%ld): %@ - %@
CoreData: exception raised during multi-threaded fetch %@ (%@)
CoreData: unidentifiable exception during multi-threaded fetch
CoreData: exception %@ raised processing result of multi-threaded fetch (%@)
CoreData: unidentifiable processing result of multi-threaded fetch
CoreData: exception %@ raised processing result of multi-threaded fetch while prepopulating objects (%@)
CoreData: unidentifiable processing result of multi-threaded fetch while prepopulating objects
CoreData: exportIfNecessaryWithCompletion invoked multiple times.
CoreData: History analyzer should have set an error if the analyzer context is nil.
CoreData: Metadata Inconsistency: Missing metadata for record: %@
CoreData: Model map is unexpectedly nil
CoreData: Invalid metric sent to PFCloudKitMetricsClient: %@
CoreData: Attempt to log metric with PFCloudKitBaseMetric, but each subclass must provide it's own name.
CoreData: Attempt to link objects across zones: MTM `%@` is attempting to relate `%@` and `%@`
CoreData: Got temporary objectIDs back during import where we should have permanent ones: %@ / %@
CoreData: New many to many relationship type?: %@
CoreData: Attempting to link objects across zones via one-to-many relationship '%@': %@ / %@
CoreData: Import context cache is stale. To-one mirrored relationship source object has gone missing: %@ - %@
CoreData: tableMigration returned nil cloudkit update statements: %@
CoreData: CloudKit metadata migration generated a source / destination id mapping for identical ids: %@
CoreData: Serializer is attempting to link relationships across zones: %@ - %@ / %@
CoreData: Failed to look up cached mirrored relationship for mtmKey: %@
CoreData: Supposedly serialization succeeded but there's no record: %@
CoreData: Object serialization failed but did not set an error: %@
CoreData: Record metadata doesn't match row: %@
CoreData: Need to handle fetch errors here for the zone and abort serialization. %@
CoreData: Unknown recordID returned as part of fetch for missing pending relationship objectIDs: %@ - %@ - %@
CoreData: Delegate didn't return a file url for asset: %@
CoreData: Attribute serialization failed but did not set an error: %@.%@
CoreData: Unable to provide a default CKRecordZoneID for database scope: %@
CoreData: Invalid arguments to initialize a share invitations result. If the operation failed both acceptedShares and acceptedShareMetadatas should be nil, otherwise there should be both arrays.
CoreData: Exception %@ ui %@ occurred in +[_CDSnapshot _invalidateStaticCaches:] preparing entity deallocation delegate
CoreData: Unknown exception occurred in +[_CDSnapshot _invalidateStaticCaches:] preparing entity deallocation delegate
CoreData: Exception %@ ui %@ occurred in +[_CDSnapshot _invalidateStaticCaches:] objc_disposeClassPair
CoreData: Unknown exception occurred in +[_CDSnapshot _invalidateStaticCaches:] objc_disposeClassPair
CoreData: Exception %@ ui %@ occurred in +[_CDSnapshot classForEntity:]
CoreData: Unknown exception occurred in +[_CDSnapshot classForEntity:]
CoreData: Exception %@ ui %@ occurred in +[_CDSnapshot _entityDeallocated:]
CoreData: Unknown exception occurred in +[_CDSnapshot _entityDeallocated:]
CoreData: Something has gone badly awry initializing the XPC connection pool: %@
CoreData: manager sendMessageWithContext: failed with exception (how? it should never throw): %@
CoreData: manager sendMessageWithContext failed with unknown exception
CoreData: Didn't get a minimum transaction number for change: %@
CoreData: Expected to get an instance of NSCKRecordMetadata for this recordID: %@ but got: %@
CoreData: Already have a mirrored relationship registered for this key: %@
CoreData: Attempting to cache zone metadata but already have one: %@
CoreData: Unhandled exception finding default Directory URL '%@'
CoreData: -[NSPersistentContainer initWithName:managedObjectModel:] called with the empty string as its container name
CoreData: -[NSPersistentContainer initWithName:managedObjectModel:] called with invalid container name '%@'
CoreData: resetAfterError illegally passed nil instead of an error on a failure condition
CoreData: %@: Asked to execute a request that isn't understood yet: %@
CoreData: Reset request was scheduled without a root cause error: %@
CoreData: Setup request executed with a completion block that will never be called: %@
CoreData: Mirroring delegate asked to set up when already successfully initialized.
CoreData: _initializeCloudKitForObservedStore failed but did not return an error.
CoreData: %@: Illegal attempt to export without an account: %@ - %@
CoreData: Multiple records returned for object even though we didn't ask for relationships: %@
CoreData: Unsupported resultType: %lu, %@
CoreData: No records returned from the serializer for object: %@
CoreData: No metadata or error for share URL: %@
CoreData: Some shareURLs failed to return metadata...
CoreData: No error or share for accepted share metadata: %@
CoreData: Some shares partially failed...
CoreData: handleErrorInResult illegally passed nil instead of a result
CoreData: handleErrorInResult passed a sucessful result (%@) with an illegal error object (%@)
CoreData: handleErrorInResult illegally passed a failed result (%@) with nil instead of an error on a failure condition
CoreData: recoverFromError illegally passed nil instead of an error on a failure condition
CoreData: Invalid recursion detected, this method should never have been passed a partial error: %@
CoreData: NSCloudKitMirroringDelegate recieved NSURLErrorDomain:NSURLErrorBadURL and probably shouldn't have.
CoreData: NSCloudKitMirroringDelegate recieved NSURLErrorDomain:NSURLErrorUnsupportedURL and probably shouldn't have.
CoreData: NSCloudKitMirroringDelegate recieved NSURLErrorDomain:NSURLErrorBadServerResponse and probably shouldn't have.
CoreData: NSCloudKitMirroringDelegate recieved NSURLErrorDomain:NSURLErrorCannotDecodeRawData and probably shouldn't have.
CoreData: NSCloudKitMirroringDelegate recieved NSURLErrorDomain:NSURLErrorCannotDecodeContentData and probably shouldn't have.
CoreData: NSCloudKitMirroringDelegate recieved NSURLErrorDomain:NSURLErrorCannotParseResponse and probably shouldn't have.
CoreData: NSCloudKitMirroringDelegate recieved NSURLErrorDomain:NSURLErrorAppTransportSecurityRequiresSecureConnection and probably shouldn't have.
CoreData: NSCloudKitMirroringDelegate recieved NSURLErrorDomain:NSURLErrorServerCertificateHasBadDate and probably shouldn't have.
CoreData: NSCloudKitMirroringDelegate recieved NSURLErrorDomain:NSURLErrorServerCertificateUntrusted and probably shouldn't have.
CoreData: NSCloudKitMirroringDelegate recieved NSURLErrorDomain:NSURLErrorServerCertificateHasUnknownRoot and probably shouldn't have.
CoreData: NSCloudKitMirroringDelegate recieved NSURLErrorDomain:NSURLErrorServerCertificateNotYetValid and probably shouldn't have.
CoreData: NSCloudKitMirroringDelegate recieved NSURLErrorDomain:NSURLErrorClientCertificateRejected and probably shouldn't have.
CoreData: NSCloudKitMirroringDelegate recieved NSURLErrorDomain:NSURLErrorClientCertificateRequired and probably shouldn't have.
CoreData: NSCloudKitMirroringDelegate recieved NSURLErrorDomain:NSURLErrorRequestBodyStreamExhausted and probably shouldn't have.
CoreData: NSCloudKitMirroringDelegate was handed a scary NRULErrorDomain error (of some code that's not already in the switch) that it probably shouldn't have been: %@
CoreData: Got server rejected request as part of a partial error for a CKRecord: %@ - %@
CoreData: %@: Found unknown itemID (%@) as part of a partial failure: %@
CoreData: Failed to get a reset sync reason for error even though we're posting a notification for it: %@
CoreData: Failed to fetch database metadata during automatic import check: %@
CoreData: Unsupported database scope in date threshold calculation: %ld
CoreData: Can't handle automated requests of type '%@' yet.
CoreData: Failed to execute mirroring request for automated import: %@
CoreData: Failed to execute mirroring request for automated export: %@
CoreData: Expected a non-nil error to schedule a setup activity from.
CoreData: Failed to fetch zone metadata during marking zones needing recovery from Manatee identity loss: %@
CoreData: Can't generate string for unknown reset sync reason: %lu
CoreData: Unhandled exception in rowCacheForGeneration %@
CoreData: Failed to save import operation: %@
CoreData: %@ - Exception thrown during import: %@
CoreData: CloudKit Import: Failed to find entity for unknown item recordID: %@ - %@
CoreData: Importer didn't obey operation memory threshold, finished operation with more than double the threshold worth of work to do (%@ bytes): %@
CoreData: Incremental import left uncommitted changes in the managed object context: %@
CoreData: Should tear down here and stop subsequent attempts to import from happening.
CoreData: %@ - Exception thrown during incremental import: %@
CoreData: CloudKit Import: Failed to handle item error for unknown itemID type: %@ - %@
CoreData: Unknown result type: %lu
CoreData: Unhandled persistent history change type: %@
CoreData: Fetched dirty zone that didn't need a share update or delete: %@
CoreData: Record name does not match recordID, even though our metadata linked this row with '%@': %@
CoreData: Record name appears to point to two different objects: %@ / %@
CoreData: I don't know how to handle skewed shares yet.
CoreData: Objects appear to be from different entities:
Store: %@
Other Store: %@
CoreData: Unknown value type '%@' for attribute: %@
CoreData: Not sure what to do with undefined attributes
CoreData: Unknown attribute type: %lu
CoreData: Found mirrored relationship for ignored relationship: %@
CoreData: Found mirrored relationship not marked uploaded, but this method is supposed to make sure store contents are equal, so shouldn't it be?
CoreData: Found mirrored relationship that's marked deleted but the objects are linked.
CoreData: Found pending mirrored relationship for linked objects (%@).
CoreData: Duplicate operations for identifier: %@
CoreData: Failed to acquire permanent objectIDs during schema generation: %@
CoreData: Unsupported attribute type
CoreData: Attempt to initialize PFCloudKitHistoryAnalyzerContext with options that aren't PFCloudKitHistoryAnalyzerOptions: %@
CoreData: History parsing corruption detected. An existing analyzer state was fetched from the database for '%@' but it's corresponding in-memory copy is no longer present in the in-memory cache.
CoreData: Found more than one mirrored relationship matching a many to many: %@
CoreData: Attempted to update a mirrored relationship with a non-mirrored-relationship record: %@
CoreData: Unexpected exception thrown during metadata migration: %@
CoreData: Exception caught during execution of migration statement for cloudkit metadata tables %@ with userInfo %@
CoreData: Exception caught during execution of migration statement for cloudkit metadata tables %@
CoreData: Exception caught during cleanup of cloudkit metadata primary keys %@ with userInfo %@
CoreData: Exception caught during cleanup of cloudkit metadata primary keys %@
CoreData: Failed to refresh zone for assignment during corrupt zone cleanup: %@
CoreData: Unable to find attribute to migrate to '%@' from '%@' on entity: %@
CoreData: Found mirrored relationships without a recordID.
CoreData: Trying to return failure without an error set.
CoreData: Couldn't find sql for table '%@', did you check if it exists first?
CoreData: Couldn't find NSSQLiteIndexStatistics entity
CoreData: unexpected failure updating index statistics: %s
CoreData: Exception reading data for file backed future.  %@
CoreData: Attempt to create context without a store identifier.
CoreData: Called after the store is dead. This method needs to be called inside a performBlock on the store monitor: %@
CoreData: _executeObjectFaultRequest passed a nil objectID
Fault
%@ - %@
RelationshipFault
CoreData: Batch insert failed to generate a post transaction query generation with error %d
CoreData: Batch delete failed to generate a post transaction query generation with error %d
CoreData: Unhandled exception from executeBatchDeleteRequest %@
CoreData: Batch update failed to generate a post transaction query generation with error %d
CoreData: Persistent history request failed to adopt a query generation with error %d
CoreData: Unhandled exception encountered during change request: %@ with userInfo %@
CoreData: Unsupported unique attribute type: %@
CoreData: Save changes failed to generate a post transaction query generation with error %d
### Failed to Soft Link: /System/Library/Frameworks/CloudKit.framework/CloudKit
CoreData: initWithRequest passed an error (%@) on a succes condition
CoreData: initWithRequest illegally passed nil instead of an error on a failure condition
CoreData: Unexpected batch operation: %@
CoreData: Expected an attribute for the entity
CoreData: History transaction processing failed but didn't return an error
CoreData: No notification handler block specified. Dropping: %@
CoreData: NSCloudKitMirroringDelegateOptions.initializeSchema is no longer supported and will be removed in a future release. Please use -[NSPersistentCloudKitContainer initializeSchemaWithOptions:error:] or NSCloudKitMirroringInitializeSchemaRequest instead.
_NSNoChangeToken
NSCoding
NSSecureCoding
_NSXPCStoreObjectIDArrayConstantValueExpression
XPCStoreSupport
NSBatchInsertRequestEncodingToken
NSBatchUpdateRequestEncodingToken
NSBatchDeleteRequestEncodingToken
NSPersistentHistoryChangeRequestToken
_NSXPCStoreUtilities
NSXPCStore
NSCoreDataKeyedArchivingDelegate
Internal
NSSQLModelProvider
NSPersistentHistoryTransaction
NSCopying
_NSPersistentHistoryTransaction
NSXPCStoreManagedObjectArchivingToken
NSSQLBlockRequestContext
NSSQLBatchDeleteRequestContext
NSPersistentHistoryChangeRequest
NSPersistentHistoryResult
PFCloudKitModelValidator
NSXPCServerProtocol
NSObject
NSXPCStoreServer
NSXPCListenerDelegate
InternalMethods
_PFResultArray
_PFResultObject
_PFResultObjectKeyEnumerator
NSXPCStoreConnectionInfo
NSXPCStoreServerConnectionContext
NSXPCStoreServerPerConnectionCache
NSXPCStoreServerRequestHandlingPolicy
NSXPCRow
NSCoreDataXPCMessage
PFHistoryAnalyzerOptions
NSXPCStoreConnection
PFCloudKitMetadataModel
_PFAncillaryModelFactory
PFCloudKitMetadataValueTransformer
NSCKRecordMetadata
NSCKRecordMetadataReceiptArchive
NSSQLDerivedAttributeSQLGenerator
PFCloudKitImportZoneContext
_PFCKInsertedMetadataLink
_NSCoreDataException
_NSCoreDataOptimisticLockingException
_NSCoreDataConstraintViolationException
NSSQLBatchInsertRequestContext
_NSCoreDataSQLPredicateCategories
_NSFaultingMutableArray
_NSFaultingMutableSet
_NSFaultingMutableSetMutationMethods
_NSMappingModelBuilder
NSSQLBindIntarray
NSCachedFetchRequestThunk
NSCachedFetchRequestInfo
_NSMemoryStorePredicateRemapper
NSPredicateVisitor
_NSChildContextPredicateRemapper
_NSPersistentHistoryPredicateRemapper
_NSXPCStorePredicateRemapper
_PFSpawn
_NSNotifyingWrapperMutableSet
NSSQLStoreRequestContext
PFCloudKitCKQueryBackedImportWorkItem
_CoreData_Extensions
_NSPersistenceUtilities
_NSProxyWrapperMutableSet
_NSSQLGenerator
_PFArray
NSMutableCopying
PFObjectIDCollection
_PFBatchFaultingArray
_PFBatchHistoryFaultingArray
_PFMutableProxyArray
_PFEncodedArray
_PFFetchedResultOrderedSetWrapper
_PFCachedNumber
_PFContextMapTable
_PFTask
NSPrivateCoreDataClassForFindingBundle
_PFRoutines
_PFWeakReference
_PFLock
NSLocking
_PFMutex
_PFGarbageManager
_PFAutoreleasePoolThunk
_PFAbstractString
_PFEncodedString
_PFResultString
_PFResultASCIIString
_PFResultUniString
NSAtomicStore
_NSInternalMethods
NSPersistentStoreResult
NSUnknownRequestTypeResult
NSPersistentStoreAsynchronousResult
NSAsynchronousFetchResult
NSPersistentCloudKitContainerEventResult
NSAtomicStoreCacheNode
NSAttributeDescription
CoreDataSPI
NSAttributeStoreMapping
_NSCoreManagedObjectID
NSBasicObjectID
_NSScalarObjectID
NSScalarObjectID64
NSScalarObjectID48
_NSCoreDataTaggedObjectID
_NSCoreDataTaggedObjectIDFactory
NSCloudKitMirroringDelegateSerializationRequestResult
NSBinaryObjectStore
NSBinaryObjectStoreFile
NSDictionaryMapNode
NSDictionaryStoreMap
NSEntityDescription
NSFastEnumeration
_NSEntityDescriptionPrivateMethods
NSEntityMapping
NSEntityMigrationPolicy
NSEntityStoreMapping
NSExpressionDescription
NSPersistentCacheRow
NSFaultHandler
NSPersistentHistoryChange
_NSPersistentHistoryChange
NSSQLRTreeIndex
NSFetchedPropertyDescription
NSXPCStoreMessageContext
NSFetchedResultSupport
NSFetchRequestResult
NSFetchRequest
_NSCoreDataSPI
CDDCloudKitScheduleActivityMessage
NSCKEvent
NSXPCStoreNotificationObserver
NSFetchRequestExpression
NSJoin
NSKnownKeysMappingStrategy1
NSKnownKeysMappingStrategy2
NSKnownKeysDictionary1
_NSKnownKeysEnumerator
NSKnownKeysDictionary2
NSKnownKeysMappingStrategy
NSKnownKeysDictionary
_NSOrderedSetDiff
_NSOrderedSetDiffDelete
_NSOrderedSetDiffChange
_NSOrderedSetDiffInsert
_NSOrderedSetDiffMove
NSManagedObject
_PhotosOrderKeyUpdateSupport
PFCloudKitOperationBatch
_PFDynamicAccessorsAndPropertySupport
_NSManagedObject_st
NSManagedObjectContext
_NSInternalAdditions
_NSInternalChangeProcessing
_NSInternalNotificationHandling
_PFManagedObjectReferenceQueue
_NestedContextSupport
_PFTempNestedSnapshot
_InternalOverlaySupport_
NSQueryGenerationToken
_NSQueryGenerationToken
_NSXPCQueryGenerationToken
NSManagedObjectID
NSManagedObjectModel
NSSQLUpdateColumnsIntermediate
NSManagedObjectModelBundle
PFCloudKitStoreComparisonCache
PFCloudKitStoreComparisonCacheStoreCache
NSMappedObjectStore
NSPersistentCloudKitContainerEvent
NSFetchIndexDescription
NSMappingModel
PFCloudKitImporterWorkItem
NSMemoryObjectStore
NSSQLitePrefetchRequestCache
NSMemoryStoreEqualityPredicateOperator
NSMemoryStoreInPredicateOperator
NSSQLBoundedByIntermediate
NSMergeConflict
NSConstraintConflict
NSMergePolicy
_PFModelUtilities
NSMigrationContext
NSMigrationManager
NSSQLConnectionManager
NSSQLDefaultConnectionManager
NSPersistentStore
NSBatchInsertRequest
CoreDataIPI
NSBatchInsertResult
NSSQLiteStatementCache
NSPersistentStoreCache
NSPersistentStoreCoordinator
_NSPersistentStoreCoordinatorPrivateMethods
QueryGenerations
Triggers
PersistentHistory
PersistentHistoryInternal
Platform
DeferredLightweightMigration
DelegateInternal
PFHistoryAnalyzerDefaultObjectState
PFHistoryAnalyzerObjectState
NSSQLAttributeTrigger
NSSQLAttributeExtension
NSBatchUpdateRequest
NSPredicatedStoreRequest
NSBatchUpdateResult
NSPersistentStoreMap
NSCKRecordZoneMoveReceipt
NSPersistentCloudKitContainer
NSCloudKitMirroringDelegateProgressProvider
NSPersistentCloudKitContainerAdditions
_PFRequestExecutor
_PFObjectCKRecordZoneLink
NSPropertyDescription
_NSPropertyDescriptionPrivateMethods
_PFIndexCacheOffset
NSFetchedResultsController
PrivateMethods
NSPropertyMapping
NSPropertyStoreMapping
NSPropertyTransform
NSRelationshipDescription
NSRelationshipStoreMapping
PFCloudKitHistoryAnalyzerOptions
NSSaveChangesRequest
NSSaveChangesRequest_Internal
NSSQLAliasGenerator
CDDCloudKitServerProxy
CDDCloudKitServer
_PFCoreDataCloudKitServer
NSSQLAttribute
NSSQLBindVariable
NSCloudKitMirroringFetchRecordsRequest
NSCloudKitMirroringFetchRecordsResult
NSCKRecordZoneMetadata
NSSQLRTreeIndexQueryIntermediate
NSSQLColumn
NSSQLCompoundWhereIntermediate
CDDCloudKitMetadataModel
NSSQLConstantValueIntermediate
PFCloudKitHistoryAnalyzer
NSSQLBatchUpdateRequestContext
NSSQLCore
NSFilePresenter
_NSSQLCoreConnectionObserver
PFCloudKitImporter
NSSQLEntity
porting
PFCloudKitErrorLog
PFCloudKitErrorLogEntry
CDDCloudKitMessage
NSSQLEntityKey
NSSQLExpressionIntermediate
NSSQLFetchCountIntermediate
PFCloudKitSetupAssistant
CDDCloudKitClient
NSSQLFetchIntermediate
NSSQLForeignEntityKey
NSSQLForeignKey
NSSQLiteIndexStatisticsRequest
NSSQLiteIndexStatisticsResult
PFCloudKitImporterZonePurgedWorkItem
CDDCloudKitResponse
NSSQLForeignKeyIntermediate
NSCloudKitMirroringRequestOptions
NSSQLBinaryIndex
NSSQLFunctionExpressionIntermediate
NSSQLGenerator
PFCloudKitArchivingUtilities
NSSQLIntermediate
PFCloudKitMetadataMigrationContext
_PFCoreDataDaemonExtension
CDDCloudKitServerConfiguration
_NSPersistentHistoryToken
NSPersistentHistoryToken
CDDCloudKitRegistrationMessage
NSSQLiteAdapter
_PFSQLiteSnapshotWrapper
NSSQLiteConnection
NSSQLJoinIntermediate
NSSQLKeypathExpressionIntermediate
NSSQLLimitIntermediate
NSSQLManyToMany
PFCloudKitImporterFetchRecordsWorkItem
PFCloudKitContainerProvider
NSPersistentCloudKitContainerEventRequest
NSSQLModel
NSSQLOffsetIntermediate
NSSQLUbiquitizedStoreConnectionManager
NSCloudKitMirroringRequestManager
NSCKHistoryAnalyzerState
NSConstraintValidator
NSSQLOptLockKey
NSCloudKitMirroringDelegateResetRequest
PFCloudKitMetadataPurger
NSSQLOrderIntermediate
_PFFetchPlanHeader
NSSQLPredicateAnalyser
NSCKMetadataEntry
NSCloudKitMirroringRequest
NSCloudKitMirroringExportRequest
NSCloudKitMirroringImportRequest
NSCloudKitMirroringResetZoneRequest
NSCloudKitMirroringResetMetadataRequest
NSCloudKitMirroringInitializeSchemaRequest
NSConstraintCacheKey
NSConstraintCache
NSSQLPrimaryKey
NSSQLProperty
NSSQLReadOnlySelectIntermediate
NSSQLRelationship
NSSQLRow
NSSQLObjectFaultRequestContext
NSSQLRowCache
NSSQLSelectIntermediate
NSSQLSimpleWhereIntermediate
NSSQLiteStatement
PFCloudKitExporter
_NSCoreDataInternal
NSSQLStoreMappingGenerator
NSSQLSubqueryExpressionIntermediatePredicateVisitor
NSSQLSubqueryExpressionIntermediate
NSSQLToMany
_PFModelMap
NSSQLToOne
NSSQLWhereIntermediate
NSStoreMapNode
NSStoreMapping
NSStoreMappingGenerator
NSStoreMigrationPolicy
_NS128bitWrapper
NSTemporaryObjectID
_NSTemporaryObjectID2
NSValidationErrorLocalizationPolicy
NSMergedPolicyLocalizationPolicy
NSManagedImmutableObject
NSCKDatabaseMetadata
_NSDefaultSectionInfo
NSFetchedResultsSectionInfo
NSSQLTernaryExpressionIntermediate
NSSQLiteInPlaceMigrationManager
PFCloudKitMetricsClient
PFCloudKitBaseMetric
PFCloudKitMetric
PFCloudKitUnhandledPartialErrorMetric
PFCloudKitFatalErrorMetric
PFCloudKitSizeMetric
PFCloudKitExportedRecordBytesMetric
PFCloudKitImportedRecordBytesMetric
PFCloudKitFetchedRecordBytesMetric
PFCloudKitFetchedAssetBytesMetric
_NSSQLEntityMigrationDescription
NSSQLUpdateIntermediate
NSSQLiteIntarrayTable
_NSSQLTableMigrationDescription
PFMirroredRelationship
PFMirroredManyToManyRelationship
PFMirroredManyToManyRelationshipV2
PFMirroredOneToManyRelationship
PFCloudKitImporterOptions
_NSSQLiteStoreMigrator
PFCloudKitSerializer
NSSQLGroupByIntermediate
NSSQLHavingIntermediate
NSPersistentStoreRequest
NSAsynchronousFetchRequest
_NSPropertyDescriptionProxy
_NSPropertyDescriptionProxy2
NSDerivedAttributeDescription
_PFVMData
_PFEvanescentData
_PFEncodedData
_PFResultData
_PFExternalReferenceData
_NSFaultingMutableOrderedSet
NSSQLForeignOrderKey
NSCloudKitMirroringAcceptShareInvitationsRequest
NSCloudKitMirroringAcceptShareInvitationsResult
PFCloudKitOptionsValidator
PFCloudKitImporterZoneDeletedWorkItem
_CDSnapshot
NSSQLFetchDictionaryCountIntermediate
PFCloudKitImportDatabaseContext
NSIncrementalStore
NSIncrementalStoreNode
_NSFaultingMutableOrderedSetMutationMethods
PFCloudKitStoreMonitorProvider
_NSNotifyingWrapperMutableOrderedSet
_NSProxyWrapperMutableOrderedSet
NSSQLLocationAttributeRTreeExtension
NSXPCStoreConnectionManager
CDDCloudKitScheduledActivity
NSPersistentStoreDescription
NSSQLKeypathTriggerAttributeExtension
PFCloudKitMetadataCache
NSSQLIndexIntermediate
PFCloudKitExporterOptions
NSSQLEntity_DerivedAttributesExtension
NSCKImportPendingRelationship
NSPersistentContainer
PFCloudKitImporterZoneChangedWorkItem
NSCloudKitMirroringDelegate
PFCloudKitExporterDelegate
PFApplicationStateMonitorDelegate
NSPersistentStoreMirroringDelegate
NSCloudKitMirroringDelegateExtensions
NSCloudKitMirroringDelegateWorkBlockContext
NSCKExportedObject
NSGenerationalRowCache
NSSQLIndex
PFCloudKitImportRecordsWorkItem
PFCloudKitSerializerDelegate
NSSQLCorrelationTableUpdateTracker
NSCloudKitMirroringDelegateSerializationRequest
__CLI
NSSQLPersistentHistoryChangeRequestContext
_PFPersistentHistoryModel
_PFPersistentHistoryFetchModel
NSSQLCoreDispatchManager
NSSQLCountRequestContext
NSSQLVariableExpressionIntermediate
NSSQLAttributeExtensionFactory
NSSQLSavePlan
PFApplicationStateMonitor
PFCloudKitExportContext
NSPersistentCloudKitContainerOptions
PFCloudKitStoreComparer
NSCKImportOperation
NSBatchDeleteRequest
NSBatchDeleteResult
NSSQLGenerateObjectIDRequestContext
NSFetchIndexElementDescription
NSXPCSaveRequestContext
NSSQLRelationshipFaultRequestContext
_PFFreeMapEntry
PFCloudKitSchemaGenerator
NSCKRecordZoneQuery
NSCKRecordZoneQueryPredicateTransformer
NSCKRecordZoneQueryCursorTransformer
PFCloudKitHistoryAnalyzerContext
NSSQLStatementIntermediate
NSCKMirroredRelationship
NSSQLFetchRequestContext
NSSQLXPCFetchRequestContext
NSSQLObjectIDSetFetchRequestContext
NSSQLSaveChangesRequestContext
PFCloudKitMetadataModelMigrator
NSSQLiteIndexStatistics
NSSQLiteIndexTrackingModel
FileBackedFutures
_NSDataFileBackedFuture
_NSFileBackedFuture
_NSCloudKitDataFileBackedFuture
PFCloudKitStoreMonitor
PFCloudKitLogging
NSCloudKitMirroringResult
CDDCloudKitRegisteredClient
NSSQLBatchOperationRequestContext
PFHistoryAnalyzer
NSCloudKitMirroringExportProgressRequest
NSCloudKitMirroringExportProgressResult
NSCloudKitMirroringDelegateSetupRequestOptions
NSCloudKitMirroringDelegateSetupRequest
NSCloudKitMirroringDelegateSetupResult
PFHistoryAnalyzerContext
PFCloudKitThrottledNotificationObserver
NSCKExportMetadata
NSCloudKitMirroringDelegatePreJazzkonMetadata
_PFChangeInfo
NSCloudKitMirroringDelegateOptions
NSCKExportOperation
NSCachingFetchRequest
init
initialize
allocWithZone:
supportsSecureCoding
encodeWithCoder:
initWithCoder:
TB,R
retain
retainCount
release
_isDeallocating
_tryRetain
autorelease
description
isEqual:
hash
dealloc
allowsKeyedCoding
raise:format:
isNSArray__
isNSSet__
encodeObject:forKey:
allowedClasses
_constantValueClassesForSecureCoding
setByAddingObject:
count
mutableCopy
unionSet:
decodeObjectOfClasses:forKey:
delegate
persistentStoreCoordinator
initWithObject:
_constantValue
null
initWithCapacity:
countByEnumeratingWithState:objects:count:
isNSString__
addObject:
_propertyType
name
expressionResultType
numberWithInteger:
expression
objectAtIndex:
setName:
unsignedIntegerValue
setExpressionResultType:
setExpression:
initForReadingFromData:error:
setDelegate:
allowableClassesForClientWithContext:
setByAddingObjectsFromSet:
fetchRequestWithEntityName:
_setFlagsFromXPCEncoding:
setSortDescriptors:
setPredicate:
setHavingPredicate:
setRelationshipKeyPathsForPrefetching:
setFetchOffset:
unsignedLongValue
setFetchLimit:
setFetchBatchSize:
_newDenormalizedFetchProperties:
setPropertiesToFetch:
setPropertiesToGroupBy:
entityName
_XPCEncodedFlags
sortDescriptors
predicate
substitutionVariables
predicateWithSubstitutionVariables:
defaultInstance
createPredicateForFetchFromPredicate:
havingPredicate
relationshipKeyPathsForPrefetching
fetchOffset
fetchLimit
fetchBatchSize
resultType
propertiesToFetch
propertiesToGroupBy
drain
encodeForXPC
decodeFromXPCArchive:withContext:andPolicy:
copy
objectsToInsert
_secureOperation
decodeObjectOfClass:forKey:
decodeIntegerForKey:
decodeBoolForKey:
encodeInteger:forKey:
encodeBool:forKey:
initForRequest:
inputStream
secure
_entityName
_objectsToInsert
_inputStream
_resultType
_secure
T@"NSString",R,&,N,V_entityName
T@"NSArray",R,&,N,V_objectsToInsert
T@"NSInputStream",R,&,N,V_inputStream
TQ,R,N,V_resultType
TB,R,N,V_secure
initRequiringSecureCoding:
finishEncoding
encodedData
setWithObject:
initWithEntityName:objects:
setResultType:
_setSecureOperation:
decodeFromXPCArchive:withContext:withPolicy:
propertiesToUpdate
allValues
constantValue
includesSubentities
setWithObjects:
objectForKey:
setObject:forKey:
columnsToUpdate
nullValueCount
includeSubEntities
_predicate
_columnsToUpdate
_nullValueCount
_includeSubEntities
T@"NSPredicate",R,&,N,V_predicate
T@"NSDictionary",R,&,N,V_columnsToUpdate
Tq,R,N,V_resultType
Tq,R,N,V_nullValueCount
TB,R,N,V_includeSubEntities
initWithEntityName:
setPropertiesToUpdate:
setIncludesSubentities:
fetchRequest
fetchData
_fetchData
T@"NSData",R,&,N,V_fetchData
initWithFetchRequest:
token
storeTokens
date
isDelete
isFetchTransactionForToken
percentageOfDB
decodeInt64ForKey:
encodeInt64:forKey:
delete
transactionFromToken
_token
_date
_delete
_transactionFromToken
_fetchLimit
_fetchOffset
_fetchBatchSize
_percentageOfDB
T@"NSDictionary",R,&,N,V_token
T@"NSDate",R,&,N,V_date
TB,R,N,V_delete
TB,R,N,V_transactionFromToken
TQ,R,N,V_fetchLimit
TQ,R,N,V_fetchOffset
TQ,R,N,V_fetchBatchSize
TQ,R,N,V_percentageOfDB
deleteHistoryBeforeToken:whenHistoryPercentageOfStoreIsGreaterThan:
deleteHistoryBeforeToken:
fetchHistoryAfterToken:
fetchHistoryTransactionForToken:
deleteHistoryBeforeDate:whenHistoryPercentageOfStoreIsGreaterThan:
deleteHistoryBeforeDate:
fetchHistoryAfterDate:
identifier
currentQueryGenerationToken
unpinnedQueryGenerationToken
stringWithFormat:
initWithObjects:
_compoundPredicateClassesForSecureCoding
_extendedExpressionClassesForSecureCoding
_operatorClassesForSecureCoding
classesForArchiving
addObjectsFromArray:
initWithSet:
setValue:forKey:
reason
userInfo
valueForKey:
callStackSymbols
initWithObjectsAndKeys:
bytes
length
dictionaryWithObject:forKey:
errorWithDomain:code:userInfo:
entity
arrayWithCapacity:
isTransient
_isRelationship
initForKeys:
objectAtIndexedSubscript:
initWithSearchStrategy:
setValues:
initWithObjects:count:store:metadata:
sqlCore
configurationName
fileURLWithPath:
initWithPersistentStoreCoordinator:configurationName:URL:options:
model
adapter
_disablePersistentStoreResultCaching
objectIDFactoryForSQLEntity:
setForeignEntityKeySlot:entityKey:
instanceMethodForSelector:
setForeignOrderKeySlot:orderKey:
setForeignKeySlot:int64:
setOptLock:
entityForID:
allocateBatch:count:
newBatchRowAllocation:count:forSQLEntity:withOwnedObjectIDs:andTimestamp:
setObjectID:
initWithPK64:
initWithSQLEntity:ownedObjectID:andTimestamp:
toOneRelationship
destinationEntity
initWithString:
URLWithString:
propertyDescription
_isFileBackedFuture
dataWithBytes:length:
fileBackedFuturesDirectory
fileURLWithPath:isDirectory:
initWithStoreMetadata:directory:
initWithUUIDBytes:
_setValues:retain:
knownKeyValuesPointer
initWithObjects:count:andFlags:andContext:
objectID
URIRepresentation
initWithURI:
timeIntervalSinceReferenceDate
dateWithTimeIntervalSinceReferenceDate:
nostoresQueryGenerationToken
archiver:willEncodeObject:
replacementObjectForXPCConnection:encoder:object:
_persistentStoreCoordinator
managedObjectIDForURIRepresentation:
exceptionWithName:reason:userInfo:
boolValue
managedObjectModel
isEqualToString:
entities
entitiesForConfiguration:
isToMany
isOrdered
initWithStore:
initWithManagedObjectModel:configurationName:
initForStore:
isNSDictionary__
isNSNumber__
options
integerValue
processInfo
processName
initForMessage:store:
_isOnExtendedTimeout
debugDefault
code
_doCleanupForXPCStore:context:
domain
remoteStoreChangedNotificationName
initForObservationWithName:store:
load:
loadMetadata:
_updatedMetadataWithSeed:includeVersioning:
_setMetadataDirty:
_setMetadata:includeVersioning:
propertyListWithData:options:format:error:
entityVersionHashesByName
performBlockAndWait:
performBlock:
setEntity:
lastObject
_queryGenerationToken__
allocationType
setAllocationType:
bufferedAllocationsOverride
arrayWithObject:
arrayWithObjects:
getObjects:range:
initWithObjects:count:andFlags:
initWithPFArray:andRequest:andContext:
version
managedObjectContext
numberWithBool:
metadata
initForStore:request:metadata:forceInsertsToUpdates:context:
insertedObjects
sourceObject
initWithResultType:andObject:
_resolveEntityWithContext:
initWithResultType:andResult:
requestType
_propertyRangesByType
initWithObjectID:withValues:version:
initWithNode:
_isEnabled
objectWithID:
stalenessInterval
array
dictionaryWithObjectsAndKeys:
firstObject
objectRegisteredForID:
newValuesForObjectWithID:withContext:error:
valueForPropertyDescription:
dictionary
allKeys
indexForKey:
_allowCoreDataFutures
willRemoveFromPersistentStoreCoordinator:
supportsConcurrentRequestHandling
type
setURL:
setIdentifier:
_rawMetadata__
setMetadata:
supportsGenerationalQuerying
currentQueryGeneration
_hasActiveGenerations
freeQueryGenerationWithIdentifier:
reopenQueryGenerationWithIdentifier:error:
managedObjectContextDidRegisterObjectsWithIDs:generation:
managedObjectContextDidUnregisterObjectsWithIDs:generation:
executeRequest:withContext:error:
newValueForRelationship:forObjectWithID:withContext:error:
obtainPermanentIDsForObjects:error:
newForeignKeyID:entity:
_metadata
_cache
_fileBackedFuturesDirectory
_connectionManager
_model
_core
_sanityCheckToken
_observer
_remoteStoreChangedNotificationName
_stateLock
T@"NSString",R,C,V_remoteStoreChangedNotificationName
ancillaryModels
ancillarySQLModels
initWithArray:
inverseRelationship
setWithArray:
initWithSource:destinations:forRelationship:inContext:
minusSet:
primitiveValueForKey:
isFault
removeObject:
initWithObjectID:fromSQLRow:
objectIDFactoryForEntity:
_storeInfo1
_setStoreInfo1:
currentChangeToken
_objectIDClass
_storeInfoForEntityDescription:
_newObjectIDForEntityDescription:pk:
connectionManager
setDebugDefault:
entityDescription
entityDescriptionWithContext:
ancillaryModelNamespace
storeID
transactionNumber
timestamp
bundleID
processID
contextName
author
changes
distantFuture
notificationWithName:object:
copyWithZone:
T@"NSEntityDescription",R
T@"NSFetchRequest",R
initialQueryGenerationToken
postQueryGenerationToken
objectIDNotification
T@"NSDate",R,C
T@"NSArray",R,C
Tq,R
T@"NSString",R,C
T@"NSPersistentHistoryToken",R
_referenceData64
doubleValue
persistentStore
longLongValue
numberWithLongLong:
numberWithDouble:
isNSData__
fetchHistoryAfterTransaction:
result
notificationWithName:object:userInfo:
changedObjectID
changeType
dictionaryWithCapacity:
dictionaryWithDictionary:
initWithDictionary:andObjectID:
_backingObjectID
_rowIdentifier
_timestamp
_changes
_storeID
_bundleID
_processID
_contextName
_author
_queryGeneration
_coordinator
requiresSecureCoding
isMemberOfClass:
_managedObjectReferenceURI
initWithRequest:context:sqlCore:
initWithBlock:context:sqlCore:
isWritingRequest
executeRequestCore:
_workBlock
persistentStoreRequest
request
setIncludesPropertyValues:
setShouldRefreshRefetchedObjects:
setIncludesPendingChanges:
fetchStatement
setResult:
executePrologue
_fetchRequestForObjectsToDelete
_deleteStatements
_deletedObjectIDs
_fetchContext
_externalDataReferenceTriggerStatements
_externalDataReferencesToDelete
_fileBackedFuturesToDelete
T@"NSBatchDeleteRequest",R,N
initWithFormat:arguments:
UTF8String
initWithDate:
initWithToken:
initWithTransactionToken:
initWithDate:delete:
initWithToken:delete:
initWithDate:delete:percentageOfDB:
initWithToken:delete:percentageOfDB:
initWithTransactionID:delete:transactionOnly:percentageOfDB:
transactionIDs
propertiesToFetchForEntity:includeTransactionStrings:
arrayWithObjects:count:
expressionForEvaluatedObject
expressionForKeyPath:
attributeKeys
initWithUnsignedInteger:
predicateWithValue:
initWithStoreIdentifier:
andPredicateWithSubpredicates:
predicateWithFormat:
fetchHistoryWithFetchRequest:
deleteHistoryBeforeTransaction:
initWithTransactionIDs:
propertiesToFetchForEntity:
entityNameToFetch
isPercentageDelete
useQueryGenerationToken
setUseQueryGenerationToken:
setFetchRequest:
predicateForStoreIdentifier:
debugDescription
_transactionIDs
_transactionNumber
_persistentHistoryChangeRequestDescriptionFlags
_additionalPrivateIvars
Tq,V_resultType
T@"NSPersistentHistoryToken",R,V_token
T@"NSFetchRequest",&,N
dictionaryWithObjects:forKeys:count:
initWithInteger:
initWithObjects:forKeys:
initWithKey:ascending:
sortedArrayUsingDescriptors:
initWithSubresults:
_aggregatedResult
T@,R,V_aggregatedResult
Tq,R,V_resultType
initWithManagedObjectModel:configuration:mirroringDelegateOptions:
attributesByName
attributeType
valueTransformerName
valueTransformerForName:
allowsReverseTransformation
stringForAttributeType:
isOptional
allowsCloudEncryption
useDeviceToDeviceEncryption
preservesValueInHistoryOnDeletion
defaultValue
enumerateKeysAndObjectsUsingBlock:
relationshipsByName
containsObject:
deleteRule
uniquenessConstraints
stringWithUTF8String:
appendString:
enumerateObjectsUsingBlock:
componentsSeparatedByString:
initWithFormat:
initWithZoneName:ownerName:
size
localizedCaseInsensitiveCompare:
sortUsingSelector:
componentsJoinedByString:
propertiesByName
_configurationName
_skipValueTransformerValidation
_validateLegacyMetadataAttributes
_options
arrayWithArray:
arrayByAddingObject:
initWithDictionary:
removeObjectsForKeys:
isEqualToDictionary:
initWithMachServiceName:
initWithServiceName:
serviceListener
initWithOptions:
initWithKeyPointerFunctions:valuePointerFunctions:capacity:
initWithContentsOfURL:
initForStoreWithURL:usingModel:options:policy:
resume
invalidate
intValue
willPerformRecoveryForError:fromContext:
performRecoveryForError:fromContext:
identifierForConnection:
initWithManagedObjectModel:
addPersistentStoreWithType:configuration:URL:options:error:
removeObjectForKey:
setUserInfo:
initWithCoordinator:
setInterruptionHandler:
setInvalidationHandler:
auditToken
coordinator
initForToken:entitlementNames:cache:
setExportedObject:
class
self
performSelector:
performSelector:withObject:
performSelector:withObject:withObject:
isProxy
isKindOfClass:
conformsToProtocol:
respondsToSelector:
zone
superclass
TQ,R
T#,R
handleRequest:reply:
interfaceWithProtocol:
setExportedInterface:
currentConnection
initWithConnectionInfo:
shouldAcceptConnectionsFromClientWithContext:
initWithConcurrencyType:
setPersistentStoreCoordinator:
_setDelegate:
entitlements
setMergePolicy:
setUndoManager:
setManagedObjectContext:
transactionAuthor
setTransactionAuthor:
persistentStores
reset
listener:shouldAcceptNewConnection:
initForStoreWithURL:usingModelAtURL:options:policy:
startListening
errorHandlingDelegate
setErrorHandlingDelegate:
_delegate
_modelURL
_storeURL
_storeOptions
_entitlementNames
_listener
_policy
_connectionToCoordinatorMap
_cacheIDtoCoordinatorMap
T@"<NSXPCStoreServerDelegate>",&,N,V_delegate
cache
setQueryGenerationFromToken:error:
_setVersionReference__:
values
existingObjectWithID:error:
mutableSetValueForKey:
shouldAcceptMetadataChangesFromClientWithContext:
willAccessValueForKey:
isDeleted
detectConflictsForObject:
restrictingWritePredicateForEntity:fromClientWithContext:
evaluateWithObject:
deleteObject:
initWithEntity:insertIntoManagedObjectContext:
processPendingChanges
processRequest:fromClientWithContext:error:
setStalenessInterval:
processFaultForRelationshipWithName:onObjectWithID:fromClientWithContext:error:
processFaultForObjectWithID:fromClientWithContext:error:
dataWithPropertyList:format:options:error:
_retainedCurrentQueryGeneration:
currentPersistentHistoryTokenFromStores:
indexOfObject:inRange:
methodForSelector:
indexOfObjectIdenticalTo:inRange:
_setParentBuffer:
classForKeyedUnarchiver
accessInstanceVariablesDirectly
classForCoder
indexOfObject:
indexOfObjectIdenticalTo:
_setPurgeable:
getObjects:
mutableCopyWithZone:
_cd_rc
_count
_resultSet
_weakRequestStore
mapping
valueAtIndex:
decimalNumberWithString:
_storeBinaryDataExternally
initWithStoreBytes:length:externalLocation:safeguardLocation:protectionLevel:
defaultManager
stringWithFileSystemRepresentation:length:
externalDataReferencesDirectory
stringByAppendingPathComponent:
fileExistsAtPath:
bufferOffset
cfDeallocator
setParentObject:
numberWithInt:
keys
initWithArray:forTarget:withReferenceValues:andRange:
initWithObjects:forKeys:count:
keyEnumerator
_parent_buffer
_sql_entity_id
_primary_key
nextObject
_target
_keys
_referenceItems
_range
_index
_entitlements
_userInfo
_lock
inverseIsToOnePrefetchRequestForRelationshipNamed:onEntity:
manyToOnePrefetchRequestForRelationshipNamed:onEntity:
manyToManyPrefetchRequestsForRelationshipNamed:onEntity:
notificationManager
setNotificationManager:
_context
_info
_manager
initWithSQLCore:
_prefetchRequestCache
_generationTokenMap
_transaction
_connections
_clientIdentifier
T@"NSPersistentStoreCoordinator",R,N,V_coordinator
restrictingReadPredicateForEntity:fromClientWithContext:
includesPropertyValues
executeFetchRequest:error:
_snapshot_
expressionForConstantValue:
predicateWithLeftExpression:rightExpression:modifier:type:options:
initWithKeyPath:
initWithLeftExpression:rightExpression:modifier:type:options:
allObjects
updatedObjects
lockedObjects
entitiesByName
notPredicateWithSubpredicate:
deletedObjects
save:
executeRequest:error:
restrictingPullChangeHistoryPredicateForEntity:fromClientWithContext:
subentitiesByName
subentities
removeObjectAtIndex:
isKindOfEntity:
initWithOptions:andTimestamp:
_node
_messageCode
_messageBody
_contextTransactionAuthor
_processName
_automaticallyPruneTransientRecords
_transactionLimit
initWithMachServiceName:options:
newEndpoint
initWithListenerEndpoint:
setRemoteObjectInterface:
synchronousRemoteObjectProxyWithErrorHandler:
_store
_connection
setValueTransformer:forName:
isReadOnly
isCloudKitEnabled
mirroringDelegate
databaseScope
initWithStore:metadataContext:databaseScope:metricsClient:
isEqualToSet:
isEqualToData:
sqlString
whitespaceAndNewlineCharacterSet
stringByTrimmingCharactersInSet:
manyToManyRelationships
hasPrefix:
ancillaryEntityOffset
_setModelsReferenceIDOffset:
setEntities:
_setIsEditable:
setManagedObjectClassName:
setUniquenessConstraints:
objectForKeyedSubscript:
setValueTransformerName:
createMapOfEntityIDToPrimaryKeySetForObjectIDs:fromStore:
isTemporaryID
cStringUsingEncoding:
numberWithUnsignedInt:
_invalidateStaticCaches
ancillaryEntityCount
createMapOfEntityIDToPrimaryKeySetForObjectIDs:
allowedTopLevelClasses
recordZone
ckRecordName
initWithRecordName:zoneID:
ckRecordSystemFields
recordID
recordName
recordType
finishDecoding
entityId
entityPK
entityPath
setAffectedStores:
zoneID
zoneName
ownerName
insertNewObjectForEntityForName:inManagedObjectContext:
setCkRecordName:
assignObject:toPersistentStore:
UUID
UUIDString
stringByAppendingFormat:
setEntityId:
setEntityPK:
setRecordZone:
stringByAppendingString:
ckRecordZoneName
ckOwnerName
numberWithUnsignedInteger:
setReturnsObjectsAsFaults:
moveReceipts
initWithReceiptsToEncode:
archivedDataWithRootObject:requiringSecureCoding:error:
unarchivedObjectOfClass:fromData:error:
createRecordIDForMovedRecord
setRecordMetadata:
setMovedAt:
setNeedsCloudDelete:
setZoneName:
setOwnerName:
setRecordName:
enumerateArchivedRecordIDsUsingBlock:
compressedDataUsingAlgorithm:error:
decompressedDataUsingAlgorithm:error:
insertMetadataForObject:setRecordName:inZoneWithID:recordNamePrefix:error:
encodeRecord:error:
recordFromEncodedData:error:
T@"NSString",R,N
createRecordFromSystemFields
createEncodedMoveReceiptData:
mergeMoveReceiptsWithData:error:
T@"NSString",&,D,N
T@"NSData",&,D,N
encodedRecord
T@"NSNumber",&,D,N
ckShare
T@"NSCKRecordZoneMetadata",&,D,N
needsUpload
TB,D,N
needsLocalDelete
needsCloudDelete
lastExportedTransactionNumber
pendingExportTransactionNumber
pendingExportChangeTypeNumber
T@"NSSet",&,D,N
movedAt
_zoneIDToArchivedReceipts
derivationExpression
columnName
count:
selector
tableName
correlationTableName
initWithEntity:sqlString:
appendFormat:
propertyType
expressionType
canonical:
uppercase:
lowercase:
min:
max:
sum:
stringByReplacingOccurrencesOfString:withString:
keyPath
arguments
random
anyObject
initFileURLWithPath:
substringFromIndex:
encryptedValues
isValidMirroredRelationshipRecord:values:
setNeedsDelete:
setIsUploaded:
cdEntityName
relationshipName
initWithRecordID:forRecordWithID:relatedToRecordWithID:byRelationship:withInverse:andType:
relatedEntityName
pendingRelationships
recordZoneName
recordZoneOwnerName
relatedRecordZoneName
relatedRecordZoneOwnerName
relatedRecordName
isInserted
superentity
initWithUpdatedRecords:deletedRecordTypeToRecordIDs:options:fileBackedFuturesDirectory:
_updatedRecords
_deletedRecordTypeToRecordID
_modifiedRecords
_updatedRelationships
_deletedRelationships
_deletedMirroredRelationshipRecordIDs
_recordTypeToRecordIDToObjectID
_recordTypeToUnresolvedRecordIDs
_metadatasToLink
_importOperations
_mirroringOptions
_recordMetadata
_insertedObject
addEntriesFromDictionary:
initWithName:reason:userInfo:
errorObjectWithUserInfo:
_code
_domain
minimalFormInContext:
_keypathsForDerivedPropertyValidation:
minimalFormInContext:ofPredicate:
rightExpression
operatorType
leftExpression
isNSOrderedSet__
comparisonPredicateModifier
initWithType:subpredicates:
minimalFormInContext:ofPredicates:
predicateOperatorType
allowEvaluation
predicateOperator
initWithPredicateOperator:leftExpression:rightExpression:
subpredicates
collection
predicateFormat
valueForKeyPath:
operand
_newKeyPathExpressionForString:
initWithOperand:andKeyPath:
initWithExpressionType:operand:selector:argumentArray:
_mapKVCOperatorsToFunctionsInContext:
substringWithRange:
removeLastObject
expressionForFunction:selectorName:arguments:
expressionForFunction:arguments:
characterAtIndex:
rangeOfString:
rangeOfString:options:
variableExpression
initWithExpression:usingIteratorExpression:predicate:
localizedStandardRangeOfString:
trueExpression
falseExpression
initWithSource:forRelationship:asFault:
setArray:
descriptionWithLocale:
descriptionWithLocale:indent:
willRead
enumerateObjectsWithOptions:usingBlock:
enumerateObjectsAtIndexes:options:usingBlock:
indexOfObjectWithOptions:passingTest:
indexOfObjectAtIndexes:options:passingTest:
indexesOfObjectsWithOptions:passingTest:
indexesOfObjectsAtIndexes:options:passingTest:
objectEnumerator
insertObject:atIndex:
replaceObjectAtIndex:withObject:
alloc
turnIntoFault
source
relationship
_realArray
_source
_relationship
_flags
T@"NSManagedObject",R,N
T@"NSPropertyDescription",R,N
fault
TB,R,N,GisFault
_entitysReferenceID
willReadWithContents:
setSet:
member:
objectsWithOptions:passingTest:
intersectsSet:
isSubsetOfSet:
makeObjectsPerformSelector:
makeObjectsPerformSelector:withObject:
intersectSet:
removeAllObjects
_shouldProcessKVOChange
_isIdenticalFault:
replacementObjectForCoder:
_realSet
_classShouldAlwaysRegisterSelectorNamed:
_createMutationMethodsForClass:forKey:
_addObjectMethod
_removeObjectMethod
_addMethod
_removeMethod
_intersectMethod
_setMethod
migrationDebugLevel
setMigrationDebugLevel:
renamingIdentifier
initWithDomain:code:userInfo:
mappingType
setEntityMappings:
sourceEntityName
destinationEntityName
expressionForVariable:
expressionForFetch:context:countOnly:
setSourceExpression:
setAttributeMappings:
setRelationshipMappings:
_isSchemaEqual:
setSourceEntityName:
versionHash
setSourceEntityVersionHash:
setDestinationEntityName:
setDestinationEntityVersionHash:
setMappingType:
initWithPropertyName:valueExpression:
initWithObjects:count:
storesBinaryDataExternally
setValueExpression:
minCount
initWithSourceModel:destinationModel:
_sourceModel
_destinationModel
_currentEntityMapping
_error
initWithValue:
index
setIndex:
value
setValue:
setTableName:
_value
_tableName
TI,N,V_index
T@,&,N,V_value
T@"NSString",&,N,V_tableName
initForConnection:
_limitedStatement
_unlimitedStatement
_substVarBindOrdering
_substIntarrayBindOrdering
createPredicateForFetchFromPredicate:withContext:
acceptVisitor:flags:
modifier
isNegation
initWithOperatorType:modifier:negate:options:
initWithOperatorType:modifier:options:
setContext:
setPredicateOperator:
visitPredicate:
visitPredicateExpression:
visitPredicateOperator:
initWithContext:
initWithInt:
_previousKeyPathExpressionWasToken
fileSystemRepresentation
lastPathComponent
_pid
_termstatus
initWithSet:copyItems:
willChangeValueForKey:withSetMutation:usingObjects:
didChangeValueForKey:withSetMutation:usingObjects:
initWithContainer:key:mutableSet:
_container
_key
_mutableSet
coloredLoggingDefault
useConcurrentFetching
initWithObjectID:context:sqlCore:
rowCache
executeRequestUsingConnection:
executeEpilogue
_sqlCore
_persistentStoreRequest
_exception
_result
_transactionID
_useColoredLogging
_useConcurrentFetching
_hasHistoryTracking
_storeIsInMemory
T@"NSPersistentStoreRequest",R,N,V_persistentStoreRequest
T@,&,N,V_result
T@"NSSQLRowCache",R,N
TB,R,N
initWithOptions:request:
defaultRecordZoneIDForDatabaseScope:
addUpdatedRecord:
setRecordFetchedBlock:
setQueryCompletionBlock:
addOperation:
initWithRequest:success:madeChanges:error:
initWithQuery:
setZoneID:
queryCursor
setCursor:
requestIdentifier
modificationDate
compare:
applyAccumulatedChangesToStore:inManagedObjectContext:withStoreMonitor:madeChanges:error:
setMostRecentRecordModificationDate:
setLastFetchDate:
setQueryCursor:
lastFetchDate
updateMetadataForAccumulatedChangesInContext:inStore:error:
setNeedsImport:
queries
commitMetadataChangesWithContext:forStore:error:
initForRecordType:withOptions:request:
executeImportOperationsAndAccumulateRecordsWithManagedObjectContext:completion:
_recordType
_maxModificationDate
_queryCursor
_zoneIDToQuery
compare:options:range:
_caseInsensitiveNumericCompare:
setURL:forPersistentStore:
_setURL:forPersistentStore:withCoordinator:
_mutationMethods
foreignKeyColumns
foreignEntityKeyColumns
foreignOrderKeyColumns
attributeColumns
isConstrained
sqlType
initWithInt64:sqlType:
initWithUnsignedInt:sqlType:
slot
attributeDescription
initWithValue:sqlType:propertyDescription:
attributes
_statement
_adapter
_sqlString
_whereClause
_selectList
concurrencyType
newArrayFromObjectIDs
subarrayWithRange:
arrayFromObjectIDs
managedObjectIDAtIndex:
indexOfManagedObjectForObjectID:
_objectsPointer
_array
_weakContext
numberWithUnsignedLongLong:
affectedStores
_setTransaction:
initWithDictionary:andChangeObjectID:
returnsObjectsAsFaults
returnsDistinctResults
setReturnsDistinctResults:
shouldRefreshRefetchedObjects
_setDisablePersistentStoreResultCaching:
_fetchBatchLRUEntriesLimit
_newSubArrayInRange:asMutable:
initWithPFArray:inRange:
_turnAllBatchesIntoFaults
_turnAllBatchesIntoObjects
rangeCount
rangeAtIndex:
indexSet
addIndex:
initWithIndexesInRange:
sortedArrayUsingFunction:context:
sortedArrayUsingFunction:context:hint:
sortedArrayUsingSelector:
sortedArrayUsingComparator:
sortedArrayWithOptions:usingComparator:
filteredArrayUsingPredicate:
retainedObjectAtIndex:
_pinnedObjectAtIndex:
isEqualToArray:
objectsAtIndexes:
_entryFlags
_moc
_request
_batchSize
_LRUBatches
initWithPFBatchFaultingArray:
transaction
initWithPFArray:
_editCount
_offset
_limit
_originalArray
_updatedObjectsArray
_indicesVeneer
_replaceObject:atIndex:
_values
_sourceData
isEqualToOrderedSet:
initWithArray:andContext:
_underlyingArray
_weakmoc
_allowAncillaryEntities
_modelsReferenceIDOffset
setSubstitutionVariables:
stringValue
valueWithBytes:objCType:
value:withObjCType:
initWithBytes:objCType:
getValue:
objCType
charValue
unsignedCharValue
shortValue
unsignedShortValue
unsignedIntValue
longValue
unsignedLongLongValue
floatValue
_slotLimit
_objectsByTemporaryID
_objectsByPermanentObjectID
_objectsBy64bitPKID
_capacitiesFor64bitPKMappings
_modelMap
initWithFunction:withArgument:andPriority:
_task
lock
condition
isFinishedFlag
bundleForClass:
mainBundle
bundleWithPath:
hasSuffix:
localizedStringForKey:value:table:
persistentStoreForIdentifier:
initWithBytes:length:
data
getCString:maxLength:encoding:
environment
standardUserDefaults
stringForKey:
integerForKey:
boolForKey:
hasExternalReferenceContent
_externalReferenceLocation
_originalData
_safeguardLocation
preferredProtectionLevel
path
_bytesLengthForExternalReference
getBytes:range:
doCleanupOnDealloc
_safeguardLocationString
initWithContentsOfFile:options:error:
externalReferenceLocationString
removeItemAtPath:error:
copyItemAtPath:toPath:error:
isFileURL
initWithBytesNoCopy:length:encoding:freeWhenDone:
reverseTransformedValue:
transformedValue:
initWithOrderedSet:
indexSetWithIndexesInRange:
replaceObjectsAtIndexes:withObjects:
removeObjectsAtIndexes:
insertObjects:atIndexes:
caseInsensitiveCompare:
_createDictionaryPartitioningObjects:intoHierarchies:
_createDictionaryPartitioningObjectIDs:intoHierarchies:
isUbiquitousItemAtURL:
getResourceValue:forKey:error:
queryGenerationToken
hasChanges
_frameworkHash
wrapBlockInGuardedAutoreleasePool:
_object
_objectAddress
unlock
tryLock
_owner
contentsOfDirectoryAtPath:error:
stringByDeletingLastPathComponent
createDirectoryAtURL:withIntermediateDirectories:attributes:error:
_storeLinksDirs
_filesToCleanUp
appendBytes:length:
getCharacters:
initWithCharactersNoCopy:length:freeWhenDone:
getBytes:maxLength:usedLength:encoding:options:range:remainingRange:
appendData:
initWithBytesNoCopy:length:freeWhenDone:
_underlyingProperty
_setupForKeys:count:table:inData:
_action
initWithUTF8String:
cString
_fastCStringContents:
_fastCharacterContents
fastestEncoding
smallestEncoding
getCharacters:range:
_isCString
getCString:
cStringLength
_length
_parentObject
isFileBackedFuture
_referenceData
metadataForPersistentStoreWithURL:error:
addCacheNodes:
cacheNodes
willRemoveCacheNodes:
cacheNodeForObjectID:
newCacheNodeForManagedObject:
updateCacheNode:fromManagedObject:
newReferenceObjectForManagedObject:
objectIDForEntity:referenceObject:
referenceObjectForObjectID:
_nodeCache
_entityCache
_storeMetadata
_nextReference
_reserved4
_reserved5
expressionValueWithObject:context:
isCountOnlyRequest
requestExpression
initForKeys:count:
removeObjectsInRange:
numberWithUnsignedLong:
_subentitiesIncludes:
sortUsingDescriptors:
_versionNumber
_setVersionNumber:
_didLoadMetadata
_preflightCrossCheck
managedObjectContextDidRegisterObjectsWithIDs:
managedObjectContextDidUnregisterObjectsWithIDs:
_subresults
progress
cancel
initWithContext:andProgress:completetionBlock:
_cancelProgress
_isCancelled
operationError
setOperationError:
_requestProgress
_requestError
_requestContext
_requestCompletionBlock
T@"NSError",&,V_requestError
T@"NSManagedObjectContext",R,V_requestContext
T@"NSProgress",R
_setAsyncResultHandle:
initForFetchRequest:withContext:andProgress:completetionBlock:
finalResult
_fetchRequest
_finalResult
_intermediateResultCallback
T@"NSAsynchronousFetchRequest",R,V_fetchRequest
T@"NSArray",R
numberWithLong:
initWithResult:ofType:
T@,R,V_result
initWithObjectID:
propertyCache
setPropertyCache:
_objectID
__versionNumber
_propertyCache
_reserved1
T@"NSManagedObjectID",R,N
T@"NSMutableDictionary",&,N
encodeInt:forKey:
attributeValueClassName
isIndexed
_encodedAttributeFlagsForFlags:
encodeInt32:forKey:
numberWithFloat:
failWithError:
decodeIntForKey:
decodeInt32ForKey:
_extraIVars
decodeDoubleForKey:
setIndexed:
_isEqual:skipIndexCheck:
_attributeTypeIsSchemaEqual:
_throwIfNotEditable
setAttributeValueClassName:
_hasMinValueInExtraIvars
_hasMaxValueInExtraIvars
validationPredicates
absoluteString
predicateWithBlock:
validationWarnings
_allowsCloudEncryption
_preserveValueOnDelete
setAttributeType:
setDefaultValue:
allowsExternalBinaryDataStorage
setAllowsExternalBinaryDataStorage:
setAllowsCloudEncryption:
setPreservesValueInHistoryOnDeletion:
preserveValueOnDeletionInPersistentHistory
setPreserveValueOnDeletionInPersistentHistory:
_type
_attributeValueClass
_valueTransformerName
_attributeValueClassName
_defaultValue
T@"NSString",C
T@,&
T@"NSData",R,C
_initWithName:
_isTriggerBacked
isNSDate__
_rawValidationPredicates
_rawValidationWarnings
_comparePredicatesAndWarnings:
_createCachesAndOptimizeState
_replaceValidationPredicates:andWarnings:
_nonPredicateValidateValue:forKey:inObject:error:
_versionHash:inStyle:
_initWithName:type:withClassName:
_initWithName:type:
initWithDouble:
initWithFloat:
initWithTimeIntervalSinceReferenceDate:
unarchivedObjectOfClasses:fromData:error:
_appendPropertyFieldsToData:propertiesDict:uniquedPropertyNames:uniquedStrings:uniquedData:entitiesSlots:
replaceBytesInRange:withBytes:
setIsFileBackedFuture:
_isEqualWithoutIndex:
_epsilonEquals:rhs:withFlags:
_initWithType:
_writeIntoData:propertiesDict:uniquedPropertyNames:uniquedStrings:uniquedData:entitiesSlots:fetchRequests:
initWithProperty:
setExternalType:
externalType
property
externalName
attribute
_externalType
_externalPrecision
_externalScale
generatedNameSuffix
_retain_1
_release_1
isSubclassOfClass:
initWithUnsignedLongLong:
initWithBytes:length:encoding:
pathComponents
initWithEntity:andUUIDString:
_setPersistentStore:
setObjectStoreIdentifier:
_isPersistentStoreAlive
_retainedURIString
automaticallyNotifiesObserversForKey:
classWithStore:andEntity:
_usesTaggedPointers
managedObjectIDFromUTF8String:length:
managedObjectIDFromURIRepresentation:
_storeDeallocated
_storeIdentifier
_fallbackFactory
_preferReferenceData64
_referenceData48_cd_rc16
_taggedPoolIndex
_fallbackFactories
initWithRequest:serializedObjects:error:
serializedObjects
_serializedObjects
T@"NSDictionary",R,N,V_serializedObjects
doURLStuff:createdStubFile:readOnly:error:options:
doFilesystemCleanupOnRemove:
initWithStore:fromPath:
metadataForPersistentStoreWithURL:options:error:
setMetadata:forPersistentStoreWithURL:options:error:
setMetadata:forPersistentStoreWithURL:error:
saveDocumentToPath:
subdataWithRange:
setRequiresSecureCoding:
setDecodingFailurePolicy:
error
fileHandleForUpdatingAtPath:
readDataOfLength:
seekToFileOffset:
initForWritingWithMutableData:
_writeMetadataData:andMapDataData:toFile:error:
closeFile
fileHandleForReadingAtPath:
writeToFile:options:error:
_databaseVersion
_fullMetadata
_primaryKeyGeneration
_mapData
setByAddingObjectsFromArray:
_propertySearchMapping
fastIndexForKnownKey:
dataForKey:
initWithValues:objectID:
_attributes
_attributesAsEncoded
fileExistsAtPath:isDirectory:
removeObject:objectIDMap:
addObject:objectIDMap:
destinationsForRelationship:
dataWithCapacity:
initWithStore:fromArchivedData:
updateObject:objectIDMap:
retainedObjectIDsForRelationship:forObjectID:
handleFetchRequest:
_theMap
entityForName:inManagedObjectContext:
allocWithEntity:
_entityDeallocated
isAbstract
encodeConditionalObject:forKey:
versionHashModifier
initWithName:elements:
_setEntity:
setRenamingIdentifier:
setCompoundIndexes:
JSONObjectWithData:options:error:
indexes
coreSpotlightDisplayNameExpression
setCoreSpotlightDisplayNameExpression:
managedObjectClassName
getObjects:andKeys:count:
_addSubentity:
_valueCountByEnumeratingWithState:objects:count:
_addProperty:
_MOClassName
_addEntity:
getBytes:length:
properties
sortDescriptorWithKey:ascending:
elements
string
lowercaseString
initWithProperty:collationType:
containsString:
propertyName
collationType
isAscending
setSubentities:
relationshipsWithDestinationEntity:
setProperties:
setAbstract:
setVersionHashModifier:
setIndexes:
compoundIndexes
_snapshotClass
_versionHashModifier
_versionHash
_classNameForEntity
_instanceClass
_name
_rootentity
_superentity
_subentities
_properties
_propertyMapping
_propertyRanges
_entityDescriptionFlags
_extraIvars
_flattenedSubentities
_kvcPropertyAccessors
_modelsReferenceIDForEntity
T@"NSManagedObjectModel",R
abstract
TB,GisAbstract
T@"NSDictionary",R,C
T@"NSArray",&
T@"NSDictionary",&,N
T@"NSArray",C
T@"NSExpression",&,N
_setEntityAndMaintainIndices:
setElementID:
elementID
keypathsToPrefetchForDeletePropagation
isEditable
maxCount
_isGeneratedClass
classForEntity:
_localRelationshipNamed:
_flattenProperties
_isEditable
sortUsingFunction:context:
isIndexedBySpotlight
isStoredInExternalRecord
_setEntitysReferenceID:
_newMappingForPropertiesOfRange:
initWithKey:ascending:selector:
initWithPropertyDescription:
_stripForMigration
_restoreValidation
initWithName:predicate:elements:entity:
partialIndexPredicate
_addFactoryToRetainList:
_uniquenessConstraintsAsFetchIndexes
_propertyWithRenamingIdentifier:
toManyRelationshipKeys
toOneRelationshipKeys
inverseForRelationshipKey:
_offsetRelationshipIndex:fromSuperEntity:andIsToMany:
_newSnowLeopardStyleDictionaryContainingPropertiesOfType:
_leopardStyleRelationshipsByName
_leopardStyleAttributesByName
_skipValidation
_writeIntoData:propertiesDict:uniquedPropertyNames:uniquedStrings:uniquedData:uniquedMappings:entities:
_createValuePrimitiveSetterWithContainerClassID:key:
ivar
method
containerClassID
_createValuePrimitiveGetterWithContainerClassID:key:
_createValueSetterWithContainerClassID:key:
_createValueGetterWithContainerClassID:key:
_initWithSourceEntityDescription:destinationEntityDescription:
attributeMappings
relationshipMappings
sourceEntityVersionHash
destinationEntityVersionHash
sourceExpression
entityMigrationPolicyClassName
initWithData:
setEntityMigrationPolicyClassName:
_reserved
_mappingsByName
_mappingType
_sourceEntityName
_sourceEntityVersionHash
_destinationEntityName
_destinationEntityVersionHash
_sourceExpression
_entityMigrationPolicyClassName
_attributeMappings
_relationshipMappings
_entityMappingFlags
T@"NSData",C
T@"NSExpression",&
destinationContext
valueExpression
associateSourceInstance:withDestinationInstance:forEntityMapping:
sourceInstancesForEntityMappingNamed:destinationInstances:
destinationEntityForEntityMapping:
orderedSetWithSet:
orderedSetWithArray:
orderedSetWithObject:
beginEntityMapping:manager:error:
createDestinationInstancesForSourceInstance:entityMapping:manager:error:
endInstanceCreationForEntityMapping:manager:error:
createRelationshipsForDestinationInstance:entityMapping:manager:error:
endRelationshipCreationForEntityMapping:manager:error:
performCustomValidationForEntityMapping:manager:error:
endEntityMapping:manager:error:
_nonNilValueOrDefaultValueForAttribute:source:destination:
initWithExternalName:
propertyMappings
primaryKeys
isSingleTableEntity
subentityColumn
subentityID
initWithEntity:
_entity
_propertyMappings
_primaryKeys
_isSingleTableEntity
_subentityColumn
_subentityID
setReadOnly:
_reservedtype1_1
_reservedtype1_2
_reservedtype1_3
_reservedtype1_4
_reservedtype1_5
_reservedtype1_6
_reservedtype2_1
_reservedtype2_2
_underlyingAttribute
_expression
_expressionResultType
_externalReferenceCount
_externalRefFlags
_toManyMap
_birth
fulfillFault:withContext:error:
fulfillFault:withContext:
willFireFault
_willChangeValuesForKeys:
_didChangeValuesForKeys:
didFireFault
awakeFromFetch
_isToManyRelationship
fulfillFault:withContext:forIndex:
retainedFulfillAggregateFaultForObject:andRelationship:withContext:
localizedDescription
retainedOrderedFaultInformationForAggregateFaultForObject:andRelationship:withContext:error:
_newOrderedRelationshipInformationForRelationship:forObjectWithID:withContext:error:
turnObject:intoFaultWithContext:
willTurnIntoFault
didTurnIntoFault
_setFaultingError:
context:shouldHandleInaccessibleFault:forObjectID:andTrigger:
shouldHandleInaccessibleFault:forObjectID:triggeredByProperty:
changeID
shortStringForChangeType:
updatedProperties
tombstone
stringForChangeType:
T@"NSManagedObjectID",R,C
T@"NSPersistentHistoryTransaction",R
T@"NSSet",R,C
toManyRelationships
initWithLength:
mutableBytes
_changeID
_changedObjectID
_changeType
_tombstone
_columns
_sqlEntity
initForIndexDescription:sqlEntity:
stringWithString:
sqlEntity
indexDescription
generateStatementsForStore:
dropStatementsForStore:
bulkUpdateStatementsForStore:
setTransient:
_reserved6
_lazyFetchRequestEntityName
T@"NSFetchRequest",&
_message
initWithBool:
allocationSize
includesPendingChanges
purgeableResult
_encodedFetchRequestFlagsForFlags:
setPurgeableResult:
_stringForFetchRequestResultType:
execute:
setAllocationSize:
_groupByProperties
_havingPredicate
_valuesToFetch
_sortDescriptors
_allocationSize
_relationshipKeyPathsForPrefetching
TB,N
T@"NSEntityDescription",&,N
T@"NSPredicate",&,N
T@"NSArray",&,N
TQ,N
T@"NSArray",C,N
_isCachingFetchRequest
_asyncResultHandle
_isAsyncRequest
_setFetchBatchLRUEntriesLimit:
_copyForDirtyContext
_incrementInUseCounter
_activityType
_storePath
setEventIdentifier:
setCloudKitEventType:
setStartedAt:
initWithCKEvent:
setEndedAt:
success
setSucceeded:
setErrorDomain:
setErrorCode:
eventIdentifier
T@"NSUUID",&,D,N
cloudKitEventType
Tq,D,N
startedAt
T@"NSDate",&,D,N
endedAt
succeeded
errorDomain
errorCode
countAffectedObjects
countFinishedObjects
defaultCenter
postNotificationName:object:
.cxx_destruct
_queue
_psc
initWithExpressionType:
initForFetch:context:countOnly:
countForFetchRequest:error:
contextExpression
_expressionWithSubstitutionVariables:
_reserved2
_reserved3
_managedObjectContext
T@"NSExpression",R
countOnlyRequest
TB,R,GisCountOnlyRequest
initWithSourceAttributeName:destinationAttributeName:
decodeObjectForKey:
_sourceAttributeName
_destinationAttributeName
numberWithShort:
_reserved64
_table
getObjects:andKeys:
initWithDictionary:copyItems:
getKeys:
setValue:atIndex:
_subclassesMustBeExplicitlyMentionedWhenDecoded
_keySearch
_list
newInstanceWithSearchStrategy:inData:
TQ,R,N
T^@,R,N
T@"NSArray",R,N
T@"NSKnownKeysMappingStrategy",R,N
applyToSet:
_diffObject
_setGenericValue:forKey:withIndex:flags:
_genericValueForKey:withIndex:flags:
_PFPlaceHolderSingleton
willChangeValueForKey:
didChangeValueForKey:
willChange:valuesAtIndexes:forKey:
didChange:valuesAtIndexes:forKey:
alloc_10_4
allocWithZone_10_4:
_descriptionValues
substringToIndex:
insertObject:
_transientPropertiesChangesMask__
didAccessValueForKey:
mutableArrayValueForKey:
_genericMutableSetValueForKey:withIndex:flags:
_genericMutableOrderedSetValueForKey:withIndex:flags:
mutableOrderedSetValueForKey:
setValuesForKeysWithDictionary:
dictionaryWithValuesForKeys:
raise
_PFPlaceHolderSingleton_core
contextShouldIgnoreUnmodeledPropertyChanges
isUpdated
hasFaultForRelationshipNamed:
setObservationInfo:
observationInfo
awakeFromInsert
awakeFromSnapshotEvents:
prepareForDeletion
willSave
didSave
validateValue:forKey:error:
validateForDelete:
validateForInsert:
validateForUpdate:
setPrimitiveValue:forKey:
dictionaryWithPropertyValues
committedValuesForKeys:
changedValues
valueForUndefinedKey:
setValue:forUndefinedKey:
setNilValueForKey:
faultingState
changedValuesForCurrentEvent
hasPersistentChangedValues
objectIDsForRelationshipNamed:
_cd_lockingInfo
_cd_stateFlags
_cd_extraFlags
_cd_rawData
_cd_managedObjectContext
_cd_objectID
_cd_extras
_cd_queueReference
T@"NSManagedObjectContext",R,N
T@"NSEntityDescription",R,N
inserted
TB,R,N,GisInserted
updated
TB,R,N,GisUpdated
deleted
TB,R,N,GisDeleted
bindableObjectPublisher
setBindableObjectPublisher:
willRefresh:
didRefresh:
_newPropertiesForRetainedTypes:andCopiedTypes:preserveFaults:
_newChangedValuesForRefresh__
_newSnapshotForUndo__
_newCommittedSnapshotValues
_changedTransientProperties__
initWithIndex:
addObjects:count:
initWithContainer:key:mutableOrderedSet:
_propagateDelete:
_localizationPolicy
localizedEntityNameForEntity:
localizedPropertyNameForProperty:
replaceOccurrencesOfString:withString:options:range:
_validatePropertiesWithError:
_useFastValidationMethod
_validateForSave:
localizedModelStringForKey:
removeObjectsInArray:
_updateFromRefreshSnapshot:includingTransients:
_updateFromUndoSnapshot:
_initWithEntity:withID:withHandler:withContext:
_versionReference__
_implicitObservationInfo
_didChangeValue:forRelationship:named:withInverse:
_orderedObjectsAndKeys
_reorderObjectsToLocationsByOrderKey:error:
_orderKeysForRelationshipWithName__:
_updateLocationsOfObjectsToLocationByOrderKey:inRelationshipWithName:error:
_deletedRecordIDs
_recordTypeToDeletedRecordID
_records
_recordIDs
_sizeInBytes
signatureWithObjCTypes:
implementsSelector:
_isGeneratedClass_1
_PFMOClassFactoryData
resolveInstanceMethod:
allocBatch:withEntity:count:
allocateBatch:forEntity:count:
_initializeAccessorStubs
_initializePrimitiveAccessorStubs
_isOrdered
_defaultValidation:error:
methodSignatureForSelector:
batchAllocateWithEntity:insertIntoManagedObjectContext:count:
_hasOverriddenAwake
resolveClassMethod:
lastIndex
getIndexes:maxCount:inIndexRange:
replaceObjectsInRange:withObjects:count:
numberWithChar:
shouldDeleteInaccessibleFaults
discardEditing
_forgetObject:propagateToObjectStore:removeFromRegistry:
_setQueryGenerationFromToken:error:
_dealloc__
currentQueue
maxConcurrentOperationCount
_parentObtainPermanentIDsForObjects:context:error:
postNotificationName:object:userInfo:
mergePolicy
mergeType
resolveConflicts:error:
refreshAllObjects
initWithFetchRequest:completionBlock:
initWithResult:
_countForFetchRequest_:error:
_executeAsynchronousFetchRequest:
currentProgress
initWithParent:userInfo:
estimatedResultCount
setTotalUnitCount:
setKind:
completionBlock
setCancellationHandler:
completedUnitCount
setCompletedUnitCount:
propagatesDeletesAtEndOfEvent
setPropagatesDeletesAtEndOfEvent:
_mergeRefreshObject:mergeChanges:withPersistentSnapshot:
undo
redo
decodeFloatForKey:
encodeFloat:forKey:
parentContext
object
_mergeChangesFromRemoteContextSave:intoContexts:
_mergeChangesFromDidSaveDictionary:usingObjectIDs:
registeredObjects
refreshObject:mergeChanges:
performWithOptions:andBlock:
_validateQueryGeneration:error:
automaticallyMergesChangesFromParent
setAutomaticallyMergesChangesFromParent:
_changeTrackingToken__
removeObserver:name:object:
_automaticallyMergeChangesFromContextDidSaveNotification:
addObserver:selector:name:object:
mergeChangesFromContextDidSaveNotification:
isEditing
commitEditing
invocationWithMethodSignature:
setSelector:
setArgument:atIndex:
invokeWithTarget:
performSelector:withObject:afterDelay:inModes:
_managedObjectContextEditor:didCommit:contextInfo:
commitEditingWithDelegate:didCommitSelector:contextInfo:
mergeChangesFromRemoteContextSave:intoContexts:
objectWillChange:
setRetainsRegisteredObjects:
retainsRegisteredObjects
setShouldDeleteInaccessibleFaults:
undoManager
observeValueForKeyPath:ofObject:change:context:
rollback
setParentContext:
_setChangeTrackingTokenFromToken:error:
objectDidBeginEditing:
objectDidEndEditing:
commitEditingAndReturnError:
_queueOwner
_spinLock
_dispatchQueue
_parentObjectStore
_undoTransactionID
_ignoreChangeNotification
_lockCount
_unprocessedChanges
_unprocessedDeletes
_unprocessedInserts
_insertedObjects
_deletedObjects
_changedObjects
_lockedObjects
_refreshedObjects
_infoByGID
_cachedObsInfoByEntity
_fetchTimestamp
_referenceCallbackRegistration
_referenceQueue
_contextLabel
_persistentStoreIdentifiers
T@"NSPersistentStoreCoordinator",&
T@"NSManagedObjectContext",&
T@"NSUndoManager",&,N
T@"NSMutableDictionary",R,N
T@"NSSet",R,N
T@"NSQueryGenerationToken",R,N
lockObjectStore
unlockObjectStore
initWithInsertedObjects:updatedObjects:deletedObjects:lockedObjects:
_countWithNoChangesForRequest:error:
_countWithMergedChangesForRequest:possibleChanges:possibleDeletes:error:
initWithName:object:userInfo:
setGroupsByEvent:
isUndoRegistrationEnabled
removeAllActions
_retainedObjectWithID:optionalHandler:withInlineStorage:
_committedSnapshotForObject:
_currentEventSnapshotForObject:
_retainedObjectsFromRemovedStore:
_setDisableDiscardEditing:
_disableDiscardEditing
_setAllowAncillaryEntities:
_establishEventSnapshotsForObject:
_undoInsertions:
_undoDeletionsMovedToUpdates:
registerUndoWithTarget:selector:object:
_undoDeletions:
_undoUpdates:
groupsByEvent
isUndoing
isRedoing
beginUndoGrouping
_clearChangedThisTransaction:
disableUndoRegistration
enableUndoRegistration
_processRecentChanges:
endUndoGrouping
_forceInsertionForObject:
_noop:
_processEndOfEventNotification:
_willChange_Swift_Trampoline
instancesRespondToSelector:
_undoManagerCheckpoint:
removeAllActionsWithTarget:
_storeConfigurationChanged:
_processChangedStoreConfigurationNotification:
postNotification:
_implicitObservationInfoForEntity:forResultingClass:
defaultQueue
enqueueNotification:postingStyle:
_processReferenceQueue:
_setAllowsExpandedUserInfoKeys:
setShouldRefreshAfterSave:
shouldRefreshAfterSave
setShouldPerformSecureOperation:
shouldPerformSecureOperation
performBlockWithResult:
_orderedSetWithResultsFromFetchRequest:
_stopConflictDetectionForObject:
_mergeChangesFromRemoteContextSave:
_signalRunloop
_rlObserver
_processing
_copyChildObject:toParentObject:fromChildContext:
initWithOwnedKKsD:andVersion:
_snapshot
_version
_allOrderKeysForDestination:inRelationship:error:
_orderKeysForRelationshipWithName__:onObjectWithID:
_updateLocationsOfObjectsToLocationByOrderKey:inRelationshipWithName:onObjectWithID:error:
_performImmediate:
T@"NSQueryGenerationToken",R
_generationIdentifier
T@"NSPersistentStore",R,W
temporaryID
TB,R,GisTemporaryID
getUUIDBytes:
_temporaryIDCounter
modelByMergingModels:
fetchRequestTemplatesByName
fetchRequestTemplateForName:
addPolicy:
_setLocalizationPolicy:
setFetchRequestTemplate:forName:
versionIdentifiers
initWithPath:
modelByMergingModels:forStoreMetadata:
_modelForVersionHashes:
_initWithEntities:
_initWithContentsOfURL:options:
setEntities:forConfiguration:
setVersionIdentifiers:
_ensureFullLocalizationDictionaryIsLoaded
localizationDictionary
initWithURL:
setLocalizationDictionary:
mergedModelFromBundles:
mergedModelFromBundles:forStoreMetadata:
configurations
fetchRequestFromTemplateWithName:substitutionVariables:
isConfiguration:compatibleWithStoreMetadata:
_dataForOptimization
_optimizationHints
_entities
_configurations
_fetchRequestTemplates
_versionIdentifiers
_managedObjectModelFlags
T@"NSDictionary",&
T@"NSSet",C
pathExtension
dictionaryWithContentsOfURL:error:
_setIsEditable:optimizationStyle:
_optimizedEncoding:
initWithManagedObjectModel:configurationName:retainHashHack:
entityNamed:
initWithContentsOfURL:forStoreMetadata:
versionsHashesForModelAtURL:error:
versionHashes:compatibleWithStoreMetadata:
optimizedVersionURL
currentVersionURL
initWithContentsOfOptimizedURL:
initWithContentsOfFile:
base64EncodedStringWithOptions:
bundlePath
pathsForResourcesOfType:inDirectory:
initWithLong:
immutableCopy
_debugOptimizedModelLayout
Tq,N,S_setModelsReferenceIDOffset:
initWithScope:
initWithConstantValue:inScope:context:
generateSQLStringInContext:
initWithConstantValue:ofType:inScope:context:
governingAlias
expressionForSubquery:usingIteratorVariable:predicate:
initWithExpression:trailingKeypath:inScope:
initWithProperties:values:inScope:
isUpdateColumnsScoped
governingAliasForKeypathExpression:
_propertiesToUpdate
_valuesToUpdateTo
pathForResource:ofType:
dictionaryWithContentsOfFile:
currentVersion
urlForModelVersionWithName:
URLsForResourcesWithExtension:subdirectory:
modelVersions
_modelForVersionHashes:inStyle:
_bundle
_versionInfoDictionary
recordIDForObjectID:
URLByDeletingLastPathComponent
initWithStore:otherStore:
populate:
mirroredRelationshipForObject:relatedToObject:byRelationship:
mtmKeysForStore:
recordIDsRelatedToRecordID:byRelationshipNamed:inStore:
metadataForObjectWithID:
recordIdsForStore:
objectIDForRecordID:inStore:
identityRecordNameForStoreWithIdentifier:
databaseScopeForStoreWithIdentifier:
sharedZoneIDsForStore:
mtmKeysForRecordZone:inStore:
objectIDForIdentifier:inStore:
identifiersForStore:
deriveIdentifierForNonCloudObjectID:
_setCheckCloudKitMetadata:
store
otherStore
storeMoc
otherStoreMoc
checkCloudKitMetadata
_storeUUIDToStoreCache
_checkCloudKitMetadata
_otherStore
_storeMoc
_otherStoreMoc
T@"NSPersistentStore",R,N,V_store
T@"NSPersistentStore",R,N,V_otherStore
T@"NSManagedObjectContext",R,N,V_storeMoc
T@"NSManagedObjectContext",R,N,V_otherStoreMoc
TB,R,N,V_checkCloudKitMetadata
encodedShareData
_identifiers
_identifierToObjectID
_mtmKeyToMirroredRelationship
_mtmKeys
_zoneIDToMTMKeys
_recordIDToRelationshipNameToRelatedRecordIDs
_recordIDToMetadata
_objectIDToRecordMetadata
_recordIDToObjectID
_objectIDToRecordID
_recordZones
_sharedRecordZones
_recordZoneIDToRecordIDs
_identityRecordName
_databaseScopeNumber
nextPK64
_entitiesToFetch
eventTypeString:
storeIdentifier
startDate
endDate
_succeeded
_ckEventObjectID
_identifier
_startDate
_endDate
T@"NSUUID",R,N,V_identifier
T@"NSString",R,N,V_storeIdentifier
Tq,R,N,V_type
T@"NSDate",R,N,V_startDate
T@"NSDate",R,N,V_endDate
TB,R,N,V_succeeded
T@"NSError",R,N,V_error
setElements:
setPartialIndexPredicate:
_compare:
_elements
_partialIndexPredicate
T@"NSPredicate",C
entityMappings
_initWithEntityMappings:
dataWithContentsOfURL:
_newMappingModelFromBundles:forSourceHashes:destinationHashes:
mappingModelFromBundles:forSourceModel:destinationModel:
inferredMappingModelForSourceModel:destinationModel:error:
entityMappingsByName
_entityMappings
_entityMappingsByName
_modelMappingFlags
allBundles
allFrameworks
doWorkForStore:inMonitor:completion:
_disableSQLStatementCaching
foreignKey
_prefetchRequestsByEntity
performPrimitiveOperationUsingObject:andObject:
coordinate
initWithNestingLevel:
generateTableAlias
isWhereScoped
initWithWorkingEntity:target:bounds:scope:
_bounds
initWithSource:newVersion:oldVersion:snapshot1:snapshot2:snapshot3:
initWithSource:newVersion:oldVersion:cachedSnapshot:persistedSnapshot:
ancestorSnapshot
objectSnapshot
cachedSnapshot
persistedSnapshot
newVersionNumber
oldVersionNumber
_snapshot1
_snapshot2
_snapshot3
_newVersion
_oldVersion
T@"NSManagedObject",R,&,V_source
T@"NSDictionary",R,&,V_snapshot1
T@"NSDictionary",R,&,V_snapshot2
T@"NSDictionary",R,&,V_snapshot3
TQ,R,V_newVersion
TQ,R,V_oldVersion
conflictingObjects
constraint
databaseObject
initWithConstraint:databaseObject:databaseSnapshot:conflictingObjects:conflictingSnapshots:
_isDBConflict
constraintValues
conflictingSnapshots
databaseSnapshot
_constraint
_databaseObject
_databaseSnapshot
_conflictedValues
_conflictingObjects
_conflictingSnapshots
T@"NSArray",R,C,V_constraint
T@"NSDictionary",R,C,V_conflictedValues
T@"NSManagedObject",R,&,V_databaseObject
T@"NSDictionary",R,&,V_databaseSnapshot
T@"NSArray",R,C,V_conflictingObjects
T@"NSArray",R,C,V_conflictingSnapshots
initWithMergeType:
_mergeChangesStoreUpdatesTrumpForObject:withRecord:
_mergeChangesObjectUpdatesTrumpForObject:withRecord:
mergeToManyRelationshipForSourceObject:withOldSnapshot:newSnapshot:andAncestor:andLegacyPath:
resolveOptimisticLockingVersionConflicts:error:
resolveConstraintConflicts:error:
errorMergePolicy
mergeByPropertyStoreTrumpMergePolicy
mergeByPropertyObjectTrumpMergePolicy
overwriteMergePolicy
rollbackMergePolicy
T@"NSMergePolicy",R
setOptional:
setMaxCount:
setDestinationEntity:
setInverseRelationship:
setDeleteRule:
initWithMigrationManager:
_bySourceAssociationTable
_byDestinationAssociationTable
_byMappingBySourceAssociationTable
_byMappingByDestinationAssociationTable
_migrationManager
_currentMapping
_currentStep
_currentPropertyMapping
_destinationConfigurationForCloudKitValidation
usesStoreSpecificMigrationManager
registeredStoreTypes
isNSValue__
pointerValue
migrationManagerClass
_canMigrateWithMappingModel:
sourceModel
destinationModel
destinationConfigurationForCloudKitValidation
setDestinationConfigurationForCloudKitValidation:
migrateStoreFromURL:type:options:withMappingModel:toDestinationURL:destinationType:destinationOptions:error:
currentEntityMapping
currentPropertyMapping
sourceEntityForEntityMapping:
mappingModel
sourceContext
destinationInstancesForEntityMappingNamed:sourceInstances:
destinationInstancesForSourceRelationshipNamed:sourceInstances:
migrationProgress
cancelMigrationWithError:
setUsesStoreSpecificMigrationManager:
_sourceEntitiesByVersionHash
_destinationEntitiesByVersionHash
_mappingModel
_sourceManagedObjectContext
_destinationManagedObjectContext
_migrationContext
_migrationManagerFlags
_migrationCancellationError
T@"NSString",&,N,V_destinationConfigurationForCloudKitValidation
T@"NSMappingModel",R
T@"NSManagedObjectContext",R
T@"NSEntityMapping",R
Tf,R
fetchRequestForSourceEntityNamed:predicateString:includesSubentities:
removePersistentStore:error:
fetchRequestForSourceEntityNamed:predicateString:
T@"NSString",&,N
initWithSQLCore:priority:seedConnection:
initializationConnection
initWithSQLCore:seedConnection:
disconnectAllConnections
setExclusiveLockingMode:
handleStoreRequest:
scheduleBarrierBlock:
scheduleConnectionsBarrier:
_filter
initForSQLCore:
enumerateAvailableConnectionsWithBlock:
_availableConnections
_allConnections
_poolCounter
_connectionLock
_processingQueue
isWritableFileAtPath:
classForStore:
_unload:
didAddToPersistentStoreCoordinator:
_url
_oidFactories
_defaultFaultHandler
_temporaryIDClass
_coreSpotlightDelegate
_managedObjectModel
_entitiesInConfiguration
T@"NSPersistentStoreCoordinator",R,W,N
T@"NSDictionary",R
T@"NSURL",&
readOnly
TB,GisReadOnly
cachedModelForPersistentStoreWithURL:options:error:
_prepareForExecuteRequest:withContext:error:
_isCloudKitOptioned
_setupObserver
entityIDForEntityDescription:
propertyNamesInHistoryChangeDataForEntityDescription:
_rebuildIndiciesSynchronously:
finishDeferredLightweightMigration:withError:
_entitiesForConfiguration
rowCacheClass
_replacePersistentStoreAtURL:destinationOptions:withPersistentStoreFromURL:sourceOptions:error:
_destroyPersistentStoreAtURL:options:error:
_rekeyPersistentStoreAtURL:options:withKey:error:
_figureOutWhereExternalReferencesEndedUpRelativeTo:
initWithEntityName:dictionaryHandler:
initWithEntityName:managedObjectHandler:
batchInsertRequestWithEntityName:objects:
batchInsertRequestWithEntityName:dictionaryHandler:
batchInsertRequestWithEntityName:managedObjectHandler:
initWithEntity:objects:
initWithEntity:dictionaryHandler:
initWithEntity:managedObjectHandler:
dictionaryHandler
setDictionaryHandler:
managedObjectHandler
setManagedObjectHandler:
setObjectsToInsert:
_insertDictionaryHandler
_insertManagedObjectHandler
T@"NSArray",C,V_objectsToInsert
T@?,C
TQ,R,V_resultType
_insertStatementCache
_batchInsertStatementCache
_deletionStatementCache
_faultingStatementCache
_toManyRelationshipStatementCache
_correlationInsertCache
_correlationDeleteCache
_correlationMasterReorderCache
_correlationMasterReorderCachePart2
_correlationReorderCache
initWithValueCallbacks:preserveToManyRelationships:
initWithPersistentStore:
_externalData
_capacity
_externalDataValueCallbacks
_persistentStoreCacheFlags
valueWithPointer:
isReadableFileAtPath:
metadataForPersistentStoreOfType:URL:options:error:
createDirectoryAtPath:withIntermediateDirectories:attributes:error:
mirroringOptions
cloudKitContainerOptions
initWithCloudKitContainerOptions:
setMirroringDelegate:
validateManagedObjectModel:forUseWithStoreWithDescription:error:
configuration
persistentStoreCoordinator:didSuccessfullyAddPersistentStore:withDescription:
isMainThread
shouldInvokeCompletionHandlerConcurrently
shouldAddStoreAsynchronously
setOption:forMirroringKey:
_destroyPersistentStoreAtURL:withType:options:error:
_replacePersistentStoreAtURL:destinationOptions:withPersistentStoreFromURL:sourceOptions:storeType:error:
_exceptionNoStoreSaveFailureForError:recommendedFrame:
localizedFailureReason
_registerCoreDataStoreClass:forStoreType:
registerStoreClass:forStoreType:
metadataForPersistentStoreOfType:URL:error:
setMetadata:forPersistentStoreOfType:URL:options:error:
setMetadata:forPersistentStoreOfType:URL:error:
setMetadata:forPersistentStore:
metadataForPersistentStore:
addPersistentStoreWithDescription:completionHandler:
_removeAllPersistentStores:
persistentStoreForURL:
URLForPersistentStore:
migratePersistentStore:toURL:options:withType:error:
destroyPersistentStoreAtURL:withType:options:error:
replacePersistentStoreAtURL:destinationOptions:withPersistentStoreFromURL:sourceOptions:storeType:error:
_miniLock
_persistentStores
_queueLabel
_extendedStoreURLs
_lastOpenError
_xpcBundleID
_xpcProcessName
sharedApplication
endBackgroundTask:
removeObjectIdenticalTo:
_canSaveGraphRootedAtObject:intoStore:withPreviouslyChecked:withAcceptableEntities:
_doPreSaveAssignmentsForObjects:intoStores:
_checkRequestForStore:withContext:originalRequest:andOptimisticLocking:
_saveRequestForStore:withContext:originalRequest:andOptimisticLocking:
_assignObject:toPersistentStore:forConfiguration:
ubiquityStoreURLForStoreURL:ubiquityIdentityToken:ubiquityName:
currentQueryGenerationTokenFromStores:
_destroyPersistentStoreAtURL:withType:error:
_rekeyPersistentStoreAtURL:type:options:withKey:error:
_refreshTriggerValuesInStore:error:
dropPersistentHistoryforPersistentStoreWithURL:options:error:
removePersistentHistoryFromPersistentStoreAtURL:options:error:
finishDeferredLightweightMigration:
finishDeferredLightweightMigrationTask:
handleFaultingError:fromContext:
updateWithChange:
analyzedObjectID
originalTransactionNumber
originalChangeType
finalTransactionNumber
finalChangeType
finalChangeAuthor
T@"NSNumber",R,N
Tq,R,N
T@"NSDictionary",R,N
initWithOriginalChange:
_analyzedObjectID
_originalTransactionNumber
_originalChangeType
_finalTransactionNumber
_finalChangeType
_finalChangeAuthor
T@"NSManagedObjectID",R,N,V_analyzedObjectID
T@"NSNumber",R,N,V_originalTransactionNumber
Tq,R,N,V_originalChangeType
T@"NSNumber",R,N,V_finalTransactionNumber
Tq,R,N,V_finalChangeType
T@"NSDictionary",R,N,V_tombstone
T@"NSString",R,N,V_finalChangeAuthor
compoundPredicateType
initWithOperatorType:
symbol
initWithObjectFromUserInfo:onAttributeNamed:onEntity:
validate:
isEqualToExtension:
insertSQLStrings
dropSQLStrings
bulkUpdateSQLStrings
_predicateString
_attribute
_destinationEntity
_destinationAttributes
_mToManyInnerFetchWhereClause
_mToManyDecrementWhenClause
_mToManyIncrementWhenClause
_mOfClause
_mOldMatchingClause
_mNewMatchingClause
_mColumnChangedClause
_mSqlDropStrings
_mBulkChangeStrings
_insertSQLStrings
T@"NSArray",R,N,V_insertSQLStrings
batchUpdateRequestWithEntityName:
TB,N,G_secureOperation,S_setSecureOperation:
T@"NSEntityDescription",R,V_entity
T@"NSPredicate",&,V_predicate
T@"NSDictionary",C,V_columnsToUpdate
_databaseUUID
_nextPK64
_mappings
orPredicateWithSubpredicates:
moveReceiptsMatchingRecordIDs:inManagedObjectContext:persistentStore:error:
countMoveReceiptsInStore:matchingPredicate:withManagedObjectContext:error:
recordMetadata
T@"NSCKRecordMetadata",&,D,N
initWithName:managedObjectModel:
discoverDefaultContainerIdentifier
initWithContainerIdentifier:
persistentStoreDescriptions
setCloudKitContainerOptions:
containerIdentifier
setPersistentStoreDescriptions:
setProgressProvider:
setOption:forKey:
_loadStoreDescriptions:withCompletionHandler:
initWithOptions:completionBlock:
setSchemaInitializationOptions:
newBackgroundContext
requestFinished
setObjectIDsToSerialize:
executeRequest:inContext:error:
wait
objectIDsToSerialize
recordForManagedObjectID:
recordsForManagedObjectIDs:
creatorUserRecordID
fetchSharesMatchingObjectIDs:error:
currentUserParticipant
permission
preserveLegacyRecordMetadataBehavior
initWithObjectID:recordName:
initWithZoneID:
setNeedsUpload:
acceptedShareMetadatas
archivingUtilities
setEncodedShareData:
setNeedsShareUpdate:
initWithUserIdentityLookupInfos:
setShareParticipantFetchedBlock:
setFetchShareParticipantsCompletionBlock:
setNeedsShareDelete:
initWithRecordZoneID:
assignManagedObjects:toCloudKitRecordZone:inPersistentStore:error:
setNeedsLocalDelete:
setCkRecordSystemFields:
setEncodedRecord:
eventUpdated:
initializeCloudKitSchemaWithOptions:error:
recordIDForManagedObjectID:
recordIDsForManagedObjectIDs:
canUpdateRecordForManagedObjectWithID:
canDeleteRecordForManagedObjectWithID:
canModifyManagedObjectsInStore:
acceptShareInvitationsFromMetadata:intoPersistentStore:completion:
acceptShareInvitationsFromURLs:intoPersistentStore:completion:
persistUpdatedShare:inPersistentStore:completion:
fetchParticipantsMatchingLookupInfos:intoPersistentStore:completion:
purgeObjectsAndRecordsInZoneWithID:inPersistentStore:completion:
fetchSharesInPersistentStore:error:
shareManagedObjects:toShare:completion:
_operationTimeout
_metadataContext
T@"NSPersistentCloudKitContainerOptions",&
_requestGroup
_recordName
T@"NSManagedObjectID",R,N,V_objectID
T@"NSString",R,N,V_recordName
_encodedPropertyFlagsForFlags:
_initializeExtraIVars
setValidationPredicates:withValidationWarnings:
setIndexedBySpotlight:
setStoredInExternalRecord:
_validationPredicates
_validationWarnings
_propertyDescriptionFlags
_entitysReferenceIDForProperty
T@"NSString",C,N
optional
TB,GisOptional
transient
TB,GisTransient
indexed
TB,GisIndexed
indexedBySpotlight
TB,GisIndexedBySpotlight
storedInExternalRecord
TB,GisStoredInExternalRecord
_setOrdered:
isSpotlightIndexed
setSpotlightIndexed:
isStoredInTruthFile
setStoredInTruthFile:
isStoredInTruth
setStoredInTruth:
stringByDeletingPathExtension
_managedObjectContextDidSave:
controller:sectionIndexTitleForSectionName:
controller:didChangeContentWithSnapshot:
controller:didChangeContentWithDifference:
controllerDidChangeContent:
controller:didChangeObject:atIndexPath:forChangeType:newIndexPath:
controller:didChangeSection:atIndex:forChangeType:
controllerWillChangeContent:
_managedObjectContextDidChange:
_managedObjectContextDidChangeObjectIDs:
_managedObjectContextDidMutateObjectIDs:
indexAtPosition:
numberOfObjects
indexPathWithIndexes:length:
uppercaseString
indexTitle
sectionIndexTitles
deleteCacheWithName:
initWithFetchRequest:managedObjectContext:sectionNameKeyPath:cacheName:
performFetch:
_fetchedObjects
fetchedObjects
objectAtIndexPath:
indexPathForObject:
sectionIndexTitleForSectionName:
sections
sectionForSectionIndexTitle:atIndex:
sectionNameKeyPath
cacheName
_sectionNameKeyPath
_sectionNameKey
_cacheName
_remappedPredicate
_originalPredicate
_cachePath
_sortKeys
_sections
_sectionsByName
_sectionIndexTitles
_sectionIndexTitlesSections
_indexCache
_indexCacheOffsets
T@"NSFetchRequest",R,N,V_fetchRequest
T@"NSManagedObjectContext",R,N,V_managedObjectContext
T@"NSString",R,N,V_sectionNameKeyPath
T@"NSString",R,N,V_cacheName
T@"<NSFetchedResultsControllerDelegate>",N
initWithContentsOfMappedFile:
dictionaryWithObjects:forKeys:
ascending
sortUsingComparator:
changeWithObject:type:index:
changeWithObject:type:index:associatedIndex:
initWithChanges:
filteredSetUsingPredicate:
appendSectionsWithIdentifiers:
objects
appendItemsWithIdentifiers:intoSectionWithIdentifier:
reloadItemsWithIdentifiers:
bundleIdentifier
compareObject:toObject:
_initWithDestinationName:valueExpression:
_transformValidations
_propertyTransforms
_valueExpression
_propertyMappingFlags
initWithName:valueExpression:
_property
_propertyName
_prerequisiteTransform
_replaceMissingValueOnly
setMinCount:
setOrdered:
_lazyDestinationEntityName
_inverseRelationship
_lazyInverseRelationshipName
_maxCount
_minCount
_deleteRule
T@"NSEntityDescription",N
T@"NSRelationshipDescription",N
toMany
TB,R,GisToMany
ordered
TB,GisOrdered
_versionHash:inStyle:proxyContext:
destinationEntityExternalName
foreignKeys
joins
joinSemantic
_destinationEntityExternalName
_foreignKeys
_joins
_joinSemantic
_includePrivateTransactions
_updatedObjects
_optimisticallyLockedObjects
_mutatedObjectIDsNotifications
T@"NSSet",R
generateSubqueryVariableAlias
_nextTableAlias
_nextVariableAlias
_nextTempTableAlias
_tableBase
_variableBase
sharedScheduler
tearDown
newMetadataModel
URLByAppendingPathComponent:isDirectory:
loadPersistentStoresWithCompletionHandler:
handleMessage:reply:
setBundleIdentifier:
setStorePath:
setFileProtectionType:
setStoreConfigurationName:
setContainerIdentifier:
scheduledActivities
activityType
containerProvider
setActivityUUID:
setActivityType:
setRegisteredClient:
setScheduledAt:
activityUUID
initWithIdentifier:container:priority:
setAdditionalXPCActivityCriteria:
additionalXPCActivityCriteria
populateFromCriteria:
scheduler
registerActivityIdentifier:handler:
submitActivity:
initWithUUIDString:
registeredClient
storePath
storeConfigurationName
setConfiguration:
fileProtectionType
setAutomaticallyScheduleImportAndExportOperations:
addObserverForName:object:queue:usingBlock:
finishedActivity:withResult:inManagedObjectContext:
removeObserver:
unregisterActivityIdentifier:
xpcActivityCriteria
fileDescriptor
checkAndCreateDirectoryAtURL:wipeIfExists:error:
initWithCString:encoding:
setUp
T@"PFCloudKitContainerProvider",R,N
T@"CKScheduler",R,N
initWithListener:configuration:
listener
_initialized
_configuration
_metadataContainer
_initializationGroup
_lastInitializationError
_containerProvider
_scheduler
T@"NSXPCListener",R,N,V_listener
T@"CDDCloudKitServerConfiguration",R,C,N,V_configuration
T@"PFCloudKitContainerProvider",R,N,V_containerProvider
T@"CKScheduler",R,N,V_scheduler
initWithEntity:propertyDescription:
initForReadOnlyFetching
initForReadOnlyFetchWithExpression:
initWithValue:sqlType:propertyDescription:allowCoercion:
setInt64:
setUnsignedInt:
int64
unsignedInt
setSQLType:
hasObjectValue
allowsCoercion
setTombstonedPropertyDescription:
tombstonedPropertyDescription
_sqlType
_propertyDescription
_tombstonedPropertyDescription
_int64
validateForUseWithStore:error:
entityNameToAttributesToFetch
setEntityNameToAttributesToFetch:
setEntityNameToAttributeNamesToFetch:
setObjectIDsToFetch:
objectIDsToFetch
_objectIDsToFetch
_entityNameToAttributesToFetch
_entityNameToAttributeNamesToFetch
_editable
_perOperationObjectThreshold
T@"NSArray",C,N,V_objectIDsToFetch
T@"NSDictionary",R,C,N
initWithRequest:success:madeChanges:updatedObjectIDs:failedObjectIDToError:error:
updatedObjectIDs
failedObjectIDsToError
_updatedObjectIDs
_failedObjectIDsToError
T@"NSArray",R,N,V_updatedObjectIDs
T@"NSDictionary",R,N,V_failedObjectIDsToError
hasRecordZoneNum
setHasRecordZoneNum:
hasSubscriptionNum
setHasSubscriptionNum:
setCkRecordZoneName:
setCkOwnerName:
setDatabase:
fetchZoneIDsAssignedToObjectsWithIDs:fromStore:inContext:error:
hasRecordZone
setHasRecordZone:
hasSubscription
setHasSubscription:
T@"CKServerChangeToken",&,D,N
database
T@"NSCKDatabaseMetadata",&,D,N
records
mirroredRelationships
supportsFetchChanges
supportsAtomicChanges
supportsRecordSharing
supportsZoneSharing
needsImport
needsRecoveryFromZoneDelete
needsRecoveryFromUserPurge
needsShareUpdate
needsShareDelete
needsRecoveryFromIdentityLoss
keypathExpressionIsSafeLHSForIn:
initWithExpression:allowToMany:inScope:
initForIndexNamed:onEntity:properties:ranges:inScope:
_indexName
_ranges
cloneForReadOnlyFetching
copyValuesForReadOnlyFetch:
initWithColumnName:sqlType:
_columnName
initWithPredicate:inScope:
initWithPredicate:inScope:inContext:
disambiguatingEntity
disambiguationKeypath
disambiguationKeypathHasToMany
isOrScoped
setDisambiguatingEntity:withKeypath:hasToMany:
_subclauses
_disambiguatingEntity
_disambiguationKeypath
_disambiguationKeypathHasToMany
cloudKitMetadataTransformerName
isTargetColumnsScoped
governingEntityForKeypathExpression:
_lastScopedItem
isIndexScoped
initWithOptions:managedObjectContext:store:
isPrivateTransaction:
processTransaction:withContext:error:
isPrivateTransactionAuthor:
isPrivateContextName:
initWithOptions:managedObjectContext:
instantiateNewAnalyzerContextForChangesInStore:
_lastProcessedToken
createFetchRequestContextForObjectsToUpdate
_updateStatement
T@"NSBatchUpdateRequest",R,N
distantPast
_newZeroingDataWithBytes:length:
initWithManagedObjectModel:configurationName:brokenHashVersion:
sourceEntity
whitespaceCharacterSet
initWithObjectID:relationship:context:sqlCore:
initWithRequest:context:sqlCore:idSets:columnName:
initWithResultDictionary:storeID:
setObject:forKeyedSubscript:
rootEntity
initForEntitiesAndCounts:context:sqlCore:
removeItemAtURL:error:
copyItemAtURL:toURL:error:
moveItemAtURL:toURL:error:
initAsQueryGenerationTrackingConnectionForSQLCore:
registerCurrentQueryGenerationWithStore:
setColoredLoggingDefault:
presentedItemURL
presentedItemOperationQueue
relinquishPresentedItemToReader:
relinquishPresentedItemToWriter:
savePresentedItemChangesWithCompletionHandler:
accommodatePresentedItemDeletionWithCompletionHandler:
presentedItemDidMoveToURL:
presentedItemDidChange
presentedItemDidChangeUbiquityAttributes:
presentedItemDidGainVersion:
presentedItemDidLoseVersion:
presentedItemDidResolveConflictVersion:
accommodatePresentedSubitemDeletionAtURL:completionHandler:
presentedSubitemDidAppearAtURL:
presentedSubitemAtURL:didMoveToURL:
presentedSubitemDidChangeAtURL:
presentedSubitemAtURL:didGainVersion:
presentedSubitemAtURL:didLoseVersion:
presentedSubitemAtURL:didResolveConflictVersion:
primaryPresentedItemURL
observedPresentedItemUbiquityAttributes
T@"NSURL",R,C
T@"NSOperationQueue",R,&
objectIDFactoryForPersistentHistoryEntity:
_newObjectIDForEntity:referenceData64:
hasAncillaryModels
_schemaValidationConnection
_dispatchManager
_generationalRowCache
_sqlCoreStateLock
_externalDataReferencesDirectory
_externalDataLinksDirectory
_fileBackedFuturesPath
_transactionInMemorySequence
_metadataIsClean
_sqlCoreFlags
_queryGenerationTrackingConnection
_writerSerializationMutex
_ancillaryModels
_ancillarySQLModels
_historyTrackingOptions
_dbKey
_usedIndexes
_remoteStoresDidChange
_remoteNotificationToken
T@"NSSQLModel",R,N
T@"NSDictionary",R,N,V_ancillaryModels
setPreviousServerChangeToken:
setRecordZoneWithIDChangedBlock:
setRecordZoneWithIDWasDeletedBlock:
setRecordZoneWithIDWasPurgedBlock:
setChangeTokenUpdatedBlock:
setFetchDatabaseChangesCompletionBlock:
setCurrentChangeToken:
initWithChangedRecordZoneIDs:options:request:
initWithDeletedRecordZoneID:options:request:
initWithPurgedRecordZoneID:options:request:
madeChanges
_workItems
_workItemResults
_updatedDatabaseChangeToken
_totalImportedBytes
initWithEntity:inverseToMany:
setConstrained:
containsIndex:
addIndexes:
initWithModel:entityDescription:
_entityDescription
_propertyAllCache
_propertiesAllToManysCache
_propertyManyToManyCache
_columnsToFetch
_ekColumns
_fkColumns
_fokColumns
_attrColumns
_virtualFKs
_primaryKey
_entityKey
_optLockKey
_rootEntity
_mappingGenerator
_entityID
_subentityMaxID
_toOneRange
_uniqueProperties
_multicolumnUniquenessConstraints
_fetch_entity_plan
_rtreeIndices
_odiousHashHackStorage
_derivedAttributes
_derivedAttributeExtension
_sqlentityFlags
initWithError:annotation:
_entries
_annotation
_allowToMany
selectIntermediate
progressProvider
subpathsAtPath:
URLByAppendingPathComponent:
containerOptions
accountStatus
deviceToDeviceEncryptionAvailability
accountInfoWithCompletionHandler:
publicCloudDatabase
privateCloudDatabase
sharedCloudDatabase
initWithRecordZonesToSave:recordZoneIDsToDelete:
setModifyRecordZonesCompletionBlock:
setNeedsRecoveryFromIdentityLoss:
capabilities
setSupportsFetchChanges:
setSupportsRecordSharing:
setSupportsAtomicChanges:
setSupportsZoneSharing:
initWithRecordZoneIDs:
setFetchRecordZonesCompletionBlock:
initWithSubscriptionID:
setShouldSendContentAvailable:
setNotificationInfo:
initWithSubscriptionsToSave:subscriptionIDsToDelete:
subscriptionID
setModifySubscriptionsCompletionBlock:
fetchUserRecordIDWithCompletionHandler:
setBoolValue:
setStringValue:
initWithObjectIDs:
setAutomaticallyRetryNetworkFailures:
setDiscretionaryNetworkBehavior:
initWithSetupRequest:mirroringOptions:observedStore:
_database
_databaseSubscription
_largeBlobDirectoryURL
_cloudKitSemaphore
_storeMonitor
_setupEvent
_setupRequest
_currentUserRecordID
fileHandleForWritingToURL:error:
_valid
_interrupted
_invalidated
isFunctionScoped
_promoteJoinsForSubqueryScopedKeypaths
fetchIntermediateForKeypathExpression:
fetchIntermediate
_selectClause
_groupByClause
_havingClause
_offsetClause
_groupByKeypaths
_isDictionaryCountFetch
_joinIntermediates
_joinKeypaths
initWithEntity:foreignKey:
initWithUnsignedInt:
initForReadOnlyFetchingOfEntity:toOneRelationship:
_foreignKey
_columnValue
initWithEntity:toOneRelationship:
_toOne
indexStatistics
logResetSyncNotification:
_purgedRecordZoneID
_success
initWithConstantValue:inScope:
setOperationConfiguration:
setQualityOfService:
setAllowsCellularAccess:
allowsCellularAccess
qualityOfService
operationConfiguration
_operationConfiguration
T@"CKOperationConfiguration",&,N,V_operationConfiguration
Tq,N
isUnique
average:
isSimpleKeypath:
insertString:atIndex:
isUpdateScoped
onlyFetchesAggregates
isHavingScoped
function
onesComplement:
abs:
noindex:
add:to:
from:subtract:
multiply:by:
divide:by:
modulus:by:
bitwiseAnd:with:
bitwiseOr:with:
leftshift:by:
rightshift:by:
distinct:
length:
indexed:by:
initWithEntity:alias:fetchColumns:inScope:
initWithSortDescriptors:inScope:
initWithLimit:inScope:
initWithOffset:inScope:
initWithProperties:inScope:
initWithEntity:alias:inScope:
initWithFetchIntermediate:inScope:
initForIndex:withScope:
_persistentStore
encodeSystemFieldsWithCoder:
_strictlyUnarchivedObjectOfClasses:fromData:error:
isIndexExpressionScoped
expressionIsBasicKeypath:
governingEntity
_promoteJoinsForSubqueryScopedKeypath:
_generateSQLForKeyPathExpression:allowToMany:inContext:
_generateSQLForVariableExpression:allowToMany:inContext:
bindVariables
_scope
T@"NSSQLEntity",R,N
addConstrainedEntityToPreflight:
_migrationStatements
_sqlEntitiesToCreate
_constrainedEntitiesToPreflight
_hasWorkToDo
_needsMetdataMigrationToNSCKRecordMetadata
_needsOldTableDrop
_needsMirroredRelationshipsLinkedToZone
_needsImportAfterClientMigration
_needsBatchUpdateForSystemFieldsAndLastExportedTransaction
_needsAnalyzedHistoryCheck
_currentModel
_sqlModel
_storeMetadataModel
_storeSQLModel
_storeMetadataVersion
_storeMetadataVersionHashes
cloudKitMachServiceName
createCloudKitServerWithMachServiceName:andStorageDirectoryPath:
_storeDirectoryPath
_machServiceName
compareToken:error:
_storeTokens
_bundleIdentifier
_storeFileHandle
_storeFileProtectionClass
_storeType
_storeConfigurationName
_containerIdentifier
stringByReplacingCharactersInRange:withString:
bindIntarrays
_cachedDeleteTriggersByEntity
_externalReferences
Tr^v,R,N
setDictionary:
compare:options:
query
commitTransaction
rollbackTransaction
execute
sqlStatement
initWithName:storeID:
rangeValue
_bytesPtrForStore
_bytesLengthForStore
valueWithRange:
localizedStandardCompare:
setWithSet:
dateWithTimeIntervalSince1970:
initWithSQLEntity:objectID:
indexOfObjectPassingTest:
_workingURL
_dbPath
_transactionIsOpen
_transactionIsCurrentlyReadOnly
_useSyntaxColoredLogging
_sqlStatement
_metadataColumns
_vmstatement
_rowsProcessedCount
_lastEntityKey
_finalEntity
_lastEntity
_fetchPKStatement
_updatePKStatement
_beginStatement
_commitStatement
_rollbackStatement
_vmCachedStatements
_pragmaSettings
_mObjectIDsUpdatedByTriggers
_mObjectIDsInsertedByDATriggers
_mObjectIDsUpdatededByDATriggers
_saveRequest
_statementCachesByEntity
_cachedEntityUpdateStatements
_cachedEntityConstrainedValuesUpdateStatements
_timeOutOption
_timeOutIncrement
_extraBuffersForRegisteredFunctions
_dbPathRegisteredWithBackupd
_vacuumTracker
_temporaryTables
_sqliteConnectionFlags
_debugInode
_activeGenerations
_transactionStringName
operatorWithType:modifier:options:
performOperationUsingObject:andObject:
retainedLocale
lengthOfBytesUsingEncoding:
newStringFrom:usingUnicodeTransforms:
initWithLongLong:
_sourceAlias
_destinationAlias
_correlationAlias
_direct
_substitutePK
_correlationTableName
_orderColumnName
operationID
setRecordIDs:
setDesiredKeys:
setPerRecordProgressBlock:
setPerRecordCompletionBlock:
setFetchRecordsCompletionBlock:
createMirroringResultForRequest:success:madeChanges:error:
entityNameToAttributesToUpdate
entityNameToRelationshipsToUpdate
_operationsToExecute
containerWithIdentifier:
containerID
initWithContainerID:options:
initWithCKEventFetchRequest:
fetchEventsAfterDate:
fetchEventsAfterEvent:
fetchEventsMatchingFetchRequest:
fetchRequestForEvents
_ckEventFetchRequest
_generateModel:error:
_mom
_entitiesByName
_entityDescriptionToSQLMap
_brokenHashVersion
_retainLeopardStyleDictionaries
_modelHasPrecomputedKeyOrder
_hasVirtualToOnes
_entityIDOffset
_lastEntityID
_pendingImportRequest
_pendingExportRequest
_pendingSetupRequest
_pendingDelegateResetRequest
_pendingResetRequest
_pendingFetchRecordsRequest
_pendingResetMetadataRequest
_pendingSerializationRequest
_pendingInitializeSchemaRequest
_pendingExportProgressRequest
_pendingAcceptShareInvitationRequest
_activeRequest
setFinalChangeTypeNum:
originalChangeTypeNum
finalChangeTypeNum
setOriginalChangeTypeNum:
mergeWithState:
T@"NSNumber",R,D,N
T@"NSDictionary",R,D,N
T@"NSString",R,D,N
_cachesByEntity
initWithError:completionBlock:
_causedByError
recordZones
setCkShare:
comparator
localizedCompare:
reverseNullOrder
fetch_request
requested_batch_size
sql_core
sql_model
statement_entity
current_context
row_cache
entity_for_ek_funptr
flags
totalUnitCount
isCancelled
_compoundPredicate
_allModifierPredicates
_setExpressions
_subqueries
boolValueNum
setBoolValueNum:
transformedValue
dateValue
setTransformedValue:
setIntegerValue:
setKey:
T@"NSObject<NSSecureCoding>",&,D,N
shouldDefer
allRequestClasses
initWithActivity:options:completionBlock:
requestCompletionBlock
_requestIdentifier
_deferredByBackgroundTimeout
_activity
T@"NSUUID",R,N,V_requestIdentifier
T@"NSCloudKitMirroringRequestOptions",R,C,N,V_options
T@?,R,C,N,V_requestCompletionBlock
_recordZoneIDsToReset
objectIDsToReset
setObjectIDsToReset:
_objectIDsToReset
T@"NSSet",C,N,V_objectIDsToReset
schemaInitializationOptions
_schemaInitializationOptions
TQ,N,V_schemaInitializationOptions
_extension
_knownValues
_children
_fetchIndex
_slot
constrained
TB,N,GisConstrained
variable
initForReadOnlyFetchWithEntity:propertyDescription:
inverseOrderKey:
resolveVariableExpression:inContext:
_onlyFetchesAggregates
_variableToAliasMappings
_propertyToAliasMappings
_setForeignOrderKey:
_inverse
newBatchAllocation:count:withOwnedObjectIDs:
fileSize
newObjectIDForToOne:
setIsFaultRequest:
_forConflictAnalysis
_debug
initForCorrelationTarget:alias:fetchColumns:inScope:
_entityAlias
_correlationTarget
_fetchColumns
_useDistinct
_columnAlias
_isCount
_comparisonPredicateScopedItem
_effectiveLeftExpression
_effectiveRightExpression
_bindVariables
_bindIntarrays
_isImpossibleCondition
_trackChangedRowCount
_fakeEntityForFetch
_cachedStatementInfo
_cachedSQLiteStatement
recordZonesToSave
recordZoneIDsToDelete
processAnalyzedHistoryInStore:inManagedObjectContext:error:
checkForObjectsNeedingExportInStore:andReturnCount:withManagedObjectContext:error:
exporter:willScheduleOperations:
setSavePolicy:
setModifyRecordsCompletionBlock:
setLastExportedTransactionNumber:
setPendingExportTransactionNumber:
initWithOptions:request:monitor:workQueue:
_operationIDToResult
_exportCompletionBlock
_workQueue
_exportContext
_monitor
pflogFaultLog
T@"NSObject<OS_os_log>",R
_names
checkPredicate:
_foundKeypath
setGoverningAlias:
setGoverningEntity:
_trailingKeypath
_variableExpression
_fetchIntermediate
_selectFromEntity
_selectFromCorrelationTarget
_selectEntityAlias
_governingEntityForVariable
_variableColumn
_variableAlias
_targetColumn
_targetAlias
_keypathsToPromote
_hasTrailingFunction
_onlyTrailIsCount
_subqueryHasTruePredicate
ancillaryModelFactoryClasses
clientModel
allEntities
entitiesByPath
clientEntityCount
_clientModel
_allEntities
_models
_indexedEntities
_clientEntityCount
_entityCount
_entitiesByPath
_modelEntityCounts
T@"NSManagedObjectModel",R,N,V_clientModel
T@"NSArray",R,N,V_allEntities
T@"NSDictionary",R,N,V_entitiesByPath
TQ,R,N,V_clientEntityCount
_foreignEntityKey
_foreignOrderKey
_isVirtual
_map
_relatedNodes
_externalName
capitalizedString
arrayByAddingObjectsFromArray:
migrationStoreOptionsFromStoreOptions:
sourceModelForStoreAtURL:metadata:error:
createMigrationManagerForSourceModel:destinationModel:error:
migrateStoreAtURL:withManager:metadata:options:error:
_sourceURL
_sourceConfiguration
_sourceOptions
_sourceMetadata
_destinationURL
_destinationType
_destinationConfiguration
_destinationOptions
_resourceBundles
_workingWithSkewedSource
_forcedMigration
URLForDirectory:inDomain:appropriateForURL:create:error:
stringByAppendingPathExtension:
destinationURLForMigrationSourceURL:createDocumentReplacementDirectory:error:
bits
_counter
_uuid128
_cachedObjectForKey:value:
_localizationBundle
_modelStringsFileName
_localizationDictionary
_hasSetLocalizationDictionary
_mergedPolicies
T@"NSEntityDescription",R,D
T@"NSManagedObjectID",R,D
databaseScopeNum
setDatabaseScopeNum:
setDatabaseScope:
setDatabaseName:
databaseName
sectionId
_controller
_indexTitle
_sectionOffset
_numberOfObjects
_oldSectionNumber
_sectionObjects
_sectionId
T@,R,N,V_sectionId
T@"NSString",R,N,V_name
T@"NSString",R,N,V_indexTitle
TQ,R,N,V_numberOfObjects
payload
initWithContainerIdentifier:error:
_errorCode
_errorDomain
initWithContainerIdentifier:result:
_requestClass
validateCloudKitEntityMigration
_entityMapping
_sqlValuesByColumnName
_sourceEntitiesByToOneWithNewEntityKey
_dstEntity
_srcEntity
_migrationType
_addedManyToManys
_removedManyToManys
_transformedManyToManys
_processedTransforms
_pendingTransforms
_updateUsingCopy
T@"NSSQLEntity",R,N,V_srcEntity
_updateColumns
_intarrayTable
_intarrayTableName
setWithCapacity:
_sourceRootEntity
_addedEntityMigrations
_removedEntityMigrations
_copiedEntityMigrations
_transformedEntityMigrations
_migrationByEntity
_tempTableNames
_hasComplexSchemaTransformations
_addedColumnSet
_renamedTableSet
_renamedColumnSet
_renamedMTMSet
_raisedColumnSet
_droppedEntitySet
_collapsedEntitySet
_columnsUpgradedToMandatory
_delayedDropColumnSet
T@"NSSQLEntity",R,N,V_rootEntity
initWithManagedObject:withRecordName:relatedToRecordWithRecordName:byRelationship:
initWithRecordID:recordType:managedObjectModel:andType:
initWithRecord:andValues:withManagedObjectModel:andType:
_isValidMirroredRelationshipRecord:values:
updateRelationshipValueUsingImportContext:andManagedObjectContext:error:
_relationshipDescription
_inverseRelationshipDescription
_manyToManyRecordID
_manyToManyRecordType
_ckRecordID
_relatedCKRecordID
populateRecordValues:
_relatedRecordID
_recordID
initWithOptions:monitor:assetStorageURL:workQueue:andDatabase:
_assetStorageURL
_annotatesMigrationMetadata
isEqualToValue:
_setAnnotatesMigrationMetadata:
_dstModel
_srcModel
_tableGenerationSQL
_existingTableNames
_reindexedEntities
_reindexedPropertiesByEntity
_sourceToDestinationEntityMap
_tableMigrationDescriptionsByEntity
_hasPKTableChanges
_pkTableUpdateStatements
_attributeExtensionsToUpdate
_indexesToCreate
_indexesToDrop
_defaultValueStatements
_derivationsToDrop
_derivationsToRun
_historyMigrationPropertyDataForEntityCache
_cloudKitUpdateStatements
_hasCloudKitTables
_hasDeferredLightweightMigration
initWithRecordType:recordID:
ckAssetThresholdBytes
writeToURL:options:error:
initWithFileURL:
representativeValueForAttributeType:defaultValue:
filterUsingPredicate:
fileURL
dataUsingEncoding:allowLossyConversion:
isUploaded
ckRecordID
setIsPending:
changedKeys
cloudKitSerializer:safeSaveURLForAsset:
initWithContentsOfURL:options:error:
cloudKitSerializer:failedToUpdateRelationship:withError:
needsDelete
initWithStoreMetadata:directory:originalFileURL:
initWithContentsOfURL:encoding:error:
encryptedValueStore
initWithMirroringOptions:metadataCache:recordNamePrefix:
_manyToManyRecordNameToRecord
_recordNamePrefix
_writtenAssetURLs
_metadataCache
_recordZone
_affectedStores
setEstimatedResultCount:
_estimatedResultCount
T@"NSFetchRequest",R,V_fetchRequest
T@?,R,V_requestCompletionBlock
Tq,N,V_estimatedResultCount
forwardingTargetForSelector:
_sourceBuffer
classForArchiver
setDerivationExpression:
_derivationExpression
_filteringPredicate
_payload
enumerateByteRangesUsingBlock:
getBytes:
_fileURL
_openfd
_activeMap
_mapRefCount
initWithBytesNoCopy:length:
rangeOfData:options:range:
writeToFile:atomically:
writeToURL:atomically:
_aData
_byteCount
_bytesPtrForExternalReference
initForUbiquityDictionary:store:
initForExternalLocation:safeguardLocation:data:protectionLevel:
_setBytesForExternalReference:
_writeExternalReferenceToInterimLocation
_moveExternalReferenceToPermanentLocation
_deleteExternalReferenceFromPermanentLocation
databaseValue
_createdByUbiquityImport
_ubiquitousLocation
_externalDataFlags
insertObjects:count:atIndex:
firstIndex
minusOrderedSet:
unionOrderedSet:
sortRange:options:usingComparator:
_setProcessingIdempotentKVO:
sortWithOptions:usingComparator:
_orderKeys
_grottyHack
_forcedKeys
initWithArray:copyItems:
indexOfObject:inSortedRange:options:usingComparator:
indexSetWithIndex:
moveObjectsAtIndexes:toIndex:
_shareURLsToAccept
_shareMetadatasToAccept
initWithRequest:acceptedShares:acceptedShareMetadatas:error:
acceptedShares
setAcceptedShares:
setAcceptedShareMetadatas:
_acceptedShares
_acceptedShareMetadatas
T@"NSArray",&,N,V_acceptedShares
T@"NSArray",&,N,V_acceptedShareMetadatas
operationMemoryThresholdBytes
_parsedOptions
_deletedRecordZoneID
_cd_version
_cd_flags
_cd_nullFlags_
_realFetch
_changedRecordZoneIDs
_deletedRecordZoneIDs
_purgedRecordZoneIDs
_updatedChangeToken
identifierForNewStoreAtURL:
newObjectIDForEntity:referenceObject:
_lastIdentifier
_reserveda
_reservedb
updateWithValues:version:
_insertObjectMethod
_insertMethod
_replaceMethod
_replaceObjectMethod
initWithOrderedSet:copyItems:
intersectsOrderedSet:
isSubsetOfOrderedSet:
reverseObjectEnumerator
reversedOrderedSet
indexesOfObjectsPassingTest:
exchangeObjectAtIndex:withObjectAtIndex:
setObject:atIndex:
intersectOrderedSet:
_mutableOrderedSet
_userInfoObject
_components
_attributeName
_rtreeTableName
_attributeDescription
_latProp
_longProp
_dropSQLStrings
_bulkUpdateSQLStrings
_maxConnections
activityTypeNum
setActivityTypeNum:
setIsUserRequestedBackupTask:
isUserRequestedBackupTask
scheduledAt
T@"CDDCloudKitRegisteredClient",&,D,N
setType:
sqlitePragmas
persistentStoreDescriptionWithURL:
inMemoryPersistentStoreDescription
timeout
setTimeout:
setValue:forPragmaNamed:
setShouldAddStoreAsynchronously:
setShouldInvokeCompletionHandlerConcurrently:
shouldMigrateStoreAutomatically
setShouldMigrateStoreAutomatically:
shouldInferMappingModelAutomatically
setShouldInferMappingModelAutomatically:
usesPersistentHistoryTracking
setUsesPersistentHistoryTracking:
T@"NSString",C,V_type
T@"NSString",C,V_configuration
T@"NSURL",C,V_url
expressionWithFormat:
_objectFromUserInfo
_keypath
_countedRelationship
T@"NSArray",R,N,V_dropSQLStrings
T@"NSArray",R,N,V_bulkUpdateSQLStrings
_recordZoneIDToZoneMetadata
_recordIDToMirroredRelationshipOrRecordMetadata
_zoneIDToMtmKeyToMirroredRelationship
_objectIDToRelationshipNameToExistingMTMKeys
_objectIDToChangedPropertyKeys
_invalidatedMTMKeys
_isHandlingExpressions
initWithDatabase:options:
_mirroringDelegateOptions
_perOperationBytesThreshold
_triggerSQL
_migrationSQL
setRecordZoneName:
setRecordZoneOwnerName:
setCdEntityName:
setRelatedEntityName:
setRelatedRecordName:
setRelatedRecordZoneName:
setRelatedRecordZoneOwnerName:
setRelationshipName:
setOperation:
operation
T@"NSCKImportOperation",&,D,N
initWithName:
URLsForDirectory:inDomains:
_createDefaultStoreDescriptions
defaultDirectoryURL
persistentStoreDescriptionClass
URLForResource:withExtension:
_newModelForName:
stringByStandardizingPath
persistentContainerWithName:
persistentContainerWithName:managedObjectModel:
viewContext
performBackgroundTask:
_storeDescriptions
_viewContext
_storeCoordinator
T@"NSString",R,C,V_name
T@"NSManagedObjectContext",R,V_viewContext
T@"NSPersistentStoreCoordinator",R,V_storeCoordinator
persistentContainerWithPath:managedObjectModel:
persistentContainerWithPath:
persistentContainerWithPath:modelNamed:
persistentContainerUsingCachedModelWithPath:
automaticallyDownloadFileBackedFutures
initWithRecordZoneIDs:configurationsByRecordZoneID:
setRecordChangedBlock:
setRecordWithIDWasDeletedBlock:
setRecordZoneChangeTokensUpdatedBlock:
setRecordZoneFetchCompletionBlock:
setFetchRecordZoneChangesCompletionBlock:
_fetchedZoneIDToChangeToken
_fetchedZoneIDToMoreComing
initWithLabel:
automaticallyScheduleImportAndExportOperations
apsConnectionMachServiceName
coordinatorWillRemoveStore:
storesDidChange:
defaultOperationConfiguration
unregisterForSubscriptionWithID:inDatabase:
ckAccountOrIdentityChangedHandler:
managedObjectContextSaved:
remoteStoreDidChange:
registerForSubscription:inDatabase:handler:
isFirstPartyContainerIdentifier:
initWithTransactionLabel:powerAssertionLabel:
fromNotification
setMarkZonesAsUserPurged:
initWithRequest:objectIDToLastExportedToken:error:
initWithShareURLs:
setPerShareMetadataBlock:
setFetchShareMetadataCompletionBlock:
initWithShareMetadatas:
share
setPerShareCompletionBlock:
setAcceptSharesCompletionBlock:
stringForResetReason:
setEarliestStartDate:
setFromNotification:
timeIntervalSinceNow
dateWithTimeIntervalSinceNow:
initWithMirroringOptions:
initWithRecordsToSave:recordIDsToDelete:
applicationStateMonitorExpiredBackgroundActivityTimeout:
applicationStateMonitorEnteredForeground:
applicationStateMonitorEnteredBackground:
applicationMonitor
_ckDatabaseName
_cloudKitQueueSemaphore
_cloudKitQueue
_notificationListener
_hadObservedStore
_successfullyInitialized
_exporterOptions
_coredatadClient
_registeredForSubscription
_observedStore
_observedCoordinator
_accountChangeObserver
_requestManager
_observedStoreIdentifier
_importActivityIdentifier
_exportActivityIdentifier
_setupActivityIdentifier
_applicationMonitor
T@"PFApplicationStateMonitor",R,N,V_applicationMonitor
_transactionLabel
_powerAssertionLabel
_uiAppInstance
_powerAssertionID
typeNum
setTypeNum:
changeTypeNum
setChangeTypeNum:
setChangeType:
T@"NSCKExportOperation",&,D,N
_primaryCache
_rowCachesByGenerationToken
_indexDescription
_createStrings
_dropStrings
_updateStrings
T@"NSFetchIndexDescription",R,&,N,V_indexDescription
T@"NSSQLEntity",R,N,V_sqlEntity
setOperationUUID:
setImportDate:
attributesOfItemAtPath:error:
_assetPathToSafeSaveURL
_importOperationIdentifier
_totalOperationBytes
_fetchedAssetBytesMetric
_fetchedRecordBytesMetric
_allRecordIDs
_encounteredErrors
_failedRelationships
_incrementalResults
_unknownItemRecordIDs
_updatedShares
_currentOperationBytes
_countUpdatedRecords
_countDeletedRecords
initForRelationship:
_inserts
_deletes
_masterUpdates
_otherUpdates
_objectIDsToSerialize
TQ,N,V_resultType
T@"NSSet",C,N,V_objectIDsToSerialize
ensureContentsMatch:
printMetadataForStoreAtURL:withConfiguration:operateOnACopy:
printRepresentativeSchemaForModelAtURL:orStoreAtURL:withConfiguration:
checkIfContentsOfStore:matchContentsOfStore:error:
shouldUseBatches
createCountRequestContextForChanges
fetchRequestContextForChanges
createRequestContextForChangesWithTransactionIDs:
createDeleteTransactionsRequestContext
_shouldUseBatches
T@"NSPersistentHistoryChangeRequest",R,N
TB,R,N,V_shouldUseBatches
_connectionManagers
_createStatement
initWithArray:range:copyItems:
_isCloudKitSupportOriginated
initForRequestContext:
_changeCache
_insertCache
_toManyCache
_rowsToDelete
_updatedByRequest
_updatedByForeignKey
_rowsToAddToRowCache
_updatedFOKRowsInCurrentSave
_deletedFOKRowsInCurrentSave
_externalDataReferencesToSave
_fileBackedFuturesToCopy
_toManyRelationshipChanges
infoDictionary
applicationDidActivate:
applicationWillDeactivate:
_appActivateLifecycleObserver
_appDeactivateLifecycleObserver
_transitionCounter
_backgroundTimeout
_applicationState
setPendingExportChangeTypeNumber:
_totalBytes
_totalRecords
_totalRecordIDs
setUseDeviceToDeviceEncryption:
useEncryptedStorage
setUseEncryptedStorage:
setApsConnectionMachServiceName:
_useDeviceToDeviceEncryption
_apsConnectionMachServiceName
_databaseScope
_progressProvider
TB,V_useDeviceToDeviceEncryption
T@"NSString",&,N,V_apsConnectionMachServiceName
T@"NSObject<NSCloudKitMirroringDelegateProgressProvider>",W,N,V_progressProvider
T@"NSString",R,C,V_containerIdentifier
Tq,N,V_databaseScope
ensureContentsOfStore:matchContentsOfStore:error:
ensureStoresAgreeOnCloudKitTables:error:
compareContentOfStore:toStore:error:
compareCloudKitMetadataOfStore:toStore:error:
compareDatabaseScopeAndIdentityInStore:toStore:error:
compareObjectsInStore:toStore:error:
getObjectMatchingRecordID:fromStore:withManagedObjectContext:
compareAttributesOnObject:toObject:error:
compareRelationshipsOfRecordID:withStoreObject:andOtherObject:error:
validateValue:againstOtherValue:forIgnoredAttribute:
trimExcessiveValuesForLog:
isValue:equalToValue:forAttribute:
isEqualToDate:
isEqualToNumber:
getRecordIDsForRelationship:onObject:
isPending
ensureMirroredRelationshipsMatchForStore:otherStore:error:
ensureMoveReceiptsMatchForStore:otherStore:error:
onlyCompareSharedZones
setOnlyCompareSharedZones:
_onlyCompareSharedZones
_archivingUtilities
T@"PFCloudKitStoreComparisonCache",R,N,V_cache
T@"PFCloudKitArchivingUtilities",R,N,V_archivingUtilities
TB,N,V_onlyCompareSharedZones
importDate
operationUUID
changeTokenBytes
_deleteTarget
TQ,V_resultType
T@"NSFetchRequest",R,C
_entitiesAndCounts
setCollationType:
setAscending:
_collationType
_indexElementDescriptionFlags
T@"NSPropertyDescription",R,&
T@"NSString",R,&,V_propertyName
TB,GisAscending
T@"NSFetchIndexDescription",R,N
_interrupts
_forceUpdates
_retainCount
_owners
initWithRecordType:zoneID:
dataUsingEncoding:
mostRecentRecordModificationDate
initWithRecordType:predicate:
setRecordType:
T@"NSPredicate",&,D,N
T@"CKQueryCursor",&,D,N
transformedValueClass
resetStateForObjectID:error:
processChange:error:
reset:
finishProcessing:
newAnalyzerStateForChange:error:
fetchSortedStates:
_configuredEntityNames
_resetChangedObjectIDs
_entityIDToChangedPrimaryKeySet
_governingEntity
_governingAlias
_correlationToken
_limitClause
_orderIntermediate
setCkRecordID:
_cachedInfoForRequestor:
_cacheInfo:forRequestor:
createChildContextForNestedFetchRequest:
setFetchStatement:
isFaultRequest
_faultHandler
_fetchPlan
_objectIDsToRegister
_objectsToAwaken
_resultFaultsThatWereFired
_parentContext
_fileProtectionLevel
_isFaultRequest
_originalRequest
_storeIsUbiquitized
_isUsingCachedStatement
_concurrentFetchingPipelineRows
_prefetchingSubstitutionVariables
T@"NSFetchRequest",R,N
T@"NSSQLiteStatement",&,N
TB,N,V_isFaultRequest
_idSets
_metadataToWrite
_savePlan
_objectIDsInsertUpdatedToPruneDATrigger
_objectIDsUpdatedToPruneDATrigger
_objectIDsToPruneTrigger
_originalCachedRows
_updateMasksForHistoryTracking
_primaryRowCache
_contextGenerationRowCache
_metricsClient
indexName
executionCount
instructionCount
rowCount
_executionCount
_instructionCount
_rowCount
T@"NSString",R,N,V_indexName
Tq,R,N,V_executionCount
Tq,R,N,V_instructionCount
Tq,R,N,V_rowCount
evictFuture:withError:
createFutureForFileAtURL:
setAttributes:ofItemAtPath:error:
T@"NSURL",R
T@"NSUUID",R
_copyToInterimLocation
_moveToPermanentLocation
_originalFileURL
_fileSize
_uuid
_realData
_bytes
TQ,R,V_fileSize
T@"NSUUID",R,V_uuid
_monitorGroup
_aliveLock
_storeIsAlive
_declaredDead
_retryCount
_timeoutSeconds
_monitoredCoordinator
_monitoredStore
initWithUnsignedLong:
stringWithCapacity:
arrayByExcludingObjectsInArray:
setCatastrophicLoggingLevel
_madeChanges
T@"NSCloudKitMirroringRequest",R,N,V_request
TB,R,N,V_success
TB,R,N,V_madeChanges
_tempTableName
processTransaction:error:
T@"NSSet",C,N,V_objectIDsToFetch
objectIDToLastExportedToken
_objectIDToLastExportedToken
T@"NSDictionary",R,N,V_objectIDToLastExportedToken
_fromNotification
TB,N,V_fromNotification
initWithRequest:success:error:container:database:
analyzerStateForChangedObjectID:error:
_isFinished
_objectIDToState
_sortedStates
_processedTransactionIDs
_finalHistoryToken
_notificationIteration
_assertionLabel
_label
_notificationStalenessInterval
_notificationHandlerBlock
exportedAt
historyToken
T@"NSPersistentHistoryToken",&,D,N
operations
hasInitializedZone
setHasInitializedZone:
hasInitializedZoneSubscription
setHasInitializedZoneSubscription:
hasInitializedDatabaseSubscription
setHasInitializedDatabaseSubscription:
ckIdentityRecordName
setCKIdentityRecordName:
hasCheckedCKIdentity
setHasCheckedCKIdentity:
changeTokenForZoneWithID:inDatabase:
changeTokenForZoneWithID:inDatabaseWithScope:
changeTokenForDatabase:
changeTokenForDatabaseScope:
setChangeToken:forZoneWithID:inDatabase:
setChangeToken:forDatabase:
purgeCachedChangeTokens
_setChangeToken:forKey:
countChangeTokens
lastHistoryToken
setLastHistoryToken:
updateStoreMetadata:
_loaded
_hasChanges
_hasInitializedZone
_hasInitializedZoneSubscription
_hasInitializedDatabaseSubscription
_ckIdentityRecordName
_hasCheckedCKIdentity
_keyToPreviousServerChangeToken
_lastHistoryToken
_startIndexPath
_finalIndexPath
_startSectionInfo
_finalSectionInfo
T@"NSManagedObject",R,&,N,V_object
setInitializeSchema:
setArchivingUtilities:
initializeSchema
setCkAssetThresholdBytes:
setOperationMemoryThresholdBytes:
setContainerOptions:
setAutomaticallyDownloadFileBackedFutures:
setPreserveLegacyRecordMetadataBehavior:
setDefaultOperationConfiguration:
_initializeSchema
_automaticallyDownloadFileBackedFutures
_automaticallyScheduleImportAndExportOperations
_skipCloudKitSetup
_useDaemon
_useTestDaemon
_preserveLegacyRecordMetadataBehavior
_test_useLegacySavePolicy
_ckAssetThresholdBytes
_operationMemoryThresholdBytes
_containerOptions
_storeMonitorProvider
_metadataPurger
_defaultOperationConfiguration
T@"PFCloudKitArchivingUtilities",&,N,V_archivingUtilities
T@"CKOperationConfiguration",&,N,V_defaultOperationConfiguration
T@"NSString",&,N,V_containerIdentifier
T@"NSNumber",&,N,V_ckAssetThresholdBytes
TB,N,V_initializeSchema
T@"CKContainerOptions",&,N,V_containerOptions
TB,N,V_useDeviceToDeviceEncryption
T@"NSNumber",&,N,V_operationMemoryThresholdBytes
TB,N,V_automaticallyDownloadFileBackedFutures
TB,N,V_automaticallyScheduleImportAndExportOperations
TB,N,V_preserveLegacyRecordMetadataBehavior
statusNum
setStatusNum:
status
setStatus:
exportMetadata
T@"NSCKExportMetadata",&,D,N
_generateIdentifier
_substitutionVariables
_cachedInfo
T@,R,N,V_identifier
T@"NSDictionary",C,N
v16@0:8
@24@0:8^{_NSZone=}16
B16@0:8
v24@0:8@16
@24@0:8@16
v24@0:8@"NSCoder"16
@24@0:8@"NSCoder"16
@16@0:8
Q16@0:8
Vv16@0:8
B24@0:8@16
@40@0:8@16@24@32
@"NSString"
@"NSArray"
@"NSInputStream"
q16@0:8
@"NSPredicate"
@"NSDictionary"
@"NSData"
@"NSDate"
@32@0:8@16@24
@48@0:8@16@24@32@40
B24@0:8^@16
v28@0:8@16B24
@32@0:8@16^@24
v32@0:8@16@24
@40@0:8@16@24^@32
@48@0:8@16@24@32^@40
@32@0:8q16@24
@"NSGenerationalRowCache"
@"NSXPCStoreConnectionManager"
@"NSSQLModel"
@"NSSQLCore"
@"NSXPCStoreNotificationObserver"
{os_unfair_lock_s="_os_unfair_lock_opaque"I}
#16@0:8
#24@0:8@16
@32@0:8@16q24
i16@0:8
v20@0:8i16
@"NSSQLModel"16@0:8
@"NSDictionary"16@0:8
@"NSPersistentStoreCoordinator"
@"NSManagedObjectID"
@"NSURL"
@40@0:8@?16@24@32
@"NSFetchRequest"
@"NSSQLFetchRequestContext"
@32@0:8@16Q24
@28@0:8@16B24
@36@0:8@16B24Q28
@40@0:8@16B24B28Q32
v24@0:8q16
v20@0:8B16
v24@0:8Q16
@"NSPersistentHistoryToken"
@"NSNumber"
{__persistentHistoryChangeRequestDescriptionFlags="_useQueryGenerationToken"b1"_deleteHistoryRequest"b1"_fetchTransactionForToken"b1"_percentageDeleteHistoryRequest"b1"_reservedPersistentHistoryChangeRequestDescription"b28}
@"NSManagedObjectModel"
@"NSCloudKitMirroringDelegateOptions"
@24@0:8:16
@32@0:8:16@24
@40@0:8:16@24@32
B24@0:8#16
B24@0:8:16
^{_NSZone=}16@0:8
B24@0:8@"Protocol"16
@"NSString"16@0:8
Vv32@0:8@16@?24
Vv32@0:8@"NSCoreDataXPCMessage"16@?<v@?@"NSCoreDataXPCMessage"@"NSData">24
B32@0:8@16@24
B32@0:8@"NSXPCListener"16@"NSXPCConnection"24
@"NSXPCListener"
@"NSXPCStoreServerRequestHandlingPolicy"
@"NSMapTable"
@"NSMutableDictionary"
@44@0:8^{?=IdQIIII{?=b1b1b1b1b1b1b1b25}i^^v^I^v^v}16I24@28@36
Q24@0:8@16
Q40@0:8@16{_NSRange=QQ}24
B20@0:8B16
@24@0:8Q16
Q40@0:8^{?=Q^@^Q[5Q]}16^@24Q32
v24@0:8^@16
v40@0:8^@16{_NSRange=QQ}24
^{?=IdQIIII{?=b1b1b1b1b1b1b1b25}i^^v^I^v^v}
@"_PFWeakReference"
@"NSKnownKeysDictionary"
@40@0:8r^@16r^@24Q32
@"_PFResultArray"
@56@0:8r^@16@24^Q32{_NSRange=QQ}40
{_NSRange="location"Q"length"Q}
{?=[8I]}16@0:8
@"NSXPCStoreServerPerConnectionCache"
{?="val"[8I]}
@64@0:8{?=[8I]}16@48@56
@"NSManagedObjectContext"
@"NSXPCStoreConnectionInfo"
@"NSSQLitePrefetchRequestCache"
@"NSObject<OS_os_transaction>"
@"NSXPCStore"
@"NSXPCConnection"
@52@0:8@16B24@28@36^@44
@24@0:8^@16
B32@0:8@16^@24
v24@0:8@?16
@"NSSet"
@"NSMutableArray"
@"NSCKRecordMetadata"
@"NSManagedObject"
@36@0:8@16@24B32
v32@0:8Q16@?24
v40@0:8@16Q24@?32
Q32@0:8Q16@?24
Q40@0:8@16Q24@?32
@32@0:8Q16@?24
@40@0:8@16Q24@?32
v32@0:8@16Q24
v32@0:8Q16@24
@"NSPropertyDescription"
{_NSFaultingMutableArrayFlags="_isFault"b1"_reserved"b31}
v24@0:8:16
v32@0:8:16@24
{_NSFaultingMutableSetFlags="_isFault"b1"_mustPropagateDelete"b1"_reserved"b14"_relationship"b16}
@32@0:8#16@24
^{objc_method=}
@"NSEntityMapping"
@"NSError"
I16@0:8
v20@0:8I16
@"NSSQLiteStatement"
v24@0:8@"NSPredicate"16
v24@0:8@"NSExpression"16
v24@0:8@"NSPredicateOperator"16
@"NSMutableSet"
@"NSPersistentStoreRequest"
@"NSSQLiteConnection"
@"NSException"
@"NSQueryGenerationToken"
v32@0:8@16@?24
B56@0:8@16@24@32^B40^@48
B40@0:8@16@24^@32
@"CKQueryCursor"
@"CKRecordZoneID"
q24@0:8@16
B40@0:8@16@24@32
@"_NSFaultingMutableSetMutationMethods"
@"NSSQLiteAdapter"
@"NSMutableString"
@"NSArray"16@0:8
@"NSManagedObjectID"24@0:8Q16
Q24@0:8@"NSManagedObjectID"16
@32@0:8r^@16Q24
@32@0:8^@16I24I28
@40@0:8^@16I24I28@32
^@16@0:8
@32@0:8{_NSRange=QQ}16
{_PFArrayFlags="shouldRetain"b1"shouldRelease"b1"useExtendedRelease"b1"freeBackingArray"b1"copyBackingArray"b1"managedObjects"b1"_RESERVED"b27}
@32@0:8^?16^v24
@40@0:8^?16^v24@32
@24@0:8@?16
@"_PFArray"
@"NSCachingFetchRequest"
{_PFBatchFaultingArrayFlags="_LRUIndex"b8"_uniformEntity"b1"_LRUEntryCount"b11"_RESERVED"b12}
@"NSPersistentHistoryTransaction"
@40@0:8@16{_NSRange=QQ}24
^{__CFArray=}
r^@16@0:8
@32@0:8r^v16r*24
v24@0:8^v16
r*16@0:8
c16@0:8
C16@0:8
s16@0:8
S16@0:8
f16@0:8
d16@0:8
^{__CFDictionary=}
^^{__CFDictionary}
{_contextMapTableFlags="_usesWeakReferences"b1"_garbageCollectionEnabled"b1"_reservedFlags"b30}
@"_PFModelMap"
@36@0:8^?16^v24i32
{_opaque_pthread_mutex_t="__sig"q"__opaque"[56c]}
{_opaque_pthread_cond_t="__sig"q"__opaque"[40c]}
^{__CFDictionary=}28@0:8@16B24
^{_opaque_pthread_t=q^{__darwin_pthread_handler_rec}[8176c]}
r*20@0:8B16
r^S16@0:8
r*24@0:8Q16
S24@0:8Q16
v24@0:8^S16
v40@0:8^S16{_NSRange=QQ}24
v24@0:8*16
^{__CFAllocator=}16@0:8
@"NSProgress"
@48@0:8@16@24@32@?40
@"NSAsynchronousFetchRequest"
i20@0:8i16
B28@0:8@16B24
B24@0:8Q16
@40@0:8@16Q24@32
B36@0:8@16@24i32
B48@0:8^@16@24@32^@40
v32@0:8*16Q24
v72@0:8@16@24@32@40@48@56@64
*16@0:8
#32@0:8@16@24
I28@0:8^@16I24
@32@0:8r*16Q24
@24@0:8q16
B48@0:8@16@24@32^@40
@32@0:8^@16@24
@"NSEntityDescription"
^{_NSRange=QQ}
{__entityDescriptionFlags="_isAbstract"b1"_shouldValidateOnSave"b1"_isImmutable"b1"_isFlattened"b1"_skipValidation"b1"_hasPropertiesIndexedBySpotlight"b1"_hasPropertiesStoredInTruthFile"b1"_rangesAreInDataBlob"b1"_hasAttributesWithExternalDataReferences"b1"_hasNonstandardPrimitiveProperties"b2"_hasUniqueProperties"b1"_hasChildrenWithUniqueProperties"b1"_validationUniqueProperties"b1"_isPersistentHistoryEntity"b1"_hasAttributesWithFileBackedFutures"b1"_reservedEntityDescription"b16}
^{_ExtraEntityIVars=@@@@@@{os_unfair_lock_s=I}i^v}
@20@0:8I16
^{_NSRange=QQ}16@0:8
Q36@0:8Q16@24B32
^v24@0:8Q16
^v16@0:8
@"NSExpression"
{__entityMappingFlags="_isInUse"b1"_changeIsSchemaCompatible"b1"_reservedEntityMapping"b30}
@"NSAttributeDescription"
@28@0:8I16d20
{_externalRefFlags_st="_invalidToOnes"b1"_hasTemporaryID"b1"_backgroundDealloc"b1"_reservedFlags"b1"_virtualfk_count"b14"_ordkey_count"b14}
@40@0:8@16@24Q32
@"NSSQLEntity"
@"NSCoreDataXPCMessage"
Q24@0:8Q16
{_fetchRequestFlags="distinctValuesOnly"b1"includesSubentities"b1"includesPropertyValues"b1"resultType"b3"returnsObjectsAsFaults"b1"excludePendingChanges"b1"isInUse"b1"entityIsName"b1"refreshesRefetched"b1"propertiesValidated"b1"expressionsValidated"b1"disableCaching"b1"allocationType"b3"batchLRUEntries"b4"asyncRequest"b1"purgeable"b1"_RESERVED"b9}
@"NSObject<OS_dispatch_queue>"
{_fetchExpressionFlags="isCountOnly"b1"_RESERVED"b31}
@32@0:8^@16Q24
@48@0:8^@16Q24^v32@40
@40@0:8^@16^@24Q32
v28@0:8^@16B24
v32@0:8^@16^@24
@"NSKnownKeysMappingStrategy"
[0@]
v40@0:8Q16@24@32
v40@0:8@16Q24@32
B40@0:8^@16@24^@32
^{?=^v@@@@}
@40@0:8@16q24q32
v48@0:8@16@24@32@40
B32@0:8^@16^@24
^?24@0:8:16
v48@0:8@16@24q32q40
^{?=i^v@QCQ^v[32C]*{_moFactoryClassFlags=b1b1b1b1b1b1b1b25}}16@0:8
I36@0:8^@16@24I32
@36@0:8@16@24I32
B24@0:8r*16
v24@0:8d16
v48@0:8@16@24@32^v40
Q32@0:8@16^@24
v40@0:8@16:24^v32
v36@0:8@16B24^{?=@:^v}28
{_managedObjectContextFlags="_registeredForCallback"b1"_propagatesDeletesAtEndOfEvent"b1"_exhaustiveValidation"b1"_processingChanges"b1"_useCommittedSnapshot"b1"_registeredUndoTransactionID"b1"_retainsAllRegisteredObjects"b1"_savingInProgress"b1"_wasDisposed"b1"_unprocessedChangesPending"b1"_isDirty"b1"_ignoreUndoCheckpoints"b1"_propagatingDeletes"b1"_isNSEditorEditing"b1"_isMainThreadBlessed"b1"_isImportContext"b1"_preflightSaveInProgress"b1"_disableDiscardEditing"b1"_isParentStoreContext"b1"_postSaveNotifications"b1"_isMerging"b1"_concurrencyType"b1"_deleteInaccessible"b1"_priority"b2"_autoMerge"b1"_isXPCServerContext"b1"_pushSecureDelete"b1"_refreshAfterSave"b1"_allowAncillary"b1"_generatedMutatedIDsNotification"b1"_postSavedObjectNotifications"b1"_allowAdditionalUserInfoKeys"b1"_reservedFlags"b31}
@"_PFContextMapTable"
@"_PFManagedObjectReferenceQueue"
v32@0:8@16B24B28
^{__CFRunLoopObserver=}
B24@0:8@?16
{_queryGenerationFlags="_isCompound"b1"_isSingleton"b1"_freeValueOnDealloc"b1"_isUnmoored"b1"_reservedFlags"b12}
@"_PFVMData"
{__managedObjectModelFlags="_isInUse"b1"_isImmutable"b1"_isOptimizedForEncoding"b1"_hasEntityWithConstraints"b1"_skipUserInfoTombstones"b1"_reservedEntityDescription"b27}
v28@0:8B16Q20
@"NSBundle"
@"NSPersistentStore"
@"NSPersistentStoreMap"
@"NSUUID"
{__modelMappingFlags="_isInUse"b1"_reservedModelMapping"b31}
v40@0:8@16@24@?32
@"PFCloudKitImporterOptions"
@"NSCloudKitMirroringImportRequest"
@56@0:8@16Q24Q32@40@48
@64@0:8@16Q24Q32@40@48@56
@56@0:8@16@24@32@40@48
v52@0:8@16@24@32@40B48
@"NSMigrationManager"
@"NSPropertyMapping"
B80@0:8@16@24@32@40@48@56@64^@72
v40@0:8@16@24@32
@"NSMappingModel"
@"NSMigrationContext"
{_migrationManagerFlags="_migrationWasCancelled"b1"_usesStoreSpecificMigrationManager"b1"_migrationWasInPlace"b1"_forcedMigration"b1"_reservedMigrationManager"b28}
@"NSObject<OS_dispatch_semaphore>"
{_objectStoreFlags="isReadOnly"b1"cleanOnRemove"b1"isMDDirty"b1"_RESERVED"b29}
^{__CFSet=}
B28@0:8B16^@20
^{__CFSet=}16@0:8
B56@0:8@16@24@32@40^@48
B56@0:8@16^B24^B32^@40@48
@32@0:8@16@?24
@?16@0:8
{_insertRequestFlags="resultType"b2"entityIsName"b1"secureOperation"b1"_RESERVED"b28}
@32@0:8Q16@24
@28@0:8^v16B24
^{?=q^?^?^?^?}
{persistentStoreCacheFlags="_preserveToManyRelationships"b1"_reserved"b31}
v32@0:8#16@24
@56@0:8@16@24@32@40^@48
B64@0:8@16@24@32@40@48^@56
@32@0:8@16^i24
{_persistentStoreCoordinatorFlags="_isRegistered"b1"_canUseDirectDispatch"b1"_queueUsage"b1"_qosClass"b8"_reservedFlags"b21}
@"<NSPersistentStoreCoordinatorDelegate>"
v24@0:8@"NSPersistentHistoryChange"16
@"NSManagedObjectID"16@0:8
@"NSNumber"16@0:8
@40@0:8@16@"NSString"24@"NSSQLEntity"32
B24@0:8@"NSObject<NSSQLAttributeExtension>"16
@"NSSQLAttribute"
@"NSSQLRelationship"
@"NSEntityDescription"16@0:8
@"NSPredicate"16@0:8
{_requestFlags="includesSubentities"b1"resultType"b2"entityIsName"b1"secureOperation"b1"_RESERVED"b27}
@"NSMappedObjectStore"
v24@0:8@"NSPersistentCloudKitContainerEvent"16
B32@0:8Q16^@24
@"NSObject<OS_dispatch_group>"
^{_NSExtraPropertyIVars=@qq}
{__propertyDescriptionFlags="_isReadOnly"b1"_isTransient"b1"_isOptional"b1"_isIndexed"b1"_skipValidation"b1"_isIndexedBySpotlight"b1"_isStoredInExternalRecord"b1"_extraIvarsAreInDataBlob"b1"_isOrdered"b1"_hasMaxValueInExtraIvars"b1"_hasMinValueInExtraIvars"b1"_storeBinaryDataExternally"b1"_preserveValueOnDelete"b1"_isTriggerBacked"b1"_isFileBackedFuture"b1"_allowsCloudEncryption"b1}
^{_NSExtraPropertyIVars=@qq}16@0:8
v64@0:8@16@24@32@40@48@56
q32@0:8@16q24
{_fetchResultsControllerFlags="_changedResultsSinceLastSave"b1"_hasBatchedArrayResults"b1"_hasMutableFetchedResults"b1"_hasSections"b1"_includesSubentities"b1"_sendDidChangeContentDiffNotifications"b1"_sendDidChangeContentNotifications"b1"_sendDidChangeContentSnapshotNotifications"b1"_sendObjectChangeNotifications"b1"_sendSectionChangeNotifications"b1"_sendSectionIndexTitleForSectionName"b1"_sendWillChangeContentNotifications"b1"_usesNonpersistedProperties"b1"_reservedFlags"b19}
{__propertyMappingFlags="_isInUse"b1"_reservedPropertyMapping"b31}
@"NSPropertyTransform"
@"NSRelationshipDescription"
v40@0:8*16Q24@32
@"NSCloudKitMirroringRequest"
Vv32@0:8@"CDDCloudKitMessage"16@?<v@?@"CDDCloudKitResponse">24
@"PFCloudKitContainerProvider"16@0:8
@"CKScheduler"16@0:8
@"CDDCloudKitServerConfiguration"
@"NSPersistentContainer"
@"PFCloudKitContainerProvider"
@"CKScheduler"
@36@0:8@16C24@28
@40@0:8@16C24@28B36
@28@0:8q16C24
@24@0:8I16C20
v20@0:8C16
@56@0:8@16B24B28@32@40@48
@28@0:8@16C24
v36@0:8@16@24B32
@44@0:8@16C24@28@36
@"NSURL"16@0:8
@"NSOperationQueue"16@0:8
v24@0:8@?<v@?@?<v@?>>16
v24@0:8@?<v@?@"NSError">16
v24@0:8@"NSURL"16
v24@0:8@"NSSet"16
v24@0:8@"NSFileVersion"16
v32@0:8@"NSURL"16@?<v@?@"NSError">24
v32@0:8@"NSURL"16@"NSURL"24
v32@0:8@"NSURL"16@"NSFileVersion"24
@"NSSet"16@0:8
@"NSSQLCoreDispatchManager"
@"_NSSQLCoreConnectionObserver"
{_sqlCoreFlags="useSyntaxColoredLogging"b1"hasExternalDataReferences"b1"fileProtectionType"b3"notifyFOKChanges"b1"initializationComplete"b1"connectionsAreLocal"b1"isXPCDelegate"b1"queryGenerationInitializationFailed"b1"persistentHistoryTracking"b1"hasAncillaryModels"b1"postRemoteNotify"b1"hasFileBackedFutures"b1"isInMemory"b1"_debugRequestsHandling"b1"historyBatchUpdateModProperties"b1"indexTracking"b1"_RESERVED"b14}
@"_PFMutex"
@"CKServerChangeToken"
@"NSSQLPrimaryKey"
@"NSSQLEntityKey"
@"NSSQLOptLockKey"
@"NSSQLStoreMappingGenerator"
@"NSSQLEntity_DerivedAttributesExtension"
{__sqlentityFlags="_hasAttributesWithExternalDataReferences"b1"_hasAttributesWithFileBackedFutures"b1"_reserved"b30}
@36@0:8@16B24@28
@"CKContainer"
@"CKDatabase"
@"CKDatabaseSubscription"
@"PFCloudKitStoreMonitor"
@"NSPersistentCloudKitContainerEvent"
@"NSCloudKitMirroringDelegateSetupRequest"
@"CKRecordID"
@"NSSQLSelectIntermediate"
@"NSSQLGroupByIntermediate"
@"NSSQLHavingIntermediate"
@"NSSQLOffsetIntermediate"
@"NSSQLForeignKey"
@"NSSQLToOne"
@"CDDCloudKitMessage"
@"CKOperationConfiguration"
@"NSSQLIntermediate"
q32@0:8@16^@24
@"NSFileHandle"
r^v16@0:8
^{sqlite3_snapshot=[48C]}
i24@0:8@16
^{sqlite3=}
^{sqlite3_stmt=}
@"NSSQLSaveChangesRequestContext"
[5^v]
{__sqliteConnectionFlags="_readyToBind"b1"_fetchInProgress"b1"_fileSystemType"b2"_proxyLocking"b1"_vacuumSetupNeeded"b1"_usingWAL"b1"_disallowReconnect"b1"_isWriter"b1"_didSnapshotRecovery"b1"_hasTransactionStringTable"b1"_isQueryGenTracking"b1"_reserved"b20}
@40@0:8@16B24B28@32
@"NSCloudKitMirroringExportRequest"
@"NSCloudKitMirroringDelegateResetRequest"
@"NSCloudKitMirroringResetZoneRequest"
@"NSCloudKitMirroringFetchRecordsRequest"
@"NSCloudKitMirroringResetMetadataRequest"
@"NSCloudKitMirroringDelegateSerializationRequest"
@"NSCloudKitMirroringInitializeSchemaRequest"
@"NSCloudKitMirroringExportProgressRequest"
@"NSCloudKitMirroringAcceptShareInvitationsRequest"
@"NSSQLRowCache"
{?="principal_entity_has_subentities"b1"fetch_only_primary_keys"b1"fetch_results_style"b3"use_clean_memory"b1"_reserved"b26}
@40@0:8@16@24@?32
@"NSCloudKitMirroringRequestOptions"
@"CKSchedulerActivity"
{_sqlColumnFlags="_allowAliasing"b1"_unique"b1"_constrained"b1"_backedByTrigger"b1"_isDerivedAttribute"b1"_reservedFlags"b11}
I52@0:8^@16I24@28^@36d44
@40@0:8@16@24d32
v28@0:8I16q20
v24@0:8I16I20
@"_CDSnapshot"
@"NSCachedFetchRequestInfo"
@"PFCloudKitExporterOptions"
@"NSObject<PFCloudKitExporterDelegate>"
@"PFCloudKitExportContext"
@"NSSQLFetchIntermediate"
@"NSSQLColumn"
@"NSSQLForeignEntityKey"
@"NSSQLForeignOrderKey"
@36@0:8@16B24^@28
{_double_quad_uint="high64"Q"low64"Q}
@"_NS128bitWrapper"
@32@0:8@16^v24
^{?=i^v@QCQ^v@*{_moFactoryClassFlags=b1b1b1b1b1b1b26}}16@0:8
@"NSFetchedResultsController"
@"NSSQLUpdateColumnsIntermediate"
^{sqlite3_intarray=}
@48@0:8@16@24@32Q40
@64@0:8@16@24@32@40@48Q56
@"NSObject<PFCloudKitSerializerDelegate>"
@"PFCloudKitMetadataCache"
@"CKRecordZone"
@"NSSQLWhereIntermediate"
@32@0:8r^v16Q24
@40@0:8@16Q24^@32
v32@0:8^v16Q24
v40@0:8^v16{_NSRange=QQ}24
{_NSRange=QQ}48@0:8@16Q24{_NSRange=QQ}32
B40@0:8@16Q24^@32
@44@0:8@16@24@32i40
@52@0:8r^v16Q24@32@40i48
v24@0:8r^v16
{__externalDataFlags="_isStoredExternally"b1"_hasMappedData"b1"_cleanupOnDealloc"b1"_dataProtectionLevel"b3"_isStoredUbiquitously"b1"_createdByUbiquityImport"b1"_reserved"b24}
v32@0:8r^@16Q24
v40@0:8r^@16Q24Q32
v32@0:8{_NSRange=QQ}16
v48@0:8{_NSRange=QQ}16Q32@?40
{_NSFaultingMutableOrderedSetFlags="_isFault"b1"_mustPropagateDelete"b1"_ignoringIdempotentKVO"b1"_mustCopyOnWrite"b1"_isImmutableCopy"b1"_reserved"b11"_relationship"b16}
@"_NSFaultingMutableOrderedSet"
I36@0:8^@16I24^@28
{_snapshotFlags_st="_readOnly"b1"_reservedFlags"b7}
Q24@0:8@?16
Q56@0:8@16{_NSRange=QQ}24Q40@?48
v32@0:8Q16Q24
v40@0:8^@16Q24Q32
v48@0:8{_NSRange=QQ}16r^@32Q40
@"NSMutableOrderedSet"
@"_NSFaultingMutableOrderedSetMutationMethods"
@"NSObject"
@"NSSQLBinaryIndex"
v32@0:8@"PFCloudKitExporter"16@"NSArray"24
v24@0:8@"PFApplicationStateMonitor"16
B40@0:8@"NSManagedObjectModel"16@"NSPersistentStoreDescription"24^@32
v40@0:8@"NSPersistentStoreCoordinator"16@"NSPersistentStore"24@"NSPersistentStoreDescription"32
@"CKNotificationListener"
@"CDDCloudKitClient"
@"PFCloudKitThrottledNotificationObserver"
@"NSCloudKitMirroringRequestManager"
@"PFApplicationStateMonitor"
@"NSPersistentStoreCache"
@"NSFetchIndexDescription"
v40@0:8@"PFCloudKitSerializer"16@"PFMirroredRelationship"24@"NSError"32
@"NSURL"32@0:8@"PFCloudKitSerializer"16@"CKAsset"24
@"PFCloudKitFetchedAssetBytesMetric"
@"PFCloudKitFetchedRecordBytesMetric"
@"NSSQLManyToMany"
B36@0:8@16B24^@28
{_sqlSaveFlags="notifyFOKChanges"b1"hasChanges"b1"reserved"b30}
@"NSObject<PFApplicationStateMonitorDelegate>"
B48@0:8@16^Q24@32^@40
@"NSObject<NSCloudKitMirroringDelegateProgressProvider>"
@"PFCloudKitStoreComparisonCache"
@"PFCloudKitArchivingUtilities"
{__indexElementDescriptionFlags="_ascending"b1"_propertyIsRetained"b1"_unique"b1"_reservedEntityDescription"b29}
@52@0:8@16@24@32B40@44
@"NSSaveChangesRequest"
@"NSSQLLimitIntermediate"
@"NSSQLOrderIntermediate"
@"NSFaultHandler"
@"_PFFetchPlanHeader"
@"NSSQLSavePlan"
@48@0:8@16@24q32@40
@"PFCloudKitMetadataMigrationContext"
@"PFCloudKitMetricsClient"
@"NSUUID"16@0:8
@"PFHistoryAnalyzerOptions"
@52@0:8@16B24@28@36@44
@"NSIndexPath"
@"_NSDefaultSectionInfo"
@"CKContainerOptions"
@"PFCloudKitStoreMonitorProvider"
@"PFCloudKitMetadataPurger"
