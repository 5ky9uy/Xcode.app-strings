@333333
?333333
?es-8R
?ffffff
?333333
MbP?-C
?ffffff
>333?
signature
archive
PHSettings.m
Concrete subclass must implement. Use either PHSettingsImplementRootSettings() or PHSettingsImplementChildSettings() macro for this.
__defaultValues
PLAssetContainerDataSource.m
Mismatched asset collections and asset fetch results
 containing %ld containers with %ld total assets (last container index %ld)
%@: %ld assets [%ld]
PLCommentsFontCacheDidChangeNotification
CROP_OVERLAY_TITLE
CANCEL
USE_VIDEO
v16@?0@?<v@?@"NSArray">8
MOTION_TOGGLE_ON
MOTION_TOGGLE_OFF
PREVIEW
CHOOSE_PHOTO_BUTTON
RETAKE
PLCameraPickerPause.png
PLCameraPickerPlay.png
Cancel
Playback
Done
FileSize
H:|[_doCancelButton][_separatorLine(==separatorWidth@999)][_doSetButton]|
separatorWidth
_doCancelButton, _separatorLine, _doSetButton
V:|[_doCancelButton]|
_doCancelButton
SAVING_PHOTO
Status shown while setting wallpaper
tile
completionTarget
options
com.apple.photos.plcropoverlay.save
PLDataArrayInputStream.m
sanity check for stream data
should be able to make run loop source
collapseSingleImage
fadeInBorderForCollapse
Contracted
Expanding
Complete Expand
Cancel Expand
Expanded
Contracting
Cancel Contract
Complete Contract
ipad
PLImageBorder@2x
PLImageBorder
rate
status
externalPlaybackActive
readyForDisplay
playbackBufferEmpty
playbackBufferFull
playbackLikelyToKeepUp
tracks
duration
Could not load value for key %@:
https://
http://
home-sharing://
Unable to start background task, TV Out window may not tear down.
Error setting up TVOutWindow
COULD_NOT_LOAD_MOVIE_ERROR_FMT
GENERIC_COULD_NOT_LOAD_MOVIE
_serverConnectionDiedNotification. Info -- notification=%@, AVPlayer = %@, currentTime = %.2f
Image Manager
imageManagerSettings
Resource Download Request
resourceDownloadSettings
PhotoKit
Restore All Defaults
PhotoKit Settings
_UIImagePickerSavingOptions
NSDictionary *PLPhotoPickerDictionaryFromImage(NSDictionary *, PLPhotoTileViewController *, PLManagedAsset *, NSDictionary *, BOOL)
PLNavigationControllerInterface.m
PLPhotoPickerDictionaryFromImage - UIImagePickerSavingOptions may not be nil
_UIImagePickerControllerSourceType
PLPhotoPickerDictionaryFromImage - UIImagePickerControllerSourceType may not be nil
PLPhotoPickerDictionaryFromImage - _UIImagePickerControllerReviewCapturedItem may not be nil
PLPhotoPickerDictionaryFromImage - _UIImagePickerControllerShowCameraControls may not be nil
PHPhotoLibrary *PLNavigationControllerInterfacePhotoLibrary(NSURL *)
Requested URL %@ does not match previous URL %@
_UIImagePickerControllerPHAssetLocalIdentifier
_UIImagePickerDebugSidecarFileURLs
PUPhotoPickerOriginalImagePathSandboxExtensionToken
v32@?0@"NSData"8@"PLImageDataInfo"16@"PLCPLDownloadContext"24
Loading_Error%@.png
LOADING_PHOTO
PLPhotoTileViewController.m
Call -initWithFrame:photoTileController: or you get <rdar://problem/14272922> Comments using only half width of screen after swiping in landscape
<%@ photo:%@
v16@?0@"<UIViewControllerTransitionCoordinatorContext>"8
CAMImagePickerCameraViewController
v36@?0@"NSData"8@"NSString"16I24@"NSDictionary"28
BlueCheckUnselected.png
BlueCheckSelected.png
SelectedContentMode
pLzf7OiX5nWAPUMj7BfI4Q
EnableIris
LogJPEGDecodeTime
com.apple.mobileslideshow
com.apple.mobileslideshow.PreferenceChanged
0.0.0.0
v12@?0i8
failed to register for Photo Stream activity notification: %u
failed to register for Shared Photo Stream activity notification: %u
failed to register for Shared Photo Stream invitation failure activity notification: %u
notify_cancel() failed for kMSIdleStateDidChangeNotification. (%d)
notify_cancel() failed for kMSASStabilizedIdleStateDidChangeNotification. (%d)
notify_cancel() failed for Shared Photo Stream invitation failure activity notification. (%d)
void PLMRMediaRemoteSetNowPlayingApplicationOverrideEnabled(Boolean)
PLPhotosApplication.m
MRMediaRemoteSetNowPlayingApplicationOverrideEnabled
void *MediaRemoteLibrary(void)
/System/Library/PrivateFrameworks/MediaRemote.framework/MediaRemote
/System/Library/PrivateFrameworks/MediaRemote.framework/Contents/MacOS/MediaRemote
PLPhotosDefaultsDidChangeNotification
NowPlaying
FromIPhoto
Photos
plist
items
Transition
validValues
SummarizeSections
PLProgressHUDCheckmark
MEDIA_PROGRESS_FORMAT
MEDIA_TIME_ONE_MINUTE_REMAINING
MEDIA_TIME_MINUTES_REMAINING_FORMAT
COMPLETING_UPLOAD
MEDIA_TIME_ONE_SECOND_REMAINING
MEDIA_TIME_SECONDS_REMAINING_FORMAT
MEDIA_PROGRESS_NO_TIME_FORMAT
PLPublishingAgentFinishedPublishingNotification
PLPublishingAgentStartedPublishingNotification
PLPublishingAgentStartedRemakingNotification
PLPublishingAgentFinishedRemakingNotification
PLPublishingAgentRemakingDidSucceedKey
PLPublishingAgentDidCancelNotification
PLPublishingAgentsForcedCancelNotification
PLPhotosApplication
/System/Library/PublishingBundles/
%@.bundle
<override -[PLPublishingAgent serviceName]
SUBCLASS OVERRIDE
SHARING_WAS_INTERRUPTED
PUBLISHED_MEDIA_FORMAT
PUBLISHED_VIDEO
PUBLISHED_IMAGE
VIEW_BUTTON_TITLE_FORMAT
v16@?0@"UIAlertAction"8
TELL_A_FRIEND
mailto:?subject=%@&body=%@
MEDIA_FAILURE_FORMAT
FAILED_PUBLISH_VIDEO
FAILED_PUBLISH_IMAGE
CLOSE
MCProfileConnection
Class getMCProfileConnectionClass(void)_block_invoke
PLPublishingAgent.m
Unable to find class %s
void *ManagedConfigurationLibrary(void)
/System/Library/PrivateFrameworks/ManagedConfiguration.framework/ManagedConfiguration
/System/Library/PrivateFrameworks/ManagedConfiguration.framework/Contents/MacOS/ManagedConfiguration
NSString *getMCFeatureCellularHDUploadsAllowed(void)
MCFeatureCellularHDUploadsAllowed
PLPublishingMedia.m
Invalid parameter not satisfying: %@
asset
[PLPublishingMedia isValidPublishingMedia:asset]
managedAsset
avAsset
-Regular
-Compact
PLProgressIris%@-PhotoIris
v16@?0@"NSTimer"8
v16@?0d8
PLSlalomGrabberHandle.png
Error: no external display attached in tv out mode
Image Requests
allowImageRequests
Caching
allowCaching
Restore Defaults
TRIM_VIDEO_NAV_TITLE_IMAGE_PICKER
TRIM_VIDEO_NAV_TITLE
TRIM_TITLE_IMAGE_PICKER
TRIM_FOR_PUBLISH_TITLE
VIDEO_TOO_LONG_TITLE_IMAGE_PICKER
VIDEO_TOO_LONG_TITLE
VIDEO_PLAYBACK_FAILED
USE_PHOTO_BUTTON_TITLE
CHOOSE_VIDEO_TITLE
CHOOSE_PHOTO_TITLE
COMPRESSING_VIDEO
v24@?0@"UIImage"8@"NSDictionary"16
_UIImagePickerControllerCancelButtonTitle
_UIImagePickerControllerCustomBackgroundColor
_UIImagePickerControllerMaxZoomScaleOverride
PLVideoOverlayGlyphMask
PLVideoOverlayBackgroundMask
fileLengthLimit
PLVideoRemaker.m
media
v40@?0@"AVAsset"8@"AVAudioMix"16@"AVVideoComposition"24@"NSError"32
TRIMMING_VIDEO
PREPARING_VIDEO
v24@?0@"AVAssetExportSession"8@"NSError"16
3gpp
3gp2
aiff
videoCameraImage must be either video or audio
com.apple.mobileslideshow.videoThumbnails
<%@ path:%@>
v8@?0
v80@?0{?=qiIq}8^{CGImage=}32{?=qiIq}40q64@"NSError"72
v24@?0@"AVPlayerItem"8@"NSDictionary"16
B16@?0@"PHAdjustmentData"8
v24@?0@"PHContentEditingInput"8@"NSDictionary"16
v24@?0@"AVPlayerItem"8@"NSError"16
timestamps
VIDEO_TOO_LONG_BODY
Unable to assign data protection to "%@": %@
*** Error generating video thumbnails ... cleaning up state: %@
v32@?0@"NSDictionary"8@"NSURL"16@"NSError"24
*** Error saving a copy trimmed video to the disk ... cleaning up state: %@
v16@?0@"PLManagedAsset"8
Unable to copy CGImage at time:%f, error:[%@]
CANNOT_PLAY_STREAM_VIDEO_TITLE
Failed to commit adjustments with error: %@
v20@?0B8@"NSError"12
Failed to write metadata to path %@
Failed to delete file at path %@: %@
Video export failed for asset %@: %@
Simulate Download
simulateDownload
Simulate Download Failure
simulateDownloadFailure
simulateDownload == YES
UITableViewAdditions.m
indexPath is out of range %@
opacity
v12@?0B8
File resizing is not available on TV
(video-playback) %@ observeValueForKeyPath %@ %@
(video-playback) _playerRateDidChange %@
(video-playback) calling _player play
(video-playback) calling _player play in playFromBeginning
(video-playback) calling _player playDueToEnoughData
(video-playback) calling _player pause in pause
(video-playback) calling _player pauseDueToInsufficientData
(video-playback) calling _player pause in stop
(video-playback) setting buffering state to %lu
(video-playback) buffering state changed from %lu to %lu
CreateVideoDictionary
CreateImageDictionary
CreateMediaDictionary
%{public}ld
CreateMultipleMediaDictionary
PLNavigationControllerInterface unable to open system photo library: %@
Mis-matched image size and/or orientation for asset %@. PhotoKit: %.0f x %.0f (%ld). Data: %.0f x %.0f (%ld)
Video export failed for asset %@: %@
Marked temp file (%@) as purageble.
Unable to mark temp file (%@) purageble.
(video-playback) network reachability changes. Clears out cached video URL.
Clearing PLVideoView delegate before trim scrubber animation finished. Calling manually.
(video-playback) play due to buffer state change
(video-playback) pauseDueToInsufficientData due to buffer state change
(video-playback) moviePlayerPlaybackRateDidChange to 0
(video-playback) moviePlayerPlaybackRateDidChange to 1
Failed to fetch playback objects for %@
(video-playback) pause due to reset
(video-playback) _verifyOrRestartPlayback playing %u didBuffer %u
(video-playback) _verifyOrRestartPlayback rate > 0
(video-playback) _verifyOrRestartPlayback telling movie player to play
(video-playback) play in %@
Playing 360p video for cellular connection.
(streamed-video-playback) will play video for %@
(streamed-video-playback) already have a cachedNonPersistedVideoPlaybackURL %@
(streamed-video-playback) will play streamed video using original video at path %@
(video-playback) pause due to video view pause
(video-playback) pause due to stop
(video-playback) pause due to force stop
(video-playback) update poster frame visibility to %d
No PHAsset for committing pending adjustment changes
Requesting cleanupForStoreDemoMode
softlink:r:path:/System/Library/PrivateFrameworks/MediaRemote.framework/MediaRemote
softlink:r:path:/System/Library/PrivateFrameworks/ManagedConfiguration.framework/ManagedConfiguration
PHSettings
PLAVPlayerView
PLAssetContainerDataSource
PHAssetCollectionDataSource
NSObject
PLCAAnimationDelegate
CAAnimationDelegate
PLCGPathCache
PLCacheEntry
PLCache
PLCommentsFontCache
PLContactPhotoOverlay
PLCropOverlay
PLCropOverlayCropView
PLCropOverlayBottomBar
PLCropOverlayPreviewBottomBar
PLCropOverlayWallpaperBottomBar
PhotoSaving
PLDataArrayInputStream
PLExpandableImageView
PLExpandableView
PLImageScrollView
PLImageView
PLMoviePlayerController
PHRootSettings
PLMoviePlayerControllerManager
PLMoviePlayerView
PLNavigationControllerInterface
PLImagePickerUtils
PLPhotoTileCloudPlaceholderView
PLTilePlaceholderView
PLPhotoTilePlaceholderView
PLTileContainerView
PLPhotoTileViewController
UIScrollViewDelegate
UIGestureRecognizerDelegate
PLPhotoTileCloudPlaceholderViewDelegate
PLPhotosApplication
UIApplicationDelegate
PLPhotosDefaults
PLProgressHUD
PhotoLibrary
PLProgressView
PLPublishingAgent
PLDataArrayInputStreamProgressDelegate
PLPublishAlbum
PLPublishingMedia
PLRoundProgressView
PLProgressArcLayer
PLSlalomRegionEditor
PLTVOutWindow
PLTiledLayer
PLTileableLayer
PLUIEditImageViewController
PHImageManagerSettings
PLUIView
PLUIEditVideoViewController
UIImagePickerControllerDelegate
UINavigationControllerDelegate
PLUIImageViewController
PLVideoViewDelegate
PLPhotoTileViewControllerDelegate
PLCropOverlayDelegate
PLVideoOverlayButton
PLHighFidelityVideoOverlayButton
PLFlatVideoOverlayButton
PLVideoRemaker
PLAssetImageGenerator
PLVideoPosterFrameView
PLVideoView
UIMovieScrubberDelegate
UIMovieScrubberDataSource
PLMoviePlayerControllerDelegate
PLSlalomRegionEditorDelegate
PLVideoEditingOverlayView
PHResourceDownloadSettings
PLWallpaperButton
_UIBackdropViewObserver
PhotosInternal
PhotoLibraryAdditions
copy
currentHandler
handleFailureInMethod:object:file:lineNumber:description:
_userDefaults
_defaultsKey
objectForKey:
objectForKeyedSubscript:
_signatureDictionary
isEqualToDictionary:
settingsFromArchiveDictionary:
initWithDefaultValues
suiteName
initWithSuiteName:
standardUserDefaults
parentSettings
save
dictionaryWithCapacity:
archiveDictionary
setObject:forKeyedSubscript:
setObject:forKey:
synchronize
dictionary
setSuiteName:
sharedSettings
createSharedSettings
T@"NSString",C,N
initWithFrame:
layer
setContentsOpaque:
setScaleMode:
player
setPlayer:
setScaleMode:duration:
setAnimationDuration:
setVideoGravity:
videoRect
layerClass
scaleMode
_scaleMode
T@"AVPlayerLayer",R,&,D,N
T@"AVPlayer",&,N
Tq,N,V_scaleMode
T{CGRect={CGPoint=dd}{CGSize=dd}},R,N
init
count
initWithCapacity:
objectAtIndex:
dealloc
countByEnumeratingWithState:objects:count:
indexOfObject:
globalIndexOfAsset:
assetContainerForAssetGlobalIndex:
allAssetsCount
section
item
indexPathForItem:inSection:
indexOffsetForAssetContainerAtAssetIndex:
assetInAssetContainer:atIndex:
objectAtIndexedSubscript:
globalIndexForIndexPath:
arrayWithObjects:count:
fetchPHObjectsForOIDs:
lastObject
assetContainerForAsset:
incrementAssetIndexPath:insideCurrentAssetContainer:andWrap:
decrementAssetIndexPath:insideCurrentAssetContainer:andWrap:
lastAssetIndexPath
firstAssetIndexPath
assetCountForContainerAtIndex:
_indexOfNextNonEmptyAssetContainerAfterContainerIndex:wrap:
_indexOfPreviousNonEmptyAssetContainerBeforeContainerIndex:wrap:
objectIDAtIndex:
array
pl_managedAssetsForAssets:
addObjectsFromArray:
assetCollectionsFetchResult
changeDetailsForFetchResult:
fetchResultAfterChanges
insertedObjects
removedObjects
mutableCopy
removeObjectsForKeys:
firstObject
photoLibrary
librarySpecificFetchOptions
setIncludeHiddenAssets:
fetchAssetsInAssetCollection:options:
hasIncrementalChanges
allKeys
_updateCachedValues
description
appendFormat:
isEqual:
class
self
performSelector:
performSelector:withObject:
performSelector:withObject:withObject:
isProxy
isKindOfClass:
isMemberOfClass:
conformsToProtocol:
respondsToSelector:
retain
release
autorelease
retainCount
zone
hash
superclass
debugDescription
TQ,R
T#,R
T@"NSString",R,C
assetsInAssetCollection:
T@"PHFetchResult",R,N
initWithAssetCollectionsFetchResult:collectionsAssetsFetchResults:
_updateCachedCount:forContainerAtContainerIndex:
indexPathForGlobalIndex:
incrementGlobalIndex:insideCurrentAssetContainer:andWrap:
decrementGlobalIndex:insideCurrentAssetContainer:andWrap:
assetAtGlobalIndex:
assetWithObjectID:
assetsInAssetCollectionAtIndex:
newAssetsFetchResults
assetAtIndexPath:
indexPathOfAsset:
assetContainerAtIndex:
indexOfContainer:
hasAssetAtIndexPath:
findNearestIndexPath:preferNext:
assetCountForContainer:
pl_fetchAllAssets
viewControllerPhotoLibraryDidChange:
_assetCollectionsFetchResult
_assetsFetchResultByAssetCollection
_allAssetsCount
_containerCounts
_cachedValuesNeedUpdate
_lastAssetCollectionIndex
T@"PHFetchResult",R,N,V_assetCollectionsFetchResult
start
completion
animationDidStart:
animationDidStop:finished:
setCompletion:
setStart:
_completion
_start
T@?,C,N,V_completion
T@?,C,N,V_start
valueWithCGRect:
sharedPathCache
setPath:forKey:
pathForKey:
_pathCache
setObject:
object
lruListEntry
_object
_entry
setObject:forKey:cost:
removeObjectForKey:
removeAllObjects
initWithCountLimit:totalCostLimit:
_cacheEntries
_countLimit
_currentCount
_totalCostLimit
_currentCost
_lock
_lru
defaultCenter
_contentSizesDidChange:
addObserver:selector:name:object:
removeObserver:
_invalidateCache
postNotificationName:object:
preferredFontDescriptorWithTextStyle:addingSymbolicTraits:options:
_shortCaptionFontDescriptor
fontDescriptorWithSymbolicTraits:
_bodyFontDescriptor
_emphasizedShortCaptionFontDescriptor
fontWithDescriptor:size:
_shortSubheadlineFontDescriptor
_shortBodyFontDescriptor
_emphasizedBodyFontDescriptor
sharedCache
youLikeFont
likeFont
commentTextFont
commentAttributionDateFont
commentAttributionNameFont
commentEntryFont
commentSendButtonFont
__shortCaptionFontDescriptor
__emphasizedShortCaptionFontDescriptor
__shortSubheadlineFontDescriptor
__bodyFontDescriptor
__emphasizedBodyFontDescriptor
__shortBodyFontDescriptor
T@"UIFont",R,N
inscribingBounds
bounds
clearColor
setBackgroundColor:
preferredFontDescriptorWithTextStyle:
setFont:
whiteColor
setTextColor:
addSubview:
_commonPLContactPhotoOverlayInitialization
initWithCoder:
layoutSubviews
sizeToFit
setFrame:
bezierPathWithRect:
bezierPathWithOvalInRect:
appendPath:
setUsesEvenOddFillRule:
circularLayer
CGPath
setPath:
setFillRule:
colorWithRed:green:blue:alpha:
CGColor
setFillColor:
addSublayer:
bringSubviewToFront:
setCircularLayer:
overlayEdgeInsets
beginAvatarTrackingFromImageView:
endAvatarTracking
titleLabel
_avatarPreview
_titleLabel
__avatarPreview
_circularLayer
T@"UIImageView",R,N,V__avatarPreview
T@"CAShapeLayer",&,N,V_circularLayer
T@"UILabel",R,N,V_titleLabel
T{UIEdgeInsets=dddd},R,N
setAutoresizingMask:
defaultHeight
_updateToolbarItems:
_newOverlayViewWithFrame:lighterEdgeOnTop:
setText:
setTextAlignment:
colorWithWhite:alpha:
setShadowColor:
setShadowOffset:
frame
isDisplayedInPopover
setInPopover:
isTelephonyUIMode:
setBackgroundStyle:
setPreviewBottomBar:
cancelButton
_tappedBottomBarCancelButton:
addTarget:action:forControlEvents:
doneButton
_tappedBottomBarDoneButton:
playbackButton
_tappedBottomBarPlaybackButton:
buttonWithType:
setTitleColor:forState:
setExclusiveTouch:
setTitle:forState:
insertSubview:belowSubview:
pl_setHidden:animated:
setWallpaperBottomBar:
doCancelButton
lightGrayColor
doSetHomeScreenButton
_tappedBottomBarSetHomeButton
doSetLockScreenButton
_tappedBottomBarSetLockButton
doSetBothScreenButton
_tappedBottomBarSetBothButton
motionToggle
_tappedBottomBarMotionToggle
doSetButton
statusBarHeightDidChange:
_setMode:
_updateTitle
_updateCropRectInRect:
setCropRect:
mode
safeAreaInsets
bottomBar
mainScreen
scale
contactPhotoOverlay
sharedApplication
statusBarHeight
convertRect:fromView:
image
size
cameraBottomBar
setCameraBottomBar:
setNeedsLayout
wallpaperBottomBar
setShowsCropRegion:
setCropRectVisible:duration:
setHidden:
removeFromSuperview
initWithFrame:mode:offsettingStatusBar:
isStatusBarHidden
setUserInteractionEnabled:
setOpaque:
insertSubview:aboveSubview:
_createCropView
setAlpha:
animateWithDuration:animations:
_bottomBar
previewBottomBar
setStyle:
_updateEditImageCancelButtonTitle
_updateEditImageDoneButtonTitle
_updateMotionToggle
defaultOKButtonTitle
setStyle:animated:
setPlayingVideo:
setEnabled:
_fadeOutCompleted:
animateWithDuration:animations:completion:
done
cropOverlayWasCancelled:
cropOverlayWasOKed:
setImageAsHomeScreenClicked:
setImageAsLockScreenClicked:
setImageAsHomeScreenAndLockScreenClicked:
setMotionToggleIsOn:
motionToggledManually:
_bottomBarFileSizeMenuActions
elementWithProvider:
menuWithTitle:children:
cropOverlayFileSizeMenuActions:
_updateWallpaperBottomBarSettingButtons
setShouldOnlyShowHomeScreenButton:
setShouldOnlyShowLockScreenButton:
setMotionToggleHidden:
motionToggleHidden
togglePlaybackState
isPlayingVideo
cropOverlayPlay:
cropOverlayPause:
cropOverlayBottomBarPlayButtonClicked:
cropOverlayBottomBarPauseButtonClicked:
hitTest:withEvent:
isDescendantOfView:
isEqualToString:
isWallpaperUIMode:
showInView:
hide
fileResizingButton
_fileResizingButton
setTitle:
length
defaultCancelButtonTitle
initWithBarButtonSystemItem:target:action:
_playButtonPressed:
_pauseButtonPressed:
arrayWithObjects:
setItems:
resizableImageWithCapInsets:resizingMode:
setImage:
setDisplayedInPopover:
controlsAreVisible
setControlsAreVisible:
overlayContainerView
setOverlayContainerView:
initWithFrame:mode:
insertIrisView:
bottomBarFrame
didCapturePhoto
didCaptureVideo
didPlayVideo
didPauseVideo
setDelegate:
dismiss
cancelButtonClicked:
_bottomBarFileSizeMenu
setIsEditingHomeScreen:
setIsEditingLockScreen:
cropRect
setTitle:okButtonTitle:
titleRect
setOKButtonTitle:
setDefaultOKButtonTitle:
setDefaultCancelButtonTitle:
setOKButtonShowsCamera:
setCancelButtonTitle:
setShowProgress:title:
removeProgress
setProgressDone
setTitleHidden:animationDuration:
setPreviewMode:
previewMode
setFileResizingTitle:
setFileResizingHidden:
motionToggleIsOn
isEditingHomeScreen
isEditingLockScreen
delegate
_cameraCancelButton
.cxx_destruct
_cropView
_shadowView
_overlayContainerView
_cropRect
_customToolbar
_topShineView
_hud
_statusBarHeight
_mode
_previewMode
_cropRectIsVisible
_offsetStatusBar
_tookPhoto
_showsCropRegion
_controlsAreVisible
_bottomShineView
_okButton
_wildcatPickerTopView
_wildcatPickerBottomView
_motionToggleIsOn
_isEditingHomeScreen
_isEditingLockScreen
_displayedInPopover
_contactPhotoOverlay
_defaultOKButtonTitle
_defaultCancelButtonTitle
_delegate
__bottomBar
__cameraCancelButton
T@"PLCropOverlayBottomBar",R,N,V__bottomBar
T@"UIButton",R,N,V__cameraCancelButton
T@"PLContactPhotoOverlay",R,N,V_contactPhotoOverlay
T@"UIView",&,N
T@"PLCropOverlayWallpaperBottomBar",R,N
TB,N,V_motionToggleIsOn
TB,N,V_isEditingHomeScreen
TB,N,V_isEditingLockScreen
TB,N
displayedInPopover
TB,N,GisDisplayedInPopover,V_displayedInPopover
T@"NSString",C,N,V_defaultOKButtonTitle
T@"NSString",C,N,V_defaultCancelButtonTitle
T@"<PLCropOverlayDelegate>",W,N,V_delegate
_updateCropRectIfNeeded
alpha
setBorderColor:
setBorderWidth:
_removeCropViews
_aboveCropView
_cropRectView
_belowCropView
_commonPLCropOverlayBottomBarInitialization
_updateBottomBars
_updateStyle
_updatePreviewBottomBarForPlaybackState
imageNamed:inBundle:
setImage:forState:
_isEditingStyle:
style
isInPopover
_playingVideo
_inPopover
_style
_cameraBottomBar
_previewBottomBar
_wallpaperBottomBar
Tq,N,V_style
T@"UIView",&,N,V_cameraBottomBar
T@"PLCropOverlayPreviewBottomBar",&,N,V_previewBottomBar
T@"PLCropOverlayWallpaperBottomBar",&,N,V_wallpaperBottomBar
playingVideo
TB,N,GisPlayingVideo,V_playingVideo
inPopover
TB,N,GisInPopover,V_inPopover
setAccessibilityIdentifier:
setAdjustsFontSizeToFitWidth:
_updateBackgroundStyle
_commonPLCropOverlayEditPhotoBottomBarInitialization
semanticContentAttribute
userInterfaceLayoutDirectionForSemanticContentAttribute:
textRectForBounds:limitedToNumberOfLines:
setBackgroundStyle:animated:
safeAreaInsetsDidChange
backgroundStyle
_backgroundStyle
_cancelButton
_doneButton
_playbackButton
Tq,N,V_backgroundStyle
T@"UIButton",R,N,V_cancelButton
T@"UIButton",R,N,V_doneButton
T@"UIButton",R,N,V_playbackButton
T@"UIButton",R,N,V_fileResizingButton
_commonPLCropOverlayWallpaperBottomBarInitializationPhone
autoLayoutCommonWallpaperButton
setTranslatesAutoresizingMaskIntoConstraints:
initWithContentColor:
systemFontOfSize:
initWithSettings:strength:string:font:
numberWithDouble:
dictionaryWithObjects:forKeys:count:
constraintsWithVisualFormat:options:metrics:views:
activateConstraints:
constraintWithItem:attribute:relatedBy:toItem:attribute:multiplier:constant:
setActive:
autoLayoutCommonWallpaperButtonWithStyle:
widthForToggleText
setMaxToggleWidth:
initWithPrivateStyle:
addObserver:
backdropViewDidChange:
_commonPLCropOverlayWallpaperBottomBarInitialization
_layoutSubviewsPhone
window
convertRect:fromCoordinateSpace:
backdropView
sendSubviewToBack:
initWithFrame:style:
sizeThatFits:
_sizeForString:
setString:
font
sizeWithAttributes:
string
updateForChangedSettings:
_commonPLCropOverlayWallpaperBottomBarInitializationPad
_layoutSubviewsPad
shouldOnlyShowLockScreenButton
shouldOnlyShowHomeScreenButton
setTitleLabel:
separatorLine
setSeparatorLine:
setBackdropView:
maxToggleWidth
_motionToggleHidden
_shouldOnlyShowLockScreenButton
_shouldOnlyShowHomeScreenButton
_doCancelButton
_doSetButton
_doSetHomeScreenButton
_doSetLockScreenButton
_doSetBothScreenButton
_motionToggle
_separatorLine
_backdropView
_maxToggleWidth
T@"_UILegibilityLabel",&,N,V_titleLabel
T@"UIView",&,N,V_separatorLine
T@"_UIBackdropView",&,N,V_backdropView
Td,N,V_maxToggleWidth
T@"PLWallpaperButton",R,&,N,V_doCancelButton
T@"PLWallpaperButton",R,&,N,V_doSetButton
T@"PLWallpaperButton",R,&,N,V_doSetHomeScreenButton
T@"PLWallpaperButton",R,&,N,V_doSetLockScreenButton
T@"PLWallpaperButton",R,&,N,V_doSetBothScreenButton
T@"PLWallpaperButton",R,&,N,V_motionToggle
TB,N,V_motionToggleHidden
TB,N,V_shouldOnlyShowLockScreenButton
TB,N,V_shouldOnlyShowHomeScreenButton
scrollView
initWithUnsignedInt:
cancelMouseTracking
beginIgnoringInteractionEvents
initWithObjectsAndKeys:
_backgroundSavePhoto:cropRect:minimalCropDimension:
unsignedIntValue
dictionaryWithCroppedImageForRect:minimalCropDimension:withOptions:
_savePhotoFinished:
endIgnoringInteractionEvents
cropOverlay:didFinishSaving:
beginBackgroundSaveWithTile:progressTitle:completionCallbackTarget:options:
stream:handleEvent:
_scheduleCallback
getCFRunLoop
_scheduleInCFRunLoop:forMode:
_unscheduleFromCFRunLoop:forMode:
_updateProgress
cancelPreviousPerformRequestsWithTarget:selector:object:
dataArrayInputStreamBytesWereRead:
arrayWithObject:
performSelector:withObject:afterDelay:inModes:
bytes
_scheduleProgressUpdate
initWithDataArray:
_streamEventTrigger
_setCFClientFlags:callback:context:
scheduleInRunLoop:forMode:
removeFromRunLoop:forMode:
open
close
streamError
streamStatus
read:maxLength:
totalBytes
bytesRead
hasBytesAvailable
getBuffer:length:
progressDelegate
setProgressDelegate:
_dataArray
_bodyData
_dataCount
_dataLength
_dataOffset
_currentIndex
_currentOffset
_currentLength
_openEventSent
_streamStatus
_progressDelegate
_rls
_clientCallback
_clientContext
T@"<PLDataArrayInputStreamProgressDelegate>",N,V_progressDelegate
setEdgeAntialiasingMask:
setBorderAndAccessoriesVisible:
initWithFrame:frameStyle:withBorder:
initWithFrame:frameStyle:
videoView
sizeThatFits:allowRounding:
convertRect:toView:
contractedFrame
expandedFrame
imageSize
isTracking
state
setPlaceholderScale:
pinchRect:inView:insetTouches:
superview
locationOfTouch:inView:
_contentView
_setOriginalSize:
setTransform:
_expansionFraction
_borderAlphaForExpansionFraction:
setBorderAndAccessoriesAlpha:
allowsExpansion
convertPoint:toView:
_updatePinchWidthAndScaleWithLeftPoint:rightPoint:
center
_updateBorderAndAccessoriesAlpha
velocity
setCenter:
setAnchorPoint:
setEdgeAntialiasingEnabled:
setSize:angle:
_newSizeFromSize:
_currentScale
_expandedScale
_snappedExpandedFrame
_bounceToPlace:finished:context:
_bounceBack:finished:context:
finishTransition
beginAnimations:context:
setAnimationCurve:
setAnimationDelegate:
setAnimationDidStopSelector:
setAnimationDelay:
commitAnimations
performSelector:withObject:afterDelay:
setTransformAndCenterForFrame:
setBorderAndAccessoriesAlpha:forced:
boolValue
layoutBelowIfNeeded
updateFullSizeImageVisibleArea
isBorderAndAccessoriesVisible
setImage:isFullscreen:
setFullSizeImageJPEGData:size:orientation:
setName:
name
showsPlaceholder
setShowsPlaceholder:
layoutIfNeeded
imageView
setVideoView:
setShadowEnabled:
isShadowEnabled
setTransitionProgress:
transitionProgress
setTextBadgeString:
renderSnapshotInContext:
imageBorderWidth
pointInside:withEvent:
stateDidChangeFrom:
beginTrackingPinch:
continueTrackingPinch:
completeTrackingPinch:toState:duration:
frameOfImage
imageRotationAngle
isBeingManipulated
photo
setPhoto:
_imageView
_imageID
_originalSize
_originalWidth
_originalAngle
_anchorPoint
_imageRotationAngle
_pinchWidth
_pinchAngle
_pinchScale
_initialExpandingFrame
_originalBounds
_currentAngle
_centerOffset
_photo
_exImageFlags
T{CGSize=dd},R,N
T@"PLVideoView",&,N
TB,R,N
borderAndAccessoriesVisible
TB,N,GisBorderAndAccessoriesVisible
T@"PLManagedAsset",&,N,V_photo
beginDisablingInterfaceAutorotation
isInterfaceAutorotationDisabled
endDisablingInterfaceAutorotation
_setAutorotationDisabled:
expandableViewDidCompleteCollapsing:
expandableViewWillBeginExpanding:
expandableView:willCancelCollapsingWithDuration:
expandableView:willCompleteCollapsingWithDuration:
expandableView:willCompleteExpandingWithDuration:
expandableView:willCancelExpandingWithDuration:
expandableViewDidCompleteExpanding:
expandableViewDidBeginCollapsing:
expandableViewDidCancelExpanding:
expandableViewDidCancelCollapsing:
_notifyWillBeginExpanding
_notifyWillCompleteExpandingWithDuration:
_notifyWillCancelExpandingWithDuration:
_notifyDidCompleteExpanding
_notifyWillBeginCollapsing
_notifyDidCancelExpanding
_notifyWillCancelCollapsingWithDuration:
_notifyWillCompleteCollapsingWithDuration:
_notifyDidCancelCollapsing
_notifyDidCompleteCollapsing
stateWillChangeTo:
setContractedFrame:
_transitionFromContracted:withDuration:
_transitionFromExpanding:withDuration:
_transitionFromCompleteExpand:withDuration:
_transitionFromCancelExpand:withDuration:
_transitionFromExpanded:withDuration:
_transitionFromContracting:withDuration:
_transitionFromCancelContract:withDuration:
_transitionFromCompleteContract:withDuration:
expandableView:expansionFractionChanged:
setExpansionFraction:
numberOfTouches
_canPinch
_removeAllAnimations:
updatePinchState:
setState:withDuration:
notifyExpansionFraction:force:
snapState:
finishTransitionToState:
transform
willMoveToWindow:
didMoveToWindow
startedPinch:
continuedPinch:
finishedPinch:
canceledPinch:
collapseWithAnimation:completion:
expandWithAnimation:completion:
setExpandedFrame:
setAllowsExpansion:
previousState
expansionFraction
canCollapse
_collapsingCompletionHandler
_expansionCompletionHandler
_contractedFrame
_expandedFrame
_leftTouchLocation
_rightTouchLocation
_previousLeftLocation
_previousRightLocation
_leftTouchIndex
_rightTouchIndex
_pinchVelocity
_trackingTimeInterval
_expandFlags
T{CGRect={CGPoint=dd}{CGSize=dd}},N
setScrollsToTop:
setDecelerationRate:
zoomScale
contentOffset
willAnimateRotationToInterfaceOrientation:
adjustZoomScaleAfterRotation
setZoomScale:
setContentOffset:
setAdjustZoomScaleAfterRotation:
_adjustZoomScaleAfterRotation
TB,N,V_adjustZoomScaleAfterRotation
blackColor
setContentMode:
setAllowsEdgeAntialiasing:
setAllowsDisplayCompositing:
setShadowRadius:
renderInContext:
badgeOffset
_leftAccessoryViewFrame
_bottomRightAccessoryViewFrame
_updateShadowPath
_transformForFullSizeImageTiledLayer
begin
setValue:forKey:
commit
setShadowPath:
pl_firstKeyWindow
screen
removeFromSuperlayer
initWithJPEGData:placeholderImage:screenSize:
convertRect:fromLayer:
setVisibleRectangle:zoomScale:
_setShadowEnabled:force:
shadowOpacity
setShadowOpacity:
_updatePlaceholderAlpha
setContents:
setContentsScale:
setContentsCenter:
setOpacity:
opacity
_updatePlaceholderLayout
placeholderSize
initWithWhite:alpha:
setLineBreakMode:
setBaselineAdjustment:
setMinimumScaleFactor:
setCornerRadius:
setSize:
text
textBadgeForString:photoSize:
setLeftAccessoryView:animated:
setAllowsGroupOpacity:
setBottomRightAccessoryView:animated:
insertSubview:below:
initialize
shouldDrawShadows
parentDidLayout
borderAndAccessoriesAlpha
setDrawsBorder:
drawsBorder
setDimmed:
isDimmed
textBadgeString
setLeftAccessoryView:
setLeftAccessoryViewOffset:
setBottomRightAccessoryView:
setAccessoryViewsAlpha:
leftAccessoryView
leftAccessoryViewOffset
bottomRightAccessoryView
accessoryViewsAlpha
placeholderScale
_name
_borderView
_videoView
_placeholderView
_leftAccessoryView
_bottomRightAccessoryView
_leftAccessoryViewOffset
_textBadge
_shadowEnabled
_suppressShadowDrawing
_borderViewIsVisible
_drawsBorder
_aspectRatio
_lastBorderAlphaTime
_lastShadowAlphaTime
_transitionProgress
_edgeAntialiasingEnabled
_fullSizeImageTiledLayer
_fullSizeImageOrientation
_showsPlaceholder
_accessoryViewsAlpha
_placeholderScale
T@"NSString",C,N,V_name
dimmed
TB,N,GisDimmed
Tf,N
shadowEnabled
TB,N,GisShadowEnabled
Td,N,V_transitionProgress
T@"UIView",&,N,V_leftAccessoryView
T{CGSize=dd},N,V_leftAccessoryViewOffset
T@"UIView",&,N,V_bottomRightAccessoryView
Td,N,V_accessoryViewsAlpha
TB,R,N,V_showsPlaceholder
Td,N,V_placeholderScale
bundleForClass:
URLForResource:withExtension:
_registerForNotifications
_setupPlayer
_updateTVOutEnabled
_updateDisableAirPlayMirroringDuringPlayback
_updateBackgroundViewInformation
requestToResignAsActiveController
_unregisterForNotifications
_setPlayerItem:
_tearDownPlayer
_simpleRemoteNotification:
_willSuspendNotification:
_willBeginSuspendAnimationNotification:
_willResignNotification:
_screenDidConnect:
_screenDidDisconnect:
_willEnterForegroundNotification:
_didEnterBackgroundNotification:
beginReceivingRemoteControlEvents
endReceivingRemoteControlEvents
auxiliarySession
setCategory:error:
setAudioSession:
setExternalPlaybackVideoGravity:
setActionAtItemEnd:
_playerKeysToObserve
addObserver:forKeyPath:options:context:
removeObserver:forKeyPath:context:
pause
URLFromPath:
asset
_setPlaybackState:
_setBufferingState:
_asset
_loadAsset:
seekToTime:toleranceBefore:toleranceAfter:
removeObserver:name:object:
_playerItemDidReachEndNotification:
_playerItemFailedToPlayToEndNotification:
replaceCurrentItemWithPlayerItem:
_updateFromPendingTime
statusOfValueForKey:error:
_didLoadValueOfKey:forAsset:
loadValuesAsynchronouslyForKeys:completionHandler:
isMainThread
moviePlayerDurationAvailable:
localizedDescription
status
moviePlayerReadyToPlay:
_playerItemFailedToPlayToEnd:
_streamRanDry
_streamBufferFull
_streamLikelyToKeepUp
_streamUnlikelyToKeepUp
_dispatchOnMainThreadWithBlock:
_playerRateDidChange:
intValue
_serverConnectionDidDie:
moviePlayerDidChangeExternalPlaybackType:
moviePlayerReadyToDisplay:
observeValueForKeyPath:ofObject:change:context:
null
floatValue
moviePlayerPlaybackRateDidChange:
_isStreamableAsset:
play
setCurrentTime:timeSnapOption:forceUpdate:
setCurrentTime:timeSnapOption:
_delayedUpdateFromPendingTime
seekToTime:toleranceBefore:toleranceAfter:completionHandler:
duration
rate
currentTime
moviePlayerBufferingStateDidChange:
absoluteString
_isNetworkSupportedPath:
compare:options:range:
moviePlayerPlaybackStateDidChange:fromPlaybackState:
_restoreTVOutVideoIfNecessary
userInfo
moviePlayerHeadsetPlayPausePressed:
moviePlayerHeadsetNextTrackPressed:
moviePlayerHeadsetPreviousTrackPressed:
stop
isSuspendedUnderLock
isExternalPlaybackActive
moviePlayerWasSuspendedDuringPlayback:
_tearDownTVOutWindow
beginBackgroundTaskWithExpirationHandler:
_pausePlaybackForNotification
_setForceDisableTVOut:
_displayVideoView
_setCALayerDestinationIsTVOut:
reattachVideoView
_setupTVOutWindow
endBackgroundTask:
isActiveController
moviePlayerControllerShouldAllowExternalPlayback:
_allowsExternalPlayback
setAllowsExternalPlayback:
setUsesExternalPlaybackWhileExternalScreenIsActive:
externalPlaybackType
videoOutActive
isExternalPlayback
destinationPlaceholderStyle
moviePlayerUpdatedDestinationPlaceholder:
sharedInstance
moveControllerToTopOfStack:
removeControllerFromStack:
setIsActiveController:
moviePlayerControllerDidBecomeActiveController:
moviePlayerControllerWillResignAsActiveController:
moviePlayerPlaybackDidEnd:
code
error
_playbackFailedWithError:
domain
moviePlayerEncounteredAuthenticationError:
moviePlayerShouldNotifyOnPreparationError:
applicationState
stringWithFormat:
alertControllerWithTitle:message:preferredStyle:
actionWithTitle:style:handler:
addAction:
view
pl_presentViewController:animated:
_exitPlayer:
moviePlayerExitRequest:exitReason:
AVAssetURLWithPath:
setPlayerItem:startTime:
playFromBeginning
playDueToEnoughData
pauseDueToInsufficientData
resetPlayer
setCurrentTime:
playbackRate
tearDownTVOutWindow
requestToBecomeActiveController
didBecomeActiveController
willResignAsActiveController
bufferingState
playbackState
TVOutEnabled
setTVOutEnabled:
forceDisableTVOut
isPreparedForPlayback
_playerItem
_player
_view
_tvOutWindow
_hasPendingTime
_pendingTime
_pendingTimeSnapOption
_forceUpdateCurrentTime
_isExternalPlayback
_exited
_lastSetCurrentTimeTime
_isSeeking
_backgroundTaskId
_audioSessionActive
_originalAudioCategory
_TVOutEnabled
_forceDisableTVOut
_isPreparedForPlayback
_isActiveController
_bufferingState
_playbackState
TB,N,V_TVOutEnabled
TB,N,S_setForceDisableTVOut:,V_forceDisableTVOut
TB,N,V_isActiveController
T@"<PLMoviePlayerControllerDelegate>",N,V_delegate
T@"AVPlayer",R,&,N,V_player
T@"PLMoviePlayerView",R,&,N,V_view
Tf,R,N
TQ,R,N,V_playbackState
Td,R,N
Td,N
TQ,R,N,V_bufferingState
TB,R,N,V_isPreparedForPlayback
rowWithTitle:childSettingsKeyPath:
sectionWithRows:title:
actionWithSettingsKeyPath:
rowWithTitle:action:
sectionWithRows:
moduleWithTitle:contents:
settingsControllerModule
imageManagerSettings
resourceDownloadSettings
_imageManagerSettings
_resourceDownloadSettings
T@"PHImageManagerSettings",R,N,V_imageManagerSettings
T@"PHResourceDownloadSettings",R,N,V_resourceDownloadSettings
removeObject:
addObject:
_playerStack
insertSubview:atIndex:
isDestinationPlaceholderHidden
setDestinationPlaceholderHidden:
_installBackgroundView:
_avPlayerView
_destinationPlaceholderHidden
_destinationPlaceholderStyle
T@"UIView",R,&,N
Tq,R,N,V_destinationPlaceholderStyle
destinationPlaceholderHidden
TB,N,GisDestinationPlaceholderHidden
parentViewController
uiipc_imagePickerController
_properties
uiipc_imagePickerOptions
identifier
uiipc_useTelephonyUI
uiipc_filterForMediaTypes:
unscaledImage
imageOrientation
_newOriginalImageForPickerFromCachedData
_imageOrientation
changeRequestForAsset:
incrementShareCount
performChanges:completionHandler:
pathManager
libraryURL
pl_PHAssetFromPhotoLibrary:
_imagePickerDidCompleteWithInfo:
arrayWithCapacity:
pl_managedAsset
isVideo
pathForVideoFile
fileURLWithPath:isDirectory:
_imagePickerDidCompleteWithInfoArray:
stringWithUTF8String:
handleFailureInFunction:file:lineNumber:description:
integerValue
addEntriesFromDictionary:
CGImage
initWithCGImage:imageOrientation:
isMultiLibraryModeEnabled
initWithPhotoLibraryURL:
openAndWaitWithUpgrade:error:
sharedPhotoLibrary
_imagePickerSavingOptions
sourceType
_valueForProperty:
showsCameraControls
assetURLForPhoto:
localIdentifier
assetsdClient
debugClient
debugSidecarFileURLsForAsset:debugSidecarFileURLs:error:
sandboxExtensionToken
initWithData:
sharedAssetsSaver
objectID
defaultFormatChooser
fullScreenFormatForCurrentDevice
formatID
requestSynchronousImageForAssetOID:withFormat:allowPlaceholder:wantURLOnly:networkAccessAllowed:trackCPLDownload:outImageDataInfo:outCPLDownloadContext:
CGRectValue
fileExtension
preferredFileExtensionForType:
compare:options:
systemPhotoLibrary
assetURLForPhoto:extension:
numberWithInt:
timeIntervalSinceReferenceDate
stopProgressTimer
setProgress:
animateWithDuration:delay:options:animations:completion:
showLoadingIndicator
startProgressTimer
setImageEdgeInsets:
_retryDownload
resetProgress
retryDownload
convertPoint:fromView:
statusBarOrientation
defaultHeightForBarSize:
fadeOutSoonIfNeededAndRemoveFromSuperview:
showLoadingIndicatorWhenReady
showErrorIndicator
updateCloudDownloadProgress:
setImageRect:
setToolbarVisible:
setRetryDelegate:
_loadingIndicatorView
_loadingContainerView
_loadingErrorButton
_indicatorIsVisible
_showingError
_showingLoading
_imageRect
_toolbarVisible
_lastViewPhaseChangeDate
setClipsToBounds:
initWithActivityIndicatorStyle:
startAnimating
boldSystemFontOfSize:
_loadingLabel
willMoveToSuperview:
_viewWillMoveToSuperView:
initWithFrame:photoTileController:
clearBackReference
canBecomeFirstResponder
_photoTileController
_updateContentInset
_centerImageInScrollView
isCloudPlaceholder
complete
isTimelapsePlaceholder
masterThumbnailResource
orientedWidth
orientedHeight
screens
_handleSingleTap:
initWithTarget:action:
_handleDoubleTap:
setNumberOfTapsRequired:
_setPhoto:
setTileFrame:
_setImage:isThumbnail:preserveFrame:
_configureViews
initWithModelPhoto:image:frame:isThumbnail:imageOrientation:allowZoomToFill:mode:
setDeliveryMode:
defaultManager
synchronousImageForAsset:targetSize:contentMode:options:
cancelFullSizeImageRequest
removeTarget:action:
removeAllGestureRecognizers
_teardownDispatchTimer
isViewLoaded
windows
_updateVideoViewForModelPhoto
isAudio
isStreamedVideo
setImageTile:
initWithFrame:videoCameraImage:orientation:
setAllowSlalomEditor:
setPosterFrameImage:
setScrubberIsSubview:
viewWillAppear:
videoOverlayPlayButton
_updatePlaceholderImageRect
requireGestureRecognizerToFail:
addGestureRecognizer:
removeFailureRequirement:
removeGestureRecognizer:
setZoomingGesturesEnabled:
previewImageView
viewDidDisappear
photoTileViewControllerCustomCenterOverlay:
_setCustomCenterOverlay:
photoTileViewControllerCanShowCenterOverlay:
isPlaying
_customCenterOverlay
setShowsPlayOverlay:
_updateSubviewOrdering
setNeedsUpdateConstraints
ensureFullSizeImageLoaded
defaultZoomScale
photoTileViewControllerAllowsEditing:
isUserInteractionEnabled
mediaType
isMediaSubtype:
representsBurst
_showBadgeViewIfAppropriate
setBadgeVisible:animated:
_installSubview:
setContentSize:
setAlwaysBounceVertical:
setAlwaysBounceHorizontal:
setPreservesCenterDuringRotation:
setShowsHorizontalScrollIndicator:
setShowsVerticalScrollIndicator:
setBouncesZoom:
setContentInsetAdjustmentBehavior:
_updatePlaceholderViewAnimated:
shouldShowPlaceholderForAsset:
_removePlaceholderView
_requestFullSizeImage
contentSize
contentInset
_clientIsWallpaper
setContentInset:
overlayInsets
shouldHideProgressIndicator
isDragging
_updatePlaceholderVisibility
photoShouldHaveHDRBadge
_setupBadgeView
photoShouldHaveAvalancheBadge
_updateReviewCheckmark
pixelWidth
pixelHeight
_updateModelPhotoWithImage:
setBounds:
updateZoomScales
_setDefaultZoomScale
cachingImageManager
cancelImageRequest:
isTVOut
setView:
viewDidDisappear:
tileIsOnScreen
photoTileViewController:didDisappear:
setBadgeVisible:
viewForZoomingInScrollView:
allowsEditing
photoTileViewControllerWillBeginGesture:
photoTileViewControllerDidEndGesture:
_performDidEndZoomBlock
_repositionBadgeView
visibleBounds
viewWillTransitionToSize:withTransitionCoordinator:
shouldSupressViewWillTransitionToSize
targetTransform
updateScaleMode
animateAlongsideTransition:completion:
transitionDuration
_performRotationUpdatesWithDuration:size:
minRotatedScale
_calculateZoomScale:inView:
updateForRotationWithDuration:isLandscape:
reloadZoomScale
viewDidLayoutSubviews
_resetZoomCommon
viewSafeAreaInsetsDidChange
didMoveToParentViewController:
updateViewConstraints
addConstraints:
isPhotoTileParentPageControllerAnimating:
photoTileViewController:willAppear:
viewDidAppear:
viewDidAppear
photoTileViewController:didAppear:
uuid
applicationWillResignActive:
applicationDidBecomeActive:
photoTileViewControllerRequestsFullScreenImage:
photoTileViewControllerSingleTap:
setLoadingMode:
setNetworkAccessAllowed:
_handleFullSizeImageRequestResult:dataUTI:orientation:
requestImageDataAndOrientationForAsset:options:resultHandler:
typeWithIdentifier:
conformsToType:
photoTileViewControllerRequestsFullSizeImage:
handleDoubleTap
setZoomScale:animated:
locationInView:
zoomToRect:animated:
photoTileViewControllerDoubleTap:
_newCGImageBackedUIImageFromImage:
force1XCroppedImage
forceNativeScreenScale
_getFullScreenImageData:forImage:fullSize:imageView:screenScaleTransform:
_newImageForAsset:targetSize:cropRect:fullSize:
setSynchronous:
setNormalizedCropRect:
setResizeMode:
requestImageForAsset:targetSize:contentMode:options:resultHandler:
newImageWithCropRect:minimalCropDimension:croppedImageData:fullScreenImageData:imageCropRect:intersectCropWithFullRect:
_setDidEndZoomingBlock:
keyWindow
statusBarStyle
statusBarFrame
zoomToFillScale
minZoomScale
photoTileViewControllerIsDisplayingLandscape:
viewIfLoaded
maxZoomScaleOverride
doubleValue
isCloudSharedAsset
cloudPlaceholderKind
setMaximumZoomScale:
setMinimumZoomScale:
_adjustScrollViewContentOffsetForInsets
isZoomedOut
_adjustZoomForEnteringMode:
setHighlightedImage:
setReviewing:animated:
_setupReviewCheckmark
setHighlighted:
tileSize
tvOutTileSize
newPhotoTileViewControllerWithFrame:imageRef:imageOrientation:allowZoomToFill:mode:
newPhotoTileViewControllerWithFrame:image:allowZoomToFill:mode:
newPhotoTileViewControllerWithFrame:modelPhoto:mode:
_shouldForwardViewWillTransitionToSize
scrollViewDidScroll:
scrollViewDidZoom:
scrollViewWillBeginDragging:
scrollViewWillEndDragging:withVelocity:targetContentOffset:
scrollViewDidEndDragging:willDecelerate:
scrollViewWillBeginDecelerating:
scrollViewDidEndDecelerating:
scrollViewDidEndScrollingAnimation:
scrollViewWillBeginZooming:withView:
scrollViewDidEndZooming:withView:atScale:
scrollViewShouldScrollToTop:
scrollViewDidScrollToTop:
scrollViewDidChangeAdjustedContentInset:
gestureRecognizerShouldBegin:
gestureRecognizer:shouldRecognizeSimultaneouslyWithGestureRecognizer:
gestureRecognizer:shouldRequireFailureOfGestureRecognizer:
gestureRecognizer:shouldBeRequiredToFailByGestureRecognizer:
gestureRecognizer:shouldReceiveTouch:
gestureRecognizer:shouldReceivePress:
gestureRecognizer:shouldReceiveEvent:
setOverlayInsets:
initForPageController
initWithModelPhoto:thumbnailImage:size:
_canShowWhileLocked
thumbnailImage
setThumbnailImage:
tileFrame
setCropOverlayRect:forCropRect:
forceZoomingGesturesEnabled
expandableImageView
updateCenterOverlay
hideContentView
showContentView
tileDelegate
setTileDelegate:
setTVOut:
userDidAdjustWallpaper
setClientIsWallpaper:
gesturesEnabled
setGesturesEnabled:
setAvalancheBadgesHidden:
installVideoOverlay:
setShouldHideProgressIndicator:
refreshTileWithFullScreenImage:modelPhoto:
didLoadImage
showErrorPlaceholderView
setFullSizeImage:
hasFullSizeImage
loadView
updateForVisibleOverlays:
noteParentViewControllerDidDisappear
scrollView:contentSizeForZoomScale:withProposedSize:
shouldAutorotateToInterfaceOrientation:
resetZoom
zoomToScale:animated:completionBlock:
zoomToFitScale
currentToMinZoomRatio
currentToDefaultZoomRatio
setOrientationDelegate:
setAllowsZoomToFill:
updateAfterCollapse
setLockedUnderCropOverlay:
setReviewing:
setPicked:
centerContentVertically
setCenterContentVertically:
setUnscaledImage:
setForceNativeScreenScale:
setForce1XCroppedImage:
inflightFullSizeImageRequestID
setInflightFullSizeImageRequestID:
setMaxZoomScaleOverride:
wantsCompactLayout
setWantsCompactLayout:
reviewing
picked
setShouldSupressViewWillTransitionToSize:
_image
_pendingImage
_unscaledImage
_modelPhoto
_scrollView
_gradientView
_reviewCheckmarkImageView
_currentTileDownloadFinished
_singleTapGestureRecognizer
_doubleTapGestureRecognizer
_tileDelegate
_imageSize
_tileFrame
_zoomToFillInsteadOfToFit
_useLessThanMinZoomForZoomedOutTest
_allowZoomToFill
_orientationDelegate
_cropRectZoomScale
_cropOverlayRect
_doubleTapZoomScale
_minZoomScale
_zoomToFillScale
_clientIsTemporarilyWallpaper
_userDidAdjustWallpaper
_wallpaperPortraitZoomScale
_wallpaperLandscapeZoomScale
_zoomScaleBeforeZooming
_cropRectBeforeDragging
_force1XCroppedImage
_forceNativeScreenScale
_centerContentVertically
_didEndZoomingBlock
_dispatchTimer
_dispatchStartTime
_dispatchTimeElapsed
_hasNotedZoom
_imageIsThumbnail
_isTVOut
_zooming
_autoZooming
_zoomGesturesEnabled
_userDidZoom
_ignoreZoomChange
_tileParentIsPageController
_lockedUnderCropOverlay
_viewDidAppear
_viewWillAppear
_didRequestFullSizeImage
_useZoomScaleForCropRect
_avalancheBadgeShouldBeHidden
_badgeShouldBeVisible
_containerView
__cachingImageManager
_fullSizeImageRequestID
_customCenterOverlayConstraints
_shouldUpdateBadgeViewOptimalLayout
_badgeViewOptimalLayoutLowestTop
_isLoadingFullSizeImage
_wantsCompactLayout
_reviewing
_picked
_shouldHideProgressIndicator
_shouldSupressViewWillTransitionToSize
_inflightFullSizeImageRequestID
_maxZoomScaleOverride
__customCenterOverlay
_overlayInsets
T@"UIView",&,N,S_setCustomCenterOverlay:,V__customCenterOverlay
T@"PHAsset",R,N
Ti,N,V_inflightFullSizeImageRequestID
T@"UIImage",&,N
T@"UIImage",&,N,V_unscaledImage
TB,N,V_centerContentVertically
T{UIEdgeInsets=dddd},N,V_overlayInsets
TB,N,V_forceNativeScreenScale
TB,N,V_force1XCroppedImage
T@"NSNumber",&,N,V_maxZoomScaleOverride
TB,N,V_wantsCompactLayout
TB,N,V_reviewing
TB,N,V_picked
TB,N,V_shouldHideProgressIndicator
TB,N,V_shouldSupressViewWillTransitionToSize
localAvailability
_stopObservingReachabilityChanges
systemLibraryURL
sharedStreamsExplictlyDisabledForPhotoLibraryURL:
registerDefaults:
_setRotationDisabledDuringTouch:
_applicationWillEnterForeground:
_applicationDidEnterBackground:
_applicationDidBecomeActive:
reloadPhotoDefaultValues
_registerForPhotoStreamActivityNotifications
prepareForApplicationWillEnterForeground
applicationIsInForeground:photoLibraryURL:
clientApplicationWillEnterForeground
setReceivingRemoteControlEvents:
setStatusBarShowsProgress:
_updateSuspensionSettings
_unregisterForPhotoStreamActivityNotifications
userDidLeavePhotosApplication
prepareForApplicationDidEnterBackground
_displayAndRemovePhoneInvitationFailures
prepareForApplicationDidBecomeActive
shouldMakeUIForDefaultPNG
updateSuspendedSettings:
initWithBool:
dictionaryWithObjectsAndKeys:
postNotificationName:object:userInfo:
sharedNetworkObserver
_networkReachabilityDidChange:
addObserver:selector:forHostname:
removeObserver:forHostname:
_startObservingReachabilityChanges
registerIdleStateChangeObserverWithToken:handler:
unregisterIdleStateChangeObserverWithToken:
applicationDidFinishLaunching:
application:willFinishLaunchingWithOptions:
application:didFinishLaunchingWithOptions:
application:handleOpenURL:
application:openURL:sourceApplication:annotation:
application:openURL:options:
applicationDidReceiveMemoryWarning:
applicationWillTerminate:
applicationSignificantTimeChange:
application:willChangeStatusBarOrientation:duration:
application:didChangeStatusBarOrientation:
application:willChangeStatusBarFrame:
application:didChangeStatusBarFrame:
application:didRegisterUserNotificationSettings:
application:didRegisterForRemoteNotificationsWithDeviceToken:
application:didFailToRegisterForRemoteNotificationsWithError:
application:didReceiveRemoteNotification:
application:didReceiveLocalNotification:
application:handleActionWithIdentifier:forLocalNotification:completionHandler:
application:handleActionWithIdentifier:forRemoteNotification:withResponseInfo:completionHandler:
application:handleActionWithIdentifier:forRemoteNotification:completionHandler:
application:handleActionWithIdentifier:forLocalNotification:withResponseInfo:completionHandler:
application:didReceiveRemoteNotification:fetchCompletionHandler:
application:performFetchWithCompletionHandler:
application:performActionForShortcutItem:completionHandler:
application:handleEventsForBackgroundURLSession:completionHandler:
application:handleWatchKitExtensionRequest:reply:
applicationShouldRequestHealthAuthorization:
application:handlerForIntent:
application:handleIntent:completionHandler:
applicationDidEnterBackground:
applicationWillEnterForeground:
applicationProtectedDataWillBecomeUnavailable:
applicationProtectedDataDidBecomeAvailable:
application:supportedInterfaceOrientationsForWindow:
application:shouldAllowExtensionPointIdentifier:
application:viewControllerWithRestorationIdentifierPath:coder:
application:shouldSaveSecureApplicationState:
application:shouldRestoreSecureApplicationState:
application:willEncodeRestorableStateWithCoder:
application:didDecodeRestorableStateWithCoder:
application:shouldSaveApplicationState:
application:shouldRestoreApplicationState:
application:willContinueUserActivityWithType:
application:continueUserActivity:restorationHandler:
application:didFailToContinueUserActivityWithType:error:
application:didUpdateUserActivity:
application:userDidAcceptCloudKitShareWithMetadata:
application:configurationForConnectingSceneSession:options:
application:didDiscardSceneSessions:
applicationShouldAutomaticallyLocalizeKeyCommands:
setWindow:
T@"UIWindow",&,N
useCompatibleSuspensionAnimation
photosPreferencesChanged
enableNetworkObservation
disableNetworkObservation
handleImportCompleteAlertResponse:flags:
isReachable
isOnWifi
currentTestName
setCurrentTestName:
currentTestOptions
setCurrentTestOptions:
notificationSuppressionContexts
setNotificationSuppressionContexts:
_receivingRemoteControlEvents
_observeForRechabilityChanges
_isReachable
_isOnWifi
_photoStreamActivityToken
_sharedPhotoStreamActivityToken
_sharedPhotoStreamInvitationFailureToken
_currentTestName
_currentTestOptions
_notificationSuppressionContexts
TB,R,N,V_isReachable
TB,R,N,V_isOnWifi
T@"NSString",&,N,V_currentTestName
T@"NSDictionary",&,N,V_currentTestOptions
T@"NSSet",C,N,V_notificationSuppressionContexts
px_deprecated_appPhotoLibrary
handlePossibleCoreDataError:
mainBundle
pathForResource:ofType:
initWithContentsOfFile:
valueForKey:
valueForKeyPath:
_reloadPhotoDefaultValuesAndNotify:
numberWithBool:
randomTransition
summarizeMomentSections
transitionForAnimationMovingForward:
transition
setTransition:
shouldPlayMusic
setShouldPlayMusic:
setMusicCollection:
musicCollection
_shouldPlayMusic
_summarizeMomentSections
_transition
_musicCollection
bezierPathWithRoundedRect:byRoundingCorners:cornerRadii:
resizableImageWithCapInsets:
initWithImage:
_setBackdropMaskViewFlags:
contentView
setNeedsDisplay
stopAnimating
_flatImageWithColor:
defaultSizeForStyle:
_activityIndicatorView
_label
_checkmarkView
_isShowing
connectedScenes
activationState
isKeyWindow
T@"UIWindow",R,N
backgroundView
_installBackgroundView
_syncToBackgroundType
showsCancelButton
isHidden
initWithProgressViewStyle:
setPercentComplete:
backgroundType
_removeBackgroundTintedView
_removeBackgroundBlurredView
_installBackgroundBlurredView
_installBackgroundTintedView
setBackgroundView:
backgroundBlurredView
setBackgroundBlurredView:
backgroundTintedView
setBackgroundTintedView:
isRemaking
remakingPercentComplete
progressViewMessageDuringRemake
setLabelText:
snapshot
estimatedTimeRemaining
percentComplete
currentLocale
setLocale:
setGeneratesDecimalNumbers:
setNumberStyle:
serviceName
setProgress:animated:
progress
setCancelationHandler:
_cancel:
setBackgroundType:
updateUIForPublishingAgent:
setShowsCancelButton:
cancelationHandler
_labelView
_progressView
_topDivider
_didLayout
_didSetPermanantTextOnLabelView
_progressFormatter
_backgroundType
_backgroundView
_backgroundTintedView
_backgroundBlurredView
_showsCancelButton
_cancelationHandler
Tq,N,V_backgroundType
T@"UIView",&,N,V_backgroundView
T@"UIView",&,N,V_backgroundTintedView
T@"_UIBackdropView",&,N,V_backgroundBlurredView
TB,N,V_showsCancelButton
T@?,C,N,V_cancelationHandler
selectedOption
allowsHDOver3GUpload
setEnableHDUpload:
setUserInfo:
_startNetworkObservation
_setUpPublishingParams
_cancelRemaking:
stringByAppendingString:
stringByResolvingSymlinksInPath
stringByAppendingPathComponent:
bundleWithPath:
principalClass
initWithMedia:
sharedConnection
effectiveBoolValueForSetting:
isHDVideo
setMediaPath:
setDeleteMediaFileAfterPublishing:
setMediaIsHDVideo:
canUploadHDVideoOverCellular
setAllowsHDOver3GUpload:
_setApproximateVideoUploadSizes
getSDRemakerModeForMode:
approximateByteSizeForMode:duration:
setApproximateSDUploadSize:
getHDRemakerModeForMode:
setApproximateHDUploadSize:
publishingAgentCancelButtonClicked:
publishingAgentDoneButtonClicked:
_remakerModeForSelectedOption
defaultDurationForTransition:
isVideoMedia
_agentIsReadyToPublish:
_transcodeVideo:
publish
publishingAgentDidBeginPublishing:
navigationController
publishingAgentWillBeDisplayed:
presentViewController:animated:completion:
_stopNetworkObservation
presentingViewController
dismissViewControllerAnimated:completion:
mediaTitle
removeObjectAtIndex:
initWithDouble:
initWithLongLong:
_updateStatisticsFromSnapshots
longLongValue
cancel
initWithPublishingMedia:
setMode:
setTrimStartTime:
setTrimEndTime:
remake
publishingAgentDidStartRemaking:
publishingAgentDidEndRemaking:didSucceed:
_remakerDidFinish:
messageForRemakingProgress
allowsViewingOnHost
mediaURL
URLWithString:
defaultWorkspace
openSensitiveURL:withOptions:
allowsTellingFriend
tellAFriendBody
tellAFriendURL
tellAFriendSubject
URLFragmentAllowedCharacterSet
stringByAddingPercentEncodingWithAllowedCharacters:
publishingAgentForBundleNamed:toPublishMedia:
allowsCellularAccessForRequests
mediaPath
deleteMediaFileAfterPublishing
mediaData
setMediaData:
isPublishing
setPublishing:
setRemakerMode:
setTrimStartTime:andEndTime:
resignPublishingSheetResponders
cancelButtonClicked
doneButtonClicked
presentModalSheetInViewController:
willDismiss
maximumVideoDuration
setTotalBytesWritten:totalBytes:
cancelRemaking
videoRemakerDidBeginRemaking:
videoRemakerDidEndRemaking:temporaryPath:
videoRemaker:progressDidChange:
showAlertWithError:
ownerIsCamera
setOwnerIsCamera:
approximateHDUploadSize
approximateSDUploadSize
mediaIsHDVideo
enableHDUpload
needsTrimming
setNeedsTrimming:
remakerMode
setSelectedOption:
progressMultiplier
setProgressMultiplier:
shouldCancelPublish
setShouldCancelPublish:
_userInfo
_mediaPath
_mediaData
_mimeType
_deleteAfterPublishing
_changeRate
_currentValue
_estimatedTimeRemaining
_maxValue
_normalizedCurrentValue
_normalizedMaxValue
_percentComplete
_remakingPercentComplete
_progressMultiplier
_snapshotTimes
_snapshotValues
_ownerIsCamera
_needsRemaking
_startTime
_endTime
_approximateHDUploadSize
_approximateSDUploadSize
_mediaIsHDVideo
_enableHDUpload
_needsTrimming
_allowsHDOver3GUpload
_selectedOption
_remaker
_remakerMode
_completionSelector
_remakingWasCancelled
_remaking
_publishing
_shouldCancelPublish
T@"<PLPublishingAgentDelegate>",N,V_delegate
TB,N,V_ownerIsCamera
Tq,N,V_approximateHDUploadSize
Tq,N,V_approximateSDUploadSize
TB,N,V_mediaIsHDVideo
TB,N,V_enableHDUpload
TB,N,V_needsTrimming
Ti,N,V_remakerMode
Ti,N,V_selectedOption
Tf,N,V_progressMultiplier
TB,N,V_allowsHDOver3GUpload
TB,N,V_shouldCancelPublish
localizedCaseInsensitiveCompare:
compare:
title
_title
T@"NSString",&,N,V_title
initWithAsset:
isValidPublishingMedia:
assetWithURL:
initWithManagedAsset:
initWithAVURLAsset:
setAsset:
durationForManagedAsset:applyVideoAdjustments:
setIsVideo:
setPathForVideoFile:
assetURL
setAssetURL:
setIsHDVideo:
setDuration:
pathExtension
typeWithFilenameExtension:
path
tracksWithMediaType:
naturalSize
_isVideo
_isHDVideo
_pathForVideoFile
_assetURL
_duration
T@,&,N,V_asset
TB,N,V_isVideo
T@"NSString",&,N,V_pathForVideoFile
T@"NSURL",&,N,V_assetURL
TB,N,V_isHDVideo
Td,N,V_duration
_updateSubviews
invalidate
_setContentsScale:
_updateSublayersContentsScale
_contentsScale
_progressArcLayer
_setContentView:
traitCollection
userInterfaceStyle
labelColor
manualColor
getRed:green:blue:alpha:
colorWithAlphaComponent:
setPieRadius:
skipResetOnRelayout
_sliceLayer
_setSliceLayer:
setZPosition:
setStrokeColor:
_circleLayer
_setCircleLayer:
setLineWidth:
_setProgressArcLayer:
setPosition:
setRadius:
_irisGlyphLayer
_setIrisGlyphLayer:
_updateUIProgress
increaseUIProgress:
scheduledTimerWithTimeInterval:repeats:block:
allowFake25PercentProgress
toRadian:
setStartAngle:
setEndAngle:
date
timeIntervalSinceDate:
recalculateIncreaseProgress:withTimeDiff:
traitCollectionDidChange:
hasDifferentColorAppearanceComparedToTraitCollection:
setInitialIncreaseRatePerFrame:
setManualColor:
setAllowFake25PercentProgress:
setSkipResetOnRelayout:
_pieCenter
_pieRadius
_progressTimer
_uiProgress
_realProgress
_increaseRate
_prevUpdateTime
_allowFake25PercentProgress
_skipResetOnRelayout
_manualColor
_progress
__contentView
__sliceLayer
__circleLayer
__progressArcLayer
__irisGlyphLayer
__contentsScale
T@"UIView",&,N,S_setContentView:,V__contentView
T@"CAShapeLayer",&,N,S_setSliceLayer:,V__sliceLayer
T@"CAShapeLayer",&,N,S_setCircleLayer:,V__circleLayer
T@"PLProgressArcLayer",&,N,S_setProgressArcLayer:,V__progressArcLayer
T@"CALayer",&,N,S_setIrisGlyphLayer:,V__irisGlyphLayer
Td,N,S_setContentsScale:,V__contentsScale
Tq,R,N,V_style
T@"UIColor",&,N,V_manualColor
TB,N,V_allowFake25PercentProgress
TB,N,V_skipResetOnRelayout
Td,N,V_progress
setNeedsDisplayOnBoundsChange:
radius
lineWidth
startAngle
endAngle
drawInContext:
_radius
_startAngle
_endAngle
_lineWidth
Td,N,V_radius
Td,N,V_startAngle
Td,N,V_endAngle
Td,N,V_lineWidth
_handleImage
_handleTintColor
setTintColor:
_updateTrack
_trackFrame
startHandleFrame
endHandleFrame
setMaxValue:
setStartValue:
setMinValue:
setEndValue:
setStartValue:notify:
setEndValue:notify:
slalomRegionEditorStartValueChanged:
slalomRegionEditorEndValueChanged:
_zoomMinValue
_zoomMaxValue
_handleFrameForValue:isStart:
_valueFromHandleFrame:isStart:
_trackFrameNoZoom
_isZoomed
_trackScale
_trimHandleWidth
isEnabled
_isTouch:inHandleIsStart:outTouchOffset:
_beginTrackingZoomWithTouch:
slalomRegionEditorDidBeginEditing:withStartHandle:
sendActionsForControlEvents:
_updateSlidersWithTouch:
_cancelZoomTrackingIfNeccessaryWithTouch:
_stopTrackingAndSendControlEvents:
slalomRegionEditorDidEndEditing:
_cancelTrackingZoom
_cancelZoom
isZoomAnimating
_valueFromStartHandleFrame:
_valueFromEndHandleFrame:
_zoomPressWasHeld
slalomRegionEditorRequestForceZoom:
slalomRegionEditorRequestForceUnzoom:
numberOfTouchesRequired
direction
minimumNumberOfTouches
translationInView:
_trackImageForZoom:
_trackColor
setFill
_tickColor
setStroke
regionEditorStyle
imageWithRenderingMode:
intrinsicContentSize
setTrackInsets:
setZoomMinValue:maxValue:
setZoomAnimating:
setRegionEditorStyle:
beginTrackingWithTouch:withEvent:
continueTrackingWithTouch:withEvent:
endTrackingWithTouch:withEvent:
cancelTrackingWithEvent:
_drawCurveWithFlatEndsFromX:fromY:toX:toY:
trackInsets
trimHandleWidth
setTrimHandleWidth:
minValue
maxValue
startValue
endValue
zoomDelay
setZoomDelay:
_startHandleView
_endHandleView
_trackImageView
_trackSnapshotView
_draggingStart
_draggingEnd
_touchOffset
_zoomed
_trackingZoom
_touchLocationWhenTrackingZoomBegan
_forceLayout
_zoomAnimating
_regionEditorStyle
_minValue
_startValue
_endValue
_zoomDelay
_trackInsets
T@"<PLSlalomRegionEditorDelegate>",N,V_delegate
T{UIEdgeInsets=dddd},N,V_trackInsets
Td,N,V_trimHandleWidth
TQ,N,V_regionEditorStyle
Td,N,V_minValue
Td,N,V_maxValue
Td,N,V_startValue
Td,N,V_endValue
Td,N,V_zoomDelay
zoomAnimating
TB,N,GisZoomAnimating,SsetZoomAnimating:,V_zoomAnimating
_setupTargetScreen:
setScreen:
setOverscanCompensation:
preferredMode
availableModes
setCurrentMode:
flushCache
jpegImageSize
_jpegImageSize
T{CGSize=dd},R,N,V_jpegImageSize
initWithPhoto:
setAllowsEditing:
editImageViewController:didEditImageWithOptions:
editImageViewControllerDidCancel:
cropOverlayMode
setImageSavingOptions:
saveOptions
_contentAutoresizingMask
_tileAutoresizingMask
imageFormat
imageTile
_saveOptions
T@,N,V_delegate
Ti,N,V_mode
setDefaultValues
setAllowImageRequests:
setAllowCaching:
rowWithTitle:valueKeyPath:
allowImageRequests
allowCaching
_allowImageRequests
_allowCaching
TB,N,V_allowImageRequests
TB,N,V_allowCaching
disableViewInPopoverRule
setDisableViewInPopoverRule:
_disableViewInPopoverRule
TB,N,V_disableViewInPopoverRule
setExtendedLayoutIncludesOpaqueBars:
navigationItem
_editingForThirdParty
_cancelTrim:
setLeftBarButtonItem:
_trimVideo:
setRightBarButtonItem:
_setupNavigationItemAndTrimTitle:
setParentInPopoverException:
initWithVideoURL:
setImagePickerOptions:
initWithTitle:
parentInPopoverException
viewDidLoad
navigationBar
standardAppearance
setScrollEdgeAppearance:
toolbar
dictionaryWithDictionary:
editVideoViewController:didTrimVideoWithOptions:
dictionaryWithObject:forKey:
editVideoViewControllerDidCancel:
editVideoViewController:didFailWithError:
errorWithDomain:code:userInfo:
imagePickerController:didFinishPickingImage:editingInfo:
imagePickerController:didFinishPickingMediaWithInfo:
imagePickerControllerDidCancel:
navigationController:willShowViewController:animated:
navigationController:didShowViewController:animated:
navigationControllerSupportedInterfaceOrientations:
navigationControllerPreferredInterfaceOrientationForPresentation:
navigationController:interactionControllerForAnimationController:
navigationController:animationControllerForOperation:fromViewController:toViewController:
_displaysFullScreen
initWithPhoto:trimTitle:
initWithProperties:
initWithVideoURL:trimTitle:
_trimMessage
_viewClass
setViewClass:
didChooseVideoAtURL:options:
previewFrame
videoViewScrubberYOrigin:forOrientation:
videoViewCanCreateMetadata:
videoViewPlaybackDidFail:
_options
_imagePicker
_navItem
_canCreateMetadata
_parentInPopoverException
TB,N,V_parentInPopoverException
wantsAutoloopUI
localizedTitle
chooseButtonTitle
localizedUseButtonTitle
initWithTitle:style:target:action:
cancelButtonTitle
setPreferredContentSize:
customBackgroundColor
setupNavigationItem
isFileURL
videoViewForVideoFileAtURL:
photoFromAssetURL:photoLibrary:
setEdgesForExtendedLayout:
setLoadMediaImmediately:
viewImageBeforeSelecting
setCanEdit:
clientIsWallpaper
wantsLegacyImageUI
addChildViewController:
_updateGestureSettings
viewWillLayoutSubviews
wantsStatusBarVisible
desiredStatusBarAnimation
isDisplayedInPhotoPicker
imagePickerAllowsEditing
_editabilityChanged:
setNavigationBarHidden:
setBarStyle:
setShowsScrubber:
setNeedsStatusBarAppearanceUpdate
viewWillDisappear:
scrubberBackgroundView
isNavigationBarHidden
existingPaletteForEdge:
_viewFrame
paletteForEdge:size:
attachPalette:isPinned:
setScrollEnabled:
viewControllers
indexOfObjectIdenticalTo:
popViewControllerAnimated:
_imagePickerDidCancel
_enableCropOverlay
handleAutoloopSelected
_handleVideoSelected
imagePickerSavingOptions
handleMediaSelectionUsingTile:managedAsset:args:includeEditing:
_enableCropOverlayIfNecessary
videoCameraImage
startTime
endTime
doNotTranscode
isEditing
mainFileURL
handleVideoSelectionWithURL:args:
initWithManagedAsset:applyVideoAdjustments:
initWithAVAsset:
exportPreset
videoQuality
setExportPresetOverride:
hideTrimMessage
progressView
attachScrubberPalette
safeAreaLayoutGuide
layoutFrame
videoMaximumDuration
disableVideoTrimMessage
setMaximumTrimLength:
setEditing:
showTrimMessage:withBottomY:
setDelaySuspend:
photoTileViewControllerCancelImageRequests:
videoViewDidCreateAttachments:
videoViewScrubberWidth:
videoViewCanBeginPlayback:
videoViewIsReadyToBeginPlayback:
videoViewDidBeginPlayback:
videoViewDidPausePlayback:
videoViewDidEndPlayback:didFinish:
videoViewDidBeginScrubbing:
videoViewDidEndScrubbing:
videoViewDidBeginRemaking:
videoViewDidEndRemaking:didSucceed:
videoView:remakingProgressDidChange:
videoViewWillBeginEditing:
videoViewDidBeginEditing:
videoViewDidCancelEditing:
videoView:displayPlayOverlay:
videoViewShouldRespondToPlayOverlayTap:
videoViewRequestsPickedAirplayRoute:
photoTileViewControllerTopLayoutGuide:
cropOverlayWasToggled:
initWithImage:cropRect:
initWithUIImage:cropRect:
initWithImageData:cropRect:
cropOverlay
setCropOverlayDone
prefersStatusBarHidden
preferredStatusBarUpdateAnimation
_imagePickerStatusBarStyle
_removedAsTopViewController
beginDisplayingProgress
videoView:scrubberWasCreated:slalomRegionEditor:
videoViewDidPausePlayback:didFinish:
_imageRef
_cropOverlay
_imageTile
_videoURL
_previousStatusBarStyle
_newStatusBarStyle
_allowEditing
_statusBarWasHidden
_isDisappearing
T@"NSString",R,N
initWithStyle:
pl_videoOverlayButtonWithStyle:
pl_videoOverlayButtonSize
_playButtonTapped:
_playButtonActivate:
_playButtonDeactivate:
setDeliversTouchesForGesturesToSuperview:
updateMaskViewsForView:
setTarget:action:
_button
_overlayPlayBackground
_target
_action
_normalButtonImage
_highlightedButtonImage
_handleTap:
_createOverlayImageWithBackgroundWhite:backgroundAlpha:glyphAlpha:
drawAtPoint:blendMode:alpha:
fileLengthLimitForRemakerMode:
numberWithLongLong:
maximumDurationForPreset:properties:
estimatedOutputFileLengthForPreset:duration:properties:
initWithVideoAsset:videoAdjustments:
videoAVObjectBuilderForManagedAsset:applyVideoAdjustments:
requestAVAssetWithResultHandler:
exportPresetOverride
scheduledTimerWithTimeInterval:target:selector:userInfo:repeats:
videoAsset
metadata
addAccessibilityDescription:toAVMetadata:
shouldExportToPhotoDataDirectory
tmpFileForVideoTranscodeToPhotoDataDirectory:withExtension:
fileExistsAtPath:
removeItemAtPath:error:
requestExportSessionWithExportPreset:resultHandler:
setFileLengthLimit:
_fileFormatForURL:
setOutputFileType:
setOutputURL:
_metadata
setMetadata:
setTimeRange:
markPurgeableForFileAtURL:withUrgency:outInode:
_exportCompletedWithSuccess:
exportAsynchronouslyWithCompletionHandler:
_resetProgressTimer
lowercaseString
containsObject:
cancelExport
_removeProgressTimer
_didEndRemakingWithTemporaryPath:
maximumDurationForTrimMode:
progressHandler
setProgressHandler:
setShouldExportToPhotoDataDirectory:
trimStartTime
trimEndTime
customAccessibilityLabel
setCustomAccessibilityLabel:
_videoAVObjectBuilder
_trimmedPath
_trimStartTime
_trimEndTime
_exportSession
_shouldExportToPhotoDataDirectory
_progressHandler
_exportPresetOverride
_customAccessibilityLabel
__videoAVObjectBuilder
T@"PFVideoAVObjectBuilder",R,&,N,V__videoAVObjectBuilder
T@"NSObject<PLVideoRemakerDelegate>",W,N,V_delegate
T@?,C,N,V_progressHandler
TB,N,V_shouldExportToPhotoDataDirectory
T@"NSString",C,N,V_exportPresetOverride
Td,N,V_trimStartTime
Td,N,V_trimEndTime
T@"NSString",C,N,V_customAccessibilityLabel
setImageGenerator:
imageGenerator
cancelAllCGImageGeneration
inUse
setInUse:
_inUse
_imageGenerator
T@"AVAssetImageGenerator",&,N,V_imageGenerator
TB,N,V_inUse
imageFrame
_initWithFrame:videoCameraImage:orientation:
_canAccessVideo
raise:format:
pathToOriginalVideoFile
cachedNonPersistedVideoPlaybackURL
setCachedNonPersistedVideoPlaybackURL:
setCachedNonPersistedVideoPlaybackURLExpiration:
setCachedNonPersistedVideoPlaybackURLError:
_commitPendingAdjustmentsUpdateAndWait:completionHandler:
_tearDownMoviePlayer
setTrimProgressStack:
_enqueueOverlayPlayButton:
setDataSource:
_clearImageGenerators
_cancelAirplayExportSession
_playerIsAirplay
_setupMoviePlayerIfNecessary
_didInsertMoviePlayerView
isTrimming
_scrubberAnimationFinished
touchesEnded:withEvent:
_hideTrimMessageView:
statusBarHeightForOrientation:ignoreHidden:
defaultSizeForOrientation:
_scrubberBackgroundHeight
_shouldShowSlalomEditor
canEdit
isEditable
_removeScrubber
scrubberWidth
setEditable:
setEdgeInset:
setMinimumTrimLength:
setEditing:animated:
_updateSlalomRegionEditorRange
_updateSlalomRegionEditorState
_updateForEditing
allowSlalomEditor
isMogul
videoAdjustments
isRecognizedFormat
isPhotoIrisPlaceholder
_mediaIsPlayable
_dequeueOverlayPlayButton
playButtonClicked:
removeVideoOverlay
_videoOverlayFadeOutDidFinish
_updateScaleModeForSize:
_updateScrubberFrame
_reloadScrubberThumbnailsIfNeeded
reloadData
_playbackFinished
_shouldStreamVideo
_verifyOrRestartPlayback
_displayPlaySpinner
_updateSnapshotImage
_didBeginPlayback
_removePlaySpinner
_thumbnailSourceAsset
_configureImageGenerator:thumbnailSize:forSummaryThumbnails:
_savePreviewPosterFrameImage:
generateCGImagesAsynchronouslyForTimes:completionHandler:
initWithCGImage:
_pathForVideoPreviewFile
_insertMoviePlayerViewIfNecessary
_setDuration:
currentItem
presentationSize
_requestPreviewPosterFrameForVideoSize:
_setNeedsReloadScrubberThumbnails:
_updateScrubberVisibilityWithDuration:
_updatePosterFrameVisibility
isReadyForDisplay
_prepareMoviePlayerIfNeeded
_setLocalVideoUnavailable:
setStreamingAllowed:
setVideoComplementAllowed:
setVersion:
_prepareAndResumePlayback
requestPlayerItemForVideo:options:resultHandler:
_canHandleAdjustmentData:
setCanHandleAdjustmentData:
audiovisualAsset
isPlayable
_setCanAttemptFetchingVideoDerivative:
_updateVideoAVObjectBuilderFromContentEditingInput:
_fetchNonlocalVideo
requestContentEditingInputWithOptions:completionHandler:
pl_isOnScreen:
_mediaIsCloudSharedStreamedVideo
_canPlayCloudSharedStreamedVideoWithLocalVideo
_assetForVideoURL:
_localVideoUnavailable
_fetchLocalContentEditingInput
_shouldPlayFlattenedVideo
_isFlattenedVideoUpToDate
_filePathForFlattenedVideo
_flattenVideoWithCompletionHandler:
_configurePlayerForStreamedVideoIfNecessary
requestPlayerItemWithResultHandler:
_assetForVideoPath:
playerItemWithAsset:
hasSlowMotionAdjustments
_updateScrubberForSlowMotion
initWithObjects:
formatIdentifier
formatVersion
data
initWithFormatIdentifier:formatVersion:data:baseVersion:editorBundleID:renderTypes:
adjustmentData
debugAlwaysStreamSharedVideos
streamdVideoCache
_optionsForAVURLAsset
URLAssetWithURL:options:
setExpectedAssetTypes:
value
_movieTimeFromScrubberTime:
_scrubToMovieTime:
_setMoviePlayerActive:
_setPlaybackDidBegin:
setShowsScrubber:duration:
_showVideoOverlay
_canAttemptFetchingVideoDerivative
_reset
_canAirPlayCurrentVideo
_movieScrubberDuration
movieScrubberDuration:
_scrubberStartTime
options
isEqualToArray:
landscapeScrubberThumbnailFormat
portraitScrubberThumbnailFormat
initWithImages:format:options:delegate:
_pathForPrebakedLandscapeScrubberThumbnails
_pathForPrebakedPortraitScrubberThumbnails
saveToFile:
pathForOriginalFile
pathForVideoPreviewFile
pathForPrebakedLandscapeScrubberThumbnails
pathForPrebakedPortraitScrubberThumbnails
_shouldStreamCloudPhotoLibraryVideo
isInFlight
movieScrubber:requestThumbnailImageForTimestamp:isSummaryThumbnail:
_addThumbnailRequestForTimestamp:isSummaryThumbnail:
setThumbnailImage:forTimestamp:
thumbnailsWithContentsOfFile:format:
thumbnailImageAtIndex:
_loadThumbnailsIntoDictionary:isLandscape:aspectRatio:
_updateScrubberValue
_removeScrubberUpdateTimer
playingToAirTunes
_hideVideoOverlay:
setForwardPlaybackEndTime:
trimStartValue
trimEndValue
setValue:
_invalidateSnapshotImage
_didScrubToValue:withHandle:
_serviceImageGenerationRequests
_thumbnailTimeFromScrubberTime:
CMTimeValue
valueWithCMTime:
_saveCachedThumbnailsIfNecessary
setMaximumSize:
setApertureMode:
setAppliesPreferredTrackTransform:
setRequestedTimeToleranceBefore:
setRequestedTimeToleranceAfter:
setBody:
insertSubview:above:
flush
_setPlaying:
setTrimmedVideoClip:
_informDelegateAboutProgressChange:
animateAfterEdit
stringByDeletingPathExtension
_updateTrimProgress
initWithDelegate:
trimProgressStack
updateProgress:
totalProgress:
cancelTrim
_removeTrimProgressTimer
push:
setAttributes:ofItemAtPath:error:
moveItemAtPath:toPath:error:
attributesOfItemAtPath:error:
_thumbnailsWereRegenerated:error:contextInfo:
regenerateVideoThumbnailsForVideo:withCreationDate:progressStack:completionBlock:
slowMotionTimeRange
preferredTimeScale
adjustTimeRange:forNewStartTime:endTime:
slowMotionRate
initWithSlowMotionTimeRange:rate:
_enqueueAdjustmentsForCommit
isCameraConnectionKitAsset
eventAlbumContainingPhoto:
stringByDeletingLastPathComponent
nextAvailableFilePathInDirectory:withExtension:
orientation
numberWithShort:
dateCreated
indexSheetImage
saveCameraVideoAtPath:withMetadata:thumbnailImage:createPreviewWellImage:progressStack:isSlalom:assetAdjustments:videoHandler:requestEnqueuedBlock:completionBlock:
copyCGImageAtTime:actualTime:error:
imageWithCGImage:
toggleScaleMode:
setThumbIsVisible:
_resetScrubberUpdateTimer
setColor:
cachedNonPersistedVideoPlaybackURLError
isCellularConnection
requestVideoPlaybackURLForAsset:videoType:completion:
setValue:animated:
_createScrubberIfNeeded
_updatePosterImageView
shouldPlayVideoWhenViewAppears
loadMediaImmediately
setShouldPlayVideoWhenViewAppears:
cancelPreviousPerformRequestsWithTarget:
_videoSnapshot
_mediaIsVideo
_didSetPhotoData
newFullSizeImage
_canEditDuration:
_scrubberTimeFromMovieTime:
changeDetailsForObject:
assetContentChanged
_scrubberTimeNeedsMapping
convertToOriginalTimeFromScaledTime:forExport:
convertToScaledTimeFromOriginalTime:forExport:
_handleScreenConnectionChange:
_scrubToSlalomRegionEditorStartHandle:
_didEditSlalom
_setDidEditSlalom:
_cancelDelayedCommitPendingAdjustmentsUpdate
_commitPendingAdjustmentsUpdate
adjustmentFormatIdentifier
adjustmentFormatVersion
initWithFormatIdentifier:formatVersion:data:
initWithAdjustmentBaseVersion:mediaType:
setAdjustmentData:
clearRenderedContentURL
setContentEditingOutput:
performChangesAndWait:error:
forceZoom
forceUnzoom
requestAVAssetForExport:withResultHandler:
_filePathForFlattenedVideoMetadata
_readMetadataFromPath:
_metadataForFlattenedVideo
propertyListDictionary
dictionaryWithContentsOfFile:
dataWithPropertyList:format:options:error:
writeToFile:options:error:
_pathForOriginalFile
lastPathComponent
stringByAppendingPathExtension:
fileExistsAtPath:isDirectory:
_deleteFileAtPath:
_writeMetadata:toPath:
removeItemAtURL:error:
movieScrubber:valueDidChange:
movieScrubber:editingStartValueDidChange:
movieScrubber:editingEndValueDidChange:
movieScrubberDidBeginScrubbing:withHandle:
movieScrubberDidEndScrubbing:withHandle:
movieScrubber:widthDelta:originXDelta:
movieScrubberWillBeginRequestingThumbnails:
movieScrubberDidFinishRequestingThumbnails:
movieScrubberWillBeginEditing:
movieScrubberDidBeginEditing:
movieScrubberDidCancelEditing:
movieScrubberEditingAnimationFinished:
movieScrubber:willZoomToMinimumValue:maximumValue:
movieScrubberDidBeginAnimatingZoom:
movieScrubberDidEndAnimatingZoom:
movieScrubber:evenlySpacedTimestamps:startingAt:endingAt:
movieScrubberThumbnailAspectRatio:
movieScrubber:requestThumbnailImageForTimestamp:
moviePlayerRequestsPickedAirplayRoute:
videoScrubber
slalomRegionEditor
movieScrubber:timestampsStartingAt:endingAt:maxCount:
importerFinishedProcessingTrimmedVideo:
_resetTrimProgressTimer
videoPathAfterTrim
trimmedVideoClip
newPreviewImageData:
playingToVideoOut
forceStop
commitPendingUpdatesWithCompletionHandler:
applicationWillResignActive
applicationDidEnterBackground
didMoveToSuperview
posterFrameImage
showsPlayOverlay
showsScrubber
prepareMoviePlayer
notifyRequiredResourcesDownloaded
scrubberIsSubview
notifyOfChange:shouldReloadBlock:
shouldShowCopyCalloutAtPoint:
_moviePlayer
setScrubberWidth:
posterFrameView
prepareMoviePlayerForScrubberAutomatically
setPrepareMoviePlayerForScrubberAutomatically:
set_didInsertMoviePlayerView:
_isFetchingVideo
_expectedNotificationsCount
_adjustmentsToCommit
_attemptFetchingVideoDerivative
_setAttemptFetchingVideoDerivative:
_slalomRegionEditorCreatedForScrubber
_videoCameraImage
_pathToOriginalVideo
_posterFrameView
_videoOverlayBackgroundView
_trimMessageView
_posterFrameImage
_snapshotImage
_scrubberWidth
_scrubberBackgroundView
_scrubberTitleView
_scrubberUpdateTimer
_thumbnailOptionsDict
_thumbnailSize
_bakedLandscapeThumbnails
_bakedPortraitThumbnails
_remakerStartTime
_remakerEndTime
_videoPathAfterTrim
_trimProgressTimer
_trimmedVideoClip
_trimProgressStack
_maximumTrimLength
_lastScrubbedValue
_lastActualValue
_cachedCurrentPlaybackTime
_imageGenerators
_thumbnailReqlock
_thumbnailReqQueue
_airplayExportSession
_isAirPlay
_showsPlayButton
_showsScrubber
_canEdit
_loadMediaImmediately
_scrubberIsSubview
_wasPlayingBeforeScrub
_playFromBeginning
_needsReloadScrubberThumbnails
_playing
_editing
_disableEditAfterTrim
_scrubbing
_scrubbingToRight
_deleteOriginalFile
_passthroughTrimming
_preparingMoviePlayer
_preparedMoviePlayer
_isMoviePlayerActive
_moviePlayerIsReady
_moviePlayerIsReadyForDisplay
_moviePlayerDidBuffer
_showingOverlay
_showingScrubber
_showScrubberWhenMovieIsReady
_playbackDidBegin
_loadScrubberThumbnails
_videoIsLandscape
_createPreviewPosterFrame
_isTrimming
_wasTrimmedInPlace
_remakingFailed
_summaryThumbnailRequestTimestamps
_detailThumbnailRequestTimestamps
_scrubber
_slalomRegionEditor
_cachedThumbnails
_landscapeSummaryThumbnailTimestamps
_portraitSummaryThumbnailTimestamps
_spinner
_shadowSpinner
_videoOverlayPlayButton
_useLandscapeCache
_videoStreamingStartTime
_allowSlalomEditor
_prepareMoviePlayerForScrubberAutomatically
_shouldPlayVideoWhenViewAppears
__didInsertMoviePlayerView
__didEditSlalom
__isFetchingVideo
__localVideoUnavailable
__canAttemptFetchingVideoDerivative
__attemptFetchingVideoDerivative
__slalomRegionEditorCreatedForScrubber
__expectedNotificationsCount
__adjustmentsToCommit
T@"NSString",R,&,N
TB,N,V__didInsertMoviePlayerView
TB,N,S_setDidEditSlalom:,V__didEditSlalom
T@"PFVideoAVObjectBuilder",R,N,V__videoAVObjectBuilder
TB,R,N,V__isFetchingVideo
TB,N,S_setLocalVideoUnavailable:,V__localVideoUnavailable
Tq,R,N,V__expectedNotificationsCount
T@"PFVideoAdjustments",R,N,V__adjustmentsToCommit
TB,N,S_setCanAttemptFetchingVideoDerivative:,V__canAttemptFetchingVideoDerivative
TB,N,S_setAttemptFetchingVideoDerivative:,V__attemptFetchingVideoDerivative
T@"PLProgressStack",&,N,V_trimProgressStack
TB,R,N,V__slalomRegionEditorCreatedForScrubber
T@"<PLVideoViewDelegate>",N
T@"PLPhotoTileViewController",N
T@"PLManagedAsset",R,N
T@"PLManagedAsset",&,N
TB,N,V_allowSlalomEditor
T@"UIView",R,N,V_scrubberBackgroundView
T@"UIImage",R,N
T@"PLVideoPosterFrameView",R,&,N,V_posterFrameView
editing
TB,N,GisEditing
T@"UIImageView",R,N
TB,N,V_prepareMoviePlayerForScrubberAutomatically
TB,N,V_shouldPlayVideoWhenViewAppears
Td,N,V_scrubberWidth
initWithFrame:textContainer:
setSelectable:
setTextContainerInset:
_bodyLabel
setSimulateDownload:
setSimulateDownloadFailure:
conditionFormat:
simulateDownload
simulateDownloadFailure
_simulateDownload
_simulateDownloadFailure
TB,N,V_simulateDownload
TB,N,V_simulateDownloadFailure
_setupBackdropView
_updateContentEdgeInsets
setContentEdgeInsets:
setContentCompressionResistancePriority:forAxis:
setContentHuggingPriority:forAxis:
setAppliesOutputSettingsAnimationDuration:
inputSettings
outputSettings
restoreDefaultValues
isHighlighted
computeOutputSettingsUsingModel:
applySettings:
setSelected:
isSelected
legibleColor
titleMaskImageView
setTitleMaskImageView:
_titleMaskImageView
T@"UIImageView",&,N,V_titleMaskImageView
bundleIdentifier
localizedInfoDictionary
legacySaveImageToCameraRoll:completionTarget:completionSelector:contextInfo:
legacySaveImageDataToCameraRoll:completionTarget:completionSelector:contextInfo:
legacySaveScreenshotToCameraRoll:completionTarget:completionSelector:contextInfo:
legacySaveVideoToCameraRoll:completionTarget:completionSelector:contextInfo:
canSaveVideoToLibrary:
demoClient
cleanupForStoreDemoMode
_setDelaySuspend:
numberOfRowsInSection:
rectForRowAtIndexPath:
pl_indexPathForLastRow
pl_scrollToBottom:
scrollRectToVisible:animated:
scrollToRowAtIndexPath:atScrollPosition:animated:
pl_resetContentOffsetFromContentInsets
tableFooterView
indexPathsForVisibleRows
numberOfSections
indexPathForRow:inSection:
pl_scrollToVisibleRowAtIndexPath:animated:
pl_scrollToTop:
pl_lastRowIsVisible
pl_setHidden:delay:animated:
removeAnimationForKey:
pl_setHiddenAnimationDuration
pl_drawBorderWithColor:width:
_isInPopoverPresentation
childViewControllers
presentedViewController
arrayByAddingObject:
pl_visitControllerHierarchyWithBlock:
pl_isInPopover
rootViewController
@16@0:8
v24@0:8@16
v16@0:8
#16@0:8
@48@0:8{CGRect={CGPoint=dd}{CGSize=dd}}16
v24@0:8q16
v32@0:8q16d24
{CGRect={CGPoint=dd}{CGSize=dd}}16@0:8
q16@0:8
B24@0:8@16
@24@0:8:16
@32@0:8:16@24
@40@0:8:16@24@32
B16@0:8
B24@0:8#16
B24@0:8:16
Vv16@0:8
Q16@0:8
^{_NSZone=}16@0:8
B24@0:8@"Protocol"16
@"NSString"16@0:8
@24@0:8@16
@"PHFetchResult"24@0:8@"PHAssetCollection"16
@"PHFetchResult"16@0:8
@32@0:8@16@24
v32@0:8Q16Q24
@24@0:8Q16
Q24@0:8@16
Q32@0:8Q16B24B28
Q24@0:8Q16
@28@0:8@16B24
Q28@0:8Q16B24
@32@0:8@16B24B28
@32@0:8@16Q24
@"PHFetchResult"
@"NSMutableDictionary"
v28@0:8@16B24
v24@0:8@"CAAnimation"16
v28@0:8@"CAAnimation"16B24
@?16@0:8
v24@0:8@?16
v56@0:8^{CGPath=}16{CGRect={CGPoint=dd}{CGSize=dd}}24
^{CGPath=}48@0:8{CGRect={CGPoint=dd}{CGSize=dd}}16
^{__CFDictionary=}
^{lruEntry=@q{?=^{lruEntry}^^{lruEntry}}}16@0:8
^{lruEntry=@q{?=^{lruEntry}^^{lruEntry}}}
@32@0:8q16q24
v32@0:8@16@24
v40@0:8@16@24q32
{_opaque_pthread_mutex_t="__sig"q"__opaque"[56c]}
{entryList="tqh_first"^{lruEntry}"tqh_last"^^{lruEntry}}
@"UIFontDescriptor"
{UIEdgeInsets=dddd}16@0:8
@"UILabel"
@"UIImageView"
@"CAShapeLayer"
@56@0:8{CGRect={CGPoint=dd}{CGSize=dd}}16i48B52
v20@0:8B16
@52@0:8{CGRect={CGPoint=dd}{CGSize=dd}}16i48
v24@0:8B16f20
v20@0:8i16
i16@0:8
@40@0:8{CGPoint=dd}16@32
v28@0:8B16@20
v28@0:8B16d20
v48@0:8{CGRect={CGPoint=dd}{CGSize=dd}}16
@52@0:8{CGRect={CGPoint=dd}{CGSize=dd}}16B48
B20@0:8i16
@"PLCropOverlayCropView"
@"UIView"
{CGRect="origin"{CGPoint="x"d"y"d}"size"{CGSize="width"d"height"d}}
@"UIToolbar"
@"PLProgressHUD"
@"UIButton"
@"PLContactPhotoOverlay"
@"NSString"
@"<PLCropOverlayDelegate>"
@"PLCropOverlayBottomBar"
v24@0:8d16
v28@0:8q16B24
B24@0:8q16
@"PLCropOverlayPreviewBottomBar"
@"PLCropOverlayWallpaperBottomBar"
d16@0:8
{CGSize=dd}24@0:8@16
{CGSize=dd}32@0:8{CGSize=dd}16
@"PLWallpaperButton"
@"_UILegibilityLabel"
@"_UIBackdropView"
v44@0:8@16@24@32i40
v64@0:8@16{CGRect={CGPoint=dd}{CGSize=dd}}24d56
v32@0:8^{__CFRunLoop=}16^{__CFString=}24
B40@0:8Q16^?24^{?=q^v^?^?^?}32
q32@0:8*16Q24
B32@0:8^*16^Q24
@"NSArray"
@"NSMutableData"
@"<PLDataArrayInputStreamProgressDelegate>"
^{__CFRunLoopSource=}
{?="version"q"info"^v"retain"^?"release"^?"copyDescription"^?}
B40@0:8{CGPoint=dd}16@32
f16@0:8
v32@0:8{CGSize=dd}16
v36@0:8{CGSize=dd}16f32
f20@0:8f16
v48@0:8{CGPoint=dd}16{CGPoint=dd}32
f24@0:8@16
f36@0:8@16i24d28
v40@0:8@16@24^v32
v32@0:8{CGPoint=dd}16
v48@0:8@16{CGSize=dd}24q40
{CGSize=dd}16@0:8
v24@0:8^{CGContext=}16
@"PLImageView"
{CGSize="width"d"height"d}
{CGPoint="x"d"y"d}
@"PLManagedAsset"
{?="isRotating"b1"didTrack"b1"updateFrame"b1"didLayout"b1"alwaysDoLayout"b1"didComputeCenterOffset"b1"imageIsFullScreen"b1}
v28@0:8i16d20
v24@0:8f16B20
i20@0:8B16
{CGRect={CGPoint=dd}{CGSize=dd}}60@0:8{CGRect={CGPoint=dd}{CGSize=dd}}16@48B56
v28@0:8B16@?20
@"<PLExpandableViewDelegate>"
{?="state"b3"prevState"b3"tracking"b1"autorotationDisabled"b1"animationDisabled"b1"updateContractedFrame"b1"updateExpandedFrame"b1"allowsExpansion"b1"delegateWillBeginExpanding"b1"delegateWillCompleteExpanding"b1"delegateDidCompleteExpanding"b1"delegateWillCancelExpanding"b1"delegateDidCancelExpanding"b1"delegateDidBeginCollapsing"b1"delegateWillCompleteCollapsing"b1"delegateDidCompleteCollapsing"b1"delegateWillCancelCollapsing"b1"delegateDidCancelCollapsing"b1"delegateExpandedFractionChanged"b1}
@40@0:8@16{CGSize=dd}24
{CGSize=dd}36@0:8{CGSize=dd}16B32
{CGAffineTransform=dddddd}16@0:8
v24@0:8B16B20
v20@0:8f16
@"PLVideoView"
@"PLPhotoTilePlaceholderView"
@"PLTiledLayer"
v32@0:8@16d24
v48@0:8@16@24@32^v40
v32@0:8d16Q24
v36@0:8d16Q24B32
v24@0:8Q16
@"AVPlayerItem"
@"AVPlayer"
@"PLMoviePlayerView"
@"PLTVOutWindow"
@"<PLMoviePlayerControllerDelegate>"
@"PHImageManagerSettings"
@"PHResourceDownloadSettings"
@"NSMutableArray"
@"PLAVPlayerView"
i24@0:8@16
@"PLRoundProgressView"
@"<PLPhotoTileCloudPlaceholderViewDelegate>"
@"UIActivityIndicatorView"
@56@0:8{CGRect={CGPoint=dd}{CGSize=dd}}16@48
@"PLPhotoTileViewController"
@72@0:8{CGRect={CGPoint=dd}{CGSize=dd}}16^{CGImage=}48q56B64i68
@64@0:8{CGRect={CGPoint=dd}{CGSize=dd}}16@48B56i60
@60@0:8{CGRect={CGPoint=dd}{CGSize=dd}}16@48i56
v48@0:8@16{CGPoint=dd}24N^{CGPoint=dd}40
v40@0:8@16@24d32
v24@0:8@"UIScrollView"16
v48@0:8@"UIScrollView"16{CGPoint=dd}24N^{CGPoint=dd}40
v28@0:8@"UIScrollView"16B24
@"UIView"24@0:8@"UIScrollView"16
v32@0:8@"UIScrollView"16@"UIView"24
v40@0:8@"UIScrollView"16@"UIView"24d32
B24@0:8@"UIScrollView"16
B32@0:8@16@24
B24@0:8@"UIGestureRecognizer"16
B32@0:8@"UIGestureRecognizer"16@"UIGestureRecognizer"24
B32@0:8@"UIGestureRecognizer"16@"UITouch"24
B32@0:8@"UIGestureRecognizer"16@"UIPress"24
B32@0:8@"UIGestureRecognizer"16@"UIEvent"24
v48@0:8{UIEdgeInsets=dddd}16
@80@0:8@16@24{CGRect={CGPoint=dd}{CGSize=dd}}32B64i68B72i76
@48@0:8@16@24{CGSize=dd}32
v80@0:8{CGRect={CGPoint=dd}{CGSize=dd}}16{CGRect={CGPoint=dd}{CGSize=dd}}48
v32@0:8@16B24B28
{CGSize=dd}48@0:8@16d24{CGSize=dd}32
v40@0:8{CGSize=dd}16@32
v40@0:8d16{CGSize=dd}24
@84@0:8{CGRect={CGPoint=dd}{CGSize=dd}}16d48^@56^@64^{CGRect={CGPoint=dd}{CGSize=dd}}72B80
v104@0:8^@16@24{CGSize=dd}32@48{CGAffineTransform=dddddd}56
@88@0:8@16{CGSize=dd}24{CGRect={CGPoint=dd}{CGSize=dd}}40{CGSize=dd}72
@60@0:8{CGRect={CGPoint=dd}{CGSize=dd}}16d48i56
v36@0:8d16B24@?28
f28@0:8B16@20
@"UIImage"
@"PHAsset"
@"PLImageScrollView"
@"PLExpandableImageView"
@"UIView<PLTilePlaceholderView>"
@"UIGestureRecognizer"
@"<PLPhotoTileViewControllerDelegate>"
@"NSObject<OS_dispatch_source>"
@"PLTileContainerView"
@"PHCachingImageManager"
@"NSNumber"
{UIEdgeInsets="top"d"left"d"bottom"d"right"d}
B48@0:8@16@24@32@40
B40@0:8@16@24@32
v40@0:8@16q24d32
v32@0:8@16q24
v56@0:8@16{CGRect={CGPoint=dd}{CGSize=dd}}24
v48@0:8@16@24@32@?40
v56@0:8@16@24@32@40@?48
v40@0:8@16@24@?32
v32@0:8@16@?24
Q32@0:8@16@24
@40@0:8@16@24@32
B40@0:8@16@24@?32
v40@0:8@16@24@32
v24@0:8@"UIApplication"16
B32@0:8@"UIApplication"16@"NSDictionary"24
B32@0:8@"UIApplication"16@"NSURL"24
B48@0:8@"UIApplication"16@"NSURL"24@"NSString"32@40
B40@0:8@"UIApplication"16@"NSURL"24@"NSDictionary"32
v40@0:8@"UIApplication"16q24d32
v32@0:8@"UIApplication"16q24
v56@0:8@"UIApplication"16{CGRect={CGPoint=dd}{CGSize=dd}}24
v32@0:8@"UIApplication"16@"UIUserNotificationSettings"24
v32@0:8@"UIApplication"16@"NSData"24
v32@0:8@"UIApplication"16@"NSError"24
v32@0:8@"UIApplication"16@"NSDictionary"24
v32@0:8@"UIApplication"16@"UILocalNotification"24
v48@0:8@"UIApplication"16@"NSString"24@"UILocalNotification"32@?<v@?>40
v56@0:8@"UIApplication"16@"NSString"24@"NSDictionary"32@"NSDictionary"40@?<v@?>48
v48@0:8@"UIApplication"16@"NSString"24@"NSDictionary"32@?<v@?>40
v56@0:8@"UIApplication"16@"NSString"24@"UILocalNotification"32@"NSDictionary"40@?<v@?>48
v40@0:8@"UIApplication"16@"NSDictionary"24@?<v@?Q>32
v32@0:8@"UIApplication"16@?<v@?Q>24
v40@0:8@"UIApplication"16@"UIApplicationShortcutItem"24@?<v@?B>32
v40@0:8@"UIApplication"16@"NSString"24@?<v@?>32
v40@0:8@"UIApplication"16@"NSDictionary"24@?<v@?@"NSDictionary">32
@32@0:8@"UIApplication"16@"INIntent"24
v40@0:8@"UIApplication"16@"INIntent"24@?<v@?@"INIntentResponse">32
Q32@0:8@"UIApplication"16@"UIWindow"24
B32@0:8@"UIApplication"16@"NSString"24
@"UIViewController"40@0:8@"UIApplication"16@"NSArray"24@"NSCoder"32
B32@0:8@"UIApplication"16@"NSCoder"24
v32@0:8@"UIApplication"16@"NSCoder"24
B40@0:8@"UIApplication"16@"NSUserActivity"24@?<v@?@"NSArray">32
v40@0:8@"UIApplication"16@"NSString"24@"NSError"32
v32@0:8@"UIApplication"16@"NSUserActivity"24
v32@0:8@"UIApplication"16@"CKShareMetadata"24
@"UISceneConfiguration"40@0:8@"UIApplication"16@"UISceneSession"24@"UISceneConnectionOptions"32
v32@0:8@"UIApplication"16@"NSSet"24
B24@0:8@"UIApplication"16
@"UIWindow"16@0:8
v24@0:8@"UIWindow"16
v32@0:8^{__CFUserNotification=}16Q24
@"NSDictionary"
@"NSSet"
@"MPMediaItemCollection"
@"UIProgressView"
@"NSNumberFormatter"
v24@0:8@"PLDataArrayInputStream"16
v32@0:8d16d24
v32@0:8q16q24
v28@0:8@16f24
@"NSData"
@"PLVideoRemaker"
q24@0:8@16
@"NSURL"
@56@0:8{CGRect={CGPoint=dd}{CGSize=dd}}16q48
d24@0:8d16
@"NSTimer"
@"NSDate"
@"UIColor"
@"PLProgressArcLayer"
@"CALayer"
v28@0:8d16B24
d48@0:8{CGRect={CGPoint=dd}{CGSize=dd}}16
{CGRect={CGPoint=dd}{CGSize=dd}}28@0:8d16B24
d52@0:8{CGRect={CGPoint=dd}{CGSize=dd}}16B48
B36@0:8@16B24^d28
@20@0:8B16
v48@0:8d16d24d32d40
@"<PLSlalomRegionEditorDelegate>"
v56@0:8{CGRect={CGPoint=dd}{CGSize=dd}}16d48
@48@0:8@16^{CGImage=}24{CGSize=dd}32
S16@0:8
v40@0:8@"UIImagePickerController"16@"UIImage"24@"NSDictionary"32
v32@0:8@"UIImagePickerController"16@"NSDictionary"24
v24@0:8@"UIImagePickerController"16
v36@0:8@16@24B32
@48@0:8@16q24@32@40
v36@0:8@"UINavigationController"16@"UIViewController"24B32
Q24@0:8@"UINavigationController"16
q24@0:8@"UINavigationController"16
@"<UIViewControllerInteractiveTransitioning>"32@0:8@"UINavigationController"16@"<UIViewControllerAnimatedTransitioning>"24
@"<UIViewControllerAnimatedTransitioning>"48@0:8@"UINavigationController"16q24@"UIViewController"32@"UIViewController"40
v24@0:8#16
d32@0:8@16q24
@"UIImagePickerController"
@"UINavigationItem"
d24@0:8@16
v24@0:8@"PLVideoView"16
d32@0:8@"PLVideoView"16q24
d24@0:8@"PLVideoView"16
B24@0:8@"PLVideoView"16
v28@0:8@"PLVideoView"16B24
v28@0:8@"PLVideoView"16f24
v32@0:8@"PLVideoView"16@"UIView"24
@"NSDictionary"24@0:8@"PLVideoView"16
v28@0:8@"PLPhotoTileViewController"16B24
v24@0:8@"PLPhotoTileViewController"16
B24@0:8@"PLPhotoTileViewController"16
@"UIView"24@0:8@"PLPhotoTileViewController"16
@"<UILayoutSupport>"24@0:8@"PLPhotoTileViewController"16
v24@0:8@"PLCropOverlay"16
@"NSArray"24@0:8@"PLCropOverlay"16
@56@0:8^{CGImage=}16{CGRect={CGPoint=dd}{CGSize=dd}}24
@56@0:8@16{CGRect={CGPoint=dd}{CGSize=dd}}24
v44@0:8@16@24@32B40
^{CGImage=}
@"PLCropOverlay"
@"PLProgressView"
@24@0:8q16
v32@0:8@16:24
@40@0:8d16d24d32
q20@0:8i16
d20@0:8i16
q28@0:8i16d20
i20@0:8i16
@"AVAssetExportSession"
@"NSObject<PLVideoRemakerDelegate>"
@"PFVideoAVObjectBuilder"
@"AVAssetImageGenerator"
v28@0:8@16i24
v32@0:8@16f24f28
v40@0:8@16d24d32
v32@0:8@"UIMovieScrubber"16d24
v28@0:8@"UIMovieScrubber"16i24
v32@0:8@"UIMovieScrubber"16f24f28
v24@0:8@"UIMovieScrubber"16
v40@0:8@"UIMovieScrubber"16d24d32
@44@0:8@16i24@28@36
d24@0:8@"UIMovieScrubber"16
@"NSArray"44@0:8@"UIMovieScrubber"16i24@"NSNumber"28@"NSNumber"36
v32@0:8@"UIMovieScrubber"16@"NSNumber"24
v36@0:8@"UIMovieScrubber"16@"NSNumber"24B32
B28@0:8@16i24
v32@0:8@16Q24
v24@0:8@"PLMoviePlayerController"16
B28@0:8@"PLMoviePlayerController"16i24
v32@0:8@"PLMoviePlayerController"16Q24
B24@0:8@"PLMoviePlayerController"16
@"NSDictionary"24@0:8@"PLMoviePlayerController"16
v28@0:8@"PLSlalomRegionEditor"16B24
v24@0:8@"PLSlalomRegionEditor"16
B24@0:8@"PLSlalomRegionEditor"16
@64@0:8{CGRect={CGPoint=dd}{CGSize=dd}}16@48q56
v24@0:8^{CGImage=}16
@44@0:8@16@24@32i40
@32@0:8@16B24f28
v28@0:8d16i24
v44@0:8@16{CGSize=dd}24B40
@24@0:8^@16
B24@0:8d16
B32@0:8{CGPoint=dd}16
@"PLVideoPosterFrameView"
@"PLVideoEditingOverlayView"
@"PLPhotoBakedThumbnails"
@"PLProgressStack"
@"PLMoviePlayerController"
@"<PLVideoViewDelegate>"
@"NSLock"
@"NSObject<OS_dispatch_queue>"
@"UIMovieScrubber"
@"PLSlalomRegionEditor"
@"UIView<PLVideoOverlayButton>"
@"PFVideoAdjustments"
@"UITextView"
v24@0:8@"_UIBackdropView"16
v32@0:8B16d20B28
B24@0:8@?16
?333333
?333333
?es-8R
?ffffff
?333333
MbP?-C
?ffffff
?333?
signature
archive
PHSettings.m
Concrete subclass must implement. Use either PHSettingsImplementRootSettings() or PHSettingsImplementChildSettings() macro for this.
__defaultValues
PLAssetContainerDataSource.m
Mismatched asset collections and asset fetch results
 containing %ld containers with %ld total assets (last container index %ld)
%@: %ld assets [%ld]
PLCommentsFontCacheDidChangeNotification
CROP_OVERLAY_TITLE
CANCEL
USE_VIDEO
v16@?0@?<v@?@"NSArray">8
MOTION_TOGGLE_ON
MOTION_TOGGLE_OFF
PREVIEW
CHOOSE_PHOTO_BUTTON
RETAKE
PLCameraPickerPause.png
PLCameraPickerPlay.png
Cancel
Playback
Done
FileSize
H:|[_doCancelButton][_separatorLine(==separatorWidth@999)][_doSetButton]|
separatorWidth
_doCancelButton, _separatorLine, _doSetButton
V:|[_doCancelButton]|
_doCancelButton
SAVING_PHOTO
Status shown while setting wallpaper
tile
completionTarget
options
com.apple.photos.plcropoverlay.save
PLDataArrayInputStream.m
sanity check for stream data
should be able to make run loop source
collapseSingleImage
fadeInBorderForCollapse
Contracted
Expanding
Complete Expand
Cancel Expand
Expanded
Contracting
Cancel Contract
Complete Contract
ipad
PLImageBorder@2x
PLImageBorder
rate
status
externalPlaybackActive
readyForDisplay
playbackBufferEmpty
playbackBufferFull
playbackLikelyToKeepUp
tracks
duration
Could not load value for key %@:
https://
http://
home-sharing://
Unable to start background task, TV Out window may not tear down.
Error setting up TVOutWindow
COULD_NOT_LOAD_MOVIE_ERROR_FMT
GENERIC_COULD_NOT_LOAD_MOVIE
_serverConnectionDiedNotification. Info -- notification=%@, AVPlayer = %@, currentTime = %.2f
Image Manager
imageManagerSettings
Resource Download Request
resourceDownloadSettings
PhotoKit
Restore All Defaults
PhotoKit Settings
_UIImagePickerSavingOptions
NSDictionary *PLPhotoPickerDictionaryFromImage(NSDictionary *, PLPhotoTileViewController *, PLManagedAsset *, NSDictionary *, BOOL)
PLNavigationControllerInterface.m
PLPhotoPickerDictionaryFromImage - UIImagePickerSavingOptions may not be nil
_UIImagePickerControllerSourceType
PLPhotoPickerDictionaryFromImage - UIImagePickerControllerSourceType may not be nil
PLPhotoPickerDictionaryFromImage - _UIImagePickerControllerReviewCapturedItem may not be nil
PLPhotoPickerDictionaryFromImage - _UIImagePickerControllerShowCameraControls may not be nil
PHPhotoLibrary *PLNavigationControllerInterfacePhotoLibrary(NSURL *)
Requested URL %@ does not match previous URL %@
_UIImagePickerControllerPHAssetLocalIdentifier
_UIImagePickerDebugSidecarFileURLs
PUPhotoPickerOriginalImagePathSandboxExtensionToken
v32@?0@"NSData"8@"PLImageDataInfo"16@"PLCPLDownloadContext"24
Loading_Error%@.png
LOADING_PHOTO
PLPhotoTileViewController.m
Call -initWithFrame:photoTileController: or you get <rdar://problem/14272922> Comments using only half width of screen after swiping in landscape
<%@ photo:%@
v16@?0@"<UIViewControllerTransitionCoordinatorContext>"8
CAMImagePickerCameraViewController
v36@?0@"NSData"8@"NSString"16I24@"NSDictionary"28
BlueCheckUnselected.png
BlueCheckSelected.png
SelectedContentMode
pLzf7OiX5nWAPUMj7BfI4Q
EnableIris
LogJPEGDecodeTime
com.apple.mobileslideshow
com.apple.mobileslideshow.PreferenceChanged
0.0.0.0
v12@?0i8
failed to register for Photo Stream activity notification: %u
failed to register for Shared Photo Stream activity notification: %u
failed to register for Shared Photo Stream invitation failure activity notification: %u
notify_cancel() failed for kMSIdleStateDidChangeNotification. (%d)
notify_cancel() failed for kMSASStabilizedIdleStateDidChangeNotification. (%d)
notify_cancel() failed for Shared Photo Stream invitation failure activity notification. (%d)
void PLMRMediaRemoteSetNowPlayingApplicationOverrideEnabled(Boolean)
PLPhotosApplication.m
MRMediaRemoteSetNowPlayingApplicationOverrideEnabled
void *MediaRemoteLibrary(void)
/System/Library/PrivateFrameworks/MediaRemote.framework/MediaRemote
/System/Library/PrivateFrameworks/MediaRemote.framework/Contents/MacOS/MediaRemote
PLPhotosDefaultsDidChangeNotification
NowPlaying
FromIPhoto
Photos
plist
items
Transition
validValues
SummarizeSections
PLProgressHUDCheckmark
MEDIA_PROGRESS_FORMAT
MEDIA_TIME_ONE_MINUTE_REMAINING
MEDIA_TIME_MINUTES_REMAINING_FORMAT
COMPLETING_UPLOAD
MEDIA_TIME_ONE_SECOND_REMAINING
MEDIA_TIME_SECONDS_REMAINING_FORMAT
MEDIA_PROGRESS_NO_TIME_FORMAT
PLPublishingAgentFinishedPublishingNotification
PLPublishingAgentStartedPublishingNotification
PLPublishingAgentStartedRemakingNotification
PLPublishingAgentFinishedRemakingNotification
PLPublishingAgentRemakingDidSucceedKey
PLPublishingAgentDidCancelNotification
PLPublishingAgentsForcedCancelNotification
PLPhotosApplication
/System/Library/PublishingBundles/
%@.bundle
<override -[PLPublishingAgent serviceName]
SUBCLASS OVERRIDE
SHARING_WAS_INTERRUPTED
PUBLISHED_MEDIA_FORMAT
PUBLISHED_VIDEO
PUBLISHED_IMAGE
VIEW_BUTTON_TITLE_FORMAT
v16@?0@"UIAlertAction"8
TELL_A_FRIEND
mailto:?subject=%@&body=%@
MEDIA_FAILURE_FORMAT
FAILED_PUBLISH_VIDEO
FAILED_PUBLISH_IMAGE
CLOSE
MCProfileConnection
Class getMCProfileConnectionClass(void)_block_invoke
PLPublishingAgent.m
Unable to find class %s
void *ManagedConfigurationLibrary(void)
/System/Library/PrivateFrameworks/ManagedConfiguration.framework/ManagedConfiguration
/System/Library/PrivateFrameworks/ManagedConfiguration.framework/Contents/MacOS/ManagedConfiguration
NSString *getMCFeatureCellularHDUploadsAllowed(void)
MCFeatureCellularHDUploadsAllowed
PLPublishingMedia.m
Invalid parameter not satisfying: %@
asset
[PLPublishingMedia isValidPublishingMedia:asset]
managedAsset
avAsset
-Regular
-Compact
PLProgressIris%@-PhotoIris
v16@?0@"NSTimer"8
v16@?0d8
PLSlalomGrabberHandle.png
Error: no external display attached in tv out mode
Image Requests
allowImageRequests
Caching
allowCaching
Restore Defaults
TRIM_VIDEO_NAV_TITLE_IMAGE_PICKER
TRIM_VIDEO_NAV_TITLE
TRIM_TITLE_IMAGE_PICKER
TRIM_FOR_PUBLISH_TITLE
VIDEO_TOO_LONG_TITLE_IMAGE_PICKER
VIDEO_TOO_LONG_TITLE
VIDEO_PLAYBACK_FAILED
USE_PHOTO_BUTTON_TITLE
CHOOSE_VIDEO_TITLE
CHOOSE_PHOTO_TITLE
COMPRESSING_VIDEO
v24@?0@"UIImage"8@"NSDictionary"16
_UIImagePickerControllerCancelButtonTitle
_UIImagePickerControllerCustomBackgroundColor
_UIImagePickerControllerMaxZoomScaleOverride
PLVideoOverlayGlyphMask
PLVideoOverlayBackgroundMask
fileLengthLimit
PLVideoRemaker.m
media
v40@?0@"AVAsset"8@"AVAudioMix"16@"AVVideoComposition"24@"NSError"32
TRIMMING_VIDEO
PREPARING_VIDEO
v24@?0@"AVAssetExportSession"8@"NSError"16
3gpp
3gp2
aiff
videoCameraImage must be either video or audio
com.apple.mobileslideshow.videoThumbnails
<%@ path:%@>
v8@?0
v80@?0{?=qiIq}8^{CGImage=}32{?=qiIq}40q64@"NSError"72
v24@?0@"AVPlayerItem"8@"NSDictionary"16
B16@?0@"PHAdjustmentData"8
v24@?0@"PHContentEditingInput"8@"NSDictionary"16
v24@?0@"AVPlayerItem"8@"NSError"16
timestamps
VIDEO_TOO_LONG_BODY
Unable to assign data protection to "%@": %@
*** Error generating video thumbnails ... cleaning up state: %@
v32@?0@"NSDictionary"8@"NSURL"16@"NSError"24
*** Error saving a copy trimmed video to the disk ... cleaning up state: %@
v16@?0@"PLManagedAsset"8
Unable to copy CGImage at time:%f, error:[%@]
CANNOT_PLAY_STREAM_VIDEO_TITLE
Failed to commit adjustments with error: %@
v20@?0B8@"NSError"12
Failed to write metadata to path %@
Failed to delete file at path %@: %@
Video export failed for asset %@: %@
Simulate Download
simulateDownload
Simulate Download Failure
simulateDownloadFailure
simulateDownload == YES
UITableViewAdditions.m
indexPath is out of range %@
opacity
v12@?0B8
File resizing is not available on TV
(video-playback) %@ observeValueForKeyPath %@ %@
(video-playback) _playerRateDidChange %@
(video-playback) calling _player play
(video-playback) calling _player play in playFromBeginning
(video-playback) calling _player playDueToEnoughData
(video-playback) calling _player pause in pause
(video-playback) calling _player pauseDueToInsufficientData
(video-playback) calling _player pause in stop
(video-playback) setting buffering state to %lu
(video-playback) buffering state changed from %lu to %lu
CreateVideoDictionary
CreateImageDictionary
CreateMediaDictionary
%{public}ld
CreateMultipleMediaDictionary
PLNavigationControllerInterface unable to open system photo library: %@
Mis-matched image size and/or orientation for asset %@. PhotoKit: %.0f x %.0f (%ld). Data: %.0f x %.0f (%ld)
Video export failed for asset %@: %@
Marked temp file (%@) as purageble.
Unable to mark temp file (%@) purageble.
(video-playback) network reachability changes. Clears out cached video URL.
Clearing PLVideoView delegate before trim scrubber animation finished. Calling manually.
(video-playback) play due to buffer state change
(video-playback) pauseDueToInsufficientData due to buffer state change
(video-playback) moviePlayerPlaybackRateDidChange to 0
(video-playback) moviePlayerPlaybackRateDidChange to 1
Failed to fetch playback objects for %@
(video-playback) pause due to reset
(video-playback) _verifyOrRestartPlayback playing %u didBuffer %u
(video-playback) _verifyOrRestartPlayback rate > 0
(video-playback) _verifyOrRestartPlayback telling movie player to play
(video-playback) play in %@
Playing 360p video for cellular connection.
(streamed-video-playback) will play video for %@
(streamed-video-playback) already have a cachedNonPersistedVideoPlaybackURL %@
(streamed-video-playback) will play streamed video using original video at path %@
(video-playback) pause due to video view pause
(video-playback) pause due to stop
(video-playback) pause due to force stop
(video-playback) update poster frame visibility to %d
No PHAsset for committing pending adjustment changes
Requesting cleanupForStoreDemoMode
softlink:r:path:/System/Library/PrivateFrameworks/MediaRemote.framework/MediaRemote
softlink:r:path:/System/Library/PrivateFrameworks/ManagedConfiguration.framework/ManagedConfiguration
PHSettings
PLAVPlayerView
PLAssetContainerDataSource
PHAssetCollectionDataSource
NSObject
PLCAAnimationDelegate
CAAnimationDelegate
PLCGPathCache
PLCacheEntry
PLCache
PLCommentsFontCache
PLContactPhotoOverlay
PLCropOverlay
PLCropOverlayCropView
PLCropOverlayBottomBar
PLCropOverlayPreviewBottomBar
PLCropOverlayWallpaperBottomBar
PhotoSaving
PLDataArrayInputStream
PLExpandableImageView
PLExpandableView
PLImageScrollView
PLImageView
PLMoviePlayerController
PHRootSettings
PLMoviePlayerControllerManager
PLMoviePlayerView
PLNavigationControllerInterface
PLImagePickerUtils
PLPhotoTileCloudPlaceholderView
PLTilePlaceholderView
PLPhotoTilePlaceholderView
PLTileContainerView
PLPhotoTileViewController
UIScrollViewDelegate
UIGestureRecognizerDelegate
PLPhotoTileCloudPlaceholderViewDelegate
PLPhotosApplication
UIApplicationDelegate
PLPhotosDefaults
PLProgressHUD
PhotoLibrary
PLProgressView
PLPublishingAgent
PLDataArrayInputStreamProgressDelegate
PLPublishAlbum
PLPublishingMedia
PLRoundProgressView
PLProgressArcLayer
PLSlalomRegionEditor
PLTVOutWindow
PLTiledLayer
PLTileableLayer
PLUIEditImageViewController
PHImageManagerSettings
PLUIView
PLUIEditVideoViewController
UIImagePickerControllerDelegate
UINavigationControllerDelegate
PLUIImageViewController
PLVideoViewDelegate
PLPhotoTileViewControllerDelegate
PLCropOverlayDelegate
PLVideoOverlayButton
PLHighFidelityVideoOverlayButton
PLFlatVideoOverlayButton
PLVideoRemaker
PLAssetImageGenerator
PLVideoPosterFrameView
PLVideoView
UIMovieScrubberDelegate
UIMovieScrubberDataSource
PLMoviePlayerControllerDelegate
PLSlalomRegionEditorDelegate
PLVideoEditingOverlayView
PHResourceDownloadSettings
PLWallpaperButton
_UIBackdropViewObserver
PhotosInternal
PhotoLibraryAdditions
copy
currentHandler
handleFailureInMethod:object:file:lineNumber:description:
_userDefaults
_defaultsKey
objectForKey:
objectForKeyedSubscript:
_signatureDictionary
isEqualToDictionary:
settingsFromArchiveDictionary:
initWithDefaultValues
suiteName
initWithSuiteName:
standardUserDefaults
parentSettings
save
dictionaryWithCapacity:
archiveDictionary
setObject:forKeyedSubscript:
setObject:forKey:
synchronize
dictionary
setSuiteName:
sharedSettings
createSharedSettings
T@"NSString",C,N
initWithFrame:
layer
setContentsOpaque:
setScaleMode:
player
setPlayer:
setScaleMode:duration:
setAnimationDuration:
setVideoGravity:
videoRect
layerClass
scaleMode
_scaleMode
T@"AVPlayerLayer",R,&,D,N
T@"AVPlayer",&,N
Tq,N,V_scaleMode
T{CGRect={CGPoint=dd}{CGSize=dd}},R,N
init
count
initWithCapacity:
objectAtIndex:
dealloc
countByEnumeratingWithState:objects:count:
indexOfObject:
globalIndexOfAsset:
assetContainerForAssetGlobalIndex:
allAssetsCount
section
item
indexPathForItem:inSection:
indexOffsetForAssetContainerAtAssetIndex:
assetInAssetContainer:atIndex:
objectAtIndexedSubscript:
globalIndexForIndexPath:
arrayWithObjects:count:
fetchPHObjectsForOIDs:
lastObject
assetContainerForAsset:
incrementAssetIndexPath:insideCurrentAssetContainer:andWrap:
decrementAssetIndexPath:insideCurrentAssetContainer:andWrap:
lastAssetIndexPath
firstAssetIndexPath
assetCountForContainerAtIndex:
_indexOfNextNonEmptyAssetContainerAfterContainerIndex:wrap:
_indexOfPreviousNonEmptyAssetContainerBeforeContainerIndex:wrap:
objectIDAtIndex:
array
pl_managedAssetsForAssets:
addObjectsFromArray:
assetCollectionsFetchResult
changeDetailsForFetchResult:
fetchResultAfterChanges
insertedObjects
removedObjects
mutableCopy
removeObjectsForKeys:
firstObject
photoLibrary
librarySpecificFetchOptions
setIncludeHiddenAssets:
fetchAssetsInAssetCollection:options:
hasIncrementalChanges
allKeys
_updateCachedValues
description
appendFormat:
isEqual:
class
self
performSelector:
performSelector:withObject:
performSelector:withObject:withObject:
isProxy
isKindOfClass:
isMemberOfClass:
conformsToProtocol:
respondsToSelector:
retain
release
autorelease
retainCount
zone
hash
superclass
debugDescription
TQ,R
T#,R
T@"NSString",R,C
assetsInAssetCollection:
T@"PHFetchResult",R,N
initWithAssetCollectionsFetchResult:collectionsAssetsFetchResults:
_updateCachedCount:forContainerAtContainerIndex:
indexPathForGlobalIndex:
incrementGlobalIndex:insideCurrentAssetContainer:andWrap:
decrementGlobalIndex:insideCurrentAssetContainer:andWrap:
assetAtGlobalIndex:
assetWithObjectID:
assetsInAssetCollectionAtIndex:
newAssetsFetchResults
assetAtIndexPath:
indexPathOfAsset:
assetContainerAtIndex:
indexOfContainer:
hasAssetAtIndexPath:
findNearestIndexPath:preferNext:
assetCountForContainer:
pl_fetchAllAssets
viewControllerPhotoLibraryDidChange:
_assetCollectionsFetchResult
_assetsFetchResultByAssetCollection
_allAssetsCount
_containerCounts
_cachedValuesNeedUpdate
_lastAssetCollectionIndex
T@"PHFetchResult",R,N,V_assetCollectionsFetchResult
start
completion
animationDidStart:
animationDidStop:finished:
setCompletion:
setStart:
_completion
_start
T@?,C,N,V_completion
T@?,C,N,V_start
valueWithCGRect:
sharedPathCache
setPath:forKey:
pathForKey:
_pathCache
setObject:
object
lruListEntry
_object
_entry
setObject:forKey:cost:
removeObjectForKey:
removeAllObjects
initWithCountLimit:totalCostLimit:
_cacheEntries
_countLimit
_currentCount
_totalCostLimit
_currentCost
_lock
_lru
defaultCenter
_contentSizesDidChange:
addObserver:selector:name:object:
removeObserver:
_invalidateCache
postNotificationName:object:
preferredFontDescriptorWithTextStyle:addingSymbolicTraits:options:
_shortCaptionFontDescriptor
fontDescriptorWithSymbolicTraits:
_bodyFontDescriptor
_emphasizedShortCaptionFontDescriptor
fontWithDescriptor:size:
_shortSubheadlineFontDescriptor
_shortBodyFontDescriptor
_emphasizedBodyFontDescriptor
sharedCache
youLikeFont
likeFont
commentTextFont
commentAttributionDateFont
commentAttributionNameFont
commentEntryFont
commentSendButtonFont
__shortCaptionFontDescriptor
__emphasizedShortCaptionFontDescriptor
__shortSubheadlineFontDescriptor
__bodyFontDescriptor
__emphasizedBodyFontDescriptor
__shortBodyFontDescriptor
T@"UIFont",R,N
inscribingBounds
bounds
clearColor
setBackgroundColor:
preferredFontDescriptorWithTextStyle:
setFont:
whiteColor
setTextColor:
addSubview:
_commonPLContactPhotoOverlayInitialization
initWithCoder:
layoutSubviews
sizeToFit
setFrame:
bezierPathWithRect:
bezierPathWithOvalInRect:
appendPath:
setUsesEvenOddFillRule:
circularLayer
CGPath
setPath:
setFillRule:
colorWithRed:green:blue:alpha:
CGColor
setFillColor:
addSublayer:
bringSubviewToFront:
setCircularLayer:
overlayEdgeInsets
beginAvatarTrackingFromImageView:
endAvatarTracking
titleLabel
_avatarPreview
_titleLabel
__avatarPreview
_circularLayer
T@"UIImageView",R,N,V__avatarPreview
T@"CAShapeLayer",&,N,V_circularLayer
T@"UILabel",R,N,V_titleLabel
T{UIEdgeInsets=dddd},R,N
setAutoresizingMask:
defaultHeight
_updateToolbarItems:
_newOverlayViewWithFrame:lighterEdgeOnTop:
setText:
setTextAlignment:
colorWithWhite:alpha:
setShadowColor:
setShadowOffset:
frame
isDisplayedInPopover
setInPopover:
isTelephonyUIMode:
setBackgroundStyle:
setPreviewBottomBar:
cancelButton
_tappedBottomBarCancelButton:
addTarget:action:forControlEvents:
doneButton
_tappedBottomBarDoneButton:
playbackButton
_tappedBottomBarPlaybackButton:
buttonWithType:
setTitleColor:forState:
setExclusiveTouch:
setTitle:forState:
insertSubview:belowSubview:
pl_setHidden:animated:
setWallpaperBottomBar:
doCancelButton
lightGrayColor
doSetHomeScreenButton
_tappedBottomBarSetHomeButton
doSetLockScreenButton
_tappedBottomBarSetLockButton
doSetBothScreenButton
_tappedBottomBarSetBothButton
motionToggle
_tappedBottomBarMotionToggle
doSetButton
statusBarHeightDidChange:
_setMode:
_updateTitle
_updateCropRectInRect:
setCropRect:
mode
safeAreaInsets
bottomBar
mainScreen
scale
contactPhotoOverlay
sharedApplication
statusBarHeight
convertRect:fromView:
image
size
cameraBottomBar
setCameraBottomBar:
setNeedsLayout
wallpaperBottomBar
setShowsCropRegion:
setCropRectVisible:duration:
setHidden:
removeFromSuperview
initWithFrame:mode:offsettingStatusBar:
isStatusBarHidden
setUserInteractionEnabled:
setOpaque:
insertSubview:aboveSubview:
_createCropView
setAlpha:
animateWithDuration:animations:
_bottomBar
previewBottomBar
setStyle:
_updateEditImageCancelButtonTitle
_updateEditImageDoneButtonTitle
_updateMotionToggle
defaultOKButtonTitle
setStyle:animated:
setPlayingVideo:
setEnabled:
_fadeOutCompleted:
animateWithDuration:animations:completion:
done
cropOverlayWasCancelled:
cropOverlayWasOKed:
setImageAsHomeScreenClicked:
setImageAsLockScreenClicked:
setImageAsHomeScreenAndLockScreenClicked:
setMotionToggleIsOn:
motionToggledManually:
_bottomBarFileSizeMenuActions
elementWithProvider:
menuWithTitle:children:
cropOverlayFileSizeMenuActions:
_updateWallpaperBottomBarSettingButtons
setShouldOnlyShowHomeScreenButton:
setShouldOnlyShowLockScreenButton:
setMotionToggleHidden:
motionToggleHidden
togglePlaybackState
isPlayingVideo
cropOverlayPlay:
cropOverlayPause:
cropOverlayBottomBarPlayButtonClicked:
cropOverlayBottomBarPauseButtonClicked:
hitTest:withEvent:
isDescendantOfView:
isEqualToString:
isWallpaperUIMode:
showInView:
hide
fileResizingButton
_fileResizingButton
setTitle:
length
defaultCancelButtonTitle
initWithBarButtonSystemItem:target:action:
_playButtonPressed:
_pauseButtonPressed:
arrayWithObjects:
setItems:
resizableImageWithCapInsets:resizingMode:
setImage:
setDisplayedInPopover:
controlsAreVisible
setControlsAreVisible:
overlayContainerView
setOverlayContainerView:
initWithFrame:mode:
insertIrisView:
bottomBarFrame
didCapturePhoto
didCaptureVideo
didPlayVideo
didPauseVideo
setDelegate:
dismiss
cancelButtonClicked:
_bottomBarFileSizeMenu
setIsEditingHomeScreen:
setIsEditingLockScreen:
cropRect
setTitle:okButtonTitle:
titleRect
setOKButtonTitle:
setDefaultOKButtonTitle:
setDefaultCancelButtonTitle:
setOKButtonShowsCamera:
setCancelButtonTitle:
setShowProgress:title:
removeProgress
setProgressDone
setTitleHidden:animationDuration:
setPreviewMode:
previewMode
setFileResizingTitle:
setFileResizingHidden:
motionToggleIsOn
isEditingHomeScreen
isEditingLockScreen
delegate
_cameraCancelButton
.cxx_destruct
_cropView
_shadowView
_overlayContainerView
_cropRect
_customToolbar
_topShineView
_hud
_statusBarHeight
_mode
_previewMode
_cropRectIsVisible
_offsetStatusBar
_tookPhoto
_showsCropRegion
_controlsAreVisible
_bottomShineView
_okButton
_wildcatPickerTopView
_wildcatPickerBottomView
_motionToggleIsOn
_isEditingHomeScreen
_isEditingLockScreen
_displayedInPopover
_contactPhotoOverlay
_defaultOKButtonTitle
_defaultCancelButtonTitle
_delegate
__bottomBar
__cameraCancelButton
T@"PLCropOverlayBottomBar",R,N,V__bottomBar
T@"UIButton",R,N,V__cameraCancelButton
T@"PLContactPhotoOverlay",R,N,V_contactPhotoOverlay
T@"UIView",&,N
T@"PLCropOverlayWallpaperBottomBar",R,N
TB,N,V_motionToggleIsOn
TB,N,V_isEditingHomeScreen
TB,N,V_isEditingLockScreen
TB,N
displayedInPopover
TB,N,GisDisplayedInPopover,V_displayedInPopover
T@"NSString",C,N,V_defaultOKButtonTitle
T@"NSString",C,N,V_defaultCancelButtonTitle
T@"<PLCropOverlayDelegate>",W,N,V_delegate
_updateCropRectIfNeeded
alpha
setBorderColor:
setBorderWidth:
_removeCropViews
_aboveCropView
_cropRectView
_belowCropView
_commonPLCropOverlayBottomBarInitialization
_updateBottomBars
_updateStyle
_updatePreviewBottomBarForPlaybackState
imageNamed:inBundle:
setImage:forState:
_isEditingStyle:
style
isInPopover
_playingVideo
_inPopover
_style
_cameraBottomBar
_previewBottomBar
_wallpaperBottomBar
Tq,N,V_style
T@"UIView",&,N,V_cameraBottomBar
T@"PLCropOverlayPreviewBottomBar",&,N,V_previewBottomBar
T@"PLCropOverlayWallpaperBottomBar",&,N,V_wallpaperBottomBar
playingVideo
TB,N,GisPlayingVideo,V_playingVideo
inPopover
TB,N,GisInPopover,V_inPopover
setAccessibilityIdentifier:
setAdjustsFontSizeToFitWidth:
_updateBackgroundStyle
_commonPLCropOverlayEditPhotoBottomBarInitialization
semanticContentAttribute
userInterfaceLayoutDirectionForSemanticContentAttribute:
textRectForBounds:limitedToNumberOfLines:
setBackgroundStyle:animated:
safeAreaInsetsDidChange
backgroundStyle
_backgroundStyle
_cancelButton
_doneButton
_playbackButton
Tq,N,V_backgroundStyle
T@"UIButton",R,N,V_cancelButton
T@"UIButton",R,N,V_doneButton
T@"UIButton",R,N,V_playbackButton
T@"UIButton",R,N,V_fileResizingButton
_commonPLCropOverlayWallpaperBottomBarInitializationPhone
autoLayoutCommonWallpaperButton
setTranslatesAutoresizingMaskIntoConstraints:
initWithContentColor:
systemFontOfSize:
initWithSettings:strength:string:font:
numberWithDouble:
dictionaryWithObjects:forKeys:count:
constraintsWithVisualFormat:options:metrics:views:
activateConstraints:
constraintWithItem:attribute:relatedBy:toItem:attribute:multiplier:constant:
setActive:
autoLayoutCommonWallpaperButtonWithStyle:
widthForToggleText
setMaxToggleWidth:
initWithPrivateStyle:
addObserver:
backdropViewDidChange:
_commonPLCropOverlayWallpaperBottomBarInitialization
_layoutSubviewsPhone
window
convertRect:fromCoordinateSpace:
backdropView
sendSubviewToBack:
initWithFrame:style:
sizeThatFits:
_sizeForString:
setString:
font
sizeWithAttributes:
string
updateForChangedSettings:
_commonPLCropOverlayWallpaperBottomBarInitializationPad
_layoutSubviewsPad
shouldOnlyShowLockScreenButton
shouldOnlyShowHomeScreenButton
setTitleLabel:
separatorLine
setSeparatorLine:
setBackdropView:
maxToggleWidth
_motionToggleHidden
_shouldOnlyShowLockScreenButton
_shouldOnlyShowHomeScreenButton
_doCancelButton
_doSetButton
_doSetHomeScreenButton
_doSetLockScreenButton
_doSetBothScreenButton
_motionToggle
_separatorLine
_backdropView
_maxToggleWidth
T@"_UILegibilityLabel",&,N,V_titleLabel
T@"UIView",&,N,V_separatorLine
T@"_UIBackdropView",&,N,V_backdropView
Td,N,V_maxToggleWidth
T@"PLWallpaperButton",R,&,N,V_doCancelButton
T@"PLWallpaperButton",R,&,N,V_doSetButton
T@"PLWallpaperButton",R,&,N,V_doSetHomeScreenButton
T@"PLWallpaperButton",R,&,N,V_doSetLockScreenButton
T@"PLWallpaperButton",R,&,N,V_doSetBothScreenButton
T@"PLWallpaperButton",R,&,N,V_motionToggle
TB,N,V_motionToggleHidden
TB,N,V_shouldOnlyShowLockScreenButton
TB,N,V_shouldOnlyShowHomeScreenButton
scrollView
initWithUnsignedInt:
cancelMouseTracking
beginIgnoringInteractionEvents
initWithObjectsAndKeys:
_backgroundSavePhoto:cropRect:minimalCropDimension:
unsignedIntValue
dictionaryWithCroppedImageForRect:minimalCropDimension:withOptions:
_savePhotoFinished:
endIgnoringInteractionEvents
cropOverlay:didFinishSaving:
beginBackgroundSaveWithTile:progressTitle:completionCallbackTarget:options:
stream:handleEvent:
_scheduleCallback
getCFRunLoop
_scheduleInCFRunLoop:forMode:
_unscheduleFromCFRunLoop:forMode:
_updateProgress
cancelPreviousPerformRequestsWithTarget:selector:object:
dataArrayInputStreamBytesWereRead:
arrayWithObject:
performSelector:withObject:afterDelay:inModes:
bytes
_scheduleProgressUpdate
initWithDataArray:
_streamEventTrigger
_setCFClientFlags:callback:context:
scheduleInRunLoop:forMode:
removeFromRunLoop:forMode:
open
close
streamError
streamStatus
read:maxLength:
totalBytes
bytesRead
hasBytesAvailable
getBuffer:length:
progressDelegate
setProgressDelegate:
_dataArray
_bodyData
_dataCount
_dataLength
_dataOffset
_currentIndex
_currentOffset
_currentLength
_openEventSent
_streamStatus
_progressDelegate
_rls
_clientCallback
_clientContext
T@"<PLDataArrayInputStreamProgressDelegate>",N,V_progressDelegate
setEdgeAntialiasingMask:
setBorderAndAccessoriesVisible:
initWithFrame:frameStyle:withBorder:
initWithFrame:frameStyle:
videoView
sizeThatFits:allowRounding:
convertRect:toView:
contractedFrame
expandedFrame
imageSize
isTracking
state
setPlaceholderScale:
pinchRect:inView:insetTouches:
superview
locationOfTouch:inView:
_contentView
_setOriginalSize:
setTransform:
_expansionFraction
_borderAlphaForExpansionFraction:
setBorderAndAccessoriesAlpha:
allowsExpansion
convertPoint:toView:
_updatePinchWidthAndScaleWithLeftPoint:rightPoint:
center
_updateBorderAndAccessoriesAlpha
velocity
setCenter:
setAnchorPoint:
setEdgeAntialiasingEnabled:
setSize:angle:
_newSizeFromSize:
_currentScale
_expandedScale
_snappedExpandedFrame
_bounceToPlace:finished:context:
_bounceBack:finished:context:
finishTransition
beginAnimations:context:
setAnimationCurve:
setAnimationDelegate:
setAnimationDidStopSelector:
setAnimationDelay:
commitAnimations
performSelector:withObject:afterDelay:
setTransformAndCenterForFrame:
setBorderAndAccessoriesAlpha:forced:
boolValue
layoutBelowIfNeeded
updateFullSizeImageVisibleArea
isBorderAndAccessoriesVisible
setImage:isFullscreen:
setFullSizeImageJPEGData:size:orientation:
setName:
name
showsPlaceholder
setShowsPlaceholder:
layoutIfNeeded
imageView
setVideoView:
setShadowEnabled:
isShadowEnabled
setTransitionProgress:
transitionProgress
setTextBadgeString:
renderSnapshotInContext:
imageBorderWidth
pointInside:withEvent:
stateDidChangeFrom:
beginTrackingPinch:
continueTrackingPinch:
completeTrackingPinch:toState:duration:
frameOfImage
imageRotationAngle
isBeingManipulated
photo
setPhoto:
_imageView
_imageID
_originalSize
_originalWidth
_originalAngle
_anchorPoint
_imageRotationAngle
_pinchWidth
_pinchAngle
_pinchScale
_initialExpandingFrame
_originalBounds
_currentAngle
_centerOffset
_photo
_exImageFlags
T{CGSize=dd},R,N
T@"PLVideoView",&,N
TB,R,N
borderAndAccessoriesVisible
TB,N,GisBorderAndAccessoriesVisible
T@"PLManagedAsset",&,N,V_photo
beginDisablingInterfaceAutorotation
isInterfaceAutorotationDisabled
endDisablingInterfaceAutorotation
_setAutorotationDisabled:
expandableViewDidCompleteCollapsing:
expandableViewWillBeginExpanding:
expandableView:willCancelCollapsingWithDuration:
expandableView:willCompleteCollapsingWithDuration:
expandableView:willCompleteExpandingWithDuration:
expandableView:willCancelExpandingWithDuration:
expandableViewDidCompleteExpanding:
expandableViewDidBeginCollapsing:
expandableViewDidCancelExpanding:
expandableViewDidCancelCollapsing:
_notifyWillBeginExpanding
_notifyWillCompleteExpandingWithDuration:
_notifyWillCancelExpandingWithDuration:
_notifyDidCompleteExpanding
_notifyWillBeginCollapsing
_notifyDidCancelExpanding
_notifyWillCancelCollapsingWithDuration:
_notifyWillCompleteCollapsingWithDuration:
_notifyDidCancelCollapsing
_notifyDidCompleteCollapsing
stateWillChangeTo:
setContractedFrame:
_transitionFromContracted:withDuration:
_transitionFromExpanding:withDuration:
_transitionFromCompleteExpand:withDuration:
_transitionFromCancelExpand:withDuration:
_transitionFromExpanded:withDuration:
_transitionFromContracting:withDuration:
_transitionFromCancelContract:withDuration:
_transitionFromCompleteContract:withDuration:
expandableView:expansionFractionChanged:
setExpansionFraction:
numberOfTouches
_canPinch
_removeAllAnimations:
updatePinchState:
setState:withDuration:
notifyExpansionFraction:force:
snapState:
finishTransitionToState:
transform
willMoveToWindow:
didMoveToWindow
startedPinch:
continuedPinch:
finishedPinch:
canceledPinch:
collapseWithAnimation:completion:
expandWithAnimation:completion:
setExpandedFrame:
setAllowsExpansion:
previousState
expansionFraction
canCollapse
_collapsingCompletionHandler
_expansionCompletionHandler
_contractedFrame
_expandedFrame
_leftTouchLocation
_rightTouchLocation
_previousLeftLocation
_previousRightLocation
_leftTouchIndex
_rightTouchIndex
_pinchVelocity
_trackingTimeInterval
_expandFlags
T{CGRect={CGPoint=dd}{CGSize=dd}},N
setScrollsToTop:
setDecelerationRate:
zoomScale
contentOffset
willAnimateRotationToInterfaceOrientation:
adjustZoomScaleAfterRotation
setZoomScale:
setContentOffset:
setAdjustZoomScaleAfterRotation:
_adjustZoomScaleAfterRotation
TB,N,V_adjustZoomScaleAfterRotation
blackColor
setContentMode:
setAllowsEdgeAntialiasing:
setAllowsDisplayCompositing:
setShadowRadius:
renderInContext:
badgeOffset
_leftAccessoryViewFrame
_bottomRightAccessoryViewFrame
_updateShadowPath
_transformForFullSizeImageTiledLayer
begin
setValue:forKey:
commit
setShadowPath:
pl_firstKeyWindow
screen
removeFromSuperlayer
initWithJPEGData:placeholderImage:screenSize:
convertRect:fromLayer:
setVisibleRectangle:zoomScale:
_setShadowEnabled:force:
shadowOpacity
setShadowOpacity:
_updatePlaceholderAlpha
setContents:
setContentsScale:
setContentsCenter:
setOpacity:
opacity
_updatePlaceholderLayout
placeholderSize
initWithWhite:alpha:
setLineBreakMode:
setBaselineAdjustment:
setMinimumScaleFactor:
setCornerRadius:
setSize:
text
textBadgeForString:photoSize:
setLeftAccessoryView:animated:
setAllowsGroupOpacity:
setBottomRightAccessoryView:animated:
insertSubview:below:
initialize
shouldDrawShadows
parentDidLayout
borderAndAccessoriesAlpha
setDrawsBorder:
drawsBorder
setDimmed:
isDimmed
textBadgeString
setLeftAccessoryView:
setLeftAccessoryViewOffset:
setBottomRightAccessoryView:
setAccessoryViewsAlpha:
leftAccessoryView
leftAccessoryViewOffset
bottomRightAccessoryView
accessoryViewsAlpha
placeholderScale
_name
_borderView
_videoView
_placeholderView
_leftAccessoryView
_bottomRightAccessoryView
_leftAccessoryViewOffset
_textBadge
_shadowEnabled
_suppressShadowDrawing
_borderViewIsVisible
_drawsBorder
_aspectRatio
_lastBorderAlphaTime
_lastShadowAlphaTime
_transitionProgress
_edgeAntialiasingEnabled
_fullSizeImageTiledLayer
_fullSizeImageOrientation
_showsPlaceholder
_accessoryViewsAlpha
_placeholderScale
T@"NSString",C,N,V_name
dimmed
TB,N,GisDimmed
Tf,N
shadowEnabled
TB,N,GisShadowEnabled
Td,N,V_transitionProgress
T@"UIView",&,N,V_leftAccessoryView
T{CGSize=dd},N,V_leftAccessoryViewOffset
T@"UIView",&,N,V_bottomRightAccessoryView
Td,N,V_accessoryViewsAlpha
TB,R,N,V_showsPlaceholder
Td,N,V_placeholderScale
bundleForClass:
URLForResource:withExtension:
_registerForNotifications
_setupPlayer
_updateTVOutEnabled
_updateDisableAirPlayMirroringDuringPlayback
_updateBackgroundViewInformation
requestToResignAsActiveController
_unregisterForNotifications
_setPlayerItem:
_tearDownPlayer
_simpleRemoteNotification:
_willSuspendNotification:
_willBeginSuspendAnimationNotification:
_willResignNotification:
_screenDidConnect:
_screenDidDisconnect:
_willEnterForegroundNotification:
_didEnterBackgroundNotification:
beginReceivingRemoteControlEvents
endReceivingRemoteControlEvents
auxiliarySession
setCategory:error:
setAudioSession:
setExternalPlaybackVideoGravity:
setActionAtItemEnd:
_playerKeysToObserve
addObserver:forKeyPath:options:context:
removeObserver:forKeyPath:context:
pause
URLFromPath:
asset
_setPlaybackState:
_setBufferingState:
_asset
_loadAsset:
seekToTime:toleranceBefore:toleranceAfter:
removeObserver:name:object:
_playerItemDidReachEndNotification:
_playerItemFailedToPlayToEndNotification:
replaceCurrentItemWithPlayerItem:
_updateFromPendingTime
statusOfValueForKey:error:
_didLoadValueOfKey:forAsset:
loadValuesAsynchronouslyForKeys:completionHandler:
isMainThread
moviePlayerDurationAvailable:
localizedDescription
status
moviePlayerReadyToPlay:
_playerItemFailedToPlayToEnd:
_streamRanDry
_streamBufferFull
_streamLikelyToKeepUp
_streamUnlikelyToKeepUp
_dispatchOnMainThreadWithBlock:
_playerRateDidChange:
intValue
_serverConnectionDidDie:
moviePlayerDidChangeExternalPlaybackType:
moviePlayerReadyToDisplay:
observeValueForKeyPath:ofObject:change:context:
null
floatValue
moviePlayerPlaybackRateDidChange:
_isStreamableAsset:
play
setCurrentTime:timeSnapOption:forceUpdate:
setCurrentTime:timeSnapOption:
_delayedUpdateFromPendingTime
seekToTime:toleranceBefore:toleranceAfter:completionHandler:
duration
rate
currentTime
moviePlayerBufferingStateDidChange:
absoluteString
_isNetworkSupportedPath:
compare:options:range:
moviePlayerPlaybackStateDidChange:fromPlaybackState:
_restoreTVOutVideoIfNecessary
userInfo
moviePlayerHeadsetPlayPausePressed:
moviePlayerHeadsetNextTrackPressed:
moviePlayerHeadsetPreviousTrackPressed:
stop
isSuspendedUnderLock
isExternalPlaybackActive
moviePlayerWasSuspendedDuringPlayback:
_tearDownTVOutWindow
beginBackgroundTaskWithExpirationHandler:
_pausePlaybackForNotification
_setForceDisableTVOut:
_displayVideoView
_setCALayerDestinationIsTVOut:
reattachVideoView
_setupTVOutWindow
endBackgroundTask:
isActiveController
moviePlayerControllerShouldAllowExternalPlayback:
_allowsExternalPlayback
setAllowsExternalPlayback:
setUsesExternalPlaybackWhileExternalScreenIsActive:
externalPlaybackType
videoOutActive
isExternalPlayback
destinationPlaceholderStyle
moviePlayerUpdatedDestinationPlaceholder:
sharedInstance
moveControllerToTopOfStack:
removeControllerFromStack:
setIsActiveController:
moviePlayerControllerDidBecomeActiveController:
moviePlayerControllerWillResignAsActiveController:
moviePlayerPlaybackDidEnd:
code
error
_playbackFailedWithError:
domain
moviePlayerEncounteredAuthenticationError:
moviePlayerShouldNotifyOnPreparationError:
applicationState
stringWithFormat:
alertControllerWithTitle:message:preferredStyle:
actionWithTitle:style:handler:
addAction:
view
pl_presentViewController:animated:
_exitPlayer:
moviePlayerExitRequest:exitReason:
AVAssetURLWithPath:
setPlayerItem:startTime:
playFromBeginning
playDueToEnoughData
pauseDueToInsufficientData
resetPlayer
setCurrentTime:
playbackRate
tearDownTVOutWindow
requestToBecomeActiveController
didBecomeActiveController
willResignAsActiveController
bufferingState
playbackState
TVOutEnabled
setTVOutEnabled:
forceDisableTVOut
isPreparedForPlayback
_playerItem
_player
_view
_tvOutWindow
_hasPendingTime
_pendingTime
_pendingTimeSnapOption
_forceUpdateCurrentTime
_isExternalPlayback
_exited
_lastSetCurrentTimeTime
_isSeeking
_backgroundTaskId
_audioSessionActive
_originalAudioCategory
_TVOutEnabled
_forceDisableTVOut
_isPreparedForPlayback
_isActiveController
_bufferingState
_playbackState
TB,N,V_TVOutEnabled
TB,N,S_setForceDisableTVOut:,V_forceDisableTVOut
TB,N,V_isActiveController
T@"<PLMoviePlayerControllerDelegate>",N,V_delegate
T@"AVPlayer",R,&,N,V_player
T@"PLMoviePlayerView",R,&,N,V_view
Tf,R,N
TQ,R,N,V_playbackState
Td,R,N
Td,N
TQ,R,N,V_bufferingState
TB,R,N,V_isPreparedForPlayback
rowWithTitle:childSettingsKeyPath:
sectionWithRows:title:
actionWithSettingsKeyPath:
rowWithTitle:action:
sectionWithRows:
moduleWithTitle:contents:
settingsControllerModule
imageManagerSettings
resourceDownloadSettings
_imageManagerSettings
_resourceDownloadSettings
T@"PHImageManagerSettings",R,N,V_imageManagerSettings
T@"PHResourceDownloadSettings",R,N,V_resourceDownloadSettings
removeObject:
addObject:
_playerStack
insertSubview:atIndex:
isDestinationPlaceholderHidden
setDestinationPlaceholderHidden:
_installBackgroundView:
_avPlayerView
_destinationPlaceholderHidden
_destinationPlaceholderStyle
T@"UIView",R,&,N
Tq,R,N,V_destinationPlaceholderStyle
destinationPlaceholderHidden
TB,N,GisDestinationPlaceholderHidden
parentViewController
uiipc_imagePickerController
_properties
uiipc_imagePickerOptions
identifier
uiipc_useTelephonyUI
uiipc_filterForMediaTypes:
unscaledImage
imageOrientation
_newOriginalImageForPickerFromCachedData
_imageOrientation
changeRequestForAsset:
incrementShareCount
performChanges:completionHandler:
pathManager
libraryURL
pl_PHAssetFromPhotoLibrary:
_imagePickerDidCompleteWithInfo:
arrayWithCapacity:
pl_managedAsset
isVideo
pathForVideoFile
fileURLWithPath:isDirectory:
_imagePickerDidCompleteWithInfoArray:
stringWithUTF8String:
handleFailureInFunction:file:lineNumber:description:
integerValue
addEntriesFromDictionary:
CGImage
initWithCGImage:imageOrientation:
isMultiLibraryModeEnabled
initWithPhotoLibraryURL:
openAndWaitWithUpgrade:error:
sharedPhotoLibrary
_imagePickerSavingOptions
sourceType
_valueForProperty:
showsCameraControls
assetURLForPhoto:
localIdentifier
assetsdClient
debugClient
debugSidecarFileURLsForAsset:debugSidecarFileURLs:error:
sandboxExtensionToken
initWithData:
sharedAssetsSaver
objectID
defaultFormatChooser
fullScreenFormatForCurrentDevice
formatID
requestSynchronousImageForAssetOID:withFormat:allowPlaceholder:wantURLOnly:networkAccessAllowed:trackCPLDownload:outImageDataInfo:outCPLDownloadContext:
CGRectValue
fileExtension
preferredFileExtensionForType:
compare:options:
systemPhotoLibrary
assetURLForPhoto:extension:
numberWithInt:
timeIntervalSinceReferenceDate
stopProgressTimer
setProgress:
animateWithDuration:delay:options:animations:completion:
showLoadingIndicator
startProgressTimer
setImageEdgeInsets:
_retryDownload
resetProgress
retryDownload
convertPoint:fromView:
statusBarOrientation
defaultHeightForBarSize:
fadeOutSoonIfNeededAndRemoveFromSuperview:
showLoadingIndicatorWhenReady
showErrorIndicator
updateCloudDownloadProgress:
setImageRect:
setToolbarVisible:
setRetryDelegate:
_loadingIndicatorView
_loadingContainerView
_loadingErrorButton
_indicatorIsVisible
_showingError
_showingLoading
_imageRect
_toolbarVisible
_lastViewPhaseChangeDate
setClipsToBounds:
initWithActivityIndicatorStyle:
startAnimating
boldSystemFontOfSize:
_loadingLabel
willMoveToSuperview:
_viewWillMoveToSuperView:
initWithFrame:photoTileController:
clearBackReference
canBecomeFirstResponder
_photoTileController
_updateContentInset
_centerImageInScrollView
isCloudPlaceholder
complete
isTimelapsePlaceholder
masterThumbnailResource
orientedWidth
orientedHeight
screens
_handleSingleTap:
initWithTarget:action:
_handleDoubleTap:
setNumberOfTapsRequired:
_setPhoto:
setTileFrame:
_setImage:isThumbnail:preserveFrame:
_configureViews
initWithModelPhoto:image:frame:isThumbnail:imageOrientation:allowZoomToFill:mode:
setDeliveryMode:
defaultManager
synchronousImageForAsset:targetSize:contentMode:options:
cancelFullSizeImageRequest
removeTarget:action:
removeAllGestureRecognizers
_teardownDispatchTimer
isViewLoaded
windows
_updateVideoViewForModelPhoto
isAudio
isStreamedVideo
setImageTile:
initWithFrame:videoCameraImage:orientation:
setAllowSlalomEditor:
setPosterFrameImage:
setScrubberIsSubview:
viewWillAppear:
videoOverlayPlayButton
_updatePlaceholderImageRect
requireGestureRecognizerToFail:
addGestureRecognizer:
removeFailureRequirement:
removeGestureRecognizer:
setZoomingGesturesEnabled:
previewImageView
viewDidDisappear
photoTileViewControllerCustomCenterOverlay:
_setCustomCenterOverlay:
photoTileViewControllerCanShowCenterOverlay:
isPlaying
_customCenterOverlay
setShowsPlayOverlay:
_updateSubviewOrdering
setNeedsUpdateConstraints
ensureFullSizeImageLoaded
defaultZoomScale
photoTileViewControllerAllowsEditing:
isUserInteractionEnabled
mediaType
isMediaSubtype:
representsBurst
_showBadgeViewIfAppropriate
setBadgeVisible:animated:
_installSubview:
setContentSize:
setAlwaysBounceVertical:
setAlwaysBounceHorizontal:
setPreservesCenterDuringRotation:
setShowsHorizontalScrollIndicator:
setShowsVerticalScrollIndicator:
setBouncesZoom:
setContentInsetAdjustmentBehavior:
_updatePlaceholderViewAnimated:
shouldShowPlaceholderForAsset:
_removePlaceholderView
_requestFullSizeImage
contentSize
contentInset
_clientIsWallpaper
setContentInset:
overlayInsets
shouldHideProgressIndicator
isDragging
_updatePlaceholderVisibility
photoShouldHaveHDRBadge
_setupBadgeView
photoShouldHaveAvalancheBadge
_updateReviewCheckmark
pixelWidth
pixelHeight
_updateModelPhotoWithImage:
setBounds:
updateZoomScales
_setDefaultZoomScale
cachingImageManager
cancelImageRequest:
isTVOut
setView:
viewDidDisappear:
tileIsOnScreen
photoTileViewController:didDisappear:
setBadgeVisible:
viewForZoomingInScrollView:
allowsEditing
photoTileViewControllerWillBeginGesture:
photoTileViewControllerDidEndGesture:
_performDidEndZoomBlock
_repositionBadgeView
visibleBounds
viewWillTransitionToSize:withTransitionCoordinator:
shouldSupressViewWillTransitionToSize
targetTransform
updateScaleMode
animateAlongsideTransition:completion:
transitionDuration
_performRotationUpdatesWithDuration:size:
minRotatedScale
_calculateZoomScale:inView:
updateForRotationWithDuration:isLandscape:
reloadZoomScale
viewDidLayoutSubviews
_resetZoomCommon
viewSafeAreaInsetsDidChange
didMoveToParentViewController:
updateViewConstraints
addConstraints:
isPhotoTileParentPageControllerAnimating:
photoTileViewController:willAppear:
viewDidAppear:
viewDidAppear
photoTileViewController:didAppear:
uuid
applicationWillResignActive:
applicationDidBecomeActive:
photoTileViewControllerRequestsFullScreenImage:
photoTileViewControllerSingleTap:
setLoadingMode:
setNetworkAccessAllowed:
_handleFullSizeImageRequestResult:dataUTI:orientation:
requestImageDataAndOrientationForAsset:options:resultHandler:
typeWithIdentifier:
conformsToType:
photoTileViewControllerRequestsFullSizeImage:
handleDoubleTap
setZoomScale:animated:
locationInView:
zoomToRect:animated:
photoTileViewControllerDoubleTap:
_newCGImageBackedUIImageFromImage:
force1XCroppedImage
forceNativeScreenScale
_getFullScreenImageData:forImage:fullSize:imageView:screenScaleTransform:
_newImageForAsset:targetSize:cropRect:fullSize:
setSynchronous:
setNormalizedCropRect:
setResizeMode:
requestImageForAsset:targetSize:contentMode:options:resultHandler:
newImageWithCropRect:minimalCropDimension:croppedImageData:fullScreenImageData:imageCropRect:intersectCropWithFullRect:
_setDidEndZoomingBlock:
keyWindow
statusBarStyle
statusBarFrame
zoomToFillScale
minZoomScale
photoTileViewControllerIsDisplayingLandscape:
viewIfLoaded
maxZoomScaleOverride
doubleValue
isCloudSharedAsset
cloudPlaceholderKind
setMaximumZoomScale:
setMinimumZoomScale:
_adjustScrollViewContentOffsetForInsets
isZoomedOut
_adjustZoomForEnteringMode:
setHighlightedImage:
setReviewing:animated:
_setupReviewCheckmark
setHighlighted:
tileSize
tvOutTileSize
newPhotoTileViewControllerWithFrame:imageRef:imageOrientation:allowZoomToFill:mode:
newPhotoTileViewControllerWithFrame:image:allowZoomToFill:mode:
newPhotoTileViewControllerWithFrame:modelPhoto:mode:
_shouldForwardViewWillTransitionToSize
scrollViewDidScroll:
scrollViewDidZoom:
scrollViewWillBeginDragging:
scrollViewWillEndDragging:withVelocity:targetContentOffset:
scrollViewDidEndDragging:willDecelerate:
scrollViewWillBeginDecelerating:
scrollViewDidEndDecelerating:
scrollViewDidEndScrollingAnimation:
scrollViewWillBeginZooming:withView:
scrollViewDidEndZooming:withView:atScale:
scrollViewShouldScrollToTop:
scrollViewDidScrollToTop:
scrollViewDidChangeAdjustedContentInset:
gestureRecognizerShouldBegin:
gestureRecognizer:shouldRecognizeSimultaneouslyWithGestureRecognizer:
gestureRecognizer:shouldRequireFailureOfGestureRecognizer:
gestureRecognizer:shouldBeRequiredToFailByGestureRecognizer:
gestureRecognizer:shouldReceiveTouch:
gestureRecognizer:shouldReceivePress:
gestureRecognizer:shouldReceiveEvent:
setOverlayInsets:
initForPageController
initWithModelPhoto:thumbnailImage:size:
_canShowWhileLocked
thumbnailImage
setThumbnailImage:
tileFrame
setCropOverlayRect:forCropRect:
forceZoomingGesturesEnabled
expandableImageView
updateCenterOverlay
hideContentView
showContentView
tileDelegate
setTileDelegate:
setTVOut:
userDidAdjustWallpaper
setClientIsWallpaper:
gesturesEnabled
setGesturesEnabled:
setAvalancheBadgesHidden:
installVideoOverlay:
setShouldHideProgressIndicator:
refreshTileWithFullScreenImage:modelPhoto:
didLoadImage
showErrorPlaceholderView
setFullSizeImage:
hasFullSizeImage
loadView
updateForVisibleOverlays:
noteParentViewControllerDidDisappear
scrollView:contentSizeForZoomScale:withProposedSize:
shouldAutorotateToInterfaceOrientation:
resetZoom
zoomToScale:animated:completionBlock:
zoomToFitScale
currentToMinZoomRatio
currentToDefaultZoomRatio
setOrientationDelegate:
setAllowsZoomToFill:
updateAfterCollapse
setLockedUnderCropOverlay:
setReviewing:
setPicked:
centerContentVertically
setCenterContentVertically:
setUnscaledImage:
setForceNativeScreenScale:
setForce1XCroppedImage:
inflightFullSizeImageRequestID
setInflightFullSizeImageRequestID:
setMaxZoomScaleOverride:
wantsCompactLayout
setWantsCompactLayout:
reviewing
picked
setShouldSupressViewWillTransitionToSize:
_image
_pendingImage
_unscaledImage
_modelPhoto
_scrollView
_gradientView
_reviewCheckmarkImageView
_currentTileDownloadFinished
_singleTapGestureRecognizer
_doubleTapGestureRecognizer
_tileDelegate
_imageSize
_tileFrame
_zoomToFillInsteadOfToFit
_useLessThanMinZoomForZoomedOutTest
_allowZoomToFill
_orientationDelegate
_cropRectZoomScale
_cropOverlayRect
_doubleTapZoomScale
_minZoomScale
_zoomToFillScale
_clientIsTemporarilyWallpaper
_userDidAdjustWallpaper
_wallpaperPortraitZoomScale
_wallpaperLandscapeZoomScale
_zoomScaleBeforeZooming
_cropRectBeforeDragging
_force1XCroppedImage
_forceNativeScreenScale
_centerContentVertically
_didEndZoomingBlock
_dispatchTimer
_dispatchStartTime
_dispatchTimeElapsed
_hasNotedZoom
_imageIsThumbnail
_isTVOut
_zooming
_autoZooming
_zoomGesturesEnabled
_userDidZoom
_ignoreZoomChange
_tileParentIsPageController
_lockedUnderCropOverlay
_viewDidAppear
_viewWillAppear
_didRequestFullSizeImage
_useZoomScaleForCropRect
_avalancheBadgeShouldBeHidden
_badgeShouldBeVisible
_containerView
__cachingImageManager
_fullSizeImageRequestID
_customCenterOverlayConstraints
_shouldUpdateBadgeViewOptimalLayout
_badgeViewOptimalLayoutLowestTop
_isLoadingFullSizeImage
_wantsCompactLayout
_reviewing
_picked
_shouldHideProgressIndicator
_shouldSupressViewWillTransitionToSize
_inflightFullSizeImageRequestID
_maxZoomScaleOverride
__customCenterOverlay
_overlayInsets
T@"UIView",&,N,S_setCustomCenterOverlay:,V__customCenterOverlay
T@"PHAsset",R,N
Ti,N,V_inflightFullSizeImageRequestID
T@"UIImage",&,N
T@"UIImage",&,N,V_unscaledImage
TB,N,V_centerContentVertically
T{UIEdgeInsets=dddd},N,V_overlayInsets
TB,N,V_forceNativeScreenScale
TB,N,V_force1XCroppedImage
T@"NSNumber",&,N,V_maxZoomScaleOverride
TB,N,V_wantsCompactLayout
TB,N,V_reviewing
TB,N,V_picked
TB,N,V_shouldHideProgressIndicator
TB,N,V_shouldSupressViewWillTransitionToSize
localAvailability
_stopObservingReachabilityChanges
systemLibraryURL
sharedStreamsExplictlyDisabledForPhotoLibraryURL:
registerDefaults:
_setRotationDisabledDuringTouch:
_applicationWillEnterForeground:
_applicationDidEnterBackground:
_applicationDidBecomeActive:
reloadPhotoDefaultValues
_registerForPhotoStreamActivityNotifications
prepareForApplicationWillEnterForeground
applicationIsInForeground:photoLibraryURL:
clientApplicationWillEnterForeground
setReceivingRemoteControlEvents:
setStatusBarShowsProgress:
_updateSuspensionSettings
_unregisterForPhotoStreamActivityNotifications
userDidLeavePhotosApplication
prepareForApplicationDidEnterBackground
_displayAndRemovePhoneInvitationFailures
prepareForApplicationDidBecomeActive
shouldMakeUIForDefaultPNG
updateSuspendedSettings:
initWithBool:
dictionaryWithObjectsAndKeys:
postNotificationName:object:userInfo:
sharedNetworkObserver
_networkReachabilityDidChange:
addObserver:selector:forHostname:
removeObserver:forHostname:
_startObservingReachabilityChanges
registerIdleStateChangeObserverWithToken:handler:
unregisterIdleStateChangeObserverWithToken:
applicationDidFinishLaunching:
application:willFinishLaunchingWithOptions:
application:didFinishLaunchingWithOptions:
application:handleOpenURL:
application:openURL:sourceApplication:annotation:
application:openURL:options:
applicationDidReceiveMemoryWarning:
applicationWillTerminate:
applicationSignificantTimeChange:
application:willChangeStatusBarOrientation:duration:
application:didChangeStatusBarOrientation:
application:willChangeStatusBarFrame:
application:didChangeStatusBarFrame:
application:didRegisterUserNotificationSettings:
application:didRegisterForRemoteNotificationsWithDeviceToken:
application:didFailToRegisterForRemoteNotificationsWithError:
application:didReceiveRemoteNotification:
application:didReceiveLocalNotification:
application:handleActionWithIdentifier:forLocalNotification:completionHandler:
application:handleActionWithIdentifier:forRemoteNotification:withResponseInfo:completionHandler:
application:handleActionWithIdentifier:forRemoteNotification:completionHandler:
application:handleActionWithIdentifier:forLocalNotification:withResponseInfo:completionHandler:
application:didReceiveRemoteNotification:fetchCompletionHandler:
application:performFetchWithCompletionHandler:
application:performActionForShortcutItem:completionHandler:
application:handleEventsForBackgroundURLSession:completionHandler:
application:handleWatchKitExtensionRequest:reply:
applicationShouldRequestHealthAuthorization:
application:handlerForIntent:
application:handleIntent:completionHandler:
applicationDidEnterBackground:
applicationWillEnterForeground:
applicationProtectedDataWillBecomeUnavailable:
applicationProtectedDataDidBecomeAvailable:
application:supportedInterfaceOrientationsForWindow:
application:shouldAllowExtensionPointIdentifier:
application:viewControllerWithRestorationIdentifierPath:coder:
application:shouldSaveSecureApplicationState:
application:shouldRestoreSecureApplicationState:
application:willEncodeRestorableStateWithCoder:
application:didDecodeRestorableStateWithCoder:
application:shouldSaveApplicationState:
application:shouldRestoreApplicationState:
application:willContinueUserActivityWithType:
application:continueUserActivity:restorationHandler:
application:didFailToContinueUserActivityWithType:error:
application:didUpdateUserActivity:
application:userDidAcceptCloudKitShareWithMetadata:
application:configurationForConnectingSceneSession:options:
application:didDiscardSceneSessions:
applicationShouldAutomaticallyLocalizeKeyCommands:
setWindow:
T@"UIWindow",&,N
useCompatibleSuspensionAnimation
photosPreferencesChanged
enableNetworkObservation
disableNetworkObservation
handleImportCompleteAlertResponse:flags:
isReachable
isOnWifi
currentTestName
setCurrentTestName:
currentTestOptions
setCurrentTestOptions:
notificationSuppressionContexts
setNotificationSuppressionContexts:
_receivingRemoteControlEvents
_observeForRechabilityChanges
_isReachable
_isOnWifi
_photoStreamActivityToken
_sharedPhotoStreamActivityToken
_sharedPhotoStreamInvitationFailureToken
_currentTestName
_currentTestOptions
_notificationSuppressionContexts
TB,R,N,V_isReachable
TB,R,N,V_isOnWifi
T@"NSString",&,N,V_currentTestName
T@"NSDictionary",&,N,V_currentTestOptions
T@"NSSet",C,N,V_notificationSuppressionContexts
px_deprecated_appPhotoLibrary
handlePossibleCoreDataError:
mainBundle
pathForResource:ofType:
initWithContentsOfFile:
valueForKey:
valueForKeyPath:
_reloadPhotoDefaultValuesAndNotify:
numberWithBool:
randomTransition
summarizeMomentSections
transitionForAnimationMovingForward:
transition
setTransition:
shouldPlayMusic
setShouldPlayMusic:
setMusicCollection:
musicCollection
_shouldPlayMusic
_summarizeMomentSections
_transition
_musicCollection
bezierPathWithRoundedRect:byRoundingCorners:cornerRadii:
resizableImageWithCapInsets:
initWithImage:
_setBackdropMaskViewFlags:
contentView
setNeedsDisplay
stopAnimating
_flatImageWithColor:
defaultSizeForStyle:
_activityIndicatorView
_label
_checkmarkView
_isShowing
connectedScenes
activationState
isKeyWindow
T@"UIWindow",R,N
backgroundView
_installBackgroundView
_syncToBackgroundType
showsCancelButton
isHidden
initWithProgressViewStyle:
setPercentComplete:
backgroundType
_removeBackgroundTintedView
_removeBackgroundBlurredView
_installBackgroundBlurredView
_installBackgroundTintedView
setBackgroundView:
backgroundBlurredView
setBackgroundBlurredView:
backgroundTintedView
setBackgroundTintedView:
isRemaking
remakingPercentComplete
progressViewMessageDuringRemake
setLabelText:
snapshot
estimatedTimeRemaining
percentComplete
currentLocale
setLocale:
setGeneratesDecimalNumbers:
setNumberStyle:
serviceName
setProgress:animated:
progress
setCancelationHandler:
_cancel:
setBackgroundType:
updateUIForPublishingAgent:
setShowsCancelButton:
cancelationHandler
_labelView
_progressView
_topDivider
_didLayout
_didSetPermanantTextOnLabelView
_progressFormatter
_backgroundType
_backgroundView
_backgroundTintedView
_backgroundBlurredView
_showsCancelButton
_cancelationHandler
Tq,N,V_backgroundType
T@"UIView",&,N,V_backgroundView
T@"UIView",&,N,V_backgroundTintedView
T@"_UIBackdropView",&,N,V_backgroundBlurredView
TB,N,V_showsCancelButton
T@?,C,N,V_cancelationHandler
selectedOption
allowsHDOver3GUpload
setEnableHDUpload:
setUserInfo:
_startNetworkObservation
_setUpPublishingParams
_cancelRemaking:
stringByAppendingString:
stringByResolvingSymlinksInPath
stringByAppendingPathComponent:
bundleWithPath:
principalClass
initWithMedia:
sharedConnection
effectiveBoolValueForSetting:
isHDVideo
setMediaPath:
setDeleteMediaFileAfterPublishing:
setMediaIsHDVideo:
canUploadHDVideoOverCellular
setAllowsHDOver3GUpload:
_setApproximateVideoUploadSizes
getSDRemakerModeForMode:
approximateByteSizeForMode:duration:
setApproximateSDUploadSize:
getHDRemakerModeForMode:
setApproximateHDUploadSize:
publishingAgentCancelButtonClicked:
publishingAgentDoneButtonClicked:
_remakerModeForSelectedOption
defaultDurationForTransition:
isVideoMedia
_agentIsReadyToPublish:
_transcodeVideo:
publish
publishingAgentDidBeginPublishing:
navigationController
publishingAgentWillBeDisplayed:
presentViewController:animated:completion:
_stopNetworkObservation
presentingViewController
dismissViewControllerAnimated:completion:
mediaTitle
removeObjectAtIndex:
initWithDouble:
initWithLongLong:
_updateStatisticsFromSnapshots
longLongValue
cancel
initWithPublishingMedia:
setMode:
setTrimStartTime:
setTrimEndTime:
remake
publishingAgentDidStartRemaking:
publishingAgentDidEndRemaking:didSucceed:
_remakerDidFinish:
messageForRemakingProgress
allowsViewingOnHost
mediaURL
URLWithString:
defaultWorkspace
openSensitiveURL:withOptions:
allowsTellingFriend
tellAFriendBody
tellAFriendURL
tellAFriendSubject
URLFragmentAllowedCharacterSet
stringByAddingPercentEncodingWithAllowedCharacters:
publishingAgentForBundleNamed:toPublishMedia:
allowsCellularAccessForRequests
mediaPath
deleteMediaFileAfterPublishing
mediaData
setMediaData:
isPublishing
setPublishing:
setRemakerMode:
setTrimStartTime:andEndTime:
resignPublishingSheetResponders
cancelButtonClicked
doneButtonClicked
presentModalSheetInViewController:
willDismiss
maximumVideoDuration
setTotalBytesWritten:totalBytes:
cancelRemaking
videoRemakerDidBeginRemaking:
videoRemakerDidEndRemaking:temporaryPath:
videoRemaker:progressDidChange:
showAlertWithError:
ownerIsCamera
setOwnerIsCamera:
approximateHDUploadSize
approximateSDUploadSize
mediaIsHDVideo
enableHDUpload
needsTrimming
setNeedsTrimming:
remakerMode
setSelectedOption:
progressMultiplier
setProgressMultiplier:
shouldCancelPublish
setShouldCancelPublish:
_userInfo
_mediaPath
_mediaData
_mimeType
_deleteAfterPublishing
_changeRate
_currentValue
_estimatedTimeRemaining
_maxValue
_normalizedCurrentValue
_normalizedMaxValue
_percentComplete
_remakingPercentComplete
_progressMultiplier
_snapshotTimes
_snapshotValues
_ownerIsCamera
_needsRemaking
_startTime
_endTime
_approximateHDUploadSize
_approximateSDUploadSize
_mediaIsHDVideo
_enableHDUpload
_needsTrimming
_allowsHDOver3GUpload
_selectedOption
_remaker
_remakerMode
_completionSelector
_remakingWasCancelled
_remaking
_publishing
_shouldCancelPublish
T@"<PLPublishingAgentDelegate>",N,V_delegate
TB,N,V_ownerIsCamera
Tq,N,V_approximateHDUploadSize
Tq,N,V_approximateSDUploadSize
TB,N,V_mediaIsHDVideo
TB,N,V_enableHDUpload
TB,N,V_needsTrimming
Ti,N,V_remakerMode
Ti,N,V_selectedOption
Tf,N,V_progressMultiplier
TB,N,V_allowsHDOver3GUpload
TB,N,V_shouldCancelPublish
localizedCaseInsensitiveCompare:
compare:
title
_title
T@"NSString",&,N,V_title
initWithAsset:
isValidPublishingMedia:
assetWithURL:
initWithManagedAsset:
initWithAVURLAsset:
setAsset:
durationForManagedAsset:applyVideoAdjustments:
setIsVideo:
setPathForVideoFile:
assetURL
setAssetURL:
setIsHDVideo:
setDuration:
pathExtension
typeWithFilenameExtension:
path
tracksWithMediaType:
naturalSize
_isVideo
_isHDVideo
_pathForVideoFile
_assetURL
_duration
T@,&,N,V_asset
TB,N,V_isVideo
T@"NSString",&,N,V_pathForVideoFile
T@"NSURL",&,N,V_assetURL
TB,N,V_isHDVideo
Td,N,V_duration
_updateSubviews
invalidate
_setContentsScale:
_updateSublayersContentsScale
_contentsScale
_progressArcLayer
_setContentView:
traitCollection
userInterfaceStyle
labelColor
manualColor
getRed:green:blue:alpha:
colorWithAlphaComponent:
setPieRadius:
skipResetOnRelayout
_sliceLayer
_setSliceLayer:
setZPosition:
setStrokeColor:
_circleLayer
_setCircleLayer:
setLineWidth:
_setProgressArcLayer:
setPosition:
setRadius:
_irisGlyphLayer
_setIrisGlyphLayer:
_updateUIProgress
increaseUIProgress:
scheduledTimerWithTimeInterval:repeats:block:
allowFake25PercentProgress
toRadian:
setStartAngle:
setEndAngle:
date
timeIntervalSinceDate:
recalculateIncreaseProgress:withTimeDiff:
traitCollectionDidChange:
hasDifferentColorAppearanceComparedToTraitCollection:
setInitialIncreaseRatePerFrame:
setManualColor:
setAllowFake25PercentProgress:
setSkipResetOnRelayout:
_pieCenter
_pieRadius
_progressTimer
_uiProgress
_realProgress
_increaseRate
_prevUpdateTime
_allowFake25PercentProgress
_skipResetOnRelayout
_manualColor
_progress
__contentView
__sliceLayer
__circleLayer
__progressArcLayer
__irisGlyphLayer
__contentsScale
T@"UIView",&,N,S_setContentView:,V__contentView
T@"CAShapeLayer",&,N,S_setSliceLayer:,V__sliceLayer
T@"CAShapeLayer",&,N,S_setCircleLayer:,V__circleLayer
T@"PLProgressArcLayer",&,N,S_setProgressArcLayer:,V__progressArcLayer
T@"CALayer",&,N,S_setIrisGlyphLayer:,V__irisGlyphLayer
Td,N,S_setContentsScale:,V__contentsScale
Tq,R,N,V_style
T@"UIColor",&,N,V_manualColor
TB,N,V_allowFake25PercentProgress
TB,N,V_skipResetOnRelayout
Td,N,V_progress
setNeedsDisplayOnBoundsChange:
radius
lineWidth
startAngle
endAngle
drawInContext:
_radius
_startAngle
_endAngle
_lineWidth
Td,N,V_radius
Td,N,V_startAngle
Td,N,V_endAngle
Td,N,V_lineWidth
_handleImage
_handleTintColor
setTintColor:
_updateTrack
_trackFrame
startHandleFrame
endHandleFrame
setMaxValue:
setStartValue:
setMinValue:
setEndValue:
setStartValue:notify:
setEndValue:notify:
slalomRegionEditorStartValueChanged:
slalomRegionEditorEndValueChanged:
_zoomMinValue
_zoomMaxValue
_handleFrameForValue:isStart:
_valueFromHandleFrame:isStart:
_trackFrameNoZoom
_isZoomed
_trackScale
_trimHandleWidth
isEnabled
_isTouch:inHandleIsStart:outTouchOffset:
_beginTrackingZoomWithTouch:
slalomRegionEditorDidBeginEditing:withStartHandle:
sendActionsForControlEvents:
_updateSlidersWithTouch:
_cancelZoomTrackingIfNeccessaryWithTouch:
_stopTrackingAndSendControlEvents:
slalomRegionEditorDidEndEditing:
_cancelTrackingZoom
_cancelZoom
isZoomAnimating
_valueFromStartHandleFrame:
_valueFromEndHandleFrame:
_zoomPressWasHeld
slalomRegionEditorRequestForceZoom:
slalomRegionEditorRequestForceUnzoom:
numberOfTouchesRequired
direction
minimumNumberOfTouches
translationInView:
_trackImageForZoom:
_trackColor
setFill
_tickColor
setStroke
regionEditorStyle
imageWithRenderingMode:
intrinsicContentSize
setTrackInsets:
setZoomMinValue:maxValue:
setZoomAnimating:
setRegionEditorStyle:
beginTrackingWithTouch:withEvent:
continueTrackingWithTouch:withEvent:
endTrackingWithTouch:withEvent:
cancelTrackingWithEvent:
_drawCurveWithFlatEndsFromX:fromY:toX:toY:
trackInsets
trimHandleWidth
setTrimHandleWidth:
minValue
maxValue
startValue
endValue
zoomDelay
setZoomDelay:
_startHandleView
_endHandleView
_trackImageView
_trackSnapshotView
_draggingStart
_draggingEnd
_touchOffset
_zoomed
_trackingZoom
_touchLocationWhenTrackingZoomBegan
_forceLayout
_zoomAnimating
_regionEditorStyle
_minValue
_startValue
_endValue
_zoomDelay
_trackInsets
T@"<PLSlalomRegionEditorDelegate>",N,V_delegate
T{UIEdgeInsets=dddd},N,V_trackInsets
Td,N,V_trimHandleWidth
TQ,N,V_regionEditorStyle
Td,N,V_minValue
Td,N,V_maxValue
Td,N,V_startValue
Td,N,V_endValue
Td,N,V_zoomDelay
zoomAnimating
TB,N,GisZoomAnimating,SsetZoomAnimating:,V_zoomAnimating
_setupTargetScreen:
setScreen:
setOverscanCompensation:
preferredMode
availableModes
setCurrentMode:
flushCache
jpegImageSize
_jpegImageSize
T{CGSize=dd},R,N,V_jpegImageSize
initWithPhoto:
setAllowsEditing:
editImageViewController:didEditImageWithOptions:
editImageViewControllerDidCancel:
cropOverlayMode
setImageSavingOptions:
saveOptions
_contentAutoresizingMask
_tileAutoresizingMask
imageFormat
imageTile
_saveOptions
T@,N,V_delegate
Ti,N,V_mode
setDefaultValues
setAllowImageRequests:
setAllowCaching:
rowWithTitle:valueKeyPath:
allowImageRequests
allowCaching
_allowImageRequests
_allowCaching
TB,N,V_allowImageRequests
TB,N,V_allowCaching
disableViewInPopoverRule
setDisableViewInPopoverRule:
_disableViewInPopoverRule
TB,N,V_disableViewInPopoverRule
setExtendedLayoutIncludesOpaqueBars:
navigationItem
_editingForThirdParty
_cancelTrim:
setLeftBarButtonItem:
_trimVideo:
setRightBarButtonItem:
_setupNavigationItemAndTrimTitle:
setParentInPopoverException:
initWithVideoURL:
setImagePickerOptions:
initWithTitle:
parentInPopoverException
viewDidLoad
navigationBar
standardAppearance
setScrollEdgeAppearance:
toolbar
dictionaryWithDictionary:
editVideoViewController:didTrimVideoWithOptions:
dictionaryWithObject:forKey:
editVideoViewControllerDidCancel:
editVideoViewController:didFailWithError:
errorWithDomain:code:userInfo:
imagePickerController:didFinishPickingImage:editingInfo:
imagePickerController:didFinishPickingMediaWithInfo:
imagePickerControllerDidCancel:
navigationController:willShowViewController:animated:
navigationController:didShowViewController:animated:
navigationControllerSupportedInterfaceOrientations:
navigationControllerPreferredInterfaceOrientationForPresentation:
navigationController:interactionControllerForAnimationController:
navigationController:animationControllerForOperation:fromViewController:toViewController:
_displaysFullScreen
initWithPhoto:trimTitle:
initWithProperties:
initWithVideoURL:trimTitle:
_trimMessage
_viewClass
setViewClass:
didChooseVideoAtURL:options:
previewFrame
videoViewScrubberYOrigin:forOrientation:
videoViewCanCreateMetadata:
videoViewPlaybackDidFail:
_options
_imagePicker
_navItem
_canCreateMetadata
_parentInPopoverException
TB,N,V_parentInPopoverException
wantsAutoloopUI
localizedTitle
chooseButtonTitle
localizedUseButtonTitle
initWithTitle:style:target:action:
cancelButtonTitle
setPreferredContentSize:
customBackgroundColor
setupNavigationItem
isFileURL
videoViewForVideoFileAtURL:
photoFromAssetURL:photoLibrary:
setEdgesForExtendedLayout:
setLoadMediaImmediately:
viewImageBeforeSelecting
setCanEdit:
clientIsWallpaper
wantsLegacyImageUI
addChildViewController:
_updateGestureSettings
viewWillLayoutSubviews
wantsStatusBarVisible
desiredStatusBarAnimation
isDisplayedInPhotoPicker
imagePickerAllowsEditing
_editabilityChanged:
setNavigationBarHidden:
setBarStyle:
setShowsScrubber:
setNeedsStatusBarAppearanceUpdate
viewWillDisappear:
scrubberBackgroundView
isNavigationBarHidden
existingPaletteForEdge:
_viewFrame
paletteForEdge:size:
attachPalette:isPinned:
setScrollEnabled:
viewControllers
indexOfObjectIdenticalTo:
popViewControllerAnimated:
_imagePickerDidCancel
_enableCropOverlay
handleAutoloopSelected
_handleVideoSelected
imagePickerSavingOptions
handleMediaSelectionUsingTile:managedAsset:args:includeEditing:
_enableCropOverlayIfNecessary
videoCameraImage
startTime
endTime
doNotTranscode
isEditing
mainFileURL
handleVideoSelectionWithURL:args:
initWithManagedAsset:applyVideoAdjustments:
initWithAVAsset:
exportPreset
videoQuality
setExportPresetOverride:
hideTrimMessage
progressView
attachScrubberPalette
safeAreaLayoutGuide
layoutFrame
videoMaximumDuration
disableVideoTrimMessage
setMaximumTrimLength:
setEditing:
showTrimMessage:withBottomY:
setDelaySuspend:
photoTileViewControllerCancelImageRequests:
videoViewDidCreateAttachments:
videoViewScrubberWidth:
videoViewCanBeginPlayback:
videoViewIsReadyToBeginPlayback:
videoViewDidBeginPlayback:
videoViewDidPausePlayback:
videoViewDidEndPlayback:didFinish:
videoViewDidBeginScrubbing:
videoViewDidEndScrubbing:
videoViewDidBeginRemaking:
videoViewDidEndRemaking:didSucceed:
videoView:remakingProgressDidChange:
videoViewWillBeginEditing:
videoViewDidBeginEditing:
videoViewDidCancelEditing:
videoView:displayPlayOverlay:
videoViewShouldRespondToPlayOverlayTap:
videoViewRequestsPickedAirplayRoute:
photoTileViewControllerTopLayoutGuide:
cropOverlayWasToggled:
initWithImage:cropRect:
initWithUIImage:cropRect:
initWithImageData:cropRect:
cropOverlay
setCropOverlayDone
prefersStatusBarHidden
preferredStatusBarUpdateAnimation
_imagePickerStatusBarStyle
_removedAsTopViewController
beginDisplayingProgress
videoView:scrubberWasCreated:slalomRegionEditor:
videoViewDidPausePlayback:didFinish:
_imageRef
_cropOverlay
_imageTile
_videoURL
_previousStatusBarStyle
_newStatusBarStyle
_allowEditing
_statusBarWasHidden
_isDisappearing
T@"NSString",R,N
initWithStyle:
pl_videoOverlayButtonWithStyle:
pl_videoOverlayButtonSize
_playButtonTapped:
_playButtonActivate:
_playButtonDeactivate:
setDeliversTouchesForGesturesToSuperview:
updateMaskViewsForView:
setTarget:action:
_button
_overlayPlayBackground
_target
_action
_normalButtonImage
_highlightedButtonImage
_handleTap:
_createOverlayImageWithBackgroundWhite:backgroundAlpha:glyphAlpha:
drawAtPoint:blendMode:alpha:
fileLengthLimitForRemakerMode:
numberWithLongLong:
maximumDurationForPreset:properties:
estimatedOutputFileLengthForPreset:duration:properties:
initWithVideoAsset:videoAdjustments:
videoAVObjectBuilderForManagedAsset:applyVideoAdjustments:
requestAVAssetWithResultHandler:
exportPresetOverride
scheduledTimerWithTimeInterval:target:selector:userInfo:repeats:
videoAsset
metadata
addAccessibilityDescription:toAVMetadata:
shouldExportToPhotoDataDirectory
tmpFileForVideoTranscodeToPhotoDataDirectory:withExtension:
fileExistsAtPath:
removeItemAtPath:error:
requestExportSessionWithExportPreset:resultHandler:
setFileLengthLimit:
_fileFormatForURL:
setOutputFileType:
setOutputURL:
_metadata
setMetadata:
setTimeRange:
markPurgeableForFileAtURL:withUrgency:outInode:
_exportCompletedWithSuccess:
exportAsynchronouslyWithCompletionHandler:
_resetProgressTimer
lowercaseString
containsObject:
cancelExport
_removeProgressTimer
_didEndRemakingWithTemporaryPath:
maximumDurationForTrimMode:
progressHandler
setProgressHandler:
setShouldExportToPhotoDataDirectory:
trimStartTime
trimEndTime
customAccessibilityLabel
setCustomAccessibilityLabel:
_videoAVObjectBuilder
_trimmedPath
_trimStartTime
_trimEndTime
_exportSession
_shouldExportToPhotoDataDirectory
_progressHandler
_exportPresetOverride
_customAccessibilityLabel
__videoAVObjectBuilder
T@"PFVideoAVObjectBuilder",R,&,N,V__videoAVObjectBuilder
T@"NSObject<PLVideoRemakerDelegate>",W,N,V_delegate
T@?,C,N,V_progressHandler
TB,N,V_shouldExportToPhotoDataDirectory
T@"NSString",C,N,V_exportPresetOverride
Td,N,V_trimStartTime
Td,N,V_trimEndTime
T@"NSString",C,N,V_customAccessibilityLabel
setImageGenerator:
imageGenerator
cancelAllCGImageGeneration
inUse
setInUse:
_inUse
_imageGenerator
T@"AVAssetImageGenerator",&,N,V_imageGenerator
TB,N,V_inUse
imageFrame
_initWithFrame:videoCameraImage:orientation:
_canAccessVideo
raise:format:
pathToOriginalVideoFile
cachedNonPersistedVideoPlaybackURL
setCachedNonPersistedVideoPlaybackURL:
setCachedNonPersistedVideoPlaybackURLExpiration:
setCachedNonPersistedVideoPlaybackURLError:
_commitPendingAdjustmentsUpdateAndWait:completionHandler:
_tearDownMoviePlayer
setTrimProgressStack:
_enqueueOverlayPlayButton:
setDataSource:
_clearImageGenerators
_cancelAirplayExportSession
_playerIsAirplay
_setupMoviePlayerIfNecessary
_didInsertMoviePlayerView
isTrimming
_scrubberAnimationFinished
touchesEnded:withEvent:
_hideTrimMessageView:
statusBarHeightForOrientation:ignoreHidden:
defaultSizeForOrientation:
_scrubberBackgroundHeight
_shouldShowSlalomEditor
canEdit
isEditable
_removeScrubber
scrubberWidth
setEditable:
setEdgeInset:
setMinimumTrimLength:
setEditing:animated:
_updateSlalomRegionEditorRange
_updateSlalomRegionEditorState
_updateForEditing
allowSlalomEditor
isMogul
videoAdjustments
isRecognizedFormat
isPhotoIrisPlaceholder
_mediaIsPlayable
_dequeueOverlayPlayButton
playButtonClicked:
removeVideoOverlay
_videoOverlayFadeOutDidFinish
_updateScaleModeForSize:
_updateScrubberFrame
_reloadScrubberThumbnailsIfNeeded
reloadData
_playbackFinished
_shouldStreamVideo
_verifyOrRestartPlayback
_displayPlaySpinner
_updateSnapshotImage
_didBeginPlayback
_removePlaySpinner
_thumbnailSourceAsset
_configureImageGenerator:thumbnailSize:forSummaryThumbnails:
_savePreviewPosterFrameImage:
generateCGImagesAsynchronouslyForTimes:completionHandler:
initWithCGImage:
_pathForVideoPreviewFile
_insertMoviePlayerViewIfNecessary
_setDuration:
currentItem
presentationSize
_requestPreviewPosterFrameForVideoSize:
_setNeedsReloadScrubberThumbnails:
_updateScrubberVisibilityWithDuration:
_updatePosterFrameVisibility
isReadyForDisplay
_prepareMoviePlayerIfNeeded
_setLocalVideoUnavailable:
setStreamingAllowed:
setVideoComplementAllowed:
setVersion:
_prepareAndResumePlayback
requestPlayerItemForVideo:options:resultHandler:
_canHandleAdjustmentData:
setCanHandleAdjustmentData:
audiovisualAsset
isPlayable
_setCanAttemptFetchingVideoDerivative:
_updateVideoAVObjectBuilderFromContentEditingInput:
_fetchNonlocalVideo
requestContentEditingInputWithOptions:completionHandler:
pl_isOnScreen:
_mediaIsCloudSharedStreamedVideo
_canPlayCloudSharedStreamedVideoWithLocalVideo
_assetForVideoURL:
_localVideoUnavailable
_fetchLocalContentEditingInput
_shouldPlayFlattenedVideo
_isFlattenedVideoUpToDate
_filePathForFlattenedVideo
_flattenVideoWithCompletionHandler:
_configurePlayerForStreamedVideoIfNecessary
requestPlayerItemWithResultHandler:
_assetForVideoPath:
playerItemWithAsset:
hasSlowMotionAdjustments
_updateScrubberForSlowMotion
initWithObjects:
formatIdentifier
formatVersion
data
initWithFormatIdentifier:formatVersion:data:baseVersion:editorBundleID:renderTypes:
adjustmentData
debugAlwaysStreamSharedVideos
streamdVideoCache
_optionsForAVURLAsset
URLAssetWithURL:options:
setExpectedAssetTypes:
value
_movieTimeFromScrubberTime:
_scrubToMovieTime:
_setMoviePlayerActive:
_setPlaybackDidBegin:
setShowsScrubber:duration:
_showVideoOverlay
_canAttemptFetchingVideoDerivative
_reset
_canAirPlayCurrentVideo
_movieScrubberDuration
movieScrubberDuration:
_scrubberStartTime
options
isEqualToArray:
landscapeScrubberThumbnailFormat
portraitScrubberThumbnailFormat
initWithImages:format:options:delegate:
_pathForPrebakedLandscapeScrubberThumbnails
_pathForPrebakedPortraitScrubberThumbnails
saveToFile:
pathForOriginalFile
pathForVideoPreviewFile
pathForPrebakedLandscapeScrubberThumbnails
pathForPrebakedPortraitScrubberThumbnails
_shouldStreamCloudPhotoLibraryVideo
isInFlight
movieScrubber:requestThumbnailImageForTimestamp:isSummaryThumbnail:
_addThumbnailRequestForTimestamp:isSummaryThumbnail:
setThumbnailImage:forTimestamp:
thumbnailsWithContentsOfFile:format:
thumbnailImageAtIndex:
_loadThumbnailsIntoDictionary:isLandscape:aspectRatio:
_updateScrubberValue
_removeScrubberUpdateTimer
playingToAirTunes
_hideVideoOverlay:
setForwardPlaybackEndTime:
trimStartValue
trimEndValue
setValue:
_invalidateSnapshotImage
_didScrubToValue:withHandle:
_serviceImageGenerationRequests
_thumbnailTimeFromScrubberTime:
CMTimeValue
valueWithCMTime:
_saveCachedThumbnailsIfNecessary
setMaximumSize:
setApertureMode:
setAppliesPreferredTrackTransform:
setRequestedTimeToleranceBefore:
setRequestedTimeToleranceAfter:
setBody:
insertSubview:above:
flush
_setPlaying:
setTrimmedVideoClip:
_informDelegateAboutProgressChange:
animateAfterEdit
stringByDeletingPathExtension
_updateTrimProgress
initWithDelegate:
trimProgressStack
updateProgress:
totalProgress:
cancelTrim
_removeTrimProgressTimer
push:
setAttributes:ofItemAtPath:error:
moveItemAtPath:toPath:error:
attributesOfItemAtPath:error:
_thumbnailsWereRegenerated:error:contextInfo:
regenerateVideoThumbnailsForVideo:withCreationDate:progressStack:completionBlock:
slowMotionTimeRange
preferredTimeScale
adjustTimeRange:forNewStartTime:endTime:
slowMotionRate
initWithSlowMotionTimeRange:rate:
_enqueueAdjustmentsForCommit
isCameraConnectionKitAsset
eventAlbumContainingPhoto:
stringByDeletingLastPathComponent
nextAvailableFilePathInDirectory:withExtension:
orientation
numberWithShort:
dateCreated
indexSheetImage
saveCameraVideoAtPath:withMetadata:thumbnailImage:createPreviewWellImage:progressStack:isSlalom:assetAdjustments:videoHandler:requestEnqueuedBlock:completionBlock:
copyCGImageAtTime:actualTime:error:
imageWithCGImage:
toggleScaleMode:
setThumbIsVisible:
_resetScrubberUpdateTimer
setColor:
cachedNonPersistedVideoPlaybackURLError
isCellularConnection
requestVideoPlaybackURLForAsset:videoType:completion:
setValue:animated:
_createScrubberIfNeeded
_updatePosterImageView
shouldPlayVideoWhenViewAppears
loadMediaImmediately
setShouldPlayVideoWhenViewAppears:
cancelPreviousPerformRequestsWithTarget:
_videoSnapshot
_mediaIsVideo
_didSetPhotoData
newFullSizeImage
_canEditDuration:
_scrubberTimeFromMovieTime:
changeDetailsForObject:
assetContentChanged
_scrubberTimeNeedsMapping
convertToOriginalTimeFromScaledTime:forExport:
convertToScaledTimeFromOriginalTime:forExport:
_handleScreenConnectionChange:
_scrubToSlalomRegionEditorStartHandle:
_didEditSlalom
_setDidEditSlalom:
_cancelDelayedCommitPendingAdjustmentsUpdate
_commitPendingAdjustmentsUpdate
adjustmentFormatIdentifier
adjustmentFormatVersion
initWithFormatIdentifier:formatVersion:data:
initWithAdjustmentBaseVersion:mediaType:
setAdjustmentData:
clearRenderedContentURL
setContentEditingOutput:
performChangesAndWait:error:
forceZoom
forceUnzoom
requestAVAssetForExport:withResultHandler:
_filePathForFlattenedVideoMetadata
_readMetadataFromPath:
_metadataForFlattenedVideo
propertyListDictionary
dictionaryWithContentsOfFile:
dataWithPropertyList:format:options:error:
writeToFile:options:error:
_pathForOriginalFile
lastPathComponent
stringByAppendingPathExtension:
fileExistsAtPath:isDirectory:
_deleteFileAtPath:
_writeMetadata:toPath:
removeItemAtURL:error:
movieScrubber:valueDidChange:
movieScrubber:editingStartValueDidChange:
movieScrubber:editingEndValueDidChange:
movieScrubberDidBeginScrubbing:withHandle:
movieScrubberDidEndScrubbing:withHandle:
movieScrubber:widthDelta:originXDelta:
movieScrubberWillBeginRequestingThumbnails:
movieScrubberDidFinishRequestingThumbnails:
movieScrubberWillBeginEditing:
movieScrubberDidBeginEditing:
movieScrubberDidCancelEditing:
movieScrubberEditingAnimationFinished:
movieScrubber:willZoomToMinimumValue:maximumValue:
movieScrubberDidBeginAnimatingZoom:
movieScrubberDidEndAnimatingZoom:
movieScrubber:evenlySpacedTimestamps:startingAt:endingAt:
movieScrubberThumbnailAspectRatio:
movieScrubber:requestThumbnailImageForTimestamp:
moviePlayerRequestsPickedAirplayRoute:
videoScrubber
slalomRegionEditor
movieScrubber:timestampsStartingAt:endingAt:maxCount:
importerFinishedProcessingTrimmedVideo:
_resetTrimProgressTimer
videoPathAfterTrim
trimmedVideoClip
newPreviewImageData:
playingToVideoOut
forceStop
commitPendingUpdatesWithCompletionHandler:
applicationWillResignActive
applicationDidEnterBackground
didMoveToSuperview
posterFrameImage
showsPlayOverlay
showsScrubber
prepareMoviePlayer
notifyRequiredResourcesDownloaded
scrubberIsSubview
notifyOfChange:shouldReloadBlock:
shouldShowCopyCalloutAtPoint:
_moviePlayer
setScrubberWidth:
posterFrameView
prepareMoviePlayerForScrubberAutomatically
setPrepareMoviePlayerForScrubberAutomatically:
set_didInsertMoviePlayerView:
_isFetchingVideo
_expectedNotificationsCount
_adjustmentsToCommit
_attemptFetchingVideoDerivative
_setAttemptFetchingVideoDerivative:
_slalomRegionEditorCreatedForScrubber
_videoCameraImage
_pathToOriginalVideo
_posterFrameView
_videoOverlayBackgroundView
_trimMessageView
_posterFrameImage
_snapshotImage
_scrubberWidth
_scrubberBackgroundView
_scrubberTitleView
_scrubberUpdateTimer
_thumbnailOptionsDict
_thumbnailSize
_bakedLandscapeThumbnails
_bakedPortraitThumbnails
_remakerStartTime
_remakerEndTime
_videoPathAfterTrim
_trimProgressTimer
_trimmedVideoClip
_trimProgressStack
_maximumTrimLength
_lastScrubbedValue
_lastActualValue
_cachedCurrentPlaybackTime
_imageGenerators
_thumbnailReqlock
_thumbnailReqQueue
_airplayExportSession
_isAirPlay
_showsPlayButton
_showsScrubber
_canEdit
_loadMediaImmediately
_scrubberIsSubview
_wasPlayingBeforeScrub
_playFromBeginning
_needsReloadScrubberThumbnails
_playing
_editing
_disableEditAfterTrim
_scrubbing
_scrubbingToRight
_deleteOriginalFile
_passthroughTrimming
_preparingMoviePlayer
_preparedMoviePlayer
_isMoviePlayerActive
_moviePlayerIsReady
_moviePlayerIsReadyForDisplay
_moviePlayerDidBuffer
_showingOverlay
_showingScrubber
_showScrubberWhenMovieIsReady
_playbackDidBegin
_loadScrubberThumbnails
_videoIsLandscape
_createPreviewPosterFrame
_isTrimming
_wasTrimmedInPlace
_remakingFailed
_summaryThumbnailRequestTimestamps
_detailThumbnailRequestTimestamps
_scrubber
_slalomRegionEditor
_cachedThumbnails
_landscapeSummaryThumbnailTimestamps
_portraitSummaryThumbnailTimestamps
_spinner
_shadowSpinner
_videoOverlayPlayButton
_useLandscapeCache
_videoStreamingStartTime
_allowSlalomEditor
_prepareMoviePlayerForScrubberAutomatically
_shouldPlayVideoWhenViewAppears
__didInsertMoviePlayerView
__didEditSlalom
__isFetchingVideo
__localVideoUnavailable
__canAttemptFetchingVideoDerivative
__attemptFetchingVideoDerivative
__slalomRegionEditorCreatedForScrubber
__expectedNotificationsCount
__adjustmentsToCommit
T@"NSString",R,&,N
TB,N,V__didInsertMoviePlayerView
TB,N,S_setDidEditSlalom:,V__didEditSlalom
T@"PFVideoAVObjectBuilder",R,N,V__videoAVObjectBuilder
TB,R,N,V__isFetchingVideo
TB,N,S_setLocalVideoUnavailable:,V__localVideoUnavailable
Tq,R,N,V__expectedNotificationsCount
T@"PFVideoAdjustments",R,N,V__adjustmentsToCommit
TB,N,S_setCanAttemptFetchingVideoDerivative:,V__canAttemptFetchingVideoDerivative
TB,N,S_setAttemptFetchingVideoDerivative:,V__attemptFetchingVideoDerivative
T@"PLProgressStack",&,N,V_trimProgressStack
TB,R,N,V__slalomRegionEditorCreatedForScrubber
T@"<PLVideoViewDelegate>",N
T@"PLPhotoTileViewController",N
T@"PLManagedAsset",R,N
T@"PLManagedAsset",&,N
TB,N,V_allowSlalomEditor
T@"UIView",R,N,V_scrubberBackgroundView
T@"UIImage",R,N
T@"PLVideoPosterFrameView",R,&,N,V_posterFrameView
editing
TB,N,GisEditing
T@"UIImageView",R,N
TB,N,V_prepareMoviePlayerForScrubberAutomatically
TB,N,V_shouldPlayVideoWhenViewAppears
Td,N,V_scrubberWidth
initWithFrame:textContainer:
setSelectable:
setTextContainerInset:
_bodyLabel
setSimulateDownload:
setSimulateDownloadFailure:
conditionFormat:
simulateDownload
simulateDownloadFailure
_simulateDownload
_simulateDownloadFailure
TB,N,V_simulateDownload
TB,N,V_simulateDownloadFailure
_setupBackdropView
_updateContentEdgeInsets
setContentEdgeInsets:
setContentCompressionResistancePriority:forAxis:
setContentHuggingPriority:forAxis:
setAppliesOutputSettingsAnimationDuration:
inputSettings
outputSettings
restoreDefaultValues
isHighlighted
computeOutputSettingsUsingModel:
applySettings:
setSelected:
isSelected
legibleColor
titleMaskImageView
setTitleMaskImageView:
_titleMaskImageView
T@"UIImageView",&,N,V_titleMaskImageView
bundleIdentifier
localizedInfoDictionary
legacySaveImageToCameraRoll:completionTarget:completionSelector:contextInfo:
legacySaveImageDataToCameraRoll:completionTarget:completionSelector:contextInfo:
legacySaveScreenshotToCameraRoll:completionTarget:completionSelector:contextInfo:
legacySaveVideoToCameraRoll:completionTarget:completionSelector:contextInfo:
canSaveVideoToLibrary:
demoClient
cleanupForStoreDemoMode
_setDelaySuspend:
numberOfRowsInSection:
rectForRowAtIndexPath:
pl_indexPathForLastRow
pl_scrollToBottom:
scrollRectToVisible:animated:
scrollToRowAtIndexPath:atScrollPosition:animated:
pl_resetContentOffsetFromContentInsets
tableFooterView
indexPathsForVisibleRows
numberOfSections
indexPathForRow:inSection:
pl_scrollToVisibleRowAtIndexPath:animated:
pl_scrollToTop:
pl_lastRowIsVisible
pl_setHidden:delay:animated:
removeAnimationForKey:
pl_setHiddenAnimationDuration
pl_drawBorderWithColor:width:
_isInPopoverPresentation
childViewControllers
presentedViewController
arrayByAddingObject:
pl_visitControllerHierarchyWithBlock:
pl_isInPopover
rootViewController
@16@0:8
v24@0:8@16
v16@0:8
#16@0:8
@48@0:8{CGRect={CGPoint=dd}{CGSize=dd}}16
v24@0:8q16
v32@0:8q16d24
{CGRect={CGPoint=dd}{CGSize=dd}}16@0:8
q16@0:8
B24@0:8@16
@24@0:8:16
@32@0:8:16@24
@40@0:8:16@24@32
B16@0:8
B24@0:8#16
B24@0:8:16
Vv16@0:8
Q16@0:8
^{_NSZone=}16@0:8
B24@0:8@"Protocol"16
@"NSString"16@0:8
@24@0:8@16
@"PHFetchResult"24@0:8@"PHAssetCollection"16
@"PHFetchResult"16@0:8
@32@0:8@16@24
v32@0:8Q16Q24
@24@0:8Q16
Q24@0:8@16
Q32@0:8Q16B24B28
Q24@0:8Q16
@28@0:8@16B24
Q28@0:8Q16B24
@32@0:8@16B24B28
@32@0:8@16Q24
@"PHFetchResult"
@"NSMutableDictionary"
v28@0:8@16B24
v24@0:8@"CAAnimation"16
v28@0:8@"CAAnimation"16B24
@?16@0:8
v24@0:8@?16
v56@0:8^{CGPath=}16{CGRect={CGPoint=dd}{CGSize=dd}}24
^{CGPath=}48@0:8{CGRect={CGPoint=dd}{CGSize=dd}}16
^{__CFDictionary=}
^{lruEntry=@q{?=^{lruEntry}^^{lruEntry}}}16@0:8
^{lruEntry=@q{?=^{lruEntry}^^{lruEntry}}}
@32@0:8q16q24
v32@0:8@16@24
v40@0:8@16@24q32
{_opaque_pthread_mutex_t="__sig"q"__opaque"[56c]}
{entryList="tqh_first"^{lruEntry}"tqh_last"^^{lruEntry}}
@"UIFontDescriptor"
{UIEdgeInsets=dddd}16@0:8
@"UILabel"
@"UIImageView"
@"CAShapeLayer"
@56@0:8{CGRect={CGPoint=dd}{CGSize=dd}}16i48B52
v20@0:8B16
@52@0:8{CGRect={CGPoint=dd}{CGSize=dd}}16i48
v24@0:8B16f20
v20@0:8i16
i16@0:8
@40@0:8{CGPoint=dd}16@32
v28@0:8B16@20
v28@0:8B16d20
v48@0:8{CGRect={CGPoint=dd}{CGSize=dd}}16
@52@0:8{CGRect={CGPoint=dd}{CGSize=dd}}16B48
B20@0:8i16
@"PLCropOverlayCropView"
@"UIView"
{CGRect="origin"{CGPoint="x"d"y"d}"size"{CGSize="width"d"height"d}}
@"UIToolbar"
@"PLProgressHUD"
@"UIButton"
@"PLContactPhotoOverlay"
@"NSString"
@"<PLCropOverlayDelegate>"
@"PLCropOverlayBottomBar"
v24@0:8d16
v28@0:8q16B24
B24@0:8q16
@"PLCropOverlayPreviewBottomBar"
@"PLCropOverlayWallpaperBottomBar"
d16@0:8
{CGSize=dd}24@0:8@16
{CGSize=dd}32@0:8{CGSize=dd}16
@"PLWallpaperButton"
@"_UILegibilityLabel"
@"_UIBackdropView"
v44@0:8@16@24@32i40
v64@0:8@16{CGRect={CGPoint=dd}{CGSize=dd}}24d56
v32@0:8^{__CFRunLoop=}16^{__CFString=}24
B40@0:8Q16^?24^{?=q^v^?^?^?}32
q32@0:8*16Q24
B32@0:8^*16^Q24
@"NSArray"
@"NSMutableData"
@"<PLDataArrayInputStreamProgressDelegate>"
^{__CFRunLoopSource=}
{?="version"q"info"^v"retain"^?"release"^?"copyDescription"^?}
B40@0:8{CGPoint=dd}16@32
f16@0:8
v32@0:8{CGSize=dd}16
v36@0:8{CGSize=dd}16f32
f20@0:8f16
v48@0:8{CGPoint=dd}16{CGPoint=dd}32
f24@0:8@16
f36@0:8@16i24d28
v40@0:8@16@24^v32
v32@0:8{CGPoint=dd}16
v48@0:8@16{CGSize=dd}24q40
{CGSize=dd}16@0:8
v24@0:8^{CGContext=}16
@"PLImageView"
{CGSize="width"d"height"d}
{CGPoint="x"d"y"d}
@"PLManagedAsset"
{?="isRotating"b1"didTrack"b1"updateFrame"b1"didLayout"b1"alwaysDoLayout"b1"didComputeCenterOffset"b1"imageIsFullScreen"b1}
v28@0:8i16d20
v24@0:8f16B20
i20@0:8B16
{CGRect={CGPoint=dd}{CGSize=dd}}60@0:8{CGRect={CGPoint=dd}{CGSize=dd}}16@48B56
v28@0:8B16@?20
@"<PLExpandableViewDelegate>"
{?="state"b3"prevState"b3"tracking"b1"autorotationDisabled"b1"animationDisabled"b1"updateContractedFrame"b1"updateExpandedFrame"b1"allowsExpansion"b1"delegateWillBeginExpanding"b1"delegateWillCompleteExpanding"b1"delegateDidCompleteExpanding"b1"delegateWillCancelExpanding"b1"delegateDidCancelExpanding"b1"delegateDidBeginCollapsing"b1"delegateWillCompleteCollapsing"b1"delegateDidCompleteCollapsing"b1"delegateWillCancelCollapsing"b1"delegateDidCancelCollapsing"b1"delegateExpandedFractionChanged"b1}
@40@0:8@16{CGSize=dd}24
{CGSize=dd}36@0:8{CGSize=dd}16B32
{CGAffineTransform=dddddd}16@0:8
v24@0:8B16B20
v20@0:8f16
@"PLVideoView"
@"PLPhotoTilePlaceholderView"
@"PLTiledLayer"
v32@0:8@16d24
v48@0:8@16@24@32^v40
v32@0:8d16Q24
v36@0:8d16Q24B32
v24@0:8Q16
@"AVPlayerItem"
@"AVPlayer"
@"PLMoviePlayerView"
@"PLTVOutWindow"
@"<PLMoviePlayerControllerDelegate>"
@"PHImageManagerSettings"
@"PHResourceDownloadSettings"
@"NSMutableArray"
@"PLAVPlayerView"
i24@0:8@16
@"PLRoundProgressView"
@"<PLPhotoTileCloudPlaceholderViewDelegate>"
@"UIActivityIndicatorView"
@56@0:8{CGRect={CGPoint=dd}{CGSize=dd}}16@48
@"PLPhotoTileViewController"
@72@0:8{CGRect={CGPoint=dd}{CGSize=dd}}16^{CGImage=}48q56B64i68
@64@0:8{CGRect={CGPoint=dd}{CGSize=dd}}16@48B56i60
@60@0:8{CGRect={CGPoint=dd}{CGSize=dd}}16@48i56
v48@0:8@16{CGPoint=dd}24N^{CGPoint=dd}40
v40@0:8@16@24d32
v24@0:8@"UIScrollView"16
v48@0:8@"UIScrollView"16{CGPoint=dd}24N^{CGPoint=dd}40
v28@0:8@"UIScrollView"16B24
@"UIView"24@0:8@"UIScrollView"16
v32@0:8@"UIScrollView"16@"UIView"24
v40@0:8@"UIScrollView"16@"UIView"24d32
B24@0:8@"UIScrollView"16
B32@0:8@16@24
B24@0:8@"UIGestureRecognizer"16
B32@0:8@"UIGestureRecognizer"16@"UIGestureRecognizer"24
B32@0:8@"UIGestureRecognizer"16@"UITouch"24
B32@0:8@"UIGestureRecognizer"16@"UIPress"24
B32@0:8@"UIGestureRecognizer"16@"UIEvent"24
v48@0:8{UIEdgeInsets=dddd}16
@80@0:8@16@24{CGRect={CGPoint=dd}{CGSize=dd}}32B64i68B72i76
@48@0:8@16@24{CGSize=dd}32
v80@0:8{CGRect={CGPoint=dd}{CGSize=dd}}16{CGRect={CGPoint=dd}{CGSize=dd}}48
v32@0:8@16B24B28
{CGSize=dd}48@0:8@16d24{CGSize=dd}32
v40@0:8{CGSize=dd}16@32
v40@0:8d16{CGSize=dd}24
@84@0:8{CGRect={CGPoint=dd}{CGSize=dd}}16d48^@56^@64^{CGRect={CGPoint=dd}{CGSize=dd}}72B80
v104@0:8^@16@24{CGSize=dd}32@48{CGAffineTransform=dddddd}56
@88@0:8@16{CGSize=dd}24{CGRect={CGPoint=dd}{CGSize=dd}}40{CGSize=dd}72
@60@0:8{CGRect={CGPoint=dd}{CGSize=dd}}16d48i56
v36@0:8d16B24@?28
f28@0:8B16@20
@"UIImage"
@"PHAsset"
@"PLImageScrollView"
@"PLExpandableImageView"
@"UIView<PLTilePlaceholderView>"
@"UIGestureRecognizer"
@"<PLPhotoTileViewControllerDelegate>"
@"NSObject<OS_dispatch_source>"
@"PLTileContainerView"
@"PHCachingImageManager"
@"NSNumber"
{UIEdgeInsets="top"d"left"d"bottom"d"right"d}
B48@0:8@16@24@32@40
B40@0:8@16@24@32
v40@0:8@16q24d32
v32@0:8@16q24
v56@0:8@16{CGRect={CGPoint=dd}{CGSize=dd}}24
v48@0:8@16@24@32@?40
v56@0:8@16@24@32@40@?48
v40@0:8@16@24@?32
v32@0:8@16@?24
Q32@0:8@16@24
@40@0:8@16@24@32
B40@0:8@16@24@?32
v40@0:8@16@24@32
v24@0:8@"UIApplication"16
B32@0:8@"UIApplication"16@"NSDictionary"24
B32@0:8@"UIApplication"16@"NSURL"24
B48@0:8@"UIApplication"16@"NSURL"24@"NSString"32@40
B40@0:8@"UIApplication"16@"NSURL"24@"NSDictionary"32
v40@0:8@"UIApplication"16q24d32
v32@0:8@"UIApplication"16q24
v56@0:8@"UIApplication"16{CGRect={CGPoint=dd}{CGSize=dd}}24
v32@0:8@"UIApplication"16@"UIUserNotificationSettings"24
v32@0:8@"UIApplication"16@"NSData"24
v32@0:8@"UIApplication"16@"NSError"24
v32@0:8@"UIApplication"16@"NSDictionary"24
v32@0:8@"UIApplication"16@"UILocalNotification"24
v48@0:8@"UIApplication"16@"NSString"24@"UILocalNotification"32@?<v@?>40
v56@0:8@"UIApplication"16@"NSString"24@"NSDictionary"32@"NSDictionary"40@?<v@?>48
v48@0:8@"UIApplication"16@"NSString"24@"NSDictionary"32@?<v@?>40
v56@0:8@"UIApplication"16@"NSString"24@"UILocalNotification"32@"NSDictionary"40@?<v@?>48
v40@0:8@"UIApplication"16@"NSDictionary"24@?<v@?Q>32
v32@0:8@"UIApplication"16@?<v@?Q>24
v40@0:8@"UIApplication"16@"UIApplicationShortcutItem"24@?<v@?B>32
v40@0:8@"UIApplication"16@"NSString"24@?<v@?>32
v40@0:8@"UIApplication"16@"NSDictionary"24@?<v@?@"NSDictionary">32
@32@0:8@"UIApplication"16@"INIntent"24
v40@0:8@"UIApplication"16@"INIntent"24@?<v@?@"INIntentResponse">32
Q32@0:8@"UIApplication"16@"UIWindow"24
B32@0:8@"UIApplication"16@"NSString"24
@"UIViewController"40@0:8@"UIApplication"16@"NSArray"24@"NSCoder"32
B32@0:8@"UIApplication"16@"NSCoder"24
v32@0:8@"UIApplication"16@"NSCoder"24
B40@0:8@"UIApplication"16@"NSUserActivity"24@?<v@?@"NSArray">32
v40@0:8@"UIApplication"16@"NSString"24@"NSError"32
v32@0:8@"UIApplication"16@"NSUserActivity"24
v32@0:8@"UIApplication"16@"CKShareMetadata"24
@"UISceneConfiguration"40@0:8@"UIApplication"16@"UISceneSession"24@"UISceneConnectionOptions"32
v32@0:8@"UIApplication"16@"NSSet"24
B24@0:8@"UIApplication"16
@"UIWindow"16@0:8
v24@0:8@"UIWindow"16
v32@0:8^{__CFUserNotification=}16Q24
@"NSDictionary"
@"NSSet"
@"MPMediaItemCollection"
@"UIProgressView"
@"NSNumberFormatter"
v24@0:8@"PLDataArrayInputStream"16
v32@0:8d16d24
v32@0:8q16q24
v28@0:8@16f24
@"NSData"
@"PLVideoRemaker"
q24@0:8@16
@"NSURL"
@56@0:8{CGRect={CGPoint=dd}{CGSize=dd}}16q48
d24@0:8d16
@"NSTimer"
@"NSDate"
@"UIColor"
@"PLProgressArcLayer"
@"CALayer"
v28@0:8d16B24
d48@0:8{CGRect={CGPoint=dd}{CGSize=dd}}16
{CGRect={CGPoint=dd}{CGSize=dd}}28@0:8d16B24
d52@0:8{CGRect={CGPoint=dd}{CGSize=dd}}16B48
B36@0:8@16B24^d28
@20@0:8B16
v48@0:8d16d24d32d40
@"<PLSlalomRegionEditorDelegate>"
v56@0:8{CGRect={CGPoint=dd}{CGSize=dd}}16d48
@48@0:8@16^{CGImage=}24{CGSize=dd}32
S16@0:8
v40@0:8@"UIImagePickerController"16@"UIImage"24@"NSDictionary"32
v32@0:8@"UIImagePickerController"16@"NSDictionary"24
v24@0:8@"UIImagePickerController"16
v36@0:8@16@24B32
@48@0:8@16q24@32@40
v36@0:8@"UINavigationController"16@"UIViewController"24B32
Q24@0:8@"UINavigationController"16
q24@0:8@"UINavigationController"16
@"<UIViewControllerInteractiveTransitioning>"32@0:8@"UINavigationController"16@"<UIViewControllerAnimatedTransitioning>"24
@"<UIViewControllerAnimatedTransitioning>"48@0:8@"UINavigationController"16q24@"UIViewController"32@"UIViewController"40
v24@0:8#16
d32@0:8@16q24
@"UIImagePickerController"
@"UINavigationItem"
d24@0:8@16
v24@0:8@"PLVideoView"16
d32@0:8@"PLVideoView"16q24
d24@0:8@"PLVideoView"16
B24@0:8@"PLVideoView"16
v28@0:8@"PLVideoView"16B24
v28@0:8@"PLVideoView"16f24
v32@0:8@"PLVideoView"16@"UIView"24
@"NSDictionary"24@0:8@"PLVideoView"16
v28@0:8@"PLPhotoTileViewController"16B24
v24@0:8@"PLPhotoTileViewController"16
B24@0:8@"PLPhotoTileViewController"16
@"UIView"24@0:8@"PLPhotoTileViewController"16
@"<UILayoutSupport>"24@0:8@"PLPhotoTileViewController"16
v24@0:8@"PLCropOverlay"16
@"NSArray"24@0:8@"PLCropOverlay"16
@56@0:8^{CGImage=}16{CGRect={CGPoint=dd}{CGSize=dd}}24
@56@0:8@16{CGRect={CGPoint=dd}{CGSize=dd}}24
v44@0:8@16@24@32B40
^{CGImage=}
@"PLCropOverlay"
@"PLProgressView"
@24@0:8q16
v32@0:8@16:24
@40@0:8d16d24d32
q20@0:8i16
d20@0:8i16
q28@0:8i16d20
i20@0:8i16
@"AVAssetExportSession"
@"NSObject<PLVideoRemakerDelegate>"
@"PFVideoAVObjectBuilder"
@"AVAssetImageGenerator"
v28@0:8@16i24
v32@0:8@16f24f28
v40@0:8@16d24d32
v32@0:8@"UIMovieScrubber"16d24
v28@0:8@"UIMovieScrubber"16i24
v32@0:8@"UIMovieScrubber"16f24f28
v24@0:8@"UIMovieScrubber"16
v40@0:8@"UIMovieScrubber"16d24d32
@44@0:8@16i24@28@36
d24@0:8@"UIMovieScrubber"16
@"NSArray"44@0:8@"UIMovieScrubber"16i24@"NSNumber"28@"NSNumber"36
v32@0:8@"UIMovieScrubber"16@"NSNumber"24
v36@0:8@"UIMovieScrubber"16@"NSNumber"24B32
B28@0:8@16i24
v32@0:8@16Q24
v24@0:8@"PLMoviePlayerController"16
B28@0:8@"PLMoviePlayerController"16i24
v32@0:8@"PLMoviePlayerController"16Q24
B24@0:8@"PLMoviePlayerController"16
@"NSDictionary"24@0:8@"PLMoviePlayerController"16
v28@0:8@"PLSlalomRegionEditor"16B24
v24@0:8@"PLSlalomRegionEditor"16
B24@0:8@"PLSlalomRegionEditor"16
@64@0:8{CGRect={CGPoint=dd}{CGSize=dd}}16@48q56
v24@0:8^{CGImage=}16
@44@0:8@16@24@32i40
@32@0:8@16B24f28
v28@0:8d16i24
v44@0:8@16{CGSize=dd}24B40
@24@0:8^@16
B24@0:8d16
B32@0:8{CGPoint=dd}16
@"PLVideoPosterFrameView"
@"PLVideoEditingOverlayView"
@"PLPhotoBakedThumbnails"
@"PLProgressStack"
@"PLMoviePlayerController"
@"<PLVideoViewDelegate>"
@"NSLock"
@"NSObject<OS_dispatch_queue>"
@"UIMovieScrubber"
@"PLSlalomRegionEditor"
@"UIView<PLVideoOverlayButton>"
@"PFVideoAdjustments"
@"UITextView"
v24@0:8@"_UIBackdropView"16
v32@0:8B16d20B28
B24@0:8@?16
