@(#)PROGRAM:TextRecognition  PROJECT:CoreRecognition-157
?333333
?333333
6MatrixIfE
333333
333333
N/@{
333333
333333
N/@{
333333
333333
N/@{
333333
333333
N/@{
?NSt3__110__function6__funcIZ214-[CRLanguageCorrection correctTextFeature:inImage:withTextPieces:withMaxWidthPerRegion:withMedianCharSpacing:withBreakpoints:segmenter:options:numCharCandidates:downscaleSpaceRatio:latticePresetIdx:latticeResults:]E3$_0NS_9allocatorIS2_EEFvRKNS_6vectorImNS3_ImEEEEddddddEEE
NSt3__110__function6__baseIFvRKNS_6vectorImNS_9allocatorImEEEEddddddEEE
Z214-[CRLanguageCorrection correctTextFeature:inImage:withTextPieces:withMaxWidthPerRegion:withMedianCharSpacing:withBreakpoints:segmenter:options:numCharCandidates:downscaleSpaceRatio:latticePresetIdx:latticeResults:]E3$_0
BTU}BUU
pA33s?
MbP?
?333333
?ffffff
N3nms22PyramidTokenizerConfigE
?333333
?333333
?ffffff
33s?
Y@NSt3__118basic_stringstreamIcNS_11char_traitsIcEENS_9allocatorIcEEEE
333?fff?
?333333
6MatrixIsE
6MatrixIiE
@333333
NSt3__115basic_stringbufIcNS_11char_traitsIcEENS_9allocatorIcEEEE
333333
333333
N/@{
333333
333333
N/@{
?NSt3__117bad_function_callE
UUUUUU
N3nms10PyramidNMSItdhEE
N3nms16PyramidTokenizerItdEE
N3nms10RectForestItdEE
kU@fffff
kU@fffff
K@fffff
?NSt3__110__function6__baseIFviiEEE
ffffff
?333333
333333
?13CRCHSymbolMap
333333
333333
N/@{
333333
333333
N/@{
333333
?333333
?N3nms16PyramidNMSConfigE
N2cv3MatE
NSt3__110__function6__baseIFfffEEE
NSt3__110__function6__baseIFffEEE
NSt3__110__function6__baseIFhhEEE
NSt3__110__function6__baseIFssEEE
NSt3__110__function6__baseIFiiEEE
NSt3__114basic_ofstreamIcNS_11char_traitsIcEEEE
NSt3__113basic_filebufIcNS_11char_traitsIcEEEE
?N2cv8SmartPtrE
@ffffff
allocator<T>::allocate(size_t n) 'n' exceeds maximum supported size
v8@?0
DATE
TIME
NUMBER
EMOTICON
WORD_CASE_SENSITIVE
PUNC_LOOP
PHONE_NUMBER
EMAIL
Prefix_DATE
0xc50a218
Prefix_EMOTICON
0x68ed49c
Prefix_URL
0x88ea31a
Extendable_PUNC_LOOP
0x099c12f
Extendable_EMOTICON
0x23cc72f
Extendable_TIME
0xdb53409
0x61a649a
Prefix_TIME
0x7186a84
Extendable_URL
0x1070ba2
Prefix_PHONE_NUMBER
0x4374d28
0x34f55ec
0x7f7446f
Prefix_EMAIL
0xd23b9c8
0x08d4b39
Extendable_EMAIL
0xed4db98
Extendable_WORD_CASE_SENSITIVE
0x87eab3b
0xe6b391a
0x633a6c7
Extendable_NUMBER
0x3ba3922
Extendable_WORD_CASE_INSENSITIVE
0x355486d
0x837697b
Prefix_NUMBER
0x8005b66
WORD_CASE_INSENSITIVE
0x156f831
Extendable_DATE
0x9ddc000
Prefix_WORD_CASE_INSENSITIVE
0x8554b05
Prefix_WORD_CASE_SENSITIVE
0xe71cc3a
0x8aa8704
0x346ff32
0x%07lx
com.apple.TextRecognition
%@-%@_%@
%@_%@
%@-%@
v56@?0@"NSString"8{_NSRange=QQ}16{_NSRange=QQ}32^B48
v56@?0^{__CVBuffer=}8{CGRect={CGPoint=dd}{CGSize=dd}}16^B48
Model prediction error: %@
model
T@"CRTextDetectorModel",&,V_model
Recognition Inference
Recognizer Decoding
com.apple.CoreRecognition.recognizeText
v24@?0@"NSArray"8d16
featureProvider
T@"NSObject<CRRecognizerFeatureProviding>",&,V_featureProvider
T@"NSObject<CRTextRecognizerModel>",&,V_model
textDecoder
T@"NSObject<CRTextDecoding>",&,V_textDecoder
shouldCancel
TB,V_shouldCancel
desiredQoS
TI,V_desiredQoS
inferenceStats
T@"CRPerformanceStatistics",&,V_inferenceStats
decodingStats
T@"CRPerformanceStatistics",&,V_decodingStats
configuration
T@"CRRecognizerConfiguration",&,V_configuration
Locale was not provided for language correction
[WARNING] Unable to load lexicon for language '%@'. Lexicon checks will be disabled during language correction.
[WARNING] Unable to create custom lexicon: %@
P.bin
[WARNING] Unable to load pattern network
[WARNING] Resource path not found for '%@'. Character language model will be disabled during language correction.
[WARNING] Unable to load character language model for language '%@'. Character language model will be disabled during language correction.
[WARNING] Resource not found for '%@'. Character language model will be disabled during language correction.
cosuvwxzCOSUVWXZ
CR-Custom-Lexicon
characterLanguageModel
T^v,N,V_characterLanguageModel
staticLexicon
T^{_LXLexicon=},N,V_staticLexicon
dynamicLexicon
T^{_LXLexicon=},N,V_dynamicLexicon
invalidSingleCharCNNCode
T@"NSString",&,N,V_invalidSingleCharCNNCode
patternFST
T@"CRCHPatternNetwork",&,N,V_patternFST
confusableCharacters
T@"NSCharacterSet",R
locale
T@"NSLocale",R,V_locale
data
featureNames
T@"NSSet",R,N
T^{__CVBuffer=},N,V_data
f_score_act_sigmoid_output
geometry_output
T@"MLMultiArray",&,N,V_f_score_act_sigmoid_output
T@"MLMultiArray",&,N,V_geometry_output
cr_td_model.mlmodelc
bundle
T@"MLModel",R,N,V_model
cr_td_model_v2.mlmodelc
img_input
hash
TQ,R
superclass
T#,R
description
T@"NSString",R,C
debugDescription
textFeatureInfo
T@"NSArray",&
T@"MLMultiArray",&,N,V_img_input
T@"NSArray",&,V_textFeatureInfo
output_label_prob_map
T@"MLMultiArray",&,N,V_output_label_prob_map
T{vImage_Buffer=^vQQQ},N,V_img_input
T{?=^v^v[4Q][4Q]QQQQQQQQQQi},N,V_output_label_prob_map
model.espresso.net
com.apple.CoreRecognition.recognizerPredictionQueue
com.apple.CoreRecognition.recognizerOutputQueue
v16@?0^{?=ii*}8
%@_%ld_%ld_%ld_%ld_%ld_
Failed to initialize plan
Error loading network %d
recognizerConfiguration
T@"CRRecognizerConfiguration",&,V_recognizerConfiguration
context
T^v,V_context
plan
T^v,V_plan
network
T{?=^vi},V_network
engine
Ti,V_engine
precision
Ti,V_precision
names
T{vector<const char *, std::__1::allocator<const char *> >=^*^*{__compressed_pair<const char **, std::__1::allocator<const char *> >=^*}},V_names
currentConfigurationName
T@"NSString",&,V_currentConfigurationName
predictionQueue
T@"NSObject<OS_dispatch_queue>",&,V_predictionQueue
predictionGroup
T@"NSObject<OS_dispatch_group>",&,V_predictionGroup
submissionSemaphore
T@"NSObject<OS_dispatch_semaphore>",&,V_submissionSemaphore
outputNames
T@"NSArray",R
CRImageReaderErrorDomain
No output type specified
Invalid CRImageReaderImageCaptureOrientation key. Skip orientation correction
Unknown error
Revision number is invalid, please check supported revisions
Language correction encountered an error
Unsupported input configuration
Encounted error while setting up a network
CRImageReaderLanguageKey
CRImageReaderLanguageUnspecified
CRImageReaderMinimumTextHeight
en-US
fr-FR
it-IT
de-DE
es-ES
pt-BR
zh-Hans
zh-Hant
CRImageReaderRevisionKey
CRImageReaderDynamicLexicon
CRImageReaderRecognizerModelPath
CRImageReaderDetectorModelPath
CRImageReaderRecognitionMethod
CRImageReaderRecognitionMethodGeometric
CRImageReaderRecognitionMethodSingleChar
CRImageReaderRecognitionMethodCTC
CRImageReaderTextDetector
CRImageReaderTextDetectorCI
CRImageReaderTextDetectorCR
CRImageReaderTextRecognizer
CRImageReaderTextRecognizerCI
CRImageReaderTextRecognizerCR
CRImageReaderTextRecognizerCRS
CRImageReaderActivationMap
CRTextDetectorDisableLineGrouping
CRTextRecognizerNumberResultsNeeded
CRTextRecognizerGarbageRejected
CRImageReaderImageCaptureOrientationPortrait
CRImageReaderNumTopStringCandidates
CRImageReaderDisableLanguageCorrection
CRImageReaderDisableWordLevelModelling
CRImageReaderSaveLatticeInfo
CRImageReaderDisableAllSegmentationOptimization
CRImageReaderImageCaptureOrientation
CRImageReaderRestrictToCPUKey
CRImageReaderDisableFalsePositivePostFilter
CRImageReaderPrecisionThresholdKey
CREnableLogIntermediateDetectorResult
CRImagePyramidMaxNumScales
CRImagePyramidScaleFactor
CRImagePyramidMinDim
CRImageReaderLexiconWeightV2
CRImageReaderCharLMWeightV2
CRImageReaderWordLMWeightV2
Could not initialize engine
Output object type %@ not supported by CRImageReader
Error: Attempt to process nil image in TextRecognition
com.apple.CoreRecognition.disable_language_correction
com.apple.CoreRecognition.use_ci_detector
com.apple.CoreRecognition.use_futhark_recognizer
com.apple.CoreRecognition
SignPosts
userOptions
T@"NSDictionary",&,N,V_userOptions
T@"NSObject<CREngine>",&,N,V_engine
outputObjectTypes
T@"NSArray",C
inputOptions
T@"NSDictionary",&,N,V_inputOptions
startTime
T@"NSDate",&,N,V_startTime
endTime
T@"NSDate",&,N,V_endTime
textFeatures
T@"NSArray",&,N,V_textFeatures
pyramidPreIntraScaleNMSTextFeatures
T@"NSArray",&,N,V_pyramidPreIntraScaleNMSTextFeatures
pyramidPostIntraScaleNMSTextFeatures
T@"NSArray",&,N,V_pyramidPostIntraScaleNMSTextFeatures
pyramidPostInterScaleNMSTextFeatures
T@"NSArray",&,N,V_pyramidPostInterScaleNMSTextFeatures
pyramidScaleSize
T@"NSMutableArray",&,N,V_pyramidScaleSize
codeMaps
T@"NSArray",&,N,V_codeMaps
latticeResults
T@"CRLatticeResults",&,N,V_latticeResults
detectorResults
T@"CRTextDetectorResults",&,N,V_detectorResults
recognizerResults
T@"CRTextRecognizerResults",&,N,V_recognizerResults
titleTextFeature
T@"CRTextFeature",&,N,V_titleTextFeature
%3d 
/tmp/CoreRecognitionImages/Debug/threshold200.png
/tmp/CoreRecognitionImages/Debug/contours.png
decodeActivations must be overridden in subclass
CoreRecognition: result %@ size %@ is smaller than batch size %li
Codemap size doesn't match model output class
Attempt to recognize image (%zu,%zu) incompatible with model input dimensions (%i,%i)
sample
T^{CRCTCPriorityQueue={priority_queue<CRCtcCandidate, std::__1::vector<CRCtcCandidate, std::__1::allocator<CRCtcCandidate> >, CRCTCPriorityQueue::QueueComparison>={vector<CRCtcCandidate, std::__1::allocator<CRCtcCandidate> >=^{CRCtcCandidate}^{CRCtcCandidate}{__compressed_pair<CRCtcCandidate *, std::__1::allocator<CRCtcCandidate> >=^{CRCtcCandidate}}}{QueueComparison=}}B{vector<CRCtcCandidate, std::__1::allocator<CRCtcCandidate> >=^{CRCtcCandidate}^{CRCtcCandidate}{__compressed_pair<CRCtcCandidate *, std::__1::allocator<CRCtcCandidate> >=^{CRCtcCandidate}}}},V_sample
blank
T{CRCtcCandidate=if},V_blank
CardNumber
Cardholder
Expiration
%C : %f (%f)
symbol
TS,N,V_symbol
probability
Td,N,V_probability
logProbability
Td,N,V_logProbability
T@"NSString",R,N
Unrecognized language argument type when calling Futhark
Unable to create pixel buffer for CRImage. Error: %d
Error running Futhark: %@
com.apple.CoreHandwriting.CHCharacterSetsRules
^*+=<>.,
:'"-/
apmAPM.
strdndth.
:;B=
)(pPDoOxX*
_-.+
_-.:/+&?%()$=
lowercaseCharSet
T@"NSCharacterSet",&,N,V_lowercaseCharSet
uppercaseCharSet
T@"NSCharacterSet",&,N,V_uppercaseCharSet
digitCharSet
T@"NSCharacterSet",&,N,V_digitCharSet
startPunctuationCharSet
T@"NSCharacterSet",&,N,V_startPunctuationCharSet
middlePunctuationCharSet
T@"NSCharacterSet",&,N,V_middlePunctuationCharSet
endPunctuationCharSet
T@"NSCharacterSet",&,N,V_endPunctuationCharSet
digitStartPunctuationCharSet
T@"NSCharacterSet",&,N,V_digitStartPunctuationCharSet
digitEndPunctuationCharSet
T@"NSCharacterSet",&,N,V_digitEndPunctuationCharSet
arithmeticOperatorCharSet
T@"NSCharacterSet",&,N,V_arithmeticOperatorCharSet
dateTimeSeparatorCharSet
T@"NSCharacterSet",&,N,V_dateTimeSeparatorCharSet
dateTimeEndLetterCharSet
T@"NSCharacterSet",&,N,V_dateTimeEndLetterCharSet
numeralEndLetterCharSet
T@"NSCharacterSet",&,N,V_numeralEndLetterCharSet
lexiconSkipCharSet
T@"NSCharacterSet",&,N,V_lexiconSkipCharSet
containsDotCharSet
T@"NSCharacterSet",&,N,V_containsDotCharSet
prefixCapitalizationExceptionCharSet
T@"NSCharacterSet",&,N,V_prefixCapitalizationExceptionCharSet
selfLoopPunctuationCharSet
T@"NSCharacterSet",&,N,V_selfLoopPunctuationCharSet
emoticonTopCharSet
T@"NSCharacterSet",&,N,V_emoticonTopCharSet
emoticonMiddleCharSet
T@"NSCharacterSet",&,N,V_emoticonMiddleCharSet
emoticonBottomCharSet
T@"NSCharacterSet",&,N,V_emoticonBottomCharSet
emailAtCharSet
T@"NSCharacterSet",&,N,V_emailAtCharSet
emailPunctuationCharSet
T@"NSCharacterSet",&,N,V_emailPunctuationCharSet
urlPunctuationCharSet
T@"NSCharacterSet",&,N,V_urlPunctuationCharSet
strokeMaxPenalties
T{map<unsigned int, unsigned long, std::__1::less<unsigned int>, std::__1::allocator<std::__1::pair<const unsigned int, unsigned long> > >={__tree<std::__1::__value_type<unsigned int, unsigned long>, std::__1::__map_value_compare<unsigned int, std::__1::__value_type<unsigned int, unsigned long>, std::__1::less<unsigned int>, true>, std::__1::allocator<std::__1::__value_type<unsigned int, unsigned long> > >=^{__tree_end_node<std::__1::__tree_node_base<void *> *>}{__compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *> *>, std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<unsigned int, unsigned long>, void *> > >={__tree_end_node<std::__1::__tree_node_base<void *> *>=^{__tree_node_base<void *>}}}{__compressed_pair<unsigned long, std::__1::__map_value_compare<unsigned int, std::__1::__value_type<unsigned int, unsigned long>, std::__1::less<unsigned int>, true> >=Q}}},N,V_strokeMaxPenalties
signatureUniChar
T{map<unsigned int, int, std::__1::less<unsigned int>, std::__1::allocator<std::__1::pair<const unsigned int, int> > >={__tree<std::__1::__value_type<unsigned int, int>, std::__1::__map_value_compare<unsigned int, std::__1::__value_type<unsigned int, int>, std::__1::less<unsigned int>, true>, std::__1::allocator<std::__1::__value_type<unsigned int, int> > >=^{__tree_end_node<std::__1::__tree_node_base<void *> *>}{__compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *> *>, std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<unsigned int, int>, void *> > >={__tree_end_node<std::__1::__tree_node_base<void *> *>=^{__tree_node_base<void *>}}}{__compressed_pair<unsigned long, std::__1::__map_value_compare<unsigned int, std::__1::__value_type<unsigned int, int>, std::__1::less<unsigned int>, true> >=Q}}},N,V_signatureUniChar
_charSetRulesQueue
T@"NSObject<OS_dispatch_queue>",R,&,N,V__charSetRulesQueue
zh-HansLN
plist
zh-HansFN
q24@?0@8@16
pinyinName
romanjiName
%@ %@
%@ %@ %@
%@ %@. %@
meContact
v32@?0@8@16^B24
NO_MATCH
(([\.\-\'\,\/])([\.\-\'\,\/]))|(\/)|(\ \.)
 DOLLARS
 INC
 AND 
 SON
GIFT
CARD
PLATINUM
VISA
MASTERCARD
SIGNATURE
KOHLS
CASHBACK
CREDIT
VALUED
CUSTOMER
VALID
THRU
BANK
LAST DAY OF
SAISON
JQ SUGOCA
AU AI
OMNI
JNSHE LLD
RIHGA ROYAL HOTELS
THE 
MILEAGE
CHASE
SPECIMEN
ANA ARD
MITSUI SUMITOMO
BIC CAMERA
RE POINT
HHONORS
BUSINESSPREFERRED
HANG SENG
HSBC
SENG BAIK
Year
Month
(0[1-9]|[12][0-9]|3[01])([\-\/\.])(0[1-9]|1[012])\2(\d\d)
(0[1-9]|1[012])([\-\/\.])(0[1-9]|[12][0-9]|3[01])\2(\d\d)
(0[1-9]|1[012])([\-\/\.])((?:20)?\d\d)
(0[1-9]|[12][0-9]|3[01])?(JAN|FEB|MAR|APR|MAY|JUN|JLY|AUG|SEP|OCT|NOV|DEC)(\d\d)
(?<![\/])(20\d\d)([\-\/\.])(0[1-9]|1[012])(?![\/])
(0[1-9]|1[012])([\-\/\.])(\d)(\d\d)
Result
substringRange
%02i
dd/MM/yy
MM/dd/yy
MM/yy
ddMMMyyyy
yyyy/MM
MM/''yy
Could not extract date from ground truth. Using current date
9682
com.apple.CoreRecognition.disable_year_check
expfull
expirationDate
expirationYear
expirationMonth
expirationDay
expDateAccepted
dateOffset
normalizedDateOffset
nameResult
nameOffset
normalizedNameOffset
closestNameMatch
closestNameDistance
minMatchDistance
nameAccepted
cardholderName
code
accepted
621442
623106
621440
621443
621441
623107
com.apple.CoreRecognition.disable_prefix_check
589297
7777777777
2222222222
4444444444
5555555555
9999999999
44444444444444444
22222222222222222
6666666666666
888888888888
8888888888888888
q24@?0@"NSNumber"8@"NSNumber"16
q24@?0@"CALayer"8@"CALayer"16
fireTime
T{?=qiIq},N
target
T@,W,N,V_target
selector
T:,N,V_selector
fired
TB,N,V_fired
valid
TB,N,V_valid
v32@?0@"NSNumber"8Q16^B24
jp-hepburn
q24@?0@"NSString"8@"NSString"16
$1$1
n(b|p)([aiueo])
m$1$2
([aiue])\1
(o)(o|u)
uppercaseString
[^ -~]
cpuOnly
TB,R,V_cpuOnly
logIntermediateResults
TB,R,V_logIntermediateResults
customModelURL
T@"NSURL",R,V_customModelURL
runFullTile
TB,V_runFullTile
mergeFullTile
TB,V_mergeFullTile
tileSize
T{CGSize=dd},R,V_tileSize
tileOverlap
Td,R,V_tileOverlap
minimumInputSize
T{CGSize=dd},R,V_minimumInputSize
maximumInputSize
T{CGSize=dd},R,V_maximumInputSize
scoreMapScaleFactor
Td,R,V_scoreMapScaleFactor
mergingType
Ti,V_mergingType
lamo
wanshi
zhai
lang
gaidi
xiongyun
taiqian
biao
zhenlu
jiuxing
liqiu
xujie
guoqian
wuyu
wuyun
jinfeng
changman
zhen
bingyi
jinmin
piaonu
jierui
jiemao
chashang
shouyan
jingjie
yonghui
ping
houci
pulian
mojie
zhongying
zhongshu
jianxing
yezhao
zhubai
qianhua
zhixi
weibai
baihuo
kezhu
piao
changjin
qinxing
lueguang
zhengzhao
ganping
minxing
qian
maotong
dong
shenzi
zhongran
changgao
yangpi
maimai
haoqian
ganzhi
dibao
shenru
bing
chongle
baijian
zhongxiu
mang
chaxing
jinxing
baixin
xuewu
xiao
yanyu
zangmei
kong
zhuhua
zhui
xing
qianshuang
xingjia
canpin
qunxing
jieyu
puba
xiying
huixiang
xiaocui
ciyun
shenzhao
qianji
wuyue
saiyan
chai
zhuan
hanzhen
ting
shixing
baican
lulang
xuyan
diaosha
liao
quan
botian
xianchang
yanpi
weiqi
zhongxuan
jian
binghe
baibai
yujie
lepai
shao
baian
chui
zanghong
chuanzi
xiezhu
jieli
hailin
zhongtian
lizhao
shenjie
xingnu
dian
zhonghui
zhonggang
taixing
xueyuan
zengdao
shaobin
chaogui
weiwu
xianzhan
zhufa
chaoen
shaobo
jiaqin
shengbing
cichao
shixi
denggu
zhongwei
aoqiang
juji
qingci
shaohui
weiwei
zishao
zhaoxiang
cheng
chuoer
honglu
sheng
zipang
xingzao
shuaining
hongcheng
qijin
pang
xiaoci
hongshen
boxi
yidan
yushen
qipu
zhao
jichuan
lequn
guang
tingbai
yuwu
nuqi
jiyu
dihe
gangjiong
shengxi
mengzhou
zhongyang
chaoyou
changde
wanheng
xian
jieyuan
jiewei
yingxiao
xinglong
chenghua
jiesheng
suqin
nizhen
zangshan
liuxing
cengfan
aozhao
zhongfa
haolue
gang
luanchao
leji
shenbai
zhun
biyue
gong
louchang
xili
zhuochang
qiansong
pushui
zhan
kechang
bang
zhonghai
qiji
hexi
shengman
xiapu
ruiji
qiujun
yanzang
huiwan
junliao
zhaozao
diaosun
weidu
shahai
gongzhuang
eryong
liuan
xisheng
zang
jidao
lechun
shenhao
huilu
hongjuan
linglu
shuai
zhenghai
chou
lijie
yannan
baiyuan
bijin
feixing
zhanghan
yunjie
mengzhao
shancan
dongyong
bizhu
dinu
duoqian
jiong
feng
dunyang
jingpu
jinting
liangmei
shengshui
zhongxu
mingjiong
diaoqin
qinnu
chang
shui
zhaode
baibei
bozhen
guanlu
chapu
cihan
wuguan
luzhu
chan
cenghai
qianguo
changxin
qianzhi
xile
maolong
luqi
guangzhu
yang
xiaomao
pingyu
zhaojiu
wusheng
yinlu
zhaonu
zhuangfeng
bailu
chizhao
guxu
qichang
yunwu
chanchan
qianbing
biqi
chuanzan
luna
zhuli
baizhou
huiping
chaogou
aile
zhudi
hong
manji
zhongzhu
risheng
youzhu
zhou
liangzhu
weilu
songchang
rihe
jinyang
binxiao
changsheng
guan
wuwei
lizang
yangxing
erxing
xiwu
shiling
xuemang
yuqie
bibu
jieruo
guangjie
ziqing
zhenqian
peiguang
cong
congrui
biqian
xingshu
lengceng
quanjie
zilu
youbai
chaoyuan
zhongxue
xigui
yizhu
fanchang
meixie
yeyun
changhao
diaocheng
cengpei
xingben
liang
changbei
lazhu
qianchuan
zhongkao
zhenjun
zhua
lexian
quanqian
zangzi
wuqi
xiule
fengjin
momo
huilin
xiang
langzhun
jieguang
zhuo
qundi
shuitun
lubai
luqing
jieke
guliang
zhuhui
guochao
wanju
shubai
yide
zhenzhen
zhangyou
shenlian
zhaohua
hualuo
didun
huachui
luyi
jinle
linxie
zhaokuang
zhaoxing
xiezi
haiqing
xiaobang
guru
yong
manbo
puqiao
linjie
fusheng
ledu
chaochen
numei
qingjuan
zhongqi
zuoju
zhongsheng
teqian
xianjie
qianbai
zhongxing
pingwei
jiejun
tongguang
lumin
zhongan
bihou
jiejing
tingqian
zhaoxiao
jiao
luelan
weigui
zhuqi
kejie
duhong
guanwu
lihai
maojie
jiewen
shahua
yuanchao
baide
jiequan
ledian
qiaozi
chaoqian
wuxi
ying
sanxing
shengshen
shen
xiangqian
qizhong
dianchang
xiaona
chun
niuer
shengzhu
bichen
quanxing
yanshou
shengfang
loulu
zhonger
gongyao
qianfa
shouzhu
yizi
mingzhou
qianchai
bipu
junxi
baijiao
luying
wensan
jieshou
gexing
yunu
jieqiong
zhongshen
qianpin
chao
yaoe
youxing
lukai
yongqian
weicheng
qianqian
chen
maifu
liangli
canrong
zhong
daxiang
xingshan
pingwan
manhui
weiqian
geju
luming
ruijie
nanyan
zhonglu
yaoshen
zhongshi
cengtian
xingjian
yuyan
qianba
zhuang
yinggao
jiebing
baiquan
langliang
cijian
cengshi
bingjie
zhongle
shoujie
chaoding
huiqiao
jing
zangshi
guoxing
runlu
ruojie
baiying
manxiao
benzhu
puyun
lejie
changguo
xiaoxiao
zhuilu
baipei
xueyu
yingjie
cangbai
yuzhan
qiao
huan
zeng
miao
shan
chong
chuai
charlm
wordlm
lexicon
zh-HansLN.plist
jp-hepburn.plist
zh-HansFN.plist
LMConfig.plist
Patterns.plist
URLs
[WARNING] Resource not found. Regex matching disabled.
supportedRegularExpressions
T@"NSArray",&,N,V_supportedRegularExpressions
output_topk_indices
T{?=^v^v[4Q][4Q]QQQQQQQQQQi},N,V_output_topk_indices
output_label_prob_map_after_topk
topk_indices
Detection
Post Processing
Detector Inference
tileRects
T@"NSMutableArray",&,N,V_tileRects
T@"CRDetectorConfiguration",&,V_configuration
detectorStats
T@"CRPerformanceStatistics",&,V_detectorStats
postProcStats
T@"CRPerformanceStatistics",&,V_postProcStats
T@"NSMutableArray",&,N,V_pyramidPreIntraScaleNMSTextFeatures
T@"NSMutableArray",&,N,V_pyramidPostIntraScaleNMSTextFeatures
T@"NSMutableArray",&,N,V_pyramidPostInterScaleNMSTextFeatures
CROutputTypeText
CROutputStringValue
CROutputType
CROutputConfidence
CROutputBoundingBox
CROutputTopLeft
CROutputTopRight
CROutputBottomRight
CROutputBottomLeft
CROutputBaselineAngle
CROutputImageSize
CROutputComponents
CROutputCandidatesKey
CROutputIsTitle
CROutputEncodingVersion
CROutputEncodingData
CROutputEncodingUncompressedDataSize
CRImageReaderOutputErrorDomain
Invalid input range.
v32@?0@"NSString"8Q16^B24
supportsSecureCoding
TB,R
stringValue
T@"NSString",&,V_stringValue
confidence
Ti,V_confidence
baselineAngle
Tf,V_baselineAngle
imageSize
T{CGSize=dd},V_imageSize
isTitle
TB,V_isTitle
type
T@"NSString",R,V_type
boundingBox
T{CGRect={CGPoint=dd}{CGSize=dd}},R,V_boundingBox
topLeft
T{CGPoint=dd},R,V_topLeft
topRight
T{CGPoint=dd},R,V_topRight
bottomRight
T{CGPoint=dd},R,V_bottomRight
bottomLeft
T{CGPoint=dd},R,V_bottomLeft
candidates
T@"NSArray",R,V_candidates
components
T@"NSArray",R,V_components
cr_tr_model_chinese_v2.mlmodelc
Failed to initialize language correction. Disabling for %@.
TextRecognition
next_gen_lm
T@"NSLocale",R,N,V_locale
T@"CRTextSequenceRecognizerModel",&,V_model
regExpressions
T@"CRRegex",&,N,V_regExpressions
shouldUseLM
TB,N,V_shouldUseLM
characterObservations
T@"NSOrderedSet",R,N,V_characterObservations
v16@?0@"CRLanguageResources"8
next_gen_tr
colorSpace
Ti,R,V_colorSpace
batchSize
Tq,R,V_batchSize
maxConcurrentBatches
Tq,R,V_maxConcurrentBatches
inputWidths
T@"NSArray",R,V_inputWidths
inputHeight
Td,R,V_inputHeight
angleThresholdForRotatedCrops
Td,R,V_angleThresholdForRotatedCrops
decodeWithLM
TB,R,V_decodeWithLM
numTopStringCandidates
Tq,R,V_numTopStringCandidates
languages
T@"NSOrderedSet",R,V_languages
customWords
T@"NSArray",R,V_customWords
precisionThreshold
Tf,R,V_precisionThreshold
lexiconWeight
T@"NSNumber",R,V_lexiconWeight
characterLMWeight
T@"NSNumber",R,V_characterLMWeight
wordLMWeight
T@"NSNumber",R,V_wordLMWeight
minTitleLength
TQ,R,V_minTitleLength
minTitleProb
Td,R,V_minTitleProb
Evaluate accuracies %d samples: [%.2f%%]
file: %@
substringMatch: 1
substringMatch: 0
trueLabel:   %@
ctc:         %@
fixedLenght: %@
geometrical: %@
editDistance: %d
                                                   
%.10g
General
Recognizer
RecognitionSession
StrokeGrouping
com.apple.cr.wlm
v28@?0r*8q16I24
'.-/
v24@?0^{_LXEntry=}8*16
string
T@"NSString",&,V_string
probBlank
Td,V_probBlank
probNonBlank
Td,V_probNonBlank
probLexHist
Td,V_probLexHist
probLexCurrWord
Td,V_probLexCurrWord
probCharNGram
Td,V_probCharNGram
probWM
Td,V_probWM
probTotal
Td,R
probLM
probTotalNorm
lxStaticCursor
T^{_LXCursor=},N,V_lxStaticCursor
lxDynamicCursor
T^{_LXCursor=},N,V_lxDynamicCursor
self isKindOfClass: %@
Custom words array can only contain strings. Ignoring custome words array.
[WARNING] Unable to load language model for '%@'.
_cvnlpLanguageResourceBundle
T@"CVNLPLanguageResourceBundle",&,V__cvnlpLanguageResourceBundle
lmCharacterLanguageModel
T^v,N,V_lmCharacterLanguageModel
cvnlpCharacterLanguageModel
T^{CVNLPLanguageModel=},N,V_cvnlpCharacterLanguageModel
Tr^{_LXLexicon=},N,V_staticLexicon
wordLanguageModel
T^v,N,V_wordLanguageModel
Unsupported Model Version %s
value of fragment: %d unknown
com.apple.CoreRecognition.gpu_batch_size
Using custom gpu batch size of %li
com.apple.CoreRecognition.cpu_batch_size
Using custom cpu batch size of %li
modelName must be overridden in subclass
softmax_output
modelName
T@"NSString",R
codeMap
Tr^i,R,V_codeMap
classCount
Ti,R,V_classCount
modelShape
T@"NSArray",&,V_modelShape
inputWidth
Ti,R
gpuBatchSize
Tq,V_gpuBatchSize
cpuBatchSize
Tq,V_cpuBatchSize
Edge (startNode,endNode)= (
) inSym=
 outSym= 
 weight = 
Invalid empty FST line entry
File not found: (
Node[
has out degree zero but is not marked as a final node
has in degree zero but is not marked as an initial node
0x%zx
always_run_v2
Recognition
v24@?0d8@"NSError"16
ocrDetector
T@"CRNeuralTextDetector",&,V_ocrDetector
ocrRecognizer
T@"CRNeuralTextRecognizer",&,V_ocrRecognizer
options
T@"NSDictionary",&,V_options
revision
TQ,V_revision
recognizerStats
T@"CRPerformanceStatistics",&,V_recognizerStats
detectorInferenceStats
T@"CRPerformanceStatistics",&,V_detectorInferenceStats
recognizerInferenceStats
T@"CRPerformanceStatistics",&,V_recognizerInferenceStats
recognizerDecodingStats
T@"CRPerformanceStatistics",&,V_recognizerDecodingStats
mutablePaths
T@"NSMutableDictionary",&,N,V_mutablePaths
paths
T@"NSDictionary",R
Couldn't parse the label from: %@
%@.plist
identificationNumber
illegibleIdentificationNumber
illegibleCardholderName
expiration
illegibleExpiration
text
T@"NSString",R,V_text
confidenceLevel
Ti,R,V_confidenceLevel
cr_tr_model_latin_v2.mlmodelc
deque
map::at:  key not found
beamSearch
T@"CRCtcBeamSearch",&,N,V_beamSearch
subFeatures
bounds
toplineOrigin
baselineOrigin
textlineHeight
bestCandidateIndex
q24@?0@"CRTextFeature"8@"CRTextFeature"16
B24@?0@"CRTextFeature"8@"NSDictionary"16
contextSet
TB,V_contextSet
T{CGRect={CGPoint=dd}{CGSize=dd}},V_bounds
T{CGPoint=dd},V_topLeft
T{CGPoint=dd},V_topRight
T{CGPoint=dd},V_bottomLeft
T{CGPoint=dd},V_bottomRight
T@"NSArray",&,V_subFeatures
stringValueCandidates
T@"NSArray",&,V_stringValueCandidates
candidateProbs
T@"NSArray",&,V_candidateProbs
candidateActivationProbs
T@"NSArray",&,V_candidateActivationProbs
subFeatureCandidates
T@"NSArray",&,V_subFeatureCandidates
Tq,V_bestCandidateIndex
segmentationBreakPoints
T@"NSArray",&,V_segmentationBreakPoints
shouldExpandToFullWidth
TB,V_shouldExpandToFullWidth
T@"NSString",&,N,V_stringValue
gtStringValue
T@"NSString",&,N,V_gtStringValue
imageCut
T@"CRImage",&,V_imageCut
T@"NSNumber",&,V_confidence
T{CGPoint=dd},R,V_toplineOrigin
T{CGPoint=dd},R,V_baselineOrigin
sizeHint
TC,V_sizeHint
Tf,V_textlineHeight
featureMapID
Ti,V_featureMapID
punctuationGuess
Ti,V_punctuationGuess
LogAllImages
ImageLogLevel
totalResources
Tq,V_totalResources
availableResources
T@"NSMutableArray",&,V_availableResources
localeIdentifier
T@"NSString",&,V_localeIdentifier
resourceCountSemaphore
T@"NSObject<OS_dispatch_semaphore>",&,V_resourceCountSemaphore
subscribers
T@"NSMutableSet",&,V_subscribers
languageResourceStacks
T@"NSMutableDictionary",&,V_languageResourceStacks
Conversion from representation string to symbol ID string failed
d16@?0r^{NetworkEdge=QQQQdQQ{vector<long, std::__1::allocator<long> >=^q^q{__compressed_pair<long *, std::__1::allocator<long> >=^q}}}8
d16@?0^{CRCHLatticePath=^I^IQQQQB^{CRCHNetwork}{vector<unsigned long, std::__1::allocator<unsigned long> >=^Q^Q{__compressed_pair<unsigned long *, std::__1::allocator<unsigned long> >=^Q}}{vector<unsigned long, std::__1::allocator<unsigned long> >=^Q^Q{__compressed_pair<unsigned long *, std::__1::allocator<unsigned long> >=^Q}}ddddddddddddQ^{_LXCursor}^{_LXCursor}@i{vector<long, std::__1::allocator<long> >=^q^q{__compressed_pair<long *, std::__1::allocator<long> >=^q}}{_NSRange=QQ}{vector<_NSRange, std::__1::allocator<_NSRange> >=^{_NSRange}^{_NSRange}{__compressed_pair<_NSRange *, std::__1::allocator<_NSRange> >=^{_NSRange}}}{vector<_NSRange, std::__1::allocator<_NSRange> >=^{_NSRange}^{_NSRange}{__compressed_pair<_NSRange *, std::__1::allocator<_NSRange> >=^{_NSRange}}}{vector<double, std::__1::allocator<double> >=^d^d{__compressed_pair<double *, std::__1::allocator<double> >=^d}}{vector<double, std::__1::allocator<double> >=^d^d{__compressed_pair<double *, std::__1::allocator<double> >=^d}}{vector<bool, std::__1::allocator<bool> >=^QQ{__compressed_pair<unsigned long, std::__1::allocator<unsigned long> >=Q}}{vector<bool, std::__1::allocator<bool> >=^QQ{__compressed_pair<unsigned long, std::__1::allocator<unsigned long> >=Q}}QQ}8
textFeature
T@"CRTextFeature",&
T@"CRTextFeature",&,V_textFeature
scale
Tf,V_scale
rotatedROI
T{CGRect={CGPoint=dd}{CGSize=dd}},V_rotatedROI
model.output
shape
No model.output.shape in model
w_output_shape
down_scale
No w_output_shape down_scale in model.output.shape
offset
No w_output_shape offset in model.output.shape
codemap
No codemap in model
No blank label in codemap
cr_tr_model_v1.mlmodelc
codemapArray
T^i,N
ctcBlankLabelIndex
Tq,N
T^i,N,V_codemapArray
codemapSize
TQ,N,V_codemapSize
Tq,N,V_ctcBlankLabelIndex
outputShape
T@"NSDictionary",&,N,V_outputShape
outputWidthDownscale
T@"NSNumber",&,N,V_outputWidthDownscale
outputWidthOffset
T@"NSNumber",&,N,V_outputWidthOffset
T@"CRRecognizerConfiguration",R,V_configuration
modelURL
T@"NSURL",R
Text Recognition
Language Correction
languageCorrection
T@"CRLanguageCorrection",&,N,V_languageCorrection
textRecognitionStats
T@"CRPerformanceStatistics",&,V_textRecognitionStats
languageCorrectionStats
T@"CRPerformanceStatistics",&,V_languageCorrectionStats
T@"NSString",R,N,V_symbol
edgeIndex
TQ,R,V_edgeIndex
score
Td,R,V_score
startNode
TQ,R,V_startNode
endNode
TQ,R,V_endNode
edges
T@"NSArray",R,N,V_edges
lexiconScore
Td,R,V_lexiconScore
cnnScore
Td,R,V_cnnScore
ngramScore
Td,R,V_ngramScore
geometryScore
Td,R,V_geometryScore
patternScore
Td,R,V_patternScore
totalScore
Td,R,V_totalScore
T@"NSMutableArray",&,N,V_mutablePaths
T@"NSArray",R,N
rect
T{CGRect={CGPoint=dd}{CGSize=dd}},R,V_rect
graphEdges
T@"NSArray",R,N,V_graphEdges
mutableResults
T@"NSMutableArray",&,N,V_mutableResults
results
CRPerformanceMetricExecutionTime
CRPerformanceMetricCPUTime
CRPerformanceMetricLifetimeMemPeak
CRPerformanceMetricDeltaMem
CRPerformanceMetricDeltaMemPeak
CRPerformanceMetricRecentMemPeak
CRPerformanceMetricName
CRPerformanceMetricUnit
CRPerformanceMetricMeasureRecentPeak
CRPerformanceMetricDenominator
CRPerformanceMetricPCMetricID
CRPerformanceMetricNumSamples
CRPerformanceMetricMean
CRPerformanceMetricStdDev
CRPerformanceStatisticsName
CRPerformanceStatisticsMetrics
com.apple.CoreRecognition.enable_recent_peak_reset
Execution Time
CPU Time
Lifetime Mem Peak
Delta Mem
Delta Mem Peak
Recent Mem Peak
v32@?0@"NSString"8@"NSDictionary"16^B24
===========%@ (# Samples = %ld)===========
 (%@)
v32@?0@"NSString"8@"CRPerformanceMetric"16^B24
name
T@"NSString",&,V_name
measureRecentPeak
TB,R,V_measureRecentPeak
metrics
T@"NSDictionary",&,V_metrics
Td,V_M2
welfordMean
Td,V_welfordMean
variance
displayName
T@"NSString",C,V_displayName
unit
T@"NSString",C,V_unit
serializationKey
T@"NSString",C,V_serializationKey
denominator
Td,V_denominator
sumX
Td,V_sumX
pcMetricID
TQ,V_pcMetricID
numSamples
Tq,V_numSamples
Could not determine an appropriate width index for aspect ratio %.4f
inputProvider
T@"NSObject<CRTextRecognizerModelInputProvider>",&,V_inputProvider
T@"NSString",R,V_string
features
T@"NSArray",R,V_features
wordID
Ti,R,V_wordID
properties
TQ,R,N,V_properties
mutableTokens
T@"NSMutableArray",&,N,V_mutableTokens
cachedScore
Td,V_cachedScore
tokens
T@"NSArray",R,&,N
tokenCount
mutableRows
T@"NSMutableArray",&,N,V_mutableRows
rows
rowCount
%@%@
mutableCols
T@"NSMutableArray",&,N,V_mutableCols
cols
T@"NSArray",&,N,V_cols
colCount
v16@?0i8i12
CRImages
JPEG
-meta
Exception: %@
No image available
[CRImage initY8WithCVPixelBuffer:] Unsupported pixel buffer type %i
[CRImage initARGB8888WithCVPixelBuffer:] Unable to initialize ARGB8888 CRImage with 422CbYpCrYp8 pixel buffer
[CRImage initARGB8888WithCVPixelBuffer:] Unable to initialize ARGB8888 CRImage with 420YpCbCr8BiPlanarFullRange pixel buffer
[CRImage initARGB8888WithCVPixelBuffer:] Unsupported pixel buffer type %i
[CRImage initYUV888WithCVPixelBuffer:] Unsupported pixel buffer type %i
[CRImage initAYUV8888WithCVPixelBuffer:] Unsupported pixel buffer type %i
CIColorControls
[CRImage initWithCIImage:toColorSpace:] Unable to initialize from CIImage to color space %@
v20@?0r^{vImage_Buffer=^vQQQ}8B16
[CRImage imageByCroppingTextFeature:correctedBoundingBox:padding:networkInputSize:] Failed to crop text feature %@
ARGB8888
AYpCbCr8888
YpCbCr888
Unknown
Unsupported color space
[CRImage applyEXIFTransformsOnImage:inColorSpace:properties:] Color space %@ not supported. Only color spaces with 1 or 4 bytes per pixel are supported.
[CRImage convertVImage:inColorSpace:toVImage:toColorSpace:] Unable to convert %@ to %@
ciImage
T@"CIImage",&,N,V_ciImage
pixelBuffer
T^{__CVBuffer=},N,V_pixelBuffer
cgImage
T^{CGImage=},N,V_cgImage
vImageDataIsCopy
TB,N,V_vImageDataIsCopy
vImage
T{vImage_Buffer=^vQQQ},R,V_vImage
width
height
isFullRange
TB,R,V_isFullRange
Attempting to initialize CRImage_PixelBuffer with nil CVPixelBufferRef
[CRImage_PixelBuffer initWithContentsOfURL:toColorSpace:] Unsupported colorspace: %d 
OCREndToEndTime
found paths with incompatible number of strokes covered from %zu to %zu: previous value %lu, value for new path %zu 
Unsupported Network Version %s
Error: LMLanguageModelConditionalProbabilityVector returns false in LMScoreVector 3Gram!
Error: LMLanguageModelConditionalProbabilityVector returns false in LMScoreVector 2Gram!
Error: unable to reallocate memory for path expansion.
*Y~N
~tOe
HP^t
9RLf
bQHP
9e0W
-NfN
r^s^
}Y~N
~N=r
~Nc[
WTWT
PN>m
x^sY
/qi`
Ha/q
FQey
!h!k
sY*t
/q8n
bTqt
Opeu
~N~g
4g4l
PN%f
^PN
1rPN
\t=O
HPLP
IQHP
hQHP
MR O
PN.s
hQ~N
HPIQ
HPKQ
:dP[
Sf\m
3tHP
PN\g
yr~N
~N}v
O\kS
HPbQ
:c~N
eupQ
KQHP
ydHP
HPhQ
PNxQ
[r?Q
}TAU
HP<t
8l~N
*g~N
^tHP
-NPN
LPHP
PNLu
CRCHNetworkCursor
CRCHPatternNetwork
CRNeuralTextDetectorV2
CRNeuralTextRecognizer
CRLanguageCorrection
CRTextDetectorModelInput
MLFeatureProvider
CRTextDetectorModelOutput
CRTextDetectorModel
CRTextDetectorModelV2
CRTextSequenceRecognizerModelCoreMLInput
CRTextRecognizerModelInput
NSObject
CRTextSequenceRecognizerModelCoreMLOutput
CRTextRecognizerModelOutput
CRTextSequenceRecognizerModelCoreML
CRTextRecognizerModelEspressoInput
CRTextRecognizerModelEspressoOutput
CRTextSequenceRecognizerModelEspresso
CRImageReader
CRTextDetectorResults
CRTextRecognizerResults
CRTextResults
Activations
CRCtcTimeSample
GeometricCutTools
SymbolCandidate
CRCtcMaxDecoding
CRFuthark
CRCHCharacterSetRules
CREditDistance
CoreRecognitionCaseCheck
CRPollingTimer
ActivationMapToolsOCR
CRDetectorConfiguration
CRRegex
CRTextRecognizerTopKModelEspressoOutput
CRTextSequenceRecognizerTopKModelEspresso
CRNeuralTextDetector
CRTextDecodingUtils
CRIntermediateDetectorResult
CRImageReaderOutput
NSCopying
NSSecureCoding
NSCoding
CRTextRecognizerModelChineseV2
CRTextDecoderCTCV2
CRTextDecoding
CRTextDecoderCTCEspresso
CRRecognizerConfiguration
CRCtcPath
CRLanguageResources
CRLanguageUtils
CRMLModel
CREngineAccurate
CREngine
CRCtcBeamSearch
CRCtcBeamState
CRTextRecognitionCandidate
CRTextRecognitionResult
CRTextRecognizerModelLatinV2
CRNMS
CRTextDecoderCTCV1
CRTextDecoderCTCCoreML
CRTextFeature
CRTextFeatureMultiRegion
CRLanguageResourcesStack
CRLanguageResourcesManager
CRFeatureSequenceRecognitionInfo
CRTextRecognizerFeatureInfo
CRTextSequenceRecognizerModel
CRTextRecognizerModel
CRTextRecognizerModelInputProvider
CREngineFast
CRLatticeEdge
CRLatticePath
CRLatticeRun
CRLatticeResults
CRPerformanceStatistics
CRPerformanceMetric
CRNeuralTextDetectorV1
CoreRecognition
CRRecognizerAsyncFeatureBatchProviderV1
CRRecognizerFeatureProviding
TextToken
TextRow
TextColumn
TextResults
CRTextRecognizerModelV1
CRImage
CRImage_PixelBuffer
addEdgeIndex:
edgeIndexCount
edgeIndexAtPosition:
.cxx_destruct
.cxx_construct
_edgeIndexes
dictionaryWithObjectsAndKeys:
numberWithInt:
objectForKey:
length
rangeOfComposedCharacterSequenceAtIndex:
substringWithRange:
substringFromIndex:
characterAtIndex:
advanceCursor:withSymbol:
cursorByAdvancingWithString:fromCursor:inNetwork:
init
UTF8String
patternToSymbolMap
dictionary
stringWithFormat:
numberWithLong:
setValue:forKey:
kDefaultPatternsPlusUrlsAndEmails
countByEnumeratingWithState:objects:count:
unsignedLongValue
setObject:forKey:
kDefaultPatterns
kEmailPatterns
kUrlPatterns
dealloc
rootCursorForContentType:inNetwork:
cursorByAdvancingWithSymbol:fromCursor:inNetwork:
isFinalCursor:inNetwork:
initWithFile:
_network
_symbols
_startEdges
_startCursorForContentTypes
stringByAppendingString:
stringByAppendingPathExtension:
languageCode
lowercaseString
scriptCode
capitalizedString
countryCode
uppercaseString
array
addObject:
string
appendString:
lengthOfBytesUsingEncoding:
enumerateSubstringsInRange:options:usingBlock:
stringWithCharacters:length:
mutableCopy
replaceCharactersInRange:withString:
copy
isEqualToString:
whitespaceAndNewlineCharacterSet
invertedSet
rangeOfCharacterFromSet:options:range:
valueWithRange:
dictionaryWithObjects:forKeys:count:
initWithImageReaderOptions:error:
initWithConfiguration:error:
setModel:
setConfiguration:
date
setStartTime:
detectorStats
width
height
configuration
maximumInputSize
calculateTargetOutputSize:adjustedInputScale:paddedSize:imageSize:maximumSize:
shouldCancel
errorWithErrorCode:
pixelBufferWithScale:paddedToSize:adjustedToSize:
initWithCVPixelBuffer:
allocGeometricMaps:
inferenceStats
model
predictionFromData:error:
measureBlock:
f_score_act_sigmoid_output
geometry_output
aggregateScoreAndGeoMap:inputGeo:targetSize:outputScoreMap:outputGeoMap:outputOrigin:
enumerateTilesForImage:block:
localizedDescription
deallocGeometricMaps:
runFullTile
tileSize
mergeFullTile
getMasksForScoreMap:imageMask:binaryMask:
pixelBufferWithScale:paddedToSize:adjustedToSize:mask:
extractImageMap:targetSize:
scaleBufferNearestNeighbor:geoMap:dest:destGeomap:binaryMask:
logIntermediateResults
processScoreMap:geoMap:adjustedSize:scoreMapFullTile:geoMapFullTile:adjustedFullTileSize:targetSize:targetSizeFullTile:intermediateResults:
setTextFeatures:
setEndTime:
pyramidPostInterScaleNMSTextFeatures
setPyramidPostInterScaleNMSTextFeatures:
pyramidPostIntraScaleNMSTextFeatures
setPyramidPostIntraScaleNMSTextFeatures:
pyramidPreIntraScaleNMSTextFeatures
setPyramidPreIntraScaleNMSTextFeatures:
pyramidScaleSize
setPyramidScaleSize:
initWithNumberOfScales:
postProcStats
mergingType
genPolyResultsForMIVSNMS:geoMap:targetSize:output:mergingType:
initWithNMSMethodType:NMSScoreType:TKZMethodType:
addTextDetectorQuadFeatures:withInputSize:andScoreMap:options:
_CRValueWithSize:
insertObject:atIndex:
objectAtIndexedSubscript:
textFeaturesFromPolygons:withScale:
addObjectsFromArray:
tileRects
addTextDetectorQuadFeatures:withInputSize:scoreMap:scoreMapScaleFactor:andTileRects:options:
generateConsolidatedTextFeatures:
dataPointer
strides
integerValue
shape
convertVImageScoreMap:toVector:
convertVImageGeoMaps:toVector:
smallestImageSizeForTextWithRelativeHeight:originalImageSize:
detectInImage:error:
_model
initWithName:measureRecentPeak:
setInferenceStats:
setDecodingStats:
setShouldCancel:
unsignedIntegerValue
numberWithUnsignedInteger:
setObject:forKeyedSubscript:
setDesiredQoS:
_modelForRevision:configuration:error:
_featureProviderForRevision:configuration:model:error:
setFeatureProvider:
featureProvider
_textDecoderForRevision:configuration:model:error:
setTextDecoder:
textDecoder
colorSpace
imageByConvertingToColorSpace:
desiredQoS
_isCancelled
predictFromInputs:error:
decodingStats
decodeOutput:imageSize:error:
enumerateInputsForImage:textFeatures:usingBlock:
pruneAndSortRecognizedTextFeatures:
languages
firstObject
initWithConfiguration:inputProvider:error:
initWithConfiguration:model:error:
shouldDecodeWithLM
recognizerForRevision:imageReaderOptions:error:
cancel
recognizeInImage:textFeatures:progressHandler:error:
shouldUseLM
_shouldCancel
_desiredQoS
_inferenceStats
_decodingStats
_configuration
_featureProvider
_textDecoder
arrayWithObjects:count:
exceptionWithName:reason:userInfo:
isLanguageCorrectionSupportedForLanguage:revision:
localeWithLocaleIdentifier:
loadCharacterNgramModel:
locale
newDynamicLexiconForLocale:error:
cStringUsingEncoding:
stringWithUTF8String:
URLWithString:
path
lastPathComponent
stringByDeletingPathExtension
stringByDeletingLastPathComponent
supportedLanguagesForRevision:error:
containsObject:
objectForKeyedSubscript:
intValue
adjustCaseConfusions:
invalidSingleCharCNNCode
bounds
initWithRect:
addResult:
setGraph:
count
objectAtIndex:
initWithString:score:features:wordID:properties:
addToken:
addRow:
addColumn:
findBestPathsForTextResults:numPathsToExtract:ngramsize:
topLeft
setTopLeft:
topRight
setTopRight:
bottomLeft
setBottomLeft:
bottomRight
setBottomRight:
featureMapID
setFeatureMapID:
subFeatures
characterSetWithCharactersInString:
stringValueCandidates
getCharacters:range:
confusableCharacters
preferAllUppercase:
preferAllLowercase:
characterIsMember:
indexOfObject:
candidateProbs
isUp
doubleValue
numberWithDouble:
setObject:atIndexedSubscript:
setCandidateProbs:
colCount
cols
rows
rowCount
score
features
initWithSubfeatures:stringValue:
setStringValueCandidates:
setConfidence:
setSubFeatureCandidates:
initWithRevision:localeCode:customWords:
correctTextFeature:inImage:withTextPieces:withMaxWidthPerRegion:withMedianCharSpacing:withBreakpoints:segmenter:options:numCharCandidates:downscaleSpaceRatio:latticePresetIdx:latticeResults:
characterLanguageModel
setCharacterLanguageModel:
staticLexicon
setStaticLexicon:
dynamicLexicon
setDynamicLexicon:
setInvalidSingleCharCNNCode:
patternFST
setPatternFST:
_characterLanguageModel
_staticLexicon
_dynamicLexicon
_invalidSingleCharCNNCode
_patternFST
_locale
arrayWithCapacity:
initWithEdgeIndexes:lex:cnn:ngram:geom:pattern:total:
appendPath:
setWithArray:
featureValueWithPixelBuffer:
featureValueForName:
featureNames
initWithData:
data
setData:
_data
featureValueWithMultiArray:
initWithF_score_act_sigmoid_output:geometry_output:
setF_score_act_sigmoid_output:
setGeometry_output:
_f_score_act_sigmoid_output
_geometry_output
bundleForClass:
pathForResource:ofType:
fileURLWithPath:
defaultURLOfModelInThisBundle
initWithContentsOfURL:error:
modelWithContentsOfURL:error:
customModelURL
initWithContentsOfURL:configuration:error:
setAllowLowPrecisionAccumulationOnGPU:
cpuOnly
setComputeUnits:
setAllowBackgroundGPUCompute:
modelWithContentsOfURL:configuration:error:
predictionFromFeatures:options:error:
multiArrayValue
predictionFromFeatures:error:
initWithFeatureProviderArray:
predictionsFromBatch:options:error:
featuresAtIndex:
predictionsFromInputs:options:error:
isEqual:
class
self
performSelector:
performSelector:withObject:
performSelector:withObject:withObject:
isProxy
isKindOfClass:
isMemberOfClass:
conformsToProtocol:
respondsToSelector:
retain
release
autorelease
retainCount
zone
hash
superclass
description
debugDescription
textFeatureInfo
setTextFeatureInfo:
initWithImg_input:featureInfo:
img_input
setImg_input:
_img_input
_textFeatureInfo
initWithOutput_label_prob_map:
output_label_prob_map
setOutput_label_prob_map:
_output_label_prob_map
initWithMLConfiguration:error:
batchSize
shouldSaturateInputBatchesForConfiguration:
numberWithInteger:
inputHeight
initWithShape:dataType:error:
populateInputBatchData:textFeatures:image:batchSize:width:configuration:
usesAppleNeuralEngine
predictionFromImg_input:error:
inputBatchFromTextFeatures:image:featureWidth:configuration:
initWithOutputLabelProbs:featureInfo:
modelURL
stringByAppendingPathComponent:
_setupContextAndPlanForConfiguration:error:
initWithCapacity:
predictionQueue
_shouldReconfigurePlanForInput:
_configurePlanForInput:error:
predictionGroup
network
outputNames
engine
plan
outputFromOutputBuffers:featureInfo:
submissionSemaphore
_createBufferWithWidth:height:channels:batchSize:sequenceLength:
_resetEspressoState
recognizerConfiguration
modelFilePath
currentConfigurationName
_configurationNameForInput:
setCurrentConfigurationName:
setRecognizerConfiguration:
context
setContext:
setPlan:
setNetwork:
setEngine:
precision
setPrecision:
names
setNames:
setPredictionQueue:
setPredictionGroup:
setSubmissionSemaphore:
_engine
_precision
_recognizerConfiguration
_context
_plan
_currentConfigurationName
_predictionQueue
_predictionGroup
_submissionSemaphore
_names
initWithOptions:error:
defaultOptions
addEntriesFromDictionary:
setUserOptions:
userOptions
_engineFromOptions:error:
resultsForPixelBuffer:roi:options:error:
resultsForPixelBuffer:roi:options:error:withProgressHandler:
outputObjectTypes
signpostLog
textResultsForImage:roi:options:error:withProgressHandler:
textFeatures
titleTextFeature
outputWithType:textFeature:imageSize:isTitle:options:
baselineAngle
setBaselineAngle:
arrayWithArray:
_engineClassFromOptions:error:
defaultRevisionNumber
supportedLanguagesForOptions:revision:error:
preferredLocalizationsFromArray:forPreferences:
textResultsForCGImage:numberOfCandidates:title:error:
initWithOptions:
initWithCGImage:toColorSpace:
stringValue
initWithTextFeature:options:
initWithContentsOfURL:toColorSpace:
textResultsForImage:options:withProgressHandler:
textRecognizerResultsForTextFeatures:image:
textDetectorResultsForImage:error:
descriptionForErrorCode:
errorWithDomain:code:userInfo:
standardUserDefaults
boolValue
numberWithBool:
imageByCroppingRectangle:
imageByRotating90CW
imageByCorrectingFromOrientation:
textResultsInImage:options:withProgressHandler:error:
detectorResults
scale:offset:
recognizerResults
recognizerStats
recognizerInferenceStats
recognizerDecodingStats
detectorInferenceStats
languageSetFromOptionsDictionary:
textResultsForCGImage:numberOfCandidates:title:
setOutputObjectTypes:
resultsForPixelBuffer:options:error:
purgeCaches:
textResultsForImageAtURL:options:
textResultsForImage:options:
textRecognizerResultsForTextFeatures:inImage:options:
textRecognizerResultsForTextFeatures:forImageAtURL:options:
_outputObjectTypes
_userOptions
inputOptions
setInputOptions:
startTime
endTime
_inputOptions
_startTime
_endTime
_textFeatures
_pyramidPreIntraScaleNMSTextFeatures
_pyramidPostIntraScaleNMSTextFeatures
_pyramidPostInterScaleNMSTextFeatures
_pyramidScaleSize
codeMaps
setCodeMaps:
latticeResults
setLatticeResults:
_codeMaps
_latticeResults
setDetectorResults:
setRecognizerResults:
setTitleTextFeature:
_detectorResults
_recognizerResults
_titleTextFeature
doesNotRecognizeSelector:
gpuBatchSize
modelShape
vImage
predict:error:
classCount
decodeActivations:
decodeActivations:blank:ctcAllowGarbage:numResultNeeded:
activationsFromImage:
sample
blank
setSample:
candidates
trimCandidates
topCandidate
addCandidate:
setBlank:
_blank
_sample
setBounds:
setSubFeatures:
arrayWithObjects:
lineThroughPoint:andPoint:andLineThroughPoint:andPoint:intersectAt:
lineThroughPoint:andPoint:andSegmentStartingAt:andEndingAt:intersectAt:
lineThroughPoint:andPoint:andRectangle:intersectAtPoint:andPoint:
lineThroughPoint:andPoint:andImageWithSize:intersectAtPoint:andPoint:
widestVersionOfRect:insideImageWithSize:
isPointArrayARectangle:
boxInNormalizedSpace:toImageSpaceWithSize:plusPadding:destSize:networkInputSize:
insertString:atIndex:
geometricRecognitionOf:inDerotatedRegion:withPadding:fromCorrectedBoundingBox:inImageWithSize:withCodeMap:activations:invert:networkInputSize:
stringByInjectingSpaces:textFeatures:improved:
stringWithCapacity:
reverseObjectEnumerator
allObjects
_newZStringWithString:
geometricRecognitionOf:inDerotatedRegion:withPadding:fromCorrectedBoundingBox:inImageWithSize:withCodeMap:activations:invert:networkInputSize:garbageSymbol:
setSymbol:
probability
setProbability:
setLogProbability:
whitespaceCharacterSet
stringByTrimmingCharactersInSet:
rangeOfString:
subarrayWithRange:
substringToIndex:
rangeOfString:options:range:
cleanTextDetectorOutput:
findCorrectedBoundingBoxOfTextFeature:inImageWithSize:
derotateContentsOf:inImage:andOutputTo:withPadding:networkInputSize:
geometricRecognitionOf:inDerotatedRegion:withPadding:fromCorrectedBoundingBox:inImageWithSize:withNetwork:activations:invert:
geometricRecognitionOf:inDerotatedRegion:withPadding:fromCorrectedBoundingBox:inImageWithSize:withNetwork:activations:invert:garbageSymbol:
geometricRecognitionCandidatesOf:inDerotatedRegion:withPadding:fromCorrectedBoundingBox:inImageWithSize:withNetwork:activations:invert:recognitionWindowSize:
symbol
logProbability
_symbol
_probability
_logProbability
maxDecodingForInput:outputString:outputProb:outputWhitespaceRanges:
updateSizeHints
wordFeatures
lastObject
floatValue
initWithFeatureRect:subFeatureRects:
baselineOrigin
toplineOrigin
setBaselineOrigin:toplineOrigin:slope:
allValues
arrayWithObject:
initWithSubfeatures:
detectTextInImage:withMaxNumScales:options:
runFutharkOnImage:recognizeFeatures:withMaxNumScales:withThresholdingAlgorithm:options:withProgressHandler:
runFutharkOnImage:recognizeFeatures:options:
initWithDimensions:
setReturnSubFeatures:
setMinimizeFalseDetections:
setMinimumCharacterHeight:
setDetectDiacritics:
setThresholdingAlgorithm:
setRecognitionLanguages:
setMergeSettings:
detectFeaturesInBuffer:error:
boundingBox
text
setStringValue:
confidence
numberWithFloat:
detectTextInImage:options:
detectTextInImage:withMaxNumScales:withThresholdingAlgorithm:options:
detectAndRecognizeTextInImage:options:
detectAndRecognizeTextInImage:options:withProgressHandler:
detectAndRecognizeTextInImage:withMaxNumScales:options:withProgressHandler:
sharedCharacterSetRules
_charSetRulesQueue
_expectedMaxStrokeCount:
_expectedMinStrokeCount:
_characterType:
decimalDigitCharacterSet
alphanumericCharacterSet
expectedMaxStrokeCount:
expectedMinStrokeCount:
characterType:
lowercaseCharSet
setLowercaseCharSet:
uppercaseCharSet
setUppercaseCharSet:
digitCharSet
setDigitCharSet:
startPunctuationCharSet
setStartPunctuationCharSet:
middlePunctuationCharSet
setMiddlePunctuationCharSet:
endPunctuationCharSet
setEndPunctuationCharSet:
digitStartPunctuationCharSet
setDigitStartPunctuationCharSet:
digitEndPunctuationCharSet
setDigitEndPunctuationCharSet:
arithmeticOperatorCharSet
setArithmeticOperatorCharSet:
dateTimeSeparatorCharSet
setDateTimeSeparatorCharSet:
dateTimeEndLetterCharSet
setDateTimeEndLetterCharSet:
numeralEndLetterCharSet
setNumeralEndLetterCharSet:
lexiconSkipCharSet
setLexiconSkipCharSet:
containsDotCharSet
setContainsDotCharSet:
prefixCapitalizationExceptionCharSet
setPrefixCapitalizationExceptionCharSet:
selfLoopPunctuationCharSet
setSelfLoopPunctuationCharSet:
emoticonTopCharSet
setEmoticonTopCharSet:
emoticonMiddleCharSet
setEmoticonMiddleCharSet:
emoticonBottomCharSet
setEmoticonBottomCharSet:
emailAtCharSet
setEmailAtCharSet:
emailPunctuationCharSet
setEmailPunctuationCharSet:
urlPunctuationCharSet
setUrlPunctuationCharSet:
strokeMaxPenalties
setStrokeMaxPenalties:
signatureUniChar
setSignatureUniChar:
_lowercaseCharSet
_uppercaseCharSet
_digitCharSet
_startPunctuationCharSet
_middlePunctuationCharSet
_endPunctuationCharSet
_digitStartPunctuationCharSet
_digitEndPunctuationCharSet
_arithmeticOperatorCharSet
_dateTimeSeparatorCharSet
_dateTimeEndLetterCharSet
_numeralEndLetterCharSet
_lexiconSkipCharSet
_containsDotCharSet
_prefixCapitalizationExceptionCharSet
_selfLoopPunctuationCharSet
_emoticonTopCharSet
_emoticonMiddleCharSet
_emoticonBottomCharSet
_emailAtCharSet
_emailPunctuationCharSet
_urlPunctuationCharSet
__charSetRulesQueue
_strokeMaxPenalties
_signatureUniChar
editDistance:string:threshold:
stringByReplacingOccurrencesOfString:withString:
editDistanceFromString:
editDistanceFromString:threshold:
editDistanceFromStringIgnoringSpaces:threshold:
editDistance:string:
isUppercase
isLowercase
isCaseApplicable
bundleWithIdentifier:
dictionaryWithContentsOfFile:
allKeys
compare:
sortedArrayUsingComparator:
containsString:
caseInsensitiveCompare:
componentsSeparatedByString:
arrayByAddingObject:
componentsJoinedByString:
deleteCharactersInRange:
controlCharacterSet
givenName
nickname
familyName
middleName
phoneticGivenName
phoneticFamilyName
enumerateKeysAndObjectsUsingBlock:
rangeOfString:options:
calendarWithIdentifier:
components:fromDate:
year
month
regularExpressionWithPattern:options:error:
matchesInString:options:range:
range
rangeAtIndex:
numberOfRanges
rangeValue
setDateFormat:
dateFromString:
currentCalendar
setYear:
dateFromComponents:
hasPrefix:
stringByReplacingCharactersInRange:withString:
arrayByAddingObjectsFromArray:
removeObject:
frame
position
setPosition:
setFrame:
setTarget:
setSelector:
setFireTime:
setFired:
setValid:
valid
fired
fireTime
target
selector
methodForSelector:
initWithTarget:selector:
evalAtTime:
invalidate
_fireTime
_fired
_valid
_target
_selector
enumerateObjectsUsingBlock:
bytes
dataWithBytes:length:
replaceOccurrencesOfString:withString:options:range:
setWithObject:
stringByReplacingMatchesInString:options:range:withTemplate:
valueForKey:
numberOfMatchesInString:options:range:
activationArrayFromActivationMap:codeMapIndex:
initV1DefaultConfig
initV2DefaultConfig
setRunFullTile:
setMergeFullTile:
tileOverlap
minimumInputSize
scoreMapScaleFactor
setMergingType:
_cpuOnly
_logIntermediateResults
_runFullTile
_mergeFullTile
_mergingType
_customModelURL
_tileOverlap
_scoreMapScaleFactor
_tileSize
_minimumInputSize
_maximumInputSize
pathExtension
supportedRegularExpressions
rangeOfFirstMatchInString:options:range:
stringMatchesRegex:
setSupportedRegularExpressions:
_supportedRegularExpressions
setOutput_topk_indices:
initWithOutputLabelProbs:outputTopKIndices:featureInfo:
output_topk_indices
_output_topk_indices
setDetectorStats:
setPostProcStats:
setTileRects:
_CRValueWithRect:
pixelBuffer
initWithTopLeft:TopRight:BottomLeft:BottomRight:
detectorForRevision:imageReaderOptions:error:
_detectorStats
_postProcStats
_tileRects
outputWidthDownscale
angleThresholdForRotatedCrops
valueWithPoint:
getWordBoundariesForWhiteSpaceRanges:topPoints:bottomPoints:imageSize:scale:rect:rotatedRoi:radians:model:configuration:
validateProbability:precisionThreshold:withLM:
initWithType:textFeature:withCandidates:imageSize:isTitle:options:
confidenceLevelForConfidenceScore:options:
initWithType:textFeature:imageSize:isTitle:options:
components
imageSize
_rotatePointIfNeccessary:anchor:angle:
allocWithZone:
type
copyWithZone:
isTitle
encodeInteger:forKey:
dataRepresentation
encodeObject:forKey:
encodingDataForString:
appendData:
encodingDataForOutputsArray:
decodeIntegerForKey:
decodeObjectOfClass:forKey:
initV2WithDataRepresentation:
initV1WithCoder:
decodeObjectForKey:
containsValueForKey:
decodeInt32ForKey:
decodeRectForKey:
decodePointForKey:
decodeSizeForKey:
decodeBoolForKey:
decodeFloatForKey:
setWithObjects:
decodeObjectOfClasses:forKey:
decodeStringFromData:offset:
_checkValidRange:forDataLength:
getBytes:range:
decodeOutputsArrayFromData:offset:version:
isEqualToArray:
isEqualToImageReaderOutput:
dataWithData:
dataUsingEncoding:
subdataWithRange:
initWithData:encoding:
supportsSecureCoding
encodeWithCoder:
initWithCoder:
cornersForCharacterRange:error:
setImageSize:
setIsTitle:
_isTitle
_confidence
_baselineAngle
_type
_stringValue
_candidates
_components
_topLeft
_topRight
_bottomRight
_bottomLeft
_imageSize
_boundingBox
decodeWithLM
supportedLanguages
codemapArray
codemapSize
orderedSetWithOrderedSet:
sharedManager
localeIdentifier
addSubscriber:forLocale:
removeSubscriber:forLocale:
regExpressions
setRegExpressions:
setShouldUseLM:
characterObservations
_shouldUseLM
_regExpressions
_characterObservations
_buildActivationMatrices:
_decodeFeaturesWithInfo:activations:imageSize:error:
_create2DArraysFromInputArray:classSize:outputArrays:
ctcBlankLabelIndex
initWithBuffer:indexBuffer:domainType:characterObservations:blankIndex:pruningPolicy:
initWithBuffer:domainType:characterObservations:blankIndex:pruningPolicy:
rotatedROI
scale
outputWidthOffset
activationRange
numTopStringCandidates
defaultWhitespaceCommitActionBehavior
initWithCommitActionBehavior:beamWidth:pathCount:shouldOptimizeAlignment:
initWithCommitActionBehavior:
initWithLanguageResourceBundle:
cvnlpLanguageResourceBundle:
setActivationMatrix:
decodingResultWithConfiguration:withContext:
lockResourcesForLocale:sender:block:
greedyDecodingResultWithConfiguration:
textFeature
tokens
activationScore
precisionThreshold
fullString
_whitespaceRangesForTokens:
setCandidateActivationProbs:
createWordSubFeaturesForCandidateAtIndex:topWhiteSpacePoints:bottomWhiteSpacePoints:
createCharacterSubFeaturesForCandidateAtIndex:
initV2DefaultConfigWithOptions:
supportedLanguagesForVersion:
languageSetFromInputLanguages:supportedLanguages:
initWithArray:
loadLanguageModelWeightsForLanguageIdentifier:rev:
maxConcurrentBatches
inputWidths
customWords
lexiconWeight
characterLMWeight
wordLMWeight
minTitleLength
minTitleProb
_decodeWithLM
_colorSpace
_precisionThreshold
_batchSize
_maxConcurrentBatches
_inputWidths
_inputHeight
_angleThresholdForRotatedCrops
_numTopStringCandidates
_languages
_customWords
_lexiconWeight
_characterLMWeight
_wordLMWeight
_minTitleLength
_minTitleProb
lxStaticCursor
setLxStaticCursor:
lxDynamicCursor
setLxDynamicCursor:
probTotal
probLM
probTotalNorm
probNonBlank
setProbNonBlank:
probBlank
setProbBlank:
setString:
probCharNGram
setProbCharNGram:
probLexHist
setProbLexHist:
probLexCurrWord
setProbLexCurrWord:
probWM
setProbWM:
_getQueue
updateWMProbForPath:stemmingFromPath:wordModel:locale:forChar:
updateNGramProbForPath:stemmingFromPath:withModel:forChar:
updateLexiconProbForPath:stemmingFromPath:staticLexicon:dynamicLexicon:forChar:
_isWordCustom:dynamicLexicon:
useLMTokenizerOnString:outTokenIDs:outTokenRanges:wordModel:locale:
lmProbForString:forPath:originalWordRanges:originalWordIDs:wordRanges:wordIDs:wordModel:
maximumLengthOfBytesUsingEncoding:
getBytes:maxLength:usedLength:encoding:options:range:remainingRange:
initWithBytes:length:encoding:
normalizeLMTokenIDForWord:withTokenID:outScore:wordModel:
letterCharacterSet
formUnionWithCharacterSet:
whiteSpaceRangesExcludingTrailing
merge:replaceWhiteSpaces:
childPathWithBlankProb:
updateWhitespacesForTimeSample:
pathByExtendingWithCharacter:characterNGramModel:staticLexicon:dynamicLexicon:wordModel:locale:forTimeSample:
containsCustomWords:
_tokenString
_histWordTokenIDs
_beginningCurrentWord
_whitespaceRanges
_numCustomWords
_string
_probBlank
_probNonBlank
_probLexHist
_probLexCurrWord
_probCharNGram
_probWM
_lxStaticCursor
_lxDynamicCursor
isLanguageSupported:
createCharacterModel:
createStaticLexicon:
createWordLanguageModel:
createCVNLPCharacterLanguageModel:
_cvnlpLanguageResourceBundle
initWithLexicon:
isCustomWordsSupportedForLanguageIdentifier:
predicateWithFormat:
filteredArrayUsingPredicate:
createDynamicLexicon:forLocale:error:
initWithLexicons:decodingWeight:
lmCharacterLanguageModel
initWithLMLanguageModel:locale:decodingWeight:
cvnlpCharacterLanguageModel
initWithCVNLPLanguageModel:locale:decodingWeight:
wordLanguageModel
initWithLexicons:characterLanguageModel:wordLanguageModel:
set_cvnlpLanguageResourceBundle:
initWithLanguageIdentifier:
setLmCharacterLanguageModel:
setCvnlpCharacterLanguageModel:
setWordLanguageModel:
_lmCharacterLanguageModel
_cvnlpCharacterLanguageModel
_wordLanguageModel
__cvnlpLanguageResourceBundle
modelName
initWithURL:error:
initWithURL:restrictToCPU:error:
defaultConfiguration
modelDescription
inputDescriptionsByName
multiArrayConstraint
setModelShape:
setGpuBatchSize:
setCpuBatchSize:
cpuBatchSize
initWithDictionary:error:
initRestrictingToCPU:
inputWidth
codeMap
_modelHeight
_modelWidth
_classCount
_codeMap
_modelShape
_gpuBatchSize
_cpuBatchSize
setRevision:
revision
setOcrDetector:
setOcrRecognizer:
ocrDetector
ocrRecognizer
setDetectorInferenceStats:
setRecognizerInferenceStats:
setRecognizerDecodingStats:
setRecognizerStats:
options
calculateTextBoxHeightForImageWidth:imageHeight:
_titleTextFeatureFromFeatures:imageWidth:imageHeight:
candidateActivationProbs
_normalizeScoreForFeature:
setOptions:
_recognizerStats
_detectorInferenceStats
_recognizerInferenceStats
_recognizerDecodingStats
_ocrDetector
_ocrRecognizer
_options
_revision
makeObjectsPerformSelector:
addPath:
paths
pathForString:
kBest:discarded:k:
mergePathsWithTrailingWhitespaces
sortedKeys
kBestPathsForInput:k:beamWidth:outputProbs:outputWhitespaceRanges:error:
dictionaryWithDictionary:
keysSortedByValueUsingSelector:
removeObjectForKey:
mutablePaths
setMutablePaths:
_mutablePaths
stringWithContentsOfFile:encoding:error:
newlineCharacterSet
componentsSeparatedByCharactersInSet:
defaultManager
fileExistsAtPath:
initWithText:confidenceLevel:
confidenceLevel
_confidenceLevel
_text
buildRectForest:fromTextFeatures:forestFeatureType:options:
buildRectForest:fromTextDetectorQuadFeatures:forestFeatureType:withInputSize:scoreMap:scoreMapScaleFactor:andTileRects:options:
preprocessScoreMaps
buildTextFeaturesFromRectForest:byEdge:options:
convertSubTextFeatures:toRects:
fillRectForestDatum:asDimType:withCGRect:
_CRRectValue
fillRectForestDatum:asDimType:withCRTextDetectorQuad:andInputSize:
fillRectForestDatum:asDimType:withQuad:andDimType:
fillTextFeature:withRectDatum:
getTextFeatureFromQuadAngleDatum:
addTextFeatures:options:
addTextDetectorQuadFeatures:withInputSize:scoreMap:andScoreMapScaleFactor:options:
tokenizeTextFeature:intoCutpoints:options:
buildRectForest:fromTextDetectorQuadFeatures:forestFeatureType:withInputSize:scoreMap:andScoreMapScaleFactor:options:
_preNMSForests
_pyrNMS
_postNMSForests
_pyrTokenizer
_forestFeatureType
_outputTextFeatureLevel
setBeamSearch:
beamSearch
correctLMDecodingWithRegex:noLMDecoding:
appendFormat:
maxDecodeFeaturesWithInfo:activationMaps:imageSize:error:
lmDecodeFeaturesWithInfo:activationMaps:imageSize:error:
_beamSearch
encodePoint:forKey:
encodeRect:forKey:
setTextlineHeight:
setBestCandidateIndex:
setShouldExpandToFullWidth:
zero
extent
initWithCITextFeature:inImage:
characterBoxes
shouldExpandToFullWidth
imageCut
setImageCut:
subFeatureCandidates
gtStringValue
setGtStringValue:
bestCandidateIndex
segmentationBreakPoints
setSegmentationBreakPoints:
textlineHeight
sizeHint
setSizeHint:
punctuationGuess
setPunctuationGuess:
initWithFeatureRect:inImage:
initWithFeatureRect:subFeatureRects:inImage:
initWithCCFeatureRect:subFeatureRects:rotatePortrait:
initWithArray:copyItems:
textFeatureScaledToImageWidth:height:
textFeaturebyPaddingToWidth:height:
predicateWithBlock:
slopeOfSubFeatures
textFeatureScaledToImage:
imageWithCGImage:
imageByCompositingOverImage:
contextSet
setContextSet:
estimateTopAndBaseline
getBaselineVector
sortUsingComparator:
removeLastObject
pointValue
sortedRotateTextFeatures:center:radians:sortingWithinLine:
sortedTextFeatures:
lineFeatures:imageWidth:imageHeight:
overlayFeatures:onImage:showSubFeatures:
overlayFeaturesVertices:onImage:showSubFeatures:
initWithVNTextObsevation:
initWithSubfeatureRects:inImage:
textFeatureSplitForStringValue:
caseInsensitiveProbabilityCandidateIndex:
addKohlsDigitProjection
isDown
adjustProbabilitiesWithPunctuationGuess
aspectRatioWithImageSize:
_shouldExpandToFullWidth
_sizeHint
_contextSet
_textlineHeight
_featureMapID
_punctuationGuess
_subFeatures
_stringValueCandidates
_candidateProbs
_candidateActivationProbs
_subFeatureCandidates
_bestCandidateIndex
_segmentationBreakPoints
_gtStringValue
_imageCut
_toplineOrigin
_baselineOrigin
_bounds
initWithOrderedFeatures:
persistentDomainForName:
setLocaleIdentifier:
setAvailableResources:
setTotalResources:
setResourceCountSemaphore:
setSubscribers:
availableResources
totalResources
resourceCountSemaphore
subscribers
valueWithNonretainedObject:
initWithLocaleIdentifier:
popResource
pushResource:
addSubscriber:
removeSubscriber:
hasSubscriber:
subscriberCount
_totalResources
_availableResources
_localeIdentifier
_resourceCountSemaphore
_subscribers
setLanguageResourceStacks:
languageResourceStacks
_languageResourceStacks
initWithSymbol:index:score:startNode:endNode:
dictionaryWithCapacity:
dictionaryWithObjects:forKeys:
setTextFeature:
setScale:
setRotatedROI:
infoForFeature:scale:bounds:rotatedROI:
_scale
_textFeature
_rotatedROI
bundleWithURL:
dataWithContentsOfFile:
JSONObjectWithData:options:error:
outputShape
imageByCroppingRectangle:textFeaturePoints:radians:rotatedRoi:
imageByPaddingToRatioAndScalingToWidth:height:alignCenter:
createFloatBuffer
setCodemapArray:
setCtcBlankLabelIndex:
setCodemapSize:
setOutputShape:
setOutputWidthDownscale:
setOutputWidthOffset:
_codemapArray
_codemapSize
_ctcBlankLabelIndex
_outputShape
_outputWidthDownscale
_outputWidthOffset
setLanguageCorrection:
setTextRecognitionStats:
setLanguageCorrectionStats:
textRecognitionStats
languageCorrection
filterResultsForTextFeatures:
applyLanguageCorrectionToResults:image:latticeResults:progressHandler:
noLMValidateProbability:options:
languageCorrectionStats
lmValidateProbability:options:
validateProbability:validRangeMin:validRangeMax:options:
_textRecognitionStats
_languageCorrectionStats
_languageCorrection
edgeIndex
startNode
endNode
_edgeIndex
_score
_startNode
_endNode
edges
lexiconScore
cnnScore
ngramScore
geometryScore
patternScore
totalScore
_edges
_lexiconScore
_cnnScore
_ngramScore
_geometryScore
_patternScore
_totalScore
rect
graphEdges
_graphEdges
_rect
results
mutableResults
setMutableResults:
_mutableResults
setMetrics:
_canEnableRecentPeakReset
_addMetricWithKey:name:unit:denominator:pcMetricID:
name
measureRecentPeak
metrics
initWithDictionary:copyItems:
initWithDictionary:key:
numSamples
displayName
unit
stringByAppendingFormat:
mean
stdDev
processInfo
processIdentifier
timeIntervalSinceDate:
_evaluateEndedSession:duration:
mergeMetric:
pcMetricWithDisplayName:pcMetricID:unit:denominator:serializationKey:
metricWithDisplayName:unit:denominator:serializationKey:
addSample:
pcMetricID
denominator
boolForKey:
initWithName:
initWithStatistics:
initWithDictionary:
addStatistics:
setName:
_measureRecentPeak
_name
_metrics
initWithDisplayName:unit:denominator:serializationKey:
setPcMetricID:
longLongValue
setNumSamples:
setSumX:
setM2:
serializationKey
sumX
setWelfordMean:
welfordMean
variance
setDisplayName:
setUnit:
setSerializationKey:
setDenominator:
_displayName
_unit
_serializationKey
_denominator
_sumX
_pcMetricID
_numSamples
_welfordMean
processScoreMap:geoMap:targetSize:scale:
genPolyResults:geoMap:targetSize:scale:mergingType:
valueWithCGSize:
valueWithCGRect:
CGRectValue
_indexOfBestModelForAspectRatio:
inputProvider
combinedLineFeature:lineFeature:
valueForKeyPath:
setInputProvider:
_inputProvider
wordID
properties
_wordID
_features
_properties
tokenCount
setMutableTokens:
mutableTokens
cachedScore
setCachedScore:
_mutableTokens
_cachedScore
setMutableRows:
initWithRows:
sortRowsInAscendingOrder
mutableRows
_mutableRows
indexAtPosition:
sortCols
transcriptionOfPath:tokenProcessingBlock:
setCols:
mutableCols
setMutableCols:
_cols
_mutableCols
isAbsolutePath
URLForDirectory:inDomain:appropriateForURL:create:error:
URLByAppendingPathComponent:
URLByDeletingLastPathComponent
checkResourceIsReachableAndReturnError:
createDirectoryAtURL:withIntermediateDirectories:attributes:error:
writeToFile:atomically:
initWithCVPixelBuffer:options:
contextWithOptions:
createCGImage:fromRect:
initWithBytes:length:
bytesPerPixelForColorSpace:
allocateVImageBufferWithWidth:height:bytesPerPixel:
allocateVImageBufferWithWidth:height:colorSpace:
initY8WithCVPixelBuffer:
initARGB8888WithCVPixelBuffer:
initAYUV8888WithCVPixelBuffer:
initYUV888WithCVPixelBuffer:
setCiImage:
render:toBitmap:rowBytes:bounds:format:colorSpace:
filterWithName:keysAndValues:
outputImage
convertVImage:inColorSpace:toVImage:toColorSpace:
nameForColorSpace:
dataWithBytesNoCopy:length:freeWhenDone:
imageWithBitmapData:bytesPerRow:size:format:colorSpace:
runBlockWithARGB8888Image:blockOwnsMemory:
cgImage
initWithWidth:height:colorSpace:
initWithVImageBuffer:inColorSpace:
bytesPerPixel
cgOrientation:toVImageRotationMode:andReflection:
numberWithUnsignedInt:
applyEXIFTransformsOnImage:inColorSpace:properties:
channelsForColorSpace:
initWithVImageBuffer:inColorSpace:toColorSpace:
initWithCGImage:properties:toColorSpace:
initWithCVPixelBuffer:toColorSpace:
initWithCIImage:toColorSpace:
drawVerticalLineAtXOffset:image:
ciImage
pixelBufferWithScale:paddedToSize:
imageByApplyingHistogramCorrection
imageByAdjustingBrightnessAlpha:beta:
imageByCroppingTextFeature:correctedBoundingBox:padding:networkInputSize:
imageByRotating180
imageByScalingToWidth:height:
imageByPaddingToRatioAndScalingToWidth:height:
imageByPaddingX:paddingY:
imageByDilating
imageByApplyingBinaryMask:
numChannels
initWithMat:
imageByCroppingRectangle:toHeight:andWidth:withRotationAngle:
writeToFile:
imageByInvertingIntensity
imageByOverlayingImage:opacity:
imageByOverlayingRects:count:
initWithCIImage:
initWithCGImage:
initWithCGImage:properties:
initWithContentsOfURL:
initWithWidth:height:
initWithVImageBuffer:
isFullRange
setPixelBuffer:
setCgImage:
vImageDataIsCopy
setVImageDataIsCopy:
_pixelBuffer
_isFullRange
_vImageDataIsCopy
_ciImage
_cgImage
_vImage
_pixelBufferFromUrl:
_convertPixelBuffer:toFormat:
pixelBufferWithScale:paddedToSize:adjustedToSize:mask:format:
imageWithContentsOfURL:options:
render:toCVPixelBuffer:
v24@0:8Q16
Q16@0:8
Q24@0:8Q16
v16@0:8
@16@0:8
{vector<unsigned long, std::__1::allocator<unsigned long> >="__begin_"^Q"__end_"^Q"__end_cap_"{__compressed_pair<unsigned long *, std::__1::allocator<unsigned long> >="__value_"^Q}}
@28@0:8i16@20
@40@0:8@16@24@32
B32@0:8@16@24
@32@0:8@16Q24
@24@0:8@16
^{CRCHNetwork=^{?}{basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >={__compressed_pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep, std::__1::allocator<char> >={__rep=(?={__long=QQ*}{__short=(?=Cc)[23c]}{__raw=[3Q]})}}}Q{vector<CRCHNetworkNode, std::__1::allocator<CRCHNetworkNode> >=^{CRCHNetworkNode}^{CRCHNetworkNode}{__compressed_pair<CRCHNetworkNode *, std::__1::allocator<CRCHNetworkNode> >=^{CRCHNetworkNode}}}{set<unsigned long, std::__1::less<unsigned long>, std::__1::allocator<unsigned long> >={__tree<unsigned long, std::__1::less<unsigned long>, std::__1::allocator<unsigned long> >=^{__tree_end_node<std::__1::__tree_node_base<void *> *>}{__compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *> *>, std::__1::allocator<std::__1::__tree_node<unsigned long, void *> > >={__tree_end_node<std::__1::__tree_node_base<void *> *>=^{__tree_node_base<void *>}}}{__compressed_pair<unsigned long, std::__1::less<unsigned long> >=Q}}}{vector<NetworkEdge, std::__1::allocator<NetworkEdge> >=^{NetworkEdge}^{NetworkEdge}{__compressed_pair<NetworkEdge *, std::__1::allocator<NetworkEdge> >=^{NetworkEdge}}}{vector<const NetworkEdge *, std::__1::allocator<const NetworkEdge *> >=^^{NetworkEdge}^^{NetworkEdge}{__compressed_pair<const NetworkEdge **, std::__1::allocator<const NetworkEdge *> >=^^{NetworkEdge}}}{CRCHSymbolMap=^^?{vector<std::__1::basic_string<char>, std::__1::allocator<std::__1::basic_string<char> > >=^{basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >}^{basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >}{__compressed_pair<std::__1::basic_string<char> *, std::__1::allocator<std::__1::basic_string<char> > >=^{basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >}}}{map<std::__1::basic_string<char>, unsigned long, std::__1::less<std::__1::basic_string<char> >, std::__1::allocator<std::__1::pair<const std::__1::basic_string<char>, unsigned long> > >={__tree<std::__1::__value_type<std::__1::basic_string<char>, unsigned long>, std::__1::__map_value_compare<std::__1::basic_string<char>, std::__1::__value_type<std::__1::basic_string<char>, unsigned long>, std::__1::less<std::__1::basic_string<char> >, true>, std::__1::allocator<std::__1::__value_type<std::__1::basic_string<char>, unsigned long> > >=^{__tree_end_node<std::__1::__tree_node_base<void *> *>}{__compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *> *>, std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<std::__1::basic_string<char>, unsigned long>, void *> > >={__tree_end_node<std::__1::__tree_node_base<void *> *>=^{__tree_node_base<void *>}}}{__compressed_pair<unsigned long, std::__1::__map_value_compare<std::__1::basic_string<char>, std::__1::__value_type<std::__1::basic_string<char>, unsigned long>, std::__1::less<std::__1::basic_string<char> >, true> >=Q}}}}B{map<unsigned long, std::__1::map<unsigned long, unsigned long, std::__1::less<unsigned long>, std::__1::allocator<std::__1::pair<const unsigned long, unsigned long> > >, std::__1::less<unsigned long>, std::__1::allocator<std::__1::pair<const unsigned long, std::__1::map<unsigned long, unsigned long, std::__1::less<unsigned long>, std::__1::allocator<std::__1::pair<const unsigned long, unsigned long> > > > > >={__tree<std::__1::__value_type<unsigned long, std::__1::map<unsigned long, unsigned long, std::__1::less<unsigned long>, std::__1::allocator<std::__1::pair<const unsigned long, unsigned long> > > >, std::__1::__map_value_compare<unsigned long, std::__1::__value_type<unsigned long, std::__1::map<unsigned long, unsigned long, std::__1::less<unsigned long>, std::__1::allocator<std::__1::pair<const unsigned long, unsigned long> > > >, std::__1::less<unsigned long>, true>, std::__1::allocator<std::__1::__value_type<unsigned long, std::__1::map<unsigned long, unsigned long, std::__1::less<unsigned long>, std::__1::allocator<std::__1::pair<const unsigned long, unsigned long> > > > > >=^{__tree_end_node<std::__1::__tree_node_base<void *> *>}{__compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *> *>, std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<unsigned long, std::__1::map<unsigned long, unsigned long, std::__1::less<unsigned long>, std::__1::allocator<std::__1::pair<const unsigned long, unsigned long> > > >, void *> > >={__tree_end_node<std::__1::__tree_node_base<void *> *>=^{__tree_node_base<void *>}}}{__compressed_pair<unsigned long, std::__1::__map_value_compare<unsigned long, std::__1::__value_type<unsigned long, std::__1::map<unsigned long, unsigned long, std::__1::less<unsigned long>, std::__1::allocator<std::__1::pair<const unsigned long, unsigned long> > > >, std::__1::less<unsigned long>, true> >=Q}}}{set<CRCHuint128, std::__1::less<CRCHuint128>, std::__1::allocator<CRCHuint128> >={__tree<CRCHuint128, std::__1::less<CRCHuint128>, std::__1::allocator<CRCHuint128> >=^{__tree_end_node<std::__1::__tree_node_base<void *> *>}{__compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *> *>, std::__1::allocator<std::__1::__tree_node<CRCHuint128, void *> > >={__tree_end_node<std::__1::__tree_node_base<void *> *>=^{__tree_node_base<void *>}}}{__compressed_pair<unsigned long, std::__1::less<CRCHuint128> >=Q}}}^IQ}
@"NSDictionary"
{CGSize=dd}40@0:8d16{CGSize=dd}24
v72@0:8^{CGSize=dd}16^d24^{CGSize=dd}32{CGSize=dd}40{CGSize=dd}56
^^{vImage_Buffer}32@0:8{CGSize=dd}16
v24@0:8^^{vImage_Buffer}16
v80@0:8@16@24{CGSize=dd}32^{vImage_Buffer=^vQQQ}48^^{vImage_Buffer}56{CGPoint=dd}64
v40@0:8^{vImage_Buffer=^vQQQ}16^{vImage_Buffer=^vQQQ}24^{vImage_Buffer=^vQQQ}32
{vImage_Buffer=^vQQQ}40@0:8@16{CGSize=dd}24
v56@0:8^{vImage_Buffer=^vQQQ}16^^{vImage_Buffer}24^{vImage_Buffer=^vQQQ}32^^{vImage_Buffer}40^{vImage_Buffer=^vQQQ}48
v60@0:8^{vImage_Buffer=^vQQQ}16^^{vImage_Buffer}24{CGSize=dd}32^{vector<CRDetectorUtils::CRTextDetectorQuadFeature, std::__1::allocator<CRDetectorUtils::CRTextDetectorQuadFeature> >=^{CRTextDetectorQuadFeature}^{CRTextDetectorQuadFeature}{__compressed_pair<CRDetectorUtils::CRTextDetectorQuadFeature *, std::__1::allocator<CRDetectorUtils::CRTextDetectorQuadFeature> >=^{CRTextDetectorQuadFeature}}}48i56
v32@0:8^{vImage_Buffer=^vQQQ}16^{vector<float, std::__1::allocator<float> >=^f^f{__compressed_pair<float *, std::__1::allocator<float> >=^f}}24
v32@0:8^^{vImage_Buffer}16^{vector<std::__1::vector<float, std::__1::allocator<float> >, std::__1::allocator<std::__1::vector<float, std::__1::allocator<float> > > >=^{vector<float, std::__1::allocator<float> >}^{vector<float, std::__1::allocator<float> >}{__compressed_pair<std::__1::vector<float, std::__1::allocator<float> > *, std::__1::allocator<std::__1::vector<float, std::__1::allocator<float> > > >=^{vector<float, std::__1::allocator<float> >}}}24
@32@0:8@16^@24
@120@0:8^{vImage_Buffer=^vQQQ}16^^{vImage_Buffer}24{CGSize=dd}32^{vImage_Buffer=^vQQQ}48^^{vImage_Buffer}56{CGSize=dd}64{CGSize=dd}80{CGSize=dd}96^@112
v24@0:8@16
@"CRTextDetectorModel"
@40@0:8Q16@24^@32
@40@0:8q16@24^@32
@48@0:8q16@24@32^@40
@48@0:8@16@24@?32^@40
B16@0:8
v20@0:8B16
I16@0:8
v20@0:8I16
@"CRPerformanceStatistics"
@"CRRecognizerConfiguration"
@"NSObject<CRRecognizerFeatureProviding>"
@"NSObject<CRTextRecognizerModel>"
@"NSObject<CRTextDecoding>"
@32@0:8Q16^@24
@40@0:8Q16@24@32
B32@0:8@16Q24
@100@0:8@16@24@32d40d48r^{vector<std::__1::vector<BreakPoint, std::__1::allocator<BreakPoint> >, std::__1::allocator<std::__1::vector<BreakPoint, std::__1::allocator<BreakPoint> > > >=^{vector<BreakPoint, std::__1::allocator<BreakPoint> >}^{vector<BreakPoint, std::__1::allocator<BreakPoint> >}{__compressed_pair<std::__1::vector<BreakPoint, std::__1::allocator<BreakPoint> > *, std::__1::allocator<std::__1::vector<BreakPoint, std::__1::allocator<BreakPoint> > > >=^{vector<BreakPoint, std::__1::allocator<BreakPoint> >}}}56^{Segmenter={vector<std::__1::vector<std::__1::vector<BreakPoint, std::__1::allocator<BreakPoint> >, std::__1::allocator<std::__1::vector<BreakPoint, std::__1::allocator<BreakPoint> > > >, std::__1::allocator<std::__1::vector<std::__1::vector<BreakPoint, std::__1::allocator<BreakPoint> >, std::__1::allocator<std::__1::vector<BreakPoint, std::__1::allocator<BreakPoint> > > > > >=^{vector<std::__1::vector<BreakPoint, std::__1::allocator<BreakPoint> >, std::__1::allocator<std::__1::vector<BreakPoint, std::__1::allocator<BreakPoint> > > >}^{vector<std::__1::vector<BreakPoint, std::__1::allocator<BreakPoint> >, std::__1::allocator<std::__1::vector<BreakPoint, std::__1::allocator<BreakPoint> > > >}{__compressed_pair<std::__1::vector<std::__1::vector<BreakPoint, std::__1::allocator<BreakPoint> >, std::__1::allocator<std::__1::vector<BreakPoint, std::__1::allocator<BreakPoint> > > > *, std::__1::allocator<std::__1::vector<std::__1::vector<BreakPoint, std::__1::allocator<BreakPoint> >, std::__1::allocator<std::__1::vector<BreakPoint, std::__1::allocator<BreakPoint> > > > > >=^{vector<std::__1::vector<BreakPoint, std::__1::allocator<BreakPoint> >, std::__1::allocator<std::__1::vector<BreakPoint, std::__1::allocator<BreakPoint> > > >}}}@@@@@{vector<double, std::__1::allocator<double> >=^d^d{__compressed_pair<double *, std::__1::allocator<double> >=^d}}{vector<double, std::__1::allocator<double> >=^d^d{__compressed_pair<double *, std::__1::allocator<double> >=^d}}BBBBBi}64@72i80B84i88@92
B24@0:8@16
^{_LXLexicon=}32@0:8@16^@24
@40@0:8@16Q24Q32
^v16@0:8
v24@0:8^v16
^{_LXLexicon=}16@0:8
v24@0:8^{_LXLexicon=}16
^{_LXLexicon=}
@"NSString"
@"CRCHPatternNetwork"
@"NSLocale"
@"MLFeatureValue"24@0:8@"NSString"16
@"NSSet"16@0:8
@24@0:8^{__CVBuffer=}16
^{__CVBuffer=}16@0:8
v24@0:8^{__CVBuffer=}16
^{__CVBuffer=}
@32@0:8@16@24
@"MLMultiArray"
@40@0:8@16@24^@32
@32@0:8^{__CVBuffer=}16^@24
@"MLModel"
#16@0:8
@24@0:8:16
@32@0:8:16@24
@40@0:8:16@24@32
B24@0:8#16
B24@0:8:16
Vv16@0:8
^{_NSZone=}16@0:8
B24@0:8@"Protocol"16
@"NSString"16@0:8
@"NSArray"16@0:8
v24@0:8@"NSArray"16
@"NSArray"
@48@0:8@16@24d32@40
@56@0:8{vImage_Buffer=^vQQQ}16@48
{vImage_Buffer=^vQQQ}16@0:8
v48@0:8{vImage_Buffer=^vQQQ}16
{vImage_Buffer="data"^v"height"Q"width"Q"rowBytes"Q}
@192@0:8{?=^v^v[4Q][4Q]QQQQQQQQQQi}16@184
{?=^v^v[4Q][4Q]QQQQQQQQQQi}16@0:8
v184@0:8{?=^v^v[4Q][4Q]QQQQQQQQQQi}16
{?="data"^v"reserved"^v"dim"[4Q]"stride"[4Q]"width"Q"height"Q"channels"Q"batch_number"Q"sequence_length"Q"stride_width"Q"stride_height"Q"stride_channels"Q"stride_batch_number"Q"stride_sequence_length"Q"storage_type"i}
@48@0:8{vector<espresso_buffer_t, std::__1::allocator<espresso_buffer_t> >=^{?}^{?}{__compressed_pair<espresso_buffer_t *, std::__1::allocator<espresso_buffer_t> >=^{?}}}16@40
v32@0:8@16^@24
{vImage_Buffer=^vQQQ}56@0:8Q16Q24Q32Q40Q48
{?=^vi}16@0:8
v32@0:8{?=^vi}16
i16@0:8
v20@0:8i16
{vector<const char *, std::__1::allocator<const char *> >=^*^*{__compressed_pair<const char **, std::__1::allocator<const char *> >=^*}}16@0:8
v40@0:8{vector<const char *, std::__1::allocator<const char *> >=^*^*{__compressed_pair<const char **, std::__1::allocator<const char *> >=^*}}16
@"NSObject<OS_dispatch_queue>"
@"NSObject<OS_dispatch_group>"
@"NSObject<OS_dispatch_semaphore>"
{?="plan"^v"network_index"i}
{vector<const char *, std::__1::allocator<const char *> >="__begin_"^*"__end_"^*"__end_cap_"{__compressed_pair<const char **, std::__1::allocator<const char *> >="__value_"^*}}
@40@0:8@16q24^@32
@40@0:8^{CGImage=}16q24^@32
@48@0:8^{CGImage=}16q24^@32^@40
@24@0:8q16
#32@0:8@16^@24
@40@0:8^{__CVBuffer=}16@24^@32
@72@0:8^{__CVBuffer=}16{CGRect={CGPoint=dd}{CGSize=dd}}24@56^@64
@80@0:8^{__CVBuffer=}16{CGRect={CGPoint=dd}{CGSize=dd}}24@56^@64@?72
@40@0:8@16@24@?32
@80@0:8@16{CGRect={CGPoint=dd}{CGSize=dd}}24@56^@64@?72
@"NSObject<CREngine>"
@"NSDate"
@"NSMutableArray"
@"CRLatticeResults"
@"CRTextDetectorResults"
@"CRTextRecognizerResults"
@"CRTextFeature"
@24@0:8^{vector<std::__1::vector<std::__1::vector<float, std::__1::allocator<float> >, std::__1::allocator<std::__1::vector<float, std::__1::allocator<float> > > >, std::__1::allocator<std::__1::vector<std::__1::vector<float, std::__1::allocator<float> >, std::__1::allocator<std::__1::vector<float, std::__1::allocator<float> > > > > >=^{vector<std::__1::vector<float, std::__1::allocator<float> >, std::__1::allocator<std::__1::vector<float, std::__1::allocator<float> > > >}^{vector<std::__1::vector<float, std::__1::allocator<float> >, std::__1::allocator<std::__1::vector<float, std::__1::allocator<float> > > >}{__compressed_pair<std::__1::vector<std::__1::vector<float, std::__1::allocator<float> >, std::__1::allocator<std::__1::vector<float, std::__1::allocator<float> > > > *, std::__1::allocator<std::__1::vector<std::__1::vector<float, std::__1::allocator<float> >, std::__1::allocator<std::__1::vector<float, std::__1::allocator<float> > > > > >=^{vector<std::__1::vector<float, std::__1::allocator<float> >, std::__1::allocator<std::__1::vector<float, std::__1::allocator<float> > > >}}}16
@40@0:8^{vector<std::__1::vector<std::__1::vector<float, std::__1::allocator<float> >, std::__1::allocator<std::__1::vector<float, std::__1::allocator<float> > > >, std::__1::allocator<std::__1::vector<std::__1::vector<float, std::__1::allocator<float> >, std::__1::allocator<std::__1::vector<float, std::__1::allocator<float> > > > > >=^{vector<std::__1::vector<float, std::__1::allocator<float> >, std::__1::allocator<std::__1::vector<float, std::__1::allocator<float> > > >}^{vector<std::__1::vector<float, std::__1::allocator<float> >, std::__1::allocator<std::__1::vector<float, std::__1::allocator<float> > > >}{__compressed_pair<std::__1::vector<std::__1::vector<float, std::__1::allocator<float> >, std::__1::allocator<std::__1::vector<float, std::__1::allocator<float> > > > *, std::__1::allocator<std::__1::vector<std::__1::vector<float, std::__1::allocator<float> >, std::__1::allocator<std::__1::vector<float, std::__1::allocator<float> > > > > >=^{vector<std::__1::vector<float, std::__1::allocator<float> >, std::__1::allocator<std::__1::vector<float, std::__1::allocator<float> > > >}}}16S24B28q32
{vector<std::__1::vector<std::__1::vector<float, std::__1::allocator<float> >, std::__1::allocator<std::__1::vector<float, std::__1::allocator<float> > > >, std::__1::allocator<std::__1::vector<std::__1::vector<float, std::__1::allocator<float> >, std::__1::allocator<std::__1::vector<float, std::__1::allocator<float> > > > > >=^{vector<std::__1::vector<float, std::__1::allocator<float> >, std::__1::allocator<std::__1::vector<float, std::__1::allocator<float> > > >}^{vector<std::__1::vector<float, std::__1::allocator<float> >, std::__1::allocator<std::__1::vector<float, std::__1::allocator<float> > > >}{__compressed_pair<std::__1::vector<std::__1::vector<float, std::__1::allocator<float> >, std::__1::allocator<std::__1::vector<float, std::__1::allocator<float> > > > *, std::__1::allocator<std::__1::vector<std::__1::vector<float, std::__1::allocator<float> >, std::__1::allocator<std::__1::vector<float, std::__1::allocator<float> > > > > >=^{vector<std::__1::vector<float, std::__1::allocator<float> >, std::__1::allocator<std::__1::vector<float, std::__1::allocator<float> > > >}}}24@0:8@16
r^{vector<CRCtcCandidate, std::__1::allocator<CRCtcCandidate> >=^{CRCtcCandidate}^{CRCtcCandidate}{__compressed_pair<CRCtcCandidate *, std::__1::allocator<CRCtcCandidate> >=^{CRCtcCandidate}}}16@0:8
{CRCtcCandidate=if}16@0:8
v24@0:8{CRCtcCandidate=if}16
^{CRCTCPriorityQueue={priority_queue<CRCtcCandidate, std::__1::vector<CRCtcCandidate, std::__1::allocator<CRCtcCandidate> >, CRCTCPriorityQueue::QueueComparison>={vector<CRCtcCandidate, std::__1::allocator<CRCtcCandidate> >=^{CRCtcCandidate}^{CRCtcCandidate}{__compressed_pair<CRCtcCandidate *, std::__1::allocator<CRCtcCandidate> >=^{CRCtcCandidate}}}{QueueComparison=}}B{vector<CRCtcCandidate, std::__1::allocator<CRCtcCandidate> >=^{CRCtcCandidate}^{CRCtcCandidate}{__compressed_pair<CRCtcCandidate *, std::__1::allocator<CRCtcCandidate> >=^{CRCtcCandidate}}}}16@0:8
v24@0:8^{CRCTCPriorityQueue={priority_queue<CRCtcCandidate, std::__1::vector<CRCtcCandidate, std::__1::allocator<CRCtcCandidate> >, CRCTCPriorityQueue::QueueComparison>={vector<CRCtcCandidate, std::__1::allocator<CRCtcCandidate> >=^{CRCtcCandidate}^{CRCtcCandidate}{__compressed_pair<CRCtcCandidate *, std::__1::allocator<CRCtcCandidate> >=^{CRCtcCandidate}}}{QueueComparison=}}B{vector<CRCtcCandidate, std::__1::allocator<CRCtcCandidate> >=^{CRCtcCandidate}^{CRCtcCandidate}{__compressed_pair<CRCtcCandidate *, std::__1::allocator<CRCtcCandidate> >=^{CRCtcCandidate}}}}16
{CRCtcCandidate="symbol"i"prob"f}
^{CRCTCPriorityQueue={priority_queue<CRCtcCandidate, std::__1::vector<CRCtcCandidate, std::__1::allocator<CRCtcCandidate> >, CRCTCPriorityQueue::QueueComparison>={vector<CRCtcCandidate, std::__1::allocator<CRCtcCandidate> >=^{CRCtcCandidate}^{CRCtcCandidate}{__compressed_pair<CRCtcCandidate *, std::__1::allocator<CRCtcCandidate> >=^{CRCtcCandidate}}}{QueueComparison=}}B{vector<CRCtcCandidate, std::__1::allocator<CRCtcCandidate> >=^{CRCtcCandidate}^{CRCtcCandidate}{__compressed_pair<CRCtcCandidate *, std::__1::allocator<CRCtcCandidate> >=^{CRCtcCandidate}}}}
@40@0:8@16{CGSize=dd}24
B88@0:8{CGPoint=dd}16{CGPoint=dd}32{CGPoint=dd}48{CGPoint=dd}64^{CGPoint=dd}80
B96@0:8{CGPoint=dd}16{CGPoint=dd}32{CGRect={CGPoint=dd}{CGSize=dd}}48^{CGPoint=dd}80^{CGPoint=dd}88
B80@0:8{CGPoint=dd}16{CGPoint=dd}32{CGSize=dd}48^{CGPoint=dd}64^{CGPoint=dd}72
@80@0:8@16{CGSize=dd}24{CGPoint=dd}40^{CGSize=dd}56{CGSize=dd}64
B96@0:8@16{vImage_Buffer=^vQQQ}24^{vImage_Buffer=^vQQQ}56{CGPoint=dd}64{CGSize=dd}80
@36@0:8@16@24B32
@132@0:8@16{vImage_Buffer=^vQQQ}24{CGPoint=dd}56@72{CGSize=dd}80^{CHNeuralNetwork={vector<int, std::__1::allocator<int> >=^i^i{__compressed_pair<int *, std::__1::allocator<int> >=^i}}{vector<std::__1::pair<int, int>, std::__1::allocator<std::__1::pair<int, int> > >=^{pair<int, int>}^{pair<int, int>}{__compressed_pair<std::__1::pair<int, int> *, std::__1::allocator<std::__1::pair<int, int> > >=^{pair<int, int>}}}{set<int, std::__1::less<int>, std::__1::allocator<int> >={__tree<int, std::__1::less<int>, std::__1::allocator<int> >=^{__tree_end_node<std::__1::__tree_node_base<void *> *>}{__compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *> *>, std::__1::allocator<std::__1::__tree_node<int, void *> > >={__tree_end_node<std::__1::__tree_node_base<void *> *>=^{__tree_node_base<void *>}}}{__compressed_pair<unsigned long, std::__1::less<int> >=Q}}}{set<int, std::__1::less<int>, std::__1::allocator<int> >={__tree<int, std::__1::less<int>, std::__1::allocator<int> >=^{__tree_end_node<std::__1::__tree_node_base<void *> *>}{__compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *> *>, std::__1::allocator<std::__1::__tree_node<int, void *> > >={__tree_end_node<std::__1::__tree_node_base<void *> *>=^{__tree_node_base<void *>}}}{__compressed_pair<unsigned long, std::__1::less<int> >=Q}}}Biiii^{?}ii^{Matrix<short>}^s^{Matrix<short>}^s^i}96{vector<std::__1::vector<std::__1::vector<float, std::__1::allocator<float> >, std::__1::allocator<std::__1::vector<float, std::__1::allocator<float> > > >, std::__1::allocator<std::__1::vector<std::__1::vector<float, std::__1::allocator<float> >, std::__1::allocator<std::__1::vector<float, std::__1::allocator<float> > > > > >=^{vector<std::__1::vector<float, std::__1::allocator<float> >, std::__1::allocator<std::__1::vector<float, std::__1::allocator<float> > > >}^{vector<std::__1::vector<float, std::__1::allocator<float> >, std::__1::allocator<std::__1::vector<float, std::__1::allocator<float> > > >}{__compressed_pair<std::__1::vector<std::__1::vector<float, std::__1::allocator<float> >, std::__1::allocator<std::__1::vector<float, std::__1::allocator<float> > > > *, std::__1::allocator<std::__1::vector<std::__1::vector<float, std::__1::allocator<float> >, std::__1::allocator<std::__1::vector<float, std::__1::allocator<float> > > > > >=^{vector<std::__1::vector<float, std::__1::allocator<float> >, std::__1::allocator<std::__1::vector<float, std::__1::allocator<float> > > >}}}104B128
@148@0:8@16{vImage_Buffer=^vQQQ}24{CGPoint=dd}56@72{CGSize=dd}80r^i96{vector<std::__1::vector<std::__1::vector<float, std::__1::allocator<float> >, std::__1::allocator<std::__1::vector<float, std::__1::allocator<float> > > >, std::__1::allocator<std::__1::vector<std::__1::vector<float, std::__1::allocator<float> >, std::__1::allocator<std::__1::vector<float, std::__1::allocator<float> > > > > >=^{vector<std::__1::vector<float, std::__1::allocator<float> >, std::__1::allocator<std::__1::vector<float, std::__1::allocator<float> > > >}^{vector<std::__1::vector<float, std::__1::allocator<float> >, std::__1::allocator<std::__1::vector<float, std::__1::allocator<float> > > >}{__compressed_pair<std::__1::vector<std::__1::vector<float, std::__1::allocator<float> >, std::__1::allocator<std::__1::vector<float, std::__1::allocator<float> > > > *, std::__1::allocator<std::__1::vector<std::__1::vector<float, std::__1::allocator<float> >, std::__1::allocator<std::__1::vector<float, std::__1::allocator<float> > > > > >=^{vector<std::__1::vector<float, std::__1::allocator<float> >, std::__1::allocator<std::__1::vector<float, std::__1::allocator<float> > > >}}}104B128{CGSize=dd}132
@136@0:8@16{vImage_Buffer=^vQQQ}24{CGPoint=dd}56@72{CGSize=dd}80^{CHNeuralNetwork={vector<int, std::__1::allocator<int> >=^i^i{__compressed_pair<int *, std::__1::allocator<int> >=^i}}{vector<std::__1::pair<int, int>, std::__1::allocator<std::__1::pair<int, int> > >=^{pair<int, int>}^{pair<int, int>}{__compressed_pair<std::__1::pair<int, int> *, std::__1::allocator<std::__1::pair<int, int> > >=^{pair<int, int>}}}{set<int, std::__1::less<int>, std::__1::allocator<int> >={__tree<int, std::__1::less<int>, std::__1::allocator<int> >=^{__tree_end_node<std::__1::__tree_node_base<void *> *>}{__compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *> *>, std::__1::allocator<std::__1::__tree_node<int, void *> > >={__tree_end_node<std::__1::__tree_node_base<void *> *>=^{__tree_node_base<void *>}}}{__compressed_pair<unsigned long, std::__1::less<int> >=Q}}}{set<int, std::__1::less<int>, std::__1::allocator<int> >={__tree<int, std::__1::less<int>, std::__1::allocator<int> >=^{__tree_end_node<std::__1::__tree_node_base<void *> *>}{__compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *> *>, std::__1::allocator<std::__1::__tree_node<int, void *> > >={__tree_end_node<std::__1::__tree_node_base<void *> *>=^{__tree_node_base<void *>}}}{__compressed_pair<unsigned long, std::__1::less<int> >=Q}}}Biiii^{?}ii^{Matrix<short>}^s^{Matrix<short>}^s^i}96{vector<std::__1::vector<std::__1::vector<float, std::__1::allocator<float> >, std::__1::allocator<std::__1::vector<float, std::__1::allocator<float> > > >, std::__1::allocator<std::__1::vector<std::__1::vector<float, std::__1::allocator<float> >, std::__1::allocator<std::__1::vector<float, std::__1::allocator<float> > > > > >=^{vector<std::__1::vector<float, std::__1::allocator<float> >, std::__1::allocator<std::__1::vector<float, std::__1::allocator<float> > > >}^{vector<std::__1::vector<float, std::__1::allocator<float> >, std::__1::allocator<std::__1::vector<float, std::__1::allocator<float> > > >}{__compressed_pair<std::__1::vector<std::__1::vector<float, std::__1::allocator<float> >, std::__1::allocator<std::__1::vector<float, std::__1::allocator<float> > > > *, std::__1::allocator<std::__1::vector<std::__1::vector<float, std::__1::allocator<float> >, std::__1::allocator<std::__1::vector<float, std::__1::allocator<float> > > > > >=^{vector<std::__1::vector<float, std::__1::allocator<float> >, std::__1::allocator<std::__1::vector<float, std::__1::allocator<float> > > >}}}104B128S132
@152@0:8@16{vImage_Buffer=^vQQQ}24{CGPoint=dd}56@72{CGSize=dd}80r^i96{vector<std::__1::vector<std::__1::vector<float, std::__1::allocator<float> >, std::__1::allocator<std::__1::vector<float, std::__1::allocator<float> > > >, std::__1::allocator<std::__1::vector<std::__1::vector<float, std::__1::allocator<float> >, std::__1::allocator<std::__1::vector<float, std::__1::allocator<float> > > > > >=^{vector<std::__1::vector<float, std::__1::allocator<float> >, std::__1::allocator<std::__1::vector<float, std::__1::allocator<float> > > >}^{vector<std::__1::vector<float, std::__1::allocator<float> >, std::__1::allocator<std::__1::vector<float, std::__1::allocator<float> > > >}{__compressed_pair<std::__1::vector<std::__1::vector<float, std::__1::allocator<float> >, std::__1::allocator<std::__1::vector<float, std::__1::allocator<float> > > > *, std::__1::allocator<std::__1::vector<std::__1::vector<float, std::__1::allocator<float> >, std::__1::allocator<std::__1::vector<float, std::__1::allocator<float> > > > > >=^{vector<std::__1::vector<float, std::__1::allocator<float> >, std::__1::allocator<std::__1::vector<float, std::__1::allocator<float> > > >}}}104B128{CGSize=dd}132S148
@148@0:8@16{vImage_Buffer=^vQQQ}24{CGPoint=dd}56@72{CGSize=dd}80^{CHNeuralNetwork={vector<int, std::__1::allocator<int> >=^i^i{__compressed_pair<int *, std::__1::allocator<int> >=^i}}{vector<std::__1::pair<int, int>, std::__1::allocator<std::__1::pair<int, int> > >=^{pair<int, int>}^{pair<int, int>}{__compressed_pair<std::__1::pair<int, int> *, std::__1::allocator<std::__1::pair<int, int> > >=^{pair<int, int>}}}{set<int, std::__1::less<int>, std::__1::allocator<int> >={__tree<int, std::__1::less<int>, std::__1::allocator<int> >=^{__tree_end_node<std::__1::__tree_node_base<void *> *>}{__compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *> *>, std::__1::allocator<std::__1::__tree_node<int, void *> > >={__tree_end_node<std::__1::__tree_node_base<void *> *>=^{__tree_node_base<void *>}}}{__compressed_pair<unsigned long, std::__1::less<int> >=Q}}}{set<int, std::__1::less<int>, std::__1::allocator<int> >={__tree<int, std::__1::less<int>, std::__1::allocator<int> >=^{__tree_end_node<std::__1::__tree_node_base<void *> *>}{__compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *> *>, std::__1::allocator<std::__1::__tree_node<int, void *> > >={__tree_end_node<std::__1::__tree_node_base<void *> *>=^{__tree_node_base<void *>}}}{__compressed_pair<unsigned long, std::__1::less<int> >=Q}}}Biiii^{?}ii^{Matrix<short>}^s^{Matrix<short>}^s^i}96{vector<std::__1::vector<std::__1::vector<float, std::__1::allocator<float> >, std::__1::allocator<std::__1::vector<float, std::__1::allocator<float> > > >, std::__1::allocator<std::__1::vector<std::__1::vector<float, std::__1::allocator<float> >, std::__1::allocator<std::__1::vector<float, std::__1::allocator<float> > > > > >=^{vector<std::__1::vector<float, std::__1::allocator<float> >, std::__1::allocator<std::__1::vector<float, std::__1::allocator<float> > > >}^{vector<std::__1::vector<float, std::__1::allocator<float> >, std::__1::allocator<std::__1::vector<float, std::__1::allocator<float> > > >}{__compressed_pair<std::__1::vector<std::__1::vector<float, std::__1::allocator<float> >, std::__1::allocator<std::__1::vector<float, std::__1::allocator<float> > > > *, std::__1::allocator<std::__1::vector<std::__1::vector<float, std::__1::allocator<float> >, std::__1::allocator<std::__1::vector<float, std::__1::allocator<float> > > > > >=^{vector<std::__1::vector<float, std::__1::allocator<float> >, std::__1::allocator<std::__1::vector<float, std::__1::allocator<float> > > >}}}104B128{CGSize=dd}132
S16@0:8
v20@0:8S16
d16@0:8
v24@0:8d16
v48@0:8@16^@24^@32^@40
@40@0:8@16Q24@32
@48@0:8@16Q24q32@40
@48@0:8@16Q24@32@?40
@36@0:8@16B24@28
@60@0:8@16B24Q28q36@44@?52
Q20@0:8I16
{map<unsigned int, unsigned long, std::__1::less<unsigned int>, std::__1::allocator<std::__1::pair<const unsigned int, unsigned long> > >={__tree<std::__1::__value_type<unsigned int, unsigned long>, std::__1::__map_value_compare<unsigned int, std::__1::__value_type<unsigned int, unsigned long>, std::__1::less<unsigned int>, true>, std::__1::allocator<std::__1::__value_type<unsigned int, unsigned long> > >=^{__tree_end_node<std::__1::__tree_node_base<void *> *>}{__compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *> *>, std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<unsigned int, unsigned long>, void *> > >={__tree_end_node<std::__1::__tree_node_base<void *> *>=^{__tree_node_base<void *>}}}{__compressed_pair<unsigned long, std::__1::__map_value_compare<unsigned int, std::__1::__value_type<unsigned int, unsigned long>, std::__1::less<unsigned int>, true> >=Q}}}16@0:8
v40@0:8{map<unsigned int, unsigned long, std::__1::less<unsigned int>, std::__1::allocator<std::__1::pair<const unsigned int, unsigned long> > >={__tree<std::__1::__value_type<unsigned int, unsigned long>, std::__1::__map_value_compare<unsigned int, std::__1::__value_type<unsigned int, unsigned long>, std::__1::less<unsigned int>, true>, std::__1::allocator<std::__1::__value_type<unsigned int, unsigned long> > >=^{__tree_end_node<std::__1::__tree_node_base<void *> *>}{__compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *> *>, std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<unsigned int, unsigned long>, void *> > >={__tree_end_node<std::__1::__tree_node_base<void *> *>=^{__tree_node_base<void *>}}}{__compressed_pair<unsigned long, std::__1::__map_value_compare<unsigned int, std::__1::__value_type<unsigned int, unsigned long>, std::__1::less<unsigned int>, true> >=Q}}}16
{map<unsigned int, int, std::__1::less<unsigned int>, std::__1::allocator<std::__1::pair<const unsigned int, int> > >={__tree<std::__1::__value_type<unsigned int, int>, std::__1::__map_value_compare<unsigned int, std::__1::__value_type<unsigned int, int>, std::__1::less<unsigned int>, true>, std::__1::allocator<std::__1::__value_type<unsigned int, int> > >=^{__tree_end_node<std::__1::__tree_node_base<void *> *>}{__compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *> *>, std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<unsigned int, int>, void *> > >={__tree_end_node<std::__1::__tree_node_base<void *> *>=^{__tree_node_base<void *>}}}{__compressed_pair<unsigned long, std::__1::__map_value_compare<unsigned int, std::__1::__value_type<unsigned int, int>, std::__1::less<unsigned int>, true> >=Q}}}16@0:8
v40@0:8{map<unsigned int, int, std::__1::less<unsigned int>, std::__1::allocator<std::__1::pair<const unsigned int, int> > >={__tree<std::__1::__value_type<unsigned int, int>, std::__1::__map_value_compare<unsigned int, std::__1::__value_type<unsigned int, int>, std::__1::less<unsigned int>, true>, std::__1::allocator<std::__1::__value_type<unsigned int, int> > >=^{__tree_end_node<std::__1::__tree_node_base<void *> *>}{__compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *> *>, std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<unsigned int, int>, void *> > >={__tree_end_node<std::__1::__tree_node_base<void *> *>=^{__tree_node_base<void *>}}}{__compressed_pair<unsigned long, std::__1::__map_value_compare<unsigned int, std::__1::__value_type<unsigned int, int>, std::__1::less<unsigned int>, true> >=Q}}}16
@"NSCharacterSet"
{map<unsigned int, unsigned long, std::__1::less<unsigned int>, std::__1::allocator<std::__1::pair<const unsigned int, unsigned long> > >="__tree_"{__tree<std::__1::__value_type<unsigned int, unsigned long>, std::__1::__map_value_compare<unsigned int, std::__1::__value_type<unsigned int, unsigned long>, std::__1::less<unsigned int>, true>, std::__1::allocator<std::__1::__value_type<unsigned int, unsigned long> > >="__begin_node_"^{__tree_end_node<std::__1::__tree_node_base<void *> *>}"__pair1_"{__compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *> *>, std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<unsigned int, unsigned long>, void *> > >="__value_"{__tree_end_node<std::__1::__tree_node_base<void *> *>="__left_"^{__tree_node_base<void *>}}}"__pair3_"{__compressed_pair<unsigned long, std::__1::__map_value_compare<unsigned int, std::__1::__value_type<unsigned int, unsigned long>, std::__1::less<unsigned int>, true> >="__value_"Q}}}
{map<unsigned int, int, std::__1::less<unsigned int>, std::__1::allocator<std::__1::pair<const unsigned int, int> > >="__tree_"{__tree<std::__1::__value_type<unsigned int, int>, std::__1::__map_value_compare<unsigned int, std::__1::__value_type<unsigned int, int>, std::__1::less<unsigned int>, true>, std::__1::allocator<std::__1::__value_type<unsigned int, int> > >="__begin_node_"^{__tree_end_node<std::__1::__tree_node_base<void *> *>}"__pair1_"{__compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *> *>, std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<unsigned int, int>, void *> > >="__value_"{__tree_end_node<std::__1::__tree_node_base<void *> *>="__left_"^{__tree_node_base<void *>}}}"__pair3_"{__compressed_pair<unsigned long, std::__1::__map_value_compare<unsigned int, std::__1::__value_type<unsigned int, int>, std::__1::less<unsigned int>, true> >="__value_"Q}}}
q24@0:8@16
q32@0:8@16q24
q32@0:8@16@24
q40@0:8@16@24q32
@32@0:8@16:24
v40@0:8{?=qiIq}16
{?=qiIq}16@0:8
:16@0:8
v24@0:8:16
{?="value"q"timescale"i"flags"I"epoch"q}
@48@0:8{vector<std::__1::vector<std::__1::vector<float, std::__1::allocator<float> >, std::__1::allocator<std::__1::vector<float, std::__1::allocator<float> > > >, std::__1::allocator<std::__1::vector<std::__1::vector<float, std::__1::allocator<float> >, std::__1::allocator<std::__1::vector<float, std::__1::allocator<float> > > > > >=^{vector<std::__1::vector<float, std::__1::allocator<float> >, std::__1::allocator<std::__1::vector<float, std::__1::allocator<float> > > >}^{vector<std::__1::vector<float, std::__1::allocator<float> >, std::__1::allocator<std::__1::vector<float, std::__1::allocator<float> > > >}{__compressed_pair<std::__1::vector<std::__1::vector<float, std::__1::allocator<float> >, std::__1::allocator<std::__1::vector<float, std::__1::allocator<float> > > > *, std::__1::allocator<std::__1::vector<std::__1::vector<float, std::__1::allocator<float> >, std::__1::allocator<std::__1::vector<float, std::__1::allocator<float> > > > > >=^{vector<std::__1::vector<float, std::__1::allocator<float> >, std::__1::allocator<std::__1::vector<float, std::__1::allocator<float> > > >}}}16^@40
{CGSize=dd}16@0:8
@"NSURL"
{CGSize="width"d"height"d}
@360@0:8{?=^v^v[4Q][4Q]QQQQQQQQQQi}16{?=^v^v[4Q][4Q]QQQQQQQQQQi}184@352
@32@0:8^{vector<CRDetectorUtils::CRTextDetectorQuadFeature, std::__1::allocator<CRDetectorUtils::CRTextDetectorQuadFeature> >=^{CRTextDetectorQuadFeature}^{CRTextDetectorQuadFeature}{__compressed_pair<CRDetectorUtils::CRTextDetectorQuadFeature *, std::__1::allocator<CRDetectorUtils::CRTextDetectorQuadFeature> >=^{CRTextDetectorQuadFeature}}}16r^f24
v32@0:8@16@?24
@"CRDetectorConfiguration"
v144@0:8@16^@24^@32{CGSize=dd}40f56{CGRect={CGPoint=dd}{CGSize=dd}}60{CGRect={CGPoint=dd}{CGSize=dd}}92f124@128@136
B36@0:8@16d24B32
@60@0:8@16@24{CGSize=dd}32B48@52
i32@0:8d16@24
@24@0:8^{_NSZone=}16
v24@0:8@"NSCoder"16
@24@0:8@"NSCoder"16
@64@0:8@16@24B32{CGSize=dd}36B52@56
@40@0:8{_NSRange=QQ}16^@32
{CGPoint=dd}56@0:8{CGPoint=dd}16{CGPoint=dd}32d48
@32@0:8@16^Q24
@40@0:8@16^Q24q32
B40@0:8{_NSRange=QQ}16Q32
{CGRect={CGPoint=dd}{CGSize=dd}}16@0:8
{CGPoint=dd}16@0:8
f16@0:8
v20@0:8f16
v32@0:8{CGSize=dd}16
{CGPoint="x"d"y"d}
{CGRect="origin"{CGPoint="x"d"y"d}"size"{CGSize="width"d"height"d}}
v48@0:8@16{CGSize=dd}24^@40
@40@0:8@"CRRecognizerConfiguration"16@"NSObject<CRTextRecognizerModel>"24^@32
v48@0:8@"NSObject<CRTextRecognizerModelOutput>"16{CGSize=dd}24^@40
@"CRTextSequenceRecognizerModel"
@"CRRegex"
@"NSOrderedSet"
v40@0:8@16^Q24^{vector<espresso_buffer_t, std::__1::allocator<espresso_buffer_t> >=^{?}^{?}{__compressed_pair<espresso_buffer_t *, std::__1::allocator<espresso_buffer_t> >=^{?}}}32
v56@0:8@16@24{CGSize=dd}32^@48
v32@0:8@16Q24
q16@0:8
@"NSNumber"
v44@0:8@16@24^v32S40
v52@0:8@16@24^{_LXLexicon=}32^{_LXLexicon=}40S48
v52@0:8@16@24^v32@40S48
v56@0:8@16^@24^@32^v40@48
d72@0:8@16@24@32@40@48@56^v64
I44@0:8@16I24^d28^v36
B32@0:8@16^{_LXLexicon=}24
v28@0:8@16B24
@24@0:8d16
@68@0:8S16^v20^{_LXLexicon=}28^{_LXLexicon=}36^v44@52Q60
B24@0:8^{_LXLexicon=}16
^{_LXCursor=}16@0:8
v24@0:8^{_LXCursor=}16
{vector<unsigned int, std::__1::allocator<unsigned int> >="__begin_"^I"__end_"^I"__end_cap_"{__compressed_pair<unsigned int *, std::__1::allocator<unsigned int> >="__value_"^I}}
{vector<_NSRange, std::__1::allocator<_NSRange> >="__begin_"^{_NSRange}"__end_"^{_NSRange}"__end_cap_"{__compressed_pair<_NSRange *, std::__1::allocator<_NSRange> >="__value_"^{_NSRange}}}
^{_LXCursor=}
^v24@0:8@16
^{_LXLexicon=}24@0:8@16
^{CVNLPLanguageModel=}24@0:8@16
^{CVNLPLanguageModel=}16@0:8
v24@0:8^{CVNLPLanguageModel=}16
r^{_LXLexicon=}16@0:8
v24@0:8r^{_LXLexicon=}16
^{CVNLPLanguageModel=}
r^{_LXLexicon=}
@"CVNLPLanguageResourceBundle"
^{_LXLexicon=}40@0:8@16@24^@32
@20@0:8B16
@36@0:8@16B24^@28
r^i16@0:8
v24@0:8q16
@32@0:8q16^@24
d24@0:8@16
@32@0:8@"NSDictionary"16^@24
@"CRTextResults"48@0:8@"CRImage"16@"NSDictionary"24@?<v@?d@"NSError">32^@40
@"NSArray"32@0:8q16^@24
@"CRTextRecognizerResults"32@0:8@"NSArray"16@"CRImage"24
@"CRTextDetectorResults"32@0:8@"CRImage"16^@24
@"CRNeuralTextDetector"
@"CRNeuralTextRecognizer"
@64@0:8@16Q24Q32^@40^@48^@56
v40@0:8^@16^@24Q32
@"NSMutableDictionary"
@28@0:8@16i24
@40@0:8Q16Q24Q32
B56@0:8r^{vector<CRDetectorUtils::CRTextDetectorQuadFeature, std::__1::allocator<CRDetectorUtils::CRTextDetectorQuadFeature> >=^{CRTextDetectorQuadFeature}^{CRTextDetectorQuadFeature}{__compressed_pair<CRDetectorUtils::CRTextDetectorQuadFeature *, std::__1::allocator<CRDetectorUtils::CRTextDetectorQuadFeature> >=^{CRTextDetectorQuadFeature}}}16{CGSize=dd}24^{vImage_Buffer=^vQQQ}40@48
B64@0:8r^{vector<CRDetectorUtils::CRTextDetectorQuadFeature, std::__1::allocator<CRDetectorUtils::CRTextDetectorQuadFeature> >=^{CRTextDetectorQuadFeature}^{CRTextDetectorQuadFeature}{__compressed_pair<CRDetectorUtils::CRTextDetectorQuadFeature *, std::__1::allocator<CRDetectorUtils::CRTextDetectorQuadFeature> >=^{CRTextDetectorQuadFeature}}}16{CGSize=dd}24^{vImage_Buffer=^vQQQ}40d48@56
B72@0:8r^{vector<CRDetectorUtils::CRTextDetectorQuadFeature, std::__1::allocator<CRDetectorUtils::CRTextDetectorQuadFeature> >=^{CRTextDetectorQuadFeature}^{CRTextDetectorQuadFeature}{__compressed_pair<CRDetectorUtils::CRTextDetectorQuadFeature *, std::__1::allocator<CRDetectorUtils::CRTextDetectorQuadFeature> >=^{CRTextDetectorQuadFeature}}}16{CGSize=dd}24^{vImage_Buffer=^vQQQ}40d48@56@64
Q32@0:8@16^{valarray<double>=^d^d}24
Q40@0:8@16^{deque<unsigned short, std::__1::allocator<unsigned short> >={__split_buffer<unsigned short *, std::__1::allocator<unsigned short *> >=^^S^^S^^S{__compressed_pair<unsigned short **, std::__1::allocator<unsigned short *> >=^^S}}Q{__compressed_pair<unsigned long, std::__1::allocator<unsigned short> >=Q}}24@32
B48@0:8^{RectForest<unsigned short, double>=^^?Q{vImage_Buffer=^vQQQ}{QuantizedScoreMap=QQ{valarray<unsigned char>=**}}{deque<std::__1::valarray<double>, std::__1::allocator<std::__1::valarray<double> > >={__split_buffer<std::__1::valarray<double> *, std::__1::allocator<std::__1::valarray<double> *> >=^^{valarray<double>}^^{valarray<double>}^^{valarray<double>}{__compressed_pair<std::__1::valarray<double> **, std::__1::allocator<std::__1::valarray<double> *> >=^^{valarray<double>}}}Q{__compressed_pair<unsigned long, std::__1::allocator<std::__1::valarray<double> > >=Q}}{deque<std::__1::deque<std::__1::pair<unsigned short, unsigned short>, std::__1::allocator<std::__1::pair<unsigned short, unsigned short> > >, std::__1::allocator<std::__1::deque<std::__1::pair<unsigned short, unsigned short>, std::__1::allocator<std::__1::pair<unsigned short, unsigned short> > > > >={__split_buffer<std::__1::deque<std::__1::pair<unsigned short, unsigned short>, std::__1::allocator<std::__1::pair<unsigned short, unsigned short> > > *, std::__1::allocator<std::__1::deque<std::__1::pair<unsigned short, unsigned short>, std::__1::allocator<std::__1::pair<unsigned short, unsigned short> > > *> >=^^{deque<std::__1::pair<unsigned short, unsigned short>, std::__1::allocator<std::__1::pair<unsigned short, unsigned short> > >}^^{deque<std::__1::pair<unsigned short, unsigned short>, std::__1::allocator<std::__1::pair<unsigned short, unsigned short> > >}^^{deque<std::__1::pair<unsigned short, unsigned short>, std::__1::allocator<std::__1::pair<unsigned short, unsigned short> > >}{__compressed_pair<std::__1::deque<std::__1::pair<unsigned short, unsigned short>, std::__1::allocator<std::__1::pair<unsigned short, unsigned short> > > **, std::__1::allocator<std::__1::deque<std::__1::pair<unsigned short, unsigned short>, std::__1::allocator<std::__1::pair<unsigned short, unsigned short> > > *> >=^^{deque<std::__1::pair<unsigned short, unsigned short>, std::__1::allocator<std::__1::pair<unsigned short, unsigned short> > >}}}Q{__compressed_pair<unsigned long, std::__1::allocator<std::__1::deque<std::__1::pair<unsigned short, unsigned short>, std::__1::allocator<std::__1::pair<unsigned short, unsigned short> > > > >=Q}}{map<nms::ForestLevelType, nms::RepresentationDimType, std::__1::less<nms::ForestLevelType>, std::__1::allocator<std::__1::pair<const nms::ForestLevelType, nms::RepresentationDimType> > >={__tree<std::__1::__value_type<nms::ForestLevelType, nms::RepresentationDimType>, std::__1::__map_value_compare<nms::ForestLevelType, std::__1::__value_type<nms::ForestLevelType, nms::RepresentationDimType>, std::__1::less<nms::ForestLevelType>, true>, std::__1::allocator<std::__1::__value_type<nms::ForestLevelType, nms::RepresentationDimType> > >=^{__tree_end_node<std::__1::__tree_node_base<void *> *>}{__compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *> *>, std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<nms::ForestLevelType, nms::RepresentationDimType>, void *> > >={__tree_end_node<std::__1::__tree_node_base<void *> *>=^{__tree_node_base<void *>}}}{__compressed_pair<unsigned long, std::__1::__map_value_compare<nms::ForestLevelType, std::__1::__value_type<nms::ForestLevelType, nms::RepresentationDimType>, std::__1::less<nms::ForestLevelType>, true> >=Q}}}}16@24Q32@40
B80@0:8^{RectForest<unsigned short, double>=^^?Q{vImage_Buffer=^vQQQ}{QuantizedScoreMap=QQ{valarray<unsigned char>=**}}{deque<std::__1::valarray<double>, std::__1::allocator<std::__1::valarray<double> > >={__split_buffer<std::__1::valarray<double> *, std::__1::allocator<std::__1::valarray<double> *> >=^^{valarray<double>}^^{valarray<double>}^^{valarray<double>}{__compressed_pair<std::__1::valarray<double> **, std::__1::allocator<std::__1::valarray<double> *> >=^^{valarray<double>}}}Q{__compressed_pair<unsigned long, std::__1::allocator<std::__1::valarray<double> > >=Q}}{deque<std::__1::deque<std::__1::pair<unsigned short, unsigned short>, std::__1::allocator<std::__1::pair<unsigned short, unsigned short> > >, std::__1::allocator<std::__1::deque<std::__1::pair<unsigned short, unsigned short>, std::__1::allocator<std::__1::pair<unsigned short, unsigned short> > > > >={__split_buffer<std::__1::deque<std::__1::pair<unsigned short, unsigned short>, std::__1::allocator<std::__1::pair<unsigned short, unsigned short> > > *, std::__1::allocator<std::__1::deque<std::__1::pair<unsigned short, unsigned short>, std::__1::allocator<std::__1::pair<unsigned short, unsigned short> > > *> >=^^{deque<std::__1::pair<unsigned short, unsigned short>, std::__1::allocator<std::__1::pair<unsigned short, unsigned short> > >}^^{deque<std::__1::pair<unsigned short, unsigned short>, std::__1::allocator<std::__1::pair<unsigned short, unsigned short> > >}^^{deque<std::__1::pair<unsigned short, unsigned short>, std::__1::allocator<std::__1::pair<unsigned short, unsigned short> > >}{__compressed_pair<std::__1::deque<std::__1::pair<unsigned short, unsigned short>, std::__1::allocator<std::__1::pair<unsigned short, unsigned short> > > **, std::__1::allocator<std::__1::deque<std::__1::pair<unsigned short, unsigned short>, std::__1::allocator<std::__1::pair<unsigned short, unsigned short> > > *> >=^^{deque<std::__1::pair<unsigned short, unsigned short>, std::__1::allocator<std::__1::pair<unsigned short, unsigned short> > >}}}Q{__compressed_pair<unsigned long, std::__1::allocator<std::__1::deque<std::__1::pair<unsigned short, unsigned short>, std::__1::allocator<std::__1::pair<unsigned short, unsigned short> > > > >=Q}}{map<nms::ForestLevelType, nms::RepresentationDimType, std::__1::less<nms::ForestLevelType>, std::__1::allocator<std::__1::pair<const nms::ForestLevelType, nms::RepresentationDimType> > >={__tree<std::__1::__value_type<nms::ForestLevelType, nms::RepresentationDimType>, std::__1::__map_value_compare<nms::ForestLevelType, std::__1::__value_type<nms::ForestLevelType, nms::RepresentationDimType>, std::__1::less<nms::ForestLevelType>, true>, std::__1::allocator<std::__1::__value_type<nms::ForestLevelType, nms::RepresentationDimType> > >=^{__tree_end_node<std::__1::__tree_node_base<void *> *>}{__compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *> *>, std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<nms::ForestLevelType, nms::RepresentationDimType>, void *> > >={__tree_end_node<std::__1::__tree_node_base<void *> *>=^{__tree_node_base<void *>}}}{__compressed_pair<unsigned long, std::__1::__map_value_compare<nms::ForestLevelType, std::__1::__value_type<nms::ForestLevelType, nms::RepresentationDimType>, std::__1::less<nms::ForestLevelType>, true> >=Q}}}}16r^{vector<CRDetectorUtils::CRTextDetectorQuadFeature, std::__1::allocator<CRDetectorUtils::CRTextDetectorQuadFeature> >=^{CRTextDetectorQuadFeature}^{CRTextDetectorQuadFeature}{__compressed_pair<CRDetectorUtils::CRTextDetectorQuadFeature *, std::__1::allocator<CRDetectorUtils::CRTextDetectorQuadFeature> >=^{CRTextDetectorQuadFeature}}}24Q32{CGSize=dd}40^{vImage_Buffer=^vQQQ}56d64@72
B88@0:8^{RectForest<unsigned short, double>=^^?Q{vImage_Buffer=^vQQQ}{QuantizedScoreMap=QQ{valarray<unsigned char>=**}}{deque<std::__1::valarray<double>, std::__1::allocator<std::__1::valarray<double> > >={__split_buffer<std::__1::valarray<double> *, std::__1::allocator<std::__1::valarray<double> *> >=^^{valarray<double>}^^{valarray<double>}^^{valarray<double>}{__compressed_pair<std::__1::valarray<double> **, std::__1::allocator<std::__1::valarray<double> *> >=^^{valarray<double>}}}Q{__compressed_pair<unsigned long, std::__1::allocator<std::__1::valarray<double> > >=Q}}{deque<std::__1::deque<std::__1::pair<unsigned short, unsigned short>, std::__1::allocator<std::__1::pair<unsigned short, unsigned short> > >, std::__1::allocator<std::__1::deque<std::__1::pair<unsigned short, unsigned short>, std::__1::allocator<std::__1::pair<unsigned short, unsigned short> > > > >={__split_buffer<std::__1::deque<std::__1::pair<unsigned short, unsigned short>, std::__1::allocator<std::__1::pair<unsigned short, unsigned short> > > *, std::__1::allocator<std::__1::deque<std::__1::pair<unsigned short, unsigned short>, std::__1::allocator<std::__1::pair<unsigned short, unsigned short> > > *> >=^^{deque<std::__1::pair<unsigned short, unsigned short>, std::__1::allocator<std::__1::pair<unsigned short, unsigned short> > >}^^{deque<std::__1::pair<unsigned short, unsigned short>, std::__1::allocator<std::__1::pair<unsigned short, unsigned short> > >}^^{deque<std::__1::pair<unsigned short, unsigned short>, std::__1::allocator<std::__1::pair<unsigned short, unsigned short> > >}{__compressed_pair<std::__1::deque<std::__1::pair<unsigned short, unsigned short>, std::__1::allocator<std::__1::pair<unsigned short, unsigned short> > > **, std::__1::allocator<std::__1::deque<std::__1::pair<unsigned short, unsigned short>, std::__1::allocator<std::__1::pair<unsigned short, unsigned short> > > *> >=^^{deque<std::__1::pair<unsigned short, unsigned short>, std::__1::allocator<std::__1::pair<unsigned short, unsigned short> > >}}}Q{__compressed_pair<unsigned long, std::__1::allocator<std::__1::deque<std::__1::pair<unsigned short, unsigned short>, std::__1::allocator<std::__1::pair<unsigned short, unsigned short> > > > >=Q}}{map<nms::ForestLevelType, nms::RepresentationDimType, std::__1::less<nms::ForestLevelType>, std::__1::allocator<std::__1::pair<const nms::ForestLevelType, nms::RepresentationDimType> > >={__tree<std::__1::__value_type<nms::ForestLevelType, nms::RepresentationDimType>, std::__1::__map_value_compare<nms::ForestLevelType, std::__1::__value_type<nms::ForestLevelType, nms::RepresentationDimType>, std::__1::less<nms::ForestLevelType>, true>, std::__1::allocator<std::__1::__value_type<nms::ForestLevelType, nms::RepresentationDimType> > >=^{__tree_end_node<std::__1::__tree_node_base<void *> *>}{__compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *> *>, std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<nms::ForestLevelType, nms::RepresentationDimType>, void *> > >={__tree_end_node<std::__1::__tree_node_base<void *> *>=^{__tree_node_base<void *>}}}{__compressed_pair<unsigned long, std::__1::__map_value_compare<nms::ForestLevelType, std::__1::__value_type<nms::ForestLevelType, nms::RepresentationDimType>, std::__1::less<nms::ForestLevelType>, true> >=Q}}}}16r^{vector<CRDetectorUtils::CRTextDetectorQuadFeature, std::__1::allocator<CRDetectorUtils::CRTextDetectorQuadFeature> >=^{CRTextDetectorQuadFeature}^{CRTextDetectorQuadFeature}{__compressed_pair<CRDetectorUtils::CRTextDetectorQuadFeature *, std::__1::allocator<CRDetectorUtils::CRTextDetectorQuadFeature> >=^{CRTextDetectorQuadFeature}}}24Q32{CGSize=dd}40^{vImage_Buffer=^vQQQ}56d64@72@80
v32@0:8@16r^{valarray<double>=^d^d}24
@24@0:8r^{valarray<double>=^d^d}16
@40@0:8r^{RectForest<unsigned short, double>=^^?Q{vImage_Buffer=^vQQQ}{QuantizedScoreMap=QQ{valarray<unsigned char>=**}}{deque<std::__1::valarray<double>, std::__1::allocator<std::__1::valarray<double> > >={__split_buffer<std::__1::valarray<double> *, std::__1::allocator<std::__1::valarray<double> *> >=^^{valarray<double>}^^{valarray<double>}^^{valarray<double>}{__compressed_pair<std::__1::valarray<double> **, std::__1::allocator<std::__1::valarray<double> *> >=^^{valarray<double>}}}Q{__compressed_pair<unsigned long, std::__1::allocator<std::__1::valarray<double> > >=Q}}{deque<std::__1::deque<std::__1::pair<unsigned short, unsigned short>, std::__1::allocator<std::__1::pair<unsigned short, unsigned short> > >, std::__1::allocator<std::__1::deque<std::__1::pair<unsigned short, unsigned short>, std::__1::allocator<std::__1::pair<unsigned short, unsigned short> > > > >={__split_buffer<std::__1::deque<std::__1::pair<unsigned short, unsigned short>, std::__1::allocator<std::__1::pair<unsigned short, unsigned short> > > *, std::__1::allocator<std::__1::deque<std::__1::pair<unsigned short, unsigned short>, std::__1::allocator<std::__1::pair<unsigned short, unsigned short> > > *> >=^^{deque<std::__1::pair<unsigned short, unsigned short>, std::__1::allocator<std::__1::pair<unsigned short, unsigned short> > >}^^{deque<std::__1::pair<unsigned short, unsigned short>, std::__1::allocator<std::__1::pair<unsigned short, unsigned short> > >}^^{deque<std::__1::pair<unsigned short, unsigned short>, std::__1::allocator<std::__1::pair<unsigned short, unsigned short> > >}{__compressed_pair<std::__1::deque<std::__1::pair<unsigned short, unsigned short>, std::__1::allocator<std::__1::pair<unsigned short, unsigned short> > > **, std::__1::allocator<std::__1::deque<std::__1::pair<unsigned short, unsigned short>, std::__1::allocator<std::__1::pair<unsigned short, unsigned short> > > *> >=^^{deque<std::__1::pair<unsigned short, unsigned short>, std::__1::allocator<std::__1::pair<unsigned short, unsigned short> > >}}}Q{__compressed_pair<unsigned long, std::__1::allocator<std::__1::deque<std::__1::pair<unsigned short, unsigned short>, std::__1::allocator<std::__1::pair<unsigned short, unsigned short> > > > >=Q}}{map<nms::ForestLevelType, nms::RepresentationDimType, std::__1::less<nms::ForestLevelType>, std::__1::allocator<std::__1::pair<const nms::ForestLevelType, nms::RepresentationDimType> > >={__tree<std::__1::__value_type<nms::ForestLevelType, nms::RepresentationDimType>, std::__1::__map_value_compare<nms::ForestLevelType, std::__1::__value_type<nms::ForestLevelType, nms::RepresentationDimType>, std::__1::less<nms::ForestLevelType>, true>, std::__1::allocator<std::__1::__value_type<nms::ForestLevelType, nms::RepresentationDimType> > >=^{__tree_end_node<std::__1::__tree_node_base<void *> *>}{__compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *> *>, std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<nms::ForestLevelType, nms::RepresentationDimType>, void *> > >={__tree_end_node<std::__1::__tree_node_base<void *> *>=^{__tree_node_base<void *>}}}{__compressed_pair<unsigned long, std::__1::__map_value_compare<nms::ForestLevelType, std::__1::__value_type<nms::ForestLevelType, nms::RepresentationDimType>, std::__1::less<nms::ForestLevelType>, true> >=Q}}}}16Q24@32
v40@0:8^{slice_array<double>=^dQQ}16Q24r^{CGRect={CGPoint=dd}{CGSize=dd}}32
v48@0:8^{slice_array<double>=^dQQ}16Q24r^{valarray<double>=^d^d}32Q40
v56@0:8^{slice_array<double>=^dQQ}16Q24r^{CRTextDetectorQuad=[4{CGPoint=dd}]{CGPoint=dd}ddB}32{CGSize=dd}40
{deque<nms::RectForest<unsigned short, double>, std::__1::allocator<nms::RectForest<unsigned short, double> > >="__map_"{__split_buffer<nms::RectForest<unsigned short, double> *, std::__1::allocator<nms::RectForest<unsigned short, double> *> >="__first_"^^{RectForest<unsigned short, double>}"__begin_"^^{RectForest<unsigned short, double>}"__end_"^^{RectForest<unsigned short, double>}"__end_cap_"{__compressed_pair<nms::RectForest<unsigned short, double> **, std::__1::allocator<nms::RectForest<unsigned short, double> *> >="__value_"^^{RectForest<unsigned short, double>}}}"__start_"Q"__size_"{__compressed_pair<unsigned long, std::__1::allocator<nms::RectForest<unsigned short, double> > >="__value_"Q}}
{PyramidNMS<unsigned short, double, unsigned char>="_vptr$PyramidNMS"^^?"fullySpecifiedForests"{deque<bool, std::__1::allocator<bool> >="__map_"{__split_buffer<bool *, std::__1::allocator<bool *> >="__first_"^^B"__begin_"^^B"__end_"^^B"__end_cap_"{__compressed_pair<bool **, std::__1::allocator<bool *> >="__value_"^^B}}"__start_"Q"__size_"{__compressed_pair<unsigned long, std::__1::allocator<bool> >="__value_"Q}}"masksValid"{deque<std::__1::valarray<bool>, std::__1::allocator<std::__1::valarray<bool> > >="__map_"{__split_buffer<std::__1::valarray<bool> *, std::__1::allocator<std::__1::valarray<bool> *> >="__first_"^^{valarray<bool>}"__begin_"^^{valarray<bool>}"__end_"^^{valarray<bool>}"__end_cap_"{__compressed_pair<std::__1::valarray<bool> **, std::__1::allocator<std::__1::valarray<bool> *> >="__value_"^^{valarray<bool>}}}"__start_"Q"__size_"{__compressed_pair<unsigned long, std::__1::allocator<std::__1::valarray<bool> > >="__value_"Q}}"masksInvalid"{deque<std::__1::valarray<bool>, std::__1::allocator<std::__1::valarray<bool> > >="__map_"{__split_buffer<std::__1::valarray<bool> *, std::__1::allocator<std::__1::valarray<bool> *> >="__first_"^^{valarray<bool>}"__begin_"^^{valarray<bool>}"__end_"^^{valarray<bool>}"__end_cap_"{__compressed_pair<std::__1::valarray<bool> **, std::__1::allocator<std::__1::valarray<bool> *> >="__value_"^^{valarray<bool>}}}"__start_"Q"__size_"{__compressed_pair<unsigned long, std::__1::allocator<std::__1::valarray<bool> > >="__value_"Q}}"masksPendingInvalid"{deque<std::__1::valarray<bool>, std::__1::allocator<std::__1::valarray<bool> > >="__map_"{__split_buffer<std::__1::valarray<bool> *, std::__1::allocator<std::__1::valarray<bool> *> >="__first_"^^{valarray<bool>}"__begin_"^^{valarray<bool>}"__end_"^^{valarray<bool>}"__end_cap_"{__compressed_pair<std::__1::valarray<bool> **, std::__1::allocator<std::__1::valarray<bool> *> >="__value_"^^{valarray<bool>}}}"__start_"Q"__size_"{__compressed_pair<unsigned long, std::__1::allocator<std::__1::valarray<bool> > >="__value_"Q}}"histsWordCoincide"{deque<std::__1::valarray<unsigned char>, std::__1::allocator<std::__1::valarray<unsigned char> > >="__map_"{__split_buffer<std::__1::valarray<unsigned char> *, std::__1::allocator<std::__1::valarray<unsigned char> *> >="__first_"^^{valarray<unsigned char>}"__begin_"^^{valarray<unsigned char>}"__end_"^^{valarray<unsigned char>}"__end_cap_"{__compressed_pair<std::__1::valarray<unsigned char> **, std::__1::allocator<std::__1::valarray<unsigned char> *> >="__value_"^^{valarray<unsigned char>}}}"__start_"Q"__size_"{__compressed_pair<unsigned long, std::__1::allocator<std::__1::valarray<unsigned char> > >="__value_"Q}}"idxsWordCoincide"{deque<std::__1::deque<std::__1::deque<std::__1::deque<unsigned short, std::__1::allocator<unsigned short> >, std::__1::allocator<std::__1::deque<unsigned short, std::__1::allocator<unsigned short> > > >, std::__1::allocator<std::__1::deque<std::__1::deque<unsigned short, std::__1::allocator<unsigned short> >, std::__1::allocator<std::__1::deque<unsigned short, std::__1::allocator<unsigned short> > > > > >, std::__1::allocator<std::__1::deque<std::__1::deque<std::__1::deque<unsigned short, std::__1::allocator<unsigned short> >, std::__1::allocator<std::__1::deque<unsigned short, std::__1::allocator<unsigned short> > > >, std::__1::allocator<std::__1::deque<std::__1::deque<unsigned short, std::__1::allocator<unsigned short> >, std::__1::allocator<std::__1::deque<unsigned short, std::__1::allocator<unsigned short> > > > > > > >="__map_"{__split_buffer<std::__1::deque<std::__1::deque<std::__1::deque<unsigned short, std::__1::allocator<unsigned short> >, std::__1::allocator<std::__1::deque<unsigned short, std::__1::allocator<unsigned short> > > >, std::__1::allocator<std::__1::deque<std::__1::deque<unsigned short, std::__1::allocator<unsigned short> >, std::__1::allocator<std::__1::deque<unsigned short, std::__1::allocator<unsigned short> > > > > > *, std::__1::allocator<std::__1::deque<std::__1::deque<std::__1::deque<unsigned short, std::__1::allocator<unsigned short> >, std::__1::allocator<std::__1::deque<unsigned short, std::__1::allocator<unsigned short> > > >, std::__1::allocator<std::__1::deque<std::__1::deque<unsigned short, std::__1::allocator<unsigned short> >, std::__1::allocator<std::__1::deque<unsigned short, std::__1::allocator<unsigned short> > > > > > *> >="__first_"^^{deque<std::__1::deque<std::__1::deque<unsigned short, std::__1::allocator<unsigned short> >, std::__1::allocator<std::__1::deque<unsigned short, std::__1::allocator<unsigned short> > > >, std::__1::allocator<std::__1::deque<std::__1::deque<unsigned short, std::__1::allocator<unsigned short> >, std::__1::allocator<std::__1::deque<unsigned short, std::__1::allocator<unsigned short> > > > > >}"__begin_"^^{deque<std::__1::deque<std::__1::deque<unsigned short, std::__1::allocator<unsigned short> >, std::__1::allocator<std::__1::deque<unsigned short, std::__1::allocator<unsigned short> > > >, std::__1::allocator<std::__1::deque<std::__1::deque<unsigned short, std::__1::allocator<unsigned short> >, std::__1::allocator<std::__1::deque<unsigned short, std::__1::allocator<unsigned short> > > > > >}"__end_"^^{deque<std::__1::deque<std::__1::deque<unsigned short, std::__1::allocator<unsigned short> >, std::__1::allocator<std::__1::deque<unsigned short, std::__1::allocator<unsigned short> > > >, std::__1::allocator<std::__1::deque<std::__1::deque<unsigned short, std::__1::allocator<unsigned short> >, std::__1::allocator<std::__1::deque<unsigned short, std::__1::allocator<unsigned short> > > > > >}"__end_cap_"{__compressed_pair<std::__1::deque<std::__1::deque<std::__1::deque<unsigned short, std::__1::allocator<unsigned short> >, std::__1::allocator<std::__1::deque<unsigned short, std::__1::allocator<unsigned short> > > >, std::__1::allocator<std::__1::deque<std::__1::deque<unsigned short, std::__1::allocator<unsigned short> >, std::__1::allocator<std::__1::deque<unsigned short, std::__1::allocator<unsigned short> > > > > > **, std::__1::allocator<std::__1::deque<std::__1::deque<std::__1::deque<unsigned short, std::__1::allocator<unsigned short> >, std::__1::allocator<std::__1::deque<unsigned short, std::__1::allocator<unsigned short> > > >, std::__1::allocator<std::__1::deque<std::__1::deque<unsigned short, std::__1::allocator<unsigned short> >, std::__1::allocator<std::__1::deque<unsigned short, std::__1::allocator<unsigned short> > > > > > *> >="__value_"^^{deque<std::__1::deque<std::__1::deque<unsigned short, std::__1::allocator<unsigned short> >, std::__1::allocator<std::__1::deque<unsigned short, std::__1::allocator<unsigned short> > > >, std::__1::allocator<std::__1::deque<std::__1::deque<unsigned short, std::__1::allocator<unsigned short> >, std::__1::allocator<std::__1::deque<unsigned short, std::__1::allocator<unsigned short> > > > > >}}}"__start_"Q"__size_"{__compressed_pair<unsigned long, std::__1::allocator<std::__1::deque<std::__1::deque<std::__1::deque<unsigned short, std::__1::allocator<unsigned short> >, std::__1::allocator<std::__1::deque<unsigned short, std::__1::allocator<unsigned short> > > >, std::__1::allocator<std::__1::deque<std::__1::deque<unsigned short, std::__1::allocator<unsigned short> >, std::__1::allocator<std::__1::deque<unsigned short, std::__1::allocator<unsigned short> > > > > > > >="__value_"Q}}"histsWordContain"{deque<std::__1::valarray<unsigned char>, std::__1::allocator<std::__1::valarray<unsigned char> > >="__map_"{__split_buffer<std::__1::valarray<unsigned char> *, std::__1::allocator<std::__1::valarray<unsigned char> *> >="__first_"^^{valarray<unsigned char>}"__begin_"^^{valarray<unsigned char>}"__end_"^^{valarray<unsigned char>}"__end_cap_"{__compressed_pair<std::__1::valarray<unsigned char> **, std::__1::allocator<std::__1::valarray<unsigned char> *> >="__value_"^^{valarray<unsigned char>}}}"__start_"Q"__size_"{__compressed_pair<unsigned long, std::__1::allocator<std::__1::valarray<unsigned char> > >="__value_"Q}}"idxsWordContain"{deque<std::__1::deque<std::__1::deque<std::__1::deque<unsigned short, std::__1::allocator<unsigned short> >, std::__1::allocator<std::__1::deque<unsigned short, std::__1::allocator<unsigned short> > > >, std::__1::allocator<std::__1::deque<std::__1::deque<unsigned short, std::__1::allocator<unsigned short> >, std::__1::allocator<std::__1::deque<unsigned short, std::__1::allocator<unsigned short> > > > > >, std::__1::allocator<std::__1::deque<std::__1::deque<std::__1::deque<unsigned short, std::__1::allocator<unsigned short> >, std::__1::allocator<std::__1::deque<unsigned short, std::__1::allocator<unsigned short> > > >, std::__1::allocator<std::__1::deque<std::__1::deque<unsigned short, std::__1::allocator<unsigned short> >, std::__1::allocator<std::__1::deque<unsigned short, std::__1::allocator<unsigned short> > > > > > > >="__map_"{__split_buffer<std::__1::deque<std::__1::deque<std::__1::deque<unsigned short, std::__1::allocator<unsigned short> >, std::__1::allocator<std::__1::deque<unsigned short, std::__1::allocator<unsigned short> > > >, std::__1::allocator<std::__1::deque<std::__1::deque<unsigned short, std::__1::allocator<unsigned short> >, std::__1::allocator<std::__1::deque<unsigned short, std::__1::allocator<unsigned short> > > > > > *, std::__1::allocator<std::__1::deque<std::__1::deque<std::__1::deque<unsigned short, std::__1::allocator<unsigned short> >, std::__1::allocator<std::__1::deque<unsigned short, std::__1::allocator<unsigned short> > > >, std::__1::allocator<std::__1::deque<std::__1::deque<unsigned short, std::__1::allocator<unsigned short> >, std::__1::allocator<std::__1::deque<unsigned short, std::__1::allocator<unsigned short> > > > > > *> >="__first_"^^{deque<std::__1::deque<std::__1::deque<unsigned short, std::__1::allocator<unsigned short> >, std::__1::allocator<std::__1::deque<unsigned short, std::__1::allocator<unsigned short> > > >, std::__1::allocator<std::__1::deque<std::__1::deque<unsigned short, std::__1::allocator<unsigned short> >, std::__1::allocator<std::__1::deque<unsigned short, std::__1::allocator<unsigned short> > > > > >}"__begin_"^^{deque<std::__1::deque<std::__1::deque<unsigned short, std::__1::allocator<unsigned short> >, std::__1::allocator<std::__1::deque<unsigned short, std::__1::allocator<unsigned short> > > >, std::__1::allocator<std::__1::deque<std::__1::deque<unsigned short, std::__1::allocator<unsigned short> >, std::__1::allocator<std::__1::deque<unsigned short, std::__1::allocator<unsigned short> > > > > >}"__end_"^^{deque<std::__1::deque<std::__1::deque<unsigned short, std::__1::allocator<unsigned short> >, std::__1::allocator<std::__1::deque<unsigned short, std::__1::allocator<unsigned short> > > >, std::__1::allocator<std::__1::deque<std::__1::deque<unsigned short, std::__1::allocator<unsigned short> >, std::__1::allocator<std::__1::deque<unsigned short, std::__1::allocator<unsigned short> > > > > >}"__end_cap_"{__compressed_pair<std::__1::deque<std::__1::deque<std::__1::deque<unsigned short, std::__1::allocator<unsigned short> >, std::__1::allocator<std::__1::deque<unsigned short, std::__1::allocator<unsigned short> > > >, std::__1::allocator<std::__1::deque<std::__1::deque<unsigned short, std::__1::allocator<unsigned short> >, std::__1::allocator<std::__1::deque<unsigned short, std::__1::allocator<unsigned short> > > > > > **, std::__1::allocator<std::__1::deque<std::__1::deque<std::__1::deque<unsigned short, std::__1::allocator<unsigned short> >, std::__1::allocator<std::__1::deque<unsigned short, std::__1::allocator<unsigned short> > > >, std::__1::allocator<std::__1::deque<std::__1::deque<unsigned short, std::__1::allocator<unsigned short> >, std::__1::allocator<std::__1::deque<unsigned short, std::__1::allocator<unsigned short> > > > > > *> >="__value_"^^{deque<std::__1::deque<std::__1::deque<unsigned short, std::__1::allocator<unsigned short> >, std::__1::allocator<std::__1::deque<unsigned short, std::__1::allocator<unsigned short> > > >, std::__1::allocator<std::__1::deque<std::__1::deque<unsigned short, std::__1::allocator<unsigned short> >, std::__1::allocator<std::__1::deque<unsigned short, std::__1::allocator<unsigned short> > > > > >}}}"__start_"Q"__size_"{__compressed_pair<unsigned long, std::__1::allocator<std::__1::deque<std::__1::deque<std::__1::deque<unsigned short, std::__1::allocator<unsigned short> >, std::__1::allocator<std::__1::deque<unsigned short, std::__1::allocator<unsigned short> > > >, std::__1::allocator<std::__1::deque<std::__1::deque<unsigned short, std::__1::allocator<unsigned short> >, std::__1::allocator<std::__1::deque<unsigned short, std::__1::allocator<unsigned short> > > > > > > >="__value_"Q}}"histsWordConstitute"{deque<std::__1::valarray<unsigned char>, std::__1::allocator<std::__1::valarray<unsigned char> > >="__map_"{__split_buffer<std::__1::valarray<unsigned char> *, std::__1::allocator<std::__1::valarray<unsigned char> *> >="__first_"^^{valarray<unsigned char>}"__begin_"^^{valarray<unsigned char>}"__end_"^^{valarray<unsigned char>}"__end_cap_"{__compressed_pair<std::__1::valarray<unsigned char> **, std::__1::allocator<std::__1::valarray<unsigned char> *> >="__value_"^^{valarray<unsigned char>}}}"__start_"Q"__size_"{__compressed_pair<unsigned long, std::__1::allocator<std::__1::valarray<unsigned char> > >="__value_"Q}}"idxsWordConstitute"{deque<std::__1::deque<std::__1::deque<std::__1::deque<unsigned short, std::__1::allocator<unsigned short> >, std::__1::allocator<std::__1::deque<unsigned short, std::__1::allocator<unsigned short> > > >, std::__1::allocator<std::__1::deque<std::__1::deque<unsigned short, std::__1::allocator<unsigned short> >, std::__1::allocator<std::__1::deque<unsigned short, std::__1::allocator<unsigned short> > > > > >, std::__1::allocator<std::__1::deque<std::__1::deque<std::__1::deque<unsigned short, std::__1::allocator<unsigned short> >, std::__1::allocator<std::__1::deque<unsigned short, std::__1::allocator<unsigned short> > > >, std::__1::allocator<std::__1::deque<std::__1::deque<unsigned short, std::__1::allocator<unsigned short> >, std::__1::allocator<std::__1::deque<unsigned short, std::__1::allocator<unsigned short> > > > > > > >="__map_"{__split_buffer<std::__1::deque<std::__1::deque<std::__1::deque<unsigned short, std::__1::allocator<unsigned short> >, std::__1::allocator<std::__1::deque<unsigned short, std::__1::allocator<unsigned short> > > >, std::__1::allocator<std::__1::deque<std::__1::deque<unsigned short, std::__1::allocator<unsigned short> >, std::__1::allocator<std::__1::deque<unsigned short, std::__1::allocator<unsigned short> > > > > > *, std::__1::allocator<std::__1::deque<std::__1::deque<std::__1::deque<unsigned short, std::__1::allocator<unsigned short> >, std::__1::allocator<std::__1::deque<unsigned short, std::__1::allocator<unsigned short> > > >, std::__1::allocator<std::__1::deque<std::__1::deque<unsigned short, std::__1::allocator<unsigned short> >, std::__1::allocator<std::__1::deque<unsigned short, std::__1::allocator<unsigned short> > > > > > *> >="__first_"^^{deque<std::__1::deque<std::__1::deque<unsigned short, std::__1::allocator<unsigned short> >, std::__1::allocator<std::__1::deque<unsigned short, std::__1::allocator<unsigned short> > > >, std::__1::allocator<std::__1::deque<std::__1::deque<unsigned short, std::__1::allocator<unsigned short> >, std::__1::allocator<std::__1::deque<unsigned short, std::__1::allocator<unsigned short> > > > > >}"__begin_"^^{deque<std::__1::deque<std::__1::deque<unsigned short, std::__1::allocator<unsigned short> >, std::__1::allocator<std::__1::deque<unsigned short, std::__1::allocator<unsigned short> > > >, std::__1::allocator<std::__1::deque<std::__1::deque<unsigned short, std::__1::allocator<unsigned short> >, std::__1::allocator<std::__1::deque<unsigned short, std::__1::allocator<unsigned short> > > > > >}"__end_"^^{deque<std::__1::deque<std::__1::deque<unsigned short, std::__1::allocator<unsigned short> >, std::__1::allocator<std::__1::deque<unsigned short, std::__1::allocator<unsigned short> > > >, std::__1::allocator<std::__1::deque<std::__1::deque<unsigned short, std::__1::allocator<unsigned short> >, std::__1::allocator<std::__1::deque<unsigned short, std::__1::allocator<unsigned short> > > > > >}"__end_cap_"{__compressed_pair<std::__1::deque<std::__1::deque<std::__1::deque<unsigned short, std::__1::allocator<unsigned short> >, std::__1::allocator<std::__1::deque<unsigned short, std::__1::allocator<unsigned short> > > >, std::__1::allocator<std::__1::deque<std::__1::deque<unsigned short, std::__1::allocator<unsigned short> >, std::__1::allocator<std::__1::deque<unsigned short, std::__1::allocator<unsigned short> > > > > > **, std::__1::allocator<std::__1::deque<std::__1::deque<std::__1::deque<unsigned short, std::__1::allocator<unsigned short> >, std::__1::allocator<std::__1::deque<unsigned short, std::__1::allocator<unsigned short> > > >, std::__1::allocator<std::__1::deque<std::__1::deque<unsigned short, std::__1::allocator<unsigned short> >, std::__1::allocator<std::__1::deque<unsigned short, std::__1::allocator<unsigned short> > > > > > *> >="__value_"^^{deque<std::__1::deque<std::__1::deque<unsigned short, std::__1::allocator<unsigned short> >, std::__1::allocator<std::__1::deque<unsigned short, std::__1::allocator<unsigned short> > > >, std::__1::allocator<std::__1::deque<std::__1::deque<unsigned short, std::__1::allocator<unsigned short> >, std::__1::allocator<std::__1::deque<unsigned short, std::__1::allocator<unsigned short> > > > > >}}}"__start_"Q"__size_"{__compressed_pair<unsigned long, std::__1::allocator<std::__1::deque<std::__1::deque<std::__1::deque<unsigned short, std::__1::allocator<unsigned short> >, std::__1::allocator<std::__1::deque<unsigned short, std::__1::allocator<unsigned short> > > >, std::__1::allocator<std::__1::deque<std::__1::deque<unsigned short, std::__1::allocator<unsigned short> >, std::__1::allocator<std::__1::deque<unsigned short, std::__1::allocator<unsigned short> > > > > > > >="__value_"Q}}"histsWordOverlap"{deque<std::__1::valarray<unsigned char>, std::__1::allocator<std::__1::valarray<unsigned char> > >="__map_"{__split_buffer<std::__1::valarray<unsigned char> *, std::__1::allocator<std::__1::valarray<unsigned char> *> >="__first_"^^{valarray<unsigned char>}"__begin_"^^{valarray<unsigned char>}"__end_"^^{valarray<unsigned char>}"__end_cap_"{__compressed_pair<std::__1::valarray<unsigned char> **, std::__1::allocator<std::__1::valarray<unsigned char> *> >="__value_"^^{valarray<unsigned char>}}}"__start_"Q"__size_"{__compressed_pair<unsigned long, std::__1::allocator<std::__1::valarray<unsigned char> > >="__value_"Q}}"idxsWordOverlap"{deque<std::__1::deque<std::__1::deque<std::__1::deque<unsigned short, std::__1::allocator<unsigned short> >, std::__1::allocator<std::__1::deque<unsigned short, std::__1::allocator<unsigned short> > > >, std::__1::allocator<std::__1::deque<std::__1::deque<unsigned short, std::__1::allocator<unsigned short> >, std::__1::allocator<std::__1::deque<unsigned short, std::__1::allocator<unsigned short> > > > > >, std::__1::allocator<std::__1::deque<std::__1::deque<std::__1::deque<unsigned short, std::__1::allocator<unsigned short> >, std::__1::allocator<std::__1::deque<unsigned short, std::__1::allocator<unsigned short> > > >, std::__1::allocator<std::__1::deque<std::__1::deque<unsigned short, std::__1::allocator<unsigned short> >, std::__1::allocator<std::__1::deque<unsigned short, std::__1::allocator<unsigned short> > > > > > > >="__map_"{__split_buffer<std::__1::deque<std::__1::deque<std::__1::deque<unsigned short, std::__1::allocator<unsigned short> >, std::__1::allocator<std::__1::deque<unsigned short, std::__1::allocator<unsigned short> > > >, std::__1::allocator<std::__1::deque<std::__1::deque<unsigned short, std::__1::allocator<unsigned short> >, std::__1::allocator<std::__1::deque<unsigned short, std::__1::allocator<unsigned short> > > > > > *, std::__1::allocator<std::__1::deque<std::__1::deque<std::__1::deque<unsigned short, std::__1::allocator<unsigned short> >, std::__1::allocator<std::__1::deque<unsigned short, std::__1::allocator<unsigned short> > > >, std::__1::allocator<std::__1::deque<std::__1::deque<unsigned short, std::__1::allocator<unsigned short> >, std::__1::allocator<std::__1::deque<unsigned short, std::__1::allocator<unsigned short> > > > > > *> >="__first_"^^{deque<std::__1::deque<std::__1::deque<unsigned short, std::__1::allocator<unsigned short> >, std::__1::allocator<std::__1::deque<unsigned short, std::__1::allocator<unsigned short> > > >, std::__1::allocator<std::__1::deque<std::__1::deque<unsigned short, std::__1::allocator<unsigned short> >, std::__1::allocator<std::__1::deque<unsigned short, std::__1::allocator<unsigned short> > > > > >}"__begin_"^^{deque<std::__1::deque<std::__1::deque<unsigned short, std::__1::allocator<unsigned short> >, std::__1::allocator<std::__1::deque<unsigned short, std::__1::allocator<unsigned short> > > >, std::__1::allocator<std::__1::deque<std::__1::deque<unsigned short, std::__1::allocator<unsigned short> >, std::__1::allocator<std::__1::deque<unsigned short, std::__1::allocator<unsigned short> > > > > >}"__end_"^^{deque<std::__1::deque<std::__1::deque<unsigned short, std::__1::allocator<unsigned short> >, std::__1::allocator<std::__1::deque<unsigned short, std::__1::allocator<unsigned short> > > >, std::__1::allocator<std::__1::deque<std::__1::deque<unsigned short, std::__1::allocator<unsigned short> >, std::__1::allocator<std::__1::deque<unsigned short, std::__1::allocator<unsigned short> > > > > >}"__end_cap_"{__compressed_pair<std::__1::deque<std::__1::deque<std::__1::deque<unsigned short, std::__1::allocator<unsigned short> >, std::__1::allocator<std::__1::deque<unsigned short, std::__1::allocator<unsigned short> > > >, std::__1::allocator<std::__1::deque<std::__1::deque<unsigned short, std::__1::allocator<unsigned short> >, std::__1::allocator<std::__1::deque<unsigned short, std::__1::allocator<unsigned short> > > > > > **, std::__1::allocator<std::__1::deque<std::__1::deque<std::__1::deque<unsigned short, std::__1::allocator<unsigned short> >, std::__1::allocator<std::__1::deque<unsigned short, std::__1::allocator<unsigned short> > > >, std::__1::allocator<std::__1::deque<std::__1::deque<unsigned short, std::__1::allocator<unsigned short> >, std::__1::allocator<std::__1::deque<unsigned short, std::__1::allocator<unsigned short> > > > > > *> >="__value_"^^{deque<std::__1::deque<std::__1::deque<unsigned short, std::__1::allocator<unsigned short> >, std::__1::allocator<std::__1::deque<unsigned short, std::__1::allocator<unsigned short> > > >, std::__1::allocator<std::__1::deque<std::__1::deque<unsigned short, std::__1::allocator<unsigned short> >, std::__1::allocator<std::__1::deque<unsigned short, std::__1::allocator<unsigned short> > > > > >}}}"__start_"Q"__size_"{__compressed_pair<unsigned long, std::__1::allocator<std::__1::deque<std::__1::deque<std::__1::deque<unsigned short, std::__1::allocator<unsigned short> >, std::__1::allocator<std::__1::deque<unsigned short, std::__1::allocator<unsigned short> > > >, std::__1::allocator<std::__1::deque<std::__1::deque<unsigned short, std::__1::allocator<unsigned short> >, std::__1::allocator<std::__1::deque<unsigned short, std::__1::allocator<unsigned short> > > > > > > >="__value_"Q}}"histsLineCoincide"{deque<std::__1::valarray<unsigned char>, std::__1::allocator<std::__1::valarray<unsigned char> > >="__map_"{__split_buffer<std::__1::valarray<unsigned char> *, std::__1::allocator<std::__1::valarray<unsigned char> *> >="__first_"^^{valarray<unsigned char>}"__begin_"^^{valarray<unsigned char>}"__end_"^^{valarray<unsigned char>}"__end_cap_"{__compressed_pair<std::__1::valarray<unsigned char> **, std::__1::allocator<std::__1::valarray<unsigned char> *> >="__value_"^^{valarray<unsigned char>}}}"__start_"Q"__size_"{__compressed_pair<unsigned long, std::__1::allocator<std::__1::valarray<unsigned char> > >="__value_"Q}}"idxsLineCoincide"{deque<std::__1::deque<std::__1::deque<std::__1::deque<unsigned short, std::__1::allocator<unsigned short> >, std::__1::allocator<std::__1::deque<unsigned short, std::__1::allocator<unsigned short> > > >, std::__1::allocator<std::__1::deque<std::__1::deque<unsigned short, std::__1::allocator<unsigned short> >, std::__1::allocator<std::__1::deque<unsigned short, std::__1::allocator<unsigned short> > > > > >, std::__1::allocator<std::__1::deque<std::__1::deque<std::__1::deque<unsigned short, std::__1::allocator<unsigned short> >, std::__1::allocator<std::__1::deque<unsigned short, std::__1::allocator<unsigned short> > > >, std::__1::allocator<std::__1::deque<std::__1::deque<unsigned short, std::__1::allocator<unsigned short> >, std::__1::allocator<std::__1::deque<unsigned short, std::__1::allocator<unsigned short> > > > > > > >="__map_"{__split_buffer<std::__1::deque<std::__1::deque<std::__1::deque<unsigned short, std::__1::allocator<unsigned short> >, std::__1::allocator<std::__1::deque<unsigned short, std::__1::allocator<unsigned short> > > >, std::__1::allocator<std::__1::deque<std::__1::deque<unsigned short, std::__1::allocator<unsigned short> >, std::__1::allocator<std::__1::deque<unsigned short, std::__1::allocator<unsigned short> > > > > > *, std::__1::allocator<std::__1::deque<std::__1::deque<std::__1::deque<unsigned short, std::__1::allocator<unsigned short> >, std::__1::allocator<std::__1::deque<unsigned short, std::__1::allocator<unsigned short> > > >, std::__1::allocator<std::__1::deque<std::__1::deque<unsigned short, std::__1::allocator<unsigned short> >, std::__1::allocator<std::__1::deque<unsigned short, std::__1::allocator<unsigned short> > > > > > *> >="__first_"^^{deque<std::__1::deque<std::__1::deque<unsigned short, std::__1::allocator<unsigned short> >, std::__1::allocator<std::__1::deque<unsigned short, std::__1::allocator<unsigned short> > > >, std::__1::allocator<std::__1::deque<std::__1::deque<unsigned short, std::__1::allocator<unsigned short> >, std::__1::allocator<std::__1::deque<unsigned short, std::__1::allocator<unsigned short> > > > > >}"__begin_"^^{deque<std::__1::deque<std::__1::deque<unsigned short, std::__1::allocator<unsigned short> >, std::__1::allocator<std::__1::deque<unsigned short, std::__1::allocator<unsigned short> > > >, std::__1::allocator<std::__1::deque<std::__1::deque<unsigned short, std::__1::allocator<unsigned short> >, std::__1::allocator<std::__1::deque<unsigned short, std::__1::allocator<unsigned short> > > > > >}"__end_"^^{deque<std::__1::deque<std::__1::deque<unsigned short, std::__1::allocator<unsigned short> >, std::__1::allocator<std::__1::deque<unsigned short, std::__1::allocator<unsigned short> > > >, std::__1::allocator<std::__1::deque<std::__1::deque<unsigned short, std::__1::allocator<unsigned short> >, std::__1::allocator<std::__1::deque<unsigned short, std::__1::allocator<unsigned short> > > > > >}"__end_cap_"{__compressed_pair<std::__1::deque<std::__1::deque<std::__1::deque<unsigned short, std::__1::allocator<unsigned short> >, std::__1::allocator<std::__1::deque<unsigned short, std::__1::allocator<unsigned short> > > >, std::__1::allocator<std::__1::deque<std::__1::deque<unsigned short, std::__1::allocator<unsigned short> >, std::__1::allocator<std::__1::deque<unsigned short, std::__1::allocator<unsigned short> > > > > > **, std::__1::allocator<std::__1::deque<std::__1::deque<std::__1::deque<unsigned short, std::__1::allocator<unsigned short> >, std::__1::allocator<std::__1::deque<unsigned short, std::__1::allocator<unsigned short> > > >, std::__1::allocator<std::__1::deque<std::__1::deque<unsigned short, std::__1::allocator<unsigned short> >, std::__1::allocator<std::__1::deque<unsigned short, std::__1::allocator<unsigned short> > > > > > *> >="__value_"^^{deque<std::__1::deque<std::__1::deque<unsigned short, std::__1::allocator<unsigned short> >, std::__1::allocator<std::__1::deque<unsigned short, std::__1::allocator<unsigned short> > > >, std::__1::allocator<std::__1::deque<std::__1::deque<unsigned short, std::__1::allocator<unsigned short> >, std::__1::allocator<std::__1::deque<unsigned short, std::__1::allocator<unsigned short> > > > > >}}}"__start_"Q"__size_"{__compressed_pair<unsigned long, std::__1::allocator<std::__1::deque<std::__1::deque<std::__1::deque<unsigned short, std::__1::allocator<unsigned short> >, std::__1::allocator<std::__1::deque<unsigned short, std::__1::allocator<unsigned short> > > >, std::__1::allocator<std::__1::deque<std::__1::deque<unsigned short, std::__1::allocator<unsigned short> >, std::__1::allocator<std::__1::deque<unsigned short, std::__1::allocator<unsigned short> > > > > > > >="__value_"Q}}"histsLineContain"{deque<std::__1::valarray<unsigned char>, std::__1::allocator<std::__1::valarray<unsigned char> > >="__map_"{__split_buffer<std::__1::valarray<unsigned char> *, std::__1::allocator<std::__1::valarray<unsigned char> *> >="__first_"^^{valarray<unsigned char>}"__begin_"^^{valarray<unsigned char>}"__end_"^^{valarray<unsigned char>}"__end_cap_"{__compressed_pair<std::__1::valarray<unsigned char> **, std::__1::allocator<std::__1::valarray<unsigned char> *> >="__value_"^^{valarray<unsigned char>}}}"__start_"Q"__size_"{__compressed_pair<unsigned long, std::__1::allocator<std::__1::valarray<unsigned char> > >="__value_"Q}}"idxsLineContain"{deque<std::__1::deque<std::__1::deque<std::__1::deque<unsigned short, std::__1::allocator<unsigned short> >, std::__1::allocator<std::__1::deque<unsigned short, std::__1::allocator<unsigned short> > > >, std::__1::allocator<std::__1::deque<std::__1::deque<unsigned short, std::__1::allocator<unsigned short> >, std::__1::allocator<std::__1::deque<unsigned short, std::__1::allocator<unsigned short> > > > > >, std::__1::allocator<std::__1::deque<std::__1::deque<std::__1::deque<unsigned short, std::__1::allocator<unsigned short> >, std::__1::allocator<std::__1::deque<unsigned short, std::__1::allocator<unsigned short> > > >, std::__1::allocator<std::__1::deque<std::__1::deque<unsigned short, std::__1::allocator<unsigned short> >, std::__1::allocator<std::__1::deque<unsigned short, std::__1::allocator<unsigned short> > > > > > > >="__map_"{__split_buffer<std::__1::deque<std::__1::deque<std::__1::deque<unsigned short, std::__1::allocator<unsigned short> >, std::__1::allocator<std::__1::deque<unsigned short, std::__1::allocator<unsigned short> > > >, std::__1::allocator<std::__1::deque<std::__1::deque<unsigned short, std::__1::allocator<unsigned short> >, std::__1::allocator<std::__1::deque<unsigned short, std::__1::allocator<unsigned short> > > > > > *, std::__1::allocator<std::__1::deque<std::__1::deque<std::__1::deque<unsigned short, std::__1::allocator<unsigned short> >, std::__1::allocator<std::__1::deque<unsigned short, std::__1::allocator<unsigned short> > > >, std::__1::allocator<std::__1::deque<std::__1::deque<unsigned short, std::__1::allocator<unsigned short> >, std::__1::allocator<std::__1::deque<unsigned short, std::__1::allocator<unsigned short> > > > > > *> >="__first_"^^{deque<std::__1::deque<std::__1::deque<unsigned short, std::__1::allocator<unsigned short> >, std::__1::allocator<std::__1::deque<unsigned short, std::__1::allocator<unsigned short> > > >, std::__1::allocator<std::__1::deque<std::__1::deque<unsigned short, std::__1::allocator<unsigned short> >, std::__1::allocator<std::__1::deque<unsigned short, std::__1::allocator<unsigned short> > > > > >}"__begin_"^^{deque<std::__1::deque<std::__1::deque<unsigned short, std::__1::allocator<unsigned short> >, std::__1::allocator<std::__1::deque<unsigned short, std::__1::allocator<unsigned short> > > >, std::__1::allocator<std::__1::deque<std::__1::deque<unsigned short, std::__1::allocator<unsigned short> >, std::__1::allocator<std::__1::deque<unsigned short, std::__1::allocator<unsigned short> > > > > >}"__end_"^^{deque<std::__1::deque<std::__1::deque<unsigned short, std::__1::allocator<unsigned short> >, std::__1::allocator<std::__1::deque<unsigned short, std::__1::allocator<unsigned short> > > >, std::__1::allocator<std::__1::deque<std::__1::deque<unsigned short, std::__1::allocator<unsigned short> >, std::__1::allocator<std::__1::deque<unsigned short, std::__1::allocator<unsigned short> > > > > >}"__end_cap_"{__compressed_pair<std::__1::deque<std::__1::deque<std::__1::deque<unsigned short, std::__1::allocator<unsigned short> >, std::__1::allocator<std::__1::deque<unsigned short, std::__1::allocator<unsigned short> > > >, std::__1::allocator<std::__1::deque<std::__1::deque<unsigned short, std::__1::allocator<unsigned short> >, std::__1::allocator<std::__1::deque<unsigned short, std::__1::allocator<unsigned short> > > > > > **, std::__1::allocator<std::__1::deque<std::__1::deque<std::__1::deque<unsigned short, std::__1::allocator<unsigned short> >, std::__1::allocator<std::__1::deque<unsigned short, std::__1::allocator<unsigned short> > > >, std::__1::allocator<std::__1::deque<std::__1::deque<unsigned short, std::__1::allocator<unsigned short> >, std::__1::allocator<std::__1::deque<unsigned short, std::__1::allocator<unsigned short> > > > > > *> >="__value_"^^{deque<std::__1::deque<std::__1::deque<unsigned short, std::__1::allocator<unsigned short> >, std::__1::allocator<std::__1::deque<unsigned short, std::__1::allocator<unsigned short> > > >, std::__1::allocator<std::__1::deque<std::__1::deque<unsigned short, std::__1::allocator<unsigned short> >, std::__1::allocator<std::__1::deque<unsigned short, std::__1::allocator<unsigned short> > > > > >}}}"__start_"Q"__size_"{__compressed_pair<unsigned long, std::__1::allocator<std::__1::deque<std::__1::deque<std::__1::deque<unsigned short, std::__1::allocator<unsigned short> >, std::__1::allocator<std::__1::deque<unsigned short, std::__1::allocator<unsigned short> > > >, std::__1::allocator<std::__1::deque<std::__1::deque<unsigned short, std::__1::allocator<unsigned short> >, std::__1::allocator<std::__1::deque<unsigned short, std::__1::allocator<unsigned short> > > > > > > >="__value_"Q}}"histsLineConstitute"{deque<std::__1::valarray<unsigned char>, std::__1::allocator<std::__1::valarray<unsigned char> > >="__map_"{__split_buffer<std::__1::valarray<unsigned char> *, std::__1::allocator<std::__1::valarray<unsigned char> *> >="__first_"^^{valarray<unsigned char>}"__begin_"^^{valarray<unsigned char>}"__end_"^^{valarray<unsigned char>}"__end_cap_"{__compressed_pair<std::__1::valarray<unsigned char> **, std::__1::allocator<std::__1::valarray<unsigned char> *> >="__value_"^^{valarray<unsigned char>}}}"__start_"Q"__size_"{__compressed_pair<unsigned long, std::__1::allocator<std::__1::valarray<unsigned char> > >="__value_"Q}}"idxsLineConstitute"{deque<std::__1::deque<std::__1::deque<std::__1::deque<unsigned short, std::__1::allocator<unsigned short> >, std::__1::allocator<std::__1::deque<unsigned short, std::__1::allocator<unsigned short> > > >, std::__1::allocator<std::__1::deque<std::__1::deque<unsigned short, std::__1::allocator<unsigned short> >, std::__1::allocator<std::__1::deque<unsigned short, std::__1::allocator<unsigned short> > > > > >, std::__1::allocator<std::__1::deque<std::__1::deque<std::__1::deque<unsigned short, std::__1::allocator<unsigned short> >, std::__1::allocator<std::__1::deque<unsigned short, std::__1::allocator<unsigned short> > > >, std::__1::allocator<std::__1::deque<std::__1::deque<unsigned short, std::__1::allocator<unsigned short> >, std::__1::allocator<std::__1::deque<unsigned short, std::__1::allocator<unsigned short> > > > > > > >="__map_"{__split_buffer<std::__1::deque<std::__1::deque<std::__1::deque<unsigned short, std::__1::allocator<unsigned short> >, std::__1::allocator<std::__1::deque<unsigned short, std::__1::allocator<unsigned short> > > >, std::__1::allocator<std::__1::deque<std::__1::deque<unsigned short, std::__1::allocator<unsigned short> >, std::__1::allocator<std::__1::deque<unsigned short, std::__1::allocator<unsigned short> > > > > > *, std::__1::allocator<std::__1::deque<std::__1::deque<std::__1::deque<unsigned short, std::__1::allocator<unsigned short> >, std::__1::allocator<std::__1::deque<unsigned short, std::__1::allocator<unsigned short> > > >, std::__1::allocator<std::__1::deque<std::__1::deque<unsigned short, std::__1::allocator<unsigned short> >, std::__1::allocator<std::__1::deque<unsigned short, std::__1::allocator<unsigned short> > > > > > *> >="__first_"^^{deque<std::__1::deque<std::__1::deque<unsigned short, std::__1::allocator<unsigned short> >, std::__1::allocator<std::__1::deque<unsigned short, std::__1::allocator<unsigned short> > > >, std::__1::allocator<std::__1::deque<std::__1::deque<unsigned short, std::__1::allocator<unsigned short> >, std::__1::allocator<std::__1::deque<unsigned short, std::__1::allocator<unsigned short> > > > > >}"__begin_"^^{deque<std::__1::deque<std::__1::deque<unsigned short, std::__1::allocator<unsigned short> >, std::__1::allocator<std::__1::deque<unsigned short, std::__1::allocator<unsigned short> > > >, std::__1::allocator<std::__1::deque<std::__1::deque<unsigned short, std::__1::allocator<unsigned short> >, std::__1::allocator<std::__1::deque<unsigned short, std::__1::allocator<unsigned short> > > > > >}"__end_"^^{deque<std::__1::deque<std::__1::deque<unsigned short, std::__1::allocator<unsigned short> >, std::__1::allocator<std::__1::deque<unsigned short, std::__1::allocator<unsigned short> > > >, std::__1::allocator<std::__1::deque<std::__1::deque<unsigned short, std::__1::allocator<unsigned short> >, std::__1::allocator<std::__1::deque<unsigned short, std::__1::allocator<unsigned short> > > > > >}"__end_cap_"{__compressed_pair<std::__1::deque<std::__1::deque<std::__1::deque<unsigned short, std::__1::allocator<unsigned short> >, std::__1::allocator<std::__1::deque<unsigned short, std::__1::allocator<unsigned short> > > >, std::__1::allocator<std::__1::deque<std::__1::deque<unsigned short, std::__1::allocator<unsigned short> >, std::__1::allocator<std::__1::deque<unsigned short, std::__1::allocator<unsigned short> > > > > > **, std::__1::allocator<std::__1::deque<std::__1::deque<std::__1::deque<unsigned short, std::__1::allocator<unsigned short> >, std::__1::allocator<std::__1::deque<unsigned short, std::__1::allocator<unsigned short> > > >, std::__1::allocator<std::__1::deque<std::__1::deque<unsigned short, std::__1::allocator<unsigned short> >, std::__1::allocator<std::__1::deque<unsigned short, std::__1::allocator<unsigned short> > > > > > *> >="__value_"^^{deque<std::__1::deque<std::__1::deque<unsigned short, std::__1::allocator<unsigned short> >, std::__1::allocator<std::__1::deque<unsigned short, std::__1::allocator<unsigned short> > > >, std::__1::allocator<std::__1::deque<std::__1::deque<unsigned short, std::__1::allocator<unsigned short> >, std::__1::allocator<std::__1::deque<unsigned short, std::__1::allocator<unsigned short> > > > > >}}}"__start_"Q"__size_"{__compressed_pair<unsigned long, std::__1::allocator<std::__1::deque<std::__1::deque<std::__1::deque<unsigned short, std::__1::allocator<unsigned short> >, std::__1::allocator<std::__1::deque<unsigned short, std::__1::allocator<unsigned short> > > >, std::__1::allocator<std::__1::deque<std::__1::deque<unsigned short, std::__1::allocator<unsigned short> >, std::__1::allocator<std::__1::deque<unsigned short, std::__1::allocator<unsigned short> > > > > > > >="__value_"Q}}"histsLineOverlap"{deque<std::__1::valarray<unsigned char>, std::__1::allocator<std::__1::valarray<unsigned char> > >="__map_"{__split_buffer<std::__1::valarray<unsigned char> *, std::__1::allocator<std::__1::valarray<unsigned char> *> >="__first_"^^{valarray<unsigned char>}"__begin_"^^{valarray<unsigned char>}"__end_"^^{valarray<unsigned char>}"__end_cap_"{__compressed_pair<std::__1::valarray<unsigned char> **, std::__1::allocator<std::__1::valarray<unsigned char> *> >="__value_"^^{valarray<unsigned char>}}}"__start_"Q"__size_"{__compressed_pair<unsigned long, std::__1::allocator<std::__1::valarray<unsigned char> > >="__value_"Q}}"idxsLineOverlap"{deque<std::__1::deque<std::__1::deque<std::__1::deque<unsigned short, std::__1::allocator<unsigned short> >, std::__1::allocator<std::__1::deque<unsigned short, std::__1::allocator<unsigned short> > > >, std::__1::allocator<std::__1::deque<std::__1::deque<unsigned short, std::__1::allocator<unsigned short> >, std::__1::allocator<std::__1::deque<unsigned short, std::__1::allocator<unsigned short> > > > > >, std::__1::allocator<std::__1::deque<std::__1::deque<std::__1::deque<unsigned short, std::__1::allocator<unsigned short> >, std::__1::allocator<std::__1::deque<unsigned short, std::__1::allocator<unsigned short> > > >, std::__1::allocator<std::__1::deque<std::__1::deque<unsigned short, std::__1::allocator<unsigned short> >, std::__1::allocator<std::__1::deque<unsigned short, std::__1::allocator<unsigned short> > > > > > > >="__map_"{__split_buffer<std::__1::deque<std::__1::deque<std::__1::deque<unsigned short, std::__1::allocator<unsigned short> >, std::__1::allocator<std::__1::deque<unsigned short, std::__1::allocator<unsigned short> > > >, std::__1::allocator<std::__1::deque<std::__1::deque<unsigned short, std::__1::allocator<unsigned short> >, std::__1::allocator<std::__1::deque<unsigned short, std::__1::allocator<unsigned short> > > > > > *, std::__1::allocator<std::__1::deque<std::__1::deque<std::__1::deque<unsigned short, std::__1::allocator<unsigned short> >, std::__1::allocator<std::__1::deque<unsigned short, std::__1::allocator<unsigned short> > > >, std::__1::allocator<std::__1::deque<std::__1::deque<unsigned short, std::__1::allocator<unsigned short> >, std::__1::allocator<std::__1::deque<unsigned short, std::__1::allocator<unsigned short> > > > > > *> >="__first_"^^{deque<std::__1::deque<std::__1::deque<unsigned short, std::__1::allocator<unsigned short> >, std::__1::allocator<std::__1::deque<unsigned short, std::__1::allocator<unsigned short> > > >, std::__1::allocator<std::__1::deque<std::__1::deque<unsigned short, std::__1::allocator<unsigned short> >, std::__1::allocator<std::__1::deque<unsigned short, std::__1::allocator<unsigned short> > > > > >}"__begin_"^^{deque<std::__1::deque<std::__1::deque<unsigned short, std::__1::allocator<unsigned short> >, std::__1::allocator<std::__1::deque<unsigned short, std::__1::allocator<unsigned short> > > >, std::__1::allocator<std::__1::deque<std::__1::deque<unsigned short, std::__1::allocator<unsigned short> >, std::__1::allocator<std::__1::deque<unsigned short, std::__1::allocator<unsigned short> > > > > >}"__end_"^^{deque<std::__1::deque<std::__1::deque<unsigned short, std::__1::allocator<unsigned short> >, std::__1::allocator<std::__1::deque<unsigned short, std::__1::allocator<unsigned short> > > >, std::__1::allocator<std::__1::deque<std::__1::deque<unsigned short, std::__1::allocator<unsigned short> >, std::__1::allocator<std::__1::deque<unsigned short, std::__1::allocator<unsigned short> > > > > >}"__end_cap_"{__compressed_pair<std::__1::deque<std::__1::deque<std::__1::deque<unsigned short, std::__1::allocator<unsigned short> >, std::__1::allocator<std::__1::deque<unsigned short, std::__1::allocator<unsigned short> > > >, std::__1::allocator<std::__1::deque<std::__1::deque<unsigned short, std::__1::allocator<unsigned short> >, std::__1::allocator<std::__1::deque<unsigned short, std::__1::allocator<unsigned short> > > > > > **, std::__1::allocator<std::__1::deque<std::__1::deque<std::__1::deque<unsigned short, std::__1::allocator<unsigned short> >, std::__1::allocator<std::__1::deque<unsigned short, std::__1::allocator<unsigned short> > > >, std::__1::allocator<std::__1::deque<std::__1::deque<unsigned short, std::__1::allocator<unsigned short> >, std::__1::allocator<std::__1::deque<unsigned short, std::__1::allocator<unsigned short> > > > > > *> >="__value_"^^{deque<std::__1::deque<std::__1::deque<unsigned short, std::__1::allocator<unsigned short> >, std::__1::allocator<std::__1::deque<unsigned short, std::__1::allocator<unsigned short> > > >, std::__1::allocator<std::__1::deque<std::__1::deque<unsigned short, std::__1::allocator<unsigned short> >, std::__1::allocator<std::__1::deque<unsigned short, std::__1::allocator<unsigned short> > > > > >}}}"__start_"Q"__size_"{__compressed_pair<unsigned long, std::__1::allocator<std::__1::deque<std::__1::deque<std::__1::deque<unsigned short, std::__1::allocator<unsigned short> >, std::__1::allocator<std::__1::deque<unsigned short, std::__1::allocator<unsigned short> > > >, std::__1::allocator<std::__1::deque<std::__1::deque<unsigned short, std::__1::allocator<unsigned short> >, std::__1::allocator<std::__1::deque<unsigned short, std::__1::allocator<unsigned short> > > > > > > >="__value_"Q}}"pForests"^{deque<nms::RectForest<unsigned short, double>, std::__1::allocator<nms::RectForest<unsigned short, double> > >}"config"{PyramidNMSConfig="_vptr$PyramidNMSConfig"^^?"methodType"Q"scoreType"Q"scoreMinThreshold"d"scoreMapMinThreshold"C"scoreUseScaleIndex"B"scoreUseArea"B"scoreAggregationScalingFactor"d"scoreUseNumSubDatums"B"scoreNumSubDatumsUpperClip"Q"scoreNumSubDatumsLowerClip"Q"ignoreOrphansInFullTile"B"heightRatioMinThresholdForContainment"d"computeIntrascaleGeometricRelationships"B"intersectionNumSamples"Q"pendingInvalidRejectCompetingDatums"B"computeAndFilterByIndividualScores"B"processCoincidence"B"processContainment"B"processOverlap"B"processPendingInvalid"B"favorSubDatumUndersegmentationInProcessingCoincidence"Q"favorLargerAreaInProcessingCoincidence"B"favorFineScaleInProcessingCoincidence"B"datumMinHeightRatioToUseFullTile"d"useOverlappingWordsInProcessingContainment"B"minValidCosAngleInDistributionCheckInProcessingContainment"d"favorSubDatumUndersegmentationInProcessingContainment"Q"favorLargerAreaInProcessingContainment"B"favorFullTileInProcessingContainment"B"heightRatioFineToFullMinThresholdFavorFullTileInProcessingContainment"d"heightRatioFineToFullMaxThresholdFavorFullTileInProcessingContainment"d"widthRatioFineToFullMinThresholdFavorFullTileInProcessingContainment"d"widthRatioFineToFullMaxThresholdFavorFullTileInProcessingContainment"d"favorFullTileInProcessingOverlap"d"coincidenceIOUMinThreshold"d"coincidenceIOMinMinThreshold"d"containmentIOUMaxThreshold"d"containmentIOMinMinThreshold"d"constitutionIOUMaxThreshold"d"constitutionIOMinMinThreshold"d"overlapIOUMinThreshold"d"overlapIOUMaxThreshold"d"overlapIOMinMinThreshold"d"overlapIOMinMaxThreshold"d}}
{PyramidTokenizer<unsigned short, double>="_vptr$PyramidTokenizer"^^?"pForests"^{deque<nms::RectForest<unsigned short, double>, std::__1::allocator<nms::RectForest<unsigned short, double> > >}"config"{PyramidTokenizerConfig="_vptr$PyramidTokenizerConfig"^^?"methodType"Q"isRecursive"B"spacingClipMin"d"spacingUniformityMinThresholdClipMin"d"spacingUniformityMinThresholdClipMax"d"spacingUniformityMinThresholdTrueProbability"d"spacingRatioMultiplier"d"useAdpativeSpacingRatioMultiplier"B"adpativeSpacingRatioMultiplierMinNumRects"Q"adaptiveSpacingRatioMultiplierMinVariationThreshold"d"adaptiveSpacingRatioMultiplierLowerBound"d"singleTokenNumCharsMaxThreshold"Q"singleTokenNumCutpointCandidatesMaxThreshold"Q}}
@"CRCtcBeamSearch"
@48@0:8@16{CGPoint=dd}24f40B44
@80@0:8{CGPoint=dd}16{CGPoint=dd}32{CGPoint=dd}48{CGPoint=dd}64
@56@0:8{CGRect={CGPoint=dd}{CGSize=dd}}16@48
@24@0:8f16f20
f20@0:8i16
v48@0:8{CGPoint=dd}16{CGPoint=dd}32
v52@0:8{CGPoint=dd}16{CGPoint=dd}32f48
f32@0:8{CGSize=dd}16
@40@0:8q16@24@32
f32@0:8Q16Q24
v48@0:8{CGRect={CGPoint=dd}{CGSize=dd}}16
v32@0:8{CGPoint=dd}16
C16@0:8
v20@0:8C16
@"CRImage"
@"NSMutableSet"
v32@0:8@16@24
B40@0:8@16@24@?32
@92@0:8@16f24{CGRect={CGPoint=dd}{CGSize=dd}}28{CGRect={CGPoint=dd}{CGSize=dd}}60
@"CRTextFeature"16@0:8
v24@0:8@"CRTextFeature"16
@"NSObject<CRTextRecognizerModelInput>"48@0:8@"NSArray"16@"CRImage"24d32@"CRRecognizerConfiguration"40
^i16@0:8
v24@0:8^i16
@32@0:8@"CRRecognizerConfiguration"16^@24
@"NSArray"32@0:8@"NSArray"16^@24
@64@0:8^f16@24@32q40d48@56
@48@0:8@16@24^@32@?40
B48@0:8@16d24d32@40
@"CRLanguageCorrection"
@56@0:8@16Q24d32Q40Q48
@72@0:8@16d24d32d40d48d56d64
@48@0:8{CGRect={CGPoint=dd}{CGSize=dd}}16
@28@0:8@16B24
v24@0:8@?16
v56@0:8@16@24@32d40Q48
v32@0:8^{pc_session=}16d24
@56@0:8@16Q24@32d40@48
@68@0:8^{vImage_Buffer=^vQQQ}16^^{vImage_Buffer}24{CGSize=dd}32{CGSize=dd}48i64
@64@0:8^{vImage_Buffer=^vQQQ}16^^{vImage_Buffer}24{CGSize=dd}32{CGSize=dd}48
@32@0:8{CGSize=dd}16
v40@0:8@16@24@?32
@40@0:8@"CRRecognizerConfiguration"16@"NSObject<CRTextRecognizerModelInputProvider>"24^@32
v40@0:8@"CRImage"16@"NSArray"24@?<v@?@"NSArray"d>32
@"NSArray"24@0:8@"NSArray"16
q20@0:8f16
@"NSObject<CRTextRecognizerModelInputProvider>"
@52@0:8@16d24@32i40Q44
@32@0:8@16@?24
{vImage_Buffer=^vQQQ}36@0:8Q16Q24i32
Q20@0:8i16
@20@0:8i16
v36@0:8I16*20^i28
{vImage_Buffer=^vQQQ}36@0:8r^{vImage_Buffer=^vQQQ}16i24@28
B40@0:8r^{vImage_Buffer=^vQQQ}16i24^{vImage_Buffer=^vQQQ}28i36
v32@0:8d16@24
@28@0:8^{__CVBuffer=}16i24
v28@0:8@?16B24
^{__CVBuffer=}40@0:8d16{CGSize=dd}24
^{__CVBuffer=}48@0:8d16{CGSize=dd}24^{CGSize=dd}40
^{__CVBuffer=}56@0:8d16{CGSize=dd}24^{CGSize=dd}40^{CGImage=}48
^{CGImage=}16@0:8
@32@0:8d16d24
@64@0:8@16@24{CGPoint=dd}32{CGSize=dd}48
@20@0:8I16
@32@0:8Q16Q24
@36@0:8Q16Q24B32
@36@0:8Q16Q24i32
@56@0:8{vImage_Buffer=^vQQQ}16i48i52
@52@0:8{vImage_Buffer=^vQQQ}16i48
@24@0:8r^{Mat=^^?*iii[32i][32i]{SmartPtr=^^?^v^i}ii[32i][32i]Q}16
@68@0:8{CGRect={CGPoint=dd}{CGSize=dd}}16@48f56^{CGRect={CGPoint=dd}{CGSize=dd}}60
@68@0:8{CGRect={CGPoint=dd}{CGSize=dd}}16Q48Q56f64
@28@0:8^{CGImage=}16i24
@36@0:8^{CGImage=}16@24i32
@28@0:8@16f24
@32@0:8^{CGRect={CGPoint=dd}{CGSize=dd}}16q24
@24@0:8^{CGImage=}16
@32@0:8^{CGImage=}16@24
@48@0:8{vImage_Buffer=^vQQQ}16
v24@0:8^{CGImage=}16
@"CIImage"
^{CGImage=}
^{__CVBuffer=}28@0:8^{__CVBuffer=}16I24
^{__CVBuffer=}60@0:8d16{CGSize=dd}24^{CGSize=dd}40^{CGImage=}48I56
^{__CVBuffer=}24@0:8@16
333333
333333
