@(#)PROGRAM:IntentsServices  PROJECT:Intents-1
PrewarmApp
metricsContext
-[SABaseCommand(INSExtensionService) ins_sendIntent:toExtensionProxy:onQueue:completionHandler:]
SiriSerializedUserActivity
-[SAIntentGroupResolveAppForIntent(INSExtensionService) ins_resolveAppForIntent:completionHandler:]
bundleId
appIdentifyingInfo
SiriAceErrorDomain
kAFAssistantErrorDomain
-[SAIntentGroupProcessIntent(INSExtensionService) _handleIntentWithExtensionProxy:onQueue:processIntentCompleted:completionHandler:]
-[SAIntentGroupProcessIntent(INSExtensionService) _handleIntentWithExtensionProxy:onQueue:processIntentCompleted:completionHandler:]_block_invoke_2
-[SAIntentGroupProcessIntent(INSExtensionService) _handleIntentWithExtensionProxy:onQueue:processIntentCompleted:completionHandler:]_block_invoke
-[SAIntentGroupProcessIntent(INSExtensionService) _confirmIntentWithExtensionProxy:onQueue:processIntentCompleted:completionHandler:]
-[SAIntentGroupProcessIntent(INSExtensionService) _confirmIntentWithExtensionProxy:onQueue:processIntentCompleted:completionHandler:]_block_invoke_2
-[SAIntentGroupProcessIntent(INSExtensionService) _confirmIntentWithExtensionProxy:onQueue:processIntentCompleted:completionHandler:]_block_invoke
v28@?0B8@"INIntent"12@"NSDictionary"20
-[SAIntentGroupProcessIntent(INSExtensionService) _resolveIntentSlotsWithExtensionProxy:onQueue:processIntentCompleted:completionHandler:]_block_invoke
IntentSlotResolutionResult
-[SAIntentGroupProcessIntent(INSExtensionService) ins_sendIntent:toExtensionProxy:onQueue:completionHandler:]
v16@?0@"SAIntentGroupProcessIntentCompleted"8
-[SAIntentGroupProcessIntent(INSExtensionService) ins_sendIntent:toExtensionProxy:onQueue:completionHandler:]_block_invoke
-[SAIntentGroupConfirmIntent(INSExtensionService) ins_sendIntent:toExtensionProxy:onQueue:completionHandler:]
v24@?0@"INIntentResponse"8@"INCExtensionError"16
-[SAIntentGroupConfirmIntent(INSExtensionService) ins_sendIntent:toExtensionProxy:onQueue:completionHandler:]_block_invoke_2
v24@?0@"NSDictionary"8@"NSError"16
-[SAIntentGroupResolveIntentSlot(INSExtensionService) ins_sendIntent:toExtensionProxy:onQueue:completionHandler:]
v16@?0@"NSData"8
-[SAIntentGroupResolveIntentSlot(INSExtensionService) ins_sendIntent:toExtensionProxy:onQueue:completionHandler:]_block_invoke_2
no data
INSAnalyticsObserversQueue
FBSOpenApplicationErrorDomain
/System/Library/PrivateFrameworks/FrontBoardServices.framework/FrontBoardServices
/System/Library/PrivateFrameworks/FrontBoardServices.framework/Contents/MacOS/FrontBoardServices
v20@?0B8@"NSError"12
-[INSExtensionService analytics:contextDictionaryForError:]
-[INSExtensionService analytics:contextDictionaryForCommand:]
-[INSExtensionService _shouldPrepareAudioSessionForCommand:intent:]
com.apple.siri.SiriAudioInternal.AudioInternalIntentExtension
-[INSExtensionService _requiresHandlingCommand:completion:]
-[INSExtensionService _siriLanguageCode]
-[INSExtensionService _logEventWithType:context:contextNoCopy:]
-[INSExtensionService _prewarmExtensionWithIntent:applicationIdentifier:command:completionHandler:]
v24@?0@"INCExtensionProxy"8@"NSError"16
-[INSExtensionService _prewarmExtensionWithIntent:applicationIdentifier:command:completionHandler:]_block_invoke
no extensionBundleId
no launchId
-[INSExtensionService _connectionForIntent:]
-[INSExtensionService _updatedEventContextWithExtensionLoadType:wasPrewarmed:]
ExtensionLoadType
%@.%@
Cold
Warm
Extension
v8@?0
-[INSExtensionService handleCommand:fromRemoteDevice:completionHandler:]_block_invoke
v24@?0@"NSData"8@"NSError"16
v12@?0B8
v24@?0@"<SAAceCommand>"8@"NSError"16
v16@?0@"NSError"8
-[INSExtensionService handleCommand:fromRemoteDevice:completionHandler:]_block_invoke_2
%@-%@-%@
INSExtensionServiceQueue
com.apple.intents.INSExtensionService.request-delegate
-[SAIntentGroupGetIntentDefinitions(INSExtensionService) _matchesIntentDefinition:]
INIntentVerbAssociations
INIntentEntity
INIntents
-[SAIntentGroupGetIntentDefinitions(INSExtensionService) ins_getIntentDefinitionsWithCompletionHandler:]
-[SAIntentGroupHandleIntent(INSExtensionService) ins_sendIntent:toExtensionProxy:onQueue:completionHandler:]
-[SAIntentGroupHandleIntent(INSExtensionService) ins_sendIntent:toExtensionProxy:onQueue:completionHandler:]_block_invoke_2
v24@?0@"INImage"8@?<v@?@"NSError">16
v24@?0@"INImage"8@"NSError"16
%s %@ delivered to the wrong service
%s intent = %@
%s appList = %@
%s Beginning HandleIntent with intent %@
%s HandleIntent completed with response %@
%s HandleIntent successful.
%s HandleIntent error. errorCode: %lu underlyingError: %@
%s Beginning ConfirmIntent with intent %@
%s ConfirmIntent completed with response %@
%s ConfirmIntent successful. ShouldRunHandleIntent = %@
%s ConfirmIntent error. errorCode: %lu underlyingError: %@
%s BatchSlotResolution completed in extensionProxy with updatedIntent %@
%s slotResolutionResult keyPath = `%@`, result = %@
%s All slots were resolved successfully. Moving to Confirm.
%s BatchSlotResolution needs dialog. Calling completion.
%s intentSlotKeyPaths = %@
%s Beginning BatchSlotResolution with intent %@
%s BatchSlotResolution complete.
%s intent.backingStore = %@
%s intentResponse.backingStore = %@
%s intentSlotKeyPath = %@
%s resolutionResultData = %@
%s Extension service delegate does not respond to extensionService:contextDictionaryForError:
%s Extension service delegate does not respond to extensionService:contextDictionaryForCommand:
%s Suppressing audio session preparation for internal media extension
%s Extension service delegate does not respond to extensionService:requiresHandlingCommand:completion:
%s Extension service delegate does not respond to siriLanguageCodeForExtensionService:
%s Extension service delegate does not respond to extensionService:logEventWithType:context:contextNoCopy:
%s About to prewarm an extension for %@ (%@:%@) without an identifier. Assigning a new identifier: %@
%s Error finding extension for prewarming: %@
%s Prewarmed extension: %@
%s Should prewarm app: %hhd
%s Prewarmed app completed successfully
%s Prewarmed app failed with error: %@
%s Using the current connection %@ because the intent is nil.
%s Using the current connection %@ because the intent identifier is nil.
%s Replacing the current connection %@ because the intent identifier is %@.
%s Extension load type = %@
%s Unable to get INIntent from command %@
%s Generated intent object %@
%s Raw intent = %@
%s Intent was sent from an old device with (intentVersionHash=%llu, aceVersion=%@), current device has (intentVersionHash=%llu, aceVersion=%@), intent: %@
%s ins_recordPreInteractionSignals for command: %@
%s Raw intent ID = %@
%s Start digesting raw intent ID with in-memory salt...
%s Extension service delegate does not respond to extensionService:processDataUsingSHA256WithInMemorySalt:completionHandler:
%s Finished digesting raw intent ID with in-memory salt.
%s Set facade intent identifier = %@
%s Unable to generate facade intent ID due to %@
%s Prepared to start playback for %@
%s Failed to prepare for audio playback
%s %@
%s Extension Request timed out after %{public}f seconds for command %@
%s Checking if Intent Definition at %@ matches query
%s Intent Definition at %@ has no INIntents section
%s Intent Definition at %@ has no entity or verb section
%s Intent Definition at %@ matches current request
%s Intent Definition at %@ does not match
%s Finding intent definitions for GetIntentDefinition query: %@
%s Unable to retrieve image data = %@
softlink:o:path:/System/Library/PrivateFrameworks/FrontBoardServices.framework/FrontBoardServices
softlink:o:path:/System/Library/PrivateFrameworks/FrontBoardServices.framework/FrontBoardServices
PrewarmAppAdditions
INSExtensionService
AudioSessionPreparation
INSDeviceInfo
INSDeviceInfoMutating
NSObject
INSExtensionServiceIntentExecutor
INSAnalytics
SignalGatheringAdditions
INSAppLaunchCommandDelegate
INSAnalyticsDataSource
INSAnalyticsObserver
privatePlayMediaIntentData
internalSignals
containsObject:
ins_shouldPrewarmApp
_JSONDictionaryRepresentation
if_JSONStringRepresentation
facadePropertyName
_JSONDictionaryRepresentationForIntent:parameterName:
ins_jsonEncodedIntent
dataUsingEncoding:
ins_protobufEncodedIntent
typeName
data
ins_jsonEncodedIntentResponse
ins_protobufEncodedIntentResponse
ins_invokeErrorCompletionHandler:withErrorCode:underlyingError:
_intentInstanceDescription
ins_analyticsEndEventType
initWithErrorCode:
dictionaryWithObjects:forKeys:count:
errorWithDomain:code:userInfo:
sharedAnalytics
contextDictionaryForCommand:
ins_afAnalyticsContext
contextDictionaryForError:
slotByName:
logEventWithType:context:contextNoCopy:
domain
code
isEqualToString:
setErrorCode:
metricsContext
ins_isJSONPayload
ins_setProtobufEncodedIntent:
ins_setJSONEncodedIntent:
ins_aceIntent
ins_aceIntentResponse
resolutionResultClass
ins_sendIntent:toExtensionProxy:onQueue:completionHandler:
ins_analyticsBeginEventType
ins_invokeErrorCompletionHandler:forUnderlyingError:
_resolutionResultWithData:slotDescription:
T@"SAIntentGroupProtobufMessage",&,N,Sins_setProtobufEncodedIntent:
T@"NSString",&,N,Sins_setJSONEncodedIntent:
jsonEncodedIntentResponse
intentResponse
componentsSeparatedByString:
count
objectAtIndexedSubscript:
floatValue
ins_shouldPrepareAudioSession
playbackQueueLocation
mutableAceVersion
T@"NSString",C,N,V_mutableAceVersion
aceVersion
T@"NSString",R,N,V_aceVersion
hash
TQ,R
superclass
T#,R
description
T@"NSString",R,C
debugDescription
_aceVersion
_mutableAceVersion
setAceVersion:
isEqual:
class
self
performSelector:
performSelector:withObject:
performSelector:withObject:withObject:
isProxy
isKindOfClass:
isMemberOfClass:
conformsToProtocol:
respondsToSelector:
retain
release
autorelease
retainCount
zone
initWithAceVersion:
setMutableAceVersion:
.cxx_destruct
copy
init
newWithBuilder:
jsonEncodedIntent
intent
setAppsList:
ins_resolveAppForIntent:completionHandler:
ins_shouldUseExtendedFlowTimeout
setIntent:
setJsonEncodedIntent:
appsList
valueForKey:
_intentResponseCode
_handleIntentWithExtensionProxy:onQueue:processIntentCompleted:completionHandler:
errorCode
underlyingError
confirmIntentWithCompletionHandler:
setHandleIntentCompleted:
handleIntentWithCompletionHandler:
setResponseHandler:
aceId
setRefId:
_resolveIntentSlotsWithExtensionProxy:onQueue:processIntentCompleted:completionHandler:
setLastAttemptedStep:
setSlotResolutionMap:
setTypeName:
backingStore
base64EncodedStringWithOptions:
setBase64EncodedIntent:
allKeys
countByEnumeratingWithState:objects:count:
setKeyPath:
objectForKeyedSubscript:
setJsonEncodedSlotResolutionResult:
setBase64EncodedProtobufMessage:
addObject:
initWithData:
intentSlotKeyPaths
type
typeAsString:
setStepResults:
setBatchSlotResolutionResult:
_connection
_confirmIntentWithExtensionProxy:onQueue:processIntentCompleted:completionHandler:
resolveIntentSlotKeyPaths:completionHandler:
setJsonEncodedIntentResponse:
setData:
setIntentResponse:
setConfirmIntentCompleted:
shouldRunHandleIntent
jsonEncodedHandledIntent
handledIntent
_transaction
currentUserActivity
userActivity
activityType
initWithActivityType:
_initWithIntent:
initWithIntent:response:
setHandledIntent:
setIntentHandlingStatus:
_setInteraction:donate:
initWithType:intent:intentResponse:userActivities:
setState:
interaction
shouldLaunchAppInBackgroundWithIntent:intentResponse:
setJsonEncodedHandledIntent:
userInfo
completionHandlerForAppLaunchCommand:withCompletion:
appProxy
launchAppInBackground:restrictAppsToCarPlay:userActivityIdentifier:completionHandler:
jsonEncodedHandledIntentResponse
ins_launchAppWithConnection:delegate:completionHandler:
handledIntentResponse
_payloadResponseTypeName
voiceShortcutClient
T@"<INVCVoiceShortcutClient>",&,N,V_voiceShortcutClient
T@"INIntent",&,N,V_intent
extensionProxy
T@"INCExtensionProxy",&,N,V_extensionProxy
queue
T@"NSObject<OS_dispatch_queue>",N,V_queue
_voiceShortcutClient
_intent
_extensionProxy
_queue
initWithVoiceShortcutClient:intent:
initWithIntent:extensionProxy:queue:
sendAceCommand:completionHandler:
setVoiceShortcutClient:
setExtensionProxy:
setQueue:
sendAceCommandDictionary:completion:
aceObjectWithDictionary:
dictionary
_setLaunchId:
anyObject
counterpartIdentifiersForLocalIdentifier:
launchId
sharedResolver
setJsonEncodedIntentSlotResolutionResult:
setIntentSlotResolutionResult:
resolveIntentSlotKeyPath:completionHandler:
intentSlotKeyPath
observers
T@"NSHashTable",&,N,V_observers
dataSource
T@"<INSAnalyticsDataSource>",W,N,V_dataSource
_observerQueue
_dataSource
_observers
_init
addObserver:
removeObserver:
setDataSource:
setObservers:
analytics:contextDictionaryForError:
analytics:contextDictionaryForCommand:
analytics:needsToLogEventWithType:context:contextNoCopy:
removeObject:
hashTableWithWeakObjects
userActivityWithIdentifier:
ins_launchAppWithConnection:userActivityIdentifier:delegate:completionHandler:
ins_recordPreInteractionSignals
options
T@"NSDictionary",R,C,N,V_options
delegate
T@"<INSExtensionServiceDelegate>",W,N,V_delegate
extensionContext
T@"INExtensionContext",R,N,V_extensionContext
airPlayRouteIdentifiers
T@"NSArray",C,N
commandIdentifiers
T@"NSArray",R,C,N
groupIdentifier
T@"NSString",R,C,N
_requestDelegateQueue
_currentConnection
_currentBundleIdForDisplay
_extensionContext
_options
_delegate
initWithOptions:
handleCommand:completionHandler:
handleCommand:fromRemoteDevice:completionHandler:
resetExternalResources
setAirPlayRouteIdentifiers:
_errorImpliesCloudRelay:
_isVoiceShortcutsRemoteExecutionUnavailable:
_extensionRequestWillStartForIntent:
_extensionRequestDidFinishForIntent:error:
_extensionInputItems
_updatedEventContextWithExtensionLoadType:wasPrewarmed:
_connectionForIntent:
_prewarmExtensionWithIntent:applicationIdentifier:command:completionHandler:
_logPrewarmDidEndWithCommand:applicationIdentifier:wasPrewarmed:completionHandler:
_logEventWithType:context:contextNoCopy:
_siriLanguageCode
_requiresHandlingCommand:completion:
_shouldPrepareAudioSessionForCommand:intent:
setDelegate:
extensionService:contextDictionaryForError:
extensionService:contextDictionaryForCommand:
extensionBundleId
extensionService:requiresHandlingCommand:completion:
siriLanguageCodeForExtensionService:
extensionService:logEventWithType:context:contextNoCopy:
resumeWithCompletionHandler:
reset
prewarmAppWithIntent:completionHandler:
_extension
localizedDescription
initWithIntent:
setIdentifier:
_className
UUIDString
UUID
identifier
setObject:forKey:
mutableCopy
stringWithFormat:
arrayWithObjects:count:
setUserInfo:
if_setObjectIfNonNil:forKey:
archivedDataWithRootObject:requiringSecureCoding:error:
extensionService:extensionRequestDidFinishForApplication:error:
extensionService:extensionRequestWillStartForApplication:
_intents_bundleIdForDisplay
_airPlayRouteIdentifiers
_setAirPlayRouteIdentifiers:
extensionService:processDataUsingSHA256WithInMemorySalt:completionHandler:
extensionService:prepareForStartPlaybackWithDestination:intent:completion:
extensionService:handleFailedStartPlaybackWithDestination:completion:
currentIntentResponse
setImageProcessingHandler:
extensionService:wantsToCacheImage:
extensionService:suspendTimeout:
_isExtensionBeingDebugged
setInterruptionHandler:
setTimeoutHandler:
requestTimeoutInterval
setExtensionInputItems:
extensionInputItems
extensionService:prepareIntent:
if_hexStringFromData:
initWithFormat:
intentId
_metadata
unsignedLongValue
versioningHash
intentCodableDescriptionWithIntentClassName:
_type
userActivityIdentifier
_setExecutionContext:
_executionContext
_setRecordDeviceIdentifier:
_recordDeviceIdentifier
_setRecordDeviceUID:
_recordDeviceUID
_setRecordRoute:
_recordRoute
_setAirPlayRouteIds:
allObjects
setWithArray:
arrayByAddingObjectsFromArray:
airPlayRouteIds
ins_getIntentDefinitionsWithCompletionHandler:
queries
_matchesIntentDefinition:
initWithContentsOfURL:options:error:
setIntentDefinition:
setIntentDefinitionInfos:
initWithContentsOfURL:
entity
caseInsensitiveCompare:
verb
initWithCapacity:
_imageSize
_setImageSize:
sharedCache
addCacheableObject:
_retrieveImageDataWithReply:
B16@0:8
@16@0:8
v24@0:8@16
v48@0:8@16@24@32@?40
q16@0:8
v40@0:8@?16q24@32
v32@0:8@?16@24
@"NSString"
v24@0:8@"NSString"16
B24@0:8@16
#16@0:8
@24@0:8:16
@32@0:8:16@24
@40@0:8:16@24@32
B24@0:8#16
B24@0:8@"Protocol"16
B24@0:8:16
Vv16@0:8
Q16@0:8
^{_NSZone=}16@0:8
@"NSString"16@0:8
@24@0:8@16
v16@0:8
@24@0:8@?16
v32@0:8@16@?24
v40@0:8@16@24@?32
@"<INVCVoiceShortcutClient>"
@"INIntent"
@"INCExtensionProxy"
@"NSObject<OS_dispatch_queue>"
@32@0:8@16@24
@40@0:8@16@24@32
@"<INSAnalyticsDataSource>"
@"NSHashTable"
v36@0:8q16@24B32
@"INCExtensionConnection"
@"INExtensionContext"
@"NSDictionary"
@"<INSExtensionServiceDelegate>"
@?<v@?B@"NSError">32@0:8@"SABaseCommand"16@?<v@?@"<SAAceCommand>"@"NSError">24
@?32@0:8@16@?24
@"NSDictionary"32@0:8@"INSAnalytics"16@"SABaseCommand"24
@"NSDictionary"32@0:8@"INSAnalytics"16@"NSError"24
v44@0:8@"INSAnalytics"16q24@"NSDictionary"32B40
v44@0:8@16q24@32B40
v32@0:8@16@24
@28@0:8@16B24
B48@0:8@16@24@32@?40
v44@0:8@16@24B32@?36
B32@0:8@16@24
v24@0:8@?16
