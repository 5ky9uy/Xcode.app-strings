<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE plist PUBLIC "-//Apple//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd">
<plist version="1.0">
<dict>
<key>com.apple.private.rtcreportingd</key>
<true/>
<key>com.apple.security.exception.files.absolute-path.read-write</key>
<array>
<string>/private/var/mobile/Library/Logs/CrashReporter/DiagnosticLogs/Audio/</string>
</array>
</dict>
</plist>
CAReportingPowerLogUtility
CAReportingCoreAnalyticsBridge
CAReportingMacOSVolumeMonitor
CAReportingIOChannelSubscription
CAReportingDriverUtility
CAReportingSession
CAReportingBlockThrottleTimerWrapper
CAReportingBlockThrottle
CAReportingServerInstance
CAReportingServiceProtocol
NSObject
CAReportingServiceDelegate
NSXPCListenerDelegate
CAReportingServiceDelegateProtocol
handleEvent:withCategory:type:session:
stringWithFormat:
setObject:forKeyedSubscript:
dictionaryWithDictionary:
serviceListener
resume
lock
processInfo
processName
length
stringWithUTF8String:
dateWithTimeIntervalSinceNow:
waitUntilDate:
unlock
signal
numberWithUnsignedShort:
numberWithInt:
dictionaryWithObjectsAndKeys:
objectForKey:
intValue
string
appendString:
_timer
_timerThread
_deviceIDs
_deviceIDtoName
_deviceIDToVolume
_sessions
init
stop
addSession:
removeSession:
timer
setTimer:
timerThread
setTimerThread:
deviceIDs
setDeviceIDs:
deviceIDtoName
setDeviceIDtoName:
deviceIDToVolume
setDeviceIDToVolume:
sessions
setSessions:
.cxx_destruct
_subscribedChannels
_driver
initWithDriver:
subscribedChannels
setSubscribedChannels:
driver
setDriver:
_ioChannelSubscriptions
getSnapShot
getDriverStatisticsRelativeToSnapShot:
ioChannelSubscriptions
setIoChannelSubscriptions:
_started
_rtcReportingSessionStarted
_serviceType
_userInfo
_driverSnapShot
_transactionCompleteBlock
_reporterID
_processIdentifiers
_aggregatedPayloadData
_nestedAggregatedPayloadData
_messageTypeCounts
_serviceName
_rtcReportingSession
_rtcReportingAgentToken
_rtcReportingQueue
initWithID:processIdentifiers:
setServiceType:
setConfiguration:
updateDefaults:
start
messageIdForCategory:type:
sendMessage:category:type:sync:reply:
sendMessage:category:type:reply:
dealloc
createSummaryEventForSession
writeSummaryJson
shouldReportOrientation
started
setStarted:
serviceType
userInfo
setUserInfo:
driverSnapShot
setDriverSnapShot:
transactionCompleteBlock
setTransactionCompleteBlock:
reporterID
setReporterID:
processIdentifiers
setProcessIdentifiers:
aggregatedPayloadData
setAggregatedPayloadData:
nestedAggregatedPayloadData
setNestedAggregatedPayloadData:
messageTypeCounts
setMessageTypeCounts:
serviceName
setServiceName:
rtcReportingSession
setRtcReportingSession:
rtcReportingAgentToken
setRtcReportingAgentToken:
rtcReportingQueue
setRtcReportingQueue:
rtcReportingSessionStarted
setRtcReportingSessionStarted:
writeToURL:atomically:encoding:error:
fileURLWithPath:
stringByAppendingPathComponent:
stringFromDate:
date
objectForKeyedSubscript:
createDirectoryAtPath:withIntermediateDirectories:attributes:error:
defaultManager
dictionaryWithObjects:forKeys:count:
setDateFormat:
initWithData:encoding:
localizedDescription
dataWithJSONObject:options:error:
insertObject:atIndex:
count
componentsJoinedByString:
addObject:
enumerateKeysAndObjectsUsingBlock:
countByEnumeratingWithState:objects:count:
setObject:forKey:
arrayWithObject:
flushMessagesWithCompletion:
errorWithDomain:code:userInfo:
sendMessageWithCategory:type:payload:error:
sendSingleMessage:category:type:serviceType:userInfo:reply:
addEntriesFromDictionary:
stringByReplacingOccurrencesOfString:withString:
numberWithInteger:
integerValue
startConfigurationWithCompletionHandler:
initWithSessionInfo:userInfo:frameworksToCheck:
allKeys
initWithDictionary:
stringByAppendingString:
numberWithBool:
numberWithLongLong:
numberWithFloat:
floatValue
newSecureHierarchyTokenFromParentToken:
sendOneMessageWithSessionInfo:userInfo:category:type:payload:error:
_block
sleepFor:
block
setBlock:
setFireDate:
_shouldKeepRunning
_timersInFlight
_unscheduledTimerKeys
_queueThread
addMessageBlock:reporterID:message:category:type:
waitForCompletion
shouldKeepRunning
setShouldKeepRunning:
timersInFlight
setTimersInFlight:
unscheduledTimerKeys
setUnscheduledTimerKeys:
queueThread
setQueueThread:
sleepForTimeInterval:
timerWithTimeInterval:repeats:block:
removeObjectForKey:
invalidate
determineSleepTime:
buildMessageKey:reporterID:category:type:
initWithBlock:
addTimer:forMode:
currentRunLoop
removeAllObjects
arrayWithCapacity:
longValue
containsObject:
sortedArrayUsingSelector:
compare:
arrayWithObjects:count:
addObjectsFromArray:
_processIdentifier
_clientStartDate
_clientProcessName
_clientReportingSessionMap
_delegate
createReportingSession:reply:
setServiceType:reportingSession:reply:
getServiceNameForReporterID:reply:
setConfiguration:forReporterID:reply:
startReportingSessionForID:reply:
sendMessage:withCategory:andType:forReportingIDs:reply:
stopReportingSessionForID:reply:
destroyReportingSession:reply:
reporterID:valid:
getAllReporters:
killService:
debugDescription
isEqual:
class
self
performSelector:
performSelector:withObject:
performSelector:withObject:withObject:
isProxy
isKindOfClass:
isMemberOfClass:
conformsToProtocol:
respondsToSelector:
retain
release
autorelease
retainCount
zone
hash
superclass
description
initWithPID:delegate:
findReportingSessionForID:acrossAllClients:
handleConnectionError
processIdentifier
setProcessIdentifier:
clientStartDate
setClientStartDate:
clientProcessName
setClientProcessName:
clientReportingSessionMap
setClientReportingSessionMap:
delegate
setDelegate:
getAllClients
removeClient:
allValues
setValue:forKey:
initWithObjectsAndKeys:
getDefaults
filteredArrayUsingPredicate:
predicateWithFormat:
longLongValue
isReportingEnabled
findReportingSessionForID:
_reportingEnabled
_clients
_driverUtility
_defaults
listener:shouldAcceptNewConnection:
listenForDefaultsNotification
CAReportingDefaults
clients
setClients:
driverUtility
setDriverUtility:
defaults
setDefaults:
reportingEnabled
setReportingEnabled:
boolForKey:
stringForKey:
initWithSuiteName:
boolValue
removeObject:
setInvalidationHandler:
timeIntervalSinceDate:
numberWithDouble:
duration
initWithStartDate:endDate:
laterDate:
earlierDate:
setInterruptionHandler:
exportedObject
setExportedObject:
setExportedInterface:
interfaceWithProtocol:
v40@0:8@16I24S28@32
@"NSTimer"
@"NSThread"
@"NSMutableSet"
@"NSMutableDictionary"
@16@0:8
v16@0:8
v24@0:8@16
@"CAReportingDriver"
@24@0:8@16
@"NSMutableArray"
@"NSArray"
@"NSString"
@"RTCReporting"
@"RTCSecureHierarchyToken"
@"NSObject<OS_dispatch_queue>"
@32@0:8q16@24
v20@0:8S16
@24@0:8I16S20
v44@0:8@16I24S28B32@?36
v40@0:8@16I24S28@?32
B16@0:8
v20@0:8B16
S16@0:8
@?16@0:8
v24@0:8@?16
q16@0:8
v24@0:8q16
v52@0:8@16I24S28S32@36@?44
v24@0:8d16
v48@0:8@?16q24@32I40S44
@40@0:8@16q24I32S36
d24@0:8@16
@"NSDate"
@"<CAReportingServiceDelegateProtocol>"
v32@0:8q16@?<v@?B>24
v36@0:8S16q20@?<v@?B>28
v32@0:8q16@?<v@?S>24
v40@0:8@"NSDictionary"16q24@?<v@?B>32
v48@0:8@"NSDictionary"16I24S28@"NSArray"32@?<v@?@"NSError">40
v32@0:8q16@?<v@?@"NSDictionary">24
v24@0:8@?<v@?@"NSArray">16
v24@0:8@?<v@?B>16
v32@0:8q16@?24
v36@0:8S16q20@?28
v40@0:8@16q24@?32
v48@0:8@16I24S28@32@?40
B24@0:8@16
#16@0:8
@24@0:8:16
@32@0:8:16@24
@40@0:8:16@24@32
B24@0:8#16
B24@0:8@"Protocol"16
B24@0:8:16
Vv16@0:8
Q16@0:8
^{_NSZone=}16@0:8
@"NSString"16@0:8
@28@0:8i16@20
@28@0:8q16B24
i16@0:8
v20@0:8i16
@"CAReportingDriverUtility"
@"NSDictionary"
B32@0:8@"NSXPCListener"16@"NSXPCConnection"24
B32@0:8@16@24
@"NSDictionary"16@0:8
@"NSArray"16@0:8
@"CAReportingSession"24@0:8q16
@"NSMutableDictionary"16@0:8
@"NSDictionary"24@0:8@"NSMutableDictionary"16
v24@0:8@"CAReportingServerInstance"16
@24@0:8q16
@"NSMutableDictionary"8@?0
com.apple.coreaudio.%@.%@
coreaudio
/private/var/mobile/Library/Logs/CrashReporter/DiagnosticLogs/Audio/Reporting
HostApplicationDisplayID
generic
telephony
siri
haptics
alarms
standalone
soundautoconfig
longformaudio
nonlongformaudio
audiodeviceusage
alerts
unknown
test
_comparison_field_blacklist
_throttle_seconds
/AppleInternal/BuildRoot/Library/Caches/com.apple.xbs/Sources/CoreAudioServices_Sim/CoreAudioServices-1104.78/Source/CAServices/Statistics/CAReportingUtility.mm
CAReportingUtilityWait
InternalBuild
apiusage
Undefined
Volume
Performance
IOReporting
Error
RouteChange
ClientRequest
Setup
PlaybackAndRecord
Playback
Record
Generic
Toolbox
Routing
Session
Start
Stop
IssueDetector
Unknown
timer
T@"NSTimer",&,N,V_timer
timerThread
T@"NSThread",&,V_timerThread
deviceIDs
T@"NSMutableSet",&,V_deviceIDs
deviceIDtoName
T@"NSMutableDictionary",&,V_deviceIDtoName
deviceIDToVolume
T@"NSMutableDictionary",&,V_deviceIDToVolume
sessions
T@"NSMutableSet",&,V_sessions
subscribedChannels
T@"NSMutableDictionary",&,V_subscribedChannels
driver
T@"CAReportingDriver",&,V_driver
ioChannelSubscriptions
T@"NSMutableArray",&,V_ioChannelSubscriptions
com.apple.coreaudio.session.rtcreporting
device_name
disable_reporting
reporterID
Tq,V_reporterID
processIdentifiers
T@"NSArray",&,V_processIdentifiers
aggregatedPayloadData
T@"NSMutableArray",&,V_aggregatedPayloadData
nestedAggregatedPayloadData
T@"NSMutableArray",&,V_nestedAggregatedPayloadData
started
TB,V_started
userInfo
T@"NSMutableDictionary",&,V_userInfo
messageTypeCounts
T@"NSMutableDictionary",&,V_messageTypeCounts
serviceName
T@"NSString",&,N,V_serviceName
rtcReportingSession
T@"RTCReporting",&,V_rtcReportingSession
rtcReportingAgentToken
T@"RTCSecureHierarchyToken",&,V_rtcReportingAgentToken
rtcReportingQueue
T@"NSObject<OS_dispatch_queue>",&,V_rtcReportingQueue
rtcReportingSessionStarted
TB,V_rtcReportingSessionStarted
serviceType
TS,N,V_serviceType
driverSnapShot
T@"NSMutableDictionary",&,V_driverSnapShot
transactionCompleteBlock
T@?,C,V_transactionCompleteBlock
/AppleInternal/BuildRoot/Library/Caches/com.apple.xbs/Sources/CoreAudioServices_Sim/CoreAudioServices-1104.78/Source/CAServices/Statistics/Service/CAReportingSession.mm
-[CAReportingSession writeSummaryJson]
%@-%@-%@-%@.json
yyyyMMdd-HHmmssZ
v32@?0@8@16^B24
CA_Session_Summary_Event
-[CAReportingSession dealloc]
-[CAReportingSession stop]
v16@?0@"NSError"8
-[CAReportingSession stop]_block_invoke_2
-[CAReportingSession sendMessage:category:type:sync:reply:]
-[CAReportingSession sendMessage:category:type:sync:reply:]_block_invoke
No valid RTCReportingSession
%@_%@
-[CAReportingSession start]
failed to find backend
waiting for rtcreportingd to find backends
v16@?0@"NSArray"8
-[CAReportingSession start]_block_invoke
_session
-[CAReportingSession setServiceType:]
-[CAReportingSession initWithID:processIdentifiers:]
carr
reporting_session_verbose
+[CAReportingSession sendSingleMessage:category:type:serviceType:userInfo:reply:]
+[CAReportingSession sendSingleMessage:category:type:serviceType:userInfo:reply:]_block_invoke
block
T@?,C,V_block
T@"NSTimer",&,V_timer
timersInFlight
T@"NSMutableDictionary",&,V_timersInFlight
unscheduledTimerKeys
T@"NSMutableArray",&,V_unscheduledTimerKeys
queueThread
T@"NSThread",&,V_queueThread
shouldKeepRunning
TB,V_shouldKeepRunning
/AppleInternal/BuildRoot/Library/Caches/com.apple.xbs/Sources/CoreAudioServices_Sim/CoreAudioServices-1104.78/Source/CAServices/Statistics/Service/CAReportingBlockThrottle.mm
-[CAReportingBlockThrottle waitForCompletion]
-[CAReportingBlockThrottle addMessageBlock:reporterID:message:category:type:]
v16@?0@"NSTimer"8
-[CAReportingBlockThrottle init]_block_invoke
+[CAReportingBlockThrottle determineSleepTime:]
%lld
VolumeOperationTime
careporting_timestamp
processuptime_ms
systemuptime_sec
com.apple.coreaudio.reporting.server
com.apple.coreaudio.reporting
processIdentifier
Ti,V_processIdentifier
clientStartDate
T@"NSDate",&,V_clientStartDate
clientProcessName
T@"NSString",&,V_clientProcessName
clientReportingSessionMap
T@"NSMutableDictionary",&,V_clientReportingSessionMap
delegate
T@"<CAReportingServiceDelegateProtocol>",W,N,V_delegate
hash
TQ,R
superclass
T#,R
description
T@"NSString",R,C
debugDescription
/AppleInternal/BuildRoot/Library/Caches/com.apple.xbs/Sources/CoreAudioServices_Sim/CoreAudioServices-1104.78/Source/CAServices/Statistics/Service/CAReportingServiceDelegate.mm
-[CAReportingServerInstance dealloc]
-[CAReportingServerInstance killService:]
v8@?0
-[CAReportingServerInstance handleConnectionError]_block_invoke
-[CAReportingServerInstance reporterID:valid:]
-[CAReportingServerInstance reporterID:valid:]_block_invoke
-[CAReportingServerInstance destroyReportingSession:reply:]
-[CAReportingServerInstance destroyReportingSession:reply:]_block_invoke
-[CAReportingServerInstance stopReportingSessionForID:reply:]
-[CAReportingServerInstance stopReportingSessionForID:reply:]_block_invoke
-[CAReportingServerInstance sendMessage:withCategory:andType:forReportingIDs:reply:]
-[CAReportingServerInstance sendMessage:withCategory:andType:forReportingIDs:reply:]_block_invoke
com.apple.audio.reporting
started == YES
-[CAReportingServerInstance startReportingSessionForID:reply:]
-[CAReportingServerInstance setConfiguration:forReporterID:reply:]
-[CAReportingServerInstance getServiceNameForReporterID:reply:]
-[CAReportingServerInstance getServiceNameForReporterID:reply:]_block_invoke
-[CAReportingServerInstance setServiceType:reportingSession:reply:]
-[CAReportingServerInstance setServiceType:reportingSession:reply:]_block_invoke
-[CAReportingServerInstance createReportingSession:reply:]
-[CAReportingServerInstance createReportingSession:reply:]_block_invoke
-[CAReportingServerInstance initWithPID:delegate:]
clients
T@"NSMutableArray",&,V_clients
driverUtility
T@"CAReportingDriverUtility",&,V_driverUtility
defaults
T@"NSDictionary",&,V_defaults
reportingEnabled
TB,V_reportingEnabled
-[CAReportingServiceDelegate listenForDefaultsNotification]
v12@?0i8
-[CAReportingServiceDelegate listenForDefaultsNotification]_block_invoke
-[CAReportingServiceDelegate findReportingSessionForID:]
-[CAReportingServiceDelegate listener:shouldAcceptNewConnection:]
-[CAReportingServiceDelegate listener:shouldAcceptNewConnection:]_block_invoke
com.apple.coreaudio.careportingclientuptime
@"NSDictionary"8@?0
seconds
processName
cars
com.apple.coreaudio
reporting_server_verbose
%s:%d:%s: %@
%s:%d:%s: continuing
%s:%d:%s: dataWithJSONObject: %@
%s:%d:%s: can't create logging directory at %@: %@
%s:%d:%s: jsonOutput writeToURL: %@
%s:%d:%s: deallocing this session %lli
%s:%d:%s: ending session %lli
%s:%d:%s: sending summary event for reporter %lli
%s:%d:%s: flush error %@
%s:%d:%s: sending message for session owned by %lli
%s:%d:%s: session not started, will send as a single message
%s:%d:%s: error sending message %@
%s:%d:%s: RTCReportingAgent %@ : message %@ : category %i : type %i
%s:%d:%s: transactions aren't allowed on this platform
%s:%d:%s: starting session owned by %lli
%s:%d:%s: %lli is already started
%s:%d:%s: No backends found, this session won't get sent to the server
%s:%d:%s: List of backends %@
%s:%d:%s: setting service type %@
%s:%d:%s: created reporting session for ID: %lli
%s:%d:%s: sending single message after delta %lli for service %i
%s:%d:%s: sending single message
%s:%d:%s: sendOneMessageWithSessionInfo %@
%s:%d:%s: message %@ : category %i : type %i
%s:%d:%s: waitForCompletion. timersInFlight=%u unscheduledTimerKeys=%u
%s:%d:%s: Waiting up to %u seconds for blockThrottle queue to be empty.
%s:%d:%s: Giving up on waiting for completion after %u seconds. timersInFlight=%u
%s:%d:%s: Dropping duplicate message for %@
%s:%d:%s: calling workingRunLoop run from inside thread block
%s:%d:%s: sleeping in thread
%s:%d:%s: Rejecting large throttle time. {time=%@, max=%f}
%s:%d:%s: Rejecting non NSNumber value of throttle time. {time=%@}
%s:%d:%s: dealloc %i from the server client list
%s:%d:%s: DESTROYING SERVICE
%s:%d:%s: removing %i from the server client list
%s:%d:%s: validating reporter %lli
%s:%d:%s: destroying session for reporter %lli
%s:%d:%s: destroying %lli
%s:%d:%s: stopping session for reporter %lli
%s:%d:%s: fetching driver logs %@
%s:%d:%s: nothing interesting to fetch from the drivers
%s:%d:%s: stopping %lli
%s:%d:%s: sending message for reporter %@
%s:%d:%s: sessions for client %i : %@
%s:%d:%s: active reporting sessions %lu : %@
%s:%d:%s: no active reporting sessions found, sending as standalone
%s:%d:%s: starting session for reporter %lli
%s:%d:%s: setting configuration
%s:%d:%s: fetching seviceType
%s:%d:%s: returnning service type %i for reporter  %lli
%s:%d:%s: setting service type %i for reporter %lli
%s:%d:%s: service type %i set for reporter  %lli
%s:%d:%s: creating session for reporter %lli
%s:%d:%s: session created for reporter %lli
%s:%d:%s: new client with pid %lu
%s:%d:%s: notify setup result %i
%s:%d:%s: re-reading coreaudio defaults
%s:%d:%s: defaults %@
%s:%d:%s: found reporting session %lli for client %i
%s:%d:%s: failed to find reporting session %lli
%s:%d:%s: newConnection: %@
%s:%d:%s: clientStartDate is in the past. clientpid=%d clientprocessname=%@
%s:%d:%s: clientStartDate is nil. clientpid=%d clientprocessname=%@
%s:%d:%s: InvalidationHandler: connection exited process=%@ uptime_sec=%d
%s:%d:%s: clientProcessName is nil. clientpid=%d
%s:%d:%s: InterruptionHandler: connection exited
