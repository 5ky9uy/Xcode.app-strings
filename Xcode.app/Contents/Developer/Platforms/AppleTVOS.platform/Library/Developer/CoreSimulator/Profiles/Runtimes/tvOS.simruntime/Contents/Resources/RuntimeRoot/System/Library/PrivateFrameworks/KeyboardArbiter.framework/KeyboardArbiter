@(#)PROGRAM:KeyboardArbiter  PROJECT:UIKit-1
Don't call %@.
-[UIDelayedAction init]
_startDate
T@"NSDate",R,Vm_startDate
_canceled
TB,R,Vm_canceled
target
T@,&,Vm_target
userInfo
T@,&,Vm_userInfo
com.apple.UIKit.remote-keyboard
com.apple.UIKit.keyboard-arbiter
v8@?0
invalid.remote-keyboards
v16@?0@"NSDictionary"8
scene data omitted;
disabler = %@;
lastEventSource = %ld;
current state = %@;
active handle = %@;
handles = %@>
Message
error
Type
Timestamp
v16@?0@"NSArray"8
v16@?0@?<v@?@"NSArray">8
v16@?0@?<v@?@>8
Description
v16@?0@8
Active
KeyboardFocus
CommandFocus
Suspended
Process
Invalid response
Timed out/hung
v24@?0@"<_UIKeyboardArbitrationClient>"8@?<v@?>16
Failed to connect - scheduling retry
v12@?0B8
-[_UIKeyboardArbiter runOperations:onHandler:]_block_invoke
%s Failed to access %@ remote service: %@
v16@?0@"NSError"8
-[_UIKeyboardArbiter runOperations:onHandler:]
%s Failed to create proxy for %@
HW kbd: target process %d (%{public}@) scene:%{public}@
HW kbd: no change
HW kbd: Keyboard set successfully pid:%d (%{public}@) scene:%{public}@
HW kbd: Failed to set keyboard focus pid:%d (%{public}@) scene:%{public}@
[%@] Dropping %@
v16@?0@"_UIKeyboardArbiterHandle"8
Client %@ attempted to connect, but no scene
[%@] Rejecting attach for %@ (currently %@)
[%@] Attaching [%@] %@
[%@] Found no clients
[%@] Found several potential clients: %@
[%@] Found expected client: %@
[%@] Detaching [%@] %@
[%@] Updating scene to %@ level %f
[%@] Setting suppressed %@ on %@
NO HANDLE for NIL token 
NO HANDLE for %{public}@ -- choices:%{public}@ 
[%@] started running
[%@] abnormal state - resuming handle was already active
[%@] suspended
[%@] foregrounded
[%@] no longer foreground
[%@] _commandFocusHandle is now %{public}@
v16@?0Q8
[%@] Received new connection [%@]
[%@] Lost connection [%@]
hash
TQ,R
superclass
T#,R
description
T@"NSString",R,C
debugDescription
lastUpdate
T@"_UIKeyboardChangedInformation",&,N,V_lastUpdate
sceneLink
T@"<_UIKeyboardArbiterLink>",R,N,V_sceneLink
%@ was not invalidated before release
[%@] %@: %@, %@
[%@] %@ sceneID: %@; %i/%@/%f
[%@] Releasing: %@
[%@] Created: %@
/AppleInternal/BuildRoot/Library/Caches/com.apple.xbs/Sources/UIKitCore_Sim/UIKit-3920.26.106/KeyboardArbiter/_UIKeyboardArbiter.m
<Unknown File>
Layer must exist for us to attach visibility to.
v16@?0@"<BSServiceConnectionEndpointInjectorConfiguring>"8
[%@] %@: %@
[%@] %@
[%@] %@: %i/%@
[%@] %@: %@/%i/%@
<%@: %p; PID %i: %@ <%@>%@; hosting PIDs %@; level %f; active %@ [wants %@]; suppression %i; iav %f>
 (suspended)
com.apple.UIKit.KeyboardManagement.message
[%@] took process assertion
[%@] could not take process assertion
[%@] requested process assertion (count=%lu)
[%@] timed out with %lu assertions remaining, disconnecting
[%@] released process assertion (count=%lu)
[%@] Disabled keyboard disablement due to invalidation
[%@] %@ <%@> %{public}@
[%@] %@: %@ (%@)
[%@] %@: %d
processIdentifier
Ti,R
bundleIdentifier
T@"NSString",R,&,V_bundleIdentifier
connection
T@"NSXPCConnection",R,V_connection
running
TB,V_running
sceneLayer
T@"FBSCAContextSceneLayer",R,&,V_sceneLayer
remoteSceneID
T@"NSString",R,&,V_remoteSceneID
active
TB,R,V_active
wantedState
TQ,R,V_wantedState
level
Td,R,V_level
iavHeight
Td,R,V_iavHeight
wantsFence
TB,R,V_wantsFence
FBSceneManager
Unable to find class %s
/System/Library/PrivateFrameworks/FrontBoard.framework/FrontBoard
com.apple.UIKit
KeyboardArbiter
com.apple.UIKit.keyboard-arbiter.debug
Info
Debug
Error
importance
Failed to connect - scheduling retry
%s Failed to access %@ remote service: %@
%s Failed to create proxy for %@
HW kbd: target process %d (%{public}@) scene:%{public}@
HW kbd: no change
HW kbd: Keyboard set successfully pid:%d (%{public}@) scene:%{public}@
HW kbd: Failed to set keyboard focus pid:%d (%{public}@) scene:%{public}@
[%@] Dropping %@
Client %@ attempted to connect, but no scene
[%@] Rejecting attach for %@ (currently %@)
[%@] Attaching [%@] %@
[%@] Found no clients
[%@] Found several potential clients: %@
[%@] Found expected client: %@
[%@] Detaching [%@] %@
[%@] Updating scene to %@ level %f
[%@] Setting suppressed %@ on %@
NO HANDLE for NIL token 
NO HANDLE for %{public}@ -- choices:%{public}@ 
[%@] started running
[%@] abnormal state - resuming handle was already active
[%@] suspended
[%@] foregrounded
[%@] no longer foreground
[%@] _commandFocusHandle is now %{public}@
[%@] Received new connection [%@]
[%@] Lost connection [%@]
%@ was not invalidated before release
[%@] %@: %@, %@
[%@] %@ sceneID: %@; %i/%@/%f
[%@] Releasing: %@
[%@] Created: %@
Keyboard attaching layer before removing prior layer...
[%@] %@: %@
[%@] %@
[%@] %@: %f
[%@] %@: %i/%@
[%@] %@: %@/%i/%@
[%@] took process assertion
[%@] could not take process assertion
[%@] requested process assertion (count=%lu)
[%@] timed out with %lu assertions remaining, disconnecting
[%@] released process assertion (count=%lu)
[%@] Disabled keyboard disablement due to invalidation
[%@] %@ <%@> %{public}@
[%@] %@: %@ (%@)
[%@] %@: %d
UIDelayedAction
UIHeldAction
_UIKeyboardArbiter
NSXPCListenerDelegate
NSObject
_UIKeyboardArbiterHandle
_UIKeyboardArbitration
_UIKeyboardChangedInformationWithManualFence
_UIKeyboardArbiterDebug
_UIKeyboardArbiterDebugEntry
_UIKeyboardArbiterDebugEntryString
_UIKeyboardArbiterDebugEntryDictionaries
stringWithUTF8String:
raise:format:
init
copy
touchWithDelay:
initWithTarget:action:userInfo:delay:mode:
invalidate
dealloc
date
dateByAddingTimeInterval:
setFireDate:
timerFired:
initWithFireDate:interval:target:selector:userInfo:repeats:
currentRunLoop
addTimer:forMode:
unschedule
isValid
performSelector:withObject:
cancel
initWithTarget:action:userInfo:delay:
touch
scheduled
delay
target
setTarget:
userInfo
setUserInfo:
_startDate
_canceled
.cxx_destruct
m_target
m_action
m_userInfo
m_delay
m_timer
m_canceled
m_runLoopMode
m_startDate
timeIntervalSinceDate:
hold
resume
isHolding
_holding
_holdBegan
_baseDelay
_timeBalance
arrayWithCapacity:
setOwner:
sceneLink
connectWithQueue:
attemptConnection
serviceName
serviceListener
initWithMachServiceName:
setDelegate:
initWithBundleIDs:states:elevatedPriority:
objectForKey:
intValue
processWithPID:foreground:suspended:
setHandler:
sharedInstance
description
mutableCopy
length
deleteCharactersInRange:
appendString:
appendFormat:
lastUpdate
_descriptionWithScene:
getDebugInfoDictionariesWithCompletionHandler:
retrieveClientDebugInformationWithCompletion:
arrayByAddingObjectsFromArray:
addAsynchronousData:
array
dictionaryWithObjects:forKeys:count:
addObject:
countByEnumeratingWithState:objects:count:
dictionary
setObject:forKey:
numberWithInt:
running
queue_getDebugInfoWithCompletion:
addEntriesFromDictionary:
runOperations:onHandler:
errorWithFormat:
createSceneWithCompletion:
connection
remoteObjectProxyWithErrorHandler:
takeProcessAssertionOnRemoteWithQueue:
releaseProcessAssertion
processIdentifier
remoteSceneID
bundleIdentifier
infoWithFormat:
tokenForString:
sharedService
setKeyboardFocusApplicationPID:deferringToken:completion:
active
isHandlerShowableWithHandler:
sceneLayer
contextID
setWindowContextID:sceneIdentifier:windowState:withLevel:
queue_keyboardChangedWithCompletion:
keyboardOnScreen
copyWithoutIAV
setLastUpdate:
wantedState
level
copyWithoutFence
wantsFence
queue_keyboardChanged:onComplete:
resetAnimationFencing
scheduleWindowTimeout
captureStateForDebug
containsObject:
isHostingPID:
_findForHandle:deepestHandleHandler:checklist:
iavHeight
numberWithDouble:
_findForHandle:deepestHandleHandler:
allValues
doubleValue
allKeys
queue_keyboardIAVChanged:onComplete:
handlerForPID:
updateKeyboardStatus:fromHandler:
informationForKeyboardDown
handlerRequestedFocus:
isAvailable
detach:
debugWithFormat:
attach:
didAttachLayer
reevaluateHardwareKeyboardClient
count
lastObject
checkActivation:
reevaluateSceneClientSettings
didDetachLayer
setPreferredLevel:
setPreferredSceneHostIdentifier:
queue_keyboardSuppressed:withCompletion:
notifyHostedPIDsOfSuppression:
updateSceneSettings
activateHandle:
isEqualToString:
_string
updateInterestedBundleIDs:
setRunning:
uncacheWindowContext
cacheWindowContext
queue_keyboardTransition:event:withInfo:onComplete:
queue_sceneBecameFocused:withCompletion:
errorWithDomain:code:userInfo:
pushFence:
popFence
completeKeyboardStatusChangedFromHandler:
queue_setKeyboardDisabled:withCompletion:
_clearLastEventSource:
queue_setLastEventSource:withCompletion:
signalEventSourceChanged:fromHandler:completionHandler:
handlerWithArbiter:forConnection:
setExportedObject:
removeObject:
updateInterestedBundleIDs
setInvalidationHandler:
setExportedInterface:
setRemoteObjectInterface:
_setQueue:
isEqual:
class
self
performSelector:
performSelector:withObject:withObject:
isProxy
isKindOfClass:
isMemberOfClass:
conformsToProtocol:
respondsToSelector:
retain
release
autorelease
retainCount
zone
hash
superclass
debugDescription
listener:shouldAcceptNewConnection:
initWithLink:
retrieveDebugInformationWithCompletion:
notifyHeightUpdated:
newClientConnected:withExpectedState:onConnected:
checkHostingState
deactivateHandle:
handleUnexpectedDeallocForHandler:
updateSceneSettings:
updateSuppression:ofPIDs:
activateClients
handlerForBundleID:
handlerForToken:
transition:eventStage:withInfo:fromHandler:
setKeyboardTotalDisable:withFence:fromHandler:completionHandler:
_queue
_listener
_clients
_activeHandle
_previouslyActiveHandle
_currentFocusPID
_currentFocusSceneIdentifier
_keyboardFocusHandle
_commandFocusHandle
_workspace
_scene
_updateCounter
_stateMonitor
_lastEventSource
_delayedClearLastEventSource
_sceneLayer
_disablingHandle
_sceneLink
_lastUpdate
_xpcConnection
addObjectsFromArray:
_deactivateScene
initWithCAContextID:level:
_reevaluateRemoteSceneID:
currentHandler
handleFailureInMethod:object:file:lineNumber:description:
identityForIdentifier:
newSceneIdentityTokenForIdentity:
stringRepresentation
targetWithPid:environmentIdentifier:
setInheritingEnvironment:
grantWithNamespace:sourceEnvironment:attributes:
arrayWithObjects:count:
setAdditionalAttributes:
injectorWithConfigurator:
setWithObject:
notifyIAVHeight:
stringWithFormat:
initWithPID:flags:reason:name:withHandler:
numberWithUnsignedInt:
null
objectAtIndexedSubscript:
_isString
retrieveDebugInformation:
retrieveMoreDebugInformationWithCompletion:
startArbitrationWithExpectedState:hostingPIDs:usingFence:withSuppression:onConnected:
setWantsFencing:
signalKeyboardChanged:onCompletion:
signalKeyboardChangeComplete
setWindowHostingPID:active:
transition:eventStage:withInfo:
applicationShouldFocusWithBundle:onCompletion:
focusApplicationWithProcessIdentifier:sceneDeferringToken:onCompletion:
setKeyboardTotalDisable:withFence:completionHandler:
signalEventSourceChanged:completionHandler:
_invalidated
_bundleIdentifier
_owner
_running
_remoteSceneID
_active
_wantedState
_level
_hostedPids
_checkingShowability
_suppressionCount
_wantsFence
_remoteKeepAliveAssertion
_remoteKeepAliveAssertionCount
_remoteKeepAliveTimerCount
_cachedContext
_endpointGrantInjector
_connection
_iavHeight
removeLastObject
animationFence
importance
firstObject
removeObjectAtIndex:
entryWithFormat:arguments:withType:
addEntry:
entryWithDictionaries:
enumerateContents:
_importantCount
_entries
_timestamp
initWithFormat:arguments:
_message
_type
_dictionaries
@16@0:8
@56@0:8@16:24@32d40@48
@48@0:8@16:24@32d40
v16@0:8
v24@0:8d16
B16@0:8
d16@0:8
v24@0:8@16
@"NSTimer"
@"NSString"
@"NSDate"
B24@0:8@16
#16@0:8
@24@0:8:16
@32@0:8:16@24
@40@0:8:16@24@32
B24@0:8#16
B24@0:8:16
Vv16@0:8
Q16@0:8
^{_NSZone=}16@0:8
B24@0:8@"Protocol"16
@"NSString"16@0:8
B32@0:8@16@24
B32@0:8@"NSXPCListener"16@"NSXPCConnection"24
@24@0:8@16
@20@0:8B16
v24@0:8@?16
v32@0:8@?16@24
v32@0:8@16@24
v40@0:8@16@?24@32
v32@0:8@16@?24
v40@0:8@16@24@?32
v28@0:8B16@20
@20@0:8i16
v28@0:8i16B20B24
v48@0:8@16Q24@32@40
v44@0:8B16@20@28@?36
v40@0:8q16@24@?32
@"NSObject<OS_dispatch_queue>"
@"NSXPCListener"
@"NSMutableArray"
@"_UIKeyboardArbiterHandle"
@"FBSWorkspace"
@"FBSScene"
@"BKSApplicationStateMonitor"
@"UIDelayedAction"
@"FBSSceneLayer"
@"<_UIKeyboardArbiterLink>"
@"_UIKeyboardChangedInformation"
@32@0:8@16@24
v48@0:8@16@24B32i36@?40
v44@0:8I16@20Q28d36
v20@0:8B16
v24@0:8i16B20
v40@0:8@16Q24@32
v36@0:8i16@20@?28
v36@0:8B16@20@?28
v32@0:8q16@?24
v24@0:8@?<v@?@"NSString">16
v24@0:8@?<v@?@"NSArray">16
v48@0:8@"_UIKeyboardChangedInformation"16@"NSArray"24B32i36@?<v@?@"_UIKeyboardChangedInformation"qB>40
v44@0:8I16@"NSString"20Q28d36
v32@0:8@"_UIKeyboardChangedInformation"16@?<v@?>24
v40@0:8@"NSString"16Q24@"NSDictionary"32
v32@0:8@"NSString"16@?<v@?B>24
v36@0:8i16@"BKSHIDEventDeferringToken"20@?<v@?B>28
v36@0:8B16@"BKSAnimationFenceHandle"20@?<v@?@"NSError">28
v32@0:8q16@?<v@?>24
i16@0:8
v24@0:8Q16
B20@0:8i16
@"_UIKeyboardArbiter"
@"FBSCAContextSceneLayer"
@"NSMutableSet"
@"BKSProcessAssertion"
@"NSArray"
@"BSServiceConnectionEndpointInjector"
@"NSXPCConnection"
v24@0:8r*16
@40@0:8@16[1{__va_list_tag=II^v^v}]24@32
