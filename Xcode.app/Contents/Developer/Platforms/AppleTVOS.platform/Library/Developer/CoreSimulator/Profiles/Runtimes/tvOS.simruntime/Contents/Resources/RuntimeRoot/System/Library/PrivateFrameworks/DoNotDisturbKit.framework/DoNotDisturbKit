@(#)PROGRAM:DoNotDisturbKit  PROJECT:DoNotDisturb-1
?ffffff
?ffffff
com.apple.donotdisturb.kit.lifetime.one-hour
com.apple.donotdisturb.kit.lifetime.evening
com.apple.donotdisturb.kit.lifetime.morning
com.apple.donotdisturb.kit.lifetime.location
com.apple.donotdisturb.kit.lifetime.event
v8@?0
com.apple.donotdisturb
Location
Notifications
ToggleManager
DND_UNTIL_I_LEAVE_LIFETIME_TITLE
DND_UNTIL_I_LEAVE_LIFETIME_WITH_HIGH_CONFIDENCE_LOI_METADATA
DND_UNTIL_I_LEAVE_LIFETIME_WITH_LOW_CONFIDENCE_LOI_METADATA
DND_UNTIL_END_THIS_EVENT_TITLE
DND_UNTIL_END_NEXT_EVENT_TITLE
DND_UNTIL_END_EVENT_DURATION_DESCRIPTION
next
<unknown>
DND_ONE_HOUR_LIFETIME_TITLE
DND_UNTIL_EVENING_LIFETIME_TITLE
DND_UNTIL_MORNING_LIFETIME_TITLE
com.apple.donotdisturb.kit.AWDMetricService
v20@?0B8@"NSError"12
com.apple.donotdisturb.toggle-manager
<%@: %p; identifier: '%@'; name: '%@'; metadata: '%@'>
com.apple.donotdisturb.kit.LifetimeDetailsProvider
com.apple.donotdisturb.kit.LifetimeDetailsProvider.event-store
com.apple.donotdisturb.kit.LifetimeDetailsProvider.call-out
SignificantTimeChangeNotification
v24@?0@"NSArray"8@"NSError"16
B16@?0@"EKEvent"8
v16@?0@"NSTimer"8
Toggling DND: targetState=%{public}@
Resolved target state: targetState=%{public}@, currentState=%{public}@
Taking toggle assertion
Successfully took toggle assertion; assertion=%{public}@
Unable to take toggle assertion; error=%{public}@
Invalidating all assertions for toggle
Successfully invalidated all assertions
Unable to invalidate all assertions; error=%{public}@
Error determining location: %{public}@
Location
Event
DoNotDisturbKit
Time
DNDAWDMetricsService
DNDStateUpdateListener
NSObject
DNDToggleManager
DNDLifetimeDetails
NSCopying
DNDLifetimeDetailsProvider
CLLocationManagerDelegate
dndk_localizationBundle
localizedStringForKey:value:table:
preferredName
length
confidence
stringWithFormat:
initWithIdentifier:name:metadata:
lifetimeDetailsForPlaceInference:
startDate
endDate
compare:
currentCalendar
getHour:minute:second:nanosecond:fromDate:
sharedInstance
formatDateAsTimeStyle:
formatDateAsTimeNoAMPM:
title
lifetimeDetailsForEvent:relativeToDate:
bundleForClass:
lifetimeDetailsForOneHour
lifetimeDetailsUntilEvening
lifetimeDetailsUntilMorning
init
serviceForClientIdentifier:
addStateUpdateListener:withCompletionHandler:
queryCurrentStateWithError:
_queue_postAWDMetric
state
copy
suppressionState
isEqual:
class
self
performSelector:
performSelector:withObject:
performSelector:withObject:withObject:
isProxy
isKindOfClass:
isMemberOfClass:
conformsToProtocol:
respondsToSelector:
retain
release
autorelease
retainCount
zone
hash
superclass
description
debugDescription
TQ,R
T#,R
T@"NSString",R,C
stateService:didReceiveDoNotDisturbStateUpdate:
initWithClientIdentifier:
resume
handleTransitionToUILocked:
_queue_currentAWDMetricState
.cxx_destruct
_queue
_notificationsStateService
_currentState
_lockState
initWithModeAssertionService:stateService:
setToggleAssertionIdentifier:
isEqualToString:
isActive
_toggleDNDOnReturningError:
_toggleDNDOffReturningError:
toggleAssertionIdentifier
setIdentifier:
lifetimeUntilEndOfScheduleWithIdentifier:
setLifetime:
takeModeAssertionWithDetails:error:
invalidateAllActiveModeAssertionsWithError:
initialize
managerForClientIdentifier:
toggleToTargetState:error:
_modeAssertionService
_stateService
_toggleAssertionIdentifier
T@"NSString",C,N,V_toggleAssertionIdentifier
identifier
name
metadata
copyWithZone:
_identifier
_name
_metadata
T@"NSString",R,C,N,V_identifier
T@"NSString",R,C,N,V_name
T@"NSString",R,C,N,V_metadata
dnd_locationBundle
initWithEffectiveBundle:delegate:onQueue:
initWithEKOptions:
requestAccessToEntityType:completion:
initWithEventStore:visibilityChangedCallback:queue:
defaultCenter
_systemTimeChanged
addObserver:selector:name:object:
removeObserver:name:object:
invalidate
dealloc
_queue_requestLifetimeDetails
_eventStoreQueue_requestRelevantEvent
requestLifetimeDetails
_scheduleRefreshTimerIfNeeded
_requestRelevantLocationMetadata
lifetimeWithDuration:
date
dateBySettingHour:minute:second:ofDate:options:
dateByAddingUnit:value:toDate:options:
initWithStartDate:endDate:
lifetimeWithDateInterval:
lifetimeWithCurrentLocation
uniqueId
occurrenceDate
lifetimeUntilEndOfCalendarEventWithUniqueID:occurrenceDate:
lifetime
lifetimeType
_eventStoreQueue_eventForCalendarEventLifetime:
array
addObject:
_lifetimeDetailsUntilEveningOrMorningForDate:
authorizationStatusForBundle:
isEqualToArray:
delegate
lifetimeDetailsProvider:didUpdateAvailableLifetimeDetails:
_queue_gotPlaceInferences:
_fetchPlaceInferencesWithFidelityPolicy:handler:
firstObject
_queue_rebuildAvailableLifetimeDetails
reset
_queue_resetLifetimeDetails
dateByAddingTimeInterval:
visibleCalendars
predicateForEventsWithStartDate:endDate:calendars:
eventsMatchingPredicate:
isAllDay
participationStatus
status
bs_filter:
countByEnumeratingWithState:objects:count:
timeIntervalSinceDate:
isOnlyDuringEvent
eventUniqueID
_queue_scheduleRefreshTimerIfNeeded
_nextRefreshTimerFireDate
fireDate
initWithFireDate:interval:repeats:block:
currentRunLoop
addTimer:forMode:
locationManager:didUpdateToLocation:fromLocation:
locationManager:didUpdateLocations:
locationManager:didUpdateHeading:
locationManagerShouldDisplayHeadingCalibration:
locationManager:didDetermineState:forRegion:
locationManager:didRangeBeacons:inRegion:
locationManager:rangingBeaconsDidFailForRegion:withError:
locationManager:didRangeBeacons:satisfyingConstraint:
locationManager:didFailRangingBeaconsForConstraint:error:
locationManager:didEnterRegion:
locationManager:didExitRegion:
locationManager:didFailWithError:
locationManager:monitoringDidFailForRegion:withError:
locationManager:didChangeAuthorizationStatus:
locationManagerDidChangeAuthorization:
locationManager:didStartMonitoringForRegion:
locationManagerDidPauseLocationUpdates:
locationManagerDidResumeLocationUpdates:
locationManager:didFinishDeferredUpdatesWithError:
locationManager:didVisit:
resetLifetimeDetails
startUpdatingLifetimeDetails
stopUpdatingLifetimeDetails
startUpdatingLifetimeDetailMetadata
stopUpdatingLifetimeDetailMetadata
lifetimeForLifetimeDetails:error:
lifetimeDetailsForAssertionDetails:error:
lifetimeDetailsWithMetadataForAssertionDetails:completionHandler:
availableLifetimeDetails
setDelegate:
_eventStoreQueue
_calloutQueue
_monitoringLifetimes
_refreshTimer
_locationManager
_currentPlaceInference
_eventStore
_calendarVisibilityManager
_relevantEvent
_availableLifetimeDetails
_delegate
T@"NSArray",R,C,N,V_availableLifetimeDetails
T@"<DNDLifetimeDetailsProviderDelegate>",W,N,V_delegate
@24@0:8@16
@32@0:8@16@24
@16@0:8
B24@0:8@16
#16@0:8
@24@0:8:16
@32@0:8:16@24
@40@0:8:16@24@32
B16@0:8
B24@0:8#16
B24@0:8:16
Vv16@0:8
Q16@0:8
^{_NSZone=}16@0:8
B24@0:8@"Protocol"16
@"NSString"16@0:8
v32@0:8@16@24
v32@0:8@"DNDStateService"16@"DNDStateUpdate"24
v16@0:8
v20@0:8B16
@"NSObject<OS_dispatch_queue>"
@"DNDStateService"
@"DNDState"
v24@0:8@16
B32@0:8Q16^@24
B24@0:8^@16
@"DNDModeAssertionService"
@"NSString"
@24@0:8^{_NSZone=}16
@40@0:8@16@24@32
v40@0:8@16@24@32
v40@0:8@16q24@32
v28@0:8@16i24
v40@0:8@"CLLocationManager"16@"CLLocation"24@"CLLocation"32
v32@0:8@"CLLocationManager"16@"NSArray"24
v32@0:8@"CLLocationManager"16@"CLHeading"24
B24@0:8@"CLLocationManager"16
v40@0:8@"CLLocationManager"16q24@"CLRegion"32
v40@0:8@"CLLocationManager"16@"NSArray"24@"CLBeaconRegion"32
v40@0:8@"CLLocationManager"16@"CLBeaconRegion"24@"NSError"32
v40@0:8@"CLLocationManager"16@"NSArray"24@"CLBeaconIdentityConstraint"32
v40@0:8@"CLLocationManager"16@"CLBeaconIdentityConstraint"24@"NSError"32
v32@0:8@"CLLocationManager"16@"CLRegion"24
v32@0:8@"CLLocationManager"16@"NSError"24
v40@0:8@"CLLocationManager"16@"CLRegion"24@"NSError"32
v28@0:8@"CLLocationManager"16i24
v24@0:8@"CLLocationManager"16
v32@0:8@"CLLocationManager"16@"CLVisit"24
@32@0:8@16^@24
v32@0:8@16@?24
@"NSTimer"
@"CLLocationManager"
@"_CLPlaceInference"
@"EKEventStore"
@"EKCalendarVisibilityManager"
@"EKEvent"
@"NSArray"
@"<DNDLifetimeDetailsProviderDelegate>"
