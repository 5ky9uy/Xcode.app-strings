v8@?0
v16@?0@"NSError"8
v16@?0@"NSXPCListenerEndpoint"8
@"CABasicAnimation"24@?0@8:16
unspec
light
dark
TVViewElement
com.apple.TVAppStore
Accessibility
com.apple.HeadBoard
name.for.bundle.headboard
resource
tomato-splat
RTRotten
tv.freshness.rotten
tv.tomato.rating.format
tomato-fresh
RTFresh
tv.freshness.fresh
tomato-certified
RTCertified
tv.freshness.certified.fresh
common-sense
tv.common.sense
overlay-checkmark
tv.played
mpaa-g
tv-g
g_mask
axid.icon.rating.g
pg13
axid.icon.rating.pg13
mpaa-pg
tv-pg
pg_mask
axid.icon.rating.pg
tv-ma
tvma_mask
axid.icon.rating.tvma
tv-nr
nr_mask
axid.icon.rating.nr
mpaa-r
tv-r
r_mask
axid.icon.rating.r
unrated
axid.icon.rating.unrated
nc17
axid.icon.rating.nc17
y7fv
axid.icon.rating.tvy7fv
tv-y7
tvy7_mask
axid.icon.rating.tvy7
tv-y
tvy_mask
axid.icon.rating.tvy
tvpg_mask
axid.icon.rating.tvpg
tvg_mask
axid.icon.rating.tvg
tv-14
tv14_mask
axid.icon.rating.tv14
4k-hdr
axid.icon.4k-hdr
axid.icon.hdr
axid.icon.hd
axid.icon.closed.captions
tv.tomato.rating
metadata-ad
axid.icon.ad
axid.icon.4k
metadata-sdh
axid.icon.sdh
dolby-vision
dolbyvision_mask
axid.icon.dolby-vision
atmos
axid.icon.dolby-atmos
itunes-extras-badge
axid.icon.itunes-extras
focusedView
v16@?0@"FBSOrientationUpdate"8
Text range: %{private}@, string: %{private}@
Sentence range: %{private}@
UIRemoteKeyboardWindow
inputViewSet
inputView
_UIRemoteKeyboards
enabled
BuildVersion
Library
Caches
com.apple.keyboards
Asked to make touch for view, but view's window was nil. view: %@
AXUIDisplayManager
Unable to find class %s
/System/Library/PrivateFrameworks/AccessibilityUIService.framework/AccessibilityUIService
/System/Library/PrivateFrameworks/AccessibilityUIService.framework/Contents/MacOS/AccessibilityUIService
__AXStringForVariablesSentinel
/Library/Caches/com.apple.xbs/Sources/AccessibilityFrameworks_Sim/AccessibilityFrameworks-2933.26/AccessibilityUmbrellaFramework/Frameworks/AccessibilityUIUtilities/Source/AXITMLUtilities.m
+[AXITMLUtilities firstItemTitleForViewElement:]
Expected first item to be of type: IKListItemLockupElement. It was :%@
IKListItemLockupElement
/System/Library/PrivateFrameworks/ITMLKit.framework/ITMLKit
/System/Library/PrivateFrameworks/ITMLKit.framework/Contents/MacOS/ITMLKit
IKViewElement
IKListTemplate
defaultDisplayEdgeInfo
_transformLayer
Name
Points
Forces
Times
/Library/Caches/com.apple.xbs/Sources/AccessibilityFrameworks_Sim/AccessibilityFrameworks-2933.26/AccessibilityUmbrellaFramework/Frameworks/AccessibilityUIUtilities/Source/AXGestureRecorderFingerPathCollection.m
-[AXGestureRecorderFingerPathCollection referenceTimesArray]
Should not have tried to get the reference times array if we were recording a real time gesture.
v32@?0@"NSNumber"8@"NSNumber"16^B24
-[AXGestureRecorderFingerPathCollection _realTimeFingerPathToAppendForIndex:upToPositionForTimestampAtIndex:]
Unexpected format for replayable gesture
Could not find a matching event for this particular timestamp: %f
v24@?0Q8^B16
CustomGestureVoiceOverLabel
CustomInstructions
CustomGesturesHideControls
CustomGesturesShowControls
fillColor
GrayTransition
AnimationName
HasExistingStaticFingers
AnimatingLayers
TransitionLayers
Change
/Library/Caches/com.apple.xbs/Sources/AccessibilityFrameworks_Sim/AccessibilityFrameworks-2933.26/AccessibilityUmbrellaFramework/Frameworks/AccessibilityUIUtilities/Source/AXGestureRecorderView.m
-[AXGestureRecorderView freezeAllDynamicFingerPathsWithInstantReplayOffset:]
If we were freezing dynamic finger paths during recording, we needed to instantly replay them, but we got no info for this
v32@?0@"CALayer"8Q16^B24
v12@?0B8
_interfaceOrientation
%@, label=%@, boundingRect=%@
-?(centered|day|night|mostly|partly|severe)-?+
Weather image extract regex failed with error: %@
now.precipitation.rain
now.precipitation.snow
precipitation.rain
precipitation.snow
thunderstorm
flurry-snow-snow-shower
drizzle
hail
rain
flurry
blowingsnow
sunny
breezy
cloudy
clear
suncloud
heavy-rain
No weather description key found for icon: %@
weather.condition.light.snow.showers
weather.condition.rain
weather.condition.tornado
weather.condition.tropical.storm
weather.condition.hurricane
weather.condition.severe.thunderstorm
weather.condition.thunderstorm
weather.condition.rain.and.snow
weather.condition.rain.and.sleet
weather.condition.snow.and.sleet
weather.condition.freezing.drizzle
weather.condition.drizzle
weather.condition.freezing.rain
weather.condition.showers
weather.condition.snow.flurries
weather.condition.snow.showers
weather.condition.blowing.snow
weather.condition.snow
weather.condition.hail
weather.condition.sleet
weather.condition.dust.haze
weather.condition.foggy
weather.condition.haze
weather.condition.smoky
weather.condition.blustery
weather.condition.windy
weather.condition.cold
weather.condition.clouds
weather.condition.mostly.cloudy
weather.condition.partly.cloudy
weather.condition.clear
weather.condition.mostly.clear
weather.condition.rain.and.hail
weather.condition.hot
weather.condition.isolated.thunderstorms
weather.condition.scattered.thunderstorms
weather.condition.scattered.showers
weather.condition.heavy.snow
weather.condition.blizzard
weather.condition.heavy.rain
weather.condition.isolated.thundershowers
weather.condition.unavailable
AX: UNHANDLED WEATHER CASE!
Reason to enable SW Keyboard because: %{public}@ [%d]
Reason to enable SW Keyboard removed because: %{public}@ [%d]
Reason to disable SW Keyboard because: %{public}@ [%d]
Reason to remove disable SW Keyboard because: %{public}@ [%d]
AXUIDaemonOrientationDidUpdateNotification
Duration
/Library/Caches/com.apple.xbs/Sources/AccessibilityFrameworks_Sim/AccessibilityFrameworks-2933.26/AccessibilityUmbrellaFramework/Frameworks/AccessibilityUIUtilities/Source/AXGestureRecorderViewController.m
-[AXGestureRecorderViewController _advanceReplay]
Should not have called _advanceReplay after end of gesture.
-[AXGestureRecorderViewController _advanceInstantReplayForStaticFingerAtIndex:]
Should not have been able to increment the timestamp beyond this point.
-[AXGestureRecorderViewController touchesBegan:withEvent:]
Should have had at least one touch
/Library/Caches/com.apple.xbs/Sources/AccessibilityFrameworks_Sim/AccessibilityFrameworks-2933.26/AccessibilityUmbrellaFramework/Frameworks/AccessibilityUIUtilities/Source/AXAssistiveTouchLayoutView.m
-[AXAssistiveTouchLayoutView layoutItemsByLocation:positions:rows:columns:clockwiseOctagonalLocations:horizontallyCenteredLocation:]
Should have picked a horizontally centered location that existed for this layout.
v24@?0@"UIView<AXAssistiveTouchLayoutItem>"8@"UIView<AXAssistiveTouchLayoutItem>"16
-[AXAssistiveTouchLayoutView _setUpConstraintsToAvoidCollisions:rows:columns:clockwiseOctagonalLocations:]
Should have had exactly eight specified locations to handle complex collisions.
UNNAMED_DRAG
UNNAMED_DRAG_ORDINAL
UNNAMED_DROP
UNNAMED_DROP_ORDINAL
_progressView.image
HelveticaNeue Thin
B24@?0@"UIView"8^B16
value
tv.progress.format
class
badge
accessibilityText
IKImageElement
IKTextElement
ShouldDisableTextFieldWhenNotEditing
ShouldAllowSelection
/System/Library/PreferenceBundles/AccessibilitySettings.bundle
com.apple.accessibility.AccessibilityUIUtilities
AXUILocalizedStrings
ZOOM_LENS_EFFECT_NONE
ZOOM_LENS_EFFECT_BLACK_AND_WHITE
ZOOM_LENS_EFFECT_LOW_LIGHT
ZOOM_LENS_EFFECT_BLACK_AND_WHITE_INVERTED
ZOOM_LENS_EFFECT_INVERTED
ZOOM_LENS_EFFECT_HUE_ADJUST
/Library/Caches/com.apple.xbs/Sources/AccessibilityFrameworks_Sim/AccessibilityFrameworks-2933.26/AccessibilityUmbrellaFramework/Frameworks/AccessibilityUIUtilities/Source/AXUIUtilitiesCommon.m
NSString *AXUILocalizedTitleForZoomLensEffect(NSString *__strong)
zoomLensEffect key not recognized: %@
ZOOM_LENS_MODE_FULLSCREEN
ZOOM_LENS_MODE_WINDOW
ZOOM_LENS_MODE_DOCKED
NSString *AXUILocalizedTitleForZoomLensMode(NSString *__strong)
zoomMode key not recognized: %@
DOCK_POSITION_TOP
DOCK_POSITION_LEFT
DOCK_POSITION_RIGHT
DOCK_POSITION_BOTTOM
NSString *AXUILocalizedTitleForDockPosition(NSString *__strong)
dockPosition key not recognized: %@
System/Library/CoreServices/AssistiveTouch.app
HOME
NOTIFICATION_CENTER
CUSTOM
DEVICE
SIRI
CONTROL_CENTER
LOCK
ORIENTATION
VOLUME_UP_ASSISTIVE_TOUCH
VOLUME_DOWN_ASSISTIVE_TOUCH
MUTE
GESTURES
TRIPLE_CLICK
SHAKE
APP_SWITCHER
SCREENSHOT
ORIENTATION_LOCKED
VOICE_CONTROL
COMMAND_AND_CONTROL
PINCH
ROTATE
PINCH_ROTATE
FORCE_TAP
DOUBLE_TAP
LONG_PRESS
HOLD_AND_DRAG
MOVE_MENU
SPOTLIGHT
SYSDIAGNOSE
REACHABILITY
REBOOT_DEVICE
DOCK
APPLE_PAY
SPEAK_SCREEN
OPEN_MENU
PASS_THROUGH
MOUSE_PRIMARY_CLICK
SIDE_APP
DWELL
DWELL_RESUME
DWELL_PAUSE
DWELL_PAUSE_TOGGLE
DWELL_LOCK
DWELL_UNLOCK
DWELL_LOCK_TOGGLE
DWELL_TIME_INCREASE
DWELL_TIME_DECREASE
SCROLL
Scroll-Up
Scroll-Down
Scroll-Left
Scroll-Right
SCROLL_TO_TOP
SCROLL_TO_BOTTOM
CAMERA
TORCH
ASSSISTIVETOUCH
VOICEOVER
CLASSIC_INVERT
COLOR_FILTERS
SMART_INVERT
ZOOM
ZOOM_CONTROLLER
MAGNIFIER
SWITCH_CONTROL
FULL_KEYBOARD_ACCESS
CustomGesture-
FORCE_TOUCH
_FULL_WIDTH
LocalizedStrings
LocalizedStrings-PeopleDetection
%@%@
_NHB_IPAD
_NHB
BackArrow
AT_LaunchFloatFromDock
AT_pinned_narrow
AT_pinned_narrow_for_flipping
AT_promote_sideapp_half
AT_dismiss_pinned_half
AT_PinFloatAppLeft
AT_PinFloatAppRight
AT_UnpinAppLeft
AT_UnpinAppRight
AT_SlideOpenFloatApp
AT_dismiss_overlay
AT_MoveFloatAppLeft
AT_MoveFloatAppRight
AT_Multitask
SCATIcon_device_volumeDown
SCATIcon_device_volumeUp
system-image-
IconHome
IconNotificationCenter
IconFavorites
SCATIcon_siri_shortcuts
IconDevice
IconSiri
IconControlCenter
IconLock
IconRotate
IconVolumeUp
IconVolumeDown
IconMuted
IconTripleClick
IconGestures
IconShake
IconAppSwitcher
IconScreenshot
IconRotationLock
IconVoiceControl
IconCommandAndControl
IconPinch
SCATIcon_gestures_rotateClockwise
IconOrb
SCATIcon_gestures_tap
IconDoubleTap
SCATIcon_gestures_holdAndDrag
SCATIcon_device_spotlightSearch
IconSOS
IconDiagnostics
IconReachability
IconRebootDevice
IconDock
IconApplePay
IconSpeakScreen
IconDwell
SCATIcon_mediacontrols_play
IconDwellPause
IconDwellFallbackDisable
IconDwellFallbackEnable
SCATIcon_settings_increaseScanSpeed
SCATIcon_settings_decreaseScanSpeed
SCATIcon_action_scroll
SCATIcon_action_scrollUp
SCATIcon_action_scrollDown
SCATIcon_action_scrollLeft
SCATIcon_action_scrollRight
SCATIcon_action_scrollToTop
SCATIcon_action_scrollToBottom
%@camera.fill
-tall
tortoise
hare
frame
window
unable to get drag endpoint: %@
Launched %@.
Will terminate %@.
Update orientation to %ld with duration %g
Exiting %@.
Restarting because SpringBoard just became active.
Unable to set keep alive to %i.
Color was not of class UIColor, %@
UIColor %@ has no CGColor
No known color description for %@
setting hardware keyboard attached state: %d [existing %d]
%{public}@
-[AXElementNamesView %@] called off the main thread!
Found element with no name: %@
Could not find a non-colliding position for label for %@
Unable to find any content size category >= Large that would fit the AssistiveTouch menu. Device width: %f
MbP?
?SSSSSS
?333333
softlink:r:path:/System/Library/PrivateFrameworks/AccessibilityUIService.framework/AccessibilityUIService
softlink:r:path:/System/Library/PrivateFrameworks/ITMLKit.framework/ITMLKit
softlink:r:path:/System/Library/PrivateFrameworks/ITMLKit.framework/ITMLKit
AXEndpointVending
NSObject
AXDragEndpointClient
AXGestureRecorderGradientViewAnimationDelegate
CAAnimationDelegate
AXGestureRecorderGradientView
AXATVUtils
AXUIDaemonApplicationDelegate
UIApplicationDelegate
AXUISettingsWelcomeControllerCommon
AXConstraintExtensions
AXConstraintBasedLayout
AXATV_Extras
AXProgramaticUITapGestureRecognizer
AXGestureRecorderStyleProvider
AXUIPlatterContainerView
AXDynamicTypeImageView
AXITMLUtilities
AXGestureRecorderFingerPathCollection
AXGestureRecorderView
AXUIFloatingViewPresenter
AXUIDaemonApplication
AXUIContextDrawingAnnotation
AXWeatherUtilities
AXUISoftwareKeyboardManager
AXElementNamesView
AXUIDaemonNonInteractiveWindow
AXUIDaemonWindow
AXDragEndpointRequestSatisfier
AXDragEndpointVendor
NSXPCListenerDelegate
AXDragEndpointRequestSatisfierDelegate
AXCyclingView
AXUIBannerView
AXGestureRecorderViewController
AXGestureRecorderViewDelegate
AXGestureRecorderFingerPathCollectionDelegate
AXAssistiveTouchLayoutView
AXElementNamesItemView
ASTBiggerProgressView
AXGestureRecorderControlsView
AXUISettingsEditableTextCell
UITextFieldDelegate
AXExtensions
FKAScrollView
AXUIBannerPresenter
AXUIPoliteBannerView
AXElementNamesStyleProvider
arrayWithObjects:count:
setWithArray:
containsObject:
init
isValidServiceName:
initWithMachServiceName:options:
isEqual:
class
self
performSelector:
performSelector:withObject:
performSelector:withObject:withObject:
isProxy
isKindOfClass:
isMemberOfClass:
conformsToProtocol:
respondsToSelector:
retain
release
autorelease
retainCount
zone
hash
superclass
description
debugDescription
TQ,R
T#,R
T@"NSString",R,C
requestDragEndpoint:
interfaceWithProtocol:
setRemoteObjectInterface:
resume
invalidate
dealloc
remoteObjectProxyWithErrorHandler:
initWithServiceName:
getDragEndpoint:
.cxx_destruct
_connection
completionBlock
animationDidStart:
animationDidStop:finished:
setCompletionBlock:
_completionBlock
T@?,C,N,V_completionBlock
layer
gradientLayer
_copyColorsArrayWithTopColor:bottomColor:
setKeyPath:
setFromValue:
setToValue:
colors
locations
initWithObjects:
setAnimations:
setDuration:
setDelegate:
addAnimation:forKey:
setColors:
setLocations:
_configureGradientWithTopColor:bottomColor:locations:animated:duration:completion:
_copyLocationsArrayWithTopColorLocation:bottomColorLocation:
CGColor
initWithFloat:
layerClass
configureGradientWithTopColor:bottomColor:
configureGradientWithTopColor:bottomColor:topColorLocation:bottomColorLocation:
configureGradientAnimatedWithTopColor:bottomColor:duration:completion:
configureGradientAnimatedWithTopColor:bottomColor:topColorLocation:bottomColorLocation:duration:completion:
T@"CAGradientLayer",R,N
mainBundle
bundleIdentifier
isEqualToString:
bundleForClass:
localizedStringForKey:value:table:
atvaccessibilityLocalizedString:
buttonSemanticContextWithName:
linkedDataDictionary
numberWithBool:
boolValue
scheme
host
path
stringByAppendingString:
hasPrefix:
stringWithFormat:
axContainsString:
accessibilityIdentifierForResourceURL:
accessibilityLabelForID:
mainScreen
safeValueForKey:
sharedInstance
isTVMLKitLoaded
isProcessTVAppStore
atvaccessibilityLocalizedNameForBundleID:
atvaccessibilityButtonSemanticContextWithName:
atvaccessibilityTVSPlayer:shouldAnnounceStateChanges:
atvaccessibilityAnnounceStateChangesForTVSPlayer:
accessibilityLabelForResourceURL:
currentFocusedView
_exitIfNotEnabled
_setKeepAlive:
defaultCenter
_enabledPreferenceDidChange:
featureEnabledStatusDidChangeNotification
addObserver:selector:name:object:
removeObserver:name:object:
loggingFacility
debugFeatureName
didFinishLaunching
orientation
duration
_didUpdateToOrientation:duration:
setHandler:
activeInterfaceOrientation
willTerminate
_setInterfaceOrientation:
currentDevice
setOrientation:animated:
numberWithDouble:
dictionaryWithObjects:forKeys:count:
postNotificationName:object:userInfo:
didUpdateOrientation
isFeatureEnabled
sharedApplication
terminateWithSuccess
applicationDidFinishLaunching:
application:willFinishLaunchingWithOptions:
application:didFinishLaunchingWithOptions:
applicationDidBecomeActive:
applicationWillResignActive:
application:handleOpenURL:
application:openURL:sourceApplication:annotation:
application:openURL:options:
applicationDidReceiveMemoryWarning:
applicationWillTerminate:
applicationSignificantTimeChange:
application:willChangeStatusBarOrientation:duration:
application:didChangeStatusBarOrientation:
application:willChangeStatusBarFrame:
application:didChangeStatusBarFrame:
application:didRegisterUserNotificationSettings:
application:didRegisterForRemoteNotificationsWithDeviceToken:
application:didFailToRegisterForRemoteNotificationsWithError:
application:didReceiveRemoteNotification:
application:didReceiveLocalNotification:
application:handleActionWithIdentifier:forLocalNotification:completionHandler:
application:handleActionWithIdentifier:forRemoteNotification:withResponseInfo:completionHandler:
application:handleActionWithIdentifier:forRemoteNotification:completionHandler:
application:handleActionWithIdentifier:forLocalNotification:withResponseInfo:completionHandler:
application:didReceiveRemoteNotification:fetchCompletionHandler:
application:performFetchWithCompletionHandler:
application:performActionForShortcutItem:completionHandler:
application:handleEventsForBackgroundURLSession:completionHandler:
application:handleWatchKitExtensionRequest:reply:
applicationShouldRequestHealthAuthorization:
application:handlerForIntent:
application:handleIntent:completionHandler:
applicationDidEnterBackground:
applicationWillEnterForeground:
applicationProtectedDataWillBecomeUnavailable:
applicationProtectedDataDidBecomeAvailable:
application:supportedInterfaceOrientationsForWindow:
application:shouldAllowExtensionPointIdentifier:
application:viewControllerWithRestorationIdentifierPath:coder:
application:shouldSaveSecureApplicationState:
application:shouldRestoreSecureApplicationState:
application:willEncodeRestorableStateWithCoder:
application:didDecodeRestorableStateWithCoder:
application:shouldSaveApplicationState:
application:shouldRestoreApplicationState:
application:willContinueUserActivityWithType:
application:continueUserActivity:restorationHandler:
application:didFailToContinueUserActivityWithType:error:
application:didUpdateUserActivity:
application:userDidAcceptCloudKitShareWithMetadata:
application:configurationForConnectingSceneSession:options:
application:didDiscardSceneSessions:
applicationShouldAutomaticallyLocalizeKeyCommands:
window
setWindow:
T@"UIWindow",&,N
T@"NSObject<OS_os_log>",R,N
T@"NSString",R,N
TB,R,N
_systemAppDidBecomeReady
_orientationObserver
T@"UIWindow",&,N,Vwindow
rangeEnclosingPosition:withGranularity:inDirection:
start
beginningOfDocument
endOfDocument
textRangeFromPosition:toPosition:
textInRange:
ignoreLogging
identifier
offsetFromPosition:toPosition:
ax_sentenceFromPosition:inDirection:
positionFromPosition:offset:
activeKeyboard
countByEnumeratingWithState:objects:count:
rootViewController
sharedInputModeController
currentInputMode
isExtensionInputMode
safeBoolForKey:
isActive
bounds
isMinimized
arrayWithObjects:
pathWithComponents:
initWithPath:version:
purge
mutableCopy
setNumberStyle:
numberWithUnsignedInteger:
stringFromNumber:
appendFormat:
stringWithString:
getRed:green:blue:alpha:
colorWithRed:green:blue:alpha:
getHue:saturation:brightness:alpha:
colorWithHue:saturation:brightness:alpha:
blackColor
getWhite:alpha:
colorWithWhite:alpha:
ax_buddyObservedTableViews
ax_setBuddyObservedTableViews:
ax_buddyDynamicHeightConstraints
ax_setBuddyDynamicHeightConstraints:
T@"NSMutableArray",&,N,Sax_setBuddyObservedTableViews:
T@"NSMutableArray",&,N,Sax_setBuddyDynamicHeightConstraints:
contentSize
indexOfObject:
objectAtIndexedSubscript:
setConstant:
removeObserver:forKeyPath:
firstItem
firstAttribute
relation
secondItem
secondAttribute
multiplier
constant
constraintWithItem:attribute:relatedBy:toItem:attribute:multiplier:constant:
setPriority:
ax_copyWithPriority:
ax_addedConstraintForLayoutAttribute:asEqualToConstant:
ax_addedConstraintForLayoutAttribute:asEqualToConstant:priority:
ax_addedConstraintForLayoutAttribute:asEqualToValueOfView:
ax_addedConstraintForLayoutAttribute:asEqualToValueOfView:priority:
ax_addedConstraintForLayoutAttribute:asEqualToValueOfView:withOffset:
ax_addedConstraintForLayoutAttribute:asEqualToValueOfView:withOffset:priority:
ax_addedConstraintForLayoutAttribute:asEqualToLayoutAttribute:ofView:
ax_addedConstraintForLayoutAttribute:asEqualToLayoutAttribute:ofView:withOffset:
ax_addedConstraintForLayoutAttribute:asEqualToLayoutAttribute:ofView:withOffset:priority:
ax_addedConstraintForLayoutAttribute:relatedBy:toItem:attribute:multiplier:constant:
ax_addedConstraintForLayoutAttribute:relatedBy:toItem:attribute:multiplier:constant:priority:
ax_addedConstraintForLayoutAttribute:asLessThanOrEqualToConstant:
ax_addedConstraintForLayoutAttribute:asLessThanOrEqualToConstant:priority:
ax_addedConstraintForLayoutAttribute:asLessThanOrEqualToValueOfView:
ax_addedConstraintForLayoutAttribute:asLessThanOrEqualToValueOfView:withOffset:
ax_addedConstraintForLayoutAttribute:asLessThanOrEqualToValueOfView:withOffset:priority:
ax_addedConstraintForLayoutAttribute:asLessThanOrEqualToLayoutAttribute:ofView:withOffset:
ax_addedConstraintForLayoutAttribute:asLessThanOrEqualToLayoutAttribute:ofView:withOffset:priority:
ax_addedConstraintForLayoutAttribute:asGreaterThanOrEqualToConstant:
ax_addedConstraintForLayoutAttribute:asGreaterThanOrEqualToConstant:priority:
ax_addedConstraintForLayoutAttribute:asGreaterThanOrEqualToValueOfView:
ax_addedConstraintForLayoutAttribute:asGreaterThanOrEqualToValueOfView:withOffset:
ax_addedConstraintForLayoutAttribute:asGreaterThanOrEqualToValueOfView:withOffset:priority:
ax_addedConstraintForLayoutAttribute:asGreaterThanOrEqualToLayoutAttribute:ofView:withOffset:
ax_addedConstraintForLayoutAttribute:asGreaterThanOrEqualToLayoutAttribute:ofView:withOffset:priority:
ax_firstCommonAncestorWithView:
addConstraint:
superview
_ax_depth
arrayWithCapacity:
addObject:
setContentHuggingPriority:forAxis:
setContentCompressionResistancePriority:forAxis:
ax_constrainLayoutAttribute:asEqualToConstant:
ax_constrainLayoutAttribute:asEqualToConstant:priority:
ax_constrainLayoutAttribute:asEqualToValueOfView:
ax_constrainLayoutAttribute:asEqualToValueOfView:priority:
ax_constrainLayoutAttribute:asEqualToValueOfView:withOffset:
ax_constrainLayoutAttribute:asEqualToValueOfView:withOffset:priority:
ax_constrainLayoutAttribute:asEqualToLayoutAttribute:ofView:
ax_constrainLayoutAttribute:asEqualToLayoutAttribute:ofView:withOffset:
ax_constrainLayoutAttribute:asEqualToLayoutAttribute:ofView:withOffset:priority:
ax_constrainLayoutAttribute:asLessThanOrEqualToConstant:
ax_constrainLayoutAttribute:asLessThanOrEqualToConstant:priority:
ax_constrainLayoutAttribute:asLessThanOrEqualToValueOfView:
ax_constrainLayoutAttribute:asLessThanOrEqualToValueOfView:withOffset:
ax_constrainLayoutAttribute:asLessThanOrEqualToValueOfView:withOffset:priority:
ax_constrainLayoutAttribute:asLessThanOrEqualToLayoutAttribute:ofView:withOffset:
ax_constrainLayoutAttribute:asLessThanOrEqualToLayoutAttribute:ofView:withOffset:priority:
ax_constrainLayoutAttribute:asGreaterThanOrEqualToConstant:
ax_constrainLayoutAttribute:asGreaterThanOrEqualToConstant:priority:
ax_constrainLayoutAttribute:asGreaterThanOrEqualToValueOfView:
ax_constrainLayoutAttribute:asGreaterThanOrEqualToValueOfView:withOffset:
ax_constrainLayoutAttribute:asGreaterThanOrEqualToValueOfView:withOffset:priority:
ax_constrainLayoutAttribute:asGreaterThanOrEqualToLayoutAttribute:ofView:withOffset:
ax_constrainLayoutAttribute:asGreaterThanOrEqualToLayoutAttribute:ofView:withOffset:priority:
ax_constrainLayoutAttribute:relatedBy:toItem:attribute:multiplier:constant:
ax_constrainLayoutAttribute:relatedBy:toItem:attribute:multiplier:constant:priority:
ax_pinConstraintsInAllDimensionsToView:
ax_setContentHuggingAndCompressionResistance:
_atvaccessibilityAlphaComponent
axProgramaticState
state
setAxProgramaticState:
_axProgramaticState
Tq,N,V_axProgramaticState
preferredFontForTextStyle:
secondaryLabelColor
clearColor
systemGroupedBackgroundColor
userInterfaceIdiom
gestureRecorderViewBackgroundGradientTopColor
minimumFingerLineWidth
systemTealColor
colorWithAlphaComponent:
systemBlueColor
systemGray2Color
fingerLineGradientTopColorLocation
fingerLineGradientBottomColorLocation
whiteColor
fingerLineOuterBevelColor
fingerLineDropDownShadowOffset
instructionsLabelFont
instructionsLabelTextColor
instructionsLabelBackgroundColor
instructionsLabelShadowColor
instructionsLabelShadowOffset
instructionsLabelHorizontalInset
gestureRecorderViewBackgroundColor
gestureRecorderViewBackgroundGradientBottomColor
maximumFingerLineWidth
tracingDynamicFingerColor
finalDynamicFingerColor
staticFingerColor
fingerLineGradientTopColor
fingerLineGradientBottomColor
dynamicFingerLineGradientTopColor
dynamicFingerLineGradientBottomColor
dynamicFingerLineGradientTopColorLocation
dynamicFingerLineGradientBottomColorLocation
fingerLineOuterBevelWidth
dynamicFingerLineOuterBevelColor
dynamicFingerLineOuterBevelWidth
fingerLineDropDownShadowColor
fingerLineDropDownShadowRadius
fingerLineDropDownShadowOpacity
dynamicFingerLineDropDownShadowColor
dynamicFingerLineDropDownShadowOffset
dynamicFingerLineDropDownShadowRadius
dynamicFingerLineDropDownShadowOpacity
CGImage
convertPoint:fromView:
setPhase:
setTimestamp:
setTapCount:
setView:
_setLocationInWindow:resetPrevious:
_setIsFirstTouchForView:
initWithFrame:
effectWithStyle:
initWithEffect:
setTranslatesAutoresizingMaskIntoConstraints:
primaryTextStyle
metricsForTextStyle:
scaledValueForValue:
_setContinuousCornerRadius:
setShadowColor:
setShadowOffset:
setShadowOpacity:
setShadowRadius:
addSubview:
shouldMimicNotificationBannerTopOffset
safeAreaLayoutGuide
sharedDisplayManager
activeWindows
allValues
lastObject
passiveWindows
safeAreaInsets
delegate
leadingAnchor
constraintGreaterThanOrEqualToAnchor:constant:
trailingAnchor
constraintLessThanOrEqualToAnchor:constant:
topAnchor
constraintEqualToAnchor:constant:
bottomAnchor
centerXAnchor
constraintEqualToAnchor:
platterWidth
widthAnchor
constraintEqualToConstant:
allowsScrolling
contentView
heightAnchor
addObjectsFromArray:
ax_constraintsToMakeView:sameDimensionsAsView:
activateConstraints:
platterBlurEffect
platterView
_contentView
_platterBlurEffect
_platterView
T@"UIView",R,N,V_platterView
T@"UIView",R,N,V_contentView
T@"UIBlurEffect",R,N,V_platterBlurEffect
Td,R,N
defaultMetrics
initWithImage:
_commonInit
initWithImage:highlightedImage:
traitCollection
preferredContentSizeCategory
maximumContentSizeCategory
minimumContentSizeCategory
traitCollectionWithPreferredContentSizeCategory:
fontMetrics
scaledValueForValue:compatibleWithTraitCollection:
intrinsicContentSize
_scaledSizeForSize:
sizeThatFits:
traitCollectionDidChange:
invalidateIntrinsicContentSize
setMinimumContentSizeCategory:
setMaximumContentSizeCategory:
setFontMetrics:
_fontMetrics
_minimumContentSizeCategory
_maximumContentSizeCategory
T@"UIFontMetrics",&,N,V_fontMetrics
T@"NSString",C,N,V_minimumContentSizeCategory
T@"NSString",C,N,V_maximumContentSizeCategory
length
localizedCaseInsensitiveContainsString:
_listTemplateForViewElement:
list
sections
items
count
firstObject
title
text
string
children
textByReconcilingClientText:withServerText:
listItemElementCountForViewElement:
firstItemTitleForViewElement:
homeAffordanceOverlayAllowance
doubleValue
convertPoint:toLayer:
convertRect:toLayer:
convertPoint:fromLayer:
convertRect:fromLayer:
connectedScenes
windows
axSafelyAddObjectsFromArray:
_accessibilityAllWindowsOnlyVisibleWindows:
safeAreaInsetsPortrait
safeAreaInsetsLandscapeLeft
safeAreaInsetsLandscapeRight
safeAreaInsetsPortraitUpsideDown
setMaximumFingerPathsCount:
_referenceTimesArrayIndexNeedsRefresh
reset
fingerPaths
shouldRecordRealTimeGesture
timesArrays
referenceTimesArray
referenceTimesArrayIndex
setReferenceTimesArrayIndex:
objectAtIndex:
_realTimeFingerPathToAppendForIndex:upToPositionForTimestampAtIndex:
_nonRealTimeFingerPathToAppendForIndex:upToPositionForTimestampAtIndex:
timestampsCount
pointsArrays
forcesArrays
bezierPath
CGPointValue
_bezierPathToAppendForTouchLocation:unnamedValue:optionalPreviousTouchLocation:optionalPreviousForce:
appendBezierPath:
timestampAtIndex:
touchPathIndicesToFingerPathIndices
unsignedIntegerValue
enumerateKeysAndObjectsUsingBlock:
replayableGesture
numberOfEvents
timeAtEventIndex:
fingerIdentifiersAtEventIndex:
pointForFingerIdentifier:atEventIndex:
forceForFingerIdentifier:atEventIndex:
valueWithCGPoint:
removeObjectAtIndex:
dictionaryWithObjectsAndKeys:
convertPoint:toView:
convertPoint:toWindow:
bezierPathWithArcCenter:radius:startAngle:endAngle:clockwise:
appendPath:
moveToPoint:
addLineToPoint:
closePath
maximumFingerPathsCount
setTimesArrays:
initWithDouble:
initWithIndexesInRange:
_pathIndex
numberWithUnsignedInt:
objectForKey:
locationInView:
_pressure
setObject:forKeyedSubscript:
_interfaceOrientedScreenPointForPoint:view:
setFingerPaths:
setPointsArrays:
setForcesArrays:
setTouchPathIndicesToFingerPathIndices:
initWithUnsignedInteger:
setObject:forKey:
_didInsertFingerPathAtIndex:
removeIndex:
_didUpdateFingerPathAtIndex:
enumerateIndexesUsingBlock:
_addPointsToReplayableGesture:forces:time:
setWithCapacity:
numberWithUnsignedChar:
numberWithFloat:
dictionary
addPointsByFingerIdentifier:forces:atTime:
objectForKeyedSubscript:
numberWithUnsignedLong:
setReplayableGesture:
addPointsFromReplayableGesture:
gestureRecorderFingerPathCollection:didInsertFingerPathAtIndex:
gestureRecorderFingerPathCollection:didUpdateFingerPathAtIndex:
initWithMaximumFingerPathsCount:
fingerPathsCount
fingerPathAtIndex:
fingerPathToAppendForIndex:forTimestampAtIndex:
propertyListRepresentationWithName:
replayableGestureRepresentation
appendPointsForTouches:referenceView:time:
handleLiftForTouches:referenceView:time:
appendFingerPathsFromFingerPathCollection:
setShouldRecordRealTimeGesture:
setMinimumFingerLineWidth:
setMaximumFingerLineWidth:
_shouldRecordRealTimeGesture
_delegate
_maximumFingerPathsCount
_referenceTimesArrayIndex
_fingerPaths
_pointsArrays
_forcesArrays
_touchPathIndicesToFingerPathIndices
_timesArrays
_minimumFingerLineWidth
_maximumFingerLineWidth
_replayableGesture
TQ,N,V_maximumFingerPathsCount
TQ,N,V_referenceTimesArrayIndex
T@"NSMutableArray",R,N
T@"NSMutableArray",&,N,V_fingerPaths
T@"NSMutableArray",&,N,V_pointsArrays
T@"NSMutableArray",&,N,V_forcesArrays
T@"NSMutableDictionary",&,N,V_touchPathIndicesToFingerPathIndices
T@"NSMutableArray",&,N,V_timesArrays
T@"AXMutableReplayableGesture",&,N,V_replayableGesture
T@"<AXGestureRecorderFingerPathCollectionDelegate>",W,N,V_delegate
TQ,R,N
TB,N,V_shouldRecordRealTimeGesture
Td,N,V_minimumFingerLineWidth
Td,N,V_maximumFingerLineWidth
setUserInteractionEnabled:
setMultipleTouchEnabled:
setNeedsDisplay
initWithCoder:
styleProvider
deleteAllFingerPaths
numberOfDynamicFingerPathsInGestureRecorderView:
insertDynamicFingerPathAtIndex:
screen
scale
initWithPatternImage:
layoutFrame
dataSource
gestureRecorderView:setChromeVisible:
canToggleChromeForGestureRecorderView:
isChromeVisibleForGestureRecorderView:
hideControlsAction
_hideControls
initWithName:target:selector:
setHideControlsAction:
showControlsAction
_showControls
setShowControlsAction:
didMoveToWindow
_dynamicFingerPathAtIndex:
replayMode
setFillColor:
addSublayer:
CGPath
setPath:
gestureRecorderView:dynamicFingerPathAtIndex:
fingerPathDidChange:
previouslyActiveLayersByInstantReplayFingerIndex
removeFromSuperlayer
insertSublayer:atIndex:
_performTransitionToStaticFingers:transitionLayers:hasExistingStaticFingers:
removeObjectForKey:
removeAllObjects
animationWithKeyPath:
setValue:forKey:
valueForKey:
freezeAllDynamicFingerPathsWithInstantReplayOffset:
copy
setPreviouslyActiveLayersByInstantReplayFingerIndex:
removeAllAnimations
sublayers
enumerateObjectsUsingBlock:
clearInstantReplayFingerPaths
drawRect:
setDataSource:
setStyleProvider:
dynamicFingerPathBackgroundGradientPatternColor
isAccessibilityElement
accessibilityFrame
accessibilityLabel
accessibilityHint
accessibilityTraits
accessibilityCustomActions
reloadDynamicFingerPathAtIndex:
updateInstantReplayAtIndex:withPartialPath:
finishInstantReplayAtIndex:
freezeAllDynamicFingerPaths
hideStaticView
gestureRecognizerShouldBegin:
dynamicFingerPathsContainerView
setDynamicFingerPathsContainerView:
setDynamicFingerPathBackgroundGradientPatternColor:
constrainedBoundsForDrawing
setConstrainedBoundsForDrawing:
setReplayMode:
_freezeDryStartTime
_freezeDryDrawPercentage
_freezeDryStartIndex
_freezedDynamicPaths
_activeLayers
_instantReplayViews
_staticLayers
_transitionLayers
_replayMode
_dataSource
_styleProvider
_dynamicFingerPathsContainerView
_dynamicFingerPathBackgroundGradientPatternColor
_hideControlsAction
_showControlsAction
_previouslyActiveLayersByInstantReplayFingerIndex
_constrainedBoundsForDrawing
T@"UIView",&,N,V_dynamicFingerPathsContainerView
T@"UIColor",&,N,V_dynamicFingerPathBackgroundGradientPatternColor
T{CGRect={CGPoint=dd}{CGSize=dd}},N,V_constrainedBoundsForDrawing
T@"UIAccessibilityCustomAction",&,N,V_hideControlsAction
T@"UIAccessibilityCustomAction",&,N,V_showControlsAction
T@"NSMutableDictionary",&,N,V_previouslyActiveLayersByInstantReplayFingerIndex
T@"AXGestureRecorderStyleProvider",&,N,V_styleProvider
T@"<AXGestureRecorderViewDelegate>",W,N,V_dataSource
TB,N,V_replayMode
floatingView
setFloatingView:
setEdgeConstraints:
willDismissFloatingViewForPresenter:
setAlpha:
removeFromSuperview
animateWithDuration:animations:completion:
_hideFloatingView
cancelPreviousPerformRequestsWithTarget:selector:object:
containingView
constraintGreaterThanOrEqualToAnchor:
constraintLessThanOrEqualToAnchor:
_updateEdgeConstraints
performSelector:withObject:afterDelay:
edgeConstraints
deactivateConstraints:
withinSafeArea
alignedEdge
centerYAnchor
initWithContainingView:alignedToEdge:withinSafeArea:
presentFloatingView:withDuration:
dismissFloatingView
setAlignedEdge:
_withinSafeArea
_containingView
_alignedEdge
_floatingView
_edgeConstraints
T@"UIView",&,N,V_floatingView
T@"NSArray",&,N,V_edgeConstraints
T@"<AXUIFloatingViewPresenterDelegate>",W,N,V_delegate
T@"UIView",R,N,V_containingView
TQ,N,V_alignedEdge
TB,R,N,V_withinSafeArea
settings
preferredWindowLevel
setPreferredLevel:
safeIntegerForKey:
_isSystemUIService
_systemUIServiceClientSettings
_systemUIServiceIdentifier
_frontMostAppOrientation
valueWithPointer:
initWithLabel:boundingRect:
contextAnnotationMap
array
removeObject:
label
boundingRect
addLabel:boundingRect:withContext:
annotationsForContext:
_label
_boundingRect
T@"NSString",R,N,V_label
T{CGRect={CGPoint=dd}{CGSize=dd}},R,N,V_boundingRect
stringByDeletingPathExtension
regularExpressionWithPattern:options:error:
localizedDescription
stringByReplacingMatchesInString:options:range:withTemplate:
_weatherCodeForGenericIconName:
descriptionForWeatherWFConditionCode:
floatValue
descriptionForWeatherConditionImageName:
descriptionForPrecipitation:weatherConditionCode:
stringWithUTF8String:
updateKeyboardHardwareState
softwareKeyboardManagerWillUpdateKeyboardState:
softwareKeyboardManager:didSetHardwareKeyboardAttached:
_wst_setIsHardwareKeyboardAttached:
_setIsHardwareKeyboardAttached:
softwareKeyboardManagerShouldSetHardwareKeyboardAttached:hardwareKeyboardIsCurrentlyAttached:newHardwareKeyboardAttachedValue:
_updateHardwareKeyboardState
isHardwareKeyboardAttached
_overrideSetHardwareKeyboardAttached:
addReasonToEnableSoftwareKeyboard:
removeReasonToEnableSoftwareKeyboard:
addReasonToDisableSoftwareKeyboard:
removeReasonToDisableSoftwareKeyboard:
_reasonsToDisableSoftwareKeyboard
_reasonsToEnableSoftwareKeyboard
T@"<AXUISoftwareKeyboardManagerDelegate>",W,N,V_delegate
isMainThread
setDidUpdateItems:
setNeedsLayout
layoutSubviews
boundsForLastReload
didUpdateItems
setBoundsForLastReload:
_reloadViews
containers
endCycling
elementName
elementFrame
fixedCoordinateSpace
convertRect:fromCoordinateSpace:
initWithName:elementFrame:availableBounds:styleProvider:
elementLabelContainerSize
setForcedLabelContainerSize:
_arrangeNameViews:withinContainer:
subviews
removeObjectsInArray:
beginCycling
labelContainerFrame
collidesWithView:
labelPosition
name
setLabelPosition:
_adjustLabelPositionForView:toAvoidCollidingWithView:
hasExtendedArrow
insertSubview:atIndex:
setItems:
viewsInCycle
setLoggingFacility:
_didUpdateItems
_items
_loggingFacility
_containers
_boundsForLastReload
T{CGRect={CGPoint=dd}{CGSize=dd}},N,V_boundsForLastReload
TB,N,V_didUpdateItems
T@"NSArray",&,N,V_items
T@"NSObject<OS_os_log>",&,N,V_loggingFacility
T@"AXElementNamesStyleProvider",&,N,V_styleProvider
T@"NSMutableArray",R,N,V_containers
_ignoresHitTest
setBackgroundColor:
setClipsToBounds:
_didUpdateOrientation:
userInfo
_updateInterfaceOrientationFromDeviceOrientation:
_sceneSettingsSafeAreaInsetsDidChange
interfaceOrientation
_isSecure
_normalizedSafeAreaInsets
_accessibilityWindowUsesOwnOrientationForComparingGeometry
setExportedInterface:
setExportedObject:
endpointRequestSatisfierDidDisconnect:
setInvalidationHandler:
endpointForConnection:forEndpointRequestSatisfier:
initWithConnection:
T@"<AXDragEndpointRequestSatisfierDelegate>",W,N,V_delegate
endpointForRequestingConnection:fromEndpointVendor:
listener:shouldAcceptNewConnection:
initWithXPCListener:
_listener
_activeConnections
T@"<AXDragEndpointVendorDelegate>",W,N,V_delegate
bezierPathWithOvalInRect:
fill
resizableImageWithCapInsets:
_updateForCycleIndex
_makeNextViewVisible
setCycleIndex:
isMakingNextViewVisible
setShouldSkipMakingNextViewVisible:
cycleIndex
setIsMakingNextViewVisible:
shouldSkipMakingNextViewVisible
_isMakingNextViewVisible
_shouldSkipMakingNextViewVisible
_cycleIndex
TQ,N,V_cycleIndex
TB,N,V_isMakingNextViewVisible
TB,N,V_shouldSkipMakingNextViewVisible
T@"NSArray",R,N
effectForBlurEffect:
setFont:
setNumberOfLines:
setTextAlignment:
setHidden:
defaultTitleToSubtitleVerticalSpacing
font
capHeight
defaultPlatterToTextVerticalSpacing
platterToTextHorizontalSpacing
lastBaselineAnchor
firstBaselineAnchor
textLabel
setText:
secondaryTextLabel
_updateSecondaryTextVisibility
isHidden
withSecondaryTextConstraints
setSecondaryText:
secondaryText
setTextLabel:
setSecondaryTextLabel:
setWithSecondaryTextConstraints:
_secondaryText
_textLabel
_secondaryTextLabel
_withSecondaryTextConstraints
T@"UILabel",&,N,V_textLabel
T@"UILabel",&,N,V_secondaryTextLabel
T@"NSArray",&,N,V_withSecondaryTextConstraints
T@"NSString",&,N
T@"NSString",&,N,V_secondaryText
_releaseOutlets
view
fingerPathCollection
dynamicFingerPathCollection
setAutoresizingMask:
gestureRecorderView
setFingerPathCollection:
setDynamicFingerPathCollection:
setShouldPreventFurtherRecording:
setTrackingTouches:
_endInstantReplay
_exitReplayMode
setInReplayMode:
setReplayTimestampIndex:
setReplayTimestampsCount:
_advanceReplay
_freezeAllDynamicFingerPaths
replayTimestampIndex
replayTimestampsCount
replayDynamicFingerPaths
setReplayDynamicFingerPaths:
_didFinishReplayingRecordedGesture
instantReplayTimestampIndexes
setInstantReplayTimestampIndexes:
instantReplayPartialFingerPaths
setInstantReplayPartialFingerPaths:
isEmpty
_endInstantReplayForStaticFingerAtIndex:
_advanceInstantReplayForStaticFingerAtIndex:
isViewLoaded
_clearWeakReferencesWithOutlets
maximumDurationOfRecordedGestureForGestureRecorderViewController:
gestureRecorderViewController:didStartRecordingAtomicFingerPathAtPoint:
gestureRecorderViewControllerDidStopRecordingAtomicFingerPath:
gestureRecorderViewControllerDidFinishReplayingRecordedGesture:
recorderType
reloadAllFingerPaths
isInReplayMode
_startInstantReplayForStaticFingerAtIndex:
shouldPreventFurtherRecording
isTrackingTouches
anyObject
setWithObject:
_didStartRecordingAtomicFingerPathAtPoint:
setTrackingTouchesDidStartTimeInterval:
_updateDynamicFingerPathsWithTouches:touchesDidEnd:
trackingTouchesDidStartTimeInterval
_maximumDurationOfRecordedGesture
touchesForView:
_didStopRecordingAtomicFingerPath
touchesEnded:withEvent:
isChromeVisibleForGestureRecorderViewController:
gestureRecorderViewController:setChromeVisible:
loadView
recordedGesturePropertyListRepresentationWithName:
recordedReplayableGestureRepresentation
preventFurtherRecording
replayRecordedGesture
touchesBegan:withEvent:
touchesMoved:withEvent:
touchesCancelled:withEvent:
setRecorderType:
_shouldPreventFurtherRecording
_trackingTouches
_inReplayMode
_fingerPathCollection
_dynamicFingerPathCollection
_trackingTouchesDidStartTimeInterval
_replayTimestampIndex
_replayTimestampsCount
_replayDynamicFingerPaths
_recorderType
_instantReplayTimestampIndexes
_instantReplayPartialFingerPaths
T@"AXGestureRecorderFingerPathCollection",&,N,V_fingerPathCollection
T@"AXGestureRecorderFingerPathCollection",&,N,V_dynamicFingerPathCollection
TB,N,V_shouldPreventFurtherRecording
trackingTouches
TB,N,GisTrackingTouches,V_trackingTouches
Td,N,V_trackingTouchesDidStartTimeInterval
inReplayMode
TB,N,GisInReplayMode,V_inReplayMode
TQ,N,V_replayTimestampIndex
TQ,N,V_replayTimestampsCount
T@"NSMutableArray",&,N,V_replayDynamicFingerPaths
T@"NSMutableDictionary",&,N,V_instantReplayTimestampIndexes
T@"NSMutableDictionary",&,N,V_instantReplayPartialFingerPaths
T@"<AXGestureRecorderViewControllerDelegate>",W,N,V_delegate
T@"AXGestureRecorderView",R,N
empty
TB,R,N,GisEmpty
Tq,N,V_recorderType
labelMinimumContentSizeCategory
labelMaximumContentSizeCategory
_preferredContentSizeCategoryCappedByMinimumContentSizeCategory:maximumContentSizeCategory:
_layoutViewSideLengthScaledFromDefaultLength:labelContentSizeCategory:
_imageMaximumContentSizeCategoryIndependentOfLabel
minimumOuterPadding
defaultSideLength
_traitCollectionForMinimumContentSizeCategory:maximumContentSizeCategory:
imageMinimumContentSizeCategory
imageMaximumContentSizeCategory
systemFontOfSize:
_lightSystemFontOfSize:
traitCollectionForLabelPreferredContentSizeCategory
scaledFontForFont:compatibleWithTraitCollection:
layoutItemsByLocation:positions:rows:columns:clockwiseOctagonalLocations:horizontallyCenteredLocation:
_enableAutoLayoutForAllItems:
itemConstraints
setItemConstraints:
_setUpConstraintsForPreferredPositionsForItems:positions:
_setUpConstraintsToAlignItems:rows:columns:
_setUpConstraintsToAvoidCollisions:rows:columns:clockwiseOctagonalLocations:
positioningLayoutGuides
removeLayoutGuide:
setPositioningLayoutGuides:
addLayoutGuide:
constraintEqualToAnchor:multiplier:
imageView
leftAnchor
rightAnchor
_enumerateListsOfLocations:items:withBlock:
constraintGreaterThanOrEqualToSystemSpacingAfterAnchor:multiplier:
constraintGreaterThanOrEqualToSystemSpacingBelowAnchor:multiplier:
imageViewContainerView
centerItems:withView:
layoutViewSideLengthScaledFromDefaultLength:
traitCollectionForImagePreferredContentSizeCategory
labelFont
T@"UIFontMetrics",R,N
T@"UITraitCollection",R,N
T@"UIFont",R,N
layoutItemsByLocation:hasBackButton:
centerItems:
_itemConstraints
_positioningLayoutGuides
T@"NSArray",&,N,V_itemConstraints
T@"NSMutableArray",&,N,V_positioningLayoutGuides
itemBackgroundViewCreationHandler
setAdjustsFontForContentSizeCategory:
setTextColor:
_updateLabelContainerSize
_updateFromMainProperties
_usesExtendedArrow
_updateFromLabelContainerFrame
_collisionFrameForArrow
_usesArrow
arrowTipLocation
_arrowPointsDown
availableBounds
forcedLabelContainerSize
sizeToFit
frame
setLabelContainerSize:
setFrame:
_shouldAllowLongArrows
_elementFrameAdjustedForBounds
labelContainerSize
_arrowHeight
setArrowTipLocation:
_validateLabelContainerFrame:
setLabelContainerFrame:
_outlineWidth
_newBackgroundImage
setImage:
setMaskView:
_cornerRadius
bezierPathWithRoundedRect:cornerRadius:
setLineWidth:
addQuadCurveToPoint:controlPoint:
stroke
_backgroundView
_backgroundMaskView
_labelPosition
_forcedLabelContainerSize
_labelContainerSize
_arrowTipLocation
_elementFrame
_availableBounds
_labelContainerFrame
T{CGSize=dd},N,V_labelContainerSize
T{CGPoint=dd},N,V_arrowTipLocation
T{CGRect={CGPoint=dd}{CGSize=dd}},R,N,V_elementFrame
T{CGRect={CGPoint=dd}{CGSize=dd}},R,N,V_availableBounds
Tq,N,V_labelPosition
T{CGRect={CGPoint=dd}{CGSize=dd}},N,V_labelContainerFrame
T{CGSize=dd},N,V_forcedLabelContainerSize
localizedStringWithFormat:
_systemGroupBackgroundCellColor
tableSeparatorColor
initWithProgressViewStyle:
_quaternaryLabelColor
setTrackTintColor:
setProgress:
progress
safeValueForKeyPath:
capInsets
setProgress:animated:
size
fontWithName:size:
buttonWithType:
titleLabel
_secondaryLabelColor
setTitleColor:forState:
leftButton
rightButton
makeButton
setRightButton:
setLeftButton:
_buttonTapped:
addTarget:action:forEvents:
setTitle:forState:
setEnabled:
isEnabled
gestureRecorderControlsView:buttonTappedAtIndex:
defaultHeight
setLeftButtonColor:title:enabled:rightButtonColor:title:enabled:animationDuration:completion:
isLeftButtonEnabled
setLeftButtonEnabled:
isRightButtonEnabled
setRightButtonEnabled:
setMiddleButton:
middleButton
_leftButton
_rightButton
_progressView
_middleButton
T@"UIButton",&,N,V_leftButton
T@"UIButton",&,N,V_rightButton
T@"<AXGestureRecorderControlsViewDelegate>",W,N,V_delegate
Tf,N
leftButtonEnabled
TB,N,GisLeftButtonEnabled
rightButtonEnabled
TB,N,GisRightButtonEnabled
T@"UIButton",&,N,V_middleButton
_accessibilityAncestorIsKindOf:
_accessibilityFindUnsortedSubviewDescendantsPassingTest:
_atvaccessibilityClosestElementAbove:
accessibilityIdentifier
accessibilityContainer
accessibilityText
containsString:
tv_elementType
attributes
_atvAccessibilityITMLAccessibilityContentWithElement:
tv_AccessibilityText
tv_associatedIKViewElement
_accessibilityBadgeTextForTextElement:
badges
tv_siriData
_atvaccessibilityLabel
iTunesStoreItemSemanticContextWithName:metadata:
_atvaccessibilityITMLSemanticContext
_accessibilityExtendedLabelForFocusParcelWithLabel:
_atvaccessibilityGeometricNearestHeader
_atvaccessibilityAncestorHasAXID:
_atvaccessibilityITMLAccessibilityContent
_atvaccessibilityITMLClass
_atvaccessibilitySemanticContext
T@"NSDictionary",R,N
initWithStyle:reuseIdentifier:
initializeView
setIsAccessibilityElement:
setAccessibilityRespondsToUserInteraction:
_accessibilityLoadAccessibilityInformation
markNameTextFieldAccessible
setReturnKeyType:
textFieldValueBlock
shouldDisableTextFieldWhenNotEditing
shouldAllowSelection
setAccessoryType:
setSelectionStyle:
setEditing:animated:
resignFirstResponder
backgroundColor
textFieldValueSetBlock
textFieldShouldBeginEditing:
textFieldDidBeginEditing:
textFieldShouldEndEditing:
textFieldDidEndEditing:
textFieldDidEndEditing:reason:
textField:shouldChangeCharactersInRange:replacementString:
textFieldDidChangeSelection:
textFieldShouldClear:
textFieldShouldReturn:
_accessibilityIgnoreInternalLabels
updateText
nameTextField
setNameTextField:
setTextFieldValueBlock:
setTextFieldValueSetBlock:
setShouldDisableTextFieldWhenNotEditing:
setShouldAllowSelection:
_shouldDisableTextFieldWhenNotEditing
_shouldAllowSelection
_nameTextField
_textFieldValueBlock
_textFieldValueSetBlock
T@?,C,N,V_textFieldValueBlock
T@?,C,N,V_textFieldValueSetBlock
T@"UITextField",&,N,V_nameTextField
TB,N,V_shouldDisableTextFieldWhenNotEditing
TB,N,V_shouldAllowSelection
ax_constraintsToMakeItem:sameDimensionsAsItem:
integerValue
constraints
removeConstraint:
ax_removeFromContainer
contentInset
contentOffset
setContentOffset:animated:
_scrollInXDirection:yDirection:
_scrollUp:
keyCommandWithInput:modifierFlags:action:
_scrollDown:
canBecomeFocused
_accessibilityKeyCommands
_contentSizeCategoryDidChange:
presentBannerViewWithText:secondaryText:duration:fromUserAction:
bannerView
setBannerView:
initWithContainingView:
presentBannerViewWithText:duration:
presentCustomView:duration:
_bannerView
T@"AXUIBannerView",&,N,V_bannerView
setItemBackgroundViewCreationHandler:
_itemBackgroundViewCreationHandler
T@?,C,N,V_itemBackgroundViewCreationHandler
stringByAppendingPathComponent:
bundleWithPath:
bundleWithIdentifier:
rangeOfString:
substringFromIndex:
stringByAppendingFormat:
_referenceBounds
_deviceSpecificImageNamed:inBundle:
stringByReplacingOccurrencesOfString:withString:
configurationWithPointSize:
systemImageNamed:withConfiguration:
systemImageNamed:
systemWhiteColor
systemGreenColor
systemYellowColor
systemRedColor
systemOrangeColor
zoomShouldFollowFocus
convertRect:toWindow:
B24@0:8@16
#16@0:8
@16@0:8
@24@0:8:16
@32@0:8:16@24
@40@0:8:16@24@32
B16@0:8
B24@0:8#16
B24@0:8:16
Vv16@0:8
Q16@0:8
^{_NSZone=}16@0:8
B24@0:8@"Protocol"16
@"NSString"16@0:8
v24@0:8@?16
v24@0:8@?<v@?@"NSXPCListenerEndpoint">16
@24@0:8@16
v16@0:8
@"NSXPCConnection"
v24@0:8@16
v28@0:8@16B24
v24@0:8@"CAAnimation"16
v28@0:8@"CAAnimation"16B24
@?16@0:8
v60@0:8@16@24@32B40d44@?52
v32@0:8@16@24
v40@0:8@16@24f32f36
v48@0:8@16@24d32@?40
v56@0:8@16@24f32f36d40@?48
@32@0:8@16@24
@24@0:8f16f20
B32@0:8@16@24
B48@0:8@16@24@32@40
B40@0:8@16@24@32
v40@0:8@16q24d32
v32@0:8@16q24
v56@0:8@16{CGRect={CGPoint=dd}{CGSize=dd}}24
v48@0:8@16@24@32@?40
v56@0:8@16@24@32@40@?48
v40@0:8@16@24@?32
v32@0:8@16@?24
Q32@0:8@16@24
@40@0:8@16@24@32
B40@0:8@16@24@?32
v40@0:8@16@24@32
v24@0:8@"UIApplication"16
B32@0:8@"UIApplication"16@"NSDictionary"24
B32@0:8@"UIApplication"16@"NSURL"24
B48@0:8@"UIApplication"16@"NSURL"24@"NSString"32@40
B40@0:8@"UIApplication"16@"NSURL"24@"NSDictionary"32
v40@0:8@"UIApplication"16q24d32
v32@0:8@"UIApplication"16q24
v56@0:8@"UIApplication"16{CGRect={CGPoint=dd}{CGSize=dd}}24
v32@0:8@"UIApplication"16@"UIUserNotificationSettings"24
v32@0:8@"UIApplication"16@"NSData"24
v32@0:8@"UIApplication"16@"NSError"24
v32@0:8@"UIApplication"16@"NSDictionary"24
v32@0:8@"UIApplication"16@"UILocalNotification"24
v48@0:8@"UIApplication"16@"NSString"24@"UILocalNotification"32@?<v@?>40
v56@0:8@"UIApplication"16@"NSString"24@"NSDictionary"32@"NSDictionary"40@?<v@?>48
v48@0:8@"UIApplication"16@"NSString"24@"NSDictionary"32@?<v@?>40
v56@0:8@"UIApplication"16@"NSString"24@"UILocalNotification"32@"NSDictionary"40@?<v@?>48
v40@0:8@"UIApplication"16@"NSDictionary"24@?<v@?Q>32
v32@0:8@"UIApplication"16@?<v@?Q>24
v40@0:8@"UIApplication"16@"UIApplicationShortcutItem"24@?<v@?B>32
v40@0:8@"UIApplication"16@"NSString"24@?<v@?>32
v40@0:8@"UIApplication"16@"NSDictionary"24@?<v@?@"NSDictionary">32
@32@0:8@"UIApplication"16@"INIntent"24
v40@0:8@"UIApplication"16@"INIntent"24@?<v@?@"INIntentResponse">32
Q32@0:8@"UIApplication"16@"UIWindow"24
B32@0:8@"UIApplication"16@"NSString"24
@"UIViewController"40@0:8@"UIApplication"16@"NSArray"24@"NSCoder"32
B32@0:8@"UIApplication"16@"NSCoder"24
v32@0:8@"UIApplication"16@"NSCoder"24
B40@0:8@"UIApplication"16@"NSUserActivity"24@?<v@?@"NSArray">32
v40@0:8@"UIApplication"16@"NSString"24@"NSError"32
v32@0:8@"UIApplication"16@"NSUserActivity"24
v32@0:8@"UIApplication"16@"CKShareMetadata"24
@"UISceneConfiguration"40@0:8@"UIApplication"16@"UISceneSession"24@"UISceneConnectionOptions"32
v32@0:8@"UIApplication"16@"NSSet"24
B24@0:8@"UIApplication"16
@"UIWindow"16@0:8
v24@0:8@"UIWindow"16
v32@0:8q16d24
v20@0:8B16
@"FBSOrientationObserver"
@"UIWindow"
@20@0:8f16
v36@0:8q16d24f32
v32@0:8q16@24
v36@0:8q16@24f32
v40@0:8q16@24d32
v44@0:8q16@24d32f40
v40@0:8q16q24@32
v48@0:8q16q24@32d40
v52@0:8q16q24@32d40f48
@32@0:8q16d24
@36@0:8q16d24f32
@32@0:8q16@24
@36@0:8q16@24f32
@40@0:8q16@24d32
@44@0:8q16@24d32f40
@40@0:8q16q24@32
@48@0:8q16q24@32d40
@52@0:8q16q24@32d40f48
v64@0:8q16q24@32q40d48d56
v68@0:8q16q24@32q40d48d56f64
@64@0:8q16q24@32q40d48d56
@68@0:8q16q24@32q40d48d56f64
v32@0:8{?=ffff}16
d16@0:8
q16@0:8
v24@0:8q16
{CGSize=dd}16@0:8
f16@0:8
@48@0:8{CGRect={CGPoint=dd}{CGSize=dd}}16
@"UIView"
@"UIBlurEffect"
{CGSize=dd}32@0:8{CGSize=dd}16
@"UIFontMetrics"
@"NSString"
Q24@0:8@16
@24@0:8Q16
@32@0:8Q16Q24
d24@0:8Q16
{CGPoint=dd}40@0:8{CGPoint=dd}16@32
@56@0:8{CGPoint=dd}16d32@40@48
v40@0:8@16@24d32
v24@0:8Q16
v24@0:8d16
@"<AXGestureRecorderFingerPathCollectionDelegate>"
@"NSMutableArray"
@"NSMutableDictionary"
@"AXMutableReplayableGesture"
v48@0:8{CGRect={CGPoint=dd}{CGSize=dd}}16
{CGRect={CGPoint=dd}{CGSize=dd}}16@0:8
v32@0:8Q16@24
v36@0:8@16@24B32
@"<AXGestureRecorderViewDelegate>"
@"AXGestureRecorderStyleProvider"
@"UIColor"
@"UIAccessibilityCustomAction"
{CGRect="origin"{CGPoint="x"d"y"d}"size"{CGSize="width"d"height"d}}
@36@0:8@16Q24B32
v32@0:8@16d24
@"<AXUIFloatingViewPresenterDelegate>"
@"NSArray"
v64@0:8@16{CGRect={CGPoint=dd}{CGSize=dd}}24^{CGContext=}56
@24@0:8^{CGContext=}16
@56@0:8@16{CGRect={CGPoint=dd}{CGSize=dd}}24
@32@0:8@16Q24
@"NSMutableSet"
@"<AXUISoftwareKeyboardManagerDelegate>"
@"NSObject<OS_os_log>"
@"AXElementNamesStyleProvider"
{UIEdgeInsets=dddd}16@0:8
@"<AXDragEndpointRequestSatisfierDelegate>"
B32@0:8@"NSXPCListener"16@"NSXPCConnection"24
@"NSXPCListenerEndpoint"32@0:8@"NSXPCConnection"16@"AXDragEndpointRequestSatisfier"24
v24@0:8@"AXDragEndpointRequestSatisfier"16
@"NSXPCListener"
@"<AXDragEndpointVendorDelegate>"
@"UILabel"
Q24@0:8@"AXGestureRecorderView"16
@"UIBezierPath"32@0:8@"AXGestureRecorderView"16Q24
B24@0:8@"AXGestureRecorderView"16
v28@0:8@"AXGestureRecorderView"16B24
v32@0:8@16Q24
v32@0:8@"AXGestureRecorderFingerPathCollection"16Q24
v32@0:8{CGPoint=dd}16
@"<AXGestureRecorderViewControllerDelegate>"
@"AXGestureRecorderFingerPathCollection"
d24@0:8d16
d32@0:8d16@24
v64@0:8@16@24@32@40@48@56
@48@0:8@16@24@32@40
@96@0:8@16{CGRect={CGPoint=dd}{CGSize=dd}}24{CGRect={CGPoint=dd}{CGSize=dd}}56@88
v32@0:8{CGSize=dd}16
{CGRect={CGPoint=dd}{CGSize=dd}}48@0:8{CGRect={CGPoint=dd}{CGSize=dd}}16
{CGPoint=dd}16@0:8
@"UIImageView"
{CGSize="width"d"height"d}
{CGPoint="x"d"y"d}
v20@0:8f16
v64@0:8i16@20B28i32@36B44d48@?56
@"UIButton"
@"ASTBiggerProgressView"
@"<AXGestureRecorderControlsViewDelegate>"
B48@0:8@16{_NSRange=QQ}24@40
B24@0:8@"UITextField"16
v24@0:8@"UITextField"16
v32@0:8@"UITextField"16q24
B48@0:8@"UITextField"16{_NSRange=QQ}24@"NSString"40
v24@0:8B16B20
@"UITextField"
v32@0:8d16d24
v44@0:8@16@24d32B40
@"AXUIBannerView"
MbP?
?SSSSSS
?333333
!$'*-0369<?BEHKNQTeThTkTnqtwz}
v8@?0
v16@?0@"NSError"8
v16@?0@"NSXPCListenerEndpoint"8
@"CABasicAnimation"24@?0@8:16
unspec
light
dark
TVViewElement
com.apple.TVAppStore
Accessibility
com.apple.HeadBoard
name.for.bundle.headboard
resource
tomato-splat
RTRotten
tv.freshness.rotten
tv.tomato.rating.format
tomato-fresh
RTFresh
tv.freshness.fresh
tomato-certified
RTCertified
tv.freshness.certified.fresh
common-sense
tv.common.sense
overlay-checkmark
tv.played
mpaa-g
tv-g
g_mask
axid.icon.rating.g
pg13
axid.icon.rating.pg13
mpaa-pg
tv-pg
pg_mask
axid.icon.rating.pg
tv-ma
tvma_mask
axid.icon.rating.tvma
tv-nr
nr_mask
axid.icon.rating.nr
mpaa-r
tv-r
r_mask
axid.icon.rating.r
unrated
axid.icon.rating.unrated
nc17
axid.icon.rating.nc17
y7fv
axid.icon.rating.tvy7fv
tv-y7
tvy7_mask
axid.icon.rating.tvy7
tv-y
tvy_mask
axid.icon.rating.tvy
tvpg_mask
axid.icon.rating.tvpg
tvg_mask
axid.icon.rating.tvg
tv-14
tv14_mask
axid.icon.rating.tv14
4k-hdr
axid.icon.4k-hdr
axid.icon.hdr
axid.icon.hd
axid.icon.closed.captions
tv.tomato.rating
metadata-ad
axid.icon.ad
axid.icon.4k
metadata-sdh
axid.icon.sdh
dolby-vision
dolbyvision_mask
axid.icon.dolby-vision
atmos
axid.icon.dolby-atmos
itunes-extras-badge
axid.icon.itunes-extras
focusedView
v16@?0@"FBSOrientationUpdate"8
Text range: %{private}@, string: %{private}@
Sentence range: %{private}@
UIRemoteKeyboardWindow
inputViewSet
inputView
_UIRemoteKeyboards
enabled
BuildVersion
Library
Caches
com.apple.keyboards
Asked to make touch for view, but view's window was nil. view: %@
AXUIDisplayManager
Unable to find class %s
/System/Library/PrivateFrameworks/AccessibilityUIService.framework/AccessibilityUIService
/System/Library/PrivateFrameworks/AccessibilityUIService.framework/Contents/MacOS/AccessibilityUIService
__AXStringForVariablesSentinel
/Library/Caches/com.apple.xbs/Sources/AccessibilityFrameworks_Sim/AccessibilityFrameworks-2933.26/AccessibilityUmbrellaFramework/Frameworks/AccessibilityUIUtilities/Source/AXITMLUtilities.m
+[AXITMLUtilities firstItemTitleForViewElement:]
Expected first item to be of type: IKListItemLockupElement. It was :%@
IKListItemLockupElement
/System/Library/PrivateFrameworks/ITMLKit.framework/ITMLKit
/System/Library/PrivateFrameworks/ITMLKit.framework/Contents/MacOS/ITMLKit
IKViewElement
IKListTemplate
defaultDisplayEdgeInfo
_transformLayer
Name
Points
Forces
Times
/Library/Caches/com.apple.xbs/Sources/AccessibilityFrameworks_Sim/AccessibilityFrameworks-2933.26/AccessibilityUmbrellaFramework/Frameworks/AccessibilityUIUtilities/Source/AXGestureRecorderFingerPathCollection.m
-[AXGestureRecorderFingerPathCollection referenceTimesArray]
Should not have tried to get the reference times array if we were recording a real time gesture.
v32@?0@"NSNumber"8@"NSNumber"16^B24
-[AXGestureRecorderFingerPathCollection _realTimeFingerPathToAppendForIndex:upToPositionForTimestampAtIndex:]
Unexpected format for replayable gesture
Could not find a matching event for this particular timestamp: %f
v24@?0Q8^B16
CustomGestureVoiceOverLabel
CustomInstructions
CustomGesturesHideControls
CustomGesturesShowControls
fillColor
GrayTransition
AnimationName
HasExistingStaticFingers
AnimatingLayers
TransitionLayers
Change
/Library/Caches/com.apple.xbs/Sources/AccessibilityFrameworks_Sim/AccessibilityFrameworks-2933.26/AccessibilityUmbrellaFramework/Frameworks/AccessibilityUIUtilities/Source/AXGestureRecorderView.m
-[AXGestureRecorderView freezeAllDynamicFingerPathsWithInstantReplayOffset:]
If we were freezing dynamic finger paths during recording, we needed to instantly replay them, but we got no info for this
v32@?0@"CALayer"8Q16^B24
v12@?0B8
_interfaceOrientation
%@, label=%@, boundingRect=%@
-?(centered|day|night|mostly|partly|severe)-?+
Weather image extract regex failed with error: %@
now.precipitation.rain
now.precipitation.snow
precipitation.rain
precipitation.snow
thunderstorm
flurry-snow-snow-shower
drizzle
hail
rain
flurry
blowingsnow
sunny
breezy
cloudy
clear
suncloud
heavy-rain
No weather description key found for icon: %@
weather.condition.light.snow.showers
weather.condition.rain
weather.condition.tornado
weather.condition.tropical.storm
weather.condition.hurricane
weather.condition.severe.thunderstorm
weather.condition.thunderstorm
weather.condition.rain.and.snow
weather.condition.rain.and.sleet
weather.condition.snow.and.sleet
weather.condition.freezing.drizzle
weather.condition.drizzle
weather.condition.freezing.rain
weather.condition.showers
weather.condition.snow.flurries
weather.condition.snow.showers
weather.condition.blowing.snow
weather.condition.snow
weather.condition.hail
weather.condition.sleet
weather.condition.dust.haze
weather.condition.foggy
weather.condition.haze
weather.condition.smoky
weather.condition.blustery
weather.condition.windy
weather.condition.cold
weather.condition.clouds
weather.condition.mostly.cloudy
weather.condition.partly.cloudy
weather.condition.clear
weather.condition.mostly.clear
weather.condition.rain.and.hail
weather.condition.hot
weather.condition.isolated.thunderstorms
weather.condition.scattered.thunderstorms
weather.condition.scattered.showers
weather.condition.heavy.snow
weather.condition.blizzard
weather.condition.heavy.rain
weather.condition.isolated.thundershowers
weather.condition.unavailable
AX: UNHANDLED WEATHER CASE!
Reason to enable SW Keyboard because: %{public}@ [%d]
Reason to enable SW Keyboard removed because: %{public}@ [%d]
Reason to disable SW Keyboard because: %{public}@ [%d]
Reason to remove disable SW Keyboard because: %{public}@ [%d]
AXUIDaemonOrientationDidUpdateNotification
Duration
/Library/Caches/com.apple.xbs/Sources/AccessibilityFrameworks_Sim/AccessibilityFrameworks-2933.26/AccessibilityUmbrellaFramework/Frameworks/AccessibilityUIUtilities/Source/AXGestureRecorderViewController.m
-[AXGestureRecorderViewController _advanceReplay]
Should not have called _advanceReplay after end of gesture.
-[AXGestureRecorderViewController _advanceInstantReplayForStaticFingerAtIndex:]
Should not have been able to increment the timestamp beyond this point.
-[AXGestureRecorderViewController touchesBegan:withEvent:]
Should have had at least one touch
/Library/Caches/com.apple.xbs/Sources/AccessibilityFrameworks_Sim/AccessibilityFrameworks-2933.26/AccessibilityUmbrellaFramework/Frameworks/AccessibilityUIUtilities/Source/AXAssistiveTouchLayoutView.m
-[AXAssistiveTouchLayoutView layoutItemsByLocation:positions:rows:columns:clockwiseOctagonalLocations:horizontallyCenteredLocation:]
Should have picked a horizontally centered location that existed for this layout.
v24@?0@"UIView<AXAssistiveTouchLayoutItem>"8@"UIView<AXAssistiveTouchLayoutItem>"16
-[AXAssistiveTouchLayoutView _setUpConstraintsToAvoidCollisions:rows:columns:clockwiseOctagonalLocations:]
Should have had exactly eight specified locations to handle complex collisions.
UNNAMED_DRAG
UNNAMED_DRAG_ORDINAL
UNNAMED_DROP
UNNAMED_DROP_ORDINAL
_progressView.image
HelveticaNeue Thin
B24@?0@"UIView"8^B16
value
tv.progress.format
class
badge
accessibilityText
IKImageElement
IKTextElement
ShouldDisableTextFieldWhenNotEditing
ShouldAllowSelection
/System/Library/PreferenceBundles/AccessibilitySettings.bundle
com.apple.accessibility.AccessibilityUIUtilities
AXUILocalizedStrings
ZOOM_LENS_EFFECT_NONE
ZOOM_LENS_EFFECT_BLACK_AND_WHITE
ZOOM_LENS_EFFECT_LOW_LIGHT
ZOOM_LENS_EFFECT_BLACK_AND_WHITE_INVERTED
ZOOM_LENS_EFFECT_INVERTED
ZOOM_LENS_EFFECT_HUE_ADJUST
/Library/Caches/com.apple.xbs/Sources/AccessibilityFrameworks_Sim/AccessibilityFrameworks-2933.26/AccessibilityUmbrellaFramework/Frameworks/AccessibilityUIUtilities/Source/AXUIUtilitiesCommon.m
NSString *AXUILocalizedTitleForZoomLensEffect(NSString *__strong)
zoomLensEffect key not recognized: %@
ZOOM_LENS_MODE_FULLSCREEN
ZOOM_LENS_MODE_WINDOW
ZOOM_LENS_MODE_DOCKED
NSString *AXUILocalizedTitleForZoomLensMode(NSString *__strong)
zoomMode key not recognized: %@
DOCK_POSITION_TOP
DOCK_POSITION_LEFT
DOCK_POSITION_RIGHT
DOCK_POSITION_BOTTOM
NSString *AXUILocalizedTitleForDockPosition(NSString *__strong)
dockPosition key not recognized: %@
System/Library/CoreServices/AssistiveTouch.app
HOME
NOTIFICATION_CENTER
CUSTOM
DEVICE
SIRI
CONTROL_CENTER
LOCK
ORIENTATION
VOLUME_UP_ASSISTIVE_TOUCH
VOLUME_DOWN_ASSISTIVE_TOUCH
MUTE
GESTURES
TRIPLE_CLICK
SHAKE
APP_SWITCHER
SCREENSHOT
ORIENTATION_LOCKED
VOICE_CONTROL
COMMAND_AND_CONTROL
PINCH
ROTATE
PINCH_ROTATE
FORCE_TAP
DOUBLE_TAP
LONG_PRESS
HOLD_AND_DRAG
MOVE_MENU
SPOTLIGHT
SYSDIAGNOSE
REACHABILITY
REBOOT_DEVICE
DOCK
APPLE_PAY
SPEAK_SCREEN
OPEN_MENU
PASS_THROUGH
MOUSE_PRIMARY_CLICK
SIDE_APP
DWELL
DWELL_RESUME
DWELL_PAUSE
DWELL_PAUSE_TOGGLE
DWELL_LOCK
DWELL_UNLOCK
DWELL_LOCK_TOGGLE
DWELL_TIME_INCREASE
DWELL_TIME_DECREASE
SCROLL
Scroll-Up
Scroll-Down
Scroll-Left
Scroll-Right
SCROLL_TO_TOP
SCROLL_TO_BOTTOM
CAMERA
TORCH
ASSSISTIVETOUCH
VOICEOVER
CLASSIC_INVERT
COLOR_FILTERS
SMART_INVERT
ZOOM
ZOOM_CONTROLLER
MAGNIFIER
SWITCH_CONTROL
FULL_KEYBOARD_ACCESS
CustomGesture-
FORCE_TOUCH
_FULL_WIDTH
LocalizedStrings
LocalizedStrings-PeopleDetection
%@%@
_NHB_IPAD
_NHB
BackArrow
AT_LaunchFloatFromDock
AT_pinned_narrow
AT_pinned_narrow_for_flipping
AT_promote_sideapp_half
AT_dismiss_pinned_half
AT_PinFloatAppLeft
AT_PinFloatAppRight
AT_UnpinAppLeft
AT_UnpinAppRight
AT_SlideOpenFloatApp
AT_dismiss_overlay
AT_MoveFloatAppLeft
AT_MoveFloatAppRight
AT_Multitask
SCATIcon_device_volumeDown
SCATIcon_device_volumeUp
system-image-
IconHome
IconNotificationCenter
IconFavorites
SCATIcon_siri_shortcuts
IconDevice
IconSiri
IconControlCenter
IconLock
IconRotate
IconVolumeUp
IconVolumeDown
IconMuted
IconTripleClick
IconGestures
IconShake
IconAppSwitcher
IconScreenshot
IconRotationLock
IconVoiceControl
IconCommandAndControl
IconPinch
SCATIcon_gestures_rotateClockwise
IconOrb
SCATIcon_gestures_tap
IconDoubleTap
SCATIcon_gestures_holdAndDrag
SCATIcon_device_spotlightSearch
IconSOS
IconDiagnostics
IconReachability
IconRebootDevice
IconDock
IconApplePay
IconSpeakScreen
IconDwell
SCATIcon_mediacontrols_play
IconDwellPause
IconDwellFallbackDisable
IconDwellFallbackEnable
SCATIcon_settings_increaseScanSpeed
SCATIcon_settings_decreaseScanSpeed
SCATIcon_action_scroll
SCATIcon_action_scrollUp
SCATIcon_action_scrollDown
SCATIcon_action_scrollLeft
SCATIcon_action_scrollRight
SCATIcon_action_scrollToTop
SCATIcon_action_scrollToBottom
%@camera.fill
-tall
tortoise
hare
frame
window
unable to get drag endpoint: %@
Launched %@.
Will terminate %@.
Update orientation to %ld with duration %g
Exiting %@.
Restarting because SpringBoard just became active.
Unable to set keep alive to %i.
%{public}@
Color was not of class UIColor, %@
UIColor %@ has no CGColor
No known color description for %@
setting hardware keyboard attached state: %d [existing %d]
-[AXElementNamesView %@] called off the main thread!
Found element with no name: %@
Could not find a non-colliding position for label for %@
Unable to find any content size category >= Large that would fit the AssistiveTouch menu. Device width: %f
softlink:r:path:/System/Library/PrivateFrameworks/AccessibilityUIService.framework/AccessibilityUIService
softlink:r:path:/System/Library/PrivateFrameworks/ITMLKit.framework/ITMLKit
softlink:r:path:/System/Library/PrivateFrameworks/ITMLKit.framework/ITMLKit
AXEndpointVending
NSObject
AXDragEndpointClient
AXGestureRecorderGradientViewAnimationDelegate
CAAnimationDelegate
AXGestureRecorderGradientView
AXATVUtils
AXUIDaemonApplicationDelegate
UIApplicationDelegate
AXUISettingsWelcomeControllerCommon
AXConstraintExtensions
AXConstraintBasedLayout
AXATV_Extras
AXProgramaticUITapGestureRecognizer
AXGestureRecorderStyleProvider
AXUIPlatterContainerView
AXDynamicTypeImageView
AXITMLUtilities
AXGestureRecorderFingerPathCollection
AXGestureRecorderView
AXUIFloatingViewPresenter
AXUIDaemonApplication
AXUIContextDrawingAnnotation
AXWeatherUtilities
AXUISoftwareKeyboardManager
AXElementNamesView
AXUIDaemonNonInteractiveWindow
AXUIDaemonWindow
AXDragEndpointRequestSatisfier
AXDragEndpointVendor
NSXPCListenerDelegate
AXDragEndpointRequestSatisfierDelegate
AXCyclingView
AXUIBannerView
AXGestureRecorderViewController
AXGestureRecorderViewDelegate
AXGestureRecorderFingerPathCollectionDelegate
AXAssistiveTouchLayoutView
AXElementNamesItemView
ASTBiggerProgressView
AXGestureRecorderControlsView
AXUISettingsEditableTextCell
UITextFieldDelegate
AXExtensions
FKAScrollView
AXUIBannerPresenter
AXUIPoliteBannerView
AXElementNamesStyleProvider
arrayWithObjects:count:
setWithArray:
containsObject:
init
isValidServiceName:
initWithMachServiceName:options:
isEqual:
class
self
performSelector:
performSelector:withObject:
performSelector:withObject:withObject:
isProxy
isKindOfClass:
isMemberOfClass:
conformsToProtocol:
respondsToSelector:
retain
release
autorelease
retainCount
zone
hash
superclass
description
debugDescription
TQ,R
T#,R
T@"NSString",R,C
requestDragEndpoint:
interfaceWithProtocol:
setRemoteObjectInterface:
resume
invalidate
dealloc
remoteObjectProxyWithErrorHandler:
initWithServiceName:
getDragEndpoint:
.cxx_destruct
_connection
completionBlock
animationDidStart:
animationDidStop:finished:
setCompletionBlock:
_completionBlock
T@?,C,N,V_completionBlock
layer
gradientLayer
_copyColorsArrayWithTopColor:bottomColor:
setKeyPath:
setFromValue:
setToValue:
colors
locations
initWithObjects:
setAnimations:
setDuration:
setDelegate:
addAnimation:forKey:
setColors:
setLocations:
_configureGradientWithTopColor:bottomColor:locations:animated:duration:completion:
_copyLocationsArrayWithTopColorLocation:bottomColorLocation:
CGColor
initWithFloat:
layerClass
configureGradientWithTopColor:bottomColor:
configureGradientWithTopColor:bottomColor:topColorLocation:bottomColorLocation:
configureGradientAnimatedWithTopColor:bottomColor:duration:completion:
configureGradientAnimatedWithTopColor:bottomColor:topColorLocation:bottomColorLocation:duration:completion:
T@"CAGradientLayer",R,N
mainBundle
bundleIdentifier
isEqualToString:
bundleForClass:
localizedStringForKey:value:table:
atvaccessibilityLocalizedString:
buttonSemanticContextWithName:
linkedDataDictionary
numberWithBool:
boolValue
scheme
host
path
stringByAppendingString:
hasPrefix:
stringWithFormat:
axContainsString:
accessibilityIdentifierForResourceURL:
accessibilityLabelForID:
mainScreen
safeValueForKey:
sharedInstance
isTVMLKitLoaded
isProcessTVAppStore
atvaccessibilityLocalizedNameForBundleID:
atvaccessibilityButtonSemanticContextWithName:
atvaccessibilityTVSPlayer:shouldAnnounceStateChanges:
atvaccessibilityAnnounceStateChangesForTVSPlayer:
accessibilityLabelForResourceURL:
currentFocusedView
_exitIfNotEnabled
_setKeepAlive:
defaultCenter
_enabledPreferenceDidChange:
featureEnabledStatusDidChangeNotification
addObserver:selector:name:object:
removeObserver:name:object:
loggingFacility
debugFeatureName
didFinishLaunching
orientation
duration
_didUpdateToOrientation:duration:
setHandler:
activeInterfaceOrientation
willTerminate
_setInterfaceOrientation:
currentDevice
setOrientation:animated:
numberWithDouble:
dictionaryWithObjects:forKeys:count:
postNotificationName:object:userInfo:
didUpdateOrientation
isFeatureEnabled
sharedApplication
terminateWithSuccess
applicationDidFinishLaunching:
application:willFinishLaunchingWithOptions:
application:didFinishLaunchingWithOptions:
applicationDidBecomeActive:
applicationWillResignActive:
application:handleOpenURL:
application:openURL:sourceApplication:annotation:
application:openURL:options:
applicationDidReceiveMemoryWarning:
applicationWillTerminate:
applicationSignificantTimeChange:
application:willChangeStatusBarOrientation:duration:
application:didChangeStatusBarOrientation:
application:willChangeStatusBarFrame:
application:didChangeStatusBarFrame:
application:didRegisterUserNotificationSettings:
application:didRegisterForRemoteNotificationsWithDeviceToken:
application:didFailToRegisterForRemoteNotificationsWithError:
application:didReceiveRemoteNotification:
application:didReceiveLocalNotification:
application:handleActionWithIdentifier:forLocalNotification:completionHandler:
application:handleActionWithIdentifier:forRemoteNotification:withResponseInfo:completionHandler:
application:handleActionWithIdentifier:forRemoteNotification:completionHandler:
application:handleActionWithIdentifier:forLocalNotification:withResponseInfo:completionHandler:
application:didReceiveRemoteNotification:fetchCompletionHandler:
application:performFetchWithCompletionHandler:
application:performActionForShortcutItem:completionHandler:
application:handleEventsForBackgroundURLSession:completionHandler:
application:handleWatchKitExtensionRequest:reply:
applicationShouldRequestHealthAuthorization:
application:handlerForIntent:
application:handleIntent:completionHandler:
applicationDidEnterBackground:
applicationWillEnterForeground:
applicationProtectedDataWillBecomeUnavailable:
applicationProtectedDataDidBecomeAvailable:
application:supportedInterfaceOrientationsForWindow:
application:shouldAllowExtensionPointIdentifier:
application:viewControllerWithRestorationIdentifierPath:coder:
application:shouldSaveSecureApplicationState:
application:shouldRestoreSecureApplicationState:
application:willEncodeRestorableStateWithCoder:
application:didDecodeRestorableStateWithCoder:
application:shouldSaveApplicationState:
application:shouldRestoreApplicationState:
application:willContinueUserActivityWithType:
application:continueUserActivity:restorationHandler:
application:didFailToContinueUserActivityWithType:error:
application:didUpdateUserActivity:
application:userDidAcceptCloudKitShareWithMetadata:
application:configurationForConnectingSceneSession:options:
application:didDiscardSceneSessions:
applicationShouldAutomaticallyLocalizeKeyCommands:
window
setWindow:
T@"UIWindow",&,N
T@"NSObject<OS_os_log>",R,N
T@"NSString",R,N
TB,R,N
_systemAppDidBecomeReady
_orientationObserver
T@"UIWindow",&,N,Vwindow
rangeEnclosingPosition:withGranularity:inDirection:
start
beginningOfDocument
endOfDocument
textRangeFromPosition:toPosition:
textInRange:
ignoreLogging
identifier
offsetFromPosition:toPosition:
ax_sentenceFromPosition:inDirection:
positionFromPosition:offset:
activeKeyboard
countByEnumeratingWithState:objects:count:
rootViewController
sharedInputModeController
currentInputMode
isExtensionInputMode
safeBoolForKey:
isActive
bounds
isMinimized
arrayWithObjects:
pathWithComponents:
initWithPath:version:
purge
mutableCopy
setNumberStyle:
numberWithUnsignedInteger:
stringFromNumber:
appendFormat:
stringWithString:
getRed:green:blue:alpha:
colorWithRed:green:blue:alpha:
getHue:saturation:brightness:alpha:
colorWithHue:saturation:brightness:alpha:
blackColor
getWhite:alpha:
colorWithWhite:alpha:
ax_buddyObservedTableViews
ax_setBuddyObservedTableViews:
ax_buddyDynamicHeightConstraints
ax_setBuddyDynamicHeightConstraints:
T@"NSMutableArray",&,N,Sax_setBuddyObservedTableViews:
T@"NSMutableArray",&,N,Sax_setBuddyDynamicHeightConstraints:
contentSize
indexOfObject:
objectAtIndexedSubscript:
setConstant:
removeObserver:forKeyPath:
firstItem
firstAttribute
relation
secondItem
secondAttribute
multiplier
constant
constraintWithItem:attribute:relatedBy:toItem:attribute:multiplier:constant:
setPriority:
ax_copyWithPriority:
ax_addedConstraintForLayoutAttribute:asEqualToConstant:
ax_addedConstraintForLayoutAttribute:asEqualToConstant:priority:
ax_addedConstraintForLayoutAttribute:asEqualToValueOfView:
ax_addedConstraintForLayoutAttribute:asEqualToValueOfView:priority:
ax_addedConstraintForLayoutAttribute:asEqualToValueOfView:withOffset:
ax_addedConstraintForLayoutAttribute:asEqualToValueOfView:withOffset:priority:
ax_addedConstraintForLayoutAttribute:asEqualToLayoutAttribute:ofView:
ax_addedConstraintForLayoutAttribute:asEqualToLayoutAttribute:ofView:withOffset:
ax_addedConstraintForLayoutAttribute:asEqualToLayoutAttribute:ofView:withOffset:priority:
ax_addedConstraintForLayoutAttribute:relatedBy:toItem:attribute:multiplier:constant:
ax_addedConstraintForLayoutAttribute:relatedBy:toItem:attribute:multiplier:constant:priority:
ax_addedConstraintForLayoutAttribute:asLessThanOrEqualToConstant:
ax_addedConstraintForLayoutAttribute:asLessThanOrEqualToConstant:priority:
ax_addedConstraintForLayoutAttribute:asLessThanOrEqualToValueOfView:
ax_addedConstraintForLayoutAttribute:asLessThanOrEqualToValueOfView:withOffset:
ax_addedConstraintForLayoutAttribute:asLessThanOrEqualToValueOfView:withOffset:priority:
ax_addedConstraintForLayoutAttribute:asLessThanOrEqualToLayoutAttribute:ofView:withOffset:
ax_addedConstraintForLayoutAttribute:asLessThanOrEqualToLayoutAttribute:ofView:withOffset:priority:
ax_addedConstraintForLayoutAttribute:asGreaterThanOrEqualToConstant:
ax_addedConstraintForLayoutAttribute:asGreaterThanOrEqualToConstant:priority:
ax_addedConstraintForLayoutAttribute:asGreaterThanOrEqualToValueOfView:
ax_addedConstraintForLayoutAttribute:asGreaterThanOrEqualToValueOfView:withOffset:
ax_addedConstraintForLayoutAttribute:asGreaterThanOrEqualToValueOfView:withOffset:priority:
ax_addedConstraintForLayoutAttribute:asGreaterThanOrEqualToLayoutAttribute:ofView:withOffset:
ax_addedConstraintForLayoutAttribute:asGreaterThanOrEqualToLayoutAttribute:ofView:withOffset:priority:
ax_firstCommonAncestorWithView:
addConstraint:
superview
_ax_depth
arrayWithCapacity:
addObject:
setContentHuggingPriority:forAxis:
setContentCompressionResistancePriority:forAxis:
ax_constrainLayoutAttribute:asEqualToConstant:
ax_constrainLayoutAttribute:asEqualToConstant:priority:
ax_constrainLayoutAttribute:asEqualToValueOfView:
ax_constrainLayoutAttribute:asEqualToValueOfView:priority:
ax_constrainLayoutAttribute:asEqualToValueOfView:withOffset:
ax_constrainLayoutAttribute:asEqualToValueOfView:withOffset:priority:
ax_constrainLayoutAttribute:asEqualToLayoutAttribute:ofView:
ax_constrainLayoutAttribute:asEqualToLayoutAttribute:ofView:withOffset:
ax_constrainLayoutAttribute:asEqualToLayoutAttribute:ofView:withOffset:priority:
ax_constrainLayoutAttribute:asLessThanOrEqualToConstant:
ax_constrainLayoutAttribute:asLessThanOrEqualToConstant:priority:
ax_constrainLayoutAttribute:asLessThanOrEqualToValueOfView:
ax_constrainLayoutAttribute:asLessThanOrEqualToValueOfView:withOffset:
ax_constrainLayoutAttribute:asLessThanOrEqualToValueOfView:withOffset:priority:
ax_constrainLayoutAttribute:asLessThanOrEqualToLayoutAttribute:ofView:withOffset:
ax_constrainLayoutAttribute:asLessThanOrEqualToLayoutAttribute:ofView:withOffset:priority:
ax_constrainLayoutAttribute:asGreaterThanOrEqualToConstant:
ax_constrainLayoutAttribute:asGreaterThanOrEqualToConstant:priority:
ax_constrainLayoutAttribute:asGreaterThanOrEqualToValueOfView:
ax_constrainLayoutAttribute:asGreaterThanOrEqualToValueOfView:withOffset:
ax_constrainLayoutAttribute:asGreaterThanOrEqualToValueOfView:withOffset:priority:
ax_constrainLayoutAttribute:asGreaterThanOrEqualToLayoutAttribute:ofView:withOffset:
ax_constrainLayoutAttribute:asGreaterThanOrEqualToLayoutAttribute:ofView:withOffset:priority:
ax_constrainLayoutAttribute:relatedBy:toItem:attribute:multiplier:constant:
ax_constrainLayoutAttribute:relatedBy:toItem:attribute:multiplier:constant:priority:
ax_pinConstraintsInAllDimensionsToView:
ax_setContentHuggingAndCompressionResistance:
_atvaccessibilityAlphaComponent
axProgramaticState
state
setAxProgramaticState:
_axProgramaticState
Tq,N,V_axProgramaticState
preferredFontForTextStyle:
secondaryLabelColor
clearColor
systemGroupedBackgroundColor
userInterfaceIdiom
gestureRecorderViewBackgroundGradientTopColor
minimumFingerLineWidth
systemTealColor
colorWithAlphaComponent:
systemBlueColor
systemGray2Color
fingerLineGradientTopColorLocation
fingerLineGradientBottomColorLocation
whiteColor
fingerLineOuterBevelColor
fingerLineDropDownShadowOffset
instructionsLabelFont
instructionsLabelTextColor
instructionsLabelBackgroundColor
instructionsLabelShadowColor
instructionsLabelShadowOffset
instructionsLabelHorizontalInset
gestureRecorderViewBackgroundColor
gestureRecorderViewBackgroundGradientBottomColor
maximumFingerLineWidth
tracingDynamicFingerColor
finalDynamicFingerColor
staticFingerColor
fingerLineGradientTopColor
fingerLineGradientBottomColor
dynamicFingerLineGradientTopColor
dynamicFingerLineGradientBottomColor
dynamicFingerLineGradientTopColorLocation
dynamicFingerLineGradientBottomColorLocation
fingerLineOuterBevelWidth
dynamicFingerLineOuterBevelColor
dynamicFingerLineOuterBevelWidth
fingerLineDropDownShadowColor
fingerLineDropDownShadowRadius
fingerLineDropDownShadowOpacity
dynamicFingerLineDropDownShadowColor
dynamicFingerLineDropDownShadowOffset
dynamicFingerLineDropDownShadowRadius
dynamicFingerLineDropDownShadowOpacity
CGImage
convertPoint:fromView:
setPhase:
setTimestamp:
setTapCount:
setView:
_setLocationInWindow:resetPrevious:
_setIsFirstTouchForView:
initWithFrame:
effectWithStyle:
initWithEffect:
setTranslatesAutoresizingMaskIntoConstraints:
primaryTextStyle
metricsForTextStyle:
scaledValueForValue:
_setContinuousCornerRadius:
setShadowColor:
setShadowOffset:
setShadowOpacity:
setShadowRadius:
addSubview:
shouldMimicNotificationBannerTopOffset
safeAreaLayoutGuide
sharedDisplayManager
activeWindows
allValues
lastObject
passiveWindows
safeAreaInsets
delegate
leadingAnchor
constraintGreaterThanOrEqualToAnchor:constant:
trailingAnchor
constraintLessThanOrEqualToAnchor:constant:
topAnchor
constraintEqualToAnchor:constant:
bottomAnchor
centerXAnchor
constraintEqualToAnchor:
platterWidth
widthAnchor
constraintEqualToConstant:
allowsScrolling
contentView
heightAnchor
addObjectsFromArray:
ax_constraintsToMakeView:sameDimensionsAsView:
activateConstraints:
platterBlurEffect
platterView
_contentView
_platterBlurEffect
_platterView
T@"UIView",R,N,V_platterView
T@"UIView",R,N,V_contentView
T@"UIBlurEffect",R,N,V_platterBlurEffect
Td,R,N
defaultMetrics
initWithImage:
_commonInit
initWithImage:highlightedImage:
traitCollection
preferredContentSizeCategory
maximumContentSizeCategory
minimumContentSizeCategory
traitCollectionWithPreferredContentSizeCategory:
fontMetrics
scaledValueForValue:compatibleWithTraitCollection:
intrinsicContentSize
_scaledSizeForSize:
sizeThatFits:
traitCollectionDidChange:
invalidateIntrinsicContentSize
setMinimumContentSizeCategory:
setMaximumContentSizeCategory:
setFontMetrics:
_fontMetrics
_minimumContentSizeCategory
_maximumContentSizeCategory
T@"UIFontMetrics",&,N,V_fontMetrics
T@"NSString",C,N,V_minimumContentSizeCategory
T@"NSString",C,N,V_maximumContentSizeCategory
length
localizedCaseInsensitiveContainsString:
_listTemplateForViewElement:
list
sections
items
count
firstObject
title
text
string
children
textByReconcilingClientText:withServerText:
listItemElementCountForViewElement:
firstItemTitleForViewElement:
homeAffordanceOverlayAllowance
doubleValue
convertPoint:toLayer:
convertRect:toLayer:
convertPoint:fromLayer:
convertRect:fromLayer:
connectedScenes
windows
axSafelyAddObjectsFromArray:
_accessibilityAllWindowsOnlyVisibleWindows:
safeAreaInsetsPortrait
safeAreaInsetsLandscapeLeft
safeAreaInsetsLandscapeRight
safeAreaInsetsPortraitUpsideDown
setMaximumFingerPathsCount:
_referenceTimesArrayIndexNeedsRefresh
reset
fingerPaths
shouldRecordRealTimeGesture
timesArrays
referenceTimesArray
referenceTimesArrayIndex
setReferenceTimesArrayIndex:
objectAtIndex:
_realTimeFingerPathToAppendForIndex:upToPositionForTimestampAtIndex:
_nonRealTimeFingerPathToAppendForIndex:upToPositionForTimestampAtIndex:
timestampsCount
pointsArrays
forcesArrays
bezierPath
CGPointValue
_bezierPathToAppendForTouchLocation:unnamedValue:optionalPreviousTouchLocation:optionalPreviousForce:
appendBezierPath:
timestampAtIndex:
touchPathIndicesToFingerPathIndices
unsignedIntegerValue
enumerateKeysAndObjectsUsingBlock:
replayableGesture
numberOfEvents
timeAtEventIndex:
fingerIdentifiersAtEventIndex:
pointForFingerIdentifier:atEventIndex:
forceForFingerIdentifier:atEventIndex:
valueWithCGPoint:
removeObjectAtIndex:
dictionaryWithObjectsAndKeys:
convertPoint:toView:
convertPoint:toWindow:
bezierPathWithArcCenter:radius:startAngle:endAngle:clockwise:
appendPath:
moveToPoint:
addLineToPoint:
closePath
maximumFingerPathsCount
setTimesArrays:
initWithDouble:
initWithIndexesInRange:
_pathIndex
numberWithUnsignedInt:
objectForKey:
locationInView:
_pressure
setObject:forKeyedSubscript:
_interfaceOrientedScreenPointForPoint:view:
setFingerPaths:
setPointsArrays:
setForcesArrays:
setTouchPathIndicesToFingerPathIndices:
initWithUnsignedInteger:
setObject:forKey:
_didInsertFingerPathAtIndex:
removeIndex:
_didUpdateFingerPathAtIndex:
enumerateIndexesUsingBlock:
_addPointsToReplayableGesture:forces:time:
setWithCapacity:
numberWithUnsignedChar:
numberWithFloat:
dictionary
addPointsByFingerIdentifier:forces:atTime:
objectForKeyedSubscript:
numberWithUnsignedLong:
setReplayableGesture:
addPointsFromReplayableGesture:
gestureRecorderFingerPathCollection:didInsertFingerPathAtIndex:
gestureRecorderFingerPathCollection:didUpdateFingerPathAtIndex:
initWithMaximumFingerPathsCount:
fingerPathsCount
fingerPathAtIndex:
fingerPathToAppendForIndex:forTimestampAtIndex:
propertyListRepresentationWithName:
replayableGestureRepresentation
appendPointsForTouches:referenceView:time:
handleLiftForTouches:referenceView:time:
appendFingerPathsFromFingerPathCollection:
setShouldRecordRealTimeGesture:
setMinimumFingerLineWidth:
setMaximumFingerLineWidth:
_shouldRecordRealTimeGesture
_delegate
_maximumFingerPathsCount
_referenceTimesArrayIndex
_fingerPaths
_pointsArrays
_forcesArrays
_touchPathIndicesToFingerPathIndices
_timesArrays
_minimumFingerLineWidth
_maximumFingerLineWidth
_replayableGesture
TQ,N,V_maximumFingerPathsCount
TQ,N,V_referenceTimesArrayIndex
T@"NSMutableArray",R,N
T@"NSMutableArray",&,N,V_fingerPaths
T@"NSMutableArray",&,N,V_pointsArrays
T@"NSMutableArray",&,N,V_forcesArrays
T@"NSMutableDictionary",&,N,V_touchPathIndicesToFingerPathIndices
T@"NSMutableArray",&,N,V_timesArrays
T@"AXMutableReplayableGesture",&,N,V_replayableGesture
T@"<AXGestureRecorderFingerPathCollectionDelegate>",W,N,V_delegate
TQ,R,N
TB,N,V_shouldRecordRealTimeGesture
Td,N,V_minimumFingerLineWidth
Td,N,V_maximumFingerLineWidth
setUserInteractionEnabled:
setMultipleTouchEnabled:
setNeedsDisplay
initWithCoder:
styleProvider
deleteAllFingerPaths
numberOfDynamicFingerPathsInGestureRecorderView:
insertDynamicFingerPathAtIndex:
screen
scale
initWithPatternImage:
layoutFrame
dataSource
gestureRecorderView:setChromeVisible:
canToggleChromeForGestureRecorderView:
isChromeVisibleForGestureRecorderView:
hideControlsAction
_hideControls
initWithName:target:selector:
setHideControlsAction:
showControlsAction
_showControls
setShowControlsAction:
didMoveToWindow
_dynamicFingerPathAtIndex:
replayMode
setFillColor:
addSublayer:
CGPath
setPath:
gestureRecorderView:dynamicFingerPathAtIndex:
fingerPathDidChange:
previouslyActiveLayersByInstantReplayFingerIndex
removeFromSuperlayer
insertSublayer:atIndex:
_performTransitionToStaticFingers:transitionLayers:hasExistingStaticFingers:
removeObjectForKey:
removeAllObjects
animationWithKeyPath:
setValue:forKey:
valueForKey:
freezeAllDynamicFingerPathsWithInstantReplayOffset:
copy
setPreviouslyActiveLayersByInstantReplayFingerIndex:
removeAllAnimations
sublayers
enumerateObjectsUsingBlock:
clearInstantReplayFingerPaths
drawRect:
setDataSource:
setStyleProvider:
dynamicFingerPathBackgroundGradientPatternColor
isAccessibilityElement
accessibilityFrame
accessibilityLabel
accessibilityHint
accessibilityTraits
accessibilityCustomActions
reloadDynamicFingerPathAtIndex:
updateInstantReplayAtIndex:withPartialPath:
finishInstantReplayAtIndex:
freezeAllDynamicFingerPaths
hideStaticView
gestureRecognizerShouldBegin:
dynamicFingerPathsContainerView
setDynamicFingerPathsContainerView:
setDynamicFingerPathBackgroundGradientPatternColor:
constrainedBoundsForDrawing
setConstrainedBoundsForDrawing:
setReplayMode:
_freezeDryStartTime
_freezeDryDrawPercentage
_freezeDryStartIndex
_freezedDynamicPaths
_activeLayers
_instantReplayViews
_staticLayers
_transitionLayers
_replayMode
_dataSource
_styleProvider
_dynamicFingerPathsContainerView
_dynamicFingerPathBackgroundGradientPatternColor
_hideControlsAction
_showControlsAction
_previouslyActiveLayersByInstantReplayFingerIndex
_constrainedBoundsForDrawing
T@"UIView",&,N,V_dynamicFingerPathsContainerView
T@"UIColor",&,N,V_dynamicFingerPathBackgroundGradientPatternColor
T{CGRect={CGPoint=dd}{CGSize=dd}},N,V_constrainedBoundsForDrawing
T@"UIAccessibilityCustomAction",&,N,V_hideControlsAction
T@"UIAccessibilityCustomAction",&,N,V_showControlsAction
T@"NSMutableDictionary",&,N,V_previouslyActiveLayersByInstantReplayFingerIndex
T@"AXGestureRecorderStyleProvider",&,N,V_styleProvider
T@"<AXGestureRecorderViewDelegate>",W,N,V_dataSource
TB,N,V_replayMode
floatingView
setFloatingView:
setEdgeConstraints:
willDismissFloatingViewForPresenter:
setAlpha:
removeFromSuperview
animateWithDuration:animations:completion:
_hideFloatingView
cancelPreviousPerformRequestsWithTarget:selector:object:
containingView
constraintGreaterThanOrEqualToAnchor:
constraintLessThanOrEqualToAnchor:
_updateEdgeConstraints
performSelector:withObject:afterDelay:
edgeConstraints
deactivateConstraints:
withinSafeArea
alignedEdge
centerYAnchor
initWithContainingView:alignedToEdge:withinSafeArea:
presentFloatingView:withDuration:
dismissFloatingView
setAlignedEdge:
_withinSafeArea
_containingView
_alignedEdge
_floatingView
_edgeConstraints
T@"UIView",&,N,V_floatingView
T@"NSArray",&,N,V_edgeConstraints
T@"<AXUIFloatingViewPresenterDelegate>",W,N,V_delegate
T@"UIView",R,N,V_containingView
TQ,N,V_alignedEdge
TB,R,N,V_withinSafeArea
settings
preferredWindowLevel
setPreferredLevel:
safeIntegerForKey:
_isSystemUIService
_systemUIServiceClientSettings
_systemUIServiceIdentifier
_frontMostAppOrientation
valueWithPointer:
initWithLabel:boundingRect:
contextAnnotationMap
array
removeObject:
label
boundingRect
addLabel:boundingRect:withContext:
annotationsForContext:
_label
_boundingRect
T@"NSString",R,N,V_label
T{CGRect={CGPoint=dd}{CGSize=dd}},R,N,V_boundingRect
stringByDeletingPathExtension
regularExpressionWithPattern:options:error:
localizedDescription
stringByReplacingMatchesInString:options:range:withTemplate:
_weatherCodeForGenericIconName:
descriptionForWeatherWFConditionCode:
floatValue
descriptionForWeatherConditionImageName:
descriptionForPrecipitation:weatherConditionCode:
stringWithUTF8String:
updateKeyboardHardwareState
softwareKeyboardManagerWillUpdateKeyboardState:
softwareKeyboardManager:didSetHardwareKeyboardAttached:
_wst_setIsHardwareKeyboardAttached:
_setIsHardwareKeyboardAttached:
softwareKeyboardManagerShouldSetHardwareKeyboardAttached:hardwareKeyboardIsCurrentlyAttached:newHardwareKeyboardAttachedValue:
_updateHardwareKeyboardState
isHardwareKeyboardAttached
_overrideSetHardwareKeyboardAttached:
addReasonToEnableSoftwareKeyboard:
removeReasonToEnableSoftwareKeyboard:
addReasonToDisableSoftwareKeyboard:
removeReasonToDisableSoftwareKeyboard:
_reasonsToDisableSoftwareKeyboard
_reasonsToEnableSoftwareKeyboard
T@"<AXUISoftwareKeyboardManagerDelegate>",W,N,V_delegate
isMainThread
setDidUpdateItems:
setNeedsLayout
layoutSubviews
boundsForLastReload
didUpdateItems
setBoundsForLastReload:
_reloadViews
containers
endCycling
elementName
elementFrame
fixedCoordinateSpace
convertRect:fromCoordinateSpace:
initWithName:elementFrame:availableBounds:styleProvider:
elementLabelContainerSize
setForcedLabelContainerSize:
_arrangeNameViews:withinContainer:
subviews
removeObjectsInArray:
beginCycling
labelContainerFrame
collidesWithView:
labelPosition
name
setLabelPosition:
_adjustLabelPositionForView:toAvoidCollidingWithView:
hasExtendedArrow
insertSubview:atIndex:
setItems:
viewsInCycle
setLoggingFacility:
_didUpdateItems
_items
_loggingFacility
_containers
_boundsForLastReload
T{CGRect={CGPoint=dd}{CGSize=dd}},N,V_boundsForLastReload
TB,N,V_didUpdateItems
T@"NSArray",&,N,V_items
T@"NSObject<OS_os_log>",&,N,V_loggingFacility
T@"AXElementNamesStyleProvider",&,N,V_styleProvider
T@"NSMutableArray",R,N,V_containers
_ignoresHitTest
setBackgroundColor:
setClipsToBounds:
_didUpdateOrientation:
userInfo
_updateInterfaceOrientationFromDeviceOrientation:
_sceneSettingsSafeAreaInsetsDidChange
interfaceOrientation
_isSecure
_normalizedSafeAreaInsets
_accessibilityWindowUsesOwnOrientationForComparingGeometry
setExportedInterface:
setExportedObject:
endpointRequestSatisfierDidDisconnect:
setInvalidationHandler:
endpointForConnection:forEndpointRequestSatisfier:
initWithConnection:
T@"<AXDragEndpointRequestSatisfierDelegate>",W,N,V_delegate
endpointForRequestingConnection:fromEndpointVendor:
listener:shouldAcceptNewConnection:
initWithXPCListener:
_listener
_activeConnections
T@"<AXDragEndpointVendorDelegate>",W,N,V_delegate
bezierPathWithOvalInRect:
fill
resizableImageWithCapInsets:
_updateForCycleIndex
_makeNextViewVisible
setCycleIndex:
isMakingNextViewVisible
setShouldSkipMakingNextViewVisible:
cycleIndex
setIsMakingNextViewVisible:
shouldSkipMakingNextViewVisible
_isMakingNextViewVisible
_shouldSkipMakingNextViewVisible
_cycleIndex
TQ,N,V_cycleIndex
TB,N,V_isMakingNextViewVisible
TB,N,V_shouldSkipMakingNextViewVisible
T@"NSArray",R,N
effectForBlurEffect:
setFont:
setNumberOfLines:
setTextAlignment:
setHidden:
defaultTitleToSubtitleVerticalSpacing
font
capHeight
defaultPlatterToTextVerticalSpacing
platterToTextHorizontalSpacing
lastBaselineAnchor
firstBaselineAnchor
textLabel
setText:
secondaryTextLabel
_updateSecondaryTextVisibility
isHidden
withSecondaryTextConstraints
setSecondaryText:
secondaryText
setTextLabel:
setSecondaryTextLabel:
setWithSecondaryTextConstraints:
_secondaryText
_textLabel
_secondaryTextLabel
_withSecondaryTextConstraints
T@"UILabel",&,N,V_textLabel
T@"UILabel",&,N,V_secondaryTextLabel
T@"NSArray",&,N,V_withSecondaryTextConstraints
T@"NSString",&,N
T@"NSString",&,N,V_secondaryText
_releaseOutlets
view
fingerPathCollection
dynamicFingerPathCollection
setAutoresizingMask:
gestureRecorderView
setFingerPathCollection:
setDynamicFingerPathCollection:
setShouldPreventFurtherRecording:
setTrackingTouches:
_endInstantReplay
_exitReplayMode
setInReplayMode:
setReplayTimestampIndex:
setReplayTimestampsCount:
_advanceReplay
_freezeAllDynamicFingerPaths
replayTimestampIndex
replayTimestampsCount
replayDynamicFingerPaths
setReplayDynamicFingerPaths:
_didFinishReplayingRecordedGesture
instantReplayTimestampIndexes
setInstantReplayTimestampIndexes:
instantReplayPartialFingerPaths
setInstantReplayPartialFingerPaths:
isEmpty
_endInstantReplayForStaticFingerAtIndex:
_advanceInstantReplayForStaticFingerAtIndex:
isViewLoaded
_clearWeakReferencesWithOutlets
maximumDurationOfRecordedGestureForGestureRecorderViewController:
gestureRecorderViewController:didStartRecordingAtomicFingerPathAtPoint:
gestureRecorderViewControllerDidStopRecordingAtomicFingerPath:
gestureRecorderViewControllerDidFinishReplayingRecordedGesture:
recorderType
reloadAllFingerPaths
isInReplayMode
_startInstantReplayForStaticFingerAtIndex:
shouldPreventFurtherRecording
isTrackingTouches
anyObject
setWithObject:
_didStartRecordingAtomicFingerPathAtPoint:
setTrackingTouchesDidStartTimeInterval:
_updateDynamicFingerPathsWithTouches:touchesDidEnd:
trackingTouchesDidStartTimeInterval
_maximumDurationOfRecordedGesture
touchesForView:
_didStopRecordingAtomicFingerPath
touchesEnded:withEvent:
isChromeVisibleForGestureRecorderViewController:
gestureRecorderViewController:setChromeVisible:
loadView
recordedGesturePropertyListRepresentationWithName:
recordedReplayableGestureRepresentation
preventFurtherRecording
replayRecordedGesture
touchesBegan:withEvent:
touchesMoved:withEvent:
touchesCancelled:withEvent:
setRecorderType:
_shouldPreventFurtherRecording
_trackingTouches
_inReplayMode
_fingerPathCollection
_dynamicFingerPathCollection
_trackingTouchesDidStartTimeInterval
_replayTimestampIndex
_replayTimestampsCount
_replayDynamicFingerPaths
_recorderType
_instantReplayTimestampIndexes
_instantReplayPartialFingerPaths
T@"AXGestureRecorderFingerPathCollection",&,N,V_fingerPathCollection
T@"AXGestureRecorderFingerPathCollection",&,N,V_dynamicFingerPathCollection
TB,N,V_shouldPreventFurtherRecording
trackingTouches
TB,N,GisTrackingTouches,V_trackingTouches
Td,N,V_trackingTouchesDidStartTimeInterval
inReplayMode
TB,N,GisInReplayMode,V_inReplayMode
TQ,N,V_replayTimestampIndex
TQ,N,V_replayTimestampsCount
T@"NSMutableArray",&,N,V_replayDynamicFingerPaths
T@"NSMutableDictionary",&,N,V_instantReplayTimestampIndexes
T@"NSMutableDictionary",&,N,V_instantReplayPartialFingerPaths
T@"<AXGestureRecorderViewControllerDelegate>",W,N,V_delegate
T@"AXGestureRecorderView",R,N
empty
TB,R,N,GisEmpty
Tq,N,V_recorderType
labelMinimumContentSizeCategory
labelMaximumContentSizeCategory
_preferredContentSizeCategoryCappedByMinimumContentSizeCategory:maximumContentSizeCategory:
_layoutViewSideLengthScaledFromDefaultLength:labelContentSizeCategory:
_imageMaximumContentSizeCategoryIndependentOfLabel
minimumOuterPadding
defaultSideLength
_traitCollectionForMinimumContentSizeCategory:maximumContentSizeCategory:
imageMinimumContentSizeCategory
imageMaximumContentSizeCategory
systemFontOfSize:
_lightSystemFontOfSize:
traitCollectionForLabelPreferredContentSizeCategory
scaledFontForFont:compatibleWithTraitCollection:
layoutItemsByLocation:positions:rows:columns:clockwiseOctagonalLocations:horizontallyCenteredLocation:
_enableAutoLayoutForAllItems:
itemConstraints
setItemConstraints:
_setUpConstraintsForPreferredPositionsForItems:positions:
_setUpConstraintsToAlignItems:rows:columns:
_setUpConstraintsToAvoidCollisions:rows:columns:clockwiseOctagonalLocations:
positioningLayoutGuides
removeLayoutGuide:
setPositioningLayoutGuides:
addLayoutGuide:
constraintEqualToAnchor:multiplier:
imageView
leftAnchor
rightAnchor
_enumerateListsOfLocations:items:withBlock:
constraintGreaterThanOrEqualToSystemSpacingAfterAnchor:multiplier:
constraintGreaterThanOrEqualToSystemSpacingBelowAnchor:multiplier:
imageViewContainerView
centerItems:withView:
layoutViewSideLengthScaledFromDefaultLength:
traitCollectionForImagePreferredContentSizeCategory
labelFont
T@"UIFontMetrics",R,N
T@"UITraitCollection",R,N
T@"UIFont",R,N
layoutItemsByLocation:hasBackButton:
centerItems:
_itemConstraints
_positioningLayoutGuides
T@"NSArray",&,N,V_itemConstraints
T@"NSMutableArray",&,N,V_positioningLayoutGuides
itemBackgroundViewCreationHandler
setAdjustsFontForContentSizeCategory:
setTextColor:
_updateLabelContainerSize
_updateFromMainProperties
_usesExtendedArrow
_updateFromLabelContainerFrame
_collisionFrameForArrow
_usesArrow
arrowTipLocation
_arrowPointsDown
availableBounds
forcedLabelContainerSize
sizeToFit
frame
setLabelContainerSize:
setFrame:
_shouldAllowLongArrows
_elementFrameAdjustedForBounds
labelContainerSize
_arrowHeight
setArrowTipLocation:
_validateLabelContainerFrame:
setLabelContainerFrame:
_outlineWidth
_newBackgroundImage
setImage:
setMaskView:
_cornerRadius
bezierPathWithRoundedRect:cornerRadius:
setLineWidth:
addQuadCurveToPoint:controlPoint:
stroke
_backgroundView
_backgroundMaskView
_labelPosition
_forcedLabelContainerSize
_labelContainerSize
_arrowTipLocation
_elementFrame
_availableBounds
_labelContainerFrame
T{CGSize=dd},N,V_labelContainerSize
T{CGPoint=dd},N,V_arrowTipLocation
T{CGRect={CGPoint=dd}{CGSize=dd}},R,N,V_elementFrame
T{CGRect={CGPoint=dd}{CGSize=dd}},R,N,V_availableBounds
Tq,N,V_labelPosition
T{CGRect={CGPoint=dd}{CGSize=dd}},N,V_labelContainerFrame
T{CGSize=dd},N,V_forcedLabelContainerSize
localizedStringWithFormat:
_systemGroupBackgroundCellColor
tableSeparatorColor
initWithProgressViewStyle:
_quaternaryLabelColor
setTrackTintColor:
setProgress:
progress
safeValueForKeyPath:
capInsets
setProgress:animated:
size
fontWithName:size:
buttonWithType:
titleLabel
_secondaryLabelColor
setTitleColor:forState:
leftButton
rightButton
makeButton
setRightButton:
setLeftButton:
_buttonTapped:
addTarget:action:forEvents:
setTitle:forState:
setEnabled:
isEnabled
gestureRecorderControlsView:buttonTappedAtIndex:
defaultHeight
setLeftButtonColor:title:enabled:rightButtonColor:title:enabled:animationDuration:completion:
isLeftButtonEnabled
setLeftButtonEnabled:
isRightButtonEnabled
setRightButtonEnabled:
setMiddleButton:
middleButton
_leftButton
_rightButton
_progressView
_middleButton
T@"UIButton",&,N,V_leftButton
T@"UIButton",&,N,V_rightButton
T@"<AXGestureRecorderControlsViewDelegate>",W,N,V_delegate
Tf,N
leftButtonEnabled
TB,N,GisLeftButtonEnabled
rightButtonEnabled
TB,N,GisRightButtonEnabled
T@"UIButton",&,N,V_middleButton
_accessibilityAncestorIsKindOf:
_accessibilityFindUnsortedSubviewDescendantsPassingTest:
_atvaccessibilityClosestElementAbove:
accessibilityIdentifier
accessibilityContainer
accessibilityText
containsString:
tv_elementType
attributes
_atvAccessibilityITMLAccessibilityContentWithElement:
tv_AccessibilityText
tv_associatedIKViewElement
_accessibilityBadgeTextForTextElement:
badges
tv_siriData
_atvaccessibilityLabel
iTunesStoreItemSemanticContextWithName:metadata:
_atvaccessibilityITMLSemanticContext
_accessibilityExtendedLabelForFocusParcelWithLabel:
_atvaccessibilityGeometricNearestHeader
_atvaccessibilityAncestorHasAXID:
_atvaccessibilityITMLAccessibilityContent
_atvaccessibilityITMLClass
_atvaccessibilitySemanticContext
T@"NSDictionary",R,N
initWithStyle:reuseIdentifier:
initializeView
setIsAccessibilityElement:
setAccessibilityRespondsToUserInteraction:
_accessibilityLoadAccessibilityInformation
markNameTextFieldAccessible
setReturnKeyType:
textFieldValueBlock
shouldDisableTextFieldWhenNotEditing
shouldAllowSelection
setAccessoryType:
setSelectionStyle:
setEditing:animated:
resignFirstResponder
backgroundColor
textFieldValueSetBlock
textFieldShouldBeginEditing:
textFieldDidBeginEditing:
textFieldShouldEndEditing:
textFieldDidEndEditing:
textFieldDidEndEditing:reason:
textField:shouldChangeCharactersInRange:replacementString:
textFieldDidChangeSelection:
textFieldShouldClear:
textFieldShouldReturn:
_accessibilityIgnoreInternalLabels
updateText
nameTextField
setNameTextField:
setTextFieldValueBlock:
setTextFieldValueSetBlock:
setShouldDisableTextFieldWhenNotEditing:
setShouldAllowSelection:
_shouldDisableTextFieldWhenNotEditing
_shouldAllowSelection
_nameTextField
_textFieldValueBlock
_textFieldValueSetBlock
T@?,C,N,V_textFieldValueBlock
T@?,C,N,V_textFieldValueSetBlock
T@"UITextField",&,N,V_nameTextField
TB,N,V_shouldDisableTextFieldWhenNotEditing
TB,N,V_shouldAllowSelection
ax_constraintsToMakeItem:sameDimensionsAsItem:
integerValue
constraints
removeConstraint:
ax_removeFromContainer
contentInset
contentOffset
setContentOffset:animated:
_scrollInXDirection:yDirection:
_scrollUp:
keyCommandWithInput:modifierFlags:action:
_scrollDown:
canBecomeFocused
_accessibilityKeyCommands
_contentSizeCategoryDidChange:
presentBannerViewWithText:secondaryText:duration:fromUserAction:
bannerView
setBannerView:
initWithContainingView:
presentBannerViewWithText:duration:
presentCustomView:duration:
_bannerView
T@"AXUIBannerView",&,N,V_bannerView
setItemBackgroundViewCreationHandler:
_itemBackgroundViewCreationHandler
T@?,C,N,V_itemBackgroundViewCreationHandler
stringByAppendingPathComponent:
bundleWithPath:
bundleWithIdentifier:
rangeOfString:
substringFromIndex:
stringByAppendingFormat:
_referenceBounds
_deviceSpecificImageNamed:inBundle:
stringByReplacingOccurrencesOfString:withString:
configurationWithPointSize:
systemImageNamed:withConfiguration:
systemImageNamed:
systemWhiteColor
systemGreenColor
systemYellowColor
systemRedColor
systemOrangeColor
zoomShouldFollowFocus
convertRect:toWindow:
B24@0:8@16
#16@0:8
@16@0:8
@24@0:8:16
@32@0:8:16@24
@40@0:8:16@24@32
B16@0:8
B24@0:8#16
B24@0:8:16
Vv16@0:8
Q16@0:8
^{_NSZone=}16@0:8
B24@0:8@"Protocol"16
@"NSString"16@0:8
v24@0:8@?16
v24@0:8@?<v@?@"NSXPCListenerEndpoint">16
@24@0:8@16
v16@0:8
@"NSXPCConnection"
v24@0:8@16
v28@0:8@16B24
v24@0:8@"CAAnimation"16
v28@0:8@"CAAnimation"16B24
@?16@0:8
v60@0:8@16@24@32B40d44@?52
v32@0:8@16@24
v40@0:8@16@24f32f36
v48@0:8@16@24d32@?40
v56@0:8@16@24f32f36d40@?48
@32@0:8@16@24
@24@0:8f16f20
B32@0:8@16@24
B48@0:8@16@24@32@40
B40@0:8@16@24@32
v40@0:8@16q24d32
v32@0:8@16q24
v56@0:8@16{CGRect={CGPoint=dd}{CGSize=dd}}24
v48@0:8@16@24@32@?40
v56@0:8@16@24@32@40@?48
v40@0:8@16@24@?32
v32@0:8@16@?24
Q32@0:8@16@24
@40@0:8@16@24@32
B40@0:8@16@24@?32
v40@0:8@16@24@32
v24@0:8@"UIApplication"16
B32@0:8@"UIApplication"16@"NSDictionary"24
B32@0:8@"UIApplication"16@"NSURL"24
B48@0:8@"UIApplication"16@"NSURL"24@"NSString"32@40
B40@0:8@"UIApplication"16@"NSURL"24@"NSDictionary"32
v40@0:8@"UIApplication"16q24d32
v32@0:8@"UIApplication"16q24
v56@0:8@"UIApplication"16{CGRect={CGPoint=dd}{CGSize=dd}}24
v32@0:8@"UIApplication"16@"UIUserNotificationSettings"24
v32@0:8@"UIApplication"16@"NSData"24
v32@0:8@"UIApplication"16@"NSError"24
v32@0:8@"UIApplication"16@"NSDictionary"24
v32@0:8@"UIApplication"16@"UILocalNotification"24
v48@0:8@"UIApplication"16@"NSString"24@"UILocalNotification"32@?<v@?>40
v56@0:8@"UIApplication"16@"NSString"24@"NSDictionary"32@"NSDictionary"40@?<v@?>48
v48@0:8@"UIApplication"16@"NSString"24@"NSDictionary"32@?<v@?>40
v56@0:8@"UIApplication"16@"NSString"24@"UILocalNotification"32@"NSDictionary"40@?<v@?>48
v40@0:8@"UIApplication"16@"NSDictionary"24@?<v@?Q>32
v32@0:8@"UIApplication"16@?<v@?Q>24
v40@0:8@"UIApplication"16@"UIApplicationShortcutItem"24@?<v@?B>32
v40@0:8@"UIApplication"16@"NSString"24@?<v@?>32
v40@0:8@"UIApplication"16@"NSDictionary"24@?<v@?@"NSDictionary">32
@32@0:8@"UIApplication"16@"INIntent"24
v40@0:8@"UIApplication"16@"INIntent"24@?<v@?@"INIntentResponse">32
Q32@0:8@"UIApplication"16@"UIWindow"24
B32@0:8@"UIApplication"16@"NSString"24
@"UIViewController"40@0:8@"UIApplication"16@"NSArray"24@"NSCoder"32
B32@0:8@"UIApplication"16@"NSCoder"24
v32@0:8@"UIApplication"16@"NSCoder"24
B40@0:8@"UIApplication"16@"NSUserActivity"24@?<v@?@"NSArray">32
v40@0:8@"UIApplication"16@"NSString"24@"NSError"32
v32@0:8@"UIApplication"16@"NSUserActivity"24
v32@0:8@"UIApplication"16@"CKShareMetadata"24
@"UISceneConfiguration"40@0:8@"UIApplication"16@"UISceneSession"24@"UISceneConnectionOptions"32
v32@0:8@"UIApplication"16@"NSSet"24
B24@0:8@"UIApplication"16
@"UIWindow"16@0:8
v24@0:8@"UIWindow"16
v32@0:8q16d24
v20@0:8B16
@"FBSOrientationObserver"
@"UIWindow"
@20@0:8f16
v36@0:8q16d24f32
v32@0:8q16@24
v36@0:8q16@24f32
v40@0:8q16@24d32
v44@0:8q16@24d32f40
v40@0:8q16q24@32
v48@0:8q16q24@32d40
v52@0:8q16q24@32d40f48
@32@0:8q16d24
@36@0:8q16d24f32
@32@0:8q16@24
@36@0:8q16@24f32
@40@0:8q16@24d32
@44@0:8q16@24d32f40
@40@0:8q16q24@32
@48@0:8q16q24@32d40
@52@0:8q16q24@32d40f48
v64@0:8q16q24@32q40d48d56
v68@0:8q16q24@32q40d48d56f64
@64@0:8q16q24@32q40d48d56
@68@0:8q16q24@32q40d48d56f64
v32@0:8{?=ffff}16
d16@0:8
q16@0:8
v24@0:8q16
{CGSize=dd}16@0:8
f16@0:8
@48@0:8{CGRect={CGPoint=dd}{CGSize=dd}}16
@"UIView"
@"UIBlurEffect"
{CGSize=dd}32@0:8{CGSize=dd}16
@"UIFontMetrics"
@"NSString"
Q24@0:8@16
@24@0:8Q16
@32@0:8Q16Q24
d24@0:8Q16
{CGPoint=dd}40@0:8{CGPoint=dd}16@32
@56@0:8{CGPoint=dd}16d32@40@48
v40@0:8@16@24d32
v24@0:8Q16
v24@0:8d16
@"<AXGestureRecorderFingerPathCollectionDelegate>"
@"NSMutableArray"
@"NSMutableDictionary"
@"AXMutableReplayableGesture"
v48@0:8{CGRect={CGPoint=dd}{CGSize=dd}}16
{CGRect={CGPoint=dd}{CGSize=dd}}16@0:8
v32@0:8Q16@24
v36@0:8@16@24B32
@"<AXGestureRecorderViewDelegate>"
@"AXGestureRecorderStyleProvider"
@"UIColor"
@"UIAccessibilityCustomAction"
{CGRect="origin"{CGPoint="x"d"y"d}"size"{CGSize="width"d"height"d}}
@36@0:8@16Q24B32
v32@0:8@16d24
@"<AXUIFloatingViewPresenterDelegate>"
@"NSArray"
v64@0:8@16{CGRect={CGPoint=dd}{CGSize=dd}}24^{CGContext=}56
@24@0:8^{CGContext=}16
@56@0:8@16{CGRect={CGPoint=dd}{CGSize=dd}}24
@32@0:8@16Q24
@"NSMutableSet"
@"<AXUISoftwareKeyboardManagerDelegate>"
@"NSObject<OS_os_log>"
@"AXElementNamesStyleProvider"
{UIEdgeInsets=dddd}16@0:8
@"<AXDragEndpointRequestSatisfierDelegate>"
B32@0:8@"NSXPCListener"16@"NSXPCConnection"24
@"NSXPCListenerEndpoint"32@0:8@"NSXPCConnection"16@"AXDragEndpointRequestSatisfier"24
v24@0:8@"AXDragEndpointRequestSatisfier"16
@"NSXPCListener"
@"<AXDragEndpointVendorDelegate>"
@"UILabel"
Q24@0:8@"AXGestureRecorderView"16
@"UIBezierPath"32@0:8@"AXGestureRecorderView"16Q24
B24@0:8@"AXGestureRecorderView"16
v28@0:8@"AXGestureRecorderView"16B24
v32@0:8@16Q24
v32@0:8@"AXGestureRecorderFingerPathCollection"16Q24
v32@0:8{CGPoint=dd}16
@"<AXGestureRecorderViewControllerDelegate>"
@"AXGestureRecorderFingerPathCollection"
d24@0:8d16
d32@0:8d16@24
v64@0:8@16@24@32@40@48@56
@48@0:8@16@24@32@40
@96@0:8@16{CGRect={CGPoint=dd}{CGSize=dd}}24{CGRect={CGPoint=dd}{CGSize=dd}}56@88
v32@0:8{CGSize=dd}16
{CGRect={CGPoint=dd}{CGSize=dd}}48@0:8{CGRect={CGPoint=dd}{CGSize=dd}}16
{CGPoint=dd}16@0:8
@"UIImageView"
{CGSize="width"d"height"d}
{CGPoint="x"d"y"d}
v20@0:8f16
v64@0:8i16@20B28i32@36B44d48@?56
@"UIButton"
@"ASTBiggerProgressView"
@"<AXGestureRecorderControlsViewDelegate>"
B48@0:8@16{_NSRange=QQ}24@40
B24@0:8@"UITextField"16
v24@0:8@"UITextField"16
v32@0:8@"UITextField"16q24
B48@0:8@"UITextField"16{_NSRange=QQ}24@"NSString"40
v24@0:8B16B20
@"UITextField"
v32@0:8d16d24
v44@0:8@16@24d32B40
@"AXUIBannerView"
