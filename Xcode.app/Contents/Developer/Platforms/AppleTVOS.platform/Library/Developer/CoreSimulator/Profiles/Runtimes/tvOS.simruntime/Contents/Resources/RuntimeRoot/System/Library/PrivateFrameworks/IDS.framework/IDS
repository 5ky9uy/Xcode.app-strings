@(#)PROGRAM:IDS  PROJECT:IDS-
IDSInternalQueue - assertQueueIsNotCurrent in %s failed {symbols: %@}. The only acceptable callstack includes dealloc.
Instantiating %{public}@ from daemon -- returning nil
%s is deprecated, please use startTrackingPeer:forType:
%s is deprecated, please use stopTrackingPeer:forType:
Exception returned from daemon: %@
Sending down new services %@ commands %@ capabilities %d. sendServices %@ sendCommands %@ sendCaps %@
Sending down new services %@ commands %@ capabilities %d
Set services: %@  (Previous: %@)
Set commands: %@  (Previous: %@)
Updating capabilities: %d  (Previous: %d)
IDSInternalQueue - assertQueueIsCurrent in %s failed {symbols: %@}. The only acceptable callstack includes dealloc.
Disconnecting from daemon - no listeners
%s: adding delegate on service %@ _notificationServices %@
Adding listener with ID: %@    services: %@   commands %@
Removing listener with ID: %@    services (count): %@   commands (count): %@   capabilities %@
Tried to remove non existent listener with ID: %@
Set %@: %@  for listener ID: %@
setCapabilities %d for listenerID %@ has no ID
setCapabilities %d for listenerID %@ is not a valid listener
setCapabilities %d for listenerID %@ - listener map already contains our capabilities
Set caps: %d  for listener ID: %@
Cleaning up daemonConnectedGroup %p
Cleaning up LOCAL object
Cleaning up REMOTE object
Disconnected from agent (local)...
 ... disconnection from agent (local) being handled by ivarQueue
Disconnected from agent (remote)...
 ... disconnection from agent (remote) being handled by ivarQueue
Will auto reconnect...
 ...auto reconnecting
System application did suspend
System application did enter background
System application did enter foreground
System application did resume
Received call to roll encryption keys
IDSLocalSetupStart
IDSLocalSetupCompleted
IDSLocalSetupStop
IDSLocalSetupUnpair
IDSLocalSetupUnpairStart
IDSAddPairedDevice %@
Asked to pair device with cbuuid: %@
IDSConnectPairedDevice %@
%s %@
%s %@ %p %p
%s is DEPRECATED! Please use IDSGetPairedDevicesWithCompletionBlock
%s is DEPRECATED! Please use IDSInitialLocalSyncStartedForServices
%s is DEPRECATED! Please use IDSInitialLocalSyncCompletedForServices
Local setup - received incoming sync message
%s: invalid device %@
%@ Created
%@ parsing direct messaging state: %llu
%@ direct messaging supported: %d
[%llu %s] Dealloc
%@ Cancel
%@ Invalidate
%@ Updated destination device: %@
%@ connected devices changed %@
%@ peerIsNearby %d peerIsConnected %d changed %d
%@ received direct-messaging metadata %@
%@ direct messaging allowed: %d
%@ connection entered state: %d
%@ Invalid device
%@ direct messaging socket: %d, error: %@
Invalid context
%@ Received context %@
Invalid stream name
we are the originator
%@ Ignoring incoming request as existing request is in progress
Received error: %@
[%llu %s] Ignoring HS Header
[%llu %s] Received Header: v %u t %u l %u
[%llu %s] received ack for seq num %u guid: %@
[%llu %s] message for guid %@ already timed out
[%llu %s] received App-Level ack for: %@
[%llu %s] connection wrote ack for guid: %@(%u)
[%llu %s] connection wrote app-ack for guid: %@(0)
Invalid TLV size for type %d
Message %@ failed to send due to %ld
[%llu %s] Downgrading priority of message with guid %@ to Default from Urgent, client %@ is not configured to send urgent messages
[%llu %s] Client requesting to send message with guid %@ options %@
[%llu %s] Message %@ taking long, retrying
[%llu %s] Replacing guid: %@ with guid: %@
[%llu %s] connection wrote message w/ seq num %u guid %@
[%llu %s] Error! powerAssertionOptions is nil. Cannot get power assertion.
[%llu %s] logConnectionStatisticsInPowerDictionary: %@
malformed tlv received ((%d + %zu + %zu > %lu)
malformed tlv received ((%d + %u > %lu)
Created %@
encryptData: plaintext larger than GCM can support for topic %@ data.length %lu
encryptData: failed to create CommonCrypto cryptor for topic %@ error %ld
encryptData: failed to set IV for topic %@ error %ld
encryptData: failed to add AAD for topic %@ error %ld
encryptData: failed to encrypt for topic %@ error %ld
encryptData: failed to create auth tag for topic %@ error %ld
encryptData: failed to reset cryptor for topic %@ error %ld
decryptData: insufficient incoming data for topic %@ size %lu
decryptData: unknown keyID for topic %@ keyID %@
decryptData: failed to create cryptor for topic %@ keyID %@ error %ld
decryptData: unknown version for topic %@ keyID %@ version %u
decryptData: failed to set IV for topic %@ keyID %@ error %ld
decryptData: failed to decrypt for topic %@ keyID %@ error %ld
decryptData: failed to verify auth tag for topic %@ keyID %@ error %ld
decryptData: failed to reset cryptor for topic %@ keyID %@ error %ld
Invalidating _IDSGroupSession { self: %p, _internal: %p }
IDSGroupSession method invoked without a valid internal session! { self: %p, _internal: %p }
createAliasForParticipantID created %llu from %llu and %@
createAliasForLocalParticipantIDWithSalt created %llu from %llu and %@
createAliasForLocalParticipantIDWithSalt created and returning %llu
IDS daemon took too long to respond to participantIDForAlias:salt:
manageDesignatedMembers: invalid type: %u
IDSReportiMessageSpam - %@  (toURI: %@)
IDSReportiMessageUnknownSenderWithBlackholeStatus - %@, %@, %@, %@  (toURI: %@)
IDSCheckiMessageUnknownSender (toURI: %@ Count: %@)
%@ posting availability change notification (%@) - available: %d
%@ creating monitor for service: %@
%@ adding listener `%@` for service: %@
%@ removing listener `%@` for service: %@
%@ no more listeners for service: %@
%@ no listener matching `%@` for service: %@
Exception: %@ in handler: %@ while executing a block
IDSDaemonListener _removeAccountOnIvarQueue %@ was told of an account without a unique id or service name: %@
IDSDaemonListener accountAdded %@ was told of an account without a unique id or service name: %@
%s: %@
IDSDaemonListener accountRemoved %@ was told of an account without a unique id or service name: %@
IDSDaemonListener accountEnabled was told of an account without a unique id %@ or service %@
Incoming account enabled: %@
IDSDaemonListener accountDisabled was told of an account without a unique id %@ or service %@
Incoming account disabled: %@
Account info changed %@
IDSDaemonListener accountInfoChanged %@ was told of an account without a unique id or service name: %@
Found active device in dependent devices update, updating activeDevice ID to %@ for %@
Dependent devices updated, setting %@ to (isActive: %@)
Current devices for account %@: %@
Found existing local device, removing %@
Local device added %@, we'll trigger didSwitchActivePairedDevice callback since we already have an active device %@
Local device added %@, we'll trigger didSwitchActivePairedDevice callback since we already had a locally paired device
Local device added, updating activeDevice ID to %@
New devices for account %@: %@
Active device was removed, clearing active uniqueID %@
Tinker device added %@, we'll trigger didSwitchActivePairedDevice callback since we already have an active device %@
Tinker device added %@, we'll trigger didSwitchActivePairedDevice callback since we already had a locally paired device
Tinker device added, updating activeDevice ID to %@
Found active device in tinker device update, updating activeDevice ID to %@ for %@
Tinker device updated, setting %@ to (isActive: %@)
tinkerDeviceAdded %@
tinkerDeviceRemoved %@
tinkerDeviceUpdated %@
familyInfoUpdated %@
Family Info was nil %@
ID status not valid for %@
Refresh registration for account %@
No device ID: can't update nsuuid. Bailing...
Checking for updates for device with new nsuuid { nsuuid: %@, device: %@}
No account with device %@ and mismatched nsuuid were found.  No updates made
Did get identities {identities: %@, error: %@}
Calling didSwitch for topic %@
DidSwitch callback for %@ (handler %@) was handled %@
Unhandled didSwitch callback for topic %@
Updating isActive state for all accounts %@
New active unique ID is nil
Account unique ID is nil, can't switch active device ID
Switching active device to %@ for service %@
Current linked devices for service %@: %@
New linked devices for service %@: %@
Active paired device switched, updating activeDevice ID to %@
Switching active device to %@ for account %@
Unsetting active device unique ID due to quick switch or new pairing start
Setup complete with info
Deferred setup on ivar queue, got accounts %@
Services all disappeared, removing all accounts
Deferred setup on ivar queue, got enabled accounts %@
Notified account enabled %@ for service %@
Enabled accounts all disappeared, removing all enabled accounts
Deferred setup on ivar queue, got %lu dependent devices
Dependent devices all disappeared, removing all dependent devices
Deferred setup on ivar queue, got %lu linked devices
Dealing with family members
Device identifier from daemon: %@
Active device uniqueID from daemon: %@ account map %@ service map %@
Direct messaging peer identifier: %@
Setup info is not complete, waiting...
Connection is not complete, waiting...
Connection complete, notifying
Connection complete
XPC object received %@:%@
Exception: %@ in handler: %@ while executing: %@
Device identifier changing from %@ to %@
Unnecessary invocation of deviceIdentifierDidChange:
Setting up delegate %p
Sending the real-time media prekey of this device to the group %@
the delegate object %@ doesn't respond to the selector didReceivePublickeys:
the delegate object %@ doesn't respond to the selector didReceiveMasterKeyMaterials:
unknown object type %@
Expiration dates in the past are not allowed: %@
Creaating new activity monitor with activity %@ service identifier %@
Adding delegate %@ to activity monitor %@
Beginning broadcast with activityInfo %@
Stopping broadcast with subActivity %@
Getting listening status for self: %@
Error checking for isListening {xpcError: %@}
Set listening for updates %d on self %@
Error setting isListening {xpcError: %@}
Subscription completion handler called, subscriptions: %@ error %@
Error getting current subscriptions {xpcError: %@}
setupInvitationsForService: Fetched pending invitations from daemon: %@
setupInvitationsForService: Fetched received invitations from daemon: %@
setupInvitationsForService: Failed to unarchive pending invitation {%@} with error {%@}
setupInvitationsForService: Failed to unarchive received invitation {%@} with error {%@}
validateStrictDecodingForSentInvitation: Failed to validate strict decoding for invitation with error {%@}
sendInvitationToDestination: received %@ from IDSService with error {%@}
sendInvitationToDestination: Invitation {%@} not added to pendingInvitations. Calling serverAcknowledgedBlock
cancelInvitation: received %@ from IDSService with error {%@}
cancelInvitation: Invitation {%@} not removed from pendingInvitations. Calling serverAcknowledgedBlock
acceptInvitation: received %@ from IDSService with error {%@}
acceptInvitation: Invitation {%@} not removed from receivedInvitations. Calling serverAcknowledgedBlock
declineInvitation: received %@ from IDSService with error {%@}
declineInvitation: Invitation {%@} not removed from receivedInvitations. Calling serverAcknowledgedBlock
Validating Invitation: Null invitation, dropping
Validating Invitation: Expiry date has passed {%@}
Validating Invitation: There is no stored invitation with unique id {%@}
Validating Invitation: Stored invitation's sender mergeId {%@} is invalid. Could not compare to received invitation's sender mergeId {%@}
Validating Invitation: Sender mergeId {%@} does not match stored invitation's sender mergeId {%@}
Validating Invitation: Sender merge ID for received invitation {%@} does not match the stored invitation {%@}
IncomingInvitation: Invitation state %ld. Delivered {%@} to delegate incomingInvitation
IncomingInvitation: No delegate found for manager:incomingInvitation:
IncomingInvitation: Invitation state %ld. Delivered {%@} to delegate senderDidCancelInvitation
IncomingInvitation: No delegate found for manager:senderDidCancelInvitation:
IncomingInvitation: Invalid Invitaion state %ld. Not delivered {%@} to delegate
IncomingInvitationUpdate: Invitation state %ld. Delivered {%@} to delegate receiverDidAcceptInvitation
IncomingInvitationUpdate: No delegate found for manager:receiverDidAcceptInvitation:
IncomingInvitationUpdate: Invitation state %ld. Delivered {%@} to delegate receiverDidDeclineInvitation
IncomingInvitationUpdate: No delegate found for manager:receiverDidDeclineInvitation:
IncomingInvitationUpdate: Invalid Invitaion state %ld. Not delivered {%@} to delegate
InvitationManager didSendWithSuccess: Identifier {%@}. didSendWithSuccess {%@} with error %@
InvitationManager didSendWithSuccess: No invitation found with identifier {%@}
InvitationManager didSendWithSuccess: Calling block for invitation with identifier {%@} and state {%ld}
InvitationManager didSendWithSuccess: No invitation ack block found with identifier {%@}
Client initialized IDSServerMessagingController with topic: %@ uuid: %@
XPC interruption for client %@
Setting up xpc for client %@
Error fetching server messaging collaborator {error: %@}
Failing message due to xpc interruption {guid: %@, error: %@}
Calling out to client completion { guid: %@, success: %@, error: %@ }
Client added delegate to listen for incoming messages from server { uuid: %@, delegate count: %lu }
Client requested send { clientUUID: %@, guid: %@, options: %@ }
Client requested certified delivery receipt { clientUUID: %@, guid: %@, context: %@ }
Client received incoming data { clientUUID: %@, guid: %@, context: %@ }
No delegates found to handle incoming server message { guid: %@ }
Forwarding server message to delegate { guid: %@, delegate: %p }
Did receive registration identity update {delegates: %{public}@}
IDSSignInController init {self: %p}
IDSSignInController dealloc {self: %p}
Setting delegate {service: %@, delegate: %p, status: %@}
Removing delegate {service: %@}
%s called with nil completion - returning
Enable user on service {userType: %llu, service: %@}
Already enabled
Enabling apple id - starting machine
Enabling phone number - completed
No matching account {error: %@}
Disable user on service {userType: %llu, service: %@}
Already disabled
No account found -- completing {userType: %llu, service: %@}
Checking user statuses {service: %@}
Finished checking user statuses {status: %@, service: %@}
Provided credential {credential: %p, user: %@, service: %@}
Invalid params {error: %@}
Set for account password {username: %@, error: %@}
Sign in user {user: %@, service: %@, shouldWait: %@}
Sign in user with provided credential {user: %@, credential: %p, service: %@}
Sign out service {service: %@}
Calling sign in controller's client completion block {completion: %@, error: %@}
Initialized state machine {self: %p, accountID: %@, serviceName: %@, state: %@, completion: %@}
Schedule validation after {self: %p, delay: %@, accountID: %@, allowFuzz: %@, signOut: %@}
Periodic validation fired {delay: %f, allowFuzz: %@, signOut: %@}
No description to validate {accountID: %@}
Validating state {stateNumber: %@, account: %@}
Completed {errorCode: %llu, account: %@}
No account to validate {accountID: %@, description: %@}
Re-enable, looks like things didn't progress
Transitioning to registering
Validating delegate state {changes: %@, current: %@, cached: %@}
Added interesting account {account: %@}
Account disabled {account: %@}
Account removed {account: %@}
Account updated {account: %@}
IDSSession dealloced
Received invalid options %@, bailing
Received IDQueryCompletedWithFromURI %@ idStatusUpdates %@ service %@ success %@ error %@
Updated local cache to %@
Notifying delegate %@ about ID status update
addListener:forService:
ListenerID is empty, bailing...
Service name is empty, bailing...
%@ -> %@
Final map after add %@
removeListenerID:forService:
Final map after remove %@
%s  (simulatorDeviceID: %@)
Failed to soft link IDSSimulatorLocalPairingAddPairedDevice
Failed to soft link IDSSimulatorLocalPairingDeletePairedDevice
Failed to soft link IDSSimulatorLocalPairingSwitchActivePairedDevice
IDSGroupEncryptionKeyMaterialCache
IDSGroupEncryptionKeyMaterialCache received key %@
IDSGroupEncryptionKeyMaterialCache invalidateKeyMaterialByKeyIndexes %@
IDSGroupEncryptionKeyMaterialCache enumerating keyID %@, locally generated:%@, generation counter:%u
There are currently no family handles on service. Failing message, will try to fetch members.
Handle: %@ is not in family.
Service received %@ familyInfoUpdated
Creating IDSGroupSessionUnicastParameter with local id %@ and remote id %@
%s: received new traffic classifiers %@
Cannot save invalid device info: %@
Received paired device info, sending to daemon for saving
Cannot delete empty CBUUID {cbuuid: %{private}@}
%s: device CBUUID: %@
%s: Empty completion block/queue
Querying local device info from IDSD asynchronously
XPC Connection Error - Failed to get localDeviceInfo {error: %{public}@}
Received local device info from daemon, device: %@
getLocalDeviceInfoFailed {error: %{public}@}
Querying paired device info from IDSD asynchronously
XPC Connection error - Failed to get pairedDeviceInfo {error: %{public}@}
Received paired device info from daemon, device: %@
getPairedDeviceInfo error {error: %{public}@}
Received pairing removed notification from daemon, device: %@, deleted: %@
Invoking pairingDelete completion block
XPC Connection error - Failed to constuct RA response dictionary {error: %{public}@}
Failed to create IDSAuthenticationSigningResult due to a mismatch between subscription identifiers and authentication certificates! {subscriptionIdentifiers: %@, authenticationCertificates: %@}
Client requested authenticate phone on an unsupported platform -- failing request {clientError: %@}
Client request to authenticate phone {uuid: %@}
Client requested phone authentication signature on an unsupported platform -- failing request {clientError: %@}
Client request to generate phone authentication signature over data {uuid: %@}
Client requested carrier token on an unsupported platform -- failing request {clientError: %@}
Client request for carrier token {uuid: %@}
Received authenticate phone response from daemon {uuid: %@, phoneCertificateData: %@, handler: %@, completion: %@, clientError: %@}
Received phone authentication signature response from daemon {uuid: %@, signature: %@, signingResult: %@, handler: %@, completion: %@, clientError: %@}
Received carrier token response from daemon {uuid: %@, carrierToken: %@, handler: %@, completion: %@, clientError: %@}
Timed out phone authentication signature request -- calling completion block with timeout error {completionBlock: %@}
Timed out phone authentication certificate request -- calling completion block with timeout error {completionBlock: %@}
Timed out phone carrier token operation -- calling completion block with timeout error {completionBlock: %@}
Client requested to set current phone user subscription source on an unsupported platform -- failing request {clientError: %@}
Client request to set current phone subscription source {uuid: %@}
Client requested current phone user subscription source on an unsupported platform -- failing request {clientError: %@}
Client request for current phone subscription source {uuid: %@}
Failed to weak link FTSelectedPNRSubscription from FTServices for synchronous fetch of phone user subscription source
Unable to determine selected phone user subscription source synchronously {subscriptionSource: %ld, selectedContext: %@, subscriptionError: %@}
Returning current phone user subscription source synchronously {subscriptionSource: %ld, clientError: %@}
Timed out phone subscription source operation -- calling completion block with timeout error {completionBlock: %@}
Received response after setting current phone user subscription from daemon {uuid: %@, subscriptionSource: %@, handler: %@, completion: %@, clientError: %@}
Received current phone user subscription response from daemon {uuid: %@, subscriptionSource: %@, handler: %@, completion: %@, clientError: %@}
Alloc'ing IDSXPCConnectionRemoteObjectPromise {pointer: %p}
Dealloc'ing IDSXPCConnectionRemoteObjectPromise {target: %{public}@, pointer: %p}
Failing xpc connection promise {pendingInvocations: %{public}@, error: %{public}@}
Failing xpcRemoteObjectPromise with no pending invocations {error: %{public}@}
Found existing IDSAccountController %@ for service %@
Tried to create IDSAccountController with empty service, ignoring...
Couldn't find existing IDSAccountController adding new one %@
    %@ -> %p
Deallocing IDSAccountController %@
%p will be removed from account controller map automatically
* Request to setup account with aliases: %@ and parameters:
  => password : REDACTED
  => %@ : %@
* Request to add account: %@   service: %@
* Request to remove account: %@   service: %@
* Request to enable account: %@   service: %@
* Request to disable account: %@   service: %@
Initializing _IDSGroupSession { self: %p, uniqueID: %@, instanceID: %@ }
Conference server at: %s:%d
No conference server support, cannot connect to server at %s:%d
Invalidating _IDSGroupSession { self: %p, uniqueID: %@, instanceID: %@ }
Deallocating _IDSGroupSession { self: %p, uniqueID: %@, instanceID: %@ }
_IDSGroupSession was deallocated without being invalidated -- this may indicate an orphaned daemon session! { self: %p, uniqueID: %@, instanceID: %@ }
Disconnected from daemon, notifying client of groupSession %@
Empty unique ID
Empty instance ID
Empty account ID
Setting up session delegate %p
updateMembers messagingCapabilities called
Cannot join a session that is already ended, ignoring...
joinWithOptions called %@
%@ joinWithOptions: %@
Cannot join a session without the participant data information.
cfs_client_send_join_request, _cfs_requestID: %d, clientID: %llu, groupID: %s, data: %@, result: %d
cfs_client_send_leave_request, result: %d
No local key material found. Skip completion handler udpate.
No completion handlers detected inside _dataCryptorRequests.
Updating %lu completion handlers in _dataCryptorRequests
requestDataCryptorForTopic: topic is empty!
Session %@ received report
Session %@ full received report: %@
Ignoring didReceiveReport, session doesn't match %@ vs. %@
Ignoring group session termination, session doesn't match %@ vs. %@
Group session %@ was terminated
Group session ended %@ with reason %d error %@
Ignoring group session ended, session doesn't match %@ vs. %@
Did join group session %@
Group session %@ existing participants for did join %@
Ignoring sessionDidJoinGroup {self:%p, _uniqueID:%@, identifier:%@}
Group session %@, existing participants for did join %@
Did join group session %@, participantUpdate %@
Received localParticipantID: %llu
Did leave group session %@
Ignoring sessionDidLeaveGroup {self:%p, _uniqueID:%@, identifier:%@}
ParticipantDidJoin group session %@, participantInfo %@
Ignoring participantDidJoinGroupWithInfo {self:%p, _uniqueID:%@, identifier:%@}
ParticipantDidLeave group session %@, participantInfo %@
Ignoring participantDidLeaveGroupWithInfo {self:%p, _uniqueID:%@, identifier:%@}
didReceiveActiveParticipants: %@ for group session: %@
Ignoring didReceiveActiveParticipants {self:%p, _uniqueID:%@, identifier:%@}
didReceiveActiveLightweightParticipants: %@ for group session: %@
Ignoring didReceiveActiveLightweightParticipants {self:%p, _uniqueID:%@, identifier:%@}
didReceivePluginAllocationInfo for session: %@, sessionInfo: %@
Ignoring didReceivePluginAllocationInfo {self:%p, _uniqueID:%@, identifier:%@}
didRegisterPluginAllocationInfo for session: %@, sessionInfo: %@
Ignoring didRegisterPluginAllocationInfo {self:%p, _uniqueID:%@, identifier:%@}
didUnregisterPluginAllocationInfo for session: %@, sessionInfo: %@
Ignoring didUnregisterPluginAllocationInfo {self:%p, _uniqueID:%@, identifier:%@}
Ignoring group session didReceiveBlockedParticipantIDs, session doesn't match %@ vs. %@
Group session %@ code: %u, type: %u, isTruncated: %@, didReceiveBlockedParticipantIDs: %@
Ignoring group session didReceiveQueryBlockedParticipantIDs, session doesn't match %@ vs. %@
Group session %@ code: %u, isTruncated: %@, didReceiveQueryBlockedParticipantIDs: %@
Ignoring group session didRemoveParticipantIDs, session doesn't match %@ vs. %@
Group session %@ code: %u, isTruncated: %@, didRemoveParticipantIDs: %@
Ignoring group session didReceiveKeyMaterial {self:%p, _uniqueID:%@, identifier:%@}
Can't store key material for session %@
Group session %@ didReceiveKeyMaterial SKM: %@
shouldInvalidateKeyMaterialByKeyIndexes for session %@, expiredKeyIndexes: %@
Ignoring group session shouldInvalidateKeyMaterialByKeyIndexes, session doesn't match %@ vs. %@
Ignoring group session participantUpdated, session doesn't match %@ vs. %@
participantUpdatedForSession %@
hasOutdatedSKI %@
didCreateParticipantIDAlias %llu salt %@ participantID %llu
didReceiveParticipantID %llu salt %@ participantIDAlias %llu
xpc object: [%@] context: [%@]
Ignoring socket, session doesn't match %@ vs. %@
Received XPC Response Error: %@
Request type %d failed with error code %d, make sure to set the participant info.
No conference server support, lost connection to server!
Request type %d succeeded
REPLY_TYPE_JOIN_REPLY
cfs_client left group session
Number of clients broadcasted: %u
REPLY_TYPE_JOIN_NOTIFICATION
Client %u left
REPLY_TYPE_BROADCAST_NOTIFICATION
Unknown reply type: %d
process_cfs_client_blob_set: client count: %u
process_cfs_client_blob: clientid: %llu, datasz: %u
Fetching groups from groupIDs {groupIDs.count: %ld}
Failed to fetch groups {error: %{public}@, groupIDs: %{private}@}
Fetched groups with success {groups.count: %ld}
Fetch groupds {groups: %{private}@}
Fetching transport log messages
Fetched messages from transport log
Account identity for task handler - failed to get content - fail {error: %{public}@}
Registration identities updated - clearing client cache
Group Context Created %@
Faied to get address in FixedQuickRelayServerAddress defaults
Decoded relay-server-address %@:%u
Decoded base64 relay-session-id %@
Decoded base64 relay-session-token %@
Decoded base64 relay-session-key %@
Using preallocated tokens from user defaults
Missing a defaults for hardcoded QR session info
_IDSConnection - initing {self: %p, account.serviceName: %@}
Account delegate has been cleaned up via weak references %p
setCapabilities %u  %@, result = %@
!setState guid=%@
sendMessage - Inspecting message {%@} payload for security issues
Downgrading priority of message with GUID %@ to Default from Urgent, The client %@ is not configured to send urgent messages
Invalid %@ value was given! {given: %@}
Client %@ is forcing QR for Cloud Message with GUID %@
QueueOneIdentifier not a string! [%@]
callstack %@
OUTGOING-CLIENT_REQUEST:%@ SERVICE:%@
Client request to send %@ on service: %{public}@   guid: %{public}@   to destinations: %@   options: %@    size: %d] (%lu pending)
5 {curProtocol: %hhu, prevProtocol: %hhu, prevBundleID: %@, curUUID: %{public,uuid_t}.16P, curPktLen: %u, logSeqn: %hhu}
sendPayload - could not find account uniqueID! self: %@ account: %@
%@ unable to plist-serialize dictionary %@ !!
Client request to send %{public}@ message (dictionary) service: %{public}@  to destinations: %@   options: %@]
sendPayload - could not plist serialize dictionary.
sendInvitation - preparing to send invitation : %@
sendInvitation - invitation payload for id {%@}: %@
sendInvitation - could not find account uniqueID! self: %@ account: %@
sendInvitationUpdate - preparing to send invitation : %@
sendInvitationUpdate - invitation payload for id {%@}: %@
sendInvitationUpdate - could not find account uniqueID! self: %@ account: %@
%@ asked to send server message %@ with command %@ - invalid value!
incomingAppLevelAckFromDirectConnection: %@ guid %@
incomingAckFromDirectConnection: %@ guid %@
incomingDataFromDirectConnection: %@ guid %@
incomingMessageFromDirectConnection: %@
incomingProtobufFromDirectConnection: %@
incomingGUIDAckFromDirectConnection: %@/%@
%@ not connecting to identityservicesd - no serviceName for account %@
Failed to connect to identityservicesd; %@ %@
%@ resending %@ alternate %@ due to daemon disconnection.
OUTGOING-UPDATE:%@ CODE:%ld LASTCALL:%@
%@ outgoing message guid response: %{public}@  callbackID: %@  response code: %ld   error: %{public}@  WiProx error: Error Domain=%{public}@ Code=%{public}@ %{public}@  lastCall: %@
%@ outgoing message guid response: %{public}@  callbackID: %@  response code: %ld   error: %{public}@   lastCall: %@
Server Timestamp for UpdatedWithResponseCode?%@
IDS sending success is NO though error is unset
  => <%@:%p> finished handling message guid: %@  (connection:messageIdentifier:alternateCallbackID:updatedWithResponseCode:error:lastCall:)
  => <%@:%p> finished handling message guid: %@  (connection:identifier:didSendWithSuccess:error:context:)
%@ identifier %@ callbackID %@ willSendToDests count %@ skipped count %@  map count %@
  => <%@:%p> finished handling message guid: %@  (connection:identifier:alternateCallbackID:willSendToDestinations:skippedDestinations:registrationPropertyToDestinations:)
%@ received app-level ack with identifier %@ context %@
Recieved did send opportunistic data {connection: %@, identifier: %@, accountID: %@, toIDs: %@}
_IDSConnection incoming topic for another connection {self: %p, type: %@, topic: %@, self.topic: %@}
_IDSConnection incoming handle for another connection {self: %p, type: %@, localURI: %@, self.aliases: %@, account.uuid: %@, self.pseudonyms: %@}
Ignoring %@, account is not configured: %@    isActive: %@  isRegistered: %@  isLocal: %@  serviceIdentifier: %@  registrationStatus: %ld  registrationCert: %@
Ignoring %@ for topic %@ because fromID %@ is a suppressed IDSDevice.
Connection recieved message
%@ received message: %@  topic %@  from: %@  to: %@  payload items: %d
INCOMING-CLIENT_MESSAGE:%@ SERVICE:%@
9 {curProtocol: %hhu, nextProtocol: %hhu, curUUID: %{public,uuid_t}.16P, curPktLen: %u, logSeqn: %hhu}
Warning! Message with guid %@ exceeds size limitations of MPKL_UUID_NEXT macro.
%@ received data: %@ topic %@  from: %@  to: %@
INCOMING-CLIENT_DATA:%@ SERVICE:%@
%@ received Engram Dict: %@ topic %@  from: %@  to: %@
Accessory data commands are only supported on AppleID accounts, This one is not for me.
%@ received Accessory data: %@ topic %@  from: %@  to: %@
%@ received Accessory Report Message: %@ topic %@  from: %@  to: %@
incomingInvitation - received incoming invitation message : %@
incomingInvitationUpdate - received incoming invitation message : %@
INCOMING-CLIENT_PROTOBUF:%@ SERVICE:%@
Client received protobuf from daemon %@ for topic: %@  messageID: %@  fromID: %@
 => Handed protobuf ID %@ to delegate: %@
Ack'ing message %@ to daemon that client got it
Received context: %@
Recipient topic: %@
Ignoring for: %@
Client received notification that cache was flushed { service: %@, remoteURI: %@, fromURI: %@, guid: %@ }
INCOMING-CLIENT_PENDING:%@ SERVICE:%@
Client received pending incoming message from daemon %@ for topic: %@  messageID: %@  fromID: %@
Received incoming invitation %@ forTopic %@ sessionID %@ toIdentifier %@ fromID %@ transportType %@
Received incoming group session participant update forTopic %@
Received incoming group session participant data update forTopic %@
Incoming Group Share
Incoming Registered Identities
checkTransportLog {reason: %ld}
Failed type check! {key: %@, class: %@}
Client has set export object %@
Invalidation Handled
Interruption Handled
%@ %s  (serviceDelegate: %@)
%@ %s  (delegateIdentifier: %@)
%@ %s
Unacknowledged IDSServiceDelegate objects: %@
%s (%s: %@)   (%s: %p)   (%s: %p)
%s (%s: %@)   (%s: %@)   (%s: %p)   (%s: %p)
%s (%s: %p)   (%s: %p)
Failed to get pairing records {error: %{public}@}
Failed to get pairing collaborator {error: %{public}@}
About to call local pairing completion block { block: %p, error: %@ }
Calling local pairing completion block %p
_IDSDeviceConnection was created without an IDSDevice %@ or service %@
<%p> The client passed the smaller timeout %@ than the default value. IDSDeviceConnection will use the default value.
<%p> Init connection socket %d with options: %@  device: %@  (%@)  (name %@) service %@ connectionUUID %@ timeout %@
<%p> _IDSDeviceConnection has timed out waiting for a socket.
<%p> Updating stream pair: %@:%@
<%p> Updated socket traffic class: %d
<%p> Closing socket: %d (name %@)
<%p> Closing socket: skipped, a new connection for this %@
<%p> World, id[%@] !=? id[%@]
<%p> xpc object: [%@] context: [%@]
Received XPC Response/Socket: %d    Error: %@
Received XPC Response/Socket: %d
<%p> Opened socket: %d (Success: %@ ) %@ (%@)
Open socket request already timed out, closing %d.
Daemon died, closing socket: %d
IDSAccountController created with service %@ serviceToken %@
Adding listener with ID %@ topics %@
Daemon disconnected, we'll need to reload accounts for service: %@
Updating delegates of account changes
Re-loading cached accounts for service: %@ with dictionaries %@
Account loaded was of unknown account type %d, ignoring...
Old account set %@
New account set %@
New enabled accounts set %@
Requesting setup of account: %@   service: %@  transaction: %@  accountConfig: %@
We have a real account registered, hiding local account
We don't have a real account registered, adding and enabling local account
Client request to enable account ID: %@
Client request to disable account ID: %@
Account added was of unknown account type %d, bailing...
**** Account added has no uniqueID **** %@
Received account removed %@ for topic %@
Did not find an existing account to remove with unique ID %@
**** Account removed has no uniqueID **** %@
Received account updated %@ for topic %@
Did not find an existing account to update with unique ID %@, creating one
Account updated was of unknown account type %d, ignoring...
**** Account updated has no uniqueID **** %@
Received accounts changed %@ for topic %@  service: %@  (Cached: %@)
No uniqueID for account %@, ignoring...
Did not find an existing account to update with unique ID %@
Account changed was of unknown account type %d, ignoring...
Could not create IDSAccount with info %@
Original accounts %@
Accounts Modified %@
Removing accounts %@
Setup complete - no transaction ID, bailing...
SetupCompleteForAccount %@ transactionID %@ setupError %@
Setup handler block %p for transactionID %@
Account setup completed but we don't have an account, ignoring...
Setup completed for account %@ isActive %@ setupError %@
Account enabled - no unique ID, bailing...
Account enabled - no service, bailing...
Received account enabled %@ on service %@
Adding enabled account %@
Did not find an existing account to enable with unique ID %@
Account disabled - no unique ID, bailing...
Account disabled - no service, bailing...
Received account disabled %@ on service %@
Removing enabled account %@
Did not find an existing account to disable with unique ID %@
Hard deregistering, %@
Triggering final deregister, %@
Clearing IDS state
Alloc'ing IDSXPCDaemonController {pointer: %p}
IDSXPCDaemonController connection interrupted -- Dropping collaborators {collaborators: %{public}@, pointer: %p}
Dealloc'ing IDSXPCDaemonController {pointer: %p}
Activating daemon controller
Get collaborator {identifier: %{public}@, timeout: %f}
Creating collaborator promise {identifier: %{public}@}
Got collaborator {identifier: %{public}@, proxy: %{public}@}
Failed to get collaborator {identifier: %{public}@, error: %{public}@}
Get sync collaborator
Failed to get data for publicIdentity {dataProtectionClass: %{public}@, error: %{public}@}
Failed to get data for fullIdentity {dataProtectionClass: %{public}@, error: %{public}@}
Creating new IDSAccount %p with config %@ uniqueID %@ serviceName %@
Created new IDSAccount %p with loginID %@ uniqueID %@ serviceName %@
Framework register account
Client requesting to register account: %@
Framework unregister account
Client requesting to unregister account: %@
Framework force remove account
Client requesting to force remove account: %@
Framework reregister account
Client requesting to reregister (with reidentify %@) account: %@
Framework deactivate account
Client requesting to deactivate and purge identify account: %@
iCloud sign in hack with userName %@ password %@
iCloud sign out hack
Kicking get dependent
Client request for IDSCopyLocalDeviceUniqueID: %@
createDataBlobFrom: encoded %@
extractDictionaryFromDataBlobFrom: decoded %@
requestNWConnectionWithDataBlob: decoded participantIDAlias %llu from %@
Tried to create an account with empty service name, bailing...
Tried to create an account with unknown account type %d, bailing...
No account type specified, setting to Apple ID
New account info %@ for %@
Account setting regionID {regionID: %@, account: %@}
Account setting regionBasePhoneNumber {regionBasePhoneNumber: %@, account: %@}
Adding IDSDevice %@
Devices updated %d
Devices before %@
Devices after %@
Local account, ignoring request for keychain registration
Registered URIs for %@ with service type %@ account type %d
Registration cert for %@ with service type %@ account type %d
Push token for %@ with service type %@ account type %d
%@ not connecting to identityservicesd - no serviceName for config %@
Account %@ received registration status changed: %@
Account %@ received aliases changed: %@
Account received %@ vetted aliases changed
Account received %@ profile changed: %@
Account %@ received login changed: %@
Account received %@ displayName changed: %@
Account %@ received pseudonyms changed: %@
Account received %@ dependentDevicesUpdated %@
Account received %@ dependentDevicesUpdatedUponReconnect (devices count: %@)
Account received %@ localDeviceAdded %@
Devices updated %@
Account received %@ localDeviceRemoved %@
Account %@ received request to refresh registration
Cannot force remove an account that is not a temporary phone account: %@
Call made to deprecated IDSService API with service domain %{public}@
Called unimplemented function, please remove calls to %s
iCloud sign in with userName %@ authToken %@ password %@ accountInfo %@ status %@ and handles %@
iCloud sign out
iCloud update for userName %@ accountInfo %@
iCloud modify for userName %@
iTunes sign in with userName %@ authToken %@ password %@ accountInfo %@ status %@ and handles %@
iTunes sign out
IDS update user { oldUserName: %@, newUserName: %@ }
Instantiating %{public}@ from daemon -- returning
_IDSService - serviceWithIdentifier finished {serviceObject: %p}
Framework init with service, commands
_IDSService - initing {self: %p, service: %@, commands: %@, manualAck: %@}
No definition found for service: %@. IDSService cannot be created!
Framework init with service commands
_IDSService - deallocing {self: %p, serviceName: %@}
_IDSService - added delegate {self: %p, serviceName %@, listenerCaps %@, delegates: %lu, wantsPseudonymUpdates: %@}
_IDSService - removed delegate {self: %p, serviceName %@, delegate: %p}
Framework Daemon Connected
%@: OTRTestCallback: token is %@, setupTime is %.6f, error==nil is %d
%@ Switched active paired device for service name %@. deviceUniqueID: %@
Ignoring didSwitch callback for %@, mine is %@
%@ Update cache with active device
%@ Pre didSwitch call back block
%@ Notifying delegate %p of active device switch to %@ (delegateIdentifier %@)
%@ Pre devicesChanged call back block
%@ Notifying delegate %p of devices changing (devices %@)
%@ Pre linkedDevicesChanged call back block
%@ Notifying delegate %p of linked devices changing (devices %@)
%@ Group notify
Stopped suspending traffic to the daemon.
Service received %@ tinkerDeviceAdded (linkedDevices count: %@)
Linked devices updated %@
Service received %@ tinkerDeviceRemoved (linkedDevices count: %@)
Service received %@ tinkerDeviceUpdated (linkedDevices count: %@)
Service received %@ linkedDevicesUpdated (linkedDevices count: %@)
Connection map:
   %@ => %@
Tearing down connection for %@
activeAccountsChanged, oldSet: %@  newSet: %@
Calling active accounts changed %@ with delegate %p
*** dropping devicesChanged callback!
incomingOpportunisticData on connection guid %@ using engram %@ delegateCount %ld
Calling out to IDSService delegate %p for incomingOpportunisticData if it responds.
Done for IDSService delegate %p for incomingOpportunisticData - doesRespondToSelector? %@
incomingData on connection guid %@ using engram %@ delegateCount %ld
incomingData of size %lu on connection %@ account %@ from ID %@ sender-side-identifier %@
Calling out to IDSService delegate %p for incomingData if it responds.
Done for IDSService delegate %p for incomingData - doesRespondToSelector? %@
Context %@ WantsAppAck %@ AppAckGuid %@ storageGuid %@
Sending app-level ack dispatch called for message %@
incomingGroupData on connection guid %@ using engram %@ delegateCount %ld
incomingGroupData of size %lu on connection %@ account %@ from ID %@ sender-side-identifier %@
Error converting Group Data to ENGroup %@
No error returned however unable to create group from data (timeout?) %@, Original Data: %@
Received sentAhead group {groupID: %{public}@}
Group Share Persisted %@
Calling out to IDSService delegate %p for incomingAccessoryData if it responds.
Done for IDSService delegate %p for incomingAccessoryData - doesRespondToSelector? %@
Calling out to IDSService delegate %p for incomingAccessoryReportMessage if it responds.
Done for IDSService delegate %p for incomingAccessoryReportMessage - doesRespondToSelector? %@
Invalid state {%ld} received in incomingInvitation. Dropping invitation %@
incomingInvitation: created invitation object from incoming message : {%@}
Calling out to IDSService delegate %p for incomingInvitation if it responds.
Done for IDSService delegate %p for incomingInvitation - doesRespondToSelector? %@
Invalid state {%ld} received in incomingInvitationUpdate. Dropping invitation %@
incomingInvitationUpdate: created invitation object from incoming message : {%@}
Calling out to IDSService delegate %p for incomingInvitationUpdate if it responds.
Done for IDSService delegate %p for incomingInvitationUpdate - doesRespondToSelector? %@
Service recieved message
incomingMessage on connection %@ account %@ from ID %@  from device: %@  sender-side-identifier: %@
incomingMessage on connection guid %@ using engram %@ delegateCount %ld
Consumed sandbox extension [%@] handle [%lld] for resource [%@]
Failed to consume sandbox extension! {errno: %d}
No sandbox extension for received resource [%@]
Given resource URL appears unacceptable! [%@]
Remove file success: %@, error: %@ (accessed %d)
Calling out to IDSService delegate %p for incomingResource if it responds.
Done for IDSService delegate %p for incomingResource - doesRespondToSelector? %@
Calling out to IDSService delegate %p for incomingResource with metadata if it responds.
Done for IDSService delegate %p for incomingResource with metadata - doesRespondToSelector? %@
Calling out to IDSService delegate %p for incomingMessage if it responds.
Done for IDSService delegate %p for incomingMessage - doesRespondToSelector? %@
Calling out to IDSService delegate %p for incomingMessage with context if it responds.
Done for IDSService delegate %p for incomingMessage with context - doesRespondToSelector? %@
Service finished calling out
Incoming protobuf %@, routing to selector/delegate. sender-side-identifier %@
Incoming protobuf on connection guid %@ using engram %@ delegateCount %ld
Found selector %@ fullSelector %@ for key 0x%x
 => Delgate %p responds to: %@, passing along protobuf: %p
   * Done handling
No selector for key 0x%x = type(%u) isResponse(%@), notifying delegates
 => Delgate %p responds unhandled protobuf passing along protobuf: %p
No delegate was registered that could handle protobuf %@
incomingTopLevelMessage on connection guid %@ using engram %@ delegateCount %ld
No delegates for incoming madrid message. Sending 115 for guid %@
Calling out to IDSService delegate %p for incomingTopLevelMessage if it responds.
Done for IDSService delegate %p for incomingTopLevelMessage - doesRespondToSelector? %@ guid: %@
Calling out to IDSService delegate %p for incomingPendingMessage if it responds.
Done for IDSService delegate %p for incomingPendingMessage - doesRespondToSelector? %@
DecryptedEngramData %@ %@
  {decryptedData.length: %{public}@}
Decrypting Engram Message, Org Payload %@
Failed decrypting Engram {error: %@, serviceName: %@}
isActiveChanged on connection %@ isActive %@
devicesChanged on connection %@ account %@ all devices %@ num delegates: %lu
connectedDevicesChanged on connection %@ account %@ devices %@
%@ got messageIdentifier %@ callbackID %@ updatedWithResponseCode: %ld error %@ lastCall %@
%@ got messageIdentifier %@ callbackID %@ updatedWithResponseCode: %ld error %@ lastCall %@ sentBytes %@ totalBytes %@
%@ got identifier %@ callbackID %@ willSendToDestinations %@ skippedDests %@ regPropsToDests (count) %@
%@ got identifier %@ didSendWithSuccess %@  error %@ num delegates: %lu
%@ got identifier %@ hasBeenDeliveredWithContext %@
%@ didFlushCacheForRemoteURI %@ fromURI %@ guid %@
Sending up options to client: %@
Recieved did send opportunistic data {service: %@, identifier: %@, toIDs: %@}
Filtering account %@ with aliases %@  isActive? %@  canSend? %@
Linked devices before %@
Linked devices after %@
Adding linked IDSDevice %@
Linked devices updated with count %d
No URI found on any account -- returning nil {accounts: %@}
No account matched URI -- returning nil {URI: %@, accounts: %@}
provisionPseudonymForURI called {URI: %@, properties: %@, requestUUID: %@, self: %@}
No account matched pseudonym -- returning nil {pseudonym: %@, accounts: %@}
renewPseudonym called {pseudonym: %@, expiry: %f, requestUUID: %@, self: %@}
revokePseudonym called {pseudonym: %@, requestUUID: %@, self: %@}
finishedProvisioningPseudonym called but no block! {pseudonym: %@, success:%@, requestUUID: %@, error:%@, self: %@}
finishedProvisioningPseudonym called {pseudonym: %@, success:%@, requestUUID: %@, error:%@, self: %@}
finishedRenewingPseudonym called but no block! {pseudonym: %@, success:%@, requestUUID: %@, error:%@, self: %@}
finishedRenewingPseudonym called {pseudonym: %@, success:%@, requestUUID: %@, error:%@, self: %@}
finishedRevokingPseudonymWithSuccess called but no block {success:%@, requestUUID: %@, error:%@, self: %@}
finishedRevokingPseudonymWithSuccess called {success:%@, requestUUID: %@, error:%@, self: %@}
No account matched to report with -- returning nil {fromURI: %@, accounts: %@}
reportApprovalOfURI called {tempURI: %@, fromURI: %@, requestID: %@, self: %@}
finishedReportingRequestUUID called but no block {requestUUID: %@, error:%@, self: %@}
finishedReportingRequestUUID called {requestUUID: %@, error:%@, self: %@}
Ignoring sub-services update, couldn't find active device
Ignoring sub-services update, couldn't find uniqueID for device %@
Triggering Internal resend of Sub Services to daemon
Framework Set Protobuf Action
Framework Get Protobuf Action
Attempting To Send message from account %@ to destinations %@
Sending message on a client that is not sandboxed!
Attempting to send on a non local account, this message is allowed to progress
Attempting to send to more than 1 destination, this message will fail in the daemon if necessary
Attempting to send to a remote destination from a local account, this is permited if proxy is permitted and will fail in the daemon if not
Client request to send opportunistic data {identifier: %@, options: %@, dataLength: %llu}
Client request to cancel opportunistic data {identifier: %@, serviceName: %@}
Framework Send Protobuf
!setState priority=%@
!setState destination=%@
Framework Send Data
!setState service=%@
Framework Send Accessory Data
!setState accessoryID=%@
Sending AccessoryData Now
sendAccessoryData - Could not find connection for account %@
sendAccessoryData - All accounts %@
sendInvitation - Service is not enabled for Invitations
sendInvitation - Could not find connection for account %@
sendInvitation - All accounts %@
sendInvitationUpdate - Service is not enabled for Invitations
sendInvitationUpdate - Could not find connection for account %@
sendInvitationUpdate - All accounts %@
sendServerMessage - Could not find connection for account %@
sendServerMessage - All accounts %@
FromID %@, strippedURI %@, token %@
Comparing device token %@ to token %@
Did not find a device matching the token %@
setPreferInfraWiFi: %@
setLinkPreferences: %{public}@
Received invalid link preferences
forceOTRNegotiation
Framework Send Resource At URL
!setState ResourceURL=%@
!setState serviceName=%@
sendResourceAtURL - resourceURL not a file %@
Attempted to link or copy file %@ destination %@ (%s to %@)
sendResourceAtURL - unable to link or copy file %@
sendResourceAtURL - resourceURL %@  isFileURL %@  localDelivery %@
Issued sandbox extension [%s] for file [%@]
Failed to issue sandbox extension for linked/copied file [%@]
Issued sandbox extension [%s] for original file [%@]
Failed to issue sandbox extension for original file [%@]
Sending Ahead group {groupID: %{public}@}
sendMessage - Could not find connection for account %@
sendMessage - All accounts %@
sendMessage - Unable to send message to this destination from this account %@
Call made to manually ack a message, however this service does not support manually acking of messages
sendCertifiedDeliveryReceipt passing context to daemon { context: %@ }
sendCertifiedDeliveryReceipt context passed to incorrect service { context.service: %@, service: %@ }
sendCertifiedDeliveryReceipt given nil certified delivery context
Creating datagram channel with destination %@ => %@
Creating datagram channel with socket %d => %@
Failed to send group ahead {group: %@, error: %@}
Did send group ahead {group: %@ identifier: %@}
Enforcing sandbox policy...
%@ (initializing service %@) is not sandboxed but is in the sandbox allowlist.  Not enforcing sandbox policy.
ABORT: %@ (initializing service %@) IS NOT SANDBOXED
FAULTING: %@ (initializing service %@) IS NOT SANDBOXED.  Please sandbox your process.
%@ (initializing service %@) is sandboxed
sendResourceAtURL - can't allocate %ld bytes for new file path
sendResourceAtURL - failed to clone file %@ => %@ (error %d). Will try hard link.
sendResourceAtURL - failed to link and failed to copy file %@ => %@ (error %@)
Clearing out _connection, we're disconnecting
Forcing a disconnect, terminating connection
No service %@, bailing...
No block %p, bailing...
Cache request for service %@
transactionID map after ADD %@
Sending cache request for service %@ transactionID %@
transactionID map after REMOVE %@
Could not create message for cache query
No listenerID %@, bailing...
Cached ID status request (destinations: %@)  (service: %@)  (listenerID: %@)  (transactionID: %@)
No destinations, not issuing query...
Received cached id status {destinations: %@, service: %@, error: %@}
ID status renewal request (destinations: %@)  (service: %@)  (listenerID: %@)  (transactionID: %@)
Received id status {destinations: %@, service: %@, error: %@}
ID remote device request (destination: %@)  (service: %@)  (listenerID: %@)  (transactionID: %@)
No message to send %@, ignoring...
Query service disconnected
Error requesting client: %@
No connection to send message on
%s called with a nil completion -- returning
Requesting selected subscriptions with completion
%s called with nil subscription -- returning
Selecting subscription with completion {subscription: %@}
Unselecting subscription with completion {subscription: %@}
Setting selected subscriptions with completion {subscriptions: %@}
%s called with nil alias -- returning
Removing temporary phone alias with completion {alias: %@}
Error fetching registration collaborator {error: %@}
Disabling temporary phone alias with completion {alias: %@}
Enabling temporary phone alias with completion {alias: %@}
Requesting unselected temporary phone aliases with completion
Requesting selected subscriptions synchronously
Selecting subscription synchronously
Unselecting subscription synchronously
Setting selected subscriptions synchronously
Removing temporary phone alias synchronously {alias: %@}
Enabling temporary phone alias synchronously {alias: %@}
Disabling temporary phone alias synchronously {alias: %@}
Requesting unselected temporary aliases synchronously
Error fetching sync registration collaborator {err: %@}
Alloc'ing IDSXPCConnection {remoteObject: %{public}@, pointer: %p}
IDSXPCConnection interrupted
IDSXPCConnection invalidated
Dealloc'ing IDSXPCConnection {remoteObject: %{public}@, pointer: %p}
transaction finished -- calling invoke {selector: %{public}@, uuid: %{public}@}
TransactionUUID missing from pendingTransactions --  Skipping invoke {selector: %{public}@, uuid: %{public}@}
Dropping all pending transactions {pendingTransaction: %{public}@, remoteObject: %{public}@, pointer: %p}
Alloc'ing IDSXPCConnectionTimeoutProxy {target: %{public}@, connection: %{public}@, pointer: %p}
Dealloc'ing IDSXPCConnectionTimeoutProxy {target: %{public}@, connection: %{public}@, pointer: %p}
xpc message timed out -- calling error {selector: %{public}@, uuid: %{public}@, timeout: %{public}@}
Clearing transaction timeout timer {selector: %{public}@, uuid: %{public}@}
Starting timeout for xpc message {selector: %{public}@, uuid: %{public}@, timeout: %{public}@}
Received device state note {uniqueID: %@, weakSelf: %p}
Device note -- old: {isNearby: %d, isConnected: %d, isCloudConnected: %d} new: {isNearby: %d, isConnected: %d, isCloudConnected: %d}
Client request to set uuid %@ on device %@
  => Device doesn't support it, ignoring
Nearby triggering nearbyDevicesChanged on account %p %@
Connected triggering connectedDevicesChanged on account %p %@
Cloud connected triggering cloudConnectedDevicesChanged on service %p %@
State change triggering linkedDevicesChanged on service %p %@ for device: %@
Purging idStatusCache
Sending ID status update (%d) for service %@ destination %@
No destinations, bailing...
No service, bailing...
No listenerID, bailing...
No query complete block, bailing...
Received results for service: %@  updates %@
No completion block, bailing...
No queue, bailing...
No listener ID, bailing...
Destination "%@" not found in id query results %@. Verify destination is a properly formed IDS destination (and not just the handle string).
Received results for service: %@  updates {%@}
_warmupQueryCacheForService:  (service: %@)
No service name, bailing...
Received cache for service %@, %d count
_flushQueryCacheForService:  (service: %@)
addDelegate:forService:listenerID:queue:  (delegate: %p)   (service: %@)   (listenerID: %@)   (queue: %p)
Invalid add delegate params -- bailing...
Listeners after ADD %@
removeDelegate:forService:listenerID:  (delegate: %p)   (service: %@)   (listenerID: %@)
Invalid remove delegate params -- bailing...
Listeners after REMOVE %@
<%p> Creating with socket %d
<%p> Creating with destination %@
-dealloc called for %@
<%@> sent the first data packet (size: %lu)
<%@> TX %f bytes/s %f packets/s
<%@> received the first data packet (size: %lu)
<%@> RX %f bytes/s %f packets/s
-underlyingFileDescriptor called for %@
<%@> first read, will send dummy link information
<%@> dummy link information
<%@>  removeIDSDataChannelLinkContext:%u, linkContexts %@
<%@> Can't find the linkContext of linkID %u, linkContexts %@
<%@> sent IDSDataChannelEventDisconnected, linkID %u, linkContexts %@, reason: %d
invalid link attribute size (%u), too small.
Got relay server provider:%d, session token:%dB, session key:%dB.
<%@> got connectedLinkID %d (link family:%u) (mtu:%u) (l-conn:%u) (l-RAT:%u) (l-flags:0x%x) (l-dataSoMask: %u) (r-conn:%u) (r-RAT:%u) (r-flags:0x%x) (r-datasoMask:%u) isVirtualRelayLink: %@, (Current LinkContexts %@
<%@> sent IDSDataChannelEventConnected, current link contexts %@
can't find link %d for the default
<%@> sendMediaEncryptionEventInfo MKM:%{private}@, MKS:%{private}@, MKI:%{private}@ locally generated:%{private}@ encryptionSequenceNumber:%{private}@
<%@> there is no report yet for the first packet of this MKI %{private}@.
<%@> sendMediaMembershipChangedInfo membershipChanged:%u
processMetadataForDatagram datagramSize(%zd) <= kIDSClientChannelMetadataLengthSize - returning
processMetadataForDatagram %d + metadataSize(%zd) > datagramSize(%zd) - returning
got PacketLinkID %d
kClientChannelMetadataType_PacketLinkID should be 1 byte, not %u bytes, field: %u
got trafficClass %u
kClientChannelMetadataType_TrafficClassKey should be %d bytes, not %u bytes, field: %u
got DSCP %u
kClientChannelMetadataType_DSCPKey should be %d bytes, not %u bytes, field: %u
got arrivalTime %f
kClientChannelMetadataType_PacketArrivalTime should be %d bytes, not %u bytes, field: %u
got invalid streamIDCount %d
got streamIDCount %d
got streamID bytes:%@
kClientChannelMetadataType_StreamIDsKey: size mismatch (%u != %u), ignore.
got Channel Priority %u
kClientChannelMetadataType_PriorityKey should be 1 byte, not %u bytes, field: %u
got CT(packet counting) option
kClientChannelMetadataType_CountPacketKey  should be 1 byte, not %u bytes, field: %u
kClientChannelMetadataType_GenerationCounterLSBKey should be 1 byte, not %u bytes, field: %u
got probeGroupID %u
kClientChannelMetadataType_ProbeGroupIDKey should be 2 bytes, not %u bytes, field: %u
got Participant ID %llu
error: we received Participant ID %llu
kClientChannelMetadataType_ParticipantID should be 8 byte, not %u bytes, field: %u
got disconnectedLinkID %d, linkUUID %@, reason: %d
kClientChannelMetadataType_LinkDisconnected should be %d byte, not %u bytes, field: %u
got defaultLinkID %d
kClientChannelMetadataType_DefaultLinkID should be 1 byte, not %u bytes, field: %u
got ratType %u
kClientChannelMetadataType_RATChanged requires the cellular link. something is wrong...
kClientChannelMetadataType_RATChanged should be 1 bytes, not %u bytes, field: %u
got preConnectionDataSize %u
kClientChannelMetadataType_PreConnectionDataSizeKey should be 1 bytes, not %u bytes, field: %u
kClientChannelMetadataType_PreConnectionDataKey got wrong size (%u > %u)
got preConnectionData, called IDSDataChannelEventPreConnectionData event
kClientChannelMetadataType_PreConnectionDataKey should know its size
<%@> sent IDSDataChannelEventRSSI (%u, %u, %u)
kClientChannelMetadataType_QueryRSSI should be %u, not %u bytes, field: %u
kClientChannelMetadataType_GetLinkStatusKey - invalid fieldBytesSize: 0
kClientChannelMetadataType_GetLinkStatusKey - invalid totalLinkIDs: 0
kClientChannelMetadataType_GetLinkStatusKey - no valid currentLinkIDCount
kClientChannelMetadataType_GetLinkStatusKey - no valid linkID
kClientChannelMetadataType_GetLinkStatusKey: linkID: %d, no valid timestamp
kClientChannelMetadataType_GetLinkStatusKey: linkID: %d, no valid reorderedPackets
kClientChannelMetadataType_GetLinkStatusKey: linkID: %d, no valid probingRequests
kClientChannelMetadataType_GetLinkStatusKey: linkID: %d, no valid probingResponses
kClientChannelMetadataType_GetLinkStatusKey: linkID: %d, no valid offsetAndRTTCount
kClientChannelMetadataType_GetLinkStatusKey: linkID: %d, no valid requestOffset, i: %d
kClientChannelMetadataType_GetLinkStatusKey: linkID: %d, no valid rtt, i: %d
kClientChannelMetadataType_ProbingRequestOffsetKey - total size: %lu, all keys: %@, output: %@
kClientChannelMetadataType_MaxBitrateKey should be %u, not %u bytes, field: %u
got MTU %u
kClientChannelMetadataType_CellularMTUChanged requires the cellular link. something is wrong...
kClientChannelMetadataType_CellularMTUChanged should be %u bytes, not %u bytes, field: %u
kClientChannelMetadataType_InfoReportKey report %@
kClientChannelMetadataType_InfoReportKey should be bigger than %u bytes.
kClientChannelMetadataType_EncryptionMKMKey got MKM %@ size %u
kClientChannelMetadataType_EncryptionMKSKey got MKS %@ size %u
kClientChannelMetadataType_EncryptionMKIKey got MKI %@ size %u
kClientChannelMetadataType_EncryptionLocallyGeneratedInfoKey should be 1 byte, not %u
kClientChannelMetadataType_EncryptionMembershipChangedKey should be 1 byte, not %u
kClientChannelMetadataType_SessionReinitiated - IDSDSession is reinitiated
kClientChannelMetadataType_SessionReinitiated should be 1 byte, not %d
kClientChannelMetadataType_SessionInfoKey - Couldn't get NSData from fieldBytes
kClientChannelMetadataType_SessionInfoKey - Couldn't decode NSData %@ (error: %@)
kClientChannelMetadataType_SessionInfoKey - %@
kClientChannelMetadataType_SessionInfoResponseErrorKey errorCode %u
kClientChannelMetadataType_SessionInfoResponseErrorKey should be %u byte, not %u
kClientChannelMetadataType_StatsKey - Couldn't get NSData from fieldBytes
kClientChannelMetadataType_StatsKey - Couldn't decode NSData %@
kClientChannelMetadataType_StatsKey - %@
kClientChannelMetadataType_StatsID should be %u byte, not %u
kClientChannelMetadataType_StatsServerTimeStamp should be %u byte, not %u
kClientChannelMetadataType_StatsServerPacketInterval should be %u byte, not %u
kClientChannelMetadataType_StatsTotalServerPacketReceived should be %u byte, not %u
kClientChannelMetadataType_StatsTotalServerPacketSent should be %u byte, not %u
kClientChannelMetadataType_StatsUplinkBandwidth should be %u byte, not %u
kClientChannelMetadataType_DebugDataTransferTypeKey should be 1 byte, not %u
kClientChannelMetadataType_OptOutPriorityFilter should be 1 byte, not %u bytes, field: %u
kClientChannelMetadataType_TransitionPacketFlag should be 1 byte, not %u bytes, field: %u
kClientChannelMetadataType_nwPathWiFiFlagsChanged got wifiLocalAttributes: %u
send event to client about kClientChannelMetadataType_nwPathWiFiFlagsChanged, wifiLocalAttributes: %u
kClientChannelMetadataType_nwPathWiFiFlagsChanged should be %u bytes, not %u bytes, field: %u
kClientChannelMetadataType_nwPathCellularFlagsChanged got cellularLocalAttributes: %u
send event to client about kClientChannelMetadataType_nwPathCellularFlagsChanged, cellularLocalAttributes: %u
kClientChannelMetadataType_nwPathCellularFlagsChanged should be %u bytes, not %u bytes, field: %u
kClientChannelMetadataType_DebugDataTransferKey got data size %u
kClientChannelMetadataType_SoMaskChanged got SoMask: %u
send event to client about kClientChannelMetadataType_SoMaskChanged, SoMask: %u
kClientChannelMetadataType_SoMaskChanged should be %u bytes, not %u bytes, field: %u
kClientChannelMetadataType_NeedsHBHEncryption should be %u byte, not %u
kClientChannelMetadataType_EncryptionSequenceNumber got %llu (*Client <- IDSD)
kClientChannelMetadataType_EncryptionSequenceNumber should be %u bytes, not %u bytes, field: %u
Unknown metadata type: %u
readDatagramWithCompletionHandler: _internal->_connection: Only has statsID: %x
<%@> read details: datagramSize %ld metadataSize %ld dataOffset %ld [%02x%02x%02x%02x%02x%02x%02x%02x%02x%02x ...]
<%@> read details: datagramSize %ld metadataSize %ld dataOffset %ld
<%@> read sanity check failed: datagramSize %ld metadataSize %ld dataOffset %ld
<%@> read failed %d due to datagram_count 0 - calling event handler %p
<%@> read nonfatal failure errno %d
<%@> read failed errno %d calling event handler %p
<%@> read returned 0 bytes calling event handler %p
readDatagramsWithCompletionHandler: _internal->_connection: Only has statsID: %x
-invalidate called for %@
-start called for %@
<%@> nw_connection_create_with_connected_socket failed. socketDescriptor %d might be invalid.
<%@> got connected and calls event handler %p
<%@> does not have readHandler!
<%@> got error %@ and calls event handler %p
<%@> got disconnected with error %@ and calls event handler %p
<%@> write details: datagramSize %ld metadataSize %ld
<%@> write error_number %d calling completion handler %p dataCreateTime %0.6lf writeTime %0.6lf [%013.6lf]
<%@> write failed error_number %d calling completion handler %p
<%@> attempt to write with no connection, calling completion handler %p
<%@> write failed to send all bytes %d < %d
<%@> write returned 0 - connection terminated
<%@> write nonfatal failure errno %d
<%@> write failed errno %d
-setEventHandler called for %@
-setReadHandler called for %@
-setReadHandlerWithOptions called for %@
<%@> write details: metadataSize %ld
<%@> write error_number %d calling setChannelPreferences
<%@> write failed error_number %d calling setChannelPreferences
<%@> write done for setChannelPreferences
<%@> setChannelPreferences dictionary: %@
<%@> IDSDataChannelPreferencePreConnectionDataKey - %@, _waitForPreConnectionDataForConnected? %@
<%@> client channel connection is not ready. Wait to send preConnectionData
<%@> IDSDataChannelPreferenceDefaultLinkSelectionKey - linkID:%d
<%@> IDSDataChannelPreferenceBasebandRegistrationKey - linkID:%d, reg_key:%u registerOperation:%u
<%@> IDSDataChannelPreferenceBasebandQueueFlushKey - %@
<%@> IDSDataChannelPreferenceDiscardLinkIDsKey - %@
<%@> IDSDataChannelPreferenceUpdateQualityOfServiceKey - LinkID: %d, %@
<%@> IDSDataChannelPreferenceQueryInformationKey - queryType: %d
<%@> IDSDataChannelPreferenceSetMaxBitrateKey - maxBitrate: %u for LinkID: %d
<%@> IDSDataChannelPreferenceRemoteDeviceVersionKey - remoteDeviceVersion: %u
<%@> kClientChannelMetadataType_ProcessIDKey - %d
<%@> kClientChannelMetadataType_RemoteDeviceVersionKey remoteDeviceVersion: %u
<%@> kClientChannelMetadataType_BasebandQueueFlushPayloadSizeKey %u
<%@> kClientChannelMetadataType_DiscardLinkIDsKey the maximum of links is %d
<%@> kClientChannelMetadataType_PreConnectionDataSizeKey %u
<%@> kClientChannelMetadataType_PreConnectionDataKey %@
<%@> kClientChannelMetadataType_UpdateQoSIsGoodKey IsGood:%@ LinkID:%d
<%@> kClientChannelMetadataType_QueryRSSI
<%@> kClientChannelMetadataType_MaxBitrateKey maxBitrate:%u LinkID:%d
<%@> IDSDataChannelPreferenceNeedsEncryptionInfoKey - we'll request the encryption info
<%@> kClientChannelMetadataType_ForceUpdateEncryptionInfoKey - we'll update the encryption info.
<%@>: startActiveProbingWithOptions: invalid probing Data, return
<%@>: startActiveProbingWithOptions: serialized metadata size: %lu, greater than max allowed sent size, return
<%@>: startActiveProbingWithOptions: %@ size: %lu
<%@>: stopActiveProbingWithOptions: invalid probing Data, return
<%@>: stopActiveProbingWithOptions: serialized metadata size: %lu, greater than max allowed sent size, return
<%@>: stopActiveProbingWithOptions: %@ size: %lu
<%@>: flushLinkProbingStatusWithOptions: invalid probing options, return
<%@>: flushLinkProbingStatusWithOptions: serialized metadata size: %lu, greater than max allowed sent size, return
<%@>: flushLinkProbingStatusWithOptions: %@ size: %lu
<%@>: queryStatusWithOptions: invalid query options, return
<%@>: queryStatusWithOptions: serialized metadata size: %lu, greater than max allowed sent size, return
<%@>: queryStatusWithOptions: %@ size: %lu
<%@>: setUPlusOneMode: %@ isInitiator: %@
<%@>: startMKMRecoveryForParticipantIDs: %@
<%@>: startMKMRecoveryForParticipantIDs: invalid participantIDs size
<%@>: startMKMRecoveryForParticipantIDs: metadata size: %lu, greater than max allowed sent size, return
<%@>: startMKMRecoveryForParticipantIDs: %@, %@ size: %lu
%@: requestSessionInfoWithOptions: %{private}@ size: %lu
%@: reportFirstPacketForMKI: first packet arrival: %f for MKI: %{private}@
%@: reportFirstPacketForMKI: MKI %{private}@ has not arriaved yet. report later when it arrives.
%@: _reportFirstPacketForMKI: one of values is nil: MKIArrivalTime %@, firstPacketForMKIArrivalTime %@
%@: _reportFirstPacketForMKI: first packet arrival: %@, MKI arrival: %@
storing encryption sequence number: %llu (*Client -> IDSD)
Client setup service -- checked in {service: %@}
Client setup service -- failed check in! {service: %@}
Finalized check in -- finishing {service: %@}
Client received xpc-wake event -- storing {service: %@, description: %s}
Adding listener ID: %@   for service: %@
Removing listener ID: %@   for service: %@
Client ID status to refresh ID status for destinations %@  on service: %@   from listenerID: %@
Client %@ is attempting to send more than a reasonable amount of URI's in a query {count: %lu}
Client ID status to force refresh ID status for destinations %@  on service: %@   from listenerID: %@
Client ID status to refresh ID status for destination %@  on service: %@   from listenerID: %@
Client ID status for required ID status for destinations %@  on service: %@   from listenerID: %@
Client ID status for required ID status for destination %@  on service: %@   from listenerID: %@
Client requesting to warmup the query cache for service: %@
Client requesting to flush the query cache for service: %@
** BLOCKING Client ID status to refresh ID status for destination %@  on service: %@   from listenerID: %@
** BLOCKING Client ID status to refresh ID status for destinations %@  on service: %@   from listenerID: %@
  => Done: %f
** BLOCKING Client ID status cache request for destination %@  on service: %@ respectExpiry: %@   from listenerID: %@
** BLOCKING Client ID status cache request for destinations %@  on service: %@ respectExpiry: %@   from listenerID: %@
Client Remote Device Request for destinations %@  on service: %@   from listenerID: %@
** BLOCKING  Client Remote Device Request for destinations %@  on service: %@   from listenerID: %@
Client ID status request for destinations %@  on service: %@   from listenerID: %@
Client ID status request for destination %@  on service: %@   from listenerID: %@
Disconnected from daemon, notifying client of session %@
%@: Empty unique ID
%@: Empty account ID
%@: Empty destinations set
%@ - existing socket pair, ignoring request to create
Setting up socket pair to daemon
%@ - %@ %d (%s)
Sending allocation request with options %@
Sending Session Invitation with options %@
Sending Session Invitation with data (%lu bytes), declineOnError %@
Sending Session Invitation Cancel
Sending Session Invitation Cancel with data (%lu bytes)
Sending Session Invitation Cancel with Reason %u
Sending Session Invitation Accept
Sending Session Invitation Accept with data (%lu bytes)
Sending Session Invitation Decline
Sending Session Invitation Decline with data (%lu bytes)
Skipping destination %{private}@, which is not in this session's list of destinations: %{private}@
Asked if shouldUseSocketForTransport %@
%@ - Session not connected can't send data yet, ignoring...
%@ - No socket pair connection setup, ignoring...
%@ - No data to send, ignoring...
Sending data Client -> Daemon  (hash: %lu)  (length: %lu)
Session accept received fromID %@ sessionID %@ with data %@
Ignoring accept, session doesn't match %@ vs. %@
Session decline received fromID %@ sessionID %@ with data %@
Ignoring decline, session doesn't match %@ vs. %@
Session cancel received fromID %@ sessionID %@ with data %@
Ignoring cancel, session doesn't match %@ vs. %@
Session message received fromID %@ sessionID %@ with data %@
Ignoring message, session doesn't match %@ vs. %@
Session end received fromID %@ sessionID %@ with data %@
Ignoring end, session doesn't match %@ vs. %@
Session %@ invitation sent to tokens %@ shouldBreakBeforeMake %@
Ignoring session:invitationSentToTokens:, session doesn't match %@ vs. %@
Ignoring session started, session doesn't match %@ vs. %@
Session started for IDSSessionID: %@
Session ended %@ with reason %d error %@
Ignoring session ended, session doesn't match %@ vs. %@
Session audio enabled ? %@
Ignoring audioEnabled, session doesn't match %@ vs. %@
Session muted ? %@
Ignoring muted, session doesn't match %@ vs. %@
Ignoring xpc object, session doesn't match %@ vs. %@
Received initial link type %d for session %@ with error %@.
Received invalid initial link type xpc object for session %@ with error %@.
Received invalid xpc object type: %@.
Session %@ received the report: %@
UNRL: Received data Daemon -> Client  (data hash: %lu)  (length: %lu)
Daemon Interfaced Group context controller starting up
Error fetching sync activity monitor collaborator {err: %@}
Error fetching activity monitor collaborator {error: %@}
No delegate, bailing...
Client request to invalidate: %@
Scheduling next batch in %f
setDestinations %@
We're dead, bailing
Destinations are the same, bailing
Setting time of death to %@
Received cached results %@
Received 0 cached results, query all destinations
 * Next query timer hit: %@
We're dead, not querying: %@
We've reached the max number of queries for this batch, not adding anymore: %@
We've reached the max number of queries, not adding anymore: %@
Received results %@
We've reached the max number of queries, possibly deferring queries: %@ %@
Invalidating next query timer: %@
Calling out to old delegate %p
Calling out to old delegate %p for service %@
Returning results to delegate %p
No delegate %p or queue %p
-[IDSServiceMonitor init] {self: %p, service: %@}
-[IDSServiceMonitor dealloc] {self: %p}
-[IDSServiceMonitor _updateAvailability] {self: %p, state: %llu, previousAvailability: %llu}
IDSTransactionLogSync
Got token
!setState Token=%@
failed to get token {error: %@}
Fetching messages
!addState moreComing=%@
Persisted token
moreComing -- continue
No more coming -- done
Failed to persist token {token: %@, error: %@}
Failed to ingest messages {error: %@}
Failed to fetch messages {error: %@}
got transaction messages from transport messages {transactionMessages.count: %ld, transportMessages.count: %ld}
Failed to get transaction messages from transport messges {transportMessages: %{private}@, participants: %{private}@, groups: %{private}@, error: %{public}@}
Failed to get groups or participants {error: %{public}@}
Failed to get account information {error: %{public}@}
Fetching participants/groups for deviceMessges {deviceMessages.count: %ld, groupMessages.count: %ld}
Got participants {participants.count: %ld, destinations: %ld}
Error getting participants from device messages {error: %{public}@, participants: %{private}@, deviceMessages: %{private}@}
Got groups {groups.count: %ld, groupIDs.count: %ld}
Error getting groups from group messages {error: %{public}@, groups: %{private}@, groupMessages: %{private}@}
Error getting groups or participants {error: %{public}@}
Failed to decrypt device message {error: %{public}@}
Failed to get account for recipient alias {alias: %{private}@, accounts: %{private}@, message: %{private}@}
Message missing sender/recipient alias {senderAlias: %{private}@, recipientAlias: %{private}@, message: %{private}@, senderAlias==nil: %{public}@, recipientAlias==nil: %{public}@}
-[IDSContinuity initWithDelegate:queue:]
v8@?0
-[IDSContinuity startTrackingPeer:]
-[IDSContinuity stopTrackingPeer:]
__kIDSDaemonDidConnectNotification
__kIDSDaemonWillConnectNotification
__kIDSDaemonDidDisconnectNotification
__k_IDSDaemonDidConnectNotification
__kIDSDaemonConnectionLostNotification
QueryWithReplySync
QueryWithReply
IDSDaemonControllerContext
com.apple.IDSDaemonControllerIvarQueue
com.apple.IDSDaemonControllerQueue
com.apple.IDSDaemonControllerConnectingQueue
com.apple.private.alloy.pbbridge
com.apple.private.alloy.accountssync
v32@?0@8@16^B24
-[IDSDaemonController setCurXPCMessagePriority:]
-[IDSDaemonController curXPCMessagePriority]
-[IDSDaemonController addedDelegateForService:withCompletion:]_block_invoke
services
commands
xpc-object
object
object-context
com.apple.identityservices.xpc
accountsd
SyncReplySupport
LengthOnlyHeaderProtocol
i16@?0@"NSObject<OS_nw_framer>"8
Q16@?0@"NSObject<OS_nw_framer>"8
Q28@?0*8Q16B24
v36@?0@"NSObject<OS_nw_framer>"8@"NSObject<OS_nw_protocol_metadata>"16Q24B32
__kIDSKeyRollingCompleteNotification
IDSSecurityKeyRollingRollKeys
IDSSecurityKeyRolling.m
!_IDSRunningInDaemon()
IDSSecurityKeyRollingRegenerateRegisteredIdentity
socket failed, errno: %d
gethostbyname failed, errno: %d
connect failed, errno: %d
IDSLocalSetupStart
IDSLocalSetup.m
IDSLocalSetupCompleted
IDSLocalSetupStop
IDSLocalSetupUnpair
IDSLocalSetupUnpairStart
IDSAddPairedDevice
IDSConfigureDemoMode
DemoModeConfig
12345678-0000-DADA-DADA-DEADBEEEEEEE
IDSConnectPairedDevice
IDSDeletePairedDevice
IDSDeletePairedDeviceWithCompletion
v16@?0@"NSDictionary"8
IDSDeletePairedDeviceWithCompletionBlock
IDSGetPairedDevicesWithCompletionBlock
IDSGetPairedDevices
IDSGetDeliveryStatsWithCompletionBlock
IDSInitialLocalSyncStarted
IDSInitialLocalSyncCompleted
IDSInitialLocalSyncStartedForServices
IDSInitialLocalSyncCompletedForServices
IDSIncomingAccountSyncMessage
IDSSetAllowedTrafficClassifiersForDevice
IDSGetAllowedTrafficClassifiersForDevice
IDSDropAllMessagesWithoutAnyAllowedTrafficClassifier
ids-dm-iri
ids-dm-ori
ids-dm-sqnm
ids-dm-spmf
ids-dm-tc
ids-dm-afsqnm
ids-dm-cd
ids-dm-cm
ids-dm-cpb
ids-dm-snd-params
ids-dm-options
ids-dm-snd-time
ids-dm-msg-id
ids-dm-msg-guid
com.apple.private.alloy.
<unknown>
[%llu 
-[IDSDirectMessageConnection setDestinationDevice:]
IDSDirectMessageFireAndForget
-[IDSDirectMessageConnection isMessageEligible:options:destinationDevice:]
-[IDSDirectMessageConnection updateConnectedDevices:]
-[IDSDirectMessageConnection updateMetadata:]
directMsgAllowedForServices
com.apple.ids.direct-messaging
v20@?0i8Q12
peerIDForDirectMsg
pidForIDSD
IDSDirectMessaging
com.apple.ids
v20@?0i8@"NSObject<OS_nw_error>"12
dmsg-%s
v20@?0i8@"NSError"12
-[IDSDirectMessageConnection receivedDirectMessagingSocketWithContext:]
streamName
dmsg-
streamFlags
v36@?0@"NSObject<OS_dispatch_data>"8@"NSObject<OS_nw_content_context>"16B24@"NSObject<OS_nw_error>"28
v16@?0@"NSObject<OS_nw_error>"8
-[IDSDirectMessageConnection sendAppAckWithGUID:]
v24@?0C8I12*16
-[IDSDirectMessageConnection sendMessageWithParameters:options:]
ids-dm-%@
IDSLocalStatisticsCategory
IDSLocalOutgoingMessageBytes
IDSLocalOutgoingMessages
IDSLocalIncomingMessageBytes
IDSLocalIncomingMessages
IDS Local Network Stats
com.apple.madrid
com.apple.ess
com.apple.private.ac
com.apple.private.alloy.facetime.video
com.apple.private.alloy.facetime.audio
com.apple.private.alloy.facetime.mw
com.apple.private.alloy.facetime.multi
com.apple.private.alloy.bulletinboard
com.apple.private.alloy.photostream
com.apple.private.alloy.maps
com.apple.private.alloy.screensharing
com.apple.private.alloy.sms
com.apple.private.alloy.multiplex1
com.apple.private.alloy.biz
v32@?0@"NSData"8@"NSData"16@"NSUUID"24
Encryption failed - plaintext larger than GCM can support for topic %@ data.length %lu
Encryption failed - failed to create CommonCrypto cryptor for topic %@ error %ld
-[IDSGroupSessionDataCryptor encryptData:sequenceNumber:error:]
IDSGroupSessionDataCryptor.m
0 == SecRandomCopyBytes(kSecRandomDefault, IDSGROUPSESSIONCRYPTOR_NONCE_SIZE_NBYTES, nonceBytes)
Encryption failed - CommonCryptor failed to set IV for topic %@ error %ld
Encryption failed - CommonCryptor failed to add AAD for topic %@ error %ld
Encryption failed - CommonCryptor failed to encrypt for topic %@ error %ld
Encryption failed - CommonCryptor failed to create auth tag for topic %@ error %ld
Encryption failed - CommonCryptor failed to reset for topic %@ error %ld
Decryption failed - data has insufficient bytes to decrypt for topic %@ keyID %@
Decryption failed - unknown keyID %@
Decryption failed - CommonCryptor fails to create cryptor for topic %@ keyID %@ error %ld
Decryption failed - unknown version for topic %@ keyID %@ version %u
Decryption failed - CommonCryptor fails to set IV for topic %@ keyID %@ error %ld
Decryption failed - CommonCryptor failed to decrypt for topic %@ keyID %@ error %ld
Decryption failed - failed to verify auth tag for topic %@ keyID %@ error %ld
Decryption failed - CommonCryptor failed to reset for topic %@ keyID %@ error %ld
{Class:%@, Topic:%@, EncryptionKeyID:%@, DecryptionKeyCount:%lu}
{Object:%p, Class:%@, Topic:%@, EncryptionKeyID:%@, DecryptionKeys:%@}
topic
encryptingKeyID
encryptingKey
encryptingKeySalt
decryptingKeyIDs
decryptingKeys
decryptingKeySalts
-[IDSGroupSession initWithAccount:destinations:options:]
-[IDSGroupSession initWithAccount:options:]
-[IDSGroupSession _internal_sessionWithValidityCheck]
v16@?0Q8
session:
-[IDSGroupSession _internal]
%@%u
groupsession
0.0.0.0
3030
IDSReportiMessageSpam
IDSReportiMessageSpam.m
IDSReportiMessageUnknownSenderWithBlackholeStatus
IDSCheckiMessageUnknownSender
_IDSScheduleTimeoutForReportiMessageSpamCheckUnkownCompletionBlock
_IDSScheduleTimeoutForAnyCompletionBlock
_IDSListenForReportiMessageSpamResponses
__IDSServiceAvailabilityDidChangeNotification
availability
service
IDSDaemonListener-ivarQueue: %@
IDSDaemonListenerContext
v16@?0@"<IDSDaemonListenerProtocol>"8
v32@?0@8Q16^B24
-[IDSDaemonListener accountAdded:]
-[IDSDaemonListener accountRemoved:]
com.apple.private.alloy.voicemailsync
v32@?0@"NSDictionary"8Q16^B24
serviceInfo
enabledAccountsInfo
dependentDevices
linkedDevices
IDSFamilyService
familyInfo
familyDevices
pendingInvitationMap
receivedInvitationMap
maxMessageSizes
deviceIdentifier
activeDeviceUniqueID
SyncConnection
v12@?0B8
-[_IDSRealTimeEncryptionProxy initWithAccount:]
-[_IDSRealTimeEncryptionProxy setDelegate:queue:]
-[_IDSRealTimeEncryptionProxy sendPrekeyToGroup:]
-[_IDSRealTimeEncryptionProxy requestPublicKeys]
-[_IDSRealTimeEncryptionProxy sendMasterKeyMaterialToGroup:]
-[_IDSRealTimeEncryptionProxy requestMasterKeyMaterialForGroup:]
-[_IDSRealTimeEncryptionProxy sendMKMRecoveryRequestToGroup:]
-[_IDSRealTimeEncryptionProxy resetKeysForGroup:]
object-type
public-keys
master-key-materials
com.apple.ids.activity.error
presence
presence-subscription-ttl-sec
@16@?0@"IDSDevice"8
 tokens: %@
 URIs: %@
 deviceUniqueIDs: %@
<%@: %p; subactivity: %@ expirationDate: %@%@>
subActivity
appcontext
deviceids
tokens
uris
expirationDate
<%@: %p; subActivity: %@; pushToken: %@; serverTimestamp: %llu; clientContext: %@>
subactivity
pushtoken
servertimestamp
clientcontext
online
%@-%@
v16@?0@"<IDSXPCActivityMonitor>"8
v20@?0B8@"NSError"12
v24@?0@"<IDSXPCActivityMonitor>"8@"NSError"16
v16@?0@"NSError"8
v24@?0@"NSArray"8@"NSError"16
IDSInvitations-defaultQueue
Failed to validate strict decoding for invitation
IDSInvitationIsSenderMergeIdCheckEnabled
IDSServerMessagingErrorDomain
timeout
fromStorage
cdContext
identifier
v16@?0@"IDSXPCDaemonController"8
IDSRegistrationControlDisableRegistrationType
IDSRegistrationControl.m
IDSRegistrationControlEnableRegistrationType
IDSRegistrationControlGetStateForRegistrationType
IDSRegistrationControlSyncGetStateForRegistrationType
v24@?0q8@"NSError"16
_IDSScheduleTimeoutForRegistrtionControlActionCompletionBlock
_IDSScheduleTimeoutForAnyCompletionBlockWithSync
_IDSListenForRegistrationControlResponses
_IDSScheduleTimeoutForRegistrtionControlStateCompletionBlock
_IDSScheduleSyncTimeoutForRegistrtionControlStateCompletionBlock
IDSSignInControllerErrorDomain
IDSSignInControllerInternalErrorDomain
IDSSignInControllerErrorAccountKey
<%@: %p> Type: %@ Status: %@
<%@: %p> Service: %@ Infos: %@
com.apple.identityservices.IDSSignInController
-[IDSSignInController enableUserType:onService:completion:]
v24@?0@"IDSAccount"8@"IDSAccountController"16
-[IDSSignInController disableUserType:onService:completion:]
@16@?0@"IDSAccount"8
-[IDSSignInController statusOfUsersOnService:withCompletion:]
-[IDSSignInController provideCredential:forUser:onService:withCompletion:]
FaceTime
iMessage
v28@?0@"NSString"8@"NSString"16B24
-[IDSSignInController signInUsername:onService:waitUntilRegistered:withCompletion:]
-[IDSSignInController signInUsername:withProvidedCredential:onService:waitUntilRegistered:completion:]
-[IDSSignInController signOutService:completion:]
B16@?0@"IDSSignInControllerAccountDescription"8
v24@?0q8q16
@"NSCountedSet"16@?0@"NSArray"8
%llu,%llu
Phone
AppleID
SignedOut
Disabled
Enabled
Pending
direction
-[IDSSession initWithAccount:destinations:transportType:]
-[IDSSession initWithAccount:destinations:options:]
-[IDSSession _initWithAccount:destinations:transportType:uniqueID:]
-[IDSSession _internal]
v32@?0@"NSString"8@"NSDictionary"16^B24
v16@?0@"<IDSIDQueryControllerDelegate>"8
void IDSSimulatedLocalPairingAddPairedDevice(NSUUID *__strong, __strong IDSLocalPairingCompletionBlock, __strong dispatch_queue_t)
IDSSimulatorLocalPairingAddPairedDevice
IDSSimulatorSupport
void IDSSimulatedLocalPairingDeletePairedDevice(NSUUID *__strong, __strong IDSLocalPairingCompletionBlock, __strong dispatch_queue_t)
IDSSimulatorLocalPairingDeletePairedDevice
void IDSSimulatedLocalPairingSwitchActivePairedDevice(NSUUID *__strong, __strong IDSLocalPairingCompletionBlock, __strong dispatch_queue_t)
IDSSimulatorLocalPairingSwitchActivePairedDevice
IDSIDQueryControllerErrorDomain
destinations
IDSBatchIDQueryControllerQueue
v16@?0@"NSObject<OS_xpc_object>"8
IDSSendMessageOptionTimeout
IDSSendMessageOptionSkipPayloadCheck
IDSSendMessageOptionTopLevelDictionary
IDSSendMessageOptionDirectMessaging
IDSSendMessageOptionDataToEncrypt
IDSSendMessageOptionWantsResponse
IDSSendMessageOptionFromID
IDSSendMessageOptionCommand
IDSSendMessageOptionWantsDeliveryStatus
IDSSendMessageOptionWantsCertifiedDelivery
IDSSendMessageOptionDeliveryStatusContext
IDSSendMessageOptionUUID
IDSSendMessageOptionAlternateCallbackIdentifier
IDSSendMessageOptionEncryptPayload
IDSSendMessageOptionCompressPayload
IDSSendMessageOptionFireAndForget
IDSSendMessageOptionWantsClientAcknowledgement
IDSSendMessageOptionLocalDelivery
IDSSendMessageOptionForceLocalDelivery
IDSSendMessageOptionRequireBluetooth
IDSSendMessageOptionRequireLocalWiFi
IDSSendMessageOptionDuet
IDSSendMessageOptionExpectsPeerResponse
IDSSendMessageOptionPeerResponseIdentifier
IDSSendMessageOptionOpportunisticDuet
IDSSendMessageOptionTethering
IDSSendMessageOptionActivityContinuation
IDSSendMessageOptionNSURLSession
IDSSendMessageOptionMapTile
IDSSendMessageOptionNonWaking
IDSSendMessageOptionBypassDuet
IDSSendMessageOptionFakeMessage
IDSSendMessageOptionRequireAllRegistrationProperties
IDSSendMessageOptionRequireLackOfRegistrationProperties
IDSSendMessageOptionInterestingRegistrationProperties
IDSSendMessageOptionQueueOneIdentifier
IDSSendMessageOptionDuetIdentifiersOverride
IDSSendMessageOptionSockPuppet
IDSSendMessageOptionEnforceRemoteTimeouts
IDSSendMessageOptionAccessToken
IDSSendMessageOptionHomeKitMessage
IDSSendMessageOptionDisableAliasValidation
IDSSendMessageOptionForceEncryptionOff
IDSSendMessageOptionSubServiceKey
IDSSendMessageOptionAllowCloudDeliveryKey
IDSSendMessageOptionAlwaysSkipSelfKey
IDSSendMessageOptionNonCloudWakingKey
IDSSendMessageOptionMetricReportIdentifier
IDSSendMessageOptionLiveMessageDelivery
IDSSendMessageOptionWantsProgress
IDSSendMessageOptionDropMessageIndicator
IDSSendMessageOptionOriginalTimestampKey
IDSSendMessageOptionPushPriority
IDSSendMessageOptionPublicMessageIntent
-[IDSConnection _initWithAccount:commands:indirectDelegateCallouts:]
-[IDSConnection _internal]
groupSessionID
salt
serviceName
Unable to create nw_connection. The failure was caused due to invalid parameters or not being able to extract the address from the socket.
Error
%F %T 
%-6u %p %s 
IDSTransactionLogErrorDomain
Family handles not loaded on service.
Could not send to non family member.
_IDSPasswordManager.m
This method should only be run on clients
localParticipantID
remoteParticipantID
connectionIndex
dataMode
IDSRealTime
com.apple.identityservicesd.nsxpc
-[IDSPairedDeviceManager setAllowedTrafficClassifiers:]_block_invoke
-[IDSPairedDeviceManager deletePairedDevice:withCompletionBlock:queue:]_block_invoke
-[IDSPairedDeviceManager getLocalDeviceInfoWithCompletionBlock:queue:]
v24@?0@"NSDictionary"8@"NSError"16
-[IDSPairedDeviceManager getPairedDeviceInfoWithCompletionBlock:queue:]
-[IDSPairedDeviceManager getDeliveryStatsWithCompletionBlock:queue:]
IDSPhoneCertificateVendorErrorDomain
<%@: %p authenticationCertificateSignatures: %@>
com.apple.IDS.IDSPhoneCertificateVendor
An unknown error occurred
Failed to fetch local phone authentication certificate
Failed to fetch carrier token
Failed to generate phone authentication signature
Request timed out waiting for response from daemon
The requested operation is not supported on this platform
Unknown phone certificate error
@16@?0@"NSData"8
TEST_IMEI
TEST_NONCE
v24@?0@"IDSCarrierToken"8@"NSError"16
FTSelectedPNRSubscription
FTServices
cfs_client_blob_set_get_blob
IDSCFSClient.c
index < set->count
cfs_client_create
callback != NULL
tcp_connect failed, errno: %d
pthread_create failed, errno: %d
cfs_client_destroy
client->fd >= 0
client->isrunning
shutdown failed, errno: %d
pthread_join failed, errno: %d
start
size > 0
read failed, errno: %d
n == DESERIALIZER_SUCCESS
bad reply type: %d
connection closed
DESERIALIZER_BAD_DATA
deserialize failed
IDSXPCConnectionRemoteObjectPromise.m
IDSXPCConnectionRemoteObjectPromise can only be fulfilled once
XPC methods must have void return values {selector: %@}
-[IDSAccountController _initWithService:onIDSQueue:]
-[IDSAccountController _initWithService:]
-[IDSAccountController initWithService:]
-[IDSAccountController _internal]
IDSGroupSessionParticipantUpdateParticipantIdentifierKey
-[_IDSGroupSession initWithAccount:destinations:options:delegateContext:]
forceUPlusOneSession
FixedConferenceServerAddress
-[_IDSGroupSession invalidate]
-[_IDSGroupSession daemonDisconnected]
-[_IDSGroupSession _broadcastNewSessionToDaemon]
-[_IDSGroupSession _callDelegateWithBlock:]
-[_IDSGroupSession setDelegate:queue:]
-[_IDSGroupSession uniqueID]
-[_IDSGroupSession updateMembers:withContext:triggeredLocally:]
-[_IDSGroupSession updateMembers:withContext:messagingCapabilities:triggeredLocally:]
-[_IDSGroupSession manageDesignatedMembers:withType:]
-[_IDSGroupSession removeParticipantIDs:]
-[_IDSGroupSession updateParticipantData:withContext:]
-[_IDSGroupSession setParticipantInfo:]
-[_IDSGroupSession joinWithOptions:]
joinGroupSessionError
Cannot join a session that is already ended.
Cannot join a session without the participant data information.
-[_IDSGroupSession leaveGroupSession]
-[_IDSGroupSession reconnectUPlusOneSession]
-[_IDSGroupSession setPreferences:]
-[_IDSGroupSession setRequiredCapabilities:requiredLackOfCapabilities:]
-[_IDSGroupSession sessionEndedReason]
-[_IDSGroupSession requestActiveParticipants]
-[_IDSGroupSession registerPluginWithOptions:]
_IDSGroupSession.m
options[IDSGroupSessionPluginNameKey]
-[_IDSGroupSession unregisterPluginWithOptions:]
-[_IDSGroupSession requestEncryptionKeyForParticipants:]
-[_IDSGroupSession _checkAndSendDataCryptor]
v24@?0@"IDSGroupEncryptionKeyMaterial"8^B16
-[_IDSGroupSession requestDataCryptorForTopic:completionHandler:]
-[_IDSGroupSession session:didReceiveReport:]
v16@?0@"<IDSGroupSessionDelegate>"8
-[_IDSGroupSession groupSessionDidTerminate:]
-[_IDSGroupSession groupSessionEnded:withReason:error:]
-[_IDSGroupSession sessionDidJoinGroup:participantsInfo:error:]
-[_IDSGroupSession sessionDidJoinGroup:participantInfo:error:]
-[_IDSGroupSession sessionDidJoinGroup:participantUpdateDictionary:error:]
-[_IDSGroupSession sessionDidLeaveGroup:error:]
-[_IDSGroupSession session:participantDidJoinGroupWithInfo:]
-[_IDSGroupSession session:participantDidLeaveGroupWithInfo:]
-[_IDSGroupSession session:didReceiveActiveParticipants:success:]
-[_IDSGroupSession session:didReceiveActiveLightweightParticipants:success:]
-[_IDSGroupSession session:didReceivePluginAllocationInfo:]
-[_IDSGroupSession session:didRegisterPluginAllocationInfo:]
-[_IDSGroupSession session:didUnregisterPluginAllocationInfo:]
-[_IDSGroupSession session:didReceiveBlockedParticipantIDs:withCode:withType:isTruncated:]
-[_IDSGroupSession session:didReceiveQueryBlockedParticipantIDs:withCode:isTruncated:]
-[_IDSGroupSession session:didRemoveParticipantIDs:withCode:isTruncated:]
-[_IDSGroupSession session:didReceiveKeyMaterial:]
-[_IDSGroupSession session:shouldInvalidateKeyMaterialByKeyIndexes:]
-[_IDSGroupSession participantUpdatedForSession:]
-[_IDSGroupSession session:hasOutdatedSKI:]
-[_IDSGroupSession session:didCreateParticipantIDAlias:forParticipantID:salt:]
-[_IDSGroupSession session:didReceiveParticipantID:forParticipantIDAlias:salt:]
session-device-socket
sessionID
error
%llu
kIDSGroupContextControllerPersistedToken
kIDSGroupContextControllerListenerID
v24@?0@"IDSGroupContextControllerContent"8@"NSError"16
v24@?0@"ENGroup"8@"NSError"16
v16@?0@"CUTAsyncReducerState"8
v16@?0@"CUTResult"8
v24@?0@"ENGroupContext"8@"NSError"16
v16@?0@"NSArray"8
v36@?0@"NSArray"8B16@"IDSCloudKitTransportLogChangeToken"20@"NSError"28
v16@?0@"ENGroup"8
FixedQuickRelayServerAddress
FixedQuickRelaySessionID
FixedQuickRelaySessionToken
FixedQuickRelaySessionKey
Warning, missing %@ to add to %s
sessionInfo
-[_IDSConnection initWithAccount:commands:indirectDelegateCallouts:delegateContext:]
-[_IDSConnection createDirectMessageConnectionIfNeeded]
-[_IDSConnection account]
-[_IDSConnection isActive]
-[_IDSConnection addDelegate:queue:completion:]
v16@?0@?<v@?>8
-[_IDSConnection _callDelegatesRespondingToSelector:withPreCallbacksBlock:callbackBlock:postCallbacksBlock:group:]
-[_IDSConnection setDelegateCapabilities:]
IDSConnection
allowlistedidsservices
IDSClientBringsUpCloudMessaging
Force Cloud Messaging
IDSActivityContinuationIdentifier
IDSOpportunisticDuetIdentifier
q24@?0@"NSString"8@"NSString"16
unknown type
-[_IDSConnection sendProtobuf:toDestinations:priority:options:identifier:error:]
Cannot send to empty destination set
Cannot send with an inactive account
Cannot send payload of this size
Invalid address: %@
protobuf
Could not find account uniqueID!
-[_IDSConnection sendMessage:toDestinations:priority:options:identifier:error:]
Cannot send empty message
URGENT
Default
Sync
message (dictionary)
Could not plist serialize dictionary or otherwise empty payload
-[_IDSConnection sendData:toDestinations:priority:options:identifier:error:]
data
-[_IDSConnection sendInvitation:toDestination:priority:options:identifier:error:]
Invitation has expired
invitation (send)
-[_IDSConnection sendInvitationUpdate:toDestination:priority:options:identifier:error:]
invitation (update)
-[_IDSConnection sendServerMessage:command:]
-[_IDSConnection account:isActiveChanged:]
v16@?0@"<IDSConnectionDelegate>"8
-[_IDSConnection account:devicesChanged:]
-[_IDSConnection account:nearbyDevicesChanged:]
-[_IDSConnection account:connectedDevicesChanged:]
-[_IDSConnection _connect]
-[_IDSConnection _resendPendingSends]
-[_IDSConnection daemonConnected]
-[_IDSConnection messageIdentifierInner:alternateCallbackID:forAccount:updatedWithResponseCode:error:lastCall:context:isDirectMessage:]
Unknown error
-[_IDSConnection messageIdentifier:alternateCallbackID:forAccount:willSendToDestinations:skippedDestinations:registrationPropertyToDestinations:]
-[_IDSConnection messageIdentifier:forTopic:toIdentifier:fromIdentifier:hasBeenDeliveredWithContext:]
app-level ack
-[_IDSConnection didSendOpportunisticDataWithIdentifier:onAccount:toIDs:]
-[_IDSConnection messageReceived:withGUID:withPayload:forTopic:toIdentifier:fromID:context:]
message
-[_IDSConnection dataReceived:withGUID:forTopic:toIdentifier:fromID:context:]
-[_IDSConnection engramDataReceived:withGUID:forTopic:toIdentifier:fromID:context:]
-[_IDSConnection accessoryDataReceived:withGUID:forTopic:toIdentifier:fromID:context:]
-[_IDSConnection accessoryReportMessageReceived:accessoryID:controllerID:withGUID:forTopic:toIdentifier:fromID:context:]
accessoryReportMessage
-[_IDSConnection protobufReceived:withGUID:forTopic:toIdentifier:fromID:context:]
(unknown)
-[_IDSConnection receivedMetadataForDirectMessaging:]
direct-messaging-socket-received
object-flags
object-recipient
-[_IDSConnection didFlushCacheForService:remoteURI:fromURI:guid:]
flush cache notification
-[_IDSConnection pendingIncomingMessageWithGUID:forTopic:toIdentifier:fromID:context:]
pending
-[_IDSConnection sessionInvitationReceivedWithPayload:forTopic:sessionID:toIdentifier:fromID:transportType:]
session invitation
-[_IDSConnection receivedGroupSessionParticipantUpdate:forTopic:toIdentifier:fromID:]
group session participant update
-[_IDSConnection receivedGroupSessionParticipantDataUpdate:forTopic:toIdentifier:fromID:]
group session participant data update
-[_IDSConnection checkTransportLogWithReason:]
com.apple.identityservicesd.nsxpc.auth
v16@?0@"NSMutableSet"8
-[IDSQuickSwitchAcknowledgementTracker awaitAcknowledgementFromServiceDelegate:]
Registration
-[IDSQuickSwitchAcknowledgementTracker identifierForServiceDelegate:]
%@ (%p)
-[IDSQuickSwitchAcknowledgementTracker stopAwaitingAcknowledgementFromServiceDelegateWithIdentifier:]
-[IDSQuickSwitchAcknowledgementTracker stopAwaitingAcknowledgementFromAllServiceDelegates]
IDSLocalPairingAddPairedDevice
IDSLocalPairing.m
void IDSLocalPairingAddPairedDevice(NSUUID *__strong, __strong IDSLocalPairingCompletionBlock, __strong dispatch_queue_t)
cbuuid
block
queue
v16@?0@"<IDSXPCPairing>"8
IDSLocalPairingAddPairedDeviceWithInfo
void IDSLocalPairingAddPairedDeviceWithInfo(IDSLocalPairingAddPairedDeviceInfo *__strong, __strong IDSLocalPairingCompletionBlock, __strong dispatch_queue_t)
info
IDSLocalPairingUpdatePairedDevicePairingType
void IDSLocalPairingUpdatePairedDevicePairingType(NSUUID *__strong, IDSPairingType, __strong IDSLocalPairingCompletionBlock, __strong dispatch_queue_t)
@(pairingType)
IDSLocalPairingConnectPairedDevice
void IDSLocalPairingConnectPairedDevice(NSUUID *__strong, __strong IDSLocalPairingCompletionBlock, __strong dispatch_queue_t)
IDSLocalPairingSetupCompletedForPairedDevice
void IDSLocalPairingSetupCompletedForPairedDevice(NSUUID *__strong, __strong IDSLocalPairingCompletionBlock, __strong dispatch_queue_t)
IDSLocalPairingSwitchActivePairedDevice
void IDSLocalPairingSwitchActivePairedDevice(NSUUID *__strong, __strong IDSLocalPairingCompletionBlock, __strong dispatch_queue_t)
IDSLocalPairingDisconnectActivePairedDevice
void IDSLocalPairingDisconnectActivePairedDevice(__strong IDSLocalPairingCompletionBlock, __strong dispatch_queue_t)
IDSLocalPairingRedeliverMessages
void IDSLocalPairingRedeliverMessages(IDSDevice *__strong, __strong IDSLocalPairingCompletionBlock, __strong dispatch_queue_t)
deviceUniqueID
IDSLocalPairingDeletePairedDevice
void IDSLocalPairingDeletePairedDevice(NSUUID *__strong, __strong IDSLocalPairingCompletionBlock, __strong dispatch_queue_t)
IDSLocalPairingUnpairStartForDevice
void IDSLocalPairingUnpairStartForDevice(NSUUID *__strong, __strong IDSLocalPairingCompletionBlock, __strong dispatch_queue_t)
IDSLocalPairingStopForDevice
void IDSLocalPairingStopForDevice(NSUUID *__strong, __strong IDSLocalPairingCompletionBlock, __strong dispatch_queue_t)
IDSLocalPairingUnpairForDevice
void IDSLocalPairingUnpairForDevice(NSUUID *__strong, __strong IDSLocalPairingCompletionBlock, __strong dispatch_queue_t)
IDSLocalPairingForgetPairedDevice
void IDSLocalPairingForgetPairedDevice(NSUUID *__strong, __strong IDSLocalPairingCompletionBlock, __strong dispatch_queue_t)
IDSLocalPairingGetPairingDevicesWithCompletionBlock
void IDSLocalPairingGetPairingDevicesWithCompletionBlock(__strong IDSLocalPairingPairedDevicesCompletionBlock, __strong dispatch_queue_t)
IDSLocalPairingGetPairedDevicesWithCompletionBlock
void IDSLocalPairingGetPairedDevicesWithCompletionBlock(__strong IDSLocalPairingPairedDevicesCompletionBlock, __strong dispatch_queue_t)
IDSLocalPairingGetPairingRecordsWithCompletionBlock
void IDSLocalPairingGetPairingRecordsWithCompletionBlock(__strong IDSLocalPairingPairingRecordsCompletionBlock, __strong dispatch_queue_t)
v32@?0@"IDSLocalPairingLocalDeviceRecord"8@"NSDictionary"16@"NSError"24
IDSLocalPairingSetAllowedTrafficClassifiersForDevice
void IDSLocalPairingSetAllowedTrafficClassifiersForDevice(NSSet *__strong, IDSDevice *__strong, __strong IDSLocalPairingCompletionBlock, __strong dispatch_queue_t)
classifiers
IDSLocalPairingGetAllowedTrafficClassifiersForDevice
void IDSLocalPairingGetAllowedTrafficClassifiersForDevice(IDSDevice *__strong, __strong IDSLocalPairingTrafficClassifiersCompletionBlock, __strong dispatch_queue_t)
IDSLocalPairingDropAllMessagesWithoutAnyAllowedTrafficClassifier
void IDSLocalPairingDropAllMessagesWithoutAnyAllowedTrafficClassifier(IDSDevice *__strong, __strong IDSLocalPairingCompletionBlock, __strong dispatch_queue_t)
IDSLocalPairingReunionSyncStartedForServices
void IDSLocalPairingReunionSyncStartedForServices(NSArray *__strong, __strong IDSLocalPairingCompletionBlock, __strong dispatch_queue_t)
IDSLocalPairingReunionSyncCompletedForServices
void IDSLocalPairingReunionSyncCompletedForServices(NSArray *__strong, __strong IDSLocalPairingCompletionBlock, __strong dispatch_queue_t)
kcbuuid
kPairingProtocolVersion
kBTOutOfBandKey
kSupportsIPsecWithSPPLink
kBluetoothMACAddress
kShouldPairDirectlyOverIPsec
kPairingType
<%@: %p cbuuid: %@, pairingProtocolVersion: %ld, BTOutOfBandKey.length: %ld, supportsIPsecWithSPPLink: %ld, shouldPairDirectlyOverIPsec: %ld, bluetoothMACAddress.length: %ld, pairingType: %ld>
-[_IDSDeviceConnection initWithDevice:options:completionHandler:queue:]
completionHandlerID
protocol
Socket open timed out
-[_IDSDeviceConnection _connect]
-[_IDSDeviceConnection setStreamPairWithInputStream:outputStream:]
-[_IDSDeviceConnection updateConnectionWithOptions:error:]
Cannot change priority when not connected
Could not set traffic class for underlying socket
Invalid priority level specified
Options dictionary contains no valid options
-[_IDSDeviceConnection close]
device-socket
metrics
Error: %@
%@_%@
deserialize failed, bad magic number2
group name length is 0
group name is not 0-terminated
client blob size too big: %u
deserialize failed, bad magic number3
-[_IDSAccountController initWithService:delegateContext:]
-[_IDSAccountController accounts]
-[_IDSAccountController internalAccounts]
-[_IDSAccountController enabledAccounts]
-[_IDSAccountController serviceName]
-[_IDSAccountController addDelegate:queue:]
-[_IDSAccountController _callDelegatesRespondingToSelector:withPreCallbacksBlock:callbackBlock:postCallbacksBlock:group:]
-[_IDSAccountController _connect]
-[_IDSAccountController daemonDisconnected]
v16@?0@"<IDSAccountControllerDelegate>"8
-[_IDSAccountController _loadCachedAccountsWithDictionaries:]
@16@?0@8
-[_IDSAccountController _loadCachedAccounts]
-[_IDSAccountController accountWithUniqueID:]
-[_IDSAccountController accountWithLoginID:service:]
-[_IDSAccountController _setupAccountWithLoginID:accountConfig:authToken:password:completionHandler:]
-[_IDSAccountController setupAccountWithLoginID:aliases:password:completionHandler:]
status
-[_IDSAccountController addAccount:]
-[_IDSAccountController _removeAndDeregisterAccount:]
-[_IDSAccountController _removeAccount:]
-[_IDSAccountController _updateLocalAccountVisibility]
-[_IDSAccountController enableAccount:]
-[_IDSAccountController disableAccount:]
-[_IDSAccountController accountAdded:]
-[_IDSAccountController accountRemoved:]
-[_IDSAccountController accountUpdated:]
-[_IDSAccountController accountsChanged:forTopic:]
v24@?0@8^B16
-[_IDSAccountController setupCompleteForAccount:transactionID:setupError:]
IDSAccountController-setupCompleteQueue
-[_IDSAccountController accountEnabled:onService:]
-[_IDSAccountController accountDisabled:onService:]
IDSHardDeregister
IDSRegistrationReset.m
IDSTriggerFinalDeregister
IDSClearState
contextPayload
<IDSDictionaryInvitationContext %p>: schemaIdentifier %@ contextType %ld payload %@
@"NSXPCConnection"8@?0
pairing
v24@?0@"<IDSXPCDaemon>"8@?<v@?@@"NSError">16
pairedDeviceManager
reunionSync
opportunistic
registration
activityMonitor
serverMessaging
internalTesting
v24@?0@8@"NSError"16
kIdentityData
kError
kIdentityDataMap
Missing identity for class-%@
kCBUUID
<%@: %p cbuuid: %@ classA: %@, errorClassA: %@, classC: %@, errorClassC: %@, classD: %@, errorClassD: %@>
<%@: %p classA: %@, errorClassA: %@, classC: %@, errorClassC: %@, classD: %@, errorClassD: %@>
-[IDSAccount _initWithDictionary:uniqueID:serviceName:]
-[IDSAccount initWithDictionary:uniqueID:serviceName:]
-[IDSAccount initWithLoginID:uniqueID:serviceName:]
-[IDSAccount _internal]
-[IDSAccount _isEnabled]
-[IDSAccount _setIsEnabled:]
%@: %p [Service: %@  User: %@  ID: %@  Type: %@  Active: %@  Registration Status: %@]
IDSiCloudSignInHack
IDSiCloudSignInHack.m
IDSiCloudSignOutHack
IDSKickGetDependent
IDSReRegister
IDSRepairAccounts
biz:
device:%@
guest-device:%@
No cloudID Provided
urn:ck:%@
Required Field Is Empty
A required Field Is Empty
ServiceUserID and AdminID can not be the same
groupSessionIDAlias
participantIDAlias
listeningPort
IDSGroupSessionUnicastConnector
PreSharedKey has Unexpected size.
Unknown parameter
Unable to create PSK.
Listener failed with error code %d
Listener cancelled
v16@?0@"NSObject<OS_nw_connection>"8
v16@?0@"NSObject<OS_nw_protocol_options>"8
v32@?0@"NSObject<OS_sec_protocol_metadata>"8@"NSObject<OS_sec_trust>"16@?<v@?B>24
groupsession:%@:ids:%@:L
Unable to create connection to the virtual participant.
IDSToolTestOnlyPSKIdentity
-[_IDSAccount initWithDictionary:uniqueID:serviceName:delegateContext:]
-[_IDSAccount initWithLoginID:uniqueID:serviceName:delegateContext:]
-[_IDSAccount _isiCloudPairingService]
com.apple.private.alloy.icloudpairing
-[_IDSAccount _isThumperService]
com.apple.private.alloy.thumper.keys
-[_IDSAccount addDelegate:queue:]
-[_IDSAccount _callDelegatesRespondingToSelector:withPreCallbacksBlock:callbackBlock:postCallbacksBlock:group:]
-[_IDSAccount addRegistrationDelegate:queue:]
-[_IDSAccount removeRegistrationDelegate:]
-[_IDSAccount _callRegistrationDelegatesWithBlock:]
-[_IDSAccount _objectForKey:]
-[_IDSAccount _setObject:forKey:]
-[_IDSAccount isInTransientRegistrationState]
-[_IDSAccount isActive]
-[_IDSAccount setAccountInfo:]
-[_IDSAccount accountInfo]
-[_IDSAccount profileInfo]
-[_IDSAccount canSend]
-[_IDSAccount aliases]
B16@?0@8
inbox.appleid.apple.com
-[_IDSAccount serviceName]
-[_IDSAccount primaryServiceName]
-[_IDSAccount uniqueID]
-[_IDSAccount _isEnabled]
-[_IDSAccount _setIsEnabled:]
-[_IDSAccount setRegionID:]
-[_IDSAccount setRegionBasePhoneNumber:]
-[_IDSAccount setDisplayName:]
-[_IDSAccount _updateDependentDevicesWithDevicesInfo:]
-[_IDSAccount _loadCachedDevices]
-[_IDSAccount _reloadCachedDevices]
-[_IDSAccount suppressedDevices]
-[_IDSAccount devices]
-[_IDSAccount nearbyDevices]
-[_IDSAccount connectedDevices]
-[_IDSAccount _callDevicesChanged]
v16@?0@"<IDSAccountDelegate>"8
-[_IDSAccount _callNearbyDevicesChanged]
-[_IDSAccount _callConnectedDevicesChanged]
-[_IDSAccount _callCloudConnectedDevicesChanged]
-[_IDSAccount _keychainRegistration]
-[_IDSAccount nextRegistrationDate]
next-registration-date
-[_IDSAccount dateRegistered]
registration-date
-[_IDSAccount _registeredURIs]
-[_IDSAccount registeredURIs]
-[_IDSAccount accountRegisteredURIs]
@16@?0@"NSString"8
-[_IDSAccount registrationCertificate]
ids-registration-cert
-[_IDSAccount pushToken]
push-token
-[_IDSAccount description]
<%p:%@:%@:%@:%@:%@:%@>
-[_IDSAccount _connect]
-[_IDSAccount account:registrationStatusInfoChanged:]
v16@?0@"<IDSAccountRegistrationDelegate>"8
-[_IDSAccount account:aliasesChanged:]
-[_IDSAccount account:vettedAliasesChanged:]
-[_IDSAccount account:profileChanged:]
-[_IDSAccount account:loginChanged:]
-[_IDSAccount account:displayNameChanged:]
-[_IDSAccount account:pseudonymsChanged:]
-[_IDSAccount account:dependentDevicesUpdated:]
-[_IDSAccount account:dependentDevicesUpdatedUponReconnect:]
-[_IDSAccount account:localDeviceAdded:]
-[_IDSAccount refreshRegistrationForAccount:]
+[IDSService serviceWithIdentifier:commands:manuallyAckMessages:completion:]
v24@?0@"_IDSService"8@"NSError"16
-[IDSService initWithService:commands:manuallyAckMessages:]
-[IDSService initWithService:serviceDomain:]
-[IDSService _internal]
-[IDSService activateAlias:]
-[IDSService activateAliases:]
-[IDSService deactivateAlias:]
-[IDSService deactivateAliases:]
B24@?0@"IDSAccount"8^B16
IDSService.m
Invalid parameter not satisfying: %@
requestProperties
LinkType
PacketsPerSecond
InputBytesPerSecond
OutputBytesPerSecond
Intent
Timestamp
IDSAppleCareSignIDSIn
IDSAppleCareSignIn.m
IDSAppleCareSignIDSOut
IDSAppleCareSetDaemonDisconnectedBlock
com.apple.registration
saveviewRegTimeout
IDSiCloudSignIn
IDSiCloudSignIn.m
IDSiCloudSignOut
IDSiCloudUpdate
IDSiCloudModify
IDSiTunesSignIn
IDSiTunesSignOut
IDSDaemonRequestTimer.m
The request context map should be empty after canceling all countdowns.
+[_IDSService serviceWithIdentifier:commands:manuallyAckMessages:delegateContext:completion:]
-[_IDSService initWithService:commands:manuallyAckMessages:delegateContext:]
IDSSimulatorSupportRegisterDataHandler
v32@?0@"NSString"8@"NSData"16@"NSString"24
Couldn't soft link IDSSimulatorSupportRegisterDataHandler(). Just failing here
IDSSimulatorSupportUnregisterDataHandler
Couldn't soft link IDSSimulatorSupportUnregisterDataHandler(). Just failing here
Failed to deserialize data %p. error: %@
options
senderDeviceID
type
pbType
pbIsResponse
Failed to create IDSProtobuf from data %p
fileData
fileName
fileAttrs
Failed to create staging directory at %@ from data %p:%@
Failed to write file data to %@ from data %@: %@
Failed to set file attributes for %@ to %@ from data %p: %@
ackedMsgID
ackedSubService
v16@?0@"<IDSServiceDelegate>"8
IDSSimulatorSupportSendDataWithOptions
Failed to to archive ack dict %@ for message %@ on service %@ subservice %@
Failed to send ack for message %@ on service %@ subservice %@
v36@?0B8@"NSString"12@"NSError"20@"NSDictionary"28
Couldn't soft link IDSSimulatorSupportSendData(). Just failing here
-[_IDSService addDelegate:queue:]
v32@?0@8@"IDSConnection"16^B24
-[_IDSService _callDelegatesRespondingToSelector:withPreCallbacksBlock:callbackBlock:postCallbacksBlock:group:]
-[_IDSService daemonConnected]
-[_IDSService OTRTestCallback:time:error:]
-[_IDSService didSwitchActivePairedDevice:forService:wasHandled:]
v16@?0@"NSString"8
-[_IDSService _activeDeviceForUniqueID:]
-[_IDSService _callLinkedDevicesChanged]
-[_IDSService _logConnectionMap]
v32@?0@"NSString"8@"IDSConnection"16^B24
-[_IDSService _tearDownConnectionForUniqueID:]
-[_IDSService _callIsActiveChanged]
-[_IDSService accountController:accountAdded:]
-[_IDSService accountController:accountRemoved:]
-[_IDSService accountController:accountEnabled:]
-[_IDSService accountController:accountDisabled:]
-[_IDSService connection:incomingOpportunisticData:withIdentifier:fromID:context:]
-[_IDSService connection:incomingData:fromID:context:]
-[_IDSService connection:incomingGroupData:fromID:context:]
-[_IDSService connection:incomingAccessoryData:fromID:context:]
-[_IDSService connection:incomingAccessoryReportMessage:accessoryID:controllerID:context:]
-[_IDSService connection:incomingInvitation:fromID:context:]
-[_IDSService connection:incomingInvitationUpdate:fromID:context:]
-[_IDSService connection:incomingMessage:fromID:context:]
/Library/IdentityServices/files/
/Library/IdentityServices/incomingfiles/
v16@?0q8
-[_IDSService connection:incomingProtobuf:fromID:context:]
service:account:fromID:context:
-[_IDSService connection:incomingTopLevelMessage:fromID:messageContext:]
-[_IDSService connection:incomingPendingMessageFromID:context:]
-[_IDSService connection:incomingEngramMessage:fromID:context:]
IDSIncomingMessageDecryptedData
v36@?0@"NSData"8@"ENGroup"16@"NSError"24B32
-[_IDSService connection:isActiveChanged:]
-[_IDSService connection:devicesChanged:]
-[_IDSService _callDelegatesForDevicesChanged]
-[_IDSService connection:nearbyDevicesChanged:]
-[_IDSService connection:connectedDevicesChanged:]
-[_IDSService connection:messageIdentifier:alternateCallbackID:updatedWithResponseCode:error:lastCall:messageContext:]
-[_IDSService connection:identifier:alternateCallbackID:willSendToDestinations:skippedDestinations:registrationPropertyToDestinations:]
-[_IDSService connection:identifier:didSendWithSuccess:error:context:]
-[_IDSService connection:identifier:fromID:hasBeenDeliveredWithContext:]
-[_IDSService connection:didFlushCacheForRemoteURI:fromURI:guid:]
-[_IDSService connection:account:sessionInviteReceived:fromID:transportType:options:context:messageContext:]
-[_IDSService connection:account:receivedGroupSessionParticipantUpdate:]
-[_IDSService connection:account:receivedGroupSessionParticipantDataUpdate:]
-[_IDSService connection:didSendOpportunisticDataWithIdentifier:toIDs:]
-[_IDSService isPretendingToBeFull]
-[_IDSService setPretendingToBeFull:]
-[_IDSService serviceDomain]
-[_IDSService iCloudAccount]
-[_IDSService _filteredAccountsFrom:]
-[_IDSService accounts]
-[_IDSService internalAccounts]
-[_IDSService devices]
-[_IDSService serviceProperties]
-[_IDSService _loadCachedLinkedDevices]
-[_IDSService _updateLinkedDevicesWithDevicesInfo:]
-[_IDSService linkedDevicesWithRelationship:]
B16@?0@"IDSPseudonym"8
v16@?0@8
_IDSService.m
completion
Pseudonyms
ReportApprovedTemp
-[_IDSService updateSubServices:forDevice:]
-[_IDSService resendSubServicesToDaemonForCurrentDevice]
-[_IDSService setProtobufAction:forProtobufType:isResponse:]
-[_IDSService protobufActionForType:isResponse:]
com.apple.private.alloy.idscredentials
com.apple.private.alloy.maps.eta
com.apple.private.alloy.nearby
com.apple.private.alloy.willow
B16@?0@"IDSAccount"8
q24@?0@"IDSAccount"8@"IDSAccount"16
device:
-[_IDSService sendOpportunisticData:options:identifier:error:]
-[_IDSService _sendSimulatorMessage:fromAccount:toDestinations:priority:options:identifier:error:]
Failed to delete file at %@ after sending
simID
originalSimDestination
_IDSService
-[_IDSService _sendSimulatorProtobuf:fromAccount:toDestinations:priority:options:identifier:error:]
IDSSimulatorSupportGetCurrentConnectedSimulatorID
Out of space
-[_IDSService _sendSimulatorData:fromAccount:toDestinations:priority:options:identifier:error:]
-[_IDSService sendAccessoryData:toAccessoryID:accessToken:options:identifier:error:]
Could not find valid account
Service is not enabled for Invitations
-[_IDSService sendData:priority:options:identifier:error:]
-[_IDSService sendServerMessage:command:fromAccount:]
-[_IDSService cancelIdentifier:error:]
-[_IDSService getProgressUpdateForIdentifier:error:]
-[_IDSService uriForFromID:]
+[_IDSService deviceForFromID:fromDevices:]
-[_IDSService deviceForFromID:]
-[_IDSService linkedDeviceForFromID:withRelationship:]
-[_IDSService devicesForBTUUID:]
-[_IDSService deviceForUniqueID:]
-[_IDSService setPreferInfraWiFi:]
-[_IDSService setLinkPreferences:]
-[_IDSService startOTRTest:]
-[_IDSService testCloudQRConnection]
Sending non-file resource unsupported
Unable to link or copy file
resourceTransferMessageDict
com.apple.identityservices.send
-[_IDSService sendAheadGroup:priority:options:identifier:completion:]
-[_IDSService sendAheadGroup:priority:options:identifier:completion:]_block_invoke
Destination device is not active for this account
v24@?0@"NSData"8@"NSError"16
-[_IDSService sendAckForMessageWithContext:]
Unable to create stream connection with destination
Unable to create datagram channel with destination
Unable to create datagram channel with socket descriptor
-[_IDSService groupContextController:didCreateGroup:]
-[_IDSService groupContextController:accountsForAlises:]
AbortIfNoSandbox
<%@: %p change: %@; updateFlags: %@; pseudonym: %@>
Feature disabled
Server error
Internal server error
Invalid URI
Missing entitlements
Unable to send request
Pseudonym limit reached
Request failed
Max number of in flight provisions reached
.XXXX
addressbooksyncd
amsaccountsd
assistantd
Assistive Control
audioDeviceTest
audioperftest
Bridge
CallHistorySyncHelper
Carousel
carouseluitrigger
cloudpaird
com.apple.accessibility.AccessibilityUIServer
com.apple.audio.virtualaudio.IntegrationTests.xctrunner
com.apple.FTLivePhotoService
companion_proxy
companionappd
companioncamerad
companionfindlocallyd
companionmessagesd
coreautomationd
coreduetd
diagnosticextensionsd
ekgremlin
eventkitsyncd
fmflocatord
gamed
homeutil
HomeKitTestHostApp
IDSInvitationTestApp
idsrelay
idstool
IMNotificationServiceAgent
IntegrationTests-Runner
iosdiagnosticsd
iTester
itesterd.mobile
itunescloudd
livabilityd
loctilestool
mediaremoted
Messages Catalyst
MessagesViewService
minilab
mobiletimerd
mstreamd
Music
nanoappregistryd
nanobackupd
nanofindlocallyd
nanomediaremotelinkagent
nanomessagesd
nanonewscd
nanonewsgd
nanopassd
nanophoned
nanophotosd
nanoprefsyncd
nanoregistryd
NanoSettings
nanosubridged
nanosystemsettingsd
nanotimekitcompaniond
nanotimekitd
NPKCompanionAgent
nptocompaniond
NTKFaceSnapshotService
pairedunlockd
Pineboard
Preferences
proactiveeventtrackerd
ProtectedCloudKeySyncing
ProxiedCrashCopier
ratescalar
remotemediaservicesd
resourcegrabberd
SafeView
ScreenSharingServer
screenshotsyncd
searchpartyuseragent
seserviced
Setup
sosd
SoundBoard
SpringBoard
SSInvitationAgent
subridged
symptomsd-diag
sysdiagnose
taptoradard
timed
tipsd
ToolChestAgent
tursd
UnitTests-Runner
utilitybeltd
wifid
WirelessRadioManagerd
xctest
Added
Removed
Updated
Unknown
IDSTransactionLogMessageAccountUniqueIDKey
IDSTransactionLogMessageFromIDKey
IDSTransactionLogMessageLoginIDKey
IDSTransactionLogMessageServiceNameKey
IDSTransactionLogMessageDictionaryValueKey
IDSTransactionLogMessageDataValueKey
com.apple.springboard
service-cache-request
transactionID
is-springboard
cache
cached-id-status-query
respect-expiry
id-status-query
force
bypass-limit
remote-device-status-query
destination
disallow-query
IDSPhoneSubscriptionSelectorErrorDomain
subSlot
subLableID
<%@: %p; slot: %d; labelID: %@>
expiration
selected
<%@: %p; URI: %@, expirationDate: %@, selected: %@>
@"IDSXPCDaemonController"16@?0@"NSObject<OS_dispatch_queue>"8
-[IDSPhoneSubscriptionSelector requestSelectedSubscriptionsWithCompletion:]
v16@?0@"<IDSXPCRegistration>"8
-[IDSPhoneSubscriptionSelector selectSubscription:withCompletion:]
Subscription info is nil
-[IDSPhoneSubscriptionSelector unselectSubscription:withCompletion:]
-[IDSPhoneSubscriptionSelector setSelectedSubscriptions:withCompletion:]
Subscription infos is nil
-[IDSPhoneSubscriptionSelector removeTemporaryPhoneAlias:withCompletion:]
Alias is nil
-[IDSPhoneSubscriptionSelector disableTemporaryPhoneAlias:withCompletion:]
-[IDSPhoneSubscriptionSelector enableTemporaryPhoneAlias:withCompletion:]
-[IDSPhoneSubscriptionSelector requestUnselectedTemporaryPhoneAliasesWithError:]
v24@?0@"<IDSXPCRegistration>"8@"NSError"16
-[IDSPhoneSubscriptionSelector selectSubscription:withError:]
-[IDSPhoneSubscriptionSelector unselectSubscription:withError:]
-[IDSPhoneSubscriptionSelector setSelectedSubscriptions:withError:]
-[IDSPhoneSubscriptionSelector removeTemporaryPhoneAlias:withError:]
-[IDSPhoneSubscriptionSelector enableTemporaryPhoneAlias:withError:]
-[IDSPhoneSubscriptionSelector disableTemporaryPhoneAlias:withError:]
Unknown account type
Unknown service
Empty user name
Empty service name
Process not entitled
Component disconnected
Component crashed
Remote user isn't registered
Attachment send failed
Encryption failed
Message send failed
Invalid caller id
Payload is too big to send
Unknown exception
Timed out
The destination device for this message was not connected before the timeout fired
This message was written into the connection, but did not receive an ack.  Check Bluetooth conditions and that your process is not hung on the receiver.
This message was a non-waking message and the destination device for this message did not wake before the timeout fired
Replaced
Device Unpaired
Bluetooth required
No space
Cannot read resource
Data protection class unavailable
Remote device is locked.
Database filled up
Revision lock forced failure
Service version not compatible
Destination device is no longer the active device
Destination device for this message was inactive for an extended period
A over C encryption is not available at this time
Class A encryption keys are not available at this time
Send to Tinker default paired device
Phone number not bounded to an Apple ID is not supported for family services.
No error
Invalid state
Operation failed
com.apple.Transport
IDSService
QRAllocator
IDSDeviceConnection
IDSDataChannels
IDSLocalSetup
IDSReportSpam
NRPairing
com.apple.IDS
transactionLog
DaemonController
DaemonListener
IDSConnection-oversize
IDSDirectMessagingConnection
Connection
continuity
IDSSession
_IDSGroupSession
_IDSGroupSession-oversize
DaemonProxy
GUIDTRACE
Accounts
IDSAccountController
IDSDevice
ServiceAvailability
IDSRealTimeEncryptionProxy
IDQuery
_IDSSession
fromID
<IDSSentInvitation %p>: uniqueID %@ senderMergeID %@ state %ld expirationDate %@ destination %@
<IDSReceivedInvitation %p>: uniqueID %@ senderMergeID %@ state %ld expirationDate %@ destination %@
IDSXPCConnectionErrorDomain
IDSXPCConnectionTransactionUUID
Missing entitlement "%@"
v32@?0@"NSUUID"8@?<v@?>16^B24
Timed-out expecting response for @selector(%@)
-[_IDSDevice initWithDictionary:]
-[_IDSDevice uniqueID]
-[_IDSDevice uniqueIDOverride]
-[_IDSDevice productBuildVersion]
-[_IDSDevice productName]
-[_IDSDevice productVersion]
-[_IDSDevice modelIdentifier]
-[_IDSDevice name]
-[_IDSDevice service]
-[_IDSDevice fullDescription]
[%@ %p:   Name: %@   Model: %@   UniqueID: %@   UniqueID Override: %@   Push Token: %@   Service: %@   Handles: %@   linkedUserURIs: %@   nsuuid: %@   relationship: %lu   supportsSMSRelay: %@   supportsMMSRelay: %@   supportsPhoneCalls: %@   deviceColor: %@   enclosureColor: %@  local: %@   defaultPairedDevice: %@   isNearby: %@  isConnected: %@  isCloudConnected: %@  isActive: %@  isLocallyPaired: %@  build: %@   pairing protocol: %lu   min compatibility version: %lu   max compatibility version: %lu]
-[_IDSDevice description]
[%@ %p:   Name: %@    Model: %@   UniqueID: %@   UniqueID Override: %@   Push Token: %@   Service: %@   nsuuid: %@   relationship: %lu    supportsSMSRelay: %@   supportsMMSRelay: %@   supportsPhoneCalls: %@   deviceColor: %@   enclosureColor: %@  local: %@   defaultPairedDevice: %@   isNearby: %@  isConnected: %@  isActive: %@  isLocallyPaired: %@  isHSATrusted: %@  build: %@   pairing protocol: %lu   min compatibility version: %lu   max compatibility version: %lu]
all 0s
[%p uid: %@, tok: %@, near: %@, conn: %@, active: %@, rel: %lu]
-[_IDSDevice isNearby]
-[_IDSDevice isConnected]
-[_IDSDevice isCloudConnected]
-[_IDSDevice locallyPresent]
-[_IDSDevice isDefaultPairedDevice]
-[_IDSDevice isLocallyPaired]
-[_IDSDevice isActive]
-[_IDSDevice relationship]
-[_IDSDevice pairingProtocolVersion]
-[_IDSDevice minCompatibilityVersion]
-[_IDSDevice maxCompatibilityVersion]
-[_IDSDevice serviceMinCompatibilityVersion]
-[_IDSDevice linkedUserURIs]
-[_IDSDevice setNSUUID:]
-[_IDSDevice nsuuid]
-[_IDSDevice stableBluetoothIdentifier]
-[_IDSDevice supportsiCloudPairing]
-[_IDSDevice supportsTethering]
-[_IDSDevice supportsHandoff]
-[_IDSDevice supportsApplePay]
-[_IDSDevice supportsSMSRelay]
-[_IDSDevice supportsMMSRelay]
-[_IDSDevice supportsPhoneCalls]
-[_IDSDevice deviceType]
-[_IDSDevice deviceColor]
-[_IDSDevice enclosureColor]
-[_IDSDevice isHSATrusted]
-[_IDSDevice pushToken]
-[_IDSDevice identities]
-[_IDSDevice _addIdentity:]
-[_IDSDevice _setAccount:]
-[_IDSDevice _setService:]
com.apple._IDSDevice.notification
_IDSIDQueryControllerConnectionQueue
_IDSIDQueryControllerQueue
set-id-status
v40@?0@"NSDictionary"8@"NSString"16@"NSString"24@"NSError"32
    "%@" =     (
        %@
    );
-[IDSDevice _initWithDictionary:]
-[IDSDevice initWithDictionary:]
-[IDSDevice _internal]
event-type
connected-link
disconnected-link
disconnected-link-ids
disconnected-link-uuids
disconnected-reason
rat-changed
default-link
default-link-id
rssi-key
preconnection-data-key
mtu-changed
somask-changed
info-report-events-key
error-key
encryption-info-key
membership-changed-reason-key
stat-response-key
session-info-response-key
probing-response-key
debug-data-type-key
debug-data-key
preference-default-link-selection
preference-baseband-registration
preference-baseband-queue-flush-payload
preference-baseband-queue-flush
preference-pre-connection-data
preference-wait-for-pre-connection-data
preference-update-qos
preference-update-qos-is-good
preference-discard-link-ids
preference-query-information
preference-max-bitrate
preference-needs-encryption-info
preference-needs-force-update-encryption-info
preference-set-debugdata-type-key
preference-set-debugdata-key
preference-remote-device-version-key
baseband-registration-key
baseband-notification-operation-key
max-bitrate-key
wifi-local-attributes-changed-key
cellular-local-attributes-changed-key
<LinkContext %p> linkID %d (UUID:%@, QRSessionID:%@) networkType %u connectionType %ld maxMTU %u RATType %lu maxBitrate %u (remote networkType %u connectionType %ld RATType %lu), relay(provider:%d, token:%dB) serverIsDegraded: %@ localLinkFlags 0x%x remoteLinkFlags 0x%x, localDataSoMask: %u, remoteDataSoMask: %u, virtualRelayLink: %@, localInterfaceName: %@
DatagramChannelFunctionalLogging
<%p> channelFD %d connected %@ eventHandler %p readHandler %p withOptions %p auto %@
<%p> socket %d connected %@ eventHandler %p readHandler %p withOptions %p connetion %@
<%p> socket %d connected %@ eventHandler %p readHandler %p withOptions %p
none
_internal->_MKIArrivalTime
IDSFoundation
got CT(packet counting) option
kClientChannelMetadataType_CountPacketKey  should be 1 byte, not %u bytes, field: %u
kClientChannelMetadataType_GenerationCounterLSBKey should be 1 byte, not %u bytes, field: %u
got probeGroupID %u
kClientChannelMetadataType_ProbeGroupIDKey should be 2 bytes, not %u bytes, field: %u
linkStatus
IDS couldn't receive the response for the session info request.
read sanity check failed: datagramSize %ld metadataSize %ld dataOffset %ld
v24@?0^@8I16i20
-[IDSDatagramChannel start]
IDSDataChannels.m
_internal->_readHandler
_internal->_eventHandler
Failed to send write bytes (%d)
No connection
Failed to send all bytes (%d < %d)
Connection terminated
Failed to send (errno %d)
-[IDSDatagramChannel readyToRead]
Could not serialize provided metadata.
The serialized metadata was greater than the max slot size allowed to send over the channel
_internal->_firstPacketArrivalTimeForMKI
IDSDataChannelsQueue
%@-idswake
v24@?0@"NSObject<OS_xpc_object>"8@"NSObject<OS_xpc_object>"16
v16@?0@"NSMutableDictionary"8
-[IDSDeviceConnection initSocketWithDevice:options:completionHandler:queue:]
-[IDSDeviceConnection initStreamWithDevice:options:completionHandler:queue:]
Unable to create input and output stream
-[IDSDeviceConnection _internal]
FTPasswordManager
IDSGetServiceUserIDsWithCompletionBlock
IDSHomeKit.m
IDSGetAdminAccessTokensWithCompletionBlock
IDSGetConsentTokensWithCompletionBlock
IDSGetUserAccessTokensWithCompletionBlock
IDSRefreshUserAccessTokensWithCompletionBlock
IDSIDQueryControllerQueue
-[_IDSContinuity initWithDelegate:queue:delegateContext:]
-[_IDSContinuity startAdvertisingOfType:withData:withOptions:]
-[_IDSContinuity stopAdvertisingOfType:]
-[_IDSContinuity startScanningForType:withData:mask:peers:]
-[_IDSContinuity startScanningForType:withData:mask:]
-[_IDSContinuity startScanningForType:withData:mask:peers:boostedScan:duplicates:]
-[_IDSContinuity startScanningForType:withData:mask:boostedScan:duplicates:]
-[_IDSContinuity stopScanningForType:]
-[_IDSContinuity startTrackingPeer:forType:]
-[_IDSContinuity stopTrackingPeer:forType:]
-[_IDSContinuity _handleReconnect]
v16@?0@"<IDSContinuityDelegate>"8
-[_IDSContinuity _callDelegateWithBlock:]
nbuffer_append
IDSNBuffer.c
nbuffer_get_free_space(buf) >= size
nbuffer_ensure_freespace
-[_IDSSession _initWithAccount:destinations:transportType:connectionCountHint:needsToWaitForPreConnectionData:uniqueID:delegateContext:]
com.apple.private.alloy.phonecontinuity
-[_IDSSession _initWithAccount:destinations:options:delegateContext:]
-[_IDSSession initWithAccount:destinations:transportType:uniqueID:delegateContext:]
-[_IDSSession initWithAccount:destinations:transportType:delegateContext:]
-[_IDSSession initWithAccount:destinations:options:delegateContext:]
-[_IDSSession daemonDisconnected]
-[_IDSSession _broadcastNewSessionToDaemon]
-[_IDSSession _callDelegateWithBlock:]
-[_IDSSession setDelegate:queue:]
v16@?0@"<IDSSessionDelegate>"8
-[_IDSSession socket]
-[_IDSSession uniqueID]
-[_IDSSession _setupUnreliableSocketPairConnection]
-[_IDSSession _setupSocketPairToDaemon]
Error creating socketpair
Error getting socket flags from socketFD[0]
Error setting O_NONBLOCK flag on socketFD[0]
Error getting socket flags from socketFD[1]
Error setting O_NONBLOCK flag on socketFD[1]
Error setting SO_NOSIGPIPE on socketFD[0]
Error setting SO_NOSIGPIPE on socketFD[1]
Error setting SO_SNDBUF size on socketFD[0]
Error setting SO_SNDBUF size on socketFD[1]
Error setting SO_RCVBUF size on socketFD[0]
Error setting SO_RCVBUF size on socketFD[1]
socket
session-socket
socket-type
raw-socket
-[_IDSSession sendAllocationRequest:]
-[_IDSSession sendInvitationWithOptions:]
-[_IDSSession sendInvitationWithData:declineOnError:]
-[_IDSSession cancelInvitation]
-[_IDSSession cancelInvitationWithData:]
-[_IDSSession cancelInvitationWithRemoteEndedReasonOverride:]
-[_IDSSession acceptInvitation]
-[_IDSSession acceptInvitationWithData:]
-[_IDSSession declineInvitation]
-[_IDSSession declineInvitationWithData:]
-[_IDSSession reconnectSession]
-[_IDSSession endSession]
-[_IDSSession endSessionWithData:]
-[_IDSSession sendSessionMessage:]
-[_IDSSession sendSessionMessage:toDestinations:]
-[_IDSSession setAudioEnabled:]
-[_IDSSession getAudioEnabled]
-[_IDSSession setMuted:]
-[_IDSSession getMuted]
-[_IDSSession setPreferences:]
-[_IDSSession getPreferences]
-[_IDSSession setInviteTimeout:]
-[_IDSSession inviteTimeout]
-[_IDSSession sessionEndedReason]
-[_IDSSession sendData:error:]
-[_IDSSession sessionAcceptReceived:fromID:withData:]
-[_IDSSession sessionDeclineReceived:fromID:withData:]
-[_IDSSession sessionCancelReceived:fromID:withData:]
-[_IDSSession sessionMessageReceived:fromID:withData:]
-[_IDSSession sessionEndReceived:fromID:withData:]
-[_IDSSession session:invitationSentToTokens:shouldBreakBeforeMake:]
-[_IDSSession allocationDone:sessionInfo:]
-[_IDSSession sessionStarted:]
-[_IDSSession sessionEnded:withReason:error:]
-[_IDSSession session:audioEnabled:]
-[_IDSSession session:muted:]
session-initial-link-type
-[_IDSSession session:didReceiveReport:]
-[_IDSSession connection:didReceiveData:]
v20@?0@"NSArray"8B16
IDSInternalQueue
IDSInternalQueueControllerContext
com.apple.identityservices.error
dictionary
TTLItem
batch-query-limit
batch-query-time-limit
batch-query-use-death-timer
batch-query-time-to-live
batch-query-interval
batch-query-first-interval
batch-query-size
batch-query-max
-[IDSRealTimeEncryptionProxy initWithAccount:]
__kIDSServiceMonitorAvailabilityDidChangeNotification
kiMessageChangedNotification
kFaceTimeChangedNotification
kCallingChangedNotification
kScreenSharingChangedNotification
<%@: %p service:%@, serviceAvailability: %llu>
IDSTransactionLogTaskHandler.m
Unexpected task type
Abstract method
v24@?0@"<NSSecureCoding>"8@"NSError"16
v36@?0@"NSArray"8@"<NSSecureCoding>"16B24@"NSError"28
v32@?0@"NSArray"8@"NSArray"16@"NSError"24
v24@?0@"IDSTransactionLogTaskHandlerAccountInfo"8@"NSError"16
_delegate
IDSContinuity
IDSDaemonProtocol
NSObject
IDSDaemonController
IDSDaemonControllerForwarder
IDSXPCInternalTesting
IDSXPCInternalTestingInterface
IDSXPCReunionSync
IDSXPCReunionSyncInterface
IDSDirectMessageConnection
IDSGroupSessionDataCryptor
NSSecureCoding
NSCoding
NSCopying
IDSGroupSession
IDSXPCRegistration
IDSXPCRegistrationInterface
IDSServiceAvailabilityController
IDSServiceContainer
IDSDaemonListenerProtocol
IDSDaemonListener
_IDSRealTimeEncryptionProxy
IDSActivityInfo
IDSActivityUpdate
IDSActivityMonitor
_IDSActivityMonitorXPCConnectorXPCListener
IDSInvitationManager
IDSServiceDelegateInvitation
IDSServiceDelegate
IDSServerMessagingOptions
IDSServerMessagingOutgoingContext
IDSServerMessagingIncomingContext
IDSServerMessagingController
IDSXPCServerMessagingClient
IDSGroupContextNotifyingObserver
IDSGroupContextObserverDaemonProtocol
IDSSignInServiceUserInfo
IDSSignInServiceUserStatus
IDSSignInControllerAccountDescription
IDSSignInController
IDSAccountRegistrationDelegate
IDSAccountControllerDelegate
FaceTimeSupport
IDSSession
IDSCT
IDSAppleCareDaemonResponseListener
IDSBatchIDQueryController
IDSGroupEncryptionKeyMaterialCache
IDSConnection
Deprecated
IDSGroupSessionBroadcastParameter
IDSXPCPairing
IDSXPCPairingInterface
IDSDaemonResponseHandler
IDSTransactionLogTask
IDSTransactionLogSyncTask
IDSFamilyService
_IDSPasswordManager
IDSGroupSessionUnicastParameter
IDSXPCDaemon
IDSXPCDaemonInterface
IDSXPCDaemonClient
IDSXPCDaemonClientInterface
_IDSCompletionHandler
IDSPairedDeviceManager
IDSCarrierTokenRequestParameters
IDSCarrierToken
IDSAuthenticationSigningResult
IDSPhoneCertificateVendor
IDSRegistrationControlDaemonResponseListener
IDSXPCConnectionRemoteObjectPromise
IDSAccountController
_IDSGroupSession
IDSBaseSocketPairConnectionDelegate
IDSGroupContextController
IDSTransactionLogTaskHandlerDelegate
IDSGroupContextNotifyingObserverDelegate
IDSGroupContextControllerContent
IDSQuickRelayFixedTokenAllocator
_IDSConnection
IDSAccountDelegate
IDSDirectMessageConnectionDelegate
IDSSendXPCProtocol
IDSGroupContextDaemonProtocol
IDSGroupContextDataSourceDaemonProtocol
IDSGroupContextCacheMiddlewareDaemonProtocol
IDSDaemonProtocolController
IDSQuickSwitchAcknowledgementTracker
IDSLocalPairingAddPairedDeviceInfo
_IDSDeviceConnectionActiveMap
_IDSDeviceConnection
_IDSAccountController
IDSDictionaryInvitationContext
IDSInvitationContext
IDSXPCDaemonController
IDSLocalPairingIdentityDataErrorPair
IDSLocalPairingRecord
IDSLocalPairingPairedDeviceRecord
IDSLocalPairingLocalDeviceRecord
IDSAccount
_IDSGenericCompletionHandler
IDSHomeKitManager
IDSReportiMessageSpamDaemonResponseListener
IDSGroupSessionUnicastConnector
_IDSAccount
IDSXPCPairedDeviceManager
IDSXPCPairedDeviceManagerInterface
IDSService
IDSDaemonRequestContext
IDSDaemonRequestTimer
IDSAutoCleanup
_IDSService
IDSGroupContextControllerDelegate
IDSConnectionDelegatePrivate
IDSConnectionDelegate
IDSServicePseudonymChange
IDSTransactionLogMessage
IDSTransactionLogDataMessage
IDSTransactionLogDictionaryMessage
IDSPhoneSubscription
IDSPhoneTemporaryAliasDescription
IDSPhoneSubscriptionSelector
IDSTransportLog
IDSLogging
IDSInvitation
IDSSentInvitation
IDSReceivedInvitation
IDSXPCConnection
NSXPCConnectionDelegate
IDSXPCConnectionTimeoutProxy
_IDSDevice
_IDSIDQueryController
IDSXPCOpportunistic
IDSXPCOpportunisticInterface
IDSDevice
_IDSDataChannelLinkContext
IDSDataChannelLinkContext
_IDSDatagramChannel
IDSDatagramChannel
_IDSXPCCheckInInfo
_IDSXPCCheckinManager
IDSDeviceConnection
IDSXPCActivityMonitor
IDSXPCActivityMonitorClient
IDSXPCActivityMonitorInterface
IDSIDQueryController
_IDSContinuity
_IDSSession
Additions
IDSGroupContextDataSource
ENGroupContextDataSource
ENGroupContextCacheMiddleware
ENGroupContextMiddleware
IDSInternalQueueController
IDSServerMessagingMessage
IDSXPCServerMessaging
IDSXPCServerMessagingInterface
_IDSActivityMonitorXPCConnector
_IDSBatchIDQueryController
IDSIDQueryControllerDelegate
IDSRealTimeEncryptionProxy
IDSServiceMonitor
IDSTransactionLogTaskHandlerAccountInfo
IDSTransactionLogTaskHandler
IDSTransactionLogBaseTaskHandler
IDSTransactionLogSyncTaskHandler
sharedInstance
assertQueueIsNotCurrent
utilities
callStackSymbols
init
initWithDelegate:queue:delegateContext:
performBlock:
performBlock:waitUntilDone:
dealloc
state
startAdvertisingOfType:withData:withOptions:
stopAdvertisingOfType:
startScanningForType:withData:mask:peers:withOptions:
startScanningForType:withData:mask:withOptions:
startScanningForType:withData:mask:peers:
startScanningForType:withData:mask:
startScanningForType:withData:mask:peers:withOptions:boostedScan:duplicates:
startScanningForType:withData:mask:withOptions:boostedScan:duplicates:
startScanningForType:withData:mask:peers:boostedScan:duplicates:
startScanningForType:withData:mask:boostedScan:duplicates:
stopScanningForType:
initWithDelegate:queue:
startScanningForType:withData:peers:withOptions:
startScanningForType:withData:withOptions:
startScanningForType:withData:mask:peers:withOptions:boostedScan:
startScanningForType:withData:mask:withOptions:boostedScan:
connectToPeer:
disconnectFromPeer:
startTrackingPeer:
stopTrackingPeer:
startTrackingPeer:forType:
stopTrackingPeer:forType:
.cxx_destruct
_internal
Tq,R
continuity
_performBlock:wait:
_setAutoReconnect:
isEqual:
class
self
performSelector:
performSelector:withObject:
performSelector:withObject:withObject:
isProxy
isKindOfClass:
isMemberOfClass:
conformsToProtocol:
respondsToSelector:
retain
release
autorelease
retainCount
zone
hash
superclass
description
debugDescription
TQ,R
T#,R
T@"NSString",R,C
setupAccountWithLoginID:serviceName:accountType:accountConfig:authToken:password:transactionID:
addAccountWithLoginID:serviceName:uniqueID:accountType:accountInfo:
_removeAccount:
_removeAndDeregisterAccount:
updateAccount:withAccountInfo:
enableAccount:
disableAccount:
authTokenChanged:forAccount:
passwordChanged:forAccount:
authenticationChangedForAccount:
authenticateAccount:
passwordUpdatedForAccount:
updateAuthorizationCredentials:token:forAccount:
validateProfileForAccount:
addAliases:toAccount:
removeAliases:fromAccount:
validateAliases:forAccount:
unvalidateAliases:forAccount:
provisionPseudonymForURI:onAccount:withProperties:requestProperties:requestUUID:
renewPseudonym:onAccount:forUpdatedExpiryEpoch:requestProperties:requestUUID:
revokePseudonym:onAccount:requestProperties:requestUUID:
registerAccount:
unregisterAccount:
forceRemoveAccount:
_reregisterAndReidentify:account:
deactivateAndPurgeIdentifyForAccount:
hardDeregister
triggerFinalDeregister
iCloudSignInHackWithUserName:password:
iCloudSignOutHack
iCloudSignInWithUserName:authToken:password:accountInfo:accountStatus:handles:
iCloudUpdateForUserName:accountInfo:
iCloudModifyForUserName:
iCloudSignOut
iTunesSignInWithUserName:authToken:password:accountInfo:accountStatus:handles:
iTunesSignOut
updateUserWithOldUserName:newUserName:
kickGetDependentForAccount:
reRegisterWithUserID:action:service:
repairAccounts
getRegisteredIdentities
setPassword:forUsername:onService:
authenticatePhoneWithRequestUUID:
generatePhoneAuthenticationSignatureOverData:withRequestUUID:
requestCarrierTokenForSubscriptionSource:IMEI:carrierNonce:requestUUID:
setPhoneUserSubscriptionSource:withRequestUUID:
fetchPhoneUserSubscriptionSourceWithRequestUUID:
startLocalSetup
stopLocalSetup
localSetupUnpair
localSetupUnpairStart
localSetupCompleted
addPairedDevice:
connectPairedDevice:
deletePairedDevice:
getDeliveryStats
initialLocalSyncStartedForServices:
initialLocalSyncCompletedForServices:
setAllowedTrafficClasses:
dropAllMessagesWithoutAnyAllowedClassifier
reunionSyncStartedForServices:requestID:
reunionSyncCompletedForServices:requestID:
clearIDSState
updateSubServices:forService:deviceUniqueID:
setPairedDeviceInfo:
incomingAccountSyncMessage:
regenerateRegisteredIdentity
sendOpportunisticData:onService:usingAccountWithUniqueID:withIdentifier:options:
cancelOpportunisticDataOnService:withIdentifier:
sendCertifiedDeliveryReceipt:serviceName:
sendMessageWithSendParameters:
cancelItemWithIdentifier:service:
getProgressUpdateForIdentifier:service:
sendPersistedFile:userInfo:toDestinations:usingAccountWithUniqueID:identifier:
sendServerMessage:command:usingAccountWithUniqueID:
setPreferInfraWiFi:service:
setLinkPreferences:service:
startOTRTest:priority:
testCloudQRConnection:
failedDecryptingMessage:reason:forGroupID:onService:
acknowledgeOutgoingMessageWithGUID:alternateCallbackID:forAccountWithUniqueID:
acknowledgeMessageWithGUID:forAccountWithUniqueID:broadcastTime:messageSize:priority:
acknowledgeMessageWithStorageGUID:realGUID:forAccountWithUniqueID:broadcastTime:messageSize:priority:broadcastID:connectionType:
sendAppAckWithGUID:toDestination:forAccountWithUniqueID:connectionType:
setListenerServices:commands:capabilities:
registerForNotificationsOnServices:
xpcObject:objectContext:
openSocketWithOptions:
closeSocketWithOptions:
setNSUUID:onDeviceWithUniqueID:forService:
setupNewSessionWithConfiguration:
cleanupSession:
cleanupSessionWithInstanceID:
sendInvitation:withOptions:
sendInvitation:withData:declineOnError:
cancelInvitation:
cancelInvitation:withData:
cancelInvitation:withRemoteEndedReasonOverride:
acceptInvitation:
acceptInvitation:withData:
declineInvitation:
declineInvitation:withData:
reconnectSessionWithUniqueID:
endSession:
endSession:withData:
sendSessionMessage:toDestinations:forSessionWithUniqueID:
setAudioEnabled:forSessionWithUniqueID:
setMuted:forSessionWithUniqueID:
setPreferences:forSessionWithUniqueID:
setInviteTimetout:forSessionWithUniqueID:
acknowledgeSessionID:clientID:
sendAllocationRequest:options:
updateMembers:forGroup:sessionID:withContext:messagingCapabilities:triggeredLocally:
manageDesignatedMembers:forGroup:sessionID:withType:
removeParticipantIDs:forGroup:sessionID:
updateParticipantData:forGroup:sessionID:withContext:
joinGroupSession:withOptions:
leaveGroupSession:participantInfo:
requestActiveParticipantsForGroupSession:
registerPluginForGroup:options:
unregisterPluginForGroup:options:
requestEncryptionKeyForGroup:participants:
setRequiredCapabilities:requiredLackOfCapabilities:forSessionWithUniqueID:
createAliasForParticipantID:salt:sessionID:
getParticipantIDForAlias:salt:sessionID:
setupRealtimeEncryptionController:forAccountWithID:
sendRealTimeMediaPrekey:toGroup:
requestPublicKeysForRealTimeEncryption:forAccountWithID:
sendRealTimeEncryptionMasterKeyMaterial:toGroup:
sendRealTimeEncryptionMKMRecoveryRequest:toGroup:
requestRealTimeEncryptionMasterKeyMaterial:forGroup:
resetRealTimeEncryptionKeys:forGroup:
continuityClientInstanceCreated
continuityStartAdvertisingOfType:withData:withOptions:
continuityStopAdvertisingOfType:
continuityStartScanningForType:withData:mask:
continuityStartScanningForType:withData:mask:peers:
continuityStartScanningForType:withData:mask:boostedScan:duplicates:
continuityStartScanningForType:withData:mask:peers:boostedScan:duplicates:
continuityStopScanningForType:
continuityConnectToPeer:
continuityDisconnectFromPeer:
continuityStartTrackingPeer:forType:
continuityStopTrackingPeer:forType:
reportiMessageSpam:toURI:
reportiMessageUnknownSender:messageID:isBlackholed:messageServerTimestamp:toURI:
reportiMessageSpamCheckUnknown:count:requestID:
reportAction:ofTempURI:fromURI:onAccount:requestUUID:
homeKitGetServiceUserIDs
homeKitGetAdminAccessTokensWithServiceUserID:accessoryID:pairingToken:
homeKitGetConsentTokensWithServiceUserID:accessoryIDs:adminID:
homeKitGetUserAccessTokensWithServiceUserID:userID:userHandle:accessoryRequests:
homeKitRefreshUserAccessTokensWithServiceUserID:userID:accessoryRequests:
appleCareSignInUserName:DSID:authToken:requestID:
appleCareSignOutUserWithRequestID:
registrationControlSetRegistrationStateForRegistrationType:toState:requestID:
registrationControlGetRegistrationStateForRegistrationType:requestID:
persistPendingInvitation:forService:withUniqueID:
persistReceivedInvitation:forService:withUniqueID:
removePendingInvitation:forService:
removeReceivedInvitation:forService:
tryForceFamilyFetch
initWithProtocol:
initWithProtocol:ivarQueue:remoteMessageQueue:
length
stringGUID
copy
removeListener:
defaultCenter
removeObserver:name:object:
_localObjectCleanup
_remoteObjectCleanup
isNonUIInstall
_blockUntilSendQueueIsEmpty
services
commands
capabilities
_connectToDaemonWithLaunch:services:commands:capabilities:
connectToDaemonWithLaunch:
_setServices:
_setCommands:
_setCapabilities:
containsObject:
registration
count
setByAddingObjectsFromSet:
unionSet:
enumerateKeysAndObjectsUsingBlock:
isEqualToSet:
unsignedIntValue
assertQueueIsCurrent
connectToDaemonWithLaunch:services:commands:capabilities:
disconnectFromDaemon
addObject:
forwarderWithCompletion:
setWithObject:
hasListenerForID:
setServices:forListenerID:
setCommands:forListenerID:
setObject:forKey:
numberWithUnsignedInt:
_listenerSetUpdated
addListenerID:services:commands:
objectForKey:
numberWithUnsignedInteger:
removeObjectForKey:
_performBlock:
servicesForListenerID:
commandsForListenerID:
capabilitiesForListenerID:
numberWithInt:
isValid
listener
isSetupComplete
_noteDisconnected
setTarget:
invalidate
_disconnectFromDaemonWithForce:
connectToDaemon
systemIsShuttingDown
_autoReconnect
defaultBroadcaster
broadcastProxyForTarget:messageContext:protocol:
sendXPCObject:
setQueryContext:
unsetQueryContext:
currentThread
threadDictionary
objectForKeyedSubscript:
boolValue
setObject:forKeyedSubscript:
initWithProtocol:ivarQueue:remoteMessageQueue:completion:
isQueueCurrent
curXPCMessagePriority
setPriority:
setCurXPCMessagePriority:
_applicationWillTerminate
_setApplicationWillTerminate
_handleDaemonException:
_makeConnectionWithLaunch:completionBlock:
_setServices:commands:capabilities:
addedDelegateForService:withCompletion:
addListenerID:services:
removeListenerID:
setCapabilities:forListenerID:shouldLog:
listenerID
isConnecting
isConnected
blockUntilConnected
_noteSetupComplete
remoteObjectExists
localObjectExists
localObject
_agentDidLaunchNotification:
localObjectDiedNotification:
remoteObjectDiedNotification:
sendXPCObject:objectContext:
sendQueryWithReply:query:
consumeQueryContext:
forwardingTargetForSelector:
systemApplicationDidSuspend
systemApplicationDidEnterBackground
systemApplicationWillEnterForeground
systemApplicationDidResume
_remoteMessageQueue
delegate
setDelegate:
remoteObject
setRemoteObject:
connectingQueue
setConnectingQueue:
_delegate
_remoteObject
_forwarder
_localObject
_daemonListener
_protocol
_listenerID
_ivarQueue
_daemonConnectedGroup
_connectionID
_listenerServices
_services
_cachedServices
_listenerCommands
_commands
_cachedCommands
_listenerCapabilities
_cachedCapabilities
_lastUpdateCaps
_hasCheckedForDaemon
_preventReconnect
_acquiringDaemonConnection
_hasBeenSuspended
_fatalErrorOccured
_curXPCMessagePriority
_notificationServices
_connectingQueue
TB,S_setAutoReconnect:,V_autoReconnect
T@"NSObject<OS_dispatch_queue>",R,N,V_remoteMessageQueue
T@"NSObject<OS_dispatch_queue>",&,N,V_connectingQueue
T@,W,N,V_delegate
TB,R,N
T@"IMRemoteObject<IDSDaemonProtocol>",&,N,V_remoteObject
T@"NSString",R,N,V_listenerID
T@"IDSDaemonListener",R,N,V_daemonListener
Ti,N,V_curXPCMessagePriority
_imMethodSignatureForSelector:
selector
setSync:
setNeedReply:
processInfo
processName
isEqualToString:
broadcastProxyForTarget:messageContext:protocol:priority:completion:
invokeWithTarget:
retainArguments
methodSignatureForSelector:
forwardInvocation:
protocol
completion
ivarQueue
remoteMessageQueue
priority
_completion
_priority
Ti,N,V_priority
T@?,R,N,V_completion
T@"NSProtocolChecker",R,N,V_protocol
T@"NSObject<OS_dispatch_queue>",R,N,V_ivarQueue
DaemonController
oneToOneECCQuicktestEncryptionWithData:completion:
registeredIdentityTimestampsWithBlock:
triggerKeyRollWithCompletion:
setForceKeyRoll:withCompletion:
currentECVersionWithBlock:
setECVersion:withCompletion:
checkServerStorageForService:withCompletion:
toggleDisableDeviceUserToDisabled:
tapToRadarWithTitle:message:context:completion:
popupPromptWithTitle:message:defaultButton:defaultUrl:alternateButton:alternatrUrl:completion:
autoBugCaptureWithCompletion:
fetchEndpointCacheStateForServiceIdentifier:localURI:remoteURI:completion:
fetchTransparentEndpointsForServiceIdentifier:localURI:remoteURI:verifyAgainstTrustCircle:completion:
performOutstandingKeyTransparencyVerificationWithCompletion:
kickVerificationForServiceIdentifier:localURI:remoteURI:completion:
fetchVerifierTrustedDevicesWithCompletion:
fetchVerifierCloudKitTrustedDevicesWithCompletion:
fetchVerifierAccountKeyTrustedDevicesWithCompletion:
fetchVerifierAccountKeyPublicDataWithCompletion:
fetchCloudKitTransparencyStateWithCompletion:
nukeCloudKitTransparencyStateWithCompletion:
nukeTransparencyStateWithCompletion:
removeConnectionWithConnectionName:completionHandler:
deviceChangedForDeviceID:isNearby:isConnected:isCloudConnected:completionHandler:
fetchPrivateClientDataDescriptionForService:completion:
fetchPrivateDeviceDataDescription:
fetchStoredUserDescriptions:
assertTransportThreadRealTimeMode:completionHandler:
forceAccountRenewalOnService:
sendFakePushFromFile:completion:
interfaceWithProtocol:
setWithObjects:
setClasses:forSelector:argumentIndex:ofReply:
interface
reunionSyncStartedForServices:withCompletion:
reunionSyncCompletedForServices:withCompletion:
NRPairing
deletePairedDevice:withCompletionBlock:queue:
initWithObjects:
getPairedDeviceInfoWithCompletionBlock:queue:
getDeliveryStatsWithCompletionBlock:queue:
accountSync
isDefaultPairedDevice
setAllowedTrafficClassifiers:
allowedTrafficClassifiers
IDSLocalSetup
stringByReplacingOccurrencesOfString:withString:
UTF8String
initWithServiceIdentifier:
cancel
dataProtectionClass
setDestinationDevice:
appendFormat:
resetConnection
updateMetadata:
cancelPendingAckTimer
removeAllObjects
canUseDirectMessaging
destinations
destinationURIs
allowCloudDelivery
nonWaking
data
message
protobuf
isDirectMessagingRequested:
countByEnumeratingWithState:objects:count:
isNearby
dequeueMessages
parseDirectMessagingState
dictionaryWithObjects:forKeys:count:
startPowerLogReportTimer
close
resumePendingAckTimer
logConnectionStatisticsInPowerDictionary
clearPowerAssertion
receiveMessages
setupConnectionIfApplicable
initWithFormat:
numberWithInteger:
getMessageTypeForFirstMessage
numberWithUnsignedChar:
updateConnection:
initSocketWithDevice:options:completionHandler:queue:
rangeOfString:
substringFromIndex:
unsignedLongLongValue
setupIDSDeviceConnection
bytes
processIncomingMessage:messageType:messageIdentifier:
timeIntervalSinceReferenceDate
numberWithDouble:
numberWithLongLong:
unsignedCharValue
unsignedShortValue
updateTrafficClass:
connection:incomingMessageFromDirectConnection:withGUID:forTopic:toIdentifier:fromID:context:
connection:incomingDataFromDirectConnection:withGUID:forTopic:toIdentifier:fromID:context:
connection:incomingProtobufFromDirectConnection:withGUID:forTopic:toIdentifier:fromID:context:
suspendPendingAckTimer
connection:incomingAckWithIdentifier:forTopic:toIdentifier:fromIdentifier:hasBeenDeliveredWithContext:isAppAck:
sendAckForMessageID:guidToAck:
setPeerResponseIdentifier:
createDispatchDataForMessageSend:isAck:ackMessageId:
dictionary
setMessage:
setCommand:
initWithBytes:length:encoding:
initWithUUIDBytes:
UUIDString
initWithBytes:length:
dictionaryWithPlistData:
numberWithUnsignedShort:
firstObject
command
integerValue
messageUUID
peerResponseIdentifier
expectsPeerResponse
wantsAppAck
dataUsingEncoding:
plistData
queueOneIdentifier
connection:messageSendFailed:responseCode:
removeObject:
allowUrgentMessages
identifier
numberWithUnsignedLongLong:
relationship
wantsTinkerDevices
failedToSendMessage:responseCode:
indexOfObject:
replaceObjectAtIndex:withObject:
getPowerAssertion
requireBluetooth
removeFirstObject
stringWithFormat:
initWithIdentifier:timeoutSec:properties:
initWithObjectsAndKeys:
initWithServiceName:queue:delegate:
isMessageEligible:options:destinationDevice:
updateConnectedDevices:
receivedDirectMessagingSocketWithContext:
sendAppAckWithGUID:
sendMessageWithParameters:options:
serviceName
setServiceName:
setIdentifier:
shortServiceNameCString
setShortServiceNameCString:
connectionQueue
setConnectionQueue:
connection
setConnection:
connectionState
setConnectionState:
connectionSetupInProgress
setConnectionSetupInProgress:
connectionMessageSendQueue
setConnectionMessageSendQueue:
upgradedTrafficClass
setUpgradedTrafficClass:
peerID
setPeerID:
connectionIsIncoming
setConnectionIsIncoming:
pendingAckTimerSuspended
setPendingAckTimerSuspended:
directMessagingAllowed
setDirectMessagingAllowed:
pendingAckTimer
setPendingAckTimer:
reporterTimer
setReporterTimer:
queueOneToMessageIDDictionary
setQueueOneToMessageIDDictionary:
messageIDToMessageDictionary
setMessageIDToMessageDictionary:
notifyToken
setNotifyToken:
directMessagingSupported
setDirectMessagingSupported:
trafficClassToUse
setTrafficClassToUse:
idsPriorityToUse
setIdsPriorityToUse:
trafficClassInitialized
setTrafficClassInitialized:
trafficClassApplied
setTrafficClassApplied:
trafficClassTLVProcessed
setTrafficClassTLVProcessed:
peerIsConnected
setPeerIsConnected:
peerIsNearby
setPeerIsNearby:
device
setDevice:
deviceConnection
setDeviceConnection:
currentStreamName
setCurrentStreamName:
peerSupportsDeviceConnection
setPeerSupportsDeviceConnection:
conciseACKSupported
setConciseACKSupported:
directMessagingState
setDirectMessagingState:
directMessagingTimeOutMSEC
setDirectMessagingTimeOutMSEC:
directMessagingRetryMSEC
setDirectMessagingRetryMSEC:
directMessagingReportStatsMSEC
setDirectMessagingReportStatsMSEC:
setDataProtectionClass:
serviceProperties
setServiceProperties:
assertion
setAssertion:
powerAssertionOptions
setPowerAssertionOptions:
outgoingMessageBytes
setOutgoingMessageBytes:
outgoingMessageCount
setOutgoingMessageCount:
incomingMessageBytes
setIncomingMessageBytes:
incomingMessageCount
setIncomingMessageCount:
_connectionSetupInProgress
_upgradedTrafficClass
_connectionIsIncoming
_pendingAckTimerSuspended
_directMessagingAllowed
_directMessagingSupported
_trafficClassInitialized
_trafficClassTLVProcessed
_peerIsConnected
_peerIsNearby
_peerSupportsDeviceConnection
_conciseACKSupported
_connectionState
_notifyToken
_trafficClassToUse
_directMessagingTimeOutMSEC
_directMessagingRetryMSEC
_directMessagingReportStatsMSEC
_dataProtectionClass
_serviceName
_identifier
_shortServiceNameCString
_connectionQueue
_connection
_connectionMessageSendQueue
_peerID
_pendingAckTimer
_reporterTimer
_queueOneToMessageIDDictionary
_messageIDToMessageDictionary
_idsPriorityToUse
_trafficClassApplied
_device
_deviceConnection
_currentStreamName
_directMessagingState
_serviceProperties
_assertion
_powerAssertionOptions
_outgoingMessageBytes
_outgoingMessageCount
_incomingMessageBytes
_incomingMessageCount
TQ,N,V_identifier
T*,N,V_shortServiceNameCString
T@"NSObject<OS_dispatch_queue>",&,N,V_connectionQueue
T@"NSObject<OS_nw_connection>",&,N,V_connection
Ti,N,V_connectionState
TB,N,V_connectionSetupInProgress
T@"NSMutableArray",&,N,V_connectionMessageSendQueue
T@"<IDSDirectMessageConnectionDelegate>",W,N,V_delegate
TB,N,V_upgradedTrafficClass
T@"NSString",&,N,V_peerID
TB,N,V_connectionIsIncoming
TB,N,V_pendingAckTimerSuspended
TB,N,V_directMessagingAllowed
T@"NSObject<OS_dispatch_source>",&,N,V_pendingAckTimer
T@"NSObject<OS_dispatch_source>",&,N,V_reporterTimer
T@"NSMutableDictionary",&,N,V_queueOneToMessageIDDictionary
T@"NSMutableDictionary",&,N,V_messageIDToMessageDictionary
Ti,N,V_notifyToken
TB,N,V_directMessagingSupported
TI,N,V_trafficClassToUse
Tq,N,V_idsPriorityToUse
TB,N,V_trafficClassInitialized
Tq,N,V_trafficClassApplied
TB,N,V_trafficClassTLVProcessed
TB,N,V_peerIsConnected
TB,N,V_peerIsNearby
T@"IDSDevice",&,N,V_device
T@"IDSDeviceConnection",&,N,V_deviceConnection
T@"NSString",&,N,V_currentStreamName
TB,N,V_peerSupportsDeviceConnection
TB,N,V_conciseACKSupported
TQ,N,V_directMessagingState
Ti,N,V_directMessagingTimeOutMSEC
Ti,N,V_directMessagingRetryMSEC
Ti,N,V_directMessagingReportStatsMSEC
TI,N,V_dataProtectionClass
T@"IDSServiceProperties",&,N,V_serviceProperties
T@"IMPowerAssertion",&,N,V_assertion
T@"NSDictionary",&,N,V_powerAssertionOptions
TQ,N,V_outgoingMessageBytes
TQ,N,V_outgoingMessageCount
TQ,N,V_incomingMessageBytes
TQ,N,V_incomingMessageCount
T@"NSString",&,N,V_serviceName
IDSDirectMessagingConnection
appendBytes:length:
initWithKeyOptions:valueOptions:capacity:
initWithTopic:
useCurrentEncryptionkeyWithHandler:
pairWithFirst:second:
enumerateDecryptingKeysAndSaltsUsingBlock:
initWithDomain:code:userInfo:
dataWithLength:
mutableBytes
first
allKeys
isEqualToCryptor:
encodeObject:forKey:
array
second
decodeObjectOfClass:forKey:
decodeObjectOfClasses:forKey:
dictionaryWithCapacity:
objectAtIndexedSubscript:
supportsSecureCoding
encodeWithCoder:
initWithCoder:
TB,R
copyWithZone:
initWithTopic:keyManager:
encryptData:sequenceNumber:error:
getEncryptionKeyID
decryptData:keyID:sequenceNumber:error:
getDecryptionKeyIDSet
_lock
_topic
_encryptingKeyID
_encryptingKey
_encryptingKeySalt
_encryptingCryptor
_decryptionKeysByKeyID
_decryptionCryptorsByKeyID
GroupSessionDataCryptor
initWithAccount:destinations:options:delegateContext:
setWithArray:
_IDSGroupSession
uniqueID
sessionIDAliasWithSalt:
localParticipantID
getParticipantIDForAlias:salt:completionHandler:
stringByAppendingString:
sessionEndedReason
requiredCapabilities
requiredLackOfCapabilities
_internal_sessionWithValidityCheck
setDelegate:queue:
updateMembers:withContext:triggeredLocally:
updateMembers:withContext:messagingCapabilities:triggeredLocally:
manageDesignatedMembers:withType:
removeParticipantIDs:
updateParticipantData:withContext:
setParticipantInfo:
joinWithOptions:
leaveGroupSession
reconnectUPlusOneSession
setPreferences:
setRequiredCapabilities:requiredLackOfCapabilities:
requestActiveParticipants
registerPluginWithOptions:
unregisterPluginWithOptions:
createAliasForParticipantID:salt:
unicastParameterForParticipantIDAlias:salt:dataMode:connectionIndex:
createAliasForLocalParticipantIDWithSalt:
initWithGroupSessionID:localParticipantID:remoteParticipantID:salt:dataMode:connectionIndex:
_requestNWConnectionforIDSGroupSessionUnicastParameter:
initWithGroupSessionIDAlias:participantIDAlias:salt:dataMode:
requestNWConnectionWithDataBlob:completionHandler:
augmentNetworkParametersForSessionAlias:participantIDAlias:salt:parameters:
setMultiplexer:
setSessionID:
setParticipantID:
setSalt:
stringRepresentation
requestDataCryptorForTopic:completionHandler:
requestEncryptionKeyForParticipants:
sessionID
initWithGroupSessionID:salt:serviceName:
_requestNWConnectionforIDSGroupSessionBroadcastParameter:
requestNWConnectionforIDSGroupSessionUnicastParameter:withCompletionHandler:
augmentNetworkParametersForSession:participantID:parameters:
requestNWConnectionforIDSGroupSessionBroadcastParameter:withCompletionHandler:
initWithAccount:destinations:options:
initWithAccount:options:
participantIDForAlias:salt:
destination
removeParticipants:
unicastParameterForParticipantID:dataMode:connectionIndex:
unicastConnectorWithDataMode:
broadcastParameterForService:
T@"NSString",R,N
TI,R,N
T@"NSSet",R,N
requestSelectedSubscriptionsWithCompletion:
requestUnselectedTemporaryPhoneAliasesWithCompletion:
selectSubscription:withCompletion:
unselectSubscription:withCompletion:
setSelectedSubscriptions:withCompletion:
removeTemporaryPhoneAlias:withCompletion:
enableTemporaryPhoneAlias:withCompletion:
disableTemporaryPhoneAlias:withCompletion:
constructRAResponseDictionaryForServices:completionHandler:
IDSReportSpam
initWithBlock:queue:
scheduleTimeoutWithResponseHandler:timeoutInterval:timeoutBlock:
initWithRequestTimer:
addHandler:
initWithInteger:
__mainThreadPostNotificationName:object:userInfo:
object
userInfo
service
_postNotificationForService:availability:
_handleServiceMonitorNotification:
addObserver:selector:name:object:
_isValidServiceType:
initWithService:
monitor
_startListeningToMonitor:
containerForService:create:
hasListenerID:
addListenerID:
listeners
_stopListeningToMonitor:
serviceAvailability
hasListenerID:forService:
addListenerID:forService:
removeListenerID:forService:
availabilityForListenerID:forService:
_availabilityHandlers
setMonitor:
_monitor
_listeners
T@"IDSServiceMonitor",&,N,V_monitor
T@"NSMutableSet",R,N,V_listeners
ServiceAvailability
initWithQueueController:ivarQueue:
connectionComplete:withResponse:
setupCompleteWithInfo:
daemonConnected
daemonDisconnected
receivedMetadataForDirectMessaging:
opportunisticDataReceived:withIdentifier:fromID:context:
messageReceived:withGUID:withPayload:forTopic:toIdentifier:fromID:context:
dataReceived:withGUID:forTopic:toIdentifier:fromID:context:
accessoryDataReceived:withGUID:forTopic:toIdentifier:fromID:context:
accessoryReportMessageReceived:accessoryID:controllerID:withGUID:forTopic:toIdentifier:fromID:context:
incomingInvitation:withGUID:forTopic:toIdentifier:fromID:context:
incomingInvitationUpdate:withGUID:forTopic:toIdentifier:fromID:context:
messageIdentifier:alternateCallbackID:forAccount:updatedWithResponseCode:error:lastCall:context:
messageIdentifier:alternateCallbackID:forAccount:willSendToDestinations:skippedDestinations:registrationPropertyToDestinations:
didSendOpportunisticDataWithIdentifier:onAccount:toIDs:
messageIdentifier:forTopic:toIdentifier:fromIdentifier:hasBeenDeliveredWithContext:
protobufReceived:withGUID:forTopic:toIdentifier:fromID:context:
pendingIncomingMessageWithGUID:forTopic:toIdentifier:fromID:context:
OTRTestCallback:time:error:
groupShareReceived:withGUID:forTopic:toIdentifier:fromID:context:
engramDataReceived:withGUID:forTopic:toIdentifier:fromID:context:
checkTransportLogWithReason:
accountAdded:
accountRemoved:
accountUpdated:
accountsChanged:forTopic:
accountEnabled:onService:
accountDisabled:onService:
setupCompleteForAccount:transactionID:setupError:
account:accountInfoChanged:
account:registrationStatusInfoChanged:
account:aliasesChanged:
account:vettedAliasesChanged:
account:profileChanged:
account:loginChanged:
account:displayNameChanged:
account:pseudonymsChanged:
registrationFailedForAccount:needsDeletion:
refreshRegistrationForAccount:
updateDeviceIdentity:error:
account:dependentDevicesUpdated:
account:dependentDevicesUpdatedUponReconnect:
account:localDeviceAdded:
account:localDeviceRemoved:
service:tinkerDeviceAdded:
service:tinkerDeviceRemoved:
service:tinkerDeviceUpdated:
service:linkedDevicesUpdated:
service:familyInfoUpdated:
didAuthenticatePhoneWithAuthenticationCertificateData:requestUUID:error:
didGeneratePhoneAuthenticationSignature:nonce:certificates:labelIDs:inputData:requestUUID:error:
didRequestCarrierTokenString:requestUUID:error:
didSetPhoneUserSubscriptionSource:requestUUID:error:
didFetchPhoneUserSubscriptionSource:requestUUID:error:
IDQueryCompletedWithFromURI:idStatusUpdates:service:success:error:
didFlushCacheForService:remoteURI:fromURI:guid:
sessionInvitationReceivedWithPayload:forTopic:sessionID:toIdentifier:fromID:transportType:
sessionAcceptReceived:fromID:withData:
sessionDeclineReceived:fromID:withData:
sessionCancelReceived:fromID:withData:
sessionMessageReceived:fromID:withData:
sessionEndReceived:fromID:withData:
sessionStarted:
sessionEnded:withReason:error:
groupSessionDidTerminate:
groupSessionEnded:withReason:error:
session:invitationSentToTokens:shouldBreakBeforeMake:
session:audioEnabled:
session:muted:
session:didReceiveReport:
sessionDidJoinGroup:participantsInfo:error:
sessionDidJoinGroup:participantInfo:error:
sessionDidJoinGroup:participantUpdateDictionary:error:
sessionDidLeaveGroup:error:
session:participantDidJoinGroupWithInfo:
session:participantDidLeaveGroupWithInfo:
session:didReceiveActiveParticipants:success:
session:didReceiveActiveLightweightParticipants:success:
session:didReceiveBlockedParticipantIDs:withCode:withType:isTruncated:
session:didReceiveQueryBlockedParticipantIDs:withCode:isTruncated:
session:didRemoveParticipantIDs:withCode:isTruncated:
participantUpdatedForSession:
session:didReceivePluginAllocationInfo:
session:didRegisterPluginAllocationInfo:
session:didUnregisterPluginAllocationInfo:
session:didReceiveKeyMaterial:
session:shouldInvalidateKeyMaterialByKeyIndexes:
session:hasOutdatedSKI:
session:didCreateParticipantIDAlias:forParticipantID:salt:
session:didReceiveParticipantID:forParticipantIDAlias:salt:
receivedGroupSessionParticipantUpdate:forTopic:toIdentifier:fromID:
receivedGroupSessionParticipantDataUpdate:forTopic:toIdentifier:fromID:
allocationDone:sessionInfo:
openedSocket:forHandlerID:error:
deliveryStats:
device:nsuuidChanged:
continuityDidUpdateStateToState:
continuityDidLosePeer:
continuityDidLosePeer:forType:
continuityDidStartTrackingPeer:error:
continuityDidStartTrackingPeer:forType:error:
continuityDidStopTrackingPeer:
continuityDidStopTrackingPeer:forType:
continuityDidStartAdvertisingOfType:
continuityDidStopAdvertisingOfType:
continuityDidStopAdvertisingOfType:withError:
continuityDidFailToStartAdvertisingOfType:withError:
continuityDidStartScanningForType:
continuityDidStopScanningForType:
continuityDidFailToStartScanningForType:withError:
continuityDidDiscoverType:withData:fromPeer:
continuityDidDiscoverPeerWithData:fromPeer:
continuityDidConnectToPeer:withError:
continuityDidDisconnectFromPeer:withError:
serviceUserIDs:error:
adminAccessTokens:error:
consentTokens:error:
userAccessTokens:error:
refreshUserAccessTokens:error:
deviceIdentifierDidChange:
didSwitchActivePairedDevice:
didSwitchActivePairedDevice:forService:wasHandled:
deactivatePairedDevices
localPairingResponseForRequestID:withError:
localPairingResponseForRequestID:withError:pairedDevices:
applecareResponseForRequestID:withError:
registrationControlResponseForRequestID:withError:
registrationControlStatusResponseForRequestID:requestID:withError:
iMessageReportSpamCheckUnknownResponseForRequestID:status:abusive:delay:withError:
finishedProvisioningPseudonym:success:error:forRequestUUID:
finishedRenewingPseudonym:success:error:requestUUID:
finishedRevokingPseudonymWithSuccess:error:requestUUID:
finishedReportingRequestUUID:withError:
_callHandlersWithBlockOnIvarQueue:
_performSyncBlock:
weakObjectsHashTable
_callHandlersWithBlockOnIvarQueue:cleanup:
mutableCopy
enumerateObjectsUsingBlock:
removeObjectAtIndex:
_removeAccountOnIvarQueue:
_callHandlersWithBlock:
isEqualToIgnoringCase:
voicemailSync
_stringForKey:
initWithDictionary:
_uniqueIDForDevice:
activeID
numberWithBool:
initWithArray:
warning
_internalDidSwitchActivePairedDevice:forService:
addIndex:
removeObjectsAtIndexes:
objectAtIndex:
_updateService:withTinkerDevice:shouldAdd:shouldSwitch:
_appearsToBeEmail
isEqualToNumber:
_stripFZIDPrefix
allKeysForObject:
familyEndpointData
dictionaryRepresentation
currentRemoteDevicesForDestinations:service:listenerID:queue:completionBlock:
refreshIDStatusForDestinations:service:listenerID:queue:completionBlock:
flushCache
NSUUID
IDSService_oversized
_callHandlersAsyncWithBlock:
isActive
_internalSwitchActivePairedDevice:forAccount:
_internalSwitchActivePairedDevice:forService:
accountEnabled
__postSetupComplete
_currentMessageContext
allObjects
_copyForEnumerating
invocationWithMethodSignature:
setSelector:
_setTemporaryMessageContext:
isReply
hasPostedSetupComplete
deviceIdentifier
_hidingDisconnect
_setHidingDisconnect:
removeHandler:
accountDictionariesForService:
enabledAccountsForService:
familyInfoForService:
familyDevicesForService:listenerID:withCompletion:
pendingInvitationsForService:
receivedInvitationsForService:
maxEffectivePayloadSizeForService:
dependentDevicesForAccount:
linkedDevicesForService:
didGetIdentities:error:
switchActivePairedDevice:forService:
switchActivePairedDevice:forAccount:
getDirectMessagingMetadataDictionary
_internalQueueController
_handlers
_topicToAccountDictionaries
_topicToEnabledAccounts
_accountToDevices
_serviceToLinkedDevices
_serviceToFamilyInfo
_serviceToFamilyDevices
_serviceToPendingInvitations
_serviceToReceivedInvitations
_serviceToMaxMessageSize
_accountToActiveDeviceUniqueID
_serviceToActiveDeviceUniqueID
_directMessagingMetadata
_deviceIdentifier
_setupComplete
_postedSetupComplete
_setupInfoComplete
_connectionComplete
TB,N,S_setHidingDisconnect:
DaemonListener
weakRefWithObject:
didReceivePublickeys:
didReceiveMasterKeyMaterials:
initWithAccount:
sendPrekeyToGroup:
requestPublicKeys
sendMasterKeyMaterialToGroup:
requestMasterKeyMaterialForGroup:
sendMKMRecoveryRequestToGroup:
resetKeysForGroup:
_uniqueID
_accountID
_queue
IDSRealTimeEncryptionProxy
_initWithSubActivity:
__imArrayByApplyingBlock:
sharedInstanceForBagType:
numberWithLong:
date
unsignedLongValue
setSecond:
currentCalendar
dateByAddingComponents:toDate:options:
timeIntervalSinceNow
activityInfoWithSubActivity:tokens:
activityInfoWithSubActivity:URIs:
activityInfoWithSubActivity:devices:
subActivity
expirationDate
appContext
setAppContext:
deviceUniqueIDs
tokens
URIs
_subActivity
_expirationDate
_appContext
_deviceUniqueIDs
_tokens
_URIs
T@"NSArray",R,N,V_deviceUniqueIDs
T@"NSArray",R,N,V_tokens
T@"NSArray",R,N,V_URIs
T@"NSString",R,N,V_subActivity
T@"NSDate",R,N,V_expirationDate
T@"NSData",C,N,V_appContext
encodeInt64:forKey:
encodeBool:forKey:
decodeInt64ForKey:
decodeBoolForKey:
initWithSubActivity:pushToken:serverTimestamp:clientContext:isDeviceOnline:
pushToken
serverTimestamp
isDeviceOnline
setIsDeviceOnline:
clientContext
matchingDevice
setMatchingDevice:
setURIs:
_isDeviceOnline
_pushToken
_serverTimestamp
_clientContext
_matchingDevice
TB,N,V_isDeviceOnline
T@"IDSDevice",&,N,V_matchingDevice
T@"NSArray",&,N,V_URIs
T@"NSData",R,N,V_pushToken
TQ,R,N,V_serverTimestamp
T@"NSData",R,N,V_clientContext
weakSharedInstance
initWithActivity:serviceIdentifier:queue:xpcConnector:
activityIdentifier
removeListener:forTopic:
XPCConnector
addListener:forTopic:
errorWithDomain:code:userInfo:
subscribeInfo:forActivity:withCompletion:
performAction:errorHandler:
unsubscribeActivity:andSubActivity:withCompletion:
checkIfListeningForActivity:completion:
performSyncAction:
setShouldListen:forActivity:completion:
currentSubscriptionsForActivity:completion:
activityMonitor:didReceiveActivityUpdate:
handleIncomingUpdate:onActivity:completion:
initWithActivity:serviceIdentifier:
initWithActivity:serviceIdentifier:queue:
beginBroadcastingWithInfo:withCompletion:
stopBroadcastingForSubActivity:withCompletion:
listeningForUpdates
setListeningForUpdates:
subscriptions
activity
setXPCConnector:
setActivityIdentifier:
queue
setQueue:
_activity
_XPCConnector
_activityIdentifier
T@"_IDSActivityMonitorXPCConnector",&,N,V_XPCConnector
T@"NSString",&,N,V_activityIdentifier
T@"NSObject<OS_dispatch_queue>",N,V_queue
T@"<IDSActivityMonitorListenerDelegate>",W,N,V_delegate
T@"NSArray",R,N
T@"NSString",R,N,V_activity
TB,N
accounts
anyObject
setupInvitationsForService:
allValues
initForReadingFromData:error:
_enableStrictSecureDecodingMode
setDecodingFailurePolicy:
decodeTopLevelObjectOfClass:forKey:error:
archivedDataWithRootObject:requiringSecureCoding:error:
initWithDestination:state:expirationDate:uniqueID:context:
setValue:forKey:
validateStrictDecodingForSentInvitation:
sendInvitation:toDestination:options:identifier:error:
setState:
setContext:
fromID
destinationWithURI:
sendInvitationUpdate:toDestination:options:identifier:error:
addDelegate:queue:
compare:
senderMergeID
validateReceivedInvitation:
manager:incomingInvitation:
arrayWithObjects:count:
manager:senderDidCancelInvitation:
manager:receiverDidAcceptInvitation:
manager:receiverDidDeclineInvitation:
destinationCorrelationIdentifier
setSenderMergeID:
removeObjectsForKeys:
service:account:incomingOpportunisticData:withIdentifier:fromID:context:
service:didSendOpportunisticDataWithIdentifier:toIDs:
service:account:incomingMessage:fromID:context:
service:account:incomingData:fromID:context:
service:account:incomingUnhandledProtobuf:fromID:context:
service:account:incomingResourceAtURL:fromID:context:
service:account:incomingResourceAtURL:metadata:fromID:context:
service:account:incomingPendingMessageOfType:fromID:context:
service:activeAccountsChanged:
service:devicesChanged:
service:nearbyDevicesChanged:
service:connectedDevicesChanged:
service:linkedDevicesChanged:
service:account:identifier:didSendWithSuccess:error:
service:account:identifier:didSendWithSuccess:error:context:
service:account:identifier:sentBytes:totalBytes:
service:account:identifier:hasBeenDeliveredWithContext:
service:account:identifier:fromID:hasBeenDeliveredWithContext:
service:account:inviteReceivedForSession:fromID:
service:account:inviteReceivedForSession:fromID:withOptions:
service:account:inviteReceivedForSession:fromID:withContext:
service:account:receivedGroupSessionParticipantUpdate:
service:account:receivedGroupSessionParticipantDataUpdate:
serviceSpaceDidBecomeAvailable:
serviceAllowedTrafficClassifiersDidReset:
service:didSwitchActivePairedDevice:acknowledgementBlock:
service:account:incomingInvitation:withContext:
service:account:incomingInvitationUpdate:withContext:
pendingInvitations
receivedInvitations
sendInvitationToDestination:expirationDate:context:serverAcknowledgedBlock:
cancelInvitation:serverAcknowledgedBlock:
acceptInvitation:withContext:serverAcknowledgedBlock:
declineInvitation:serverAcknowledgedBlock:
removePendingInvitation:
removeReceivedInvitation:
internal
_serverAcknowledgedBlockMap
_serverAcknowledgedBlockWithInvitationMap
_pendingInvitations
_receivedInvitations
_delegateQueue
_invitationsLoadedFromDisk
T@"IDSService",R,N,V_internal
T@"<IDSInvitationManagerDelegate>",W,N,V_delegate
T@"NSSet",R,C,N
IDSService
timeout
setTimeout:
_timeout
T@"NSNumber",&,N,V_timeout
initWithIdentifier:
T@"NSString",&,N,V_identifier
fromServerStorage
certifiedDeliveryContext
initWithFromServerStorage:certifiedDeliveryContext:identifier:
setFromServerStorage:
setCertifiedDeliveryContext:
_fromServerStorage
_certifiedDeliveryContext
TB,N,V_fromServerStorage
T@"IDSCertifiedDeliveryContext",&,N,V_certifiedDeliveryContext
_setupInterruptionHandler
_setupXPC
initWithTopic:daemonController:
uuid
_failMessages
addInterruptionHandler:forTarget:
serverMessagingCollaboratorWithErrorHandler:
topic
setupServerMessagingClient:withUUID:forTopic:
performTask:
inFlightRequests
sendMessageData:onTopic:withOptions:identifier:completion:
delegateMap
_sendData:withOptions:identifier:completion:
originalGUID
sendCertifiedDeliveryReceipt:
controller:receivedIncomingMessageData:context:
handleReceivedIncomingMessageData:identifier:context:
addDelegate:
sendMessageData:withOptions:identifier:completion:
setDelegateMap:
daemonController
setDaemonController:
setUuid:
setInFlightRequests:
inFlightLock
setInFlightLock:
_inFlightLock
_delegateMap
_daemonController
_uuid
_inFlightRequests
T@"NSString",R,N,V_topic
T@"NSHashTable",&,N,V_delegateMap
T@"IDSXPCDaemonController",&,N,V_daemonController
T@"NSString",&,N,V_uuid
T@"NSMutableDictionary",&,N,V_inFlightRequests
T{os_unfair_lock_s=I},N,V_inFlightLock
IDSServerMessaging
didCreateGroup:completion:
didCacheGroup:completion:
didUpdateGroup:withNewGroup:completion:
didReceiveDecryptionFailureForGroup:completion:
didReceiveRegistrationIdentityUpdateWithCompletion:
removeDelegate:
delegates
setDelegates:
_delegates
T@"NSMutableSet",&,N,V_delegates
groupContext
initWithBlock:queue:isSync:
initWithUserType:status:
status
type
_type
_status
TQ,R,N,V_type
TQ,R,N,V_status
initWithServiceType:userInfos:
phoneUserStatus
appleIDUserStatus
serviceType
serviceUserInfos
_serviceType
_serviceUserInfos
TQ,R,N,V_serviceType
T@"NSArray",R,N,V_serviceUserInfos
TQ,R,N
setCompletion:
_state
T@"NSNumber",&,N,V_state
T@?,C,N,V_completion
initWithPasswordManager:CTAdapter:signInTimeout:signInFuzz:queue:
initWithQueue:
delegateByServiceType
strongToWeakObjectsMapTable
setDelegateByServiceType:
setInitialStateByService:
_statusOfUsersOnService:
initialStateByService
_serviceNameForType:
_accountControllerForName:
signInQueue
addRegistrationDelegate:queue:
accountIDDescriptionMap
setServiceNameAccountControllerMap:
isEnabled
accountType
registerAccount
_initializeStateMachineForAccountID:service:state:completion:
_actionOnAccountOfType:onService:actionBlock:
signInController
_statusOfAccount:
_cleanupStateForAccountID:
passwordManager
setPassword:forUsername:onService:completionBlock:
_createAccountWithDictionary:accountID:serviceName:
addAccount:
authenticateAccount
signInUsername:onService:waitUntilRegistered:withCompletion:
provideCredential:forUser:onService:withCompletion:
removeAccount:
_scheduleValidationAfter:forAccountID:allowFuzz:signOut:
_validateStateForAccountID:timeoutMode:
__imArrayByFilteringWithBlock:
_serviceTypeForName:
_accountWithUniqueID:
registrationStatus
unsignedIntegerValue
aliasesToRegister
CTAdapter
supportsIdentification
arrayByAddingObject:
addAliases:
initWithDictionary:uniqueID:serviceName:
_createAccountControllerForService:
accountWithUniqueID:
signInController:service:didChangeStatus:
_validateDelegateState
accountController:accountAdded:
accountController:accountUpdated:
accountController:accountRemoved:
accountController:accountEnabled:
accountController:accountDisabled:
setDelegate:forService:
removeDelegateForService:
enableUserType:onService:completion:
disableUserType:onService:completion:
statusOfUsersOnService:withCompletion:
signInUsername:withProvidedCredential:onService:waitUntilRegistered:completion:
signOutService:completion:
serviceNameAccountControllerMap
setAccountIDDescriptionMap:
setSignInQueue:
setPasswordManager:
signInTimeout
setSignInTimeout:
signInFuzz
setSignInFuzz:
setCTAdapter:
listenerGUID
setListenerGUID:
_serviceNameAccountControllerMap
_accountIDDescriptionMap
_delegateByServiceType
_initialStateByService
_signInQueue
_passwordManager
_signInTimeout
_signInFuzz
_CTAdapter
_listenerGUID
T@"NSMutableDictionary",&,N,V_serviceNameAccountControllerMap
T@"NSMutableDictionary",&,N,V_accountIDDescriptionMap
T@"NSMapTable",&,N,V_delegateByServiceType
T@"NSMutableDictionary",&,N,V_initialStateByService
T@"NSObject<OS_dispatch_queue>",&,N,V_signInQueue
T@"<_IDSPasswordManager>",&,N,V_passwordManager
T@"IDSCTAdapter",&,N,V_CTAdapter
Td,N,V_signInTimeout
Td,N,V_signInFuzz
T@"NSString",&,N,V_listenerGUID
_isServiceCurrentlyEnabled:
isFaceTimeEnabled
isiMessageEnabled
initWithAccount:destinations:transportType:delegateContext:
initWithAccount:destinations:transportType:uniqueID:delegateContext:
IDSSession
socket
initialLinkType
sendInvitationWithOptions:
initWithBool:
sendInvitationWithData:declineOnError:
getPreferences
cancelInvitationWithRemoteEndedReasonOverride:
cancelInvitationWithData:
acceptInvitationWithData:
declineInvitationWithData:
cancelInvitation
acceptInvitation
declineInvitation
endSession
endSessionWithData:
sendSessionMessage:
sendSessionMessage:toDestinations:
sendAllocationRequest:
setAudioEnabled:
getAudioEnabled
setMuted:
getMuted
sendData:error:
setInviteTimeout:
inviteTimeout
reconnectSession
shouldUseSocketForTransport
MTUForAddressFamily:
initWithAccount:destinations:transportType:
_initWithAccount:destinations:transportType:uniqueID:
sendInvitation
sendInvitationWithData:
setStreamPreferences:
_streamPreferences
setIsAudioEnabled:
isAudioEnabled
setIsMuted:
isMuted
setInvitationTimeOut:
invitationTimeOut
setUniqueID:
_uniqueIDLock
T@"NSString",&,N,V_uniqueID
Ti,R,N
Tq,N
_IDSService
slot
SIMIdentifier
phoneSubscriptionWithSubscriptionSlot:andLabelID:
matchingSim
CTSIMSFromPhoneSubscriptions:
phoneSubscriptionsFromCTSIMs:
phoneSubscriptionWithSIM:
userUniqueIdentifier
SIMForIdentifier:
accountMatchingSimIdentifier:
accountMatchingSim:
currentSIMsWithError:
subscriptionSlot
weakToStrongObjectsMapTable
_cacheForService:
addEntriesFromDictionary:
idStatusUpdatedForDestinations:service:
_callDelegatesWithBlock:
_purgeIDStatusCache
___oldDealloc
_connect
IDQuery
watchPairing
invalidateTimeoutAndReturnHandlerForRequestID:
block
initWithDisconnectedBlockAndNoTimeout:
_requestTimer
_disconnectedBlock
initWithService:delegate:queue:parent:
setDestinations:
initWithService:delegate:queue:
keyIndex
minusSet:
isGeneratedLocally
generationCounter
recvKeyMaterial:
invalidateKeyMaterialByKeyIndexes:
enumerateCachedKeyMaterialUsingBlock:
_cache
RealTimeEncryptionController
Connection
_initWithAccount:commands:indirectDelegateCallouts:
initWithAccount:commands:indirectDelegateCallouts:delegateContext:
account
sendProtobuf:toDestinations:priority:options:identifier:error:
sendMessage:toDestinations:priority:options:identifier:error:
sendData:toDestinations:priority:options:identifier:error:
_connectionWithAccount:commands:indirectDelegateCallouts:
initWithAccount:commands:
T@"_IDSConnection",R,N
T@"IDSAccount",R,N
sendMessage:toDestinations:options:identifier:error:
IDSConnection
endpoint
parameters
groupSessionID
salt
initWithGroupSessionID:serviceName:
_groupSessionID
_salt
_parameters
_endpoint
T@"NSString",R,N,V_groupSessionID
T@"NSData",R,N,V_salt
T@"NSString",R,N,V_serviceName
T@"NSObject<OS_nw_parameters>",R,N,V_parameters
T@"NSObject<OS_nw_endpoint>",R,N,V_endpoint
dataWithBytes:length:
addPairedDevice:completion:
addPairedDeviceWithInfo:completion:
updatePairedDevice:pairingType:completion:
connectPairedDeviceWithID:completion:
setupCompletedForPairedDeviceWithID:completion:
getPairingDevicesWithCompletion:
getPairedDevicesWithCompletion:
getPairingRecordsWithCompletion:
updatePairedDeviceWithID:supportIPsec:completion:
deletePairedDeviceWithID:completion:
unpairStartForDeviceWithID:completion:
stopLocalPairingForDeviceWithID:completion:
unpairDeviceWithID:completion:
forgetDeviceWithID:completion:
switchActivePairedDeviceWithID:completion:
disconnectActivePairedDevice:
redeliverMessagesForDevice:completion:
setAllowedTrafficClassifiersForDevice:classifiers:completion:
dropAllMessagesWithoutAnyAllowedClassifierForDevice:completion:
pairedDevicesInfo:
isSync
_block
_isSync
T@,R,N,V_block
T@"NSObject<OS_dispatch_queue>",R,N,V_queue
TB,R,N,V_isSync
completionBlock
setCompletionBlock:
_completeWithError:
_completionBlock
T@?,C,N,V_completionBlock
batchProcessingBlock
setBatchProcessingBlock:
knownRecordIDsFromList
setKnownRecordIDsFromList:
shouldContinueFromLastSyncPoint
setShouldContinueFromLastSyncPoint:
_batchProcessingBlock
_knownRecordIDsFromList
_shouldContinueFromLastSyncPoint
T@?,C,N,V_batchProcessingBlock
T@?,C,N,V_knownRecordIDsFromList
TB,N,V_shouldContinueFromLastSyncPoint
familyHandles
isValidDestination:error:
sendResourceAtURL:metadata:toDestinations:priority:options:identifier:error:
DSID
fetchFamilyMembersWithDevices:
dsidToFamilyMember
familyMembers
setFamilyMembers:
setDsidToFamilyMember:
dsidToDeviceList
setDsidToDeviceList:
_familyMembers
_dsidToFamilyMember
_dsidToDeviceList
T@"NSSet",&,N,V_familyMembers
T@"NSDictionary",&,N,V_dsidToFamilyMember
T@"NSDictionary",&,N,V_dsidToDeviceList
currentHandler
handleFailureInMethod:object:file:lineNumber:description:
realTimeContext
_setUpNWConnectionforTesting:
dataMode
encodeInt:forKey:
decodeIntForKey:
remoteParticipantID
connectionIndex
initWithGroupSessionID:localParticipantID:remoteParticipantID:dataMode:connectionIndex:
initWithConnectedSocket:dataMode:connectionIndex:
requestNWConnectionforIDSGroupSessionUnicastParameter:
setSocket:
_socket
_localParticipantID
_remoteParticipantID
_connectionIndex
_dataMode
TQ,R,N,V_localParticipantID
TQ,R,N,V_remoteParticipantID
TQ,R,N,V_connectionIndex
Tq,R,N,V_dataMode
Ti,V_socket
activateWithCompletion:
pairingCollaboratorWithCompletion:
pairedDeviceManagerCollaboratorWithCompletion:
reunionSyncCollaboratorForClientProcessName:withCompletion:
opportunisticCollaboratorWithCompletion:
registrationCollaboratorWithCompletion:
activityMonitorCollaboratorWithCompletion:
serverMessagingCollaboratorWithCompletion:
interalTestingCollaboratorWithCompletion:
setInterface:forSelector:argumentIndex:ofReply:
initWithHandler:queue:
handler
setHandler:
_handler
T@?,C,N,V_handler
initWithSet:copyItems:
initWithUUIDString:
xpcDaemonController
pairingCollaboratorWithErrorHandler:
pairedDeviceManagerCollaboratorWithErrorHandler:
getLocalDeviceInfoWithCompletion:
getPairedDeviceInfoWithCompletion:
registrationCollaboratorWithErrorHandler:
getLocalDeviceInfoWithCompletionBlock:queue:
device:pairingDeleted:
constructRAResponseDictionary:completionHandler:
setXpcDaemonController:
_deleteCompletion
_localCompletion
_pairedCompletion
_deliveryStatsCompletion
_xpcDaemonController
_allowedTrafficClassifiers
T@"IDSXPCDaemonController",&,N,V_xpcDaemonController
T@"NSSet",&,N
initWithSubscriptionSource:IMEI:carrierNonce:
subscriptionSource
IMEI
carrierNonce
_subscriptionSource
_IMEI
_carrierNonce
Tq,R,N,V_subscriptionSource
T@"NSString",R,N,V_IMEI
T@"NSString",R,N,V_carrierNonce
initWithTokenString:
tokenString
_tokenString
T@"NSString",R,N,V_tokenString
initWithSubscriptionIdentifier:authenticationCertificate:signature:nonce:
authenticationCertificateSignatures
initWithSubscriptionIdentifiers:authenticationCertificates:inputData:nonce:signature:
inputData
nonce
_authenticationCertificateSignatures
_inputData
_nonce
T@"NSArray",R,N,V_authenticationCertificateSignatures
T@"NSData",R,N,V_inputData
T@"NSData",R,N,V_nonce
serverVerifiableEncoding
_isPhoneCertificateVendorSupported
_clientErrorForCode:underlyingError:
_scheduleTimeoutForPhoneAuthenticationCertificateRequestCompletionBlock:
_scheduleTimeoutForPhoneAuthenticationSignatureRequestCompletionBlock:
_scheduleTimeoutForCarrierTokenCompletionBlock:
daemonRequestTimer
inFlightRequestCount
setStrongSelfReference:
_debugDescriptionForErrorCode:
initWithDataRepresentation:
_updateSelfRetentionBasedOnInFlightRequestCount
slotID
authenticatePhoneWithCompletion:
generatePhoneAuthenticationSignatureOverData:withCompletion:
requestCarrierTokenWithParameters:completion:
_subscriptionSourceFromIntegerValue:
_subscriptionSourceForContext:
strongSelfReference
_strongSelfReference
_daemonRequestTimer
T@"IDSPhoneCertificateVendor",&,N,V_strongSelfReference
T@"IDSDaemonRequestTimer",R,N,V_daemonRequestTimer
__imDataWithHexString:
_scheduleTimeoutForPhoneSubscriptionSourceCompletionBlock:
selectedPhoneNumberRegistrationSubscriptionWithError:
requestCarrierTokenWithMessageBody:completion:
setCurrentPhoneUserSubscriptionSource:completion:
requestCurrentPhoneUserSubscriptionSourceWithCompletion:
currentPhoneUserSubscriptionSourceWithError:
general
target
initWithCapacity:
_respondsToRemoteSelector:
_methodSignatureForRemoteSelector:
_assertVoidReturnValueInInvocation:
pendingInvocations
methodSignature
methodReturnType
methodReturnLength
raise:format:
initWithInterface:queue:
fulfillWithRemoteObject:
failWithError:
remoteObjectProxy
setInterface:
setPendingInvocations:
_interface
_pendingInvocations
_target
T@"NSXPCInterface",&,N,V_interface
T@"NSMutableArray",&,N,V_pendingInvocations
T@,&,N,V_target
T@"NSObject<OS_dispatch_queue>",&,N,V_queue
initWithService:delegateContext:
_initWithService:onIDSQueue:
enabledAccounts
accountWithLoginID:service:
setupAccountWithLoginID:aliases:password:completionHandler:
setupAccountWithLoginID:password:completionHandler:
setupAccountWithSetupParameters:aliases:completionHandler:
_enableAccount:
_disableAccount:
_initWithService:
IDSAccountController
uppercaseString
destinationWithDestinations:
componentsSeparatedByString:
intValue
_broadcastNewSessionToDaemon
_cleanupSocketPairConnections
__imSetFromArray
longLongValue
initWithEncryptionContext:encryptionKeySize:
_checkAndSendDataCryptor
_callDelegateWithBlock:
initWithDictionaryRepresentation:
sessionDidJoinGroup:participantUpdate:error:
participantIdentifier
participantData
relaySessionID
session:didReceiveBlockedParticipantIDs:withCode:isTruncated:
sessiondidReceiveKeyUpdate:
connection:didReceiveData:
connectionDidClose:
createAliasForParticipantID:salt:completionHandler:
setKeyMaterialCache:
boostContext
setBoostContext:
isLightweightParticipant
_delegateContext
_boostContext
_instanceID
_destinations
_fromID
_unreliableSocketPairConnection
_isInvalidated
_transportType
_connectionCountHint
_needsToWaitForPreConnectionData
_disallowCellularInterface
_disallowWifiInterface
_preferredAddressFamily
_preferCellularForCallSetup
_clientUUID
_alwaysSkipSelf
_startAsUPlusOneSession
_isLightweightParticipant
_sessionEndedReason
_preferences
_sessionConfig
_useConfServer
_stableGroupID
_groupID
_participantInfo
_cfs_client
_cfs_requestID
_cfsJoinReply
_didJoinCallback
_cfsLeaveReply
_didLeaveCallback
_existingParticipants
_joinLeaveError
_qrReason
_previousError
_keyMaterialCache
_dataCryptorRequests
_createParticipantIDAliasCallbacks
_getParticipantIDForAliasCallbacks
_requiredCapabilities
_requiredLackOfCapabilities
T@"NSString",R,N,V_uniqueID
TI,R,N,V_state
T@"NSSet",R,N,V_requiredCapabilities
T@"NSSet",R,N,V_requiredLackOfCapabilities
TB,R,V_isLightweightParticipant
T@,&,N,V_boostContext
dictionaryWithDictionary:
arrayWithArray:
_IDSGroupSession_oversize
observer
_contentWithCompletion:
handlerWithTask:delegate:queue:
perform
initWithInput:initialValue:
currentItem
currentResult
continueWithResult:
fetchGroupWithGroupID:completion:
setReducerBlock:
error
value
reduceWithCompletion:
groupContextWithCompletion:
participantsForDestinations:service:listenerID:queue:completionBlock:
cloudKitContainer
transportLog
fetchChangesSinceToken:completion:
standardUserDefaults
groupContextController:accountsForAlises:
accountIdentity
initWithAccountIdentity:aliasToAccountsMap:serviceName:
_didCreateGroup:completion:
_didCacheGroup:completion:
_didUpdateGroup:withNewGroup:completion:
_didReceiveDecryptionFailureForGroup:completion:
setSeal:
initWithAccountKey:deviceKey:
initWithAccountIdentity:dataSource:queue:
groupContextController:didCreateGroup:
setOnGroupCreate:
appendMiddleware:
setGroupContext:
setAccountIdentity:
seal
fulfillWithValue:
qSetupSeal
promise
registerResultBlock:
taskHandler:groupsWithGroupIDs:completion:
taskHandler:participantsWithDestinations:completion:
taskHandler:messagesFromToken:completion:
taskHandler:persistToken:completion:
persistedTokenForTaskHandler:completion:
taskHandler:accountInfoForAliases:completion:
scheduleTransactionLogTask:
qGroupContextWithDeviceIdentity:completion:
_seal
T@"<IDSGroupContextControllerDelegate>",N,V_delegate
T@"CUTPromiseSeal",&,N,V_seal
setCloudKitContainer:
_cloudKitContainer
_groupContext
_accountIdentity
T@"IDSCloudKitContainer",&,N,V_cloudKitContainer
T@"ENGroupContext",&,N,V_groupContext
T@"ENAccountIdentity",&,N,V_accountIdentity
_isSessionInfoValid:
_setAllValuesFromDictionary:
_parseQuickRelayDefaults
setRelayIP:
setRelayPort:
setRelaySessionToken:
setRelaySessionKey:
setRelaySessionID:
setRelayCombinedSoftwareID:
setAppleID:
initWithBase64EncodedString:options:
initWithDefaults
relayIP
relayPort
relaySessionKey
relaySessionToken
relayCombinedSoftwareID
appleID
relayIPv6
setRelayIPv6:
_relayIP
_relayPort
_relaySessionToken
_relaySessionKey
_relaySessionID
_relayCombinedSoftwareID
_appleID
_relayIPv6
T@"NSData",C,V_relayIP
T@"NSData",C,V_relayIPv6
T@"NSNumber",C,V_relayPort
T@"NSData",C,V_relaySessionToken
T@"NSData",C,V_relaySessionKey
T@"NSData",C,V_relaySessionID
T@"NSNumber",C,V_relayCombinedSoftwareID
T@"NSData",C,V_appleID
QRAllocator
copyStringGUIDForObject:
daemonListener
connectedDevices
devices
addDelegate:queue:completion:
_callDelegatesWithBlock:group:
_callDelegatesRespondingToSelector:withPreCallbacksBlock:callbackBlock:postCallbacksBlock:group:
createDirectMessageConnectionIfNeeded
_activeDevice
setAccountUUID:
setWantsAppAck:
setExpectsPeerResponse:
setMessageUUID:
setQueueOneIdentifier:
setUseDictAsTopLevel:
setRequireBluetooth:
inspectPayload:messageGuid:
setDataToEncrypt:
setWantsResponse:
setWantsProgress:
setFromID:
doubleValue
pushTopic
setNonWaking:
_isDestinationSingleLocalAddress:
blockRemoteTimeouts
setEnforceRemoteTimeouts:
setAccessToken:
setHomeKitPayload:
setSubService:
setFakeMessage:
setDisableAliasValidation:
setWantsDeliveryStatus:
setWantsCertifiedDelivery:
setDeliveryStatusContext:
setAlternateCallbackID:
setOriginalTimestamp:
setEncryptPayload:
setCompressPayload:
setLocalDelivery:
setAllowCloudDelivery:
setRequireLocalWiFi:
setAlwaysSkipSelf:
setPushPriority:
setCommandContext:
isCloudConnected
setBypassDuet:
setNonCloudWaking:
setLiveMessageDelivery:
setDropMessageIndicatorCommand:
setFireAndForget:
setBypassStorage:
setActivityContinuation:
setForceEncryptionOff:
setDuetIdentifiersOverride:
caseInsensitiveCompare:
sortedArrayUsingComparator:
setMetricReportIdentifier:
setInterestingRegistrationProperties:
setRequireAllRegistrationProperties:
setRequireLackOfRegistrationProperties:
_replaceSentinelInSendParameters:withCurrentActiveDevice:
setGroupData:
alternateCallbackID
setOrderedObject:forKey:
GUIDTRACE
getUUIDBytes:
CrossLayerLogging
initWithSet:
destinationWithStrings:
setProtobuf:
_sendWithParameters:options:loggingType:loggingDataSize:
dataWithPropertyList:format:options:error:
setData:
context
payload
timeIntervalSince1970
messageIdentifierInner:alternateCallbackID:forAccount:updatedWithResponseCode:error:lastCall:context:isDirectMessage:
connection:isActiveChanged:
connection:devicesChanged:
connection:nearbyDevicesChanged:
connection:connectedDevicesChanged:
removeOrderedObjectForKey:
setDaemonDeathResend:
_resendPendingSends
_handleLastCallForPendingIdentifier:callbackID:
initWithDictionary:boostContext:
serverReceivedTime
connection:messageIdentifier:alternateCallbackID:updatedWithResponseCode:error:lastCall:messageContext:
connection:identifier:didSendWithSuccess:error:context:
connection:identifier:alternateCallbackID:willSendToDestinations:skippedDestinations:registrationPropertyToDestinations:
outgoingResponseIdentifier
_shouldAcceptIncomingType:forTopic:localURI:remoteURI:validateAliases:guid:
connection:identifier:fromID:hasBeenDeliveredWithContext:
storageGuid
broadcastTime
broadcastID
connectionType
opportunistic
connection:didSendOpportunisticDataWithIdentifier:toIDs:
handles
unprefixedURI
_appearsToBePseudonymID
pseudonyms
prefixedURI
IDSConnection_oversize
_isAccountInValidRegistrationStateToAcceptMessages
primaryServiceName
registrationCertificate
initWithReason:guid:service:additionalInformation:
_sendMissingMessageMetric:
_stripPotentialTokenURIWithToken:
suppressedDevices
isEqualToData:
isInTransientRegistrationState
_canServiceNameAcceptMessagesInTransientRegistrationState:
connection:incomingOpportunisticData:withIdentifier:fromID:context:
incomingResponseIdentifier
connection:incomingMessage:fromID:
connection:incomingMessage:fromID:context:
connection:incomingTopLevelMessage:fromID:messageContext:
isDirectMessage
directMessageConnection
connection:incomingData:fromID:context:
originalCommand
connection:incomingEngramMessage:fromID:context:
connection:incomingAccessoryData:fromID:context:
connection:incomingAccessoryReportMessage:accessoryID:controllerID:context:
connection:incomingInvitation:fromID:context:
connection:incomingInvitationUpdate:fromID:context:
totalBytes
longValue
connection:incomingProtobuf:fromID:context:
stringWithUTF8String:
connection:didFlushCacheForRemoteURI:fromURI:guid:
setOriginalGUID:
connection:incomingPendingMessageFromID:context:
_IDSDataFromBase64String:
connection:account:sessionInviteReceived:fromID:transportType:options:context:messageContext:
connection:account:receivedGroupSessionParticipantUpdate:
connection:account:receivedGroupSessionParticipantDataUpdate:
connection:incomingGroupData:fromID:context:
unarchivedObjectOfClass:fromData:error:
connection:didUpdateDeviceIdentity:error:context:
connection:didHintCheckingTransportLogWithReason:
shouldReportMetric
sendServerMessage:command:
account:isActiveChanged:
account:devicesChanged:
account:nearbyDevicesChanged:
account:connectedDevicesChanged:
connection:incomingGUIDAckFromDirectConnection:
_init
_defaultPairedDevice
_callDelegatesRespondingToSelector:withPreCallbacksBlock:callbackBlock:postCallbacksBlock:
setDelegateCapabilities:
sendAppAckForDirectMessage:
sendInvitation:toDestination:priority:options:identifier:error:
sendInvitationUpdate:toDestination:priority:options:identifier:error:
wakingDowngradeCount
setWakingDowngradeCount:
setDirectMessageConnection:
directMessagingMetadata
setDirectMessagingMetadata:
_messageContext
_incomingMessageLoggingSequence
_outgoingMessageLoggingSequence
_delegateToInfo
_account
_serviceToken
_pendingSends
_delegateCapabilities
_indirectDelegateCallouts
_wakingDowngradeCount
_directMessageConnection
TI,N,V_wakingDowngradeCount
T@"IDSDirectMessageConnection",&,N,V_directMessageConnection
T@"NSDictionary",&,N,V_directMessagingMetadata
initWithMachServiceName:options:
upsertGroupWithInfo:previousGroup:completion:
fetchGroupWithID:completion:
publicDataRepresentationForGroup:completion:
groupFromPublicDataRepresentation:completion:
participantsForCypher:completion:
validateCachedGroup:isParentOfGroup:completion:
latestCachedGroupWithStableID:completion:
fetchAllKnownGroups:
deleteAllKnownGroupsWithCompletion:
deleteAllCachedValuesForGroupWithID:WithCompletion:
setRemoteObjectInterface:
setExportedInterface:
setExportedObject:
setInvalidationHandler:
setInterruptionHandler:
resume
groupContextDataSource
groupContextCacheMiddleware
setObserver:
_observer
T@"NSXPCConnection",&,N,V_connection
T@"<IDSGroupContextDataSourceDaemonProtocol>",R,N
T@"<IDSGroupContextCacheMiddlewareDaemonProtocol>",R,N
T@"IDSGroupContextNotifyingObserver",&,N,V_observer
DaemonProxy
_accessDelegateIdentifiersInCriticalSectionWithBlock:
identifierForServiceDelegate:
isAwaitingAcknowledgement
awaitAcknowledgementFromServiceDelegate:
stopAwaitingAcknowledgementFromServiceDelegateWithIdentifier:
stopAwaitingAcknowledgementFromAllServiceDelegates
_delegateIdentifiers
_delegateIdentifiersMutex
uniqueIDOverride
reunionSyncCollaboratorWithErrorHandler:
performDaemonControllerTask:
cbuuid
pairingProtocolVersion
BTOutOfBandKey
supportsIPsecWithSPPLink
shouldPairDirectlyOverIPsec
bluetoothMACAddress
pairingType
decodeIntegerForKey:
initWithCBUUID:pairingProtocolVersion:BTOutOfBandKey:
setSupportsIPsecWithSPPLink:
setBluetoothMACAddress:
setShouldPairDirectlyOverIPsec:
setPairingType:
encodeInteger:forKey:
_cbuuid
_BTOutOfBandKey
_bluetoothMACAddress
_pairingProtocolVersion
_pairingType
_supportsIPsecWithSPPLink
_shouldPairDirectlyOverIPsec
T@"NSUUID",R,N,V_cbuuid
Tq,R,N,V_pairingProtocolVersion
T@"NSData",R,N,V_BTOutOfBandKey
TB,N,V_supportsIPsecWithSPPLink
Tq,N,V_pairingType
T@"NSData",&,N,V_bluetoothMACAddress
TB,N,V_shouldPairDirectlyOverIPsec
pairingCollaboratorWithTimeout:errorHandler:
setActiveConnection:forKey:
hasActiveConnection:forKey:
removeActiveConnection:forKey:
_activeConnectionMap
_writeLock
_daemonDied:
IDSDeviceConnection
nsuuid
deviceConnectionKey
_cleanupCompletionBlock
_close
dictionaryWithObjectsAndKeys:
open
initWithDevice:options:completionHandler:queue:
inputStream
outputStream
metrics
setStreamPairWithInputStream:outputStream:
updateConnectionWithOptions:error:
_nsuuid
_isDefaultPairedDevice
_service
_streamName
_connectionUUID
_mtu
_openSocketCompletionHandler
_openSocketCompletionHandlerQueue
_openSocketCompletionHandlerID
_inputStreamForSocket
_outputStreamForSocket
_hasTimedOut
_clientTimeout
_awdMetrics
T@"NSDictionary",R,N
T@"NSInputStream",R,N
T@"NSOutputStream",R,N
_loadCachedAccounts
_updateLocalAccountVisibility
intersectSet:
Accounts
_initWithDictionary:uniqueID:serviceName:
setAccountInfo:
_setIsEnabled:
__imSetByApplyingBlock:
_loadCachedAccountsWithDictionaries:
addObjectsFromArray:
_updateDelegatesWithOldAccounts:newAccounts:
internalAccounts
loginID
lowercaseString
arrayByApplyingSelector:
_setupAccountWithLoginID:accountConfig:authToken:password:completionHandler:
accountInfo
_isEnabled
aliases
_cachedAccounts
_enabledAccounts
_pendingAccountsToRemove
_transactionIDToHandlersMap
_accountsLoaded
_isLocalAccountVisible
sharedDefaults
setClearStateOnLaunch:
schemaIdentifier
contextType
initWithPayload:
T@"NSString",R,C,N
Tq,R,N
initWithDictionary:schema:
_schemaIdentifier
_contextType
_dictionary
T@"NSString",R,C,V_schemaIdentifier
Tq,R,V_contextType
T@"NSDictionary",R,C,V_dictionary
_initWithQueue:isSync:connectionCreationBlock:
_initWithQueue:isSync:
collaboratorPromiseDictionary
syncCollaboratorDictionary
interruptionHandlerByTarget
initForSyncMessagingWithQueue:takingOverAndResumingConnection:
initWithQueue:takingOverAndResumingConnection:
_daemonProxyWithErrorHandler:
synchronousRemoteObjectProxyWithErrorHandler:
_collaboratorWithIdentifier:interface:timeout:errorHandler:resolverBlock:
remoteObjectProxyWithErrorHandler:
remoteObjectProxyWithTimeoutInSeconds:errorHandler:
_sync_collaboratorWithIdentifier:errorHandler:resolverBlock:
_timingOutDaemonProxyWithTimeout:errorHandler:
initWithRemoteObject:rootConnection:
initWithQueue:connectionCreationBlock:
initSyncControllerWithQueue:
opportunisticCollaboratorWithErrorHandler:
activityMonitorCollaboratorWithErrorHandler:
interalTestingCollaboratorWithErrorHandler:
removeInterruptionHandlerForTarget:
setCollaboratorPromiseDictionary:
setSyncCollaboratorDictionary:
setInterruptionHandlerByTarget:
_collaboratorPromiseDictionary
_sync
_syncCollaboratorDictionary
_interruptionHandlerByTarget
T@"IDSXPCConnection",&,N,V_connection
T@"NSMutableDictionary",&,N,V_collaboratorPromiseDictionary
T@"NSMutableDictionary",&,N,V_syncCollaboratorDictionary
T@"NSMapTable",&,N,V_interruptionHandlerByTarget
initWithIdentityData:error:
identityData
initWithIdentityData:
initWithError:
setIdentityData:
setError:
_identityData
_error
T@"NSData",&,N,V_identityData
T@"NSError",&,N,V_error
protectionClassIdentityDataMap
identityDataForDataProtectionClass:error:
initWithIdentityDataClassA:classC:classD:
setProtectionClassIdentityDataMap:
_protectionClassIdentityDataMap
T@"NSDictionary",&,N,V_protectionClassIdentityDataMap
publicIdentityClassA:
publicIdentityClassC:
publicIdentityClassD:
identityWithData:error:
_publicIdenityForDataProtectionClass:error:
initWithCBUUID:publicIdentityDataClassA:classC:classD:
fullIdentityClassA:
fullIdentityClassC:
fullIdentityClassD:
_fullIdenityForDataProtectionClass:error:
initWithWithFullIdentityDataClassA:classC:classD:
initWithDictionary:uniqueID:serviceName:delegateContext:
initWithLoginID:uniqueID:serviceName:delegateContext:
isUserDisabled
canSend
nearbyDevices
profileInfo
aliasStrings
vettedAliases
pseudonymURIMap
setPassword:
setAuthToken:
isUsableForOuterMessaging
updateAccountWithAccountInfo:
registrationError
registrationAlertInfo
profileValidationStatus
profileValidationErrorReason
nextRegistrationDate
dateRegistered
registeredURIs
accountRegisteredURIs
regionServerContext
profileID
removeRegistrationDelegate:
regionID
setRegionID:
regionBasePhoneNumber
setRegionBasePhoneNumber:
displayName
setDisplayName:
passwordUpdated
updateAuthorizationCredentials:token:
validateProfile
removeAliases:
validateAliases:
unvalidateAliases:
unregisterAccount
forceRemoveAccount
_reregisterAndReidentify:
deactivateAndPurgeIdentify
_callNearbyDevicesChanged
_reloadCachedDevices
initWithLoginID:uniqueID:serviceName:
setLoginID:
_loginID
T@"_IDSAccount",R,&,N
TB,N,S_setIsEnabled:
T@"NSDictionary",&,N
T@"NSData",R,N
T@"NSDate",R,N
T@"NSString",&,N
T@"NSString",&,N,V_loginID
IDSiCloudSignInHack
containsString:
hasPrefix:
_bestGuessURI
_URIFromFZIDType:
initWithString:
isLocallyPaired
identities
getServiceUserIDsWithCompletionBlock:queue:
getAdminAccessTokensWithWithServiceUserID:accessoryID:pairingToken:completionBlock:queue:
getConsentTokensWithServiceUserID:accessoryIDs:adminID:completionBlock:queue:
getUserAccessTokensWithServiceUserID:userID:userHandle:accessoryRequests:completionBlock:queue:
refreshUserAccessTokensWithServiceUserID:userID:accessoryRequests:completionBlock:queue:
_getServiceUserIDsCompletion
_getAdminAccessTokensCompletion
_getConsentTokensCompletion
_getUserAccessTokensCompletion
_refreshUserAccessTokensCompletion
_strictlyUnarchivedObjectOfClasses:fromData:error:
createDataBlobFrom:port:
extractDictionaryFromDataBlobFrom:error:
scannerWithString:
scanUnsignedLongLong:
participantID
groupSessionIDAlias
participantIDAlias
requestNWConnectionToVirtualParticipant:forSession:completionHandler:
initWithGroupSessionID:participantID:dataMode:
requestDataBlob:
listenForIncomingConnection:
connectionReadyCallback
setConnectionReadyCallback:
cachedConnection
setCachedConnection:
_groupSessionIDAlias
_participantIDAlias
_connectionReadyCallback
_cachedConnection
T@"NSString",R,N,V_groupSessionIDAlias
TQ,R,N,V_participantIDAlias
T@"NSData",&,N,V_salt
T@?,C,N,V_connectionReadyCallback
T@"NSObject<OS_nw_connection>",&,N,V_cachedConnection
_loadCachedDevices
_isiCloudPairingService
_isThumperService
_objectForKey:
isUserVisible
_isInvisibleAlias:
hasSuffix:
initWithUnprefixedURI:
initWithURI:isUserVisible:validationStatus:
URIWithPrefixedURI:
allowedServices
initWithURI:maskedURI:properties:
registrationInfo
null
_initWithDictionary:
_setAccount:
supportsiCloudPairing
_updateDependentDevicesWithDevicesInfo:
reloadAccounts
_callDevicesChanged
isTemporary
registrationWithServiceType:accountType:isTemporary:value:
_keychainRegistration
arrayWithObject:
_registeredURIs
initWithPrefixedURI:
_callRegistrationDelegatesWithBlock:
_setObject:forKey:
isTransientAllowlistedAccount
_callConnectedDevicesChanged
_callCloudConnectedDevicesChanged
_accountConfig
_devices
_suppressedDevices
_registrationDelegateToInfo
_devicesLoaded
T@"NSArray",R,W,N
T@"NSData",R,W,N
T@"NSDate",R,W,N
T@"NSDictionary",R,W,N
T@"NSString",R,W,N
serviceWithIdentifier:commands:manuallyAckMessages:delegateContext:completion:
noteCreatedService:
serviceWithIdentifier:commands:manuallyAckMessages:completion:
initWithService:commands:manuallyAckMessages:delegateContext:
initWithService:commands:manuallyAckMessages:
performGroupTask:
setProtobufAction:forProtobufType:isResponse:
protobufActionForType:isResponse:
sendProtobuf:fromAccount:toDestinations:priority:options:identifier:error:
sendOpportunisticData:options:identifier:error:
cancelOpportunisticDataWithIdentifier:error:
sendMessage:fromAccount:toDestinations:priority:options:identifier:error:
sendData:fromAccount:toDestinations:priority:options:identifier:error:
sendAccessoryData:toAccessoryID:accessToken:options:identifier:error:
sendInvitation:fromAccount:toDestination:options:identifier:error:
sendInvitationUpdate:fromAccount:toDestination:options:identifier:error:
sendData:priority:options:identifier:error:
sendResourceAtURL:metadata:fromAccount:toDestinations:priority:options:identifier:error:
getProgressUpdateForIdentifier:error:
sendAheadGroup:priority:options:identifier:completion:
sendAckForMessageWithContext:
cancelIdentifier:error:
sendServerMessage:command:fromAccount:
linkedDevicesWithRelationship:
serviceDomain
iCloudAccount
deviceForFromID:
linkedDeviceForFromID:withRelationship:
firstRoutableInternetDestinationForSelf
deviceForUniqueID:
devicesForBTUUID:
uriForFromID:
setPreferInfraWiFi:
setLinkPreferences:
startOTRTest:
setPretendingToBeFull:
isPretendingToBeFull
testCloudQRConnection
updateSubServices:forDevice:
datagramConnectionForSessionDestination:error:
datagramConnectionForSessionDestination:uid:error:
datagramConnectionForSocketDescriptor:error:
streamConnectionForSessionDestination:error:
streamConnectionForSocketDescriptor:error:
datagramChannelForSessionDestination:error:
datagramChannelForSocketDescriptor:error:
removeSentinelFromAliases:
objectsPassingTest:
maxEffectivePayloadSize
pseudonymForPseudonymURI:
pseudonymsForMaskedURI:
pseudonymsForMaskedURI:matchingProperties:
defaultProperties
provisionPseudonymWithProperties:requestProperties:completion:
provisionPseudonymForURI:withProperties:requestProperties:completion:
renewPseudonym:forUpdatedExpiryEpoch:completion:
renewPseudonym:forUpdatedExpiryEpoch:requestProperties:completion:
revokePseudonym:requestProperties:completion:
pseudonymPropertiesWithFeatureID:scopeID:expiryDurationInSeconds:
reportAction:ofTempURI:fromURI:withCompletion:
checkMessageSize:priority:
serviceWithIdentifier:completion:
initWithService:serviceDomain:
initWithService:commands:
initWithService:manuallyAckMessages:
addDelegate:withDelegateProperties:queue:
setProtobufAction:forIncomingRequestsOfType:
setProtobufAction:forIncomingResponsesOfType:
protobufActionForIncomingRequestsOfType:
protobufActionForIncomingResponsesOfType:
sendMessage:fromAccount:toDestinations:options:identifier:error:
sendAheadGroup:priority:options:identifier:error:
serviceIdentifier
maxHomeKitPayloadSize
updateSubServices:
activeAliases
activateAlias:
activateAliases:
deactivateAlias:
deactivateAliases:
_accountWithAlias:
provisionPseudonymWithProperties:completion:
provisionPseudonymForURI:withProperties:completion:
renewPseudonym:forUpdatedDuration:completion:
revokePseudonym:completion:
T@"_IDSService",R,N
T@"NSArray",R,C,N
iCloud
initWithResponseHandler:timeoutBlock:systemTimer:
responseHandler
timeoutBlock
systemTimer
killSystemTimer
_responseHandler
_timeoutBlock
_systemTimer
_accessRequestContextMapInCriticalSectionWithBlock:
_criticalFindRequestContextWithResponseHandler:
_handleSystemTimerFired:
initWithTimeInterval:name:shouldWake:target:selector:userInfo:
_criticalInvokeTimeoutBlockForRequestID:
_criticalInvalidateTimeoutAndReturnHandlerForRequestID:
invalidateTimeoutsAndReturnHandlersForAllRequests
_requestContextMap
_requestContextMapLock
initWithBlock:
incrementAccessCount
_cleanupBlock
_accessCount
_enforceSandboxPolicy
receivedIDSSimulatorSupportData:serviceName:messageIdentifier:
unarchivedObjectOfClasses:fromData:error:
initWithProtobufData:type:isResponse:
UUID
stringByAppendingPathComponent:
defaultManager
createDirectoryAtPath:withIntermediateDirectories:attributes:error:
writeToFile:options:error:
setAttributes:ofItemAtPath:error:
service:account:messageIdentifier:alternateCallbackID:updatedWithResponseCode:error:lastCall:
service:account:incomingTopLevelMessage:fromID:messageContext:
service:account:incomingMessage:fromID:
service:account:incomingAccessoryData:fromAccessoryID:context:
service:account:incomingAccessoryReportMessage:controllerID:accessoryID:context:
service:didHintCheckingTransportLogWithReason:
service:didUpdatePseudonymsWithChanges:
setWantsPseudonymUpdates:
noteFinishedTransactionForService:
_stopAwaitingQuickSwitchAcknowledgementFromDelegateWithIdentifier:
resendSubServicesToDaemonForCurrentDevice
service:token:time:error:
ACKTracker
lock
_reloadCachedLinkedDevices
unlock
_activeDeviceForUniqueID:
_acknowledgementBlockWithDelegateIdentifier:
_isDroppingMessages
_updateLinkedDevicesWithDevicesInfo:
_callLinkedDevicesChanged
_logConnectionMap
_callDelegatesForDevicesChanged
_setupNewConnectionForAccount:
_callIsActiveChanged
_tearDownConnectionForUniqueID:
usedEngram
setWantsManualAck:
groupCrypto
groupID
cacheIncomingGroup:completion:
_groupFromPublicDataRepresentation:completion:
senderCorrelationIdentifier
initWithTimeIntervalSince1970:
initWithfromID:state:expirationDate:uniqueID:context:
resourceTransferURLString
fileSystemRepresentation
resourceTransferMetadata
resourceTransferSandboxExtension
fileURLWithPath:
removeItemAtURL:error:
isResponse
keyRepresentationForType:isResponse:
pointerValue
setArgument:atIndex:
_messageTypeForCommand:
_FTOptionallyDecompressData
engramGroupID
_payloadFromDecryptedData:
setUsedEngram:
participants
verifyAndRevealData:sendingDevice:cypherIdentifier:error:
code
_fetchGroupWithGroupID:skipCache:completion:
bytesSent
setTotalUnitCount:
setCompletedUnitCount:
service:account:messageIdentifier:alternateCallbackID:updatedWithResponseCode:error:lastCall:messageContext:
service:account:identifier:alternateCallbackID:willSendToDestinations:skippedDestinations:registrationPropertyToDestinations:
service:didFlushCacheForRemoteURI:fromURI:guid:
_filteredAccountsFrom:
_addIdentity:
_loadCachedLinkedDevices
_setService:
compactDescription
isEqualToURI:
properties
isEqualToPseudonymProperties:
_calloutPseudonymsDidUpdate
initWithCapacity:queue:block:
wantsPseudonymUpdates
enqueueExecutionWithTarget:afterDelay:
initWithPseudonym:changeType:updateFlags:
_sendingAccountForAccount:
_preferredURIForAccount:
_accountWithURI:orPseudonym:
initWithFeatureID:scopeID:expiryEpoch:allowedServices:
FZIDType
_sendingAccountForAccount:destination:fromID:
isEqualToArray:
valueWithPointer:
__imFirstObject
_appearsToBePhoneNumber
_canAccount:sendWithFromID:
_sendSimulatorMessage:fromAccount:toDestinations:priority:options:identifier:error:
dataWithContentsOfFile:options:error:
attributesOfItemAtPath:error:
lastPathComponent
removeItemAtPath:error:
_sendSimulatorProtobuf:fromAccount:toDestinations:priority:options:identifier:error:
_sendSimulatorData:fromAccount:toDestinations:priority:options:identifier:error:
isInvitationService
currentProgress
progressWithTotalUnitCount:
deviceForFromID:fromDevices:
_handlePretendingToBeFullWithIdentifier:
isFileURL
absoluteString
path
canSendMessageWithAccount:toDestination:
_publicDataRepresentationForGroup:completion:
initWithDestination:
initWithSocketDescriptor:
groupContextController
connection:messageIdentifier:alternateCallbackID:updatedWithResponseCode:error:lastCall:
_initWithDelegateContext:
_processAccountSet:
manuallyAckMessages
setManuallyAckMessages:
cachedPseudonymURIMap
setCachedPseudonymURIMap:
pseudonymUpdateTaskQueue
setPseudonymUpdateTaskQueue:
completionBlocksByRequestID
setCompletionBlocksByRequestID:
_accountController
_uniqueIDToConnection
_protobufSelectors
_lastIsActiveSet
_linkedDevices
_subServices
_linkedDevicesLoaded
_pretendingToBeFull
_everHadDelegate
_manuallyAckMessages
_clientIsSandboxed
_listenerCaps
_groupContextController
_idsSimulatorSupportDataHandlerToken
_uniqueIDToProgress
_acknowledgementTracker
_pendingRegisteredIdentitiesBlock
_wantsPseudonymUpdates
_cachedPseudonymURIMap
_pseudonymUpdateTaskQueue
_completionBlocksByRequestID
TB,N,V_wantsPseudonymUpdates
T@"NSDictionary",&,N,V_cachedPseudonymURIMap
T@"CUTDeferredTaskQueue",&,N,V_pseudonymUpdateTaskQueue
T@"IDSGroupContextController",R,&,N,V_groupContextController
T@"NSMutableDictionary",&,N,V_completionBlocksByRequestID
T@"IDSServiceProperties",R,C,N
pretendingToBeFull
TB,N,GisPretendingToBeFull
TB,N,V_manuallyAckMessages
isEqualToPseudonymChange:
changeType
pseudonym
isEqualToPseudonym:
updateFlags
_pseudonym
_changeType
_updateFlags
T@"IDSPseudonym",R,N,V_pseudonym
TQ,R,N,V_changeType
Tq,R,N,V_updateFlags
featureID
scopeID
expiryEpoch
domain
getFileSystemRepresentation:maxLength:
stringWithFileSystemRepresentation:length:
cStringUsingEncoding:
linkItemAtPath:toPath:error:
copyItemAtPath:toPath:error:
_initWithAccountUniqueID:fromID:loginID:serviceName:
accountUniqueID
_dictionaryRepresentation
transactionLogMessageFromDictionaryRepresentation:
_accountUniqueID
T@"NSString",R,N,V_fromID
T@"NSString",R,N,V_loginID
T@"NSString",R,N,V_accountUniqueID
dataValue
initWithData:accountUniqueID:fromID:loginID:serviceName:
_dataValue
T@"NSData",R,N,V_dataValue
dictionaryValue
initWithDictionary:accountUniqueID:fromID:loginID:serviceName:
_dictionaryValue
T@"NSDictionary",R,N,V_dictionaryValue
__sendMessage:queue:reply:failBlock:waitForReply:
_createXPCConnectionOnQueue:
_disconnectFromQueryService
_requestCacheForService:completionBlock:
_requestCachedStatusForDestinations:service:waitForReply:respectExpiry:listenerID:completionBlock:
_requestStatusForDestinations:service:waitForReply:forceRefresh:bypassLimit:listenerID:completionBlock:
_requestRemoteDevicesForDestination:service:listenerID:waitForReply:completionBlock:
initialize
initWithSubscriptionSlot:labelID:
isEqualToPhoneSubscription:
phoneSubscriptionWithSubscriptionSlot:
phoneSubscriptionWithLabelID:
setSubscriptionSlot:
labelID
setLabelID:
_subscriptionSlot
_labelID
Tq,N,V_subscriptionSlot
T@"NSString",&,N,V_labelID
initWithURI:expirationDate:selected:
selected
_selected
_URI
T@"IDSURI",R,N,V_URI
TB,R,N,V_selected
initWithSyncDaemonControllerBuilder:
_performSyncAction:
requestUnselectedTemporaryPhoneAliasesWithError:
selectedSubscriptionsWithError:
selectSubscription:withError:
unselectSubscription:withError:
setSelectedSubscriptions:withError:
removeTemporaryPhoneAlias:withError:
enableTemporaryPhoneAlias:withError:
disableTemporaryPhoneAlias:withError:
unselectedTemporaryPhoneAliasesWithError:
syncDaemonController
setSyncDaemonController:
syncDaemonControllerBuilder
setSyncDaemonControllerBuilder:
_syncDaemonController
_syncDaemonControllerBuilder
T@"IDSXPCDaemonController",&,N,V_syncDaemonController
T@?,C,N,V_syncDaemonControllerBuilder
mainBundle
bundleIdentifier
executablePath
IDSDataChannels
T@"NSObject<OS_os_log>",R
transactionLog
IDSDevice
_IDSSession
initWithState:expirationDate:uniqueID:context:
_senderMergeID
_context
T@"NSUUID",R,C,N,V_uniqueID
T@"NSString",R,C,N,V_senderMergeID
Tq,R,N,V_state
T@"<IDSInvitationContext>",R,N,V_context
T@"NSDate",R,C,N,V_expirationDate
_destination
T@"<IDSDestinationProtocol>",R,C,N,V_destination
T@"NSString",R,C,N,V_fromID
_initWithQueue:syncOntoMain:takingOverAndResumingConnection:forSyncMessaging:
_setQueue:
interruptionHandler
_cleanupAllPendingTransactions
invalidationHandler
initWithQueue:remoteObject:
setRootConnection:
rootConnection
initWithTarget:connection:timeoutInSeconds:errorHandler:
valueForEntitlement:
pendingTransactions
invoke
syncOntoMain
errorForMissingEntitlement:
replacementObjectForXPCConnection:encoder:object:
connection:handleInvocation:isReply:
initWithQueue:syncOntoMain:takingOverAndResumingConnection:
hasEntitlement:
setSyncOntoMain:
setPendingTransactions:
forSyncMessaging
setForSyncMessaging:
_pendingTransactions
_rootConnection
_invalidationHandler
_syncOntoMain
_forSyncMessaging
TB,N,V_syncOntoMain
T@"NSMutableDictionary",&,N,V_pendingTransactions
T@"IDSXPCConnection",&,N,V_rootConnection
T@"<NSXPCProxyCreating>",&,N,V_remoteObject
T@?,C,N,V_invalidationHandler
TB,N,V_forSyncMessaging
_invocationHasBlock:
errorHandler
remoteObjectProxyWithUserInfo:errorHandler:
numberOfArguments
getArgumentTypeAtIndex:
setErrorHandler:
_errorHandler
Td,N,V_timeout
T@?,C,N,V_errorHandler
_nearbyStateChanged
_connectedStateChanged
_cloudConnectedStateChanged
_stateChanged
initWithCapabilitiesMap:
name
modelIdentifier
linkedUserURIs
supportsSMSRelay
supportsMMSRelay
supportsPhoneCalls
deviceColor
enclosureColor
locallyPresent
productBuildVersion
minCompatibilityVersion
maxCompatibilityVersion
isHSATrusted
supportsHandoff
supportsTethering
productName
isTinker
productVersion
fullDescription
lastActivityDate
serviceMinCompatibilityVersion
setNSUUID:
stableBluetoothIdentifier
supportsApplePay
deviceType
_info
_serviceReference
_nearbyToken
_nearby
_connected
_immutableCloudConnected
_cloudConnected
_capabilities
nearby
TB,R,N,GisNearby
connected
TB,R,N,GisConnected
cloudConnected
TB,R,N,GisCloudConnected
T@"NSUUID",&,N,SsetNSUUID:
T@"NSUUID",R,N
T@"IDSEndpointCapabilities",R,N,V_capabilities
_purgeIDStatusCacheAfter:
_cachedStatusForDestination:service:
initWithSuccess:
_updateCacheWithDictionary:service:
_delegateMapForListenerID:service:
_callDelegatesWithBlock:delegateMap:
_idStatusForDestinations:service:listenerID:allowRenew:respectExpiry:waitForReply:forceRefresh:bypassLimit:completionBlock:
_refreshIDStatusForDestinations:service:listenerID:allowRefresh:respectExpiry:waitForReply:forceRefresh:bypassLimit:queue:completionBlock:
_currentRemoteDevicesForDestinations:service:listenerID:queue:waitForReply:completionBlock:
refreshIDStatusForDestinations:service:listenerID:forceRefresh:queue:completionBlock:
requiredIDStatusForDestinations:service:listenerID:queue:completionBlock:
currentIDStatusForDestinations:service:respectExpiry:listenerID:queue:completionBlock:
appendString:
initWithDelegateContext:queueController:
_isListenerWithID:listeningToService:
_setCurrentIDStatus:forDestination:service:
_sync_refreshIDStatusForDestinations:service:listenerID:completionBlock:
_sync_currentIDStatusForDestinations:service:respectExpiry:listenerID:completionBlock:
_sync_currentRemoteDevicesForDestinations:service:listenerID:completionBlock:
refreshIDStatusForDestination:service:listenerID:queue:completionBlock:
requiredIDStatusForDestination:service:listenerID:queue:completionBlock:
currentIDStatusForDestination:service:respectExpiry:listenerID:queue:completionBlock:
_hasCacheForService:
_currentCachedIDStatusForDestination:service:listenerID:
_warmupQueryCacheForService:
_flushQueryCacheForService:
addDelegate:forService:listenerID:queue:
removeDelegate:forService:listenerID:
_idStatusCache
_transactionIDToBlockMap
_listenerIDToServicesMap
copyOpportunisticCacheWithBlock:
destinationWithDevice:
operatingSystemVersion
T@"IDSEndpointCapabilities",R,N
T{?=qqq},R,N
T@"IDSDestination",R,N
_linkID
_networkType
_connectionType
_RATType
_maxMTU
_remoteNetworkType
_remoteConnectionType
_remoteRATType
_maxBitrate
_linkUUID
_QRSessionID
_relayServerProvider
_serverIsDegraded
_localLinkFlags
_remoteLinkFlags
_localDataSoMask
_remoteDataSoMask
_isVirtualRelayLink
_localInterfaceName
stringWithCString:encoding:
initWithDummyInformation
initWithLinkID:linkUUID:QRSessionID:networkType:connectionType:RATType:MTU:remoteNetworkType:remoteConnectionType:remoteRATType:maxBitrate:relayServerProvider:relaySessionToken:relaySessionKey:serverIsDegraded:
initWithAttributes:maxBitrate:relayServerProvider:relaySessionToken:relaySessionKey:
linkID
linkUUID
QRSessionID
networkType
RATType
maxMTU
maxBitrate
remoteNetworkType
remoteConnectionType
remoteRATType
relayServerProvider
serverIsDegraded
setRATType:
setMTU:
setMaxBitrate:
remoteLinkFlags
localLinkFlags
localDataSoMask
remoteDataSoMask
isVirtualRelayLink
localInterfaceName
Tc,R
T@"NSUUID",R
TC,R
TI,R
TS,R
T@"NSData",R
T@"NSString",R
_verboseFunctionalLogging
_socketDescriptor
_eventHandler
_readHandler
_readHandlerWithOptions
_readLock
_hasMetadata
_sentFirstReadLinkInfo
_receivedPreConnectionData
_waitForPreConnectionDataForConnected
_startCalled
_startAutomatically
_osChannelFD
_pathEvaluator
_cellularLink
_linkContexts
_defaultLinkID
_preConnectionData
_sendingMetadata
_needsMediaEncryptionInfo
_outgoingBytes
_incomingBytes
_outgoingPackets
_incomingPackets
_lastOutgoingStatReport
_lastIncomingStatReport
_MKIArrivalTime
_firstPacketArrivalTimeForMKI
_probingDict
numberWithChar:
_reportFirstPacketTimeForMKI:
addNewIDSDataChannelLinkWithAttributes:linkAttributesLength:
removeIDSDataChannelLinkContext:linkUUID:reason:
selectDefaultLink:
sendMediaEncryptionInfoWithMKM:MKS:MKI:isLocallyGenerated:encryptionSequenceNumber:
sendMediaMembershipChangedInfo:
processMetadataForDatagram:size:datagramInfo:options:
_logReceivingStats:
readDatagramWithCompletionHandler:
readDatagramsWithCompletionHandler:
sendEventConnectedWithDummyLinkInfo
setChannelPreferences:
writeDatagrams:datagramSizes:datagramInfo:datagramCount:options:completionHandler:
generateMetadataWithDatagramInfo:options:currentDatagramCount:totalDatagramCount:byteBuffer:
_logSendingStats:
_writeDatagram:datagramSize:datagramInfo:options:completionHandler:
removeObjectsInRange:
isInternalInstall
_buildPacketBufferMetaData:
sendMetadata
_setWiFiAssist:
serializeSessionInfoMetadata:
connectedLinks
defaultLink
cachedMetadata
underlyingFileDescriptor
start
writeDatagrams:datagramsSize:datagramsInfo:datagramsCount:options:completionHandler:
writeDatagram:datagramSize:flags:completionHandler:
writeDatagram:datagramSize:datagramInfo:options:completionHandler:
setEventHandler:
setReadHandler:
setReadHandlerWithOptions:
readyToRead
setWiFiAssist:
startActiveProbingWithOptions:
stopActiveProbingWithOptions:
flushLinkProbingStatusWithOptions:
queryStatusWithOptions:
setUPlusOneMode:isInitiator:
startMKMRecoveryForParticipantIDs:
requestSessionInfoWithOptions:
reportFirstPacketTimeForMKI:
osChannelInfoLog
T@"NSArray",R
T@"IDSDataChannelLinkContext",R
tempObject
setTempObject:
finishedTransaction
setFinishedTransaction:
_finishedTransaction
_tempObject
T@"<IDSXPCConnectionProtocol>",&,N,V_connection
T@"NSObject<OS_xpc_object>",&,N,V_tempObject
TB,N,V_finishedTransaction
XPCAdapter
initWithXPCAdapter:
_temporarilyStoreMessage:forServiceIdentifier:
createServiceConnectionWithServiceName:invalidationHandler:terminationHandler:peerEventHandler:peerQueue:
_performLockedAccess:
teardownService:
teardownAll
connectionInfoByServiceIdentifier
setConnectionInfoByServiceIdentifier:
checkinLock
setCheckinLock:
setXPCAdapter:
_checkinLock
_connectionInfoByServiceIdentifier
_XPCAdapter
T@"NSMutableDictionary",&,N,V_connectionInfoByServiceIdentifier
T{os_unfair_lock_s=I},N,V_checkinLock
T@"<IDSXPCAdapter>",&,N,V_XPCAdapter
initStreamWithDevice:options:completionHandler:queue:
T@"_IDSDeviceConnection",R,N
acAccountWithProfileID:username:accountStore:
setupActivityMonitorClient:forActivity:
initWithName:contextKey:
_currentIDStatusForDestination:service:respectExpiry:listenerID:
_currentIDStatusForDestinations:service:respectExpiry:listenerID:
participantsFromEndpoints:
forceRefreshIDStatusForDestinations:service:listenerID:queue:completionBlock:
refreshIDStatusForDestinations:service:listenerID:queue:errorCompletionBlock:
currentIDStatusForDestinations:service:listenerID:queue:completionBlock:
currentIDStatusForDestination:service:listenerID:queue:completionBlock:
_refreshIDStatusForDestination:service:listenerID:
_refreshIDStatusForDestinations:service:listenerID:
_currentIDStatusForDestination:service:listenerID:
_currentIDStatusForDestinations:service:listenerID:
_currentCachedRemoteDevicesForDestinations:service:listenerID:
requestIDStatusForDestinations:service:listenerID:queue:completionBlock:
requestIDStatusForDestination:service:listenerID:queue:completionBlock:
_queueController
continuityDidUpdateState:
_handleReconnect
continuity:didStartAdvertisingOfType:
continuity:didStopAdvertisingOfType:
continuity:didStopAdvertisingOfType:withError:
continuity:didFailToStartAdvertisingOfType:withError:
continuity:didStartScanningForType:
continuity:didStopScanningForType:
continuity:didFailToStartScanningForType:withError:
continuity:didDiscoverType:withData:fromPeer:
continuity:didLosePeer:type:
continuity:didStartTrackingPeer:type:error:
continuity:didStopTrackingPeer:type:
Tq,R,V_state
_initWithAccount:destinations:options:delegateContext:
sessionEnded:
_setupSocketPairToDaemon
initWithSocket:queue:delegate:
session:didReceiveData:
sendData:
session:receivedInvitationAcceptFromID:withData:
session:receivedInvitationAcceptFromID:
session:receivedInvitationDeclineFromID:withData:
session:receivedInvitationDeclineFromID:
session:receivedInvitationCancelFromID:withData:
session:receivedInvitationCancelFromID:
session:receivedSessionMessageFromID:withData:
session:receivedSessionEndFromID:withData:
session:invitationSentToTokens:
_initWithAccount:destinations:transportType:connectionCountHint:needsToWaitForPreConnectionData:uniqueID:delegateContext:
_setupUnreliableSocketPairConnection
_initialLinkType
_isAudioEnabled
_isMuted
_isLegacy
_inviteTimeout
_disableEncryption
_shouldUseSocketForTransport
_enableSingleChannelDirectMode
TQ,R,N,V_initialLinkType
destinationWithDeviceURI:
destinationWithRapportPublicIdentifierURI:
destinationWithRapportPublicIdentifier:
_groupContextDataSource
_groupContextCacheMiddleware
groupContext:upsertGroupWithInfo:previousGroup:completion:
groupContext:fetchGroupWithID:completion:
publicDataRepresentationForGroup:inContext:completion:
groupFromPublicDataRepresentation:inContext:completion:
middlewareCacheCostForContext:
groupContext:cacheGroup:completion:
groupContext:cachedGroupWithID:completion:
groupContext:latestCachedGroupWithStableID:completion:
groupContext:fetchAllKnownGroups:
deleteAllKnownGroupsForGroupContext:completion:
deleteCachedValueForForGroupContext:withGroupID:completion:
_contextKey
setExpirationDate:
messageID
setMessageID:
messageData
setMessageData:
messageBody
numberWithUnsignedLong:
wantsResponse
_messageData
_messageID
T@"NSData",&,N,V_messageData
T@"NSDate",&,N,V_expirationDate
T@"NSString",&,N,V_messageID
initWithSyncDaemonControllerBuilder:daemonControllerBuilder:
_handleInterruption
_updateActivity:isSupported:
listenersByActivity
setListenersByActivity:
daemonControllerBuilder
setDaemonControllerBuilder:
_listenersByActivity
_daemonControllerBuilder
T@"NSMutableDictionary",&,N,V_listenersByActivity
T@?,C,N,V_daemonControllerBuilder
initWithLimit:timeLimit:
_invalidateNextQueryTimer
_nextQuery:
scheduledTimerWithTimeInterval:target:selector:userInfo:repeats:
initWithTimeIntervalSinceNow:
_calloutToDelegateWithResult:error:
_scheduleNextQuery:
timeIntervalSinceDate:
underLimit
noteItem:
removeObjectsInArray:
timeToUnderLimit:
idStatusUpdatedForDestinations:
batchQueryController:updatedDestinationsStatus:onService:error:
underLimitForItem:
_destinationsToQuery
_nextQueryTimer
_timeOfDeath
_rateLimiter
_parent
_numberOfQueriesDone
_isDead
updateAvailability
_updateAvailability
_postAvailability:
_availability
_token
aliasToAccountsMap
accountForAlias:
_aliasToAccountsMap
T@"ENAccountIdentity",R,N,V_accountIdentity
T@"NSDictionary",R,N,V_aliasToAccountsMap
initWithTask:delegate:queue:
task
setTask:
_task
T@"IDSTransactionLogTask",&,N,V_task
qPerformWithToken:
qIngestMessages:completion:
recipientAlias
syncTask
_transactionMessagesFromTransportMessages:withParticipants:groups:accountInfo:completion:
qFetchParticipantsFromDeviceMessges:andGroupsFromGroupMessages:completion:
_destinationsInMessages:
_groupIDsFromMessages:
_groupsByGroupIDFromGroups:
_participantsByAliasFromParticipants:
_transactionMessageFromTransportMessage:groups:participants:accountInfo:
_transactionMessageFromTransportMessage:withGroupID:groups:accountInfo:
_transactionMessageFromTransportMessage:withParticipants:accountInfo:
alias
deviceWithIdentifier:
encryptedPayload
cypherIdentifier
verifyAndRevealData:withReceipient:cypherIdentifier:error:
_transactionMessageFromTransportMessage:withDecryptedPayload:accountInfo:
senderAlias
setSyncTask:
_syncTask
T@"IDSTransactionLogSyncTask",&,N,V_syncTask
T@"<IDSTransactionLogTaskHandlerDelegate>",W,N,V_delegate
@32@0:8@16@24
v16@0:8
q16@0:8
v40@0:8q16@24@32
v24@0:8q16
v48@0:8q16@24@32@40
v56@0:8q16@24@32@40@48
v60@0:8q16@24@32@40@48B56
v52@0:8q16@24@32@40B48
v64@0:8q16@24@32@40@48B56B60
v56@0:8q16@24@32@40B48B52
v24@0:8@16
v32@0:8@16q24
@"_IDSContinuity"
B24@0:8@16
#16@0:8
@16@0:8
@24@0:8:16
@32@0:8:16@24
@40@0:8:16@24@32
B16@0:8
B24@0:8#16
B24@0:8:16
Vv16@0:8
Q16@0:8
^{_NSZone=}16@0:8
B24@0:8@"Protocol"16
@"NSString"16@0:8
v68@0:8@16@24i32@36@44@52@60
v52@0:8@16@24@32i40@44
v32@0:8@16@24
v40@0:8@16@24@32
v56@0:8@16@24@32@40@48
v56@0:8@16@24d32@40@48
v48@0:8@16@24@32@40
v64@0:8@16@24@32@40@48@56
v28@0:8B16@20
v48@0:8@16q24@32@40
v80@0:8@16@24@32@40@48@56q64q72
v48@0:8@16@24@32q40
v36@0:8@16@24I32
v36@0:8@16@24B32
v28@0:8@16I24
v32@0:8q16@24
v60@0:8@16@24@32@40@48B56
v44@0:8@16@24@32S40
v40@0:8Q16@24@32
v48@0:8q16@24@32B40B44
v52@0:8@16@24B32@36@44
v40@0:8q16q24@32
v68@0:8@"NSString"16@"NSString"24i32@"NSDictionary"36@"NSString"44@"NSString"52@"NSString"60
v52@0:8@"NSString"16@"NSString"24@"NSString"32i40@"NSDictionary"44
v24@0:8@"NSString"16
v32@0:8@"NSString"16@"NSDictionary"24
v32@0:8@"NSString"16@"NSString"24
v40@0:8@"NSString"16@"NSString"24@"NSString"32
v32@0:8@"NSArray"16@"NSString"24
v56@0:8@"IDSURI"16@"NSString"24@"IDSPseudonymProperties"32@"IDSPseudonymRequestProperties"40@"NSString"48
v56@0:8@"IDSPseudonym"16@"NSString"24d32@"IDSPseudonymRequestProperties"40@"NSString"48
v48@0:8@"IDSPseudonym"16@"NSString"24@"IDSPseudonymRequestProperties"32@"NSString"40
v32@0:8@"NSNumber"16@"NSString"24
v64@0:8@"NSString"16@"NSString"24@"NSString"32@"NSDictionary"40@"NSNumber"48@"NSArray"56
v40@0:8@"NSString"16@"NSNumber"24@"NSString"32
v32@0:8@"NSData"16@"NSString"24
v48@0:8@"NSNumber"16@"NSString"24@"NSString"32@"NSString"40
v24@0:8@"NSArray"16
v24@0:8@"NSSet"16
v40@0:8@"NSArray"16@"NSString"24@"NSString"32
v24@0:8@"NSDictionary"16
v56@0:8@"NSData"16@"NSString"24@"NSString"32@"NSString"40@"NSDictionary"48
v32@0:8@"NSDictionary"16@"NSString"24
v56@0:8@"NSURL"16@"NSDictionary"24@"NSArray"32@"NSString"40@"NSString"48
v40@0:8@"NSDictionary"16@"NSNumber"24@"NSString"32
v28@0:8B16@"NSString"20
v32@0:8@"NSString"16q24
v48@0:8@"NSDictionary"16q24@"ENGroupID"32@"NSString"40
v56@0:8@"NSString"16@"NSString"24@"NSNumber"32@"NSNumber"40@"NSNumber"48
v80@0:8@"NSString"16@"NSString"24@"NSString"32@"NSNumber"40@"NSNumber"48@"NSNumber"56q64q72
v48@0:8@"NSString"16@"NSString"24@"NSString"32q40
v36@0:8@"NSSet"16@"NSSet"24I32
v32@0:8@"NSObject<OS_xpc_object>"16@"NSDictionary"24
v36@0:8@"NSString"16@"NSData"24B32
v32@0:8@"NSString"16@"NSData"24
v28@0:8@"NSString"16I24
v40@0:8@"NSData"16@"NSSet"24@"NSString"32
v32@0:8q16@"NSString"24
v60@0:8@"NSArray"16@"NSString"24@"NSString"32@"NSData"40@"IDSMessagingCapabilities"48B56
v44@0:8@"NSArray"16@"NSString"24@"NSString"32S40
v40@0:8@"NSSet"16@"NSString"24@"NSString"32
v48@0:8@"NSData"16@"NSString"24@"NSString"32@"NSData"40
v32@0:8@"NSString"16@"NSArray"24
v40@0:8@"NSArray"16@"NSArray"24@"NSString"32
v40@0:8Q16@"NSData"24@"NSString"32
v40@0:8q16@"NSData"24@"NSDictionary"32
v40@0:8q16@"NSData"24@"NSData"32
v48@0:8q16@"NSData"24@"NSData"32@"NSArray"40
v48@0:8q16@"NSData"24@"NSData"32B40B44
v56@0:8q16@"NSData"24@"NSData"32@"NSArray"40B48B52
v52@0:8@"NSString"16@"NSString"24B32@"NSNumber"36@"NSString"44
v56@0:8q16@"IDSURI"24@"IDSURI"32@"NSString"40@"NSString"48
v40@0:8@"NSString"16@"NSString"24@"NSData"32
v40@0:8@"NSString"16@"NSArray"24@"NSString"32
v48@0:8@"NSString"16@"NSString"24@"NSString"32@"NSArray"40
v40@0:8@"NSString"16@"NSString"24@"NSArray"32
v48@0:8@"NSString"16@"NSString"24@"NSString"32@"NSString"40
v40@0:8q16q24@"NSString"32
v40@0:8@"NSData"16@"NSString"24@"NSString"32
v28@0:8@?16B24
v24@0:8@?16
B28@0:8B16@?20
v20@0:8B16
v40@0:8B16@20@28I36
B20@0:8B16
B40@0:8B16@20@28I36
I16@0:8
B20@0:8I16
v20@0:8i16
i16@0:8
v32@0:8@16@?24
B40@0:8@16@24@32
B32@0:8@16@24
@24@0:8@16
I24@0:8@16
B32@0:8I16@20B28
v28@0:8B16@?20
@24@0:8@?16
@"IMRemoteObject<IDSDaemonProtocol>"
@"IDSDaemonControllerForwarder"
@"IMLocalObject"
@"IDSDaemonListener"
@"NSProtocolChecker"
@"NSString"
@"NSObject<OS_dispatch_queue>"
@"NSObject<OS_dispatch_group>"
@"NSMutableDictionary"
@"NSSet"
@"NSMutableSet"
@40@0:8@16@24@32
@48@0:8@16@24@32@?40
@?16@0:8
v28@0:8I16@?20
v48@0:8@16@24@32@?40
v72@0:8@16@24@32@40@48@56@?64
v52@0:8@16@24@32B40@?44
v44@0:8@16B24B28B32@?36
v32@0:8@"NSData"16@?<v@?@"NSDictionary"@"NSError">24
v24@0:8@?<v@?@"NSArray">16
v28@0:8B16@?<v@?>20
v24@0:8@?<v@?I>16
v28@0:8I16@?<v@?>20
v32@0:8@"NSString"16@?<v@?>24
v48@0:8@"NSString"16@"NSString"24@"NSDictionary"32@?<v@?>40
v72@0:8@"NSString"16@"NSString"24@"NSString"32@"NSString"40@"NSString"48@"NSString"56@?<v@?>64
v24@0:8@?<v@?@"NSError">16
v48@0:8@"NSString"16@"IDSURI"24@"IDSURI"32@?<v@?@"IDSQueryKeyTransparencyContext"@"NSArray"@"NSError">40
v52@0:8@"NSString"16@"IDSURI"24@"IDSURI"32B40@?<v@?@"NSArray"@"NSError">44
v48@0:8@"NSString"16@"IDSURI"24@"IDSURI"32@?<v@?@"NSError">40
v24@0:8@?<v@?@"NSArray"@"NSError">16
v24@0:8@?<v@?@"NSData"@"NSError">16
v32@0:8@"NSString"16@?<v@?@"NSError">24
v44@0:8@"NSString"16B24B28B32@?<v@?@"NSError">36
v32@0:8@"NSString"16@?<v@?@"NSString"@"NSError">24
v24@0:8@?<v@?@"NSString">16
v28@0:8B16@?<v@?@"NSError">20
v32@0:8@"NSString"16@?<v@?@"NSMutableArray">24
v32@0:8@"NSArray"16@?<v@?@"NSError">24
v20@0:8S16
v32@0:8@16C24I28
v28@0:8I16@20
C16@0:8
@32@0:8@16B24I28
v24@0:8Q16
*16@0:8
v24@0:8*16
v20@0:8I16
@"NSObject<OS_nw_connection>"
@"NSMutableArray"
@"<IDSDirectMessageConnectionDelegate>"
@"NSObject<OS_dispatch_source>"
@"IDSDevice"
@"IDSDeviceConnection"
@"IDSServiceProperties"
@"IMPowerAssertion"
@"NSDictionary"
v24@0:8@"NSCoder"16
@24@0:8@"NSCoder"16
@24@0:8^{_NSZone=}16
@40@0:8@16Q24^@32
@48@0:8@16@24Q32^@40
{os_unfair_lock_s="_os_unfair_lock_opaque"I}
@"NSUUID"
@"NSData"
^{_CCCryptor=}
@"NSMapTable"
@40@0:8@16Q24@32
@48@0:8@16Q24@32@40
Q32@0:8Q16@24
Q24@0:8@16
v44@0:8@16@24@32B40
v28@0:8@16S24
@40@0:8Q16q24Q32
@48@0:8Q16@24q32Q40
@24@0:8q16
@"_IDSGroupSession"
v32@0:8@"IDSPhoneSubscription"16@?<v@?@"NSArray"@"NSError">24
v32@0:8@"NSArray"16@?<v@?@"NSArray"@"NSError">24
v32@0:8@"IDSURI"16@?<v@?B@"NSError">24
v32@0:8@"NSArray"16@?<v@?@"NSDictionary">24
@28@0:8@16B24
q32@0:8@16@24
@"IDSServiceMonitor"
v72@0:8@16@24@32@40@48@56@64
v80@0:8@16@24@32@40@48@56@64@72
v68@0:8@16@24@32q40@48B56@60
v40@0:8@16d24@32
v52@0:8@16@24@32B40@44
v36@0:8@16I24@28
v28@0:8@16B24
v44@0:8@16@24I32S36B40
v40@0:8@16@24I32B36
v48@0:8@16Q24Q32@40
v40@0:8@16q24@32
v40@0:8@16@24^B32
v52@0:8@16q24B32d36@44
v44@0:8@16B24@28@36
v36@0:8B16@20@28
v28@0:8B16@"NSDictionary"20
v48@0:8@"NSData"16@"NSString"24@"NSString"32@"NSDictionary"40
v72@0:8@"NSDictionary"16@"NSString"24@"NSDictionary"32@"NSString"40@"NSString"48@"NSString"56@"NSDictionary"64
v64@0:8@"NSData"16@"NSString"24@"NSString"32@"NSString"40@"NSString"48@"NSDictionary"56
v80@0:8@"NSString"16@"NSString"24@"NSString"32@"NSString"40@"NSString"48@"NSString"56@"NSString"64@"NSDictionary"72
v64@0:8@"NSDictionary"16@"NSString"24@"NSString"32@"NSString"40@"NSString"48@"NSDictionary"56
v68@0:8@"NSString"16@"NSString"24@"NSString"32q40@"NSError"48B56@"NSDictionary"60
v64@0:8@"NSString"16@"NSString"24@"NSString"32@"NSArray"40@"NSArray"48@"NSDictionary"56
v56@0:8@"NSString"16@"NSString"24@"NSString"32@"NSString"40@"NSDictionary"48
v40@0:8@"NSString"16d24@"NSError"32
v40@0:8@"NSString"16@"NSString"24@"NSError"32
v32@0:8@"NSString"16@"NSNumber"24
v32@0:8@"NSData"16@"NSError"24
v40@0:8@"NSData"16@"NSString"24@"NSError"32
v72@0:8@"NSData"16@"NSData"24@"NSArray"32@"NSArray"40@"NSData"48@"NSString"56@"NSError"64
v40@0:8@"NSNumber"16@"NSString"24@"NSError"32
v52@0:8@"NSString"16@"NSDictionary"24@"NSString"32B40@"NSError"44
v64@0:8@"NSDictionary"16@"NSString"24@"NSString"32@"NSString"40@"NSString"48@"NSNumber"56
v36@0:8@"NSString"16I24@"NSError"28
v36@0:8@"NSString"16@"NSSet"24B32
v28@0:8@"NSString"16B24
v40@0:8@"NSString"16@"NSArray"24@"NSError"32
v40@0:8@"NSString"16@"NSDictionary"24@"NSError"32
v32@0:8@"NSString"16@"NSError"24
v36@0:8@"NSString"16@"NSArray"24B32
v44@0:8@"NSString"16@"NSArray"24I32S36B40
v40@0:8@"NSString"16@"NSArray"24I32B36
v32@0:8@"NSString"16@"NSUUID"24
v48@0:8@"NSString"16Q24Q32@"NSData"40
v48@0:8@"NSDictionary"16@"NSString"24@"NSString"32@"NSString"40
v40@0:8@"NSObject<OS_xpc_object>"16@"NSString"24@"NSError"32
v40@0:8@"NSString"16q24@"NSError"32
v32@0:8q16@"NSError"24
v40@0:8q16@"NSData"24@"NSString"32
v32@0:8@"NSArray"16@"NSError"24
v40@0:8@"NSString"16@"NSString"24^B32
v40@0:8@"NSString"16@"NSError"24@"NSArray"32
v40@0:8q16@"NSString"24@"NSError"32
v52@0:8@"NSString"16q24B32d36@"NSError"44
v44@0:8@"IDSPseudonym"16B24@"NSError"28@"NSString"36
v36@0:8B16@"NSError"20@"NSString"28
v32@0:8@?16@?24
@40@0:8@16@24B32B36
v40@0:8@16@24@?32
q24@0:8@16
@"IDSInternalQueueController"
@"NSHashTable"
@"CUTWeakReference"
@"NSDate"
@"NSArray"
@52@0:8@16@24Q32@40B48
v40@0:8@"IDSActivityUpdate"16@"NSString"24@?<v@?>32
@48@0:8@16@24@32@40
@"<IDSActivityMonitorListenerDelegate>"
@"_IDSActivityMonitorXPCConnector"
v56@0:8@16@24q32@40@48
v60@0:8@16@24@32B40@44@52
v56@0:8@16@24@32q40q48
v64@0:8@"IDSService"16@"IDSAccount"24@"NSData"32@"NSString"40@"NSString"48@"IDSMessageContext"56
v40@0:8@"IDSService"16@"NSString"24@"NSArray"32
v56@0:8@"IDSService"16@"IDSAccount"24@"NSDictionary"32@"NSString"40@"IDSMessageContext"48
v56@0:8@"IDSService"16@"IDSAccount"24@"NSData"32@"NSString"40@"IDSMessageContext"48
v56@0:8@"IDSService"16@"IDSAccount"24@"IDSProtobuf"32@"NSString"40@"IDSMessageContext"48
v56@0:8@"IDSService"16@"IDSAccount"24@"NSURL"32@"NSString"40@"IDSMessageContext"48
v64@0:8@"IDSService"16@"IDSAccount"24@"NSURL"32@"NSDictionary"40@"NSString"48@"IDSMessageContext"56
v56@0:8@"IDSService"16@"IDSAccount"24q32@"NSString"40@"IDSMessageContext"48
v32@0:8@"IDSService"16@"NSSet"24
v32@0:8@"IDSService"16@"NSArray"24
v52@0:8@"IDSService"16@"IDSAccount"24@"NSString"32B40@"NSError"44
v60@0:8@"IDSService"16@"IDSAccount"24@"NSString"32B40@"NSError"44@"IDSMessageContext"52
v56@0:8@"IDSService"16@"IDSAccount"24@"NSString"32q40q48
v48@0:8@"IDSService"16@"IDSAccount"24@"NSString"32@40
v56@0:8@"IDSService"16@"IDSAccount"24@"NSString"32@"NSString"40@48
v48@0:8@"IDSService"16@"IDSAccount"24@"IDSSession"32@"NSString"40
v56@0:8@"IDSService"16@"IDSAccount"24@"IDSSession"32@"NSString"40@"NSDictionary"48
v56@0:8@"IDSService"16@"IDSAccount"24@"IDSSession"32@"NSString"40@"NSData"48
v40@0:8@"IDSService"16@"IDSAccount"24@"IDSGroupSessionParticipantUpdate"32
v24@0:8@"IDSService"16
v40@0:8@"IDSService"16@"IDSDevice"24@?<v@?>32
v48@0:8@"IDSService"16@"IDSAccount"24@"IDSReceivedInvitation"32@"IDSMessageContext"40
v48@0:8@"IDSService"16@"IDSAccount"24@"IDSSentInvitation"32@"IDSMessageContext"40
@"IDSService"
@"<IDSInvitationManagerDelegate>"
@"NSNumber"
@36@0:8B16@20@28
@"IDSCertifiedDeliveryContext"
v40@0:8@"NSData"16@"NSString"24@"IDSServerMessagingIncomingContext"32
v48@0:8@16@24^@32@?40
{os_unfair_lock_s=I}16@0:8
v20@0:8{os_unfair_lock_s=I}16
@"IDSXPCDaemonController"
v32@0:8@"ENGroup"16@?<v@?@"NSError">24
v40@0:8@"ENGroup"16@"ENGroup"24@?<v@?@"NSError">32
@32@0:8Q16Q24
@32@0:8Q16@24
v32@0:8@"IDSAccountController"16@"IDSAccount"24
@56@0:8@16@24d32d40@48
v32@0:8@16Q24
v40@0:8Q16Q24@?32
@24@0:8Q16
v32@0:8Q16@?24
v48@0:8@16@24Q32@?40
v44@0:8@16Q24B32@?36
v52@0:8@16@24Q32B40@?44
v40@0:8d16@24B32B36
B40@0:8Q16Q24@?32
d16@0:8
v24@0:8d16
@"IDSCTAdapter"
@40@0:8@16@24q32
@48@0:8@16@24q32@40
B32@0:8@16^@24
Q24@0:8Q16
@"_IDSSession"
@"IDSDaemonRequestTimer"
@"_IDSBatchIDQueryController"
@36@0:8@16@24B32
B64@0:8@16@24q32@40^@48^@56
@"_IDSConnection"
B56@0:8@16@24@32^@40^@48
@"NSObject<OS_nw_parameters>"
@"NSObject<OS_nw_endpoint>"
v40@0:8@16q24@?32
v36@0:8@16B24@?28
v32@0:8@"NSUUID"16@?<v@?@"NSError">24
v32@0:8@"IDSLocalPairingAddPairedDeviceInfo"16@?<v@?@"NSError">24
v40@0:8@"NSUUID"16q24@?<v@?@"NSError">32
v24@0:8@?<v@?@"IDSLocalPairingLocalDeviceRecord"@"NSDictionary"@"NSError">16
v36@0:8@"NSUUID"16B24@?<v@?@"NSError">28
v40@0:8@"NSString"16@"NSSet"24@?<v@?@"NSError">32
B72@0:8@16@24@32q40@48^@56^@64
v48@0:8@"NSString"16@"NSString"24@"NSString"32@?<v@?@"NSString"@"NSString"B>40
@56@0:8@16Q24Q32q40Q48
@64@0:8@16Q24Q32@40q48Q56
@36@0:8i16q20Q28
v24@0:8@?<v@?@"<IDSXPCPairing>"@"NSError">16
v24@0:8@?<v@?@"<IDSXPCPairedDeviceManager>"@"NSError">16
v32@0:8@"NSString"16@?<v@?@"<IDSXPCReunionSync>"@"NSError">24
v24@0:8@?<v@?@"<IDSXPCOpportunistic>"@"NSError">16
v24@0:8@?<v@?@"<IDSXPCRegistration>"@"NSError">16
v24@0:8@?<v@?@"<IDSXPCActivityMonitor>"@"NSError">16
v24@0:8@?<v@?@"<IDSXPCServerMessaging>"@"NSError">16
v24@0:8@?<v@?@"<IDSXPCInternalTesting>"@"NSError">16
@32@0:8@?16@24
v40@0:8@16@?24@32
v32@0:8@?16@24
@"_IDSCompletionHandler"
@40@0:8q16@24@32
@56@0:8@16@24@32@40@48
@32@0:8q16@24
q24@0:8q16
@"IDSPhoneCertificateVendor"
v32@0:8q16@?24
q24@0:8^@16
@"NSXPCInterface"
@"_IDSAccountController"
v32@0:8@"IDSBaseSocketPairConnection"16@"NSData"24
v24@0:8@"IDSBaseSocketPairConnection"16
v40@0:8Q16@24@?32
@"IDSBaseSocketPairConnection"
^{cfs_client_s=}
@"NSError"
@"IDSGroupEncryptionKeyMaterialCache"
v40@0:8@"IDSTransactionLogTaskHandler"16@"NSArray"24@?<v@?@"NSArray"@"NSError">32
v40@0:8@"IDSTransactionLogTaskHandler"16@"<NSSecureCoding>"24@?<v@?@"NSArray"@"<NSSecureCoding>"B@"NSError">32
v40@0:8@"IDSTransactionLogTaskHandler"16@"<NSSecureCoding>"24@?<v@?@"NSError">32
v32@0:8@"IDSTransactionLogTaskHandler"16@?<v@?@"<NSSecureCoding>"@"NSError">24
v40@0:8@"IDSTransactionLogTaskHandler"16@"NSSet"24@?<v@?@"IDSTransactionLogTaskHandlerAccountInfo"@"NSError">32
@"<IDSGroupContextControllerDelegate>"
@"CUTPromiseSeal"
@"IDSCloudKitContainer"
@"ENGroupContext"
@"ENAccountIdentity"
v28@0:8@"IDSAccount"16B24
v32@0:8@"IDSAccount"16@"NSArray"24
v40@0:8@16@24q32
v68@0:8@16@24@32@40@48@56B64
v40@0:8@"IDSDirectMessageConnection"16@"NSString"24q32
v72@0:8@"IDSDirectMessageConnection"16@"NSDictionary"24@"NSString"32@"NSString"40@"NSString"48@"NSString"56@"NSDictionary"64
v32@0:8@"IDSDirectMessageConnection"16@"NSString"24
v72@0:8@"IDSDirectMessageConnection"16@"NSData"24@"NSString"32@"NSString"40@"NSString"48@"NSString"56@"NSDictionary"64
v68@0:8@"IDSDirectMessageConnection"16@"NSString"24@"NSString"32@"NSString"40@"NSString"48@"NSDictionary"56B64
v24@0:8@"NSObject<OS_xpc_object>"16
@44@0:8@16@24B32@36
v48@0:8:16@?24@?32@?40
v56@0:8:16@?24@?32@?40@48
@48@0:8@16@24@32Q40
v72@0:8@16@24@32q40@48B56@60B68
B60@0:8@16@24@32@40B48@52
@"IDSAccount"
@"IMOrderedMutableDictionary"
@"IDSDirectMessageConnection"
v40@0:8@"_ENGroupInfo"16@"ENGroup"24@?<v@?@"ENGroup"@"NSError">32
v32@0:8@"ENGroupID"16@?<v@?@"ENGroup"@"NSError">24
v32@0:8@"ENGroup"16@?<v@?@"NSData"@"NSError">24
v32@0:8@"NSData"16@?<v@?@"ENGroup"@"NSError">24
v32@0:8@"<ENCypher>"16@?<v@?@"NSArray"B>24
v40@0:8@"ENGroup"16@"ENGroup"24@?<v@?B@"NSError">32
v32@0:8@"ENStableGroupID"16@?<v@?@"ENGroup">24
v24@0:8@?<v@?>16
v32@0:8@"ENGroupID"16@?<v@?>24
@"NSXPCConnection"
@"IDSGroupContextNotifyingObserver"
{_opaque_pthread_mutex_t="__sig"q"__opaque"[56c]}
@40@0:8@16q24@32
@48@0:8@16@24@?32@40
@"NSInputStream"
@"NSOutputStream"
v56@0:8@16@24@32@40@?48
@24@0:8@"NSDictionary"16
@"NSDictionary"16@0:8
@32@0:8@16@?24
@36@0:8@16B24@?28
@32@0:8d16@?24
@56@0:8@16@24d32@?40@?48
@40@0:8@16@?24@?32
@"IDSXPCConnection"
@28@0:8I16^@20
@24@0:8^@16
@"_IDSAccount"
v56@0:8@16@24@32@?40@48
v64@0:8@16@24@32@40@?48@56
@"_IDSGenericCompletionHandler"
@32@0:8@16^@24
@40@0:8@16Q24q32
@48@0:8@16Q24@32q40
@28@0:8@16S24
v24@0:8@?<v@?@"NSDictionary"@"NSError">16
B32@0:8Q16q24
v44@0:8@16@24B32@?36
v28@0:8:16S24
:20@0:8S16
B48@0:8@16@24@32^@40
B64@0:8@16@24@32@40^@48^@56
B56@0:8@16q24@32^@40^@48
@32@0:8@16q24
@36@0:8@16I24^@28
@28@0:8i16^@20
v40@0:8@16d24@?32
@40@0:8@16@24d32
v48@0:8q16@24@32@?40
@"_IDSService"
@40@0:8@16@?24@32
@"IDSDaemonResponseHandler"
@"IMTimer"
@40@0:8@16d24@?32
v52@0:8@16@24B32@36@?44
v32@0:8@"IDSGroupContextController"16@"ENGroup"24
@"NSDictionary"32@0:8@"IDSGroupContextController"16@"NSSet"24
v56@0:8@"IDSConnection"16@"NSData"24@"NSString"32@"NSString"40@"IDSMessageContext"48
v48@0:8@"IDSConnection"16@"NSDictionary"24@"NSString"32@"IDSMessageContext"40
v48@0:8@"IDSConnection"16@"NSData"24@"NSString"32@"IDSMessageContext"40
v48@0:8@"IDSConnection"16@"IDSDeviceIdentity"24@"NSError"32@"IDSMessageContext"40
v56@0:8@"IDSConnection"16@"NSString"24@"NSString"32@"NSString"40@"IDSMessageContext"48
v40@0:8@"IDSConnection"16@"NSString"24@"IDSMessageContext"32
v48@0:8@"IDSConnection"16@"IDSProtobuf"24@"NSString"32@"IDSMessageContext"40
v28@0:8@"IDSConnection"16B24
v32@0:8@"IDSConnection"16@"NSArray"24
v52@0:8@"IDSConnection"16@"NSString"24B32@"NSError"36@"IDSMessageContext"44
v48@0:8@"IDSConnection"16@"NSString"24@"NSString"32@40
v32@0:8@"IDSConnection"16q24
v40@0:8@"IDSConnection"16@"NSDictionary"24@"NSString"32
v40@0:8@"IDSConnection"16@"NSString"24@"NSArray"32
v60@0:8@16@24@32q40@48B56
v60@0:8@"IDSConnection"16@"NSString"24@"NSString"32q40@"NSError"48B56
v68@0:8@"IDSConnection"16@"NSString"24@"NSString"32q40@"NSError"48B56@60
v64@0:8@"IDSConnection"16@"NSString"24@"NSString"32@"NSArray"40@"NSArray"48@"NSDictionary"56
v48@0:8@"IDSConnection"16@"NSDictionary"24@"NSString"32@40
v48@0:8@"IDSConnection"16@"NSString"24@"NSString"32@"NSString"40
v80@0:8@"IDSConnection"16@"IDSAccount"24@"NSString"32@"NSString"40@"NSNumber"48@"NSDictionary"56@"NSData"64@72
v40@0:8@"IDSConnection"16@"IDSAccount"24@"IDSGroupSessionParticipantUpdate"32
@?24@0:8@16
v48@0:8@16d24@32@?40
v32@0:8:16S24B28
:24@0:8S16B20
v24@0:8^@16
B80@0:8@16@24@32@40q48@56^@64^@72
B56@0:8@16q24@32^@40@?48
@"IDSAccountController"
@"IDSGroupContextController"
@"IDSQuickSwitchAcknowledgementTracker"
@"CUTDeferredTaskQueue"
@"IDSPseudonym"
v56@0:8@16@24B32B36@40@?48
v60@0:8@16@24B32B36B40@44@?52
@52@0:8@16@24@?32@?40B48
@"IDSURI"
@48@0:8q16@24@32@40
@"<IDSInvitationContext>"
@56@0:8@16q24@32@40@48
@"<IDSDestinationProtocol>"
@"<NSSecureCoding>"40@0:8@"NSXPCConnection"16@"NSXPCCoder"24@32
v36@0:8@"NSXPCConnection"16@"NSInvocation"24B32
@36@0:8@16B24@28
@40@0:8@16B24@28B36
@"<NSXPCProxyCreating>"
@48@0:8@16@24d32@?40
@"IDSEndpointCapabilities"
v68@0:8@16@24@32B40B44B48B52B56@?60
B76@0:8@16@24@32B40B44B48B52B56@60@?68
B48@0:8@16@24@32@?40
B52@0:8@16@24B32@36@?44
B60@0:8@16@24@32B40@44@?52
B56@0:8@16@24@32@40@?48
B60@0:8@16@24B32@36@44@?52
B60@0:8@16@24@32@40B48@?52
q40@0:8@16@24@32
@"NSObject<OS_xpc_object>"
v24@0:8@?<v@?@"NSDictionary">16
{?=qqq}16@0:8
@"_IDSDevice"
@104@0:8c16@20@28C36q40I48S52C56q60I68I72q76@84@92B100
@52@0:8^{?=[16C][16C]CCCCCCCCSSIISB[16c]C}16I24q28@36@44
c16@0:8
S16@0:8
@"_IDSDataChannelLinkContext"
@"NSObject<OS_nw_path_evaluator>"
@"IDSDataChannelLinkContext"
@20@0:8i16
v32@0:8c16@20C28
v28@0:8*16S24
v20@0:8c16
v52@0:8@16@24@32B40Q44
v20@0:8C16
v48@0:8*16Q24^{?=cSCSC}32^{?=IQSCc[12S]CS{?=SSSSS}dQBQ}40
v60@0:8r^^v16^I24^{?=cSCSC}32i40^^{?}44@?52
v62@0:8r^^v16^I24{?=cSCSC}32i42^{?=IQSCc[12S]CS{?=SSSSS}dQBQ}46@?54
v54@0:8r^v16I24{?=cSCSC}28^{?=IQSCc[12S]CS{?=SSSSS}dQBQ}38@?46
v46@0:8r^v16I24{?=cSCSC}28@?38
v24@0:8^{?=*QqqIBBBBBBI{sockaddr_storage=CC[6c]q[112c]}{sockaddr_storage=CC[6c]q[112c]}SCi[8{?=*Si[12S]qCSCBBS{?=SSSSS}BBi[4S]CI}]ccidQ[0C]}16
^{?=*QqqIBBBBBBI{sockaddr_storage=CC[6c]q[112c]}{sockaddr_storage=CC[6c]q[112c]}SCi[8{?=*Si[12S]qCSCBBS{?=SSSSS}BBi[4S]CI}]ccidQ[0C]}20@0:8B16
v24@0:8B16B20
v50@0:8{?=cSCSC}16^{?=IQSCc[12S]CS{?=SSSSS}dQBQ}26C34C38^{?=****B}42
@"_IDSDatagramChannel"
@"<IDSXPCConnectionProtocol>"
@"<IDSXPCAdapter>"
@"_IDSDeviceConnection"
v36@0:8B16@20@?28
v32@0:8@"<IDSXPCActivityMonitorClient>"16@"NSString"24
v32@0:8@"NSString"16@?<v@?B@"NSError">24
v36@0:8B16@"NSString"20@?<v@?@"NSError">28
v32@0:8@"NSString"16@?<v@?@"NSArray"@"NSError">24
v40@0:8@"IDSActivityInfo"16@"NSString"24@?<v@?@"NSError">32
v40@0:8@"NSString"16@"NSString"24@?<v@?@"NSError">32
q44@0:8@16@24B32@36
@"_IDSIDQueryController"
@68@0:8@16@24q32Q40B48@52@60
@56@0:8@16@24q32@40@48
v48@0:8@"ENGroupContext"16@"_ENGroupInfo"24@"ENGroup"32@?<v@?@"ENGroup"@"NSError">40
v40@0:8@"ENGroupContext"16@"ENGroupID"24@?<v@?@"ENGroup"@"NSError">32
v40@0:8@"ENGroup"16@"ENGroupContext"24@?<v@?@"NSData"@"NSError">32
v40@0:8@"NSData"16@"ENGroupContext"24@?<v@?@"ENGroup"@"NSError">32
q24@0:8@"ENGroupContext"16
v40@0:8@"ENGroupContext"16@"ENGroup"24@?<v@?>32
v40@0:8@"ENGroupContext"16@"ENGroupID"24@?<v@?@"ENGroup">32
v40@0:8@"ENGroupContext"16@"ENStableGroupID"24@?<v@?@"ENGroup">32
v32@0:8@"ENGroupContext"16@?<v@?@"NSArray">24
v32@0:8@"ENGroupContext"16@?<v@?>24
v40@0:8@"ENGroupContext"16@"ENGroupID"24@?<v@?>32
@32@0:8*16^v24
v40@0:8@"<IDSXPCServerMessagingClient>"16@"NSString"24@"NSString"32
v56@0:8@"NSData"16@"NSString"24@"IDSServerMessagingOptions"32@"NSString"40@?<v@?B@"NSError">48
v24@0:8@"IDSCertifiedDeliveryContext"16
@32@0:8@?16@?24
@"NSTimer"
@"_IDSRealTimeEncryptionProxy"
@"IDSTransactionLogTask"
@"IDSTransactionLogSyncTask"
@"<IDSTransactionLogTaskHandlerDelegate>"
