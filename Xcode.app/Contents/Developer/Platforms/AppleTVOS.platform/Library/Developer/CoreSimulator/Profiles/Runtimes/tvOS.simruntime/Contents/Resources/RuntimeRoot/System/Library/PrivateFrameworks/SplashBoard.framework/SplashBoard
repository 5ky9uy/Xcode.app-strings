@(#)PROGRAM:SplashBoard  PROJECT:SplashBoard-1
XBLaunchCaptureInformationEstimatedSize
XBLaunchCaptureInformationCaarPath
supportsSecureCoding
TB,R
estimatedMemoryImpact
TQ,N,V_estimatedMemoryImpact
caarFilePath
T@"NSString",C,N,V_caarFilePath
XBApplicationCaptureInformation.m
Invalid parameter not satisfying: %@
[launchRequests count] == [captureInfos count]
Estimated Memory Impact
Undefined!
%zu bytes
Minimal
Path
.caar Path
v8@?0
groupID
launchRequests
hash
TQ,R
superclass
T#,R
description
T@"NSString",R,C
debugDescription
T@"NSOrderedSet",R,N,V_launchRequests
com.apple.SplashBoard
Snapshot
Memory
FetchRequests
SnapshotReaper
DaemonLifecycle
Capture
FileManifest
Common
storyboard
storyboardc
__from_UILaunchStoryboardName__
hidden
double-height
normal
invalid
v24@?0Q8^B16
Storyboard
(null)
displayConfiguration
statusBarState
referenceSize
naturalSize
interfaceOrientation
userInterfaceStyle
customSafeAreaInsets
urlSchemeName
launchInterfaceIdentifier
statusBar
refSize
orientation
scheme
T@"FBSDisplayConfiguration",&,N,V_displayConfiguration
T@"NSString",C,N,V_groupID
T{CGSize=dd},N,V_referenceSize
T{CGSize=dd},N,V_naturalSize
Tq,N,V_interfaceOrientation
Tq,N,V_userInterfaceStyle
T@"XBDisplayEdgeInsetsWrapper",&,N,V_customSafeAreaInsets
TQ,N,V_statusBarState
T@"NSString",C,N,V_urlSchemeName
T@"NSString",C,N,V_launchInterfaceIdentifier
colorName
imageName
imageRespectsSafeAreaInsets
navigationBarImageName
toolbarImageName
tabBarImageName
bars
XBApplicationLaunchCompatibilityInfo.m
[coder allowsKeyedCoding]
T@"NSString",R,C,N,V_colorName
T@"NSString",R,C,N,V_imageName
TB,R,N,V_imageRespectsSafeAreaInsets
T@"NSArray",R,N,V_bars
T@"NSString",R,C,N,V_navigationBarImageName
T@"NSString",R,C,N,V_toolbarImageName
T@"NSString",R,C,N,V_tabBarImageName
type
name
identifier
configuration
default
urlSchemes
TQ,N,V_type
_default
TB,N,G_isDefault,V_default
T@"NSString",C,N,V_name
T@"NSString",C,N,V_identifier
T@"NSArray",&,N,V_urlSchemes
T@"XBLaunchInterfaceConfiguration",R,N,V_configuration
isXIB
TB,R,N
isStoryboard
isConfiguration
bundleIdentifier
bundlePath
sandboxPath
bundleContainerPath
launchInterfaces
launchesOpaque
v32@?0@"NSString"8@"NSString"16^B24
attempting to replace non-existent pre-existing default interface.
B16@?0@"XBLaunchInterface"8
T@"NSString",C,N,V_bundleIdentifier
T@"NSString",C,N,V_bundlePath
T@"NSString",C,N,V_sandboxPath
T@"NSString",C,N,V_bundleContainerPath
defaultGroupIdentifier
T@"NSString",C,N,V_defaultGroupIdentifier
TB,N,V_launchesOpaque
defaultLaunchInterface
T@"XBLaunchInterface",R,C,N
T@"NSArray",R,C,N,V_launchInterfaces
allowsSavingLaunchImages
topInset
leftInset
bottomInset
rightInset
Td,R,N,V_topInset
Td,R,N,V_leftInset
Td,R,N,V_bottomInset
Td,R,N,V_rightInset
Snapshots
Caches
Library
SplashBoard
StaticDefault
GeneratedDefault
SceneContent
All Types
XBRecentScreenSize
XBApplicationController.m
asked for installed appProxies but got back : %@
v24@?0@"LSBundleProxy"8^B16
provided an invalid mainDisplay configuration
v16@?0@"NSDictionary"8
v16@?0@"XBApplicationCaptureInformation"8
no displayConfiguration found
applicationProvider
T@"<XBApplicationProviding>",R,N,V_applicationProvider
Portrait
PortraitUpsideDown
Landscape
LandscapeLeft
LandscapeRight
UpMirrored
Down
DownMirrored
Left
LeftMirrored
Right
RightMirrored
XBApplicationBundleIdentifier
com.apple.splashboard
_XBEncodeGeneratedInterfaces
splashboardd-%d
%@-%@-%@-%.fx%.f-%u
UIInterfaceOrientationPortrait
UIInterfaceOrientationLandscapeLeft
UIInterfaceOrientationLandscapeRight
UIInterfaceOrientationPortraitUpsideDown
%@-%@.caar
XBSnapshotManifestIdentity.m
init is not allowed
store
%@ - {DEFAULT GROUP}
@"NSString"8@?0
@8@?0
T@"NSString",R,C,N,V_bundleIdentifier
T@"NSString",R,C,N
T@"<XBSnapshotManifestStore>",R,C,N,V_store
com.apple.splashboard.launchimage
message
compatibilityInfo
launchRequest
createCaptureInfo
contextID
error
captureInfo
UILaunchStoryboardName
UILaunchStoryboards
UILaunchStoryboardDefinitions
UILaunchStoryboardIdentifier
UILaunchStoryboardFile
UIURLToLaunchStoryboardAssociations
UIDefaultLaunchStoryboard
UILaunchScreen
UIColorName
UIImageName
UIImageRespectsSafeAreaInsets
UINavigationBar
UIToolbar
UITabBar
UILaunchScreens
UILaunchScreenDefinitions
UILaunchScreenIdentifier
UIURLToLaunchScreenAssociations
UIDefaultLaunchScreen
XBSnapshotContainerIdentity.m
this constructor is disallowed
proxy
sandboxed
dataContainerPath
snapshotContainerPath
T@"NSString",R,C,N,V_snapshotContainerPath
T@"NSString",R,C,N,V_bundlePath
T@"NSString",R,C,N,V_dataContainerPath
T@"NSString",R,C,N,V_bundleContainerPath
XBApplicationSnapshotManifest
XBApplicationDataStore.m
com.apple.splashboard.application-data-store
XBApplicationLaunchCompatibilityInfo
NSData
unbalanced call to %s detected with bundleIdentifier=%@ : cacheable=%@
-[XBApplicationDataStore endAccessBlockForBundleIdentifier:]_block_invoke
XBApplicationSnapshotImageGenerator.m
snapshot
[snapshot groupID]
dataProvider
[dataProvider context]
already complete
snapshot is nil
snapshot is invalidated
image data requested
no cached image
have a cached image and no requests to regenerate
outImage
com.apple.XBApplicationSnapshotImageGenerator._generate
XBApplicationSnapshotSchedulerWorkloop
XBApplicationSnapshotSchedulerDefaultGenerationQueue
requiredOSVersion
orientationMask
contentTypeMask
statusBarStateMask
size
scale
T@"NSString",C,N
interfaceOrientationMask
TQ,N
T{CGSize=dd},N
imageScale
Td,N
Tq,N
T@"XBDisplayEdgeInsetsWrapper",C,N
fullScreen
TB,N,GisFullScreen
Td,N,V_scale
opaque
TB,N,GisOpaque,V_opaque
XBLaunchImageDataProvider.m
contextID != 0
contextID != XBInvalidContextId
request
context
T@"XBSnapshotDataProviderContext",R,&,N
T@"XBSnapshotDataProviderContext",R,&,N,V_context
imageOrientation
path
Tq,R,N,V_interfaceOrientation
JPEG
ATX420f
(invalid)
(unknown)
Default
 [%@]
XBApplicationSnapshot.m
don't do that
containerIdentity
_imageAccessCount == 0
B8@?0
Extended data client class '%@' does not conform to NSSecureCoding
Extended data client class '%@' does not support NSSecureCoding
invalid content frame set by client
invalid reference size set by client
none
_imageAccessCount: %lu; _keepImageAccessUntilExpiration: %@; _hasProtectedContent: %@; _keepImageAccessForPreHeat: %@
Expiration date is required in order to keep alive until expiration.
Cannot keep alive an image that is already invalidated.
_imageAccessCount != 0
expired. expirationDate: %@; how long ago (seconds): %f
no cached image. no generation context. no image generator. no file at path: %@
v32@?0@"NSString"8@"XBApplicationSnapshot"16^B24
variantID
variant == nil || ![variant isValid]
_filename == nil
_path == nil
_relativePath == nil
@%lux
%@%@.%@
Invalid file extension: %@ for path: %@
com.apple.XBApplicationSnapshot.CachedImage
_contentType: %@(%ld)
kCGImageConversionReason
XBApplicationSnapshot
com.apple.atx
relativePath
filename
fileLocation
creationDate
lastUsedDate
expirationDate
contentType
contentFrame
imageOpaque
statusBarSettings
classicMode
compatibilityMode
backgroundStyle
extendedData
variants
Cache
_cachedImage
IOSurfaceRef
allocSize
CGImageRef
_synchronized_hasCachedImage: isn't giving us a reason even though we have a cached image
reason
Variants
keepsImageAccessUntilExpiration
hasGenerationContext
additionalContext
imageContext
fileRelativeLocation
fileFormat
secureCodableCustomExtendedDataClasses
T@"NSSet",C,N
T@"XBSnapshotContainerIdentity",C,V_containerIdentity
T@"NSString",C,N,G_relativePath,S_setRelativePath:,V_relativePath
T@"NSString",C,N,S_setPath:,V_path
T@"NSString",C,N,Gfilename,S_setFilename:,V_filename
T@"<XBSnapshotManifestStore>",R,N,G_store,V_store
logIdentifier
T@"NSString",R,N
Tq,N,V_fileLocation
T@"NSString",C,N,V_variantID
Td,N,V_imageScale
TB,N,GisImageOpaque,V_imageOpaque
imageTransform
T{CGAffineTransform=dddddd},N,V_imageTransform
Tq,N,V_imageOrientation
imageGenerator
T@?,C,N,V_imageGenerator
generationContext
T@"XBApplicationSnapshotGenerationContext",R,N,V_generationContext
T@"NSString",R,C,N,V_identifier
T@"NSString",R,C,N,V_groupID
T@"NSString",C,N,V_scheme
T@"NSString",C,N,V_requiredOSVersion
fileExists
Tq,R,N,V_fileFormat
T@"NSDate",R,N,V_creationDate
T@"NSDate",&,N,V_lastUsedDate
T@"NSDate",&,D,N
expired
TB,R,N,GisExpired
Tq,N,V_contentType
TB,N,GisFullScreen,V_fullScreen
T{CGSize=dd},R,N
T{CGRect={CGPoint=dd}{CGSize=dd}},N
hasFullSizedContent
T@"XBStatusBarSettings",C,N,V_statusBarSettings
Tq,N,V_classicMode
Tq,N,V_compatibilityMode
Tq,N,V_backgroundStyle
hasProtectedContent
T@"NSDictionary",C,V_extendedData
jpeg
{!InvalidType!}
dataContainer
bundle
bundleContainer
XBApplicationManifestWorkloop
XBApplicationManifestSerialWorkQueue
XBApplicationSnapshotImageAccessQueue
XBApplicationSnapshotArchiveSchedulingQueue
XBApplicationSnapshotManifestCallOutQueue
XBApplicationSnapshotManifest.m
identity
info
v12@?0B8
bundleID
manifestImpl
T@"XBApplicationSnapshotManifestImpl",R,W,N,V_manifestImpl
delegate
T@"<XBApplicationSnapshotManifestDelegate>",W,N,V_delegate
containerPath
v32@?0@"XBSnapshotManifestIdentity"8@"XBApplicationSnapshotManifestImpl"16^B24
manifestToRelinquish does not match the manifest that we think we have : %@ != %@
invalidatedManifest does not match the manifest that we think we have : %@ != %@
self
<%@: %p>
<%@:%p bundleIdentifier=%@> was not properly invalidated before dealloc
<%@:%p bundleIdentifier=%@> failed to fire all synchronize completions before dealloc
B32@?0@"XBApplicationSnapshot"8Q16^B24
v20@?0@"NSData"8B16
v16@?0@"XBApplicationSnapshot"8
v32@?0@"NSString"8@"XBApplicationSnapshotGroup"16^B24
v32@?0@"NSString"8Q16^B24
v16@?0@"NSFileManager"8
v32@?0@8@16^B24
v32@?0@"XBApplicationSnapshot"8Q16^B24
generated nil path for snapshot %@
B12@?0i8
ji56BO1mUeT7Qg9RO7Er9w
Aixt/MEN2O2B7f+8m4TxUA
version
snapshots
v32@?0@"XBApplicationSnapshotGroup"8Q16^B24
clientCount
T@"XBSnapshotContainerIdentity",R,C,N,V_containerIdentity
T@"XBSnapshotManifestIdentity",R,C,N,V_identity
com.apple.splashboard.launchImageProvider.workQueue
com.apple.splashboard.launchImageProvider.accessQueue
XBLaunchImageProvider.m
appInfo
successfully
unsuccessfully
manifest
[appInfo allowsSavingLaunchImages]
[launchRequests count] > 0
snapshotGroupID
SpringBoard - XBLaunchImageProvider - blacklistedApps
XBApplicationSnapshotGenerationContext.m
applicationCompatibilityInfo
timeout
T@"XBApplicationLaunchCompatibilityInfo",R,N,V_applicationCompatibilityInfo
T@"XBLaunchStateRequest",R,C,N,V_launchRequest
Td,R,N,V_timeout
XBApplicationSnapshotGroup.m
v24@?0@"XBApplicationSnapshot"8^B16
T@"NSString",R,C,D,N
T@"NSSet",R,C,N,V_snapshots
XBLaunchImageProviderClient.m
use initWithDefaultService
context != nil
launchRequest != nil
appInfo != nil
This API cannot be used if the client was not initialized with an app info
app info bundle ID: %@ doesn't match ivar app info bundle ID: %@
v16@?0@"NSObject<OS_xpc_object>"8
timeout > 0.0
_sortableLaunchInterfaceIdentifier
_sortableRequiredOSVersion
_sortableName
_sortableScheme
_sortableStatusBarSettings
T@"XBStatusBarSettings",R,&,N
_interfaceOrientationMask
TQ,R,N
_contentTypeMask
q24@?0@8@16
XBApplicationSnapshotNameKey
XBApplicationSnapshotSchemeKey
XBApplicationSnapshotLaunchInterfaceIdentifierKey
XBApplicationSnapshotInterfaceOrientationMaskKey
XBApplicationSnapshotReferenceSizeKey
XBApplicationSnapshotImageScaleKey
XBApplicationSnapshotContentTypeMaskKey
XBApplicationSnapshotStatusBarSettingsKey
XBApplicationSnapshotRequiredOSVersionKey
XBApplicationSnapshotCreationDateKey
XBApplicationSnapshotProtectedContentKey
TQ,N,V_key
ascending
TB,N,V_ascending
comparator
T@?,C,N,V_comparator
NSSortDescriptor
T@"NSSortDescriptor",R,N
com.apple.splashboard.launch-image-caar-capture
style
backgroundActivityEnabled
isBackgroundActivityEnabled
TB,R,N,GisHidden
Tq,R,N
TB,R,N,GisBackgroundActivityEnabled
TB,D,N,GisHidden
Tq,D,N
TB,D,N,GisBackgroundActivityEnabled
Unspecified
Light
Dark
predicate
sortDescriptors
fallbackGenerationContext
NSSortDescriptors
T@"NSArray",R,C,N
T@"XBApplicationSnapshotPredicate",&,N,V_predicate
T@"NSArray",C,N,V_sortDescriptors
T@"XBApplicationSnapshotGenerationContext",&,N,V_fallbackGenerationContext
XBLaunchStoryboardErrorDomain
XBLaunchImageError.m
XBLaunchImageErrors that are fatal should also be blacklistable. Please be reasonable.
fatal
shouldBlacklist
TB,R,GisFatal,V_fatal
TB,R,V_shouldBlacklist
Deleting legacy cache snapshots path for bundleID: %{public}@, sandboxPath: %{public}@, legacySnapshotsPath: %{public}@
Error deleting legacy cache snapshots path for bundleID %{public}@, sandboxPath: %{public}@, legacySnapshotsPath: %{public}@: %{public}@
Deleting legacy cache snapshots path for non-sandboxed system app: %{public}@
Error deleting legacy cache snapshots path for non-sandboxed system app %{public}@ at %{public}@: %{public}@
Deleting legacy cache snapshots path for non-sandboxed system apps: %{public}@
Error deleting legacy cache snapshots path for non-sandboxed system apps %{public}@: %{public}@
Screen size changed from %{public}@ to %{public}@, purging all generated launch image and snapshots.
No legacy snapshots caches to purge
Start purging legacy snapshots caches...
Purging legacy caches of sandboxed app snapshots for: %{public}@
Purging legacy caches of snapshots for non-sandboxed system app: %{public}@
Finished purging
XBInvalidate
Failed to capture launch image snapshot due to missing manifest or launchRequests for %{public}@
Unable to generate launch image for %{public}@ because the app has no valid launch interfaces.
Unable to generate launch image for %{public}@ because the provided bundle path does not exist: %{public}@
We can't generate launch image requests for: %{public}@ since it doesn't support any valid orientations.
_removeLaunchImagesMatchingPredicate:forApplications:forgettingApps: called
forgettingApps: %d
predicate:
%{public}@
dumping caar for view hierarchy:
splashboardd wrote an encoded launch interface to: %{public}@
appInfo: %{public}@
launchRequest: %{public}@
launchInterface: %{public}@
XBCapture
[%{public}@] ignoring asynchronous request to generate image because: %{public}@
[%{public}@] scheduling asynchronous request to generate image because: %{public}@
[%{public}@] ignoring synchronous request to generate image because: %{public}@
[%{public}@] CALLED IMAGE GENERATOR FOR %{public}@. This should be considered a last resort, and will likely result in significant blocking of the calling thread! reason: %{public}@
[%{public}@] -[%{public}@<XBSnapshotDataProvider> fetchImage] returned a nil image. skipping any imageData generation
[%{public}@] -[%{public}@<XBSnapshotDataProvider> hasProtectedContent] is YES. skipping imageData generation
[%{public}@] we don't have requests for imageData. skipping imageData generation
[%{public}@] +[XBApplicationSnapshot dataForImage:withFormat:] failed to create imageData
[%{public}@] -[<XBSnapshotDataProvider> fetchImageData:] returned nil imageData. Returning nil image and data
[%{public}@] -[UIImage initWithData:scale:] returned a nil image, so we're not returning the image or its data
[%{public}@ we needlessly scheduled _generate even though we have nothing to do because: %{public}@; Snapshot: %{public}@
[%{public}@] -[%{public}@<XBSnapshotDataProvider> fetchImage] not implemented. rude. inconsiderate.
[%{public}@] Generated image data (%{public}@ as %{public}@) for %{public}@ after %.2fs
%{public}@ Set expiration date to %{public}@
%{public}@ Clearing expiration date
%{public}@ received an empty or nil path for _sanitizedPathForPath: %{public}@. That's weird.
%{public}@ received invalid path
path: %{public}@
%{public}@ Sanitizing new path before set %{public}@
%{public}@ Sanitizing new relativePath before set %{public}@
%{public}@ we have a path but it doesn't exist: %{public}@
Loading image for %{public}@
%{public}@ Keeping image access on until expiration
%{public}@ Dropping image access until expiration because the expiration has already occurred
%{public}@ we're invalid because we don't have a launchInterfaceIdentifier and our content type is: %{public}@
%{public}@ Snapshot migrated snapshot path to %{public}@, relative to %{public}@
%{public}@ we're invalid because we don't have a relativePath. path: %{public}@
%{public}@ has fileLocation of %ld
calculated rootPath of %{public}@
relativePath: %{public}@
setting to newPath: %{public}@
%{public}@ has fileLocation of %ld
setting to newPath: %{public}@
%{public}@ Snapshot rebuilt absolute path to: %{public}@
%{public}@ we're invalid because _path is a directory: %{public}@
%{public}@ we're invalid because _path doesn't exist: %{public}@
%{public}@ deleting file on purge because we're invalid.
deleteReason: %{public}@;
path: %{public}@
%{public}@ Error deleting file on purge at %{public}@: %{public}@
%{public}@ Invalidating snapshot
%{public}@ Purging the cached image; force: %d; _imageAccessCount: %lu; _keepImageAccessUntilExpiration: %d; _hasProtectedContent: %d; _keepImageAccessForPreheat: %d
%{public}@ not purging the cached image; force: %d; _imageAccessCount: %lu; _keepImageAccessUntilExpiration: %d; _hasProtectedContent: %d; _keepImageAccessForPreheat: %d
Failed to generate ATX data for %@
Deleting all system snapshots at path %{public}@
Error deleting all system snapshots at path %{public}@: %{public}@
acquireManifestForContainerIdentity:store:creatingIfNecessary: Manifest containerIdentity has changed: %{public}@
acquireManifestForContainerIdentity:store:creatingIfNecessary: [%{public}@] Unable to unarchive manifest from store: %@
acquireManifestForContainerIdentity:store:creatingIfNecessary: Created manifest: %{public}@.
acquireManifestForContainerIdentity:store:creatingIfNecessary: Unarchived manifest %{public}@ for %@.
Removing manifest: %{public}@
[%@] snapshotsForGroupIDs given groupIDs: %@; returning snapshots:
[%@] snapshotsForGroupIDs:matchingPredicate: given groupIDs: %@; predicate: %@; returning matchingSnapshots:
[%@] BEGIN snapshotsForGroupIDs:fetchRequest: groupIDs: %@; fetchRequest: %@
[%@] snapshotsForGroupIDs:fetchRequest: fetchRequest has predicate %@; retrieved matchingSnapshots:
[%@] snapshotsForGroupIDs:fetchRequest: fetchRequest has no predicate; retrieved matchingSnapshots:
[%@] snapshotsForGroupIDs:fetchRequest: fetchRequest has fallbackPredicate %@ and found matching snapshot %@; will not generate
[%@] snapshotsForGroupIDs:fetchRequest: fetchRequest has fallbackPredicate %@, no snapshot matched, so generated and added fallbackSnapshot:
[%@] END snapshotsForGroupIDs:fetchRequest: returning matchingSnapshots:
%{public}@ calling initWithSnapshot:dataProvider:requestsImageData:loggingPrefix:imageGenerationHandler:
%{public}@ inside imageGenerationHandler
%{public}@ processing imageGenerationHandler callback with imageData: %p; didGenerateImage: %d
%{public}@ Snapshot data for %{public}@ written to file: %{public}@
%{public}@ Error writing snapshot %{public}@ to file
%{public}@ we expected to receive and save image data for snapshot but failed. invalidating. snapshot: %{public}@
%{public}@ ignoring redundant imageGenerationHandler callback as we've already processed one. imageData: %p; didGenerateImage: %d
%{public}@ calling scheduleGeneration
%{public}@ calling generate
%{public}@ Saved snapshot: %{public}@
%{public}@ Deleting snapshots: %{public}@
%{public}@ Deleting snapshots: %{public}@ matching predicate: %@
%{public}@ Deleting all snapshots for group: %{public}@.
%{public}@ Deleting all snapshots.
%{public}@ groupID: [%@] Creating temporary snapshot %@ with generation context.
%{public}@ Archiving manifest (%p).
%{public}@ Unable to archive manifest: %{public}@
%{public}@ We don't have any snapshots, so we're clearing our manifest data.
%{public}@ group isn't valid. removing from snapshotGroupsByID and will be culled later: %@
%{public}@ Manifest is empty; purging everything at %@
%{public}@ Error removing snapshotContainer for purge at %{public}@: %{public}@
%{public}@ Reaping invalid snapshot %{public}@
 invalidReason: %{public}@
%{public}@ Cancelling reaping timer as we've just reaped
%{public}@ Scheduling next reaping for ~%{public}@ %f.
%{public}@ Reaping timer fired! Cancelling timer
%{public}@ Not scheduling next reaping because the interval is invalid ~%@.
about to be doing some dumb shit
doing some dumb shit
%{public}@ Deleting paths: %@
%{public}@ error deleting path %@: %{public}@
%{public}@ Deleting snapshot %{public}@ for reason: %{public}@
%{public}@ XBEnsureDirectoryExistsAtPath() check failed for: %{public}@
%{public}@ Failed to write to %@: (%s)
%{public}@ Incrementing client count: %u
%{public}@ Decrementing client count: %u
%{public}@ Manifest (%p) has no remaining clients or work. Invalidating!
%{public}@ Cancelling reaping timer as we're invalidating (no clients or work remaining)
%{public}@ Failed to decode from decoder with error: %{public}@
%{public}@ Snapshot manifest out of date (currVers=%d, newVers=%d).
Snapshot generation request for bundleID: %{public}@ rejected due to the app being blacklisted.
Synchronously generating image data for request: %@
Snapshot generation completed %{public}s after %.3fs.
Processing launch request %@ for app: %@.
Asynchronously generating image data for request: %@
Skipping launch request %@ due to blacklisted app: %@.
Image generation complete for: %@
Image generation failed for: %@
Unable to generate context for %@, so skipping it and moving on.
Fatal error generating image for launch request %@ .
Snapshot generation resulted in an error with code: %ld for app bundleID: %@, so blacklisting the app until it is updated.
Clearing blacklist for app bundleID: %@ due to app update.
[%{public}@] Group %{public}@ deleting container with no valid snapshots: %{public}@
[%{public}@] Error with Group %{public}@ deleting container with no valid snapshots at %{public}@: %{public}@
[%{public}@] Group %{public}@ deleting unreferenced file: %{public}@
[%{public}@] Error with Group %{public}@ deleting unreferenced file at %{public}@: %{public}@
Request to splashboardd has timed out -- invalidating the connection for %@.
Fatal error generating snapshot for %@.
Warming up splashboardd (timeout %.1fs)
XBLaunchCaptureInformation
NSSecureCoding
NSCoding
XBApplicationCaptureInformation
BSDescriptionProviding
NSObject
XBLaunchImage
XBLaunchStateRequest
BSXPCCoding
NSCopying
XBLaunchInterfaceConfiguration
XBLaunchInterface
XBApplicationLaunchCompatibilityInfo
XBDisplayEdgeInsetsWrapper
XBDefaultApplicationProvider
XBApplicationProviding
XBApplicationController
XBSnapshotManifestIdentity
SplashBoard
XBSnapshotContainerIdentity
XBApplicationDataStore
XBSnapshotManifestStore
XBApplicationSnapshotImageGenerator
XBApplicationSnapshotGenerationScheduler
XBApplicationSnapshotPredicate
XBSnapshotDataProviderContext
XBLaunchImageDataProvider
XBSnapshotDataProvider
XBApplicationSnapshotImage
XBApplicationSnapshot
XBApplicationSnapshotManifest
XBApplicationSnapshotManifestDelegate
XBApplicationSnapshotManifestImpl
XBLaunchImageProvider
XBApplicationSnapshotGenerationContext
XBApplicationSnapshotGroup
XBLaunchImageProviderClient
SortingSupport
XBApplicationSnapshotSortDescriptor
XBStatusBarSettings
BSSettingDescriptionProvider
NSMutableCopying
XBMutableStatusBarSettings
XBApplicationSnapshotFetchRequest
XBLaunchImageError
init
encodeInt64:forKey:
encodeObject:forKey:
decodeInt64ForKey:
decodeObjectOfClass:forKey:
supportsSecureCoding
encodeWithCoder:
initWithCoder:
estimatedMemoryImpact
setEstimatedMemoryImpact:
caarFilePath
setCaarFilePath:
.cxx_destruct
_estimatedMemoryImpact
_caarFilePath
count
currentHandler
handleFailureInMethod:object:file:lineNumber:description:
indexOfObject:
objectAtIndexedSubscript:
descriptionWithMultilinePrefix:
descriptionBuilderWithMultilinePrefix:
build
succinctDescriptionBuilder
countByEnumeratingWithState:objects:count:
succinctDescription
activeMultilinePrefix
estimatedMemoryImpactForLaunchRequest:
appendString:withName:
stringWithFormat:
launchImagePathForLaunchRequest:
caarPathForLaunchRequest:
appendString:withName:skipIfEmpty:
appendBodySectionWithName:multilinePrefix:block:
builderWithObject:
firstObject
groupID
appendUnsignedInteger:withName:
isEqual:
class
self
performSelector:
performSelector:withObject:
performSelector:withObject:withObject:
isProxy
isKindOfClass:
isMemberOfClass:
conformsToProtocol:
respondsToSelector:
retain
release
autorelease
retainCount
zone
hash
superclass
description
debugDescription
initWithLaunchRequests:captureInfos:launchImagePaths:
launchRequests
_captureInfos
_launchImagePaths
_launchRequests
array
addObject:
componentsJoinedByString:
encodeWithXPCDictionary:
allocWithZone:
initWithXPCDictionary:
referenceSize
statusBarState
interfaceOrientation
userInterfaceStyle
urlSchemeName
launchInterfaceIdentifier
appendObject:withName:
appendSize:withName:
appendObject:withName:skipIfNil:
setReferenceSize:
setNaturalSize:
fallbackXPCEncodableClass
copyWithZone:
setInterfaceOrientation:
displayConfiguration
setDisplayConfiguration:
setGroupID:
naturalSize
setUserInterfaceStyle:
customSafeAreaInsets
setCustomSafeAreaInsets:
setStatusBarState:
setUrlSchemeName:
setLaunchInterfaceIdentifier:
_displayConfiguration
_groupID
_interfaceOrientation
_userInterfaceStyle
_customSafeAreaInsets
_statusBarState
_urlSchemeName
_launchInterfaceIdentifier
_referenceSize
_naturalSize
valueForKey:
boolValue
arrayByAddingObject:
allowsKeyedCoding
stringWithUTF8String:
copy
decodeBoolForKey:
setWithObjects:
decodeObjectOfClasses:forKey:
encodeBool:forKey:
appendBool:withName:
initWithConfigurationDictionary:
colorName
imageName
imageRespectsSafeAreaInsets
bars
navigationBarImageName
toolbarImageName
tabBarImageName
_imageRespectsSafeAreaInsets
_colorName
_imageName
_bars
_navigationBarImageName
_toolbarImageName
_tabBarImageName
initWithType:name:identifier:urlSchemes:isDefault:
initWithConfiguration:identifier:urlSchemes:isDefault:
isStoryboard
isXIB
isConfiguration
_isDefault
set_default:
type
setType:
name
setName:
identifier
setIdentifier:
urlSchemes
setUrlSchemes:
configuration
_default
_type
_name
_identifier
_urlSchemes
_configuration
bundleIdentifier
sharedInstance
beginAccessBlockForBundleIdentifier:
_loadCompatibilityInfoForBundleIdentifier:
bundleURL
path
dataContainerURL
bundleContainerURL
bundlePath
isEqualToString:
initWithPath:
initWithBundle:
setSandboxPath:
setBundleContainerPath:
setDefaultGroupIdentifier:
_persistCompatibilityInfo:forBundleIdentifier:
endAccessBlockForBundleIdentifier:
infoDictionary
mutableCopy
localizedInfoDictionary
addEntriesFromDictionary:
length
containsObject:
enumerateKeysAndObjectsUsingBlock:
indexOfObjectIdenticalTo:
replaceObjectAtIndex:withObject:
bs_firstObjectPassingTest:
launchInterfaceWithIdentifier:
defaultLaunchInterface
compatibilityInfoForAppInfo:
_setLaunchInterfaces:
allowsSavingLaunchImages
launchInterfaceIdentifierForRequest:
launchInterfaces
setBundleIdentifier:
setBundlePath:
sandboxPath
launchesOpaque
setLaunchesOpaque:
bundleContainerPath
defaultGroupIdentifier
_defaultInterface
_launchesOpaque
_launchInterfaces
_bundleIdentifier
_bundlePath
_sandboxPath
_bundleContainerPath
_defaultGroupIdentifier
initWithTop:left:bottom:right:
topInset
leftInset
bottomInset
rightInset
appendDouble:withName:decimalPrecision:
decodeDoubleForKey:
encodeDouble:forKey:
makeWithEdgeInsets:
hasZeroInsets
edgeInsets
_topInset
_leftInset
_bottomInset
_rightInset
pathExtension
stringByDeletingPathExtension
pathForResource:ofType:inDirectory:
fileSystemRepresentation
defaultManager
createDirectoryAtPath:withIntermediateDirectories:attributes:error:
stringByAppendingPathComponent:
fileExistsAtPath:
removeItemAtPath:error:
_allApplicationsFilteredBySystem:bySplashBoard:
defaultWorkspace
_applicationTypeForProxy:
objectsForInfoDictionaryKeys:
objectForKey:
initWithApplicationProxy:
enumerateBundlesOfType:block:
allSplashBoardApplications
splashBoardSystemApplications
allInstalledApplications
isMainDisplay
isExternal
defaultCenter
_updateStatusBarOrientation
addObserver:selector:name:object:
_deleteLegacyCachesSnapshotPathsIfNeeded
_migrateDataIfNeeded
removeObserver:
dealloc
standardUserDefaults
stringForKey:
bounds
_removeAllGeneratedLaunchImagesAndSnapshots
setObject:forKey:
synchronize
initWithApplicationInfo:
deleteAllSnapshots
predicate
setContentTypeMask:
_removeLaunchImagesMatchingPredicate:forApplications:forgettingApps:
_captureOrUpdateLaunchImagesForApplications:firstImageIsReady:createCaptureInfo:completionWithCaptureInfo:
initWithCapacity:
sentinelWithQueue:signalCount:completion:
signal
fileExistsAtPath:isDirectory:
_clearCompatibilityInfoForBundleIdentifier:
_launchRequestsForApplication:withCompatibilityInfo:
launchRequestsForApplication:withCompatibilityInfo:defaultLaunchRequests:
setObject:forKeyedSubscript:
manifestImpl
_synchronizeDataStoreWithCompletion:
captureLaunchImageForManifest:withCompatibilityInfo:launchRequests:createCaptureInfo:firstImageIsReady:withCompletionHandler:
xb_userInterfaceStyleForRequestedUserInterfaceStyle:
supportsInterfaceOrientation:
statusBarHiddenForInterfaceOrientation:onDisplay:
xb_supportsUserInterfaceStyle:
insertObject:atIndex:
deleteSnapshotsMatchingPredicate:
sharedApplication
statusBarOrientation
initWithMainDisplayConfiguration:applicationProvider:launchRequestProvider:
removeCachedLaunchImagesForApplications:forgettingApps:
captureOrUpdateLaunchImagesForApplications:firstImageIsReady:completion:
_captureOrUpdateLaunchImagesForApplications:firstImageIsReady:completionWithCaptureInfo:
applicationProvider
_statusBarOrientation
_mainDisplayConfiguration
_launchRequestProvider
_applicationProvider
stringByAppendingFormat:
recursiveDescription
processInfo
processIdentifier
layer
UTF8String
initWithBundleIdentifier:store:
builder
appendObject:
builderWithObject:ofExpectedClass:
appendString:counterpart:
store
appendObject:counterpart:
isEqual
identityWithBundleIdentifier:store:
_store
supportedUserInterfaceStyle
_initWithBundleIdentifier:bundlePath:dataContainerPath:bundleContainerPath:
snapshotContainerPath
snapshotContainerPathForGroupID:
variantID
dataContainerPath
identityForBundleProxy:
identityForApplicationInfo:
identityForCompatibilityInfo:
snapshotContainerPathForSnapshot:
_dataContainerPath
_snapshotContainerPath
_init
_storeForBundleIdentifier:
setArchivedObject:forKey:
removeObjectForKey:
safeArchivedObjectForKey:ofType:
storeForApplication:
initWithObjects:forKeys:count:
safeObjectForKey:ofType:
synchronizeWithCompletion:
initWithObjects:count:
removeObject:
persistManifestData:forBundleIdentifier:
clearManifestDataForBundleIdentifier:
loadManifestDataForBundleIdentifier:
synchronizeForBundleIdentifier:withCompletion:
_queue
_cacheableBundleIdentifiers
_cachedStoresByBundleIdentifier
context
performAsync:
_shouldGenerateForSnapshot:reason:
schedule:
performAsyncAndWait:
logIdentifier
scheduleAndWait:
_generationLock_shouldGenerateForSnapshot:reason:
_isInvalidated
hasCachedImage
hasProtectedContent
_setHasProtectedContent:
fetchImage
_outputFormatForSnapshot:
dataForImage:withFormat:
fetchImageData:
scale
initWithData:scale:
_generate_image:imageData:fromNewDataProvider:forSnapshot:
_generate_image:imageData:fromLegacyDataProvider:
timeIntervalToNow
_cacheImage:
invalidateImage
initWithSnapshot:dataProvider:requestsImageData:loggingPrefix:imageGenerationHandler:
scheduleGeneration
generate
_generate
_weak_snapshot
_dataProvider
_didGenerateImageHandler
_loggingPrefix
_complete
_generationLock
_requestsImageData
_workloop
_generationQueue
_defaultQueue
_hasClientObjectForKey:
contentTypeMask
contentType
interfaceOrientationMask
scheme
requiredOSVersion
compare:options:
imageScale
statusBarStateMask
statusBarSettings
_clientObjectForKey:
creationDate
_setClientObject:forKey:
numberWithUnsignedInteger:
_removeClientObjectForKey:
valueWithCGSize:
numberWithDouble:
setStatusBarStateMask:
numberWithInteger:
unsignedIntegerValue
CGSizeValue
doubleValue
integerValue
setObject:forSetting:
setFlag:forSetting:
flagForSetting:
objectForSetting:
appendFloat:withName:decimalPrecision:
appendInteger:withName:
evaluateWithObject:
setScheme:
setRequiredOSVersion:
setInterfaceOrientationMask:
setFullScreen:
setImageScale:
isFullScreen
_clientSettings
isHidden
style
setScale:
isOpaque
setOpaque:
_scale
_opaque
initWithContextID:baseTransform:
orderedSetWithObject:
initWithDisplayConfiguration:layers:
setSnapshotSize:
initWithSnapshotContext:
IOSurface
initWithIOSurface:
CGImage
initWithCGImage:scale:orientation:
invalidate
fallbackSnapshotDataProvider
initWithRequest:contextID:opaque:
_snapshot
_cachedImage
_context
ioSurface
_initWithIOSurface:scale:orientation:
beginImageAccess
endImageAccess
size
imageOrientation
isImageOpaque
initWithSnapshot:interfaceOrientation:
caseInsensitiveCompare:
containerIdentity
componentsSeparatedByString:
lastObject
_initWithContainerIdentity:store:groupID:generationContext:
UUID
UUIDString
_commonInitWithIdentifier:
_invalidate
appendEqualsBlocks:
unionSet:
_synchronized_evaluateImageAccessUntilExpirationEnablingIfNecessary:
fileSystemRepresentationWithPath:
stringWithCString:encoding:
_sanitizedPathForPath:
_synchronized_isExpired
_referenceBounds
contentFrame
allValues
loadImage
cachedImageForInterfaceOrientation:
_beginPreHeatImageAccess
_endPreHeatImageAccess
createLaunchImageGeneratorWithContext:
setExpirationDate:
distantPast
initWithContentsOfFile:options:error:
_synchronized_hasCachedImage:
_purgeCachedImageIfAppropriate:
date
isAfterDate:
isValidWithReason:
isExpired
expirationDate
timeIntervalSinceDate:
_hasGenerationContext
imageGenerator
fileExists
_descriptionBuilderWithMultilinePrefix:includeVariants:
_manifestQueueDecode_setStore:
rangeOfString:
substringFromIndex:
characterSetWithCharactersInString:
stringByTrimmingCharactersInSet:
_path:isRelativeToPath:outRelativePath:
setContainerIdentity:
_determineRelativePathForPath:location:
_setRelativePath:
_setPath:
lastPathComponent
_shouldDeleteFileOnPurge:
domain
code
_validateWithContainerIdentity:
variantWithIdentifier:
isValid
setVariantID:
setContentType:
setContentFrame:
setStatusBarSettings:
setClassicMode:
setCompatibilityMode:
setBackgroundStyle:
setImageOpaque:
setImageOrientation:
initWithFormat:
isValidImageFileExtension:
dateWithTimeIntervalSinceNow:
dictionaryWithObjects:forKeys:count:
_createCGImageWithPreferredOptions:fromCGImage:
encodeInteger:forKey:
encodeCGSize:forKey:
encodeCGRect:forKey:
_stringForBackgroundStyle:
extendedData
decodeIntegerForKey:
decodeCGSizeForKey:
decodeCGRectForKey:
_backgroundStyleForString:
_allSecureCodingClassesIncludingDefaultAndClientSpecified
dictionaryWithDictionary:
appendPointer:withName:
allocationSize
appendInt64:withName:
appendUInt64:withName:
descriptionForStateCaptureWithMultilinePrefix:
localizedStringFromDate:dateStyle:timeStyle:
appendRect:withName:
appendDictionarySection:withName:skipIfEmpty:
normalizeSnapshotName:
secureCodableCustomExtendedDataClasses
setSecureCodableCustomExtendedDataClasses:
_fileLocation
_setFileLocation:
filename
hasFullSizedContent
variants
imageForInterfaceOrientation:
loadImageForPreHeat
purgeImage
beginImageAccessUntilExpiration
descriptionWithoutVariants
setImageGenerator:
_createVariantWithIdentifier:
_configureDefaultPathWithinGroupForFormat:
_configureWithPath:
_generateImageIfPossible
_setFilename:
fileFormat
lastUsedDate
setLastUsedDate:
classicMode
compatibilityMode
backgroundStyle
generationContext
setExtendedData:
_relativePath
fileLocation
setFileLocation:
imageTransform
setImageTransform:
_containerIdentity
_variantsByID
_variantID
_scheme
_requiredOSVersion
_path
_filename
_creationDate
_lastUsedDate
_expirationDate
_contentFrame
_contentType
_fileFormat
_imageScale
_imageOrientation
_statusBarSettings
_classicMode
_compatibilityMode
_backgroundStyle
_generationContext
_imageAccessCount
_extendedData
_invalidated
_fullScreen
_imageOpaque
_keepImageAccessUntilExpiration
_keepImageAccessForPreHeat
_hasProtectedContent
_loadImageLock
_baseLogIdentifier
_logIdentifier
_logContainerIdentifierDirty
_cachedImageTransaction
_imageGenerator
_imageTransform
setClass:forClassName:
setUseDebugDescription:
acquireManifestForContainerIdentity:store:creatingIfNecessary:
setDelegate:
initWithContainerIdentity:store:
relinquishManifest:
containerPath
snapshotsForGroupID:
snapshotsForGroupID:matchingPredicate:
snapshotsForGroupID:fetchRequest:
snapshotsForGroupIDs:
snapshotsForGroupIDs:matchingPredicate:
snapshotsForGroupIDs:fetchRequest:
createSnapshotWithGroupID:
createVariantForSnapshot:withIdentifier:
generateImageForSnapshot:dataProvider:writeToFile:didGenerateImage:didSaveImage:
generateImageForSnapshot:dataProvider:writeToFile:imageGeneratedHandler:imageDataSavedHandler:
saveSnapshot:atPath:withContext:
_allSnapshotGroups
deleteSnapshot:
deleteSnapshots:
deleteSnapshotsUsingPredicateBuilder:
deleteSnapshotsForGroupID:
deleteSnapshotsForGroupID:matchingPredicate:
deleteSnapshotsForGroupID:predicateBuilder:
purgeSnapshotsWithProtectedContent
beginSnapshotAccessTransaction:completion:
arrayWithObjects:count:
appendArraySection:withName:multilinePrefix:skipIfEmpty:
manifest:didPurgeProtectedContentSnapshotsWithGroupIdentifiers:
initialize
deleteAllSystemSnapshots
_manifestsByIdentity
generateImageForSnapshot:dataProvider:writeToFile:completion:
delegate
_manifestImpl
_delegate
_handleMemoryPressure
unarchivedObjectOfClass:fromData:error:
_initWithContainerIdentity:
_noteDirtied
_scheduleArchivingIfNecessaryWithCompletion:
_workloop_incrementClientCount
identity
_workloop_decrementClientCount
_commonInit
_setContainerIdentity:
hasBeenSignalled
_access_snapshotsForGroupIDs:
_access_snapshotsForGroupIDs:matchingPredicate:
fallbackGenerationContext
launchRequest
_snapshotPredicateForRequest:
indexesOfObjectsPassingTest:
_generatableSnapshotForGroupID:generationContext:
sortDescriptors
NSSortDescriptors
sortUsingDescriptors:
_imageAccessQueue_saveData:forSnapshot:
_reapExpiredAndInvalidSnapshots
_addSnapshotToGroup:
_access_addSnapshotToGroup:
arrayByApplyingSelector:
_access_deleteSnapshots:
_access_snapshotsMatchingPredicate:
_access_snapshotGroupForID:creatingIfNeeded:
_access_deletePaths:
_access_purgeSnapshotsWithProtectedContent
removeAllObjects
_access_accessSnapshotsWithBlock:completion:
setHidden:
setBackgroundActivityEnabled:
_createSnapshotWithGroupID:generationContext:
applicationCompatibilityInfo
_configureSnapshot:withCompatibilityInfo:forLaunchRequest:
addSnapshot:
_access_allSnapshotGroups
_access_doArchiveWithCompletions:
_workloop_checkClientCount
_access_workloop_reapExpiredAndInvalidSnapshots
snapshots
archivedDataWithRootObject:requiringSecureCoding:error:
_access_validateWithContainerIdentity:
cancel
timeIntervalSinceNow
initWithFireInterval:queue:handler:
schedule
enumerateObjectsUsingBlock:
_access_gatherPaths:forSnapshot:
removeSnapshot:
allObjects
addObjectsFromArray:
allKeys
_initWithIdentifier:containerIdentity:
stringByDeletingLastPathComponent
bytes
_workloop_reallyCheckClientCount
_workloop_noteManifestInvalidated:
currentDevice
userInterfaceIdiom
error
appendArraySection:withName:skipIfEmpty:
isUnderMemoryPressure
_snapshotGroupsByID
_descriptionForStateCaptureWithMultilinePrefix:
_identity
_imageAccessFileManger
_reapingTimer
_invalidatedSignal
_clientCount
_pendingOperations
_archiveSchedulingQueue_synchronizeCompletions
_archiveSchedulingQueue_dirty
_archiveSchedulingQueue_scheduled
_accessLock
_addStateCaptureHandler
preheatServiceWithTimeout:
_isAppBlacklisted:
generateImageWithContext:captureInfo:error:
shouldBlacklist
_generateImageForSnapshot:inManifest:withContext:dataProvider:completion:
_blacklistApp:forError:
initWithArray:
_clearBlacklistForApp:
descriptionForObject:
initWithApplicationCompatibilityInfo:launchRequest:timeout:
setObject:atIndexedSubscript:
objectsAtIndexes:
_workQueue
_accessQueue
_blacklistedBundleIdentifiers
_stateCaptureAssertion
appendFloat:withName:
timeout
_applicationCompatibilityInfo
_launchRequest
_timeout
enumeratorAtPath:
fileAttributes
fileType
setWithArray:
_snapshots
initWithServiceName:endpoint:
bs_secureDecodedFromData:
_sendMessage:withReplyHandler:waitForReply:waitDuration:
isFatal
initWithServiceName:
_sendMessage:
_appInfo
_sortableScheme
_sortableName
_sortableLaunchInterfaceIdentifier
_sortableRequiredOSVersion
_sortableStatusBarSettings
_interfaceOrientationMask
_contentTypeMask
initWithKey:ascending:comparator:
_propertyKeyForSnapshotKey:overriddenForNil:
sortDescriptorWithKey:ascending:comparator:
_stringForKey:
NSSortDescriptor
setKey:
ascending
setAscending:
comparator
setComparator:
_key
_ascending
_comparator
_initWithBSSettings:
setDescriptionProvider:
stringForStatusBarStyle:
isBackgroundActivityEnabled
boolForSetting:
appendBool:
appendInteger:
settings:appendDescriptionToBuilder:forFlag:object:ofSetting:
settings:keyDescriptionForSetting:
settings:valueDescriptionForFlag:object:ofSetting:
appendDescriptionToBuilder:forFlag:object:ofSetting:
keyDescriptionForSetting:
valueDescriptionForFlag:object:ofSetting:
mutableCopyWithZone:
_settings
setStyle:
arrayWithCapacity:
fetchRequest
setPredicate:
setSortDescriptors:
setFallbackGenerationContext:
_predicate
_sortDescriptors
_fallbackGenerationContext
initWithDomain:code:userInfo:
initWithDomain:code:userInfo:fatal:shouldBlacklist:
_fatal
_shouldBlacklist
B16@0:8
v24@0:8@16
@24@0:8@16
v24@0:8@"NSCoder"16
@24@0:8@"NSCoder"16
@16@0:8
Q16@0:8
v24@0:8Q16
v16@0:8
@"NSString"
B24@0:8@16
#16@0:8
@24@0:8:16
@32@0:8:16@24
@40@0:8:16@24@32
B24@0:8#16
B24@0:8:16
Vv16@0:8
^{_NSZone=}16@0:8
B24@0:8@"Protocol"16
@"NSString"16@0:8
@"NSString"24@0:8@"NSString"16
@"BSDescriptionBuilder"24@0:8@"NSString"16
@"BSDescriptionBuilder"16@0:8
@40@0:8@16@24@32
Q24@0:8@16
@"NSArray"
@"NSOrderedSet"
@24@0:8@"NSObject<OS_xpc_object>"16
v24@0:8@"NSObject<OS_xpc_object>"16
@24@0:8^{_NSZone=}16
v32@0:8{CGSize=dd}16
v24@0:8q16
{CGSize=dd}16@0:8
q16@0:8
@"FBSDisplayConfiguration"
@"XBDisplayEdgeInsetsWrapper"
{CGSize="width"d"height"d}
@52@0:8Q16@24@32@40B48
@44@0:8@16@24@32B40
v20@0:8B16
@"XBLaunchInterfaceConfiguration"
@"XBLaunchInterface"
@48@0:8{UIEdgeInsets=dddd}16
@48@0:8d16d24d32d40
{UIEdgeInsets=dddd}16@0:8
d16@0:8
@"NSArray"16@0:8
@24@0:8B16B20
v28@0:8@16B24
v40@0:8@16@?24@?32
v44@0:8@16@?24B32@?36
@32@0:8@16@24
v36@0:8@16@24B32
@"<XBApplicationLaunchRequestProviding>"
@"<XBApplicationProviding>"
@"<XBSnapshotManifestStore>"
q24@0:8q16
B24@0:8q16
@48@0:8@16@24@32@40
v32@0:8@16@24
v32@0:8@16@?24
v32@0:8@"NSData"16@"NSString"24
v24@0:8@"NSString"16
@"NSData"24@0:8@"NSString"16
v32@0:8@"NSString"16@?<v@?>24
@"NSObject<OS_dispatch_queue>"
@"NSCountedSet"
@"NSMutableDictionary"
v24@0:8@?16
@52@0:8@16@24B32@36@?44
B32@0:8@16^@24
v48@0:8^@16^@24@32@40
v40@0:8^@16^@24@32
@"XBApplicationSnapshot"
@"<XBSnapshotDataProvider>"
{os_unfair_lock_s="_os_unfair_lock_opaque"I}
@"NSObject<OS_dispatch_workloop>"
v24@0:8d16
v32@0:8@16Q24
B24@0:8Q16
@24@0:8Q16
@"BSMutableSettings"
@24@0:8o^{CGAffineTransform=dddddd}16
@"XBSnapshotDataProviderContext"16@0:8
@"NSData"24@0:8o^{CGAffineTransform=dddddd}16
@"UIImage"16@0:8
@"<XBSnapshotDataProvider>"16@0:8
@32@0:8@16I24B28
@"_FBSSnapshot"
@"UIImage"
@"XBSnapshotDataProviderContext"
@32@0:8@16q24
^{CGImage=}32@0:8@16^{CGImage=}24
{CGRect={CGPoint=dd}{CGSize=dd}}16@0:8
v48@0:8{CGRect={CGPoint=dd}{CGSize=dd}}16
@24@0:8q16
B24@0:8^@16
@?16@0:8
B40@0:8@16@24^@32
@32@0:8@16^q24
@28@0:8@16B24
{CGAffineTransform=dddddd}16@0:8
v64@0:8{CGAffineTransform=dddddd}16
@"XBSnapshotContainerIdentity"
@"NSDate"
{CGRect="origin"{CGPoint="x"d"y"d}"size"{CGSize="width"d"height"d}}
@"XBStatusBarSettings"
@"XBApplicationSnapshotGenerationContext"
@"NSDictionary"
@"NSObject<OS_os_transaction>"
{CGAffineTransform="a"d"b"d"c"d"d"d"tx"d"ty"d}
v32@0:8@"XBApplicationSnapshotManifest"16@"NSArray"24
v44@0:8@16@24B32@?36
v52@0:8@16@24B32@?36@?44
v40@0:8@16@24@32
v32@0:8@?16@?24
@"XBApplicationSnapshotManifestImpl"
@"<XBApplicationSnapshotManifestDelegate>"
@36@0:8@16@24B32
q24@0:8@16
B32@0:8@16@24
@"XBSnapshotManifestIdentity"
@"NSFileManager"
@"BSTimer"
@"BSAtomicSignal"
@"NSMutableArray"
@?24@0:8@16
v60@0:8@16@24@32B40@?44@?52
v56@0:8@16@24@32@40@?48
@"NSMutableSet"
@"<BSInvalidatable>"
@40@0:8@16@24d32
@"XBApplicationLaunchCompatibilityInfo"
@"XBLaunchStateRequest"
I40@0:8@16^@24^@32
@36@0:8Q16B24@?28
@32@0:8Q16^B24
B56@0:8@16@24q32@40Q48
@32@0:8@16Q24
@48@0:8@16q24@32Q40
B48@0:8@16q24@32Q40
@40@0:8q16@24Q32
B56@0:8@"BSSettings"16@"BSDescriptionBuilder"24q32@40Q48
@"NSString"32@0:8@"BSSettings"16Q24
@"NSString"48@0:8@"BSSettings"16q24@32Q40
B48@0:8@"BSDescriptionBuilder"16q24@32Q40
@"NSString"24@0:8Q16
@"NSString"40@0:8q16@24Q32
@"XBApplicationSnapshotPredicate"
@48@0:8@16q24@32B40B44
