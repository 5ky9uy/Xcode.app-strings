@(#)PROGRAM:ProactiveML  PROJECT:Suggestions-1141.2
 %zu
inputSequence
outputLabels
%@ %@
timestamp
modelInfo
minibatchStats
evaluationMetrics
precisionAtK
sparseFloatWeights
sparseQuantizedWeights
weightsScaleFactor
weightsL2norm
denseQuantizedWeights
PMLGradientSolver.m
Invalid parameter not satisfying: %@
gradient
weights
gradientCalculator
predictionCalculator
batchPredictionCalculator
Covariates must have the same column-length as weights. Got covariates with %tu columns but weights of length %d
Invalid covariates, length: %tu but model weights length: %d
sparseFloatFeatures
sparseQuantizedFeatures
featuresScaleFactor
featuresL2norm
idx (%tu) is out of range (%tu)
indices
values
length
minValue
bucketSize
stats
sparseFloatFeatureMatrix
sparseQuantizedFeatureMatrix
featureMatrixScaleFactor
featureMatrixL2norm
columnIndices
columnLength
rowIndices
rowLength
PMLImmutableLogisticRegressionModel.m
VALUES
SHAPE
-[PMLModelWeights(PMLMobileAssetParameterGetStrategy) initFromDictionary:]
PMLDictionaryParameters.m
weightArray.count == [shapeArray[0] unsignedIntegerValue]
-[PMLModelRegressor(PMLMobileAssetParameterGetStrategy) initFromDictionary:]
regressorArray.count == [shapeArray[0] unsignedIntegerValue]
-[PMLModelWeights(PMLPlistAndChunksSerialization) initWithPlist:chunks:context:]
[__expr isKindOfClass:[NSNumber class]]
[__expr isKindOfClass:[PMLDataChunkDenseFloatVector class]]
-[PMLModelRegressor(PMLPlistAndChunksSerialization) initWithPlist:chunks:context:]
WEIGHTS
INTERCEPT
-[PMLImmutableLogisticRegressionModel(PMLPlistAndChunksSerialization) initWithPlist:chunks:context:]
MULTI_LABEL_REGRESSION_MODELS
python
PMLClassificationEvaluationMetrics.m
Process name %@ is not python
com.apple.suggestions.suggestd
name
version
locale
PMLMutableDenseVectorAllocationFailure
Failed to allocate NSData.
count
PMLDenseVector.m
start >= 0 && start < self.count
end > 0 && end <= self.count
end >= start
other.count == self.count
v20@?0f8Q12
Index %tu out of bounds (vector length: %tu)
rmse
truePositives
trueNegatives
falsePositives
falseNegatives
positiveScores
negativeScores
secsToExecute
PMLSparseMatrix.m
matrix
Can not mark %lu x %lu matrix as symmetric
Invalid shape, all rows must be the same length (row %lu length: %lu, first row length: %lu)
malloc failed
v40@?0Q8Q16r^f24r^q32
v28@?0f8Q12Q20
label
supervisionType
confidenceScore
support
d40@?0@"PMLModelWeights"8@"PMLSparseMatrix"16@"PMLModelRegressor"24^f32
f24@?0@"PMLSparseVector"8@"PMLModelWeights"16
@"PMLMutableDenseVector"24@?0@"PMLSparseMatrix"8@"PMLModelWeights"16
calculateAvgGradientForBatch
PMLMathFunctions.h
regularizationRate >= 0.0
l1Ratio >= 0.0 && l1Ratio <= 1.0
numberOfSamples > 0
numberOfDimensions > 0
s == SPARSE_SUCCESS
logisticBatch
PMLHashingVectorizer.m
buckets > 0
extraIdOptions < PMLHashingVectorizerIdOptionLimit
vectorizerStrategy < PMLHashingVectorizerStrategyLimit
vectorNormalization >= PMLVectorNormalizationNone && vectorNormalization < PMLVectorNormalizationLimit
(characterNGramRange.location && characterNGramRange.length) || (tokenNGramRange.location && tokenNGramRange.length)
_idVectorLength == 0 || _paddingId != -1
v24@?0^q8^f16
_endId == -1
BUCKET_SIZE
NGRAM_SIZE
CHARACTER_NGRAM_LOCATION
CHARACTER_NGRAM_LENGTH
CHARACTER_NORMALIZATION
TOKEN_NGRAM_LOCATION
TOKEN_NGRAM_LENGTH
TOKEN_NORMALIZATION
SHOULD_TOKENIZE_NEWLINES
ID_VECTOR_LENGTH
EXTRA_ID_OPTIONS
VECTORIZER_STRATEGY
VECTOR_NORMALIZATION
NON_WORD_TOKENS_LOCALE
v12@?0I8
v8@?0
com.apple.proactive
PMLDenseMatrix.m
PMLSessionDescriptor.m
%@-%@-%@
(^|&)FV=([0-9]+(.[0-9]+)?)($|&)
regex
Unexpected number of matches for %@; pattern: %@; descriptor: %@
Unexpected number of match ranges for %@; pattern: %@; descriptor: %@
Unexpected featureVersion extracted for %@; pattern: %@; descriptor: %@
%@_label%lu
_label[0-9]+
_label([0-9]+)
Handle %@ is not a sub-model handle.
NAME
VERSION
LOCALE
<%@ %@ %@ %@>
PMLDataChunk.m
chunks
batchSize
perLabelSupport
PML_ESPRESSO_INPUT_NAME
PML_ESPRESSO_INPUT_DIM
PML_ESPRESSO_OUTPUT_NAME
PML_ESPRESSO_TRUE_LABEL_NAME
PML_ESPRESSO_LOSS_VALUE_NAME
PML_ESPRESSO_TRAINING_OUTPUT_NAME
PML_ESPRESSO_TRAINING_CONTROL_VARIABLE_NAME
PML_ESPRESSO_INITIALIZER_NAME
PML_ESPRESSO_GLOBALS_TO_GET_GRADIENTS_FOR
PML_ESPRESSO_LAYER_WEIGHTS_TO_GET_GRADIENTS_FOR
PML_ESPRESSO_LAYER_BIASES_TO_GET_GRADIENTS_FOR
PML_ESPRESSO_TRAINING_NETWORK_PATH
PMLEspressoTrainingVariables.m
Can't instantiate %@. Missing "%@" dependency.
<%@:
evaluation
logRegWeights
logRegGradient
linRegFeatureMatrix
linRegObjectiveFeatures
PMLLexicon.m
path
v16@?0^{_CFBurstTrie=}8
v32@?0@"NSString"8@"NSNumber"16^B24
PlanClass
NoiseStrategy
ProactiveMLErrorDomain
PMLSparseVector.m
numberOfNonZeroValues == 0 || (indices && values)
length>=numberOfNonZeroValues
v24@?0^v8Q16
Too big vector.
length >= _numberOfNonZeroValues
_length >= numberOfNonZeroValues
_sparseValues == NULL || _sparseValues != sparseValues
_sparseIndices == NULL || _sparseIndices != sparseIndices
_length == _numberOfNonZeroValues
paddingId != -1 || maxVectorLength == 0
precision
CLASS_NAME
PMLPlistClassWrapper.m
plist
Invalid plan. Unknown class: %@
Invalid plan. class %@ doesn't conform to %@
sparseFloatGradient
iteration
sparseQuantizedGradient
gradientScaleFactor
gradientL2norm
denseQuantizedGradient
Could not create espresso context
Could not create espresso plan
Could not add espresso network from file %@ with storage type %05x, status code %d
Could not declare espresso network input %@, status code %d
Could not declare espresso network output %@, status code %d
Could not build espresso plan, status code %d
Could not bind the input buffer to layer %@ in espresso plan during initialization, status code %d
Unable to get input shape to layer %@ in espresso plan during initialization, status code %d
Input layer %@ has rank %zu, shape %@, num parameters %tu
Could not bind the output buffer to layer %@ in espresso plan during initialization, status code %d
Unable to get output shape to layer %@ in espresso plan during initialization, status code %d
Output layer %@ has rank %zu, shape %@, num parameters %tu
Could not bind the input buffer to layer %@ in espresso plan, status code %d
Could not bind the output buffer to layer %@ in espresso plan, status code %d
Could not execute espresso plan, status code %d
Stopped after iter %li with NAN error
Stopped after iter %li with DBL_MAX error
Stopped after iter %li with -DBL_MAX error
Stopped after iter %li with -INFINITY error
Stopped after iter %li with INFINITY error
Stopped after iter %li with perfect fit
Stopped after iter %li with loss %f
Error extracting floats from sparse rows, status: %d
PMLHashingVectorizer: unknown vectorizer strategy
Could not open chunk file at %@: %@
Chunk descriptor out of bounds: ends at %llu in data of length %llu
Could not parse chunk %u; bailing out
Error writing plist chunk: %@
Error loading plist chunk: %@
Unable to read Espresso network file at: %@
Returning nil for PMLLexicon since unable to initialize lexicon
Falling back to default system lexicon since lexicon at following path is invalid in existence: %@
Returning 0 for word id since token is not in lexicon: %@
PMLSparseVector: unknown vector normalization method
PMLSparseVector: dimensions do not match between source sparse vector (%llu) and destination dense vector (%llu)
Error writing object to NSData: %@
Error reading object from NSData: %@
PMLMultiLabelEspressoClassifier
PMLMultiLabelClassifierProtocol
NSObject
AWDProactiveModelFittingEvaluation
NSCopying
AWDProactiveModelFittingLogRegWeights
PMLGradientResults
PMLGradientSolver
AWDProactiveModelFittingLinRegObjectiveFeatures
AWDProactiveModelFittingQuantizedSparseVector
AWDProactiveModelFittingModelInfoStatsPair
AWDProactiveModelFittingLinRegFeatureMatrix
AWDProactiveModelFittingSparseFloatVector
PMLLaplaceSampler
PMLSampler
AWDProactiveModelFittingSparseFloatMatrix
PMLImmutableLogisticRegressionModel
AWDProactiveModelFittingQuantizedSparseMatrix
PMLMobileAssetParameterGetStrategy
PMLChunkToVec
PMLPlistAndChunksSerialization
PMLPlistAndChunksSerializableProtocol
PMLMultiLabelLogisticRegressionModel
PMLMultiLabelClassifierModelProtocol
PMLClassificationEvaluationMetrics
AWDProactiveModelFittingModelInfo
PMLDenseVector
NSMutableCopying
PMLMutableDenseVector
AWDProactiveModelFittingEvalMetrics
PMLSparseMatrix
AWDProactiveModelFittingSession
AWDProactiveModelFittingLabelSupportPair
PMLLogisticRegressionModel
PMLGaussianSampler
PMLModelRegressor
PMLHashingVectorizer
PMLTransformerProtocol
PMLDenseMatrix
PMLSessionDescriptor
AWDProactiveModelFittingQuantizedDenseVector
PMLDataChunk
PMLDataChunkRaw
PMLDataChunkPlist
PMLDataChunkDenseFloatVector
PMLDataChunkDenseDoubleVector
AWDProactiveModelFittingMinibatchStats
PMLEspressoTrainingVariables
PMLModelWeights
AWDProactiveModelFittingParsecFeedbackEnvelope
PMLLexicon
PMLSparseVector
AWDProactiveModelFittingPrecisionAtKPair
PMLPlistClassWrapper
AWDProactiveModelFittingLogRegGradient
dealloc
appendString:
appendFormat:
init
UTF8String
cStringUsingEncoding:
getNumParametersFromShape:rank:
makeStringForShape:
initWithEspressoContext:espressoPlan:espressoModel:inputNumParameters:outputNumReplyClasses:
sparseVectorToDense:length:
numberWithFloat:
addObject:
classifierWithEspressoModelFile:
isEqual:
class
self
performSelector:
performSelector:withObject:
performSelector:withObject:withObject:
isProxy
isKindOfClass:
isMemberOfClass:
conformsToProtocol:
respondsToSelector:
retain
release
autorelease
retainCount
zone
hash
superclass
description
debugDescription
TQ,R
T#,R
T@"NSString",R,C
outputDimension
predict:
_espressoModel
_espressoPlan
_espressoContext
_outputNumReplyClasses
_inputNumParameters
removeAllObjects
count
objectAtIndex:
dictionaryRepresentation
stringWithFormat:
dictionary
numberWithUnsignedLongLong:
setObject:forKey:
initWithCapacity:
countByEnumeratingWithState:objects:count:
addPrecisionAtK:
setModelInfo:
setMinibatchStats:
setEvaluationMetrics:
precisionAtKsCount
clearPrecisionAtKs
precisionAtKAtIndex:
allocWithZone:
copyWithZone:
mergeFrom:
precisionAtKType
setTimestamp:
setHasTimestamp:
hasTimestamp
hasModelInfo
hasMinibatchStats
hasEvaluationMetrics
readFrom:
writeTo:
copyTo:
timestamp
modelInfo
minibatchStats
evaluationMetrics
precisionAtKs
setPrecisionAtKs:
.cxx_destruct
_timestamp
_evaluationMetrics
_minibatchStats
_modelInfo
_precisionAtKs
_has
TB,N
TQ,N,V_timestamp
TB,R,N
T@"AWDProactiveModelFittingModelInfo",&,N,V_modelInfo
T@"AWDProactiveModelFittingMinibatchStats",&,N,V_minibatchStats
T@"AWDProactiveModelFittingEvalMetrics",&,N,V_evaluationMetrics
T@"NSMutableArray",&,N,V_precisionAtKs
setSparseFloatWeights:
setSparseQuantizedWeights:
setDenseQuantizedWeights:
hasSparseFloatWeights
hasSparseQuantizedWeights
setWeightsScaleFactor:
setHasWeightsScaleFactor:
hasWeightsScaleFactor
setWeightsL2norm:
setHasWeightsL2norm:
hasWeightsL2norm
hasDenseQuantizedWeights
sparseFloatWeights
sparseQuantizedWeights
weightsScaleFactor
weightsL2norm
denseQuantizedWeights
_denseQuantizedWeights
_sparseFloatWeights
_sparseQuantizedWeights
_weightsL2norm
_weightsScaleFactor
T@"AWDProactiveModelFittingSparseFloatVector",&,N,V_sparseFloatWeights
T@"AWDProactiveModelFittingQuantizedSparseVector",&,N,V_sparseQuantizedWeights
Tf,N,V_weightsScaleFactor
Tf,N,V_weightsL2norm
T@"AWDProactiveModelFittingQuantizedDenseVector",&,N,V_denseQuantizedWeights
currentHandler
handleFailureInMethod:object:file:lineNumber:description:
initWithGradient:loss:
gradient
loss
_gradient
_loss
T@"PMLMutableDenseVector",R,N,V_gradient
T@"NSNumber",R,N,V_loss
solveWithAvgGradient:maxNumberOfIterations:
length
initWithCount:
mutablePtr
matrixWithConstantColumn
numberOfColumns
values
numberWithDouble:
vectorWithConstantColumn
setCovariates:
setObjective:
solve
initWithLearningRate:minIterations:stoppingThreshold:weights:intercept:gradientCalculator:predictionCalculator:batchPredictionCalculator:
computeAvgGradientWithIterations:
batchPredict:
solveForCovariates:objectives:
weights
setWeights:
covariates
objective
intercept
setIntercept:
_learningRate
_stoppingThreshold
_minIterations
_gradientCalculator
_predictionCalculator
_batchPredictionCalculator
_intercept
_weights
_covariates
_objective
T@"PMLModelWeights",&,N,V_weights
T@"PMLSparseMatrix",&,N,V_covariates
T@"PMLModelRegressor",&,N,V_objective
TB,N,V_intercept
setSparseFloatFeatures:
setSparseQuantizedFeatures:
hasSparseFloatFeatures
hasSparseQuantizedFeatures
setFeaturesScaleFactor:
setHasFeaturesScaleFactor:
hasFeaturesScaleFactor
setFeaturesL2norm:
setHasFeaturesL2norm:
hasFeaturesL2norm
sparseFloatFeatures
sparseQuantizedFeatures
featuresScaleFactor
featuresL2norm
_featuresL2norm
_featuresScaleFactor
_sparseFloatFeatures
_sparseQuantizedFeatures
T@"AWDProactiveModelFittingSparseFloatVector",&,N,V_sparseFloatFeatures
T@"AWDProactiveModelFittingQuantizedSparseVector",&,N,V_sparseQuantizedFeatures
Tf,N,V_featuresScaleFactor
Tf,N,V_featuresL2norm
exceptionWithName:reason:userInfo:
raise
numberWithUnsignedInt:
indicesCount
clearIndices
indicesAtIndex:
addIndices:
valuesCount
clearValues
valuesAtIndex:
addValues:
indices
setIndices:count:
setValues:count:
setLength:
setHasLength:
hasLength
setMinValue:
setHasMinValue:
hasMinValue
setBucketSize:
setHasBucketSize:
hasBucketSize
minValue
bucketSize
_indices
_values
_bucketSize
_length
_minValue
TQ,R,N
T^I,R,N
TI,N,V_length
Tf,N,V_minValue
Tf,N,V_bucketSize
setStats:
hasStats
stats
_stats
T@"AWDProactiveModelFittingMinibatchStats",&,N,V_stats
setSparseFloatFeatureMatrix:
setSparseQuantizedFeatureMatrix:
hasSparseFloatFeatureMatrix
hasSparseQuantizedFeatureMatrix
setFeatureMatrixScaleFactor:
setHasFeatureMatrixScaleFactor:
hasFeatureMatrixScaleFactor
setFeatureMatrixL2norm:
setHasFeatureMatrixL2norm:
hasFeatureMatrixL2norm
sparseFloatFeatureMatrix
sparseQuantizedFeatureMatrix
featureMatrixScaleFactor
featureMatrixL2norm
_featureMatrixL2norm
_featureMatrixScaleFactor
_sparseFloatFeatureMatrix
_sparseQuantizedFeatureMatrix
T@"AWDProactiveModelFittingSparseFloatMatrix",&,N,V_sparseFloatFeatureMatrix
T@"AWDProactiveModelFittingQuantizedSparseMatrix",&,N,V_sparseQuantizedFeatureMatrix
Tf,N,V_featureMatrixScaleFactor
Tf,N,V_featureMatrixL2norm
T^Q,R,N
T^f,R,N
TQ,N,V_length
initWithMagnitude:
sample
initWithMagnitude:seed:
_rng
_magnitude
columnIndicesCount
clearColumnIndices
columnIndicesAtIndex:
addColumnIndices:
rowIndicesCount
clearRowIndices
rowIndicesAtIndex:
addRowIndices:
columnIndices
setColumnIndices:count:
setColumnLength:
setHasColumnLength:
hasColumnLength
rowIndices
setRowIndices:count:
setRowLength:
setHasRowLength:
hasRowLength
columnLength
rowLength
_columnIndices
_rowIndices
_columnLength
_rowLength
TQ,N,V_columnLength
TQ,N,V_rowLength
initWithFloatsNoCopy:count:intercept:
vector
chunkWithVector:count:
numberOfNonZeroValues
sparseIndices
sparseValues
arrayWithObjects:count:
initWithWeights:intercept:
initWithChunk:intercept:
toChunk
_backingObject
TI,N,V_columnLength
TI,N,V_rowLength
objectForKeyedSubscript:
objectAtIndexedSubscript:
unsignedIntegerValue
initModelWeightsFromFloats:
numberWithInt:
dictionaryWithObjects:forKeys:count:
initFromDictionary:
toDictionary
initModelRegressorFromFloats:
initWithFloats:count:
toVec
migrateDenseDoubleVectorToDenseFloatVector:
toPlistWithChunks:
initWithPlist:chunks:context:
numberWithBool:
boolValue
chunkWithPlist:
serializeChunks:
writeToFile:atomically:
chunksFromFileAtPath:
chunksFromData:
floatValue
initWithFloatsNoCopy:count:freeWhenDone:
numberWithUnsignedInteger:
lastObject
plist
withWeights:andIntercept:
initWithModels:
firstObject
initWithClassNameKey:
writeToPlistWithObject:andChunks:
readObjectWithPlist:chunks:context:
initWithWeightsArray:andIntercept:
serialize
_models
precision:predictions:predicate:
recall:predictions:predicate:
roundFloatToSigFigs:sigFigs:
addPositiveScores:
addNegativeScores:
processInfo
processName
isEqualToString:
f1Score:predictions:predicate:
truePositives:predictions:predicate:
falsePositives:predictions:predicate:
trueNegatives:predictions:predicate:
falseNegatives:predictions:predicate:
addScoresForOutcomes:predictions:predicate:metrics:
setReportSamplingRate:
setName:
setVersion:
setLocale:
hasName
hasVersion
hasLocale
name
version
locale
_locale
_name
_version
T@"NSString",&,N,V_name
T@"NSString",&,N,V_version
T@"NSString",&,N,V_locale
bytes
initWithLength:
initWithBytes:length:
initWithBytesNoCopy:length:freeWhenDone:
initWithBytesNoCopy:length:deallocator:
mutableCopy
mutableBytes
data
appendData:
initWithMutableData:
initWithData:
l2norm
enumerateNonZeroValuesWithBlock:
initWithNumbers:
denseVectorFromNumbers:
mutableCopyWithZone:
initWithFloatsNoCopy:count:deallocator:
sliceFrom:to:
vecByAppendingVec:
cosineDistanceFrom:
l1norm
maxValue
density
enumerateValuesWithBlock:
valueAt:
_data
Tr^f,R,N
T@"NSData",R,N
appendBytes:length:
append:
append:count:
processValuesInPlaceWithBlock:
scaleInPlaceWithInversedFactor:
scaleInPlaceWithFactor:
sumInPlaceWithVector:
mutableData
_mutableData
T@"NSMutableData",R,N,V_mutableData
positiveScoresCount
clearPositiveScores
positiveScoresAtIndex:
negativeScoresCount
clearNegativeScores
negativeScoresAtIndex:
setRmse:
setHasRmse:
hasRmse
setF1:
setHasF1:
hasF1
setTruePositives:
setHasTruePositives:
hasTruePositives
setTrueNegatives:
setHasTrueNegatives:
hasTrueNegatives
setFalsePositives:
setHasFalsePositives:
hasFalsePositives
setFalseNegatives:
setHasFalseNegatives:
hasFalseNegatives
positiveScores
setPositiveScores:count:
negativeScores
setNegativeScores:count:
setSecsToExecute:
setHasSecsToExecute:
hasSecsToExecute
rmse
truePositives
trueNegatives
falsePositives
falseNegatives
secsToExecute
_negativeScores
_positiveScores
_falseNegatives
_falsePositives
_trueNegatives
_truePositives
_rmse
_secsToExecute
Tf,N,V_rmse
Tf,N,V_f1
TQ,N,V_truePositives
TQ,N,V_trueNegatives
TQ,N,V_falsePositives
TQ,N,V_falseNegatives
Tf,N,V_secsToExecute
initWithSparseMatrix:
numberOfRows
_enumerateSparseRowsWithBlock:
sparseMatrixWithNumberOfRows:numberOfColumns:
sparseMatrixFromNumbers:
setMatrix:
setIsSymmetric:
valueAtRow:column:
enumerateNonZeroValuesForRow:withBlock:
isSymmetric
matrix
_isSymmetric
_matrix
TB,N,V_isSymmetric
T^{sparse_m_float=},N,V_matrix
setLabel:
setHasLabel:
hasLabel
setSupervisionType:
setHasSupervisionType:
hasSupervisionType
setConfidenceScore:
setHasConfidenceScore:
hasConfidenceScore
label
supervisionType
confidenceScore
_label
_supervisionType
_confidenceScore
TQ,N,V_label
TQ,N,V_supervisionType
Tf,N,V_confidenceScore
setSupport:
setHasSupport:
hasSupport
support
_support
Tf,N,V_support
solverWithWeights:andIntercept:
solverWithWeights:andIntercept:learningRate:minIterations:stoppingThreshold:
solverWithWeights:andIntercept:learningRate:minIterations:stoppingThreshold:regularizationStrategy:regularizationRate:l1Ratio:
initWithSolver:
solverWithWeights:
solverWithWeights:andIntercept:learningRate:minIterations:stoppingThreshold:l2RegularizationRate:
withWeights:
_solver
initWithRegressorFromFloat:
modelRegressorFromFloat:
modelRegressorFromFloats:
regressorVectorFrom:
denseVector
regressorFor:
inverseValues
Ti,R,N
initWithBucketSize:characterNGramRange:tokenNGramRange:shouldNormalizeTokens:shouldNormalizeCharacters:localeForNonwordTokens:tokenizeNewlines:idVectorLength:extraIdOptions:vectorizerStrategy:vectorNormalization:
initWithBucketSize:ngrams:localeForNonwordTokens:tokenizeNewlines:
withBucketSize:characterNGramRange:tokenNGramRange:shouldNormalizeTokens:shouldNormalizeCharacters:localeForNonwordTokens:tokenizeNewlines:
transformWithFrequency:shouldDecrement:
transformSequentialNGrams:
transformBagOfIds:shouldDecrement:
sparseVectorWithLength:numberOfNonZeroValues:block:
scaleWithVectorNormalization:
addEndId:paddingId:withMaxVectorLength:
convertToBagOfIds
transform:
numberWithInteger:
localeIdentifier
setObject:forKeyedSubscript:
intValue
localeWithLocaleIdentifier:
isEqualToHashingVectorizer:
withBucketSize:andNgramOrder:
withBucketSize:andCharNgramOrder:
withBucketSize:andNgrams:
withBucketSize:ngrams:localeForNonwordTokens:tokenizeNewlines:
withBucketSize:characterNGramRange:tokenNGramRange:shouldNormalizeTokens:shouldNormalizeCharacters:localeForNonwordTokens:tokenizeNewlines:idVectorLength:extraIdOptions:vectorizerStrategy:vectorNormalization:
withBucketSize:characterNGramRange:tokenNGramRange:shouldNormalizeTokens:shouldNormalizeCharacters:
setVectorizerNormalization:
transformBatch:
_buckets
_characterNGramRange
_tokenNGramRange
_shouldNormalizeTokens
_shouldNormalizeCharacters
_localeForNonwordTokens
_tokenizeNewlines
_idVectorLength
_extraIdOptions
_vectorizerStrategy
_vectorNormalization
_paddingId
_endId
getCharacters:range:
initWithData:numberOfRows:numberOfColumns:
denseMatrixFromData:numberOfRows:numberOfColumns:
denseMatrixFromNumbers:
_numberOfRows
_numberOfColumns
TQ,R,N,V_numberOfRows
TQ,R,N,V_numberOfColumns
initWithName:version:locale:
initWithFormat:
_parseFeatureVersion:descriptor:
regularExpressionWithPattern:options:error:
matchesInString:options:range:
pattern
raise:format:
numberOfRanges
rangeAtIndex:
substringWithRange:
descriptorForName:version:locale:
stringByReplacingMatchesInString:options:range:withTemplate:
numberOfMatchesInString:options:range:
firstMatchInString:options:range:
integerValue
subSessionDescriptorForLabel:
baseSessionDescriptor
isSubSessionDescriptor
subSessionLabel
featureVersion
_featureVersion
T@"NSString",R,N,V_name
T@"NSString",R,N,V_version
Tf,R,N,V_featureVersion
T@"NSString",R,N,V_locale
isEqualToData:
setSuperdata:
initWithContentsOfFile:options:error:
chunkOfType:data:superdata:
dataChunkType
_backingData
_superdata
chunkWithData:
dataWithPropertyList:format:options:error:
propertyListWithData:options:format:error:
_plist
_parsed
T@,R,N
Tr^d,R,N
addPerLabelSupport:
perLabelSupportsCount
clearPerLabelSupports
perLabelSupportAtIndex:
perLabelSupportType
setBatchSize:
setHasBatchSize:
hasBatchSize
batchSize
perLabelSupports
setPerLabelSupports:
_batchSize
_perLabelSupports
TQ,N,V_batchSize
T@"NSMutableArray",&,N,V_perLabelSupports
defaultManager
path
isReadableFileAtPath:
inputDim
absoluteString
trainingNetworkPath
dataWithContentsOfFile:
isEqualToEspressoTrainingVariables:
initWithTrainingNetworkPath:inputName:inputDim:outputName:trueLabelName:lossValueName:trainingOutputName:trainingControlVariableName:initializerName:globalsToGetGradientsFor:layerWeightsToGetGradientsFor:layerBiasesToGetGradientsFor:
inputName
outputName
trueLabelName
lossValueName
trainingOutputName
trainingControlVariableName
initializerName
globalsToGetGradientsFor
layerWeightsToGetGradientsFor
layerBiasesToGetGradientsFor
_initializedWithNSData
_trainingNetworkPath
_inputName
_inputDim
_outputName
_trueLabelName
_lossValueName
_trainingOutputName
_trainingControlVariableName
_initializerName
_globalsToGetGradientsFor
_layerWeightsToGetGradientsFor
_layerBiasesToGetGradientsFor
T@"NSURL",R,N,V_trainingNetworkPath
T@"NSString",R,N,V_inputName
TQ,R,N,V_inputDim
T@"NSString",R,N,V_outputName
T@"NSString",R,N,V_trueLabelName
T@"NSString",R,N,V_lossValueName
T@"NSString",R,N,V_trainingOutputName
T@"NSString",R,N,V_trainingControlVariableName
T@"NSString",R,N,V_initializerName
T@"NSArray",R,N,V_globalsToGetGradientsFor
T@"NSArray",R,N,V_layerWeightsToGetGradientsFor
T@"NSArray",R,N,V_layerBiasesToGetGradientsFor
modelWeightsOfLength:rng:
initWithSeed:
modelWeightsFromFloats:
modelWeightsOfLength:
modelWeightsOfLength:rngSeed:
zeroWeightsOfLength:
constWeightsOfLength:value:
weightsFromNumbers:
asMutableDenseVector
weightsByAppendingWeights:
copy
next
setEvaluation:
setLogRegWeights:
setLogRegGradient:
setLinRegFeatureMatrix:
setLinRegObjectiveFeatures:
hasEvaluation
hasLogRegWeights
hasLogRegGradient
hasLinRegFeatureMatrix
hasLinRegObjectiveFeatures
evaluation
logRegWeights
logRegGradient
linRegFeatureMatrix
linRegObjectiveFeatures
_evaluation
_linRegFeatureMatrix
_linRegObjectiveFeatures
_logRegGradient
_logRegWeights
T@"AWDProactiveModelFittingEvaluation",&,N,V_evaluation
T@"AWDProactiveModelFittingLogRegWeights",&,N,V_logRegWeights
T@"AWDProactiveModelFittingLogRegGradient",&,N,V_logRegGradient
T@"AWDProactiveModelFittingLinRegFeatureMatrix",&,N,V_linRegFeatureMatrix
T@"AWDProactiveModelFittingLinRegObjectiveFeatures",&,N,V_linRegObjectiveFeatures
initWithPath:
fileExistsAtPath:
attributesOfItemAtPath:error:
fileSize
payloadForString:
runBlockWithTrie:
enumerateKeysAndObjectsUsingBlock:
serializeLexiconToFile:tokenToWordIDDict:
getWordIDforToken:
getTotalEntries
_lexicon
sparseVectorEmptyWithLength:
initWithLength:numberOfNonZeroValues:indices:values:
sparseVectorFromDense:length:
dataWithBytesNoCopy:length:freeWhenDone:
maxAbsValue
applyOneHotNormalization
sparseVectorWithLength:numberOfNonZeroValues:isSparseIndexInt64:sparseIndices:sparseValues:toDenseValues:withLength:
setNumberOfNonZeroValues:
sparseVectorFromDense:
sparseVectorFromNumbers:
sparseVectorFromNumbers:indices:length:
initWithLength:numberOfNonZeroValues:indicesData:valuesData:
indicesData
valuesData
indicesAsUInt16Data
quantizedValuesAsUInt8DataWithMin:max:
setSparseValues:
setSparseIndices:
processNonZeroValuesInPlaceWithBlock:
valueAtIndex:
_numberOfNonZeroValues
_sparseIndices
_sparseValues
TQ,N,V_numberOfNonZeroValues
T^q,N,V_sparseIndices
T^f,N,V_sparseValues
TQ,R,N,V_length
setK:
setHasK:
hasK
setPrecision:
setHasPrecision:
hasPrecision
precision
_precision
TQ,N,V_k
Tf,N,V_precision
addEntriesFromDictionary:
writeToDataWithObject:andChunks:
readObjectWithData:chunks:context:
_classNameKey
setSparseFloatGradient:
setSparseQuantizedGradient:
setDenseQuantizedGradient:
hasSparseFloatGradient
setIteration:
setHasIteration:
hasIteration
hasSparseQuantizedGradient
setGradientScaleFactor:
setHasGradientScaleFactor:
hasGradientScaleFactor
setGradientL2norm:
setHasGradientL2norm:
hasGradientL2norm
hasDenseQuantizedGradient
sparseFloatGradient
iteration
sparseQuantizedGradient
gradientScaleFactor
gradientL2norm
denseQuantizedGradient
_iteration
_denseQuantizedGradient
_gradientL2norm
_gradientScaleFactor
_sparseFloatGradient
_sparseQuantizedGradient
T@"AWDProactiveModelFittingSparseFloatVector",&,N,V_sparseFloatGradient
TQ,N,V_iteration
T@"AWDProactiveModelFittingQuantizedSparseVector",&,N,V_sparseQuantizedGradient
Tf,N,V_gradientScaleFactor
Tf,N,V_gradientL2norm
T@"AWDProactiveModelFittingQuantizedDenseVector",&,N,V_denseQuantizedGradient
@24@0:8[10Q]16
Q32@0:8[10Q]16Q24
@24@0:8@16
B24@0:8@16
#16@0:8
@16@0:8
@24@0:8:16
@32@0:8:16@24
@40@0:8:16@24@32
B16@0:8
B24@0:8#16
B24@0:8:16
Vv16@0:8
Q16@0:8
^{_NSZone=}16@0:8
B24@0:8@"Protocol"16
@"NSString"16@0:8
@"NSArray"24@0:8@"PMLSparseVector"16
v16@0:8
@64@0:8^v16^v24{?=^vi}32Q48Q56
{?="plan"^v"network_index"i}
@24@0:8^{_NSZone=}16
v24@0:8Q16
v20@0:8B16
v24@0:8@16
@24@0:8Q16
@"AWDProactiveModelFittingEvalMetrics"
@"AWDProactiveModelFittingMinibatchStats"
@"AWDProactiveModelFittingModelInfo"
@"NSMutableArray"
{?="timestamp"b1}
v20@0:8f16
f16@0:8
@"AWDProactiveModelFittingQuantizedDenseVector"
@"AWDProactiveModelFittingSparseFloatVector"
@"AWDProactiveModelFittingQuantizedSparseVector"
{?="timestamp"b1"weightsL2norm"b1"weightsScaleFactor"b1}
@32@0:8@16@24
@"PMLMutableDenseVector"
@"NSNumber"
@68@0:8f16Q20f28@32B40@?44@?52@?60
@32@0:8^f16Q24
f24@0:8@16
v32@0:8@16@24
@"PMLModelWeights"
@"PMLSparseMatrix"
@"PMLModelRegressor"
{?="timestamp"b1"featuresL2norm"b1"featuresScaleFactor"b1}
^I16@0:8
v20@0:8I16
I24@0:8Q16
v32@0:8^I16Q24
I16@0:8
{?="list"^I"count"Q"size"Q}
{?="bucketSize"b1"length"b1"minValue"b1}
@"AWDProactiveModelFittingSparseFloatMatrix"
@"AWDProactiveModelFittingQuantizedSparseMatrix"
{?="timestamp"b1"featureMatrixL2norm"b1"featureMatrixScaleFactor"b1}
^Q16@0:8
Q24@0:8Q16
v32@0:8^Q16Q24
^f16@0:8
f24@0:8Q16
v32@0:8^f16Q24
{?="list"^Q"count"Q"size"Q}
{?="list"^f"count"Q"size"Q}
{?="length"b1}
@20@0:8f16
@28@0:8f16Q20
{?="s"[2Q]}
{?="columnLength"b1"rowLength"b1}
@28@0:8@16B24
@32@0:8r^f16i24B28
{?="bucketSize"b1"columnLength"b1"minValue"b1"rowLength"b1}
@40@0:8@16@24@32
@24@0:8@"NSMutableArray"16
@40@0:8@16@"NSArray"24@"NSDictionary"32
@28@0:8@"NSArray"16B24
@"NSArray"
f40@0:8@16@24@?32
Q40@0:8@16@24@?32
v48@0:8@16@24@?32@40
f24@0:8f16i20
@"NSString"
r^f16@0:8
@32@0:8r^f16Q24
@36@0:8^f16Q24B32
@40@0:8^f16Q24@?32
@24@0:8i16i20
v24@0:8@?16
@"NSMutableData"
v32@0:8r^f16Q24
{?="falseNegatives"b1"falsePositives"b1"trueNegatives"b1"truePositives"b1"f1"b1"rmse"b1"secsToExecute"b1}
@32@0:8Q16Q24
@24@0:8^{sparse_m_float=}16
v24@0:8^{sparse_m_float=}16
f32@0:8Q16Q24
v32@0:8Q16@?24
^{sparse_m_float=}16@0:8
^{sparse_m_float=}
{?="label"b1"supervisionType"b1"timestamp"b1"confidenceScore"b1}
{?="label"b1"support"b1}
@44@0:8@16B24f28Q32f40
@48@0:8@16B24f28Q32f40f44
@60@0:8@16B24f28Q32f40Q44f52f56
@"PMLGradientSolver"
@20@0:8i16
i16@0:8
@"PMLDenseVector"
@36@0:8i16i20@24B32
@104@0:8i16{_NSRange=QQ}20{_NSRange=QQ}36B52B56@60B68Q72Q80Q88q96
@72@0:8i16{_NSRange=QQ}20{_NSRange=QQ}36B52B56@60B68
@60@0:8i16{_NSRange=QQ}20{_NSRange=QQ}36B52B56
v24@0:8q16
{_NSRange="location"Q"length"Q}
@"NSLocale"
@40@0:8@16Q24Q32
f32@0:8@16@24
{?="bucketSize"b1"minValue"b1}
@36@0:8I16@20@28
@"NSData"
@28@0:8r^f16i24
@28@0:8r^d16i24
r^d16@0:8
{?="batchSize"b1"support"b1}
@112@0:8@16@24Q32@40@48@56@64@72@80@88@96@104
@"NSURL"
@28@0:8i16@20
@28@0:8i16Q20
@24@0:8i16f20
@"AWDProactiveModelFittingEvaluation"
@"AWDProactiveModelFittingLinRegFeatureMatrix"
@"AWDProactiveModelFittingLinRegObjectiveFeatures"
@"AWDProactiveModelFittingLogRegGradient"
@"AWDProactiveModelFittingLogRegWeights"
B32@0:8@16@24
Q24@0:8@16
@"_PASCFBurstTrie"
@40@0:8Q16Q24@?32
v68@0:8Q16Q24B32r^v36r^f44^f52Q60
@40@0:8@16@24Q32
@48@0:8Q16Q24@32@40
@48@0:8Q16Q24^q32^f40
@24@0:8f16f20
v24@0:8^f16
v24@0:8^q16
v40@0:8q16q24Q32
^q16@0:8
{?="k"b1"precision"b1}
{?="iteration"b1"timestamp"b1"gradientL2norm"b1"gradientScaleFactor"b1}
