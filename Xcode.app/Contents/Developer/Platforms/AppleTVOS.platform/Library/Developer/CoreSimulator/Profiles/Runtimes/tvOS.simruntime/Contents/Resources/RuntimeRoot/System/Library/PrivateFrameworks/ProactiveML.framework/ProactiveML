@(#)PROGRAM:ProactiveML  PROJECT:Suggestions-1153.1
fffff
Could not bind the input buffer to layer %@ in espresso plan, status code %d
Could not bind the output buffer to layer %@ in espresso plan, status code %d
Could not execute espresso plan, status code %d
Could not create espresso context
Could not create espresso plan
Could not add espresso network from file %@ with storage type %05x, status code %d
Could not declare espresso network input %@, status code %d
Could not declare espresso network output %@, status code %d
Could not build espresso plan, status code %d
Could not bind the input buffer to layer %@ in espresso plan during initialization, status code %d
Unable to get input shape to layer %@ in espresso plan during initialization, status code %d
Input layer %@ has rank %zu, shape %@, num parameters %tu
Could not bind the output buffer to layer %@ in espresso plan during initialization, status code %d
Unable to get output shape to layer %@ in espresso plan during initialization, status code %d
Output layer %@ has rank %zu, shape %@, num parameters %tu
Stopped after iter %li with NAN error
Stopped after iter %li with DBL_MAX error
Stopped after iter %li with -DBL_MAX error
Stopped after iter %li with -INFINITY error
Stopped after iter %li with INFINITY error
Stopped after iter %li with perfect fit
Stopped after iter %li with loss %f
Error extracting floats from sparse rows, status: %d
PMLHashingVectorizer: unknown vectorizer strategy
Chunk descriptor out of bounds: ends at %llu in data of length %llu
Could not parse chunk %u; bailing out
Could not open chunk file at %@: %@
Error loading plist chunk: %@
Error writing plist chunk: %@
Unable to read Espresso network file at: %@
Returning 0 for word id since token is not in lexicon: %@
Falling back to default system lexicon since lexicon at following path is invalid in existence: %@
Returning nil for PMLLexicon since unable to initialize lexicon
PMLSparseVector: unknown vector normalization method
PMLSparseVector: dimensions do not match between source sparse vector (%llu) and destination dense vector (%llu)
Error reading object from NSData: %@
Error writing object to NSData: %@
outputLabels
inputSequence
 %zu
precisionAtK
evaluationMetrics
minibatchStats
modelInfo
timestamp
%@ %@
denseQuantizedWeights
weightsL2norm
weightsScaleFactor
sparseQuantizedWeights
sparseFloatWeights
gradient
Invalid parameter not satisfying: %@
PMLGradientSolver.m
Invalid covariates, length: %tu but model weights length: %d
Covariates must have the same column-length as weights. Got covariates with %tu columns but weights of length %d
batchPredictionCalculator
predictionCalculator
gradientCalculator
weights
featuresL2norm
featuresScaleFactor
sparseQuantizedFeatures
sparseFloatFeatures
bucketSize
minValue
length
values
indices
idx (%tu) is out of range (%tu)
stats
featureMatrixL2norm
featureMatrixScaleFactor
sparseQuantizedFeatureMatrix
sparseFloatFeatureMatrix
rowLength
rowIndices
columnLength
columnIndices
PMLImmutableLogisticRegressionModel.m
-[PMLModelWeights(PMLPlistAndChunksSerialization) initWithPlist:chunks:context:]
PMLDictionaryParameters.m
[__expr isKindOfClass:[NSNumber class]]
[__expr isKindOfClass:[PMLDataChunkDenseFloatVector class]]
SHAPE
VALUES
-[PMLModelWeights(PMLMobileAssetParameterGetStrategy) initFromDictionary:]
weightArray.count == [shapeArray[0] unsignedIntegerValue]
-[PMLModelRegressor(PMLPlistAndChunksSerialization) initWithPlist:chunks:context:]
-[PMLModelRegressor(PMLMobileAssetParameterGetStrategy) initFromDictionary:]
regressorArray.count == [shapeArray[0] unsignedIntegerValue]
-[PMLImmutableLogisticRegressionModel(PMLPlistAndChunksSerialization) initWithPlist:chunks:context:]
WEIGHTS
INTERCEPT
MULTI_LABEL_REGRESSION_MODELS
Process name %@ is not python
PMLClassificationEvaluationMetrics.m
python
com.apple.suggestions.suggestd
locale
version
name
Index %tu out of bounds (vector length: %tu)
PMLDenseVector.m
v20@?0f8Q12
other.count == self.count
end >= start
end > 0 && end <= self.count
start >= 0 && start < self.count
Failed to allocate NSData.
PMLMutableDenseVectorAllocationFailure
count
secsToExecute
negativeScores
positiveScores
falseNegatives
falsePositives
trueNegatives
truePositives
rmse
v28@?0f8Q12Q20
v40@?0Q8Q16r^f24r^q32
malloc failed
Can not mark %lu x %lu matrix as symmetric
PMLSparseMatrix.m
matrix
Invalid shape, all rows must be the same length (row %lu length: %lu, first row length: %lu)
confidenceScore
supervisionType
label
support
@"PMLMutableDenseVector"24@?0@"PMLSparseMatrix"8@"PMLModelWeights"16
logisticBatch
PMLMathFunctions.h
s == SPARSE_SUCCESS
f24@?0@"PMLSparseVector"8@"PMLModelWeights"16
d40@?0@"PMLModelWeights"8@"PMLSparseMatrix"16@"PMLModelRegressor"24^f32
calculateAvgGradientForBatch
regularizationRate >= 0.0
l1Ratio >= 0.0 && l1Ratio <= 1.0
numberOfSamples > 0
numberOfDimensions > 0
NON_WORD_TOKENS_LOCALE
VECTOR_NORMALIZATION
VECTORIZER_STRATEGY
EXTRA_ID_OPTIONS
ID_VECTOR_LENGTH
SHOULD_TOKENIZE_NEWLINES
CHARACTER_NORMALIZATION
TOKEN_NORMALIZATION
TOKEN_NGRAM_LENGTH
TOKEN_NGRAM_LOCATION
CHARACTER_NGRAM_LENGTH
CHARACTER_NGRAM_LOCATION
NGRAM_SIZE
BUCKET_SIZE
_endId == -1
PMLHashingVectorizer.m
v24@?0^q8^f16
v12@?0I8
(characterNGramRange.location && characterNGramRange.length) || (tokenNGramRange.location && tokenNGramRange.length)
vectorNormalization >= PMLVectorNormalizationNone && vectorNormalization < PMLVectorNormalizationLimit
vectorizerStrategy < PMLHashingVectorizerStrategyLimit
extraIdOptions < PMLHashingVectorizerIdOptionLimit
buckets > 0
v8@?0
com.apple.proactive
PMLDenseMatrix.m
<%@ %@ %@ %@>
LOCALE
VERSION
NAME
Handle %@ is not a sub-model handle.
PMLSessionDescriptor.m
_label([0-9]+)
_label[0-9]+
%@_label%lu
Unexpected featureVersion extracted for %@; pattern: %@; descriptor: %@
Unexpected number of match ranges for %@; pattern: %@; descriptor: %@
Unexpected number of matches for %@; pattern: %@; descriptor: %@
regex
(^|&)FV=([0-9]+(.[0-9]+)?)($|&)
%@-%@-%@
chunks
PMLDataChunk.m
perLabelSupport
batchSize
PML_ESPRESSO_LAYER_BIASES_TO_GET_GRADIENTS_FOR
PML_ESPRESSO_LAYER_WEIGHTS_TO_GET_GRADIENTS_FOR
PML_ESPRESSO_GLOBALS_TO_GET_GRADIENTS_FOR
PML_ESPRESSO_INITIALIZER_NAME
PML_ESPRESSO_TRAINING_CONTROL_VARIABLE_NAME
PML_ESPRESSO_TRAINING_OUTPUT_NAME
PML_ESPRESSO_LOSS_VALUE_NAME
PML_ESPRESSO_TRUE_LABEL_NAME
PML_ESPRESSO_OUTPUT_NAME
PML_ESPRESSO_INPUT_DIM
PML_ESPRESSO_INPUT_NAME
Can't instantiate %@. Missing "%@" dependency.
PMLEspressoTrainingVariables.m
PML_ESPRESSO_TRAINING_NETWORK_PATH
linRegObjectiveFeatures
linRegFeatureMatrix
logRegGradient
logRegWeights
evaluation
v16@?0^{_CFBurstTrie=}8
path
PMLLexicon.m
v32@?0@"NSString"8@"NSNumber"16^B24
PlanClass
NoiseStrategy
ProactiveMLErrorDomain
maxVectorLength
_length == _numberOfNonZeroValues
PMLSparseVector.m
_sparseIndices == NULL || _sparseIndices != sparseIndices
_sparseValues == NULL || _sparseValues != sparseValues
_length >= numberOfNonZeroValues
length >= _numberOfNonZeroValues
Too big vector.
v24@?0^v8Q16
length>=numberOfNonZeroValues
numberOfNonZeroValues == 0 || (indices && values)
precision
CLASS_NAME
Invalid plan. class %@ doesn't conform to %@
Invalid plan. Unknown class: %@
plist
PMLPlistClassWrapper.m
denseQuantizedGradient
gradientL2norm
gradientScaleFactor
sparseQuantizedGradient
iteration
sparseFloatGradient
PMLMultiLabelEspressoClassifier
PMLMultiLabelClassifierProtocol
NSObject
AWDProactiveModelFittingEvaluation
NSCopying
AWDProactiveModelFittingLogRegWeights
PMLGradientResults
PMLGradientSolver
AWDProactiveModelFittingLinRegObjectiveFeatures
AWDProactiveModelFittingQuantizedSparseVector
AWDProactiveModelFittingModelInfoStatsPair
AWDProactiveModelFittingLinRegFeatureMatrix
AWDProactiveModelFittingSparseFloatVector
PMLLaplaceSampler
PMLSampler
AWDProactiveModelFittingSparseFloatMatrix
PMLImmutableLogisticRegressionModel
AWDProactiveModelFittingQuantizedSparseMatrix
PMLPlistAndChunksSerializableProtocol
PMLMobileAssetParameterGetStrategy
PMLChunkToVec
PMLPlistAndChunksSerialization
PMLMultiLabelLogisticRegressionModel
PMLMultiLabelClassifierModelProtocol
PMLClassificationEvaluationMetrics
AWDProactiveModelFittingModelInfo
PMLDenseVector
NSMutableCopying
PMLMutableDenseVector
AWDProactiveModelFittingEvalMetrics
PMLSparseMatrix
AWDProactiveModelFittingSession
AWDProactiveModelFittingLabelSupportPair
PMLLogisticRegressionModel
PMLGaussianSampler
PMLModelRegressor
PMLHashingVectorizer
PMLTransformerProtocol
PMLDenseMatrix
PMLSessionDescriptor
AWDProactiveModelFittingQuantizedDenseVector
PMLDataChunk
PMLDataChunkDenseDoubleVector
PMLDataChunkDenseFloatVector
PMLDataChunkPlist
PMLDataChunkRaw
AWDProactiveModelFittingMinibatchStats
PMLEspressoTrainingVariables
PMLModelWeights
AWDProactiveModelFittingParsecFeedbackEnvelope
PMLLexicon
PMLSparseVector
AWDProactiveModelFittingPrecisionAtKPair
PMLPlistClassWrapper
AWDProactiveModelFittingLogRegGradient
hash
TQ,R
superclass
T#,R
description
T@"NSString",R,C
debugDescription
_espressoModel
_espressoPlan
_espressoContext
_outputNumReplyClasses
_inputNumParameters
outputDimension
predict:
isEqual:
class
self
performSelector:
performSelector:withObject:
performSelector:withObject:withObject:
isProxy
isKindOfClass:
isMemberOfClass:
conformsToProtocol:
respondsToSelector:
retain
release
autorelease
retainCount
zone
dealloc
initWithEspressoContext:espressoPlan:espressoModel:inputNumParameters:outputNumReplyClasses:
addObject:
numberWithFloat:
cStringUsingEncoding:
makeStringForShape:
getNumParametersFromShape:rank:
classifierWithEspressoModelFile:
UTF8String
appendFormat:
appendString:
TB,N
TQ,N,V_timestamp
TB,R,N
T@"AWDProactiveModelFittingModelInfo",&,N,V_modelInfo
T@"AWDProactiveModelFittingMinibatchStats",&,N,V_minibatchStats
T@"AWDProactiveModelFittingEvalMetrics",&,N,V_evaluationMetrics
T@"NSMutableArray",&,N,V_precisionAtKs
_timestamp
_evaluationMetrics
_minibatchStats
_modelInfo
_precisionAtKs
_has
copyWithZone:
setTimestamp:
setHasTimestamp:
hasTimestamp
hasModelInfo
hasMinibatchStats
hasEvaluationMetrics
clearPrecisionAtKs
addPrecisionAtK:
precisionAtKsCount
precisionAtKAtIndex:
dictionaryRepresentation
readFrom:
writeTo:
copyTo:
mergeFrom:
timestamp
modelInfo
setModelInfo:
minibatchStats
setMinibatchStats:
evaluationMetrics
setEvaluationMetrics:
precisionAtKs
setPrecisionAtKs:
.cxx_destruct
countByEnumeratingWithState:objects:count:
allocWithZone:
initWithCapacity:
setObject:forKey:
numberWithUnsignedLongLong:
dictionary
stringWithFormat:
objectAtIndex:
removeAllObjects
precisionAtKType
T@"AWDProactiveModelFittingSparseFloatVector",&,N,V_sparseFloatWeights
T@"AWDProactiveModelFittingQuantizedSparseVector",&,N,V_sparseQuantizedWeights
Tf,N,V_weightsScaleFactor
Tf,N,V_weightsL2norm
T@"AWDProactiveModelFittingQuantizedDenseVector",&,N,V_denseQuantizedWeights
_denseQuantizedWeights
_sparseFloatWeights
_sparseQuantizedWeights
_weightsL2norm
_weightsScaleFactor
hasSparseFloatWeights
hasSparseQuantizedWeights
setWeightsScaleFactor:
setHasWeightsScaleFactor:
hasWeightsScaleFactor
setWeightsL2norm:
setHasWeightsL2norm:
hasWeightsL2norm
hasDenseQuantizedWeights
sparseFloatWeights
setSparseFloatWeights:
sparseQuantizedWeights
setSparseQuantizedWeights:
weightsScaleFactor
weightsL2norm
denseQuantizedWeights
setDenseQuantizedWeights:
T@"PMLMutableDenseVector",R,N,V_gradient
T@"NSNumber",R,N,V_loss
_gradient
_loss
initWithGradient:loss:
gradient
loss
init
handleFailureInMethod:object:file:lineNumber:description:
currentHandler
T@"PMLModelWeights",&,N,V_weights
T@"PMLSparseMatrix",&,N,V_covariates
T@"PMLModelRegressor",&,N,V_objective
TB,N,V_intercept
_learningRate
_stoppingThreshold
_minIterations
_gradientCalculator
_predictionCalculator
_batchPredictionCalculator
_intercept
_weights
_covariates
_objective
initWithLearningRate:minIterations:stoppingThreshold:weights:intercept:gradientCalculator:predictionCalculator:batchPredictionCalculator:
solve
computeAvgGradientWithIterations:
setCovariates:
solveWithAvgGradient:maxNumberOfIterations:
batchPredict:
solveForCovariates:objectives:
weights
setWeights:
covariates
objective
setObjective:
intercept
setIntercept:
numberWithDouble:
T@"AWDProactiveModelFittingSparseFloatVector",&,N,V_sparseFloatFeatures
T@"AWDProactiveModelFittingQuantizedSparseVector",&,N,V_sparseQuantizedFeatures
Tf,N,V_featuresScaleFactor
Tf,N,V_featuresL2norm
_featuresL2norm
_featuresScaleFactor
_sparseFloatFeatures
_sparseQuantizedFeatures
hasSparseFloatFeatures
hasSparseQuantizedFeatures
setFeaturesScaleFactor:
setHasFeaturesScaleFactor:
hasFeaturesScaleFactor
setFeaturesL2norm:
setHasFeaturesL2norm:
hasFeaturesL2norm
sparseFloatFeatures
setSparseFloatFeatures:
sparseQuantizedFeatures
setSparseQuantizedFeatures:
featuresScaleFactor
featuresL2norm
TQ,R,N
T^I,R,N
TI,N,V_length
Tf,N,V_minValue
Tf,N,V_bucketSize
_indices
_values
_bucketSize
_length
_minValue
indicesCount
indices
clearIndices
addIndices:
indicesAtIndex:
setIndices:count:
valuesCount
values
clearValues
addValues:
valuesAtIndex:
setValues:count:
setLength:
setHasLength:
hasLength
setMinValue:
setHasMinValue:
hasMinValue
setBucketSize:
setHasBucketSize:
hasBucketSize
length
minValue
bucketSize
numberWithUnsignedInt:
raise
exceptionWithName:reason:userInfo:
T@"AWDProactiveModelFittingMinibatchStats",&,N,V_stats
_stats
hasStats
stats
setStats:
T@"AWDProactiveModelFittingSparseFloatMatrix",&,N,V_sparseFloatFeatureMatrix
T@"AWDProactiveModelFittingQuantizedSparseMatrix",&,N,V_sparseQuantizedFeatureMatrix
Tf,N,V_featureMatrixScaleFactor
Tf,N,V_featureMatrixL2norm
_featureMatrixL2norm
_featureMatrixScaleFactor
_sparseFloatFeatureMatrix
_sparseQuantizedFeatureMatrix
hasSparseFloatFeatureMatrix
hasSparseQuantizedFeatureMatrix
setFeatureMatrixScaleFactor:
setHasFeatureMatrixScaleFactor:
hasFeatureMatrixScaleFactor
setFeatureMatrixL2norm:
setHasFeatureMatrixL2norm:
hasFeatureMatrixL2norm
sparseFloatFeatureMatrix
setSparseFloatFeatureMatrix:
sparseQuantizedFeatureMatrix
setSparseQuantizedFeatureMatrix:
featureMatrixScaleFactor
featureMatrixL2norm
T^Q,R,N
T^f,R,N
TQ,N,V_length
_rng
_magnitude
initWithMagnitude:
sample
initWithMagnitude:seed:
TQ,N,V_columnLength
TQ,N,V_rowLength
_columnIndices
_rowIndices
_columnLength
_rowLength
columnIndicesCount
columnIndices
clearColumnIndices
addColumnIndices:
columnIndicesAtIndex:
setColumnIndices:count:
setColumnLength:
setHasColumnLength:
hasColumnLength
rowIndicesCount
rowIndices
clearRowIndices
addRowIndices:
rowIndicesAtIndex:
setRowIndices:count:
setRowLength:
setHasRowLength:
hasRowLength
columnLength
rowLength
_backingObject
initWithWeights:intercept:
initWithChunk:intercept:
initWithFloatsNoCopy:count:intercept:
toChunk
arrayWithObjects:count:
TI,N,V_columnLength
TI,N,V_rowLength
toPlistWithChunks:
initWithPlist:chunks:context:
objectForKeyedSubscript:
numberWithBool:
boolValue
writeToFile:atomically:
floatValue
numberWithUnsignedInteger:
lastObject
numberWithInt:
dictionaryWithObjects:forKeys:count:
initFromDictionary:
toDictionary
toVec
objectAtIndexedSubscript:
migrateDenseDoubleVectorToDenseFloatVector:
unsignedIntegerValue
_models
initWithWeightsArray:andIntercept:
initWithModels:
serialize
firstObject
precision:predictions:predicate:
recall:predictions:predicate:
f1Score:predictions:predicate:
truePositives:predictions:predicate:
falsePositives:predictions:predicate:
trueNegatives:predictions:predicate:
falseNegatives:predictions:predicate:
addScoresForOutcomes:predictions:predicate:metrics:
roundFloatToSigFigs:sigFigs:
setReportSamplingRate:
isEqualToString:
processName
processInfo
T@"NSString",&,N,V_name
T@"NSString",&,N,V_version
T@"NSString",&,N,V_locale
_locale
_name
_version
hasName
hasVersion
hasLocale
name
setName:
version
setVersion:
locale
setLocale:
Tr^f,R,N
T@"NSData",R,N
_data
mutableCopyWithZone:
count
data
initWithCount:
initWithFloats:count:
initWithFloatsNoCopy:count:freeWhenDone:
initWithFloatsNoCopy:count:deallocator:
initWithData:
initWithNumbers:
sliceFrom:to:
vecByAppendingVec:
cosineDistanceFrom:
l1norm
l2norm
maxValue
density
enumerateValuesWithBlock:
enumerateNonZeroValuesWithBlock:
valueAt:
T@"NSMutableData",R,N,V_mutableData
_mutableData
mutablePtr
initWithMutableData:
append:
append:count:
processValuesInPlaceWithBlock:
scaleInPlaceWithInversedFactor:
scaleInPlaceWithFactor:
sumInPlaceWithVector:
mutableData
appendBytes:length:
bytes
appendData:
mutableBytes
initWithLength:
mutableCopy
initWithBytesNoCopy:length:deallocator:
initWithBytesNoCopy:length:freeWhenDone:
initWithBytes:length:
denseVectorFromNumbers:
Tf,N,V_rmse
Tf,N,V_f1
TQ,N,V_truePositives
TQ,N,V_trueNegatives
TQ,N,V_falsePositives
TQ,N,V_falseNegatives
Tf,N,V_secsToExecute
_negativeScores
_positiveScores
_falseNegatives
_falsePositives
_trueNegatives
_truePositives
_rmse
_secsToExecute
setRmse:
setHasRmse:
hasRmse
setF1:
setHasF1:
hasF1
setTruePositives:
setHasTruePositives:
hasTruePositives
setTrueNegatives:
setHasTrueNegatives:
hasTrueNegatives
setFalsePositives:
setHasFalsePositives:
hasFalsePositives
setFalseNegatives:
setHasFalseNegatives:
hasFalseNegatives
positiveScoresCount
positiveScores
clearPositiveScores
addPositiveScores:
positiveScoresAtIndex:
setPositiveScores:count:
negativeScoresCount
negativeScores
clearNegativeScores
addNegativeScores:
negativeScoresAtIndex:
setNegativeScores:count:
setSecsToExecute:
setHasSecsToExecute:
hasSecsToExecute
rmse
truePositives
trueNegatives
falsePositives
falseNegatives
secsToExecute
TB,N,V_isSymmetric
T^{sparse_m_float=},N,V_matrix
_isSymmetric
_matrix
initWithSparseMatrix:
numberOfRows
numberOfColumns
setMatrix:
setIsSymmetric:
valueAtRow:column:
_enumerateSparseRowsWithBlock:
enumerateNonZeroValuesForRow:withBlock:
matrixWithConstantColumn
isSymmetric
matrix
sparseMatrixWithNumberOfRows:numberOfColumns:
sparseMatrixFromNumbers:
TQ,N,V_label
TQ,N,V_supervisionType
Tf,N,V_confidenceScore
_label
_supervisionType
_confidenceScore
setLabel:
setHasLabel:
hasLabel
setSupervisionType:
setHasSupervisionType:
hasSupervisionType
setConfidenceScore:
setHasConfidenceScore:
hasConfidenceScore
label
supervisionType
confidenceScore
Tf,N,V_support
_support
setSupport:
setHasSupport:
hasSupport
support
_solver
initWithSolver:
solverWithWeights:andIntercept:
solverWithWeights:
solverWithWeights:andIntercept:learningRate:minIterations:stoppingThreshold:
solverWithWeights:andIntercept:learningRate:minIterations:stoppingThreshold:l2RegularizationRate:
solverWithWeights:andIntercept:learningRate:minIterations:stoppingThreshold:regularizationStrategy:regularizationRate:l1Ratio:
withWeights:
withWeights:andIntercept:
Ti,R,N
denseVector
initModelRegressorFromFloats:
initWithRegressorFromFloat:
regressorFor:
inverseValues
modelRegressorFromFloat:
modelRegressorFromFloats:
regressorVectorFrom:
_buckets
_characterNGramRange
_tokenNGramRange
_shouldNormalizeTokens
_shouldNormalizeCharacters
_localeForNonwordTokens
_tokenizeNewlines
_idVectorLength
_extraIdOptions
_vectorizerStrategy
_vectorNormalization
_paddingId
_endId
transform:
initWithBucketSize:ngrams:localeForNonwordTokens:tokenizeNewlines:
initWithBucketSize:characterNGramRange:tokenNGramRange:shouldNormalizeTokens:shouldNormalizeCharacters:localeForNonwordTokens:tokenizeNewlines:idVectorLength:extraIdOptions:vectorizerStrategy:vectorNormalization:
setVectorizerNormalization:
transformWithFrequency:shouldDecrement:
transformSequentialNGrams:
transformBagOfIds:shouldDecrement:
transformBatch:
isEqualToHashingVectorizer:
localeWithLocaleIdentifier:
intValue
setObject:forKeyedSubscript:
localeIdentifier
numberWithInteger:
getCharacters:range:
withBucketSize:andNgramOrder:
withBucketSize:andCharNgramOrder:
withBucketSize:andNgrams:
withBucketSize:ngrams:localeForNonwordTokens:tokenizeNewlines:
withBucketSize:characterNGramRange:tokenNGramRange:shouldNormalizeTokens:shouldNormalizeCharacters:localeForNonwordTokens:tokenizeNewlines:idVectorLength:extraIdOptions:vectorizerStrategy:vectorNormalization:
withBucketSize:characterNGramRange:tokenNGramRange:shouldNormalizeTokens:shouldNormalizeCharacters:localeForNonwordTokens:tokenizeNewlines:
withBucketSize:characterNGramRange:tokenNGramRange:shouldNormalizeTokens:shouldNormalizeCharacters:
TQ,R,N,V_numberOfRows
TQ,R,N,V_numberOfColumns
_numberOfRows
_numberOfColumns
initWithData:numberOfRows:numberOfColumns:
denseMatrixFromData:numberOfRows:numberOfColumns:
denseMatrixFromNumbers:
T@"NSString",R,N,V_name
T@"NSString",R,N,V_version
Tf,R,N,V_featureVersion
T@"NSString",R,N,V_locale
_featureVersion
initWithName:version:locale:
_parseFeatureVersion:descriptor:
subSessionDescriptorForLabel:
baseSessionDescriptor
isSubSessionDescriptor
subSessionLabel
featureVersion
initWithFormat:
descriptorForName:version:locale:
integerValue
substringWithRange:
rangeAtIndex:
firstMatchInString:options:range:
regularExpressionWithPattern:options:error:
numberOfMatchesInString:options:range:
stringByReplacingMatchesInString:options:range:withTemplate:
numberOfRanges
raise:format:
pattern
matchesInString:options:range:
_backingData
_superdata
setSuperdata:
isEqualToData:
dataChunkType
chunkOfType:data:superdata:
chunksFromFileAtPath:
chunksFromData:
serializeChunks:
initWithContentsOfFile:options:error:
Tr^d,R,N
vector
chunkWithVector:count:
T@,R,N
_plist
_parsed
plist
propertyListWithData:options:format:error:
chunkWithPlist:
dataWithPropertyList:format:options:error:
chunkWithData:
TQ,N,V_batchSize
T@"NSMutableArray",&,N,V_perLabelSupports
_batchSize
_perLabelSupports
setBatchSize:
setHasBatchSize:
hasBatchSize
clearPerLabelSupports
addPerLabelSupport:
perLabelSupportsCount
perLabelSupportAtIndex:
batchSize
perLabelSupports
setPerLabelSupports:
perLabelSupportType
T@"NSURL",R,N,V_trainingNetworkPath
T@"NSString",R,N,V_inputName
TQ,R,N,V_inputDim
T@"NSString",R,N,V_outputName
T@"NSString",R,N,V_trueLabelName
T@"NSString",R,N,V_lossValueName
T@"NSString",R,N,V_trainingOutputName
T@"NSString",R,N,V_trainingControlVariableName
T@"NSString",R,N,V_initializerName
T@"NSArray",R,N,V_globalsToGetGradientsFor
T@"NSArray",R,N,V_layerWeightsToGetGradientsFor
T@"NSArray",R,N,V_layerBiasesToGetGradientsFor
_initializedWithNSData
_trainingNetworkPath
_inputName
_inputDim
_outputName
_trueLabelName
_lossValueName
_trainingOutputName
_trainingControlVariableName
_initializerName
_globalsToGetGradientsFor
_layerWeightsToGetGradientsFor
_layerBiasesToGetGradientsFor
initWithTrainingNetworkPath:inputName:inputDim:outputName:trueLabelName:lossValueName:trainingOutputName:trainingControlVariableName:initializerName:globalsToGetGradientsFor:layerWeightsToGetGradientsFor:layerBiasesToGetGradientsFor:
isEqualToEspressoTrainingVariables:
trainingNetworkPath
inputName
inputDim
outputName
trueLabelName
lossValueName
trainingOutputName
trainingControlVariableName
initializerName
globalsToGetGradientsFor
layerWeightsToGetGradientsFor
layerBiasesToGetGradientsFor
dataWithContentsOfFile:
absoluteString
isReadableFileAtPath:
path
defaultManager
initModelWeightsFromFloats:
asMutableDenseVector
weightsByAppendingWeights:
copy
modelWeightsFromFloats:
modelWeightsOfLength:rng:
modelWeightsOfLength:
modelWeightsOfLength:rngSeed:
zeroWeightsOfLength:
constWeightsOfLength:value:
weightsFromNumbers:
initWithSeed:
next
T@"AWDProactiveModelFittingEvaluation",&,N,V_evaluation
T@"AWDProactiveModelFittingLogRegWeights",&,N,V_logRegWeights
T@"AWDProactiveModelFittingLogRegGradient",&,N,V_logRegGradient
T@"AWDProactiveModelFittingLinRegFeatureMatrix",&,N,V_linRegFeatureMatrix
T@"AWDProactiveModelFittingLinRegObjectiveFeatures",&,N,V_linRegObjectiveFeatures
_evaluation
_linRegFeatureMatrix
_linRegObjectiveFeatures
_logRegGradient
_logRegWeights
hasEvaluation
hasLogRegWeights
hasLogRegGradient
hasLinRegFeatureMatrix
hasLinRegObjectiveFeatures
evaluation
setEvaluation:
logRegWeights
setLogRegWeights:
logRegGradient
setLogRegGradient:
linRegFeatureMatrix
setLinRegFeatureMatrix:
linRegObjectiveFeatures
setLinRegObjectiveFeatures:
_lexicon
initWithPath:
getWordIDforToken:
getTotalEntries
runBlockWithTrie:
payloadForString:
fileSize
attributesOfItemAtPath:error:
fileExistsAtPath:
serializeLexiconToFile:tokenToWordIDDict:
enumerateKeysAndObjectsUsingBlock:
TQ,N,V_numberOfNonZeroValues
T^q,N,V_sparseIndices
T^f,N,V_sparseValues
TQ,R,N,V_length
_numberOfNonZeroValues
_sparseIndices
_sparseValues
initWithLength:numberOfNonZeroValues:indicesData:valuesData:
initWithLength:numberOfNonZeroValues:indices:values:
indicesData
valuesData
indicesAsUInt16Data
quantizedValuesAsUInt8DataWithMin:max:
maxAbsValue
applyOneHotNormalization
scaleWithVectorNormalization:
setNumberOfNonZeroValues:
setSparseValues:
setSparseIndices:
processNonZeroValuesInPlaceWithBlock:
sparseVectorToDense:length:
convertToBagOfIds
addEndId:paddingId:withMaxVectorLength:
valueAtIndex:
vectorWithConstantColumn
numberOfNonZeroValues
sparseIndices
sparseValues
sparseVectorWithLength:numberOfNonZeroValues:isSparseIndexInt64:sparseIndices:sparseValues:toDenseValues:withLength:
dataWithBytesNoCopy:length:freeWhenDone:
sparseVectorFromDense:length:
sparseVectorFromDense:
sparseVectorEmptyWithLength:
sparseVectorWithLength:numberOfNonZeroValues:block:
sparseVectorFromNumbers:
sparseVectorFromNumbers:indices:length:
TQ,N,V_k
Tf,N,V_precision
_precision
setK:
setHasK:
hasK
setPrecision:
setHasPrecision:
hasPrecision
precision
_classNameKey
initWithClassNameKey:
writeToPlistWithObject:andChunks:
readObjectWithPlist:chunks:context:
writeToDataWithObject:andChunks:
readObjectWithData:chunks:context:
addEntriesFromDictionary:
T@"AWDProactiveModelFittingSparseFloatVector",&,N,V_sparseFloatGradient
TQ,N,V_iteration
T@"AWDProactiveModelFittingQuantizedSparseVector",&,N,V_sparseQuantizedGradient
Tf,N,V_gradientScaleFactor
Tf,N,V_gradientL2norm
T@"AWDProactiveModelFittingQuantizedDenseVector",&,N,V_denseQuantizedGradient
_iteration
_denseQuantizedGradient
_gradientL2norm
_gradientScaleFactor
_sparseFloatGradient
_sparseQuantizedGradient
hasSparseFloatGradient
setIteration:
setHasIteration:
hasIteration
hasSparseQuantizedGradient
setGradientScaleFactor:
setHasGradientScaleFactor:
hasGradientScaleFactor
setGradientL2norm:
setHasGradientL2norm:
hasGradientL2norm
hasDenseQuantizedGradient
sparseFloatGradient
setSparseFloatGradient:
iteration
sparseQuantizedGradient
setSparseQuantizedGradient:
gradientScaleFactor
gradientL2norm
denseQuantizedGradient
setDenseQuantizedGradient:
{?="plan"^v"network_index"i}
Q16@0:8
@"NSArray"24@0:8@"PMLSparseVector"16
@24@0:8@16
B24@0:8@16
#16@0:8
@16@0:8
@24@0:8:16
@32@0:8:16@24
@40@0:8:16@24@32
B16@0:8
B24@0:8#16
B24@0:8@"Protocol"16
B24@0:8:16
Vv16@0:8
^{_NSZone=}16@0:8
@"NSString"16@0:8
v16@0:8
@64@0:8^v16^v24{?=^vi}32Q48Q56
@24@0:8[10Q]16
Q32@0:8[10Q]16Q24
@"AWDProactiveModelFittingEvalMetrics"
@"AWDProactiveModelFittingMinibatchStats"
@"AWDProactiveModelFittingModelInfo"
@"NSMutableArray"
{?="timestamp"b1}
@24@0:8^{_NSZone=}16
v24@0:8Q16
v20@0:8B16
v24@0:8@16
@24@0:8Q16
@"AWDProactiveModelFittingQuantizedDenseVector"
@"AWDProactiveModelFittingSparseFloatVector"
@"AWDProactiveModelFittingQuantizedSparseVector"
{?="timestamp"b1"weightsL2norm"b1"weightsScaleFactor"b1}
v20@0:8f16
f16@0:8
@"PMLMutableDenseVector"
@"NSNumber"
@32@0:8@16@24
@"PMLModelWeights"
@"PMLSparseMatrix"
@"PMLModelRegressor"
@68@0:8f16Q20f28@32B40@?44@?52@?60
@32@0:8^f16Q24
f24@0:8@16
v32@0:8@16@24
{?="timestamp"b1"featuresL2norm"b1"featuresScaleFactor"b1}
{?="list"^I"count"Q"size"Q}
{?="bucketSize"b1"length"b1"minValue"b1}
^I16@0:8
v20@0:8I16
I24@0:8Q16
v32@0:8^I16Q24
I16@0:8
@"AWDProactiveModelFittingSparseFloatMatrix"
@"AWDProactiveModelFittingQuantizedSparseMatrix"
{?="timestamp"b1"featureMatrixL2norm"b1"featureMatrixScaleFactor"b1}
{?="list"^Q"count"Q"size"Q}
{?="list"^f"count"Q"size"Q}
{?="length"b1}
^Q16@0:8
Q24@0:8Q16
v32@0:8^Q16Q24
^f16@0:8
f24@0:8Q16
v32@0:8^f16Q24
{?="s"[2Q]}
@20@0:8f16
@28@0:8f16Q20
{?="columnLength"b1"rowLength"b1}
@28@0:8@16B24
@32@0:8r^f16i24B28
{?="bucketSize"b1"columnLength"b1"minValue"b1"rowLength"b1}
@24@0:8@"NSMutableArray"16
@40@0:8@16@"NSArray"24@"NSDictionary"32
@40@0:8@16@24@32
@"NSArray"
@28@0:8@"NSArray"16B24
f40@0:8@16@24@?32
Q40@0:8@16@24@?32
v48@0:8@16@24@?32@40
f24@0:8f16i20
@"NSString"
@"NSMutableData"
r^f16@0:8
@32@0:8r^f16Q24
@36@0:8^f16Q24B32
@40@0:8^f16Q24@?32
@24@0:8i16i20
v24@0:8@?16
v32@0:8r^f16Q24
{?="falseNegatives"b1"falsePositives"b1"trueNegatives"b1"truePositives"b1"f1"b1"rmse"b1"secsToExecute"b1}
^{sparse_m_float=}
@24@0:8^{sparse_m_float=}16
v24@0:8^{sparse_m_float=}16
f32@0:8Q16Q24
v32@0:8Q16@?24
^{sparse_m_float=}16@0:8
@32@0:8Q16Q24
{?="label"b1"supervisionType"b1"timestamp"b1"confidenceScore"b1}
{?="label"b1"support"b1}
@"PMLGradientSolver"
@44@0:8@16B24f28Q32f40
@48@0:8@16B24f28Q32f40f44
@60@0:8@16B24f28Q32f40Q44f52f56
@"PMLDenseVector"
@20@0:8i16
i16@0:8
{_NSRange="location"Q"length"Q}
@"NSLocale"
@36@0:8i16i20@24B32
@104@0:8i16{_NSRange=QQ}20{_NSRange=QQ}36B52B56@60B68Q72Q80Q88q96
v24@0:8q16
@72@0:8i16{_NSRange=QQ}20{_NSRange=QQ}36B52B56@60B68
@60@0:8i16{_NSRange=QQ}20{_NSRange=QQ}36B52B56
@40@0:8@16Q24Q32
f32@0:8@16@24
{?="bucketSize"b1"minValue"b1}
@"NSData"
@36@0:8I16@20@28
r^d16@0:8
@28@0:8r^d16i24
@28@0:8r^f16i24
{?="batchSize"b1"support"b1}
@"NSURL"
@112@0:8@16@24Q32@40@48@56@64@72@80@88@96@104
@28@0:8i16@20
@28@0:8i16Q20
@24@0:8i16f20
@"AWDProactiveModelFittingEvaluation"
@"AWDProactiveModelFittingLinRegFeatureMatrix"
@"AWDProactiveModelFittingLinRegObjectiveFeatures"
@"AWDProactiveModelFittingLogRegGradient"
@"AWDProactiveModelFittingLogRegWeights"
@"_PASCFBurstTrie"
Q24@0:8@16
B32@0:8@16@24
@48@0:8Q16Q24@32@40
@48@0:8Q16Q24^q32^f40
@24@0:8f16f20
v24@0:8^f16
v24@0:8^q16
v40@0:8q16q24Q32
^q16@0:8
@40@0:8Q16Q24@?32
v68@0:8Q16Q24B32r^v36r^f44^f52Q60
@40@0:8@16@24Q32
{?="k"b1"precision"b1}
{?="iteration"b1"timestamp"b1"gradientL2norm"b1"gradientScaleFactor"b1}
