@(#)PROGRAM:ShazamInsights  PROJECT:ShazamKit-163.4
Unknown database type %@, assuming it is tracks
Failed to open database for metadata with error %@
Unreadable metadata, failing
Error reading metadata %@
Error updating metadata %@
Failed to turn on cell_size_check %@
Failed to run quick check %@
Invalid character in geohash %@: %c
Failed to check database load status %@
%@ was not loaded when we tried to access it, attempting to return default...
NO DEFAULT SUPPLIED for %@
Failed to fetch key %@ from bag with error %@, using default
Failed to fetch key %@ from bag with error %@, NO DEFAULT SUPPLIED
Failed to convert string %@, to number using default
Failed to convert string %@, to number using default, NO DEFAULT SUPPLIED
Network call: %@ failed with bad server response: %@
Fetching insights configuration...
Failed to load insights configuration %@, using defaults
Cluster data already loaded
Failed to load the datastore %@
Failed to open database for artist query %@
Failed to perform artists query %@
Failed get a trackID from tracks query
Failed to query database %@
Failed to delete existing database %@
Failed to move database into place %@
Etag missing for request to %@, replacing with random hash
tracks
artists
select type, storefront, hash, creationDate from Metadata LIMIT 1
v16@?0^{sqlite3_stmt=}8
Failed to read the database metadata
Unknown Error
INSERT into Metadata(type, hash, storefront, creationDate) VALUES(?,?,?,?)
Metadata
UPDATE Metadata set type = ?, hash = ?, storefront = ?, creationDate = ?
v24@?0@"SHDataFetcherFileInfo"8@"NSError"16
v16@?0@"SHInsightsConfiguration"8
geoHashSuffixes
geoHash
trackPool
geoHashTrackPools
%@%@
INSIGHTS_CUSTOM
PRAGMA cell_size_check=ON
PRAGMA quick_check
SELECT COUNT(*) FROM %@
BEGIN
COMMIT
0123456789bcdefghjkmnpqrstuvwxyz
Invalid object in catalog %@
v8@?0
v24@?0@"SHClusterSQLiteDataStore"8@"NSError"16
v24@?0@"SHClusterController"8@"NSError"16
v32@?0@"SHInsightsConfiguration"8@"NSString"16@"NSError"24
Cohesion
{deviceid}
{sessionid}
{language}
{storefront}
{shazamid}
{itsct}
{year}
{weekOfYear}
{geohash}
https
lzma
com.apple.shazamcatalog
v28@?0@"NSDictionary"8B16@"NSError"20
%@/%@
@"AMSPromise"16@?0@"NSString"8
Failed to fetch key %@ with error %@
v32@?0@"NSData"8@"NSURLResponse"16@"NSError"24
v32@?0@"NSURL"8@"NSURLResponse"16@"NSError"24
Shazam
shazam-insights
baseURL
geocharts/path
geocharts/minGeohashLength
geocharts/maxGeohashLength
targeting/path
targeting/enabled
targeting/updateInterval
tracks/path
tracks/enabled
tracks/maxAgeInSeconds
artists/path
artists/enabled
artists/maxAgeInSeconds
v16@?0@"NSError"8
v40@?0@"NSURL"8@"NSString"16d24@"NSError"32
CREATE TABLE if not exists Cohesion(id INTEGER PRIMARY KEY, high INTEGER, medium INTEGER, low INTEGER, CONSTRAINT constraint_name UNIQUE(low, medium, high) ON CONFLICT IGNORE)
CREATE TABLE if not exists MediaItems(sh_appleMusicID VARCHAR, cohesion INTEGER, FOREIGN KEY(cohesion) REFERENCES Cohesion(id))
CREATE TABLE if not exists Metadata(type VARCHAR, hash VARCHAR, storefront VARCHAR, creationDate DATE)
INSERT INTO Cohesion (low, medium, high) VALUES (?, ?, ?) returning id
INSERT INTO MediaItems (sh_appleMusicID, cohesion) VALUES (?, ?);
v40@?0@"NSString"8@"NSString"16@"NSString"24@"NSArray"32
PRAGMA table_info('MediaItems')
select %@ from MediaItems where cohesion = (select cohesion from MediaItems where %@ = <MEDIA_NAME> COLLATE %@) and %@ != <MEDIA_NAME2> COLLATE %@
<MEDIA_NAME>
<MEDIA_NAME2>
select %@ from MediaItems where %@ COLLATE %@ in (<MEDIA_IDS>)
<MEDIA_IDS>
select %@ from MediaItems t1, Cohesion c1 INNER JOIN (select  c2.high, c2.medium, c2.low from MediaItems t2, Cohesion c2 where t2.%@ in (<SEED_MEDIA_IDS>) AND t2.cohesion = c2.id order by %@) as s1 ON s1.low = c1.low
 AND s1.medium = c1.medium
 AND s1.high = c1.high AND s1.medium = c1.medium
 where t1.%@ in (<QUERY_MEDIA_IDS>) AND t1.cohesion = c1.id order by %@
<SEED_MEDIA_IDS>
<QUERY_MEDIA_IDS>
core
com.apple.ShazamKit
com.apple.ShazamInsightsDataFetcher
com.apple.ShazamInsights
There was a problem fetching the data
The requested data was not found, please amend your query
The data was found but it was invalid
%@_temp
unknown
Etag
If-None-Match
v32@?0@"NSHTTPURLResponse"8@"NSURL"16@"NSError"24
v32@?0@"NSHTTPURLResponse"8@"NSData"16@"NSError"24
clusters
%lu%@
SHTimeAndPlaceAffinityGroup
SHLocalDataFetcher
SHDataFetcher
NSObject
SHClusterMetadata
SHInsightsDataStreamOutput
SHInsightsDataStream
SHRegion
SHClusterMetadataQuery
SHClusterStatus
SHAffinityGroupQuery
SHMediaItemPropertyCollection
SHTimeAndPlaceServerResponseParser
SHClusterController
SHDataFetcherFileInfo
SHSQLiteUtils
Geohash
SHInsightsJSONLFileWriter
SHClusterLoaderRequest
SHClusterQuery
SHClusterSQLiteDataStore
SHTokenizedURL
NSCopying
Chunking
SHTimeAndPlaceController
SHInsightsDataCompression
SHBagContract
SHInsightsNetworkRequester
SHNetworkRequester
SHFileChecksum
SHInsightsConfiguration
SHClusterLoader
SHInsightsJSONLFileReader
SHJSONLClusterImporter
SHClusterImporter
SHClusterStatementRunner
SHAffinityGroup
SHInsightsError
Compression
SHInsightsJSONLDataDetokenizer
SHClusterImporterUtils
SHCDNDataFetcher
SHInsightsDataStreamInput
SHClusterJSONLReader
SHInsightsJSONLDataDetokenizerDelegate
SHSQLiteClusterImporter
init
regions
count
dictionaryWithCapacity:
countByEnumeratingWithState:objects:count:
geohash
setObject:forKeyedSubscript:
copy
array
hasPrefix:
addObject:
length
substringToIndex:
geohashKeyedRegions
objectForKeyedSubscript:
initWithRegions:affinityGroup:
regionsForGeohash:
affinityGroup
.cxx_destruct
_geohashKeyedRegions
_regions
_affinityGroup
T@"NSDictionary",R,N,V_geohashKeyedRegions
T@"NSArray",R,N,V_regions
T@"SHAffinityGroup",R,N,V_affinityGroup
defaultManager
path
fileExistsAtPath:
checksumForFile:withError:
isEqualToString:
errorWithDomain:code:userInfo:
initWithDataURL:
setStorefront:
date
setCreationDate:
setUniqueHash:
errorWithCode:underlyingError:
dataWithContentsOfURL:
isEqual:
class
self
performSelector:
performSelector:withObject:
performSelector:withObject:withObject:
isProxy
isKindOfClass:
isMemberOfClass:
conformsToProtocol:
respondsToSelector:
retain
release
autorelease
retainCount
zone
hash
superclass
description
debugDescription
TQ,R
T#,R
T@"NSString",R,C
fetchClusterURL:forCurrentStorefront:cachedUniqueHash:completionHandler:
clusterDataAtURL:forLocation:date:completionHandler:
initWithType:storefront:uniqueHash:creationDate:
uniqueHash
storefront
creationDate
clusterType
_uniqueHash
_storefront
_creationDate
_clusterType
T@"NSString",R,C,N,V_uniqueHash
T@"NSString",R,C,N,V_storefront
T@"NSDate",R,N,V_creationDate
Tq,R,N,V_clusterType
close
dealloc
outputStreamWithURL:append:
open
next
closeWithError:
outputStream
bytes
write:maxLength:
streamError
annotateClientError:withError:
processData:error:
setNext:
T@"<SHInsightsDataStream>",&,N
initWithDestination:
setOutputStream:
_next
_outputStream
T@"NSOutputStream",&,N,V_outputStream
T@"<SHInsightsDataStream>",&,N,V_next
initWithGeohash:
initWithLocation:
location
_geohash
_location
T@"NSString",R,C,N,V_geohash
T@"CLLocation",R,N,V_location
stringFromStoreType:
setFormatOptions:
openDatabase:atURL:error:
dateFormatter
dateFromString:
dataStoreTypeFromString:
runSQL:onDatabase:replacingTokens:withObjects:rowHandler:error:
dictionaryWithObjects:forKeys:count:
errorWithCode:underlyingError:keyOverrides:
closeDatabase:error:
createDatabase:atURL:error:
database:hasPopulatedTable:error:
cStringUsingEncoding:
stringFromDate:
stringWithCString:encoding:
metadataFromDatabaseAtLocation:error:
writeMetadata:toDatabaseAtLocation:error:
metadata
loadStatus
setLoadStatus:
isDataValid
setIsDataValid:
dataURL
setDataURL:
setMetadata:
_isDataValid
_loadStatus
_dataURL
_metadata
T@"NSURL",&,N,V_dataURL
Tq,N,V_loadStatus
TB,N,V_isDataValid
T@"SHClusterMetadata",&,N,V_metadata
T@"NSString",R,C,N
T@"NSDate",R,N
Tq,R,N
minGeoChartsGeohashLength
sh_geohashOfLength:
geoChartsEndpointForDate:geoHash:
dataFetcherForSourceURL:
data
affinityGroupsFromData:atLocation:onDate:completionHandler:
fetchSharedInstanceWithCompletion:
affinityGroupsForLocation:atDate:completionHandler:
initWithArray:representingProperty:
setWithArray:
collectionWithArray:representingProperty:
collection
property
_collection
_property
T@"NSSet",R,N,V_collection
T@"NSString",R,N,V_property
JSONObjectWithData:options:error:
initWithType:cohesionLevel:
mediaItemWithProperties:
appendMediaItem:
stringWithFormat:
regionAffinityGroupsFromServerData:error:
databaseFilePathURL
initWithDatabaseURL:
dataStore
dataStatus
query
mediaItemsSimilarToMediaItemValue:forKey:error:
allObjects
mediaItemsFromPropertyCollection:error:
affinityGroupsAtCohesionLevel:forQuery:queryCollection:filteredBy:
filterQueryCollection:byItemsWithinCluster:
mutableCopy
mediaItems
appleMusicID
removeObject:
mediaItemsAtCohesionLevel:forQueryMediaIDs:filteredBySeedMediaIDs:error:
databaseURLForName:
cachesDirectory
URLByAppendingPathComponent:
URLByAppendingPathExtension:
artistClusterDefaultLocationURL
trackClusterDefaultLocationURL
initWithDataStore:
mediaItemsSimilarToValue:forKey:completionHandler:
mediaItemsForPropertyCollection:completionHandler:
resultsFromQueryBlock:completionHandler:
affinityGroupsFromQueryCollection:filteredBySeedCollection:completionHandler:
_query
_dataStore
T@"SHClusterStatementRunner",R,N,V_query
T@"SHClusterSQLiteDataStore",R,N,V_dataStore
isFileURL
lastPathComponent
initWithDataURL:suggestedFileName:
suggestedFileName
fileURLWithPath:
pathExtension
supportedCompressionTypeFromFilePathExtension:
URLWithString:
dataFilePathURL
initWithData:suggestedFileName:
compressionType
suggestedExtension
mimeType
setMimeType:
_data
_dataFilePathURL
_suggestedFileName
_mimeType
T@"NSURL",R,N,V_dataFilePathURL
T@"NSData",R,N,V_data
T@"NSString",R,C,N,V_suggestedFileName
Ti,R,N
T@"NSDate",&,N,V_creationDate
T@"NSString",C,N,V_storefront
T@"NSString",C,N,V_uniqueHash
T@"NSString",C,N,V_mimeType
absoluteString
defenseAgainstBadDatabase:
runNoResultSQL:onDatabase:error:
objectAtIndexedSubscript:
queryStringForCount:
replaceOccurrencesOfString:withString:options:range:
string
appendString:
startTransactionOnDatabase:
commitTransactionOnDatabase:
initWithBytes:length:encoding:
compare:options:
sh_geoHashToCoordinates:
coordinate
initWithCString:encoding:
UTF8String
sh_toGeohash
sh_roundCoordinateValuesToGeohashOfLength:
streamForWritingToURL:withCompression:
dataForJSONObject:error:
dataWithJSONObject:options:error:
appendData:
dataUsingEncoding:
annotateClientError:code:underlyingError:keyOverrides:
initForCompressionWithAlgorithm:
arrayWithObjects:count:
linkDataStream:
initWithDestination:compression:
writeObject:error:
destination
_destination
T@"NSURL",R,N,V_destination
T@"<SHInsightsDataStream>",R,N,V_outputStream
initWithType:sourceURL:outputURL:
sourceURL
type
tracksClusterEndpointForStorefront:
artistsClusterEndpoint
artistsCachedDataMaxAge
tracksCachedDataMaxAge
URLForRequestForStorefront:withCompletion:
initWithType:
shouldDeleteExistingDatabaseAtOutputURL
sourceURLWithCompletion:
clusterConfiguration:
outputURL
_sourceURL
_outputURL
_type
T@"NSURL",R,N,V_sourceURL
T@"NSURL",R,N,V_outputURL
Tq,R,N,V_type
TB,R,N
tracksCluster
artistsCluster
initWithType:sourceURL:destinationURL:
destinationURL
loadDataForRequest:completionHandler:
controllerForType:withCompletionHandler:
initWithClusterType:databaseMaxAge:forStorefront:databaseFilePathURL:
clusterForType:
filterMediaItemQueryCollection:bySeedCollection:completionHandler:
mediaItemsWithHighCohesionToValue:forProperty:completionHandler:
mediaItemsMatchingValuesInCollection:completionHandler:
statusWithCompletionHandler:
_destinationURL
T@"NSURL",R,N,V_destinationURL
databaseMaxAge
dateWithTimeIntervalSinceNow:
isDataLoaded
requiredStorefront
hasNotPassedExpiryDate:isForCountryCode:
laterDate:
sqliteDatabaseExistsAtURL:
_databaseMaxAge
_databaseFilePathURL
_requiredStorefront
T@"NSString",R,N,V_requiredStorefront
T@"SHClusterStatus",R,N
Td,R,N,V_databaseMaxAge
T@"NSURL",R,N,V_databaseFilePathURL
dictionary
originalURLPath
tokenForTokenType:
containsString:
tokenDictionary
setValue:forKey:
stringByReplacingOccurrencesOfString:withString:
containsTokens
host
tokenURLPath
setScheme:
setHost:
componentsSeparatedByString:
firstObject
setPath:
lastObject
setQuery:
URLRepresentation
allocWithZone:
copyWithZone:
initWithHost:URLPath:
mutableCopyWithZone:
setTokenDictionary:
initWithString:
updateToken:withValue:
setOriginalURLPath:
_host
_originalURLPath
_tokenDictionary
T@"NSString",C,N,V_host
T@"NSString",C,N,V_originalURLPath
T@"NSMutableDictionary",&,N,V_tokenDictionary
arrayWithCapacity:
subarrayWithRange:
sh_sliceIntoChunksOfMaximumSize:
maxGeoChartsGeohashLength
dataFetcher
_dataFetcher
T@"<SHDataFetcher>",R,N,V_dataFetcher
initWithOperation:algorithm:
setup
operation
algorithm
performOperation:withData:algorithm:flags:error:
dataWithBytes:length:
typeWithFilenameExtension:
preferredFilenameExtension
typeWithIdentifier:
conformsToType:
supportedCompressionTypeFromFileURL:
initForDecompressionWithAlgorithm:
stream
setOperation:
setAlgorithm:
_operation
_algorithm
_stream
T{?=*Q*Q^v},R,N,V_stream
Ti,N,V_operation
Ti,N,V_algorithm
setNumberStyle:
bagForProfile:profileVersion:
initWithBaseDictionaryKey:bag:
bagKeySet
profile
profileVersion
registerBagKeySet:forProfile:profileVersion:
baseDictionaryKey
dictionaryForKey:
valueWithCompletion:
mutableBagKeySet
unionBagKeySet:
addBagKey:valueType:defaultValue:
fullyQualifiedKey:
defaultValues
setObject:forKey:
integerForKey:
valueForKey:bagValue:
integerValue
stringForKey:
numberFromString:forKey:
promiseWithResult:
transformWithBlock:
doubleForKey:
doubleValue
boolForKey:
boolValue
numberWithBool:
isLoaded
defaultValueForKey:
valueWithError:
throwOnError
exceptionWithName:reason:userInfo:
numberFormatter
numberFromString:
initWithBaseDictionaryKey:profile:profileVersion:
registerBagKeySet
loadBaseDictionary:
addBagKey:valueType:
integerBackedByStringForKey:
doubleBackedByStringForKey:
booleanForKey:
booleanBackedByStringForKey:
setThrowOnError:
_throwOnError
_baseDictionaryKey
_mutableBagKeySet
_defaultValues
_bag
_numberFormatter
T@"NSString",R,N,V_baseDictionaryKey
T@"AMSMutableBagKeySet",R,N,V_mutableBagKeySet
T@"NSMutableDictionary",R,N,V_defaultValues
T@"<AMSBagProtocol>",R,N,V_bag
T@"NSNumberFormatter",R,N,V_numberFormatter
TB,N,V_throwOnError
sharedSession
response:data:error:
dataTaskWithRequest:completionHandler:
resume
downloadTaskWithRequest:completionHandler:
statusCode
initWithData:encoding:
performRequest:completionHandler:
downloadResourceFromRequest:completionHandler:
checksumDataForFile:withError:
base64EncodedStringWithOptions:
fileHandleForReadingFromURL:error:
readDataOfLength:
closeAndReturnError:
bagContract
tokenizedURLForBagPathKey:
currentCalendar
components:fromDate:
year
weekOfYear
initWithBagContract:
tracksEnabled
artistsEnabled
_bagContract
T@"SHBagContract",R,N,V_bagContract
Td,R,N
loadDataFromURL:error:
initWithDataFetcher:dataStore:
loadFromURL:type:storefront:reuseExistingData:completion:
domain
code
randomTemporaryClusterURL
decompressFile:toLocation:error:
importerForFile:
loadDataFromFileInfo:withMetadata:toDestinationURL:error:
delegate
setDelegate:
_delegate
T@"<SHInsightsJSONLDataDetokenizerDelegate>",W,N,V_delegate
createTables:error:
clearTemporaryDatabaseFileAtURL:withError:
intValue
insert:low:medium:high:
insert:appleMusicID:cohesionID:
readDataLineByLineFromURL:error:callback:
copyDatabaseFromURL:toDatabaseDestinationURL:error:
supportedKeysForDatabase
databaseURL
supportedKeys
intersectSet:
supportedKeysForDatabaseAsString
mediaItemsWithQuery:tokens:objects:error:
setWithCapacity:
validDatabaseKeys
supportedKeysForDatabaseAsStringWithPrefix:
stringWithString:
appendFormat:
_databaseURL
_validDatabaseKeys
T^{sqlite3=},R,N,V_db
T@"NSURL",R,N,V_databaseURL
T@"NSArray",R,N,V_validDatabaseKeys
mutableMediaItems
groupType
cohesionLevel
setMutableMediaItems:
_groupType
_cohesionLevel
_mutableMediaItems
T@"NSMutableArray",&,N,V_mutableMediaItems
Tq,R,N,V_groupType
Tq,R,N,V_cohesionLevel
T@"NSArray",R,N
messageForCode:
setValuesForKeysWithDictionary:
sh_rangeOfData:
internalErrorWithCode:underlyingError:
parsedJSONObject:error:
currentData
subdataWithRange:
setCurrentData:
writeDataToDelegate:withError:
dataWithData:
_currentData
T@"NSMutableData",&,N,V_currentData
stringByAppendingPathComponent:
UUID
UUIDString
removeItemAtURL:error:
URLByDeletingLastPathComponent
createDirectoryAtURL:withIntermediateDirectories:attributes:error:
copyItemAtURL:toURL:error:
initWithNetworkRequester:
requestWithURL:
addValue:forHTTPHeaderField:
networkRequester
doesRequestEtag:matchInResponse:
suggestedFilename
valueForHTTPHeaderField:
allHeaderFields
endpointFromDate:insights:location:
_networkRequester
T@"<SHNetworkRequester>",R,N,V_networkRequester
fileExistsAtPath:isDirectory:
readFromURL:toStream:error:
inputStreamWithURL:
hasBytesAvailable
dataWithCapacity:
setLength:
mutableBytes
read:maxLength:
setCallback:
index
importClusters:toParentCluster:startIndex:
setIndex:
stringByAppendingString:
callback
_index
_callback
TQ,N,V_index
T@?,C,N,V_callback
@32@0:8@16@24
@16@0:8
@24@0:8@16
v16@0:8
@"NSDictionary"
@"NSArray"
@"SHAffinityGroup"
B24@0:8@16
#16@0:8
@24@0:8:16
@32@0:8:16@24
@40@0:8:16@24@32
B16@0:8
B24@0:8#16
B24@0:8:16
Vv16@0:8
Q16@0:8
^{_NSZone=}16@0:8
B24@0:8@"Protocol"16
@"NSString"16@0:8
v48@0:8@16@24@32@?40
v48@0:8@"NSURL"16@"NSString"24@"NSString"32@?<v@?@"SHDataFetcherFileInfo"@"NSError">40
v48@0:8@"NSURL"16@"CLLocation"24@"NSDate"32@?<v@?@"SHDataFetcherFileInfo"@"NSError">40
@48@0:8q16@24@32@40
q16@0:8
@"NSString"
@"NSDate"
B32@0:8@16^@24
B24@0:8^@16
v24@0:8@16
B32@0:8@"NSData"16^@24
@"<SHInsightsDataStream>"16@0:8
v24@0:8@"<SHInsightsDataStream>"16
@"<SHInsightsDataStream>"
@"NSOutputStream"
@"CLLocation"
q24@0:8@16
@24@0:8q16
@32@0:8@16^@24
B40@0:8@16@24^@32
v24@0:8q16
v20@0:8B16
@"NSURL"
@"SHClusterMetadata"
v40@0:8@16@24@?32
@"NSSet"
v32@0:8@16@?24
v32@0:8@?16@?24
@"SHClusterStatementRunner"
@"SHClusterSQLiteDataStore"
i16@0:8
@"NSData"
B40@0:8^^{sqlite3}16@24^@32
B24@0:8^{sqlite3=}16
B32@0:8^{sqlite3=}16^@24
B40@0:8@16^{sqlite3=}24^@32
B64@0:8@16^{sqlite3=}24@32@40@?48^@56
B40@0:8^{sqlite3=}16@24^@32
@24@0:8Q16
v24@0:8^{sqlite3=}16
{CLLocationCoordinate2D=dd}24@0:8Q16
{CLLocationCoordinate2D=dd}24@0:8@16
@28@0:8@16i24
@40@0:8q16@24@32
v24@0:8@?16
v32@0:8q16@?24
@48@0:8q16d24@32@40
B32@0:8@16@24
d16@0:8
@24@0:8^{_NSZone=}16
B32@0:8q16@24
@"NSMutableDictionary"
@"<SHDataFetcher>"
i24@0:8@16
@20@0:8i16
@24@0:8i16i20
B44@0:8i16@20i28i32^@36
{?=*Q*Q^v}16@0:8
v20@0:8i16
{?="dst_ptr"*"dst_size"Q"src_ptr"*"src_size"Q"state"^v}
@40@0:8@16@24@32
v32@0:8@16Q24
v40@0:8@16Q24@32
d24@0:8@16
@"AMSMutableBagKeySet"
@"<AMSBagProtocol>"
@"NSNumberFormatter"
v32@0:8@"NSURLRequest"16@?<v@?@"NSHTTPURLResponse"@"NSData"@"NSError">24
v32@0:8@"NSURLRequest"16@?<v@?@"NSHTTPURLResponse"@"NSURL"@"NSError">24
@"SHBagContract"
v52@0:8@16q24@32B40@?44
@"<SHInsightsJSONLDataDetokenizerDelegate>"
B48@0:8@16@24@32^@40
B48@0:8@"SHDataFetcherFileInfo"16@"SHClusterMetadata"24@"NSURL"32^@40
q36@0:8^{sqlite3=}16i24i28i32
B40@0:8^{sqlite3=}16@24q32
^{sqlite3=}16@0:8
@40@0:8@16@24^@32
@48@0:8@16@24@32^@40
@48@0:8q16@24@32^@40
^{sqlite3=}
@32@0:8q16q24
@"NSMutableArray"
@32@0:8q16@24
{_NSRange=QQ}24@0:8@16
@"NSMutableData"
@"<SHNetworkRequester>"
B40@0:8@16^@24@?32
v40@0:8@16@24Q32
v24@0:8Q16
@?16@0:8
@(#)PROGRAM:ShazamInsights  PROJECT:ShazamKit-163.4
Unknown database type %@, assuming it is tracks
Failed to open database for metadata with error %@
Unreadable metadata, failing
Error reading metadata %@
Error updating metadata %@
Failed to turn on cell_size_check %@
Failed to run quick check %@
Invalid character in geohash %@: %c
Failed to check database load status %@
%@ was not loaded when we tried to access it, attempting to return default...
NO DEFAULT SUPPLIED for %@
Failed to fetch key %@ from bag with error %@, using default
Failed to fetch key %@ from bag with error %@, NO DEFAULT SUPPLIED
Failed to convert string %@, to number using default
Failed to convert string %@, to number using default, NO DEFAULT SUPPLIED
Network call: %@ failed with bad server response: %@
Fetching insights configuration...
Failed to load insights configuration %@, using defaults
Cluster data already loaded
Failed to load the datastore %@
Failed to open database for artist query %@
Failed to perform artists query %@
Failed get a trackID from tracks query
Failed to query database %@
Failed to delete existing database %@
Failed to move database into place %@
Etag missing for request to %@, replacing with random hash
tracks
artists
select type, storefront, hash, creationDate from Metadata LIMIT 1
v16@?0^{sqlite3_stmt=}8
Failed to read the database metadata
Unknown Error
INSERT into Metadata(type, hash, storefront, creationDate) VALUES(?,?,?,?)
Metadata
UPDATE Metadata set type = ?, hash = ?, storefront = ?, creationDate = ?
v24@?0@"SHDataFetcherFileInfo"8@"NSError"16
v16@?0@"SHInsightsConfiguration"8
geoHashSuffixes
geoHash
trackPool
geoHashTrackPools
%@%@
INSIGHTS_CUSTOM
PRAGMA cell_size_check=ON
PRAGMA quick_check
SELECT COUNT(*) FROM %@
BEGIN
COMMIT
0123456789bcdefghjkmnpqrstuvwxyz
Invalid object in catalog %@
v8@?0
v24@?0@"SHClusterSQLiteDataStore"8@"NSError"16
v24@?0@"SHClusterController"8@"NSError"16
v32@?0@"SHInsightsConfiguration"8@"NSString"16@"NSError"24
Cohesion
{deviceid}
{sessionid}
{language}
{storefront}
{shazamid}
{itsct}
{year}
{weekOfYear}
{geohash}
https
lzma
com.apple.shazamcatalog
v28@?0@"NSDictionary"8B16@"NSError"20
%@/%@
@"AMSPromise"16@?0@"NSString"8
Failed to fetch key %@ with error %@
v32@?0@"NSData"8@"NSURLResponse"16@"NSError"24
v32@?0@"NSURL"8@"NSURLResponse"16@"NSError"24
Shazam
shazam-insights
baseURL
geocharts/path
geocharts/minGeohashLength
geocharts/maxGeohashLength
targeting/path
targeting/enabled
targeting/updateInterval
tracks/path
tracks/enabled
tracks/maxAgeInSeconds
artists/path
artists/enabled
artists/maxAgeInSeconds
v16@?0@"NSError"8
v40@?0@"NSURL"8@"NSString"16d24@"NSError"32
CREATE TABLE if not exists Cohesion(id INTEGER PRIMARY KEY, high INTEGER, medium INTEGER, low INTEGER, CONSTRAINT constraint_name UNIQUE(low, medium, high) ON CONFLICT IGNORE)
CREATE TABLE if not exists MediaItems(sh_appleMusicID VARCHAR, cohesion INTEGER, FOREIGN KEY(cohesion) REFERENCES Cohesion(id))
CREATE TABLE if not exists Metadata(type VARCHAR, hash VARCHAR, storefront VARCHAR, creationDate DATE)
INSERT INTO Cohesion (low, medium, high) VALUES (?, ?, ?) returning id
INSERT INTO MediaItems (sh_appleMusicID, cohesion) VALUES (?, ?);
v40@?0@"NSString"8@"NSString"16@"NSString"24@"NSArray"32
PRAGMA table_info('MediaItems')
select %@ from MediaItems where cohesion = (select cohesion from MediaItems where %@ = <MEDIA_NAME> COLLATE %@) and %@ != <MEDIA_NAME2> COLLATE %@
<MEDIA_NAME>
<MEDIA_NAME2>
select %@ from MediaItems where %@ COLLATE %@ in (<MEDIA_IDS>)
<MEDIA_IDS>
select %@ from MediaItems t1, Cohesion c1 INNER JOIN (select  c2.high, c2.medium, c2.low from MediaItems t2, Cohesion c2 where t2.%@ in (<SEED_MEDIA_IDS>) AND t2.cohesion = c2.id order by %@) as s1 ON s1.low = c1.low
 AND s1.medium = c1.medium
 AND s1.high = c1.high AND s1.medium = c1.medium
 where t1.%@ in (<QUERY_MEDIA_IDS>) AND t1.cohesion = c1.id order by %@
<SEED_MEDIA_IDS>
<QUERY_MEDIA_IDS>
core
com.apple.ShazamKit
com.apple.ShazamInsightsDataFetcher
com.apple.ShazamInsights
There was a problem fetching the data
The requested data was not found, please amend your query
The data was found but it was invalid
%@_temp
unknown
Etag
If-None-Match
v32@?0@"NSHTTPURLResponse"8@"NSURL"16@"NSError"24
v32@?0@"NSHTTPURLResponse"8@"NSData"16@"NSError"24
clusters
%lu%@
SHTimeAndPlaceAffinityGroup
SHLocalDataFetcher
SHDataFetcher
NSObject
SHClusterMetadata
SHInsightsDataStreamOutput
SHInsightsDataStream
SHRegion
SHClusterMetadataQuery
SHClusterStatus
SHAffinityGroupQuery
SHMediaItemPropertyCollection
SHTimeAndPlaceServerResponseParser
SHClusterController
SHDataFetcherFileInfo
SHSQLiteUtils
Geohash
SHInsightsJSONLFileWriter
SHClusterLoaderRequest
SHClusterQuery
SHClusterSQLiteDataStore
SHTokenizedURL
NSCopying
Chunking
SHTimeAndPlaceController
SHInsightsDataCompression
SHBagContract
SHInsightsNetworkRequester
SHNetworkRequester
SHFileChecksum
SHInsightsConfiguration
SHClusterLoader
SHInsightsJSONLFileReader
SHJSONLClusterImporter
SHClusterImporter
SHClusterStatementRunner
SHAffinityGroup
SHInsightsError
Compression
SHInsightsJSONLDataDetokenizer
SHClusterImporterUtils
SHCDNDataFetcher
SHInsightsDataStreamInput
SHClusterJSONLReader
SHInsightsJSONLDataDetokenizerDelegate
SHSQLiteClusterImporter
init
regions
count
dictionaryWithCapacity:
countByEnumeratingWithState:objects:count:
geohash
setObject:forKeyedSubscript:
copy
array
hasPrefix:
addObject:
length
substringToIndex:
geohashKeyedRegions
objectForKeyedSubscript:
initWithRegions:affinityGroup:
regionsForGeohash:
affinityGroup
.cxx_destruct
_geohashKeyedRegions
_regions
_affinityGroup
T@"NSDictionary",R,N,V_geohashKeyedRegions
T@"NSArray",R,N,V_regions
T@"SHAffinityGroup",R,N,V_affinityGroup
defaultManager
path
fileExistsAtPath:
checksumForFile:withError:
isEqualToString:
errorWithDomain:code:userInfo:
initWithDataURL:
setStorefront:
date
setCreationDate:
setUniqueHash:
errorWithCode:underlyingError:
dataWithContentsOfURL:
isEqual:
class
self
performSelector:
performSelector:withObject:
performSelector:withObject:withObject:
isProxy
isKindOfClass:
isMemberOfClass:
conformsToProtocol:
respondsToSelector:
retain
release
autorelease
retainCount
zone
hash
superclass
description
debugDescription
TQ,R
T#,R
T@"NSString",R,C
fetchClusterURL:forCurrentStorefront:cachedUniqueHash:completionHandler:
clusterDataAtURL:forLocation:date:completionHandler:
initWithType:storefront:uniqueHash:creationDate:
uniqueHash
storefront
creationDate
clusterType
_uniqueHash
_storefront
_creationDate
_clusterType
T@"NSString",R,C,N,V_uniqueHash
T@"NSString",R,C,N,V_storefront
T@"NSDate",R,N,V_creationDate
Tq,R,N,V_clusterType
close
dealloc
outputStreamWithURL:append:
open
next
closeWithError:
outputStream
bytes
write:maxLength:
streamError
annotateClientError:withError:
processData:error:
setNext:
T@"<SHInsightsDataStream>",&,N
initWithDestination:
setOutputStream:
_next
_outputStream
T@"NSOutputStream",&,N,V_outputStream
T@"<SHInsightsDataStream>",&,N,V_next
initWithGeohash:
initWithLocation:
location
_geohash
_location
T@"NSString",R,C,N,V_geohash
T@"CLLocation",R,N,V_location
stringFromStoreType:
setFormatOptions:
openDatabase:atURL:error:
dateFormatter
dateFromString:
dataStoreTypeFromString:
runSQL:onDatabase:replacingTokens:withObjects:rowHandler:error:
dictionaryWithObjects:forKeys:count:
errorWithCode:underlyingError:keyOverrides:
closeDatabase:error:
createDatabase:atURL:error:
database:hasPopulatedTable:error:
cStringUsingEncoding:
stringFromDate:
stringWithCString:encoding:
metadataFromDatabaseAtLocation:error:
writeMetadata:toDatabaseAtLocation:error:
metadata
loadStatus
setLoadStatus:
isDataValid
setIsDataValid:
dataURL
setDataURL:
setMetadata:
_isDataValid
_loadStatus
_dataURL
_metadata
T@"NSURL",&,N,V_dataURL
Tq,N,V_loadStatus
TB,N,V_isDataValid
T@"SHClusterMetadata",&,N,V_metadata
T@"NSString",R,C,N
T@"NSDate",R,N
Tq,R,N
minGeoChartsGeohashLength
sh_geohashOfLength:
geoChartsEndpointForDate:geoHash:
dataFetcherForSourceURL:
data
affinityGroupsFromData:atLocation:onDate:completionHandler:
fetchSharedInstanceWithCompletion:
affinityGroupsForLocation:atDate:completionHandler:
initWithArray:representingProperty:
setWithArray:
collectionWithArray:representingProperty:
collection
property
_collection
_property
T@"NSSet",R,N,V_collection
T@"NSString",R,N,V_property
JSONObjectWithData:options:error:
initWithType:cohesionLevel:
mediaItemWithProperties:
appendMediaItem:
stringWithFormat:
regionAffinityGroupsFromServerData:error:
databaseFilePathURL
initWithDatabaseURL:
dataStore
dataStatus
query
mediaItemsSimilarToMediaItemValue:forKey:error:
allObjects
mediaItemsFromPropertyCollection:error:
affinityGroupsAtCohesionLevel:forQuery:queryCollection:filteredBy:
filterQueryCollection:byItemsWithinCluster:
mutableCopy
mediaItems
appleMusicID
removeObject:
mediaItemsAtCohesionLevel:forQueryMediaIDs:filteredBySeedMediaIDs:error:
databaseURLForName:
cachesDirectory
URLByAppendingPathComponent:
URLByAppendingPathExtension:
artistClusterDefaultLocationURL
trackClusterDefaultLocationURL
initWithDataStore:
mediaItemsSimilarToValue:forKey:completionHandler:
mediaItemsForPropertyCollection:completionHandler:
resultsFromQueryBlock:completionHandler:
affinityGroupsFromQueryCollection:filteredBySeedCollection:completionHandler:
_query
_dataStore
T@"SHClusterStatementRunner",R,N,V_query
T@"SHClusterSQLiteDataStore",R,N,V_dataStore
isFileURL
lastPathComponent
initWithDataURL:suggestedFileName:
suggestedFileName
fileURLWithPath:
pathExtension
supportedCompressionTypeFromFilePathExtension:
URLWithString:
dataFilePathURL
initWithData:suggestedFileName:
compressionType
suggestedExtension
mimeType
setMimeType:
_data
_dataFilePathURL
_suggestedFileName
_mimeType
T@"NSURL",R,N,V_dataFilePathURL
T@"NSData",R,N,V_data
T@"NSString",R,C,N,V_suggestedFileName
Ti,R,N
T@"NSDate",&,N,V_creationDate
T@"NSString",C,N,V_storefront
T@"NSString",C,N,V_uniqueHash
T@"NSString",C,N,V_mimeType
absoluteString
defenseAgainstBadDatabase:
runNoResultSQL:onDatabase:error:
objectAtIndexedSubscript:
queryStringForCount:
replaceOccurrencesOfString:withString:options:range:
string
appendString:
startTransactionOnDatabase:
commitTransactionOnDatabase:
initWithBytes:length:encoding:
compare:options:
sh_geoHashToCoordinates:
coordinate
initWithCString:encoding:
UTF8String
sh_toGeohash
sh_roundCoordinateValuesToGeohashOfLength:
streamForWritingToURL:withCompression:
dataForJSONObject:error:
dataWithJSONObject:options:error:
appendData:
dataUsingEncoding:
annotateClientError:code:underlyingError:keyOverrides:
initForCompressionWithAlgorithm:
arrayWithObjects:count:
linkDataStream:
initWithDestination:compression:
writeObject:error:
destination
_destination
T@"NSURL",R,N,V_destination
T@"<SHInsightsDataStream>",R,N,V_outputStream
initWithType:sourceURL:outputURL:
sourceURL
type
tracksClusterEndpointForStorefront:
artistsClusterEndpoint
artistsCachedDataMaxAge
tracksCachedDataMaxAge
URLForRequestForStorefront:withCompletion:
initWithType:
shouldDeleteExistingDatabaseAtOutputURL
sourceURLWithCompletion:
clusterConfiguration:
outputURL
_sourceURL
_outputURL
_type
T@"NSURL",R,N,V_sourceURL
T@"NSURL",R,N,V_outputURL
Tq,R,N,V_type
TB,R,N
tracksCluster
artistsCluster
initWithType:sourceURL:destinationURL:
destinationURL
loadDataForRequest:completionHandler:
controllerForType:withCompletionHandler:
initWithClusterType:databaseMaxAge:forStorefront:databaseFilePathURL:
clusterForType:
filterMediaItemQueryCollection:bySeedCollection:completionHandler:
mediaItemsWithHighCohesionToValue:forProperty:completionHandler:
mediaItemsMatchingValuesInCollection:completionHandler:
statusWithCompletionHandler:
_destinationURL
T@"NSURL",R,N,V_destinationURL
databaseMaxAge
dateWithTimeIntervalSinceNow:
isDataLoaded
requiredStorefront
hasNotPassedExpiryDate:isForCountryCode:
laterDate:
sqliteDatabaseExistsAtURL:
_databaseMaxAge
_databaseFilePathURL
_requiredStorefront
T@"NSString",R,N,V_requiredStorefront
T@"SHClusterStatus",R,N
Td,R,N,V_databaseMaxAge
T@"NSURL",R,N,V_databaseFilePathURL
dictionary
originalURLPath
tokenForTokenType:
containsString:
tokenDictionary
setValue:forKey:
stringByReplacingOccurrencesOfString:withString:
containsTokens
host
tokenURLPath
setScheme:
setHost:
componentsSeparatedByString:
firstObject
setPath:
lastObject
setQuery:
URLRepresentation
allocWithZone:
copyWithZone:
initWithHost:URLPath:
mutableCopyWithZone:
setTokenDictionary:
initWithString:
updateToken:withValue:
setOriginalURLPath:
_host
_originalURLPath
_tokenDictionary
T@"NSString",C,N,V_host
T@"NSString",C,N,V_originalURLPath
T@"NSMutableDictionary",&,N,V_tokenDictionary
arrayWithCapacity:
subarrayWithRange:
sh_sliceIntoChunksOfMaximumSize:
maxGeoChartsGeohashLength
dataFetcher
_dataFetcher
T@"<SHDataFetcher>",R,N,V_dataFetcher
initWithOperation:algorithm:
setup
operation
algorithm
performOperation:withData:algorithm:flags:error:
dataWithBytes:length:
typeWithFilenameExtension:
preferredFilenameExtension
typeWithIdentifier:
conformsToType:
supportedCompressionTypeFromFileURL:
initForDecompressionWithAlgorithm:
stream
setOperation:
setAlgorithm:
_operation
_algorithm
_stream
T{?=*Q*Q^v},R,N,V_stream
Ti,N,V_operation
Ti,N,V_algorithm
setNumberStyle:
bagForProfile:profileVersion:
initWithBaseDictionaryKey:bag:
bagKeySet
profile
profileVersion
registerBagKeySet:forProfile:profileVersion:
baseDictionaryKey
dictionaryForKey:
valueWithCompletion:
mutableBagKeySet
unionBagKeySet:
addBagKey:valueType:defaultValue:
fullyQualifiedKey:
defaultValues
setObject:forKey:
integerForKey:
valueForKey:bagValue:
integerValue
stringForKey:
numberFromString:forKey:
promiseWithResult:
transformWithBlock:
doubleForKey:
doubleValue
boolForKey:
boolValue
numberWithBool:
isLoaded
defaultValueForKey:
valueWithError:
throwOnError
exceptionWithName:reason:userInfo:
numberFormatter
numberFromString:
initWithBaseDictionaryKey:profile:profileVersion:
registerBagKeySet
loadBaseDictionary:
addBagKey:valueType:
integerBackedByStringForKey:
doubleBackedByStringForKey:
booleanForKey:
booleanBackedByStringForKey:
setThrowOnError:
_throwOnError
_baseDictionaryKey
_mutableBagKeySet
_defaultValues
_bag
_numberFormatter
T@"NSString",R,N,V_baseDictionaryKey
T@"AMSMutableBagKeySet",R,N,V_mutableBagKeySet
T@"NSMutableDictionary",R,N,V_defaultValues
T@"<AMSBagProtocol>",R,N,V_bag
T@"NSNumberFormatter",R,N,V_numberFormatter
TB,N,V_throwOnError
sharedSession
response:data:error:
dataTaskWithRequest:completionHandler:
resume
downloadTaskWithRequest:completionHandler:
statusCode
initWithData:encoding:
performRequest:completionHandler:
downloadResourceFromRequest:completionHandler:
checksumDataForFile:withError:
base64EncodedStringWithOptions:
fileHandleForReadingFromURL:error:
readDataOfLength:
closeAndReturnError:
bagContract
tokenizedURLForBagPathKey:
currentCalendar
components:fromDate:
year
weekOfYear
initWithBagContract:
tracksEnabled
artistsEnabled
_bagContract
T@"SHBagContract",R,N,V_bagContract
Td,R,N
loadDataFromURL:error:
initWithDataFetcher:dataStore:
loadFromURL:type:storefront:reuseExistingData:completion:
domain
code
randomTemporaryClusterURL
decompressFile:toLocation:error:
importerForFile:
loadDataFromFileInfo:withMetadata:toDestinationURL:error:
delegate
setDelegate:
_delegate
T@"<SHInsightsJSONLDataDetokenizerDelegate>",W,N,V_delegate
createTables:error:
clearTemporaryDatabaseFileAtURL:withError:
intValue
insert:low:medium:high:
insert:appleMusicID:cohesionID:
readDataLineByLineFromURL:error:callback:
copyDatabaseFromURL:toDatabaseDestinationURL:error:
supportedKeysForDatabase
databaseURL
supportedKeys
intersectSet:
supportedKeysForDatabaseAsString
mediaItemsWithQuery:tokens:objects:error:
setWithCapacity:
validDatabaseKeys
supportedKeysForDatabaseAsStringWithPrefix:
stringWithString:
appendFormat:
_databaseURL
_validDatabaseKeys
T^{sqlite3=},R,N,V_db
T@"NSURL",R,N,V_databaseURL
T@"NSArray",R,N,V_validDatabaseKeys
mutableMediaItems
groupType
cohesionLevel
setMutableMediaItems:
_groupType
_cohesionLevel
_mutableMediaItems
T@"NSMutableArray",&,N,V_mutableMediaItems
Tq,R,N,V_groupType
Tq,R,N,V_cohesionLevel
T@"NSArray",R,N
messageForCode:
setValuesForKeysWithDictionary:
sh_rangeOfData:
internalErrorWithCode:underlyingError:
parsedJSONObject:error:
currentData
subdataWithRange:
setCurrentData:
writeDataToDelegate:withError:
dataWithData:
_currentData
T@"NSMutableData",&,N,V_currentData
stringByAppendingPathComponent:
UUID
UUIDString
removeItemAtURL:error:
URLByDeletingLastPathComponent
createDirectoryAtURL:withIntermediateDirectories:attributes:error:
copyItemAtURL:toURL:error:
initWithNetworkRequester:
requestWithURL:
addValue:forHTTPHeaderField:
networkRequester
doesRequestEtag:matchInResponse:
suggestedFilename
valueForHTTPHeaderField:
allHeaderFields
endpointFromDate:insights:location:
_networkRequester
T@"<SHNetworkRequester>",R,N,V_networkRequester
fileExistsAtPath:isDirectory:
readFromURL:toStream:error:
inputStreamWithURL:
hasBytesAvailable
dataWithCapacity:
setLength:
mutableBytes
read:maxLength:
setCallback:
index
importClusters:toParentCluster:startIndex:
setIndex:
stringByAppendingString:
callback
_index
_callback
TQ,N,V_index
T@?,C,N,V_callback
@32@0:8@16@24
@16@0:8
@24@0:8@16
v16@0:8
@"NSDictionary"
@"NSArray"
@"SHAffinityGroup"
B24@0:8@16
#16@0:8
@24@0:8:16
@32@0:8:16@24
@40@0:8:16@24@32
B16@0:8
B24@0:8#16
B24@0:8:16
Vv16@0:8
Q16@0:8
^{_NSZone=}16@0:8
B24@0:8@"Protocol"16
@"NSString"16@0:8
v48@0:8@16@24@32@?40
v48@0:8@"NSURL"16@"NSString"24@"NSString"32@?<v@?@"SHDataFetcherFileInfo"@"NSError">40
v48@0:8@"NSURL"16@"CLLocation"24@"NSDate"32@?<v@?@"SHDataFetcherFileInfo"@"NSError">40
@48@0:8q16@24@32@40
q16@0:8
@"NSString"
@"NSDate"
B32@0:8@16^@24
B24@0:8^@16
v24@0:8@16
B32@0:8@"NSData"16^@24
@"<SHInsightsDataStream>"16@0:8
v24@0:8@"<SHInsightsDataStream>"16
@"<SHInsightsDataStream>"
@"NSOutputStream"
@"CLLocation"
q24@0:8@16
@24@0:8q16
@32@0:8@16^@24
B40@0:8@16@24^@32
v24@0:8q16
v20@0:8B16
@"NSURL"
@"SHClusterMetadata"
v40@0:8@16@24@?32
@"NSSet"
v32@0:8@16@?24
v32@0:8@?16@?24
@"SHClusterStatementRunner"
@"SHClusterSQLiteDataStore"
i16@0:8
@"NSData"
B40@0:8^^{sqlite3}16@24^@32
B24@0:8^{sqlite3=}16
B32@0:8^{sqlite3=}16^@24
B40@0:8@16^{sqlite3=}24^@32
B64@0:8@16^{sqlite3=}24@32@40@?48^@56
B40@0:8^{sqlite3=}16@24^@32
@24@0:8Q16
v24@0:8^{sqlite3=}16
{CLLocationCoordinate2D=dd}24@0:8Q16
{CLLocationCoordinate2D=dd}24@0:8@16
@28@0:8@16i24
@40@0:8q16@24@32
v24@0:8@?16
v32@0:8q16@?24
@48@0:8q16d24@32@40
B32@0:8@16@24
d16@0:8
@24@0:8^{_NSZone=}16
B32@0:8q16@24
@"NSMutableDictionary"
@"<SHDataFetcher>"
i24@0:8@16
@20@0:8i16
@24@0:8i16i20
B44@0:8i16@20i28i32^@36
{?=*Q*Q^v}16@0:8
v20@0:8i16
{?="dst_ptr"*"dst_size"Q"src_ptr"*"src_size"Q"state"^v}
@40@0:8@16@24@32
v32@0:8@16Q24
v40@0:8@16Q24@32
d24@0:8@16
@"AMSMutableBagKeySet"
@"<AMSBagProtocol>"
@"NSNumberFormatter"
v32@0:8@"NSURLRequest"16@?<v@?@"NSHTTPURLResponse"@"NSData"@"NSError">24
v32@0:8@"NSURLRequest"16@?<v@?@"NSHTTPURLResponse"@"NSURL"@"NSError">24
@"SHBagContract"
v52@0:8@16q24@32B40@?44
@"<SHInsightsJSONLDataDetokenizerDelegate>"
B48@0:8@16@24@32^@40
B48@0:8@"SHDataFetcherFileInfo"16@"SHClusterMetadata"24@"NSURL"32^@40
q36@0:8^{sqlite3=}16i24i28i32
B40@0:8^{sqlite3=}16@24q32
^{sqlite3=}16@0:8
@40@0:8@16@24^@32
@48@0:8@16@24@32^@40
@48@0:8q16@24@32^@40
^{sqlite3=}
@32@0:8q16q24
@"NSMutableArray"
@32@0:8q16@24
{_NSRange=QQ}24@0:8@16
@"NSMutableData"
@"<SHNetworkRequester>"
B40@0:8@16^@24@?32
v40@0:8@16@24Q32
v24@0:8Q16
@?16@0:8
