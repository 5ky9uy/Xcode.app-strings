@(#)PROGRAM:syncdefaultsd  PROJECT:SyncedDefaults-
syd/main
Starting
Got TERM signal - shutting down
Exiting (SIGTERM)
Waiting for %@ to shut down
Scheduling shutdown took too long. Aborting self.
got XPC error: %s
got distnoted event:%s, bundleIDs:%@
Resuming server
Accepting new XPC connection %@
Created client connection %@
Removing client connection %@
Processing account changes
Current logged in account identifier: %@
Database has no account, but the user is now logged in. Setting account identifier and marking everything as needing to be uploaded.
Not creating sync manager for store type %d because it is not supported
Setting initial account identifier to %@
Created sync manager %@
Error getting base directory URL: %@
Error ensuring KVS directory exists: %@
Error ensuring KVS directory has the right attributes: %@
Overriding primary account identifier with %@
Registering for periodic analytics XPC activity
Checking in for periodic analytics XPC activity
Setting periodic analytics XPC activity criteria
Sending periodic analytics
Store state for %@: %@
Container state: %@
%@: failed to find accountType for %@
%@: failed to find accounts for accountTypeIdentifier %@
%@: failed to find accounts for dataclass %@
Error retrieving credentials for account (%@). AccountCredential (%@), Error (%@), Token (%@)
SYDCredentials missing account
SYDCredentials missing user
SYDCredentials missing authToken
Observed a new auth token before renewCredentials call.
Attempting to renew credentials.
Finished attempting to renew credentials with result %d.
Encountered error renewing credentials, %@
Observed a new auth token after renewCredentials call.
Unable to retrieve a new auth token.
Primary Apple Account found - %@
%@: %@ is enabled for more than one account and no primary account detected! picking first account %@
%@: %@ is enabled for more than one account, picking primary account %@
%@: found account %@
%@: no token on account %@
%@: account %@ in gray mode
%@ _loadAccountIfNecessary, _account=%@
%@: registering for account database store change notification
%@ _loadAccountIfNecessary _account is now %@
Account: %@%s - properties: %@
%@: accounts changed
_accountsChangedNotification: Username changed %@ to %@
_accountsChangedNotification: Username logged out from %@ to %@
_accountsChangedNotification: Cellular state changed %@ to %@
_accountsChangedNotification: Server URL changed %@ to %@
_accountsChangedNotification: Server URL not found %@ to %@
%@: notifying account changed: (%@/%@, %d/%d, %@/%@)
%@: password changed
%@: device unlocked since boot changed
%@: isValid missing serverURL
%@: isValid missing account
%@: isValid missing personID
%@: isValid missing auth token
%@: auth token is invalid
Account store database change notification: %@
No bundle id provided while processing proxy %@
Failed to create client entry for bundleID %@ while processing proxy %@
Ignoring bundleID %@ while processing proxy %@, missing KVS entitlement.
Failed to alloc/init NSMutableArray for bundleID %@ while processing proxy %@
Refreshing LaunchServices Cache. Cache (%@, %@), LS (%@, %@)
Unexpected %@ but found %@ when reading %@
Refreshing LaunchServices Cache Success. Now (%@, %@).
Refreshing LaunchServices Cache Failed.
Refreshing LaunchServices Cache Skipped, Already Current
No SYDPersistenceClientEntry for bundle %@
Duplicate SYDPersistenceClientEntry for bundle %@
Error unarchiving server record: %@
No encoded data for new server record %@
Trying to set server record if newer, but no other record
Trying to set server record using record with a different ID. current=%@ other=%@
Replacing local server record changeTag=%@ to record with changeTag=%@
Merging data from record to %{private}@
Trying to merge data from an unknown record type: %@
Trying to merge data from a record of a different type (%@) from this key value record type (%@)
No modification date in record
Record's modification date was of the wrong class (%@). Expected NSDate.
Error loading data from asset: %@
No file URL for value data asset in %@
No value data in record
Record's value data was of the wrong class (%@). Expected NSData.
No current valueModificationDate
Record value modification date is greater than local value
Replacing local value with value from record
Error decoding value data from record: %@
Expected record type %@ for record name %@, but server record had record type %@
Error generating plist value: %@
Going to use an asset for %@ because the data is %ld bytes
Temporary asset directory doesn't exist. Creating now
Failed to create temporary asset directory: %@
Failed to write value data to temporary asset directory after creating directory: %@
Failed to write value data to temporary asset directory: %@
Unable to create an asset for %@
Somehow we got to a point where we're creating a record for %@, but we have no data. Bailing
Could not get key from record %@
Deleting file for asset (%@) in key value record %@
Failed to delete asset file: %@
Failed to create directory at %@: %@
Unable to find additional stores via entitlement for bundleIdentifier:%@, using persistent state: %@
Start debugging %@ - store identifier: %@
-endDebuggingStore called too many times on %@
Stop debugging %@
Invalid value for %@ in %@: should be a string
usedIdentifier had zero length: %@
Additional store identifier %@ for %@ is gone
Store identifier for %@ is %@
Found plistPath using: %@
Missing data container/plistPath for %@ - using %@
Setting up plist for app with additional store - %@, %@, %@, %@
Setting up plist for app - %@, %@, %@
PlistPath set to: %@
setting additional change notification name: %@
Can't discard the cached plist for app:%@/%p, scheduler:%@ since it has pending dirty keys
Discarded cached plist for app:%@/%p, scheduler:%@
No storage URL for %@
Failed to load plist at %@ for app:%@/%p, scheduler:%@, size:%{bytes}llu, error:%@
Loaded plist at %@ for app:%@/%p, scheduler:%@, size:%{bytes}llu
Error writing plist for app:%@/%p at %@: %@
Wrote plist at %@ for app:%@/%p, scheduler:%@
Incorrect changes class: %@
app:%@/%p storing local changes: %@
app:%@/%p storing client changes against version %lld (current version: %lld)
Incorrect class for key: %@
NSUbiquitousKeyValueStore does not support empty keys
%@ ignoring change from client for %@ because it's conflicting with %s
supressing remaining issues, a summary of keys and issues will be displayed
app:%@/%p, store:%@ had %lu keys that reported issues, scheduler:%@
app:%@/%p: %@
Adding dirty keys for local changes...
Notifying our client that we discarded some changes for app:%@/%p, success:%@, hasRevertedChanges:%@, multiAppSync:%@
Posted notification ("%@") for app:%@/%p, scheduler:%@
app:%@/%p, scheduler:%@, reason:%@
Preparing synchronization with remote server for app:%@/%p, scheduler:%@
No store identifier for app:%@/%p, scheduler:%@
Store - %@ is alreadying being synced
Store for %@ has an empty key - automatically deleting it
%@: invalid storage for %@
%@: can't serialize value for %@: %@
Rebuilding store after errors
store:%@, %@, empty
store:%@, %@, %@ => %@
store:%@, %@, values => %@ => %@
app:%@/%p, %@:
store:%@, %@, dirty-keys, none
store:%@, %@, dirty-keys, %@
Store - %@ is being synced
Synchronization with server failed for app:%@/%p, scheduler:%@
Distant storage for app:%@/%p, store:%@ disappeared - resetting sync state
Synchronization with server succeeded for app:%@/%p, scheduler:%@
app:%@/%p, store:%@ is not registered with server (throttled:%@)
app:%@/%p, store:%@ is banned from server (throttled:%@)
Distant storage for app:%@/%p, store:%@ returned error status:%ld (throttled:%@)
app:%@/%p notified by server that %@ %s
app:%@/%p has invalid data on the server for key %@
app:%@/%p notified by server that %@ is temporarily read-only
app:%@/%p notified by server that %@ needs to be re-submitted
app:%@/%p notified that %@ exceeds server quota but we have a new value to push to server
app:%@/%p notified that %@ exceeds server quota - reverting to last known value on server
app:%@/%p notified that %@ has changed on remote but also changed during synchronization. Marking as conflict
app:%@/%p notified that %@ synchronization %@
app:%@/%p notified some changes from server for %@ but there should be a conflict
app:%@/%p: Invalid data from server for key %@
app:%@/%p will keep local delete for %@
app:%@/%p will keep local value for %@ as remote is incorrect
app:%@/%p will keep remote value for %@ as local is incorrect
app:%@/%p will keep local value for %@ as it's the same as remote
app:%@/%p will keep merged local and remote values for %@
app:%@/%p will keep local value for %@ as it's more recent than remote
app:%@/%p will keep remote value for %@ as it's the initial sync
supressing remaining warnings for app:%@/%p
app:%@/%p will keep remote value for %@ as it's more recent than local
app:%@/%p will keep local delete for %@ as remote agrees on that
app:%@/%p will keep local value for %@
Local changes occurred for app:%@/%p while syncing with server, add to dirty keys
Posted store change notification ("%@") for app:%@/%p, scheduler:%@
No need to notify app:%@/%p of changes to the store
resetAllValuesForce:%@, needsToNotify:%@, changeCount:%lld, keysCount:%lu
Resetting sync state for app:%@/%p
accountDidChange %d forcing reset on %@
(%@) teardown reachability.
(%@) setup reachability.
(%@) reachability already started.
(%@) Can't schedule call back for reachability check to %@
(%@) Can't set call back for reachability check to %@
(%@) Can't test reachability to %@
(%@) Reachability instance is nil
(%@) Network state changed to (%@)
(%@) reachability flags changed to 0x%x
(%@) allowsCellular:%d, state:%d, reachabilityFlags:0x%x
(%@) Initial test for reachability failed. Let's mark service as unreachable for now
(%@) Attempting to start reachability test
(%@) Starting reachability test
(%@) serviceHostname:%@/%@, %d/%d
(%@) Shutting down.
environment:%@, user:%@
%@ setEnvironment APS settings: %@ | %@ - was %@ | %@
Cleaning up APS connection %@
Setting APS connection for "%@" environment
Switching push environment from %@ to %@
It took %.1fs to setup APSConnection
syd/pushToken
received public token
Receiving same token from APSConnection. Ignoring
syd/pushMessage
received message with userInfo: %@
Received push notification for another user: %@
marked "%@" topic as "%@" on %@
peerCount: %ld
Received simulator iCloud trigger
Syncdefaults is disabled (account %@)
Service was enabled during last launch
Service was disabled during last launch - resetting all updates
Account Change Notification from Plugin %d %@
Password Change Notification from Plugin %d %@
Device Unlocked Notification Account(%@) isValid(%d)
Revalidate account %d %@
%@ updating configuration from a peer scheduler (%@)
Trying to queue the app:%@/%p to the wrong scheduler:%@
app:%@ just launched and needs to sync - resetting scheduler delay
Added sync task for app:%@, reason:%@: %@
Dropped app:%@, reason:%@, nextSyncReason:%@, scheduler:%@
scheduler: %@, tasks: %@
**** some apps were not synchronized - will retry - scheduler:%@, scheduleSync:%@
**** some apps are still in the queue, computing next soon synchronization, scheduler:%@, tasks:%@
_endSynchronizationWithRemainingTasks _syncTasksByApp
**** we have sync-with-tracking requests, computing next soon synchronization, scheduler:%@, tasks:%@
Too many redirections to an alternate host (%@). Giving up.
Asked to use host %@ but already tried that before (either CFNetwork has a bug or server does not like us)
Rescheduling %lu pending sync requests: %@
Adding pending sync request: %@
beginning sync-with-tracking with: %@
ending sync-with-tracking for bundle id: %@ error: %@
sync-with-tracking error detected: %@
rescheduling sync-with-tracking request for %@
Invalid payload returned by server: %@
First bytes of response: %@
Invalid response from server: no status
Server got an internal error: %@
Invalid request from daemon (error %ld)
Offending application is %@
Invalid status from server: %ld
Server returned an app status without a bundle identifier: %@
Server returned an app status without a store identifier: %@
Server returned information for a non synchronizing app, bundleIdentifier:%@, storeIdentifier:%@
Found app:%@/%p for sync response with bundleIdentifier:%@, storeIdentifier:%@
Sync for %@/%p was cancelled - ignoring
Processing sync response for %lu apps, tasks:%@
Renew credentials failed. Not retrying.
Renew credentials successful, retrying.
Failed to create a server request for %@: %@
Synchronization has been cancelled
Credential Request returned an error: %@
Empty payload returned by server
Wrong partition will have to move to %@
Unable to redirect to alternate server '%@'
Unexpected 330 response from server - no alternate response
Server asks to retry later (%{public}@) for account %@
Server asks to retry later after 401 (%{public}@) for account %@
Unexpected response from server: %ld (%@) - retry later (%{public}@) for account %@
**** SYNCHRONIZING ALL APPS ****
syd/poll
syd/syncSoon
Network is unreachable. Discarding soon synchronization request
Computing next sync delay, scheduler:%@
%@ next sync should be in %.1fs, scheduler:%@
Temporarily disabling global throttling for developement apps, scheduler:%@
globally delaying app sync by %.0fs, scheduler:%@
Minimal delayed time is set - %f
Unreasonable delay detected setting to max
Resetting keychain delay: %.3fs/%.3fs
Resetting tracking delay: %.3fs/%.3fs
Next synchronization will start in %.1fs, scheduler:%@ with delay:%f
cancelling soon synchronization, scheduler:%@
Service is unavailable, %@ delayed for %.3fs (%.3f)
_serviceUnavailableWithDuration _startSynchronizationSoon
Not dropping app:%@, task:%@ otherTasks:%@
not syncing app:%@, allowed:%@, hasLocalChanges:%@, inactive:%@, task:%@
syncing app:%@, task:%@
syd/syncRequest
Starting synchronization, disableThrottling:%@, time:(%llu, %llu], scheduler:%@, tasks:%@
Skipping app:%@, syncIdentifier:%lu, nextRefreshTime:%llu, acceptableTime:%llu, task:%@
Preparing sync for app:%@, disableThrottling:%@, nextRefreshTime:%llu, task:%@
Preparing sync request with %lu/%lu/%lu apps, tasks:%@
No application wants to synchronize now, scheduler:%@
APNS Request returned an error: %@
Token registration response returned by server is invalid: %@
Sucessfully registered push token with server
Forcing a sync in case we missed a push
Server asks to retry later (%{public}@)
Server asks to retry later after 401 (%{public}@)
Unexpected response from server: %ld (%{public}@) - retry later (%{public}@)
syd/apnsRequest
Setting APNS token on server to %@
Config Request returned an error: %@
Configuration returned by server is invalid: %@
Got new configuration dict from server: %@
_sendConfigRequestWithCredentials: update push manager
Unexpected response from server: %ld (%{public}@)
no configuration URL for account
syd/syncIfPossible
(%@) Apparently we are doing reachability
New blockedOnNetworkToSyncNow event occurred.
Synchronization starting now, scheduler:%@
A synchronization is already ongoing - will retry later - scheduler:%@, tasks:%@
New blockedOnSyncQueueToSyncNow event occurred.
- No valid account %d %@ %@
Time to sync, scheduler:%@, tasks:%@
- No valid credentials for KVS %@ %@
- No valid serverURL for KVS %@ %@
Network is unreachable. Ending sync if possible
This is our first sync for %@. Testing service availability now
scheduler:%@, isSynchronizing:%@, someSchedulerIsSynchronizing:%@, syncIdentifier:%lu
Synchronization start, scheduler:%@, last-configuration-request:%.0f
Setting the environment, scheduler:%@
Updating account related managers
account %s cellular
got a user for the first time
got a brand new user - will reset local storage
back to previous user or non-user change
Fixing push token
account deleted or dataclass disabled
Scheduler ignoring accountDidChange, not yet awake.
Account did change %d
**** Needs to update push token on server *****
Received simulated push notification
**** Received push notification for service '%@' ****
Incorrect payload for push notification: %@
**** Received push notification, scheduler:%@, service:%@, truncated:%@, stores:%@
Incorrect identifier for push notification: %@
**** will sync app:%@/%p because it may have some distant changes, scheduler:%@
**** deferring sync for app:%@/%p since we have pending tracking messages, scheduler:%@
**** some apps have distant changes, computing next soon synchronization, scheduler:%@
syd/networkStateDidChange
(%@) networkStateDidChange Notification Recieved (%@)
We know we are reachable, let's start our sync now!
**** Network state did change, computing next soon synchronization, scheduler:%@
_networkStateDidChange _syncTasksByApp _startSynchronizationSoon
**** we need to update ourself against server, scheduler:%@
_networkStateDidChange _needsToDoSomeUpdateWithServerNow _startSynchronizationSoon
syd/networkTypeDidChange
(%@) networkTypeDidChange Notification Recieved
app needs to synchronize soon: %@
**** app:%@ wants to synchronize, computing next soon synchronization, scheduler:%@
apps:%@, scheduler:%@, cause:"%@"
Setting apps to registered applications for scheduler:%@: %@
**** deferring sync for scheduler:%@ since we have pending tracking messages, apps:%@
**** some apps want to synchronize, starting synchronization if possible, scheduler:%@, apps:%@
**** deferring sync for scheduler:%@ since we have pending tracking messages, tag:%@, apps:%@
**** some apps want to synchronize, computing next soon synchronization, scheduler:%@, apps:%@
app:%@, scheduler:%@
Will sync app:%@ because it's similar to app:%@, scheduler:%@
**** deferring sync for scheduler:%@ since we have pending tracking messages, app:%@
should sync app:%@, scheduler:%@
**** some apps similar to app:%@ want to synchronize, computing next soon synchronization, scheduler:%@
scheduler:%@, tasks:%@
scheduler:%@, apps:%@
scheduler:%@, waitingToIdle:%@
%@ shutdown
Daemon will need to be relaunched as soon as possible
Daemon is unable to re-schedule itself but it needs to synchronize soon - will just wait to be relaunched by launchd
Server will be relaunched as usual
%@ (%lld): %@
Additional store - %@ detected in _apps - %@
Default store - %@ detected in AdditionalStores - %@
Updating store identifiers%s
Additional stores: %@
%@ has been removed from syncing apps
%@ has changed its store identifier
Found new store for app:%@/%p
Store (%@) for Bundle (%@) Not available on this platform.
File %@ will be deleted in a future version.
Refreshing store identifiers is delayed
Error reading persistence manager storage, %@
Creating persistence manager from scratch.
Error writing persistence manager storage, SYDServer now nil
Error writing persistence manager storage, SYDPersistenceManager nil
Error writing persistence manager storage, unable to create url for path %@
Error writing persistence manager storage, serializing persistence manager %@ encountered error %@
Error writing persistence manager storage, writing to %@ encounted error %@
Found registered application: %@
%@ refresh status at launch: %d
Writing %@
Error writing daemon storage to %@: %@
Store (%@) for Bundle (%@) marked as not available on this platform.
%@ is not defined as an additional store for %@
can't find app for bundleID %@
No peer found for message %@
No bundleID found for message %@
Can't get application info for %@
%@ is already registered
Registering %@ for store identifier %@
Created new app, setting up scheduler and saving to disk %@ %@
Can't register additional store %@/%@
Can't register %@
Unregistering %@
%@ is already unregistered
Exiting (Shutdown message)
Can't track unregistered application for %@ - %@
Synchronizing (tracking) with remote for %@ (%@)
Need to create container base directory for SyncedPreferences: %@
Error migrating synced preferences for %@: Couldn't create synced preferences directory %@. Error = %@
Container Synced Preferences file %@ %s
Migrating Synced Preferences file from %@ to %@
Removing existing preferences file in container for forced migrate: %@
Error doing forced migration for synced preferences for %@: Failed to remove existing container file %@. Error = %@
Error migrating synced preferences for %@: Tried to migrate original file %@ to container file %@. Error = %@
Skipping migrate of Synced Preferences file %@, already exists in container, and force is NO
Skipping migrate of Synced Preferences file %@, does not exist in system location
Calling synchronizeApplicationsWithServerSoon on scheduler %@ for app %@ for %@
additional store identifiers: %@
Houston, we have a problem, %@ directory does not exist. Bailing from migrate.
Asked to migrate %@, bundle ids are %@
bundle identifier is %@, app info is %@
Ending main transaction
Restarting main transaction
Shutdown took too long. Aborting self.
Usage for this session is:
Server shutdown takes too long
reseting timer on storing apps to disk
_postExternalChangeNotification
Unable to create listener
listener connection went invalid
unexpected error event: %p
unexpected event type: %p
got a new connection from %@
got message "%@" from %@, [b:%@,s:%@,ui:%@]
Invalid message %{public}@ for %@
Invalid message %{public}@ from %@
Received message with no name from %@
app: %@
received memory warning
Unable to check peer's connection for audit token
%@ is restricted (TCC) from cloud sync
allowed:%@, bundleID:%@
%@ is restricted (MC) from cloud sync
allowed:%@, hasTCCInfo:%@, hasTCCInfoGranted:%@, bundleID:%@, bundleURL:%@
connection to SYD service went invalid
connection to SYD service interrupted
unexpected error connecting to SYD service
unexpected event connecting to SYD service
error sending message %@ to SYD server
no reply sending message %@ to SYD server
error unable to construct message from %@
got a reply from the SYD daemon,
message:%@,
reply:%@
session:%@, task:%@, url:%@, error:%@
session:%@, task:%@, url:%@, bytesSent:%{bytes}lld, totalBytesSent:%{bytes}lld/%{bytes}lld
session:%@, task:%@, url:%@, HTTPStatus:%ld, HTTPHeaders:
received an invalid response from the server for url:%@
session:%@, task:%@, url:%@, length:%{bytes}lu (%lu)
Error serializing request for url:%@: %@
Error gzipping body request for url:%@
Sending server request, taskDescription:%@, url:%@, HTTPMethod:%@, HTTPHeaders:
cancelling request %@
cancelling task: %@, url: %@
url:%@, totalLength:%{bytes}lu (%lu)
finished server request, taskDescription:%@, url:%@, error:%@
Initializing store with container=%@ coreDataStore=%@
Fetched %@object for key %{private}@
Setting %@ for key (%{private}@) in (%@)
Unable to get or create value for key %{private}@ in %@
Assigned new record name (%@) for (%{private}@) in (%@)
alwaysSaveRecordZones=YES, saving record zone %@
Removing object for key (%{private}@) in (%@)
Trying to remove object for a key that doesn't exist (%{private}@)
%@ synchronizing
Finished fetching changes. Now modifying pending records
Saving pending changes to cloud
Error modify pending records: %@
Finished modifying pending records
Fetching changes from cloud
Error fetching records: %@
Finished fetching changes
Deleting data from cloud for %@
Error fetching all zones for deleting data from cloud: %@
Error deleting deleting data from cloud: %@
Finished deleting data from cloud
Marking all key values as needing to be uploaded for all stores
Marking all key values as needing to be uploaded for store (%@)
Deleting sync engine metadata for %@
Generating record to save for %@
No keyValue for recordID %@, so we're returning nothing
Did save sync anchor record %@
Did save keyValue record %@
No keyValue by record name after saving %@
Saved record %@ for key (%{private}@) in (%@)
Failed to save record %@: %@
Conflict saving key-value record %@
Not merging data from server record %@ because it has an asset
Resolving conflict for record %@
No server record when resolving conflict saving record %@
Unknown item saving key-value record, will re-upload %@
Couldn't find keyValue for record %@
Zone not found saving %@. Saving zone and re-saving record
Failed to save %@ because zone was user-purged
Missing Manatee identity saving %@, deleting the zone now
Manatee unavailable trying to save %@. Retrying eventually
Error saving record %@: %@
Deleted sync anchor record %@
Deleted keyValue record %@
Error deleting record %@: %@
Fetched sync anchor record %@
Record was fetched %@ for key (%{private}@) in (%@)
Local record name (%@) and fetched record name (%@) do not match for key (%{private}@)
Creation dates were exactly the same when de-duplicating. Comparing record names
Local record was created first, choosing local record name %@
Remote record was created earlier, choosing remote record name %@
Telling sync engine to delete duplicate record %@ and save the chosen record %@
KeyValue record was deleted: %@
Posting notification for removed key (%{private}@)
Unable to find key to post notification
Sync anchor record was deleted: %@
Saved zones: %@
Error saving record zones: %@
Deleted zone %@ and re-uploading key values
Failed to delete zone %@
Zone was purged: %@
Deleting local persisted data for %@
syd/xpc
lost connection with peer %@
Exiting (XPC Termination)
unexpected connection error with peer %@: %@
%@ releasing connection %p
%@, Found proposed bundleIdentifier:%@
%@, Will use the proposed bundleIdentifier:%@
Process with pid %i is not authorized to access %@
unexpected message from peer %@: %p
BID CPCopyBundleIdentifierFromAuditToken fallback - bundleIdentifier:%@, isProcessName:%d
BID SecTaskCopyValueForEntitlement fallback - bundleIdentifier:%@
BID Can't get the bundle identifier for process %d
Unable to get %@ entitlement for client task. Error: %@
Unable to create security task from audit token to get %@ entitlement
Invalid value for %@ entitlement: %@
Error %i to get traced info
**** Found last sync dates for %@ that are in the future. Resetting our knowledge for last sync dates
**** we already have synced recently %.0fs vs. %.0fs
app:%@/%p, reason:%@, nextSyncReason:%@
app:%@/%p, reason:%@, syncIdentifier:%lu
app:%@/%p, reason:%@, syncIdentifier:%lu, result:%s
Resetting update requests for %@
Failed to schedule server for relaunch in %is
Server will be relaunched in %is
Resuming connection %@
Connection interrupted %@
Connection invalidated %@
Caching entitlement for %@ for %@
Checking if process %d is entitled for store ID %@
Process %d is entitled for store %@ via %@
Process %d is NOT entitled for store %@
Handling setObject (%{private}@) for store=%@ type=%d
Handling objectForKey (%{private}@) for store=%@ type=%d
Handling removeObject (%{private}@) for store=%@ type=%d
Handling sync for store=%@ type=%d
No sync manager for store=%@ type=%d
Handling dictionaryRepresentation for store=%@ type=%d
Handling deleteData for store=%@ type=%d
Asked to register for store %@
Registering for store %@
Generating change dictionary for token %@ in store (%@) for %@
Unable to get current change token: %@
Unable to get changed keys: %@
Generated change dictionary for %ld changes
kvs/notify-store-change
No store ID for sync manager change notification %@
Received notification for registered store ID %@ in %@
Error getting change token to send change dictionary: %@
Failed to notified client about changes to store ID %@: %@
Successfully notified client about changes to store ID %@
Received a notification about a changed sync manager, but the notification object is a %@
kvs/notify-account-change
Notifying client that account did change %@
Error getting change token to notify about account change: %@
Error obtaining async remote object proxy: %@
Error obtaining remote object proxy: %@
Attempted to send reply without a reply context: %@
**** Found last sync dates that are in the future. Resetting our knowledge for last sync dates
Marking a new sync entry in global sync history
Resetting global update requests
Error decoding plist value data: %@
%@: no account
KEYCHAIN is using UNVETTED
%@: %@ is not enabled for %@
Trying to access key value for nil key
Fetching keyValue for (%{private}@) in (%@) create=%d
Existing keyValue for (%{private}@) in (%@)
Creating new keyValue for (%{private}@) in (%@)
No keyValue for (%{private}@) in (%@)
Fetching keyValue for record name (%@) in (%@)
Existing keyValue for record name (%@) in (%@)
No keyValue for record name (%@) in (%@)
Trying to save nil keyValue
Saving keyValue for (%{private}@) in (%@) excludeFromChangeTracking=%d
Error saving context while saving (%{private}@) in (%@): %@
Trying to remove value for nil key
Removing keyValue for (%{private}@) in (%@)
Deleting managed key value for (%{private}@) in (%@)
Error saving context while removing (%{private}@) in (%@): %@
No managed key value to delete for (%{private}@) in (%@)
Trying to remove value for nil recordName
Removing keyValue for record name (%@) in (%@)
Deleting managed key value for record name (%@) in (%@)
Error saving context while removing (%@) in (%@): %@
No managed key value to delete for record name (%@) in (%@)
Deleting data for stores matching predicate (%@)
Failed to delete data for stores matching predicate (%@): %@
Deleted data for stores matching predicate (%@)
Failed to fetch record names for store (%@): %@
Fetched a key value with no record name
Failed to fetch all store identifiers: %@
Clearing server records for store (%@)
No managed store for store identifier (%@), so there's nothing to do
Failed to clear server records for store (%@): %@
Cleared server records for store (%@)
Error fetching count of key values with predicate %@: %@
Getting current token for (%@)
Trying to get change token with no persistent store
No current persistent history token
Failed to archive history token to NSData: %@
Getting changed keys for store (%@) with%@ token
Error unarchiving token from data: %@
Received error about a bad persistent history token. Throwing it away and trying again: %@
Error fetching persistent history for (%@): %@
Received unexpected type of persistent history result (%@)
Expected a list of %@, but got %@
Found %ld persistent history transactions in store (%@)
Found multiple stores in a single transaction
We have some deleted keys, but no store object ID
Error fetching store properties when validating deleted keys: %@
No store identifier when validating deleted keys
Error fetching properties when fetching change history: %@
Found %ld changed keys for store (%@)
Clearing server records for all stores
Failed to clear server records for all stores: %@
Cleared server records for all stores
Saving ACAccount identifier (%@)
Failed to save ACAccount identifier: %@
Saved ACAccount identifier
Generating dictionary for store (%@)
No value for key (%{private}@) when generating dictionary for store (%@)
Saving sync engine metadata (length=%ld)
Error saving sync engine metadata: %@
Retreiving sync engine metadata
Found multiple managed databases in the CoreData database
Error fetching managed database: %@
Creating new managed database
Found multiple stores for the same identifier: %@
Error fetching managed store: %@
Creating new managed store %@
Found multiple key values for the same key (%{private}@) in store (%@)
Creating new managed key value for (%{private}@) in (%@)
Found multiple key values for the same record name (%@) in store (%@)
Error fetching managed keyValue with predicate %@: %@
Loading persistent store
Permission error loading persistent store: %@
Error loading persistent store: %@
Loaded persistent store
Unable to find SyncedDefaults framework bundle
Loading managed object model
Unable to get URL for managed object model
Destroying persistent store at %@
Error destroying persistent store: %@
Destroyed persistent store at %@
Database was corrupt with NSFileReadCorruptFileError: %@
Database was corrupt with SQLITE_NOTADB: %@
Database was corrupt with SQLITE_CORRUPT: %@
Destroying corrupt database
v8@?0
invalid message '%s'
parameter
* %s:
* %s: no response
com.apple.syncdefaultsd.signal
com.apple.distnoted.matching
v16@?0@"NSObject<OS_xpc_object>"8
com.apple.syncdefaultsd.daemon.wake
UserInfo
bundleIDs
sqlite
com.apple.kvs.daemon.queue
com.apple.kvsd
/AppleInternal/BuildRoot/Library/Caches/com.apple.xbs/Sources/SyncedDefaults_Sim/SyncedDefaults-326/SyncedDefaults/daemon/CloudKit/SYDDaemon.m
<Unknown File>
Connection %@ is not entitled for store identifier=%@ type=%d
NADA
com.apple.KeyValueService
com.apple.KeyValueService.EndToEndEncrypted
Unable to get Library directory for database: %@
SyncedPreferences
com.apple.kvs
Unable to create directory for database: %@
%@-%@
(NO ACCOUNT)
com.apple.kvs.periodic-analytics
containerIdentifier
containerEnvironment
storeIdentifier
keyValueCount
com.apple.kvs.storeState
storeCount
com.apple.kvs.containerState
hash
TQ,R
superclass
T#,R
description
T@"NSString",R,C
debugDescription
xpcListener
T@"NSXPCListener",&,N,V_xpcListener
queue
T@"NSObject<OS_dispatch_queue>",&,N,V_queue
clientConnections
T@"NSMutableSet",&,N,V_clientConnections
syncManagers
T@"NSMutableDictionary",&,N,V_syncManagers
primaryAppleAccountIdentifierOverride
T@"NSString",C,N,V_primaryAppleAccountIdentifierOverride
SYDAccountDidChangeNotification
dataclassesDisabledForCellular
syd_personID
T@"NSString",R,N
syd_primaryEmail
syd_isPrimaryAccount
TB,R,N
syd_isPrimaryEmailVerified
syd_needsToVerifyTerms
syd_authToken
apsEnv
production
configURL
?service-id=%@
v24@?0q8@"NSError"16
user
T@"NSString",&,N,V_user
userName
T@"NSString",&,N,V_userName
accountProperties
T@"NSDictionary",&,N,V_accountProperties
authToken
T@"NSString",&,N,V_authToken
account
T@"ACAccount",&,N,V_account
sydAccount
T@"SYDAccount",W,N,V_sydAccount
apsEnvironment
 (no cellular)
%@ %@ %@ %d
allowsCellular
TB,N,V_allowsCellular
needsToReloadAccount
TB,N,V_needsToReloadAccount
registeredForNotifications
TB,N,V_registeredForNotifications
valid
TB,R,N,GisValid
serverURL
T@"NSURL",R,N
invalidCredential
T@"NSString",&,N,V_invalidCredential
knowledgeUUID
sequenceNumber
clientsForBundleID
v24@?0@"LSBundleProxy"8^B16
supportsSecureCoding
TB,R
T@"NSUUID",&,N,V_knowledgeUUID
T@"NSNumber",&,N,V_sequenceNumber
T@"NSMutableDictionary",&,N,V_clientsForBundleID
cacheableProgressCallback
T@?,C,N,V_cacheableProgressCallback
<%@: %p; key=%@ storeIdentifier=%@%@%@>
 recordName=
<%@: %p; storeIdentifier=%@%@%@>
Tried to set invalid value '%@' of class '%@'
Trying to get a record ID for a keyValue that has not been assigned a record name yet: %@
KVSRecord
EncryptedKeyValue
localModificationDate
value
assetValue
valueModificationDate
valueData
valueDataAsset
com.apple.kvs.temporary-assets
T@"NSString",&,N,V_key
T@"NSString",&,N,V_storeIdentifier
T@,&,N,V_value
T@"NSDate",&,N,V_valueModificationDate
serverSystemFieldsRecordData
T@"NSData",&,N,V_serverSystemFieldsRecordData
recordName
T@"NSString",&,N,V_recordName
serverSystemFieldsRecord
T@"CKRecord",C,N
recordID
T@"CKRecordID",R,N
SYDApplicationDidChangeNotification
com.apple.syncedpreferences.pim
com.apple.syncedpreferences.forced
com.apple.syncedpreferences
com.apple.Safari.SyncedTabs
com.apple.security.cloudkeychainproxy3
com.apple.syncedpreferences.keychain
com.apple.sbd3
com.apple.sbd.emcs
com.apple.AssistiveTouch
com.apple.VoiceOverTouch
com.apple.ZoomTouch
com.apple.SpeakSelection
com.apple.HearingAids
com.apple.Accessibility.TouchAccommodations
com.apple.Accessibility.SwitchControl
com.apple.mediaaccessibility
com.apple.mediaaccessibility.public
com.apple.cmfsyncagent
com.apple.CoreSuggestions
com.apple.coretelephony
com.apple.kvspong.alwayson
com.apple.kvspong.pim
com.apple.photos.kvstore
HOME
NSUserDefaults
NSUbiquitousKeyValueStoreIsDaemon
NSUbiquitousKeyValueStoreNotificationName
com.apple.preferences.kvstorechange
SYDDaemonAdditionalKVStoreOptionsKey
com.apple.*
SYDDaemonOptionIsAvailableOnThisPlatformKey
Container
com.apple.sbd
NSUbiquitousKeyValueStoreIdentifier
com.apple.sbd.kvstorechange
com.apple.security.cloudkeychainproxy.kvstorechange3
kvsutil
com.apple.kvsutil.kvstorechange
accountsd
com.apple.accounts
com.apple.accountsd.kvstorechange
com.apple.finder
com.apple.accessibility.AccessibilityUIServer
com.apple.accessibility.AccessibilityUIServer.kvstorechange
com.apple.VoiceOverTouch.kvstorechange
com.apple.TextInput.kbd
com.apple.TextInput.kbd.kvstorechange
com.apple.inputmethod.kbd
com.apple.nanoweatherprefsd
com.apple.nanoweatherprefsd.kvstorechange
com.apple.weather
com.apple.springboard
com.apple.springboard.kvstorechange
com.apple.backboardd
com.apple.backboardd.kvstorechange
com.apple.datamigrator
com.apple.datamigrator.kvstorechange
com.apple.CoreSuggestions.kvstorechange
com.apple.cmfsyncagent.kvstorechange
com.apple.accessibility.heard
com.apple.accessibility.heard.kvstorechange
com.apple.wifid
com.apple.wifid.kvstorechange
com.apple.wifid.known-networks
com.apple.coretelephony.kvstorechange
com.apple.cloudrecents.CloudRecentsAgent
com.apple.cloudrecents.kvstorechange
com.apple.mail.recents
com.apple.messages.recents
com.apple.eventkit.locations
com.apple.corerecents.map-locations
com.apple.passbook.locations
com.apple.facetime.recents
com.apple.calendar.recents
com.apple.mediaaccessibilityd
com.apple.mediaaccessibilityd.kvstorechange
com.apple.email.maild
com.apple.maild.kvstorechange
com.apple.mail.threadinfo
com.apple.mail.vipsenders
com.apple.tipsd
com.apple.tipsd.kvstorechange
com.apple.touristd
com.apple.touristd.kvstorechange
additional-stores
%@(%@)
kvstore-identifier
scheduling
plistPath
%@-%@.plist
Library/SyncedPreferences
%@.plist
NSUbiquitousKeyValueStoreScheduler
<%@ %p [%@ - %@]>
unknown
values
changecount
initialsync
versionid
client discarded journal before %lld
initial sync
reset
client changed keys: %@
dirtykeys
bundle-id
kvstore-id
registry-version
name
data
delete
keys
B32@?0@8Q16^B24
before-merge
before-merge, local-cache
before-merge, remote-changes
after-merge
*** attempt to create a temporary id buffer which is too large or with a negative count (%lu) -- possibly data is corrupt
*** attempt to create a temporary id buffer of length (%lu) failed
-[SYDApplication mergeLocalDictionary:remoteDictionary:baseDictionary:conflictPolicy:]
/AppleInternal/BuildRoot/Library/Caches/com.apple.xbs/Sources/SyncedDefaults_Sim/SyncedDefaults-326/SyncedDefaults/daemon/SYDApplication.m
changedKeyCount + removedKeyCount + addedKeyCount <= countSum
NSUserDefaultsCollectionMergePolicy
NSUserDefaultsMergeCollections
NSUserDefaultsReplaceCollections
NSUserDefaultsConflictResolutionPolicy
NSUserDefaultsKeepCloudOnConflict
NSUserDefaultsKeepLocalOnConflict
collectionMergePolicies
conflictResolutionPolicies
Inactive Application
SyncedDefaults
Synchronization with server failed
Distant storage disappeared - resetting sync state
registry-status
server status: %ld
-[SYDApplication _stopSynchronizingWithServerChanges:]_block_invoke
!isKeyDirtyPending
has changed
has been deleted
updateStatus : %ld
exceeds server quota
was successful
produced a conflict
v36@?0@"NSString"8q16@"NSData"24B32
update-status
deleted
server changed keys: %@
full reset
sync state reset
kvstore: %@
[scheduling]
bundleIdentifier
T@"NSString",&,N,V_bundleIdentifier
schedulerIdentifier
T@"NSString",&,N,V_schedulerIdentifier
additionalChangeNotificationName
T@"NSString",&,N,V_additionalChangeNotificationName
shouldResetOnFirstSync
TB,N,V_shouldResetOnFirstSync
plistURL
T@"NSURL",&,N,V_plistURL
plistCache
T@"NSMutableDictionary",&,N,V_plistCache
pendingDirtyKeys
T@"NSMutableSet",&,N,V_pendingDirtyKeys
pendingLocalData
T@"NSMutableDictionary",&,N,V_pendingLocalData
changeCount
Tq,N,V_changeCount
initialSyncChangeCount
Tq,N,V_initialSyncChangeCount
journal
T@"SYDJournal",&,N,V_journal
T@"SYDApplicationScheduling",&,N,V_scheduling
debugCount
TQ,N,V_debugCount
daemon
TB,N,V_daemon
isAdditionalStore
TB,N,V_isAdditionalStore
simulatePushNotification
TB,N,V_simulatePushNotification
writeTracker
T@"SYDWriteTracker",R,N,V_writeTracker
scheduler
T@"SYDScheduler",&,N,V_scheduler
T@"NSString",C,N,V_storeIdentifier
inactive
TB,N,V_inactive
isAvailableOnThisPlatform
TB,N,V_isAvailableOnThisPlatform
developmentApp
TB,R,N,GisDevelopmentApp
displayIdentifier
identifier
type
/AppleInternal/BuildRoot/Library/Caches/com.apple.xbs/Sources/SyncedDefaults_Sim/SyncedDefaults-326/SyncedDefaults/daemon/SYDStoreID.m
Trying to instantiate a %@ without an identifier
<%@: %p; identifier=%@ type=%d>
T@"NSString",C,N,V_identifier
Tq,N,V_type
SYDNetworkStateDidChangeNotification
SYDNetworkTypeDidChangeNotification
-[SYDNetworkStateManager dealloc]
/AppleInternal/BuildRoot/Library/Caches/com.apple.xbs/Sources/SyncedDefaults_Sim/SyncedDefaults-326/SyncedDefaults/daemon/SYDNetworkStateManager.m
_reachability == NULL
com.apple.syncdefaultsd.network-state-manager
service is reachable
service is unreachable
verifying reachability
reachability is unneeded
????
reachability
T^{__SCNetworkReachability=},N,V_reachability
serviceState
Ti,N,V_serviceState
stateIsKnown
TB,N,V_stateIsKnown
isStarted
TB,N,V_isStarted
reachabilityFlags
TI,N,V_reachabilityFlags
transaction
T@"NSObject<OS_os_transaction>",&,N,V_transaction
initialReachabilityTestFailedBlock
T@"SYDPerformBlock",&,N,V_initialReachabilityTestFailedBlock
serviceHostname
T@"NSString",C,N,V_serviceHostname
serviceStateDescription
com.apple.syncdefaultsd-sim
bytesWritten
numberOfWrites
TQ,N,V_bytesWritten
TS,N,V_numberOfWrites
enabled
TB,N,V_enabled
clientsByIdentifier
T@"NSMutableDictionary",&,N,V_clientsByIdentifier
v32@?0@"NSString"8@"SYDWriteTrackerClient"16^B24
SYDPushManagerNeedsUpdateNotification
SYDPushManagerDidReceivePushNotification
environment
lastUpdateOnServer
refreshInterval
lastTokenOnServer
com.apple.syncdefaultsd-sim.apsmanagement
com.apple.iphonesimulator.triggercloudsync
-[SYDPushManager dealloc]
/AppleInternal/BuildRoot/Library/Caches/com.apple.xbs/Sources/SyncedDefaults_Sim/SyncedDefaults-326/SyncedDefaults/daemon/SYDPushManager.m
!_apsConnection
com.apple.syncdefaultsd-sim.push
dsid
ignored
com.me.keyvalueservice
opportunistic
T@"NSString",&,N,V_environment
Td,N,V_lastUpdateOnServer
T@"NSData",&,N,V_lastTokenOnServer
lastSeenToken
T@"NSData",&,N,V_lastSeenToken
Td,N,V_refreshInterval
apsConnection
T@"APSConnection",&,N,V_apsConnection
currentAPSConnectionEnvironment
T@"NSString",&,N,V_currentAPSConnectionEnvironment
peerCount
Tq,N,V_peerCount
pushTopicState
T@"NSString",&,N,V_pushTopicState
trackedApps
T@"NSMutableSet",&,N,V_trackedApps
_SYDSchedulerDidUpdateConfigurationDictionaryNotification
backgroundReschedules
config
usage
lastRequestForConfig
lastModifiedHeaderForConfig
trackChanges
disableThrottling
lastKnownUser
wasDisabledLastTime
pushNotifications
awake
configurationDict
lastModified
Dist
Local
Launch
v16@?0@"SYDSyncTask"8
-[SYDScheduler _endSynchronizationWithRemainingTasks:response:sessionError:]
/AppleInternal/BuildRoot/Library/Caches/com.apple.xbs/Sources/SyncedDefaults_Sim/SyncedDefaults-326/SyncedDefaults/daemon/SYDScheduler.m
_isSynchronizing
still some apps in the queue
%ld on %@
%@://%@:%@/
%@://%@/
rescheduling pending sync requests
-[SYDScheduler _schedulePendingSyncRequests]
apps.count == 1
message != nil && apps.count == 1
0 && "Invalid tag"
-[SYDScheduler _beginSyncWithTrackingForApps:reason:message:soon:]
Expected non-0 capacity
status
status-msg
no status message
apps
q24@?0@8@16
Expected non-nil server request for %@
Expected non-nil completion block for %@
No valid credential for KVS
v32@?0@"NSHTTPURLResponse"8@"NSData"16@"NSError"24
%@:%@
Basic %@
Authorization
X-Apple-MMe-Host
Retry-After
no delay specified
apns-token
sync
synchronizing all apps just in case
Network unreachable
v16@?0@"NSDictionary"8
-[SYDScheduler _sendSyncRequestWithCredentials:]
forcing a sync in case we missed a push
No valid credential for KVS - Server responded with 401 - retry later
-[SYDScheduler _sendSetAPNSRequestWithCredentials:]
setAPNSToken
Last-Modified
SYDRemotePreferencesConfigurationDidChangeNotification
-[SYDScheduler _sendConfigRequestWithCredentials:]
-[SYDScheduler _startSynchronizationIfPossibleHelper]
synchronizeIfPossible && "Expected non-nil activity"
No valid account for KVS - %d - %@
No valid credentials for KVS
No valid serverURL for KVS
allows
does not allow
No valid account for KVS - Account Changed
needs to update token on server
received simulated push notification
service-id
truncated
received anonymous push notification
-[SYDScheduler _networkStateDidChangeHelper]
false
-[SYDScheduler synchronizeApplicationsWithServerNow:reason:message:description:]
-[SYDScheduler synchronizeApplicationsWithServerSoon:reason:message:description:]
Application synced recently
scheduler is idle (%@)
Scheduler exiting
scheduler has been woken up (%@)
-[SYDScheduler endTransaction]
_transactionCount > 0
_isWaitingToIdleBlock == nil
current device state changed
refetch configuration
WARNING: FULL LOGGING IS ENABLED
account: %@ (%@) - push environment: %@
       : %@
configuration URL: %@ - never updated
configuration URL: %@ - last updated %0.fs ago
warning: old style configuration
no account configured for sync
push token: %@ on %@ environment (needs to update server)
push token: %@ on %@ environment (next update to server in %.0fs)
no push token
last push notification received %.0fs ago
current transactions count: %ld
tracking full change journal
throttling is disabled
currently synchronizing
last synchronization was %.0fs ago
planned synchronization
no planned synchronization
will synchronize in %.0fs (delayed)
will synchronize immediately
will synchronize soon (in %.0fs)
service status for %@: %@%s
 (does not allow Cellular connection)
(daemon was rescheduled %lu times)
managed clients: %@
starting journal (%@)
 o: %lu / i: %lu 
 (D: %lu L: %lu A: %lu J: %lu)
<%@ %p [%@]>
T@"NSString",&,N,V_identifier
debugName
T@"NSString",&,N,V_debugName
T@"SYDAccount",&,N,V_account
T@"NSString",&,N,V_lastKnownUser
TB,N,V_wasDisabledLastTime
syncTasksByApp
T@"NSMapTable",&,N,V_syncTasksByApp
rank
TQ,N,V_rank
isAwake
TB,N,V_isAwake
isSynchronizing
TB,N,V_isSynchronizing
hadASuccessfulSync
TB,N,V_hadASuccessfulSync
blockedOnNetworkToSyncNow
T@"NSObject<OS_os_activity>",&,N,V_blockedOnNetworkToSyncNow
blockedOnSyncQueueToSyncNow
T@"NSObject<OS_os_activity>",&,N,V_blockedOnSyncQueueToSyncNow
needsToEndTransaction
TB,N,V_needsToEndTransaction
syncIdentifier
TQ,N,V_syncIdentifier
isSyncCancelled
TB,N,V_isSyncCancelled
cancelledApps
T@"NSMutableSet",&,N,V_cancelledApps
syncWithTrackingRequestsByBundleIdentifier
T@"NSMutableDictionary",&,N,V_syncWithTrackingRequestsByBundleIdentifier
pendingSyncRequests
T@"NSMutableArray",&,N,V_pendingSyncRequests
willStartSynchronizingSoonBlock
T@"SYDPerformBlock",&,N,V_willStartSynchronizingSoonBlock
nextSoonSynchronization
Td,N,V_nextSoonSynchronization
lastSeenPrimaryURL
T@"NSURL",&,N,V_lastSeenPrimaryURL
redirectedURL
T@"NSURL",&,N,V_redirectedURL
redirectCount
TQ,N,V_redirectCount
T@"SYDGlobalScheduling",&,N,V_scheduling
minimalDelayedTime
Td,N,V_minimalDelayedTime
synchronizeAllAppsBlock
T@"SYDPerformBlock",&,N,V_synchronizeAllAppsBlock
T@"NSString",&,N,V_lastModifiedHeaderForConfig
pushManager
T@"SYDSchedulerPushManager",&,N,V_pushManager
networkStateManager
T@"SYDNetworkStateManager",&,N,V_networkStateManager
backgroundScheduler
T@"SYDBackgroundScheduler",&,N,V_backgroundScheduler
backgroundRescheduleCount
TQ,N,V_backgroundRescheduleCount
lastPushNotification
Td,N,V_lastPushNotification
lastSynchronization
Td,N,V_lastSynchronization
syncIndicatorStart
Td,N,V_syncIndicatorStart
journalLog
T@"NSObject<OS_os_log>",&,N,V_journalLog
transactionCount
TQ,N,V_transactionCount
isIdle
TB,N,V_isIdle
isWaitingToIdleBlock
T@"SYDPerformBlock",&,N,V_isWaitingToIdleBlock
usagePerDisplayIdentifier
T@"NSMutableDictionary",&,N,V_usagePerDisplayIdentifier
sessionUsagePerDisplayIdentifier
T@"NSMutableDictionary",&,N,V_sessionUsagePerDisplayIdentifier
parameters
T@"SYDSchedulingParameters",&,N,V_parameters
Td,N,V_lastRequestForConfig
currentServerRequest
T@"SYDServerRequest",&,N,V_currentServerRequest
server
T@"SYDServer",N,V_server
isWaitingToIdle
tracksAllChanges
TB,N,V_tracksAllChanges
TB,N,V_disableThrottling
tracksUsage
TB,N,V_tracksUsage
SYDInstalledApplicationsDidChangeNotification
com.apple.syncdefaultsd.server.initial
launched with no direct client
launched by %@
launched for store %@
launched by unknown %@ (%@)
no store identifier
launched by unknown peer
launched by push notification for (%@)
launched by background job request (%@)
com.apple.syncedpreferences.push
com.apple.syncedpreferences.writetracking
-[SYDServer _appendApp:new:]
/AppleInternal/BuildRoot/Library/Caches/com.apple.xbs/Sources/SyncedDefaults_Sim/SyncedDefaults-326/SyncedDefaults/daemon/SYDServer.m
app.isAvailableOnThisPlatform
 (delayed)
v24@?0@"NSString"8@"SYDApplication"16
v24@?0@"SYDApplication"8@"NSDictionary"16
new or updated store
launched because installed apps did change
com.apple.syncdefaultsd.installed-apps-did-change
Library/SyncedPreferences/com.apple.syncedpreferences.plist
Library/SyncedPreferences/com.apple.syncedpreferences.persistencemanager.plist
B16@?0@"SYDApplication"8
com.apple.syncdefaultsd.loaded-apps-from-disk
v16@?0@"SYDApplication"8
-[SYDServer queueSyncForSchedulerIdentifier:]
_someSchedulerIsSynchronizing
-[SYDServer performSyncForNextQueuedScheduler]
!_someSchedulerIsSynchronizing
changes
asked by client
%@ is not defined as an additional store for %@
%@ has no valid %@ entitlement
com.apple.developer.ubiquity-kvstore-identifier
incorrect parameter
%@: %@
invalid parameter
%@: %@
%@ is unregistered. Information: %@
unknown app: 
v16@?0@"SYDScheduler"8
done
** %@:
Push topic state: %@
Connected apps tracked for push topic: %@
Server started %0.fs ago
Request/Response No Longer Retained For Debugging
enablesyncindicator No Longer Supported
disablesyncindicator No Longer Supported
no usage data
WithMessage:
Missing bundleIdentifier in synchronization tracking
Can't track unregistered application
com.apple.syd.trackUnregisteredApplication
The app is restricted from cloud syncing
New tracking synchronization request replacing this one
asked by client with tracking
pong
already exists
does not exist
Forcing sync on migration for %@
%@/Library/SyncedPreferences
Error migrating, %@ does not exist
%@ = %s
%@, %@ = %s
*** Migrated, container is %@. App bundle identifier is %@, app info:
Results = %@
*** No container, no need to migrate. App bundle identifier is %@, app info:
*** App bundle identifier is %@, no info found for app
Missing bundle identifier[s] to migrate. Usage: migrate[Force]:com.apple.whatever[,com.apple.other,...]
%s: HOME = %@, All apps: %@
-[SYDServer allApplicationInfoWithMessage:]
(all syncs are delayed for at least %.0fs)
No information
com.apple.syncdefaultsd.server.main
com.apple.syncdefaultsd-sim.emergencyqueue
com.apple.syncdefaultsd-sim.external-change-notification-shutdown
com.apple.syncdefaultsd.store-apps-immediately
com.apple.syncdefaultsd.store-apps
com.apple.syncdefaultsd.external-change-notification-request
SYDRemotePreferencesSourceDidChangeExternally
com.apple.
bundleURL
appByBundleIdentifier
T@"NSMutableDictionary",&,N,V_appByBundleIdentifier
appByAdditionalStoreByBundleIdentifier
T@"NSMutableDictionary",&,N,V_appByAdditionalStoreByBundleIdentifier
appsByStoreIdentifier
T@"NSMutableDictionary",&,N,V_appsByStoreIdentifier
peers
T@"NSMutableSet",&,N,V_peers
schedulersByIdentifier
T@"NSMutableDictionary",&,N,V_schedulersByIdentifier
T@"SYDWriteTracker",&,N,V_writeTracker
T@"SYDPushManager",&,N,V_pushManager
persistenceManager
T@"SYDPersistenceManager",&,N,V_persistenceManager
deviceStateManager
T@"SYDDeviceStateManager",&,N,V_deviceStateManager
startupTime
Td,N,V_startupTime
listener
T@"NSObject<OS_xpc_object>",&,N,V_listener
mwSource
T@"NSObject<OS_dispatch_source>",&,N,V_mwSource
cloudLock
T@"NSLock",&,N,V_cloudLock
needsSaving
TB,N,V_needsSaving
shuttingDown
TB,N,V_shuttingDown
exitsBecauseOfIdle
TB,N,V_exitsBecauseOfIdle
loggedWhoLaunchedUsBlock
T@"SYDPerformBlock",&,N,V_loggedWhoLaunchedUsBlock
tracksUsageInited
TB,N,V_tracksUsageInited
queuedSchedulerIdentifiers
T@"NSMutableOrderedSet",&,N,V_queuedSchedulerIdentifiers
mainTransaction
T@"NSObject<OS_os_transaction>",&,N,V_mainTransaction
postExternalChangeNotificationRequest
T@"SYDPerformBlock",&,N,V_postExternalChangeNotificationRequest
delayStoreIdentifiersRefresh
T@"SYDPerformBlock",&,N,V_delayStoreIdentifiersRefresh
storeAppsOnDiskRequest
T@"SYDPerformBlock",&,N,V_storeAppsOnDiskRequest
isHandlingMemoryWarning
Ti,V_isHandlingMemoryWarning
someSchedulerIsSynchronizing
TB,N,V_someSchedulerIsSynchronizing
com.apple.sydclient
-[SYDClient _newMessageWithName:userInfo:]
/AppleInternal/BuildRoot/Library/Caches/com.apple.xbs/Sources/SyncedDefaults_Sim/SyncedDefaults-326/SyncedDefaults/framework/SYDClient.m
message
userinfo
additionalStore
error
domain
code
container
storeID
additionalStoreIDs
com.apple.private.ubiquity-additional-kvstore-identifiers
T@"NSURL",&,N,V_bundleURL
T@"NSString",&,N,V_container
T@"NSString",&,N,V_storeID
T@"NSArray",&,N,V_additionalStoreIDs
1.2.11
timestamp
remotevalue
<%@ %p [syncIdentifier:%lu, rank:%llu, scheduler:%@, app:%@/%p, store:%@, reason:%@]>
T@"SYDApplication",&,N,V_app
reason
Ti,N,V_reason
T@"NSDictionary",&,N,V_changes
/AppleInternal/BuildRoot/Library/Caches/com.apple.xbs/Sources/SyncedDefaults_Sim/SyncedDefaults-326/SyncedDefaults/daemon/SYDServerRequest.m
Unexpected callback _willRetryBackgroundDataTask.
Unexpected callback needNewBodyStream.
Expected non-nil url
Expected non-nil scheduler
User-Agent
X-MMe-Client-Info
KVSTESTAPPLICATIONREQUEST
True
X-Apple-Test-Application
Host
Expected non-nil requestBody
POST
gzip
Content-Encoding
text/xml
Content-Type
X-Apple-Scheduler-ID
If-Modified-Since
Expected non-nil request
X-Apple-Request-UUID
%@|%@
fragments
T@"NSMutableArray",&,N,V_fragments
dataTask
T@"NSURLSessionDataTask",&,N,V_dataTask
request
T@"NSMutableURLRequest",&,N,V_request
response
T@"NSHTTPURLResponse",&,N,V_response
cancelled
TB,GisCancelled,V_cancelled
URLRequest
T@"NSMutableURLRequest",R,N
completionBlock
T@?,C,N,V_completionBlock
count
change
v32@?0@8@16^B24
-[SYDJournal addChange:forKey:changeCount:]
/AppleInternal/BuildRoot/Library/Caches/com.apple.xbs/Sources/SyncedDefaults_Sim/SyncedDefaults-326/SyncedDefaults/framework/SYDJournal.m
!_readonly
-[SYDJournal removeChangesUntilChangeCount:]
Journal: %@
timer
T@"NSObject<OS_dispatch_source>",&,N,V_timer
delay
Td,R,N,V_delay
block
T@?,C,N,V_block
state
Tq,R,N
SYDSyncManagerNotificationValuesDidChange
changedKeys
/AppleInternal/BuildRoot/Library/Caches/com.apple.xbs/Sources/SyncedDefaults_Sim/SyncedDefaults-326/SyncedDefaults/daemon/CloudKit/SYDSyncManager.m
Must specify a container for %@
Must specify a database URL for %@
com.apple.kvs.sync-manager.%@
<%@: %p; container=%@ coreDataStore=%@ storeType=%d>
com.apple.aps.kvsd
(nil) 
Attempted to insert invalid value '%@' of class '%@'
v16@?0@"NSError"8
metadata_zone
v32@?0@"NSArray"8@"NSArray"16@"NSError"24
v24@?0@"NSArray"8@"NSError"16
%@%@
KeyValue:
syncAnchor
KVSSyncAnchorRecord
com.apple.kvs.failedToSaveKey
errorCode
Trying to de-duplicate two identical records %@ and %@
com.apple.kvs.deduplicate
coreData
T@"SYDCoreDataStore",&,N,V_coreData
storeType
Tq,N,V_storeType
T@"CKContainer",&,N,V_container
engine
T@"CKSyncEngine",&,N,V_engine
alwaysSaveRecordZones
TB,N,V_alwaysSaveRecordZones
automaticSyncingDisabled
TB,N,GisAutomaticSyncingDisabled
syncEngine
T@"CKSyncEngine",R,N
coreDataStore
T@"SYDCoreDataStore",R,N
%@;%@;%@
UNKNOWN
%@/%@
<%@> <%@> <%@>
SyncedDefaults/%@ (%@ %@ (%@))
Simulator
Support
%@/System/Library/CoreServices/SystemVersion.plist
CFBundleVersion
systemDictionary
T@"NSDictionary",&,N,V_systemDictionary
frameworkDictionary
T@"NSDictionary",&,N,V_frameworkDictionary
T@"NSString",&,D,N
database
T@"SYDManagedDatabase",&,D,N
keyValues
T@"NSSet",&,D,N
-[SYDPeer initWithConnection:server:]_block_invoke
/AppleInternal/BuildRoot/Library/Caches/com.apple.xbs/Sources/SyncedDefaults_Sim/SyncedDefaults-326/SyncedDefaults/daemon/SYDPeer.m
!self->_bundleIdentifier
<%@ %p [pid:%ld,n:%@,b:%@,s:%@,add:%@]>
<%@ %p [pid:%ld,n:%@]>
application-identifier
connection
T@"NSObject<OS_xpc_object>",&,N,V_connection
hasAdditionalStore
TB,N,V_hasAdditionalStore
additionalStores
T@"NSDictionary",&,N,V_additionalStores
T@"SYDServer",&,N,V_server
T@"NSString",&,N,V_name
Ti,N,V_pid
checkedBundleIdentifier
TB,N,V_checkedBundleIdentifier
checkedCanManage
TB,N,V_checkedCanManage
canManage
TB,N,V_canManage
isDebugged
TB,N,V_isDebugged
isTrustedApplication
TB,N,V_isTrustedApplication
isTrusted
TB,R,N,V_isTrusted
com.apple.private.trust-ubiquity-kvstore-identifier
com.apple.private.ubiquity-kvstore-access
tasksByStoreIdentifierByBundleIdentifier
T@"NSMutableDictionary",&,N,V_tasksByStoreIdentifierByBundleIdentifier
TQ,R,N
allSyncTasks
T@"NSArray",R,N
allApplications
None
HasDistantChanges
HasLocalChanges
JustLaunched
JustInCase
entries
date
delayedDate
nextReason
lastLaunch
waitForLaunch
-[SYDApplicationScheduling _resizeEntriesWithUpdatedParametersIfNecessary]
/AppleInternal/BuildRoot/Library/Caches/com.apple.xbs/Sources/SyncedDefaults_Sim/SyncedDefaults-326/SyncedDefaults/daemon/SYDApplicationScheduling.m
_parameters
_entries
Unexpected syncIdentifier(%lu) for app:%@/%p
[success]
[failure]
Unexpected syncIdentifier(%lu/%lu) for app:%@/%p: %@
waiting for client to launch once
delayed for %.0fs
%.0fs ago - reason: %@
%.0fs ago - reason: %@
last noted launch was %.0fs ago%s
 (autosync stopped)
last noted launch was %.0fs ago%s
needs to sync before %.0fs - reason: %@
needs to sync before %.0fs - reason: %@
needs to sync very soon - reason: %@
needs to sync very soon - reason: %@
should ideally sync before %.0fs
should ideally sync before %.0fs
should ideally sync very soon
should ideally sync very soon
no info
T@"SYDApplication",N,V_app
nextSyncReason
Ti,N,V_nextSyncReason
currentSyncReason
Ti,N,V_currentSyncReason
currentSyncIdentifier
TQ,N,V_currentSyncIdentifier
delayedSyncDate
Td,N,V_delayedSyncDate
entriesSize
TQ,N,V_entriesSize
T^{?=di},N,V_entries
disableUntilNextLaunch
TB,N,GisDisabledUntilNextLaunch,V_disableUntilNextLaunch
Td,N,V_lastLaunch
TB,N,V_developmentApp
app-with-tracking
Unknown type
T@"NSArray",&,N,V_apps
soon
TB,N,V_soon
T@"SYDMessage",&,N,V_message
.relaunch
-[SYDBackgroundScheduler scheduleRelaunchWithDate:]
/AppleInternal/BuildRoot/Library/Caches/com.apple.xbs/Sources/SyncedDefaults_Sim/SyncedDefaults-326/SyncedDefaults/daemon/SYDBackgroundScheduler.m
_scheduler
T@"SYDScheduler",N,V_scheduler
com.apple.kvs.daemon-to-client-connection.callback
com.apple.kvs.daemon-to-client-connection
<%@: %p;
 registeredStoreIDs=[%@]
 clientPID=%d
com.apple.private.ubiquity-kvstore-manage
com.apple.private.kvs.test
com.apple.kvs.test
Not entitled to access store %@
No sync manager trying to sync store %@
Failed to sync with CloudKit
NSUbiquitousKeyValueStoreDidChangeExternallyNotificationUserInfo
ChangeToken
xpcConnection
T@"NSXPCConnection",&,N,V_xpcConnection
delegate
T@"<SYDDaemonToClientConnectionDelegate>",W,N,V_delegate
callbackQueue
T@"NSObject<OS_dispatch_queue>",&,N,V_callbackQueue
registeredStoreIDs
T@"NSMutableSet",&,N,V_registeredStoreIDs
entitledStoreIDs
T@"NSMutableSet",&,N,V_entitledStoreIDs
<%@ %p [message:%@]>
peer
T@"SYDPeer",&,N,V_peer
T@"NSObject<OS_xpc_object>",&,N,V_message
nsMessage
T@"NSDictionary",&,N,V_nsMessage
activity
T@"NSObject<OS_os_activity>",&,N,V_activity
messageName
userInfo
T@,R,N
proposedBundleIdentifier
proposedStoreIdentifier
hasProposedAdditionalStores
com.apple.syncdefaults
Default
Scheduler
Trace
Reachability
CloudKit
CoreData
Connection
Analytics
appAutostopInterval
appSoftSyncInterval
appHardSyncInterval
appSyncLimitCount
appSyncLimitInterval
devAppSyncLimitCount
devAppSyncLimitInterval
disableThrottlingForSyncWithTracking
disableThrottlingForKeychainWithChanges
appMiscErrorRetryInterval
http4xxErrorRetryInterval
http5xxErrorRetryInterval
appNotWhiteListedRetryInterval
appBlackListedRetryInterval
syncLimitCount
syncLimitInterval
apnsTokenTTL
configurationTTL
maxAppsPerSync
QUOTA_MAX_COUNT(maxKeyCount, %lu)
maxKeyCount
QUOTA_MAX_COUNT(maxKeyNameLen, %lu)
maxKeyNameLen
QUOTA_MAX_SIZE(maxKeyDataLen, %lu)
maxKeyDataLen
QUOTA_MAX_SIZE(maxKeyDataSum, %lu)
maxKeyDataSum
SCHEDULER_INTERVAL(appAutostopInterval, %.1ff, %.1ff, %.1ff)
SCHEDULER_INTERVAL(appSoftSyncInterval, %.1ff, %.1ff, %.1ff)
SCHEDULER_INTERVAL(appHardSyncInterval, %.1ff, %.1ff, %.1ff)
SCHEDULER_COUNT(appSyncLimitCount, %lu, %lu)
SCHEDULER_INTERVAL(appSyncLimitInterval, %.1ff, %.1ff, %.1ff)
SCHEDULER_COUNT(devAppSyncLimitCount, %lu, %lu)
SCHEDULER_INTERVAL(devAppSyncLimitInterval, %.1ff, %.1ff, %.1ff)
SCHEDULER_BOOLEAN(disableThrottlingForSyncWithTracking, %lu)
SCHEDULER_BOOLEAN(disableThrottlingForKeychainWithChanges, %lu)
SCHEDULER_INTERVAL(appMiscErrorRetryInterval, %.1ff, %.1ff, %.1ff)
SCHEDULER_INTERVAL(http4xxErrorRetryInterval, %.1ff, %.1ff, %.1ff)
SCHEDULER_INTERVAL(http5xxErrorRetryInterval, %.1ff, %.1ff, %.1ff)
SCHEDULER_INTERVAL(appNotWhiteListedRetryInterval, %.1ff, %.1ff, %.1ff)
SCHEDULER_INTERVAL(appBlackListedRetryInterval, %.1ff, %.1ff, %.1ff)
SCHEDULER_COUNT(syncLimitCount, %lu, %lu)
SCHEDULER_INTERVAL(syncLimitInterval, %.1ff, %.1ff, %.1ff)
SCHEDULER_INTERVAL(apnsTokenTTL, %.1ff, %.1ff, %.1ff)
SCHEDULER_INTERVAL(configurationTTL, %.1ff, %.1ff, %.1ff)
SCHEDULER_COUNT(maxAppsPerSync, %lu, %lu)
SCHEDULER_INTERVAL(soonInterval, %.1ff, %.1ff, %.1ff)
persistentState
T@"NSDictionary",&,N,V_persistentState
soonInterval
Td,R,N
acAccountIdentifier
syncEngineMetadata
T@"NSData",&,D,N
stores
-[SYDGlobalScheduling _resizeEntriesWithUpdatedParametersIfNecessary]
/AppleInternal/BuildRoot/Library/Caches/com.apple.xbs/Sources/SyncedDefaults_Sim/SyncedDefaults-326/SyncedDefaults/daemon/SYDGlobalScheduling.m
[last syncs]
%.0fs ago
%.0fs ago
next allowed sync in %.0fs
T^d,N,V_entries
plistDataValue
T@"NSDate",&,D,N
store
T@"SYDManagedStore",&,D,N
T@,C,N
SYDSchedulerPushManagerNeedsUpdateNotification
SYDSchedulerPushManagerDidReceivePushNotification
SYDSchedulerPushManagerDidReceiveSimulatedPushNotification
no-change-tracking
com.apple.kvs.coredata.persistent-container
<%@: %p; url=%@>
identifier == %@
store.identifier == %@
store == %@
Unable to load database
 nil
author == nil
contextName == %@
self == %@
self IN %@
key == %@
recordName == %@
SYDManagedObjectModel
v24@?0@"NSPersistentStoreDescription"8@"NSError"16
momd
errorDomain
sqliteError
com.apple.kvs.corruptDatabase
persistentContainerQueue
T@"NSObject<OS_dispatch_queue>",&,N,V_persistentContainerQueue
persistentContainer
T@"NSPersistentContainer",&,N,V_persistentContainer
T@"NSURL",&,N,V_URL
allStoreIdentifiers
T@"NSString",C,N
mainBundle
initWithQueue:bundleIdentifier:storeIdentifier:
whitespaceAndNewlineCharacterSet
initWithCString:encoding:
length
rangeOfString:
substringFromIndex:
initWithObjectsAndKeys:
substringToIndex:
sendMessageWithName:userInfo:
description
stringByTrimmingCharactersInSet:
cStringUsingEncoding:
shutdown
shutdownWithHandler:
defaultCenter
postNotificationName:object:
start
initWithInitialStoreCreation:
init
syncManagerForStoreType:environment:
initWithMachServiceName:
setXpcListener:
xpcListener
setDelegate:
resume
registerForPeriodAnalyticsXPCActivity
queue
initWithXPCConnection:delegate:
clientConnections
addObject:
isEntitledForStoreIdentifier:type:
stringWithUTF8String:
currentHandler
handleFailureInMethod:object:file:lineNumber:description:
removeObject:
_processAccountChanges
identifierForEnabledAccount
syncManagers
allValues
countByEnumeratingWithState:objects:count:
coreDataStore
acAccountIdentifier
resetSyncEngine
clearServerSystemFieldsRecordsForAllStores
setAcAccountIdentifier:
markAllKeyValuesAsNeedingToBeUploaded
deleteDataForAllStores
isEqualToString:
notifyAccountDidChangeWithCompletionHandler:
containerIDForStoreType:environment:
syncManagerForStoreType:containerID:
platformSupportsStoreType:
objectForKeyedSubscript:
initWithContainerID:
databaseURLForContainerID:
checkResourceIsReachableAndReturnError:
initWithURL:
initWithContainer:coreDataStore:storeType:
setObject:forKeyedSubscript:
initWithContainerIdentifier:environment:
defaultManager
URLForDirectory:inDomain:appropriateForURL:create:error:
raise:format:
databaseURLForContainerID:libraryDirectoryURL:
URLByAppendingPathComponent:isDirectory:
dictionaryWithObjects:forKeys:count:
createDirectoryAtURL:withIntermediateDirectories:attributes:error:
path
setAttributes:ofItemAtPath:error:
containerIdentifier
environment
stringWithFormat:
stringByAppendingPathExtension:
URLByAppendingPathComponent:
primaryAppleAccountIdentifierOverride
aa_primaryAppleAccount
isEnabledForDataclass:
identifier
sendAnalyticsEventForCurrentState
copy
allStoreIdentifiers
numberOfKeyValuesInStoreWithIdentifier:
container
containerID
numberWithInteger:
numberWithUnsignedInteger:
count
isEqual:
class
self
performSelector:
performSelector:withObject:
performSelector:withObject:withObject:
isProxy
isKindOfClass:
isMemberOfClass:
conformsToProtocol:
respondsToSelector:
retain
release
autorelease
retainCount
zone
hash
superclass
debugDescription
listener:shouldAcceptNewConnection:
connectionDidInvalidate:
connection:syncManagerForStoreIdentifier:type:
processAccountChanges
setQueue:
setClientConnections:
setSyncManagers:
setPrimaryAppleAccountIdentifierOverride:
.cxx_destruct
_xpcListener
_queue
_clientConnections
_syncManagers
_primaryAppleAccountIdentifierOverride
accountTypeWithAccountTypeIdentifier:
accountsWithAccountType:
syd_accountsEnabledForDataclass:
aa_personID
aa_primaryEmail
aa_isAccountClass:
aa_isPrimaryEmailVerified
aa_isSuspended
credentialWithError:
token
containsObject:
syd_personID
syd_primaryEmail
syd_isPrimaryAccount
syd_isPrimaryEmailVerified
syd_needsToVerifyTerms
syd_authToken
syd_useCellularForDataclass:
username
dataclassProperties
objectForKey:
lowercaseString
mutableCopy
appendFormat:
URLWithString:
sharedAccountStore
numberWithBool:
renewCredentialsForAccount:options:completion:
setInvalidCredential:
initWithAccount:sydAccount:
apsEnvironment
publicURLForConfigurationWithService:
renewCredentials
user
setUser:
userName
setUserName:
authToken
setAuthToken:
accountProperties
setAccountProperties:
account
setAccount:
sydAccount
setSydAccount:
_user
_userName
_authToken
_accountProperties
_account
_sydAccount
objectAtIndex:
primaryAccount
enabledAccount
allowsCellular
_loadAccountIfNecessary
serverURL
invalidCredential
_accountsChangedNotification
_passwordChangedNotification
_deviceUnlockedSinceBootChangeNotification
isValid
credentials
setAllowsCellular:
needsToReloadAccount
setNeedsToReloadAccount:
registeredForNotifications
setRegisteredForNotifications:
_allowsCellular
_needsToReloadAccount
_registeredForNotifications
_invalidCredential
initWithLSBundleProxy:
storeID
additionalStoreIDs
applicationIdentifier
_unsafe_processBundleID:proxy:
pluginIdentifier
defaultWorkspace
getKnowledgeUUID:andSequenceNumber:
enumerateBundlesOfType:block:
arrayWithObjects:count:
installInfoForBundleIdentifiers:
knownDaemons
allKeys
arrayByAddingObjectsFromArray:
lastObject
installInfo
setObject:forKey:
_refreshThenPerformBlock:
encodeObject:forKey:
decodeObjectOfClass:forKey:
setWithObjects:
decodeObjectOfClasses:forKey:
supportsSecureCoding
encodeWithCoder:
initWithCoder:
_unsafe_processApplicationProxy:
_unsafe_processPluginKitProxy:
installInfoForBundleIdentifier:
cacheableProgressCallback
setCacheableProgressCallback:
knowledgeUUID
setKnowledgeUUID:
sequenceNumber
setSequenceNumber:
clientsForBundleID
setClientsForBundleID:
_cacheableProgressCallback
_knowledgeUUID
_sequenceNumber
_clientsForBundleID
storeIdentifier
recordName
propertyList:isValidForFormat:
setValue:
setValueModificationDate:
serverSystemFieldsRecordData
initForReadingFromData:error:
initRequiringSecureCoding:
encodeSystemFieldsWithCoder:
encodedData
setServerSystemFieldsRecordData:
recordID
initWithZoneName:ownerName:
initWithRecordName:zoneID:
serverSystemFieldsRecord
modificationDate
compare:
recordChangeTag
setServerSystemFieldsRecord:
recordType
setServerSystemFieldsRecordIfNewer:
encryptedValuesByKey
fileURL
dataWithContentsOfURL:options:error:
valueModificationDate
propertyListWithData:options:format:error:
initWithRecordType:recordID:
value
dataWithPropertyList:format:options:error:
directoryURLForTemporaryAssetFiles
UUID
UUIDString
writeToURL:options:error:
initWithFileURL:
code
keyFromUnencryptedKeyValueRecordName:
initWithBase64EncodedString:options:
initWithData:encoding:
fileURLWithPath:isDirectory:
removeItemAtURL:error:
keyFromKeyValueRecord:
deleteFilesForAssetsInKeyValueRecord:
keyValueRecordHasAssetWithoutFile:
initWithKey:storeIdentifier:
redactedDescription
setValue:withModificationDate:
mergeDataFromRecord:
recordRepresentationForStoreType:
setKey:
setStoreIdentifier:
setRecordName:
_key
_storeIdentifier
_value
_valueModificationDate
_serverSystemFieldsRecordData
_recordName
domain
URLByDeletingLastPathComponent
wroteBytes:forIdentifier:
_schedulerIdentifierMapping
defaultSchedulerIdentifier
isHomePod
scheduler
server
isCloudSyncAllowedForApp:
displayIdentifier
setDevelopmentApp:
bundleIdentifier
initWithApplication:persistentState:
_initWithBundleIdentifier:storeIdentifier:persistentState:writeTracker:
parameters
setParameters:
persistenceManager
_refreshStoreIdentifierWithInstallInfo:
additionalStoreIdentifiersForBundleIdentifier:installInfo:
boolValue
initWithFormat:
pathWithComponents:
defaultSchedulerIdentifierForStoreIdentifier:
initFileURLWithPath:
debugName
_discardPlistForced:
plistURL
dictionary
initWithMutableStore:
attributesOfItemAtPath:error:
open
propertyListWithStream:options:format:error:
close
unsignedLongLongValue
longLongValue
resetSyncState
_loadPlistIfNecessaryHelper
numberWithLongLong:
writeTracker
_writePlistIfNecessaryHelper
_loadPlistIfNecessary
removeChangesUntilChangeCount:
tracksAllChanges
logChange:forBundleIdentifier:changeCount:
_writePlistIfNecessary
changeSinceChangeCount:forKey:
addChange:forKey:changeCount:
removeObjectForKey:
maximumChangeCount
allObjects
componentsJoinedByString:
unionSet:
initWithArray:
setApplicationNeedsToSynchronizeSoon:reason:
storeIdentifierIsRegisteredWithMultipleInternalApps:
postNotificationName:object:userInfo:
dictionaryWithObject:forKey:
descriptionForReason:
beginTransaction
indexesOfObjectsPassingTest:
removeObjectsAtIndexes:
keyEnumerator
_logLock
lock
_logTo:store:tag:
unlock
mergeLocalArray:remoteArray:baseArray:conflictPolicy:
mergeLocalDictionary:remoteDictionary:baseDictionary:conflictPolicy:
numberWithUnsignedInt:
endTransaction
errorWithDomain:code:userInfo:
endSyncWithTrackingRequestForBundleIndentifier:error:
integerValue
disableThrottling
disableUntilNextLaunch
appNotWhiteListedRetryInterval
appBlackListedRetryInterval
appMiscErrorRetryInterval
disableSyncUntil:
nextSyncReason
array
_logStoreBeforeMergeWithRemoteChanges:
applyMergePolicy:conflictPolicy:forKey:localValue:remoteValue:baseValue:
_logStoreAfterMerge
synchronizeApplicationsSimilarToApplication:
changesSinceChangeCount:
_stopSynchronizingWithServerChanges:
_discardPlistIfPossible
removeAllObjects
_perform:takeTransaction:
persistentState
perform:
storeIdentifierShouldResetOnDisable:
resetAllValuesForce:
scheduling
schedulingDescription
schedulerIdentifiers
classForSchedulerWithIdentifier:
installInfoAllowsKeyValueStore:forBundleIdentifier:
isDevelopmentApp
isCloudSyncAllowed
beginDebuggingStore
endDebuggingStore
initWithBundleIdentifier:writeTracker:
initWithBundleIdentifier:persistentState:writeTracker:
initAdditionalStoreWithBundleIdentifier:storeIdentifier:writeTracker:
initAdditionalStoreWithBundleIdentifier:storeIdentifier:persistentState:writeTracker:
setScheduler:
refreshStoreIdentifierWithServer:
discardJournalEntriesWithChangeCount:
storeLocalChanges:withKnownChangeCount:
startSynchronizingWithReason:
setDefaultsConfig:
stopSynchronizingWithServerChanges:reason:
wasSyncSuccessfulWithServerChanges:
didReceiveMemoryWarning
performWithoutTransaction:
deactivateWithHandler:
accountDidChange:
diagnosticDescription
filteredSyncReasonForReason:
inactive
setInactive:
isAvailableOnThisPlatform
setIsAvailableOnThisPlatform:
setScheduling:
setBundleIdentifier:
schedulerIdentifier
setSchedulerIdentifier:
isAdditionalStore
setIsAdditionalStore:
daemon
setDaemon:
additionalChangeNotificationName
setAdditionalChangeNotificationName:
shouldResetOnFirstSync
setShouldResetOnFirstSync:
setPlistURL:
plistCache
setPlistCache:
pendingDirtyKeys
setPendingDirtyKeys:
pendingLocalData
setPendingLocalData:
changeCount
setChangeCount:
initialSyncChangeCount
setInitialSyncChangeCount:
journal
setJournal:
debugCount
setDebugCount:
simulatePushNotification
setSimulatePushNotification:
_inactive
_isAvailableOnThisPlatform
_isAdditionalStore
_daemon
_shouldResetOnFirstSync
_simulatePushNotification
_scheduler
_scheduling
_bundleIdentifier
_schedulerIdentifier
_additionalChangeNotificationName
_plistURL
_plistCache
_pendingDirtyKeys
_pendingLocalData
_changeCount
_initialSyncChangeCount
_journal
_debugCount
_writeTracker
type
allocWithZone:
initWithIdentifier:type:
decodeIntegerForKey:
encodeInteger:forKey:
copyWithZone:
setIdentifier:
setType:
_identifier
_type
dealloc
cancel
UTF8String
_setServiceState:
serviceStateDescription
serviceState
_reachabilityFlagsDidChange:
_initialReachabilityTestFailed
performBlock:afterDelay:
_setupReachability
_teardownReachability
networkManager
setServiceHostname:
serviceHostname
setServiceState:
isStarted
setIsStarted:
reachability
setReachability:
stateIsKnown
setStateIsKnown:
reachabilityFlags
setReachabilityFlags:
transaction
setTransaction:
initialReachabilityTestFailedBlock
setInitialReachabilityTestFailedBlock:
_isStarted
_stateIsKnown
_serviceState
_reachabilityFlags
_serviceHostname
_reachability
_transaction
_initialReachabilityTestFailedBlock
unsignedShortValue
bytesWritten
numberWithUnsignedLongLong:
numberOfWrites
numberWithUnsignedShort:
initWithPlistRepresentation:
plistRepresentation
setBytesWritten:
setNumberOfWrites:
_numberOfWrites
_bytesWritten
enabled
clientsByIdentifier
enable
disable
reset
setEnabled:
setClientsByIdentifier:
_enabled
_clientsByIdentifier
enumerateKeysAndObjectsUsingBlock:
doubleValue
_setupAPSConnection
numberWithDouble:
publicToken
isEqualToData:
_updatePushTopic
setEnabledTopics:ignoredTopics:opportunisticTopics:
_cleanupAPSConnection
initWithEnvironmentName:namedDelegatePort:queue:
connection:didReceivePublicToken:
stringValue
connection:didReceiveToken:forTopic:identifier:
connection:didReceiveIncomingMessage:
connection:didReceiveMessageForTopic:userInfo:
connection:didSendOutgoingMessage:
connection:didFailToSendOutgoingMessage:error:
connection:didChangeConnectedStatus:
connectionDidReconnect:
initWithPersistentState:
needsUpdate
setEnvironment:forUser:refreshInterval:
nextUpdateInterval
refreshInterval
resetUpdates
didUpdateTokenOnServer:
peerConnected:
peerDisconnected:
peerCount
setPeerCount:
pushTopicState
setPushTopicState:
trackedApps
setTrackedApps:
setEnvironment:
lastUpdateOnServer
setLastUpdateOnServer:
lastTokenOnServer
setLastTokenOnServer:
lastSeenToken
setLastSeenToken:
setRefreshInterval:
apsConnection
setApsConnection:
currentAPSConnectionEnvironment
setCurrentAPSConnectionEnvironment:
_peerCount
_pushTopicState
_trackedApps
_environment
_lastUpdateOnServer
_lastTokenOnServer
_lastSeenToken
_refreshInterval
_apsConnection
_currentAPSConnectionEnvironment
allHeaderFields
syd_headerForKey:
initWithScheduler:
unsignedIntegerValue
parametersClass
alloc
_startTrackingChanges
accountClass
_accountDidChange
addObserver:selector:name:object:
pushManagerClass
initWithPersistentState:pushManager:
_otherSchedulerDidUpdateConfigurationDictionary:
_shouldUpdateTokenOnServer
_receivedPushNotification:
_receivedSimulatedPushNotification:
_networkStateDidChange
_networkTypeDidChange
resetIdling
removeObserver:
_cancelPlannedSynchronization
registeredApplicationsForScheduler:
setPersistentStateNeedsSaving
_updateAccountRelatedManagers
resetAllApplications
synchronizeApplicationsWithServerSoon:reason:message:description:
_awake
awake
numberWithInt:
_otherSchedulerDidUpdateConfigurationDictionaryHelper:
object
userInfo
updateWithNewPersistentState:
configurationTTL
_configurationUpdateInterval
maxAppsPerSync
appSoftSyncInterval
requestSyncSoonForReason:now:
nextRefreshDateUsingNow:
rank
initWithApplication:reason:rank:
initWithKeyOptions:valueOptions:capacity:
tracksUsage
_addUsage:forKey:forDisplayIdentifier:
_addAppToQueue:reason:now:
_scheduleNextPollingSynchronization
_reasonnableConfigurationUpdateInterval
allSyncTasks
reason
syncIdentifier
didFinishSyncWithIdentifier:success:now:
enumerateSyncTasksWithBlock:
markSuccessfulSyncUsingNow:
setSomeSchedulerIsSynchronizing:
performSyncForNextQueuedScheduler
_hasPendingTrackingMessages
allApplications
_endSyncWithTrackingRequestWithError:
statusCode
_startSynchronizationSoon
host
scheme
port
initWithString:
apps
soon
synchronizeApplicationsWithServerNow:reason:description:
message
activity
peer
initWithType:reason:apps:soon:message:
sendReply:
_schedulePendingSyncRequests
insertObject:atIndex:
changes
setChanges:
initWithCapacity:
objectEnumerator
nextObject
removeObjectsInArray:
_stopSynchronizingWithTasks:capacity:group:now:
_stopSynchronizingWithTask:now:completionBlock:
subdataWithRange:
base64EncodedStringWithOptions:
_serviceUnavailableWithDuration:
syncTaskWithBundleIdentifier:storeIdentifier:
_didUsePropertyList:forOutput:forDisplayIdentifier:
removeSyncTask:
sortUsingComparator:
_maxConcurrentProcessingTaskCount
currentServerRequest
completionBlock
setCurrentServerRequest:
_performRequest:credentials:retryCount:completionBlock:
setCompletionBlock:
dataUsingEncoding:
URLRequest
setValue:forHTTPHeaderField:
newRequestWithURL:body:scheduler:error:
_endSynchronizationWithRemainingTasks:response:sessionError:
_handleSyncResponseWithData:syncTaskMap:completionBlock:
_useAlternateHost:
_sendSyncRequestWithCredentials:activity:changes:syncTaskMap:
http5xxErrorRetryInterval
http4xxErrorRetryInterval
localizedStringForStatusCode:
_newRequestWithPath:body:
_handleSyncRequestResponseWithCredentials:activity:syncTaskMap:changes:HTTPResponse:data:error:
_pollingInterval
_synchronizeAllApps
soonInterval
nextAllowedRefreshDateUsingNow:
_needsToDoSomeUpdateWithServerNow:
disableThrottlingForKeychainWithChanges
disableThrottlingForSyncWithTracking
_startSynchronizationIfPossible
_startSynchronizationSoonHelper
dictionaryWithDictionary:
_addUsage:forKey:forDisplayIdentifier:usingUsageDictionary:
willStartSyncWithIdentifier:
addSyncTask:
_startSynchronizingWithTasks:capacity:group:allChanges:syncTaskMap:
_startSynchronizingWithTask:completionBlock:
_maximumAppsPerRequest
sortedArrayUsingComparator:
setSyncIdentifier:
_sendSyncRequestWithCredentials:
_sendSetAPNSRequestWithCredentials:
HTTPBody
_handleAPNSRequestResponseWithCredentials:publicToken:HTTPResponse:data:error:
apnsTokenTTL
newConfigRequestWithURL:lastModifiedHeaderForConfig:scheduler:
_handleConfigRequestResponseWithCredentials:HTTPResponse:data:error:
someSchedulerIsSynchronizing
queueSyncForSchedulerIdentifier:
_sendConfigRequestWithCredentials:
_startSynchronizationIfPossibleHelper
_accountDidChangeHelper
_resetUpdatesForceSynchronization:
_shouldUpdateTokenOnServerHelper
_receivedSimulatedPushNotificationHelper:
noteScheduler:receivedNotificationForStores:
registeredApplicationsForStoreIdentifier:
_addPendingSyncRequest:
_handlePushNotification:
_networkStateDidChangeHelper
_networkTypeDidChangeHelper
synchronizeApplicationsWithServerNow:reason:message:description:
_addAppsToQueue:reason:now:
_beginSyncWithTrackingForApps:reason:message:soon:
isDisabledUntilNextLaunch
cancelSync
addObjectsFromArray:
date
noteSchedulerIsIdle:
exitsBecauseOfIdle
_rescheduleMinimalDelayWithNow:
scheduleRelaunchWithDate:
_didRescheduleEarly
_didRescheduleAsUsual
cancelSyncOnShutdown
_forgetIdling
noteSchedulerCancelWillIdle:
_idling
noteSchedulerWillIdle:
_rescheduleSyncWithTrackingRequest
resetUpdateRequests
appendString:
limitsDescription
_stopTrackingChanges
string
_usageForKey:forDisplayIdentifier:usingUsageDictionary:
journalLog
initWithIdentifier:andPersistentState:globalPushManager:
accountChange
passwordChange
deviceUnlockedSinceBootChange
revalidateAccount
configuration
startQueuedSynchronization
synchronizeApplicationsWithServerNow:reason:
synchronizeApplicationsWithServerSoon:reason:
unscheduleApplication:
cancelSyncForApplications:
isWaitingToIdle
refetchConfiguration
statusDescription
setTracksAllChanges:
usageDescription
updateUsageDictionary:
resetUsage
setDisableThrottling:
setTracksUsage:
setServer:
isIdle
setIsIdle:
setDebugName:
lastKnownUser
setLastKnownUser:
wasDisabledLastTime
setWasDisabledLastTime:
syncTasksByApp
setSyncTasksByApp:
setRank:
isAwake
setIsAwake:
isSynchronizing
setIsSynchronizing:
hadASuccessfulSync
setHadASuccessfulSync:
blockedOnNetworkToSyncNow
setBlockedOnNetworkToSyncNow:
blockedOnSyncQueueToSyncNow
setBlockedOnSyncQueueToSyncNow:
needsToEndTransaction
setNeedsToEndTransaction:
isSyncCancelled
setIsSyncCancelled:
cancelledApps
setCancelledApps:
syncWithTrackingRequestsByBundleIdentifier
setSyncWithTrackingRequestsByBundleIdentifier:
pendingSyncRequests
setPendingSyncRequests:
willStartSynchronizingSoonBlock
setWillStartSynchronizingSoonBlock:
nextSoonSynchronization
setNextSoonSynchronization:
lastSeenPrimaryURL
setLastSeenPrimaryURL:
redirectedURL
setRedirectedURL:
redirectCount
setRedirectCount:
minimalDelayedTime
setMinimalDelayedTime:
synchronizeAllAppsBlock
setSynchronizeAllAppsBlock:
lastModifiedHeaderForConfig
setLastModifiedHeaderForConfig:
pushManager
setPushManager:
networkStateManager
setNetworkStateManager:
backgroundScheduler
setBackgroundScheduler:
backgroundRescheduleCount
setBackgroundRescheduleCount:
lastPushNotification
setLastPushNotification:
lastSynchronization
setLastSynchronization:
syncIndicatorStart
setSyncIndicatorStart:
setJournalLog:
transactionCount
setTransactionCount:
isWaitingToIdleBlock
setIsWaitingToIdleBlock:
usagePerDisplayIdentifier
setUsagePerDisplayIdentifier:
sessionUsagePerDisplayIdentifier
setSessionUsagePerDisplayIdentifier:
lastRequestForConfig
setLastRequestForConfig:
_isIdle
_tracksAllChanges
_disableThrottling
_tracksUsage
_wasDisabledLastTime
_isAwake
_isSynchronizing
_hadASuccessfulSync
_needsToEndTransaction
_isSyncCancelled
_currentServerRequest
_parameters
_server
_debugName
_lastKnownUser
_syncTasksByApp
_rank
_blockedOnNetworkToSyncNow
_blockedOnSyncQueueToSyncNow
_syncIdentifier
_cancelledApps
_syncWithTrackingRequestsByBundleIdentifier
_pendingSyncRequests
_willStartSynchronizingSoonBlock
_nextSoonSynchronization
_lastSeenPrimaryURL
_redirectedURL
_redirectCount
_minimalDelayedTime
_synchronizeAllAppsBlock
_lastModifiedHeaderForConfig
_pushManager
_networkStateManager
_backgroundScheduler
_backgroundRescheduleCount
_lastPushNotification
_lastSynchronization
_syncIndicatorStart
_journalLog
_transactionCount
_isWaitingToIdleBlock
_usagePerDisplayIdentifier
_sessionUsagePerDisplayIdentifier
_lastRequestForConfig
_installedAppsDidChange
_applicationDidChange:
_loadAppsFromDisk
_createListener
_createMemoryWarningSource
_noMessageReceived
defaultScheduler
_logWhoLaunchedUs:toScheduler:
applicationForBundleIdentifier:storeIdentifier:createIfNecessary:
schedulerWithIdentifier:
isDebugged
_appendApp:new:
objectsAtIndexes:
fileExistsAtPath:
_refreshStoreIdentifiersHelper:
state
_refreshStoreIdentifiers:
stringByAppendingPathComponent:
initWithContentsOfFile:
initWithServer:
unarchivedObjectOfClass:fromData:error:
initFileURLWithPath:isDirectory:
archivedDataWithRootObject:requiringSecureCoding:error:
isGlobalIdentifier:
addEntriesFromDictionary:
enumerateAppsUsingBlock:
_storeAppsOnDiskHelper:
enumerateAppsWithBundleIdentifier:usingBlock:
_isCloudSyncAllowedForApp:peer:
initWithObjects:
_requestStoreAppsOnDiskImmediate:
componentsSeparatedByString:
stringByAppendingString:
_enumerateSchedulersFromMessage:block:
_didReceiveMemoryWarning
diagnoseappWithMessage:
resetappsWithMessage:
resetupdatesWithMessage:
refetchconfigurationWithMessage:
statusWithMessage:
lastrequestWithMessage:
serverlimitsWithMessage:
enablesyncindicatorWithMessage:
disablesyncindicatorWithMessage:
enablefulljournalWithMessage:
disablefulljournalWithMessage:
disablethrottlingWithMessage:
enablethrottlingWithMessage:
disableusagetrackingWithMessage:
enableusagetrackingWithMessage:
usageWithMessage:
resetusageWithMessage:
enablewritetrackingWithMessage:
disablewritetrackingWithMessage:
resetwritetrackingWithMessage:
simulatememorywarningWithMessage:
helpWithMessage:
shutdownWithMessage:
migrateWithMessage:
migrateForceWithMessage:
allApplicationInfoWithMessage:
hasSuffix:
sortedArrayUsingSelector:
copyItemAtURL:toURL:error:
arrayWithObject:
fileURLWithPath:
migrateSyncedPreferencesFile:additionalStoreName:systemBase:containerBase:force:
migrateApplication:withBundleIdentifier:force:
migrateWithMessage:force:
_postExternalChangeNotification:
_storeAppsOnDisk:
resetTimer
_requestPostExternalChangeNotification
_handleNewConnection:
initWithConnection:server:
messageName
proposedBundleIdentifier
synchronizeWithMessage:
registerWithMessage:
unregisterWithMessage:
synchronizeRemoteWithMessage:
trackSynchronizeRemoteWithMessage:
discardJournalEntriesWithMessage:
getConfigurationWithMessage:
pingWithMessage:
accountChangeWithMessage:
passwordChangeWithMessage:
printDebugDescriptionWithMessage:
setDefaultsConfigWithMessage:
canManage
_logWhoLaunchedUsWithMessage:administrativeMessage:
methodForSelector:
hasPrefix:
connection
sharedConnection
isCloudSyncAllowed:
noteScheduler:receivedBackgroundJobNotification:
beginDebuggingApplicationWithBundleIdentifier:
endDebuggingApplicationWithBundleIdentifier:
registeredApplications
_cancelRequestForPostExternalChangeNotification
handleIncomingMessage:
setExitsBecauseOfIdle:
setPersistenceManager:
appByBundleIdentifier
setAppByBundleIdentifier:
appByAdditionalStoreByBundleIdentifier
setAppByAdditionalStoreByBundleIdentifier:
appsByStoreIdentifier
setAppsByStoreIdentifier:
peers
setPeers:
schedulersByIdentifier
setSchedulersByIdentifier:
setWriteTracker:
deviceStateManager
setDeviceStateManager:
startupTime
setStartupTime:
listener
setListener:
mwSource
setMwSource:
cloudLock
setCloudLock:
needsSaving
setNeedsSaving:
shuttingDown
setShuttingDown:
loggedWhoLaunchedUsBlock
setLoggedWhoLaunchedUsBlock:
tracksUsageInited
setTracksUsageInited:
queuedSchedulerIdentifiers
setQueuedSchedulerIdentifiers:
mainTransaction
setMainTransaction:
postExternalChangeNotificationRequest
setPostExternalChangeNotificationRequest:
delayStoreIdentifiersRefresh
setDelayStoreIdentifiersRefresh:
storeAppsOnDiskRequest
setStoreAppsOnDiskRequest:
isHandlingMemoryWarning
setIsHandlingMemoryWarning:
_exitsBecauseOfIdle
_someSchedulerIsSynchronizing
_needsSaving
_shuttingDown
_tracksUsageInited
_isHandlingMemoryWarning
_persistenceManager
_appByBundleIdentifier
_appByAdditionalStoreByBundleIdentifier
_appsByStoreIdentifier
_peers
_schedulersByIdentifier
_deviceStateManager
_startupTime
_listener
_mwSource
_cloudLock
_loggedWhoLaunchedUsBlock
_queuedSchedulerIdentifiers
_mainTransaction
_postExternalChangeNotificationRequest
_delayStoreIdentifiersRefresh
_storeAppsOnDiskRequest
initWithQueue:bundleIdentifier:storeIdentifier:additionalSource:
_resetConnection
_createConnectionIfNecessary
initWithDomain:code:userInfo:
_newMessageWithName:userInfo:
_sendMessageNoReply:
_sendMessageWithReplySync:
_sendMessage:replyHandler:
sendMessageWithName:
sendMessageWithName:replyHandler:
sendMessageWithName:userInfo:replyHandler:
_connection
_additionalSource
entitlementValuesForKeys:
stringForKey:
arrayForKey:withValuesOfClass:
bundleURL
dataContainerURL
setBundleURL:
setContainer:
setStoreID:
setAdditionalStoreIDs:
_bundleURL
_container
_storeID
_additionalStoreIDs
setApp:
setReason:
_reason
_app
_changes
setRequest:
request
sessionDescription
taskDescription
_finishWithError:
setResponse:
fragments
setFragments:
setHTTPMethod:
setNetworkServiceType:
_newURLRequestWithURL:HTTPMethod:scheduler:
setHTTPBody:
initWithURLRequest:scheduler:
isCancelled
valueForHTTPHeaderField:
setUseAdaptiveTimeouts:
setTlsPinning:
set_appleIDContextSessionIdentifier:
set_timeoutIntervalForRequest:
set_allowsExpensiveAccess:
setQualityOfService:
setDiscretionaryNetworkBehavior:
sharedManager
createDataTaskWithRequest:options:delegate:sessionHandle:
setDataTask:
HTTPMethod
allHTTPHeaderFields
setCancelled:
dataTask
firstObject
removeObjectAtIndex:
appendData:
response
URLSession:task:willPerformHTTPRedirection:newRequest:completionHandler:
URLSession:task:needNewBodyStream:
URLSession:task:didSendBodyData:totalBytesSent:totalBytesExpectedToSend:
URLSession:task:didCompleteWithError:
URLSession:task:_willSendRequestForEstablishedConnection:completionHandler:
URLSession:_taskIsWaitingForConnection:
URLSession:task:_conditionalRequirementsChanged:
URLSession:dataTask:didReceiveResponse:completionHandler:
URLSession:dataTask:didReceiveData:
URLSession:_willRetryBackgroundDataTask:withError:
_cancelled
_completionBlock
_fragments
_dataTask
_request
_response
userAgentHeader
clientInfoHeader
intValue
initWithLongLong:
initWithInt:
initWithStore:
_store
_readonly
initWithBlock:delay:
performNow
timer
setTimer:
delay
block
setBlock:
_timer
_delay
_block
initializeSyncEngine
storeType
syncEngineMetadata
privateCloudDatabase
initWithDatabase:dataSource:metadata:machServiceName:priorityForFetches:priorityForModifications:
coreData
keyValueForKey:inStoreWithIdentifier:createIfNecessary:
removeObjectForKey:inStoreWithIdentifier:
newRecordNameForKey:
saveKeyValue:inStoreWithIdentifier:excludeFromChangeTracking:
engine
addRecordIDsToSave:recordIDsToDelete:
alwaysSaveRecordZones
zoneID
initWithZoneID:
addRecordZonesToSave:recordZoneIDsToDelete:
setObject:forKey:inStoreWithIdentifier:excludeFromChangeTracking:
removeKeyValueForKey:inStoreWithIdentifier:excludeFromChangeTracking:
removeObjectForKey:inStoreWithIdentifier:excludeFromChangeTracking:
savePendingChangesToCloudWithCompletionHandler:
fetchChangesFromCloudWithCompletionHandler:
modifyPendingChangesWithCompletionHandler:
fetchChangesWithCompletionHandler:
database
zoneName
initWithRecordZonesToSave:recordZoneIDsToDelete:
setMarkZonesAsUserPurged:
setModifyRecordZonesCompletionBlock:
addOperation:
fetchAllRecordZonesWithCompletionHandler:
setAutomaticSyncingDisabled:
isAutomaticSyncingDisabled
hasPendingModifications
useUUIDRecordNames
markAllKeyValuesAsNeedingToBeUploadedForStoreWithIdentifier:
allRecordNamesInStoreWithIdentifier:
arrayWithCapacity:
saveSyncEngineMetadata:
setEngine:
keyValueForRecordName:inStoreWithIdentifier:
syncEngine
didSaveKeyValueRecord:
saveKeyValue:inStoreWithIdentifier:
failedToSaveKeyValueRecord:error:
didFetchKeyValueRecord:
clearServerSystemFieldsRecordsForAllKeyValuesInStoreWithIdentifier:
deduplicateRecordForKeyValue:withNewlyFetchedRecord:
creationDate
removeKeyValueForRecordName:inStoreWithIdentifier:
deleteDataForStoreWithIdentifier:
destroyPersistentStore
syncEngine:recordToSaveForRecordID:
syncEngine:didSaveRecord:
syncEngine:failedToSaveRecord:error:
syncEngine:didDeleteRecordWithID:
syncEngine:failedToDeleteRecordWithID:error:
syncEngine:didFetchRecord:
syncEngine:recordWithIDWasDeleted:recordType:
syncEngine:didUpdateMetadata:
syncEngine:nextBatchOfRecordsToModifyWithRecordIDsPendingSave:recordIDsPendingDelete:
syncEngine:didCompleteModifyRecordsBatch:withSavedRecords:deletedRecordIDs:error:
syncEngine:didSaveRecordZone:
syncEngine:didDeleteRecordZoneWithID:
syncEngine:failedToSaveRecordZone:error:
syncEngine:failedToDeleteRecordZoneWithID:error:
syncEngine:zoneWithIDChanged:
syncEngine:zoneWithIDWasDeleted:
syncEngine:zoneWithIDWasPurged:
objectForKey:inStoreWithIdentifier:
setObject:forKey:inStoreWithIdentifier:
synchronizeWithCompletionHandler:
deleteDataFromCloudWithCompletionHandler:
recordIDForKey:inStoreWithIdentifier:
hasPendingChangesToUpload
syncEngine:didSaveRecordZones:
deleteDataFromDisk
setStoreType:
setCoreData:
setAlwaysSaveRecordZones:
_alwaysSaveRecordZones
_storeType
_coreData
_engine
osVersion
osName
buildVersion
frameworkIdentifier
frameworkVersion
productType
productVersion
systemInfoDictionary
bundleForClass:
lastPathComponent
frameworkInfoDictionary
serialNumber
wifiMacAddress
systemDictionary
setSystemDictionary:
frameworkDictionary
setFrameworkDictionary:
_systemDictionary
_frameworkDictionary
initWithPeer:andMessage:activity:
hasProposedAdditionalStores
hasAdditionalStore
additionalStores
setConnection:
setPid:
name
setName:
isTrusted
setHasAdditionalStore:
setAdditionalStores:
checkedBundleIdentifier
setCheckedBundleIdentifier:
checkedCanManage
setCheckedCanManage:
setCanManage:
setIsDebugged:
isTrustedApplication
setIsTrustedApplication:
_isTrusted
_hasAdditionalStore
_checkedBundleIdentifier
_checkedCanManage
_canManage
_isDebugged
_isTrustedApplication
_pid
_name
_additionalStores
tasksByStoreIdentifierByBundleIdentifier
setTasksByStoreIdentifierByBundleIdentifier:
_tasksByStoreIdentifierByBundleIdentifier
devAppSyncLimitCount
appSyncLimitCount
_resizeEntriesWithUpdatedParametersIfNecessary
appAutostopInterval
appHardSyncInterval
_markEntriesAsIncorrect
devAppSyncLimitInterval
appSyncLimitInterval
_nextRefreshDateForReason:usingNow:
callStackSymbols
developmentApp
setNextSyncReason:
currentSyncReason
setCurrentSyncReason:
currentSyncIdentifier
setCurrentSyncIdentifier:
delayedSyncDate
setDelayedSyncDate:
entriesSize
setEntriesSize:
entries
setEntries:
setDisableUntilNextLaunch:
lastLaunch
setLastLaunch:
_developmentApp
_disableUntilNextLaunch
_nextSyncReason
_currentSyncReason
_currentSyncIdentifier
_delayedSyncDate
_entriesSize
_entries
_lastLaunch
setApps:
setSoon:
setMessage:
_soon
_apps
_message
_noteBackgroundSchedulerWasPinged
syncManagerDidChangeNotification:
registeredStoreIDs
processIdentifier
xpcConnection
setObject:forKey:inStoreWithIdentifier:type:reply:
objectForKey:inStoreWithIdentifier:type:reply:
removeObjectForKey:inStoreWithIdentifier:type:reply:
dictionaryRepresentationForStoreWithIdentifier:type:reply:
registerForChangeNotificationsForStoreWithIdentifier:type:reply:
changeDictionarySinceChangeToken:inStoreWithIdentifier:type:reply:
synchronizeStoreWithIdentifier:type:completionHandler:
deleteDataFromDiskForStoreIdentifier:type:reply:
processAccountChangesWithCompletionHandler:
interfaceWithProtocol:
setExportedInterface:
setExportedObject:
storeDidChangeWithIdentifier:type:changeDictionary:reply:
setRemoteObjectInterface:
setInterruptionHandler:
delegate
setInvalidationHandler:
entitledStoreIDs
isXPCConnection:entitledForStoreID:
valueForEntitlement:
errorNotEntitledForStoreIdentifier:
dictionaryRepresentationForStoreWithIdentifier:
currentChangeTokenForStoreIdentifier:error:
changedKeysForStoreIdentifier:sinceChangeToken:error:
changeDictionaryWithChangedKeys:reason:changeToken:
dictionaryWithCapacity:
callbackQueue
asyncClientWithErrorHandler:
client
remoteObjectProxyWithErrorHandler:
synchronousRemoteObjectProxyWithErrorHandler:
setXpcConnection:
setCallbackQueue:
setRegisteredStoreIDs:
setEntitledStoreIDs:
_xpcConnection
_delegate
_callbackQueue
_registeredStoreIDs
_entitledStoreIDs
_translateMessageIfNecessary
proposedStoreIdentifier
setPeer:
setActivity:
nsMessage
setNsMessage:
_peer
_activity
_nsMessage
syncLimitCount
syncLimitInterval
setPersistentState:
_persistentState
initWithInteger:
plistDataValue
setPlistDataValue:
sharedManagers
_managerNeedsUpdateOnServer:
_managerDidReceivePushNotification:
_registerManager:
_managerDidChange:
_unregisterManager:
contextForStoreIdentifier:
managedKeyValueWithKey:inStoreWithIdentifier:createIfNecessary:inContext:
keyValueFromManagedKeyValue:
performBlockAndWait:
managedKeyValueWithRecordName:inStoreWithIdentifier:inContext:
store
_saveKeyValue:inStoreWithIdentifier:excludeFromChangeTracking:forceCreateNewRow:
setTransactionAuthor:
managedKeyValueWithKey:inStoreWithIdentifier:createIfNecessary:forceCreateNewRow:inContext:
hasChanges
save:
handleCorruptionIfNecessaryFromError:
deleteObject:
predicateWithFormat:
deleteDataForStoresMatchingPredicate:context:
persistentContainer
newBackgroundContext
fetchRequest
setPredicate:
initWithFetchRequest:
executeRequest:error:
setResultType:
setPropertiesToFetch:
executeFetchRequest:error:
managedStoreWithIdentifier:createIfNecessary:inContext:
entity
initWithEntity:
null
setPropertiesToUpdate:
countForFetchRequest:error:
predicate
persistentStoreCoordinator
persistentStores
currentPersistentHistoryTokenFromStores:
andPredicateWithSubpredicates:
fetchHistoryAfterToken:
setFetchRequest:
result
changedObjectID
changeType
tombstone
updatedProperties
setReturnsDistinctResults:
managedDatabaseCreateIfNecessary:inContext:
managedKeyValuesMatchingPredicate:inContext:
setSyncEngineMetadata:
execute:
initWithContext:
setDatabase:
setStore:
sortDescriptorWithKey:ascending:
setSortDescriptors:
persistentContainerQueue
managedObjectModel
initWithName:managedObjectModel:
setShouldMigrateStoreAutomatically:
setShouldInferMappingModelAutomatically:
setShouldAddStoreAsynchronously:
setOption:forKey:
setPersistentStoreDescriptions:
_queue_handleCorruptionIfNecessaryFromError:
loadPersistentStoresWithCompletionHandler:
URLForResource:withExtension:
initWithContentsOfURL:
_queue_destroyPersistentStore
destroyPersistentStoreAtURL:withType:options:error:
removeKeyValueForKey:inStoreWithIdentifier:
setURL:
setPersistentContainerQueue:
setPersistentContainer:
_URL
_persistentContainerQueue
_persistentContainer
SYDDaemon
NSXPCListenerDelegate
NSObject
SYDDaemonToClientConnectionDelegate
SYDAccount
SYDCredentials
SYDPersistenceManager
NSSecureCoding
NSCoding
SYDKeyValue
SYDApplication
SYDStoreID
NSCopying
SYDNetworkStateManager
SYDWriteTrackerClient
SYDWriteTracker
SYDPushManager
APSConnectionDelegate
SYDAdditions
SYDScheduler
SYDServerManagementMessages
SYDServerMessages
SYDServer
SYDClient
SYDPersistenceClientEntry
SYDSyncTask
SYDServerRequest
C2RequestDelegate
SYDJournal
SYDPerformBlock
SYDSyncManager
CKSyncEngineDataSource
SYDDeviceStateManager
SYDDeviceInfo
SYDManagedStore
SYDPeer
SYDSyncTaskMap
SYDApplicationScheduling
SYDSyncRequest
SYDBackgroundScheduler
SYDDaemonProtocol
SYDClientProtocol
SYDDaemonToClientConnection
SYDMessage
SYDSchedulingParameters
SYDManagedDatabase
SYDGlobalScheduling
SYDManagedKeyValue
SYDAlwaysOnAccount
SYDAlwaysOnSchedulingParameters
SYDAlwaysOnScheduler
SYDSchedulerPushManager
SYDKeychainAccount
SYDKeychainSchedulingParameters
SYDKeychainScheduler
SYDPIMAccount
SYDPIMScheduler
SYDCoreDataStore
@32@0:8q16q24
@24@0:8@16
@32@0:8@16@24
B24@0:8q16
B24@0:8@16
#16@0:8
@16@0:8
@24@0:8:16
@32@0:8:16@24
@40@0:8:16@24@32
B16@0:8
B24@0:8#16
B24@0:8:16
Vv16@0:8
Q16@0:8
^{_NSZone=}16@0:8
B24@0:8@"Protocol"16
@"NSString"16@0:8
B32@0:8@16@24
B32@0:8@"NSXPCListener"16@"NSXPCConnection"24
v24@0:8@16
@40@0:8@16@24q32
v16@0:8
v24@0:8@"SYDDaemonToClientConnection"16
@"SYDSyncManager"40@0:8@"SYDDaemonToClientConnection"16@"NSString"24q32
@20@0:8B16
@32@0:8q16@24
@"NSXPCListener"
@"NSObject<OS_dispatch_queue>"
@"NSMutableSet"
@"NSMutableDictionary"
@"NSString"
@"NSDictionary"
@"ACAccount"
@"SYDAccount"
v20@0:8B16
v24@0:8@"NSCoder"16
@24@0:8@"NSCoder"16
v24@0:8@?16
@?16@0:8
@"NSUUID"
@"NSNumber"
v32@0:8@16@24
@24@0:8q16
@"NSDate"
@"NSData"
#24@0:8@16
@48@0:8@16@24@32@40
@40@0:8@16@24@32
i24@0:8@16
v24@0:8q16
@32@0:8@16q24
@20@0:8i16
v40@0:8@16@24@32
@44@0:8@16@24@32i40
^v56@0:8i16i20^{__CFString=}24^v32^v40^v48
v28@0:8@16i24
v28@0:8@?16B24
v20@0:8i16
i20@0:8i16
q16@0:8
v24@0:8Q16
@"SYDScheduler"
@"SYDApplicationScheduling"
@"NSURL"
@"SYDJournal"
@"SYDWriteTracker"
@24@0:8^{_NSZone=}16
v20@0:8I16
i16@0:8
^{__SCNetworkReachability=}16@0:8
v24@0:8^{__SCNetworkReachability=}16
I16@0:8
^{__SCNetworkReachability=}
@"NSObject<OS_os_transaction>"
@"SYDPerformBlock"
S16@0:8
v20@0:8S16
v32@0:8Q16@24
v48@0:8@16@24@32@40
v28@0:8@16B24
v32@0:8@"APSConnection"16@"NSData"24
v48@0:8@"APSConnection"16@"NSData"24@"NSString"32@"NSString"40
v32@0:8@"APSConnection"16@"APSIncomingMessage"24
v40@0:8@"APSConnection"16@"NSString"24@"NSDictionary"32
v32@0:8@"APSConnection"16@"APSOutgoingMessage"24
v40@0:8@"APSConnection"16@"APSOutgoingMessage"24@"NSError"32
v28@0:8@"APSConnection"16B24
v24@0:8@"APSConnection"16
v40@0:8@16@24d32
d16@0:8
v24@0:8d16
@"APSConnection"
B36@0:8@16i24d28
B24@0:8d16
v40@0:8@16i24@28B36
v40@0:8@16d24@?32
v48@0:8@16Q24@32d40
v40@0:8@16@24@?32
v44@0:8@16@24I32@?36
v72@0:8@16@24@32@40@48@56@64
Q40@0:8@16@24@32
v48@0:8Q16@24@32@40
v40@0:8Q16@24@32
v36@0:8@16B24@28
v32@0:8@16@?24
v56@0:8@16Q24@32@40@48
v56@0:8@16@24@32@40@48
v36@0:8@16i24@28
v44@0:8@16i24@28@36
d24@0:8d16
v24@0:8^@16
v40@0:8@16@24q32
@"SYDServerRequest"
@"SYDSchedulingParameters"
@"SYDGlobalScheduling"
@"SYDServer"
@"NSMapTable"
@"NSObject<OS_os_activity>"
@"NSMutableArray"
@"SYDSchedulerPushManager"
@"SYDNetworkStateManager"
@"SYDBackgroundScheduler"
@"NSObject<OS_os_log>"
v24@0:8@"SYDMessage"16
@36@0:8@16@24B32
B32@0:8@16@?24
B52@0:8@16@24@32@40B48
@"SYDPersistenceManager"
@"SYDPushManager"
@"SYDDeviceStateManager"
@"NSObject<OS_xpc_object>"
@"NSObject<OS_dispatch_source>"
@"NSLock"
@"NSMutableOrderedSet"
@44@0:8@16^{__CFString=}24^{__CFString=}32B40
@40@0:8@16^{__CFString=}24^{__CFString=}32
@"NSArray"
@36@0:8@16i24Q28
@"SYDApplication"
@48@0:8@16@24@32^@40
v56@0:8@16@24@32@40@?48
v56@0:8@16@24q32q40q48
v48@0:8@16@24@32@?40
v36@0:8@16@24B32
v56@0:8@"NSURLSession"16@"NSURLSessionTask"24@"NSHTTPURLResponse"32@"NSURLRequest"40@?<v@?@"NSURLRequest">48
v40@0:8@"NSURLSession"16@"NSURLSessionTask"24@?<v@?@"NSInputStream">32
v56@0:8@"NSURLSession"16@"NSURLSessionTask"24q32q40q48
v40@0:8@"NSURLSession"16@"NSURLSessionTask"24@"NSError"32
v48@0:8@"NSURLSession"16@"NSURLSessionTask"24@"NSURLRequest"32@?<v@?@"NSURLRequest">40
v32@0:8@"NSURLSession"16@"NSURLSessionTask"24
v36@0:8@"NSURLSession"16@"NSURLSessionTask"24B32
v48@0:8@"NSURLSession"16@"NSURLSessionDataTask"24@"NSURLResponse"32@?<v@?q>40
v40@0:8@"NSURLSession"16@"NSURLSessionDataTask"24@"NSData"32
v40@0:8@"NSURLSession"16@"NSURLSessionDataTask"24@"NSError"32
@"NSURLSessionDataTask"
@"NSMutableURLRequest"
@"NSHTTPURLResponse"
i32@0:8q16@24
v36@0:8i16@20q28
@32@0:8@?16d24
@"CKRecord"32@0:8@"CKSyncEngine"16@"CKRecordID"24
v32@0:8@"CKSyncEngine"16@"CKRecord"24
v40@0:8@"CKSyncEngine"16@"CKRecord"24@"NSError"32
v32@0:8@"CKSyncEngine"16@"CKRecordID"24
v40@0:8@"CKSyncEngine"16@"CKRecordID"24@"NSError"32
v40@0:8@"CKSyncEngine"16@"CKRecordID"24@"NSString"32
v32@0:8@"CKSyncEngine"16@"NSData"24
@"CKSyncEngineBatch"40@0:8@"CKSyncEngine"16@"NSArray"24@"NSArray"32
v56@0:8@"CKSyncEngine"16@"CKSyncEngineBatch"24@"NSArray"32@"NSArray"40@"NSError"48
v32@0:8@"CKSyncEngine"16@"CKRecordZone"24
v32@0:8@"CKSyncEngine"16@"CKRecordZoneID"24
v40@0:8@"CKSyncEngine"16@"CKRecordZone"24@"NSError"32
v40@0:8@"CKSyncEngine"16@"CKRecordZoneID"24@"NSError"32
v44@0:8@16@24@32B40
@"CKContainer"
@"SYDCoreDataStore"
@"CKSyncEngine"
d28@0:8i16d20
B28@0:8i16d20
v36@0:8Q16B24d28
^{?=di}16@0:8
v24@0:8^{?=di}16
^{?=di}
@48@0:8q16i24@28B36@40
@"SYDMessage"
v56@0:8@16@24@32q40@?48
v48@0:8@16@24q32@?40
v40@0:8@16q24@?32
v56@0:8@16@"NSString"24@"NSString"32q40@?<v@?@"NSError">48
v48@0:8@"NSString"16@"NSString"24q32@?<v@?@@"NSError">40
v48@0:8@"NSString"16@"NSString"24q32@?<v@?@"NSError">40
v40@0:8@"NSString"16q24@?<v@?@"NSDictionary"@"NSError">32
v40@0:8@"NSString"16q24@?<v@?@"NSError">32
v48@0:8@"NSData"16@"NSString"24q32@?<v@?@"NSDictionary"@"NSError">40
v24@0:8@?<v@?@"NSError">16
v48@0:8@16q24@32@?40
v48@0:8@"NSString"16q24@"NSDictionary"32@?<v@?>40
@40@0:8@16q24@32
B32@0:8@16q24
@24@0:8@?16
@"NSXPCConnection"
@"<SYDDaemonToClientConnectionDelegate>"
@"SYDPeer"
^d16@0:8
v24@0:8^d16
v40@0:8@16@24B32B36
Q24@0:8@16
@32@0:8@16^@24
@40@0:8@16@24^@32
@28@0:8B16@20
@36@0:8@16B24@28
@44@0:8@16@24B32@36
@48@0:8@16@24B32B36@40
@"NSPersistentContainer"
<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE plist PUBLIC "-//Apple//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd">
<plist version="1.0">
<dict>
<key>BuildMachineOSBuild</key>
<string>18A391011</string>
<key>CFBundleIdentifier</key>
<string>com.apple.syncdefaultsd</string>
<key>CFBundleInfoDictionaryVersion</key>
<string>6.0</string>
<key>CFBundleName</key>
<string>syncdefaultsd</string>
<key>CFBundleShortVersionString</key>
<string>1.0</string>
<key>CFBundleSupportedPlatforms</key>
<array>
<string>AppleTVSimulator</string>
</array>
<key>DTCompiler</key>
<string>com.apple.compilers.llvm.clang.1_0</string>
<key>DTPlatformBuild</key>
<string>11O62d</string>
<key>DTPlatformName</key>
<string>appletvsimulator</string>
<key>DTPlatformVersion</key>
<string>13.4</string>
<key>DTSDKBuild</key>
<string>17L224x</string>
<key>DTSDKName</key>
<string>appletvsimulator13.4.internal</string>
<key>DTXcode</key>
<string>1140</string>
<key>DTXcodeBuild</key>
<string>11O62d</string>
<key>MinimumOSVersion</key>
<string>13.4</string>
<key>UIDeviceFamily</key>
<array>
<integer>3</integer>
</array>
</dict>
</plist>
<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE plist PUBLIC "-//Apple//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd">
<plist version="1.0">
<dict>
<key>application-identifier</key>
<string>com.apple.syncdefaultsd</string>
<key>aps-connection-initiate</key>
<true/>
<key>aps-environment</key>
<string>production</string>
<key>com.apple.accounts.appleaccount.fullaccess</key>
<true/>
<key>com.apple.authkit.client.private</key>
<true/>
<key>com.apple.developer.icloud-services</key>
<array>
<string>CloudKit</string>
</array>
<key>com.apple.mobile.keybagd.UserManager.logout</key>
<true/>
<key>com.apple.mobile.keybagd.UserManager.sync</key>
<true/>
<key>com.apple.private.MobileContainerManager.otherIdLookup</key>
<true/>
<key>com.apple.private.cloudkit.serviceNameForContainerMap</key>
<dict>
<key>com.apple.KeyValueService.EndToEndEncrypted</key>
<string>com.apple.KeyValueService.EndToEndEncrypted</string>
</dict>
<key>com.apple.private.cloudkit.setEnvironment</key>
<true/>
<key>com.apple.private.cloudkit.systemService</key>
<true/>
<key>com.apple.private.security.storage-exempt.heritable</key>
<true/>
<key>com.apple.private.tcc.allow</key>
<array>
<string>kTCCServiceLiverpool</string>
</array>
<key>com.apple.private.tcc.manager</key>
<true/>
<key>com.apple.private.ubiquity-kvstore-manage</key>
<true/>
<key>com.apple.security.enterprise-volume-access</key>
<true/>
<key>keychain-access-groups</key>
<array>
<string>appleaccount</string>
</array>
<key>seatbelt-profiles</key>
<array>
<string>syncdefaultsd</string>
</array>
</dict>
</plist>
