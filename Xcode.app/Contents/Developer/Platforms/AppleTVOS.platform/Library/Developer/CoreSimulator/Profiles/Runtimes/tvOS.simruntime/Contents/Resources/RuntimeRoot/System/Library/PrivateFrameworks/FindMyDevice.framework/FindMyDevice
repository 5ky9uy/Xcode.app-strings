v8@?0
com.apple.icloud.FindMyDevice.FMDFMIPManager
-[FMDFMIPManager lostModeIsActive]
-[FMDFMIPManager isManagedLostModeActive]
-[FMDFMIPManager isLostModeActive]
-[FMDFMIPManager lostModeInfo]
-[FMDFMIPManager enableLostModeWithInfo:]
not supported
-[FMDFMIPManager disableLostMode]
-[FMDFMIPManager enableManagedLostModeWithInfo:completion:]
Not supported on this platform
-[FMDFMIPManager disableManagedLostModeWithLocatedMessage:completion:]
Device is not in managed lost mode. Cannot disable it.
v16@?0@"NSError"8
-[FMDFMIPManager userDidAckManagedLostModeLocateWithCompletion:]
Device is not waiting for locate ack. Invalid state.
-[FMDFMIPManager playSoundWithOptions:completion:]
-[FMDFMIPManager deviceActivationDidSucceed]
-[FMDFMIPManager lockdownShouldDisableDeviceRestore]
-[FMDFMIPManager lockdownShouldDisableDevicePairing]
-[FMDFMIPManager fmipStateWithCompletion:]
-[FMDFMIPManager fmipAccountWithCompletion:]
-[FMDFMIPManager fmipAccount]
-[FMDFMIPManager didChangeFMIPAccountInfo:]
-[FMDFMIPManager enableFMIPInContext:]
-[FMDFMIPManager disableFMIPUsingToken:inContext:]
non-nil
disableFMIPUsingToken:inContext:
timed out
-[FMDFMIPManager disableFMIPUsingToken:inContext:completion:]
-[FMDFMIPManager disableFMIPUsingToken:forPairedDeviceWithUDID:withCompletion:]
-[FMDFMIPManager disableFMIPForAccount:pairedDeviceWithUDID:withCompletion:]
-[FMDFMIPManager markAsMissingSupportedForPairedDeviceWithUDID:withCompletion:]
-[FMDFMIPManager markPairedDeviceWithUDID:asMissingUsingToken:withCompletion:]
-[FMDFMIPManager isActivationLockAllowedWithCompletion:]
-[FMDFMIPManager isActivationLockEnabledWithCompletion:]
-[FMDFMIPManager isActivationLockedWithCompletion:]
-[FMDFMIPManager enableActivationLockWithCompletion:]
-[FMDFMIPManager needsLostModeExitAuth]
-[FMDFMIPManager didReceiveLostModeExitAuthToken:]
-[FMDFMIPManager initiateLostModeExitAuthWithCompletion:]
-[FMDFMIPManager initiateLostModeExitAuthForIDSDeviceID:withCompletion:]
-[FMDFMIPManager lowBatteryLocateEnabledWithCompletion:]
-[FMDFMIPManager setLowBatteryLocateEnabled:withCompletion:]
-[FMDFMIPManager userNotifiedOfActivationLockForAllPairedDevices]
-[FMDFMIPManager userNotifiedOfActivationLockForPairedDevices:]
-[FMDFMIPManager signatureHeadersWithData:completion:]
v16@?0q8
-[FMDFMIPManager soundStoppedForAccessoryIdentifier:]
-[FMDFMIPManager clearData:completion:]
B16@?0@8
@16@?0@"NSObject<FMDAudioAccessory>"8
v24@?0@"NSError"8@"NSArray"16
B16@?0@"NSObject"8
-[FMDFMIPManager _getAccessoriesWithFilter:completion:]
-[FMDFMIPManager _forceFMWUpgradeAlertWithCompletion:]
com.apple.icloud.findmydeviced.notbackedup
com.apple.icloud.findmydeviced
lostModeEnabled
disableSlideToUnlock
message
phoneNumber
facetimeCapable
footnoteText
lostModeType
FMDLostModeInfo(0x%lx) message - %@, phoneNum - %@, facetimeCapable - %d, footnote - %@, inLostMode - %d, disableUnlock - %d, type - %ld
systemSerialNumber
leftSerialNumber
rightSerialNumber
com.apple.icloud.FindMyDevice.FindMyDeviceUserNotificationsXPCService
com.apple.icloud.FindMyDevice.FindMyDeviceBTDiscoveryXPCService
com.apple.icloud.FindMyDevice.FindMyDeviceIdentityXPCService
com.apple.icloud.FindMyDevice.FindMyDeviceEmergencyCallInfoPublisherXPCService
com.apple.icloud.FindMyDevice.FindMyDeviceEraseXPCService
FMD-NSXPC-Mods-Queue
v32@?0@"FMNSXPCConnection"8Q16^B24
useObliteration
brickDevice
customDelay
maxDelayInterval
hasBridgeCoProcessor
<%@: %p> useObliteration: %i, brickDevice - %i, maxDelay - %f, customDelay - %f, hasBridgeCoProcessor - %i
com.apple.AOSNotification.FMIPStateDidChange
com.apple.AOSNotification.ActivationLockAllowedMayHaveChanged
com.apple.AOSNotification.ActivationLockStateDidChange
com.apple.AOSNotification.FMIPLowBatteryLocateStateDidChange
com.apple.icloud.fmip.lostmode.enable
com.apple.icloud.fmip.lostmode.stopAlarm
com.apple.icloud.fmip.fmwEnabled
com.apple.icloud.fmip.accessoriesChanged
com.apple.findmy
username
personID
com.apple.icloud.FindMyDevice.FindMyDeviceHelperXPCService.PlaySoundError
FMDFMIPManagerUnregisterErrorDomain
FMNSXPCCachedConnectionSerialQueue
v32@?0@8@16^B24
com.apple.icloud.FindMyDevice
com.apple.icloud.findmydeviced.watch.playsoundstarted
com.apple.icloud.findmydeviced.watch.playsoundstopped
com.apple.icloud.findmydeviced.public.notbackedup
com.apple.icloud.findmydeviced.postwipe
com.apple.icloud.findmydeviced.watch
com.apple.icloud.findmydeviced.watch.notbackedup
com.apple.icloud.findmydeviced.LoggingPrefs
com.apple.icloud.findmydeviced.activationlockstatechanged
FMIPLostModeInfo
ClientLostModeInfo
FMIPWipeLostModeInfo
lostModeMessage
lostModeOwnerNumber
lostModeFacetimeCapable
lostModeFootnoteTextPrefKey
/var/mobile/Library/Preferences/com.apple.icloud.findmydeviced.FMIPAccounts.plist
mobile
fmipActive
fmipLostModeType
dataToSign
validityInMinutes
useSCRT
-[FMDFMIPManager(Private) disableBiometricIDForLostModeWithCompletion:]
-[FMDFMIPManager(Private) setDailyLocateReportEnabled:]
-[FMDFMIPManager(Private) showDailyLocateReport]
-[FMDFMIPManager(Private) addNotificationRequest:completion:]
BT_%@
%@_%@
FMDGenericAccessory(0x%lx), accessoryIdentifier - %@, audioRoutingIdentifier - %@, audioURL - %@
v24@?0@"NSString"8@"NSError"16
-[FMDDeviceIdentityFactory baaIdentityAttestationForSigningRequest:completion:]
-[FMDDeviceIdentityFactory baaIdentityAttestationForSigningRequest:completion:]_block_invoke
v24@?0@"FMDBAAAttestation"8@"NSError"16
FMNSXPCConnectionErrorDomain
com.apple.icloud.FindMyDevice.stateManager
lostModeIsActive = %d
%s : %@
Reading Managed Lost Mode file from: %@
managedLostModeDict %@
Managed lost mode type? %lu
Could not read managed lost mode file %@
Reading NeedsLocateAck Lost Mode file from: %@
needsLocateAckLostModeDict %@
NeedsLocateAck lost mode type? %lu
Could not read NeedsLocateAck lost mode file %@
Checking if device is in managed lost mode
Checking if device is in fmip lost mode
Checking if device is in client lost mode
Checking if device is in wipe lost mode
Checking if device is in needsLocateAck lost mode
Could not read needsLocateAck lost mode file %@
Device is in lost mode
lostModeInfo = %@
%s with lost mode info %@
%s: error - %@
FRAMEWORK API: %s
Error updating managed lost mode info to disabled : %@
Managed lost mode info updated to disabled
Error updating NeedsLocateAck lost mode into to disabled : %@
NeedsLocateAck lost mode info updated to disabled
Username : %@, personID : %@
%s in context %lu
%s with %s token
%s for paired device %@ with %s token
disableFMIPUsingToken: token present: %i
disableFMIPForAccount: Account present: %i
%s for paired device %@
markPairedDeviceWithUDID: token present: %i
needsLostModeExitAuth = %d
didReceiveLostModeExitAuthToken: token present: %i
%s enabled %s
%s for paired devices %@
XPC error for startPlayingSoundForAccessory:duration:rampUpDuration:channels:completion: %li
accessory %@
playSoundForAccessory encountered an error : %@
playSoundForAccessory sound started
XPC error for stopPlayingSoundForAccessory:rampDownDuration:completion %li
stopSoundForAccessory encountered an error : %@
stopSoundForAccessory sound did stop
XPC error for waitForRoutableAccessory:timeout:completion: %li
waitForRoutableAccessory encountered an error : %@
Accessory became routable %@
XPC error for soundStoppedForAccessoryIdentifier: %li
XPC error for clearData:completion: %li
Exiting Lost Mode, request to stop the Play Sound.
XPC error for _updateManagedLostModeWithInfo: %li
updateManagedLostModeInfo encountered an error : %@
updateManagedLostModeInfo completed
XPC error for _updateNeedsLocateAckLostModeWithInfo: %li
updateNeedsLocateAckLostModeInfo encountered an error : %@
updateNeedsLocateAckLostModeInfo completed
Disabling FMIP...
Cannot get managed lost mode file on watch or simulator
Static URL %@
XPC error for playSoundWithMessage:completion: %li
message %@
playSoundWithMessage encountered an error : %@
playSoundWithMessage sound started
XPC error for stopSoundMessageWithCompletion: %li
stop message sound
stopSoundMessageWithCompletion encountered an error : %@
stopSoundMessageWithCompletion sound stopped
FMDNSXPCConnectionCache Invalid configuration
XPC error for eraseDeviceWithCompletion: %li
eraseMacDeviceWithCompletion encountered an error : %@
eraseMacDeviceWithCompletion completed
Post wipe pref path could not obtain mobile's home directory
XPC error for setDailyLocateReportEnabled: %li
XPC error for showDailyLocateReport: %li
Framework (Private) : activationLockVersionWithCompletion
XPC error for activationLockVersionWithCompletion: %li
FRAMEWORK API: identityForPasscodeActivationUnlockWithContext:completion:
XPC error for identityForPasscodeActivationUnlockWithContext:completion: %li
XPC error for %s %li
Creating xpc connection with exportedInterface but no exportedObject
FMNSXPCConnection Connection interrupted %@
FMNSXPCConnection Connection invalidated %@
FMNSXPCConnection could not create remote object proxy %@
Shared file present. Writing new FMiP sate.
Updating shared file with lost mode - %lu
Shared file found. Returning FMiP active - %i
Shared file not found. Returning FMiP active as - NO
Shared file found. Returning lost mode type as - %lu
Shared file not found. Returning lost mode type as - FMDLostModeTypeNone
Could not write the shared file. Error - %@
Could not remove the shared file. Error - %@
FMDAudioAccessory
NSObject
FMDFMIPManager
FMDLostModeInfo
NSSecureCoding
NSCoding
FMDAudioAccessoryInfo
FindMyDeviceIdentityXPCInterface
FindMyDeviceEmergencyCallInfoPublisherXPCInterface
FindMyDeviceUserNotificationsXPCInterface
FindMyDeviceBTDiscoveryXPCInterface
FindMyDeviceBTDiscoveryDelegateXPCInterface
FMDFMIPProtocol
FindMyDeviceEraseXPCServiceProtocol
FMNSXPCConnectionConfiguration
FMNSXPCConnectionConfigurable
FMNSXPCConnectionCache
FMDEraseOptions
FMDEraseProxy
FMDGenericMessage
FMNSXPCCachedConnection
FMNSXPCConnecting
FMDVolatileMetaDataRecord
FMDDictionaryRepresentable
FMDIdentitySigningRequest
Private
FMDAccessoryIdentifier
FMDCodable
NSCopying
FMDIdentifiable
NSString
FMDBluetoothAccessory
FMDSupportedAccessory
FMDAccessory
FMDGenericAudioAccessory
FMDBAAAttestation
FMDDeviceIdentityFactory
FMNSXPCConnection
FMDFMIPSharedStateManager
FMDFMIPAccountInfo
init
_isRunningAsMobileUser
synchronizeDomain:
dictionaryForKey:inDomain:
objectForKey:
boolValue
_managedLostModeType
_needsAckLostModeType
_checkLostModeInSharedContainer
getManagedLostModeFileURL
fm_dictionaryWithContentsOfURL:error:
integerValue
fm_isFileNotFoundError
getNeedsLocateAckLostModeFileURL
setLostModeEnabled:
setMessage:
setPhoneNumber:
setFacetimeCapable:
setFootnoteText:
setDisableSlideToUnlock:
setLostModeType:
description
newErrorForCode:message:
code
dictionaryWithObjects:forKeys:count:
initWithDomain:code:userInfo:
lostModeInfo
lostModeType
_stopAlarm
_updateManagedLostModeWithInfo:completion:
_updateNeedsLocateAckLostModeWithInfo:completion:
initWithObjectsAndKeys:
initWithDescription:andTimeout:
signal
_disableFMIPUsingToken:inContext:completion:
wait
timeoutOccurred
oneTimeRemoveAuthToken
_initiateLostModeExitAuthForIDSDeviceID:withCompletion:
_postWipePrefPath
arrayWithObjects:count:
sharedCache
helperConfiguration
resumeConnectionWithConfiguration:
errorWithDomain:code:userInfo:
addFailureBlock:
remoteObjectProxy
copyAccessory:
invalidate
startPlayingSoundForAccessory:duration:rampUpDuration:channels:completion:
stopPlayingForAccessory:rampDownDuration:completion:
waitForRoutableAccessory:timeout:completion:
fmipConfiguration
soundStoppedForAccessoryIdentifier:
clearData:completion:
isEqual:
class
self
performSelector:
performSelector:withObject:
performSelector:withObject:withObject:
isProxy
isKindOfClass:
isMemberOfClass:
conformsToProtocol:
respondsToSelector:
retain
release
autorelease
retainCount
zone
hash
superclass
debugDescription
TQ,R
T#,R
T@"NSString",R,C
updateAudioAsset:
updatePlaybackChannels:
audioSafetyStatus
audioRoutingIdentifier
audioURL
audioAccessoryInfo
playingSound
shouldStopSoundNow
supportsChangingListeningMode
TQ,R,N
T@"NSString",R,N
T@"NSURL",R,N
T@"FMDAudioAccessoryInfo",R,N
TB,R,N
fm_map:
_getAccessoriesWithFilter:completion:
dictionaryWithObject:forKey:
updateManagedLostModeInfo:completion:
updateNeedsLocateAckLostModeInfo:completion:
managedLostModeFileURL
needsLocateAckLostModeFileURL
startPlayingSoundForMessage:completion:
stopSoundMessageWithCompletion:
sharedInstance
lostModeIsActive
isManagedLostModeActive
isLostModeActive
enableLostModeWithInfo:
disableLostMode
enableManagedLostModeWithInfo:completion:
disableManagedLostModeWithLocatedMessage:completion:
userDidAckManagedLostModeLocateWithCompletion:
playSoundWithOptions:completion:
deviceActivationDidSucceed
lockdownShouldDisableDeviceRestore
lockdownShouldDisableDevicePairing
fmipStateWithCompletion:
fmipAccountWithCompletion:
fmipAccount
didChangeFMIPAccountInfo:
enableFMIPInContext:
disableFMIPUsingToken:inContext:
disableFMIPUsingToken:inContext:completion:
disableFMIPUsingToken:forPairedDeviceWithUDID:withCompletion:
disableFMIPForAccount:pairedDeviceWithUDID:withCompletion:
markAsMissingSupportedForPairedDeviceWithUDID:withCompletion:
markPairedDeviceWithUDID:asMissingUsingToken:withCompletion:
isActivationLockAllowedWithCompletion:
isActivationLockEnabledWithCompletion:
isActivationLockedWithCompletion:
enableActivationLockWithCompletion:
needsLostModeExitAuth
didReceiveLostModeExitAuthToken:
initiateLostModeExitAuthWithCompletion:
initiateLostModeExitAuthForIDSDeviceID:withCompletion:
lowBatteryLocateEnabledWithCompletion:
setLowBatteryLocateEnabled:withCompletion:
userNotifiedOfActivationLockForAllPairedDevices
userNotifiedOfActivationLockForPairedDevices:
pathsToPreserveAcrossWipe
signatureHeadersWithData:completion:
stopPlayingSoundForAccessory:rampDownDuration:completion:
audioAccessorySerialNumbersWithCompletion:
getAccessoriesWithCompletion:
_forceFMWUpgradeAlertWithCompletion:
playSoundWithMessage:completion:
setManagedLostModeFileURL:
setNeedsLocateAckLostModeFileURL:
serialQueue
setSerialQueue:
.cxx_destruct
_managedLostModeFileURL
_needsLocateAckLostModeFileURL
_serialQueue
T@"NSURL",&,N,V_managedLostModeFileURL
T@"NSURL",&,N,V_needsLocateAckLostModeFileURL
T@"NSObject<OS_dispatch_queue>",&,N,V_serialQueue
boolForKey:inDomain:
dealloc
decodeObjectOfClass:forKey:
unsignedIntegerValue
lostModeEnabled
numberWithBool:
encodeObject:forKey:
disableSlideToUnlock
message
phoneNumber
facetimeCapable
footnoteText
numberWithUnsignedInteger:
stringWithFormat:
supportsSecureCoding
encodeWithCoder:
initWithCoder:
TB,R
_lostModeEnabled
_disableSlideToUnlock
_facetimeCapable
_message
_phoneNumber
_lostModeType
_footnoteText
TQ,N,V_lostModeType
TB,N,V_lostModeEnabled
TB,N,V_disableSlideToUnlock
T@"NSString",&,N,V_message
T@"NSString",&,N,V_phoneNumber
TB,N,V_facetimeCapable
T@"NSString",&,N,V_footnoteText
setSystemSerialNumber:
setLeftSerialNumber:
setRightSerialNumber:
systemSerialNumber
leftSerialNumber
rightSerialNumber
initWithSystemSerialNumber:leftSerialNumber:rightSerialNumber:
_systemSerialNumber
_leftSerialNumber
_rightSerialNumber
T@"NSString",C,N,V_systemSerialNumber
T@"NSString",C,N,V_leftSerialNumber
T@"NSString",C,N,V_rightSerialNumber
setServiceName:
setOptions:
setMachService:
identityForPasscodeActivationUnlockWithContext:completion:
baaIdentityAttestationForSigningRequest:completion:
interfaceWithProtocol:
setWithObjects:
setClasses:forSelector:argumentIndex:ofReply:
setRemoteInterface:
publishInfo:completion:
addNotificationRequest:completion:
startDiscovery
stopDiscovery
didEndDiscoveryWithError:
didDiscoverDevice:
didLoseDevice:
setExportedInterface:
enableLostModeWithInfo:usingCallback:
disableLostModeUsingCallback:
deviceActivationDidSucceedUsingCallback:
getLockdownShouldDisableDeviceRestoreUsingCallback:
getLockdownShouldDisableDevicePairingUsingCallback:
getFMIPStateUsingCallback:
getFmipAccountUsingCallback:
didChangeFMIPAccountInfo:usingCallback:
enableFMIPInContext:usingCallback:
disableFMIPUsingToken:inContext:usingCallback:
disableFMIPUsingToken:forPairedDeviceWithUDID:usingCallback:
disableFMIPForAccount:pairedDeviceWithUDID:usingCallback:
markAsMissingSupportedForPairedDeviceWithUDID:usingCallback:
markPairedDeviceWithUDID:asMissingUsingToken:callback:
isActivationLockAllowedUsingCallback:
isActivationLockEnabledUsingCallback:
isActivationLockedUsingCallback:
enableActivationLockUsingCallback:
activationLockVersionWithCompletion:
didReceiveLostModeExitAuthToken:usingCallback:
initiateLostModeExitAuthForApp:idsDeviceID:usingCallback:
lowBatteryLocateEnabledUsingCallback:
setLowBatteryLocateEnabled:usingCallback:
_forceFMWUpgradeAlertUsingCallback:
setDailyLocateReportEnabled:
showDailyLocateReport
fetchAPNSTokenWithCompletion:
startLocationMonitoring:
stopLocationMonitoring:
updatedConfigReceived:completion:
eraseDeviceWithOptions:completion:
identityConfiguration
emergencyCallInfoPublisherConfiguration
userNotificationConfiguration
btDiscoveryConfiguration
eraseDeviceServiceConfiguration
serviceName
options
remoteInterface
exportedInterface
machService
T@"NSXPCInterface",R,N
T@"FMNSXPCConnectionConfiguration",R,N
_machService
_serviceName
_remoteInterface
_exportedInterface
_options
T@"NSString",&,N,V_serviceName
T@"NSXPCInterface",&,N,V_remoteInterface
T@"NSXPCInterface",&,N,V_exportedInterface
TQ,N,V_options
TB,N,V_machService
dictionary
modsSerialQueue
connectionsByServiceName
allValues
enumerateObjectsUsingBlock:
objectForKeyedSubscript:
state
initWithConfiguration:
setObject:forKeyedSubscript:
removeObjectForKey:
initWithFMNSXPCConnection:
T@"FMNSXPCConnectionCache",R,N
setModsSerialQueue:
setConnectionsByServiceName:
_modsSerialQueue
_connectionsByServiceName
T@"NSObject<OS_dispatch_queue>",&,N,V_modsSerialQueue
T@"NSMutableDictionary",&,N,V_connectionsByServiceName
encodeBool:forKey:
encodeDouble:forKey:
decodeBoolForKey:
decodeDoubleForKey:
useObliteration
brickDevice
maxDelayInterval
customDelay
hasBridgeCoProcessor
setUseObliteration:
setBrickDevice:
setCustomDelay:
setMaxDelayInterval:
setHasBridgeCoProcessor:
_useObliteration
_brickDevice
_hasBridgeCoProcessor
_customDelay
_maxDelayInterval
TB,N,V_useObliteration
TB,N,V_brickDevice
Td,N,V_customDelay
Td,N,V_maxDelayInterval
TB,N,V_hasBridgeCoProcessor
vibrate
setVibrate:
soundName
setSoundName:
soundDuration
decodeIntForKey:
setSoundDuration:
encodeInt:forKey:
_vibrate
_soundDuration
_soundName
TB,N,V_vibrate
T@"NSString",&,N,V_soundName
Ti,N,V_soundDuration
setConnection:
setFailureBlock:
connection
failureBlock
_invalidate
didInvalidate
setDidInvalidate:
_connection
_didInvalidate
_failureBlock
T@"FMNSXPCConnection",&,N,V_connection
T@?,C,N,V_failureBlock
T@?,C,N,V_didInvalidate
mutableCopy
fm_dictionaryByDeeplySettingValuesForKeysWithDictionary:
setObject:forKey:
enumerateKeysAndObjectsUsingBlock:
setDictionary:
setWithArray:
decodeObjectOfClasses:forKey:
initWithDictionary:
dictionaryValue
T@"NSDictionary",R,N
appendMetaData:
_dictionary
T@"NSDictionary",&,N,V_dictionary
setDataToSign:
setValidityInMinutes:
setUseSCRT:
dataToSign
validityInMinutes
numberWithInteger:
useSCRT
initWithData:
_useSCRT
_dataToSign
_validityInMinutes
T@"NSData",&,N,V_dataToSign
TB,N,V_useSCRT
Tq,N,V_validityInMinutes
defaultManager
fileExistsAtPath:
fileURLWithPath:isDirectory:
fm_preferencesPathURLForDomain:
path
_quickFetchFMIPEnabledstate
disableBiometricIDForLostModeWithCompletion:
string
isEqualToString:
length
setString:
allocWithZone:
stringValue
encodeString:forKey:
decodeStringForKey:
copyWithZone:
encodeWithFMDCoder:error:
initWithFMDCoder:error:
objectType
objectTypeKey
isValid
valid
TB,R,N,GisValid
_string
T@"NSString",&,N,V_string
initWithString:
computeAccessoryIdentifierWithAddress:
dataUsingEncoding:
fm_sha256Hash
fm_hexString
lowercaseString
initWithAddress:
initWithDeviceVendor:deviceProductId:
accessoryIdentifier
T@"NSObject<FMDIdentifiable>",R,N
setAccessoryIdentifier:
setAudioRoutingIdentifier:
setAudioURL:
setAudioAccessoryInfo:
setSupportsChangingListeningMode:
initWithAccessoryId:audioRoutingIdentifier:audioURL:audioAccessoryInfo:supportsChangingListeningMode:
_supportsChangingListeningMode
_accessoryIdentifier
_audioRoutingIdentifier
_audioURL
_audioAccessoryInfo
T@"FMDAccessoryIdentifier",&,N,V_accessoryIdentifier
T@"NSString",&,N,V_audioRoutingIdentifier
T@"NSURL",&,N,V_audioURL
T@"FMDAudioAccessoryInfo",&,N,V_audioAccessoryInfo
TB,N,V_supportsChangingListeningMode
setAttestation:
setSignature:
attestation
signature
initWithAttestation:signature:
_attestation
_signature
T@"NSData",&,N,V_attestation
T@"NSData",&,N,V_signature
initWithConfiguration:exportedObject:
destroyXPCConnection
setFuture:
initWithMachServiceName:options:
initWithServiceName:
setRemoteObjectInterface:
setExportedObject:
future
finishWithError:
setInterruptionHandler:
setInvalidationHandler:
resume
remoteObjectProxyWithErrorHandler:
domain
_testMockConnection
set_testMockConnection:
__testMockConnection
_future
T@"NSXPCConnection",&,N,V_connection
T@"FMFuture",&,N,V_future
TB,N,V__testMockConnection
Tq,R,N
_fmipSharedFileURL
_readSharedInfo
_writeSharedInfo:
initWithContentsOfURL:
writeToURL:error:
removeItemAtURL:error:
fmipSharedFileStaticURL
setFMiPActive:
recalculateLostMode
fmipActive
_removeSharedInfo
setFmipSharedFileStaticURL:
stateManagerQueue
setStateManagerQueue:
_fmipSharedFileStaticURL
_stateManagerQueue
T@"NSURL",&,V_fmipSharedFileStaticURL
T@"NSObject<OS_dispatch_queue>",&,N,V_stateManagerQueue
setUsername:
setDsid:
setOneTimeRemoveAuthToken:
setServerURL:
username
dsid
serverURL
initWithUserName:dsid:oneTimeRemoveAuthToken:serverURL:
_username
_dsid
_oneTimeRemoveAuthToken
_serverURL
T@"NSString",C,N,V_username
T@"NSString",C,N,V_dsid
T@"NSString",C,N,V_oneTimeRemoveAuthToken
T@"NSURL",C,V_serverURL
B24@0:8@16
#16@0:8
@16@0:8
@24@0:8:16
@32@0:8:16@24
@40@0:8:16@24@32
B16@0:8
B24@0:8#16
B24@0:8:16
Vv16@0:8
Q16@0:8
^{_NSZone=}16@0:8
B24@0:8@"Protocol"16
@"NSString"16@0:8
B24@0:8@"<FMDAsset>"16
B24@0:8@"NSArray"16
@"NSURL"16@0:8
@"FMDAudioAccessoryInfo"16@0:8
@24@0:8@16
v16@0:8
v32@0:8@16@?24
v24@0:8@?16
v24@0:8@16
@24@0:8Q16
@32@0:8@16Q24
v40@0:8@16Q24@?32
v40@0:8@16@24@?32
v28@0:8B16@?20
v56@0:8@16d24d32@40@?48
v40@0:8@16d24@?32
v32@0:8Q16@?24
v32@0:8@?16@?24
@28@0:8i16@20
@"NSURL"
@"NSObject<OS_dispatch_queue>"
v24@0:8@"NSCoder"16
@24@0:8@"NSCoder"16
v20@0:8B16
v24@0:8Q16
@"NSString"
@40@0:8@16@24@32
Vv32@0:8@16@?24
Vv32@0:8@"NSDictionary"16@?<v@?@"NSString"@"NSError">24
Vv32@0:8@"FMDIdentitySigningRequest"16@?<v@?@"FMDBAAAttestation"@"NSError">24
Vv32@0:8@"NSDictionary"16@?<v@?@"NSError">24
Vv32@0:8@"FMDUserNotificationContent"16@?<v@?@"NSError">24
Vv24@0:8@16
Vv24@0:8@"NSError"16
Vv24@0:8@"NSObject<FMDBluetoothDiscoveryDevice>"16
Vv24@0:8@?16
Vv32@0:8Q16@?24
Vv40@0:8@16Q24@?32
Vv40@0:8@16@24@?32
Vv32@0:8@"FMDLostModeInfo"16@?<v@?@"NSError">24
Vv24@0:8@?<v@?@"NSError">16
Vv24@0:8@?<v@?B@"NSError">16
Vv24@0:8@?<v@?Q@"NSError">16
Vv24@0:8@?<v@?@"NSString"@"NSString"@"NSError">16
Vv32@0:8@"NSString"16@?<v@?@"NSError">24
Vv32@0:8Q16@?<v@?@"NSError">24
Vv40@0:8@"NSString"16Q24@?<v@?@"NSError">32
Vv40@0:8@"NSString"16@"NSString"24@?<v@?@"NSError">32
Vv40@0:8@"FMDFMIPAccountInfo"16@"NSString"24@?<v@?@"NSError">32
Vv32@0:8@"NSString"16@?<v@?B@"NSError">24
v24@0:8@?<v@?B@"NSError">16
v28@0:8B16@?<v@?@"NSError">20
v24@0:8@?<v@?@"NSError">16
v32@0:8@"NSData"16@?<v@?@"NSDictionary"@"NSError">24
Vv24@0:8@?<v@?@"NSError"@"NSArray">16
v32@0:8@"NSDictionary"16@?<v@?@"NSError">24
Vv24@0:8@"NSString"16
v24@0:8@?<v@?@"NSString"@"NSError">16
v32@0:8@"NSData"16@?<v@?@"NSError">24
v32@0:8@"FMDEraseOptions"16@?<v@?@"NSError">24
@"NSXPCInterface"16@0:8
@"NSXPCInterface"
@"NSMutableDictionary"
d16@0:8
v24@0:8d16
i16@0:8
v20@0:8i16
v24@0:8@?<v@?q>16
@?16@0:8
@"FMNSXPCConnection"
@24@0:8@"NSDictionary"16
@"NSDictionary"16@0:8
@"NSDictionary"
q16@0:8
v24@0:8q16
@"NSData"
@24@0:8^{_NSZone=}16
B32@0:8@16^@24
@32@0:8@16^@24
B32@0:8@"<FMDEncoder>"16^@24
@32@0:8@"<FMDDecoder>"16^@24
@32@0:8@16@24
@"NSObject<FMDIdentifiable>"16@0:8
@52@0:8@16@24@32@40B48
@"FMDAccessoryIdentifier"
@"FMDAudioAccessoryInfo"
@"NSXPCConnection"
@"FMFuture"
@48@0:8@16@24@32@40
