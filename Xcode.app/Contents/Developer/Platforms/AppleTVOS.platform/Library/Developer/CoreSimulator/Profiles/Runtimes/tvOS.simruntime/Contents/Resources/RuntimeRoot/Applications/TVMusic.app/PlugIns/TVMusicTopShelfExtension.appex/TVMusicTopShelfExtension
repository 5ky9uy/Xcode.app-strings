TVMusicLibraryManagerStateChangedNotification
TVMusicLibraryManagerSyncProgressNotification
TVMusicLibraryManagerLibraryUpdatedNotification
TVMusicLibraryManagerLibrarySwitchedNotification
v8@?0
v16@?0@"ICStoreRequestContext"8
v24@?0@"ICMusicSubscriptionStatusResponse"8@"NSError"16
v12@?0f8
v12@?0B8
Uninitialized
Initializing
Syncing
Synced
Unknown
Has Cloud Library
No Cloud Library
sharedInstance
T@"TVMusicLibraryManager",R
state
Tq,N,V_state
cloudStatus
Tq,N,V_cloudStatus
mpCloudController
T@"MPCloudController",&,N,V_mpCloudController
icMusicSubscriptionStatus
T@"ICMusicSubscriptionStatus",&,N,V_icMusicSubscriptionStatus
isFusePurchased
TB,N,V_isFusePurchased
isSagaPurchased
TB,N,V_isSagaPurchased
syncProgress
Td,N,V_syncProgress
libraryHasContent
TB,R,N
com.apple.TVMusic
TVMusicLibraryManager
MusicLibrarySeasonTitle
v16@?0@"MPIdentifierSet"8
artwork
TVMusicTopShelf
appletv-view-top-url
atv-music-homescreen-url
storeplatform-lookup-url-unpersonalized
previewArtwork
MusicTopShelfDisableCarousel
-[TVMTopShelfServiceProvider init]
1080pHdVideo
hdMusicVideo
mochaHdVideo
sd480pVideo
sdVideoWithPlusAudio
com.apple.TVMusicTopShelfExtension
v16@?0@"<TVTopShelfContent>"8
v20@?0@"<TVTopShelfContent>"8B16
https://itunes.apple.com/WebObjects/MZStore.woa/wa/viewFeature?id=1460291395
v16@?0@"NSArray"8
v32@?0@"NSDictionary"8@"NSArray"16@"NSError"24
v28@?0@"NSURL"8B16@"NSError"20
kind
playlist
name
firstTracks
%@://play/playlist?storeID=%@&type=musicVideo
v16@?0@"NSDictionary"8
children
v24@?0@"NSDictionary"8@"NSError"16
%.0f
X-JS-TIMESTAMP
results
v24@?0@"ICURLResponse"8@"NSError"16
caller
version
offers
assets
type
flavor
preview
storePlatformData
lockup
pageData
adamIds
TVMusic
playlistID
showPlaylist
v16@?0@"TVTopShelfSectionedContent"8
-[TVMTopShelfServiceProvider _topShelfSectionedContentWithBag:completion:]
q24@?0^{TVTopShelfItemCollection=#}8^{TVTopShelfItemCollection=#}16
v20@?0^{TVTopShelfItemCollection=#}8i16
v16@?0^{TVTopShelfItemCollection=#}8
popId
artid_%@_%ldx%ld
-[TVMTopShelfServiceProvider _getURLForImage:withIdentifier:]
-[TVMTopShelfServiceProvider _getURLForArtworkCatalog:mpObject:completionHandler:]
v16@?0@"NSURL"8
v24@?0@"MPExportableArtworkProperties"8@"NSError"16
v32@?0@"MPModelPlaylistEntry"8@"NSIndexPath"16^B24
pl_%lld_%@
v16@?0@"UIGraphicsImageRendererContext"8
v24@?0@"MPModelLibraryResponse"8@"NSError"16
album
persistentID
storeID
play
.png
selectedChart
TopAlbumsSection
-[TVMTopShelfServiceProvider _getNowPlayingSection:]
://nowplaying
NowPlayingSection
v24@?0^v8^{__CFError=}16
-[TVMTopShelfServiceProvider _getRecentlyAddedSection:]
RecentlyAddedSection
v24@?0q8@"NSArray"16
v32@?0@"MPModelGenericObject"8@"NSIndexPath"16^B24
-[TVMTopShelfServiceProvider _getTopAlbumsSectionFromURL:completion:]
-[TVMTopShelfServiceProvider _libraryUpdated:]
recentlyAddedCount
Tq,V_recentlyAddedCount
sectionCompletionQueue
T@"NSObject<OS_dispatch_queue>",&,N,V_sectionCompletionQueue
libraryManager
T@"TVMusicLibraryManager",&,N,V_libraryManager
itunesCloudClient
T@"ICCloudClient",&,N,V_itunesCloudClient
cachedFilenames
T@"NSMutableSet",&,N,V_cachedFilenames
libraryState
Tq,V_libraryState
preferredFlavors
T@"NSArray",&,N,V_preferredFlavors
musicAppBundleVersion
T@"NSString",C,N,V_musicAppBundleVersion
disableCarouselStyle
TB,N,V_disableCarouselStyle
TVMusicTopShelfExtension
init
sharedCloudController
defaultMediaLibrary
defaultCenter
_subscriptionStatusDidChange:
sharedStatusController
addObserver:selector:name:object:
_libraryPathDidChange:
_libraryDidChange:
_updateInProgressDidChange:
_initializeLibrary
filterAvailableContentGroups:withOptions:
state
_debugNameForState:
postNotificationName:object:
_updateSyncProgress
mpCloudController
cloudAddToPlaylistBehavior
setCloudAddToPlaylistBehavior:completionHandler:
defaultIdentityStore
setIdentityStore:
activeAccount
setIdentity:
setAllowsExpiredBags:
initWithBlock:
initWithStoreRequestContext:
setAllowsFallbackToExpiredStatus:
setAllowsFallbackToStatusNeedingReload:
subscriptionStatus
icMusicSubscriptionStatus
isMatchEnabled
setIsSagaPurchased:
statusType
setIsFusePurchased:
isCloudMusicServiceEnabled
setCloudStatus:
setIcMusicSubscriptionStatus:
isSagaPurchased
isFusePurchased
cloudStatus
_debugNameForCloudStatus:
performSubscriptionStatusRequest:withCompletionHandler:
loadUpdateProgressWithCompletionHandler:
setSyncProgress:
performSelector:withObject:afterDelay:
_loadUpdateProgressWithCompletionHandler:
isCloudLibraryInitialImport
setState:
isJaliscoInitialImport
_initialUpdate
_updateSubscriptionStatusWithCompletion:
libraryHasContent
_updateSyncState
sharedInstance
.cxx_destruct
syncProgress
setMpCloudController:
_isFusePurchased
_isSagaPurchased
_state
_cloudStatus
_syncProgress
_mpCloudController
_icMusicSubscriptionStatus
isMainThread
sortType
number
mainBundle
localizedStringForKey:value:table:
localizedStringWithFormat:
show
title
stringWithFormat:
tvm_seasonTitle
setMediaLibrary:
kindWithVariants:
arrayWithObjects:count:
kindWithKinds:
kindWithVariants:songKind:
kindWithVariants:playlistEntryKind:options:
kindWithEpisodeKind:
dictionaryWithObjects:forKeys:count:
kindWithRelationshipKinds:
setItemKind:
sortDescriptorWithRelatedProperties:ascending:
setItemSortDescriptors:
propertySetWithProperties:
initWithProperties:relationships:
propertySetForMovie
setItemProperties:
kindWithSeasonKind:
setScopedContainers:
arrayWithCapacity:
addObject:
setSectionKind:
setSectionProperties:
propertySetForTVEpisode
sortDescriptorWithKey:ascending:
propertySetForSongsWithDetails:
songsLibraryRequestForAlbum:
kindWithSongKind:
propertySetForAlbumDetails
propertySetForSongsInContextMenu
_songsLibraryRequestForContextMenuWithPlaylist:songProperties:
kindWithPlaylistEntryKind:options:
setStoreSubscriptionAdamID:
setAllowedItemIdentifiers:
playlistsLibraryRequestWithParentPlaylistFolder:userEditableOnly:allowEmptyPlaylists:
type
_albumsLibraryRequestWithVariants:
albumsLibraryRequest
kindWithAlbumKind:
recentlyAddedlibraryRequest
TVShowsLibraryRequest
TVShowsAndMoviesLibraryRequest
TVSeasonsLibraryRequestForShow:
TVEpisodesLibraryRequestForShow:season:
moviesLibraryRequest
songsLibraryRequest
songsLibraryRequestForAlbumDetails
songsLibraryRequestForContextMenu
songsAndMusicVideosLibraryRequestForContextMenu
songsLibraryRequestForPlaylist:
songsLibraryRequestForContextMenuWithPlaylist:
TVEpisodeLibraryRequestWithAdamID:
playlistsLibraryRequestWithParentPlaylistFolder:
albumsLibraryRequestForArtist:
compilationsLibraryRequest
artistsLibraryRequest
musicVideosLibraryRequest
genresLibraryRequest
composersLibraryRequest
_registerBagKeys
_createCacheDirectory
applicationProxyForIdentifier:
shortVersionString
bundleURL
standardUserDefaults
boolForKey:
setDisableCarouselStyle:
bagForProfile:profileVersion:
_loadSectionedContentWithBag:completion:
_loadCarouselContentWithBag:completion:
disableCarouselStyle
URLForKey:
URLWithString:
initWithStyle:items:
_getCarouselItemsForPlaylistDictionary:playlistIDs:urlBag:completion:
_requestStoreDataFromURL:completion:
valueWithCompletion:
count
dictionaryWithCapacity:
allKeys
countByEnumeratingWithState:objects:count:
tvs_dictionaryForKey:
objectForKeyedSubscript:
isEqualToString:
initWithIdentifier:
setTitle:
tvs_arrayForKey:
firstObject
setObject:forKeyedSubscript:
initWithURL:
setPlayAction:
_urlForDisplayingPlaylist:
setDisplayAction:
allValues
identifier
_getPreviewVideoURLForItemID:fromPlatformResults:
setPreviewVideoURL:
_getArtworkURLForItemID:fromPlatformResults:
setImageURL:forTraits:
_requestMetadataForIdentifiers:urlBag:completion:
_requestMetadataForIdentifiers:baseURL:completion:
_storePlatformRequestQueryItemsWithItemIdentifiers:profile:
ic_URLByAppendingQueryItems:
_storeRequestContext
initWithURLRequest:requestContext:
storePlatformConfiguration
setJSSignConfiguration:
setShouldUseMescalSigning:
date
timeIntervalSince1970
initWithFormat:
setAdditionalHTTPCookies:
defaultSession
parsedBodyDictionary
enqueueDataRequest:withCompletionHandler:
queryItemWithName:value:
componentsJoinedByString:
length
initWithDictionary:
mainScreen
bounds
artworkSize
URLWithSize:
preferredFlavors
indexOfObject:
tvs_stringForKey:
isFileURL
dataWithContentsOfURL:
JSONObjectWithData:options:error:
initWithURL:requestContext:
initWithBundleIdentifier:
setProcessName:
setClientIdentifier:
musicAppBundleVersion
setClientVersion:
setRequestingBundleIdentifier:
setRequestingBundleVersion:
initWithIdentity:clientInfo:
initWithName:value:
setScheme:
setHost:
setQueryItems:
addBagKey:valueType:
registerBagKeySet:forProfile:profileVersion:
setWithCapacity:
setCachedFilenames:
setCacheLimit:forCacheIdentifier:requestingContext:
libraryManager
cloudClient
setItunesCloudClient:
becomeActiveAndWaitUntilDone:
setLibraryManager:
_libraryUpdated:
setLibraryState:
_topShelfSectionedContentWithBag:completion:
libraryState
numberWithInt:
compare:
sortUsingComparator:
initWithSections:
_getNowPlayingSection:
_saveCachedFilenames
_cleanupCachedFiles
_getRecentlyAddedSection:
topAlbumsURLWithBaseURL:
_getTopAlbumsSectionFromURL:completion:
componentsWithURL:resolvingAgainstBaseURL:
queryItems
stringByAppendingPathComponent:
_cacheDirectoryPath
defaultManager
createDirectoryAtPath:withIntermediateDirectories:attributes:error:
size
stringByAppendingPathExtension:
cachedFilenames
lastPathComponent
removeObject:
fileURLWithPath:isDirectory:
fileExistsAtPath:
writeToFile:atomically:
scale
setDestinationScale:
setCacheIdentifier:forRequestingContext:
resolvedURLString
playlist
_getArtworkURLForPlaylist:completion:
requestExportableArtworkPropertiesWithCompletion:
results
song
album
identifiers
deviceLibraryPersistentID
numberWithLongLong:
containsObject:
storeCloudID
numberWithUnsignedLongLong:
enumerateItemsUsingBlock:
imageSizeForImageShape:
itunesCloudClient
preferredFormat
setOpaque:
setScale:
initWithSize:format:
imageWithData:
drawInRect:
imageWithActions:
_getURLForImage:withIdentifier:
loadArtworkInfoForSagaIDs:completionHandler:
performWithResponseHandler:
trackCount
representativeSong
hasVideo
artworkCatalog
name
tracksTiledArtworkCatalogWithRows:columns:
season
movie
storeAdamID
description
setPath:
removeAllObjects
enumeratorAtPath:
hasSuffix:
removeItemAtPath:error:
subarrayWithRange:
initWithArtworkResponseDictionary:
artworkURLWithSize:cropStyle:format:
longLongValue
playAction
imageURLForTraits:
initWithItems:
sectionCompletionQueue
absoluteString
stringByAppendingString:
recentlyAddedCount
setRecentlyAddedCount:
setContentRange:
stringValue
_artworkCatalogForGenericObject:title:
setFittingSize:
scaledFittingSize
valueWithCGSize:
_getURLForArtworkCatalog:mpObject:completionHandler:
bodyData
_topAlbumsSectionForStoreResponse:
object
topShelfContentDidChange
loadTopShelfContentWithCompletionHandler:
setSectionCompletionQueue:
setPreferredFlavors:
setMusicAppBundleVersion:
_disableCarouselStyle
_recentlyAddedCount
_sectionCompletionQueue
_libraryManager
_itunesCloudClient
_cachedFilenames
_libraryState
_preferredFlavors
_musicAppBundleVersion
TVMusicLibraryManager init
State changed from %@ to %@
Sync progress: %g%%
Error getting subscription status: %@
Failed getting subscription status, falling back to previously cached status.
Got subscription status: saga %{BOOL}d, fuse %{BOOL}d, cloud state %@
Subscription status is not available.
Library state: %@, Cloud status: %@
%s: %s: 
Could not get client version from bundle: %@
loadTopShelfContentWithCompletionHandler:
Calling completion for carousel content: %@
Content not available for carousel-style top shelf; using sectioned style instead.
Calling completion for sectioned content: %@
Disabling top shelf carousel style with user default %@
Requesting video playlist data from URL: %@
Video Playlist result: %@
No response from URL %@, error: %@
No URL for bag key: %@, error: %@
No ordered Playlist array, getting unordered list of playlists from response dictionary.
No first track IDs for playlist: %@, ID %@
Can't find playlist in dictionary with ID %@
Music Video IDs: %@
Invalid response for metadata request for music videos: %@, error: %@
No preview videos are available for %ld returned carousel items.
Bag value for %@ not found. Bag error: %@
No results in response dictionary: %@
No response from store platform request: %@, error: %@
No item %@ in platform results
Can't find artwork key "%@" in metadata for music video id %@; using standard artwork instead.
No artwork in item dictionary: %@
Could not get AMSMediaArtwork object for artwork dictionary: %@
Could not get artwork URL for requested size (%g, %g), reported size (%g, %g) from artwork dict: %@
Artwork for music video ID %@: requested size (%g, %g), reported size (%g, %g), URL %@
No offers for item %@ in platform results
No assets for offer [%@] in item %@ in platform results
Can't find one of the following flavors of preview video: %@
Can't find preview in asset: %@
Can't find URL in preview: %@
Invalid URL: %@
Preview video URL for music video ID %@: %@
Library state: %d
addSection count = %d, total = %d
Adding NowPlaying section: %@
Adding RecentlyAdded section: %@
Need to show top albums.
Got top albums URL from bag: %@
Adding TopAlbums section: %@
Did not find bag key %@, bag error: %@
Can't create cache path %@: error = %@
%s: %s: Saved artwork to file URL: %@
%s: %s: Using cached artwork at: %@
%s: %s: Can't get file URL for artwork! identifier: %@, pngData: %@
Got URL for artwork: %@
Getting artwork for playlist: %@
Unable to play item: %@
Top Album "%@", URL: %@
Now Playing artwork URL (%@): %@
Now Playing info: %@
Can't get Now Playing info; error: %@
_getRecentlyAddedSection maybeCallCompletion: count=%ld, numItems=%ld
_getRecentlyAddedSection: calling completion with %ld items
Loading artwork of size %@
Could not load artwork for item "%@"
No artwork for item "%@"
_getRecentlyAddedSection: no items found, calling completion with nil
Invalid top albums response: %@, error: %@
Library update, state: %d
%s: %s: Library synced, updating top shelf
TVMusicLibraryManager
TVMusicAdditions
TVMusicMPLibraryRequestFactory
TVMTopShelfServiceProvider
@16@0:8
B16@0:8
v24@0:8q16
v24@0:8d16
q16@0:8
v32@0:8q16@?24
v24@0:8@?16
v16@0:8
@24@0:8q16
v24@0:8@16
v20@0:8B16
d16@0:8
@"MPCloudController"
@"ICMusicSubscriptionStatus"
@24@0:8@16
@32@0:8@16@24
@32@0:8@16B24B28
@24@0:8Q16
@20@0:8B16
v32@0:8@16@?24
v48@0:8@16@24@32@?40
v40@0:8@16@24@?32
@32@0:8@16^@24
^{TVTopShelfItemCollection=#}24@0:8@16
@"NSObject<OS_dispatch_queue>"
@"TVMusicLibraryManager"
@"ICCloudClient"
@"NSMutableSet"
@"NSArray"
@"NSString"
<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE plist PUBLIC "-//Apple//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd">
<plist version="1.0">
<dict>
<key>com.apple.accounts.appleaccount.fullaccess</key>
<true/>
<key>com.apple.itunesstored.private</key>
<true/>
<key>com.apple.private.coreservices.canmaplsdatabase</key>
<true/>
<key>com.apple.private.tcc.allow</key>
<array>
<string>kTCCServiceMediaLibrary</string>
</array>
<key>com.apple.security.exception.files.home-relative-path.read-write</key>
<array>
<string>/Library/Logs/MediaServices/</string>
</array>
<key>com.apple.security.exception.mach-lookup.global-name</key>
<array>
<string>com.apple.ak.anisette.xpc</string>
<string>com.apple.askpermissiond</string>
<string>com.apple.familycircle.agent</string>
<string>com.apple.hsa-authentication-server</string>
<string>com.apple.mediaartworkd.xpc</string>
<string>com.apple.MediaPlayer.MPRadioControllerServer</string>
<string>com.apple.rtcreportingd</string>
<string>com.apple.storebookkeeperd.xpc</string>
<string>com.apple.atc.xpc</string>
<string>com.apple.atc.xpc.downloadprogress</string>
<string>com.apple.atc.xpc.runkeeplocaltask</string>
<string>com.apple.PairingManager</string>
<string>com.apple.itunescloudd.playactivity</string>
<string>com.apple.nanoprefsync</string>
<string>com.apple.itunescloud.delegation-provider</string>
<string>com.apple.itunescloud.delegate-account-store</string>
<string>com.apple.coremedia.endpointpicker.xpc</string>
<string>com.apple.coremedia.routediscoverer.xpc</string>
<string>com.apple.coremedia.routingcontext.xpc</string>
<string>com.apple.coremedia.endpointremotecontrolsession.xpc</string>
<string>com.apple.PairingManager</string>
<string>com.apple.itunescloud.contenttaste</string>
<string>com.apple.itunescloud.music-subscription-status-service</string>
<string>com.apple.adid</string>
</array>
</dict>
</plist>
