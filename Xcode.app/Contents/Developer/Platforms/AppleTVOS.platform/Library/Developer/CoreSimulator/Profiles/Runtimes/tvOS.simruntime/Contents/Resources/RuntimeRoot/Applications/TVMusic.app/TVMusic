333333
N@333333
yFS?
?ffffff
@y@ffffff
u@333333
A@q=
traitCollection
userInterfaceStyle
colorWithWhite:alpha:
setBackgroundColor:
traitCollectionDidChange:
init
initWithName:initialState:mode:
setLogObject:
sharedInstance
defaultCenter
removeObserver:
dealloc
viewDidLoad
_appDidBecomeActiveNotification:
addObserver:selector:name:object:
_libraryDidUpdate:
_musicLibraryStateChanged:
_musicLibrarySyncProgress:
_registerStateMachineHandlers
setShouldAcceptEvents:
viewWillAppear:
currentState
libraryManager
state
_handleLibraryState:
postEvent:
viewDidAppear:
setViewVisible:
sharedApplication
launchTestName
isRunningTest:
finishedTest:extraResults:
viewDidDisappear:
currentDisplayedView
view
arrayWithObjects:count:
cloudProgressView
_removeCurrentView
mainBundle
localizedStringForKey:value:table:
initWithMessage:
addSubview:
setCloudProgressView:
setCurrentDisplayedView:
removeFromSuperview
noMusicView
mainScreen
bounds
initWithFrame:
setMessage:
setNoMusicView:
defaultMediaLibrary
filterAvailableContentGroups:withOptions:
numberWithBool:
dictionaryWithObjects:forKeys:count:
bundleIdentifier
setScreenSaverDisplayStatusForBundleIdentifier:isEnabled:extraInfo:
parentViewController
willMoveToParentViewController:
removeFromParentViewController
array
numberWithUnsignedInteger:
addObject:
activityIndicatorView
initWithActivityIndicatorStyle:
center
setCenter:
setAlpha:
setActivityIndicatorView:
startAnimating
_showCloudProgressView
_removeTopMenu
_removeCloudProgressView
_removeWaitingView
_removeNoMusicView
_showWaitingView
registerDefaultHandlerForEvent:withBlock:
isViewVisible
_updateTopMenu
registerHandlerForEvent:onState:withBlock:
_showSyncingView
registerHandlerForEvent:onStates:withBlock:
_setScreenSaverEnabledForCloudLibrary
libraryHasContent
menuItems
_menuItems
isEqualToArray:
initWithMenuItems:
addChildViewController:
didMoveToParentViewController:
setNeedsFocusUpdate
_showNoMusicView
syncProgress
setProgressPercent:
initialize
preferredFocusEnvironments
.cxx_destruct
stateMachine
setStateMachine:
topMenuViewController
setTopMenuViewController:
setLibraryManager:
_viewVisible
_stateMachine
_topMenuViewController
_cloudProgressView
_activityIndicatorView
_noMusicView
_currentDisplayedView
_libraryManager
_contextDictionaryForPlaylistDictionary:
identifiers
deviceLibraryPersistentID
numberWithLongLong:
stringValue
initWithContextDictionary:identifier:
playlist
songsLibraryRequestForPlaylist:
_handleActionForViewElement:
_handleLongPressForViewElement:
reloadData
playlistsLibraryRequestWithParentPlaylistFolder:userEditableOnly:allowEmptyPlaylists:
setAllowedItemIdentifiers:
results
firstItem
_isPlaylist:visuallySameAsPlaylist:
updateWithContextDictionary:forceUpdate:
setPlaylist:
dictionaryForPlaylist:completion:
performWithResponseHandler:
genericObjectWithModelObject:
initWithPlaylistDictionary:playlistModel:
dictionaryWithCapacity:
name
setObject:forKeyedSubscript:
tvm_dictionaryRepresentation
clientDataForItemType:persistentID:
totalItemCount
numberWithInteger:
hasLoadedValueForKey:
descriptionText
playlistsLibraryRequestWithParentPlaylistFolder:
isEqualToString:
attributes
objectForKeyedSubscript:
_handleCommand:
playSongsInContainer:startIdentifiers:initialPlaybackType:
_getPlaylistEntryForViewElement:completion:
showContextMenu:
contextMenuForLibraryPlaylistEntry:inPlaylist:atPosition:completionHandler:
longLongValue
songsRequest
integerValue
tvm_playlistEntryAtIndex:
performRequest:withIdentifier:ignoreCache:completion:
playSongsInContainer:startIdentifiers:shuffle:
showContextMenuForLibraryObject:
getViewControllerForPlaylist:completion:
handleEvent:targetResponder:viewElement:extraInfo:
representedObject
_playlist
_subscriptionStatusDidChange:
sharedStatusController
_libraryPathDidChange:
_libraryDidChange:
_updateInProgressDidChange:
_initializeLibrary
sharedCloudController
_debugNameForState:
postNotificationName:object:
_updateSyncProgress
mpCloudController
cloudAddToPlaylistBehavior
setCloudAddToPlaylistBehavior:completionHandler:
defaultIdentityStore
setIdentityStore:
activeAccount
setIdentity:
setAllowsExpiredBags:
initWithBlock:
initWithStoreRequestContext:
setAllowsFallbackToExpiredStatus:
setAllowsFallbackToStatusNeedingReload:
subscriptionStatus
icMusicSubscriptionStatus
isMatchEnabled
setIsSagaPurchased:
statusType
setIsFusePurchased:
isCloudMusicServiceEnabled
setCloudStatus:
setIcMusicSubscriptionStatus:
isSagaPurchased
isFusePurchased
cloudStatus
_debugNameForCloudStatus:
performSubscriptionStatusRequest:withCompletionHandler:
loadUpdateProgressWithCompletionHandler:
setSyncProgress:
performSelector:withObject:afterDelay:
_loadUpdateProgressWithCompletionHandler:
isCloudLibraryInitialImport
setState:
isJaliscoInitialImport
_initialUpdate
_updateSubscriptionStatusWithCompletion:
_updateSyncState
_isFusePurchased
_isSagaPurchased
_state
_cloudStatus
_syncProgress
_icMusicSubscriptionStatus
isMainThread
viewControllerForContextMenuData:
theApp
navigationController
presentViewController:animated:completion:
count
heading
alertControllerWithTitle:message:preferredStyle:
setTitle:
countByEnumeratingWithState:objects:count:
actionBlock
title
actionWithTitle:style:handler:
hasCheckmark
_setChecked:
addAction:
alloc
_manageSubscriptionsURL
initWithApplicationURL:
appController
context
javaScriptApplicationURL
_closeApp
applicationURL
setLaunchOptions:
setJavaScriptApplicationURL:
setStorageIdentifier:
initWithContext:window:delegate:
setAppController:
setTransitioningDelegate:
currentAppContext
initWithAppContext:
stop
_urlForBagKey:bagSubkey:
URLWithString:
valueForKey:
length
subscriptionsAppController
isEqual:
class
self
performSelector:
performSelector:withObject:
performSelector:withObject:withObject:
isProxy
isKindOfClass:
isMemberOfClass:
conformsToProtocol:
respondsToSelector:
retain
release
autorelease
retainCount
zone
hash
superclass
description
debugDescription
appController:evaluateAppJavaScriptInContext:
appController:didFinishLaunchingWithOptions:
appController:didFailWithError:
appController:didStopWithOptions:
playerForAppController:
animationControllerForPresentedController:presentingController:sourceController:
animationControllerForDismissedController:
interactionControllerForPresentation:
interactionControllerForDismissal:
presentationControllerForPresentedViewController:presentingViewController:sourceViewController:
launchApplicationWithNavigationController:launchOptions:
setApplicationURL:
_applicationURL
_appController
_contextDictionaryForAlbumDictionary:
initWithAlbumDictionary:albumModel:
songsLibraryRequestForAlbum:
scopedContainers
arrayByAddingObject:
setScopedContainers:
album
filterObject
songsRequestForAlbum:filterObject:
albumsLibraryRequest
setAlbum:
getDictionaryForAlbum:filterObject:completion:
initWithAlbumDictionary:albumModel:optionalGenreOrComposer:
dictionaryForAlbum:trackCount:
setDateFormat:
artist
genre
storeAdamID
storeSubscriptionAdamID
releaseDateComponents
year
date
calendarWithIdentifier:
dateFromComponents:
stringFromDate:
setDeviceLibraryPersistentID:
playSongsInContainer:startIdentifiers:shuffle:filterObject:
tvm_songAtIndex:
showContextMenuForLibraryObject:inContainer:
getViewControllerForAlbum:optionalGenreOrComposer:completion:
setFilterObject:
_album
_filterObject
genresLibraryRequest
initWithLibraryRequest:
setBackdropViewMode:
setTableViewWidth:
title1Font
pointSize
systemFontOfSize:weight:
_textColor
setFirstLineHeadIndent:
initWithString:attributes:
setTableHeaderTitleAttributedText:
setHeadingVerticalOffset:
setPreviewOnRightSide:
setTableViewPadding:
tableView
layoutMargins
setLayoutMargins:
setClipsToBounds:
registerClass:forCellReuseIdentifier:
_handlePlayPause:
initWithTarget:action:
setAllowedPressTypes:
addGestureRecognizer:
player
togglePlayPause
dequeueReusableCellWithIdentifier:forIndexPath:
mpResults
itemAtIndexPath:
textLabel
setText:
setTextColor:
setSelected:
cellForRowAtIndexPath:
tableView:didUpdateFocusInContext:withAnimationCoordinator:
previouslyFocusedIndexPath
nextFocusedIndexPath
_setColorsForCell:indexPath:isFocused:withAnimationCoordinator:
blackColor
addCoordinatedAnimations:completion:
setNeedsDisplay
albumsViewControllerForGenre:
tableView:cellForRowAtIndexPath:
tableView:didSelectRowAtIndexPath:
tableView:willDisplayCell:forRowAtIndexPath:
tableView:heightForRowAtIndexPath:
_previewViewControllerForIndexPath:
layoutSubviews
frame
setFrame:
initWithFrame:style:
_playButtonAction:
_setButtonType:
_longPressAction:
setDelegate:
_setRemembersPreviouslyFocusedItem:
delegate
tableView:didReceiveLongPressForItemAtIndexPath:
tableView:shouldHandleLongPressForItemAtIndexPath:
_performBlockWithFocusedCellIndexPath:
nextFocusedView
isDescendantOfView:
visibleCells
indexPathForCell:
copy
tableView:didReceivePhysicalPlayForItemAtIndexPath:
window
screen
focusedView
superview
gestureRecognizerShouldBegin:
gestureRecognizer:shouldRecognizeSimultaneouslyWithGestureRecognizer:
gestureRecognizer:shouldRequireFailureOfGestureRecognizer:
gestureRecognizer:shouldBeRequiredToFailByGestureRecognizer:
gestureRecognizer:shouldReceiveTouch:
gestureRecognizer:shouldReceivePress:
didUpdateFocusInContext:withAnimationCoordinator:
indexPathForLastFocusedItem
_indexPathForDirectlyFocusedItem
_playButtonRecognizer
_longPressRecognizer
_indexPathForLastFocusedItem
canBecomeFocused
initWithNibName:bundle:
setModalPresentationStyle:
applicationWillResignActive:
applicationDidBecomeActive:
_reportPAFEventForLyricsView
panGestureRecognizer
setAllowedTouchTypes:
setUserInteractionEnabled:
setBounces:
setFont:
boldSystemFontOfSize:
whiteColor
colorWithAlphaComponent:
setNumberOfLines:
setContentInsetAdjustmentBehavior:
setContentInset:
layer
numberWithDouble:
setLocations:
CGColor
clearColor
setColors:
addSublayer:
setMaskView:
_handleTogglePlayPause
song
isLibraryAdded
lyrics
text
initWithString:
lyricsID
_showLyrics:withLyricsID:error:
hasStoreLyrics
_loadAndDisplayStoreLyrics
lyricsText
_showActivityIndicator
viewWillDisappear:
stringWithString:
appendString:
songwriters
stringByAppendingString:
songwritersStringWithPrefix:songwriters:
appendAttributedString:
addAttribute:value:range:
lyricsLines
nextLine
parentSection
defaultParagraphStyle
mutableCopy
setLineSpacing:
TTML
dataUsingEncoding:
initWithTTMLData:
_attributedStringFromLyricsInfo:
setSong:
language
setLanguage:
parseWithCompletion:
requestTTMLLyricsForSong:completion:
cancelPreviousPerformRequestsWithTarget:selector:object:
_hideActivityIndicator
isExplicitLyricsRestrictedError:
setLyricsText:
setLyricsID:
setAttributedText:
setNeedsLayout
_showErrorAlertWithTitle:message:
viewWillLayoutSubviews
sizeThatFits:
setSize:
setContentSize:
sublayers
firstObject
songTitle
setTextAlignment:
preferredFontForTextStyle:
songArtist
stringWithFormat:
dismissViewControllerAnimated:completion:
isAppActive
setDisplayType:
setVisibleDuration:
setModelSong:
PAFFeatureName
setFeatureName:
PAFRecommendationData
setRecommendationData:
PAFContainerData
setModelPlayEvent:
lyricsReportingController
recordLyricsViewEvent:
defaultPlayer
initWithSong:
setPAFFeatureName:
setPAFRecommendationData:
setPAFContainerData:
_lyricsLabel
_lyricsScrollView
_spinnerView
_songTitleLabel
_startViewTime
_boldLyricsFont
_viewAppeared
_gradientView
_gradientMaskView
_PAFFeatureName
_PAFRecommendationData
_PAFContainerData
_song
_lyricsText
_lyricsID
_language
registerViewElementClass:forElementName:
layoutWithElement:
boolValue
isDisabled
_setPlaybackIdentifiersWithAttributes:
setEnabled:
setFocusable:
setShowPlayIconWhenFocused:
_songCellTypeFromTrackTypeAttribute:
setSongType:
childViewElements
elementName
imageProxyForClientDataString:
initWithObject:imageLoader:groupType:
setThumbnail:
style
width
height
padding
setThumbnailOverrideFrame:
attributedText
string
setArtist:
setDurationString:
setOrdinalValue:
setPopularity:
setIsExplicit:
socialBadge
socialBadgeFromElement:existingView:
setSocialBadge:
setSocialBadgeOffset:
setStoreAdamID:
setStoreSubscriptionAdamID:
initWithIdentifiers:block:
setGlobalPlaylistID:
setPlayItem:inContainer:
setSongIdentifier:
registerElements
songCellFromElement:existingView:
type
radioStation
setRadioStation:
playEvent
setVisible:
currentMediaItem
mediaItemMetadataForProperty:
currentMediaItemHasVideoContent
initWithPlayer:invalidateWhenDone:initialPlaybackType:
isRadioPlaying
setIsRadioPlayback:
setIsMusicPlaylist:
setAllowDefaultMenuButtonBehavior:
setPopWhenPlayerStops:
setPresentsNowPlayingVideoWithoutAnimations:
presentedViewController
isBeingPresented
_tvTabBarShouldAutohide
initWithPlayer:
playbackViewController
setPlaybackViewController:
isVisible
setPlayer:
_visible
_playbackViewController
_player
_presentExplicitRestrictionAlertOfType:completionBlock:
_shouldPresentExplicitRestrictionAlertOfType:completionBlock:
settingEnabled
sharedConnection
isSettingLockedDownByRestrictions:
defaultWorkspace
openSensitiveURL:withOptions:
setBoolValue:forSetting:
setAllowsExplicitContent:
setPreferredAction:
_didShowAlertOfType:
effectiveRestrictedBoolValueForSetting:
initWithIdentity:
sharedBagProvider
boolValueForBagKey:
_numberOfTimesShownForAlertType:
getBagForRequestContext:withCompletionHandler:
_defaultsKeyForAlertType:
standardUserDefaults
integerForKey:
setInteger:forKey:
activeAccountIdentifier
maximumEffectiveTVShowRanking
maximumEffectiveMovieRanking
errorWithDomain:code:userInfo:
validateRestrictionForContentType:withRating:allowInteraction:withCompletion:
presentExplicitRestrictionAlertIfNeededOfType:completionBlock:
explicitRestrictionAlertTypeForTypeString:
presentRatingRestrictionAlertIfNeededOfType:forRating:completionBlock:
setAutoresizingMask:
_updateImageFrame
isViewLoaded
setArtworkCatalogs:
setImageFrame:
initWithImageOffset:
setImageOffset:
artworkCatalogs
imageOffset
_deckImageView
_artworkCatalogs
_imageOffset
show
initWithTitle:libraryRequest:
setItemSize:
setMinimumLineSpacing:
collectionView
setCollectionViewLayout:
setRemembersLastFocusedIndexPath:
cellIdentifier
registerClass:forCellWithReuseIdentifier:
title2Font
headerView
titleLabel
headlineFont
subtitleLabel
textColor
_seasonName
goToShowButton
_goToShow
addTarget:action:forControlEvents:
normalMoreButton
_selectedMoreButton
setDateStyle:
_bookmarkWillUpdateNotification:
sortType
number
localizedStringWithFormat:
setCornerRadius:
setShadowRadius:
setShadowOpacity:
setShadowOffset:
setMasksToBounds:
artworkCatalog
setFittingSize:
scale
setDestinationScale:
setImage:
_sizeImageViewToFit
setDestination:configurationBlock:
addLayoutGuide:
leftAnchor
constraintEqualToAnchor:
setActive:
rightAnchor
topAnchor
bottomAnchor
setPreferredFocusEnvironments:
viewDidLayoutSubviews
_artworkPlaceholderImageForUserInterfaceStyle:
setPlaceholderImage:
pressesBegan:withEvent:
anyObject
playItemType:withMPObject:
image
size
representativeEpisode
openJavascriptAppWithURL:
cellForItemAtIndexPath:
dequeueReusableCellWithReuseIdentifier:forIndexPath:
episodeTypeDisplayName
releaseDate
_songCellPlaceholderImage
_isTVEpisodeWatched:
setIsWatched:
thumbnailImageView
setContentMode:
thumbnailSize
setThumbnailImage:
initWithIdentifier:mediaType:
bookmarkForKey:
hasBeenPlayed
menuItemType
tvs_objectsPassingTest:
setMenuItems:
contextMenuForLibraryObject:completionHandler:
indexPathsForVisibleItems
isWatched
scrollViewDidScroll:
scrollViewDidZoom:
scrollViewWillBeginDragging:
scrollViewWillEndDragging:withVelocity:targetContentOffset:
scrollViewDidEndDragging:willDecelerate:
scrollViewWillBeginDecelerating:
scrollViewDidEndDecelerating:
scrollViewDidEndScrollingAnimation:
viewForZoomingInScrollView:
scrollViewWillBeginZooming:withView:
scrollViewDidEndZooming:withView:atScale:
scrollViewShouldScrollToTop:
scrollViewDidScrollToTop:
scrollViewDidChangeAdjustedContentInset:
collectionView:shouldHighlightItemAtIndexPath:
collectionView:didHighlightItemAtIndexPath:
collectionView:didUnhighlightItemAtIndexPath:
collectionView:shouldSelectItemAtIndexPath:
collectionView:shouldDeselectItemAtIndexPath:
collectionView:didSelectItemAtIndexPath:
collectionView:didDeselectItemAtIndexPath:
collectionView:willDisplayCell:forItemAtIndexPath:
collectionView:willDisplaySupplementaryView:forElementKind:atIndexPath:
collectionView:didEndDisplayingCell:forItemAtIndexPath:
collectionView:didEndDisplayingSupplementaryView:forElementOfKind:atIndexPath:
collectionView:shouldShowMenuForItemAtIndexPath:
collectionView:canPerformAction:forItemAtIndexPath:withSender:
collectionView:performAction:forItemAtIndexPath:withSender:
collectionView:transitionLayoutForOldLayout:newLayout:
collectionView:canFocusItemAtIndexPath:
collectionView:shouldUpdateFocusInContext:
collectionView:didUpdateFocusInContext:withAnimationCoordinator:
indexPathForPreferredFocusedViewInCollectionView:
collectionView:targetIndexPathForMoveFromItemAtIndexPath:toProposedIndexPath:
collectionView:targetContentOffsetForProposedContentOffset:
collectionView:shouldSpringLoadItemAtIndexPath:withContext:
collectionView:shouldBeginMultipleSelectionInteractionAtIndexPath:
collectionView:didBeginMultipleSelectionInteractionAtIndexPath:
collectionViewDidEndMultipleSelectionInteraction:
collectionView:contextMenuConfigurationForItemAtIndexPath:point:
collectionView:previewForHighlightingContextMenuWithConfiguration:
collectionView:previewForDismissingContextMenuWithConfiguration:
collectionView:willPerformPreviewActionForMenuWithConfiguration:animator:
collectionView:willCommitMenuWithAnimator:
collectionView:didReceivePhysicalPlayForItemAtIndexPath:
collectionView:shouldHandleLongPressForItemAtIndexPath:
collectionView:didReceiveLongPressForItemAtIndexPath:
collectionViewCanBecomeFocused:
initWithSeason:libraryRequest:
cellsTopMargin
collectionView:cellForItemAtIndexPath:
_setPositionForView:topLeft:
artworkSize
_imageViewContainer
_artworkImageView
_goToShowButton
_moreButton
_actionButtons
_tvSeason
_episodeReleaseDateFormatter
_visibleOnScreen
_shouldReloadOnViewDidAppear
stringWithCString:encoding:
storeCloudID
storePurchasedAdamID
tvm_identifiesSameItemAs:
_extendLaunchTest
applicationState
scheme
host
containsObject:
componentsWithURL:resolvingAgainstBaseURL:
setScheme:
jsOpenURL:options:
itmsJSObject
isNowPlayingVisible
showPlaybackControllerWithInitialPlaybackType:
registerDefaults:
setCategory:error:
setConfigurationBlock:
systemServiceProxy
registerNowPlayingDelegate:
_playerMediaItemDidChange:
_playbackLeaseEnded:
_accountChangedNotification:
_subscriptionChangedNotification:
_internetAvailabilityChanged:
_playlistMediaChangeRequested:
setFilteringDisabled:
setCloudFilteringType:
beginGeneratingLibraryChangeNotifications
becomeActive
registerAppWithProviderObject:
registerRemotePhotoServer:
photoAssetsWithOptions:responseBlock:
setDefaultRequestHandler:
application:didFinishLaunchingWithOptions:
start:
defaultSyncingKeyValueStore
setupBookmarkService:
startObserving
defaultManager
_performWhenVisible:
paused
play
_playFromURL:
postNotificationName:object:userInfo:
hideCurrentPlaybackController
isAppViewVisible
setPerformWhenVisibleBlock:
path
queryParameters
characterSetWithCharactersInString:
stringByTrimmingCharactersInSet:
unsignedLongValue
playItemType:withPersistentID:
hasMusicSubscription
setStoreIDs:
initWithRequest:shuffle:startItemIdentifiers:
setContainer:
playWithPlaybackIntent:initialPlaybackType:
dictionary
tvmJSObject
showSubscriptionRequiredForItemDictionary:
shuffleAllLibrarySongs
applicationWillEnterForeground:
instancesRespondToSelector:
applicationDidEnterBackground:
resignActive
_updateAccountStatus
makeKeyWindow
sharedManager
distantFuture
registerSubscriptionWithInfo:expirationDate:
unregisterSubscriptionWithInfo:
openURL:options:completionHandler:
UUID
UUIDString
URLWithString:relativeToURL:
mainQueue
userInfo
addObserverForName:object:queue:usingBlock:
setItmsJSObject:
setMescalPrimeEnabledForXHRRequests:
setAppViewVisible:
performWhenVisibleBlock
topShelfContentDidChange
allowsExplicitContent
setSkipExplicit:
buttons
action
_openMusicSubscriptionsApp
alertControllerWithStoreDialogResponse:actionBlock:
object
identifier
setActiveAccountIdentifier:
stopped
stopAndClearPlayQueue:
ic_activeStoreAccountWithCompletion:
hasiTunesMatchSubscription
_updateAccountWithSubscriptionStatus:
getSubscriptionStatusWithCompletionHandler:
_setSpotlightRegistrationWithSubscriptionStatus:
setSubscriptionStatus:
internetAvailable
pause
setSubscriptionsAppController:
systemServicePresentNowPlayingUI
application:openURL:options:
activateAndShowNowPlaying
launchAppWithCompletionHandler:
shouldBeForcedLeftToRight
didShowViewController
supportsIdleModeVisualEffects
setLyricsReportingController:
_appViewVisible
_lyricsReportingController
_itmsJSObject
_activeAccountIdentifier
_subscriptionsAppController
_performWhenVisibleBlock
setCompletionHandler:
cancel
intrinsicContentSize
contentMode
expectedSize
willMoveToWindow:
isImageLoaded
_loadImage
setImageProxy:
_setImage:
setImageProxy:completion:
completion
setCompletion:
setImageLoaded:
_updateImageViewWithPlaceholderImageIfNeeded
cornerRadius
_enableEdgeAntialiasingOnSelected
setAllowsEdgeAntialiasing:
_edgeAntialiasingOnSelectedRestrictedToLeftRightEdge
setEdgeAntialiasingMask:
setCacheOnLoad:
setEnableCache:
imageWithCGImage:
imageProxy
load
setTintColor:
imageWithRenderingMode:
_flatImageWithColor:
setHighlightedImage:
setSelected:animated:
_imageView
_setTintColor:
_setFocusedColor:
placeholderImage
_tintColor
_focusedColor
_setEnableEdgeAntialiasingOnSelected:
_setEdgeAntialiasingOnSelectedRestrictedToLeftRightEdge:
_rendersImageAsTemplates
_image
__focusedColor
_imageContentMode
_flatImage
_flatHighlightImage
_selected
_imageLoaded
__enableEdgeAntialiasingOnSelected
__edgeAntialiasingOnSelectedRestrictedToLeftRightEdge
_placeholderImage
_imageProxy
_completion
__tintColor
_configureUIControls
getAttributedTextSize:font:maxWidth:
bodyFont
_updateColorsForUserInterfaceStyle:
listTitleTextColor
setLineBreakMode:
boundingRectWithSize:options:attributes:context:
message
containerView
setContainerView:
setTitleLabel:
messageLabel
setMessageLabel:
_message
_containerView
_titleLabel
_messageLabel
_addHeadingLabel
headingLabel
sizeToFit
setTranslatesAutoresizingMaskIntoConstraints:
constraintEqualToAnchor:constant:
setHeaderText:
headerText
setHeadingLabel:
_headerText
_headingLabel
ageGateInfoFromURLBag
initWithAgeGateInfo:
songsLibraryRequest
playbackIntentWithStartItemIdentifiers:
setShuffleMode:
setPlayActivityFeatureName:
setFallbackPlaybackIntent:
playbackStatusController
playbackStateforItemWithIdentifiers:
playbackStateforItemWithIdentifiers:inContainer:
isItemPlayingWithIdentifiers:
isItemPlayingWithIdentifiers:inContainer:
setPlaybackStatusController:
_playbackStatusController
contentView
effectiveUserInterfaceLayoutDirection
badgeView
accessoryView
_updatePlaceholderImageIfNeeded
setAccessoryView:
_setAccessoryViewColor
_updateColors
_textLabelColor
_detailTextLabelColor
_updateColorsWithTextLabelColor:detailTextLabelColor:
detailTextLabel
_setAccessoryViewWithTextLabelColor:detailTextLabelColor:
_isFocusedInDarkMode
_focusedInDarkModeTextLabelColor
_defaultTextLabelColor
_defaultDetailTextLabelColor
listItemTextColor
isFocused
placeholderAssetType
setBadgeView:
setPlaceholderAssetType:
_accessoryImage
_badgeView
_placeholderAssetType
presentationTransitionWillBegin
setDimmingView:
dimmingView
presentingViewController
transitionCoordinator
animateAlongsideTransition:completion:
dismissalTransitionWillBegin
dismissalTransitionDidEnd:
containerViewDidLayoutSubviews
_dimmingView
objectToAdd
_getSongsForPlaylist:
_getSongsForAlbum:
folderPlaylist
_configureViewWithMPResponse:
_handlePlayPauseGesture
spinner
actionTitleLabel
actionScrollView
actionGroupView
safeAreaInsets
font
descender
initWithObjectToAdd:
setFolderPlaylist:
_presentViewController:
_addToPlaylist:requestConfirmation:
_nameOfObjectToAdd
_addToPlaylist:
performWithoutEnforcement:
_addToPlaylist:objectToAdd:
_presentAddToPlaylistBehaviorDialogFromViewController:forSingleTrackAddition:withCompletionHandler:
collectionTracks
_addToPlaylist:objectToAdd:songsToAdd:
addSong:toPlaylist:completionHandler:
addAlbum:toPlaylist:songsToAdd:completionHandler:
addPlaylist:toPlaylist:itemsToAdd:completionHandler:
hasVideo
imageNamed:
showWithTitle:message:image:
trackCount
representativeSong
setCollectionTracks:
getItemsInPlaylist:completionHandler:
getSongsInAlbum:completionHandler:
setSpinner:
setActionScrollView:
_setGradientMaskLengths:
setActionGroupView:
_addToNewPlaylistNamed:parentPlaylist:
setCompletionBlock:
addActionWithText:isFolder:handler:
didSelectPlaylist:
tvm_enumerateItemsUsingBlock:
setActionTitleLabel:
setPlaylistName:
setParentPlaylist:
setShouldCreatePlaylist:
setName:
copyWithIdentifiers:block:
newOperationWithLocalPersistenceResponseHandler:completeResponseHandler:
addOperation:
initWithPresentedViewController:presentingViewController:
_isTopLevelMenu
mpRequest
setMpRequest:
setObjectToAdd:
_alertControllerIsConfigured
_actionTitleLabel
_actionScrollView
_actionGroupView
_spinner
_mpRequest
_folderPlaylist
_objectToAdd
_collectionTracks
setOverrideUserInterfaceStyle:
systemWhiteColor
setTopAccessoryView:
buttonWithType:
setTitle:forState:
setSubmitButton:
setBottomAccessoryView:
_doneButtonAction:
completionBlock
textField
textEntryControllerDidFinish:
hidePresentingView
setHidePresentingView:
_textEntryVC
_hidePresentingView
_completionBlock
initWithMPModelObject:mediaItemMetadata:
initWithMovie:mediaItemMetadata:
modelObject
movie
duration
initWithMovie:
useBookmarks
_setWantsRightToLeftHorizontalMirroringIfNeeded:
initWithFrame:collectionViewLayout:
setDataSource:
normalShuffleButton
_selectedShuffleButton
_addLabelWithFont:text:
calloutFont
_setCornerRadius:
_artworkPlaceholderImage
_updateArtworkImageView
_updateForUserInterfaceStyle:
_performRequest
didReceiveMemoryWarning
contentInset
convertPoint:toView:
setMarqueeEnabled:
setMarqueeRunning:
reverseObjectEnumerator
allObjects
_playFocusedSong
_startMusicPlaybackAtIndexPath:
mpResponse
globalIndexForIndexPath:
_songAtIndexPath:
isExplicitSong
setDuration:
setHasOrdinal:
storeAsset
isRedownloadable
flattenedGenericObject
_processResponse:error:
setMpResponse:
_modelResponseDidInvalidate:
_updateShuffleButton
_updateEmptyPlaylistIndicator
_updateInfoLabel
_updatePlaylist:
viewControllers
lastObject
popViewControllerAnimated:
setHidden:
removeObject:
arrayByAddingObjectsFromArray:
subtitle1Font
tracksTiledArtworkCatalogWithRows:columns:
removeObserver:name:object:
collectionView:numberOfItemsInSection:
numberOfSectionsInCollectionView:
collectionView:viewForSupplementaryElementOfKind:atIndexPath:
collectionView:canMoveItemAtIndexPath:
collectionView:moveItemAtIndexPath:toIndexPath:
indexTitlesForCollectionView:
collectionView:indexPathForIndexTitle:atIndex:
initWithPlaylist:
_playlistTitleLabel
_infoLabel
_emptyPlaylistLabel
_collectionView
_shuffleButton
_shouldUpdateOnViewDidAppear
_mpResponse
imageViews
arrayWithCapacity:
imageType
sharedInterfaceFactory
viewForElement:existingView:
removeLastObject
doubleValue
systemFontOfSize:
backgroundColor
color
colorWithRed:green:blue:alpha:
initWithStyle:
setBgColor:
setDiameter:
setFocusedSizeIncrease:
setFirstName:
setLastName:
setImageViews:
interitemSpacing
setMinimumInteritemSpacing:
setOpaque:
makeObjectsPerformSelector:
insertSubview:atIndex:
_didLoadImageForImageView:
_checkReadyToDisplay
minimumInteritemSpacing
objectAtIndexedSubscript:
_unloadedImageViews
_imageViews
_minimumInteritemSpacing
enumerateSectionsUsingBlock:
enumerateItemsInSectionAtIndex:usingBlock:
enumerateItemsUsingBlock:
tvm_enumerateSectionsUsingBlock:
tvm_enumerateItemsInSectionAtIndex:usingBlock:
setPriority:
constraintWithPriority:
setInsetsLayoutMarginsFromSafeArea:
setContentCompressionResistancePriority:forAxis:
_preferredFontForTextStyle:variant:
setAlignment:
setAxis:
setDistribution:
setSpacing:
leadingAnchor
layoutMarginsGuide
firstBaselineAnchor
trailingAnchor
constraintGreaterThanOrEqualToAnchor:constant:
activateConstraints:
previouslyFocusedView
shouldUpdateFocusInContext:
rightStackView
subviews
addArrangedSubview:
leadingFocusGuide
trailingFocusGuide
stackFocusGuide
topFocusGuide
setRightViews:
rightViews
setRightStackView:
setTopFocusGuide:
setLeadingFocusGuide:
setTrailingFocusGuide:
setStackFocusGuide:
_subtitleLabel
_rightViews
_rightStackView
_topFocusGuide
_leadingFocusGuide
_trailingFocusGuide
_stackFocusGuide
setValue:
setMinValue:
setMaxValue:
adjusterWithConfig:
value
defaultValue
setDefaultValue:
minValue
maxValue
slider
setSlider:
_value
_defaultValue
_minValue
_maxValue
_title
_slider
darkGrayColor
lightGrayColor
adjusters
setMinimumValue:
setMaximumValue:
setTag:
minimumValue
numberWithFloat:
maximumValue
setAdjusters:
_updateAdjusterData
viewWithTag:
initWithAdjusters:
_scrollView
_adjusters
widePlayButton
wideShuffleButton
wideGoToArtistButton
allSeasonsButton
setProgress:animated:
_unfocusedProgressColor
grayColor
setShadowPath:
setShadowColor:
yellowColor
_panUpdated:
_setHysteresis:
minValueIconView
maxValueIconView
semanticContentAttribute
userInterfaceLayoutDirectionForSemanticContentAttribute:
_progressCenter
convertPoint:fromView:
setValue:animated:
setProgress:
layoutIfNeeded
animateWithDuration:animations:
_focusedProgressColor
locationInView:
isContinuous
sendActionsForControlEvents:
initWithWhite:alpha:
setMinimumValueImage:
setMaximumValueImage:
setMaxBarWidth:
maxBarWidth
shouldTrack
beginTrackingWithTouch:withEvent:
continueTrackingWithTouch:withEvent:
endTrackingWithTouch:withEvent:
_menuPressed
minimumValueImage
maximumValueImage
progressBarView
setContinuous:
thumbView
lastThumbLocation
valueLabel
_maxBarWidth
_continuous
_minimumValue
_maximumValue
_minimumValueImage
_maximumValueImage
_progressBarView
_minValueIconView
_maxValueIconView
_thumbView
_valueLabel
_lastThumbLocation
initWithSong:mediaItemMetadata:
storeBrowseContentItemWithStorePlatformDictionary:
playbackPosition
shouldRememberBookmarkTime
isUnknownItemType
unknownItemDescription
playQueue
audioRoute
routeName
trackNumber
localizedStringFromDate:dateStyle:timeStyle:
hasTrait:
initWithStorePlatformDictionary:
setUnknownItemType:
setUnknownItemDescription:
_unknownItemType
_unknownItemDescription
bgImage
stackWrappingView
imageWithRadialGradientOverlayFromImage:
setBackgroundImage:
viewElement
interfaceStyleForTemplateElement:
setBackdropImage:
setBackdropBlurEffectStyle:
bgImgElement
_firstScrollStop
objectAtIndex:
tv_associatedIKViewElement
objectForKey:
setSectionIndex:
setEdge:
setOffset:
updateBackgroundAndBackdrop
parsedMediaInfo
scrollStopForShowcaseTransition
scrollStopForEnteringSectionAtIndex:fromEdge:
_setManualLayoutFrame:
containerGuide
_containerGuide
setup
registerClass:forElementName:elementType:dependent:
styleSheetRegistry
URLForResource:withExtension:
registerStyleSheetURLs:forTemplateName:basedOnTemplateName:
setExtendedInterfaceCreator:
element
updateWithViewElement:
playlistViewFromElement:existingView:
playlistImgWithElement:existingView:
isDataPrivateForElement:
tv_imageProxy
blurDecoratorForDataIsPrivate
cornerRadiiFromElement:cornerRadii:circle:
setCornerRadii:
setDecorator:
viewControllerForElement:existingViewController:
URLForResource:
imageForResource:
collectionViewCellClassForElement:
playerViewControllerForPlayer:
_viewForIKElement:existingView:
_viewControllerForIKElement:existingViewController:
_collectionViewCellClassForIKElement:
_parseAppConfigurationForIKElement:
_styleSheetURLForTemplate:
_navigationControllerForTabIdentifier:
_parseAppConfigurationForElement:
_imageProxyForElement:
_imageProxyForIKElement:withLayout:
_musicCloudViewController
_musicPlaybackHostController
tvs_dictionaryForKey:
tvs_stringForKey:
setCountLimit:
bundleWithIdentifier:
imageNamed:inBundle:
setObject:forKey:
explanation
initWithType:isDefaultButton:title:action:
_showAlertForStoreDialogDictionary:completion:
hideCurrentPlaybackControllerWithCompletion:
initWithResponseDictionary:
showMessageWithTitle:message:
showAlertForStoreDialogDictionary:hideNowPlaying:completion:
setHasMusicSubscription:
setHasiTunesMatchSubscription:
_hasMusicSubscription
_hasiTunesMatchSubscription
compilationsLibraryRequest
setShowIndexBarTitles:
_addPlayButton
_addShuffleButton
initWithCompilations:
albumsLibraryRequestForArtist:
playButton
tvs_addObjectIfNotNil:
shuffleAllButton
composer
pushViewController:animated:
albumDetailsViewController:genre:composer:completion:
_genericObjectForitemAtIndexPath:
didSelectObject:
playing
didPlayObject:
cellSpacing
cellSize
configureCell:forObject:
setImageShape:
setSubTitle:
setArtworkCatalog:withFittingSize:
libraryRequest
itemKind
setSectionKind:
itemSortDescriptors
setSectionSortDescriptors:
playFromRequest:shuffle:initialPlaybackType:
setPlayButton:
_selectedPlay
playShuffled:
setShuffleAllButton:
_selectedShuffle
collectionView:layout:sizeForItemAtIndexPath:
collectionView:layout:insetForSectionAtIndex:
collectionView:layout:minimumLineSpacingForSectionAtIndex:
collectionView:layout:minimumInteritemSpacingForSectionAtIndex:
collectionView:layout:referenceSizeForHeaderInSection:
collectionView:layout:referenceSizeForFooterInSection:
initWithGenre:showTitle:
initWithArtist:
initWithComposer:showTitle:
additionalHeaderControls
setGenre:
setComposer:
_artist
_genre
_composer
_playButton
_shuffleAllButton
musicVideosLibraryRequest
indexPathForItem:inSection:
_playFromItemAtIndexPath:
_selectedPlayButton
setMaximumImageHeight:
setGreyedOut:
playFromRequest:startItemIdentifiers:initialPlaybackType:
initWithMediaItems:index:isCollection:
initWithDelegate:
propertySetWithProperties:
initWithProperties:relationships:
setQueueItemProperties:
setPlayingItemProperties:
setTracklistRange:
setDisablePlaybackStateValidation:
setQueueSectionProperties:
_createGlobalPlayerPathWithRoute:
setPlayerPath:
requestResponseController
setRequest:
startUpdating
getActiveRouteWithTimeout:completion:
_applicationDidBecomeActive:
_repeatModeSettingDidChange:
_activeSystemRouteDidChange:
_libraryWasUpdated:
mediaItems
responseTrackList
playingItemIndexPath
items
activeListIndex
activeList
metadataObject
hasCommonIdentifierWithIdentifierSet:
userDeviceName
request
playerPath
route
_updatePlayerPathWithRoute:
canMoveItemAtIndexToPlayNext:
reorderCommand
indexPathForGlobalIndex:
canMoveItem:
moveItem:afterItem:
_performPlayerCommandRequest:name:
isUpdating
beginAutomaticResponseLoading
setIsUpdating:
endAutomaticResponseLoading
playerResponse
tracklist
playerState
currentPlayingItem
seekCommand
endSeek
_performPlayerCommand:name:
beginSeekWithDirection:
changeItemCommand
nextItem
previousItem
changeToItem:
performRequest:completion:
changePositionToElapsedInterval:
setPendingElapsedTimeChange:
setPendingElapsedTime:
isPendingElapsedTimeChange
pendingElapsedTime
durationSnapshot
timeIntervalSinceReferenceDate
shuffleCommand
setShuffleType:
performRequest:options:completion:
willChangeValueForKey:
didChangeValueForKey:
setMusicRepeatType:
_setRepeatType:
repeatType
repeatCommand
setRepeatType:
systemMusicPathWithRoute:playerID:
resetCommand
replaceWithPlaybackIntent:
performWithCompletion:
clear
isLocalDeviceQueue
_isUserSubscribed
insertCommand
insertAfterPlayingItemWithPlaybackIntent:
insertAtEndOfTracklistWithPlaybackIntent:
tracklistSource
isSystemMusicPath
_updatePlayQueue
isInvalidRouteError
systemRoute
setActiveRoute:completion:
setIsAirplayActive:
isDeviceRoute
setNeedsReloadForSignificantRequestChange
isAirplayActive
pathWithRoute:bundleID:playerID:
setLabel:
_mediaItemForMPCPlayerResponseItem:section:atIndexPath:
setMediaItems:
isRadioPlayback
radioStationName
attributionLabel
tvEpisode
initWithTVEpisode:
_repeatModeFromRepeatType:
response
section
sectionAtIndex:
contentItemIdentifier
currentPlayingElapsedTime
videoView
setLastPlayingItem:
setPreviousPlayerResponse:
setPlayerResponse:
setRadioStationName:
setDurationSnapshot:
setIsVideoPlayback:
_updateMediaItemsWithTrackList:
setSupportsShuffle:
setSupportsRepeat:
_tracklistRepeatMode
_setRepeatMode:
shuffleType
_setShuffleEnabled:
_stringForMPCPlayerState:
representedBundleDisplayName
tracklistIdentifier
uniqueIdentifier
isPlaceholder
setTracklistIdentifier:
previousPlayerResponse
lastPlayingItem
_isNewTracklist:equalToOldTracklist:
playQueue:didUpdateQueue:
playQueue:didChangePlayingItem:
playQueue:didChangeFromPlayState:toPlayState:
playQueue:didChangeElapsedTime:forItem:atIndex:
playQueue:didChangeVideoView:
playQueue:didChangeDurationSnapshot:
playingItemGlobalIndex
item
updatePlayerPath
musicRepeatType
setNeedsReload
controller:defersResponseReplacement:
controller:shouldRetryFailedRequestWithError:
willBeginLoadingRequestForController:
didFinishLoadingRequestForController:
airplayDetectorAirplayStarted:
airplayDetectorAirplayEnded:
convertPreviousIndexPathToIndexPathForUpdatedPlaylist:
isTransitioningPlaylist
trackList
isMediaItem:matchingResponseItem:
audioRouteName
setAudioRoute:
moveItemAtIndexToPlayNext:
stopUpdating
fastForward
rewind
changeToNextItem
changeToPreviousItem
changeToItemAtIndex:
setElapsedTime:
currentPlayingDuration
lastPlayerResponse
setShuffleEnabled:preserveCurrentItem:
shuffleEnabled
setRepeatMode:
repeatMode
replacePlayQueueWithPlaybackIntent:completionHandler:
clearPlayQueueWithCompletionHandler:
canAddToPlayQueueNextWithPlaybackIntent:
canAddToPlayQueueAtEndWithPlaybackIntent:
addToPlayQueueWithPlaybackIntent:playNext:
isMusicAppQueue
metadataObjectMatchingIdentifierSet:
sectionForItemWithIdentifiers:
supportsShuffle
supportsRepeat
isVideoPlayback
externalEndpointsAvailable
setExternalEndpointsAvailable:
setRequestResponseController:
setTransitioningPlaylist:
_supportsShuffle
_supportsRepeat
_repeatMode
_shuffleEnabled
_invalidationQueue
_invalidationTimer
_airplayDetector
_isRadioPlayback
_isVideoPlayback
_isAirplayActive
_isUpdating
_externalEndpointsAvailable
_pendingElapsedTimeChange
_transitioningPlaylist
_delegate
_lastPlayingItem
_radioStationName
_pendingElapsedTime
_requestResponseController
_playerResponse
_mediaItems
_previousPlayerResponse
_tracklistIdentifier
_durationSnapshot
domain
code
sharedDeviceLibraryController
appendSection:
_modelObjectForAdamID:
appendItem:
registerTransientAddState:forModelObjects:relatedModelObjects:
_libraryAddRemoveQueue
persistentID
numberWithUnsignedLongLong:
tvs_arrayByMappingObjectsUsingBlock:
unregisterTransientState:
addItemWithProductID:completionHandler:
setModelObject:
performDeleteEntityChangeRequest:withRelatedModelObjects:completion:
transientAddStateForModelObject:
addGlobalPlaylistWithID:andAddToCloudLibrary:completion:
setStoreCloudID:
itemWithPersistentID:verifyExistence:
deleteItems:
removeItemsWithSagaIDs:completionHandler:
setItemKind:
setItemProperties:
findMPObjectWithIdentifiers:itemKind:itemProperties:completionHandler:
findMPSongWithIdentifiers:itemProperties:completionHandler:
kindWithVariants:
removeItemAtIndexPath:
setPlaylistEntries:
setQualityOfService:
_addItemToPlaylist:objectToAdd:itemsToAdd:completionHandler:
kindWithKinds:
globalPlaylistID
setHasVideo:
_storeProductRequestForID:completionHandler:
_storeRequestForID:profile:completionHandler:
contextMenuForLibraryObject:inContainer:completionHandler:
setItemIdentifiers:
setPersonalizationStyle:
setKeyProfile:
setRequestContext:
allItems
metadataDictionary
setRepresentativeModelObject:
setSongResults:
newOperationWithResponseHandler:
playlistChangeRequestQueue
ageVerificationState
treatment
sharedTracker
currentPAFFeatureName
queryItemWithName:value:
cloudVersionHash
addItemToLibraryWithAdamID:completionHandler:
removeMPObjectFromLibrary:
isItemPendingAddToLibraryForAdamID:
addGlobalPlaylistToLibraryWithID:completionHandler:
removeItemsFromLibraryWithSagaIDs:completionHandler:
findItemInLibraryWithPersistentID:itemKind:itemProperties:completionHandler:
findMPSongInLibraryWithSubscriptionAdamID:itemProperties:completionHandler:
findPlaylistWithCloudGlobalID:completionHandler:
removeSong:fromPlaylist:atPosition:completionHandler:
storeURLRequestForID:completionHandler:
findSingleMusicVideoInAlbum:completionHandler:
stringWithAppendedExplicitIndicator:
urlForDisplayingPlaylist:
serialQueue
identifierMap
_handleResponse:identifier:
removeObjectForKey:
clearCacheForIdentifier:
getResponseForIdentifier:completion:
setSerialQueue:
setIdentifierMap:
_serialQueue
_identifierMap
showWithType:
_dismissRemoteViewController
addObserver:forKeyPath:options:context:
_playerDidChangeState:
_menuPressed:
removeObserver:forKeyPath:
setViewServiceActive:
setIsIdleScreen:
initWithRootViewController:
setNavigationBarHidden:
wallpaperViewForVariant:
animateWithDuration:animations:completion:
nowPlayingWallPaper
setNowPlayingWallPaper:
setNavigationController:
animateWithDuration:delay:options:animations:completion:
avPlayer
_setAllowsVideoPlaybackWhileInBackground:
_remoteViewControllerProxy
dismissWithResult:
observeValueForKeyPath:ofObject:change:context:
viewServiceBeginPresentationWithOptions:
viewServiceEndPresentationWithOptions:completion:
_exportedInterface
viewServiceBeginPresentationWithOptions:completion:
viewServiceUpdatePresentationWithOptions:
viewServiceHandleMessage:reply:
interfaceWithProtocol:
setWithObjects:
setClasses:forSelector:argumentIndex:ofReply:
currentRemoteViewController
dismissCurrentRemoteViewController
_remoteViewControllerInterface
menuGestureRecognizer
setMenuGestureRecognizer:
_navigationController
_menuGestureRecognizer
_nowPlayingWallPaper
tvm_seasonTitle
_fetchPhotoAssetsForAlbumArtwork:
setRemotePhotoServerInterface:
remotePhotoServerInterface
didFinishFetchingPhotoAssets
shuffledArrayWithCount:
setFullResolutionURL:
_getArtworkURLsForAlbums:completion:
hasImageOnDisk
artworkCatalogBackingFileURL
requestImageWithCompletionHandler:
valueForProperty:
JSONObjectWithData:options:error:
initWithArtworkResponseDictionary:
artworkURLWithSize:cropStyle:format:
loadArtworkInfoForSagaIDs:completionHandler:
loadArtworkInfoForPurchaseHistoryIDs:completionHandler:
photoAssetsWithOptions:remotePhotoServer:responseBlock:
syncObserverToken
setSyncObserverToken:
_remotePhotoServerInterface
_syncObserverToken
exchangeObjectAtIndex:withObjectAtIndex:
subarrayWithRange:
setClipsSubviews:
setBorderWidth:
_fillSize
fillView
tintColorDidChange
setValue:forKey:
tintColor
setBorderColor:
getWhite:alpha:
progress
outlineView
_progress
_outlineView
_fillView
bezierPathWithRoundedRect:cornerRadius:
CGPath
null
imageWithSize:alpha:cgContextActions:
CGImage
imageWithCGImageRef:preserveAlpha:
isCancelled
_processFirstRequest:
setCancelled:
_executeRequest:
scaleToSize
upscaleAdjustment
_playlistImageWithImages:size:upscaleAdjustment:cornerRadius:
completionHandler
loadImagesWithCompletionHandler:
imageKeyForObject:
cancelLoad:
URLForObject:
hasImageCache
loadImageForObject:scaleToSize:cropToFit:completionHandler:
loadImageForObject:scaleToSize:cropToFit:imageDirection:completionHandler:
loadImageForObject:scaleToSize:cropToFit:imageDirection:requestLoader:completionHandler:
_pendingQueue
_serialProcessingQueue
_maxConcurrentCount
absoluteString
appendFormat:
initWithCapacity:
removeAllObjects
initWithImageProxies:playlistStyle:
imageProxies
playlistStyle
setScaleToSize:
setUpscaleAdjustment:
_requestIdentifier
_images
_pendingProxies
_cancelled
_imageProxies
_playlistStyle
_upscaleAdjustment
_cornerRadius
_completionHandler
_scaleToSize
setValueTransformer:forName:
setAllowedUnits:
setZeroFormattingBehavior:
setSecond:
secondsFormatter
stringFromDateComponents:
minutesFormatter
stringFromTimeInterval:
transformedValueClass
allowsReverseTransformation
transformedValue:
setMinutesFormatter:
setSecondsFormatter:
_minutesFormatter
_secondsFormatter
initWithItems:
setSelectedSegmentIndex:
_handleTVMoviesSelector
TVSeasonsLibraryRequestForShow:
TVEpisodesLibraryRequestForShow:season:
tvMoviesSelector
centerXAnchor
centerYAnchor
episodesCount
durationFormatter
stringByReplacingOccurrencesOfString:withString:
setUnitsStyle:
selectedSegmentIndex
TVShowsLibraryRequest
moviesLibraryRequest
updateCollectionViewLayout
setLibraryRequest:completionHandler:
setTvMoviesSelector:
_selectedSegment
_isShowingMovies
_durationFormatter
_tvMoviesSelector
weakObjectsHashTable
_nowPlayingViewWillAppear:
_nowPlayingViewWillDisappear:
_musicViewWillAppear:
_musicViewWillDisappear:
_playbackQueueDidChange:
_currentMediaItemDidChange:
_playbackStateDidChange:
_playerPathChanged:
_newTracklist:
_songResponseDidInvalidate:
_songWillAddToLibrary:
_songDidRemoveFromLibrary:
_appDidBecomeActive:
_audioRouteDidChange:
_playbackStatusChanged:
_playbackError:
_musicVideoViewWillAppear:
_musicVideoViewWillDisappear:
_musicVideoAddToLibrary:
playbackViewControllers
musicNowPlayingViewControllers
setPlaybackDelegate:
setEndpointRoute:
boolForKey:
setBool:forKey:
controlItemWithImage:handler:
setShowsInlineVideo:
setShowAnimatedBackground:
nowPlayingView
setAdditionalRightControlItems:
_updateAudioRoute
setInitialViewMode:
reloadPlaylist
_currentlyPlayingPlaybackType
initialPlaybackType
topViewController
_removePlaybackControllers
isShowingMusicVideoFullscreen
contextMenuForMediaItem:completionHandler:
_controlsWithAddButton:
isHomePodRoute
isStereoPair
isAppleTVRoute
isLive
hasTimedMetadata
_localTTMLFileForSong:
initWithLyricsInfo:
setTimedLyricsDelegate:
setCurrentLineCenterY:
loading
elapsedTime
setTimedLyricsViewController:
isEqualToNumber:
reloadCurrentControls
playingItem
setAllowsVideoPlaybackWithoutVisuals:
setIsShowingMusicVideoFullscreen:
_addToLibraryAction
contextControlItem
visibleViewController
animation
functionWithName:
setTimingFunction:
setType:
viewIfLoaded
addAnimation:forKey:
_removePlaybackControllersWithCompletion:
childViewControllers
setViewControllers:
elapsedTimeForTimedLyricsViewController:
timedLyricsViewController:jumpToPosition:
timedLyricsViewControllerPlaybackIsPaused:
sendPlayCommandForTimedLyricsViewController:
sendTogglePlayPauseCommandForTimedLyricsViewController:
timedLyricsViewDidAppear:
timedLyricsViewWillDisappear:
playbackViewController:loadRelatedContentForMediaItem:withCompletionHandler:
playMediaItemAtIndex:
playbackViewControllerProvidesCustomControls:
playbackViewController:controlsForMediaItem:completionHandler:
playbackViewController:shouldShowIdleViewControllerForMediaItem:
playbackViewController:wantsIdleViewControllerForMediaItem:withCompletion:
playbackViewController:willShowIdleViewController:forMediaItem:targetCoverFrame:
playbackViewControllerUserWillInitiatePlayback:
currentEndpointDeviceTypeForPlaybackViewController:
userDidFinishInteractionAfterErrorWasPresented:
isMusicNowPlayingVisible
timedLyricsViewController
_mediaItemForNowPlayingControls
_songForNowPlayingControls
_responseForNowPlayingControls
_isShowingMusicVideoFullscreen
_playbackViewControllers
_musicNowPlayingViewControllers
_timedLyricsViewController
initFromURLBag
valueForBagKey:
setIsAgeGateEnabled:
setRatingThreshold:
setDialogTitle:
setDialogMessage:
ratingThreshold
dialogTitle
dialogMessage
isAgeGateEnabled
initWithRatingThreshold:dialogTitle:dialogMessage:
_isAgeGateEnabled
_ratingThreshold
_dialogTitle
_dialogMessage
_showAgeGateDialogForLibraryItem:showUnconditionally:completion:
ageGateInfo
_showAgeGateDialogWithCompletion:
arrayForKey:
explicitRating
_updateSavedIdentifiers:withIdentifier:
removeObjectAtIndex:
standardAgeGateController
customAgeGateControllerWithRatingThreshold:dialogTitle:dialogMessage:
showAgeGateDialogIfNeededForLibraryItem:completion:
showAgeGateDialogIfNeededForRatingLevel:completion:
showAgeGateDialogForItem:completion:
setAgeGateInfo:
_ageGateInfo
setView:
effectWithStyle:
effectForBlurEffect:
initWithEffect:
defaultSizeForStyle:
loadView
setActivityText:
activityText
isActivityIndicatorHidden
setActivityIndicatorHidden:
activityIndicatorDelay
setActivityIndicatorDelay:
_activityTextLabel
_showingSpinner
_spinnerTimer
_visualEffectView
_activityIndicatorHidden
_activityText
_activityIndicatorDelay
setPopularityThreshold:
setSectionInset:
mapTableWithKeyOptions:valueOptions:
_initWithAlbum:filteredBy:
songsLibraryRequestForAlbumDetails
frameLayoutGuide
_updateAlbumInfo
itemForIdentifier:
childStoreItemMetadatas
storeID
popularity
setSongPopularity:forAdamID:
setAlbumAppData:
trackDisplayMode
classicalWork
grouping
removeAllIndexes
_checkAlbumAttributesForTracks
_songResults
groupByClassicalWorks
_tracksIncludingClassicalWorks
addObjectsFromArray:
setTracks:
collectionViewLayout
containsIndex:
_startMusicPlaybackAtIndexPath:shuffle:
_isItemSingleMovementWork:
tracks
firstSection
songPopularityForIdentifiers:
_classicalWorkNameForSong:
shouldShowComposer
classicalMovement
classicalMovementNumber
_romanNumeralForNumber:
rangeOfString:options:range:
substringFromIndex:
whitespaceCharacterSet
characterAtIndex:
popularityThreshold
numberWithInt:
setShowArtistNames:
setTrackDisplayMode:
indexSet
_setItemIsSingleMovementWork:
addIndex:
isValid
_updateTracks
_updateButtons
initWithAlbum:
initWithAlbum:composer:
initWithAlbum:genre:
_trackDisplayModeString
showArtistNames
indexesOfClassicalWorks
setIndexesOfClassicalWorks:
_albumTitleLabel
_artistNameLabel
_artworkContainerView
_hasMultipleArtists
_trackCount
_classicalWorkMap
_buttonsFocusGuide
_showArtistNames
_tracks
_indexesOfClassicalWorks
_trackDisplayMode
_popularityThreshold
_scrollingParadeViewReadyNotification:
_crossfadeViewReadyNotification:
_fadeToBlack
imageFrame
transitionDuration
setCrossfadeDuration:
_dissolveToPendingView
_viewTypeForNumberOfImages:
_displayPlaceholderView
cycleInterval
setCrossfadePeriod:
setPaused:
isPaused
newDataTransitionDuration
transitionWithView:duration:options:animations:completion:
initWithImage:
_paradeThreshold
resume
deckViewParadeType
setDeckViewParadeType:
setCycleInterval:
setTransitionDuration:
setNewDataTransitionDuration:
_pendingDisplayView
_pendingViewType
_displayView
_viewType
_placeholderImageView
_imageLoadTimeout
_deckViewParadeType
_cycleInterval
_transitionDuration
_newDataTransitionDuration
_imageFrame
initWithOverlayImage:
settingsForPrivateStyle:
setBlurRadius:
uiImage
_applyBackdropViewSettings:
drawInRect:
setFill
overlayImage
initWithCGImageRef:preserveAlpha:
decorate:scaledWithSize:croppedToFit:
decoratorIdentifier
_overlayImage
_clearCachedValues
setAdjustsFontSizeToFitWidth:
setBaselineAdjustment:
isUserInteractionEnabled
previousBounds
previousNumberOfLines
cachedTextRectForBounds
textRectForBounds:limitedToNumberOfLines:
setCachedTextRectForBounds:
setPreviousBounds:
setPreviousNumberOfLines:
previousTargetSize
cachedSizeThatFits
setCachedSizeThatFits:
setPreviousTargetSize:
_previousNumberOfLines
_cachedSizeThatFits
_previousTargetSize
_cachedTextRectForBounds
_previousBounds
setContentMotionRotation:translation:
setRoundContentWhenDeselected:
configurationWithStyle:
setFocusAnimationConfiguration:
setFloatingContentDelegate:
_ordinalWidth
_createLabelAtPosition:width:
caption1Font
_setContinuousCornerRadius:
_setColorsForCurrentUserInterfaceStyle
floatingView
subtitle3Font
focusable
prepareForReuse
setHeading:
setMusicBarsVisible:
setPlayIconVisible:
clearArtworkCatalogs
cellHeight
initWithScaleToSize:scaleMode:
_updateVideoBadge
_updateOrdinalLabel
_updateMusicBarsView
setOrdinalVisible:
setControlState:
_adjustThumbnailForFocusState
_shouldShowPlayIcon
hasOrdinal
hasThumbnailOverrideFrame
thumbnailOverrideFrame
hasPlaylistOrdinal
fullWidthStyle
isHidden
_hasThumbnail
_hasVideoBadge
_layoutLabel:
_layoutMusicBarsView
socialBadgeOffset
_continuousCornerRadius
_decoratedTitleString
_updateTitleColor
_updatePlayingState
_popularityImageForPopularity:
compare:
familyName
initWithFontAttributes:
fontWithDescriptor:size:
localizedStringFromNumber:numberStyle:
ordinalValue
valueTransformerForName:
_preferredConfigurationForFocusAnimation:inContext:
_triggeringPhysicalButton
_floatingViewControlState
setControlState:animated:
pressesCancelled:withEvent:
pressesEnded:withEvent:
setMusicBarsStyle:
musicBarsVisible
songIdentifier
playbackItem
playbackContainer
thumbnail
thumbnailImage
songType
playIconVisible
isExplicit
setAttributes:range:
floatingContentView:isTransitioningFromState:toState:
floatingContentView:didFinishTransitioningToState:
setFullWidthStyle:
durationString
showPlayIconWhenFocused
enabled
setFloatingView:
ordinalVisible
setPlaybackItem:
setPlaybackContainer:
setHasThumbnailOverrideFrame:
_artistLabel
_albumLabel
_durationLabel
_ordinalLabel
_thumbnailView
_popularityIndicatorView
_videoBadgeView
_labels
_musicBarsView
_isObservingPlayer
_playIconView
_popularityOnImage
_watchedCheckmarkImageView
_titleColor
_didConfigureOrdinal
_isExplicit
_hasOrdinal
_fullWidthStyle
_showPlayIconWhenFocused
_enabled
_focusable
_isWatched
_ordinalVisible
_playIconVisible
_musicBarsVisible
_hasThumbnailOverrideFrame
_songType
_heading
_duration
_durationString
_ordinalValue
_popularity
_socialBadge
_songIdentifier
_floatingView
_playbackItem
_playbackContainer
_socialBadgeOffset
_thumbnailOverrideFrame
initWithParentPlaylistFolder:
isSubscribed
playlistDetailsViewController:completion:
parentPlaylistFolder
setParentPlaylistFolder:
_parentPlaylistFolder
setWriteToAssetLibrary:
imageLoader
initWithMPObject:
contextMenuForSubject:
subjectWithSongInPlayQueue:container:completion:
setLibraryAdded:
subjectWithObject:playbackReportingDictionary:container:completion:
_propertiesForGenericObjectType:
_kindForGenericObjectType:
_contextMenuForLibraryObject:inContainer:completion:
setPlaylistIndex:
_contextMenuForLibraryPlaylistEntry:completionHandler:
subjectWithLibraryObject:container:completion:
mpObject
_contextMenuForSong:
_contextMenuForAlbum:
_contextMenuForMovie:
_contextMenuForArtist:
_contextMenuForPlaylist:
_contextMenuForTVEpisode:
_contextMenuForMPTVSeason:
playlistEntry
container
songsLibraryRequestForContextMenuWithPlaylist:
playlistIndex
season
_menuItemForGoToTVShowWithEpisodeStoreID:
libraryAdded
_menuItemForRemoveMPObjectFromLibrary:title:
initWithHeading:menuItems:
itemProperties
_openJavascriptWithURL:
_pushViewController:
albumDetailsViewController:completion:
_findAlbumWithPersistentID:completionHandler:
initWithTitle:actionBlock:
setMenuItemType:
artistsLibraryRequest
albumsViewControllerForArtist:
_deleteConfirmationDialogWithTitle:CompletionHandler:
sharedController
tasteTypeForModel:
setTasteType:forModel:withCompletionHandler:
setHasCheckmark:
canPlayItemWithStoreID:playbackAction:
origin
initWithIdentifier:actionBlock:
canPlayItemType:withPersistentID:playbackAction:
playItemType:withPersistentID:inContainer:playbackAction:
playItemType:withPersistentID:playbackAction:
featureName
recommendationData
_hasCloudLibrary
_menuItemForRemoveAlbumFromLibrary:
_menuItemForAddAlbumToLibrary:
_menuItemForRemoveMPObject:title:
isLibraryAddEligible
_menuItemForAddMPObject:
_addTrackWithAdamIDToLibrary:completionBlock:
canPlayFromMPSong:
playFromMPSong:
_performWithAppInForeground:
canPlayFromMPAlbum:
playFromMPAlbum:
canPlayFromMPArtist:
playFromMPArtist:
_catalogSongGoToAlbumActon:
_goToPlaylistAction:
_menuItemGoToPlaylist:
_showLibraryArtistWithPID:completion:
storefrontSupportsLyrics
_showLyricsForContextMenuSubject:
_removeLibraryItemItemMatchingIdentifiers:itemKind:
_menuItemForGoToMovieWithStoreID:
kindWithSongKind:
kindWithEpisodeKind:
kindWithAlbumKind:
kindWithSeasonKind:
kindWithPlaylistEntryKind:options:
propertySetForMovie
propertySetForSongsInContextMenu
propertySetForAlbumDetails
_findLibraryItemMatchingIdentifiers:itemKind:completionHandler:
_checkLibraryForTrackWithAdamID:resultBlock:
_menuTitleForMPSong:
_menuItemForCatalogSongGoToAlbum:
_menuItemForLibraryGoToAlbumWithSong:
_menuItemForLibrarySongGoToArtist:
_menuItemForGoToArtist:
_menuItemGoToPlaylistWithSong:
_menuItemForRemoveSong:
_menuItemForAddSong:
_menuItemForLibraryRemoveSong:fromPlaylist:atPosition:
_menuItemForAddToPlaylist:
_menuItemForCatalogShuffle
_menuItemForPlayNext:actionBlock:
_menuItemForAddToUpNext:actionBlock:
_menuItemForPlaySong:inContainer:playbackAction:
_menuItemForCreateStationFromSong:
_menuItemForSongLyrics:
_menuItemForLoveMPObject:
_menuItemForHateMPObject:
_menuItemForAddOrRemoveAlbum:
_menuItemForLibraryPlayback:itemType:persistentID:playbackAction:
_menuItemForCreateStationFromAlbum:
_menuItemForCatalogPlaylistSubscribe:
_menuItemForCatalogPlaylistUnsubscribe:
_menuItemForGoToTVShow:
_menuItemForAddOrRemoveMPObject:title:inLibrary:
_menuDataWithTitle:addItemsBlock:
_menuItemForCreateStationFromArtist:
contextMenuForStoreObject:inContainer:isInLibrary:playbackReportingDictionary:completionHandler:
_menuItemForGoToMovie:
_removeItemFromLibraryWithStoreID:itemKind:
appContext
initWithContextDictionary:element:
initWithAppContext:serviceContext:
initWithDocumentServiceRequest:
setItemObjects:
_performRequestForItemDataWithCompletion:
setVisibleOnScreen:
shouldUpdateOnViewDidAppear
setShouldUpdateOnViewDidAppear:
setContextDictionary:
_updateDocument
itemObjects
hasSameContentAsSectionedCollection:
contextDictionary
appDocument
templateElement
documentServiceRequest
updateRequests
send
serviceRequest:didCompleteWithStatus:errorDictionary:
replaceAppDocumentWithAppDocument:
valueWithObject:inContext:
globalObject
hasProperty:
invokeMethod:withArguments:
toBool
evaluate:completionBlock:
_jsSupportsDocumentCreationForAppContext:JSObject:completion:
updatePending
setUpdatePending:
visibleOnScreen
jsSupportsDocumentCreation:
updateServiceRequest:documentDidChange:
didCompleteDocumentCreationWithStatus:errorDictionary:
setIdentifier:
setUpdateRequests:
_updatePending
_contextDictionary
_identifier
_updateRequests
_itemObjects
setAdjustsImageWhenAncestorFocused:
_addSubheadLabelWithFont:textColor:
setAllowsGroupBlending:
imageView
placeholderImageView
setArtworkCatalog:
setShowImage:
_adjustToArtworkSize:
_updateLayeredImage
_setSizeForLabel:
setDisableActions:
_layeredImageContainer
config
setScaleSizeIncrease:
setDefaultUnfocusedShadowRadius:
setDefaultFocusedShadowRadius:
setDefaultUnfocusedShadowOpacity:
setDefaultFocusedShadowOpacity:
_setLayeredImageCornerRadius:
setConfig:
_setLabelTextColors
_setLabelPositionsChangeY:
setHighlighted:
_updateShadowForLabel:inFocus:
maximumImageHeight
imageShape
_currentImageViewSize
_setLabelTextColorsForUserInterfaceStyle:
isGreyedOut
setShadowBlur:
subTitle
setImageView:
setPlaceholderImageView:
showImage
_subTitleLabel
_greyedOut
_showImage
_imageShape
_subTitle
_maximumImageHeight
_artworkCatalog
composersLibraryRequest
albumsViewControllerForComposer:
initializeLoggingWithDomain:persistentComponents:
_updateOverlayLayoutGuide
adjustedContentInsetDidChange
adjustedContentInset
contentSize
overlayLayoutView
_notifyDidScroll
_delegateFlags
_overlayLayoutView
numberOfSections
numberOfItemsInSection:
setMediaLibrary:
kindWithVariants:songKind:
kindWithVariants:playlistEntryKind:options:
kindWithRelationshipKinds:
sortDescriptorWithRelatedProperties:ascending:
setItemSortDescriptors:
setSectionProperties:
propertySetForTVEpisode
sortDescriptorWithKey:ascending:
propertySetForSongsWithDetails:
_songsLibraryRequestForContextMenuWithPlaylist:songProperties:
_albumsLibraryRequestWithVariants:
recentlyAddedlibraryRequest
TVShowsAndMoviesLibraryRequest
songsLibraryRequestForContextMenu
songsAndMusicVideosLibraryRequestForContextMenu
TVEpisodeLibraryRequestWithAdamID:
sharedRestrictionsMonitor
setMaximumTVShowRatingForAgeGate:
setMaximumMovieRatingForAgeGate:
initWithPlayerID:
setVideoSupported:
addEngineObserver:
start
_itemReadyToPlay:
_itemChanged:
_itemPlaybackEnded:
_appWillResignActive:
_appDidEnterBackground:
removeObserver:forKeyPath:context:
removeEngineObserver:
playbackEngine
fallbackPlaybackIntent
elapsedTimeObservers
setIsStopped:
waitsAfterPreparingMediaItems
currentAVItem
isAssetLoaded
_setCurrentState:
mediaType
_setCurrentMediaItem:
_TVPPlaybackStateFromMCPPlayerState:
currentMediaItemInitialLoadingComplete
setCurrentMediaItemInitialLoadingComplete:
isStopped
updateBookmarkWithSuggestedTime:forElapsedTime:duration:playbackOfMediaItemIsEnding:
identifiersForLastEndedPlaybackItem
setElapsedTimeJumpInProgress:
setTargetElapsedTime:
reportUserSeekFromTime:toTime:
changeMediaInDirection:
initWithStartTime:endTime:
_updateAVPlayerItemMetadataIfNeeded
timedMetadataIfAvailable
setVideoView:
forwardmostCMTimeRangeInCMTimeRanges:
initWithCMTimeRange:
setBufferedTimeRange:
_avPlayerItemDidChange:
setAvPlayer:
currentItem
_updateAVPlayerFromAVItem:
setIsLive:
isLoading
setIsLoading:
initWithStartTime:duration:
_updateElapsedTimeObserversWithDurationSnapshot:
dateWithTimeIntervalSinceReferenceDate:
elapsedTimeJumpInProgress
targetElapsedTime
stateReasonDialog
itemError
_sendNotificationForError:avItem:
setItemError:
_mpGenericObjectFromMPAVItem:
storeItemInt64ID
mainTitle
modelGenericObject
setCurrentAVItem:
modelPlayEvent
identifiersForLastPlayedContainer
setIdentifiersForLastPlayedContainer:
setCurrentAVPlayerItem:
_updateAVPlayerItem:
currentAVPlayerItem
externalMetadata
MPAVItem
cloudID
_addMetadataToPlayerItem:fromGenericObject:
setAVKitMediaType:
setPreventsDisplaySleepDuringVideoPlayback:
setIdentifiersForLastEndedPlaybackItem:
scanning
_getStringForTitleLabel:subtitleLabel:forMusicVideo:
_addMetadataToArray:withMetadataIdentifier:value:
_getStringForTitleLabel:subtitleLabel:forTVEpisode:
setExternalMetadata:
_roundedImageWithImage:radius:
addClip
_metadataItemWithValue:identifier:
setExtendedLanguageTag:
engineDidPauseForLeaseEnd:
engine:didPauseForLeaseEndWithError:
engine:prepareForActivationWithCompletion:
engine:didFailToActivateWithError:resolution:
engine:didFailToPlayFirstItem:withError:
engine:didFailToPlayItem:withError:
engine:requiresAuthorizationToPlayItem:authorizationHandler:
engine:requiresAuthorizationToPlayItem:reason:authorizationHandler:
engine:didChangeToState:
engine:willChangeToItem:fromItem:
engine:didChangeToItem:
engine:willResetQueueWithPlaybackContext:
engine:didResetQueueWithPlaybackContext:error:
engine:didChangeQueueWithReason:
engine:didChangeShuffleType:
engine:didChangeRepeatType:
engineWillBeginStateRestoration:
engineDidEndStateRestoration:
initWithName:
invalidate
changeMediaInDirection:reason:
continueLoadingCurrentItem
playIgnoringDelegate:
pauseIgnoringDelegate:
pauseWithVolumeRampDuration:
scanWithRate:
stopWithVolumeRampDuration:
setElapsedTime:precise:
setElapsedTime:seekPrecision:
setElapsedTime:seekPrecision:ignoreDelegate:
addElapsedTimeObserver:
removeElapsedTimeObserverWithToken:
addBoundaryTimeObserverForTimes:withHandler:
addBoundaryTimeObserverForDates:withHandler:
removeBoundaryTimeObserverWithToken:
skipToNextChapterInDirection:
setSelectedSubtitleOption:setGlobalPreference:
updateSubtitleOptions
currentMediaItemSupportsScrubbingUsingPlayer
asyncDelegate
setAsyncDelegate:
setCurrentMediaItem:
currentMediaItemPreparedForLoading
currentMediaItemIsStreaming
currentMediaItemPresentationSize
currentMediaItemHasDates
errorBehavior
setErrorBehavior:
interactive
setInteractive:
rate
rateUsedForPlayback
setRateUsedForPlayback:
setWaitsAfterPreparingMediaItems:
playbackDate
setPlaybackDate:
muted
setMuted:
volume
setVolume:
chapterCollections
currentChapterCollection
setCurrentChapterCollection:
currentChapter
currentInterstitial
bufferedTimeRange
seekableTimeRange
seekableDateRange
forwardPlaybackEndTime
reversePlaybackEndTime
mediaItemEndAction
setMediaItemEndAction:
audioOptions
selectedAudioOption
setSelectedAudioOption:
subtitleOptions
selectedSubtitleOption
setSelectedSubtitleOption:
maximumBitRate
setMaximumBitRate:
preventsSleepDuringVideoPlayback
setPreventsSleepDuringVideoPlayback:
updatesMediaRemoteInfoAutomatically
setUpdatesMediaRemoteInfoAutomatically:
limitReadAhead
setLimitReadAhead:
changeToMediaAtIndex:reason:
addWeakReferenceToVideoView:
removeWeakReferenceToVideoView:
setElapsedTime:orPlaybackDate:withAVKitCompletion:
setPlayQueue:
setPlaybackEngine:
setElapsedTimeObservers:
_currentMediaItem
_mediaItemObservationQueue
_waitsAfterPreparingMediaItems
_isStopped
_elapsedTimeJumpInProgress
_isLive
_isLoading
_playQueue
_playbackEngine
_name
_elapsedTimeObservers
_avPlayer
_targetElapsedTime
_bufferedTimeRange
_currentAVItem
_identifiersForLastPlayedContainer
_identifiersForLastEndedPlaybackItem
_currentAVPlayerItem
_videoView
_createBarViews
_removeAnimations
_addAnimationsWithRepeatCount:
_setBarHeights:
_addAnimations
_updateMusicBarsStyle
filterWithType:
setCompositingFilter:
musicBarsStyle
setAnchorPoint:
removeAllAnimations
valueWithCGRect:
setKeyPath:
setValues:
setKeyTimes:
setSpeed:
setRepeatCount:
stopAnimating
resumeAnimating
_barViews
_repeatCount
_musicBarsStyle
currentContext
setCurrentContext:
currentSubcontext
setCurrentSubcontext:
_currentContext
_currentSubcontext
initWithStyle:reuseIdentifier:
labelForMarquee
_updateImage
_imageViewWidth
_textLabelWidthWithXPosition:currentWidth:
_setImageTintColor:
rendersImageAsTemplates
setRendersImageAsTemplates:
allowsFocus
setAllowsFocus:
_imageTintColor
_setImageViewWidth:
_backingImage
_allowsFocus
__imageTintColor
__imageViewWidth
setPlayerRequestController:
emptyPropertySet
playerRequestController
playbackState
playingSection
setPlayingItem:
setPlayingSection:
setPlaybackState:
isShuffled
setShuffled:
_shuffled
_playbackState
_playingSection
_playingItem
_playerRequestController
_selectedAllSeasons
_allSeasonsButton
setTableView:
_addBackdropView
_applicationWillEnterForeground:
_applicationDidFinishSuspension:
_setPreviewPaused:
_frameForHeaderView
_frameForTable
useSmallBackdropStyle
smallBackdropInsets
_frameForPreview
adjustedFrameForPreviewFrame:
setBounds:
_isAutoUpdatingPreviewViewController
_cancelDelayedAutoUpdateOfPreviewViewController
_focusVelocity
_delayedAutoUpdatePreviewViewController
_unregisterForBackdropViewHideStateUpdates
_registerForBackdropViewHideStateUpdates
previewViewController
_updateBackdropViewAfterSettingPreviewViewIfNessecary
shouldAnimatePreviewView
_updateBackdropViewBeforeSettingPreviewViewIfNessecary
_setPreviewView:forced:animated:completion:
setPreviewView:
_cancelAutoUpdatingPreviewViewController
fadeThroughPreviews
insertSubview:belowSubview:
sendSubviewToBack:
setPreviewViewController:forced:
_removeBackdropView
alpha
insertSubview:aboveSubview:
autoUpdatePreviewViewControllerBlock
_resetAutoUpdatePreviewViewControllerState
setPreviewViewController:
setBackdropViewHideStateNeedsUpdatingBlock:
backdropViewMode
shouldHideBackdropView
setBackdropViewHidden:animated:
_isBackdropViewVisible
tableViewWidth
setPreviewPaused:
defaultRowHeight
defaultSectionHeaderHeight
tableView:willDisplayHeaderView:forSection:
tableView:willDisplayFooterView:forSection:
tableView:didEndDisplayingCell:forRowAtIndexPath:
tableView:didEndDisplayingHeaderView:forSection:
tableView:didEndDisplayingFooterView:forSection:
tableView:heightForHeaderInSection:
tableView:heightForFooterInSection:
tableView:estimatedHeightForRowAtIndexPath:
tableView:estimatedHeightForHeaderInSection:
tableView:estimatedHeightForFooterInSection:
tableView:viewForHeaderInSection:
tableView:viewForFooterInSection:
tableView:accessoryTypeForRowWithIndexPath:
tableView:accessoryButtonTappedForRowWithIndexPath:
tableView:shouldHighlightRowAtIndexPath:
tableView:didHighlightRowAtIndexPath:
tableView:didUnhighlightRowAtIndexPath:
tableView:willSelectRowAtIndexPath:
tableView:willDeselectRowAtIndexPath:
tableView:didDeselectRowAtIndexPath:
tableView:editingStyleForRowAtIndexPath:
tableView:titleForDeleteConfirmationButtonForRowAtIndexPath:
tableView:editActionsForRowAtIndexPath:
tableView:leadingSwipeActionsConfigurationForRowAtIndexPath:
tableView:trailingSwipeActionsConfigurationForRowAtIndexPath:
tableView:shouldIndentWhileEditingRowAtIndexPath:
tableView:willBeginEditingRowAtIndexPath:
tableView:didEndEditingRowAtIndexPath:
tableView:targetIndexPathForMoveFromRowAtIndexPath:toProposedIndexPath:
tableView:indentationLevelForRowAtIndexPath:
tableView:shouldShowMenuForRowAtIndexPath:
tableView:canPerformAction:forRowAtIndexPath:withSender:
tableView:performAction:forRowAtIndexPath:withSender:
tableView:canFocusRowAtIndexPath:
tableView:shouldUpdateFocusInContext:
indexPathForPreferredFocusedViewInTableView:
tableView:shouldSpringLoadRowAtIndexPath:withContext:
tableView:shouldBeginMultipleSelectionInteractionAtIndexPath:
tableView:didBeginMultipleSelectionInteractionAtIndexPath:
tableViewDidEndMultipleSelectionInteraction:
tableView:contextMenuConfigurationForRowAtIndexPath:point:
tableView:previewForHighlightingContextMenuWithConfiguration:
tableView:previewForDismissingContextMenuWithConfiguration:
tableView:willPerformPreviewActionForMenuWithConfiguration:animator:
tableView:willCommitMenuWithAnimator:
setHeaderView:
setAutoUpdatePreviewViewControllerBlock:
setBannerView:
tableViewPadding
previewViewPadding
setPreviewViewPadding:
previewOnRightSide
bannerView
setUseSmallBackdropStyle:
setSmallBackdropInsets:
previewView
setFadeThroughPreviews:
_lastFocusedDescendentView
_backdropView
_tableContainingView
_previewContainerView
_lastAutoUpdatePreviewIndexPath
_lastAutoUpdatePreviewDelay
_pendingAutoUpdatePreviewIndexPath
_previewOnRightSide
_useSmallBackdropStyle
_fadeThroughPreviews
_previewViewController
_tableViewWidth
_backdropViewMode
_bannerView
_headerView
_previewView
_autoUpdatePreviewViewControllerBlock
_tableViewPadding
_previewViewPadding
_smallBackdropInsets
isPreviewPaused
backdropViewHideStateNeedsUpdatingBlock
_fillQueue
_checkForPreloadCompletion
_loadPendingImages
_currentQueueSize
_artworkCatalogToLoadNext
pauseImageLoad
_artworkDidLoad:withImage:
_artworkDidFail:
preloadImageCount:withCompletionHandler:
popNextImage
setPauseImageLoad:
isRandomized
setRandomized:
preloadCount
setPreloadCount:
preloadCompletionHandler
setPreloadCompletionHandler:
queueSize
setQueueSize:
concurrentDownloadCount
setConcurrentDownloadCount:
nextIndex
setNextIndex:
finishedImages
setFinishedImages:
pendingArtworkCatalogs
setPendingArtworkCatalogs:
loadingArtworkCatalogs
setLoadingArtworkCatalogs:
_randomized
_pauseImageLoad
_preloadCount
_preloadCompletionHandler
_queueSize
_concurrentDownloadCount
_nextIndex
_finishedImages
_pendingArtworkCatalogs
_loadingArtworkCatalogs
initWithObject:playbackReportingDictionary:container:
setStorefrontSupportsLyrics:
storeFrontSupportsLyrics:
initWithLibraryObject:container:
setOrigin:
setMpObject:
playlistVersionHash
setPlaylistVersionHash:
_libraryAdded
_storefrontSupportsLyrics
_origin
_mpObject
_container
_featureName
_recommendationData
_playlistVersionHash
_playlistIndex
_recentRadioStationsDidChange:
sharedRadioRecentStationsController
_playbackContainerDidChange:
_playbackErrorDidOccur:
_userAccountChanged:
_registerForStorePushNotifications
_setupMusicLibraryNotifications
removeListener:
isProcessingPlayCommand
isObject
callWithArguments:
setIsProcessingPlayCommand:
_stringifyID:
_needsSubscriptionForPlayItem:
_sendSubscriptionRequiredNotificationForPlayItem:alreadySent:
_storeDictForSongInCollection:atIndex:
_firstPlayIdentifierForSongDict:
_isStoreSongExplicit:
initWithRequestedPropertySet:
initWithLookupDictionary:
mediaClipWithStoreItemMetadata:storeItemMovieClip:
_ratingRankingFromStoreDictionary:
kindWithModelClass:
initWithRequest:
setResults:
setStaticResponse:
_playbackActionTypeFromString:
initWithRequest:shuffle:playbackAction:
isValidPlaybackIntent
_addPAFDataToPlaybackIntent:options:
_prepareCallback:
_jsCallbackWithIdentifier:args:
canPlayFromStationStringID:isFreeRadioStation:
_getFeatureNameFromOptions:
playFromStationStringID:playActivityFeatureName:
canPlayFromArtistID:
playFromArtistID:
_callJSMethodNamed:withArgs:
_dictionaryForRadioStation:
getRecentStationsWithCompletionHandler:
radioHistoryInitialized
refreshWithCompletionHandler:
setRadioHistoryInitialized:
queryMusicLibraryForPlaylistWithCloudGlobalID:completionHandler:
removePlaylistFromMusicLibraryWithGlobalID:completionHandler:
unsignedIntValue
numberWithUnsignedInt:
toString
queryMediaLibrary:maxItems:searchTerm:options:completionHandler:
localizedDescription
_modelKindForItemTypeString:
_isItemInLibraryWithStoreDictionary:
queryRecentlyAdded:range:completionHandler:
querySongsForAlbumWithPersistentID:range:completionHandler:
querySongsForPlaylistWithPersistentID:range:completionHandler:
toObject
loadingScreen
hide
findItemInLibraryWithType:cloudID:options:completionHandler:
getNowPlayingInfoWithOptions::
tvs_setObjectIfNotNil:forKey:
getURLForArtworkCatalog:mpObject:completionHandler:
getPlayingStateWithCompletionHandler:
isMusicLibrarySynced
presentContextMenuForItemWithOptions:::
_getPlaybackContainerFromOptions:
_genericObjectFromPlatformDictionary:
isStoreItemInLibrary:
initWithTitle:identifier:actionBlock:
insertObject:atIndex:
removeObjectIdenticalTo:
setActionBlock:
setPreventStoreItemMetadataCaching:
modelObjectWithStorePlatformDictionary:
_storeObjectFromPlatformDictionary:getProperties:
innerObject
currentLocale
setLocale:
bookmarksForKeys:
bookmarkTime
bookmarkTimestamp
isMarkedAsUnwatched
stationStringID
artworkURL
setPlayActivityRecommendationData:
allValues
allKeys
tvs_numberForKey:
_getDictionaryForGenericObject:completionHandler:
appContext:needsReloadWithUrgency:options:
reload
accountChangedTimer
setAccountChangedTimer:
_reloadJSApp
showOverKeyWindowWithCompletion:
episodeNumber
_callJSMusicInitializedNotification
_libraryManagerStateChanged:
setIsMusicLibrarySynced:
_callJSMusicUpdatedNotification
removeListener:forTopic:
addListener:forTopic:
itemType
_isAlbumInLibrary:storeSongArray:
_isItemInLibraryWithIdentifiers:itemKind:
personalizeSong:withProperties:completionHandler:
checkAlbumInLibrary:songs:completionHandler:
setJSValue:forProperty:
jsValueForProperty:
pushNotificationServer:didReceiveMessageForTopic:userInfo:
pushNotificationServerTokenDidChange:
playItems:::
playRadioStation:::
getRecentRadioStations:
queryMusicLibraryForPlaylistWithCloudGlobalID::
addToMusicLibraryWithAdamID::
addPlaylistToMusicLibraryWithGlobalID::
removePlaylistFromMusicLibraryWithGlobalID::
removeItemsFromMusicLibraryWithSagaIDs::
removeItemFromMediaLibraryWithPersistentID:::
queryMediaLibrary:::::
queryMusicLibraryForSongsWithAdamIDs::
queryMediaLibraryWithStoreID::::
queryRecentlyAdded:::
querySongsForAlbumWithPersistentID::::
querySongsForPlaylistWithPersistentID::::
findItemInLibraryByCloudID::::
getNowPlayingInfo:
getCurrentIsPlayingState:
presentExplicitRestrictionAlertIfNeededOfType::
presentDetailView:::
presentContextMenuForItem::
getBookmarkDataForItems::
musicLog::
pageDidAppear:
musicAppAPIVersion
isMusicLibraryInitialized
_songFromPlatformDictionary:
_isSongInLibrary:
_getRecommendationDataFromOptions:
_isProcessingPlayCommand
_radioHistoryInitialized
_isMusicLibrarySynced
_accountChangedTimer
unsignedLongLongValue
initWithName:value:
setHost:
setQueryItems:
setHeaderReferenceSize:
sortButton
_selectedSortButton
_playSongAtIndexPath:
lastReceivedResponse
_invalidateResultsWithResponse:
contentOffset
setTransform:
songs
sectionedCollectionDataSource
sectionIndexTitles
indexOfSectionForSectionIndexTitleAtIndex:
sortDescriptorsForRequest:
_processResponse:
dataSource
showSortMenuForLibraryRequest:inViewController:completion:
_collectionView:canMoveItemAtIndexPath:
_collectionView:moveItemAtIndexPath:toIndexPath:
_collectionView:canEditItemAtIndexPath:
_sectionIndexTitlesForCollectionView:
_collectionView:sectionIndexTitlesTrimmedToCount:
_collectionView:indexPathForSectionIndexTitle:atIndex:
_collectionView:willPerformUpdates:
collectionViewNeedsFocusUpdate:
setCollectionView:
setLibraryRequest:
setLastReceivedResponse:
focusToIndexPath
setFocusToIndexPath:
setSongs:
setSectionedCollectionDataSource:
_libraryRequest
_lastReceivedResponse
_focusToIndexPath
_songs
_sectionedCollectionDataSource
viewControllerForKey:
completeTransition:
_beginZoomAnimationFromViewController:toViewController:containerView:completion:
transitionDuration:
animateTransition:
interruptibleAnimatorForTransition:
animationEnded:
dictionaryWithDictionary:
dataItem
mediaItemMetadata
bookmark
setDataItem:
setMediaItemMetadata:forProperty:
removeMediaItemMetadataForProperty:
performMediaItemMetadataTransactionWithBlock:
_playedThresholdTimeForDuration:
setBookmarkTime:
setBookmarkTimestamp:
setHasBeenPlayed:
updateBookmark:
reportingDelegate
updatePlayCountForElapsedTime:duration:
mediaItemURL
isEqualToMediaItem:
prepareForLoadingWithCompletion:
prepareForPlaybackInitiationWithCompletion:
loadStreamingKeyForRequest:
loadResourceForRequest:
cleanUpMediaItem
replacementErrorForPlaybackError:
shouldRetryPlaybackForError:
initWithMPModelObject:
setMediaItemMetadata:
setBookmark:
_modelObject
_mediaItemMetadata
_dataItem
_bookmark
fontDescriptor
fontDescriptorByAddingAttributes:
_userInterfaceStyle
_lightModeListTitleTextColor
_darkModeListTitleTextColor
_lightModeListSubheadTextColor
_darkModeListSubheadTextColor
_lightModeListItemTextColor
_darkModeListItemTextColor
_lightModeReviewScoreTextColor
_darkModeReviewScoreTextColor
_lightModeReviewTextColor
_darkModeReviewTextColor
_lightModeReviewNameTextColor
_darkModeReviewNameTextColor
_lightModeListItemSelectedOverlayFillColor
_darkModeListItemSelectedOverlayFillColor
_lightModeListItemSelectedOuterStrokeColor
_darkModeListItemSelectedOuterStrokeColor
_lightModeMetadataLongDescriptionColor
_darkModeMetadataLongDescriptionColor
title3Font
title4Font
headline2Font
headline3Font
subtitle2Font
subheadFont
footnoteFont
caption2Font
fontWithWeight:fromFont:
listSubheadTextColor
imageHeaderSubtitleColor
listItemSelectedTextColor
folderTitleTextColor
gridItemTextColor
rowTitleTextColor
rowTitleSelectedTextColor
productionTitlesTextColor
reviewScoreTextColor
reviewTextColor
reviewNameTextColor
reviewRowTitleTextColor
listItemSelectedOverlayFillColor
listItemSelectedOuterStrokeColor
metadataLongDescriptionTextColor
menuBarButtonTextColor
menuBarButtonHighlightedTextColor
feedTitleColor
feedSubtitleColor
feedPageIndicatorColor
feedPageIndicatorCurrentPageColor
feedRatingsStarColor
feedListItemFocusedColor
feedNavigationColor
initWithTVEpisode:mediaItemMetadata:
_startTimer
_loadNextImage:
scheduledTimerWithTimeInterval:target:selector:userInfo:repeats:
_crossfadeToImage:
didMoveToSuperview
setPadding:
crossfadePeriod
crossfadeDuration
_crossfadeTimer
_loaderQueue
_crossfadePeriod
_crossfadeDuration
_padding
setFocusScaleAnchorPoint:
_effectWithStyle:invertAutomaticStyle:
visualEffectContainerView
setMinimumScaleFactor:
_selectButtonAction:
_buttonActionTriggered
addTarget:action:forEvents:
_setButtonShadows
setCircular:
isEnabled
setControlState:withAnimationCoordinator:
circular
setShadowOpacity:forUserInterfaceStyle:
buttonStyle
_maskImageLayer
_textLabel
_selectRecognizer
_backgroundEffectView
_buttonStyle
_circular
_text
stations
radioPlaybackIntentWithStationStringID:
setRadioStationStringID:
radioPlaybackIntentWithStation:
playRadioWithPlaybackIntent:
_playbackIntentForArtistID:
radioPlaybackIntentFromSong:
playRadioFromMPSong:
radioPlaybackIntentFromAlbum:
radioPlaybackIntentFromArtist:
didMoveToWindow
_startAnimations
_stopAnimations
_addImageToAnimationContainer:
tvs_randomizedArray
setFilters:
begin
animationWithKeyPath:
setFromValue:
setToValue:
setFillMode:
setRemovedOnCompletion:
functionWithControlPoints::::
setBeginTime:
commit
removeAnimationForKey:
animationDidStart:
animationDidStop:finished:
_animating
_additionalImageViewCount
_animationGroup
_paused
radiusFromCornerRadii:
floatValue
tv_width
tv_height
focusedSizeIncreaseForSize:upscaleFactor:
children
tv_elementType
tv_imageType
canHandleDecodingOnRenderThread
initWithImageProxy:
placeholderImageForViewElement:
setStackSize:
setFocusSizeIncrease:
setPreventPopWhenEmpty:
setContentRange:
albumsViewControllerForAllAlbums
artistsViewController
compilationsViewController
genresViewController
composersViewController
musicVideosViewController
playlistsViewController
recentlyAddedViewController
songsViewControllerForAllSongs
TVShowsViewController
_isAppleMusicSubscriber
_isPlayingOnLocalDevice
_playRequestWithItemType:requestBlock:
_stringForItemType:
_playLibraryItemWithRequest:identifiers:playbackType:
_playVideoItemWithRequest:item:
_playSongsWithRequest:startIdentifiers:shuffle:initialPlaybackType:
_playWithPlaybackIntent:initialPlaybackType:playbackAction:checkSubscriptionStatus:
playbackAction
mpcPlaybackIntent
shuffleMode
startItemIdentifiers
_songsRequestForContainer:
_playSongsWithRequest:playbackAction:initialPlaybackType:
_isVideoItemType:
_playSongsWithRequest:playbackAction:
playSongsInContainer:startIdentifiers:shuffle:itemSortDescriptors:inSectionKind:sectionSortDescriptors:initialPlaybackType:
_songsRequestForContainer:filterObject:
_playUsingAirPlayWithPlaybackIntent:initialPlaybackType:playbackAction:
selectRoute:operation:completion:
_queueSongsWithRequest:playNext:
playSongsInContainer:startIdentifiers:shuffle:itemSortDescriptors:
_categoryForRequest:
_hasLegacySortTypeForCategory:
_legacySortTypeForCategory:
isSortAlbumsByArtistSet
isSortSongsByArtistSet
sortAlbumsByArtist
sortSongsByArtist
_defaultSortTypeForCategory:
_supportedSortTypeDictionary
synchronize
_setCurrentSortType:forCategory:
variants
_currentSortTypeForCategory:
_sortDescriptorsForSortType:
sortDescriptorWithKeyPath:ascending:
_titleForSortType:
_setScopedMusicVideosForScopedAlbumSortType:
_alertActionForSortType:inCategory:handler:
actions
canSortRequest:
touchesBegan:withEvent:
whitespaceAndNewlineCharacterSet
tvs_stringByRemovingCharactersInSet:
_identifierForMPModelObject:
tvs_SHA1String
tvm_itemAtIndex:
_loadArtworkForMPObject:scaleToSize:completionHandler:
storeCloudAlbumID
radioStationHash
contentItemID
setWindowLevel:
setRootViewController:
presentationViewController
_presentationViewController
initWithType:
initWithTitle:message:image:
widthAnchor
constraintLessThanOrEqualToConstant:
constraintGreaterThanOrEqualToConstant:
heightAnchor
constraintEqualToConstant:
insertSubview:below:
constraintLessThanOrEqualToAnchor:
titleText
messageText
_updateForTraitCollectionChange
roundedRectBezierPath:withRoundedCorners:withCornerRadius:
setEffect:
removeChildViewController:
setWindow:
setTitleText:
setMessageText:
_shadowView
_backgroundView
_contentVibrancy
_window
_titleText
_messageText
_setBlurEnabled:
textFieldDidChange:
_doneButtonPressed:
systemInputViewControllerForResponder:editorView:containingResponder:
setSupportsRecentInputsIntegration:
setSystemInputViewControllerDelegate:
supportsTouchInput
reloadInputViewsForPersistentDelegate
systemLayoutSizeFittingSize:
boundingRectWithSize:options:context:
systemInputViewController:didChangeAccessoryVisibility:
systemInputViewControllerDidAcceptRecentInput:
_disableAutomaticKeyboardUI
_enableAutomaticKeyboardPressDone
textFieldAllowsFocus
setTextFieldAllowsFocus:
textFieldHeaderLabel
topAccessoryView
bottomAccessoryView
systemInputViewController
_textField
_topAccessoryView
_bottomAccessoryView
_isTouchEnabled
_preferredFocusedView
_hideAccessoryViews
_textFieldHeaderLabel
_systemInputViewController
_titleViewFrameWithBounds:
_imageViewFrameWithBounds:
_messageViewFrameWithBounds:
titleView
setTitleView:
messageView
setMessageView:
_titleView
_messageView
_buttonFrameWithBounds:
submitButton
_submitButton
isSecureTextEntry
isCompilation
curator
_placeholderImageForObjectType:
handlePlayPauseCommand
playActivityFeatureName
playActivityRecommendationData
setPlaybackAction:
setStartItemIdentifiers:
setMpcPlaybackIntent:
_playbackAction
_startItemIdentifiers
_mpcPlaybackIntent
_setColorsForUserInterfaceStyle:
progressPercent
_progressView
_progressCompleteView
_progressPercent
registerClass:forSupplementaryViewOfKind:withReuseIdentifier:
_addArtistButton
_musicVideosLibraryRequest
setMusicVideosResponse:
setMpResults:completion:
_playMusicVideo:
componentsJoinedByString:
updateWithModelResponse:
musicVideosResponse
_shouldShowHeadingTitles
dequeueReusableSupplementaryViewOfKind:withReuseIdentifier:forIndexPath:
setArtistButton:
artistButton
_selectedArtist
setFooterView:
footerView
constraintGreaterThanOrEqualToAnchor:
_artistButton
_footerView
_musicVideosResponse
_wantsFocusEngine
_canBecomeKeyWindow
setAllowsGroupOpacity:
superlayer
keyWindow
rootViewController
snapshotViewAfterScreenUpdates:
userSwitchLabel
userSpinnerView
initWithDuration:curve:animations:
userSwitchEffectView
addCompletion:
startAnimation
isTimeoutEnabled
timeout
userSwitchSnapshotView
setUserSwitchEffectView:
setUserSwitchSnapshotView:
setUserSpinnerView:
setUserSwitchLabel:
userSwitchOverlayWindow
setUserSwitchOverlayWindow:
hiding
setHiding:
setIsTimeoutEnabled:
_hiding
_isTimeoutEnabled
_userSwitchOverlayWindow
_userSwitchSnapshotView
_userSwitchEffectView
_userSwitchLabel
_userSpinnerView
setHighlightStyle:
_scaleRect:withStyle:
intValue
initWithScaleToSize:
_configureLabel:withTextElement:maxWidth:
colorType
gradientColors
setStartPoint:
setEndPoint:
titleGradientLayer
removeFromSuperlayer
insertSublayer:atIndex:
setTitleGradientLayer:
setAccessibilityLabel:
setBackgroundColor:forState:
margin
position
maxTextLines
_randomColor
createdImageViews
setCreatedImageViews:
titleBlockView
setTitleBlockView:
setSubtitleLabel:
titleBackgroundImageView
setTitleBackgroundImageView:
playlistID
setPlaylistID:
_createdImageViews
_titleBlockView
_titleBackgroundImageView
_playlistID
_titleGradientLayer
setMaximumResultsPerScope:
initWithItemKind:name:properties:
setScopes:
setSearchString:
dataWithJSONObject:options:error:
base64EncodedStringWithOptions:
sortedArrayUsingComparator:
performRequestForContainerKind:persistentID:range:requestBlock:completionHandler:
songDictionariesForMPCollection:containerPID:inRange:
_addSongData:toDictionary:index:
_addClassicalSongData:toDictionary:
_addPlaylistEntryData:toDictionary:index:
clientDataForSongPID:containerPID:songIndex:
classicalMovementCount
_dictionaryForPlaylistEntry:playlistPID:index:
_dictionaryForSong:index:
indexPathForRow:inSection:
setStoreCloudAlbumID:
initWithModel:personalizationStyle:
initWithUnpersonalizedRequest:unpersonalizedContentDescriptors:
fileURLWithPath:
setWriteCompletionHandler:
_getURLForArtworkCatalog:completionHandler:
resolvedURLString
requestExportableArtworkPropertiesWithCompletion:
initWithBase64EncodedString:options:
setCacheLimit:forCacheIdentifier:requestingContext:
_updateControls
_configureCollectionViewLayout:
_sortButtonSelected
didSelectItemAtIndexPath:
showIndexBarTitles
totalNumberOfItems
preventPopWhenEmpty
setTotalNumberOfItems:
navigationController:didShowViewController:animated:
navigationController:willShowViewController:animated:
navigationControllerSupportedInterfaceOrientations:
navigationControllerPreferredInterfaceOrientationForPresentation:
navigationController:interactionControllerForAnimationController:
navigationController:animationControllerForOperation:fromViewController:toViewController:
setMpResults:
_showViewControllerWithZoomAnimation:
_navigationControllerDelegate
_viewControllerWithZoomAnimation
_showIndexBarTitles
_preventPopWhenEmpty
_mpResults
_totalNumberOfItems
stringByAppendingPathComponent:
fileExistsAtPath:
stringWithContentsOfFile:encoding:error:
tvm_songWithTTMLLyrics:
supportsLyricsForURLBagDictionary:
setTTML:
setLyrics:
_libraryStateChanged:
_updateArtworkPeriodicallyIfNeeded
_setPreviewArtworkForBrowseSectionRowAtIndex:
previouslyFocusedItem
nextFocusedItem
_menuItemForRowIndex:
_previewTypeForMenuItem:
_setPreviewArtworkForMenuIndexNumber:
_viewControllerForBrowseSectionRowAtIndex:
_setPreviewArtworkForPreviewType:
_shuffleArray:maxCount:
_artworkCatalogForMPObject:size:
_setPreviewArtworkCatalogs:previewType:response:
unsignedIntegerValue
_nameForMenuItem:
_updateArtwork
_updateArtworkIfNeeded
_updateLibraryForResponse:
currentTopMenu
_noResultsViewWithTitle:subtitle:
numberOfSectionsInTableView:
tableView:numberOfRowsInSection:
currentMenuContext
_viewControllerUIContext
_menuSelectionIsDisplayed
_currentPreviewType
_previewArtworkCatalogMap
_currentMenuIndex
_mapMenuItemToName
_currentPreviewLibraryResponse
_didSetPreviewArtwork
_artworkNeedsUpdate
_lastSetMenuIndex
_menuFocusGuide
_currentMenuContext
_handlePlayPauseButton
_configureTableHeaderView
_startMusicPlayback
_tableHeaderLabel
headingVerticalOffset
sectionIndexTitlesForTableView:
tableView:sectionForSectionIndexTitle:atIndex:
setTableHeaderTitle:
tableHeaderTitle
tableHeaderTitleAttributedText
tableHeaderLabel
setTableHeaderLabel:
playPauseRecognizer
setPlayPauseRecognizer:
tableHeaderView
setTableHeaderView:
_headingVerticalOffset
_playPauseRecognizer
_tableHeaderView
setCacheIdentifier:forRequestingContext:
setContinuousCornerEnabled:
_handleSelectPress:
setMinimumPressDuration:
trailingImageView
accessibilityTraits
accessibilityLabel
controlState
actionHandler
initWithText:isFolder:handler:
isAccessibilityElement
_trailingImageView
_actionHandler
enumerateObjectsUsingBlock:
_contentSize
_actions
initWithLyricsInfo:viewSize:
preferredContentSize
scrollAnimationSpringDamping
initWithMass:stiffness:damping:initialVelocity:
availableTranslations
preferredLanguages
hasPrefix:
_viewWillDisappear
unhighlightedTextAlpha
currentLabelIndex
_labelAtIndex:
_viewDidAppear
viewSize
leftMargin
setVibrancyView:
vibrancyView
setContentView:
_setTextVibrancyForUserInterfaceStyle:
setDecelerationRate:
setScrollView:
scrollView
setMask:
setLyricsFont:
lyricsInfo
setDummyFirstLine:
dummyFirstLine
setProgressAlpha:
setLyricsLineIndex:
lineSpacing
setFirstLineYPos:
setLineStartTimeLabel:
lineStartTimeLabel
_lyricsTextColor
firstLineYPos
translatedLanguage
translatedTextForLyricsLine:language:
_labelForText:textColor:yPos:
setTextLabels:
_setTextAlphaForUserInterfaceStyle:
_createSongwritersLabelAtYPosition:
setSongwritersLabel:
songwritersLabel
_handleSelectButton:
setSelectRecognizer:
_handleMenuButton:
setMenuRecognizer:
runningAnInternalBuild
_handleTripleClick:
setNumberOfTapsRequired:
setTripleClickRecognizer:
_isViewActuallyVisible
setStartViewTime:
_stopTimedLyricsUpdating
_startTimedLyricsUpdating
textLabels
setUserInterfaceStyle:
vibrantEffectWithCompositingMode:compositingColor:
setHighlightedTextAlpha:
setUnhighlightedTextAlpha:
_updateLabelPositionsWithLinespacing:font:
highlightedLineIndex
_scaleView:scaleFactor:
lyricsFont
fontWithSize:
_setAutoscrollTimeout
_clearAutoscrollTimeout
selectedLabelIndex
_configureStartTimeLabelForLine:
highlightedTextAlpha
hiddenLabels
setTimestampYPosition:
runningPropertyAnimatorWithDuration:delay:options:animations:completion:
setPlayButtonEnabled:updateLineHighlight:
setPlayButtonEnableTime:
playButtonEnableTime
_scrollToLine:animated:cascading:
_highlightLine:
_hideLinesAboveCurrentLine
setAllowCascade:
_redisplayHiddenLines
animatingTopLabel
_restoreToOriginalPosition
setAnimatorView:
setAnimatingTopLabel:
setPlayButtonEnabled:
registerHandlerForEvents:onStates:withBlock:
executeBlockAfterCurrentStateTransition:
activeForCurrentSong
_jumpToCurrentLocation
_play
setSelectYPosition:
startTime
_stringForTimeInterval:
lyricsLineStartingBeforeTimeOffset:
lineIndex
endTime
_resetOriginalPosition
_getDataFromAdjustmentPanel:
timedLyricsDelegate
_indexOfLyricsLineAtTime:
setViewReportedVisible:
isViewReportedVisible
_isInSystemNowPlaying
_indexForLabelClosestTo:
lyricsLineIndex
originalCenter
currentLineCenterY
fontSize
highlightAnimationDuration
textDownscaleRatio
preScrollTime
setFontSize:
setScrollAnimationSpringDamping:
setHighlightAnimationDuration:
setTextDownscaleRatio:
setPreScrollTime:
setLastMenuClickTime:
_showAdjustmentsView
setViewSize:
displayLink
_displayLinkUpdate
displayLinkWithTarget:selector:
setDisplayLink:
currentRunLoop
addToRunLoop:forMode:
_highlightLabel:
_unhighlightLabel:
_springAnimate:
setHighlightedLineIndex:
cascadeOffsets
setYPosition:
originalPosition
_animateCascadeLabel:labelIndexOffset:labelStartY:relativeScrollOffset:
cascadeScrollStartY
cascadeLabels
_animateCascadeLabels:relativeScrollOffset:
allowCascade
animatorView
presentationLayer
setCascadeLabels:
isAutoScrolling
_animateLabelsForScrollPosition:
timestampYPosition
_canShowPlayButton
targetScrollY
isPlayButtonEnabled
lastPollTime
setLastPollTime:
setCurrentLabelIndex:
_serviceAutoscrollTimeout
_updateLyricsCountdownViewForPlayPosition:
_labelsToHide
minusSet:
_hideLabel:
setWithCapacity:
initWithDuration:controlPoint1:controlPoint2:animations:
_unhideLabel:
_scrollOffsetForForLine:
setContentOffset:
setCascadeScrollStartY:
_springAnimate:completion:
springTimingParameters
initWithDuration:timingParameters:
addAnimations:
startViewTime
menuRecognizer
selectRecognizer
lastMenuClickTime
isDecelerating
_lyricsLineIndexForLabelClosestTo:
setSelectedLabelIndex:
setTargetScrollY:
isDragging
isTracking
selectYPosition
setActiveForCurrentSong:
setLyricsInfo:
setLeftMargin:
tripleClickRecognizer
setSpringTimingParameters:
setHiddenLabels:
setCascadeOffsets:
setTranslatedLanguage:
_activeForCurrentSong
_playButtonEnabled
_allowCascade
_viewReportedVisible
_timedLyricsDelegate
_currentLineCenterY
_lyricsInfo
_highlightedLineIndex
_leftMargin
_textLabels
_displayLink
_lastPollTime
_currentLabelIndex
_selectedLabelIndex
_dummyFirstLine
_lineStartTimeLabel
_songwritersLabel
_lyricsFont
_contentView
_tripleClickRecognizer
_menuRecognizer
_lastMenuClickTime
_targetScrollY
_playButtonEnableTime
_springTimingParameters
_hiddenLabels
_firstLineYPos
_cascadeLabels
_cascadeScrollStartY
_cascadeOffsets
_animatingTopLabel
_timestampYPosition
_vibrancyView
_translatedLanguage
_selectYPosition
_lineSpacing
_scrollAnimationSpringDamping
_highlightAnimationDuration
_textDownscaleRatio
_preScrollTime
_highlightedTextAlpha
_unhighlightedTextAlpha
_viewSize
_label
fontDescriptorWithSymbolicTraits:
_setProgress:animated:
progressAlpha
_alpha
_progressAlpha
setOriginalPosition:
yPosition
_yPosition
_lyricsLineIndex
_animatorView
_originalPosition
isAirplayReceiver
bundleID
TVMusicSeparatorView
TVMusicCloudViewController
TVMusicJSPlaylistDetailViewController
TVMusicLibraryManager
TVMusicContextMenuUI
TVMusicJSAppController
TVApplicationControllerDelegate
NSObject
UIViewControllerTransitioningDelegate
TVMusicJSAlbumDetailViewController
TVMusicLibraryGenresViewController
_TVMusicLibraryGenresTableViewCell
TVTableView
UIGestureRecognizerDelegate
_TVMusicLyricsScrollView
TVMusicLyricsViewController
TVML
TVMusic
TVMusicPlaybackHostController
TVMusicRestrictionsUI
TVMusicParadeViewController
TVMusicLibraryEpisodesViewController
TVCollectionViewDelegate
UICollectionViewDelegate
UIScrollViewDelegate
TVMusicApplication
TVMusicAppDelegate
PBSystemServiceNowPlayingDelegate
TVImageView
TVMusicNoMusicView
TVMusicSectionHeaderView
TVMusicPlayerManager
TVMusicTableViewCell
_TVMusicAddToPlaylistPresentationController
TVMusicAddToPlaylistViewController
_PlaylistNameEntryViewController
TVTextEntryControllerDelegate
TVMusicMPMovieMediaItem
TVMusicLibraryPlaylistDetailViewController
UICollectionViewDataSource
TVMusicSocialBadge
TVMusicLibraryHeaderView
TVMusicAdjuster
TVMusicAdjustmentsViewController
TVMusicLibraryButtonFactory
TVNPNowPlayingSliderView
TVMusicMPSongMediaItem
TVMusicArtistTemplateController
TVFocusRedirectView
TVMusicInterfaceFactory
_TVInterfaceCreatingPrivate
TVInterfaceCreating
TVMusicAlerts
TVMusicSubscriptionManager
TVMusicLibraryAlbumsViewController
UICollectionViewDelegateFlowLayout
TVMusicLibraryVideosViewController
TVMusicPlayQueue
MPRequestResponseControllerDelegate
TVMusicAirplayDetectorDelegate
TVPMusicPlaylistTransitioning
TVMusicLibraryUtilities
TVMusicCachedLibraryRequest
TVMusicHUDController
PBSViewServicePresenter
PBSViewServiceInterface
TVMusicSystemNowPlayingViewController
TVMusicAdditions
TVMusicScreenSaverService
TVPhotoServiceInterface
Shuffled
TVNPNowPlayingProgressView
TVMusicPlaylistImageLoader
TVImageLoader
TVMusicPlaylistImageRequest
TVDurationValueTransformer
TVMusicLibraryShowsViewController
TVMusicNowPlayingManager
TVMusicTimedLyricsViewControllerDelegate
TVPPlaybackViewControllerDelegate
TVMusicAgeGateInfo
TVMusicAgeGateController
TVActivityIndicatorViewController
TVMusicLibraryAlbumDetailViewController
TVDeckImageView
TVMusicBlurDecorator
TVLabel
TVMusicSongCell
_UIFloatingContentViewDelegate
TVMusicLibraryPlaylistsViewController
TVMusicMPModelImageProxy
TVMusicContextMenuFactory
TVMusicJSDocumentViewController
IKServiceRequestDelegate
TVMusicLibraryCollectionViewCell
TVMusicLibraryComposersViewController
_TVMusicLibraryTableViewCell
TVCollectionView
TVMusicMPLibraryRequestFactory
TVMusicPlayer
TVMusicPlayQueueDelegate
MPCPlaybackEngineDelegate
MPCPlaybackEngineEventObserving
TVPAVFPlayback
TVPPlayback
TVMusicBarsView
TVMusicLibraryUITracker
TVTableViewCell
TVMusicPlaybackStatusController
TVMusicLibrarySeasonsViewController
TVPreviewTableViewController
TVTableViewDelegate
UITableViewDelegate
TVPreviewTableViewControllerAdditions
_TVImageLoaderQueue
TVMusicContextMenuSubject
TVMusicJSObject
TVCKPushNotificationListener
JSExport
TVMusicLibrarySongsViewController
UICollectionViewDataSource_Private
TVNavigationZoomAnimator
UIViewControllerAnimatedTransitioning
TVMusicMPObjectMediaItem
TVPMediaItem
TVPMediaItemReporting
TVThemeManager
TVMusicMPTVEpisodeMediaItem
TVImageCrossfadeView
TVMusicLibraryActionButton
TVMusicLibraryComposerDetailViewController
TVMusicRadioUtilities
TVScrollingParadeView
CAAnimationDelegate
TVMusicLibraryViewController
TVMusicPlaybackHelper
TVMusicLibrarySortUtilities
TVInteractionGestureRecognizer
TVMusicMPArtworkCatalogLoader
_TVMusicHUDWindow
TVMusicHUDViewController
TVTextEntryController
UISystemInputViewControllerDelegate
TVTextEntryHeaderView
TVTextEntryFooterView
_TVTextEntryTextField
TVMusicLibraryRecentlyAddedViewController
TVMusicPlaybackIntent
TVMusicCloudProgressView
TVMusicLibraryArtistDetailViewController
TVMUserSwitchOverlayWindow
TVMUserSwitchLoadingView
TVMusicPlaylistLockupViewCell
Helpers
TVMusicMPRequestViewController
UINavigationControllerDelegate
TVMusicLyricsRequest
TVMusicRequest
TVMusicLibraryTopMenuViewController
TVMusicTableViewController
TVMusicLibraryArtistsViewController
_TVMusicAddToPlaylistActionView
TVMusicAddToPlaylistActionGroupView
TVMusicTimedLyricsViewController
_TVMusicTimedLyricsScrollView
TVMusicTimestampLabel
TVMusicPlaceholderCountdownLabel
TVMusicLyricsLineLabel
TVMusicAirplayDetector
v24@0:8@16
v16@0:8
@16@0:8
v20@0:8B16
v24@0:8q16
B16@0:8
@"TVSStateMachine"
@"TVMusicLibraryTopMenuViewController"
@"TVMusicCloudProgressView"
@"UIActivityIndicatorView"
@"UIView"
@"TVMusicLibraryManager"
v32@0:8@16@?24
@24@0:8@16
@32@0:8@16@24
B48@0:8@16@24@32^@40
B32@0:8@16@24
B24@0:8@16
B32@0:8@16@?24
@"MPModelPlaylist"
v24@0:8d16
q16@0:8
v32@0:8q16@?24
v24@0:8@?16
@24@0:8q16
d16@0:8
@"ICMusicSubscriptionStatus"
#16@0:8
@24@0:8:16
@32@0:8:16@24
@40@0:8:16@24@32
B24@0:8#16
B24@0:8:16
Vv16@0:8
Q16@0:8
^{_NSZone=}16@0:8
B24@0:8@"Protocol"16
@"NSString"16@0:8
v32@0:8@16@24
v32@0:8@"TVApplicationController"16@"JSContext"24
v32@0:8@"TVApplicationController"16@"NSDictionary"24
v32@0:8@"TVApplicationController"16@"NSError"24
@"TVPlayer"24@0:8@"TVApplicationController"16
@40@0:8@16@24@32
@"<UIViewControllerAnimatedTransitioning>"40@0:8@"UIViewController"16@"UIViewController"24@"UIViewController"32
@"<UIViewControllerAnimatedTransitioning>"24@0:8@"UIViewController"16
@"<UIViewControllerInteractiveTransitioning>"24@0:8@"<UIViewControllerAnimatedTransitioning>"16
@"UIPresentationController"40@0:8@"UIViewController"16@"UIViewController"24@"UIViewController"32
@"NSURL"
@"TVApplicationController"
v40@0:8@16@24@?32
@32@0:8@16q24
@"MPModelAlbum"
@"MPModelObject"
v40@0:8@16@24@32
d32@0:8@16@24
v44@0:8@16@24B32@36
B24@0:8@"UIGestureRecognizer"16
B32@0:8@"UIGestureRecognizer"16@"UIGestureRecognizer"24
B32@0:8@"UIGestureRecognizer"16@"UITouch"24
B32@0:8@"UIGestureRecognizer"16@"UIPress"24
@56@0:8{CGRect={CGPoint=dd}{CGSize=dd}}16q48
@"NSIndexPath"
@"UITapGestureRecognizer"
@"UILongPressGestureRecognizer"
B40@0:8@16@24@32
@"UILabel"
@"UIScrollView"
@"UIFont"
@"NSString"
@"NSData"
@"MPModelPlayEvent"
@"MPModelSong"
@"NSAttributedString"
q24@0:8@16
@"TVPPlaybackViewController"
@"<TVPPlayback>"
q24@0:8q16
v40@0:8Q16Q24@?32
@32@0:8{CGPoint=dd}16
v32@0:8{CGPoint=dd}16
{CGPoint=dd}16@0:8
@"TVDeckImageView"
@"NSArray"
{CGPoint="x"d"y"d}
v48@0:8@16{CGPoint=dd}24N^{CGPoint=dd}40
v28@0:8@16B24
v40@0:8@16@24d32
v24@0:8@"UIScrollView"16
v48@0:8@"UIScrollView"16{CGPoint=dd}24N^{CGPoint=dd}40
v28@0:8@"UIScrollView"16B24
@"UIView"24@0:8@"UIScrollView"16
v32@0:8@"UIScrollView"16@"UIView"24
v40@0:8@"UIScrollView"16@"UIView"24d32
B24@0:8@"UIScrollView"16
v48@0:8@16@24@32@40
B48@0:8@16:24@32@40
v48@0:8@16:24@32@40
{CGPoint=dd}40@0:8@16{CGPoint=dd}24
@48@0:8@16@24{CGPoint=dd}32
B32@0:8@"UICollectionView"16@"NSIndexPath"24
v32@0:8@"UICollectionView"16@"NSIndexPath"24
v40@0:8@"UICollectionView"16@"UICollectionViewCell"24@"NSIndexPath"32
v48@0:8@"UICollectionView"16@"UICollectionReusableView"24@"NSString"32@"NSIndexPath"40
B48@0:8@"UICollectionView"16:24@"NSIndexPath"32@40
v48@0:8@"UICollectionView"16:24@"NSIndexPath"32@40
@"UICollectionViewTransitionLayout"40@0:8@"UICollectionView"16@"UICollectionViewLayout"24@"UICollectionViewLayout"32
B32@0:8@"UICollectionView"16@"UICollectionViewFocusUpdateContext"24
v40@0:8@"UICollectionView"16@"UICollectionViewFocusUpdateContext"24@"UIFocusAnimationCoordinator"32
@"NSIndexPath"24@0:8@"UICollectionView"16
@"NSIndexPath"40@0:8@"UICollectionView"16@"NSIndexPath"24@"NSIndexPath"32
{CGPoint=dd}40@0:8@"UICollectionView"16{CGPoint=dd}24
B40@0:8@"UICollectionView"16@"NSIndexPath"24@"<UISpringLoadedInteractionContext>"32
v24@0:8@"UICollectionView"16
@"UIContextMenuConfiguration"48@0:8@"UICollectionView"16@"NSIndexPath"24{CGPoint=dd}32
@"UITargetedPreview"32@0:8@"UICollectionView"16@"UIContextMenuConfiguration"24
v40@0:8@"UICollectionView"16@"UIContextMenuConfiguration"24@"<UIContextMenuInteractionCommitAnimating>"32
v32@0:8@"UICollectionView"16@"<UIContextMenuInteractionCommitAnimating>"24
v32@0:8@"TVCollectionView"16@"NSIndexPath"24
B32@0:8@"TVCollectionView"16@"NSIndexPath"24
B24@0:8@"TVCollectionView"16
v40@0:8@16{CGPoint=dd}24
{CGSize=dd}16@0:8
@"TVImageView"
@"UIControl"
@"MPModelTVSeason"
@"NSDateFormatter"
@?16@0:8
@"MPCLyricsReportingController"
@"IKJSObject"
@"TVMusicJSAppController"
@48@0:8{CGRect={CGPoint=dd}{CGSize=dd}}16
v48@0:8{CGRect={CGPoint=dd}{CGSize=dd}}16
{CGSize=dd}32@0:8{CGSize=dd}16
v24@0:8B16B20
@"UIImage"
@"UIImageView"
@"UIColor"
@"TVImageProxy"
{CGSize=dd}40@0:8@16@24d32
@"TVMusicPlaybackStatusController"
@"TVMusicPlayer"
v36@0:8@16B24@?28
@"TVMusicAddToPlaylistActionGroupView"
@"MPModelLibraryRequest"
@"MPModelGenericObject"
v24@0:8@"TVTextEntryController"16
@"TVTextEntryController"
q32@0:8@16q24
@40@0:8@16@24q32
q32@0:8@"UICollectionView"16q24
@"UICollectionViewCell"32@0:8@"UICollectionView"16@"NSIndexPath"24
q24@0:8@"UICollectionView"16
@"UICollectionReusableView"40@0:8@"UICollectionView"16@"NSString"24@"NSIndexPath"32
v40@0:8@"UICollectionView"16@"NSIndexPath"24@"NSIndexPath"32
@"NSArray"24@0:8@"UICollectionView"16
@"NSIndexPath"40@0:8@"UICollectionView"16@"NSString"24q32
@"TVLabel"
@"TVCollectionView"
@"MPModelResponse"
@"NSMutableArray"
@20@0:8f16
@"UIStackView"
@"UIFocusGuide"
@40@0:8{?=@fff}16
f16@0:8
v20@0:8f16
@"TVNPNowPlayingSliderView"
v24@0:8f16B20
@"TVNPNowPlayingProgressView"
@32@0:8q16q24
@"UIFocusContainerGuide"
#24@0:8@16
@"UIView"32@0:8@"TVViewElement"16@"UIView"24
@"UIViewController"32@0:8@"TVViewElement"16@"UIViewController"24
@"NSURL"24@0:8@"NSString"16
@"UIImage"24@0:8@"NSString"16
#24@0:8@"TVViewElement"16
@"UIViewController"24@0:8@"TVPlayer"16
@"UIView"32@0:8@"IKViewElement"16@"UIView"24
@"UIViewController"32@0:8@"IKViewElement"16@"UIViewController"24
#24@0:8@"IKViewElement"16
v24@0:8@"IKViewElement"16
@"UINavigationController"24@0:8@"NSString"16
v24@0:8@"TVViewElement"16
@"TVImageProxy"24@0:8@"TVViewElement"16
@"TVImageProxy"32@0:8@"IKViewElement"16@"TVImageLayout"24
@"TVMusicCloudViewController"
@"TVMusicPlaybackHostController"
@32@0:8@16@?24
{CGSize=dd}40@0:8@16@24@32
{UIEdgeInsets=dddd}40@0:8@16@24q32
d40@0:8@16@24q32
{CGSize=dd}40@0:8@16@24q32
{CGSize=dd}40@0:8@"UICollectionView"16@"UICollectionViewLayout"24@"NSIndexPath"32
{UIEdgeInsets=dddd}40@0:8@"UICollectionView"16@"UICollectionViewLayout"24q32
d40@0:8@"UICollectionView"16@"UICollectionViewLayout"24q32
{CGSize=dd}40@0:8@"UICollectionView"16@"UICollectionViewLayout"24q32
@20@0:8B16
@28@0:8@16B24
@"MPModelArtist"
@"MPModelGenre"
@"MPModelComposer"
v32@0:8@"MPRequestResponseController"16@?<v@?>24
B32@0:8@"MPRequestResponseController"16@"NSError"24
v24@0:8@"MPRequestResponseController"16
v24@0:8@"TVMusicAirplayDetector"16
@"NSIndexPath"24@0:8@"NSIndexPath"16
@36@0:8@16q24B32
B24@0:8q16
v32@0:8q16@24
{?=dddddffBB}16@0:8
v72@0:8{?=dddddffBB}16
@"NSObject<OS_dispatch_queue>"
@"NSObject<OS_dispatch_source>"
@"TVMusicAirplayDetector"
@"NSObject<TVMusicPlayQueueDelegate>"
@"MPCPlayerResponseItem"
@"MPRequestResponseController"
@"MPCPlayerResponse"
{?="snapshotTime"d"startTime"d"endTime"d"duration"d"elapsedDuration"d"rate"f"defaultRate"f"isLiveContent"B"isLoading"B}
v48@0:8@16@24@32@?40
v48@0:8q16@24@32@?40
v40@0:8q16@24@?32
v48@0:8@16@24q32@?40
v44@0:8@16@24B32@?36
@"NSMutableDictionary"
v24@0:8@"NSDictionary"16
v32@0:8@"NSDictionary"16@?<v@?>24
@"NSXPCInterface"16@0:8
v32@0:8@"NSDictionary"16@?<v@?@"<NSSecureCoding>"@"NSError">24
v24@0:8@"<NSSecureCoding>"16
v48@0:8@16@24@32^v40
@"UINavigationController"
v32@0:8@"NSDictionary"16@?<v@?@"NSArray"@"NSError">24
v24@0:8@"<TVPhotoServerInterface>"16
v40@0:8@"NSDictionary"16@"<TVPhotoServerInterface>"24@?<v@?@"NSArray"@"NSError">32
@"<TVPhotoServerInterface>"
@"<NSObject>"
@56@0:8@16{CGSize=dd}24d40d48
@52@0:8@16{CGSize=dd}24B40@?44
@60@0:8@16{CGSize=dd}24B40q44@?52
@68@0:8@16{CGSize=dd}24B40q44@52@?60
@"NSString"24@0:8@16
@"NSURL"24@0:8@16
@52@0:8@16{CGSize=dd}24B40@?<v@?@"TVImage"@"NSString"@"NSDate"Q@"NSError">44
@60@0:8@16{CGSize=dd}24B40q44@?<v@?@"TVImage"@"NSString"@"NSDate"Q@"NSError">52
@68@0:8@16{CGSize=dd}24B40q44@"<IKNetworkRequestLoader>"52@?<v@?@"TVImage"@"NSString"@"NSDate"Q@"NSError">60
v32@0:8{CGSize=dd}16
{CGSize="width"d"height"d}
@"NSDateComponentsFormatter"
@"UISegmentedControl"
d24@0:8@16
v32@0:8@16d24
d24@0:8@"TVMusicTimedLyricsViewController"16
v32@0:8@"TVMusicTimedLyricsViewController"16d24
B24@0:8@"TVMusicTimedLyricsViewController"16
v24@0:8@"TVMusicTimedLyricsViewController"16
v48@0:8@16@24@32N^{CGRect={CGPoint=dd}{CGSize=dd}}40
v32@0:8@"<TVPMediaItem>"16@?<v@?@"TVPMusicContextMenuData">24
v40@0:8@"TVPPlaybackViewController"16@"NSObject<TVPMediaItem>"24@?<v@?@"TVPRelatedContent">32
B24@0:8@"UIViewController"16
v40@0:8@"UIViewController"16@"<TVPMediaItem>"24@?<v@?@"NSArray">32
B32@0:8@"UIViewController"16@"<TVPMediaItem>"24
v40@0:8@"UIViewController"16@"<TVPMediaItem>"24@?<v@?@"UIViewController">32
v48@0:8@"UIViewController"16@"UIViewController"24@"<TVPMediaItem>"32N^{CGRect={CGPoint=dd}{CGSize=dd}}40
v24@0:8@"UIViewController"16
q24@0:8@"UIViewController"16
v24@0:8@"TVPPlaybackViewController"16
v24@0:8Q16
@"<TVPMediaItem>"
@"MPModelLibraryResponse"
@"NSHashTable"
@"TVMusicTimedLyricsViewController"
@40@0:8q16@24@32
@"TVMusicAgeGateInfo"
@"UIVisualEffectView"
@"NSMapTable"
@"NSMutableIndexSet"
@"NSNumber"
Q24@0:8q16
{CGRect={CGPoint=dd}{CGSize=dd}}16@0:8
{CGRect="origin"{CGPoint="x"d"y"d}"size"{CGSize="width"d"height"d}}
@44@0:8@16{CGSize=dd}24B40
{CGRect={CGPoint=dd}{CGSize=dd}}56@0:8{CGRect={CGPoint=dd}{CGSize=dd}}16q48
v40@0:8@16Q24Q32
v32@0:8@16Q24
v40@0:8@"_UIFloatingContentView"16Q24Q32
v32@0:8@"_UIFloatingContentView"16Q24
@32@0:8q16@24
@32@0:8d16d24
@"TVMusicBarsView"
@"TVMusicSocialBadge"
@"MPIdentifierSet"
@"_UIFloatingContentView"
v52@0:8@16@24B32@36@?44
@40@0:8@16@24Q32
@48@0:8@16Q24q32Q40
@36@0:8@16@24B32
v40@0:8@16q24@32
v40@0:8@"IKServiceRequest"16q24@"NSDictionary"32
@"NSDictionary"
@"MPSectionedCollection"
v40@0:8@16{CGSize=dd}24
@"MPArtworkCatalog"
@56@0:8{CGRect={CGPoint=dd}{CGSize=dd}}16@48
{?="_respondsToDidPlayItem"b1"_respondsToDidLongPressItem"b1"_respondsToCanBecomeFocused"b1}
@32@0:8@16B24B28
@24@0:8Q16
v40@0:8@16q24q32
v48@0:8@16d24@32q40
v80@0:8@16{?=dddddffBB}24
v32@0:8@"TVMusicPlayQueue"16@"NSArray"24
v32@0:8@"TVMusicPlayQueue"16@"<TVPMediaItem>"24
v40@0:8@"TVMusicPlayQueue"16q24q32
v48@0:8@"TVMusicPlayQueue"16d24@"<TVPMediaItem>"32q40
v32@0:8@"TVMusicPlayQueue"16@"UIView<MPCVideoView>"24
v80@0:8@"TVMusicPlayQueue"16{?=dddddffBB}24
v24@0:8@"MPCPlaybackEngine"16
v32@0:8@"MPCPlaybackEngine"16@"NSError"24
v32@0:8@"MPCPlaybackEngine"16@?<v@?B@"NSError">24
v40@0:8@"MPCPlaybackEngine"16@"NSError"24@?<v@?B>32
v40@0:8@"MPCPlaybackEngine"16@"MPAVItem"24@"NSError"32
v40@0:8@"MPCPlaybackEngine"16@"MPAVItem"24@?<v@?B@"NSError">32
v48@0:8@"MPCPlaybackEngine"16@"MPAVItem"24q32@?<v@?B@"NSError">40
v32@0:8@16q24
v32@0:8@"MPCPlaybackEngine"16Q24
v40@0:8@"MPCPlaybackEngine"16@"MPAVItem"24@"MPAVItem"32
v32@0:8@"MPCPlaybackEngine"16@"MPAVItem"24
v32@0:8@"MPCPlaybackEngine"16@"MPPlaybackContext"24
v40@0:8@"MPCPlaybackEngine"16@"MPPlaybackContext"24@"NSError"32
v32@0:8@"MPCPlaybackEngine"16@"NSString"24
v32@0:8@"MPCPlaybackEngine"16q24
v28@0:8d16B24
v48@0:8d16{?=qiIq}24
v52@0:8d16{?=qiIq}24B48
@24@0:8@?16
v32@0:8Q16@24
@24@0:8@"NSString"16
v32@0:8q16@"NSString"24
@24@0:8@?<v@?d@"NSDate"dB>16
@32@0:8@"NSArray"16@?<v@?B>24
v28@0:8@"TVPSubtitleOption"16B24
@"<TVPPlaybackDelegate>"16@0:8
v24@0:8@"<TVPPlaybackDelegate>"16
@"<TVPASyncPlaybackDelegate>"16@0:8
v24@0:8@"<TVPASyncPlaybackDelegate>"16
@"TVPPlaylist"16@0:8
v24@0:8@"TVPPlaylist"16
@"NSObject<TVPMediaItem>"16@0:8
v24@0:8@"NSObject<TVPMediaItem>"16
@"TVPPlaybackState"16@0:8
@"NSDate"16@0:8
v24@0:8@"NSDate"16
@"NSArray"16@0:8
@"TVPChapterCollection"16@0:8
v24@0:8@"TVPChapterCollection"16
@"TVPChapter"16@0:8
@"TVPInterstitial"16@0:8
@"TVPTimeRange"16@0:8
@"TVPDateRange"16@0:8
@"TVPAudioOption"16@0:8
v24@0:8@"TVPAudioOption"16
@"TVPSubtitleOption"16@0:8
v24@0:8@"TVPSubtitleOption"16
v32@0:8Q16@"NSString"24
v40@0:8d16@24@?32
v24@0:8@"TVPVideoView"16
@"AVPlayer"16@0:8
v40@0:8d16@"NSDate"24@?<v@?B@"NSNumber"@"NSDate">32
@32@0:8@16d24
v40@0:8^@16^@24@32
@"TVPChapterCollection"
@"<TVPASyncPlaybackDelegate>"
@"TVPSubtitleOption"
@"TVPInterstitial"
@"TVPAudioOption"
@"NSDate"
@"TVPChapter"
@"TVMusicPlayQueue"
@"MPCPlaybackEngine"
@"AVPlayer"
@"TVPPlaybackState"
@"TVPTimeRange"
@"MPAVItem"
@"AVPlayerItem"
@"UIView<MPCVideoView>"
d32@0:8d16d24
q32@0:8@16@24
v40@0:8@16@24q32
d32@0:8@16q24
v40@0:8@"UITableView"16@"UITableViewCell"24@"NSIndexPath"32
v40@0:8@"UITableView"16@"UIView"24q32
d32@0:8@"UITableView"16@"NSIndexPath"24
d32@0:8@"UITableView"16q24
@"UIView"32@0:8@"UITableView"16q24
q32@0:8@"UITableView"16@"NSIndexPath"24
v32@0:8@"UITableView"16@"NSIndexPath"24
B32@0:8@"UITableView"16@"NSIndexPath"24
@"NSIndexPath"32@0:8@"UITableView"16@"NSIndexPath"24
@"NSString"32@0:8@"UITableView"16@"NSIndexPath"24
@"NSArray"32@0:8@"UITableView"16@"NSIndexPath"24
@"UISwipeActionsConfiguration"32@0:8@"UITableView"16@"NSIndexPath"24
@"NSIndexPath"40@0:8@"UITableView"16@"NSIndexPath"24@"NSIndexPath"32
B48@0:8@"UITableView"16:24@"NSIndexPath"32@40
v48@0:8@"UITableView"16:24@"NSIndexPath"32@40
B32@0:8@"UITableView"16@"UITableViewFocusUpdateContext"24
v40@0:8@"UITableView"16@"UITableViewFocusUpdateContext"24@"UIFocusAnimationCoordinator"32
@"NSIndexPath"24@0:8@"UITableView"16
B40@0:8@"UITableView"16@"NSIndexPath"24@"<UISpringLoadedInteractionContext>"32
v24@0:8@"UITableView"16
@"UIContextMenuConfiguration"48@0:8@"UITableView"16@"NSIndexPath"24{CGPoint=dd}32
@"UITargetedPreview"32@0:8@"UITableView"16@"UIContextMenuConfiguration"24
v40@0:8@"UITableView"16@"UIContextMenuConfiguration"24@"<UIContextMenuInteractionCommitAnimating>"32
v32@0:8@"UITableView"16@"<UIContextMenuInteractionCommitAnimating>"24
v32@0:8@"TVTableView"16@"NSIndexPath"24
B32@0:8@"TVTableView"16@"NSIndexPath"24
v40@0:8@16B24B28@?32
{CGRect={CGPoint=dd}{CGSize=dd}}48@0:8{CGRect={CGPoint=dd}{CGSize=dd}}16
{UIEdgeInsets=dddd}16@0:8
v48@0:8{UIEdgeInsets=dddd}16
@"TVFocusRedirectView"
@"UIViewController"
{UIEdgeInsets="top"d"left"d"bottom"d"right"d}
Q24@0:8@16
v40@0:8@"TVCKPushNotificationServer"16@"NSString"24@"NSDictionary"32
v24@0:8@"TVCKPushNotificationServer"16
v56@0:8@16q24@32@40@48
v48@0:8@16{_NSRange=QQ}24@40
v56@0:8@16@24{_NSRange=QQ}32@48
v40@0:8@"NSArray"16@"NSDictionary"24@"JSValue"32
v40@0:8@"NSDictionary"16@"NSDictionary"24@"JSValue"32
v24@0:8@"JSValue"16
v32@0:8@"NSString"16@"JSValue"24
v32@0:8@"NSArray"16@"JSValue"24
v40@0:8@"NSString"16@"NSString"24@"JSValue"32
v56@0:8@"NSArray"16q24@"JSValue"32@"NSDictionary"40@"JSValue"48
v48@0:8@"NSString"16@"NSString"24@"NSDictionary"32@"JSValue"40
B24@0:8@"NSDictionary"16
v48@0:8@"NSDictionary"16{_NSRange=QQ}24@"JSValue"40
v56@0:8@"NSString"16@"NSDictionary"24{_NSRange=QQ}32@"JSValue"48
v32@0:8@"NSDictionary"16@"JSValue"24
v24@0:8@"NSString"16
B28@0:8@16B24
@32@0:8@16Q24
@"NSArray"32@0:8@"UICollectionView"16Q24
v32@0:8@"UICollectionView"16@"NSArray"24
@"TVMusicLibraryHeaderView"
@"<MPLazySectionedCollectionDataSource>"
d24@0:8@"<UIViewControllerContextTransitioning>"16
v24@0:8@"<UIViewControllerContextTransitioning>"16
@"<UIViewImplicitlyAnimating>"24@0:8@"<UIViewControllerContextTransitioning>"16
d24@0:8d16
v44@0:8d16d24d32B40
v32@0:8d16d24
@"<TVPMediaItemReportingDelegate>"16@0:8
@"NSURL"16@0:8
B24@0:8@"NSObject<TVPMediaItem>"16
B24@0:8@"NSString"16
v32@0:8@16@"NSString"24
v24@0:8@?<v@?>16
v24@0:8@?<v@?B@"NSError">16
v24@0:8@"TVPSecureKeyRequest"16
B24@0:8@"TVPResourceLoadingRequest"16
@"NSError"24@0:8@"NSError"16
B24@0:8@"NSError"16
@"TVPBaseMediaItem"
@"TVCKMutableBookmark"
@"NSTimer"
@"_TVImageLoaderQueue"
@"CALayer"
@"UIGestureRecognizer"
v24@0:8@"CAAnimation"16
v28@0:8@"CAAnimation"16B24
@"NSObject<OS_dispatch_group>"
B40@0:8Q16@24Q32
B32@0:8@16Q24
v36@0:8@16B24Q28
v40@0:8@16@24Q32
v48@0:8Q16@24@32Q40
v40@0:8Q16@24Q32
v36@0:8@16@24B32
v68@0:8@16@24B32@36@44@52Q60
v44@0:8@16Q24Q32B40
v32@0:8Q16@?24
v44@0:8@16@24B32Q36
B24@0:8Q16
@40@0:8q16@24@?32
v48@0:8@16{CGSize=dd}24@?40
@"_TVMusicHUDWindow"
v28@0:8@"UISystemInputViewController"16B24
v24@0:8@"UISystemInputViewController"16
@"_TVTextEntryTextField"
@"<TVTextEntryControllerDelegate>"
@"UISystemInputViewController"
@"UIButton"
@36@0:8@16B24@28
@36@0:8@16B24Q28
@"MPCPlaybackIntent"
@"UIWindow"
{CGRect={CGPoint=dd}{CGSize=dd}}56@0:8{CGRect={CGPoint=dd}{CGSize=dd}}16@48
v56@0:8@16q24@32@40@?48
v48@0:8@16{_NSRange=QQ}24@?40
v64@0:8@16@24{_NSRange=QQ}32@?48@?56
@48@0:8@16@24{_NSRange=QQ}32
@48@0:8@16q24@32@40
v36@0:8@"UINavigationController"16@"UIViewController"24B32
Q24@0:8@"UINavigationController"16
q24@0:8@"UINavigationController"16
@"<UIViewControllerInteractiveTransitioning>"32@0:8@"UINavigationController"16@"<UIViewControllerAnimatedTransitioning>"24
@"<UIViewControllerAnimatedTransitioning>"48@0:8@"UINavigationController"16q24@"UIViewController"32@"UIViewController"40
@"<UINavigationControllerDelegate>"
q24@0:8Q16
@40@0:8@16{CGSize=dd}24
@"TVMusicParadeViewController"
q40@0:8@16@24q32
@"TVInteractionGestureRecognizer"
@36@0:8@16B24@?28
@24@0:8d16
q24@0:8d16
v32@0:8d16@24
@40@0:8@16@24d32
B48@0:8@16q24d32d40
B32@0:8@16d24
d24@0:8q16
d32@0:8q16B24B28
d24@0:8@?16
d32@0:8@?16@?24
@"NSObject<TVMusicTimedLyricsViewControllerDelegate>"
@"MSVLyricsSongInfo"
@"CADisplayLink"
@"TVMusicPlaceholderCountdownLabel"
@"TVMusicTimestampLabel"
@"UISpringTimingParameters"
@"NSMutableSet"
@"TVMusicLyricsLineLabel"
@"<TVMusicAirplayDetectorDelegate>"
Uninitialized
Waiting
Syncing
Showing menu
Update
Sync started
Sync complete
Library initializing
com.apple.TVMusic
TVMusicCloudViewController
-[TVMusicCloudViewController init]
My Music view controller
-[TVMusicCloudViewController viewDidLoad]
-[TVMusicCloudViewController viewWillAppear:]
-[TVMusicCloudViewController viewDidDisappear:]
-[TVMusicCloudViewController _showCloudProgressView]
ICloudLibraryLoadingMessage
-[TVMusicCloudViewController _removeCloudProgressView]
-[TVMusicCloudViewController _showNoMusicView]
MusicLibraryNoMusicMessage
-[TVMusicCloudViewController _removeNoMusicView]
#T:[%@%p] #Notice #%@ : Cloud music library is available and has been synced. Set screensaver preferences.. 
Main:
-[TVMusicCloudViewController _removeTopMenu]
-[TVMusicCloudViewController _showWaitingView]
v8@?0
-[TVMusicCloudViewController _removeWaitingView]
-[TVMusicCloudViewController _showSyncingView]
@"NSString"40@?0@"TVSStateMachine"8@"NSString"16@24@"NSDictionary"32
Reload
Show
-[TVMusicCloudViewController _handleLibraryState:]
-[TVMusicCloudViewController _libraryDidUpdate:]
stateMachine
T@"TVSStateMachine",&,N,V_stateMachine
topMenuViewController
T@"TVMusicLibraryTopMenuViewController",&,N,V_topMenuViewController
cloudProgressView
T@"TVMusicCloudProgressView",&,N,V_cloudProgressView
activityIndicatorView
T@"UIActivityIndicatorView",&,N,V_activityIndicatorView
noMusicView
T@"UIView",&,N,V_noMusicView
currentDisplayedView
T@"UIView",W,N,V_currentDisplayedView
libraryManager
T@"TVMusicLibraryManager",&,N,V_libraryManager
viewVisible
TB,N,GisViewVisible,V_viewVisible
v16@?0@"NSDictionary"8
v24@?0@"MPModelLibraryResponse"8@"NSError"16
name
artworkClientData
trackCount
description
command
v24@?0@"MPModelPlaylistEntry"8q16
v16@?0@"TVPMusicContextMenuData"8
data-persistent-id
data-content-index
v16@?0@"MPModelLibraryResponse"8
shuffle
more-menu
playlist
T@"MPModelPlaylist",&,N,V_playlist
TVMusicJSPlaylistDetailViewController
TVMusicLibraryManagerStateChangedNotification
TVMusicLibraryManagerSyncProgressNotification
TVMusicLibraryManagerLibraryUpdatedNotification
TVMusicLibraryManagerLibrarySwitchedNotification
v16@?0@"ICStoreRequestContext"8
v24@?0@"ICMusicSubscriptionStatusResponse"8@"NSError"16
v12@?0f8
v12@?0B8
Initializing
Synced
Unknown
Has Cloud Library
No Cloud Library
-[TVMusicLibraryManager _subscriptionStatusDidChange:]
-[TVMusicLibraryManager _libraryPathDidChange:]_block_invoke
-[TVMusicLibraryManager _libraryDidChange:]_block_invoke
-[TVMusicLibraryManager _updateInProgressDidChange:]
-[TVMusicLibraryManager _updateInProgressDidChange:]_block_invoke
sharedInstance
T@"TVMusicLibraryManager",R
state
Tq,N,V_state
cloudStatus
Tq,N,V_cloudStatus
mpCloudController
T@"MPCloudController",R,N
icMusicSubscriptionStatus
T@"ICMusicSubscriptionStatus",&,N,V_icMusicSubscriptionStatus
isFusePurchased
TB,N,V_isFusePurchased
isSagaPurchased
TB,N,V_isSagaPurchased
syncProgress
Td,N,V_syncProgress
libraryHasContent
TB,R,N
TVMusicLibraryManager
TVMusic
#T:[%@%p] #Warning #%@ : No context menu items supplied for menu with heading "%@" -- context menu will not be shown. 
v16@?0@"UIAlertAction"8
TVMusicJSAppController
itms_subscriptions
itms
itml-app-urls
subscription-mgmt
https://apps.mzstatic.com/content/atv-subscription-mgmt-app/
hash
TQ,R
superclass
T#,R
T@"NSString",R,C
debugDescription
applicationURL
T@"NSURL",&,N,V_applicationURL
appController
T@"TVApplicationController",&,N,V_appController
v24@?0@"MPModelResponse"8@"NSError"16
YYYY-MM-dd
artistName
genreNames
persistentID
releaseDate
music-library-id
v16@?0@"MPIdentifierSet"8
album
T@"MPModelAlbum",&,N,V_album
filterObject
T@"MPModelObject",&,N,V_filterObject
TVMusicJSAlbumDetailViewController
GenresCellIdentifier
MusicLibraryGenres
v16@?0@"NSIndexPath"8
delegate
T@"<TVTableViewDelegate>",W,D,N
indexPathForLastFocusedItem
T@"NSIndexPath",R,C,N,V_indexPathForLastFocusedItem
WrittenBy
v24@?0@"MSVLyricsSongInfo"8@"NSError"16
v24@?0@"MPModelSong"8@"NSError"16
ExplicitLyricsErrorTitle
ExplicitLyricsErrorMessage
LyricsUnvailableErrorTitle
LyricsUnvailableErrorMessage
MusicOK
song
T@"MPModelSong",&,N,V_song
lyricsText
T@"NSAttributedString",C,N,V_lyricsText
lyricsID
T@"NSString",C,N,V_lyricsID
songTitle
T@"NSString",R,N
songArtist
language
T@"NSString",C,N,V_language
PAFFeatureName
T@"NSString",C,N,V_PAFFeatureName
PAFRecommendationData
T@"NSData",&,N,V_PAFRecommendationData
PAFContainerData
T@"MPModelPlayEvent",&,N,V_PAFContainerData
TVMusicLyricsViewController
duration
popularity
explicit
socialBadge
play-icon-when-focused
music-track-type
greyed-out
grayed-out
mediaLibraryClientData
data-content-id
container-type
container-id
v16@?0@"MPModelObject"8
music-video
classical-work
classical-movement
v16@?0@"MPModelPlayEvent"8
playEvent
T@"MPModelPlayEvent",R,N
playbackViewController
T@"TVPPlaybackViewController",&,N,V_playbackViewController
player
T@"<TVPPlayback>",&,N,V_player
visible
TB,N,GisVisible,V_visible
TVMusicRestrictionsUI
ON_LAUNCH_ALERT_TITLE
ON_LAUNCH_ALERT_MESSAGE
ON_CONTAINER_LOAD_ALERT_TITLE
EXPLICIT_CONTENT_DISABLED_ALERT_MESSAGE
ON_CONTAINER_LOAD_ALERT_MESSAGE
ON_PLAY_PASSCODE_SET_ALERT_TITLE
ON_PLAY_PASSCODE_SET_ALERT_MESSAGE
ON_PLAY_ALERT_TITLE
ON_PLAY_ALERT_MESSAGE
ON_PURCHASE_PASSCODE_SET_ALERT_TITLE
ON_PURCHASE_PASSCODE_SET_ALERT_MESSAGE
ON_PURCHASE_ALERT_TITLE
ON_PURCHASE_ALERT_MESSAGE
ON_ADD_TO_LIBRARY_PASSCODE_SET_ALERT_TITLE
ON_ADD_TO_LIBRARY_PASSCODE_SET_ALERT_MESSAGE
ON_ADD_TO_LIBRARY_ALERT_TITLE
ON_ADD_TO_LIBRARY_ALERT_MESSAGE
RESTRICTIONS_BUTTON
NOT_NOW_BUTTON
ALLOW_EXPLICIT_BUTTON
prefs:root=Restrictions
ExplicitOffAndPreferencesDisabled
ExplicitOffAndPreferencesEnabled
v24@?0@"ICURLBag"8@"NSError"16
onLaunch
onContainerLoad
%@.%@
onPlay
onPurchase
onAddToLibrary
CHANGE_ALLOWED_TV_RATING
CHANGE_ALLOWED_MOVIE_RATING
CANT_PLAY_CONTENT_TYPE
CANT_PLAY_DUE_TO_RATING
v16@?0Q8
artworkCatalogs
T@"NSArray",&,N,V_artworkCatalogs
imageOffset
T{CGPoint=dd},N,V_imageOffset
MusicLibrarySeasonTitle
v24@?0@"TVImageView"8@"UIImage"16
EpisodeSongCellIdentifier
v24@?0@"TVMusicSongCell"8@"UIImage"16
B32@?0@"TVPMusicContextMenuDataItem"8Q16^B24
humanDescription
launch
launchTestName
TVMusicAppOpenURLNotification
TVMusicAccountChangedNotification
AppDelegate
v16@?0@"AVAudioSession"8
v32@?0@"NSDictionary"8@"<TVPhotoServerInterface>"16@?<v@?@"NSArray"@"NSError">24
nowplaying
show-now-playing
play
internal
storeID
musicVideo
movie
tvEpisode
tvSeason
type
artworkURL
library
%@://nowplaying
%@://internal/np-launch/?id=%@
v16@?0@"NSNotification"8
v16@?0@"ICStoreDialogResponseButton"8
FuseLostLeaseTitle
FuseLostLeaseMessage
v24@?0@"ACAccount"8@"NSError"16
v24@?0@"ICMusicSubscriptionStatus"8@"NSError"16
subType
music
theApp
T@"TVMusicAppDelegate",R,N
isAppActive
lyricsReportingController
T@"MPCLyricsReportingController",&,N,V_lyricsReportingController
subscriptionsAppController
T@"TVMusicJSAppController",&,N,V_subscriptionsAppController
itmsJSObject
T@"IKJSObject",&,N,V_itmsJSObject
tvmJSObject
T@"TVMusicJSObject",R,N
appViewVisible
TB,N,GisAppViewVisible,V_appViewVisible
performWhenVisibleBlock
T@?,C,N,V_performWhenVisibleBlock
activeAccountIdentifier
T@"NSString",C,N,V_activeAccountIdentifier
T@"TVMusicPlayer",R,N
navigationController
T@"UINavigationController",R,N
v28@?0@"TVImage"8@"NSError"16B24
completion
T@?,C,N,V_completion
imageLoaded
TB,N,GisImageLoaded,V_imageLoaded
_tintColor
T@"UIColor",&,N,S_setTintColor:,V__tintColor
_focusedColor
T@"UIColor",&,N,S_setFocusedColor:,V__focusedColor
_enableEdgeAntialiasingOnSelected
TB,N,S_setEnableEdgeAntialiasingOnSelected:,V__enableEdgeAntialiasingOnSelected
_edgeAntialiasingOnSelectedRestrictedToLeftRightEdge
TB,N,S_setEdgeAntialiasingOnSelectedRestrictedToLeftRightEdge:,V__edgeAntialiasingOnSelectedRestrictedToLeftRightEdge
image
T@"UIImage",&,N
placeholderImage
T@"UIImage",&,N,V_placeholderImage
cornerRadius
Td,N
imageProxy
T@"TVImageProxy",&,N,V_imageProxy
MusicLibraryNoMusicTitle
containerView
T@"UIView",&,N,V_containerView
titleLabel
T@"UILabel",&,N,V_titleLabel
messageLabel
T@"UILabel",&,N,V_messageLabel
message
T@"NSString",&,N,V_message
headingLabel
T@"UILabel",&,N,V_headingLabel
headerText
T@"NSString",&,N,V_headerText
fallback_library
T@"TVMusicPlayer",&,N,V_player
playbackStatusController
T@"TVMusicPlaybackStatusController",&,N,V_playbackStatusController
badgeView
T@"UIView",&,N,V_badgeView
placeholderAssetType
Tq,N,V_placeholderAssetType
v16@?0@"<UIViewControllerTransitionCoordinatorContext>"8
dimmingView
T@"UIView",&,N,V_dimmingView
com.apple.TVMusic.TVMusicAddToPlaylistViewController
AddToPlaylistMessage
AddToPlaylistOK
AddToPlaylistCancel
v16@?0@"NSError"8
HUDConfirmationAddedVideosToPlaylistMessage
HUDConfirmationAddedItemsToPlaylistMessage
HUDConfirmationAddedSongsToPlaylistMessage
HUDConfirmationAddedToPlaylistTitle
NotificationsAddToPlaylist
v24@?0@"NSArray"8@"NSError"16
NewPlaylist
v16@?0@"NSString"8
v32@?0@"MPModelPlaylist"8@"NSIndexPath"16^B24
AddToAPlaylist
v16@?0@"MPModelPlaylist"8
v24@?0@"NSError"8@"MPModelPlaylist"16
#T:[%@%p] #Warning #%@ : Error adding item [%@]: %@ 
PLAYLIST_ADD_BEHAVIOR_ALERT_TITLE_SINGULAR
PLAYLIST_ADD_BEHAVIOR_ALERT_TITLE_PLURAL
PLAYLIST_ADD_BEHAVIOR_ALERT_MESSAGE
PLAYLIST_ADD_BEHAVIOR_ADD_BUTTON
PLAYLIST_ADD_BEHAVIOR_DONT_ADD_BUTTON
actionTitleLabel
T@"UILabel",&,N,V_actionTitleLabel
actionScrollView
T@"UIScrollView",&,N,V_actionScrollView
actionGroupView
T@"TVMusicAddToPlaylistActionGroupView",&,N,V_actionGroupView
spinner
T@"UIActivityIndicatorView",&,N,V_spinner
mpRequest
T@"MPModelLibraryRequest",&,N,V_mpRequest
folderPlaylist
T@"MPModelPlaylist",&,N,V_folderPlaylist
objectToAdd
T@"MPModelGenericObject",&,N,V_objectToAdd
collectionTracks
T@"NSArray",&,N,V_collectionTracks
PlaylistNameHeading
CreatePlaylistButton
completionBlock
T@?,C,N,V_completionBlock
hidePresentingView
TB,N,V_hidePresentingView
Movie: "%@"
T@"MPModelMovie",R,N
PlaylistSongCell
SongsCount
MusicLibraryEmptyPlaylist
v24@?0@"UIImageView"8@"UIImage"16
mpResponse
T@"MPModelResponse",&,N,V_mpResponse
imageViews
T@"NSArray",C,N,V_imageViews
minimumInteritemSpacing
Td,N,V_minimumInteritemSpacing
-[MPSectionedCollection(TVMusic) tvm_enumerateSectionsUsingBlock:]_block_invoke
v32@?0@8q16^B24
-[MPSectionedCollection(TVMusic) tvm_enumerateItemsInSectionAtIndex:usingBlock:]_block_invoke
-[MPSectionedCollection(TVMusic) tvm_enumerateItemsUsingBlock:]_block_invoke
v32@?0@8@"NSIndexPath"16^B24
rightStackView
T@"UIStackView",&,N,V_rightStackView
topFocusGuide
T@"UIFocusGuide",&,N,V_topFocusGuide
leadingFocusGuide
T@"UIFocusGuide",&,N,V_leadingFocusGuide
trailingFocusGuide
T@"UIFocusGuide",&,N,V_trailingFocusGuide
stackFocusGuide
T@"UIFocusGuide",&,N,V_stackFocusGuide
T@"TVLabel",R,N,V_titleLabel
subtitleLabel
T@"TVLabel",R,N,V_subtitleLabel
rightViews
T@"NSArray",C,N,V_rightViews
slider
T@"TVNPNowPlayingSliderView",&,N,V_slider
title
T@"NSString",C,N,V_title
value
Tf,N,V_value
defaultValue
Tf,N,V_defaultValue
minValue
Tf,N,V_minValue
maxValue
Tf,N,V_maxValue
UI CONTROL PANEL (Internal builds only)
adjusters
T@"NSArray",&,N,V_adjusters
menuicon_shuffle-mask
MusicLibraryShuffle
menuicon_more-mask
MusicLibraryMore
MusicLibraryPlay
menuicon_play-mask
MusicLibraryGoToArtist
menuicon_artist-mask
icon_gotoshow_mask
MusicLibraryGoToShow
MusicLibraryAllSeasons
%0.2f
minValueIconView
T@"UIImageView",R,N,V_minValueIconView
maxValueIconView
T@"UIImageView",R,N,V_maxValueIconView
thumbView
T@"UIView",R,N,V_thumbView
lastThumbLocation
T{CGPoint=dd},R,N,V_lastThumbLocation
valueLabel
T@"UILabel",R,N,V_valueLabel
minimumValue
Tf,N,V_minimumValue
maximumValue
Tf,N,V_maximumValue
minimumValueImage
T@"UIImage",&,N,V_minimumValueImage
maximumValueImage
T@"UIImage",&,N,V_maximumValueImage
progressBarView
T@"TVNPNowPlayingProgressView",R,N,V_progressBarView
continuous
TB,N,GisContinuous,V_continuous
CurrentlyPlayingTitle
PlayingTitle
Song: "%@" by %@
T@"MPModelSong",R,N
unknownItemType
TB,N,GisUnknownItemType,V_unknownItemType
unknownItemDescription
T@"NSString",C,N,V_unknownItemDescription
containerGuide
T@"UIFocusContainerGuide",R,N,V_containerGuide
musicRadioCard
musicCard
musicInfoCard
musicMiniCard
musicShowCard
musicPostcard
musicArtistInfoCard
musicAboutCard
musicSongLockup
musicListSongLockup
userProfileBanner
playlistImg
artistTemplate
MusicArtistStyleSheet
MyMusic
Library
NowPlaying
MusicStackStyleSheet
MusicSearchStyleSheet
MusicProductStyleSheet
MusicProductBundleStyleSheet
MusicVideoProductStyleSheet
musicLibraryClientData
com.apple.TVPlayback
placeholder-album-90-onDark
placeholder-album-378-onDark
placeholder-album-680-onDark
placeholder-artist-90-onDark
placeholder-artist-378-onDark
placeholder-artist-680-onDark
placeholder-video-90-onDark
placeholder-video-378-onDark
placeholder-video-680-onDark
placeholder-purchased-90-onDark
placeholder-purchased-378-onDark
placeholder-purchased-680-onDark
placeholder-smartalbum-90-onDark
placeholder-smartalbum-378-onDark
placeholder-smartalbum-680-onDark
placeholder-genius-90-onDark
placeholder-genius-378-onDark
placeholder-genius-680-onDark
music-folder2-90
music-folder2-378
music-folder2-680
placeholder-video-16x9-onDark
placeholder-album-90-onLight
placeholder-album-378-onLight
placeholder-album-680-onLight
placeholder-artist-round-90-onLight
placeholder-artist-round-378-onLight
placeholder-artist-round-680-onLight
placeholder-video-90-onLight
placeholder-video-378-onLight
placeholder-video-680-onLight
placeholder-purchased-90-onLight
placeholder-purchased-378-onLight
placeholder-purchased-680-onLight
placeholder-smartalbum-90-onLight
placeholder-smartalbum-378-onLight
placeholder-smartalbum-680-onLight
placeholder-genius-90-onLight
placeholder-genius-378-onLight
placeholder-genius-680-onLight
placeholder-video-16x9-onLight
TVMusicAlerts
-[TVMusicSubscriptionManager setSubscriptionStatus:]
T@"TVMusicSubscriptionManager",R
hasMusicSubscription
TB,V_hasMusicSubscription
hasiTunesMatchSubscription
TB,V_hasiTunesMatchSubscription
TVMusicSubscriptionManager
TVMusicLibraryAlbumsViewController
MusicLibraryCompilations
MusicLibraryAlbumsTitle
v16@?0@"UIViewController"8
v16@?0@"MPModelGenericObject"8
playButton
T@"UIControl",&,N,V_playButton
shuffleAllButton
T@"UIControl",&,N,V_shuffleAllButton
genre
T@"MPModelGenre",&,N,V_genre
artist
T@"MPModelArtist",&,N,V_artist
composer
T@"MPModelComposer",&,N,V_composer
MusicLibraryMusicVideosTitle
TVPMusicPlaylistTransitioningWillBeginNotification
TVPMusicPlaylistTransitioningWillFinishNotification
TVPMusicPlaylistTransitioningAnimationTypeUserInfoKey
TVMusicPlayQueueChangedNotification
TVMusicPlayQueueErrorDomain
TVMusicPlayQueueWillAddToQueueNotification
TVMusicPlayQueueWillAddToQueueNotificationUserInfoKeyPlayNext
TVMusicPlayQueuePlayerPathChangedNotification
TVMusicPlayQueueNewTracklistNotification
Music
com.apple.TVMusic.TVMusicPlayQueue.invalidation
v16@?0@"MPAVRoute"8
-[TVMusicPlayQueue moveItemAtIndexToPlayNext:]
move item
-[TVMusicPlayQueue updatePlayerPath]
end seek
pause
stop
fast-forward
rewind
nextItem
previousItem
-[TVMusicPlayQueue changeToItemAtIndex:]
-[TVMusicPlayQueue setShuffleEnabled:preserveCurrentItem:]
shuffleEnabled
-[TVMusicPlayQueue setRepeatMode:]
repeatMode
-[TVMusicPlayQueue replacePlayQueueWithPlaybackIntent:completionHandler:]
v24@?0@"MPCPlayerResponse"8@"NSError"16
-[TVMusicPlayQueue clearPlayQueueWithCompletionHandler:]
-[TVMusicPlayQueue addToPlayQueueWithPlaybackIntent:playNext:]
v32@?0@"MPCPlayerResponseItem"8@"NSIndexPath"16^B24
v32@?0@"MPCPlayerResponseItem"8q16^B24
v32@?0@"MPCPlayerResponseSection"8q16^B24
-[TVMusicPlayQueue controller:shouldRetryFailedRequestWithError:]
-[TVMusicPlayQueue airplayDetectorAirplayStarted:]
-[TVMusicPlayQueue airplayDetectorAirplayEnded:]
com.apple.TVMusic.PlayQueue
<missing queue identifier>
MPCPlayerStateUnknown
MPCPlayerStateStopped
MPCPlayerStatePlaying
MPCPlayerStatePaused
MPCPlayerStateSeeking
MPCPlayerStateInterrupted
Invalid command: %ld
-[TVMusicPlayQueue _applicationDidBecomeActive:]
-[TVMusicPlayQueue _repeatModeSettingDidChange:]
-[TVMusicPlayQueue _activeSystemRouteDidChange:]
-[TVMusicPlayQueue _libraryWasUpdated:]
transitioningPlaylist
TB,R,N,GisTransitioningPlaylist
pendingElapsedTime
Td,N,V_pendingElapsedTime
pendingElapsedTimeChange
TB,N,GisPendingElapsedTimeChange,V_pendingElapsedTimeChange
requestResponseController
T@"MPRequestResponseController",&,N,V_requestResponseController
playerResponse
T@"MPCPlayerResponse",&,N,V_playerResponse
mediaItems
T@"NSArray",&,N,V_mediaItems
isUpdating
TB,N,V_isUpdating
lastPlayingItem
T@"MPCPlayerResponseItem",&,N,V_lastPlayingItem
durationSnapshot
T{?=dddddffBB},N,V_durationSnapshot
isRadioPlayback
TB,N,V_isRadioPlayback
radioStationName
T@"NSString",&,N,V_radioStationName
isVideoPlayback
TB,N,V_isVideoPlayback
externalEndpointsAvailable
TB,V_externalEndpointsAvailable
supportsShuffle
TB,N,V_supportsShuffle
supportsRepeat
TB,N,V_supportsRepeat
previousPlayerResponse
T@"MPCPlayerResponse",&,N,V_previousPlayerResponse
TB,N,GisTransitioningPlaylist,V_transitioningPlaylist
isAirplayActive
TB,N,V_isAirplayActive
tracklistIdentifier
T@"NSString",&,N,V_tracklistIdentifier
T@"NSObject<TVMusicPlayQueueDelegate>",W,N,V_delegate
lastPlayerResponse
T@"MPCPlayerResponse",R,N
currentPlayingItem
T@"MPCPlayerResponseItem",R,N
audioRouteName
isLocalDeviceQueue
isMusicAppQueue
playerState
Tq,R,N
currentPlayingElapsedTime
Td,R,N
currentPlayingDuration
audioRoute
T@"MPAVRoute",&,N
isInvalidRouteError
TVMusicPlayQueue
TVMusicLibraryWillAddItemNotification
TVMusicLibraryWillAddItemNotificationUserInfoKeyAdamID
TVMusicLibraryWillAddGlobalPlaylistNotification
TVMusicLibraryDidAddItemNotification
TVMusicLibraryDidRemoveItemNotification
TVMusicLibraryUtilsErrorDomain
@24@?0@"MPMediaEntity"8Q16
identifiers
playlistGlobalID
v32@?0@"MPModelSong"8@"NSIndexPath"16^B24
sagaIDs
v32@?0@"MPModelPlaylistEntry"8q16^B24
com.apple.TVMusic.TVMusicContextMenuFactory.removeSongFromPlaylist
playlistIdentifiers
v32@?0@"MPModelPlaylistEntry"8@"NSIndexPath"16^B24
childrenIds
children
kind
v16@?0@"MPModelSong"8
v24@?0@"NSDictionary"8@"NSError"16
com.apple.TVMusic.TVMusicLibraryUtilities
v24@?0@"<ICStorePlatformResponse>"8@"NSError"16
com.apple.TVMusic.TVMusicLibraryUtilities.addRemoveQueue
featureName
playlistVersionHash
com.apple.TVMusic.TVMusicCachedLibraryResponse
T@"TVMusicCachedLibraryRequest",R
serialQueue
T@"NSObject<OS_dispatch_queue>",&,N,V_serialQueue
identifierMap
T@"NSMutableDictionary",&,N,V_identifierMap
TVMusicCachedLibraryResponse
T@"TVMusicHUDController",R,N
TVMusicSystemNowPlayingViewControllerDidAppear
TVMusicSystemNowPlayingViewControllerWillDisappear
avPlayer
isVisible
T@"UINavigationController",&,N,V_navigationController
menuGestureRecognizer
T@"UITapGestureRecognizer",&,N,V_menuGestureRecognizer
nowPlayingWallPaper
T@"UIView",&,N,V_nowPlayingWallPaper
TVMusicScreenSaverServiceErrorDomain
TVMusicScreenSaverService
v32@?0@"MPModelAlbum"8@"NSIndexPath"16^B24
v16@?0@"NSArray"8
com.apple.TVMusic.TVMusicScreenSaverService
v16@?0@"UIImage"8
remotePhotoServerInterface
T@"<TVPhotoServerInterface>",&,N,V_remotePhotoServerInterface
syncObserverToken
T@"<NSObject>",&,N,V_syncObserverToken
outlineView
T@"UIView",R,N,V_outlineView
fillView
T@"UIView",R,N,V_fillView
_progressCenter
T{CGPoint=dd},R,N
progress
Tf,N,V_progress
TVMusicPlaylistStyleDefault
v16@?0^{CGContext=}8
Playlist Loader
Playlist
%@_%@
cancelled
TB,GisCancelled,V_cancelled
completionHandler
T@?,C,N,V_completionHandler
imageProxies
T@"NSArray",R,C,N,V_imageProxies
playlistStyle
T@"NSString",R,C,N,V_playlistStyle
scaleToSize
T{CGSize=dd},N,V_scaleToSize
upscaleAdjustment
Td,N,V_upscaleAdjustment
Td,N,V_cornerRadius
TVDurationValueTransformer
minutesFormatter
T@"NSDateComponentsFormatter",&,N,V_minutesFormatter
secondsFormatter
T@"NSDateComponentsFormatter",&,N,V_secondsFormatter
TVMusicCollectionViewMovieCellIdentifier
MusicLibraryTVShows
MusicLibraryMovies
v32@?0@"MPModelTVSeason"8@"NSIndexPath"16^B24
EpisodesCount
tvMoviesSelector
T@"UISegmentedControl",&,N,V_tvMoviesSelector
durationFormatter
T@"NSDateComponentsFormatter",R,N
TVMusicNowPlayingManagerIdleLyricsEnabledKey
playQueue.isRadioPlayback
nowplaying_lyrics
v16@?0@"TVPMusicNowPlayingControlItem"8
now_playing
-[TVMusicNowPlayingManager _musicVideoAddToLibrary:]
v28@?0B8@"NSArray"12@"NSError"20
np-button-add
crossfade
Video
Music Video
Audio
(Unknown)
playbackViewControllers
T@"NSHashTable",R,N,V_playbackViewControllers
musicNowPlayingViewControllers
T@"NSHashTable",R,N,V_musicNowPlayingViewControllers
isShowingMusicVideoFullscreen
TB,N,V_isShowingMusicVideoFullscreen
timedLyricsViewController
T@"TVMusicTimedLyricsViewController",W,N,V_timedLyricsViewController
isNowPlayingVisible
isMusicNowPlayingVisible
TVMusicNowPlayingManager
AgeGatePlayedItems
TVMusicAgeGateController
ratingWarningThreshold
ratingWarningTitle
ratingWarningText
Enabled: %@, threshold: %ld, title: %@, message: %@
isAgeGateEnabled
TB,N,V_isAgeGateEnabled
ratingThreshold
Tq,N,V_ratingThreshold
dialogTitle
T@"NSString",&,N,V_dialogTitle
dialogMessage
T@"NSString",&,N,V_dialogMessage
ContextMenuConfirmCancel
AgeGateDialogContinue
ageGateInfo
T@"TVMusicAgeGateInfo",&,N,V_ageGateInfo
activityText
T@"NSString",C,N,V_activityText
activityIndicatorHidden
TB,N,GisActivityIndicatorHidden,V_activityIndicatorHidden
activityIndicatorDelay
Td,N,V_activityIndicatorDelay
AlbumSongCell
popularityStarThreshold
Standard
Classical (new)
Classical (legacy)
MusicByComposer
%@. %@
%@    
%ld    
tracks
T@"NSArray",&,N,V_tracks
showArtistNames
TB,N,V_showArtistNames
groupByClassicalWorks
indexesOfClassicalWorks
T@"NSMutableIndexSet",&,N,V_indexesOfClassicalWorks
trackDisplayMode
Tq,N,V_trackDisplayMode
popularityThreshold
T@"NSNumber",N,V_popularityThreshold
T@"MPModelGenre",N,V_genre
TVDeckImageViewReadyNotification
cycleInterval
Td,N,V_cycleInterval
transitionDuration
Td,N,V_transitionDuration
newDataTransitionDuration
Td,N,V_newDataTransitionDuration
T@"NSArray",C,N,V_artworkCatalogs
imageFrame
T{CGRect={CGPoint=dd}{CGSize=dd}},N,V_imageFrame
deckViewParadeType
TQ,N,V_deckViewParadeType
social_hidden
%@-blur-%@
overlayImage
T@"UIImage",R,N,V_overlayImage
cachedTextRectForBounds
T{CGRect={CGPoint=dd}{CGSize=dd}},N,V_cachedTextRectForBounds
previousBounds
T{CGRect={CGPoint=dd}{CGSize=dd}},N,V_previousBounds
previousNumberOfLines
Tq,N,V_previousNumberOfLines
cachedSizeThatFits
T{CGSize=dd},N,V_cachedSizeThatFits
previousTargetSize
T{CGSize=dd},N,V_previousTargetSize
icon_play_sm_mask
WatchedCheckmark
popularity-on
popularity-off
musicvideo-badge
floatingView
T@"_UIFloatingContentView",&,N,V_floatingView
cellHeight
ordinalVisible
TB,N,V_ordinalVisible
playIconVisible
TB,N,V_playIconVisible
musicBarsVisible
TB,N,V_musicBarsVisible
playbackItem
T@"MPModelObject",&,N,V_playbackItem
playbackContainer
T@"MPModelObject",&,N,V_playbackContainer
hasThumbnailOverrideFrame
TB,N,V_hasThumbnailOverrideFrame
hasPlaylistOrdinal
songType
Tq,N,V_songType
thumbnail
T@"TVImageProxy",&,N
thumbnailImage
T@"NSString",&,N,V_title
T@"NSString",&,N,V_artist
T@"NSString",&,N,V_album
heading
T@"NSString",&,N,V_heading
Td,N,V_duration
durationString
T@"NSString",&,N,V_durationString
isExplicit
TB,N,V_isExplicit
ordinalValue
TQ,N,V_ordinalValue
hasOrdinal
TB,N,V_hasOrdinal
fullWidthStyle
TB,N,V_fullWidthStyle
T@"NSNumber",&,N,V_popularity
T@"NSNumber",&,N,V_popularityThreshold
showPlayIconWhenFocused
TB,N,V_showPlayIconWhenFocused
enabled
TB,N,V_enabled
focusable
TB,N,V_focusable
thumbnailImageView
T@"TVImageView",R,N
thumbnailSize
T{CGSize=dd},R,N
isWatched
TB,N,V_isWatched
T@"TVMusicSocialBadge",&,N,V_socialBadge
thumbnailOverrideFrame
T{CGRect={CGPoint=dd}{CGSize=dd}},N,V_thumbnailOverrideFrame
socialBadgeOffset
T{CGPoint=dd},N,V_socialBadgeOffset
songIdentifier
T@"MPIdentifierSet",&,N,V_songIdentifier
MusicLibraryPlaylistsTitle
parentPlaylistFolder
T@"MPModelPlaylist",&,N,V_parentPlaylistFolder
TVMusicContextMenuFactory
v16@?0@"TVMusicContextMenuSubject"8
ContextMenuGoToAlbum
v16@?0@"MPModelAlbum"8
ContextMenuRemoveFromPlaylist
v24@?0@"MPModelPlaylist"8@"NSError"16
ContextMenuConfirmDelete
ContextMenuConfirmOK
ContextMenuRemoveFromLibrary
ContextMenuLove
ContextMenuHate
ContextMenuPlayNext
ContextMenuAddToUpNext
ContextMenuAddToLibrary
ContextMenuCreateStation
ContextMenuGoToPlaylist
ContextMenuGoToArtist
ContextMenuAddToPlaylist
ContextMenuLyricsNowPlaying
ContextMenuLyrics
ContextMenuShuffle
ContextMenuGoToTVShow
ContextMenuGoToMovie
UnknownAlbum
v16@?0@"NSMutableArray"8
documentType
documentData
v16@?0@"MPSectionedCollection"8
-[TVMusicJSDocumentViewController serviceRequest:didCompleteWithStatus:errorDictionary:]
-[TVMusicJSDocumentViewController didCompleteDocumentCreationWithStatus:errorDictionary:]
SupportsDocumentCreation
v16@?0@"JSContext"8
contextDictionary
T@"NSDictionary",&,N,V_contextDictionary
identifier
T@"NSString",&,N,V_identifier
visibleOnScreen
TB,N,V_visibleOnScreen
shouldUpdateOnViewDidAppear
TB,N,V_shouldUpdateOnViewDidAppear
updatePending
TB,N,V_updatePending
updateRequests
T@"NSMutableArray",&,N,V_updateRequests
itemObjects
T@"MPSectionedCollection",&,N,V_itemObjects
representedObject
T@"MPModelGenericObject",R,N
TVMusicDocumentController
v24@?0@"TVMusicLibraryCollectionViewCell"8@"UIImage"16
imageView
T@"UIImageView",&,N,V_imageView
placeholderImageView
T@"UIImageView",&,N,V_placeholderImageView
showImage
TB,N,V_showImage
imageShape
Tq,N,V_imageShape
subTitle
T@"NSString",&,N,V_subTitle
maximumImageHeight
Td,N,V_maximumImageHeight
greyedOut
TB,N,GisGreyedOut,V_greyedOut
artworkCatalog
T@"MPArtworkCatalog",&,N,V_artworkCatalog
ComposersCellIdentifier
MusicLibraryComposers
TVSStateMachine
CLOUD
TVCollectionViewDidScrollNotification
overlayLayoutView
T@"UIView",R,N,V_overlayLayoutView
T@"<TVCollectionViewDelegate>",W,D,N
TVMusicPlayerLeaseDidEndNotification
TVMusicPlaybackContainerChangedNotification
TVMusicPlayerErrorNotificationGenericObjectKey
TVMusicPlayerStoreDialogResponseKey
-[TVMusicPlayer initWithAgeGateInfo:]
com.apple.TVMusicPlayer._mediaItemObservationQueue
videoView.playerLayer.player
videoView.playerLayer.player.currentItem
-[TVMusicPlayer dealloc]
playerItem.loadedTimeRanges
-[TVMusicPlayer setFallbackPlaybackIntent:]
-[TVMusicPlayer addElapsedTimeObserver:]
-[TVMusicPlayer removeElapsedTimeObserverWithToken:]
-[TVMusicPlayer pause]
-[TVMusicPlayer scanWithRate:]
-[TVMusicPlayer togglePlayPause]
-[TVMusicPlayer play]
-[TVMusicPlayer stop]
-[TVMusicPlayer stopAndClearPlayQueue:]
-[TVMusicPlayer setIsStopped:]
-[TVMusicPlayer _setCurrentState:]
-[TVMusicPlayer _setCurrentMediaItem:]
-[TVMusicPlayer changeMediaInDirection:]
-[TVMusicPlayer addBoundaryTimeObserverForTimes:withHandler:]
-[TVMusicPlayer addBoundaryTimeObserverForDates:withHandler:]
-[TVMusicPlayer setWaitsAfterPreparingMediaItems:]
waitsAfterPreparingMediaItems
-[TVMusicPlayer playIgnoringDelegate:]
-[TVMusicPlayer pauseIgnoringDelegate:]
-[TVMusicPlayer pauseWithVolumeRampDuration:]
-[TVMusicPlayer stopWithVolumeRampDuration:]
-[TVMusicPlayer continueLoadingCurrentItem]
-[TVMusicPlayer addWeakReferenceToVideoView:]
-[TVMusicPlayer removeWeakReferenceToVideoView:]
-[TVMusicPlayer invalidate]
-[TVMusicPlayer setSelectedSubtitleOption:]
-[TVMusicPlayer setSelectedSubtitleOption:setGlobalPreference:]
-[TVMusicPlayer playQueue:didUpdateQueue:]
-[TVMusicPlayer playQueue:didChangePlayingItem:]
-[TVMusicPlayer setCurrentAVItem:]
-[TVMusicPlayer playQueue:didChangeVideoView:]
-[TVMusicPlayer engineDidPauseForLeaseEnd:]
-[TVMusicPlayer engine:didPauseForLeaseEndWithError:]
-[TVMusicPlayer engine:didFailToPlayItem:withError:]
-[TVMusicPlayer engine:didFailToPlayFirstItem:withError:]
MPAVControllerErrorUserInfoKeyAlertTitle
dialog
v20@?0B8@"NSError"12
-[TVMusicPlayer engine:requiresAuthorizationToPlayItem:reason:authorizationHandler:]
v16@?0@"MPModelMovie"8
v16@?0@"MPModelTVEpisode"8
-[TVMusicPlayer _itemReadyToPlay:]_block_invoke
localPlayback
-[TVMusicPlayer _avPlayerItemDidChange:]
T@"<TVPPlaybackDelegate>",W,N
asyncDelegate
T@"<TVPASyncPlaybackDelegate>",W,N
T@"TVPPlaylist",&,N
currentMediaItem
T@"NSObject<TVPMediaItem>",&,N
currentMediaItemPreparedForLoading
currentMediaItemInitialLoadingComplete
currentMediaItemHasVideoContent
currentMediaItemIsStreaming
currentMediaItemPresentationSize
currentMediaItemHasDates
T@"TVPPlaybackState",R,N
errorBehavior
Tq,N
interactive
TB,N
rate
rateUsedForPlayback
elapsedTime
playbackDate
T@"NSDate",C,N
isLive
muted
volume
Tf,N
chapterCollections
T@"NSArray",R,N
currentChapterCollection
T@"TVPChapterCollection",&,N
currentChapter
T@"TVPChapter",R,N
currentInterstitial
T@"TVPInterstitial",R,N
bufferedTimeRange
T@"TVPTimeRange",R,N
seekableTimeRange
seekableDateRange
T@"TVPDateRange",R,N
forwardPlaybackEndTime
reversePlaybackEndTime
mediaItemEndAction
audioOptions
selectedAudioOption
T@"TVPAudioOption",&,N
subtitleOptions
selectedSubtitleOption
T@"TVPSubtitleOption",&,N
maximumBitRate
preventsSleepDuringVideoPlayback
updatesMediaRemoteInfoAutomatically
limitReadAhead
T@"AVPlayer",R,N
playQueue
T@"TVMusicPlayQueue",&,N,V_playQueue
playbackEngine
T@"MPCPlaybackEngine",&,N,V_playbackEngine
T@"NSString",C,N,V_name
elapsedTimeObservers
T@"NSMutableArray",&,N,V_elapsedTimeObservers
T@"AVPlayer",&,N,V_avPlayer
elapsedTimeJumpInProgress
TB,N,V_elapsedTimeJumpInProgress
targetElapsedTime
Td,N,V_targetElapsedTime
T@"TVPPlaybackState",&,N,V_state
TB,N,VcurrentMediaItemInitialLoadingComplete
TB,N,V_isLive
isLoading
TB,N,V_isLoading
T@"TVPTimeRange",&,N,V_bufferedTimeRange
currentAVItem
T@"MPAVItem",&,N,V_currentAVItem
identifiersForLastPlayedContainer
T@"MPIdentifierSet",&,N,V_identifiersForLastPlayedContainer
identifiersForLastEndedPlaybackItem
T@"MPIdentifierSet",&,N,V_identifiersForLastEndedPlaybackItem
currentAVPlayerItem
T@"AVPlayerItem",&,N,V_currentAVPlayerItem
videoView
T@"UIView<MPCVideoView>",&,N,V_videoView
isStopped
TB,N,V_isStopped
hasTimedMetadata
fallbackPlaybackIntent
T@"MPCPlaybackIntent",&,N
T@"<TVPASyncPlaybackDelegate>",W,N,VasyncDelegate
Tq,N,VerrorBehavior
TB,N,Vinteractive
Td,N,VrateUsedForPlayback
TB,N,V_waitsAfterPreparingMediaItems
T@"NSDate",C,N,VplaybackDate
TB,N,Vmuted
Tf,N,Vvolume
T@"NSArray",R,N,VchapterCollections
T@"TVPChapterCollection",&,N,VcurrentChapterCollection
T@"TVPChapter",R,N,VcurrentChapter
T@"TVPInterstitial",R,N,VcurrentInterstitial
Td,R,N,VforwardPlaybackEndTime
Td,R,N,VreversePlaybackEndTime
Tq,N,VmediaItemEndAction
T@"TVPAudioOption",&,N,VselectedAudioOption
T@"NSArray",R,N,VsubtitleOptions
T@"TVPSubtitleOption",&,N,VselectedSubtitleOption
Td,N,VmaximumBitRate
TB,N,VpreventsSleepDuringVideoPlayback
TB,N,VupdatesMediaRemoteInfoAutomatically
TB,N,VlimitReadAhead
TVMusicPlayer
bounds
BarAnimation_%ld
musicBarsStyle
TQ,N
recently_added
playlists
artists
albums
songs
genres
composers
compilations
videos
shows
%@ / %@
currentContext
TQ,V_currentContext
currentSubcontext
TQ,V_currentSubcontext
currentPAFFeatureName
T@"NSString",R
_imageTintColor
T@"UIColor",&,N,S_setImageTintColor:,V__imageTintColor
_imageViewWidth
Td,N,S_setImageViewWidth:,V__imageViewWidth
rendersImageAsTemplates
TB,N,V_rendersImageAsTemplates
allowsFocus
TB,N,V_allowsFocus
TVMusicPlaybackStatusChanged
TVMusicPlaybackStatusController
playbackState
Tq,N,V_playbackState
playingSection
T@"MPModelGenericObject",&,N,V_playingSection
playingItem
T@"MPModelGenericObject",&,N,V_playingItem
shuffled
TB,N,GisShuffled,V_shuffled
playerRequestController
T@"MPRequestResponseController",&,N,V_playerRequestController
previewView
T@"UIView",&,N,V_previewView
fadeThroughPreviews
TB,N,V_fadeThroughPreviews
autoUpdatePreviewViewControllerBlock
T@?,C,N,V_autoUpdatePreviewViewControllerBlock
previewViewController
T@"UIViewController",&,N,V_previewViewController
tableViewWidth
Td,N,V_tableViewWidth
tableViewPadding
T{UIEdgeInsets=dddd},N,V_tableViewPadding
previewViewPadding
T{UIEdgeInsets=dddd},N,V_previewViewPadding
previewOnRightSide
TB,N,V_previewOnRightSide
backdropViewMode
TQ,N,V_backdropViewMode
bannerView
T@"UIView",&,N,V_bannerView
tableView
T@"TVTableView",&,D,N
headerView
T@"UIView",&,N,V_headerView
useSmallBackdropStyle
TB,N,V_useSmallBackdropStyle
smallBackdropInsets
T{UIEdgeInsets=dddd},N,V_smallBackdropInsets
previewPaused
TB,N,GisPreviewPaused
shouldAnimatePreviewView
shouldHideBackdropView
backdropViewHideStateNeedsUpdatingBlock
T@?,C,N
preloadCount
Tq,N,V_preloadCount
preloadCompletionHandler
T@?,C,N,V_preloadCompletionHandler
queueSize
Tq,N,V_queueSize
concurrentDownloadCount
Tq,N,V_concurrentDownloadCount
nextIndex
Tq,N,V_nextIndex
finishedImages
T@"NSMutableArray",&,N,V_finishedImages
pendingArtworkCatalogs
T@"NSMutableArray",&,N,V_pendingArtworkCatalogs
loadingArtworkCatalogs
T@"NSMutableArray",&,N,V_loadingArtworkCatalogs
randomized
TB,N,GisRandomized,V_randomized
pauseImageLoad
TB,N,V_pauseImageLoad
origin
Tq,N,V_origin
mpObject
T@"MPModelGenericObject",&,N,V_mpObject
container
T@"MPModelGenericObject",&,N,V_container
T@"NSString",&,N,V_featureName
recommendationData
T@"NSData",&,N,V_recommendationData
T@"NSString",C,N,V_playlistVersionHash
playlistIndex
Tq,N,V_playlistIndex
libraryAdded
TB,N,V_libraryAdded
storefrontSupportsLyrics
TB,N,V_storefrontSupportsLyrics
onRadioRecentStationsChanged
onMusicLibraryInitialized
onMusicLibraryUpdated
onSubscriptionStatusChanged
onStorePushNotification
onSubscriptionRequired
radio-station-id
artwork-url
seed-store-id
tvmusic
showAlbum
showArtist
showPlaylist
artistID
albumID
songID
playlistID
showTVShow
TVEpisodeID
showMovie
movieID
success
isInLibrary
error
item
com.apple.itunesstored
TVMusicJSObject
displayed dialog
did not display dialog
isFreeRadioStation
@24@?0@"RadioStation"8Q16
#T:[%@%p] #Notice #%@ : Completed recent radio stations refresh with error: %@ 
persistentIDs
No cloud library
@24@?0@8Q16
songIDs
Unsupported kind "%@"
Invalid persistentID "%@"
v16@?0@"NSURL"8
v16@?0@?<@"UIViewController"@?>8
@"UIViewController"8@?0
@"TVMusicLibraryEpisodesViewController"8@?0
@"TVMusicLibrarySeasonsViewController"8@?0
GoToAlbum
GoToArtist
Shuffle
PlayNext
AddToUpNext
GoToTVShow
commandToHandle
v20@?0B8@"NSString"12
pageType
addedMenuItems
displayText
menuPosition
yyyy-MM-dd'T'HH:mm:ss
bookmarkTime
bookmarkTimestamp
hasBeenPlayed
isMarkedAsUnwatched
results
sortOrder
@"NSDictionary"24@?0@"RadioStation"8Q16
subscribed
episodeDescription
episodeNumber
showName
radioStation
%p-%ld
isFreeContent
musicAppAPIVersion
isMusicLibraryInitialized
TB,R
isProcessingPlayCommand
TB,V_isProcessingPlayCommand
radioHistoryInitialized
TB,N,V_radioHistoryInitialized
isMusicLibrarySynced
TB,V_isMusicLibrarySynced
accountChangedTimer
T@"NSObject<OS_dispatch_source>",&,N,V_accountChangedTimer
clientData
collectionName
tvShow
songsAndMusicVideos
urlPlayback
urlVideoPlayback
localTrack
contentRatingsBySystem
albumPersistentID
ClientDataId
ClientDataKind
ClientDataMPArtwork
containerID
songIndex
action
playNow
playNext
addToUpNext
playIndex
playbackReporting
containerType
getArtworkFileURL
ErrorNoMediaItems
ErrorPlaybackInProgress
radio
%llu
SongCell
MusicLibrarySongsTitle
collectionView
T@"TVCollectionView",&,N,V_collectionView
T@"TVMusicLibraryHeaderView",&,N,V_headerView
libraryRequest
T@"MPModelLibraryRequest",&,N,V_libraryRequest
lastReceivedResponse
T@"MPModelResponse",&,N,V_lastReceivedResponse
focusToIndexPath
T@"NSIndexPath",&,N,V_focusToIndexPath
T@"MPSectionedCollection",&,N,V_songs
sectionedCollectionDataSource
T@"<MPLazySectionedCollectionDataSource>",&,N,V_sectionedCollectionDataSource
modelObject
T@"MPModelObject",&,N,V_modelObject
mediaItemMetadata
T@"NSMutableDictionary",&,N,V_mediaItemMetadata
dataItem
T@"TVPBaseMediaItem",&,N,V_dataItem
bookmark
T@"TVCKMutableBookmark",&,N,V_bookmark
regular
emphasized
thin
light
ultralight
medium
semibold
bold
heavy
black
TV Episode: "%@", show title "%@"
T@"MPModelTVEpisode",R,N
TVCrossfadeViewWillDisplayNotification
padding
T{UIEdgeInsets=dddd},N,V_padding
crossfadePeriod
Td,N,V_crossfadePeriod
crossfadeDuration
Td,N,V_crossfadeDuration
text
T@"NSString",C,N,V_text
T@"UIImage",&,N,V_image
buttonStyle
circular
TB,N,V_circular
TVScrollingParadeViewWillDisplayNotification
multiply
inputColor
position.x
positionAnimation
filters.multiply.inputColor
undimmingAnimation
dimmingAnimation
paused
TB,N,GisPaused,V_paused
width
height
TVConfigureForMetrics
data-is-private-mask
false
MusicLibraryRecentlyAdded
MusicLibraryShowsTitle
v16@?0@"TVMusicJSAlbumDetailViewController"8
v16@?0@"TVMusicJSPlaylistDetailViewController"8
v28@?0@"MPModelLibraryRequest"8B16@"NSArray"20
+[TVMusicPlaybackHelper playItemType:withMPObject:]
+[TVMusicPlaybackHelper playFromRequest:startItemIdentifiers:initialPlaybackType:]
+[TVMusicPlaybackHelper playRadioWithPlaybackIntent:]
+[TVMusicPlaybackHelper playRadioFromMPSong:]
+[TVMusicPlaybackHelper playWithPlaybackIntent:initialPlaybackType:]
+[TVMusicPlaybackHelper playItemType:withPersistentID:inContainer:playbackAction:]
+[TVMusicPlaybackHelper playItemType:withPersistentID:inContainer:playbackAction:]_block_invoke
TVMusicPlaybackHelper
+[TVMusicPlaybackHelper _playRequestWithItemType:requestBlock:]
+[TVMusicPlaybackHelper _playSongsWithRequest:startIdentifiers:shuffle:initialPlaybackType:]
+[TVMusicPlaybackHelper _queueSongsWithRequest:playNext:]
TVMusicPlaybackItemTypeUnknown
TVMusicPlaybackItemTypeAlbum
TVMusicPlaybackItemTypeSong
TVMusicPlaybackItemTypePlaylist
TVMusicPlaybackItemTypeArtist
TVMusicPlaybackItemTypeComposer
TVMusicPlaybackItemTypeMusicVideo
TVMusicPlaybackItemTypeMovie
TVMusicPlaybackItemTypeTVEpisode
TVMusicPlaybackItemTypeTVSeason
<Undefined type: %ld>
TVMusicPlayback
TVMusicLibrarySortCategorySongs
TVMusicLibrarySortCategoryMusicVideos
TVMusicLibrarySortCategoryPlaylists
TVMusicLibrarySortCategoryAlbums
TVMusicLibrarySortCategoryAlbumsScoped
TVMusicLibrarySortCategoryMusicVideosScoped
MusicLibrarySortButtonTitle
MusicLibrarySortTypeTitle
MusicLibrarySortTypeArtist
MusicLibrarySortTypePlaylistType
MusicLibrarySortTypeDateAdded
MusicLibrarySortTypeAlbumYearAscending
MusicLibrarySortTypeAlbumYearDescending
MusicLibrarySortSelectionTitle
MPIdentifier_%@
MPObject_%@
TVMusicArtworkLoaderErrorDomain
|1|%@
|2|%@
|3|%@
|4|%@
|5|%@
|6|%@
|7|%@
|8|%@
|9|%@
presentationViewController
T@"UIViewController",R,N
HUDConfirmationAddedToLibraryTitle
NotificationsCheck
HUDConfirmationPlayNextTitle
HUDConfirmationPlayNextMessage
NotificationsPlayNext
HUDConfirmationPlayLaterTitle
HUDConfirmationPlayLaterMessage
NotificationsPlayLater
HUDConfirmationLovedTitle
HUDConfirmationLovedMessage
NotificationsLoved
HUDConfirmationDislikedTitle
HUDConfirmationDislikedMessage
NotificationsDisliked
window
T@"_TVMusicHUDWindow",&,N,V_window
titleText
T@"NSString",&,N,V_titleText
messageText
T@"NSString",&,N,V_messageText
systemInputViewController
T@"UISystemInputViewController",R,N,V_systemInputViewController
T@"<TVTextEntryControllerDelegate>",W,N,V_delegate
textField
T@"UITextField",R,N,V_textField
textFieldHeaderLabel
T@"UILabel",R,N,V_textFieldHeaderLabel
topAccessoryView
T@"UIView",&,N,V_topAccessoryView
bottomAccessoryView
T@"UIView",&,N,V_bottomAccessoryView
textFieldAllowsFocus
titleView
T@"UILabel",&,N,V_titleView
messageView
T@"UILabel",&,N,V_messageView
T@"TVImageView",&,N,V_imageView
T@"NSAttributedString",&,N,V_title
T@"NSAttributedString",&,N,V_message
submitButton
T@"UIButton",&,N,V_submitButton
MusicLibraryRecentlyAddedSubtitleVariousArtists
MusicLibraryRecentlyAddedSubtitlePlaylist
MusicLibraryRecentlyAddedSubtitleTVShow
%@: mpcPlaybackIntent: %@, startItemIdentifiers: %@, container: %@, featureName: %@
playbackAction
TQ,N,V_playbackAction
startItemIdentifiers
T@"MPIdentifierSet",&,N,V_startItemIdentifiers
mpcPlaybackIntent
T@"MPCPlaybackIntent",&,N,V_mpcPlaybackIntent
T@"MPModelGenericObject",C,N,V_container
playActivityFeatureName
T@"NSString",C,N
playActivityRecommendationData
T@"NSData",C,N
isValidPlaybackIntent
progressPercent
Tf,N,V_progressPercent
TVMusicCollectionViewTextHeaderIdentifier
TVMusicCollectionViewBlankHeaderIdentifier
TVMusicLibraryArtistDetailViewController
artistButton
T@"UIControl",&,N,V_artistButton
footerView
T@"UIView",&,N,V_footerView
musicVideosResponse
T@"MPModelLibraryResponse",&,N,V_musicVideosResponse
ACCOUNT_SWITCH
v16@?0q8
userSwitchOverlayWindow
T@"UIWindow",&,N,V_userSwitchOverlayWindow
userSwitchSnapshotView
T@"UIView",&,N,V_userSwitchSnapshotView
userSwitchEffectView
T@"UIVisualEffectView",&,N,V_userSwitchEffectView
userSwitchLabel
T@"UILabel",&,N,V_userSwitchLabel
userSpinnerView
T@"UIActivityIndicatorView",&,N,V_userSpinnerView
hiding
TB,N,V_hiding
isTimeoutEnabled
TB,N,V_isTimeoutEnabled
musicPlaylistLockup
musicPlaylistTitleCell
data-name
position
v28@?0@"UIImage"8@"NSError"16B24
subtitle
@24@?0@"UIColor"8Q16
T@"NSArray",&,N,V_imageViews
createdImageViews
TB,N,V_createdImageViews
titleBlockView
T@"UIView",&,N,V_titleBlockView
T@"UILabel",&,N,V_subtitleLabel
titleBackgroundImageView
T@"TVImageView",&,N,V_titleBackgroundImageView
T@"NSString",&,N,V_playlistID
titleGradientLayer
T@"CALayer",&,N,V_titleGradientLayer
TVMusicJSObjectHelper
typeDisplayName
numberOfEpisodes
v32@?0@"MPModelObject"8q16^B24
v32@?0@"MPModelLibrarySearchScope"8q16^B24
com.apple.TVMusic.queryRecentlyAdded.serialQueue
index
v32@?0@"MPModelGenericObject"8@"NSIndexPath"16^B24
q24@?0@"NSDictionary"8@"NSDictionary"16
@"MPModelLibraryRequest"16@?0@"MPModelObject"8
playlistPosition
playlistEntryPersistentID
trackNumber
formattedDuration
classicalWork
classicalMovement
classicalMovementCount
classicalMovementNumber
shouldShowComposer
grouping
v24@?0@"MPModelObject"8q16
v32@?0@"MPModelObject"8@"NSIndexPath"16^B24
requestedID
isPlaylistSubscribed
v28@?0@"NSString"8@"NSError"16B24
v24@?0@"MPExportableArtworkProperties"8@"NSError"16
TVMusicCollectionViewCellIdentifier
TVMusicMPRequestArtworkCatalogCacheIdentifier
mpResults
T@"MPSectionedCollection",&,N,V_mpResults
totalNumberOfItems
Tq,N,V_totalNumberOfItems
cellIdentifier
T@"TVMusicLibraryHeaderView",R,N,V_headerView
showIndexBarTitles
TB,N,V_showIndexBarTitles
preventPopWhenEmpty
TB,N,V_preventPopWhenEmpty
com.apple.TVMusicLyricsRequest.LyricsOperationQueue
MusicTimedLyrics
Believer.ttml
A_Holly_Jolly_Christmas.ttml
Another_Nail_In_My_Heart.ttml
1282018585.ttml
Hold_on_were_going_home.ttml
RapGod.ttml
Hello.ttml
Easy_Come_Easy_Go.ttml
MusicTimedLyricsAnySong
.ttml
v16@?0@"MPModelLyrics"8
TVMusicLyricsRequest
LibraryMenuShuffle
LibraryMenuRecentlyAdded
LibraryMenuPlaylists
LibraryMenuArtists
LibraryMenuAlbums
LibraryMenuSongs
LibraryMenuItemShows
LibraryMenuMusicVideos
LibraryMenuGenres
LibraryMenuComposers
LibraryMenuCompilations
top-menu-shuffle-mask
menuItems
T@"NSArray",R,C,N,V_menuItems
currentMenuContext
TQ,R,N,V_currentMenuContext
TVMusicMediaItemMetadataArtistID
TVMusicMediaItemMetadataMPIdentifierSet
TVMusicMediaItemMetadataUserLyrics
TVMusicMediaItemMetadataMPModelObject
TVMusicMediaItemMetadataSagaID
TVMusicMediaItemMetadataShouldSkipVideo
TVMusicMediaItemMetadataMPModelContainer
TVMusicTableViewCellIdentifier
@"UIViewController"16@?0@"NSIndexPath"8
tableHeaderLabel
T@"UILabel",&,N,V_tableHeaderLabel
playPauseRecognizer
T@"TVInteractionGestureRecognizer",&,N,V_playPauseRecognizer
tableHeaderView
T@"UIView",&,N,V_tableHeaderView
headingVerticalOffset
Td,N,V_headingVerticalOffset
MusicLibraryArtistsTitle
T@"_UIFloatingContentView",R,N,V_floatingView
textLabel
T@"UILabel",R,N,V_textLabel
trailingImageView
T@"UIImageView",R,N,V_trailingImageView
actionHandler
T@?,R,N,V_actionHandler
v32@?0@"_TVMusicAddToPlaylistActionView"8Q16^B24
actions
T@"NSMutableArray",R,N,V_actions
Autoscroll mode, not currently scrolling
Autoscroll mode, currently scrolling
User is scrolling
User scroll decelerating
User scroll ended
Play button visible
View did load
Select button
Menu button
Next lyrics line
Jump to lyrics line
Scroll begin dragging
Scroll end dragging
Scroll end decelerating
Scroll animation completed
Show play button
Hide play button
User-scroll time-out
zh-Hans
zh-Hant
Font size
Line spacing
Scroll animation spring damping
Highlight animation duration
Text downscale ratio
Pre-scroll time offset
Highlighted text alpha
Non-highlighted text alpha
-[TVMusicTimedLyricsViewController _startTimedLyricsUpdating]
-[TVMusicTimedLyricsViewController _stopTimedLyricsUpdating]
v32@?0@"TVMusicLyricsLineLabel"8Q16^B24
lyricsInfo
T@"MSVLyricsSongInfo",&,N,V_lyricsInfo
startViewTime
Td,N,V_startViewTime
highlightedLineIndex
Tq,N,V_highlightedLineIndex
viewSize
T{CGSize=dd},N,V_viewSize
leftMargin
Td,N,V_leftMargin
textLabels
T@"NSArray",&,N,V_textLabels
scrollView
T@"UIScrollView",&,N,V_scrollView
displayLink
T@"CADisplayLink",&,N,V_displayLink
lastPollTime
Td,N,V_lastPollTime
currentLabelIndex
Tq,N,V_currentLabelIndex
selectedLabelIndex
Tq,N,V_selectedLabelIndex
dummyFirstLine
T@"TVMusicPlaceholderCountdownLabel",&,N,V_dummyFirstLine
lineStartTimeLabel
T@"TVMusicTimestampLabel",&,N,V_lineStartTimeLabel
songwritersLabel
T@"UILabel",&,N,V_songwritersLabel
lyricsFont
T@"UIFont",&,N,V_lyricsFont
playButtonEnabled
TB,N,GisPlayButtonEnabled,V_playButtonEnabled
contentView
T@"UIView",&,N,V_contentView
tripleClickRecognizer
T@"UITapGestureRecognizer",&,N,V_tripleClickRecognizer
selectRecognizer
T@"UITapGestureRecognizer",&,N,V_selectRecognizer
menuRecognizer
T@"UITapGestureRecognizer",&,N,V_menuRecognizer
isAutoScrolling
lastMenuClickTime
Td,N,V_lastMenuClickTime
targetScrollY
Td,N,V_targetScrollY
userInterfaceStyle
Tq,N,V_userInterfaceStyle
playButtonEnableTime
Td,N,V_playButtonEnableTime
springTimingParameters
T@"UISpringTimingParameters",&,N,V_springTimingParameters
hiddenLabels
T@"NSMutableSet",&,N,V_hiddenLabels
firstLineYPos
Td,N,V_firstLineYPos
allowCascade
TB,N,V_allowCascade
cascadeLabels
T@"NSArray",&,N,V_cascadeLabels
cascadeScrollStartY
Td,N,V_cascadeScrollStartY
cascadeOffsets
T@"NSMutableArray",&,N,V_cascadeOffsets
animatingTopLabel
T@"TVMusicLyricsLineLabel",&,N,V_animatingTopLabel
timestampYPosition
Td,N,V_timestampYPosition
vibrancyView
T@"UIVisualEffectView",&,N,V_vibrancyView
viewReportedVisible
TB,N,GisViewReportedVisible,V_viewReportedVisible
translatedLanguage
T@"NSString",C,N,V_translatedLanguage
selectYPosition
Td,N,V_selectYPosition
fontSize
lineSpacing
Td,N,V_lineSpacing
scrollAnimationSpringDamping
Td,N,V_scrollAnimationSpringDamping
highlightAnimationDuration
Td,N,V_highlightAnimationDuration
textDownscaleRatio
Td,N,V_textDownscaleRatio
preScrollTime
Td,N,V_preScrollTime
highlightedTextAlpha
Td,N,V_highlightedTextAlpha
unhighlightedTextAlpha
Td,N,V_unhighlightedTextAlpha
timedLyricsDelegate
T@"NSObject<TVMusicTimedLyricsViewControllerDelegate>",W,N,V_timedLyricsDelegate
activeForCurrentSong
TB,N,V_activeForCurrentSong
currentLineCenterY
Td,N,V_currentLineCenterY
icon_lyrics_play
T@"NSString",&,N
v32@?0@"UILabel"8Q16^B24
Td,N,V_progress
progressAlpha
Td,N,V_progressAlpha
originalPosition
T{CGPoint=dd},N,V_originalPosition
originalCenter
yPosition
Td,N,V_yPosition
lyricsLineIndex
Tq,N,V_lyricsLineIndex
animatorView
T@"UIView",&,N,V_animatorView
TVMusicTimedLyricsViewController
airtunesd
com.apple.TVAirPlay
T@"<TVMusicAirplayDetectorDelegate>",W,N,V_delegate
isAirplayReceiver
%s, state = %@
%@ top menu, state=%@
No change for top menu, state=%@
%s, state=%@, libraryManager state=%d
Can't find playlist entry at index %ld for item %@
Can't find songs for playlist %@
Can't get playlist entry for item %@
TVMusicLibraryManager init
State changed from %@ to %@
Sync progress: %g%%
Error getting subscription status: %@
Failed getting subscription status, falling back to previously cached status.
Got subscription status: saga %{BOOL}d, fuse %{BOOL}d, cloud state %@
Subscription status is not available.
Library state: %@, Cloud status: %@
%s: %s: Sending library switched notification
%s: %s: Sending library update notification
Stopping existing JS app at URL [%@]
Opening JS app at url [%@]
Presented JS app view controller
JS App finished launching: %@
JS App stopped: %@
JS App is closing because view controller is being dismissed: %@
No URL specified for bag key %@/%@. Using URL [%@]
Found URL for bag key %@/%@: [%@]
Only Genre and Composer are supported as filter objects for album
Can't find album track for item %@
Can't find songs for album %@
Can't find track index for album [%@] in item [%@]
Reporting Static Lyrics PAF event for song "%@", duration = %g sec
TVMusicSongCell: container type [%{public}@] specified with ID %{public}@, but there is no song ID.
TVMusicSongCell: Invalid song cell type: %{public}@
MPModelGenericObject+TVMusic: Unhandled container object: %@
openJavascriptAppWithURL:%@
openJavascriptAppWithURL adjusted URL:%@
Failed to set audio session playback category: %@
TVMusic openURL: %@ options: %@
Attempted to play [%@] without a subscription
Invalid play query parameter (must be persistentID or storeID) for type [%@] in [%@]
Unknown play item type [%@] in [%@]
Not enough parameters for play command in [%@]
Setting spotloght subscription status for identifier: %@
Can't set spotlight subscription status, no account identifier has been set.
No IKAppContext available: Javascript will not work properly!
Presented explicit restriction alert.
Skipping openURL action due to explicit restriction alert
Received a store dialog response for lease-end: %@
Launching music subscription management app from lease-end dialog action
Lease-end alert dismissed with no action
Can't create lease-end alert from server data, using app-provided alert instead.
No account store in account change notification: %@
User account changed from %@ to %@
Error: no subscription status
Unable to add song [%@] to playlist [%@], error: %@
Unable to add album [%@] to playlist [%@], error: %@
Unable to add playlist [%@] to playlist [%@], error: %@
Unsupported object type for adding to playlist: %@
Timed out getting songs in playlist "%@"
Timed out getting songs in album "%@"
TVMusicLibraryPlaylistDetailViewController: Unknown object in playlist: %@
TVMusicLibraryPlaylistDetailsViewController: Playlist is not in library, but the playlist detail view controller is not on top of the navigation stack.
Found nil while enumerating %s
Missing title and body text in store dialog response: %@
Showing store dialog alert with title = "%@", message = "%@"
User clicked %@
User exited dialog with menu button, invoking cancel action
Missing title and body text in dialog request
Showing dialog alert with title = "%@", message = "%@"
%s: %s: Subscribed: %@, Has Match: %@
%s: %s: index: %ld
Unable to move item at indexPath %@ to after indexPath %@
Error performing change to item (%ld) request: %{public}@
Unable to perform change to item (%ld) command: No command request is available.
Unable to perform change to item (%ld) command: No item is available.
Error performing set elapsed time to position %{public}g
Unable to perform set elapsed time command: No command request is available.
%s: %s: shuffle: %ld
Error setting shuffle type: %{public}@
Shuffle command not available
_shuffleEnabled set %d to %d
%s: %s: repeatMode: %ld (0=None)
Attempt to set repeat type %li
Error setting repeat type: %{public}@
Repeat command not available
_repeatMode set %li to %li
Error replacing queue with playback intent: %@, error: %{public}@
Successfully replaced queue with playback intent: %@
Unable to replace queue; tracklist is nil
Queue reset command (replaceWithPlaybackIntent) not available
Error clearing queue: %{public}@
Successfully cleared play queue.
Queue reset command (clear) not available
%s: %s: playNext: %d
Error inserting into queue with playback intent: %@, error: %{public}@
Queue insert command not available
Queue insert command not found on tracklist!
Unable to insert into queue; tracklist is nil
Cancelling timeout for invalid route error due to valid response received
Got invalid route error; scheduling timeout to revert to local system route
Timeout fired for invalid route error; switching to local system route
Error setting active system route: %{public}@
Player path: %{public}@
Unsupported command "%{public}@" (%ld)
Unable to perform command "%{public}@" (%ld) because no player response is available.
Performing player command "%{public}@"
Error performing %{public}@ request: %{public}@
Successfully completed player command "%{public}@"
Unable to perform %{public}@ request: No queue command is available.
Unhandled metadata type (%ld) for object: [%@]
Got nil player response.
Got response with %ld items, index = %ld, item [%{public}@], elapsed time %g, state=%@
Current playing item identifiers: %{public}@
Showing "Currently Playing" status for audio app [%{public}@]
Invalid tracklist identifier: %@
Tracklist has been replaced
   > Tracklist changed from %{public}ld items to %{public}ld items
   > Changed playing item: = %@, content item ID = %@
   > Changed play state from %{public}@ to %{public}@
Got a valid player response, but there is no play queue delegate!.
Player path changed; sending TVMusicPlayQueuePlayerPathChangedNotification
Error removing saga IDs: [%@], error: %@
Successfully removed saga IDs: %@
Failed to remove song from playlist: %{public}@
Could not find song %{public}@ at index %{public}ld in playlist %{public}@
Unable to add album %@ to playlist %@: could not get songs in album.
Unable to add Playlist %@ to playlist %@: could not get playlist entries.
Kind value not found in metadata dictionary for child: %@.
Unexpected object in metadata dictionary childrenIDs: %@.
Can't get item IDs in store response for playlist %@.
Unable to get items for playlist %@.
Can't get songs for album [%@]: no songs found in library.
Unable to get items for album %@.
Queuing a new request...
Error return from library request: %@
PhotoAssets request
RegisterRemotePhotoServer: %@
Library contains %ld albums
No artwork available for screensaver.
Getting artwork for %ld random albums
Returning %ld photo assets after %g seconds.
Could not get artwork backing file for image %@
Can't get an image for album: %@
Fetched %ld artwork URLs.
Requesting artwork URLs for %ld saga IDs
Requesting artwork URLs for %ld purchase history IDs
Timeout after getting %ld artwork URLs out of %ld
Got %ld artwork URLs, %ld were cached
Activating app and showing Now Playing
Showing Now Playing
Video playing in remote device queue: %@
Can't get store ID for mediaItem: %@
Lyrics info: %@
Lyrics TTML file for "%@" (%lld) does not contain timing information.
Can't parse lyrics info (id = %lld) from TTML file. Error: %@
Not showing lyrics for song "%@" (%lld) because explicit content is restricted.
%s: %s: Notification: %@
Added item to library with store ID %lld: success=%d, error=%@, pids=%@
MediaItem not added to library: %{public}@
Showing Now Playing view controller for playback type: %@
Age gate threshold = %ld
Age gate threshold is provided in URL bag (%ld), but there is no dialog title or message.
Age gate threshold not found in bag: value for ratingWarningThreshold is %@, bag error: %@
Showing age gate warning: rating %ld >= threshold %ld
Not showing age gate warning because rating %ld is less than threshold %ld
Type not recognized for item %@
Showing age gate warning
Age gate warning cancelled
Age gate warning accepted
Requesting Age Gate dialog for library item: %@
Age Gate rating=%ld, threshold=%ld, show dialog: %@
Not showing Age Gate dialog for library item because it's already been shown for this item (store ID=%@)
Can't show Age Gate dialog: missing store ID!
Not showing Age Gate dialog for library item of type %ld
Not showing Age Gate dialog; age gate is disabled.
Can't save nil identifier
Adding store ID %@ to library idenfifiers array, count = %ld
Creating new library idenfifiers array with store ID %@
Can't show menu: no MP song object found in media item: %@
Object not found in library: %@
Playlist entry type not supported: %@
Unsupported item for context menu: %@
Did not find playlist entry %{public}@ in playlist %{public}@ at position %{public}ld
Failed to remove song from playlist; error: %{public}@
Removed song "%{public}@" from playlist "%{public}@".
No adamID for album (%@), can't delete it.
Failed to add album (%@) to library: error=%@.
Selected context menu item [%@]
Added track with success [%d]
Can't create add to library menu item for adamID %llu
Can't find album artist in library: %@
Can't find song artist in library: %@
Can't show playlist: %@
Error subscribing to playlist [%@]: %@
Failed to add song (adamID=%@) to library: error=%@.
Can't remove item because it was not found in library. Identifiers: %@
Can't update without an identifier: %@
No changes, ignoring update for %@
Updating document data for %@
%s: %s: status: %ld, error dict: %@
No valid app document in document service request
Unexpected document request completion: status = %ld, error dict = %@, request = %@
Getting SupportsDocumentCreation from JS global object (not expected in production JS code)
%s: %s: %@
%s: %s: 
%s: %s: Pause
Not sending pause command because item is not loaded. Setting local player state to paused.
%s: %s: Scan with rate: %g
%s: %s: Toggle Play/Pause
%s: %s: Play
%s: %s: Stop
%s: %s: clearPlayQueue: %{BOOL}d
%s: %s: isStopped: %d
%s: %s: state: %@
%s: %s: media item: %@
%s: %s: Forward
%s: %s: Backward
%s: %s: waitsAfterPreparingMediaItems: %@
%s: %s: ignoreDelegate: %d
%s: %s: volumeRampDuration: %g
%s: %s: %ld items
%s: %s: MPAVItem: %{public}@
%s: %s: item: %@, error: %@
Showing store dialog: %@
Store dialog completed, user agreed: %@, error: %@
%s: %s: item: %@
Can't get generic object from MPAVItem: %@
Got age-gate authorization request, but don't have any age gate info
Got age verification authorization request; proceeding with playback attempt.
Authorization reason not handled: %ld
Unhandled MPMediaType: %ld
Playback error: %{public}@ for item: %{public}@
%s: %s: item: %@, state=%{public}@, MPCState=%ld
Clearing isStopped state.
Performing deferred pause command.
TVMusicPlayer item changed: "%@", mediaType=%ld, hasVideo: %{BOOL}d
%s: %s: new item: %@
Adding AV item metadata for item ID %{public}@
Can't add AV item metadata for item ID %{public}@
Setting avPlayerItem.avKitMediaType to AVKitMediaTypeMusicVideo
Setting avPlayerItem.avKitMediaType to AVKitMediaTypeUnspecified
Setting avPlayer.allowsVideoPlaybackWhileInBackground = YES
Setting avPlayer.allowsVideoPlaybackWhileInBackground = NO
Item playback ended; setting avPlayer.allowsVideoPlaybackWhileInBackground = NO
Sending playback Pause command for music video on app resign active
Unknown MPCPlayerState: %ld
Generic object type %ld not supported [%@]
Setting image data for %@
Can't get image data for item [%@]
Setting end-bookmark for item %@
TVMusicJSObject init: %@
TVMusicJSObject dealloc: %@
Received playItems command while still processing a play command
Received playItems request with %ld item(s), first item = "%@" kind = %@
Attempting to play null items - will be ignored
A playIndex of %{public}ld was requested, but playIndex is not supported for library album playback.
Will play library album: %@
Could not find album in library with persistent ID %lld
A playIndex of %{public}ld was requested, but playIndex is not supported for library playlist playback.
Will play library playlist: %@
Could not find playlist in library with persistent ID %lld
Can't find item at index %ld in playlist or album [%{public}@]
Will play item type %@ with store ID %@, container: %@
Can't play song with ID %@: account has no subscription
Will play song with store ID %@
Will play item type %@ with store ID %@
Will play media clip for play item: %@
Invalid media clip for play item: %@
Will play item type %@ with persistentID %lld
Can't play item type %@: invalid with persistentID
Can't play item type %@ with ID %@: account has no subscription
Will play item type %@ with ID %@
No store ID found for type %{public}@, name = "%@"
Ignoring %{public}ld play items, playing collection at index %{public}ld.
Ignoring %ld play items, playing specified collection instead.
Ignoring %ld library/store items, playing %ld media clip items.
Ignoring %ld library items, playing %ld store items.
TVMusicRestrictionUI checked explicit track, %{public}s.
TVMusicRestrictionUI allowed to play movie/TV Episode.
TVMusicRestrictionUI returned error: %{public}@
Normal playback without TVMusicRestrictionUI
Unable to play anything from play items: %@
Invalid playback action type [%{public}@], assuming playNow
Error subscribing to playlist ID %@: %@
Album request for id=%@ returned %ld songs.
Album request failed with error: %@
JS LOG: %@ (%@)
pageDidAppear: %@
No PAF data in options: %@
Can't display menu for item: %@
No song found for store item: %@
Unsupported MPModelObject kind: %@
_userAccountChanged, ID: %@
User account switched from %@ to %@, showing loading screen
User logged out, DSID: %@
Unhandled generic object: %@
Calling JS method %@ with args %@
Javascript method name "%@" does not exist
Unable to check for item in library: item = %@
Unable to check for item in library: identifiers = %@, kind = %@
Unable to check for song in library
Timed out checking for album in library
%s: %s: itemType: %@, object: %@
Unknown item type for playback
Unsupported item type for playback: %ld
%s: %s: Playing with request: %@, startItemIdentifiers: %@, initialPlaybackType %ld
%s: %s: Playing radio with playbackIntent: %@
%s: %s: Playing radio for song: %@
%s: %s: Can't play radio station from song %@
%s: %s: Showing existing playback view controller for TVMusicPlaybackIntent: %@
%s: %s: Playing with TVMusicPlaybackIntent: %@
%s: %s: Can't play due to invalid playback intent: %@
%s: %s: itemType: %@, persistent ID: %@, action=%ld
%s: %s: Can't play item type %ld with PID %@; not found in library. error: %@
Error playing back with playbackIntent: %@: %@
MPCPlaybackIntent is nil!
Error picking route for airplay playback: %@
%s: %s: Unknown playback type
%s: %s: start IDs: %@, shuffle: %@, playback type: %ld
%s: %s: play next: %{public}s
Playing %ld songs by artist.
No artist albums to play, attempting to play music videos.
Attempted to play artist songs, but there is nothing to play.
Can't perform query; cloud data client is not connected and synced.
Ignoring recently added item: %@.
Could not find kind %@, PID %@
Unexpected playlist item type: %@
Unexpected model object type: %@
Range (%ld, %ld) out of bounds for track count %ld
Could not get lyrics for song "%@", error: %@
Can't get lyrics support flag due to bag error: %@
Can't get local lyrics for song "%@" because it does not have a valid store ID
Jumping to lyrics line %ld, time %g
Select button detected
No delegate handler for sendPlayCommandForTimedLyricsViewController:
Redisplaying hidden line: %@
Hiding Label: %@
Unhide Label: %@
Highlight Label: %@, alpha = %g
Unhighlight Label: %@
Reporting Timed Lyrics PAF event for song "%@", duration = %g sec
Not reporting miniscule Timed Lyrics PAF event for song "%@", duration = %g sec
Not reporting Timed Lyrics PAF event (should be already reported). Song: %@, start view time: %g
<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE plist PUBLIC "-//Apple//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd">
<plist version="1.0">
<dict>
<key>abs-client</key>
<string>1755971667</string>
<key>adi-client</key>
<string>572356293</string>
<key>application-identifier</key>
<string>com.apple.TVMusic</string>
<key>aps-connection-initiate</key>
<true/>
<key>com.apple.PairingManager.Read</key>
<true/>
<key>com.apple.PairingManager.RemovePeer</key>
<true/>
<key>com.apple.PairingManager.Write</key>
<true/>
<key>com.apple.UIKit.vends-view-services</key>
<true/>
<key>com.apple.accounts.appleaccount.fullaccess</key>
<true/>
<key>com.apple.accounts.inactive.fullaccess</key>
<true/>
<key>com.apple.appletv.pbs.allow-custom-playpause</key>
<true/>
<key>com.apple.appletv.pbs.allow-custom-volume</key>
<true/>
<key>com.apple.appletv.pbs.bulletin-service-access</key>
<true/>
<key>com.apple.appletv.pbs.now-playing-view-service</key>
<true/>
<key>com.apple.atvcached.client</key>
<true/>
<key>com.apple.authkit.client.internal</key>
<true/>
<key>com.apple.avfoundation.allow-system-wide-context</key>
<true/>
<key>com.apple.avfoundation.allow-video-playback-in-background</key>
<true/>
<key>com.apple.avfoundation.allows-access-to-device-list</key>
<true/>
<key>com.apple.avfoundation.allows-set-output-device</key>
<true/>
<key>com.apple.coremedia.allow-mpeg4streaming</key>
<true/>
<key>com.apple.coremedia.allow-protected-content-playback</key>
<true/>
<key>com.apple.itunescloud.delegate-account-store</key>
<true/>
<key>com.apple.itunescloud.delegation-provider</key>
<true/>
<key>com.apple.itunesstored.private</key>
<true/>
<key>com.apple.managedconfiguration.feature-setting.allowExplicitContent</key>
<true/>
<key>com.apple.managedconfiguration.profiled-access</key>
<true/>
<key>com.apple.mediaremote.allow</key>
<array>
<string>TVPairing</string>
</array>
<key>com.apple.multitasking.termination</key>
<true/>
<key>com.apple.private.accounts.allaccounts</key>
<true/>
<key>com.apple.private.coreservices.canmaplsdatabase</key>
<true/>
<key>com.apple.private.iad.background-client</key>
<true/>
<key>com.apple.private.iad.privileged-client</key>
<true/>
<key>com.apple.private.network.socket-delegate</key>
<true/>
<key>com.apple.private.rtcreportingd</key>
<true/>
<key>com.apple.private.security.container-required</key>
<true/>
<key>com.apple.private.tcc.allow</key>
<array>
<string>kTCCServiceMediaLibrary</string>
</array>
<key>com.apple.private.tvos.top-shelf.full-screen-image</key>
<true/>
<key>com.apple.security.exception.files.home-relative-path.read-write</key>
<array>
<string>/Library/TVSUIWallpaper/</string>
<string>/Media/</string>
<string>/Library/Preferences/com.apple.apsd.launchd</string>
<string>/Library/Logs/MediaServices/HTTPArchives/</string>
</array>
<key>com.apple.security.exception.mach-lookup.global-name</key>
<array>
<string>com.apple.ak.anisette.xpc</string>
<string>com.apple.askpermissiond</string>
<string>com.apple.familycircle.agent</string>
<string>com.apple.hsa-authentication-server</string>
<string>com.apple.mediaartworkd.xpc</string>
<string>com.apple.MediaPlayer.MPRadioControllerServer</string>
<string>com.apple.rtcreportingd</string>
<string>com.apple.storebookkeeperd.xpc</string>
<string>com.apple.atc.xpc</string>
<string>com.apple.atc.xpc.downloadprogress</string>
<string>com.apple.atc.xpc.runkeeplocaltask</string>
<string>com.apple.PairingManager</string>
<string>com.apple.itunescloudd.playactivity</string>
<string>com.apple.nanoprefsync</string>
<string>com.apple.itunescloud.delegation-provider</string>
<string>com.apple.itunescloud.delegate-account-store</string>
<string>com.apple.coremedia.endpointpicker.xpc</string>
<string>com.apple.coremedia.routediscoverer.xpc</string>
<string>com.apple.coremedia.routingcontext.xpc</string>
<string>com.apple.coremedia.endpointremotecontrolsession.xpc</string>
<string>com.apple.PairingManager</string>
<string>com.apple.itunescloud.contenttaste</string>
<string>com.apple.itunescloud.music-subscription-status-service</string>
<string>com.apple.adid</string>
</array>
<key>com.apple.security.exception.shared-preference.read-write</key>
<array>
<string>com.apple.mobileipod</string>
<string>com.apple.springboard</string>
<string>com.apple.TVScreenSaver</string>
</array>
<key>com.apple.smoot.subscriptionservice</key>
<true/>
<key>com.apple.springboard.CFUserNotification</key>
<true/>
<key>com.apple.springboard.opensensitiveurl</key>
<true/>
<key>com.apple.symptoms.NetworkOfInterest</key>
<true/>
<key>com.apple.tv.api</key>
<array>
<string>iTunes</string>
</array>
<key>com.apple.tvmlkit.private</key>
<true/>
<key>dynamic-codesigning</key>
<true/>
<key>fairplay-client</key>
<string>1888082492</string>
<key>keychain-access-groups</key>
<array>
<string>apple</string>
<string>com.apple.MediaRemote.pairing</string>
</array>
</dict>
</plist>
