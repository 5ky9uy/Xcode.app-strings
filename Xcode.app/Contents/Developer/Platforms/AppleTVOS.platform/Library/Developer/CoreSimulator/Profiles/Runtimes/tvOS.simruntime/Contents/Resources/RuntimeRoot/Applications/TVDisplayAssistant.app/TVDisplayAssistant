init
copy
addObject:
invalidate
timerStatusHandlers
countByEnumeratingWithState:objects:count:
stopTimer
handlers
removeAllObjects
title
scheduledTimerWithTimeInterval:repeats:block:
_destroyTimer
startTimer
timer
setTimer:
initWithTitle:flow:handler:
setMeasurement:
setIdleSecondsToTrigger:
addHandler:
addSecondsToTriggerStatusHandler:
isEqualToString:
flow
measurement
isEqual:
idleSecondsToTrigger
hash
initWithFormat:
class
self
performSelector:
performSelector:withObject:
performSelector:withObject:withObject:
isProxy
isKindOfClass:
isMemberOfClass:
conformsToProtocol:
respondsToSelector:
retain
release
autorelease
retainCount
zone
superclass
description
debugDescription
copyWithZone:
resetTimer
forceRunHandlers
setHandlers:
setTimerStatusHandlers:
.cxx_destruct
_title
_flow
_idleSecondsToTrigger
_handlers
_timerStatusHandlers
_timer
_measurement
initWithTitle:subtitle:footer:appleSupportFooter:
addAction:
preferredAction
setPreferredAction:
menuBehavior
setMenuBehavior:
subtitle
footer
appleSupportFooter
actions
isEqualToArray:
hasActionWithTimer
setTitle:
mutableActions
setMutableActions:
_hasActionWithTimer
_preferredAction
_subtitle
_footer
_appleSupportFooter
_menuBehavior
_mutableActions
loadingAction
cancel
setCompletionHandler:
_createIdleTimerAssertion
actionHandler
completionHandler
_invalidateIdleTimerAssertion
loadingDuration
startWithCompletionHandler:
lastObject
initWithTitle:loadingDuration:actionHandler:
setShouldDisableIdleTimer:
numberWithDouble:
sharedInstance
newAssertionToDisableIdleTimerForReason:
restart
setLoadingDuration:
shouldDisableIdleTimer
setActionHandler:
idleTimerAssertion
setIdleTimerAssertion:
_shouldDisableIdleTimer
_loadingDuration
_completionHandler
_actionHandler
_idleTimerAssertion
kind
source
destinationDisplayMode
isAboveBandwidthThreshold
tvda_aggregatorKind
sharedAggregateDictionary
isAdvertisingHDMI2
incrementKey:
currentDisplayMode
dynamicRange
initWithPresentationRequest:
recordRevert
recordConfirmUpgradedMode
recordReset
recordInsufficientNetworkBandwidthWarning
recordNetworkInterferenceWarning
_aggKind
_aggDictionary
_advertisingHDMI2
internalDescriptionLabel
superview
runningAnInternalBuild
setTranslatesAutoresizingMaskIntoConstraints:
yellowColor
setTextColor:
preferredFontForTextStyle:
setFont:
setNumberOfLines:
view
addSubview:
leadingAnchor
constraintEqualToAnchor:constant:
setActive:
topAnchor
viewDidLoad
initWithActivityIndicatorStyle:
whiteColor
setColor:
centerXAnchor
constraintEqualToAnchor:
centerYAnchor
loadingStep
setText:
setLineBreakMode:
setTextAlignment:
bottomAnchor
setTitleLabel:
startAnimating
setSpinnerView:
_handleMenuPress:
initWithTarget:action:
numberWithInteger:
arrayWithObjects:count:
setAllowedPressTypes:
addGestureRecognizer:
viewWillDisappear:
initWithLoadingStep:completion:
spinnerView
titleLabel
_loadingStep
_internalDescriptionLabel
_spinnerView
_titleLabel
initWithStep:
displayMode
setDisplayMode:
step
setStep:
_displayMode
_step
initWithNibName:bundle:
addObserver:forKeyPath:options:context:
steps
removeObserver:forKeyPath:context:
dealloc
presentationRequest
sourceDisplayMode
setNavigationBarHidden:
_initialiseStateMachine
_startFromFirstStep
viewDidAppear:
count
_dismissDisplayAssistant
setViewControllers:animated:
firstObject
_updateInternalLabelIfNeededForViewController:
pushViewController:animated:
initWithName:initialState:mode:
setLogObject:
objectForKeyedSubscript:
_attemptToRunMeasurement:
_pushViewControllerForStep:
currentState
registerDefaultHandlerForEvent:withBlock:
_enqueueMeasurement:
registerHandlerForEvent:onStates:withBlock:
_nextStepByAdvancing
postEvent:withContext:userInfo:
queuedMeasurements
currentMeasurement
_goBackToPreviousStepForAction:
measureWithCompletion:
_nextStepFromCalculatingMeasurements
_measure:
setCurrentMeasurement:
_pushSpinnerViewController
_executeNextQueuedMeasurerIfAny
assistantKind
makeHDRBuddyRevertSteps
makeUpgradeRevertStepsWithDestinationMode:
mutableCopy
setSteps:
setCurrentStepIndex:
makeInconclusiveCableWarningSteps
updateDisplayWithMode:reason:error:
setShouldAcceptEvents:
objectAtIndexedSubscript:
from:to:
makeUpgradeStepsWithModeSwitch:
makeHDRBuddyStepsWithModeSwitch:
makeCableCheckStepsWithModeSwitch:
makeRegionChangeStepsWithModeSwitch:
makeVerifyModeStepsWithModeSwitch:
makeVirtualModeSwitchStepsWithModeSwitch:
makeRealModeSwitchStepsWithModeSwitch:
makePoorCableWarningStepsWithDestinationMode:
dictionaryWithObjects:forKeys:count:
measurementTitle
removeObjectAtIndex:
stateMachine
_runAction:
takenMeasurements
setObject:forKey:
resultFromMeasurements:
makeNetworkFailureSteps
makeCableFailureSteps
lastCablePollStatus
detectedPoorCableConnection
makeCableCautiousSuccessSteps
makeCableSuccessSteps
removeCableCheckHistory
viewControllers
removeLastObject
popToViewController:animated:
setNumVideoResetSeenInCableCheck:
topViewController
initWithStep:actionFlowHandler:
delegate
navigationControllerDidComplete:
localizedDisplayString
objectForKey:
initWithDomain:code:userInfo:
numVideoResetSeenInCableCheck
observeValueForKeyPath:ofObject:change:context:
assistantSource
setStateMachine:
setQueuedMeasurements:
currentStepIndex
setTakenMeasurements:
setPresentationRequest:
_reporter
_seenStepDisplayModePairs
_numVideoResetSeenInCableCheck
_stateMachine
_steps
_queuedMeasurements
_currentMeasurement
_currentStepIndex
_takenMeasurements
_presentationRequest
bundleWithIdentifier:
resolution
stringWithFormat:
refreshRate
localizedStringWithFormat:
SDRChromaSubsampling
HDR10ChromaSubsampling
SDRColorMapping
tvda_localizedStringForChange:detailedFormat:
initWithSource:destination:
destination
isVirtual
isVirtualModeSwitch
change
_source
_destination
setUseDisplayModeAsDefaultForNextWake:
updateDisplayWithMode:reason:configureRequest:error:
initWithMeasurementType:
setUpgradeDisplayModeToNonVirtual:
setWriteDisplayModeToDisk:
addObjectsFromArray:
fallbackDisplayMode
numberWithBool:
setUserInfo:
makeUpgradeRevertStepsWithDestinationMode:noSupportKind:
makePostModeSwitchStepsWithModeSwitch:
applicationDidFinishLaunching:
application:willFinishLaunchingWithOptions:
application:didFinishLaunchingWithOptions:
applicationDidBecomeActive:
applicationWillResignActive:
application:handleOpenURL:
application:openURL:sourceApplication:annotation:
application:openURL:options:
applicationDidReceiveMemoryWarning:
applicationWillTerminate:
applicationSignificantTimeChange:
application:willChangeStatusBarOrientation:duration:
application:didChangeStatusBarOrientation:
application:willChangeStatusBarFrame:
application:didChangeStatusBarFrame:
application:didRegisterUserNotificationSettings:
application:didRegisterForRemoteNotificationsWithDeviceToken:
application:didFailToRegisterForRemoteNotificationsWithError:
application:didReceiveRemoteNotification:
application:didReceiveLocalNotification:
application:handleActionWithIdentifier:forLocalNotification:completionHandler:
application:handleActionWithIdentifier:forRemoteNotification:withResponseInfo:completionHandler:
application:handleActionWithIdentifier:forRemoteNotification:completionHandler:
application:handleActionWithIdentifier:forLocalNotification:withResponseInfo:completionHandler:
application:didReceiveRemoteNotification:fetchCompletionHandler:
application:performFetchWithCompletionHandler:
application:performActionForShortcutItem:completionHandler:
application:handleEventsForBackgroundURLSession:completionHandler:
application:handleWatchKitExtensionRequest:reply:
applicationShouldRequestHealthAuthorization:
application:handleIntent:completionHandler:
applicationDidEnterBackground:
applicationWillEnterForeground:
applicationProtectedDataWillBecomeUnavailable:
applicationProtectedDataDidBecomeAvailable:
application:supportedInterfaceOrientationsForWindow:
application:shouldAllowExtensionPointIdentifier:
application:viewControllerWithRestorationIdentifierPath:coder:
application:shouldSaveSecureApplicationState:
application:shouldRestoreSecureApplicationState:
application:willEncodeRestorableStateWithCoder:
application:didDecodeRestorableStateWithCoder:
application:shouldSaveApplicationState:
application:shouldRestoreApplicationState:
application:willContinueUserActivityWithType:
application:continueUserActivity:restorationHandler:
application:didFailToContinueUserActivityWithType:error:
application:didUpdateUserActivity:
application:userDidAcceptCloudKitShareWithMetadata:
application:configurationForConnectingSceneSession:options:
application:didDiscardSceneSessions:
window
setWindow:
_window
initWithDisplayMode:reason:
userInfo
setObject:forKeyedSubscript:
updateDisplayManagerWithRequest:errror:
displayAssistantDidStartForKind:
displayAssistantDidCompleteForKind:
notifyDisplayAssistantStartForKind:
notifyDisplayAssistantCompletionForKind:
enableNetworkManagement
setupNetworkMonitoring
setModalPresentationStyle:
setDelegate:
presentViewController:animated:completion:
makeKeyWindow
viewServiceBeginPresentationWithOptions:
viewServiceEndPresentationWithOptions:completion:
_exportedInterface
viewServiceBeginPresentationWithOptions:completion:
viewServiceUpdatePresentationWithOptions:
viewServiceHandleMessage:reply:
interfaceWithProtocol:
setWithObjects:
setClasses:forSelector:argumentIndex:ofReply:
dismissWithResult:
_remoteViewControllerProxy
dismissViewControllerAnimated:completion:
initialize
_remoteViewControllerInterface
navigationController:willShowViewController:animated:
navigationController:didShowViewController:animated:
navigationControllerSupportedInterfaceOrientations:
navigationControllerPreferredInterfaceOrientationForPresentation:
navigationController:interactionControllerForAnimationController:
navigationController:animationControllerForOperation:fromViewController:toViewController:
tvda_setKey:
tvda_key
localizedStringForKey:value:table:
compareIdeal:withActual:
measurementType
measureQualityWithCompletion:
_measurementTitle
_measurementType
wakeDisplay:
sleepDisplay:
initWithTitle:text:footers:
setShouldDismissAutomatically:
_triggerActionHandlerWithAction:
buttonWithTitle:type:handler:
addButton:
_handleActionTimerStatusChange:
setPreferredButton:
actionFlowHandler
setTitle:animated:
setActionFlowHandler:
_timerButton
_initialTimerButtonTitle
_actionFlowHandler
Could not execute handler for action %{public}@ error: %{public}@
Force Running Handlers...
Could not start loading step "%{public}@": %{public}@
Presenting Display Assistant with no steps. Dismissing...
No measurements taken: %{public}@
Mode switching failed, taking the revert path out of Display Assistant. Error: %{public}@
%{public}@
Could not revert to source mode. Error: %{public}@
Dequeuing measure "%{public}@"
Enqueuing measure "%{public}@"
No measurement to take, running action
No measurement to take
Result from measurements %{public}lu
Unknown error measuring in Display Assistant
Poor cable connection detected in flow (%ld), warning users
CC: Good cable connection detected afer a bad cable, letting users know we will continue to monitor
CC: Good cable connection detected
Cannot go back to previous step, breadcrumb trail is wrong for %{public}@. We are expecting %{public}@
Resetting Cable Check timer due to an unexpected video start. This is #%i
This mode does not have chroma %{public}@
This mode does not have a valid SDR color mapping %{public}@
Invalid TVDAModeSwitchChange %{public}@
makeVerifyModeStepsWithModeSwitch Error: %{public}@
%s - %{public}@
Presenting Display Assistant VC
Ending Display Assistant VC
We have not gotten enough measurements yet we finished the DA flow!
TVSWiFiQualityMeasurement: began measuring "%{public}@"
TVSWiFiQualityMeasurement: completed measuring "%{public}@"
Could not toggle the display, error: %{public}@
v16@?0@"NSTimer"8
<%@: %p> "%@"
hash
TQ,R
superclass
T#,R
description
T@"NSString",R,C
debugDescription
measurement
T@"<TVDAMeasurement>",R,N
handlers
T@"NSMutableArray",&,N,V_handlers
timerStatusHandlers
T@"NSMutableArray",&,N,V_timerStatusHandlers
timer
T@"NSTimer",&,N,V_timer
T@"<TVDAMeasurement>",&,N,V_measurement
title
T@"NSString",R,C,N,V_title
flow
Tq,R,N,V_flow
idleSecondsToTrigger
Td,N,V_idleSecondsToTrigger
T@"NSString",R,C,N
actions
T@"NSArray",R,C,N
menuBehavior
Tq,N
T@"NSString",C,N,V_title
mutableActions
T@"NSMutableArray",C,N,V_mutableActions
subtitle
T@"NSString",R,C,N,V_subtitle
footer
T@"NSString",R,C,N,V_footer
appleSupportFooter
T@"NSString",R,C,N,V_appleSupportFooter
preferredAction
T@"TVDAStepAction",&,N,V_preferredAction
hasActionWithTimer
TB,R,N,V_hasActionWithTimer
Tq,N,V_menuBehavior
B20@?0B8^@12
completionHandler
T@?,C,N,V_completionHandler
actionHandler
T@?,C,N,V_actionHandler
idleTimerAssertion
T@"<BSInvalidatable>",&,N,V_idleTimerAssertion
loadingDuration
Td,N,V_loadingDuration
shouldDisableIdleTimer
TB,N,V_shouldDisableIdleTimer
com.apple.displayassistant.oob_revert_hdmi_1_4
com.apple.displayassistant.oob_revert_hdmi_2_0
com.apple.displayassistant.oob_success_dolby_hdmi_1_4
com.apple.displayassistant.oob_success_hdr_hdmi_1_4
com.apple.displayassistant.oob_success_dolby_hdmi_2_0
com.apple.displayassistant.oob_success_hdr_hdmi_2_0
com.apple.displayassistant.oob_success_sdr_hdmi_2_0
com.apple.displayassistant.manual_revert_hdmi_1_4
com.apple.displayassistant.manual_revert_hdmi_2_0
com.apple.displayassistant.manual_success_dolby_hdmi_1_4
com.apple.displayassistant.manual_success_hdr_hdmi_1_4
com.apple.displayassistant.manual_success_dolby_hdmi_2_0
com.apple.displayassistant.manual_success_hdr_hdmi_2_0
com.apple.displayassistant.manual_success_sdr_hdmi_2_0
com.apple.displayassistant.manual_reset
com.apple.displayassistant.cross_bandwidth_revert_hdmi_1_4
com.apple.displayassistant.cross_bandwidth_revert_hdmi_2_0
com.apple.displayassistant.cross_bandwidth_success_dolby_hdmi_1_4
com.apple.displayassistant.cross_bandwidth_success_hdr_hdmi_1_4
com.apple.displayassistant.cross_bandwidth_success_dolby_hdmi_2_0
com.apple.displayassistant.cross_bandwidth_success_hdr_hdmi_2_0
com.apple.displayassistant.cross_bandwidth_success_sdr_hdmi_2_0
com.apple.displayassistant.warned_insufficient_network_bandwidth_dolby
com.apple.displayassistant.warned_insufficient_network_bandwidth_hdr
com.apple.displayassistant.warned_insufficient_network_bandwidth_sdr
com.apple.displayassistant.warned_network_interference_dolby
com.apple.displayassistant.warned_network_interference_hdr
com.apple.displayassistant.warned_network_interference_sdr
v16@?0@"NSError"8
internalDescriptionLabel
T@"UILabel",R,N
spinnerView
T@"UIActivityIndicatorView",&,N,V_spinnerView
titleLabel
T@"UILabel",&,N,V_titleLabel
loadingStep
T@"TVDALoadingStep",R,N,V_loadingStep
T@"UILabel",R,N,V_internalDescriptionLabel
Initial
IdleState
BackgroundMeasuringState
ForegroundMeasuringState
ModeSwitchErrorState
KickOffEvent
DismissAssistantEvent
ContinueToNextStepEvent
GoToPreviousStepEvent
CompleteSeriesOfStepsEvent
TooManyVideoDropsEvent
RestoreDefaultModeEvent
ReceivedNextStepActionEvent
AttemptingToStartMeasuringEvent
StartMeasuringEvent
StopMeasuringEvent
ModeSwitchFailedEvent
MeasurerKey
ErrorKey
ForceDismissContext
displayMode
T@"PBSDisplayMode",C,N,V_displayMode
step
T@"<TVDAStep>",&,N,V_step
currentDisplayMode
@"NSString"40@?0@"TVSStateMachine"8@"NSString"16@24@"NSDictionary"32
Reverting to source mode after seeing too many video stop / start events
Reverting to source mode on a TVDAStepActionFlowRevertModeSwitch
v16@?0@"NSArray"8
v8@?0
Reverting to source mode because of a MENU dismissal (going backwards)
Reverting to the mode in the previous step (going backwards)
v16@?0@"TVDAStepAction"8
v12@?0B8
Current Mode: %@
Please file a radar on Apple TV | New Bugs if you believe that this assistant is:
- alerting you of non-existing problems
- not alerting you of existing problems
Unexpected switch to mode %@ when trying %@
Too many (%i) video start/stop events during Cable Check.
stateMachine
T@"TVSStateMachine",&,N,V_stateMachine
steps
T@"NSMutableArray",&,N,V_steps
queuedMeasurements
T@"NSMutableArray",&,N,V_queuedMeasurements
currentMeasurement
T@"<TVDAMeasurable>",&,N,V_currentMeasurement
currentStepIndex
TQ,N,V_currentStepIndex
takenMeasurements
T@"NSMutableDictionary",&,N,V_takenMeasurements
presentationRequest
T@"PBSDisplayAssistantPresentationRequest",&,N,V_presentationRequest
sourceDisplayMode
T@"PBSDisplayMode",R,N
destinationDisplayMode
assistantKind
Tq,R,N
assistantSource
numVideoResetSeenInCableCheck
Ti,N,V_numVideoResetSeenInCableCheck
delegate
T@"<TVDANavigationControllerDelegate>",W,D,N
@"NSString"16@?0q8
Chroma444
com.apple.TVDisplayAssistant
Localizable
Chroma422
Chroma420
UHDResolution
%zup
%zu x %zu
@"NSString"8@?0
DolbyVisionFormat
DolbyVision
HDRFormat
SDRFormat
YCbCr
RGBHigh
RGBLow
HighDefinitionVideo
source
T@"PBSDisplayMode",R,N,V_source
destination
T@"PBSDisplayMode",R,N,V_destination
isVirtualModeSwitch
TB,R
InitialHeader
HDRBuddyInitialSubtitle
AppleSupportFooter
HDRBuddyInitialTryButtonTitle
Trying HDR in HDR Buddy
v16@?0@"PBSDisplayManagerUpdateRequest"8
NotNowButton
HDRBuddyCanSeeHDR10Header
HDRBuddyCanSeeHDR10Subtitle
OKButtonTitle
Confirming HDR in HDR Buddy
CancelButtonTitle
Reverting to source mode in HDR Buddy
TryUpgradeInitialSubtitleFormat
TryUpgradeDolbyInitialTryButtonTitle
TryUpgradeInitialTryButtonTitle
Trying an upgraded mode in the Upgrade Buddy
TryUpgradeCanSeeHeaderFormat
TryUpgradeCanSeeSubtitle
Confirming an upgraded mode in the Upgrade Buddy
Reverting to the fallback or source mode in the Upgrade Buddy
CableCheckInitialHeader
CableCheckInitialSubtitle
CableCheckInitialTryButtonTitle
Testing mode in Cable Check
CableCheckLoadingTitle
Reverting to the source mode in Cable Check
VerifyModeSwitchInitialHeaderFormat
VerifyModeSwitchInitialSubtitle
Trying a mode for Content Match
PostVerifyModeSwitchCanSeeHeaderFormat
PostVerifyModeSwitchCanSeeSubtitle
Confirming a mode for Content Match
Returning to the source mode after a Content Match confirmation
Reverting a failed mode for Content Match
VerifyModeSwitchNoSupportPreviousHeader
VerifyModeSwitchNoSupportPreviousSubtitle
VirtualModeSwitchInitialHeader
VirtualModeSwitchInitialSubtitle
VirtualModeSwitchInitialTryButtonTitle
Trying a virtual mode
PostModeSwitchCanSeeHeaderFormat
PostModeSwitchCanSeeSubtitle
Confirming a manual user mode switch
Reverting from a failed a manual user mode switch
TryUpgradeNoSupportPreviousHeader
PostModeSwitchRevertSubtitle
HDRBuddyNoSupportHeader
HDRBuddyNoSupportSubtitle
CableCheckNoSupportSameModeHeader
CableCheckNoSupportSameModeSubtitle
TryUpgradeNoSupportCompatibleHeader
TryUpgradeNoSupportSubtitleFormat
YouGotGoodCableHeader
YouGotGoodCableSubtitle
MaybeYouGotGoodCableHeader
MaybeYouGotGoodCableSubtitle
NetworkNo4KForYouHeader
NetworkNo4KForYouSubtitle
CableNo4KForYouHeader
CableNo4KForYouSubtitle_WIFI
RegionModeSwitchInitialHeader
RegionModeSwitchInitialSubtitle
RegionModeSwitchInitialTryButtonTitle
Try a region specific mode
RegionModeSwitchInitialCancelButtonTitle
RegionModeSwitchCanSeeHeader
RegionModeSwitchCanSeeSubtitle
Confirming a region specific mode
Reverting from a failed region specific mode
PoorCable4KSubtitle
PoorCableSubtitleFormat
PoorCableHeader
InconclusiveCableHeader
InconclusiveCableSubtitle
com.apple.appletv.DisplayAssistant
com.apple.appletv.DisplayAssistant.stateMachine
window
T@"UIWindow",&,N
T@"UIWindow",&,N,V_window
+[TVDADisplayUpdater updateDisplayWithMode:reason:configureRequest:error:]
com.apple.TVDisplayAssistant.errors
com.apple.tvdisplayassistant.strkey
TVDANetworkMeasurementTypeBase
TVDANetworkMeasurementTypeIdeal
TVDANetworkMeasurementTypeFinal
measurementTitle
measurementType
T@"NSString",R,C,N,V_measurementType
T@"NSString",R,C,N,V_measurementTitle
v24@?0@"NSDictionary"8@"NSError"16
v16@?0d8
MENU press
CancelTimerButtonTitleFormat
actionFlowHandler
T@?,C,N,V_actionFlowHandler
T@"TVDAUserStep",R,N,V_step
TVDAStepAction
TVDAMeasurable
NSObject
NSCopying
TVDAUserStep
TVDAStep
TVDALoadingStep
TVDADataReporter
TVDASpinnerViewController
TVDAInternalStepViewControllerDescribing
_TVDAStepDisplayModePair
TVDANavigationController
TVDAStepsFactory
TVDAModeSwitch
TVDAAppDelegate
UIApplicationDelegate
TVDADisplayUpdater
PBSViewServicePresenter
PBSViewServiceInterface
TVDAViewController
TVDANavigationControllerDelegate
UINavigationControllerDelegate
TVDisplayAssistant
TVDAWiFiQualityMeasurement
TVDAMeasurement
TVDAStepAlertController
B24@0:8@16
#16@0:8
@16@0:8
@24@0:8:16
@32@0:8:16@24
@40@0:8:16@24@32
B16@0:8
B24@0:8#16
B24@0:8:16
Vv16@0:8
Q16@0:8
^{_NSZone=}16@0:8
B24@0:8@"Protocol"16
@"NSString"16@0:8
@24@0:8^{_NSZone=}16
@"<TVDAMeasurement>"16@0:8
@40@0:8@16q24@?32
v24@0:8@?16
v16@0:8
q16@0:8
d16@0:8
v24@0:8d16
v24@0:8@16
@"NSString"
@"NSMutableArray"
@"NSTimer"
@"<TVDAMeasurement>"
v24@0:8q16
@"NSArray"16@0:8
@48@0:8@16@24@32@40
@"TVDAStepAction"
@40@0:8@16d24@?32
v20@0:8B16
@?16@0:8
@"<BSInvalidatable>"
@24@0:8@16
@"CPAggregateDictionary"
@"UILabel"16@0:8
@32@0:8@16@?24
@"TVDALoadingStep"
@"UILabel"
@"UIActivityIndicatorView"
@"PBSDisplayMode"
@"<TVDAStep>"
v28@0:8@16B24
v48@0:8@16@24@32^v40
v24@0:8Q16
i16@0:8
v20@0:8i16
@"TVDADataReporter"
@"TVSStateMachine"
@"<TVDAMeasurable>"
@"NSMutableDictionary"
@"PBSDisplayAssistantPresentationRequest"
@28@0:8q16B24
@32@0:8@16@24
@32@0:8@16q24
B32@0:8@16@24
B48@0:8@16@24@32@40
B40@0:8@16@24@32
v40@0:8@16q24d32
v32@0:8@16q24
v56@0:8@16{CGRect={CGPoint=dd}{CGSize=dd}}24
v32@0:8@16@24
v48@0:8@16@24@32@?40
v56@0:8@16@24@32@40@?48
v40@0:8@16@24@?32
v32@0:8@16@?24
Q32@0:8@16@24
@40@0:8@16@24@32
B40@0:8@16@24@?32
v40@0:8@16@24@32
v24@0:8@"UIApplication"16
B32@0:8@"UIApplication"16@"NSDictionary"24
B32@0:8@"UIApplication"16@"NSURL"24
B48@0:8@"UIApplication"16@"NSURL"24@"NSString"32@40
B40@0:8@"UIApplication"16@"NSURL"24@"NSDictionary"32
v40@0:8@"UIApplication"16q24d32
v32@0:8@"UIApplication"16q24
v56@0:8@"UIApplication"16{CGRect={CGPoint=dd}{CGSize=dd}}24
v32@0:8@"UIApplication"16@"UIUserNotificationSettings"24
v32@0:8@"UIApplication"16@"NSData"24
v32@0:8@"UIApplication"16@"NSError"24
v32@0:8@"UIApplication"16@"NSDictionary"24
v32@0:8@"UIApplication"16@"UILocalNotification"24
v48@0:8@"UIApplication"16@"NSString"24@"UILocalNotification"32@?<v@?>40
v56@0:8@"UIApplication"16@"NSString"24@"NSDictionary"32@"NSDictionary"40@?<v@?>48
v48@0:8@"UIApplication"16@"NSString"24@"NSDictionary"32@?<v@?>40
v56@0:8@"UIApplication"16@"NSString"24@"UILocalNotification"32@"NSDictionary"40@?<v@?>48
v40@0:8@"UIApplication"16@"NSDictionary"24@?<v@?Q>32
v32@0:8@"UIApplication"16@?<v@?Q>24
v40@0:8@"UIApplication"16@"UIApplicationShortcutItem"24@?<v@?B>32
v40@0:8@"UIApplication"16@"NSString"24@?<v@?>32
v40@0:8@"UIApplication"16@"NSDictionary"24@?<v@?@"NSDictionary">32
v40@0:8@"UIApplication"16@"INIntent"24@?<v@?@"INIntentResponse">32
Q32@0:8@"UIApplication"16@"UIWindow"24
B32@0:8@"UIApplication"16@"NSString"24
@"UIViewController"40@0:8@"UIApplication"16@"NSArray"24@"NSCoder"32
B32@0:8@"UIApplication"16@"NSCoder"24
v32@0:8@"UIApplication"16@"NSCoder"24
B40@0:8@"UIApplication"16@"NSUserActivity"24@?<v@?@"NSArray">32
v40@0:8@"UIApplication"16@"NSString"24@"NSError"32
v32@0:8@"UIApplication"16@"NSUserActivity"24
v32@0:8@"UIApplication"16@"CKShareMetadata"24
@"UISceneConfiguration"40@0:8@"UIApplication"16@"UISceneSession"24@"UISceneConnectionOptions"32
v32@0:8@"UIApplication"16@"NSSet"24
@"UIWindow"16@0:8
v24@0:8@"UIWindow"16
@"UIWindow"
B40@0:8@16@24^@32
B48@0:8@16@24@?32^@40
v24@0:8@"NSDictionary"16
v32@0:8@"NSDictionary"16@?<v@?>24
@"NSXPCInterface"16@0:8
v32@0:8@"NSDictionary"16@?<v@?@"<NSSecureCoding>"@"NSError">24
v24@0:8@"<NSSecureCoding>"16
v36@0:8@16@24B32
Q24@0:8@16
q24@0:8@16
@48@0:8@16q24@32@40
v36@0:8@"UINavigationController"16@"UIViewController"24B32
Q24@0:8@"UINavigationController"16
q24@0:8@"UINavigationController"16
@"<UIViewControllerInteractiveTransitioning>"32@0:8@"UINavigationController"16@"<UIViewControllerAnimatedTransitioning>"24
@"<UIViewControllerAnimatedTransitioning>"48@0:8@"UINavigationController"16q24@"UIViewController"32@"UIViewController"40
v24@0:8@"TVDANavigationController"16
v24@0:8@?<v@?@"NSError">16
@"TVSUITextAlertButton"
@"TVDAUserStep"
<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE plist PUBLIC "-//Apple//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd">
<plist version="1.0">
<dict>
<key>com.apple.SystemConfiguration.SCDynamicStore-write-access</key>
<true/>
<key>com.apple.SystemConfiguration.SCPreferences-write-access</key>
<array>
<string>com.apple.wifi.plist</string>
<string>preferences.plist</string>
<string>com.apple.network.identification.plist</string>
</array>
<key>com.apple.UIKit.vends-view-services</key>
<true/>
<key>com.apple.appletv.pbs.display-manager-service-access</key>
<true/>
<key>com.apple.idle-timer-services</key>
<true/>
<key>com.apple.private.security.no-sandbox</key>
<true/>
<key>com.apple.security.exception.shared-preference.read-write</key>
<array>
<string>com.apple.appletvservices</string>
</array>
<key>com.apple.wifi.manager-access</key>
<true/>
</dict>
</plist>
