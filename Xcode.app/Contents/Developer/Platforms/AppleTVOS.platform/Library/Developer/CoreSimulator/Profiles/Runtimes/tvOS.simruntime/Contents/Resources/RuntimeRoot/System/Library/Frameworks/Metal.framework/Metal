%@%@
-[MTLTileRenderPipelineColorAttachmentDescriptorArrayInternal objectAtIndexedSubscript:]
attachmentIndex(%lu) must be < %lu
-[MTLTileRenderPipelineColorAttachmentDescriptorArrayInternal setObject:atIndexedSubscript:]
attachment is not a MTLTileRenderPipelineColorAttachmentDescriptor.
label =
<none>
Raster Sample Count =
Tile Function =
threadgroupSizeMatchesTileSize =
true
false
colorSampleCount =
maxTotalThreadsPerThreadgroup =
textureWriteRoundingMode =
Color Attachment %u:
Buffer %u:
linkedFunction =:
-[MTLTileRenderPipelineDescriptorInternal setLabel:]
label must not be nil.
label is not a NSString.
-[MTLTileRenderPipelineDescriptorInternal setTileFunction:]
tileFunction is not a MTLFunction.
-[MTLTileRenderPipelineDescriptorInternal setMaxTotalThreadsPerThreadgroup:]
max total threads must be less than or equal to %d.
-[MTLTileRenderPipelineDescriptorInternal setLinkedFunctions:]
linkedFunctions is not a MTLLinkedFunctions.
rasterSampleCount (%lu) is not supported by device.
PipelineError
pixelFormat =
validateMTLPixelFormat
pixelFormat is not a valid MTLPixelFormat.
validateWithDevice
Tile Render Pipeline Descriptor Validation
tileFunction must not be nil
tileFunction is associated with a different device
function %s cannot be used to build a pipeline state without setting constant values first.
colorSampleCount expected to be smaller or equal to rasterSampleCount
rasterSampleCount expected to be greater or equal to colorSampleCount
colorSampleCount (%lu) is not supported by device.
colorSampleCount expected to be 0.
device does not support %@
MTLTileRenderPipelineDescriptor color render target(%lu) exceeds platform max(%lu).
pixelFormat, for color render target(%lu), is not a valid MTLPixelFormat.
pixelFormat, for color render target(%lu), %s is not color renderable.
This set of render targets requires %lu bytes of pixel storage. This device supports %lu bytes.
load
store
unknown
atomic_load
atomic_store
atomic_exchange
atomic_fetch_or
atomic_fetch_add
atomic_fetch_and
atomic_fetch_max
atomic_fetch_min
atomic_fetch_sub
atomic_fetch_xor
atomic_compare_exchange
<unknown>
%@:%u:%u - %@()
-[MTLBufferLayoutDescriptorArrayInternal objectAtIndexedSubscript:]
bufferIndex(%lu) must be < %lu.
-[MTLBufferLayoutDescriptorArrayInternal setObject:atIndexedSubscript:]
bufferDesc is not a MTLVertexBufferLayoutDescriptor.
-[MTLAttributeDescriptorInternal setBufferIndex:]
buffer index (%lu) must be < %lu.
-[MTLAttributeDescriptorArrayInternal objectAtIndexedSubscript:]
vertex attribute index (%lu) must be < %lu.
-[MTLAttributeDescriptorArrayInternal setObject:atIndexedSubscript:]
attributeDesc is not a MTLVertexAttributeDescriptor.
-[MTLStageInputOutputDescriptorInternal newSerializedDescriptor]
Serialized Descriptor Creation
None of the attributes set bufferIndex to %d, but %s set buffer layout[%d].stride(%lu).
MTLStageInputOutputDescriptor
-[MTLStageInputOutputDescriptorInternal validateWithVertexFunction:error:renderPipelineDescriptor:]
Vertex Descriptor Validation
Vertex attribute %@(%d) is missing from the vertex descriptor
Vertex attribute %@(%d) of type %s cannot be read using %@
MTLIndexTypeUInt16
MTLIndexTypeUInt32
Unknown
MTLStageInputOutputDescriptorDescription
bufferIndex < MTL_MAX_VERTEX_BUFFERS
Buffer %lu:
stepFunction =
stepRate =
stride =
Attribute %u:
offset =
format =
IndexType: %@
IndexBufferIndex: %lu
Attribute at index %d references a buffer at index %lu that has no stride.
stepFunction is not a valid MTLStepFunction.
stepRate(%lu) must be zero if stepFunction is MTLStepFunctionConstant.
stepRate(%lu) cannot be zero if stepFunction is %@.
invalid stepFunction value
CompilerError
MTLStepFunctionConstant
MTLStepFunctionPerVertex
MTLStepFunctionPerInstance
MTLStepFunctionPerPatch
MTLStepFunctionPerPatchControlPoint
MTLStepFunctionThreadPositionInGridX
MTLStepFunctionThreadPositionInGridY
MTLStepFunctionThreadPositionInGridXIndexed
MTLStepFunctionThreadPositionInGridYIndexed
MTLFunction
MTLComputePipelineDescriptor
library
index
MTLRenderPipelineDescriptor
MTLLibrary
type
name
fileName
isFromSource
specialized
allocator<T>::allocate(size_t n) 'n' exceeds maximum supported size
baseFunction
constants
computeFunction
threadGroupSizeIsMultipleOfThreadExecutionWidth
label
stageInputDescriptor
required featureSets
excluded featureSets
buffers
supportIndirectCommandBuffers
maxTotalThreadsPerThreadgroup
insertLibraries
textureWriteRoundingMode
preloadedLibraries
vertexFunction
fragmentFunction
vertexDescriptor
sampleCount
alphaToCoverageEnabled
alphaToOneEnabled
rasterizationEnabled
colorAttachments
depthAttachmentPixelFormat
stencilAttachmentPixelFormat
inputPrimitiveTopology
tessellationPartitionMode
maxTessellationFactor
tessellationFactorScaleEnabled
tessellationFactorFormat
tessellationControlPointIndexType
tessellationFactorStepFunction
tessellationOutputWindingOrder
vertexBuffers
fragmentBuffers
sampleCoverage
sampleMask
vertexPreloadedLibraries
fragmentPreloadedLibraries
attributes
layouts
indexType
indexBufferIndex
format
offset
bufferIndex
stepFunction
stepRate
stride
pixelFormat
blendingEnabled
sourceRGBBlendFactor
destinationRGBBlendFactor
rgbBlendOperation
sourceAlphaBlendFactor
destinationAlphaBlendFactor
alphaBlendOperation
writeMask
dataType
value
width
height
depth
mutability
FS_CACHE_REUSE_ON_REBOOT
MTL_SHADER_CACHE_SIZE
FS_CACHE_SIZE
CacheSerialQueue
fscache hash
%s/%s
%s/%s%u
v8@?0
failed to remove file %@ from the shader cache destination path
failed to copy %@ to %@ which copy Metal shader cache
flushElement
pipelineCache Queue
%s.tmp
Failed to open: %s
Failed to write to: %s
com.apple.metal
MTLCreateStructTypeFromArgumentDescriptors
dataType (%@) is not a valid data type
Constant block alignment can only be set the first constant in a constant block
Invalid argument type at index %lu
v24@?0@"MTLStructType"8Q16
-[_MTLIndirectArgumentEncoder setFunctionPointer:atIndex:]
Unreachable code
-[_MTLIndirectArgumentEncoder setFunctionPointers:withRange:]
-[_MTLIndirectArgumentEncoder setBuffer:offset:atIndex:]
-[_MTLIndirectArgumentEncoder setBuffers:offsets:withRange:]
-[_MTLIndirectArgumentEncoder setTexture:atIndex:]
-[_MTLIndirectArgumentEncoder setTextures:withRange:]
-[_MTLIndirectArgumentEncoder setSamplerState:atIndex:]
-[_MTLIndirectArgumentEncoder setSamplerStates:withRange:]
-[_MTLIndirectArgumentEncoder setRenderPipelineState:atIndex:]
-[_MTLIndirectArgumentEncoder setRenderPipelineStates:withRange:]
-[_MTLIndirectArgumentEncoder setComputePipelineState:atIndex:]
-[_MTLIndirectArgumentEncoder setComputePipelineStates:withRange:]
-[_MTLIndirectArgumentEncoder setIndirectCommandBuffer:atIndex:]
-[_MTLIndirectArgumentEncoder setIndirectCommandBuffers:withRange:]
-[_MTLIndirectArgumentEncoder constantDataAtIndex:]
assignArgumentIndices
Unexpected data type in indirect argument buffer
countArgument
-[MTLEmulationIndirectArgumentBufferLayout uniqueIdentifierForRenderPipelineAtIndex:inIndirectArgumentBuffer:atOffset:]
Setting a pipeline is not supported on this hardware
-[MTLEmulationIndirectArgumentBufferLayout uniqueIdentifierForComputePipelineAtIndex:inIndirectArgumentBuffer:atOffset:]
-[MTLEmulationIndirectArgumentBufferLayout offsetForBuffer:]
Invalid ID: %lu
-[MTLEmulationIndirectArgumentBufferLayout offsetForTexture:]
-[MTLEmulationIndirectArgumentBufferLayout offsetForSampler:]
-[MTLEmulationIndirectArgumentBufferLayout offsetForConstant:]
MTLBinaryArchiveDomain
 (%08X%08X%08X%08X%08X%08X%08X%08X)
 (%lu bytes)
MTLBinaryArchive descriptor must not be nil.
At least one option must be set.
MTLBinaryArchive
The file %@ has an invalid format.
B48@?0{MTLLoaderSliceIdentifier=ii}8^{MTLLoaderMachOPayload=@{?=[32C]}BQ@@@@@}16Q24Q32Q40
r^v24@?0Q8Q16
count =
compute pipeline descriptor must not be nil.
render pipeline descriptor must not be nil.
tile pipeline descriptor must not be nil.
library does not contain base function '%@'
B24@?0r^{?=[32C]}8@"NSObject<OS_dispatch_data>"16
Serialization options not compatible with this binary archive
B24@?0r^v8Q16
v32@?0@"MTLBinaryKey"8@"MTLBinaryEntry"16^B24
Serialization of binaries to file failed
Serialization of archives to file failed
Output URL is invalid.
B52@?0{MTLLoaderSliceIdentifier=ii}8Q16r^{?=[32C]}24I32Q36Q44
B16@?0r^{?=[32C]}8
v24@?0@"MTLBinaryEntry"8r^{?=[32C]}16
B32@?0{MTLLoaderSliceIdentifier=ii}8Q16Q24
programObject Queue
MTLPixelFormatA8Unorm
MTLPixelFormatR8Unorm
MTLPixelFormatR8Unorm_sRGB
MTLPixelFormatR8Snorm
MTLPixelFormatR8Uint
MTLPixelFormatR8Sint
MTLPixelFormatR16Unorm
MTLPixelFormatR16Snorm
MTLPixelFormatR16Uint
MTLPixelFormatR16Sint
MTLPixelFormatR16Float
MTLPixelFormatRG8Unorm
MTLPixelFormatRG8Unorm_sRGB
MTLPixelFormatRG8Snorm
MTLPixelFormatRG8Uint
MTLPixelFormatRG8Sint
MTLPixelFormatB5G6R5Unorm
MTLPixelFormatA1BGR5Unorm
MTLPixelFormatABGR4Unorm
MTLPixelFormatBGR5A1Unorm
MTLPixelFormatR32Uint
MTLPixelFormatR32Sint
MTLPixelFormatR32Float
MTLPixelFormatRG16Unorm
MTLPixelFormatRG16Snorm
MTLPixelFormatRG16Uint
MTLPixelFormatRG16Sint
MTLPixelFormatRG16Float
MTLPixelFormatRGBA8Unorm
MTLPixelFormatRGBA8Unorm_sRGB
MTLPixelFormatRGBA8Snorm
MTLPixelFormatRGBA8Uint
MTLPixelFormatRGBA8Sint
MTLPixelFormatARGB8Unorm
MTLPixelFormatARGB8Unorm_sRGB
MTLPixelFormatBGRA8Unorm
MTLPixelFormatBGRA8Unorm_sRGB
MTLPixelFormatRGB10A2Unorm
MTLPixelFormatBGR10A2Unorm
MTLPixelFormatRGB10A2Uint
MTLPixelFormatRG11B10Float
MTLPixelFormatRGB9E5Float
MTLPixelFormatRG32Uint
MTLPixelFormatRG32Sint
MTLPixelFormatRG32Float
MTLPixelFormatRGBA16Unorm
MTLPixelFormatRGBA16Snorm
MTLPixelFormatRGBA16Uint
MTLPixelFormatRGBA16Sint
MTLPixelFormatRGBA16Float
MTLPixelFormatRGBA16Float_XR
MTLPixelFormatRGBA32Uint
MTLPixelFormatRGBA32Sint
MTLPixelFormatRGBA32Float
MTLPixelFormatBGRA4Unorm
MTLPixelFormatRGBX8Unorm
MTLPixelFormatRGBX8Unorm_sRGB
MTLPixelFormatRGBX8Snorm
MTLPixelFormatRGBX8Uint
MTLPixelFormatRGBX8Sint
MTLPixelFormatRGBX16Uint
MTLPixelFormatRGBX16Sint
MTLPixelFormatRGBX16Float
MTLPixelFormatRGBX32Uint
MTLPixelFormatRGBX32Sint
MTLPixelFormatRGBX32Float
MTLPixelFormatPVRTC_RGB_2BPP
MTLPixelFormatPVRTC_RGB_2BPP_sRGB
MTLPixelFormatPVRTC_RGB_4BPP
MTLPixelFormatPVRTC_RGB_4BPP_sRGB
MTLPixelFormatPVRTC_RGBA_2BPP
MTLPixelFormatPVRTC_RGBA_2BPP_sRGB
MTLPixelFormatPVRTC_RGBA_4BPP
MTLPixelFormatPVRTC_RGBA_4BPP_sRGB
MTLPixelFormatEAC_R11Unorm
MTLPixelFormatEAC_R11Snorm
MTLPixelFormatEAC_RG11Unorm
MTLPixelFormatEAC_RG11Snorm
MTLPixelFormatEAC_RGBA8
MTLPixelFormatEAC_RGBA8_sRGB
MTLPixelFormatETC2_RGB8
MTLPixelFormatETC2_RGB8_sRGB
MTLPixelFormatETC2_RGB8A1
MTLPixelFormatETC2_RGB8A1_sRGB
MTLPixelFormatASTC_4x2_sRGB
MTLPixelFormatASTC_4x4_sRGB
MTLPixelFormatASTC_5x4_sRGB
MTLPixelFormatASTC_5x5_sRGB
MTLPixelFormatASTC_6x5_sRGB
MTLPixelFormatASTC_6x6_sRGB
MTLPixelFormatASTC_8x4_sRGB
MTLPixelFormatASTC_8x5_sRGB
MTLPixelFormatASTC_8x6_sRGB
MTLPixelFormatASTC_8x8_sRGB
MTLPixelFormatASTC_10x5_sRGB
MTLPixelFormatASTC_10x6_sRGB
MTLPixelFormatASTC_10x8_sRGB
MTLPixelFormatASTC_10x10_sRGB
MTLPixelFormatASTC_12x10_sRGB
MTLPixelFormatASTC_12x12_sRGB
MTLPixelFormatASTC_4x2_LDR
MTLPixelFormatASTC_4x4_LDR
MTLPixelFormatASTC_5x4_LDR
MTLPixelFormatASTC_5x5_LDR
MTLPixelFormatASTC_6x5_LDR
MTLPixelFormatASTC_6x6_LDR
MTLPixelFormatASTC_8x4_LDR
MTLPixelFormatASTC_8x5_LDR
MTLPixelFormatASTC_8x6_LDR
MTLPixelFormatASTC_8x8_LDR
MTLPixelFormatASTC_10x5_LDR
MTLPixelFormatASTC_10x6_LDR
MTLPixelFormatASTC_10x8_LDR
MTLPixelFormatASTC_10x10_LDR
MTLPixelFormatASTC_12x10_LDR
MTLPixelFormatASTC_12x12_LDR
MTLPixelFormatASTC_4x2_HDR
MTLPixelFormatASTC_4x4_HDR
MTLPixelFormatASTC_5x4_HDR
MTLPixelFormatASTC_5x5_HDR
MTLPixelFormatASTC_6x5_HDR
MTLPixelFormatASTC_6x6_HDR
MTLPixelFormatASTC_8x4_HDR
MTLPixelFormatASTC_8x5_HDR
MTLPixelFormatASTC_8x6_HDR
MTLPixelFormatASTC_8x8_HDR
MTLPixelFormatASTC_10x5_HDR
MTLPixelFormatASTC_10x6_HDR
MTLPixelFormatASTC_10x8_HDR
MTLPixelFormatASTC_10x10_HDR
MTLPixelFormatASTC_12x10_HDR
MTLPixelFormatASTC_12x12_HDR
MTLPixelFormatGBGR422
MTLPixelFormatBGRG422
MTLPixelFormatDepth16Unorm
MTLPixelFormatDepth32Float
MTLPixelFormatStencil8
MTLPixelFormatDepth32Float_Stencil8
MTLPixelFormatX32_Stencil8
MTLPixelFormatYCBCR8_420_2P
MTLPixelFormatYCBCR8_422_1P
MTLPixelFormatYCBCR8_422_2P
MTLPixelFormatYCBCR8_444_2P
MTLPixelFormatYCBCR10_444_1P
MTLPixelFormatYCBCR10_420_2P
MTLPixelFormatYCBCR10_422_2P
MTLPixelFormatYCBCR10_444_2P
MTLPixelFormatYCBCR10_420_2P_PACKED
MTLPixelFormatYCBCR10_422_2P_PACKED
MTLPixelFormatYCBCR10_444_2P_PACKED
MTLPixelFormatYCBCR8_420_2P_sRGB
MTLPixelFormatYCBCR8_422_1P_sRGB
MTLPixelFormatYCBCR8_422_2P_sRGB
MTLPixelFormatYCBCR8_444_2P_sRGB
MTLPixelFormatYCBCR10_444_1P_sRGB
MTLPixelFormatYCBCR10_420_2P_sRGB
MTLPixelFormatYCBCR10_422_2P_sRGB
MTLPixelFormatYCBCR10_444_2P_sRGB
MTLPixelFormatYCBCR10_420_2P_PACKED_sRGB
MTLPixelFormatYCBCR10_422_2P_PACKED_sRGB
MTLPixelFormatYCBCR10_444_2P_PACKED_sRGB
MTLPixelFormatRGB8_420_2P
MTLPixelFormatRGB8_422_2P
MTLPixelFormatRGB8_444_2P
MTLPixelFormatRGB10_420_2P
MTLPixelFormatRGB10_422_2P
MTLPixelFormatRGB10_444_2P
MTLPixelFormatRGB10_420_2P_PACKED
MTLPixelFormatRGB10_422_2P_PACKED
MTLPixelFormatRGB10_444_2P_PACKED
MTLPixelFormatYCBCRA8_444_1P
MTLPixelFormatYCBCR8_422_1P_REV
MTLPixelFormatRGB10A8_2P_XR10
MTLPixelFormatRGB10A8_2P_XR10_sRGB
MTLPixelFormatBGRA10_XR
MTLPixelFormatBGRA10_XR_sRGB
MTLPixelFormatBGR10_XR
MTLPixelFormatBGR10_XR_sRGB
MTLPixelFormatR10Unorm_X6
MTLPixelFormatR10Unorm_X6_sRGB
MTLPixelFormatRG10Unorm_X12
MTLPixelFormatRG10Unorm_X12_sRGB
MTLPixelFormatR10Unorm_X6_PQ
MTLPixelFormatR12Unorm_X4
MTLPixelFormatR12Unorm_X4_PQ
MTLPixelFormatRG12Unorm_X8
MTLPixelFormatR10Unorm_PACKED
MTLPixelFormatRG10Unorm_PACKED
MTLPixelFormatInvalid
Unrecognized Metal Feature Set for this platform
Unrecognized Metal GPU Family
float
half
uint
short
ushort
MTLDebugValidateMTLPixelFormat
pixelFormat (%lu) is not a valid MTLPixelFormat.
name: %@; type: %@; value: %@
Name =
Type =
Value =
index: %@; type: %@; value: %@
Index =
Constant %@ (%lu) is of type %@ but value found has type %@
Constant %@ (%lu) value is required by function %@
-[MTLFunctionConstantValuesInternal setConstantValue:type:atIndex:]
Constant index (%lu) must be smaller than %u
-[MTLFunctionConstantValuesInternal setConstantValues:type:withRange:]
Constant index (%lu) must be smaller thank %u
named constants
index constants
MTLDynamicLibraryDomain
Dynamic Library Install Name
Library has no install name
MTLDynamicLibrary could not be loaded as its AIR slice is missing
MTLDynamicLibrary could not be loaded for this device from '%@'
AIR is required, but not available.
No target content was selected, unable to write empty archive.
Invalid output URL.
URL for dynamic library is nil
installName =
loadPath =
-[MTLBufferArgument bufferIndirectArgumentType]
Not supported at this point
Alignment =
DataSize =
DataType =
TextureType =
TextureDataType =
IsDepthTexture =
%s.%u
stageInBuffer
vertexBuffer
0123456789ABCDEF
MTLMutabilityDefault
MTLMutabilityMutable
MTLMutabilityImmutable
MTLRoundingModeDefault
MTLRoundingModeRTZ
MTLRoundingModeRTNE
mutability =
Mutability
-[MTLPipelineBufferDescriptorArrayInternal objectAtIndexedSubscript:]
bufferIndex(%lu) must be < %lu
-[MTLPipelineBufferDescriptorArrayInternal setObject:atIndexedSubscript:]
buffer is not a MTLPipelineBufferDescriptor.
%@:%u
filename =
function =
column =
inlinedAt
validateMTLMutability
%lu is not a valid MTLMutability.
com.apple.metal.gl
com.apple.metalfe
Device serial queue
Pipeline serialization queue
Device concurrent queue
MTL_FORCE_COMMAND_BUFFER_ENHANCED_ERRORS
name =
MTL_DUMP_PIPELINES_TO_JSON_FILE
MTL_DUMP_LIBRARIES_TO_DIRECTORY
-[_MTLDevice newLibraryWithURL:error:]
url must not be nil.
Invalid file url
forceDeviceName
METAL_FORCE_DEVICE_VENDOR_NAME
METAL_FORCE_DEVICE_FAMILY_NAME
METAL_FORCE_DEVICE_PRODUCT_NAME
Unnamed_GPU
Apple
default
metallib
no default library was found
v24@?0@"<MTLLibrary>"8@"NSError"16
Pipeline libraries are not supported in Simulator
-[_MTLDevice startCollectingPipelineDescriptorsUsingPrefixForNames:]
name prefix is null
-[_MTLDevice endCollectingPipelineDescriptors]
startCollectingPipelineDescriptors was not called
Device does not support dynamic libraries.
Expected a library with type MTLLibraryTypeDynamic, found invalid type: %@
null
v24@?0r^{MTLBinaryRequestReply=Q@^{?}@^{?}@^{?}@^{?}@@@^{?}@}8@"NSError"16
v24@?0@"<MTLComputePipelineState>"8@"NSError"16
v32@?0@"<MTLComputePipelineState>"8@"MTLComputePipelineReflection"16@"NSError"24
ciKernelMain
-[_MTLDevice newLibraryWithStitchedDescriptor:error:]
Stitched Library with Descriptor Validation
-[_MTLDevice newLibraryWithStitchedDescriptor:completionHandler:]
-[_MTLDevice newLibraryWithStitchedDescriptor:destinationBinaryArchive:error:]
Stitched Library with Descriptor SPI Validation
-[_MTLDevice newDagStringWithGraphs:]
New Dag String With Graphs Validation
-[_MTLDevice initLimits]
_limits.maxColorAttachments > 0
_limits.maxIndirectBuffers > 0
_limits.maxIndirectTextures > 0
_limits.maxIndirectSamplers > 0
_limits.maxIndirectSamplersPerDevice > 0
v32@?0@"<MTLRenderPipelineState>"8@"MTLRenderPipelineReflection"16@"NSError"24
Tile render pipelines are not supported on this device
-[_MTLDevice minimumLinearTextureAlignmentForPixelFormat:]
%s is not supported on this device.
Linear textures do not support compressed pixel formats
Linear textures do not support depth/stencil pixel formats
-[_MTLDevice minLinearTextureAlignmentForPixelFormat:]
-[_MTLDevice getDefaultSamplePositions:count:]
count (%lu) is not supported on this device.
Null provided for positions array.
-[_MTLDevice newArgumentEncoderWithArguments:structType:]
count must be greater than zero
MTLGPUFamilyApple1
MTLGPUFamilyApple2
MTLGPUFamilyApple3
MTLGPUFamilyApple4
MTLGPUFamilyApple5
MTLGPUFamilyMac1
MTLGPUFamilyMac2
MTLGPUFamilyCommon1
MTLGPUFamilyCommon2
MTLGPUFamilyCommon3
MTLGPUFamilyMacCatalyst1
MTLGPUFamilyMacCatalyst2
MTLValidateFeatureSupport
%@ is not supported on this device
%@ is only supported on %@ and later.
MTLFeatureSet_tvOS_GPUFamily1_v1
MTLFeatureSet_tvOS_GPUFamily1_v2
MTLFeatureSet_tvOS_GPUFamily1_v3
MTLFeatureSet_tvOS_GPUFamily2_v1
MTLFeatureSet_tvOS_GPUFamily1_v4
MTLFeatureSet_tvOS_GPUFamily2_v2
Libraries From Source
Pipelines
Render Pipelines
Compute Pipelines
Dynamic Libraries
Binary Functions
MTL_LOG_COMPILE_STATS
pipeline
MTLLibraryTypeExecutable
MTLLibraryTypeDynamic
dataType =
index =
arrayLength =
access =
textureType =
constantBlockAlignment =
libraryBuilder
com.apple.Metal
Metal Compiler Warning
descriptor cannot be nil.
descriptor is not a MTLStitchedLibraryDescriptor.
descriptor.functionGraphs cannot be nil.
descriptor.functionGraphs is not an NSArray.
descriptor.functionGraphs cannot be empty.
descriptor.functions cannot be nil.
descriptor.functions is not an NSArray.
descriptor.functions cannot be empty.
descriptor.functions[%lu] does not conform to MTLFunction.
descriptor.binaryArchives cannot be nil.
descriptor.binaryArchives is not an NSArray.
descriptor.binaryArchives[%lu] does not conform to MTLBinaryArchive.
DAGS {
functionGraphs[%lu] cannot be nil.
functionGraphs[%lu] is not a MTLFunctionStitchingGraph.
functionGraphs[%lu].functionName cannot be nil
functionGraphs[%lu].functionName is not an NSString.
functionGraphs[%lu].functionName cannot be empty.
KERNEL;
functionGraphs[%lu].attributes cannot be nil.
functionGraphs[%lu].attributes is not an NSArray.
ALWAYS_INLINE;
functionGraphs[%lu].attributes[%lu] is of incorrect type: %@.
functionGraphs[%lu].nodes cannot be nil if functionGraphs[%lu].outputNode is nil.
functionGraphs[%lu].nodes cannot be empty if functionGraphs[%lu].outputNode is nil.
functionGraphs[%lu].nodes is not an NSArray.
NODE(node_early_return) : EARLY_RETURN, NODE(node_%lu);
Non-output node functionGraphs[%lu].nodes[%lu] cannot be nil.
functionGraphs[%lu].nodes[%lu] is not a MTLFunctionStitchingFunctionNode.
OUTPUT(node_output) : 
NODE(node_%lu) : 
functionGraphs[%lu].nodes[%lu].arguments cannot be nil.
functionGraphs[%lu].nodes[%lu].arguments is not an NSArray.
functionGraphs[%lu].nodes[%lu].controlDependencies cannot be nil.
functionGraphs[%lu].nodes[%lu].controlDependencies is not an NSArray.
functionGraphs[%lu].outputNode.name cannot be nil.
functionGraphs[%lu].outputNode.name cannot be empty.
functionGraphs[%lu].nodes[%lu].name cannot be nil.
functionGraphs[%lu].nodes[%lu].name cannot be empty.
FUNCTION(%@)
functionGraphs[%lu].nodes[%lu].arguments is not a NSArray.
functionGraphs[%lu].nodes[%lu].arguments[%lu] cannot be nil.
functionGraphs[%lu].nodes[%lu].arguments[%lu] does not conform to MTLFunctionStitchingNode.
functionGraphs[%lu].nodes does not contain functionGraphs[%lu].outputNode.arguments[%lu].
functionGraphs[%lu].nodes does not contain functionGraphs[%lu].nodes[%lu].arguments[%lu].
NODE(node_%lu)
INPUT(%lu)
BUFFER(CONSTANT, %lu)
%cBUFFER_ADDR(BUFFER(CONSTANT, %lu), %lu)
TEXTURE(%lu)
SAMPLER(%lu)
THREADGROUP(%lu)
IMAGEBLOCK
BUILTIN(THREAD_POSITION_IN_GRID)
BUILTIN(THREAD_POSITION_IN_THREADGROUP)
functionGraphs[%lu].nodes[%lu].arguments[%lu] is of incorrect type: %@.
functionGraphs[%lu].nodes[%lu].controlDependencies is not a NSArray.
functionGraphs[%lu].nodes[%lu].controlDependencies[%lu] cannot be nil.
functionGraphs[%lu].nodes[%lu].controlDependencies[%lu] is not of type MTLFunctionStitchingFunctionNode.
functionGraphs[%lu].nodes does not contain functionGraphs[%lu].outputNode.controlDependencies[%lu].
functionGraphs[%lu].nodes does not contain functionGraphs[%lu].nodes[%lu].controlDependencies[%lu].
*NODE(node_%lu)
Intel
MTLECBE
progressTrackVertex
progressTrackKernel
-[MTLComputePassSampleBufferAttachmentDescriptorArrayInternal objectAtIndexedSubscript:]
-[MTLComputePassSampleBufferAttachmentDescriptorArrayInternal setObject:atIndexedSubscript:]
serializedRequest
Corrupted library
compiler request queue
compiler reply queue
com.apple.MTLCompilerService
v16@?0@"NSObject<OS_xpc_object>"8
requestType
sandboxTokens
ProbGuardMalloc
targetData
data
pluginPath
(name length negative)
client_name
reply
error
errorMessage
Compiler encountered XPC_ERROR_CONNECTION_INVALID. Shutting down the connection permanently...
Compiler encountered an internal error
MTLCompiler: Compiler service could not be reached.
v36@?0I8r^v12Q20r*28
CompilerConnectionSerialQueue
prepareVisibleFunctionHeader
GPUTimestamp
TessellationInputPatches
VertexInvocations
PostTessellationVertexInvocations
ClipperInvocations
ClipperPrimitivesOut
FragmentInvocations
FragmentsPassed
KernelInvocations
TotalCycles
VertexCycles
TessellationCycles
PostTessellationCycles
FragmentCycles
RenderTargetWriteCycles
A timestamp in nanoseconds on the GPU.
The number of patches input to the tessellation unit.
The number of invocations of the vertex shader.
The number of invocations of the post tessellation vertex shader.
The number of primitives that were passed to the viewport clipper.
The number of primitives that were output from the viewport clipper.
The number of invocations of the fragment shader.
The number of fragments that passed depth and stencil testing.
The number of compute kernel invocations.
The total amount of cycles to this point.
The number of cycles during which the vertex shader was running.
The number of cycles during which the tessellation unit was running.
The number of cycles during which the post tessellation vertex shader was running.
The number of cycles during which the fragment shader was running.
The number of cycles that were spent storing values into the render target.
timestamp
stageutilization
statistic
A counter set containing only a GPU timestamp.
A counter set containing counters representing relative amounts of work per pipeline stage.
A counter set containing statistics about pipeline stages.
MTLTextureType1D
MTLTextureType1DArray
MTLTextureType2D
MTLTextureType2DArray
MTLTextureType2DMultisample
MTLTextureTypeCube
MTLTextureTypeCubeArray
MTLTextureType3D
MTLTextureTypeTextureBuffer
MTLCPUCacheModeWriteCombined
MTLCPUCacheModeDefaultCache
Invalid
MTLStorageModeShared
MTLStorageModePrivate
MTLStorageModeMemoryless
%s%@
MTLTextureUsageShaderRead
MTLTextureUsageShaderWrite
MTLTextureUsageRenderTarget
MTLTextureUsagePixelFormatView
MTLTextureUsageUnknown
type (%lu) is not a valid MTLTextureType.
MTLTextureUsage has unknown bits 0x%lx.
_validateTextureUsage
MTLTextureSwizzleRed
MTLTextureSwizzleGreen
MTLTextureSwizzleBlue
MTLTextureSwizzleAlpha
MTLTextureSwizzleOne
MTLTextureSwizzleZero
Unknown(%u)
width =
height =
depth =
mipmapLevelCount =
sampleCount =
cpuCacheMode =
storageMode =
hazardTrackingMode =
resourceOptions =
framebufferOnly =
usage =
swizzle =
allowGPUOptimizedContents =
forceResourceIndex =
resourceIndex =
-[MTLTextureDescriptorInternal validateWithDevice:]
Texture Descriptor Validation
MTLTextureDescriptor has invalid pixelFormat (%lu).
Texture swizzling is not compatable with %s
MTLTextureDescriptor requests a height of %lu but the texture type %s requires that height is 1
MTLTextureDescriptor requests a mipmapLevelCount of %lu but the texture type %s requires that mipmapLevelCount is 1
MTLTextureDescriptor requests a depth of %lu but the texture type %s requires that depth is 1
MTLTextureDescriptor requests %lu mipmap levels, but the dimensions (%lu, %lu, %lu) can only support a maxiumum of %lu levels
MTLTextureDescriptor has sampleCount set but is using a type that does not allow sampleCount.
MTLTextureDescriptor mipmapLevelCount must equal 1 for multisample textures.
MTLTextureDescriptor pixelFormat (%s) does not support multisample textures.
MTLTextureDescriptor sampleCount must be > 1 for multisample textures.
MTLTextureDescriptor sampleCount (%lu) is not supported by device.
MTLTextureDescriptor width must equal height for cube textures.
MTLTextureDescriptor has an arrayLength of %lu, but %s is not an array texture type
MTLTextureDescriptor arrayLength (%lu) is set to zero or greater than the max allowed size (%lu).
MTLTextureDescriptor has a compressed pixel format set with a sample count greater than one.
The compressed pixel format %s cannot be used with MTLTextureType3D.
MTLTextureDescriptor: compressed pixel formats require texture type of MTLTextureType2D[Array]%s or MTLTextureTypeCube[Array].
, MTLTextureType3D
PVRTC 3D textures are not supported
MTLTextureDescriptor has a PVRTC pixel format (%s) set with non-square and/or non-power of two dimensions.
MTLTextureDescriptor has a non-zero rotation set but is not marked as framebufferOnly.
MTLTextureDescriptor requests %lu mipmap levels, but the MTLPixelFormat422 pixel format does not support mipmaps.
MTLTextureDescriptor: MTLPixelFormat422 requires MTLTextureType2D.
MTLTextureDescriptor: MTLPixelFormat422 requires even width.
MTLTextureDescriptor: MTLResourceStorageModeMemoryless is not a supported storage mode on this device.
MTLTextureDescriptor: depth/stencil pixel formats require texture type of MTLTextureType2D[Array] or MTLTextureTypeCube[Array].
MTLTextureDescriptor: Depth, Stencil, DepthStencil textures cannot be allocated with MTLStorageModeShared on this device.
MTLTextureDescriptor: Depth, Stencil, DepthStencil textures cannot be allocated with MTLResourceStorageModeMemoryless on this device.
MTLTextureDescriptor: Multisample textures cannot be allocated with MTLStorageModeShared on this device.
MTLTextureDescriptor: Multisample textures cannot be allocated with MTLResourceStorageModeMemoryless on this device.
_mtlValidateArgumentsForTextureViewOnDevice
Texture Creation
source texture (%s) is not a compressed pixel format.
texture view pixelFormat (%s) is a compressed pixel format.
source texture block size (%lu) does not match texture view pixel size (%lu)
source texture pixelFormat (%s) not castable.
texture view pixelFormat (%s) not castable.
source texture pixelFormat (%s) not compatible with texture view pixelFormat (%s).
source texture textureType (%@) not compatible with texture view textureType (%@).
newLevelRange.length must not be 0.
newSliceRange.length must not be 0.
(newLevelRange.location + newLevelRange.length)(%lu) must be <= [texture mipmapLevelCount](%lu).
(newSliceRange.location + newSliceRange.length)(%lu) must be <= (%lu).
newSliceRange.length(%lu) must be a multiple of (%lu).
newSliceRange.length(%lu) must equal (%lu) for textureType (%@).
newPixelFormat(%s) must be MSAA capable to be used to view a texture with sampleCount(%lu).
_mtlValidateStrideTextureParameters
IOSurface
Linear
%s texture: bytesPerRow (%llu) must be greater or equal to (%llu) bytes
2D linear texture array is not supported.
%s texture: bytesPerRow (%llu) must be aligned to %llu bytes
%s texture: offset (%llu) must be aligned to %llu bytes
%s texture: cannot create compressed, depth, or stencil textures, pixelFormat (%s) disallowed
%s texture: cannot be mipmapped, mipmapLevelCount (%lu) disallowed
%s texture: must have depth == 1, depth (%lu) disallowed
%s texture: must be of type MTLTextureType2D or linear MTLTextureType2DArray, textureType (%@) disallowed
_mtlValidateMTLTextureSwizzle
swizzle(%u) is not a valid MTLTextureSwizzle.
invalid cpuCacheMode (%lu)
invalid storageMode (%lu). Must be one of
 %@(%lu)
MTLResourceOptions (0x%lx) contains unknown bits.
MTLTextureDescriptor has width of zero.
MTLTextureDescriptor has width (%lu) greater than the maximum allowed size of %lu.
MTLTextureDescriptor has height of zero.
MTLTextureDescriptor has height (%lu) greater than the maximum allowed size of %lu.
MTLTextureDescriptor has depth of zero.
MTLTextureDescriptor has depth (%lu) greater than the maximum allowed size of %lu.
MTLTextureDescriptor has arrayLength of zero.
MTLTextureDescriptor has arrayLength (%lu) greater than the maximum allowed size of %lu.
rotation is not a valid MTLTextureRotation.
compressionMode is not a valid MTLTextureCompressionMode.
PipelineLibrary
pipelineDescriptions queue
initWithFileDescriptor
stringWithUTF8String returned nil!
stringByStandardizingPath returned nil!
stringByDeletingLastPathComponent returned nil!
Library has no fileName property !
stringWithUTF8String return nil !
stringByAppendingPathComponent returned nil !
getLibraryByIndex
Invalid library index in pipeline library file
getLibraryByIndex_block_invoke
Error: %@
initializeDescriptorHash_block_invoke
pipeline descriptor has no name in file
pipeline descriptor %s duplicated
compute pipeline %s not found in pipelineLibrary.
newComputePipelineDescriptor
invalid compute pipeline descriptor %s in pipeline library
deserializeFunction
Function with no name in pipeline library
Specialized function %s not found in pipelineLibrary.
Base function with no name in pipeline library
Specialized Function %s has no 'base function' in pipeline library
Invalid library index in pipeline library for function %s
No constant values specified for specialized function %s
Function %@ could not be found in library
render pipeline %s not found in pipelineLibrary.
newRenderPipelineDescriptor
invalid render pipeline descriptor %s in pipeline library
newLibraryWithFile
filePath must not be nil.
filePath is not a NSString.
device must not be nil.
device is not a MTLDevice.
pipeline library not found
%s/pipelines.desc
file not found: %s
could not open file: %s
%s/pipelines.%s
Could not open pipeline cache file: %s
%s/functions
Could not open function cache file: %s
deserializeFunctionConstants
Unknown property in descriptor
MTLCreateSystemDefaultDevice_block_invoke
MTLCreateSystemDefaultDevice doesn't know what to do with more than one device
MTLAddDevice
_deviceArray != NULL
[newDevice conformsToProtocol:@protocol(MTLDevice)]
[newDevice conformsToProtocol:@protocol(MTLDeviceSPI)]
com.Metal.DeviceArray
MetalSimulatorEnabled
METAL_LOAD_INTERPOSER
METAL_CAPTURE_ENABLED
MetalCaptureEnabled
MetalForceCaptureEnabled
DYMTL_TOOLS_DYLIB_PATH
/Developer/Library/PrivateFrameworks/MTLToolsDeviceSupport.framework/libMTLInterpose.dylib
/usr/lib/libMTLCapture.dylib
DYMTLWrapDeviceWithDebugLayer
MTLInitializeInterpose
_getWrappedDeviceFn != NULL
Metal GPU Frame capture loading process failed
Metal GPU Frame Capture Enabled
Metal GPU Frame Capture could not be enabled
Unknown Wrapper Type : %d
MTLDebugDevice
SIMULATOR_ROOT
/System/Library/PrivateFrameworks/MetalTools.framework
MTLGPUDebugDevice
Metal API Extended Validation Enabled
Metal API Validation %s
Enabled
Disabled
Metal API Counters Enabled!
Metal GPU Validation Enabled
/System/Library/PrivateFrameworks/MTLSimDriver.framework/MTLSimDriver
MTLCreateSimulatorDevice
METAL_DEVICE_WRAPPER_TYPE
MTL_DEBUG_LAYER
MTL_SHADER_VALIDATION
-[_MTLParallelRenderCommandEncoder initWithCommandBuffer:renderPassDescriptor:]
commandBuffer must not be nil.
commandBuffer is not a MTLCommandBuffer.
framebuffer must not be nil.
render pass descriptor is not an MTLRenderPassDescriptor.
device =
<null>
v16@?0@"<MTLCommandBuffer>"8
MTLCaptureError
Capturing is not supported.
Already capturing.
Invalid Descriptor.
AIRP
MTLSamplerMinMagFilterNearest
MTLSamplerMinMagFilterLinear
MTLSamplerMipFilterNotMipmapped
MTLSamplerMipFilterNearest
MTLSamplerMipFilterLinear
MTLSamplerAddressModeClampToEdge
MTLSamplerAddressModeRepeat
MTLSamplerAddressModeMirrorRepeat
MTLSamplerAddressModeClampToZero
minFilter =
magFilter =
mipFilter =
maxAnisotropy =
sAddressMode =
tAddressMode =
rAddressMode =
normalizedCoordinates =
lodMinClamp =
lodMaxClamp =
lodAverage =
compareFunction =
supportArgumentBuffers
forceResourceIndex
resourceIndex
-[MTLSamplerDescriptorInternal setLabel:]
-[_MTLSamplerState initWithDevice:samplerDescriptor:]
New Sampler State Validation
desc must not be nil.
desc is not a MTLSamplerDescriptor.
_MTLCreateConstantSamplerDescriptorsFromBitmasks
Constant sampler does not have the most significant bit set: 0x%llX
Constant sampler has unrecognized bits: 0x%llx
filter is not a valid MTLSamplerMinMagFilter.
mipFilter is not a valid MTLSamplerMipFilter.
addressMode is not a valid MTLSamplerAddressMode.
addressModeFromConstantSamplerLiteral
Unexpected MTLSamplerAddressMode from constant sampler reflection: %llu
compareFunctionFromConstantSamplerLiteral
Unexpected MTLCompareFunction from constant sampler reflection: %llu
MTLLoader device cache queue
+[MTLLoader sliceIDForDevice:andDriverVersion:]
Target device architecture is nil
__TEXT
__DATA
__text
__data
B40@?0@"NSObject<OS_dispatch_data>"8Q16r^v24Q32
0123456789ABCDEF
MTLLoader global file queue
: @executable_path cannot be used in a library that has not been loaded from file URL
: @loader_path cannot be used in a library that has not been loaded from file URL
: relative paths cannot be used to load Metal libraries
<no URL>
MTLHeapTypeAutomatic
MTLHeapTypePlacement
size =
type =
-[MTLHeapDescriptorInternal validateWithDevice:]
Heap Descriptor Validation
Placement heap type is not supported.
Unknown heap type.
usedSize =
Invalid cpuCacheMode (%@)
Shared storage mode disallowed
Invalid storageMode (%@)
Frontend total time for library from source in ns
Frontend total time for function specialization in ns
Frontend total time for CoreImage SPI in ns
Functions in library
Library was cached
Binary function's name
MTL_FORCE_LANGUAGE_VERSION
MTL_FORCE_AIR_VERSION
Using MTLAIRVersion%d_%d (set with %s=%s)
Using MTLLanguageVersion%d_%d (set with MTL_FORCE_LANGUAGE_VERSION=%s)
preprocessorMacros:
fastMathEnabled =
preserveInvariance =
libraryType =
languageVersion =
%u:%u
preprocessorMacros
fastMathEnabled
languageVersion
tracingEnabled
glBufferBindPoints
debuggingEnabled
compileTimeStatisticsEnabled
additionalCompilerArguments
sourceLanguage
installName
preserveInvariance
libraryType
attributeIndex =
attributeType =
active =
isPatchData =
isPatchControlPointData =
required =
#main
__main
Invalid library file (unexpected end of file)
Invalid library file
This library format is not supported on this platform (or was built with an old version of the tools)
This version of metallib is too old and not supported any longer.
This version of metallib is too recent and not supported.
Non zero terminated function name!
Library with both qualified functions and extern functions is not supported!
failed to parse variable list, no tokens read
failed to parse the variable list, expected %u variables, found only %u
failed to parse imported symbol names, no tokens read
failed to parse imported symbol names, expected %u symbols, found only %u
readFunctionPublicOrPrivateMetadata
Invalid library file/data (unexpected end of file)
Invalid library file/data (bad VATY token)
readFunctionSourceArchiveMetadata
filepath must not be nil.
filepath is not a NSString.
library not found
error while opening the library
metal library file %s failed to open with error: %s
^{MTLLibraryData=^^?{?=[32C]}Ai@@}16@?0^@8
newLibraryWithData
data should not be null
-[_MTLLibrary newFunctionWithNameInternal:]
functionName must not be nil.
functionName is not a NSString.
-[_MTLLibrary newExternFunctionWithName:]
Function %@ has type %@, expected MTLFunctionTypeExtern.
-[_MTLLibrary newFunctionWithName:]
Function %@ was not found in the library
v24@?0@"<MTLFunction>"8@"NSError"16
MTLLibrary is not formatted as a MetalLib file.
MTLLibraryData queue
Compilation succeeded with: 
Compiler found unsupported library with both qualified functions and extern functions
initLibraryContainerWithRequestData
requestData must not be nil.
requestSize must not be 0.
v32@?0Q8@"NSObject<OS_dispatch_data>"16r*24
newLibraryWithSource
source must not be nil.
source is not a NSString.
options is not a MTLCompileOptions.
options.installName cannot be nil or empty when options.libraryType is MTLLibraryTypeDynamic.
MTL_DISABLE_FASTMATH
-Wl,-create-shared-library 
-Wl,
-Wl,-install_name -Wl,
--driver-mode=metal -x metal 
--driver-mode=openclc -x cl 
MTL_REPLACE_FAST_MATH_WITH_RELAXED_MATH
-std=ios-metal%u.%u 
-debug-info-kind=line-tables-only 
-working-directory "%@" 
-working-directory "%s" 
METAL_FORCE_OPT_SIZE
-ffast-math 
-frelaxed-math 
-fno-fast-math 
-fpreserve-invariance 
-fgl_max_buffer 
-ftracepoint-instrument 
-fmodules-cache-path="
newLibraryWithDAG
functionDag cannot be nil
functions cannot be nil
functions cannot be empty
unable to locate bitcode for function 
invalid bitcode size 0 for function 
functionNames:
MTLFunctionTypeVertex
MTLFunctionTypeFragment
MTLFunctionTypeKernel
MTLFunctionTypeVisible
-[_MTLFunction initWithName:type:libraryData:device:]
name must not be nil.
name is not a NSString.
-[_MTLFunction bitCodeHash]
-[_MTLFunction bitCodeFileSize]
-[_MTLFunction newFunctionWithPluginData:bitcodeType:]
-[_MTLFunction functionConstantsDictionary]
functionType =
attributes:
v32@?0Q8@"NSObject<OS_dispatch_data>"16@"NSString"24
-[_MTLFunction newArgumentEncoderWithBufferIndex:reflection:functionReflection:]
bufferIndex %lu does not identify an argument buffer
function queue
Failed to find specialized function in pipeline library
-[MTLCompiler initWithTargetData:cacheUUID:pluginPath:device:compilerFlags:]
pluginPath must not be nil.
pluginPath is not a NSString.
Jul  5 2021
04:40:09
compiler queue
Failed to find precompiled data in pipeline library
v16@?0r^{MTLCompiledRequestReply=Q@^{?}@}8
Function %@ is using language version %u.%u which is incompatible with this OS.
Function %@ has a deployment target (0x%08X) which is incompatible with this OS (0x%08X).
function is nil
binary archives
pipeline library
Failed to find reflection in %s
Failed to find pipeline statistics in %s
Failed to find debug instrumentation data in %s
Failed to find linking data in %s
Failed to find precompiled function '%@' in %s
MTLPipelineOptionFailOnBinaryArchiveMiss was set and failed to find compiled function in binary archive.
v16@?0r^{MTLBinaryRequestReply=Q@^{?}@^{?}@^{?}@^{?}@@@^{?}@}8
Compiling dynamic libraries is not supported!
Compiling compute pipelines for binary archives is not supported!
Compiling render pipelines for binary archives is not supported!
Compiling tile render pipelines for binary archives is not supported!
Compiling tile pipelines for binary archives is not supported!
Compilation failed
MTLPipelineOptionFailOnBinaryArchiveMiss was set and failed to find compiled pipeline functions in binary archive.
-[MTLCompiler newRenderPipelineStateWithDescriptorInternal:options:reflection:destinationBinaryArchive:error:completionHandler:]
device cannot be null.
descriptor cannot be null.
Vertex function cannot be nil.
-[MTLCompiler newComputePipelineStateWithDescriptorInternal:options:pipelineCache:destinationBinaryArchive:reflection:error:completionHandler:]
%d_%d
Invalid metallib file, unexpected end of file while parsing the variable list
Invalid metallib file, unexpected end of file while parsing imported symbol names
Jul  5 2021 04:40:09
%s, %s
libraryCache
libraries
v24@?0@"NSObject<OS_dispatch_data>"8@"NSError"16
Failed to find library in binary archive.
Compiler returned an empty reply.
empty error message
compiler error log is invalid
Compilation failed: 
Compiler returned an empty reply
Compilation failed: 
 compiler response is invalid
validateMTLFunctionType
type is not a valid MTLFunctionType.
functions
[Hash for %@ (%@)] base hash: %@ [initialized with name(%@), bitcode hash(%@), bitcode type (%d), cache compiler options (%s)]
MTL_DEBUG_LOG_CACHE_KEYS
function binary
[driver key(%@), framework key(%@)]
[Hash for %@] %s hash: %@ %s
reflection
pipelineStatistics
debugInstrumentation
linking
Invalid key
reflection Queue
MTL: fast-math disabled by EV
-[MTLRenderPassColorAttachmentDescriptorInternal setTexture:]
texture is not a MTLTextureImplementation.
-[MTLRenderPassColorAttachmentDescriptorInternal setResolveTexture:]
resolveTexture is not a MTLTextureImplementation.
-[MTLRenderPassDepthAttachmentDescriptorInternal setTexture:]
-[MTLRenderPassDepthAttachmentDescriptorInternal setResolveTexture:]
-[MTLRenderPassStencilAttachmentDescriptorInternal setTexture:]
-[MTLRenderPassStencilAttachmentDescriptorInternal setResolveTexture:]
-[MTLRenderPassColorAttachmentDescriptorArrayInternal objectAtIndexedSubscript:]
-[MTLRenderPassColorAttachmentDescriptorArrayInternal setObject:atIndexedSubscript:]
attachment is not a MTLRenderPassColorAttachmentDescriptor.
-[MTLRenderPassSampleBufferAttachmentDescriptorArrayInternal objectAtIndexedSubscript:]
-[MTLRenderPassSampleBufferAttachmentDescriptorArrayInternal setObject:atIndexedSubscript:]
-[MTLRenderPassDescriptorInternal setDepthAttachment:]
depthAttachment is not a MTLRenderPassDepthAttachmentDescriptor.
-[MTLRenderPassDescriptorInternal setStencilAttachment:]
stencilAttachment is not a MTLRenderPassStencilAttachmentDescriptor.
Color Attachment %u
Depth Attachment:
Stencil Attachment:
visibilityResultBuffer =
renderTargetArrayLength =
renderTargetWidth =
renderTargetHeight =
-[MTLRenderPassDescriptorInternal setVisibilityResultBuffer:]
buffer is not a MTLBuffer.
-[MTLRenderPassDescriptorInternal setSamplePositions:count:]
count (%lu) is not a supported sample count for custom positions.
Non-zero count (%lu) provided with a NULL positions parameter.
Provided sample position x-coodinate (%f) at index %u is not within the range [0,1).
Provided sample position y-coodinate (%f) at index %u is not within the range [0,1).
-[MTLRenderPassDescriptorInternal getSamplePositions:count:]
Non-zero count (%lu) does not match the number of programmed custom sample positions (%lu).
-[MTLRenderPassDescriptorInternal validate:width:height:]
Render Pass Descriptor Validation
Custom sample positions were specified, but Programmable Sample Positions is not supported on this device.
renderTargetArrayLength > 0 specified, but Layered Rendering is not supported on this device.
texture =
level =
slice =
depthPlane =
resolveTexture =
resolveLevel =
resolveSlice =
resolveDepthPlane =
loadAction =
storeAction =
storeActionOptions =
clearColor =
yInvert =
MTLLoadActionDontCare
MTLLoadActionLoad
MTLLoadActionClear
MTLStoreActionDontCare
MTLStoreActionStore
MTLStoreActionMultisampleResolve
MTLStoreActionStoreAndMultisampleResolve
MTLStoreActionUnknown
none
MTLStoreActionOptionCustomSamplePositions
(%g %g %g %g)
resolveFilter =
clearDepth =
MTLMultisampleDepthResolveFilterSample0
MTLMultisampleDepthResolveFilterMin
MTLMultisampleDepthResolveFilterMax
clearStencil =
stencilResolveFilter =
MTLMultisampleStencilResolveFilterSample0
MTLMultisampleStencilResolveFilterDepthResolvedSample
Custom Sample Positions:
number of positions = 
sample 
loadAction is not a valid MTLLoadAction.
storeAction is not a valid MTLStoreAction.
storeActionOptions contains unrecognized bits (%#x)
resolveFilter is not a valid MTLMultisampleDepthResolveFilter.
resolveFilter is not a valid MTLMultisampleStencilResolveFilter.
storeActionOptions contains unrecognized bits: %#x
Stencil attachment storeActionOptions (%#x) contains options incompatible with this attachment type: %@
-[_MTLCommandEncoder initWithCommandBuffer:]
-[_MTLCommandEncoder dealloc]
Command encoder released without endEncoding
-[_MTLCommandEncoder insertDebugSignpost:]
string must not be nil.
string is not a NSString.
-[_MTLCommandEncoder pushDebugGroup:]
Compute Arguments =
Argument %u:
computeFunction =
threadGroupSizeIsMultipleOfThreadExecutionWidth =
supportIndirectCommandBuffers =
stageInputDescriptor =
linkedFunctions =
pipelineLibrary =
preloadedLibraries =
binaryArchives =
buffers = 
-[MTLComputePipelineDescriptorInternal setLabel:]
-[MTLComputePipelineDescriptorInternal setComputeFunction:]
computeFunction must not be nil.
computeFunction is not a MTLFunction.
computeFunction functionType is not a MTLFunctionTypeKernel.
-[MTLComputePipelineDescriptorInternal setStageInputDescriptor:]
stageInputDescriptor is not a MTLStageInputOutputDescriptor.
-[MTLComputePipelineDescriptorInternal setLinkedFunctions:]
-[MTLComputePipelineDescriptorInternal setMaxTotalThreadsPerThreadgroup:]
-[_MTLComputePipelineState initWithDevice:pipelineStateDescriptor:]
desc is not a MTLComputePipelineDescriptor.
-[_MTLComputePipelineState functionPointerHandleWithFunction:]
Driver needs to override this
-[_MTLComputePipelineState functionPointerHandlesWithFunctions:range:]
Compute Pipeline Descriptor Validation
computeFunction is associated with a different device
function %s cannot be used to build a pipeline state. Use newFunctionWithName:constantValues:... to get the specialized function
validateMTLArgumentAccess
access (%lu) is not a valid MTLArgumentAccess.
MTLDataTypeNone
MTLDataTypeStruct
MTLDataTypeArray
MTLDataTypeFloat
MTLDataTypeFloat2
MTLDataTypeFloat3
MTLDataTypeFloat4
MTLDataTypeFloat2x2
MTLDataTypeFloat2x3
MTLDataTypeFloat2x4
MTLDataTypeFloat3x2
MTLDataTypeFloat3x3
MTLDataTypeFloat3x4
MTLDataTypeFloat4x2
MTLDataTypeFloat4x3
MTLDataTypeFloat4x4
MTLDataTypeHalf
MTLDataTypeHalf2
MTLDataTypeHalf3
MTLDataTypeHalf4
MTLDataTypeHalf2x2
MTLDataTypeHalf2x3
MTLDataTypeHalf2x4
MTLDataTypeHalf3x2
MTLDataTypeHalf3x3
MTLDataTypeHalf3x4
MTLDataTypeHalf4x2
MTLDataTypeHalf4x3
MTLDataTypeHalf4x4
MTLDataTypeInt
MTLDataTypeInt2
MTLDataTypeInt3
MTLDataTypeInt4
MTLDataTypeUInt
MTLDataTypeUInt2
MTLDataTypeUInt3
MTLDataTypeUInt4
MTLDataTypeShort
MTLDataTypeShort2
MTLDataTypeShort3
MTLDataTypeShort4
MTLDataTypeUShort
MTLDataTypeUShort2
MTLDataTypeUShort3
MTLDataTypeUShort4
MTLDataTypeChar
MTLDataTypeChar2
MTLDataTypeChar3
MTLDataTypeChar4
MTLDataTypeUChar
MTLDataTypeUChar2
MTLDataTypeUChar3
MTLDataTypeUChar4
MTLDataTypeBool
MTLDataTypeBool2
MTLDataTypeBool3
MTLDataTypeBool4
MTLDataTypeTexture
MTLDataTypeSampler
MTLDataTypePointer
MTLDataTypeR8Unorm
MTLDataTypeR8Snorm
MTLDataTypeR16Unorm
MTLDataTypeR16Snorm
MTLDataTypeRG8Unorm
MTLDataTypeRG8Snorm
MTLDataTypeRG16Unorm
MTLDataTypeRG16Snorm
MTLDataTypeRGBA8Unorm
MTLDataTypeRGBA8Unorm_sRGB
MTLDataTypeRGBA8Snorm
MTLDataTypeRGBA16Unorm
MTLDataTypeRGBA16Snorm
MTLDataTypeRGB10A2Unorm
MTLDataTypeRG11B10Float
MTLDataTypeRGB9E5Float
MTLDataTypeLong
MTLDataTypeLong2
MTLDataTypeLong3
MTLDataTypeLong4
MTLDataTypeULong
MTLDataTypeULong2
MTLDataTypeULong3
MTLDataTypeULong4
MTLDataTypeDouble
MTLDataTypeDouble2
MTLDataTypeDouble3
MTLDataTypeDouble4
MTLDataTypeFloat8
MTLDataTypeFloat16
MTLDataTypeHalf8
MTLDataTypeHalf16
MTLDataTypeInt8
MTLDataTypeInt16
MTLDataTypeUInt8
MTLDataTypeUInt16
MTLDataTypeShort8
MTLDataTypeShort16
MTLDataTypeUShort8
MTLDataTypeUShort16
MTLDataTypeChar8
MTLDataTypeChar16
MTLDataTypeUChar8
MTLDataTypeUChar16
MTLDataTypeLong8
MTLDataTypeLong16
MTLDataTypeULong8
MTLDataTypeULong16
MTLDataTypeDouble8
MTLDataTypeDouble16
MTLDataTypeRenderPipeline
MTLDataTypeComputePipeline
MTLDataTypeIndirectCommandBuffer
MTLDataTypeBool8
MTLDataTypeBool16
MTLArgumentAccessReadOnly
MTLArgumentAccessReadWrite
MTLArgumentAccessWriteOnly
ElementType =
%@ ElementTypeDescription = %@
Access =
Offset =
ArgumentIndex =
TypeInfo =
 nil
ArrayLength =
Stride =
ArgumentIndexStride =
ElementTypeInfo = %@
-[MTLArgumentInternal bufferAlignment]
Querying buffer alignment on an argument that is not a buffer
-[MTLArgumentInternal bufferDataSize]
Querying buffer data size on an argument that is not a buffer
-[MTLArgumentInternal bufferDataType]
Querying buffer data type on an argument that is not a buffer
-[MTLArgumentInternal indirectConstantAlignment]
Querying indirect constant alignment on an argument that is not an indirect constant
-[MTLArgumentInternal indirectConstantDataSize]
Querying indirect constant data size on an argument that is not an indirect constant
-[MTLArgumentInternal indirectConstantDataType]
Querying indirect constant data type on an argument that is not an indirect constant
-[MTLArgumentInternal bufferIndirectArgumentType]
-[MTLArgumentInternal bufferStructType]
Querying buffer struct type on an argument that is not a buffer
-[MTLArgumentInternal threadgroupMemoryAlignment]
Querying threadgroup memory alignment on an argument that is not a threadgroup memory
-[MTLArgumentInternal threadgroupMemoryDataSize]
Querying threadgroup memory data size on an argument that is not a threadgroup memory
-[MTLArgumentInternal textureType]
Querying texture type on an argument that is not a texture
-[MTLArgumentInternal textureDataType]
Querying texture data type on an argument that is not a texture
LocationIndex =
IsActive =
%@ TypeInfo = %@
airMDType =
aluType =
bufferIndex =
baseInstanceUnused =
MTLArgumentTypeBuffer
MTLArgumentTypeThreadgroupMemory
MTLArgumentTypeTexture
MTLArgumentTypeSampler
MTLValidationError
MTLCommandBufferErrorDomain
MTLLibraryErrorDomain
MTLCounterErrorDomain
MTLMessageArrayKey
baseObject
There was an issue with your Metal framework usage. Please see MTLMessageArrayKey for the NSArray of issue strings.
There was an issue with your Metal framework usage.
Please address issues included in MTLMessageArrayKey and try again.
%@%@%@
com.Metal.NotifierArray
Vertex Shader
Fragment Shader
Instruction count
Temporary register count
Compilation time in milliseconds
Uniform register count
ALU instruction count
Threadgroup atomic instruction count
Threadgroup load instruction count
Threadgroup store instruction count
Device atomic instruction count
Device load instruction count
Device store instruction count
Branch instruction count
Loop instruction count
Texture reads instruction count
Texture writes instruction count
Spilled bytes
Wait instruction count
Threadgroup memory
FP16 instruction count
FP32 instruction count
INT16 instruction count
INT32 instruction count
Max temporary registers
Max uniform registers
Max threadgroup memory
Max theoretical occupancy
Remarks
Compile Performance
Function Name
Function was cached
Total time for synchronous pipeline creation in ns
Total time for synchronous compile service in ns
Total compile time in ns
Framework total compile time in ns
Backend compiler build request total time in ns
Driver total compile time in ns
Compiler total time in ns
Compiler translator pass time in ns
Compiler optimization pass time in ns
Compiler backend pass time in ns
Framework instrumentation pass time in ns
blending =
Source blend factors:
RGB   =
Alpha =
Destination blend factors:
Blend operations:
writeMask =
blending = NO
Pixel Format
Blending Enabled
Source RGB Blend Factor
Destination RGB Blend Factor
Source Alpha Blend Factor
Destination Alpha Blend Factor
RGB Blend Operation
Alpha Blend Operation
Write Mask
Vertex Arguments:
argumentsCount =
Fragment Arguments:
Tile Arguments:
-[MTLRenderPipelineColorAttachmentDescriptorArrayInternal objectAtIndexedSubscript:]
-[MTLRenderPipelineColorAttachmentDescriptorArrayInternal setObject:atIndexedSubscript:]
attachment is not a MTLRenderPipelineColorAttachmentDescriptor.
Unspecified
Point
Line
Triangle
Alpha to Coverage =
Alpha to One =
Rasterization Enabled =
Sample Coverage =
Sample Mask =
0x%lx
Input Primitive Topology =
Depth Attachment Format =
Stencil Attachment Format =
tessellationPartitionMode =
maxTessellationFactor =
tessellationFactorScaleEnabled =
tessellationFactorFormat =
tessellationControlPointIndexType =
tessellationFactorStepFunction =
tessellationOutputWindingOrder =
Vertex Function =
Fragment Function =
Vertex Array:
Vertex   Depth Compare Clamp Mask =
0x%x
Fragment Depth Compare Clamp Mask =
Color Attachments:
Pipeline Library:
Vertex Buffer %u:
Fragment Buffer %u:
vertexLinkedFunctions =
fragmentLinkedFunctions =
-[MTLRenderPipelineDescriptorInternal setInputPrimitiveTopology:]
inputPrimitiveTopology value (%u) is invalid
-[MTLRenderPipelineDescriptorInternal setVertexLinkedFunctions:]
-[MTLRenderPipelineDescriptorInternal setFragmentLinkedFunctions:]
-[MTLRenderPipelineDescriptorInternal setLabel:]
-[MTLRenderPipelineDescriptorInternal setVertexFunction:]
vertexFunction is not a MTLFunction.
vertexFunction functionType is not a MTLFunctionTypeVertex.
-[MTLRenderPipelineDescriptorInternal setFragmentFunction:]
fragmentFunction is not a MTLFunction.
fragmentFunction functionType is not a MTLFunctionTypeFragment.
-[MTLRenderPipelineDescriptorInternal attachVertexDescriptor:]
vertexDescriptor is not a MTLVertexDescriptor.
-[MTLRenderPipelineDescriptorInternal setVertexDescriptor:]
%s must not be nil.
%s is associated with a different device.
%s %@ cannot be used to build a pipeline state. Use newFunctionWithName:constantValues:... to get the specialized function
Vertex function has input attributes but no vertex descriptor was set.
-[_MTLRenderPipelineState initWithDevice:pipelineStateDescriptor:]
Render Pipeline Descriptor Validation
desc is not a MTLRenderPipelineDescriptor.
pipelines with tessellationFactorScaleEnabled = YES are not compatible with indirect command buffers
-[_MTLRenderPipelineState initWithDeviceAndTileDesc:tilePipelineStateDescriptor:]
-[_MTLRenderPipelineState initWithParent:]
Render Pipeline State Validation
parent must not be nil.
parent is not a _MTLRenderPipelineState.
-[_MTLRenderPipelineState initWithTileParent:]
v32@?0@"NSString"8@"NSData"16^B24
MTLBlendFactorZero
MTLBlendFactorOne
MTLBlendFactorSourceColor
MTLBlendFactorOneMinusSourceColor
MTLBlendFactorSourceAlpha
MTLBlendFactorOneMinusSourceAlpha
MTLBlendFactorDestinationColor
MTLBlendFactorOneMinusDestinationColor
MTLBlendFactorDestinationAlpha
MTLBlendFactorOneMinusDestinationAlpha
MTLBlendFactorSourceAlphaSaturated
MTLBlendFactorBlendColor
MTLBlendFactorOneMinusBlendColor
MTLBlendFactorBlendAlpha
MTLBlendFactorOneMinusBlendAlpha
MTLBlendFactorSource1Color
MTLBlendFactorOneMinusSource1Color
MTLBlendFactorSource1Alpha
MTLBlendFactorOneMinusSource1Alpha
MTLBlendOperationAdd
MTLBlendOperationSubtract
MTLBlendOperationReverseSubtract
MTLBlendOperationMin
MTLBlendOperationMax
None
MTLTessellationPartitionModePow2
MTLTessellationPartitionModeInteger
MTLTessellationPartitionModeFractionalOdd
MTLTessellationPartitionModeFractionalEven
MTLTessellationFactorFormatHalf
MTLTessellationFactorFormatFloat_SPI
MTLTessellationControlPointIndexTypeNone
MTLTessellationControlPointIndexTypeUInt16
MTLTessellationControlPointIndexTypeUInt32
MTLTessellationFactorStepFunctionConstant
MTLTessellationFactorStepFunctionPerPatch
MTLTessellationFactorStepFunctionPerInstance
MTLTessellationFactorStepFunctionPerPatchAndPerInstance
MTLWindingClockwise
MTLWindingCounterClockwise
validateMTLTessellationPartitionMode
tessellationPartitionMode is not a valid MTLTessellationPartitionMode.
validateMaxTessellationFactor
maxTessellationFactor must be >= 1 and <= 64
validateMTLTessellationFactorFormat
tessellationFactorFormat is not a valid MTLTessellationFactorFormat.
validateMTLTessellationControlPointIndexType
tessellationControlPointIndexType is not a valid MTLTessellationControlPointIndexType.
validateMTLTessellationFactorStepFunction
tessellationFactorStepFunction is not a valid MTLTessellationFactorStepFunction.
validateMTLWinding
tessellationOutputWindingOrder is not a valid MTLWinding.
maxTessellationFactor(%lu) must be <= %lu.
maxTessellationFactor(%lu) must be a power of 2 when using MTLTessellationPartitionModePow2.
maxTessellationFactor(%lu) must be even when using MTLTessellationPartitionModeFractionalOdd or MTLTessellationPartitionModeFractionalEven.
colorSampleCount not 0 but the pipeline vertex function is writing to render_target_array_index.
Pipeline rasterSampleCount (%u) is greater than 1 but the pipeline vertex function is writing to render_target_array_index.
tessellationFactorFormat(%d) is not a valid MTLTessellationFactorFormat.
Blending is enabled for render target %lu; however, the pixelformat %s for this render target is not blendable.
writeMask(0x%lx) is not MTLColorWriteMaskAll or MTLColorWriteMaskNone for render target %lu; however, the pixelformat %s for this render target requires MTLColorWriteMaskAll or MTLColorWriteMaskNone.
MTLRenderPipelineDescriptor color render target(%lu) exceeds platform max(%lu).
Dual source blending is used in combination with multiple render targets
MTLRenderPipelineDescriptor with alphaToCoverageEnabled requires a float/unorm pixel format, but colorAttachments[0].pixelFormat(%s) is not blendable
MTLRenderPipelineDescriptor with alphaToOneEnabled requires a float/unorm pixel format, but colorAttachments[0].pixelFormat(%s) is not blendable
depthAttachmentPixelFormat is not a valid MTLPixelFormat.
depthAttachmentPixelFormat %s is not depth renderable.
stencilAttachmentPixelFormat is not a valid MTLPixelFormat.
stencilAttachmentPixelFormat %s is not stencil renderable.
No valid pixelFormats set.
depthAttachmentPixelFormat (%s) and stencilAttachmentPixelFormat (%s) must match.
factor is not a valid MTLBlendFactor.
func is not a valid MTLBlendOperation.
blendFactorSource
Invalid blend factor
MTLRenderPipelineDescriptor color render target(%lu) is using a blend factor (%@)which is can only be used for render target 0
failed assertion %s at line %d in %s. %@
failed assertion %s at line %d in %s
MTLFailureTypeGetErrorModeType
MTLDebug.mm
failureType < MTLFailureTypeCount
MTLFailureTypeSetErrorModeType
warning
errorCheckExtended
%s, line %u: %s '%s'
ignore
assert
nslog
METAL_ERROR_MODE
MTL_ERROR_MODE
METAL_DEBUG_ERROR_MODE
MTL_DEBUG_LAYER_ERROR_MODE
METAL_WARNING_MODE
MTL_DEBUG_LAYER_WARNING_MODE
METAL_ERROR_CHECK_EXTENDED_MODE
Invalid option for %s, valid options are:
MTLGetEnvCase
MTLUtils_Internal.h
functions =
privateFunctions =
groups =
MTLPurgeableStateKeepCurrent
MTLPurgeableStateNonVolatile
MTLPurgeableStateVolatile
MTLPurgeableStateEmpty
MTLResourceCPUCacheModeWriteCombined 
MTLResourceCPUCacheModeDefaultCache 
MTLResourceCPUCacheModeInvalid 
MTLResourceStorageModePrivate 
MTLResourceStorageModeShared 
MTLResourceStorageModeMemoryless 
MTLResourceStorageModeInvalid 
MTLResourceHazardTrackingModeUntracked 
MTLResourceHazardTrackingModeTracked 
MTLResourceHazardTrackingModeDefault 
MTLResourceHazardTrackingModeInvalid 
MTLHazardTrackingModeDefault
MTLHazardTrackingModeUntracked
MTLHazardTrackingModeTracked
char
uchar
bool
long
ulong
float2
half2
int2
uint2
short2
ushort2
char2
uchar2
bool2
long2
ulong2
float3
half3
int3
uint3
short3
ushort3
char3
uchar3
bool3
long3
ulong3
float4
half4
int4
uint4
short4
ushort4
char4
uchar4
bool4
long4
ulong4
validateMTLDataType
type (%lu) is not a valid MTLDataType.
pipelineCollection
addLibraryDescriptor
collected two libraries with the same name (%@)
adding library with name: %s filePath: %s
%@_%@_%s
getFunctionData
library was not collected for function %@
function %@ was not collected but it is referenced in the descriptor
dumpLibraries_block_invoke
unable to load library data for %@
unable to write library data to %@: %@
writeJSONToFile_block_invoke
writing serialized pipelines to '%@' failed with error: %@
ComputePipeline_
RenderPipeline_
%u.%u
Offline Compilation
version
contents
JSONDataNoSync
serialization failed with error: %@
%s.metallib
0123456789ABCDEF
-[MTLBlitPassSampleBufferAttachmentDescriptorArrayInternal objectAtIndexedSubscript:]
-[MTLBlitPassSampleBufferAttachmentDescriptorArrayInternal setObject:atIndexedSubscript:]
This object may only be encoded by an NSXPCCoder.
Port
Label
This object may only be decoded by an NSXPCCoder.
MTLSharedEventListener
-[MTLFunctionDescriptor setName:]
-[MTLFunctionDescriptor setSpecializedName:]
specializedName must not be nil.
specializedName is not a NSString.
-[MTLFunctionDescriptor setConstantValues:]
constantValues must not be nil.
constantValues is not a MTLFunctionConstantValues.
specializedName =
constantValues =
options =
function is not a valid MTLCompareFunction.
MTLCompareFunctionNever
MTLCompareFunctionLess
MTLCompareFunctionEqual
MTLCompareFunctionLessEqual
MTLCompareFunctionGreater
MTLCompareFunctionNotEqual
MTLCompareFunctionGreaterEqual
MTLCompareFunctionAlways
stencilCompareFunction        =
stencilFailureOperation       =
stencilPassDepthFailOperation =
stencilPassDepthPassOperation =
stencilReadMask               =
stencilWriteMask              =
stencilCompareFunction        = MTLCompareFunctionAlways
stencilFailOperation          = MTLStencilOperationKeep
stencilPassDepthFailOperation = MTLStencilOperationKeep
stencilPassDepthPassOperation = MTLStencilOperationKeep
stencilReadMask               = 0xffffffff
stencilWriteMask              = 0xffffffff
depthCompareFunction =
depthWriteEnabled =
frontFace:
backFace:
-[MTLDepthStencilDescriptorInternal setFrontFaceStencil:]
frontFaceStencil is not a MTLStencilDescriptor.
-[MTLDepthStencilDescriptorInternal setBackFaceStencil:]
backFaceStencil is not a MTLStencilDescriptor.
-[MTLDepthStencilDescriptorInternal setLabel:]
-[_MTLDepthStencilState initWithDevice:depthStencilDescriptor:]
Creation Depth Stencil State
desc is not a MTLDepthStencilDescriptor.
MTLStencilOperationKeep
MTLStencilOperationZero
MTLStencilOperationReplace
MTLStencilOperationIncrementClamp
MTLStencilOperationDecrementClamp
MTLStencilOperationInvert
MTLStencilOperationIncrementWrap
MTLStencilOperationDecrementWrap
operation is not a valid MTLStencilOperation.
argumentIndex =
arguments =
controlDependencies =
functionName =
nodes =
outputNode =
attributes =
functionGraphs =
MTLCommandBufferCreationTime
MTLCommandBufferEnqueueTime
MTLCommandBufferCommitTime
MTLCommandBufferSubmitToKernelTime
MTLCommandBufferKernelScheduledTime
MTLCommandBufferSubmitToHWTime
MTLCommandBufferCompletionInterruptTime
MTLCommandBufferKernelCompleteTime
MTLCommandBufferCompletionHandlerEnqueueTime
MTLCommandBufferCompletionHandlerExecutionTime
MTLCommandBufferEncoderInfoErrorKey
MTLCommandEncoderErrorStateUnknown
MTLCommandEncoderErrorStateCompleted
MTLCommandEncoderErrorStateAffected
MTLCommandEncoderErrorStatePending
MTLCommandEncoderErrorStateFaulted
<errorState: %@, label: %@, debugSignposts: %@>
-[_MTLCommandBuffer initWithQueue:retainedReferences:synchronousDebugMode:]
queue must not be nil.
queue is not a MTLCommandQueue.
-[_MTLCommandBuffer encodeDashboardTagForResourceGroup:]
%s not supported on this device
-[_MTLCommandBuffer encodeDashboardFinalizeForResourceGroup:dashboard:value:forIndex:]
-[_MTLCommandBuffer encodeDashboardFinalizeForResourceGroup:dashboard:values:indices:count:]
commandQueue =
retainedReferences =
-[_MTLCommandBuffer enqueue]
enqueue an already enqueued command buffer
-[_MTLCommandBuffer commit]
commit an already committed command buffer
commit command buffer with uncommitted encoder
-[_MTLCommandBuffer commitAndReset]
Command buffer failed
-[_MTLCommandBuffer addScheduledHandler:]
Scheduled handler provided after commit call
-[_MTLCommandBuffer presentDrawable:]
drawable must not be nil.
drawable is not a MTLDrawable.
v16@?0@"<MTLDrawable>"8
-[_MTLCommandBuffer presentDrawable:atTime:]
-[_MTLCommandBuffer addCompletedHandler:]
Completed handler provided after commit call
-[_MTLCommandBuffer didScheduleWithStartTime:endTime:error:]
Execution of the command buffer was aborted due to an error during execution. %@
-[_MTLCommandBuffer didCompleteWithStartTime:endTime:error:]
-[_MTLCommandBuffer pushDebugGroup:]
vertexFormat is not a valid MTLAttributeFormat / MTLAttributeFormat.
MTLAttributeFormatUChar2
MTLAttributeFormatUChar3
MTLAttributeFormatUChar4
MTLAttributeFormatChar2
MTLAttributeFormatChar3
MTLAttributeFormatChar4
MTLAttributeFormatUChar2Normalized
MTLAttributeFormatUChar3Normalized
MTLAttributeFormatUChar4Normalized
MTLAttributeFormatChar2Normalized
MTLAttributeFormatChar3Normalized
MTLAttributeFormatChar4Normalized
MTLAttributeFormatUShort2
MTLAttributeFormatUShort3
MTLAttributeFormatUShort4
MTLAttributeFormatShort2
MTLAttributeFormatShort3
MTLAttributeFormatShort4
MTLAttributeFormatUShort2Normalized
MTLAttributeFormatUShort3Normalized
MTLAttributeFormatUShort4Normalized
MTLAttributeFormatShort2Normalized
MTLAttributeFormatShort3Normalized
MTLAttributeFormatShort4Normalized
MTLAttributeFormatHalf2
MTLAttributeFormatHalf3
MTLAttributeFormatHalf4
MTLAttributeFormatFloat
MTLAttributeFormatFloat2
MTLAttributeFormatFloat3
MTLAttributeFormatFloat4
MTLAttributeFormatInt
MTLAttributeFormatInt2
MTLAttributeFormatInt3
MTLAttributeFormatInt4
MTLAttributeFormatUInt
MTLAttributeFormatUInt2
MTLAttributeFormatUInt3
MTLAttributeFormatUInt4
MTLAttributeFormatInt1010102Normalized
MTLAttributeFormatUInt1010102Normalized
MTLAttributeFormatUChar4Normalized_BGRA
MTLAttributeFormatUInt_VertexID
MTLAttributeFormatUInt_InstanceID
MTLAttributeFormatInvalid
MTLAttributeFormatUChar
MTLAttributeFormatChar
MTLAttributeFormatUCharNormalized
MTLAttributeFormatCharNormalized
MTLAttributeFormatUShort
MTLAttributeFormatShort
MTLAttributeFormatUShortNormalized
MTLAttributeFormatShortNormalized
MTLAttributeFormatHalf
-[MTLVertexBufferLayoutDescriptorArrayInternal objectAtIndexedSubscript:]
-[MTLVertexBufferLayoutDescriptorArrayInternal setObject:atIndexedSubscript:]
-[MTLVertexAttributeDescriptorInternal setBufferIndex:]
-[MTLVertexAttributeDescriptorArrayInternal objectAtIndexedSubscript:]
-[MTLVertexAttributeDescriptorArrayInternal setObject:atIndexedSubscript:]
-[MTLVertexDescriptorInternal newSerializedDescriptor]
MTLVertexDescriptor
-[MTLVertexDescriptorInternal validateWithVertexFunction:error:renderPipelineDescriptor:]
MTLVertexDescriptorDescription
stepFunction is not a valid MTLVertexStepFunction.
MTLVertexStepFunctionPerVertex not allowed with postTessellationVertexFunction.
stepRate(%lu) must be one if stepFunction is MTLVertexStepFunctionPerVertex.
stepRate(%lu) cannot be zero if stepFunction is MTLVertexStepFunctionPerInstance.
stepRate(%lu) must be zero if stepFunction is MTLVertexStepFunctionConstant.
MTLVertexStepFunctionPerPatch requires postTessellationVertexFunction.
stepRate(%lu) must be one if stepFunction is MTLVertexStepFunctionPerPatch.
MTLVertexStepFunctionPerPatchControlPoint requires postTessellationVertexFunction.
stepRate(%lu) must be one if stepFunction is MTLVertexStepFunctionPerPatchAndPerInstance.
MTLVertexStepFunctionConstant
MTLVertexStepFunctionPerVertex
MTLVertexStepFunctionPerInstance
MTLVertexStepFunctionPerPatch
MTLVertexStepFunctionPerPatchControlPoint
-[_MTLCommandQueue initWithDevice:descriptor:]
Command Queue Creation Validation
invalid descriptor.maxCommandBufferCount value %u
invalid descriptor.qosLevel value %u
cannot create command-buffer counting semaphore
com.Metal.CommandQueueDispatch
com.Metal.CompletionQueueDispatch
cannot create presentation semaphore
METAL_FORCE_IMMEDIATE_SUBMISSION
-[_MTLCommandQueue enqueueCommandBuffer:]
commandBuffer is associated with a different device
-[_MTLCommandQueue completeCommandBuffers:count:]
-[_MTLCommandQueue commitCommandBuffer:wake:]
-[_MTLCommandQueue commandBufferDidComplete:startTime:completionTime:error:]
-[_MTLCommandQueue availableCounters]
Metal Vendor Statistics not implemented
-[_MTLCommandQueue requestCounters:]
maxCommandBufferCount =
qosLevel =
commitQueue =
commitSynchronously =
completionQueue =
disableCrossQueueHazardTracking =
MTLQosExclusive
MTLQosHigh
MTLQosMedium
MTLQosLow
MTLQosOpportunistic
Client storage textures
Memory barrier in compute
Memory barrier in render
Argument Buffers Tier 2
Read-Write Texture Arguments Tier 2
Command buffer streaming codec signalling SPI
Programmable Sample Positions
Framebuffer sizes larger than 64 bytes
MTLClampToBorder with custom color
BC-format texture compression
BC-format textures with MTLTextureType3D
Override default primitive restart
Global Variable Relocation
Global Variable Relocation for Render
Global Variable Relocation for Compute
TLS variables in metal programs
32 bits per channel MSAA textures
32 bits per channel Float texture filtering
Placement heaps
OpenCL Texture Write Swizzles
Pull model interpolation
Int64 Types
Late Eval Events
texture.write() with a non-zero LOD
Shared Texture Handles
Gathering buffer prefetch statistics
YUV pixel formats
Non-Private Depth/Stencil textures
Non-Private MSAA textures
MTLStorageModeShared Heap resources
MTLStorageModeShared textures
Linear textures from shared buffers
Pipeline Libraries
Fragment Only Render Encoders
Create a buffer from an IOSurface
Programmable Blending
Render To Linear Textures
Memoryless Render Targets
Fast Math Inf/NaN Propagation
Invariant Vertex Position
LOD Average in shaders
sRGB views without MTLTextureUsagePixelFormatView
separate depth/stencil
gpu statistics
CompressedTextureView SPI
Render target rotation
Dynamic control point counts
Hash support for IAB layouts for use by Tools
Binary Archives
Binary Libraries
ASTC-format texture compression
Extended YUV pixel formats
XR10 pixel formats
sRGBwrites
Depth Clip Mode
Packed 32-bit format Texture Buffer Writes
ASTC-format textures with MTLTextureType3D
Extended XR10 pixel formats
Writes to buffers from fragment functions
Counting Occlusion Query
Base Vertex Instance Drawing
Indirect draw & dispatch arguments
Tessellation
Read-Write Buffer Arguments
Readable Array Of Textures
Array Of Samplers
Combined MSAA Store And Resolve Action
Mutable Tier1 Argument Buffers
Sampler Compare Function
MSAA Depth Resolve
MSAA Stencil Resolve
MSAA Depth Resolve Filter
Indirect Command Buffers for graphics
Indirect Command Buffers for compute
Indirect Stage In Region
Indirect texture access
Bicubic filtering of 16-bit normalized values
Out of Bounds Reads on Textures
Texture Swizzle
YUV + Alpha pixel formats
Atomic functions with memory order
Support quad_group* attributes in kernel functions
Writes to textures from vertex and fragment functions
Image Blocks
Tile Shaders
Image Block Sample Coverage Control
FP16 on native hardware
Post-Depth Coverage
Mip Levels smaller than Block Size
Dispatch Threads with Non-Uniform Threadgroup Size
Read-Write Texture Arguments
Read-Write Texture Cube Arguments
Texture Cube Array
QUAD Shuffles And Broadcast
Concurrent Compute Dispatch
A Render Pass without a Render Target
Raster Order Groups
Raster Order Groups on Color Attachments
Linear Texture 2D arrays
Non-Square Tile Shaders
Separate Visibility And Shading Rate
2D Linear Texture Array
Layered Rendering
Viewport and Scissor Array
Indirect Tessellation
MSAA Stencil Resolve Filter
Stencil Feedback
FP32 Tessellation Factors
Unaligned vertex fetch
Support simd_group* attributes in kernel functions
Shader Min LOD Clamp
SIMD Shuffles And Broadcast
Writable Array Of Textures
access::write on indirect textures
Dynamic Libraries created with compute state
Dynamic Libraries created with render/tileRender state
Black Or White Sampler Border Colors
MirrorClampToEdge Sampler Mode
SIMD Reduction
DepthClipModeClamp with zMin != 0 or zMax != 1
Texture 2D Multisample Array
Force seams on cubemap filtering
Bicubic filtering of 16-bit float values
Inf/Nan filtering of 16-bit float values
Command Buffer Jump
Stack Overflow, maximum call stack depth exceeded
!$'1
 #&),/
,9FS`mzN13MTLSerializer20ObjectListSerializerE
N13MTLSerializer16ObjectSerializerE
N28MTLPipelineLibrarySerializer25PipelineLibrarySerializerE
N28MTLPipelineLibrarySerializer25NamedObjectJSONSerializerE
N28MTLPipelineLibrarySerializer21NamedObjectSerializerE
N28MTLPipelineLibrarySerializer16ObjectSerializerE
N28MTLPipelineLibrarySerializer24JSONSerializationContextE
N28MTLPipelineLibrarySerializer20SerializationContextE
N28MTLPipelineLibrarySerializer29PipelineLibraryJSONSerializerE
N28MTLPipelineLibrarySerializer26BinarySerializationContextE
N28MTLPipelineLibrarySerializer31PipelineLibraryBinarySerializerE
N28MTLPipelineLibrarySerializer35PipelineDescriptorSerializerPrivateE
N28MTLPipelineLibrarySerializer28PipelineDescriptorSerializerE
N28MTLPipelineLibrarySerializer30PipelineDescriptorDeserializerE
N28MTLPipelineLibrarySerializer36PipelineDescriptorBinaryDeserializerE
N13MTLSerializer26DirectObjectListSerializerE
N13MTLSerializer22PropertyListSerializerE
N13MTLSerializer16StringSerializerE
N28MTLPipelineLibrarySerializer27NamedObjectBinarySerializerE
N13MTLSerializer29CompactPropertyListSerializerE
N13MTLSerializer15ArraySerializerIjEE
N13MTLSerializer21ObjectArraySerializerINS_9ObjectRefEEE
16MTLCompilerCache
18MTLCompilerFSCache
20MTLPipelineDataCache
QQQQQQQ
QQQQQQQQ
&&&&&&&&&&&bbbbbbbbb
bbbbbbbbb
-b-6bb66bbbb-b-bbbbbbbbbbbbbbbbbbbbbbbbbNT
JJBBBBBBB
JBBBBBBBB.U...
&&&&&&&&&&&&
&&&&&&&&&&&&
&&&&&&&&
&3oo
29MTLInputStageReflectionReader
21MTLArgumentListReader
25MTLVertexReflectionReader
27MTLFragmentReflectionReader
28MTLStitchingReflectionReader
26MTLComputeReflectionReader
26MTLCompilerFunctionRequest
18CompilerConnection
21XPCCompilerConnection
35MTLCompilerConnectionManagerPrivate
28MTLCompilerConnectionManager
psvy|
369<?3Bl
UX[^adgj
37SpecialPipelineDescriptorDeserializer
NSt3__120__shared_ptr_emplaceI23MTLPipelineDescriptionsNS_9allocatorIS1_EEEE
 ,hh
@executable_path/
@loader_path/
__TEXT
__text
__DATA
__data
__LINKEDIT
=@JCF
25MTLLibraryDataWithArchive
20MTLCachedLibraryData
14MTLLibraryData
24MTLLibraryDataWithSource
22MTLLibraryDataWithGLIR
15LibraryWithFile
15LibraryWithData
18MTLCompilerRequest
NSt3__120__shared_ptr_pointerIP16MTLCompilerCacheNS_10shared_ptrIS1_E27__shared_ptr_default_deleteIS1_S1_EENS_9allocatorIS1_EEEE
NSt3__110shared_ptrI16MTLCompilerCacheE27__shared_ptr_default_deleteIS1_S1_EE
NSt3__114default_deleteI16MTLCompilerCacheEE
!$'*-036
!$'*-0369<?BEHKNQTWZ]`cfilorux{~
Failed to get cache main folder: search path for cache directory had path count of 0
Failed to get cache main folder: caches directory path was nil
Failed to get cache main folder: path for application cache was not found (errno = %u)
Failed to get cache main folder: mkdir failed to create cache path (errno = %u)
fscache_open returned a NULL pointer but no error.
Path set to copy Metal shader cache (%s) does not exist
Path set to copy Metal shader cache (%s) is not a directory
failed to create %s directory in shader cache at location: %s
@ %s(): fscache_element_get_data() failed with error = %d
fstat failed for the pipeline data cache, errno %d
Mapping the pipeline data cache failed, errno %d
The pipeline data cache is empty
The pipeline data cache is not valid for the given system
The pipeline data cache has an invalid data section
The pipeline data cache has an invalid number of entries
The pipeline data cache has an invalid entry
Failed to get Metal shader cache main folder: shader cache main folder was overriden and the path is too long (max length %zu)
Done compiling Metal function '%s': %f ms
Done compiling Metal library with functions '%s': %f ms
Done compiling Metal function specialization for '%s': %f ms
Done compiling Metal %s, compile statistics: %s
Failed to add compile time dictionary for library fom source
Failed to add compile time dictionary for dynamic library
Failed to add compile time dictionary for binary function
Warning: %s
[NSBundle bundleWithIdentifier:@"com.apple.Metal"] failed
[metalBundle URLForResource:@"MTLECBE" withExtension:@"metallib"] failed
MTLCompiler: XPC connection is down (likely due to XPC_ERROR_CONNECTION_INVALID).
MTLCompiler: Compiler encountered XPC_ERROR_CONNECTION_INVALID. Shutting down the connection permanently...
MTLCompiler: failed to ping the compiler service %u times over %f ms
compiling shader
MTLCompiler: Compilation failed with XPC_ERROR_CONNECTION_INTERRUPTED on %d try
MTLCompiler: Compilation failed with XPC_ERROR_CONNECTION_INVALID on %d try. Shutting down the connection permanently...
Compiler failed to build request
Compiler failed with XPC_ERROR_CONNECTION_INTERRUPTED
Compiler failed with XPC_ERROR_CONNECTION_INVALID
Compiler failed with XPC_ERROR_TERMINATION_IMMINENT
Compiler failed with unknown XPC error
could not open MTLSimDriver!
could not find symbol MTLCreateSimulatorDevice
Invalid metallib file (missing token)
Invalid metallib file (reached unexpected end of file)
failed to open metal library with error: %s
The pipeline library's cache is nil, but disableRunTimeCompilation was set. Cache lookups will always fail.
The primary shader cache is null. No shaders will be cached. This should not occur on a live system.
%s, line %u: %s '%s'
Failed to create constant hash for function.
Execution of the command buffer was aborted due to an error during execution. %s
_PipelineLibrarySerializer
MTLCaptureScope
NSObject
MTLTileRenderPipelineColorAttachmentDescriptor
NSCopying
MTLTileRenderPipelineColorAttachmentDescriptorInternal
MTLTileRenderPipelineColorAttachmentDescriptorArray
MTLTileRenderPipelineColorAttachmentDescriptorArrayInternal
MTLTileRenderPipelineDescriptor
MTLFunction
MTLTileRenderPipelineDescriptorInternal
_MTLFunctionLogDebugLocation
MTLFunctionLogDebugLocation
MTLBufferLayoutDescriptor
MTLBufferLayoutDescriptorInternal
MTLBufferLayoutDescriptorArray
MTLBufferLayoutDescriptorArrayInternal
MTLAttributeDescriptor
MTLAttributeDescriptorInternal
MTLAttributeDescriptorArray
MTLAttributeDescriptorArrayInternal
MTLStageInputOutputDescriptor
MTLStageInputOutputDescriptorInternal
_MTLIndirectArgumentBufferLayout
_MTLIndirectArgumentEncoder
MTLArgumentEncoder
MTLEmulationIndirectArgumentBufferLayout
MTLBinaryArchiveDescriptor
MTLBinaryKey
MTLBinaryEntry
_MTLBinaryArchive
MTLBinaryArchiveSPI
MTLBinaryArchive
MTLBinaryArchiveInternal
_MTLIndirectDrawArguments
_MTLIndirectDrawIndexedArguments
_MTLIndirectDrawPatchesArguments
_MTLIndirectDrawIndexedPatchesArguments
_MTLIndirectTessellationFactorArguments
_MTLIndirectDispatchThreadgroupsArguments
_MTLImageBlockArguments
_MTLIndirectDispatchThreadsArguments
MTLNamedConstantValue
MTLIndexedConstantValue
MTLFunctionConstantValues
MTLFunctionConstantValuesInternal
MTLFunctionConstantSPI
MTLDynamicLibraryContainer
_MTLDynamicLibrary
MTLDynamicLibrarySPI
MTLDynamicLibrary
MTLBufferArgument
MTLThreadgroupMemoryArgument
MTLTextureArgument
MTLBuiltInArgument
MTLImageBlockDataArgument
MTLImageBlockArgument
_MTLObjectWithLabel
MTLPipelineBufferDescriptor
MTLPipelineBufferDescriptorInternal
MTLPipelineBufferDescriptorArray
MTLPipelineBufferDescriptorArrayInternal
MTLDebugLocation
MTLDebugSubProgram
MTLDebugInstrumentationData
_MTLPipelineStateBinary
MTLPipelineStateBinary
_MTLProgramAddressTableMappedBinary
MTLProgramAddressTableMappedBinary
_MTLProgramAddressTable
MTLProgramAddressTable
MTLIndirectArgumentDescriptorInternal
MTLIndirectArgumentDescriptor
MTLArgumentDescriptorInternal
MTLArgumentDescriptor
_MTLDevice
MTLFunctionStitchingNode
MTLComputePassSampleBufferAttachmentDescriptor
MTLComputePassSampleBufferAttachmentDescriptorInternal
MTLComputePassSampleBufferAttachmentDescriptorArray
MTLComputePassSampleBufferAttachmentDescriptorArrayInternal
MTLComputePassDescriptor
MTLComputePassDescriptorInternal
MTLCounterInternal
MTLCounter
MTLCounterSetInternal
MTLCounterSet
MTLCounterSampleBufferDescriptor
MTLCounterSampleBufferDescriptorInternal
MTLTextureDescriptor
MTLTextureDescriptorInternal
MTLIndirectCommandBufferDescriptor
MTLIndirectCommandBufferDescriptorInternal
_MTLPipelineCache
MTLPipelineCache
_MTLPipelineLibrary
MTLPipelineLibrarySPI
MTLPipelineLibrary
MTLDevice
MTLDeviceSPI
_MTLParallelRenderCommandEncoder
MTLParallelRenderCommandEncoder
MTLCommandEncoder
MTLCaptureDescriptor
MTLCaptureError
MTLCaptureManager
MTLResourceListPool
_MTLFence
MTLSamplerDescriptor
MTLSamplerDescriptorInternal
_MTLSamplerState
MTLSamplerStateSPI
MTLSamplerState
MTLLoadedFile
MTLLoader
MTLTargetDeviceArchitecture
MTLHeapDescriptor
MTLHeapDescriptorInternal
_MTLHeap
MTLCompileOptions
MTLCompileOptionsInternal
MTLCompileFunctionRequestData
MTLVertexAttribute
MTLVertexAttributeInternal
MTLAttribute
MTLAttributeInternal
MTLFunctionConstant
MTLFunctionConstantInternal
MTLFunctionReflection
MTLFunctionReflectionInternal
MTLBufferRelocation
MTLRelocation
MTLConstantRelocation
_MTLLibrary
MTLLibrarySPI
MTLLibrary
_MTLFunction
MTLFunctionSPI
_MTLFunctionInternal
MTLFunctionVariant
2B 1
MTLCompiler
_MTLIndirectRenderCommand
MTLIndirectRenderCommandSPI
MTLIndirectRenderCommand
MTLRenderPassAttachmentDescriptor
MTLRenderPassColorAttachmentDescriptor
MTLRenderPassDepthAttachmentDescriptor
MTLRenderPassStencilAttachmentDescriptor
MTLTextureImplementation
MTLTextureSPI
MTLTexture
MTLResource
MTLResourceSPI
MTLRenderPassColorAttachmentDescriptorInternal
MTLRenderPassDepthAttachmentDescriptorInternal
MTLRenderPassStencilAttachmentDescriptorInternal
MTLRenderPassColorAttachmentDescriptorArray
MTLRenderPassColorAttachmentDescriptorArrayInternal
MTLRenderPassSampleBufferAttachmentDescriptor
MTLRenderPassSampleBufferAttachmentDescriptorInternal
MTLRenderPassSampleBufferAttachmentDescriptorArray
MTLRenderPassSampleBufferAttachmentDescriptorArrayInternal
MTLRenderPassDescriptor
MTLBuffer
MTLRenderPassDescriptorInternal
_MTLCommandEncoder
MTLComputePipelineReflection
MTLComputePipelineReflectionInternal
MTLComputePipelineDescriptor
MTLComputePipelineDescriptorInternal
_MTLComputePipelineState
MTLComputePipelineState
_MTLIndirectComputeCommand
MTLIndirectComputeCommandSPI
MTLIndirectComputeCommand
_MTLDebugCommandEncoder
MTLDebugCommandEncoder
MTLStructType
MTLStructTypeInternal
MTLType
MTLTypeInternal
MTLPointerType
MTLPointerTypeInternal
MTLTextureReferenceType
MTLTextureReferenceTypeInternal
MTLStructMember
MTLStructMemberInternal
MTLArrayType
MTLArrayTypeInternal
MTLArgument
MTLArgumentInternal
MTLPostVertexDumpOutput
MTLInferredInput
MTLIndirectConstantArgument
MTLMessageFilter
MTLMessage
_MTLMessageNotifier
MTLRenderPipelineColorAttachmentDescriptor
MTLRenderPipelineColorAttachmentDescriptorInternal
MTLRenderPipelineReflection
MTLRenderPipelineReflectionInternal
MTLRenderPipelineColorAttachmentDescriptorArray
MTLRenderPipelineColorAttachmentDescriptorArrayInternal
MTLRenderPipelineDescriptor
MTLRenderPipelineDescriptorInternal
_MTLRenderPipelineState
MTLRenderPipelineState
MTLLinkedFunctions
MTLLinkedFunctionsInternal
MTLResourceList
MTLResourceAllocationInfo
NSCoding
_MTLResource
MTLBlitPassSampleBufferAttachmentDescriptor
MTLBlitPassSampleBufferAttachmentDescriptorInternal
MTLBlitPassSampleBufferAttachmentDescriptorArray
MTLBlitPassSampleBufferAttachmentDescriptorArrayInternal
MTLBlitPassDescriptor
MTLBlitPassDescriptorInternal
MTLSharedEventHandle
NSSecureCoding
MTLSharedEventListener
MTLSharedEventListenerInternal
MTLFunctionDescriptor
MTLStencilDescriptor
Driver
MTLStencilDescriptorInternal
MTLDepthStencilDescriptor
MTLDepthStencilDescriptorInternal
_MTLDepthStencilState
MTLDepthStencilStateSPI
MTLDepthStencilState
MTLBufferDescriptor
MTLFunctionStitchingAttributeAlwaysInline
MTLFunctionStitchingAttribute
MTLFunctionStitchingInputNode
MTLFunctionStitchingFunctionNode
MTLFunctionStitchingGraph
MTLStitchedLibraryDescriptor
MTLFunctionStitchingInputBuffer
MTLFunctionStitchingInputNodeSPI
MTLFunctionStitchingInputBufferAddress
MTLFunctionStitchingInputTexture
MTLFunctionStitchingInputSampler
MTLFunctionStitchingInputThreadgroup
MTLFunctionStitchingInputImageblock
MTLFunctionStitchingBuiltinThreadPositionInGrid
MTLFunctionStitchingInputBuiltin
MTLFunctionStitchingBuiltinThreadPositionInThreadgroup
MTLFunctionStitchingFunctionNodeSPI
MTLFunctionStitchingGraphSPI
MTLStitchedLibraryDescriptorSPI
_MTLCommandBufferEncoderInfo
MTLCommandBufferEncoderInfo
MTLCommandBufferDescriptor
_MTLCommandBufferDescriptor
MTLDrawable
_MTLCommandBuffer
MTLVertexBufferLayoutDescriptor
MTLVertexBufferLayoutDescriptorInternal
MTLVertexBufferLayoutDescriptorArray
MTLVertexBufferLayoutDescriptorArrayInternal
MTLVertexAttributeDescriptor
MTLVertexAttributeDescriptorInternal
MTLVertexAttributeDescriptorArray
MTLVertexAttributeDescriptorArrayInternal
MTLVertexDescriptor
MTLVertexDescriptorInternal
MTLCommandBuffer
_MTLCommandQueue
MTLCommandQueueDescriptor
MTLCommandQueueDescriptorInternal
_MTLDeviceFeatureQueries
MTLDeviceFeatureQueries
init
dealloc
addLibrary:
addSpecializedFunction:descriptor:
addRenderPipelineDescriptor:
addComputePipelineDescriptor:
totalSize
writeToMemory:size:
_binarySerializer
isEqual:
class
self
performSelector:
performSelector:withObject:
performSelector:withObject:withObject:
isProxy
isKindOfClass:
isMemberOfClass:
conformsToProtocol:
respondsToSelector:
retain
release
autorelease
retainCount
zone
hash
superclass
description
debugDescription
TQ,R
T#,R
T@"NSString",R,C
beginScope
endScope
label
setLabel:
device
commandQueue
T@"NSString",C
T@"<MTLDevice>",R,N
T@"<MTLCommandQueue>",R,N
initWithDevice:commandQueue:
_device
_commandQueue
T@"NSString",C,D
T@"<MTLDevice>",R,N,V_device
T@"<MTLCommandQueue>",R,N,V_commandQueue
allocWithZone:
alloc
copyWithZone:
pixelFormat
TQ,D,N
stringWithFormat:
formattedDescription:
setPixelFormat:
_private
objectAtIndexedSubscript:
setObject:atIndexedSubscript:
copy
_descriptors
reset
preloadedLibraries
setPreloadedLibraries:
_preloadedLibraries
T@"NSString",C,D,N
tileFunction
T@"<MTLFunction>",&,D,N
rasterSampleCount
colorAttachments
T@"MTLTileRenderPipelineColorAttachmentDescriptorArray",R,D
threadgroupSizeMatchesTileSize
TB,D,N
tileBuffers
T@"MTLPipelineBufferDescriptorArray",R,D
maxTotalThreadsPerThreadgroup
binaryArchives
T@"NSArray",C,D,N
T@"NSArray",C,N,V_preloadedLibraries
linkedFunctions
T@"MTLLinkedFunctions",C,D,N
stringByPaddingToLength:withString:startingAtIndex:
arrayWithCapacity:
numberWithUnsignedInteger:
null
numberWithUnsignedShort:
arrayWithObjects:count:
addObjectsFromArray:
addObject:
componentsJoinedByString:
setRasterSampleCount:
newArgumentEncoderWithBufferIndex:
newArgumentEncoderWithBufferIndex:reflection:
functionType
patchType
patchControlPointCount
vertexAttributes
stageInputAttributes
name
functionConstantsDictionary
T@"<MTLDevice>",R
Tq,R
T@"NSArray",R
T@"NSString",R
T@"NSDictionary",R
supportsTextureSampleCount:
dictionaryWithObject:forKey:
initWithDomain:code:userInfo:
registerTileRenderPipelineDescriptor:
functions
count
privateFunctions
pluginData
sampleCount
setSampleCount:
setPluginData:
colorSampleCount
setColorSampleCount:
setTileFunction:
setThreadgroupSizeMatchesTileSize:
_descriptorPrivate
setMaxTotalThreadsPerThreadgroup:
setTextureWriteRoundingMode:
textureWriteRoundingMode
setBinaryArchives:
setLinkedFunctions:
insertLibraries
setInsertLibraries:
validateWithDevice:error:
validateWithDevice:
newSerializedTileDataWithFlags:options:error:
stringWithUTF8String:
needsFunctionConstantValues
UTF8String
supportsSeparateVisibilityAndShadingRate
supportsTextureWriteRoundingMode:
maxColorAttachments
maxFramebufferStorageBits
countByEnumeratingWithState:objects:count:
bitCodeHash
objectForKeyedSubscript:
groups
scope
filename
initFileURLWithPath:
line
column
absoluteString
functionName
T@"NSString",R,N
T@"NSURL",R,N
TQ,R,N
initWithDebugLocation:
_debugLocation
_URL
T@"NSURL",R,V_URL
stride
stepFunction
stepRate
setStride:
setStepFunction:
setStepRate:
_stride
_stepFunction
_instanceStepRate
format
offset
bufferIndex
setFormat:
setBufferIndex:
setOffset:
_vertexFormat
_offset
_bufferIndex
stageInputOutputDescriptor
layouts
T@"MTLBufferLayoutDescriptorArray",R,D
attributes
T@"MTLAttributeDescriptorArray",R,D
indexType
indexBufferIndex
attributeIndex
isActive
attributeType
openGLModeEnabled
vertexDescriptor
setIndexType:
setIndexBufferIndex:
newSerializedDescriptor
validateWithVertexFunction:error:renderPipelineDescriptor:
_vertexBufferArray
_attributeArray
_indexBufferIndex
_indexType
initWithFormat:arguments:
errorWithDomain:code:userInfo:
newNamedConstantArray
newIndexedConstantArray
dataType
data
index
isBlendingEnabled
sourceRGBBlendFactor
destinationRGBBlendFactor
rgbBlendOperation
sourceAlphaBlendFactor
destinationAlphaBlendFactor
alphaBlendOperation
writeMask
mutability
array
numberWithInt:
dictionaryWithObjects:forKeys:count:
numberWithFloat:
numberWithUnsignedInt:
numberWithShort:
numberWithChar:
numberWithUnsignedChar:
setObject:forKeyedSubscript:
dictionaryWithObjectsAndKeys:
numberWithBool:
setValue:forKey:
functionRef
setComputeFunction:
setThreadGroupSizeIsMultipleOfThreadExecutionWidth:
setSupportIndirectCommandBuffers:
initWithUTF8String:
stageInputDescriptor
setStageInputDescriptor:
buffers
setVertexFunction:
setFragmentFunction:
setVertexDescriptor:
setAlphaToCoverageEnabled:
setAlphaToOneEnabled:
setRasterizationEnabled:
setSampleCoverage:
setSampleMask:
setDepthAttachmentPixelFormat:
setStencilAttachmentPixelFormat:
setInputPrimitiveTopology:
setTessellationPartitionMode:
setMaxTessellationFactor:
setTessellationFactorScaleEnabled:
setTessellationFactorFormat:
setTessellationControlPointIndexType:
setTessellationFactorStepFunction:
setTessellationOutputWindingOrder:
vertexBuffers
fragmentBuffers
functionWithFunctionRef:
setMutability:
setBlendingEnabled:
setSourceRGBBlendFactor:
setDestinationRGBBlendFactor:
setRgbBlendOperation:
setSourceAlphaBlendFactor:
setDestinationAlphaBlendFactor:
setAlphaBlendOperation:
setWriteMask:
containsObject:
defaultManager
fileExistsAtPath:isDirectory:
stringByAppendingString:
createDirectoryAtPath:withIntermediateDirectories:attributes:error:
contentsOfDirectoryAtPath:error:
hasPrefix:
stringByAppendingPathComponent:
removeItemAtPath:error:
copyItemAtPath:toPath:error:
isIndirectArgumentBuffer
members
structType
arrayType
elementType
elementStructType
elementArrayType
access
initWithName:type:access:isActive:locationIndex:arraySize:dataType:pixelFormat:aluType:isConstantBuffer:dataSize:alignment:
textureType
initWithName:access:isActive:locationIndex:arraySize:dataType:textureType:isDepthTexture:
initWithName:type:access:index:active:arrayLength:
constantBlockAlignment
initWithName:type:access:isActive:locationIndex:dataType:pixelFormat:aluType:dataSize:alignment:
arrayLength
initWithArrayLength:elementType:stride:pixelFormat:aluType:details:
initWithName:offset:dataType:pixelFormat:aluType:indirectArgumentIndex:render_target:raster_order_group:details:
initWithMembers:count:
elementIsArgumentBuffer
elementTypeDescription
indirectArgumentIndex
dataTypeDescription
newIndirectArgumentBufferLayoutWithStructType:
setStructType:withDevice:
doesNotRecognizeSelector:
virtualAddressForBufferAtIndex:inIndirectArgumentBuffer:atOffset:
uniqueIdentifierForTextureAtIndex:inIndirectArgumentBuffer:atOffset:
uniqueIdentifierForSamplerAtIndex:inIndirectArgumentBuffer:atOffset:
uniqueIdentifierForRenderPipelineAtIndex:inIndirectArgumentBuffer:atOffset:
uniqueIdentifierForComputePipelineAtIndex:inIndirectArgumentBuffer:atOffset:
uniqueIdentifierForIndirectCommandBufferAtIndex:inIndirectArgumentBuffer:atOffset:
bufferLayoutMatchesFrontEndLayout
encodedLength
alignment
hashValue
hashOffset
hashMask
hashSignature
constantOffsetAtIndex:
bufferLayoutForResourceAtIndex:
TB,R,D
TQ,R,D
TI,R
T@"<MTLDeviceSPI>",R,N
setArgumentBuffer:offset:
setIndirectArgumentBuffer:offset:
newArgumentEncoderWithLayout:
setArgumentBuffer:startOffset:arrayElement:
setBuffer:offset:atIndex:
setBuffers:offsets:withRange:
setTexture:atIndex:
setTextures:withRange:
setSamplerState:atIndex:
setSamplerStates:withRange:
constantDataAtIndex:
setRenderPipelineState:atIndex:
setRenderPipelineStates:withRange:
setComputePipelineState:atIndex:
setComputePipelineStates:withRange:
setIndirectCommandBuffer:atIndex:
setIndirectCommandBuffers:withRange:
newArgumentEncoderForBufferAtIndex:
initWithLayout:device:
setFunctionPointer:atIndex:
setFunctionPointers:withRange:
layout
_layout
T@"_MTLIndirectArgumentBufferLayout",R,N,V_layout
type
elementIndirectArgumentType
indirectArgumentType
setDataSize:
setAlignment:
bufferStructType
bufferDataType
contents
offsetForBuffer:
offsetForTexture:
offsetForSampler:
offsetForConstant:
initWithStructType:
_alignment
_bufferIndices
_textureIndices
_samplerIndices
_constantIndices
_constantOffsets
_bufferOffset
_textureOffset
_samplerOffset
TQ,R,N,V_stride
isConstantBuffer
minConstantBufferAlignmentBytes
setAlignment:dataSize:
writingOptions
setWritingOptions:
setUrl:
options
setOptions:
_url
_options
TQ,N,V_options
TQ,N
T@"NSURL",C,N,V_url
isEqualToKey:
initWithHash:
stringByAppendingFormat:
value
_hash
Tr^{?=[32C]},R
initWithData:importedSymbols:importedLibraries:
importedSymbols
importedLibraries
_data
_importedLibraries
_importedSymbols
T@"NSObject<OS_dispatch_data>",R,V_data
T@"NSArray",R,V_importedSymbols
T@"NSArray",R,V_importedLibraries
initWithOptions:device:url:error:
deserializeBinaryArchiveHeader:fileData:device:
loadFileIndex:expectedSliceId:expectedVersion:sliceOffset:
deserializeBinaryArchiveDescriptorMachO:fileData:
bytes
sliceIDForSpecializedFunctions
length
materializeFromFileOffset:hash:
objectForKey:
setObject:forKey:
retainedLabel
numberWithUnsignedLong:
computeFunction
libraryData
vertexPreloadedLibraries
fragmentPreloadedLibraries
vertexFunction
fragmentFunction
addComputePipelineFunctionsWithDescriptor:options:error:
storeComputePipelineDescriptor:
compiler
addComputePipelineStateWithDescriptor:destinationBinaryArchive:options:error:
addRenderPipelineFunctionsWithDescriptor:options:error:
storeRenderPipelineDescriptor:
addRenderPipelineStateWithDescriptor:destinationBinaryArchive:options:error:
addTileRenderPipelineFunctionsWithDescriptor:options:error:
storeTileRenderPipelineDescriptor:
addTileRenderPipelineStateWithDescriptor:destinationBinaryArchive:options:error:
newFunctionWithDescriptor:destinationArchive:error:
newFunctionWithDescriptor:error:
newFunctionWithName:
constantValues
newLibraryWithStitchedDescriptor:destinationBinaryArchive:error:
serializeToURL:options:error:
enumerateSpecializedFunctionArchivesFromBackingFile:
URLForDirectory:inDomain:appropriateForURL:create:error:
UUID
UUIDString
URLByAppendingPathComponent:
fileHandleForWritingToURL:error:
path
createFileAtPath:contents:attributes:
dataWithBytesNoCopy:length:freeWhenDone:
writeData:error:
materializeAll
enumerateKeysAndObjectsUsingBlock:
getSpecializedFunctionArchivesToSerialize:
seekToOffset:error:
truncateAtOffset:error:
closeAndReturnError:
replaceItemAtURL:withItemAtURL:backupItemName:options:resultingItemURL:error:
removeItemAtURL:error:
enumerateArchivesFromBackingFileFromSlice:version:verifyKey:offset:bytes:enumerator:
materializeEntryForKey:fileIndex:containsEntry:addEntry:
materializeFromHash:fileIndex:
allKeys
subdataWithRange:
descriptorDataForArchive:
addComputePipelineFunctionsWithDescriptor:error:
addRenderPipelineFunctionsWithDescriptor:error:
addTileRenderPipelineFunctionsWithDescriptor:error:
serializeToURL:error:
addFunctionWithDescriptor:library:error:
addBinaryEntry:forKey:
getBinaryDataForKey:
addArchiveEntry:forKey:
getArchiveDataForKey:
addLibraryWithDescriptor:error:
pipelineCollection
enumerateArchivesFromBackingFile:
enumerateArchivesFromPipelineCollection:
keys
initWithDevice:descriptor:error:
removeComputePipelineFunctionsWithDescriptor:error:
.cxx_destruct
.cxx_construct
_fileMapping
_fileData
_queue
_pipelineFileIndex
_entries
_pipelineCollection
_collectArchives
_specializedFunctions
_specializedFunctionArchiveFileIndex
_specializedFunctionArchiveOffset
_specializedFunctionArchiveBytes
_recompilationArchiveFileIndex
_recompilationArchiveOffset
_recompilationArchiveBytes
_variantMap
TQ,R,V_options
T@"<MTLDevice>",R,V_device
findProgramObjectForFunction:
programObjectForFunction:
primitiveType
setPrimitiveType:
vertexStart
setVertexStart:
vertexCount
setVertexCount:
instanceCount
setInstanceCount:
baseInstance
setBaseInstance:
_primitiveType
_vertexStart
_vertexCount
_instanceCount
_baseInstance
TQ,N,V_primitiveType
TQ,N,V_vertexStart
TQ,N,V_vertexCount
TQ,N,V_instanceCount
TQ,N,V_baseInstance
indexCount
setIndexCount:
indexBufferVirtualAddress
setIndexBufferVirtualAddress:
indexBufferOffset
setIndexBufferOffset:
baseVertex
setBaseVertex:
_indexCount
_indexBufferVirtualAddress
_indexBufferOffset
_baseVertex
TQ,N,V_indexCount
TQ,N,V_indexType
T^v,N,V_indexBufferVirtualAddress
TQ,N,V_indexBufferOffset
TQ,N,V_baseVertex
numberOfPatchControlPoints
setNumberOfPatchControlPoints:
patchStart
setPatchStart:
patchCount
setPatchCount:
patchIndexBufferVirtualAddress
setPatchIndexBufferVirtualAddress:
patchIndexBufferOffset
setPatchIndexBufferOffset:
_numberOfPatchControlPoints
_patchStart
_patchCount
_patchIndexBufferVirtualAddress
_patchIndexBufferOffset
TQ,N,V_numberOfPatchControlPoints
TQ,N,V_patchStart
TQ,N,V_patchCount
T^v,N,V_patchIndexBufferVirtualAddress
TQ,N,V_patchIndexBufferOffset
controlPointIndexBufferVirtualAddress
setControlPointIndexBufferVirtualAddress:
_controlPointIndexBufferVirtualAddress
_controlPointIndexBufferOffset
T^v,N,V_controlPointIndexBufferVirtualAddress
virtualAddress
setVirtualAddress:
instanceStride
setInstanceStride:
scale
setScale:
_virtualAddress
_instanceStride
_scale
T^v,N,V_virtualAddress
TQ,N,V_instanceStride
Tf,N,V_scale
threadgroupsPerGrid
setThreadgroupsPerGrid:
threadsPerThreadgroup
setThreadsPerThreadgroup:
_threadgroupsPerGrid
_threadsPerThreadgroup
T{?=QQQ},N,V_threadgroupsPerGrid
T{?=QQQ},N,V_threadsPerThreadgroup
width
setWidth:
height
setHeight:
_width
_height
TQ,N,V_width
TQ,N,V_height
threadsPerGrid
setThreadsPerGrid:
_threadsPerGrid
T{?=QQQ},N,V_threadsPerGrid
readWriteTextureSupport
supportsFamily:
isMsaa32bSupported
isFloat32FilteringSupported
supportsASTCTextureCompression
initWithValue:type:name:
describe
_name
_dataType
T@"NSString",R,V_name
TQ,R,V_dataType
T^v,R,V_data
initWithValue:type:index:
_index
TQ,R,V_index
setConstantValue:type:atIndex:
setConstantValues:type:withRange:
setConstantValue:type:withName:
functionConstants
required
serializedConstantDataForFunction:dataSize:errorMessage:
constantValueWithFunctionConstant:
_constantStorage
airData
newLibraryWithData:error:
setShaderValidationEnabled:
newDynamicLibrary:error:
container
initWithLibrary:binaryData:device:error:
initWithURL:device:options:error:
_vendorData
_exportedFunctions
_exportedVariables
_installName
_airData
_airOffset
_airSize
_airVersion
_libraryUUID
_debugInstrumentationData
shaderValidationEnabled
standardizedURL
installName
binaryData
exportedFunctions
exportedVariables
libraryPath
libraryUUID
relocations
setRelocations:
debugInstrumentationData
setDebugInstrumentationData:
T@"NSObject<OS_dispatch_data>",R
T@"NSArray",C,N
T@"MTLDebugInstrumentationData",&,N
TB,R,N
initWithURL:device:error:
_libraryPath
_container
_relocations
_shaderValidationEnabled
T@"NSArray",C,N,V_relocations
TB,R,N,V_shaderValidationEnabled
T@"NSString",R,V_libraryPath
initWithElementType:elementTypeDescription:access:alignment:dataSize:elementIsIndirectArgumentBuffer:isConstantBuffer:
initWithElementType:elementTypeDescription:access:alignment:dataSize:elementIsIndirectArgumentBuffer:isConstantBuffer:doRetain:
setVertexDescriptorBuffer:
isVertexDescriptorBuffer
setStructType:doRetain:
setStructType:
bufferAlignment
bufferPixelFormat
bufferALUType
bufferDataSize
bufferPointerType
bufferIndirectArgumentType
_vertexDescriptorBuffer
_dataSize
_pixelFormat
_aluType
threadgroupMemoryStructType
initWithName:type:access:isActive:locationIndex:arraySize:dataType:dataSize:alignment:
threadgroupMemoryAlignment
threadgroupMemoryDataSize
threadgroupMemoryDataType
initWithDataType:textureType:access:isDepthTexture:
isDepthTexture
textureDataType
_textureType
_isDepthTexture
_textureDataType
initWithName:type:access:active:index:dataType:builtInType:
builtInDataType
builtInType
_builtInType
_builtInDataType
initWithName:type:access:isActive:index:dataSize:masterStructMembers:aliasImplicitImageBlock:aliasImplicitImageBlockRenderTarget:
imageBlockDataSize
imageBlockMasterStructMembers
aliasImplicitImageBlock
aliasImplicitImageBlockRenderTarget
_masterStructMembers
_aliasImplicitImageBlock
_aliasImplicitImageBlockRenderTarget
initWithName:type:access:isActive:index:kind:dataSize:masterStructMembers:aliasImplicitImageBlock:aliasImplicitImageBlockRenderTarget:
imageBlockKind
_kind
indirectArgumentIndexStride
aluType
indirectConstantDataType
indirectConstantAlignment
indirectConstantDataSize
render_target
raster_order_group
initWithBytes:length:
initWithDataType:
initWithName:type:access:index:active:arrayLength:typeDescription:
setMembers:count:
setIsIndirectArgumentBuffer:
setArgumentIndexStride:
initWithAirMDType:dataType:pixelFormat:aluType:name:offset:
initWithDataType:pixelFormat:aluType:offset:bufferIndex:stride:stepFunction:stepRate:baseInstanceUnused:
stringWithCString:encoding:
initWithMembers:count:typeName:
_label
_labelLock
setWithArray:
isEqualToSet:
isEqualToArray:
isEmpty
isDefault
_descriptorAtIndex:
debugSubProgramForID:
debugLocationForID:
inlinedAt
releaseInternal
_debugLoc
T@"MTLDebugSubProgram",R,N
TI,R,N
T@"MTLDebugLocation",R,N
stringForID:
_debugSubProgram
initWithBytesNoCopy:length:freeWhenDone:
initWithData:
globalConstantsData
userReflectionData
hasGlobalConstantsInstrumentationFailures
hasArgumentBufferInstrumentationFailures
hasArgumentLimitsInstrumentationFailures
threadgroupArgumentOffset
activeThreadgroupMask
bufferAccessMask
_dataMap
_strings
_debugLocations
_debugSubPrograms
_globalConstantsData
_userReflectionData
binary
uniqueIdentifier
T@"NSData",R
initWithBinary:uniqueIdentifier:
_binary
_uniqueIdentifier
T@"NSData",R,&,V_binary
TQ,R,V_uniqueIdentifier
mappedAddress
mappedSize
binaryUniqueId
initWithMappedAddress:mappedSize:binaryUniqueId:
initWithMappedAddress:mappedSize:binaryUniqueId:type:
_mappedAddress
_mappedSize
_binaryUniqueId
_type
TQ,R,V_mappedAddress
TQ,R,V_mappedSize
TQ,R,V_binaryUniqueId
T@"NSString",R,V_type
binaryMappingsEncoderInternal
binaryMappingsPerInvocation
encoderInternalBinaries
initWithEncoderMappings:perInvocationMappings:internalMappings:
_binaryMappingsEncoderInternal
_binaryMappingsPerInvocation
_encoderInternalBinaries
T@"NSArray",R,V_binaryMappingsEncoderInternal
T@"NSArray",R,V_binaryMappingsPerInvocation
T@"NSDictionary",R,V_encoderInternalBinaries
indirectArgumentDescriptor
setDataType:
setIndex:
setArrayLength:
setAccess:
setTextureType:
setConstantBlockAlignment:
argumentDescriptor
supportForFeature:
initGPUFamilySupport
featureQueryClass
initWithDevice:
validate
featureProfile
loadDynamicLibrariesForComputeDescriptor:options:error:
loadDynamicLibrariesForFunction:insertLibraries:options:error:
getShaderCacheKeys
stringByExpandingTildeInPath
startCollectingPipelineDescriptors
initSerializationPaths
allowLibrariesFromOtherPlatforms
isCollectingLibraries
fileSystemRepresentation
indirectArgumentBufferCapabilities
vendorName
familyName
productName
stringWithString:
isEqualToString:
whitespaceAndNewlineCharacterSet
componentsSeparatedByCharactersInSet:
serializeStructType:version:
unloadShaderCaches
copyShaderCacheToPath:
libraryCacheStats
pipelineCacheStats
mainBundle
pathForResource:ofType:
newDynamicLibraryWithURL:error:
supportsPipelineLibraries
isCollectingPipelines
dumpPipelineDescriptorsIfRequested
optionsForPipelineLibrarySerialization
newBinaryArchiveWithDescriptor:error:
supportsDynamicLibraries
supportsStatefulDynamicLibraries
newDynamicLibraryError:message:
compileDynamicLibrary:computePipelineDescriptor:completionHandler:
validateDynamicLibrary:state:error:
_newDynamicLibrary:computeDescriptor:error:
newDynamicLibraryWithURL:options:error:
validateDynamicLibraryURL:error:
newComputePipelineStateWithDescriptor:error:
newComputePipelineStateWithDescriptor:completionHandler:
newComputePipelineStateWithDescriptor:options:reflection:error:
newComputePipelineStateWithDescriptor:options:completionHandler:
newComputePipelineStateWithFunction:error:
string
functionGraphs
newLibraryWithStitchedDescriptor:error:
newLibraryWithStitchedDescriptor:completionHandler:
newLibraryWithStitchedDescriptorSPI:error:
newLibraryWithCIFilters:imageFilterFunctionInfo:error:
deviceOrFeatureProfileSupportsFeatureSet:
deviceSupportsFeatureSet:
argumentBuffersSupport
maxBufferLength
limits
newRenderPipelineStateWithDescriptor:options:reflection:error:completionHandler:
newComputePipelineStateWithDescriptor:options:reflection:error:completionHandler:
fragmentFunctionKeyWithRenderPipelineDescriptor:fragmentKeySize:previousStateVariant:
vertexFunctionKeyWithRenderPipelineDescriptor:vertexKeySize:nextStageVariant:
computeFunctionKeyWithComputePipelineDescriptor:keySize:
computeVariantWithCompilerOutput:pipelineStatisticsOutput:
fragmentVariantWithCompilerOutput:pipelineStatisticsOutput:
vertexVariantWithCompilerOutput:pipelineStatisticsOutput:
newRenderPipelineWithDescriptor:vertexVariant:fragmentVariant:
newComputePipelineWithDescriptor:variant:
supportsSampleCount:
deviceLinearTextureAlignmentBytes
_purgeDevice
newCommandQueueWithDescriptor:
setMaxCommandBufferCount:
newArgumentEncoderWithArguments:structType:
newIndirectArgumentEncoderWithLayout:
useNewPrimitiveRestartBehavior
featureProfile:supportsFeatureSet:
supportsBufferlessClientStorageTexture
supportsComputeMemoryBarrier
supportsRenderMemoryBarrier
supportsArgumentBuffersTier2
supportsReadWriteTextureArgumentsTier2
supportsStreamingCodecSignaling
supportsProgrammableSamplePositions
supportsLargeFramebufferConfigs
supportsCustomBorderColor
supportsBCTextureCompression
supports3DBCTextures
supportsPrimitiveRestartOverride
supportsGlobalVariableRelocation
supportsGlobalVariableRelocationRender
supportsGlobalVariableRelocationCompute
supportsTLS
supports32bpcMSAATextures
supports32BitMSAA
supports32BitFloatFiltering
supportsPlacementHeaps
supportsOpenCLTextureWriteSwizzles
supportsPullModelInterpolation
supportsInt64
supportsLateEvalEvent
supportsNonZeroTextureWriteLOD
supportsSharedTextureHandles
supportsBufferPrefetchStatistics
supportsLimitedYUVFormats
supportsNonPrivateDepthStencilTextures
supportsNonPrivateMSAATextures
supportsSharedStorageHeapResources
supportsSharedStorageTextures
supportsLinearTextureFromSharedBuffer
supportsFragmentOnlyEncoders
supportsBufferWithIOSurface
supportsProgrammableBlending
supportsRenderToLinearTextures
supportsMemorylessRenderTargets
supportsFastMathInfNaNPropagation
supportsInvariantVertexPosition
supportsShaderLODAverage
supportsRelaxedTextureViewRequirements
supportsSeparateDepthStencil
supportsGPUStatistics
supportsCompressedTextureViewSPI
supportsRenderTargetTextureRotation
supportsDynamicControlPointCount
supportsIABHashForTools
supportsBinaryArchives
supportsBinaryLibraries
supportsExtendedYUVFormats
supportsPublicXR10Formats
supportsSRGBwrites
supportsDepthClipMode
supportsPacked32TextureBufferWrites
supports3DASTCTextures
supportsExtendedXR10Formats
supportsFragmentBufferWrites
supportsCountingOcclusionQuery
supportsBaseVertexInstanceDrawing
supportsIndirectDrawAndDispatch
supportsTessellation
supportsReadWriteBufferArguments
supportsArrayOfTextures
supportsArrayOfSamplers
supportsCombinedMSAAStoreAndResolveAction
supportsMutableTier1ArgumentBuffers
supportsSamplerCompareFunction
supportsMSAADepthResolve
supportsMSAAStencilResolve
supportsMSAADepthResolveFilter
supportsGFXIndirectCommandBuffers
supportsCMPIndirectCommandBuffers
supportsIndirectStageInRegion
supportsIndirectTextures
supportsNorm16BCubicFiltering
supportsTextureOutOfBoundsReads
supportsTextureSwizzle
supportsAlphaYUVFormats
supportsMemoryOrderAtomics
supportsQuadGroup
supportsRenderTextureWrites
supportsImageBlocks
supportsTileShaders
supportsImageBlockSampleCoverageControl
supportsNativeHardwareFP16
supportsPostDepthCoverage
supportsMipLevelsSmallerThanBlockSize
supportsNonUniformThreadgroupSize
supportsReadWriteTextureArguments
supportsReadWriteTextureCubeArguments
supportsTextureCubeArray
supportsQuadShufflesAndBroadcast
supportsConcurrentComputeDispatch
supportsRenderPassWithoutRenderTarget
supportsRasterOrderGroups
supportsRasterOrderGroupsColorAttachment
supportsLinearTexture2DArray
supportsNonSquareTileShaders
supports2DLinearTexArraySPI
supportsLayeredRendering
supportsViewportAndScissorArray
supportsIndirectTessellation
supportsMSAAStencilResolveFilter
supportsStencilFeedback
supportsFP32TessFactors
supportsUnalignedVertexFetch
supportsSIMDGroup
supportsShaderMinLODClamp
supportsSIMDShufflesAndBroadcast
supportsWritableArrayOfTextures
supportsIndirectWritableTextures
supportsRenderDynamicLibraries
supportsBlackOrWhiteSamplerBorderColors
supportsMirrorClampToEdgeSamplerMode
supportsSIMDReduction
supportsDepthClipModeClampExtended
supportsTexture2DMultisampleArray
supportsForceSeamsOnCubemaps
supportsFloat16BCubicFiltering
supportsFloat16InfNanFiltering
supportsCommandBufferJump
supportsStackOverflowErrorCode
initProgressTracking
initFeatureQueries
targetDeviceInfo
targetDeviceArchitecture
loadDynamicLibrariesForComputeDescriptor:error:
loadDynamicLibrariesForFunction:insertLibraries:error:
areProgrammableSamplePositionsSupported
getSupportedCommandBufferErrorOptions
newFunctionWithGLCoreIR:functionType:
newFunctionWithGLCoreIR:inputsDescription:functionType:
newFunctionWithGLESIR:functionType:
newFunctionWithGLESIR:inputsDescription:functionType:
newFunctionWithGLIR:functionType:
newFunctionWithGLIR:inputsDescription:functionType:
newLibraryWithFile:error:
releaseCacheEntry:
newLibraryWithURL:error:
areRasterOrderGroupsSupported
isQuadDataSharingSupported
reportLeaks
_setDeviceWrapper:
_deviceWrapper
serializeRenderPipelineDescriptor:
newRenderPipelineDescriptorWithSerializedData:deserializationContext:
serializeComputePipelineDescriptor:
newComputePipelineDescriptorWithSerializedData:deserializationContext:
serializeStructType:
compilerPropagatesThreadPriority:
newDefaultLibrary
newDefaultLibraryWithBundle:error:
newLibraryWithSource:options:error:
newLibraryWithSource:options:completionHandler:
newDynamicLibraryFromURL:error:
newPipelineLibraryWithFilePath:error:
registerRenderPipelineDescriptor:
registerComputePipelineDescriptor:
startCollectingPipelineDescriptorsUsingPrefixForNames:
startCollectingPipelineDescriptorsFromLibrary:filePath:
endCollectingPipelineDescriptors
newBinaryLibraryWithOptions:url:error:
newDynamicLibrary:computeDescriptor:error:
isBCTextureCompressionSupported
defaultTextureWriteRoundingMode
supportsTextureWriteFPRoundingMode:
newComputePipelineStateWithFunction:completionHandler:
newComputePipelineStateWithFunction:options:reflection:error:
newComputePipelineStateWithFunction:options:completionHandler:
newComputePipelineStateWithImageFilterFunctionsSPI:imageFilterFunctionInfo:error:
newLibraryWithDAG:functions:error:
newLibraryWithDescriptor:error:
newLibraryWithDescriptor:completionHandler:
newLibraryWithDescriptor:destinationBinaryArchive:error:
newLibraryWithDescriptorSPI:error:
newDagStringWithGraphs:
newLibraryWithImageFilterFunctionsSPI:imageFilterFunctionInfo:error:
isMagicMipmapSupported
supportsFeatureSet:
initLimits
linearTextureArrayAlignmentBytes
linearTextureArrayAlignmentSlice
maxTileBuffers
maxTileTextures
maxTileSamplers
maxTileInlineDataSize
minTilePixels
maxVertexAttributes
maxVertexBuffers
maxVertexTextures
maxVertexSamplers
maxVertexInlineDataSize
maxInterpolants
maxFragmentBuffers
maxFragmentTextures
maxFragmentSamplers
maxFragmentInlineDataSize
maxComputeBuffers
maxComputeTextures
maxComputeSamplers
maxComputeInlineDataSize
maxComputeLocalMemorySizes
maxTotalComputeThreadsPerThreadgroup
maxComputeThreadgroupMemory
maxLineWidth
maxPointSize
maxVisibilityQueryOffset
minBufferNoCopyAlignmentBytes
maxTextureWidth1D
maxTextureWidth2D
maxTextureHeight2D
maxTextureWidth3D
maxTextureHeight3D
maxTextureDepth3D
maxTextureDimensionCube
maxTextureLayers
linearTextureAlignmentBytes
iosurfaceTextureAlignmentBytes
iosurfaceReadOnlyTextureAlignmentBytes
deviceLinearReadOnlyTextureAlignmentBytes
maxFunctionConstantIndices
maxComputeThreadgroupMemoryAlignmentBytes
maxInterpolatedComponents
maxTessellationFactor
maxIndirectBuffers
maxIndirectTextures
maxIndirectSamplers
maxIndirectSamplersPerDevice
maxFenceInstances
maxViewportCount
maxCustomSamplePositions
maxTextureBufferWidth
maxComputeAttributes
maxPredicatedNestingDepth
maxConstantBufferArguments
newRenderPipelineStateWithDescriptor:error:
newRenderPipelineStateWithDescriptor:options:reflection:error:
newRenderPipelineStateWithDescriptor:completionHandler:
newRenderPipelineStateWithDescriptor:options:completionHandler:
newRenderPipelineStateWithTileDescriptor:options:reflection:error:
newRenderPipelineStateWithTileDescriptor:options:completionHandler:
fragmentFunctionKeyWithRenderPipelineDescriptor:options:previousStateVariant:fragmentKeySize:
vertexFunctionKeyWithRenderPipelineDescriptor:options:nextStageVariant:vertexKeySize:
freeFragmentFunctionKey:fragmentKeySize:
freeVertexFunctionKey:vertexKeySize:
computeFunctionKeyWithComputePipelineDescriptor:options:keySize:
libraryKeyWithComputePipelineDescriptor:options:keySize:
freeComputeLibraryKey:libraryKeySize:
freeComputeFunctionKey:keySize:
newComputeVariantWithCompilerOutput:pipelineStatisticsOutput:
newFragmentVariantWithCompilerOutput:pipelineStatisticsOutput:
newVertexVariantWithCompilerOutput:pipelineStatisticsOutput:
newRenderPipelineWithDescriptor:vertexVariant:fragmentVariant:errorMessage:
newComputePipelineWithDescriptor:variant:errorMessage:
pipelineFlagsWithVertexVariant:fragmentVariant:
pipelineFlagsWithComputeVariant:
pipelinePerformanceStatisticsWithVertexVariant:fragmentVariant:
pipelinePerformanceStatisticsWithComputeVariant:
pipelinePerformanceStatisticsWithVertexVariant:fragmentVariant:vertexCompileTimeOutput:fragmentCompileTimeOutput:
pipelinePerformanceStatisticsWithComputeVariant:compileTimeOutput:
getConstantSamplersBitmasks:uniqueIdentifiers:constantSamplerCount:forVertexVariant:fragmentVariant:
getConstantSamplersBitmasks:uniqueIdentifiers:constantSamplerCount:forComputeVariant:
supportsPrimitiveType:
deviceCreationFlags
minimumLinearTextureAlignmentForPixelFormat:
minLinearTextureAlignmentForPixelFormat:
maxArgumentBufferSamplerCount
_incrementCommandQueueCount
_decrementCommandQueueCount
newCommandQueue
newCommandQueueWithMaxCommandBufferCount:
getDefaultSamplePositions:count:
newArgumentEncoderWithArguments:
newEvent
newLateEvalEvent
newSharedEvent
newSharedEventWithHandle:
newSharedEventWithMachPort:
areGPUAssertionsEnabled
setGPUAssertionsEnabled:
counterSets
newCounterSampleBufferWithDescriptor:error:
resolveCounters:withRange:
sampleTimestamps:gpuTimestamp:
supportsCounterSampling:
isPlacementHeapSupported
deserializeCompileTimeStats:addToDictionary:
globalTraceObjectID
serialQueue
concurrentQueue
shaderDebugInfoCaching
setShaderDebugInfoCaching:
commandBufferErrorOptions
setCommandBufferErrorOptions:
_limits
_supportedGPUFamilies
_serialQueue
_pipelineSerializationQueue
_concurrentQueue
_hasInitSerializationPaths
_shaderDebugInfoCaching
_progressTrackBufferStack
_needsEncoderTypeMatchingProgressBlits
_progressTrackRenderPipeline
_progressTrackComputePipeline
_featureQueries
_globalTraceObjectID
_commandQueueCount
_libraryBuilder
_pipelineLibraryBuilder
_pipelineDescriptorsOutputFile
_librariesOutputDirectory
_collectAllLibraries
_gpuAssertionsEnabled
_dynamicLoader
_initProgressTrackingOnceToken
_pluginData
_serializedPluginData
_commandBufferErrorOptions
TB,V_shaderDebugInfoCaching
Tr^{?=IIIIIIIIIIIIIIIIIIIIIIIIIIffIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIQ},R
TQ,R,V_globalTraceObjectID
Tf,R
T@"NSObject<OS_dispatch_queue>",R,V_serialQueue
T@"NSObject<OS_dispatch_queue>",R,V_concurrentQueue
T@"MTLCompiler",R
T{IndirectArgumentBufferCapabilities=b1b1b1b29},R,D
rasterOrderGroupsSupported
TB,R,GareRasterOrderGroupsSupported
float32FilteringSupported
TB,R,GisFloat32FilteringSupported
BCTextureCompressionSupported
TB,R,GisBCTextureCompressionSupported
msaa32bSupported
TB,R,GisMsaa32bSupported
gpuAssertionsEnabled
TB,GareGPUAssertionsEnabled,SsetGPUAssertionsEnabled:
T@"NSArray",R,D
placementHeapSupported
TB,R,D,GisPlacementHeapSupported
TQ,N,V_commandBufferErrorOptions
Tr^{MTLTargetDeviceArch=QI*},R
T@"MTLTargetDeviceArchitecture",R
T@"NSDictionary",C,N
requirementForFeature:
nameForFeature:
unsignedLongLongValue
boolValue
localizedDescription
initWithString:
appendString:
outputNode
nodes
isEarlyReturn
setString:
arguments
controlDependencies
argumentIndex
bindIndex
dereference
byteOffset
indexOfObject:
dictionary
containsString:
bundleWithIdentifier:
URLForResource:withExtension:
sampleBuffer
T@"<MTLCounterSampleBuffer>",&,D,N
startOfEncoderSampleIndex
endOfEncoderSampleIndex
setSampleBuffer:
setStartOfEncoderSampleIndex:
setEndOfEncoderSampleIndex:
_sampleDescriptors
computePassDescriptor
dispatchType
sampleBufferAttachments
T@"MTLComputePassSampleBufferAttachmentDescriptorArray",R,D
allowCommandEncoderCoalescing
setDispatchType:
setAllowCommandEncoderCoalescing:
TB,N
bitCodeOffset
getBytes:length:
bitcodeType
bitCodeFileSize
archivedDataWithRootObject:requiringSecureCoding:error:
lengthOfBytesUsingEncoding:
initWithName:description:
_description
T@"NSString",R,C,V_name
counters
T@"NSArray",R,C
initWithName:description:counters:
_counters
T@"NSArray",R,C,V_counters
counterSet
T@"<MTLCounterSet>",&,D
storageMode
TQ,D
setCounterSet:
setStorageMode:
_counterSet
_storageMode
_sampleCount
appendFormat:
setMipmapLevelCount:
setResourceOptions:
setUsage:
texture2DDescriptorWithPixelFormat:width:height:mipmapped:
textureCubeDescriptorWithPixelFormat:size:mipmapped:
textureBufferDescriptorWithPixelFormat:width:resourceOptions:usage:
forceResourceIndex
resourceIndex
depth
mipmapLevelCount
resourceOptions
cpuCacheMode
hazardTrackingMode
usage
allowGPUOptimizedContents
swizzle
T{?=CCCC},D,N
numberWithUnsignedLongLong:
rotation
compressionMode
setDepth:
setAllowGPUOptimizedContents:
setForceResourceIndex:
setResourceIndex:
setCpuCacheMode:
protectionOptions
setProtectionOptions:
setHazardTrackingMode:
textureUsage
setTextureUsage:
setRotation:
setSwizzle:
setSwizzleKey:
swizzleKey
setWriteSwizzleEnabled:
writeSwizzleEnabled
setCompressionMode:
framebufferOnly
setFramebufferOnly:
setIsDrawable:
isDrawable
descriptorPrivate
numFaces
commandTypes
setCommandTypes:
inheritPipelineState
setInheritPipelineState:
inheritBuffers
setInheritBuffers:
maxVertexBufferBindCount
setMaxVertexBufferBindCount:
maxFragmentBufferBindCount
setMaxFragmentBufferBindCount:
maxKernelBufferBindCount
setMaxKernelBufferBindCount:
_state
initWithFilePath:readOnly:deviceInfo:
cache
write
writable
disableRunTimeCompilation
setDisableRunTimeCompilation:
_writable
_compilerCache
_disableRunTimeCompilation
TB,R,V_writable
T^{MTLCompilerCache=^^?@ii},R,V_compilerCache
TB,V_disableRunTimeCompilation
stringByStandardizingPath
stringByDeletingLastPathComponent
newFunctionWithName:constantValues:functionCache:error:
setPipelineLibrary:
newComputePipelineStateWithName:options:reflection:error:
newRenderPipelineStateWithName:options:reflection:error:
newComputePipelineDescriptorWithName:error:
newRenderPipelineDescriptorWithName:error:
pipelineNames
pipelineCache
functionCache
T@"<MTLPipelineCache>",R,N
initWithDevice:pipelineLibraryData:
_pipelineLibraryData
_pipelineNames
T@"NSArray",R,V_pipelineNames
T@"<MTLPipelineCache>",R,D,N
fileExistsAtPath:
stringByReplacingOccurrencesOfString:withString:
initWithFormat:
objectAtIndex:
heapTextureSizeAndAlignWithDescriptor:
heapBufferSizeAndAlignWithLength:options:
newHeapWithDescriptor:
newBufferWithLength:options:
newBufferWithBytes:length:options:
newBufferWithBytesNoCopy:length:options:deallocator:
newDepthStencilStateWithDescriptor:
newTextureWithDescriptor:
newTextureWithDescriptor:iosurface:plane:
newSamplerStateWithDescriptor:
newFence
minimumTextureBufferAlignmentForPixelFormat:
newIndirectCommandBufferWithDescriptor:maxCommandCount:options:
registryID
maxThreadsPerThreadgroup
isLowPower
isHeadless
isRemovable
hasUnifiedMemory
recommendedMaxWorkingSetSize
isDepth24Stencil8PixelFormatSupported
currentAllocatedSize
maxThreadgroupMemoryLength
T{?=QQQ},R
lowPower
TB,R,GisLowPower
headless
TB,R,GisHeadless
removable
TB,R,GisRemovable
TB,R
depth24Stencil8PixelFormatSupported
TB,R,GisDepth24Stencil8PixelFormatSupported
programmableSamplePositionsSupported
TB,R,GareProgrammableSamplePositionsSupported
newBufferWithIOSurface:
newIndirectCommandBufferWithDescriptor:maxCount:options:
newIndirectRenderCommandEncoderWithBuffer:
newIndirectComputeCommandEncoderWithBuffer:
setResourcesPurgeableState:newState:oldState:count:
halfFPConfig
singleFPConfig
doubleFPConfig
metalAssertionsEnabled
setMetalAssertionsEnabled:
supportPriorityBand
sharedMemorySize
dedicatedMemorySize
registerDevices
indirectArgumentBufferDecodingData
setIndirectArgumentBufferDecodingData:
setupMPSFunctionTable:
resourcePatchingTypeForResourceType:
reserveResourceIndicesForResourceType:indices:indexCount:
reserveGPUAddressRange:
newBufferWithLength:options:gpuAddress:
newBufferWithBytes:length:options:gpuAddress:
newBufferWithBytesNoCopy:length:options:gpuAddress:deallocator:
newBufferWithDescriptor:
mapShaderSampleBufferWithBuffer:capacity:size:
unmapShaderSampleBuffer
newRenderPipelineStateWithTileDescriptor:error:
newRenderPipelineStateWithTileDescriptor:completionHandler:
newIndirectArgumentEncoderWithArguments:
newLibraryWithGraphs:functions:error:
newLibraryWithGraphsSPI:functions:error:
newLibraryWithCIFiltersForComputePipeline:imageFilterFunctionInfo:error:
newTextureWithBytesNoCopy:length:descriptor:deallocator:
newTextureLayoutWithDescriptor:isHeapOrBufferBacked:
newResourceGroupFromResources:count:
T{IndirectArgumentBufferCapabilities=b1b1b1b29},R
quadDataSharingSupported
TB,R,GisQuadDataSharingSupported
TB,R,GisPlacementHeapSupported
originalObject
objectForInfoDictionaryKey:
standardUserDefaults
bundleWithPath:
loadAndReturnError:
initWithBaseObject:parent:
classNamed:
integerForKey:
initializeEnhancedCommandBufferErrors
setCurrentCommandEncoder:
retainedReferences
isStatEnabled
getAndIncrementNumEncoders
errorOptions
progressTrackingRenderCommandEncoder
setRenderPipelineState:
setVertexBuffer:offset:atIndex:
drawPrimitives:vertexStart:vertexCount:
updateFence:afterStages:
progressTrackingBlitCommandEncoder
fillBuffer:range:value:
updateFence:
endEncoding
commandBuffer
commandBufferWithUnretainedReferences
signalCommandBufferAvailable
setOwnedByParallelEncoder:
setErrorOptions:
addCompletedHandler:
setNumEncoders:
numThisCommandBuffer
setNumThisCommandBuffer:
_renderCommandEncoderCommon
renderCommandEncoderWithDescriptor:
sampledRenderCommandEncoderWithDescriptor:programInfoBuffer:capacity:
renderCommandEncoder
waitForFence:beforeStages:
waitForFence:
getDriverUniqueID
setUniqueID:
setDebugSignposts:
setErrorState:
insertDebugSignpost:
pushDebugGroup:
popDebugGroup
setColorStoreAction:atIndex:
setDepthStoreAction:
setStencilStoreAction:
setColorStoreActionOptions:atIndex:
setDepthStoreActionOptions:
setStencilStoreActionOptions:
initWithCommandBuffer:renderPassDescriptor:
sampledRenderCommandEncoderWithProgramInfoBuffer:capacity:
preEndEncoding
isMemorylessRender
_labelTraceID
_commandBuffer
_renderPassDescriptor
_lock
_commandBuffersSize
_commandBuffersCount
_commandBuffers
_retainedReferences
_StatEnabled
_numThisEncoder
_progressFence
_needsFrameworkAssistedErrorTracking
_debugSignposts
TQ,R,D,N,GgetType
setCaptureObject:
setDestination:
setOutputURL:
captureObject
destination
outputURL
_captureObject
_destination
_outputURL
T@,&,N,V_captureObject
Tq,N,V_destination
T@"NSURL",C,N,V_outputURL
errorWithMTLCaptureErrorCode:
startCaptureWithDescriptor:error:
sharedCaptureManager
newCaptureScopeWithDevice:
newCaptureScopeWithCommandQueue:
startCaptureWithDevice:
startCaptureWithCommandQueue:
startCaptureWithScope:
stopCapture
supportsDestination:
isCapturing
defaultCaptureScope
setDefaultCaptureScope:
_isCapturing
_defaultCaptureScope
T@"<MTLCaptureScope>",&,V_defaultCaptureScope
TB,R,V_isCapturing
inputPrimitiveTopology
isTessellationFactorScaleEnabled
tessellationFactorFormat
tessellationControlPointIndexType
tessellationFactorStepFunction
tessellationOutputWindingOrder
tessellationPartitionMode
supportIndirectCommandBuffers
depthAttachmentPixelFormat
stencilAttachmentPixelFormat
isAlphaToCoverageEnabled
isAlphaToOneEnabled
isRasterizationEnabled
threadGroupSizeIsMultipleOfThreadExecutionWidth
initWithCapacity:
initWithResourceListCapacity:
availableCount
purge
_priv
_resourceListCapacity
lodAverage
setLodAverage:
_lodAverage
minFilter
magFilter
mipFilter
maxAnisotropy
sAddressMode
tAddressMode
rAddressMode
borderColor
normalizedCoordinates
lodMinClamp
Tf,D,N
lodMaxClamp
TB,N,V_lodAverage
compareFunction
supportArgumentBuffers
setMinFilter:
setMagFilter:
setMipFilter:
setMaxAnisotropy:
setSAddressMode:
setTAddressMode:
setRAddressMode:
setNormalizedCoordinates:
setLodMinClamp:
setLodMaxClamp:
lodBias
setLodBias:
setCompareFunction:
setSupportArgumentBuffers:
gpuAddress
initWithDevice:samplerDescriptor:
_resourceIndex
_gpuAddress
TQ,R,N,V_resourceIndex
TQ,R,N,V_gpuAddress
T@"NSString",R,V_label
initWithData:parent:
_parent
_modifiedTimeWhenCached
_identity
_isCached
T@"NSData",R,V_fileData
initFileURLWithPath:isDirectory:
driverVersion
cpuType
subType
initWithBytes:length:encoding:
_global
_claimQueue
_claims
getFileSystemRepresentation:maxLength:
initWithContentsOfURL:options:error:
setCpuType:
setSubType:
setDriverVersion:
_cpuType
_subType
_driverVersion
TI,N,V_cpuType
TI,N,V_subType
TQ,N,V_driverVersion
executableURL
size
Tq,D,N
setSize:
setType:
setPinnedGPUAddress:
pinnedGPUAddress
initWithType:options:
newBufferWithLength:options:offset:
newTextureWithDescriptor:offset:
newBufferWithLength:options:atOffset:
newTextureWithDescriptor:atOffset:
usedSize
unfilteredResourceOptions
_heapResourceOptions
_heapType
tracingEnabled
glBufferBindPoints
debuggingEnabled
compileTimeStatisticsEnabled
additionalCompilerArguments
sourceLanguage
TC,D,N
preprocessorMacros
T@"NSDictionary",C,D,N
fastMathEnabled
languageVersion
libraryType
libraries
preserveInvariance
allValues
setPreprocessorMacros:
setFastMathEnabled:
unsignedLongValue
setLanguageVersion:
setTracingEnabled:
setGlBufferBindPoints:
setDebuggingEnabled:
setCompileTimeStatisticsEnabled:
setAdditionalCompilerArguments:
setSourceLanguage:
setLibraryType:
setLibraries:
setInstallName:
setPreserveInvariance:
exportDictionary
importDictionary:
_userSetLanguageVersion
_preprocessorMacros
_fastMathEnabled
_glBufferBindPoints
_tracingEnabled
_debuggingEnabled
_languageVersion
_compileTimeStatisticsEnabled
_additionalCompilerArguments
_sourceLanguage
_libraryType
_libraries
_preserveInvariance
setFunction:
setFunctionOptions:
pipelineOptions
setPipelineOptions:
setFrameworkData:
hashStableWithFunction:
setArchiveHashKey:
newVisibleRequestWithFunction:descriptor:
frameworkData
driverKeyData
setDriverKeyData:
sync
setSync:
function
functionOptions
setPipelineCache:
archiveHashKey
destinationBinaryArchive
setDestinationBinaryArchive:
visibleFunctions
setVisibleFunctions:
privateVisibleFunctions
setPrivateVisibleFunctions:
visibleFunctionGroups
setVisibleFunctionGroups:
_sync
_function
_functionOptions
_pipelineOptions
_frameworkData
_driverKeyData
_pipelineCache
_archiveHashKey
_destinationBinaryArchive
_binaryArchives
_visibleFunctions
_privateVisibleFunctions
_visibleFunctionGroups
TB,N,V_sync
TQ,N,V_functionOptions
TQ,N,V_pipelineOptions
T@"MTLFunction",&,N,V_function
T@"NSObject<OS_dispatch_data>",N
T@"<MTLPipelineCache>",&,N,V_pipelineCache
T{?=[32C]},N,V_archiveHashKey
T@"<MTLBinaryArchive>",&,N,V_destinationBinaryArchive
T@"NSArray",C,N,V_binaryArchives
T@"NSArray",C,N,V_visibleFunctions
T@"NSArray",C,N,V_privateVisibleFunctions
T@"NSDictionary",C,N,V_visibleFunctionGroups
T@"NSString",R,D
active
TB,R,D,GisActive
patchData
TB,R,D,GisPatchData
patchControlPointData
TB,R,D,GisPatchControlPointData
initWithName:attributeIndex:attributeType:flags:
isPatchData
isPatchControlPointData
setAttributeType:
_flags
_attributeIndex
_attributeType
initWithName:type:index:required:
_required
initWithObjects:count:
initWithArguments:argumentCount:builtInArgumentCount:pluginReturnData:
initWithDevice:reflectionData:functionType:options:
builtInArguments
pluginReturnData
_builtInArguments
_arguments
_pluginReturnData
symbolName
initWithSymbolName:buffer:offset:
buffer
_symbolName
_buffer
T@"<MTLBuffer>",R,N,V_buffer
TQ,R,N,V_offset
T@"NSString",R,N,V_symbolName
initWithSymbolName:data:
initWithSymbolName:bytes:length:
T@"NSObject<OS_dispatch_data>",R,N,V_data
initWithName:type:libraryData:functionData:device:
initWithUUIDBytes:
sourceArchiveOffset
setSourceArchiveOffset:
initWithArray:
setReturnType:
arrayWithArray:
setArguments:
setLineNumber:
setFilePath:
setFunctionConstants:
setVertexAttributes:
filePath
setUnpackedFilePath:
getCString:maxLength:encoding:
newFunctionWithNameInternal:
setName:
setSpecializedName:
setConstantValues:
newSpecializedFunctionWithDescriptor:destinationArchive:functionCache:error:
newFunctionWithName:constantValues:functionCache:specializedName:error:
newFunctionWithDescriptor:destinationArchive:functionCache:completionHandler:
newFunctionWithName:constantValues:functionCache:specializedName:completionHandler:
newSpecializedFunctionWithDescriptor:destinationArchive:functionCache:sync:completionHandler:
newSpecializedFunctionWithDescriptorInternal:destinationArchive:functionCache:error:
writeToURL:options:error:
removeAllObjects
initWithLibraryContainer:device:
stringValue
resourcePath
cStringUsingEncoding:
functionNames
newFunctionWithName:constantValues:error:
newFunctionWithName:constantValues:completionHandler:
newFunctionWithDescriptor:completionHandler:
newExternFunctionWithName:
newFunctionWithName:constantValues:pipelineLibrary:error:
newFunctionWithName:constantValues:pipelineLibrary:completionHandler:
overrideTriple
setOverrideTriple:
externFunctionNames
bitcodeData
libraryIdentifier
T@"NSUUID",R,C
variableList
libraryDataContents
functionDictionary
cacheEntry
_libraryData
_functionDictionary
_cacheEntry
T@"NSMutableDictionary",R,&,N,V_functionDictionary
T@"NSArray",R,&,D
T^{MTLLibraryData=^^?{?=[32C]}Ai@@},R,V_libraryData
T^{MTLLibraryContainer=^{MTLPipelineCollection}Ai{?=[32C]}^{MTLLibraryData}@@@@@},R,V_cacheEntry
TB,N,V_shaderValidationEnabled
T@"NSUUID",R,C,D
T@"NSData",R,D
Tq,R,D
newlineCharacterSet
reflectionWithOptions:pipelineLibrary:
reflectionWithFunction:options:sync:binaryArchives:completionHandler:
reflectionWithFunction:options:sync:pipelineLibrary:completionHandler:
reflectionWithFunction:options:sync:completionHandler:
newArgumentEncoderWithBufferIndex:reflection:binaryArchives:
newArgumentEncoderWithBufferIndex:reflection:pipelineLibrary:
newArgumentEncoderWithBufferIndex:reflection:functionReflection:
reflectionWithOptions:binaryArchives:
dataWithLength:
mutableBytes
reflectionWithOptions:
reflectionWithOptions:completionHandler:
newArgumentEncoderWithBufferIndex:pipelineLibrary:
newFunctionWithPluginData:bitcodeType:
lineNumber
unpackedFilePath
renderTargetArrayIndexType
returnType
T@"MTLType",R
T@"MTLDebugInstrumentationData",R,N
initWithName:type:libraryData:device:
setVendorPrivate:
functionConstantSpecializationHash
vendorPrivate
_functionType
_vendorPrivate
_vertexAttributes
_functionConstants
_functionConstantDictionary
_returnType
_unpackedFilePath
_functionConstantSpecializationHash
TQ,R,V_functionType
Tq,D
T@"NSString",C,V_unpackedFilePath
T@"NSData",D
T@,R,V_vendorPrivate
T@"NSArray",D
T@"MTLType",D
functionInputs
T@"NSObject<OS_dispatch_data>",R,D
T@"MTLDebugInstrumentationData",&,N,V_debugInstrumentationData
initializePublicMetadata
initializeStitchableFunctionMetadata
initWithObjects:forKeys:count:
compilerFlags
specializedName
specializedFunctionHash:requestData:constants:specializedName:completionHandler:
applyFunctionConstants
setFunctionConstantSpecializationHash:
initializePrivateMetadata
initializeSourceArchive
programObject
functionData
setBitcodeType:
setStageInputAttributes:
_functionData
_publicMetadataInitialized
_privateMetadataInitialized
_sourceArchiveMetadataInitialized
_stitchableFunctionMetadataInitialized
_programObject
_filePath
_lineNumber
_functionQueue
initWithCompilerOutput:
inputInfoAndSize:
setInputInfo:size:
outputInfoAndSize:
setOutputInfo:size:
_inputInfo
_inputInfoSize
compileRequest:pipelineCache:completionHandler:
compileRequest:pipelineCache:sync:completionHandler:
addCompiledOutput:cachedCompiledOutput:importedSymbols:importedLibraries:hashKey:functionCache:
validateLanguageAndAIRVersionForFunction:completionHandler:
releaseCompilerOutputBlocks:
cacheCompilerData:cachedData:hashMap:libraryData:functionCache:
compileStatelessFunctionRequest:reflectionOnly:completionHandler:
compileFunctionRequestInternal:frameworkLinking:linkDataSize:reflectionOnly:completionHandler:
hashKeyForStatelessCompilationRequest:
statelessBackendCompileRequestInternal:sync:compilerHash:reflectionOnly:completionHandler:
hashKeyForLibraryRequest:
compileFunction:serializedPipelineData:stateData:linkDataSize:frameworkLinking:options:pipelineCache:sync:completionHandler:
compileFunction:visibleFunctions:privateVisibleFunctions:visibleFunctionGroups:frameworkData:driverKeyData:options:pipelineCache:sync:completionHandler:
compileFunction:serializedPipelineData:stateData:linkDataSize:frameworkLinking:options:sync:completionHandler:
reflectionWithFunction:options:sync:pipelineLibrary:binaryArchives:completionHandler:
newSerializedVertexDataWithFlags:options:error:
initWithVertexData:fragmentData:serializedVertexDescriptor:device:options:flags:
setPerformanceStatistics:
setConstantSamplerDescriptorsFromBitmasks:count:
setConstantSamplerUniqueIdentifiers:
setVertexDebugInstrumentationData:
setFragmentDebugInstrumentationData:
addFunctionKeys:function:driverData:frameworkData:compilerOptions:
getProgramObjectForFunction:variantKey:requiredBinaryKeys:sourceBinaryArchives:
requiredKeysForFunction:variantKey:frameworkData:compilerOptions:
getProgramObject:destinationArchive:sourceBinaryArchives:variantKey:requiredBinaryKeys:failOnMiss:
vertexLinkedFunctions
reflectionWithFunction:options:completionHandler:
newRenderPipelineStateWithDescriptorInternal:options:reflection:destinationBinaryArchive:error:completionHandler:
createVertexStageAndLinkPipelineWithFragment:fragmentVariant:vertexFunction:serializedVertexDescriptor:descriptor:destinationArchive:options:reflection:compileStatistics:fragmentCompileTimeData:error:completionHandler:
newSerializedFragmentDataWithFlags:options:
fragmentLinkedFunctions
pipelineLibrary
newComputePipelineStateWithDescriptorInternal:options:pipelineCache:destinationBinaryArchive:reflection:error:completionHandler:
functionPointers
arrayByAddingObjectsFromArray:
mutableCopy
functionPointerGroups
addEntriesFromDictionary:
initWithSerializedData:serializedStageInputDescriptor:device:options:flags:
newSerializedComputeDataWithFlags:options:
computeVariantEntryWithDescriptor:options:serializedComputeDataDescriptor:asyncCompile:pipelineCache:destinationBinaryArchive:computeProgram:kernelDriverCompileTimeData:compileTimeStatistics:
pipelineStateWithVariant:descriptor:options:computeProgram:kernelDriverCompileTimeData:serializedComputeDataDescriptor:compileTimeStatistics:reflection:error:completionHandler:
initWithTargetData:cacheUUID:pluginPath:device:compilerFlags:
compileRequest:completionHandler:
addCompiledOutput:importedSymbols:importedLibraries:hashKey:functionCache:
compileFunctionRequest:completionHandler:
compileLibraryRequest:completionHandler:
compileFunction:frameworkData:driverKeyData:options:pipelineCache:completionHandler:
compileFunction:frameworkData:driverKeyData:options:pipelineCache:sync:completionHandler:
compileFunction:visibleFunctions:visibleFunctionGroups:frameworkData:driverKeyData:options:pipelineCache:sync:completionHandler:
compileDynamicLibrary:computePipelineDescriptor:error:
addComputePipelineStateWithDescriptor:destinationBinaryArchive:error:
addRenderPipelineStateWithDescriptor:destinationBinaryArchive:error:
addTileRenderPipelineStateWithDescriptor:destinationBinaryArchive:error:
compileFunction:serializedData:stateData:options:completionHandler:
newRenderPipelineStateWithTileDescriptor:options:reflection:error:completionHandler:
pluginPath
compilerQueue
compilerConnectionManager
compilerId
_pluginPath
_compilerQueue
_compilerConnectionManager
_compilerId
_compilerFlags
_shaderCache
T@"NSString",R,C,V_pluginPath
T@"NSObject<OS_dispatch_queue>",R,V_compilerQueue
T^{MTLCompilerConnectionManager=^^?},R,V_compilerConnectionManager
TI,R,V_compilerId
TQ,R,V_compilerFlags
initWithBytesNoCopy:length:
setFragmentBuffer:offset:atIndex:
drawPatches:patchStart:patchCount:patchIndexBuffer:patchIndexBufferOffset:instanceCount:baseInstance:tessellationFactorBuffer:tessellationFactorBufferOffset:tessellationFactorBufferInstanceStride:
drawIndexedPatches:patchStart:patchCount:patchIndexBuffer:patchIndexBufferOffset:controlPointIndexBuffer:controlPointIndexBufferOffset:instanceCount:baseInstance:tessellationFactorBuffer:tessellationFactorBufferOffset:tessellationFactorBufferInstanceStride:
drawPrimitives:vertexStart:vertexCount:instanceCount:baseInstance:
drawIndexedPrimitives:indexCount:indexType:indexBuffer:indexBufferOffset:instanceCount:baseVertex:baseInstance:
getVertexBufferAtIndex:
getFragmentBufferAtIndex:
getCommandType
drawArguments
drawIndexedArguments
drawPatchesArguments
drawIndexedPatchesArguments
getTessellationFactorArguments
getOptimizedStatus
getPipelineStateUniqueIdentifier
drawIndexedPatches:patchStart:patchCount:patchIndexBuffer:patchIndexBufferOffset:controlPointIndexBuffer:controlPointIndexBufferOffset:instanceCount:baseInstance:tessellationFactorBuffer:tessellationFactorBufferOffset:tessellationFactorBufferInstanceStride:tessellationFactorBufferScale:
drawPatches:patchStart:patchCount:patchIndexBuffer:patchIndexBufferOffset:instanceCount:baseInstance:tessellationFactorBuffer:tessellationFactorBufferOffset:tessellationFactorBufferInstanceStride:tessellationFactorBufferScale:
texture
T@"<MTLTexture>",&,D,N
level
slice
depthPlane
resolveTexture
resolveLevel
resolveSlice
resolveDepthPlane
loadAction
storeAction
storeActionOptions
clearColor
T{?=dddd},D,N
clearDepth
Td,D,N
depthResolveFilter
clearStencil
TI,D,N
stencilResolveFilter
setPurgeableState:
makeAliasable
isAliasable
heap
heapOffset
allocatedSize
T@"<MTLHeap>",R
getBytes:bytesPerRow:bytesPerImage:fromRegion:mipmapLevel:slice:
replaceRegion:mipmapLevel:slice:withBytes:bytesPerRow:bytesPerImage:
getBytes:bytesPerRow:fromRegion:mipmapLevel:
replaceRegion:mipmapLevel:withBytes:bytesPerRow:
newTextureViewWithPixelFormat:
newTextureViewWithPixelFormat:textureType:levels:slices:
newTextureViewWithPixelFormat:textureType:levels:slices:swizzle:
rootResource
parentTexture
parentRelativeLevel
parentRelativeSlice
bufferOffset
bufferBytesPerRow
iosurface
iosurfacePlane
isFramebufferOnly
T@"<MTLResource>",R
T@"<MTLTexture>",R
T@"<MTLBuffer>",R
T^{__IOSurface=},R
TB,R,GisFramebufferOnly
T{?=CCCC},R,N
isPurgeable
isComplete
waitUntilComplete
doesAliasResource:
doesAliasAllResources:count:
doesAliasAnyResources:count:
responsibleProcess
setResponsibleProcess:
allocationID
setOwnerWithIdentity:
isCompressed
compressionFeedback
newCompressedTextureViewWithPixelFormat:textureType:level:slice:
canGenerateMipmapLevels
generateMipmapLevel:slice:
newTextureViewWithPixelFormat:resourceIndex:
newTextureViewWithPixelFormat:textureType:levels:slices:resourceIndex:
newTextureViewWithPixelFormat:textureType:levels:slices:swizzle:resourceIndex:
attachmentDescriptor
setTexture:
setResolveTexture:
setLevel:
setSlice:
setDepthPlane:
setClearColor:
setResolveLevel:
setResolveSlice:
setResolveDepthPlane:
setYInvert:
yInvert
setLoadAction:
setStoreAction:
setStoreActionOptions:
setClearDepth:
setDepthResolveFilter:
setClearStencil:
setStencilResolveFilter:
_color_descriptors
_depth_descriptor
_stencil_descriptor
startOfVertexSampleIndex
endOfVertexSampleIndex
startOfFragmentSampleIndex
endOfFragmentSampleIndex
setStartOfVertexSampleIndex:
setEndOfVertexSampleIndex:
setStartOfFragmentSampleIndex:
setEndOfFragmentSampleIndex:
renderPassDescriptor
setSamplePositions:count:
getSamplePositions:count:
imageblockSampleLength
setImageblockSampleLength:
threadgroupMemoryLength
setThreadgroupMemoryLength:
tileWidth
setTileWidth:
tileHeight
setTileHeight:
_imageblockSampleLength
_threadgroupMemoryLength
_tileWidth
_tileHeight
T@"MTLRenderPassColorAttachmentDescriptorArray",R,D
depthAttachment
T@"MTLRenderPassDepthAttachmentDescriptor",C,D,N
stencilAttachment
T@"MTLRenderPassStencilAttachmentDescriptor",C,D,N
visibilityResultBuffer
T@"<MTLBuffer>",&,D,N
renderTargetArrayLength
TQ,N,V_imageblockSampleLength
TQ,N,V_threadgroupMemoryLength
TQ,N,V_tileWidth
TQ,N,V_tileHeight
defaultRasterSampleCount
renderTargetWidth
renderTargetHeight
T@"MTLRenderPassSampleBufferAttachmentDescriptorArray",R,D
didModifyRange:
newTextureWithDescriptor:offset:bytesPerRow:
addDebugMarker:range:
removeAllDebugMarkers
setDepthAttachment:
setStencilAttachment:
setVisibilityResultBuffer:
setRenderTargetArrayLength:
setRenderTargetWidth:
setRenderTargetHeight:
setDefaultColorSampleCount:
defaultColorSampleCount
setFineGrainedBackgroundVisibilityEnabled:
fineGrainedBackgroundVisibilityEnabled
setDitherEnabled:
isDitherEnabled
setOpenGLModeEnabled:
setPointCoordYFlipEnabled:
pointCoordYFlipEnabled
setDefaultRasterSampleCount:
validate:width:height:
numberWithDouble:
getType
progressTrackingComputeCommandEncoder
setComputePipelineState:
dispatchThreadgroups:threadsPerThreadgroup:
executeSynchronizationNotifications:
executeSynchronizationNotifications:scope:resources:count:
initWithCommandBuffer:
filterCounterRangeWithFirstBatch:lastBatch:filterIndex:
memoryBarrierNotificationWithScope:
memoryBarrierNotificationWithResources:count:
numThisEncoder
setNumThisEncoder:
_isProgressTrackingEncoder
TQ,R,N,V_globalTraceObjectID
TQ,R,N,GgetType
TQ,N,V_numThisEncoder
initWithSerializedData:device:options:flags:
performanceStatistics
usageFlags
traceBufferIndex
constantSamplerUniqueIdentifiers
constantSamplerDescriptors
_performanceStatistics
_traceBufferIndex
_constantSamplerUniqueIdentifiers
_constantSamplerDescriptors
_insertLibraries
T@"MTLStageInputOutputDescriptor",C,D,N
T@"NSArray",C,N,V_insertLibraries
setDriverCompilerOptions:
driverCompilerOptions
setFunctionPointers:
setFunctionPointerGroups:
binaryLibraries
setBinaryLibraries:
dynamicLibraries
setDynamicLibraries:
setTextureWriteFPRoundingMode:
textureWriteFPRoundingMode
openCLModeEnabled
setOpenCLModeEnabled:
newSerializedComputeData
getPipelineScript
_builder
imageblockMemoryLengthForDimensions:
threadExecutionWidth
staticThreadgroupMemoryLength
initWithDevice:pipelineStateDescriptor:
functionPointerHandleWithFunction:
functionPointerHandlesWithFunctions:range:
_supportIndirectCommandBuffers
_textureWriteRoundingMode
setKernelBuffer:offset:atIndex:
concurrentDispatchThreadgroups:threadsPerThreadgroup:
concurrentDispatchThreads:threadsPerThreadgroup:
setBarrier
clearBarrier
setImageblockWidth:height:
setThreadgroupMemoryLength:atIndex:
setStageInRegion:
getKernelBufferAtIndex:
dispatchThreadgroupsArguments
dispatchThreadsArguments
getThreadgroupMemoryLengthAtIndex:
getStageInRegion
hasBarrier
getImageBlockSize
setKernelArgument:offset:atIndex:
dataUsingEncoding:allowLossyConversion:
kprintfBytes:length:
IOLogBytes:length:
kprintf:
IOLog:
startCaptureWithSettings:from:
startCaptureWithSettings:
startCapture
stopCapture:
getLastStartStopCaptureResult
dumpBuffer:name:
dumpBuffer:
dumpTexture:name:glMode:
dumpTexture:name:
dumpTexture:
postFinishEvent:
postFinishEvent
memberByName:
isMemberLayoutThreadSafeWith:
isStructLayoutThreadSafeWith:
typeName
_dictionary
_members
_isIndirectArgumentBuffer
_typeName
TB,V_isIndirectArgumentBuffer
T@"NSString",R,V_typeName
dataSize
elementIsIndirectArgumentBuffer
_elementType
_elementTypeInfo
_access
_elementIsArgumentBuffer
_isConstantBuffer
_doRetain
textureReferenceType
pointerType
renderTargetIndex
isArrayLayoutThreadSafeWith:
_details
_argumentIndex
_render_target
_raster_order_group
_typeInfo
TQ,R,V_pixelFormat
TQ,R,V_aluType
TQ,R,V_render_target
TQ,R,V_raster_order_group
elementTextureReferenceType
elementPointerType
argumentIndexStride
setIndirectArgumentIndexStride:
_arrayLength
_argumentIndexStride
TQ,N,V_argumentIndexStride
T@"MTLArgument",R,D
T@"MTLStructType",R,D
T@"MTLPointerType",R,D
_active
airMDType
_airMDType
T@"NSString",R,V_airMDType
TQ,R,V_offset
baseInstanceUnused
_stepRate
_baseInstanceUnused
TQ,R,V_bufferIndex
TQ,R,V_stride
TQ,R,V_stepFunction
TQ,R,V_stepRate
TB,R,V_baseInstanceUnused
init:device:
filter:device:
setDevice:
messageType
_messageType
T@"<MTLDevice>",R,&,V_device
TQ,R,V_messageType
init:message:
_string
TQ,R,V_type
T@"NSString",R,&,V_string
init:filter:
filter
handler
_filter
_handler
T@"MTLMessageFilter",R,&,V_filter
T@?,R,V_handler
baseObject
removeObject:
blendingEnabled
TB,D,N,GisBlendingEnabled
vertexArguments
fragmentArguments
tileArguments
initWithTileData:functionType:device:options:flags:
vertexPluginReturnData
fragmentPluginReturnData
vertexBuiltInArguments
postVertexDumpStride
postVertexDumpOutputs
inferredInputs
imageBlockDataReturn
_vertexBuiltInArguments
_postVertexDumpStride
_postVertexDumpOutputs
_inferredInputs
_vertexArguments
_fragmentArguments
_tileArguments
_tileBuiltInArguments
_imageBlockDataReturn
_vertexPluginReturnData
_fragmentPluginReturnData
setVertexPreloadedLibraries:
setFragmentPreloadedLibraries:
_vertexPreloadedLibraries
_fragmentPreloadedLibraries
T@"MTLVertexDescriptor",C,D,N
alphaToCoverageEnabled
TB,D,N,GisAlphaToCoverageEnabled
alphaToOneEnabled
TB,D,N,GisAlphaToOneEnabled
rasterizationEnabled
TB,D,N,GisRasterizationEnabled
T@"MTLRenderPipelineColorAttachmentDescriptorArray",R,D
tessellationFactorScaleEnabled
TB,D,N,GisTessellationFactorScaleEnabled
T@"NSArray",C,N,V_vertexPreloadedLibraries
T@"NSArray",C,N,V_fragmentPreloadedLibraries
forceSoftwareVertexFetch
setForceSoftwareVertexFetch:
postVertexDumpBufferIndex
setPostVertexDumpBufferIndex:
sampleMask
sampleCoverage
isLogicOperationEnabled
setLogicOperationEnabled:
logicOperation
setLogicOperation:
isAlphaTestEnabled
setAlphaTestEnabled:
alphaTestFunction
setAlphaTestFunction:
setClipDistanceEnableMask:
clipDistanceEnableMask
isPointSmoothEnabled
setPointSmoothEnabled:
isPointCoordLowerLeft
setPointCoordLowerLeft:
isPointSizeOutputVS
setPointSizeOutputVS:
isTwoSideEnabled
setTwoSideEnabled:
vertexDepthCompareClampMask
setVertexDepthCompareClampMask:
fragmentDepthCompareClampMask
setFragmentDepthCompareClampMask:
sampleCoverageInvert
setSampleCoverageInvert:
isDepthStencilWriteDisabled
setDepthStencilWriteDisabled:
setVertexLinkedFunctions:
setFragmentLinkedFunctions:
insertVertexLibraries
setInsertVertexLibraries:
insertFragmentLibraries
setInsertFragmentLibraries:
attachVertexDescriptor:
serializeFragmentData
newSerializedVertexDataWithFlags:error:
initWithDeviceAndTileDesc:tilePipelineStateDescriptor:
initWithParent:
initWithTileParent:
vertexDebugInstrumentationData
fragmentDebugInstrumentationData
tileDebugInstrumentationData
setTileDebugInstrumentationData:
imageBlockSampleLength
_threadgroupSizeMatchesTileSize
_vertexDebugInstrumentationData
_fragmentDebugInstrumentationData
_tileDebugInstrumentationData
_imageBlockSampleLength
T@"MTLDebugInstrumentationData",&,N,V_vertexDebugInstrumentationData
T@"MTLDebugInstrumentationData",&,N,V_fragmentDebugInstrumentationData
T@"MTLDebugInstrumentationData",&,N,V_tileDebugInstrumentationData
TQ,R,V_imageBlockSampleLength
TB,R,V_threadgroupSizeMatchesTileSize
initWithCString:encoding:
exceptionWithName:reason:userInfo:
setPrivateFunctions:
_privateFunctions
T@"NSArray",C,N,V_privateFunctions
setFunctions:
setGroups:
releaseAllObjectsAndReset
_listPriv
encodeWithCoder:
initWithCoder:
memoryPool
virtualSize
residentSize
dirtySize
pageoffRequired
purgeable
writeToFile:options:error:
dataWithJSONObject:options:error:
lastPathComponent
stringByDeletingPathExtension
blitPassDescriptor
T@"MTLBlitPassSampleBufferAttachmentDescriptorArray",R,D
raise:format:
encodeXPCObject:forKey:
encodeObject:forKey:
decodeXPCObjectOfType:forKey:
decodeObjectOfClass:forKey:
supportsSecureCoding
eventPort
labelTraceID
initWithDispatchQueue:
dispatchQueue
T@"NSObject<OS_dispatch_queue>",R,D
_dispatchQueue
numberWithInteger:
functionDescriptor
setApplyFunctionConstants:
T@"MTLFunctionConstantValues",C,D,N
stencilCompareFunction
stencilFailureOperation
depthFailureOperation
depthStencilPassOperation
readMask
stencilPrivate
Tr^{MTLStencilDescriptorPrivate=QQQQII},R,D
setStencilCompareFunction:
setStencilFailureOperation:
setDepthFailureOperation:
setDepthStencilPassOperation:
setReadMask:
Tr^{MTLStencilDescriptorPrivate=QQQQII},R
depthCompareFunction
depthWriteEnabled
TB,D,N,GisDepthWriteEnabled
frontFaceStencil
T@"MTLStencilDescriptor",C,D,N
backFaceStencil
depthStencilPrivate
Tr^{MTLDepthStencilDescriptorPrivate=@@QB@},R,D
setDepthCompareFunction:
isDepthWriteEnabled
setDepthWriteEnabled:
setFrontFaceStencil:
setBackFaceStencil:
Tr^{MTLDepthStencilDescriptorPrivate=@@QB@},R
readsDepth
writesDepth
readsStencil
writesStencil
initWithDevice:depthStencilDescriptor:
setLength:
setNoCopy:
setParentGPUAddress:
setParentGPUSize:
setDeallocator:
setContents:
noCopy
deallocator
parentGPUAddress
parentGPUSize
_noCopy
_length
_contents
_deallocator
_resourceOptions
_pinnedGPUAddress
_parentGPUAddress
_parentGPUSize
TQ,N,V_pinnedGPUAddress
TQ,N,V_parentGPUAddress
TQ,N,V_parentGPUSize
TQ,N,V_length
TQ,N,V_resourceOptions
T^v,N,V_contents
TB,N,V_noCopy
T@?,N,V_deallocator
setArgumentIndex:
initWithArgumentIndex:
TQ,N,V_argumentIndex
setControlDependencies:
initWithName:arguments:controlDependencies:
_controlDependencies
T@"NSString",C,N,V_name
T@"NSArray",C,N,V_arguments
T@"NSArray",C,N,V_controlDependencies
setNodes:
setAttributes:
setFunctionName:
setOutputNode:
initWithFunctionName:nodes:outputNode:attributes:
_functionName
_nodes
_outputNode
_attributes
T@"NSString",C,N,V_functionName
T@"NSArray",C,N,V_nodes
T@"MTLFunctionStitchingFunctionNode",C,N,V_outputNode
T@"NSArray",C,N,V_attributes
setFunctionGraphs:
_functionGraphs
_functions
T@"NSArray",C,N,V_functionGraphs
T@"NSArray",C,N,V_functions
setBindIndex:
initWithBindIndex:
_bindIndex
TQ,N,V_bindIndex
setByteOffset:
setDereference:
initWithBindIndex:byteOffset:dereference:
_dereference
_byteOffset
TQ,N,V_byteOffset
TB,N,V_dereference
setIsEarlyReturn:
initWithName:arguments:controlDependencies:isEarlyReturn:
_isEarlyReturn
TB,N,V_isEarlyReturn
errorState
debugSignposts
T@"NSArray",R,N
Tq,R,N
uniqueID
setGlobalTraceObjectID:
_uniqueID
_errorState
TQ,N,V_uniqueID
TQ,N,V_globalTraceObjectID
T@"NSString",&,N,V_label
T@"NSArray",&,N,V_debugSignposts
Tq,N,V_errorState
setRetainedReferences:
setCaptureProgramAddressTable:
captureProgramAddressTable
_captureProgramAddressTable
_errorOptions
TB,N,V_captureProgramAddressTable
getAndIncrementNumCommandBuffers
getListIndex
lastObject
removeLastObject
blitCommandEncoder
computeCommandEncoder
getDriverEncoderInfoData:
initWithQueue:retainedReferences:synchronousDebugMode:
enqueueCommandBuffer:
commitCommandBuffer:wake:
commit
submitCommandBuffer:
waitUntilCompleted
present
presentAtTime:
error
addScheduledHandler:
addPresentScheduledHandler:
didSchedule:error:
processEncoderInfos
userInfo
dictionaryWithDictionary:
domain
code
runPerfCounterCallbackWithBlock:
computeCommandEncoderWithDispatchType:
initialize
initWithQueue:retainedReferences:
encodeDashboardTagForResourceGroup:
encodeDashboardFinalizeForResourceGroup:dashboard:value:forIndex:
encodeDashboardFinalizeForResourceGroup:dashboard:values:indices:count:
enqueue
commitAndHold
commitAndWaitUntilSubmitted
commitAndReset
presentDrawable:
presentDrawable:atTime:
waitUntilScheduled
isCommitted
setCommitted:
didScheduleWithStartTime:endTime:error:
userDictionary
didCompleteWithStartTime:endTime:error:
_addRetainedObject:
kernelSubmitTime
skipRender
setProfilingEnabled:
isProfilingEnabled
profilingResults
kernelStartTime
kernelEndTime
GPUStartTime
GPUEndTime
addSynchronizationNotification:
computeCommandEncoderWithDescriptor:
blitCommandEncoderWithDescriptor:
debugBufferContentsWithLength:
synchronousDebugMode
status
setStatEnabled:
numEncoders
ownedByParallelEncoder
logs
_currentCommandEncoder
_scheduledDispatchList
_scheduledDispatchListTail
_completedDispatchList
_completedDispatchListTail
_syncDispatchList
_syncDispatchListTail
_mutex
_cond
_creationTime
_enqueueTime
_commitTime
_submitToKernelTime
_submitToHardwareTime
_completionInterruptTime
_completionHandlerEnqueueTime
_completionHandlerExecutionTime
_status
_error
_skipRender
_profilingEnabled
_scheduledCallbacksDone
_completedCallbacksDone
_strongObjectReferences
_profilingResults
_synchronousDebugMode
_userDictionary
_kernelStartTime
_kernelEndTime
_gpuStartTime
_gpuEndTime
_numEncoders
_numThisCommandBuffer
_listIndex
_ownedByParallelEncoder
_wakeOnCommit
_retainedObjects
_needsCommandBufferSemaphoreSignal
_perfSampleHandlerBlock
_hasPresent
_progressBuffer
_progressOffset
_creatingProgressEncoder
_encoderInfos
_logs
TB,R,V_retainedReferences
TB,R,V_synchronousDebugMode
T@"<MTLCommandQueue>",R,V_queue
TQ,R,V_status
T@"NSError",R
profilingEnabled
TB,GisProfilingEnabled
T@"NSMutableArray",R,V_logs
Td,R,N
T@"NSMutableDictionary",R,N
StatEnabled
TB,N,GisStatEnabled,V_StatEnabled
TQ,N,V_numThisCommandBuffer
TQ,N,V_numEncoders
listIndex
TQ,R,N,GgetListIndex,V_listIndex
TB,N,V_ownedByParallelEncoder
TQ,N,V_errorOptions
T@"MTLVertexBufferLayoutDescriptorArray",R,D
T@"MTLVertexAttributeDescriptorArray",R,D
initWithDevice:maxCommandBufferCount:
initWithDevice:descriptor:
maxCommandBufferCount
qosLevel
commitQueue
commitSynchronously
completionQueue
disableCrossQueueHazardTracking
isOpenGLQueue
_submitAvailableCommandBuffers
encodeWaitForEvent:value:
encodeSignalEvent:value:
parallelRenderCommandEncoderWithDescriptor:
T@"<MTLCommandQueue>",R
Td,R
T@"<MTLLogContainer>",R
getObjects:range:
replaceObjectsInRange:withObjectsFromArray:range:
removeObjectsInRange:
submitCommandBuffers:count:
completeCommandBuffers:count:
commandBufferDidComplete:startTime:completionTime:error:
requestCounters:
numCommandBuffers
setSubmissionQueue:
commandBufferWithDescriptor:
finish
insertDebugCaptureBoundary
availableCounters
addPerfSampleHandler:
requestCounters:withIndex:
setSkipRender:
getStatOptions
setStatOptions:
getStatLocations
setStatLocations:
setListIndex:
executionEnabled
setExecutionEnabled:
backgroundTrackingPID
setBackgroundTrackingPID:
_dev
_pendingQueue
_submittedQueue
_pendingQueueLock
_submittedQueueLock
_submittedGroup
_commandQueueDispatch
_completionQueueDispatch
_commandQueueEventSource
_commandBufferSemaphore
_backgroundTrackingPID
_StatOptions
_StatLocations
_numCommandBuffers
_maxCommandBufferCount
_qosLevel
_commitQueue
_commitSynchronously
_completionQueue
_disableCrossQueueHazardTracking
_executionEnabled
_openGLQueue
_presentScheduledSemaphore
_forceImmediateSubmissionOnCommitThread
TQ,R,V_maxCommandBufferCount
TQ,R,V_qosLevel
T@"NSObject<OS_dispatch_queue>",R,V_commitQueue
TB,R,V_commitSynchronously
T@"NSObject<OS_dispatch_queue>",R,V_completionQueue
TB,R,V_disableCrossQueueHazardTracking
TB,R,V_openGLQueue
Ti,V_backgroundTrackingPID
TB,V_skipRender
TB,V_executionEnabled
TB,GisProfilingEnabled,V_profilingEnabled
StatOptions
TQ,N,GgetStatOptions,V_StatOptions
StatLocations
TQ,N,GgetStatLocations,V_StatLocations
TQ,N,GgetListIndex,V_listIndex
commandQueueDescriptor
T@"NSObject<OS_dispatch_queue>",D,N
setQosLevel:
setCommitQueue:
setCommitSynchronously:
setCompletionQueue:
setDisableCrossQueueHazardTracking:
setIsOpenGLQueue:
TB,V_openGLQueue
_featureInfo
isAGX
@16@0:8
v16@0:8
Q24@0:8^v16
@32@0:8@16r^v24
@24@0:8r^v16
Q16@0:8
Q32@0:8*16Q24
B24@0:8@16
#16@0:8
@24@0:8:16
@32@0:8:16@24
@40@0:8:16@24@32
B16@0:8
B24@0:8#16
B24@0:8:16
Vv16@0:8
^{_NSZone=}16@0:8
B24@0:8@"Protocol"16
@"NSString"16@0:8
v24@0:8@16
v24@0:8@"NSString"16
@"<MTLDevice>"16@0:8
@"<MTLCommandQueue>"16@0:8
@32@0:8@16@24
@"<MTLDevice>"
@"<MTLCommandQueue>"
@24@0:8^{_NSZone=}16
@24@0:8Q16
v24@0:8Q16
{MTLTileRenderPipelineAttachmentDescriptorPrivate=""(?=""{?="pixelFormat"I}""{?="bits"I})}
v32@0:8@16Q24
[8@"MTLTileRenderPipelineColorAttachmentDescriptorInternal"]
@"NSArray"
@32@0:8Q16^@24
q16@0:8
@"<MTLArgumentEncoder>"24@0:8Q16
@"<MTLArgumentEncoder>"32@0:8Q16^@24
@"NSArray"16@0:8
@"NSDictionary"16@0:8
v20@0:8B16
r^{MTLTileRenderPipelineDescriptorPrivate=@(?=QQ)@@BQQ@Sq@@@@}16@0:8
v24@0:8q16
B32@0:8@16^@24
@40@0:8Q16Q24^@32
{MTLTileRenderPipelineDescriptorPrivate="attachments"@"MTLTileRenderPipelineColorAttachmentDescriptorArrayInternal"""(?="sampleCount"Q"rasterSampleCount"Q)"label"@"NSString""tileFunction"@"<MTLFunction>""threadgroupSizeMatchesTileSize"B"paddingToRemove"Q"colorSampleCount"Q"tileBuffers"@"MTLPipelineBufferDescriptorArrayInternal""maxTotalThreadsPerThreadgroup"S"textureWriteRoundingMode"q"pluginData"@"NSDictionary""binaryArchives"@"NSArray""linkedFunctions"@"MTLLinkedFunctions""preloadedLibraries"@"NSArray"}
@"NSURL"16@0:8
@24@0:8@16
@"MTLDebugLocation"
@"NSURL"
[31@"MTLBufferLayoutDescriptorInternal"]
[31@"MTLAttributeDescriptorInternal"]
B40@0:8@16^@24@32
@"MTLBufferLayoutDescriptorArrayInternal"
@"MTLAttributeDescriptorArrayInternal"
^v40@0:8Q16@24Q32
Q40@0:8Q16@24Q32
I16@0:8
Q24@0:8Q16
v32@0:8@16@24
v40@0:8@16Q24Q32
v48@0:8r^@16r^Q24{_NSRange=QQ}32
v40@0:8r^@16{_NSRange=QQ}24
^v24@0:8Q16
v32@0:8@"<MTLBuffer>"16Q24
v40@0:8@"<MTLBuffer>"16Q24Q32
v32@0:8@"<MTLTexture>"16Q24
v32@0:8@"<MTLSamplerState>"16Q24
v32@0:8@"<MTLRenderPipelineState>"16Q24
v32@0:8@"<MTLComputePipelineState>"16Q24
v32@0:8@"<MTLIndirectCommandBuffer>"16Q24
@"_MTLIndirectArgumentBufferLayout"
@24@0:8r^{?=[32C]}16
r^{?=[32C]}16@0:8
{?="key"[32C]}
@40@0:8@16@24@32
@"NSObject<OS_dispatch_data>"
B40@0:8@16@24^@32
B32@0:8@"MTLComputePipelineDescriptor"16^@24
B32@0:8@"MTLRenderPipelineDescriptor"16^@24
B32@0:8@"MTLTileRenderPipelineDescriptor"16^@24
B32@0:8@"NSURL"16^@24
B40@0:8@"MTLFunctionDescriptor"16@"<MTLLibrary>"24^@32
B40@0:8@16Q24^@32
v32@0:8@16r^{?=[32C]}24
^v16@0:8
B24@0:8@?16
v32@0:8@"MTLBinaryEntry"16@"MTLBinaryKey"24
@"MTLBinaryEntry"24@0:8@"MTLBinaryKey"16
B40@0:8@"NSURL"16Q24^@32
@"NSString"24@0:8Q16
B40@0:8@"MTLComputePipelineDescriptor"16Q24^@32
B40@0:8@"MTLRenderPipelineDescriptor"16Q24^@32
B40@0:8@"MTLTileRenderPipelineDescriptor"16Q24^@32
v32@0:8@"NSObject<OS_dispatch_data>"16r^{?=[32C]}24
@"NSObject<OS_dispatch_data>"24@0:8r^{?=[32C]}16
B32@0:8@"MTLStitchedLibraryDescriptor"16^@24
B24@0:8@"MTLComputePipelineDescriptor"16
B24@0:8@"MTLRenderPipelineDescriptor"16
B24@0:8@"MTLTileRenderPipelineDescriptor"16
B24@0:8@?<B@?^{?=[32C]}@"NSObject<OS_dispatch_data>">16
@40@0:8@16@24^@32
@48@0:8Q16@24@32^@40
@32@0:8Q16^{?=[32C]}24
@32@0:8^{?=[32C]}16^v24
B24@0:8^v16
B48@0:8^v16r^{MTLLoaderSliceIdentifier=ii}24Q32Q40
B64@0:8r^{MTLLoaderSliceIdentifier=ii}16Q24r^{?=[32C]}32Q40Q48@?56
@48@0:8r^{?=[32C]}16^v24@?32@?40
@"MTLLoadedFile"
@"NSData"
@"NSObject<OS_dispatch_queue>"
{map<MTLUINT256_t, std::pair<unsigned int, unsigned long long>, CompareHash, std::allocator<std::pair<const MTLUINT256_t, std::pair<unsigned int, unsigned long long>>>>="__tree_"{__tree<std::__value_type<MTLUINT256_t, std::pair<unsigned int, unsigned long long>>, std::__map_value_compare<MTLUINT256_t, std::__value_type<MTLUINT256_t, std::pair<unsigned int, unsigned long long>>, CompareHash, true>, std::allocator<std::__value_type<MTLUINT256_t, std::pair<unsigned int, unsigned long long>>>>="__begin_node_"^v"__pair1_"{__compressed_pair<std::__tree_end_node<std::__tree_node_base<void *> *>, std::allocator<std::__tree_node<std::__value_type<MTLUINT256_t, std::pair<unsigned int, unsigned long long>>, void *>>>="__value_"{__tree_end_node<std::__tree_node_base<void *> *>="__left_"^v}}"__pair3_"{__compressed_pair<unsigned long, std::__map_value_compare<MTLUINT256_t, std::__value_type<MTLUINT256_t, std::pair<unsigned int, unsigned long long>>, CompareHash, true>>="__value_"Q}}}
@"NSMutableDictionary"
{unique_ptr<MTLPipelineCollection, std::default_delete<MTLPipelineCollection>>="__ptr_"{__compressed_pair<MTLPipelineCollection *, std::default_delete<MTLPipelineCollection>>="__value_"^{MTLPipelineCollection}}}
{unordered_map<MTLUINT256_t, NSObject<OS_dispatch_data> *, UnorderedContainerHash, UnorderedContainerHash, std::allocator<std::pair<const MTLUINT256_t, NSObject<OS_dispatch_data> *>>>="__table_"{__hash_table<std::__hash_value_type<MTLUINT256_t, NSObject<OS_dispatch_data> *>, std::__unordered_map_hasher<MTLUINT256_t, std::__hash_value_type<MTLUINT256_t, NSObject<OS_dispatch_data> *>, UnorderedContainerHash, UnorderedContainerHash, true>, std::__unordered_map_equal<MTLUINT256_t, std::__hash_value_type<MTLUINT256_t, NSObject<OS_dispatch_data> *>, UnorderedContainerHash, UnorderedContainerHash, true>, std::allocator<std::__hash_value_type<MTLUINT256_t, NSObject<OS_dispatch_data> *>>>="__bucket_list_"{unique_ptr<std::__hash_node_base<std::__hash_node<std::__hash_value_type<MTLUINT256_t, NSObject<OS_dispatch_data> *>, void *> *> *[], std::__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<MTLUINT256_t, NSObject<OS_dispatch_data> *>, void *> *> *>>>="__ptr_"{__compressed_pair<std::__hash_node_base<std::__hash_node<std::__hash_value_type<MTLUINT256_t, NSObject<OS_dispatch_data> *>, void *> *> **, std::__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<MTLUINT256_t, NSObject<OS_dispatch_data> *>, void *> *> *>>>="__value_"^^v"__value_"{__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<MTLUINT256_t, NSObject<OS_dispatch_data> *>, void *> *> *>>="__data_"{__compressed_pair<unsigned long, std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<MTLUINT256_t, NSObject<OS_dispatch_data> *>, void *> *> *>>="__value_"Q}}}}"__p1_"{__compressed_pair<std::__hash_node_base<std::__hash_node<std::__hash_value_type<MTLUINT256_t, NSObject<OS_dispatch_data> *>, void *> *>, std::allocator<std::__hash_node<std::__hash_value_type<MTLUINT256_t, NSObject<OS_dispatch_data> *>, void *>>>="__value_"{__hash_node_base<std::__hash_node<std::__hash_value_type<MTLUINT256_t, NSObject<OS_dispatch_data> *>, void *> *>="__next_"^v}}"__p2_"{__compressed_pair<unsigned long, std::__unordered_map_hasher<MTLUINT256_t, std::__hash_value_type<MTLUINT256_t, NSObject<OS_dispatch_data> *>, UnorderedContainerHash, UnorderedContainerHash, true>>="__value_"Q}"__p3_"{__compressed_pair<float, std::__unordered_map_equal<MTLUINT256_t, std::__hash_value_type<MTLUINT256_t, NSObject<OS_dispatch_data> *>, UnorderedContainerHash, UnorderedContainerHash, true>>="__value_"f}}}
{unordered_map<MTLUINT256_t, MTLProgramObject *, UnorderedContainerHash, UnorderedContainerHash, std::allocator<std::pair<const MTLUINT256_t, MTLProgramObject *>>>="__table_"{__hash_table<std::__hash_value_type<MTLUINT256_t, MTLProgramObject *>, std::__unordered_map_hasher<MTLUINT256_t, std::__hash_value_type<MTLUINT256_t, MTLProgramObject *>, UnorderedContainerHash, UnorderedContainerHash, true>, std::__unordered_map_equal<MTLUINT256_t, std::__hash_value_type<MTLUINT256_t, MTLProgramObject *>, UnorderedContainerHash, UnorderedContainerHash, true>, std::allocator<std::__hash_value_type<MTLUINT256_t, MTLProgramObject *>>>="__bucket_list_"{unique_ptr<std::__hash_node_base<std::__hash_node<std::__hash_value_type<MTLUINT256_t, MTLProgramObject *>, void *> *> *[], std::__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<MTLUINT256_t, MTLProgramObject *>, void *> *> *>>>="__ptr_"{__compressed_pair<std::__hash_node_base<std::__hash_node<std::__hash_value_type<MTLUINT256_t, MTLProgramObject *>, void *> *> **, std::__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<MTLUINT256_t, MTLProgramObject *>, void *> *> *>>>="__value_"^^v"__value_"{__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<MTLUINT256_t, MTLProgramObject *>, void *> *> *>>="__data_"{__compressed_pair<unsigned long, std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<MTLUINT256_t, MTLProgramObject *>, void *> *> *>>="__value_"Q}}}}"__p1_"{__compressed_pair<std::__hash_node_base<std::__hash_node<std::__hash_value_type<MTLUINT256_t, MTLProgramObject *>, void *> *>, std::allocator<std::__hash_node<std::__hash_value_type<MTLUINT256_t, MTLProgramObject *>, void *>>>="__value_"{__hash_node_base<std::__hash_node<std::__hash_value_type<MTLUINT256_t, MTLProgramObject *>, void *> *>="__next_"^v}}"__p2_"{__compressed_pair<unsigned long, std::__unordered_map_hasher<MTLUINT256_t, std::__hash_value_type<MTLUINT256_t, MTLProgramObject *>, UnorderedContainerHash, UnorderedContainerHash, true>>="__value_"Q}"__p3_"{__compressed_pair<float, std::__unordered_map_equal<MTLUINT256_t, std::__hash_value_type<MTLUINT256_t, MTLProgramObject *>, UnorderedContainerHash, UnorderedContainerHash, true>>="__value_"f}}}
^v24@0:8r^{?=[32C]}16
B40@0:8^{?=BBQQBQQQQBQQ}16@24@32
B32@0:8^{?=BBQQBQQQQBQQ}16@24
{MTLLoaderSliceIdentifier=ii}16@0:8
v24@0:8^v16
f16@0:8
v20@0:8f16
{?=QQQ}16@0:8
v40@0:8{?=QQQ}16
{?="width"Q"height"Q"depth"Q}
@40@0:8r^v16Q24@32
@"NSString"
@40@0:8r^v16Q24Q32
v40@0:8r^v16Q24Q32
v48@0:8r^v16Q24{_NSRange=QQ}32
v40@0:8r^v16Q24@32
^v40@0:8@16^Q24^@32
r^v24@0:8@16
@48@0:8^{MTLLibraryData=^^?{?=[32C]}Ai@@}16@24@32^@40
@48@0:8@16@24Q32^@40
@"MTLDebugInstrumentationData"
@"NSObject<OS_dispatch_data>"16@0:8
v24@0:8@"NSArray"16
@"MTLDebugInstrumentationData"16@0:8
v24@0:8@"MTLDebugInstrumentationData"16
@48@0:8@16@24@32^@40
@"MTLDynamicLibraryContainer"
@104@0:8@16Q24Q32B40Q44Q52Q60Q68Q76B84Q88Q96
v28@0:8@16B24
@84@0:8@16Q24Q32B40Q44Q52Q60Q68Q76
@72@0:8@16Q24B32Q36Q44Q52Q60B68
@68@0:8@16Q24Q32B40Q44Q52Q60
@72@0:8@16Q24Q32B40Q44I52@56B64I68
@"MTLStructTypeInternal"
@80@0:8@16Q24Q32B40Q44Q52I60@64B72I76
{os_unfair_lock_s="_os_unfair_lock_opaque"I}
r^{MTLPipelineBufferDescriptorPrivate=(?={?=b2}{?=Q})}16@0:8
{MTLPipelineBufferDescriptorPrivate=""(?=""{?="mutability"b2}""{?="bits"Q})}
[31@"MTLPipelineBufferDescriptorInternal"]
^{DebugLocation=IIII}
^{DebugSubProgram=III}
@20@0:8I16
{vector<const __CFString *, std::allocator<const __CFString *>>="__begin_"^^{__CFString}"__end_"^^{__CFString}"__end_cap_"{__compressed_pair<const __CFString **, std::allocator<const __CFString *>>="__value_"^^{__CFString}}}
{vector<MTLDebugLocation *, std::allocator<MTLDebugLocation *>>="__begin_"^@"__end_"^@"__end_cap_"{__compressed_pair<MTLDebugLocation **, std::allocator<MTLDebugLocation *>>="__value_"^@}}
{vector<MTLDebugSubProgram *, std::allocator<MTLDebugSubProgram *>>="__begin_"^@"__end_"^@"__end_cap_"{__compressed_pair<MTLDebugSubProgram **, std::allocator<MTLDebugSubProgram *>>="__value_"^@}}
@"NSData"16@0:8
@32@0:8@16Q24
@40@0:8Q16Q24Q32
@48@0:8Q16Q24Q32@40
@"NSDictionary"
{MTLArgumentDescriptorPrivate="dataType"Q"index"Q"arrayLength"Q"access"Q"textureType"Q"constantBlockAlignment"Q}
B32@0:8Q16Q24
B24@0:8q16
r^{MTLTargetDeviceArch=QI*}16@0:8
@32@0:8@16^@24
@40@0:8@16Q24^@32
@32@0:8^v16Q24
@40@0:8^v16@24Q32
v24@0:8^{MTLLibraryContainer=^{MTLPipelineCollection}Ai{?=[32C]}^{MTLLibraryData}@@@@@}16
@28@0:8@16I24
{?=II}16@0:8
v40@0:8@16@24@?32
@40@0:8@16r^{?=BQ^{?}}24^@32
@40@0:8Q16@24^@32
@32@0:8Q16@24
B36@0:8@16B24^@28
v32@0:8@16@?24
@48@0:8@16Q24^@32^@40
v40@0:8@16Q24@?32
B24@0:8Q16
r^{?=IIIIIIIIIIIIIIIIIIIIIIIIIIffIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIQ}16@0:8
^v40@0:8@16^Q24@32
^v48@0:8@16Q24@32^Q40
v32@0:8^v16Q24
^v32@0:8@16^Q24
^v40@0:8@16Q24^Q32
{?=b1b1b1b1b1b1b1b1b1b55}32@0:8@16@24
{?=b1b1b1b1b60}24@0:8@16
@48@0:8@16@24@32@40
v56@0:8^^Q16^^Q24^Q32@40@48
v48@0:8^^Q16^^Q24^Q32@40
v32@0:8^{?=ff}16Q24
{IndirectArgumentBufferCapabilities=b1b1b1b29}16@0:8
@40@0:8@16{_NSRange=QQ}24
v32@0:8^Q16^Q24
{?="maxFramebufferStorageBits"I"linearTextureArrayAlignmentBytes"I"linearTextureArrayAlignmentSlice"I"maxTileBuffers"I"maxTileTextures"I"maxTileSamplers"I"maxTileInlineDataSize"I"minTilePixels"I"maxColorAttachments"I"maxVertexAttributes"I"maxVertexBuffers"I"maxVertexTextures"I"maxVertexSamplers"I"maxVertexInlineDataSize"I"maxInterpolants"I"maxFragmentBuffers"I"maxFragmentTextures"I"maxFragmentSamplers"I"maxFragmentInlineDataSize"I"maxComputeBuffers"I"maxComputeTextures"I"maxComputeSamplers"I"maxComputeInlineDataSize"I"maxComputeLocalMemorySizes"I"maxTotalComputeThreadsPerThreadgroup"I"maxComputeThreadgroupMemory"I"maxLineWidth"f"maxPointSize"f"maxVisibilityQueryOffset"I"padmaxBufferLength"I"minConstantBufferAlignmentBytes"I"minBufferNoCopyAlignmentBytes"I"maxTextureWidth1D"I"maxTextureWidth2D"I"maxTextureHeight2D"I"maxTextureWidth3D"I"maxTextureHeight3D"I"maxTextureDepth3D"I"maxTextureDimensionCube"I"maxTextureLayers"I"linearTextureAlignmentBytes"I"iosurfaceTextureAlignmentBytes"I"iosurfaceReadOnlyTextureAlignmentBytes"I"deviceLinearTextureAlignmentBytes"I"deviceLinearReadOnlyTextureAlignmentBytes"I"maxFunctionConstantIndices"I"maxComputeThreadgroupMemoryAlignmentBytes"I"maxInterpolatedComponents"I"maxTessellationFactor"I"maxIndirectBuffers"I"maxIndirectTextures"I"maxIndirectSamplers"I"maxIndirectSamplersPerDevice"I"maxFenceInstances"I"maxViewportCount"I"maxCustomSamplePositions"I"maxTextureBufferWidth"I"maxComputeAttributes"I"maxPredicatedNestingDepth"I"maxConstantBufferArguments"I"maxBufferLength"Q}
@"NSMutableArray"
@"<MTLRenderPipelineState>"
@"<MTLComputePipelineState>"
@"MTLDeviceFeatureQueries"
^{MTLPipelineLibraryBuilder=@@}
@"MTLLoader"
{once_flag="__state_"Q}
r^{MTLComputePassSampleBufferAttachmentDescriptorPrivate=@QQ}16@0:8
{MTLComputePassSampleBufferAttachmentDescriptorPrivate="sampleBuffer"@"<MTLCounterSampleBuffer>""startOfEncoderSampleIndex"Q"endOfEncoderSampleIndex"Q}
[4@"MTLComputePassSampleBufferAttachmentDescriptorInternal"]
r^{MTLComputePassDescriptorPrivate=Q@B}16@0:8
{MTLComputePassDescriptorPrivate="dispatchType"Q"sampleBufferAttachments"@"MTLComputePassSampleBufferAttachmentDescriptorArrayInternal""allowCommandEncoderCoalescing"B}
@"<MTLCounterSet>"
@44@0:8Q16Q24Q32B40
@36@0:8Q16Q24B32
@48@0:8Q16Q24Q32Q40
v20@0:8{?=CCCC}16
{?=CCCC}16@0:8
v20@0:8I16
r^{MTLTextureDescriptorPrivate=QQQQQQQQBQBBIBQ(?=QQ)QBBQQQQQ}16@0:8
{MTLTextureDescriptorPrivate="textureType"Q"pixelFormat"Q"width"Q"height"Q"depth"Q"mipmapLevelCount"Q"sampleCount"Q"arrayLength"Q"zeroFill"B"rotation"Q"framebufferOnly"B"isDrawable"B"swizzle"I"writeSwizzleEnabled"B"compressionMode"Q""(?="textureUsage"Q"usage"Q)"resourceOptions"Q"allowGPUOptimizedContents"B"forceResourceIndex"B"resourceIndex"Q"protectionOptions"Q"resolvedUsage"Q"cpuCacheMode"Q"storageMode"Q}
{MTLIndirectCommandBufferDescriptorState="commandTypes"Q"inheritPipelineState"B"inheritBuffers"B"maxVertexBufferBindCount"Q"maxFragmentBufferBindCount"Q"maxKernelBufferBindCount"Q"resourceIndex"Q}
@36@0:8@16B24r^{MTLTargetDeviceArch=QI*}28
^{MTLCompilerCache=^^?@ii}16@0:8
^{MTLCompilerCache=^^?@ii}
@"<MTLComputePipelineState>"48@0:8@"NSString"16Q24^@32^@40
@"<MTLRenderPipelineState>"48@0:8@"NSString"16Q24^@32^@40
@"MTLComputePipelineDescriptor"32@0:8@"NSString"16^@24
@"MTLRenderPipelineDescriptor"32@0:8@"NSString"16^@24
@"<MTLPipelineCache>"16@0:8
@32@0:8@16^v24
{?=QQ}24@0:8@16
{?=QQ}32@0:8Q16Q24
@32@0:8Q16Q24
@48@0:8^v16Q24Q32@?40
@40@0:8@16^{__IOSurface=}24Q32
@40@0:8@16Q24Q32
@"<MTLCommandQueue>"24@0:8Q16
{?=QQ}24@0:8@"MTLTextureDescriptor"16
@"<MTLHeap>"24@0:8@"MTLHeapDescriptor"16
@"<MTLBuffer>"32@0:8Q16Q24
@"<MTLBuffer>"40@0:8r^v16Q24Q32
@"<MTLBuffer>"48@0:8^v16Q24Q32@?<v@?^vQ>40
@"<MTLDepthStencilState>"24@0:8@"MTLDepthStencilDescriptor"16
@"<MTLTexture>"24@0:8@"MTLTextureDescriptor"16
@"<MTLTexture>"40@0:8@"MTLTextureDescriptor"16^{__IOSurface=}24Q32
@"<MTLSamplerState>"24@0:8@"MTLSamplerDescriptor"16
@"<MTLLibrary>"16@0:8
@"<MTLLibrary>"32@0:8@"NSBundle"16^@24
@"<MTLLibrary>"32@0:8@"NSString"16^@24
@"<MTLLibrary>"32@0:8@"NSURL"16^@24
@"<MTLLibrary>"32@0:8@"NSObject<OS_dispatch_data>"16^@24
@"<MTLLibrary>"40@0:8@"NSString"16@"MTLCompileOptions"24^@32
v40@0:8@"NSString"16@"MTLCompileOptions"24@?<v@?@"<MTLLibrary>"@"NSError">32
@"<MTLLibrary>"32@0:8@"MTLStitchedLibraryDescriptor"16^@24
v32@0:8@"MTLStitchedLibraryDescriptor"16@?<v@?@"<MTLLibrary>"@"NSError">24
@"<MTLRenderPipelineState>"32@0:8@"MTLRenderPipelineDescriptor"16^@24
@"<MTLRenderPipelineState>"48@0:8@"MTLRenderPipelineDescriptor"16Q24^@32^@40
v32@0:8@"MTLRenderPipelineDescriptor"16@?<v@?@"<MTLRenderPipelineState>"@"NSError">24
v40@0:8@"MTLRenderPipelineDescriptor"16Q24@?<v@?@"<MTLRenderPipelineState>"@"MTLRenderPipelineReflection"@"NSError">32
@"<MTLComputePipelineState>"32@0:8@"<MTLFunction>"16^@24
@"<MTLComputePipelineState>"48@0:8@"<MTLFunction>"16Q24^@32^@40
v32@0:8@"<MTLFunction>"16@?<v@?@"<MTLComputePipelineState>"@"NSError">24
v40@0:8@"<MTLFunction>"16Q24@?<v@?@"<MTLComputePipelineState>"@"MTLComputePipelineReflection"@"NSError">32
@"<MTLComputePipelineState>"48@0:8@"MTLComputePipelineDescriptor"16Q24^@32^@40
v40@0:8@"MTLComputePipelineDescriptor"16Q24@?<v@?@"<MTLComputePipelineState>"@"MTLComputePipelineReflection"@"NSError">32
@"<MTLFence>"16@0:8
@"<MTLRenderPipelineState>"48@0:8@"MTLTileRenderPipelineDescriptor"16Q24^@32^@40
v40@0:8@"MTLTileRenderPipelineDescriptor"16Q24@?<v@?@"<MTLRenderPipelineState>"@"MTLRenderPipelineReflection"@"NSError">32
@"<MTLArgumentEncoder>"24@0:8@"NSArray"16
@"<MTLIndirectCommandBuffer>"40@0:8@"MTLIndirectCommandBufferDescriptor"16Q24Q32
@"<MTLEvent>"16@0:8
@"<MTLSharedEvent>"16@0:8
@"<MTLSharedEvent>"24@0:8@"MTLSharedEventHandle"16
@"<MTLCounterSampleBuffer>"32@0:8@"MTLCounterSampleBufferDescriptor"16^@24
@"<MTLDynamicLibrary>"32@0:8@"<MTLLibrary>"16^@24
@"<MTLDynamicLibrary>"32@0:8@"NSURL"16^@24
@"<MTLBinaryArchive>"32@0:8@"MTLBinaryArchiveDescriptor"16^@24
@24@0:8^{__IOSurface=}16
B44@0:8^@16Q24^Q32i40
v24@0:8^{MPSFunctionTable=}16
v40@0:8Q16^Q24Q32
B32@0:8{_NSRange=QQ}16
@48@0:8r^v16Q24Q32Q40
@56@0:8^v16Q24Q32Q40@?48
B40@0:8^{?=III}16Q24Q32
@48@0:8^v16Q24@32@?40
@28@0:8@16B24
@32@0:8r^@16Q24
v24@0:8@"<MTLDeviceSPI>"16
@"<MTLBuffer>"24@0:8^{__IOSurface=}16
B24@0:8@"NSString"16
@"<MTLCommandQueue>"24@0:8@"MTLCommandQueueDescriptor"16
@"_MTLIndirectArgumentBufferLayout"24@0:8@"MTLStructType"16
@"<MTLArgumentEncoder>"24@0:8@"_MTLIndirectArgumentBufferLayout"16
@"<MTLBuffer>"40@0:8@"MTLIndirectCommandBufferDescriptor"16Q24Q32
@"<MTLIndirectRenderCommandEncoder>"24@0:8@"<MTLBuffer>"16
@"<MTLIndirectComputeCommandEncoder>"24@0:8@"<MTLBuffer>"16
@"<MTLSharedEvent>"20@0:8I16
@"<MTLDynamicLibrary>"40@0:8@"<MTLLibrary>"16@"MTLComputePipelineDescriptor"24^@32
@"<MTLDynamicLibrary>"40@0:8@"NSURL"16Q24^@32
@"NSArray"32@0:8@"MTLComputePipelineDescriptor"16^@24
@"NSArray"40@0:8@"MTLComputePipelineDescriptor"16Q24^@32
@"NSArray"40@0:8@"MTLFunction"16@"NSArray"24^@32
@"NSArray"48@0:8@"MTLFunction"16@"NSArray"24Q32^@40
B36@0:8@"<MTLLibrary>"16B24^@28
@"<MTLBinaryArchive>"40@0:8Q16@"NSURL"24^@32
@"MTLTargetDeviceArchitecture"16@0:8
v24@0:8@"NSDictionary"16
v24@0:8@"NSObject<OS_dispatch_data>"16
@"<MTLBuffer>"40@0:8Q16Q24Q32
@"<MTLBuffer>"48@0:8r^v16Q24Q32Q40
@"<MTLBuffer>"56@0:8^v16Q24Q32Q40@?<v@?^vQ>48
@"<MTLBuffer>"24@0:8@"MTLBufferDescriptor"16
@"<MTLLateEvalEvent>"16@0:8
@"<MTLComputePipelineState>"32@0:8@"MTLComputePipelineDescriptor"16^@24
v32@0:8@"MTLComputePipelineDescriptor"16@?<v@?@"<MTLComputePipelineState>"@"NSError">24
@"<MTLRenderPipelineState>"32@0:8@"MTLTileRenderPipelineDescriptor"16^@24
v32@0:8@"MTLTileRenderPipelineDescriptor"16@?<v@?@"<MTLRenderPipelineState>"@"NSError">24
@"<MTLFunction>"32@0:8^v16Q24
@"<MTLFunction>"40@0:8^v16@"NSObject<OS_dispatch_data>"24Q32
@"<MTLIndirectArgumentEncoder>"24@0:8@"NSArray"16
@"<MTLComputePipelineState>"40@0:8@"NSArray"16r^{?=BQ^{?}}24^@32
@"<MTLLibrary>"40@0:8@"NSString"16@"NSArray"24^@32
@"<MTLLibrary>"40@0:8@"NSArray"16@"NSArray"24^@32
@"<MTLLibrary>"32@0:8@"MTLStitchedLibraryDescriptorSPI"16^@24
@"NSString"24@0:8@"NSArray"16
@"<MTLLibrary>"40@0:8@"NSArray"16r^{?=BQ^{?}}24^@32
@"<MTLPipelineLibrarySPI>"32@0:8@"NSString"16^@24
@"NSObject<OS_dispatch_data>"24@0:8@"MTLRenderPipelineDescriptor"16
@"NSObject<OS_dispatch_data>"24@0:8@"MTLComputePipelineDescriptor"16
@"MTLRenderPipelineDescriptor"32@0:8@"NSObject<OS_dispatch_data>"16@"<MTLDeserializationContext>"24
@"MTLComputePipelineDescriptor"32@0:8@"NSObject<OS_dispatch_data>"16@"<MTLDeserializationContext>"24
@"NSObject<OS_dispatch_data>"24@0:8@"MTLStructType"16
@"NSObject<OS_dispatch_data>"28@0:8@"MTLStructType"16I24
@"<MTLTexture>"48@0:8^v16Q24@"MTLTextureDescriptor"32@?<v@?^vQ>40
@"<MTLTextureLayout>"28@0:8@"MTLTextureDescriptor"16B24
@"<MTLIndirectArgumentEncoder>"24@0:8@"_MTLIndirectArgumentBufferLayout"16
@"<MTLResourceGroupSPI>"32@0:8r^@16Q24
v32@0:8@"NSObject<OS_dispatch_data>"16@"NSMutableDictionary"24
v32@0:8Q16Q24
@"<MTLRenderCommandEncoder>"16@0:8
@32@0:8^(?={?=b8b24IQQ}{?=b8b24IQQ})16Q24
@"_MTLCommandBuffer<MTLCommandBuffer>"
@"MTLRenderPassDescriptor"
{_opaque_pthread_mutex_t="__sig"q"__opaque"[56c]}
@"<MTLFence>"
@24@0:8q16
@"<MTLCaptureScope>"
@20@0:8i16
i16@0:8
{_MTLResourceListPoolPrivate="queue"{resourceListQueue="tqh_first"@"MTLResourceList""tqh_last"^@}"lock"{os_unfair_lock_s="_os_unfair_lock_opaque"I}"count"i}
r^{MTLSamplerDescriptorPrivate=(?={?=b2b2b2b3b3b3b1b1b3b1b1}I)(?=If)(?=If)(?=If)Q@Q}16@0:8
{MTLSamplerDescriptorPrivate=""(?=""{?="minFilter"b2"magFilter"b2"mipFilter"b2"sAddressMode"b3"tAddressMode"b3"rAddressMode"b3"normalizedCoords"b1"lodAverage"b1"compareFunction"b3"supportArgumentBuffers"b1"forceResourceIndex"b1}"miscHash"I)""(?="lodMinClampHash"I"lodMinClamp"f)""(?="lodMaxClampHash"I"lodMaxClamp"f)""(?="lodBiasHash"I"lodBias"f)"maxAnisotropy"Q"label"@"NSString""resourceIndex"Q}
{FileIdentifier="dev"i"ino"Q}
{unordered_map<MTLLoadedFile *, id, std::hash<MTLLoadedFile *>, std::equal_to<MTLLoadedFile *>, std::allocator<std::pair<MTLLoadedFile *const, id>>>="__table_"{__hash_table<std::__hash_value_type<MTLLoadedFile *, id>, std::__unordered_map_hasher<MTLLoadedFile *, std::__hash_value_type<MTLLoadedFile *, id>, std::hash<MTLLoadedFile *>, std::equal_to<MTLLoadedFile *>, true>, std::__unordered_map_equal<MTLLoadedFile *, std::__hash_value_type<MTLLoadedFile *, id>, std::equal_to<MTLLoadedFile *>, std::hash<MTLLoadedFile *>, true>, std::allocator<std::__hash_value_type<MTLLoadedFile *, id>>>="__bucket_list_"{unique_ptr<std::__hash_node_base<std::__hash_node<std::__hash_value_type<MTLLoadedFile *, id>, void *> *> *[], std::__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<MTLLoadedFile *, id>, void *> *> *>>>="__ptr_"{__compressed_pair<std::__hash_node_base<std::__hash_node<std::__hash_value_type<MTLLoadedFile *, id>, void *> *> **, std::__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<MTLLoadedFile *, id>, void *> *> *>>>="__value_"^^v"__value_"{__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<MTLLoadedFile *, id>, void *> *> *>>="__data_"{__compressed_pair<unsigned long, std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<MTLLoadedFile *, id>, void *> *> *>>="__value_"Q}}}}"__p1_"{__compressed_pair<std::__hash_node_base<std::__hash_node<std::__hash_value_type<MTLLoadedFile *, id>, void *> *>, std::allocator<std::__hash_node<std::__hash_value_type<MTLLoadedFile *, id>, void *>>>="__value_"{__hash_node_base<std::__hash_node<std::__hash_value_type<MTLLoadedFile *, id>, void *> *>="__next_"^v}}"__p2_"{__compressed_pair<unsigned long, std::__unordered_map_hasher<MTLLoadedFile *, std::__hash_value_type<MTLLoadedFile *, id>, std::hash<MTLLoadedFile *>, std::equal_to<MTLLoadedFile *>, true>>="__value_"Q}"__p3_"{__compressed_pair<float, std::__unordered_map_equal<MTLLoadedFile *, std::__hash_value_type<MTLLoadedFile *, id>, std::equal_to<MTLLoadedFile *>, std::hash<MTLLoadedFile *>, true>>="__value_"f}}}
r^{MTLHeapDescriptorPrivate=QQQqQQ}16@0:8
^{MTLHeapDescriptorPrivate=QQQqQQ}
@32@0:8q16Q24
C16@0:8
v20@0:8C16
{?=[32C]}16@0:8
v48@0:8{?=[32C]}16
@"MTLFunction"
@"<MTLPipelineCache>"
@"<MTLBinaryArchive>"
@41@0:8@16Q24Q32{MTLAttributeFlags=(?={?=b1b1b1b5}C)}40
@44@0:8@16Q24Q32B40
@40@0:8^@16I24I28@32
@48@0:8@16@24Q32Q40
@40@0:8@16@24Q32
@"<MTLBuffer>"
@40@0:8@16^v24Q32
@"<MTLFunction>"24@0:8@"NSString"16
@"<MTLFunction>"40@0:8@"NSString"16@"MTLFunctionConstantValues"24^@32
v40@0:8@"NSString"16@"MTLFunctionConstantValues"24@?<v@?@"<MTLFunction>"@"NSError">32
v32@0:8@"MTLFunctionDescriptor"16@?<v@?@"<MTLFunction>"@"NSError">24
@"<MTLFunction>"32@0:8@"MTLFunctionDescriptor"16^@24
v48@0:8@16@24@32@?40
@"<MTLFunction>"48@0:8@"NSString"16@"MTLFunctionConstantValues"24@"<MTLPipelineLibrary>"32^@40
v48@0:8@"NSString"16@"MTLFunctionConstantValues"24@"<MTLPipelineLibrary>"32@?<v@?@"<MTLFunction>"@"NSError">40
@"<MTLFunction>"40@0:8@"MTLFunctionDescriptor"16@"<MTLBinaryArchive>"24^@32
@"NSUUID"16@0:8
@56@0:8@16@24@32@40^@48
v56@0:8@16@24@32@40@?48
@32@0:8^{MTLLibraryContainer=^{MTLPipelineCollection}Ai{?=[32C]}^{MTLLibraryData}@@@@@}16@24
^{MTLLibraryData=^^?{?=[32C]}Ai@@}16@0:8
^{MTLLibraryContainer=^{MTLPipelineCollection}Ai{?=[32C]}^{MTLLibraryData}@@@@@}16@0:8
^{MTLLibraryData=^^?{?=[32C]}Ai@@}
^{MTLLibraryContainer=^{MTLPipelineCollection}Ai{?=[32C]}^{MTLLibraryData}@@@@@}
v32@0:8Q16@?24
@40@0:8Q16^@24@32
@28@0:8@16C24
@"MTLFunctionReflection"24@0:8Q16
@"MTLFunctionReflection"32@0:8Q16@"<MTLPipelineLibrary>"24
@"MTLFunctionReflection"32@0:8Q16@"NSArray"24
v32@0:8Q16@?<v@?@"MTLFunctionReflection">24
@"<MTLArgumentEncoder>"32@0:8Q16@"<MTLPipelineLibrary>"24
@"<MTLArgumentEncoder>"40@0:8Q16^@24@"<MTLPipelineLibrary>"32
@"<MTLArgumentEncoder>"40@0:8Q16^@24@"NSArray"32
@"<MTLFunction>"28@0:8@"NSData"16C24
@"MTLType"16@0:8
@48@0:8@16Q24^{MTLLibraryData=^^?{?=[32C]}Ai@@}32@40
@"MTLType"
@56@0:8@16Q24^{MTLLibraryData=^^?{?=[32C]}Ai@@}32^{MTLFunctionData=QQQQQSSSS{?=[32C]}C@Cb2b6@}40@48
r^{MTLFunctionData=QQQQQSSSS{?=[32C]}C@Cb2b6@}16@0:8
v24@0:8r^{?=[32C]}16
B56@0:8^{?=[32C]}16^@24@32@40@?48
v52@0:8@16@24@32B40@?44
{MTLFunctionData="bitCodeOffset"Q"bitCodeFileSize"Q"publicArgumentsOffset"Q"privateArgumentsOffset"Q"sourceArchiveOffset"Q"airMajorVersion"S"airMinorVersion"S"languageMajorVersion"S"languageMinorVersion"S"bitcodeHash"{?="key"[32C]}"bitcodeType"C"pluginData"@"NSData""renderTargetArrayIndexType"C"patchType"b2"controlPointCount"b6"functionInputs"@"NSObject<OS_dispatch_data>"}
r^v24@0:8^Q16
v32@0:8r^v16Q24
@56@0:8@16^{?=[32C]}24@32@40Q48
v44@0:8@16@24B32@?36
B32@0:8@16@?24
{?=[32C]}24@0:8^{MTLCompileLibraryRequestData=B@I@@}16
{?=[32C]}24@0:8@16
v64@0:8@16@24@32@40r^{?=[32C]}48r^{MultiLevelPipelineCache=B@@^{MTLCompilerCache}^{MTLCompilerCache}^{MTLCompilerCache}BB}56
v56@0:8@16@24@32r^{?=[32C]}40r^{MultiLevelPipelineCache=B@@^{MTLCompilerCache}^{MTLCompilerCache}^{MTLCompilerCache}BB}48
v56@0:8^v16^v24^v32^{MTLLibraryData=^^?{?=[32C]}Ai@@}40r^{MultiLevelPipelineCache=B@@^{MTLCompilerCache}^{MTLCompilerCache}^{MTLCompilerCache}BB}48
v48@0:8@16B24Q28B36@?40
v36@0:8@16B24@?28
v64@0:8{MTLCompileLibraryRequestData=B@I@@}16@?56
v48@0:8^{MTLCompilerFunctionRequest=^^?i@@@III@@Q@@@@iBI}16B24r^{?=[32C]}28B36@?40
v68@0:8@16@24@32Q40B48I52B56@?60
v76@0:8@16@24@32Q40B48I52@56B64@?68
v64@0:8@16@24@32Q40@48@?56
v68@0:8@16@24@32Q40@48B56@?60
v92@0:8@16@24@32@40@48@56Q64@72B80@?84
v84@0:8@16@24@32@40@48Q56@64B72@?76
B48@0:8@16@24Q32^@40
v56@0:8@16@24@32Q40@?48
v44@0:8@16Q24B32@?36
v52@0:8@16Q24B32@36@?44
v60@0:8@16Q24B32@36@44@?52
{vector<std::pair<CompilerOutputType, MTLBinaryKey *>, std::allocator<std::pair<CompilerOutputType, MTLBinaryKey *>>>=^v^v{__compressed_pair<std::pair<CompilerOutputType, MTLBinaryKey *> *, std::allocator<std::pair<CompilerOutputType, MTLBinaryKey *>>>=^v}}44@0:8@16r^{VariantKey=^v^vQQ@^vQ}24@32i40
^v48@0:8@16r^{VariantKey=^v^vQQ@^vQ}24r^v32@40
^v60@0:8@16@24@32r^{VariantKey=^v^vQQ@^vQ}40r^v48B56
@112@0:8^v16@24@32@40@48@56Q64^@72@80@88^@96@?104
@56@0:8@16Q24^@32^@40@?48
v52@0:8^v16@24@32@40i48
@64@0:8@16Q24^@32@40^@48@?56
^{VariantEntry=*QQQ@@Q@}84@0:8@16Q24@32B40@44@52^^{MTLProgramObject}60^@68@76
@96@0:8^{VariantEntry=*QQQ@@Q@}16@24Q32^v40@48@56@64^@72^@80@?88
@72@0:8@16Q24@32@40^@48^@56@?64
^{MTLCompilerConnectionManager=^^?}16@0:8
@"_MTLDevice"
^{MTLCompilerConnectionManager=^^?}
{shared_ptr<MTLCompilerCache>="__ptr_"^{MTLCompilerCache}"__cntrl_"^{__shared_weak_count}}
v96@0:8Q16Q24Q32@40Q48Q56Q64@72Q80Q88
v112@0:8Q16Q24Q32@40Q48@56Q64Q72Q80@88Q96Q104
v56@0:8Q16Q24Q32Q40Q48
v80@0:8Q16Q24Q32@40Q48Q56q64Q72
v24@0:8@"<MTLRenderPipelineState>"16
v96@0:8Q16Q24Q32@"<MTLBuffer>"40Q48Q56Q64@"<MTLBuffer>"72Q80Q88
v112@0:8Q16Q24Q32@"<MTLBuffer>"40Q48@"<MTLBuffer>"56Q64Q72Q80@"<MTLBuffer>"88Q96Q104
v80@0:8Q16Q24Q32@"<MTLBuffer>"40Q48Q56q64Q72
@"_MTLIndirectDrawArguments"16@0:8
@"_MTLIndirectDrawIndexedArguments"16@0:8
@"_MTLIndirectDrawPatchesArguments"16@0:8
@"_MTLIndirectDrawIndexedPatchesArguments"16@0:8
@"_MTLIndirectTessellationFactorArguments"16@0:8
v116@0:8Q16Q24Q32@40Q48@56Q64Q72Q80@88Q96Q104f112
v100@0:8Q16Q24Q32@40Q48Q56Q64@72Q80Q88f96
@"<MTLHeap>"16@0:8
v104@0:8^v16Q24Q32{?={?=QQQ}{?=QQQ}}40Q88Q96
v104@0:8{?={?=QQQ}{?=QQQ}}16Q64Q72r^v80Q88Q96
v88@0:8^v16Q24{?={?=QQQ}{?=QQQ}}32Q80
v88@0:8{?={?=QQQ}{?=QQQ}}16Q64r^v72Q80
@64@0:8Q16Q24{_NSRange=QQ}32{_NSRange=QQ}48
@68@0:8Q16Q24{_NSRange=QQ}32{_NSRange=QQ}48{?=CCCC}64
^{__IOSurface=}16@0:8
@"<MTLTexture>"24@0:8Q16
@"<MTLTexture>"64@0:8Q16Q24{_NSRange=QQ}32{_NSRange=QQ}48
@"<MTLTexture>"68@0:8Q16Q24{_NSRange=QQ}32{_NSRange=QQ}48{?=CCCC}64
@"<MTLResource>"16@0:8
@"<MTLTexture>"16@0:8
@"<MTLBuffer>"16@0:8
B32@0:8r^@16Q24
v20@0:8i16
i20@0:8I16
B24@0:8@"<MTLResource>"16
@72@0:8Q16Q24{_NSRange=QQ}32{_NSRange=QQ}48Q64
@76@0:8Q16Q24{_NSRange=QQ}32{_NSRange=QQ}48{?=CCCC}64Q68
@"<MTLTexture>"48@0:8Q16Q24Q32Q40
@"<MTLTexture>"32@0:8Q16Q24
@"<MTLTexture>"72@0:8Q16Q24{_NSRange=QQ}32{_NSRange=QQ}48Q64
@"<MTLTexture>"76@0:8Q16Q24{_NSRange=QQ}32{_NSRange=QQ}48{?=CCCC}64Q68
v48@0:8{?=dddd}16
{?=dddd}16@0:8
r^{MTLRenderPassAttachmentDescriptorPrivate=@QQQQQQ{?=dddd}dIQ@QQQQQQB}16@0:8
{MTLRenderPassAttachmentDescriptorPrivate="texture"@"<MTLTextureImplementation>""level"Q"slice"Q"depthPlane"Q"loadAction"Q"storeAction"Q"storeActionOptions"Q"clearColor"{?="red"d"green"d"blue"d"alpha"d}"clearDepth"d"clearStencil"I"stencilResolveFilter"Q"resolveTexture"@"<MTLTextureImplementation>""resolveLevel"Q"resolveSlice"Q"resolveDepthPlane"Q"resolveFilter"Q"width"Q"height"Q"yInvert"B}
v24@0:8d16
d16@0:8
[8@"MTLRenderPassColorAttachmentDescriptorInternal"]
@"MTLRenderPassDepthAttachmentDescriptorInternal"
@"MTLRenderPassStencilAttachmentDescriptorInternal"
r^{MTLRenderPassSampleBufferAttachmentDescriptorPrivate=@QQQQ}16@0:8
{MTLRenderPassSampleBufferAttachmentDescriptorPrivate="sampleBuffer"@"<MTLCounterSampleBuffer>""startOfVertexSampleIndex"Q"endOfVertexSampleIndex"Q"startOfFragmentSampleIndex"Q"endOfFragmentSampleIndex"Q}
[4@"MTLRenderPassSampleBufferAttachmentDescriptorInternal"]
v32@0:8r^{?=ff}16Q24
Q32@0:8^{?=ff}16Q24
v32@0:8{_NSRange=QQ}16
v40@0:8@16{_NSRange=QQ}24
@"<MTLTexture>"40@0:8@"MTLTextureDescriptor"16Q24Q32
v40@0:8@"NSString"16{_NSRange=QQ}24
B40@0:8@16^Q24^Q32
r^{MTLRenderPassDescriptorPrivate=@@QQQBBBQQQ(?=QQ)QQ[4{?=ff}]Q@B}16@0:8
{MTLRenderPassDescriptorPrivate="attachments"@"MTLRenderPassColorAttachmentDescriptorArrayInternal""visibilityResultBuffer"@"<MTLBuffer>""renderTargetWidth"Q"renderTargetHeight"Q"defaultColorSampleCount"Q"fineGrainedBackgroundVisibilityEnabled"B"ditherEnabled"B"openGLModeEnabled"B"renderTargetArrayLength"Q"tileWidth"Q"tileHeight"Q""(?="defaultSampleCount"Q"defaultRasterSampleCount"Q)"imageBlockSampleLength"Q"threadgroupMemoryLength"Q"customSamplePositions"[4{?="x"f"y"f}]"numCustomSamplePositions"Q"sampleBufferAttachments"@"MTLRenderPassSampleBufferAttachmentDescriptorArrayInternal""pointCoordYFlipEnabled"B}
v28@0:8I16I20I24
v32@0:8r^@16Q24
@56@0:8@16@24@32Q40{?=b1b1b1b1b60}48
@48@0:8@16@24Q32{?=b1b1b1b1b60}40
{?=b1b1b1b1b60}16@0:8
v32@0:8^Q16Q24
{?="kernelRegisterSpill"b1"threadgroupBarrier"b1"deviceMemoryAtomics"b1"threadgroupMemoryAtomics"b1"reserved"b60}
r^{MTLComputePipelineDescriptorPrivate=@@BS@@@@(?=@@)@BqBQ@b1b1b30@@@}16@0:8
r^v16@0:8
{MTLComputePipelineDescriptorPrivate="label"@"NSString""computeFunction"@"<MTLFunction>""threadGroupSizeIsMultipleOfThreadExecutionWidth"B"maxTotalThreadsPerThreadgroup"S"stageInputDescriptor"@"MTLStageInputOutputDescriptor""driverCompilerOptions"@"NSDictionary""buffers"@"MTLPipelineBufferDescriptorArrayInternal""binaryArchives"@"NSArray"""(?="preloadedLibraries"@"NSArray""insertLibraries"@"NSArray")"pipelineLibrary"@"<MTLPipelineLibrary>""supportIndirectCommandBuffers"B"textureWriteRoundingMode"q"forceResourceIndex"B"resourceIndex"Q"pluginData"@"NSDictionary""openGLMode"b1"openCLMode"b1"reserved"b30"functionPointers"@"NSArray""functionPointerGroups"@"NSDictionary""linkedFunctions"@"MTLLinkedFunctions"}
{FlatBufferBuilder="buf_"{vector_downward="allocator_"^{Allocator}"own_allocator_"B"initial_size_"Q"buffer_minalign_"Q"reserved_"Q"buf_"*"cur_"*"scratch_"*}"num_field_loc"I"max_voffset_"S"nested"B"finished"B"minalign_"Q"force_defaults_"B"dedup_vtables_"B"string_pool"^v}
Q40@0:8{?=QQQ}16
v64@0:8{?=QQQ}16{?=QQQ}40
v64@0:8{?={?=QQQ}{?=QQQ}}16
v24@0:8@"<MTLComputePipelineState>"16
{?={?=QQQ}{?=QQQ}}16@0:8
@"_MTLIndirectDispatchThreadgroupsArguments"16@0:8
@"_MTLIndirectDispatchThreadsArguments"16@0:8
@"_MTLImageBlockArguments"16@0:8
v32@0:8r*16Q24
v32@0:8r*16r*24
v24@0:8r*16
v32@0:8@16r*24
v36@0:8@16r*24B32
v32@0:8@"<MTLBuffer>"16r*24
v24@0:8@"<MTLBuffer>"16
v36@0:8@"<MTLTexture>"16r*24B32
v32@0:8@"<MTLTexture>"16r*24
v24@0:8@"<MTLTexture>"16
@32@0:8^@16Q24
@40@0:8^@16Q24@32
v32@0:8^@16Q24
@68@0:8Q16@24Q32Q40Q48B56B60B64
@64@0:8Q16@24Q32Q40Q48B56B60
@88@0:8@16Q24Q32Q40Q48Q56Q64Q72@80
@64@0:8Q16Q24Q32Q40Q48@56
@60@0:8@16Q24Q32Q40B48Q52
@68@0:8@16Q24Q32Q40B48Q52@60
@64@0:8@16Q24Q32Q40@48Q56
@84@0:8Q16Q24Q32Q40Q48Q56Q64Q72B80
@92@0:8@16Q24Q32B40Q44Q52Q60Q68Q76Q84
@32@0:8@?16@24
@?16@0:8
@"MTLMessageFilter"
r^{MTLRenderPipelineAttachmentDescriptorPrivate=(?={?=b1b3b3b5b5b5b5b4b1b4b28}{?=Q})}16@0:8
{MTLRenderPipelineAttachmentDescriptorPrivate=""(?=""{?="blendingEnabled"b1"rgbBlendOperation"b3"alphaBlendOperation"b3"sourceRGBBlendFactor"b5"sourceAlphaBlendFactor"b5"destinationRGBBlendFactor"b5"destinationAlphaBlendFactor"b5"writeMask"b4"logicOpEnabled"b1"logicOp"b4"pixelFormat"b28}""{?="bits"Q})}
@64@0:8@16@24@32@40Q48{?=b1b1b1b1b1b1b1b1b1b55}56
@56@0:8@16Q24@32Q40{?=b1b1b1b1b1b1b1b1b1b55}48
{?=b1b1b1b1b1b1b1b1b1b55}16@0:8
{?="fragmentUsesDiscard"b1"fragmentWritesSampleMask"b1"fragmentWritesDepth"b1"vertexRegisterSpill"b1"fragmentRegisterSpill"b1"fragmentReadsFramebufferValues"b1"fragmentPunchThrough"b1"vertexWritesPointSize"b1"private2"b1"reserved"b55}
@"MTLArgument"
[8@"MTLRenderPipelineColorAttachmentDescriptorInternal"]
r^{MTLRenderPipelineDescriptorPrivate=@[8Q]QQQQBQQQQQBq(?=QQ)Q(?=If)QQ(?=[2I]{?=b1b1b1b2b1b1b1b1b1b1b1b1b1b1b8b3b1b4b1b1b1b2})IIQ@@@@@@@@^v^v@@@@@@}16@0:8
{MTLRenderPipelineDescriptorPrivate="attachments"@"MTLRenderPipelineColorAttachmentDescriptorArrayInternal""rtBlendDescHash"[8Q]"depthAttachmentPixelFormat"Q"stencilAttachmentPixelFormat"Q"tessellationPartitionMode"Q"maxTessellationFactor"Q"tessellationFactorScaleEnabled"B"tessellationFactorFormat"Q"tessellationControlPointIndexType"Q"tessellationFactorStepFunction"Q"tessellationOutputWindingOrder"Q"postVertexDumpBufferIndex"Q"supportIndirectCommandBuffers"B"textureWriteRoundingMode"q""(?="sampleCount"Q"rasterSampleCount"Q)"sampleMask"Q""(?="sampleCoverageHash"I"sampleCoverage"f)"paddingToRemove"Q"colorSampleCount"Q""(?="miscHash"[2I]""{?="alphaToCoverageEnabled"b1"alphaToOneEnabled"b1"rasterizationEnabled"b1"inputPrimitiveTopology"b2"private0"b1"depthStencilWriteDisabled"b1"openGLMode"b1"sampleCoverageInvert"b1"private4"b1"private5"b1"twoSideEnabled"b1"pointSizeOutputVS"b1"pointCoordLowerLeft"b1"pointSmoothEnabled"b1"clipDistanceEnableMask"b8"alphaTestFunc"b3"alphaTestEnabled"b1"logicOp"b4"logicOpEnabled"b1"forceResourceIndex"b1"forceSoftwareVertexFetch"b1"private6"b2})"vertexDepthCompareClampMask"I"fragmentDepthCompareClampMask"I"resourceIndex"Q"label"@"NSString""vertexFunction"@"<MTLFunction>""fragmentFunction"@"<MTLFunction>""vertexDescriptor"@"MTLVertexDescriptorInternal""vertexBuffers"@"MTLPipelineBufferDescriptorArrayInternal""fragmentBuffers"@"MTLPipelineBufferDescriptorArrayInternal""driverCompilerOptions"@"NSDictionary""pipelineLibrary"@"<MTLPipelineLibrary>""pad0"^v"pad1"^v"pluginData"@"NSDictionary""binaryArchives"@"NSArray""vertexLinkedFunctions"@"MTLLinkedFunctions""fragmentLinkedFunctions"@"MTLLinkedFunctions""vertexPreloadedLibraries"@"NSArray""fragmentPreloadedLibraries"@"NSArray"}
{MTLLinkedFunctionsPrivate="functions"@"NSArray""privateFunctions"@"NSArray""groups"@"NSDictionary"}
{?="chunkEntryCapacity"i"currentChunk"{MTLResourceListChunk="currentEntry"i"entries"^^v"nextChunk"^{MTLResourceListChunk}}"pool"@"MTLResourceListPool""entry"{?="tqe_next"@"MTLResourceList""tqe_prev"^@}"time_added"Q}
v24@0:8@"NSCoder"16
@24@0:8@"NSCoder"16
r^{MTLBlitPassSampleBufferAttachmentDescriptorPrivate=@QQ}16@0:8
{MTLBlitPassSampleBufferAttachmentDescriptorPrivate="sampleBuffer"@"<MTLCounterSampleBuffer>""startOfEncoderSampleIndex"Q"endOfEncoderSampleIndex"Q}
[4@"MTLBlitPassSampleBufferAttachmentDescriptorInternal"]
r^{MTLBlitPassDescriptorPrivate=@}16@0:8
{MTLBlitPassDescriptorPrivate="sampleBufferAttachments"@"MTLBlitPassSampleBufferAttachmentDescriptorArrayInternal"}
^{MTLSharedEventHandlePrivate=I@Q}
{MTLFunctionDescriptorPrivate="name"@"NSString""specializedName"@"NSString""options"Q"constantValues"@"MTLFunctionConstantValues""binaryArchives"@"NSArray""applyFunctionConstants"B}
r^{MTLStencilDescriptorPrivate=QQQQII}16@0:8
{MTLStencilDescriptorPrivate="stencilCompareFunction"Q"stencilFailureOperation"Q"depthFailureOperation"Q"depthStencilPassOperation"Q"readMask"I"writeMask"I}
r^{MTLDepthStencilDescriptorPrivate=@@QB@}16@0:8
{MTLDepthStencilDescriptorPrivate="frontFaceStencil"@"MTLStencilDescriptorInternal""backFaceStencil"@"MTLStencilDescriptorInternal""depthCompareFunction"Q"depthWriteEnabled"B"label"@"NSString"}
v24@0:8@?16
@"MTLFunctionStitchingFunctionNode"
@44@0:8@16@24@32B40
@32@0:8@16B24B28
v48@0:8@16Q24Q32Q40
v56@0:8@16Q24r^Q32r^Q40Q48
v32@0:8@16d24
v32@0:8Q16@24
v40@0:8Q16Q24@32
v44@0:8i16Q20r^@28Q36
^v24@0:8^Q16
@"<MTLCommandEncoder>"
@"_MTLCommandQueue<MTLCommandQueue>"
^{MTLDispatch=^{MTLDispatch}@?}
^{MTLSyncDispatch=^{MTLSyncDispatch}@?}
{_opaque_pthread_cond_t="__sig"q"__opaque"[40c]}
@"NSError"
[31@"MTLVertexBufferLayoutDescriptorInternal"]
[31@"MTLVertexAttributeDescriptorInternal"]
@"MTLVertexBufferLayoutDescriptorArrayInternal"
@"MTLVertexAttributeDescriptorArrayInternal"
v24@0:8@?<v@?@"<MTLCommandBuffer>">16
v24@0:8@"<MTLDrawable>"16
v32@0:8@"<MTLDrawable>"16d24
@"<MTLBlitCommandEncoder>"16@0:8
@"<MTLRenderCommandEncoder>"24@0:8@"MTLRenderPassDescriptor"16
@"<MTLComputeCommandEncoder>"24@0:8@"MTLComputePassDescriptor"16
@"<MTLBlitCommandEncoder>"24@0:8@"MTLBlitPassDescriptor"16
@"<MTLComputeCommandEncoder>"16@0:8
@"<MTLComputeCommandEncoder>"24@0:8Q16
v32@0:8@"<MTLEvent>"16Q24
@"<MTLParallelRenderCommandEncoder>"24@0:8@"MTLRenderPassDescriptor"16
@"<MTLLogContainer>"16@0:8
@"NSError"16@0:8
v48@0:8@16Q24Q32@40
i24@0:8@16
i32@0:8@16Q24
@"NSObject<OS_dispatch_group>"
@"NSObject<OS_dispatch_source>"
@"NSObject<OS_dispatch_semaphore>"
q24@0:8q16
[128{?="name"@"NSString""requirement"q"supported"B}]
@"<MTLDeviceSPI>"
