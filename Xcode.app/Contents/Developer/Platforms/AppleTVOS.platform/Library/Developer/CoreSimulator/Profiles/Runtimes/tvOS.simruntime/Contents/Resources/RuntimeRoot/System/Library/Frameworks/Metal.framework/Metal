hash
TQ,R
superclass
T#,R
description
T@"NSString",R,C
debugDescription
label
T@"NSString",C
device
T@"<MTLDevice>",R,N
commandQueue
T@"<MTLCommandQueue>",R,N
T@"NSString",C,D
T@"<MTLDevice>",R,N,V_device
T@"<MTLCommandQueue>",R,N,V_commandQueue
stride
TQ,D,N
stepFunction
stepRate
-[MTLBufferLayoutDescriptorInternal setStride:]
stride(%lu) must be 4 byte aligned.
-[MTLBufferLayoutDescriptorArrayInternal objectAtIndexedSubscript:]
bufferIndex(%lu) must be < %lu.
-[MTLBufferLayoutDescriptorArrayInternal setObject:atIndexedSubscript:]
bufferDesc is not a MTLVertexBufferLayoutDescriptor.
format
offset
bufferIndex
-[MTLAttributeDescriptorInternal setBufferIndex:]
buffer index (%lu) must be < %lu.
-[MTLAttributeDescriptorInternal setOffset:]
attribute offset (%lu) must be %lu byte aligned.
-[MTLAttributeDescriptorArrayInternal objectAtIndexedSubscript:]
vertex attribute index (%lu) must be < %lu.
-[MTLAttributeDescriptorArrayInternal setObject:atIndexedSubscript:]
attributeDesc is not a MTLVertexAttributeDescriptor.
layouts
T@"MTLBufferLayoutDescriptorArray",R,D
attributes
T@"MTLAttributeDescriptorArray",R,D
indexType
indexBufferIndex
%@%@
-[MTLStageInputOutputDescriptorInternal newSerializedDescriptor]
None of the attributes set bufferIndex to %d, but %s set buffer layout[%d].stride(%lu).
MTLStageInputOutputDescriptor
Vertex attribute %@(%d) is missing from the vertex descriptor
Vertex attribute %@(%d) of type %s cannot be read using %@
MTLIndexTypeUInt16
MTLIndexTypeUInt32
Unknown
MTLStageInputOutputDescriptorDescription
bufferIndex < MTL_MAX_VERTEX_BUFFERS
Buffer %lu:
stepFunction =
stepRate =
stride =
Attribute %u:
offset =
format =
IndexType: %@
IndexBufferIndex: %lu
validateStepFunction
stepFunction is not a valid MTLStepFunction.
validateVertexAttribute
Attribute at index %d references a buffer at index %lu that has no stride.
Attribute at index %d: the attribute offset (%lu) + attribute size (%lu) must be <= the stride of the buffer (%lu) at buffer index %lu.
validateFunctionStepRate
stepRate(%lu) must be zero if stepFunction is MTLStepFunctionConstant.
stepRate(%lu) cannot be zero if stepFunction is %@.
invalid stepFunction value
CompilerError
MTLStepFunctionConstant
MTLStepFunctionPerVertex
MTLStepFunctionPerInstance
MTLStepFunctionPerPatch
MTLStepFunctionPerPatchControlPoint
MTLStepFunctionThreadPositionInGridX
MTLStepFunctionThreadPositionInGridY
MTLStepFunctionThreadPositionInGridXIndexed
MTLStepFunctionThreadPositionInGridYIndexed
MTLFunction
MTLComputePipelineDescriptor
MTLRenderPipelineDescriptor
type
MTLLibrary
name
fileName
isFromSource
library
specialized
allocator<T>::allocate(size_t n) 'n' exceeds maximum supported size
baseFunction
constants
computeFunction
threadGroupSizeIsMultipleOfThreadExecutionWidth
stageInputDescriptor
required featureSets
excluded featureSets
buffers
supportIndirectCommandBuffers
maxTotalThreadsPerThreadgroup
vertexFunction
fragmentFunction
vertexDescriptor
sampleCount
alphaToCoverageEnabled
alphaToOneEnabled
rasterizationEnabled
colorAttachments
depthAttachmentPixelFormat
stencilAttachmentPixelFormat
inputPrimitiveTopology
tessellationPartitionMode
maxTessellationFactor
tessellationFactorScaleEnabled
tessellationFactorFormat
tessellationControlPointIndexType
tessellationFactorStepFunction
tessellationOutputWindingOrder
vertexBuffers
fragmentBuffers
sampleCoverage
sampleMask
vertexEnabled
index
pixelFormat
blendingEnabled
sourceRGBBlendFactor
destinationRGBBlendFactor
rgbBlendOperation
sourceAlphaBlendFactor
destinationAlphaBlendFactor
alphaBlendOperation
writeMask
dataType
value
mutability
FS_CACHE_REUSE_ON_REBOOT
/com.apple.metal
MTL_SHADER_CACHE_SIZE
FS_CACHE_SIZE
%s/%s
%s/%s%u
pipelineCache Queue
%s.tmp
Failed to open: %s
Failed to write to: %s
bufferLayoutMatchesFrontEndLayout
TB,R,D
encodedLength
TQ,R,D
alignment
hashValue
TI,R
hashOffset
hashMask
hashSignature
T@"<MTLDeviceSPI>",R,N
-[_MTLIndirectArgumentEncoder setBuffer:offset:atIndex:]
Unreachable code
-[_MTLIndirectArgumentEncoder setBuffers:offsets:withRange:]
-[_MTLIndirectArgumentEncoder setTexture:atIndex:]
-[_MTLIndirectArgumentEncoder setTextures:withRange:]
-[_MTLIndirectArgumentEncoder setSamplerState:atIndex:]
-[_MTLIndirectArgumentEncoder setSamplerStates:withRange:]
-[_MTLIndirectArgumentEncoder setRenderPipelineState:atIndex:]
-[_MTLIndirectArgumentEncoder setRenderPipelineStates:withRange:]
-[_MTLIndirectArgumentEncoder setComputePipelineState:atIndex:]
-[_MTLIndirectArgumentEncoder setComputePipelineStates:withRange:]
-[_MTLIndirectArgumentEncoder constantDataAtIndex:]
T@"<MTLDevice>",R
layout
T@"_MTLIndirectArgumentBufferLayout",R,N,V_layout
assignArgumentIndices
Unexpected data type in indirect argument buffer
countArgument
-[MTLEmulationIndirectArgumentBufferLayout uniqueIdentifierForRenderPipelineAtIndex:inIndirectArgumentBuffer:atOffset:]
Setting a pipeline is not supported on this hardware
-[MTLEmulationIndirectArgumentBufferLayout uniqueIdentifierForComputePipelineAtIndex:inIndirectArgumentBuffer:atOffset:]
-[MTLEmulationIndirectArgumentBufferLayout offsetForBuffer:]
Invalid ID: %lu
-[MTLEmulationIndirectArgumentBufferLayout offsetForTexture:]
-[MTLEmulationIndirectArgumentBufferLayout offsetForSampler:]
-[MTLEmulationIndirectArgumentBufferLayout offsetForConstant:]
TQ,R,N,V_stride
-[MTLEmulationIndirectArgumentEncoder setRenderPipelineState:atIndex:]
Unsupported feature
-[MTLEmulationIndirectArgumentEncoder setRenderPipelineStates:withRange:]
-[MTLEmulationIndirectArgumentEncoder setComputePipelineState:atIndex:]
-[MTLEmulationIndirectArgumentEncoder setComputePipelineStates:withRange:]
-[MTLEmulationIndirectArgumentEncoder newArgumentEncoderForBufferAtIndex:]
Argument Buffers Tier 1 does not support multiple indirection
T@"_MTLIndirectArgumentBufferLayout",R,N
primitiveType
TQ,N,V_primitiveType
vertexStart
TQ,N,V_vertexStart
vertexCount
TQ,N,V_vertexCount
instanceCount
TQ,N,V_instanceCount
baseInstance
TQ,N,V_baseInstance
indexCount
TQ,N,V_indexCount
TQ,N,V_indexType
indexBufferVirtualAddress
T^v,N,V_indexBufferVirtualAddress
indexBufferOffset
TQ,N,V_indexBufferOffset
baseVertex
TQ,N,V_baseVertex
numberOfPatchControlPoints
TQ,N,V_numberOfPatchControlPoints
patchStart
TQ,N,V_patchStart
patchCount
TQ,N,V_patchCount
patchIndexBufferVirtualAddress
T^v,N,V_patchIndexBufferVirtualAddress
patchIndexBufferOffset
TQ,N,V_patchIndexBufferOffset
controlPointIndexBufferVirtualAddress
T^v,N,V_controlPointIndexBufferVirtualAddress
virtualAddress
T^v,N,V_virtualAddress
instanceStride
TQ,N,V_instanceStride
scale
Tf,N,V_scale
threadgroupsPerGrid
T{?=QQQ},N,V_threadgroupsPerGrid
threadsPerThreadgroup
T{?=QQQ},N,V_threadsPerThreadgroup
threadsPerGrid
T{?=QQQ},N,V_threadsPerGrid
MTLPixelFormatA8Unorm
MTLPixelFormatR8Unorm
MTLPixelFormatR8Unorm_sRGB
MTLPixelFormatR8Snorm
MTLPixelFormatR8Uint
MTLPixelFormatR8Sint
MTLPixelFormatR16Unorm
MTLPixelFormatR16Snorm
MTLPixelFormatR16Uint
MTLPixelFormatR16Sint
MTLPixelFormatR16Float
MTLPixelFormatRG8Unorm
MTLPixelFormatRG8Unorm_sRGB
MTLPixelFormatRG8Snorm
MTLPixelFormatRG8Uint
MTLPixelFormatRG8Sint
MTLPixelFormatB5G6R5Unorm
MTLPixelFormatA1BGR5Unorm
MTLPixelFormatABGR4Unorm
MTLPixelFormatBGR5A1Unorm
MTLPixelFormatR32Uint
MTLPixelFormatR32Sint
MTLPixelFormatR32Float
MTLPixelFormatRG16Unorm
MTLPixelFormatRG16Snorm
MTLPixelFormatRG16Uint
MTLPixelFormatRG16Sint
MTLPixelFormatRG16Float
MTLPixelFormatRGBA8Unorm
MTLPixelFormatRGBA8Unorm_sRGB
MTLPixelFormatRGBA8Snorm
MTLPixelFormatRGBA8Uint
MTLPixelFormatRGBA8Sint
MTLPixelFormatBGRA8Unorm
MTLPixelFormatBGRA8Unorm_sRGB
MTLPixelFormatRGB10A2Unorm
MTLPixelFormatBGR10A2Unorm
MTLPixelFormatRGB10A2Uint
MTLPixelFormatRG11B10Float
MTLPixelFormatRGB9E5Float
MTLPixelFormatRG32Uint
MTLPixelFormatRG32Sint
MTLPixelFormatRG32Float
MTLPixelFormatRGBA16Unorm
MTLPixelFormatRGBA16Snorm
MTLPixelFormatRGBA16Uint
MTLPixelFormatRGBA16Sint
MTLPixelFormatRGBA16Float
MTLPixelFormatRGBA16Float_XR
MTLPixelFormatRGBA32Uint
MTLPixelFormatRGBA32Sint
MTLPixelFormatRGBA32Float
MTLPixelFormatBGRA4Unorm
MTLPixelFormatRGBX8Unorm
MTLPixelFormatRGBX8Unorm_sRGB
MTLPixelFormatRGBX8Snorm
MTLPixelFormatRGBX8Uint
MTLPixelFormatRGBX8Sint
MTLPixelFormatRGBX16Uint
MTLPixelFormatRGBX16Sint
MTLPixelFormatRGBX16Float
MTLPixelFormatRGBX32Uint
MTLPixelFormatRGBX32Sint
MTLPixelFormatRGBX32Float
MTLPixelFormatPVRTC_RGB_2BPP
MTLPixelFormatPVRTC_RGB_2BPP_sRGB
MTLPixelFormatPVRTC_RGB_4BPP
MTLPixelFormatPVRTC_RGB_4BPP_sRGB
MTLPixelFormatPVRTC_RGBA_2BPP
MTLPixelFormatPVRTC_RGBA_2BPP_sRGB
MTLPixelFormatPVRTC_RGBA_4BPP
MTLPixelFormatPVRTC_RGBA_4BPP_sRGB
MTLPixelFormatEAC_R11Unorm
MTLPixelFormatEAC_R11Snorm
MTLPixelFormatEAC_RG11Unorm
MTLPixelFormatEAC_RG11Snorm
MTLPixelFormatEAC_RGBA8
MTLPixelFormatEAC_RGBA8_sRGB
MTLPixelFormatETC2_RGB8
MTLPixelFormatETC2_RGB8_sRGB
MTLPixelFormatETC2_RGB8A1
MTLPixelFormatETC2_RGB8A1_sRGB
MTLPixelFormatASTC_4x2_sRGB
MTLPixelFormatASTC_4x4_sRGB
MTLPixelFormatASTC_5x4_sRGB
MTLPixelFormatASTC_5x5_sRGB
MTLPixelFormatASTC_6x5_sRGB
MTLPixelFormatASTC_6x6_sRGB
MTLPixelFormatASTC_8x4_sRGB
MTLPixelFormatASTC_8x5_sRGB
MTLPixelFormatASTC_8x6_sRGB
MTLPixelFormatASTC_8x8_sRGB
MTLPixelFormatASTC_10x5_sRGB
MTLPixelFormatASTC_10x6_sRGB
MTLPixelFormatASTC_10x8_sRGB
MTLPixelFormatASTC_10x10_sRGB
MTLPixelFormatASTC_12x10_sRGB
MTLPixelFormatASTC_12x12_sRGB
MTLPixelFormatASTC_4x2_LDR
MTLPixelFormatASTC_4x4_LDR
MTLPixelFormatASTC_5x4_LDR
MTLPixelFormatASTC_5x5_LDR
MTLPixelFormatASTC_6x5_LDR
MTLPixelFormatASTC_6x6_LDR
MTLPixelFormatASTC_8x4_LDR
MTLPixelFormatASTC_8x5_LDR
MTLPixelFormatASTC_8x6_LDR
MTLPixelFormatASTC_8x8_LDR
MTLPixelFormatASTC_10x5_LDR
MTLPixelFormatASTC_10x6_LDR
MTLPixelFormatASTC_10x8_LDR
MTLPixelFormatASTC_10x10_LDR
MTLPixelFormatASTC_12x10_LDR
MTLPixelFormatASTC_12x12_LDR
MTLPixelFormatASTC_4x2_HDR
MTLPixelFormatASTC_4x4_HDR
MTLPixelFormatASTC_5x4_HDR
MTLPixelFormatASTC_5x5_HDR
MTLPixelFormatASTC_6x5_HDR
MTLPixelFormatASTC_6x6_HDR
MTLPixelFormatASTC_8x4_HDR
MTLPixelFormatASTC_8x5_HDR
MTLPixelFormatASTC_8x6_HDR
MTLPixelFormatASTC_8x8_HDR
MTLPixelFormatASTC_10x5_HDR
MTLPixelFormatASTC_10x6_HDR
MTLPixelFormatASTC_10x8_HDR
MTLPixelFormatASTC_10x10_HDR
MTLPixelFormatASTC_12x10_HDR
MTLPixelFormatASTC_12x12_HDR
MTLPixelFormatGBGR422
MTLPixelFormatBGRG422
MTLPixelFormatDepth16Unorm
MTLPixelFormatDepth32Float
MTLPixelFormatStencil8
MTLPixelFormatDepth32Float_Stencil8
MTLPixelFormatX32_Stencil8
MTLPixelFormatYCBCR8_420_2P
MTLPixelFormatYCBCR8_422_1P
MTLPixelFormatYCBCR8_422_2P
MTLPixelFormatYCBCR8_444_2P
MTLPixelFormatYCBCR10_444_1P
MTLPixelFormatYCBCR10_420_2P
MTLPixelFormatYCBCR10_422_2P
MTLPixelFormatYCBCR10_444_2P
MTLPixelFormatYCBCR10_420_2P_PACKED
MTLPixelFormatYCBCR10_422_2P_PACKED
MTLPixelFormatYCBCR10_444_2P_PACKED
MTLPixelFormatYCBCR8_420_2P_sRGB
MTLPixelFormatYCBCR8_422_1P_sRGB
MTLPixelFormatYCBCR8_422_2P_sRGB
MTLPixelFormatYCBCR8_444_2P_sRGB
MTLPixelFormatYCBCR10_444_1P_sRGB
MTLPixelFormatYCBCR10_420_2P_sRGB
MTLPixelFormatYCBCR10_422_2P_sRGB
MTLPixelFormatYCBCR10_444_2P_sRGB
MTLPixelFormatYCBCR10_420_2P_PACKED_sRGB
MTLPixelFormatYCBCR10_422_2P_PACKED_sRGB
MTLPixelFormatYCBCR10_444_2P_PACKED_sRGB
MTLPixelFormatRGB8_420_2P
MTLPixelFormatRGB8_422_2P
MTLPixelFormatRGB8_444_2P
MTLPixelFormatRGB10_420_2P
MTLPixelFormatRGB10_422_2P
MTLPixelFormatRGB10_444_2P
MTLPixelFormatRGB10_420_2P_PACKED
MTLPixelFormatRGB10_422_2P_PACKED
MTLPixelFormatRGB10_444_2P_PACKED
MTLPixelFormatYCBCR8_422_1P_REV
MTLPixelFormatRGB10A8_2P_XR10
MTLPixelFormatRGB10A8_2P_XR10_sRGB
MTLPixelFormatBGRA10_XR
MTLPixelFormatBGRA10_XR_sRGB
MTLPixelFormatBGR10_XR
MTLPixelFormatBGR10_XR_sRGB
MTLPixelFormatR10Unorm_X6
MTLPixelFormatR10Unorm_X6_sRGB
MTLPixelFormatRG10Unorm_X12
MTLPixelFormatRG10Unorm_X12_sRGB
MTLPixelFormatR10Unorm_X6_PQ
MTLPixelFormatR12Unorm_X4
MTLPixelFormatR12Unorm_X4_PQ
MTLPixelFormatRG12Unorm_X8
MTLPixelFormatR10Unorm_PACKED
MTLPixelFormatRG10Unorm_PACKED
MTLPixelFormatInvalid
Unrecognized Metal Feature Set for this platform
float
half
uint
short
ushort
MTLDebugValidateMTLPixelFormat
pixelFormat (%lu) is not a valid MTLPixelFormat.
name: %@; type: %@; value: %@
Name =
<none>
Type =
Value =
T@"NSString",R,V_name
TQ,R,V_dataType
data
T^v,R,V_data
index: %@; type: %@; value: %@
Index =
TQ,R,V_index
Constant %@ (%lu) is of type %@ but value found has type %@
Constant %@ (%lu) value is required by function %@
-[MTLFunctionConstantValuesInternal setConstantValue:type:atIndex:]
Constant index (%lu) must be smaller than %u
-[MTLFunctionConstantValuesInternal setConstantValues:type:withRange:]
Constant index (%lu) must be smaller thank %u
named constants
index constants
-[MTLBufferArgument bufferIndirectArgumentType]
Not supported at this point
Alignment =
DataSize =
DataType =
TextureType =
TextureDataType =
IsDepthTexture =
%s.%u
stageInBuffer
vertexBuffer
MTLMutabilityDefault
MTLMutabilityMutable
MTLMutabilityImmutable
mutability =
Mutability
-[MTLPipelineBufferDescriptorArrayInternal objectAtIndexedSubscript:]
bufferIndex(%lu) must be < %lu
-[MTLPipelineBufferDescriptorArrayInternal setObject:atIndexedSubscript:]
buffer is not a MTLPipelineBufferDescriptor.
filename =
function =
line =
column =
inlinedAt
scope
T@"MTLDebugSubProgram",R,N
line
TI,R,N
column
T@"MTLDebugLocation",R,N
filename
T@"NSString",R,N
hasBacktrackingFailures
TB,R,N
validateMTLMutability
%lu is not a valid MTLMutability.
com.apple.metal.gl
arrayLength
access
textureType
constantBlockAlignment
Device serial queue
Pipeline serialization queue
Device concurrent queue
name =
MTL_DUMP_PIPELINES_TO_JSON_FILE
MTL_DUMP_LIBRARIES_TO_DIRECTORY
-[_MTLDevice newLibraryWithURL:error:]
url must not be nil.
Invalid file url
Apple
default
metallib
no default library was found
v24@?0@"<MTLLibrary>"8@"NSError"16
-[_MTLDevice startCollectingPipelineDescriptorsUsingPrefixForNames:]
name prefix is null
-[_MTLDevice endCollectingPipelineDescriptors]
startCollectingPipelineDescriptors was not called
v24@?0@"<MTLComputePipelineState>"8@"NSError"16
v32@?0@"<MTLComputePipelineState>"8@"MTLComputePipelineReflection"16@"NSError"24
ciKernelMain
-[_MTLDevice initLimits]
_limits.maxColorAttachments > 0
_limits.maxIndirectBuffers > 0
_limits.maxIndirectTextures > 0
_limits.maxIndirectSamplers > 0
_limits.maxIndirectSamplersPerDevice > 0
v32@?0@"<MTLRenderPipelineState>"8@"MTLRenderPipelineReflection"16@"NSError"24
-[_MTLDevice minimumLinearTextureAlignmentForPixelFormat:]
%s is not supported on this device.
Linear textures do not support compressed pixel formats
Linear textures do not support depth/stencil pixel formats
-[_MTLDevice minLinearTextureAlignmentForPixelFormat:]
-[_MTLDevice getDefaultSamplePositions:count:]
count (%lu) is not supported on this device.
Null provided for positions array.
-[_MTLDevice newArgumentEncoderWithArguments:structType:]
count must be greater than zero
dataType (%@) is not a valid data type
Constant block alignment can only be set the first constant in a constant block
Invalid argument type at index %lu
-[_MTLDevice setResourceIndirectionEnabled:]
Resource indirection is not supported on this device
-[_MTLDevice newBufferWithLength:options:atResourceIndex:]
Buffer created with resource index _MTLInvalidResourceIndex
-[_MTLDevice newBufferWithBytes:length:options:atResourceIndex:]
-[_MTLDevice newBufferWithBytesNoCopy:length:options:atResourceIndex:deallocator:]
-[_MTLDevice reserveResourceIndicesForResourceType:indices:indexCount:]
Reserving resource indices when resource indirection is disabled
-[_MTLDevice addBufferToGlobalResourceTable:]
Invalid utility buffer: _utilityBuffers(%@), _currentUtilityBufferIndex(%lu), _utilityBuffers.count(%lu), _utilityBuffers[%lu](%@)
-[_MTLDevice addTextureToGlobalResourceTable:]
-[_MTLDevice addSamplerStateToGlobalResourceTable:]
-[_MTLDevice addComputePipelineStateToGlobalResourceTable:]
-[_MTLDevice addRenderPipelineStateToGlobalResourceTable:]
-[_MTLDevice addIndirectCommandBufferToGlobalResourceTable:]
-[_MTLDevice removeResourceFromGlobalResourceTable:resourceType:]
supportsQuadReduction
supportsBufferlessClientStorageTexture
supportsArgumentBuffersTier2
supportsReadWriteTextureArgumentsTier2
supportsProgrammableSamplePositions
supportsBCTextureCompression
supports3DBCTextures
supportsLargeFramebufferConfigs
supportsCustomBorderColor
supportsSamplerAddressModeClampToHalfBorder
supports32bpcMSAATextures
supportsPlacementHeaps
supportsLimitedYUVFormats
supportsNonPrivateDepthStencilTextures
supportsNonPrivateMSAATextures
supportsLinearTextureFromSharedBuffer
supportsPipelineLibraries
supportsFragmentOnlyEncoders
supportsBufferWithIOSurface
supportsProgrammableBlending
supportsRenderToLinearTextures
supportsMemorylessRenderTargets
supportsFastMathInfNaNPropagation
supportsInvariantVertexPosition
supportsShaderLODAverage
supportsRelaxedTextureViewRequirements
supportsSeparateDepthStencil
supportsGPUStatistics
supportsASTCTextureCompression
supportsExtendedYUVFormats
supportsPublicXR10Formats
supportsSRGBwrites
supportsDepthClipMode
supportsPacked32TextureBufferWrites
supports3DASTCTextures
supportsExtendedXR10Formats
supportsFragmentBufferWrites
supportsCountingOcclusionQuery
supportsBaseVertexInstanceDrawing
supportsIndirectDrawAndDispatch
supportsTessellation
supportsReadWriteBufferArguments
supportsArrayOfTextures
supportsArrayOfSamplers
supportsCombinedMSAAStoreAndResolveAction
supportsMutableTier1ArgumentBuffers
supportsSamplerCompareFunction
supportsMSAADepthResolve
supportsMSAAStencilResolve
supportsMSAADepthResolveFilter
supportsGFXIndirectCommandBuffers
supportsCMPIndirectCommandBuffers
supportsIndirectStageInRegion
supportsIndirectTextures
supportsNorm16BCubicFiltering
supportsTextureOutOfBoundsReads
supportsTextureSwizzle
supportsAlphaYUVFormats
supportsMemoryOrderAtomics
supportsQuadGroup
supportsRenderTextureWrites
supportsImageBlocks
supportsTileShaders
supportsImageBlockSampleCoverageControl
supportsNativeHardwareFP16
supportsPostDepthCoverage
supportsMipLevelsSmallerThanBlockSize
supportsNonUniformThreadgroupSize
supportsReadWriteTextureArguments
supportsReadWriteTextureCubeArguments
supportsTextureCubeArray
supportsQuadShufflesAndBroadcast
supportsConcurrentComputeDispatch
supportsRenderPassWithoutRenderTarget
supportsRasterOrderGroups
supportsLinearTexture2DArray
supportsNonSquareTileShaders
supportsSeparateVisibilityAndShadingRate
supports2DLinearTexArraySPI
supportsLayeredRendering
supportsViewportAndScissorArray
supportsIndirectTessellation
supportsMSAAStencilResolveFilter
supportsStencilFeedback
supportsFP32TessFactors
supportsSIMDGroup
supportsShaderMinLODClamp
supportsSIMDShufflesAndBroadcast
supportsShaderBarycentricCoordinates
supportsBlackOrWhiteSamplerBorderColors
supportsMirrorClampToEdgeSamplerMode
supportsSIMDReduction
supportsDepthClipModeClampExtended
supportsTexture2DMultisampleArray
supportsForceSeamsOnCubemaps
supportsFloat16BCubicFiltering
T@"NSString",R
limits
Tr^{?=IIIIIIIIIIIIIIIIIIffIIIIIIIIIIIIIIIIIIIIIIIIIIIIIQ},R
globalTraceObjectID
TQ,R,V_globalTraceObjectID
maxColorAttachments
maxVertexAttributes
maxVertexBuffers
maxVertexTextures
maxVertexSamplers
maxVertexInlineDataSize
maxInterpolants
maxFragmentBuffers
maxFragmentTextures
maxFragmentSamplers
maxFragmentInlineDataSize
maxComputeBuffers
maxComputeTextures
maxComputeSamplers
maxComputeInlineDataSize
maxComputeLocalMemorySizes
maxTotalComputeThreadsPerThreadgroup
maxComputeThreadgroupMemory
maxLineWidth
Tf,R
maxPointSize
maxVisibilityQueryOffset
minConstantBufferAlignmentBytes
minBufferNoCopyAlignmentBytes
maxTextureWidth1D
maxTextureWidth2D
maxTextureHeight2D
maxTextureWidth3D
maxTextureHeight3D
maxTextureDepth3D
maxTextureDimensionCube
maxTextureLayers
linearTextureAlignmentBytes
iosurfaceTextureAlignmentBytes
iosurfaceReadOnlyTextureAlignmentBytes
deviceLinearTextureAlignmentBytes
deviceLinearReadOnlyTextureAlignmentBytes
maxFunctionConstantIndices
maxComputeThreadgroupMemoryAlignmentBytes
maxInterpolatedComponents
maxIndirectBuffers
maxIndirectTextures
maxIndirectSamplers
maxIndirectSamplersPerDevice
maxCustomSamplePositions
maxTextureBufferWidth
maxComputeAttributes
maxFramebufferStorageBits
maxBufferLength
serialQueue
T@"NSObject<OS_dispatch_queue>",R,V_serialQueue
concurrentQueue
T@"NSObject<OS_dispatch_queue>",R,V_concurrentQueue
compiler
T@"MTLCompiler",R,V_compiler
indirectArgumentBufferCapabilities
T{IndirectArgumentBufferCapabilities=b1b1b1b29},R,D
readWriteTextureSupport
argumentBuffersSupport
rasterOrderGroupsSupported
TB,R,GareRasterOrderGroupsSupported
maxArgumentBufferSamplerCount
gpuAssertionsEnabled
TB,GareGPUAssertionsEnabled,SsetGPUAssertionsEnabled:
resourceIndirectionEnabled
TB,GisResourceIndirectionEnabled
utilityBufferRequired
TB,GisUtilityBufferRequired
utilityBuffers
T@"NSArray",R,N
currentUtilityBufferIndex
placementHeapSupported
TB,R,D,GisPlacementHeapSupported
MTLGPUFamilyApple1
MTLGPUFamilyApple2
MTLGPUFamilyApple3
MTLGPUFamilyApple4
MTLGPUFamilyApple5
MTLGPUFamilyMac1
MTLGPUFamilyMac2
MTLGPUFamilyCommon1
MTLGPUFamilyCommon2
MTLGPUFamilyCommon3
MTLGPUFamilyiOSMac1
MTLGPUFamilyiOSMac2
MTLValidateFeatureSupport
%@ is not supported on this device
%@ is only supported on %@ and later.
MTLFeatureSet_tvOS_GPUFamily1_v1
MTLFeatureSet_tvOS_GPUFamily1_v2
MTLFeatureSet_tvOS_GPUFamily1_v3
MTLFeatureSet_tvOS_GPUFamily2_v1
MTLFeatureSet_tvOS_GPUFamily1_v4
MTLFeatureSet_tvOS_GPUFamily2_v2
Libraries From Source
Pipelines
Render Pipelines
Compute Pipelines
dataType =
index =
arrayLength =
access =
textureType =
constantBlockAlignment =
libraryBuilder
serializedRequest
Corrupted library
compiler request queue
compiler reply queue
com.apple.MTLCompilerService
v16@?0@"NSObject<OS_xpc_object>"8
requestType
targetData
pluginPath
client_name
reply
error
errorMessage
Compiler encountered an internal error
compiler service could not be reached
CompilerConnectionSerialQueue
v36@?0I8r^v12Q20r*28
MTLTextureType1D
MTLTextureType1DArray
MTLTextureType2D
MTLTextureType2DArray
MTLTextureType2DMultisample
MTLTextureTypeCube
MTLTextureTypeCubeArray
MTLTextureType3D
MTLTextureTypeTextureBuffer
MTLCPUCacheModeWriteCombined
MTLCPUCacheModeDefaultCache
Invalid
MTLStorageModeShared
MTLStorageModePrivate
MTLStorageModeMemoryless
MTLTextureUsageShaderRead
MTLTextureUsageShaderWrite
MTLTextureUsageRenderTarget
MTLTextureUsagePixelFormatView
MTLTextureUsageUnknown
validateMTLTextureType
type (%lu) is not a valid MTLTextureType.
MTLTextureSwizzleRed
MTLTextureSwizzleGreen
MTLTextureSwizzleBlue
MTLTextureSwizzleAlpha
MTLTextureSwizzleOne
MTLTextureSwizzleZero
Unknown(%u)
forceResourceIndex
TB,D,N
resourceIndex
width
height
depth
mipmapLevelCount
resourceOptions
cpuCacheMode
storageMode
hazardTrackingMode
usage
allowGPUOptimizedContents
swizzle
T{?=CCCC},D,N
pixelFormat =
width =
height =
depth =
mipmapLevelCount =
sampleCount =
cpuCacheMode =
storageMode =
hazardTrackingMode =
resourceOptions =
framebufferOnly =
usage =
swizzle =
allowGPUOptimizedContents =
-[MTLTextureDescriptorInternal validateWithDevice:]
MTLTextureDescriptor has invalid pixelFormat (%lu).
MTLTextureDescriptor requests a height of %lu but the texture type %s requires that height is 1
MTLTextureDescriptor requests a mipmapLevelCount of %lu but the texture type %s requires that mipmapLevelCount is 1
MTLTextureDescriptor requests a depth of %lu but the texture type %s requires that depth is 1
MTLTextureDescriptor requests %lu mipmap levels, but the dimensions (%lu, %lu, %lu) can only support a maxiumum of %lu levels
MTLTextureDescriptor has sampleCount set but is using a type that does not allow sampleCount.
MTLTextureDescriptor mipmapLevelCount must equal 1 for multisample textures.
MTLTextureDescriptor pixelFormat (%s) does not support multisample textures.
MTLTextureDescriptor sampleCount must be > 1 for multisample textures.
MTLTextureDescriptor sampleCount (%lu) is not supported by device.
MTLTextureDescriptor width must equal height for cube textures.
MTLTextureDescriptor has an arrayLength of %lu, but %s is not an array texture type
MTLTextureDescriptor arrayLength (%lu) is set to zero or greater than the max allowed size (%lu).
MTLTextureDescriptor has a compressed pixel format set with a sample count greater than one.
The compressed pixel format %s cannot be used with MTLTextureType3D.
MTLTextureDescriptor: compressed pixel formats require texture type of MTLTextureType2D[Array]%s or MTLTextureTypeCube[Array].
, MTLTextureType3D
PVRTC 3D textures are not supported
MTLTextureDescriptor has a PVRTC pixel format (%s) set with non-square and/or non-power of two dimensions.
MTLTextureDescriptor has a non-zero rotation set but is not marked as framebufferOnly.
MTLTextureDescriptor requests %lu mipmap levels, but the MTLPixelFormat422 pixel format does not support mipmaps.
MTLTextureDescriptor: MTLPixelFormat422 requires MTLTextureType2D.
MTLTextureDescriptor: MTLPixelFormat422 requires even width.
MTLTextureDescriptor: depth/stencil pixel formats require texture type of MTLTextureType2D[Array] or MTLTextureTypeCube[Array].
MTLTextureDescriptor: Depth, Stencil, DepthStencil, and Multisample textures must be allocated with the MTLStorageModePrivate or MTLStorageModeMemoryless storage mode.
MTLTextureDescriptor: Depth, Stencil, DepthStencil, and Multisample textures must be allocated with the MTLStorageModePrivate storage mode.
_mtlValidateArgumentsForTextureViewOnDevice
source texture (%s) is not a compressed pixel format.
texture view pixelFormat (%s) is a compressed pixel format.
source texture block size (%lu) does not match texture view pixel size (%lu)
source texture pixelFormat (%s) not castable.
texture view pixelFormat (%s) not castable.
source texture pixelFormat (%s) not compatible with texture view pixelFormat (%s).
source texture textureType (%@) not compatible with texture view textureType (%@).
(newLevelRange.location + newLevelRange.length)(%lu) must be <= [texture mipmapLevelCount](%lu).
(newSliceRange.location + newSliceRange.length)(%lu) must be <= (%lu).
newSliceRange.length(%lu) must be a multiple of (%lu).
newSliceRange.length(%lu) must equal (%lu) for textureType (%@).
IOSurface
Linear
_mtlValidateStrideTextureParameters
%s texture: bytesPerRow (%llu) must be greater or equal to (%llu) bytes
%s texture: bytesPerRow (%llu) must be aligned to %llu bytes
%s texture: offset (%llu) must be aligned to %llu bytes
%s texture: cannot create compressed, depth, or stencil textures, pixelFormat (%s) disallowed
%s texture: cannot be mipmapped, mipmapLevelCount (%lu) disallowed
%s texture: must have depth == 1, depth (%lu) disallowed
%s texture: must be of type MTLTextureType2D, textureType (%@) disallowed
_mtlValidateMTLTextureSwizzle
swizzle(%u) is not a valid MTLTextureSwizzle.
validateMTLCPUCacheMode
invalid cpuCacheMode (%lu)
invalid storageMode (%lu). Must be one of
 %@(%lu)
validateMTLStorageMode
validateMTLResourceOptions
MTLResourceOptions (0x%lx) contains invalid/unsupported CPUCacheMode.
MTLResourceOptions (0x%lx) contains invalid/unsupported MTLResourceStorageMode bits.
MTLResourceOptions (0x%lx) contains unknown bits.
validateMTLTextureUsage
MTLTextureUsage has unknown bits 0x%lx.
validateMTLTextureRotation
rotation is not a valid MTLTextureRotation.
validateMTLTextureCompressionMode
compressionMode is not a valid MTLTextureCompressionMode.
validateTextureDimensions
MTLTextureDescriptor has width of zero.
MTLTextureDescriptor has width (%lu) greater than the maximum allowed size of %lu.
MTLTextureDescriptor has height of zero.
MTLTextureDescriptor has height (%lu) greater than the maximum allowed size of %lu.
MTLTextureDescriptor has depth of zero.
MTLTextureDescriptor has depth (%lu) greater than the maximum allowed size of %lu.
MTLTextureDescriptor has arrayLength of zero.
MTLTextureDescriptor has arrayLength (%lu) greater than the maximum allowed size of %lu.
commandTypes
inheritPipelineState
inheritBuffers
maxVertexBufferBindCount
maxFragmentBufferBindCount
maxKernelBufferBindCount
TQ,N,V_resourceIndex
writable
TB,R,V_writable
cache
T^{MTLCompilerCache=^^?@ii},R,V_compilerCache
disableRunTimeCompilation
TB,V_disableRunTimeCompilation
pipelineDescriptions queue
initWithFileDescriptor
stringWithUTF8String returned nil!
stringByStandardizingPath returned nil!
stringByDeletingLastPathComponent returned nil!
Library has no fileName property !
stringWithUTF8String return nil !
stringByAppendingPathComponent returned nil !
getLibraryByIndex
Invalid library index in pipeline library file
getLibraryByIndex_block_invoke
Error: %@
initializeDescriptorHash_block_invoke
pipeline descriptor has no name in file
pipeline descriptor %s duplicated
compute pipeline %s not found in pipelineLibrary.
newComputePipelineDescriptor
invalid compute pipeline descriptor %s in pipeline library
deserializeFunction
Function with no name in pipeline library
Specialized function %s not found in pipelineLibrary.
Base function with no name in pipeline library
Specialized Function %s has no 'base function' in pipeline library
Invalid library index in pipeline library for function %s
Function %@ could not be found in library
render pipeline %s not found in pipelineLibrary.
newRenderPipelineDescriptor
invalid render pipeline descriptor %s in pipeline library
pipelineNames
T@"NSArray",R
pipelineCache
T@"<MTLPipelineCache>",R,N
functionCache
T@"<MTLDevice>",R,V_device
T@"NSArray",R,V_pipelineNames
T@"<MTLPipelineCache>",R,D,N
newLibraryWithFile
filePath must not be nil.
filePath is not a NSString.
device must not be nil.
registryID
maxThreadsPerThreadgroup
T{?=QQQ},R
lowPower
TB,R,GisLowPower
headless
TB,R,GisHeadless
removable
TB,R,GisRemovable
hasUnifiedMemory
TB,R
recommendedMaxWorkingSetSize
depth24Stencil8PixelFormatSupported
TB,R,GisDepth24Stencil8PixelFormatSupported
currentAllocatedSize
maxThreadgroupMemoryLength
programmableSamplePositionsSupported
TB,R,GareProgrammableSamplePositionsSupported
device is not a MTLDevice.
pipeline library not found
%s/pipelines.desc
file not found: %s
could not open file: %s
%s/pipelines.%s
%s/functions
deserializeFunctionConstants
Unknown property in descriptor
MTLCreateSystemDefaultDevice_block_invoke
MTLCreateSystemDefaultDevice doesn't know what to do with more than one device
MTLAddDevice
_deviceArray != NULL
[newDevice conformsToProtocol:@protocol(MTLDevice)]
shaderDebugInfoCaching
targetDeviceInfo
Tr^{MTLTargetDeviceArch=II*},R
halfFPConfig
singleFPConfig
doubleFPConfig
metalAssertionsEnabled
TB,N
featureProfile
supportPriorityBand
sharedMemorySize
dedicatedMemorySize
T{IndirectArgumentBufferCapabilities=b1b1b1b29},R
quadDataSharingSupported
TB,R,GisQuadDataSharingSupported
TB,N,GisResourceIndirectionEnabled
TB,R,GisUtilityBufferRequired
T@"NSArray",&,N
TB,R,GisPlacementHeapSupported
[newDevice conformsToProtocol:@protocol(MTLDeviceSPI)]
com.Metal.DeviceArray
MetalSimulatorEnabled
com.apple.metal
METAL_LOAD_INTERPOSER
MetalCaptureEnabled
DYMTL_TOOLS_DYLIB_PATH
/Developer/Library/PrivateFrameworks/MTLToolsDeviceSupport.framework/libMTLInterpose.dylib
sandboxReceipt
MTLInitializeInterpose
Metal GPU Frame Capture plist enabling is only allowed when deploying using TestFlight
/usr/lib/libMTLCapture.dylib
DYMTLWrapDeviceWithDebugLayer
_getWrappedDeviceFn != NULL
Metal GPU Frame capture loading process failed
Metal GPU Frame Capture Enabled
Metal GPU Frame Capture could not be enabled
Unknown Wrapper Type : %d
Metal API Extended Validation Enabled
Metal API Validation %s
Enabled
Disabled
Metal API Counters Enabled!
Metal GPU Validation Enabled
MTLGPUDebugDevice
/System/Library/PrivateFrameworks/MetalTools.framework
/System/Library/PrivateFrameworks/MTLSimDriver.framework/MTLSimDriver
MTLCreateSimulatorDevice
MTLDebugDevice
METAL_DEVICE_WRAPPER_TYPE
-[_MTLParallelRenderCommandEncoder initWithCommandBuffer:renderPassDescriptor:]
commandBuffer must not be nil.
T@"<MTLCommandQueue>",R
retainedReferences
kernelStartTime
Td,R
kernelEndTime
GPUStartTime
GPUEndTime
status
T@"NSError",R
commandBuffer is not a MTLCommandBuffer.
framebuffer must not be nil.
render pass descriptor is not an MTLRenderPassDescriptor.
label =
device =
<null>
v16@?0@"<MTLCommandBuffer>"8
TQ,R,D,N,GgetType
MTLCaptureError
captureObject
T@,&,N,V_captureObject
destination
Tq,N,V_destination
outputURL
T@"NSURL",C,N,V_outputURL
Capturing is not supported.
Already capturing.
Invalid Descriptor.
defaultCaptureScope
T@"<MTLCaptureScope>",&,V_defaultCaptureScope
isCapturing
TB,R,V_isCapturing
com.Metal.UtilityBufferDispatchQueue
-[_MTLUtilityBuffer initWithLayout:type:device:]
Failed to create utility buffer
-[_MTLUtilityBuffer reserveNextResourceIndexForType:]
Not implemented
-[_MTLUtilityBuffer removeResourceFromGlobalResourceTable:resourceType:]
Trying to remove unexpected resource type: %@
-[_MTLUtilityBuffer reserveResourceIndicesForResourceType:indices:indexCount:]
Trying to reserve resourceIndex values for unknown resource type: %@
_MTLArgumentBufferResourceTypeBuffer
_MTLArgumentBufferResourceTypeConstant
_MTLArgumentBufferResourceTypePipelineState
_MTLArgumentBufferResourceTypeIndirectCommandBuffer
Invalid _MTLArgumentBufferResourceType
initializeResourceIndex_block_invoke
Resource index %llu was set, but the utility buffer already contains a resource at this index
MTLSamplerMinMagFilterNearest
MTLSamplerMinMagFilterLinear
MTLSamplerMipFilterNotMipmapped
MTLSamplerMipFilterNearest
MTLSamplerMipFilterLinear
MTLSamplerAddressModeClampToEdge
MTLSamplerAddressModeRepeat
MTLSamplerAddressModeMirrorRepeat
MTLSamplerAddressModeClampToZero
minFilter
magFilter
mipFilter
maxAnisotropy
sAddressMode
tAddressMode
rAddressMode
borderColor
normalizedCoordinates
lodMinClamp
Tf,D,N
lodMaxClamp
lodAverage
TB,N,V_lodAverage
compareFunction
supportArgumentBuffers
T@"NSString",C,D,N
minFilter =
magFilter =
mipFilter =
maxAnisotropy =
sAddressMode =
tAddressMode =
rAddressMode =
normalizedCoordinates =
lodMinClamp =
lodMaxClamp =
lodAverage =
compareFunction =
-[MTLSamplerDescriptorInternal setLabel:]
label must not be nil.
label is not a NSString.
-[_MTLSamplerState initWithDevice:samplerDescriptor:]
desc must not be nil.
desc is not a MTLSamplerDescriptor.
TQ,N
uniqueIdentifier
T@"NSString",R,V_label
_MTLCreateConstantSamplerDescriptorsFromBitmasks
Constant sampler does not have the most significant bit set: 0x%llX
Constant sampler has unrecognized bits: 0x%llx
validateMTLSamplerMinMagFilter
filter is not a valid MTLSamplerMinMagFilter.
validateMTLSamplerMipFilter
mipFilter is not a valid MTLSamplerMipFilter.
validateMTLSamplerAddressMode
addressMode is not a valid MTLSamplerAddressMode.
addressModeFromConstantSamplerLiteral
Unexpected MTLSamplerAddressMode from constant sampler reflection: %llu
compareFunctionFromConstantSamplerLiteral
Unexpected MTLCompareFunction from constant sampler reflection: %llu
MTLHeapTypeAutomatic
MTLHeapTypePlacement
size
Tq,D,N
size =
type =
usedSize =
Tq,R
unfilteredResourceOptions
Invalid cpuCacheMode (%@)
Invalid storageMode (%@)
Frontend total time for library from source in ns
Frontend total time for function specialization in ns
Frontend total time for CoreImage SPI in ns
Functions in library
Library was cached
tracingEnabled
glBufferBindPoints
debuggingEnabled
compileTimeStatisticsEnabled
additionalCompilerArguments
T@"NSString",D,N
sourceLanguage
TC,D,N
preprocessorMacros
T@"NSDictionary",C,D,N
fastMathEnabled
languageVersion
MTL_FORCE_LANGUAGE_VERSION
%d_%d
Using MTLLanguageVersion%d_%d (set with MTL_FORCE_LANGUAGE_VERSION=%s)
preprocessorMacros:
fastMathEnabled =
languageVersion =
%u:%u
T@"NSString",R,D
attributeIndex
attributeType
active
TB,R,D,GisActive
patchData
TB,R,D,GisPatchData
patchControlPointData
TB,R,D,GisPatchControlPointData
attributeIndex =
attributeType =
active =
isPatchData =
isPatchControlPointData =
required
required =
arguments
T@"NSArray",R,D
#main
Invalid library file (unexpected end of file)
Invalid library file
This library format is not supported on this platform (or was built with an old version of the tools)
This version of metallib is too old and not supported any longer.
This version of metallib is too recent and not supported.
Non zero terminated function name!
Library with both qualified functions and extern functions is not supported!
readFunctionPublicOrPrivateMetadata
Invalid library file/data (unexpected end of file)
Invalid library file/data (bad VATY token)
readFunctionSourceArchiveMetadata
filepath must not be nil.
filepath is not a NSString.
library not found
error while opening the library
metal library file %s failed to open with error: %s
^{MTLLibraryData=^^?i@@}16@?0^@8
newLibraryWithData
data should not be null
-[_MTLLibrary newFunctionWithNameInternal:]
functionName must not be nil.
functionName is not a NSString.
-[_MTLLibrary newExternFunctionWithName:]
Function %@ has type %@, expected MTLFunctionTypeExtern.
-[_MTLLibrary newFunctionWithName:]
Function %@ was not found in the library
v24@?0@"<MTLFunction>"8@"NSError"16
MTLLibraryData queue
Compilation succeeded with: 
Compiler found unsupported library with both qualified functions and extern functions
Compiler returned an empty reply
compiler error log is invalid
Compilation failed: 
Compilation failed: 
 compiler response is invalid
initLibraryContainerWithRequestData
requestData must not be nil.
requestSize must not be 0.
v32@?0Q8@"NSObject<OS_dispatch_data>"16r*24
newLibraryWithSource
source must not be nil.
source is not a NSString.
options is not a MTLCompileOptions.
-x metal -Wl,-lmetal_rt 
-x cl -Wl,-lmetal_rt -Wl,-lopencl_rt 
-std=ios-metal%u.%u 
-debug-info-kind=line-tables-only 
METAL_DISABLE_OPT
functionNames:
functionNames
overrideTriple
externFunctionNames
functionDictionary
T@"NSMutableDictionary",R,&,N,V_functionDictionary
T@"NSArray",R,&,D
libraryData
T^{MTLLibraryData=^^?i@@},R,V_libraryData
cacheEntry
T^{MTLLibraryContainer=^{MTLPipelineCollection}i{?=[32C]}^{MTLLibraryData}@@@@@},R,V_cacheEntry
libraryDataContents
T@"NSData",R,C
-[_MTLFunction initWithName:type:libraryData:device:]
name must not be nil.
name is not a NSString.
-[_MTLFunction bitCodeHash]
-[_MTLFunction bitCodeFileSize]
-[_MTLFunction newFunctionWithPluginData:bitcodeType:]
-[_MTLFunction functionConstantsDictionary]
functionType =
attributes:
v32@?0Q8@"NSObject<OS_dispatch_data>"16@"NSString"24
-[_MTLFunction newArgumentEncoderWithBufferIndex:reflection:]
bufferIndex %lu does not identify an argument buffer
functionType
patchType
patchControlPointCount
vertexAttributes
stageInputAttributes
functionConstantsDictionary
T@"NSDictionary",R
filePath
lineNumber
unpackedFilePath
returnType
T@"MTLType",R
TQ,R,V_functionType
Tq,D
T@"NSString",C,V_unpackedFilePath
bitcodeType
pluginData
T@"NSData",D
vendorPrivate
T@,R,V_vendorPrivate
bitCodeOffset
T@"NSArray",D
T@"MTLType",D
functionConstants
functionInputs
T@"NSObject<OS_dispatch_data>",R,D
needsFunctionConstantValues
Tq,R,D
Failed to find specialized function in pipeline library
-[MTLCompiler initWithTargetData:cacheUUID:pluginPath:device:compilerFlags:]
pluginPath must not be nil.
pluginPath is not a NSString.
May 19 2019
18:47:07
compiler queue
functions
Failed to find precompiled data in pipeline library
v16@?0r^{MTLCompiledRequestReply=Q@^{?}@}8
function is nil
Function %@ is using language version %u.%u which is incompatible with this OS.
Function %@ has a deployment target which is incompatible with this OS.
reflection
Failed to find reflection in pipeline library
pipelineStatistics
Failed to find pipeline statistics in pipeline library
debugInstrumentation
Failed to find debug instrumentation data in pipeline library
Failed to find precompiled function '%@' in pipeline library
v16@?0r^{MTLCompiledFunctionReply=Q@^{?}@^{?}@^{?}@^{?}@@@^{?}@}8
Compilation failed
v80@?0Q8@"NSObject<OS_dispatch_data>"16@"NSObject<OS_dispatch_data>"24@"NSObject<OS_dispatch_data>"32@"NSObject<OS_dispatch_data>"40@"NSObject<OS_dispatch_data>"48@"NSObject<OS_dispatch_data>"56@"NSObject<OS_dispatch_data>"64@"NSString"72
T@"NSString",R,C,V_pluginPath
compilerQueue
T@"NSObject<OS_dispatch_queue>",R,V_compilerQueue
compilerConnectionManager
T^{MTLCompilerConnectionManager=^^?},R,V_compilerConnectionManager
compilerId
TI,R,V_compilerId
compilerFlags
TQ,R,V_compilerFlags
libmetal_timestamp.dylib
getMetalTimeStamp
May 19 2019 18:47:07
%s, %s
/System/Library/PrivateFrameworks/GPUCompiler.framework/Libraries/
libraryCache
libraries
Invalid key
empty error message
MTLFunctionTypeVertex
MTLFunctionTypeFragment
MTLFunctionTypeKernel
validateMTLFunctionType
type is not a valid MTLFunctionType.
programObject Queue
reflection Queue
MTLCommandBufferErrorDomain
MTLLibraryErrorDomain
texture
T@"<MTLTexture>",&,D,N
level
slice
depthPlane
resolveTexture
resolveLevel
resolveSlice
resolveDepthPlane
loadAction
storeAction
storeActionOptions
clearColor
T{?=dddd},D,N
clearDepth
Td,D,N
depthResolveFilter
clearStencil
TI,D,N
heap
T@"<MTLHeap>",R
heapOffset
allocatedSize
rootResource
T@"<MTLResource>",R
parentTexture
T@"<MTLTexture>",R
parentRelativeLevel
parentRelativeSlice
buffer
T@"<MTLBuffer>",R
bufferOffset
bufferBytesPerRow
iosurface
T^{__IOSurface=},R
iosurfacePlane
framebufferOnly
TB,R,GisFramebufferOnly
T{?=CCCC},R,N
responsibleProcess
sharedAllocationInfo
T@"MTLResourceAllocationInfo",R
cachedAllocationInfo
protectionOptions
rotation
isCompressed
compressionFeedback
swizzleKey
numFaces
isDrawable
-[MTLRenderPassColorAttachmentDescriptorInternal setTexture:]
texture is not a MTLTextureImplementation.
-[MTLRenderPassColorAttachmentDescriptorInternal setResolveTexture:]
resolveTexture is not a MTLTextureImplementation.
-[MTLRenderPassDepthAttachmentDescriptorInternal setTexture:]
-[MTLRenderPassDepthAttachmentDescriptorInternal setResolveTexture:]
-[MTLRenderPassStencilAttachmentDescriptorInternal setTexture:]
-[MTLRenderPassStencilAttachmentDescriptorInternal setResolveTexture:]
-[MTLRenderPassColorAttachmentDescriptorArrayInternal objectAtIndexedSubscript:]
attachmentIndex(%lu) must be < %lu
-[MTLRenderPassColorAttachmentDescriptorArrayInternal setObject:atIndexedSubscript:]
attachment is not a MTLRenderPassColorAttachmentDescriptor.
T@"MTLRenderPassColorAttachmentDescriptorArray",R,D
depthAttachment
T@"MTLRenderPassDepthAttachmentDescriptor",C,D,N
stencilAttachment
T@"MTLRenderPassStencilAttachmentDescriptor",C,D,N
visibilityResultBuffer
T@"<MTLBuffer>",&,D,N
renderTargetArrayLength
TQ,N,V_renderTargetArrayLength
-[MTLRenderPassDescriptorInternal setDepthAttachment:]
depthAttachment is not a MTLRenderPassDepthAttachmentDescriptor.
-[MTLRenderPassDescriptorInternal setStencilAttachment:]
stencilAttachment is not a MTLRenderPassStencilAttachmentDescriptor.
Color Attachment %u
Depth Attachment:
Stencil Attachment:
visibilityResultBuffer =
renderTargetWidth =
renderTargetHeight =
length
-[MTLRenderPassDescriptorInternal setVisibilityResultBuffer:]
buffer is not a MTLBuffer.
-[MTLRenderPassDescriptorInternal setSamplePositions:count:]
count (%lu) is not a supported sample count for custom positions.
Non-zero count (%lu) provided with a NULL positions parameter.
Provided sample position x-coodinate (%f) at index %u is not within the range [0,1).
Provided sample position y-coodinate (%f) at index %u is not within the range [0,1).
-[MTLRenderPassDescriptorInternal getSamplePositions:count:]
Non-zero count (%lu) does not match the number of programmed custom sample positions (%lu).
-[MTLRenderPassDescriptorInternal validate:width:height:]
Custom sample positions were specified, but Programmable Sample Positions is not supported on this device.
texture =
level =
slice =
depthPlane =
resolveTexture =
resolveLevel =
resolveSlice =
resolveDepthPlane =
loadAction =
storeAction =
storeActionOptions =
clearColor =
yInvert =
MTLLoadActionDontCare
MTLLoadActionLoad
MTLLoadActionClear
MTLStoreActionDontCare
MTLStoreActionStore
MTLStoreActionMultisampleResolve
MTLStoreActionStoreAndMultisampleResolve
MTLStoreActionUnknown
none
MTLStoreActionOptionCustomSamplePositions
(%g %g %g %g)
validateMTLLoadAction
loadAction is not a valid MTLLoadAction.
validateMTLStoreAction
storeAction is not a valid MTLStoreAction.
validateMTLStoreActionOptions
storeActionOptions contains unrecognized bits (%#x)
resolveFilter =
clearDepth =
MTLMultisampleDepthResolveFilterSample0
MTLMultisampleDepthResolveFilterMin
MTLMultisampleDepthResolveFilterMax
validateDepthAttachmentMTLStoreAction
validateMTLMultisampleDepthResolveFilter
resolveFilter is not a valid MTLMultisampleDepthResolveFilter.
clearStencil =
validateStencilAttachmentMTLStoreActionOptions
storeActionOptions contains unrecognized bits: %#x
Stencil attachment storeActionOptions (%#x) contains options incompatible with this attachment type: %@
Custom Sample Positions:
number of positions = 
sample 
-[_MTLCommandEncoder initWithCommandBuffer:]
-[_MTLCommandEncoder dealloc]
Command encoder released without endEncoding
-[_MTLCommandEncoder insertDebugSignpost:]
string must not be nil.
string is not a NSString.
-[_MTLCommandEncoder pushDebugGroup:]
TQ,R,N,V_globalTraceObjectID
TQ,R,N,GgetType
numThisEncoder
TQ,N,V_numThisEncoder
dispatchType
Compute Arguments =
Argument %u:
T@"<MTLFunction>",&,D,N
T@"MTLStageInputOutputDescriptor",C,D,N
T@"MTLPipelineBufferDescriptorArray",R,D
computeFunction =
threadGroupSizeIsMultipleOfThreadExecutionWidth =
maxTotalThreadsPerThreadgroup =
supportIndirectCommandBuffers =
stageInputDescriptor =
pipelineLibrary =
buffers = 
forceResourceIndex =
resourceIndex =
-[MTLComputePipelineDescriptorInternal setLabel:]
-[MTLComputePipelineDescriptorInternal setComputeFunction:]
computeFunction must not be nil.
computeFunction is not a MTLFunction.
computeFunction functionType is not a MTLFunctionTypeKernel.
-[MTLComputePipelineDescriptorInternal setStageInputDescriptor:]
stageInputDescriptor is not a MTLStageInputOutputDescriptor.
-[MTLComputePipelineDescriptorInternal setMaxTotalThreadsPerThreadgroup:]
max total threads must be less than or equal to %d.
-[MTLComputePipelineDescriptorInternal validateWithDevice:]
computeFunction is associated with a different device
function %s cannot be used to build a pipeline state. Use newFunctionWithName:constantValues:... to get the specialized function
-[_MTLComputePipelineState initWithDevice:pipelineStateDescriptor:]
desc is not a MTLComputePipelineDescriptor.
threadExecutionWidth
staticThreadgroupMemoryLength
IABEmulationData
T@"MTLIndirectArgumentBufferEmulationData",&,N,V_iabEmulationData
debugInstrumentationData
T@"MTLDebugInstrumentationData",&,N,V_debugInstrumentationData
validateMTLArgumentAccess
access (%lu) is not a valid MTLArgumentAccess.
members
isIndirectArgumentBuffer
TB,V_isIndirectArgumentBuffer
MTLDataTypeNone
MTLDataTypeStruct
MTLDataTypeArray
MTLDataTypeFloat
MTLDataTypeFloat2
MTLDataTypeFloat3
MTLDataTypeFloat4
MTLDataTypeFloat2x2
MTLDataTypeFloat2x3
MTLDataTypeFloat2x4
MTLDataTypeFloat3x2
MTLDataTypeFloat3x3
MTLDataTypeFloat3x4
MTLDataTypeFloat4x2
MTLDataTypeFloat4x3
MTLDataTypeFloat4x4
MTLDataTypeHalf
MTLDataTypeHalf2
MTLDataTypeHalf3
MTLDataTypeHalf4
MTLDataTypeHalf2x2
MTLDataTypeHalf2x3
MTLDataTypeHalf2x4
MTLDataTypeHalf3x2
MTLDataTypeHalf3x3
MTLDataTypeHalf3x4
MTLDataTypeHalf4x2
MTLDataTypeHalf4x3
MTLDataTypeHalf4x4
MTLDataTypeInt
MTLDataTypeInt2
MTLDataTypeInt3
MTLDataTypeInt4
MTLDataTypeUInt
MTLDataTypeUInt2
MTLDataTypeUInt3
MTLDataTypeUInt4
MTLDataTypeShort
MTLDataTypeShort2
MTLDataTypeShort3
MTLDataTypeShort4
MTLDataTypeUShort
MTLDataTypeUShort2
MTLDataTypeUShort3
MTLDataTypeUShort4
MTLDataTypeChar
MTLDataTypeChar2
MTLDataTypeChar3
MTLDataTypeChar4
MTLDataTypeUChar
MTLDataTypeUChar2
MTLDataTypeUChar3
MTLDataTypeUChar4
MTLDataTypeBool
MTLDataTypeBool2
MTLDataTypeBool3
MTLDataTypeBool4
MTLDataTypeTexture
MTLDataTypeSampler
MTLDataTypePointer
MTLDataTypeLong
MTLDataTypeLong2
MTLDataTypeLong3
MTLDataTypeLong4
MTLDataTypeULong
MTLDataTypeULong2
MTLDataTypeULong3
MTLDataTypeULong4
MTLDataTypeDouble
MTLDataTypeDouble2
MTLDataTypeDouble3
MTLDataTypeDouble4
MTLDataTypeFloat8
MTLDataTypeFloat16
MTLDataTypeHalf8
MTLDataTypeHalf16
MTLDataTypeInt8
MTLDataTypeInt16
MTLDataTypeUInt8
MTLDataTypeUInt16
MTLDataTypeShort8
MTLDataTypeShort16
MTLDataTypeUShort8
MTLDataTypeUShort16
MTLDataTypeChar8
MTLDataTypeChar16
MTLDataTypeUChar8
MTLDataTypeUChar16
MTLDataTypeLong8
MTLDataTypeLong16
MTLDataTypeULong8
MTLDataTypeULong16
MTLDataTypeDouble8
MTLDataTypeDouble16
MTLArgumentAccessReadOnly
MTLArgumentAccessReadWrite
MTLArgumentAccessWriteOnly
elementType
dataSize
elementIsArgumentBuffer
ElementType =
%@ ElementTypeDescription = %@
Access =
textureDataType
isDepthTexture
argumentIndex
Offset =
ArgumentIndex =
TypeInfo =
 nil
render_target
TQ,R,V_render_target
raster_order_group
TQ,R,V_raster_order_group
argumentIndexStride
ArrayLength =
Stride =
ArgumentIndexStride =
ElementTypeInfo = %@
TQ,N,V_argumentIndexStride
indirectArgumentIndexStride
bufferIndirectArgumentType
T@"MTLArgument",R,D
indirectConstantAlignment
indirectConstantDataSize
indirectConstantDataType
bufferAlignment
bufferDataSize
bufferDataType
bufferStructType
T@"MTLStructType",R,D
bufferPointerType
T@"MTLPointerType",R,D
threadgroupMemoryAlignment
threadgroupMemoryDataSize
-[MTLArgumentInternal bufferAlignment]
Querying buffer alignment on an argument that is not a buffer
-[MTLArgumentInternal bufferDataSize]
Querying buffer data size on an argument that is not a buffer
-[MTLArgumentInternal bufferDataType]
Querying buffer data type on an argument that is not a buffer
-[MTLArgumentInternal indirectConstantAlignment]
Querying indirect constant alignment on an argument that is not an indirect constant
-[MTLArgumentInternal indirectConstantDataSize]
Querying indirect constant data size on an argument that is not an indirect constant
-[MTLArgumentInternal indirectConstantDataType]
Querying indirect constant data type on an argument that is not an indirect constant
-[MTLArgumentInternal bufferIndirectArgumentType]
-[MTLArgumentInternal bufferStructType]
Querying buffer struct type on an argument that is not a buffer
-[MTLArgumentInternal threadgroupMemoryAlignment]
Querying threadgroup memory alignment on an argument that is not a threadgroup memory
-[MTLArgumentInternal threadgroupMemoryDataSize]
Querying threadgroup memory data size on an argument that is not a threadgroup memory
-[MTLArgumentInternal textureType]
Querying texture type on an argument that is not a texture
-[MTLArgumentInternal textureDataType]
Querying texture data type on an argument that is not a texture
LocationIndex =
IsActive =
%@ TypeInfo = %@
structType
airMDType =
airMDType
T@"NSString",R,V_airMDType
TQ,R,V_offset
bufferIndex =
baseInstanceUnused =
TQ,R,V_bufferIndex
TQ,R,V_stride
TQ,R,V_stepFunction
TQ,R,V_stepRate
baseInstanceUnused
TB,R,V_baseInstanceUnused
MTLArgumentTypeBuffer
MTLArgumentTypeThreadgroupMemory
MTLArgumentTypeTexture
MTLArgumentTypeSampler
Vertex Shader
Fragment Shader
Instruction count
Temporary register count
Compilation time in milliseconds
Uniform register count
ALU instruction count
Threadgroup atomic instruction count
Threadgroup load instruction count
Threadgroup store instruction count
Device atomic instruction count
Device load instruction count
Device store instruction count
Branch instruction count
Loop instruction count
Texture reads instruction count
Texture writes instruction count
Spilled bytes
Wait instruction count
Threadgroup memory
FP16 instruction count
FP32 instruction count
INT16 instruction count
INT32 instruction count
Max temporary registers
Max uniform registers
Max threadgroup memory
Max theoretical occupancy
Remarks
Compile Performance
Function Name
Function was cached
Total time for synchronous pipeline creation in ns
Total time for synchronous compile service in ns
Total compile time in ns
Framework total compile time in ns
Backend compiler build request total time in ns
Driver total compile time in ns
Compiler total time in ns
Compiler translator pass time in ns
Compiler optimization pass time in ns
Compiler backend pass time in ns
TB,D,N,GisBlendingEnabled
Pixel Format
Blending Enabled
Source RGB Blend Factor
Destination RGB Blend Factor
Source Alpha Blend Factor
Destination Alpha Blend Factor
RGB Blend Operation
Alpha Blend Operation
Write Mask
vertexArguments
fragmentArguments
Vertex Arguments:
argumentsCount =
Fragment Arguments:
-[MTLRenderPipelineColorAttachmentDescriptorArrayInternal objectAtIndexedSubscript:]
-[MTLRenderPipelineColorAttachmentDescriptorArrayInternal setObject:atIndexedSubscript:]
attachment is not a MTLRenderPipelineColorAttachmentDescriptor.
T@"MTLVertexDescriptor",C,D,N
rasterSampleCount
TB,D,N,GisAlphaToCoverageEnabled
TB,D,N,GisAlphaToOneEnabled
TB,D,N,GisRasterizationEnabled
T@"MTLRenderPipelineColorAttachmentDescriptorArray",R,D
TQ,N,V_inputPrimitiveTopology
TB,D,N,GisTessellationFactorScaleEnabled
Alpha to Coverage =
Alpha to One =
Rasterization Enabled =
Sample Coverage =
Sample Mask =
0x%lx
Raster Sample Count =
Depth Attachment Format =
Stencil Attachment Format =
tessellationPartitionMode =
maxTessellationFactor =
tessellationFactorScaleEnabled =
tessellationFactorFormat =
tessellationControlPointIndexType =
tessellationFactorStepFunction =
tessellationOutputWindingOrder =
Vertex Function =
Fragment Function =
Vertex Array:
Vertex Enabled =
Vertex   Depth Compare Clamp Mask =
0x%x
Fragment Depth Compare Clamp Mask =
Color Attachments:
Color Attachment %u:
Pipeline Library:
Vertex Buffer %u:
Fragment Buffer %u:
-[MTLRenderPipelineDescriptorInternal fastBlendDescriptorAtIndex:]
index must be < %lu.
-[MTLRenderPipelineDescriptorInternal setLabel:]
-[MTLRenderPipelineDescriptorInternal setVertexFunction:]
vertexFunction is not a MTLFunction.
vertexFunction functionType is not a MTLFunctionTypeVertex.
-[MTLRenderPipelineDescriptorInternal setFragmentFunction:]
fragmentFunction is not a MTLFunction.
fragmentFunction functionType is not a MTLFunctionTypeFragment.
-[MTLRenderPipelineDescriptorInternal attachVertexDescriptor:]
vertexDescriptor is not a MTLVertexDescriptor.
-[MTLRenderPipelineDescriptorInternal setVertexDescriptor:]
-[MTLRenderPipelineDescriptorInternal validateWithDevice:]
vertexFunction must not be nil.
vertexFunction is associated with a different device
fragmentFunction must not be nil when vertexEnabled is false.
fragmentFunction is associated with a different device
maxTessellationFactor(%lu) must be <= %lu.
maxTessellationFactor(%lu) must be a power of 2 when using MTLTessellationPartitionModePow2.
maxTessellationFactor(%lu) must be even when using MTLTessellationPartitionModeFractionalOdd or MTLTessellationPartitionModeFractionalEven.
rasterSampleCount (%lu) is not supported by device.
Blending is enabled for render target %lu; however, the pixelformat %s for this render target is not blendable.
writeMask(0x%lx) is not MTLColorWriteMaskAll or MTLColorWriteMaskNone for render target %lu; however, the pixelformat %s for this render target requires MTLColorWriteMaskAll or MTLColorWriteMaskNone.
MTLRenderPipelineDescriptor color render target(%lu) exceeds platform max(%lu).
pixelFormat, for color render target(%lu), is not a valid MTLPixelFormat.
pixelFormat, for color render target(%lu), %s is not color renderable.
Dual source blending is used in combination with multiple render targets
MTLRenderPipelineDescriptor with alphaToCoverageEnabled requires a float/unorm pixel format, but colorAttachments[0].pixelFormat(%s) is not blendable
MTLRenderPipelineDescriptor with alphaToOneEnabled requires a float/unorm pixel format, but colorAttachments[0].pixelFormat(%s) is not blendable
This set of render targets requires %lu bytes of pixel storage. This device supports %lu bytes.
depthAttachmentPixelFormat is not a valid MTLPixelFormat.
depthAttachmentPixelFormat %s is not depth renderable.
stencilAttachmentPixelFormat is not a valid MTLPixelFormat.
stencilAttachmentPixelFormat %s is not stencil renderable.
No valid pixelFormats set.
depthAttachmentPixelFormat (%s) and stencilAttachmentPixelFormat (%s) must match.
Vertex function has input attributes but no vertex descriptor was set.
postVertexDumpBufferIndex
forceSoftwareVertexFetch
-[_MTLRenderPipelineState initWithDevice:pipelineStateDescriptor:]
desc is not a MTLRenderPipelineDescriptor.
pipelines with tessellationFactorScaleEnabled = YES are not compatible with indirect command buffers
vertexIABEmulationData
T@"MTLIndirectArgumentBufferEmulationData",&,N,V_vertexIABEmulationData
fragmentIABEmulationData
T@"MTLIndirectArgumentBufferEmulationData",&,N,V_fragmentIABEmulationData
vertexDebugInstrumentationData
T@"MTLDebugInstrumentationData",&,N,V_vertexDebugInstrumentationData
fragmentDebugInstrumentationData
T@"MTLDebugInstrumentationData",&,N,V_fragmentDebugInstrumentationData
MTLBlendFactorZero
MTLBlendFactorOne
MTLBlendFactorSourceColor
MTLBlendFactorOneMinusSourceColor
MTLBlendFactorSourceAlpha
MTLBlendFactorOneMinusSourceAlpha
MTLBlendFactorDestinationColor
MTLBlendFactorOneMinusDestinationColor
MTLBlendFactorDestinationAlpha
MTLBlendFactorOneMinusDestinationAlpha
MTLBlendFactorSourceAlphaSaturated
MTLBlendFactorBlendColor
MTLBlendFactorOneMinusBlendColor
MTLBlendFactorBlendAlpha
MTLBlendFactorOneMinusBlendAlpha
MTLBlendFactorSource1Color
MTLBlendFactorOneMinusSource1Color
MTLBlendFactorSource1Alpha
MTLBlendFactorOneMinusSource1Alpha
MTLBlendOperationAdd
MTLBlendOperationSubtract
MTLBlendOperationReverseSubtract
MTLBlendOperationMin
MTLBlendOperationMax
None
blending =
Source blend factors:
RGB   =
Alpha =
Destination blend factors:
Blend operations:
writeMask =
validateMTLBlendFactor
factor is not a valid MTLBlendFactor.
validateMTLBlendOperation
func is not a valid MTLBlendOperation.
validateMTLColorWriteMask
MTLColorWriteMask mask has unknown bits 0x%lx.
validateMTLPixelFormat
pixelFormat is not a valid MTLPixelFormat.
MTLTessellationPartitionModePow2
MTLTessellationPartitionModeInteger
MTLTessellationPartitionModeFractionalOdd
MTLTessellationPartitionModeFractionalEven
MTLTessellationFactorFormatHalf
MTLTessellationControlPointIndexTypeNone
MTLTessellationControlPointIndexTypeUInt16
MTLTessellationControlPointIndexTypeUInt32
MTLTessellationFactorStepFunctionConstant
MTLTessellationFactorStepFunctionPerPatch
MTLTessellationFactorStepFunctionPerInstance
MTLTessellationFactorStepFunctionPerPatchAndPerInstance
MTLWindingClockwise
MTLWindingCounterClockwise
blending = NO
validateMTLTessellationPartitionMode
tessellationPartitionMode is not a valid MTLTessellationPartitionMode.
validateMaxTessellationFactor
maxTessellationFactor must be >= 1 and <= 64
validateMTLTessellationFactorFormat
tessellationFactorFormat is not a valid MTLTessellationFactorFormat.
validateMTLTessellationControlPointIndexType
tessellationControlPointIndexType is not a valid MTLTessellationControlPointIndexType.
validateMTLTessellationFactorStepFunction
tessellationFactorStepFunction is not a valid MTLTessellationFactorStepFunction.
validateMTLWinding
tessellationOutputWindingOrder is not a valid MTLWinding.
validateMTLLogicOp
logicOperation is not a valid MTLLogicOperation.
blendFactorSource
Invalid blend factor
validateBlendFactorNotDualSourced
MTLRenderPipelineDescriptor color render target(%lu) is using a blend factor (%@)which is can only be used for render target 0
failed assertion %s at line %d in %s. %@
failed assertion %s at line %d in %s
MTLFailureTypeGetErrorModeType
/BuildRoot/Library/Caches/com.apple.xbs/Sources/Metal_Sim/Metal-211.25.3/Framework/MTLDebug.m
failureType < MTLFailureTypeCount
MTLFailureTypeSetErrorModeType
warning
errorCheckExtended
Line
%s, line %u: %s '%s'
METAL_ERROR_MODE
METAL_DEBUG_ERROR_MODE
METAL_WARNING_MODE
METAL_ERROR_CHECK_EXTENDED_MODE
MTLPurgeableStateKeepCurrent
MTLPurgeableStateNonVolatile
MTLPurgeableStateVolatile
MTLPurgeableStateEmpty
MTLResourceCPUCacheModeWriteCombined 
MTLResourceCPUCacheModeDefaultCache 
MTLResourceCPUCacheModeInvalid 
MTLResourceStorageModePrivate 
MTLResourceStorageModeShared 
MTLResourceStorageModeMemoryless 
MTLResourceStorageModeInvalid 
MTLResourceHazardTrackingModeUntracked 
MTLResourceHazardTrackingModeTracked 
MTLResourceHazardTrackingModeDefault 
MTLResourceHazardTrackingModeInvalid 
MTLHazardTrackingModeDefault
MTLHazardTrackingModeUntracked
MTLHazardTrackingModeTracked
memoryPool
virtualSize
residentSize
dirtySize
pageoffRequired
purgeable
char
uchar
bool
float2
half2
int2
uint2
short2
ushort2
char2
uchar2
bool2
float3
half3
int3
uint3
short3
ushort3
char3
uchar3
bool3
float4
half4
int4
uint4
short4
ushort4
char4
uchar4
bool4
validateMTLDataType
type (%lu) is not a valid MTLDataType.
pipelineCollection
%s.metallib
addLibrary_block_invoke
collected two libraries with the same name (%@)
%s%@
v8@?0
%@_%@_%u
getFunctionData
library was not collected for function %@
function %@ was not collected but it is referenced in the descriptor
dumpLibraries_block_invoke
unable to load library data for %@
unable to write library data to %@: %@
writeJSONToFile_block_invoke
writing serialized pipelines to '%@' failed with error: %@
JSONDataNoSync
serialization failed with error: %@
0123456789ABCDEF
This object may only be encoded by an NSXPCCoder.
Port
Label
This object may only be decoded by an NSXPCCoder.
supportsSecureCoding
dispatchQueue
T@"NSObject<OS_dispatch_queue>",R,D
MTLSharedEventListener
T@"<MTLDevice>",R,D
T@"_MTLIndirectArgumentBufferLayout",R,D,N
validateMTLCompareFunction
function is not a valid MTLCompareFunction.
MTLCompareFunctionNever
MTLCompareFunctionLess
MTLCompareFunctionEqual
MTLCompareFunctionLessEqual
MTLCompareFunctionGreater
MTLCompareFunctionNotEqual
MTLCompareFunctionGreaterEqual
MTLCompareFunctionAlways
stencilCompareFunction
stencilFailureOperation
depthFailureOperation
depthStencilPassOperation
readMask
stencilPrivate
Tr^{MTLStencilDescriptorPrivate=QQQQII},R,D
stencilCompareFunction        =
stencilFailureOperation       =
stencilPassDepthFailOperation =
stencilPassDepthPassOperation =
stencilReadMask               =
stencilWriteMask              =
Tr^{MTLStencilDescriptorPrivate=QQQQII},R
depthCompareFunction
depthWriteEnabled
TB,D,N,GisDepthWriteEnabled
frontFaceStencil
T@"MTLStencilDescriptor",C,D,N
backFaceStencil
depthStencilPrivate
Tr^{MTLDepthStencilDescriptorPrivate=@@QB@},R,D
stencilCompareFunction        = MTLCompareFunctionAlways
stencilFailOperation          = MTLStencilOperationKeep
stencilPassDepthFailOperation = MTLStencilOperationKeep
stencilPassDepthPassOperation = MTLStencilOperationKeep
stencilReadMask               = 0xffffffff
stencilWriteMask              = 0xffffffff
depthCompareFunction =
depthWriteEnabled =
frontFace:
backFace:
-[MTLDepthStencilDescriptorInternal setFrontFaceStencil:]
frontFaceStencil is not a MTLStencilDescriptor.
-[MTLDepthStencilDescriptorInternal setBackFaceStencil:]
backFaceStencil is not a MTLStencilDescriptor.
-[MTLDepthStencilDescriptorInternal setLabel:]
Tr^{MTLDepthStencilDescriptorPrivate=@@QB@},R
-[_MTLDepthStencilState initWithDevice:depthStencilDescriptor:]
desc is not a MTLDepthStencilDescriptor.
readsDepth
writesDepth
readsStencil
writesStencil
MTLStencilOperationKeep
MTLStencilOperationZero
MTLStencilOperationReplace
MTLStencilOperationIncrementClamp
MTLStencilOperationDecrementClamp
MTLStencilOperationInvert
MTLStencilOperationIncrementWrap
MTLStencilOperationDecrementWrap
validateMTLStencilOperation
operation is not a valid MTLStencilOperation.
MTLCommandBufferCreationTime
MTLCommandBufferEnqueueTime
MTLCommandBufferCommitTime
MTLCommandBufferSubmitToKernelTime
MTLCommandBufferKernelScheduledTime
MTLCommandBufferSubmitToHWTime
MTLCommandBufferCompletionInterruptTime
MTLCommandBufferKernelCompleteTime
MTLCommandBufferCompletionHandlerEnqueueTime
MTLCommandBufferCompletionHandlerExecutionTime
-[_MTLCommandBuffer initWithQueue:retainedReferences:synchronousDebugMode:]
queue must not be nil.
queue is not a MTLCommandQueue.
commandQueue =
retainedReferences =
-[_MTLCommandBuffer enqueue]
enqueue an already enqueued command buffer
-[_MTLCommandBuffer commit]
commit an already committed command buffer
commit command buffer with uncommitted encoder
-[_MTLCommandBuffer commitAndHold]
-[_MTLCommandBuffer commitAndReset]
Command buffer failed
-[_MTLCommandBuffer addScheduledHandler:]
Scheduler handler provided after commit call
-[_MTLCommandBuffer presentDrawable:]
drawable must not be nil.
presentedTime
Td,R,N
drawableID
TQ,R,N
drawable is not a MTLDrawable.
v16@?0@"<MTLDrawable>"8
-[_MTLCommandBuffer presentDrawable:atTime:]
-[_MTLCommandBuffer presentDrawable:afterMinimumDuration:]
-[_MTLCommandBuffer addCompletedHandler:]
Completed handler provided after commit call
-[_MTLCommandBuffer didScheduleWithStartTime:endTime:error:]
Execution of the command buffer was aborted due to an error during execution. %@
-[_MTLCommandBuffer didCompleteWithStartTime:endTime:error:]
-[_MTLCommandBuffer pushDebugGroup:]
TB,R,V_retainedReferences
synchronousDebugMode
TB,R,V_synchronousDebugMode
T@"<MTLCommandQueue>",R,V_queue
TQ,R,V_status
profilingEnabled
TB,GisProfilingEnabled
profilingResults
userDictionary
T@"NSMutableDictionary",R,N
StatEnabled
TB,N,GisStatEnabled,V_StatEnabled
numThisCommandBuffer
TQ,N,V_numThisCommandBuffer
numEncoders
TQ,N,V_numEncoders
listIndex
TQ,N,GgetListIndex,V_listIndex
ownedByParallelEncoder
TB,N,V_ownedByParallelEncoder
validateMTLAttributeFormat
vertexFormat is not a valid MTLAttributeFormat / MTLAttributeFormat.
MTLAttributeFormatAlignment
MTLAttributeFormatSize
MTLAttributeFormatUChar2
MTLAttributeFormatUChar3
MTLAttributeFormatUChar4
MTLAttributeFormatChar2
MTLAttributeFormatChar3
MTLAttributeFormatChar4
MTLAttributeFormatUChar2Normalized
MTLAttributeFormatUChar3Normalized
MTLAttributeFormatUChar4Normalized
MTLAttributeFormatChar2Normalized
MTLAttributeFormatChar3Normalized
MTLAttributeFormatChar4Normalized
MTLAttributeFormatUShort2
MTLAttributeFormatUShort3
MTLAttributeFormatUShort4
MTLAttributeFormatShort2
MTLAttributeFormatShort3
MTLAttributeFormatShort4
MTLAttributeFormatUShort2Normalized
MTLAttributeFormatUShort3Normalized
MTLAttributeFormatUShort4Normalized
MTLAttributeFormatShort2Normalized
MTLAttributeFormatShort3Normalized
MTLAttributeFormatShort4Normalized
MTLAttributeFormatHalf2
MTLAttributeFormatHalf3
MTLAttributeFormatHalf4
MTLAttributeFormatFloat
MTLAttributeFormatFloat2
MTLAttributeFormatFloat3
MTLAttributeFormatFloat4
MTLAttributeFormatInt
MTLAttributeFormatInt2
MTLAttributeFormatInt3
MTLAttributeFormatInt4
MTLAttributeFormatUInt
MTLAttributeFormatUInt2
MTLAttributeFormatUInt3
MTLAttributeFormatUInt4
MTLAttributeFormatInt1010102Normalized
MTLAttributeFormatUInt1010102Normalized
MTLAttributeFormatUChar4Normalized_BGRA
MTLAttributeFormatUInt_VertexID
MTLAttributeFormatUInt_InstanceID
MTLAttributeFormatInvalid
MTLAttributeFormatUChar
MTLAttributeFormatChar
MTLAttributeFormatUCharNormalized
MTLAttributeFormatCharNormalized
MTLAttributeFormatUShort
MTLAttributeFormatShort
MTLAttributeFormatUShortNormalized
MTLAttributeFormatShortNormalized
MTLAttributeFormatHalf
-[MTLVertexBufferLayoutDescriptorInternal setStride:]
-[MTLVertexBufferLayoutDescriptorArrayInternal objectAtIndexedSubscript:]
-[MTLVertexBufferLayoutDescriptorArrayInternal setObject:atIndexedSubscript:]
-[MTLVertexAttributeDescriptorInternal setBufferIndex:]
-[MTLVertexAttributeDescriptorInternal setOffset:]
-[MTLVertexAttributeDescriptorArrayInternal objectAtIndexedSubscript:]
-[MTLVertexAttributeDescriptorArrayInternal setObject:atIndexedSubscript:]
T@"MTLVertexBufferLayoutDescriptorArray",R,D
T@"MTLVertexAttributeDescriptorArray",R,D
-[MTLVertexDescriptorInternal newSerializedDescriptor]
MTLVertexDescriptor
MTLVertexDescriptorDescription
stepFunction is not a valid MTLVertexStepFunction.
MTLVertexStepFunctionPerVertex not allowed with postTessellationVertexFunction.
stepRate(%lu) must be one if stepFunction is MTLVertexStepFunctionPerVertex.
stepRate(%lu) cannot be zero if stepFunction is MTLVertexStepFunctionPerInstance.
stepRate(%lu) must be zero if stepFunction is MTLVertexStepFunctionConstant.
MTLVertexStepFunctionPerPatch requires postTessellationVertexFunction.
stepRate(%lu) must be one if stepFunction is MTLVertexStepFunctionPerPatch.
MTLVertexStepFunctionPerPatchControlPoint requires postTessellationVertexFunction.
stepRate(%lu) must be one if stepFunction is MTLVertexStepFunctionPerPatchAndPerInstance.
MTLVertexStepFunctionConstant
MTLVertexStepFunctionPerVertex
MTLVertexStepFunctionPerInstance
MTLVertexStepFunctionPerPatch
MTLVertexStepFunctionPerPatchControlPoint
-[_MTLCommandQueue initWithDevice:descriptor:]
invalid descriptor.maxCommandBufferCount value %u
invalid descriptor.qosLevel value %u
cannot create command-buffer counting semaphore
com.Metal.CommandQueueDispatch
com.Metal.CompletionQueueDispatch
cannot create presentation semaphore
METAL_FORCE_IMMEDIATE_SUBMISSION
-[_MTLCommandQueue enqueueCommandBuffer:]
commandBuffer is associated with a different device
-[_MTLCommandQueue completeCommandBuffers:count:]
-[_MTLCommandQueue commitCommandBuffer:wake:]
-[_MTLCommandQueue commandBufferDidComplete:startTime:completionTime:error:]
-[_MTLCommandQueue availableCounters]
false
Metal Vendor Statistics not implemented
-[_MTLCommandQueue requestCounters:]
maxCommandBufferCount
TQ,R,V_maxCommandBufferCount
qosLevel
TQ,R,V_qosLevel
commitQueue
T@"NSObject<OS_dispatch_queue>",R,V_commitQueue
commitSynchronously
TB,R,V_commitSynchronously
completionQueue
T@"NSObject<OS_dispatch_queue>",R,V_completionQueue
disableCrossQueueHazardTracking
TB,R,V_disableCrossQueueHazardTracking
isOpenGLQueue
TB,R,V_openGLQueue
backgroundTrackingPID
Ti,V_backgroundTrackingPID
skipRender
TB,V_skipRender
executionEnabled
TB,V_executionEnabled
TB,GisProfilingEnabled,V_profilingEnabled
StatOptions
TQ,N,GgetStatOptions,V_StatOptions
StatLocations
TQ,N,GgetStatLocations,V_StatLocations
numCommandBuffers
TQ,N,V_numCommandBuffers
T@"NSObject<OS_dispatch_queue>",D,N
maxCommandBufferCount =
qosLevel =
commitQueue =
commitSynchronously =
completionQueue =
disableCrossQueueHazardTracking =
TB,V_openGLQueue
MTLQosExclusive
MTLQosHigh
MTLQosMedium
MTLQosLow
MTLQosOpportunistic
Quad Reduction
Client storage textures
Argument Buffers Tier 2
Read-Write Texture Arguments Tier 2
Programmable Sample Positions
BC-format texture compression
BC-format textures with MTLTextureType3D
Framebuffer sizes larger than 64 bytes
MTLClampToBorder with custom color
Clamp to half border
32bits per channel MSAA textures
Placement heaps
YUV pixel formats
Non-Private Depth/Stencil textures
Non-Private MSAA textures
Linear textures from shared buffers
Pipeline Libraries
Fragment Only Render Encoders
Create a buffer from an IOSurface
Programmable Blending
Render To Linear Textures
Memoryless Render Targets
Fast Math Inf/NaN Propagation
Invariant Vertex Position
LOD Average in shaders
sRGB views without MTLTextureUsagePixelFormatView
separate depth/stencil
gpu statistics
ASTC-format texture compression
Extended YUV pixel formats
XR10 pixel formats
sRGBwrites
Depth Clip Mode
Packed 32-bit format Texture Buffer Writes
ASTC-format textures with MTLTextureType3D
Extended XR10 pixel formats
Writes to buffers from fragment functions
Counting Occlusion Query
Base Vertex Instance Drawing
Indirect draw & dispatch arguments
Tessellation
Read-Write Buffer Arguments
Array Of Textures
Array Of Samplers
Combined MSAA Store And Resolve Action
Mutable Tier1 Argument Buffers
Sampler Compare Function
MSAA Depth Resolve
MSAA Stencil Resolve
MSAA Depth Resolve Filter
Indirect Command Buffers for graphics
Indirect Command Buffers for compute
Indirect Stage In Region
Indirect texture access
Bicubic filtering of 16-bit normalized values
Out of Bounds Reads on Textures
Texture Swizzle
YUV + Alpha pixel formats
Atomic functions with memory order
Support quad_group* attributes in kernel functions
Writes to textures from vertex and fragment functions
Image Blocks
Tile Shaders
Image Block Sample Coverage Control
FP16 on native hardware
Post-Depth Coverage
Mip Levels smaller than Block Size
Dispatch Threads with Non-Uniform Threadgroup Size
Read-Write Texture Arguments
Read-Write Texture Cube Arguments
Texture Cube Array
QUAD Shuffles And Broadcast
Concurrent Compute Dispatch
A Render Pass without a Render Target
Raster Order Groups
Linear Texture 2D arrays
Non-Square Tile Shaders
Separate Visibility And Shading Rate
2D Linear Texture Array
Layered Rendering
Viewport and Scissor Array
Indirect Tessellation
MSAA Stencil Resolve Filter
Stencil Feedback
FP32 Tessellation Factors
Support simd_group* attributes in kernel functions
Shader Min LOD Clamp
SIMD Shuffles And Broadcast
Barycentrics coordinates and PrimitiveID
Black Or White Sampler Border Colors
MirrorClampToEdge Sampler Mode
SIMD Reduction
DepthClipModeClamp with zMin != 0 or zMax != 1
Texture 2D Multisample Array
Force seams on cubemap filtering
Bicubic filtering of 16-bit float values
N13MTLSerializer20ObjectListSerializerE
N13MTLSerializer16ObjectSerializerE
N28MTLPipelineLibrarySerializer25PipelineLibrarySerializerE
N28MTLPipelineLibrarySerializer25NamedObjectJSONSerializerE
N28MTLPipelineLibrarySerializer21NamedObjectSerializerE
N28MTLPipelineLibrarySerializer16ObjectSerializerE
N28MTLPipelineLibrarySerializer24JSONSerializationContextE
N28MTLPipelineLibrarySerializer20SerializationContextE
N28MTLPipelineLibrarySerializer29PipelineLibraryJSONSerializerE
N28MTLPipelineLibrarySerializer26BinarySerializationContextE
N28MTLPipelineLibrarySerializer31PipelineLibraryBinarySerializerE
N28MTLPipelineLibrarySerializer35PipelineDescriptorSerializerPrivateE
N28MTLPipelineLibrarySerializer28PipelineDescriptorSerializerE
N28MTLPipelineLibrarySerializer30PipelineDescriptorDeserializerE
N28MTLPipelineLibrarySerializer36PipelineDescriptorBinaryDeserializerE
N13MTLSerializer26DirectObjectListSerializerE
N13MTLSerializer22PropertyListSerializerE
N13MTLSerializer16StringSerializerE
N28MTLPipelineLibrarySerializer27NamedObjectBinarySerializerE
N13MTLSerializer29CompactPropertyListSerializerE
N13MTLSerializer15ArraySerializerIjEE
N13MTLSerializer21ObjectArraySerializerINS_9ObjectRefEEE
_16MTLCompilerCache
18MTLCompilerFSCache
20MTLPipelineDataCache
29MTLInputStageReflectionReader
21MTLArgumentListReader
25MTLVertexReflectionReader
26MTLComputeReflectionReader
26MTLCompilerFunctionRequest
18MTLCompilerRequest
18CompilerConnection
21XPCCompilerConnection
35MTLCompilerConnectionManagerPrivate
28MTLCompilerConnectionManager
37SpecialPipelineDescriptorDeserializer
NSt3__120__shared_ptr_emplaceI23MTLPipelineDescriptionsNS_9allocatorIS1_EEEE
C25MTLLibraryDataWithArchive
20MTLCachedLibraryData
14MTLLibraryData
24MTLLibraryDataWithSource
22MTLLibraryDataWithGLIR
15LibraryWithFile
15LibraryWithData
27MTLFragmentReflectionReader
Failed to get Metal shader cache main folder: shader cache main folder was overriden and the path is too long (max length %zu)
Failed to get Metal shader cache main folder: search path for cache directory had path count of 0
Failed to get Metal shader cache main folder: caches directory path was nil
Failed to get Metal shader cache main folder: path for application cache was not found (errno = %u)
Failed to get Metal shader cache main folder: mkdir failed to create compiler cache path (errno = %u)
Failed to get Metal shader cache main folder: insufficient permissions to Metal compiler cache path (errno = %u)
fscache_open returned a NULL pointer but no error.
MTLCompiler: failed to ping the compiler service %u times over %f ms
compiling shader
MTLCompiler: Compilation failed with XPC_ERROR_CONNECTION_INTERRUPTED on %d try
MTLCompiler: Creating a new compiler connection
Compiler failed to build request
Compiler failed with XPC_ERROR_CONNECTION_INTERRUPTED
Compiler failed with XPC_ERROR_CONNECTION_INVALID
Compiler failed with XPC_ERROR_TERMINATION_IMMINENT
Compiler failed with unknown XPC error
could not open MTLSimDriver!
could not find symbol MTLCreateSimulatorDevice
Invalid metallib file (reached unexpected end of file)
Invalid metallib file (missing token)
failed to open metal library with error: %s
%s, line %u: %s '%s'
Execution of the command buffer was aborted due to an error during execution. %s
_PipelineLibrarySerializer
MTLCaptureScope
NSObject
MTLBufferLayoutDescriptor
NSCopying
MTLBufferLayoutDescriptorInternal
MTLBufferLayoutDescriptorArray
MTLBufferLayoutDescriptorArrayInternal
MTLAttributeDescriptor
MTLAttributeDescriptorInternal
MTLAttributeDescriptorArray
MTLAttributeDescriptorArrayInternal
MTLStageInputOutputDescriptor
MTLStageInputOutputDescriptorInternal
_MTLIndirectArgumentBufferLayout
_MTLIndirectArgumentEncoder
MTLArgumentEncoder
MTLEmulationIndirectArgumentBufferLayout
MTLEmulationIndirectArgumentEncoder
MTLArgumentEncoderSPI
MTLIndirectArgumentBufferEmulationData
_MTLIndirectDrawArguments
_MTLIndirectDrawIndexedArguments
_MTLIndirectDrawPatchesArguments
_MTLIndirectDrawIndexedPatchesArguments
_MTLIndirectTessellationFactorArguments
_MTLIndirectDispatchThreadgroupsArguments
_MTLIndirectDispatchThreadsArguments
MTLNamedConstantValue
MTLIndexedConstantValue
MTLFunctionConstantValues
MTLFunctionConstantValuesInternal
MTLFunctionConstantSPI
MTLBufferArgument
MTLIndirectConstantArgument
MTLThreadgroupMemoryArgument
MTLTextureArgument
MTLBuiltInArgument
_MTLObjectWithLabel
MTLPipelineBufferDescriptor
MTLPipelineBufferDescriptorInternal
MTLPipelineBufferDescriptorArray
MTLPipelineBufferDescriptorArrayInternal
MTLDebugLocation
MTLDebugSubProgram
MTLDebugInstrumentationData
MTLIndirectArgumentDescriptorInternal
MTLIndirectArgumentDescriptor
MTLArgumentDescriptorInternal
MTLArgumentDescriptor
_MTLDevice
MTLTextureDescriptor
MTLTextureDescriptorInternal
MTLIndirectCommandBufferDescriptor
MTLIndirectCommandBufferDescriptorInternal
_MTLPipelineCache
MTLPipelineCache
_MTLPipelineLibrary
MTLPipelineLibrarySPI
MTLPipelineLibrary
MTLDevice
MTLDeviceSPI
MTLCommandBuffer
_MTLParallelRenderCommandEncoder
MTLParallelRenderCommandEncoder
MTLCommandEncoder
MTLCaptureDescriptor
MTLCaptureError
MTLCaptureManager
MTLResourceListPool
_MTLUtilityBuffer
MTLSamplerDescriptor
MTLSamplerDescriptorInternal
_MTLSamplerState
MTLSamplerStateSPI
MTLSamplerState
MTLHeapDescriptor
MTLHeapDescriptorInternal
_MTLHeap
MTLCompileOptions
MTLCompileOptionsInternal
MTLVertexAttribute
MTLVertexAttributeInternal
MTLAttribute
MTLAttributeInternal
MTLFunctionConstant
MTLFunctionConstantInternal
MTLFunctionReflection
MTLFunctionReflectionInternal
_MTLLibrary
MTLLibrarySPI
MTLLibrary
_MTLFunction
MTLFunctionSPI
MTLFunction
_MTLFunctionInternal
MTLFunctionVariant
MTLCompiler
_MTLIndirectRenderCommand
MTLIndirectRenderCommandSPI
MTLIndirectRenderCommand
MTLRenderPassAttachmentDescriptor
MTLRenderPassColorAttachmentDescriptor
MTLRenderPassDepthAttachmentDescriptor
MTLRenderPassStencilAttachmentDescriptor
MTLTextureImplementation
MTLTextureSPI
MTLTexture
MTLResource
MTLResourceSPI
MTLRenderPassColorAttachmentDescriptorInternal
MTLRenderPassDepthAttachmentDescriptorInternal
MTLRenderPassStencilAttachmentDescriptorInternal
MTLRenderPassColorAttachmentDescriptorArray
MTLRenderPassColorAttachmentDescriptorArrayInternal
MTLRenderPassDescriptor
MTLBuffer
MTLRenderPassDescriptorInternal
_MTLCommandEncoder
MTLComputePipelineReflection
MTLComputePipelineReflectionInternal
MTLComputePipelineDescriptor
MTLComputePipelineDescriptorInternal
_MTLComputePipelineState
MTLComputePipelineState
_MTLIndirectComputeCommand
MTLIndirectComputeCommandSPI
MTLIndirectComputeCommand
_MTLDebugCommandEncoder
MTLDebugCommandEncoder
MTLStructType
MTLStructTypeInternal
MTLType
MTLTypeInternal
MTLPointerType
MTLPointerTypeInternal
MTLTextureReferenceType
MTLTextureReferenceTypeInternal
MTLStructMember
MTLStructMemberInternal
MTLArrayType
MTLArrayTypeInternal
MTLArgument
MTLArgumentInternal
MTLPostVertexDumpOutput
MTLInferredInput
MTLRenderPipelineColorAttachmentDescriptor
MTLRenderPipelineColorAttachmentDescriptorInternal
MTLRenderPipelineReflection
MTLRenderPipelineReflectionInternal
MTLRenderPipelineColorAttachmentDescriptorArray
MTLRenderPipelineColorAttachmentDescriptorArrayInternal
MTLRenderPipelineDescriptor
MTLRenderPipelineDescriptorInternal
_MTLRenderPipelineState
MTLRenderPipelineState
MTLResourceList
MTLResourceAllocationInfo
NSCoding
MTLSharedEventHandle
NSSecureCoding
MTLSharedEventListener
MTLSharedEventListenerInternal
_MTLResourceIndirectedArgumentEncoder
MTLStencilDescriptor
Driver
MTLStencilDescriptorInternal
MTLDepthStencilDescriptor
MTLDepthStencilDescriptorInternal
_MTLDepthStencilState
MTLDepthStencilStateSPI
MTLDepthStencilState
MTLCommandQueue
MTLDrawable
_MTLCommandBuffer
MTLVertexBufferLayoutDescriptor
MTLVertexBufferLayoutDescriptorInternal
MTLVertexBufferLayoutDescriptorArray
MTLVertexBufferLayoutDescriptorArrayInternal
MTLVertexAttributeDescriptor
MTLVertexAttributeDescriptorInternal
MTLVertexAttributeDescriptorArray
MTLVertexAttributeDescriptorArrayInternal
MTLVertexDescriptor
MTLVertexDescriptorInternal
_MTLCommandQueue
MTLCommandQueueDescriptor
MTLCommandQueueDescriptorInternal
_MTLDeviceFeatureQueries
MTLDeviceFeatureQueries
init
dealloc
addLibrary:
addSpecializedFunction:descriptor:
addRenderPipelineDescriptor:
addComputePipelineDescriptor:
totalSize
writeToMemory:size:
_binarySerializer
isEqual:
class
self
performSelector:
performSelector:withObject:
performSelector:withObject:withObject:
isProxy
isKindOfClass:
isMemberOfClass:
conformsToProtocol:
respondsToSelector:
retain
release
autorelease
retainCount
zone
hash
superclass
description
debugDescription
beginScope
endScope
label
setLabel:
device
commandQueue
initWithDevice:commandQueue:
_device
_commandQueue
allocWithZone:
stride
stepFunction
stepRate
alloc
copyWithZone:
setStride:
setStepFunction:
setStepRate:
_stride
_stepFunction
_instanceStepRate
objectAtIndexedSubscript:
setObject:atIndexedSubscript:
copy
_descriptors
format
offset
bufferIndex
setFormat:
setBufferIndex:
setOffset:
_vertexFormat
_offset
_bufferIndex
stageInputOutputDescriptor
reset
formattedDescription:
stringWithFormat:
vertexAttributes
countByEnumeratingWithState:objects:count:
attributeIndex
isActive
name
attributeType
vertexDescriptor
layouts
attributes
indexType
setIndexType:
indexBufferIndex
setIndexBufferIndex:
newSerializedDescriptor
validateWithVertexFunction:error:
_vertexBufferArray
_attributeArray
_indexBufferIndex
_indexType
stringByPaddingToLength:withString:startingAtIndex:
arrayWithCapacity:
arrayWithObjects:count:
addObjectsFromArray:
numberWithUnsignedInteger:
numberWithInt:
componentsJoinedByString:
addObject:
initWithFormat:arguments:
dictionaryWithObject:forKey:
errorWithDomain:code:userInfo:
newNamedConstantArray
newIndexedConstantArray
dataType
data
index
UTF8String
pixelFormat
isBlendingEnabled
sourceRGBBlendFactor
destinationRGBBlendFactor
rgbBlendOperation
sourceAlphaBlendFactor
destinationAlphaBlendFactor
alphaBlendOperation
writeMask
mutability
stringWithUTF8String:
numberWithFloat:
numberWithUnsignedInt:
numberWithShort:
numberWithUnsignedShort:
numberWithChar:
numberWithUnsignedChar:
setObject:forKeyedSubscript:
numberWithBool:
dictionaryWithObjects:forKeys:count:
objectForKeyedSubscript:
functionRef
setComputeFunction:
setThreadGroupSizeIsMultipleOfThreadExecutionWidth:
setMaxTotalThreadsPerThreadgroup:
setSupportIndirectCommandBuffers:
initWithUTF8String:
stageInputDescriptor
setStageInputDescriptor:
buffers
setVertexFunction:
setFragmentFunction:
setVertexDescriptor:
setRasterSampleCount:
setAlphaToCoverageEnabled:
setAlphaToOneEnabled:
setRasterizationEnabled:
setSampleCoverage:
setSampleMask:
colorAttachments
setDepthAttachmentPixelFormat:
setStencilAttachmentPixelFormat:
setTessellationPartitionMode:
setMaxTessellationFactor:
setTessellationFactorScaleEnabled:
setTessellationFactorFormat:
setTessellationControlPointIndexType:
setTessellationFactorStepFunction:
setTessellationOutputWindingOrder:
setVertexEnabled:
vertexBuffers
fragmentBuffers
functionWithFunctionRef:
setMutability:
setPixelFormat:
setBlendingEnabled:
setSourceRGBBlendFactor:
setDestinationRGBBlendFactor:
setRgbBlendOperation:
setSourceAlphaBlendFactor:
setDestinationAlphaBlendFactor:
setAlphaBlendOperation:
setWriteMask:
array
isIndirectArgumentBuffer
members
structType
arrayType
elementType
elementStructType
elementArrayType
elementIsArgumentBuffer
elementTypeDescription
newIndirectArgumentBufferLayoutWithStructType:
setStructType:withDevice:
arrayLength
indirectArgumentIndex
dataTypeDescription
doesNotRecognizeSelector:
virtualAddressForBufferAtIndex:inIndirectArgumentBuffer:atOffset:
uniqueIdentifierForTextureAtIndex:inIndirectArgumentBuffer:atOffset:
uniqueIdentifierForSamplerAtIndex:inIndirectArgumentBuffer:atOffset:
uniqueIdentifierForRenderPipelineAtIndex:inIndirectArgumentBuffer:atOffset:
uniqueIdentifierForComputePipelineAtIndex:inIndirectArgumentBuffer:atOffset:
uniqueIdentifierForIndirectCommandBufferAtIndex:inIndirectArgumentBuffer:atOffset:
bufferLayoutMatchesFrontEndLayout
encodedLength
alignment
hashValue
hashOffset
hashMask
hashSignature
constantOffsetAtIndex:
bufferLayoutForResourceAtIndex:
_private
setArgumentBuffer:offset:
setIndirectArgumentBuffer:offset:
newArgumentEncoderWithLayout:
setArgumentBuffer:startOffset:arrayElement:
setBuffer:offset:atIndex:
setBuffers:offsets:withRange:
setTexture:atIndex:
setTextures:withRange:
setSamplerState:atIndex:
setSamplerStates:withRange:
constantDataAtIndex:
setRenderPipelineState:atIndex:
setRenderPipelineStates:withRange:
setComputePipelineState:atIndex:
setComputePipelineStates:withRange:
setIndirectCommandBuffer:atIndex:
setIndirectCommandBuffers:withRange:
newArgumentEncoderForBufferAtIndex:
initWithLayout:device:
layout
_layout
type
elementIndirectArgumentType
count
indirectArgumentType
setDataSize:
setAlignment:
bufferStructType
bufferDataType
contents
offsetForBuffer:
offsetForTexture:
offsetForSampler:
offsetForConstant:
initWithStructType:
_alignment
_bufferIndices
_textureIndices
_samplerIndices
_constantIndices
_constantOffsets
_bufferOffset
_textureOffset
_samplerOffset
_destination
_emulationLayout
initWithData:
bindIndirectArgumentsWithFunctions:
_dataMap
_dataPtr
_dataSize
isConstantBuffer
minConstantBufferAlignmentBytes
setAlignment:dataSize:
primitiveType
setPrimitiveType:
vertexStart
setVertexStart:
vertexCount
setVertexCount:
instanceCount
setInstanceCount:
baseInstance
setBaseInstance:
_primitiveType
_vertexStart
_vertexCount
_instanceCount
_baseInstance
indexCount
setIndexCount:
indexBufferVirtualAddress
setIndexBufferVirtualAddress:
indexBufferOffset
setIndexBufferOffset:
baseVertex
setBaseVertex:
_indexCount
_indexBufferVirtualAddress
_indexBufferOffset
_baseVertex
numberOfPatchControlPoints
setNumberOfPatchControlPoints:
patchStart
setPatchStart:
patchCount
setPatchCount:
patchIndexBufferVirtualAddress
setPatchIndexBufferVirtualAddress:
patchIndexBufferOffset
setPatchIndexBufferOffset:
_numberOfPatchControlPoints
_patchStart
_patchCount
_patchIndexBufferVirtualAddress
_patchIndexBufferOffset
controlPointIndexBufferVirtualAddress
setControlPointIndexBufferVirtualAddress:
_controlPointIndexBufferVirtualAddress
_controlPointIndexBufferOffset
virtualAddress
setVirtualAddress:
instanceStride
setInstanceStride:
scale
setScale:
_virtualAddress
_instanceStride
_scale
threadgroupsPerGrid
setThreadgroupsPerGrid:
threadsPerThreadgroup
setThreadsPerThreadgroup:
_threadgroupsPerGrid
_threadsPerThreadgroup
threadsPerGrid
setThreadsPerGrid:
_threadsPerGrid
initWithDomain:code:userInfo:
readWriteTextureSupport
supportsFamily:
initWithValue:type:name:
describe
_name
_dataType
_data
initWithValue:type:index:
_index
setConstantValue:type:atIndex:
setConstantValues:type:withRange:
setConstantValue:type:withName:
functionConstants
required
serializedConstantDataForFunction:dataSize:errorMessage:
constantValueWithFunctionConstant:
_constantStorage
initWithName:type:access:index:active:arrayLength:
initWithElementType:elementTypeDescription:access:alignment:dataSize:elementIsIndirectArgumentBuffer:isConstantBuffer:
initWithElementType:elementTypeDescription:access:alignment:dataSize:elementIsIndirectArgumentBuffer:isConstantBuffer:doRetain:
initWithName:type:access:isActive:locationIndex:arraySize:dataType:isConstantBuffer:dataSize:alignment:
setVertexDescriptorBuffer:
isVertexDescriptorBuffer
setStructType:doRetain:
setStructType:
bufferAlignment
bufferDataSize
bufferPointerType
bufferIndirectArgumentType
_vertexDescriptorBuffer
initWithName:type:access:isActive:locationIndex:dataType:dataSize:alignment:
indirectConstantAlignment
indirectConstantDataType
indirectConstantDataSize
threadgroupMemoryStructType
initWithName:type:access:isActive:locationIndex:arraySize:dataType:dataSize:alignment:
threadgroupMemoryAlignment
threadgroupMemoryDataSize
threadgroupMemoryDataType
initWithDataType:textureType:access:isDepthTexture:
initWithName:access:isActive:locationIndex:arraySize:dataType:textureType:isDepthTexture:
textureType
isDepthTexture
textureDataType
_textureType
_isDepthTexture
_textureDataType
initWithName:type:access:active:index:dataType:builtInType:
builtInDataType
builtInType
_builtInType
_builtInDataType
indirectArgumentIndexStride
access
render_target
raster_order_group
initWithName:offset:dataType:indirectArgumentIndex:render_target:raster_order_group:details:
setMembers:count:
setIsIndirectArgumentBuffer:
stringWithCString:encoding:
initWithArrayLength:elementType:stride:details:
setArgumentIndexStride:
initWithAirMDType:dataType:name:offset:
initWithDataType:offset:bufferIndex:stride:stepFunction:stepRate:baseInstanceUnused:
retainedLabel
_label
_labelLock
_descriptorPrivate
_descriptorAtIndex:
debugSubProgramForID:
debugLocationForID:
inlinedAt
scope
filename
line
column
releaseInternal
_debugLoc
stringForID:
_debugSubProgram
hasBacktrackingFailures
.cxx_destruct
.cxx_construct
_strings
_debugLocations
_debugSubPrograms
indirectArgumentDescriptor
setDataType:
setIndex:
setArrayLength:
setAccess:
setTextureType:
constantBlockAlignment
setConstantBlockAlignment:
argumentDescriptor
supportForFeature:
initGPUFamilySupport
featureQueryClass
initWithDevice:
validate
featureProfile
compiler
getShaderCacheKeys
stringByExpandingTildeInPath
startCollectingPipelineDescriptors
initSerializationPaths
isCollectingLibraries
fileSystemRepresentation
indirectArgumentBufferCapabilities
vendorName
familyName
productName
whitespaceAndNewlineCharacterSet
componentsSeparatedByCharactersInSet:
isEqualToString:
serializeStructType:version:
unloadShaderCaches
libraryCacheStats
pipelineCacheStats
mainBundle
pathForResource:ofType:
isCollectingPipelines
dumpPipelineDescriptorsIfRequested
newComputePipelineStateWithDescriptor:error:
newComputePipelineStateWithDescriptor:completionHandler:
newComputePipelineStateWithDescriptor:options:reflection:error:
newComputePipelineStateWithDescriptor:options:completionHandler:
newFunctionWithName:
newComputePipelineStateWithFunction:error:
newLibraryWithCIFilters:imageFilterFunctionInfo:error:
deviceOrFeatureProfileSupportsFeatureSet:
deviceSupportsFeatureSet:
featureProfile:supportsFeatureSet:
argumentBuffersSupport
maxBufferLength
limits
newRenderPipelineStateWithDescriptor:options:reflection:error:completionHandler:
newComputePipelineStateWithDescriptor:options:reflection:error:completionHandler:
fragmentFunctionKeyWithRenderPipelineDescriptor:fragmentKeySize:previousStateVariant:
vertexFunctionKeyWithRenderPipelineDescriptor:vertexKeySize:nextStageVariant:
computeFunctionKeyWithComputePipelineDescriptor:keySize:
computeVariantWithCompilerOutput:pipelineStatisticsOutput:
fragmentVariantWithCompilerOutput:pipelineStatisticsOutput:
vertexVariantWithCompilerOutput:pipelineStatisticsOutput:
newRenderPipelineWithDescriptor:vertexVariant:fragmentVariant:
newComputePipelineWithDescriptor:variant:
supportsSampleCount:
deviceLinearTextureAlignmentBytes
_purgeDevice
newCommandQueueWithDescriptor:
setMaxCommandBufferCount:
supportsTextureSampleCount:
initWithMembers:count:
newArgumentEncoderWithArguments:structType:
newIndirectArgumentEncoderWithLayout:
setUtilityBufferRequired:
utilityBuffers
utilityBufferForComputeCommandEncoder:
utilityBufferForRenderCommandEncoder:
newBufferWithLength:options:
resourceIndex
removeResourceFromGlobalResourceTable:resourceType:
setResourceIndex:
addBufferToGlobalResourceTable:
newBufferWithBytes:length:options:
newBufferWithBytesNoCopy:length:options:deallocator:
useDeviceResourceTableForType:
reserveResourceIndicesForResourceType:indices:indexCount:
addTextureToGlobalResourceTable:
addSamplerStateToGlobalResourceTable:
addComputePipelineStateToGlobalResourceTable:
addRenderPipelineStateToGlobalResourceTable:
addIndirectCommandBufferToGlobalResourceTable:
useNewPrimitiveRestartBehavior
supportsQuadReduction
supportsBufferlessClientStorageTexture
supportsArgumentBuffersTier2
supportsReadWriteTextureArgumentsTier2
supportsProgrammableSamplePositions
supportsBCTextureCompression
supports3DBCTextures
supportsLargeFramebufferConfigs
supportsCustomBorderColor
supportsSamplerAddressModeClampToHalfBorder
supports32bpcMSAATextures
supportsPlacementHeaps
supportsLimitedYUVFormats
supportsNonPrivateDepthStencilTextures
supportsNonPrivateMSAATextures
supportsLinearTextureFromSharedBuffer
supportsPipelineLibraries
supportsFragmentOnlyEncoders
supportsBufferWithIOSurface
supportsProgrammableBlending
supportsRenderToLinearTextures
supportsMemorylessRenderTargets
supportsFastMathInfNaNPropagation
supportsInvariantVertexPosition
supportsShaderLODAverage
supportsRelaxedTextureViewRequirements
supportsSeparateDepthStencil
supportsGPUStatistics
supportsASTCTextureCompression
supportsExtendedYUVFormats
supportsPublicXR10Formats
supportsSRGBwrites
supportsDepthClipMode
supportsPacked32TextureBufferWrites
supports3DASTCTextures
supportsExtendedXR10Formats
supportsFragmentBufferWrites
supportsCountingOcclusionQuery
supportsBaseVertexInstanceDrawing
supportsIndirectDrawAndDispatch
supportsTessellation
supportsReadWriteBufferArguments
supportsArrayOfTextures
supportsArrayOfSamplers
supportsCombinedMSAAStoreAndResolveAction
supportsMutableTier1ArgumentBuffers
supportsSamplerCompareFunction
supportsMSAADepthResolve
supportsMSAAStencilResolve
supportsMSAADepthResolveFilter
supportsGFXIndirectCommandBuffers
supportsCMPIndirectCommandBuffers
supportsIndirectStageInRegion
supportsIndirectTextures
supportsNorm16BCubicFiltering
supportsTextureOutOfBoundsReads
supportsTextureSwizzle
supportsAlphaYUVFormats
supportsMemoryOrderAtomics
supportsQuadGroup
supportsRenderTextureWrites
supportsImageBlocks
supportsTileShaders
supportsImageBlockSampleCoverageControl
supportsNativeHardwareFP16
supportsPostDepthCoverage
supportsMipLevelsSmallerThanBlockSize
supportsNonUniformThreadgroupSize
supportsReadWriteTextureArguments
supportsReadWriteTextureCubeArguments
supportsTextureCubeArray
supportsQuadShufflesAndBroadcast
supportsConcurrentComputeDispatch
supportsRenderPassWithoutRenderTarget
supportsRasterOrderGroups
supportsLinearTexture2DArray
supportsNonSquareTileShaders
supportsSeparateVisibilityAndShadingRate
supports2DLinearTexArraySPI
supportsLayeredRendering
supportsViewportAndScissorArray
supportsIndirectTessellation
supportsMSAAStencilResolveFilter
supportsStencilFeedback
supportsFP32TessFactors
supportsSIMDGroup
supportsShaderMinLODClamp
supportsSIMDShufflesAndBroadcast
supportsShaderBarycentricCoordinates
supportsBlackOrWhiteSamplerBorderColors
supportsMirrorClampToEdgeSamplerMode
supportsSIMDReduction
supportsDepthClipModeClampExtended
supportsTexture2DMultisampleArray
supportsForceSeamsOnCubemaps
supportsFloat16BCubicFiltering
initFeatureQueries
supportsVersion:
newFunctionWithGLIR:functionType:
newFunctionWithGLIR:inputsDescription:functionType:
allowLibrariesFromOtherPlatforms
newLibraryWithFile:error:
releaseCacheEntry:
newLibraryWithURL:error:
areRasterOrderGroupsSupported
isQuadDataSharingSupported
_setDeviceWrapper:
_deviceWrapper
serializeRenderPipelineDescriptor:
newRenderPipelineDescriptorWithSerializedData:deserializationContext:
serializeComputePipelineDescriptor:
newComputePipelineDescriptorWithSerializedData:deserializationContext:
serializeStructType:
compilerPropagatesThreadPriority:
newDefaultLibrary
newDefaultLibraryWithBundle:error:
newLibraryWithData:error:
newLibraryWithSource:options:error:
newLibraryWithSource:options:completionHandler:
newPipelineLibraryWithFilePath:error:
registerRenderPipelineDescriptor:
registerComputePipelineDescriptor:
startCollectingPipelineDescriptorsUsingPrefixForNames:
startCollectingPipelineDescriptorsFromLibrary:filePath:
endCollectingPipelineDescriptors
newComputePipelineStateWithFunction:completionHandler:
newComputePipelineStateWithFunction:options:reflection:error:
newComputePipelineStateWithFunction:options:completionHandler:
newComputePipelineStateWithImageFilterFunctionsSPI:imageFilterFunctionInfo:error:
newLibraryWithImageFilterFunctionsSPI:imageFilterFunctionInfo:error:
supportsFeatureSet:
initLimits
maxColorAttachments
maxVertexAttributes
maxVertexBuffers
maxVertexTextures
maxVertexSamplers
maxVertexInlineDataSize
maxInterpolants
maxFragmentBuffers
maxFragmentTextures
maxFragmentSamplers
maxFragmentInlineDataSize
maxComputeBuffers
maxComputeTextures
maxComputeSamplers
maxComputeInlineDataSize
maxComputeLocalMemorySizes
maxTotalComputeThreadsPerThreadgroup
maxComputeThreadgroupMemory
maxLineWidth
maxPointSize
maxVisibilityQueryOffset
minBufferNoCopyAlignmentBytes
maxTextureWidth1D
maxTextureWidth2D
maxTextureHeight2D
maxTextureWidth3D
maxTextureHeight3D
maxTextureDepth3D
maxTextureDimensionCube
maxTextureLayers
linearTextureAlignmentBytes
iosurfaceTextureAlignmentBytes
iosurfaceReadOnlyTextureAlignmentBytes
deviceLinearReadOnlyTextureAlignmentBytes
maxFunctionConstantIndices
maxComputeThreadgroupMemoryAlignmentBytes
maxInterpolatedComponents
maxTessellationFactor
maxIndirectBuffers
maxIndirectTextures
maxIndirectSamplers
maxIndirectSamplersPerDevice
maxCustomSamplePositions
maxTextureBufferWidth
maxComputeAttributes
maxFramebufferStorageBits
newRenderPipelineStateWithDescriptor:error:
newRenderPipelineStateWithDescriptor:options:reflection:error:
newRenderPipelineStateWithDescriptor:completionHandler:
newRenderPipelineStateWithDescriptor:options:completionHandler:
registerCompiler:
fragmentFunctionKeyWithRenderPipelineDescriptor:options:previousStateVariant:fragmentKeySize:
vertexFunctionKeyWithRenderPipelineDescriptor:options:nextStageVariant:vertexKeySize:
freeFragmentFunctionKey:fragmentKeySize:
freeVertexFunctionKey:vertexKeySize:
computeFunctionKeyWithComputePipelineDescriptor:options:keySize:
freeComputeFunctionKey:keySize:
newComputeVariantWithCompilerOutput:pipelineStatisticsOutput:
newFragmentVariantWithCompilerOutput:pipelineStatisticsOutput:
newVertexVariantWithCompilerOutput:pipelineStatisticsOutput:
newRenderPipelineWithDescriptor:vertexVariant:fragmentVariant:errorMessage:
newComputePipelineWithDescriptor:variant:errorMessage:
pipelineFlagsWithVertexVariant:fragmentVariant:
pipelineFlagsWithComputeVariant:
pipelinePerformanceStatisticsWithVertexVariant:fragmentVariant:
pipelinePerformanceStatisticsWithComputeVariant:
pipelinePerformanceStatisticsWithVertexVariant:fragmentVariant:vertexCompileTimeOutput:fragmentCompileTimeOutput:
pipelinePerformanceStatisticsWithComputeVariant:compileTimeOutput:
getConstantSamplersBitmasks:uniqueIdentifiers:constantSamplerCount:forVertexVariant:fragmentVariant:
getConstantSamplersBitmasks:uniqueIdentifiers:constantSamplerCount:forComputeVariant:
minimumLinearTextureAlignmentForPixelFormat:
minLinearTextureAlignmentForPixelFormat:
maxArgumentBufferSamplerCount
_incrementCommandQueueCount
_decrementCommandQueueCount
newCommandQueue
newCommandQueueWithMaxCommandBufferCount:
getDefaultSamplePositions:count:
newArgumentEncoderWithArguments:
newEvent
newSharedEvent
newSharedEventWithHandle:
newSharedEventWithMachPort:
areGPUAssertionsEnabled
setGPUAssertionsEnabled:
setResourceIndirectionEnabled:
isResourceIndirectionEnabled
isUtilityBufferRequired
setUtilityBuffers:
currentUtilityBufferIndex
setCurrentUtilityBufferIndex:
createNewUtilityBuffer
newBufferWithLength:options:atResourceIndex:
newBufferWithBytes:length:options:atResourceIndex:
newBufferWithBytesNoCopy:length:options:atResourceIndex:deallocator:
requiresIndirectionForAllResourceTypes
indirectBufferAddressForResourceIndex:offset:
resourceIndexFromIndirectBufferAddress:
offsetFromIndirectBufferAddress:
isPlacementHeapSupported
globalTraceObjectID
serialQueue
concurrentQueue
_limits
_supportedGPUFamilies
_compiler
_serialQueue
_pipelineSerializationQueue
_concurrentQueue
_hasInitSerializationPaths
_featureQueries
_globalTraceObjectID
_commandQueueCount
_libraryBuilder
_pipelineLibraryBuilder
_pipelineCollection
_pipelineDescriptorsOutputFile
_librariesOutputDirectory
_collectAllLibraries
_gpuAssertionsEnabled
_resourceIndirectionEnabled
_utilityBufferRequired
_utilityBuffers
_currentUtilityBufferIndex
requirementForFeature:
nameForFeature:
objectForKey:
setObject:forKey:
dictionary
libraryData
bitcodeType
pluginData
bitCodeFileSize
bitCodeOffset
bitCodeHash
length
getBytes:length:
string
appendFormat:
appendString:
setWidth:
setHeight:
setMipmapLevelCount:
setResourceOptions:
setUsage:
texture2DDescriptorWithPixelFormat:width:height:mipmapped:
textureCubeDescriptorWithPixelFormat:size:mipmapped:
textureBufferDescriptorWithPixelFormat:width:resourceOptions:usage:
cpuCacheMode
storageMode
hazardTrackingMode
usage
width
height
depth
setDepth:
mipmapLevelCount
sampleCount
setSampleCount:
allowGPUOptimizedContents
setAllowGPUOptimizedContents:
forceResourceIndex
setForceResourceIndex:
setCpuCacheMode:
protectionOptions
setProtectionOptions:
setStorageMode:
resourceOptions
setHazardTrackingMode:
textureUsage
setTextureUsage:
rotation
setRotation:
setSwizzle:
swizzle
setSwizzleKey:
swizzleKey
compressionMode
setCompressionMode:
framebufferOnly
setFramebufferOnly:
setIsDrawable:
isDrawable
descriptorPrivate
validateWithDevice:
numFaces
stringByAppendingFormat:
commandTypes
setCommandTypes:
inheritPipelineState
setInheritPipelineState:
inheritBuffers
setInheritBuffers:
maxVertexBufferBindCount
setMaxVertexBufferBindCount:
maxFragmentBufferBindCount
setMaxFragmentBufferBindCount:
maxKernelBufferBindCount
setMaxKernelBufferBindCount:
_commandTypes
_inheritPipelineState
_inheritBuffers
_maxVertexBufferBindCount
_maxFragmentBufferBindCount
_maxKernelBufferBindCount
_resourceIndex
initWithFilePath:readOnly:deviceInfo:
cache
write
writable
disableRunTimeCompilation
setDisableRunTimeCompilation:
_writable
_compilerCache
_disableRunTimeCompilation
stringByStandardizingPath
stringByDeletingLastPathComponent
stringByAppendingPathComponent:
newFunctionWithName:constantValues:functionCache:error:
setPipelineLibrary:
newComputePipelineStateWithName:options:reflection:error:
newRenderPipelineStateWithName:options:reflection:error:
newComputePipelineDescriptorWithName:error:
newRenderPipelineDescriptorWithName:error:
pipelineNames
pipelineCache
functionCache
initWithDevice:pipelineLibraryData:
_pipelineLibraryData
_pipelineNames
heapTextureSizeAndAlignWithDescriptor:
heapBufferSizeAndAlignWithLength:options:
newHeapWithDescriptor:
newDepthStencilStateWithDescriptor:
newTextureWithDescriptor:
newTextureWithDescriptor:iosurface:plane:
newSamplerStateWithDescriptor:
newFence
minimumTextureBufferAlignmentForPixelFormat:
newIndirectCommandBufferWithDescriptor:maxCommandCount:options:
registryID
maxThreadsPerThreadgroup
isLowPower
isHeadless
isRemovable
hasUnifiedMemory
recommendedMaxWorkingSetSize
isDepth24Stencil8PixelFormatSupported
currentAllocatedSize
maxThreadgroupMemoryLength
areProgrammableSamplePositionsSupported
fileExistsAtPath:
targetDeviceInfo
initWithFormat:
objectAtIndex:
newBufferWithIOSurface:
newIndirectCommandBufferWithDescriptor:maxCount:options:
newIndirectRenderCommandEncoderWithBuffer:
newIndirectComputeCommandEncoderWithBuffer:
setResourcesPurgeableState:newState:oldState:count:
halfFPConfig
singleFPConfig
doubleFPConfig
metalAssertionsEnabled
setMetalAssertionsEnabled:
supportPriorityBand
sharedMemorySize
dedicatedMemorySize
registerDevices
supportsPrimitiveType:
indirectArgumentBufferDecodingData
setIndirectArgumentBufferDecodingData:
setupMPSFunctionTable:
resourcePatchingTypeForResourceType:
mapShaderSampleBufferWithBuffer:capacity:size:
unmapShaderSampleBuffer
newIndirectArgumentEncoderWithArguments:
newLibraryWithCIFiltersForComputePipeline:imageFilterFunctionInfo:error:
newTextureWithBytesNoCopy:length:descriptor:deallocator:
newTextureLayoutWithDescriptor:isHeapOrBufferBacked:
shaderDebugInfoCaching
setShaderDebugInfoCaching:
baseObject
objectForInfoDictionaryKey:
boolValue
appStoreReceiptURL
path
rangeOfString:
bundleWithPath:
classNamed:
initWithBaseObject:parent:
loadAndReturnError:
standardUserDefaults
integerForKey:
enqueue
commit
addScheduledHandler:
presentDrawable:
presentDrawable:atTime:
presentDrawable:afterMinimumDuration:
waitUntilScheduled
addCompletedHandler:
waitUntilCompleted
blitCommandEncoder
renderCommandEncoderWithDescriptor:
computeCommandEncoder
computeCommandEncoderWithDispatchType:
encodeWaitForEvent:value:
encodeSignalEvent:value:
parallelRenderCommandEncoderWithDescriptor:
pushDebugGroup:
popDebugGroup
retainedReferences
kernelStartTime
kernelEndTime
GPUStartTime
GPUEndTime
status
error
setCurrentCommandEncoder:
isStatEnabled
getAndIncrementNumEncoders
commandBuffer
commandBufferWithUnretainedReferences
setOwnedByParallelEncoder:
setNumEncoders:
numThisCommandBuffer
setNumThisCommandBuffer:
_renderCommandEncoderCommon
sampledRenderCommandEncoderWithDescriptor:programInfoBuffer:capacity:
endEncoding
insertDebugSignpost:
renderCommandEncoder
setColorStoreAction:atIndex:
setDepthStoreAction:
setStencilStoreAction:
setColorStoreActionOptions:atIndex:
setDepthStoreActionOptions:
setStencilStoreActionOptions:
initWithCommandBuffer:renderPassDescriptor:
sampledRenderCommandEncoderWithProgramInfoBuffer:capacity:
isMemorylessRender
_queue
_labelTraceID
_commandBuffer
_renderPassDescriptor
_lock
_commandBuffersSize
_commandBuffersCount
_commandBuffers
_retainedReferences
_StatEnabled
_numThisEncoder
setCaptureObject:
setDestination:
setOutputURL:
captureObject
destination
outputURL
_captureObject
_outputURL
errorWithMTLCaptureErrorCode:
startCaptureWithDescriptor:error:
sharedCaptureManager
newCaptureScopeWithDevice:
newCaptureScopeWithCommandQueue:
startCaptureWithDevice:
startCaptureWithCommandQueue:
startCaptureWithScope:
stopCapture
supportsDestination:
isCapturing
defaultCaptureScope
setDefaultCaptureScope:
_isCapturing
_defaultCaptureScope
initWithCapacity:
initWithResourceListCapacity:
availableCount
purge
_priv
_resourceListCapacity
argumentIndex
createArgumentBufferWithLayout:type:
useResource:usage:
encodeBuffer:atResourceIndex:
encodeTexture:atResourceIndex:
encodeSampler:atResourceIndex:
encodeComputePipeline:atResourceIndex:
encodeRenderPipeline:atResourceIndex:
encodeIndirectCommandBuffer:atResourceIndex:
initWithLayout:type:device:
reserveNextResourceIndexForType:
_utilArgumentBuffer
_utilArgumentEncoder
_resourceTable
_utilityQueue
lodAverage
setLodAverage:
_lodAverage
minFilter
setMinFilter:
magFilter
setMagFilter:
mipFilter
setMipFilter:
maxAnisotropy
setMaxAnisotropy:
sAddressMode
setSAddressMode:
tAddressMode
setTAddressMode:
rAddressMode
setRAddressMode:
normalizedCoordinates
setNormalizedCoordinates:
lodMinClamp
setLodMinClamp:
lodMaxClamp
setLodMaxClamp:
lodBias
setLodBias:
compareFunction
setCompareFunction:
supportArgumentBuffers
setSupportArgumentBuffers:
uniqueIdentifier
initWithDevice:samplerDescriptor:
size
setSize:
setType:
initWithType:options:
newBufferWithLength:options:offset:
newTextureWithDescriptor:offset:
newBufferWithLength:options:atOffset:
newTextureWithDescriptor:atOffset:
usedSize
unfilteredResourceOptions
_heapResourceOptions
_heapType
allKeys
allValues
stringByAppendingString:
preprocessorMacros
fastMathEnabled
languageVersion
numberWithUnsignedLongLong:
tracingEnabled
glBufferBindPoints
debuggingEnabled
compileTimeStatisticsEnabled
additionalCompilerArguments
sourceLanguage
setPreprocessorMacros:
setFastMathEnabled:
unsignedLongValue
setLanguageVersion:
setTracingEnabled:
setGlBufferBindPoints:
setDebuggingEnabled:
setCompileTimeStatisticsEnabled:
setAdditionalCompilerArguments:
setSourceLanguage:
exportDictionary
importDictionary:
_userSetLanguageVersion
_preprocessorMacros
_fastMathEnabled
_glBufferBindPoints
_tracingEnabled
_debuggingEnabled
_languageVersion
_compileTimeStatisticsEnabled
_additionalCompilerArguments
_sourceLanguage
initWithName:attributeIndex:attributeType:flags:
isPatchData
isPatchControlPointData
setAttributeType:
_flags
_attributeIndex
_attributeType
initWithName:type:index:required:
_type
_required
initWithObjects:count:
initWithArguments:argumentCount:builtInArgumentCount:
initWithDevice:reflectionData:functionType:options:
builtInArguments
arguments
_builtInArguments
_arguments
initWithName:type:libraryData:functionData:device:
sourceArchiveOffset
setSourceArchiveOffset:
functionType
setReturnType:
initWithName:type:access:index:active:arrayLength:typeDescription:
arrayWithArray:
setArguments:
setLineNumber:
setFilePath:
setFunctionConstants:
setVertexAttributes:
filePath
setUnpackedFilePath:
lengthOfBytesUsingEncoding:
getCString:maxLength:encoding:
newFunctionWithNameInternal:
needsFunctionConstantValues
newSpecializedFunctionWithRequestType:llvmTargetVersion:constants:functionCache:error:
newSpecializedFunctionWithRequestType:llvmTargetVersion:constants:functionCache:sync:completionHandler:
newFunctionWithName:constantValues:functionCache:completionHandler:
removeAllObjects
initWithLibraryContainer:device:
stringValue
cStringUsingEncoding:
functionNames
newFunctionWithName:constantValues:error:
newFunctionWithName:constantValues:completionHandler:
newExternFunctionWithName:
newFunctionWithName:constantValues:pipelineLibrary:error:
newFunctionWithName:constantValues:pipelineLibrary:completionHandler:
overrideTriple
setOverrideTriple:
externFunctionNames
libraryDataContents
functionDictionary
cacheEntry
_libraryData
_functionDictionary
_cacheEntry
stageInputAttributes
newlineCharacterSet
reflectionWithFunction:options:sync:completionHandler:
newArgumentEncoderWithBufferIndex:reflection:
reflectionWithOptions:
dataWithLength:
mutableBytes
newArgumentEncoderWithBufferIndex:
patchType
patchControlPointCount
functionConstantsDictionary
reflectionWithOptions:completionHandler:
bitcodeData
newFunctionWithPluginData:bitcodeType:
lineNumber
unpackedFilePath
returnType
initWithName:type:libraryData:device:
setVendorPrivate:
vendorPrivate
_functionType
_vendorPrivate
_vertexAttributes
_functionConstants
_functionConstantDictionary
_returnType
_unpackedFilePath
initializePublicMetadata
initWithObjects:forKeys:count:
bytes
initializePrivateMetadata
initializeSourceArchive
programObject
functionData
setBitcodeType:
setPluginData:
setStageInputAttributes:
functionInputs
_functionData
_publicMetadataInitialized
_privateMetadataInitialized
_sourceArchiveMetadataInitialized
_programObject
_filePath
_lineNumber
initWithCompilerOutput:
inputInfoAndSize:
setInputInfo:size:
outputInfoAndSize:
setOutputInfo:size:
_inputInfo
_inputInfoSize
compileRequest:pipelineCache:completionHandler:
compileRequest:pipelineCache:sync:completionHandler:
compileFunction:serializedPipelineData:stateData:linkDataSize:frameworkLinking:options:pipelineCache:sync:completionHandler:
compileFunctionInternal:frameworkData:driverKeyData:frameworkLinking:linkDataSize:pipelineCache:options:sync:completionHandler:
compileFunction:serializedPipelineData:stateData:linkDataSize:frameworkLinking:options:sync:completionHandler:
newSerializedVertexDataWithFlags:options:error:
initWithVertexData:fragmentData:serializedVertexDescriptor:device:options:flags:
setPerformanceStatistics:
setConstantSamplerDescriptorsFromBitmasks:count:
setConstantSamplerUniqueIdentifiers:
setVertexDebugInstrumentationData:
setFragmentDebugInstrumentationData:
vertexFunction
reflectionWithFunction:options:completionHandler:
fragmentFunction
newSerializedFragmentDataWithFlags:options:
pipelineLibrary
newComputePipelineStateWithDescriptorInternal:options:pipelineCache:reflection:error:completionHandler:
computeFunction
newSerializedComputeDataWithFlags:options:
initWithSerializedData:serializedStageInputDescriptor:device:options:flags:
setDebugInstrumentationData:
initWithTargetData:cacheUUID:pluginPath:device:compilerFlags:
compileRequest:completionHandler:
compileFunction:frameworkData:driverKeyData:options:pipelineCache:completionHandler:
compileFunction:frameworkData:driverKeyData:options:pipelineCache:sync:completionHandler:
compileFunction:serializedData:stateData:options:completionHandler:
pluginPath
compilerQueue
compilerConnectionManager
compilerId
compilerFlags
_pluginPath
_compilerQueue
_compilerConnectionManager
_compilerId
_compilerFlags
_shaderCache
initWithDataType:
initWithBytesNoCopy:length:
setRenderPipelineState:
setVertexBuffer:offset:atIndex:
setFragmentBuffer:offset:atIndex:
drawPrimitives:vertexStart:vertexCount:instanceCount:baseInstance:
drawIndexedPrimitives:indexCount:indexType:indexBuffer:indexBufferOffset:instanceCount:baseVertex:baseInstance:
getVertexBufferAtIndex:
getFragmentBufferAtIndex:
getCommandType
drawArguments
drawIndexedArguments
drawPatchesArguments
drawIndexedPatchesArguments
getTessellationFactorArguments
getPipelineStateUniqueIdentifier
drawIndexedPatches:patchStart:patchCount:patchIndexBuffer:patchIndexBufferOffset:controlPointIndexBuffer:controlPointIndexBufferOffset:instanceCount:baseInstance:tessellationFactorBuffer:tessellationFactorBufferOffset:tessellationFactorBufferInstanceStride:
drawIndexedPatches:patchStart:patchCount:patchIndexBuffer:patchIndexBufferOffset:controlPointIndexBuffer:controlPointIndexBufferOffset:instanceCount:baseInstance:tessellationFactorBuffer:tessellationFactorBufferOffset:tessellationFactorBufferInstanceStride:tessellationFactorBufferScale:
drawPatches:patchStart:patchCount:patchIndexBuffer:patchIndexBufferOffset:instanceCount:baseInstance:tessellationFactorBuffer:tessellationFactorBufferOffset:tessellationFactorBufferInstanceStride:
drawPatches:patchStart:patchCount:patchIndexBuffer:patchIndexBufferOffset:instanceCount:baseInstance:tessellationFactorBuffer:tessellationFactorBufferOffset:tessellationFactorBufferInstanceStride:tessellationFactorBufferScale:
setPurgeableState:
makeAliasable
isAliasable
heap
heapOffset
allocatedSize
getBytes:bytesPerRow:bytesPerImage:fromRegion:mipmapLevel:slice:
replaceRegion:mipmapLevel:slice:withBytes:bytesPerRow:bytesPerImage:
getBytes:bytesPerRow:fromRegion:mipmapLevel:
replaceRegion:mipmapLevel:withBytes:bytesPerRow:
newTextureViewWithPixelFormat:
newTextureViewWithPixelFormat:textureType:levels:slices:
newTextureViewWithPixelFormat:textureType:levels:slices:swizzle:
rootResource
parentTexture
parentRelativeLevel
parentRelativeSlice
buffer
bufferOffset
bufferBytesPerRow
iosurface
iosurfacePlane
isFramebufferOnly
isPurgeable
isComplete
waitUntilComplete
doesAliasResource:
doesAliasAllResources:count:
doesAliasAnyResources:count:
responsibleProcess
setResponsibleProcess:
sharedAllocationInfo
cachedAllocationInfo
isCompressed
compressionFeedback
getBytes:bytesPerRow:bytesPerImage:fromRegion:mipmapLevel:slice:options:
replaceRegion:mipmapLevel:slice:withBytes:bytesPerRow:bytesPerImage:options:
newCompressedTextureViewWithPixelFormat:textureType:level:slice:
canGenerateMipmapLevels
generateMipmapLevel:slice:
attachmentDescriptor
setTexture:
texture
setResolveTexture:
resolveTexture
setLevel:
level
setSlice:
slice
setDepthPlane:
depthPlane
setClearColor:
clearColor
setResolveLevel:
resolveLevel
setResolveSlice:
resolveSlice
setResolveDepthPlane:
resolveDepthPlane
setYInvert:
yInvert
loadAction
setLoadAction:
storeAction
setStoreAction:
storeActionOptions
setStoreActionOptions:
setClearDepth:
clearDepth
depthResolveFilter
setDepthResolveFilter:
setClearStencil:
clearStencil
_color_descriptors
_depth_descriptor
_stencil_descriptor
renderPassDescriptor
setSamplePositions:count:
getSamplePositions:count:
renderTargetArrayLength
setRenderTargetArrayLength:
_renderTargetArrayLength
didModifyRange:
newTextureWithDescriptor:offset:bytesPerRow:
addDebugMarker:range:
removeAllDebugMarkers
setDepthAttachment:
depthAttachment
setStencilAttachment:
stencilAttachment
setVisibilityResultBuffer:
visibilityResultBuffer
setRenderTargetWidth:
renderTargetWidth
setRenderTargetHeight:
renderTargetHeight
setFineGrainedBackgroundVisibilityEnabled:
fineGrainedBackgroundVisibilityEnabled
setDitherEnabled:
isDitherEnabled
setOpenGLModeEnabled:
openGLModeEnabled
validate:width:height:
numberWithDouble:
executeSynchronizationNotifications:
executeSynchronizationNotifications:scope:resources:count:
initWithCommandBuffer:
filterCounterRangeWithFirstBatch:lastBatch:filterIndex:
getType
memoryBarrierNotificationWithScope:
memoryBarrierNotificationWithResources:count:
dispatchType
numThisEncoder
setNumThisEncoder:
initWithSerializedData:device:options:flags:
performanceStatistics
usageFlags
traceBufferIndex
constantSamplerUniqueIdentifiers
constantSamplerDescriptors
_performanceStatistics
_traceBufferIndex
_constantSamplerUniqueIdentifiers
_constantSamplerDescriptors
null
setDriverCompilerOptions:
driverCompilerOptions
threadGroupSizeIsMultipleOfThreadExecutionWidth
maxTotalThreadsPerThreadgroup
supportIndirectCommandBuffers
newSerializedComputeData
threadExecutionWidth
staticThreadgroupMemoryLength
initWithDevice:pipelineStateDescriptor:
IABEmulationData
setIABEmulationData:
debugInstrumentationData
_iabEmulationData
_debugInstrumentationData
_supportIndirectCommandBuffers
setComputePipelineState:
setKernelBuffer:offset:atIndex:
concurrentDispatchThreadgroups:threadsPerThreadgroup:
concurrentDispatchThreads:threadsPerThreadgroup:
setBarrier
clearBarrier
setImageBlockWidth:height:
dispatchThreadgroups:threadsPerThreadgroup:
setThreadgroupMemoryLength:atIndex:
setStageInRegion:
getKernelBufferAtIndex:
dispatchThreadgroupsArguments
dispatchThreadsArguments
getThreadgroupMemoryLengthAtIndex:
getStageInRegion
hasBarrier
setKernelArgument:offset:atIndex:
dataUsingEncoding:allowLossyConversion:
kprintfBytes:length:
IOLogBytes:length:
kprintf:
IOLog:
startCaptureWithSettings:from:
startCaptureWithSettings:
startCapture
stopCapture:
getLastStartStopCaptureResult
dumpBuffer:name:
dumpBuffer:
dumpTexture:name:glMode:
dumpTexture:name:
dumpTexture:
postFinishEvent:
postFinishEvent
memberByName:
_dictionary
_members
_isIndirectArgumentBuffer
elementIsIndirectArgumentBuffer
dataSize
_elementType
_elementTypeInfo
_access
_elementIsArgumentBuffer
_isConstantBuffer
_doRetain
textureReferenceType
pointerType
_details
_argumentIndex
_render_target
_raster_order_group
_typeInfo
elementTextureReferenceType
elementPointerType
setIndirectArgumentIndexStride:
argumentIndexStride
_arrayLength
_argumentIndexStride
_active
airMDType
_airMDType
baseInstanceUnused
_stepRate
_baseInstanceUnused
vertexBuiltInArguments
postVertexDumpStride
postVertexDumpOutputs
inferredInputs
vertexArguments
fragmentArguments
_vertexBuiltInArguments
_postVertexDumpStride
_postVertexDumpOutputs
_inferredInputs
_vertexArguments
_fragmentArguments
inputPrimitiveTopology
setInputPrimitiveTopology:
_inputPrimitiveTopology
rasterSampleCount
forceSoftwareVertexFetch
setForceSoftwareVertexFetch:
tessellationPartitionMode
isTessellationFactorScaleEnabled
tessellationFactorFormat
tessellationControlPointIndexType
tessellationFactorStepFunction
tessellationOutputWindingOrder
postVertexDumpBufferIndex
setPostVertexDumpBufferIndex:
sampleMask
sampleCoverage
isAlphaToCoverageEnabled
isAlphaToOneEnabled
isRasterizationEnabled
isVertexEnabled
isLogicOperationEnabled
setLogicOperationEnabled:
logicOperation
setLogicOperation:
isAlphaTestEnabled
setAlphaTestEnabled:
alphaTestFunction
setAlphaTestFunction:
setClipDistanceEnableMask:
clipDistanceEnableMask
isPointSmoothEnabled
setPointSmoothEnabled:
isPointCoordLowerLeft
setPointCoordLowerLeft:
isPointSizeOutputVS
setPointSizeOutputVS:
isTwoSideEnabled
setTwoSideEnabled:
vertexDepthCompareClampMask
setVertexDepthCompareClampMask:
fragmentDepthCompareClampMask
setFragmentDepthCompareClampMask:
sampleCoverageInvert
setSampleCoverageInvert:
isDepthStencilWriteDisabled
setDepthStencilWriteDisabled:
fastBlendDescriptorAtIndex:
attachVertexDescriptor:
depthAttachmentPixelFormat
stencilAttachmentPixelFormat
serializeFragmentData
newSerializedVertexDataWithFlags:error:
vertexIABEmulationData
setVertexIABEmulationData:
fragmentIABEmulationData
setFragmentIABEmulationData:
vertexDebugInstrumentationData
fragmentDebugInstrumentationData
_vertexIABEmulationData
_fragmentIABEmulationData
_vertexDebugInstrumentationData
_fragmentDebugInstrumentationData
initWithCString:encoding:
exceptionWithName:reason:userInfo:
releaseAllObjectsAndReset
_listPriv
encodeWithCoder:
initWithCoder:
lastPathComponent
stringByDeletingPathExtension
defaultManager
writeToFile:options:error:
dataWithJSONObject:options:error:
raise:format:
encodeXPCObject:forKey:
encodeObject:forKey:
decodeXPCObjectOfType:forKey:
decodeObjectOfClass:forKey:
supportsSecureCoding
eventPort
labelTraceID
initWithDispatchQueue:
dispatchQueue
_dispatchQueue
_encodedLength
_argumentBufferType
stencilPrivate
stencilCompareFunction
setStencilCompareFunction:
stencilFailureOperation
setStencilFailureOperation:
depthFailureOperation
setDepthFailureOperation:
depthStencilPassOperation
setDepthStencilPassOperation:
readMask
setReadMask:
frontFaceStencil
backFaceStencil
depthStencilPrivate
depthCompareFunction
setDepthCompareFunction:
isDepthWriteEnabled
setDepthWriteEnabled:
setFrontFaceStencil:
setBackFaceStencil:
readsDepth
writesDepth
readsStencil
writesStencil
initWithDevice:depthStencilDescriptor:
insertDebugCaptureBoundary
getAndIncrementNumCommandBuffers
getListIndex
initWithQueue:retainedReferences:synchronousDebugMode:
enqueueCommandBuffer:
commitCommandBuffer:wake:
submitCommandBuffer:
present
presentAtTime:
presentAfterMinimumDuration:
addPresentedHandler:
presentedTime
drawableID
addPresentScheduledHandler:
didSchedule:error:
localizedDescription
runPerfCounterCallbackWithBlock:
initialize
initWithQueue:retainedReferences:
commitAndHold
commitAndWaitUntilSubmitted
commitAndReset
isCommitted
setCommitted:
didScheduleWithStartTime:endTime:error:
userDictionary
didCompleteWithStartTime:endTime:error:
_addRetainedObject:
kernelSubmitTime
skipRender
setProfilingEnabled:
isProfilingEnabled
profilingResults
addSynchronizationNotification:
debugBufferContentsWithLength:
synchronousDebugMode
setStatEnabled:
setListIndex:
numEncoders
ownedByParallelEncoder
_currentCommandEncoder
_scheduledDispatchList
_scheduledDispatchListTail
_completedDispatchList
_completedDispatchListTail
_syncDispatchList
_syncDispatchListTail
_mutex
_cond
_creationTime
_enqueueTime
_commitTime
_submitToKernelTime
_submitToHardwareTime
_completionInterruptTime
_completionHandlerEnqueueTime
_completionHandlerExecutionTime
_status
_error
_skipRender
_profilingEnabled
_scheduledCallbacksDone
_completedCallbacksDone
_strongObjectReferences
_profilingResults
_synchronousDebugMode
_userDictionary
_kernelStartTime
_kernelEndTime
_gpuStartTime
_gpuEndTime
_numEncoders
_numThisCommandBuffer
_listIndex
_ownedByParallelEncoder
_wakeOnCommit
_retainedObjects
_perfSampleHandlerBlock
_hasPresent
initWithDevice:maxCommandBufferCount:
initWithDevice:descriptor:
maxCommandBufferCount
qosLevel
commitQueue
commitSynchronously
completionQueue
disableCrossQueueHazardTracking
isOpenGLQueue
_submitAvailableCommandBuffers
getObjects:range:
replaceObjectsInRange:withObjectsFromArray:range:
removeObjectsInRange:
submitCommandBuffers:count:
completeCommandBuffers:count:
commandBufferDidComplete:startTime:completionTime:error:
removeObject:
requestCounters:
setSubmissionQueue:
finish
availableCounters
addPerfSampleHandler:
requestCounters:withIndex:
setSkipRender:
getStatOptions
setStatOptions:
getStatLocations
setStatLocations:
numCommandBuffers
setNumCommandBuffers:
executionEnabled
setExecutionEnabled:
backgroundTrackingPID
setBackgroundTrackingPID:
_dev
_pendingQueue
_submittedQueue
_pendingQueueLock
_submittedQueueLock
_submittedGroup
_commandQueueDispatch
_completionQueueDispatch
_commandQueueEventSource
_commandBufferSemaphore
_backgroundTrackingPID
_StatOptions
_StatLocations
_numCommandBuffers
_maxCommandBufferCount
_qosLevel
_commitQueue
_commitSynchronously
_completionQueue
_disableCrossQueueHazardTracking
_executionEnabled
_openGLQueue
_presentScheduledSemaphore
_forceImmediateSubmissionOnCommitThread
commandQueueDescriptor
setQosLevel:
setCommitQueue:
setCommitSynchronously:
setCompletionQueue:
setDisableCrossQueueHazardTracking:
setIsOpenGLQueue:
_featureInfo
@16@0:8
v16@0:8
Q24@0:8^v16
@32@0:8@16r^v24
@24@0:8r^v16
Q16@0:8
Q32@0:8*16Q24
B24@0:8@16
#16@0:8
@24@0:8:16
@32@0:8:16@24
@40@0:8:16@24@32
B16@0:8
B24@0:8#16
B24@0:8:16
Vv16@0:8
^{_NSZone=}16@0:8
B24@0:8@"Protocol"16
@"NSString"16@0:8
v24@0:8@16
v24@0:8@"NSString"16
@"<MTLDevice>"16@0:8
@"<MTLCommandQueue>"16@0:8
@32@0:8@16@24
@"<MTLDevice>"
@"<MTLCommandQueue>"
@24@0:8^{_NSZone=}16
v24@0:8Q16
@24@0:8Q16
v32@0:8@16Q24
[31@"MTLBufferLayoutDescriptorInternal"]
[31@"MTLAttributeDescriptorInternal"]
B32@0:8@16^@24
@"MTLBufferLayoutDescriptorArrayInternal"
@"MTLAttributeDescriptorArrayInternal"
^v40@0:8Q16@24Q32
Q40@0:8Q16@24Q32
I16@0:8
Q24@0:8Q16
v32@0:8@16@24
^{_MTLIndirectArgumentBufferLayoutPrivate=@{unordered_map<unsigned long, _MTLIndirectArgumentBufferLayout *, std::__1::hash<unsigned long>, std::__1::equal_to<unsigned long>, std::__1::allocator<std::__1::pair<const unsigned long, _MTLIndirectArgumentBufferLayout *> > >={__hash_table<std::__1::__hash_value_type<unsigned long, _MTLIndirectArgumentBufferLayout *>, std::__1::__unordered_map_hasher<unsigned long, std::__1::__hash_value_type<unsigned long, _MTLIndirectArgumentBufferLayout *>, std::__1::hash<unsigned long>, true>, std::__1::__unordered_map_equal<unsigned long, std::__1::__hash_value_type<unsigned long, _MTLIndirectArgumentBufferLayout *>, std::__1::equal_to<unsigned long>, true>, std::__1::allocator<std::__1::__hash_value_type<unsigned long, _MTLIndirectArgumentBufferLayout *> > >={unique_ptr<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long, _MTLIndirectArgumentBufferLayout *>, void *> *> *[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long, _MTLIndirectArgumentBufferLayout *>, void *> *> *> > >={__compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long, _MTLIndirectArgumentBufferLayout *>, void *> *> **, std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long, _MTLIndirectArgumentBufferLayout *>, void *> *> *> > >=^^{__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long, _MTLIndirectArgumentBufferLayout *>, void *> *>}{__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long, _MTLIndirectArgumentBufferLayout *>, void *> *> *> >={__compressed_pair<unsigned long, std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long, _MTLIndirectArgumentBufferLayout *>, void *> *> *> >=Q}}}}{__compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long, _MTLIndirectArgumentBufferLayout *>, void *> *>, std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long, _MTLIndirectArgumentBufferLayout *>, void *> > >={__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long, _MTLIndirectArgumentBufferLayout *>, void *> *>=^{__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long, _MTLIndirectArgumentBufferLayout *>, void *> *>}}}{__compressed_pair<unsigned long, std::__1::__unordered_map_hasher<unsigned long, std::__1::__hash_value_type<unsigned long, _MTLIndirectArgumentBufferLayout *>, std::__1::hash<unsigned long>, true> >=Q}{__compressed_pair<float, std::__1::__unordered_map_equal<unsigned long, std::__1::__hash_value_type<unsigned long, _MTLIndirectArgumentBufferLayout *>, std::__1::equal_to<unsigned long>, true> >=f}}}}
v40@0:8@16Q24Q32
v48@0:8r^@16r^Q24{_NSRange=QQ}32
v40@0:8r^@16{_NSRange=QQ}24
^v24@0:8Q16
v32@0:8@"<MTLBuffer>"16Q24
v40@0:8@"<MTLBuffer>"16Q24Q32
v32@0:8@"<MTLTexture>"16Q24
v32@0:8@"<MTLSamplerState>"16Q24
v32@0:8@"<MTLRenderPipelineState>"16Q24
v32@0:8@"<MTLComputePipelineState>"16Q24
v32@0:8@"<MTLIndirectCommandBuffer>"16Q24
@"<MTLArgumentEncoder>"24@0:8Q16
@"_MTLIndirectArgumentBufferLayout"
@24@0:8@16
@"_MTLIndirectArgumentBufferLayout"16@0:8
@"MTLEmulationIndirectArgumentBufferLayout"
v48@0:8{?=@?@?@?@?}16
@"NSObject<OS_dispatch_data>"
^v16@0:8
v24@0:8^v16
f16@0:8
v20@0:8f16
{?=QQQ}16@0:8
v40@0:8{?=QQQ}16
{?="width"Q"height"Q"depth"Q}
@40@0:8r^v16Q24@32
@"NSString"
@40@0:8r^v16Q24Q32
v40@0:8r^v16Q24Q32
v48@0:8r^v16Q24{_NSRange=QQ}32
v40@0:8r^v16Q24@32
@"NSArray"16@0:8
^v40@0:8@16^Q24^@32
r^v24@0:8@16
^{MTLConstantStorage={map<std::__1::basic_string<char>, MTLConstantStorage::ConstantData, std::__1::less<std::__1::basic_string<char> >, std::__1::allocator<std::__1::pair<const std::__1::basic_string<char>, MTLConstantStorage::ConstantData> > >={__tree<std::__1::__value_type<std::__1::basic_string<char>, MTLConstantStorage::ConstantData>, std::__1::__map_value_compare<std::__1::basic_string<char>, std::__1::__value_type<std::__1::basic_string<char>, MTLConstantStorage::ConstantData>, std::__1::less<std::__1::basic_string<char> >, true>, std::__1::allocator<std::__1::__value_type<std::__1::basic_string<char>, MTLConstantStorage::ConstantData> > >=^{__tree_end_node<std::__1::__tree_node_base<void *> *>}{__compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *> *>, std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<std::__1::basic_string<char>, MTLConstantStorage::ConstantData>, void *> > >={__tree_end_node<std::__1::__tree_node_base<void *> *>=^{__tree_node_base<void *>}}}{__compressed_pair<unsigned long, std::__1::__map_value_compare<std::__1::basic_string<char>, std::__1::__value_type<std::__1::basic_string<char>, MTLConstantStorage::ConstantData>, std::__1::less<std::__1::basic_string<char> >, true> >=Q}}}{map<unsigned short, MTLConstantStorage::ConstantData, std::__1::less<unsigned short>, std::__1::allocator<std::__1::pair<const unsigned short, MTLConstantStorage::ConstantData> > >={__tree<std::__1::__value_type<unsigned short, MTLConstantStorage::ConstantData>, std::__1::__map_value_compare<unsigned short, std::__1::__value_type<unsigned short, MTLConstantStorage::ConstantData>, std::__1::less<unsigned short>, true>, std::__1::allocator<std::__1::__value_type<unsigned short, MTLConstantStorage::ConstantData> > >=^{__tree_end_node<std::__1::__tree_node_base<void *> *>}{__compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *> *>, std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<unsigned short, MTLConstantStorage::ConstantData>, void *> > >={__tree_end_node<std::__1::__tree_node_base<void *> *>=^{__tree_node_base<void *>}}}{__compressed_pair<unsigned long, std::__1::__map_value_compare<unsigned short, std::__1::__value_type<unsigned short, MTLConstantStorage::ConstantData>, std::__1::less<unsigned short>, true> >=Q}}}}
@88@0:8@16Q24Q32B40Q44Q52Q60B68Q72Q80
v20@0:8B16
v28@0:8@16B24
@76@0:8@16Q24Q32B40Q44Q52Q60Q68
@84@0:8@16Q24Q32B40Q44Q52Q60Q68Q76
@72@0:8@16Q24B32Q36Q44Q52Q60B68
@68@0:8@16Q24Q32B40Q44Q52Q60
{os_unfair_lock_s="_os_unfair_lock_opaque"I}
r^{MTLPipelineBufferDescriptorPrivate=(?={?=b2}{?=Q})}16@0:8
{MTLPipelineBufferDescriptorPrivate=""(?=""{?="mutability"b2}""{?="bits"Q})}
[31@"MTLPipelineBufferDescriptorInternal"]
@"MTLDebugInstrumentationData"
^{DebugLocation=IIII}
^{DebugSubProgram=III}
@20@0:8I16
r^{MTLSerializedDebugInstrumentationData=Q{Statistics=IIIIIIIII[5I]IIIIIIIIIIII}{FlatArray<MTLSerializedDebugInstrumentationData::FlatArray<char> >=II}{FlatArray<MTLBoundsCheck::DebugLocation>=II}{FlatArray<MTLBoundsCheck::DebugSubProgram>=II}}
{vector<const __CFString *, std::__1::allocator<const __CFString *> >="__begin_"^^{__CFString}"__end_"^^{__CFString}"__end_cap_"{__compressed_pair<const __CFString **, std::__1::allocator<const __CFString *> >="__value_"^^{__CFString}}}
{vector<MTLDebugLocation *, std::__1::allocator<MTLDebugLocation *> >="__begin_"^@"__end_"^@"__end_cap_"{__compressed_pair<MTLDebugLocation **, std::__1::allocator<MTLDebugLocation *> >="__value_"^@}}
{vector<MTLDebugSubProgram *, std::__1::allocator<MTLDebugSubProgram *> >="__begin_"^@"__end_"^@"__end_cap_"{__compressed_pair<MTLDebugSubProgram **, std::__1::allocator<MTLDebugSubProgram *> >="__value_"^@}}
{MTLArgumentDescriptorPrivate="dataType"Q"index"Q"arrayLength"Q"access"Q"textureType"Q"constantBlockAlignment"Q}
B32@0:8Q16Q24
B24@0:8q16
@32@0:8^v16Q24
@40@0:8^v16@24Q32
@32@0:8@16^@24
v24@0:8^{MTLLibraryContainer=^{MTLPipelineCollection}i{?=[32C]}^{MTLLibraryData}@@@@@}16
@28@0:8@16I24
{?=II}16@0:8
@40@0:8@16@24^@32
v40@0:8@16@24@?32
@40@0:8@16r^{?=BQ^{?}}24^@32
v32@0:8@16@?24
@48@0:8@16Q24^@32^@40
v40@0:8@16Q24@?32
B24@0:8Q16
r^{?=IIIIIIIIIIIIIIIIIIffIIIIIIIIIIIIIIIIIIIIIIIIIIIIIQ}16@0:8
^v40@0:8@16^Q24@32
^v48@0:8@16Q24@32^Q40
v32@0:8^v16Q24
^v32@0:8@16^Q24
^v40@0:8@16Q24^Q32
^{NSObject=#}32@0:8@16@24
@40@0:8@16@24@32
@48@0:8@16@24@32^@40
@32@0:8@16^{NSObject=#}24
@40@0:8@16^{NSObject=#}24^@32
{?=b1b1b1b1b1b1b1b1b1b55}32@0:8@16@24
{?=b1b1b1b1b60}24@0:8^{NSObject=#}16
@24@0:8^{NSObject=#}16
@48@0:8@16@24@32@40
@32@0:8^{NSObject=#}16@24
v56@0:8^^Q16^^Q24^Q32@40@48
v48@0:8^^Q16^^Q24^Q32^{NSObject=#}40
v32@0:8^{?=ff}16Q24
{IndirectArgumentBufferCapabilities=b1b1b1b29}16@0:8
@40@0:8Q16Q24Q32
@48@0:8r^v16Q24Q32Q40
@56@0:8^v16Q24Q32Q40@?48
v40@0:8Q16^Q24Q32
v32@0:8Q16Q24
Q32@0:8Q16Q24
{?="maxColorAttachments"I"maxVertexAttributes"I"maxVertexBuffers"I"maxVertexTextures"I"maxVertexSamplers"I"maxVertexInlineDataSize"I"maxInterpolants"I"maxFragmentBuffers"I"maxFragmentTextures"I"maxFragmentSamplers"I"maxFragmentInlineDataSize"I"maxComputeBuffers"I"maxComputeTextures"I"maxComputeSamplers"I"maxComputeInlineDataSize"I"maxComputeLocalMemorySizes"I"maxTotalComputeThreadsPerThreadgroup"I"maxComputeThreadgroupMemory"I"maxLineWidth"f"maxPointSize"f"maxVisibilityQueryOffset"I"padmaxBufferLength"I"minConstantBufferAlignmentBytes"I"minBufferNoCopyAlignmentBytes"I"maxTextureWidth1D"I"maxTextureWidth2D"I"maxTextureHeight2D"I"maxTextureWidth3D"I"maxTextureHeight3D"I"maxTextureDepth3D"I"maxTextureDimensionCube"I"maxTextureLayers"I"linearTextureAlignmentBytes"I"iosurfaceTextureAlignmentBytes"I"iosurfaceReadOnlyTextureAlignmentBytes"I"deviceLinearTextureAlignmentBytes"I"deviceLinearReadOnlyTextureAlignmentBytes"I"maxFunctionConstantIndices"I"maxComputeThreadgroupMemoryAlignmentBytes"I"maxInterpolatedComponents"I"maxTessellationFactor"I"maxIndirectBuffers"I"maxIndirectTextures"I"maxIndirectSamplers"I"maxIndirectSamplersPerDevice"I"maxCustomSamplePositions"I"maxTextureBufferWidth"I"maxComputeAttributes"I"maxFramebufferStorageBits"I"maxBufferLength"Q}
@"MTLCompiler"
@"NSObject<OS_dispatch_queue>"
@"MTLDeviceFeatureQueries"
^{MTLLibraryBuilder=@{map<MTLLibraryIdentifier, MTLLibraryContainer *, std::__1::less<MTLLibraryIdentifier>, std::__1::allocator<std::__1::pair<const MTLLibraryIdentifier, MTLLibraryContainer *> > >={__tree<std::__1::__value_type<MTLLibraryIdentifier, MTLLibraryContainer *>, std::__1::__map_value_compare<MTLLibraryIdentifier, std::__1::__value_type<MTLLibraryIdentifier, MTLLibraryContainer *>, std::__1::less<MTLLibraryIdentifier>, true>, std::__1::allocator<std::__1::__value_type<MTLLibraryIdentifier, MTLLibraryContainer *> > >=^{__tree_end_node<std::__1::__tree_node_base<void *> *>}{__compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *> *>, std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<MTLLibraryIdentifier, MTLLibraryContainer *>, void *> > >={__tree_end_node<std::__1::__tree_node_base<void *> *>=^{__tree_node_base<void *>}}}{__compressed_pair<unsigned long, std::__1::__map_value_compare<MTLLibraryIdentifier, std::__1::__value_type<MTLLibraryIdentifier, MTLLibraryContainer *>, std::__1::less<MTLLibraryIdentifier>, true> >=Q}}}@B}
^{MTLPipelineLibraryBuilder=@@}
^{MTLPipelineCollection={basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >={__compressed_pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep, std::__1::allocator<char> >={__rep=(?={__long=QQ*}{__short=(?=Cc)[23c]}{__raw=[3Q]})}}}{unordered_map<MTLLibraryContainer *, MTLPipelineLibrarySerializer::LibraryDescriptor *, std::__1::hash<MTLLibraryContainer *>, std::__1::equal_to<MTLLibraryContainer *>, std::__1::allocator<std::__1::pair<MTLLibraryContainer *const, MTLPipelineLibrarySerializer::LibraryDescriptor *> > >={__hash_table<std::__1::__hash_value_type<MTLLibraryContainer *, MTLPipelineLibrarySerializer::LibraryDescriptor *>, std::__1::__unordered_map_hasher<MTLLibraryContainer *, std::__1::__hash_value_type<MTLLibraryContainer *, MTLPipelineLibrarySerializer::LibraryDescriptor *>, std::__1::hash<MTLLibraryContainer *>, true>, std::__1::__unordered_map_equal<MTLLibraryContainer *, std::__1::__hash_value_type<MTLLibraryContainer *, MTLPipelineLibrarySerializer::LibraryDescriptor *>, std::__1::equal_to<MTLLibraryContainer *>, true>, std::__1::allocator<std::__1::__hash_value_type<MTLLibraryContainer *, MTLPipelineLibrarySerializer::LibraryDescriptor *> > >={unique_ptr<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<MTLLibraryContainer *, MTLPipelineLibrarySerializer::LibraryDescriptor *>, void *> *> *[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<MTLLibraryContainer *, MTLPipelineLibrarySerializer::LibraryDescriptor *>, void *> *> *> > >={__compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<MTLLibraryContainer *, MTLPipelineLibrarySerializer::LibraryDescriptor *>, void *> *> **, std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<MTLLibraryContainer *, MTLPipelineLibrarySerializer::LibraryDescriptor *>, void *> *> *> > >=^^{__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<MTLLibraryContainer *, MTLPipelineLibrarySerializer::LibraryDescriptor *>, void *> *>}{__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<MTLLibraryContainer *, MTLPipelineLibrarySerializer::LibraryDescriptor *>, void *> *> *> >={__compressed_pair<unsigned long, std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<MTLLibraryContainer *, MTLPipelineLibrarySerializer::LibraryDescriptor *>, void *> *> *> >=Q}}}}{__compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<MTLLibraryContainer *, MTLPipelineLibrarySerializer::LibraryDescriptor *>, void *> *>, std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<MTLLibraryContainer *, MTLPipelineLibrarySerializer::LibraryDescriptor *>, void *> > >={__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<MTLLibraryContainer *, MTLPipelineLibrarySerializer::LibraryDescriptor *>, void *> *>=^{__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<MTLLibraryContainer *, MTLPipelineLibrarySerializer::LibraryDescriptor *>, void *> *>}}}{__compressed_pair<unsigned long, std::__1::__unordered_map_hasher<MTLLibraryContainer *, std::__1::__hash_value_type<MTLLibraryContainer *, MTLPipelineLibrarySerializer::LibraryDescriptor *>, std::__1::hash<MTLLibraryContainer *>, true> >=Q}{__compressed_pair<float, std::__1::__unordered_map_equal<MTLLibraryContainer *, std::__1::__hash_value_type<MTLLibraryContainer *, MTLPipelineLibrarySerializer::LibraryDescriptor *>, std::__1::equal_to<MTLLibraryContainer *>, true> >=f}}}{unordered_map<_MTLFunction *, MTLPipelineLibrarySerializer::FunctionDescriptor *, std::__1::hash<_MTLFunction *>, std::__1::equal_to<_MTLFunction *>, std::__1::allocator<std::__1::pair<_MTLFunction *const, MTLPipelineLibrarySerializer::FunctionDescriptor *> > >={__hash_table<std::__1::__hash_value_type<_MTLFunction *, MTLPipelineLibrarySerializer::FunctionDescriptor *>, std::__1::__unordered_map_hasher<_MTLFunction *, std::__1::__hash_value_type<_MTLFunction *, MTLPipelineLibrarySerializer::FunctionDescriptor *>, std::__1::hash<_MTLFunction *>, true>, std::__1::__unordered_map_equal<_MTLFunction *, std::__1::__hash_value_type<_MTLFunction *, MTLPipelineLibrarySerializer::FunctionDescriptor *>, std::__1::equal_to<_MTLFunction *>, true>, std::__1::allocator<std::__1::__hash_value_type<_MTLFunction *, MTLPipelineLibrarySerializer::FunctionDescriptor *> > >={unique_ptr<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<_MTLFunction *, MTLPipelineLibrarySerializer::FunctionDescriptor *>, void *> *> *[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<_MTLFunction *, MTLPipelineLibrarySerializer::FunctionDescriptor *>, void *> *> *> > >={__compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<_MTLFunction *, MTLPipelineLibrarySerializer::FunctionDescriptor *>, void *> *> **, std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<_MTLFunction *, MTLPipelineLibrarySerializer::FunctionDescriptor *>, void *> *> *> > >=^^{__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<_MTLFunction *, MTLPipelineLibrarySerializer::FunctionDescriptor *>, void *> *>}{__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<_MTLFunction *, MTLPipelineLibrarySerializer::FunctionDescriptor *>, void *> *> *> >={__compressed_pair<unsigned long, std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<_MTLFunction *, MTLPipelineLibrarySerializer::FunctionDescriptor *>, void *> *> *> >=Q}}}}{__compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<_MTLFunction *, MTLPipelineLibrarySerializer::FunctionDescriptor *>, void *> *>, std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<_MTLFunction *, MTLPipelineLibrarySerializer::FunctionDescriptor *>, void *> > >={__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<_MTLFunction *, MTLPipelineLibrarySerializer::FunctionDescriptor *>, void *> *>=^{__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<_MTLFunction *, MTLPipelineLibrarySerializer::FunctionDescriptor *>, void *> *>}}}{__compressed_pair<unsigned long, std::__1::__unordered_map_hasher<_MTLFunction *, std::__1::__hash_value_type<_MTLFunction *, MTLPipelineLibrarySerializer::FunctionDescriptor *>, std::__1::hash<_MTLFunction *>, true> >=Q}{__compressed_pair<float, std::__1::__unordered_map_equal<_MTLFunction *, std::__1::__hash_value_type<_MTLFunction *, MTLPipelineLibrarySerializer::FunctionDescriptor *>, std::__1::equal_to<_MTLFunction *>, true> >=f}}}{unordered_map<_MTLFunction *, MTLPipelineLibrarySerializer::MTLSpecializedFunctionDescriptor *, std::__1::hash<_MTLFunction *>, std::__1::equal_to<_MTLFunction *>, std::__1::allocator<std::__1::pair<_MTLFunction *const, MTLPipelineLibrarySerializer::MTLSpecializedFunctionDescriptor *> > >={__hash_table<std::__1::__hash_value_type<_MTLFunction *, MTLPipelineLibrarySerializer::MTLSpecializedFunctionDescriptor *>, std::__1::__unordered_map_hasher<_MTLFunction *, std::__1::__hash_value_type<_MTLFunction *, MTLPipelineLibrarySerializer::MTLSpecializedFunctionDescriptor *>, std::__1::hash<_MTLFunction *>, true>, std::__1::__unordered_map_equal<_MTLFunction *, std::__1::__hash_value_type<_MTLFunction *, MTLPipelineLibrarySerializer::MTLSpecializedFunctionDescriptor *>, std::__1::equal_to<_MTLFunction *>, true>, std::__1::allocator<std::__1::__hash_value_type<_MTLFunction *, MTLPipelineLibrarySerializer::MTLSpecializedFunctionDescriptor *> > >={unique_ptr<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<_MTLFunction *, MTLPipelineLibrarySerializer::MTLSpecializedFunctionDescriptor *>, void *> *> *[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<_MTLFunction *, MTLPipelineLibrarySerializer::MTLSpecializedFunctionDescriptor *>, void *> *> *> > >={__compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<_MTLFunction *, MTLPipelineLibrarySerializer::MTLSpecializedFunctionDescriptor *>, void *> *> **, std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<_MTLFunction *, MTLPipelineLibrarySerializer::MTLSpecializedFunctionDescriptor *>, void *> *> *> > >=^^{__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<_MTLFunction *, MTLPipelineLibrarySerializer::MTLSpecializedFunctionDescriptor *>, void *> *>}{__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<_MTLFunction *, MTLPipelineLibrarySerializer::MTLSpecializedFunctionDescriptor *>, void *> *> *> >={__compressed_pair<unsigned long, std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<_MTLFunction *, MTLPipelineLibrarySerializer::MTLSpecializedFunctionDescriptor *>, void *> *> *> >=Q}}}}{__compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<_MTLFunction *, MTLPipelineLibrarySerializer::MTLSpecializedFunctionDescriptor *>, void *> *>, std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<_MTLFunction *, MTLPipelineLibrarySerializer::MTLSpecializedFunctionDescriptor *>, void *> > >={__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<_MTLFunction *, MTLPipelineLibrarySerializer::MTLSpecializedFunctionDescriptor *>, void *> *>=^{__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<_MTLFunction *, MTLPipelineLibrarySerializer::MTLSpecializedFunctionDescriptor *>, void *> *>}}}{__compressed_pair<unsigned long, std::__1::__unordered_map_hasher<_MTLFunction *, std::__1::__hash_value_type<_MTLFunction *, MTLPipelineLibrarySerializer::MTLSpecializedFunctionDescriptor *>, std::__1::hash<_MTLFunction *>, true> >=Q}{__compressed_pair<float, std::__1::__unordered_map_equal<_MTLFunction *, std::__1::__hash_value_type<_MTLFunction *, MTLPipelineLibrarySerializer::MTLSpecializedFunctionDescriptor *>, std::__1::equal_to<_MTLFunction *>, true> >=f}}}{unordered_map<MTLLibraryContainer *, unsigned long, std::__1::hash<MTLLibraryContainer *>, std::__1::equal_to<MTLLibraryContainer *>, std::__1::allocator<std::__1::pair<MTLLibraryContainer *const, unsigned long> > >={__hash_table<std::__1::__hash_value_type<MTLLibraryContainer *, unsigned long>, std::__1::__unordered_map_hasher<MTLLibraryContainer *, std::__1::__hash_value_type<MTLLibraryContainer *, unsigned long>, std::__1::hash<MTLLibraryContainer *>, true>, std::__1::__unordered_map_equal<MTLLibraryContainer *, std::__1::__hash_value_type<MTLLibraryContainer *, unsigned long>, std::__1::equal_to<MTLLibraryContainer *>, true>, std::__1::allocator<std::__1::__hash_value_type<MTLLibraryContainer *, unsigned long> > >={unique_ptr<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<MTLLibraryContainer *, unsigned long>, void *> *> *[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<MTLLibraryContainer *, unsigned long>, void *> *> *> > >={__compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<MTLLibraryContainer *, unsigned long>, void *> *> **, std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<MTLLibraryContainer *, unsigned long>, void *> *> *> > >=^^{__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<MTLLibraryContainer *, unsigned long>, void *> *>}{__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<MTLLibraryContainer *, unsigned long>, void *> *> *> >={__compressed_pair<unsigned long, std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<MTLLibraryContainer *, unsigned long>, void *> *> *> >=Q}}}}{__compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<MTLLibraryContainer *, unsigned long>, void *> *>, std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<MTLLibraryContainer *, unsigned long>, void *> > >={__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<MTLLibraryContainer *, unsigned long>, void *> *>=^{__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<MTLLibraryContainer *, unsigned long>, void *> *>}}}{__compressed_pair<unsigned long, std::__1::__unordered_map_hasher<MTLLibraryContainer *, std::__1::__hash_value_type<MTLLibraryContainer *, unsigned long>, std::__1::hash<MTLLibraryContainer *>, true> >=Q}{__compressed_pair<float, std::__1::__unordered_map_equal<MTLLibraryContainer *, std::__1::__hash_value_type<MTLLibraryContainer *, unsigned long>, std::__1::equal_to<MTLLibraryContainer *>, true> >=f}}}{unordered_set<std::__1::basic_string<char>, std::__1::hash<std::__1::basic_string<char> >, std::__1::equal_to<std::__1::basic_string<char> >, std::__1::allocator<std::__1::basic_string<char> > >={__hash_table<std::__1::basic_string<char>, std::__1::hash<std::__1::basic_string<char> >, std::__1::equal_to<std::__1::basic_string<char> >, std::__1::allocator<std::__1::basic_string<char> > >={unique_ptr<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::basic_string<char>, void *> *> *[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::basic_string<char>, void *> *> *> > >={__compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::basic_string<char>, void *> *> **, std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::basic_string<char>, void *> *> *> > >=^^{__hash_node_base<std::__1::__hash_node<std::__1::basic_string<char>, void *> *>}{__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::basic_string<char>, void *> *> *> >={__compressed_pair<unsigned long, std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::basic_string<char>, void *> *> *> >=Q}}}}{__compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::basic_string<char>, void *> *>, std::__1::allocator<std::__1::__hash_node<std::__1::basic_string<char>, void *> > >={__hash_node_base<std::__1::__hash_node<std::__1::basic_string<char>, void *> *>=^{__hash_node_base<std::__1::__hash_node<std::__1::basic_string<char>, void *> *>}}}{__compressed_pair<unsigned long, std::__1::hash<std::__1::basic_string<char> > >=Q}{__compressed_pair<float, std::__1::equal_to<std::__1::basic_string<char> > >=f}}}{vector<MTLRenderPipelineDescriptor *, std::__1::allocator<MTLRenderPipelineDescriptor *> >=^@^@{__compressed_pair<MTLRenderPipelineDescriptor **, std::__1::allocator<MTLRenderPipelineDescriptor *> >=^@}}{vector<MTLComputePipelineDescriptor *, std::__1::allocator<MTLComputePipelineDescriptor *> >=^@^@{__compressed_pair<MTLComputePipelineDescriptor **, std::__1::allocator<MTLComputePipelineDescriptor *> >=^@}}@}
@"NSArray"
@44@0:8Q16Q24Q32B40
@36@0:8Q16Q24B32
@48@0:8Q16Q24Q32Q40
v20@0:8{?=CCCC}16
{?=CCCC}16@0:8
v20@0:8I16
r^{MTLTextureDescriptorPrivate=QQQQQQQQBQBBIQ(?=QQ)QBBIQQQQ}16@0:8
{MTLTextureDescriptorPrivate="textureType"Q"pixelFormat"Q"width"Q"height"Q"depth"Q"mipmapLevelCount"Q"sampleCount"Q"arrayLength"Q"zeroFill"B"rotation"Q"framebufferOnly"B"isDrawable"B"swizzle"I"compressionMode"Q""(?="textureUsage"Q"usage"Q)"resourceOptions"Q"allowGPUOptimizedContents"B"forceResourceIndex"B"resourceIndex"I"protectionOptions"Q"resolvedUsage"Q"cpuCacheMode"Q"storageMode"Q}
@36@0:8@16B24r^{MTLTargetDeviceArch=II*}28
^{MTLCompilerCache=^^?@ii}16@0:8
^{MTLCompilerCache=^^?@ii}
@"<MTLComputePipelineState>"48@0:8@"NSString"16Q24^@32^@40
@"<MTLRenderPipelineState>"48@0:8@"NSString"16Q24^@32^@40
@"MTLComputePipelineDescriptor"32@0:8@"NSString"16^@24
@"MTLRenderPipelineDescriptor"32@0:8@"NSString"16^@24
@"<MTLPipelineCache>"16@0:8
@32@0:8@16^{PipelineLibraryData={shared_ptr<MTLPipelineDescriptions>=^{MTLPipelineDescriptions}^{__shared_weak_count}}@@}24
^{PipelineLibraryData={shared_ptr<MTLPipelineDescriptions>=^{MTLPipelineDescriptions}^{__shared_weak_count}}@@}
{?=QQ}24@0:8@16
{?=QQ}32@0:8Q16Q24
@32@0:8Q16Q24
@48@0:8^v16Q24Q32@?40
@40@0:8@16^{__IOSurface=}24Q32
@40@0:8@16Q24Q32
@"<MTLCommandQueue>"24@0:8Q16
{?=QQ}24@0:8@"MTLTextureDescriptor"16
@"<MTLHeap>"24@0:8@"MTLHeapDescriptor"16
@"<MTLBuffer>"32@0:8Q16Q24
@"<MTLBuffer>"40@0:8r^v16Q24Q32
@"<MTLBuffer>"48@0:8^v16Q24Q32@?<v@?^vQ>40
@"<MTLDepthStencilState>"24@0:8@"MTLDepthStencilDescriptor"16
@"<MTLTexture>"24@0:8@"MTLTextureDescriptor"16
@"<MTLTexture>"40@0:8@"MTLTextureDescriptor"16^{__IOSurface=}24Q32
@"<MTLSamplerState>"24@0:8@"MTLSamplerDescriptor"16
@"<MTLLibrary>"16@0:8
@"<MTLLibrary>"32@0:8@"NSBundle"16^@24
@"<MTLLibrary>"32@0:8@"NSString"16^@24
@"<MTLLibrary>"32@0:8@"NSURL"16^@24
@"<MTLLibrary>"32@0:8@"NSObject<OS_dispatch_data>"16^@24
@"<MTLLibrary>"40@0:8@"NSString"16@"MTLCompileOptions"24^@32
v40@0:8@"NSString"16@"MTLCompileOptions"24@?<v@?@"<MTLLibrary>"@"NSError">32
@"<MTLRenderPipelineState>"32@0:8@"MTLRenderPipelineDescriptor"16^@24
@"<MTLRenderPipelineState>"48@0:8@"MTLRenderPipelineDescriptor"16Q24^@32^@40
v32@0:8@"MTLRenderPipelineDescriptor"16@?<v@?@"<MTLRenderPipelineState>"@"NSError">24
v40@0:8@"MTLRenderPipelineDescriptor"16Q24@?<v@?@"<MTLRenderPipelineState>"@"MTLRenderPipelineReflection"@"NSError">32
@"<MTLComputePipelineState>"32@0:8@"<MTLFunction>"16^@24
@"<MTLComputePipelineState>"48@0:8@"<MTLFunction>"16Q24^@32^@40
v32@0:8@"<MTLFunction>"16@?<v@?@"<MTLComputePipelineState>"@"NSError">24
v40@0:8@"<MTLFunction>"16Q24@?<v@?@"<MTLComputePipelineState>"@"MTLComputePipelineReflection"@"NSError">32
@"<MTLComputePipelineState>"48@0:8@"MTLComputePipelineDescriptor"16Q24^@32^@40
v40@0:8@"MTLComputePipelineDescriptor"16Q24@?<v@?@"<MTLComputePipelineState>"@"MTLComputePipelineReflection"@"NSError">32
@"<MTLFence>"16@0:8
@"<MTLArgumentEncoder>"24@0:8@"NSArray"16
@"<MTLIndirectCommandBuffer>"40@0:8@"MTLIndirectCommandBufferDescriptor"16Q24Q32
@"<MTLEvent>"16@0:8
@"<MTLSharedEvent>"16@0:8
@"<MTLSharedEvent>"24@0:8@"MTLSharedEventHandle"16
@24@0:8^{__IOSurface=}16
B44@0:8^@16Q24^Q32i40
v24@0:8^{MPSFunctionTable=}16
B40@0:8^{?=III}16Q24Q32
@48@0:8^v16Q24@32@?40
@28@0:8@16B24
r^{MTLTargetDeviceArch=II*}16@0:8
v24@0:8@"<MTLDeviceSPI>"16
@"<MTLBuffer>"24@0:8^{__IOSurface=}16
@"<MTLCommandQueue>"24@0:8@"MTLCommandQueueDescriptor"16
@"_MTLIndirectArgumentBufferLayout"24@0:8@"MTLStructType"16
@"<MTLArgumentEncoder>"24@0:8@"_MTLIndirectArgumentBufferLayout"16
@"<MTLBuffer>"40@0:8@"MTLIndirectCommandBufferDescriptor"16Q24Q32
@"<MTLIndirectRenderCommandEncoder>"24@0:8@"<MTLBuffer>"16
@"<MTLIndirectComputeCommandEncoder>"24@0:8@"<MTLBuffer>"16
@"<MTLSharedEvent>"20@0:8I16
@"<MTLBuffer>"24@0:8@"<MTLComputeCommandEncoder>"16
@"<MTLBuffer>"24@0:8@"<MTLRenderCommandEncoder>"16
@"<MTLBuffer>"40@0:8Q16Q24Q32
@"<MTLBuffer>"48@0:8r^v16Q24Q32Q40
@"<MTLBuffer>"56@0:8^v16Q24Q32Q40@?<v@?^vQ>48
v24@0:8@"<MTLBuffer>"16
v24@0:8@"<MTLTexture>"16
v24@0:8@"<MTLSamplerState>"16
v24@0:8@"<MTLComputePipelineState>"16
v24@0:8@"<MTLRenderPipelineState>"16
v24@0:8@"<MTLIndirectCommandBuffer>"16
v24@0:8@"NSArray"16
@"NSObject<OS_dispatch_data>"16@0:8
v24@0:8@"NSObject<OS_dispatch_data>"16
@"<MTLComputePipelineState>"32@0:8@"MTLComputePipelineDescriptor"16^@24
v32@0:8@"MTLComputePipelineDescriptor"16@?<v@?@"<MTLComputePipelineState>"@"NSError">24
@"<MTLFunction>"32@0:8^v16Q24
@"<MTLFunction>"40@0:8^v16@"NSObject<OS_dispatch_data>"24Q32
@"<MTLIndirectArgumentEncoder>"24@0:8@"NSArray"16
@"<MTLComputePipelineState>"40@0:8@"NSArray"16r^{?=BQ^{?}}24^@32
@"<MTLLibrary>"40@0:8@"NSArray"16r^{?=BQ^{?}}24^@32
@"<MTLPipelineLibrarySPI>"32@0:8@"NSString"16^@24
@"NSData"16@0:8
@"NSObject<OS_dispatch_data>"24@0:8@"MTLRenderPipelineDescriptor"16
@"NSObject<OS_dispatch_data>"24@0:8@"MTLComputePipelineDescriptor"16
@"MTLRenderPipelineDescriptor"32@0:8@"NSObject<OS_dispatch_data>"16@"<MTLDeserializationContext>"24
@"MTLComputePipelineDescriptor"32@0:8@"NSObject<OS_dispatch_data>"16@"<MTLDeserializationContext>"24
@"NSObject<OS_dispatch_data>"24@0:8@"MTLStructType"16
@"NSObject<OS_dispatch_data>"28@0:8@"MTLStructType"16I24
@"<MTLTexture>"48@0:8^v16Q24@"MTLTextureDescriptor"32@?<v@?^vQ>40
@"<MTLTextureLayout>"28@0:8@"MTLTextureDescriptor"16B24
@"<MTLIndirectArgumentEncoder>"24@0:8@"_MTLIndirectArgumentBufferLayout"16
v24@0:8@?16
v32@0:8@16d24
d16@0:8
v24@0:8@?<v@?@"<MTLCommandBuffer>">16
v24@0:8@"<MTLDrawable>"16
v32@0:8@"<MTLDrawable>"16d24
@"<MTLBlitCommandEncoder>"16@0:8
@"<MTLRenderCommandEncoder>"24@0:8@"MTLRenderPassDescriptor"16
@"<MTLComputeCommandEncoder>"16@0:8
@"<MTLComputeCommandEncoder>"24@0:8Q16
v32@0:8@"<MTLEvent>"16Q24
@"<MTLParallelRenderCommandEncoder>"24@0:8@"MTLRenderPassDescriptor"16
@"NSError"16@0:8
@"<MTLRenderCommandEncoder>"16@0:8
@32@0:8^{?=b8b24IQQ}16Q24
@"_MTLCommandBuffer<MTLCommandBuffer>"
@"MTLRenderPassDescriptor"
{_opaque_pthread_mutex_t="__sig"q"__opaque"[56c]}
q16@0:8
v24@0:8q16
@"NSURL"
@24@0:8q16
@"<MTLCaptureScope>"
@20@0:8i16
i16@0:8
{_MTLResourceListPoolPrivate="queue"{resourceListQueue="tqh_first"@"MTLResourceList""tqh_last"^@}"lock"{os_unfair_lock_s="_os_unfair_lock_opaque"I}"count"i}
B32@0:8@16@24
@"_MTLDevice"
@"<MTLBuffer>"
@"<MTLArgumentEncoder>"
^{_MTLUtilityBufferResourceTable=[6Q][6Q]{map<unsigned long long, id<MTLBufferSPI>, std::__1::less<unsigned long long>, std::__1::allocator<std::__1::pair<const unsigned long long, id<MTLBufferSPI> > > >={__tree<std::__1::__value_type<unsigned long long, id<MTLBufferSPI> >, std::__1::__map_value_compare<unsigned long long, std::__1::__value_type<unsigned long long, id<MTLBufferSPI> >, std::__1::less<unsigned long long>, true>, std::__1::allocator<std::__1::__value_type<unsigned long long, id<MTLBufferSPI> > > >=^{__tree_end_node<std::__1::__tree_node_base<void *> *>}{__compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *> *>, std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<unsigned long long, id<MTLBufferSPI> >, void *> > >={__tree_end_node<std::__1::__tree_node_base<void *> *>=^{__tree_node_base<void *>}}}{__compressed_pair<unsigned long, std::__1::__map_value_compare<unsigned long long, std::__1::__value_type<unsigned long long, id<MTLBufferSPI> >, std::__1::less<unsigned long long>, true> >=Q}}}{map<unsigned long long, id<MTLSamplerStateSPI>, std::__1::less<unsigned long long>, std::__1::allocator<std::__1::pair<const unsigned long long, id<MTLSamplerStateSPI> > > >={__tree<std::__1::__value_type<unsigned long long, id<MTLSamplerStateSPI> >, std::__1::__map_value_compare<unsigned long long, std::__1::__value_type<unsigned long long, id<MTLSamplerStateSPI> >, std::__1::less<unsigned long long>, true>, std::__1::allocator<std::__1::__value_type<unsigned long long, id<MTLSamplerStateSPI> > > >=^{__tree_end_node<std::__1::__tree_node_base<void *> *>}{__compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *> *>, std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<unsigned long long, id<MTLSamplerStateSPI> >, void *> > >={__tree_end_node<std::__1::__tree_node_base<void *> *>=^{__tree_node_base<void *>}}}{__compressed_pair<unsigned long, std::__1::__map_value_compare<unsigned long long, std::__1::__value_type<unsigned long long, id<MTLSamplerStateSPI> >, std::__1::less<unsigned long long>, true> >=Q}}}{map<unsigned long long, id<MTLTextureSPI>, std::__1::less<unsigned long long>, std::__1::allocator<std::__1::pair<const unsigned long long, id<MTLTextureSPI> > > >={__tree<std::__1::__value_type<unsigned long long, id<MTLTextureSPI> >, std::__1::__map_value_compare<unsigned long long, std::__1::__value_type<unsigned long long, id<MTLTextureSPI> >, std::__1::less<unsigned long long>, true>, std::__1::allocator<std::__1::__value_type<unsigned long long, id<MTLTextureSPI> > > >=^{__tree_end_node<std::__1::__tree_node_base<void *> *>}{__compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *> *>, std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<unsigned long long, id<MTLTextureSPI> >, void *> > >={__tree_end_node<std::__1::__tree_node_base<void *> *>=^{__tree_node_base<void *>}}}{__compressed_pair<unsigned long, std::__1::__map_value_compare<unsigned long long, std::__1::__value_type<unsigned long long, id<MTLTextureSPI> >, std::__1::less<unsigned long long>, true> >=Q}}}{map<unsigned long long, NSObject *, std::__1::less<unsigned long long>, std::__1::allocator<std::__1::pair<const unsigned long long, NSObject *> > >={__tree<std::__1::__value_type<unsigned long long, NSObject *>, std::__1::__map_value_compare<unsigned long long, std::__1::__value_type<unsigned long long, NSObject *>, std::__1::less<unsigned long long>, true>, std::__1::allocator<std::__1::__value_type<unsigned long long, NSObject *> > >=^{__tree_end_node<std::__1::__tree_node_base<void *> *>}{__compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *> *>, std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<unsigned long long, NSObject *>, void *> > >={__tree_end_node<std::__1::__tree_node_base<void *> *>=^{__tree_node_base<void *>}}}{__compressed_pair<unsigned long, std::__1::__map_value_compare<unsigned long long, std::__1::__value_type<unsigned long long, NSObject *>, std::__1::less<unsigned long long>, true> >=Q}}}{map<unsigned long long, id<MTLIndirectCommandBufferSPI>, std::__1::less<unsigned long long>, std::__1::allocator<std::__1::pair<const unsigned long long, id<MTLIndirectCommandBufferSPI> > > >={__tree<std::__1::__value_type<unsigned long long, id<MTLIndirectCommandBufferSPI> >, std::__1::__map_value_compare<unsigned long long, std::__1::__value_type<unsigned long long, id<MTLIndirectCommandBufferSPI> >, std::__1::less<unsigned long long>, true>, std::__1::allocator<std::__1::__value_type<unsigned long long, id<MTLIndirectCommandBufferSPI> > > >=^{__tree_end_node<std::__1::__tree_node_base<void *> *>}{__compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *> *>, std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<unsigned long long, id<MTLIndirectCommandBufferSPI> >, void *> > >={__tree_end_node<std::__1::__tree_node_base<void *> *>=^{__tree_node_base<void *>}}}{__compressed_pair<unsigned long, std::__1::__map_value_compare<unsigned long long, std::__1::__value_type<unsigned long long, id<MTLIndirectCommandBufferSPI> >, std::__1::less<unsigned long long>, true> >=Q}}}}
r^{MTLSamplerDescriptorPrivate=(?={?=b2b2b2b3b3b3b1b1b3b1b1}I)(?=If)(?=If)(?=If)Q@I}16@0:8
{MTLSamplerDescriptorPrivate=""(?=""{?="minFilter"b2"magFilter"b2"mipFilter"b2"sAddressMode"b3"tAddressMode"b3"rAddressMode"b3"normalizedCoords"b1"lodAverage"b1"compareFunction"b3"supportArgumentBuffers"b1"forceResourceIndex"b1}"miscHash"I)""(?="lodMinClampHash"I"lodMinClamp"f)""(?="lodMaxClampHash"I"lodMaxClamp"f)""(?="lodBiasHash"I"lodBias"f)"maxAnisotropy"Q"label"@"NSString""resourceIndex"I}
r^{MTLHeapDescriptorPrivate=QQQqQ}16@0:8
^{MTLHeapDescriptorPrivate=QQQqQ}
@32@0:8q16Q24
@32@0:8@16Q24
C16@0:8
v20@0:8C16
@"NSDictionary"
@41@0:8@16Q24Q32{MTLAttributeFlags=(?={?=b1b1b1b5}C)}40
@44@0:8@16Q24Q32B40
@32@0:8^@16I24I28
@48@0:8@16@24Q32Q40
@"<MTLFunction>"24@0:8@"NSString"16
@"<MTLFunction>"40@0:8@"NSString"16@"MTLFunctionConstantValues"24^@32
v40@0:8@"NSString"16@"MTLFunctionConstantValues"24@?<v@?@"<MTLFunction>"@"NSError">32
v48@0:8@16@24@32@?40
@"<MTLFunction>"48@0:8@"NSString"16@"MTLFunctionConstantValues"24@"<MTLPipelineLibrary>"32^@40
v48@0:8@"NSString"16@"MTLFunctionConstantValues"24@"<MTLPipelineLibrary>"32@?<v@?@"<MTLFunction>"@"NSError">40
@32@0:8^{MTLLibraryContainer=^{MTLPipelineCollection}i{?=[32C]}^{MTLLibraryData}@@@@@}16@24
^{MTLLibraryData=^^?i@@}16@0:8
^{MTLLibraryContainer=^{MTLPipelineCollection}i{?=[32C]}^{MTLLibraryData}@@@@@}16@0:8
^{MTLLibraryData=^^?i@@}
@"NSMutableDictionary"
^{MTLLibraryContainer=^{MTLPipelineCollection}i{?=[32C]}^{MTLLibraryData}@@@@@}
@32@0:8Q16^@24
@"<MTLArgumentEncoder>"32@0:8Q16^@24
@"NSDictionary"16@0:8
v32@0:8Q16@?24
r^{?=[32C]}16@0:8
@28@0:8@16C24
@"MTLFunctionReflection"24@0:8Q16
v32@0:8Q16@?<v@?@"MTLFunctionReflection">24
@"<MTLFunction>"28@0:8@"NSData"16C24
@"MTLType"16@0:8
@48@0:8@16Q24^{MTLLibraryData=^^?i@@}32@40
@"MTLType"
@56@0:8@16Q24^{MTLLibraryData=^^?i@@}32^{MTLFunctionData=QQQQQSSSS{?=[32C]}C@b2b6@}40@48
^{MTLProgramObject={VariantList<4>={Chunk=[4{VariantEntry=*QQQ@@Q@}]^{Chunk}}^{Chunk}I{VariantEntry=*QQQ@@Q@}}@@@@@}16@0:8
r^{MTLFunctionData=QQQQQSSSS{?=[32C]}C@b2b6@}16@0:8
v52@0:8i16I20@24@32B40@?44
@48@0:8i16I20@24@32^@40
{MTLFunctionData="bitCodeOffset"Q"bitCodeFileSize"Q"publicArgumentsOffset"Q"privateArgumentsOffset"Q"sourceArchiveOffset"Q"airMajorVersion"S"airMinorVersion"S"languageMajorVersion"S"languageMinorVersion"S"bitcodeHash"{?="key"[32C]}"bitcodeType"C"pluginData"@"NSData""patchType"b2"controlPointCount"b6"functionInputs"@"NSObject<OS_dispatch_data>"}
^{MTLProgramObject={VariantList<4>={Chunk=[4{VariantEntry=*QQQ@@Q@}]^{Chunk}}^{Chunk}I{VariantEntry=*QQQ@@Q@}}@@@@@}
r^v24@0:8^Q16
v32@0:8r^v16Q24
@56@0:8@16^{?=[32C]}24@32@40Q48
v44@0:8@16@24B32@?36
v76@0:8@16@24@32B40Q44@52I60B64@?68
v68@0:8@16@24@32Q40B48I52B56@?60
v76@0:8@16@24@32Q40B48I52@56B64@?68
v64@0:8@16@24@32Q40@48@?56
v68@0:8@16@24@32Q40@48B56@?60
v56@0:8@16@24@32Q40@?48
v44@0:8@16Q24B32@?36
@56@0:8@16Q24^@32^@40@?48
@64@0:8@16Q24@32^@40^@48@?56
^{MTLCompilerConnectionManager=^^?}16@0:8
^{MTLCompilerConnectionManager=^^?}
v56@0:8Q16Q24Q32Q40Q48
v80@0:8Q16Q24Q32@40Q48Q56q64Q72
v80@0:8Q16Q24Q32@"<MTLBuffer>"40Q48Q56q64Q72
@"_MTLIndirectDrawArguments"16@0:8
@"_MTLIndirectDrawIndexedArguments"16@0:8
@"_MTLIndirectDrawPatchesArguments"16@0:8
@"_MTLIndirectDrawIndexedPatchesArguments"16@0:8
@"_MTLIndirectTessellationFactorArguments"16@0:8
v112@0:8Q16Q24Q32@40Q48@56Q64Q72Q80@88Q96Q104
v116@0:8Q16Q24Q32@40Q48@56Q64Q72Q80@88Q96Q104f112
v96@0:8Q16Q24Q32@40Q48Q56Q64@72Q80Q88
v100@0:8Q16Q24Q32@40Q48Q56Q64@72Q80Q88f96
@"<MTLHeap>"16@0:8
v104@0:8^v16Q24Q32{?={?=QQQ}{?=QQQ}}40Q88Q96
v104@0:8{?={?=QQQ}{?=QQQ}}16Q64Q72r^v80Q88Q96
v88@0:8^v16Q24{?={?=QQQ}{?=QQQ}}32Q80
v88@0:8{?={?=QQQ}{?=QQQ}}16Q64r^v72Q80
@64@0:8Q16Q24{_NSRange=QQ}32{_NSRange=QQ}48
@68@0:8Q16Q24{_NSRange=QQ}32{_NSRange=QQ}48{?=CCCC}64
^{__IOSurface=}16@0:8
@"<MTLTexture>"24@0:8Q16
@"<MTLTexture>"64@0:8Q16Q24{_NSRange=QQ}32{_NSRange=QQ}48
@"<MTLTexture>"68@0:8Q16Q24{_NSRange=QQ}32{_NSRange=QQ}48{?=CCCC}64
@"<MTLResource>"16@0:8
@"<MTLTexture>"16@0:8
@"<MTLBuffer>"16@0:8
B32@0:8r^@16Q24
v20@0:8i16
B24@0:8@"<MTLResource>"16
@"MTLResourceAllocationInfo"16@0:8
v112@0:8^v16Q24Q32{?={?=QQQ}{?=QQQ}}40Q88Q96Q104
v112@0:8{?={?=QQQ}{?=QQQ}}16Q64Q72r^v80Q88Q96Q104
@"<MTLTexture>"48@0:8Q16Q24Q32Q40
@"NSString"24@0:8Q16
v48@0:8{?=dddd}16
{?=dddd}16@0:8
r^{MTLRenderPassAttachmentDescriptorPrivate=@QQQQQQ{?=dddd}dI@QQQQQQB}16@0:8
{MTLRenderPassAttachmentDescriptorPrivate="texture"@"<MTLTextureImplementation>""level"Q"slice"Q"depthPlane"Q"loadAction"Q"storeAction"Q"storeActionOptions"Q"clearColor"{?="red"d"green"d"blue"d"alpha"d}"clearDepth"d"clearStencil"I"resolveTexture"@"<MTLTextureImplementation>""resolveLevel"Q"resolveSlice"Q"resolveDepthPlane"Q"resolveFilter"Q"width"Q"height"Q"yInvert"B}
v24@0:8d16
[8@"MTLRenderPassColorAttachmentDescriptorInternal"]
@"MTLRenderPassDepthAttachmentDescriptorInternal"
@"MTLRenderPassStencilAttachmentDescriptorInternal"
v32@0:8r^{?=ff}16Q24
Q32@0:8^{?=ff}16Q24
v32@0:8{_NSRange=QQ}16
v40@0:8@16{_NSRange=QQ}24
@"<MTLTexture>"40@0:8@"MTLTextureDescriptor"16Q24Q32
v40@0:8@"NSString"16{_NSRange=QQ}24
B40@0:8@16^Q24^Q32
r^{MTLRenderPassDescriptorPrivate=@@QQBBB[4{?=ff}]Q}16@0:8
{MTLRenderPassDescriptorPrivate="attachments"@"MTLRenderPassColorAttachmentDescriptorArrayInternal""visibilityResultBuffer"@"<MTLBuffer>""renderTargetWidth"Q"renderTargetHeight"Q"fineGrainedBackgroundVisibilityEnabled"B"ditherEnabled"B"openGLModeEnabled"B"customSamplePositions"[4{?="x"f"y"f}]"numCustomSamplePositions"Q}
v28@0:8I16I20I24
v32@0:8r^@16Q24
@56@0:8@16@24@32Q40{?=b1b1b1b1b60}48
@48@0:8@16@24Q32{?=b1b1b1b1b60}40
{?=b1b1b1b1b60}16@0:8
v32@0:8^Q16Q24
{?="kernelRegisterSpill"b1"threadgroupBarrier"b1"deviceMemoryAtomics"b1"threadgroupMemoryAtomics"b1"reserved"b60}
r^{MTLComputePipelineDescriptorPrivate=@@BS@@@@BBI^v}16@0:8
{MTLComputePipelineDescriptorPrivate="label"@"NSString""computeFunction"@"<MTLFunction>""threadGroupSizeIsMultipleOfThreadExecutionWidth"B"maxTotalThreadsPerThreadgroup"S"stageInputDescriptor"@"MTLStageInputOutputDescriptor""driverCompilerOptions"@"NSDictionary""buffers"@"MTLPipelineBufferDescriptorArrayInternal""pipelineLibrary"@"<MTLPipelineLibrary>""supportIndirectCommandBuffers"B"forceResourceIndex"B"resourceIndex"I"pad0"^v}
@"MTLIndirectArgumentBufferEmulationData"
v64@0:8{?=QQQ}16{?=QQQ}40
v64@0:8{?={?=QQQ}{?=QQQ}}16
{?={?=QQQ}{?=QQQ}}16@0:8
@"_MTLIndirectDispatchThreadgroupsArguments"16@0:8
@"_MTLIndirectDispatchThreadsArguments"16@0:8
v32@0:8r*16Q24
v32@0:8r*16r*24
v24@0:8r*16
v32@0:8@16r*24
v36@0:8@16r*24B32
v32@0:8@"<MTLBuffer>"16r*24
v36@0:8@"<MTLTexture>"16r*24B32
v32@0:8@"<MTLTexture>"16r*24
@32@0:8^@16Q24
v32@0:8^@16Q24
@68@0:8Q16@24Q32Q40Q48B56B60B64
@64@0:8Q16@24Q32Q40Q48B56B60
@72@0:8@16Q24Q32Q40Q48Q56@64
@48@0:8Q16Q24Q32@40
@60@0:8@16Q24Q32Q40B48Q52
@68@0:8@16Q24Q32Q40B48Q52@60
@48@0:8@16Q24@32Q40
@68@0:8Q16Q24Q32Q40Q48Q56B64
r^{MTLRenderPipelineAttachmentDescriptorPrivate=(?={?=b1b3b3b5b5b5b5b4b1b4b28}{?=Q})}16@0:8
{MTLRenderPipelineAttachmentDescriptorPrivate=""(?=""{?="blendingEnabled"b1"rgbBlendOperation"b3"alphaBlendOperation"b3"sourceRGBBlendFactor"b5"sourceAlphaBlendFactor"b5"destinationRGBBlendFactor"b5"destinationAlphaBlendFactor"b5"writeMask"b4"logicOpEnabled"b1"logicOp"b4"pixelFormat"b28}""{?="bits"Q})}
@64@0:8@16@24@32@40Q48{?=b1b1b1b1b1b1b1b1b1b55}56
{?=b1b1b1b1b1b1b1b1b1b55}16@0:8
{?="fragmentUsesDiscard"b1"fragmentWritesSampleMask"b1"fragmentWritesDepth"b1"vertexRegisterSpill"b1"fragmentRegisterSpill"b1"fragmentReadsFramebufferValues"b1"fragmentPunchThrough"b1"vertexWritesPointSize"b1"private2"b1"reserved"b55}
[8@"MTLRenderPipelineColorAttachmentDescriptorInternal"]
r^{MTLRenderPipelineDescriptorPrivate=@[8Q]QQQQBQQQQQB(?=QQ)Q(?=If)(?=[2I]{?=b1b1b1b2b1b1b1b1b1b1b1b1b1b1b8b3b1b4b1b1b1})IIQ@@@@@@@@^v^v}16@0:8
@40@0:8Q16Q24^@32
{MTLRenderPipelineDescriptorPrivate="attachments"@"MTLRenderPipelineColorAttachmentDescriptorArrayInternal""rtBlendDescHash"[8Q]"depthAttachmentPixelFormat"Q"stencilAttachmentPixelFormat"Q"tessellationPartitionMode"Q"maxTessellationFactor"Q"tessellationFactorScaleEnabled"B"tessellationFactorFormat"Q"tessellationControlPointIndexType"Q"tessellationFactorStepFunction"Q"tessellationOutputWindingOrder"Q"postVertexDumpBufferIndex"Q"supportIndirectCommandBuffers"B""(?="sampleCount"Q"rasterSampleCount"Q)"sampleMask"Q""(?="sampleCoverageHash"I"sampleCoverage"f)""(?="miscHash"[2I]""{?="alphaToCoverageEnabled"b1"alphaToOneEnabled"b1"rasterizationEnabled"b1"inputPrimitiveTopology"b2"vertexEnabled"b1"depthStencilWriteDisabled"b1"openGLMode"b1"sampleCoverageInvert"b1"private4"b1"private5"b1"twoSideEnabled"b1"pointSizeOutputVS"b1"pointCoordLowerLeft"b1"pointSmoothEnabled"b1"clipDistanceEnableMask"b8"alphaTestFunc"b3"alphaTestEnabled"b1"logicOp"b4"logicOpEnabled"b1"forceResourceIndex"b1"forceSoftwareVertexFetch"b1})"vertexDepthCompareClampMask"I"fragmentDepthCompareClampMask"I"resourceIndex"Q"label"@"NSString""vertexFunction"@"<MTLFunction>""fragmentFunction"@"<MTLFunction>""vertexDescriptor"@"MTLVertexDescriptorInternal""vertexBuffers"@"MTLPipelineBufferDescriptorArrayInternal""fragmentBuffers"@"MTLPipelineBufferDescriptorArrayInternal""driverCompilerOptions"@"NSDictionary""pipelineLibrary"@"<MTLPipelineLibrary>""pad0"^v"pad1"^v}
{?="buckets"[64S]"numEntries"I"capacity"I"entries"^{MTLResourceListEntry}"pool"@"MTLResourceListPool""entry"{?="tqe_next"@"MTLResourceList""tqe_prev"^@}"time_added"Q}
v24@0:8@"NSCoder"16
@24@0:8@"NSCoder"16
^{MTLSharedEventHandlePrivate=I@Q}
r^{MTLStencilDescriptorPrivate=QQQQII}16@0:8
{MTLStencilDescriptorPrivate="stencilCompareFunction"Q"stencilFailureOperation"Q"depthFailureOperation"Q"depthStencilPassOperation"Q"readMask"I"writeMask"I}
r^{MTLDepthStencilDescriptorPrivate=@@QB@}16@0:8
{MTLDepthStencilDescriptorPrivate="frontFaceStencil"@"MTLStencilDescriptorInternal""backFaceStencil"@"MTLStencilDescriptorInternal""depthCompareFunction"Q"depthWriteEnabled"B"label"@"NSString"}
@"<MTLCommandBuffer>"16@0:8
v24@0:8@?<v@?@"<MTLDrawable>">16
@32@0:8@16B24B28
v32@0:8Q16@24
v40@0:8Q16Q24@32
v44@0:8i16Q20r^@28Q36
^v24@0:8^Q16
@"<MTLCommandEncoder>"
@"_MTLCommandQueue<MTLCommandQueue>"
^{MTLDispatch=^{MTLDispatch}@?}
^{MTLSyncDispatch=^{MTLSyncDispatch}@?}
{_opaque_pthread_cond_t="__sig"q"__opaque"[40c]}
@"NSError"
@"NSMutableArray"
[31@"MTLVertexBufferLayoutDescriptorInternal"]
[31@"MTLVertexAttributeDescriptorInternal"]
@"MTLVertexBufferLayoutDescriptorArrayInternal"
@"MTLVertexAttributeDescriptorArrayInternal"
v48@0:8@16Q24Q32@40
i24@0:8@16
i32@0:8@16Q24
@"NSObject<OS_dispatch_group>"
@"NSObject<OS_dispatch_source>"
@"NSObject<OS_dispatch_semaphore>"
q24@0:8q16
[96{?="name"@"NSString""requirement"q"supported"B}]
@"<MTLDeviceSPI>"
