0E19ItemIDCacheListener
N6apsync19NotificationManager8ListenerE
NSt3__120__shared_ptr_emplaceI30FilteringSpeakerChangeListenerNS_9allocatorIS1_EEEE
30FilteringSpeakerChangeListener
21SpeakerChangeListener
NSt3__120__shared_ptr_emplaceINS_4pairIPKvPFvS3_S3_S3_EEENS_9allocatorIS6_EEEE
NSt3__119basic_ostringstreamIcNS_11char_traitsIcEENS_9allocatorIcEEEE
0123456789abcdefNSt3__110__function6__funcIZN20SyncStateManagerImpl11startServerERKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEESA_iE3$_0NS6_ISB_EEFiSA_EEE
NSt3__110__function6__baseIFiRKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEEEE
ZN20SyncStateManagerImpl11startServerERKNSt3__112basic_stringIcNS0_11char_traitsIcEENS0_9allocatorIcEEEES8_iE3$_0
NSt3__120__shared_ptr_emplaceI21SpeakerChangeListenerNS_9allocatorIS1_EEEE
NSt3__120__shared_ptr_emplaceI29GroupsAvailableChangeListenerNS_9allocatorIS1_EEEE
29GroupsAvailableChangeListener
NSt3__120__shared_ptr_emplaceI23SetSpeakerGroupListenerNS_9allocatorIS1_EEEE
23SetSpeakerGroupListener
NSt3__110__function6__funcIPFNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEERKS7_ENS5_ISB_EESA_EE
NSt3__110__function6__baseIFNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEERKS7_EEE
PFNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEERKS5_E
FNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEERKS5_E
NSt3__110__function6__funcIZN20SyncStateManagerImpl17createHomeManagerERKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEESA_E3$_3NS6_ISB_EEFNS_10shared_ptrIN6apsync4PipeEEEvEEE
NSt3__110__function6__baseIFNS_10shared_ptrIN6apsync4PipeEEEvEEE
NSt3__120__shared_ptr_emplaceIN6apsync16SocketConnectionENS_9allocatorIS2_EEEE
NSt3__110__function6__funcIZZN20SyncStateManagerImpl17createHomeManagerERKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEESA_ENK3$_3clEvEUlSA_E_NS6_ISC_EEFNS_4pairIS8_iEESA_EEE
NSt3__110__function6__baseIFNS_4pairINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEiEERKS8_EEE
ZZN20SyncStateManagerImpl17createHomeManagerERKNSt3__112basic_stringIcNS0_11char_traitsIcEENS0_9allocatorIcEEEES8_ENK3$_3clEvEUlS8_E_
ZN20SyncStateManagerImpl17createHomeManagerERKNSt3__112basic_stringIcNS0_11char_traitsIcEENS0_9allocatorIcEEEES8_E3$_3
NSt3__120__shared_ptr_emplaceI19ItemIDCacheListenerNS_9allocatorIS1_EEEE
N6apsync4crdt12Merge_VolumeE
N6apsync4crdt10Merge_NodeE
NSt3__115basic_stringbufIcNS_11char_traitsIcEENS_9allocatorIcEEEE
N6apsync11HomeManagerE
N6apsync4Node8DelegateE
N6apsync9SchedulerE
N6apsync4crdt9TimeStampE
NSt3__123enable_shared_from_thisIN6apsync11HomeManagerEEE
NSt3__120__shared_ptr_emplaceIN6apsync11HomeManagerENS_9allocatorIS2_EEEE
NSt3__120__shared_ptr_emplaceIN6apsync4crdt9Merge_LWWENS_9allocatorIS3_EEEE
NSt3__120__shared_ptr_emplaceIN6apsync4crdt12Merge_VolumeENS_9allocatorIS3_EEEE
NSt3__120__shared_ptr_emplaceIN6apsync4crdt19Merge_GroupProposalENS_9allocatorIS3_EEEE
NSt3__110__function6__funcIZN6apsync11HomeManager17notifyJsonChangesERKN8nlohmann10basic_jsonINS_3mapENS_6vectorENS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEbxydSB_NS4_14adl_serializerEEESH_SH_E3$_2NSB_ISI_EEFbRKNS2_4crdt5Merge17SimpleJsonPointerESH_EEE
NSt3__110__function6__baseIFbRKN6apsync4crdt5Merge17SimpleJsonPointerERKN8nlohmann10basic_jsonINS_3mapENS_6vectorENS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEbxydSF_NS8_14adl_serializerEEEEEE
ZN6apsync11HomeManager17notifyJsonChangesERKN8nlohmann10basic_jsonINSt3__13mapENS3_6vectorENS3_12basic_stringIcNS3_11char_traitsIcEENS3_9allocatorIcEEEEbxydS9_NS1_14adl_serializerEEESF_SF_E3$_2
NSt3__118basic_stringstreamIcNS_11char_traitsIcEENS_9allocatorIcEEEE
NSt3__110__function6__funcIZN6apsync4crdt5Merge15merge_recursiveERKN8nlohmann10basic_jsonINS_3mapENS_6vectorENS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEbxydSC_NS5_14adl_serializerEEERSG_PSG_SK_PNS3_11ParentLevelEE3$_0NSC_ISN_EEFbRKNS4_17SimpleJsonPointerESI_EEE
ZN6apsync4crdt5Merge15merge_recursiveERKN8nlohmann10basic_jsonINSt3__13mapENS4_6vectorENS4_12basic_stringIcNS4_11char_traitsIcEENS4_9allocatorIcEEEEbxydSA_NS2_14adl_serializerEEERSE_PSE_SI_PNS0_11ParentLevelEE3$_0
NSt3__110__function6__funcIZN6apsync4crdt5Merge8fill_idsERKN8nlohmann10basic_jsonINS_3mapENS_6vectorENS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEbxydSC_NS5_14adl_serializerEEERNS_3setISE_NS_4lessISE_EENSC_ISE_EEEEE3$_1NSC_ISP_EEFbRKNS4_17SimpleJsonPointerESI_EEE
ZN6apsync4crdt5Merge8fill_idsERKN8nlohmann10basic_jsonINSt3__13mapENS4_6vectorENS4_12basic_stringIcNS4_11char_traitsIcEENS4_9allocatorIcEEEEbxydSA_NS2_14adl_serializerEEERNS4_3setISC_NS4_4lessISC_EENSA_ISC_EEEEE3$_1
NSt3__110__function6__funcIZN6apsync4crdt5Merge16recurse_nagle_msERKN8nlohmann10basic_jsonINS_3mapENS_6vectorENS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEbxydSC_NS5_14adl_serializerEEEE3$_2NSC_ISJ_EEFbRKNS4_17SimpleJsonPointerESI_EEE
ZN6apsync4crdt5Merge16recurse_nagle_msERKN8nlohmann10basic_jsonINSt3__13mapENS4_6vectorENS4_12basic_stringIcNS4_11char_traitsIcEENS4_9allocatorIcEEEEbxydSA_NS2_14adl_serializerEEEE3$_2
N6apsync12SocketServerE
N6apsync9ExceptionE
29APSyncControllerSimulatorImpl
20APSyncControllerImpl
N6apsync12PipeScheduleE
NSt3__123enable_shared_from_thisIN6apsync12PipeScheduleEEE
NSt3__120__shared_ptr_emplaceIN6apsync12PipeScheduleENS_9allocatorIS2_EEEE
NSt3__110__function6__funcIZN6apsync12PipeSchedule8scheduleEvE3$_1NS_9allocatorIS4_EEFvvEEE
NSt3__110__function6__baseIFvvEEE
ZN6apsync12PipeSchedule8scheduleEvE3$_1
N6apsync14SpeakerManagerE
N6apsync14VolumeProviderE
NSt3__120__shared_ptr_emplaceIN6apsync13GroupProposalENS_9allocatorIS2_EEEE
NSt3__110__function6__funcIZN6apsync14SpeakerManager25setSpeakerGroupIDProposalERKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEESB_SB_RKN8nlohmann10basic_jsonINS_3mapENS_6vectorES9_bxydS7_NSC_14adl_serializerEEExNS2_4crdt19Merge_GroupProposal5StateEE3$_0NS7_ISN_EEFvPNS2_13GroupProposalEEEE
NSt3__110__function6__baseIFvPN6apsync13GroupProposalEEEE
ZN6apsync14SpeakerManager25setSpeakerGroupIDProposalERKNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEES9_S9_RKN8nlohmann10basic_jsonINS1_3mapENS1_6vectorES7_bxydS5_NSA_14adl_serializerEEExNS_4crdt19Merge_GroupProposal5StateEE3$_0
NSt3__110__function6__funcIZN6apsync14SpeakerManager15setAllFromGroupEPKNS2_11VolumeGroupEE3$_1NS_9allocatorIS7_EEFvRKNS_12basic_stringIcNS_11char_traitsIcEENS8_IcEEEEEEE
NSt3__110__function6__baseIFvRKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEEEE
ZN6apsync14SpeakerManager15setAllFromGroupEPKNS_11VolumeGroupEE3$_1
N6apsync12GroupManagerE
N6apsync18JsonChangeListenerE
N6apsync4crdt9Merge_LWWE
N6apsync4NodeE
N6apsync11PipeManager8DelegateE
N6apsync11TreeManager8DelegateE
N6apsync10PipeServer8DelegateE
N6apsync8PipeJSON6FilterE
N6apsync6Locker8DelegateE
NSt3__110__function6__funcIZN6apsync4Node14addPipeFactoryERKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEENS_8functionIFNS_10shared_ptrINS2_4PipeEEEvEEEE3$_1NS7_ISI_EEFNSD_INS2_8PipeJSONEEEvEEE
NSt3__110__function6__baseIFNS_10shared_ptrIN6apsync8PipeJSONEEEvEEE
ZN6apsync4Node14addPipeFactoryERKNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEENS1_8functionIFNS1_10shared_ptrINS_4PipeEEEvEEEE3$_1
N6apsync13DeviceManagerE
N6apsync10PipeServerE
N6apsync16SocketConnectionE
NSt3__110__function6__funcIZN6apsync16SocketConnection7connectERKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEENS_8functionIFviEEEE3$_2NS7_ISF_EEFbvEEE
NSt3__110__function6__baseIFbvEEE
ZN6apsync16SocketConnection7connectERKNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEENS1_8functionIFviEEEE3$_2
NSt3__110__function6__funcIZN6apsync16SocketConnection13handleConnectEiE3$_3NS_9allocatorIS4_EEFbvEEE
ZN6apsync16SocketConnection13handleConnectEiE3$_3
NSt3__110__function6__funcIZN6apsync16SocketConnection9runClientEvE3$_5NS_9allocatorIS4_EEFbvEEE
ZN6apsync16SocketConnection9runClientEvE3$_5
NSt3__110__function6__funcIZN6apsync16SocketConnection12retryConnectEiNS_10unique_ptrI8sockaddrNS_14default_deleteIS5_EEEEjjE3$_6NS_9allocatorIS9_EEFbvEEE
ZN6apsync16SocketConnection12retryConnectEiNSt3__110unique_ptrI8sockaddrNS1_14default_deleteIS3_EEEEjjE3$_6
NSt3__110__function6__funcIZZN6apsync16SocketConnection12retryConnectEiNS_10unique_ptrI8sockaddrNS_14default_deleteIS5_EEEEjjEN3$_7clEvEUlvE_NS_9allocatorISA_EEFbvEEE
ZZN6apsync16SocketConnection12retryConnectEiNSt3__110unique_ptrI8sockaddrNS1_14default_deleteIS3_EEEEjjEN3$_7clEvEUlvE_
NSt3__110__function6__funcIZZN6apsync16SocketConnection12retryConnectEiNS_10unique_ptrI8sockaddrNS_14default_deleteIS5_EEEEjjEN3$_7clEvEUlvE0_NS_9allocatorISA_EEFbvEEE
ZZN6apsync16SocketConnection12retryConnectEiNSt3__110unique_ptrI8sockaddrNS1_14default_deleteIS3_EEEEjjEN3$_7clEvEUlvE0_
N6apsync4crdt15Merge_AlgorithmE
NSt3__120__shared_ptr_emplaceIN6apsync19NotificationManagerENS_9allocatorIS2_EEEE
NSt3__120__shared_ptr_emplaceIN6apsync4crdt10Merge_NodeENS_9allocatorIS3_EEEE
UUUUUU
?NSt3__120__shared_ptr_emplaceIN6apsync11VolumeGroupENS_9allocatorIS2_EEEE
N6apsync8PipeJSONE
N6apsync12PipeDelegateE
NSt3__117bad_function_callE
N6apsync4crdt19Merge_GroupProposalE
N6apsync13GroupProposalE
NSt3__110__function6__funcIZZ32APSyncControllerServerCopySharedEUb_E3$_0NS_9allocatorIS2_EEFP20APSyncControllerImplP22OpaqueAPSyncControllerEEE
NSt3__110__function6__baseIFP20APSyncControllerImplP22OpaqueAPSyncControllerEEE
ZZ32APSyncControllerServerCopySharedEUb_E3$_0
N6apsync4PipeE
N6apsync11PipeManager16ManagerPipeStateE
N6apsync8PipeJSON8DelegateE
NSt3__110__function6__funcIZN6apsync11PipeManager14setActivePipesERKNS_3setINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEENS_4lessISA_EENS8_ISA_EEEEE3$_1NS8_ISH_EEFviEEE
NSt3__110__function6__baseIFviEEE
ZN6apsync11PipeManager14setActivePipesERKNSt3__13setINS1_12basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEENS1_4lessIS8_EENS6_IS8_EEEEE3$_1
NSt3__110__function6__funcIZN6apsync11PipeManager7onCloseEPNS3_16ManagerPipeStateEE3$_3NS_9allocatorIS6_EEFvvEEE
ZN6apsync11PipeManager7onCloseEPNS0_16ManagerPipeStateEE3$_3
NSt3__110__function6__funcIZN6apsync11PipeManager7onRetryEvE3$_5NS_9allocatorIS4_EEFviEEE
ZN6apsync11PipeManager7onRetryEvE3$_5
NSt3__110__function6__funcIZZ32APSyncControllerRemoteCopySharedEUb_E3$_0NS_9allocatorIS2_EEFP20APSyncControllerImplP22OpaqueAPSyncControllerEEE
ZZ32APSyncControllerRemoteCopySharedEUb_E3$_0
NSt3__110__function6__funcIZ28APSyncControllerRemoteCreateE3$_1NS_9allocatorIS2_EEFP20APSyncControllerImplP22OpaqueAPSyncControllerEEE
Z28APSyncControllerRemoteCreateE3$_1
HomeUUIDList
GroupMute
GroupUUIDList
GroupVolume
GroupVolumeControlSupported
GroupVolumeControlType
RemoteGroupUUIDList
DeviceName
DeviceUUIDList
PrimarySpeakerID
SpeakerCurrentGroupID
SpeakerIsSilentPrimary
SpeakerMute
SpeakerName
SpeakerOwnedGroupID
SpeakerProposedGroupID
SpeakerVolumeControlSupported
SpeakerVolumeControlType
SpeakersInGroup
SpeakerUUIDList
SpeakerVolume
StatusDump
ShowInfo
StereoPair
NowPlayingInfo
IsSupportedSpeaker
RawSocket
AirPlayPipe
IPAddr
Port
v8@?0
apsyncstatemanager_trace
com.apple.coremedia
APSyncStateManagerCopyProperty
APSyncStateManagerSetProperty
APSyncStateManagerInitializeDevice
APSyncStateManagerSetPipeCallbacks
APSyncStateManagerStartServer
APSyncStateManagerAddDiscoveredDevice
APSyncStateManagerConnectToServer
APSyncStateManagerAddSpeakerChangeListener
APSyncStateManagerRemoveSpeakerChangeListener
APSyncStateManagerAddGroupChangeListener
APSyncStateManagerRemoveGroupChangeListener
APSyncStateManagerAddGroupsAvailableChangeListener
APSyncStateManagerRemoveGroupsAvailableChangeListener
APSyncStateManagerAddGroup
APSyncStateManagerRemoveGroup
APSyncStateManagerSetSpeakerGroupIDProposal
APSyncStateManagerRemoveSpeakerGroupListener
APSyncStateManagerUpdateSpeakerGroupIDProposal
APSyncStateManagerStartGroupInteraction
APSyncStateManagerStartSpeakerInteraction
APSyncStateManagerStopGroupInteraction
APSyncStateManagerStopSpeakerInteraction
APSyncStateManagerAdjustGroupVolume
APSyncStateManagerAdjustSpeakerVolume
APSyncStateManagerCreateDesiredVolumeUpdate
APSyncStateManagerCreateVolumeUpdateFromNotification
APSyncStateManagerApplyVolumeUpdate
initialize
setDeviceInfo
homeKitHomeID
connectionID
deviceID
ledGroupID
masterVolumeControlSupported
masterVolumeControlType
apsyncUseAirPlayPipes
com.apple.airplay
speakerID
deviceName
speakerName
speakerVolume
speakerMute
speakerVolumeControlSupported
speakerVolumeControlType
stereoPair
bogus-room-id
Solo
startServer
addDiscoveredDevice
addSpeakerChangeListener
removeSpeakerChangeListener
addUniversalSpeakerChangeListener
removeUniversalSpeakerChangeListener
addGroupsAvailableChangeListener
removeGroupsAvailableChangeListener
addSetSpeakerGroupListener
removeSetSpeakerGroupListener
removeGroup
copyGroupPrimarySpeakerID
setSpeakerGroupIDProposal
updateSpeakerGroupIDProposal
setSpeakerGroupIDCurrent
copySpeakerCurrentGroupID
copySpeakerProposedGroupID
copySpeakerOwnedGroupID
isSpeakerSilentPrimary
copySpeakerName
copyDeviceName
copyNowPlayingInfo
setNowPlayingInfo
setSpeakerName
setStereoRolePaired
dump
GroupPropCur
pretty
+-+ APSyncStateManager state +-+
Homes: 
Home (UUID = 
) - 
 devices:
Device Name
Virtual Speaker Name
Device UUID
Virtual Speaker UUID
Group UUID
Group Timestamp
Volume
Mute
Volume Timestamp
Master Volume
Master Mute
getShowInfo
Muted
Unmuted
createHomeManager
/data
findHomeManager
mapItemIDToHomeID
Mapped
Matched
translatePipeAddress
notify
NotificationType
Speaker
Group
ItemIDs
group
non-group
addPipeFactory
APSyncStateManager
syncmanager_Finalize
syncmanager_create
allocator<T>::allocate(size_t n) 'n' exceeds maximum supported size
Could not construct
%Y-%m-%dT%H:%M:%S
true
false
<discarded>
null
x_write
/AppleInternal/BuildRoot/Applications/Xcode.app/Contents/Developer/Platforms/AppleTVSimulator.platform/Developer/SDKs/AppleTVSimulator13.4.Internal.sdk/usr/local/include/nlohmann/json.hpp
x == 0
i < m_buf.size() - 2
%.*g
written_bytes > 0
static_cast<size_t>(written_bytes) < m_buf.size()
loc != nullptr
(i + 2) < m_buf.size()
m_buf[i] == '\0'
m_buf[i - 1] != '\0'
m_buf[i + 2] == '\0'
assert_invariant
m_type != value_t::object or m_value.object != nullptr
m_type != value_t::array or m_value.array != nullptr
m_type != value_t::string or m_value.string != nullptr
type must be boolean, but is 
object
array
string
boolean
discarded
number
type must be number, but is 
State
checkCleanupCallback
Could not convert
cannot use operator[] with 
iter_impl
m_object != nullptr
set_end
operator->
m_it.object_iterator != m_object->m_value.object->end()
m_it.array_iterator != m_object->m_value.array->end()
cannot get value
set_begin
cannot compare iterators of different containers
operator==
operator++
operator*
type must be string, but is 
startInteraction
startInteractionInternal
cleanupAfterSpeakerInteraction
stopInteraction
setVolume
startGroupInteraction
startGroupInteractionInternal
stopGroupInteraction
cleanupAfterGroupInteraction
setGroupVolume
setGroupMute
stopInteractionInternal
cleanupAfterInteraction
apsyncvolumeuxmanager_trace
Maybe
InteractionStates
Caches
cannot create object from initializer list
operator[]
m_value.object->find(key) != m_value.object->end()
array index must not begin with '0'
unresolved reference token '
replace
mute
volume
timeout
_tombstone
crdtmergevolume_trace
merge
cost
valid
crdtmergenode_trace
apsynchomemanager_trace
gprop
HomeManager
rawdb
node
nodeErr
SpeakerManager
SpeakerManagerErr
GroupManager
DeviceManager
VolumeUXManager
VolumeUXManagerErr
addDiscoveredSelf
name
type
onChange
mergeJsonChanges
addJsonChangeListener
removeJsonChangeListener
setJsonValue
getJsonHandle
notifyJsonChanges
JsonHandle
~JsonHandle
operator const nlohmann::basic_json<std::map, std::vector, std::__1::basic_string<char>, bool, long long, unsigned long long, double, std::allocator, adl_serializer> &
operator()
SimpleJsonPointer
~SimpleJsonPointer
get_reference
crdtmerge_trace
cannot use key() for non-object iterators
_groupsAvailable
_speakerGroup
VolumeChanged
ThisSpeakerVolumeChanged
VolumeControlSupportedChanged
VolumeControlTypeChanged
SpeakerGroupChanged
SpeakerID
OwnedGroupID
PrevGroupID
NewGroupID
Options
SpeakerPropGroupChanged
GroupMembersChanged
apsyncsocketserver_trace
start
abort
listen
createServerSocket
runServer
createClientConnection
thread constructor failed
Error 
APSyncControllerSimulatorImpl
~APSyncControllerSimulatorImpl
startSpeakerInteraction
stopSpeakerInteraction
openSpeakerCommChannel
closeSpeakerCommChannel
sendSpeakerData
registerNewReceiverChannel
transferReceiverData
handleReceiverChannelClosed
handleAllReceiverChannelsClosed
setSendDataHandler
invokeSendDataHandler
127.0.0.1
PipeSchedule
~PipeSchedule
schedule
checkOutgoing
send
apsyncpipeschedule_trace
Speakers
apsyncspeakermanager_trace
groupProposalDeleter
updateThisSpeakerID
setOwnedGroupID
GProp
GCur
GroupProposals
SpeakerIDToGroupID
VolumeGroups
createSpeaker
Name
RoomID
setSpeakerName: Invalid speaker ID: 
GroupID
ProposedGroupID
CurrentGroupID
Update
Ignore
Unsupported state: 
CreateProposal
getSpeakerGroupIDProposal
setSpeakerVolumeControlSupported: Invalid speaker ID: 
supported
setSpeakerVolumeControlSupported
setSpeakerVolumeControlType: Invalid speaker ID: 
setSpeakerVolumeControlType
getSpeakerDesiredVolumeInternalUpdate
Proposed
Current
getSpeakerCurrentVolumeInternalUpdate
setSpeakerCurrentVolumeFromUpdate
setAllFromGroup
setOneFromGroup
volumeGroupForSpeaker
No volume group for speaker id 
volumeGroupForGroup
No volume group for group id 
notifyJsonChange
options
checkSpeakerProposedVolumeChange
handleSpeakerCurrentVolumeChange
state
checkProposalForOwnedGroupChange
updateOwnedGroupID
VProp
VCur
VControlS
SMeta
confirmChange
CHANGE WILL BE LOST
change will be updated in new current
groupIDsMatchForProposal
JSON pointer must be empty or begin with '/'
split
reference_token[pos] == '~'
escape error: '~' must be followed with '0' or '1'
replace_substring
not f.empty()
cannot use push_back() with 
Device
/dev/urandom
%02x%02x%02x%02x-%02x%02x-%02x%02x-%02x%02x-%02x%02x%02x%02x%02x%02x
Couldn't retrieve kCFNumberDoubleType type
Couldn't retrieve kCFNumberSInt64Type type
Unsupported CFPropertyList type
Unsupported JSON type
ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/
Unsupported CFPropertyList key type
array index '-' (
) is out of range
Groups
apsyncUseNowPlayingInfo
apsyncgroupmanager_trace
createGroup
IsLeaderDiscoverable
LeaderSupportsAPSync
Album
Title
Artist
Duration
PlaybackState
deleteGroup
setGroupVolumeControlSupported: Invalid group ID: 
setGroupVolumeControlSupported
setGroupVolumeControlType: Invalid group ID: 
setGroupVolumeControlType
album
artist
title
duration
playbackState
notifyIfNewGroups
GMeta
VControlG
GNowP
crdtmergelww_trace
make
makeDeleter
Node
/AppleInternal/BuildRoot/Library/Caches/com.apple.xbs/Sources/EmbeddedCoreMedia_Sim/EmbeddedCoreMedia-2612.55/Sources/AirPlaySync/Engine/Utility/APSyncNode.cpp
m_name.length() != 0
m_node_delegate != nullptr
m_scheduler != nullptr
m_timestamp != nullptr
m_started == false
onConnect
onMessage
clock
#clock;send;
#clock;recv;
onAccept
addMergeAlgorithm
PipeManager
TreeManager
apsyncnode_trace
Devices
apsyncdevicemanager_trace
Rendering
createDevice
setDeviceName: Invalid device ID: 
setDeviceName
setDeviceStereoMode: Invalid device ID: 
setDeviceStereoMode
checkDeviceToSpeakerMapping
deviceIDToSpeakerID
DeviceID
DeviceIDToSpeakerID
DMeta
apsyncvolumeupdate_trace
APSyncVolumeUpdateCreateFromInternal
APSyncVolumeUpdateGetTimestamp
APSyncVolumeUpdateGetVolumeAndMute
APSyncVolumeUpdateSetSequenceNumber
APSyncVolumeUpdateGetSequenceNumber
APSyncVolumeUpdateConfirmChange
APSyncVolumeUpdate
volumeupdate_Finalize
PipeServer
~PipeServer
apsyncpipeserver_trace
apsyncsocketconnection_trace
SocketConnection
~SocketConnection
appendMessageReceived
close
connect
handleConnect
runClient
internalConnect
retryConnect
setState
receivedMessage
port
socket
isDestructing
isAborting
crdtmergealgorithm_trace
apsyncnotificationmanager_trace
apsync::NotificationManagerQueue
NotificationManager
~NotificationManager
registerListener
notifyAsync
/tree
/AppleInternal/BuildRoot/Library/Caches/com.apple.xbs/Sources/EmbeddedCoreMedia_Sim/EmbeddedCoreMedia-2612.55/Sources/AirPlaySync/Engine/Utility/APSyncTreeManager.cpp
m_delegate != nullptr
m_merge != nullptr
onDiscovery
m_started == true
discovered(
onStartup
startup
tree
recalc
lastSelected
apsynctreemanager_trace
type must be array, but is 
Mixed
VolumeGroup::makeVolumeGroupForSpeaker() requires non-null base
setVolumeAndMute
setGroupVolumeAndMute
VolumeGroup::removeSpeakerID() invalid for base-using group
CachedSpeakerID
Address
Volumes
BaseAddress
Cached
apsyncvolumegroup_trace
PipeJSON
send_direct
Pipe
apsyncpipejson_trace
parse
std::accumulate(first, last, std::pair<bool, int>(true, 0), [&first](std::pair<bool, int> res, decltype(*first) val) { res.first &= (val == *(std::next(std::addressof(*first), res.second++))); return res; }).first
lexer
m_content != nullptr
scan
m_start != nullptr
fill_line_buffer
m_line_buffer.empty() or m_content == reinterpret_cast<const lexer_char_t*>(m_line_buffer.data())
m_line_buffer.empty() or m_limit == m_content + m_line_buffer.size()
m_content <= m_start
m_start <= m_cursor
m_cursor <= m_limit
m_marker == nullptr or m_marker <= m_limit
parse error - unexpected 
get_token_string
<uninitialized>
true literal
false literal
null literal
string literal
number literal
<parse error>
end of input
unknown token
get_string
m_cursor - m_start >= 2
missing low surrogate
missing high surrogate
missing or wrong low surrogate
code points above 0x10FFFF are invalid
get_number
m_start < m_cursor
(token == token_type::value_unsigned) or (token == token_type::value_integer) or (token == token_type::value_float)
len > 0
; expected 
crdtmergegroupproposal_trace
apsyncgroupproposal_trace
Deleter callback is NULL
GroupProposal
~GroupProposal
timerFired
notifyTimedOut
notifyAndCleanup
ExistingGroupID
IsClockStarted
SpeakerRouteDescriptor
SpeakerVolumeChanged
SpeakerVolumeControlSupportedChanged
SpeakerVolumeControlTypeChanged
GroupVolumeChanged
GroupVolumeControlSupportedChanged
GroupVolumeControlTypeChanged
GroupsAvailableChanged
GroupMetadataNowPlayingChanged
SpeakerProposedGroupIDChanged
SpeakerReceivedData
SpeakerCommChannelClosed
CommChannelUUID
Data
Initiator
OpenFailureReason
Unauthorized
UserSkippedAuth
AuthorizationToken
CancelIfAuthRequired
~ReceiverConnectionInfo
apsynccontroller_trace
APSyncController_Create
APSyncControllerCopyProperty
APSyncControllerSetProperty
APSyncControllerSetSpeakerGroup
APSyncControllerStartGroupInteraction
APSyncControllerStopGroupInteraction
APSyncControllerStartSpeakerInteraction
APSyncControllerStopSpeakerInteraction
APSyncControllerOpenSpeakerCommChannel
APSyncControllerCloseSpeakerCommChannel
APSyncControllerSendSpeakerData
APSyncController_TranslatePipeAddress
APSyncController
synccontroller_Finalize
APSyncControllerStartServer
~Pipe
CLOSED
OPENING
OPEN
apsyncpipe_trace
/AppleInternal/BuildRoot/Library/Caches/com.apple.xbs/Sources/EmbeddedCoreMedia_Sim/EmbeddedCoreMedia-2612.55/Sources/AirPlaySync/Engine/Utility/APSyncPipeManager.cpp
m_manager_delegate != nullptr
m_lock_delegate != nullptr
????:setActivePipes(
setActivePipes
accept
copy
yes-
rejectIncomingConnection
onOpen
name:
onClose
onRetry
send_all
Pipes
IncomingPipes
DeadPipes
ManagerPipeState
IDLE
INCOMING
WAITING_CONNECT
WAITING_ACCEPT
WAITING_RETRY
READY
otherName
lastUsed
PipeJson
apsyncpipemanager_trace
<<<< APSyncStateManager >>>> %s: [%p]
<<<< APSyncStateManager >>>> %s: [%p] (%@, %@, %@, %@)
<<<< APSyncStateManager >>>> %s: [%p] (%@, %@)
<<<< APSyncStateManager >>>> %s: [%p] (%p)
<<<< APSyncStateManager >>>> %s: [%p] (%@, %@, %d)
<<<< APSyncStateManager >>>> %s: [%p] (%@, %@, %@, %d)
<<<< APSyncStateManager >>>> %s: [%p] (%@, %@, [%p], [%p])
<<<< APSyncStateManager >>>> %s: [%p] (%@, [%p], [%p])
<<<< APSyncStateManager >>>> %s: [%p] (%@, %@, %@, %@, %@, %u, %u, [%p], [%p])
<<<< APSyncStateManager >>>> %s: Error adding set speaker group change listener: %d
<<<< APSyncStateManager >>>> %s: Not adding SpeakerGroupListener because inCallbackContext ([%p]) and/or inCallback ([%p]) is/are invalid
<<<< APSyncStateManager >>>> %s: [%p] (%@, [%p], [%p], [%p])
<<<< APSyncStateManager >>>> %s: [%p] (%@, %@, %@, %@, %u)
<<<< APSyncStateManager >>>> %s: [%p] (%@, %@, %f)
<<<< APSyncStateManager >>>> %s: [%p] (%@, %@, [%p])
<<<< APSyncStateManager >>>> %s: [%p] (%@, %@, %lld, %f, %c, [%p])
<<<< APSyncStateManager >>>> %s: [%p] initializing
<<<< APSyncStateManager >>>> %s: [%p] got json: %s
<<<< APSyncStateManager >>>> %s: [%p] Using homeKitHomeID %s and connection ID %s
<<<< APSyncStateManager >>>> %s: [%p] Adding group ID %s to home %s
<<<< APSyncStateManager >>>> %s: useAirPlayPipes = %c
<<<< APSyncStateManager >>>> %s: [%p] Adding speaker ID %s, device %s to home %s
<<<< APSyncStateManager >>>> %s: [%p] Got speaker ID '%s' / device ID '%s' - one is empty
<<<< APSyncStateManager >>>> %s: [%p] no speaker manager found for home %s
<<<< APSyncStateManager >>>> %s: [%p] [%p]
<<<< APSyncStateManager >>>> %s: [%p] no speaker manager found for home %s, group/speaker %s
<<<< APSyncStateManager >>>> %s: [%p] added callback for existing listener [%p] for (%s, [%p], [%p])
<<<< APSyncStateManager >>>> %s: [%p] inserted listener [%p] for (%s, [%p], [%p])
<<<< APSyncStateManager >>>> %s: [%p] no speaker manager found for home '%s', group/speaker %s
<<<< APSyncStateManager >>>> %s: [%p] couldn't find listener for (%s, [%p], [%p])
<<<< APSyncStateManager >>>> %s: [%p] couldn't remove listener for (%s, [%p], [%p])
<<<< APSyncStateManager >>>> %s: [%p] (%c, [%p])
<<<< APSyncStateManager >>>> %s: [%p] error adding listener callback: %d
<<<< APSyncStateManager >>>> %s: [%p] inserted listener [%p]
<<<< APSyncStateManager >>>> %s: [%p] filteringListener was empty
<<<< APSyncStateManager >>>> %s: [%p] error removing listener callback: %d
<<<< APSyncStateManager >>>> %s: [%p] removed listener [%p]
<<<< APSyncStateManager >>>> %s: [%p] ([%p])
<<<< APSyncStateManager >>>> %s: [%p] have valid homeManager, registering through it
<<<< APSyncStateManager >>>> %s: [%p] no home found for %s
<<<< APSyncStateManager >>>> %s: [%p] no speaker manager for homeID %s or groupID %s
<<<< APSyncStateManager >>>> %s: [%p] no speaker manager for homeID %s
<<<< APSyncStateManager >>>> %s: [%p] exception setting group ID for speaker: %s
<<<< APSyncStateManager >>>> %s: [%p] exception getting group ID proposal for speaker: %s
<<<< APSyncStateManager >>>> %s: [%p] exception copying owned groupID for speaker: %s
<<<< APSyncStateManager >>>> %s: [%p] exception getting group ID for speaker: %s
<<<< APSyncStateManager >>>> %s: Updating now playing info and distributing across system
<<<< APSyncStateManager >>>> %s: Updating new speaker name and distributing across system
<<<< APSyncStateManager >>>> %s: Updating new speaker stereo role status and distributing across system
<<<< APSyncStateManager >>>> %s: qualifier = '%s'
<<<< APSyncStateManager >>>> %s: Exception from getting master volume/mute - %s
<<<< APSyncStateManager >>>> %s: [%p] Error - trying to create speaker manager for empty home id
<<<< APSyncStateManager >>>> %s: [%p] creating speaker manager for home: %s
<<<< APSyncStateManager >>>> %s: [%p] Adding AirPlay pipe factory for home: %s
<<<< APSyncStateManager >>>> %s: [%p] No AirPlay pipe factory for home: %s
<<<< APSyncStateManager >>>> %s: [%p] adding cache listener for home: %s
<<<< APSyncStateManager >>>> %s: [%p] matched itemID %s to homeManager [%p]
<<<< APSyncStateManager >>>> %s: [%p] no match for itemID %s to homeManager
<<<< APSyncStateManager >>>> %s: [%p] no entry in m_itemIDToHomeID for itemID %s
<<<< APSyncStateManager >>>> %s: [%p] Couldn't re-map %s from %s to %s
<<<< APSyncStateManager >>>> %s: [%p] %s %s to %s
<<<< APSyncStateManager >>>> %s: [%p] Error calling pipe address translator %p on type %@, name %s: %d
<<<< APSyncStateManager >>>> %s: (%s)
<<<< APSyncStateManager >>>> %s: (%s): got %s itemIDs %s
<<<< APSyncStateManager >>>> %s: itemID %s is not already a group ID for payload %s
<<<< APSyncStateManager >>>> %s: APSyncStateManager [%p] finalizing
<<<< APSyncStateManager >>>> %s: exception - %s
<<<< APSyncStateManager >>>> %s: apsync exception - %s
<<<< APSyncStateManager >>>> %s: APSyncStateManager created: [%p]
<<<< APSyncStateManager >>>> %s: [%p] [%s] handling %zu listeners
<<<< APSyncStateManager >>>> %s: [%p] [%c](%s) handling %zu listeners
<<<< APSyncStateManager >>>> %s: [%p] listener ( [%p] - [%p] ) has not registered a callback
<<<< APSyncStateManager >>>> %s: [%p] handling %zu listeners
<<<< APSyncStateManager >>>> %s: Removing SpeakerGroup callback; proposal state: %d, listener: [%p], callback: [%p]
<<<< APSyncStateManager >>>> %s: [%p] no proposal state found in payload
<<<< APSyncVolumeUXManager >>>> %s: [%p] (%s)
<<<< APSyncVolumeUXManager >>>> %s: [%p] (%s) ending speaker interaction
<<<< APSyncVolumeUXManager >>>> %s: [%p] (%s, %g)
<<<< APSyncVolumeUXManager >>>> %s: [%p] (%s, %g): no current cache / interaction?? Setting volume directly.
<<<< APSyncVolumeUXManager >>>> %s: [%p] (%s, %c): no current cache / interaction?? Setting volume directly.
<<<< APSyncVolumeUXManager >>>> %s: [%p] (%s) ending group interaction
<<<< APSyncVolumeUXManager >>>> %s: [%p] (%s, %c)
<<<< APSyncVolumeUXManager >>>> %s: [%p] (%s) done
<<<< CRDTMerge_Volume >>>> %s: merge[%s] into [%s]
<<<< CRDTMerge_Node >>>> %s: CRDTMerge_Node, change=%s, data=%s
<<<< CRDTMerge_Node >>>> %s: valid(%s)
<<<< CRDTMerge_Node >>>> %s: FALSE
<<<< CRDTMerge_Node >>>> %s: TRUE
<<<< APSyncHomeManager >>>> %s: [%p] (%s, %s, %s)
<<<< APSyncHomeManager >>>> %s: [%p] (%s, %s, %d)
<<<< APSyncHomeManager >>>> %s: [%p] (%s)
<<<< APSyncHomeManager >>>> %s: [%p] starting
<<<< APSyncHomeManager >>>> %s: [%p] done
<<<< APSyncHomeManager >>>> %s: [%p] done-done
<<<< APSyncHomeManager >>>> %s: [%p] (%s, %p)
<<<< APSyncHomeManager >>>> %s: [%p] (%s) [type=%s]
<<<< APSyncHomeManager >>>> %s: [%p]
<<<< APSyncHomeManager >>>> %s: [%p] (%lld, ...)
<<<< APSyncHomeManager >>>> %s: [%p] (%s, ...)
<<<< APSyncHomeManager >>>> %s: aftercomplete= %s
<<<< APSyncHomeManager >>>> %s: done
<<<< APSyncHomeManager >>>> %s: [%p] constructed
<<<< APSyncHomeManager >>>> %s: [%p] destructing
<<<< APSyncHomeManager >>>> %s: [%p] called &
<<<< APSyncHomeManager >>>> %s: [%p] onChange-lambda
<<<< APSyncHomeManager >>>> %s: got op: %s (%s), %s
<<<< APSyncHomeManager >>>> %s: notifying %p op: %s
<<<< APSyncHomeManager >>>> %s: exception: %s
<<<< CRDTMerge >>>> %s: [%p] : %s -> [%p]
<<<< CRDTMerge >>>> %s: [%p]
<<<< CRDTMerge >>>> %s: RC1:%s
<<<< CRDTMerge >>>> %s: RC:%s = %s
<<<< CRDTMerge >>>> %s: C:%s = %s
<<<< CRDTMerge >>>> %s: R:%s = %s
<<<< CRDTMerge >>>> %s: :%s = %s
<<<< CRDTMerge >>>> %s: no algorithm for operation %s
<<<< CRDTMerge >>>> %s: merging %s
<<<< APSyncSocketServer >>>> %s: [%p] starting server on port %d
<<<< APSyncSocketServer >>>> %s: [%p] server already started
<<<< APSyncSocketServer >>>> %s: [%p] listening with deviceID %s
<<<< APSyncSocketServer >>>> %s: [%p] error creating abort pipes: %s
<<<< APSyncSocketServer >>>> %s: [%p] getaddrinfo failed: %s
<<<< APSyncSocketServer >>>> %s: [%p] failed to bind: %s
<<<< APSyncSocketServer >>>> %s: [%p] listen failed: %s
<<<< APSyncSocketServer >>>> %s: [%p] starting server on socket %d
<<<< APSyncSocketServer >>>> %s: [%p] select failed: %s
<<<< APSyncSocketServer >>>> %s: [%p] got message on abort pipe; exiting
<<<< APSyncSocketServer >>>> %s: [%p] accept failed: %s
<<<< APSyncSocketServer >>>> %s: [%p] got new connection: socket %d, remote IP %s
<<<< APSyncSocketServer >>>> %s: [%p] exception thrown: %s
<<<< APSyncSocketServer >>>> %s: [%p] socket %d
<<<< APSyncControllerSimulatorImpl >>>> %s: APSyncControllerSimulatorImpl constructed: [%p]; isAppleTV = %c, isAudioAccessory = %c
<<<< APSyncControllerSimulatorImpl >>>> %s: APSyncControllerSimulatorImpl destructed: [%p]
<<<< APSyncControllerSimulatorImpl >>>> %s: [%p]
<<<< APSyncControllerSimulatorImpl >>>> %s: ([%p], %@)
<<<< APSyncControllerSimulatorImpl >>>> %s: ([%p]) - stubbed out
<<<< APSyncControllerSimulatorImpl >>>> %s: [%p] returns %@
<<<< APSyncPipeSchedule >>>> %s: [%p] pipe %p
<<<< APSyncPipeSchedule >>>> %s: [%p] %d outgoing dumped
<<<< APSyncPipeSchedule >>>> %s: nagle is %d ms
<<<< APSyncPipeSchedule >>>> %s: m_versions == m_version %d
<<<< APSyncPipeSchedule >>>> %s: set m_versions[%d] = %d
<<<< APSyncPipeSchedule >>>> %s: [%p] %d, m_version %d, state %s
<<<< APSyncPipeSchedule >>>> %s: [%p] %s
<<<< APSyncSpeakerManager >>>> %s: [%p]
<<<< APSyncSpeakerManager >>>> %s: [%p] deleting GroupProposal [%p] from collection
<<<< APSyncSpeakerManager >>>> %s: [%p] unable to find and delete GroupProposal [%p] from collection
<<<< APSyncSpeakerManager >>>> %s: [%p] (%s)
<<<< APSyncSpeakerManager >>>> %s: [%p] ownedGroupID: %s
<<<< APSyncSpeakerManager >>>> %s: [%p] metadata -> %s
<<<< APSyncSpeakerManager >>>> %s: [%p] (%s, %s, %s, %s, %lld, %d)
<<<< APSyncSpeakerManager >>>> %s: [%p] Current = %s
<<<< APSyncSpeakerManager >>>> %s: [%p] ExistingProposal = %s
<<<< APSyncSpeakerManager >>>> %s: [%p] new remote proposal => Create
<<<< APSyncSpeakerManager >>>> %s: [%p] group IDs match; state=%d => %s
<<<< APSyncSpeakerManager >>>> %s: [%p] adding to new group => Create
<<<< APSyncSpeakerManager >>>> %s: [%p] prev %s != current %s => Ignore
<<<< APSyncSpeakerManager >>>> %s: [%p] existing state is Timeout/Failure/Success => Create
<<<< APSyncSpeakerManager >>>> %s: [%p] existing proposal is old (now = %lld) => Create
<<<< APSyncSpeakerManager >>>> %s: [%p] existing proposal is not old (now = %lld) => Ignore
<<<< APSyncSpeakerManager >>>> %s: [%p] Ignoring update
<<<< APSyncSpeakerManager >>>> %s: [%p] action: %d
<<<< APSyncSpeakerManager >>>> %s: [%p] NewProposal empty because update is ignored
<<<< APSyncSpeakerManager >>>> %s: [%p] NewProposal = %s
<<<< APSyncSpeakerManager >>>> %s: [%p] (%s, %s, %s, %d)
<<<< APSyncSpeakerManager >>>> %s: [%p] New state %d <= current %d - ignoring update
<<<< APSyncSpeakerManager >>>> %s: [%p] NewProposal for un/silent primary = %s
<<<< APSyncSpeakerManager >>>> %s: [%p] groupID mismatch (dbCur '%s' v. specCur '%s', dbProp '%s' v. specProp '%s') - ignoring update
<<<< APSyncSpeakerManager >>>> %s: Proposed group JSON is: %s
<<<< APSyncSpeakerManager >>>> %s: [%p] cur (%s) vs. prop (%s) at %lld
<<<< APSyncSpeakerManager >>>> %s: [%p] using %s to return %s
<<<< APSyncSpeakerManager >>>> %s: proposed = %s
<<<< APSyncSpeakerManager >>>> %s: current  = %s
<<<< APSyncSpeakerManager >>>> %s: [%p] cur (%s) vs. %g / %c @ %lld
<<<< APSyncSpeakerManager >>>> %s: [%p] returning %s
<<<< APSyncSpeakerManager >>>> %s: [%p] (%s): %s
<<<< APSyncSpeakerManager >>>> %s: [%p] (%s): %s = %s
<<<< APSyncSpeakerManager >>>> %s: [%p] change = %s
<<<< APSyncSpeakerManager >>>> %s: Change request prepared: speakerID=%s timestamp~=%lld volume=%f mute=%c
<<<< APSyncSpeakerManager >>>> %s: [%p] %s = %s
<<<< APSyncSpeakerManager >>>> %s: [%p] No group for speaker id %s
<<<< APSyncSpeakerManager >>>> %s: %s
<<<< APSyncSpeakerManager >>>> %s: [%p] No volume group for group id %s
<<<< APSyncSpeakerManager >>>> %s: [%p] before: %s
<<<< APSyncSpeakerManager >>>> %s: [%p] after:  %s
<<<< APSyncSpeakerManager >>>> %s: itemID = %s, mySpeakerID = %s
<<<< APSyncSpeakerManager >>>> %s: [%p] Received volume control change.
<<<< APSyncSpeakerManager >>>> %s: [%p] Received group proposal, path: %s, mySpeakerID: %s
<<<< APSyncSpeakerManager >>>> %s: [%p] Notify grouping change proposal %s
<<<< APSyncSpeakerManager >>>> %s: [%p] created volume group for current: %s
<<<< APSyncSpeakerManager >>>> %s: [%p] not handled; key: %s
<<<< APSyncSpeakerManager >>>> %s: [%p] Group ID proposal received: requestingSpeaker=%s speakerID=%s ownedGroupID=%s proposedGroupID=%s, options=%s
<<<< APSyncSpeakerManager >>>> %s: [%p] (%s) done
<<<< APSyncSpeakerManager >>>> %s: proposedTimestamp = %lld, timeout = %d, currentTimestamp = %lld, now = %lld
<<<< APSyncSpeakerManager >>>> %s: Change request received: timestamp=%lld volume=%f mute=%c
<<<< APSyncSpeakerManager >>>> %s: [%p] updating volume for group %s, speaker %s
<<<< APSyncSpeakerManager >>>> %s: [%p] no group found for speaker %s
<<<< APSyncSpeakerManager >>>> %s: [%p] ; CurrGroupID: %s, PropGroupID: %s
<<<< APSyncSpeakerManager >>>> %s: [%p] meta = %s
<<<< APSyncSpeakerManager >>>> %s: [%p] ownedGroupID = '%s'
<<<< APSyncSpeakerManager >>>> %s: volume has changed noticeably after update: %g -> %g; %s
<<<< APSyncSpeakerManager >>>> %s: mute has changed after update: %c -> %c; %s
<<<< APSyncSpeakerManager >>>> %s: groupIDsMatchForProposal: Match: current '%s' vs. '%s'; prop '%s'
<<<< APSyncSpeakerManager >>>> %s: groupIDsMatchForProposal: Didn't match: cur '%s' vs. '%s'; prop '%s' vs. '%s'
<<<< APSyncGroupManager >>>> %s: [%p] groupID -> %s, isLeaderDiscoverable: %d, leaderSupportsAPSync: %d, volumeControlSupported: %c, volumeControlType: %llu
<<<< APSyncGroupManager >>>> %s: Change after metadata: %s
<<<< APSyncGroupManager >>>> %s: Change after volume control: %s
<<<< APSyncGroupManager >>>> %s: Change after nowplaying: %s
<<<< APSyncGroupManager >>>> %s: Finished setJsonValue
<<<< APSyncGroupManager >>>> %s: [%p] groupID -> %s
<<<< APSyncGroupManager >>>> %s: [%p] changes -> %s
<<<< APSyncGroupManager >>>> %s: [%p] path = %s, prev = %s
<<<< APSyncGroupManager >>>> %s: groupID = %s
<<<< APSyncGroupManager >>>> %s: volumeControlJson = %s
<<<< APSyncGroupManager >>>> %s: [%p] Could not extract group ID from path: %s.
<<<< APSyncGroupManager >>>> %s: [%p] %s
<<<< CRDTMergeLWW >>>> %s: (%s, %s)
<<<< CRDTMergeLWW >>>> %s: A(%s, %s, %s)
<<<< CRDTMergeLWW >>>> %s: B(%s, %s, %s)
<<<< CRDTMergeLWW >>>> %s: B(%s, %s)
<<<< APSyncNode >>>> %s: [%p] %s: created
<<<< APSyncNode >>>> %s: %s:onConnect sending %s
<<<< APSyncNode >>>> %s: %s:onMessage %s
<<<< APSyncNode >>>> %s: [%p] server %p, pipe %p
<<<< APSyncDeviceManager >>>> %s: [%p] metadata -> %s
<<<< APSyncDeviceManager >>>> %s: [%p] path: %s
<<<< APSyncDeviceManager >>>> %s: [%p] mapping deviceID %s to speakerID %s
<<<< APSyncDeviceManager >>>> %s: [%p] mapped deviceID %s to speakerID %s
<<<< APSyncVolumeUpdate >>>> %s: [%p]
<<<< APSyncVolumeUpdate >>>> %s: exception - %s
<<<< APSyncVolumeUpdate >>>> %s: apsync exception - %s
<<<< APSyncVolumeUpdate >>>> %s: [%p] ([%p], [%p])
<<<< APSyncVolumeUpdate >>>> %s: [%p] %lld
<<<< APSyncVolumeUpdate >>>> %s: [%p] ([%p])
<<<< APSyncVolumeUpdate >>>> %s: [%p] (%f, %c)
<<<< APSyncVolumeUpdate >>>> %s: APSyncVolumeUpdate [%p] finalizing
<<<< APSyncPipeServer >>>> %s: [%p] PipeServer created
<<<< APSyncPipeServer >>>> %s: [%p] PipeServer destroyed
<<<< APSyncPipeServer >>>> %s: [%p] onAccept from pipe: [%p], delegate %p
<<<< APSyncSocketConnection >>>> %s: [%p] created
<<<< APSyncSocketConnection >>>> %s: [%p] destroying
<<<< APSyncSocketConnection >>>> %s: [%p] vs OPENING, state = %s
<<<< APSyncSocketConnection >>>> %s: [%p] tearing down while trying to reconnect
<<<< APSyncSocketConnection >>>> %s: [%p] vs OPEN, state = %s
<<<< APSyncSocketConnection >>>> %s: [%p] destroyed
<<<< APSyncSocketConnection >>>> %s: [%p] received %zd bytes
<<<< APSyncSocketConnection >>>> %s: [%p]: %s
<<<< APSyncSocketConnection >>>> %s: [%p] closing connection
<<<< APSyncSocketConnection >>>> %s: [%p] (state %s): %s
<<<< APSyncSocketConnection >>>> %s: [%p] connect: %s, valid completion: '%c'
<<<< APSyncSocketConnection >>>> %s: [%p] not connecting; connection is already in state: %s
<<<< APSyncSocketConnection >>>> %s: [%p] socket %d
<<<< APSyncSocketConnection >>>> %s: [%p] connect called existing socket (%d, new socket %d); current state = %s
<<<< APSyncSocketConnection >>>> %s: Error creating abort pipes: %s
<<<< APSyncSocketConnection >>>> %s: [%p] starting to listen on socket %d
<<<< APSyncSocketConnection >>>> %s: [%p] select failed with %s
<<<< APSyncSocketConnection >>>> %s: [%p] got non-negative result from select
<<<< APSyncSocketConnection >>>> %s: [%p] Got message on abort pipe
<<<< APSyncSocketConnection >>>> %s: [%p] Error reading from named pipe: %s
<<<< APSyncSocketConnection >>>> %s: [%p] Socket closed by server.
<<<< APSyncSocketConnection >>>> %s: [%p] No fd's set??
<<<< APSyncSocketConnection >>>> %s: [%p] Exception in runClient(): %s
<<<< APSyncSocketConnection >>>> %s: [%p] aborting; disconnecting socket %d
<<<< APSyncSocketConnection >>>> %s: [%p] returning from runClient
<<<< APSyncSocketConnection >>>> %s: [%p] IP: %s, port: %d
<<<< APSyncSocketConnection >>>> %s: [%p] Valid IPv4 address: %s
<<<< APSyncSocketConnection >>>> %s: [%p] Valid IPv6 address: %s
<<<< APSyncSocketConnection >>>> %s: [%p] '%s' - invalid address
<<<< APSyncSocketConnection >>>> %s: [%p] Socket creation error
<<<< APSyncSocketConnection >>>> %s: [%p] Connecting to IP: %s, port: %d, socket: %d
<<<< APSyncSocketConnection >>>> %s: [%p] Failed to Connect ( %d )!
<<<< APSyncSocketConnection >>>> %s: [%p] Connect status: %d, attempting to reconnect
<<<< APSyncSocketConnection >>>> %s: [%p] Connect succeeded!
<<<< APSyncSocketConnection >>>> %s: [%p] In progress or trying again, socket %d ( retry: %d )
<<<< APSyncSocketConnection >>>> %s: [%p] returning from retryConnect
<<<< APSyncSocketConnection >>>> %s: [%p] locked operation returned false; not calling delegate
<<<< APSyncSocketConnection >>>> %s: [%p] set state %d=%s; delegate = %p
<<<< APSyncSocketConnection >>>> %s: [%p], delegate [%p]
<<<< APSyncSocketConnection >>>> %s: [%p] started while destructing; returning
<<<< APSyncSocketConnection >>>> %s: [%p] setting m_socket = %d
<<<< APSyncSocketConnection >>>> %s: [%p] stopping while destructing; returning
<<<< APSyncSocketConnection >>>> %s: [%p] destructing before attempting reconnect, aborting
<<<< APSyncSocketConnection >>>> %s: [%p] returning from dispatch::after[1] from retryConnect
<<<< APSyncSocketConnection >>>> %s: [%p] Connect succeeded
<<<< APSyncSocketConnection >>>> %s: [%p] Connect retry attempt: %d, status: %d
<<<< APSyncSocketConnection >>>> %s: [%p] Failed to Connect after exceeding max retries!
<<<< APSyncSocketConnection >>>> %s: [%p] returning from dispatch::after[2] from retryConnect
<<<< APSyncSocketConnection >>>> %s: [%p] destructing after wait, before attempting reconnect, aborting
<<<< APSyncSocketConnection >>>> %s: [%p] destructing after failed reconnect attempts
<<<< CRDTMergeAlgorithm >>>> %s: merge '%s' into '%s'
<<<< CRDTMergeAlgorithm >>>> %s: merged.
<<<< CRDTMergeAlgorithm >>>> %s: not merged.
<<<< APSyncNotificationManager >>>> %s: [%p]
<<<< APSyncNotificationManager >>>> %s: adding itemID %s with listener [%p]
<<<< APSyncNotificationManager >>>> %s: [%p] (%s)
<<<< APSyncNotificationManager >>>> %s: [%p] sending %s to %zu listeners
<<<< APSyncTreeManager >>>> %s: Node missing type/name fields, or cost is <= 0: %s; skipping
<<<< APSyncTreeManager >>>> %s: %s:onDiscovery
  Node: %s
<<<< APSyncTreeManager >>>> %s:   Changes: %s
<<<< APSyncTreeManager >>>> %s: onChange(%s)
<<<< APSyncTreeManager >>>> %s: %s::recalc()
<<<< APSyncTreeManager >>>> %s: L1:type is %s
<<<< APSyncTreeManager >>>> %s:   L2:name is %s
<<<< APSyncTreeManager >>>> %s: not valid: %s
<<<< APSyncTreeManager >>>> %s: Skipping %s: costn %d non-positive
<<<< APSyncTreeManager >>>> %s:     L3:name2 is %s
<<<< APSyncTreeManager >>>> %s: Skipping %s: costm %d non-positive
<<<< APSyncTreeManager >>>> %s: n is %s; m is %s
<<<< APSyncTreeManager >>>> %s: Adding %s, cost %d
<<<< APSyncTreeManager >>>> %s: %s:links are %s, Selected: %s
<<<< APSyncVolumeGroup >>>> %s: [%p] [%s](%s, %g, %s)
<<<< APSyncVolumeGroup >>>> %s: [%p] [%s](%s) - speaker ID not found; creating new entry!
<<<< APSyncVolumeGroup >>>> %s: [%p] [%s](%g, %s)
<<<< APSyncPipeJson >>>> %s: [%p] PipeJson created, pipe = %p
<<<< APSyncPipeJson >>>> %s: [%p] host %s
<<<< APSyncPipeJson >>>> %s: [%p]
<<<< APSyncPipeJson >>>> %s: [%p] message = %s
<<<< APSyncPipeJson >>>> %s: [%p] could not parse message '%s' as JSON: %s
<<<< APSyncPipeJson >>>> %s: [%p] state = %s
<<<< CRDTMergeGroupProposal >>>> %s: merge[%s] into [%s]
<<<< APSyncGroupProposal >>>> %s: [%p] Received GroupProposal, existingGroupID: %s, proposedGroupID: %s
<<<< APSyncGroupProposal >>>> %s: [%p] destructed
<<<< APSyncGroupProposal >>>> %s: [%p] path: %s
<<<< APSyncGroupProposal >>>> %s: [%p]: path ( '%s' ) not valid
<<<< APSyncGroupProposal >>>> %s: [%p]: not handling %s - wrong speaker (want %s, got %s)
<<<< APSyncGroupProposal >>>> %s: [%p]: Received group current
<<<< APSyncGroupProposal >>>> %s: GCur requestingSpeaker: '%s', proposedGroupID: '%s', existingGroupID: '%s', newGroupID: '%s'
<<<< APSyncGroupProposal >>>> %s: [%p]: signaling route added successfully
<<<< APSyncGroupProposal >>>> %s: [%p]: signaling route removed successfully
<<<< APSyncGroupProposal >>>> %s: [%p]: GroupCurrent notification unhandled
<<<< APSyncGroupProposal >>>> %s: [%p]: Received group proposal
<<<< APSyncGroupProposal >>>> %s: proposal: %s
<<<< APSyncGroupProposal >>>> %s: [%p]: proposal timeout set for: %lld milliseconds
<<<< APSyncGroupProposal >>>> %s: [%p] received callback failure state: %d, requestingSpeaker: %s
<<<< APSyncGroupProposal >>>> %s: inContext is NULL
<<<< APSyncGroupProposal >>>> %s: Timer Fired, notifying [%p]
<<<< APSyncGroupProposal >>>> %s: [%p]: signaling route request timeout
<<<< APSyncGroupProposal >>>> %s: [%p]: payload ( %s )
<<<< APSyncController >>>> %s: ReceiverConnectionInfo destructing.
<<<< APSyncController >>>> %s: exception - %s
<<<< APSyncController >>>> %s: apsync exception - %s
<<<< APSyncController >>>> %s: APSyncController created: [%p]
<<<< APSyncController >>>> %s: [%p]
<<<< APSyncController >>>> %s: [%p](%@, %@)
<<<< APSyncController >>>> %s: APSyncController [%p] finalizing
<<<< APSyncControllerServer >>>> %s: APSyncController created, result = %d
<<<< APSyncPipe >>>> %s: [%p] Pipe created
<<<< APSyncPipe >>>> %s: [%p] Pipe destroyed
<<<< APSyncPipeManager >>>> %s: %s)
<<<< APSyncPipeManager >>>> %s: %s:adding m_pipes[%s] m_state == %s
<<<< APSyncPipeManager >>>> %s: %s:ManagerPipeState::onMessage[%p](...,%s) state=%s
<<<< APSyncPipeManager >>>> %s: %s:forwarding to manager delegate %s
<<<< APSyncPipeManager >>>> %s: got %s during WAITING_ACCEPT
<<<< APSyncPipeManager >>>> %s: did not get 'yes' so dropping
<<<< APSyncPipeManager >>>> %s: Error: couldn't find pipestate
<<<< APSyncPipeManager >>>> %s: reject incoming because no name[%p]
<<<< APSyncPipeManager >>>> %s: %s:existing pipes are
<<<< APSyncPipeManager >>>> %s:   %s[%p]: m_name="%s", m_state=%s
<<<< APSyncPipeManager >>>> %s: keeping outgoing %s[%p], reject incoming %s[%p]
<<<< APSyncPipeManager >>>> %s: keeping incoming %s[%p], closing outgoing %s[%p]
<<<< APSyncPipeManager >>>> %s: move outgoing to dead
<<<< APSyncPipeManager >>>> %s: move incoming[%p] to m_pipes
<<<< APSyncPipeManager >>>> %s: %spipe[%s].m_state == READY
<<<< APSyncPipeManager >>>> %s: send accept:yes
<<<< APSyncPipeManager >>>> %s: move incoming[%p] to dead
<<<< APSyncPipeManager >>>> %s: %s:m_pipes[%s].m_state = WAITING_ACCEPT
<<<< APSyncPipeManager >>>> %s: sending %s
<<<< APSyncPipeManager >>>> %s: %s:PipeManager::onClose(name=%s[%p])
<<<< APSyncPipeManager >>>> %s: [%p] calling onDisconnect
<<<< APSyncPipeManager >>>> %s: Error: couldn't find pipestate to delete
<<<< APSyncPipeManager >>>> %s: [%p] erasing dead pipe %p
<<<< APSyncPipeManager >>>> %s: %s:PipeManager::onRetry(name=%s[%p]), retries remaining %d
<<<< APSyncPipeManager >>>> %s: [%p] %p -> %s
<<<< APSyncPipeManager >>>> %s: [%p] !%p -> %s
<<<< APSyncPipeManager >>>> %s: [%p](pipe %p)
<<<< APSyncPipeManager >>>> %s: ManagerPipeState:setState[%p](%s);
<<<< APSyncPipeManager >>>> %s: ManagerPipeState::onMessage[%p](%s)
<<<< APSyncPipeManager >>>> %s: [%p](state=%d/%s)
