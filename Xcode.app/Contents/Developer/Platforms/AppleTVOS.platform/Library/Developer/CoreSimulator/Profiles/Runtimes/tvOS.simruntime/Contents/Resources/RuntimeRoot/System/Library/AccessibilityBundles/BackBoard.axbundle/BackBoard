?ffffff
?333333
MbP?
v8@?0
BBAXLoadingQueue
BKAccessibility
v16@?0^v8
v16@?0@"AXEventRepresentation"8
/System/Library/AccessibilityBundles/BackBoardExtras.axbundle
B16@?0@"AXValidationManager"8
CMDeviceOrientationManager
BKGSEventSystem
BKUserEventTimer
sharedInstance
isResetIdleHackEnabled
AX Backboard
Backboard
v24@?0@"AXValidationManager"8Q16
v16@?0@"AXValidationManager"8
BKAccelerometerInterfaceAccessibility
BKUserEventTimerAccessibility
Repeating AX aggd
Kicking off AX aggd
_eventRoutingClientConnectionManager
_currentMode
notifyOnNextUserEvent
ZoomListenerRegistered
hash
TQ,R
superclass
T#,R
description
T@"NSString",R,C
debugDescription
PurpleSystemAppPort
fireTime
Td,N,VfireTime
value
T@,&,N,Vvalue
v16@?0@"NSNotification"8
@32@?0{?=QQ}8q24
@40@?0{?=QQ}8q24@32
v40@?0{?=QQ}8q24@32
B40@?0{?=QQ}8i24@28I36
v16@?0@8
@8@?0
com.apple.assistivetouchd
com.apple.accessibility.AccessibilityUIServer.gsEvents
GetJobs
BKSystemAppSentinel
systemApp
systemApplications
B32@?0@8Q16^B24
bundleIdentifier
BKHIDSystemInterface
_deliveryManager
ax-send-event-queue
AX Error: error reposting event. value expected to be data
contextId
point
displayId
TVOut
AXPassiveResentThread
accelerometerDisabled
TB,N,V_accelerometerDisabled
B16@?0@"AXEventRepresentation"8
BB-AX
%@-toggle-testing
userEventOccurredOnDisplay:
_accessibilityProcessExternHIDEvent:
^{__IOHIDEvent=}
_accessibilitySetEventTapCallback:
_accessibilityEventTapCallback
_accessibilityHIDEventTapCallback
_accessibilitySetHIDEventTapCallback:
_displayConvertToCAScreen:
{CGPoint=dd}
_displayConvertFromCAScreen:
_objectWithinProximity
_isDisplayBacklightOff
_setCapsLockLightOn:
BKSystemApplication
BKEventClient
BKHIDClientConnectionManager
copyClientForDestination:
^{__IOHIDEventSystemConnection=}
copyClientForTaskPort:
pidForBundleID:
BKSHIDEventDeferringResolution
build:
BKSMutableHIDEventDeferringResolution
setPid:
_currentTimeout
_queue
NSObject<OS_dispatch_queue>
BKHIDEventDeliveryManager
destinationsForEvent:associatedWithDisplay:
AX Backboard Bundle
Backboard Bundle
TouchAccommodationsQueue
TouchAccommodationsClientIdentifier-%@
TouchAccommodations
touchAccommodationsClient
T@"AXUIClient",&,N,V_touchAccommodationsClient
AXBrightnessFilterCacheNightShift
AXBrightnessFilterCacheAutoWhiteBalance
v16@?0^{?=BBBi{?={?=ii}{?=ii}}QB}8
DisplayFilterIPrimaryClientID
showFilters
forceSoftwareFilter
displayFilterUIClient
T@"AXUIClient",&,N,V_displayFilterUIClient
softwareFiltersEnabled
TB,N,V_softwareFiltersEnabled
didEnableHWFilters
TB,N,V_didEnableHWFilters
invertColorsWasEnabled
TB,N,V_invertColorsWasEnabled
grayscaleWasEnabled
TB,N,V_grayscaleWasEnabled
reduceWhitePointWasEnabled
TB,N,V_reduceWhitePointWasEnabled
ignoringNotifications
TB,N,V_ignoringNotifications
resetTimer: mode:
Couldn't get the internal queue for BKUserEventTimer. This can lead to us accidentally making the timer get stuck off! This is a serious bug!
systemApp unexpectedly returned nil
Could not dispatch this event because there's no connection for: %{private}@
No IOHIDSenderID recorded for this event, please add one: %@
homeIsDown
TB,N,V_homeIsDown
UIAXZoomRegisterConflict
com.apple.accessibility.physicalinteraction.client
com.apple.private.kernel.jetsam
com.apple.accessibility.voiceover
com.apple.accessibility.AccessibilityUIServer
com.apple.assistivetouch.daemon
com.apple.accessibility.api
com.apple.private.allow-explicit-graphics-priority
com.apple.ax.eventlisten
com.apple.voiceservices.tts.customvoice
com.apple.accessibility.automation.client
com.apple.backboard.client
com.apple.GAX.SPI
com.apple.invert.colors.write.access
com.apple.fullkeyboardaccess
com.apple.commandandcontrol
com.apple.CoreRoutine.preferences
com.apple.AXApp
error: %@
record
displayPoint
result
frame
fromContextId
toContextId
axbackboard-post
systemEvent
afterNamedTap
namedTaps
enable
application
start
enabled
rect
GAXBackboard
inPreboardMode
inCheckerBoardMode
sesionIsLoginSession
availability
isInWorkspace
isPasscodeViewVisible
effectiveAppBundleIdentifier
v16@?0@"NSDictionary"8
Guided Access is not loaded
command
GAX Backbaord instance does not respond to handleGuidedAccessAutomationCommand:
ERROR:
ERROR: %@
error
isActive
v12@?0B8
_accessIgnoredTouchRegions
preference
notification
Resetting accessibility features on behalf of %@
filterData
delegate
T@"<AXBackBoardServerInstanceDelegate>",W,N,V_delegate
allowsTripleClickSheet
****************** Loading GAX Backboard Server Bundle ****************
/System/Library/AccessibilityBundles/GAXBackboardServer.bundle
**** AX Error: Could not load GAXBackboardServer bundle. bundleWithPath came back nil
**** AX Error: Accessibility: Could not load GAXBackboardServer bundle
**** AX Error: Could not initialize GAXBackboardServer instance: %@
HIDStickyKeysDisabled
HIDStickyKeysOn
HIDStickyKeysShiftToggles
HIDSlowKeysDelay
v16@?0^{__IOHIDServiceClient=}8
AXBHardwareKeyboardsManager
StickyKeys
v24@?0@"NSDictionary"8@"NSError"16
Error sending message that sticky keys were enabled via shift: %@
Error disabling sticky keys: %@
Error updating sticky key state: %@
eventTapIdentifier
T@"NSString",C,N,V_eventTapIdentifier
shouldNotUpdateHIDClientForNextStickyKeysEnabledChange
TB,N,V_shouldNotUpdateHIDClientForNextStickyKeysEnabledChange
BKAccelerometerInterface
handleEvent:
orientationManager: deviceOrientationMayHaveChanged: changeSource: isDeviceOrientationLocked:
init
_accessibilitySetEventTapCallback:
sharedManager
setInstallationGSCallback:
_accessibilitySetHIDEventTapCallback:
setInstallationHIDCallback:
dispatchEventRepresentationToClient:
setInstallationEventRepPost:
bundleWithPath:
load
principalClass
initialize
backBoardServerInstance
setDelegate:
initializeMonitor
initializeAccessibilityMonitor
sharedInstance
validateClass:
validateClass:hasClassMethod:withFullSignature:
validateClass:hasInstanceMethod:withFullSignature:
setValidationTargetName:
setOverrideProcessName:
setDebugBuild:
installSafeCategory:canInteractWithTargetClass:
performValidations:withPreValidationHandler:postValidationHandler:safeCategoryInstallationHandler:
updateStatistics
_repeatAggregateStatistics
ignoreLogging
identifier
safeValueForKey:
intValue
resetTimer:mode:
safeBoolForKey:
userEventOccurredOnDisplay:
server
displays
firstObject
displayId
_displayConvertFromCAScreen:withDisplayIntegerId:
_displayConvertFromCAScreen:
_displayConvertToCAScreen:withDisplayIntegerId:
_displayConvertToCAScreen:
_accessibilityProcessExternHIDEvent:
resetAssistiveTouchHitPort
resetAccessibilityUIHitPort
setLockScreenDimTimerEnabled:
_axSetTimerDisabled:
_isDisplayBacklightOff
registerEventListener:
defaultCenter
postNotificationName:object:
accessibilityConvertHostedViewFrame:fromContextId:displayId:
accessibilityConvertHostedViewFrame:toContextId:displayId:
postEvent:systemEvent:afterNamedTap:namedTaps:
contextIdForPosition:displayId:
contextIdHosterForContextId:
enableEventTap:forApplication:
sendUserEventOccurred
setDisableSystemGestureRecognitionInEvents:
_setCapsLockLightOn:
kickoffAggregateStatistics
hidClientConnectionManager
displayConvertFromCAScreen:withDisplayIntegerId:
displayConvertToCAScreen:withDisplayIntegerId:
processExternalHIDEvent:
accessibilityUIServerPid
assistiveTouchPid
siriViewServicePid
isDisplayBacklightOff
isEqual:
class
self
performSelector:
performSelector:withObject:
performSelector:withObject:withObject:
isProxy
isKindOfClass:
isMemberOfClass:
conformsToProtocol:
respondsToSelector:
retain
release
autorelease
retainCount
zone
hash
superclass
description
debugDescription
convertFrame:fromContextId:displayId:
convertFrame:toContextId:displayId:
contextIdForDisplayPoint:
userEventOccurred
setAssistiveTouchPid:
accessibilityAssistiveTouchPid
setAccessibilityUIServerPid:
setSiriViewServicePid:
zoomListenerRegistered
setCapsLockLightOn:
.cxx_destruct
fireTime
setFireTime:
value
setValue:
initializeAccessibility
disableAccessibility
updateAccessibilitySettings
mainQueue
addObserverForName:object:queue:usingBlock:
addObserver:selector:name:object:
setSystemWideServer:
_iosAccessibilityAttributeValue:
setAttributeCallback:
_iosAccessibilityAttributeValue:forParameter:
setParameterizedAttributeCallback:
_iosAccessibilitySetValue:forAttribute:
setSetAttributeCallback:
_iosAccessibilityPerformAction:withValue:fencePort:
setPerformActionCallback:
observerClientDied
setClientObserverCallback:
setApplicationElementCallback:
start
numberWithFloat:
setAccelerometerDisabled:
_setDeviceOrientationCapability:
machPortForPoint:
representationWithEventRecord:
setTaskPort:
serverIfRunning
taskNamePortOfContextId:
copyClientForTaskPort:
_handlePidForSpecialCases:
_accessibilitySystemAppApplicationPid
array
safeArrayForKey:
safeStringForKey:
isEqualToString:
ax_filteredArrayUsingBlock:
_accessibilitySystemApp
unsignedIntValue
numberWithInt:
_deliveryManager
keyRepresentationWithType:
keyInfo
setKeyCode:
newHIDEventRef
builtinDisplay
destinationsForEvent:associatedWithDisplay:
anyObject
boolValue
floatValue
touchRepresentationWithHandType:location:
handInfo
paths
firstPath
setPathWindowContextID:
_accessibilityApplicationForContextId:
setPid:
accessibilityConvertHostedViewPoint:toContextId:displayId:
setPathLocation:
setTransducerType:
setContextId:
additionalFlags
setAdditionalFlags:
setOrbValue:
_commonEventRepForTouchEventWithType:location:force:flags:contextId:
_sendEventRep:
setAltitude:
setAzimuth:
_accessibilityViewPointFromHostedViewContext:displayId:
windowServer
contextIdAtPosition:
_sendPressFingerEvent:location:force:flags:contextId:
sleepForTimeInterval:
_accessibilityCarPlayApplicationPid
_accessibilitySpringBoardApplication
_accessibilityUIServerApplication
_accessibilityAssistiveTouchApplication
_accessibilityNativeFocusedApplication
numberWithBool:
doubleValue
_releasePendingEvents:
representationWithData:
_accessibilityRepostEvent:
count
objectAtIndex:
pointValue
_sendFingerEvent:location:force:flags:contextId:
simulatePressAtPoint:withContextId:withDelay:withForce:
_sendDeviceChangeEvent:
_sendCancelTouchEvent
objectAtIndexedSubscript:
_sendStylusEvent:location:force:altitude:azimuth:flags:contextId:
buttonRepresentationWithType:
sendHIDSystemEvent:repostCreatorHIDEvent:senderID:
valueWithPoint:
_accessibilityConvertHostedViewPoint:fromContextId:displayId:
objectForKey:
windowServerDisplayForDisplayId:
setObject:forKey:
numberWithUnsignedInt:
rectValue
valueWithRect:
_accessibilityDisplayRequiresRotateForPoints:
name
TVOutDisplay
isExternal
mainDisplay
displayWithDisplayId:
lock
unlock
distantFuture
timeIntervalSinceNow
removeObjectAtIndex:
length
getBytes:length:
_processPassiveEventQueue
countByEnumeratingWithState:objects:count:
currentThread
setName:
isRedirectEvent
originalType
_handleItemChooserVisible:
_userEventOccurred
type
pathWindowContextID
pathLocation
location
setLocation:
windowLocation
setWindowLocation:
copy
_undoContextShiftedPoints:
dataRepresentation
_startPassiveResendThread
detachNewThreadSelector:toTarget:withObject:
addObject:
_screenReaderCapture:
_accessibilityIsInternalInstall
allJobLabels
_accessibilityCarPlayApp
_accessibilitySystemAppApplicationBundleId
_accessibilityEventTapCallback:
accelerometerDisabled
_runtimeManager
_accelerometerDisabled
arrayWithObjects:count:
sendEvent:afterTap:useGSEvent:namedTaps:options:
initWithUTF8String:
convertPoint:fromContextId:displayId:
convertPoint:toContextId:displayId:
removeEventTap:
installEventTap:identifier:type:
stringWithFormat:
_updateGrayScaleSettings
setGrayscale:
removeObserver:
dealloc
_speakThisQueue
setZoomTouchEnabled:
initializeZoomMonitor
getZoomBundlePrincipalClassForcingLoad:
updateSettings
__os_unfair_lock__
validateClass:hasInstanceVariable:withType:
performValidations:withPreValidationHandler:postValidationHandler:
_showHoldDurationTripleClickHelp
_hideHoldDurationTripleClickHelp
_updateTouchAccommodationsSetting
touchAccommodationsHoldDurationEnabled
registerUpdateBlock:forRetrieveSelector:withListener:
touchAccommodationsIgnoreRepeatEnabled
touchAccommodationsTapActivationMethod
touchAccommodationsEnabled
touchAccommodationsAreConfigured
touchAccommodationsClient
sendAsynchronousMessage:withIdentifier:targetAccessQueue:completion:
processInfo
processIdentifier
_clientIdentifier
initWithIdentifier:serviceBundleName:
showHoldDurationTripleClickHelp
hideHoldDurationTripleClickHelp
userInterfaceClient:processMessageFromServer:withIdentifier:error:
userInterfaceClient:messageFromServerForWithIdentifierShouldBeProcessedAsynchronously:
userInterfaceClient:processMessageFromServerAsynchronously:withIdentifier:completion:
userInterfaceClient:accessQueueForProcessingMessageWithIdentifier:
userInterfaceClient:messageWithIdentifierRequiresWritingBlock:
userInterfaceClient:willActivateUserInterfaceServiceWithInitializationMessage:
connectionWithServiceWasInterruptedForUserInterfaceClient:
_registerForTouchAccommodationsAXSettingsUpdate
setTouchAccommodationsClient:
_areTouchAccommodationsInEffect
_touchAccommodationsQueue
_touchAccommodationsClient
blueLightClient
setStatusNotificationBlock:
supportsBlueLightReduction
setSupportsAdvancedDisplayFilters:
supported
blueLightStatusEnabled
getBlueLightStatus:
setMode:
setEnabled:
adaptationEnabled
adaptationClient
getEnabled
disableBrightnessFilters
brightnessFiltersEnabled
restoreCachedBrightnessFilters
supportsAdaptation
_brightnessClient
_blueLightStatusEnabled
disableAllFilters
_updateNotificationCache
_updateSettings:
classicInvertColors
_allowSoftwareFilters
setInvertColorsWasEnabled:
setGrayscaleWasEnabled:
setReduceWhitePointWasEnabled:
setIgnoringNotifications:
invertColorsWasEnabled
grayscaleWasEnabled
reduceWhitePointWasEnabled
_forceSoftwareFilters
setDisplayFilterFromLastUpdate:
supportsAccessibilityDisplayFilters
didEnableHWFilters
setDidEnableHWFilters:
setAccessibilityColorMatrix:scale:
softwareFiltersEnabled
setSoftwareFiltersEnabled:
displayFilterUIClient
ignoringNotifications
_updateMatrixSupport
_updateCoreSupport
displayFilterFromLastUpdate
_updateBrightnessFilters:
_repostNotificationIfNeeded
setDisplayFilterUIClient:
_displayFilterFromLastUpdate
_softwareFiltersEnabled
_didEnableHWFilters
_invertColorsWasEnabled
_grayscaleWasEnabled
_reduceWhitePointWasEnabled
_ignoringNotifications
_displayFilterUIClient
_showLookingGlassMenu
_updateLookingGlassServicesIfNeeded
showLookingGlassMenu
unused
safeCategoryTargetClassName
safeCategoryBaseClass
_axIsTimerDisabled
_axSetDesiredTimeout:
_axSetDesiredMode:
_axDesiredTimeout
_axDesiredMode
_accessibilityPerformValidations:
convertPoint:toContextId:
convertPoint:fromContextId:
setSystemGesturePossible:
pathPressure
setEventType:
eventType
eventListener:
_assistiveTouchEventTap:
_enableAssistiveTouchEventTap:
fakeTouchScaleEventRepresentation:
contextId
clientId
taskPort
setClientId:
pidForBundleID:
build:
copyClientForDestination:
contextIdHostingContextId:
systemEventPort
setHomeIsDown:
_processHIDEvent:
_normalizeEventForContext:
clientPortOfContextId:
clientPortAtPosition:
systemAppPort
systemAppPid
lastRecordPostedThroughHID
clearLastRecordPostedThrougHID
clientPortForContextId:
homeIsDown
_eventTapIdentifier
_homeIsDown
_overrideGestureRecognitionState
_eventListenerEnabled
_userDevice
_lastHIDRecord
_initServer
_handleRegisterZoomConflict:
setHandlerWithTarget:selector:forKey:possibleRequiredEntitlements:
_handleZoomAdjustment:
_handleConvertFrameFromContextId:
_handleConvertFrameToContextId:
_handleConvertFrameFromContextIdToContextId:
_handleContextHostingIdForContextId:
_handleContextIdForPosition:
_handlePostEvent:
_handleUserEventOccurred:
_handleSetCapsLockLightOn:
_handleEventListenerRegistration:
_handleRegisterAssistiveTouchPID:
_handleRegisterAccessibilityUIServerPID:
_handleRegisterSiriViewServicePID:
_handleAXUIServerPID:
_handleAssistiveTouchPID:
_handleLockScreenDimTimerEnabled:
_handleGetGuidedAccessAvailability:
_handleSetInPreBoardMode:
_handleInPreBoardMode:
_handleSetInCheckerBoardMode:
_handleInCheckerBoardMode:
_handleSessionIsLoginSession:
_handleSetSessionIsLoginSession:
_handleIsGuidedAccessActive:
_handleIsGuidedAccessInWorkspace:
_handleGuidedAccessEffectiveAppBundleIdentifier:
_handleGuidedAccessIgnoredRegions:
_handleGuidedAccessAutomationCommand:completion:
setHandlerWithTarget:selector:async:forKey:possibleRequiredEntitlements:
_handleGuidedAccessCurrentModeAndSessionApp:
_handleIsGuidedAccessSelfLockedToRequestingApp:
_handleSetGuidedAccessEnabledByRequestingApp:completion:
_handleIsGuidedAccessUnmanagedSelfLocked:
setHandlerWithTarget:selector:forKey:
_handleInvertColorsChange:
_setAXPreferenceAsMobile:
_axPreferenceAsMobile:
_handleSetSwitchControlRendersDeviceUnusable:
_handleSetSwitchControlHasScreenSwitch:
_handleSetZoomInitialFocusRect:
setHandlerWithTarget:selector:async:forKey:
_handleGetZoomInitialFocusRect:
_handleTripleClickHomeButtonFired:
_handleHomeClickSwallowedForGuidedAccess:
_handleDisableBrightnessFilters:
_handleBrightnessFiltersEnabled:
_handleBlueLightStatusEnabled:
_handleRestoreCachedBrightnessFilters:
_handleAdaptationEnabled:
_handleSupportsAdaptation:
_handleLoadGAXBundleForUnmanagedASAM:
_handleResetAccessibilityFeatures:
_handleToggleGuidedAccess:
_handleGetLastSetColorFilter:
initWithServiceName:perPidService:
startServerWithError:
setQueueSize:
_initializeHandlers
removeAllHandlersForTarget:
setObject:forKeyedSubscript:
initWithKey:payload:
sendSimpleMessage:
payload
postNotificationName:object:userInfo:
delegate
dictionaryWithObjects:forKeys:count:
objectForKeyedSubscript:
dictionaryWithObject:forKey:
clientPort
initWithPort:
connectWithError:
setTimeout:
serviceMachPort
indexOfObjectPassingTest:
setPortDeathHandler:
_inPreBoardMode
_inCheckerBoardMode
_gaxBackboard
homeClickSwallowedInSpringBoard
_sessionIsLoginSession
addRotorOptionsForLoginSession
configureZoomForLoginSession
availabilityForExternalRequestWithSpringboardParameters:
numberWithUnsignedInteger:
handleGuidedAccessAutomationCommand:completion:
dictionary
hasPrefix:
senderBundleId
auditToken
setEnabled:fromAppWithIdentifier:withAuditToken:configuration:completion:
isSelfLockedToAppWithIdentifier:
isUnmanagedSelfLocked
arrayWithCapacity:
currentGuidedAccessModeForBackboardServer
currentSessionApp
null
forceLoadGAXBundle
resetAccessibilityFeatures
colorFilterFromLastUpdate
dataWithBytes:length:
backBoardServerInstanceIfExists
_handleEnableEventTap:
restartHearingServer
_server
_eventListeners
_zoomListeners
_initialZoomFocusRect
_eventTapClients
_delegate
date
timeIntervalSince1970
_loadBackboardServerBundle
sharedConnection
effectiveBoolValueForSetting:
addObserver:
_guidedAccessServer
loadAndReturnError:
inGuidedAccess
allowsTripleClickSheet
profileConnectionDidReceiveRestrictionChangedNotification:userInfo:
profileConnectionDidReceivePasscodeChangedNotification:userInfo:
profileConnectionDidReceivePasscodePolicyChangedNotification:userInfo:
profileConnectionDidReceiveProfileListChangedNotification:userInfo:
profileConnectionDidReceiveEffectiveSettingsChangedNotification:userInfo:
profileConnectionDidReceiveDefaultsChangedNotification:userInfo:
profileConnectionDidReceiveAppWhitelistChangedNotification:userInfo:
_notificationToken
_updateEventTap
_stickyKeysEnabledChanged
stickyKeysEnabled
_stickyKeysShiftToggleChanged
stickyKeysShiftToggleEnabled
_slowKeysEnabledChanged
_slowKeysAcceptanceDelayChanged
removeObserver:name:object:
flags
keyCode
usagePage
_notifyServerStickyKeyUpdatedForKeycode:usagePage:down:up:locked:
setShouldNotUpdateHIDClientForNextStickyKeysEnabledChange:
setStickyKeysEnabled:
_notifyServerStickyKeysToggledViaShift
_notifyServerStickyKeysDisabled
eventTapIdentifier
_updateStateForKeyboardEvent:
_updateKeyboardService:
installKeyboardEventTap:identifier:matchingServiceHandler:
setEventTapIdentifier:
setEventTapPriority:priority:
runMatchingServiceHandlerForEventTap:
shouldNotUpdateHIDClientForNextStickyKeysEnabledChange
_stickyKeysClient
mainAccessQueue
numberWithUnsignedShort:
numberWithInteger:
_shouldNotUpdateHIDClientForNextStickyKeysEnabledChange
handleEvent:
orientationManager:deviceOrientationMayHaveChanged:changeSource:isDeviceOrientationLocked:
AXBackBoardGlue
AXBackBoardServerInstanceDelegate
NSObject
TimeValuePair
AXBAccessibilityManager
AXBHardwareDisplayModifier
AXBSpeakThisManager
AXBZoomTouchManager
__AXBValidation
AXBTouchAccommodationsController
AXUIClientDelegate
AXBBlueLightManager
AXBDisplayFilterManager
AXBLookingGlassManager
__BKUserEventTimerAccessibility_super
SafeCategory
OS_dispatch_queue
OS_dispatch_object
BKUserEventTimerAccessibility
AXBEventManager
AXBackBoardServerInstance
AXBGuidedAccessManager
MCProfileConnectionObserver
AXBHardwareKeyboardsManager
__BKAccelerometerInterfaceAccessibility_super
BKAccelerometerInterfaceAccessibility
v16@0:8
@16@0:8
{CGPoint=dd}36@0:8{CGPoint=dd}16I32
v24@0:8^{__IOHIDEvent=}16
v20@0:8B16
i16@0:8
B16@0:8
B24@0:8@16
#16@0:8
@24@0:8:16
@32@0:8:16@24
@40@0:8:16@24@32
B24@0:8#16
B24@0:8:16
Vv16@0:8
Q16@0:8
^{_NSZone=}16@0:8
B24@0:8@"Protocol"16
@"NSString"16@0:8
{CGRect={CGPoint=dd}{CGSize=dd}}56@0:8{CGRect={CGPoint=dd}{CGSize=dd}}16I48I52
I20@0:8I16
I32@0:8{CGPoint=dd}16
v44@0:8@16B24@28@36
v24@0:8B16i20
v20@0:8i16
v44@0:8@"AXEventRepresentation"16B24@"NSString"28@"NSArray"36
d16@0:8
v24@0:8d16
v24@0:8@16
i20@0:8I16
v32@0:8@16q24
@52@0:8I16{CGPoint=dd}20d36I44I48
v52@0:8I16{CGPoint=dd}20d36I44I48
v68@0:8I16{CGPoint=dd}20d36d44d52I60I64
{CGPoint=dd}40@0:8{CGPoint=dd}16I32I36
v52@0:8B16{CGPoint=dd}20d36I44I48
v48@0:8{CGPoint=dd}16I32f36d40
@24@0:8q16
B32@0:8i16@20I28
@32@0:8q16@24
@20@0:8I16
B20@0:8I16
@"AXSimpleRuntimeManager"
@"NSObject<OS_dispatch_queue>"
#20@0:8B16
{os_unfair_lock_s="_os_unfair_lock_opaque"I}
@48@0:8@16@24Q32^@40
B32@0:8@16Q24
v48@0:8@16@24Q32@?40
@32@0:8@16Q24
v32@0:8@16@24
@"NSDictionary"48@0:8@"AXUIClient"16@"NSDictionary"24Q32^@40
B32@0:8@"AXUIClient"16Q24
v48@0:8@"AXUIClient"16@"NSDictionary"24Q32@?<v@?@"NSDictionary"@"NSError">40
@"AXAccessQueue"32@0:8@"AXUIClient"16Q24
v32@0:8@"AXUIClient"16@"NSMutableDictionary"24
v24@0:8@"AXUIClient"16
@"AXUIClient"
@"CBClient"
v24@0:8^{__MADisplayFilter=}16
^{__MADisplayFilter=}16@0:8
^{__MADisplayFilter=}
v28@0:8d16i24
I16@0:8
I36@0:8{CGPoint=dd}16I32
@"NSString"
^{__IOHIDUserDevice=}
@"AXEventRepresentation"
{AXBColorFilterDescription=[3[3d]]}16@0:8
@"<AXBackBoardServerInstanceDelegate>"16@0:8
@"<AXBackBoardServerInstance>"16@0:8
@24@0:8@16
v32@0:8@16@?24
@"AXIPCServer"
@"NSMutableArray"
{CGRect="origin"{CGPoint="x"d"y"d}"size"{CGSize="width"d"height"d}}
@"<AXBackBoardServerInstanceDelegate>"
v32@0:8@"MCProfileConnection"16@"NSDictionary"24
v24@0:8^{__IOHIDServiceClient=}16
v36@0:8S16I20B24B28B32
v44@0:8@16q24q32B40
Setting Matrix; Gain: %f WhitePointReduction: %f Matrix: [ [%0.5f, %0.5f, %0.5f], [%0.5f, %0.5f, %0.5f], [%0.5f, %0.5f, %0.5f] ]
Initializing monitor: AXBLookingGlassManager
setting idle timer disabled: %d
Someone asked to reset idle timer but it is disabled by accessibility. timeout: %f mode: %d
Could not create an event ref from: %@
%{public}@
