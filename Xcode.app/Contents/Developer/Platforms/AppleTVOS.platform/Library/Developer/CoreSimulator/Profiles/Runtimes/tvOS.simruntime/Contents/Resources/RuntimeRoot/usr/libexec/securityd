333333
MbP?
PkW^kkkkkkd
    
1.11
ix?L
@(#)PROGRAM:securityd  PROJECT:Security-60144
<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE plist PUBLIC "-//Apple//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd">
<plist version="1.0">
<dict>
<key>allow-obliterate-device</key>
<true/>
<key>allow-softwareupdated</key>
<true/>
<key>application-identifier</key>
<string>com.apple.securityd</string>
<key>aps-connection-initiate</key>
<true/>
<key>aps-environment</key>
<string>serverPreferred</string>
<key>com.apple.CloudKeychainProxy.client</key>
<true/>
<key>com.apple.accounts.appleaccount.fullaccess</key>
<true/>
<key>com.apple.application-identifier</key>
<string>com.apple.securityd</string>
<key>com.apple.aps-environment</key>
<string>serverPreferred</string>
<key>com.apple.authkit.client.private</key>
<true/>
<key>com.apple.developer.aps-environment</key>
<string>serverPreferred</string>
<key>com.apple.developer.icloud-container-environment</key>
<string>Production</string>
<key>com.apple.developer.icloud-container-identifiers</key>
<array>
<string>iCloud.com.apple.security.keychain</string>
</array>
<key>com.apple.developer.icloud-services</key>
<array>
<string>CloudKit</string>
</array>
<key>com.apple.keystore.access-keychain-keys</key>
<true/>
<key>com.apple.keystore.lockassertion</key>
<true/>
<key>com.apple.mkb.usersession.info</key>
<true/>
<key>com.apple.private.MobileGestalt.AllowedProtectedKeys</key>
<array>
<string>SerialNumber</string>
</array>
<key>com.apple.private.accounts.allaccounts</key>
<true/>
<key>com.apple.private.appleaccount.app-hidden-from-icloud-settings</key>
<true/>
<key>com.apple.private.applecredentialmanager.allow</key>
<true/>
<key>com.apple.private.aps-connection-initiate</key>
<true/>
<key>com.apple.private.associated-domains</key>
<true/>
<key>com.apple.private.cloudkit.allowUnverifiedAccount</key>
<true/>
<key>com.apple.private.cloudkit.buddyAccess</key>
<true/>
<key>com.apple.private.cloudkit.notifyOnAccountWarmup</key>
<true/>
<key>com.apple.private.cloudkit.setEnvironment</key>
<true/>
<key>com.apple.private.cloudkit.spi</key>
<true/>
<key>com.apple.private.cloudkit.supportservice</key>
<true/>
<key>com.apple.private.cloudkit.systemService</key>
<true/>
<key>com.apple.private.dark-wake-push</key>
<true/>
<key>com.apple.private.followup</key>
<true/>
<key>com.apple.private.ids.remoteurlconnection</key>
<true/>
<key>com.apple.private.imcore.imagent</key>
<true/>
<key>com.apple.private.imcore.imremoteurlconnection</key>
<true/>
<key>com.apple.private.imcore.remoteurlconnection</key>
<true/>
<key>com.apple.private.lockdown.finegrained-get</key>
<array>
<string>com.apple.securityd.ae/cookie</string>
</array>
<key>com.apple.private.necp.match</key>
<true/>
<key>com.apple.private.network.socket-delegate</key>
<true/>
<key>com.apple.private.rtcreportingd</key>
<true/>
<key>com.apple.private.security.storage.Keychains</key>
<true/>
<key>com.apple.private.sqlite.sqlite-encryption</key>
<true/>
<key>com.apple.private.tcc.allow</key>
<array>
<string>kTCCServiceLiverpool</string>
</array>
<key>com.apple.private.trustedpeershelper.client</key>
<true/>
<key>com.apple.securebackupd.access</key>
<true/>
<key>com.apple.security.network.client</key>
<true/>
<key>com.apple.symptom_diagnostics.report</key>
<true/>
<key>seatbelt-profiles</key>
<array>
<string>securityd</string>
</array>
</dict>
</plist>
odel
keychain
allowed-runtime
reset-period
check-period
graceful-exit-time
com.apple.securityd.watchdog
failed to set parameters: %@
SecWatchdog
WAIT4DEBUGGER
com.apple.securityd.daily
com.apple.securityd.entropyhealth
com.apple.securityd.prng
v16@?0^{_xpc_activity_s=}8
/dev/random
force
musr
network-extension
{%string: %value}
Messages expect to be xpc dictionary, got: %@
com.apple.private.keychain.certificates
com.apple.private.keychain.keychaincontrol
com.apple.private.keychain.backuptableops
com.apple.private.uninstall.deletion
No data for key %s
could not allocate CFDataRef info
missing CFDataRef info
com.apple.private.keychain.circle.join
com.apple.private.migrate-musr-system-keychain
com.apple.private.syncbubble-keychain
keychain-sync-updates
trailing garbage at end of SecAccessControl data
xpcSetDER not data, got %@
v24@?0^{__CFString=}8Q16
v32@?0^{__CFString=}8^{__CFData=}16^{__CFString=}24
v24@?0^{__CFString=}8^{__CFData=}16
keychain-cloud-circle
Failed to write backup file: %d
restore-keychain
com.apple.private.security.delete.all
com.apple.purplebuddy
com.apple.private.keychain.allow-update-tokens
com.apple.private.keychain.sysbound
com.apple.private.keychain.inet_expansion_fields
%@: %@ lacks entitlement %@
com.apple.private.ckks.plaintextfields
%@: %@ has entitlement %@
com.apple.private.keychain.deny
signal
com.apple.application-identifier
application-identifier
entitlements
CryptoTokenKit
UseTokens
com.apple.developer.associated-application-identifier
com.apple.security.application-groups
keychain-access-groups
com.apple.developer.on-demand-install-capable
serverxpc
com.apple.security
com.apple.networkextension.keychain
com.apple.developer.networking.networkextension
com.apple.private.system-keychain
com.apple.private.keychain.performance_impacting_api
com.apple.private.keychain.appclipdeletion
secKeychainDeleteMultiuser: %@ uuid have wrong length: %d
secKeychainDeleteMultiuser: %@ need entitlement %@
com.apple.keychain.multiuser-admin
failed to build query: %@
Client is missing access-group %@: %@
class %@ is not supported: %@
genp
inet
parameter missing: %@
ckkscurrent
v24@?0@"NSData"8@"NSError"16
%@,%@
CKKS not yet initialized
SecItemFetchCurrentItemAcrossAllDevices: client is missing access-group %@: %@
SecItemFetchCurrentItemAcrossAllDevices: %@ does not have entitlement %@
com.apple.private.ckks.currentitempointers_read
SecItemFetchCurrentItemAcrossAllDevices: %@ has entitlement %@
No view manager, cannot forward request
SecItemSetCurrentItemAcrossAllDevices: client is missing access-group %@: %@
SecItemSetCurrentItemAcrossAllDevices: %@ does not have entitlement %@
com.apple.private.ckks.currentitempointers_write
SecItemSetCurrentItemAcrossAllDevices: %@ has entitlement %@
com.apple.securityd.SecItemAddAndNotifyOnSync-callback
f_ckkscallback
v20@?0B8^{__CFError=}12
SecItemAddAndNotifyOnSync: %@ does not have entitlement %@
SecItemAddAndNotifyOnSync: %@ does not have entitlement %@, but is using SPI anyway
SecItemAddAndNotifyOnSync: %@ has entitlement %@
v32@?0@"NSDictionary"8@"NSArray"16@"NSError"24
com.apple.securityd.general
optional_params
%@ %@
encrypt
 (hibernation?)
ks_crypt_diversify: %x failed to '%@' item (class %d, bag: %d)
ks_crypt_diversify: %x failed to '%@' item (class %d, bag: %d) Item can't be decrypted on this device, ever, so drop the item.
ks_crypt_diversify: %x failed to '%@' item (class %d, bag: %d) No key available for class.
ks_crypt_diversify: %x failed to '%@' item (class %d, bag: %d) Access to item attempted while keychain is locked%s.
ks_crypt_diversify: failed to create ref key with blob because bad data (bag: %d)
aks_ref_key: failed to create ref key with blob: %x (bag: %d)
encrypted_data_from_blob: failed to decode 'key data'
encrypted_data_from_blob: failed to decode 'encrypted data'
encrypted_data_from_blob: Bad object type %@ for 'blob data'
encrypted_data_from_blob: NULL 'blob data'
ks_crypt_diversify: failed to '%s' item (class %d, bag: %d) Item can't be encrypted due to merge failed, so drop the item.
ks_crypt_diversify: failed to create aks_params
ks_crypt: %x failed to '%@' item (class %d, bag: %d)
ks_crypt: %x failed to '%@' item (class %d, bag: %d) Item can't be decrypted on this device, ever, so drop the item.
ks_crypt: %x failed to '%@' item (class %d, bag: %d) No key available for class.
ks_crypt: %x failed to '%@' item (class %d, bag: %d) Access to item attempted while keychain is locked%s.
decrypt
delete
aks_ref_key: %x failed to '%s' item (class %d, bag: %d)
aks_ref_key: %x failed to '%s' item (class %d, bag: %d) Item can't be decrypted on this device, ever, so drop the item.
aks_ref_key: %x failed to '%s' item (class %d, bag: %d) Access to item attempted while keychain is locked.
object %@ is not a data
disabled
enabled
KeychainKeyDiversification
SecMockAKS
0123456789abcdf
1234567890123456789012345678901
keybagHandle
acm_handle
external_data
access_groups
security scope control
none
Debug
Info
Notice
Warning
Error
Critical
Alert
Emergency
com.apple.securityd
logging
Failed to create dictionary
Unknown data encoding, expected CCDER_CONSTRUCTED_SEQUENCE
Unknown data encoding, expected CCDER_CONSTRUCTED_SET
null input
debug
%@%@
null
ZuluCalendar
v24@?0Q8*16
yyyy-MM-dd HH:mm
Date Formatting
v16@?0^{__CFDateFormatter=}8
Invalid date: %i, %i, %i, %i, %i, %i, %i
trailing garbage at end of datetime
Invalid datetime character
Unexpected end of datetime
fraction without digits
fraction ends in 0
overflow
Not a decimal digit
Invalid universal time year between 50 and 70
Failed to create utc date
Failed to create date
setting default value
continuing
Failed to encode date.
v16@?0^{__CFCalendar=}8
yMdHms
com.apple.utilities.sqlite3
%@: [%d->%d]%@ %s
%@: [%d]%@ %s
%@: [%d->%d] %s sql: %s
%@: [%d] %s sql: %s
SecDb
<SecDb path:%@ connections: %@>
__OSINSTALL_ENVIRONMENT
#SecDB
file::memory:?cache=shared
%@-commit
SecEmergency
Error with unexecuted sql remaining %@
finalize: %p
PRAGMA integrity_check
SecDbStep SQLITE_ROW returned without a row handler
NULL
%s-iscorrupt
SecDbHandleCorrupt not allowed to repair, handled error: [%d] %s
/Library/Keychains/caissuercache.sqlite3
/Library/Keychains/TrustStore.sqlite3
/Library/Keychains/ocspcache.sqlite3
/Library/Keychains/keychain-2.db
SQL DB %@ is corrupted already. Corruption error was: %d (previously %d)
step
prepare_v2: %@ unused sql: %@
v24@?0r*8Q16
preparev2
prepare_v2: sql bigger than INT_MAX
pragma incremental_vacuum(%d)
pragma freelist_count
SecDbWithSQL perform block missing
pragma page_count
ROLLBACK
invalid transaction type %d
BEGIN
BEGIN EXCLUSIVE
wal_checkpoint(FULL)
SQLProfile
mkpath_np %s: [%d] %s
PRAGMA auto_vacuum
PRAGMA auto_vacuum = incremental
VACUUM
PRAGMA journal_mode = WAL
open_v2 "%s" 0x%X
SecDbConnection
closed
open
<SecDbConnection %s %s>
Unable to process corruption marker: %{darwin.errno}d
B16@?0^{__OpaqueSecDbConnection={__CFRuntimeBase=QAQ}^{__OpaqueSecDb}BBQBiB^{__CFError}^{sqlite3}^{__CFArray}}8
bind_blob[%d]
bind_blob[%d]: blob bigger than INT_MAX
bind_text[%d]
bind_text[%d]: text bigger than INT_MAX
bind_double[%d]
bind_int[%d]
bind_int64[%d]
bind unsupported type %@
bind CFNumberGetValue failed for %@
reset
SecDbForEach step[%d]
step[%d]: %s returned SQLITE_ROW with NULL row block
invalid entry in changes array: %@
com.apple.security.cfder.error
ccder failed to encode
Number allocation failed
Number too large
Unknown number encoding
Unable to get number from data
Unknown size
%@: [%d] %s
Unsupported DER Type
invalid tag
Unsupported CFType
Null CFType
trailing garbage after plist item
tag/length decode failed
String allocation failed
Unknown string encoding
Numeric string allocation failed
Unknown numeric string encoding
String extraction failed
Unknown boolean encoding
Failed to create data
Unknown data encoding
Failed to create CoreEntitlements data
Unknown CoreEntitlements encoding
{[%@]}
v24@?0@8^B16
Unknown null encoding
Failed to create set
Unknown data encoding, expected CCDER_CONSTRUCTED_CFSET
com.apple.will.never.happen
%@/%@
Library/Keychains
SimulateCrash
BOOL soft_SimulateCrash(pid_t, mach_exception_data_type_t, NSString *__strong)
simulate_crash.m
void *CrashReporterSupportLibrary(void)
/System/Library/PrivateFrameworks/CrashReporterSupport.framework/CrashReporterSupport
/System/Library/PrivateFrameworks/CrashReporterSupport.framework/Contents/MacOS/CrashReporterSupport
WriteStackshotReport
BOOL soft_WriteStackshotReport(NSString *__strong, mach_exception_data_type_t)
com.apple.security.xpc
domain
code
userinfo
SecTTR
com.apple.security.diagnostic-queue
606179
secttr
NextTTRDate
%@-%@
UNKNOWN
DISABLED
ENABLED
FOLLOWING
(unknown: %i)
keyclass
zoneName
uuid
warnedTooManyPeers
warmedEscrowCache
isInheritedAccount
fetchedChangesOnOSSupportingCustodian
secureElementIdentity
tlkSharesForVouchedIdentity
voucherSignature
voucher
syncingPolicy
cdpState
attemptedJoin
NOTATTEMPTED
ATTEMPTED
lastHealthCheckup
trustState
UNTRUSTED
TRUSTED
altDSID
epoch
icloudAccountState
NO_ACCOUNT
ACCOUNT_AVAILABLE
ACCOUNT_AVAILABLE_UNUSED
peerID
proceed-with-ckks-keys
CKKSResultOperationError
octagon-local-reset
enableKeychainBackupDevelopment
loggedout
wait_for_ck_account_status
lose_trust
waitfortrust
initializing
initialized
zonecreationfailed
fixup_fetch_cip
fixup_fetch_tlkshares
fixup_local_reload
fixup_resave_cdse
fixup_delete_tombstones
begin_fetch
fetching
fetchcomplete
needrefetch
process_key_hierarchy
check_zone_hierarchies
provide_key_hieararchy
provide_key_hieararchy_untrusted
heal_tlk_shares
healtlksharesfailed
tlkmissing
unhealthy
resetzone
resetlocal
ready
become_ready
process_incoming_queue
class_a_incoming_items_remaining
scan_local_items
reencrypt_outgoing_items
process_outgoing_queue
process_outgoing_queue_failed
trusted_peers_changed
ck_account_logged_in
ck_account_logged_out
trusted_operation_begin
trusted_operation_end
ck_change_token_expired
ck_zone_missing
device_unlocked
fetch_requested
fetch_complete
key_process_requested
key_set
dropped_items
item_reencryption_needed
24_hr_notification
check_queues
policy_fresh
oqo_token
A subclass must override %@
%@ does not exist in database where %@
ckkssql
SELECT %@ FROM %@%@
, %@
SELECT %@ FROM %@%@%@%@%@;
 LIMIT %lu
DELETE FROM %@%@;
 ORDER BY 
 GROUP BY 
%@=(?)
%@ IN (%@)
%@%@%@
parentKeyUUID
%@%@(?)
 AND 
 WHERE 
INSERT OR REPLACE into %@ (%@) VALUES (%@);
B32@?0@"NSString"8@"NSDate"16^B24
No buckets congested
%lu congested buckets. Top offenders: 
%@ range %@ to %@
Not overloaded, %lu total buckets
Overloaded until %@, %lu total buckets
RateLimiter config: %@
buckets
overloadDuration
trimTime
U:%@
G:%@
trimSize
capacityUUID
capacityGroup
capacityAll
rateUUID
rateGroup
rateAll
nothing_to_do
trigger_cloudservices
trigger_escrow_upload
wait_for_unlock
trigger-escrow-store
escrow-request-attempt-escrow-upload
escrow-request-cache-cert
wait-for-unlock
EscrowRequestControllerQueue
v16@?0@"<OTDeviceInformationNameUpdateListener>"8
OTDeviceInformationActualAdapter
SerialNumber
SIMULATOR_MODEL_IDENTIFIER
v44@?0q8@"NSString"16@"NSNumber"24B32@"NSError"36
<CliqueStatus: %@>
ckksaccount
ckksaccountblock
ckks-sos
v24@?0@"CKAccountInfo"8@"NSError"16
ckksaccount-ck
ck-account-state-%@
<%@: %@, hsa2: %@>
available
no account
ck-account-state
ckstatus-refetch
<SOSStatus: %@ (%@)>
account state unknown
logged in
ERSPending
escorwrequest-healthSummary
complete
escrow
SecCDKeychainLookupValueTypeString
SecCDKeychainLookupValueTypeData
SecCDKeychainLookupValueTypeNumber
SecCDKeychainLookupValueTypeDate
SecCDKeychainItemRefKeyBlob
SecCDKeychainItemWrappedKey
SecCDKeychainItemCiphertext
com.apple.security.cdkeychain
failed to deserialize wrapped secret data
AccessControlEntity
Item
v24@?0@"NSManagedObjectContext"8@"NSError"16
attempt to delete item with persistant identifier that could not be found: %@
deleteItemWIthPersistentID: could not get managed object context
attempt to insert items into deallocated keychain instance
%@: itemType:(%@) owner:(%@) persistentID:(%@)
 attributes: %@
 lookup attributes: %@
failed to deserialize SecCDKeychainItemMetadata with item type (%@) persistentID: %@ owner: %@
%@ : %@ [%@]
did not find any keychain items matching query
lookupKey == %@ AND lookupValueType == %@ AND lookupValue == %@
fetchItemsWithValue: could not get managed object context
attempt to lookup items from deallocated keychain instance
failed to create refKey for unwrapping item secrets
failed to encrypt item
failed to serialize item secret data blob
failed to create refKey
failed to encrypt item secret data
failed to serialize item secrets dictionary
failed to create random key for encrypting item
q24@?0@"NSString"8@"NSString"16
%@: itemType:(%@) persistentID:(%@)
 owner: %@
 attributes: %@
 lookup attributes: %@
primaryKeys: %@
could not decrypt secrets for item
could not create SecCDKeychainItem from managed item - managed item was malformed
did not find any keychain items matching persistent ID: %@
fetchItemForPersistentID: could not get managed object context
attempt to fetch item from deallocated keychain instance
persistentID == %@
SecCDKeychain
LookupEntry
failed to unique item (%@) using primary keys: %@
lookupKey == %@ AND lookupValue == %@
insertItems: could not get managed object context
keychain item missing access group
client not in access group: %@
SecCDKeychain-PrimaryKey-%@
unknown error retrieving managed object context
failed to save or retrieve key for CD database encryption
result of keychain query for database key is wrong kind of class: %@
can't create a class A store right now because the keychain is locked
failed to save encryption key to keychain, so bailing on database creation
failed to create random key for CD database encryption
com.apple.security.keychain.ak
com.apple.security.securityd
ItemType
 name: %@
 version: %d
 primaryKeys: %@
 syncableKeys: %@
%@ | %d
<OctagonSelfPeer: %@>
v16@?0@"<CKKSPeerUpdateListener>"8
no peer ID present
encryption-key %@
signing-key %@
v16@?0@"_SFKeychainIdentityFetchResult"8
<OctagonCKKSPeerAdapter: %@ e:%d>
[OctagonCKKSPeerAdapter:%@]
v32@?0B8B12B16B20@"NSError"24
Rate-limited the OTCheckHealthOperation:%@
processOutgoingQueue
processIncomingQueue
TLKShareProcessing
scanLocalItems
fetchAllChanges
reencryptOutgoing
store
items
accessgroup
access-group-missing
count
zone
No context for (%@,%@)
octagon-reset-account-cdp-contents
octagon-user-controllable-views
paused
octagon-remove-escrow-cache
octagon-remove-escrow-caches
octagon-fetch-escrow-records
octagon-cdp
%@%@Tries
octagon-inheritance
octagon-custodian-recovery
Device is considered a limited peer, cannot remove inheritance key in Octagon
v24@?0@"OTInheritanceKey"8@"NSError"16
Device is considered a limited peer, cannot enroll recovery key in Octagon
Device is considered a limited peer, cannot remove recovery key in Octagon
v24@?0@"OTCustodianRecoveryKey"8@"NSError"16
malformed recovery key
octagon-recovery
CFU-healthSummary
Octagon-healthSummary
octagon-analytics
/System/Library/PrivateFrameworks/CloudServices.framework/CloudServices
/System/Library/PrivateFrameworks/CloudServices.framework/Contents/MacOS/CloudServices
void *CloudServicesLibrary(void)
SecureBackup
Class getSecureBackupClass(void)_block_invoke
Unable to find class %s
OTManager.m
v56@?0@"NSString"8@"NSData"16@"NSData"24@"NSData"32@"NSData"40@"NSError"48
octagon-client
com.apple.TrustedPeersHelper
ghostBustAge
metadata_rampstate_ghostBustAge
ghostBustSerial
metadata_rampstate_ghostBustSerial
ghostBustMID
metadata_rampstate_ghostBustMID
metadata_zone
otmanager
Attempt to add operation(%@) to completed group(%@)
ckksgroup
isExecuting
isFinished
<%@: %@ [%@]%@>
 dep:
<%@: %@ [%@] error:%@>
Potentially more than 20 operations
<%@: %@ %@>
<%@: %@ %@ - %@>
<%@: %@ recursion>
group-finish:%@
group-start:%@
group-queue:%@
CKKSGroupOperationDispatchQueue
group-finish
group-start
failed to encode manifest leaf node DER with error: %@
CKKSManifestLeafRecord.m
ckksmanifest
ManifestLeafRecord%@%@
UUID
ckzone
ckrecord
entryDigests
v32@?0@"NSMutableDictionary"8@"NSString"16@24
%@ %@ records: %lu
ckmanifest_leaf
pending_manifest_leaf
pcsi
pcsk
pcss
encver
gencount
wrappedkey
encitem
<%@: %@ %p>
<%@: %@>
server_
WrongEncryptionVersionException
%d is not a known encryption version
ckksitem
WrongCKRecordTypeException
CKRecordType (%@) was not %@
Received a record(%@) with a bad generation count (%ld > %@)
ckksresync
spid-
%@-fake-%@
Could not remove padding from decrypted item: malformed data
v_Data
Unrecognized encryption version: %lu
null error passed in
ckme
handle-modification
ckkszone
ckksoutgoing
waituntil
state
action
<%@(%@): %@ %@ (%@)>
count(*)
count(rowid)
v16@?0@"NSDictionary"8
outgoingqueue
Couldn't encrypt item
Couldn't create an item
no-group
accessgroup not found in object
UUID not found in object
No UUID for item
Couldn't create object plist
No key for item
can't pick key class for protection %@
can't pick a key class for an empty item
ckks-key
incomingqueue
backupWrappedMetadataKey
keyClass
com.apple.security.keychainhealth
encountered %@ errors searching for corrupted items and %d errors attempting to delete corrupted items
searchingErrorCount
failed to delete corrupted item
encountered %d errors searching for corrupted items
v24@?0^v8@"NSString"16
scanning %d %@
certificate query failed
internet password query failed
generic password query failed
ckksincoming
com.apple.self.deps.item.propagation
time
non-onboarded
incoming-queue-response
Item did not have a reasonable class: %@
ckkspointer
incoming-queue-operation
ManifestLeafRecord:-:
Manifest:-:
modifyRecordsComplete
v56@?0@"NSData"8@"NSData"16q24q32@"NSArray"40@"NSError"48
%@%lld
v36@?0@"NSString"8@"TPSyncingPolicy"16B24@"NSError"28
join-sos-after-fetch
Signed UUID doesn't match unsigned UUID for %@
No trusted peer signed %@
receiverSPKI
receiverPeerID
signature
wrappedTLK
poisoned
senderPeerID
tlkUUID
curve
zoneID
No TLK share from %@
Peer(%@) has no signing key
<CKKSTLKShareCore(%@): recv:%@ send:%@>
inflight
reencrypt
deleted
mismatched_view
classA
classC
com.apple.security.keychain
com.apple.securityd.aps
uploadver
parentkeyref
pcsservice
pcspublickey
pcspublicidentity
server_wascurrent
synckey
class
tlkshare
sender
receiver
receiverPublicEncryptionKey
currentkey
currentitem
devicestate
octagonpeerid
octagonstatus
peerid
keystate
currentTLK
currentClassA
currentClassC
lastunlock
osver
digest_value
generation_count
leaf_records
peer_manifests
current_items
signatures
signer_id
schema
manifest_leaf
readypendingunlock
waitfortlk
waitfortlkcreation
waitfortlkupload
waitforunlock
badcurrentpointers
newtlksfailed
healtlkshares
check_tlk_shares
CKKSErrorDomain
CKKSServerExtensionErrorDomain
com.apple.security.ckks.pkconflict
com.apple.security.ckks.reencrypt
kern.osrelease
kern.osversion
Version
%s (%s)
tv(sim)
value
lastscan
morecoming
lastFixup
ratelimiter
lastfetch
changetoken
ckzonesubscribed
ckzonecreated
<CKKSZoneStateEntry(%@): created:%@ subscribed:%@ moreRecords:%@>
extra
ckstate
com.apple.private.escrow-update
com.apple.security.escrow-update
some
error_value
date_value
double_value
string_value
bagIdentity
failed to retrieve current self
sos adapter not enabled
RLconfig
RLassetType
RLlastJudgment
RLoverloadedUntil
RLgroups
name
general
accessGroup
RateLimiter[%@]
config:%@
groups:%@
overloaded:%@
lastJudgment:%@
maxStateSize
maxItemAge
groups
rate
capacity
badness
property
DisableKeychainRateLimiting
RLoverLoadedUntil
zone:
ckkskey
not supported
supported
v16@?0^{__CFError=}8
v24@?0^{__CFSet=}8^{__CFError=}16
v32@?0^{__SecKey={__CFRuntimeBase=QAQ}^{__SecKeyDescriptor}^v}8^{__SecKey={__CFRuntimeBase=QAQ}^{__SecKeyDescriptor}^v}16^{__CFError=}24
Not all SOS peer keys available, but no error returned
No SOS peer info available, but no error returned
Not in SOS circle, but no error returned
<OTSOSActualAdapter e:%d>
v12@?0i8
[OTSOSActualAdapter]
SOS unsupported on this platform
[OTSOSMissingAdapter]
v40@?0@"NSString"8@"NSArray"16@"TPSyncingPolicy"24@"NSError"32
establish-with-keys
ckksheal
heal-cloudkit-modify-operation-finished-%@
Invalid TLK from CloudKit (during heal)
Key hierarchy has split: %@ and %@ are roots
determine-next-state
currentItemUUID
identifier
WrongCKRecordNameException
CKRecord name (%@) was not %@
<CKKSCurrentItemPointer(%@) %@: %@>
currentitems
CloudkitKeychainService
ckksfetch
resynchronization restarted too many times; churn in database?
resync-step%u-consider-restart
resync-step%u-scan
resync-step%u-incoming-again
resync-step%u-reload
resync-step%u-incoming
resync-step%u-outgoing
ckks-resync-local
v64@?0@"NSString"8@"NSData"16@"NSData"24@"NSData"32@"NSData"40@"TPSyncingPolicy"48@"NSError"56
SecItemAdd: %d
SecItemUpdate: %d
octagon-%@
Octagon Account State (%@,%@)
com.apple.security.octagon
couldn't deserialize account state
SecItemCopyMatching: %d
SecItemDelete: %d
wrappedRecoveryKey
wrappedKCSKSecret
wrappedBagSecret
recoveryType
currentKeyUUID
<CKKSCurrentKeyPointer(%@) %@: %@>
currentkeys
unable to make keychain backed set; key is missing
<CKKSCurrentKeySet(%@): %@:%@ %@:%@ %@:%@ new:%d>
<CKKSCurrentKeySet(%@): %@:%@ %@:%@ %@:%@ new:%d %@>
generic_event
network_event
report_frequency_base
report_frequency
triggers
server_info
cloudkit_info
device_info
metric_type
none_type
network_event_type
generic_event_type
com.apple.private.ckks
updateDeviceState-modifyRecordsComplete
Rate-limited the CKKSUpdateDeviceStateOperation
CK device ID missing
no AccountTracker object
ckksdevice
tamperCheck
wrappedKey
ciphertext
com.apple.securityd.%@
<CKKSNearFutureScheduler(%@): no pending attempts
<CKKSNearFutureScheduler(%@): next at %@
yyyy-MM-dd HH:mm:ss
nfs-%@
near-future-scheduler-%@
OTBottledPeer
OTFailureReason
com.apple.security.trustedpeers.container
wascurrent
<%@(%@): %@>
ckmirror
state machine tried to handle unknown flag %@
OctagonFlags.m
<OctagonFlags: %@>
setting-recovery-tlks
Failed to parse UUID from TPH
v32@?0@"NSArray"8@"TrustedPeersHelperCustodianRecoveryKey"16@"NSError"24
<CKAccountInfo: %@>
<CKKSSelves: %@ %@>
(no past selves)
viewList
signingKey
encryptionKey
<CKKSActualPeer(%@): pubEnc:%@ pubSign:%@ views:%d>
spid
<CKKSSOSPeer(%@): pubEnc:%@ pubSign:%@ views:%d>
<CKKSSOSSelfPeer(%@): pubEnc:%@ pubSign:%@ views:%d>
metric
timestamp_end
timestamp_start
type
cloudkit
cloudkit_client
server
backupWrappedKey
aksWrappedKey
aksRefKey
publicKey
reduce-rate-limiting
run-incoming
v16@?0@"CKKSGroupOperation"8
resync-step%u-fetch
ckks-resync
com.apple.securityd.ckks
key-set-queue
key-set-provided
%@ must override %@
change array count: %ld
SOSChangeTracker
<ChangeTracker %@ children %ld/%ld>
NonConcrete
ChangeTracker is not concrete
tracker
cdp-finish
unknown-local-passcode
ckksscan
com.apple.securityd.ckks.scan
scan-local-items
v16@?0^{SecDbItem={__CFRuntimeBase=QAQ}^{SecDbClass}iii^{__CFDictionary}^{__CFData}^v^{__CFArray}}8
com.apple.safari.credit-cards
^com\.apple\.safari\.credit-cards$
com.apple.cfnetwork
^com\.apple\.cfnetwork$
^%@$
local-reset
ckks-local-reset
v32@?0@"CKRecordID"8@"CKKSCloudKitDeletion"16^B24
v32@?0@"CKRecordID"8@"CKRecord"16^B24
submit-metric
CKKS Push-webtunnel
total_deletions
total_modifications
fetch_error_code
fetch_error_domain
fetch_error
push_event_name
CKKS Push
push_received_date
push_token_uuid
APNSPushMetrics
ckksfetcher
v44@?0@"CKRecordZoneID"8@"CKServerChangeToken"16@"NSData"24B32@"NSError"36
v32@?0@"CKRecordZoneID"8@"CKServerChangeToken"16@"NSData"24
v24@?0@"CKRecordID"8@"NSString"16
No clients want a fetch right now
record-zone-changes-completed
<OSTPath(%@)>
became
intended
state became %@, was expecting %@
Operation(%@) timed out waiting to start for [%@]
<OctagonStateTransitionWatcher(%@): remaining: %@, result: %@>
watcher-timeout-%@
watcher-%@
Operation(%@) timed out waiting to start for any state in [%@]
wait-for-ckks-reset
continue-ckks-resets
v24@?0@"TrustedPeersHelperPeerState"8@"NSError"16
com.apple.security.ckks
ckks-logger
v40@?0@"NSData"8@"NSData"16@"NSArray"24@"NSError"32
v32@?0@"NSString"8@"TPSyncingPolicy"16@"NSError"24
com.apple.security.keychain.backups
baguuid
platform doesn't do backups
otcuttlefish
v24@?0@"TrustedPeersHelperEgoPeerStatus"8@"NSError"16
octagon-metrics
sos-upgrade-to-ready
Not in circle
octagon-health
octagon-trust-health-check
wait-for-sync-reply
wait-for-sync
No account settings have been set
walrus
octagon-se
This platform does not support setting the user-controllable view syncing status
v16@?0@"NSError"8
Sync policy is missing even after refetching
octagon-refetch-ckks-policy
validate
contextID
containerName
v40@?0@"NSData"8@"NSString"16@"NSData"24@"NSError"32
removeInheritanceKey-callback
createInheritanceKey-callback
removeCustodianRecoveryKey-callback
createCustodianRecoveryKey-callback
setRecoveryKey-callback
device_name
stableInfo
included
dynamicInfo
peers
self
contextDump
contextDumpError
pushEnvironments
lastOctagonPush
CoreFollowUp
escrowRequest
sosSelvesStatus
sosTrustedPeersStatus
memoizedlastHealthCheck
Never checked
octagonLaunchSeqence
memoizedCDPStatus
memoizedAccountState
memoizedTrustState
stateFlags
statePendingFlags
stateUnpaused
pastSelves
currentSelf
signingSPKIHash
signingSPKI
rpc-join
rpc-join-with-inheritance-key
rpc-join-with-custodian-recovery-key
rpc-join-with-recovery-key
rpc-join-with-bottle
rpcPrepare-callback
prepareForApplicant
User is not signed into iCloud.
Cannot determine iCloud Account state; try again later
octagon-ck
present
missing
sos-consistency-ratelimiter
octagon-devicename
octagonpush
aps-push-ratelimiter
octagon-push-ratelimited
octagon-ready
octagon-inherited
octagon-become-untrusted
v36@?0q8B16B20B24@"NSError"28
v48@?0q8@"NSString"16@"NSDictionary"24B32B36@"NSError"40
iPad
iPhone
octagon-icloud-account-available
octagon-health-post-repair-cfu
rpcHealthCheck
octagon-health-tph-trust-check
octagon-health-securityd-trust-check
octagon-fixup_check
octagon-initializing
octagon-fixups
octagon-set-secureelement
ckks-update-trust
ckks-policy-update
attempt-user-view-upgrade
attempt-sos-update-preapproval
ckks-assist
octagon-update
initializing-after-unlock
initializing-after-initial-unlock
no-preload-octagon-key
no-consistency-checks
untrusted-update
attempt-sos-upgrade
account-probably-present
begin-reset
fixups-complete
refetch-custodian
cdp_enabled_push_received
cdp_enabled
uninitialized
ck-available
hsa2-check
octagon-pairing
remove-friends
octagon-leave-clique
leave-clique
rpc-reset-and-establish
establish
resetting-state-machine
octagon-cdp-status
account-not-available
octagon-account-gone
check-trust-state
cloudkit-account-gone
<OTCuttlefishContext: %@, %@>
Untrusted
Trusted
iCloudAccount
com.apple.security.otcuttlefishcontext
octagon-retry-fixup
octagon-upgrade-ucv
octagon-policy-check
octagon-tlk-request
com.apple.octagon.launch
<OctagonPendingFlag: %@: %@ %@>
unlock
Unknown conditions: 0x%x
<OctagonPendingFlag: %@: %@>
octagon-inheritor
v80@?0@"NSString"8@"NSData"16@"NSData"24@"NSData"32@"NSData"40@"TPSyncingPolicy"48@"NSString"56@"NSArray"64@"NSError"72
engine-state-v2
engine-peer-states
engine-manifest-cache
engine-coders
SOSEngine queue
SOSEngine
<Engine %@ peers %@ MC[%d] PS[%d]>
object %@ is not an array
No coder for peer: %@
-tomb
trailing %td bytes at end of state
Engine has no peer for %@
peer: %@ not found
peer: %@ is untrusted inflating not allowed
 untrusted
B72@?0^{__OpaqueSOSChangeTracker=}8^{__OpaqueSOSEngine={__CFRuntimeBase=QAQ}^{SOSDataSource}^{__CFString}^{__OpaqueSOSManifest}^{__CFData}^{__CFDictionary}^{__CFDictionary}^{__CFDictionary}^{__CFDictionary}^{__CFArray}^{__CFDate}^{__CFDictionary}BB@@@@?B}16^{__OpaqueSOSTransaction=}24Q32Q40^{__OpaqueSOSManifest=}48^{__OpaqueSOSManifest=}56^^{__CFError}64
 trusted
B64@?0^{__OpaqueSOSChangeTracker=}8^{__OpaqueSOSEngine={__CFRuntimeBase=QAQ}^{SOSDataSource}^{__CFString}^{__OpaqueSOSManifest}^{__CFData}^{__CFDictionary}^{__CFDictionary}^{__CFDictionary}^{__CFDictionary}^{__CFArray}^{__CFDate}^{__CFDictionary}BB@@@@?B}16^{__OpaqueSOSTransaction=}24Q32Q40^{__CFArray=}48^^{__CFError}56
Execution has encountered an unexpected state
SecureBackupService
SecureBackupPublicKeybag
com.apple.sbd
 %@ (%@)
%02X
traceDate
peerIDs
peerState
manifestCache
engine-state
no change tracker for view set %@
v48@?0^{SOSDataSource=^{__OpaqueSOSEngine}^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?}8^{__OpaqueSOSTransaction=}16Q24Q32^{__CFArray=}40
did-commit
did-rollback
will-commit
unknown
%@-tomb
AirPort
apple
com.apple.security.sos
PCS-
view
com.apple.security.view-change.%@
ViewNotificationQueue
com.apple.security.secureobjectsync.itemtime.new
com.apple.security.secureobjectsync.itemtime.known
engine-sync
writing changes to backup
 notifying sbd
dropping from manifest: not found in datasource
dropping from manifest
in SOSDataSourceForEachObject
in SOSPeerWriteAdd
in SOSPeerWriteDelete
object %@ is not a string
v16@?0^{__OpaqueSOSTransaction=}8
v16@?0^{__OpaqueSOSPeer=}8
Coders not loaded.
engineLogState
<%@(%@): %@ (%@,%@:%d)>
Potential TLK %@ doesn't wrap itself: %@
No current trust states; can't unwrap TLK
Circular reference in key hierarchy
Wrong key size
Data failed to parse as a CKKSSerializedKey
synckeys
%@-piggy
%@-nonsync
periodic-device-state-update
com.apple.security.CKKSHealthSummary
No syncing view for %@, %@
No CKKS for %@, %@
v40@?0@"CKKSExternalKey"8@"NSArray"16@"NSArray"24@"NSError"32
No metric name
ckks-rpc
rpc-push
rpc-fetch-and-process-result
CKKS disabled
rpc-resync-local
rpc-resync-cloudkit
ckksbackup
ckkscallback
ckkstests
manager
CKKS global zone state
@"NSDictionary"8@?0
metrics
%@-daysSinceLastKeystateReady
%@-daysSinceClassCSync
%@-daysSinceClassASync
CKKS-%@-healthSummary
CKKS-healthSummary
newtlks
No iCloud account available; item is not expected to sync
v28@?0@"TPSyncingPolicy"8i16@"NSError"20
KeyDiversify
SecDbKeychainItemV7: failed to decrypt item, Item can't be decrypted due to failed decode der, so drop the item.
SecDbKeychainItemV7: failed to decode acl dict
TamperCheck
error decrypting item secret data contents
tamper check failed for metadata decryption
failed to decrypt item metadata contents
failed to unwrap item metadata key
Invalid parameter not satisfying: %@
SecDbKeychainItemV7.m
failed to deserialize keychain item blob
network-available-dependency
network
<CKKSReachabilityTracker: %@>
offline
online
reachabiltity-tracker
v16@?0@"NSObject<OS_nw_path>"8
unavailable
ckksnetwork
Can't find attribute of kind %d in class %@
attr %@ has no default value
error == NULL
attribute %@ has NULL value
secd-hash-name
attribute %@: value: %@ failed to convert
state= encrypted but edata is NULL
SecDbItem
%s,%@,%02X%02X%02X%02X,%s,%@,%@,%lld%@,%s,%s%02X%02X%02X%02X
tomb
...|%08llx
%04lx:
v_pk
, |otherAttr
secitem
NULL value in dictionary
 IN (
 NOT IN (
persistent ref %@ is not a data
rowid %@ is not a 64 bit number
failed to get attribute %@ data
 FROM 
SELECT 
no rowid for %@
 SET 
UPDATE 
Corrupted item (attr NULL) found in keychain
Corrupted item found in keychain
)VALUES(?
INSERT INTO 
insert
DELETE FROM 
%@-callback
state-rpc
intial-transition-%@
test
pending-flag
Must have a network reachability tracker to use network reachability pending flags
Must have a lock state tracker to wait for unlock
OctagonStateMachine.m
octagon-state-follow-up
(no error)
halt
state machine tried to enter unknown state %@
<OctagonStateMachine(%@,%@,%@)>
 (pending: %@)
initialize
%@-pending-flag
v24@?0@"NSString<OctagonStateString>"8^B16
ks_encrypt_data: CCCryptorGCM expected: 16 got: %ld byte tag
ks_encrypt_data: CCCryptorGCM failed: %d
accessible attribute %@ unknown
accessible attribute %@ not a string
ks_encrypt_data: SecRandomCopyBytes failed
ks_encrypt_data: invalid plain text
SecAccessControl
non-device keybag
trailing garbage at end of decrypted item
r*48@?0^{__CFAllocator=}8r^^v16^^{__CFError}24r*32r*40
Null DER
plist is a %@, expecting a dictionary
ks_decrypt_data: CCCrypt failed: %d
ks_decrypt_data: CCCryptorGCM computed tag not same as tag in blob
ks_decrypt_data: CCCryptorGCM expected: 16 got: %ld byte tag
ks_decrypt_data: CCCryptorGCM failed: %d
ks_decrypt_data: failed to allocate data for plain text
ks_decrypt_data: invalid length on CBC data
ks_decrypt_data: Check for underflow (CBC check)
ks_decrypt_data: Check for underflow (wrapped_key/taglen)
ks_decrypt_data: invalid version %d
ks_decrypt_data: Check for underflow (wrapped_key_size)
ks_decrypt_data: SecAccessControlSetProtection failed
ks_decrypt_data: SecAccessControlCreate failed
ks_decrypt_data: invalid keyclass detected
ks_decrypt_data: Check for underflow (keyclass)
ks_decrypt_data: invalid ACL
ks_decrypt_data: Check for underflow (prot)
ks_decrypt_data: Check for underflow (prot_length)
ks_decrypt_data: Check for underflow (length)
ks_decrypt_data: invalid blob
item's access group '%@' not in %@
version is unexpected: %d
ACL protection doesn't match the one in blob (%@ : %@)
Corrupted item on decrypt accc != pdmn
PrintKitAccessGroup
PPP Password
IPSec Shared Secret
com.apple.youtube.credentials
YouTube
com.apple.airplay.password
No v_Data in backup dictionary %@
v_PersistentRef has unexpected class %@
v_PersistentRef %@ failed to decode
No v_PersistentRef in backup dictionary %@
backupUUID
<CKKSListenerCollection(%@): %@>
octagon-sos
sos-upgrade-with-keys
after-update
q_pairs overflow
kSecAccessControl missing protection
conflicting kSecAccess and kSecAccessControl attributes
com.apple.apsd
clip
Out of memory
Past query key limit
Missing class
set_data: value %@ is not type data
update_applier: key %@ has NULL value
update_applier: unknown key type %@
applier: key %@ neither string nor number
applier: key %@ invalid length
applier: key %@ invalid
add_value: unknown key %@
add_value: value %@ is not a valid persitent ref
set_uuid_persistent_ref: value %@ is not type data
add_use: unknown key %@
add_use: value %@ for key %@ is not CFString
add_use: value %@ for key %@ is not CFData
add_use: value %@ for key %@ is neither CFBoolean nor CFNumber
u_ItemList
add_return: unknown key %@
add_return: value %@ is not CFBoolean
unsupported value for kSecMatchTrustedOnly attribute
unsupported value for kSecMatchValidOnDate attribute
unsupported array of policies
unsupported kSecMatchPolicy object in query
unsupported value for kSecMatchPolicy attribute
unsupported match limit %@
failed to convert match limit %@ to CFIndex
add_class: key %@ is not %@
can find class named: %@
applier: key %@ has NULL value
applier: NULL key
query missing class name
can't find class named: %@
Operation (%@) cancelled
Success-dependent operation failed
Excess recursion
CKKSResultOperationDescriptionError
B32@?0@8Q16^B24
resultoperation
<%@: %@%@>
<%@: %@ error:%@>
finished %@
cancelled
executing
pending
result-operation-timeout
signerID
CKKSManifestErrorDomain
could not validate current item because the UUID does not match the manifest
could not validate item because the digest is invalid
could not find manifest public key for peer %@
CKKSManifestEC384SignatureKey
v32@?0@"NSString"8@16^B24
CKKSManifestGenerationCountKey
CKKSManifestCurrentItemsKey
CKKSManifestPeerManifestsKey
CKKSManifestDigestKey
Manifest%@%@%@%@%@%lu
futureData
currentItems
peerManifests
leafIDs
v32@?0@"NSString"8@"CKKSManifestInjectionPointHelper"16^B24
v24@?0^{__SecKey=}8^{__CFError=}16
%@ peerID: (%@)
v32@?0@"NSString"8@"NSData"16^B24
pending_manifest
ckmanifest
v32@?0@"CKKSManifest"8Q16^B24
q24@?0@"CKKSManifest"8@"CKKSManifest"16
v24@?0@"NSString"8@"NSError"16
v24@?0@"_SFECKeyPair"8@"NSError"16
failed to generate ego manifest
failed to generate ego manifest because egoPeerID is nil
EnforceManifests
SyncManifests
plist
CKKSLogging
/System/Library/Frameworks/Security.framework
CKKSManifestSchemaVersionKey
No trusted TLKShares for %@
No trusted peers
Key unwrap failed
<CKKSPeerProviderState(%@): %@%@ %@%@>
No current trusted peers available
No current self peer available
No datasource
v24@?0^{SOSDataSource=^{__OpaqueSOSEngine}^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?}8^{__OpaqueSOSEngine={__CFRuntimeBase=QAQ}^{SOSDataSource}^{__CFString}^{__OpaqueSOSManifest}^{__CFData}^{__CFDictionary}^{__CFDictionary}^{__CFDictionary}^{__CFDictionary}^{__CFArray}^{__CFDate}^{__CFDictionary}BB^{dispatch_queue_s}^{dispatch_source_s}^{dispatch_queue_s}@?B}16
v24@?0^{__OpaqueSOSTransaction=}8^{__OpaqueSOSPeer=}16
bad class %@ in backup
object %@ is not a dictionary
v16@?0^{__OpaqueSOSObject=}8
True
False
fetching ramp state
cloud kit timed out
timed out waiting for response from CloudKit
v36@?0B8B12B16q20@"NSError"28
no network
not signed in
device is locked
 Couldn't find CKRecord for ramp. Defaulting to not ramped in
Received callback for released object
RetryAfter
FeatureVisible
FeaturePromoted
FeatureAllowed
v24@?0^{SecDbItem={__CFRuntimeBase=QAQ}^{SecDbClass}iii^{__CFDictionary}^{__CFData}^v^{__CFArray}}8^^{SecDbItem}16
hash
query missing %@ attribute
no such class %@; update kc_class_with_name 
no class or data in object
SOSDataSource-%@
v24@?0^{sqlite3_stmt=}8^B16
v40@?0^{__OpaqueSecDbConnection=}8Q16Q24^{__CFArray=}32
dsf queue
dataSourceFactory queue
authkit
v16@?0@"<OTAuthKitAdapterNotifier>"8
otauthkitadapter-notifiers
can't get authController
missingAltDSID
AuthKit
Can't get primary AltDSID
can't get AKDeviceListRequestContextClass
AKAnisette not available
Anisette data does not have machineID
missingMID
security-authkit
false
true
No altdsid on primary account
No primary account
ACAccount not available
Missing entitlement '%@'
com.apple.private.octagon
attribute %@ not found in class %@
sqlite3_exec: %s
INSERT INTO tversion(version,minor) VALUES(%d, %d);
CREATE INDEX %@%@ ON %@(%@);
CREATE INDEX %@%@0 ON %@(%@) WHERE %@=0;
UNIQUE(
 DEFAULT ''
 DEFAULT 0
 NOT NULL
BLOB
TEXT
INTEGER
REAL
INTEGER PRIMARY KEY AUTOINCREMENT
CREATE TABLE %@(
pref
authentication failed
duplicate item %@
no error
 LIMIT %ld
persistref = ?
ROWID
SELECT rowid, data, agrp, persistref FROM 
SELECT rowid, data, agrp FROM 
clip = 0
agrp
certpersistref = ?
musr = ?
%@=%lld
crowid
 IN (?
cert.agrp
SELECT crowid, certdata, certpersistref, rowid, data, persistref FROM (SELECT cert.rowid AS crowid, cert.labl AS labl, cert.issr AS issr, cert.slnr AS slnr, cert.skid AS skid, cert.tkid AS tkid, keys.*,cert.data AS certdata, cert.persistref AS certpersistref FROM keys, cert WHERE keys.priv == 1 AND cert.pkhh == keys.klbl
SELECT crowid, certdata, rowid, data FROM (SELECT cert.rowid AS crowid, cert.labl AS labl, cert.issr AS issr, cert.slnr AS slnr, cert.skid AS skid, cert.tkid AS tkid, keys.*,cert.data AS certdata FROM keys, cert WHERE keys.priv == 1 AND cert.pkhh == keys.klbl
value ref not supported by queries
ItemNotFound
no matching items found
certtkid
certdata
ratelimiterdisabledlogevent
attributes to query illegal; both token persistent ref and other attributes can't be searched at the same time
attributes to query illegal; both row_id and other attributes can't be searched at the same time
attributes to query illegal; both persistent ref and other attributes can't be searched at the same time
No items updated
attributes to update illegal; both token persistent ref and other attributes can't be updated at the same time
attributes to update illegal; both row_id and other attributes can't be updated at the same time
value ref not supported in attributes to update
match not supported in attributes to update
Delete failed to delete anything
com.apple.rapport
iMessage Encryption Key
iMessage Signing Key
ichat
com.apple.ind.registration
com.apple.ind
registrationV1
com.apple.facetime
com.apple.gs.
com.apple.account.AppleAccount.token
com.apple.ids
BackupIDSAccountToken
com.apple.account.IdentityServices.token
com.apple.account.IdentityServices.rpassword
com.apple.account.IdentityServices.password
com.apple.account.idms.heartbeat-token
com.apple.account.idms.token
com.apple.account.AppleAccount.rpassword
com.apple.account.AppleAccount.password
com.apple.appleaccount.fmf.token
com.apple.appleaccount.cloudkit.token
com.apple.appleaccount.fmip.siritoken
com.apple.appleaccount.fmf.apptoken
appleaccount
push.apple.com
push.apple.com,PerAppToken.v0
com.apple.account.idms.continuation-key
com.apple.account.CloudKit.token
Public
Private
com.apple.managedconfiguration
lockdown-identities
DELETE FROM keys WHERE musr = ?
DELETE FROM cert WHERE musr = ?
DELETE FROM inet WHERE musr = ?
%@ AND pdmn NOT IN ('aku','akpu','cku','dku')
DELETE FROM genp WHERE musr = ?
DELETE FROM %@ WHERE agrp = ? AND clip = 1
non-
SecCritical
invalid-akpu+sysbound
keybag-uuid
Can't create keychain dictionary
restore
import
value %@ is not a dictionary
attempt to import an identity
class name %@ is not a string
DELETE FROM keys WHERE sync = 0 AND NOT agrp IN ('com.apple.security.sos', 'com.apple.security.sos-usercredential', 'com.apple.security.ckks', 'com.apple.security.egoIdentities', 'com.apple.security.octagon');
DELETE FROM cert WHERE sync = 0 AND NOT agrp IN ('com.apple.security.sos', 'com.apple.security.sos-usercredential', 'com.apple.security.ckks', 'com.apple.security.egoIdentities', 'com.apple.security.octagon');
DELETE FROM inet WHERE sync = 0 AND NOT agrp IN ('com.apple.security.sos', 'com.apple.security.sos-usercredential', 'com.apple.security.ckks', 'com.apple.security.egoIdentities', 'com.apple.security.octagon');
DELETE FROM genp WHERE sync = 0 AND NOT agrp IN ('com.apple.security.sos', 'com.apple.security.sos-usercredential', 'com.apple.security.ckks', 'com.apple.security.egoIdentities', 'com.apple.security.octagon');
DELETE from keys;
DELETE from cert;
DELETE from inet;
DELETE from genp;
Keybag UUID (%@) mismatch with backup (%@)
Missing or invalid %@ in backup dictionary
check_generation: Check for underflow
No key roll in progress.
rowid
cdat
mdat
labl
pdmn
sha1
accc
vwht
tkid
u_Tomb
crtr
alis
desc
icmt
invi
nega
cusi
prot
scrp
acct
svce
gena
sdmn
srvr
ptcl
atyp
port
path
ctyp
cenc
subj
issr
slnr
skid
pkhh
kcls
perm
priv
modi
klbl
atag
bsiz
esiz
sdat
edat
sens
asen
extr
next
encr
decr
drve
sign
vrfy
snrc
vyrc
wrap
unwp
minor
persistref
sysb
primaryKey
publickeyHash
publickey
backupData
key_archive_hash
key_archive
archived_key
keyarchive_name
archive_escrowid
circlestatus
lastfixup
senderpeerid
recvpeerid
recvpubenckey
osversion
actualKeyclass
binn
bini
bin0
bin1
bin2
bin3
backupbag
defaultvalue
signingkey
recoverytype
recoveryset
metadatakeydata
backupbags
backupkeyclasssigningkeys
backuprecoverysets
metadatakeys
cert
keys
ckdevicestate
tversion
item_backup
backup_keybag
backup_keyarchive
archived_key_backup
currentkeyarchives
idnt
tversion91
genp91
inet91
cert91
keys91
genp9
inet9
cert9
keys9
tversion5
genp8
inet8
cert8
keys8
genp7
inet7
cert7
keys7
keys5
cert5
inet5
genp5
keys6
cert6
inet6
genp6
SecItemSchema
defaultContext
com.apple.security.octagon.trust-status-change
CuttlefishError
retryafter
SecErrorNestedErrorCapping
SecKeychainStaticPersistentRefs
SecKeychainChanged
item
upgr
SELECT minor FROM tversion WHERE version = ?
SELECT version FROM tversion
Failed to read sqlite_master table: %@
SELECT name FROM sqlite_master WHERE type='table' AND name='tversion'
B16@?0r^{SecDbAttr=^{__CFString}iQ^?^?}8
B20@?0^{sqlite3_stmt=}8i16
SELECT * FROM %@ WHERE persistref IS ''
securityd
keychain-recovery-2.db
keychain-2-debug.db
B44@?0^{__OpaqueSecDb=}8^{__OpaqueSecDbConnection=}16B24^B28^^{__CFError}36
from v0 
CREATE INDEX IF NOT EXISTS %@%@ ON %@(%@);
CREATE INDEX IF NOT EXISTS agrp_musr_tomb_atag ON keys(agrp, musr, tomb, atag);
CREATE INDEX IF NOT EXISTS agrp_musr_tomb_subj ON cert(agrp, musr, tomb, subj);
CREATE INDEX IF NOT EXISTS agrp_musr_tomb_srvr ON inet(agrp, musr, tomb, srvr);
CREATE INDEX IF NOT EXISTS agrp_musr_tomb_svce ON genp(agrp, musr, tomb, svce);
DROP INDEX IF EXISTS archived_key_backupmusr;
DROP INDEX IF EXISTS backup_keyarchivemusr;
DROP INDEX IF EXISTS backup_keybagmusr;
DROP INDEX IF EXISTS item_backupmusr;
DROP INDEX IF EXISTS keysmusr;
DROP INDEX IF EXISTS certmusr;
DROP INDEX IF EXISTS inetmusr;
DROP INDEX IF EXISTS genpmusr;
DROP INDEX IF EXISTS keyssync0;
DROP INDEX IF EXISTS certsync0;
DROP INDEX IF EXISTS inetsync0;
DROP INDEX IF EXISTS genpsync0;
DROP INDEX IF EXISTS keysagrp; DROP INDEX IF EXISTS keyssync;
DROP INDEX IF EXISTS certagrp; DROP INDEX IF EXISTS certsync;
DROP INDEX IF EXISTS inetagrp; DROP INDEX IF EXISTS inetsync;
DROP INDEX IF EXISTS genpagrp; DROP INDEX IF EXISTS genpsync;
UPDATE tversion SET version='%d', minor='%d'
B24@?0^{__CFString=}8^B16
NOT %@ IN (?,?)
DROP TABLE %@_old;
INSERT OR REPLACE INTO %@ (%@) SELECT %@ FROM %@;
%@_old
DROP INDEX IF EXISTS %@%@0;
DROP INDEX IF EXISTS %@%@;
DROP TABLE IF EXISTS %@;
ALTER TABLE %@ RENAME TO %@_old;
no schema for version: 0x%x
Half migrated but obsolete DB found: found 0x%x(0x%x) but 0x%x is needed
sec_kc_dbhandle
sec_async_db
failed to get a db handle
v16@?0^{__OpaqueSecDbConnection=}8
FilterWithDate
DELETE FROM %@ WHERE rowid=%lli
missing pointer
unsupported kSecMatchPolicy attribute
unsupported match attribute
use item list unsupported
App clips are not permitted to use access groups other than application identifier
Client explicitly specifies access group %@ but is only entitled for %@
B16@?0^{sqlite3_stmt=}8
B12@?0i8
SELECT agrp FROM %@ WHERE rowid == %u
SELECT agrp FROM %@ WHERE persistref == %@
application-identifier nor keychain-access-groups
Client has neither %@ entitlements
Non-API attributes present in query
B8@?0
q_row_id
App clips are not permitted to add synchronizable items to the keychain
Non-API attributes present
return persistent ref not supported by update
return ref not supported by update
return attributes not supported by update
return data not supported by update
use item list not supported
App clips are not permitted to make items synchronizable
token persistent ref and other attributes are mutually exclusive
rowid and other attributes are mutually exclusive
value ref not supported by delete
match not supported by delete
match limit not supported by delete
App Clips may not call this API
VACUUM;
com.apple.bluetooth
DELETE FROM keys WHERE sync=1;
DELETE FROM cert WHERE sync=1;
DELETE FROM inet WHERE sync=1;
DELETE FROM genp WHERE sync=1;
illegal access group: %@
access not a string: %@
accessGroups e empty
accessGroups not CFArray, got %@
SecServerKeychainCreateBackup
fail
device
provided
, EMCS mode
keychainbackup
SecServerKeychainRestore
import: keychain is not a dictionary
backup or keybag missing
v32@?0^{__CFData=}8^{__OpaqueSOSObject=}16^B24
password %@ not a data
backup %@ not a dictionary
keybag %@ not a data
v24@?0^{__OpaqueSOSTransaction=}8^B16
titc
password not a data
BluetoothLESync
com.apple.nanoregistry.migration2
com.apple.nanoregistry.migration
com.apple.ProtectedCloudStorage
InitialSyncItems
ImportInitialSyncItems
upload-tlks-with-keys
refKeyBlob
1.2.11
Content-Encoding
gzip
Content-Type
application/protobuf
POST
com.apple.security.push.channel.dropped
error_domain
error_code
counter
com.apple.security.c2metric.upload
com.apple.private.alloy.keychain.metrics
<%@ (%p): %@%@>
finished
%@(%@)
inCircle
TLKs
inSyncA
inSyncC
IQNOE
OQNOE
inSync
validCredentials
lastUnlock
lastKSR
lastInCircle
numItems
numTLKShares
numSyncKeys
OASMState
OAiC
OACDPStatus
OATrust
OAAttemptedJoin
OAUserViewsSyncing
OAHealthCheck
OASOSStatus
OALastPPJ
OALastKSR
OALastCFU
OAPrerecordPending
OACDPStateRun
OABottledUniqueTLKsRecoveredCount
OABottledTotalTLKSharesCount
OABottledTotalTLKSharesRecoveredCount
OABottledUniqueTLKsWithSharesCount
OABottledTLKUniqueViewCount
OAMIDPresent
OAMIDOnList
OAPeersWithMID
OAMIDMatchesCurrentMID
OAnPeers
OAnViablePeers
lastCKKSPush
OADCKVSProvisioned
OADCKVSEnabled
OADCKCSProvisioned
OADCKCSEnabled
OADCCKProvisioned
OADCCKEnabled
OASecureBackupTermsAccepted
CKKSEventProcessIncomingQueueClassA
CKKSEventProcessIncomingQueueClassC
CKKSEventProcessOutgoingQueue
CKKSEventProcessHealKeyHierarchy
CKKSEventProcessReencryption
OctagonEventSignIn
OctagonEventRamp
OctagonEventCheckTrustState
OctagonEventBottledPeerRestore
OctagonEventRecoveryKey
OctagonEventCustodianRecoveryKey
OctagonEventInheritanceKey
OctagonEventFetchAllBottles
OctagonEventFetchEscrowContents
OctagonEventResetAndEstablish
OctagonEventEstablish
OctagonEventLeaveClique
OctagonEventRemoveFriendsInClique
OctagonEventUpgradeFetchDeviceIDs
OctagonEventUpgradeSetAllowList
OctagonEventUpgradeSilentEscrow
OctagonEventUpgradePreapprovedJoin
OctagonEventUpgradePreflightPreapprovedJoin
OctagonEventUpgradePrepare
OctagonEventJoinWithVoucher
OctagonEventPreflightVouchWithBottle
OctagonEventVoucherWithBottle
OctagonEventPreflightVouchWithRecoveryKey
OctagonEventVoucherWithRecoveryKey
OctagonEventPreflightVouchWithCustodianRecoveryKey
OctagonEventVoucherWithCustodianRecoveryKey
OctagonEventVoucherWithInheritanceKey
OctagonEventSetRecoveryKey
OctagonEventSetRecoveryKeyValidationFailed
OctagonEventJoinRecoveryKeyValidationFailed
OctagonEventJoinRecoveryKeyCircleReset
OctagonEventJoinRecoveryKeyCircleResetFailed
OctagonEventJoinRecoveryKeyEnrollFailed
OctagonEventJoinRecoveryKeyFailed
OctagonEventJoinRecoveryKey
OctagonEventReset
OctagonEventPrepareIdentity
OctagonEventEstablishIdentity
OctagonEventFetchViews
OctagonEventStateTransition
OctagonEventCheckTrustForCFU
CKKSEventMissingLocalItemsFound
CKKSEventReachabilityTimerExpired
OctagonEventTPHHealthCheckStatus
OctagonEventAuthKitDeviceList
CKKSActivityOTFetchRampState
OctagonActivityAccountAvailable
OctagonActivityAccountNotAvailable
OctagonActivityResetAndEstablish
OctagonActivityEstablish
OctagonSOSAdapterUpdateKeys
OctagonActivityFetchAllViableBottles
OctagonActivityFetchEscrowContents
OctagonActivityBottledPeerRestore
OctagonActivitySetRecoveryKey
OctagonActivityCreateCustodianRecoveryKey
OctagonActivityJoinWithRecoveryKey
OctagonActivityJoinWithCustodianRecoveryKey
OctagonActivityRemoveCustodianRecoveryKey
OctagonActivityCreateInheritanceKey
OctagonActivityJoinWithInheritanceKey
OctagonActivityRemoveInheritanceKey
OctagonActivityLeaveClique
OctagonActivityRemoveFriendsInClique
last_success_%@-%@
errorCode
errorDomain
recoverableError
errorChain
child
oneCloudKitPartialFailure
ckks_analytics
ckks_analytics_v2.db-shm
ckks_analytics_v2.db-wal
ckks_analytics_v2.db
underlying_error
error_description
escrow-prerecord
Escrow Prerecord: %@
ckid-%@
<CKKSDeviceStateEntry(%@,%@,%@,%@,%@,%@): %@ %@ %@ %@ %@ %@ upd:%@>
CliqueMissing
No CK device ID: %@
No active HSA2 iCloud account: %@
ckid-
operation_group_index
operation_triggered
operation_type
operation_id
v32@?0@"NSData"8@"NSData"16@"NSError"24
vouch-with-keys
v24@?0@"NSDictionary"8@"NSError"16
fetch-records-operation-complete
ckksfixup
<CKKSFixup:RefetchAllCurrentItemPointers (%@)>
v24@?0@"CKQueryCursor"8@"NSError"16
v16@?0@"CKRecord"8
<CKKSFixup:FetchAllTLKShares (%@)>
local-reload-cleanup
<CKKSFixup:LocalReload (%d)(%@)>
<CKKSFixup:ResaveCDSE (%@)>
NoAccount
WaitForHSA2
WaitForCDP
BecomeUntrusted
Ready
BecomeReady
Inherited
BecomeInherited
EnsureConsistency
EnsureOctagonKeysAreConsistent
EnsureUpdatePreapprovals
Initializing
WaitingForCloudKitAccount
CloudKitNewlyAvailable
RefetchCKKSPolicy
DetermineCDPState
CheckForAccountFixups
CheckTrustState
PerformAccountFixups
FixupRefetchCuttlefishForCustodian
FixupRefetchCuttlefishForCustodianFailed
EnableUserControllableViews
DisableUserControllableViews
SetUserControllableViewsToPeerConsensus
UpdateSOSPreapprovals
InitiatorSetCDPBit
InitiatorUpdateDeviceList
InitiatorAwaitingVoucher
InitiatorJoin
InitiatorJoinCKKSReset
InitiatorJoinAfterCKKSReset
BottleJoinCreateIdentity
BottleJoinVouchWithBottle
CreateIdentityForRecoveryKey
CreateIdentityForCustodianRecoveryKey
BottlePreloadOctagonKeysInSOS
VouchWithRecoveryKey
VouchWithCustodianRecoveryKey
JoinSOSAfterCKKSFetch
PrepareAndRecoverTLKSharesForInheritancePeer
StartCompanionPairing
WaitForCDPUpdated
UntrustedUpdated
ReadyUpdated
Disabled
DetermineiCloudAccountState
AttemptSOSUpgradeDetermineCDPState
AttemptSOSUpgrade
SOSUpgradeCKKSReset
SOSUpgradeAfterCKKSReset
Unimplemented
ResetBecomeUntrusted
ResetAndEstablish
ResetAnyMissingTLKCKKSViews
EstablishEnableCDPBit
ReEnactDeviceList
ReEnactPrepare
ReEnactReadyToEstablish
EstablishCKKSReset
EstablishAfterCKKSReset
HSA2HealthCheck
CDPHealthCheck
TPHTrustCheck
CuttlefishTrustCheck
PostRepairCFU
SecurityTrustCheck
HealthCheckReset
NoAccountDoReset
LostAccountAuth
WaitForUnlock
WaitForClassCUnlock
AssistCKKSTLKUpload
AssistCKKSTLKUploadCKKSReset
AssistCKKSTLKUploadAfterCKKSReset
HealthCheckLeaveClique
EscrowTriggerUpdate
idms_level
preapproved
tlk_upload_needed
policy_check_needed
ckks_views_changed
recd_push
account_available
attempt_sos_upgrade
attempt_machine_id_list
unlocked
attempt_sos_update_preapprovals
attempt_sos_consistency
escrowrequest_inform_cloudservices
retry_bottle_tlk_extraction
retry_rk_tlk_extraction
se_id_changed
attempt_ucv_upgrade
retry_custodian_fixup
stateNum should be number
stateName should be string
OTStates.m
report_client_operation_frequency_base
report_client_operation_frequency
client_operation
report_operation_group_frequency_base
report_operation_group_frequency
operation_group
anonymous
environment
container
client_bundle_id
client_process_version
couldn't run query
couldn't destroy query for item pref
couldn't run query for new item pref
v24@?0^{SecDbItem={__CFRuntimeBase=QAQ}^{SecDbClass}iii^{__CFDictionary}^{__CFData}^v^{__CFArray}}8^B16
couldn't create query for new item pref
v24@?0@"CKRecord"8@"NSError"16
updateCurrentItemPointer-modifyRecordsComplete
No synced item matching (%@); can't set current pointer.
Old item(%@) is being synced; can't set current pointer.
New item(%@) is being synced; can't set current pointer.
Current pointer(%@) does not match given value of '%@', aborting
Current pointer(%@) does not match user-supplied %@, aborting
Update to current item pointer is pending.
Old item has changed; hashes mismatch. Refetch and try again.
New item has changed; hashes mismatch. Refetch and try again.
ckkstlk
octagon-consistency
v32@?0@"TrustedPeersHelperPeerState"8@"NSArray"16@"NSError"24
followup
repair
confirm existing secret
keybag-unlocked-dependency
<CKKSLockStateTracker: %@ last:%@>
locked
lock-state-tracker
ProductType
ProductName
BuildVersion
UniqueDeviceID
ProductVersion
com.apple.security.analytics
SecDbBackupWrappedItemKey
backupwrappedkey
akswrappedkey
launchSequence
statusError
ckksManaged
zoneSubscribed
zoneCreated
itemsyncing
currentClassCPtr
currentClassAPtr
currentTLKPtr
tlkshares
devicestates
status-rpc
lastReencryptOutgoingItemsOperation
lastProcessReceivedKeysOperation
lastOutgoingQueueOperation
lastNewTLKOperation
lastIncomingQueueOperation
ckksstate
fetcher
accounttracker
restricted
could not determine
logged out
ckaccountstatus
viewsFromPolicy
policy
cloudkitRetryAfter
lockstatetracker
ckdeviceIDError
ckdeviceID
no-network
reachability
global
rpc-watcher
iCloud account status unknown.
Cannot get view %@; is externally managed
No syncing view for '%@'
CKKS syncing policy not yet loaded
com.apple.security.view-ready.%@
com.apple.security.view-become-ready
%@-ready-scheduler
com.apple.security.keychainchanged
com.apple.security.view-change.PCS
LimitedPeersAllowed
Home
ApplePay
Engram
Manatee
ckks-%@-notify-scheduler
externally-managed
CKKS
cached
ckks-policy
ckkstrust
CloudKit account logged in again.
account-logged-in-dependency
havoc
device-state-operation
process-incoming-queue
check-keys
No local keys for %@; processing queue will fail
ckksrpc
fetch-and-process
rpc-fetch
wait-for-next-incoming-queue-operation
push
Cannot push view %@; is externally managed
No trust; push will not succeed.
No TLKs for this view; push will not succeed.
No CloudKit account; push will not succeed.
get-current-item-pointer
Current item pointer is empty
No current item pointer found for %@
No access group or identifier given
setCurrentItem-return-callback
currentitem-api
keychain-api-use
sos-incoming-item
View is paused; item is not expected to sync
addition
deletion
modification
tlk-missing
lose-trust
become-ready
zonesize
launch
more coming
oqo-failure
iqo-errored
unhealthy-lacking-trust
heal-tlks-failed
all-views-paused
reset-views
no-trust
newtlks-failed
post-fetch-process
fetch-complete
waiting-for-fetch
fetch
post-fetch
scan
process-incoming
24-hr-check
check-queues
trusted-peers-changed
trust-gone
key-process
full-refetch
key-state-after-unlock
provide-key-set
fetch-requested
begin-trusted-operation
recover-from-cloudkit-failure
fixup
ck-sign-in
ck-token-expired
ck-zone-missing
ckks-cloud-reset
set-zones
ckksreset
reset-cloudkit
reset-zones
ckks-initialized-operation
restart-setup
initial-setup
<%@: %@ %@ %p>
outgoing-queue-scheduler
CKKSQueue.%@
CloudKit account logged in.
operation
status
endpoint
error
peer-infos
peer-info
userlabel
flags
password
emcsbackup
query
attributesToUpdate
digest
publicPeerId
otrsess
data
otrrdy
viewname
viewactioncode
cfstring
cfarray
cfset
cfset2
newPublicBackupKey
RecoveryPublicKey
includeV0
reason
enabledViews
disabledViews
fileDescriptor
accessGroups
normIssuer
serialNum
version
AccountSetToNew
OTAGetEscrowCertificates
OTAPKIGetNewAsset
OTASecExperimentGetNewAsset
OTASecExperimentGetAsset
AcceptApplicants
BailFromCircle
CanAuthenticate
CopyApplicantPeerInfo
CopyConcurringPeerPeerInfo
CopyEngineState
CopyGenerationPeerInfo
CopyMyPeerInfo
CopyNotValidPeerPeerInfo
CopyPeerPeerInfo
CopyRetirementPeerInfo
CopyValidPeerPeerInfo
CopyViewUnawarePeerInfo
DeviceInCircle
GetLastDepartureReason
LoggedOutOfAccount
ProcessSyncWithAllPeers
ProcessSyncWithPeers
ProcessUnlockNotification
PurgeUserCredentials
RejectApplicants
RemoveThisDeviceFromCircle
RemovePeersFromCircle
RequestToJoin
RequestToJoinAfterRestore
ResetToEmpty
ResetToOffering
RollKeys
SetBagForAllSlices
SetLastDepartureReason
SetNewPublicBackupKey
SetUserCredentials
SetUserCredentialsAndDSID
TryUserCredentials
ValidateUserPublic
View
add_shared_web_credential
copy_shared_web_credential
delete_all
get_log_settings
backup_copy_names
backup_register_view
backup_handoff_fd
backup_restore
backup_set_confirmed_manifest
copy_matching
update
keychain_backup
keychain_backup_syncable
keychain_restore
keychain_restore_syncable
keychain_sync_update_message
ota_pki_trust_store_version
ota_pki_asset_version
otr_session_create_remote
otr_session_process_packet_remote
set_circle_log_settings
set_xpc_log_settings
trust_evaluate
trust_store_contains
trust_store_remove_certificate
trust_store_set_trust_settings
trust_store_copy_all
trust_store_copy_usage_constraints
ocsp_cache_flush
EnsurePeerRegistration
WhoAmI
TransmogrifyToSyncBubble
UpdateTokenItems
sec_delete_items_with_access_groups_id
kSecXPCOpPeersHaveViewsEnabled
RegisterRecoveryPublicKey
GetRecoveryPublicKey
MessageFromPeerIsPending
SendToPeerIsPending
copy_parent_certificates
certificate_exists
KeybagAdd
KeybagDelete
KeychainControlEndpoint
NetworkingAnalyticsReport
SetCTExceptions
CopyCTExceptions
GetExceptionResetCount
IncrementExceptionResetCount
SetCARevocationAdditions
CopyCARevocationAdditions
ValidUpdate
SetTransparentConnectionPins
CopyTransparentConnectionPins
trust_settings_set_data
trust_settings_copy_data
sec_truststore_remove_all
Unknown xpc operation
object for key %s is NULL
no data for key %s
data for key %s is NULL
failed to convert string for key %s to utf8
string for key %s is NULL
missing fd for key %s
object for key %s not set but %@
object %@ is not a set
trailing garbage after der decoded object for key %s
no object for key %s
object for key %s not array but %@
failed to create data for key %s
too large data for key %s
object for key %s not dictionary but %@
object for key %s not string
object for key %s failed to convert %s to CFString
v24@?0Q8@"NSError"16
KEYCLASS_AK
KEYCLASS_CK
KEYCLASS_DK
KEYCLASS_AKU
KEYCLASS_CKU
KEYCLASS_DKU
KEYCLASS_AKPU
encryptedMetadata
encryptedSecretData
Current class C key does not wrap to current TLK
Current class A key does not wrap to current TLK
No trust states available
unwrappable key(%@) in hierarchy: %@
orphaned key(%@) in hierarchy
invalid TLK from CloudKit
current TLK doesn't wrap itself: %@ %@
tlkshare-%@::%@::%@
<CKKSTLKShare(%@): recv:%@ send:%@ mod:%@>
Couldn't parse '%@' as a TLKShare ID
^tlkshare-(?<uuid>[0-9A-Fa-f-]*)::(?<receiver>.*)::(?<sender>.*)$
ckks-view-state
CKKSKeychainViewState.m
<CKKSKeychainViewState: %@(%@), %@>
key-state
com.apple.security.ckks.launch
heal-tlkshares-%@
ckksshare
current self peer (%@) is not in the set of trusted peers
not_started
halted
<OctagonStateTransitionOperation(%@): intended:%@ actual:%@>
<OctagonStateTransitionGroupOperation(%@): intended:%@ actual:%@>
<OctagonStateTransitionRequest: %@ %@ sources:%d>
ckksreencrypt
options_tls_pinning_required
options_apple_id_context
options_source_application_secondary_identifier
options_source_application_bundle_identifier
options_timeout_interval_for_resource
options_timeout_interval_for_request
options_allow_power_nap_scheduling
options_allow_expensive_access
options_out_of_process_force_discretionary
options_out_of_process
options_quality_of_service
timestamp_response_end
timestamp_response_start
timestamp_request_end
timestamp_request_start
timestamp_ssl_start
timestamp_tcp_end
timestamp_tcp_start
timestamp_dns_end
timestamp_dns_start
timestamp_c2_now
timestamp_c2_start
timestamp_c2_init
network_request_uri
network_status_code
network_fatal_error
network_previous_attempt_count
network_response_body_bytes_received
network_response_header_size
network_request_body_bytes_sent
network_request_header_size
network_protocol_name
network_interface_identifier
network_connection_reused
network_connection_uuid
network_remote_addresss_and_port
network_hostname
network_task_description
ckkspush
apsnotification
CKKS APNS Push Dropped - never unlocked
CKKS APNS Push Dropped
com.apple.icloud-container.
clearStalePushNotifications
com.apple.security.cuttlefish
aps-callback-queue
ckksPushReceivedDate
ckksPushTracingUUID
ckksPushTracingEnabled
external-tlkshare-modification-rpc
external-tlk-rpc
v16@?0@"OctagonStateTransitionGroupOperation"8
TLKShare is not for current TLK %@
C8@?0
wait-until-write-finished
ckks-se
rpc-response
v16@?0@"CKKSResultOperation"8
View is not externally managed: '%@'
Unknown external view: '%@'
external operation
<%@(%@): %@ (%@)>
Couldn't delete %@ from keychain: %d
unable to unbase64 key: %@
-nonsync
Couldn't save %@ to keychain: %d
%@ is not self-wrapped
-piggy
Couldn't load %@ from keychain: %d
newUpload
<CKKSKeychainBackedKeySet: tlk:%@, classA:%@, classC:%@, newUpload:%d>
baghash
osVersion
unknownMachineIDs
memberChanges
peerStatus
identityIsPreapproved
<TPHPeerState: %@ preapproved:%d status:%@ memberChanges: %@ unk. mIDs: %@ osVersion: %@ walrus: %@ >
salt
recoveryString
<CustodianRecoveryKey: %@>
seIdentity
encryptionSPKI
<TPHPeer: %@ %@ %@ se:%@ (%lu views)>
isLocked
isExcluded
peerCountsByMachineID
viablePeerCountsByModelID
egoStatus
<TPHEgoPeerState: %@ (mid:%@)>
client_join
await_epoch_request
epoch_prepared
await_identity
voucher_prepared
done
rpcVoucher-callback
otrpc
rpcVoucher
rpcEpoch-callback
rpcEpoch
v32@?0@"TrustedPeersHelperPeerState"8@"TPSyncingPolicy"16@"NSError"24
octagon-voucher-prepared
v16@?0@"OctagonStateTransitionOperation"8
com.apple.security.otclientstatemachine
octagon-client-%@-state
initialize-client
v32@?0@"NSString<OctagonStateString>"8@"NSNumber"16^B24
WrongKeySizeException
length (%lu) was not %d
could not ccsiv_crypt
could not ccsiv_aad
could not ccsiv_set_nonce
corecrypto
could not ccsiv_init
no mode given
ciphertext too short
CommonCrypto
IV generation failed
unwrapped key size does not match key size
wrapped key size does not match key size
No key given
CCRandomGenerateBytes failed with %d
internal_test_config
user_default_test_name
process_uuid
process_version
process_name
is_apple_internal
product_build
product_version
product_type
product_name
proceed-after-fetch
operation_group_triggered
operation_group_name
operation_group_id
apns
se-api
keyset
currentitemcheck
initialfetch
fetchfailed
keyhierarchy
resync
more-coming
conflict
periodic
Fetch failed
successful-fetch-dependency
zone-change-fetcher-worker
description
CKKS APNS Push Received-webtunnel
zones_status
not-ready
CKKS APNS Push Received
<CKKSZoneChangeFetcher(%@): no pending fetches
<CKKSZoneChangeFetcher(%@): next fetch at %@
zone-change-fetch-scheduler
zone-change-fetcher
B16@?0^{__OpaqueSecDbConnection=}8
Unable to find a suitable metadata key and not permitted to create one
keychainlockedlogmessage
re-entering -[%@ %@] - that shouldn't happen!
SecDbKeychainMetadataKeyStore.m
SecDbMetadataKeyStore
New-format metadata key blob didn't deserialize
Metadata key blob both old-world and new-world
v16@?0^{sqlite3_stmt=}8
v16@?0^B8
SELECT data, actualKeyclass, metadatakeydata FROM metadatakeys WHERE keyclass = ?
SELECT data, actualKeyclass FROM metadatakeys WHERE keyclass = ?
INSERT OR REPLACE INTO metadatakeys (keyclass, actualKeyclass, data, metadatakeydata) VALUES (?,?,?,?)
INSERT OR REPLACE INTO metadatakeys (keyclass, actualKeyclass, data) VALUES (?,?,?)
SecDbKeychainMetadataKeyStore
metadata_store
v32@?0@8@16^B24
attributes
eventName
identity
<TrustedPeersHelperIntendedTPPBSecureElementIdentity: %@>
triggerRequestTime
uploadRetries
uploadCompleted
lastEscrowAttemptTime
lastCloudServicesTriggerTime
serializedPrerecord
certCached
@"OTAccountMetadataClassC"16@?0@"OTAccountMetadataClassC"8
No existing ego peer ID
OTCuttlefishAccountStateHolderNotifier
service_instance
service_build
partition
service_name
ckkszonemodifier
v32@?0@"NSArray"8@"NSArray"16@"NSError"24
zone-subscription-operation
zone-creation
zone-creation-operation
retry
zone-subscription
zone-modification
zonemodifier-ckretryafter
CKKSZoneModifier.%@
Credential
primaryServiceID
username
failed to deserialize SFCredential
customAttributes
label
modificationDate
creationDate
malformed supplementary service identifiers array in SecCDKeychainItem
supplementaryServiceIDs
failed to get password for SFCredential
invalid persistent identifier: %@
v24@?0@"NSArray"8@"NSError"16
v16@?0@"NSArray"8
v24@?0@"SecCDKeychainItem"8@"NSError"16
v20@?0B8@"NSError"12
failed to serialize supplementary service identifier
failed to serialize primary service identifier
no keychain access group found; ensure that your process has the keychain-access-groups entitlement
attempt to add credential to SFCredentialStore that is not a password credential: %@
octagon-ckks
escrowrequest
attr: %@: %@
v32@?0@"NSString"8@"CKKSLaunchEvent"16^B24
%@ - %@:%u
yyyy-MM-dd'T'HH:mm:ss.SSSZ
v32@?0@"CKKSLaunchEvent"8Q16^B24
q24@?0@"CKKSLaunchEvent"8@"CKKSLaunchEvent"16
events
re-launch
first-launch
v32@?0@"NSString"8@"CKKSLaunchSequence"16^B24
c:%@
c:%@-%@
started
octagon-authkit
AccountName
EscrowRecord
unsynced
initialsynctimeout
pendingEnableViews
pendingDisableViews
v2dictionary
RecoveryRing
RateLimitCounters
PeerNegotiationTimeouts
kSOSAccountPeerLastSentTimestamp
NegotiationRetryCount
com.apple.security.sosaccount
lastKVSCleanup
Scope
sos-sm
perform-ring-update-flag
perform_ring_update
trigger_ring_update
perform-backup-flag
perform_backup
trigger_backup
perform-ring-update
perform-backup-state
SOS-statemachine
performRingUpdates
performBackups
sosaccount
can't bootstrap more than once
SOSAccount.m
v16@?0^v8
retirement
Public Key isn't available, this peer is in the circle, but invalid. The iCloud Password must be provided to keychain syncing subsystem to repair this.
Security
SOSDisablement
SOSDisable
SOSEnable
[SOS is monitoring]
[SOS is active]
SOSEnabled
SOSInitialized
failed to lookup SecdWatchdog class from ObjC runtime
SecdWatchdog
sync
Unavailable
No Signature
Unknown
Joining
Accepting
No applicant provided
pairing
User public not available
User public key not trusted
Account Queue
SOSAccountSettings.pb
EscrowService
EscrowServiceBypassToken
com.apple.lakitu
kSOSCCInCircle
kSOSCCNotInCircle
kSOSCCRequestPending
kSOSCCCircleAbsent
kSOSCCError
circleops
Don't have circle when joining???
Can't remove without being active peer
B32@?0^{__OpaqueSOSCircle=}8^{__OpaqueSOSFullPeerInfo=}16^{__OpaqueSOSPeerInfo=}24
No circle
key-cleanup
v32@?0@"NSString"8@"NSNumber"16^B24
v32@?0@8Q16^B24
auth
tlk-piggy
v32@?0@"NSDictionary"8Q16^B24
q24@?0@"NSDictionary"8@"NSDictionary"16
Health
AutoUnlock
accountLogState
*No Key*
Deleting V0 Keybag failed - %d
^{__OpaqueSOSRing={__CFRuntimeBase=QAQ}^{__CFDictionary}^{__CFDictionary}^{__CFDictionary}^{__CFDictionary}}24@?0^{__CFString=}8^^{__CFError}16
B24@?0^{__OpaqueSOSBackupSliceKeyBag=}8^^{__CFError}16
backupring
^{__OpaqueSOSRing={__CFRuntimeBase=QAQ}^{__CFDictionary}^{__CFDictionary}^{__CFDictionary}^{__CFDictionary}}24@?0^{__OpaqueSOSRing={__CFRuntimeBase=QAQ}^{__CFDictionary}^{__CFDictionary}^{__CFDictionary}^{__CFDictionary}}8^^{__CFError}16
No error space.
No backup view set created
NULL account or viewName parameter
Backup public key
B24@?0^{__OpaqueSOSPeerInfo=}8^^{__CFError}16
keybag
Error saving %@
backupkey
(null)
<Params: iter: %zd, size: %zd, salt: %@>
SOSUserKeyCreateGenerateParameters created new parameters:
SecRandomCopyBytes failed
Keygen failed
SOSUserKeygen generating key for:
Too few iterations, params suggested %zd.
Salt length not supported, requested %zd.
Key size not supported, requested %zd.
Bad paramter encoding, got: %@
Backup
Improper inclusion of this peer
Improper exclusion of this peer
Bad generation
Concordance with no public key - need to validate application
Encoding parameters failed
update parameters key failed [%@]
account-sync
succeeded
failed
ringUpdateFlag
pendingBackupPeers
Recovery
Not recovery ring type
Private Key not available - failed to prompt user recently
keygen
com.apple.security.sos-usercredential
SOSUserCredential
Failed fetching account credential: %d
Public Key isn't available. The iCloud Password must be provided to the syncing subsystem to repair this.
Password generated pubkey doesn't match - candidate: %@  known: %@
com.apple.security.publickeyavailable
public key no not valid, can't check stashed copy
account public key missing, can't check stashed copy
Could not create correct key with password.
sosAccountValidatePasswordOrFail
Basic
Not associated with Ring
I have no peer
No identity to get key from
Cloud Identity
No trusted circle
Can't generate keypair for icloud identity
Couldn't update name
Cloud Identity - '%@'
Can't allocate gestalt
iCloud
^{__OpaqueSOSPeerInfo={__CFRuntimeBase=QAQ}^{__CFDictionary}^{__CFData}^{__CFDictionary}^{__CFString}^{__CFString}q^{__CFString}B^{__CFDictionary}}32@?0^{__OpaqueSOSPeerInfo={__CFRuntimeBase=QAQ}^{__CFDictionary}^{__CFData}^{__CFDictionary}^{__CFString}^{__CFString}q^{__CFString}B^{__CFDictionary}}8^{__SecKey={__CFRuntimeBase=QAQ}^{__SecKeyDescriptor}^v}16^^{__CFError}24
persistence
backupKey
Extra data at the end of saved acount
Unsupported version (%llu)
Cannot EnsureFactoryCircles
Didn't consume all bytes v7
Version parsing failed
Not in circle, won't update ring
secdNotify
userKeyTrust
com.apple.security.publickeynotavailable
B16@?0i8B12
acct-txn
member
non-member
<SOSAccountTransaction*@%p %ld>
sosnotify
engine-notify
Didn't make peer meta for: %@
doesn't support
supports
v24@?0^{__CFSet=}8^{__CFSet=}16
Expected circle named %@, got %@
Expected data or NULL got %@
SOSAccountHandleParametersChange got new user key parameters:
initial-sync
v16@?0^{__CFSet=}8
v24@?0^{__CFString=}8^{__CFSet=}16
trusted_rings
No Ring found %@
No Rings found
modify
Bad Error Return from ConcordanceTrust
Invalid Ring Membership
This peer shouldn't be in this ring since it isn't in view
Incorrect membership for me
No User Public Key Available
No trusted peer left
No trusted peer signature
No User Signature
Bad Signature
Generation Old
You give rings a bad name
No device private key to work with
No device public key to work with
Rings not present
^{__OpaqueSOSRing={__CFRuntimeBase=QAQ}^{__CFDictionary}^{__CFDictionary}^{__CFDictionary}^{__CFDictionary}}24@?0^{__CFString=}8^{__OpaqueSOSRing={__CFRuntimeBase=QAQ}^{__CFDictionary}^{__CFDictionary}^{__CFDictionary}^{__CFDictionary}}16
Can't Alloc Account Expansion dictionary
fwrite SOSBackupEventWrite
size mismatch der_end - der: %td
*24@?0r*8*16
sync-with-peers
don't know how to encode
HSAPreApprovedPeer
v24@?0^{__OpaqueSOSCircle=}8^{__CFArray=}16
No circle to get peer key from
V2update
viewChange
Enabled
Not in Circle
No Peer for Account
No Trusted Circle
No Trusted UserKey
*24@?0Q8*16
SOSCoder
<Coder %@ %@ %s%s>
Unsupported SOS Coder DER
Unsupported Sequence Version: %lld
Extra data in SOS coder
coder
No local error in SOSCoderCreate
DataReturned
Negotiating
NegotiationCompleted
append start packet returned: %d
alloc failed
otr negotiating already
otr session ready
waiting for peer to send first data packet
*** no otr session ***
StatusUnknown
StaleEvent
TooNew
Unknown packet type
%@ Cannot expose message: %d
 too new
 too old, forcing message
 too old, repeated renegotiating
 repeated
decoded OTR protected packet
verify and expose message
got data packet we were waiting for 
not ready for data; resending DH packet
%@ Cannot allocate CFData
%@ Cannot negotiate session (%ld)
resending dh
completed negotiation
stuck?
 begin waiting for data packet
Sending OTR Response %s
%@ cannot protect message: %d
%@ alloc failed
waiting for peer to send data packet first
not ready
*** using null coder ***
manifest
com.apple.security.sos.manifest.error
SOSManifest
 %02X%02X%02X%02X
<[%zu]
<[%zu:%02X%02X%02X%02X]
Failed to create manifest
SOSDictionaryUpdate
Not valid ring type
Not backup ring type
Wrong set count for one return
recoveryKeyBag
No recovery key available
recovery
SOSMessage
<MSG %llu %@ %02X%02X%02X%02X %02X%02X%02X%02X %02X%02X%02X%02X %@ %@ %@ %s%s%s%s%s%s%s>
<MSGObjects %llu %02X%02X%02X%02X %@ %@ %@
<MSGManifest %llu %@>
<MSGDigest %llu %02X%02X%02X%02X>
<MSGInvalid %llu >
{NO DATASOURCE}
failed to decode object header
v24@?0^{__CFData=}8^B16
v24@?0^{__OpaqueSOSObject=}8^B16
{[%zu]
Invalid DER, no tag found
Object has %td trailing unused bytes
Object with tag %lu has no valid DER length
Object has EOL tag
no manifest for manifest message
digest length mismatch
SOSMessage DER decoding failure %td bytes left
Invalid message type %llu
Trailing garbage at end of message
failed to alloc SOSMessage
serialNumber
machineID
peer-id
object %@ is not an data
backup
backup-peer
v16@?0r*8
fopen %s,%s
v16@?0^{__sFILE=*iiss{__sbuf=*i}i^v^?^?^?^?{__sbuf=*i}^{__sFILEX}i[3C][1C]{__sbuf=*i}iq}8
%s/SOSBackup-%@
confstr on _CS_DARWIN_USER_TEMP_DIR returned an error.
unlink %s
SOSPeer
<%@ %s%s%s%@%@%@%@%@>
 %@[%ld]%@
 -  
 %@%@
has-been-in-sync
local-manifest
pending-manifest
confirmed-manifest
unwanted-manifest
pending-objects
send-objects
must-send
vers
sequence-number
com.apple.security.itembackup
open %s
peer
ckks
v20@?0^{__sFILE=*iiss{__sbuf=*i}i^v^?^?^?^?{__sbuf=*i}^{__sFILEX}i[3C][1C]{__sbuf=*i}iq}8i16
sending negotiation message.
waiting for negotiation message.
v16@?0^{__OpaqueSOSPeerInfo={__CFRuntimeBase=QAQ}^{__CFDictionary}^{__CFData}^{__CFDictionary}^{__CFString}^{__CFString}q^{__CFString}B^{__CFDictionary}}8
v24@?0@"NSSet"8@"NSError"16
Windows
KeyParameter
Circle
Message
AlwaysKeys
FirstUnlockKeys
UnlockedKeys
key-interests
Registering with CKP
No Change, Ignoring
v32@?0@"CKKeyParameter"8Q16^B24
accountChange
PCS-MasterKey-tomb
iCloudIdentity-tomb
dsid
SOSRecoveryKeyBag
<SOSRecoveryKeyBag@%p DSID: %@ version: %d  gencount: %@  RecoveryKeyID: %@ 
Extra space in sequence
Recovery bag allocation failed
RecoveryKeyBag has no generation
NULL RecoveryKeyBag
RecoveryKeyBag has no DSID
RecoveryKeyBag has no public key
Couldn't get recovery keybag components
Couldn't get memory for recoveryKeyBag
Couldn't get dsid for recovery keybag components
Null Account Object
Failed to create scratch
Didn't consume all data supplied
resetToOffering
B16@?0^{__OpaqueSOSCircle=}8
v16@?0^{__OpaqueSOSPeerInfo=}8
updatingGenSignature
noPrivateKey
iCloudIdentityFix
local
remote
signing
circleop
trusted
untrusted
circleOps-Old
circleOps-New
circle
canary
prospective_circle
newCircle
oldCircle
accept
countersign
leave
revert
ignore
No Peer
Current Entry is NULL; rejecting %@
Can't handle updates with no trusted public key here
iCloudCleanerCheck
iCloudIDCheck
Incompatible circle in KVS
v24@?0^{__CFDictionary=}8^{__CFError=}16
Tried to publish nil Cloud Parameters
v48@?0^{__OpaqueSOSPeer=}8^{__OpaqueSOSCoder=}16^{SOSDataSource=^{__OpaqueSOSEngine}^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?}24^{__OpaqueSOSTransaction=}32^B40
ratelimit
v32@?0@"NSString"8Q16^B24
com.apple.securebackupd
attributeBadness
peerShouldSend
timestamp
NoAttribute
engine
otrtimer
Failed to parse SOSMessage
Missing engine
com.apple.security.sos.messagertt
com.apple.security.sos.synccompletion
iCloud Keychain Account Meta-data
^{os_state_data_s=I(?=b32I){os_state_data_decoder_s=[64c][64c]}[64c][0C]}16@?0^{os_state_hints_s=I*II}8
CloudCircle Account Object
account
SecItemCopyMatching returned non-data in '%@'
Error %@ reading for service '%@'
Error saving %@ to service '%@'
Unknown model
v24@?0^{__CFData=}8^{__CFError=}16
^{__CFArray=}16@?0^{__CFDictionary=}8
v56@?0@"SOSAccount"8^{__OpaqueSOSCircle=}16^{__CFSet=}24^{__CFSet=}32^{__CFSet=}40^{__CFSet=}48
updates
syncwith
Unknown name
DeviceName
com.apple.securityd.cloudcircleserver
secAccount
Cannot inflate account object as root
B24@?0@"SOSAccountTransaction"8^^{__CFError}16
views
force-push
B16@?0^^{__CFError}8
flush
Failure
Success
fresh
failure
success
initial sync
piggy
InitialSync.WaitPeriod
B16@?0@"SOSAccount"8
devRecovery
B24@?0^{__CFSet=}8^^{__CFError}16
syncWithPeers
octagon
Updating Octagon Keys in SOS
B24@?0^{__OpaqueSOSPeerInfo={__CFRuntimeBase=QAQ}^{__CFDictionary}^{__CFData}^{__CFDictionary}^{__CFString}^{__CFString}q^{__CFString}B^{__CFDictionary}}8^^{__CFError}16
Device has no full peer info
ID for %@-%@
Octagon Peer Encryption 
Octagon Peer Signing 
octagon-preload-keys
Device has no SOSAccount
CKKS4All update
B24@?0^{__OpaqueSOSFullPeerInfo=}8^^{__CFError}16
B16@?0^{__OpaqueSOSPeerInfo={__CFRuntimeBase=QAQ}^{__CFDictionary}^{__CFData}^{__CFDictionary}^{__CFString}^{__CFString}q^{__CFString}B^{__CFDictionary}}8
<?xml version="1.0" encoding="UTF-8"?>                          <!DOCTYPE plist PUBLIC "-//Apple//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd">                          <plist version="1.0">                          <dict>                          <key>general</key>                          <dict>                          <key>maxStateSize</key>                          <integer>250</integer>                          <key>maxItemAge</key>                          <integer>3600</integer>                          <key>overloadDuration</key>                          <integer>1800</integer>                          <key>name</key>                          <string>SOS</string>                          <key>MAType</key>                          <string></string>                          </dict>                          <key>groups</key>                          <array>                                <dict>                                    <key>property</key>                                    <string>global</string>                                    <key>capacity</key>                                    <integer>1000</integer>                                    <key>rate</key>                                    <integer>10</integer>                                    <key>badness</key>                                    <integer>1</integer>                                </dict>                                <dict>                                    <key>property</key>                                    <string>accessGroup</string>                                    <key>capacity</key>                                    <integer>50</integer>                                    <key>rate</key>                                    <integer>900</integer>                                    <key>badness</key>                                    <integer>3</integer>                                </dict>                          </array>                          </dict>                          </plist>                          
Applicants
Rejections
LastModifier
PeerIDs
Payload
BackupViews
Generation
RingName
RingType
Identifier
RingVersion
v8@?0
SOSRing
S: [%@]>
R: [%@], 
REJECTS
A: [%@], 
APPLICANTS
P: [%@], 
MEMBER
Mod: %@, 
v16@?0^{__CFString=}8
Gen: %@, 
<SOSRing: '%@'
ring
Failed to allocate PeerID
Failed to allocate generation count
Failed to allocate rejection area
Failed to allocate applicant area
Failed to allocate ring identifier
Failed to allocate ring version
Failed to allocate ring type
Failed to allocate data area
Failed to allocate signature area
Failed to allocate signed information area
Failed to allocate unsigned information area
No ring name
Development
SOSRingSign Lacking ring or private key
v12@?0B8
v16@?0@"SOSAccountTransaction"8
com.apple.private.security.initial-sync
com.apple.securityd.sos
v24@?0r^v8r^v16
transport
v16@?0r^v8
SecWarning
circleOps
circleOp
SecError
Don't have circle
circleChange
SOSCheckOctagonEncryptionKey
Octagon Peer Encryption ID for %@
SOSCheckOctagonSigningKey
Octagon Peer Signing ID for %@
No peer for circle
SecdWatchdog
SecOSTransactionHolder
SecuritydXPCProtocol
SecuritydXPCServer
LocalSecuritydXPCServer
SecuritydXPCServerListener
NSXPCListenerDelegate
NSObject
MockAKSRefKey
NSCopying
SecMockAKS
MockAKSRefKeyObject
MockAKSOptionalParameters
SecABC
compactDescription
SOSDictionaryFormat
FindAndRemove
Emptiness
HasElements
Stringizing
filledAndClipped
SecTapToRadar
CuttlefishXPCWrapper
TrustedPeersHelperProtocol
OTModifyUserControllableViewStatusOperation
OctagonStateTransitionOperationProtocol
CKKSSerializedKey
OTAccountMetadataClassC
OTFetchCKKSKeysOperation
OTLocalResetOperation
UsefulConstructors
CKKSSQLResult
CKKSSQLWhereValue
CKKSSQLWhereColumn
CKKSSQLWhereIn
CKKSSQLDatabaseObject
4 0@
CKKSRateLimiter
NSSecureCoding
NSCoding
EscrowRequestController
OctagonStateMachineEngine
OTDeviceInformationActualAdapter
OTDeviceInformationAdapter
SecAKSObjCWrappers
CKKSAccountStateTracker
CKKSOctagonStatusMemoizer
CKKSCloudKitAccountStateTrackingProvider
OTCliqueStatusWrapper
SOSAccountStatus
EscrowRequestServer
SecEscrowRequestable
EscrowRequestXPCProtocol
SecCDKeychainItemWrappedSecretData
SecAKSRefKey
SecCDKeychain
SecCDKeychainAccessControlEntity
SecCDKeychainItemMetadata
SecCDKeychainLookupTuple
SecCDKeychainItem
SecCDKeychainItemType
OctagonSelfPeer
CKKSSelfPeer
CKKSPeer
OctagonCKKSPeerAdapter
CKKSPeerProvider
OTCheckHealthOperation
CKKSPowerCollection
OTManager
OTControlProtocol
CKKSGroupOperation
CKKSManifestLeafRecord
CKKSManifestPendingLeafRecord
CKKSEgoManifestLeafRecord
CKKSItem
CKKSZoneExtras
CKKSTranslation
CKKSItemEncrypter
CKKSDeleteCKZoneOperation
OTTriggerEscrowUpdateOperation
OTDetermineCDPBitStatusOperation
CKKSOutgoingQueueEntry
CKKSIncomingQueueEntry
SecDbBackupMetadataClassKey
SFKeychainControlManager
SFKeychainControl
CKKSIncomingQueueOperation
CKKSOutgoingQueueOperation
OTVouchWithBottleOperation
OTJoinSOSAfterCKKSFetchOperation
CKKSTLKShare
SECC2MPGenericEventMetric
CKKSZoneStateEntry
EscrowRequestXPCServer
OTUpdateTrustedDeviceListOperation
SECC2MPGenericEventMetricValue
SecDbBackupBag
OTEnsureOctagonKeyConsistency
RateLimiter
CKKSCreateCKZoneOperation
OTSOSActualAdapter
OTSOSAdapter
OTSOSMissingAdapter
OTSOSAdapterHelpers
OTEstablishOperation
CKKSHealKeyHierarchyOperation
CKKSCurrentItemPointer
CKKSOperationDependencies
CKKSLocalSynchronizeOperation
CKKSReloadAllItemsOperation
OTPrepareOperation
KeychainSupport
SecDbBackupRecoverySet
CKKSCurrentKeyPointer
CKKSCurrentKeySet
OTSetCDPBitOperation
SECC2MPMetric
CKKSControlProtocol
CKKSControlServer
CKKSUpdateDeviceStateOperation
SecDbKeychainSerializedMetadata
CKKSNearFutureScheduler
CKKSMirrorEntry
OctagonFlags
OctagonFlagClearer
OctagonFlagSetter
OctagonFlagContainer
OTSetRecoveryKeyOperation
OTCreateCustodianRecoveryKeyOperation
OTCreateInheritanceKeyOperation
CKKS
CKKSSelves
CKKSActualPeer
CKKSRemotePeerProtocol
CKKSSOSPeer
CKKSSOSPeerProtocol
CKKSSOSSelfPeer
SECC2MPGenericEvent
SecDbBackupKeyClassSigningKey
CKKSSynchronizeOperation
CKKSSecDbAdapter
CKKSDatabaseProviderProtocol
CKKSProvideKeySetOperation
CKKSKeySetProviderOperationProtocol
CKKSKeySetContainerProtocol
CKKSCKRecordHolder
EscrowRequestPerformEscrowEnrollOperation
CKKSScanLocalItemsOperation
OTJoinWithVoucherOperation
CKKSLocalResetOperation
CKKSCloudKitFetchRequest
CKKSCloudKitDeletion
CKKSFetchAllRecordZoneChangesOperation
OctagonStateTransitionPathStep
OctagonStateTransitionPath
OctagonStateTransitionWatcher
OctagonStateTransitionWatcherProtocol
OctagonStateMultiStateArrivalWatcher
CKKSNotifier
CKKSNotifyPostNotifier
OTResetCKKSZonesLackingTLKsOperation
OTRemoveCustodianRecoveryKeyOperation
OTUpdateTPHOperation
OTSOSUpdatePreapprovalsOperation
OTVouchWithRecoveryKeyOperation
SecDbBackupWrappedKey
SecDbBackupManager
OTCuttlefishContext
OTDeviceInformationNameUpdateListener
CKKSPeerUpdateListener
CKKSCloudKitAccountStateListener
OTAuthKitAdapterNotifier
OctagonCuttlefishUpdateReceiver
OTCuttlefishAccountStateHolderNotifier
OctagonPendingFlag
SECC2MPInternalTestConfig
OTVouchWithCustodianRecoveryKeyOperation
OTPrepareAndRecoverTLKSharesForInheritancePeerOperation
SOSEnginePeerMessageCallBackInfo
CKKSKey
CKKSViewManager
OTFetchViewsOperation
SecDbKeychainAKSWrappedKey
SecDbKeychainMetadata
SecDbKeychainSecretData
SecDbKeychainItemV7
CKKSReachabilityTracker
OctagonStateMachine
OctagonStateOnqueuePendingFlagHandler
OctagonStateFlagHandler
CKKSListenerCollection
OTSOSUpgradeOperation
CKKSResultOperation
CKKSManifest
CKKSManifestInjectionPointHelper
CKKSPendingManifest
CKKSEgoManifest
CKKSAccountInfo
CKKSPeerProviderState
OTRamp
OTLeaveCliqueOperation
OTAuthKitAdapter
OTAuthKitActualAdapter
OctagonXPCEntitlementChecker
OctagonControlServer
OTUploadNewCKKSTLKsOperation
SecDbKeychainSerializedAKSWrappedKey
SecMetrics
NSURLSessionDelegate
CKKSUsefulPrintingOperation
CKKSUsefulConstructorOperation
CKKSAnalytics
SECC2MPError
OTTooManyPeersAdapter
OTTooManyPeersActualAdapter
EscrowAttemptTimeout
CKKSDeviceStateEntry
SECC2MPCloudKitOperationInfo
OTClientVoucherOperation
CKKSFixups
CKKSFixupRefetchAllCurrentItemPointers
CKKSFixupFetchAllTLKShares
CKKSFixupLocalReloadOperation
CKKSFixupResaveDeviceStateEntriesOperation
OTStates
OTRemovePeersOperation
CKKSCloudKitClassDependencies
SECC2MPCloudKitInfo
CKKSUpdateCurrentItemPointerOperation
CKKSNewTLKOperation
OTDetermineHSA2AccountStatusOperation
OctagonCheckTrustStateOperation
OTFollowup
Testing
CKKSMemoryKeyCache
CKKSLockStateTracker
CKKSActualLockStateProvider
CKKSLockStateProviderProtocol
SecC2DeviceInfo
SecDbKeychainSerializedSecretData
SecDbKeychainSerializedMetadataKey
CKKSKeychainView
CKKSChangeFetcherClient
OTEpochOperation
SecDbKeychainSerializedItemV7
CKKSPBFileStorage
CKKSProcessReceivedKeysOperation
CKKSTLKShareRecord
CKKSKeychainViewState
CKKSHealTLKSharesOperation
OctagonStateTransitionOperation
OctagonStateTransitionGroupOperation
OctagonStateTransitionRequest
Octagon
CKKSReencryptOutgoingItemsOperation
SecBackupKeybagEntry
SECC2MPNetworkEvent
OTDeviceInformation
OctagonAPSReceiver
APSConnectionDelegate
CKKSPushTracing
ExternalClientHandling
CKKSKeychainBackedKey
CKKSKeychainBackedKeySet
SecDbBackupBagIdentity
TrustedPeersHelperPeerState
TrustedPeersHelperCustodianRecoveryKey
TrustedPeersHelperPeer
TrustedPeersHelperEgoPeerStatus
OTClientStateMachine
CKKSBaseAESSIVKey
CKKSWrappedAESSIVKey
CKKSAESSIVKey
SECC2MPDeviceInfo
OTWaitOnPriorityViews
SECC2MPCloudKitOperationGroupInfo
CKKSZoneChangeFetchDependencyOperation
CKKSZoneChangeFetcher
CKKSZoneUpdateReceiverProtocol
SecDbKeychainMetadataKeyStore
CKKSCondition
SecEventMetric
TrustedPeersHelperIntendedTPPBSecureElementIdentity
OTPreloadOctagonKeysOperation
SecEscrowPendingRecord
OTCuttlefishAccountStateHolder
OTOperationDependencies
SECC2MPServerInfo
CKKSZoneModifyOperations
CKKSZoneModifier
SecCDKeychainItemTypeCredential
SFKeychainServer
SFKeychainServerConnection
SFKeychainServerProtocol
OTLocalCKKSResetOperation
EscrowRequestInformCloudServicesOperation
CKKSLaunchEvent
CKKSLaunchSequence
OTResetOperation
SecCDKeychainManagedAccessControlEntity
CoreDataProperties
SecCDKeychainManagedItem
SecCDKeychainManagedItemType
SecCDKeychainManagedLookupEntry
SOSAccount
SOSControlProtocol
SOSAccountConfiguration
Retirement
Persistence
SOSAccountTransaction
Transaction
Expansion
SOSAccountTrustClassic
SOSCKCircleStorage
SOSDictionaryUpdate
SOSTrustedDeviceAttributes
SOSAuthKitHelpers
SOSIntervalEvent
Circle
SOSCircleStorageTransport
SOSKVSCircleStorageTransport
CKKeyParameter
SOSAccountTrust
SOSMessage
PeerRateLimiter
KeychainItem
SOSClientRemote
SOSClient
SOSControlServer
SOSMessageKVS
Identity
stringByReplacingOccurrencesOfString:withString:
count
objectAtIndexedSubscript:
initWithBase64EncodedString:options:
JSONObjectWithData:options:error:
objectForKey:
isEqual:
date
timeIntervalSince1970
doubleValue
stringByAppendingString:
dataUsingEncoding:
bytes
length
dataWithBytes:length:
containsObject:
objectAtIndex:
initWithCapacity:
countByEnumeratingWithState:objects:count:
addObject:
stringByPaddingToLength:withString:startingAtIndex:
arrayWithObjects:count:
componentsSeparatedByString:
diskUsageHigh
TB,R,V_diskUsageHigh
_rusageBaseline
_lastCheckTime
_timer
_runtimeSecondsBeforeWatchdog
_resetPeriod
_checkPeriod
_checkPeriodLeeway
_gracefulExitLeeway
_diskUsageBaseLine
_diskUsageLimit
_diskUsageHigh
init
secondsFromMachTime:
runWatchdog
activateTimer
watchdogParameters
setWatchdogParameters:error:
.cxx_destruct
errorWithDomain:code:userInfo:
dictionaryWithObjects:forKeys:count:
stringWithFormat:
enumerateKeysAndObjectsUsingBlock:
longValue
isEqualToString:
array
numberWithLong:
numberWithUnsignedLongLong:
watchdogrusage:
triggerOSFaults
watchdog
_setFileNameLocalizationEnabled:
sharedManager
currentPersona
userPersonaType
userPersonaNickName
userPersonaUniqueString
UTF8String
transaction
T@"NSObject<OS_os_transaction>",&,V_transaction
_transaction
init:
setTransaction:
verifyBackupIntegrity:completion:
SecItemAddAndNotifyOnSync:syncCallback:complete:
secItemSetCurrentItemAcrossAllDevices:newCurrentItemHash:accessGroup:identifier:viewHint:oldCurrentItemReference:oldCurrentItemHash:complete:
clientHasBooleanEntitlement:
secItemFetchCurrentItemAcrossAllDevices:identifier:viewHint:fetchCloudValue:complete:
secItemDigest:accessGroup:complete:
secKeychainDeleteMultiuser:complete:
secItemVerifyBackupIntegrity:completion:
secItemDeleteForAppClipApplicationIdentifier:completion:
secItemPersistKeychainWritesAtHighPerformanceCost:
manager
completedSecCKKSInitialize
wait:
objectForKeyedSubscript:
mutableCopy
callCallback:error:
setObject:forKeyedSubscript:
errorWithDomain:code:description:
setCurrentItemForAccessGroup:hash:accessGroup:identifier:viewHint:replacing:hash:complete:
findItemPersistentRefByUUID:extraLoggingString:complete:
getCurrentItemForAccessGroup:identifier:viewHint:fetchCloudValue:complete:
connection
T@"NSXPCConnection",W,V_connection
_client
_connection
initWithConnection:
initWithSecurityClient:
dealloc
setConnection:
auditToken
effectiveUserIdentifier
fakeEntitlements
T@"NSMutableDictionary",&,V_fakeEntitlements
_fakeEntitlements
initWithSecurityClient:fakeEntitlements:
setFakeEntitlements:
listener
T@"NSXPCListener",&,V_listener
hash
TQ,R
superclass
T#,R
description
T@"NSString",R,C
debugDescription
_listener
listener:shouldAcceptNewConnection:
class
self
performSelector:
performSelector:withObject:
performSelector:withObject:withObject:
isProxy
isKindOfClass:
isMemberOfClass:
conformsToProtocol:
respondsToSelector:
retain
release
autorelease
retainCount
zone
setListener:
resume
setExportedObject:
configureSecuritydXPCProtocol:
exportedInterface
setExportedInterface:
interfaceWithProtocol:
valueForEntitlement:
setDelegate:
initWithMachServiceName:
hasKey
TB,R,N
T@"NSData",&,N,V_key
hasOptionalParams
optionalParams
T@"NSData",&,N,V_optionalParams
_key
_optionalParams
copyWithZone:
dictionaryRepresentation
readFrom:
writeTo:
copyTo:
mergeFrom:
setKey:
setOptionalParams:
allocWithZone:
setObject:forKey:
dictionary
lockedStates
T@"NSMutableDictionary",R
mutabilityQueue
T@"NSObject<OS_dispatch_queue>",R
keybag_state
trapdoor
setKeybag_state:
reset
isLocked:
isSEPDown
useGenerationCount
lockClassA
lockClassA_C
unlockAllClasses
failNextDecryptRefKey:
popDecryptRefKeyFailure
setOperationsUntilUnlock:
updateOperationsUntilUnlock
removeObjectAtIndex:
removeAllObjects
numberWithInt:
numberWithBool:
boolValue
keyData
T@"NSData",&,V_keyData
T@"_SFAESKey",&,V_key
acmHandle
T@"NSData",&,V_acmHandle
externalData
T@"NSData",&,V_externalData
blob
T@"NSData",&,V_blob
_keyData
_acmHandle
_externalData
_blob
initWithKeyData:parameters:error:
setKeyData:
setAcmHandle:
setExternalData:
setBlob:
data
initWithData:
initWithData:specifier:error:
initWithBitSize:
copy
code
keySpecifier
initWithKeySpecifier:authenticationMode:
encrypt:withKey:error:
archivedDataWithRootObject:requiringSecureCoding:error:
hasExternalData
hasAcmHandle
unarchivedObjectOfClass:fromData:error:
ciphertext
authenticationCode
initializationVector
decrypt:withKey:error:
setAccessGroups:
hasAccessGroups
accessGroups
T@"NSData",&,N,V_accessGroups
T@"NSData",&,N,V_externalData
T@"NSData",&,N,V_acmHandle
_accessGroups
triggerAutoBugCaptureWithType:subType:
triggerAutoBugCaptureWithType:subType:subtypeContext:events:payload:detectedProcess:
string
componentsJoinedByString:
appendString:
compactDescription
removeObjectForKey:
extractObjectForKey:
isEmpty
enumerateObjectsUsingBlock:
containsElementsNotIn:
allObjects
compare:
sortedArrayUsingSelector:
shortDescription
sortedElementsTruncated:JoinedByString:
substringToIndex:
concatenateWithSeparator:
insertObject:atIndex:
sortUsingSelector:
sortedElementsJoinedByString:
dataWithLength:
mutableBytes
replaceBytesInRange:withBytes:length:
dataWithSpace:DEREncode:
currentHandler
handleFailureInFunction:file:lineNumber:description:
stringWithUTF8String:
alert
T@"NSString",&,V_alert
radarDescription
T@"NSString",&,V_radarDescription
radarnumber
T@"NSString",&,V_radarnumber
queue
T@"NSObject<OS_dispatch_queue>",&,V_queue
componentID
T@"NSString",&,V_componentID
componentName
T@"NSString",&,V_componentName
componentVersion
T@"NSString",&,V_componentVersion
_componentID
_componentName
_componentVersion
_alert
_radarDescription
_radarnumber
_queue
initTapToRadar:description:radar:
isRateLimited
updateRetryTimestamp
clearRetryTimestamp
trigger
setComponentID:
setComponentName:
setComponentVersion:
setAlert:
setRadarDescription:
setRadarnumber:
setQueue:
triggerTapToRadar:
askUserIfTTR:
isRateLimited:
keyname:
initWithSuiteName:
dateByAddingTimeInterval:
valueForKey:
disableTTRsEntirely
cuttlefishXPCConnection
T@"<NSXPCProxyCreating>",R,V_cuttlefishXPCConnection
_cuttlefishXPCConnection
pingWithReply:
dumpWithContainer:context:reply:
departByDistrustingSelfWithContainer:context:reply:
distrustPeerIDsWithContainer:context:peerIDs:reply:
trustStatusWithContainer:context:reply:
resetWithContainer:context:resetReason:reply:
localResetWithContainer:context:reply:
setAllowedMachineIDsWithContainer:context:allowedMachineIDs:honorIDMSListChanges:reply:
addAllowedMachineIDsWithContainer:context:machineIDs:reply:
removeAllowedMachineIDsWithContainer:context:machineIDs:reply:
fetchAllowedMachineIDsWithContainer:context:reply:
fetchEgoEpochWithContainer:context:reply:
prepareWithContainer:context:epoch:machineID:bottleSalt:bottleID:modelID:deviceName:serialNumber:osVersion:policyVersion:policySecrets:syncUserControllableViews:secureElementIdentity:signingPrivKeyPersistentRef:encPrivKeyPersistentRef:reply:
prepareInheritancePeerWithContainer:context:epoch:machineID:bottleSalt:bottleID:modelID:deviceName:serialNumber:osVersion:policyVersion:policySecrets:syncUserControllableViews:secureElementIdentity:signingPrivKeyPersistentRef:encPrivKeyPersistentRef:crk:reply:
establishWithContainer:context:ckksKeys:tlkShares:preapprovedKeys:reply:
vouchWithContainer:context:peerID:permanentInfo:permanentInfoSig:stableInfo:stableInfoSig:ckksKeys:reply:
preflightVouchWithBottleWithContainer:context:bottleID:reply:
vouchWithBottleWithContainer:context:bottleID:entropy:bottleSalt:tlkShares:reply:
preflightVouchWithRecoveryKeyWithContainer:context:recoveryKey:salt:reply:
preflightVouchWithCustodianRecoveryKeyWithContainer:context:crk:reply:
vouchWithRecoveryKeyWithContainer:context:recoveryKey:salt:tlkShares:reply:
recoverTLKSharesForInheritorWithContainer:context:crk:tlkShares:reply:
vouchWithCustodianRecoveryKeyWithContainer:context:crk:tlkShares:reply:
joinWithContainer:context:voucherData:voucherSig:ckksKeys:tlkShares:preapprovedKeys:reply:
preflightPreapprovedJoinWithContainer:context:preapprovedKeys:reply:
attemptPreapprovedJoinWithContainer:context:ckksKeys:tlkShares:preapprovedKeys:reply:
updateWithContainer:context:forceRefetch:deviceName:serialNumber:osVersion:policyVersion:policySecrets:syncUserControllableViews:secureElementIdentity:reply:
setPreapprovedKeysWithContainer:context:preapprovedKeys:reply:
updateTLKsWithContainer:context:ckksKeys:tlkShares:reply:
fetchViableBottlesWithContainer:context:reply:
fetchViableEscrowRecordsWithContainer:context:forceFetch:reply:
fetchEscrowContentsWithContainer:context:reply:
fetchPolicyDocumentsWithContainer:context:versions:reply:
fetchRecoverableTLKSharesWithContainer:context:peerID:reply:
fetchCurrentPolicyWithContainer:context:modelIDOverride:isInheritedAccount:reply:
validatePeersWithContainer:context:reply:
fetchTrustStateWithContainer:context:reply:
setRecoveryKeyWithContainer:context:recoveryKey:salt:ckksKeys:reply:
createCustodianRecoveryKeyWithContainer:context:recoveryKey:salt:ckksKeys:uuid:reply:
removeCustodianRecoveryKeyWithContainer:context:uuid:reply:
reportHealthWithContainer:context:stateMachineState:trustState:reply:
pushHealthInquiryWithContainer:context:reply:
requestHealthCheckWithContainer:context:requiresEscrowCheck:reply:
getSupportAppInfoWithContainer:context:reply:
resetAccountCDPContentsWithContainer:context:reply:
removeEscrowCacheWithContainer:context:reply:
fetchAccountSettingsWithContainer:context:reply:
initWithCuttlefishXPCConnection:
retryable:
synchronousRemoteObjectProxyWithErrorHandler:
domain
deps
T@"OTOperationDependencies",&,V_deps
peerMissingState
T@"NSString<OctagonStateString>",&,V_peerMissingState
intendedViewStatus
Ti,V_intendedViewStatus
nextState
T@"NSString<OctagonStateString>",&,V_nextState
intendedState
T@"NSString<OctagonStateString>",R,V_intendedState
_intendedViewStatus
_intendedState
_nextState
_deps
_peerMissingState
T@"NSString<OctagonStateString>",&
T@"NSString<OctagonStateString>",R
setNextState:
initWithDependencies:intendedViewStatus:intendedState:peerMissingState:errorState:
groupStart
performWithStatus:
setDeps:
setPeerMissingState:
setIntendedViewStatus:
post:
notifierClass
setCurrentSyncingPolicy:
ckks
persistAccountChanges:error:
setTPSyncingPolicy:
stateHolder
viewList
peerStatus
handlePendingFlag:
flagHandler
initWithFlag:conditions:
isLockedError:
error
lockStateTracker
setError:
contextID
containerName
cuttlefishXPCWrapper
uuid
T@"NSString",&,N,V_uuid
zoneName
T@"NSString",&,N,V_zoneName
keyclass
T@"NSString",&,N,V_keyclass
_keyclass
_uuid
_zoneName
setUuid:
setZoneName:
setKeyclass:
hasPeerID
peerID
T@"NSString",&,N,V_peerID
hasIcloudAccountState
TB,N
icloudAccountState
Ti,N,V_icloudAccountState
hasEpoch
epoch
Tq,N,V_epoch
hasAltDSID
altDSID
T@"NSString",&,N,V_altDSID
hasTrustState
trustState
Ti,N,V_trustState
hasLastHealthCheckup
lastHealthCheckup
TQ,N,V_lastHealthCheckup
hasAttemptedJoin
attemptedJoin
Ti,N,V_attemptedJoin
hasCdpState
cdpState
Ti,N,V_cdpState
hasSyncingPolicy
syncingPolicy
T@"NSData",&,N,V_syncingPolicy
hasVoucher
voucher
T@"NSData",&,N,V_voucher
hasVoucherSignature
voucherSignature
T@"NSData",&,N,V_voucherSignature
tlkSharesForVouchedIdentitys
T@"NSMutableArray",&,N,V_tlkSharesForVouchedIdentitys
hasSecureElementIdentity
secureElementIdentity
T@"NSData",&,N,V_secureElementIdentity
hasFetchedChangesOnOSSupportingCustodian
fetchedChangesOnOSSupportingCustodian
TB,N,V_fetchedChangesOnOSSupportingCustodian
hasIsInheritedAccount
isInheritedAccount
TB,N,V_isInheritedAccount
hasWarmedEscrowCache
warmedEscrowCache
TB,N,V_warmedEscrowCache
hasWarnedTooManyPeers
warnedTooManyPeers
TB,N,V_warnedTooManyPeers
_epoch
_lastHealthCheckup
_altDSID
_attemptedJoin
_cdpState
_icloudAccountState
_peerID
_secureElementIdentity
_syncingPolicy
_tlkSharesForVouchedIdentitys
_trustState
_voucher
_voucherSignature
_fetchedChangesOnOSSupportingCustodian
_isInheritedAccount
_warmedEscrowCache
_warnedTooManyPeers
_has
setIcloudAccountState:
setHasIcloudAccountState:
icloudAccountStateAsString:
StringAsIcloudAccountState:
setEpoch:
setHasEpoch:
setTrustState:
setHasTrustState:
trustStateAsString:
StringAsTrustState:
setLastHealthCheckup:
setHasLastHealthCheckup:
setAttemptedJoin:
setHasAttemptedJoin:
attemptedJoinAsString:
StringAsAttemptedJoin:
setCdpState:
setHasCdpState:
cdpStateAsString:
StringAsCdpState:
clearTlkSharesForVouchedIdentitys
addTlkSharesForVouchedIdentity:
tlkSharesForVouchedIdentitysCount
tlkSharesForVouchedIdentityAtIndex:
setFetchedChangesOnOSSupportingCustodian:
setHasFetchedChangesOnOSSupportingCustodian:
setIsInheritedAccount:
setHasIsInheritedAccount:
setWarmedEscrowCache:
setHasWarmedEscrowCache:
setWarnedTooManyPeers:
setHasWarnedTooManyPeers:
setPeerID:
setAltDSID:
setSyncingPolicy:
setVoucher:
setVoucherSignature:
setTlkSharesForVouchedIdentitys:
setSecureElementIdentity:
numberWithLongLong:
tlkSharesForVouchedIdentityType
safeErrorClasses
restore:dsid:secret:escrowRecordID:reply:
joinWithCustodianRecoveryKey:contextID:custodianRecoveryKey:reply:
removeCustodianRecoveryKey:contextID:uuid:reply:
createInheritanceKey:contextID:uuid:reply:
joinWithInheritanceKey:contextID:inheritanceKey:reply:
removeInheritanceKey:contextID:uuid:reply:
signIn:container:context:reply:
signOut:context:reply:
notifyIDMSTrustLevelChangeForContainer:context:reply:
reset:
handleIdentityChangeForSigningKey:ForEncryptionKey:ForPeerID:reply:
rpcEpochWithConfiguration:reply:
rpcPrepareIdentityAsApplicantWithConfiguration:reply:
rpcVoucherWithConfiguration:peerID:permanentInfo:permanentInfoSig:stableInfo:stableInfoSig:reply:
rpcJoinWithConfiguration:vouchData:vouchSig:reply:
preflightBottledPeer:dsid:reply:
setClasses:forSelector:argumentIndex:ofReply:
launchBottledPeer:bottleID:reply:
scrubBottledPeer:bottleID:reply:
status:context:reply:
fetchEgoPeerID:context:reply:
fetchCliqueStatus:context:configuration:reply:
fetchTrustStatus:context:configuration:reply:
startOctagonStateMachine:context:reply:
resetAndEstablish:context:altDSID:resetReason:reply:
establish:context:altDSID:reply:
leaveClique:context:reply:
octagonEncryptionPublicKey:
removeFriendsInClique:context:peerIDs:reply:
peerDeviceNamesByPeerID:context:reply:
fetchAllViableBottles:context:reply:
restore:contextID:bottleSalt:entropy:bottleID:reply:
fetchEscrowContents:contextID:reply:
createRecoveryKey:contextID:recoveryKey:reply:
joinWithRecoveryKey:contextID:recoveryKey:reply:
healthCheck:context:skipRateLimitingCheck:reply:
waitForOctagonUpgrade:context:reply:
postCDPFollowupResult:type:error:containerName:contextName:reply:
octagonSigningPublicKey:
tapToRadar:description:radar:reply:
refetchCKKSPolicy:contextID:reply:
setCDPEnabled:contextID:reply:
getCDPStatus:contextID:reply:
fetchEscrowRecords:contextID:forceFetch:reply:
setUserControllableViewsSyncStatus:contextID:enabled:reply:
fetchUserControllableViewsSyncStatus:contextID:reply:
resetAccountCDPContents:contextID:reply:
setLocalSecureElementIdentity:contextID:secureElementIdentity:reply:
removeLocalSecureElementIdentityPeerID:contextID:secureElementIdentityPeerID:reply:
listOfEligibleBottledPeerRecords:
fetchTrustedSecureElementIdentities:contextID:reply:
fetchAccountSettings:contextID:reply:
fetchAccountWideSettings:contextID:reply:
waitForPriorityViewKeychainDataRecovery:contextID:reply:
createCustodianRecoveryKey:contextID:uuid:reply:
T@"CKKSKeychainView",&,V_ckks
viewFilter
T@"NSSet",&,V_viewFilter
fetchBeforeGettingKeyset
TB,V_fetchBeforeGettingKeyset
viewKeySets
T@"NSArray",&,V_viewKeySets
incompleteKeySets
T@"NSArray",&,V_incompleteKeySets
pendingTLKShares
T@"NSArray",&,V_pendingTLKShares
zonesTimedOutWithoutKeysets
T@"NSSet",&,V_zonesTimedOutWithoutKeysets
desiredTimeout
TQ,V_desiredTimeout
_fetchBeforeGettingKeyset
_viewKeySets
_incompleteKeySets
_pendingTLKShares
_zonesTimedOutWithoutKeysets
_desiredTimeout
_ckks
_viewFilter
initWithDependencies:refetchNeeded:
initWithDependencies:viewsToFetch:
setViewKeySets:
setIncompleteKeySets:
setPendingTLKShares:
setZonesTimedOutWithoutKeysets:
setDesiredTimeout:
setCkks:
setViewFilter:
setFetchBeforeGettingKeyset:
runBeforeGroupFinished:
addDependency:
named:withBlock:
share
zoneID
asKeychainBackedSet:
allKeys
keysets
unionSet:
intendedZoneIDs
timeout:
findKeySets:
finishedOp
T@"NSOperation",&,V_finishedOp
_finishedOp
initWithDependencies:intendedState:errorState:
setFinishedOp:
dependOnBeforeGroupFinished:
errorWithDomain:code:description:underlying:
boolForKey:
setWithArray:
stringValue
T@"NSString",&,V_stringValue
_stringValue
asBOOL
asNSInteger
asString
asNSNumberInteger
asISO8601Date
asBase64DecodedData
setStringValue:
dateFromString:
numberWithInteger:
integerValue
sqlOp
TQ,V_sqlOp
value
T@"NSString",&,V_value
_sqlOp
_value
initWithOperation:value:
setSqlOp:
setValue:
op:value:
columnName
TQ,V_columnName
_columnName
initWithOperation:columnName:
setColumnName:
op:column:
values
T@"NSArray",&,V_values
_values
initWithValues:
setValues:
originalSelfWhereClause
T@"NSDictionary",C,V_originalSelfWhereClause
_originalSelfWhereClause
saveToDatabase:
saveToDatabaseWithConnection:error:
deleteFromDatabase:
memoizeOriginalSelfWhereClause
sqlValues
whereClauseToFindSelf
setOriginalSelfWhereClause:
exceptionWithName:reason:userInfo:
deleteFromTable:where:connection:error:
sqlTable
saveToDatabaseTable:row:connection:error:
isEqualToDictionary:
makeWhereClause:
groupByClause:
orderByClause:
bindWhereClause:whereDict:cferror:
queryDatabaseTable:where:columns:groupBy:orderBy:limit:processRow:error:
quotedString:
queryMaxValueForField:inTable:where:columns:processRow:
performCKKSTransaction:
deleteAll:
fromDatabaseWhere:error:
tryFromDatabaseWhere:error:
all:
allWhere:error:
fetch:error:
fetch:where:error:
fetch:where:orderBy:error:
fromDatabaseRow:
sqlColumns
initWithFormat:
stringByAppendingFormat:
appendFormat:
arrayWithCapacity:
config
T@"NSDictionary",&,V_config
buckets
T@"NSMutableDictionary",&,V_buckets
overloadUntil
T@"NSDate",&,V_overloadUntil
_config
_buckets
_overloadUntil
supportsSecureCoding
TB,R
encodeWithCoder:
initWithCoder:
rate:
capacity:
consumeTokenFromBucket:type:at:
judge:at:limitTime:
stateSize
trim:
diagnostics
topOffendingAccessGroups:
setConfig:
setBuckets:
setOverloadUntil:
subarrayWithRange:
reverseObjectEnumerator
keysSortedByValueUsingSelector:
dictionaryWithObjects:forKeys:
objectsForKeys:notFoundMarker:
keysOfEntriesPassingTest:
timeIntervalSinceDate:
hasPrefix:
encodeObject:forKey:
removeObjectsForKeys:
unsignedIntValue
intValue
laterDate:
accessgroup
dictionaryWithObjectsAndKeys:
decodeObjectOfClasses:forKey:
setWithObjects:
T@"CKKSLockStateTracker",&,V_lockStateTracker
haveRecordedDate
TB,V_haveRecordedDate
stateMachine
T@"OctagonStateMachine",&,V_stateMachine
forceIgnoreCloudServicesRateLimiting
TB,V_forceIgnoreCloudServicesRateLimiting
_forceIgnoreCloudServicesRateLimiting
_haveRecordedDate
_stateMachine
_lockStateTracker
_onqueueNextStateMachineTransition:flags:pendingFlags:
initWithLockStateTracker:
triggerEscrowUpdateRPC:reply:
storePrerecordsInEscrowRPC:
setStateMachine:
setForceIgnoreCloudServicesRateLimiting:
setLockStateTracker:
setHaveRecordedDate:
doSimpleStateMachineRPC:op:sourceStates:reply:
numberOfRecordsUploaded
setWithObject:
startOperation
initWithIntendedState:errorState:enforceRateLimiting:lockStateTracker:
handleFlag:
setDateProperty:forKey:
logger
setTriggerRequestTime:
UUIDString
UUID
saveToKeychain:
setSerializedPrerecord:
setHasCertCached:
uploadCompleted
loadAllFromKeychain:
escrowAttemptedWithinLastSeconds:
hasSerializedPrerecord
lastCloudServicesTriggerTime
hasLastCloudServicesTriggerTime
certCached
datePropertyForKey:
hasUploadCompleted
addNullableDependency:
unlockDependency
named:entering:
initWithIntendedState:errorState:lockStateTracker:
_onqueueRemoveFlag:
_onqueueContains:
initWithName:states:flags:initialState:queue:stateEngine:lockStateTracker:reachabilityTracker:
deviceNameUpdateListeners
T@"CKKSListenerCollection",&,V_deviceNameUpdateListeners
store
T^{__SCDynamicStore=},V_store
_deviceNameUpdateListeners
_store
modelID
deviceName
osVersion
serialNumber
registerForDeviceNameUpdates:
setupDeviceNameListener
setDeviceNameUpdateListeners:
setStore:
deviceNameUpdated
iterateListeners:
initWithName:
registerListener:
aksEncryptWithKeybag:keyclass:plaintext:outKeyclass:ciphertext:personaId:personaIdLength:error:
aksDecryptWithKeybag:keyclass:ciphertext:outKeyclass:plaintext:personaId:personaIdLength:error:
nsnotificationCenterClass
T#,R,V_nsnotificationCenterClass
ckChangeListeners
T@"NSMapTable",&,V_ckChangeListeners
container
T@"CKContainer",&,V_container
firstCKAccountFetch
TB,V_firstCKAccountFetch
octagonStatus
T@"OTCliqueStatusWrapper",&,V_octagonStatus
octagonPeerID
T@"NSString",&,V_octagonPeerID
octagonInformationInitialized
T@"CKKSCondition",&,V_octagonInformationInitialized
hsa2iCloudAccountStatus
Tq,V_hsa2iCloudAccountStatus
hsa2iCloudAccountInitialized
T@"CKKSCondition",&,V_hsa2iCloudAccountInitialized
finishedInitialDispatches
T@"CKKSCondition",&,V_finishedInitialDispatches
fetchCKAccountStatusScheduler
T@"CKKSNearFutureScheduler",R,V_fetchCKAccountStatusScheduler
currentCKAccountInfo
T@"CKAccountInfo",&,V_currentCKAccountInfo
ckAccountInfoInitialized
T@"CKKSCondition",&,V_ckAccountInfoInitialized
ckdeviceID
T@"NSString",C,V_ckdeviceID
ckdeviceIDError
T@"NSError",&,V_ckdeviceIDError
ckdeviceIDInitialized
T@"CKKSCondition",&,V_ckdeviceIDInitialized
currentCircleStatus
T@"SOSAccountStatus",&,V_currentCircleStatus
accountCirclePeerID
T@"NSString",&,V_accountCirclePeerID
accountCirclePeerIDError
T@"NSError",&,V_accountCirclePeerIDError
accountCirclePeerIDInitialized
T@"CKKSCondition",&,V_accountCirclePeerIDInitialized
_firstCKAccountFetch
_octagonPeerID
_finishedInitialDispatches
_fetchCKAccountStatusScheduler
_currentCKAccountInfo
_ckAccountInfoInitialized
_ckdeviceID
_ckdeviceIDError
_ckdeviceIDInitialized
_currentCircleStatus
_accountCirclePeerID
_accountCirclePeerIDError
_accountCirclePeerIDInitialized
_octagonStatus
_octagonInformationInitialized
_hsa2iCloudAccountStatus
_hsa2iCloudAccountInitialized
_nsnotificationCenterClass
_ckChangeListeners
_container
T@"OTCliqueStatusWrapper",R
T@"NSString",R
triggerOctagonStatusFetch
setHSA2iCloudAccountStatus:
T@"NSString",C
registerForNotificationsOfCloudKitAccountStatusChange:
notifyCKAccountStatusChangeAndWait:
recheckCKAccountStatus
setCkdeviceID:
init:nsnotificationCenterClass:
performInitialDispatches
descriptionInternal:
notifyCKAccountStatusChange:
_onqueueUpdateCKDeviceID:
notifyCircleChange:
_onqueueUpdateCirclePeerID:
_onqueueUpdateAccountState:deliveredSemaphore:
_onqueueUpdateAccountState:dispatchGroup:
_onqueueDeliverCloudKitStateChanges:dispatchGroup:
_onqueueDeliverCurrentCloudKitState:listenerQueue:oldStatus:group:
notifyCKAccountStatusChangeAndWaitForSignal
notifyCircleStatusChangeAndWaitForSignal
checkForAllDeliveries
setOctagonPeerID:
setFinishedInitialDispatches:
setCurrentCKAccountInfo:
setCkAccountInfoInitialized:
setCkdeviceIDError:
setCkdeviceIDInitialized:
setCurrentCircleStatus:
setAccountCirclePeerID:
setAccountCirclePeerIDError:
setAccountCirclePeerIDInitialized:
setOctagonStatus:
setOctagonInformationInitialized:
setHsa2iCloudAccountStatus:
setHsa2iCloudAccountInitialized:
setCkChangeListeners:
setContainer:
setFirstCKAccountFetch:
fulfill
initToChain:
initWithStatus:
status
Tq,R,V_status
_status
setTimeoutWaitForCKAccount:
nextObject
keyEnumerator
cloudkitAccountStateChange:to:
fetchCirclePeerID:
getCircleStatus
fetchCurrentDeviceIDWithCompletionHandler:
accountStatus
accountInfoWithCompletionHandler:
objectEnumerator
removeObserver:
defaultCenter
initWithName:initialDelay:expontialBackoff:maximumDelay:keepProcessAlive:dependencyDescriptionCode:block:
addObserver:selector:name:object:
init:error:
Ti,V_status
T@"NSError",&,V_error
_error
setStatus:
strongToWeakObjectsMapTable
stringFromAccountStatus:
controller
T@"EscrowRequestController",&,V_controller
_controller
request:
triggerEscrowUpdate:error:
fetchStatuses:
pendingEscrowUpload:
triggerEscrowUpdate:reply:
cachePrerecord:serializedPrerecord:reply:
fetchPrerecord:reply:
fetchRequestWaitingOnPasscode:
fetchRequestStatuses:
resetAllRequests:
storePrerecordsInEscrow:
setupAnalytics
setController:
fuzzyDaysSinceDate:
AddMultiSamplerForName:withTimeInterval:block:
deleteFromKeychain:
serializedPrerecord
loadFromKeychain:error:
pokeStateMachine
allValues
server
globalTracker
T@"_SFAuthenticatedCiphertext",R,V_ciphertext
wrappedKeyData
T@"NSData",R,V_wrappedKeyData
refKeyBlob
T@"NSData",R,V_refKeyBlob
_ciphertext
_wrappedKeyData
_refKeyBlob
initWithCiphertext:wrappedKeyData:refKeyBlob:
failWithError:
decodeObjectOfClass:forKey:
T@"NSData",R
_refKey
initWithKeybag:keyclass:
initWithBlob:keybag:
wrappedDataForKey:
keyWithWrappedData:
dataWithBytesNoCopy:length:
_persistentStoreBaseURL
_persistentStoreCoordinator
_managedObjectContext
_managedItemTypeDict
_itemTypeDict
_encryptDatabase
_classAPersistentStores
initWithStorageURL:modelURL:encryptDatabase:
_onQueueGetDatabaseKeyDataWithError:
_onQueueGetManagedObjectContextWithError:
_onQueueDropClassAPersistentStore
performOnManagedObjectQueue:
performOnManagedObjectQueueAndWait:
primaryKeyNameForItemTypeName:
validateItemOwner:withConnection:withError:
insertItems:withConnection:completionHandler:
fetchManagedItemForPersistentID:withManagedObjectContext:error:
fetchItemForPersistentID:withConnection:completionHandler:
fetchItemsWithValue:forLookupKey:ofType:withConnection:completionHandler:
deleteItemWithPersistentID:withConnection:completionHandler:
registerItemType:withManagedObjectContext:
_registerItemTypeForTesting:
itemTypeForItemTypeName:
managedItemWithItem:withManagedObjectContext:error:
setData:
encryptedSecretDataWithAttributeData:keybag:error:
addAccessedItemsObject:
addOwnedItemsObject:
setOwner:
setStringRepresentation:
stringRepresentation
setType:
entityType
owner
setMetadata:
dataWithPropertyList:format:options:error:
attributes
setPersistentID:
persistentID
metadata
setItemType:
version
name
itemType
insertNewObjectForEntityForName:inManagedObjectContext:
save:
managedItemTypeWithContext:error:
accessControlList
accessedItems
ownedItems
removeAccessedItemsObject:
removeOwnedItemsObject:
deleteObject:
matchingItems
removeMatchingItemsObject:
lookupEntries
initWithManagedEntity:
Tq,R,N,V_entityType
T@"NSString",R,N,V_stringRepresentation
_entityType
_stringRepresentation
_initWithEntityType:stringRepresentation:
type
accessControlEntityWithType:stringRepresentation:
lookupAttributesSet
T@"NSSet",R,C,V_lookupAttributes
managedDataBlob
T@"NSData",R,C,V_managedDataBlob
T@"SecCDKeychainItemType",R,V_itemType
T@"SecCDKeychainAccessControlEntity",R,V_owner
T@"NSUUID",R,V_persistentID
T@"NSDictionary",R,C,V_attributes
lookupAttributes
T@"NSArray",R,C
Ti,R,V_keyclass
_itemType
_owner
_persistentID
_attributes
_lookupAttributes
_managedDataBlob
initWithItemType:persistentID:attributes:lookupAttributes:owner:keyclass:
initWithManagedItem:keychain:error:
fetchFullItemWithKeychain:withConnection:completionHandler:
primaryKeys
T@"NSString",R,C,V_key
T@"<NSCopying><NSObject>",R,C,V_value
valueType
T@"NSString<SecCDKeychainLookupValueType>",R,C,V_valueType
_valueType
initWithKey:value:
base64EncodedStringWithOptions:
lookupValueTypeForObject:
lookupTupleWithKey:value:
lookupTupleWithManagedLookupEntry:
lookupKey
lookupValueType
lookupValue
systemEntry
propertyListWithData:options:format:error:
executeFetchRequest:error:
setPredicate:
predicateWithFormat:
fetchRequest
T@"SecCDKeychainItemType",R
T@"SecCDKeychainAccessControlEntity",R
T@"NSUUID",R
T@"NSDictionary",R
T@"NSArray",R
secrets
T@"NSDictionary",R,V_secrets
T@"SecCDKeychainItemMetadata",R,V_metadata
_metadata
_encryptedSecretData
_secrets
initItemType:withPersistentID:attributes:lookupAttributes:secrets:owner:keyclass:
primaryKeyStringRepresentationWithError:
secretsFromEncryptedData:withKeybag:error:
decrypt:withKey:additionalAuthenticatedData:error:
digest:
initWithKeySpecifier:
encrypt:withKey:additionalAuthenticatedData:error:
initRandomKeyWithSpecifier:error:
hashValue
addData:
compare:options:
sortedArrayUsingComparator:
firstObject
addMatchingItemsObject:
setSystemEntry:
setLookupValueType:
setLookupValue:
setLookupKey:
setItemTypeName:
clientAccessGroups
performBlockAndWait:
performBlock:
removePersistentStore:error:
setPersistentStoreCoordinator:
initWithConcurrencyType:
addPersistentStoreWithType:configuration:URL:options:error:
URLByAppendingPathExtension:
_newZeroingDataWithBytesNoCopy:length:deallocator:
initWithManagedObjectModel:
initWithContentsOfURL:
T@"NSString",R,C,V_name
Ti,R,V_version
syncableKeys
managedItemType
T@"SecCDKeychainManagedItemType",R,V_managedItemType
_name
_version
_primaryKeys
_syncableKeys
_managedItemType
_initWithName:version:primaryKeys:syncableKeys:
setSyncableKeys:
setPrimaryKeys:
setVersion:
setName:
isEqualToSet:
itemTypeForVersion:
encryptionIdentity
T@"_SFIdentity",&,V_encryptionIdentity
signingIdentity
T@"_SFIdentity",&,V_signingIdentity
encryptionKey
T@"_SFECKeyPair",R
signingKey
T@"NSString",R,V_peerID
publicEncryptionKey
T@"_SFECPublicKey",R
publicSigningKey
_encryptionIdentity
_signingIdentity
matchesPeer:
initWithPeerID:signingIdentity:encryptionIdentity:
setEncryptionIdentity:
setSigningIdentity:
keyPair
publicKey
peerChangeListeners
T@"CKKSListenerCollection",&,V_peerChangeListeners
T@"NSString",&,V_peerID
T@"CuttlefishXPCWrapper",R,V_cuttlefishXPCWrapper
T@"NSString",R,V_containerName
T@"NSString",R,V_contextID
providerID
T@"NSString",R,V_providerID
essential
TB,V_essential
_essential
_providerID
_cuttlefishXPCWrapper
_containerName
_contextID
_peerChangeListeners
fetchSelfPeers:
fetchTrustedPeers:
registerForPeerChangeUpdates:
sendSelfPeerChangedUpdate
sendTrustedPeerSetChangedUpdate
currentState
setEssential:
initWithPeerID:containerName:contextID:cuttlefishXPC:
fetchIdentity:error:
setPeerChangeListeners:
createFromProvider:
trustedPeerSetChanged:
selfPeerChanged:
initWithPeerID:encryptionPublicKey:signingPublicKey:viewList:
encryptionSPKI
keyWithSubjectPublicKeyInfo:
signingSPKI
initWithCurrent:allSelves:
identityForIdentifier:resultHandler:
resultType
defaultOverCommitManager
finishOp
T@"NSOperation",&,V_finishOp
requiresEscrowCheck
TB,V_requiresEscrowCheck
deviceInfo
T@"OTDeviceInformation",&,V_deviceInfo
cuttlefishContext
T@"OTCuttlefishContext",W,V_cuttlefishContext
skipRateLimitingCheck
TB,V_skipRateLimitingCheck
postRepairCFU
TB,V_postRepairCFU
postEscrowCFU
TB,V_postEscrowCFU
resetOctagon
TB,V_resetOctagon
leaveTrust
TB,V_leaveTrust
_skipRateLimitingCheck
_postRepairCFU
_postEscrowCFU
_resetOctagon
_leaveTrust
_requiresEscrowCheck
_deviceInfo
_cuttlefishContext
_finishOp
initWithDependencies:intendedState:errorState:deviceInfo:skipRateLimitedCheck:
checkIfPasscodeIsSetForDevice
handleRepairSuggestions:postEscrowCFU:resetOctagon:leaveTrust:
setDeviceInfo:
setCuttlefishContext:
setSkipRateLimitingCheck:
setPostRepairCFU:
setPostEscrowCFU:
setResetOctagon:
setLeaveTrust:
setFinishOp:
setRequiresEscrowCheck:
persistLastHealthCheck:error:
dateByAddingComponents:toDate:options:
currentCalendar
setHour:
lastHealthCheckupDate:
T@"NSMutableDictionary",&,V_store
delete
T@"NSMutableDictionary",&,V_delete
_delete
addToStatsDictionary:key:
storedOQE:
deletedOQE:
summary:stats:
commit
setDelete:
CKKSPowerEvent:zone:
CKKSPowerEvent:zone:count:
CKKSPowerEvent:count:
OTPowerEvent:
numberWithUnsignedInteger:
gbmidRamp
T@"OTRamp",&,N,V_gbmidRamp
gbserialRamp
T@"OTRamp",&,N,V_gbserialRamp
gbAgeRamp
T@"OTRamp",&,N,V_gbAgeRamp
T@"CKKSLockStateTracker",&,N,V_lockStateTracker
cdpd
T@"<OctagonFollowUpControllerProtocol>",&,N,V_cdpd
contexts
T@"NSMutableDictionary",&,V_contexts
clients
T@"NSMutableDictionary",&,V_clients
T@"<NSXPCProxyCreating>",&,V_cuttlefishXPCConnection
sosAdapter
T@"<OTSOSAdapter>",R,V_sosAdapter
authKitAdapter
T@"<OTAuthKitAdapter>",R,V_authKitAdapter
tooManyPeersAdapter
T@"<OTTooManyPeersAdapter>",R,V_tooManyPeersAdapter
deviceInformationAdapter
T@"<OTDeviceInformationAdapter>",R,V_deviceInformationAdapter
apsConnectionClass
T#,R,V_apsConnectionClass
escrowRequestClass
T#,R,V_escrowRequestClass
T#,R,V_notifierClass
loggerClass
T#,R,V_loggerClass
sosEnabledForPlatform
TB,N,V_sosEnabledForPlatform
accountStateTracker
T@"CKKSAccountStateTracker",&,V_accountStateTracker
reachabilityTracker
T@"CKKSReachabilityTracker",&,V_reachabilityTracker
cloudKitContainer
T@"CKContainer",R,V_cloudKitContainer
viewManager
T@"CKKSViewManager",&,V_viewManager
_sosEnabledForPlatform
_sosAdapter
_authKitAdapter
_deviceInformationAdapter
_accountStateTracker
_reachabilityTracker
_cloudKitContainer
_viewManager
_gbmidRamp
_gbserialRamp
_gbAgeRamp
_cdpd
_contexts
_clients
_tooManyPeersAdapter
_apsConnectionClass
_escrowRequestClass
_notifierClass
_loggerClass
invalidateEscrowCache:contextID:reply:
initWithSOSAdapter:authKitAdapter:tooManyPeersAdapter:deviceInformationAdapter:apsConnectionClass:escrowRequestClass:notifierClass:loggerClass:lockStateTracker:reachabilityTracker:cloudKitClassDependencies:cuttlefishXPCConnection:cdpd:
initWithSOSAdapter:lockStateTracker:cloudKitClassDependencies:
initializeOctagon
waitForReady:context:wait:
moveToCheckTrustedStateForContainer:context:
registerForCircleChangedNotifications
ensureRampsInitialized
setCuttlefishXPCConnection:
clientStateMachineForContainerName:contextID:clientName:
removeClientContextForContainerName:clientName:
removeContextForContainerName:contextID:
contextForContainerName:contextID:
contextForContainerName:contextID:sosAdapter:authKitAdapter:tooManyPeersAdapter:lockStateTracker:accountStateTracker:deviceInformationAdapter:
clearAllContexts
ghostbustByMidEnabled
ghostbustBySerialEnabled
ghostbustByAgeEnabled
cdpContextTypes
xpc24HrNotification
setSOSEnabledForPlatformFlag:
allContextsHalt
allContextsDisablePendingFlags
allContextsPause:
setAccountStateTracker:
setReachabilityTracker:
setViewManager:
setGbmidRamp:
setGbserialRamp:
setGbAgeRamp:
setCdpd:
setContexts:
setClients:
setSosEnabledForPlatform:
rpcAccountWideSettings:
rpcFetchAccountSettings:
rpcFetchTrustedSecureElementIdentities:
rpcRemoveLocalSecureElementIdentityPeerID:reply:
rpcSetLocalSecureElementIdentity:reply:
rpcResetAccountCDPContents:
rpcFetchUserControllableViewsSyncingStatus:
rpcSetUserControllableViewsSyncingStatus:reply:
rpcInvalidateEscrowCache:
rpcFetchAllViableEscrowRecords:reply:
setCDPEnabled:
getCDPStatus:
rpcRefetchCKKSPolicy:
setNumberProperty:forKey:
incrementIntegerPropertyForKey:
logResultForEvent:hardFailure:result:
rpcWaitForPriorityViewKeychainDataRecovery:
startOctagonStateMachine
waitForOctagonUpgrade:
pendingEscrowCacheWarmup
paused
disablePendingFlags
clearCKKS
haltOperation
checkOctagonHealth:reply:
notifyContainerChange:
rpcRemoveInheritanceKeyWithUUID:reply:
stopWithEvent:result:
startLogSystemMetricsForActivityNamed:
joinWithInheritanceKey:reply:
rpcCreateInheritanceKeyWithUUID:reply:
rpcRemoveCustodianRecoveryKeyWithUUID:reply:
joinWithCustodianRecoveryKey:reply:
rpcCreateCustodianRecoveryKeyWithUUID:reply:
joinWithRecoveryKey:reply:
rpcResetAndEstablish:reply:
rpcSetRecoveryKey:reply:
sfaStatus
followupHandler
getAcceptedTermsForAltDSID:withError:
aa_altDSID
isEnabledForDataclass:
isProvisionedForDataclass:
aa_primaryAppleAccount
numberPropertyForKey:
numberWithUnsignedLong:
viablePeerCountsByModelID
egoPeerMachineID
peerCountsByMachineID
egoPeerStatus:
machineIDOnMemoizedList:error:
machineID:
currentMemoizedLastHealthCheck
syncUserControllableViewsAsBoolean
getTPSyncingPolicy
loadOrCreateAccountMetadata:
accountMetadataStore
OctagonStateMap
circleStatus:
checkRampStateWithError:
joinWithBottle:entropy:bottleSalt:reply:
rpcVoucher:peerID:permanentInfo:permanentInfoSig:stableInfo:stableInfoSig:reply:
pairingUUID
requestTrustedDeviceListRefresh
rpcEpoch:reply:
rpcJoin:vouchSig:reply:
clearPairingUUID
handlePairingRestart:
rpcPrepareIdentityAsApplicantWithConfiguration:epoch:reply:
fetchEscrowContents:
rpcFetchAllViableBottles:
rpcFetchDeviceNamesByPeerID:
rpcRemoveFriendsInClique:reply:
rpcLeaveClique:
rpcEstablish:reply:
rpcStatus:
rpcTrustStatus:reply:
rpcFetchEgoPeerID:
initWithContainerName:contextID:cuttlefish:ckksAccountSync:sosAdapter:authKitAdapter:tooManyPeersAdapter:lockStateTracker:reachabilityTracker:accountStateTracker:deviceInformationAdapter:apsConnectionClass:escrowRequestClass:notifierClass:cdpd:
ckksAccountSyncForContainer:contextID:
initWithContainerName:contextID:clientName:cuttlefish:
setRemoteObjectInterface:
initWithServiceName:
idmsTrustLevelChanged:
accountNoLongerAvailable:
accountAvailable:error:
initWithRecordName:localSettingName:container:database:zoneID:accountTracker:lockStateTracker:reachabilityTracker:fetchRecordRecordsOperationClass:
accountTracker
initWithZoneName:ownerName:
privateCloudDatabase
moveToCheckTrustedState
waitForReady:
initWithContainer:sosAdapter:accountStateTracker:lockStateTracker:reachabilityTracker:cloudKitClassDependencies:
makeCKContainer:usePCS:
forLiveCloudKit
initAsEssential:
resetManager:to:
fillInError
TB,V_fillInError
T@"NSBlockOperation",&,V_startOperation
finishOperation
T@"NSBlockOperation",&,V_finishOperation
internalSuccesses
T@"NSMutableArray",&,V_internalSuccesses
operationQueue
T@"NSOperationQueue",&,V_operationQueue
executing
finished
_fillInError
_operationQueue
_startOperation
_finishOperation
_internalSuccesses
isPending
isConcurrent
isExecuting
isFinished
start
cancel
completeOperation
setOperationQueue:
setFillInError:
setStartOperation:
setFinishOperation:
setInternalSuccesses:
isCancelled
addOperation:
didChangeValueForKey:
allSuccessful:
willChangeValueForKey:
removeDependency:
dependencies
operations
blockOperationWithBlock:
invalidateTimeout
pendingDependenciesString:
indexOfObject:
removeObject:
operationCount
finishDate
selfname
operationStateString
cancelAllOperations
removeDependenciesUponCompletion
allDependentsSuccessful
operationWithBlock:
named:withBlockTakingSelf:
T@"NSString",R,N,V_zoneName
derData
T@"NSData",R,N
T@"NSString",R,N,V_uuid
digestValue
recordDigestDict
T@"NSDictionary",R,N,V_recordDigestDict
_recordDigestDict
_derData
_digestValue
initWithCKRecord:
initWithUUID:digest:recordDigestDict:zone:
initWithUUID:digest:recordDigestDict:zone:encodedRecord:
CKRecordName
ckRecordType
updateCKRecord:zoneID:
setFromCKRecord:
matchesCKRecord:
clearDigest
handleFailureInMethod:object:file:lineNumber:description:
recordType
leafUUIDForRecordID:
recordName
recordID
setStoredCKRecord:
null
encodedCKRecord
setEncodedCKRecord:
containsString:
recordExistsForID:
leafRecordForID:error:
tryLeafRecordForID:error:
leafRecordForPendingRecord:
commitToDatabaseWithError:
intransactionRecordChanged:resync:error:
newLeafRecordInZone:
T@"NSMutableDictionary",R,D,N
addOrUpdateRecordUUID:withEncryptedItemData:
addOrUpdateRecord:
deleteItemWithUUID:
T@"NSString",C,V_uuid
parentKeyUUID
T@"NSString",C,V_parentKeyUUID
encitem
T@"NSData",C,V_encitem
base64encitem
T@"NSString",&,Gbase64Item,SsetBase64Item:
wrappedkey
T@"CKKSWrappedAESSIVKey",C,V_wrappedkey
generationCount
TQ,V_generationCount
encver
TQ,V_encver
plaintextPCSServiceIdentifier
T@"NSNumber",&,V_plaintextPCSServiceIdentifier
plaintextPCSPublicKey
T@"NSData",&,V_plaintextPCSPublicKey
plaintextPCSPublicIdentity
T@"NSData",&,V_plaintextPCSPublicIdentity
_parentKeyUUID
_encitem
_wrappedkey
_generationCount
_encver
_plaintextPCSServiceIdentifier
_plaintextPCSPublicKey
_plaintextPCSPublicIdentity
initCopyingCKKSItem:
initWithUUID:parentKeyUUID:zoneID:
initWithUUID:parentKeyUUID:zoneID:encItem:wrappedkey:generationCount:encver:
initWithUUID:parentKeyUUID:zoneID:encodedCKRecord:encItem:wrappedkey:generationCount:encver:
initWithUUID:parentKeyUUID:zoneID:encodedCKRecord:encItem:wrappedkey:generationCount:encver:plaintextPCSServiceIdentifier:plaintextPCSPublicKey:plaintextPCSPublicIdentity:
makeAuthenticatedDataDictionaryUpdatingCKKSItem:encryptionVersion:
makeAuthenticatedDataDictionaryUpdatingCKKSItemEncVer1
makeAuthenticatedDataDictionaryUpdatingCKKSItemEncVer2:
base64Item
setBase64Item:
setParentKeyUUID:
setEncitem:
setWrappedkey:
setGenerationCount:
setEncver:
setPlaintextPCSServiceIdentifier:
setPlaintextPCSPublicKey:
setPlaintextPCSPublicIdentity:
base64WrappedKey
stringForObjectValue:
unsignedLongLongValue
storedCKRecord
unsignedLongValue
setOSVersionInRecord:
initWithRecordID:action:
initWithRecordName:zoneID:
unsignedIntegerValue
zeroedKey
initWithBase64:
initWithCKRecordType:encodedCKRecord:zoneID:
intransactionRecordDeleted:resync:error:
allWithUUID:states:zoneID:error:
initWithCKKSItem:action:state:
item
tryFromDatabase:zoneID:error:
allUUIDsInZones:error:
allUUIDs:error:
all:error:
deleteAll:error:
initWithViewName:tlk:
makeCKKSKey:error:
makeFakeCKKSClassKey:zoneiD:error:
tlkUUID
receiverPeerID
datafyPeerID:
senderPeerID
wrappedTLK
signature
initWithView:tlkUUID:receiverPeerID:senderPeerID:wrappedTLK:signature:
stringifyPeerID:
initForKey:senderPeerID:recieverPeerID:receiverEncPublicKeySPKI:curve:version:epoch:poisoned:wrappedKey:signature:zoneID:
initWithShare:zoneID:encodedCKRecord:
substringFromIndex:
initWithView:uuid:parentTLKUUID:keyData:
initWithViewName:tlkShare:
makeTLKShareRecord:
initWithWrappedKeyData:uuid:parentKeyUUID:keyclass:state:zoneID:encodedCKRecord:currentkey:
padData:blockSize:additionalBlock:
removePaddingFromData:
encryptCKKSItem:dataDictionary:updatingCKKSItem:parentkey:keyCache:error:
decryptItemToDictionaryVersionNone:error:
decryptItemToDictionaryVersion1or2:keyCache:error:
decryptItemToDictionary:keyCache:error:
encryptDictionary:key:authenticatedData:error:
decryptDictionary:key:authenticatedData:error:
decryptData:authenticatedData:error:
encryptData:authenticatedData:error:
unwrapAESKey:error:
loadKeyWithUUID:zoneID:error:
loadKeyForUUID:zoneID:error:
aessivkey
randomKeyWrappedByParent:error:
getKeychainBackedKey:
addEntriesFromDictionary:
subdataWithRange:
appendData:
dataWithData:
T@"CKKSOperationDependencies",&,V_deps
zoneSubscriptionOperation
zoneModificationOperation
dispatchSyncWithSQLTransaction:
setCkzonesubscribed:
setCkzonecreated:
state:
userInfo
deletedRecordZoneIDs
databaseProvider
deleteZones:
zoneModifier
views
sosEnabled
numberOfPeersInOctagon
T@"CKKSItem",&,V_item
T@"NSString",&
action
T@"NSString",&,V_action
state
T@"NSString",&,V_state
T@"NSString",&,V_accessgroup
waitUntil
T@"NSDate",&,V_waitUntil
_item
_action
_state
_accessgroup
_waitUntil
initWithCKKSItem:action:state:waitUntil:accessGroup:
intransactionMoveToState:viewState:error:
intransactionMarkAsError:viewState:error:
setItem:
setAction:
setState:
setAccessgroup:
setWaitUntil:
claimCallbackForUUID:
tryFromDatabase:state:zoneID:error:
stringFromDate:
keyForItem:zoneID:keyCache:error:
withItem:action:zoneID:keyCache:error:
fromDatabase:state:zoneID:error:
fetch:state:zoneID:error:
allInState:zoneID:error:
countsByStateInZone:error:
countByState:zone:error:
arrayByAddingObjectsFromArray:
ensureKeyLoaded:
currentKeyForClass:zoneID:error:
fromDatabase:zoneID:error:
fetch:startingAtUUID:state:action:zoneID:error:
countNewEntriesByKeyInZone:error:
hasKeyClass
keyClass
Ti,N,V_keyClass
hasBackupWrappedMetadataKey
backupWrappedMetadataKey
T@"NSData",&,N,V_backupWrappedMetadataKey
_backupWrappedMetadataKey
_keyClass
setKeyClass:
setHasKeyClass:
setBackupWrappedMetadataKey:
rpcFindCorruptedItemsWithReply:
rpcDeleteCorruptedItemsWithReply:
_init
xpcControlEndpoint
findCorruptedItemsWithError:
deleteCorruptedItemsWithError:
processIdentifier
_endpoint
endpoint
anonymousListener
newOutgoingEntries
TB,V_newOutgoingEntries
pendingClassAEntries
TB,V_pendingClassAEntries
pendingClassAEntriesError
T@"NSError",&,V_pendingClassAEntriesError
missingKey
TB,V_missingKey
viewsToScan
T@"NSMutableSet",&,V_viewsToScan
stateIfClassAItemsRemaining
T@"NSString<OctagonStateString>",&,V_stateIfClassAItemsRemaining
handleMismatchedViewItems
TB,V_handleMismatchedViewItems
successfulItemsProcessed
TQ,V_successfulItemsProcessed
errorItemsProcessed
TQ,V_errorItemsProcessed
_handleMismatchedViewItems
_newOutgoingEntries
_pendingClassAEntries
_missingKey
_successfulItemsProcessed
_errorItemsProcessed
_pendingClassAEntriesError
_viewsToScan
_stateIfClassAItemsRemaining
initWithDependencies:intending:pendingClassAItemsRemainingState:errorState:handleMismatchedViewItems:
processNewCurrentItemPointers:viewState:
intransaction:processQueueEntries:
_onqueueHandleMismatchedViewItem:secDbClass:attributes:intendedView:viewState:keyCache:
_onqueueUpdateIQE:withState:error:
main
loadAndProcessEntries:withActionFilter:
fixMismatchedViewItems:
_onqueueGenerateNewUUIDPersistentRefOnSecItem:viewState:
_onqueueHandleIQEChange:attributes:class:viewState:sortedForThisView:keyCache:
_onqueueHandleIQEChange:item:viewState:sortedForThisView:keyCache:
_onqueueHandleIQEDelete:class:viewState:
setHandleMismatchedViewItems:
setSuccessfulItemsProcessed:
setErrorItemsProcessed:
setNewOutgoingEntries:
setPendingClassAEntries:
setPendingClassAEntriesError:
setMissingKey:
setViewsToScan:
setStateIfClassAItemsRemaining:
sendEvent:event:
logSuccessForEvent:zoneName:
logRecoverableError:forEvent:zoneName:withAttributes:
activeManagedViews
setCurrentOutgoingQueueOperationGroup:
CKKSGroupWithName:
remoteItemPointers:error:
readyAndSyncingViews
notifyViewChangedScheduler
CKRecordWithZoneID:
requestPolicyCheck
mapDictionaryToView:
decryptCKKSItemToAttributes:keyCache:error:
setValue:forKey:
ckErrorState
T@"NSString<OctagonStateString>",&,V_ckErrorState
itemsProcessed
TQ,V_itemsProcessed
_itemsProcessed
_ckErrorState
initWithDependencies:intending:ckErrorState:errorState:
modifyRecordsCompleted:fullUpload:recordsToSave:recordIDsToDelete:recordIDsModified:modifyComplete:savedRecords:deletedRecordIDs:ckerror:
_onqueueModifyRecordAsError:recordError:viewState:
_onqueueModifyAllRecords:as:viewState:
_onqueueIsErrorMissingSyncKey:
intransactionIsErrorBadEtagOnKeyPointersOnly:
setItemsProcessed:
setCkErrorState:
isCKKSServerPluginError:
initWithFlag:conditions:delayInSeconds:
isNetworkError:
_onqueueHandleFlag:
intransactionCKWriteFailed:attemptedRecordsChanged:
ckdatabase
setModifyRecordsCompletionBlock:
setPerRecordCompletionBlock:
group
qualityOfService
setGroup:
setSavePolicy:
setIsCloudKitSupportOperation:
setDiscretionaryNetworkBehavior:
setAutomaticallyRetryNetworkFailures:
configuration
linearDependencies:
setAtomic:
initWithRecordsToSave:recordIDsToDelete:
intransactionCreateDeviceStateForView:accountTracker:lockStateTracker:error:
currentOutgoingQueueOperationGroup
recordChangeTag
currentKeyUUID
ontransactionFetchEntries:error:
isSyncingEnabledForView:
weakObjectsHashTable
pendingCallbackUUIDs
bottleID
T@"NSString",&,N,V_bottleID
entropy
T@"NSData",&,N,V_entropy
bottleSalt
T@"NSString",&,N,V_bottleSalt
voucherSig
T@"NSData",&,N,V_voucherSig
saveVoucher
TB,R,V_saveVoucher
_saveVoucher
_bottleID
_entropy
_bottleSalt
_voucherSig
initWithDependencies:intendedState:errorState:bottleID:entropy:bottleSalt:saveVoucher:
proceedWithPeerID:refetchWasNeeded:
noteMetric:count:
proceedWithFilteredTLKShares:
setBottleID:
setEntropy:
setBottleSalt:
setVoucherSig:
setTLKSharesPairedWithVoucher:
initWithLong:
primaryiCloudAccountAltDSID:
operationDependencies
T@"OTOperationDependencies",&,V_operationDependencies
_operationDependencies
proceedAfterFetch
setOperationDependencies:
resetToOffering:
joinAfterRestore:
initWithDependencies:
curve
Tq,V_curve
TQ,V_version
T@"NSString",&,V_tlkUUID
T@"NSString",&,V_receiverPeerID
receiverPublicEncryptionKeySPKI
T@"NSData",&,V_receiverPublicEncryptionKeySPKI
T@"NSString",&,V_senderPeerID
Tq,V_epoch
poisoned
Tq,V_poisoned
T@"NSData",&,V_wrappedTLK
T@"NSData",&,V_signature
T@"CKRecordZoneID",&,V_zoneID
_curve
_tlkUUID
_receiverPeerID
_receiverPublicEncryptionKeySPKI
_senderPeerID
_poisoned
_wrappedTLK
_signature
_zoneID
init:sender:receiver:curve:version:epoch:poisoned:zoneID:
wrap:publicKey:error:
unwrapUsing:error:
dataForSigning:
signRecord:ckrecord:error:
verifySignature:verifyingPeer:ckrecord:error:
signatureVerifiesWithPeerSet:ckrecord:error:
recoverTLK:trustedPeers:ckrecord:error:
setCurve:
setTlkUUID:
setReceiverPeerID:
setReceiverPublicEncryptionKeySPKI:
setSenderPeerID:
setPoisoned:
setWrappedTLK:
setSignature:
setZoneID:
decodeInt64ForKey:
encodeInt64:forKey:
verify:withKey:error:
initWithData:signature:
initWithKeySpecifier:digestOperation:
initWithCurve:
sign:withKey:error:
appendBytes:length:
loadFromProtobuf:error:
finishDecoding
initForReadingFromData:error:
encodedData
initRequiringSecureCoding:
serializeAsProtobuf:
share:as:to:epoch:poisoned:error:
processInfo
operatingSystemVersionString
T@"NSString",&,N,V_key
hasValue
T@"SECC2MPGenericEventMetricValue",&,N,V_value
ckzone
T@"NSString",&,V_ckzone
ckzonecreated
TB,V_ckzonecreated
ckzonesubscribed
TB,V_ckzonesubscribed
changeToken
T@"CKServerChangeToken",&,GgetChangeToken,SsetChangeToken:
encodedChangeToken
T@"NSData",&,V_encodedChangeToken
moreRecordsInCloudKit
TB,V_moreRecordsInCloudKit
lastFetchTime
T@"NSDate",&,V_lastFetchTime
lastLocalKeychainScanTime
T@"NSDate",&,V_lastLocalKeychainScanTime
lastFixup
TQ,V_lastFixup
rateLimiter
T@"CKKSRateLimiter",&,V_rateLimiter
encodedRateLimiter
T@"NSData",&
_ckzonecreated
_ckzonesubscribed
_moreRecordsInCloudKit
_ckzone
_encodedChangeToken
_lastFetchTime
_lastLocalKeychainScanTime
_lastFixup
_rateLimiter
initWithCKZone:zoneCreated:zoneSubscribed:changeToken:moreRecordsInCloudKit:lastFetch:lastScan:lastFixup:encodedRateLimiter:
getChangeToken
setChangeToken:
setEncodedRateLimiter:
setCkzone:
setEncodedChangeToken:
setMoreRecordsInCloudKit:
setLastFetchTime:
setLastLocalKeychainScanTime:
setLastFixup:
setRateLimiter:
isEqualToDate:
fromDatabase:error:
tryFromDatabase:error:
stateIfListUpdates
T@"NSString<OctagonStateString>",&,V_stateIfListUpdates
stateIfAuthenticationError
T@"NSString<OctagonStateString>",&,V_stateIfAuthenticationError
retryFlag
T@"NSString<OctagonFlagString>",&,V_retryFlag
logForUpgrade
TB,V_logForUpgrade
_logForUpgrade
_stateIfListUpdates
_stateIfAuthenticationError
_retryFlag
initWithDependencies:intendedState:listUpdatesState:authenticationErrorState:errorState:retryFlag:
afterAuthKitFetch:accountIsDemo:
setLogForUpgrade:
setStateIfListUpdates:
setStateIfAuthenticationError:
setRetryFlag:
fetchCurrentDeviceList:
logSuccessForEventNamed:
logRecoverableError:forEvent:withAttributes:
accountIsDemoAccount:
hasStringValue
T@"NSString",&,N,V_stringValue
hasDoubleValue
Td,N,V_doubleValue
hasDateValue
dateValue
TQ,N,V_dateValue
hasErrorValue
errorValue
T@"SECC2MPError",&,N,V_errorValue
_dateValue
_doubleValue
_errorValue
setDoubleValue:
setHasDoubleValue:
setDateValue:
setHasDateValue:
setErrorValue:
numberWithDouble:
hasBagIdentity
bagIdentity
T@"SecDbBackupBagIdentity",&,N,V_bagIdentity
hasKeybag
keybag
T@"NSData",&,N,V_keybag
_bagIdentity
_keybag
setBagIdentity:
setKeybag:
updateOctagonKeySetWithAccount:error:
isEqualToData:
currentSelf
getEgoPeerID:
currentSOSSelf:
T@"NSDictionary",&,N,V_config
groups
T@"NSArray",&,N,V_groups
lastJudgment
T@"NSDate",&,N,V_lastJudgment
T@"NSDate",&,N,V_overloadUntil
assetType
T@"NSString",&,N,V_assetType
TQ,R,N
_assetType
_groups
_lastJudgment
initWithConfig:
consumeTokenFromBucket:config:name:at:
getPropertyValue:object:
setAssetType:
setGroups:
setLastJudgment:
methodForSelector:
distantPast
subscriptionID
savedSubscriptions
armReadyNotification
savedRecordZones
createZones:
dispatchSyncWithReadOnlySQLTransaction:
setViewKeyHierarchyState:
initWithZoneID:
TB,VsosEnabled
preloadOctagonKeySetOnAccount:error:
updateCKKS4AllStatus:error:
safariViewSyncingEnabled:
setSosEnabled:
performOnQuietAccountQueue:
initWithPeerProviderID:essential:selfPeers:selfPeersError:trustedPeers:trustedPeersError:
_secKey
initWithSOSPeerID:encryptionPublicKey:signingPublicKey:viewList:
sosCKKSViewList
initWithSecKey:
initWithSOSPeerID:encryptionKey:signingKey:viewList:
peerPublicSigningKeySPKIs:
peerPublicSigningKeySPKIsForCircle:error:
encodeSubjectPublicKeyInfo
ckksConflictState
T@"NSString<OctagonStateString>",&,V_ckksConflictState
_ckksConflictState
initWithDependencies:intendedState:ckksConflictState:errorState:
proceedWithKeys:pendingTLKShares:
setCkksConflictState:
receiveTLKUploadRecords:
isCuttlefishError:
persistOctagonJoinAttempt:error:
allowFullRefetchResult
TB,V_allowFullRefetchResult
newCloudKitRecordsWritten
TB,V_newCloudKitRecordsWritten
cloudkitWriteFailures
TB,V_cloudkitWriteFailures
setResultStateOperation
T@"CKKSResultOperation",&,V_setResultStateOperation
ckOperations
T@"NSHashTable",&,V_ckOperations
_allowFullRefetchResult
_newCloudKitRecordsWritten
_cloudkitWriteFailures
_setResultStateOperation
_ckOperations
initWithDependencies:allowFullRefetchResult:intending:errorState:
attemptToHealView:currentTrustStates:
ensureKeyPresent:viewState:
setAllowFullRefetchResult:
setNewCloudKitRecordsWritten:
setCloudkitWriteFailures:
setSetResultStateOperation:
setCkOperations:
saveKeyMaterialToKeychain:
unwrapViaKeyHierarchy:
loadKeyMaterialFromKeychain:
logUnrecoverableError:forEvent:zoneName:withAttributes:
saveToDatabaseAsOnlyCurrentKeyForClassAndState:
ckoperationGroup
setLongLived:
createMissingKeyShares:trustStates:databaseProvider:error:
randomKeyWrappedByParent:keyclass:error:
setClassC:
setClassA:
setCurrentKeyUUID:
setTlk:
tlkMaterialPresentOrRecoverableViaTLKShare:error:
validTLK:
topKeyInAnyState:
allKeys:error:
setCurrentClassCPointer:
setCurrentClassAPointer:
setCurrentTLKPointer:
initForClass:currentKeyUUID:zoneID:encodedCKRecord:
classC
classA
currentClassCPointer
currentClassAPointer
currentTLKPointer
loadForZone:
currentTrustStates
viewKeyHierarchyState
T@"NSString<SecCKKSProcessedState>",&,V_state
identifier
T@"NSString",&,V_identifier
currentItemUUID
T@"NSString",&,V_currentItemUUID
_identifier
_currentItemUUID
initForIdentifier:currentItemUUID:state:zoneID:encodedCKRecord:
setIdentifier:
setCurrentItemUUID:
allInZone:error:
viewsOverride
T@"NSSet",&,V_viewsOverride
allViews
T@"NSSet",&,V_allViews
T@"TPSyncingPolicy",&,V_syncingPolicy
T@"NSSet",R
allCKKSManagedViews
allExternalManagedViews
currentFetchReasons
T@"NSMutableSet",R,V_currentFetchReasons
T@"CKOperationGroup",&,V_ckoperationGroup
T@"CKDatabase",&,V_ckdatabase
cloudKitClassDependencies
T@"CKKSCloudKitClassDependencies",&,V_cloudKitClassDependencies
T@"CKOperationGroup",&,V_currentOutgoingQueueOperationGroup
T@"<OctagonStateFlagHandler>",R,V_flagHandler
T@"CKKSAccountStateTracker",R,V_accountStateTracker
T@"CKKSLockStateTracker",R,V_lockStateTracker
T@"CKKSReachabilityTracker",R,V_reachabilityTracker
peerProviders
T@"NSArray",&,V_peerProviders
T@"<CKKSDatabaseProviderProtocol>",R,V_databaseProvider
T@"CKKSZoneModifier",&,V_zoneModifier
savedTLKNotifier
T@"CKKSNearFutureScheduler",R,V_savedTLKNotifier
T@"CKKSNearFutureScheduler",&,V_requestPolicyCheck
keysetProviderOperations
T@"NSHashTable",&,V_keysetProviderOperations
_allViews
_currentFetchReasons
_ckoperationGroup
_ckdatabase
_cloudKitClassDependencies
_currentOutgoingQueueOperationGroup
_flagHandler
_peerProviders
_databaseProvider
_zoneModifier
_savedTLKNotifier
_requestPolicyCheck
_keysetProviderOperations
_viewsOverride
initWithViewStates:zoneModifier:ckdatabase:cloudKitClassDependencies:ckoperationGroup:flagHandler:accountStateTracker:lockStateTracker:reachabilityTracker:peerProviders:databaseProvider:savedTLKNotifier:
setStateForActiveZones:
setStateForActiveCKKSManagedViews:
setStateForActiveExternallyManagedViews:
setStateForAllViews:
operateOnSelectViews:
operateOnAllViews
viewsInState:
viewStatesByNames:
viewStateForName:
applyNewSyncingPolicy:viewStates:
considerSelfTrusted:error:
provideKeySets:
intransactionCKRecordChanged:resync:
intransactionCKRecordDeleted:recordType:resync:
viewNameForItem:
setAllViews:
setCkoperationGroup:
setCkdatabase:
setCloudKitClassDependencies:
setPeerProviders:
setZoneModifier:
setRequestPolicyCheck:
setKeysetProviderOperations:
setViewsOverride:
intransactionRecordChanged:resync:flagHandler:error:
currentTrustedPeersError
currentSelfPeersError
ckksManagedView
isSubsetOfSet:
restartCount
Ti,V_restartCount
T@"CKKSKeychainView",W,V_ckks
_restartCount
initWithCKKSKeychainView:
setRestartCount:
addExecutionBlock:
recordsFound
initWithDependencies:intending:errorState:ckoperationGroup:
initWithOperationDependencies:
addSuccessDependency:
holdLocalSynchronizeOperation
TQ,N,V_epoch
permanentInfo
T@"NSData",&,V_permanentInfo
permanentInfoSig
T@"NSData",&,V_permanentInfoSig
stableInfo
T@"NSData",&,V_stableInfo
stableInfoSig
T@"NSData",&,V_stableInfoSig
policyOverride
T@"TPPolicyVersion",&,V_policyOverride
_permanentInfo
_permanentInfoSig
_stableInfo
_stableInfoSig
_policyOverride
initWithDependencies:intendedState:errorState:deviceInfo:policyOverride:epoch:
setPermanentInfo:
setPermanentInfoSig:
setStableInfo:
setStableInfoSig:
setPolicyOverride:
machineID
parsedSecureElementIdentity
deleteFromKeychainForContainer:contextID:error:
saveToKeychainForContainer:contextID:error:
peerIdentifier
setPeerIdentifier:
peerData
setPeerData:
getTLKSharesPairedWithVoucher
setOctagonSecureElementIdentity:
loadFromKeychainForContainer:contextID:error:
hasRecoveryType
recoveryType
Ti,N,V_recoveryType
hasWrappedBagSecret
wrappedBagSecret
T@"NSData",&,N,V_wrappedBagSecret
hasWrappedKCSKSecret
wrappedKCSKSecret
T@"NSData",&,N,V_wrappedKCSKSecret
hasWrappedRecoveryKey
wrappedRecoveryKey
T@"NSData",&,N,V_wrappedRecoveryKey
_recoveryType
_wrappedBagSecret
_wrappedKCSKSecret
_wrappedRecoveryKey
setRecoveryType:
setHasRecoveryType:
setWrappedBagSecret:
setWrappedKCSKSecret:
setWrappedRecoveryKey:
T@"NSString<SecCKKSKeyClass>",&,V_keyclass
T@"NSString",&,V_currentKeyUUID
_currentKeyUUID
forKeyClass:withKeyUUID:zoneID:error:
intransactionRecordDeleted:error:
T@"CKKSKey",&,V_tlk
T@"CKKSKey",&,V_classA
T@"CKKSKey",&,V_classC
T@"CKKSCurrentKeyPointer",&,V_currentTLKPointer
T@"CKKSCurrentKeyPointer",&,V_currentClassAPointer
T@"CKKSCurrentKeyPointer",&,V_currentClassCPointer
proposed
TB,V_proposed
_proposed
_tlk
_classA
_classC
_currentTLKPointer
_currentClassAPointer
_currentClassCPointer
setProposed:
initWithTLK:classA:classC:newUpload:
hasMetricType
metricType
Ti,N,V_metricType
hasDeviceInfo
T@"SECC2MPDeviceInfo",&,N,V_deviceInfo
hasCloudkitInfo
cloudkitInfo
T@"SECC2MPCloudKitInfo",&,N,V_cloudkitInfo
hasServerInfo
serverInfo
T@"SECC2MPServerInfo",&,N,V_serverInfo
hasTriggers
triggers
TQ,N,V_triggers
hasReportFrequency
reportFrequency
TQ,N,V_reportFrequency
hasReportFrequencyBase
reportFrequencyBase
TQ,N,V_reportFrequencyBase
hasNetworkEvent
networkEvent
T@"SECC2MPNetworkEvent",&,N,V_networkEvent
hasGenericEvent
genericEvent
T@"SECC2MPGenericEvent",&,N,V_genericEvent
_reportFrequency
_reportFrequencyBase
_triggers
_cloudkitInfo
_genericEvent
_metricType
_networkEvent
_serverInfo
setMetricType:
setHasMetricType:
metricTypeAsString:
StringAsMetricType:
setTriggers:
setHasTriggers:
setReportFrequency:
setHasReportFrequency:
setReportFrequencyBase:
setHasReportFrequencyBase:
setCloudkitInfo:
setServerInfo:
setNetworkEvent:
setGenericEvent:
performanceCounters:
rpcResetLocal:reply:
rpcResetCloudKit:reason:reply:
rpcResync:reply:
rpcResyncLocal:reply:
rpcStatus:reply:
rpcFastStatus:reply:
rpcFetchAndProcessChanges:classA:onlyIfNoRecentFetch:reply:
rpcPushOutgoingChanges:reply:
rpcGetCKDeviceIDWithReply:
rpcCKMetric:attributes:reply:
proposeTLKForSEView:proposedTLK:wrappedOldTLK:tlkShares:reply:
fetchSEViewKeyHierarchy:forceFetch:reply:
modifyTLKSharesForSEView:adding:deleting:reply:
deleteSEView:reply:
toggleHavoc:
T@"CKOperationGroup",&,V_group
rateLimit
TB,V_rateLimit
_rateLimit
_group
initWithOperationDependencies:rateLimit:ckoperationGroup:
setRateLimit:
setQualityOfService:
modificationDate
T@"NSData",&,N,V_ciphertext
wrappedKey
T@"NSData",&,N,V_wrappedKey
tamperCheck
T@"NSString",&,N,V_tamperCheck
_tamperCheck
_wrappedKey
setCiphertext:
setWrappedKey:
setTamperCheck:
T@"NSString",&,V_name
initialDelay
TQ,V_initialDelay
currentDelay
TQ,V_currentDelay
maximumDelay
TQ,V_maximumDelay
backoff
Td,V_backoff
operationDependencyDescriptionCode
Tq,V_operationDependencyDescriptionCode
operationDependency
T@"CKKSResultOperation",&,V_operationDependency
predictedNextFireTime
T@"NSDate",&,V_predictedNextFireTime
liveRequest
TB,V_liveRequest
timer
T@"NSObject<OS_dispatch_source>",&,V_timer
keepProcessAlive
TB,V_keepProcessAlive
nextFireTime
T@"NSDate",R
futureBlock
T@?,C,V_futureBlock
liveRequestReceived
T@"CKKSCondition",&,V_liveRequestReceived
_liveRequest
_keepProcessAlive
_futureBlock
_operationDependency
_liveRequestReceived
_initialDelay
_currentDelay
_maximumDelay
_backoff
_operationDependencyDescriptionCode
_predictedNextFireTime
initWithName:delay:keepProcessAlive:dependencyDescriptionCode:block:
initWithName:initialDelay:continuingDelay:keepProcessAlive:dependencyDescriptionCode:block:
changeDelays:continuingDelay:
makeOperationDependency
waitUntil:
triggerAt:
_onqueueTimerTick
_onqueueTrigger:maximumDelay:
setFutureBlock:
setOperationDependency:
setLiveRequestReceived:
setInitialDelay:
setCurrentDelay:
setMaximumDelay:
setBackoff:
setOperationDependencyDescriptionCode:
setPredictedNextFireTime:
setLiveRequest:
setTimer:
setKeepProcessAlive:
dateWithTimeIntervalSinceNow:
setDateFormat:
setDescriptionErrorCode:
wasCurrent
TQ,V_wasCurrent
_wasCurrent
initWithCKKSItem:
setWasCurrent:
allWithUUID:error:
countsByParentKey:error:
counts:error:
numberFromString:
flags
T@"NSMutableSet",&,V_flags
allowableFlags
T@"NSSet",R,V_allowableFlags
flagConditions
T@"NSMutableDictionary",&,V_flagConditions
_flagConditions
_flags
_allowableFlags
setFlag:
_onqueueSetFlag:
dumpFlags
conditionForFlag:
initWithQueue:flags:
contentsAsString
setFlagConditions:
setFlags:
salt
T@"NSString",&,N,V_salt
recoveryKey
T@"NSString",&,N,V_recoveryKey
_salt
_recoveryKey
initWithDependencies:recoveryKey:
proceedWithKeys:salt:
setSalt:
setRecoveryKey:
T@"NSUUID",&,V_uuid
T@"OTCustodianRecoveryKey",&,V_crk
_crk
initWithUUID:dependencies:
setCrk:
initWithUUID:recoveryString:error:
initWithUUIDString:
T@"OTInheritanceKey",&,V_ik
setIk:
recoveryKeyData
initWithUUID:error:
setExpectedSendSize:
setExpectedReceiveSize:
ckksIsCKErrorRecordChangedError
cuttlefishRetryAfter
isCKServerInternalError
CKPropertiesDescription
T@"<CKKSSelfPeer>",&,V_currentSelf
allSelves
T@"NSSet",&,V_allSelves
_currentSelf
_allSelves
setCurrentSelf:
setAllSelves:
setByAddingObject:
T@"_SFECPublicKey",R,V_publicEncryptionKey
T@"_SFECPublicKey",R,V_publicSigningKey
T@"NSSet",R,V_viewList
_publicEncryptionKey
_publicSigningKey
_viewList
shouldHaveView:
spid
T@"NSString",&,V_spid
T@"NSSet",&,V_viewList
_spid
setSpid:
setViewList:
T@"_SFECKeyPair",&,V_encryptionKey
T@"_SFECKeyPair",&,V_signingKey
_encryptionKey
_signingKey
setEncryptionKey:
setSigningKey:
hasType
Ti,N,V_type
hasName
T@"NSString",&,N,V_name
hasTimestampStart
timestampStart
TQ,N,V_timestampStart
hasTimestampEnd
timestampEnd
TQ,N,V_timestampEnd
metrics
T@"NSMutableArray",&,N,V_metrics
_timestampEnd
_timestampStart
_metrics
_type
setHasType:
typeAsString:
StringAsType:
setTimestampStart:
setHasTimestampStart:
setTimestampEnd:
setHasTimestampEnd:
clearMetrics
addMetric:
metricsCount
metricAtIndex:
setMetrics:
hasPublicKey
T@"NSData",&,N,V_publicKey
hasAksRefKey
aksRefKey
T@"NSData",&,N,V_aksRefKey
hasAksWrappedKey
aksWrappedKey
T@"NSData",&,N,V_aksWrappedKey
hasBackupWrappedKey
backupWrappedKey
T@"NSData",&,N,V_backupWrappedKey
_aksRefKey
_aksWrappedKey
_backupWrappedKey
_publicKey
setPublicKey:
setAksRefKey:
setAksWrappedKey:
setBackupWrappedKey:
registerDefaults:
receiverForNamedDelegatePort:apsConnectionClass:
registerForEnvironment:
handleKeychainEventDbConnection:source:added:deleted:
registerSyncStatusCallback:callback:
rpcProcessIncomingQueue:errorOnClassAFailure:
initWithContainer:fetchClass:clientMap:fetchReasons:apnsPushes:forceResync:ckoperationGroup:
fetchRecordZoneChangesOperationClass
setLastSynchronizeOperation:
insideSQLTransaction
initWithQueue:
dispatchSyncWithConnection:readWriteTxion:block:
T@"NSDictionary",&,V_keysets
startDependency
T@"NSOperation",&,V_startDependency
T@"NSSet",R,V_intendedZoneIDs
_keysets
_intendedZoneIDs
_startDependency
initWithIntendedZoneIDs:
setKeysets:
setStartDependency:
T@"NSString",&,V_ckRecordType
T@"NSData",C,V_encodedCKRecord
T@"CKRecord",C,V_storedCKRecord
_encodedCKRecord
_storedCKRecord
_ckRecordType
setCkRecordType:
initWithRecordType:recordID:
enforceRateLimiting
TB,V_enforceRateLimiting
TQ,V_numberOfRecordsUploaded
_enforceRateLimiting
_numberOfRecordsUploaded
checkFatalError:
setNumberOfRecordsUploaded:
setEnforceRateLimiting:
cdpUploadPrerecord:secretType:reply:
setUploadCompleted:
setUploadRetries:
uploadRetries
setLastEscrowAttemptTime:
attemptToEscrowPreRecord:preRecordUUID:secretType:completion:
initWithContext:
processedItems
TQ,V_processedItems
viewsWithNewCKKSEntries
T@"NSMutableSet",&,V_viewsWithNewCKKSEntries
TQ,V_recordsFound
recordsAdded
TQ,V_recordsAdded
missingLocalItemsFound
TQ,V_missingLocalItemsFound
_recordsFound
_recordsAdded
_missingLocalItemsFound
_processedItems
_viewsWithNewCKKSEntries
queryPredicatesForViewMapping:
executeQuery:readWrite:error:block:
onboardItemToCKKS:viewState:keyCache:error:
onboardItemsInView:uuids:itemClass:databaseProvider:
fixUUIDlessItemsInZone:primaryKeys:databaseProvider:
retriggerMissingMirrorEntries:databaseProvider:
areEquivalent:ckksItem:keyCache:
setRecordsFound:
setRecordsAdded:
setMissingLocalItemsFound:
setProcessedItems:
setViewsWithNewCKKSEntries:
addEvent:
launch
minusSet:
isItemKeyForKeychainView:
logMetric:withName:
regex
fieldName
match
hasMatch
hasExists
hasNot
orsCount
andsCount
matchingRule
hasMatchingRule
view
keyViewMapping
voucherData
T@"NSData",&,V_voucherData
T@"NSData",&,V_voucherSig
_voucherData
proceedWithPendingTLKShares:
setVoucherData:
onqueuePerformLocalReset
participateInFetch
TB,V_participateInFetch
resync
TB,V_resync
T@"CKServerChangeToken",&,V_changeToken
_participateInFetch
_resync
_changeToken
setParticipateInFetch:
setResync:
T@"CKRecordID",&,V_recordID
T@"NSString",&,V_recordType
_recordID
_recordType
initWithRecordID:recordType:
setRecordID:
setRecordType:
fetchRecordZoneChangesOperation
T@"CKDatabaseOperation<CKKSFetchRecordZoneChangesOperation>",&,V_fetchRecordZoneChangesOperation
allClientOptions
T@"NSMutableDictionary",&,V_allClientOptions
clientMap
T@"NSDictionary",&,V_clientMap
fetchedItems
TQ,V_fetchedItems
forceResync
TB,V_forceResync
moreComing
TB,V_moreComing
totalModifications
TQ,V_totalModifications
totalDeletions
TQ,V_totalDeletions
resyncingZones
T@"NSMutableSet",&,V_resyncingZones
fetchCompletedOperation
T@"CKKSResultOperation",&,V_fetchCompletedOperation
T#,R,V_fetchRecordZoneChangesOperationClass
T@"CKContainer",R,V_container
fetchedZoneIDs
T@"NSMutableArray",&,V_fetchedZoneIDs
fetchReasons
T@"NSSet",&,V_fetchReasons
apnsPushes
T@"NSSet",&,V_apnsPushes
modifications
T@"NSMutableDictionary",&,V_modifications
deletions
T@"NSMutableDictionary",&,V_deletions
changeTokens
T@"NSMutableDictionary",&,V_changeTokens
_forceResync
_moreComing
_fetchRecordZoneChangesOperationClass
_fetchedZoneIDs
_fetchReasons
_apnsPushes
_modifications
_deletions
_changeTokens
_fetchRecordZoneChangesOperation
_allClientOptions
_clientMap
_fetchedItems
_totalModifications
_totalDeletions
_resyncingZones
_fetchCompletedOperation
queryClientsForChangeTokens
performFetch
sendChangesToClient:moreComing:
setFetchedZoneIDs:
setFetchReasons:
setApnsPushes:
setModifications:
setDeletions:
setChangeTokens:
setFetchRecordZoneChangesOperation:
setAllClientOptions:
setClientMap:
setFetchedItems:
setForceResync:
setMoreComing:
setTotalModifications:
setTotalDeletions:
setResyncingZones:
setFetchCompletedOperation:
changesFetched:deletedRecordIDs:zoneID:newChangeToken:moreComing:resync:
setFetchRecordZoneChangesCompletionBlock:
submitEvent:
managerObject
submitEventMetric:
associateWithCompletedOperation:
ckksPushReceivedDate
ckksPushTracingUUID
setIsPushTriggerFired:
initWithEventName:
ckksPushTracingEnabled
isNetworkFailureError:
setRecordZoneFetchCompletionBlock:
setPreviousServerChangeToken:
setRecordZoneChangeTokensUpdatedBlock:
setRecordWithIDWasDeletedBlock:
setRecordChangedBlock:
setFetchAllChanges:
initWithRecordZoneIDs:configurationsByRecordZoneID:
alloc
participateInFetch:
successState
TB,V_successState
followStates
T@"NSDictionary",R,V_followStates
_successState
_followStates
initAsSuccess
initWithPath:
nextStep:
setSuccessState:
success
pathFromDictionary:
initialState
T@"NSString<OctagonStateString>",&,V_initialState
pathStep
T@"OctagonStateTransitionPathStep",&,V_pathStep
_initialState
_pathStep
initWithState:pathStep:
asPathStep
setInitialState:
setPathStep:
active
TB,V_active
completed
TB,V_completed
remainingPath
T@"OctagonStateTransitionPathStep",&,V_remainingPath
initialRequest
T@"OctagonStateTransitionRequest",&,V_initialRequest
initialTimeoutListenerOp
T@"CKKSResultOperation",&,V_initialTimeoutListenerOp
timeoutCanOccur
TB,V_timeoutCanOccur
T@"NSString",R,V_name
result
T@"CKKSResultOperation",R,V_result
intendedPath
T@"OctagonStateTransitionPath",R,V_intendedPath
_active
_completed
_timeoutCanOccur
_result
_intendedPath
_remainingPath
_initialRequest
_initialTimeoutListenerOp
T@"CKKSResultOperation",R
onqueueHandleTransition:
initNamed:serialQueue:path:initialRequest:
_onqueuePerformTimeoutWithUnderlyingError:
onqueueProcessTransition:
onqueueStartFinishOperation
setActive:
setCompleted:
setRemainingPath:
setInitialRequest:
setInitialTimeoutListenerOp:
setTimeoutCanOccur:
logUnrecoverableError:forEvent:withAttributes:
transitionOperation
states
T@"NSSet",R,V_states
_states
initNamed:serialQueue:states:
onqueueEnterState:
_onqueuePerformTimeoutWithUnderlyingError
proceedWithKeys:incompleteKeySets:
resetViews:
rpcResetCloudKit:reply:
forceRefetch
TB,V_forceRefetch
peerUnknownState
T@"NSString<OctagonStateString>",&,V_peerUnknownState
_forceRefetch
_peerUnknownState
initWithDependencies:intendedState:peerUnknownState:errorState:forceRefetch:retryFlag:
setForceRefetch:
setPeerUnknownState:
unknownMachineIDsPresent
octagonAdapter
memberChanges
identityIsPreapproved
setCurrentSyncingPolicy:policyIsFresh:
initWithSecureElementIdentity:
initWithFlag:delayInSeconds:
overallCuttlefishRetry
sosNotPresentState
T@"NSString<OctagonStateString>",&,V_sosNotPresentState
_sosNotPresentState
initWithDependencies:intendedState:sosNotPresentState:errorState:
setSosNotPresentState:
retryableCuttlefishError
cStringUsingEncoding:
T@"NSString",&,V_salt
T@"NSString",&,V_recoveryKey
initWithDependencies:intendedState:errorState:recoveryKey:saveVoucher:
proceedWithRecoveryKeyID:
baguuid
T@"NSData",&,N,V_baguuid
_baguuid
setBaguuid:
currentBackupBagUUID
wrapItemKey:forKeyclass:error:
wrapMetadataKey:forKeyclass:error:
launchSequence
T@"CKKSLaunchSequence",&,V_launchSequence
T@"OTCuttlefishAccountStateHolder",&,N,V_accountMetadataStore
T@"OTFollowup",&,V_followupHandler
cloudKitAccountInfo
T@"CKAccountInfo",&,V_cloudKitAccountInfo
cloudKitAccountStateKnown
T@"CKKSCondition",&,V_cloudKitAccountStateKnown
suggestTLKUploadNotifier
T@"CKKSNearFutureScheduler",&,V_suggestTLKUploadNotifier
requestPolicyCheckNotifier
T@"CKKSNearFutureScheduler",&,V_requestPolicyCheckNotifier
upgradeUserControllableViewsRateLimiter
T@"CKKSNearFutureScheduler",&,V_upgradeUserControllableViewsRateLimiter
fixupRetryScheduler
T@"CKKSNearFutureScheduler",&,V_fixupRetryScheduler
custodianRecoveryKey
T@"OTCustodianRecoveryKey",&,N,V_custodianRecoveryKey
inheritanceKey
T@"OTInheritanceKey",&,N,V_inheritanceKey
settings
T@"OTAccountSettingsX",&,N,V_settings
apsReceiver
T@"OctagonAPSReceiver",&,V_apsReceiver
T@"<CKKSPeerProvider>",&,V_octagonAdapter
initialBecomeUntrustedPosted
TB,N,V_initialBecomeUntrustedPosted
T@"NSString",&,N,V_pairingUUID
T@"CKKSLockStateTracker",R,N,V_lockStateTracker
T@"OctagonStateMachine",R,V_stateMachine
apsRateLimiter
T@"CKKSNearFutureScheduler",&,N,V_apsRateLimiter
sosConsistencyRateLimiter
T@"CKKSNearFutureScheduler",&,N,V_sosConsistencyRateLimiter
T@"<CKKSCloudKitAccountStateTrackingProvider><CKKSOctagonStatusMemoizer>",R,V_accountStateTracker
deviceAdapter
T@"<OTDeviceInformationAdapter>",R,V_deviceAdapter
T@"CKKSCondition",&,V_pendingEscrowCacheWarmup
_settings
_resetReason
_initialBecomeUntrustedPosted
_followupHandler
_pairingUUID
_accountMetadataStore
_apsRateLimiter
_sosConsistencyRateLimiter
_deviceAdapter
_pendingEscrowCacheWarmup
_launchSequence
_cloudKitAccountInfo
_cloudKitAccountStateKnown
_suggestTLKUploadNotifier
_requestPolicyCheckNotifier
_upgradeUserControllableViewsRateLimiter
_fixupRetryScheduler
_custodianRecoveryKey
_inheritanceKey
_apsReceiver
_octagonAdapter
machinesAdded:altDSID:
machinesRemoved:altDSID:
incompleteNotificationOfMachineIDListChange
accountStateUpdated:from:
resetCKKS:
notifyTrustChanged:
resetOctagonStateMachine
localReset:
establishStatePathDictionary
prepareInformation
initializingOperation
checkForAccountFixupsOperation:
evaluateSecdOctagonTrust
evaluateTPHOctagonTrust
cuttlefishTrustEvaluation
postRepairCFUAndBecomeUntrusted
cloudKitAccountNewlyAvailableOperation:
repairAccountIfTrustedByTPHWithIntendedState:
checkTrustStatusAndPostRepairCFUIfNecessary:
becomeUntrustedOperation:
becomeInheritedOperation
becomeReadyOperation
extractStringKey:fromDictionary:
handleHealthRequest
handleTTRRequest:
notifyContainerChangeWithUserInfo:
popTooManyPeersDialogWithEgoPeerStatus:accountMeta:
currentMemoizedTrustState
currentMemoizedAccountState
checkForCKAccount:
errorIfNoCKAccount:
joinStatePathDictionary
ckksPeerStatus:
sosTrustedPeersStatus
sosSelvesStatus
rpcTrustStatusCachedStatus:reply:
rpcValidatePeers:
postRepairCFU:
shouldPostConfirmPasscodeCFU:
leaveTrust:
postConfirmPasscodeCFU:
setFollowupHandler:
setPairingUUID:
setAccountMetadataStore:
setApsRateLimiter:
setSosConsistencyRateLimiter:
setPendingEscrowCacheWarmup:
setLaunchSequence:
setCloudKitAccountInfo:
setCloudKitAccountStateKnown:
setSuggestTLKUploadNotifier:
setRequestPolicyCheckNotifier:
setUpgradeUserControllableViewsRateLimiter:
setFixupRetryScheduler:
setCustodianRecoveryKey:
setInheritanceKey:
setSettings:
setApsReceiver:
setOctagonAdapter:
setInitialBecomeUntrustedPosted:
doWatchedStateMachineRPC:sourceStates:path:reply:
waitForState:wait:
isPaused
OctagonHealthSourceStates
postFollowUp:error:
addNullableSuccessDependency:
inflightFetch
zoneChangeFetcher
setTag1:
setEnabled:
walrus
setPendingLocalPeerIdentity:
localPeerIdentity
setLocalPeerIdentity:
trustedPeerSecureElementIdentities
setTrustedPeerSecureElementIdentities:
syncUserControllableViews
isLocked
isExcluded
egoPeerID
egoStatus
useCachedAccountStatus
recheck
registeredPushEnvironments
sysdiagnoseStatus
eventsByTime
dumpPendingFlags
hashWithAlgo:ofData:
OctagonInAccountStates
handleExternalRequest:
init:sourceStates:serialQueue:timeout:transitionOp:
timeout
timeoutWaitForCKAccount
initWithTimeIntervalSince1970:
popDialogWithCount:limit:
getLimit
shouldPopDialog
named:intending:errorState:withBlockTakingSelf:
beginTrustedOperation:suggestTLKUpload:requestPolicyCheck:
endTrustedOperation
serverPreferredPushEnvironmentWithCompletionHandler:
containerWithIdentifier:
beginCloudKitOperation
initWithDependencies:intendedState:ckksConflictState:peerMissingState:errorState:
init:contextID:reason:intendedState:errorState:cuttlefishXPCWrapper:
initWithDependencies:intendedState:errorState:ik:deviceInfo:policyOverride:isInheritedAccount:epoch:
initWithDependencies:intendedState:errorState:crk:saveVoucher:
initWithDependencies:intendedState:ckksConflictState:errorState:deviceInfo:policyOverride:
initWithDependencies:stateIfHSA2:stateIfNotHSA2:stateIfNoAccount:errorState:
_onqueueHandlePendingFlagLater:
initWithFlag:scheduler:
initForContainer:contextID:stateHolder:flagHandler:sosAdapter:octagonAdapter:authKitAdapter:deviceInfoAdapter:ckksAccountSync:lockStateTracker:cuttlefishXPCWrapper:escrowRequestClass:notifierClass:
initForContainerName:contextID:epoch:machineID:modelID:deviceName:serialNumber:osVersion:
initWithDependencies:intendedState:errorState:peerIDs:
intersectsSet:
OctagonNotInCliqueStates
setFirstLaunch:
_onqueuePokeStateMachine
initWithFollowupController:
AllOctagonFlags
registerNotification:
initWithQueue:container:context:
initWithRocketName:
registerCuttlefishReceiver:forContainerName:
scheduler
T@"CKKSNearFutureScheduler",&,V_scheduler
flag
T@"NSString<OctagonFlagString>",R,V_flag
fireTime
T@"NSDate",R,V_fireTime
conditions
TQ,R,V_conditions
afterOperation
T@"NSOperation",&,V_afterOperation
_flag
_fireTime
_conditions
_afterOperation
_scheduler
initWithFlag:after:
initWithFlag:conditions:scheduler:
initWithFlag:conditions:after:
setAfterOperation:
setScheduler:
T@"NSString",&,N,V_value
tphcrk
T@"TrustedPeersHelperCustodianRecoveryKey",&,V_tphcrk
_tphcrk
setTphcrk:
initWithUUID:encryptionKey:signingKey:recoveryString:salt:
recoveryString
callbackBlock
T@?,C,N,V_callbackBlock
engine
T^{__OpaqueSOSEngine={__CFRuntimeBase=QAQ}^{SOSDataSource}^{__CFString}^{__OpaqueSOSManifest}^{__CFData}^{__CFDictionary}^{__CFDictionary}^{__CFDictionary}^{__CFDictionary}^{__CFArray}^{__CFDate}^{__CFDictionary}BB@@@@?B},N,V_engine
peer
T^{__OpaqueSOSPeer=},N,V_peer
coder
T^{__OpaqueSOSCoder=},N,V_coder
local
T^{__OpaqueSOSManifest=},N,V_local
T^{__OpaqueSOSManifest=},N,V_proposed
confirmed
T^{__OpaqueSOSManifest=},N,V_confirmed
message
T^{__OpaqueSOSMessage=},N,V_message
_callbackBlock
_engine
_peer
_coder
_local
_confirmed
_message
initWithEngine:peer:localManifest:proposedManifest:confirmedManifest:andMessage:
callCallback:
setCallback:
setCoder:
setCallbackBlock:
setEngine:
setPeer:
setLocal:
setConfirmed:
setMessage:
keycore
T@"CKKSKeychainBackedKey",&,V_keycore
wrappedKeyDataBackingStore
T@"NSData",&,V_wrappedKeyDataBackingStore
T@"NSString",&,V_uuid
T@"NSString",&,V_parentKeyUUID
T@"NSString<SecCKKSProcessedState>",C,V_state
currentkey
TB,V_currentkey
_currentkey
_keycore
_wrappedKeyDataBackingStore
initSelfWrappedWithAESKey:uuid:keyclass:state:zoneID:encodedCKRecord:currentkey:
initWithKeyCore:state:currentkey:
wrapsSelf
wrapUnder:error:
unwrapViaTLKSharesTrustedBy:error:
trySelfWrappedKeyCandidate:error:
wrapAESKey:error:
saveKeyMaterialToKeychain:error:
deleteKeyMaterialFromKeychain:
setCurrentkey:
setKeycore:
setWrappedKeyDataBackingStore:
_newZeroingDataWithBytes:length:
base64EncodedDataWithOptions:
currentKeysForClass:state:zoneID:error:
ensureKeyLoadedFromKeychain:
unwrapKey:fromShares:error:
allForUUID:zoneID:error:
setAessivkey:
fromDatabaseAnyState:zoneID:error:
wrappedData
initWithWrappedAESKey:uuid:parentKeyUUID:keyclass:zoneID:
keyWrappedBySelf:uuid:keyclass:zoneID:error:
randomKeyWrappedBySelf:error:
tryFromDatabaseAnyState:zoneID:error:
selfWrappedKeys:error:
remoteKeys:error:
localKeys:error:
countsByClass:error:
initWithBytes:len:
viewAllowList
T@"NSSet",&,V_viewAllowList
pendingSyncCallbacks
T@"NSMutableDictionary",&,V_pendingSyncCallbacks
T@"CKKSNearFutureScheduler",&,V_savedTLKNotifier
ckksActors
T@"NSMutableDictionary",R,V_ckksActors
policy
T@"TPSyncingPolicy",&,V_policy
policyLoaded
T@"CKKSCondition",&,V_policyLoaded
T@"CKKSAccountStateTracker",&,V_accountTracker
T@"CKKSZoneChangeFetcher",&,V_zoneChangeFetcher
T@"CKKSCondition",&,V_completedSecCKKSInitialize
globalRateLimiter
T@"CKKSRateLimiter",&,V_globalRateLimiter
sosPeerAdapter
T@"<OTSOSAdapter>",&,V_sosPeerAdapter
_accountTracker
_zoneChangeFetcher
_completedSecCKKSInitialize
_globalRateLimiter
_sosPeerAdapter
_viewAllowList
_pendingSyncCallbacks
_ckksActors
_policy
_policyLoaded
waitForTrustReady
getGlobalRateLimiter
lockStateChangeNotification:
restartCKKSAccountSync:
restartCKKSAccountSyncWithoutSettingPolicy:
cancelPendingOperations
notifyNewTLKsInKeychain
syncBackupAndNotifyAboutSync
currentTLKsFilteredByPolicy:error:
rpcStatus:fast:reply:
sanitizeErrorDomain:
haltAll
dropAllActors
setAccountTracker:
setZoneChangeFetcher:
setCompletedSecCKKSInitialize:
setGlobalRateLimiter:
setSosPeerAdapter:
setViewAllowList:
setPendingSyncCallbacks:
setSavedTLKNotifier:
setPolicy:
setPolicyLoaded:
halt
updateDeviceState:waitForKeyHierarchyInitialization:ckoperationGroup:
dailyCoreAnalyticsMetrics:
resetExternallyManagedCloudKitView:reply:
modifyTLKSharesForExternallyManagedView:adding:deleting:reply:
fetchExternallyManagedViewKeyHierarchy:forceFetch:reply:
proposeTLKForExternallyManagedView:proposedTLK:wrappedOldTLK:tlkShares:reply:
rpcProcessOutgoingQueue:operationGroup:
setCompletionBlock:
rpcFetchAndProcessIncomingQueue:because:errorOnClassAFailure:
timeIntervalSinceNow
earliestFetchTime
resyncLocal
resyncWithCloud
viewsToPiggybackTLKs
waitUntilFinished
performTransaction:
handleKeychainEventDbConnection:source:added:deleted:rateLimiter:
callSyncCallbackWithErrorNoAccount:
hasValidCredentials
setSyncingViewsAllowList:
initWithContainer:accountTracker:lockStateTracker:reachabilityTracker:changeFetcher:zoneModifier:savedTLKNotifier:cloudKitClassDependencies:
lastOutgoingQueueOperation
lastIncomingQueueOperation
fuzzyNumber:
datePropertyForKey:zoneName:
dateOfLastSuccessForEvent:zoneName:
initWithContainer:reachabilityTracker:cloudkitDependencies:
registerCKKSReceiver:
initWithContainer:fetchClass:reachabilityTracker:
addLockStateObserver:
initWithContainerID:options:
containerID
setBypassPCSEncryption:
TB,V_isInheritedAccount
TI,R
serializedRepresentation
_serializedHolder
initRegularWrappedKeyWithData:
initRefKeyWrappedKeyWithData:refKeyBlob:
setRefKeyBlob:
T@"_SFAuthenticatedCiphertext",R
initWithCiphertext:wrappedKey:tamperCheck:error:
T@"SecDbKeychainAKSWrappedKey",R
initWithCiphertext:wrappedKey:tamperCheck:backupWrappedKey:error:
setSecDbBackupWrappedItemKey:
backupUUID
T@"NSData",&,N,V_backupUUID
Ti,R,N,V_keyclass
_encryptedMetadata
_secretAttributes
_metadataAttributes
_backupUUID
initWithData:decryptionKeybag:error:
initWithSecretAttributes:metadataAttributes:tamperCheck:keyclass:
metadataAttributesWithError:
secretAttributesWithAcmContext:accessControl:callerAccessGroups:keyDiversify:error:
deleteWithAcmContext:accessControl:callerAccessGroups:keyDiversify:error:
encryptedBlobWithKeybag:accessControl:acmContext:error:
encryptedMetadataBlob
encryptedSecretDataBlob
encryptMetadataWithKeybag:error:
encryptSecretDataWithKeybag:accessControl:acmContext:error:
metadataClassKeyWithKeybag:allowWrites:error:
wrapToAKS:withKeybag:accessControl:acmContext:error:
unwrapFromAKS:accessControl:acmContext:callerAccessGroups:delete:keyDiversify:error:
setBackupUUID:
initWithLength:
isDataSeparatedPersona
initWithBytes:length:
initWithBytesNoCopy:length:
keyForKeyclass:keybag:keySpecifier:allowWrites:error:
sharedStore
encryptionOperation
setEncryptedSecretData:
setEncryptedMetadata:
decryptionOperation
encryptedMetadata
encryptedSecretData
haveNetwork
TB,V_haveNetwork
networkMonitor
T@"NSObject<OS_nw_path_monitor>",&,V_networkMonitor
reachabilityDependency
T@"CKKSResultOperation",&,V_reachabilityDependency
currentReachability
_haveNetwork
_reachabilityDependency
_networkMonitor
_onQueueRunReachabilityDependency
_onQueueResetReachabilityDependency
_onqueueSetNetworkReachability:
setNetworkReachability:
setReachabilityDependency:
setHaveNetwork:
setNetworkMonitor:
noteEvent:
stateEngine
T@"<OctagonStateMachineEngine>",W,V_stateEngine
mutableStateConditions
T@"NSMutableDictionary",&,V_mutableStateConditions
T@"CKKSCondition",&,V_paused
currentFlags
T@"OctagonFlags",&,V_currentFlags
holdStateMachineOperation
T@"NSOperation",&,V_holdStateMachineOperation
testHoldStates
T@"NSMutableSet",&,V_testHoldStates
nextStateMachineCycleOperation
T@"CKKSResultOperation",&,V_nextStateMachineCycleOperation
stateMachineRequests
T@"NSMutableArray",&,V_stateMachineRequests
stateMachineWatchers
T@"NSMutableArray",&,V_stateMachineWatchers
halted
TB,V_halted
allowPendingFlags
TB,V_allowPendingFlags
pendingFlags
T@"NSMutableDictionary",&,V_pendingFlags
pendingFlagsScheduler
T@"CKKSNearFutureScheduler",&,V_pendingFlagsScheduler
conditionChecksInFlight
TQ,V_conditionChecksInFlight
currentConditions
TQ,V_currentConditions
checkUnlockOperation
T@"NSOperation",&,V_checkUnlockOperation
checkReachabilityOperation
T@"NSOperation",&,V_checkReachabilityOperation
T@"<OctagonFlagContainer>",R
stateConditions
allowableStates
T@"NSSet",R,V_allowableStates
TQ,N,V_timeout
_currentState
_halted
_allowPendingFlags
_paused
_allowableStates
_timeout
_stateEngine
_mutableStateConditions
_currentFlags
_holdStateMachineOperation
_testHoldStates
_nextStateMachineCycleOperation
_stateMachineRequests
_stateMachineWatchers
_pendingFlags
_pendingFlagsScheduler
_conditionChecksInFlight
_currentConditions
_checkUnlockOperation
_checkReachabilityOperation
pendingFlagsString
setCurrentState:
_onqueueNextStateMachineTransition
_onqueueStartNextStateMachineOperation:
createOperationToFinishAttempt:
_onqueueHandlePendingFlag:
possiblePendingFlags
_onqueueRecheckConditions
_onqueueSendAnyPendingFlags
testPauseStateMachineAfterEntering:
testReleaseStateMachinePause:
registerStateTransitionWatcher:
registerMultiStateArrivalWatcher:
setWatcherTimeout:
doWatchedStateMachineRPC:sourceStates:path:transitionOp:reply:
setPaused:
setTimeout:
setStateEngine:
setMutableStateConditions:
setCurrentFlags:
setHoldStateMachineOperation:
setTestHoldStates:
setNextStateMachineCycleOperation:
setStateMachineRequests:
setStateMachineWatchers:
setHalted:
setAllowPendingFlags:
setPendingFlags:
setPendingFlagsScheduler:
setConditionChecksInFlight:
setCurrentConditions:
setCheckUnlockOperation:
setCheckReachabilityOperation:
earlierDate:
_onqueueStart
sourceStates
setByAddingObjectsFromArray:
resetSharedStore
listeners
T@"NSMapTable",&,V_listeners
_listeners
setListeners:
updateOp
T@"OTUpdateTrustedDeviceListOperation",&,V_updateOp
peerPreapprovedSPKIs
T@"NSArray",&,V_peerPreapprovedSPKIs
T@"TPPolicyVersion",R,V_policyOverride
_updateOp
_peerPreapprovedSPKIs
persistentKeyRef:error:
afterPrepare
afterPreflight
handlePrepareErrors:nextExpectedState:
afterUpdate
requestSilentEscrowUpdate
afterSuccessfulAllowList
setUpdateOp:
setPeerPreapprovedSPKIs:
successDependencies
T@"NSMutableArray",&,V_successDependencies
timeoutQueue
T@"NSObject<OS_dispatch_queue>",&,V_timeoutQueue
finishingBlock
T@?,C,V_finishingBlock
T@"NSDate",&,V_finishDate
completionHandlerDidRunCondition
T@"CKKSCondition",&,V_completionHandlerDidRunCondition
descriptionErrorCode
Tq,V_descriptionErrorCode
_finishDate
_completionHandlerDidRunCondition
_descriptionErrorCode
_successDependencies
_timeoutQueue
_finishingBlock
dependenciesDescriptionError
descriptionError
_onqueueTimeoutError
setFinishDate:
setCompletionHandlerDidRunCondition:
setSuccessDependencies:
setTimeoutQueue:
setFinishingBlock:
objectsAtIndexes:
indexesOfObjectsPassingTest:
isReady
leafRecordIDs
T@"NSArray",R,N,V_leafRecordIDs
peerManifestIDs
T@"NSArray",R,N,V_peerManifestIDs
currentItems
T@"NSDictionary",R,N,V_currentItemsDict
futureData
T@"NSDictionary",R,N,V_futureData
signatures
T@"NSDictionary",R,N,V_signaturesDict
schema
T@"NSDictionary",R,N,V_schema
signerID
T@"NSString",&,N,V_signerID
helper
T@"CKKSManifestInjectionPointHelper",&,N,V_helper
TQ,R,N,V_generationCount
_signerID
_leafRecordIDs
_peerManifestIDs
_currentItemsDict
_futureData
_signaturesDict
_schema
_helper
initWithDigestValue:zone:generationCount:leafRecordIDs:peerManifestIDs:currentItems:futureData:signatures:signerID:schema:helper:
initWithDigestValue:zone:generationCount:leafRecordIDs:peerManifestIDs:currentItems:futureData:signatures:signerID:schema:
initWithDigestValue:zone:generationCount:leafRecordIDs:peerManifestIDs:currentItems:futureData:signatures:signerID:schema:encodedRecord:
defaultHelperForSignerID:
signatureDictFromDERData:error:
derDataFromSignatureDict:error:
peerManifestsFromDERData:error:
derDataFromPeerManifests:error:
futureDataDictFromRecord:withSchema:
updateWithRecord:error:
validateWithError:
validateItem:withError:
validateCurrentItem:withError:
itemUUIDExistsInManifest:
contentsAreEqualToManifest:
leafRecordForID:
leafRecordForItemUUID:
leafRecords
nilAllIvars
setSignerID:
setHelper:
digestValueForLeafRecords:
characterAtIndex:
digestForData:
performWithPeerVerifyingKeys:
localizedStringWithFormat:
signatureOperation
initWithBase64EncodedData:options:
initWithData:encoding:
ignoreChanges
_keyPair
initWithPeerID:keyPair:isEgoPeer:
performWithSigningKey:
performWithEgoPeerID:
peerVerifyingKeys
setupError
registerHelper:forPeer:
registerEgoPeerID:keyPair:
setIgnoreChanges:
addObjectsFromArray:
initWithObjects:
greatestKnownGenerationCount
initialize
loadDefaults
shouldSyncManifests
shouldEnforceManifests
performWithAccountInfo:
manifestForZone:peerID:error:
manifestForRecordName:error:
latestTrustedManifestForZone:error:
manifestForPendingManifest:
whereClauseForRecordName:
committedLeafRecordIDs
T@"NSArray",R,N,V_committedLeafRecordIDs
readyToCommit
TB,R,GisReadyToCommmit,V_readyToCommit
_committedLeafRecordIDs
_readyToCommit
isReadyToCommit
isReadyToCommmit
enumerateObjectsWithOptions:usingBlock:
setSetupError:
setPeerVerifyingKeys:
setEgoPeerID:
egoHelper
T@"NSDictionary",&,N
_leafRecords
loadLeafRecords:error:
initWithDigestValue:zone:generationCount:leafRecords:peerManifestIDs:currentItems:futureData:signatures:signerID:schema:
updateWithNewOrChangedRecords:deletedRecordIDs:
setCurrentItemUUID:forIdentifier:
allCKRecordsWithZoneID:
setSignatures:
generateSignaturesWithHelper:derData:error:
T@"CKKSManifestInjectionPointHelper",R
leafRecordsForItems:manifestName:zone:
tryCurrentEgoManifestForZone:
newFakeManifestForZone:withItemRecords:currentItems:signerID:keyPair:error:
newManifestForZone:withItems:peerManifestIDs:currentItems:error:
newManifestForZone:withItems:peerManifestIDs:currentItems:error:helper:
T@"NSDictionary",&,V_peerVerifyingKeys
T@"NSString",&,V_egoPeerID
T@"NSError",&,V_setupError
_peerVerifyingKeys
_egoPeerID
_setupError
dictionaryWithContentsOfFile:
pathForResource:ofType:
bundleWithPath:
peerProviderID
T@"NSString",&,V_peerProviderID
currentSelfPeers
T@"CKKSSelves",R,N,V_currentSelfPeers
T@"NSError",R,N,V_currentSelfPeersError
currentTrustedPeers
T@"NSSet",R,N,V_currentTrustedPeers
currentTrustedPeerIDs
T@"NSSet",R,N,V_currentTrustedPeerIDs
T@"NSError",R,N,V_currentTrustedPeersError
_peerProviderID
_currentSelfPeers
_currentSelfPeersError
_currentTrustedPeers
_currentTrustedPeerIDs
_currentTrustedPeersError
setPeerProviderID:
recoverTLK:trustedPeers:error:
noPeersState:
T@"CKContainer",&,N,V_container
database
T@"CKDatabase",&,N,V_database
T@"CKRecordZone",&,N,V_zone
T@"CKRecordZoneID",&,N,V_zoneID
T@"NSString",&,N,V_recordName
localSettingName
T@"NSString",&,N,V_localSettingName
T@"CKRecordID",&,N,V_recordID
T@"CKKSAccountStateTracker",&,N,V_accountTracker
T@"CKKSReachabilityTracker",&,N,V_reachabilityTracker
Tq,V_accountStatus
fetchRecordRecordsOperationClass
T#,R,V_fetchRecordRecordsOperationClass
lastFetch
T@"NSDate",&,V_lastFetch
retryAfter
Td,V_retryAfter
cachedFeatureAllowed
TB,V_cachedFeatureAllowed
featureName
T@"NSString",R,N,V_featureName
_cachedFeatureAllowed
_featureName
_database
_zone
_recordName
_localSettingName
_accountStatus
_fetchRecordRecordsOperationClass
_lastFetch
_retryAfter
fetchRampRecord:reply:
setDatabase:
setZone:
setRecordName:
setLocalSettingName:
setAccountStatus:
setLastFetch:
setRetryAfter:
setCachedFeatureAllowed:
stop
logSystemMetricsForActivityNamed:withAction:
setFetchRecordsCompletionBlock:
setConfiguration:
setDesiredKeys:
initWithRecordIDs:
setAllowsCellularAccess:
persistNewTrustState:error:
accountIsHSA2ByAltDSID:
notifiers
T@"CKKSListenerCollection<OTAuthKitAdapterNotifier>",&,V_notifiers
_notifiers
notifyAKDeviceList:
setNotifiers:
operation
machineIDs
initWithResponseBody:
fetchDeviceListWithContext:completion:
machineId
anisetteDataWithError:
demoAccountForAccount:
authKitAccountWithAltDSID:
sharedInstance
securityLevelForAccount:
T@"OTManager",&,V_manager
entitlementBearer
T@"<OctagonEntitlementBearerProtocol>",&,V_entitlementBearer
_manager
_entitlementBearer
initWithManager:entitlementBearer:
methodSignatureForSelector:
forwardInvocation:
failFetchEscrowContents:contextID:reply:
failSetLocalSecureElementIdentity:contextID:secureElementIdentity:reply:
failRemoveLocalSecureElementIdentityPeerID:contextID:secureElementIdentityPeerID:reply:
failFetchTrustedSecureElementIdentities:contextID:reply:
failFetchAccountSettings:contextID:reply:
failFetchAccountWideSettings:contextID:reply:
setManager:
setEntitlementBearer:
invokeWithTarget:
setSelector:
selector
createWithManager:entitlementBearer:
viewsRequiringTLKUpload
hasRefKeyBlob
T@"NSData",&,N,V_refKeyBlob
TI,N,V_type
numberWithUnsignedInt:
taskMap
T@"NSMutableDictionary",&,V_taskMap
URLSession
T@"NSURLSession",&,V_URLSession
lostEvents
Tq,V_lostEvents
_taskMap
_URLSession
_lostEvents
URLSession:didBecomeInvalidWithError:
URLSession:didReceiveChallenge:completionHandler:
URLSessionDidFinishEventsForBackgroundURLSession:
sendEvent:pushTopic:
getEvent:
URLSession:task:didCompleteWithError:
requestForGenericEvent:
gzipEncode:
generateDeviceInfo
setTaskMap:
setURLSession:
setLostEvents:
setProcessUuid:
processUUID
setProcessVersion:
processVersion
setProcessName:
processName
setProductBuild:
buildVersion
setProductVersion:
productVersion
setProductType:
productType
setProductName:
productName
setValue:forHTTPHeaderField:
setHTTPBody:
setHTTPMethod:
immutableData
initWithURL:
c2MetricsEndpoint
taskIdentifier
originalRequest
eventName
set_APSRelayTopic:
dataTaskWithRequest:
sessionWithConfiguration:delegate:delegateQueue:
ephemeralSessionConfiguration
URLByAppendingPathComponent:
initWithString:
propertiesForDataclass:
linearDependenciesWithSelfFirst:
isCKPartialError:
addCKPartialError:error:depth:
errorChain:depth:
createErrorAttributes:depth:attributes:
noteEvent:zoneName:
setDateProperty:forKey:zoneName:
noteEventNamed:
logHardFailureForEventNamed:withAttributes:
setValuesForKeysWithDictionary:
logSoftFailureForEventNamed:withAttributes:
databasePath
defaultAnalyticsDatabasePath:
hasErrorDomain
errorDomain
T@"NSString",&,N,V_errorDomain
hasErrorCode
errorCode
Tq,N,V_errorCode
hasErrorDescription
errorDescription
T@"NSString",&,N,V_errorDescription
hasUnderlyingError
underlyingError
T@"SECC2MPError",&,N,V_underlyingError
_errorCode
_errorDescription
_errorDomain
_underlyingError
setErrorCode:
setHasErrorCode:
setErrorDomain:
setErrorDescription:
setUnderlyingError:
hasLastEscrowAttemptTime
lastEscrowAttemptTime
device
T@"NSString",&,V_device
T@"NSString",&,V_osVersion
lastUnlockTime
T@"NSDate",&,V_lastUnlockTime
circlePeerID
T@"NSString",&,V_circlePeerID
circleStatus
Ti,V_circleStatus
keyState
T@"NSString<OctagonStateString>",&,V_keyState
currentTLKUUID
T@"NSString",&,V_currentTLKUUID
currentClassAUUID
T@"NSString",&,V_currentClassAUUID
currentClassCUUID
T@"NSString",&,V_currentClassCUUID
_circleStatus
_device
_osVersion
_lastUnlockTime
_circlePeerID
_keyState
_currentTLKUUID
_currentClassAUUID
_currentClassCUUID
initForDevice:osVersion:lastUnlockTime:octagonPeerID:octagonStatus:circlePeerID:circleStatus:keyState:currentTLKUUID:currentClassAUUID:currentClassCUUID:zoneID:encodedCKRecord:
sosCCStatusToCKType:
cktypeToSOSCCStatus:
cliqueStatusToCKType:
cktypeToOTCliqueStatusWrapper:
setDevice:
setOsVersion:
setLastUnlockTime:
setCirclePeerID:
setCircleStatus:
setKeyState:
setCurrentTLKUUID:
setCurrentClassAUUID:
setCurrentClassCUUID:
nameFromCKRecordID:
tryFromDatabaseFromCKRecordID:error:
startOfDayForDate:
setTimeZone:
timeZoneWithAbbreviation:
calendarWithIdentifier:
hasOperationId
operationId
T@"NSString",&,N,V_operationId
hasOperationType
operationType
T@"NSString",&,N,V_operationType
hasOperationTriggered
operationTriggered
TB,N,V_operationTriggered
hasOperationGroupIndex
operationGroupIndex
TI,N,V_operationGroupIndex
_operationGroupIndex
_operationId
_operationType
_operationTriggered
setOperationTriggered:
setHasOperationTriggered:
setOperationGroupIndex:
setHasOperationGroupIndex:
setOperationId:
setOperationType:
T@"NSData",&,N,V_permanentInfo
T@"NSData",&,N,V_permanentInfoSig
T@"NSData",&,N,V_stableInfo
T@"NSData",&,N,V_stableInfoSig
initWithDependencies:intendedState:errorState:deviceInfo:peerID:permanentInfo:permanentInfoSig:stableInfo:stableInfoSig:
proceedWithKeys:
fixupOperation:
initWithOperationDependencies:ckoperationGroup:
fetchRecordsOperationClass
setQueryCompletionBlock:
setRecordFetchedBlock:
initWithQuery:
queryOperationClass
initWithRecordType:predicate:
predicateWithValue:
fixupNumber
TQ,V_fixupNumber
_fixupNumber
initWithOperationDependencies:fixupNumber:ckoperationGroup:entering:
setFixupNumber:
stateInit
OctagonStateInverseMap
peerIDs
T@"NSSet",&,V_peerIDs
_peerIDs
setPeerIDs:
accountFromData:factory:error:
trust
copyPublicKeyForPeer:err:
T#,R,V_fetchRecordsOperationClass
T#,R,V_queryOperationClass
modifySubscriptionsOperationClass
T#,R,V_modifySubscriptionsOperationClass
modifyRecordZonesOperationClass
T#,R,V_modifyRecordZonesOperationClass
nsdistributednotificationCenterClass
T#,R,V_nsdistributednotificationCenterClass
_fetchRecordsOperationClass
_queryOperationClass
_modifySubscriptionsOperationClass
_modifyRecordZonesOperationClass
_nsdistributednotificationCenterClass
initWithFetchRecordZoneChangesOperationClass:fetchRecordsOperationClass:queryOperationClass:modifySubscriptionsOperationClass:modifyRecordZonesOperationClass:apsConnectionClass:nsnotificationCenterClass:nsdistributednotificationCenterClass:notifierClass:
hasClientProcessVersion
clientProcessVersion
T@"NSString",&,N,V_clientProcessVersion
hasClientBundleId
clientBundleId
T@"NSString",&,N,V_clientBundleId
hasContainer
T@"NSString",&,N,V_container
hasEnvironment
environment
T@"NSString",&,N,V_environment
hasAnonymous
anonymous
TB,N,V_anonymous
operationGroups
T@"NSMutableArray",&,N,V_operationGroups
hasReportOperationGroupFrequency
reportOperationGroupFrequency
TQ,N,V_reportOperationGroupFrequency
hasReportOperationGroupFrequencyBase
reportOperationGroupFrequencyBase
TQ,N,V_reportOperationGroupFrequencyBase
clientOperations
T@"NSMutableArray",&,N,V_clientOperations
hasReportClientOperationFrequency
reportClientOperationFrequency
TQ,N,V_reportClientOperationFrequency
hasReportClientOperationFrequencyBase
reportClientOperationFrequencyBase
TQ,N,V_reportClientOperationFrequencyBase
_reportClientOperationFrequency
_reportClientOperationFrequencyBase
_reportOperationGroupFrequency
_reportOperationGroupFrequencyBase
_clientBundleId
_clientOperations
_clientProcessVersion
_environment
_operationGroups
_anonymous
setAnonymous:
setHasAnonymous:
clearOperationGroups
addOperationGroup:
operationGroupsCount
operationGroupAtIndex:
setReportOperationGroupFrequency:
setHasReportOperationGroupFrequency:
setReportOperationGroupFrequencyBase:
setHasReportOperationGroupFrequencyBase:
clearClientOperations
addClientOperation:
clientOperationsCount
clientOperationAtIndex:
setReportClientOperationFrequency:
setHasReportClientOperationFrequency:
setReportClientOperationFrequencyBase:
setHasReportClientOperationFrequencyBase:
setClientProcessVersion:
setClientBundleId:
setEnvironment:
setOperationGroups:
setClientOperations:
operationGroupType
clientOperationType
modifyRecordsOperation
T@"CKModifyRecordsOperation",&,V_modifyRecordsOperation
accessGroup
T@"NSString",&,V_accessGroup
newerItemPersistentRef
T@"NSData",&,V_newerItemPersistentRef
newerItemSHA1
T@"NSData",&,V_newerItemSHA1
oldItemPersistentRef
T@"NSData",&,V_oldItemPersistentRef
oldItemSHA1
T@"NSData",&,V_oldItemSHA1
newItem
T^{SecDbItem={__CFRuntimeBase=QAQ}^{SecDbClass}iii^{__CFDictionary}^{__CFData}^v^{__CFArray}},V_newItem
oldItem
T^{SecDbItem={__CFRuntimeBase=QAQ}^{SecDbClass}iii^{__CFDictionary}^{__CFData}^v^{__CFArray}},V_oldItem
currentPointerIdentifier
T@"NSString",&,V_currentPointerIdentifier
viewState
T@"CKKSKeychainViewState",R,V_viewState
_currentPointerIdentifier
_viewState
_modifyRecordsOperation
_accessGroup
_newerItemPersistentRef
_newerItemSHA1
_oldItemPersistentRef
_oldItemSHA1
_newItem
_oldItem
initWithCKKSOperationDependencies:viewState:newItem:hash:accessGroup:identifier:replacing:hash:ckoperationGroup:
_onqueueFindSecDbItem:accessGroup:error:
setCurrentPointerIdentifier:
setModifyRecordsOperation:
setAccessGroup:
setNewerItemPersistentRef:
setNewerItemSHA1:
setOldItemPersistentRef:
setOldItemSHA1:
setNewItem:
setOldItem:
rollTLKIfPresent
TB,V_rollTLKIfPresent
previousPendingKeySets
T@"NSDictionary",&,V_previousPendingKeySets
T@"CKKSOperationDependencies",R,V_deps
_rollTLKIfPresent
_previousPendingKeySets
initWithDependencies:rollTLKIfPresent:preexistingPendingKeySets:intendedState:errorState:
setRollTLKIfPresent:
setPreviousPendingKeySets:
randomKey:
stateIfNotHSA2
T@"NSString<OctagonStateString>",&,V_stateIfNotHSA2
stateIfNoAccount
T@"NSString<OctagonStateString>",&,V_stateIfNoAccount
_stateIfNotHSA2
_stateIfNoAccount
setStateIfNotHSA2:
setStateIfNoAccount:
afterTPHTrustState:trustedPeers:
T@"<OctagonFollowUpControllerProtocol>",&,V_cdpd
previousFollowupEnd
Td,V_previousFollowupEnd
followupStart
Td,V_followupStart
followupEnd
Td,V_followupEnd
postedCFUTypes
T@"NSMutableSet",&,V_postedCFUTypes
_previousFollowupEnd
_followupStart
_followupEnd
_postedCFUTypes
createCDPFollowupContext:
clearFollowUp:error:
setPreviousFollowupEnd:
setFollowupStart:
setFollowupEnd:
setPostedCFUTypes:
clearFollowUpWithContext:error:
postFollowUpWithContext:error:
contextForStateRepair
contextForConfirmExistingSecret
hasPosted:
clearAllPostedFlags
keyCache
T@"NSMutableDictionary",&,V_keyCache
_keyCache
loadKeyForItem:error:
setKeyCache:
queueIsLocked
TB,V_queueIsLocked
observers
T@"NSHashTable",&,V_observers
notify_token
Ti,V_notify_token
lastUnlockedTime
T@"NSDate",&,V_lastUnlockedTime
T@"NSOperation",&,V_unlockDependency
lockStateProvider
T@"<CKKSLockStateProviderProtocol>",&,V_lockStateProvider
_queueIsLocked
_notify_token
_unlockDependency
_lockStateProvider
_observers
_lastUnlockedTime
initWithProvider:
resetUnlockDependency
_onqueueRecheck
lockedError:
checkErrorChainForLockState:
setUnlockDependency:
setLockStateProvider:
setQueueIsLocked:
setObservers:
setNotify_token:
setLastUnlockedTime:
queryAKSLocked
isAppleInternal
infoDictionary
mainBundle
hasSecDbBackupWrappedItemKey
secDbBackupWrappedItemKey
T@"NSData",&,N,V_secDbBackupWrappedItemKey
_secDbBackupWrappedItemKey
hasKeyclass
Ti,N,V_keyclass
hasActualKeyclass
actualKeyclass
Ti,N,V_actualKeyclass
hasBaguuid
hasAkswrappedkey
akswrappedkey
T@"NSData",&,N,V_akswrappedkey
hasBackupwrappedkey
backupwrappedkey
T@"NSData",&,N,V_backupwrappedkey
_actualKeyclass
_akswrappedkey
_backupwrappedkey
setHasKeyclass:
setActualKeyclass:
setHasActualKeyclass:
setAkswrappedkey:
setBackupwrappedkey:
itemModificationsBeforePolicyLoaded
TB,V_itemModificationsBeforePolicyLoaded
outgoingQueueOperationScheduler
T@"CKKSNearFutureScheduler",&,V_outgoingQueueOperationScheduler
resultsOfNextIncomingQueueOperationOperation
T@"CKKSResultOperation",&,V_resultsOfNextIncomingQueueOperationOperation
outgoingQueueOperations
T@"NSHashTable",&,V_outgoingQueueOperations
resyncRecordsSeen
T@"NSMutableSet",&,V_resyncRecordsSeen
T@"CKKSSecDbAdapter",&,V_databaseProvider
accountLoggedInDependency
T@"CKKSResultOperation",&,V_accountLoggedInDependency
T@"NSArray",&,V_currentTrustStates
havoc
TB,V_havoc
T@"CKKSCloudKitClassDependencies",R,V_cloudKitClassDependencies
T@"NSObject<OS_dispatch_queue>",R,V_queue
loggedIn
T@"CKKSCondition",&,V_loggedIn
loggedOut
T@"CKKSCondition",&,V_loggedOut
accountStateKnown
T@"CKKSCondition",&,V_accountStateKnown
trustStatus
Tq,V_trustStatus
trustStatusKnown
T@"CKKSCondition",&,V_trustStatusKnown
T@"TPSyncingPolicy",R
keyStateMachineRefetched
TB,V_keyStateMachineRefetched
keyStateFullRefetchRequested
TB,V_keyStateFullRefetchRequested
suggestTLKUpload
T@"CKKSNearFutureScheduler",&,V_suggestTLKUpload
T@"CKKSIncomingQueueOperation",&,V_lastIncomingQueueOperation
lastNewTLKOperation
T@"CKKSNewTLKOperation",&,V_lastNewTLKOperation
T@"CKKSOutgoingQueueOperation",&,V_lastOutgoingQueueOperation
lastProcessReceivedKeysOperation
T@"CKKSProcessReceivedKeysOperation",&,V_lastProcessReceivedKeysOperation
lastReencryptOutgoingItemsOperation
T@"CKKSReencryptOutgoingItemsOperation",&,V_lastReencryptOutgoingItemsOperation
lastSynchronizeOperation
T@"CKKSSynchronizeOperation",&,V_lastSynchronizeOperation
lastFixupOperation
T@"CKKSResultOperation",&,V_lastFixupOperation
holdOutgoingQueueOperation
T@"NSOperation",&,V_holdOutgoingQueueOperation
holdIncomingQueueOperation
T@"NSOperation",&,V_holdIncomingQueueOperation
T@"NSOperation",&,V_holdLocalSynchronizeOperation
T@"NSString",R,V_zoneName
initiatedLocalScan
TB,V_initiatedLocalScan
T@"CKKSOperationDependencies",R,V_operationDependencies
_keyStateMachineRefetched
_keyStateFullRefetchRequested
_initiatedLocalScan
_itemModificationsBeforePolicyLoaded
_havoc
_loggedIn
_loggedOut
_accountStateKnown
_trustStatus
_trustStatusKnown
_suggestTLKUpload
_lastIncomingQueueOperation
_lastNewTLKOperation
_lastOutgoingQueueOperation
_lastProcessReceivedKeysOperation
_lastReencryptOutgoingItemsOperation
_lastSynchronizeOperation
_lastFixupOperation
_holdOutgoingQueueOperation
_holdIncomingQueueOperation
_holdLocalSynchronizeOperation
_outgoingQueueOperationScheduler
_resultsOfNextIncomingQueueOperationOperation
_outgoingQueueOperations
_resyncRecordsSeen
_accountLoggedInDependency
_currentTrustStates
zoneIsReadyForFetching:
shouldRetryAfterFetchError:zoneID:
performInitializedOperation
keyStateMachineRequestProcess
_onqueuePokeKeyStateMachine
becomeReadyOperation:
loseTrustOperation:
anyViewsInState:
tlkMissingOperation:
_onqueueOtherDevicesReportHavingTLKs:trustStates:
findFirstPendingOperation:
findFirstPendingOperation:ofClass:
_onqueueProcessOutgoingQueue:
resultsOfNextProcessIncomingQueueOperation
rpcFetchBecause:
scanLocalItems
_onqueueResetAllInflightOQE:
createAccountLoggedInDependency:
accountStatusFromCKAccountInfo:
handleCKLogin
handleCKLogout
createViewState:zoneIsNew:ckksManagedView:
_onQueueZoneIsReadyForFetching:
ckErrorOrPartialError:isError:zoneID:
outgoingQueueEmpty:
waitForFetchAndIncomingQueueProcessing
waitForKeyHierarchyReadiness
scheduleOperation:
scheduleOperationWithoutDependencies:
waitUntilAllOperationsAreFinished
waitForOperationsOfClass:
waitForPolicy:error:
policyDependentViewStateForName:error:
waitUntilReadyForRPCForOperation:fast:errorOnNoCloudKitAccount:errorOnPolicyMissing:error:
intransactionSlowStatus:
fastStatus:zoneStateEntry:
setLoggedIn:
setLoggedOut:
setAccountStateKnown:
setTrustStatus:
setTrustStatusKnown:
setKeyStateMachineRefetched:
setKeyStateFullRefetchRequested:
setSuggestTLKUpload:
setLastIncomingQueueOperation:
setLastNewTLKOperation:
setLastOutgoingQueueOperation:
setLastProcessReceivedKeysOperation:
setLastReencryptOutgoingItemsOperation:
setLastFixupOperation:
setHoldOutgoingQueueOperation:
setHoldIncomingQueueOperation:
setHoldLocalSynchronizeOperation:
setInitiatedLocalScan:
setItemModificationsBeforePolicyLoaded:
setOutgoingQueueOperationScheduler:
setResultsOfNextIncomingQueueOperationOperation:
setOutgoingQueueOperations:
setResyncRecordsSeen:
setDatabaseProvider:
setAccountLoggedInDependency:
setCurrentTrustStates:
setHavoc:
sortedArrayUsingDescriptors:
sortDescriptorWithKey:ascending:
cloudkitRetryAfter
notifyViewReadyScheduler
keyHierarchyConditions
launchComplete
initWithZoneID:ckksManagedView:notifyViewChangedScheduler:notifyViewReadyScheduler:
postNotificationName:object:userInfo:options:
registerClient:zoneID:
setByAddingObjectsFromSet:
intersectSet:
setDay:
addAttribute:value:
launched
initWithDependencies:intendedState:errorState:holdOperation:
requestSuccessfulFetchForManyReasons:
containerIdentifier
T@"NSString",&,V_containerName
T@"NSString",&,V_contextID
T@"CuttlefishXPCWrapper",&,V_cuttlefishXPCWrapper
init:contextID:intendedState:errorState:cuttlefishXPCWrapper:
setContainerName:
setContextID:
setCuttlefishXPCWrapper:
T@"NSData",&,N,V_encryptedSecretData
T@"NSData",&,N,V_encryptedMetadata
keyclassAsString:
StringAsKeyclass:
storageFile
T@"NSURL",&,V_storageFile
storageClass
T#,&,V_storageClass
protobufStorage
T@"<CKKSPBCodable>",&,V_protobufStorage
_storageFile
_storageClass
_protobufStorage
initWithStoragePath:storageClass:
storage
setStorage:
setStorageFile:
setStorageClass:
setProtobufStorage:
writeToURL:atomically:
dataWithContentsOfURL:
processRemoteKeys:viewState:currentTrustStates:error:
checkExistingKeyHierarchy:zoneID:currentTrustStates:error:
T@"CKKSTLKShare",&,V_share
Tq,R
_share
init:sender:receiver:curve:version:epoch:poisoned:zoneID:encodedCKRecord:
initForKey:senderPeerID:recieverPeerID:receiverEncPublicKeySPKI:curve:version:epoch:poisoned:wrappedKey:signature:zoneID:encodedCKRecord:
dataForSigning
signRecord:error:
verifySignature:verifyingPeer:error:
signatureVerifiesWithPeerSet:error:
setShare:
fromDatabase:receiverPeerID:senderPeerID:zoneID:error:
tryFromDatabase:receiverPeerID:senderPeerID:zoneID:error:
allFor:keyUUID:zoneID:error:
ckrecordPrefix
substringWithRange:
rangeWithName:
firstMatchInString:options:range:
regularExpressionWithPattern:options:error:
T@"NSSet",&,V_allowableStates
readyNotificationArmed
TB,V_readyNotificationArmed
T@"CKRecordZoneID",R,V_zoneID
T@"CKKSLaunchSequence",&,V_launch
T@"NSString<OctagonStateString>",&,V_viewKeyHierarchyState
TB,R,V_ckksManagedView
T@"CKKSNearFutureScheduler",&,V_notifyViewChangedScheduler
T@"CKKSNearFutureScheduler",&,V_notifyViewReadyScheduler
_ckksManagedView
_readyNotificationArmed
_viewKeyHierarchyState
_launch
_notifyViewChangedScheduler
_notifyViewReadyScheduler
setLaunch:
setNotifyViewChangedScheduler:
setNotifyViewReadyScheduler:
setAllowableStates:
setReadyNotificationArmed:
failedDueToLockState
TB,V_failedDueToLockState
failedDueToEssentialTrustState
TB,V_failedDueToEssentialTrustState
_failedDueToLockState
_failedDueToEssentialTrustState
checkAndHealTLKShares:currentTrustStates:
areNewSharesSufficient:trustStates:error:
setFailedDueToLockState:
setFailedDueToEssentialTrustState:
filterTrustedPeers:missingTLKSharesFor:databaseProvider:error:
createMissingKeyShares:peers:databaseProvider:error:
initIntending:errorState:
T@"NSSet",R,V_sourceStates
T@"CKKSResultOperation<OctagonStateTransitionOperationProtocol>",R,V_transitionOperation
_sourceStates
_transitionOperation
publickeyHash
T@"NSData",&,V_publickeyHash
publickey
T@"NSData",&,V_publickey
musr
T@"NSData",&,V_musr
_publickeyHash
_publickey
_musr
initWithPublicKey:publickeyHash:user:
setPublickeyHash:
setPublickey:
setMusr:
hasNetworkTaskDescription
networkTaskDescription
T@"NSString",&,N,V_networkTaskDescription
hasNetworkHostname
networkHostname
T@"NSString",&,N,V_networkHostname
hasNetworkRemoteAddresssAndPort
networkRemoteAddresssAndPort
T@"NSString",&,N,V_networkRemoteAddresssAndPort
hasNetworkConnectionUuid
networkConnectionUuid
T@"NSString",&,N,V_networkConnectionUuid
hasNetworkConnectionReused
networkConnectionReused
TB,N,V_networkConnectionReused
hasNetworkInterfaceIdentifier
networkInterfaceIdentifier
T@"NSString",&,N,V_networkInterfaceIdentifier
hasNetworkProtocolName
networkProtocolName
T@"NSString",&,N,V_networkProtocolName
hasNetworkRequestHeaderSize
networkRequestHeaderSize
TI,N,V_networkRequestHeaderSize
hasNetworkRequestBodyBytesSent
networkRequestBodyBytesSent
TQ,N,V_networkRequestBodyBytesSent
hasNetworkResponseHeaderSize
networkResponseHeaderSize
TI,N,V_networkResponseHeaderSize
hasNetworkResponseBodyBytesReceived
networkResponseBodyBytesReceived
TQ,N,V_networkResponseBodyBytesReceived
hasNetworkPreviousAttemptCount
networkPreviousAttemptCount
TI,N,V_networkPreviousAttemptCount
hasNetworkFatalError
networkFatalError
T@"SECC2MPError",&,N,V_networkFatalError
hasNetworkStatusCode
networkStatusCode
TQ,N,V_networkStatusCode
hasNetworkRequestUri
networkRequestUri
T@"NSString",&,N,V_networkRequestUri
hasTimestampC2Init
timestampC2Init
TQ,N,V_timestampC2Init
hasTimestampC2Start
timestampC2Start
TQ,N,V_timestampC2Start
hasTimestampC2Now
timestampC2Now
TQ,N,V_timestampC2Now
hasTimestampDnsStart
timestampDnsStart
TQ,N,V_timestampDnsStart
hasTimestampDnsEnd
timestampDnsEnd
TQ,N,V_timestampDnsEnd
hasTimestampTcpStart
timestampTcpStart
TQ,N,V_timestampTcpStart
hasTimestampTcpEnd
timestampTcpEnd
TQ,N,V_timestampTcpEnd
hasTimestampSslStart
timestampSslStart
TQ,N,V_timestampSslStart
hasTimestampRequestStart
timestampRequestStart
TQ,N,V_timestampRequestStart
hasTimestampRequestEnd
timestampRequestEnd
TQ,N,V_timestampRequestEnd
hasTimestampResponseStart
timestampResponseStart
TQ,N,V_timestampResponseStart
hasTimestampResponseEnd
timestampResponseEnd
TQ,N,V_timestampResponseEnd
hasOptionsQualityOfService
optionsQualityOfService
T@"NSString",&,N,V_optionsQualityOfService
hasOptionsOutOfProcess
optionsOutOfProcess
TB,N,V_optionsOutOfProcess
hasOptionsOutOfProcessForceDiscretionary
optionsOutOfProcessForceDiscretionary
TB,N,V_optionsOutOfProcessForceDiscretionary
hasOptionsAllowExpensiveAccess
optionsAllowExpensiveAccess
TB,N,V_optionsAllowExpensiveAccess
hasOptionsAllowPowerNapScheduling
optionsAllowPowerNapScheduling
TB,N,V_optionsAllowPowerNapScheduling
hasOptionsTimeoutIntervalForRequest
optionsTimeoutIntervalForRequest
TI,N,V_optionsTimeoutIntervalForRequest
hasOptionsTimeoutIntervalForResource
optionsTimeoutIntervalForResource
TI,N,V_optionsTimeoutIntervalForResource
hasOptionsSourceApplicationBundleIdentifier
optionsSourceApplicationBundleIdentifier
T@"NSString",&,N,V_optionsSourceApplicationBundleIdentifier
hasOptionsSourceApplicationSecondaryIdentifier
optionsSourceApplicationSecondaryIdentifier
T@"NSString",&,N,V_optionsSourceApplicationSecondaryIdentifier
hasOptionsAppleIdContext
optionsAppleIdContext
TB,N,V_optionsAppleIdContext
hasOptionsTlsPinningRequired
optionsTlsPinningRequired
TB,N,V_optionsTlsPinningRequired
_networkRequestBodyBytesSent
_networkResponseBodyBytesReceived
_networkStatusCode
_timestampC2Init
_timestampC2Now
_timestampC2Start
_timestampDnsEnd
_timestampDnsStart
_timestampRequestEnd
_timestampRequestStart
_timestampResponseEnd
_timestampResponseStart
_timestampSslStart
_timestampTcpEnd
_timestampTcpStart
_networkConnectionUuid
_networkFatalError
_networkHostname
_networkInterfaceIdentifier
_networkPreviousAttemptCount
_networkProtocolName
_networkRemoteAddresssAndPort
_networkRequestHeaderSize
_networkRequestUri
_networkResponseHeaderSize
_networkTaskDescription
_optionsQualityOfService
_optionsSourceApplicationBundleIdentifier
_optionsSourceApplicationSecondaryIdentifier
_optionsTimeoutIntervalForRequest
_optionsTimeoutIntervalForResource
_networkConnectionReused
_optionsAllowExpensiveAccess
_optionsAllowPowerNapScheduling
_optionsAppleIdContext
_optionsOutOfProcess
_optionsOutOfProcessForceDiscretionary
_optionsTlsPinningRequired
setNetworkConnectionReused:
setHasNetworkConnectionReused:
setNetworkRequestHeaderSize:
setHasNetworkRequestHeaderSize:
setNetworkRequestBodyBytesSent:
setHasNetworkRequestBodyBytesSent:
setNetworkResponseHeaderSize:
setHasNetworkResponseHeaderSize:
setNetworkResponseBodyBytesReceived:
setHasNetworkResponseBodyBytesReceived:
setNetworkPreviousAttemptCount:
setHasNetworkPreviousAttemptCount:
setNetworkStatusCode:
setHasNetworkStatusCode:
setTimestampC2Init:
setHasTimestampC2Init:
setTimestampC2Start:
setHasTimestampC2Start:
setTimestampC2Now:
setHasTimestampC2Now:
setTimestampDnsStart:
setHasTimestampDnsStart:
setTimestampDnsEnd:
setHasTimestampDnsEnd:
setTimestampTcpStart:
setHasTimestampTcpStart:
setTimestampTcpEnd:
setHasTimestampTcpEnd:
setTimestampSslStart:
setHasTimestampSslStart:
setTimestampRequestStart:
setHasTimestampRequestStart:
setTimestampRequestEnd:
setHasTimestampRequestEnd:
setTimestampResponseStart:
setHasTimestampResponseStart:
setTimestampResponseEnd:
setHasTimestampResponseEnd:
setOptionsOutOfProcess:
setHasOptionsOutOfProcess:
setOptionsOutOfProcessForceDiscretionary:
setHasOptionsOutOfProcessForceDiscretionary:
setOptionsAllowExpensiveAccess:
setHasOptionsAllowExpensiveAccess:
setOptionsAllowPowerNapScheduling:
setHasOptionsAllowPowerNapScheduling:
setOptionsTimeoutIntervalForRequest:
setHasOptionsTimeoutIntervalForRequest:
setOptionsTimeoutIntervalForResource:
setHasOptionsTimeoutIntervalForResource:
setOptionsAppleIdContext:
setHasOptionsAppleIdContext:
setOptionsTlsPinningRequired:
setHasOptionsTlsPinningRequired:
setNetworkTaskDescription:
setNetworkHostname:
setNetworkRemoteAddresssAndPort:
setNetworkConnectionUuid:
setNetworkInterfaceIdentifier:
setNetworkProtocolName:
setNetworkFatalError:
setNetworkRequestUri:
setOptionsQualityOfService:
setOptionsSourceApplicationBundleIdentifier:
setOptionsSourceApplicationSecondaryIdentifier:
TQ,V_epoch
T@"NSString",&,V_machineID
T@"NSString",&,V_modelID
T@"NSString",&,V_deviceName
T@"NSString",&,V_serialNumber
_machineID
_modelID
_deviceName
_serialNumber
setMachineID:
setModelID:
setDeviceName:
setSerialNumber:
clearStalePushNotifications
T@"CKKSNearFutureScheduler",&,V_clearStalePushNotifications
namedDelegatePort
T@"NSString",&,V_namedDelegatePort
environmentMap
T@"NSMutableDictionary",&,V_environmentMap
undeliveredUpdates
T@"NSMutableSet",&,V_undeliveredUpdates
undeliveredCuttlefishUpdates
T@"NSMutableSet",&,V_undeliveredCuttlefishUpdates
zoneUpdateReceiver
T@"<CKKSZoneUpdateReceiverProtocol>",&,V_zoneUpdateReceiver
octagonContainerMap
T@"NSMapTable",&,V_octagonContainerMap
apsConnection
T@"<OctagonAPSConnection>",&,V_apsConnection
haveStalePushes
_apsConnection
_clearStalePushNotifications
_namedDelegatePort
_environmentMap
_undeliveredUpdates
_undeliveredCuttlefishUpdates
_zoneUpdateReceiver
_octagonContainerMap
connection:didReceiveToken:forTopic:identifier:
connection:didReceiveIncomingMessage:
connection:didReceiveMessageForTopic:userInfo:
connection:didSendOutgoingMessage:
connection:didFailToSendOutgoingMessage:error:
connection:didChangeConnectedStatus:
connectionDidReconnect:
connection:channelSubscriptionsFailedWithFailures:
connection:didReceivePublicToken:
cuttlefishPushTopics
initWithNamedDelegatePort:apsConnectionClass:
initWithNamedDelegatePort:apsConnectionClass:stalePushTimeout:
reportDroppedPushes:
setApsConnection:
setClearStalePushNotifications:
setNamedDelegatePort:
setEnvironmentMap:
setUndeliveredUpdates:
setUndeliveredCuttlefishUpdates:
setZoneUpdateReceiver:
setOctagonContainerMap:
notifyZoneChange:
setCkksPushReceivedDate:
initWithUUIDBytes:
setCkksPushTracingUUID:
tracingUUID
setCkksPushTracingEnabled:
notificationType
notificationFromRemoteNotificationDictionary:
confirmReceiptForMessage:
isTracingEnabled
topic
apsDeliveryQueue
setEnabledTopics:
arrayByAddingObject:
initWithEnvironmentName:namedDelegatePort:queue:
resetGlobalDelegatePortMap
synchronizedGlobalDelegatePortMap
resettableSynchronizedGlobalDelegatePortMap:
T@"NSString",&,N
T@"NSDate",&,N
fetchCloudKitExternallyManagedViewKeyHierarchy:reply:
loadKeys:reply:
externalManagedViewForRPC:error:
T@"CKKSWrappedAESSIVKey",&,V_wrappedkey
T@"CKKSAESSIVKey",&,V_aessivkey
_aessivkey
initWithAESKey:wrappedAESKey:uuid:parentKeyUUID:keyclass:zoneID:
unwrapSelfWithAESKey:error:
fetchKeyMaterialItemFromKeychain:resave:error:
setKeyMaterialInKeychain:error:
key:wrappedByKey:uuid:parentKeyUUID:keyclass:zoneID:error:
queryKeyMaterialInKeychain:error:
T@"CKKSKeychainBackedKey",&,V_tlk
T@"CKKSKeychainBackedKey",&,V_classA
T@"CKKSKeychainBackedKey",&,V_classC
newUpload
TB,V_newUpload
_newUpload
setNewUpload:
decodeBoolForKey:
encodeBool:forKey:
hasBaghash
baghash
T@"NSData",&,N,V_baghash
_baghash
setBaghash:
TB,V_identityIsPreapproved
TQ,V_peerStatus
TB,V_memberChanges
TB,V_unknownMachineIDsPresent
T@"TPPBPeerStableInfoSetting",&,V_walrus
_identityIsPreapproved
_memberChanges
_unknownMachineIDsPresent
_peerStatus
_walrus
initWithPeerID:isPreapproved:status:memberChanges:unknownMachineIDs:osVersion:walrus:
setIdentityIsPreapproved:
setPeerStatus:
setMemberChanges:
setUnknownMachineIDsPresent:
setWalrus:
T@"NSData",&,V_encryptionKey
T@"NSData",&,V_signingKey
T@"NSString",&,V_recoveryString
_recoveryString
setRecoveryString:
T@"NSData",&,V_signingSPKI
T@"NSData",&,V_encryptionSPKI
T@"TPPBSecureElementIdentity",&,V_secureElementIdentity
_signingSPKI
_encryptionSPKI
initWithPeerID:signingSPKI:encryptionSPKI:secureElementIdentity:viewList:
setSigningSPKI:
setEncryptionSPKI:
TQ,V_egoStatus
T@"NSString",&,V_egoPeerMachineID
TQ,V_numberOfPeersInOctagon
T@"NSDictionary",&,V_viablePeerCountsByModelID
T@"NSDictionary",&,V_peerCountsByMachineID
TB,V_isExcluded
TB,V_isLocked
_isExcluded
_isLocked
_egoStatus
_egoPeerMachineID
_numberOfPeersInOctagon
_viablePeerCountsByModelID
_peerCountsByMachineID
initWithEgoPeerID:egoPeerMachineID:status:viablePeerCountsByModelID:peerCountsByMachineID:isExcluded:isLocked:
setEgoStatus:
setEgoPeerMachineID:
setNumberOfPeersInOctagon:
setViablePeerCountsByModelID:
setPeerCountsByMachineID:
setIsExcluded:
setIsLocked:
setWithSet:
clientScope
T@"NSString",&,V_clientScope
nextClientStateMachineCycleOperation
T@"CKKSResultOperation",&,V_nextClientStateMachineCycleOperation
stateMachineClientRequests
T@"NSMutableArray",&,V_stateMachineClientRequests
clientName
T@"NSString",R,V_clientName
T@"NSMutableDictionary",&,V_stateConditions
_clientName
_stateConditions
_clientScope
_nextClientStateMachineCycleOperation
_stateMachineClientRequests
createOperationToFinishAttemptForClient:clientName:
_onqueuePokeClientStateMachine:
_onqueueStartNextClientStateMachineOperation:
handleExternalClientStateMachineRequest:client:
isAcceptorWaitingForFirstMessage
_onqueueNextClientStateMachineTransition:
notifyContainerChange
setStateConditions:
setClientScope:
setNextClientStateMachineCycleOperation:
setStateMachineClientRequests:
size
zeroKey
decodeBytesForKey:returnedLength:
encodeBytes:length:forKey:
doSIV:nonce:text:buffer:bufferLength:authenticatedData:error:
keyMaterial
initWithBytesNoCopy:length:freeWhenDone:
hasProductName
T@"NSString",&,N,V_productName
hasProductType
T@"NSString",&,N,V_productType
hasProductVersion
T@"NSString",&,N,V_productVersion
hasProductBuild
productBuild
T@"NSString",&,N,V_productBuild
hasIsAppleInternal
TB,N,V_isAppleInternal
hasProcessName
T@"NSString",&,N,V_processName
hasProcessVersion
T@"NSString",&,N,V_processVersion
hasProcessUuid
processUuid
T@"NSString",&,N,V_processUuid
hasUserDefaultTestName
userDefaultTestName
T@"NSString",&,N,V_userDefaultTestName
internalTestConfigs
T@"NSMutableArray",&,N,V_internalTestConfigs
_internalTestConfigs
_processName
_processUuid
_processVersion
_productBuild
_productName
_productType
_productVersion
_userDefaultTestName
_isAppleInternal
setIsAppleInternal:
setHasIsAppleInternal:
clearInternalTestConfigs
addInternalTestConfig:
internalTestConfigsCount
internalTestConfigAtIndex:
setUserDefaultTestName:
setInternalTestConfigs:
internalTestConfigType
hasOperationGroupId
operationGroupId
T@"NSString",&,N,V_operationGroupId
hasOperationGroupName
operationGroupName
T@"NSString",&,N,V_operationGroupName
hasOperationGroupTriggered
operationGroupTriggered
TB,N,V_operationGroupTriggered
_operationGroupId
_operationGroupName
_operationGroupTriggered
setOperationGroupTriggered:
setHasOperationGroupTriggered:
setOperationGroupId:
setOperationGroupName:
T@"CKKSZoneChangeFetcher",W,V_owner
chainDependents
T@"NSMutableArray",&,V_chainDependents
_chainDependents
chainDependency:
setChainDependents:
lastCKFetchError
T@"NSError",&,V_lastCKFetchError
T@"NSMapTable",&,V_clientMap
currentFetch
T@"CKKSFetchAllRecordZoneChangesOperation",&,V_currentFetch
currentProcessResult
T@"CKKSResultOperation",&,V_currentProcessResult
T@"NSMutableSet",&,V_currentFetchReasons
T@"NSMutableSet",&,V_apnsPushes
newRequests
TB,V_newRequests
successfulFetchDependency
T@"CKKSZoneChangeFetchDependencyOperation",&,V_successfulFetchDependency
inflightFetchDependency
T@"CKKSZoneChangeFetchDependencyOperation",&,V_inflightFetchDependency
holdOperation
T@"CKKSResultOperation",&,V_holdOperation
fetchScheduler
T@"CKKSNearFutureScheduler",&,V_fetchScheduler
_newRequests
_lastCKFetchError
_fetchScheduler
_currentFetch
_currentProcessResult
_successfulFetchDependency
_inflightFetchDependency
_holdOperation
strongClientMap
requestSuccessfulFetch:
requestFetchDueToAPNS:
maybeCreateNewFetchOnQueue
maybeCreateNewFetch
_onqueueCreateNewFetch
createSuccesfulFetchDependency
holdFetchesUntil:
setLastCKFetchError:
setFetchScheduler:
setCurrentFetch:
setCurrentProcessResult:
setCurrentFetchReasons:
setNewRequests:
setSuccessfulFetchDependency:
setInflightFetchDependency:
setHoldOperation:
keysDict
T@"NSMutableDictionary",&,V_keysDict
keybagNotificationToken
Ti,V_keybagNotificationToken
_keybagNotificationToken
_keysDict
dropClassAKeys
_onQueueDropClassAKeys
dropAllKeys
_onQueueDropAllKeys
validateWrappedKey:forKeyClass:actualKeyClass:keybag:keySpecifier:error:
newKeyForKeyclass:withKeybag:keySpecifier:database:error:
writeKey:ForKeyclass:withKeybag:keySpecifier:database:error:
readKeyDataForClass:fromDb:actualKeyclass:oldFormatData:newFormatData:error:
fetchKeyForClass:fromDb:keybag:specifier:allowWrites:error:
setKeysDict:
setKeybagNotificationToken:
cachingEnabled
semaphore
T@"NSObject<OS_dispatch_semaphore>",&,V_semaphore
chain
T@"CKKSCondition",&,V_chain
_semaphore
_chain
setSemaphore:
setChain:
T@"NSString",&,V_eventName
T@"NSMutableDictionary",&,V_attributes
_eventName
setMetricValue:forKey:
convertTimeIntervalToServerTime:
generateError:
setEventName:
setAttributes:
timeIntervalSinceReferenceDate
supportedAttributeClasses
intendedEmptyIdentity
hasUuid
hasCertCached
TB,N,V_certCached
T@"NSData",&,N,V_serializedPrerecord
TQ,N,V_lastCloudServicesTriggerTime
TQ,N,V_lastEscrowAttemptTime
TB,N,V_uploadCompleted
hasUploadRetries
TQ,N,V_uploadRetries
hasTriggerRequestTime
triggerRequestTime
TQ,N,V_triggerRequestTime
_lastCloudServicesTriggerTime
_lastEscrowAttemptTime
_triggerRequestTime
_uploadRetries
_serializedPrerecord
_certCached
_uploadCompleted
setCertCached:
setLastCloudServicesTriggerTime:
setHasLastCloudServicesTriggerTime:
setHasLastEscrowAttemptTime:
setHasUploadCompleted:
setHasUploadRetries:
setHasTriggerRequestTime:
notifyQueue
T@"NSObject<OS_dispatch_queue>",&,V_notifyQueue
monitors
T@"NSMutableSet",&,V_monitors
_notifyQueue
_monitors
_onqueueLoadOrCreateAccountMetadata:
persistNewEgoPeerID:error:
_onqueuePersistAccountChanges:error:
asyncNotifyAccountStateChanges:from:
setNotifyQueue:
setMonitors:
dateWithTimeIntervalSince1970:
T@"OTCuttlefishAccountStateHolder",&,V_stateHolder
T@"<OctagonStateFlagHandler>",&,V_flagHandler
T@"<OTSOSAdapter>",&,V_sosAdapter
T@"<OTAuthKitAdapter>",&,V_authKitAdapter
T@"<OTDeviceInformationAdapter>",&,V_deviceInformationAdapter
T@"CKKSKeychainView",R,W,V_ckks
T#,&,V_escrowRequestClass
T#,&,V_notifierClass
_stateHolder
setStateHolder:
setFlagHandler:
setSosAdapter:
setAuthKitAdapter:
setDeviceInformationAdapter:
setEscrowRequestClass:
setNotifierClass:
hasServiceName
serviceName
T@"NSString",&,N,V_serviceName
hasPartition
partition
T@"NSString",&,N,V_partition
hasServiceBuild
serviceBuild
T@"NSString",&,N,V_serviceBuild
hasServiceInstance
serviceInstance
T@"NSString",&,N,V_serviceInstance
_partition
_serviceBuild
_serviceInstance
_serviceName
setServiceName:
setPartition:
setServiceBuild:
setServiceInstance:
T@"CKKSResultOperation",&,V_zoneModificationOperation
T@"CKKSResultOperation",&,V_zoneSubscriptionOperation
zonesToCreate
T@"NSMutableArray",R,V_zonesToCreate
subscriptionsToSubscribe
T@"NSMutableArray",R,V_subscriptionsToSubscribe
zoneIDsToDelete
T@"NSMutableArray",R,V_zoneIDsToDelete
T@"NSArray",&,V_savedRecordZones
T@"NSArray",&,V_deletedRecordZoneIDs
T@"NSArray",&,V_savedSubscriptions
deletedSubscriptionIDs
T@"NSArray",&,V_deletedSubscriptionIDs
_zoneModificationOperation
_zoneSubscriptionOperation
_zonesToCreate
_subscriptionsToSubscribe
_zoneIDsToDelete
_savedRecordZones
_deletedRecordZoneIDs
_savedSubscriptions
_deletedSubscriptionIDs
initWithZoneModificationOperation:zoneSubscriptionOperation:
setZoneModificationOperation:
setZoneSubscriptionOperation:
setSavedRecordZones:
setDeletedRecordZoneIDs:
setSavedSubscriptions:
setDeletedSubscriptionIDs:
pendingOperations
T@"CKKSZoneModifyOperations",&,V_pendingOperations
inflightOperations
T@"CKKSZoneModifyOperations",&,V_inflightOperations
networkFailure
TB,V_networkFailure
T@"CKDatabase",R,V_database
T@"CKKSNearFutureScheduler",R,V_cloudkitRetryAfter
_networkFailure
_cloudkitRetryAfter
_pendingOperations
_inflightOperations
_onqueueCreatePendingObjects
createZone:
deleteZone:
launchOperations
createModifyZonesOperation:
createModifySubscriptionsOperation:
inspectErrorForRetryAfter:
setPendingOperations:
setInflightOperations:
setNetworkFailure:
setModifySubscriptionsCompletionBlock:
initWithSubscriptionsToSave:subscriptionIDsToDelete:
setModifyRecordZonesCompletionBlock:
initWithRecordZonesToSave:recordZoneIDsToDelete:
initWithZoneID:subscriptionID:
_keychain
initWithKeychain:xpcConnection:
T@"NSArray",R,V_clientAccessGroups
_clientAccessGroups
rpcAddCredential:withAccessPolicy:reply:
rpcFetchPasswordCredentialForPersistentIdentifier:reply:
rpcLookupCredentialsForServiceIdentifiers:reply:
rpcRemoveCredentialWithPersistentIdentifier:reply:
rpcReplaceOldCredential:withNewCredential:reply:
rpcReplaceCredential:withNewCredential:reply:
keyclassForAccessPolicy:
passwordCredentialForItem:error:
passwordCredentialForItemMetadata:error:
setCustomAttributes:
_setPersistentIdentifier:
setLocalizedDescription:
setLocalizedLabel:
_setModificationDate:
_setCreationDate:
_initWithUsername:primaryServiceIdentifier:supplementaryServiceIdentifiers:
_cachedPassword
setPassword:
_lookupKey
serviceID
customAttributes
localizedDescription
localizedLabel
username
supplementaryServiceIdentifiers
primaryServiceIdentifier
sharingPolicy
accessibility
URLForResource:withExtension:
triggerCloudServicesPasscodeRequest:error:
cert
beginHSA2PasscodeRequest:uuid:error:
T@"NSDate",&,V_date
counter
TI,V_counter
_counter
_date
setDate:
setCounter:
TB,V_launched
events
T@"NSMutableDictionary",&,V_events
launchOperation
T@"NSBlockOperation",&,V_launchOperation
dependantLaunches
T@"NSMutableDictionary",&,V_dependantLaunches
firstLaunch
_firstLaunch
_launched
_events
_launchOperation
_dependantLaunches
addDependantLaunch:child:
reportMetric
eventsRelativeTime
setLaunched:
setEvents:
setLaunchOperation:
setDependantLaunches:
sortUsingComparator:
mainQueue
resetReason
Tq,V_resetReason
setResetReason:
fetchRequestWithEntityName:
T@"NSString",C,D,N
Ti,D,N
T@"NSSet",&,D,N
T@"SecCDKeychainManagedAccessControlEntity",&,D,N
T@"NSData",&,D,N
T@"NSUUID",C,D,N
T@"SecCDKeychainManagedItemType",&,D,N
items
itemTypeName
TB,D,N
stateMachineQueue
T@"NSObject<OS_dispatch_queue>",&,V_stateMachineQueue
accountConfiguration
T@"CKKSPBFileStorage",&,V_accountConfiguration
performBackups
T@"CKKSNearFutureScheduler",&,V_performBackups
performRingUpdates
T@"CKKSNearFutureScheduler",&,V_performRingUpdates
gestalt
T@"NSDictionary",&,N,V_gestalt
backup_key
T@"NSData",&,N,V_backup_key
deviceID
T@"NSString",&,N,V_deviceID
T@"SOSAccountTrustClassic",&,N,V_trust
T@"NSObject<OS_dispatch_queue>",&,N,V_queue
user_private_timer
T@"NSObject<OS_dispatch_source>",&,N,V_user_private_timer
accountPrivateKey
T^{__SecKey={__CFRuntimeBase=QAQ}^{__SecKeyDescriptor}^v},N,V_accountPrivateKey
factory
T^{SOSDataSourceFactory=^?^?^?},N,V_factory
_password_tmp
T@"NSData",&,N,V__password_tmp
isListeningForSync
TB,N,V_isListeningForSync
lock_notification_token
Ti,N,V_lock_notification_token
key_transport
T@"CKKeyParameter",&,N,V_key_transport
circle_transport
T@"SOSKVSCircleStorageTransport",&,N,V_circle_transport
kvs_message_transport
T@"SOSMessageKVS",&,N,V_kvs_message_transport
ck_storage
T@"SOSCKCircleStorage",&,N,V_ck_storage
circle_rings_retirements_need_attention
TB,N,V_circle_rings_retirements_need_attention
engine_peer_state_needs_repair
TB,N,V_engine_peer_state_needs_repair
key_interests_need_updating
TB,N,V_key_interests_need_updating
need_backup_peers_created_after_backup_key_set
TB,N,V_need_backup_peers_created_after_backup_key_set
change_blocks
T@"NSMutableArray",&,N,V_change_blocks
waitForInitialSync_blocks
T@"NSMutableDictionary",&,N,V_waitForInitialSync_blocks
accountKeyDerivationParameters
T@"NSData",&,N,V_accountKeyDerivationParameters
accountKeyIsTrusted
TB,N,V_accountKeyIsTrusted
accountKey
T^{__SecKey={__CFRuntimeBase=QAQ}^{__SecKeyDescriptor}^v},N,V_accountKey
previousAccountKey
T^{__SecKey={__CFRuntimeBase=QAQ}^{__SecKeyDescriptor}^v},N,V_previousAccountKey
peerPublicKey
T^{__SecKey={__CFRuntimeBase=QAQ}^{__SecKeyDescriptor}^v},N,V_peerPublicKey
saveBlock
T@?,C,V_saveBlock
hasPeerInfo
peerInfo
T^{__OpaqueSOSPeerInfo=},R,N
fullPeerInfo
T^{__OpaqueSOSFullPeerInfo=},R,N
T@"NSString",R,N
notifyCircleChangeOnExit
TB,N,V_notifyCircleChangeOnExit
notifyViewChangeOnExit
TB,N,V_notifyViewChangeOnExit
notifyBackupOnExit
TB,N,V_notifyBackupOnExit
T@"NSUserDefaults",&,N,V_settings
octagonSigningFullKeyRef
T^{__SecKey={__CFRuntimeBase=QAQ}^{__SecKeyDescriptor}^v},N,V_octagonSigningFullKeyRef
octagonEncryptionFullKeyRef
T^{__SecKey={__CFRuntimeBase=QAQ}^{__SecKeyDescriptor}^v},N,V_octagonEncryptionFullKeyRef
accountIsChanging
TB,N,V_accountIsChanging
sosTestmode
TB,N,V_sosTestmode
consolidateKeyInterest
TB,N,V_consolidateKeyInterest
_isListeningForSync
_circle_rings_retirements_need_attention
_engine_peer_state_needs_repair
_key_interests_need_updating
_need_backup_peers_created_after_backup_key_set
_accountKeyIsTrusted
_notifyCircleChangeOnExit
_notifyViewChangeOnExit
_notifyBackupOnExit
_accountIsChanging
_sosTestmode
_consolidateKeyInterest
_lock_notification_token
_accountKey
_accountPrivateKey
_previousAccountKey
_peerPublicKey
_gestalt
_backup_key
_deviceID
_trust
_user_private_timer
_factory
__password_tmp
_key_transport
_circle_transport
_kvs_message_transport
_ck_storage
_change_blocks
_waitForInitialSync_blocks
_accountKeyDerivationParameters
_saveBlock
_octagonSigningFullKeyRef
_octagonEncryptionFullKeyRef
_stateMachineQueue
_accountConfiguration
_performBackups
_performRingUpdates
userPublicKey:
kvsPerformanceCounters:
rateLimitingPerformanceCounters:
stashedCredentialPublicKey:
assertStashedAccountCredential:
validatedStashedAccountCredential:
stashAccountCredential:complete:
ghostBust:complete:
ghostBustPeriodic:complete:
ghostBustTriggerTimed:complete:
ghostBustInfo:
iCloudIdentityStatus_internal:
iCloudIdentityStatus:
myPeerInfo:
circleHash:
circleJoiningBlob:complete:
joinCircleWithBlob:version:complete:
initialSyncCredentials:complete:
importInitialSyncCredentials:complete:
rpcTriggerSync:complete:
getWatchdogParameters:
setWatchdogParmeters:complete:
rpcTriggerBackup:complete:
rpcTriggerRingUpdate:
removeV0Peers:
sosDisable
sosEnable
sosIsEnabledCB:
sosIsEnabled
sosIsEnabledString
setAccountKey:
setAccountPrivateKey:
setPreviousAccountKey:
setPeerPublicKey:
ensureFactoryCircles
ensureOctagonPeerKeys
initWithGestalt:factory:
startStateMachine
syncWaitAndFlush:
ghostBustGetDate
ghostBustFollowup
ghostBustSchedule
ghostBustCheckDate
sosEnableValidityCheck
sosEvaluateIfNeeded
flattenToSaveBlock
getCircleStatus:
isInCircle:
_onQueueEnsureInBackupRings:
_onQueueRecordRetiredPeersInCircle
setupStateMachine
addBackupFlag
addRingUpdateFlag
triggerBackupForPeers:
triggerRingUpdate
performBackup
performRingUpdate
setGestalt:
setBackup_key:
setDeviceID:
setTrust:
setUser_private_timer:
setFactory:
set_password_tmp:
setIsListeningForSync:
setLock_notification_token:
setKey_transport:
setCircle_transport:
setKvs_message_transport:
setCk_storage:
setCircle_rings_retirements_need_attention:
setEngine_peer_state_needs_repair:
setKey_interests_need_updating:
setNeed_backup_peers_created_after_backup_key_set:
setChange_blocks:
setWaitForInitialSync_blocks:
setAccountKeyDerivationParameters:
setAccountKeyIsTrusted:
setSaveBlock:
setNotifyCircleChangeOnExit:
setNotifyViewChangeOnExit:
setNotifyBackupOnExit:
setOctagonSigningFullKeyRef:
setOctagonEncryptionFullKeyRef:
setAccountIsChanging:
setSosTestmode:
setConsolidateKeyInterest:
setStateMachineQueue:
setAccountConfiguration:
setPerformBackups:
setPerformRingUpdates:
flushChanges:
setRingUpdateFlag:
clearPendingBackupPeers
pendingBackupPeers
setPendingBackupPeers:
ringUpdateFlag
urlForSOSAccountSettings
modifyCircle:err:action:
cleanupAfterPeer:circleTransport:seconds:circle:cleanupPeer:err:
retirees
getCircleStatusOnly:
encodedData:
trustedCircle
setBool:forKey:
account
SOSTransportMessageGetEngine
expansion
getCircle:
ensureFullPeerAvailable:err:
initWithRetirees:fpi:circle:departureCode:peerExpansion:
initWithDictionary:
ensureOctagonPeerKeys:
ghostBustGetRampSettings
valueUnionWith:valuesToUnion:
valueSubtractFrom:valuesToSubtract:
addiCloudIdentity:key:err:
purgeIdentity
setRetirees:
postRetirement:peer:err:
kvssendDebugInfo:debug:err:
setDepartureCode:
departureCode
isInCircleOnly:
updateV2Dictionary:v2:
accessGroupToNextMessageToSend
SOSTransportMessageSendMessage:id:messageToSend:err:
accessGroupRateLimitState
accessGroupToTimer
kvsSendOfficialDSID:err:
resetCircleToOffering:userKey:err:
setFullPeerInfo:
getUUIDBytes:
copyPeerSetForView:
copyRing:err:
setTrustedCircle:
initWithInt:
SOSTransportKeyParameterPublishCloudParameters:data:err:
initWithAccount:andCircleName:
initWithAccount:andName:
SOSTransportMessageSendMessages:pm:err:
initWithArray:
requestSyncWithPeers:
SOSTransportMessageSyncWithPeers:p:err:
initWithAccount:
T@"NSMutableArray",&,N,V_pendingBackupPeers
hasRingUpdateFlag
TB,N,V_ringUpdateFlag
_pendingBackupPeers
_ringUpdateFlag
addPendingBackupPeers:
pendingBackupPeersCount
pendingBackupPeersAtIndex:
setHasRingUpdateFlag:
pendingBackupPeersType
generationSignatureUpdateWith:key:
SOSTransportMessageCleanupAfterPeerMessages:peers:err:
cleanupRetirementTickets:circle:time:err:
expireRetirementRecords:err:
accountFromDER:end:factory:error:
setExpansion:
getDEREncodedSize:err:
encodeToDER:err:start:end:
getRings:
handleUpdateRing:prospectiveRing:transport:userPublicKey:writeUpdate:err:
initialInCircle
TB,V_initialInCircle
initialViews
T@"NSSet",&,V_initialViews
initialUnsyncedViews
T@"NSSet",&,V_initialUnsyncedViews
initialID
T@"NSString",&,V_initialID
initialTrusted
TB,V_initialTrusted
initialKeyParameters
T@"NSData",&,V_initialKeyParameters
initialCirclePeerCount
TI,V_initialCirclePeerCount
quiet
TB,V_quiet
peersToRequestSync
T@"NSMutableSet",&,V_peersToRequestSync
T@"SOSAccount",&,V_account
_initialInCircle
_initialTrusted
_quiet
_initialCirclePeerCount
_account
_initialViews
_initialUnsyncedViews
_initialID
_initialKeyParameters
_peersToRequestSync
currentTrustBitmask
updateSOSCircleCachedStatus
initWithAccount:quiet:
restart
finish
requestSyncWith:
setAccount:
setInitialInCircle:
setInitialViews:
setInitialUnsyncedViews:
setInitialID:
setInitialTrusted:
setInitialKeyParameters:
setInitialCirclePeerCount:
setQuiet:
setPeersToRequestSync:
performTransaction:action:
performTransaction_Locked:action:
performTransaction_Locked:
updateCircleFromRemote:newCircle:err:
getDataSourceEngine:
updateFullPeerInfo:minimum:excluded:
updateViewSets:enabled:disabled:
setRing:ringName:err:
kvsRingPostRing:ring:err:
addRingDictionary
valueSetContainsValue:value:
pendEnableViewSet:
clearValueFromExpansion:err:
resetAccountToEmpty:transport:err:
getValueFromExpansion:err:
setValueInExpansion:value:err:
setRings:
forEachRing:
resetRing:ringName:err:
resetAllRings:err:
checkForRings:
ensureExpansion:
updateGestalt:newGestalt:
updateView:name:code:err:
activeValidInCircle:err:
viewStatus:name:err:
addSyncablePeerBlock:dsName:change:
copyPeerWithID:err:
isAccountIdentity:err:
copyPeerSetMatching:
copyPeersToListenTo:err:
peerSignatureUpdate:err:
updatePeerInfo:description:err:update:
removeInvalidApplications:userPublic:
upgradeiCloudIdentity:privKey:
copyPreApprovedHSA2Info
addEscrowToPeerInfo:err:
copySortedPeerArray:action:
syncWithPeers:peerIDs:err:
requestSyncWithAllPeers:key:err:
isSyncingV0
postDebugScope:scope:err:
copyDeviceKey:
removeIncompleteiCloudIdentities:privKey:err:
clientPing:
resetRingDictionary
forEachCirclePeerExceptMe:
hasCircle:
initWithSet:
trustClassic
getTransportType
getAccount
postCircle:circleData:err:
handleRetirementMessages:err:
handleCircleMessagesAndReturnHandledCopy:err:
currentHashBuf
onqueueFreeHashBuff
hasChanged:
isUseful
accountIsHSA2
initWithActiveMIDS:
activeMIDs:
midIsValidInList:
serialIsValidInList:
updateMIDInPeerInfo:
peerinfoHasMID:
midList
T@"NSSet",&,N,V_midList
T@"NSSet",&,N,V_machineIDs
serialNumbers
T@"NSSet",&,N,V_serialNumbers
_midList
_machineIDs
_serialNumbers
setMidList:
setMachineIDs:
setSerialNumbers:
SOSTransportKeyParameterGetAccount:
SOSTransportKeyParameterGetTransportType:err:
SOSTransportKeyParameterKVSAppendKeyInterests:ak:firstUnLock:unlocked:err:
kvsAppendKeyInterest:firstUnlock:unlocked:err:
kvsAppendRingKeyInterest:firstUnlock:unlocked:err:
kvsAppendDebugKeyInterest:firstUnlock:unlocked:err:
SOSTransportMessageGetAccount
SOSTransportMessageGetTransportType
SOSTransportMessageKVSAppendKeyInterest:ak:firstUnlock:unlocked:err:
SOSTransportKeyParameterHandleNewAccount:acct:
SOSTransportKeyParameterHandleKeyParameterChanges:data:err:
SOSTransportMessageHandlePeerMessageReturnsHandledCopy:peerMessages:err:
SOSTransportMessageGetCircleName
SOSTransportMessageFlushChanges:err:
defaults
T@"NSUserDefaults",&,N,V_defaults
dateDescription
T@"NSString",&,N,V_dateDescription
earliestDate
Td,N,V_earliestDate
latestDate
Td,N,V_latestDate
_defaults
_dateDescription
_earliestDate
_latestDate
getDate
checkDate
followup
schedule
initWithDefaults:dateDescription:earliest:latest:
setDefaults:
setDateDescription:
setEarliestDate:
setLatestDate:
handleUpdateCircle:transport:update:err:
updateCircle:newCircle:err:
iCloudCleanerHandle:
ensureCircle:name:err:
ghostBustingOK:updatingTo:
leaveCircleWithAccount:err:
leaveCircle:err:
resetToOffering:key:err:
joinCircle:userKey:useCloudPeer:err:
checkForSponsorshipTrust:
thisDeviceStatusInCircle:peer:
hasLeft
iCloudCheckEventHandle:
fixICloudIdentities:circle:
T@"SOSAccount",&,N,Vaccount
circleGetTypeID
pending_changes
T@"NSMutableDictionary",&,N,Vpending_changes
circleName
T@"NSString",&,N,VcircleName
getCircleName
kvsSendPendingChanges:
kvsAddToPendingChanges:data:
kvsSendAccountChangedWithDSID:err:
kvsRingFlushChanges:
setPending_changes:
setCircleName:
T@"SOSAccount",&,Vaccount
T@"NSMutableDictionary",&,N,Vexpansion
T^{__OpaqueSOSFullPeerInfo=},N,VfullPeerInfo
T^{__OpaqueSOSCircle=},N,VtrustedCircle
T@"NSMutableSet",&,N,Vretirees
Ti,N,VdepartureCode
cachedOctagonSigningKey
T^{__SecKey={__CFRuntimeBase=QAQ}^{__SecKeyDescriptor}^v},V_cachedOctagonSigningKey
cachedOctagonEncryptionKey
T^{__SecKey={__CFRuntimeBase=QAQ}^{__SecKeyDescriptor}^v},V_cachedOctagonEncryptionKey
_cachedOctagonSigningKey
_cachedOctagonEncryptionKey
setCachedOctagonEncryptionKey:
setCachedOctagonSigningKey:
T^v,Vengine
T@"NSString",&,VcircleName
SOSTransportMessageCalculateNextTimer:rtt:peerid:
SOSTransportMessageUpdateRTTs:
SOSTransportMessageHandlePeerMessage:id:cm:err:
SOSTransportMessageUpdateLastMessageSentTimetstamp:peer:
SOSTransportMessageSendMessageIfNeeded:circleName:pID:err:
initWithAccessGroup:
stateForAccessGroup:
initWithPeer:
T@"NSString",&,VpeerID
T@"NSMutableDictionary",&,V_accessGroupRateLimitState
T@"NSMutableDictionary",&,V_accessGroupToTimer
T@"NSMutableDictionary",&,V_accessGroupToNextMessageToSend
_accessGroupRateLimitState
_accessGroupToTimer
_accessGroupToNextMessageToSend
setUpConfigForPeer
setAccessGroupRateLimitState:
setAccessGroupToTimer:
setAccessGroupToNextMessageToSend:
initSOSConnectionWithConnection:account:
checkEntitlement:
initSOSClientWithAccount:
initWithDomain:code:userInfo:
internalSOSClient
T^{__CFDictionary=},Vpending_changes
SOSTransportMessageGetTransportType:err:
haveConfirmedOctagonKeys
randomPermanentFullECKey:name:error:
getMyFullPeerInfo
fullPeerInfoVerify:err:
hasFullPeerInfo:
CopyAccountIdentityPeerInfo
isMyPeerActive:
Couldn't bring up keychain: %@
Keychain initialized!
SecWatchdog: watchdog has detected securityd/secd is using too much CPU - attempting to exit gracefully
securityd have written more then %llu
resetting watchdog monitoring interval ahead another 24 hours
SecWatchdog: watchdog has failed to exit securityd/secd gracefully - exiting ungracefully
SIGSTOPing self, awaiting debugger
Again, for good luck (or bad debuggers)
security failed to register xpc listener for %s, exiting
failed to open /dev/random (%d)
failed to create refkey (%d)
invalid pub key (%zu)
failed to write /dev/random (%d)
XPC [%@] operation: %@ (%llu)
Authentication is needed %@ %@ %@
%@ %@ %@
%@: returning error: %@
SIGTERM, exiting when clean 
Ignoring "%@" because client is API-restricted
Keychain access group com.apple.token ignored, feature not available
securityd client: persona user %@
securityd client: persona uuid %@
securityd client: app clip (API restricted)
serverxpc: Client task is null, cannot verify platformness
serverxpc: client is not a platform binary: 0x%08x
serverxpc: client has no codesign identifier
client %@ is eligible platform binary
serverxpc: client %@ is not eligible
Client %@ is valid platform binary
Performing keychain database checkpoint
item: keychain database checkpoint failed: %@
Keychain database checkpoint succeeded
Found current item for (%@: %@)
ckkscurrent: No current item for (%@,%@): %@ %@
SecItemFetchCurrentItemAcrossAllDevices: CKKSViewManager not initialized?
CKKS didn't find a current item for (%@,%@): %@ %@
CKKS believes current item UUID for (%@,%@) is %@. Looking up persistent ref...
SecItemSetCurrentItemAcrossAllDevices: CKKSViewManager not initialized?
SecItemSetCurrentItemAcrossAllDevices: no view manager?
unable to access hwaes key
Key Diversification is %s (via feature flags)
der: unable to encode date: %@
der: invalid date: %@; %s
Could not set up sqlite global error logging to syslog: %d
SecDb: SecDbCreate failed to create attributes for the write mutex; fairness properties are no longer present
SecDb: SecDbCreate failed to init the write mutex, this will end badly
SecDB: running from installer
SecDBCorrupt: %@
_SecDbStep: SecDbConnection is readonly but we're about to write: %s
sqlite busy/locked: %d ntries: %d totaltimeout: %d
sqlite busy/locked: too long: %d ms, giving up
SecDbConnectionCheckCode detected corruption twice: going to handle corrupt DB
#SecDB warning error %{public}@ when running integrity check
#SecDB warning: failed to run integrity check due to corruption
SecDBCheckCorrupted ran integrity_check, and that didn't return ok
SecDBCheckCorrupted failed to run integrity check
operation returned code: %d integrity check=fail
operation returned code: %d: integrity check=pass
SecDBCheckCorrupted integrity_check returned %s
SecDbHandleCorrupt: killing self so that successor might cleanly delete corrupt db
SecDbHandleCorrupt: Tried to write corruption marker %s but one already exists
SecDbHandleCorrupt: Unable (%{darwin.errno}d) to create corruption marker %{public}s
incremental_vacuum failed with: (%d) %{public}s
#SecDB nested transaction asked to not be committed
sqlDb: sql trace mask: 0x%08x
failed to close database connection (%d) for %@: %s
Unable to create database: %@
#SecDB starting maintenance
opened block failed: %@
opened block failed: error (%@) is being released and lost
#SecDB ending maintenance
SecDbSecDbProcessCorruptionMarker: Unable to check for corruption marker: %{darwin.errno}d
SecDbSecDbProcessCorruptionMarker: found corruption marker %s
SecDbSecDbProcessCorruptionMarker: Unable (%{darwin.errno}d) to delete corruption marker
SecDbSecDbProcessCorruptionMarker: Unable (%{darwin.errno}d) to delete db %{public}s
SecDbSecDbProcessCorruptionMarker: deleted corrupt db %{public}s
SecDbConnectionRelease called with NULL dbconn
SecDbConnectionRelease: IO failure reported in connection, throwing away currently idle caches
dbconn: did not expect to run out of room in the %s cache when releasing connection
SecDbForEach: SecDbConnection is readonly but we're about to write: %s
db %@ changed outside txn
Simulating crash, reason: %@, code=%08x
stackshot report, reason: %@, code=%08x
Not showing ttr due to ratelimiting: %@
Triggering TTR: %@
retrying cuttlefish XPC, (%d, %@)
octagon: Can't talk with TrustedPeersHelper: %@
Setting user-controllable views to %@
octagon-ckks: setting user-controllable views status errored: %@
Updating user-controllable view status failed because of lock state, will retry once unlocked: %@
Updating user-controllable view status failed because our self peer is excluded or missing
Received syncing policy %@ with view list: %@
octagon: failed to save policy+views: %@
OTSetupControlProtocol failed, continuing, but you might crash later: %@
Waiting for %@
No keys for %@: %@
Skipping keys: %@
Have proposed keys: %@
Unable to convert proposed keys: %@ %@
Have %u pending tlk shares
Fetched %d key sets, %d broken key sets, %d pendingTLKShares, and %d views timing out
Resetting local cuttlefish
Unable to reset local cuttlefish for (%@,%@): %@
Successfully reset local cuttlefish
Error resetting local account state: %@
Successfully reset local account state
error performing database operation, major problems ahead: %@
error performing database transaction, major problems ahead: %@
RateLimiter overloaded until %@
Uploaded %d records with error %@
failed to fetch records from keychain: %@
Investigating a new escrow request
Retriggering an existing escrow request: %@
escrowrequest: Unable to save modified request to keychain: %@
Retriggering an existing escrow request complete
Creating a new escrow request
beginning a new escrow request (%@)
escrowrequest: unable to save escrow update request: %@
waiting for unlock before continuing with state machine
failed to fetch records from keychain, nothing to do: %@
Request %@ needs to cache a certificate, but that has been attempted recently. Holding off...
Request %@ needs a cached certififcate
Request %@ needs to be stored, but has been attempted recently. Holding off...
Request %@ needs to be stored!
Notified that the device name has changed
failed getting serial number: %d
error getting octagon status: %@
Caching octagon status as (%@, %@)
Starting blocking for listener %@
Done blocking for listener %@
received another notification of CK Account State %@
moving to CK Account info: %@
Unable to get dispatch group.
out of circle(%@): resetting peer ID
Received fetchCirclePeerID callback with null AccountStateTracker
Circle peerID is: %@ %@
Out of circle but still received a fetchCirclePeerID callback
moving to circle status: %@
Received fetchCurrentDeviceIDWithCompletionHandler callback with null AccountStateTracker
CloudKit deviceID is: %@ %@
Logged back out but still received a fetchCurrentDeviceIDWithCompletionHandler callback
error getting account info: %@
received CK Account info: %@
adding a new listener: %@
notifying new listener %@ of current state %@
Registering with notification center %@
Retrying CK account state fetch
error getting circle status: %@
attempting to store a prerecord in escrow
deleting all requests
no extant requests; nothing to delete
error fetching records: %@
Unable to delete %@: %@
no extant requests
escrowrequest: failed to load requests: %@
found requests: %@
Triggering an escrow update request due to '%@'
Escrow request %@ doesn't yet have a certificate cached
Escrow request %@ already has a prerecord; no passcode needed
Escrow request %@ is pending a passcode
No escrow requests need a passcode
escrowrequest: unable to load prerecord with uuid %@: %@
escrowrequest: prerecord for uuid %@ already uploaded
fetched prerecord for uuid %@
escrowrequest: no prerecord for uuid %@: %@
escrowrequest: unable to load uuid %@: %@
escrowrequest: unable to save new prerecord for uuid %@: %@
saved new prerecord for uuid %@
failed to fetch escrow statuses: %@
SecCDKeychain: failed to deserialize wrapped secret data
SecCDKeychain: error creating AES key from unwrapped item key data with error: %@
SecCDKeychain: _registerItemTypeForTesting: could not get managed object context
SecCDKeychain: error registering managedItemType for for itemType: %@
SecCDKeychain: attempt to fetch items from deallocated keychain instance
SecCDKeychain: deleteItemWithPersistentID: could not get managed object context
SecCDKeychain: attempt to delete item with persistant identifier that could not be found: %@
SecCDKeychain: fetchItemsWithValue: could not get managed object context
SecCDKeychain: error fetching lookup entry during item lookup: %@
SecCDKeychain: failed to create SecCDKeychainItemMetadata from managed item with error: %@
SecCDKeychain: attempt to fetch item from deallocated keychain instance
SecCDKeychain: fetchItemForPersistentID: could not get managed object context
SecCDKeychain: error fetching item for persistent id: %@; error: %@
SecCDKeychain: failed to create SecCDKeychainItem from managed item with error: %@
SecCDKeychain: failed to deserialize item wrapped secret data
SecCDKeychain: failed to create refKey for unwrapping item secrets
SecCDKeychain: failed to create item key for decryption
SecCDKeychain: failed to decrypt item secret data
SecCDKeychain: failed to deserialize item decrypted secret data
SecCDKeychain: failed to create random key for encrypting item with error: %@
SecCDKeychain: failed to serialize item secrets dictionary with error: %@
SecCDKeychain: failed to encrypt item secret data with error: %@
SecCDKeychain: failed to create refKey
SecCDKeychain: failed to encrypt item
SecCDKeychain: failed to serialize item secret data blob with error: %@
SecCDKeychain: attempt to insert items into deallocated keychain instance
SecCDKeychain: insertItems: could not get managed object context
SecCDKeychain: failed to unique item (%@) using primary keys: %@
SecCDKeychain: error creating primary key string representation for item: %@; error: %@
SecCDKeychain: error creating managed item for insertion: %@; item: %@
SecCDKeychain: error fetching lookup entry during item insertion: %@
saving managed object context for items: %@
SecCDKeychain: saving managed object context failed with error: %@
saving managed object context succeeded
SecCDKeychain: failed to validate item owner with error: %@
SecCDKeychain: failed to remove persistent store with error: %@
SecCDKeychain: failed to create random key for CD database encryption - this means we won't be able to create a database
SecCDKeychain: failed to save encryption key to keychain, so bailing on database creation; status: %d
SecCDKeychain: can't create a class A store right now because the keychain is locked
failed to save or retrieve key for CD database encryption - this means we won't be able to create a database; status: %d
SecCDKeychain: no persistent store URL, so we can't create or open a database
SecCDKeychain: no managed object model URL, so we can't create or open a database
Unable to fetch trusted peers for (%@,%@): %@
No peer ID; therefore no identity
Unable to fetch identity '%@' from keychain: %@
Resetting Octagon as per Cuttlefish request
Leaving clique as per Cuttlefish request
Beginning cuttlefish health checkup
running rate limiting checks!
last health check timestamp: %@
Not rate-limiting: last updated %@ vs %@
Last update is within 3 days (%@); rate-limiting this operation
rate limited! %@
device is locked, not performing cuttlefish check
octagon-health: failed to persist last health check value:%@
NOT running rate limiting checks!
octagon-health: error: %@
cuttlefish came back with these suggestions
: post repair? %d
, post escrow? %d
, reset octagon? %d
 leave trust? %d
octagon-reset-account-cdp-contents: error resetting account cdp contents: %@
successfully reset account cdp contents
octagon-user-controllable-views: error fetching status: %@
successfully fetched status as: %@
octagon-user-controllable-views: error setting status: %@
successfully set status to: %@
beginning removing escrow cache!
octagon-remove-escrow-cache: error invalidating escrow cache: %@
successfully invalidated escrow cache
fetching records
octagon-fetch-escrow-records: error fetching records: %@
successfully fetched records
set-cdp-enabled
get-cdp-status
refetch-ckks-policy
refetch-ckks-policy result: %@
Attempting wait for priority view processing
Attempting wait for octagon upgrade
notifying container of change
Received 24hr xpc notification
octagon: error attempting to check octagon health: %@
health check success
Remove Inheritance Key %@ for container: %@, context: %@
Device does not participate in SOS; cannot remove inheritance key in Octagon
join with inheritance key %@ invoked for container: %@, context: %@
octagon, join with inheritance key failed: %@
join with inheritance key succeeded
Creating Inheritance Key for container: %@, context: %@
Remove Custodian Recovery Key %@ for container: %@, context: %@
Device does not participate in SOS; cannot remove recovery key in Octagon
join with custodian recovery key %@ invoked for container: %@, context: %@
octagon, join with custodian recovery key failed: %@
join with recovery key succeeded
Creating Custodian Recovery Key for container: %@, context: %@
join with recovery key invoked for container: %@, context: %@
octagon: recovery key is not enrolled in octagon, and current device can't set recovery keys
octagon, recovery key is not enrolled in octagon, resetting octagon circle
octagon, join with recovery key failed: %@
octagon, failed to reset octagon
attempting enrolling recovery key
octagon, failed to enroll new recovery key: %@
successfully enrolled recovery key
Setting recovery key for container: %@, context: %@
Device does not participate in SOS; cannot enroll recovery key in Octagon
recovery failed validation with error:%@
Reporting analytics for container: %@, context: %@
Error fetching SOS status: %@
Error fetching Octagon metadata: %@
Error fetching machine ID: %@
Error fetching 'mid on list': %@
Number of peers with machineID (%@): %@
MID match (current vs Octagon peer): %@, %@, %@
Peers: %zu, viable peers %zu
Error fetching how many peers have our MID: %@
Error fetching pendingEscrowUpload status: %@
Error fetching escrowRequestClass: %@
restore via bottle invoked for container: %@, context: %@
Received a start-state-machine RPC for container (%@) and context (%@)
Received a status RPC for container (%@) and context (%@)
Received a trust status for container (%@) and context (%@)
Received a fetch peer ID for container (%@) and context (%@)
removed client context with key: %@
fetching context for key: %@
restore
launchBottledPeer
preflightBottledPeer: %@ %@
handleIdentityChangeForSigningKey: %@
received a notification of IDMS trust level change in %@
signing out of octagon trust: %@
signing out failed: %@
signing in %@ for altDSID: %@
circle changed notification called, checking trust state
Initializing Octagon...
starting default state machine...
otmanager init
Octagon: CloudKit.framework appears to not be linked. Cannot create an Octagon manager (on pain of crash).
Can't add operation dependency to cancelled group
received callback for released object
Not running due to some failed dependent: %@
CKKSManifestLeafRecord: saving manifest leaf record to database but %@ is nil
uuid contains delimiter: %@
failed to decode manifest leaf node DER with error: %@
Failed to save fetched manifest leaf record to database: %@: %@
manifest leaf CKRecord was %@
UUID does not match
wrapping key reference does not match
SecCKRecordGenerationCountKey does not match
SecCKRecordWrappedKeyKey does not match
SecCKRecordDataKey does not match
SecCKRecordPCSServiceIdentifier does not match
SecCKRecordPCSPublicKey does not match
SecCKRecordPCSPublicIdentity does not match
Corrupt item recieved with no wrapped key
CloudKit notification: deleted record(%@): %@
Couldn't save incoming queue entry: %@
CKKSMirrorEntry was deleted: %@ %@
error loading a CKKSMirrorEntry from database: %@
BUG: No local item matching resynced CloudKit record: %@
BUG: Local item doesn't match resynced CloudKit record: %@ %@
Already know about this item record, updating anyway: %@
received a record from CloudKit with a bad generation count: %@ (%ld > %@)
CloudKit has told us of record we already know about for %@; skipping update
couldn't save new CKRecord to database: %@ %@
CKKSMirrorEntry was created: %@
Couldn't load possible existing incoming queue entry: %@
Deleting existing CKKSIncomingQueueEntry: %@
Couldn't delete existing incoming queue entry: %@
Couldn't save modified incoming queue entry: %@
CKKSIncomingQueueEntry was created: %@
Couldn't load OQE sibling for %@: %@
Couldn't delete OQE sibling(%@) for %@: %@
decryptItemToDictionary failed: %@
ckks: couldn't decrypt item %@
Couldn't decrypt old CKMirror entry: %@
CKKS padding function received invalid blocksize 0, using 1 instead
No zones to delete
Deleting CloudKit zones: %@
Attempted to delete zone %@, but it's already missing. This is okay: %@
deletion of record zone %@ completed with error: %@
deletion of record zone %@ completed successfully
couldn't save zone creation status for %@: %@
Triggering escrow update
Unable to acquire a EscrowRequest object: %@
Unable to request silent escrow update: %@
Requested silent escrow update
Checking CDP status
Device is locked! restarting on unlock
CDP is %@
Failed to load account metadata: %@
CDP bit is enabled on-disk, not modifying (would have been %@)
Writing CDP bit as %@
Unable to talk with TPH; leaving CDP status as 'unknown': %@
Octagon reports %d peers
Requesting SOS status...
Error fetching circle status. Leaving CDP status as 'unknown': %@
SOS reports circle absent. Setting CDP to 'disabled'
SOS reports some existing circle (%d). Setting CDP to 'enabled'
No SOS. CDP bit is off.
Couldn't delete %@ (due to error %@): %@
Couldn't delete %@: %@
Couldn't fetch an overwriting OQE, assuming one doesn't exist: %@
New modification has come in behind inflight %@; dropping failed change
Couldn't delete in-flight OQE: %@
Couldn't save %@ as %@: %@
Creating a (%@) outgoing queue entry for: %@
no key for item: %@ %@
no plist: %@ %@
No UUID for item: %@ %@
couldn't fetch UUID: %@ %@
couldn't fetch access group from item: %@ %@
couldn't fetch accessgroup: %@
Unable to fetch an existing OQE due to error: %@
Unable to fetch an existing OQE (any state) due to error: %@
Asked to delete a record for which we don't have a CKME or any OQE, ignoring: %@
Unable to decrypt current CKME: %@
Update to item only changes mdat; skipping %@
couldn't create an item: %@ %@
couldn't encrypt item: %@ %@
Cannot select a key for no item!
can't pick key class: %@ %@
Couldn't find current key for %@: %@
Couldn't load key(%@): %@
SFKeychainControl: Client pid (%d) doesn't have entitlement: %@
trying to delete with query: %@
couldn't create query: %@
couldn't delete item (as it's already gone); this is okay: %@
couldn't delete item: %@
couldn't delete query: %@
Rejecting a tombstone item addition from CKKS(%@): %@
Rejecting a multiuser item addition from CKKS(%@): %@
Unable to save new deletion OQE: %@
couldn't process item from IncomingQueue: %@
Couldn't handle IQE, but why?: %@
Correctly processed an IQE; deleting
couldn't delete CKKSIncomingQueueEntry: %@
IQE not correctly processed, but why? %@ %@
Replacing item (it doesn't have a UUID) for %@
Primary key conflict; dropping CK item (arriving from wrong view) %@
Unable to fetch ckme: %@
Primary key conflict; dropping CK item %@
Primary key conflict; replacing %@%@ with CK item %@
error setting uuid persistent ref: %@
Unable to make SecDbItemRef out of attributes: %@
set a new persistentref UUID for item %@: %@
Handling policy-mismatched items
Cannot fetch mismatched view items
No mismatched view items
Inspecting %lu mismatched items
processQueueEntries didn't complete successfully
Early-exiting from IncomingQueueOperation
CKKSIncomingQueueOperation cancelled, quitting
Error fetching incoming queue records: %@
Nothing in incoming queue to process (filter: %@)
Going to process the incoming queues for %@
Will handle mismatched view items along the way
Early-exiting from IncomingQueueOperation (after processing deletes): %@
Early-exiting from IncomingQueueOperation (after processing all incoming entries): %@
Processed %lu items in incoming queue (%lu errors)
Early-exiting from IncomingQueueOperation due to failure fixing mismatched items
Requesting scan for %@
Could not load remote item pointers: %@
Processed %lu items in CIP queue
Received an item (%@), which should be in view %@
Unable to create SecDbItemRef from IQE: %@
Wrote a keychain item that is actually for %@; requesting scan
Unable to load CKKSMirrorEntry from database* %@
Other view (%@) already knows about this item, dropping incoming queue entry: %@
Unable to delete IQE: %@
ready to process an incoming queue entry: %@ %@ %@
Keychain is locked; can't decrypt IQE %@
Coudn't find key in keychain; will attempt to poke key hierarchy: %@
Couldn't decrypt IQE %@ for some reason: %@
Couldn't save IQE %@ as error for some reason: %@
Synced item seems wrong: %@
unknown class in object: %@ %@
Couldn't save errored IQE to database: %@
Received an item (%@), but our current policy claims it should be in view %@
Couldn't save mismatched IQE to database: %@
Saving new current item pointer: %@
Error saving new current item pointer: %@ %@
Error is a 'missing record' error: %@
Couldn't set OQE %@ as %@: %@
Couldn't set OQE %@ as error: %@
error processing outgoing queue: %@
Error is simply due to current key pointers changing; marking all records as 'needs reencrypt'
Error is due to the key records missing. Marking all as 'needs reencrypt'
failed record: %@ %@
Couldn't clean up outgoing queue entry: %@
Unknown error on row: %@ %@
Error is scary: putting all inflight OQEs back into state 'new'
Record deletion successful for %@
Completed processing outgoing queue (%d modifications, %d deletions)
Couldn't update %@ in outgoingqueue: %@
Couldn't save %@ to ckmirror: %@
Couldn't save %@ to currentkey: %@
Couldn't save %@ to ckdevicestate: %@
unknown record type in results: %@
Couldn't delete %@ from outgoingqueue: %@
Couldn't delete %@ from ckmirror: %@
Operation failed; rolling back: %@
Item syncing for this view is disabled
Error fetching outgoing queue records: %@
processing outgoing queue: %@
Couldn't load current class keys: %@
Item's encryption key (%@ %@) is neither %@ or %@
update to a record that doesn't exist? %@
couldn't save state for CKKSOutgoingQueueEntry: %@
Record (%@)'s change tag doesn't match ckmirror's change tag, reencrypting
couldn't save oqe to database: %@
An item needs reencryption!
Nothing in outgoing queue to process
End of operation group: %@
Current keys to update: %@
Can't make current device state: %@
Can't make current device state cloudkit record, but no reason why
Updating device state: %@
Saving records %@ to CloudKit zone %@
QoS: %d; operation group is %@
Beginning upload for %d records, deleting %d records
Record to save: %@
Record to delete: %@
Record upload successful for %@ (%@)
error on row: %@ %@
Unable to fetch priority uuid %@: %@
Priority uuid %@ is not in 'new': %@
Found OQE  to fetch priority uuid %@: %@
octagon: Error preparing voucher using bottle: %@
Saving voucher for later use...
unable to save voucher: %@
Successfully vouched with a bottle: %@, %@
octagon: Error fetching TLKShares to recover: %@
creating voucher using a bottle with escrow record id: %@
using passed in altdsid, altdsid is: %@
fetched altdsid is: %@
authkit doesn't know about the altdsid, using stored value: %@
retrieved account, altdsid is: %@
failed to rerieve account object: %@
octagon: Error preflighting voucher using bottle: %@
Bottle %@ is for peerID %@
Error fetching circle status: %d, error:%@
SOSCCResetToOffering complete: %d %@
SOS not enabled on this platform?
joining SOS
signature didn't verify for %@ %@: %@
no signing key for peer: %@
couldn't share %@ (wrap failed): %@
couldn't share %@ (signing failed): %@
error fetching CKState(%@): %@
escrow-update: Client pid: %d doesn't have entitlement: %@
received connection from client pid %d (euid %u)
Unable to save machineID allow-list: %@
Successfully saved machineID allow-list (%@ change)
Attempting to update trusted device list
octagon-authkit: failed to fetch demo account flag: %@
octagon-authkit: Unable to fetch machine ID list: %@
octagon-authkit: empty machine id list
octagon-authkit: Received an error updating the trusted device list operation, but no retry flag present.
Setting the allowed device list failed due to lock state: %@
Error is currently unknown, will not retry: %@
Machine ID list error is not fatal: requesting retry: %@
Beginning ensuring Octagon keys are set properly in SOS
Failed to get the current SOS self: %@
Fetched SOS Self! Fetching Octagon Adapter now.
failed to get peer id: %@
Fetched SOS Self! Fetching Octagon Adapter now: %@
failed to retrieve self peers: %@
failed to retrieve current self
SOS and Octagon signing keys do NOT match! updating SOS
SOS and Octagon keys match!
RateLimter[%@]: "%@" is not an approved selector string
RateLimiter[%@] state size %lu exceeds max %lu, overloaded until %@
RateLimiter[%@]: Got nil instead of property named %@
Rate limiting disabled, returning automatic all-clear
Asking to create and subscribe to CloudKit zones: %@
Successfully created '%@'
Failed to create '%@'
zone subscription error appears to say that the zone subscription exists; this is okay!
Successfully subscribed '%@'
Failed to subscribe to '%@'
Zone setup progress: created:%d %@ subscribed:%d %@
zone subscription error appears to say the zone doesn't exist, fixing status: %@
Zone is already created and subscribed
SOSCCRequestToJoinCircleAfterRestore complete: %d %@
octagon-sos: failed to update CKKS4All status in SOS: %@
successfully updated CKKS4All status in SOS to '%@'
octagon-sos: failed to update Octagon keys in SOS:%@
successfully updated Octagon keys in SOS!
no octagon keys available skipping updating SOS record
octagon-preload-keys: failed to preload Octagon keys in SOS:%@
successfully preloaded Octagon keys in SOS!
octagon-sos: Error fetching trusted peers: %@
octagon-sos: error fetching octagon keys for peer: %@ %@
Peer(%@) doesn't have Octagon keys, but this is expected: %@
octagon-sos: Not in circle : %@ %@
octagon-sos: Error fetching self peer : %@
octagon-sos: Error fetching self encryption keys: %@
Received a notification that the SOS Octagon peer set changed
octagon-sos: Not in circle; not preapproving keys: %@ (%@)
octagon-sos: Can't fetch trusted peer SPKIs: %@
octagon-sos: Can't create SPKI for peer: %@
octagon-sos: Created SPKI for peer: %@
SOS preapproved keys are %@
Unable to fetch SOS preapproved keys: %@
SOS not enabled; no preapproved keys
octagon: failed to save 'attempted join' state: %@
Beginning establish with keys: %@
octagon: Error calling establish: %@
A CKKS key hierarchy is out of date; moving to '%@'
Couldn't persist results: %@
Beginning an establish operation
Finishing an establish operation with %@
Couldn't load key(%@) from keychain. Attempting recovery: %@
Couldn't unwrap key(%@) using key hierarchy due to the lock state: %@
Couldn't unwrap key(%@) using key hierarchy. Keys are broken, quitting: %@
Couldn't save key(%@) to keychain due to the lock state: %@
Couldn't save key(%@) to keychain: %@
Attempting to heal %@
couldn't load current key set, attempting to proceed: %@
Key set is %@
Have current key pointers, but no keys. This is exceptional; requesting full refetch
No current TLK pointer?
No current ClassA pointer?
No current ClassC pointer?
key hierarchy has split: there's two top keys. Currently we don't handle this situation.
No possible TLK found. Waiting for creation.
CKKS claims %@ is not a valid TLK: %@
Received a TLK(%@), but keybag appears to be locked. Entering a waiting state.
Received a TLK(%@) which we don't have in the local keychain: %@
Couldn't create a new class A key, but keybag appears to be locked. Entering waitforunlock.
couldn't create new classA key: %@
Couldn't create a new class C key, but keybag appears to be locked. Entering waitforunlock.
couldn't create new class C key: %@
Attempting to move to new key hierarchy: %@
Unable to create TLK shares for new tlk: %@
Saving new records %@
Operation group is %@
Completed Key Heal CloudKit operation with error: %@
couldn't save new key hierarchy to database; this is very bad: %@
couldn't save new key hierarchy to CloudKit: %@
Successfully completed upload for %@
View %@ is in okay state; ignoring
Due to write failures, we'll try to fetch the current state
Some records were written! Process them
CloudKit notification: deleted current item pointer(%@): %@
Failed to find remote CKKSCurrentItemPointer to delete %@: %@
Failed to delete remote CKKSCurrentItemPointer %@: %@
Failed to find local CKKSCurrentItemPointer %@: %@
Failed to delete local CKKSCurrentItemPointer %@: %@
CKKSCurrentItemPointer was deleted: %@ error: %@
error loading cip: %@
BUG: No current item pointer matching resynced CloudKit record: %@
BUG: Local current item pointer doesn't match resynced CloudKit record(s): %@ %@ %@
Already know about this current item pointer, skipping update: %@
Couldn't save current item pointer to database: %@: %@ %@
Couldn't fetch attributes from item: %@
No view returned from policy (%@): %@
Received a ServerRecordChanged error, attempting to update new records and delete unknown ones
On error: updating our idea of: %@
On error: handling an unexpected delete of: %@ %@
Examining 'write failed' error: %@ %@ %@
CKKS Server extension has told us about %@ for record %@; requesting refetch and reprocess of key hierarchy
CKKS Server extension has told us about %@ for record %@, but we don't currently handle this error
Processing record deletion(%@): %@
Record deletion(%@) failed:: %@
Processing record modification(%@): %@
unknown record type: %@ %@
Record modification(%@) failed:: %@
Providing keyset (%@) to listeners
Fetching account keys for provider %@
CKKSSynchronizeOperation cancelled, quitting
Beginning local resynchronize (attempt %u)
Couldn't fetch IQEs: %@
restarted synchronization too often; Failing
restarting synchronization operation due to new local items
Couldn't fetch mirror items: %@
Couldn't make CKRecord for item: %@
preparing an identity
AuthKit doesn't know about the altDSID: %@
failed to retrieve account object: %@
Investigating use of Octagon keys from SOS identity
Failed to get the persistent ref for our SOS signing key: %d
Failed to get the persistent ref for our SOS encryption key: %d
octagon: Error preparing identity: %@
Prepared: %@ %@ %@
New syncing policy: %@ views: %@
Couldn't persist metadata: %@
failed to reset account metadata in keychain, %@
No current key UUID in record! How/why? %@
created a CKKSCurrentKey with a nil currentKeyUUID. Why?
error deleting ckp: %@
error loading ckp: %@
BUG: No current key pointer matching resynced CloudKit record: %@
BUG: Local current key pointer doesn't match resynced CloudKit record: %@ %@
Current key pointer has 'changed', but it matches our local copy: %@
Couldn't save current key pointer to database: %@: %@
CKRecord was %@
Current key pointer modification doesn't change anything interesting; skipping reprocess: %@
Unable to set CDP bit: %@
Successfully set CDP bit
Client pid: %d doesn't have entitlement: %@
Client pid: %d attempted to use CKKS, but CKKS is not enabled.
no AccountTracker object
CK device ID not initialized, likely quitting
CK device ID not initialized, quitting
Not quite sure if the account is HSA2 or not. Probably will quit?
Error creating device state entry; quitting: %@
Saving new device state %@
CloudKit returned an error: %@
Couldn't save new device state(%@) to database: %@
Device state record upload successful for %@: %@
was_current does not match
octagon: Error setting recovery key: %@
successfully set recovery key
Providing setRecoveryKey() records to %@
octagon: failed to create string: %@
octagon: Error create custodian recovery key: %@
successfully created custodian recovery key
octagon: failed to parse UUID from TPH: %@
octagon: failed to create crk: %@
Providing createCustodianRecoveryKey() records to %@
octagon: failed to create inheritance key: %@
octagon: Error create inheritance key: %@
successfully created inheritance key
CloudKit.framework appears to not be linked. Cannot enable CKKS (on pain of crash).
reduce-rate-limiting is %@
Ignoring kSecDbCKKSTransaction notification
SecDbEvent gave us garbage: %@
Local keychain was reset; performing local resync
Local keychain reset resync finished with an error: %@
Local keychain reset resync finished successfully
Beginning resynchronize (attempt %u)
error getting database connection, major problems ahead: %@
error doing database transaction, major problems ahead: %@
mismatching zone ids in a single record: %@ and %@
%@ %s %s changes: %@
change %@ SOSObjectCopyDigest: %@
change %@ bad length digest: %@
Attempting to escrow any pending prerecords
Will retry after unlock
Skipping completed escrow request (%@)
Skipping pending escrow request (%@); it's rate limited
No pending escrow request has a prerecord
escrow request have pre-record uploading: %@
escrowrequest: unable to save last escrow time: %@
escrowrequest: fatal error for record: %@, dropping: %@
escrowrequest: unable to delete last escrow time: %@
escrowrequest: prerecord %@ upload failed: %@
escrowrequest: prerecord %@ upload succeeded
escrowrequest: unable to save completion of prerecord %@ in keychain
Could not decrypt item for comparison: %@
Could not get item contents for comparison: %@
Scanning for views: %@
Exiting due to previous error: %@
Found %d views with missing items for %@
Found %d missing %@ items for %@
Transferring ckoperation group %@
Completed scan
View wasn't ready for scan
Unable to save 'scanned' bit: %@
Saved scanned status.
Unable to load CKMirrorEntries: %@
Scanning all synchronizable %@ items(%@) for: %@
keychain missing %lu items from mirror, proceeding with queue scanning
unable to inspect incoming queue: %@
unable to inspect outgoing queue: %@
scanning item: %@
Skipping tombstone %@
skipping sync of device-bound(%@) item
Ignoring syncable keychain item for non-primary account: %@
Scanned item is a CKKS internal key, skipping
Scanned item is for view %@, skipping
making new UUID for item %@: %@
couldn't copy UUID-less item's primary key: %@
Existing mirror entry with UUID %@
Existing mirror entry with UUID %@ does not match local item
Existing outgoing queue entry with UUID %@
Item(%@) is new; will attempt to add to CKKS
No missing local items found
BUG: keychain missing %lu items from mirror and/or queues: %@
BUG: error fetching previously-extant CKME (uuid: %@) from database: %@
Found %d items missing UUIDs
Found item with no uuid: %@
Assigning new UUID %@ for item %@
Unable to copy item with new UUID: %@
Unable to update item with new UUID: %@
Found %d missing %@ items
Onboarding %@ %@
Need to upload %@, but can't create outgoing entry: %@
Syncing new item: %@
Need to upload %@, but can't save to database: %@
couldn't execute query: %@
Not acting on exactly one view; not limiting query: %@
Too many policy rules for view %@
Policy view rule is not a match against viewhint: %@
Policy view rule is complex: %@
octagon: Error joining with voucher: %@
A CKKS key hierarchy is out of date; going to state '%@'
requesting cuttlefish health check
octagon: join successful
No voucher available: %@
joining with a voucher: %@
couldn't reset zone status: %@
couldn't delete all CKKSMirrorEntry: %@
couldn't delete all CKKSOutgoingQueueEntry: %@
couldn't delete all CKKSIncomingQueueEntry: %@
couldn't delete all CKKSKey: %@
couldn't delete all CKKSTLKShare: %@
couldn't delete all CKKSCurrentKeyPointer: %@
couldn't delete all CKKSCurrentItemPointer: %@
couldn't delete all CKKSDeviceStateEntry: %@
Successfully deleted all local data for zones: %@
no client registered for %@, so why did we get any data?
Delivering fetched changes: changed=%lu deleted=%lu moreComing=%lu resync=%u changeToken=%@
No more changes for zone; turning off resync bit
Sorting record deletion %@: %@
Sorting record modification %@: %@
Beginning fetch with discretionary network (%d): %@
Must issue another fetch (with potential error %@)
Record zone changes fetch complete: error=%@
Submitting post-fetch CKEventMetric due to notification %@
Couldn't associate metric with operation: %@ %@
Metric submitted: %@
Received a new server change token for %@: %@ %@
more changes pending for %@, will start a new fetch at change token %@
Record zone fetch complete: changeToken=%@ clientChangeTokenData=%@ moreComing=%@ error=%@
Received a new server change token (via block) for %@: %@ %@
CloudKit notification: record changed(%@): %@
Cancelling fetch: %@
Using cached change token for %@: %@
posting notification %@
Resetting CKKS view %@
Successfully reset %@
CKKS view reset complete
Key set %@ has no TLK; scheduling for reset
Error loading key set %@; not attempting reset
No CKKS views need resetting
Checking if any CKKS zones need resetting
Finishing resetting CKKS missing TLKs operation with %@
octagon: Error removing custodian recovery key: %@
successfully removed custodian recovery key
octagon: Unable to load current metadata: %@
Forcing a full refetch
octagon: update errored: %@
Cuttlefish reports we no longer exist.
update complete: %@, %@
octagon: Unable to save new syncing state: %@
Self peer is now preapproved!
Member list changed
Unknown machine IDs are present; requesting fetch
Self peer (%@) is excluded; moving to untrusted
Self peer (%@) is excluded but is preapproved, moving to sosuprade
Self peer (%@) is unknown; moving to '%@''
octagon: Received an error updating TPH, but no retry flag present.
Updating trust state failed because locked, retry once unlocked: %@
Error is currently unknown, aborting: %@
Updating trust state not fatal: requesting retry: %@
octagon-sos: Can't fetch trusted peers; stopping preapproved key update: %@
Updating SOS preapproved keys to %@
octagon-sos: unable to update preapproved keys: %@
Updated SOS preapproved keys
SOS update preapproval error is not fatal: requesting retry in %0.2fs: %@
SOS update preapproval error is: %@, not retrying
octagon: Error preparing voucher using recovery key: %@
Successfully vouched with a recovery key: %@, %@
creating voucher using a recovery key
using auth kit adapter, altdsid is: %@
octagon: Error preflighting voucher using recovery key: %@
Recovery key ID %@ looks good to go
octagon: failed to reset cdp account contents: %@
successfully reset cdp account contents
Unable to fetch trust status: %@
Failed to fetch allowed machineIDs: %@
MID (%@) on list: %@
waitForOctagonUpgrade
sos not enabled, nothing to do for waitForOctagonUpgrade
SOS circle status: %d, cannot perform sos upgrade
octagon-sos: error retrieving circle status: %@
in sos circle!, attempting upgrade
waitForOctagonUpgrade: already ready, returning
waitForOctagonUpgrade: in ready (after waiting), returning
waitForOctagonUpgrade: fail to get to ready after timeout, attempting upgrade
Beginning checking overall Octagon Trust
octagon-health: CoreCDP confirm existing secret failed: %@
Successfully left SOS
Failed to check escrow prerecord status: %@
prerecord is pending, NOT posting CFU
no pending prerecords, posting CFU
octagon-health: CoreCDP repair failed: %@
CoreCDP post repair success
Beginning to wait for CKKS Priority view download
Done waiting for CKKS Priority view download with error: %@
Done waiting for CKKS Priority view download
Unable to fetch account settings for (%@,%@): %@
Unable to load account metadata for (%@,%@): %@
Returning pending identity for (%@,%@): %@
Unable to persist removal of identity: %@
Successfully persisted removal of SE identity
Unable to persist identity: %@
Successfully persisted new SE identity: %@
Rejecting set of user-controllable sync status due to platform
account is not hsa2 yet, returning
state machine in the error state, cannot service request
Returning user-controllable status as %@ (%@)
Failed to fetch policy: %@
Policy missing even after a refetch?
Finished validatePeers for status RPC
octagon: error fetching escrow contents: %@
fetched escrow contents for bottle: %@
octagon: failed to remove escrow cache: %@
successfully removed escrow cache
octagon: error fetching all viable escrow records: %@
fetched escrow records: %@
octagon: error fetching all viable bottles: %@
fetched viable bottles: %@
fetched partially viable bottles: %@
Device is locked! pending initialization on unlock
no account! returning clique status 'no account'
No cloudkit account present
Unknown cloudkit account status, returning cached trust value
error fetching trust status: %@
trust status: %@
TPPeerStatus is empty
returning cached clique status: %@
Returning an i remove inheritance key call: %@
Returning an inheritance key call: %@
Returning a remove custodian recovery key call: %@
Returning a create custodian recovery key call: %@
Returning a set recovery key call: %@
Unable to dump info: %@
octagon: have a trusted peer ID without peer information: %@
Returning peer ID: %@
Unable to fetch peer ID: %@
Returning status of unpaused state machine for container (%@) and context (%@)
Failed to load account metaada for container (%@) and context (%@): %@
Finished dump for status RPC
No SOS selves present: %@, skipping in status
No SOS peers present: %@, skipping in status
Unable to save voucher for joining: %@
No cloudkit account present: %@
Preparing identity as applicant
Returning a prepare call: %@  %@
Unable to determine CloudKit account state?
No CK account present. Attempting to refetch CK account status...
Fetching new CK account status did not complete in time
After refetch, CK account status is %@
Received an update of an SOS trust set change
This platform doesn't support SOS. This is probably a bug?
creating SOS consistency rate limiter
device name updated: %@
Unable to fetch account metadata: %@
popdialog: Already checked this altDSID: %@
popdialog: Successfully persisted warned-too-many-peers state for %@
octagon: popdialog: Failed to persist warned-too-many-peers state for %@: %@
popdialog: ego peer status says peer count is: %lu
popdialog: not popping dialog, number of peers ok: %lu < %lu
received a cuttlefish push notification (%@): %@
octagon: unknown command: %@
creating aps rate limiter
notifying container of change for context: %@
TTR request not for me (sn)
TTR request not for me (deviceId)
octagon: invalid type of TTR requeat: %@
octagon: health report is lost: %@
octagon-ckks: No peer ID to pass to CKKS. Syncing will be disabled.
octagon-ckks: No memoized CKKS policy, re-fetching
Memoized CKKS policy has no opinion of user-controllable view status
Unable to enable the CKKS4All status in SOS: %@
Initializing CKKS views with policy %@: %@
octagon-ckks: Unable to fetch self peers for %@: %@
Waiting for device unlock to proceed
Error is scary; becoming untrusted
Informing CKKS %@ of trusted operation with self peer %@
device is locked, state moving to wait for unlock
Unable to set trust state: %@
Informing %@ of new untrusted status
Unable to disable the CKKS4All status in SOS: %@
octagon: hit an error checking trust state or posting a cfu: %@
octagon: device is locked, not posting cfu
clique status: %@, posted cfu: %d
clique status: %@, egoPeerID: %@, peerCountByModelID: %@, isExcluded: %d error: %@
octagon: Lost our identity keys! Posting CFU
device is locked; not posting CFU
Have %d peers with model %@
No iOS peers in account; not posting CFU
octagon: failed to retrieve joining attempt information: %@
SOS is enabled and we haven't attempted to join; checking with SOS
SOS is not ready, not posting CFU until it becomes so
SOS is in an unknown error state, posting CFU: %@
SOS is InCircle, not posting CFU
SOS is %@, posting CFU
repairAccountIfTrustedByTPHWithIntendedState: calling into TPH for trust status
repairAccountIfTrustedByTPHWithIntendedState status: %ld, peerID: %@, isExcluded: %d error: %@
got an error from tph, returning to become_ready state: %@
device is locked
TPH believes we're trusted, accepting ego peerID as %@
octagon-health: couldn't persist results: %@
added trusted identity to account metadata
TPH believes we're not trusted, requesting CFU post
Error loading account data: %@
iCloud sign in occurred. Attemping to register with APS...
octagonpush: received callback for released object
octagonpush: Received error fetching preferred push environment (%@): %@
Registering for environment '%@'
ocagon-health: failed to post repair cfu via state machine: %@
device is locked, not posting cfu
posted repair cfu via state machine
Returning from cuttlefish trust check call: postRepairCFU(%d), postEscrowCFU(%d), resetOctagon(%d), leaveTrust(%d)
Posting Repair CFU
octagon-health, hit an error evaluating prerecord status: %@
Posting Escrow CFU
Not posting confirm passcode CFU, already pending a prerecord upload
Leaving Octagon and SOS trust
octagon-health: hit an error asking TPH for trust status: %@
TPH says device is locked!
TPH says we're trusted and in
TPH says we have an identity but we are not in Octagon, posted CFU: %d
peer is trusted: %@
trust state (%@). checking in with TPH
An HSA2 iCloud account exists; waiting for CloudKit to confirm
Initializing CKKS views
An iCloud account exists, but doesn't appear to be HSA2. Let's check!
No iCloud account available.
Unknown account state (%@). Determining...
Unable to fetch initial syncing policy: %@
Fetched initial syncing policy: %@
Waiting for an HSA2 account
CloudKit reports an account is available!
Waiting for a CloudKit account; current state is %@
Asking for a real CK account state
CDP is newly available!
Account is available!  Attempting initializing op!
Preapproved flag is high. Attempt SOS upgrade again!
We are untrusted, but it seems someone preapproves us now. Unfortunately, this platform doesn't support SOS.
Attempt SOS upgrade again!
Attempting SOS upgrade again (due to a consistency notification)
Updating TPH (while untrusted) due to push
Determine iCloud account status
Attempting local-reset as part of signout
Ensuring consistency of things that might've changed
Preloading Octagon Keys on the SOS Account
SOS is enabled; ensuring preapprovals are correct
Investigating SOS status
Requested to enter wait for unlock
Updating SOS preapprovals
Updating TPH (while ready) due to push
Received an suggestion to retry TLK extraction via bottle, but have no entropy stashed
Received an suggestion to retry TLK extraction via RK, but have no recovery key stashed
Received an suggestion to update the machine ID list (while ready); updating trusted device list
Attempt SOS Update preapprovals again!
We are untrusted, but this platform doesn't support SOS.
Attempting SOS consistency checks
Someone would like us to check SOS consistency, but this platform doesn't support SOS.
Attempting user-view control upgrade
Updating CKKS policy
Removing 'account is available' flag
Removing 'IDMS level changed' flag
Removing 'CDP enabled' flag
received new pairing UUID (%@)
current pairing UUID (%@) does not match config UUID (%@)
octagon: Timed out waiting for local reset to complete
localReset returned an error: %@
localReset succeeded
octagon: Unable to fetch machine ID; expect signin to fail: %@
device is not in clique to begin with - returning
octagon-cdp-status: unable to persist CDP enablement: %@
Successfully set CDP status bit to 'enabled''
error fetching account metadata: %@
current cdp status is: %@
Account now unavailable: %@
Informing %@ of new untrusted status (due to account disappearance)
Account available with altDSID: %@ %@
octagon: unable to persist new account availability: %@
Informed that the CK account is now unavailable: %@
Told of a new CK account status: %@
incomplete machine ID list notification -- refreshing device list
Machines-removed push is for wrong altDSID (%@); current altDSID (%@)
removing machines for altDSID(%@): %@
octagon-authkit: removeAllow errored: %@
removeAllow succeeded
octagon-authkit: Unable to load account metadata: %@
Machines-added push is for wrong altDSID (%@); current altDSID (%@)
adding machines for altDSID(%@): %@
octagon-authkit: addAllow errored: %@
addAllow succeeded
Changing trust status to: %@
Adding flag for CKKS policy check
Adding flag for CKKS TLK upload
performing EscrowRequestServerInitialize
octagon: Error preparing voucher using custodian recovery key: %@
Successfully vouched with a custodian recovery key: %@, %@
creating voucher using a custodian recovery key
octagon: Error preflighting voucher using custodian recovery key: %@
Custodian Recovery key ID %@ looks good to go
octagon-inheritor: Error recovering tlkshares: %@
Saving tlkshares for later use...
unable to save shares: %@
Successfully recovered shares
creating inheritance peer and recovering shares using an inheritance key
octagon: failed to save 'se' state: %@
octagon-inheritor: Error preparing inheritor identity: %@
dropping corrupt manifest for %@ from cache
Will force peer registration: %s
SOSCCProcessEnsurePeerRegistration failed with: %@
Skipping coder check for peer: %@
adding coder: %@ for peerid: %@
Coder for '%@' failed to create: %@
coder for %@ was not cf data: %@
didn't find coder for peer: %@ engine dictionary: %@
peer: %@ not found, peerMap: %@, engine: %@
error inflating peer: %@: %@ from state: %@
New coder for id %@.
Failed to create coder for %@: %@
Migrating from v0 engine state; dropping coders and forcing re-negotiation
No keybag found for v0 backup peer: %@
%@: peer failed to inflate: %@
peer: %@: bad state: %@ in engine state: %@
engine failed load state starting with nothing %@
new engine for datasource named %@
updateChanged failed: %@
%@: %s %s %ld changes, txn=%@, %p
failed to delete tombstone %@ that no one cares about: %@
saving engine state
Not saving engine state, nothing changed.
Skipping non-primary item %@
Sending view notification for view %@
SOSEngineHandleMessage_locked (%@): creating a confirmed manifest via a patch (base %zu %@, +%zu, -%zu)
%@:%@ Protocol error send L00 - figure out later base: %@
SOSEngineHandleMessage_locked (%@): got a confirmed manifest by digest: (%zu, %@)
%@:%@ confirmed: %@ base: %@
SOSEngineHandleMessage_locked (%@): new confirmed manifest (%zu, %@) will replace existing confirmed manifest (%zu, %@)
SOSEngineHandleMessage_locked (%@): new confirmed manifest (%zu, %@) is first manifest for peer
%@:%@ unable to find confirmed in %@, sync protocol reset
recv %@:%@ %@
recv %@ -> %@
%@ peer sent bad object: %@, rolling back changes
%@ SOSDataSourceMergeObject failed %@ rolling back changes
%@ ASSERTION FAILURE purging excess pendingObjects: %@
%@ ASSERTION FAILURE purging excess unwanted: %@
%@:%@: send state for peer [%s%s%s][%s%s] local:%zu confirmed:%zu pending:%zu, extra:%zu, missing:%zu unwanted:%zu
synced <No MSG> %@:%@
waiting <MSG not resent> %@:%@ extra: %@
%@:%@: only have differences in unwanted set; lying to peer to stop sync
%@:%@: failed to set message manifests
%@:%@ error in send: %@
%@:%@ sendObjects=true L:%@
send %@:%@ %@
%@:%@ failed to send %@
%@:%@ object %02X%02X%02X%02X dropping from manifest: not found in datasource: %@
%@:%@ object %02X%02X%02X%02X dropping from manifest: %@
%@:%@ object %02X%02X%02X%02X in SOSDataSourceForEachObject: %@
%@:%@ object %02X%02X%02X%02X is really %02X%02X%02X%02X dropping from local manifest
%@:%@ object %02X%02X%02X%02X der: %@ dropping from manifest: %@
Failed to process sync for %@: %@
%@:%@: Send state for peer [%s%s%s] O: %zu, M: %zu
%@:%@ backup still done
SOSEngineUpdateChanges_locked: %@ failed: %@
%@:%@ backup done%s
%@:%@ in SOSBackupPeerWriteCompleteMarker: %@
%@:%@ backup incomplete [%zu/%zu]%s
%@:%@ object %02X%02X%02X%02X %s: %@
failed to save engine state: %@
Start
No Engine Available
No engine peers: %@
Finish
wrapping key reference (self-wrapped) does not match
wrapping key reference (non-self-wrapped) does not match
key class does not match
wrapped key does not match
Unable to load key due to lock state: %@
Do not yet have this key in the keychain: %@
Some key is present, but the key is not self-wrapped: %@
Failed to unwrap tlk(%@) via shares: %@
Errored saving TLK to keychain: %@
Error with TLK: %@
Unable to load TLK shares for TLK(%@): %@
Failed to recover tlk (%@) from trust state (%@): %@
Recovered tlk (%@) from trust state (%@)
Resaving missing key failed, continuing: %@
Probable bug: wrapped key data does not match cached version
Couldn't load key record from database: %@: %@
Couldn't delete key record from database: %@: %@
error loading key: %@
BUG: No sync key matching resynced CloudKit record: %@
BUG: Local sync key doesn't match resynced CloudKit record(s): %@ %@
Already know about this sync key, skipping update: %@
Error finding existing local key for %@: %@
Couldn't update existing key: %@: %@
Couldn't save key record to database: %@: %@
Received a 24hr notification from XPC
Trust not ready, still going ahead
Beginning push for %@
Skipping fetchAndProcessCKChanges due to disabled CKKS
Skipping rpcFetchAndProcessChanges because a recent fetch was performed
Beginning fetch for %@
Beginning resync (local) for %@
Ending rsync-local rpc with %@
Beginning resync (CloudKit) for %@
Ending rsync-CloudKit rpc with %@
Error getting keyset: %@
Do not have keyset: %@
Error loading key: %@
Do not have TLK: %@
Failed to get account object
Couldn't process sync with backup peers: %@
telling CloudServices about TLK arrival
New TLKs have arrived
No CKKS view for %@, %@
No CK account; failing all pending sync callbacks
fetched UUID: %@
registered callback for UUID: %@
Restarting CKKS %@
 couldn't load global zone state: %@
couldn't fetch CKMirror counts for %@: %@
View has %@ item ckrecords
couldn't fetch CKKSTLKShare counts for %@: %@
View has %@ tlkshares
couldn't fetch CKKSKey counts for %@: %@
View has %@ sync keys
 couldn't fetch sos status for SF report: %@
fetching views
octagon: failed to retrieve policy+views: %@
SecDbKeychainItemV7: error deserializing wrappedKey from metadata: %@
SecDbKeychainItemV7: error deserializing ciphertext from metadata: %@
SecDbKeychainItemV7: error deserializing ciphertext from secret data: %@
unwrapFromAKS - Key diversify feature enabled. persona = %@
wrapToAKS: Key diversification feature persona %@ is data separated
SecDbKeychainItemV7: access control error
SecDbKeychainItemV7: item's secret data exceeds reasonable size (%lu bytes) (%@)
SecDbKeychainItemV7: backup manager didn't return wrapped key: %@
SecDbKeychainItemV7: item's metadata exceeds reasonable size (%lu bytes) (%@)
SecDbKeychainItemV7: failed to delete item secret key from aks
SecDbKeychainItemV7: error decrypting item secret data contents: %@
SecDbKeychainItemV7: tamper check failed for secret data decryption, expected %@ found %@
SecDbKeychainItemV7: error unwrapping item metadata key (class %d, bag %d): %@
SecDbKeychainItemV7: error decrypting metadata content: %@
SecDbKeychainItemV7: tamper check failed for metadata decryption, expected %@ found %@
SecDbKeychainItemV7: serialized item exceeds reasonable size (%lu bytes)
Network unavailable
Network available
Network still not available, retrying after waiting %2.1f hours
nw_path update: network is %@
Merging: unable to get attribute (%@) : %@
Preserving existing data for %@
Unable to set attribute (%@) : %@
replaced %@ in %@
    with %@ in %@
cannot decrypt item %@, item is irrecoverably lost with older passcode (error %@)
error %@ reading item %@ (corrupted)
error %@ %@ != %@ item %@ (corrupted)
error attribute %@ has NULL value in item %@ (corrupted)
attribute %@: %@ item %@ (item lost with older passcode)
error attribute %@: %@ item %@ (corrupted)
inserted %@
insert failed for item %@ with %@
insert: failed to created a merged item: %@
failed to create a merged item so we will choose the item from the backup
Conflict resolver chose my (local) item: %@
Conflict resolver chose item from the backup: %@
Conflict resolver created a new item; return it to our caller: %@
deleted %@ from %@
Returning '%@' result: %@
Beginning a '%@' rpc
Releasing state machine test pause from %@
Delay has ended for pending flag %@
Operation has ended for pending flag %@: %@
Conditions are right for %@
Waiting for unlock
Waiting for network reachability
Network is reachable
Unlock occurred
Finished waiting for operation
Finishing state transition attempt (ending in %@, intended: %@, f:[%@], p:[%@]): %@ %@
notifying watcher: %@
In test hold for state %@; pausing
Beginning state transition attempt %@
State machine rests (%@, f:[%@] p:[%@])
Running state machine request %@ (from %@)
ks_encrypt_data: called with non-device keybag - call should be rerouted to ks_encrypt_data_legacy
decode v%d failed: %@
items accessGroup '%@' not in %@
SecDbItemCopyAccessControl accc %@ != pdmn %@, setting pdmn to accc value
Make this item syncable: %@
ks_encrypt_data (db): failed: %@
Unable to wrap keychain item to backup: %@
Beginning SOS upgrade with %d key sets and %d SOS peers
octagon-sos: attemptPreapprovedJoin failed: %@
A CKKS key hierarchy is out of date; requesting reset
octagon-sos: attemptPreapprovedJoin succeded
Providing ck records (from sos upgrade) to %@
Fetching keys from CKKS
Successfully saved machineID allow-list
handling prepare error: %@
octagon-sos: preflightPreapprovedJoin failed: %@
TPH believes a preapprovedJoin will fail; aborting.
TPH believes a preapprovedJoin might succeed; continuing.
Attempting SOS upgrade
Error fetching circle status: %@
Device is not in SOS circle (state: %@), quitting SOS upgrade
Failed to get the persistent ref for our SOS signing key: %@
Failed to get the persistent ref for our SOS encryption key: %@
Fetching trusted peers from SOS
Unable to fetch altDSID from AuthKit: %@
Unable to check safari view status: %@
Safari view is: %@
octagon-sos: Error preparing identity: %@
octagon-ckks: Error persisting new views and policy: %@
SOS upgrade error is not fatal: requesting retry in %0.2fs: %@
SOS upgrade error is: %@; not retrying
negating %@ = %@ in query
key_count: %ld, QUERY_KEY_LIMIT: %d
update_applier: refusing to update musr
completion handler called on deallocated operation instance
failed to fetch leaf record from CKManifest for %@
failed to lookup manifest leaf record with id: %@ error: %@
Error fetching peer verifying keys: %@
error creating manifest der data: %@
error encoding manifest into DER: %@
unrecognized field type in future schema: %ld
failed to update manifest from CKRecord with error: %@
saving manifest to database but %@ is nil
failed to encode peer manifests to der with error: %@
failed to decode peer manifests der array with error: %@
failed to encode signatures dict to der with error: %@
failed to decode signatures der dict with error: %@
attempt to create manifest from CKRecord that does not have signatures attached: %@
failed to initialize CKKSManifest from CKRecord because we could not form a signature dict from the record: %@
attempt to create manifest from CKRecord that does not have a digest attached: %@
zone contains delimiter: %@
signerID contains delimiter: %@
CloudKit notification: deleted manifest record (%@): %@
CKKSManifest was deleted: %@ %@ error: %@
could not parse components from record name: %@
Not ready to commit manifest, yet - missing leaf record ID: %@
Failed to save fetched manifest record to database: %@: %@
manifest CKRecord was %@
cannot get peer keys from account: %@
cannot get ego peer ID from account: %@
cannot get signing key from account: %@
error loading leaf record from database: %@
Error getting peer ID: %@
can't get ego peer ID right now - the device probably hasn't been unlocked yet
Don't have self peers for %@: %@
Don't have trusted peers: %@
No CKKSTLKShares to %@ for %@
Checking possible TLK share %@ as %@
Unable to unwrap TLKShare(%@) as %@: %@
Current trust set: %@
Unwrapped TLKShare(%@) does not unwrap proposed TLK(%@) as %@: %@
TLKShare(%@) unlocked TLK(%@) as %@
%@ Defaults availability: SecCKKSTestsEnabled[%s] DefaultsPointer[%s] DefaultsValue[%s]
feature is %@: %@ (local config)
device is locked! can't check ramp state
not signed in! can't check ramp state
no network! can't check ramp state
timed out waiting for response from CloudKit
cloud kit asked security to retry: %lu
octagon: had an error fetching ramp state: %@
fetch ramp records returned with featureAllowed: %d,
 featurePromoted: %d,
 featureVisible: %d,
Attempting to fetch ramp state from CloudKit
Fetch operation records %@ fetchError %@
Fetch ramp state - featureAllowed %@, featurePromoted: %@, featureVisible: %@, retryAfter: %ld
octagon: Couldn't find CKRecord for ramp. Defaulting to not ramped in
Attempting to leave clique
Departing failed due to lock state: %@
Unable to depart for (%@,%@): %@
octagon: unable to persist clique departure: %@
Successfully departed clique
kSOSMergeFailure => SecDbItemSetKeybag: %@
setting UUID persistent ref on peersitem: %@
failed to set persistent ref on item %@, error: %@
Insert succeeded for: %@
kSOSMergeFailure => kSOSMergePeersObject, %@
dsMergeObject failed: mr=%ld, %@
Conflict resolver chose peers item: %@
failed to save %@@%@ state: %@
failed to load item %@: %@
found item for keys %@
failed to load %@@%@ state: %@
found item for key %@@%@
query_destroy failed: %@
SecDbItemSelectSHA1 failed: %@
digest %zu bytes
create_datasource %@ failed %@
AuthKit not available; dropping device list notification
received notifyAKDeviceList: %@, read payload: %@
partial push or no machine IDs in list; treating as incomplete
Failed to get primary account AltDSID: %@
Current machine ID list: %@
received no device list: %@
AKAnisette not available
Unable to fetch data: %@
Anisette data does not have machineID
fetched current machine ID as: %@
octagon-authkit:could not retrieve altDSID
octagon-authkit: hit an error retrieving altDSID: %@
Account with altDSID %@ is a demo account: %@
AuthKit not available
Security level for altDSID %@ is %lu
ACAccount not available
No primary account
No altDSID on primary account
Client %@ does not have entitlement %@, rejecting rpc
octagon: Client pid: %d doesn't have entitlement: %@
SecPersistentRefCreateWithItem: Creating old persistent ref for %llu
Couldn't fetch UUID from item; can't call callback
failed to create item from stmt: %@
ignoring corrupt %@,rowid=%lld %@
corrupted edata=%@
Authentication is needed for %@,rowid=%lld (%d): %@
decode %@,rowid=%lld failed (%d): %@
handle_result: Creating old persistent ref for %llu
decode item failed, keychain is locked (%d)
s3dl_query_row_digest: Creating old persistent ref for %llu
rowid %lu in %@ failed to create pref/digest
deleting corrupt %@,rowid=%lld %@
failed to delete corrupt %@,rowid=%lld %@
SecServerDeleteAllForUser for user: %@ keepU %s
DeleteAllFromTableForMUSRView failed for %@ for musr: %@: %@
Request to delete app clip keychain items for identifier '%@'
Finished request to delete app clip keychain items for identifier '%@' with status %i: %@
exporting %ssysbound class '%@'
exporting class '%@' complete
exporting class '%@' complete (no items)
exporting class '%@' failed: %@
s3dl_export_row: Creating old persistent ref for %llu
ks_encrypt_data %@,rowid=%lld: failed: %@
Encountered akpu item we cannot export (filter %d), skipping. %@
Could not export item for rowid %llu: %@
export rowid %llu skipped. akpu/token: %i
SecServerDeleteAll
Unable to delete nonsyncable items prior to keychain restore: %@
Successfully deleted nonsyncable items
Restoring backup items '%ld'
Restoring sysbound items '%ld'
Ignoring unknown key class '%@'
Import %ld items of class %@ (filter %d)
Unknown value type for class %@ (filter %d)
import: failed to get the persistent ref: %@
SecServerImportItem: generated a new persistentref UUID for item %@: %@
Item already has a UUID persistent ref set: %@
Failed to import an item (%@) of class '%@': %@ - ignoring error.
imported item: %@
Class %@ not up to date
SecItemSchema: v12 development enabled, returning experimental schema
v12 development disabled, returning production schemas
SecError Nested Error Capping is %@ (via feature flags)
Static Persistent Refs are %@ (via feature flags)
Sent %s
notify_post %s returned: %u
no tversion table, will setup a new database: %@
database version is: 0x%08x : %d : %@
UID: %d  EUID: %d
inspecting item at row %lld in table %@, should add persistref uuid?: %@
upgrading item persistentref at row id %lld
set persistref %@ succeeded? %d: , potential error: %@
phase3: failed to update item %@: %d, error: %@
Bailing in phase 3 interaction not allowed: %@
Bailing in phase 3 because AKS is unavailable: %@
updated item %@: %d
picked up rowid: %lld that needs a persistref
skipping upgrade since minor is newer
upgrade: error has been set but status is true
upgrade: error occurred, considering marking database as corrupt: %@
upgrade: not marking keychain database corrupt for error: %@
upgrade: unable to complete upgrade, marking DB as corrupt: %@
upgrade: unable to complete upgrade and no error object returned, marking DB as corrupt
upgrade: marking database as corrupt
Finished updating persistent refs!
upgrade: unable to opportunistically create index (%@,%@): %@
Upgrade %sfailed: %@
processed custom indexes (now or in the past)
upgr: failed to process custom indexes: %@
no schema for version 0x%x
Upgrading from version 0x%x to 0x%x
Upgrading table %@
upgrade: Upgrade phase1 failed: %@
skipping backup setup for this platform
upgrade: Upgrade phase2 (%d) failed: %@
Done upgrading from version 0x%x to 0x%x
Upgrading saving version major 0x%x minor 0x%x
upgrade: Setting version failed: %@
upgrade: SecDB upgrade failed: %@
dropping item during item upgrade due to agrp=com.apple.token: %@
Received SQLITE_CONSTRAINT with wrong error domain. Huh? Item: %@, error: %@
Ignoring duplicate item: %@
Bailing in phase 2 because AKS is unavailable: %@
dropping item during schema upgrade due to agrp=com.apple.token: %@
item: %@ insert during upgrade: %@
Bailing in phase 1 because AKS is unavailable: %@
no keychain path available
replaced %@ with %@
certificate cannot operate
certificate is not valid yet
certificate expired
function SecTokenItemValueCopy failed with: %@
token item doesn't contain token value data
items matching issuer parent: %@
Failed to delete corrupt item, %@ row %lli: %@
Deleted corrupt rowid %lli from table %@
item: no app clip client or attributes not set, cannot verify restrictions
Cannot update keychain item to access group %@
SecItemServerDeleteAll
SecItemServerDeleteAll: aborting because failed to initialize Query: %@
Backup result: %s (%@)
Performing backup from %s keybag%s
skipping keybag unlock for EMCS
Restoring keychain backup
Restore completed successfully
SecServerKeychainRestore: Restore failed with: %@
failed to obtain manifest for keychain: %@
restore %@ not replacing existing item
restore %@ skipping corrupted item %@
restore %@ failed %@
Completed roll keys.
Failed to roll keys.
failed to collect CKKS-inet keys: %@
failed to collect PCS-genp keys: %@
failed to collect PCS-inet keys: %@
failed to collect com.apple.nanoregistry.migration-genp item: %@
failed to collect com.apple.nanoregistry.migration2-genp item: %@
failed to collect com.apple.bluetooth-genp item: %@
Copy item
Importing %d items
Item w/o class
Item with unknown class: %@
Item creation failed with: %@
Failed to set sync=1: %@ for item %@
Item store failed with: %@: %@
Beginning tlk upload with keys: %@
octagon: Error calling tlk upload: %@
Beginning an operation to upload any pending CKKS tlks
No CKKS views need uploads
CKKS needs TLK uploads for %@
Finishing an update TLKs operation with %@
metrics %@ transfer %@ completed with: %@
metrics %@ dropped on floor since too many are pending
metrics URL is: %@
escrowrequest: Unable to deserialize keychain item
%d is not an OTCliqueStatus?
%d is not an SOSCCStatus?
CloudKit notification: deleted device state record(%@): %@
CKKSCurrentItemPointer(%@) was deleted: %@ error: %@
error loading cdse: %@
BUG: No current device state entry matching resynced CloudKit record: %@
BUG: Local current device state entry doesn't match resynced CloudKit record(s): %@ %@
Failed to save device record to database: %@: %@ %@
No iCloud account active: %@ hsa2 account:%@
No CK device ID available; cannot make device state entry
Couldn't read old CKKSDeviceStateEntry from database: %@
Couldn't read current key pointers from database: %@; proceeding
Couldn't read keys from database: %@; proceeding
Device is locked; couldn't read TLK from keychain. Assuming it is present and continuing; error was %@
Couldn't read TLK from keychain. We do not have a current TLK. Error was %@
Device is locked; couldn't read ClassA key from keychain. Assuming it is present and continuing; error was %@
Couldn't read ClassA key from keychain. We do not have a current ClassA key. Error was %@
Couldn't read ClassC key from keychain. We do not have a current ClassC key. Error was %@
No octagon peer ID available
vouching with %d keysets
octagon: Error preparing voucher: %@
creating voucher
Couldn't fetch current item pointers: %@
Re-fetching %@ for %@
No record ID for stored %@
No existing CIPs; fixup complete
Finished record fetch with error: %@
CloudKit believes %@ no longer exists
Unknown error for %@: %@
Finished record fetch successfully
Recieved record %@
Couldn't save CKKSZoneStateEntry(%@): %@
Updated zone fixup state to CKKSFixupRefetchCurrentItemPointers
Couldn't fetch all TLKShare records: %@
Successfully fetched TLKShare records (%@)
Updated zone fixup state to CKKSFixupFetchTLKShares
Recieved tlk share record from query: %@
Couldn't perform a reload: %@
Successfully performed a reload fixup. New fixup number is %d
Updated zone fixup state to CKKSFixupLocalReload
Unable to fetch all CDSEs: %@
Unable to save CDSE: %@
Saved CDSE has no stored record: %@
Successfully performed a ResaveDeviceState fixup
Updated zone fixup state to CKKSFixupResaveDeviceStateEntries
Attempting to remove peers: %@
Unable to remove peers for (%@,%@): %@
Successfully removed peers
Query failed: %@
Query failed, cferror is %@
couldn't create query for item persistentRef: %@
couldn't run query for item pref: %@
couldn't destroy query for item pref: %@
CKKSUpdateCurrentItemPointerOperation cancelled, quitting
Couldn't fetch new item, quitting: %@
Hash mismatch for new item: %@ vs %@
Error fetching UUID for new item: %@
Couldn't fetch old item, quitting: %@
Hash mismatch for old item: %@ vs %@
Error fetching UUID for old item: %@
Setting current pointer for %@ to %@ (from %@)
Attempt to set a new current item pointer when one exists: %@
current item pointer(%@) doesn't match user-supplied UUID (%@); rejecting change of current
Requested to update a current item pointer but one doesn't exist at %@; rejecting change of current
Creating a new current item pointer: %@
Error attempting to update current item pointer %@: %@
Error attempting to set a current item pointer to an item that isn't synced: %@ %@
Saving new current item pointer %@
Couldn't save new current pointer to database: %@
CloudKit record does not match saved record, ignoring: %@ %@
Couldn't save %@ to manifest: %@
Current pointer upload successful for %@: %@
Generating new TLK
couldn't load the current TLK: %@
Old TLK is: %@ %@
Couldn't fetch and unwrap old TLK due to lock state. Entering a waiting state; %@
Couldn't fetch and unwrap old TLK: %@
Couldn't create new TLK: %@
couldn't make new key hierarchy: %@
couldn't make current key records: %@
Couldn't unwrap TLK due to lock state. Entering a waiting state; %@
couldn't unwrap TLK, aborting new TLK operation: %@
couldn't wrap oldTLK, aborting new TLK operation: %@
Saving new keys %@ to keychain
Couldn't save new key material to keychain due to lock state. Entering a waiting state; %@
couldn't save new key material to keychain; aborting new TLK operation: %@
Fatal error: unable to generate TLK shares for (%@): %@
Unable to generate TLK shares for (%@): %@
No need to make TLK for %@; they don't have any encryption keys
Generating TLK(%@) share for %@
Using prevously-generated proposed keyset: %@
iCloud account is present; checking HSA2 status
HSA2 is %@
iCloud account is not present: %@
octagon: unable to save new account state: %@
octagon-consistency: Unable to fetch current account state due to lock state: %@
octagon-consistency: Unable to fetch current account state. Can't ensure consistency: %@
TPH's trust state (%@) is considered %@
TPH peer status matches cache: (%@)
octagon-consistency: Locally cached status (%@) does not match TPH's current peer status (%@)
TPH peer ID matches cache: (%@)
octagon-consistency: Locally cached peer ID (%@) does not match TPH's current peer ID (%@)
octagon-consistency: Unable to save new account state due to lock state: %@
octagon-consistency: Unable to save new account state. Erroring: %@
Saved new account metadata
Appear to be trusted for peer %@; ensuring correct state
Have iCloud account but not trusted in Octagon yet: %@; attempting SOS upgrade
Have iCloud account but not trusted in Octagon (%@)
Unknown trust state (%@). Assuming untrusted...
octagon: TPH was unable to determine current peer state: %@
Clearing follow ups (for Octagon) of type %@
Posting a follow up (for Octagon) of type %@
Keybag unlocked
Error getting %@ from MobileGestalt
error loading keyset: %@
Building status for %@
Status is %@
Haven't yet initialized SecDb; expect failure
Rejecting %@ RPC since we don't have an iCloud account: %@
Haven't yet received a policy; failing %@
Haven't yet received a policy; expect failure later doing %@
Haven't yet received a syncing policy
attempted to schedule an non-dependent operation on a halted zone, ignoring
attempted to schedule an operation on a halted zone, ignoring
Received update that the trust set has changed
Received update that our self identity has changed
Received notice that our change token is out of date (for %@). Resetting local data...
Received notice that our zone(%@) does not exist. Resetting local data.
Received notice that our container does not exist. Nothing to do.
Dropping fetch due to halted operation
In a resync, but there's More Coming. Waiting to scan for extra items.
Comparing local UUIDs against the CloudKit list
UUID %@ is still in CloudKit; carry on.
Couldn't read an item from the database, but it used to be there: %@ %@
Couldn't read ckme(%@) from database; continuing
BUG: Local item %@ not found in CloudKit, deleting
Couldn't save new server change token: %@
No record changes in this fetch
Beginning incoming processing for %@
Finished processing changes for %@
skipping fetch since zones are not ready
couldn't fetch zone change token for %@
Not participating in fetch: not logged in
Not participating in fetch: zone not created yet
Nil syncing policy presented; ignoring
New syncing policy: %@ (%@) views: %@
Intersecting view list with allow list: %@
Final list: %@
Final list of externally-managed view names: %@
Issuing scan suggestions to handle missed items
Syncing for %@ is now %@ (used to be %@) (policy: %@)
Stopping old view %@
Created %@ view %@
Ending trusted operation
Beginning trusted operation
Moving from an untrusted status; we need to process incoming queue and scan for any new items
received a notification of CK logout
received a notification of CK login
Skipping CloudKit initialization due to disabled CKKS
Received notification of CloudKit account status change, moving from %@ to %@
Computed status of new CK account info is same as old status: %@
Logged into iCloud.
Logging out of iCloud. Shutting down.
Account status has become undetermined. Pausing!
Error finding inflight outgoing queue records: %@
Error fixing up inflight OQE(%@): %@
Havoc is now %@
rpcFetchAndProcess failed: %@
No local TLKs for %@; failing a fetch rpc
rpcFetch failed: %@
rpcFetch succeeded
Throwing away CKOperationGroup(%@) in favor of (%@)
Received a set of %lu TLK upload records
Already have keyset %@
No current keyset for %@ (%@)
Rejecting current item pointer get since no access group(%@) or identifier(%@) given
Rejecting current item pointer get since we don't have an iCloud account: %@
Rejecting current item pointer get since fetch failed: %@
No current item pointer for %@
Current item pointer is empty %@
Retrieved current item pointer: %@
Cancelling request: %@
Rejecting current item pointer set since we don't have an iCloud account: %@
Starting change current pointer operation for %@-%@
Failed setting a current item pointer for %@ with %@
Finished setting a current item pointer for %@
Skipping handleKeychainEventDbConnection due to disabled CKKS
Potential new key material from %@ (source %lu)
skipping sync of non-sync item (%d, %d)
Ignoring syncable keychain item for non-primary account
No intended CKKS view for item; skipping: %@
No CKKS view for %@, skipping: %@
Routing item to zone %@: %@
skipping syncing update of tombstone item (%d, %d)
Client has asked for an item deletion to not sync. Keychain is now out of sync with account
Received an incoming %@ from SOS (%@)
Dropping sync item modification due to CK account state; will scan to find changes later
processKeychainEventItemAdded given garbage: %@ %@
Couldn't create outgoing queue entry: %@
Decided that no operation needs to occur for %@
Couldn't save outgoing queue entry to database: %@
Saved %@ to outgoing queue
Couldn't load OQE siblings for %@: %@
Couldn't find IQE matching %@: %@
Couldn't delete IQE matching %@: %@
Deleted IQE matching changed item %@
No policy configured. Skipping item: %@
Trusted device state (%@) is too old; ignoring
Device (%@) is not trusted and from too long ago; ignoring device state (%@)
Device (%@) is not trusted, but very recent. Including in heuristic: %@
Other device (%@) has keys; it should send them to us
Error fetching device states: %@
Trusted TLK Share (%@) created recently; other devices have keys and should send them to us
Untrusted TLK Share (%@) created very recently; other devices might have keys and should rejoin the circle (and send them to us)
Resetting zones due to missing TLKs: %@
Unable to load keyset: %@
TLK is missing, but no trust is present.
No other devices claim to have the TLK. Resetting zone...
Zone does not yet exist: %@ %@
Incoming Queue item counts: %@
Unable to load key for %@: %@
Have pending classA items for view, but device is locked
Incoming Queue CIP count: %d
Unable to count CIPs: %@
Couldn't count reencrypt OQEs, bad behavior ahead: %@
Zone not ready (%@): skipping reencryption
Syncing disabled for (%@): skipping incoming queue processing
Fetch last occurred at %@ (%@); beginning a new one
Fetch last occurred at %@ (for %@)
CKKS scan last occurred at %@; beginning a new one
CKKS scan last occurred at %@ (for %@)
Have %d outgoing items; scheduling upload
Error checking outgoing queue: %@
Unable to count mirror entries: %@
CK account is not present
CloudKit account now present
No account available
CloudKit account is missing. Departing!
Staying in error state %@
Deleting the CloudKit Zones for %@
Resetting local data for %@
Beginning trusted state machine operation
Kicking off a full key refetch based on request:%d
Kicking off a key refetch based on request
Kicking off a key reprocess based on request
In ready, but there's no trust; going into waitfortrust
Received a nudge that the trusted peers set might have changed! Reprocessing.
Launching a scan operation to find dropped items
Current state is %@, khf: %d
Requesting TLK upload
Misbehaving key states: %@
Starting a key hierarchy full refetch
Creating new TLK shares didn't work. Attempting to refetch!
Looks like the key hierarchy is unhealthy, but we're untrusted.
Looks like the key hierarchy is unhealthy. Launching fix.
Going to process the incoming queue with a fresh policy
Requesting reset of CK zone (logged in)
Restricting cloudkit zone reset to a view subset %@
Restricting cloudkit zone reset to active CKKS-managed subset %@
Beginning cloudkit zone reset for %@
Requesting local data reset
Restricting local data reset to a view subset %@
Beginning local data reset for %@
CloudKit reports there's more records to fetch!
No existing change token; going to try to match local items with CloudKit ones.
We have a fixup to perform: %@
Couldn't reset in-flight OQEs, bad behavior ahead: %@
Error examining existing key hierarchy: %@
No existing key hierarchy for %@. Check if there's one in CloudKit...
xpc: %@
retrieving epoch
octagon: Error getting epoch: %@
No existing key hierarchy (missing all CKPs): %@
Trust system reports device locked: %@
Error examining existing key hierarchy (missing at least one key): %@
Error loading TLK(%@): %@
Soft error loading TLK(%@), maybe locked: %@
Error loading classA key(%@): %@
Soft error loading classA key(%@), maybe locked: %@
Error loading classC(%@): %@
Key hierarchy unhealthy: %@
remote keys: %@
no current pointer for some keyclass: tlk:%@ a:%@ c:%@ %@ %@
Proposed TLK doesn't wrap self: %@
couldn't find active TLK: %@
Not proceeding due to trust system failure: %@
new key %@ is orphaned (%@)
Couldn't unwrap new key (%@), but keybag appears to be locked. Entering waitforunlock.
new key %@ claims to wrap to TLK, but we can't unwrap it: %@
New key %@ wraps to tlk %@
Couldn't save newly local key %@ keychain, due to lock state. Entering a waiting state; %@
couldn't save newly local key %@ to database: %@
triggering new TLK notification: %@
Accepted new key hierarchy
Checking consistency of key hierarchy
Key hierachy is '%@' (error: %@)
couldn't fetch list of remote keys: %@
After remote key processing, Key hierachy is '%@' (error: %@)
CloudKit notification: deleted tlk share record(%@): %@
CK notification: Couldn't delete deleted TLKShare: %@ %@
Couldn't save new TLK share to database: %@ %@
couldn't load old share for %@: %@
Zone is entering %@
Failed to find peers for nonessential system: %@
New share set is missing shares for peers: %@
couldn't load current keys: can't fix TLK shares
Keychain is locked: can't fix shares yet: %@
couldn't load current tlk from keychain: %@
Unable to create shares for trust set %@: %@
Unable to create shares due to some trust issue: %@
Unable to create shares: %@
Don't believe we need to change any TLKShares, stopping
New shares won't resolve the share issue; erroring to avoid infinite loops: %@
Uploading %d new TLKShares
Uploading TLKShare to %@ (as %@)
Completed TLK Share heal operation with success
Couldn't save new TLKShare record to database: %@
Completed TLK Share heal operation with error: %@
Successfully completed upload for record %@
Account is inherited, bailing out of healing TLKShares
View key state is %@; not checking TLK share validity
Due to write failures, we'll retry later
Couldn't find missing shares because trusted peers aren't available: %@
Couldn't find missing shares because self peers aren't available: %@
current self peer (%@) is not in the set of trusted peers: %@
Peer (%@) is not supposed to have view, skipping
Unable to load existing TLKShares for peer (%@): %@
Existing TLKShare's signature doesn't verify with current peer set: %@ %@
Local peer %@ is shared %@ via self: %@
Local peer %@ is shared %@ via trusted %@, but that's not good enough
Peer %@ is shared %@ via trusted %@
Peer %@ has a share for %@, but to old keys: %@
Missing TLK shares for %lu peers: %@
Self peers are (%@) %@
Trusted peers are (%@) %@
TLK not loaded; cannot make shares for peers: %@
Unable to find peers missing TLKShares: %@
Creating share of %@ as %@ for %@
Couldn't create new share for %@: %@
CKKSReencryptOutgoingItemsOperation cancelled, quitting
View is %@; reencryption will likely fail
Error fetching oqes from database: %@
Couldn't load 'new' OQE to determine status: %@
Have a new OQE superceding %@ (%@), skipping
Couldn't delete reencrypting OQE(%@) from database: %@
Reencrypting item %@
Couldn't find key in keychain; asking for reset: %@
Couldn't decrypt item %@: %@
Couldn't fetch key (%@) for item %@: %@
Couldn't fetch the current key for class %@: %@
Couldn't fetch ckme (%@) for item %@: %@
Couldn't encrypt under the new key %@: %@
Couldn't save newly-encrypted oqe %@: %@
CKKS: error fetching SecBackupKeybagEntry(%@): %@
OctagonAPSDelegate received a message(%@): %@ 
Received a cuttlefish push to container %@
received cuttlefish push for unregistered container: %@
received push for unregistered receiver: %@
unexpected notification: %@
Received per-topic push token "%@" for topic "%@" identifier "%@" on connection %@
OctagonAPSDelegate initiated: %@
received registration for released OctagonAPSReceiver
sending fake push to newly-registered cuttlefish receiver(%@): %@
Registering new CKKS push receiver: %@
sending stored push(%@) to newly-registered receiver: %@
Submitting initial CKEventMetric due to notification %@
Can't modify CloudKit zone for view %@: %@
Unable to load currentTLK: %@
TLKShare is not for the current TLK(%@): %@
Unable to load TLKShare (to delete): %@ %@
Requested modifications are a no-op; claiming success
error proposing new TLK: %@
Completed modifying TLK share records!
Error loading TLK pointer for this zone: %@
No TLK pointer for this zone
No TLK for this zone
Unable to load TLKShares for zone: %@
Can't fetch CloudKit zone for view %@: %@
Can't propose TLKs for view %@: %@
Unable to make TLK: %@
Unable to make fake class keys: %@
Unable to load old TLK: %@
Unable to convert old TLK: %@
Trying to set TLK %@
Wrapped old TLK: %@
TLKShares: %@
Unable to create CKP: %@
Unable to create class CKP: %@
Beginning upload for %d records
Completed uploading new TLK!
Can't reset CloudKit zone for view %@: %@
Unable to unbase64 key: %@
Resaving %@ as per request
Resaving %@ failed: %@
couldn't wrap key: %@
loaded a piggy TLK (%@)
loaded a stashed TLK (%@)
SOSEnsureBackup: Backup already scheduled for next unlock
SOSEnsureBackup: Scheduling a backup for next unlock
Performing keychain backup after unlock because backing up while locked failed
SOSEnsureBackup: SOS made a backup of views: %@
engine: SOSEnsureBackup: encountered an error while making backup (%@)
TrustedPeersHelperSetupProtocol failed, continuing, but you might crash later: %@
Returning a voucher call: %@, %@, %@
Returning an epoch call: %llu  %@
OTCuttlefishContext: received a cuttlefish push notification (%@)
OTCuttlefishContext: updating errored: %@
OTCuttlefishContext: update complete
octagon: Can't talk with TrustedPeersHelper, update is lost: %@
Running client %@ state machine request %@ (from %@)
removing client connection for %@
moving to state done for %@
Beginning client state transition attempt %@
Finishing state transition attempt %@
Waiting for CKKS Priority view download for %@
Starting a new fetch, reasons: %@
No clients
blocking fetch on network reachability
Received a null self pointer; strange.
Interrogating clients about fetch error: %@
All clients thought %@ is a fatal error. Not restarting fetch.
Fetch failed with rate-limiting error, restarting in %.1f seconds: %@
Fetch failed with error, restarting soon: %@
Halted; not starting a new fetch
Skipping fetching size no zone is ready
received a zone change notification for %@ %@
keyForKeyclass called without error param, this is a bug
SecDbMetadataKeyStore: Unable to load metadatakey for class %d from disk (%@) and not allowed to create new one
SecDbMetadataKeyStore: unable to use key (%ld), will attempt to create new one
SecDbMetadataKeyStore: unable to create or save new key: %@
SecDbMetadataKeyStore: scary error encountered: %@
SecDbKeychainItemV7: cannot decrypt metadata key because the keychain is locked (%ld)
Metadata key for %d has no or mismatching backup data; will rewrite.
No metadata key found on disk despite existing row. That's odd.
SecDbMetadataKeyStore: Unable to rewrite metadata key for %d to new format: %@
SecDbMetadataKeyStore: Unable to encrypt new metadata key to keybag: %@
SecDbMetadataKeyStore: Unable to encrypt new metadata key to backup infrastructure: %@
Failed to write new metadata key for %d: %@
SecDbKeychainItemV7: AKS decrypted metadata blob for class %d but could not turn it into a key: %@
SecDbKeychainItemV7: Unable to create key from retrieved data: %@
dropping all metadata keys
dropping class A metadata keys
genericMetric  %{public}@ with unhandled metric type: %{public}@
Beginning operation that preloads the SOSAccount with newly created Octagon Keys
CK operation failed with rate-limit, scheduling delay for %.1f seconds: %@
Attempting to subscribe to zones %@
Waiting for reachabilty before issuing zone subscription
Couldn't create cloudkit zone subscription; keychain syncing is severely degraded: %@
Successfully subscribed to %@
Attempting to create zones %@, delete zones %@
Waiting for reachabilty before issuing zone creation
Zone modification failed: %@
created zones: %@
deleted zones: %@
Halted; not launching operations
No pending zone modification operations; quitting
Have in-flight zone modification operations, will retry later
finished subscribing to zones
finished creating zones
SFKeychainServer: connection denied due to entitlement %@
SFKeychainServer: attempt to remove credential with invalid persistent identifier; %@
SFKeychainServer: attempt to fetch credential with invalid persistent identifier; %@
Beginning an 'reset CKKS' operation
Finished ckks-local-reset with %@
Finishing a ckks-local-reset operation with %@
Telling CloudServices about any pending requests
No pending escrow request needs a certificate
escrowrequest: cloudservices reports an issue caching the certificate, so we'll have to try again later: %@
escrowrequest: unable to save the last attempt time: %@
escrowrequest: unable to save escrow update request certificate status, so we'll have to try again later: %@
Trying again after unlock
CloudService successfully cached a certificate; request is ready for passcode
escrowrequest: unable to begin passcode request: %@
escrowrequest: sbd failed to cache a certificate
Attempting to reset octagon
Unable to reset for (%@,%@): %@
Successfully reset Octagon
Entering state: %@ [flags: %@]
flush circles/rings failed %@
Failed to delete v0 keybag: %@
performing backup for %@
trigger ring update at %@
trigger backup for peers: %@ at %@
Updated retired peer %@ in %@
Error cleanup up after peer (%@): %@
Reset backup ring %@ %s
sosEvaluateIfNeeded - Turning on SOS since disablement is unavailable
sosEvaluateIfNeeded - checking circle
Disabling SOS since the account key isn't trusted
Re-enabling SOS for circle change
Disabling SOS for circle change
Turning on SOS
Turning off SOS
SOSDisablement is not turned on for this platform
No value found for SOSDisablement initializing to Enabled
trigger a forced sync for %@
Joining circles through piggyback (SOSAccountCopyCircleJoiningBlob)
Bad data blob: piggyback (SOSAccountCopyCircleJoiningBlob)
Failed - no private credential %@: piggyback (SOSAccountCopyCircleJoiningBlob)
Failed - decoding blob %@: piggyback (SOSAccountCopyCircleJoiningBlob)
setting flag in account for piggyback v0
clearing flag in account for piggyback v0
%@: Joining blob for account: %@ for piggyback (V%d) gencount: %@  pubkey: %@ signatureID: %@  starting circle hash: %@
Making circle joining piggyback blob as sponsor (SOSAccountCopyCircleJoiningBlob)
Invalid circle status: %@ to accept piggyback as sponsor (SOSAccountCopyCircleJoiningBlob)
Peer application wasn't signed with the correct userKey
Failed to make circle joining piggyback blob as sponsor %@
Failed to process credentials %@
failed final flush: %@
Starting
Returned %s
SecKeyCreateWithData failed: %@
SOSAccountTryUserPrivateKey failed: %@
SOSAccountTryUserPrivateKey succeeded
no stashed credential
returning stash credential: %@
sync and wait starting
EFP calling SOSCloudKeychainSynchronizeAndWait
CloudCircle EFRESH
failed sync and wait: %@
failed flush: %@
finished sync and wait
EFP complete: %s %@
EFP returned, callback error: %@
Changing DSID from: %@ to %@
Not Changing DSID: %@ to %@
Setting Account to New
Setting account.key_interests_need_updating to true in SOSAccountSetToNew
SecItemDelete: %d
Setting account.key_interests_need_updating to true in SOSAccountCreate
Error cleaning up after peer, probably orphaned some stuff in KVS: (%@) 
 moving on
Reset to offering with last retirement and me as applicant
Reset to empty with last retirement
SOSFullPeerInfoPromoteToRetiredAndCopy error: %@
Create ticket failed for peer %@: %@
Couldn't post retirement (%@)
Couldn't flush retirement data (%@)
successfully registered recovery public key
could not register recovery public key: %@
RK Cleared
Couldn't clear RK(%@)
Could not retrieve the recovery public key from the ring: %@
Normal path circle join (SOSAccountJoinCircles)
Resetting circle to offering because it's empty and we're joining
attempt to join a circle we're in - continuing.
Resetting circle to offering since we are new and it doesn't verify with current userKey
Resetting my peer (ID: %@) for circle '%@' during application
Resetting circle to offering since there are no peers
Failed to join with cloud identity: %@
Joining after restore (SOSAccountJoinCirclesAfterRestore)
Can't remove without userKey
Can't remove without being active peer
No peerSet to remove
Removed Peers from circle %@
Leaving circle by client request (SOSAccountRemovePeersFromCircle)
Attempting to remove peer set %@
Attempting to leave circle - best effort - in %llu seconds
Leaving circle by client request (Bail)
Got error in SOSCircleHasPeer: %@
Ensuring peer registration.
Failed to get trust object in Ensuring peer registration.
can't initialize transport for peer %@ with %@ (%@)
message keys that we should remove! %@
total keys: %lu, cleaning up %lu
SOSCloudKeychainPutObjectsInCloud returned error: %@
SOSCloudKeychainRemoveKeys returned error: %@
key: %@
SOSCloudKeychainGetObjectsFromCloud returned error: %@
unable to fetch TLKs: %@
Failed to load TLK %@: %@
sending TLK %@
Found %d TLKs
fetched TLK %@ with name %@
preparing TLK in order: %@: %@
sending %d tlks
sending %d identities
identities: %@
ACCOUNT: [keyStatus: %c%c%c hpub %@] [SOSCCStatus: %@] [UID: %d  EUID: %d] %@
ACCOUNT: No Circle
outstanding views: %@
Sync: %c%c PeerViews: %@
timer fired!
coder is in awaiting state, restarting coder
Attempt to recover coder failed to restart: %@
coder restarted!
time fired but out of negotiation! Not restarting coder
error grabbing engine for peer id: %@, error:%@
SOSPeerRateLimiter timer went off! sending:%@ 
 to peer:%@
could not send message: %@
Got Success and Error (dropping error): %@
Got error setting keybag for backup view '%@': %@
Error during SOSAccountProcessBackupRings (%@)
circle_rings_retirements_need_attention set to true since we got a BackupKey
Setting peerInfo backupKey to %@
Setting peerInfo backupKey to NULL
failed to set V0 keybag (%@)
Peer list contains a non-peerInfo element
Not currently in circle
account backup key isn't valid: %@
Account backup key and peerinforef backup key don't match.  Using account backup key.
Failed to setup backup public key in peerInfo from account: %@
failed to decode pbkdf2 params
%@ %@]
do not have an rtt yet
timeout dictionary doesn't exist
timeout for peerid: %@, doesn't exist
SOSAccountSetValue threw an error for key kSOSAccountPeerNegotiationTimeouts: %@
OTR negotiation retry count: %d
deadline value not available yet
decided to wait %d before restarting negotiation
setting timer for peer: %@
otrTimerFired fired
negotiation finished! clearing max retry counter
Not performing requested sync operation: not in circle yet
Syncing with KVS capable peer: %@
Arming account to update SOSEngine with current trusted peers
KVS sync %s. (%@)
synced with peer: %@
failed to sync with peer: %@ error: %@
Skipped peer ID: %@ due to %@
Peer Sync failed: %@
Engine Backup Sync failed: %@
Purging private account credential
Moving : %@ to previousAccountKey
not trusting new public key: %@
Setting private credential purge time to %llu minutes
Password cache expired
Failed to update user private key to keychain: %d
Failed to add user private key to keychain: %d
Stored user private key stashed local keychain
Password generated pubkey doesn't match - candidate: %@  known: %@
Looked for a stashed private key, didn't find one
trusting new public key: %@
Purging private entities for userKey
SOSAccountSetPrivateCredential nothing to save
setting new private userKey
temporarily caching userKey password
no userKey password to save
Timing out, purging private account credential
Long password (>20 byte utf8) being used to derive account key 
 this may be a PET by mistake!!
Failed to publish new cloud parameters: %@
Setting account.key_interests_need_updating to true in SOSAccountAssertUserCredentials
Failed to retrieve cloud parameters - %@
Failed to create correct key with password.  Caching for use with KeyParam refreshes
Setting account.key_interests_need_updating to true in SOSAccountTryUserCredentials
Failed to accept provided user_private as credential
Setting account.key_interests_need_updating to true in SOSAccountTryUserPrivateKey
Accepted provided user_private as credential
Already associated with ring
Failed to cleanup after peer %@ messages: %@
Failed to cleanup after peer %@ retirement: %@
status: %ld
Calling SOSCircleUpdatePeerInfo for %@
Signed Peerinfo to update
Failed updating PeerInfo
Error Processing expansion dictionary der - dropping account object
Setting backup key from metadata
Failed to set backup key from metadata - no key found
No private key associated with my_identity, resetting
Setting account.key_interests_need_updating to true in SOSAccountCreateFromDER
Non ring in ring table: %@, purging!
SOSAccountUpdateRingFromRemote called before signing in to new account
Unsynced was: %@
Unsynced is: %@
Notified clients of kSOSCCCircleChangedNotification && kSOSCCViewMembershipChangedNotification for circle/view change
Notified clients of kSOSCCViewMembershipChangedNotification for viewchange(only)
Notified clients of kSOSCCCircleChangedNotification for userKey change
No longer trust user public key - prompting for password.
UserKey is once again trusted and we're valid in circle.
UID: %d - Finished as:%s %@ v:%@
UID: %d - Starting as:%s %@ v:%@
new last circle status is: %d
posting kSOSCCCircleChangedNotification
initial last circle status is: %d
UID: %d - No account; running block on local thread
Self peer(%@) %@ CKKS For All
Haven't finished initial backup syncing, not registering backup metas with engine
No key to backup to, we don't enable individual view backups
My Meta: %@: %@
Failed to register backup meta from %@ for views %@. Error (%@)
Backup peer meta: R: %@ Vs: %@ VD: %@
Not ready, no peer meta: R: %@ Vs: %@
View '%@' not being backed up 
 ring %@:%@ not backup ring.
Peer %@ supports CKKS For All; ignoring in SOS syncing
Meta: %@: %@
calling change block
SOSAccountHandleCircleMessage called before signing in to new account
Value provided not appropriate for a circle
No circle found in data: %@
Expected circle named %@, got %@
SOSCircleCreateFromData returned NULL.
NULL circle found, ignoring ...
Incompatible circle found, abandoning membership: %@
SOSAccountHandleParametersChange called before signing in to new account
SOSAccountHandleParametersChange got new public key: %@
Got same public key sent our way. Ignoring.
Got previous public key repeated. Ignoring.
Successfully used cached password with new parameters
Got new parameters for public key - could not find or use cached password
Setting account.key_interests_need_updating to true in SOSAccountHandleParametersChange
adding sync block [%@] to array!
Handling initial sync done.
updated view sets!
Could not update view sets
Account could not add the pending view sets
Handling Required Backup Sync done
calling in sync block [%@]
not in circle nor applying: clearing pending
Pending views setting to all we can expect.
Empty set, using NULL instead
Failure saving new unsynced value: %@ value: %@
Unsynced: %@
Views in sync: %@
Peer %@ synced views: %@
Setting up notifications to monitor in-sync
Couldn't find engine to setup notifications!!!
Cancelling notifications to monitor in-sync
No engine to cancel notification from.
start:[%s] modifier: %@
Ceasing ring handling for an echo of our own posted ring
##### No trusted peer signature found, accepting hoping for concordance later
##### No User Public Key Available, this shouldn't ever happen!!!
##### Bad Error Return from ConcordanceTrust
Decided on action [%s] based on concordance state [%@] and [%s] ring.
changing state to accept - we have a reset ring
mismatch between filteredPeerIDs and ringPeerIDSet, fixing ring and gensigning
filteredPeerIDs %@
  ringPeerIDSet %@
Backup ring contains no BSKB
BSKB is missing some backup keys
BSKB is missing recovery key
Need to fix BSKB - this will prompt a gensign
Couldn't fix BSKB (%@)
Already concur with newRing
concordance signed
Failed to concordance sign, error: %@
Reset ring for recovery from remote peer
normal ring recovery key harvest
   RePush: %@
Rejecting: %@
Have no old ring - would reset
Pushing:[%s] %@
Setting account.key_interests_need_updating to true in handleUpdateRing
Ring %@ not stable
reset all rings error: %@
Reset Rings to empty by client request
error: %@
Calling SOSCircleUpdatePeerInfo for gestalt change
Warning, attempting to Add KeychainV0
Tried to set dataSourceEngine with no circle
Attempt to set viewsets with no trusted circle
Attempt to set viewsets with no fullPeerInfo
No work to do
Couldn't copy PeerInfoRef
Unable to update peer to V2- can't update views: %@
Updating PeerInfo to V2 within SOSAccountUpdateViewSets
Bad view change (enable) with kSOSViewKeychainV0
Bad view change (disable) with kSOSViewKeychainV0
Calling SOSCircleUpdatePeerInfo for views or peerInfo change
Disabling %@
Enabling %@
No %@ list provided.
%@ list: %@
Calling SOSCircleUpdatePeerInfo for views change
Unable to allocate ring
Unable to decode DER
Failed to set UUID: %@ (%@)
NULL Coder requested, no transport security
Coder create failed: %@
%@ %s %@ %@ returned %s
SOSCoderIsFor failed: %@
Resending OTR Start %@
%@ Decode OTR Protected Packet: %@
%@ Unknown packet type: %@
%@ %@ %s %@ %@ returned %s
Requesting too much space for digest vectors: %ld
reallocf failed requesting space for digest vectors: %ld (bytes)
Failed to get size of dictionary - %@
Failed to DER encode dictionary - %@
concordance trust (%s)
    knownRing: %@
 proposedRing: %@
knownkey: %@ userkey: %@ myPeerID: %@
SetRecoveryPublic: %@ from %@
Recovery Key changed: old %@ new %@
%td length 
%td trailing bytes after objects DER
SOSMessageSetManifests: setting base digest to %@ %zu
SOSMessageSetManifests: setting proposed digest to %@ %zu
SOSMessageSetManifests: setting sender digest to %@ %zu
der_encode_manifest_digest_message: encoded sender digest as %@
der_encode_manifest_message: encoded message additions as (%zu, %@)
der_encode_manifest_and_objects_message: encoded base digest as %@
internal error %td bytes unused in der buffer
der_decode_v0_message_body: received a DigestMessage with sender digest: %@
%td trailing bytes after deltas DER
der_decode_v0_message_body: received a ManifestMessage with (%zu, %@)
der_decode_manifest_and_objects_message: decoded base digest as %@
internal error %td bytes unused in generalizedtime DER buffer
der_decode_message_header: decoded sender digest as %@
der_decode_message_header: decoded base digest as %@
der_decode_message_header: decoded proposed digest as %@
%td trailing bytes after SOSMessage DER
%@ keybag for backup unset
%@ backup bag: %@
%@ failed to write reset to backup journal: %@
%@ Wrote reset.
%@ unlinking journal file %s
posting notification to CloudServices: %s
Unable to unlink file %s: %@
Handing off file %s of size %llu
Handing off file %s failed, %@
%@ had no views, inferring: %@
%@ RM:%@ SR:%@ SA:%@ UR:%@
%@ C:%@ U:%@ O:%@
%@: willCommit R:%@ A:%@ UA:%@ %s O%s%@%s%@
bad change %@: %@
removing timer for peer: %@
%@ engine negotiating
%@ engine negotiation complete
%@ engine failed handling message %@
%@ engine stale event ignored
%@ engine received a message too soon, time to restart
%@ engine unknown coder state: %d
%@ getCoder: %@
coder state: %@
%@ Coder can wrap, getting message from engine
%@ SOSEngineCreateMessage_locked failed: %@
%@ SOSCoderWrap failed: %@
%@ negotiating, %@
coder is in awaiting state
coder not in awaiting state: %@
timer for coder already set: %@
concordance-signer-status: %@ -> %d
ring empty -> trusted
Calculating interests done: %s
Updating interests: %@
 key-intrest: %@->%@: %@
Pushing %lu interests to CKP
Error updating keys: %@
Error getting message interests %@
Error getting circle interests %@
Error getting ring interests %@
Error getting debug key interests %@
Error getting key parameters interests %@
SOSTransportDispatchMessages received kSOSKVSAccountChangedKey
Updates [%ld]: %@
Handled [%ld]: %@
Transport failed to handle ring messages: %@
Transport failed to handle circle messages: %@
Transport failed to process all circle messages: (%ld/%ld) %@
Transport handled no circle messages
No messages handled: %@
Flush failed: %@
Transport failed to handle retirement messages: %@
Transport failed to handle new key parameters: %@
Unknown key '%@', ignoring
Peer message processing error for: %@ -> %@ (%@)
Setting account to new because a new DSID is in KVS
error resetting circle (%@) to offering: %@
Resetting circle to offering by request from client
Leaving circle by client request
leaveCircleWithAccount: Leaving circle by client request
no change to userKey - skipping gensign
we changed the circle? %@
start:[%s]
##### Can't update to a NULL circle ######
##### Can't replace circle - we don't care about it ######
Decided on action [%s] based on concordance state [%@] and [%s] circle.  My PeerID is %@
Leaving circle with peer %@
Key state: accountKey %@, previousAccountKey %@, old_circle_key %@
Leaving circle by newcircle state
Can't leave circle, but dumping identities
We are not in this circle, but we need to update account with it
Already concur with the new circle
Concurred with new circle
Failed to concurrence sign, error: %@
Not countersigning, not in new circle
Sending kSOSCCCircleOctagonKeysChangedNotification
Member of old circle but not of new circle (%d)
Purging my peer (ID: %@) for circle '%@'!!!
Rejected, Purging my applicant peer (ID: %@) for circle '%@'
Rejected, Reapplying (ID: %@) for circle '%@'
Fixed iCloud Identity in circle
Failed to fix broken icloud identity
%@, Accepting new circle
requesting readmission to new circle
Setting key_interests_need_updating to true in handleUpdateCircle
%@, Rejecting new circle, re-publishing old circle
%@, Rejecting: new circle Have no old circle - would reset
Pushing:[%s]
circleOps: Cannot fetch signing key for old %@: %@
circleOps: Cannot fetch encryption key for old %@: %@
circleOps: Cannot fetch signing key for new %@: %@
circleOps: Cannot fetch encryption key for new %@: %@
Setting key_interests_need_updating to true in ensureCircle
Error putting: %@
Error, Key-Value for CircleMessage was not CFString/CFData
Error handling circle message %@ (%@): %@
Publishing Cloud Parameters
Tried to publish nil Cloud Parameters
attribute list: %@
not going to rate limit, currently in initial sync
not in initial sync!
number of attributes to review: %lu
should send? : %@
peer is rate limited: %@
no message to send to peer: %@
SOSTransportSendPendingMessage: could not send message: %@
SOSTransportSendPendingMessage: sent pending message: %@ for access group: %@
accessGroup: %@, judged: %lu
setting a timer for next sync: %@
SOSPeerSetNextTimeToSend next time: %d
SOSPeerSetNextTimeToSend next time to sync: %llu
access group: %@ is being rate limited
no state for limiter for peer: %@
SOSEngineHandleCodedMessage called before signing in to new account
otr negotiation completed! clearing max retry counter
Failed to handle message from peer %@: %@
Failed to turn a data gram into an SOSMessage: %@
coder handled a negotiation message
coder handled a error message: %d (error: %@)
peerID: %@ current date: %@, stored date: %@
rtt: %d
peerID: %@ New OTR RTT: %d
Failed to load account: %@
Cannot inflate account object as root
Got error inflating account: %@
Got NULL creating account
Can't save account: %@
Failed to transform account into data, error: %@
Error handling updates: %@
Change block called with no peerInfo
Change block called while not in circle
Requesting Ensure Peer Registration.
Not requesting Ensure Peer Registration, since it's not needed
Had trouble removing: %@, error: %@
peer counts changed, posting kSOSCCCircleChangedNotification
CloudCircle RequestSyncWithPeersList
BEGIN [%lld]: SOSSignpostNameSOSCCRequestSyncWithPeersList  enableTelemetry=YES 
SOSSignpostNameSOSCCRequestSyncWithPeersList
 SOSSignpostNameSOSCCRequestSyncWithPeersList=%{public,signpost.telemetry:number1,name=SOSSignpostNameSOSCCRequestSyncWithPeersList}d 
END [%lld] %fs: SOSSignpostNameSOSCCRequestSyncWithPeersList  SOSSignpostNameSOSCCRequestSyncWithPeersList=%{public,signpost.telemetry:number1,name=SOSSignpostNameSOSCCRequestSyncWithPeersList}d 
Request Sync With: %@
Bad element, skipping: %@
Changed our peer's gestalt information.  This is not a circle change.
Failed request for account object
Bad SOSViewActionCode - %d
BEGIN [%lld]: SOSSignpostNameSOSCCViewSet  enableTelemetry=YES 
SOSSignpostNameSOSCCViewSet
 SOSSignpostNameSOSCCViewSet=%{public,signpost.telemetry:number1,name=SOSSignpostNameSOSCCViewSet}d 
END [%lld] %fs: SOSSignpostNameSOSCCViewSet  SOSSignpostNameSOSCCViewSet=%{public,signpost.telemetry:number1,name=SOSSignpostNameSOSCCViewSet}d 
Cannot enable visible keychain views due to profile restrictions
BEGIN [%lld]: SOSSignpostNameSyncTheLastDataToKVS  enableTelemetry=YES 
calling SOSCloudKeychainSynchronizeAndWait
SOSSignpostNameSyncTheLastDataToKVS
 SOSSignpostNameSyncTheLastDataToKVS=%{public,signpost.telemetry:number1,name=SOSSignpostNameSyncTheLastDataToKVS}d 
END [%lld] %fs: SOSSignpostNameSyncTheLastDataToKVS  SOSSignpostNameSyncTheLastDataToKVS=%{public,signpost.telemetry:number1,name=SOSSignpostNameSyncTheLastDataToKVS}d 
SOSCloudKeychainSynchronizeAndWait: %@
returned from call; in callback to SOSCloudKeychainSynchronizeAndWait: results: %@
Trying credentials and dsid (%@) for %@
BEGIN [%lld]: SOSSignpostNameSOSCCTryUserCredentials  enableTelemetry=YES 
SOSCCTryUserCredentials_Server: Trying again with EFRESH
SOSSignpostNameSOSCCTryUserCredentials
 SOSSignpostNameSOSCCTryUserCredentials=%{public,signpost.telemetry:number1,name=SOSSignpostNameSOSCCTryUserCredentials}d 
END [%lld] %fs: SOSSignpostNameSOSCCTryUserCredentials  SOSSignpostNameSOSCCTryUserCredentials=%{public,signpost.telemetry:number1,name=SOSSignpostNameSOSCCTryUserCredentials}d 
Failed with SOSAccountTryUserCredentials() %@
BEGIN [%lld]: SOSSignpostNameFlush  enableTelemetry=YES 
SOSSignpostNameFlush
 SOSSignpostNameFlush=%{public,signpost.telemetry:number1,name=SOSSignpostNameFlush}d 
END [%lld] %fs: SOSSignpostNameFlush  SOSSignpostNameFlush=%{public,signpost.telemetry:number1,name=SOSSignpostNameFlush}d 
BEGIN [%lld]: SOSSignpostNameSyncKVSAndWait  enableTelemetry=YES 
SOSSignpostNameSyncKVSAndWait
 SOSSignpostNameSyncKVSAndWait=%{public,signpost.telemetry:number1,name=SOSSignpostNameSyncKVSAndWait}d 
END [%lld] %fs: SOSSignpostNameSyncKVSAndWait  SOSSignpostNameSyncKVSAndWait=%{public,signpost.telemetry:number1,name=SOSSignpostNameSyncKVSAndWait}d 
Failed with SOSAccountTryUserCredentials() with initial known parameters %@
SOSCCTryUserCredentials_Server: No known parameters
Setting credentials and dsid (%@) for %@.  UID is %d
BEGIN [%lld]: SOSSignpostNameAssertUserCredentialsAndOptionalDSID  enableTelemetry=YES 
Complete credentials and dsid (%@) for %@: %d %@
SOSSignpostNameAssertUserCredentialsAndOptionalDSID
 SOSSignpostNameAssertUserCredentialsAndOptionalDSID=%{public,signpost.telemetry:number1,name=SOSSignpostNameAssertUserCredentialsAndOptionalDSID}d 
END [%lld] %fs: SOSSignpostNameAssertUserCredentialsAndOptionalDSID  SOSSignpostNameAssertUserCredentialsAndOptionalDSID=%{public,signpost.telemetry:number1,name=SOSSignpostNameAssertUserCredentialsAndOptionalDSID}d 
BEGIN [%lld]: SOSSignpostNameSOSCCCanAuthenticate  enableTelemetry=YES 
SOSSignpostNameSOSCCCanAuthenticate
 SOSSignpostNameSOSCCCanAuthenticate=%{public,signpost.telemetry:number1,name=SOSSignpostNameSOSCCCanAuthenticate}d 
END [%lld] %fs: SOSSignpostNameSOSCCCanAuthenticate  SOSSignpostNameSOSCCCanAuthenticate=%{public,signpost.telemetry:number1,name=SOSSignpostNameSOSCCCanAuthenticate}d 
BEGIN [%lld]: SOSSignpostNameSOSCCRequestToJoinCircle  enableTelemetry=YES 
SOSSignpostNameSOSCCRequestToJoinCircle
 SOSSignpostNameSOSCCRequestToJoinCircle=%{public,signpost.telemetry:number1,name=SOSSignpostNameSOSCCRequestToJoinCircle}d 
END [%lld] %fs: SOSSignpostNameSOSCCRequestToJoinCircle  SOSSignpostNameSOSCCRequestToJoinCircle=%{public,signpost.telemetry:number1,name=SOSSignpostNameSOSCCRequestToJoinCircle}d 
Cannot have visible keychain views due to profile restrictions
BEGIN [%lld]: SOSSignpostNameSOSCCRequestToJoinCircleAfterRestore  enableTelemetry=YES 
SOSSignpostNameSOSCCRequestToJoinCircleAfterRestore
 SOSSignpostNameSOSCCRequestToJoinCircleAfterRestore=%{public,signpost.telemetry:number1,name=SOSSignpostNameSOSCCRequestToJoinCircleAfterRestore}d 
END [%lld] %fs: SOSSignpostNameSOSCCRequestToJoinCircleAfterRestore  SOSSignpostNameSOSCCRequestToJoinCircleAfterRestore=%{public,signpost.telemetry:number1,name=SOSSignpostNameSOSCCRequestToJoinCircleAfterRestore}d 
ensure peer registration error: %@
BEGIN [%lld]: SOSSignpostNameSOSCCResetToOffering  enableTelemetry=YES 
SOSSignpostNameSOSCCResetToOffering
 SOSSignpostNameSOSCCResetToOffering=%{public,signpost.telemetry:number1,name=SOSSignpostNameSOSCCResetToOffering}d 
END [%lld] %fs: SOSSignpostNameSOSCCResetToOffering  SOSSignpostNameSOSCCResetToOffering=%{public,signpost.telemetry:number1,name=SOSSignpostNameSOSCCResetToOffering}d 
BEGIN [%lld]: SOSSignpostNameSOSCCResetToEmpty  enableTelemetry=YES 
SOSSignpostNameSOSCCResetToEmpty
 SOSSignpostNameSOSCCResetToEmpty=%{public,signpost.telemetry:number1,name=SOSSignpostNameSOSCCResetToEmpty}d 
END [%lld] %fs: SOSSignpostNameSOSCCResetToEmpty  SOSSignpostNameSOSCCResetToEmpty=%{public,signpost.telemetry:number1,name=SOSSignpostNameSOSCCResetToEmpty}d 
BEGIN [%lld]: SOSSignpostNameSOSCCRemoveThisDeviceFromCircle  enableTelemetry=YES 
SOSSignpostNameSOSCCRemoveThisDeviceFromCircle
 SOSSignpostNameSOSCCRemoveThisDeviceFromCircle=%{public,signpost.telemetry:number1,name=SOSSignpostNameSOSCCRemoveThisDeviceFromCircle}d 
END [%lld] %fs: SOSSignpostNameSOSCCRemoveThisDeviceFromCircle  SOSSignpostNameSOSCCRemoveThisDeviceFromCircle=%{public,signpost.telemetry:number1,name=SOSSignpostNameSOSCCRemoveThisDeviceFromCircle}d 
BEGIN [%lld]: SOSSignpostNameSOSCCRemovePeersFromCircle  enableTelemetry=YES 
SOSSignpostNameSOSCCRemovePeersFromCircle
 SOSSignpostNameSOSCCRemovePeersFromCircle=%{public,signpost.telemetry:number1,name=SOSSignpostNameSOSCCRemovePeersFromCircle}d 
END [%lld] %fs: SOSSignpostNameSOSCCRemovePeersFromCircle  SOSSignpostNameSOSCCRemovePeersFromCircle=%{public,signpost.telemetry:number1,name=SOSSignpostNameSOSCCRemovePeersFromCircle}d 
circleOps: error delivering account-sign-in notification: %@
Signed into account!
BEGIN [%lld]: SOSSignpostNameSOSCCLoggedOutOfAccount  enableTelemetry=YES 
SOSSignpostNameSOSCCLoggedOutOfAccount
 SOSSignpostNameSOSCCLoggedOutOfAccount=%{public,signpost.telemetry:number1,name=SOSSignpostNameSOSCCLoggedOutOfAccount}d 
END [%lld] %fs: SOSSignpostNameSOSCCLoggedOutOfAccount  SOSSignpostNameSOSCCLoggedOutOfAccount=%{public,signpost.telemetry:number1,name=SOSSignpostNameSOSCCLoggedOutOfAccount}d 
Signed out of account!
BEGIN [%lld]: SOSSignpostNameSOSCCCopyApplicantPeerInfo  enableTelemetry=YES 
SOSSignpostNameSOSCCCopyApplicantPeerInfo
 SOSSignpostNameSOSCCCopyApplicantPeerInfo=%{public,signpost.telemetry:number1,name=SOSSignpostNameSOSCCCopyApplicantPeerInfo}d 
END [%lld] %fs: SOSSignpostNameSOSCCCopyApplicantPeerInfo  SOSSignpostNameSOSCCCopyApplicantPeerInfo=%{public,signpost.telemetry:number1,name=SOSSignpostNameSOSCCCopyApplicantPeerInfo}d 
BEGIN [%lld]: SOSSignpostNameSOSCCCopyValidPeerPeerInfo  enableTelemetry=YES 
SOSSignpostNameSOSCCCopyValidPeerPeerInfo
 SOSSignpostNameSOSCCCopyValidPeerPeerInfo=%{public,signpost.telemetry:number1,name=SOSSignpostNameSOSCCCopyValidPeerPeerInfo}d 
END [%lld] %fs: SOSSignpostNameSOSCCCopyValidPeerPeerInfo  SOSSignpostNameSOSCCCopyValidPeerPeerInfo=%{public,signpost.telemetry:number1,name=SOSSignpostNameSOSCCCopyValidPeerPeerInfo}d 
BEGIN [%lld]: SOSSignpostNameSOSCCValidateUserPublic  enableTelemetry=YES 
SOSSignpostNameSOSCCValidateUserPublic
 SOSSignpostNameSOSCCValidateUserPublic=%{public,signpost.telemetry:number1,name=SOSSignpostNameSOSCCValidateUserPublic}d 
END [%lld] %fs: SOSSignpostNameSOSCCValidateUserPublic  SOSSignpostNameSOSCCValidateUserPublic=%{public,signpost.telemetry:number1,name=SOSSignpostNameSOSCCValidateUserPublic}d 
BEGIN [%lld]: SOSSignpostNameSOSCCCopyViewUnawarePeerInfo  enableTelemetry=YES 
SOSSignpostNameSOSCCCopyViewUnawarePeerInfo
 SOSSignpostNameSOSCCCopyViewUnawarePeerInfo=%{public,signpost.telemetry:number1,name=SOSSignpostNameSOSCCCopyViewUnawarePeerInfo}d 
END [%lld] %fs: SOSSignpostNameSOSCCCopyViewUnawarePeerInfo  SOSSignpostNameSOSCCCopyViewUnawarePeerInfo=%{public,signpost.telemetry:number1,name=SOSSignpostNameSOSCCCopyViewUnawarePeerInfo}d 
BEGIN [%lld]: SOSSignpostNameSOSCCWaitForInitialSync  enableTelemetry=YES 
Wait for initial sync start!
setting initial sync timeout to 5 minutes
setting initial sync timeout to %llu seconds
Finished!: %d
SOSSignpostNameSOSCCWaitForInitialSync
 SOSSignpostNameSOSCCWaitForInitialSync=%{public,signpost.telemetry:number1,name=SOSSignpostNameSOSCCWaitForInitialSync}d 
END [%lld] %fs: SOSSignpostNameSOSCCWaitForInitialSync  SOSSignpostNameSOSCCWaitForInitialSync=%{public,signpost.telemetry:number1,name=SOSSignpostNameSOSCCWaitForInitialSync}d 
BEGIN [%lld]: SOSSignpostNameSOSCCAcceptApplicants  enableTelemetry=YES 
SOSSignpostNameSOSCCAcceptApplicants
 SOSSignpostNameSOSCCAcceptApplicants=%{public,signpost.telemetry:number1,name=SOSSignpostNameSOSCCAcceptApplicants}d 
END [%lld] %fs: SOSSignpostNameSOSCCAcceptApplicants  SOSSignpostNameSOSCCAcceptApplicants=%{public,signpost.telemetry:number1,name=SOSSignpostNameSOSCCAcceptApplicants}d 
BEGIN [%lld]: SOSSignpostNameSOSCCCopyConcurringPeerPeerInfo  enableTelemetry=YES 
SOSSignpostNameSOSCCCopyConcurringPeerPeerInfo
 SOSSignpostNameSOSCCCopyConcurringPeerPeerInfo=%{public,signpost.telemetry:number1,name=SOSSignpostNameSOSCCCopyConcurringPeerPeerInfo}d 
END [%lld] %fs: SOSSignpostNameSOSCCCopyConcurringPeerPeerInfo  SOSSignpostNameSOSCCCopyConcurringPeerPeerInfo=%{public,signpost.telemetry:number1,name=SOSSignpostNameSOSCCCopyConcurringPeerPeerInfo}d 
BEGIN [%lld]: SOSSignpostNameSOSCCCopyMyPeerInfo  enableTelemetry=YES 
SOSSignpostNameSOSCCCopyMyPeerInfo
 SOSSignpostNameSOSCCCopyMyPeerInfo=%{public,signpost.telemetry:number1,name=SOSSignpostNameSOSCCCopyMyPeerInfo}d 
END [%lld] %fs: SOSSignpostNameSOSCCCopyMyPeerInfo  SOSSignpostNameSOSCCCopyMyPeerInfo=%{public,signpost.telemetry:number1,name=SOSSignpostNameSOSCCCopyMyPeerInfo}d 
BEGIN [%lld]: SOSSignpostNameSOSCCSetNewPublicBackupKey  enableTelemetry=YES 
SOSCCSetNewPublicBackupKey_Server acquiring account lock
SOSSignpostNameSOSCCSetNewPublicBackupKey
 SOSSignpostNameSOSCCSetNewPublicBackupKey=%{public,signpost.telemetry:number1,name=SOSSignpostNameSOSCCSetNewPublicBackupKey}d 
END [%lld] %fs: SOSSignpostNameSOSCCSetNewPublicBackupKey  SOSSignpostNameSOSCCSetNewPublicBackupKey=%{public,signpost.telemetry:number1,name=SOSSignpostNameSOSCCSetNewPublicBackupKey}d 
SOSCCSetNewPublicBackupKey_Server acquired account lock
SOSCCSetNewPublicBackupKey_Server, new public backup is set in account
SOSCCSetNewPublicBackupKey_Server, new public backup is set and pushed
SOSCCSetNewPublicBackupKey_Server, could not set new public backup
BEGIN [%lld]: SOSSignpostNameSOSCCRegisterSingleRecoverySecret  enableTelemetry=YES 
SOSSignpostNameSOSCCRegisterSingleRecoverySecret
 SOSSignpostNameSOSCCRegisterSingleRecoverySecret=%{public,signpost.telemetry:number1,name=SOSSignpostNameSOSCCRegisterSingleRecoverySecret}d 
END [%lld] %fs: SOSSignpostNameSOSCCRegisterSingleRecoverySecret  SOSSignpostNameSOSCCRegisterSingleRecoverySecret=%{public,signpost.telemetry:number1,name=SOSSignpostNameSOSCCRegisterSingleRecoverySecret}d 
Request for registering peers
BEGIN [%lld]: SOSSignpostNameSOSCCProcessEnsurePeerRegistration  enableTelemetry=YES 
SOSSignpostNameSOSCCProcessEnsurePeerRegistration
 SOSSignpostNameSOSCCProcessEnsurePeerRegistration=%{public,signpost.telemetry:number1,name=SOSSignpostNameSOSCCProcessEnsurePeerRegistration}d 
END [%lld] %fs: SOSSignpostNameSOSCCProcessEnsurePeerRegistration  SOSSignpostNameSOSCCProcessEnsurePeerRegistration=%{public,signpost.telemetry:number1,name=SOSSignpostNameSOSCCProcessEnsurePeerRegistration}d 
BEGIN [%lld]: SOSSignpostNameSOSCCProcessSyncWithPeers  enableTelemetry=YES 
SOSSignpostNameSOSCCProcessSyncWithPeers
 SOSSignpostNameSOSCCProcessSyncWithPeers=%{public,signpost.telemetry:number1,name=SOSSignpostNameSOSCCProcessSyncWithPeers}d 
END [%lld] %fs: SOSSignpostNameSOSCCProcessSyncWithPeers  SOSSignpostNameSOSCCProcessSyncWithPeers=%{public,signpost.telemetry:number1,name=SOSSignpostNameSOSCCProcessSyncWithPeers}d 
BEGIN [%lld]: SOSSignpostNameSOSCCProcessSyncWithAllPeers  enableTelemetry=YES 
SOSAccountSyncWithAllKVSPeers failed because device is locked; letting CloudKeychainProxy know
Unexpected error: %@
SOSSignpostNameSOSCCProcessSyncWithAllPeers
 SOSSignpostNameSOSCCProcessSyncWithAllPeers=%{public,signpost.telemetry:number1,name=SOSSignpostNameSOSCCProcessSyncWithAllPeers}d 
END [%lld] %fs: SOSSignpostNameSOSCCProcessSyncWithAllPeers  SOSSignpostNameSOSCCProcessSyncWithAllPeers=%{public,signpost.telemetry:number1,name=SOSSignpostNameSOSCCProcessSyncWithAllPeers}d 
CloudCircle SOSCCRequestSyncWithBackupPeerList
BEGIN [%lld]: SOSSignpostNameSOSCCRequestSyncWithBackupPeerList  enableTelemetry=YES 
SOSSignpostNameSOSCCRequestSyncWithBackupPeerList
 SOSSignpostNameSOSCCRequestSyncWithBackupPeerList=%{public,signpost.telemetry:number1,name=SOSSignpostNameSOSCCRequestSyncWithBackupPeerList}d 
END [%lld] %fs: SOSSignpostNameSOSCCRequestSyncWithBackupPeerList  SOSSignpostNameSOSCCRequestSyncWithBackupPeerList=%{public,signpost.telemetry:number1,name=SOSSignpostNameSOSCCRequestSyncWithBackupPeerList}d 
Request backup sync With: %@
CloudCircle EnsurePeerRegistration
BEGIN [%lld]: SOSSignpostNameSOSCCEnsurePeerRegistration  enableTelemetry=YES 
SOSSignpostNameSOSCCEnsurePeerRegistration
 SOSSignpostNameSOSCCEnsurePeerRegistration=%{public,signpost.telemetry:number1,name=SOSSignpostNameSOSCCEnsurePeerRegistration}d 
END [%lld] %fs: SOSSignpostNameSOSCCEnsurePeerRegistration  SOSSignpostNameSOSCCEnsurePeerRegistration=%{public,signpost.telemetry:number1,name=SOSSignpostNameSOSCCEnsurePeerRegistration}d 
BEGIN [%lld]: SOSSignpostNameSOSCCHandleUpdateMessage  enableTelemetry=YES 
SOSSignpostNameSOSCCHandleUpdateMessage
 SOSSignpostNameSOSCCHandleUpdateMessage=%{public,signpost.telemetry:number1,name=SOSSignpostNameSOSCCHandleUpdateMessage}d 
END [%lld] %fs: SOSSignpostNameSOSCCHandleUpdateMessage  SOSSignpostNameSOSCCHandleUpdateMessage=%{public,signpost.telemetry:number1,name=SOSSignpostNameSOSCCHandleUpdateMessage}d 
BEGIN [%lld]: SOSSignpostNameSOSCCCopyApplication  enableTelemetry=YES 
SOSSignpostNameSOSCCCopyApplication
 SOSSignpostNameSOSCCCopyApplication=%{public,signpost.telemetry:number1,name=SOSSignpostNameSOSCCCopyApplication}d 
END [%lld] %fs: SOSSignpostNameSOSCCCopyApplication  SOSSignpostNameSOSCCCopyApplication=%{public,signpost.telemetry:number1,name=SOSSignpostNameSOSCCCopyApplication}d 
BEGIN [%lld]: SOSSignpostNameSOSCCCopyCircleJoiningBlob  enableTelemetry=YES 
SOSSignpostNameSOSCCCopyCircleJoiningBlob
 SOSSignpostNameSOSCCCopyCircleJoiningBlob=%{public,signpost.telemetry:number1,name=SOSSignpostNameSOSCCCopyCircleJoiningBlob}d 
END [%lld] %fs: SOSSignpostNameSOSCCCopyCircleJoiningBlob  SOSSignpostNameSOSCCCopyCircleJoiningBlob=%{public,signpost.telemetry:number1,name=SOSSignpostNameSOSCCCopyCircleJoiningBlob}d 
BEGIN [%lld]: SOSSignpostNameSOSCCCopyInitialSyncData  enableTelemetry=YES 
SOSSignpostNameSOSCCCopyInitialSyncData
 SOSSignpostNameSOSCCCopyInitialSyncData=%{public,signpost.telemetry:number1,name=SOSSignpostNameSOSCCCopyInitialSyncData}d 
END [%lld] %fs: SOSSignpostNameSOSCCCopyInitialSyncData  SOSSignpostNameSOSCCCopyInitialSyncData=%{public,signpost.telemetry:number1,name=SOSSignpostNameSOSCCCopyInitialSyncData}d 
 enableTelemetry=YES 
BEGIN [%lld]: SOSSignpostNameSOSCCJoinWithCircleJoiningBlob  enableTelemetry=YES 
SOSSignpostNameSOSCCJoinWithCircleJoiningBlob
 SOSSignpostNameSOSCCJoinWithCircleJoiningBlob=%{public,signpost.telemetry:number1,name=SOSSignpostNameSOSCCJoinWithCircleJoiningBlob}d 
END [%lld] %fs: SOSSignpostNameSOSCCJoinWithCircleJoiningBlob  SOSSignpostNameSOSCCJoinWithCircleJoiningBlob=%{public,signpost.telemetry:number1,name=SOSSignpostNameSOSCCJoinWithCircleJoiningBlob}d 
BEGIN [%lld]: SOSSignpostNameSOSCCPeersHaveViewsEnabled  enableTelemetry=YES 
SOSSignpostNameSOSCCPeersHaveViewsEnabled
 SOSSignpostNameSOSCCPeersHaveViewsEnabled=%{public,signpost.telemetry:number1,name=SOSSignpostNameSOSCCPeersHaveViewsEnabled}d 
END [%lld] %fs: SOSSignpostNameSOSCCPeersHaveViewsEnabled  SOSSignpostNameSOSCCPeersHaveViewsEnabled=%{public,signpost.telemetry:number1,name=SOSSignpostNameSOSCCPeersHaveViewsEnabled}d 
BEGIN [%lld]: SOSSignpostNameSOSCCRegisterRecoveryPublicKey  enableTelemetry=YES 
SOSSignpostNameSOSCCRegisterRecoveryPublicKey
 SOSSignpostNameSOSCCRegisterRecoveryPublicKey=%{public,signpost.telemetry:number1,name=SOSSignpostNameSOSCCRegisterRecoveryPublicKey}d 
END [%lld] %fs: SOSSignpostNameSOSCCRegisterRecoveryPublicKey  SOSSignpostNameSOSCCRegisterRecoveryPublicKey=%{public,signpost.telemetry:number1,name=SOSSignpostNameSOSCCRegisterRecoveryPublicKey}d 
BEGIN [%lld]: SOSSignpostNameSOSCCCopyRecoveryPublicKey  enableTelemetry=YES 
SOSSignpostNameSOSCCCopyRecoveryPublicKey
 SOSSignpostNameSOSCCCopyRecoveryPublicKey=%{public,signpost.telemetry:number1,name=SOSSignpostNameSOSCCCopyRecoveryPublicKey}d 
END [%lld] %fs: SOSSignpostNameSOSCCCopyRecoveryPublicKey  SOSSignpostNameSOSCCCopyRecoveryPublicKey=%{public,signpost.telemetry:number1,name=SOSSignpostNameSOSCCCopyRecoveryPublicKey}d 
BEGIN [%lld]: SOSSignpostNameSOSCCMessageFromPeerIsPending  enableTelemetry=YES 
SOSSignpostNameSOSCCMessageFromPeerIsPending
 SOSSignpostNameSOSCCMessageFromPeerIsPending=%{public,signpost.telemetry:number1,name=SOSSignpostNameSOSCCMessageFromPeerIsPending}d 
END [%lld] %fs: SOSSignpostNameSOSCCMessageFromPeerIsPending  SOSSignpostNameSOSCCMessageFromPeerIsPending=%{public,signpost.telemetry:number1,name=SOSSignpostNameSOSCCMessageFromPeerIsPending}d 
BEGIN [%lld]: SOSSignpostNameSOSCCSendToPeerIsPending  enableTelemetry=YES 
SOSSignpostNameSOSCCSendToPeerIsPending
 SOSSignpostNameSOSCCSendToPeerIsPending=%{public,signpost.telemetry:number1,name=SOSSignpostNameSOSCCSendToPeerIsPending}d 
END [%lld] %fs: SOSSignpostNameSOSCCSendToPeerIsPending  SOSSignpostNameSOSCCSendToPeerIsPending=%{public,signpost.telemetry:number1,name=SOSSignpostNameSOSCCSendToPeerIsPending}d 
error resetting otr negotation: %@
error sending next message: %@
device does not have a peer
SOSCCPerformWithAllOctagonKeys signing key error: %@
SOSCCPerformWithAllOctagonKeys encryption key error: %@
Ensuring key agrp ('%@' from '%@') status: %d
octagon: failed to save Octagon keys to the keychain: %@
octagon: Failed to set Octagon Keys in peerInfo: %@
No peer info to update?
Success! Upated Octagon keys in SOS!
octagon: could not save signing key: %@
octagon: could not save encryption key: %@
octagon-preload-keys: failed to save Octagon keys to the keychain: %@
No SOSAccount to update?
Success! Octagon Keys Preloaded!
SOSCCAccountTriggerSyncWithBackupPeer_server: %@
Could not create version number
Could not create ring identifier
SOSRingEnsureRingConsistency requires ring membership and generation count consistency check
sos: Client pid: %d doesn't have entitlement: %@
sos: SOS have not launched yet, come later, pid: %d
%@ KVSTransport handle message failed: %@
Couldn't purge persistent keys for %@ [%@]
FullPeerInfo has no matching private key - resetting FPI and attendant keys
Failed to copy peer public key for account object
No full_key: %@:
circleChange: Error fetching Octagon signing key: %@
Already have Octagon signing key
circleChange: Error creating Octagon signing key: %@
circleChange: Error upgrading Octagon signing key: %@
Successfully created new Octagon signing key
error is too scary, not creating new Octagon signing key: %@
circleChange: Error fetching Octagon encryption key: %@
Already have Octagon encryption key
circleChange: Error creating Octagon encryption key: %@
circleChange: Error upgrading Octagon encryption key: %@
Successfully created new Octagon encryption key
error is too scary, not creating new Octagon encryption key: %@
circleChange: No extant octagon signing key
circleChange: No extant octagon encryption key
@"NSObject<OS_dispatch_source>"
@16@0:8
Q24@0:8Q16
v16@0:8
B32@0:8@16^@24
B16@0:8
B24@0:8^{rusage_info_v5=[16C]QQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQ}16
@"NSObject<OS_os_transaction>"
@24@0:8@16
v24@0:8@16
v40@0:8@16@24@?32
v80@0:8@16@24@32@40@48@56@64@?72
v52@0:8@16@24@32B40@?44
v32@0:8@16@?24
v28@0:8B16@?20
v24@0:8@?16
{SecurityClient="task"^{__SecTask}"accessGroups"^{__CFArray}"allowSystemKeychain"B"allowSyncBubbleKeychain"B"isNetworkExtension"B"canAccessNetworkExtensionAccessGroups"B"uid"I"musr"^{__CFData}"inMultiUser"B"isAppClip"B"applicationIdentifier"^{__CFString}}
@"NSXPCConnection"
@24@0:8^{SecurityClient=^{__SecTask}^{__CFArray}BBBBI^{__CFData}BB^{__CFString}}16
B24@0:8@16
@"NSMutableDictionary"
@32@0:8^{SecurityClient=^{__SecTask}^{__CFArray}BBBBI^{__CFData}BB^{__CFString}}16@24
@"NSXPCListener"
B32@0:8@"NSXPCListener"16@"NSXPCConnection"24
B32@0:8@16@24
#16@0:8
@24@0:8:16
@32@0:8:16@24
@40@0:8:16@24@32
B24@0:8#16
B24@0:8@"Protocol"16
B24@0:8:16
Vv16@0:8
Q16@0:8
^{_NSZone=}16@0:8
@"NSString"16@0:8
v40@0:8@"NSDictionary"16@"<SecuritydXPCCallbackProtocol>"24@?<v@?@"NSDictionary"@"NSArray"@"NSError">32
v80@0:8@"NSData"16@"NSData"24@"NSString"32@"NSString"40@"NSString"48@"NSData"56@"NSData"64@?<v@?@"NSError">72
v52@0:8@"NSString"16@"NSString"24@"NSString"32B40@?<v@?@"NSData"@"NSError">44
v40@0:8@"NSString"16@"NSString"24@?<v@?@"NSArray"@"NSError">32
v32@0:8@"NSData"16@?<v@?B@"NSError">24
v28@0:8B16@?<v@?@"NSDictionary"@"NSError">20
v32@0:8@"NSString"16@?<v@?i>24
v24@0:8@?<v@?i@"NSError">16
@"NSData"
@24@0:8^{_NSZone=}16
I16@0:8
v20@0:8I16
B20@0:8i16
v20@0:8i16
@"_SFAESKey"
@40@0:8@16@24^@32
v32@0:8@16@24
v64@0:8@16@24@32@40@48@56
@32@0:8Q16@24
@32@0:8Q16@?24
@"NSString"
@"NSObject<OS_dispatch_queue>"
@40@0:8@16@24@32
@"<NSXPCProxyCreating>"
v24@0:8@?<v@?>16
v40@0:8@"NSString"16@"NSString"24@?<v@?@"NSDictionary"@"NSError">32
v40@0:8@"NSString"16@"NSString"24@?<v@?@"NSError">32
v48@0:8@"NSString"16@"NSString"24@"NSSet"32@?<v@?@"NSError">40
v40@0:8@"NSString"16@"NSString"24@?<v@?@"TrustedPeersHelperEgoPeerStatus"@"NSError">32
v48@0:8@"NSString"16@"NSString"24q32@?<v@?@"NSError">40
v52@0:8@"NSString"16@"NSString"24@"NSSet"32B40@?<v@?B@"NSError">44
v48@0:8@"NSString"16@"NSString"24@"NSArray"32@?<v@?@"NSError">40
v40@0:8@"NSString"16@"NSString"24@?<v@?@"NSSet"@"NSError">32
v40@0:8@"NSString"16@"NSString"24@?<v@?Q@"NSError">32
v148@0:8@"NSString"16@"NSString"24Q32@"NSString"40@"NSString"48@"NSString"56@"NSString"64@"NSString"72@"NSString"80@"NSString"88@"TPPolicyVersion"96@"NSDictionary"104i112@"TPPBSecureElementIdentity"116@"NSData"124@"NSData"132@?<v@?@"NSString"@"NSData"@"NSData"@"NSData"@"NSData"@"TPSyncingPolicy"@"NSError">140
v156@0:8@"NSString"16@"NSString"24Q32@"NSString"40@"NSString"48@"NSString"56@"NSString"64@"NSString"72@"NSString"80@"NSString"88@"TPPolicyVersion"96@"NSDictionary"104i112@"TPPBSecureElementIdentity"116@"NSData"124@"NSData"132@"TrustedPeersHelperCustodianRecoveryKey"140@?<v@?@"NSString"@"NSData"@"NSData"@"NSData"@"NSData"@"TPSyncingPolicy"@"NSString"@"NSArray"@"NSError">148
v64@0:8@"NSString"16@"NSString"24@"NSArray"32@"NSArray"40@"NSArray"48@?<v@?@"NSString"@"NSArray"@"TPSyncingPolicy"@"NSError">56
v88@0:8@"NSString"16@"NSString"24@"NSString"32@"NSData"40@"NSData"48@"NSData"56@"NSData"64@"NSArray"72@?<v@?@"NSData"@"NSData"@"NSError">80
v48@0:8@"NSString"16@"NSString"24@"NSString"32@?<v@?@"NSString"@"TPSyncingPolicy"B@"NSError">40
v72@0:8@"NSString"16@"NSString"24@"NSString"32@"NSData"40@"NSString"48@"NSArray"56@?<v@?@"NSData"@"NSData"qq@"NSArray"@"NSError">64
v56@0:8@"NSString"16@"NSString"24@"NSString"32@"NSString"40@?<v@?@"NSString"@"TPSyncingPolicy"@"NSError">48
v48@0:8@"NSString"16@"NSString"24@"TrustedPeersHelperCustodianRecoveryKey"32@?<v@?@"NSString"@"TPSyncingPolicy"@"NSError">40
v64@0:8@"NSString"16@"NSString"24@"NSString"32@"NSString"40@"NSArray"48@?<v@?@"NSData"@"NSData"@"NSArray"@"NSError">56
v56@0:8@"NSString"16@"NSString"24@"TrustedPeersHelperCustodianRecoveryKey"32@"NSArray"40@?<v@?@"NSArray"@"NSError">48
v56@0:8@"NSString"16@"NSString"24@"TrustedPeersHelperCustodianRecoveryKey"32@"NSArray"40@?<v@?@"NSData"@"NSData"@"NSArray"@"NSError">48
v80@0:8@"NSString"16@"NSString"24@"NSData"32@"NSData"40@"NSArray"48@"NSArray"56@"NSArray"64@?<v@?@"NSString"@"NSArray"@"TPSyncingPolicy"@"NSError">72
v48@0:8@"NSString"16@"NSString"24@"NSArray"32@?<v@?B@"NSError">40
v100@0:8@"NSString"16@"NSString"24B32@"NSString"36@"NSString"44@"NSString"52@"NSNumber"60@"NSDictionary"68@"NSNumber"76@"TrustedPeersHelperIntendedTPPBSecureElementIdentity"84@?<v@?@"TrustedPeersHelperPeerState"@"TPSyncingPolicy"@"NSError">92
v48@0:8@"NSString"16@"NSString"24@"NSArray"32@?<v@?@"TrustedPeersHelperPeerState"@"NSError">40
v56@0:8@"NSString"16@"NSString"24@"NSArray"32@"NSArray"40@?<v@?@"NSArray"@"NSError">48
v40@0:8@"NSString"16@"NSString"24@?<v@?@"NSArray"@"NSArray"@"NSError">32
v44@0:8@"NSString"16@"NSString"24B32@?<v@?@"NSArray"@"NSError">36
v40@0:8@"NSString"16@"NSString"24@?<v@?@"NSData"@"NSString"@"NSData"@"NSError">32
v48@0:8@"NSString"16@"NSString"24@"NSSet"32@?<v@?@"NSDictionary"@"NSError">40
v48@0:8@"NSString"16@"NSString"24@"NSString"32@?<v@?@"NSArray"@"NSError">40
v52@0:8@"NSString"16@"NSString"24@"NSString"32B40@?<v@?@"TPSyncingPolicy"i@"NSError">44
v40@0:8@"NSString"16@"NSString"24@?<v@?@"TrustedPeersHelperPeerState"@"NSArray"@"NSError">32
v64@0:8@"NSString"16@"NSString"24@"NSString"32@"NSString"40@"NSArray"48@?<v@?@"NSArray"@"NSError">56
v72@0:8@"NSString"16@"NSString"24@"NSString"32@"NSString"40@"NSArray"48@"NSUUID"56@?<v@?@"NSArray"@"TrustedPeersHelperCustodianRecoveryKey"@"NSError">64
v48@0:8@"NSString"16@"NSString"24@"NSUUID"32@?<v@?@"NSError">40
v56@0:8@"NSString"16@"NSString"24@"NSString"32@"NSString"40@?<v@?@"NSError">48
v44@0:8@"NSString"16@"NSString"24B32@?<v@?BBBB@"NSError">36
v40@0:8@"NSString"16@"NSString"24@?<v@?@"NSData"@"NSError">32
v48@0:8@16@24@32@?40
v48@0:8@16@24q32@?40
v148@0:8@16@24Q32@40@48@56@64@72@80@88@96@104i112@116@124@132@?140
v156@0:8@16@24Q32@40@48@56@64@72@80@88@96@104i112@116@124@132@140@?148
v64@0:8@16@24@32@40@48@?56
v88@0:8@16@24@32@40@48@56@64@72@?80
v72@0:8@16@24@32@40@48@56@?64
v56@0:8@16@24@32@40@?48
v100@0:8@16@24B32@36@44@52@60@68@76@84@?92
v44@0:8@16@24B32@?36
@"NSString<OctagonStateString>"
@"OTOperationDependencies"
@"NSString<OctagonStateString>"16@0:8
v24@0:8@"NSString<OctagonStateString>"16
@52@0:8@16i24@28@36@44
i16@0:8
@"NSMutableArray"
{?="epoch"b1"lastHealthCheckup"b1"attemptedJoin"b1"cdpState"b1"icloudAccountState"b1"trustState"b1"fetchedChangesOnOSSupportingCustodian"b1"isInheritedAccount"b1"warmedEscrowCache"b1"warnedTooManyPeers"b1}
v20@0:8B16
@20@0:8i16
i24@0:8@16
v24@0:8q16
v24@0:8Q16
@24@0:8Q16
q16@0:8
@"NSArray"
@"NSSet"
@"CKKSKeychainView"
@28@0:8@16B24
@32@0:8@16@24
@"NSOperation"
@40@0:8@16q24@32
@48@0:8@16q24@32@40
@32@0:8Q16Q24
@"NSDictionary"
B24@0:8^@16
B32@0:8^{__OpaqueSecDbConnection=}16^@24
B48@0:8@16@24^{__OpaqueSecDbConnection=}32^@40
v40@0:8^{sqlite3_stmt=}16@24^^{__CFError}32
B80@0:8@16@24@32@40@48q56@?64^@72
B56@0:8@16@24@32@40@?48
B24@0:8@?16
@32@0:8@16^@24
@24@0:8^@16
@32@0:8Q16^@24
@40@0:8Q16@24^@32
@48@0:8Q16@24@32^@40
@"NSDate"
v24@0:8@"NSCoder"16
@24@0:8@"NSCoder"16
i20@0:8i16
@36@0:8@16i24@28
i40@0:8@16@24^@32
@"OctagonStateMachine"
@"CKKSLockStateTracker"
@"CKKSResultOperation<OctagonStateTransitionOperationProtocol>"40@0:8@"NSString<OctagonStateString>"16@"OctagonFlags"24@"<OctagonStateOnqueuePendingFlagHandler>"32
@"CKKSListenerCollection"
^{__SCDynamicStore=}
v24@0:8@"<OTDeviceInformationNameUpdateListener>"16
^{__SCDynamicStore=}16@0:8
v24@0:8^{__SCDynamicStore=}16
B72@0:8i16i20@24^i32@40r^v48Q56^@64
@"CKKSCondition"
@"CKKSNearFutureScheduler"
@"CKAccountInfo"
@"NSError"
@"SOSAccountStatus"
@"OTCliqueStatusWrapper"
@"NSMapTable"
@"CKContainer"
@"OTCliqueStatusWrapper"16@0:8
@"NSObject<OS_dispatch_semaphore>"24@0:8@"<CKKSCloudKitAccountStateListener>"16
B24@0:8Q16
v24@0:8@"NSString"16
@32@0:8@16#24
v48@0:8@16@24@32@40
@24@0:8q16
@28@0:8i16@20
@"EscrowRequestController"
B32@0:8@"NSString"16^@24
@"NSDictionary"24@0:8^@16
@"<SecEscrowRequestable>"24@0:8^@16
v32@0:8@"NSString"16@?<v@?@"NSError">24
v40@0:8@"NSString"16@"NSData"24@?<v@?@"NSError">32
v32@0:8@"NSString"16@?<v@?@"NSData"@"NSError">24
v24@0:8@?<v@?@"NSString"@"NSError">16
v24@0:8@?<v@?@"NSDictionary"@"NSError">16
v24@0:8@?<v@?@"NSError">16
v24@0:8@?<v@?Q@"NSError">16
@"_SFAuthenticatedCiphertext"
^{aks_ref_key_s=}
@24@0:8i16i20
@28@0:8@"NSData"16i24
@"NSData"24@0:8@"_SFAESKey"16
@"_SFAESKey"24@0:8@"NSData"16
@"NSData"16@0:8
@28@0:8@16i24
@"NSURL"
@"NSPersistentStoreCoordinator"
@"NSManagedObjectContext"
@36@0:8@16@24B32
B40@0:8@16@24^@32
@32@0:8q16@24
@"SecCDKeychainItemType"
@"SecCDKeychainAccessControlEntity"
@"NSUUID"
@60@0:8@16@24@32@40@48i56
@"<NSCopying><NSObject>"
@"NSString<SecCDKeychainLookupValueType>"
@"SecCDKeychainItemMetadata"
@68@0:8@16@24@32@40@48@56i64
@36@0:8@16i24^@28
@"SecCDKeychainManagedItemType"
@44@0:8@16i24@28@36
@"_SFIdentity"
@"_SFECKeyPair"16@0:8
B24@0:8@"<CKKSPeer>"16
@"_SFECPublicKey"16@0:8
@"CuttlefishXPCWrapper"
@"CKKSSelves"24@0:8^@16
@"NSSet"24@0:8^@16
v24@0:8@"<CKKSPeerUpdateListener>"16
@"CKKSPeerProviderState"16@0:8
@48@0:8@16@24@32@40
@"OTDeviceInformation"
@"OTCuttlefishContext"
@52@0:8@16@24@32@40B48
v32@0:8B16B20B24B28
v40@0:8@16@24Q32
v32@0:8@16Q24
@"<OTSOSAdapter>"
@"<OTAuthKitAdapter>"
@"<OTDeviceInformationAdapter>"
@"CKKSAccountStateTracker"
@"CKKSReachabilityTracker"
@"CKKSViewManager"
@"OTRamp"
@"<OctagonFollowUpControllerProtocol>"
@"<OTTooManyPeersAdapter>"
v56@0:8@"NSString"16@"NSString"24@"NSData"32@"NSString"40@?<v@?@"NSData"@"NSData"@"NSError">48
v24@0:8@?<v@?@"NSData"@"NSError">16
v24@0:8@?<v@?@"NSArray"@"NSError">16
v48@0:8@"NSString"16@"NSString"24@"NSString"32@?<v@?@"NSError">40
v24@0:8@?<v@?B@"NSError">16
v48@0:8@"SFECKeyPair"16@"SFECKeyPair"24@"NSString"32@?<v@?B@"NSError">40
v32@0:8@"OTJoiningConfiguration"16@?<v@?Q@"NSError">24
v32@0:8@"OTJoiningConfiguration"16@?<v@?@"NSString"@"NSData"@"NSData"@"NSData"@"NSData"@"NSError">24
v72@0:8@"OTJoiningConfiguration"16@"NSString"24@"NSData"32@"NSData"40@"NSData"48@"NSData"56@?<v@?@"NSData"@"NSData"@"NSError">64
v48@0:8@"OTJoiningConfiguration"16@"NSData"24@"NSData"32@?<v@?@"NSError">40
v40@0:8@"NSString"16@"NSString"24@?<v@?@"NSString"@"NSError">32
v48@0:8@"NSString"16@"NSString"24@"OTOperationConfiguration"32@?<v@?q@"NSError">40
v48@0:8@"NSString"16@"NSString"24@"OTOperationConfiguration"32@?<v@?q@"NSString"@"NSNumber"B@"NSError">40
v56@0:8@"NSString"16@"NSString"24@"NSString"32q40@?<v@?@"NSError">48
v64@0:8@"NSString"16@"NSString"24@"NSString"32@"NSData"40@"NSString"48@?<v@?@"NSError">56
v48@0:8@"NSString"16@"NSString"24@"NSUUID"32@?<v@?@"OTCustodianRecoveryKey"@"NSError">40
v48@0:8@"NSString"16@"NSString"24@"OTCustodianRecoveryKey"32@?<v@?@"NSError">40
v48@0:8@"NSString"16@"NSString"24@"NSUUID"32@?<v@?@"OTInheritanceKey"@"NSError">40
v48@0:8@"NSString"16@"NSString"24@"OTInheritanceKey"32@?<v@?@"NSError">40
v44@0:8@"NSString"16@"NSString"24B32@?<v@?@"NSError">36
v60@0:8B16@"NSString"20@"NSError"28@"NSString"36@"NSString"44@?<v@?@"NSError">52
v40@0:8@"NSString"16@"NSString"24@?<v@?q@"NSError">32
v44@0:8@"NSString"16@"NSString"24B32@?<v@?B@"NSError">36
v40@0:8@"NSString"16@"NSString"24@?<v@?B@"NSError">32
v48@0:8@"NSString"16@"NSString"24@"OTSecureElementPeerIdentity"32@?<v@?@"NSError">40
v48@0:8@"NSString"16@"NSString"24@"NSData"32@?<v@?@"NSError">40
v40@0:8@"NSString"16@"NSString"24@?<v@?@"OTCurrentSecureElementIdentities"@"NSError">32
v40@0:8@"NSString"16@"NSString"24@?<v@?@"OTAccountSettingsX"@"NSError">32
v56@0:8@16@24@32q40@?48
v60@0:8B16@20@28@36@44@?52
@120@0:8@16@24@32@40#48#56#64#72@80@88@96@104@112
B40@0:8@16@24q32
@80@0:8@16@24@32@40@48@56@64@72
@28@0:8B16@20
@"NSOperationQueue"
@"NSBlockOperation"
@24@0:8@?16
@32@0:8@16@?24
@56@0:8@16@24@32@40@48
B36@0:8@16B24^@28
@"CKKSWrappedAESSIVKey"
@"NSNumber"
@72@0:8@16@24@32@40@48Q56Q64
@80@0:8@16@24@32@40@48@56Q64Q72
@104@0:8@16@24@32@40@48@56Q64Q72@80@88@96
@32@0:8@16Q24
@36@0:8@16Q24B32
@64@0:8@16@24@32@40@48^@56
@48@0:8@16@24@32^@40
@"CKKSOperationDependencies"
@"CKKSItem"
@48@0:8^{SecDbItem={__CFRuntimeBase=QAQ}^{SecDbClass}iii^{__CFDictionary}^{__CFData}^v^{__CFArray}}16@24@32^@40
@56@0:8^{SecDbItem={__CFRuntimeBase=QAQ}^{SecDbClass}iii^{__CFDictionary}^{__CFData}^v^{__CFArray}}16@24@32@40^@48
@48@0:8q16@24@32^@40
q40@0:8@16@24^@32
@64@0:8q16@24@32@40@48^@56
{?="keyClass"b1}
@"NSMutableSet"
v64@0:8@16r^{SecDbClass=^{__CFString}B[0^{SecDbAttr}]}24@32@40@48@56
v32@0:8^{SecDbItem={__CFRuntimeBase=QAQ}^{SecDbClass}iii^{__CFDictionary}^{__CFData}^v^{__CFArray}}16@24
v60@0:8@16@24r^{SecDbClass=^{__CFString}B[0^{SecDbAttr}]}32@40B48@52
B52@0:8@16^{SecDbItem={__CFRuntimeBase=QAQ}^{SecDbClass}iii^{__CFDictionary}^{__CFData}^v^{__CFArray}}24@32B40@44
v40@0:8@16r^{SecDbClass=^{__CFString}B[0^{SecDbAttr}]}24@32
v84@0:8@16B24@28@36@44@52@60@68@76
v40@0:8@16@24@32
@68@0:8@16@24@32@40@48@56B64
v28@0:8@16B24
v32@0:8@16q24
@"CKRecordZoneID"
@80@0:8@16@24@32q40Q48q56q64@72
@104@0:8@16@24@32@40q48Q56q64q72@80@88@96
B48@0:8@16@24@32^@40
@64@0:8@16@24@32q40q48^@56
@"SECC2MPGenericEventMetricValue"
@"CKKSRateLimiter"
@76@0:8@16B24B28@32B40@44@52Q60@68
@"NSString<OctagonFlagString>"
@64@0:8@16@24@32@40@48@56
@"SECC2MPError"
{?="dateValue"b1"doubleValue"b1}
v24@0:8d16
d16@0:8
@"SecDbBackupBagIdentity"
i24@0:8^@16
@"<CKKSSelfPeer>"24@0:8^@16
B32@0:8@"<CKKSSelfPeer>"16^@24
B28@0:8B16^@20
@20@0:8B16
@"CKKSResultOperation"
@"NSHashTable"
@44@0:8@16B24@28@36
@"NSString<SecCKKSProcessedState>"
@"CKOperationGroup"
@"CKDatabase"
@"CKKSCloudKitClassDependencies"
@"<OctagonStateFlagHandler>"
@"TPSyncingPolicy"
@"<CKKSDatabaseProviderProtocol>"
@"CKKSZoneModifier"
@112@0:8@16@24@32@40@48@56@64@72@80@88@96@104
B28@0:8@16B24
B36@0:8@16@24B32
@24@0:8^{SecDbItem={__CFRuntimeBase=QAQ}^{SecDbClass}iii^{__CFDictionary}^{__CFData}^v^{__CFArray}}16
@"TPPolicyVersion"
@64@0:8@16@24@32@40@48Q56
{?="recoveryType"b1}
@"NSString<SecCKKSKeyClass>"
B44@0:8@16B24@28^@36
@"CKKSKey"
@"CKKSCurrentKeyPointer"
@"SECC2MPCloudKitInfo"
@"SECC2MPDeviceInfo"
@"SECC2MPGenericEvent"
@"SECC2MPNetworkEvent"
@"SECC2MPServerInfo"
{?="reportFrequency"b1"reportFrequencyBase"b1"triggers"b1"metricType"b1}
v24@0:8@?<v@?@"NSDictionary">16
v32@0:8@"NSString"16@?<v@?@"NSArray"@"NSError">24
v40@0:8@"NSString"16B24B28@?<v@?@"NSError">32
v24@0:8@?<v@?@"NSString">16
v40@0:8@"NSString"16@"NSDictionary"24@?<v@?@"NSError">32
v56@0:8@"NSString"16@"CKKSExternalKey"24@"CKKSExternalKey"32@"NSArray"40@?<v@?@"NSError">48
v36@0:8@"NSString"16B24@?<v@?@"CKKSExternalKey"@"NSArray"@"NSArray"@"NSError">28
v48@0:8@"NSString"16@"NSArray"24@"NSArray"32@?<v@?@"NSError">40
v40@0:8@16B24B28@?32
v36@0:8@16B24@?28
@36@0:8@16B24@28
@52@0:8@16Q24B32q36@?44
@60@0:8@16Q24Q32B40q44@?52
@68@0:8@16Q24d32Q40B48q52@?60
v32@0:8Q16Q24
@?16@0:8
v24@0:8@"NSString<OctagonFlagString>"16
B24@0:8@"NSString<OctagonFlagString>"16
@"NSArray"16@0:8
@"CKKSCondition"24@0:8@"NSString<OctagonFlagString>"16
@"OTCustodianRecoveryKey"
@"OTInheritanceKey"
B24@0:8q16
@"<CKKSSelfPeer>"
@"_SFECPublicKey"
B24@0:8@"NSString"16
@"_SFECKeyPair"
{?="timestampEnd"b1"timestampStart"b1"type"b1}
v24@0:8@?<C@?>16
B36@0:8^{__OpaqueSecDbConnection=}16B24@?28
v24@0:8@"NSDictionary"16
@"NSDictionary"16@0:8
@"NSSet"16@0:8
@"CKRecord"
@44@0:8@16@24B32@36
v40@0:8@16Q24@?32
B44@0:8@16B24^@28@?36
B48@0:8^{SecDbItem={__CFRuntimeBase=QAQ}^{SecDbClass}iii^{__CFDictionary}^{__CFData}^v^{__CFArray}}16@24@32^@40
B40@0:8^{SecDbItem={__CFRuntimeBase=QAQ}^{SecDbClass}iii^{__CFDictionary}^{__CFData}^v^{__CFArray}}16@24@32
@"CKServerChangeToken"
@"CKRecordID"
@"CKDatabaseOperation<CKKSFetchRecordZoneChangesOperation>"
@68@0:8@16#24@32@40@48B56@60
@"OctagonStateTransitionPathStep"
@"OctagonStateTransitionPath"
@"OctagonStateTransitionRequest"
v24@0:8@"CKKSResultOperation<OctagonStateTransitionOperationProtocol>"16
@"CKKSResultOperation"16@0:8
@60@0:8@16@24@32@40B48@52
@"OTAccountSettingsX"
@"OTFollowup"
@"OTCuttlefishAccountStateHolder"
@"<CKKSCloudKitAccountStateTrackingProvider><CKKSOctagonStatusMemoizer>"
@"CKKSLaunchSequence"
@"OctagonAPSReceiver"
@"<CKKSPeerProvider>"
v24@0:8@"<CKKSPeerProvider>"16
v32@0:8@"CKAccountInfo"16@"CKAccountInfo"24
v32@0:8@"NSArray"16@"NSString"24
v24@0:8@"APSIncomingMessage"16
v32@0:8@"OTAccountMetadataClassC"16@"OTAccountMetadataClassC"24
@136@0:8@16@24@32@40@48@56@64@72@80@88@96#104#112#120@128
q24@0:8^@16
v32@0:8q16@?24
q24@0:8@16
@32@0:8@16d24
@40@0:8@16Q24d32
@40@0:8@16Q24@32
@"TrustedPeersHelperCustodianRecoveryKey"
@76@0:8@16@24@32@40@48@56B64Q68
^{__OpaqueSOSEngine={__CFRuntimeBase=QAQ}^{SOSDataSource}^{__CFString}^{__OpaqueSOSManifest}^{__CFData}^{__CFDictionary}^{__CFDictionary}^{__CFDictionary}^{__CFDictionary}^{__CFArray}^{__CFDate}^{__CFDictionary}BB@@@@?B}
^{__OpaqueSOSPeer=}
^{__OpaqueSOSCoder=}
^{__OpaqueSOSManifest=}
^{__OpaqueSOSMessage=}
@64@0:8^{__OpaqueSOSEngine={__CFRuntimeBase=QAQ}^{SOSDataSource}^{__CFString}^{__OpaqueSOSManifest}^{__CFData}^{__CFDictionary}^{__CFDictionary}^{__CFDictionary}^{__CFDictionary}^{__CFArray}^{__CFDate}^{__CFDictionary}BB@@@@?B}16^{__OpaqueSOSPeer=}24^{__OpaqueSOSManifest=}32^{__OpaqueSOSManifest=}40^{__OpaqueSOSManifest=}48^{__OpaqueSOSMessage=}56
v24@0:8^{__OpaqueSOSCoder=}16
^{__OpaqueSOSEngine={__CFRuntimeBase=QAQ}^{SOSDataSource}^{__CFString}^{__OpaqueSOSManifest}^{__CFData}^{__CFDictionary}^{__CFDictionary}^{__CFDictionary}^{__CFDictionary}^{__CFArray}^{__CFDate}^{__CFDictionary}BB@@@@?B}16@0:8
v24@0:8^{__OpaqueSOSEngine={__CFRuntimeBase=QAQ}^{SOSDataSource}^{__CFString}^{__OpaqueSOSManifest}^{__CFData}^{__CFDictionary}^{__CFDictionary}^{__CFDictionary}^{__CFDictionary}^{__CFArray}^{__CFDate}^{__CFDictionary}BB@@@@?B}16
^{__OpaqueSOSPeer=}16@0:8
v24@0:8^{__OpaqueSOSPeer=}16
^{__OpaqueSOSCoder=}16@0:8
^{__OpaqueSOSManifest=}16@0:8
v24@0:8^{__OpaqueSOSManifest=}16
^{__OpaqueSOSMessage=}16@0:8
v24@0:8^{__OpaqueSOSMessage=}16
@"CKKSKeychainBackedKey"
@72@0:8@16@24@32@40@48@56q64
@80@0:8@16@24@32@40@48@56@64q72
@"CKKSZoneChangeFetcher"
@?24@0:8@16
v48@0:8^{__OpaqueSecDbConnection=}16Q24^{SecDbItem={__CFRuntimeBase=QAQ}^{SecDbClass}iii^{__CFDictionary}^{__CFData}^v^{__CFArray}}32^{SecDbItem={__CFRuntimeBase=QAQ}^{SecDbClass}iii^{__CFDictionary}^{__CFData}^v^{__CFArray}}40
@28@0:8B16^@20
@"SecDbKeychainSerializedAKSWrappedKey"
@"SecDbKeychainSerializedMetadata"
@"SecDbKeychainSerializedSecretData"
@56@0:8@16@24@32@40^@48
@"SecDbKeychainSecretData"
@"SecDbKeychainMetadata"
@44@0:8@16@24@32i40
@52@0:8@16^{__SecAccessControl=}24@32B40^@44
B52@0:8@16^{__SecAccessControl=}24@32B40^@44
@44@0:8i16^{__SecAccessControl=}20@28^@36
B28@0:8i16^@20
B44@0:8i16^{__SecAccessControl=}20@28^@36
@32@0:8i16B20^@24
@52@0:8@16i24^{__SecAccessControl=}28@36^@44
@64@0:8@16^{__SecAccessControl=}24@32@40B48B52^@56
@"NSObject<OS_nw_path_monitor>"
@"<OctagonStateMachineEngine>"
@"OctagonFlags"
v24@0:8@"OctagonPendingFlag"16
@48@0:8@16@24@32@?40
@56@0:8@16@24@32@40@?48
@"OTUpdateTrustedDeviceListOperation"
@32@0:8^{__SecKey={__CFRuntimeBase=QAQ}^{__SecKeyDescriptor}^v}16^@24
@"CKKSManifestInjectionPointHelper"
@104@0:8@16@24Q32@40@48@56@64@72@80@88@96
@96@0:8@16@24Q32@40@48@56@64@72@80@88
@64@0:8@16@24@32@40^@48@56
@"CKKSSelves"
@60@0:8@16B24@28@36@44@52
@"CKRecordZone"
@88@0:8@16@24@32@40@48@56@64@72#80
v32@0:8Q16@?24
@"NSString"24@0:8^@16
v24@0:8@?<v@?@"NSSet"@"NSError">16
v24@0:8@"<OTAuthKitAdapterNotifier>"16
@"CKKSListenerCollection<OTAuthKitAdapterNotifier>"
@"OTManager"
@"<OctagonEntitlementBearerProtocol>"
@"NSURLSession"
v32@0:8@"NSURLSession"16@"NSError"24
v40@0:8@"NSURLSession"16@"NSURLAuthenticationChallenge"24@?<v@?q@"NSURLCredential">32
v24@0:8@"NSURLSession"16
{?="errorCode"b1}
B24@0:8d16
@116@0:8@16@24@32@40@48@56i64@68@76@84@92@100@108
{?="operationGroupIndex"b1"operationTriggered"b1}
@88@0:8@16@24@32@40@48@56@64@72@80
@48@0:8@16Q24@32@40
@88@0:8#16#24#32#40#48#56#64#72#80
{?="reportClientOperationFrequency"b1"reportClientOperationFrequencyBase"b1"reportOperationGroupFrequency"b1"reportOperationGroupFrequencyBase"b1"anonymous"b1}
@"CKKSKeychainViewState"
@"CKModifyRecordsOperation"
^{SecDbItem={__CFRuntimeBase=QAQ}^{SecDbClass}iii^{__CFDictionary}^{__CFData}^v^{__CFArray}}
^{SecDbItem={__CFRuntimeBase=QAQ}^{SecDbClass}iii^{__CFDictionary}^{__CFData}^v^{__CFArray}}40@0:8@16@24^@32
^{SecDbItem={__CFRuntimeBase=QAQ}^{SecDbClass}iii^{__CFDictionary}^{__CFData}^v^{__CFArray}}16@0:8
v24@0:8^{SecDbItem={__CFRuntimeBase=QAQ}^{SecDbClass}iii^{__CFDictionary}^{__CFData}^v^{__CFArray}}16
@52@0:8@16B24@28@36@44
@20@0:8C16
B28@0:8C16^@20
B20@0:8C16
@"<CKKSLockStateProviderProtocol>"
{?="actualKeyclass"b1"keyclass"b1}
@"CKKSIncomingQueueOperation"
@"CKKSNewTLKOperation"
@"CKKSOutgoingQueueOperation"
@"CKKSProcessReceivedKeysOperation"
@"CKKSReencryptOutgoingItemsOperation"
@"CKKSSynchronizeOperation"
@"CKKSSecDbAdapter"
B24@0:8@"CKRecordZoneID"16
@"CKKSCloudKitFetchRequest"24@0:8@"CKRecordZoneID"16
B32@0:8@"NSError"16@"CKRecordZoneID"24
v56@0:8@"NSArray"16@"NSArray"24@"CKRecordZoneID"32@"CKServerChangeToken"40B48B52
v56@0:8@16@24@32@40B48B52
v56@0:8^{__OpaqueSecDbConnection=}16Q24^{SecDbItem={__CFRuntimeBase=QAQ}^{SecDbClass}iii^{__CFDictionary}^{__CFData}^v^{__CFArray}}32^{SecDbItem={__CFRuntimeBase=QAQ}^{SecDbClass}iii^{__CFDictionary}^{__CFData}^v^{__CFArray}}40@48
@36@0:8B16Q20@28
@32@0:8@16B24B28
B40@0:8@16q24@32
v24@0:8#16
B32@0:8Q16^@24
B44@0:8@16B24B28B32^@36
@"<CKKSPBCodable>"
@"CKKSTLKShare"
@88@0:8@16@24@32q40Q48q56q64@72@80
@112@0:8@16@24@32@40q48Q56q64q72@80@88@96@104
@"CKKSResultOperation<OctagonStateTransitionOperationProtocol>"
@56@0:8@16@24@32Q40@48
{?="networkRequestBodyBytesSent"b1"networkResponseBodyBytesReceived"b1"networkStatusCode"b1"reportFrequency"b1"reportFrequencyBase"b1"timestampC2Init"b1"timestampC2Now"b1"timestampC2Start"b1"timestampDnsEnd"b1"timestampDnsStart"b1"timestampRequestEnd"b1"timestampRequestStart"b1"timestampResponseEnd"b1"timestampResponseStart"b1"timestampSslStart"b1"timestampTcpEnd"b1"timestampTcpStart"b1"triggers"b1"networkPreviousAttemptCount"b1"networkRequestHeaderSize"b1"networkResponseHeaderSize"b1"optionsTimeoutIntervalForRequest"b1"optionsTimeoutIntervalForResource"b1"networkConnectionReused"b1"optionsAllowExpensiveAccess"b1"optionsAllowPowerNapScheduling"b1"optionsAppleIdContext"b1"optionsOutOfProcess"b1"optionsOutOfProcessForceDiscretionary"b1"optionsTlsPinningRequired"b1}
@80@0:8@16@24Q32@40@48@56@64@72
@"<OctagonAPSConnection>"
@"<CKKSZoneUpdateReceiverProtocol>"
v32@0:8@"APSConnection"16@"NSData"24
v48@0:8@"APSConnection"16@"NSData"24@"NSString"32@"NSString"40
v32@0:8@"APSConnection"16@"APSIncomingMessage"24
v40@0:8@"APSConnection"16@"NSString"24@"NSDictionary"32
v32@0:8@"APSConnection"16@"APSOutgoingMessage"24
v40@0:8@"APSConnection"16@"APSOutgoingMessage"24@"NSError"32
v28@0:8@"APSConnection"16B24
v24@0:8@"APSConnection"16
v32@0:8@"APSConnection"16@"NSArray"24
@40@0:8@16#24Q32
@"CKKSAESSIVKey"
@72@0:8@16@24@32@40@48@56^@64
@40@0:8@16^B24^@32
@44@0:8@16@24@32B40
@"TPPBPeerStableInfoSetting"
@60@0:8@16B24Q28B36B40@44@52
@"TPPBSecureElementIdentity"
@64@0:8@16@24Q32@40@48B56B60
[80C]
@32@0:8*16Q24
B72@0:8r^{ccmode_siv=QQ^?^?^?^?^?^{ccmode_cbc}^{ccmode_ctr}}16@24@32*40Q48@56^@64
{?="isAppleInternal"b1}
{?="operationGroupTriggered"b1}
@"CKKSFetchAllRecordZoneChangesOperation"
@"CKKSZoneChangeFetchDependencyOperation"
v24@0:8@"CKRecordZoneNotification"16
@40@0:8@16#24@32
@56@0:8@16i24^i28i36@40^@48
@48@0:8i16i20@24^{__OpaqueSecDbConnection=}32^@40
@56@0:8@16i24i28@32^{__OpaqueSecDbConnection=}40^@48
B60@0:8i16^{__OpaqueSecDbConnection=}20^i28^@36^@44^@52
@52@0:8i16^{__OpaqueSecDbConnection=}20i28@32B40^@44
@44@0:8i16i20@24B32^@36
@"NSObject<OS_dispatch_semaphore>"
q24@0:8Q16
Q24@0:8d16
{?="lastCloudServicesTriggerTime"b1"lastEscrowAttemptTime"b1"triggerRequestTime"b1"uploadRetries"b1"certCached"b1"uploadCompleted"b1}
B32@0:8@?16^@24
@120@0:8@16@24@32@40@48@56@64@72@80@88@96#104#112
@"CKKSZoneModifyOperations"
@"SecCDKeychain"
v40@0:8@"_SFCredential"16@"_SFAccessPolicy"24@?<v@?@"NSString"@"NSError">32
v32@0:8@"NSString"16@?<v@?@"_SFPasswordCredential"@"NSString"@"NSError">24
v32@0:8@"NSArray"16@?<v@?@"NSArray"@"NSError">24
v32@0:8@"NSString"16@?<v@?B@"NSError">24
v40@0:8@"_SFCredential"16@"_SFCredential"24@?<v@?@"NSString"@"NSError">32
v40@0:8@"_SFCredential"16@"_SFCredential"24@?<v@?B@"NSError">32
@64@0:8@16@24q32@40@48@56
^{__SecKey={__CFRuntimeBase=QAQ}^{__SecKeyDescriptor}^v}
@"SOSAccountTrustClassic"
^{SOSDataSourceFactory=^?^?^?}
@"CKKeyParameter"
@"SOSKVSCircleStorageTransport"
@"SOSMessageKVS"
@"SOSCKCircleStorage"
@"NSUserDefaults"
@"CKKSPBFileStorage"
v24@0:8@?<v@?B@"NSData"@"NSError">16
v28@0:8I16@?<v@?B@"NSError">20
v32@0:8@"NSData"16@?<v@?@"NSData"@"NSError">24
v36@0:8@"NSData"16i24@?<v@?B@"NSError">28
v28@0:8I16@?<v@?@"NSArray"@"NSError">20
v32@0:8@"NSArray"16@?<v@?B@"NSError">24
v32@0:8@"NSDictionary"16@?<v@?@"NSError">24
v32@0:8@"NSArray"16@?<v@?@"NSError">24
v24@0:8@?<v@?B>16
v28@0:8I16@?20
v36@0:8@16i24@?28
v24@0:8^{__SecKey={__CFRuntimeBase=QAQ}^{__SecKeyDescriptor}^v}16
^{__OpaqueSOSPeerInfo=}16@0:8
^{__OpaqueSOSFullPeerInfo=}16@0:8
@32@0:8^{__CFDictionary=}16^{SOSDataSourceFactory=^?^?^?}24
B24@0:8^^{__CFError}16
i24@0:8^^{__CFError}16
B24@0:8^{__CFString=}16
^{__SecKey={__CFRuntimeBase=QAQ}^{__SecKeyDescriptor}^v}16@0:8
^{SOSDataSourceFactory=^?^?^?}16@0:8
v24@0:8^{SOSDataSourceFactory=^?^?^?}16
{?="ringUpdateFlag"b1}
B48@0:8@16^{__OpaqueSOSCircle=}24Q32^^{__CFError}40
B64@0:8@16@24Q32^{__OpaqueSOSCircle=}40^{__OpaqueSOSPeerInfo=}48^^{__CFError}56
@48@0:8r^*16r*24^{SOSDataSourceFactory=^?^?^?}32^@40
@40@0:8@16^{SOSDataSourceFactory=^?^?^?}24^@32
@"SOSAccount"
^v32@0:8^{__CFString=}16^^{__CFError}24
B32@0:8^{__CFString=}16^^{__CFError}24
B40@0:8^{__CFString=}16^v24^^{__CFError}32
B32@0:8^{__CFString=}16^v24
v32@0:8^{__CFString=}16^{__CFSet=}24
v24@0:8^{__CFSet=}16
B32@0:8@16^{__CFDictionary=}24
B32@0:8@16^^{__CFError}24
B40@0:8@16@24^^{__CFError}32
v24@0:8^{__CFDictionary=}16
B40@0:8^{__OpaqueSOSRing={__CFRuntimeBase=QAQ}^{__CFDictionary}^{__CFDictionary}^{__CFDictionary}^{__CFDictionary}}16^{__CFString=}24^^{__CFError}32
B60@0:8@16^{__OpaqueSOSRing={__CFRuntimeBase=QAQ}^{__CFDictionary}^{__CFDictionary}^{__CFDictionary}^{__CFDictionary}}24@32^{__SecKey={__CFRuntimeBase=QAQ}^{__SecKeyDescriptor}^v}40B48^^{__CFError}52
^{__OpaqueSOSRing={__CFRuntimeBase=QAQ}^{__CFDictionary}^{__CFDictionary}^{__CFDictionary}^{__CFDictionary}}32@0:8^{__CFString=}16^^{__CFError}24
^{__CFDictionary=}24@0:8^^{__CFError}16
B40@0:8@16^{__CFString=}24^^{__CFError}32
@52@0:8@16^{__OpaqueSOSFullPeerInfo=}24^{__OpaqueSOSCircle=}32i40@44
i44@0:8@16^{__CFString=}24i32^^{__CFError}36
i40@0:8@16^{__CFString=}24^^{__CFError}32
B40@0:8@16^{__CFSet=}24^{__CFSet=}32
v40@0:8@16^{__CFString=}24@?32
^{__CFSet=}24@0:8^{__CFString=}16
^{__SecKey={__CFRuntimeBase=QAQ}^{__SecKeyDescriptor}^v}32@0:8^{__CFString=}16^^{__CFError}24
^{__OpaqueSOSPeerInfo=}32@0:8^{__CFString=}16^^{__CFError}24
B32@0:8^{__OpaqueSOSPeerInfo=}16^^{__CFError}24
^{__CFSet=}24@0:8@?16
^{__CFArray=}32@0:8^{__SecKey={__CFRuntimeBase=QAQ}^{__SecKeyDescriptor}^v}16^^{__CFError}24
B32@0:8^{__SecKey={__CFRuntimeBase=QAQ}^{__SecKeyDescriptor}^v}16^^{__CFError}24
B48@0:8@16^{__CFString=}24^^{__CFError}32@?40
v32@0:8^{__OpaqueSOSCircle=}16^{__SecKey={__CFRuntimeBase=QAQ}^{__SecKeyDescriptor}^v}24
B32@0:8^{__OpaqueSOSCircle=}16^{__SecKey={__CFRuntimeBase=QAQ}^{__SecKeyDescriptor}^v}24
^{__CFSet=}16@0:8
B40@0:8^{__OpaqueSOSCircle=}16^{__SecKey={__CFRuntimeBase=QAQ}^{__SecKeyDescriptor}^v}24^^{__CFError}32
B32@0:8^{__OpaqueSOSFullPeerInfo=}16^^{__CFError}24
^{__CFArray=}32@0:8^^{__CFError}16@?24
Q32@0:8@16^@24
*48@0:8@16^@24r*32*40
^{__CFSet=}40@0:8@16^{__CFSet=}24^^{__CFError}32
B40@0:8@16^{__SecKey={__CFRuntimeBase=QAQ}^{__SecKeyDescriptor}^v}24^^{__CFError}32
^{__OpaqueSOSEngine=}24@0:8^{SOSDataSourceFactory=^?^?^?}16
B40@0:8@16^v24^^{__CFError}32
^{__SecKey={__CFRuntimeBase=QAQ}^{__SecKeyDescriptor}^v}24@0:8^^{__CFError}16
B32@0:8^{__CFDictionary=}16^^{__CFError}24
B40@0:8^{__CFString=}16^{__CFData=}24^^{__CFError}32
B40@0:8^{__CFString=}16^{__OpaqueSOSPeerInfo=}24^^{__CFError}32
^{__CFDictionary=}32@0:8^{__CFDictionary=}16^^{__CFError}24
^{__CFArray=}32@0:8^{__CFDictionary=}16^^{__CFError}24
B24@0:8^{__CFDictionary=}16
@48@0:8@16@24d32d40
i32@0:8^{__OpaqueSOSCircle=}16^{__OpaqueSOSPeerInfo=}24
^{__OpaqueSOSCircle=}24@0:8^^{__CFError}16
^{__OpaqueSOSCircle=}40@0:8@16^{__CFString=}24^^{__CFError}32
B32@0:8^{__OpaqueSOSCircle=}16^{__OpaqueSOSCircle=}24
B24@0:8^{__OpaqueSOSCircle=}16
B44@0:8^{__OpaqueSOSCircle=}16@24B32^^{__CFError}36
B40@0:8@16^{__OpaqueSOSCircle=}24^^{__CFError}32
B40@0:8@16^^{__CFError}24@?32
B32@0:8@16^{__OpaqueSOSCircle=}24
v32@0:8@16^{__SecKey={__CFRuntimeBase=QAQ}^{__SecKeyDescriptor}^v}24
B44@0:8@16^{__SecKey={__CFRuntimeBase=QAQ}^{__SecKeyDescriptor}^v}24B32^^{__CFError}36
v32@0:8^{__CFString=}16^{__CFData=}24
B48@0:8^{__CFArray=}16^{__CFArray=}24^{__CFArray=}32^^{__CFError}40
B40@0:8@16^{__CFData=}24^{__CFError=}32
q32@0:8@16^^{__CFError}24
B56@0:8@16^{__CFArray=}24^{__CFArray=}32^{__CFArray=}40^^{__CFError}48
B40@0:8@16^{__CFData=}24^^{__CFError}32
^{__OpaqueSOSFullPeerInfo=}
^{__OpaqueSOSPeerInfo=}
^{__OpaqueSOSCircle=}
v24@0:8^{__OpaqueSOSCircle=}16
v24@0:8^{__OpaqueSOSFullPeerInfo=}16
^{__OpaqueSOSCircle=}16@0:8
^v16@0:8
^{__CFString=}16@0:8
B40@0:8@16^{__CFDictionary=}24^^{__CFError}32
B40@0:8@16^{__CFSet=}24^^{__CFError}32
B48@0:8@16^{__CFString=}24^{__CFData=}32^^{__CFError}40
^{__CFDictionary=}40@0:8@16^{__CFDictionary=}24^^{__CFError}32
v36@0:8@16i24@28
v32@0:8@16^{__OpaqueSOSPeer=}24
B48@0:8@16^{__CFString=}24^{__CFString=}32^^{__CFError}40
v24@0:8^v16
@24@0:8^{__OpaqueSOSPeer=}16
^{__CFDictionary=}
^{__CFDictionary=}16@0:8
^{__SecKey={__CFRuntimeBase=QAQ}^{__SecKeyDescriptor}^v}36@0:8i16@20^^{__CFError}28
softlink:o:path:/System/Library/PrivateFrameworks/CrashReporterSupport.framework/CrashReporterSupport
softlink:o:path:/System/Library/PrivateFrameworks/CloudServices.framework/CloudServices
