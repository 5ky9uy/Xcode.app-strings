N@333333
MbP?
@(#)PROGRAM:securityd  PROJECT:Security-60158.100.125
3333
<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE plist PUBLIC "-//Apple//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd">
<plist version="1.0">
<dict>
<key>allow-obliterate-device</key>
<true/>
<key>allow-softwareupdated</key>
<true/>
<key>application-identifier</key>
<string>com.apple.securityd</string>
<key>aps-connection-initiate</key>
<true/>
<key>aps-environment</key>
<string>serverPreferred</string>
<key>com.apple.CloudKeychainProxy.client</key>
<true/>
<key>com.apple.accounts.appleaccount.fullaccess</key>
<true/>
<key>com.apple.application-identifier</key>
<string>com.apple.securityd</string>
<key>com.apple.aps-environment</key>
<string>serverPreferred</string>
<key>com.apple.authkit.client.private</key>
<true/>
<key>com.apple.developer.aps-environment</key>
<string>serverPreferred</string>
<key>com.apple.developer.icloud-container-environment</key>
<string>Production</string>
<key>com.apple.developer.icloud-container-identifiers</key>
<array>
<string>iCloud.com.apple.security.keychain</string>
</array>
<key>com.apple.developer.icloud-services</key>
<array>
<string>CloudKit</string>
</array>
<key>com.apple.keystore.access-keychain-keys</key>
<true/>
<key>com.apple.keystore.lockassertion</key>
<true/>
<key>com.apple.mkb.usersession.info</key>
<true/>
<key>com.apple.private.MobileGestalt.AllowedProtectedKeys</key>
<array>
<string>SerialNumber</string>
</array>
<key>com.apple.private.accounts.allaccounts</key>
<true/>
<key>com.apple.private.appleaccount.app-hidden-from-icloud-settings</key>
<true/>
<key>com.apple.private.applecredentialmanager.allow</key>
<true/>
<key>com.apple.private.aps-connection-initiate</key>
<true/>
<key>com.apple.private.associated-domains</key>
<true/>
<key>com.apple.private.cloudkit.allowUnverifiedAccount</key>
<true/>
<key>com.apple.private.cloudkit.buddyAccess</key>
<true/>
<key>com.apple.private.cloudkit.notifyOnAccountWarmup</key>
<true/>
<key>com.apple.private.cloudkit.setEnvironment</key>
<true/>
<key>com.apple.private.cloudkit.spi</key>
<true/>
<key>com.apple.private.cloudkit.supportservice</key>
<true/>
<key>com.apple.private.cloudkit.systemService</key>
<true/>
<key>com.apple.private.dark-wake-push</key>
<true/>
<key>com.apple.private.followup</key>
<true/>
<key>com.apple.private.ids.remoteurlconnection</key>
<true/>
<key>com.apple.private.imcore.imagent</key>
<true/>
<key>com.apple.private.imcore.imremoteurlconnection</key>
<true/>
<key>com.apple.private.imcore.remoteurlconnection</key>
<true/>
<key>com.apple.private.lockdown.finegrained-get</key>
<array>
<string>com.apple.securityd.ae/cookie</string>
</array>
<key>com.apple.private.necp.match</key>
<true/>
<key>com.apple.private.network.socket-delegate</key>
<true/>
<key>com.apple.private.rtcreportingd</key>
<true/>
<key>com.apple.private.security.storage.Keychains</key>
<true/>
<key>com.apple.private.sqlite.sqlite-encryption</key>
<true/>
<key>com.apple.private.tcc.allow</key>
<array>
<string>kTCCServiceLiverpool</string>
</array>
<key>com.apple.private.trustedpeershelper.client</key>
<true/>
<key>com.apple.securebackupd.access</key>
<true/>
<key>com.apple.security.network.client</key>
<true/>
<key>com.apple.symptom_diagnostics.report</key>
<true/>
<key>seatbelt-profiles</key>
<array>
<string>securityd</string>
</array>
</dict>
</plist>
odel
keychain
allowed-runtime
reset-period
check-period
graceful-exit-time
SecWatchdog
com.apple.securityd.watchdog
failed to set parameters: %@
WAIT4DEBUGGER
signal
com.apple.securityd.daily
v16@?0^{_xpc_activity_s=}8
com.apple.securityd.entropyhealth
com.apple.securityd.prng
com.apple.private.keychain.deny
com.apple.private.ckks.plaintextfields
com.apple.private.keychain.inet_expansion_fields
com.apple.private.keychain.sysbound
com.apple.private.keychain.allow-update-tokens
com.apple.purplebuddy
com.apple.private.security.delete.all
restore-keychain
Failed to write backup file: %d
keychain-cloud-circle
v32@?0^{__CFString=}8^{__CFData=}16^{__CFString=}24
v24@?0^{__CFString=}8^{__CFData=}16
v24@?0^{__CFString=}8Q16
keychain-sync-updates
force
musr
network-extension
com.apple.private.syncbubble-keychain
com.apple.private.migrate-musr-system-keychain
com.apple.private.keychain.circle.join
com.apple.private.uninstall.deletion
com.apple.private.keychain.backuptableops
com.apple.private.keychain.keychaincontrol
com.apple.private.keychain.certificates
Messages expect to be xpc dictionary, got: %@
{%string: %value}
%@: %@ has entitlement %@
%@: %@ lacks entitlement %@
xpcSetDER not data, got %@
trailing garbage at end of SecAccessControl data
missing CFDataRef info
could not allocate CFDataRef info
No data for key %s
/dev/random
application-identifier
com.apple.application-identifier
com.apple.developer.on-demand-install-capable
keychain-access-groups
com.apple.security.application-groups
com.apple.developer.associated-application-identifier
entitlements
CryptoTokenKit
UseTokens
serverxpc
com.apple.private.system-keychain
com.apple.developer.networking.networkextension
com.apple.networkextension.keychain
com.apple.security
v32@?0@"NSDictionary"8@"NSArray"16@"NSError"24
SecItemAddAndNotifyOnSync: %@ has entitlement %@
SecItemAddAndNotifyOnSync: %@ does not have entitlement %@, but is using SPI anyway
SecItemAddAndNotifyOnSync: %@ does not have entitlement %@
com.apple.securityd.SecItemAddAndNotifyOnSync-callback
v20@?0B8^{__CFError=}12
f_ckkscallback
SecItemSetCurrentItemAcrossAllDevices: %@ has entitlement %@
com.apple.private.ckks.currentitempointers_write
SecItemSetCurrentItemAcrossAllDevices: %@ does not have entitlement %@
SecItemSetCurrentItemAcrossAllDevices: client is missing access-group %@: %@
CKKS not yet initialized
No view manager, cannot forward request
v24@?0@"NSData"8@"NSError"16
SecItemFetchCurrentItemAcrossAllDevices: %@ has entitlement %@
com.apple.private.ckks.currentitempointers_read
SecItemFetchCurrentItemAcrossAllDevices: %@ does not have entitlement %@
SecItemFetchCurrentItemAcrossAllDevices: client is missing access-group %@: %@
ckkscurrent
%@,%@
parameter missing: %@
inet
genp
class %@ is not supported: %@
Client is missing access-group %@: %@
failed to build query: %@
com.apple.keychain.multiuser-admin
secKeychainDeleteMultiuser: %@ need entitlement %@
secKeychainDeleteMultiuser: %@ uuid have wrong length: %d
com.apple.private.keychain.appclipdeletion
com.apple.private.keychain.performance_impacting_api
com.apple.securityd.general
%@ %@
optional_params
ks_crypt_diversify: failed to create aks_params
ks_crypt_diversify: failed to '%s' item (class %d, bag: %d) Item can't be encrypted due to merge failed, so drop the item.
encrypt
ks_crypt_diversify: failed to create ref key with blob because bad data (bag: %d)
 (hibernation?)
ks_crypt_diversify: %x failed to '%@' item (class %d, bag: %d) Access to item attempted while keychain is locked%s.
ks_crypt_diversify: %x failed to '%@' item (class %d, bag: %d) No key available for class.
ks_crypt_diversify: %x failed to '%@' item (class %d, bag: %d) Item can't be decrypted on this device, ever, so drop the item.
ks_crypt_diversify: %x failed to '%@' item (class %d, bag: %d) Persona doesn't exist, so drop the item.
ks_crypt_diversify: %x failed to '%@' item (class %d, bag: %d)
ks_crypt: %x failed to '%@' item (class %d, bag: %d) Access to item attempted while keychain is locked%s.
ks_crypt: %x failed to '%@' item (class %d, bag: %d) No key available for class.
ks_crypt: %x failed to '%@' item (class %d, bag: %d) Item can't be decrypted on this device, ever, so drop the item.
ks_crypt: %x failed to '%@' item (class %d, bag: %d)
decrypt
delete
aks_ref_key: %x failed to '%s' item (class %d, bag: %d) Access to item attempted while keychain is locked.
aks_ref_key: %x failed to '%s' item (class %d, bag: %d) Item can't be decrypted on this device, ever, so drop the item.
aks_ref_key: %x failed to '%s' item (class %d, bag: %d)
aks_ref_key: failed to create ref key with blob: %x (bag: %d)
enabled
disabled
KeychainKeyDiversification
encrypted_data_from_blob: NULL 'blob data'
encrypted_data_from_blob: Bad object type %@ for 'blob data'
encrypted_data_from_blob: failed to decode 'encrypted data'
encrypted_data_from_blob: failed to decode 'key data'
object %@ is not a data
SecMockAKS
0123456789abcdf
1234567890123456789012345678901
keybagHandle
access_groups
external_data
acm_handle
logging
com.apple.securityd
security scope control
Emergency
Alert
Critical
Error
Warning
Notice
Info
Debug
none
null input
Unknown data encoding, expected CCDER_CONSTRUCTED_SET
Failed to create dictionary
Unknown data encoding, expected CCDER_CONSTRUCTED_SEQUENCE
debug
null
v24@?0Q8*16
yyyy-MM-dd HH:mm
Date Formatting
v16@?0^{__CFDateFormatter=}8
%@%@
ZuluCalendar
Invalid universal time year between 50 and 70
Failed to create utc date
Failed to create date
setting default value
continuing
Not a decimal digit
Unexpected end of datetime
trailing garbage at end of datetime
overflow
fraction ends in 0
fraction without digits
Invalid datetime character
yMdHms
v16@?0^{__CFCalendar=}8
Failed to encode date.
Invalid date: %i, %i, %i, %i, %i, %i, %i
com.apple.utilities.sqlite3
%@: [%d]%@ %s
%@: [%d->%d]%@ %s
%@: [%d] %s sql: %s
%@: [%d->%d] %s sql: %s
SecDb
%@-commit
__OSINSTALL_ENVIRONMENT
#SecDB
file::memory:?cache=shared
SecEmergency
Error with unexecuted sql remaining %@
pragma page_count
pragma freelist_count
pragma incremental_vacuum(%d)
SecDbStep SQLITE_ROW returned without a row handler
wal_checkpoint(FULL)
B16@?0^{__OpaqueSecDbConnection={__CFRuntimeBase=QAQ}^{__OpaqueSecDb}BBQBiB^{__CFError}^{sqlite3}^{__CFArray}}8
bind_blob[%d]: blob bigger than INT_MAX
bind_blob[%d]
bind_text[%d]: text bigger than INT_MAX
bind_text[%d]
bind_double[%d]
bind_int[%d]
bind_int64[%d]
v24@?0r*8Q16
bind CFNumberGetValue failed for %@
bind unsupported type %@
reset
finalize: %p
prepare_v2: sql bigger than INT_MAX
preparev2
prepare_v2: %@ unused sql: %@
SecDbWithSQL perform block missing
step[%d]: %s returned SQLITE_ROW with NULL row block
SecDbForEach step[%d]
SecDbConnection
invalid entry in changes array: %@
<SecDb path:%@ connections: %@>
step
BEGIN EXCLUSIVE
BEGIN
invalid transaction type %d
ROLLBACK
SQL DB %@ is corrupted already. Corruption error was: %d (previously %d)
/Library/Keychains/keychain-2.db
/Library/Keychains/ocspcache.sqlite3
/Library/Keychains/TrustStore.sqlite3
/Library/Keychains/caissuercache.sqlite3
PRAGMA integrity_check
NULL
Unable to process corruption marker: %{darwin.errno}d
%s-iscorrupt
mkpath_np %s: [%d] %s
open_v2 "%s" 0x%X
PRAGMA auto_vacuum
PRAGMA auto_vacuum = incremental
VACUUM
PRAGMA journal_mode = WAL
SQLProfile
SecDbHandleCorrupt not allowed to repair, handled error: [%d] %s
<SecDbConnection %s %s>
open
closed
com.apple.security.cfder.error
ccder failed to encode
Unknown number encoding
Number too large
Number allocation failed
Unable to get number from data
Unknown size
%@: [%d] %s
invalid tag
Unsupported DER Type
Null CFType
Unsupported CFType
trailing garbage after plist item
tag/length decode failed
Unknown string encoding
String allocation failed
Unknown numeric string encoding
Numeric string allocation failed
String extraction failed
Unknown boolean encoding
Unknown data encoding
Failed to create data
Unknown CoreEntitlements encoding
Failed to create CoreEntitlements data
v24@?0@8^B16
{[%@]}
Unknown null encoding
Unknown data encoding, expected CCDER_CONSTRUCTED_CFSET
Failed to create set
com.apple.will.never.happen
%@/%@
Library/Keychains
/System/Library/PrivateFrameworks/CrashReporterSupport.framework/CrashReporterSupport
/System/Library/PrivateFrameworks/CrashReporterSupport.framework/Contents/MacOS/CrashReporterSupport
BOOL soft_SimulateCrash(pid_t, mach_exception_data_type_t, NSString *__strong)
simulate_crash.m
SimulateCrash
void *CrashReporterSupportLibrary(void)
BOOL soft_WriteStackshotReport(NSString *__strong, mach_exception_data_type_t)
WriteStackshotReport
com.apple.security.xpc
domain
code
userinfo
NextTTRDate
com.apple.security.diagnostic-queue
606179
%@-%@
secttr
SecTTR
UNKNOWN
DISABLED
ENABLED
FOLLOWING
(unknown: %i)
uuid
zoneName
keyclass
peerID
icloudAccountState
epoch
altDSID
trustState
lastHealthCheckup
attemptedJoin
cdpState
syncingPolicy
voucher
voucherSignature
tlkSharesForVouchedIdentity
secureElementIdentity
isInheritedAccount
warmedEscrowCache
warnedTooManyPeers
settings
NO_ACCOUNT
ACCOUNT_AVAILABLE
ACCOUNT_AVAILABLE_UNUSED
UNTRUSTED
TRUSTED
NOTATTEMPTED
ATTEMPTED
proceed-with-ckks-keys
CKKSResultOperationError
octagon-local-reset
webAccess
enableKeychainBackupDevelopment
loggedout
wait_for_ck_account_status
lose_trust
waitfortrust
initializing
initialized
zonecreationfailed
fixup_fetch_cip
fixup_fetch_tlkshares
fixup_local_reload
fixup_resave_cdse
fixup_delete_tombstones
begin_fetch
fetching
fetchcomplete
needrefetch
process_key_hierarchy
check_zone_hierarchies
provide_key_hieararchy
provide_key_hieararchy_untrusted
heal_tlk_shares
healtlksharesfailed
tlkmissing
unhealthy
resetzone
resetlocal
ready
become_ready
process_incoming_queue
class_a_incoming_items_remaining
scan_local_items
reencrypt_outgoing_items
process_outgoing_queue
process_outgoing_queue_failed
handle_all_views
trusted_peers_changed
ck_account_logged_in
ck_account_logged_out
trusted_operation_begin
trusted_operation_end
ck_change_token_expired
ck_zone_missing
device_unlocked
fetch_requested
fetch_complete
key_process_requested
key_set
dropped_items
item_reencryption_needed
24_hr_notification
check_queues
policy_fresh
oqo_token
new_priority_views
INSERT OR REPLACE into %@ (%@) VALUES (%@);
 WHERE 
 AND 
%@%@(?)
%@%@%@
%@ IN (%@)
%@=(?)
 GROUP BY 
 ORDER BY 
DELETE FROM %@%@;
 LIMIT %lu
SELECT %@ FROM %@%@%@%@%@;
, %@
SELECT %@ FROM %@%@
ckkssql
%@ does not exist in database where %@
A subclass must override %@
parentKeyUUID
buckets
rateAll
rateGroup
rateUUID
capacityAll
capacityGroup
capacityUUID
trimSize
trimTime
overloadDuration
G:%@
U:%@
B32@?0@"NSString"8@"NSDate"16^B24
RateLimiter config: %@
Overloaded until %@, %lu total buckets
Not overloaded, %lu total buckets
%lu congested buckets. Top offenders: 
%@ range %@ to %@
No buckets congested
nothing_to_do
trigger_cloudservices
trigger_escrow_upload
wait_for_unlock
EscrowRequestControllerQueue
wait-for-unlock
escrow-request-cache-cert
escrow-request-attempt-escrow-upload
trigger-escrow-store
SIMULATOR_MODEL_IDENTIFIER
SerialNumber
OTDeviceInformationActualAdapter
v16@?0@"<OTDeviceInformationNameUpdateListener>"8
available
no account
ck-account-state
ckksaccount
ckstatus-refetch
<%@: %@, hsa2: %@>
ck-account-state-%@
ckksaccount-ck
v24@?0@"CKAccountInfo"8@"NSError"16
ckks-sos
ckksaccountblock
account state unknown
logged in
v44@?0q8@"NSString"16@"NSNumber"24B32@"NSError"36
<SOSStatus: %@ (%@)>
<CliqueStatus: %@>
ERSPending
escrow
complete
escorwrequest-healthSummary
com.apple.security.cdkeychain
LookupEntry
Item
ItemType
AccessControlEntity
SecCDKeychainLookupValueTypeString
SecCDKeychainLookupValueTypeData
SecCDKeychainLookupValueTypeNumber
SecCDKeychainLookupValueTypeDate
SecCDKeychainItemCiphertext
SecCDKeychainItemWrappedKey
SecCDKeychainItemRefKeyBlob
failed to deserialize wrapped secret data
SecCDKeychain
com.apple.security.securityd
com.apple.security.keychain.ak
failed to create random key for CD database encryption
failed to save encryption key to keychain, so bailing on database creation
can't create a class A store right now because the keychain is locked
result of keychain query for database key is wrong kind of class: %@
failed to save or retrieve key for CD database encryption
unknown error retrieving managed object context
SecCDKeychain-PrimaryKey-%@
client not in access group: %@
keychain item missing access group
attempt to insert items into deallocated keychain instance
insertItems: could not get managed object context
lookupKey == %@ AND lookupValue == %@
failed to unique item (%@) using primary keys: %@
lookupKey == %@ AND lookupValueType == %@ AND lookupValue == %@
v24@?0@"NSManagedObjectContext"8@"NSError"16
persistentID == %@
attempt to fetch item from deallocated keychain instance
fetchItemForPersistentID: could not get managed object context
did not find any keychain items matching persistent ID: %@
attempt to lookup items from deallocated keychain instance
fetchItemsWithValue: could not get managed object context
did not find any keychain items matching query
deleteItemWIthPersistentID: could not get managed object context
attempt to delete item with persistant identifier that could not be found: %@
failed to deserialize SecCDKeychainItemMetadata with item type (%@) persistentID: %@ owner: %@
%@: itemType:(%@) owner:(%@) persistentID:(%@)
 attributes: %@
 lookup attributes: %@
could not create SecCDKeychainItem from managed item - managed item was malformed
could not decrypt secrets for item
%@: itemType:(%@) persistentID:(%@)
 owner: %@
 attributes: %@
 lookup attributes: %@
primaryKeys: %@
q24@?0@"NSString"8@"NSString"16
failed to create random key for encrypting item
failed to serialize item secrets dictionary
failed to encrypt item secret data
failed to create refKey
failed to encrypt item
failed to serialize item secret data blob
failed to create refKey for unwrapping item secrets
%@ : %@ [%@]
%@ | %d
 name: %@
 version: %d
 primaryKeys: %@
 syncableKeys: %@
<OctagonSelfPeer: %@>
[OctagonCKKSPeerAdapter:%@]
<OctagonCKKSPeerAdapter: %@ e:%d>
v16@?0@"_SFKeychainIdentityFetchResult"8
signing-key %@
encryption-key %@
no peer ID present
v16@?0@"<CKKSPeerUpdateListener>"8
Rate-limited the OTCheckHealthOperation:%@
v40@?0B8B12B16B20@"OTEscrowMoveRequestContext"24@"NSError"32
processOutgoingQueue
processIncomingQueue
TLKShareProcessing
scanLocalItems
fetchAllChanges
reencryptOutgoing
zone
count
access-group-missing
accessgroup
items
store
metadata_rampstate_ghostBustMID
metadata_rampstate_ghostBustSerial
metadata_rampstate_ghostBustAge
metadata_zone
otmanager
ghostBustMID
ghostBustSerial
ghostBustAge
Octagon APIs do not support non-primary users
com.apple.TrustedPeersHelper
octagon-client
No context for (%@,%@)
v56@?0@"NSString"8@"NSData"16@"NSData"24@"NSData"32@"NSData"40@"NSError"48
Octagon-healthSummary
octagon-analytics
%@%@Tries
CFU-healthSummary
octagon-recovery
Device is considered a limited peer, cannot enroll recovery key in Octagon
malformed recovery key
octagon-custodian-recovery
v24@?0@"OTCustodianRecoveryKey"8@"NSError"16
Device is considered a limited peer, cannot remove recovery key in Octagon
octagon-inheritance
v24@?0@"OTInheritanceKey"8@"NSError"16
Device is considered a limited peer, cannot remove inheritance key in Octagon
octagon-cdp
octagon-fetch-escrow-records
octagon-remove-escrow-cache
octagon-remove-escrow-caches
octagon-user-controllable-views
paused
octagon-reset-account-cdp-contents
SecureBackup
Class getSecureBackupClass(void)_block_invoke
OTManager.m
Unable to find class %s
void *CloudServicesLibrary(void)
/System/Library/PrivateFrameworks/CloudServices.framework/CloudServices
/System/Library/PrivateFrameworks/CloudServices.framework/Contents/MacOS/CloudServices
CKKSGroupOperationDispatchQueue
ckksgroup
group-start
group-finish
group-queue:%@
group-start:%@
group-finish:%@
<%@: %@ recursion>
<%@: %@ %@ - %@>
<%@: %@ %@>
Potentially more than 20 operations
<%@: %@ [%@] error:%@>
<%@: %@ [%@]%@>
 dep:
isFinished
isExecuting
Attempt to add operation(%@) to completed group(%@)
UUID
ckzone
ckrecord
entryDigests
ckmanifest_leaf
%@ %@ records: %lu
ckksmanifest
v32@?0@"NSMutableDictionary"8@"NSString"16@24
ManifestLeafRecord%@%@
CKKSManifestLeafRecord.m
failed to encode manifest leaf node DER with error: %@
pending_manifest_leaf
WrongCKRecordTypeException
CKRecordType (%@) was not %@
ckksitem
WrongEncryptionVersionException
%d is not a known encryption version
server_
<%@: %@>
<%@: %@ %p>
encitem
wrappedkey
gencount
encver
pcss
pcsk
pcsi
ckksresync
Received a record(%@) with a bad generation count (%ld > %@)
%@-fake-%@
spid-
ckme
null error passed in
Unrecognized encryption version: %lu
v_Data
Could not remove padding from decrypted item: malformed data
ckkszone
handle-modification
<%@(%@): %@ %@ (%@)>
ckks-key
can't pick a key class for an empty item
can't pick key class for protection %@
No key for item
Couldn't create object plist
No UUID for item
UUID not found in object
accessgroup not found in object
no-group
Couldn't create an item
Couldn't encrypt item
state
outgoingqueue
action
waituntil
count(rowid)
count(*)
ckksoutgoing
incomingqueue
ckkskey
ckksheal
keyClass
backupWrappedMetadataKey
generic password query failed
internet password query failed
certificate query failed
scanning %d %@
v24@?0^v8@"NSString"16
com.apple.security.keychainhealth
encountered %d errors searching for corrupted items
searchingErrorCount
failed to delete corrupted item
encountered %@ errors searching for corrupted items and %d errors attempting to delete corrupted items
incoming-queue-operation
ckkspointer
ckksincoming
Item did not have a reasonable class: %@
incoming-queue-response
non-onboarded
com.apple.ckks.item.propagation
time
modifyRecordsComplete
Manifest:-:
ManifestLeafRecord:-:
v36@?0@"NSString"8@"TPSyncingPolicy"16B24@"NSError"28
v48@?0@"NSData"8@"NSData"16@"NSArray"24@"TrustedPeersHelperTLKRecoveryResult"32@"NSError"40
join-sos-after-fetch
<CKKSTLKShareCore(%@): recv:%@ send:%@>
Peer(%@) has no signing key
No TLK share from %@
zoneID
curve
tlkUUID
senderPeerID
poisoned
wrappedTLK
signature
receiverPeerID
receiverSPKI
No trusted peer signed %@
Signed UUID doesn't match unsigned UUID for %@
inflight
reencrypt
deleted
mismatched_view
classA
classC
com.apple.security.keychain
com.apple.securityd.aps
uploadver
parentkeyref
pcsservice
pcspublickey
pcspublicidentity
server_wascurrent
synckey
class
tlkshare
sender
receiver
receiverPublicEncryptionKey
currentkey
currentitem
devicestate
octagonpeerid
octagonstatus
peerid
keystate
currentTLK
currentClassA
currentClassC
lastunlock
osver
digest_value
generation_count
leaf_records
peer_manifests
current_items
signatures
signer_id
schema
manifest_leaf
readypendingunlock
waitfortlk
waitfortlkcreation
waitfortlkupload
waitforunlock
badcurrentpointers
newtlksfailed
healtlkshares
check_tlk_shares
CKKSErrorDomain
CKKSServerExtensionErrorDomain
com.apple.security.ckks.pkconflict
com.apple.security.ckks.reencrypt
tv(sim)
kern.osrelease
kern.osversion
%s (%s)
Version
value
<CKKSZoneStateEntry(%@): created:%@ subscribed:%@ moreRecords:%@>
ckstate
ckzonecreated
ckzonesubscribed
changetoken
lastfetch
ratelimiter
lastFixup
morecoming
lastscan
extra
com.apple.private.escrow-update
com.apple.security.escrow-update
some
string_value
double_value
date_value
error_value
bagIdentity
sos adapter not enabled
failed to retrieve current self
RLgroups
RLoverLoadedUntil
RLlastJudgment
RLassetType
RLconfig
DisableKeychainRateLimiting
general
maxItemAge
maxStateSize
groups
property
name
badness
capacity
rate
RateLimiter[%@]
config:%@
groups:%@
overloaded:%@
lastJudgment:%@
accessGroup
RLoverloadedUntil
zone:
[OTSOSActualAdapter]
v12@?0i8
<OTSOSActualAdapter e:%d>
Not in SOS circle, but no error returned
No SOS peer info available, but no error returned
Not all SOS peer keys available, but no error returned
v32@?0^{__SecKey={__CFRuntimeBase=QAQ}^{__SecKeyDescriptor}^v}8^{__SecKey={__CFRuntimeBase=QAQ}^{__SecKeyDescriptor}^v}16^{__CFError=}24
v24@?0^{__CFSet=}8^{__CFError=}16
v16@?0^{__CFError=}8
supported
not supported
[OTSOSMissingAdapter]
SOS unsupported on this platform
establish-with-keys
v40@?0@"NSString"8@"NSArray"16@"TPSyncingPolicy"24@"NSError"32
determine-next-state
Key hierarchy has split: %@ and %@ are roots
Invalid TLK from CloudKit (during heal)
heal-cloudkit-modify-operation-finished-%@
<CKKSCurrentItemPointer(%@) %@: %@>
WrongCKRecordNameException
CKRecord name (%@) was not %@
identifier
currentitems
currentItemUUID
ckksviews
ckksfetch
CloudkitKeychainService
ckks-resync-local
resync-step%u-outgoing
resync-step%u-incoming
resync-step%u-reload
resync-step%u-incoming-again
resync-step%u-scan
resync-step%u-consider-restart
resynchronization restarted too many times; churn in database?
v64@?0@"NSString"8@"NSData"16@"NSData"24@"NSData"32@"NSData"40@"TPSyncingPolicy"48@"NSError"56
com.apple.security.octagon
Octagon Account State (%@,%@)
octagon-%@
SecItemUpdate: %d
SecItemAdd: %d
SecItemDelete: %d
SecItemCopyMatching: %d
couldn't deserialize account state
recoveryType
wrappedBagSecret
wrappedKCSKSecret
wrappedRecoveryKey
<CKKSCurrentKeyPointer(%@) %@: %@>
currentkeys
currentKeyUUID
<CKKSCurrentKeySet(%@): %@:%@ %@:%@ %@:%@ new:%d %@>
<CKKSCurrentKeySet(%@): %@:%@ %@:%@ %@:%@ new:%d>
unable to make keychain backed set; key is missing
metric_type
device_info
cloudkit_info
server_info
triggers
report_frequency
report_frequency_base
network_event
generic_event
none_type
network_event_type
generic_event_type
com.apple.private.ckks
ckksdevice
no AccountTracker object
CK device ID missing
Rate-limited the CKKSUpdateDeviceStateOperation
updateDeviceState-modifyRecordsComplete
ciphertext
wrappedKey
tamperCheck
near-future-scheduler-%@
nfs-%@
yyyy-MM-dd HH:mm:ss
<CKKSNearFutureScheduler(%@): next at %@
<CKKSNearFutureScheduler(%@): no pending attempts
com.apple.securityd.%@
OTBottledPeer
OTFailureReason
com.apple.security.trustedpeers.container
<%@(%@): %@>
ckmirror
wascurrent
v16@?0@"NSDictionary"8
<OctagonFlags: %@>
OctagonFlags.m
state machine tried to handle unknown flag %@
setting-recovery-tlks
Failed to parse UUID from TPH
v32@?0@"NSArray"8@"TrustedPeersHelperCustodianRecoveryKey"16@"NSError"24
<CKAccountInfo: %@>
<CKKSSelves: %@ %@>
(no past selves)
<CKKSActualPeer(%@): pubEnc:%@ pubSign:%@ views:%d>
encryptionKey
signingKey
viewList
<CKKSSOSPeer(%@): pubEnc:%@ pubSign:%@ views:%d>
spid
<CKKSSOSSelfPeer(%@): pubEnc:%@ pubSign:%@ views:%d>
type
timestamp_start
timestamp_end
metric
cloudkit
cloudkit_client
server
publicKey
aksRefKey
aksWrappedKey
backupWrappedKey
reduce-rate-limiting
ckks-resync
resync-step%u-fetch
run-incoming
v16@?0@"CKKSGroupOperation"8
com.apple.securityd.ckks
key-set-provided
key-set-queue
%@ must override %@
change array count: %ld
SOSChangeTracker
ChangeTracker is not concrete
tracker
<ChangeTracker %@ children %ld/%ld>
NonConcrete
cdp-finish
unknown-local-passcode
ckksscan
^%@$
^com\.apple\.cfnetwork$
com.apple.cfnetwork
^com\.apple\.safari\.credit-cards$
com.apple.safari.credit-cards
v16@?0^{SecDbItem={__CFRuntimeBase=QAQ}^{SecDbClass}iii^{__CFDictionary}^{__CFData}^v^{__CFArray}}8
com.apple.securityd.ckks.scan
scan-local-items
ckks-local-reset
local-reset
record-zone-changes-completed
No clients want a fetch right now
v24@?0@"CKRecordID"8@"NSString"16
v32@?0@"CKRecordZoneID"8@"CKServerChangeToken"16@"NSData"24
v44@?0@"CKRecordZoneID"8@"CKServerChangeToken"16@"NSData"24B32@"NSError"36
ckksfetcher
APNSPushMetrics
push_token_uuid
push_received_date
CKKS Push
push_event_name
fetch_error
fetch_error_domain
fetch_error_code
total_modifications
total_deletions
CKKS Push-webtunnel
submit-metric
v32@?0@"CKRecordID"8@"CKRecord"16^B24
v32@?0@"CKRecordID"8@"CKKSCloudKitDeletion"16^B24
<OSTPath(%@)>
watcher-%@
watcher-timeout-%@
<OctagonStateTransitionWatcher(%@): remaining: %@, result: %@>
Operation(%@) timed out waiting to start for [%@]
state became %@, was expecting %@
intended
became
<OctagonStateMultiStateArrivalWatcher(%@): states: %@, result: %@>
Operation(%@) timed out waiting to start for any state in [%@]
continue-ckks-resets
wait-for-ckks-reset
v24@?0@"TrustedPeersHelperPeerState"8@"NSError"16
ckks-logger
com.apple.security.ckks
v32@?0@"NSString"8@"TPSyncingPolicy"16@"NSError"24
com.apple.security.keychain.backups
baguuid
platform doesn't do backups
otcuttlefish
com.apple.octagon.launch
com.apple.security.otcuttlefishcontext
octagon-tlk-request
octagon-policy-check
octagon-upgrade-ucv
octagon-retry-fixup
Trusted
Untrusted
iCloudAccount
octagon-ucv
<OTCuttlefishContext: %@, %@>
v16@?0@"NSError"8
cloudkit-account-gone
check-trust-state
octagon-account-gone
account-not-available
octagon-cdp-status
resetting-state-machine
local-reset-watcher
establish
rpc-reset-and-establish
octagon-leave-clique
leave-clique
remove-friends
octagon-pairing
hsa2-check
ck-available
uninitialized
cdp_enabled
cdp_enabled_push_received
fixups-complete
begin-reset
account-probably-present
attempt-sos-upgrade
untrusted-update
move-to-initializing
no-consistency-checks
no-preload-octagon-key
moving-to-enable-cdp-bit
initializing-after-initial-unlock
initializing-after-unlock
octagon-update
ckks-assist
attempt-sos-update-preapproval
attempt-user-view-upgrade
ckks-policy-update
ckks-update-trust
octagon-set-secureelement
octagon-initializing
octagon-fixup_check
octagon-health-securityd-trust-check
octagon-health
octagon-health-tph-trust-check
v36@?0q8B16B20B24@"NSError"28
rpcHealthCheck
octagon-health-post-repair-cfu
octagon-icloud-account-available
octagonpush
v48@?0q8@"NSString"16@"NSDictionary"24B32B36@"NSError"40
iPhone
iPad
octagon-become-untrusted
octagon-inherited
octagon-ready
aps-push-ratelimiter
octagon-push-ratelimited
octagon-devicename
sos-consistency-ratelimiter
octagon-ck
present
missing
Cannot determine iCloud Account state; try again later
User is not signed into iCloud.
prepareForApplicant
rpcPrepare-callback
rpc-join-with-bottle
rpc-join-with-recovery-key
rpc-join-with-custodian-recovery-key
preflight-custodian-recovery-key
rpc-join-with-inheritance-key
preflight-inheritance-recovery-key
rpc-join
signingSPKI
signingSPKIHash
currentSelf
pastSelves
containerName
contextID
stateUnpaused
statePendingFlags
stateFlags
memoizedTrustState
memoizedAccountState
memoizedCDPStatus
octagonLaunchSeqence
Never checked
memoizedlastHealthCheck
sosTrustedPeersStatus
sosSelvesStatus
escrowRequest
CoreFollowUp
lastOctagonPush
pushEnvironments
contextDumpError
contextDump
self
bottleID
bottles
peers
dynamicInfo
included
stableInfo
device_name
setRecoveryKey-callback
createCustodianRecoveryKey-callback
removeCustodianRecoveryKey-callback
createInheritanceKey-callback
storeInheritanceKey-callback
removeInheritanceKey-callback
v24@?0@"TrustedPeersHelperEgoPeerStatus"8@"NSError"16
v40@?0@"NSData"8@"NSString"16@"NSData"24@"NSError"32
octagon-refetch-ckks-policy
Sync policy is missing even after refetching
This platform does not support setting the user-controllable view syncing status
octagon-se
walrus
No account settings have been set
wait-for-sync-reply
v32@?0@"NSString"8@"NSString"16^B24
octagon-tlk-recoverability
Record's bottleID is not valid in cuttlefish
Octagon peerID not trusted for record
v16@?0@"NSString"8
Record cannot recover any views
OctagonEscrowMove
OctagonEscrowMoveUnthrottled
Not performing health check, waiting for Class C Unlock
octagon-trust-health-check
Not in circle
sos-upgrade-to-ready
octagon-metrics
unlock
Unknown conditions: 0x%x
<OctagonPendingFlag: %@: %@>
<OctagonPendingFlag: %@: %@ %@>
octagon-inheritor
v80@?0@"NSString"8@"NSData"16@"NSData"24@"NSData"32@"NSData"40@"TPSyncingPolicy"48@"NSString"56@"NSArray"64@"NSError"72
v32@?0@"NSArray"8@"TrustedPeersHelperTLKRecoveryResult"16@"NSError"24
engine-state-v2
engine-peer-states
engine-manifest-cache
engine-coders
SOSEngine queue
SOSEngine
trailing %td bytes at end of state
engine-sync
v16@?0^{__OpaqueSOSTransaction=}8
Engine has no peer for %@
v16@?0^{__OpaqueSOSPeer=}8
engineLogState
<Engine %@ peers %@ MC[%d] PS[%d]>
object %@ is not an array
-tomb
engine-state
manifestCache
peerState
peerIDs
traceDate
 %@ (%@)
com.apple.sbd
SecureBackupPublicKeybag
SecureBackupService
B64@?0^{__OpaqueSOSChangeTracker=}8^{__OpaqueSOSEngine={__CFRuntimeBase=QAQ}^{SOSDataSource}^{__CFString}^{__OpaqueSOSManifest}^{__CFData}^{__CFDictionary}^{__CFDictionary}^{__CFDictionary}^{__CFDictionary}^{__CFArray}^{__CFDate}^{__CFDictionary}BB@@@@?B}16^{__OpaqueSOSTransaction=}24Q32Q40^{__CFArray=}48^^{__CFError}56
Execution has encountered an unexpected state
 trusted
B72@?0^{__OpaqueSOSChangeTracker=}8^{__OpaqueSOSEngine={__CFRuntimeBase=QAQ}^{SOSDataSource}^{__CFString}^{__OpaqueSOSManifest}^{__CFData}^{__CFDictionary}^{__CFDictionary}^{__CFDictionary}^{__CFDictionary}^{__CFArray}^{__CFDate}^{__CFDictionary}BB@@@@?B}16^{__OpaqueSOSTransaction=}24Q32Q40^{__OpaqueSOSManifest=}48^{__OpaqueSOSManifest=}56^^{__CFError}64
 untrusted
no change tracker for view set %@
v48@?0^{SOSDataSource=^{__OpaqueSOSEngine}^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?}8^{__OpaqueSOSTransaction=}16Q24Q32^{__CFArray=}40
peer: %@ is untrusted inflating not allowed
peer: %@ not found
com.apple.security.secureobjectsync.itemtime.known
com.apple.security.secureobjectsync.itemtime.new
will-commit
did-commit
did-rollback
unknown
com.apple.security.sos
apple
AirPort
%@-tomb
PCS-
ViewNotificationQueue
view
com.apple.security.view-change.%@
%02X
object %@ is not a string
in SOSPeerWriteDelete
dropping from manifest: not found in datasource
dropping from manifest
in SOSDataSourceForEachObject
in SOSPeerWriteAdd
 notifying sbd
writing changes to backup
No coder for peer: %@
Coders not loaded.
Wrong key size
Circular reference in key hierarchy
No current trust states; can't unwrap TLK
Potential TLK %@ doesn't wrap itself: %@
%@-nonsync
%@-piggy
<%@(%@): %@ (%@,%@:%d)>
synckeys
Data failed to parse as a CKKSSerializedKey
newtlks
CKKS APIs do not support non-primary users
CKKS-healthSummary
manager
@"NSDictionary"8@?0
CKKS-%@-healthSummary
%@-daysSinceClassASync
%@-daysSinceClassCSync
%@-daysSinceLastKeystateReady
metrics
CKKS global zone state
ckkstests
ckkscallback
No iCloud account available; item is not expected to sync
No syncing view for %@, %@
ckksbackup
rpc-resync-cloudkit
rpc-resync-local
CKKS disabled
rpc-fetch-and-process-result
rpc-push
ckks-rpc
No metric name
No CKKS for %@, %@
v40@?0@"CKKSExternalKey"8@"NSArray"16@"NSArray"24@"NSError"32
com.apple.security.CKKSHealthSummary
periodic-device-state-update
v28@?0@"TPSyncingPolicy"8i16@"NSError"20
TamperCheck
failed to deserialize keychain item blob
SecDbKeychainItemV7.m
Invalid parameter not satisfying: %@
failed to unwrap item metadata key
failed to decrypt item metadata contents
tamper check failed for metadata decryption
error decrypting item secret data contents
KeyDiversify
SecDbKeychainItemV7: failed to decode acl dict
SecDbKeychainItemV7: failed to decrypt item, Item can't be decrypted due to failed decode der, so drop the item.
reachabiltity-tracker
ckksnetwork
unavailable
v16@?0@"NSObject<OS_nw_path>"8
<CKKSReachabilityTracker: %@>
online
offline
network
network-available-dependency
Can't find attribute of kind %d in class %@
attr %@ has no default value
attribute %@ has NULL value
error == NULL
state= encrypted but edata is NULL
SecDbItem
attribute %@: value: %@ failed to convert
secitem
NULL value in dictionary
 IN (
 NOT IN (
persistent ref %@ is not a data
rowid %@ is not a 64 bit number
no rowid for %@
insert
SELECT 
 FROM 
, |otherAttr
tomb
%s,%@,%02X%02X%02X%02X,%s,%@,%@,%lld%@,%s,%s%02X%02X%02X%02X
v_pk
%04lx:
...|%08llx
secd-hash-name
INSERT INTO 
)VALUES(?
failed to get attribute %@ data
Corrupted item found in keychain
Corrupted item (attr NULL) found in keychain
UPDATE 
 SET 
DELETE FROM 
v24@?0@"NSString<OctagonStateString>"8^B16
%@-pending-flag
initialize
 (pending: %@)
<OctagonStateMachine(%@,%@,%@)>
OctagonStateMachine.m
state machine tried to enter unknown state %@
halt
octagon-state-follow-up
(no error)
pending-flag
Must have a lock state tracker to wait for unlock
Must have a network reachability tracker to use network reachability pending flags
test
state-rpc
%@-callback
intial-transition-%@
ks_encrypt_data: invalid plain text
ks_encrypt_data: SecRandomCopyBytes failed
ks_encrypt_data: CCCryptorGCM failed: %d
ks_encrypt_data: CCCryptorGCM expected: 16 got: %ld byte tag
SecAccessControl
ks_decrypt_data: invalid blob
ks_decrypt_data: Check for underflow (length)
ks_decrypt_data: Check for underflow (prot_length)
ks_decrypt_data: Check for underflow (prot)
ks_decrypt_data: invalid ACL
ks_decrypt_data: Check for underflow (keyclass)
ks_decrypt_data: invalid keyclass detected
ks_decrypt_data: SecAccessControlCreate failed
ks_decrypt_data: SecAccessControlSetProtection failed
ks_decrypt_data: Check for underflow (wrapped_key_size)
ks_decrypt_data: invalid version %d
ks_decrypt_data: Check for underflow (wrapped_key/taglen)
ks_decrypt_data: Check for underflow (CBC check)
ks_decrypt_data: invalid length on CBC data
ks_decrypt_data: failed to allocate data for plain text
ks_decrypt_data: CCCryptorGCM failed: %d
ks_decrypt_data: CCCryptorGCM expected: 16 got: %ld byte tag
ks_decrypt_data: CCCryptorGCM computed tag not same as tag in blob
ks_decrypt_data: CCCrypt failed: %d
r*48@?0^{__CFAllocator=}8r^^v16^^{__CFError}24r*32r*40
version is unexpected: %d
item's access group '%@' not in %@
ACL protection doesn't match the one in blob (%@ : %@)
No v_Data in backup dictionary %@
No v_PersistentRef in backup dictionary %@
v_PersistentRef %@ failed to decode
v_PersistentRef has unexpected class %@
backupUUID
Corrupted item on decrypt accc != pdmn
non-device keybag
accessible attribute %@ not a string
accessible attribute %@ unknown
plist is a %@, expecting a dictionary
trailing garbage at end of decrypted item
Null DER
com.apple.airplay.password
YouTube
com.apple.youtube.credentials
IPSec Shared Secret
PPP Password
PrintKitAccessGroup
<CKKSListenerCollection(%@): %@>
octagon-sos
after-update
sos-upgrade-with-keys
q_pairs overflow
Missing class
Past query key limit
Out of memory
clip
conflicting kSecAccess and kSecAccessControl attributes
kSecAccessControl missing protection
com.apple.apsd
update_applier: unknown key type %@
update_applier: key %@ has NULL value
set_data: value %@ is not type data
can't find class named: %@
query missing class name
applier: NULL key
applier: key %@ has NULL value
applier: key %@ invalid
applier: key %@ invalid length
applier: key %@ neither string nor number
add_class: key %@ is not %@
can find class named: %@
failed to convert match limit %@ to CFIndex
unsupported match limit %@
unsupported value for kSecMatchPolicy attribute
unsupported kSecMatchPolicy object in query
unsupported array of policies
unsupported value for kSecMatchValidOnDate attribute
unsupported value for kSecMatchTrustedOnly attribute
add_return: value %@ is not CFBoolean
add_return: unknown key %@
u_ItemList
add_use: value %@ for key %@ is neither CFBoolean nor CFNumber
add_use: value %@ for key %@ is not CFData
add_use: value %@ for key %@ is not CFString
add_use: unknown key %@
add_value: value %@ is not a valid persitent ref
add_value: unknown key %@
set_uuid_persistent_ref: value %@ is not type data
result-operation-timeout
finished %@
cancelled
executing
pending
<%@: %@ error:%@>
<%@: %@%@>
resultoperation
B32@?0@8Q16^B24
CKKSResultOperationDescriptionError
Excess recursion
Success-dependent operation failed
Operation (%@) cancelled
signerID
CKKSManifestDigestKey
CKKSManifestPeerManifestsKey
CKKSManifestCurrentItemsKey
CKKSManifestGenerationCountKey
CKKSManifestSchemaVersionKey
CKKSManifestEC384SignatureKey
CKKSManifestErrorDomain
/System/Library/Frameworks/Security.framework
CKKSLogging
plist
SyncManifests
EnforceManifests
v24@?0@"_SFECKeyPair"8@"NSError"16
v24@?0@"NSString"8@"NSError"16
q24@?0@"CKKSManifest"8@"CKKSManifest"16
v32@?0@"CKKSManifest"8Q16^B24
leafIDs
peerManifests
currentItems
futureData
ckmanifest
v32@?0@"NSString"8@"NSData"16^B24
Manifest%@%@%@%@%@%lu
v32@?0@"NSString"8@16^B24
could not find manifest public key for peer %@
could not validate item because the digest is invalid
could not validate current item because the UUID does not match the manifest
pending_manifest
failed to generate ego manifest because egoPeerID is nil
failed to generate ego manifest
%@ peerID: (%@)
v24@?0^{__SecKey=}8^{__CFError=}16
v32@?0@"NSString"8@"CKKSManifestInjectionPointHelper"16^B24
<CKKSPeerProviderState(%@): %@%@ %@%@>
No current self peer available
No current trusted peers available
Key unwrap failed
No trusted peers
No trusted TLKShares for %@
v24@?0^{__OpaqueSOSTransaction=}8^{__OpaqueSOSPeer=}16
v24@?0^{SOSDataSource=^{__OpaqueSOSEngine}^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?}8^{__OpaqueSOSEngine={__CFRuntimeBase=QAQ}^{SOSDataSource}^{__CFString}^{__OpaqueSOSManifest}^{__CFData}^{__CFDictionary}^{__CFDictionary}^{__CFDictionary}^{__CFDictionary}^{__CFArray}^{__CFDate}^{__CFDictionary}BB^{dispatch_queue_s}^{dispatch_source_s}^{dispatch_queue_s}@?B}16
v16@?0^{__OpaqueSOSObject=}8
No datasource
bad class %@ in backup
object %@ is not a dictionary
FeatureAllowed
FeaturePromoted
FeatureVisible
RetryAfter
 Couldn't find CKRecord for ramp. Defaulting to not ramped in
True
False
device is locked
not signed in
no network
v36@?0B8B12B16q20@"NSError"28
timed out waiting for response from CloudKit
cloud kit timed out
fetching ramp state
dataSourceFactory queue
hash
v40@?0^{__OpaqueSecDbConnection=}8Q16Q24^{__CFArray=}32
v24@?0^{sqlite3_stmt=}8^B16
SOSDataSource-%@
no class or data in object
no such class %@; update kc_class_with_name 
query missing %@ attribute
dsf queue
authkit
ACAccount not available
No primary account
No altdsid on primary account
security-authkit
true
false
AKAnisette not available
AuthKit
missingMID
Anisette data does not have machineID
can't get AKDeviceListRequestContextClass
Can't get primary AltDSID
missingAltDSID
can't get authController
otauthkitadapter-notifiers
v16@?0@"<OTAuthKitAdapterNotifier>"8
Missing entitlement '%@'
com.apple.private.octagon
attribute %@ not found in class %@
INSERT INTO tversion(version,minor) VALUES(%d, %d);
sqlite3_exec: %s
duplicate item %@
authentication failed
value ref not supported by queries
no error
attributes to query illegal; both persistent ref and other attributes can't be searched at the same time
attributes to query illegal; both row_id and other attributes can't be searched at the same time
attributes to query illegal; both token persistent ref and other attributes can't be searched at the same time
match not supported in attributes to update
value ref not supported in attributes to update
attributes to update illegal; both row_id and other attributes can't be updated at the same time
attributes to update illegal; both token persistent ref and other attributes can't be updated at the same time
No items updated
Delete failed to delete anything
lockdown-identities
Public
Private
com.apple.managedconfiguration
com.apple.account.CloudKit.token
com.apple.account.idms.continuation-key
push.apple.com
push.apple.com,PerAppToken.v0
appleaccount
com.apple.appleaccount.fmf.token
com.apple.appleaccount.fmf.apptoken
com.apple.appleaccount.fmip.siritoken
com.apple.appleaccount.cloudkit.token
com.apple.account.AppleAccount.token
com.apple.account.AppleAccount.password
com.apple.account.AppleAccount.rpassword
com.apple.account.idms.token
com.apple.account.idms.heartbeat-token
com.apple.account.IdentityServices.password
com.apple.account.IdentityServices.rpassword
com.apple.account.IdentityServices.token
BackupIDSAccountToken
com.apple.ids
com.apple.gs.
com.apple.facetime
registrationV1
com.apple.ind
com.apple.ind.registration
ichat
iMessage Encryption Key
iMessage Signing Key
com.apple.rapport
DELETE FROM genp WHERE musr = ?
DELETE FROM inet WHERE musr = ?
DELETE FROM cert WHERE musr = ?
DELETE FROM keys WHERE musr = ?
DELETE FROM %@ WHERE agrp = ? AND clip = 1
v24@?0^{SecDbItem={__CFRuntimeBase=QAQ}^{SecDbClass}iii^{__CFDictionary}^{__CFData}^v^{__CFArray}}8^^{SecDbItem}16
Can't create keychain dictionary
keybag-uuid
non-
Keybag UUID (%@) mismatch with backup (%@)
DELETE FROM genp WHERE sync = 0 AND NOT agrp IN ('com.apple.security.sos', 'com.apple.security.sos-usercredential', 'com.apple.security.ckks', 'com.apple.security.egoIdentities', 'com.apple.security.octagon');
DELETE FROM inet WHERE sync = 0 AND NOT agrp IN ('com.apple.security.sos', 'com.apple.security.sos-usercredential', 'com.apple.security.ckks', 'com.apple.security.egoIdentities', 'com.apple.security.octagon');
DELETE FROM cert WHERE sync = 0 AND NOT agrp IN ('com.apple.security.sos', 'com.apple.security.sos-usercredential', 'com.apple.security.ckks', 'com.apple.security.egoIdentities', 'com.apple.security.octagon');
DELETE FROM keys WHERE sync = 0 AND NOT agrp IN ('com.apple.security.sos', 'com.apple.security.sos-usercredential', 'com.apple.security.ckks', 'com.apple.security.egoIdentities', 'com.apple.security.octagon');
restore
Missing or invalid %@ in backup dictionary
No key roll in progress.
CREATE TABLE %@(
 NOT NULL
 DEFAULT 0
 DEFAULT ''
CREATE INDEX %@%@0 ON %@(%@) WHERE %@=0;
CREATE INDEX %@%@ ON %@(%@);
BLOB
TEXT
INTEGER
REAL
INTEGER PRIMARY KEY AUTOINCREMENT
UNIQUE(
pref
SELECT crowid, certdata, certpersistref, rowid, data, persistref FROM (SELECT cert.rowid AS crowid, cert.labl AS labl, cert.issr AS issr, cert.slnr AS slnr, cert.skid AS skid, cert.tkid AS tkid, keys.*,cert.data AS certdata, cert.persistref AS certpersistref FROM keys, cert WHERE keys.priv == 1 AND cert.pkhh == keys.klbl
SELECT crowid, certdata, rowid, data FROM (SELECT cert.rowid AS crowid, cert.labl AS labl, cert.issr AS issr, cert.slnr AS slnr, cert.skid AS skid, cert.tkid AS tkid, keys.*,cert.data AS certdata FROM keys, cert WHERE keys.priv == 1 AND cert.pkhh == keys.klbl
cert.agrp
crowid
agrp
SELECT rowid, data, agrp, persistref FROM 
SELECT rowid, data, agrp FROM 
 IN (?
%@=%lld
musr = ?
certpersistref = ?
clip = 0
 LIMIT %ld
no matching items found
ItemNotFound
ratelimiterdisabledlogevent
certdata
certtkid
ROWID
persistref = ?
%@ AND pdmn NOT IN ('aku','akpu','cku','dku')
SecCritical
invalid-akpu+sysbound
DELETE from genp;
DELETE from inet;
DELETE from cert;
DELETE from keys;
class name %@ is not a string
attempt to import an identity
value %@ is not a dictionary
import
check_generation: Check for underflow
rowid
cdat
mdat
labl
pdmn
sha1
accc
vwht
tkid
u_Tomb
crtr
alis
desc
icmt
invi
nega
cusi
prot
scrp
acct
svce
gena
sdmn
srvr
ptcl
atyp
port
path
ctyp
cenc
subj
issr
slnr
skid
pkhh
kcls
perm
priv
modi
klbl
atag
bsiz
esiz
sdat
edat
sens
asen
extr
next
encr
decr
drve
sign
vrfy
snrc
vyrc
wrap
unwp
minor
persistref
sysb
primaryKey
publickeyHash
publickey
backupData
key_archive_hash
key_archive
archived_key
keyarchive_name
archive_escrowid
circlestatus
lastfixup
senderpeerid
recvpeerid
recvpubenckey
osversion
actualKeyclass
binn
bini
bin0
bin1
bin2
bin3
backupbag
defaultvalue
signingkey
recoverytype
recoveryset
metadatakeydata
backupbags
backupkeyclasssigningkeys
backuprecoverysets
metadatakeys
cert
keys
ckdevicestate
tversion
item_backup
backup_keybag
backup_keyarchive
archived_key_backup
currentkeyarchives
idnt
tversion91
genp91
inet91
cert91
keys91
genp9
inet9
cert9
keys9
tversion5
genp8
inet8
cert8
keys8
genp7
inet7
cert7
keys7
SecItemSchema
genp6
inet6
cert6
keys6
genp5
inet5
cert5
keys5
defaultContext
com.apple.security.octagon.trust-status-change
CuttlefishError
retryafter
SecErrorNestedErrorCapping
SecKeychainStaticPersistentRefs
SecKeychainChanged
item
SELECT name FROM sqlite_master WHERE type='table' AND name='tversion'
Failed to read sqlite_master table: %@
upgr
SELECT version FROM tversion
SELECT minor FROM tversion WHERE version = ?
SELECT * FROM %@ WHERE persistref IS ''
B16@?0r^{SecDbAttr=^{__CFString}iQ^?^?}8
B20@?0^{sqlite3_stmt=}8i16
securityd
keychain-recovery-2.db
keychain-2-debug.db
from v0 
B44@?0^{__OpaqueSecDb=}8^{__OpaqueSecDbConnection=}16B24^B28^^{__CFError}36
B8@?0
v16@?0^{__OpaqueSecDbConnection=}8
DELETE FROM %@ WHERE rowid=%lli
Non-API attributes present
App clips are not permitted to use access groups other than application identifier
App clips are not permitted to add synchronizable items to the keychain
q_row_id
App clips are not permitted to make items synchronizable
use item list not supported
return data not supported by update
return attributes not supported by update
return ref not supported by update
return persistent ref not supported by update
match limit not supported by delete
match not supported by delete
value ref not supported by delete
rowid and other attributes are mutually exclusive
token persistent ref and other attributes are mutually exclusive
App Clips may not call this API
accessGroups not CFArray, got %@
accessGroups e empty
access not a string: %@
illegal access group: %@
SecServerKeychainCreateBackup
provided
device
, EMCS mode
fail
backup or keybag missing
keybag %@ not a data
backup %@ not a dictionary
password %@ not a data
password not a data
com.apple.ProtectedCloudStorage
com.apple.nanoregistry.migration
com.apple.nanoregistry.migration2
com.apple.bluetooth
BluetoothLESync
ImportInitialSyncItems
Half migrated but obsolete DB found: found 0x%x(0x%x) but 0x%x is needed
no schema for version: 0x%x
UPDATE tversion SET version='%d', minor='%d'
CREATE INDEX IF NOT EXISTS %@%@ ON %@(%@);
DROP INDEX IF EXISTS genpagrp; DROP INDEX IF EXISTS genpsync;
DROP INDEX IF EXISTS inetagrp; DROP INDEX IF EXISTS inetsync;
DROP INDEX IF EXISTS certagrp; DROP INDEX IF EXISTS certsync;
DROP INDEX IF EXISTS keysagrp; DROP INDEX IF EXISTS keyssync;
DROP INDEX IF EXISTS genpsync0;
DROP INDEX IF EXISTS inetsync0;
DROP INDEX IF EXISTS certsync0;
DROP INDEX IF EXISTS keyssync0;
DROP INDEX IF EXISTS genpmusr;
DROP INDEX IF EXISTS inetmusr;
DROP INDEX IF EXISTS certmusr;
DROP INDEX IF EXISTS keysmusr;
DROP INDEX IF EXISTS item_backupmusr;
DROP INDEX IF EXISTS backup_keybagmusr;
DROP INDEX IF EXISTS backup_keyarchivemusr;
DROP INDEX IF EXISTS archived_key_backupmusr;
CREATE INDEX IF NOT EXISTS agrp_musr_tomb_svce ON genp(agrp, musr, tomb, svce);
CREATE INDEX IF NOT EXISTS agrp_musr_tomb_srvr ON inet(agrp, musr, tomb, srvr);
CREATE INDEX IF NOT EXISTS agrp_musr_tomb_subj ON cert(agrp, musr, tomb, subj);
CREATE INDEX IF NOT EXISTS agrp_musr_tomb_atag ON keys(agrp, musr, tomb, atag);
ALTER TABLE %@ RENAME TO %@_old;
DROP TABLE IF EXISTS %@;
DROP INDEX IF EXISTS %@%@;
DROP INDEX IF EXISTS %@%@0;
%@_old
INSERT OR REPLACE INTO %@ (%@) SELECT %@ FROM %@;
DROP TABLE %@_old;
NOT %@ IN (?,?)
B24@?0^{__CFString=}8^B16
sec_async_db
sec_kc_dbhandle
failed to get a db handle
FilterWithDate
Non-API attributes present in query
use item list unsupported
unsupported match attribute
unsupported kSecMatchPolicy attribute
missing pointer
SELECT agrp FROM %@ WHERE persistref = ?
B12@?0i8
B16@?0^{sqlite3_stmt=}8
SELECT agrp FROM %@ WHERE rowid == %u
Client has neither %@ entitlements
application-identifier nor keychain-access-groups
Client explicitly specifies access group %@ but is only entitled for %@
DELETE FROM genp WHERE sync=1;
DELETE FROM inet WHERE sync=1;
DELETE FROM cert WHERE sync=1;
DELETE FROM keys WHERE sync=1;
VACUUM;
keychainbackup
SecServerKeychainRestore
import: keychain is not a dictionary
v32@?0^{__CFData=}8^{__OpaqueSOSObject=}16^B24
titc
v24@?0^{__OpaqueSOSTransaction=}8^B16
InitialSyncItems
persona
upload-tlks-with-keys
refKeyBlob
com.apple.private.alloy.keychain.metrics
com.apple.security.c2metric.upload
counter
error_code
error_domain
com.apple.security.push.channel.dropped
POST
application/protobuf
Content-Type
gzip
Content-Encoding
1.2.11
%@(%@)
finished
<%@ (%p): %@%@>
inCircle
TLKs
inSyncA
inSyncC
IQNOE
OQNOE
inSync
validCredentials
lastUnlock
lastKSR
lastInCircle
numItems
numTLKShares
numSyncKeys
OASMState
OAiC
OACDPStatus
OATrust
OAAttemptedJoin
OAUserViewsSyncing
OAHealthCheck
OASOSStatus
OALastPPJ
OALastKSR
OALastCFU
OAPrerecordPending
OACDPStateRun
OABottledUniqueTLKsRecoveredCount
OABottledTotalTLKSharesCount
OABottledTotalTLKSharesRecoveredCount
OABottledUniqueTLKsWithSharesCount
OABottledTLKUniqueViewCount
OARKUniqueTLKsRecoveredCount
OARKTotalTLKSharesCount
OARKTotalTLKSharesRecoveredCount
OARKUniqueTLKsWithSharesCount
OARKTLKUniqueViewCount
OACustodianUniqueTLKsRecoveredCount
OACustodianTotalTLKSharesCount
OACustodianTotalTLKSharesRecoveredCount
OACustodianUniqueTLKsWithSharesCount
OACustodianTLKUniqueViewCount
OAInheritanceUniqueTLKsRecoveredCount
OAInheritanceTotalTLKSharesCount
OAInheritanceTotalTLKSharesRecoveredCount
OAInheritanceUniqueTLKsWithSharesCount
OAInheritanceTLKUniqueViewCount
OAMIDPresent
OAMIDOnList
OAPeersWithMID
OAMIDMatchesCurrentMID
OAnPeers
OAnViablePeers
lastCKKSPush
OADCKVSProvisioned
OADCKVSEnabled
OADCKCSProvisioned
OADCKCSEnabled
OADCCKProvisioned
OADCCKEnabled
OASecureBackupTermsAccepted
recoverableError
errorDomain
errorCode
errorChain
CKKSEventProcessIncomingQueueClassA
CKKSEventProcessIncomingQueueClassC
CKKSEventProcessOutgoingQueue
CKKSEventProcessHealKeyHierarchy
CKKSEventProcessReencryption
OctagonEventSignIn
OctagonEventRamp
OctagonEventCheckTrustState
OctagonEventBottledPeerRestore
OctagonEventRecoveryKey
OctagonEventCustodianRecoveryKey
OctagonEventPreflightCustodianRecoveryKey
OctagonEventInheritanceKey
OctagonEventPreflightInheritanceKey
OctagonEventFetchAllBottles
OctagonEventFetchEscrowContents
OctagonEventResetAndEstablish
OctagonEventEstablish
OctagonEventLeaveClique
OctagonEventRemoveFriendsInClique
OctagonEventUpgradeFetchDeviceIDs
OctagonEventUpgradeSetAllowList
OctagonEventUpgradeSilentEscrow
OctagonEventUpgradePreapprovedJoin
OctagonEventUpgradePreflightPreapprovedJoin
OctagonEventUpgradePrepare
OctagonEventJoinWithVoucher
OctagonEventPreflightVouchWithBottle
OctagonEventVoucherWithBottle
OctagonEventPreflightVouchWithRecoveryKey
OctagonEventVoucherWithRecoveryKey
OctagonEventPreflightVouchWithCustodianRecoveryKey
OctagonEventVoucherWithCustodianRecoveryKey
OctagonEventVoucherWithInheritanceKey
OctagonEventSetRecoveryKey
OctagonEventSetRecoveryKeyValidationFailed
OctagonEventJoinRecoveryKeyValidationFailed
OctagonEventJoinRecoveryKeyCircleReset
OctagonEventJoinRecoveryKeyCircleResetFailed
OctagonEventJoinRecoveryKeyEnrollFailed
OctagonEventJoinRecoveryKeyFailed
OctagonEventJoinRecoveryKey
OctagonEventReset
OctagonEventPrepareIdentity
OctagonEventEstablishIdentity
OctagonEventFetchViews
OctagonEventStateTransition
OctagonEventCheckTrustForCFU
CKKSEventMissingLocalItemsFound
CKKSEventReachabilityTimerExpired
OctagonEventTPHHealthCheckStatus
OctagonEventAuthKitDeviceList
OctagonEventEscrowMoveTriggered
OctagonEventEscrowMoveRateLimited
OctagonEventEscrowMoveTermsNeeded
CKKSActivityOTFetchRampState
OctagonActivityAccountAvailable
OctagonActivityAccountNotAvailable
OctagonActivityResetAndEstablish
OctagonActivityEstablish
OctagonSOSAdapterUpdateKeys
OctagonActivityFetchAllViableBottles
OctagonActivityFetchEscrowContents
OctagonActivityBottledPeerRestore
OctagonActivitySetRecoveryKey
OctagonActivityCreateCustodianRecoveryKey
OctagonActivityJoinWithRecoveryKey
OctagonActivityJoinWithCustodianRecoveryKey
OctagonActivityPreflightJoinWithCustodianRecoveryKey
OctagonActivityRemoveCustodianRecoveryKey
OctagonActivityCreateInheritanceKey
OctagonActivityGenerateInheritanceKey
OctagonActivityStoreInheritanceKey
OctagonActivityJoinWithInheritanceKey
OctagonActivityPreflightJoinWithInheritanceKey
OctagonActivityRemoveInheritanceKey
OctagonActivityLeaveClique
OctagonActivityRemoveFriendsInClique
ckks_analytics_v2.db
ckks_analytics_v2.db-wal
ckks_analytics_v2.db-shm
ckks_analytics
last_success_%@-%@
oneCloudKitPartialFailure
child
%@%lld
error_description
underlying_error
escrow-prerecord
Escrow Prerecord: %@
ckid-
<CKKSDeviceStateEntry(%@,%@,%@,%@,%@,%@): %@ %@ %@ %@ %@ %@ upd:%@>
CliqueMissing
ckid-%@
No active HSA2 iCloud account: %@
No CK device ID: %@
operation_id
operation_type
operation_triggered
operation_group_index
vouch-with-keys
v32@?0@"NSData"8@"NSData"16@"NSError"24
<CKKSFixup:RefetchAllCurrentItemPointers (%@)>
ckksfixup
fetch-records-operation-complete
v24@?0@"NSDictionary"8@"NSError"16
<CKKSFixup:FetchAllTLKShares (%@)>
v16@?0@"CKRecord"8
v24@?0@"CKQueryCursor"8@"NSError"16
<CKKSFixup:LocalReload (%d)(%@)>
local-reload-cleanup
<CKKSFixup:ResaveCDSE (%@)>
NoAccount
WaitForHSA2
WaitForCDP
BecomeUntrusted
Ready
BecomeReady
Inherited
BecomeInherited
EnsureConsistency
EnsureOctagonKeysAreConsistent
EnsureUpdatePreapprovals
Initializing
WaitingForCloudKitAccount
CloudKitNewlyAvailable
RefetchCKKSPolicy
DetermineCDPState
CheckForAccountFixups
CheckTrustState
PerformAccountFixups
EnableUserControllableViews
DisableUserControllableViews
SetUserControllableViewsToPeerConsensus
UpdateSOSPreapprovals
InitiatorSetCDPBit
InitiatorUpdateDeviceList
InitiatorAwaitingVoucher
InitiatorJoin
InitiatorJoinCKKSReset
InitiatorJoinAfterCKKSReset
BottleJoinCreateIdentity
BottleJoinVouchWithBottle
CreateIdentityForRecoveryKey
CreateIdentityForCustodianRecoveryKey
BottlePreloadOctagonKeysInSOS
VouchWithRecoveryKey
VouchWithCustodianRecoveryKey
JoinSOSAfterCKKSFetch
PrepareAndRecoverTLKSharesForInheritancePeer
StartCompanionPairing
WaitForCDPUpdated
UntrustedUpdated
ReadyUpdated
Disabled
DetermineiCloudAccountState
AttemptSOSUpgradeDetermineCDPState
AttemptSOSUpgrade
SOSUpgradeCKKSReset
SOSUpgradeAfterCKKSReset
Unimplemented
ResetBecomeUntrusted
ResetAndEstablish
ResetAnyMissingTLKCKKSViews
EstablishEnableCDPBit
ReEnactDeviceList
ReEnactPrepare
ReEnactReadyToEstablish
EstablishCKKSReset
EstablishAfterCKKSReset
ResetAndEstablishClearLocalContextState
LocalReset
LocalResetClearLocalContextState
HSA2HealthCheck
CDPHealthCheck
TPHTrustCheck
CuttlefishTrustCheck
PostRepairCFU
SecurityTrustCheck
HealthCheckReset
NoAccountDoReset
LostAccountAuth
PeerMissingFromServer
WaitForUnlock
WaitForClassCUnlock
AssistCKKSTLKUpload
AssistCKKSTLKUploadCKKSReset
AssistCKKSTLKUploadAfterCKKSReset
HealthCheckLeaveClique
EscrowTriggerUpdate
idms_level
preapproved
tlk_upload_needed
policy_check_needed
ckks_views_changed
recd_push
account_available
attempt_sos_upgrade
attempt_machine_id_list
unlocked
attempt_sos_update_preapprovals
attempt_sos_consistency
escrowrequest_inform_cloudservices
retry_bottle_tlk_extraction
retry_rk_tlk_extraction
se_id_changed
attempt_ucv_upgrade
OTStates.m
stateName should be string
stateNum should be number
client_process_version
client_bundle_id
container
environment
anonymous
operation_group
report_operation_group_frequency
report_operation_group_frequency_base
client_operation
report_client_operation_frequency
report_client_operation_frequency_base
New item has changed; hashes mismatch. Refetch and try again.
Old item has changed; hashes mismatch. Refetch and try again.
Update to current item pointer is pending.
Current pointer(%@) does not match user-supplied %@, aborting
No user-supplied UUID and current pointer(%@) is not dangling, aborting
Current pointer(%@) does not match given value of '%@', aborting
New item(%@) is being synced; can't set current pointer.
Old item(%@) is being synced; can't set current pointer.
No synced item matching (%@); can't set current pointer.
updateCurrentItemPointer-modifyRecordsComplete
v24@?0@"CKRecord"8@"NSError"16
couldn't create query for new item pref
v24@?0^{SecDbItem={__CFRuntimeBase=QAQ}^{SecDbClass}iii^{__CFDictionary}^{__CFData}^v^{__CFArray}}8^B16
couldn't run query for new item pref
couldn't destroy query for item pref
couldn't run query
ckkstlk
v32@?0@"TrustedPeersHelperPeerState"8@"NSArray"16@"NSError"24
octagon-consistency
repair
confirm existing secret
secure terms
followup
lock-state-tracker
<CKKSLockStateTracker: %@ last:%@>
locked
keybag-unlocked-dependency
com.apple.security.analytics
BuildVersion
UniqueDeviceID
ProductName
ProductType
ProductVersion
SecDbBackupWrappedItemKey
akswrappedkey
backupwrappedkey
CloudKit account logged in.
CKKSQueue.%@
outgoing-queue-scheduler
<%@: %@ %@ %p>
ckks-initialized-operation
initial-setup
restart-setup
ckksreset
set-zones
reset-cloudkit
ckks-cloud-reset
ck-zone-missing
ck-token-expired
ck-sign-in
fixup
recover-from-cloudkit-failure
begin-trusted-operation
fetch-requested
provide-key-set
handle-all-views
ckksview
key-state-after-unlock
full-refetch
key-process
trust-gone
trusted-peers-changed
check-queues
24-hr-check
process-incoming
scan
post-fetch
fetch
waiting-for-fetch
fetch-complete
post-fetch-process
tlk-missing
newtlks-failed
no-trust
reset-views
heal-tlk-shares
heal-tlks-failed
unhealthy-lacking-trust
iqo-errored
oqo-failure
become-ready
more coming
launch
zonesize
lose-trust
No syncing view for '%@'
addition
modification
deletion
View is paused; item is not expected to sync
sos-incoming-item
keychain-api-use
No access group or identifier given
iCloud account status unknown.
currentitem-api
setCurrentItem-return-callback
get-current-item-pointer
No current item pointer found for %@
Current item pointer is empty
No CloudKit account; push will not succeed.
No TLKs for this view; push will not succeed.
No trust; push will not succeed.
Cannot push view %@; is externally managed
push
wait-for-next-incoming-queue-operation
rpc-fetch
check-keys
ckksrpc
fetch-and-process
No local keys for %@; processing queue will fail
process-incoming-queue
Syncing policy not yet loaded
No iCloud Keychain Trust
rpcWaitForPriorityViewProcessing-fail
waitForPriority-succeed
rpc-watcher
device-state-operation
havoc
pcs-mirror-keys
account-logged-in-dependency
CloudKit account logged in again.
ckkstrust
ckks-policy
cached
priority
normal
CKKS
externally-managed
wait-for-priority-view-processing
ckks-%@-notify-scheduler
com.apple.security.keychainchanged
Manatee
Engram
ApplePay
Home
LimitedPeersAllowed
com.apple.security.view-change.PCS
%@-ready-scheduler
com.apple.security.view-become-ready
com.apple.security.view-ready.%@
CKKS syncing policy not yet loaded
Cannot get view %@; is externally managed
status-rpc
global
reachability
no-network
ckdeviceID
ckdeviceIDError
lockstatetracker
cloudkitRetryAfter
policy
viewsFromPolicy
ckaccountstatus
could not determine
restricted
logged out
accounttracker
fetcher
ckksstate
lastIncomingQueueOperation
lastNewTLKOperation
lastOutgoingQueueOperation
lastProcessReceivedKeysOperation
lastReencryptOutgoingItemsOperation
statusError
devicestates
tlkshares
currentTLKPtr
currentClassAPtr
currentClassCPtr
itemsyncing
zoneCreated
zoneSubscribed
ckksManaged
launchSequence
operation
status
endpoint
error
peer-infos
peer-info
userlabel
flags
password
emcsbackup
query
attributesToUpdate
digest
publicPeerId
otrsess
data
otrrdy
viewname
viewactioncode
cfstring
cfarray
cfset
cfset2
newPublicBackupKey
RecoveryPublicKey
includeV0
reason
enabledViews
disabledViews
fileDescriptor
accessGroups
normIssuer
serialNum
version
AccountSetToNew
OTAGetEscrowCertificates
OTAPKIGetNewAsset
OTASecExperimentGetNewAsset
OTASecExperimentGetAsset
AcceptApplicants
BailFromCircle
CanAuthenticate
CopyApplicantPeerInfo
CopyConcurringPeerPeerInfo
CopyEngineState
CopyGenerationPeerInfo
CopyMyPeerInfo
CopyNotValidPeerPeerInfo
CopyPeerPeerInfo
CopyRetirementPeerInfo
CopyValidPeerPeerInfo
CopyViewUnawarePeerInfo
DeviceInCircle
GetLastDepartureReason
LoggedOutOfAccount
ProcessSyncWithAllPeers
ProcessSyncWithPeers
ProcessUnlockNotification
PurgeUserCredentials
RejectApplicants
RemoveThisDeviceFromCircle
RemovePeersFromCircle
RequestToJoin
RequestToJoinAfterRestore
ResetToEmpty
ResetToOffering
RollKeys
SetBagForAllSlices
SetLastDepartureReason
SetNewPublicBackupKey
SetUserCredentials
SetUserCredentialsAndDSID
TryUserCredentials
ValidateUserPublic
View
add_shared_web_credential
delete_all
get_log_settings
backup_copy_names
backup_register_view
backup_handoff_fd
backup_restore
backup_set_confirmed_manifest
copy_matching
update
keychain_backup
keychain_backup_syncable
keychain_restore
keychain_restore_syncable
keychain_sync_update_message
ota_pki_trust_store_version
ota_pki_asset_version
otr_session_create_remote
otr_session_process_packet_remote
set_circle_log_settings
set_xpc_log_settings
trust_evaluate
trust_store_contains
trust_store_remove_certificate
trust_store_set_trust_settings
trust_store_copy_all
trust_store_copy_usage_constraints
ocsp_cache_flush
EnsurePeerRegistration
WhoAmI
TransmogrifyToSyncBubble
UpdateTokenItems
sec_delete_items_with_access_groups_id
kSecXPCOpPeersHaveViewsEnabled
RegisterRecoveryPublicKey
GetRecoveryPublicKey
MessageFromPeerIsPending
SendToPeerIsPending
copy_parent_certificates
certificate_exists
KeybagAdd
KeybagDelete
KeychainControlEndpoint
NetworkingAnalyticsReport
SetCTExceptions
CopyCTExceptions
GetExceptionResetCount
IncrementExceptionResetCount
SetCARevocationAdditions
CopyCARevocationAdditions
ValidUpdate
SetTransparentConnectionPins
CopyTransparentConnectionPins
trust_settings_set_data
trust_settings_copy_data
sec_truststore_remove_all
Unknown xpc operation
object for key %s is NULL
data for key %s is NULL
no data for key %s
string for key %s is NULL
failed to convert string for key %s to utf8
missing fd for key %s
object for key %s not set but %@
object for key %s not array but %@
too large data for key %s
failed to create data for key %s
object for key %s not dictionary but %@
no object for key %s
trailing garbage after der decoded object for key %s
object for key %s failed to convert %s to CFString
object for key %s not string
object %@ is not a set
v24@?0Q8@"NSError"16
encryptedSecretData
encryptedMetadata
KEYCLASS_AK
KEYCLASS_CK
KEYCLASS_DK
KEYCLASS_AKU
KEYCLASS_CKU
KEYCLASS_DKU
KEYCLASS_AKPU
current TLK doesn't wrap itself: %@ %@
invalid TLK from CloudKit
No trust states available
orphaned key(%@) in hierarchy
unwrappable key(%@) in hierarchy: %@
Current class A key does not wrap to current TLK
Current class C key does not wrap to current TLK
<CKKSTLKShare(%@): recv:%@ send:%@ mod:%@>
^tlkshare-(?<uuid>[0-9A-Fa-f-]*)::(?<receiver>.*)::(?<sender>.*)$
Couldn't parse '%@' as a TLKShare ID
tlkshare-%@::%@::%@
key-state
com.apple.security.ckks.launch
<CKKSKeychainViewState: %@(%@), %@>
CKKSKeychainViewState.m
ckks-view-state
ckksshare
heal-tlkshares-%@
current self peer (%@) is not in the set of trusted peers
not_started
halted
<OctagonStateTransitionOperation(%@): intended:%@ actual:%@>
<OctagonStateTransitionGroupOperation(%@): intended:%@ actual:%@>
<OctagonStateTransitionRequest: %@ %@ sources:%d>
CKErrorDomain
CKInternalErrorDomain
CKRetryAfter
CKPartialErrors
AKAuthenticationError
v32@?0@8@"NSError"16^B24
ckksreencrypt
network_task_description
network_hostname
network_remote_addresss_and_port
network_connection_uuid
network_connection_reused
network_interface_identifier
network_protocol_name
network_request_header_size
network_request_body_bytes_sent
network_response_header_size
network_response_body_bytes_received
network_previous_attempt_count
network_fatal_error
network_status_code
network_request_uri
timestamp_c2_init
timestamp_c2_start
timestamp_c2_now
timestamp_dns_start
timestamp_dns_end
timestamp_tcp_start
timestamp_tcp_end
timestamp_ssl_start
timestamp_request_start
timestamp_request_end
timestamp_response_start
timestamp_response_end
options_quality_of_service
options_out_of_process
options_out_of_process_force_discretionary
options_allow_expensive_access
options_allow_power_nap_scheduling
options_timeout_interval_for_request
options_timeout_interval_for_resource
options_source_application_bundle_identifier
options_source_application_secondary_identifier
options_apple_id_context
options_tls_pinning_required
ckksPushTracingEnabled
ckksPushTracingUUID
ckksPushReceivedDate
aps-callback-queue
com.apple.icloud-container.
com.apple.security.cuttlefish
clearStalePushNotifications
CKKS APNS Push Dropped
CKKS APNS Push Dropped - never unlocked
apsnotification
ckkspush
external operation
Unknown external view: '%@'
View is not externally managed: '%@'
external-tlk-rpc
ckks-se
wait-until-write-finished
C8@?0
v16@?0@"OctagonStateTransitionGroupOperation"8
rpc-response
v16@?0@"CKKSResultOperation"8
Initial fetch results not present; cannot provide accurate answer about TLK state
TLKShare is not for current TLK %@
external-tlkshare-modification-rpc
%@ is not self-wrapped
Couldn't save %@ to keychain: %d
-nonsync
Couldn't load %@ from keychain: %d
-piggy
unable to unbase64 key: %@
Couldn't delete %@ from keychain: %d
<%@(%@): %@ (%@)>
<CKKSKeychainBackedKeySet: tlk:%@, classA:%@, classC:%@, newUpload:%d>
newUpload
baghash
<TPHPeerState: %@ preapproved:%d status:%@ memberChanges: %@ unk. mIDs: %@ osVersion: %@ walrus: %@ >
identityIsPreapproved
peerStatus
memberChanges
unknownMachineIDs
osVersion
<TPHEgoPeerState: %@ (mid:%@)>
egoStatus
viablePeerCountsByModelID
peerCountsByMachineID
isExcluded
isLocked
<TPHPeer: %@ %@ %@ se:%@ (%lu views)>
encryptionSPKI
seIdentity
<CustodianRecoveryKey: %@, (%@)>
recoveryString
salt
kind
<TLKRecoveryResult: %@ totalTLKSharesRecovered:%d>
totalShares
errors
RECOVERY_KEY
INHERITANCE_KEY
client_join
await_epoch_request
epoch_prepared
await_identity
voucher_prepared
done
com.apple.security.otclientstatemachine
v32@?0@"NSString<OctagonStateString>"8@"NSNumber"16^B24
initialize-client
octagon-client-%@-state
octagon-voucher-prepared
v16@?0@"OctagonStateTransitionOperation"8
v32@?0@"TrustedPeersHelperPeerState"8@"TPSyncingPolicy"16@"NSError"24
rpcEpoch
rpcEpoch-callback
otrpc
rpcVoucher
rpcVoucher-callback
WrongKeySizeException
length (%lu) was not %d
corecrypto
CCRandomGenerateBytes failed with %d
No key given
wrapped key size does not match key size
unwrapped key size does not match key size
CommonCrypto
IV generation failed
ciphertext too short
no mode given
could not ccsiv_init
could not ccsiv_set_nonce
could not ccsiv_aad
could not ccsiv_crypt
product_name
product_type
product_version
product_build
is_apple_internal
process_name
process_version
process_uuid
user_default_test_name
internal_test_config
proceed-after-fetch
operation_group_id
operation_group_name
operation_group_triggered
apns
se-api
keyset
currentitemcheck
initialfetch
fetchfailed
keyhierarchy
resync
more-coming
conflict
periodic
Fetch failed
zone-change-fetcher
zone-change-fetch-scheduler
<CKKSZoneChangeFetcher(%@): next fetch at %@
<CKKSZoneChangeFetcher(%@): no pending fetches
CKKS APNS Push Received
not-ready
zones_status
CKKS APNS Push Received-webtunnel
description
zone-change-fetcher-worker
successful-fetch-dependency
upgrade_persistent_ref
wait_for_trigger
schedule_pref_upgrade
KeychainItemUpgradeControllerQueue
persistent-ref-upgrader
upgr-phase3
keychainitemupgrade
after-upgrade--attempt-wait-for-unlock
upgrade-persistent-refs
wait-for-trigger
nothing-to-do
upgrade-persistent-ref
request-item-upgrade
SecDbKeychainMetadataKeyStore
INSERT OR REPLACE INTO metadatakeys (keyclass, actualKeyclass, data, metadatakeydata) VALUES (?,?,?,?)
INSERT OR REPLACE INTO metadatakeys (keyclass, actualKeyclass, data) VALUES (?,?,?)
v16@?0^{sqlite3_stmt=}8
SELECT data, actualKeyclass, metadatakeydata FROM metadatakeys WHERE keyclass = ?
SELECT data, actualKeyclass FROM metadatakeys WHERE keyclass = ?
v16@?0^B8
Metadata key blob both old-world and new-world
New-format metadata key blob didn't deserialize
SecDbMetadataKeyStore
SecDbKeychainMetadataKeyStore.m
re-entering -[%@ %@] - that shouldn't happen!
keychainlockedlogmessage
Unable to find a suitable metadata key and not permitted to create one
B16@?0^{__OpaqueSecDbConnection=}8
metadata_store
eventName
attributes
v32@?0@8@16^B24
<TrustedPeersHelperIntendedTPPBSecureElementIdentity: %@>
identity
certCached
serializedPrerecord
lastCloudServicesTriggerTime
lastEscrowAttemptTime
uploadCompleted
uploadRetries
triggerRequestTime
serializedReason
OTCuttlefishAccountStateHolderNotifier
No existing ego peer ID
@"OTAccountMetadataClassC"16@?0@"OTAccountMetadataClassC"8
service_name
partition
service_build
service_instance
CKKSZoneModifier.%@
zonemodifier-ckretryafter
zone-modification
ckkszonemodifier
zone-subscription
retry
zone-creation-operation
zone-creation
v32@?0@"NSArray"8@"NSArray"16@"NSError"24
zone-subscription-operation
label
username
primaryServiceID
supplementaryServiceIDs
creationDate
modificationDate
customAttributes
Credential
attempt to add credential to SFCredentialStore that is not a password credential: %@
no keychain access group found; ensure that your process has the keychain-access-groups entitlement
failed to serialize primary service identifier
failed to serialize supplementary service identifier
v20@?0B8@"NSError"12
invalid persistent identifier: %@
v24@?0@"SecCDKeychainItem"8@"NSError"16
v16@?0@"NSArray"8
v24@?0@"NSArray"8@"NSError"16
failed to get password for SFCredential
malformed supplementary service identifiers array in SecCDKeychainItem
failed to deserialize SFCredential
octagon-ckks
escrowrequest
started
c:%@-%@
v32@?0@"NSString"8@"CKKSLaunchEvent"16^B24
c:%@
v32@?0@"NSString"8@"CKKSLaunchSequence"16^B24
first-launch
re-launch
events
q24@?0@"CKKSLaunchEvent"8@"CKKSLaunchEvent"16
v32@?0@"CKKSLaunchEvent"8Q16^B24
yyyy-MM-dd'T'HH:mm:ss.SSSZ
%@ - %@:%u
attr: %@: %@
octagon-authkit
AccountName
EscrowRecord
unsynced
initialsynctimeout
pendingEnableViews
pendingDisableViews
v2dictionary
RecoveryRing
RateLimitCounters
PeerNegotiationTimeouts
kSOSAccountPeerLastSentTimestamp
NegotiationRetryCount
com.apple.security.sosaccount
lastKVSCleanup
Scope
Account Queue
User public key not trusted
User public not available
pairing
sync
SecdWatchdog
failed to lookup SecdWatchdog class from ObjC runtime
SOSEnabled
SOSInitialized
SOSMonitorMode
Security
[SOS is active]
[SOS is monitoring]
SOSLegacyMode
Public Key isn't available, this peer is in the circle, but invalid. The iCloud Password must be provided to keychain syncing subsystem to repair this.
retirement
kSOSCCInCircle
kSOSCCNotInCircle
kSOSCCRequestPending
kSOSCCCircleAbsent
kSOSCCError
Can't remove without being active peer
B32@?0^{__OpaqueSOSCircle=}8^{__OpaqueSOSFullPeerInfo=}16^{__OpaqueSOSPeerInfo=}24
No circle
v16@?0^v8
key-cleanup
v32@?0@8Q16^B24
v32@?0@"NSString"8@"NSNumber"16^B24
tlk-piggy
q24@?0@"NSDictionary"8@"NSDictionary"16
auth
No applicant provided
Accepting
Joining
*No Key*
ACCOUNT: [keyStatus: %c%c%c hpub %@] [SOSCCStatus: %@] [UID: %d  EUID: %d] %@ %s
User Visible Keychain Disallowed by Profile
Unrestricted User Visible Views
accountLogState
trigger_backup
trigger_ring_update
perform_backup
perform_ring_update
SOSAccountSettings.pb
SOSAccount.m
can't bootstrap more than once
SOS-statemachine
sosaccount
performBackups
performRingUpdates
sos-sm
perform-backup-state
perform-ring-update
perform-backup-flag
perform-ring-update-flag
com.apple.lakitu
EscrowServiceBypassToken
EscrowService
circleops
Don't have circle when joining???
v32@?0@"NSDictionary"8Q16^B24
AutoUnlock
Health
Unknown
No Signature
Unavailable
Deleting V0 Keybag failed - %d
^{__OpaqueSOSRing={__CFRuntimeBase=QAQ}^{__CFDictionary}^{__CFDictionary}^{__CFDictionary}^{__CFDictionary}}24@?0^{__CFString=}8^^{__CFError}16
B24@?0^{__OpaqueSOSBackupSliceKeyBag=}8^^{__CFError}16
NULL account or viewName parameter
Backup public key
B24@?0^{__OpaqueSOSPeerInfo=}8^^{__CFError}16
keybag
backupkey
No backup view set created
backupring
No error space.
Error saving %@
SecRandomCopyBytes failed
SOSUserKeyCreateGenerateParameters created new parameters:
Bad paramter encoding, got: %@
Key size not supported, requested %zd.
Salt length not supported, requested %zd.
Too few iterations, params suggested %zd.
SOSUserKeygen generating key for:
Keygen failed
<Params: iter: %zd, size: %zd, salt: %@>
(null)
Backup
Concordance with no public key - need to validate application
Bad generation
Improper exclusion of this peer
Improper inclusion of this peer
update parameters key failed [%@]
Encoding parameters failed
account-sync
succeeded
failed
pendingBackupPeers
ringUpdateFlag
Recovery
Not recovery ring type
keygen
Private Key not available - failed to prompt user recently
SOSUserCredential
com.apple.security.sos-usercredential
Failed fetching account credential: %d
Public Key isn't available. The iCloud Password must be provided to the syncing subsystem to repair this.
Password generated pubkey doesn't match - candidate: %@  known: %@
account public key missing, can't check stashed copy
public key no not valid, can't check stashed copy
com.apple.security.publickeyavailable
sosAccountValidatePasswordOrFail
Could not create correct key with password.
Not associated with Ring
Basic
I have no peer
No identity to get key from
Cloud Identity
No trusted circle
Can't generate keypair for icloud identity
iCloud
Can't allocate gestalt
^{__OpaqueSOSPeerInfo={__CFRuntimeBase=QAQ}^{__CFDictionary}^{__CFData}^{__CFDictionary}^{__CFString}^{__CFString}q^{__CFString}B^{__CFDictionary}}32@?0^{__OpaqueSOSPeerInfo={__CFRuntimeBase=QAQ}^{__CFDictionary}^{__CFData}^{__CFDictionary}^{__CFString}^{__CFString}q^{__CFString}B^{__CFDictionary}}8^{__SecKey={__CFRuntimeBase=QAQ}^{__SecKeyDescriptor}^v}16^^{__CFError}24
Cloud Identity - '%@'
Couldn't update name
Version parsing failed
Unsupported version (%llu)
Extra data at the end of saved acount
Cannot EnsureFactoryCircles
persistence
backupKey
Didn't consume all bytes v7
Not in circle, won't update ring
B16@?0i8B12
sosnotify
<SOSAccountTransaction*@%p %ld>
acct-txn
member
non-member
secdNotify
userKeyTrust
com.apple.security.publickeynotavailable
engine-notify
supports
doesn't support
v24@?0^{__CFSet=}8^{__CFSet=}16
SOSAccountHandleParametersChange got new user key parameters:
Didn't make peer meta for: %@
Expected data or NULL got %@
Expected circle named %@, got %@
initial-sync
v24@?0^{__CFString=}8^{__CFSet=}16
v16@?0^{__CFSet=}8
trusted_rings
Can't Alloc Account Expansion dictionary
^{__OpaqueSOSRing={__CFRuntimeBase=QAQ}^{__CFDictionary}^{__CFDictionary}^{__CFDictionary}^{__CFDictionary}}24@?0^{__CFString=}8^{__OpaqueSOSRing={__CFRuntimeBase=QAQ}^{__CFDictionary}^{__CFDictionary}^{__CFDictionary}^{__CFDictionary}}16
Rings not present
No Rings found
No device public key to work with
No device private key to work with
You give rings a bad name
Generation Old
Bad Signature
No User Signature
No trusted peer signature
No trusted peer left
No User Public Key Available
Incorrect membership for me
This peer shouldn't be in this ring since it isn't in view
Invalid Ring Membership
Bad Error Return from ConcordanceTrust
No Ring found %@
modify
*24@?0r*8*16
size mismatch der_end - der: %td
fwrite SOSBackupEventWrite
No Trusted Circle
No Peer for Account
No Trusted UserKey
Not in Circle
Enabled
V2update
viewChange
No circle to get peer key from
v24@?0^{__OpaqueSOSCircle=}8^{__CFArray=}16
HSAPreApprovedPeer
don't know how to encode
sync-with-peers
*24@?0Q8*16
SOSCoder
Extra data in SOS coder
Unsupported Sequence Version: %lld
Unsupported SOS Coder DER
coder
No local error in SOSCoderCreate
*** no otr session ***
waiting for peer to send first data packet
otr session ready
otr negotiating already
alloc failed
Sending OTR Response %s
 begin waiting for data packet
stuck?
completed negotiation
resending dh
%@ Cannot negotiate session (%ld)
%@ Cannot allocate CFData
not ready for data; resending DH packet
got data packet we were waiting for 
verify and expose message
decoded OTR protected packet
 repeated
 too old, repeated renegotiating
 too old, forcing message
 too new
%@ Cannot expose message: %d
Unknown packet type
*** using null coder ***
not ready
waiting for peer to send data packet first
%@ alloc failed
%@ cannot protect message: %d
<Coder %@ %@ %s%s>
append start packet returned: %d
DataReturned
Negotiating
NegotiationCompleted
StaleEvent
TooNew
StatusUnknown
manifest
com.apple.security.sos.manifest.error
SOSManifest
Failed to create manifest
<[%zu:%02X%02X%02X%02X]
<[%zu]
 %02X%02X%02X%02X
SOSDictionaryUpdate
Not valid ring type
Not backup ring type
Wrong set count for one return
recoveryKeyBag
No recovery key available
recovery
^{__OpaqueSOSRing={__CFRuntimeBase=QAQ}^{__CFDictionary}^{__CFDictionary}^{__CFDictionary}^{__CFDictionary}}24@?0^{__OpaqueSOSRing={__CFRuntimeBase=QAQ}^{__CFDictionary}^{__CFDictionary}^{__CFDictionary}^{__CFDictionary}}8^^{__CFError}16
Failed to set Recovery Key
No error space
SOSMessage
failed to alloc SOSMessage
SOSMessage DER decoding failure %td bytes left
v24@?0^{__CFData=}8^B16
{[%zu]
v24@?0^{__OpaqueSOSObject=}8^B16
{NO DATASOURCE}
<MSGInvalid %llu >
<MSGDigest %llu %02X%02X%02X%02X>
<MSGManifest %llu %@>
<MSGObjects %llu %02X%02X%02X%02X %@ %@ %@
<MSG %llu %@ %02X%02X%02X%02X %02X%02X%02X%02X %02X%02X%02X%02X %@ %@ %@ %s%s%s%s%s%s%s>
Invalid DER, no tag found
Object has EOL tag
Object with tag %lu has no valid DER length
Object has %td trailing unused bytes
digest length mismatch
no manifest for manifest message
Invalid message type %llu
Trailing garbage at end of message
failed to decode object header
machineID
serialNumber
SOSPeer
backup
com.apple.security.itembackup
open %s
unlink %s
v16@?0r*8
peer
ckks
v20@?0^{__sFILE=*iiss{__sbuf=*i}i^v^?^?^?^?{__sbuf=*i}^{__sFILEX}i[3C][1C]{__sbuf=*i}iq}8i16
peer-id
object %@ is not an data
has-been-in-sync
<%@ %s%s%s%@%@%@%@%@>
 -  
 %@%@
 %@[%ld]%@
confstr on _CS_DARWIN_USER_TEMP_DIR returned an error.
%s/SOSBackup-%@
fopen %s,%s
vers
sequence-number
must-send
send-objects
pending-objects
unwanted-manifest
confirmed-manifest
pending-manifest
local-manifest
v16@?0^{__sFILE=*iiss{__sbuf=*i}i^v^?^?^?^?{__sbuf=*i}^{__sFILEX}i[3C][1C]{__sbuf=*i}iq}8
backup-peer
sending negotiation message.
waiting for negotiation message.
v16@?0^{__OpaqueSOSPeerInfo={__CFRuntimeBase=QAQ}^{__CFDictionary}^{__CFData}^{__CFDictionary}^{__CFString}^{__CFString}q^{__CFString}B^{__CFDictionary}}8
Windows
v24@?0@"NSSet"8@"NSError"16
KeyParameter
Circle
Message
AlwaysKeys
FirstUnlockKeys
UnlockedKeys
key-interests
v32@?0@"CKKeyParameter"8Q16^B24
Registering with CKP
No Change, Ignoring
accountChange
dsid
iCloudIdentity-tomb
PCS-MasterKey-tomb
SOSRecoveryKeyBag
Recovery bag allocation failed
Extra space in sequence
Null Account Object
Couldn't get dsid for recovery keybag components
Couldn't get recovery keybag components
Couldn't get memory for recoveryKeyBag
Failed to create scratch
Didn't consume all data supplied
<SOSRecoveryKeyBag@%p DSID: %@ version: %d  gencount: %@  RecoveryKeyID: %@ 
NULL RecoveryKeyBag
RecoveryKeyBag has no public key
RecoveryKeyBag has no DSID
RecoveryKeyBag has no generation
Incompatible circle in KVS
circleop
iCloudIDCheck
iCloudCleanerCheck
local
remote
signing
Can't handle updates with no trusted public key here
Current Entry is NULL; rejecting %@
No Peer
accept
countersign
leave
revert
ignore
trusted
untrusted
oldCircle
newCircle
prospective_circle
circleOps-Old
circleOps-New
circle
canary
iCloudIdentityFix
noPrivateKey
updatingGenSignature
B16@?0^{__OpaqueSOSCircle=}8
v16@?0^{__OpaqueSOSPeerInfo=}8
resetToOffering
v24@?0^{__CFDictionary=}8^{__CFError=}16
Tried to publish nil Cloud Parameters
engine
otrtimer
Failed to parse SOSMessage
v48@?0^{__OpaqueSOSPeer=}8^{__OpaqueSOSCoder=}16^{SOSDataSource=^{__OpaqueSOSEngine}^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?}24^{__OpaqueSOSTransaction=}32^B40
com.apple.security.sos.messagertt
Missing engine
ratelimit
NoAttribute
com.apple.securebackupd
v32@?0@"NSString"8Q16^B24
timestamp
peerShouldSend
attributeBadness
com.apple.security.sos.synccompletion
iCloud Keychain Account Meta-data
Error %@ reading for service '%@'
SecItemCopyMatching returned non-data in '%@'
Error saving %@ to service '%@'
Unknown model
^{os_state_data_s=I(?=b32I){os_state_data_decoder_s=[64c][64c]}[64c][0C]}16@?0^{os_state_hints_s=I*II}8
CloudCircle Account Object
secAccount
views
B24@?0@"SOSAccountTransaction"8^^{__CFError}16
force-push
updates
B16@?0^^{__CFError}8
initial sync
B16@?0@"SOSAccount"8
piggy
devRecovery
syncWithPeers
B24@?0^{__CFSet=}8^^{__CFError}16
syncwith
octagon
Updating Octagon Keys in SOS
Device has no full peer info
B24@?0^{__OpaqueSOSPeerInfo={__CFRuntimeBase=QAQ}^{__CFDictionary}^{__CFData}^{__CFDictionary}^{__CFString}^{__CFString}q^{__CFString}B^{__CFDictionary}}8^^{__CFError}16
octagon-preload-keys
Device has no SOSAccount
CKKS4All update
B24@?0^{__OpaqueSOSFullPeerInfo=}8^^{__CFError}16
B16@?0^{__OpaqueSOSPeerInfo={__CFRuntimeBase=QAQ}^{__CFDictionary}^{__CFData}^{__CFDictionary}^{__CFString}^{__CFString}q^{__CFString}B^{__CFDictionary}}8
account
v56@?0@"SOSAccount"8^{__OpaqueSOSCircle=}16^{__CFSet=}24^{__CFSet=}32^{__CFSet=}40^{__CFSet=}48
^{__CFArray=}16@?0^{__CFDictionary=}8
v24@?0^{__CFData=}8^{__CFError=}16
com.apple.securityd.cloudcircleserver
DeviceName
Unknown name
Cannot inflate account object as root
fresh
success
failure
flush
Success
Failure
InitialSync.WaitPeriod
Octagon Peer Signing 
Octagon Peer Encryption 
ID for %@-%@
<?xml version="1.0" encoding="UTF-8"?>                          <!DOCTYPE plist PUBLIC "-//Apple//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd">                          <plist version="1.0">                          <dict>                          <key>general</key>                          <dict>                          <key>maxStateSize</key>                          <integer>250</integer>                          <key>maxItemAge</key>                          <integer>3600</integer>                          <key>overloadDuration</key>                          <integer>1800</integer>                          <key>name</key>                          <string>SOS</string>                          <key>MAType</key>                          <string></string>                          </dict>                          <key>groups</key>                          <array>                                <dict>                                    <key>property</key>                                    <string>global</string>                                    <key>capacity</key>                                    <integer>1000</integer>                                    <key>rate</key>                                    <integer>10</integer>                                    <key>badness</key>                                    <integer>1</integer>                                </dict>                                <dict>                                    <key>property</key>                                    <string>accessGroup</string>                                    <key>capacity</key>                                    <integer>50</integer>                                    <key>rate</key>                                    <integer>900</integer>                                    <key>badness</key>                                    <integer>3</integer>                                </dict>                          </array>                          </dict>                          </plist>                          
SOSRing
v8@?0
Applicants
Rejections
LastModifier
PeerIDs
Payload
BackupViews
Generation
RingName
RingType
Identifier
RingVersion
ring
No ring name
Failed to allocate unsigned information area
Failed to allocate signed information area
Failed to allocate signature area
Failed to allocate data area
Failed to allocate ring type
Failed to allocate ring version
Failed to allocate ring identifier
Failed to allocate applicant area
Failed to allocate rejection area
Failed to allocate generation count
Failed to allocate PeerID
MEMBER
APPLICANTS
REJECTS
Development
SOSRingSign Lacking ring or private key
v16@?0^{__CFString=}8
<SOSRing: '%@'
Gen: %@, 
Mod: %@, 
P: [%@], 
A: [%@], 
R: [%@], 
S: [%@]>
com.apple.private.security.initial-sync
v16@?0@"SOSAccountTransaction"8
v12@?0B8
com.apple.securityd.sos
v16@?0r^v8
transport
v24@?0r^v8r^v16
circleChange
No peer for circle
SecError
Octagon Peer Signing ID for %@
SOSCheckOctagonSigningKey
Octagon Peer Encryption ID for %@
SOSCheckOctagonEncryptionKey
Don't have circle
circleOps
circleOp
SecWarning
stringByReplacingOccurrencesOfString:withString:
componentsSeparatedByString:
count
objectAtIndexedSubscript:
initWithBase64EncodedString:options:
JSONObjectWithData:options:error:
objectForKey:
isEqual:
date
timeIntervalSince1970
doubleValue
stringByAppendingString:
dataUsingEncoding:
bytes
length
dataWithBytes:length:
containsObject:
objectAtIndex:
initWithCapacity:
countByEnumeratingWithState:objects:count:
addObject:
stringByPaddingToLength:withString:startingAtIndex:
arrayWithObjects:count:
watchdog
init
activateTimer
watchdogrusage:
secondsFromMachTime:
triggerOSFaults
runWatchdog
numberWithUnsignedLongLong:
numberWithLong:
dictionaryWithObjects:forKeys:count:
array
isEqualToString:
longValue
enumerateKeysAndObjectsUsingBlock:
stringWithFormat:
errorWithDomain:code:userInfo:
watchdogParameters
setWatchdogParameters:error:
diskUsageHigh
.cxx_destruct
_rusageBaseline
_lastCheckTime
_timer
_runtimeSecondsBeforeWatchdog
_resetPeriod
_checkPeriod
_checkPeriodLeeway
_gracefulExitLeeway
_diskUsageBaseLine
_diskUsageLimit
_diskUsageHigh
TB,R,V_diskUsageHigh
_setFileNameLocalizationEnabled:
sharedManager
currentPersona
userPersonaType
userPersonaNickName
userPersonaUniqueString
UTF8String
init:
transaction
setTransaction:
_transaction
T@"NSObject<OS_os_transaction>",&,V_transaction
clientHasBooleanEntitlement:
manager
completedSecCKKSInitialize
wait:
objectForKeyedSubscript:
mutableCopy
callCallback:error:
setObject:forKeyedSubscript:
errorWithDomain:code:description:
setCurrentItemForAccessGroup:hash:accessGroup:identifier:viewHint:replacing:hash:complete:
findItemPersistentRefByUUID:extraLoggingString:complete:
getCurrentItemForAccessGroup:identifier:viewHint:fetchCloudValue:complete:
verifyBackupIntegrity:completion:
SecItemAddAndNotifyOnSync:syncCallback:complete:
secItemSetCurrentItemAcrossAllDevices:newCurrentItemHash:accessGroup:identifier:viewHint:oldCurrentItemReference:oldCurrentItemHash:complete:
secItemFetchCurrentItemAcrossAllDevices:identifier:viewHint:fetchCloudValue:complete:
secItemDigest:accessGroup:complete:
secKeychainDeleteMultiuser:complete:
secItemVerifyBackupIntegrity:completion:
secItemDeleteForAppClipApplicationIdentifier:completion:
secItemPersistKeychainWritesAtHighPerformanceCost:
secItemPromoteItemsForAppClip:toParentApp:completion:
effectiveUserIdentifier
auditToken
dealloc
initWithConnection:
initWithSecurityClient:
connection
setConnection:
_client
_connection
T@"NSXPCConnection",W,V_connection
fakeEntitlements
initWithSecurityClient:fakeEntitlements:
setFakeEntitlements:
_fakeEntitlements
T@"NSMutableDictionary",&,V_fakeEntitlements
initWithMachServiceName:
setListener:
listener
setDelegate:
resume
valueForEntitlement:
class
self
performSelector:
performSelector:withObject:
performSelector:withObject:withObject:
isProxy
isKindOfClass:
isMemberOfClass:
conformsToProtocol:
respondsToSelector:
retain
release
autorelease
retainCount
zone
hash
superclass
description
debugDescription
TQ,R
T#,R
T@"NSString",R,C
interfaceWithProtocol:
setExportedInterface:
exportedInterface
configureSecuritydXPCProtocol:
setExportedObject:
listener:shouldAcceptNewConnection:
_listener
T@"NSXPCListener",&,V_listener
dictionaryRepresentation
dictionary
setObject:forKey:
setKey:
setOptionalParams:
allocWithZone:
copyWithZone:
hasKey
hasOptionalParams
readFrom:
writeTo:
copyTo:
mergeFrom:
optionalParams
_key
_optionalParams
TB,R,N
T@"NSData",&,N,V_key
T@"NSData",&,N,V_optionalParams
mutabilityQueue
lockedStates
removeAllObjects
setKeybag_state:
numberWithInt:
boolValue
numberWithBool:
keybag_state
removeObjectAtIndex:
unlockAllClasses
trapdoor
reset
isLocked:
forceInvalidPersona
forceUnwrapKeyDecodeFailure
isSEPDown
useGenerationCount
lockClassA
lockClassA_C
failNextDecryptRefKey:
popDecryptRefKeyFailure
setOperationsUntilUnlock:
updateOperationsUntilUnlock
T@"NSMutableDictionary",R
T@"NSObject<OS_dispatch_queue>",R
copy
setKeyData:
initWithBitSize:
keyData
initWithData:specifier:error:
initWithData:
externalData
setExternalData:
acmHandle
setAcmHandle:
data
setBlob:
initWithKeyData:parameters:error:
blob
_keyData
_acmHandle
_externalData
_blob
T@"NSData",&,V_keyData
T@"_SFAESKey",&,V_key
T@"NSData",&,V_acmHandle
T@"NSData",&,V_externalData
T@"NSData",&,V_blob
code
keySpecifier
initWithKeySpecifier:authenticationMode:
encrypt:withKey:error:
archivedDataWithRootObject:requiringSecureCoding:error:
hasExternalData
hasAcmHandle
unarchivedObjectOfClass:fromData:error:
ciphertext
authenticationCode
initializationVector
decrypt:withKey:error:
setAccessGroups:
hasAccessGroups
accessGroups
_accessGroups
T@"NSData",&,N,V_accessGroups
T@"NSData",&,N,V_externalData
T@"NSData",&,N,V_acmHandle
triggerAutoBugCaptureWithType:subType:subtypeContext:events:payload:detectedProcess:
triggerAutoBugCaptureWithType:subType:
string
appendString:
concatenateWithSeparator:
componentsJoinedByString:
compactDescription
removeObjectForKey:
extractObjectForKey:
isEmpty
enumerateObjectsUsingBlock:
containsElementsNotIn:
allObjects
compare:
sortedArrayUsingSelector:
shortDescription
sortedElementsTruncated:JoinedByString:
substringToIndex:
insertObject:atIndex:
sortUsingSelector:
sortedElementsJoinedByString:
dataWithLength:
mutableBytes
replaceBytesInRange:withBytes:length:
dataWithSpace:DEREncode:
currentHandler
stringWithUTF8String:
handleFailureInFunction:file:lineNumber:description:
radarnumber
isRateLimited
initWithSuiteName:
keyname:
valueForKey:
dateByAddingTimeInterval:
alert
queue
isRateLimited:
askUserIfTTR:
triggerTapToRadar:
updateRetryTimestamp
disableTTRsEntirely
initTapToRadar:description:radar:
clearRetryTimestamp
trigger
componentID
setComponentID:
componentName
setComponentName:
componentVersion
setComponentVersion:
setAlert:
radarDescription
setRadarDescription:
setRadarnumber:
setQueue:
_componentID
_componentName
_componentVersion
_alert
_radarDescription
_radarnumber
_queue
T@"NSString",&,V_alert
T@"NSString",&,V_radarDescription
T@"NSString",&,V_radarnumber
T@"NSObject<OS_dispatch_queue>",&,V_queue
T@"NSString",&,V_componentID
T@"NSString",&,V_componentName
T@"NSString",&,V_componentVersion
initWithLockStateTracker:
globalTracker
server
controller
setController:
_controller
T@"KeychainItemUpgradeRequestController",&,V_controller
domain
cuttlefishXPCConnection
retryable:
synchronousRemoteObjectProxyWithErrorHandler:
pingWithReply:
dumpWithContainer:context:reply:
departByDistrustingSelfWithContainer:context:reply:
distrustPeerIDsWithContainer:context:peerIDs:reply:
trustStatusWithContainer:context:reply:
resetWithContainer:context:resetReason:reply:
localResetWithContainer:context:reply:
setAllowedMachineIDsWithContainer:context:allowedMachineIDs:honorIDMSListChanges:reply:
addAllowedMachineIDsWithContainer:context:machineIDs:reply:
removeAllowedMachineIDsWithContainer:context:machineIDs:reply:
fetchAllowedMachineIDsWithContainer:context:reply:
fetchEgoEpochWithContainer:context:reply:
prepareWithContainer:context:epoch:machineID:bottleSalt:bottleID:modelID:deviceName:serialNumber:osVersion:policyVersion:policySecrets:syncUserControllableViews:secureElementIdentity:setting:signingPrivKeyPersistentRef:encPrivKeyPersistentRef:reply:
establishWithContainer:context:ckksKeys:tlkShares:preapprovedKeys:reply:
vouchWithContainer:context:peerID:permanentInfo:permanentInfoSig:stableInfo:stableInfoSig:ckksKeys:reply:
preflightVouchWithBottleWithContainer:context:bottleID:reply:
vouchWithBottleWithContainer:context:bottleID:entropy:bottleSalt:tlkShares:reply:
preflightVouchWithRecoveryKeyWithContainer:context:recoveryKey:salt:reply:
preflightVouchWithCustodianRecoveryKeyWithContainer:context:crk:reply:
vouchWithRecoveryKeyWithContainer:context:recoveryKey:salt:tlkShares:reply:
vouchWithCustodianRecoveryKeyWithContainer:context:crk:tlkShares:reply:
joinWithContainer:context:voucherData:voucherSig:ckksKeys:tlkShares:preapprovedKeys:reply:
preflightPreapprovedJoinWithContainer:context:preapprovedKeys:reply:
attemptPreapprovedJoinWithContainer:context:ckksKeys:tlkShares:preapprovedKeys:reply:
updateWithContainer:context:forceRefetch:deviceName:serialNumber:osVersion:policyVersion:policySecrets:syncUserControllableViews:secureElementIdentity:reply:
setPreapprovedKeysWithContainer:context:preapprovedKeys:reply:
updateTLKsWithContainer:context:ckksKeys:tlkShares:reply:
fetchViableBottlesWithContainer:context:reply:
fetchEscrowContentsWithContainer:context:reply:
fetchPolicyDocumentsWithContainer:context:versions:reply:
fetchCurrentPolicyWithContainer:context:modelIDOverride:isInheritedAccount:reply:
validatePeersWithContainer:context:reply:
fetchTrustStateWithContainer:context:reply:
setRecoveryKeyWithContainer:context:recoveryKey:salt:ckksKeys:reply:
createCustodianRecoveryKeyWithContainer:context:recoveryKey:salt:ckksKeys:uuid:kind:reply:
removeCustodianRecoveryKeyWithContainer:context:uuid:reply:
reportHealthWithContainer:context:stateMachineState:trustState:reply:
pushHealthInquiryWithContainer:context:reply:
requestHealthCheckWithContainer:context:requiresEscrowCheck:knownFederations:reply:
getSupportAppInfoWithContainer:context:reply:
fetchViableEscrowRecordsWithContainer:context:forceFetch:reply:
removeEscrowCacheWithContainer:context:reply:
resetAccountCDPContentsWithContainer:context:reply:
fetchRecoverableTLKSharesWithContainer:context:peerID:reply:
fetchAccountSettingsWithContainer:context:reply:
prepareInheritancePeerWithContainer:context:epoch:machineID:bottleSalt:bottleID:modelID:deviceName:serialNumber:osVersion:policyVersion:policySecrets:syncUserControllableViews:secureElementIdentity:signingPrivKeyPersistentRef:encPrivKeyPersistentRef:crk:reply:
recoverTLKSharesForInheritorWithContainer:context:crk:tlkShares:reply:
initWithCuttlefishXPCConnection:
_cuttlefishXPCConnection
T@"<NSXPCProxyCreating>",R,V_cuttlefishXPCConnection
intendedViewStatus
performWithStatus:
deps
cuttlefishXPCWrapper
containerName
contextID
setError:
lockStateTracker
error
isLockedError:
initWithFlag:conditions:
flagHandler
handlePendingFlag:
peerStatus
peerMissingState
setNextState:
viewList
stateHolder
setTPSyncingPolicy:
persistAccountChanges:error:
ckks
setCurrentSyncingPolicy:
notifierClass
post:
intendedState
nextState
T@"NSString<OctagonStateString>",&
T@"NSString<OctagonStateString>",R
initWithDependencies:intendedViewStatus:intendedState:peerMissingState:errorState:
groupStart
setDeps:
setPeerMissingState:
setIntendedViewStatus:
_intendedViewStatus
_intendedState
_nextState
_deps
_peerMissingState
T@"OTOperationDependencies",&,V_deps
T@"NSString<OctagonStateString>",&,V_peerMissingState
Ti,V_intendedViewStatus
T@"NSString<OctagonStateString>",&,V_nextState
T@"NSString<OctagonStateString>",R,V_intendedState
setUuid:
setZoneName:
setKeyclass:
uuid
zoneName
keyclass
_keyclass
_uuid
_zoneName
T@"NSString",&,N,V_uuid
T@"NSString",&,N,V_zoneName
T@"NSString",&,N,V_keyclass
numberWithLongLong:
addTlkSharesForVouchedIdentity:
setPeerID:
setAltDSID:
setSyncingPolicy:
setVoucher:
setVoucherSignature:
tlkSharesForVouchedIdentitysCount
clearTlkSharesForVouchedIdentitys
tlkSharesForVouchedIdentityAtIndex:
setSecureElementIdentity:
setSettings:
tlkSharesForVouchedIdentityType
hasPeerID
icloudAccountState
setIcloudAccountState:
setHasIcloudAccountState:
hasIcloudAccountState
icloudAccountStateAsString:
StringAsIcloudAccountState:
setEpoch:
setHasEpoch:
hasEpoch
hasAltDSID
trustState
setTrustState:
setHasTrustState:
hasTrustState
trustStateAsString:
StringAsTrustState:
setLastHealthCheckup:
setHasLastHealthCheckup:
hasLastHealthCheckup
attemptedJoin
setAttemptedJoin:
setHasAttemptedJoin:
hasAttemptedJoin
attemptedJoinAsString:
StringAsAttemptedJoin:
cdpState
setCdpState:
setHasCdpState:
hasCdpState
cdpStateAsString:
StringAsCdpState:
hasSyncingPolicy
hasVoucher
hasVoucherSignature
hasSecureElementIdentity
setIsInheritedAccount:
setHasIsInheritedAccount:
hasIsInheritedAccount
setWarmedEscrowCache:
setHasWarmedEscrowCache:
hasWarmedEscrowCache
setWarnedTooManyPeers:
setHasWarnedTooManyPeers:
hasWarnedTooManyPeers
hasSettings
peerID
epoch
altDSID
lastHealthCheckup
syncingPolicy
voucher
voucherSignature
tlkSharesForVouchedIdentitys
setTlkSharesForVouchedIdentitys:
secureElementIdentity
isInheritedAccount
warmedEscrowCache
warnedTooManyPeers
settings
_epoch
_lastHealthCheckup
_altDSID
_attemptedJoin
_cdpState
_icloudAccountState
_peerID
_secureElementIdentity
_settings
_syncingPolicy
_tlkSharesForVouchedIdentitys
_trustState
_voucher
_voucherSignature
_isInheritedAccount
_warmedEscrowCache
_warnedTooManyPeers
_has
T@"NSString",&,N,V_peerID
TB,N
Ti,N,V_icloudAccountState
Tq,N,V_epoch
T@"NSString",&,N,V_altDSID
Ti,N,V_trustState
TQ,N,V_lastHealthCheckup
Ti,N,V_attemptedJoin
Ti,N,V_cdpState
T@"NSData",&,N,V_syncingPolicy
T@"NSData",&,N,V_voucher
T@"NSData",&,N,V_voucherSignature
T@"NSMutableArray",&,N,V_tlkSharesForVouchedIdentitys
T@"NSData",&,N,V_secureElementIdentity
TB,N,V_isInheritedAccount
TB,N,V_warmedEscrowCache
TB,N,V_warnedTooManyPeers
T@"OTAccountMetadataClassCAccountSettings",&,N,V_settings
safeErrorClasses
restore:dsid:secret:escrowRecordID:reply:
setClasses:forSelector:argumentIndex:ofReply:
octagonEncryptionPublicKey:
octagonSigningPublicKey:
listOfEligibleBottledPeerRecords:
signIn:container:context:reply:
signOut:context:reply:
notifyIDMSTrustLevelChangeForContainer:context:reply:
reset:
handleIdentityChangeForSigningKey:ForEncryptionKey:ForPeerID:reply:
rpcEpochWithConfiguration:reply:
rpcPrepareIdentityAsApplicantWithConfiguration:reply:
rpcVoucherWithConfiguration:peerID:permanentInfo:permanentInfoSig:stableInfo:stableInfoSig:reply:
rpcJoinWithConfiguration:vouchData:vouchSig:reply:
preflightBottledPeer:dsid:reply:
launchBottledPeer:bottleID:reply:
scrubBottledPeer:bottleID:reply:
status:context:reply:
fetchEgoPeerID:context:reply:
fetchCliqueStatus:context:configuration:reply:
fetchTrustStatus:context:configuration:reply:
startOctagonStateMachine:context:reply:
resetAndEstablish:context:altDSID:resetReason:reply:
establish:context:altDSID:reply:
leaveClique:context:reply:
removeFriendsInClique:context:peerIDs:reply:
peerDeviceNamesByPeerID:context:reply:
fetchAllViableBottles:context:reply:
restore:contextID:bottleSalt:entropy:bottleID:reply:
fetchEscrowContents:contextID:reply:
createRecoveryKey:contextID:recoveryKey:reply:
joinWithRecoveryKey:contextID:recoveryKey:reply:
healthCheck:context:skipRateLimitingCheck:reply:
waitForOctagonUpgrade:context:reply:
postCDPFollowupResult:type:error:containerName:contextName:reply:
tapToRadar:description:radar:reply:
refetchCKKSPolicy:contextID:reply:
setCDPEnabled:contextID:reply:
getCDPStatus:contextID:reply:
fetchEscrowRecords:contextID:forceFetch:reply:
setUserControllableViewsSyncStatus:contextID:enabled:reply:
fetchUserControllableViewsSyncStatus:contextID:reply:
resetAccountCDPContents:contextID:reply:
setLocalSecureElementIdentity:contextID:secureElementIdentity:reply:
removeLocalSecureElementIdentityPeerID:contextID:secureElementIdentityPeerID:reply:
fetchTrustedSecureElementIdentities:contextID:reply:
fetchAccountSettings:contextID:reply:
fetchAccountWideSettings:contextID:reply:
persistAccountSettings:context:setting:reply:
waitForPriorityViewKeychainDataRecovery:contextID:reply:
createCustodianRecoveryKey:contextID:uuid:reply:
joinWithCustodianRecoveryKey:contextID:custodianRecoveryKey:reply:
preflightJoinWithCustodianRecoveryKey:contextID:custodianRecoveryKey:reply:
removeCustodianRecoveryKey:contextID:uuid:reply:
createInheritanceKey:contextID:uuid:reply:
generateInheritanceKey:contextID:uuid:reply:
storeInheritanceKey:contextID:ik:reply:
joinWithInheritanceKey:contextID:inheritanceKey:reply:
preflightJoinWithInheritanceKey:contextID:inheritanceKey:reply:
removeInheritanceKey:contextID:uuid:reply:
tlkRecoverabilityForEscrowRecordData:contextID:recordData:reply:
initWithDependencies:refetchNeeded:
fetchBeforeGettingKeyset
findKeySets:
desiredTimeout
timeout:
intendedZoneIDs
unionSet:
keysets
allKeys
viewFilter
zoneID
asKeychainBackedSet:
pendingTLKShares
share
setViewKeySets:
setIncompleteKeySets:
setPendingTLKShares:
setZonesTimedOutWithoutKeysets:
viewKeySets
incompleteKeySets
zonesTimedOutWithoutKeysets
named:withBlock:
addDependency:
runBeforeGroupFinished:
initWithDependencies:viewsToFetch:
setDesiredTimeout:
setCkks:
setViewFilter:
setFetchBeforeGettingKeyset:
_fetchBeforeGettingKeyset
_viewKeySets
_incompleteKeySets
_pendingTLKShares
_zonesTimedOutWithoutKeysets
_desiredTimeout
_ckks
_viewFilter
T@"CKKSKeychainView",&,V_ckks
T@"NSSet",&,V_viewFilter
TB,V_fetchBeforeGettingKeyset
T@"NSArray",&,V_viewKeySets
T@"NSArray",&,V_incompleteKeySets
T@"NSArray",&,V_pendingTLKShares
T@"NSSet",&,V_zonesTimedOutWithoutKeysets
TQ,V_desiredTimeout
setFinishedOp:
finishedOp
dependOnBeforeGroupFinished:
initWithDependencies:intendedState:errorState:
_finishedOp
T@"NSOperation",&,V_finishedOp
errorWithDomain:code:description:underlying:
setW:
setHasW:
hasW
setWebAccess:
setHasWebAccess:
hasWebAccess
webAccess
_webAccess
TB,N,V_w
TB,N,V_webAccess
boolForKey:
setWithArray:
stringValue
integerValue
numberWithInteger:
dateFromString:
asBOOL
asNSInteger
asString
asNSNumberInteger
asISO8601Date
asBase64DecodedData
setStringValue:
_stringValue
T@"NSString",&,V_stringValue
initWithFormat:
appendFormat:
sqlOp
columnName
values
arrayWithCapacity:
value
makeWhereClause:
bindWhereClause:whereDict:cferror:
groupByClause:
orderByClause:
quotedString:
stringByAppendingFormat:
saveToDatabaseWithConnection:error:
whereClauseToFindSelf
originalSelfWhereClause
isEqualToDictionary:
sqlTable
deleteFromTable:where:connection:error:
sqlValues
saveToDatabaseTable:row:connection:error:
tryFromDatabaseWhere:error:
sqlColumns
fromDatabaseRow:
memoizeOriginalSelfWhereClause
queryDatabaseTable:where:columns:groupBy:orderBy:limit:processRow:error:
allWhere:error:
fetch:where:orderBy:error:
exceptionWithName:reason:userInfo:
queryMaxValueForField:inTable:where:columns:processRow:
performCKKSTransaction:
deleteAll:
fromDatabaseWhere:error:
all:
fetch:error:
fetch:where:error:
saveToDatabase:
deleteFromDatabase:
setOriginalSelfWhereClause:
_originalSelfWhereClause
T@"NSDictionary",C,V_originalSelfWhereClause
initWithOperation:columnName:
op:column:
setSqlOp:
setColumnName:
_sqlOp
_columnName
TQ,V_sqlOp
TQ,V_columnName
initWithOperation:value:
op:value:
setValue:
_value
T@"NSString",&,V_value
initWithValues:
setValues:
_values
T@"NSArray",&,V_values
initWithCoder:
setWithObjects:
decodeObjectOfClasses:forKey:
dictionaryWithObjectsAndKeys:
config
buckets
overloadUntil
intValue
capacity:
rate:
timeIntervalSinceDate:
trim:
unsignedIntValue
consumeTokenFromBucket:type:at:
accessgroup
laterDate:
setBuckets:
setOverloadUntil:
keysOfEntriesPassingTest:
removeObjectsForKeys:
encodeObject:forKey:
topOffendingAccessGroups:
hasPrefix:
objectsForKeys:notFoundMarker:
dictionaryWithObjects:forKeys:
keysSortedByValueUsingSelector:
reverseObjectEnumerator
subarrayWithRange:
supportsSecureCoding
encodeWithCoder:
TB,R
judge:at:limitTime:
stateSize
diagnostics
setConfig:
_config
_buckets
_overloadUntil
T@"NSDictionary",&,V_config
T@"NSMutableDictionary",&,V_buckets
T@"NSDate",&,V_overloadUntil
initWithName:states:flags:initialState:queue:stateEngine:lockStateTracker:reachabilityTracker:
_onqueueContains:
_onqueueRemoveFlag:
initWithIntendedState:errorState:lockStateTracker:
initWithIntendedState:errorState:enforceRateLimiting:lockStateTracker:
named:entering:
unlockDependency
addNullableDependency:
loadAllFromKeychain:
hasUploadCompleted
uploadCompleted
haveRecordedDate
logger
datePropertyForKey:
setDateProperty:forKey:
setHaveRecordedDate:
certCached
forceIgnoreCloudServicesRateLimiting
hasLastCloudServicesTriggerTime
lastCloudServicesTriggerTime
hasSerializedPrerecord
escrowAttemptedWithinLastSeconds:
stateMachine
startOperation
setReason:
setExpectedFederationID:
setHasCertCached:
setSerializedPrerecord:
setSerializedReason:
saveToKeychain:
UUID
UUIDString
setTriggerRequestTime:
handleFlag:
setWithObject:
numberOfRecordsUploaded
doSimpleStateMachineRPC:op:sourceStates:reply:
_onqueueNextStateMachineTransition:flags:pendingFlags:
triggerEscrowUpdateRPC:options:reply:
storePrerecordsInEscrowRPC:
setStateMachine:
setForceIgnoreCloudServicesRateLimiting:
setLockStateTracker:
_forceIgnoreCloudServicesRateLimiting
_haveRecordedDate
_stateMachine
_lockStateTracker
T@"CKKSLockStateTracker",&,V_lockStateTracker
TB,V_haveRecordedDate
T@"OctagonStateMachine",&,V_stateMachine
TB,V_forceIgnoreCloudServicesRateLimiting
store
setStore:
setupDeviceNameListener
deviceNameUpdateListeners
registerListener:
initWithName:
setDeviceNameUpdateListeners:
modelID
deviceName
osVersion
serialNumber
registerForDeviceNameUpdates:
_deviceNameUpdateListeners
_store
T@"CKKSListenerCollection",&,V_deviceNameUpdateListeners
T^{__SCDynamicStore=},V_store
deviceNameUpdated
iterateListeners:
aksEncryptWithKeybag:keyclass:plaintext:outKeyclass:ciphertext:personaId:personaIdLength:error:
aksDecryptWithKeybag:keyclass:ciphertext:outKeyclass:plaintext:personaId:personaIdLength:error:
strongToWeakObjectsMapTable
init:error:
nsnotificationCenterClass
defaultCenter
notifyCKAccountStatusChange:
addObserver:selector:name:object:
notifyCircleChange:
performInitialDispatches
initWithName:initialDelay:expontialBackoff:maximumDelay:keepProcessAlive:dependencyDescriptionCode:block:
finishedInitialDispatches
fulfill
removeObserver:
currentCKAccountInfo
hsa2iCloudAccountStatus
descriptionInternal:
ckChangeListeners
objectEnumerator
nextObject
firstCKAccountFetch
_onqueueDeliverCurrentCloudKitState:listenerQueue:oldStatus:group:
container
fetchCKAccountStatusScheduler
setFirstCKAccountFetch:
_onqueueUpdateAccountState:deliveredSemaphore:
accountInfoWithCompletionHandler:
accountStatus
setCkdeviceID:
setCkdeviceIDError:
ckdeviceIDInitialized
fetchCurrentDeviceIDWithCompletionHandler:
setCkdeviceIDInitialized:
getCircleStatus
currentCircleStatus
setCurrentCircleStatus:
status
_onqueueUpdateCirclePeerID:
setAccountCirclePeerID:
setAccountCirclePeerIDError:
accountCirclePeerIDInitialized
fetchCirclePeerID:
setAccountCirclePeerIDInitialized:
_onqueueUpdateAccountState:dispatchGroup:
setCurrentCKAccountInfo:
ckAccountInfoInitialized
_onqueueUpdateCKDeviceID:
_onqueueDeliverCloudKitStateChanges:dispatchGroup:
keyEnumerator
cloudkitAccountStateChange:to:
notifyCKAccountStatusChangeAndWait:
octagonInformationInitialized
initToChain:
setOctagonInformationInitialized:
setTimeoutWaitForCKAccount:
initWithStatus:
setOctagonStatus:
setOctagonPeerID:
setHsa2iCloudAccountStatus:
hsa2iCloudAccountInitialized
setHsa2iCloudAccountInitialized:
stringFromAccountStatus:
registerForNotificationsOfCloudKitAccountStatusChange:
recheckCKAccountStatus
ckdeviceID
T@"NSString",C
triggerOctagonStatusFetch
setHSA2iCloudAccountStatus:
octagonStatus
octagonPeerID
T@"OTCliqueStatusWrapper",R
T@"NSString",R
init:nsnotificationCenterClass:
notifyCKAccountStatusChangeAndWaitForSignal
notifyCircleStatusChangeAndWaitForSignal
checkForAllDeliveries
setFinishedInitialDispatches:
setCkAccountInfoInitialized:
ckdeviceIDError
accountCirclePeerID
accountCirclePeerIDError
setCkChangeListeners:
setContainer:
_firstCKAccountFetch
_octagonPeerID
_finishedInitialDispatches
_fetchCKAccountStatusScheduler
_currentCKAccountInfo
_ckAccountInfoInitialized
_ckdeviceID
_ckdeviceIDError
_ckdeviceIDInitialized
_currentCircleStatus
_accountCirclePeerID
_accountCirclePeerIDError
_accountCirclePeerIDInitialized
_octagonStatus
_octagonInformationInitialized
_hsa2iCloudAccountStatus
_hsa2iCloudAccountInitialized
_nsnotificationCenterClass
_ckChangeListeners
_container
T#,R,V_nsnotificationCenterClass
T@"NSMapTable",&,V_ckChangeListeners
T@"CKContainer",&,V_container
TB,V_firstCKAccountFetch
T@"OTCliqueStatusWrapper",&,V_octagonStatus
T@"NSString",&,V_octagonPeerID
T@"CKKSCondition",&,V_octagonInformationInitialized
Tq,V_hsa2iCloudAccountStatus
T@"CKKSCondition",&,V_hsa2iCloudAccountInitialized
T@"CKKSCondition",&,V_finishedInitialDispatches
T@"CKKSNearFutureScheduler",R,V_fetchCKAccountStatusScheduler
T@"CKAccountInfo",&,V_currentCKAccountInfo
T@"CKKSCondition",&,V_ckAccountInfoInitialized
T@"NSString",C,V_ckdeviceID
T@"NSError",&,V_ckdeviceIDError
T@"CKKSCondition",&,V_ckdeviceIDInitialized
T@"SOSAccountStatus",&,V_currentCircleStatus
T@"NSString",&,V_accountCirclePeerID
T@"NSError",&,V_accountCirclePeerIDError
T@"CKKSCondition",&,V_accountCirclePeerIDInitialized
setStatus:
_status
_error
Ti,V_status
T@"NSError",&,V_error
Tq,R,V_status
setupAnalytics
triggerEscrowUpdate:options:error:
triggerEscrowUpdate:options:reply:
fetchRequestStatuses:
allValues
escrowCompletedWithinLastSeconds:reply:
loadFromKeychain:error:
pokeStateMachine
serializedPrerecord
deleteFromKeychain:
fuzzyDaysSinceDate:
AddMultiSamplerForName:withTimeInterval:block:
request:
cachePrerecord:serializedPrerecord:reply:
fetchPrerecord:reply:
fetchRequestWaitingOnPasscode:
resetAllRequests:
storePrerecordsInEscrow:
triggerEscrowUpdate:error:
fetchStatuses:
pendingEscrowUpload:
escrowCompletedWithinLastSeconds:
T@"EscrowRequestController",&,V_controller
decodeObjectOfClass:forKey:
failWithError:
initWithCiphertext:wrappedKeyData:refKeyBlob:
wrappedKeyData
refKeyBlob
_ciphertext
_wrappedKeyData
_refKeyBlob
T@"_SFAuthenticatedCiphertext",R,V_ciphertext
T@"NSData",R,V_wrappedKeyData
T@"NSData",R,V_refKeyBlob
dataWithBytesNoCopy:length:
initWithKeybag:keyclass:
initWithBlob:keybag:
wrappedDataForKey:
keyWithWrappedData:
T@"NSData",R
_refKey
initWithContentsOfURL:
initWithManagedObjectModel:
_newZeroingDataWithBytesNoCopy:length:deallocator:
URLByAppendingPathExtension:
_onQueueGetDatabaseKeyDataWithError:
addPersistentStoreWithType:configuration:URL:options:error:
initWithConcurrencyType:
setPersistentStoreCoordinator:
fetchRequest
executeFetchRequest:error:
name
version
itemType
registerItemType:withManagedObjectContext:
performBlockAndWait:
_onQueueDropClassAPersistentStore
removePersistentStore:error:
_onQueueGetManagedObjectContextWithError:
performBlock:
entityType
stringRepresentation
clientAccessGroups
owner
validateItemOwner:withConnection:withError:
primaryKeyStringRepresentationWithError:
primaryKeyNameForItemTypeName:
predicateWithFormat:
setPredicate:
firstObject
primaryKeys
managedItemWithItem:withManagedObjectContext:error:
insertNewObjectForEntityForName:inManagedObjectContext:
setItemTypeName:
setLookupKey:
setLookupValue:
setLookupValueType:
setSystemEntry:
addMatchingItemsObject:
lookupAttributes
valueType
save:
performOnManagedObjectQueue:
fetchManagedItemForPersistentID:withManagedObjectContext:error:
initWithManagedItem:keychain:error:
matchingItems
initWithManagedEntity:
lookupEntries
removeMatchingItemsObject:
deleteObject:
removeOwnedItemsObject:
removeAccessedItemsObject:
ownedItems
accessedItems
accessControlList
managedItemTypeWithContext:error:
performOnManagedObjectQueueAndWait:
setItemType:
metadata
persistentID
setPersistentID:
attributes
dataWithPropertyList:format:options:error:
setMetadata:
setType:
setStringRepresentation:
setOwner:
addOwnedItemsObject:
addAccessedItemsObject:
encryptedSecretDataWithAttributeData:keybag:error:
setData:
lookupValueTypeForObject:
initWithStorageURL:modelURL:encryptDatabase:
insertItems:withConnection:completionHandler:
fetchItemForPersistentID:withConnection:completionHandler:
fetchItemsWithValue:forLookupKey:ofType:withConnection:completionHandler:
deleteItemWithPersistentID:withConnection:completionHandler:
_registerItemTypeForTesting:
itemTypeForItemTypeName:
_persistentStoreBaseURL
_persistentStoreCoordinator
_managedObjectContext
_managedItemTypeDict
_itemTypeDict
_encryptDatabase
_classAPersistentStores
lookupTupleWithKey:value:
propertyListWithData:options:format:error:
systemEntry
lookupTupleWithManagedLookupEntry:
lookupAttributesSet
initWithItemType:persistentID:attributes:lookupAttributes:owner:keyclass:
fetchFullItemWithKeychain:withConnection:completionHandler:
managedDataBlob
_itemType
_owner
_persistentID
_attributes
_lookupAttributes
_managedDataBlob
T@"NSSet",R,C,V_lookupAttributes
T@"NSData",R,C,V_managedDataBlob
T@"SecCDKeychainItemType",R,V_itemType
T@"SecCDKeychainAccessControlEntity",R,V_owner
T@"NSUUID",R,V_persistentID
T@"NSDictionary",R,C,V_attributes
T@"NSArray",R,C
Ti,R,V_keyclass
secretsFromEncryptedData:withKeybag:error:
secrets
compare:options:
sortedArrayUsingComparator:
addData:
hashValue
base64EncodedStringWithOptions:
initRandomKeyWithSpecifier:error:
initWithKeySpecifier:
digest:
encrypt:withKey:additionalAuthenticatedData:error:
decrypt:withKey:additionalAuthenticatedData:error:
initItemType:withPersistentID:attributes:lookupAttributes:secrets:owner:keyclass:
_metadata
_encryptedSecretData
_secrets
T@"SecCDKeychainItemType",R
T@"SecCDKeychainAccessControlEntity",R
T@"NSUUID",R
T@"NSDictionary",R
T@"NSArray",R
T@"NSDictionary",R,V_secrets
T@"SecCDKeychainItemMetadata",R,V_metadata
initWithKey:value:
lookupValue
lookupValueType
lookupKey
_valueType
T@"NSString",R,C,V_key
T@"<NSCopying><NSObject>",R,C,V_value
T@"NSString<SecCDKeychainLookupValueType>",R,C,V_valueType
isEqualToSet:
setName:
setVersion:
setPrimaryKeys:
setSyncableKeys:
itemTypeForVersion:
_initWithName:version:primaryKeys:syncableKeys:
syncableKeys
managedItemType
_name
_version
_primaryKeys
_syncableKeys
_managedItemType
T@"NSString",R,C,V_name
Ti,R,V_version
T@"SecCDKeychainManagedItemType",R,V_managedItemType
_initWithEntityType:stringRepresentation:
type
accessControlEntityWithType:stringRepresentation:
_entityType
_stringRepresentation
Tq,R,N,V_entityType
T@"NSString",R,N,V_stringRepresentation
encryptionIdentity
publicKey
signingIdentity
keyPair
matchesPeer:
publicEncryptionKey
publicSigningKey
T@"_SFECPublicKey",R
encryptionKey
signingKey
T@"_SFECKeyPair",R
initWithPeerID:signingIdentity:encryptionIdentity:
setEncryptionIdentity:
setSigningIdentity:
_encryptionIdentity
_signingIdentity
T@"_SFIdentity",&,V_encryptionIdentity
T@"_SFIdentity",&,V_signingIdentity
T@"NSString",R,V_peerID
essential
defaultOverCommitManager
resultType
identityForIdentifier:resultHandler:
fetchIdentity:error:
initWithCurrent:allSelves:
signingSPKI
keyWithSubjectPublicKeyInfo:
encryptionSPKI
initWithPeerID:encryptionPublicKey:signingPublicKey:viewList:
peerChangeListeners
selfPeerChanged:
trustedPeerSetChanged:
createFromProvider:
fetchSelfPeers:
fetchTrustedPeers:
registerForPeerChangeUpdates:
sendSelfPeerChangedUpdate
sendTrustedPeerSetChangedUpdate
currentState
providerID
setEssential:
initWithPeerID:containerName:contextID:cuttlefishXPC:
setPeerChangeListeners:
_essential
_providerID
_cuttlefishXPCWrapper
_containerName
_contextID
_peerChangeListeners
T@"CKKSListenerCollection",&,V_peerChangeListeners
T@"NSString",&,V_peerID
T@"CuttlefishXPCWrapper",R,V_cuttlefishXPCWrapper
T@"NSString",R,V_containerName
T@"NSString",R,V_contextID
T@"NSString",R,V_providerID
TB,V_essential
setFinishOp:
finishOp
skipRateLimitingCheck
lastHealthCheckupDate:
setHour:
currentCalendar
dateByAddingComponents:toDate:options:
persistLastHealthCheck:error:
checkIfPasscodeIsSetForDevice
knownICDPFederations:
handleRepairSuggestions:postEscrowCFU:resetOctagon:leaveTrust:moveRequest:
setPostEscrowCFU:
setPostRepairCFU:
setResetOctagon:
setLeaveTrust:
setMoveRequest:
initWithDependencies:intendedState:errorState:deviceInfo:skipRateLimitedCheck:
deviceInfo
setDeviceInfo:
setSkipRateLimitingCheck:
postRepairCFU
postEscrowCFU
resetOctagon
leaveTrust
moveRequest
requiresEscrowCheck
setRequiresEscrowCheck:
_skipRateLimitingCheck
_postRepairCFU
_postEscrowCFU
_resetOctagon
_leaveTrust
_requiresEscrowCheck
_deviceInfo
_moveRequest
_finishOp
T@"NSOperation",&,V_finishOp
TB,V_requiresEscrowCheck
T@"OTDeviceInformation",&,V_deviceInfo
TB,V_skipRateLimitingCheck
TB,V_postRepairCFU
TB,V_postEscrowCFU
TB,V_resetOctagon
TB,V_leaveTrust
T@"OTEscrowMoveRequestContext",&,V_moveRequest
numberWithUnsignedInteger:
addToStatsDictionary:key:
summary:stats:
CKKSPowerEvent:zone:
CKKSPowerEvent:zone:count:
CKKSPowerEvent:count:
OTPowerEvent:
storedOQE:
deletedOQE:
commit
delete
setDelete:
_delete
T@"NSMutableDictionary",&,V_store
T@"NSMutableDictionary",&,V_delete
initAsEssential:
forLiveCloudKit
initWithSOSAdapter:authKitAdapter:tooManyPeersAdapter:deviceInformationAdapter:personaAdapter:apsConnectionClass:escrowRequestClass:notifierClass:loggerClass:lockStateTracker:reachabilityTracker:cloudKitClassDependencies:cuttlefishXPCConnection:cdpd:
makeCKContainer:
setContexts:
setClients:
initWithContainer:sosAdapter:accountStateTracker:lockStateTracker:reachabilityTracker:personaAdapter:cloudKitClassDependencies:
contextForContainerName:contextID:
startOctagonStateMachine
registerForCircleChangedNotifications
waitForReady:
moveToCheckTrustedState
moveToCheckTrustedStateForContainer:context:
resetManager:to:
privateCloudDatabase
initWithZoneName:ownerName:
accountTracker
reachabilityTracker
gbmidRamp
initWithRecordName:localSettingName:container:database:zoneID:accountTracker:lockStateTracker:reachabilityTracker:fetchRecordRecordsOperationClass:
setGbmidRamp:
gbserialRamp
setGbserialRamp:
gbAgeRamp
setGbAgeRamp:
personaAdapter
currentThreadIsForPrimaryiCloudAccount
allowClientRPC:
loggerClass
startLogSystemMetricsForActivityNamed:
accountAvailable:error:
stopWithEvent:result:
accountNoLongerAvailable:
idmsTrustLevelChanged:
initWithServiceName:
setRemoteObjectInterface:
clients
initWithContainerName:contextID:clientName:cuttlefish:
contexts
sosAdapter
authKitAdapter
tooManyPeersAdapter
accountStateTracker
deviceInformationAdapter
contextForContainerName:contextID:sosAdapter:authKitAdapter:tooManyPeersAdapter:lockStateTracker:accountStateTracker:deviceInformationAdapter:
viewManager
ckksAccountSyncForContainer:contextID:
apsConnectionClass
escrowRequestClass
cdpd
initWithContainerName:contextID:cuttlefish:ckksAccountSync:sosAdapter:authKitAdapter:tooManyPeersAdapter:lockStateTracker:reachabilityTracker:accountStateTracker:deviceInformationAdapter:apsConnectionClass:escrowRequestClass:notifierClass:cdpd:
rpcFetchEgoPeerID:
rpcTrustStatus:reply:
rpcStatus:
rpcResetAndEstablish:reply:
rpcEstablish:reply:
rpcLeaveClique:
rpcRemoveFriendsInClique:reply:
rpcFetchDeviceNamesByPeerID:
rpcFetchAllViableBottles:
fetchEscrowContents:
handlePairingRestart:
rpcPrepareIdentityAsApplicantWithConfiguration:epoch:reply:
clearPairingUUID
rpcJoin:vouchSig:reply:
requestTrustedDeviceListRefresh
pairingUUID
clientStateMachineForContainerName:contextID:clientName:
rpcEpoch:reply:
rpcVoucher:peerID:permanentInfo:permanentInfoSig:stableInfo:stableInfoSig:reply:
joinWithBottle:entropy:bottleSalt:reply:
ensureRampsInitialized
checkRampStateWithError:
circleStatus:
OctagonStateMap
accountMetadataStore
loadOrCreateAccountMetadata:
getTPSyncingPolicy
syncUserControllableViewsAsBoolean
currentMemoizedLastHealthCheck
machineID:
machineIDOnMemoizedList:error:
egoPeerStatus:
peerCountsByMachineID
egoPeerMachineID
viablePeerCountsByModelID
numberWithUnsignedLong:
cdpContextTypes
numberPropertyForKey:
aa_primaryAppleAccount
isProvisionedForDataclass:
isEnabledForDataclass:
aa_altDSID
getAcceptedTermsForAltDSID:withError:
followupHandler
sfaStatus
sosEnabledForPlatform
rpcSetRecoveryKey:reply:
logResultForEvent:hardFailure:result:
joinWithRecoveryKey:reply:
rpcCreateCustodianRecoveryKeyWithUUID:reply:
joinWithCustodianRecoveryKey:reply:
preflightJoinWithCustodianRecoveryKey:reply:
rpcRemoveCustodianRecoveryKeyWithUUID:reply:
rpcCreateInheritanceKeyWithUUID:reply:
rpcGenerateInheritanceKeyWithUUID:reply:
rpcStoreInheritanceKeyWithIK:reply:
joinWithInheritanceKey:reply:
preflightJoinWithInheritanceKey:reply:
rpcRemoveInheritanceKeyWithUUID:reply:
notifyContainerChange:
checkOctagonHealth:reply:
setSosEnabledForPlatform:
haltOperation
clearCKKS
disablePendingFlags
paused
pendingEscrowCacheWarmup
waitForOctagonUpgrade:
rpcWaitForPriorityViewKeychainDataRecovery:
incrementIntegerPropertyForKey:
setNumberProperty:forKey:
rpcRefetchCKKSPolicy:
getCDPStatus:
setCDPEnabled:
rpcFetchAllViableEscrowRecords:reply:
rpcInvalidateEscrowCache:
rpcSetUserControllableViewsSyncingStatus:reply:
rpcFetchUserControllableViewsSyncingStatus:
rpcResetAccountCDPContents:
rpcSetLocalSecureElementIdentity:reply:
rpcRemoveLocalSecureElementIdentityPeerID:reply:
rpcFetchTrustedSecureElementIdentities:
rpcFetchAccountSettings:
rpcAccountWideSettings:
rpcPersistAccountSettings:reply:
rpcTlkRecoverabilityForEscrowRecordData:reply:
setBypassPCSEncryption:
containerIDForContainerIdentifier:
initWithContainerID:options:
invalidateEscrowCache:contextID:reply:
initWithSOSAdapter:lockStateTracker:personaAdapter:cloudKitClassDependencies:
initializeOctagon
waitForReady:context:wait:
setCuttlefishXPCConnection:
removeClientContextForContainerName:clientName:
removeContextForContainerName:contextID:
clearAllContexts
ghostbustByMidEnabled
ghostbustBySerialEnabled
ghostbustByAgeEnabled
xpc24HrNotification
setSOSEnabledForPlatformFlag:
allContextsHalt
allContextsDisablePendingFlags
allContextsPause:
setAccountStateTracker:
setReachabilityTracker:
cloudKitContainer
setViewManager:
setCdpd:
_sosEnabledForPlatform
_sosAdapter
_authKitAdapter
_deviceInformationAdapter
_accountStateTracker
_reachabilityTracker
_cloudKitContainer
_viewManager
_gbmidRamp
_gbserialRamp
_gbAgeRamp
_cdpd
_contexts
_clients
_tooManyPeersAdapter
_personaAdapter
_apsConnectionClass
_escrowRequestClass
_notifierClass
_loggerClass
T@"OTRamp",&,N,V_gbmidRamp
T@"OTRamp",&,N,V_gbserialRamp
T@"OTRamp",&,N,V_gbAgeRamp
T@"CKKSLockStateTracker",&,N,V_lockStateTracker
T@"<OctagonFollowUpControllerProtocol>",&,N,V_cdpd
T@"NSMutableDictionary",&,V_contexts
T@"NSMutableDictionary",&,V_clients
T@"<NSXPCProxyCreating>",&,V_cuttlefishXPCConnection
T@"<OTSOSAdapter>",R,V_sosAdapter
T@"<OTAuthKitAdapter>",R,V_authKitAdapter
T@"<OTTooManyPeersAdapter>",R,V_tooManyPeersAdapter
T@"<OTDeviceInformationAdapter>",R,V_deviceInformationAdapter
T@"<OTPersonaAdapter>",R,V_personaAdapter
T#,R,V_apsConnectionClass
T#,R,V_escrowRequestClass
T#,R,V_notifierClass
T#,R,V_loggerClass
TB,N,V_sosEnabledForPlatform
T@"CKKSAccountStateTracker",&,V_accountStateTracker
T@"CKKSReachabilityTracker",&,V_reachabilityTracker
T@"CKContainer",R,V_cloudKitContainer
T@"CKKSViewManager",&,V_viewManager
allDependentsSuccessful
cancel
blockOperationWithBlock:
removeDependenciesUponCompletion
completeOperation
finishOperation
operationQueue
addOperation:
isPending
cancelAllOperations
isCancelled
operationStateString
selfname
isFinished
finishDate
operationCount
dependencies
operations
removeObject:
indexOfObject:
pendingDependenciesString:
invalidateTimeout
willChangeValueForKey:
didChangeValueForKey:
removeDependency:
setFillInError:
fillInError
internalSuccesses
allSuccessful:
operationWithBlock:
named:withBlockTakingSelf:
isConcurrent
isExecuting
start
setOperationQueue:
setStartOperation:
setFinishOperation:
setInternalSuccesses:
executing
finished
_fillInError
_operationQueue
_startOperation
_finishOperation
_internalSuccesses
TB,V_fillInError
T@"NSBlockOperation",&,V_startOperation
T@"NSBlockOperation",&,V_finishOperation
T@"NSMutableArray",&,V_internalSuccesses
T@"NSOperationQueue",&,V_operationQueue
leafUUIDForRecordID:
digestValue
recordDigestDict
encodedCKRecord
initWithUUID:digest:recordDigestDict:zone:encodedRecord:
recordID
recordName
initWithUUID:digest:recordDigestDict:zone:
containsString:
setEncodedCKRecord:
null
derData
setStoredCKRecord:
recordType
handleFailureInMethod:object:file:lineNumber:description:
recordExistsForID:
leafRecordForID:error:
tryLeafRecordForID:error:
leafRecordForPendingRecord:
initWithCKRecord:
CKRecordName
ckRecordType
updateCKRecord:zoneID:
setFromCKRecord:
matchesCKRecord:
clearDigest
_recordDigestDict
_derData
_digestValue
T@"NSString",R,N,V_zoneName
T@"NSData",R,N
T@"NSString",R,N,V_uuid
T@"NSDictionary",R,N,V_recordDigestDict
intransactionRecordChanged:resync:error:
commitToDatabaseWithError:
addOrUpdateRecordUUID:withEncryptedItemData:
newLeafRecordInZone:
addOrUpdateRecord:
deleteItemWithUUID:
T@"NSMutableDictionary",R,D,N
initWithCKRecordType:encodedCKRecord:zoneID:
parentKeyUUID
generationCount
encitem
wrappedkey
encver
plaintextPCSServiceIdentifier
plaintextPCSPublicKey
plaintextPCSPublicIdentity
initWithUUID:parentKeyUUID:zoneID:encodedCKRecord:encItem:wrappedkey:generationCount:encver:
initWithUUID:parentKeyUUID:zoneID:encodedCKRecord:encItem:wrappedkey:generationCount:encver:plaintextPCSServiceIdentifier:plaintextPCSPublicKey:plaintextPCSPublicIdentity:
setEncitem:
setParentKeyUUID:
initWithBase64:
setWrappedkey:
zeroedKey
unsignedIntegerValue
setGenerationCount:
setEncver:
setPlaintextPCSServiceIdentifier:
setPlaintextPCSPublicKey:
setPlaintextPCSPublicIdentity:
initWithRecordName:zoneID:
initWithRecordID:action:
setOSVersionInRecord:
base64WrappedKey
makeAuthenticatedDataDictionaryUpdatingCKKSItemEncVer1
makeAuthenticatedDataDictionaryUpdatingCKKSItemEncVer2:
unsignedLongValue
storedCKRecord
stringForObjectValue:
unsignedLongLongValue
base64Item
tryFromDatabase:zoneID:error:
item
initWithCKKSItem:action:state:
allWithUUID:states:zoneID:error:
intransactionRecordDeleted:resync:error:
initCopyingCKKSItem:
initWithUUID:parentKeyUUID:zoneID:
initWithUUID:parentKeyUUID:zoneID:encItem:wrappedkey:generationCount:encver:
makeAuthenticatedDataDictionaryUpdatingCKKSItem:encryptionVersion:
setBase64Item:
_parentKeyUUID
_encitem
_wrappedkey
_generationCount
_encver
_plaintextPCSServiceIdentifier
_plaintextPCSPublicKey
_plaintextPCSPublicIdentity
T@"NSString",C,V_uuid
T@"NSString",C,V_parentKeyUUID
T@"NSData",C,V_encitem
base64encitem
T@"NSString",&,Gbase64Item,SsetBase64Item:
T@"CKKSWrappedAESSIVKey",C,V_wrappedkey
TQ,V_generationCount
TQ,V_encver
T@"NSNumber",&,V_plaintextPCSServiceIdentifier
T@"NSData",&,V_plaintextPCSPublicKey
T@"NSData",&,V_plaintextPCSPublicIdentity
allUUIDsInZones:error:
allUUIDs:error:
allParentKeyUUIDs:error:
all:error:
deleteAll:error:
initWithView:uuid:parentTLKUUID:keyData:
initWithWrappedKeyData:uuid:parentKeyUUID:keyclass:state:zoneID:encodedCKRecord:currentkey:
initWithViewName:tlk:
makeCKKSKey:error:
makeFakeCKKSClassKey:zoneiD:error:
tlkUUID
receiverPeerID
datafyPeerID:
senderPeerID
wrappedTLK
signature
initWithView:tlkUUID:receiverPeerID:senderPeerID:wrappedTLK:signature:
stringifyPeerID:
initForKey:senderPeerID:recieverPeerID:receiverEncPublicKeySPKI:curve:version:epoch:poisoned:wrappedKey:signature:zoneID:
initWithShare:zoneID:encodedCKRecord:
substringFromIndex:
initWithViewName:tlkShare:
makeTLKShareRecord:
dataWithData:
appendData:
subdataWithRange:
decryptItemToDictionary:keyCache:error:
addEntriesFromDictionary:
getKeychainBackedKey:
randomKeyWrappedByParent:error:
aessivkey
encryptDictionary:key:authenticatedData:error:
loadKeyForUUID:zoneID:error:
loadKeyWithUUID:zoneID:error:
unwrapAESKey:error:
decryptDictionary:key:authenticatedData:error:
decryptItemToDictionaryVersion1or2:keyCache:error:
padData:blockSize:additionalBlock:
encryptData:authenticatedData:error:
decryptData:authenticatedData:error:
removePaddingFromData:
encryptCKKSItem:dataDictionary:updatingCKKSItem:parentkey:keyCache:error:
decryptItemToDictionaryVersionNone:error:
views
zoneModifier
deleteZones:
databaseProvider
zoneModificationOperation
deletedRecordZoneIDs
userInfo
state:
setCkzonecreated:
setCkzonesubscribed:
dispatchSyncWithSQLTransaction:
zoneSubscriptionOperation
T@"CKKSOperationDependencies",&,V_deps
numberOfPeersInOctagon
sosEnabled
action
state
waitUntil
currentKeyForClass:zoneID:error:
ensureKeyLoaded:
keyForItem:zoneID:keyCache:error:
tryFromDatabase:state:zoneID:error:
initWithCKKSItem:action:state:waitUntil:accessGroup:
arrayByAddingObjectsFromArray:
stringFromDate:
claimCallbackForUUID:
intransactionMoveToState:viewState:error:
setState:
withItem:action:zoneID:keyCache:error:
fromDatabase:state:zoneID:error:
fetch:state:zoneID:error:
allInState:zoneID:error:
countsByStateInZone:error:
countByState:zone:error:
intransactionMarkAsError:viewState:error:
setItem:
setAction:
setAccessgroup:
setWaitUntil:
_item
_action
_state
_accessgroup
_waitUntil
T@"CKKSItem",&,V_item
T@"NSString",&
T@"NSString",&,V_action
T@"NSString",&,V_state
T@"NSString",&,V_accessgroup
T@"NSDate",&,V_waitUntil
fromDatabase:zoneID:error:
fetch:startingAtUUID:state:action:zoneID:error:
countNewEntriesByKeyInZone:error:
allIQEsHaveValidUnwrappingKeys:error:
setBackupWrappedMetadataKey:
setKeyClass:
setHasKeyClass:
hasKeyClass
hasBackupWrappedMetadataKey
keyClass
backupWrappedMetadataKey
_backupWrappedMetadataKey
_keyClass
Ti,N,V_keyClass
T@"NSData",&,N,V_backupWrappedMetadataKey
xpcControlEndpoint
_init
anonymousListener
endpoint
_endpoint
processIdentifier
rpcFindCorruptedItemsWithReply:
rpcDeleteCorruptedItemsWithReply:
findCorruptedItemsWithError:
deleteCorruptedItemsWithError:
notifyViewChangedScheduler
decryptCKKSItemToAttributes:keyCache:error:
setPendingClassAEntries:
setPendingClassAEntriesError:
setMissingKey:
errorItemsProcessed
setErrorItemsProcessed:
mapDictionaryToView:
handleMismatchedViewItems
_onqueueHandleMismatchedViewItem:secDbClass:attributes:intendedView:viewState:keyCache:
_onqueueUpdateIQE:withState:error:
requestPolicyCheck
_onqueueHandleIQEChange:attributes:class:viewState:sortedForThisView:keyCache:
CKRecordWithZoneID:
_onqueueHandleIQEDelete:class:viewState:
_onqueueHandleIQEChange:item:viewState:sortedForThisView:keyCache:
viewsToScan
setValue:forKey:
readyAndSyncingViews
loadAndProcessEntries:withActionFilter:
successfulItemsProcessed
fixMismatchedViewItems:
remoteItemPointers:error:
processNewCurrentItemPointers:viewState:
newOutgoingEntries
CKKSGroupWithName:
setCurrentOutgoingQueueOperationGroup:
missingKey
pendingClassAEntries
pendingClassAEntriesError
stateIfClassAItemsRemaining
activeManagedViews
logSuccessForEvent:zoneName:
logRecoverableError:forEvent:zoneName:withAttributes:
intransaction:processQueueEntries:
_onqueueGenerateNewUUIDPersistentRefOnSecItem:viewState:
setSuccessfulItemsProcessed:
setNewOutgoingEntries:
sendEvent:event:
initWithDependencies:intending:pendingClassAItemsRemainingState:errorState:handleMismatchedViewItems:
main
setHandleMismatchedViewItems:
setViewsToScan:
setStateIfClassAItemsRemaining:
_handleMismatchedViewItems
_newOutgoingEntries
_pendingClassAEntries
_missingKey
_successfulItemsProcessed
_errorItemsProcessed
_pendingClassAEntriesError
_viewsToScan
_stateIfClassAItemsRemaining
TB,V_newOutgoingEntries
TB,V_pendingClassAEntries
T@"NSError",&,V_pendingClassAEntriesError
TB,V_missingKey
T@"NSMutableSet",&,V_viewsToScan
T@"NSString<OctagonStateString>",&,V_stateIfClassAItemsRemaining
TB,V_handleMismatchedViewItems
TQ,V_successfulItemsProcessed
TQ,V_errorItemsProcessed
pendingCallbackUUIDs
weakObjectsHashTable
isSyncingEnabledForView:
ontransactionFetchEntries:error:
currentKeyUUID
recordChangeTag
_onqueueHandleFlag:
currentOutgoingQueueOperationGroup
setItemsProcessed:
intransactionCreateDeviceStateForView:accountTracker:lockStateTracker:error:
initWithRecordsToSave:recordIDsToDelete:
setAtomic:
linearDependencies:
configuration
setAutomaticallyRetryNetworkFailures:
setDiscretionaryNetworkBehavior:
setIsCloudKitSupportOperation:
setSavePolicy:
setGroup:
qualityOfService
group
setPerRecordCompletionBlock:
modifyRecordsCompleted:fullUpload:recordsToSave:recordIDsToDelete:recordIDsModified:modifyComplete:savedRecords:deletedRecordIDs:ckerror:
setModifyRecordsCompletionBlock:
ckdatabase
intransactionCKWriteFailed:attemptedRecordsChanged:
intransactionIsErrorBadEtagOnKeyPointersOnly:
_onqueueModifyAllRecords:as:viewState:
_onqueueIsErrorMissingSyncKey:
_onqueueModifyRecordAsError:recordError:viewState:
ckErrorState
isNetworkError:
initWithFlag:conditions:delayInSeconds:
isCKKSServerPluginError:
initWithDependencies:intending:ckErrorState:errorState:
itemsProcessed
setCkErrorState:
_itemsProcessed
_ckErrorState
T@"NSString<OctagonStateString>",&,V_ckErrorState
TQ,V_itemsProcessed
bottleID
bottleSalt
primaryiCloudAccountAltDSID:
setBottleSalt:
proceedWithPeerID:refetchWasNeeded:
proceedWithFilteredTLKShares:
entropy
recordRecoveredTLKMetrics:tlkRecoveryResults:uniqueTLKsRecoveredEvent:totalSharesRecoveredEvent:totalRecoverableTLKSharesEvent:totalRecoverableTLKsEvent:totalViewsWithSharesEvent:
setVoucherSig:
saveVoucher
setTLKSharesPairedWithVoucher:
initWithDependencies:intendedState:errorState:bottleID:entropy:bottleSalt:saveVoucher:
setBottleID:
setEntropy:
voucherSig
_saveVoucher
_bottleID
_entropy
_bottleSalt
_voucherSig
T@"NSString",&,N,V_bottleID
T@"NSData",&,N,V_entropy
T@"NSString",&,N,V_bottleSalt
T@"NSData",&,N,V_voucherSig
TB,R,V_saveVoucher
operationDependencies
initWithDependencies:
proceedAfterFetch
joinAfterRestore:
resetToOffering:
setOperationDependencies:
_operationDependencies
T@"OTOperationDependencies",&,V_operationDependencies
serializeAsProtobuf:
curve
initWithCurve:
initRequiringSecureCoding:
encodedData
initForReadingFromData:error:
finishDecoding
loadFromProtobuf:error:
appendBytes:length:
poisoned
initWithKeySpecifier:digestOperation:
dataForSigning:
sign:withKey:error:
initWithData:signature:
verify:withKey:error:
verifySignature:verifyingPeer:ckrecord:error:
setCurve:
setTlkUUID:
setSenderPeerID:
setPoisoned:
setWrappedTLK:
setSignature:
setReceiverPeerID:
receiverPublicEncryptionKeySPKI
setReceiverPublicEncryptionKeySPKI:
encodeInt64:forKey:
decodeInt64ForKey:
init:sender:receiver:curve:version:epoch:poisoned:zoneID:
wrap:publicKey:error:
signRecord:ckrecord:error:
unwrapUsing:error:
share:as:to:epoch:poisoned:error:
signatureVerifiesWithPeerSet:ckrecord:error:
recoverTLK:trustedPeers:ckrecord:error:
setZoneID:
_curve
_tlkUUID
_receiverPeerID
_receiverPublicEncryptionKeySPKI
_senderPeerID
_poisoned
_wrappedTLK
_signature
_zoneID
Tq,V_curve
TQ,V_version
T@"NSString",&,V_tlkUUID
T@"NSString",&,V_receiverPeerID
T@"NSData",&,V_receiverPublicEncryptionKeySPKI
T@"NSString",&,V_senderPeerID
Tq,V_epoch
Tq,V_poisoned
T@"NSData",&,V_wrappedTLK
T@"NSData",&,V_signature
T@"CKRecordZoneID",&,V_zoneID
processInfo
operatingSystemVersionString
hasValue
T@"NSString",&,N,V_key
T@"SECC2MPGenericEventMetricValue",&,N,V_value
setEncodedRateLimiter:
ckzone
ckzonecreated
ckzonesubscribed
moreRecordsInCloudKit
encodedChangeToken
lastFetchTime
isEqualToDate:
rateLimiter
lastFixup
lastLocalKeychainScanTime
tryFromDatabase:error:
initWithCKZone:zoneCreated:zoneSubscribed:changeToken:moreRecordsInCloudKit:lastFetch:lastScan:lastFixup:encodedRateLimiter:
setEncodedChangeToken:
setRateLimiter:
encodedRateLimiter
fromDatabase:error:
getChangeToken
setChangeToken:
setCkzone:
setMoreRecordsInCloudKit:
setLastFetchTime:
setLastLocalKeychainScanTime:
setLastFixup:
_ckzonecreated
_ckzonesubscribed
_moreRecordsInCloudKit
_ckzone
_encodedChangeToken
_lastFetchTime
_lastLocalKeychainScanTime
_lastFixup
_rateLimiter
T@"NSString",&,V_ckzone
TB,V_ckzonecreated
TB,V_ckzonesubscribed
changeToken
T@"CKServerChangeToken",&,GgetChangeToken,SsetChangeToken:
T@"NSData",&,V_encodedChangeToken
TB,V_moreRecordsInCloudKit
T@"NSDate",&,V_lastFetchTime
T@"NSDate",&,V_lastLocalKeychainScanTime
TQ,V_lastFixup
T@"CKKSRateLimiter",&,V_rateLimiter
T@"NSData",&
retryFlag
accountIsDemoAccount:
logForUpgrade
logRecoverableError:forEvent:withAttributes:
stateIfAuthenticationError
logSuccessForEventNamed:
afterAuthKitFetch:accountIsDemo:
fetchCurrentDeviceList:
stateIfListUpdates
initWithDependencies:intendedState:listUpdatesState:authenticationErrorState:errorState:retryFlag:
setLogForUpgrade:
setStateIfListUpdates:
setStateIfAuthenticationError:
setRetryFlag:
_logForUpgrade
_stateIfListUpdates
_stateIfAuthenticationError
_retryFlag
T@"NSString<OctagonStateString>",&,V_stateIfListUpdates
T@"NSString<OctagonStateString>",&,V_stateIfAuthenticationError
T@"NSString<OctagonFlagString>",&,V_retryFlag
TB,V_logForUpgrade
numberWithDouble:
setErrorValue:
hasStringValue
setDoubleValue:
setHasDoubleValue:
hasDoubleValue
setDateValue:
setHasDateValue:
hasDateValue
hasErrorValue
dateValue
errorValue
_dateValue
_doubleValue
_errorValue
T@"NSString",&,N,V_stringValue
Td,N,V_doubleValue
TQ,N,V_dateValue
T@"SECC2MPError",&,N,V_errorValue
setBagIdentity:
setKeybag:
hasBagIdentity
hasKeybag
bagIdentity
keybag
_bagIdentity
_keybag
T@"SecDbBackupBagIdentity",&,N,V_bagIdentity
T@"NSData",&,N,V_keybag
currentSOSSelf:
getEgoPeerID:
currentSelf
isEqualToData:
updateOctagonKeySetWithAccount:error:
lastJudgment
distantPast
groups
getPropertyValue:object:
consumeTokenFromBucket:config:name:at:
setLastJudgment:
assetType
setGroups:
methodForSelector:
initWithConfig:
setAssetType:
_assetType
_groups
_lastJudgment
T@"NSDictionary",&,N,V_config
T@"NSArray",&,N,V_groups
T@"NSDate",&,N,V_lastJudgment
T@"NSDate",&,N,V_overloadUntil
T@"NSString",&,N,V_assetType
TQ,R,N
initWithZoneID:
setViewKeyHierarchyState:
dispatchSyncWithReadOnlySQLTransaction:
createZones:
savedRecordZones
armReadyNotification
savedSubscriptions
subscriptionID
setSosEnabled:
initWithSecKey:
sosCKKSViewList
initWithSOSPeerID:encryptionKey:signingKey:viewList:
initWithSOSPeerID:encryptionPublicKey:signingPublicKey:viewList:
_secKey
initWithPeerProviderID:essential:selfPeers:selfPeersError:trustedPeers:trustedPeersError:
performOnQuietAccountQueue:
preloadOctagonKeySetOnAccount:error:
updateCKKS4AllStatus:error:
safariViewSyncingEnabled:
TB,VsosEnabled
encodeSubjectPublicKeyInfo
peerPublicSigningKeySPKIs:
peerPublicSigningKeySPKIsForCircle:error:
proceedWithKeys:pendingTLKShares:
persistOctagonJoinAttempt:error:
isCuttlefishError:
ckksConflictState
receiveTLKUploadRecords:
initWithDependencies:intendedState:ckksConflictState:errorState:
setCkksConflictState:
_ckksConflictState
T@"NSString<OctagonStateString>",&,V_ckksConflictState
cloudkitWriteFailures
newCloudKitRecordsWritten
setSetResultStateOperation:
viewKeyHierarchyState
currentTrustStates
attemptToHealView:currentTrustStates:
setResultStateOperation
loadForZone:
currentTLKPointer
currentClassAPointer
currentClassCPointer
classA
classC
allowFullRefetchResult
initForClass:currentKeyUUID:zoneID:encodedCKRecord:
setCurrentTLKPointer:
setCurrentClassAPointer:
setCurrentClassCPointer:
allKeys:error:
topKeyInAnyState:
validTLK:
tlkMaterialPresentOrRecoverableViaTLKShare:error:
setTlk:
setCurrentKeyUUID:
setClassA:
setClassC:
randomKeyWrappedByParent:keyclass:error:
saveKeyMaterialToKeychain:
createMissingKeyShares:trustStates:databaseProvider:error:
setLongLived:
ckoperationGroup
saveToDatabaseAsOnlyCurrentKeyForClassAndState:
setNewCloudKitRecordsWritten:
logUnrecoverableError:forEvent:zoneName:withAttributes:
setCloudkitWriteFailures:
ckOperations
ensureKeyPresent:viewState:
loadKeyMaterialFromKeychain:
unwrapViaKeyHierarchy:
initWithDependencies:allowFullRefetchResult:intending:errorState:
setAllowFullRefetchResult:
setCkOperations:
_allowFullRefetchResult
_newCloudKitRecordsWritten
_cloudkitWriteFailures
_setResultStateOperation
_ckOperations
TB,V_allowFullRefetchResult
TB,V_newCloudKitRecordsWritten
TB,V_cloudkitWriteFailures
T@"CKKSResultOperation",&,V_setResultStateOperation
T@"NSHashTable",&,V_ckOperations
identifier
currentItemUUID
setIdentifier:
setCurrentItemUUID:
initForIdentifier:currentItemUUID:state:zoneID:encodedCKRecord:
allInZone:error:
_identifier
_currentItemUUID
T@"NSString<SecCKKSProcessedState>",&,V_state
T@"NSString",&,V_identifier
T@"NSString",&,V_currentItemUUID
viewsOverride
limitOperationToPriorityViewsSet
allPriorityViews
allViews
ckksManagedView
isSubsetOfSet:
setViewsOverride:
setLimitOperationToPriorityViewsSet:
priorityViews
setAllPriorityViews:
setAllViews:
peerProviders
currentSelfPeersError
currentTrustedPeersError
keysetProviderOperations
provideKeySets:
intransactionRecordChanged:resync:flagHandler:error:
intransactionCKRecordChanged:resync:
intransactionCKRecordDeleted:recordType:resync:
currentFetchReasons
initWithViewStates:zoneModifier:ckdatabase:cloudKitClassDependencies:ckoperationGroup:flagHandler:accountStateTracker:lockStateTracker:reachabilityTracker:peerProviders:databaseProvider:savedTLKNotifier:
allCKKSManagedViews
allExternalManagedViews
setStateForActiveZones:
setStateForActiveCKKSManagedViews:
setStateForActiveExternallyManagedViews:
setStateForAllViews:
operateOnSelectViews:
operateOnAllViews
limitOperationToPriorityViews
viewsInState:
viewStatesByNames:
viewStateForName:
applyNewSyncingPolicy:viewStates:
considerSelfTrusted:error:
viewNameForItem:
setCkoperationGroup:
setCkdatabase:
cloudKitClassDependencies
setCloudKitClassDependencies:
setPeerProviders:
setZoneModifier:
savedTLKNotifier
setRequestPolicyCheck:
setKeysetProviderOperations:
_limitOperationToPriorityViewsSet
_allPriorityViews
_allViews
_currentFetchReasons
_ckoperationGroup
_ckdatabase
_cloudKitClassDependencies
_currentOutgoingQueueOperationGroup
_flagHandler
_peerProviders
_databaseProvider
_zoneModifier
_savedTLKNotifier
_requestPolicyCheck
_keysetProviderOperations
_viewsOverride
T@"NSSet",&,V_viewsOverride
T@"NSSet",&,V_allViews
T@"NSSet",&,V_allPriorityViews
T@"TPSyncingPolicy",&,V_syncingPolicy
TB,V_limitOperationToPriorityViewsSet
T@"NSSet",R
T@"NSMutableSet",R,V_currentFetchReasons
T@"CKOperationGroup",&,V_ckoperationGroup
T@"CKDatabase",&,V_ckdatabase
T@"CKKSCloudKitClassDependencies",&,V_cloudKitClassDependencies
T@"CKOperationGroup",&,V_currentOutgoingQueueOperationGroup
T@"<OctagonStateFlagHandler>",R,V_flagHandler
T@"CKKSAccountStateTracker",R,V_accountStateTracker
T@"CKKSLockStateTracker",R,V_lockStateTracker
T@"CKKSReachabilityTracker",R,V_reachabilityTracker
T@"NSArray",&,V_peerProviders
T@"<CKKSDatabaseProviderProtocol>",R,V_databaseProvider
T@"CKKSZoneModifier",&,V_zoneModifier
T@"CKKSNearFutureScheduler",R,V_savedTLKNotifier
T@"CKKSNearFutureScheduler",&,V_requestPolicyCheck
T@"NSHashTable",&,V_keysetProviderOperations
holdLocalSynchronizeOperation
restartCount
addSuccessDependency:
initWithOperationDependencies:
initWithDependencies:intending:errorState:ckoperationGroup:
recordsFound
setRestartCount:
addExecutionBlock:
initWithCKKSKeychainView:
_restartCount
Ti,V_restartCount
T@"CKKSKeychainView",W,V_ckks
parsedSecureElementIdentity
setEnabled:
setTag1:
machineID
policyOverride
setPermanentInfo:
setPermanentInfoSig:
setStableInfo:
setStableInfoSig:
initWithDependencies:intendedState:errorState:deviceInfo:policyOverride:epoch:
permanentInfo
permanentInfoSig
stableInfo
stableInfoSig
setPolicyOverride:
_permanentInfo
_permanentInfoSig
_stableInfo
_stableInfoSig
_policyOverride
TQ,N,V_epoch
T@"NSData",&,V_permanentInfo
T@"NSData",&,V_permanentInfoSig
T@"NSData",&,V_stableInfo
T@"NSData",&,V_stableInfoSig
T@"TPPolicyVersion",&,V_policyOverride
deleteFromKeychainForContainer:contextID:error:
saveToKeychainForContainer:contextID:error:
peerIdentifier
setPeerIdentifier:
peerData
setPeerData:
getTLKSharesPairedWithVoucher
setOctagonSecureElementIdentity:
loadFromKeychainForContainer:contextID:error:
setWrappedBagSecret:
setWrappedKCSKSecret:
setWrappedRecoveryKey:
setRecoveryType:
setHasRecoveryType:
hasRecoveryType
hasWrappedBagSecret
hasWrappedKCSKSecret
hasWrappedRecoveryKey
recoveryType
wrappedBagSecret
wrappedKCSKSecret
wrappedRecoveryKey
_recoveryType
_wrappedBagSecret
_wrappedKCSKSecret
_wrappedRecoveryKey
Ti,N,V_recoveryType
T@"NSData",&,N,V_wrappedBagSecret
T@"NSData",&,N,V_wrappedKCSKSecret
T@"NSData",&,N,V_wrappedRecoveryKey
forKeyClass:withKeyUUID:zoneID:error:
intransactionRecordDeleted:error:
_currentKeyUUID
T@"NSString<SecCKKSKeyClass>",&,V_keyclass
T@"NSString",&,V_currentKeyUUID
setProposed:
proposed
initWithTLK:classA:classC:newUpload:
_proposed
_tlk
_classA
_classC
_currentTLKPointer
_currentClassAPointer
_currentClassCPointer
T@"CKKSKey",&,V_tlk
T@"CKKSKey",&,V_classA
T@"CKKSKey",&,V_classC
T@"CKKSCurrentKeyPointer",&,V_currentTLKPointer
T@"CKKSCurrentKeyPointer",&,V_currentClassAPointer
T@"CKKSCurrentKeyPointer",&,V_currentClassCPointer
TB,V_proposed
setCloudkitInfo:
setServerInfo:
setNetworkEvent:
setGenericEvent:
metricType
setMetricType:
setHasMetricType:
hasMetricType
metricTypeAsString:
StringAsMetricType:
hasDeviceInfo
hasCloudkitInfo
hasServerInfo
setTriggers:
setHasTriggers:
hasTriggers
setReportFrequency:
setHasReportFrequency:
hasReportFrequency
setReportFrequencyBase:
setHasReportFrequencyBase:
hasReportFrequencyBase
hasNetworkEvent
hasGenericEvent
cloudkitInfo
serverInfo
triggers
reportFrequency
reportFrequencyBase
networkEvent
genericEvent
_reportFrequency
_reportFrequencyBase
_triggers
_cloudkitInfo
_genericEvent
_metricType
_networkEvent
_serverInfo
Ti,N,V_metricType
T@"SECC2MPDeviceInfo",&,N,V_deviceInfo
T@"SECC2MPCloudKitInfo",&,N,V_cloudkitInfo
T@"SECC2MPServerInfo",&,N,V_serverInfo
TQ,N,V_triggers
TQ,N,V_reportFrequency
TQ,N,V_reportFrequencyBase
T@"SECC2MPNetworkEvent",&,N,V_networkEvent
T@"SECC2MPGenericEvent",&,N,V_genericEvent
performanceCounters:
rpcResetLocal:reply:
rpcResetCloudKit:reason:reply:
rpcResync:reply:
rpcResyncLocal:reply:
rpcStatus:fast:waitForNonTransientState:reply:
rpcFetchAndProcessChanges:classA:onlyIfNoRecentFetch:reply:
rpcPushOutgoingChanges:reply:
rpcGetCKDeviceIDWithReply:
rpcCKMetric:attributes:reply:
proposeTLKForSEView:proposedTLK:wrappedOldTLK:tlkShares:reply:
fetchSEViewKeyHierarchy:forceFetch:reply:
modifyTLKSharesForSEView:adding:deleting:reply:
deleteSEView:reply:
toggleHavoc:
pcsMirrorKeysForServices:reply:
rateLimit
modificationDate
setQualityOfService:
initWithOperationDependencies:rateLimit:ckoperationGroup:
setRateLimit:
_rateLimit
_group
T@"CKOperationGroup",&,V_group
TB,V_rateLimit
setCiphertext:
setWrappedKey:
setTamperCheck:
wrappedKey
tamperCheck
_tamperCheck
_wrappedKey
T@"NSData",&,N,V_ciphertext
T@"NSData",&,N,V_wrappedKey
T@"NSString",&,N,V_tamperCheck
initWithName:initialDelay:continuingDelay:keepProcessAlive:dependencyDescriptionCode:block:
makeOperationDependency
setInitialDelay:
initialDelay
setCurrentDelay:
setBackoff:
setMaximumDelay:
operationDependencyDescriptionCode
setDescriptionErrorCode:
nextFireTime
setDateFormat:
liveRequest
predictedNextFireTime
liveRequestReceived
_onqueueTrigger:maximumDelay:
setLiveRequest:
operationDependency
setOperationDependency:
futureBlock
setLiveRequestReceived:
currentDelay
maximumDelay
backoff
timer
dateWithTimeIntervalSinceNow:
setPredictedNextFireTime:
keepProcessAlive
setTimer:
_onqueueTimerTick
initWithName:delay:keepProcessAlive:dependencyDescriptionCode:block:
changeDelays:continuingDelay:
waitUntil:
triggerAt:
setFutureBlock:
setOperationDependencyDescriptionCode:
setKeepProcessAlive:
_liveRequest
_keepProcessAlive
_futureBlock
_operationDependency
_liveRequestReceived
_initialDelay
_currentDelay
_maximumDelay
_backoff
_operationDependencyDescriptionCode
_predictedNextFireTime
T@"NSString",&,V_name
TQ,V_initialDelay
TQ,V_currentDelay
TQ,V_maximumDelay
Td,V_backoff
Tq,V_operationDependencyDescriptionCode
T@"CKKSResultOperation",&,V_operationDependency
T@"NSDate",&,V_predictedNextFireTime
TB,V_liveRequest
T@"NSObject<OS_dispatch_source>",&,V_timer
TB,V_keepProcessAlive
T@"NSDate",R
T@?,C,V_futureBlock
T@"CKKSCondition",&,V_liveRequestReceived
wasCurrent
initWithCKKSItem:
numberFromString:
setWasCurrent:
allWithUUID:error:
countsByParentKey:error:
counts:error:
pcsMirrorKeysForService:matchingKeys:error:
_wasCurrent
TQ,V_wasCurrent
flagConditions
contentsAsString
flags
_onqueueSetFlag:
allowableFlags
dumpFlags
conditionForFlag:
setFlag:
initWithQueue:flags:
setFlagConditions:
setFlags:
_flagConditions
_flags
_allowableFlags
T@"NSMutableSet",&,V_flags
T@"NSSet",R,V_allowableFlags
T@"NSMutableDictionary",&,V_flagConditions
proceedWithKeys:salt:
recoveryKey
initWithDependencies:recoveryKey:
salt
setSalt:
setRecoveryKey:
_salt
_recoveryKey
T@"NSString",&,N,V_salt
T@"NSString",&,N,V_recoveryKey
initWithUUIDString:
initWithUUID:recoveryString:error:
setCrk:
initWithUUID:dependencies:
_crk
T@"NSUUID",&,V_uuid
T@"OTCustodianRecoveryKey",&,V_crk
initWithUUID:error:
setIk:
recoveryKeyData
T@"OTInheritanceKey",&,V_ik
proceedWithKeys:
initWithIK:dependencies:
setExpectedSendSize:
setExpectedReceiveSize:
ckksIsCKErrorRecordChangedError
isCKServerInternalError
CKPropertiesDescription
setByAddingObject:
allSelves
setCurrentSelf:
setAllSelves:
_currentSelf
_allSelves
T@"<CKKSSelfPeer>",&,V_currentSelf
T@"NSSet",&,V_allSelves
shouldHaveView:
_publicEncryptionKey
_publicSigningKey
_viewList
T@"_SFECPublicKey",R,V_publicEncryptionKey
T@"_SFECPublicKey",R,V_publicSigningKey
T@"NSSet",R,V_viewList
spid
setSpid:
setViewList:
_spid
T@"NSString",&,V_spid
T@"NSSet",&,V_viewList
setEncryptionKey:
setSigningKey:
_encryptionKey
_signingKey
T@"_SFECKeyPair",&,V_encryptionKey
T@"_SFECKeyPair",&,V_signingKey
addMetric:
metricsCount
clearMetrics
metricAtIndex:
setHasType:
hasType
typeAsString:
StringAsType:
hasName
setTimestampStart:
setHasTimestampStart:
hasTimestampStart
setTimestampEnd:
setHasTimestampEnd:
hasTimestampEnd
timestampStart
timestampEnd
metrics
setMetrics:
_timestampEnd
_timestampStart
_metrics
_type
Ti,N,V_type
T@"NSString",&,N,V_name
TQ,N,V_timestampStart
TQ,N,V_timestampEnd
T@"NSMutableArray",&,N,V_metrics
setPublicKey:
setAksRefKey:
setAksWrappedKey:
setBackupWrappedKey:
hasPublicKey
hasAksRefKey
hasAksWrappedKey
hasBackupWrappedKey
aksRefKey
aksWrappedKey
backupWrappedKey
_aksRefKey
_aksWrappedKey
_backupWrappedKey
_publicKey
T@"NSData",&,N,V_publicKey
T@"NSData",&,N,V_aksRefKey
T@"NSData",&,N,V_aksWrappedKey
T@"NSData",&,N,V_backupWrappedKey
setDefaultRetryIntervalForTests:
registerDefaults:
receiverForNamedDelegatePort:apsConnectionClass:
registerForEnvironment:
handleKeychainEventDbConnection:source:added:deleted:
registerSyncStatusCallback:callback:
setLastSynchronizeOperation:
fetchRecordZoneChangesOperationClass
initWithContainer:fetchClass:clientMap:fetchReasons:apnsPushes:forceResync:ckoperationGroup:
rpcProcessIncomingQueue:errorOnClassAFailure:
dispatchSyncWithConnection:readWriteTxion:block:
insideSQLTransaction
initWithQueue:
setKeysets:
startDependency
setStartDependency:
initWithIntendedZoneIDs:
_keysets
_intendedZoneIDs
_startDependency
T@"NSDictionary",&,V_keysets
T@"NSOperation",&,V_startDependency
T@"NSSet",R,V_intendedZoneIDs
setCkRecordType:
initWithRecordType:recordID:
_encodedCKRecord
_storedCKRecord
_ckRecordType
T@"NSString",&,V_ckRecordType
T@"NSData",C,V_encodedCKRecord
T@"CKRecord",C,V_storedCKRecord
enforceRateLimiting
setLastEscrowAttemptTime:
uploadRetries
setUploadRetries:
checkFatalError:
setNumberOfRecordsUploaded:
setUploadCompleted:
cdpUploadPrerecord:secretType:reply:
initWithContext:
attemptToEscrowPreRecord:preRecordUUID:secretType:completion:
setEnforceRateLimiting:
_enforceRateLimiting
_numberOfRecordsUploaded
TB,V_enforceRateLimiting
TQ,V_numberOfRecordsUploaded
keyViewMapping
view
hasMatchingRule
matchingRule
andsCount
orsCount
hasNot
hasExists
hasMatch
match
fieldName
regex
viewsWithNewCKKSEntries
recordsAdded
setRecordsAdded:
onboardItemToCKKS:viewState:keyCache:error:
executeQuery:readWrite:error:block:
setMissingLocalItemsFound:
logMetric:withName:
queryPredicatesForViewMapping:
processedItems
setProcessedItems:
isItemKeyForKeychainView:
areEquivalent:ckksItem:keyCache:
setRecordsFound:
minusSet:
onboardItemsInView:uuids:itemClass:databaseProvider:
fixUUIDlessItemsInZone:primaryKeys:databaseProvider:
retriggerMissingMirrorEntries:databaseProvider:
launch
addEvent:
missingLocalItemsFound
setViewsWithNewCKKSEntries:
_recordsFound
_recordsAdded
_missingLocalItemsFound
_processedItems
_viewsWithNewCKKSEntries
TQ,V_processedItems
T@"NSMutableSet",&,V_viewsWithNewCKKSEntries
TQ,V_recordsFound
TQ,V_recordsAdded
TQ,V_missingLocalItemsFound
setVoucherData:
voucherData
proceedWithPendingTLKShares:
_voucherData
T@"NSData",&,V_voucherData
T@"NSData",&,V_voucherSig
onqueuePerformLocalReset
participateInFetch
setParticipateInFetch:
resync
setResync:
_participateInFetch
_resync
_changeToken
TB,V_participateInFetch
TB,V_resync
T@"CKServerChangeToken",&,V_changeToken
initWithRecordID:recordType:
setRecordID:
setRecordType:
_recordID
_recordType
T@"CKRecordID",&,V_recordID
T@"NSString",&,V_recordType
clientMap
participateInFetch:
fetchedZoneIDs
forceResync
changeTokens
setPreviousServerChangeToken:
resyncingZones
allClientOptions
setAllClientOptions:
setFetchedZoneIDs:
queryClientsForChangeTokens
setClientMap:
performFetch
zoneIsReadyForFetching:
alloc
initWithRecordZoneIDs:configurationsByRecordZoneID:
setFetchRecordZoneChangesOperation:
fetchRecordZoneChangesOperation
setFetchAllChanges:
modifications
deletions
fetchedItems
setFetchedItems:
setRecordChangedBlock:
setRecordWithIDWasDeletedBlock:
setRecordZoneChangeTokensUpdatedBlock:
moreComing
setMoreComing:
sendChangesToClient:moreComing:
setRecordZoneFetchCompletionBlock:
totalModifications
setTotalModifications:
totalDeletions
setTotalDeletions:
isNetworkFailureError:
apnsPushes
ckksPushTracingEnabled
initWithEventName:
setIsPushTriggerFired:
ckksPushTracingUUID
ckksPushReceivedDate
associateWithCompletedOperation:
submitEventMetric:
managerObject
submitEvent:
fetchCompletedOperation
setFetchRecordZoneChangesCompletionBlock:
changesFetched:deletedRecordIDs:zoneID:newChangeToken:moreComing:resync:
fetchReasons
setFetchReasons:
setApnsPushes:
setModifications:
setDeletions:
setChangeTokens:
setForceResync:
setResyncingZones:
setFetchCompletedOperation:
_forceResync
_moreComing
_fetchRecordZoneChangesOperationClass
_fetchedZoneIDs
_fetchReasons
_apnsPushes
_modifications
_deletions
_changeTokens
_fetchRecordZoneChangesOperation
_allClientOptions
_clientMap
_fetchedItems
_totalModifications
_totalDeletions
_resyncingZones
_fetchCompletedOperation
T@"CKDatabaseOperation<CKKSFetchRecordZoneChangesOperation>",&,V_fetchRecordZoneChangesOperation
T@"NSMutableDictionary",&,V_allClientOptions
T@"NSDictionary",&,V_clientMap
TQ,V_fetchedItems
TB,V_forceResync
TB,V_moreComing
TQ,V_totalModifications
TQ,V_totalDeletions
T@"NSMutableSet",&,V_resyncingZones
T@"CKKSResultOperation",&,V_fetchCompletedOperation
T#,R,V_fetchRecordZoneChangesOperationClass
T@"CKContainer",R,V_container
T@"NSMutableArray",&,V_fetchedZoneIDs
T@"NSSet",&,V_fetchReasons
T@"NSSet",&,V_apnsPushes
T@"NSMutableDictionary",&,V_modifications
T@"NSMutableDictionary",&,V_deletions
T@"NSMutableDictionary",&,V_changeTokens
followStates
initAsSuccess
pathFromDictionary:
initWithPath:
success
nextStep:
successState
setSuccessState:
_successState
_followStates
TB,V_successState
T@"NSDictionary",R,V_followStates
initialState
pathStep
initWithState:pathStep:
asPathStep
setInitialState:
setPathStep:
_initialState
_pathStep
T@"NSString<OctagonStateString>",&,V_initialState
T@"OctagonStateTransitionPathStep",&,V_pathStep
transitionOperation
_onqueuePerformTimeoutWithUnderlyingError:
remainingPath
result
completed
active
onqueueProcessTransition:
intendedPath
setActive:
timeoutCanOccur
setTimeoutCanOccur:
onqueueStartFinishOperation
setRemainingPath:
logUnrecoverableError:forEvent:withAttributes:
setCompleted:
onqueueHandleTransition:
T@"CKKSResultOperation",R
initNamed:serialQueue:path:initialRequest:
initialRequest
setInitialRequest:
initialTimeoutListenerOp
setInitialTimeoutListenerOp:
_active
_completed
_timeoutCanOccur
_result
_intendedPath
_remainingPath
_initialRequest
_initialTimeoutListenerOp
TB,V_active
TB,V_completed
T@"OctagonStateTransitionPathStep",&,V_remainingPath
T@"OctagonStateTransitionRequest",&,V_initialRequest
T@"CKKSResultOperation",&,V_initialTimeoutListenerOp
TB,V_timeoutCanOccur
T@"NSString",R,V_name
T@"CKKSResultOperation",R,V_result
T@"OctagonStateTransitionPath",R,V_intendedPath
states
onqueueEnterState:
_onqueuePerformTimeoutWithUnderlyingError
initNamed:serialQueue:states:
_states
T@"NSSet",R,V_states
proceedWithKeys:incompleteKeySets:
resetViews:
rpcResetCloudKit:reply:
retryInterval
initWithFlag:delayInSeconds:
initWithSecureElementIdentity:
forceRefetch
peerUnknownState
setCurrentSyncingPolicy:policyIsFresh:
identityIsPreapproved
memberChanges
octagonAdapter
unknownMachineIDsPresent
initWithDependencies:intendedState:peerUnknownState:errorState:forceRefetch:retryFlag:
setForceRefetch:
setPeerUnknownState:
_forceRefetch
_peerUnknownState
TB,V_forceRefetch
T@"NSString<OctagonStateString>",&,V_peerUnknownState
isRetryable
sosNotPresentState
initWithDependencies:intendedState:sosNotPresentState:errorState:
setSosNotPresentState:
_sosNotPresentState
T@"NSString<OctagonStateString>",&,V_sosNotPresentState
cStringUsingEncoding:
proceedWithRecoveryKeyID:
initWithDependencies:intendedState:errorState:recoveryKey:saveVoucher:
T@"NSString",&,V_salt
T@"NSString",&,V_recoveryKey
baguuid
setBaguuid:
_baguuid
T@"NSData",&,N,V_baguuid
currentBackupBagUUID
wrapItemKey:forKeyclass:error:
wrapMetadataKey:forKeyclass:error:
registerCuttlefishReceiver:forContainerName:
initWithRocketName:
initWithQueue:container:context:
registerNotification:
AllOctagonFlags
initWithFollowupController:
launchSequence
notifyTrustChanged:
syncUserControllableViews
setCloudKitAccountInfo:
_onqueuePokeStateMachine
cloudKitAccountStateKnown
OctagonInAccountStates
setFirstLaunch:
recheck
init:sourceStates:serialQueue:timeout:transitionOp:
handleExternalRequest:
endTrustedOperation
named:intending:errorState:withBlockTakingSelf:
doWatchedStateMachineRPC:sourceStates:path:reply:
establishStatePathDictionary
isPaused
OctagonNotInCliqueStates
intersectsSet:
initWithDependencies:intendedState:errorState:peerIDs:
deviceAdapter
initForContainerName:contextID:epoch:machineID:modelID:deviceName:serialNumber:osVersion:
initForContainer:contextID:stateHolder:flagHandler:sosAdapter:octagonAdapter:authKitAdapter:deviceInfoAdapter:ckksAccountSync:lockStateTracker:cuttlefishXPCWrapper:escrowRequestClass:notifierClass:
setPairingUUID:
localReset:
initializingOperation
cloudKitAccountInfo
cloudKitAccountNewlyAvailableOperation:
checkForAccountFixupsOperation:
initWithDependencies:stateIfHSA2:stateIfNotHSA2:stateIfNoAccount:errorState:
evaluateSecdOctagonTrust
evaluateTPHOctagonTrust
cuttlefishTrustEvaluation
postRepairCFUAndBecomeUntrusted
becomeUntrustedOperation:
becomeReadyOperation
clearContextState
custodianRecoveryKey
prepareInformation
initWithDependencies:intendedState:ckksConflictState:errorState:deviceInfo:policyOverride:
initWithDependencies:intendedState:errorState:custodianRecoveryKey:saveVoucher:
inheritanceKey
initWithDependencies:intendedState:errorState:ik:deviceInfo:policyOverride:isInheritedAccount:epoch:
init:contextID:reason:intendedState:dependencies:errorState:cuttlefishXPCWrapper:
_onqueueHandlePendingFlagLater:
initWithDependencies:intendedState:ckksConflictState:peerMissingState:errorState:
becomeInheritedOperation
beginCloudKitOperation
repairAccountIfTrustedByTPHWithIntendedState:
checkTrustStatusAndPostRepairCFUIfNecessary:
postRepairCFU:
shouldPostConfirmPasscodeCFU:
postConfirmPasscodeCFU:
leaveTrust:
processMoveRequest:error:
containerWithIdentifier:
apsReceiver
serverPreferredPushEnvironmentWithCompletionHandler:
initialBecomeUntrustedPosted
setInitialBecomeUntrustedPosted:
setOctagonAdapter:
setSuggestTLKUploadNotifier:
setRequestPolicyCheckNotifier:
suggestTLKUploadNotifier
requestPolicyCheckNotifier
beginTrustedOperation:suggestTLKUpload:requestPolicyCheck:
upgradeUserControllableViewsRateLimiter
currentMemoizedTrustState
waitForState:wait:
extractStringKey:fromDictionary:
notifyContainerChangeWithUserInfo:
handleHealthRequest
handleTTRRequest:
apsRateLimiter
setApsRateLimiter:
shouldPopDialog
getLimit
popDialogWithCount:limit:
initWithTimeIntervalSince1970:
sosConsistencyRateLimiter
setSosConsistencyRateLimiter:
timeoutWaitForCKAccount
checkForCKAccount:
errorIfNoCKAccount:
timeout
joinStatePathDictionary
setCustodianRecoveryKey:
recoveryString
initWithUUID:encryptionKey:signingKey:recoveryString:salt:kind:
initWithDependencies:intendedState:errorState:tphcrk:
setInheritanceKey:
hashWithAlgo:ofData:
ckksPeerStatus:
dumpPendingFlags
eventsByTime
sosTrustedPeersStatus
sosSelvesStatus
sysdiagnoseStatus
registeredPushEnvironments
cleanseErrorForXPC:
rpcFetchPeerAttributes:includeSelf:reply:
useCachedAccountStatus
rpcTrustStatusCachedStatus:reply:
egoStatus
egoPeerID
isExcluded
isLocked
popTooManyPeersDialogWithEgoPeerStatus:accountMeta:
persistNewTrustState:error:
setTrustedPeerSecureElementIdentities:
setLocalPeerIdentity:
trustedPeerSecureElementIdentities
localPeerIdentity
setPendingLocalPeerIdentity:
walrus
persistAccountSettings:error:
rpcWaitForPriorityViewProcessing
rpcFetchPeerIDByBottleID:
escrowInformationMetadata
bottleId
viewsForPeerID:error:
octagonPeerIDGivenBottleID:reply:
tlkRecoverabilityInOctagon:reply:
postFollowUp:error:
intendedFederation
moveToFederationAllowed:altDSID:error:
OctagonHealthSourceStates
accountStateUpdated:from:
machinesAdded:altDSID:
machinesRemoved:altDSID:
incompleteNotificationOfMachineIDListChange
resetCKKS:
resetOctagonStateMachine
currentMemoizedAccountState
checkAllStateCleared
setFollowupHandler:
setAccountMetadataStore:
setPendingEscrowCacheWarmup:
setLaunchSequence:
setCloudKitAccountStateKnown:
setUpgradeUserControllableViewsRateLimiter:
fixupRetryScheduler
setFixupRetryScheduler:
setApsReceiver:
_resetReason
_initialBecomeUntrustedPosted
_followupHandler
_pairingUUID
_accountMetadataStore
_apsRateLimiter
_sosConsistencyRateLimiter
_deviceAdapter
_pendingEscrowCacheWarmup
_launchSequence
_cloudKitAccountInfo
_cloudKitAccountStateKnown
_suggestTLKUploadNotifier
_requestPolicyCheckNotifier
_upgradeUserControllableViewsRateLimiter
_fixupRetryScheduler
_custodianRecoveryKey
_inheritanceKey
_apsReceiver
_octagonAdapter
T@"CKKSLaunchSequence",&,V_launchSequence
T@"OTCuttlefishAccountStateHolder",&,N,V_accountMetadataStore
T@"OTFollowup",&,V_followupHandler
T@"CKAccountInfo",&,V_cloudKitAccountInfo
T@"CKKSCondition",&,V_cloudKitAccountStateKnown
T@"CKKSNearFutureScheduler",&,V_suggestTLKUploadNotifier
T@"CKKSNearFutureScheduler",&,V_requestPolicyCheckNotifier
T@"CKKSNearFutureScheduler",&,V_upgradeUserControllableViewsRateLimiter
T@"CKKSNearFutureScheduler",&,V_fixupRetryScheduler
T@"OTCustodianRecoveryKey",&,N,V_custodianRecoveryKey
T@"OTInheritanceKey",&,N,V_inheritanceKey
T@"OTAccountSettingsX",&,N,V_settings
T@"OctagonAPSReceiver",&,V_apsReceiver
T@"<CKKSPeerProvider>",&,V_octagonAdapter
TB,N,V_initialBecomeUntrustedPosted
T@"NSString",&,N,V_pairingUUID
T@"CKKSLockStateTracker",R,N,V_lockStateTracker
T@"OctagonStateMachine",R,V_stateMachine
T@"CKKSNearFutureScheduler",&,N,V_apsRateLimiter
T@"CKKSNearFutureScheduler",&,N,V_sosConsistencyRateLimiter
T@"<CKKSCloudKitAccountStateTrackingProvider><CKKSOctagonStatusMemoizer>",R,V_accountStateTracker
T@"<OTDeviceInformationAdapter>",R,V_deviceAdapter
T@"CKKSCondition",&,V_pendingEscrowCacheWarmup
initWithFlag:conditions:after:
initWithFlag:conditions:scheduler:
fireTime
flag
afterOperation
conditions
initWithFlag:after:
initWithFlag:scheduler:
setAfterOperation:
scheduler
setScheduler:
_flag
_fireTime
_conditions
_afterOperation
_scheduler
T@"CKKSNearFutureScheduler",&,V_scheduler
T@"NSString<OctagonFlagString>",R,V_flag
T@"NSDate",R,V_fireTime
TQ,R,V_conditions
T@"NSOperation",&,V_afterOperation
T@"NSString",&,N,V_value
tphcrk
setTphcrk:
_tphcrk
T@"TrustedPeersHelperCustodianRecoveryKey",&,V_tphcrk
initWithEngine:peer:localManifest:proposedManifest:confirmedManifest:andMessage:
engine
peer
confirmed
local
message
setCallbackBlock:
callCallback:
setEngine:
setPeer:
setLocal:
setConfirmed:
setMessage:
setCoder:
setCallback:
callbackBlock
coder
_callbackBlock
_engine
_peer
_coder
_local
_confirmed
_message
T@?,C,N,V_callbackBlock
T^{__OpaqueSOSEngine={__CFRuntimeBase=QAQ}^{SOSDataSource}^{__CFString}^{__OpaqueSOSManifest}^{__CFData}^{__CFDictionary}^{__CFDictionary}^{__CFDictionary}^{__CFDictionary}^{__CFArray}^{__CFDate}^{__CFDictionary}BB@@@@?B},N,V_engine
T^{__OpaqueSOSPeer=},N,V_peer
T^{__OpaqueSOSCoder=},N,V_coder
T^{__OpaqueSOSManifest=},N,V_local
T^{__OpaqueSOSManifest=},N,V_proposed
T^{__OpaqueSOSManifest=},N,V_confirmed
T^{__OpaqueSOSMessage=},N,V_message
keyWrappedBySelf:uuid:keyclass:zoneID:error:
wrappedData
keycore
wrappedKeyDataBackingStore
initWithWrappedAESKey:uuid:parentKeyUUID:keyclass:zoneID:
setKeycore:
setWrappedKeyDataBackingStore:
wrapUnder:error:
initWithKeyCore:state:currentkey:
randomKeyWrappedBySelf:error:
wrapsSelf
ensureKeyLoadedFromKeychain:
fromDatabaseAnyState:zoneID:error:
setAessivkey:
allForUUID:zoneID:error:
unwrapKey:fromShares:error:
trySelfWrappedKeyCandidate:error:
unwrapViaTLKSharesTrustedBy:error:
saveKeyMaterialToKeychain:error:
wrapAESKey:error:
deleteKeyMaterialFromKeychain:
setCurrentkey:
currentKeysForClass:state:zoneID:error:
currentkey
base64EncodedDataWithOptions:
_newZeroingDataWithBytes:length:
initWithBytes:len:
initSelfWrappedWithAESKey:uuid:keyclass:state:zoneID:encodedCKRecord:currentkey:
tryFromDatabaseAnyState:zoneID:error:
selfWrappedKeys:error:
remoteKeys:error:
localKeys:error:
countsByClass:error:
_currentkey
_keycore
_wrappedKeyDataBackingStore
T@"CKKSKeychainBackedKey",&,V_keycore
T@"NSData",&,V_wrappedKeyDataBackingStore
T@"NSString",&,V_uuid
T@"NSString",&,V_parentKeyUUID
T@"NSString<SecCKKSProcessedState>",C,V_state
TB,V_currentkey
addLockStateObserver:
initWithContainer:fetchClass:reachabilityTracker:
registerCKKSReceiver:
initWithContainer:reachabilityTracker:cloudkitDependencies:
notifyNewTLKsInKeychain
sosPeerAdapter
hasValidCredentials
dateOfLastSuccessForEvent:zoneName:
datePropertyForKey:zoneName:
fuzzyNumber:
lastIncomingQueueOperation
lastOutgoingQueueOperation
ckksActors
zoneChangeFetcher
initWithContainer:accountTracker:lockStateTracker:reachabilityTracker:changeFetcher:zoneModifier:savedTLKNotifier:cloudKitClassDependencies:
restartCKKSAccountSyncWithoutSettingPolicy:
halt
viewAllowList
setSyncingViewsAllowList:
pendingSyncCallbacks
callSyncCallbackWithErrorNoAccount:
globalRateLimiter
handleKeychainEventDbConnection:source:added:deleted:rateLimiter:
syncBackupAndNotifyAboutSync
performTransaction:
waitUntilFinished
viewsToPiggybackTLKs
setCompletionBlock:
resyncWithCloud
resyncLocal
earliestFetchTime
timeIntervalSinceNow
rpcFetchAndProcessIncomingQueue:because:errorOnClassAFailure:
rpcProcessOutgoingQueue:operationGroup:
sanitizeErrorDomain:
proposeTLKForExternallyManagedView:proposedTLK:wrappedOldTLK:tlkShares:reply:
fetchExternallyManagedViewKeyHierarchy:forceFetch:reply:
modifyTLKSharesForExternallyManagedView:adding:deleting:reply:
resetExternallyManagedCloudKitView:reply:
waitForTrustReady
dailyCoreAnalyticsMetrics:
updateDeviceState:waitForKeyHierarchyInitialization:ckoperationGroup:
getGlobalRateLimiter
lockStateChangeNotification:
restartCKKSAccountSync:
cancelPendingOperations
currentTLKsFilteredByPolicy:error:
haltAll
dropAllActors
setAccountTracker:
setPersonaAdapter:
setZoneChangeFetcher:
setCompletedSecCKKSInitialize:
setGlobalRateLimiter:
setSosPeerAdapter:
setViewAllowList:
setPendingSyncCallbacks:
setSavedTLKNotifier:
policy
setPolicy:
policyLoaded
setPolicyLoaded:
_accountTracker
_zoneChangeFetcher
_completedSecCKKSInitialize
_globalRateLimiter
_sosPeerAdapter
_viewAllowList
_pendingSyncCallbacks
_ckksActors
_policy
_policyLoaded
T@"NSSet",&,V_viewAllowList
T@"NSMutableDictionary",&,V_pendingSyncCallbacks
T@"CKKSNearFutureScheduler",&,V_savedTLKNotifier
T@"NSMutableDictionary",R,V_ckksActors
T@"TPSyncingPolicy",&,V_policy
T@"CKKSCondition",&,V_policyLoaded
T@"CKKSAccountStateTracker",&,V_accountTracker
T@"<OTPersonaAdapter>",&,V_personaAdapter
T@"CKKSZoneChangeFetcher",&,V_zoneChangeFetcher
T@"CKKSCondition",&,V_completedSecCKKSInitialize
T@"CKKSRateLimiter",&,V_globalRateLimiter
T@"<OTSOSAdapter>",&,V_sosPeerAdapter
TB,V_isInheritedAccount
setRefKeyBlob:
initRegularWrappedKeyWithData:
initRefKeyWrappedKeyWithData:refKeyBlob:
serializedRepresentation
_serializedHolder
TI,R
initWithCiphertext:wrappedKey:tamperCheck:error:
T@"_SFAuthenticatedCiphertext",R
setSecDbBackupWrappedItemKey:
initWithCiphertext:wrappedKey:tamperCheck:backupWrappedKey:error:
T@"SecDbKeychainAKSWrappedKey",R
encryptedSecretData
encryptedMetadata
metadataClassKeyWithKeybag:allowWrites:error:
decryptionOperation
unwrapFromAKS:accessControl:acmContext:callerAccessGroups:delete:keyDiversify:error:
encryptMetadataWithKeybag:error:
encryptSecretDataWithKeybag:accessControl:acmContext:error:
encryptedMetadataBlob
setEncryptedMetadata:
encryptedSecretDataBlob
setEncryptedSecretData:
encryptionOperation
wrapToAKS:withKeybag:accessControl:acmContext:error:
sharedStore
keyForKeyclass:keybag:keySpecifier:allowWrites:error:
initWithBytesNoCopy:length:
initWithBytes:length:
initWithLength:
initWithData:decryptionKeybag:error:
initWithSecretAttributes:metadataAttributes:tamperCheck:keyclass:
metadataAttributesWithError:
secretAttributesWithAcmContext:accessControl:callerAccessGroups:keyDiversify:error:
deleteWithAcmContext:accessControl:callerAccessGroups:keyDiversify:error:
encryptedBlobWithKeybag:accessControl:acmContext:error:
backupUUID
setBackupUUID:
_encryptedMetadata
_secretAttributes
_metadataAttributes
_backupUUID
T@"NSData",&,N,V_backupUUID
Ti,R,N,V_keyclass
_onQueueResetReachabilityDependency
networkMonitor
_onqueueSetNetworkReachability:
haveNetwork
reachabilityDependency
setReachabilityDependency:
noteEvent:
_onQueueRunReachabilityDependency
setHaveNetwork:
currentReachability
setNetworkReachability:
setNetworkMonitor:
_haveNetwork
_reachabilityDependency
_networkMonitor
TB,V_haveNetwork
T@"NSObject<OS_nw_path_monitor>",&,V_networkMonitor
T@"CKKSResultOperation",&,V_reachabilityDependency
setByAddingObjectsFromArray:
mutableStateConditions
setCurrentState:
_onqueueSendAnyPendingFlags
createOperationToFinishAttempt:
pendingFlags
pendingFlagsString
currentFlags
allowableStates
stateConditions
halted
stateMachineRequests
sourceStates
_onqueueStart
stateEngine
nextStateMachineCycleOperation
testHoldStates
_onqueueNextStateMachineTransition
setNextStateMachineCycleOperation:
holdStateMachineOperation
setPaused:
stateMachineWatchers
_onqueueStartNextStateMachineOperation:
_onqueueHandlePendingFlag:
_onqueueRecheckConditions
setAllowPendingFlags:
allowPendingFlags
conditionChecksInFlight
currentConditions
setCurrentConditions:
setConditionChecksInFlight:
setCheckUnlockOperation:
checkUnlockOperation
setCheckReachabilityOperation:
checkReachabilityOperation
earlierDate:
pendingFlagsScheduler
setHoldStateMachineOperation:
setHalted:
_onqueueRegisterMultiStateArrivalWatcher:
setTimeout:
doWatchedStateMachineRPC:sourceStates:path:transitionOp:reply:
registerStateTransitionWatcher:
possiblePendingFlags
testPauseStateMachineAfterEntering:
testReleaseStateMachinePause:
registerMultiStateArrivalWatcher:
setWatcherTimeout:
setStateEngine:
setMutableStateConditions:
setCurrentFlags:
setTestHoldStates:
setStateMachineRequests:
setStateMachineWatchers:
setPendingFlags:
setPendingFlagsScheduler:
_currentState
_halted
_allowPendingFlags
_paused
_allowableStates
_timeout
_stateEngine
_mutableStateConditions
_currentFlags
_holdStateMachineOperation
_testHoldStates
_nextStateMachineCycleOperation
_stateMachineRequests
_stateMachineWatchers
_pendingFlags
_pendingFlagsScheduler
_conditionChecksInFlight
_currentConditions
_checkUnlockOperation
_checkReachabilityOperation
T@"<OctagonStateMachineEngine>",W,V_stateEngine
T@"NSMutableDictionary",&,V_mutableStateConditions
T@"CKKSCondition",&,V_paused
T@"OctagonFlags",&,V_currentFlags
T@"NSOperation",&,V_holdStateMachineOperation
T@"NSMutableSet",&,V_testHoldStates
T@"CKKSResultOperation",&,V_nextStateMachineCycleOperation
T@"NSMutableArray",&,V_stateMachineRequests
T@"NSMutableArray",&,V_stateMachineWatchers
TB,V_halted
TB,V_allowPendingFlags
T@"NSMutableDictionary",&,V_pendingFlags
T@"CKKSNearFutureScheduler",&,V_pendingFlagsScheduler
TQ,V_conditionChecksInFlight
TQ,V_currentConditions
T@"NSOperation",&,V_checkUnlockOperation
T@"NSOperation",&,V_checkReachabilityOperation
T@"<OctagonFlagContainer>",R
T@"NSSet",R,V_allowableStates
TQ,N,V_timeout
resetSharedStore
listeners
setListeners:
_listeners
T@"NSMapTable",&,V_listeners
handlePrepareErrors:nextExpectedState:
persistentKeyRef:error:
setPeerPreapprovedSPKIs:
peerPreapprovedSPKIs
afterPrepare
afterPreflight
setUpdateOp:
updateOp
afterUpdate
afterSuccessfulAllowList
requestSilentEscrowUpdate
_updateOp
_peerPreapprovedSPKIs
T@"OTUpdateTrustedDeviceListOperation",&,V_updateOp
T@"NSArray",&,V_peerPreapprovedSPKIs
T@"TPPolicyVersion",R,V_policyOverride
setFinishDate:
isReady
finishingBlock
completionHandlerDidRunCondition
timeoutQueue
indexesOfObjectsPassingTest:
objectsAtIndexes:
descriptionError
descriptionErrorCode
dependenciesDescriptionError
_onqueueTimeoutError
addNullableSuccessDependency:
successDependencies
setCompletionHandlerDidRunCondition:
setSuccessDependencies:
setTimeoutQueue:
setFinishingBlock:
_finishDate
_completionHandlerDidRunCondition
_descriptionErrorCode
_successDependencies
_timeoutQueue
_finishingBlock
T@"NSMutableArray",&,V_successDependencies
T@"NSObject<OS_dispatch_queue>",&,V_timeoutQueue
T@?,C,V_finishingBlock
T@"NSDate",&,V_finishDate
T@"CKKSCondition",&,V_completionHandlerDidRunCondition
Tq,V_descriptionErrorCode
bundleWithPath:
pathForResource:ofType:
dictionaryWithContentsOfFile:
loadDefaults
egoHelper
setupError
setSetupError:
performWithSigningKey:
setEgoPeerID:
performWithEgoPeerID:
setPeerVerifyingKeys:
performWithPeerVerifyingKeys:
signerID
setHelper:
whereClauseForRecordName:
validateWithError:
enumerateObjectsWithOptions:usingBlock:
digestForData:
committedLeafRecordIDs
peerManifestIDs
currentItems
futureData
signatures
schema
initWithDigestValue:zone:generationCount:leafRecordIDs:peerManifestIDs:currentItems:futureData:signatures:signerID:schema:encodedRecord:
initWithObjects:
addObjectsFromArray:
defaultHelperForSignerID:
initWithDigestValue:zone:generationCount:leafRecordIDs:peerManifestIDs:currentItems:futureData:signatures:signerID:schema:helper:
initWithDigestValue:zone:generationCount:leafRecordIDs:peerManifestIDs:currentItems:futureData:signatures:signerID:schema:
signatureDictFromDERData:error:
futureDataDictFromRecord:withSchema:
ignoreChanges
derDataFromSignatureDict:error:
derDataFromPeerManifests:error:
updateWithRecord:error:
signatureOperation
localizedStringWithFormat:
leafRecordForItemUUID:
leafRecordForID:
leafRecords
digestValueForLeafRecords:
manifestForRecordName:error:
initialize
shouldSyncManifests
shouldEnforceManifests
performWithAccountInfo:
manifestForZone:peerID:error:
latestTrustedManifestForZone:error:
manifestForPendingManifest:
greatestKnownGenerationCount
peerManifestsFromDERData:error:
validateItem:withError:
validateCurrentItem:withError:
itemUUIDExistsInManifest:
contentsAreEqualToManifest:
nilAllIvars
leafRecordIDs
setSignerID:
helper
_signerID
_leafRecordIDs
_peerManifestIDs
_currentItemsDict
_futureData
_signaturesDict
_schema
_helper
T@"NSArray",R,N,V_leafRecordIDs
T@"NSArray",R,N,V_peerManifestIDs
T@"NSDictionary",R,N,V_currentItemsDict
T@"NSDictionary",R,N,V_futureData
T@"NSDictionary",R,N,V_signaturesDict
T@"NSDictionary",R,N,V_schema
T@"NSString",&,N,V_signerID
T@"CKKSManifestInjectionPointHelper",&,N,V_helper
TQ,R,N,V_generationCount
isReadyToCommit
isReadyToCommmit
_committedLeafRecordIDs
_readyToCommit
T@"NSArray",R,N,V_committedLeafRecordIDs
readyToCommit
TB,R,GisReadyToCommmit,V_readyToCommit
initWithPeerID:keyPair:isEgoPeer:
newManifestForZone:withItems:peerManifestIDs:currentItems:error:helper:
updateWithNewOrChangedRecords:deletedRecordIDs:
leafRecordsForItems:manifestName:zone:
initWithDigestValue:zone:generationCount:leafRecords:peerManifestIDs:currentItems:futureData:signatures:signerID:schema:
loadLeafRecords:error:
generateSignaturesWithHelper:derData:error:
tryCurrentEgoManifestForZone:
newFakeManifestForZone:withItemRecords:currentItems:signerID:keyPair:error:
newManifestForZone:withItems:peerManifestIDs:currentItems:error:
T@"CKKSManifestInjectionPointHelper",R
setCurrentItemUUID:forIdentifier:
allCKRecordsWithZoneID:
setSignatures:
_leafRecords
T@"NSDictionary",&,N
registerHelper:forPeer:
peerVerifyingKeys
registerEgoPeerID:keyPair:
setIgnoreChanges:
_keyPair
_peerVerifyingKeys
_egoPeerID
_setupError
T@"NSDictionary",&,V_peerVerifyingKeys
T@"NSString",&,V_egoPeerID
T@"NSError",&,V_setupError
initWithData:encoding:
initWithBase64EncodedData:options:
characterAtIndex:
peerProviderID
currentSelfPeers
currentTrustedPeers
recoverTLK:trustedPeers:error:
noPeersState:
setPeerProviderID:
currentTrustedPeerIDs
_peerProviderID
_currentSelfPeers
_currentSelfPeersError
_currentTrustedPeers
_currentTrustedPeerIDs
_currentTrustedPeersError
T@"NSString",&,V_peerProviderID
T@"CKKSSelves",R,N,V_currentSelfPeers
T@"NSError",R,N,V_currentSelfPeersError
T@"NSSet",R,N,V_currentTrustedPeers
T@"NSSet",R,N,V_currentTrustedPeerIDs
T@"NSError",R,N,V_currentTrustedPeersError
setAllowsCellularAccess:
fetchRecordRecordsOperationClass
initWithRecordIDs:
setDesiredKeys:
setConfiguration:
setFetchRecordsCompletionBlock:
database
localSettingName
lastFetch
retryAfter
cachedFeatureAllowed
logSystemMetricsForActivityNamed:withAction:
fetchRampRecord:reply:
stop
setRetryAfter:
setLastFetch:
setCachedFeatureAllowed:
setDatabase:
setZone:
setRecordName:
setLocalSettingName:
setAccountStatus:
_cachedFeatureAllowed
_database
_zone
_recordName
_localSettingName
_accountStatus
_fetchRecordRecordsOperationClass
_lastFetch
_retryAfter
T@"CKContainer",&,N,V_container
T@"CKDatabase",&,N,V_database
T@"CKRecordZone",&,N,V_zone
T@"CKRecordZoneID",&,N,V_zoneID
T@"NSString",&,N,V_recordName
T@"NSString",&,N,V_localSettingName
T@"CKKSAccountStateTracker",&,N,V_accountTracker
T@"CKKSReachabilityTracker",&,N,V_reachabilityTracker
Tq,V_accountStatus
T#,R,V_fetchRecordRecordsOperationClass
T@"NSDate",&,V_lastFetch
Td,V_retryAfter
TB,V_cachedFeatureAllowed
sharedInstance
authKitAccountWithAltDSID:
securityLevelForAccount:
demoAccountForAccount:
anisetteDataWithError:
machineId
fetchDeviceListWithContext:completion:
notifiers
setNotifiers:
notifyAKDeviceList:
initWithResponseBody:
machineIDs
operation
accountIsHSA2ByAltDSID:
_notifiers
T@"CKKSListenerCollection<OTAuthKitAdapterNotifier>",&,V_notifiers
methodSignatureForSelector:
selector
entitlementBearer
failFetchEscrowContents:contextID:reply:
setSelector:
invokeWithTarget:
failSetLocalSecureElementIdentity:contextID:secureElementIdentity:reply:
failRemoveLocalSecureElementIdentityPeerID:contextID:secureElementIdentityPeerID:reply:
failFetchTrustedSecureElementIdentities:contextID:reply:
failFetchAccountSettings:contextID:reply:
failFetchAccountWideSettings:contextID:reply:
failPersistAccountSettings:context:setting:reply:
initWithManager:entitlementBearer:
createWithManager:entitlementBearer:
forwardInvocation:
setManager:
setEntitlementBearer:
_manager
_entitlementBearer
T@"OTManager",&,V_manager
T@"<OctagonEntitlementBearerProtocol>",&,V_entitlementBearer
viewsRequiringTLKUpload
numberWithUnsignedInt:
hasRefKeyBlob
T@"NSData",&,N,V_refKeyBlob
TI,N,V_type
propertiesForDataclass:
initWithString:
URLByAppendingPathComponent:
ephemeralSessionConfiguration
sessionWithConfiguration:delegate:delegateQueue:
setURLSession:
setTaskMap:
sendEvent:pushTopic:
taskMap
lostEvents
setLostEvents:
eventName
requestForGenericEvent:
URLSession
dataTaskWithRequest:
set_APSRelayTopic:
taskIdentifier
getEvent:
originalRequest
c2MetricsEndpoint
initWithURL:
generateDeviceInfo
immutableData
gzipEncode:
setHTTPMethod:
setHTTPBody:
setValue:forHTTPHeaderField:
productName
setProductName:
productType
setProductType:
productVersion
setProductVersion:
buildVersion
setProductBuild:
processName
setProcessName:
processVersion
setProcessVersion:
processUUID
setProcessUuid:
URLSession:didBecomeInvalidWithError:
URLSession:didReceiveChallenge:completionHandler:
URLSessionDidFinishEventsForBackgroundURLSession:
URLSession:task:didCompleteWithError:
_taskMap
_URLSession
_lostEvents
T@"NSMutableDictionary",&,V_taskMap
T@"NSURLSession",&,V_URLSession
Tq,V_lostEvents
linearDependenciesWithSelfFirst:
defaultAnalyticsDatabasePath:
isCKPartialError:
errorChain:depth:
addCKPartialError:error:depth:
setValuesForKeysWithDictionary:
logSoftFailureForEventNamed:withAttributes:
logHardFailureForEventNamed:withAttributes:
noteEventNamed:
initWithLong:
successfulKeysRecovered
noteMetric:count:
totalTLKSharesRecovered
databasePath
createErrorAttributes:depth:attributes:
noteEvent:zoneName:
setDateProperty:forKey:zoneName:
setErrorDomain:
setErrorDescription:
setUnderlyingError:
hasErrorDomain
setErrorCode:
setHasErrorCode:
hasErrorCode
hasErrorDescription
hasUnderlyingError
errorDomain
errorCode
errorDescription
underlyingError
_errorCode
_errorDescription
_errorDomain
_underlyingError
T@"NSString",&,N,V_errorDomain
Tq,N,V_errorCode
T@"NSString",&,N,V_errorDescription
T@"SECC2MPError",&,N,V_underlyingError
triggerKeychainItemUpdateRPC:
hasLastEscrowAttemptTime
lastEscrowAttemptTime
device
circlePeerID
lastUnlockTime
circleStatus
keyState
currentTLKUUID
currentClassAUUID
currentClassCUUID
nameFromCKRecordID:
cliqueStatusToCKType:
sosCCStatusToCKType:
cktypeToOTCliqueStatusWrapper:
cktypeToSOSCCStatus:
setOsVersion:
setLastUnlockTime:
setDevice:
setCirclePeerID:
setCircleStatus:
setKeyState:
setCurrentTLKUUID:
setCurrentClassAUUID:
setCurrentClassCUUID:
initForDevice:osVersion:lastUnlockTime:octagonPeerID:octagonStatus:circlePeerID:circleStatus:keyState:currentTLKUUID:currentClassAUUID:currentClassCUUID:zoneID:encodedCKRecord:
calendarWithIdentifier:
timeZoneWithAbbreviation:
setTimeZone:
startOfDayForDate:
tryFromDatabaseFromCKRecordID:error:
_circleStatus
_device
_osVersion
_lastUnlockTime
_circlePeerID
_keyState
_currentTLKUUID
_currentClassAUUID
_currentClassCUUID
T@"NSString",&,V_device
T@"NSString",&,V_osVersion
T@"NSDate",&,V_lastUnlockTime
T@"NSString",&,V_circlePeerID
Ti,V_circleStatus
T@"NSString<OctagonStateString>",&,V_keyState
T@"NSString",&,V_currentTLKUUID
T@"NSString",&,V_currentClassAUUID
T@"NSString",&,V_currentClassCUUID
setOperationId:
setOperationType:
hasOperationId
hasOperationType
setOperationTriggered:
setHasOperationTriggered:
hasOperationTriggered
setOperationGroupIndex:
setHasOperationGroupIndex:
hasOperationGroupIndex
operationId
operationType
operationTriggered
operationGroupIndex
_operationGroupIndex
_operationId
_operationType
_operationTriggered
T@"NSString",&,N,V_operationId
T@"NSString",&,N,V_operationType
TB,N,V_operationTriggered
TI,N,V_operationGroupIndex
initWithDependencies:intendedState:errorState:deviceInfo:peerID:permanentInfo:permanentInfoSig:stableInfo:stableInfoSig:
T@"NSData",&,N,V_permanentInfo
T@"NSData",&,N,V_permanentInfoSig
T@"NSData",&,N,V_stableInfo
T@"NSData",&,N,V_stableInfoSig
fixupOperation:
fetchRecordsOperationClass
initWithOperationDependencies:ckoperationGroup:
predicateWithValue:
initWithRecordType:predicate:
queryOperationClass
initWithQuery:
setRecordFetchedBlock:
setQueryCompletionBlock:
fixupNumber
initWithOperationDependencies:fixupNumber:ckoperationGroup:entering:
setFixupNumber:
_fixupNumber
TQ,V_fixupNumber
stateInit
OctagonStateInverseMap
peerIDs
setPeerIDs:
_peerIDs
T@"NSSet",&,V_peerIDs
accountFromData:factory:error:
trust
copyPublicKeyForPeer:err:
initWithFetchRecordZoneChangesOperationClass:fetchRecordsOperationClass:queryOperationClass:modifySubscriptionsOperationClass:modifyRecordZonesOperationClass:apsConnectionClass:nsnotificationCenterClass:nsdistributednotificationCenterClass:notifierClass:
modifySubscriptionsOperationClass
modifyRecordZonesOperationClass
nsdistributednotificationCenterClass
_fetchRecordsOperationClass
_queryOperationClass
_modifySubscriptionsOperationClass
_modifyRecordZonesOperationClass
_nsdistributednotificationCenterClass
T#,R,V_fetchRecordsOperationClass
T#,R,V_queryOperationClass
T#,R,V_modifySubscriptionsOperationClass
T#,R,V_modifyRecordZonesOperationClass
T#,R,V_nsdistributednotificationCenterClass
addOperationGroup:
addClientOperation:
setClientProcessVersion:
setClientBundleId:
setEnvironment:
operationGroupsCount
clearOperationGroups
operationGroupAtIndex:
clientOperationsCount
clearClientOperations
clientOperationAtIndex:
operationGroupType
clientOperationType
hasClientProcessVersion
hasClientBundleId
hasContainer
hasEnvironment
setAnonymous:
setHasAnonymous:
hasAnonymous
setReportOperationGroupFrequency:
setHasReportOperationGroupFrequency:
hasReportOperationGroupFrequency
setReportOperationGroupFrequencyBase:
setHasReportOperationGroupFrequencyBase:
hasReportOperationGroupFrequencyBase
setReportClientOperationFrequency:
setHasReportClientOperationFrequency:
hasReportClientOperationFrequency
setReportClientOperationFrequencyBase:
setHasReportClientOperationFrequencyBase:
hasReportClientOperationFrequencyBase
clientProcessVersion
clientBundleId
environment
anonymous
operationGroups
setOperationGroups:
reportOperationGroupFrequency
reportOperationGroupFrequencyBase
clientOperations
setClientOperations:
reportClientOperationFrequency
reportClientOperationFrequencyBase
_reportClientOperationFrequency
_reportClientOperationFrequencyBase
_reportOperationGroupFrequency
_reportOperationGroupFrequencyBase
_clientBundleId
_clientOperations
_clientProcessVersion
_environment
_operationGroups
_anonymous
T@"NSString",&,N,V_clientProcessVersion
T@"NSString",&,N,V_clientBundleId
T@"NSString",&,N,V_container
T@"NSString",&,N,V_environment
TB,N,V_anonymous
T@"NSMutableArray",&,N,V_operationGroups
TQ,N,V_reportOperationGroupFrequency
TQ,N,V_reportOperationGroupFrequencyBase
T@"NSMutableArray",&,N,V_clientOperations
TQ,N,V_reportClientOperationFrequency
TQ,N,V_reportClientOperationFrequencyBase
viewState
newerItemPersistentRef
accessGroup
_onqueueFindSecDbItem:accessGroup:error:
setNewItem:
newItem
newerItemSHA1
oldItemPersistentRef
setOldItem:
oldItem
oldItemSHA1
currentPointerIdentifier
_onqueueFindSecDbItemWithUUID:accessGroup:error:
setModifyRecordsOperation:
modifyRecordsOperation
_onqueueFindSecDbItemWithQuery:error:
initWithCKKSOperationDependencies:viewState:newItem:hash:accessGroup:identifier:replacing:hash:ckoperationGroup:
setCurrentPointerIdentifier:
setAccessGroup:
setNewerItemPersistentRef:
setNewerItemSHA1:
setOldItemPersistentRef:
setOldItemSHA1:
_currentPointerIdentifier
_viewState
_modifyRecordsOperation
_accessGroup
_newerItemPersistentRef
_newerItemSHA1
_oldItemPersistentRef
_oldItemSHA1
_newItem
_oldItem
T@"CKModifyRecordsOperation",&,V_modifyRecordsOperation
T@"NSString",&,V_accessGroup
T@"NSData",&,V_newerItemPersistentRef
T@"NSData",&,V_newerItemSHA1
T@"NSData",&,V_oldItemPersistentRef
T@"NSData",&,V_oldItemSHA1
T^{SecDbItem={__CFRuntimeBase=QAQ}^{SecDbClass}iii^{__CFDictionary}^{__CFData}^v^{__CFArray}},V_newItem
T^{SecDbItem={__CFRuntimeBase=QAQ}^{SecDbClass}iii^{__CFDictionary}^{__CFData}^v^{__CFArray}},V_oldItem
T@"NSString",&,V_currentPointerIdentifier
T@"CKKSKeychainViewState",R,V_viewState
previousPendingKeySets
randomKey:
initWithDependencies:rollTLKIfPresent:preexistingPendingKeySets:intendedState:errorState:
rollTLKIfPresent
setRollTLKIfPresent:
setPreviousPendingKeySets:
_rollTLKIfPresent
_previousPendingKeySets
TB,V_rollTLKIfPresent
T@"NSDictionary",&,V_previousPendingKeySets
T@"CKKSOperationDependencies",R,V_deps
stateIfNotHSA2
stateIfNoAccount
setStateIfNotHSA2:
setStateIfNoAccount:
_stateIfNotHSA2
_stateIfNoAccount
T@"NSString<OctagonStateString>",&,V_stateIfNotHSA2
T@"NSString<OctagonStateString>",&,V_stateIfNoAccount
afterTPHTrustState:trustedPeers:
contextForStateRepair
contextForConfirmExistingSecret
contextForSecureTerms
createCDPFollowupContext:
postFollowUpWithContext:error:
postedCFUTypes
clearFollowUpWithContext:error:
clearFollowUp:error:
previousFollowupEnd
setPreviousFollowupEnd:
followupStart
setFollowupStart:
followupEnd
setFollowupEnd:
setPostedCFUTypes:
_previousFollowupEnd
_followupStart
_followupEnd
_postedCFUTypes
T@"<OctagonFollowUpControllerProtocol>",&,V_cdpd
Td,V_previousFollowupEnd
Td,V_followupStart
Td,V_followupEnd
T@"NSMutableSet",&,V_postedCFUTypes
hasPosted:
clearAllPostedFlags
keyCache
loadKeyForItem:error:
setKeyCache:
_keyCache
T@"NSMutableDictionary",&,V_keyCache
resetUnlockDependency
_onqueueRecheck
queueIsLocked
lastUnlockedTime
setLastUnlockedTime:
setUnlockDependency:
lockStateProvider
queryAKSLocked
setQueueIsLocked:
lockedError:
checkErrorChainForLockState:
initWithProvider:
setLockStateProvider:
observers
setObservers:
notify_token
setNotify_token:
_queueIsLocked
_notify_token
_unlockDependency
_lockStateProvider
_observers
_lastUnlockedTime
TB,V_queueIsLocked
T@"NSHashTable",&,V_observers
Ti,V_notify_token
T@"NSDate",&,V_lastUnlockedTime
T@"NSOperation",&,V_unlockDependency
T@"<CKKSLockStateProviderProtocol>",&,V_lockStateProvider
isAppleInternal
mainBundle
infoDictionary
hasSecDbBackupWrappedItemKey
secDbBackupWrappedItemKey
_secDbBackupWrappedItemKey
T@"NSData",&,N,V_secDbBackupWrappedItemKey
setAkswrappedkey:
setBackupwrappedkey:
setHasKeyclass:
hasKeyclass
setActualKeyclass:
setHasActualKeyclass:
hasActualKeyclass
hasBaguuid
hasAkswrappedkey
hasBackupwrappedkey
actualKeyclass
akswrappedkey
backupwrappedkey
_actualKeyclass
_akswrappedkey
_backupwrappedkey
Ti,N,V_keyclass
Ti,N,V_actualKeyclass
T@"NSData",&,N,V_akswrappedkey
T@"NSData",&,N,V_backupwrappedkey
createAccountLoggedInDependency:
containerIdentifier
lastFixupOperation
_onqueueResetAllInflightOQE:
waitUntilReadyForRPCForOperation:fast:errorOnNoCloudKitAccount:errorOnPolicyMissing:error:
cloudkitRetryAfter
trustStatus
_onqueuePrioritizePriorityViews
performInitializedOperation
setLastFixupOperation:
setLastNewTLKOperation:
loseTrustOperation:
lastNewTLKOperation
becomeReadyOperation:
keyStateFullRefetchRequested
outgoingQueueOperationScheduler
launchComplete
requestSuccessfulFetchForManyReasons:
scheduleOperation:
keyStateMachineRefetched
initWithDependencies:allowFullRefetchResult:intendedState:errorState:
anyViewsInState:
suggestTLKUpload
tlkMissingOperation:
setKeyStateMachineRefetched:
setKeyStateFullRefetchRequested:
resultsOfNextIncomingQueueOperationOperation
setResultsOfNextIncomingQueueOperationOperation:
setLastIncomingQueueOperation:
holdIncomingQueueOperation
setInitiatedLocalScan:
initWithDependencies:intendedState:errorState:holdOperation:
setLastReencryptOutgoingItemsOperation:
holdOutgoingQueueOperation
outgoingQueueOperations
setLastOutgoingQueueOperation:
launched
addAttribute:value:
setTrustStatus:
setTrustStatusKnown:
_onqueueOtherDevicesReportHavingTLKs:trustStates:
setDay:
setItemModificationsBeforePolicyLoaded:
_onqueueProcessOutgoingQueue:
policyDependentViewStateForName:error:
accountStateKnown
findFirstPendingOperation:
scheduleOperationWithoutDependencies:
findFirstPendingOperation:ofClass:
waitForPolicy:error:
priorityViewsProcessed
havoc
setHavoc:
accountStatusFromCKAccountInfo:
handleCKLogin
accountLoggedInDependency
setAccountLoggedInDependency:
handleCKLogout
loggedOut
setLoggedOut:
loggedIn
setLoggedIn:
setSuggestTLKUpload:
trustStatusKnown
intersectSet:
setByAddingObjectsFromSet:
createViewState:zoneIsNew:ckksManagedView:
setPriorityViewsProcessed:
registerClient:zoneID:
itemModificationsBeforePolicyLoaded
postNotificationName:object:userInfo:options:
initWithZoneID:ckksManagedView:notifyViewChangedScheduler:notifyViewReadyScheduler:
_onQueueZoneIsReadyForFetching:
resyncRecordsSeen
setResyncRecordsSeen:
ckErrorOrPartialError:isError:zoneID:
keyStateMachineRequestProcess
inflightFetch
keyHierarchyConditions
notifyViewReadyScheduler
allFor:keyUUID:zoneID:error:
lastProcessReceivedKeysOperation
lastReencryptOutgoingItemsOperation
sortDescriptorWithKey:ascending:
sortedArrayUsingDescriptors:
fastStatus:zoneStateEntry:
intransactionSlowStatus:
shouldRetryAfterFetchError:zoneID:
_onqueuePokeKeyStateMachine
resultsOfNextProcessIncomingQueueOperation
rpcFetchBecause:
scanLocalItems
outgoingQueueEmpty:
waitForFetchAndIncomingQueueProcessing
waitForKeyHierarchyReadiness
waitUntilAllOperationsAreFinished
waitForOperationsOfClass:
setAccountStateKnown:
setLastProcessReceivedKeysOperation:
lastSynchronizeOperation
setHoldOutgoingQueueOperation:
setHoldIncomingQueueOperation:
setHoldLocalSynchronizeOperation:
initiatedLocalScan
setOutgoingQueueOperationScheduler:
setOutgoingQueueOperations:
setDatabaseProvider:
setCurrentTrustStates:
_keyStateMachineRefetched
_keyStateFullRefetchRequested
_initiatedLocalScan
_itemModificationsBeforePolicyLoaded
_havoc
_loggedIn
_loggedOut
_accountStateKnown
_trustStatus
_trustStatusKnown
_suggestTLKUpload
_lastIncomingQueueOperation
_lastNewTLKOperation
_lastOutgoingQueueOperation
_lastProcessReceivedKeysOperation
_lastReencryptOutgoingItemsOperation
_lastSynchronizeOperation
_lastFixupOperation
_holdOutgoingQueueOperation
_holdIncomingQueueOperation
_holdLocalSynchronizeOperation
_priorityViewsProcessed
_outgoingQueueOperationScheduler
_resultsOfNextIncomingQueueOperationOperation
_outgoingQueueOperations
_resyncRecordsSeen
_accountLoggedInDependency
_currentTrustStates
T@"OctagonStateMultiStateArrivalWatcher",&,V_priorityViewsProcessed
TB,V_itemModificationsBeforePolicyLoaded
T@"CKKSNearFutureScheduler",&,V_outgoingQueueOperationScheduler
T@"CKKSResultOperation",&,V_resultsOfNextIncomingQueueOperationOperation
T@"NSHashTable",&,V_outgoingQueueOperations
T@"NSMutableSet",&,V_resyncRecordsSeen
T@"CKKSSecDbAdapter",&,V_databaseProvider
T@"CKKSResultOperation",&,V_accountLoggedInDependency
T@"NSArray",&,V_currentTrustStates
TB,V_havoc
T@"CKKSCloudKitClassDependencies",R,V_cloudKitClassDependencies
T@"NSObject<OS_dispatch_queue>",R,V_queue
T@"CKKSCondition",&,V_loggedIn
T@"CKKSCondition",&,V_loggedOut
T@"CKKSCondition",&,V_accountStateKnown
Tq,V_trustStatus
T@"CKKSCondition",&,V_trustStatusKnown
T@"TPSyncingPolicy",R
TB,V_keyStateMachineRefetched
TB,V_keyStateFullRefetchRequested
T@"CKKSNearFutureScheduler",&,V_suggestTLKUpload
T@"CKKSIncomingQueueOperation",&,V_lastIncomingQueueOperation
T@"CKKSNewTLKOperation",&,V_lastNewTLKOperation
T@"CKKSOutgoingQueueOperation",&,V_lastOutgoingQueueOperation
T@"CKKSProcessReceivedKeysOperation",&,V_lastProcessReceivedKeysOperation
T@"CKKSReencryptOutgoingItemsOperation",&,V_lastReencryptOutgoingItemsOperation
T@"CKKSSynchronizeOperation",&,V_lastSynchronizeOperation
T@"CKKSResultOperation",&,V_lastFixupOperation
T@"NSOperation",&,V_holdOutgoingQueueOperation
T@"NSOperation",&,V_holdIncomingQueueOperation
T@"NSOperation",&,V_holdLocalSynchronizeOperation
T@"NSString",R,V_zoneName
TB,V_initiatedLocalScan
T@"CKKSOperationDependencies",R,V_operationDependencies
init:contextID:intendedState:errorState:cuttlefishXPCWrapper:
setContainerName:
setContextID:
setCuttlefishXPCWrapper:
T@"NSString",&,V_containerName
T@"NSString",&,V_contextID
T@"CuttlefishXPCWrapper",&,V_cuttlefishXPCWrapper
keyclassAsString:
StringAsKeyclass:
T@"NSData",&,N,V_encryptedSecretData
T@"NSData",&,N,V_encryptedMetadata
setStorageFile:
setStorageClass:
dataWithContentsOfURL:
storageClass
setProtobufStorage:
protobufStorage
storageFile
writeToURL:atomically:
initWithStoragePath:storageClass:
storage
setStorage:
_storageFile
_storageClass
_protobufStorage
T@"NSURL",&,V_storageFile
T#,&,V_storageClass
T@"<CKKSPBCodable>",&,V_protobufStorage
processRemoteKeys:viewState:currentTrustStates:error:
checkExistingKeyHierarchy:zoneID:currentTrustStates:error:
setShare:
tryFromDatabase:receiverPeerID:senderPeerID:zoneID:error:
regularExpressionWithPattern:options:error:
firstMatchInString:options:range:
rangeWithName:
substringWithRange:
initForKey:senderPeerID:recieverPeerID:receiverEncPublicKeySPKI:curve:version:epoch:poisoned:wrappedKey:signature:zoneID:encodedCKRecord:
fromDatabase:receiverPeerID:senderPeerID:zoneID:error:
ckrecordPrefix
init:sender:receiver:curve:version:epoch:poisoned:zoneID:encodedCKRecord:
dataForSigning
signRecord:error:
verifySignature:verifyingPeer:error:
signatureVerifiesWithPeerSet:error:
_share
T@"CKKSTLKShare",&,V_share
Tq,R
readyNotificationArmed
setReadyNotificationArmed:
setLaunch:
setNotifyViewChangedScheduler:
setNotifyViewReadyScheduler:
setAllowableStates:
_ckksManagedView
_readyNotificationArmed
_viewKeyHierarchyState
_launch
_notifyViewChangedScheduler
_notifyViewReadyScheduler
T@"NSSet",&,V_allowableStates
TB,V_readyNotificationArmed
T@"CKRecordZoneID",R,V_zoneID
T@"CKKSLaunchSequence",&,V_launch
T@"NSString<OctagonStateString>",&,V_viewKeyHierarchyState
TB,R,V_ckksManagedView
T@"CKKSNearFutureScheduler",&,V_notifyViewChangedScheduler
T@"CKKSNearFutureScheduler",&,V_notifyViewReadyScheduler
failedDueToEssentialTrustState
checkAndHealTLKShares:currentTrustStates:
failedDueToLockState
setFailedDueToLockState:
createMissingKeyShares:peers:databaseProvider:error:
setFailedDueToEssentialTrustState:
areNewSharesSufficient:trustStates:error:
filterTrustedPeers:missingTLKSharesFor:databaseProvider:error:
_failedDueToLockState
_failedDueToEssentialTrustState
TB,V_failedDueToLockState
TB,V_failedDueToEssentialTrustState
initIntending:errorState:
_sourceStates
_transitionOperation
T@"NSSet",R,V_sourceStates
T@"CKKSResultOperation<OctagonStateTransitionOperationProtocol>",R,V_transitionOperation
_isRetryableNSURLError
_isCKServerInternalError
_isRetryableAKError
cuttlefishRetryAfter
publickeyHash
initWithPublicKey:publickeyHash:user:
publickey
musr
setPublickeyHash:
setPublickey:
setMusr:
_publickeyHash
_publickey
_musr
T@"NSData",&,V_publickeyHash
T@"NSData",&,V_publickey
T@"NSData",&,V_musr
setNetworkTaskDescription:
setNetworkHostname:
setNetworkRemoteAddresssAndPort:
setNetworkConnectionUuid:
setNetworkInterfaceIdentifier:
setNetworkProtocolName:
setNetworkFatalError:
setNetworkRequestUri:
setOptionsQualityOfService:
setOptionsSourceApplicationBundleIdentifier:
setOptionsSourceApplicationSecondaryIdentifier:
hasNetworkTaskDescription
hasNetworkHostname
hasNetworkRemoteAddresssAndPort
hasNetworkConnectionUuid
setNetworkConnectionReused:
setHasNetworkConnectionReused:
hasNetworkConnectionReused
hasNetworkInterfaceIdentifier
hasNetworkProtocolName
setNetworkRequestHeaderSize:
setHasNetworkRequestHeaderSize:
hasNetworkRequestHeaderSize
setNetworkRequestBodyBytesSent:
setHasNetworkRequestBodyBytesSent:
hasNetworkRequestBodyBytesSent
setNetworkResponseHeaderSize:
setHasNetworkResponseHeaderSize:
hasNetworkResponseHeaderSize
setNetworkResponseBodyBytesReceived:
setHasNetworkResponseBodyBytesReceived:
hasNetworkResponseBodyBytesReceived
setNetworkPreviousAttemptCount:
setHasNetworkPreviousAttemptCount:
hasNetworkPreviousAttemptCount
hasNetworkFatalError
setNetworkStatusCode:
setHasNetworkStatusCode:
hasNetworkStatusCode
hasNetworkRequestUri
setTimestampC2Init:
setHasTimestampC2Init:
hasTimestampC2Init
setTimestampC2Start:
setHasTimestampC2Start:
hasTimestampC2Start
setTimestampC2Now:
setHasTimestampC2Now:
hasTimestampC2Now
setTimestampDnsStart:
setHasTimestampDnsStart:
hasTimestampDnsStart
setTimestampDnsEnd:
setHasTimestampDnsEnd:
hasTimestampDnsEnd
setTimestampTcpStart:
setHasTimestampTcpStart:
hasTimestampTcpStart
setTimestampTcpEnd:
setHasTimestampTcpEnd:
hasTimestampTcpEnd
setTimestampSslStart:
setHasTimestampSslStart:
hasTimestampSslStart
setTimestampRequestStart:
setHasTimestampRequestStart:
hasTimestampRequestStart
setTimestampRequestEnd:
setHasTimestampRequestEnd:
hasTimestampRequestEnd
setTimestampResponseStart:
setHasTimestampResponseStart:
hasTimestampResponseStart
setTimestampResponseEnd:
setHasTimestampResponseEnd:
hasTimestampResponseEnd
hasOptionsQualityOfService
setOptionsOutOfProcess:
setHasOptionsOutOfProcess:
hasOptionsOutOfProcess
setOptionsOutOfProcessForceDiscretionary:
setHasOptionsOutOfProcessForceDiscretionary:
hasOptionsOutOfProcessForceDiscretionary
setOptionsAllowExpensiveAccess:
setHasOptionsAllowExpensiveAccess:
hasOptionsAllowExpensiveAccess
setOptionsAllowPowerNapScheduling:
setHasOptionsAllowPowerNapScheduling:
hasOptionsAllowPowerNapScheduling
setOptionsTimeoutIntervalForRequest:
setHasOptionsTimeoutIntervalForRequest:
hasOptionsTimeoutIntervalForRequest
setOptionsTimeoutIntervalForResource:
setHasOptionsTimeoutIntervalForResource:
hasOptionsTimeoutIntervalForResource
hasOptionsSourceApplicationBundleIdentifier
hasOptionsSourceApplicationSecondaryIdentifier
setOptionsAppleIdContext:
setHasOptionsAppleIdContext:
hasOptionsAppleIdContext
setOptionsTlsPinningRequired:
setHasOptionsTlsPinningRequired:
hasOptionsTlsPinningRequired
networkTaskDescription
networkHostname
networkRemoteAddresssAndPort
networkConnectionUuid
networkConnectionReused
networkInterfaceIdentifier
networkProtocolName
networkRequestHeaderSize
networkRequestBodyBytesSent
networkResponseHeaderSize
networkResponseBodyBytesReceived
networkPreviousAttemptCount
networkFatalError
networkStatusCode
networkRequestUri
timestampC2Init
timestampC2Start
timestampC2Now
timestampDnsStart
timestampDnsEnd
timestampTcpStart
timestampTcpEnd
timestampSslStart
timestampRequestStart
timestampRequestEnd
timestampResponseStart
timestampResponseEnd
optionsQualityOfService
optionsOutOfProcess
optionsOutOfProcessForceDiscretionary
optionsAllowExpensiveAccess
optionsAllowPowerNapScheduling
optionsTimeoutIntervalForRequest
optionsTimeoutIntervalForResource
optionsSourceApplicationBundleIdentifier
optionsSourceApplicationSecondaryIdentifier
optionsAppleIdContext
optionsTlsPinningRequired
_networkRequestBodyBytesSent
_networkResponseBodyBytesReceived
_networkStatusCode
_timestampC2Init
_timestampC2Now
_timestampC2Start
_timestampDnsEnd
_timestampDnsStart
_timestampRequestEnd
_timestampRequestStart
_timestampResponseEnd
_timestampResponseStart
_timestampSslStart
_timestampTcpEnd
_timestampTcpStart
_networkConnectionUuid
_networkFatalError
_networkHostname
_networkInterfaceIdentifier
_networkPreviousAttemptCount
_networkProtocolName
_networkRemoteAddresssAndPort
_networkRequestHeaderSize
_networkRequestUri
_networkResponseHeaderSize
_networkTaskDescription
_optionsQualityOfService
_optionsSourceApplicationBundleIdentifier
_optionsSourceApplicationSecondaryIdentifier
_optionsTimeoutIntervalForRequest
_optionsTimeoutIntervalForResource
_networkConnectionReused
_optionsAllowExpensiveAccess
_optionsAllowPowerNapScheduling
_optionsAppleIdContext
_optionsOutOfProcess
_optionsOutOfProcessForceDiscretionary
_optionsTlsPinningRequired
T@"NSString",&,N,V_networkTaskDescription
T@"NSString",&,N,V_networkHostname
T@"NSString",&,N,V_networkRemoteAddresssAndPort
T@"NSString",&,N,V_networkConnectionUuid
TB,N,V_networkConnectionReused
T@"NSString",&,N,V_networkInterfaceIdentifier
T@"NSString",&,N,V_networkProtocolName
TI,N,V_networkRequestHeaderSize
TQ,N,V_networkRequestBodyBytesSent
TI,N,V_networkResponseHeaderSize
TQ,N,V_networkResponseBodyBytesReceived
TI,N,V_networkPreviousAttemptCount
T@"SECC2MPError",&,N,V_networkFatalError
TQ,N,V_networkStatusCode
T@"NSString",&,N,V_networkRequestUri
TQ,N,V_timestampC2Init
TQ,N,V_timestampC2Start
TQ,N,V_timestampC2Now
TQ,N,V_timestampDnsStart
TQ,N,V_timestampDnsEnd
TQ,N,V_timestampTcpStart
TQ,N,V_timestampTcpEnd
TQ,N,V_timestampSslStart
TQ,N,V_timestampRequestStart
TQ,N,V_timestampRequestEnd
TQ,N,V_timestampResponseStart
TQ,N,V_timestampResponseEnd
T@"NSString",&,N,V_optionsQualityOfService
TB,N,V_optionsOutOfProcess
TB,N,V_optionsOutOfProcessForceDiscretionary
TB,N,V_optionsAllowExpensiveAccess
TB,N,V_optionsAllowPowerNapScheduling
TI,N,V_optionsTimeoutIntervalForRequest
TI,N,V_optionsTimeoutIntervalForResource
T@"NSString",&,N,V_optionsSourceApplicationBundleIdentifier
T@"NSString",&,N,V_optionsSourceApplicationSecondaryIdentifier
TB,N,V_optionsAppleIdContext
TB,N,V_optionsTlsPinningRequired
setMachineID:
setModelID:
setDeviceName:
setSerialNumber:
_machineID
_modelID
_deviceName
_serialNumber
TQ,V_epoch
T@"NSString",&,V_machineID
T@"NSString",&,V_modelID
T@"NSString",&,V_deviceName
T@"NSString",&,V_serialNumber
setCkksPushTracingEnabled:
setCkksPushTracingUUID:
setCkksPushReceivedDate:
T@"NSString",&,N
T@"NSDate",&,N
synchronizedGlobalDelegatePortMap
initWithNamedDelegatePort:apsConnectionClass:
resettableSynchronizedGlobalDelegatePortMap:
apsDeliveryQueue
environmentMap
undeliveredUpdates
undeliveredCuttlefishUpdates
initWithNamedDelegatePort:apsConnectionClass:stalePushTimeout:
setUndeliveredUpdates:
reportDroppedPushes:
namedDelegatePort
initWithEnvironmentName:namedDelegatePort:queue:
cuttlefishPushTopics
arrayByAddingObject:
setEnabledTopics:
setZoneUpdateReceiver:
notifyZoneChange:
octagonContainerMap
topic
isTracingEnabled
confirmReceiptForMessage:
clearStalePushNotifications
notificationFromRemoteNotificationDictionary:
notificationType
tracingUUID
initWithUUIDBytes:
zoneUpdateReceiver
resetGlobalDelegatePortMap
connection:didReceivePublicToken:
connection:didReceiveToken:forTopic:identifier:
connection:didReceiveIncomingMessage:
connection:didReceiveMessageForTopic:userInfo:
connection:didSendOutgoingMessage:
connection:didFailToSendOutgoingMessage:error:
connection:didChangeConnectedStatus:
connectionDidReconnect:
connection:channelSubscriptionsFailedWithFailures:
haveStalePushes
apsConnection
setApsConnection:
setClearStalePushNotifications:
setNamedDelegatePort:
setEnvironmentMap:
setUndeliveredCuttlefishUpdates:
setOctagonContainerMap:
_apsConnection
_clearStalePushNotifications
_namedDelegatePort
_environmentMap
_undeliveredUpdates
_undeliveredCuttlefishUpdates
_zoneUpdateReceiver
_octagonContainerMap
T@"CKKSNearFutureScheduler",&,V_clearStalePushNotifications
T@"NSString",&,V_namedDelegatePort
T@"NSMutableDictionary",&,V_environmentMap
T@"NSMutableSet",&,V_undeliveredUpdates
T@"NSMutableSet",&,V_undeliveredCuttlefishUpdates
T@"<CKKSZoneUpdateReceiverProtocol>",&,V_zoneUpdateReceiver
T@"NSMapTable",&,V_octagonContainerMap
T@"<OctagonAPSConnection>",&,V_apsConnection
externalManagedViewForRPC:error:
fetchCloudKitExternallyManagedViewKeyHierarchy:reply:
loadKeys:reply:
initWithAESKey:wrappedAESKey:uuid:parentKeyUUID:keyclass:zoneID:
key:wrappedByKey:uuid:parentKeyUUID:keyclass:zoneID:error:
setKeyMaterialInKeychain:error:
queryKeyMaterialInKeychain:error:
fetchKeyMaterialItemFromKeychain:resave:error:
unwrapSelfWithAESKey:error:
_aessivkey
T@"CKKSWrappedAESSIVKey",&,V_wrappedkey
T@"CKKSAESSIVKey",&,V_aessivkey
newUpload
encodeBool:forKey:
decodeBoolForKey:
setNewUpload:
_newUpload
T@"CKKSKeychainBackedKey",&,V_tlk
T@"CKKSKeychainBackedKey",&,V_classA
T@"CKKSKeychainBackedKey",&,V_classC
TB,V_newUpload
setBaghash:
hasBaghash
baghash
_baghash
T@"NSData",&,N,V_baghash
setWithSet:
initWithPeerID:isPreapproved:status:memberChanges:unknownMachineIDs:osVersion:walrus:
setIdentityIsPreapproved:
setPeerStatus:
setMemberChanges:
setUnknownMachineIDsPresent:
setWalrus:
_identityIsPreapproved
_memberChanges
_unknownMachineIDsPresent
_peerStatus
_walrus
TB,V_identityIsPreapproved
TQ,V_peerStatus
TB,V_memberChanges
TB,V_unknownMachineIDsPresent
T@"TPPBPeerStableInfoSetting",&,V_walrus
initWithEgoPeerID:egoPeerMachineID:status:viablePeerCountsByModelID:peerCountsByMachineID:isExcluded:isLocked:
setEgoStatus:
setEgoPeerMachineID:
setNumberOfPeersInOctagon:
setViablePeerCountsByModelID:
setPeerCountsByMachineID:
setIsExcluded:
setIsLocked:
_isExcluded
_isLocked
_egoStatus
_egoPeerMachineID
_numberOfPeersInOctagon
_viablePeerCountsByModelID
_peerCountsByMachineID
TQ,V_egoStatus
T@"NSString",&,V_egoPeerMachineID
TQ,V_numberOfPeersInOctagon
T@"NSDictionary",&,V_viablePeerCountsByModelID
T@"NSDictionary",&,V_peerCountsByMachineID
TB,V_isExcluded
TB,V_isLocked
initWithPeerID:signingSPKI:encryptionSPKI:secureElementIdentity:viewList:
setSigningSPKI:
setEncryptionSPKI:
_signingSPKI
_encryptionSPKI
T@"NSData",&,V_signingSPKI
T@"NSData",&,V_encryptionSPKI
T@"TPPBSecureElementIdentity",&,V_secureElementIdentity
kind
decodeInt32ForKey:
encodeInt32:forKey:
setRecoveryString:
setKind:
_kind
_recoveryString
T@"NSData",&,V_encryptionKey
T@"NSData",&,V_signingKey
T@"NSString",&,V_recoveryString
Ti,V_kind
tlkRecoveryErrors
initWithSuccessfulKeyUUIDs:totalTLKSharesRecovered:tlkRecoveryErrors:
setSuccessfulKeysRecovered:
setTotalTLKSharesRecovered:
setTlkRecoveryErrors:
_successfulKeysRecovered
_totalTLKSharesRecovered
_tlkRecoveryErrors
T@"NSSet",&,V_successfulKeysRecovered
Tq,V_totalTLKSharesRecovered
T@"NSDictionary",&,V_tlkRecoveryErrors
createOperationToFinishAttemptForClient:clientName:
clientScope
setNextClientStateMachineCycleOperation:
_onqueueStartNextClientStateMachineOperation:
nextClientStateMachineCycleOperation
_onqueueNextClientStateMachineTransition:
stateMachineClientRequests
_onqueuePokeClientStateMachine:
clientName
handleExternalClientStateMachineRequest:client:
isAcceptorWaitingForFirstMessage
notifyContainerChange
setStateConditions:
setClientScope:
setStateMachineClientRequests:
_clientName
_stateConditions
_clientScope
_nextClientStateMachineCycleOperation
_stateMachineClientRequests
T@"NSString",&,V_clientScope
T@"CKKSResultOperation",&,V_nextClientStateMachineCycleOperation
T@"NSMutableArray",&,V_stateMachineClientRequests
T@"NSString",R,V_clientName
T@"NSMutableDictionary",&,V_stateConditions
zeroKey
size
encodeBytes:length:forKey:
decodeBytesForKey:returnedLength:
doSIV:nonce:text:buffer:bufferLength:authenticatedData:error:
initWithBytesNoCopy:length:freeWhenDone:
keyMaterial
addInternalTestConfig:
setUserDefaultTestName:
internalTestConfigsCount
clearInternalTestConfigs
internalTestConfigAtIndex:
internalTestConfigType
hasProductName
hasProductType
hasProductVersion
hasProductBuild
setIsAppleInternal:
setHasIsAppleInternal:
hasIsAppleInternal
hasProcessName
hasProcessVersion
hasProcessUuid
hasUserDefaultTestName
productBuild
processUuid
userDefaultTestName
internalTestConfigs
setInternalTestConfigs:
_internalTestConfigs
_processName
_processUuid
_processVersion
_productBuild
_productName
_productType
_productVersion
_userDefaultTestName
_isAppleInternal
T@"NSString",&,N,V_productName
T@"NSString",&,N,V_productType
T@"NSString",&,N,V_productVersion
T@"NSString",&,N,V_productBuild
TB,N,V_isAppleInternal
T@"NSString",&,N,V_processName
T@"NSString",&,N,V_processVersion
T@"NSString",&,N,V_processUuid
T@"NSString",&,N,V_userDefaultTestName
T@"NSMutableArray",&,N,V_internalTestConfigs
setOperationGroupId:
setOperationGroupName:
hasOperationGroupId
hasOperationGroupName
setOperationGroupTriggered:
setHasOperationGroupTriggered:
hasOperationGroupTriggered
operationGroupId
operationGroupName
operationGroupTriggered
_operationGroupId
_operationGroupName
_operationGroupTriggered
T@"NSString",&,N,V_operationGroupId
T@"NSString",&,N,V_operationGroupName
TB,N,V_operationGroupTriggered
lastCKFetchError
T@"CKKSZoneChangeFetcher",W,V_owner
createSuccesfulFetchDependency
maybeCreateNewFetch
fetchScheduler
requestFetchDueToAPNS:
strongClientMap
successfulFetchDependency
setNewRequests:
newRequests
inflightFetchDependency
currentFetch
currentProcessResult
_onqueueCreateNewFetch
maybeCreateNewFetchOnQueue
setInflightFetchDependency:
inflightFetchDependencies
setSuccessfulFetchDependency:
setCurrentFetchReasons:
holdOperation
setLastCKFetchError:
setCurrentFetch:
setCurrentProcessResult:
setHoldOperation:
requestSuccessfulFetch:
holdFetchesUntil:
setFetchScheduler:
setInflightFetchDependencies:
_newRequests
_lastCKFetchError
_fetchScheduler
_currentFetch
_currentProcessResult
_successfulFetchDependency
_inflightFetchDependencies
_inflightFetchDependency
_holdOperation
T@"NSError",&,V_lastCKFetchError
T@"NSMapTable",&,V_clientMap
T@"CKKSFetchAllRecordZoneChangesOperation",&,V_currentFetch
T@"CKKSResultOperation",&,V_currentProcessResult
T@"NSMutableSet",&,V_currentFetchReasons
T@"NSMutableSet",&,V_apnsPushes
TB,V_newRequests
T@"CKKSZoneChangeFetchDependencyOperation",&,V_successfulFetchDependency
T@"NSMutableSet",&,V_inflightFetchDependencies
T@"CKKSZoneChangeFetchDependencyOperation",&,V_inflightFetchDependency
T@"CKKSResultOperation",&,V_holdOperation
T@"CKKSNearFutureScheduler",&,V_fetchScheduler
persistentReferenceUpgrader
setPersistentReferenceUpgrader:
_persistentReferenceUpgrader
T@"CKKSNearFutureScheduler",&,V_persistentReferenceUpgrader
dropAllKeys
_onQueueDropClassAKeys
_onQueueDropAllKeys
writeKey:ForKeyclass:withKeybag:keySpecifier:database:error:
readKeyDataForClass:fromDb:actualKeyclass:oldFormatData:newFormatData:error:
validateWrappedKey:forKeyClass:actualKeyClass:keybag:keySpecifier:error:
cachingEnabled
fetchKeyForClass:fromDb:keybag:specifier:allowWrites:error:
newKeyForKeyclass:withKeybag:keySpecifier:database:error:
dropClassAKeys
keysDict
setKeysDict:
keybagNotificationToken
setKeybagNotificationToken:
_keybagNotificationToken
_keysDict
T@"NSMutableDictionary",&,V_keysDict
Ti,V_keybagNotificationToken
semaphore
chain
setChain:
setSemaphore:
_semaphore
_chain
T@"NSObject<OS_dispatch_semaphore>",&,V_semaphore
T@"CKKSCondition",&,V_chain
setEventName:
setAttributes:
supportedAttributeClasses
generateError:
timeIntervalSinceReferenceDate
convertTimeIntervalToServerTime:
setMetricValue:forKey:
_eventName
T@"NSString",&,V_eventName
T@"NSMutableDictionary",&,V_attributes
intendedEmptyIdentity
hasUuid
setCertCached:
hasCertCached
setLastCloudServicesTriggerTime:
setHasLastCloudServicesTriggerTime:
setHasLastEscrowAttemptTime:
setHasUploadCompleted:
setHasUploadRetries:
hasUploadRetries
setHasTriggerRequestTime:
hasTriggerRequestTime
hasSerializedReason
triggerRequestTime
serializedReason
_lastCloudServicesTriggerTime
_lastEscrowAttemptTime
_triggerRequestTime
_uploadRetries
_serializedPrerecord
_serializedReason
_certCached
_uploadCompleted
TB,N,V_certCached
T@"NSData",&,N,V_serializedPrerecord
TQ,N,V_lastCloudServicesTriggerTime
TQ,N,V_lastEscrowAttemptTime
TB,N,V_uploadCompleted
TQ,N,V_uploadRetries
TQ,N,V_triggerRequestTime
T@"NSData",&,N,V_serializedReason
monitors
_onqueueLoadOrCreateAccountMetadata:
dateWithTimeIntervalSince1970:
asyncNotifyAccountStateChanges:from:
tag1
notifyQueue
persistNewEgoPeerID:error:
_onqueuePersistAccountChanges:error:
setNotifyQueue:
setMonitors:
_notifyQueue
_monitors
T@"NSObject<OS_dispatch_queue>",&,V_notifyQueue
T@"NSMutableSet",&,V_monitors
setStateHolder:
setFlagHandler:
setSosAdapter:
setAuthKitAdapter:
setDeviceInformationAdapter:
setEscrowRequestClass:
setNotifierClass:
_stateHolder
T@"OTCuttlefishAccountStateHolder",&,V_stateHolder
T@"<OctagonStateFlagHandler>",&,V_flagHandler
T@"<OTSOSAdapter>",&,V_sosAdapter
T@"<OTAuthKitAdapter>",&,V_authKitAdapter
T@"<OTDeviceInformationAdapter>",&,V_deviceInformationAdapter
T@"CKKSKeychainView",R,W,V_ckks
T#,&,V_escrowRequestClass
T#,&,V_notifierClass
setServiceName:
setPartition:
setServiceBuild:
setServiceInstance:
hasServiceName
hasPartition
hasServiceBuild
hasServiceInstance
serviceName
partition
serviceBuild
serviceInstance
_partition
_serviceBuild
_serviceInstance
_serviceName
T@"NSString",&,N,V_serviceName
T@"NSString",&,N,V_partition
T@"NSString",&,N,V_serviceBuild
T@"NSString",&,N,V_serviceInstance
initWithZoneModificationOperation:zoneSubscriptionOperation:
setZoneModificationOperation:
setZoneSubscriptionOperation:
zonesToCreate
subscriptionsToSubscribe
zoneIDsToDelete
setSavedRecordZones:
setDeletedRecordZoneIDs:
setSavedSubscriptions:
deletedSubscriptionIDs
setDeletedSubscriptionIDs:
_zoneModificationOperation
_zoneSubscriptionOperation
_zonesToCreate
_subscriptionsToSubscribe
_zoneIDsToDelete
_savedRecordZones
_deletedRecordZoneIDs
_savedSubscriptions
_deletedSubscriptionIDs
T@"CKKSResultOperation",&,V_zoneModificationOperation
T@"CKKSResultOperation",&,V_zoneSubscriptionOperation
T@"NSMutableArray",R,V_zonesToCreate
T@"NSMutableArray",R,V_subscriptionsToSubscribe
T@"NSMutableArray",R,V_zoneIDsToDelete
T@"NSArray",&,V_savedRecordZones
T@"NSArray",&,V_deletedRecordZoneIDs
T@"NSArray",&,V_savedSubscriptions
T@"NSArray",&,V_deletedSubscriptionIDs
launchOperations
pendingOperations
setPendingOperations:
_onqueueCreatePendingObjects
initWithZoneID:subscriptionID:
inflightOperations
setInflightOperations:
createModifyZonesOperation:
createModifySubscriptionsOperation:
initWithRecordZonesToSave:recordZoneIDsToDelete:
inspectErrorForRetryAfter:
setNetworkFailure:
setModifyRecordZonesCompletionBlock:
networkFailure
initWithSubscriptionsToSave:subscriptionIDsToDelete:
setModifySubscriptionsCompletionBlock:
createZone:
deleteZone:
_networkFailure
_cloudkitRetryAfter
_pendingOperations
_inflightOperations
T@"CKKSZoneModifyOperations",&,V_pendingOperations
T@"CKKSZoneModifyOperations",&,V_inflightOperations
TB,V_networkFailure
T@"CKDatabase",R,V_database
T@"CKKSNearFutureScheduler",R,V_cloudkitRetryAfter
rpcAddCredential:withAccessPolicy:reply:
rpcFetchPasswordCredentialForPersistentIdentifier:reply:
rpcLookupCredentialsForServiceIdentifiers:reply:
rpcRemoveCredentialWithPersistentIdentifier:reply:
rpcReplaceOldCredential:withNewCredential:reply:
rpcReplaceCredential:withNewCredential:reply:
initWithKeychain:xpcConnection:
_keychain
accessibility
sharingPolicy
primaryServiceIdentifier
supplementaryServiceIdentifiers
username
localizedLabel
localizedDescription
customAttributes
_cachedPassword
_lookupKey
serviceID
keyclassForAccessPolicy:
passwordCredentialForItem:error:
passwordCredentialForItemMetadata:error:
setPassword:
_initWithUsername:primaryServiceIdentifier:supplementaryServiceIdentifiers:
_setCreationDate:
_setModificationDate:
setLocalizedLabel:
setLocalizedDescription:
_setPersistentIdentifier:
setCustomAttributes:
_clientAccessGroups
T@"NSArray",R,V_clientAccessGroups
URLForResource:withExtension:
triggerCloudServicesPasscodeRequest:serializedReason:error:
beginHSA2PasscodeRequest:uuid:reason:error:
cert
setDate:
counter
setCounter:
_counter
_date
T@"NSDate",&,V_date
TI,V_counter
dependantLaunches
launchOperation
events
firstLaunch
eventsRelativeTime
setLaunched:
reportMetric
mainQueue
sortUsingComparator:
addDependantLaunch:child:
setEvents:
setLaunchOperation:
setDependantLaunches:
_firstLaunch
_launched
_events
_launchOperation
_dependantLaunches
TB,V_launched
T@"NSMutableDictionary",&,V_events
T@"NSBlockOperation",&,V_launchOperation
T@"NSMutableDictionary",&,V_dependantLaunches
resetReason
setResetReason:
Tq,V_resetReason
fetchRequestWithEntityName:
T@"NSString",C,D,N
Ti,D,N
T@"NSSet",&,D,N
T@"NSData",&,D,N
T@"NSUUID",C,D,N
T@"SecCDKeychainManagedItemType",&,D,N
T@"SecCDKeychainManagedAccessControlEntity",&,D,N
items
itemTypeName
TB,D,N
performBackups
performRingUpdates
fullPeerInfo
peerInfo
factory
circle_transport
ensureOctagonPeerKeys:
initWithDictionary:
setGestalt:
initWithRetirees:fpi:circle:departureCode:peerExpansion:
setTrust:
setFactory:
setIsListeningForSync:
setAccountPrivateKey:
set_password_tmp:
setUser_private_timer:
setLock_notification_token:
setChange_blocks:
setKey_transport:
setCircle_transport:
setCk_storage:
setKvs_message_transport:
setCircle_rings_retirements_need_attention:
setEngine_peer_state_needs_repair:
setKey_interests_need_updating:
setNeed_backup_peers_created_after_backup_key_set:
setBackup_key:
setDeviceID:
setWaitForInitialSync_blocks:
setAccountKeyIsTrusted:
setAccountKeyDerivationParameters:
setAccountKey:
setPreviousAccountKey:
setPeerPublicKey:
setSaveBlock:
sosIsEnabled
ensureFactoryCircles
setAccountIsChanging:
setSosTestmode:
setConsolidateKeyInterest:
setupStateMachine
gestalt
trustedCircle
expansion
accountKeyIsTrusted
accountKey
syncWaitAndFlush:
account
kvs_message_transport
SOSTransportMessageGetEngine
triggerBackupForPeers:
triggerRingUpdate
sosEnable
setBool:forKey:
sosEnableValidityCheck
sosDisable
saveBlock
encodedData:
peerPublicKey
valueUnionWith:valuesToUnion:
valueSubtractFrom:valuesToSubtract:
initWithGestalt:factory:
user_private_timer
lock_notification_token
key_transport
setNotifyCircleChangeOnExit:
setNotifyViewChangeOnExit:
setNotifyBackupOnExit:
setOctagonSigningFullKeyRef:
setOctagonEncryptionFullKeyRef:
getCircleStatusOnly:
getCircleStatus:
retirees
cleanupAfterPeer:circleTransport:seconds:circle:cleanupPeer:err:
addiCloudIdentity:key:err:
change_blocks
purgeIdentity
setRetirees:
postRetirement:peer:err:
flushChanges:
kvssendDebugInfo:debug:err:
modifyCircle:err:action:
setDepartureCode:
departureCode
isInCircle:
ensureFullPeerAvailable:err:
getCircle:
accountPrivateKey
sosIsEnabledString
isInCircleOnly:
updateV2Dictionary:v2:
accessGroupToNextMessageToSend
SOSTransportMessageSendMessage:id:messageToSend:err:
accessGroupRateLimitState
accessGroupToTimer
urlForSOSAccountSettings
setAccountConfiguration:
setStateMachineQueue:
stateMachineQueue
addBackupFlag
setPerformBackups:
addRingUpdateFlag
setPerformRingUpdates:
accountConfiguration
pendingBackupPeers
ringUpdateFlag
setPendingBackupPeers:
consolidateKeyInterest
setRingUpdateFlag:
clearPendingBackupPeers
_onQueueRecordRetiredPeersInCircle
_onQueueEnsureInBackupRings:
performRingUpdate
performBackup
ghostBustGetRampSettings
userPublicKey:
kvsPerformanceCounters:
rateLimitingPerformanceCounters:
stashedCredentialPublicKey:
assertStashedAccountCredential:
validatedStashedAccountCredential:
stashAccountCredential:complete:
ghostBust:complete:
ghostBustPeriodic:complete:
ghostBustTriggerTimed:complete:
ghostBustInfo:
iCloudIdentityStatus_internal:
iCloudIdentityStatus:
accountStatus:
myPeerInfo:
circleHash:
circleJoiningBlob:complete:
joinCircleWithBlob:version:complete:
initialSyncCredentials:complete:
importInitialSyncCredentials:complete:
rpcTriggerSync:complete:
getWatchdogParameters:
setWatchdogParmeters:complete:
rpcTriggerBackup:complete:
rpcTriggerRingUpdate:
removeV0Peers:
sosIsEnabledCB:
hasPeerInfo
ensureOctagonPeerKeys
startStateMachine
ghostBustGetDate
ghostBustFollowup
ghostBustSchedule
ghostBustCheckDate
sosEvaluateIfNeeded
flattenToSaveBlock
previousAccountKey
backup_key
deviceID
_password_tmp
isListeningForSync
ck_storage
circle_rings_retirements_need_attention
engine_peer_state_needs_repair
key_interests_need_updating
need_backup_peers_created_after_backup_key_set
waitForInitialSync_blocks
accountKeyDerivationParameters
notifyCircleChangeOnExit
notifyViewChangeOnExit
notifyBackupOnExit
octagonSigningFullKeyRef
octagonEncryptionFullKeyRef
accountIsChanging
sosTestmode
_isListeningForSync
_circle_rings_retirements_need_attention
_engine_peer_state_needs_repair
_key_interests_need_updating
_need_backup_peers_created_after_backup_key_set
_accountKeyIsTrusted
_notifyCircleChangeOnExit
_notifyViewChangeOnExit
_notifyBackupOnExit
_accountIsChanging
_sosTestmode
_consolidateKeyInterest
_lock_notification_token
_accountKey
_accountPrivateKey
_previousAccountKey
_peerPublicKey
_gestalt
_backup_key
_deviceID
_trust
_user_private_timer
_factory
__password_tmp
_key_transport
_circle_transport
_kvs_message_transport
_ck_storage
_change_blocks
_waitForInitialSync_blocks
_accountKeyDerivationParameters
_saveBlock
_octagonSigningFullKeyRef
_octagonEncryptionFullKeyRef
_stateMachineQueue
_accountConfiguration
_performBackups
_performRingUpdates
T@"NSObject<OS_dispatch_queue>",&,V_stateMachineQueue
T@"CKKSPBFileStorage",&,V_accountConfiguration
T@"CKKSNearFutureScheduler",&,V_performBackups
T@"CKKSNearFutureScheduler",&,V_performRingUpdates
T@"NSDictionary",&,N,V_gestalt
T@"NSData",&,N,V_backup_key
T@"NSString",&,N,V_deviceID
T@"SOSAccountTrustClassic",&,N,V_trust
T@"NSObject<OS_dispatch_queue>",&,N,V_queue
T@"NSObject<OS_dispatch_source>",&,N,V_user_private_timer
T^{__SecKey={__CFRuntimeBase=QAQ}^{__SecKeyDescriptor}^v},N,V_accountPrivateKey
T^{SOSDataSourceFactory=^?^?^?},N,V_factory
T@"NSData",&,N,V__password_tmp
TB,N,V_isListeningForSync
Ti,N,V_lock_notification_token
T@"CKKeyParameter",&,N,V_key_transport
T@"SOSKVSCircleStorageTransport",&,N,V_circle_transport
T@"SOSMessageKVS",&,N,V_kvs_message_transport
T@"SOSCKCircleStorage",&,N,V_ck_storage
TB,N,V_circle_rings_retirements_need_attention
TB,N,V_engine_peer_state_needs_repair
TB,N,V_key_interests_need_updating
TB,N,V_need_backup_peers_created_after_backup_key_set
T@"NSMutableArray",&,N,V_change_blocks
T@"NSMutableDictionary",&,N,V_waitForInitialSync_blocks
T@"NSData",&,N,V_accountKeyDerivationParameters
TB,N,V_accountKeyIsTrusted
T^{__SecKey={__CFRuntimeBase=QAQ}^{__SecKeyDescriptor}^v},N,V_accountKey
T^{__SecKey={__CFRuntimeBase=QAQ}^{__SecKeyDescriptor}^v},N,V_previousAccountKey
T^{__SecKey={__CFRuntimeBase=QAQ}^{__SecKeyDescriptor}^v},N,V_peerPublicKey
T@?,C,V_saveBlock
T^{__OpaqueSOSPeerInfo=},R,N
T^{__OpaqueSOSFullPeerInfo=},R,N
T@"NSString",R,N
TB,N,V_notifyCircleChangeOnExit
TB,N,V_notifyViewChangeOnExit
TB,N,V_notifyBackupOnExit
T@"NSUserDefaults",&,N,V_settings
T^{__SecKey={__CFRuntimeBase=QAQ}^{__SecKeyDescriptor}^v},N,V_octagonSigningFullKeyRef
T^{__SecKey={__CFRuntimeBase=QAQ}^{__SecKeyDescriptor}^v},N,V_octagonEncryptionFullKeyRef
TB,N,V_accountIsChanging
TB,N,V_sosTestmode
TB,N,V_consolidateKeyInterest
kvsSendOfficialDSID:err:
resetCircleToOffering:userKey:err:
setFullPeerInfo:
getUUIDBytes:
copyRing:err:
copyPeerSetForView:
setTrustedCircle:
initWithInt:
SOSTransportKeyParameterPublishCloudParameters:data:err:
initWithAccount:
initWithAccount:andCircleName:
initWithAccount:andName:
SOSTransportMessageSendMessages:pm:err:
initWithArray:
requestSyncWithPeers:
SOSTransportMessageSyncWithPeers:p:err:
addPendingBackupPeers:
pendingBackupPeersCount
pendingBackupPeersAtIndex:
pendingBackupPeersType
setHasRingUpdateFlag:
hasRingUpdateFlag
_pendingBackupPeers
_ringUpdateFlag
T@"NSMutableArray",&,N,V_pendingBackupPeers
TB,N,V_ringUpdateFlag
generationSignatureUpdateWith:key:
expireRetirementRecords:err:
SOSTransportMessageCleanupAfterPeerMessages:peers:err:
cleanupRetirementTickets:circle:time:err:
accountFromDER:end:factory:error:
getDEREncodedSize:err:
encodeToDER:err:start:end:
setExpansion:
getRings:
handleUpdateRing:prospectiveRing:transport:userPublicKey:writeUpdate:err:
currentTrustBitmask
initialViews
setAccount:
updateSOSCircleCachedStatus
setInitialInCircle:
setInitialTrusted:
setInitialCirclePeerCount:
initialInCircle
setInitialUnsyncedViews:
setInitialKeyParameters:
setInitialViews:
setPeersToRequestSync:
quiet
finish
peersToRequestSync
initialID
initialUnsyncedViews
initialCirclePeerCount
initialKeyParameters
initialTrusted
initWithAccount:quiet:
restart
requestSyncWith:
setInitialID:
setQuiet:
_initialInCircle
_initialTrusted
_quiet
_initialCirclePeerCount
_account
_initialViews
_initialUnsyncedViews
_initialID
_initialKeyParameters
_peersToRequestSync
TB,V_initialInCircle
T@"NSSet",&,V_initialViews
T@"NSSet",&,V_initialUnsyncedViews
T@"NSString",&,V_initialID
TB,V_initialTrusted
T@"NSData",&,V_initialKeyParameters
TI,V_initialCirclePeerCount
TB,V_quiet
T@"NSMutableSet",&,V_peersToRequestSync
T@"SOSAccount",&,V_account
performTransaction:action:
performTransaction_Locked:action:
performTransaction_Locked:
updateCircleFromRemote:newCircle:err:
getDataSourceEngine:
updateFullPeerInfo:minimum:excluded:
updateViewSets:enabled:disabled:
ensureExpansion:
clearValueFromExpansion:err:
getValueFromExpansion:err:
setValueInExpansion:value:err:
setRings:
forEachRing:
resetRing:ringName:err:
resetAllRings:err:
checkForRings:
setRing:ringName:err:
kvsRingPostRing:ring:err:
addRingDictionary
valueSetContainsValue:value:
pendEnableViewSet:
resetAccountToEmpty:transport:err:
initWithSet:
viewStatus:name:err:
isSyncingV0
activeValidInCircle:err:
copySortedPeerArray:action:
hasCircle:
forEachCirclePeerExceptMe:
trustClassic
updateGestalt:newGestalt:
updateView:name:code:err:
matchOTUserViewSettings:userViewsEnabled:err:
addSyncablePeerBlock:dsName:change:
copyPeerWithID:err:
isAccountIdentity:err:
copyPeerSetMatching:
copyPeersToListenTo:err:
peerSignatureUpdate:err:
updatePeerInfo:description:err:update:
removeInvalidApplications:userPublic:
upgradeiCloudIdentity:privKey:
copyPreApprovedHSA2Info
addEscrowToPeerInfo:err:
syncWithPeers:peerIDs:err:
requestSyncWithAllPeers:key:err:
postDebugScope:scope:err:
copyDeviceKey:
removeIncompleteiCloudIdentities:privKey:err:
clientPing:
resetRingDictionary
getTransportType
getAccount
postCircle:circleData:err:
handleRetirementMessages:err:
handleCircleMessagesAndReturnHandledCopy:err:
onqueueFreeHashBuff
hasChanged:
currentHashBuf
isUseful
accountIsHSA2
initWithActiveMIDS:
activeMIDs:
midIsValidInList:
serialIsValidInList:
updateMIDInPeerInfo:
peerinfoHasMID:
midList
setMidList:
setMachineIDs:
serialNumbers
setSerialNumbers:
_midList
_machineIDs
_serialNumbers
T@"NSSet",&,N,V_midList
T@"NSSet",&,N,V_machineIDs
T@"NSSet",&,N,V_serialNumbers
SOSTransportKeyParameterGetAccount:
SOSTransportKeyParameterGetTransportType:err:
SOSTransportKeyParameterKVSAppendKeyInterests:ak:firstUnLock:unlocked:err:
kvsAppendKeyInterest:firstUnlock:unlocked:err:
kvsAppendRingKeyInterest:firstUnlock:unlocked:err:
kvsAppendDebugKeyInterest:firstUnlock:unlocked:err:
SOSTransportMessageGetAccount
SOSTransportMessageGetTransportType
SOSTransportMessageKVSAppendKeyInterest:ak:firstUnlock:unlocked:err:
SOSTransportKeyParameterHandleNewAccount:acct:
SOSTransportKeyParameterHandleKeyParameterChanges:data:err:
SOSTransportMessageHandlePeerMessageReturnsHandledCopy:peerMessages:err:
SOSTransportMessageGetCircleName
SOSTransportMessageFlushChanges:err:
getDate
followup
schedule
checkDate
initWithDefaults:dateDescription:earliest:latest:
defaults
setDefaults:
dateDescription
setDateDescription:
earliestDate
setEarliestDate:
latestDate
setLatestDate:
_defaults
_dateDescription
_earliestDate
_latestDate
T@"NSUserDefaults",&,N,V_defaults
T@"NSString",&,N,V_dateDescription
Td,N,V_earliestDate
Td,N,V_latestDate
thisDeviceStatusInCircle:peer:
checkForSponsorshipTrust:
hasLeft
iCloudCheckEventHandle:
fixICloudIdentities:circle:
handleUpdateCircle:transport:update:err:
updateCircle:newCircle:err:
iCloudCleanerHandle:
ensureCircle:name:err:
ghostBustingOK:updatingTo:
leaveCircleWithAccount:err:
leaveCircle:err:
resetToOffering:key:err:
joinCircle:userKey:useCloudPeer:err:
circleGetTypeID
T@"SOSAccount",&,N,Vaccount
setPending_changes:
setCircleName:
circleName
pending_changes
kvsSendPendingChanges:
kvsAddToPendingChanges:data:
getCircleName
kvsSendAccountChangedWithDSID:err:
kvsRingFlushChanges:
T@"NSMutableDictionary",&,N,Vpending_changes
T@"NSString",&,N,VcircleName
T@"SOSAccount",&,Vaccount
cachedOctagonEncryptionKey
setCachedOctagonEncryptionKey:
cachedOctagonSigningKey
setCachedOctagonSigningKey:
_cachedOctagonSigningKey
_cachedOctagonEncryptionKey
T@"NSMutableDictionary",&,N,Vexpansion
T^{__OpaqueSOSFullPeerInfo=},N,VfullPeerInfo
T^{__OpaqueSOSCircle=},N,VtrustedCircle
T@"NSMutableSet",&,N,Vretirees
Ti,N,VdepartureCode
T^{__SecKey={__CFRuntimeBase=QAQ}^{__SecKeyDescriptor}^v},V_cachedOctagonSigningKey
T^{__SecKey={__CFRuntimeBase=QAQ}^{__SecKeyDescriptor}^v},V_cachedOctagonEncryptionKey
SOSTransportMessageCalculateNextTimer:rtt:peerid:
SOSTransportMessageUpdateRTTs:
SOSTransportMessageUpdateLastMessageSentTimetstamp:peer:
SOSTransportMessageHandlePeerMessage:id:cm:err:
SOSTransportMessageSendMessageIfNeeded:circleName:pID:err:
T^v,Vengine
T@"NSString",&,VcircleName
stateForAccessGroup:
initWithAccessGroup:
initWithPeer:
setUpConfigForPeer
setAccessGroupRateLimitState:
setAccessGroupToTimer:
setAccessGroupToNextMessageToSend:
_accessGroupRateLimitState
_accessGroupToTimer
_accessGroupToNextMessageToSend
T@"NSString",&,VpeerID
T@"NSMutableDictionary",&,V_accessGroupRateLimitState
T@"NSMutableDictionary",&,V_accessGroupToTimer
T@"NSMutableDictionary",&,V_accessGroupToNextMessageToSend
initSOSConnectionWithConnection:account:
initSOSClientWithAccount:
internalSOSClient
checkEntitlement:
initWithDomain:code:userInfo:
SOSTransportMessageGetTransportType:err:
T^{__CFDictionary=},Vpending_changes
haveConfirmedOctagonKeys
randomPermanentFullECKey:name:error:
getMyFullPeerInfo
fullPeerInfoVerify:err:
hasFullPeerInfo:
CopyAccountIdentityPeerInfo
isMyPeerActive:
SecdWatchdog
SecOSTransactionHolder
SecuritydXPCProtocol
SecuritydXPCServer
LocalSecuritydXPCServer
NSObject
SecuritydXPCServerListener
NSXPCListenerDelegate
MockAKSRefKey
NSCopying
SecMockAKS
MockAKSRefKeyObject
MockAKSOptionalParameters
SecABC
compactDescription
SOSDictionaryFormat
FindAndRemove
Emptiness
HasElements
Stringizing
filledAndClipped
SecTapToRadar
KeychainItemUpgradeRequestServer
CuttlefishXPCWrapper
TrustedPeersHelperProtocol
OTModifyUserControllableViewStatusOperation
OctagonStateTransitionOperationProtocol
CKKSSerializedKey
OTAccountMetadataClassC
OTFetchCKKSKeysOperation
OTLocalResetOperation
UsefulConstructors
OTAccountMetadataClassCAccountSettings
CKKSSQLResult
4 0@
CKKSSQLDatabaseObject
CKKSSQLWhereColumn
CKKSSQLWhereValue
CKKSSQLWhereIn
CKKSRateLimiter
NSSecureCoding
NSCoding
EscrowRequestController
OctagonStateMachineEngine
OTDeviceInformationActualAdapter
OTDeviceInformationAdapter
SecAKSObjCWrappers
CKKSAccountStateTracker
CKKSCloudKitAccountStateTrackingProvider
CKKSOctagonStatusMemoizer
SOSAccountStatus
OTCliqueStatusWrapper
EscrowRequestServer
EscrowRequestXPCProtocol
SecEscrowRequestable
SecCDKeychainItemWrappedSecretData
SecAKSRefKey
SecCDKeychain
SecCDKeychainItemMetadata
SecCDKeychainItem
SecCDKeychainLookupTuple
SecCDKeychainItemType
SecCDKeychainAccessControlEntity
OctagonSelfPeer
CKKSSelfPeer
CKKSPeer
OctagonCKKSPeerAdapter
CKKSPeerProvider
OTCheckHealthOperation
CKKSPowerCollection
OTManager
OTControlProtocol
CKKSGroupOperation
CKKSManifestLeafRecord
CKKSManifestPendingLeafRecord
CKKSEgoManifestLeafRecord
CKKSItem
CKKSZoneExtras
CKKSTranslation
CKKSItemEncrypter
CKKSDeleteCKZoneOperation
OTTriggerEscrowUpdateOperation
OTDetermineCDPBitStatusOperation
CKKSOutgoingQueueEntry
CKKSIncomingQueueEntry
SecDbBackupMetadataClassKey
SFKeychainControl
SFKeychainControlManager
CKKSIncomingQueueOperation
CKKSOutgoingQueueOperation
OTVouchWithBottleOperation
OTJoinSOSAfterCKKSFetchOperation
CKKSTLKShare
SECC2MPGenericEventMetric
CKKSZoneStateEntry
EscrowRequestXPCServer
OTUpdateTrustedDeviceListOperation
SECC2MPGenericEventMetricValue
SecDbBackupBag
OTEnsureOctagonKeyConsistency
RateLimiter
CKKSCreateCKZoneOperation
OTSOSActualAdapter
OTSOSAdapter
OTSOSMissingAdapter
OTSOSAdapterHelpers
OTEstablishOperation
CKKSHealKeyHierarchyOperation
CKKSCurrentItemPointer
CKKSOperationDependencies
CKKSLocalSynchronizeOperation
CKKSReloadAllItemsOperation
OTPrepareOperation
KeychainSupport
SecDbBackupRecoverySet
CKKSCurrentKeyPointer
CKKSCurrentKeySet
OTSetCDPBitOperation
SECC2MPMetric
CKKSControlProtocol
CKKSControlServer
CKKSUpdateDeviceStateOperation
SecDbKeychainSerializedMetadata
CKKSNearFutureScheduler
CKKSMirrorEntry
OctagonFlags
OctagonFlagContainer
OctagonFlagSetter
OctagonFlagClearer
OTSetRecoveryKeyOperation
OTCreateCustodianRecoveryKeyOperation
OTCreateInheritanceKeyOperation
OTStoreInheritanceKeyOperation
CKKS
CKKSSelves
CKKSActualPeer
CKKSRemotePeerProtocol
CKKSSOSPeer
CKKSSOSPeerProtocol
CKKSSOSSelfPeer
SECC2MPGenericEvent
SecDbBackupKeyClassSigningKey
CKKSSynchronizeOperation
CKKSSecDbAdapter
CKKSDatabaseProviderProtocol
CKKSProvideKeySetOperation
CKKSKeySetProviderOperationProtocol
CKKSKeySetContainerProtocol
CKKSCKRecordHolder
EscrowRequestPerformEscrowEnrollOperation
CKKSScanLocalItemsOperation
OTJoinWithVoucherOperation
CKKSLocalResetOperation
CKKSCloudKitFetchRequest
CKKSCloudKitDeletion
CKKSFetchAllRecordZoneChangesOperation
OctagonStateTransitionPathStep
OctagonStateTransitionPath
OctagonStateTransitionWatcher
OctagonStateTransitionWatcherProtocol
OctagonStateMultiStateArrivalWatcher
CKKSNotifyPostNotifier
CKKSNotifier
OTResetCKKSZonesLackingTLKsOperation
OTRemoveCustodianRecoveryKeyOperation
OTUpdateTPHOperation
OTSOSUpdatePreapprovalsOperation
OTVouchWithRecoveryKeyOperation
SecDbBackupWrappedKey
SecDbBackupManager
OTCuttlefishContext
OTCuttlefishAccountStateHolderNotifier
OctagonCuttlefishUpdateReceiver
OTAuthKitAdapterNotifier
CKKSCloudKitAccountStateListener
CKKSPeerUpdateListener
OTDeviceInformationNameUpdateListener
OctagonPendingFlag
SECC2MPInternalTestConfig
OTPreflightVouchWithCustodianRecoveryKeyOperation
OTVouchWithCustodianRecoveryKeyOperation
OTPrepareAndRecoverTLKSharesForInheritancePeerOperation
SOSEnginePeerMessageCallBackInfo
CKKSKey
CKKSViewManager
OTFetchViewsOperation
SecDbKeychainAKSWrappedKey
SecDbKeychainMetadata
SecDbKeychainSecretData
SecDbKeychainItemV7
CKKSReachabilityTracker
OctagonStateMachine
OctagonStateFlagHandler
OctagonStateOnqueuePendingFlagHandler
CKKSListenerCollection
OTSOSUpgradeOperation
CKKSResultOperation
CKKSManifest
CKKSPendingManifest
CKKSEgoManifest
CKKSManifestInjectionPointHelper
CKKSAccountInfo
CKKSPeerProviderState
OTRamp
OTLeaveCliqueOperation
OTAuthKitActualAdapter
OTAuthKitAdapter
OctagonXPCEntitlementChecker
OctagonControlServer
OTPersonaActualAdapter
OTPersonaAdapter
OTUploadNewCKKSTLKsOperation
SecDbKeychainSerializedAKSWrappedKey
SecMetrics
NSURLSessionDelegate
CKKSUsefulPrintingOperation
CKKSUsefulConstructorOperation
CKKSAnalytics
SECC2MPError
OTTooManyPeersActualAdapter
OTTooManyPeersAdapter
EscrowAttemptTimeout
CKKSDeviceStateEntry
SECC2MPCloudKitOperationInfo
OTClientVoucherOperation
CKKSFixups
CKKSFixupRefetchAllCurrentItemPointers
CKKSFixupFetchAllTLKShares
CKKSFixupLocalReloadOperation
CKKSFixupResaveDeviceStateEntriesOperation
OTStates
OTRemovePeersOperation
CKKSCloudKitClassDependencies
SECC2MPCloudKitInfo
CKKSUpdateCurrentItemPointerOperation
CKKSNewTLKOperation
OTDetermineHSA2AccountStatusOperation
OctagonCheckTrustStateOperation
OTFollowup
Testing
CKKSMemoryKeyCache
CKKSLockStateTracker
CKKSActualLockStateProvider
CKKSLockStateProviderProtocol
SecC2DeviceInfo
SecDbKeychainSerializedSecretData
SecDbKeychainSerializedMetadataKey
CKKSKeychainView
CKKSChangeFetcherClient
OTEpochOperation
SecDbKeychainSerializedItemV7
CKKSPBFileStorage
CKKSProcessReceivedKeysOperation
CKKSTLKShareRecord
CKKSKeychainViewState
CKKSHealTLKSharesOperation
OctagonStateTransitionOperation
OctagonStateTransitionGroupOperation
OctagonStateTransitionRequest
Octagon
CKKSReencryptOutgoingItemsOperation
SecBackupKeybagEntry
SECC2MPNetworkEvent
OTDeviceInformation
CKKSPushTracing
OctagonAPSReceiver
APSConnectionDelegate
ExternalClientHandling
CKKSKeychainBackedKey
CKKSKeychainBackedKeySet
SecDbBackupBagIdentity
TrustedPeersHelperPeerState
TrustedPeersHelperEgoPeerStatus
TrustedPeersHelperPeer
TrustedPeersHelperCustodianRecoveryKey
TrustedPeersHelperTLKRecoveryResult
OTClientStateMachine
CKKSBaseAESSIVKey
CKKSWrappedAESSIVKey
CKKSAESSIVKey
SECC2MPDeviceInfo
OTWaitOnPriorityViews
SECC2MPCloudKitOperationGroupInfo
CKKSZoneChangeFetchDependencyOperation
CKKSZoneChangeFetcher
CKKSZoneUpdateReceiverProtocol
KeychainItemUpgradeRequestController
SecDbKeychainMetadataKeyStore
CKKSCondition
SecEventMetric
TrustedPeersHelperIntendedTPPBSecureElementIdentity
OTPreloadOctagonKeysOperation
SecEscrowPendingRecord
OTCuttlefishAccountStateHolder
OTOperationDependencies
SECC2MPServerInfo
CKKSZoneModifyOperations
CKKSZoneModifier
SecCDKeychainItemTypeCredential
SFKeychainServerProtocol
SFKeychainServer
SFKeychainServerConnection
OTLocalCKKSResetOperation
EscrowRequestInformCloudServicesOperation
CKKSLaunchEvent
CKKSLaunchSequence
OTResetOperation
SecCDKeychainManagedAccessControlEntity
CoreDataProperties
SecCDKeychainManagedItem
SecCDKeychainManagedItemType
SecCDKeychainManagedLookupEntry
SOSAccount
SOSControlProtocol
SOSAccountConfiguration
Retirement
Persistence
SOSAccountTransaction
Transaction
Expansion
SOSAccountTrustClassic
SOSCKCircleStorage
SOSDictionaryUpdate
SOSTrustedDeviceAttributes
SOSAuthKitHelpers
SOSIntervalEvent
Circle
SOSCircleStorageTransport
SOSKVSCircleStorageTransport
CKKeyParameter
SOSAccountTrust
SOSMessage
PeerRateLimiter
KeychainItem
SOSControlServer
SOSClient
SOSClientRemote
SOSMessageKVS
Identity
Keychain initialized!
Couldn't bring up keychain: %@
SecWatchdog: watchdog has detected securityd/secd is using too much CPU - attempting to exit gracefully
SecWatchdog: watchdog has failed to exit securityd/secd gracefully - exiting ungracefully
securityd have written more then %llu
resetting watchdog monitoring interval ahead another 24 hours
SIGSTOPing self, awaiting debugger
Again, for good luck (or bad debuggers)
SIGTERM, exiting when clean 
security failed to register xpc listener for %s, exiting
XPC [%@] operation: %@ (%llu)
Authentication is needed %@ %@ %@
%@ %@ %@
%@: returning error: %@
failed to open /dev/random (%d)
failed to create refkey (%d)
invalid pub key (%zu)
failed to write /dev/random (%d)
Ignoring "%@" because client is API-restricted
Keychain access group com.apple.token ignored, feature not available
securityd client(%p): persona user %@
securityd client(%p): persona uuid %@
securityd client: app clip (API restricted)
serverxpc: Client task is null, cannot verify platformness
serverxpc: client is not a platform binary: 0x%08x
serverxpc: client has no codesign identifier
client %@ is eligible platform binary
serverxpc: client %@ is not eligible
Client %@ is valid platform binary
SecItemSetCurrentItemAcrossAllDevices: CKKSViewManager not initialized?
SecItemSetCurrentItemAcrossAllDevices: no view manager?
SecItemFetchCurrentItemAcrossAllDevices: CKKSViewManager not initialized?
CKKS didn't find a current item for (%@,%@): %@ %@
CKKS believes current item UUID for (%@,%@) is %@. Looking up persistent ref...
Found current item for (%@: %@)
ckkscurrent: No current item for (%@,%@): %@ %@
Performing keychain database checkpoint
item: keychain database checkpoint failed: %@
Keychain database checkpoint succeeded
unable to access hwaes key
Key Diversification is %s (via feature flags)
der: unable to encode date: %@
der: invalid date: %@; %s
Could not set up sqlite global error logging to syslog: %d
SecDb: SecDbCreate failed to create attributes for the write mutex; fairness properties are no longer present
SecDb: SecDbCreate failed to init the write mutex, this will end badly
SecDB: running from installer
SecDBCorrupt: %@
incremental_vacuum failed with: (%d) %{public}s
#SecDB nested transaction asked to not be committed
SecDbConnectionRelease called with NULL dbconn
SecDbConnectionRelease: IO failure reported in connection, throwing away currently idle caches
dbconn: did not expect to run out of room in the %s cache when releasing connection
SecDbForEach: SecDbConnection is readonly but we're about to write: %s
db %@ changed outside txn
_SecDbStep: SecDbConnection is readonly but we're about to write: %s
SecDbConnectionCheckCode detected corruption twice: going to handle corrupt DB
operation returned code: %d integrity check=fail
operation returned code: %d: integrity check=pass
SecDBCheckCorrupted integrity_check returned %s
#SecDB warning error %{public}@ when running integrity check
#SecDB warning: failed to run integrity check due to corruption
SecDBCheckCorrupted ran integrity_check, and that didn't return ok
SecDBCheckCorrupted failed to run integrity check
Unable to create database: %@
#SecDB starting maintenance
opened block failed: %@
opened block failed: error (%@) is being released and lost
#SecDB ending maintenance
SecDbSecDbProcessCorruptionMarker: Unable to check for corruption marker: %{darwin.errno}d
SecDbSecDbProcessCorruptionMarker: found corruption marker %s
SecDbSecDbProcessCorruptionMarker: Unable (%{darwin.errno}d) to delete corruption marker
SecDbSecDbProcessCorruptionMarker: Unable (%{darwin.errno}d) to delete db %{public}s
SecDbSecDbProcessCorruptionMarker: deleted corrupt db %{public}s
sqlDb: sql trace mask: 0x%08x
SecDbHandleCorrupt: Tried to write corruption marker %s but one already exists
SecDbHandleCorrupt: Unable (%{darwin.errno}d) to create corruption marker %{public}s
SecDbHandleCorrupt: killing self so that successor might cleanly delete corrupt db
sqlite busy/locked: %d ntries: %d totaltimeout: %d
sqlite busy/locked: too long: %d ms, giving up
failed to close database connection (%d) for %@: %s
Simulating crash, reason: %@, code=%08x
stackshot report, reason: %@, code=%08x
Triggering TTR: %@
Not showing ttr due to ratelimiting: %@
retrying cuttlefish XPC, (%d, %@)
octagon: Can't talk with TrustedPeersHelper: %@
Setting user-controllable views to %@
octagon-ckks: setting user-controllable views status errored: %@
Updating user-controllable view status failed because of lock state, will retry once unlocked: %@
Updating user-controllable view status failed because our self peer is excluded or missing
Received syncing policy %@ with view list: %@
octagon: failed to save policy+views: %@
OTSetupControlProtocol failed, continuing, but you might crash later: %@
Waiting for %@
No keys for %@: %@
Skipping keys: %@
Have proposed keys: %@
Unable to convert proposed keys: %@ %@
Have %u pending tlk shares
Fetched %d key sets, %d broken key sets, %d pendingTLKShares, and %d views timing out
Resetting local cuttlefish
Unable to reset local cuttlefish for (%@,%@): %@
Successfully reset local cuttlefish
Error resetting local account state: %@
Successfully reset local account state
error performing database transaction, major problems ahead: %@
error performing database operation, major problems ahead: %@
RateLimiter overloaded until %@
waiting for unlock before continuing with state machine
failed to fetch records from keychain, nothing to do: %@
Request %@ needs to cache a certificate, but that has been attempted recently. Holding off...
Request %@ needs a cached certififcate
Request %@ needs to be stored, but has been attempted recently. Holding off...
Request %@ needs to be stored!
failed to fetch records from keychain: %@
Investigating a new escrow request
Move requested to federation %@
Retriggering an existing escrow request: %@
escrowrequest: Unable to save modified request to keychain: %@
Retriggering an existing escrow request complete
Creating a new escrow request
beginning a new escrow request (%@)
escrowrequest: unable to save escrow update request: %@
Uploaded %d records with error %@
failed getting serial number: %d
Notified that the device name has changed
Registering with notification center %@
Retrying CK account state fetch
adding a new listener: %@
notifying new listener %@ of current state %@
error getting account info: %@
received CK Account info: %@
Received fetchCurrentDeviceIDWithCompletionHandler callback with null AccountStateTracker
CloudKit deviceID is: %@ %@
Logged back out but still received a fetchCurrentDeviceIDWithCompletionHandler callback
moving to circle status: %@
Received fetchCirclePeerID callback with null AccountStateTracker
Circle peerID is: %@ %@
Out of circle but still received a fetchCirclePeerID callback
out of circle(%@): resetting peer ID
Unable to get dispatch group.
received another notification of CK Account State %@
moving to CK Account info: %@
Starting blocking for listener %@
Done blocking for listener %@
error getting circle status: %@
error getting octagon status: %@
Caching octagon status as (%@, %@)
failed to fetch escrow statuses: %@
escrowrequest: unable to load uuid %@: %@
escrowrequest: unable to save new prerecord for uuid %@: %@
saved new prerecord for uuid %@
escrowrequest: unable to load prerecord with uuid %@: %@
escrowrequest: prerecord for uuid %@ already uploaded
fetched prerecord for uuid %@
escrowrequest: no prerecord for uuid %@: %@
Escrow request %@ doesn't yet have a certificate cached
Escrow request %@ already has a prerecord; no passcode needed
Escrow request %@ is pending a passcode
No escrow requests need a passcode
Triggering an escrow update request due to '%@'
no extant requests
escrowrequest: failed to load requests: %@
found requests: %@
deleting all requests
no extant requests; nothing to delete
error fetching records: %@
Unable to delete %@: %@
attempting to store a prerecord in escrow
SecCDKeychain: failed to deserialize wrapped secret data
SecCDKeychain: error creating AES key from unwrapped item key data with error: %@
SecCDKeychain: no persistent store URL, so we can't create or open a database
SecCDKeychain: no managed object model URL, so we can't create or open a database
SecCDKeychain: failed to create random key for CD database encryption - this means we won't be able to create a database
SecCDKeychain: failed to save encryption key to keychain, so bailing on database creation; status: %d
SecCDKeychain: can't create a class A store right now because the keychain is locked
failed to save or retrieve key for CD database encryption - this means we won't be able to create a database; status: %d
SecCDKeychain: failed to remove persistent store with error: %@
SecCDKeychain: failed to validate item owner with error: %@
SecCDKeychain: attempt to insert items into deallocated keychain instance
SecCDKeychain: insertItems: could not get managed object context
SecCDKeychain: failed to unique item (%@) using primary keys: %@
SecCDKeychain: error creating primary key string representation for item: %@; error: %@
SecCDKeychain: error creating managed item for insertion: %@; item: %@
SecCDKeychain: error fetching lookup entry during item insertion: %@
saving managed object context for items: %@
SecCDKeychain: saving managed object context failed with error: %@
saving managed object context succeeded
SecCDKeychain: attempt to fetch item from deallocated keychain instance
SecCDKeychain: fetchItemForPersistentID: could not get managed object context
SecCDKeychain: error fetching item for persistent id: %@; error: %@
SecCDKeychain: failed to create SecCDKeychainItem from managed item with error: %@
SecCDKeychain: fetchItemsWithValue: could not get managed object context
SecCDKeychain: error fetching lookup entry during item lookup: %@
SecCDKeychain: failed to create SecCDKeychainItemMetadata from managed item with error: %@
SecCDKeychain: attempt to fetch items from deallocated keychain instance
SecCDKeychain: deleteItemWithPersistentID: could not get managed object context
SecCDKeychain: attempt to delete item with persistant identifier that could not be found: %@
SecCDKeychain: error registering managedItemType for for itemType: %@
SecCDKeychain: _registerItemTypeForTesting: could not get managed object context
SecCDKeychain: failed to create random key for encrypting item with error: %@
SecCDKeychain: failed to serialize item secrets dictionary with error: %@
SecCDKeychain: failed to encrypt item secret data with error: %@
SecCDKeychain: failed to create refKey
SecCDKeychain: failed to encrypt item
SecCDKeychain: failed to serialize item secret data blob with error: %@
SecCDKeychain: failed to deserialize item wrapped secret data
SecCDKeychain: failed to create refKey for unwrapping item secrets
SecCDKeychain: failed to create item key for decryption
SecCDKeychain: failed to decrypt item secret data
SecCDKeychain: failed to deserialize item decrypted secret data
Unable to fetch identity '%@' from keychain: %@
No peer ID; therefore no identity
Unable to fetch trusted peers for (%@,%@): %@
Beginning cuttlefish health checkup
running rate limiting checks!
last health check timestamp: %@
Not rate-limiting: last updated %@ vs %@
Last update is within 3 days (%@); rate-limiting this operation
rate limited! %@
device is locked, not performing cuttlefish check
octagon-health: failed to persist last health check value:%@
NOT running rate limiting checks!
octagon-health: error: %@
cuttlefish came back with these suggestions: post repair? %d, post escrow? %d, reset octagon? %d, leave trust? %d, move record? %d
Resetting Octagon as per Cuttlefish request
Leaving clique as per Cuttlefish request
otmanager init
Initializing Octagon...
starting default state machine...
circle changed notification called, checking trust state
Octagon: CloudKit.framework appears to not be linked. Cannot create an Octagon manager (on pain of crash).
Rejecting client RPC for non-primary persona
Rejecting a signin RPC for container (%@) and context (%@): %@
signing in %@ for altDSID: %@
Rejecting a signout RPC for container (%@) and context (%@): %@
signing out of octagon trust: %@
signing out failed: %@
Rejecting a IDMS trust level change RPC for container (%@) and context (%@): %@
received a notification of IDMS trust level change in %@
handleIdentityChangeForSigningKey: %@
preflightBottledPeer: %@ %@
launchBottledPeer
restore
fetching context for key: %@
removed client context with key: %@
Rejecting a fetchEgoPeerID RPC for container (%@) and context (%@): %@
Received a fetch peer ID for container (%@) and context (%@)
Rejecting a fetchTrustStatus RPC for container (%@) and context (%@): %@
Received a trust status for container (%@) and context (%@)
Rejecting a fetchCliqueStatus RPC for container (%@) and context (%@): %@
Rejecting a status RPC for container (%@) and context (%@): %@
Received a status RPC for container (%@) and context (%@)
Rejecting a startOctagonStateMachine RPC for container (%@) and context (%@): %@
Received a start-state-machine RPC for container (%@) and context (%@)
Rejecting a resetAndEstablish RPC for container (%@) and context (%@): %@
Rejecting a establish RPC for container (%@) and context (%@): %@
Rejecting a leaveClique RPC for container (%@) and context (%@): %@
Rejecting a removeFriendsInClique RPC for container (%@) and context (%@): %@
Rejecting a peerDeviceNamesByPeerID RPC for container (%@) and context (%@): %@
Rejecting a fetchAllViableBottles RPC for container (%@) and context (%@): %@
Rejecting a rpcPrepareIdentityAsApplicant RPC for container (%@) and context (%@): %@
Rejecting a rpcEpoch RPC for container (%@) and context (%@): %@
Rejecting a rpcVoucher RPC for container (%@) and context (%@): %@
Rejecting a restore RPC for container (%@) and context (%@): %@
restore via bottle invoked for container: %@, context: %@
Reporting analytics for container: %@, context: %@
Error fetching SOS status: %@
Error fetching Octagon metadata: %@
Error fetching machine ID: %@
Error fetching 'mid on list': %@
Number of peers with machineID (%@): %@
MID match (current vs Octagon peer): %@, %@, %@
Peers: %zu, viable peers %zu
Error fetching how many peers have our MID: %@
Error fetching pendingEscrowUpload status: %@
Error fetching escrowRequestClass: %@
Rejecting a createRecoveryKey RPC for container (%@) and context (%@): %@
Setting recovery key for container: %@, context: %@
Device does not participate in SOS; cannot enroll recovery key in Octagon
recovery failed validation with error:%@
Rejecting a joinWithRecoveryKey RPC for container (%@) and context (%@): %@
join with recovery key invoked for container: %@, context: %@
octagon: recovery key is not enrolled in octagon, and current device can't set recovery keys
octagon, recovery key is not enrolled in octagon, resetting octagon circle
octagon, failed to reset octagon
attempting enrolling recovery key
octagon, failed to enroll new recovery key: %@
successfully enrolled recovery key
octagon, join with recovery key failed: %@
join with recovery key succeeded
Rejecting a createCustodianRecoveryKey RPC for container (%@) and context (%@): %@
Creating Custodian Recovery Key for container: %@, context: %@
Rejecting a joinWithCustodianRecoveryKey RPC for container (%@) and context (%@): %@
join with custodian recovery key %@ invoked for container: %@, context: %@
octagon, join with custodian recovery key failed: %@
join with custodian recovery key succeeded
preflight join with custodian recovery key %@ invoked for container: %@, context: %@
octagon, preflight join with custodian recovery key failed: %@
preflight join with custodian recovery key succeeded
Rejecting a removeCustodianRecoveryKey RPC for container (%@) and context (%@): %@
Remove Custodian Recovery Key %@ for container: %@, context: %@
Device does not participate in SOS; cannot remove recovery key in Octagon
Rejecting a createInheritanceKey RPC for container (%@) and context (%@): %@
Creating Inheritance Key for container: %@, context: %@
Rejecting a generateInheritanceKey RPC for container (%@) and context (%@): %@
Generating Inheritance Key for container: %@, context: %@
Rejecting a storeInheritanceKey RPC for container (%@) and context (%@): %@
Storing Inheritance Key for container: %@, context: %@
Rejecting a joinWithInheritanceKey RPC for container (%@) and context (%@): %@
join with inheritance key %@ invoked for container: %@, context: %@
octagon, join with inheritance key failed: %@
join with inheritance key succeeded
preflight join with inheritance key %@ invoked for container: %@, context: %@
octagon, preflight join with inheritance key failed: %@
preflight join with inheritance key succeeded
Rejecting a removeInheritanceKey RPC for container (%@) and context (%@): %@
Remove Inheritance Key %@ for container: %@, context: %@
Device does not participate in SOS; cannot remove inheritance key in Octagon
Received 24hr xpc notification
octagon: error attempting to check octagon health: %@
health check success
Rejecting a healthCheck RPC for container (%@) and context (%@): %@
notifying container of change
Rejecting a waitForOctagonUpgrade RPC for container (%@) and context (%@): %@
Attempting wait for octagon upgrade
Rejecting a waitForPriorityViewKeychainDataRecovery RPC for container (%@) and context (%@): %@
Attempting wait for priority view processing
Rejecting a refetchCKKSPolicy RPC for container (%@) and context (%@): %@
refetch-ckks-policy
refetch-ckks-policy result: %@
Rejecting a getCDPStatus RPC for container (%@) and context (%@): %@
get-cdp-status
Rejecting a setCDPEnabled RPC for container (%@) and context (%@): %@
set-cdp-enabled
Rejecting a fetchEscrowRecords RPC for container (%@) and context (%@): %@
fetching records
octagon-fetch-escrow-records: error fetching records: %@
successfully fetched records
Rejecting a invalidateEscrowCache RPC for container (%@) and context (%@): %@
beginning removing escrow cache!
octagon-remove-escrow-cache: error invalidating escrow cache: %@
successfully invalidated escrow cache
Rejecting a setUserControllableViewsSyncStatus RPC for container (%@) and context (%@): %@
octagon-user-controllable-views: error setting status: %@
successfully set status to: %@
Rejecting a fetchUserControllableViewsSyncStatus RPC for container (%@) and context (%@): %@
octagon-user-controllable-views: error fetching status: %@
successfully fetched status as: %@
Rejecting a resetAccountCDPContents RPC for container (%@) and context (%@): %@
octagon-reset-account-cdp-contents: error resetting account cdp contents: %@
successfully reset account cdp contents
Rejecting a setLocalSecureElementIdentity RPC for container (%@) and context (%@): %@
Rejecting a removeLocalSecureElementIdentityPeerID RPC for container (%@) and context (%@): %@
Rejecting a fetchTrustedSecureElementIdentities RPC for container (%@) and context (%@): %@
Rejecting a fetchAccountSettings RPC for container (%@) and context (%@): %@
Rejecting a fetchAccountWideSettings RPC for container (%@) and context (%@): %@
Rejecting a persistAccountSettings RPC for container (%@) and context (%@): %@
Rejecting a tlkRecoverabilityForEscrowRecordData RPC for container (%@) and context (%@): %@
received callback for released object
Not running due to some failed dependent: %@
Can't add operation dependency to cancelled group
failed to decode manifest leaf node DER with error: %@
uuid contains delimiter: %@
CKKSManifestLeafRecord: saving manifest leaf record to database but %@ is nil
Failed to save fetched manifest leaf record to database: %@: %@
manifest leaf CKRecord was %@
Corrupt item recieved with no wrapped key
UUID does not match
wrapping key reference does not match
SecCKRecordGenerationCountKey does not match
SecCKRecordWrappedKeyKey does not match
SecCKRecordDataKey does not match
SecCKRecordPCSServiceIdentifier does not match
SecCKRecordPCSPublicKey does not match
SecCKRecordPCSPublicIdentity does not match
error loading a CKKSMirrorEntry from database: %@
BUG: No local item matching resynced CloudKit record: %@
BUG: Local item doesn't match resynced CloudKit record: %@ %@
Already know about this item record, updating anyway: %@
received a record from CloudKit with a bad generation count: %@ (%ld > %@)
CloudKit has told us of record we already know about for %@; skipping update
couldn't save new CKRecord to database: %@ %@
CKKSMirrorEntry was created: %@
Couldn't load possible existing incoming queue entry: %@
Deleting existing CKKSIncomingQueueEntry: %@
Couldn't delete existing incoming queue entry: %@
Couldn't save modified incoming queue entry: %@
CKKSIncomingQueueEntry was created: %@
Couldn't load OQE sibling for %@: %@
Couldn't delete OQE sibling(%@) for %@: %@
CloudKit notification: deleted record(%@): %@
Couldn't save incoming queue entry: %@
CKKSMirrorEntry was deleted: %@ %@
CKKS padding function received invalid blocksize 0, using 1 instead
Couldn't decrypt old CKMirror entry: %@
ckks: couldn't decrypt item %@
decryptItemToDictionary failed: %@
No zones to delete
Deleting CloudKit zones: %@
Attempted to delete zone %@, but it's already missing. This is okay: %@
deletion of record zone %@ completed with error: %@
deletion of record zone %@ completed successfully
couldn't save zone creation status for %@: %@
Triggering escrow update
Unable to acquire a EscrowRequest object: %@
Unable to request silent escrow update: %@
Requested silent escrow update
Checking CDP status
Device is locked! restarting on unlock
CDP is %@
Unable to talk with TPH; leaving CDP status as 'unknown': %@
Octagon reports %d peers
Requesting SOS status...
Error fetching circle status. Leaving CDP status as 'unknown': %@
SOS reports circle absent. Setting CDP to 'disabled'
SOS reports some existing circle (%d). Setting CDP to 'enabled'
No SOS. CDP bit is off.
CDP bit is enabled on-disk, not modifying (would have been %@)
Writing CDP bit as %@
Failed to load account metadata: %@
Cannot select a key for no item!
can't pick key class: %@ %@
Couldn't find current key for %@: %@
Couldn't load key(%@): %@
Creating a (%@) outgoing queue entry for: %@
no key for item: %@ %@
no plist: %@ %@
No UUID for item: %@ %@
couldn't fetch UUID: %@ %@
couldn't fetch access group from item: %@ %@
couldn't fetch accessgroup: %@
Unable to fetch an existing OQE due to error: %@
Unable to fetch an existing OQE (any state) due to error: %@
Asked to delete a record for which we don't have a CKME or any OQE, ignoring: %@
Unable to decrypt current CKME: %@
Update to item only changes mdat; skipping %@
couldn't create an item: %@ %@
couldn't encrypt item: %@ %@
Couldn't delete %@: %@
Couldn't fetch an overwriting OQE, assuming one doesn't exist: %@
New modification has come in behind inflight %@; dropping failed change
Couldn't delete in-flight OQE: %@
Couldn't save %@ as %@: %@
Couldn't delete %@ (due to error %@): %@
Unable to find IQE parent keys: %@
Unable to find key %@: %@
Some item is encrypted under a non-existent key(%@).
SFKeychainControl: Client pid (%d) doesn't have entitlement: %@
Saving new current item pointer: %@
Error saving new current item pointer: %@ %@
ready to process an incoming queue entry: %@ %@ %@
Keychain is locked; can't decrypt IQE %@
Coudn't find key in keychain; will attempt to poke key hierarchy: %@
Couldn't decrypt IQE %@ for some reason: %@
Couldn't save IQE %@ as error for some reason: %@
Synced item seems wrong: %@
unknown class in object: %@ %@
Couldn't save errored IQE to database: %@
Received an item (%@), but our current policy claims it should be in view %@
Couldn't save mismatched IQE to database: %@
Received an item (%@), which should be in view %@
Unable to create SecDbItemRef from IQE: %@
Wrote a keychain item that is actually for %@; requesting scan
Unable to load CKKSMirrorEntry from database* %@
Other view (%@) already knows about this item, dropping incoming queue entry: %@
Unable to delete IQE: %@
Going to process the incoming queues for %@
Will handle mismatched view items along the way
Early-exiting from IncomingQueueOperation (after processing deletes): %@
Early-exiting from IncomingQueueOperation (after processing all incoming entries): %@
Processed %lu items in incoming queue (%lu errors)
Early-exiting from IncomingQueueOperation due to failure fixing mismatched items
Could not load remote item pointers: %@
Processed %lu items in CIP queue
Requesting scan for %@
CKKSIncomingQueueOperation cancelled, quitting
Error fetching incoming queue records: %@
Nothing in incoming queue to process (filter: %@)
Early-exiting from IncomingQueueOperation
Handling policy-mismatched items
Cannot fetch mismatched view items
No mismatched view items
Inspecting %lu mismatched items
processQueueEntries didn't complete successfully
set a new persistentref UUID for item %@: %@
Unable to make SecDbItemRef out of attributes: %@
Rejecting a tombstone item addition from CKKS(%@): %@
Rejecting a multiuser item addition from CKKS(%@): %@
Unable to save new deletion OQE: %@
Replacing item (it doesn't have a UUID) for %@
Primary key conflict; dropping CK item (arriving from wrong view) %@
Unable to fetch ckme: %@
Primary key conflict; dropping CK item %@
Primary key conflict; replacing %@%@ with CK item %@
error setting uuid persistent ref: %@
couldn't process item from IncomingQueue: %@
Couldn't handle IQE, but why?: %@
Correctly processed an IQE; deleting
couldn't delete CKKSIncomingQueueEntry: %@
IQE not correctly processed, but why? %@ %@
trying to delete with query: %@
couldn't create query: %@
couldn't delete item (as it's already gone); this is okay: %@
couldn't delete item: %@
couldn't delete query: %@
Unable to fetch priority uuid %@: %@
Priority uuid %@ is not in 'new': %@
Found OQE  to fetch priority uuid %@: %@
Item syncing for this view is disabled
Error fetching outgoing queue records: %@
processing outgoing queue: %@
Couldn't load current class keys: %@
Item's encryption key (%@ %@) is neither %@ or %@
update to a record that doesn't exist? %@
couldn't save state for CKKSOutgoingQueueEntry: %@
Record (%@)'s change tag doesn't match ckmirror's change tag, reencrypting
couldn't save oqe to database: %@
An item needs reencryption!
Nothing in outgoing queue to process
End of operation group: %@
Current keys to update: %@
Can't make current device state: %@
Can't make current device state cloudkit record, but no reason why
Updating device state: %@
Saving records %@ to CloudKit zone %@
QoS: %d; operation group is %@
Beginning upload for %d records, deleting %d records
Record to save: %@
Record to delete: %@
Record upload successful for %@ (%@)
error on row: %@ %@
error processing outgoing queue: %@
Error is simply due to current key pointers changing; marking all records as 'needs reencrypt'
Error is due to the key records missing. Marking all as 'needs reencrypt'
failed record: %@ %@
Couldn't clean up outgoing queue entry: %@
Unknown error on row: %@ %@
Error is scary: putting all inflight OQEs back into state 'new'
Record deletion successful for %@
Completed processing outgoing queue (%d modifications, %d deletions)
Couldn't update %@ in outgoingqueue: %@
Couldn't save %@ to ckmirror: %@
Couldn't save %@ to currentkey: %@
Couldn't save %@ to ckdevicestate: %@
unknown record type in results: %@
Couldn't delete %@ from outgoingqueue: %@
Couldn't delete %@ from ckmirror: %@
Operation failed; rolling back: %@
Couldn't set OQE %@ as error: %@
Couldn't set OQE %@ as %@: %@
Error is a 'missing record' error: %@
creating voucher using a bottle with escrow record id: %@
using passed in altdsid, altdsid is: %@
fetched altdsid is: %@
authkit doesn't know about the altdsid, using stored value: %@
retrieved account, altdsid is: %@
failed to retrieve account object: %@
octagon: Error preflighting voucher using bottle: %@
Bottle %@ is for peerID %@
octagon: Error fetching TLKShares to recover: %@
octagon: Error preparing voucher using bottle: %@
Saving voucher for later use...
unable to save voucher: %@
Successfully vouched with a bottle: %@, %@
SOS not enabled on this platform?
joining SOS
Error fetching circle status: %d, error:%@
SOSCCResetToOffering complete: %d %@
no signing key for peer: %@
signature didn't verify for %@ %@: %@
couldn't share %@ (wrap failed): %@
couldn't share %@ (signing failed): %@
error fetching CKState(%@): %@
escrow-update: Client pid: %d doesn't have entitlement: %@
received connection from client pid %d (euid %u)
Attempting to update trusted device list
octagon-authkit: Received an error updating the trusted device list operation, but no retry flag present.
Setting the allowed device list failed due to lock state: %@
Error is currently unknown, will not retry: %@
Machine ID list error is not fatal: requesting retry: %@
octagon-authkit: failed to fetch demo account flag: %@
octagon-authkit: Unable to fetch machine ID list: %@
octagon-authkit: empty machine id list
Unable to save machineID allow-list: %@
Successfully saved machineID allow-list (%@ change)
Beginning ensuring Octagon keys are set properly in SOS
Failed to get the current SOS self: %@
Fetched SOS Self! Fetching Octagon Adapter now.
failed to get peer id: %@
Fetched SOS Self! Fetching Octagon Adapter now: %@
failed to retrieve self peers: %@
failed to retrieve current self
SOS and Octagon signing keys do NOT match! updating SOS
SOS and Octagon keys match!
Rate limiting disabled, returning automatic all-clear
RateLimiter[%@]: Got nil instead of property named %@
RateLimiter[%@] state size %lu exceeds max %lu, overloaded until %@
RateLimter[%@]: "%@" is not an approved selector string
Zone is already created and subscribed
Asking to create and subscribe to CloudKit zones: %@
Successfully created '%@'
Failed to create '%@'
zone subscription error appears to say that the zone subscription exists; this is okay!
Successfully subscribed '%@'
Failed to subscribe to '%@'
Zone setup progress: created:%d %@ subscribed:%d %@
zone subscription error appears to say the zone doesn't exist, fixing status: %@
Received a notification that the SOS Octagon peer set changed
octagon-sos: Not in circle : %@ %@
octagon-sos: Error fetching self peer : %@
octagon-sos: Error fetching self encryption keys: %@
octagon-sos: Error fetching trusted peers: %@
octagon-sos: error fetching octagon keys for peer: %@ %@
Peer(%@) doesn't have Octagon keys, but this is expected: %@
no octagon keys available skipping updating SOS record
octagon-preload-keys: failed to preload Octagon keys in SOS:%@
successfully preloaded Octagon keys in SOS!
octagon-sos: failed to update Octagon keys in SOS:%@
successfully updated Octagon keys in SOS!
octagon-sos: failed to update CKKS4All status in SOS: %@
successfully updated CKKS4All status in SOS to '%@'
SOSCCRequestToJoinCircleAfterRestore complete: %d %@
octagon-sos: Can't create SPKI for peer: %@
octagon-sos: Created SPKI for peer: %@
octagon-sos: Not in circle; not preapproving keys: %@ (%@)
octagon-sos: Can't fetch trusted peer SPKIs: %@
Beginning an establish operation
Finishing an establish operation with %@
SOS preapproved keys are %@
Unable to fetch SOS preapproved keys: %@
SOS not enabled; no preapproved keys
octagon: failed to save 'attempted join' state: %@
Beginning establish with keys: %@
octagon: Error calling establish: %@
A CKKS key hierarchy is out of date; moving to '%@'
Couldn't persist results: %@
Due to write failures, we'll try to fetch the current state
Some records were written! Process them
View %@ is in okay state; ignoring
Attempting to heal %@
couldn't load current key set, attempting to proceed: %@
Key set is %@
Have current key pointers, but no keys. This is exceptional; requesting full refetch
Unable to determine if all IQEs have parent keys: %@
We have some item that encrypts to a non-existent key. This is exceptional; requesting full refetch
We have some item that encrypts to a non-existent key, but we cannot request a refetch! Possible inifinite-loop ahead
No current TLK pointer?
No current ClassA pointer?
No current ClassC pointer?
key hierarchy has split: there's two top keys. Currently we don't handle this situation.
No possible TLK found. Waiting for creation.
CKKS claims %@ is not a valid TLK: %@
Received a TLK(%@), but keybag appears to be locked. Entering a waiting state.
Received a TLK(%@) which we don't have in the local keychain: %@
Couldn't create a new class A key, but keybag appears to be locked. Entering waitforunlock.
couldn't create new classA key: %@
Couldn't create a new class C key, but keybag appears to be locked. Entering waitforunlock.
couldn't create new class C key: %@
Attempting to move to new key hierarchy: %@
Unable to create TLK shares for new tlk: %@
Saving new records %@
Operation group is %@
Successfully completed upload for %@
Completed Key Heal CloudKit operation with error: %@
couldn't save new key hierarchy to database; this is very bad: %@
couldn't save new key hierarchy to CloudKit: %@
Couldn't load key(%@) from keychain. Attempting recovery: %@
Couldn't unwrap key(%@) using key hierarchy due to the lock state: %@
Couldn't unwrap key(%@) using key hierarchy. Keys are broken, quitting: %@
Couldn't save key(%@) to keychain due to the lock state: %@
Couldn't save key(%@) to keychain: %@
error loading cip: %@
BUG: No current item pointer matching resynced CloudKit record: %@
BUG: Local current item pointer doesn't match resynced CloudKit record(s): %@ %@ %@
Already know about this current item pointer, skipping update: %@
Couldn't save current item pointer to database: %@: %@ %@
CloudKit notification: deleted current item pointer(%@): %@
Failed to find remote CKKSCurrentItemPointer to delete %@: %@
Failed to delete remote CKKSCurrentItemPointer %@: %@
Failed to find local CKKSCurrentItemPointer %@: %@
Failed to delete local CKKSCurrentItemPointer %@: %@
CKKSCurrentItemPointer was deleted: %@ error: %@
Limited view operation to %@
Expanded view operation to %@
Limited view operation to priority views %@
Fetching account keys for provider %@
Providing keyset (%@) to listeners
Processing record modification(%@): %@
unknown record type: %@ %@
Record modification(%@) failed:: %@
Processing record deletion(%@): %@
Record deletion(%@) failed:: %@
Received a ServerRecordChanged error, attempting to update new records and delete unknown ones
On error: updating our idea of: %@
On error: handling an unexpected delete of: %@ %@
Examining 'write failed' error: %@ %@ %@
CKKS Server extension has told us about %@ for record %@; requesting refetch and reprocess of key hierarchy
CKKS Server extension has told us about %@ for record %@, but we don't currently handle this error
Couldn't fetch attributes from item: %@
No view returned from policy (%@): %@
CKKSSynchronizeOperation cancelled, quitting
Beginning local resynchronize (attempt %u)
Couldn't fetch IQEs: %@
restarted synchronization too often; Failing
restarting synchronization operation due to new local items
Couldn't fetch mirror items: %@
Couldn't make CKRecord for item: %@
preparing an identity
AuthKit doesn't know about the altDSID: %@
Investigating use of Octagon keys from SOS identity
Failed to get the persistent ref for our SOS signing key: %d
Failed to get the persistent ref for our SOS encryption key: %d
octagon: Error preparing identity: %@
Prepared: %@ %@ %@
New syncing policy: %@ views: %@
Couldn't persist metadata: %@
failed to reset account metadata in keychain, %@
created a CKKSCurrentKey with a nil currentKeyUUID. Why?
No current key UUID in record! How/why? %@
error loading ckp: %@
BUG: No current key pointer matching resynced CloudKit record: %@
BUG: Local current key pointer doesn't match resynced CloudKit record: %@ %@
Current key pointer has 'changed', but it matches our local copy: %@
Couldn't save current key pointer to database: %@: %@
CKRecord was %@
Current key pointer modification doesn't change anything interesting; skipping reprocess: %@
error deleting ckp: %@
Unable to set CDP bit: %@
Successfully set CDP bit
Client pid: %d doesn't have entitlement: %@
Client pid: %d attempted to use CKKS, but CKKS is not enabled.
no AccountTracker object
CK device ID not initialized, likely quitting
CK device ID not initialized, quitting
Not quite sure if the account is HSA2 or not. Probably will quit?
Error creating device state entry; quitting: %@
Saving new device state %@
Device state record upload successful for %@: %@
CloudKit returned an error: %@
Couldn't save new device state(%@) to database: %@
was_current does not match
octagon: Error setting recovery key: %@
successfully set recovery key
Providing setRecoveryKey() records to %@
octagon: failed to create string: %@
octagon: Error create custodian recovery key: %@
successfully created custodian recovery key
octagon: failed to parse UUID from TPH: %@
octagon: failed to create crk: %@
Providing createCustodianRecoveryKey() records to %@
octagon: failed to create inheritance key: %@
octagon: Error create inheritance key: %@
successfully created inheritance key
octagon: Error store inheritance key: %@
successfully stored inheritance key
Providing storeCustodianRecoveryKey() records to %@
CloudKit.framework appears to not be linked. Cannot enable CKKS (on pain of crash).
reduce-rate-limiting is %@
Ignoring kSecDbCKKSTransaction notification
SecDbEvent gave us garbage: %@
Local keychain was reset; performing local resync
Local keychain reset resync finished with an error: %@
Local keychain reset resync finished successfully
Beginning resynchronize (attempt %u)
error doing database transaction, major problems ahead: %@
error getting database connection, major problems ahead: %@
mismatching zone ids in a single record: %@ and %@
%@ %s %s changes: %@
change %@ SOSObjectCopyDigest: %@
change %@ bad length digest: %@
Attempting to escrow any pending prerecords
Will retry after unlock
Skipping completed escrow request (%@)
Skipping pending escrow request (%@); it's rate limited
No pending escrow request has a prerecord
escrow request have pre-record uploading: %@
escrowrequest: unable to save last escrow time: %@
escrowrequest: fatal error for record: %@, dropping: %@
escrowrequest: unable to delete last escrow time: %@
escrowrequest: prerecord %@ upload failed: %@
escrowrequest: prerecord %@ upload succeeded
escrowrequest: unable to save completion of prerecord %@ in keychain
Not acting on exactly one view; not limiting query: %@
Too many policy rules for view %@
Policy view rule is not a match against viewhint: %@
Policy view rule is complex: %@
couldn't execute query: %@
Need to upload %@, but can't create outgoing entry: %@
Syncing new item: %@
Need to upload %@, but can't save to database: %@
Found %d missing %@ items
Onboarding %@ %@
Found %d items missing UUIDs
Found item with no uuid: %@
Assigning new UUID %@ for item %@
Unable to copy item with new UUID: %@
Unable to update item with new UUID: %@
BUG: keychain missing %lu items from mirror and/or queues: %@
BUG: error fetching previously-extant CKME (uuid: %@) from database: %@
No missing local items found
Scanning for views: %@
Unable to load CKMirrorEntries: %@
Scanning all synchronizable %@ items(%@) for: %@
scanning item: %@
Skipping tombstone %@
skipping sync of device-bound(%@) item
Ignoring syncable keychain item for non-primary account: %@
Scanned item is a CKKS internal key, skipping
Scanned item is for view %@, skipping
making new UUID for item %@: %@
couldn't copy UUID-less item's primary key: %@
Existing mirror entry with UUID %@
Existing mirror entry with UUID %@ does not match local item
Existing outgoing queue entry with UUID %@
Item(%@) is new; will attempt to add to CKKS
keychain missing %lu items from mirror, proceeding with queue scanning
unable to inspect incoming queue: %@
unable to inspect outgoing queue: %@
Exiting due to previous error: %@
Found %d views with missing items for %@
Found %d missing %@ items for %@
View wasn't ready for scan
Unable to save 'scanned' bit: %@
Saved scanned status.
Transferring ckoperation group %@
Completed scan
Could not decrypt item for comparison: %@
Could not get item contents for comparison: %@
No voucher available: %@
joining with a voucher: %@
octagon: Error joining with voucher: %@
A CKKS key hierarchy is out of date; going to state '%@'
requesting cuttlefish health check
octagon: join successful
couldn't reset zone status: %@
couldn't delete all CKKSMirrorEntry: %@
couldn't delete all CKKSOutgoingQueueEntry: %@
couldn't delete all CKKSIncomingQueueEntry: %@
couldn't delete all CKKSKey: %@
couldn't delete all CKKSTLKShare: %@
couldn't delete all CKKSCurrentKeyPointer: %@
couldn't delete all CKKSCurrentItemPointer: %@
couldn't delete all CKKSDeviceStateEntry: %@
Successfully deleted all local data for zones: %@
Using cached change token for %@: %@
Cancelling fetch: %@
Dropping the following zones from this fetch cycle: %@
Beginning fetch with discretionary network (%d): %@ options: %@
CloudKit notification: record changed(%@): %@
Received a new server change token (via block) for %@: %@ %@
Received a new server change token for %@: %@ %@
more changes pending for %@, will start a new fetch at change token %@
Record zone fetch complete: changeToken=%@ clientChangeTokenData=%@ moreComing=%@ error=%@
Must issue another fetch (with potential error %@)
Record zone changes fetch complete: error=%@
Submitting post-fetch CKEventMetric due to notification %@
Couldn't associate metric with operation: %@ %@
Metric submitted: %@
no client registered for %@, so why did we get any data?
Sorting record modification %@: %@
Sorting record deletion %@: %@
Delivering fetched changes: changed=%lu deleted=%lu moreComing=%lu resync=%u changeToken=%@
No more changes for zone; turning off resync bit
posting notification %@
Checking if any CKKS zones need resetting
Finishing resetting CKKS missing TLKs operation with %@
Key set %@ has no TLK; scheduling for reset
Error loading key set %@; not attempting reset
No CKKS views need resetting
Resetting CKKS view %@
CKKS view reset complete
Successfully reset %@
octagon: Error removing custodian recovery key: %@
successfully removed custodian recovery key
octagon: Received an error updating TPH, but no retry flag present.
Updating trust state failed because locked, retry once unlocked: %@
Error is currently unknown, aborting: %@
Updating trust state not fatal: requesting retry: %@
octagon: Unable to load current metadata: %@
Forcing a full refetch
octagon: update errored: %@
Cuttlefish reports we no longer exist.
update complete: %@, %@
octagon: Unable to save new syncing state: %@
Self peer is now preapproved!
Member list changed
Unknown machine IDs are present; requesting fetch
Self peer (%@) is excluded; moving to untrusted
Self peer (%@) is excluded but is preapproved, moving to sosuprade
Self peer (%@) is unknown; moving to '%@''
SOS update preapproval error is not fatal: requesting retry in %0.2fs: %@
SOS update preapproval error is: %@, not retrying
octagon-sos: Can't fetch trusted peers; stopping preapproved key update: %@
Updating SOS preapproved keys to %@
octagon-sos: unable to update preapproved keys: %@
Updated SOS preapproved keys
creating voucher using a recovery key
using auth kit adapter, altdsid is: %@
octagon: Error preflighting voucher using recovery key: %@
Recovery key ID %@ looks good to go
octagon: Error preparing voucher using recovery key: %@
Successfully vouched with a recovery key: %@, %@
Adding flag for CKKS TLK upload
Adding flag for CKKS policy check
Changing trust status to: %@
User controllable view state changed; posting notification
octagon-authkit: Unable to load account metadata: %@
Machines-added push is for wrong altDSID (%@); current altDSID (%@)
adding machines for altDSID(%@): %@
octagon-authkit: addAllow errored: %@
addAllow succeeded
Machines-removed push is for wrong altDSID (%@); current altDSID (%@)
removing machines for altDSID(%@): %@
octagon-authkit: removeAllow errored: %@
removeAllow succeeded
incomplete machine ID list notification -- refreshing device list
Told of a new CK account status: %@
Informed that the CK account is now unavailable: %@
Account available with altDSID: %@ %@
octagon: unable to persist new account availability: %@
Account now unavailable: %@
Informing %@ of new untrusted status (due to account disappearance)
error fetching account metadata: %@
current cdp status is: %@
octagon-cdp-status: unable to persist CDP enablement: %@
Successfully set CDP status bit to 'enabled''
device is not in clique to begin with - returning
octagon: Unable to fetch machine ID; expect signin to fail: %@
received new pairing UUID (%@)
current pairing UUID (%@) does not match config UUID (%@)
localReset returned an error: %@
localReset succeeded
octagon: Timed out waiting for local reset to complete
Waiting for an HSA2 account
CloudKit reports an account is available!
Waiting for a CloudKit account; current state is %@
Asking for a real CK account state
CDP is newly available!
Account is available!  Attempting initializing op!
Preapproved flag is high. Attempt SOS upgrade again!
We are untrusted, but it seems someone preapproves us now. Unfortunately, this platform doesn't support SOS.
Attempt SOS upgrade again!
Attempting SOS upgrade again (due to a consistency notification)
Updating TPH (while untrusted) due to push
Determine iCloud account status
Attempting local-reset
Attempting local-reset as part of signout
Ensuring consistency of things that might've changed
Preloading Octagon Keys on the SOS Account
SOS is enabled; ensuring preapprovals are correct
Investigating SOS status
clear cuttlefish context state
Updating SOS preapprovals
Updating TPH (while ready) due to push
Received an suggestion to retry TLK extraction via bottle, but have no entropy stashed
Received an suggestion to retry TLK extraction via RK, but have no recovery key stashed
Received an suggestion to update the machine ID list (while ready); updating trusted device list
Attempt SOS Update preapprovals again!
We are untrusted, but this platform doesn't support SOS.
Attempting SOS consistency checks
Someone would like us to check SOS consistency, but this platform doesn't support SOS.
Attempting user-view control upgrade
Updating CKKS policy
Removing 'account is available' flag
Removing 'IDMS level changed' flag
Removing 'CDP enabled' flag
An HSA2 iCloud account exists; waiting for CloudKit to confirm
Initializing CKKS views
Unable to fetch initial syncing policy: %@
Fetched initial syncing policy: %@
An iCloud account exists, but doesn't appear to be HSA2. Let's check!
No iCloud account available.
Unknown account state (%@). Determining...
peer is trusted: %@
trust state (%@). checking in with TPH
octagon-health: hit an error asking TPH for trust status: %@
TPH says device is locked!
TPH says we're trusted and in
TPH says we have an identity but we are not in Octagon, posted CFU: %d
Returning from cuttlefish trust check call: postRepairCFU(%d), postEscrowCFU(%d), resetOctagon(%d), leaveTrust(%d), moveRequest(%d)
Posting Repair CFU
octagon-health, hit an error evaluating prerecord status: %@
Posting Escrow CFU
Not posting confirm passcode CFU, already pending a prerecord upload
Leaving Octagon and SOS trust
Received escrow move request: %@
ocagon-health: failed to post repair cfu via state machine: %@
device is locked, not posting cfu
posted repair cfu via state machine
Error loading account data: %@
iCloud sign in occurred. Attemping to register with APS...
octagonpush: received callback for released object
octagonpush: Received error fetching preferred push environment (%@): %@
Registering for environment '%@'
repairAccountIfTrustedByTPHWithIntendedState: calling into TPH for trust status
repairAccountIfTrustedByTPHWithIntendedState status: %ld, peerID: %@, isExcluded: %d error: %@
got an error from tph, returning to become_ready state: %@
device is locked
TPH believes we're trusted, accepting ego peerID as %@
octagon-health: couldn't persist results: %@
added trusted identity to account metadata
TPH believes we're not trusted, requesting CFU post
clique status: %@, egoPeerID: %@, peerCountByModelID: %@, isExcluded: %d error: %@
octagon: Lost our identity keys! Posting CFU
device is locked; not posting CFU
Have %d peers with model %@
No iOS peers in account; not posting CFU
octagon: failed to retrieve joining attempt information: %@
SOS is enabled and we haven't attempted to join; checking with SOS
SOS is not ready, not posting CFU until it becomes so
SOS is in an unknown error state, posting CFU: %@
SOS is InCircle, not posting CFU
SOS is %@, posting CFU
octagon: hit an error checking trust state or posting a cfu: %@
octagon: device is locked, not posting cfu
clique status: %@, posted cfu: %d
device is locked, state moving to wait for unlock
Unable to set trust state: %@
Informing %@ of new untrusted status
Unable to disable the CKKS4All status in SOS: %@
octagon-ckks: No peer ID to pass to CKKS. Syncing will be disabled.
octagon-ckks: No memoized CKKS policy, re-fetching
Memoized CKKS policy has no opinion of user-controllable view status
Unable to enable the CKKS4All status in SOS: %@
Initializing CKKS views with policy %@: %@
octagon-ckks: Unable to fetch self peers for %@: %@
Waiting for device unlock to proceed
Error is scary; becoming untrusted
Informing CKKS %@ of trusted operation with self peer %@
octagon: health report is lost: %@
TTR request not for me (sn)
TTR request not for me (deviceId)
octagon: invalid type of TTR requeat: %@
received a cuttlefish push notification (%@): %@
octagon: unknown command: %@
creating aps rate limiter
notifying container of change for context: %@
popdialog: Already checked this altDSID: %@
popdialog: Successfully persisted warned-too-many-peers state for %@
octagon: popdialog: Failed to persist warned-too-many-peers state for %@: %@
popdialog: ego peer status says peer count is: %lu
popdialog: not popping dialog, number of peers ok: %lu < %lu
Unable to fetch account metadata: %@
device name updated: %@
Received an update of an SOS trust set change
This platform doesn't support SOS. This is probably a bug?
creating SOS consistency rate limiter
Unable to determine CloudKit account state?
No CK account present. Attempting to refetch CK account status...
Fetching new CK account status did not complete in time
After refetch, CK account status is %@
No cloudkit account present: %@
Preparing identity as applicant
Returning a prepare call: %@  %@
octagon-inheritance: failed to create CRK: %@
Unable to save voucher for joining: %@
No SOS peers present: %@, skipping in status
No SOS selves present: %@, skipping in status
Returning status of unpaused state machine for container (%@) and context (%@)
Failed to load account metaada for container (%@) and context (%@): %@
Finished dump for status RPC
Returning peer ID: %@
Unable to fetch peer ID: %@
Unable to dump info: %@
octagon: have a trusted peer ID without peer information: %@
Returning a set recovery key call: %@
Returning a create custodian recovery key call: %@
Returning a remove custodian recovery key call: %@
octagon: failed to generate inheritance key: %@
Returning an inheritance key call: %@
Returning remove inheritance key call: %@
returning cached clique status: %@
Device is locked! pending initialization on unlock
no account! returning clique status 'no account'
No cloudkit account present
Unknown cloudkit account status, returning cached trust value
Inherited account -- should circuit to cached trust value
error fetching trust status: %@
trust status: %@
TPPeerStatus is empty
octagon: unable to persist clique trust state: %@
updated account trust state: %@
octagon: error fetching all viable bottles: %@
fetched viable bottles: %@
fetched partially viable bottles: %@
octagon: error fetching all viable escrow records: %@
fetched escrow records: %@
octagon: failed to remove escrow cache: %@
successfully removed escrow cache
octagon: error fetching escrow contents: %@
fetched escrow contents for bottle: %@
account is not hsa2 yet, returning
state machine in the error state, cannot service request
Returning user-controllable status as %@ (%@)
Failed to fetch policy: %@
Policy missing even after a refetch?
Rejecting set of user-controllable sync status due to platform
Unable to persist identity: %@
Successfully persisted new SE identity: %@
Unable to persist removal of identity: %@
Successfully persisted removal of SE identity
Unable to load account metadata for (%@,%@): %@
Returning pending identity for (%@,%@): %@
Unable to fetch account settings for (%@,%@): %@
Beginning to wait for CKKS Priority view download
Done waiting for CKKS Priority view download with error: %@
Done waiting for CKKS Priority view download
octagon-tlk-recoverability: fetching bottles failed: %@
record's bottleID is not valid in cuttlefish
Octagon peerID not trusted for record %@
octagon-tlk-recoverability: failed assessing tlk recoverability using the octagon identity, error: %@
found views using octagon peer matching record! views: %@
octagon-tlk-recoverability: failed to find views
octagon-health: CoreCDP repair failed: %@
CoreCDP post repair success
Failed to check escrow prerecord status: %@
prerecord is pending, NOT posting CFU
no pending prerecords, posting CFU
Successfully left SOS
octagon-health: CoreCDP confirm existing secret failed: %@
Skipping escrow move request (feature disabled)
Unable to acquire EscrowRequest object: %@
Failed to get altDSID: %@
Skipping escrow move request (rate limited), posting follow up
Secure terms not accepted, posting followup
Triggered escrow move
octagon-health: Unable to trigger escrow move: %@
Posted secure terms followup
octagon-health: Failed to post secure terms followup: %@
Beginning checking overall Octagon Trust
currently waiting for class C unlock
waitForOctagonUpgrade
sos not enabled, nothing to do for waitForOctagonUpgrade
SOS circle status: %d, cannot perform sos upgrade
octagon-sos: error retrieving circle status: %@
in sos circle!, attempting upgrade
waitForOctagonUpgrade: already ready, returning
waitForOctagonUpgrade: in ready (after waiting), returning
waitForOctagonUpgrade: fail to get to ready after timeout, attempting upgrade
Failed to fetch allowed machineIDs: %@
MID (%@) on list: %@
Unable to fetch trust status: %@
octagon: failed to reset cdp account contents: %@
successfully reset cdp account contents
performing EscrowRequestServerInitialize
creating voucher using a custodian recovery key
octagon: Error preflighting voucher using custodian recovery key: %@
Preflight Custodian Recovery key ID %@ looks good to go
Custodian Recovery key ID %@ looks good to go
octagon: Error preparing voucher using custodian recovery key: %@
Successfully vouched with a custodian recovery key: %@, %@
creating inheritance peer and recovering shares using an inheritance key
octagon: failed to save 'se' state: %@
octagon-inheritor: Error preparing inheritor identity: %@
octagon-inheritor: Error recovering tlkshares: %@
Saving tlkshares for later use...
unable to save shares: %@
Successfully recovered shares
dropping corrupt manifest for %@ from cache
engine failed load state starting with nothing %@
%@ peer sent bad object: %@, rolling back changes
%@ SOSDataSourceMergeObject failed %@ rolling back changes
SOSEngineHandleMessage_locked (%@): creating a confirmed manifest via a patch (base %zu %@, +%zu, -%zu)
%@:%@ Protocol error send L00 - figure out later base: %@
SOSEngineHandleMessage_locked (%@): got a confirmed manifest by digest: (%zu, %@)
%@:%@ confirmed: %@ base: %@
SOSEngineHandleMessage_locked (%@): new confirmed manifest (%zu, %@) will replace existing confirmed manifest (%zu, %@)
SOSEngineHandleMessage_locked (%@): new confirmed manifest (%zu, %@) is first manifest for peer
%@:%@ unable to find confirmed in %@, sync protocol reset
recv %@:%@ %@
recv %@ -> %@
%@ ASSERTION FAILURE purging excess pendingObjects: %@
%@ ASSERTION FAILURE purging excess unwanted: %@
%@:%@: send state for peer [%s%s%s][%s%s] local:%zu confirmed:%zu pending:%zu, extra:%zu, missing:%zu unwanted:%zu
synced <No MSG> %@:%@
waiting <MSG not resent> %@:%@ extra: %@
%@:%@ object %02X%02X%02X%02X dropping from manifest: not found in datasource: %@
%@:%@ object %02X%02X%02X%02X dropping from manifest: %@
%@:%@ object %02X%02X%02X%02X in SOSDataSourceForEachObject: %@
%@:%@ object %02X%02X%02X%02X is really %02X%02X%02X%02X dropping from local manifest
%@:%@ object %02X%02X%02X%02X der: %@ dropping from manifest: %@
%@:%@: only have differences in unwanted set; lying to peer to stop sync
%@:%@: failed to set message manifests
%@:%@ sendObjects=true L:%@
send %@:%@ %@
%@:%@ failed to send %@
%@:%@ error in send: %@
Failed to process sync for %@: %@
failed to save engine state: %@
Start
No Engine Available
No engine peers: %@
Finish
New coder for id %@.
Failed to create coder for %@: %@
Skipping coder check for peer: %@
adding coder: %@ for peerid: %@
Coder for '%@' failed to create: %@
coder for %@ was not cf data: %@
didn't find coder for peer: %@ engine dictionary: %@
Will force peer registration: %s
SOSCCProcessEnsurePeerRegistration failed with: %@
Migrating from v0 engine state; dropping coders and forcing re-negotiation
peer: %@: bad state: %@ in engine state: %@
No keybag found for v0 backup peer: %@
%@: peer failed to inflate: %@
new engine for datasource named %@
updateChanged failed: %@
error inflating peer: %@: %@ from state: %@
peer: %@ not found, peerMap: %@, engine: %@
%@: %s %s %ld changes, txn=%@, %p
failed to delete tombstone %@ that no one cares about: %@
saving engine state
Not saving engine state, nothing changed.
Skipping non-primary item %@
Sending view notification for view %@
%@:%@: Send state for peer [%s%s%s] O: %zu, M: %zu
%@:%@ backup still done
SOSEngineUpdateChanges_locked: %@ failed: %@
%@:%@ backup done%s
%@:%@ in SOSBackupPeerWriteCompleteMarker: %@
%@:%@ backup incomplete [%zu/%zu]%s
%@:%@ object %02X%02X%02X%02X %s: %@
Probable bug: wrapped key data does not match cached version
Resaving missing key failed, continuing: %@
Unable to load TLK shares for TLK(%@): %@
Failed to recover tlk (%@) from trust state (%@): %@
Recovered tlk (%@) from trust state (%@)
Error with TLK: %@
Unable to load key due to lock state: %@
Do not yet have this key in the keychain: %@
Some key is present, but the key is not self-wrapped: %@
Failed to unwrap tlk(%@) via shares: %@
Errored saving TLK to keychain: %@
wrapping key reference (self-wrapped) does not match
wrapping key reference (non-self-wrapped) does not match
key class does not match
wrapped key does not match
error loading key: %@
BUG: No sync key matching resynced CloudKit record: %@
BUG: Local sync key doesn't match resynced CloudKit record(s): %@ %@
Already know about this sync key, skipping update: %@
Error finding existing local key for %@: %@
Couldn't update existing key: %@: %@
Couldn't save key record to database: %@: %@
Couldn't load key record from database: %@: %@
Couldn't delete key record from database: %@: %@
 couldn't fetch sos status for SF report: %@
couldn't fetch CKMirror counts for %@: %@
View has %@ item ckrecords
couldn't fetch CKKSTLKShare counts for %@: %@
View has %@ tlkshares
couldn't fetch CKKSKey counts for %@: %@
View has %@ sync keys
 couldn't load global zone state: %@
Restarting CKKS %@
registered callback for UUID: %@
fetched UUID: %@
No CK account; failing all pending sync callbacks
No CKKS view for %@, %@
New TLKs have arrived
Failed to get account object
Couldn't process sync with backup peers: %@
telling CloudServices about TLK arrival
Error getting keyset: %@
Do not have keyset: %@
Error loading key: %@
Do not have TLK: %@
Rejecting a resetLocal RPC: %@
Rejecting a resetCloudKit RPC: %@
Rejecting a resync RPC: %@
Ending rsync-CloudKit rpc with %@
Beginning resync (CloudKit) for %@
Rejecting a resync-local RPC: %@
Ending rsync-local rpc with %@
Beginning resync (local) for %@
Rejecting a status RPC: %@
Skipping fetchAndProcessCKChanges due to disabled CKKS
Rejecting a fetch-and-process RPC: %@
Skipping rpcFetchAndProcessChanges because a recent fetch was performed
Beginning fetch for %@
Rejecting a push RPC: %@
Beginning push for %@
Rejecting a ckmetric RPC: %@
Rejecting a proposeTLK RPC: %@
Rejecting a fetchSEViewHierarchy RPC: %@
Rejecting a modifyTLKShares RPC: %@
Rejecting a deleteSEView RPC: %@
Rejecting a toggleHavoc RPC: %@
Received a 24hr notification from XPC
Trust not ready, still going ahead
fetching views
octagon: failed to retrieve policy+views: %@
SecDbKeychainItemV7: error deserializing ciphertext from metadata: %@
SecDbKeychainItemV7: error deserializing wrappedKey from metadata: %@
SecDbKeychainItemV7: error deserializing ciphertext from secret data: %@
SecDbKeychainItemV7: serialized item exceeds reasonable size (%lu bytes)
SecDbKeychainItemV7: error unwrapping item metadata key (class %d, bag %d): %@
SecDbKeychainItemV7: error decrypting metadata content: %@
SecDbKeychainItemV7: tamper check failed for metadata decryption, expected %@ found %@
SecDbKeychainItemV7: error decrypting item secret data contents: %@
SecDbKeychainItemV7: tamper check failed for secret data decryption, expected %@ found %@
SecDbKeychainItemV7: failed to delete item secret key from aks
SecDbKeychainItemV7: item's metadata exceeds reasonable size (%lu bytes) (%@)
SecDbKeychainItemV7: item's secret data exceeds reasonable size (%lu bytes) (%@)
SecDbKeychainItemV7: backup manager didn't return wrapped key: %@
wrapToAKS: Key diversification feature persona(musr) %@ is data separated
SecDbKeychainItemV7: access control error
unwrapFromAKS: Key diversification feature persona(musr) %@ is data separated
nw_path update: network is %@
Network unavailable
Network available
Network still not available, retrying after waiting %2.1f hours
Merging: unable to get attribute (%@) : %@
Preserving existing data for %@
Unable to set attribute (%@) : %@
insert: failed to created a merged item: %@
failed to create a merged item so we will choose the item from the backup
Conflict resolver chose my (local) item: %@
Conflict resolver chose item from the backup: %@
Conflict resolver created a new item; return it to our caller: %@
replaced %@ in %@
    with %@ in %@
inserted %@
insert failed for item %@ with %@
cannot decrypt item %@, item is irrecoverably lost with older passcode (error %@)
error %@ reading item %@ (corrupted)
error %@ %@ != %@ item %@ (corrupted)
error attribute %@ has NULL value in item %@ (corrupted)
attribute %@: %@ item %@ (item lost with older passcode)
error attribute %@: %@ item %@ (corrupted)
deleted %@ from %@
Running state machine request %@ (from %@)
In test hold for state %@; pausing
Beginning state transition attempt %@
State machine rests (%@, f:[%@] p:[%@])
Finishing state transition attempt (ending in %@, intended: %@, f:[%@], p:[%@]): %@ %@
notifying watcher: %@
Finished waiting for operation
Waiting for unlock
Unlock occurred
Waiting for network reachability
Network is reachable
Delay has ended for pending flag %@
Operation has ended for pending flag %@: %@
Conditions are right for %@
Releasing state machine test pause from %@
Beginning a '%@' rpc
Returning '%@' result: %@
ks_decrypt_data failed to decrypt secretdata: version %u mismatch with content
decode v%d failed: %@
items accessGroup '%@' not in %@
Make this item syncable: %@
ks_encrypt_data (db): failed: %@
Unable to wrap keychain item to backup: %@
SecDbItemCopyAccessControl accc %@ != pdmn %@, setting pdmn to accc value
ks_encrypt_data: called with non-device keybag - call should be rerouted to ks_encrypt_data_legacy
Attempting SOS upgrade
Error fetching circle status: %@
Device is not in SOS circle (state: %@), quitting SOS upgrade
Failed to get the persistent ref for our SOS signing key: %@
Failed to get the persistent ref for our SOS encryption key: %@
SOS upgrade error is not fatal: requesting retry in %0.2fs: %@
SOS upgrade error is: %@; not retrying
Fetching trusted peers from SOS
Unable to fetch altDSID from AuthKit: %@
Unable to check safari view status: %@
Safari view is: %@
octagon-sos: Error preparing identity: %@
octagon-ckks: Error persisting new views and policy: %@
octagon-sos: preflightPreapprovedJoin failed: %@
TPH believes a preapprovedJoin will fail; aborting.
TPH believes a preapprovedJoin might succeed; continuing.
handling prepare error: %@
Successfully saved machineID allow-list
Fetching keys from CKKS
Beginning SOS upgrade with %d key sets and %d SOS peers
octagon-sos: attemptPreapprovedJoin failed: %@
A CKKS key hierarchy is out of date; requesting reset
octagon-sos: attemptPreapprovedJoin succeded
Providing ck records (from sos upgrade) to %@
negating %@ = %@ in query
key_count: %ld, QUERY_KEY_LIMIT: %d
update_applier: refusing to update musr
completion handler called on deallocated operation instance
cannot get signing key from account: %@
cannot get ego peer ID from account: %@
cannot get peer keys from account: %@
zone contains delimiter: %@
signerID contains delimiter: %@
attempt to create manifest from CKRecord that does not have signatures attached: %@
failed to initialize CKKSManifest from CKRecord because we could not form a signature dict from the record: %@
attempt to create manifest from CKRecord that does not have a digest attached: %@
failed to decode signatures der dict with error: %@
failed to encode signatures dict to der with error: %@
failed to decode peer manifests der array with error: %@
failed to encode peer manifests to der with error: %@
saving manifest to database but %@ is nil
could not parse components from record name: %@
failed to update manifest from CKRecord with error: %@
error encoding manifest into DER: %@
Error fetching peer verifying keys: %@
failed to lookup manifest leaf record with id: %@ error: %@
failed to fetch leaf record from CKManifest for %@
CloudKit notification: deleted manifest record (%@): %@
CKKSManifest was deleted: %@ %@ error: %@
Not ready to commit manifest, yet - missing leaf record ID: %@
Failed to save fetched manifest record to database: %@: %@
manifest CKRecord was %@
Error getting peer ID: %@
can't get ego peer ID right now - the device probably hasn't been unlocked yet
error loading leaf record from database: %@
unrecognized field type in future schema: %ld
error creating manifest der data: %@
Don't have self peers for %@: %@
Don't have trusted peers: %@
No CKKSTLKShares to %@ for %@
Checking possible TLK share %@ as %@
Unable to unwrap TLKShare(%@) as %@: %@
Current trust set: %@
Unwrapped TLKShare(%@) does not unwrap proposed TLK(%@) as %@: %@
TLKShare(%@) unlocked TLK(%@) as %@
Fetch operation records %@ fetchError %@
Fetch ramp state - featureAllowed %@, featurePromoted: %@, featureVisible: %@, retryAfter: %ld
octagon: Couldn't find CKRecord for ramp. Defaulting to not ramped in
Attempting to fetch ramp state from CloudKit
%@ Defaults availability: SecCKKSTestsEnabled[%s] DefaultsPointer[%s] DefaultsValue[%s]
feature is %@: %@ (local config)
device is locked! can't check ramp state
not signed in! can't check ramp state
no network! can't check ramp state
fetch ramp records returned with featureAllowed: %d,
 featurePromoted: %d,
 featureVisible: %d,
timed out waiting for response from CloudKit
cloud kit asked security to retry: %lu
octagon: had an error fetching ramp state: %@
Attempting to leave clique
Departing failed due to lock state: %@
Unable to depart for (%@,%@): %@
octagon: unable to persist clique departure: %@
Successfully departed clique
kSOSMergeFailure => SecDbItemSetKeybag: %@
setting UUID persistent ref on peersitem: %@
failed to set persistent ref on item %@, error: %@
Conflict resolver chose peers item: %@
Insert succeeded for: %@
kSOSMergeFailure => kSOSMergePeersObject, %@
dsMergeObject failed: mr=%ld, %@
query_destroy failed: %@
digest %zu bytes
SecDbItemSelectSHA1 failed: %@
found item for key %@@%@
failed to load %@@%@ state: %@
found item for keys %@
failed to load item %@: %@
failed to save %@@%@ state: %@
create_datasource %@ failed %@
ACAccount not available
No primary account
No altDSID on primary account
AuthKit not available
Security level for altDSID %@ is %lu
octagon-authkit:could not retrieve altDSID
octagon-authkit: hit an error retrieving altDSID: %@
Account with altDSID %@ is a demo account: %@
AKAnisette not available
Unable to fetch data: %@
Anisette data does not have machineID
fetched current machine ID as: %@
Failed to get primary account AltDSID: %@
Current machine ID list: %@
received no device list: %@
AuthKit not available; dropping device list notification
received notifyAKDeviceList: %@, read payload: %@
partial push or no machine IDs in list; treating as incomplete
Client %@ does not have entitlement %@, rejecting rpc
octagon: Client pid: %d doesn't have entitlement: %@
Couldn't fetch UUID from item; can't call callback
failed to create item from stmt: %@
deleting corrupt %@,rowid=%lld %@
failed to delete corrupt %@,rowid=%lld %@
SecServerDeleteAllForUser for user: %@ keepU %s
Request to delete app clip keychain items for identifier '%@'
Finished request to delete app clip keychain items for identifier '%@' with status %i: %@
Request to promote keychain items for app clip '%@' to parent app '%@'
AppcClipPromotion: unable to create query for class %@: %@
SecServerPromoteAppClipItemsToParentApp SecDbItemInsertOrReplace %d
Unable (%i) to promote item: %@
Encountered error %i during promotion: %@
Promotion reports success, now deleting leftover app clip items
App clip item promotion failed: %@
exporting %ssysbound class '%@'
exporting class '%@' complete
exporting class '%@' complete (no items)
exporting class '%@' failed: %@
Unable to delete nonsyncable items prior to keychain restore: %@
Successfully deleted nonsyncable items
Restoring backup items '%ld'
Restoring sysbound items '%ld'
Class %@ not up to date
SecPersistentRefCreateWithItem: Creating old persistent ref for %llu
ignoring corrupt %@,rowid=%lld %@
corrupted edata=%@
Authentication is needed for %@,rowid=%lld (%d): %@
decode item failed, keychain is locked (%d)
decode %@,rowid=%lld failed (%d): %@
handle_result: Creating old persistent ref for %llu
s3dl_query_row_digest: Creating old persistent ref for %llu
rowid %lu in %@ failed to create pref/digest
DeleteAllFromTableForMUSRView failed for %@ for musr: %@: %@
s3dl_export_row: Creating old persistent ref for %llu
ks_encrypt_data %@,rowid=%lld: failed: %@
Encountered akpu item we cannot export (filter %d), skipping. %@
Could not export item for rowid %llu: %@
export rowid %llu skipped. akpu/token: %i
SecServerDeleteAll
Ignoring unknown key class '%@'
Import %ld items of class %@ (filter %d)
Unknown value type for class %@ (filter %d)
import: failed to get the persistent ref: %@
SecServerImportItem: generated a new persistentref UUID for item %@: %@
Item already has a UUID persistent ref set: %@
Failed to import an item (%@) of class '%@': %@ - ignoring error.
imported item: %@
SecItemSchema: v12 development enabled, returning experimental schema
v12 development disabled, returning production schemas
SecError Nested Error Capping is %@ (via feature flags)
Static Persistent Refs are %@ (via feature flags)
Sent %s
notify_post %s returned: %u
no tversion table, will setup a new database: %@
database version is: 0x%08x : %d : %@
UID: %d  EUID: %d
picked up rowid: %lld that needs a persistref
upgr-phase3: failed to get persistent ref error: %@
upgr-phase3: failed to get rowID error: %@
inspecting item at row %lld in table %@, should add persistref uuid?: %@
upgrading item persistentref at row id %lld
upgr-phase3: failed to set persistentref for item:%@, error:%@
upgr-phase3: SecDbItemSetValueWithName returned false
phase3: failed to update item %@: %d, error: %@
updated item %@: %d
Upgrade %sfailed: %@
upgr-phase3: failed to perform persistent ref upgrade for keychain item(s): %@
finished upgrading keychain items' persistent refs
Failed to delete corrupt item, %@ row %lli: %@
Deleted corrupt rowid %lli from table %@
Cannot update keychain item to access group %@
Performing backup from %s keybag%s
Backup result: %s (%@)
Completed roll keys.
Failed to roll keys.
failed to collect CKKS-inet keys: %@
failed to collect PCS-genp keys: %@
failed to collect PCS-inet keys: %@
failed to collect com.apple.nanoregistry.migration-genp item: %@
failed to collect com.apple.nanoregistry.migration2-genp item: %@
failed to collect com.apple.bluetooth-genp item: %@
Importing %d items
Item w/o class
Item with unknown class: %@
Item creation failed with: %@
Failed to set sync=1: %@ for item %@
Item store failed with: %@: %@
failed to decode keychain item
interaction not allowed: %@
authentication needed: %@
AKS is not ready/timing out: %@
AKS is unavailable: %@
skipping upgrade since minor is newer
no schema for version 0x%x
Upgrading from version 0x%x to 0x%x
upgrade: Upgrade phase1 failed: %@
upgrade: Upgrade phase2 (%d) failed: %@
Done upgrading from version 0x%x to 0x%x
Upgrading saving version major 0x%x minor 0x%x
upgrade: Setting version failed: %@
upgrade: SecDB upgrade failed: %@
upgrade: error has been set but status is true
upgrade: error occurred, considering marking database as corrupt: %@
upgrade: not marking keychain database corrupt for error: %@
upgrade: unable to complete upgrade, marking DB as corrupt: %@
upgrade: unable to complete upgrade and no error object returned, marking DB as corrupt
upgrade: marking database as corrupt
upgrade: unable to opportunistically create index (%@,%@): %@
processed custom indexes (now or in the past)
upgr: failed to process custom indexes: %@
Upgrading table %@
dropping item during schema upgrade due to agrp=com.apple.token: %@
item: %@ insert during upgrade: %@
Bailing in phase 1 because AKS is unavailable: %@
skipping backup setup for this platform
dropping item during item upgrade due to agrp=com.apple.token: %@
Received SQLITE_CONSTRAINT with wrong error domain. Huh? Item: %@, error: %@
Ignoring duplicate item: %@
Bailing in phase 2 because AKS is unavailable: %@
no keychain path available
replaced %@ with %@
items matching issuer parent: %@
function SecTokenItemValueCopy failed with: %@
token item doesn't contain token value data
certificate cannot operate
certificate is not valid yet
certificate expired
item: no app clip client or attributes not set, cannot verify restrictions
SecItemServerDeleteAll
SecItemServerDeleteAll: aborting because failed to initialize Query: %@
skipping keybag unlock for EMCS
Restoring keychain backup
Restore completed successfully
SecServerKeychainRestore: Restore failed with: %@
failed to obtain manifest for keychain: %@
restore %@ not replacing existing item
restore %@ skipping corrupted item %@
restore %@ failed %@
Copy item
Persona is guest/enterprise; rejecting: %@(%d)
Received unexpected Universal/Managed/other persona; treating as not for primary account: %@(%d)
Beginning an operation to upload any pending CKKS tlks
No CKKS views need uploads
CKKS needs TLK uploads for %@
Finishing an update TLKs operation with %@
No CKKS views gave us TLKs to upload
Beginning tlk upload with keys: %@
octagon: Error calling tlk upload: %@
metrics URL is: %@
metrics %@ dropped on floor since too many are pending
metrics %@ transfer %@ completed with: %@
performing KeychainItemUpgradeRequestServerInitialize
kicking off keychain item upgrade
escrowrequest: Unable to deserialize keychain item
%d is not an SOSCCStatus?
%d is not an OTCliqueStatus?
No iCloud account active: %@ hsa2 account:%@
No CK device ID available; cannot make device state entry
Couldn't read old CKKSDeviceStateEntry from database: %@
Couldn't read current key pointers from database: %@; proceeding
Couldn't read keys from database: %@; proceeding
Device is locked; couldn't read TLK from keychain. Assuming it is present and continuing; error was %@
Couldn't read TLK from keychain. We do not have a current TLK. Error was %@
Device is locked; couldn't read ClassA key from keychain. Assuming it is present and continuing; error was %@
Couldn't read ClassA key from keychain. We do not have a current ClassA key. Error was %@
Couldn't read ClassC key from keychain. We do not have a current ClassC key. Error was %@
No octagon peer ID available
error loading cdse: %@
BUG: No current device state entry matching resynced CloudKit record: %@
BUG: Local current device state entry doesn't match resynced CloudKit record(s): %@ %@
Failed to save device record to database: %@: %@ %@
CloudKit notification: deleted device state record(%@): %@
CKKSCurrentItemPointer(%@) was deleted: %@ error: %@
creating voucher
vouching with %d keysets
octagon: Error preparing voucher: %@
Couldn't fetch current item pointers: %@
Re-fetching %@ for %@
No record ID for stored %@
No existing CIPs; fixup complete
Finished record fetch with error: %@
CloudKit believes %@ no longer exists
Unknown error for %@: %@
Finished record fetch successfully
Recieved record %@
Couldn't save CKKSZoneStateEntry(%@): %@
Updated zone fixup state to CKKSFixupRefetchCurrentItemPointers
Recieved tlk share record from query: %@
Couldn't fetch all TLKShare records: %@
Successfully fetched TLKShare records (%@)
Updated zone fixup state to CKKSFixupFetchTLKShares
Couldn't perform a reload: %@
Successfully performed a reload fixup. New fixup number is %d
Updated zone fixup state to CKKSFixupLocalReload
Unable to fetch all CDSEs: %@
Unable to save CDSE: %@
Saved CDSE has no stored record: %@
Successfully performed a ResaveDeviceState fixup
Updated zone fixup state to CKKSFixupResaveDeviceStateEntries
Attempting to remove peers: %@
Unable to remove peers for (%@,%@): %@
Successfully removed peers
CKKSUpdateCurrentItemPointerOperation cancelled, quitting
Couldn't fetch new item, quitting: %@
Hash mismatch for new item: %@ vs %@
Error fetching UUID for new item: %@
Couldn't fetch old item, quitting: %@
Hash mismatch for old item: %@ vs %@
Error fetching UUID for old item: %@
Setting current pointer for %@ to %@ (from %@)
Attempt to set a new current item pointer when one exists: %@
current item pointer(%@) doesn't match user-supplied UUID (%@); rejecting change of current
no user-supplied UUID and current item pointer(%@) is not dangling; rejecting change of current
Requested to update a current item pointer but one doesn't exist at %@; rejecting change of current
Creating a new current item pointer: %@
Error attempting to update current item pointer %@: %@
Error attempting to set a current item pointer to an item that isn't synced: %@ %@
Saving new current item pointer %@
Current pointer upload successful for %@: %@
Couldn't save new current pointer to database: %@
CloudKit record does not match saved record, ignoring: %@ %@
Couldn't save %@ to manifest: %@
couldn't create query for item persistentRef: %@
couldn't run query for item pref: %@
couldn't destroy query for item pref: %@
Query failed: %@
Query failed, cferror is %@
Using prevously-generated proposed keyset: %@
Generating new TLK
couldn't load the current TLK: %@
Old TLK is: %@ %@
Couldn't fetch and unwrap old TLK due to lock state. Entering a waiting state; %@
Couldn't fetch and unwrap old TLK: %@
Couldn't create new TLK: %@
couldn't make new key hierarchy: %@
couldn't make current key records: %@
Couldn't unwrap TLK due to lock state. Entering a waiting state; %@
couldn't unwrap TLK, aborting new TLK operation: %@
couldn't wrap oldTLK, aborting new TLK operation: %@
Saving new keys %@ to keychain
Couldn't save new key material to keychain due to lock state. Entering a waiting state; %@
couldn't save new key material to keychain; aborting new TLK operation: %@
Fatal error: unable to generate TLK shares for (%@): %@
Unable to generate TLK shares for (%@): %@
No need to make TLK for %@; they don't have any encryption keys
Generating TLK(%@) share for %@
iCloud account is present; checking HSA2 status
HSA2 is %@
iCloud account is not present: %@
octagon: unable to save new account state: %@
octagon: TPH was unable to determine current peer state: %@
octagon-consistency: Unable to fetch current account state due to lock state: %@
octagon-consistency: Unable to fetch current account state. Can't ensure consistency: %@
TPH's trust state (%@) is considered %@
TPH peer status matches cache: (%@)
octagon-consistency: Locally cached status (%@) does not match TPH's current peer status (%@)
TPH peer ID matches cache: (%@)
octagon-consistency: Locally cached peer ID (%@) does not match TPH's current peer ID (%@)
octagon-consistency: Unable to save new account state due to lock state: %@
octagon-consistency: Unable to save new account state. Erroring: %@
Saved new account metadata
Appear to be trusted for peer %@; ensuring correct state
Have iCloud account but not trusted in Octagon yet: %@; attempting SOS upgrade
Have iCloud account but not trusted in Octagon (%@)
Unknown trust state (%@). Assuming untrusted...
Posting a follow up (for Octagon) of type %@
Clearing follow ups (for Octagon) of type %@
Keybag unlocked
Error getting %@ from MobileGestalt
CloudKit reports there's more records to fetch!
No existing change token; going to try to match local items with CloudKit ones.
We have a fixup to perform: %@
Couldn't reset in-flight OQEs, bad behavior ahead: %@
Error examining existing key hierarchy: %@
No existing key hierarchy for %@. Check if there's one in CloudKit...
Requesting local data reset
Restricting local data reset to a view subset %@
Beginning local data reset for %@
Requesting reset of CK zone (logged in)
Restricting cloudkit zone reset to a view subset %@
Restricting cloudkit zone reset to active CKKS-managed subset %@
Beginning cloudkit zone reset for %@
CK account is not present
CloudKit account now present
No account available
CloudKit account is missing. Departing!
Staying in error state %@
Deleting the CloudKit Zones for %@
Resetting local data for %@
Beginning trusted state machine operation
Now operating on these views: %@
Kicking off a full key refetch based on request:%d
Kicking off a key refetch based on request
Kicking off a key reprocess based on request
In ready, but there's no trust; going into waitfortrust
Received a nudge that the trusted peers set might have changed! Reprocessing.
Launching a scan operation to find dropped items
Current state is %@, khf: %d
Kicking off a fetch based on request
Requesting TLK upload
Misbehaving key states: %@
Starting a key hierarchy full refetch
Creating new TLK shares didn't work. Attempting to refetch!
Looks like the key hierarchy is unhealthy, but we're untrusted.
Looks like the key hierarchy is unhealthy. Launching fix.
Going to process the incoming queue with a fresh policy
Zone does not yet exist: %@ %@
Incoming Queue item counts: %@
Unable to load key for %@: %@
Have pending classA items for view, but device is locked
Incoming Queue CIP count: %d
Unable to count CIPs: %@
Beginning again to include these views: %@
Couldn't count reencrypt OQEs, bad behavior ahead: %@
Zone not ready (%@): skipping reencryption
Syncing disabled for (%@): skipping incoming queue processing
Fetch last occurred at %@ (%@); beginning a new one
Fetch last occurred at %@ (for %@)
CKKS scan last occurred at %@; beginning a new one
CKKS scan last occurred at %@ (for %@)
Have %d outgoing items; scheduling upload
Error checking outgoing queue: %@
Unable to count mirror entries: %@
Unable to load keyset: %@
TLK is missing, but no trust is present.
No other devices claim to have the TLK. Resetting zone...
Resetting zones due to missing TLKs: %@
Trusted device state (%@) is too old; ignoring
Device (%@) is not trusted and from too long ago; ignoring device state (%@)
Device (%@) is not trusted, but very recent. Including in heuristic: %@
Other device (%@) has keys; it should send them to us
Error fetching device states: %@
Trusted TLK Share (%@) created recently; other devices have keys and should send them to us
Untrusted TLK Share (%@) created very recently; other devices might have keys and should rejoin the circle (and send them to us)
Skipping handleKeychainEventDbConnection due to disabled CKKS
Potential new key material from %@ (source %lu)
skipping sync of non-sync item (%d, %d)
Ignoring syncable keychain item for non-primary account
No policy configured. Skipping item: %@
No intended CKKS view for item; skipping: %@
No CKKS view for %@, skipping: %@
Routing item to zone %@: %@
skipping syncing update of tombstone item (%d, %d)
Client has asked for an item deletion to not sync. Keychain is now out of sync with account
Received an incoming %@ from SOS (%@)
Dropping sync item modification due to CK account state; will scan to find changes later
processKeychainEventItemAdded given garbage: %@ %@
Couldn't create outgoing queue entry: %@
Decided that no operation needs to occur for %@
Couldn't save outgoing queue entry to database: %@
Saved %@ to outgoing queue
Couldn't load OQE siblings for %@: %@
Couldn't find IQE matching %@: %@
Couldn't delete IQE matching %@: %@
Deleted IQE matching changed item %@
Cancelling request: %@
Rejecting current item pointer set since we don't have an iCloud account: %@
Starting change current pointer operation for %@-%@
Failed setting a current item pointer for %@ with %@
Finished setting a current item pointer for %@
Rejecting current item pointer get since no access group(%@) or identifier(%@) given
Rejecting current item pointer get since we don't have an iCloud account: %@
Rejecting current item pointer get since fetch failed: %@
No current item pointer for %@
Current item pointer is empty %@
Retrieved current item pointer: %@
Already have keyset %@
No current keyset for %@ (%@)
Received a set of %lu TLK upload records
Throwing away CKOperationGroup(%@) in favor of (%@)
rpcFetch failed: %@
rpcFetch succeeded
rpcFetchAndProcess failed: %@
No local TLKs for %@; failing a fetch rpc
Returning failure for waitForPriorityViews: %@
Returning success for waitForPriorityViews
waitForPriorityViews pending on %@
Havoc is now %@
Error getting PCS key hash for service %@: %@
Error finding inflight outgoing queue records: %@
Error fixing up inflight OQE(%@): %@
Received notification of CloudKit account status change, moving from %@ to %@
Computed status of new CK account info is same as old status: %@
Logged into iCloud.
Logging out of iCloud. Shutting down.
Account status has become undetermined. Pausing!
received a notification of CK login
Skipping CloudKit initialization due to disabled CKKS
received a notification of CK logout
Beginning trusted operation
Moving from an untrusted status; we need to process incoming queue and scan for any new items
Ending trusted operation
Nil syncing policy presented; ignoring
New syncing policy: %@ (%@) views: %@
Intersecting view list with allow list: %@
Final list: %@
Final list of externally-managed view names: %@
Syncing for %@ is now %@ (used to be %@) (policy: %@)
Stopping old view %@
Created %@ %@ view %@
Initializing a priority view for the first time
A priority view has more records in CloudKit; treating as new
Issuing scan suggestions to handle missed items
Restricting operation to priority views: %@
Not participating in fetch: not logged in
Not participating in fetch: zone not created yet
Not participating in fetch: zone is not active
skipping fetch for %@; zone is not ready
couldn't fetch zone change token for %@
Dropping fetch due to halted operation
In a resync, but there's More Coming. Waiting to scan for extra items.
Comparing local UUIDs against the CloudKit list
UUID %@ is still in CloudKit; carry on.
Couldn't read an item from the database, but it used to be there: %@ %@
Couldn't read ckme(%@) from database; continuing
BUG: Local item %@ not found in CloudKit, deleting
Couldn't save new server change token: %@
No record changes in this fetch
Beginning incoming processing for %@
Finished processing changes for %@
Received notice that our change token is out of date (for %@). Resetting local data...
Received notice that our zone(%@) does not exist. Resetting local data.
Received notice that our container does not exist. Nothing to do.
Received update that our self identity has changed
Received update that the trust set has changed
attempted to schedule an operation on a halted zone, ignoring
attempted to schedule an non-dependent operation on a halted zone, ignoring
Haven't yet received a syncing policy
Haven't yet initialized SecDb; expect failure
Rejecting %@ RPC since we don't have an iCloud account: %@
Haven't yet received a policy; failing %@
Haven't yet received a policy; expect failure later doing %@
Building status for %@
Status is %@
error loading keyset: %@
xpc: %@
retrieving epoch
octagon: Error getting epoch: %@
couldn't fetch list of remote keys: %@
After remote key processing, Key hierachy is '%@' (error: %@)
Checking consistency of key hierarchy
Key hierachy is '%@' (error: %@)
remote keys: %@
no current pointer for some keyclass: tlk:%@ a:%@ c:%@ %@ %@
Proposed TLK doesn't wrap self: %@
couldn't find active TLK: %@
Not proceeding due to trust system failure: %@
new key %@ is orphaned (%@)
Couldn't unwrap new key (%@), but keybag appears to be locked. Entering waitforunlock.
new key %@ claims to wrap to TLK, but we can't unwrap it: %@
New key %@ wraps to tlk %@
Couldn't save newly local key %@ keychain, due to lock state. Entering a waiting state; %@
couldn't save newly local key %@ to database: %@
triggering new TLK notification: %@
Accepted new key hierarchy
No existing key hierarchy (missing all CKPs): %@
Trust system reports device locked: %@
Error examining existing key hierarchy (missing at least one key): %@
Error loading TLK(%@): %@
Soft error loading TLK(%@), maybe locked: %@
Error loading classA key(%@): %@
Soft error loading classA key(%@), maybe locked: %@
Error loading classC(%@): %@
Key hierarchy unhealthy: %@
couldn't load old share for %@: %@
Couldn't save new TLK share to database: %@ %@
CloudKit notification: deleted tlk share record(%@): %@
CK notification: Couldn't delete deleted TLKShare: %@ %@
Zone is entering %@
Account is inherited, bailing out of healing TLKShares
Due to write failures, we'll retry later
View key state is %@; not checking TLK share validity
couldn't load current keys: can't fix TLK shares
Keychain is locked: can't fix shares yet: %@
couldn't load current tlk from keychain: %@
Unable to create shares for trust set %@: %@
Unable to create shares due to some trust issue: %@
Unable to create shares: %@
Don't believe we need to change any TLKShares, stopping
New shares won't resolve the share issue; erroring to avoid infinite loops: %@
Uploading %d new TLKShares
Uploading TLKShare to %@ (as %@)
Successfully completed upload for record %@
Completed TLK Share heal operation with success
Couldn't save new TLKShare record to database: %@
Completed TLK Share heal operation with error: %@
Failed to find peers for nonessential system: %@
New share set is missing shares for peers: %@
TLK not loaded; cannot make shares for peers: %@
Unable to find peers missing TLKShares: %@
Creating share of %@ as %@ for %@
Couldn't create new share for %@: %@
Couldn't find missing shares because trusted peers aren't available: %@
Couldn't find missing shares because self peers aren't available: %@
current self peer (%@) is not in the set of trusted peers: %@
Peer (%@) is not supposed to have view, skipping
Unable to load existing TLKShares for peer (%@): %@
Existing TLKShare's signature doesn't verify with current peer set: %@ %@
Local peer %@ is shared %@ via self: %@
Local peer %@ is shared %@ via trusted %@, but that's not good enough
Peer %@ is shared %@ via trusted %@
Peer %@ has a share for %@, but to old keys: %@
Missing TLK shares for %lu peers: %@
Self peers are (%@) %@
Trusted peers are (%@) %@
CKKSReencryptOutgoingItemsOperation cancelled, quitting
View is %@; reencryption will likely fail
Error fetching oqes from database: %@
Couldn't load 'new' OQE to determine status: %@
Have a new OQE superceding %@ (%@), skipping
Couldn't delete reencrypting OQE(%@) from database: %@
Reencrypting item %@
Couldn't find key in keychain; asking for reset: %@
Couldn't decrypt item %@: %@
Couldn't fetch key (%@) for item %@: %@
Couldn't fetch the current key for class %@: %@
Couldn't fetch ckme (%@) for item %@: %@
Couldn't encrypt under the new key %@: %@
Couldn't save newly-encrypted oqe %@: %@
CKKS: error fetching SecBackupKeybagEntry(%@): %@
Submitting initial CKEventMetric due to notification %@
Registering new CKKS push receiver: %@
sending stored push(%@) to newly-registered receiver: %@
received registration for released OctagonAPSReceiver
sending fake push to newly-registered cuttlefish receiver(%@): %@
OctagonAPSDelegate initiated: %@
Received per-topic push token "%@" for topic "%@" identifier "%@" on connection %@
OctagonAPSDelegate received a message(%@): %@ 
Received a cuttlefish push to container %@
received cuttlefish push for unregistered container: %@
received push for unregistered receiver: %@
unexpected notification: %@
Can't reset CloudKit zone for view %@: %@
Can't propose TLKs for view %@: %@
Unable to make TLK: %@
Unable to make fake class keys: %@
Unable to load old TLK: %@
Unable to convert old TLK: %@
Trying to set TLK %@
Wrapped old TLK: %@
TLKShares: %@
Unable to create CKP: %@
Unable to create class CKP: %@
Beginning upload for %d records
Completed uploading new TLK!
Can't fetch CloudKit zone for view %@: %@
Haven't successfully completed a fetch for this zone; returning %@
Error loading TLK pointer for this zone: %@
No TLK pointer for this zone
No TLK for this zone
Unable to load TLKShares for zone: %@
Can't modify CloudKit zone for view %@: %@
Unable to load currentTLK: %@
TLKShare is not for the current TLK(%@): %@
Unable to load TLKShare (to delete): %@ %@
Requested modifications are a no-op; claiming success
error proposing new TLK: %@
Completed modifying TLK share records!
couldn't wrap key: %@
loaded a piggy TLK (%@)
loaded a stashed TLK (%@)
Unable to unbase64 key: %@
Resaving %@ as per request
Resaving %@ failed: %@
SOSEnsureBackup: Backup already scheduled for next unlock
SOSEnsureBackup: Scheduling a backup for next unlock
Performing keychain backup after unlock because backing up while locked failed
SOSEnsureBackup: SOS made a backup of views: %@
engine: SOSEnsureBackup: encountered an error while making backup (%@)
TrustedPeersHelperSetupProtocol failed, continuing, but you might crash later: %@
Finishing state transition attempt %@
Beginning client state transition attempt %@
Running client %@ state machine request %@ (from %@)
moving to state done for %@
removing client connection for %@
OTCuttlefishContext: received a cuttlefish push notification (%@)
octagon: Can't talk with TrustedPeersHelper, update is lost: %@
OTCuttlefishContext: updating errored: %@
OTCuttlefishContext: update complete
Returning an epoch call: %llu  %@
Returning a voucher call: %@, %@, %@
Waiting for CKKS Priority view download for %@
received a zone change notification for %@ %@
Skipping fetching size no zone is ready
Halted; not starting a new fetch
Starting a new fetch, reasons: %@
No clients
blocking fetch on network reachability
Received a null self pointer; strange.
Interrogating clients about fetch error: %@
All clients thought %@ is a fatal error. Not restarting fetch.
Fetch failed with rate-limiting error, restarting in %.1f seconds: %@
Fetch failed with error, restarting soon: %@
CKKSNFS triggered!
upgrading persistent refs
hit an error, triggering CKKSNFS: %@
finished upgrading items!
waiting for trigger to occur
handling persistent ref flag, attempting to upgrade next batch
nothing to do
dropping class A metadata keys
dropping all metadata keys
SecDbKeychainItemV7: AKS decrypted metadata blob for class %d but could not turn it into a key: %@
SecDbKeychainItemV7: Unable to create key from retrieved data: %@
SecDbMetadataKeyStore: Unable to encrypt new metadata key to keybag: %@
SecDbMetadataKeyStore: Unable to encrypt new metadata key to backup infrastructure: %@
Failed to write new metadata key for %d: %@
Metadata key for %d has no or mismatching backup data; will rewrite.
No metadata key found on disk despite existing row. That's odd.
SecDbMetadataKeyStore: Unable to rewrite metadata key for %d to new format: %@
keyForKeyclass called without error param, this is a bug
SecDbKeychainItemV7: cannot decrypt metadata key because the keychain is locked (%ld)
SecDbMetadataKeyStore: Unable to load metadatakey for class %d from disk (%@) and not allowed to create new one
SecDbMetadataKeyStore: unable to use key (%ld), will attempt to create new one
SecDbMetadataKeyStore: unable to create or save new key: %@
SecDbMetadataKeyStore: scary error encountered: %@
genericMetric  %{public}@ with unhandled metric type: %{public}@
Beginning operation that preloads the SOSAccount with newly created Octagon Keys
finished creating zones
finished subscribing to zones
Halted; not launching operations
No pending zone modification operations; quitting
Have in-flight zone modification operations, will retry later
Attempting to create zones %@, delete zones %@
Zone modification failed: %@
created zones: %@
deleted zones: %@
Waiting for reachability before issuing zone creation
Attempting to subscribe to zones %@
Couldn't create cloudkit zone subscription; keychain syncing is severely degraded: %@
Successfully subscribed to %@
Waiting for reachability before issuing zone subscription
CK operation failed with rate-limit, scheduling delay for %.1f seconds: %@
SFKeychainServer: connection denied due to entitlement %@
SFKeychainServer: attempt to fetch credential with invalid persistent identifier; %@
SFKeychainServer: attempt to remove credential with invalid persistent identifier; %@
Beginning an 'reset CKKS' operation
Finishing a ckks-local-reset operation with %@
Finished ckks-local-reset with %@
Telling CloudServices about any pending requests
Trying again after unlock
No pending escrow request needs a certificate
escrowrequest: cloudservices reports an issue caching the certificate, so we'll have to try again later: %@
escrowrequest: unable to save the last attempt time: %@
escrowrequest: unable to save escrow update request certificate status, so we'll have to try again later: %@
CloudService successfully cached a certificate; request is ready for passcode
escrowrequest: unable to begin passcode request: %@
escrowrequest: sbd failed to cache a certificate
Attempting to reset octagon
Unable to reset for (%@,%@): %@
Successfully reset Octagon
Error resetting local account metadata state: %@
Successfully reset local account metadata state
sync and wait starting
failed sync and wait: %@
failed flush: %@
finished sync and wait
no stashed credential
returning stash credential: %@
SecKeyCreateWithData failed: %@
SOSAccountTryUserPrivateKey failed: %@
SOSAccountTryUserPrivateKey succeeded
failed final flush: %@
Failed to process credentials %@
trigger a forced sync for %@
No value found for SOSMonitorMode initializing to Active
Putting SOS into monitor mode
SOSMonitorMode is not turned on for this platform
Setting SOS to active
sosEvaluateIfNeeded - Turning on SOS since monitor mode is unavailable
sosEvaluateIfNeeded - checking circle
SOS is in monitor mode since the account key isn't trusted
Putting SOS into active mode for circle change
Putting SOS into monitor mode due to circle change
Changing DSID from: %@ to %@
Not Changing DSID: %@ to %@
Setting account.key_interests_need_updating to true in SOSAccountCreate
Setting Account to New
Setting account.key_interests_need_updating to true in SOSAccountSetToNew
Error cleaning up after peer, probably orphaned some stuff in KVS: (%@) 
 moving on
Reset to offering with last retirement and me as applicant
Reset to empty with last retirement
SOSFullPeerInfoPromoteToRetiredAndCopy error: %@
Create ticket failed for peer %@: %@
Couldn't post retirement (%@)
Couldn't flush retirement data (%@)
Reset backup ring %@ %s
successfully registered recovery public key
could not register recovery public key: %@
RK Cleared
Couldn't clear RK(%@)
Could not retrieve the recovery public key from the ring: %@
Normal path circle join (SOSAccountJoinCircles)
Joining after restore (SOSAccountJoinCirclesAfterRestore)
Attempting to remove peer set %@
Can't remove without userKey
Can't remove without being active peer
No peerSet to remove
Leaving circle by client request (SOSAccountRemovePeersFromCircle)
Removed Peers from circle %@
Attempting to leave circle - best effort - in %llu seconds
Leaving circle by client request (Bail)
Ensuring peer registration.
Failed to get trust object in Ensuring peer registration.
can't initialize transport for peer %@ with %@ (%@)
Updated retired peer %@ in %@
Error cleanup up after peer (%@): %@
key: %@
message keys that we should remove! %@
total keys: %lu, cleaning up %lu
Found %d TLKs
identities: %@
Making circle joining piggyback blob as sponsor (SOSAccountCopyCircleJoiningBlob)
Invalid circle status: %@ to accept piggyback as sponsor (SOSAccountCopyCircleJoiningBlob)
Peer application wasn't signed with the correct userKey
Failed to make circle joining piggyback blob as sponsor %@
Joining circles through piggyback (SOSAccountCopyCircleJoiningBlob)
Bad data blob: piggyback (SOSAccountCopyCircleJoiningBlob)
Failed - no private credential %@: piggyback (SOSAccountCopyCircleJoiningBlob)
Failed - decoding blob %@: piggyback (SOSAccountCopyCircleJoiningBlob)
setting flag in account for piggyback v0
clearing flag in account for piggyback v0
ACCOUNT: No Circle
Sync: %c%c PeerViews: %@
outstanding views: %@
timer fired!
coder is in awaiting state, restarting coder
Attempt to recover coder failed to restart: %@
coder restarted!
time fired but out of negotiation! Not restarting coder
SOSPeerRateLimiter timer went off! sending:%@ 
 to peer:%@
could not send message: %@
error grabbing engine for peer id: %@, error:%@
trigger backup for peers: %@ at %@
trigger ring update at %@
performing backup for %@
Failed to delete v0 keybag: %@
flush circles/rings failed %@
Entering state: %@ [flags: %@]
EFP calling SOSCloudKeychainSynchronizeAndWait
CloudCircle EFRESH
EFP returned, callback error: %@
EFP complete: %s %@
Starting
SecItemDelete: %d
Resetting circle to offering because it's empty and we're joining
attempt to join a circle we're in - continuing.
Resetting circle to offering since we are new and it doesn't verify with current userKey
Resetting my peer (ID: %@) for circle '%@' during application
Resetting circle to offering since there are no peers
Failed to join with cloud identity: %@
Got error in SOSCircleHasPeer: %@
SOSCloudKeychainGetObjectsFromCloud returned error: %@
SOSCloudKeychainRemoveKeys returned error: %@
SOSCloudKeychainPutObjectsInCloud returned error: %@
unable to fetch TLKs: %@
Failed to load TLK %@: %@
sending TLK %@
fetched TLK %@ with name %@
sending %d tlks
sending %d identities
preparing TLK in order: %@: %@
%@: Joining blob for account: %@ for piggyback (V%d) gencount: %@  pubkey: %@ signatureID: %@  starting circle hash: %@
Error during SOSAccountProcessBackupRings (%@)
Setting peerInfo backupKey to %@
Setting peerInfo backupKey to NULL
circle_rings_retirements_need_attention set to true since we got a BackupKey
failed to set V0 keybag (%@)
Not currently in circle
account backup key isn't valid: %@
Account backup key and peerinforef backup key don't match.  Using account backup key.
Failed to setup backup public key in peerInfo from account: %@
Got Success and Error (dropping error): %@
Got error setting keybag for backup view '%@': %@
Peer list contains a non-peerInfo element
failed to decode pbkdf2 params
%@ %@]
do not have an rtt yet
timeout dictionary doesn't exist
timeout for peerid: %@, doesn't exist
SOSAccountSetValue threw an error for key kSOSAccountPeerNegotiationTimeouts: %@
OTR negotiation retry count: %d
deadline value not available yet
decided to wait %d before restarting negotiation
setting timer for peer: %@
otrTimerFired fired
negotiation finished! clearing max retry counter
synced with peer: %@
failed to sync with peer: %@ error: %@
Skipped peer ID: %@ due to %@
Peer Sync failed: %@
Engine Backup Sync failed: %@
Not performing requested sync operation: not in circle yet
Syncing with KVS capable peer: %@
KVS sync %s. (%@)
Arming account to update SOSEngine with current trusted peers
Purging private account credential
Moving : %@ to previousAccountKey
not trusting new public key: %@
Setting private credential purge time to %llu minutes
Password cache expired
Failed to update user private key to keychain: %d
Failed to add user private key to keychain: %d
Stored user private key stashed local keychain
Password generated pubkey doesn't match - candidate: %@  known: %@
Looked for a stashed private key, didn't find one
Long password (>20 byte utf8) being used to derive account key 
 this may be a PET by mistake!!
Failed to publish new cloud parameters: %@
Setting account.key_interests_need_updating to true in SOSAccountAssertUserCredentials
Setting account.key_interests_need_updating to true in SOSAccountTryUserCredentials
Failed to accept provided user_private as credential
Setting account.key_interests_need_updating to true in SOSAccountTryUserPrivateKey
Accepted provided user_private as credential
trusting new public key: %@
Purging private entities for userKey
SOSAccountSetPrivateCredential nothing to save
setting new private userKey
temporarily caching userKey password
no userKey password to save
Timing out, purging private account credential
Failed to retrieve cloud parameters - %@
Failed to create correct key with password.  Caching for use with KeyParam refreshes
Already associated with ring
Failed to cleanup after peer %@ messages: %@
Failed to cleanup after peer %@ retirement: %@
Calling SOSCircleUpdatePeerInfo for %@
Signed Peerinfo to update
Failed updating PeerInfo
status: %ld
No private key associated with my_identity, resetting
Setting account.key_interests_need_updating to true in SOSAccountCreateFromDER
Error Processing expansion dictionary der - dropping account object
Setting backup key from metadata
Failed to set backup key from metadata - no key found
Non ring in ring table: %@, purging!
SOSAccountUpdateRingFromRemote called before signing in to new account
initial last circle status is: %d
new last circle status is: %d
posting kSOSCCCircleChangedNotification
UID: %d - Starting as:%s %@ v:%@
Unsynced was: %@
Unsynced is: %@
UID: %d - Finished as:%s %@ v:%@
Notified clients of kSOSCCCircleChangedNotification && kSOSCCViewMembershipChangedNotification for circle/view change
Notified clients of kSOSCCViewMembershipChangedNotification for viewchange(only)
Notified clients of kSOSCCCircleChangedNotification for userKey change
No longer trust user public key - prompting for password.
UserKey is once again trusted and we're valid in circle.
UID: %d - No account; running block on local thread
Self peer(%@) %@ CKKS For All
Peer %@ supports CKKS For All; ignoring in SOS syncing
Meta: %@: %@
My Meta: %@: %@
calling change block
SOSAccountHandleCircleMessage called before signing in to new account
NULL circle found, ignoring ...
Incompatible circle found, abandoning membership: %@
SOSAccountHandleParametersChange called before signing in to new account
SOSAccountHandleParametersChange got new public key: %@
Got same public key sent our way. Ignoring.
Got previous public key repeated. Ignoring.
Successfully used cached password with new parameters
Got new parameters for public key - could not find or use cached password
Setting account.key_interests_need_updating to true in SOSAccountHandleParametersChange
Haven't finished initial backup syncing, not registering backup metas with engine
No key to backup to, we don't enable individual view backups
View '%@' not being backed up 
 ring %@:%@ not backup ring.
Not ready, no peer meta: R: %@ Vs: %@
Backup peer meta: R: %@ Vs: %@ VD: %@
Failed to register backup meta from %@ for views %@. Error (%@)
Value provided not appropriate for a circle
No circle found in data: %@
Expected circle named %@, got %@
SOSCircleCreateFromData returned NULL.
adding sync block [%@] to array!
Views in sync: %@
not in circle nor applying: clearing pending
Pending views setting to all we can expect.
Unsynced: %@
Empty set, using NULL instead
Failure saving new unsynced value: %@ value: %@
Peer %@ synced views: %@
Setting up notifications to monitor in-sync
Couldn't find engine to setup notifications!!!
Cancelling notifications to monitor in-sync
No engine to cancel notification from.
Handling initial sync done.
Account could not add the pending view sets
updated view sets!
Could not update view sets
calling in sync block [%@]
Handling Required Backup Sync done
Warning, attempting to Add KeychainV0
Calling SOSCircleUpdatePeerInfo for gestalt change
reset all rings error: %@
Reset Rings to empty by client request
error: %@
Ring %@ not stable
start:[%s] modifier: %@
Ceasing ring handling for an echo of our own posted ring
##### No trusted peer signature found, accepting hoping for concordance later
##### No User Public Key Available, this shouldn't ever happen!!!
##### Bad Error Return from ConcordanceTrust
Decided on action [%s] based on concordance state [%@] and [%s] ring.
changing state to accept - we have a reset ring
mismatch between filteredPeerIDs and ringPeerIDSet, fixing ring and gensigning
filteredPeerIDs %@
  ringPeerIDSet %@
Backup ring contains no BSKB
BSKB is missing some backup keys
BSKB is missing recovery key
Need to fix BSKB - this will prompt a gensign
Couldn't fix BSKB (%@)
Already concur with newRing
concordance signed
Failed to concordance sign, error: %@
Reset ring for recovery from remote peer
normal ring recovery key harvest
   RePush: %@
Rejecting: %@
Have no old ring - would reset
Pushing:[%s] %@
Setting account.key_interests_need_updating to true in handleUpdateRing
Calling SOSCircleUpdatePeerInfo for views change
Enabling User Visible Views to match OT Settings
Disabling User Visible Views to match OT Settings
Attempt to set viewsets with no trusted circle
Attempt to set viewsets with no fullPeerInfo
No work to do
Couldn't copy PeerInfoRef
Unable to update peer to V2- can't update views: %@
Updating PeerInfo to V2 within SOSAccountUpdateViewSets
Enabling %@
Disabling %@
Bad view change (enable) with kSOSViewKeychainV0
Bad view change (disable) with kSOSViewKeychainV0
Calling SOSCircleUpdatePeerInfo for views or peerInfo change
Tried to set dataSourceEngine with no circle
%@ list: %@
No %@ list provided.
Unable to allocate ring
Unable to decode DER
Failed to set UUID: %@ (%@)
NULL Coder requested, no transport security
Coder create failed: %@
SOSCoderIsFor failed: %@
%@ %s %@ %@ returned %s
Resending OTR Start %@
%@ Decode OTR Protected Packet: %@
%@ Unknown packet type: %@
%@ %@ %s %@ %@ returned %s
Requesting too much space for digest vectors: %ld
reallocf failed requesting space for digest vectors: %ld (bytes)
Failed to get size of dictionary - %@
Failed to DER encode dictionary - %@
concordance trust (%s)
    knownRing: %@
 proposedRing: %@
knownkey: %@ userkey: %@ myPeerID: %@
SetRecoveryPublic: %@ from %@
SetRecoveryPublic Failed: %@
Recovery Key changed: old %@ new %@
SOSMessageSetManifests: setting base digest to %@ %zu
SOSMessageSetManifests: setting proposed digest to %@ %zu
SOSMessageSetManifests: setting sender digest to %@ %zu
internal error %td bytes unused in der buffer
der_encode_manifest_digest_message: encoded sender digest as %@
der_encode_manifest_message: encoded message additions as (%zu, %@)
der_encode_manifest_and_objects_message: encoded base digest as %@
der_decode_v0_message_body: received a DigestMessage with sender digest: %@
%td trailing bytes after deltas DER
der_decode_v0_message_body: received a ManifestMessage with (%zu, %@)
der_decode_manifest_and_objects_message: decoded base digest as %@
der_decode_message_header: decoded sender digest as %@
der_decode_message_header: decoded base digest as %@
der_decode_message_header: decoded proposed digest as %@
internal error %td bytes unused in generalizedtime DER buffer
%td trailing bytes after SOSMessage DER
%td length 
%td trailing bytes after objects DER
posting notification to CloudServices: %s
Unable to unlink file %s: %@
Handing off file %s of size %llu
Handing off file %s failed, %@
%@ keybag for backup unset
%@ backup bag: %@
%@ RM:%@ SR:%@ SA:%@ UR:%@
%@ C:%@ U:%@ O:%@
%@: willCommit R:%@ A:%@ UA:%@ %s O%s%@%s%@
bad change %@: %@
%@ had no views, inferring: %@
%@ unlinking journal file %s
%@ failed to write reset to backup journal: %@
%@ Wrote reset.
removing timer for peer: %@
%@ engine negotiating
%@ engine negotiation complete
%@ engine failed handling message %@
%@ engine stale event ignored
%@ engine received a message too soon, time to restart
%@ engine unknown coder state: %d
%@ getCoder: %@
coder state: %@
%@ Coder can wrap, getting message from engine
%@ SOSEngineCreateMessage_locked failed: %@
%@ SOSCoderWrap failed: %@
%@ negotiating, %@
coder is in awaiting state
coder not in awaiting state: %@
timer for coder already set: %@
concordance-signer-status: %@ -> %d
ring empty -> trusted
Error getting key parameters interests %@
Error getting circle interests %@
Error getting ring interests %@
Error getting debug key interests %@
Error getting message interests %@
Calculating interests done: %s
Updating interests: %@
 key-intrest: %@->%@: %@
Pushing %lu interests to CKP
Error updating keys: %@
SOSTransportDispatchMessages received kSOSKVSAccountChangedKey
Setting account to new because a new DSID is in KVS
Unknown key '%@', ignoring
Peer message processing error for: %@ -> %@ (%@)
Transport failed to handle new key parameters: %@
Transport failed to handle retirement messages: %@
No messages handled: %@
Flush failed: %@
Transport failed to handle circle messages: %@
Transport failed to process all circle messages: (%ld/%ld) %@
Transport handled no circle messages
Transport failed to handle ring messages: %@
Updates [%ld]: %@
Handled [%ld]: %@
Setting key_interests_need_updating to true in ensureCircle
start:[%s]
##### Can't update to a NULL circle ######
##### Can't replace circle - we don't care about it ######
Decided on action [%s] based on concordance state [%@] and [%s] circle.  My PeerID is %@
Leaving circle with peer %@
Key state: accountKey %@, previousAccountKey %@, old_circle_key %@
Leaving circle by newcircle state
Can't leave circle, but dumping identities
We are not in this circle, but we need to update account with it
Already concur with the new circle
Concurred with new circle
Failed to concurrence sign, error: %@
Not countersigning, not in new circle
Sending kSOSCCCircleOctagonKeysChangedNotification
Member of old circle but not of new circle (%d)
Purging my peer (ID: %@) for circle '%@'!!!
Rejected, Purging my applicant peer (ID: %@) for circle '%@'
Rejected, Reapplying (ID: %@) for circle '%@'
Fixed iCloud Identity in circle
Failed to fix broken icloud identity
%@, Accepting new circle
requesting readmission to new circle
Setting key_interests_need_updating to true in handleUpdateCircle
%@, Rejecting new circle, re-publishing old circle
%@, Rejecting: new circle Have no old circle - would reset
Pushing:[%s]
no change to userKey - skipping gensign
we changed the circle? %@
leaveCircleWithAccount: Leaving circle by client request
Leaving circle by client request
Resetting circle to offering by request from client
error resetting circle (%@) to offering: %@
circleOps: Cannot fetch signing key for old %@: %@
circleOps: Cannot fetch encryption key for old %@: %@
circleOps: Cannot fetch signing key for new %@: %@
circleOps: Cannot fetch encryption key for new %@: %@
Error, Key-Value for CircleMessage was not CFString/CFData
Error handling circle message %@ (%@): %@
Error putting: %@
Publishing Cloud Parameters
Tried to publish nil Cloud Parameters
SOSEngineHandleCodedMessage called before signing in to new account
otr negotiation completed! clearing max retry counter
Failed to handle message from peer %@: %@
Failed to turn a data gram into an SOSMessage: %@
coder handled a negotiation message
coder handled a error message: %d (error: %@)
peerID: %@ New OTR RTT: %d
peerID: %@ current date: %@, stored date: %@
rtt: %d
attribute list: %@
not going to rate limit, currently in initial sync
not in initial sync!
should send? : %@
peer is rate limited: %@
no message to send to peer: %@
number of attributes to review: %lu
accessGroup: %@, judged: %lu
setting a timer for next sync: %@
access group: %@ is being rate limited
no state for limiter for peer: %@
SOSPeerSetNextTimeToSend next time: %d
SOSPeerSetNextTimeToSend next time to sync: %llu
SOSTransportSendPendingMessage: could not send message: %@
SOSTransportSendPendingMessage: sent pending message: %@ for access group: %@
Failed request for account object
Bad SOSViewActionCode - %d
BEGIN [%lld]: SOSSignpostNameSOSCCViewSet  enableTelemetry=YES 
Cannot enable visible keychain views due to profile restrictions
 SOSSignpostNameSOSCCViewSet=%{public,signpost.telemetry:number1,name=SOSSignpostNameSOSCCViewSet}d 
SOSSignpostNameSOSCCViewSet
END [%lld] %fs: SOSSignpostNameSOSCCViewSet  SOSSignpostNameSOSCCViewSet=%{public,signpost.telemetry:number1,name=SOSSignpostNameSOSCCViewSet}d 
BEGIN [%lld]: SOSSignpostNameSyncTheLastDataToKVS  enableTelemetry=YES 
calling SOSCloudKeychainSynchronizeAndWait
SOSCloudKeychainSynchronizeAndWait: %@
returned from call; in callback to SOSCloudKeychainSynchronizeAndWait: results: %@
 SOSSignpostNameSyncTheLastDataToKVS=%{public,signpost.telemetry:number1,name=SOSSignpostNameSyncTheLastDataToKVS}d 
SOSSignpostNameSyncTheLastDataToKVS
END [%lld] %fs: SOSSignpostNameSyncTheLastDataToKVS  SOSSignpostNameSyncTheLastDataToKVS=%{public,signpost.telemetry:number1,name=SOSSignpostNameSyncTheLastDataToKVS}d 
Trying credentials and dsid (%@) for %@
BEGIN [%lld]: SOSSignpostNameSOSCCTryUserCredentials  enableTelemetry=YES 
Failed with SOSAccountTryUserCredentials() with initial known parameters %@
SOSCCTryUserCredentials_Server: No known parameters
SOSCCTryUserCredentials_Server: Trying again with EFRESH
Failed with SOSAccountTryUserCredentials() %@
 SOSSignpostNameSOSCCTryUserCredentials=%{public,signpost.telemetry:number1,name=SOSSignpostNameSOSCCTryUserCredentials}d 
SOSSignpostNameSOSCCTryUserCredentials
END [%lld] %fs: SOSSignpostNameSOSCCTryUserCredentials  SOSSignpostNameSOSCCTryUserCredentials=%{public,signpost.telemetry:number1,name=SOSSignpostNameSOSCCTryUserCredentials}d 
BEGIN [%lld]: SOSSignpostNameSOSCCCanAuthenticate  enableTelemetry=YES 
 SOSSignpostNameSOSCCCanAuthenticate=%{public,signpost.telemetry:number1,name=SOSSignpostNameSOSCCCanAuthenticate}d 
SOSSignpostNameSOSCCCanAuthenticate
END [%lld] %fs: SOSSignpostNameSOSCCCanAuthenticate  SOSSignpostNameSOSCCCanAuthenticate=%{public,signpost.telemetry:number1,name=SOSSignpostNameSOSCCCanAuthenticate}d 
BEGIN [%lld]: SOSSignpostNameSOSCCRequestToJoinCircle  enableTelemetry=YES 
 SOSSignpostNameSOSCCRequestToJoinCircle=%{public,signpost.telemetry:number1,name=SOSSignpostNameSOSCCRequestToJoinCircle}d 
SOSSignpostNameSOSCCRequestToJoinCircle
END [%lld] %fs: SOSSignpostNameSOSCCRequestToJoinCircle  SOSSignpostNameSOSCCRequestToJoinCircle=%{public,signpost.telemetry:number1,name=SOSSignpostNameSOSCCRequestToJoinCircle}d 
BEGIN [%lld]: SOSSignpostNameSOSCCRequestToJoinCircleAfterRestore  enableTelemetry=YES 
ensure peer registration error: %@
 SOSSignpostNameSOSCCRequestToJoinCircleAfterRestore=%{public,signpost.telemetry:number1,name=SOSSignpostNameSOSCCRequestToJoinCircleAfterRestore}d 
SOSSignpostNameSOSCCRequestToJoinCircleAfterRestore
END [%lld] %fs: SOSSignpostNameSOSCCRequestToJoinCircleAfterRestore  SOSSignpostNameSOSCCRequestToJoinCircleAfterRestore=%{public,signpost.telemetry:number1,name=SOSSignpostNameSOSCCRequestToJoinCircleAfterRestore}d 
BEGIN [%lld]: SOSSignpostNameSOSCCResetToOffering  enableTelemetry=YES 
 SOSSignpostNameSOSCCResetToOffering=%{public,signpost.telemetry:number1,name=SOSSignpostNameSOSCCResetToOffering}d 
SOSSignpostNameSOSCCResetToOffering
END [%lld] %fs: SOSSignpostNameSOSCCResetToOffering  SOSSignpostNameSOSCCResetToOffering=%{public,signpost.telemetry:number1,name=SOSSignpostNameSOSCCResetToOffering}d 
BEGIN [%lld]: SOSSignpostNameSOSCCResetToEmpty  enableTelemetry=YES 
 SOSSignpostNameSOSCCResetToEmpty=%{public,signpost.telemetry:number1,name=SOSSignpostNameSOSCCResetToEmpty}d 
SOSSignpostNameSOSCCResetToEmpty
END [%lld] %fs: SOSSignpostNameSOSCCResetToEmpty  SOSSignpostNameSOSCCResetToEmpty=%{public,signpost.telemetry:number1,name=SOSSignpostNameSOSCCResetToEmpty}d 
BEGIN [%lld]: SOSSignpostNameSOSCCRemoveThisDeviceFromCircle  enableTelemetry=YES 
 SOSSignpostNameSOSCCRemoveThisDeviceFromCircle=%{public,signpost.telemetry:number1,name=SOSSignpostNameSOSCCRemoveThisDeviceFromCircle}d 
SOSSignpostNameSOSCCRemoveThisDeviceFromCircle
END [%lld] %fs: SOSSignpostNameSOSCCRemoveThisDeviceFromCircle  SOSSignpostNameSOSCCRemoveThisDeviceFromCircle=%{public,signpost.telemetry:number1,name=SOSSignpostNameSOSCCRemoveThisDeviceFromCircle}d 
BEGIN [%lld]: SOSSignpostNameSOSCCRemovePeersFromCircle  enableTelemetry=YES 
 SOSSignpostNameSOSCCRemovePeersFromCircle=%{public,signpost.telemetry:number1,name=SOSSignpostNameSOSCCRemovePeersFromCircle}d 
SOSSignpostNameSOSCCRemovePeersFromCircle
END [%lld] %fs: SOSSignpostNameSOSCCRemovePeersFromCircle  SOSSignpostNameSOSCCRemovePeersFromCircle=%{public,signpost.telemetry:number1,name=SOSSignpostNameSOSCCRemovePeersFromCircle}d 
Signed into account!
circleOps: error delivering account-sign-in notification: %@
BEGIN [%lld]: SOSSignpostNameSOSCCLoggedOutOfAccount  enableTelemetry=YES 
Signed out of account!
 SOSSignpostNameSOSCCLoggedOutOfAccount=%{public,signpost.telemetry:number1,name=SOSSignpostNameSOSCCLoggedOutOfAccount}d 
SOSSignpostNameSOSCCLoggedOutOfAccount
END [%lld] %fs: SOSSignpostNameSOSCCLoggedOutOfAccount  SOSSignpostNameSOSCCLoggedOutOfAccount=%{public,signpost.telemetry:number1,name=SOSSignpostNameSOSCCLoggedOutOfAccount}d 
BEGIN [%lld]: SOSSignpostNameSOSCCCopyApplicantPeerInfo  enableTelemetry=YES 
 SOSSignpostNameSOSCCCopyApplicantPeerInfo=%{public,signpost.telemetry:number1,name=SOSSignpostNameSOSCCCopyApplicantPeerInfo}d 
SOSSignpostNameSOSCCCopyApplicantPeerInfo
END [%lld] %fs: SOSSignpostNameSOSCCCopyApplicantPeerInfo  SOSSignpostNameSOSCCCopyApplicantPeerInfo=%{public,signpost.telemetry:number1,name=SOSSignpostNameSOSCCCopyApplicantPeerInfo}d 
BEGIN [%lld]: SOSSignpostNameSOSCCCopyValidPeerPeerInfo  enableTelemetry=YES 
 SOSSignpostNameSOSCCCopyValidPeerPeerInfo=%{public,signpost.telemetry:number1,name=SOSSignpostNameSOSCCCopyValidPeerPeerInfo}d 
SOSSignpostNameSOSCCCopyValidPeerPeerInfo
END [%lld] %fs: SOSSignpostNameSOSCCCopyValidPeerPeerInfo  SOSSignpostNameSOSCCCopyValidPeerPeerInfo=%{public,signpost.telemetry:number1,name=SOSSignpostNameSOSCCCopyValidPeerPeerInfo}d 
BEGIN [%lld]: SOSSignpostNameSOSCCValidateUserPublic  enableTelemetry=YES 
 SOSSignpostNameSOSCCValidateUserPublic=%{public,signpost.telemetry:number1,name=SOSSignpostNameSOSCCValidateUserPublic}d 
SOSSignpostNameSOSCCValidateUserPublic
END [%lld] %fs: SOSSignpostNameSOSCCValidateUserPublic  SOSSignpostNameSOSCCValidateUserPublic=%{public,signpost.telemetry:number1,name=SOSSignpostNameSOSCCValidateUserPublic}d 
BEGIN [%lld]: SOSSignpostNameSOSCCCopyViewUnawarePeerInfo  enableTelemetry=YES 
 SOSSignpostNameSOSCCCopyViewUnawarePeerInfo=%{public,signpost.telemetry:number1,name=SOSSignpostNameSOSCCCopyViewUnawarePeerInfo}d 
SOSSignpostNameSOSCCCopyViewUnawarePeerInfo
END [%lld] %fs: SOSSignpostNameSOSCCCopyViewUnawarePeerInfo  SOSSignpostNameSOSCCCopyViewUnawarePeerInfo=%{public,signpost.telemetry:number1,name=SOSSignpostNameSOSCCCopyViewUnawarePeerInfo}d 
BEGIN [%lld]: SOSSignpostNameSOSCCWaitForInitialSync  enableTelemetry=YES 
Wait for initial sync start!
setting initial sync timeout to 5 minutes
setting initial sync timeout to %llu seconds
Finished!: %d
 SOSSignpostNameSOSCCWaitForInitialSync=%{public,signpost.telemetry:number1,name=SOSSignpostNameSOSCCWaitForInitialSync}d 
SOSSignpostNameSOSCCWaitForInitialSync
END [%lld] %fs: SOSSignpostNameSOSCCWaitForInitialSync  SOSSignpostNameSOSCCWaitForInitialSync=%{public,signpost.telemetry:number1,name=SOSSignpostNameSOSCCWaitForInitialSync}d 
BEGIN [%lld]: SOSSignpostNameSOSCCAcceptApplicants  enableTelemetry=YES 
 SOSSignpostNameSOSCCAcceptApplicants=%{public,signpost.telemetry:number1,name=SOSSignpostNameSOSCCAcceptApplicants}d 
SOSSignpostNameSOSCCAcceptApplicants
END [%lld] %fs: SOSSignpostNameSOSCCAcceptApplicants  SOSSignpostNameSOSCCAcceptApplicants=%{public,signpost.telemetry:number1,name=SOSSignpostNameSOSCCAcceptApplicants}d 
BEGIN [%lld]: SOSSignpostNameSOSCCCopyConcurringPeerPeerInfo  enableTelemetry=YES 
 SOSSignpostNameSOSCCCopyConcurringPeerPeerInfo=%{public,signpost.telemetry:number1,name=SOSSignpostNameSOSCCCopyConcurringPeerPeerInfo}d 
SOSSignpostNameSOSCCCopyConcurringPeerPeerInfo
END [%lld] %fs: SOSSignpostNameSOSCCCopyConcurringPeerPeerInfo  SOSSignpostNameSOSCCCopyConcurringPeerPeerInfo=%{public,signpost.telemetry:number1,name=SOSSignpostNameSOSCCCopyConcurringPeerPeerInfo}d 
BEGIN [%lld]: SOSSignpostNameSOSCCCopyMyPeerInfo  enableTelemetry=YES 
 SOSSignpostNameSOSCCCopyMyPeerInfo=%{public,signpost.telemetry:number1,name=SOSSignpostNameSOSCCCopyMyPeerInfo}d 
SOSSignpostNameSOSCCCopyMyPeerInfo
END [%lld] %fs: SOSSignpostNameSOSCCCopyMyPeerInfo  SOSSignpostNameSOSCCCopyMyPeerInfo=%{public,signpost.telemetry:number1,name=SOSSignpostNameSOSCCCopyMyPeerInfo}d 
BEGIN [%lld]: SOSSignpostNameSOSCCSetNewPublicBackupKey  enableTelemetry=YES 
SOSCCSetNewPublicBackupKey_Server acquiring account lock
SOSCCSetNewPublicBackupKey_Server acquired account lock
SOSCCSetNewPublicBackupKey_Server, new public backup is set in account
SOSCCSetNewPublicBackupKey_Server, new public backup is set and pushed
SOSCCSetNewPublicBackupKey_Server, could not set new public backup
 SOSSignpostNameSOSCCSetNewPublicBackupKey=%{public,signpost.telemetry:number1,name=SOSSignpostNameSOSCCSetNewPublicBackupKey}d 
SOSSignpostNameSOSCCSetNewPublicBackupKey
END [%lld] %fs: SOSSignpostNameSOSCCSetNewPublicBackupKey  SOSSignpostNameSOSCCSetNewPublicBackupKey=%{public,signpost.telemetry:number1,name=SOSSignpostNameSOSCCSetNewPublicBackupKey}d 
BEGIN [%lld]: SOSSignpostNameSOSCCRegisterSingleRecoverySecret  enableTelemetry=YES 
 SOSSignpostNameSOSCCRegisterSingleRecoverySecret=%{public,signpost.telemetry:number1,name=SOSSignpostNameSOSCCRegisterSingleRecoverySecret}d 
SOSSignpostNameSOSCCRegisterSingleRecoverySecret
END [%lld] %fs: SOSSignpostNameSOSCCRegisterSingleRecoverySecret  SOSSignpostNameSOSCCRegisterSingleRecoverySecret=%{public,signpost.telemetry:number1,name=SOSSignpostNameSOSCCRegisterSingleRecoverySecret}d 
Request for registering peers
BEGIN [%lld]: SOSSignpostNameSOSCCProcessEnsurePeerRegistration  enableTelemetry=YES 
 SOSSignpostNameSOSCCProcessEnsurePeerRegistration=%{public,signpost.telemetry:number1,name=SOSSignpostNameSOSCCProcessEnsurePeerRegistration}d 
SOSSignpostNameSOSCCProcessEnsurePeerRegistration
END [%lld] %fs: SOSSignpostNameSOSCCProcessEnsurePeerRegistration  SOSSignpostNameSOSCCProcessEnsurePeerRegistration=%{public,signpost.telemetry:number1,name=SOSSignpostNameSOSCCProcessEnsurePeerRegistration}d 
BEGIN [%lld]: SOSSignpostNameSOSCCProcessSyncWithPeers  enableTelemetry=YES 
 SOSSignpostNameSOSCCProcessSyncWithPeers=%{public,signpost.telemetry:number1,name=SOSSignpostNameSOSCCProcessSyncWithPeers}d 
SOSSignpostNameSOSCCProcessSyncWithPeers
END [%lld] %fs: SOSSignpostNameSOSCCProcessSyncWithPeers  SOSSignpostNameSOSCCProcessSyncWithPeers=%{public,signpost.telemetry:number1,name=SOSSignpostNameSOSCCProcessSyncWithPeers}d 
BEGIN [%lld]: SOSSignpostNameSOSCCProcessSyncWithAllPeers  enableTelemetry=YES 
SOSAccountSyncWithAllKVSPeers failed because device is locked; letting CloudKeychainProxy know
Unexpected error: %@
 SOSSignpostNameSOSCCProcessSyncWithAllPeers=%{public,signpost.telemetry:number1,name=SOSSignpostNameSOSCCProcessSyncWithAllPeers}d 
SOSSignpostNameSOSCCProcessSyncWithAllPeers
END [%lld] %fs: SOSSignpostNameSOSCCProcessSyncWithAllPeers  SOSSignpostNameSOSCCProcessSyncWithAllPeers=%{public,signpost.telemetry:number1,name=SOSSignpostNameSOSCCProcessSyncWithAllPeers}d 
Bad element, skipping: %@
CloudCircle RequestSyncWithPeersList
BEGIN [%lld]: SOSSignpostNameSOSCCRequestSyncWithPeersList  enableTelemetry=YES 
Request Sync With: %@
 SOSSignpostNameSOSCCRequestSyncWithPeersList=%{public,signpost.telemetry:number1,name=SOSSignpostNameSOSCCRequestSyncWithPeersList}d 
SOSSignpostNameSOSCCRequestSyncWithPeersList
END [%lld] %fs: SOSSignpostNameSOSCCRequestSyncWithPeersList  SOSSignpostNameSOSCCRequestSyncWithPeersList=%{public,signpost.telemetry:number1,name=SOSSignpostNameSOSCCRequestSyncWithPeersList}d 
CloudCircle SOSCCRequestSyncWithBackupPeerList
BEGIN [%lld]: SOSSignpostNameSOSCCRequestSyncWithBackupPeerList  enableTelemetry=YES 
Request backup sync With: %@
 SOSSignpostNameSOSCCRequestSyncWithBackupPeerList=%{public,signpost.telemetry:number1,name=SOSSignpostNameSOSCCRequestSyncWithBackupPeerList}d 
SOSSignpostNameSOSCCRequestSyncWithBackupPeerList
END [%lld] %fs: SOSSignpostNameSOSCCRequestSyncWithBackupPeerList  SOSSignpostNameSOSCCRequestSyncWithBackupPeerList=%{public,signpost.telemetry:number1,name=SOSSignpostNameSOSCCRequestSyncWithBackupPeerList}d 
CloudCircle EnsurePeerRegistration
BEGIN [%lld]: SOSSignpostNameSOSCCEnsurePeerRegistration  enableTelemetry=YES 
 SOSSignpostNameSOSCCEnsurePeerRegistration=%{public,signpost.telemetry:number1,name=SOSSignpostNameSOSCCEnsurePeerRegistration}d 
SOSSignpostNameSOSCCEnsurePeerRegistration
END [%lld] %fs: SOSSignpostNameSOSCCEnsurePeerRegistration  SOSSignpostNameSOSCCEnsurePeerRegistration=%{public,signpost.telemetry:number1,name=SOSSignpostNameSOSCCEnsurePeerRegistration}d 
BEGIN [%lld]: SOSSignpostNameSOSCCHandleUpdateMessage  enableTelemetry=YES 
 SOSSignpostNameSOSCCHandleUpdateMessage=%{public,signpost.telemetry:number1,name=SOSSignpostNameSOSCCHandleUpdateMessage}d 
SOSSignpostNameSOSCCHandleUpdateMessage
END [%lld] %fs: SOSSignpostNameSOSCCHandleUpdateMessage  SOSSignpostNameSOSCCHandleUpdateMessage=%{public,signpost.telemetry:number1,name=SOSSignpostNameSOSCCHandleUpdateMessage}d 
BEGIN [%lld]: SOSSignpostNameSOSCCCopyApplication  enableTelemetry=YES 
 SOSSignpostNameSOSCCCopyApplication=%{public,signpost.telemetry:number1,name=SOSSignpostNameSOSCCCopyApplication}d 
SOSSignpostNameSOSCCCopyApplication
END [%lld] %fs: SOSSignpostNameSOSCCCopyApplication  SOSSignpostNameSOSCCCopyApplication=%{public,signpost.telemetry:number1,name=SOSSignpostNameSOSCCCopyApplication}d 
 enableTelemetry=YES 
BEGIN [%lld]: SOSSignpostNameSOSCCCopyCircleJoiningBlob  enableTelemetry=YES 
 SOSSignpostNameSOSCCCopyCircleJoiningBlob=%{public,signpost.telemetry:number1,name=SOSSignpostNameSOSCCCopyCircleJoiningBlob}d 
SOSSignpostNameSOSCCCopyCircleJoiningBlob
END [%lld] %fs: SOSSignpostNameSOSCCCopyCircleJoiningBlob  SOSSignpostNameSOSCCCopyCircleJoiningBlob=%{public,signpost.telemetry:number1,name=SOSSignpostNameSOSCCCopyCircleJoiningBlob}d 
BEGIN [%lld]: SOSSignpostNameSOSCCCopyInitialSyncData  enableTelemetry=YES 
 SOSSignpostNameSOSCCCopyInitialSyncData=%{public,signpost.telemetry:number1,name=SOSSignpostNameSOSCCCopyInitialSyncData}d 
SOSSignpostNameSOSCCCopyInitialSyncData
END [%lld] %fs: SOSSignpostNameSOSCCCopyInitialSyncData  SOSSignpostNameSOSCCCopyInitialSyncData=%{public,signpost.telemetry:number1,name=SOSSignpostNameSOSCCCopyInitialSyncData}d 
BEGIN [%lld]: SOSSignpostNameSOSCCJoinWithCircleJoiningBlob  enableTelemetry=YES 
 SOSSignpostNameSOSCCJoinWithCircleJoiningBlob=%{public,signpost.telemetry:number1,name=SOSSignpostNameSOSCCJoinWithCircleJoiningBlob}d 
SOSSignpostNameSOSCCJoinWithCircleJoiningBlob
END [%lld] %fs: SOSSignpostNameSOSCCJoinWithCircleJoiningBlob  SOSSignpostNameSOSCCJoinWithCircleJoiningBlob=%{public,signpost.telemetry:number1,name=SOSSignpostNameSOSCCJoinWithCircleJoiningBlob}d 
BEGIN [%lld]: SOSSignpostNameSOSCCPeersHaveViewsEnabled  enableTelemetry=YES 
 SOSSignpostNameSOSCCPeersHaveViewsEnabled=%{public,signpost.telemetry:number1,name=SOSSignpostNameSOSCCPeersHaveViewsEnabled}d 
SOSSignpostNameSOSCCPeersHaveViewsEnabled
END [%lld] %fs: SOSSignpostNameSOSCCPeersHaveViewsEnabled  SOSSignpostNameSOSCCPeersHaveViewsEnabled=%{public,signpost.telemetry:number1,name=SOSSignpostNameSOSCCPeersHaveViewsEnabled}d 
BEGIN [%lld]: SOSSignpostNameSOSCCRegisterRecoveryPublicKey  enableTelemetry=YES 
 SOSSignpostNameSOSCCRegisterRecoveryPublicKey=%{public,signpost.telemetry:number1,name=SOSSignpostNameSOSCCRegisterRecoveryPublicKey}d 
SOSSignpostNameSOSCCRegisterRecoveryPublicKey
END [%lld] %fs: SOSSignpostNameSOSCCRegisterRecoveryPublicKey  SOSSignpostNameSOSCCRegisterRecoveryPublicKey=%{public,signpost.telemetry:number1,name=SOSSignpostNameSOSCCRegisterRecoveryPublicKey}d 
BEGIN [%lld]: SOSSignpostNameSOSCCCopyRecoveryPublicKey  enableTelemetry=YES 
 SOSSignpostNameSOSCCCopyRecoveryPublicKey=%{public,signpost.telemetry:number1,name=SOSSignpostNameSOSCCCopyRecoveryPublicKey}d 
SOSSignpostNameSOSCCCopyRecoveryPublicKey
END [%lld] %fs: SOSSignpostNameSOSCCCopyRecoveryPublicKey  SOSSignpostNameSOSCCCopyRecoveryPublicKey=%{public,signpost.telemetry:number1,name=SOSSignpostNameSOSCCCopyRecoveryPublicKey}d 
BEGIN [%lld]: SOSSignpostNameSOSCCMessageFromPeerIsPending  enableTelemetry=YES 
 SOSSignpostNameSOSCCMessageFromPeerIsPending=%{public,signpost.telemetry:number1,name=SOSSignpostNameSOSCCMessageFromPeerIsPending}d 
SOSSignpostNameSOSCCMessageFromPeerIsPending
END [%lld] %fs: SOSSignpostNameSOSCCMessageFromPeerIsPending  SOSSignpostNameSOSCCMessageFromPeerIsPending=%{public,signpost.telemetry:number1,name=SOSSignpostNameSOSCCMessageFromPeerIsPending}d 
BEGIN [%lld]: SOSSignpostNameSOSCCSendToPeerIsPending  enableTelemetry=YES 
 SOSSignpostNameSOSCCSendToPeerIsPending=%{public,signpost.telemetry:number1,name=SOSSignpostNameSOSCCSendToPeerIsPending}d 
SOSSignpostNameSOSCCSendToPeerIsPending
END [%lld] %fs: SOSSignpostNameSOSCCSendToPeerIsPending  SOSSignpostNameSOSCCSendToPeerIsPending=%{public,signpost.telemetry:number1,name=SOSSignpostNameSOSCCSendToPeerIsPending}d 
error resetting otr negotation: %@
error sending next message: %@
device does not have a peer
SOSCCPerformWithAllOctagonKeys signing key error: %@
SOSCCPerformWithAllOctagonKeys encryption key error: %@
Ensuring key agrp ('%@' from '%@') status: %d
octagon: failed to save Octagon keys to the keychain: %@
octagon: Failed to set Octagon Keys in peerInfo: %@
No peer info to update?
Success! Upated Octagon keys in SOS!
octagon-preload-keys: failed to save Octagon keys to the keychain: %@
No SOSAccount to update?
Success! Octagon Keys Preloaded!
SOSCCAccountTriggerSyncWithBackupPeer_server: %@
Failed to load account: %@
Cannot inflate account object as root
Change block called with no peerInfo
Change block called while not in circle
Requesting Ensure Peer Registration.
Not requesting Ensure Peer Registration, since it's not needed
Had trouble removing: %@, error: %@
peer counts changed, posting kSOSCCCircleChangedNotification
Error handling updates: %@
Failed to transform account into data, error: %@
Changed our peer's gestalt information.  This is not a circle change.
Got error inflating account: %@
Got NULL creating account
Can't save account: %@
BEGIN [%lld]: SOSSignpostNameSyncKVSAndWait  enableTelemetry=YES 
 SOSSignpostNameSyncKVSAndWait=%{public,signpost.telemetry:number1,name=SOSSignpostNameSyncKVSAndWait}d 
SOSSignpostNameSyncKVSAndWait
END [%lld] %fs: SOSSignpostNameSyncKVSAndWait  SOSSignpostNameSyncKVSAndWait=%{public,signpost.telemetry:number1,name=SOSSignpostNameSyncKVSAndWait}d 
BEGIN [%lld]: SOSSignpostNameFlush  enableTelemetry=YES 
Returned %s
 SOSSignpostNameFlush=%{public,signpost.telemetry:number1,name=SOSSignpostNameFlush}d 
SOSSignpostNameFlush
END [%lld] %fs: SOSSignpostNameFlush  SOSSignpostNameFlush=%{public,signpost.telemetry:number1,name=SOSSignpostNameFlush}d 
Setting credentials and dsid (%@) for %@.  UID is %d
BEGIN [%lld]: SOSSignpostNameAssertUserCredentialsAndOptionalDSID  enableTelemetry=YES 
Complete credentials and dsid (%@) for %@: %d %@
 SOSSignpostNameAssertUserCredentialsAndOptionalDSID=%{public,signpost.telemetry:number1,name=SOSSignpostNameAssertUserCredentialsAndOptionalDSID}d 
SOSSignpostNameAssertUserCredentialsAndOptionalDSID
END [%lld] %fs: SOSSignpostNameAssertUserCredentialsAndOptionalDSID  SOSSignpostNameAssertUserCredentialsAndOptionalDSID=%{public,signpost.telemetry:number1,name=SOSSignpostNameAssertUserCredentialsAndOptionalDSID}d 
Cannot have visible keychain views due to profile restrictions
octagon: could not save signing key: %@
octagon: could not save encryption key: %@
Could not create version number
Could not create ring identifier
SOSRingEnsureRingConsistency requires ring membership and generation count consistency check
sos: SOS have not launched yet, come later, pid: %d
sos: Client pid: %d doesn't have entitlement: %@
%@ KVSTransport handle message failed: %@
circleChange: No extant octagon signing key
circleChange: No extant octagon encryption key
circleChange: Error fetching Octagon signing key: %@
Already have Octagon signing key
circleChange: Error creating Octagon signing key: %@
circleChange: Error upgrading Octagon signing key: %@
Successfully created new Octagon signing key
error is too scary, not creating new Octagon signing key: %@
circleChange: Error fetching Octagon encryption key: %@
Already have Octagon encryption key
circleChange: Error creating Octagon encryption key: %@
circleChange: Error upgrading Octagon encryption key: %@
Successfully created new Octagon encryption key
error is too scary, not creating new Octagon encryption key: %@
FullPeerInfo has no matching private key - resetting FPI and attendant keys
Failed to copy peer public key for account object
No full_key: %@:
Couldn't purge persistent keys for %@ [%@]
@16@0:8
B24@0:8^{rusage_info_v5=[16C]QQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQ}16
B16@0:8
Q24@0:8Q16
v16@0:8
B32@0:8@16^@24
@"NSObject<OS_dispatch_source>"
@24@0:8@16
v24@0:8@16
@"NSObject<OS_os_transaction>"
v40@0:8@16@24@?32
v80@0:8@16@24@32@40@48@56@64@?72
v52@0:8@16@24@32B40@?44
v32@0:8@16@?24
v28@0:8B16@?20
v24@0:8@?16
@24@0:8^{SecurityClient=^{__SecTask}^{__CFArray}BBBBI^{__CFData}BB^{__CFString}}16
B24@0:8@16
{SecurityClient="task"^{__SecTask}"accessGroups"^{__CFArray}"allowSystemKeychain"B"allowSyncBubbleKeychain"B"isNetworkExtension"B"canAccessNetworkExtensionAccessGroups"B"uid"I"musr"^{__CFData}"inMultiUser"B"isAppClip"B"applicationIdentifier"^{__CFString}}
@"NSXPCConnection"
@32@0:8^{SecurityClient=^{__SecTask}^{__CFArray}BBBBI^{__CFData}BB^{__CFString}}16@24
@"NSMutableDictionary"
#16@0:8
@24@0:8:16
@32@0:8:16@24
@40@0:8:16@24@32
B24@0:8#16
B24@0:8:16
Vv16@0:8
Q16@0:8
^{_NSZone=}16@0:8
B24@0:8@"Protocol"16
@"NSString"16@0:8
v40@0:8@"NSDictionary"16@"<SecuritydXPCCallbackProtocol>"24@?<v@?@"NSDictionary"@"NSArray"@"NSError">32
v80@0:8@"NSData"16@"NSData"24@"NSString"32@"NSString"40@"NSString"48@"NSData"56@"NSData"64@?<v@?@"NSError">72
v52@0:8@"NSString"16@"NSString"24@"NSString"32B40@?<v@?@"NSData"@"NSError">44
v40@0:8@"NSString"16@"NSString"24@?<v@?@"NSArray"@"NSError">32
v32@0:8@"NSData"16@?<v@?B@"NSError">24
v28@0:8B16@?<v@?@"NSDictionary"@"NSError">20
v32@0:8@"NSString"16@?<v@?i>24
v40@0:8@"NSString"16@"NSString"24@?<v@?i>32
v24@0:8@?<v@?i@"NSError">16
B32@0:8@16@24
B32@0:8@"NSXPCListener"16@"NSXPCConnection"24
@"NSXPCListener"
@24@0:8^{_NSZone=}16
@"NSData"
I16@0:8
v20@0:8I16
B20@0:8i16
v20@0:8i16
@40@0:8@16@24^@32
@"_SFAESKey"
v32@0:8@16@24
v64@0:8@16@24@32@40@48@56
@32@0:8Q16@24
@32@0:8Q16@?24
@40@0:8@16@24@32
@"NSString"
@"NSObject<OS_dispatch_queue>"
@"KeychainItemUpgradeRequestController"
v48@0:8@16@24@32@?40
v48@0:8@16@24q32@?40
v156@0:8@16@24Q32@40@48@56@64@72@80@88@96@104i112@116@124@132@140@?148
v64@0:8@16@24@32@40@48@?56
v88@0:8@16@24@32@40@48@56@64@72@?80
v72@0:8@16@24@32@40@48@56@?64
v56@0:8@16@24@32@40@?48
v100@0:8@16@24B32@36@44@52@60@68@76@84@?92
v44@0:8@16@24B32@?36
v76@0:8@16@24@32@40@48@56i64@?68
v52@0:8@16@24B32@36@?44
v24@0:8@?<v@?>16
v40@0:8@"NSString"16@"NSString"24@?<v@?@"NSDictionary"@"NSError">32
v40@0:8@"NSString"16@"NSString"24@?<v@?@"NSError">32
v48@0:8@"NSString"16@"NSString"24@"NSSet"32@?<v@?@"NSError">40
v40@0:8@"NSString"16@"NSString"24@?<v@?@"TrustedPeersHelperEgoPeerStatus"@"NSError">32
v48@0:8@"NSString"16@"NSString"24q32@?<v@?@"NSError">40
v52@0:8@"NSString"16@"NSString"24@"NSSet"32B40@?<v@?B@"NSError">44
v48@0:8@"NSString"16@"NSString"24@"NSArray"32@?<v@?@"NSError">40
v40@0:8@"NSString"16@"NSString"24@?<v@?@"NSSet"@"NSError">32
v40@0:8@"NSString"16@"NSString"24@?<v@?Q@"NSError">32
v156@0:8@"NSString"16@"NSString"24Q32@"NSString"40@"NSString"48@"NSString"56@"NSString"64@"NSString"72@"NSString"80@"NSString"88@"TPPolicyVersion"96@"NSDictionary"104i112@"TPPBSecureElementIdentity"116@"OTAccountSettingsX"124@"NSData"132@"NSData"140@?<v@?@"NSString"@"NSData"@"NSData"@"NSData"@"NSData"@"TPSyncingPolicy"@"NSError">148
v156@0:8@"NSString"16@"NSString"24Q32@"NSString"40@"NSString"48@"NSString"56@"NSString"64@"NSString"72@"NSString"80@"NSString"88@"TPPolicyVersion"96@"NSDictionary"104i112@"TPPBSecureElementIdentity"116@"NSData"124@"NSData"132@"TrustedPeersHelperCustodianRecoveryKey"140@?<v@?@"NSString"@"NSData"@"NSData"@"NSData"@"NSData"@"TPSyncingPolicy"@"NSString"@"NSArray"@"NSError">148
v64@0:8@"NSString"16@"NSString"24@"NSArray"32@"NSArray"40@"NSArray"48@?<v@?@"NSString"@"NSArray"@"TPSyncingPolicy"@"NSError">56
v88@0:8@"NSString"16@"NSString"24@"NSString"32@"NSData"40@"NSData"48@"NSData"56@"NSData"64@"NSArray"72@?<v@?@"NSData"@"NSData"@"NSError">80
v48@0:8@"NSString"16@"NSString"24@"NSString"32@?<v@?@"NSString"@"TPSyncingPolicy"B@"NSError">40
v72@0:8@"NSString"16@"NSString"24@"NSString"32@"NSData"40@"NSString"48@"NSArray"56@?<v@?@"NSData"@"NSData"@"NSArray"@"TrustedPeersHelperTLKRecoveryResult"@"NSError">64
v56@0:8@"NSString"16@"NSString"24@"NSString"32@"NSString"40@?<v@?@"NSString"@"TPSyncingPolicy"@"NSError">48
v48@0:8@"NSString"16@"NSString"24@"TrustedPeersHelperCustodianRecoveryKey"32@?<v@?@"NSString"@"TPSyncingPolicy"@"NSError">40
v64@0:8@"NSString"16@"NSString"24@"NSString"32@"NSString"40@"NSArray"48@?<v@?@"NSData"@"NSData"@"NSArray"@"TrustedPeersHelperTLKRecoveryResult"@"NSError">56
v56@0:8@"NSString"16@"NSString"24@"TrustedPeersHelperCustodianRecoveryKey"32@"NSArray"40@?<v@?@"NSArray"@"TrustedPeersHelperTLKRecoveryResult"@"NSError">48
v56@0:8@"NSString"16@"NSString"24@"TrustedPeersHelperCustodianRecoveryKey"32@"NSArray"40@?<v@?@"NSData"@"NSData"@"NSArray"@"TrustedPeersHelperTLKRecoveryResult"@"NSError">48
v80@0:8@"NSString"16@"NSString"24@"NSData"32@"NSData"40@"NSArray"48@"NSArray"56@"NSArray"64@?<v@?@"NSString"@"NSArray"@"TPSyncingPolicy"@"NSError">72
v48@0:8@"NSString"16@"NSString"24@"NSArray"32@?<v@?B@"NSError">40
v100@0:8@"NSString"16@"NSString"24B32@"NSString"36@"NSString"44@"NSString"52@"NSNumber"60@"NSDictionary"68@"NSNumber"76@"TrustedPeersHelperIntendedTPPBSecureElementIdentity"84@?<v@?@"TrustedPeersHelperPeerState"@"TPSyncingPolicy"@"NSError">92
v48@0:8@"NSString"16@"NSString"24@"NSArray"32@?<v@?@"TrustedPeersHelperPeerState"@"NSError">40
v56@0:8@"NSString"16@"NSString"24@"NSArray"32@"NSArray"40@?<v@?@"NSArray"@"NSError">48
v40@0:8@"NSString"16@"NSString"24@?<v@?@"NSArray"@"NSArray"@"NSError">32
v44@0:8@"NSString"16@"NSString"24B32@?<v@?@"NSArray"@"NSError">36
v40@0:8@"NSString"16@"NSString"24@?<v@?@"NSData"@"NSString"@"NSData"@"NSError">32
v48@0:8@"NSString"16@"NSString"24@"NSSet"32@?<v@?@"NSDictionary"@"NSError">40
v48@0:8@"NSString"16@"NSString"24@"NSString"32@?<v@?@"NSArray"@"NSError">40
v52@0:8@"NSString"16@"NSString"24@"NSString"32B40@?<v@?@"TPSyncingPolicy"i@"NSError">44
v40@0:8@"NSString"16@"NSString"24@?<v@?@"TrustedPeersHelperPeerState"@"NSArray"@"NSError">32
v64@0:8@"NSString"16@"NSString"24@"NSString"32@"NSString"40@"NSArray"48@?<v@?@"NSArray"@"NSError">56
v76@0:8@"NSString"16@"NSString"24@"NSString"32@"NSString"40@"NSArray"48@"NSUUID"56i64@?<v@?@"NSArray"@"TrustedPeersHelperCustodianRecoveryKey"@"NSError">68
v48@0:8@"NSString"16@"NSString"24@"NSUUID"32@?<v@?@"NSError">40
v56@0:8@"NSString"16@"NSString"24@"NSString"32@"NSString"40@?<v@?@"NSError">48
v52@0:8@"NSString"16@"NSString"24B32@"NSArray"36@?<v@?BBBB@"OTEscrowMoveRequestContext"@"NSError">44
v40@0:8@"NSString"16@"NSString"24@?<v@?@"NSData"@"NSError">32
@"<NSXPCProxyCreating>"
@"NSString<OctagonStateString>"16@0:8
v24@0:8@"NSString<OctagonStateString>"16
@52@0:8@16i24@28@36@44
i16@0:8
@"NSString<OctagonStateString>"
@"OTOperationDependencies"
v20@0:8B16
@20@0:8i16
i24@0:8@16
v24@0:8q16
v24@0:8Q16
@24@0:8Q16
q16@0:8
@"OTAccountMetadataClassCAccountSettings"
@"NSMutableArray"
{?="epoch"b1"lastHealthCheckup"b1"attemptedJoin"b1"cdpState"b1"icloudAccountState"b1"trustState"b1"isInheritedAccount"b1"warmedEscrowCache"b1"warnedTooManyPeers"b1}
@28@0:8@16B24
@32@0:8@16@24
@"NSArray"
@"NSSet"
@"CKKSKeychainView"
@"NSOperation"
@40@0:8@16q24@32
@48@0:8@16q24@32@40
{?="w"b1"webAccess"b1}
B48@0:8@16@24^{__OpaqueSecDbConnection=}32^@40
v40@0:8^{sqlite3_stmt=}16@24^^{__CFError}32
B80@0:8@16@24@32@40@48q56@?64^@72
B56@0:8@16@24@32@40@?48
B24@0:8@?16
B24@0:8^@16
@32@0:8@16^@24
@24@0:8^@16
@32@0:8Q16^@24
@40@0:8Q16@24^@32
@48@0:8Q16@24@32^@40
B32@0:8^{__OpaqueSecDbConnection=}16^@24
@"NSDictionary"
@32@0:8Q16Q24
v24@0:8@"NSCoder"16
@24@0:8@"NSCoder"16
i20@0:8i16
@36@0:8@16i24@28
i40@0:8@16@24^@32
@"NSDate"
@"CKKSResultOperation<OctagonStateTransitionOperationProtocol>"40@0:8@"NSString<OctagonStateString>"16@"OctagonFlags"24@"<OctagonStateOnqueuePendingFlagHandler>"32
@"OctagonStateMachine"
@"CKKSLockStateTracker"
v24@0:8@"<OTDeviceInformationNameUpdateListener>"16
^{__SCDynamicStore=}16@0:8
v24@0:8^{__SCDynamicStore=}16
@"CKKSListenerCollection"
^{__SCDynamicStore=}
B72@0:8i16i20@24^i32@40r^v48Q56^@64
@24@0:8q16
B24@0:8Q16
@"NSObject<OS_dispatch_semaphore>"24@0:8@"<CKKSCloudKitAccountStateListener>"16
v24@0:8@"NSString"16
@"OTCliqueStatusWrapper"16@0:8
@32@0:8@16#24
v48@0:8@16@24@32@40
@"CKKSCondition"
@"CKKSNearFutureScheduler"
@"CKAccountInfo"
@"NSError"
@"SOSAccountStatus"
@"OTCliqueStatusWrapper"
@"NSMapTable"
@"CKContainer"
@28@0:8i16@20
v32@0:8d16@?24
v40@0:8@"NSString"16@"NSDictionary"24@?<v@?@"NSError">32
v40@0:8@"NSString"16@"NSData"24@?<v@?@"NSError">32
v32@0:8@"NSString"16@?<v@?@"NSData"@"NSError">24
v24@0:8@?<v@?@"NSString"@"NSError">16
v24@0:8@?<v@?@"NSDictionary"@"NSError">16
v24@0:8@?<v@?@"NSError">16
v24@0:8@?<v@?Q@"NSError">16
v32@0:8d16@?<v@?B@"NSError">24
B40@0:8@16@24^@32
B24@0:8d16
B32@0:8@"NSString"16^@24
B40@0:8@"NSString"16@"NSDictionary"24^@32
@"NSDictionary"24@0:8^@16
@"<SecEscrowRequestable>"24@0:8^@16
@"EscrowRequestController"
@"_SFAuthenticatedCiphertext"
@24@0:8i16i20
@28@0:8@16i24
@28@0:8@"NSData"16i24
@"NSData"24@0:8@"_SFAESKey"16
@"_SFAESKey"24@0:8@"NSData"16
@"NSData"16@0:8
^{aks_ref_key_s=}
@36@0:8@16@24B32
@"NSURL"
@"NSPersistentStoreCoordinator"
@"NSManagedObjectContext"
@60@0:8@16@24@32@40@48i56
@"SecCDKeychainItemType"
@"SecCDKeychainAccessControlEntity"
@"NSUUID"
@68@0:8@16@24@32@40@48@56i64
@36@0:8@16i24^@28
@"SecCDKeychainItemMetadata"
@"<NSCopying><NSObject>"
@"NSString<SecCDKeychainLookupValueType>"
@44@0:8@16i24@28@36
@"SecCDKeychainManagedItemType"
@32@0:8q16@24
B24@0:8@"<CKKSPeer>"16
@"_SFECPublicKey"16@0:8
@"_SFECKeyPair"16@0:8
@"_SFIdentity"
@"CKKSSelves"24@0:8^@16
@"NSSet"24@0:8^@16
v24@0:8@"<CKKSPeerUpdateListener>"16
@"CKKSPeerProviderState"16@0:8
@48@0:8@16@24@32@40
@"CuttlefishXPCWrapper"
@52@0:8@16@24@32@40B48
v40@0:8B16B20B24B28@32
@"OTDeviceInformation"
@"OTEscrowMoveRequestContext"
v40@0:8@16@24Q32
v32@0:8@16Q24
@28@0:8B16@20
v56@0:8@16@24@32q40@?48
v60@0:8B16@20@28@36@44@?52
v56@0:8@"NSString"16@"NSString"24@"NSData"32@"NSString"40@?<v@?@"NSData"@"NSData"@"NSError">48
v24@0:8@?<v@?@"NSData"@"NSError">16
v24@0:8@?<v@?@"NSArray"@"NSError">16
v48@0:8@"NSString"16@"NSString"24@"NSString"32@?<v@?@"NSError">40
v24@0:8@?<v@?B@"NSError">16
v48@0:8@"SFECKeyPair"16@"SFECKeyPair"24@"NSString"32@?<v@?B@"NSError">40
v32@0:8@"OTJoiningConfiguration"16@?<v@?Q@"NSError">24
v32@0:8@"OTJoiningConfiguration"16@?<v@?@"NSString"@"NSData"@"NSData"@"NSData"@"NSData"@"NSError">24
v72@0:8@"OTJoiningConfiguration"16@"NSString"24@"NSData"32@"NSData"40@"NSData"48@"NSData"56@?<v@?@"NSData"@"NSData"@"NSError">64
v48@0:8@"OTJoiningConfiguration"16@"NSData"24@"NSData"32@?<v@?@"NSError">40
v40@0:8@"NSString"16@"NSString"24@?<v@?@"NSString"@"NSError">32
v48@0:8@"NSString"16@"NSString"24@"OTOperationConfiguration"32@?<v@?q@"NSError">40
v48@0:8@"NSString"16@"NSString"24@"OTOperationConfiguration"32@?<v@?q@"NSString"@"NSNumber"B@"NSError">40
v56@0:8@"NSString"16@"NSString"24@"NSString"32q40@?<v@?@"NSError">48
v64@0:8@"NSString"16@"NSString"24@"NSString"32@"NSData"40@"NSString"48@?<v@?@"NSError">56
v48@0:8@"NSString"16@"NSString"24@"NSUUID"32@?<v@?@"OTCustodianRecoveryKey"@"NSError">40
v48@0:8@"NSString"16@"NSString"24@"OTCustodianRecoveryKey"32@?<v@?@"NSError">40
v48@0:8@"NSString"16@"NSString"24@"NSUUID"32@?<v@?@"OTInheritanceKey"@"NSError">40
v48@0:8@"NSString"16@"NSString"24@"OTInheritanceKey"32@?<v@?@"NSError">40
v44@0:8@"NSString"16@"NSString"24B32@?<v@?@"NSError">36
v60@0:8B16@"NSString"20@"NSError"28@"NSString"36@"NSString"44@?<v@?@"NSError">52
v40@0:8@"NSString"16@"NSString"24@?<v@?q@"NSError">32
v44@0:8@"NSString"16@"NSString"24B32@?<v@?B@"NSError">36
v40@0:8@"NSString"16@"NSString"24@?<v@?B@"NSError">32
v48@0:8@"NSString"16@"NSString"24@"OTSecureElementPeerIdentity"32@?<v@?@"NSError">40
v48@0:8@"NSString"16@"NSString"24@"NSData"32@?<v@?@"NSError">40
v40@0:8@"NSString"16@"NSString"24@?<v@?@"OTCurrentSecureElementIdentities"@"NSError">32
v40@0:8@"NSString"16@"NSString"24@?<v@?@"OTAccountSettingsX"@"NSError">32
v48@0:8@"NSString"16@"NSString"24@"OTAccountSettingsX"32@?<v@?@"NSError">40
v48@0:8@"NSString"16@"NSString"24@"NSData"32@?<v@?@"NSArray"@"NSError">40
@128@0:8@16@24@32@40@48#56#64#72#80@88@96@104@112@120
B40@0:8@16@24q32
@80@0:8@16@24@32@40@48@56@64@72
@"<OTSOSAdapter>"
@"<OTAuthKitAdapter>"
@"<OTDeviceInformationAdapter>"
@"CKKSAccountStateTracker"
@"CKKSReachabilityTracker"
@"CKKSViewManager"
@"OTRamp"
@"<OctagonFollowUpControllerProtocol>"
@"<OTTooManyPeersAdapter>"
@"<OTPersonaAdapter>"
@24@0:8@?16
@32@0:8@16@?24
@"NSOperationQueue"
@"NSBlockOperation"
@56@0:8@16@24@32@40@48
B36@0:8@16B24^@28
@72@0:8@16@24@32@40@48Q56Q64
@80@0:8@16@24@32@40@48@56Q64Q72
@104@0:8@16@24@32@40@48@56Q64Q72@80@88@96
@32@0:8@16Q24
@"CKKSWrappedAESSIVKey"
@"NSNumber"
@36@0:8@16Q24B32
@64@0:8@16@24@32@40@48^@56
@48@0:8@16@24@32^@40
@"CKKSOperationDependencies"
@48@0:8^{SecDbItem={__CFRuntimeBase=QAQ}^{SecDbClass}iii^{__CFDictionary}^{__CFData}^v^{__CFArray}}16@24@32^@40
@56@0:8^{SecDbItem={__CFRuntimeBase=QAQ}^{SecDbClass}iii^{__CFDictionary}^{__CFData}^v^{__CFArray}}16@24@32@40^@48
@48@0:8q16@24@32^@40
q40@0:8@16@24^@32
@"CKKSItem"
@64@0:8q16@24@32@40@48^@56
{?="keyClass"b1}
v64@0:8@16r^{SecDbClass=^{__CFString}B[0^{SecDbAttr}]}24@32@40@48@56
v32@0:8^{SecDbItem={__CFRuntimeBase=QAQ}^{SecDbClass}iii^{__CFDictionary}^{__CFData}^v^{__CFArray}}16@24
v60@0:8@16@24r^{SecDbClass=^{__CFString}B[0^{SecDbAttr}]}32@40B48@52
B52@0:8@16^{SecDbItem={__CFRuntimeBase=QAQ}^{SecDbClass}iii^{__CFDictionary}^{__CFData}^v^{__CFArray}}24@32B40@44
v40@0:8@16r^{SecDbClass=^{__CFString}B[0^{SecDbAttr}]}24@32
@"NSMutableSet"
v84@0:8@16B24@28@36@44@52@60@68@76
v40@0:8@16@24@32
@68@0:8@16@24@32@40@48@56B64
v28@0:8@16B24
@64@0:8@16@24@32q40q48^@56
@80@0:8@16@24@32q40Q48q56q64@72
@104@0:8@16@24@32@40q48Q56q64q72@80@88@96
B48@0:8@16@24@32^@40
@"CKRecordZoneID"
@"SECC2MPGenericEventMetricValue"
@76@0:8@16B24B28@32B40@44@52Q60@68
@"CKKSRateLimiter"
@64@0:8@16@24@32@40@48@56
@"NSString<OctagonFlagString>"
v24@0:8d16
d16@0:8
@"SECC2MPError"
{?="dateValue"b1"doubleValue"b1}
@"SecDbBackupBagIdentity"
i24@0:8^@16
B28@0:8B16^@20
@"<CKKSSelfPeer>"24@0:8^@16
B32@0:8@"<CKKSSelfPeer>"16^@24
@20@0:8B16
@44@0:8@16B24@28@36
@"CKKSResultOperation"
@"NSHashTable"
@"NSString<SecCKKSProcessedState>"
@112@0:8@16@24@32@40@48@56@64@72@80@88@96@104
B28@0:8@16B24
B36@0:8@16@24B32
@24@0:8^{SecDbItem={__CFRuntimeBase=QAQ}^{SecDbClass}iii^{__CFDictionary}^{__CFData}^v^{__CFArray}}16
@"CKOperationGroup"
@"CKDatabase"
@"CKKSCloudKitClassDependencies"
@"<OctagonStateFlagHandler>"
@"TPSyncingPolicy"
@"<CKKSDatabaseProviderProtocol>"
@"CKKSZoneModifier"
@64@0:8@16@24@32@40@48Q56
@"TPPolicyVersion"
{?="recoveryType"b1}
B44@0:8@16B24@28^@36
@"NSString<SecCKKSKeyClass>"
@"CKKSKey"
@"CKKSCurrentKeyPointer"
@"SECC2MPCloudKitInfo"
@"SECC2MPDeviceInfo"
@"SECC2MPGenericEvent"
@"SECC2MPNetworkEvent"
@"SECC2MPServerInfo"
{?="reportFrequency"b1"reportFrequencyBase"b1"triggers"b1"metricType"b1}
v44@0:8@16B24Q28@?36
v40@0:8@16B24B28@?32
v36@0:8@16B24@?28
v24@0:8@?<v@?@"NSDictionary">16
v32@0:8@"NSString"16@?<v@?@"NSError">24
v44@0:8@"NSString"16B24Q28@?<v@?@"NSArray"@"NSError">36
v40@0:8@"NSString"16B24B28@?<v@?@"NSError">32
v24@0:8@?<v@?@"NSString">16
v56@0:8@"NSString"16@"CKKSExternalKey"24@"CKKSExternalKey"32@"NSArray"40@?<v@?@"NSError">48
v36@0:8@"NSString"16B24@?<v@?@"CKKSExternalKey"@"NSArray"@"NSArray"@"NSError">28
v48@0:8@"NSString"16@"NSArray"24@"NSArray"32@?<v@?@"NSError">40
v32@0:8@"NSDictionary"16@?<v@?@"NSDictionary"@"NSError">24
@36@0:8@16B24@28
@52@0:8@16Q24B32q36@?44
@60@0:8@16Q24Q32B40q44@?52
@68@0:8@16Q24d32Q40B48q52@?60
v32@0:8Q16Q24
@?16@0:8
B24@0:8@"NSString<OctagonFlagString>"16
@"NSArray"16@0:8
@"CKKSCondition"24@0:8@"NSString<OctagonFlagString>"16
v24@0:8@"NSString<OctagonFlagString>"16
@"OTCustodianRecoveryKey"
@"OTInheritanceKey"
B24@0:8q16
@"<CKKSSelfPeer>"
B24@0:8@"NSString"16
@"_SFECPublicKey"
@"_SFECKeyPair"
{?="timestampEnd"b1"timestampStart"b1"type"b1}
v24@0:8@?<C@?>16
B36@0:8^{__OpaqueSecDbConnection=}16B24@?28
@"NSDictionary"16@0:8
@"NSSet"16@0:8
v24@0:8@"NSDictionary"16
@"CKRecord"
v40@0:8@16Q24@?32
@44@0:8@16@24B32@36
B44@0:8@16B24^@28@?36
B48@0:8^{SecDbItem={__CFRuntimeBase=QAQ}^{SecDbClass}iii^{__CFDictionary}^{__CFData}^v^{__CFArray}}16@24@32^@40
B40@0:8^{SecDbItem={__CFRuntimeBase=QAQ}^{SecDbClass}iii^{__CFDictionary}^{__CFData}^v^{__CFArray}}16@24@32
@"CKServerChangeToken"
@"CKRecordID"
@68@0:8@16#24@32@40@48B56@60
@"CKDatabaseOperation<CKKSFetchRecordZoneChangesOperation>"
@"OctagonStateTransitionPathStep"
v24@0:8@"CKKSResultOperation<OctagonStateTransitionOperationProtocol>"16
@"CKKSResultOperation"16@0:8
@"OctagonStateTransitionPath"
@"OctagonStateTransitionRequest"
@60@0:8@16@24@32@40B48@52
v32@0:8@"OTAccountMetadataClassC"16@"OTAccountMetadataClassC"24
v24@0:8@"APSIncomingMessage"16
v32@0:8@"NSArray"16@"NSString"24
v32@0:8@"CKAccountInfo"16@"CKAccountInfo"24
v24@0:8@"<CKKSPeerProvider>"16
@136@0:8@16@24@32@40@48@56@64@72@80@88@96#104#112#120@128
q24@0:8^@16
v32@0:8q16@?24
q24@0:8@16
@"OTFollowup"
@"OTCuttlefishAccountStateHolder"
@"<CKKSCloudKitAccountStateTrackingProvider><CKKSOctagonStatusMemoizer>"
@"CKKSLaunchSequence"
@"OTAccountSettingsX"
@"OctagonAPSReceiver"
@"<CKKSPeerProvider>"
@32@0:8@16d24
@40@0:8@16Q24d32
@40@0:8@16Q24@32
@"TrustedPeersHelperCustodianRecoveryKey"
@76@0:8@16@24@32@40@48@56B64Q68
@64@0:8^{__OpaqueSOSEngine={__CFRuntimeBase=QAQ}^{SOSDataSource}^{__CFString}^{__OpaqueSOSManifest}^{__CFData}^{__CFDictionary}^{__CFDictionary}^{__CFDictionary}^{__CFDictionary}^{__CFArray}^{__CFDate}^{__CFDictionary}BB@@@@?B}16^{__OpaqueSOSPeer=}24^{__OpaqueSOSManifest=}32^{__OpaqueSOSManifest=}40^{__OpaqueSOSManifest=}48^{__OpaqueSOSMessage=}56
v24@0:8^{__OpaqueSOSCoder=}16
^{__OpaqueSOSEngine={__CFRuntimeBase=QAQ}^{SOSDataSource}^{__CFString}^{__OpaqueSOSManifest}^{__CFData}^{__CFDictionary}^{__CFDictionary}^{__CFDictionary}^{__CFDictionary}^{__CFArray}^{__CFDate}^{__CFDictionary}BB@@@@?B}16@0:8
v24@0:8^{__OpaqueSOSEngine={__CFRuntimeBase=QAQ}^{SOSDataSource}^{__CFString}^{__OpaqueSOSManifest}^{__CFData}^{__CFDictionary}^{__CFDictionary}^{__CFDictionary}^{__CFDictionary}^{__CFArray}^{__CFDate}^{__CFDictionary}BB@@@@?B}16
^{__OpaqueSOSPeer=}16@0:8
v24@0:8^{__OpaqueSOSPeer=}16
^{__OpaqueSOSCoder=}16@0:8
^{__OpaqueSOSManifest=}16@0:8
v24@0:8^{__OpaqueSOSManifest=}16
^{__OpaqueSOSMessage=}16@0:8
v24@0:8^{__OpaqueSOSMessage=}16
^{__OpaqueSOSEngine={__CFRuntimeBase=QAQ}^{SOSDataSource}^{__CFString}^{__OpaqueSOSManifest}^{__CFData}^{__CFDictionary}^{__CFDictionary}^{__CFDictionary}^{__CFDictionary}^{__CFArray}^{__CFDate}^{__CFDictionary}BB@@@@?B}
^{__OpaqueSOSPeer=}
^{__OpaqueSOSCoder=}
^{__OpaqueSOSManifest=}
^{__OpaqueSOSMessage=}
@72@0:8@16@24@32@40@48@56q64
@80@0:8@16@24@32@40@48@56@64q72
@"CKKSKeychainBackedKey"
@72@0:8@16@24@32@40@48@56@64
@?24@0:8@16
v48@0:8^{__OpaqueSecDbConnection=}16Q24^{SecDbItem={__CFRuntimeBase=QAQ}^{SecDbClass}iii^{__CFDictionary}^{__CFData}^v^{__CFArray}}32^{SecDbItem={__CFRuntimeBase=QAQ}^{SecDbClass}iii^{__CFDictionary}^{__CFData}^v^{__CFArray}}40
@28@0:8B16^@20
@"CKKSZoneChangeFetcher"
@"SecDbKeychainSerializedAKSWrappedKey"
@"SecDbKeychainSerializedMetadata"
@56@0:8@16@24@32@40^@48
@"SecDbKeychainSerializedSecretData"
@44@0:8@16@24@32i40
@52@0:8@16^{__SecAccessControl=}24@32B40^@44
B52@0:8@16^{__SecAccessControl=}24@32B40^@44
@44@0:8i16^{__SecAccessControl=}20@28^@36
B28@0:8i16^@20
B44@0:8i16^{__SecAccessControl=}20@28^@36
@32@0:8i16B20^@24
@52@0:8@16i24^{__SecAccessControl=}28@36^@44
@64@0:8@16^{__SecAccessControl=}24@32@40B48B52^@56
@"SecDbKeychainSecretData"
@"SecDbKeychainMetadata"
@"NSObject<OS_nw_path_monitor>"
v24@0:8@"OctagonPendingFlag"16
@48@0:8@16@24@32@?40
@56@0:8@16@24@32@40@?48
@"<OctagonStateMachineEngine>"
@"OctagonFlags"
@32@0:8^{__SecKey={__CFRuntimeBase=QAQ}^{__SecKeyDescriptor}^v}16^@24
@"OTUpdateTrustedDeviceListOperation"
@104@0:8@16@24Q32@40@48@56@64@72@80@88@96
@96@0:8@16@24Q32@40@48@56@64@72@80@88
@"CKKSManifestInjectionPointHelper"
@64@0:8@16@24@32@40^@48@56
@60@0:8@16B24@28@36@44@52
@"CKKSSelves"
@88@0:8@16@24@32@40@48@56@64@72#80
v32@0:8Q16@?24
@"CKRecordZone"
@"NSString"24@0:8^@16
v24@0:8@?<v@?@"NSSet"@"NSError">16
v24@0:8@"<OTAuthKitAdapterNotifier>"16
@"CKKSListenerCollection<OTAuthKitAdapterNotifier>"
@"OTManager"
@"<OctagonEntitlementBearerProtocol>"
v32@0:8@"NSURLSession"16@"NSError"24
v40@0:8@"NSURLSession"16@"NSURLAuthenticationChallenge"24@?<v@?q@"NSURLCredential">32
v24@0:8@"NSURLSession"16
@"NSURLSession"
v32@0:8@16q24
v72@0:8@16@24@32@40@48@56@64
{?="errorCode"b1}
@116@0:8@16@24@32@40@48@56i64@68@76@84@92@100@108
{?="operationGroupIndex"b1"operationTriggered"b1}
@88@0:8@16@24@32@40@48@56@64@72@80
@48@0:8@16Q24@32@40
@88@0:8#16#24#32#40#48#56#64#72#80
{?="reportClientOperationFrequency"b1"reportClientOperationFrequencyBase"b1"reportOperationGroupFrequency"b1"reportOperationGroupFrequencyBase"b1"anonymous"b1}
^{SecDbItem={__CFRuntimeBase=QAQ}^{SecDbClass}iii^{__CFDictionary}^{__CFData}^v^{__CFArray}}40@0:8@16@24^@32
^{SecDbItem={__CFRuntimeBase=QAQ}^{SecDbClass}iii^{__CFDictionary}^{__CFData}^v^{__CFArray}}32@0:8@16^@24
^{SecDbItem={__CFRuntimeBase=QAQ}^{SecDbClass}iii^{__CFDictionary}^{__CFData}^v^{__CFArray}}16@0:8
v24@0:8^{SecDbItem={__CFRuntimeBase=QAQ}^{SecDbClass}iii^{__CFDictionary}^{__CFData}^v^{__CFArray}}16
@"CKKSKeychainViewState"
@"CKModifyRecordsOperation"
^{SecDbItem={__CFRuntimeBase=QAQ}^{SecDbClass}iii^{__CFDictionary}^{__CFData}^v^{__CFArray}}
@52@0:8@16B24@28@36@44
@20@0:8C16
B28@0:8C16^@20
B20@0:8C16
@"<CKKSLockStateProviderProtocol>"
{?="actualKeyclass"b1"keyclass"b1}
v56@0:8@16@24@32@40B48B52
B24@0:8@"CKRecordZoneID"16
@"CKKSCloudKitFetchRequest"24@0:8@"CKRecordZoneID"16
B32@0:8@"NSError"16@"CKRecordZoneID"24
v56@0:8@"NSArray"16@"NSArray"24@"CKRecordZoneID"32@"CKServerChangeToken"40B48B52
v56@0:8^{__OpaqueSecDbConnection=}16Q24^{SecDbItem={__CFRuntimeBase=QAQ}^{SecDbClass}iii^{__CFDictionary}^{__CFData}^v^{__CFArray}}32^{SecDbItem={__CFRuntimeBase=QAQ}^{SecDbClass}iii^{__CFDictionary}^{__CFData}^v^{__CFArray}}40@48
@36@0:8B16Q20@28
@32@0:8@16B24B28
B40@0:8@16q24@32
v24@0:8#16
B32@0:8Q16^@24
B44@0:8@16B24B28B32^@36
@"CKKSIncomingQueueOperation"
@"CKKSNewTLKOperation"
@"CKKSOutgoingQueueOperation"
@"CKKSProcessReceivedKeysOperation"
@"CKKSReencryptOutgoingItemsOperation"
@"CKKSSynchronizeOperation"
@"OctagonStateMultiStateArrivalWatcher"
@"CKKSSecDbAdapter"
@"<CKKSPBCodable>"
@88@0:8@16@24@32q40Q48q56q64@72@80
@112@0:8@16@24@32@40q48Q56q64q72@80@88@96@104
@"CKKSTLKShare"
@56@0:8@16@24@32Q40@48
@"CKKSResultOperation<OctagonStateTransitionOperationProtocol>"
{?="networkRequestBodyBytesSent"b1"networkResponseBodyBytesReceived"b1"networkStatusCode"b1"reportFrequency"b1"reportFrequencyBase"b1"timestampC2Init"b1"timestampC2Now"b1"timestampC2Start"b1"timestampDnsEnd"b1"timestampDnsStart"b1"timestampRequestEnd"b1"timestampRequestStart"b1"timestampResponseEnd"b1"timestampResponseStart"b1"timestampSslStart"b1"timestampTcpEnd"b1"timestampTcpStart"b1"triggers"b1"networkPreviousAttemptCount"b1"networkRequestHeaderSize"b1"networkResponseHeaderSize"b1"optionsTimeoutIntervalForRequest"b1"optionsTimeoutIntervalForResource"b1"networkConnectionReused"b1"optionsAllowExpensiveAccess"b1"optionsAllowPowerNapScheduling"b1"optionsAppleIdContext"b1"optionsOutOfProcess"b1"optionsOutOfProcessForceDiscretionary"b1"optionsTlsPinningRequired"b1}
@80@0:8@16@24Q32@40@48@56@64@72
v32@0:8@"APSConnection"16@"NSData"24
v48@0:8@"APSConnection"16@"NSData"24@"NSString"32@"NSString"40
v32@0:8@"APSConnection"16@"APSIncomingMessage"24
v40@0:8@"APSConnection"16@"NSString"24@"NSDictionary"32
v32@0:8@"APSConnection"16@"APSOutgoingMessage"24
v40@0:8@"APSConnection"16@"APSOutgoingMessage"24@"NSError"32
v28@0:8@"APSConnection"16B24
v24@0:8@"APSConnection"16
v32@0:8@"APSConnection"16@"NSArray"24
@40@0:8@16#24Q32
@"<OctagonAPSConnection>"
@"<CKKSZoneUpdateReceiverProtocol>"
@72@0:8@16@24@32@40@48@56^@64
@40@0:8@16^B24^@32
@"CKKSAESSIVKey"
@44@0:8@16@24@32B40
@60@0:8@16B24Q28B36B40@44@52
@"TPPBPeerStableInfoSetting"
@64@0:8@16@24Q32@40@48B56B60
@"TPPBSecureElementIdentity"
@32@0:8*16Q24
[80C]
B72@0:8r^{ccmode_siv=QQ^?^?^?^?^?^{ccmode_cbc}^{ccmode_ctr}}16@24@32*40Q48@56^@64
{?="isAppleInternal"b1}
{?="operationGroupTriggered"b1}
v24@0:8@"CKRecordZoneNotification"16
@40@0:8@16#24@32
@"CKKSFetchAllRecordZoneChangesOperation"
@"CKKSZoneChangeFetchDependencyOperation"
@56@0:8@16i24^i28i36@40^@48
@48@0:8i16i20@24^{__OpaqueSecDbConnection=}32^@40
@56@0:8@16i24i28@32^{__OpaqueSecDbConnection=}40^@48
B60@0:8i16^{__OpaqueSecDbConnection=}20^i28^@36^@44^@52
@52@0:8i16^{__OpaqueSecDbConnection=}20i28@32B40^@44
@44@0:8i16i20@24B32^@36
q24@0:8Q16
@"NSObject<OS_dispatch_semaphore>"
Q24@0:8d16
{?="lastCloudServicesTriggerTime"b1"lastEscrowAttemptTime"b1"triggerRequestTime"b1"uploadRetries"b1"certCached"b1"uploadCompleted"b1}
B32@0:8@?16^@24
@120@0:8@16@24@32@40@48@56@64@72@80@88@96#104#112
@"CKKSZoneModifyOperations"
v40@0:8@"_SFCredential"16@"_SFAccessPolicy"24@?<v@?@"NSString"@"NSError">32
v32@0:8@"NSString"16@?<v@?@"_SFPasswordCredential"@"NSString"@"NSError">24
v32@0:8@"NSArray"16@?<v@?@"NSArray"@"NSError">24
v32@0:8@"NSString"16@?<v@?B@"NSError">24
v40@0:8@"_SFCredential"16@"_SFCredential"24@?<v@?@"NSString"@"NSError">32
v40@0:8@"_SFCredential"16@"_SFCredential"24@?<v@?B@"NSError">32
@"SecCDKeychain"
@72@0:8@16@24q32@40@48@56@64
v28@0:8I16@?20
v36@0:8@16i24@?28
v24@0:8@?<v@?B@"NSData"@"NSError">16
v28@0:8I16@?<v@?B@"NSError">20
v32@0:8@"NSData"16@?<v@?@"NSData"@"NSError">24
v36@0:8@"NSData"16i24@?<v@?B@"NSError">28
v28@0:8I16@?<v@?@"NSArray"@"NSError">20
v32@0:8@"NSArray"16@?<v@?B@"NSError">24
v32@0:8@"NSDictionary"16@?<v@?@"NSError">24
v32@0:8@"NSArray"16@?<v@?@"NSError">24
v24@0:8@?<v@?B>16
v24@0:8^{__SecKey={__CFRuntimeBase=QAQ}^{__SecKeyDescriptor}^v}16
^{__OpaqueSOSPeerInfo=}16@0:8
^{__OpaqueSOSFullPeerInfo=}16@0:8
@32@0:8^{__CFDictionary=}16^{SOSDataSourceFactory=^?^?^?}24
B24@0:8^^{__CFError}16
i24@0:8^^{__CFError}16
B24@0:8^{__CFString=}16
^{__SecKey={__CFRuntimeBase=QAQ}^{__SecKeyDescriptor}^v}16@0:8
^{SOSDataSourceFactory=^?^?^?}16@0:8
v24@0:8^{SOSDataSourceFactory=^?^?^?}16
^{__SecKey={__CFRuntimeBase=QAQ}^{__SecKeyDescriptor}^v}
@"SOSAccountTrustClassic"
^{SOSDataSourceFactory=^?^?^?}
@"CKKeyParameter"
@"SOSKVSCircleStorageTransport"
@"SOSMessageKVS"
@"SOSCKCircleStorage"
@"NSUserDefaults"
@"CKKSPBFileStorage"
{?="ringUpdateFlag"b1}
B48@0:8@16^{__OpaqueSOSCircle=}24Q32^^{__CFError}40
B64@0:8@16@24Q32^{__OpaqueSOSCircle=}40^{__OpaqueSOSPeerInfo=}48^^{__CFError}56
@48@0:8r^*16r*24^{SOSDataSourceFactory=^?^?^?}32^@40
@40@0:8@16^{SOSDataSourceFactory=^?^?^?}24^@32
@"SOSAccount"
^v32@0:8^{__CFString=}16^^{__CFError}24
B32@0:8^{__CFString=}16^^{__CFError}24
B40@0:8^{__CFString=}16^v24^^{__CFError}32
B32@0:8^{__CFString=}16^v24
v32@0:8^{__CFString=}16^{__CFSet=}24
v24@0:8^{__CFSet=}16
B32@0:8@16^{__CFDictionary=}24
B32@0:8@16^^{__CFError}24
B40@0:8@16@24^^{__CFError}32
v24@0:8^{__CFDictionary=}16
B40@0:8^{__OpaqueSOSRing={__CFRuntimeBase=QAQ}^{__CFDictionary}^{__CFDictionary}^{__CFDictionary}^{__CFDictionary}}16^{__CFString=}24^^{__CFError}32
B60@0:8@16^{__OpaqueSOSRing={__CFRuntimeBase=QAQ}^{__CFDictionary}^{__CFDictionary}^{__CFDictionary}^{__CFDictionary}}24@32^{__SecKey={__CFRuntimeBase=QAQ}^{__SecKeyDescriptor}^v}40B48^^{__CFError}52
^{__OpaqueSOSRing={__CFRuntimeBase=QAQ}^{__CFDictionary}^{__CFDictionary}^{__CFDictionary}^{__CFDictionary}}32@0:8^{__CFString=}16^^{__CFError}24
^{__CFDictionary=}24@0:8^^{__CFError}16
B40@0:8@16^{__CFString=}24^^{__CFError}32
@52@0:8@16^{__OpaqueSOSFullPeerInfo=}24^{__OpaqueSOSCircle=}32i40@44
i44@0:8@16^{__CFString=}24i32^^{__CFError}36
i40@0:8@16^{__CFString=}24^^{__CFError}32
B36@0:8@16B24^^{__CFError}28
B40@0:8@16^{__CFSet=}24^{__CFSet=}32
v40@0:8@16^{__CFString=}24@?32
^{__CFSet=}24@0:8^{__CFString=}16
^{__SecKey={__CFRuntimeBase=QAQ}^{__SecKeyDescriptor}^v}32@0:8^{__CFString=}16^^{__CFError}24
^{__OpaqueSOSPeerInfo=}32@0:8^{__CFString=}16^^{__CFError}24
B32@0:8^{__OpaqueSOSPeerInfo=}16^^{__CFError}24
^{__CFSet=}24@0:8@?16
^{__CFArray=}32@0:8^{__SecKey={__CFRuntimeBase=QAQ}^{__SecKeyDescriptor}^v}16^^{__CFError}24
B32@0:8^{__SecKey={__CFRuntimeBase=QAQ}^{__SecKeyDescriptor}^v}16^^{__CFError}24
B48@0:8@16^{__CFString=}24^^{__CFError}32@?40
v32@0:8^{__OpaqueSOSCircle=}16^{__SecKey={__CFRuntimeBase=QAQ}^{__SecKeyDescriptor}^v}24
B32@0:8^{__OpaqueSOSCircle=}16^{__SecKey={__CFRuntimeBase=QAQ}^{__SecKeyDescriptor}^v}24
^{__CFSet=}16@0:8
B40@0:8^{__OpaqueSOSCircle=}16^{__SecKey={__CFRuntimeBase=QAQ}^{__SecKeyDescriptor}^v}24^^{__CFError}32
B32@0:8^{__OpaqueSOSFullPeerInfo=}16^^{__CFError}24
^{__CFArray=}32@0:8^^{__CFError}16@?24
Q32@0:8@16^@24
*48@0:8@16^@24r*32*40
^{__CFSet=}40@0:8@16^{__CFSet=}24^^{__CFError}32
B40@0:8@16^{__SecKey={__CFRuntimeBase=QAQ}^{__SecKeyDescriptor}^v}24^^{__CFError}32
^{__OpaqueSOSEngine=}24@0:8^{SOSDataSourceFactory=^?^?^?}16
B40@0:8@16^v24^^{__CFError}32
^{__SecKey={__CFRuntimeBase=QAQ}^{__SecKeyDescriptor}^v}24@0:8^^{__CFError}16
B32@0:8^{__CFDictionary=}16^^{__CFError}24
B40@0:8^{__CFString=}16^{__CFData=}24^^{__CFError}32
B40@0:8^{__CFString=}16^{__OpaqueSOSPeerInfo=}24^^{__CFError}32
^{__CFDictionary=}32@0:8^{__CFDictionary=}16^^{__CFError}24
^{__CFArray=}32@0:8^{__CFDictionary=}16^^{__CFError}24
B24@0:8^{__CFDictionary=}16
@48@0:8@16@24d32d40
i32@0:8^{__OpaqueSOSCircle=}16^{__OpaqueSOSPeerInfo=}24
^{__OpaqueSOSCircle=}24@0:8^^{__CFError}16
^{__OpaqueSOSCircle=}40@0:8@16^{__CFString=}24^^{__CFError}32
B32@0:8^{__OpaqueSOSCircle=}16^{__OpaqueSOSCircle=}24
B24@0:8^{__OpaqueSOSCircle=}16
B44@0:8^{__OpaqueSOSCircle=}16@24B32^^{__CFError}36
B40@0:8@16^{__OpaqueSOSCircle=}24^^{__CFError}32
B40@0:8@16^^{__CFError}24@?32
B32@0:8@16^{__OpaqueSOSCircle=}24
v32@0:8@16^{__SecKey={__CFRuntimeBase=QAQ}^{__SecKeyDescriptor}^v}24
B44@0:8@16^{__SecKey={__CFRuntimeBase=QAQ}^{__SecKeyDescriptor}^v}24B32^^{__CFError}36
v32@0:8^{__CFString=}16^{__CFData=}24
B48@0:8^{__CFArray=}16^{__CFArray=}24^{__CFArray=}32^^{__CFError}40
B40@0:8@16^{__CFData=}24^{__CFError=}32
q32@0:8@16^^{__CFError}24
B56@0:8@16^{__CFArray=}24^{__CFArray=}32^{__CFArray=}40^^{__CFError}48
B40@0:8@16^{__CFData=}24^^{__CFError}32
v24@0:8^{__OpaqueSOSCircle=}16
v24@0:8^{__OpaqueSOSFullPeerInfo=}16
^{__OpaqueSOSCircle=}16@0:8
^{__OpaqueSOSFullPeerInfo=}
^{__OpaqueSOSPeerInfo=}
^{__OpaqueSOSCircle=}
^v16@0:8
^{__CFString=}16@0:8
B40@0:8@16^{__CFDictionary=}24^^{__CFError}32
B40@0:8@16^{__CFSet=}24^^{__CFError}32
B48@0:8@16^{__CFString=}24^{__CFData=}32^^{__CFError}40
^{__CFDictionary=}40@0:8@16^{__CFDictionary=}24^^{__CFError}32
v36@0:8@16i24@28
v32@0:8@16^{__OpaqueSOSPeer=}24
B48@0:8@16^{__CFString=}24^{__CFString=}32^^{__CFError}40
v24@0:8^v16
@24@0:8^{__OpaqueSOSPeer=}16
^{__CFDictionary=}16@0:8
^{__CFDictionary=}
^{__SecKey={__CFRuntimeBase=QAQ}^{__SecKeyDescriptor}^v}36@0:8i16@20^^{__CFError}28
softlink:o:path:/System/Library/PrivateFrameworks/CrashReporterSupport.framework/CrashReporterSupport
softlink:o:path:/System/Library/PrivateFrameworks/CloudServices.framework/CloudServices
333333
MbP?
u"A=
PkW^kkkkkkd
G?BE
(?FM
$(/6<+
    
1.11
ix?L
*18?
'JQX
7=CI
.5X{
 -1SX]
:_kw
@(#)PROGRAM:securityd  PROJECT:Security-60158.100.125
3333
<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE plist PUBLIC "-//Apple//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd">
<plist version="1.0">
<dict>
<key>allow-obliterate-device</key>
<true/>
<key>allow-softwareupdated</key>
<true/>
<key>application-identifier</key>
<string>com.apple.securityd</string>
<key>aps-connection-initiate</key>
<true/>
<key>aps-environment</key>
<string>serverPreferred</string>
<key>com.apple.CloudKeychainProxy.client</key>
<true/>
<key>com.apple.accounts.appleaccount.fullaccess</key>
<true/>
<key>com.apple.application-identifier</key>
<string>com.apple.securityd</string>
<key>com.apple.aps-environment</key>
<string>serverPreferred</string>
<key>com.apple.authkit.client.private</key>
<true/>
<key>com.apple.developer.aps-environment</key>
<string>serverPreferred</string>
<key>com.apple.developer.icloud-container-environment</key>
<string>Production</string>
<key>com.apple.developer.icloud-container-identifiers</key>
<array>
<string>iCloud.com.apple.security.keychain</string>
</array>
<key>com.apple.developer.icloud-services</key>
<array>
<string>CloudKit</string>
</array>
<key>com.apple.keystore.access-keychain-keys</key>
<true/>
<key>com.apple.keystore.lockassertion</key>
<true/>
<key>com.apple.mkb.usersession.info</key>
<true/>
<key>com.apple.private.MobileGestalt.AllowedProtectedKeys</key>
<array>
<string>SerialNumber</string>
</array>
<key>com.apple.private.accounts.allaccounts</key>
<true/>
<key>com.apple.private.appleaccount.app-hidden-from-icloud-settings</key>
<true/>
<key>com.apple.private.applecredentialmanager.allow</key>
<true/>
<key>com.apple.private.aps-connection-initiate</key>
<true/>
<key>com.apple.private.associated-domains</key>
<true/>
<key>com.apple.private.cloudkit.allowUnverifiedAccount</key>
<true/>
<key>com.apple.private.cloudkit.buddyAccess</key>
<true/>
<key>com.apple.private.cloudkit.notifyOnAccountWarmup</key>
<true/>
<key>com.apple.private.cloudkit.setEnvironment</key>
<true/>
<key>com.apple.private.cloudkit.spi</key>
<true/>
<key>com.apple.private.cloudkit.supportservice</key>
<true/>
<key>com.apple.private.cloudkit.systemService</key>
<true/>
<key>com.apple.private.dark-wake-push</key>
<true/>
<key>com.apple.private.followup</key>
<true/>
<key>com.apple.private.ids.remoteurlconnection</key>
<true/>
<key>com.apple.private.imcore.imagent</key>
<true/>
<key>com.apple.private.imcore.imremoteurlconnection</key>
<true/>
<key>com.apple.private.imcore.remoteurlconnection</key>
<true/>
<key>com.apple.private.lockdown.finegrained-get</key>
<array>
<string>com.apple.securityd.ae/cookie</string>
</array>
<key>com.apple.private.necp.match</key>
<true/>
<key>com.apple.private.network.socket-delegate</key>
<true/>
<key>com.apple.private.rtcreportingd</key>
<true/>
<key>com.apple.private.security.storage.Keychains</key>
<true/>
<key>com.apple.private.sqlite.sqlite-encryption</key>
<true/>
<key>com.apple.private.tcc.allow</key>
<array>
<string>kTCCServiceLiverpool</string>
</array>
<key>com.apple.private.trustedpeershelper.client</key>
<true/>
<key>com.apple.securebackupd.access</key>
<true/>
<key>com.apple.security.network.client</key>
<true/>
<key>com.apple.symptom_diagnostics.report</key>
<true/>
<key>seatbelt-profiles</key>
<array>
<string>securityd</string>
</array>
</dict>
</plist>
odel
keychain
allowed-runtime
reset-period
check-period
graceful-exit-time
SecWatchdog
com.apple.securityd.watchdog
failed to set parameters: %@
WAIT4DEBUGGER
signal
com.apple.securityd.daily
v16@?0^{_xpc_activity_s=}8
com.apple.securityd.entropyhealth
com.apple.securityd.prng
com.apple.private.keychain.deny
com.apple.private.ckks.plaintextfields
com.apple.private.keychain.inet_expansion_fields
com.apple.private.keychain.sysbound
com.apple.private.keychain.allow-update-tokens
com.apple.purplebuddy
com.apple.private.security.delete.all
restore-keychain
Failed to write backup file: %d
keychain-cloud-circle
v32@?0^{__CFString=}8^{__CFData=}16^{__CFString=}24
v24@?0^{__CFString=}8^{__CFData=}16
v24@?0^{__CFString=}8Q16
keychain-sync-updates
force
musr
network-extension
com.apple.private.syncbubble-keychain
com.apple.private.migrate-musr-system-keychain
com.apple.private.keychain.circle.join
com.apple.private.uninstall.deletion
com.apple.private.keychain.backuptableops
com.apple.private.keychain.keychaincontrol
com.apple.private.keychain.certificates
Messages expect to be xpc dictionary, got: %@
{%string: %value}
%@: %@ has entitlement %@
%@: %@ lacks entitlement %@
xpcSetDER not data, got %@
trailing garbage at end of SecAccessControl data
missing CFDataRef info
could not allocate CFDataRef info
No data for key %s
/dev/random
application-identifier
com.apple.application-identifier
com.apple.developer.on-demand-install-capable
keychain-access-groups
com.apple.security.application-groups
com.apple.developer.associated-application-identifier
entitlements
CryptoTokenKit
UseTokens
serverxpc
com.apple.private.system-keychain
com.apple.developer.networking.networkextension
com.apple.networkextension.keychain
com.apple.security
v32@?0@"NSDictionary"8@"NSArray"16@"NSError"24
SecItemAddAndNotifyOnSync: %@ has entitlement %@
SecItemAddAndNotifyOnSync: %@ does not have entitlement %@, but is using SPI anyway
SecItemAddAndNotifyOnSync: %@ does not have entitlement %@
com.apple.securityd.SecItemAddAndNotifyOnSync-callback
v20@?0B8^{__CFError=}12
f_ckkscallback
SecItemSetCurrentItemAcrossAllDevices: %@ has entitlement %@
com.apple.private.ckks.currentitempointers_write
SecItemSetCurrentItemAcrossAllDevices: %@ does not have entitlement %@
SecItemSetCurrentItemAcrossAllDevices: client is missing access-group %@: %@
CKKS not yet initialized
No view manager, cannot forward request
v24@?0@"NSData"8@"NSError"16
SecItemFetchCurrentItemAcrossAllDevices: %@ has entitlement %@
com.apple.private.ckks.currentitempointers_read
SecItemFetchCurrentItemAcrossAllDevices: %@ does not have entitlement %@
SecItemFetchCurrentItemAcrossAllDevices: client is missing access-group %@: %@
ckkscurrent
%@,%@
parameter missing: %@
inet
genp
class %@ is not supported: %@
Client is missing access-group %@: %@
failed to build query: %@
com.apple.keychain.multiuser-admin
secKeychainDeleteMultiuser: %@ need entitlement %@
secKeychainDeleteMultiuser: %@ uuid have wrong length: %d
com.apple.private.keychain.appclipdeletion
com.apple.private.keychain.performance_impacting_api
com.apple.securityd.general
%@ %@
optional_params
ks_crypt_diversify: failed to create aks_params
ks_crypt_diversify: failed to '%s' item (class %d, bag: %d) Item can't be encrypted due to merge failed, so drop the item.
encrypt
ks_crypt_diversify: failed to create ref key with blob because bad data (bag: %d)
 (hibernation?)
ks_crypt_diversify: %x failed to '%@' item (class %d, bag: %d) Access to item attempted while keychain is locked%s.
ks_crypt_diversify: %x failed to '%@' item (class %d, bag: %d) No key available for class.
ks_crypt_diversify: %x failed to '%@' item (class %d, bag: %d) Item can't be decrypted on this device, ever, so drop the item.
ks_crypt_diversify: %x failed to '%@' item (class %d, bag: %d) Persona doesn't exist, so drop the item.
ks_crypt_diversify: %x failed to '%@' item (class %d, bag: %d)
ks_crypt: %x failed to '%@' item (class %d, bag: %d) Access to item attempted while keychain is locked%s.
ks_crypt: %x failed to '%@' item (class %d, bag: %d) No key available for class.
ks_crypt: %x failed to '%@' item (class %d, bag: %d) Item can't be decrypted on this device, ever, so drop the item.
ks_crypt: %x failed to '%@' item (class %d, bag: %d)
decrypt
delete
aks_ref_key: %x failed to '%s' item (class %d, bag: %d) Access to item attempted while keychain is locked.
aks_ref_key: %x failed to '%s' item (class %d, bag: %d) Item can't be decrypted on this device, ever, so drop the item.
aks_ref_key: %x failed to '%s' item (class %d, bag: %d)
aks_ref_key: failed to create ref key with blob: %x (bag: %d)
enabled
disabled
KeychainKeyDiversification
encrypted_data_from_blob: NULL 'blob data'
encrypted_data_from_blob: Bad object type %@ for 'blob data'
encrypted_data_from_blob: failed to decode 'encrypted data'
encrypted_data_from_blob: failed to decode 'key data'
object %@ is not a data
SecMockAKS
0123456789abcdf
1234567890123456789012345678901
keybagHandle
access_groups
external_data
acm_handle
logging
com.apple.securityd
security scope control
Emergency
Alert
Critical
Error
Warning
Notice
Info
Debug
none
null input
Unknown data encoding, expected CCDER_CONSTRUCTED_SET
Failed to create dictionary
Unknown data encoding, expected CCDER_CONSTRUCTED_SEQUENCE
debug
null
v24@?0Q8*16
yyyy-MM-dd HH:mm
Date Formatting
v16@?0^{__CFDateFormatter=}8
%@%@
ZuluCalendar
Invalid universal time year between 50 and 70
Failed to create utc date
Failed to create date
setting default value
continuing
Not a decimal digit
Unexpected end of datetime
trailing garbage at end of datetime
overflow
fraction ends in 0
fraction without digits
Invalid datetime character
yMdHms
v16@?0^{__CFCalendar=}8
Failed to encode date.
Invalid date: %i, %i, %i, %i, %i, %i, %i
com.apple.utilities.sqlite3
%@: [%d]%@ %s
%@: [%d->%d]%@ %s
%@: [%d] %s sql: %s
%@: [%d->%d] %s sql: %s
SecDb
%@-commit
__OSINSTALL_ENVIRONMENT
#SecDB
file::memory:?cache=shared
SecEmergency
Error with unexecuted sql remaining %@
pragma page_count
pragma freelist_count
pragma incremental_vacuum(%d)
SecDbStep SQLITE_ROW returned without a row handler
wal_checkpoint(FULL)
B16@?0^{__OpaqueSecDbConnection={__CFRuntimeBase=QAQ}^{__OpaqueSecDb}BBQBiB^{__CFError}^{sqlite3}^{__CFArray}}8
bind_blob[%d]: blob bigger than INT_MAX
bind_blob[%d]
bind_text[%d]: text bigger than INT_MAX
bind_text[%d]
bind_double[%d]
bind_int[%d]
bind_int64[%d]
v24@?0r*8Q16
bind CFNumberGetValue failed for %@
bind unsupported type %@
reset
finalize: %p
prepare_v2: sql bigger than INT_MAX
preparev2
prepare_v2: %@ unused sql: %@
SecDbWithSQL perform block missing
step[%d]: %s returned SQLITE_ROW with NULL row block
SecDbForEach step[%d]
SecDbConnection
invalid entry in changes array: %@
<SecDb path:%@ connections: %@>
step
BEGIN EXCLUSIVE
BEGIN
invalid transaction type %d
ROLLBACK
SQL DB %@ is corrupted already. Corruption error was: %d (previously %d)
/Library/Keychains/keychain-2.db
/Library/Keychains/ocspcache.sqlite3
/Library/Keychains/TrustStore.sqlite3
/Library/Keychains/caissuercache.sqlite3
PRAGMA integrity_check
NULL
Unable to process corruption marker: %{darwin.errno}d
%s-iscorrupt
mkpath_np %s: [%d] %s
open_v2 "%s" 0x%X
PRAGMA auto_vacuum
PRAGMA auto_vacuum = incremental
VACUUM
PRAGMA journal_mode = WAL
SQLProfile
SecDbHandleCorrupt not allowed to repair, handled error: [%d] %s
<SecDbConnection %s %s>
open
closed
com.apple.security.cfder.error
ccder failed to encode
Unknown number encoding
Number too large
Number allocation failed
Unable to get number from data
Unknown size
%@: [%d] %s
invalid tag
Unsupported DER Type
Null CFType
Unsupported CFType
trailing garbage after plist item
tag/length decode failed
Unknown string encoding
String allocation failed
Unknown numeric string encoding
Numeric string allocation failed
String extraction failed
Unknown boolean encoding
Unknown data encoding
Failed to create data
Unknown CoreEntitlements encoding
Failed to create CoreEntitlements data
v24@?0@8^B16
{[%@]}
Unknown null encoding
Unknown data encoding, expected CCDER_CONSTRUCTED_CFSET
Failed to create set
com.apple.will.never.happen
%@/%@
Library/Keychains
/System/Library/PrivateFrameworks/CrashReporterSupport.framework/CrashReporterSupport
/System/Library/PrivateFrameworks/CrashReporterSupport.framework/Contents/MacOS/CrashReporterSupport
BOOL soft_SimulateCrash(pid_t, mach_exception_data_type_t, NSString *__strong)
simulate_crash.m
SimulateCrash
void *CrashReporterSupportLibrary(void)
BOOL soft_WriteStackshotReport(NSString *__strong, mach_exception_data_type_t)
WriteStackshotReport
com.apple.security.xpc
domain
code
userinfo
NextTTRDate
com.apple.security.diagnostic-queue
606179
%@-%@
secttr
SecTTR
UNKNOWN
DISABLED
ENABLED
FOLLOWING
(unknown: %i)
uuid
zoneName
keyclass
peerID
icloudAccountState
epoch
altDSID
trustState
lastHealthCheckup
attemptedJoin
cdpState
syncingPolicy
voucher
voucherSignature
tlkSharesForVouchedIdentity
secureElementIdentity
isInheritedAccount
warmedEscrowCache
warnedTooManyPeers
settings
NO_ACCOUNT
ACCOUNT_AVAILABLE
ACCOUNT_AVAILABLE_UNUSED
UNTRUSTED
TRUSTED
NOTATTEMPTED
ATTEMPTED
proceed-with-ckks-keys
CKKSResultOperationError
octagon-local-reset
webAccess
enableKeychainBackupDevelopment
loggedout
wait_for_ck_account_status
lose_trust
waitfortrust
initializing
initialized
zonecreationfailed
fixup_fetch_cip
fixup_fetch_tlkshares
fixup_local_reload
fixup_resave_cdse
fixup_delete_tombstones
begin_fetch
fetching
fetchcomplete
needrefetch
process_key_hierarchy
check_zone_hierarchies
provide_key_hieararchy
provide_key_hieararchy_untrusted
heal_tlk_shares
healtlksharesfailed
tlkmissing
unhealthy
resetzone
resetlocal
ready
become_ready
process_incoming_queue
class_a_incoming_items_remaining
scan_local_items
reencrypt_outgoing_items
process_outgoing_queue
process_outgoing_queue_failed
handle_all_views
trusted_peers_changed
ck_account_logged_in
ck_account_logged_out
trusted_operation_begin
trusted_operation_end
ck_change_token_expired
ck_zone_missing
device_unlocked
fetch_requested
fetch_complete
key_process_requested
key_set
dropped_items
item_reencryption_needed
24_hr_notification
check_queues
policy_fresh
oqo_token
new_priority_views
INSERT OR REPLACE into %@ (%@) VALUES (%@);
 WHERE 
 AND 
%@%@(?)
%@%@%@
%@ IN (%@)
%@=(?)
 GROUP BY 
 ORDER BY 
DELETE FROM %@%@;
 LIMIT %lu
SELECT %@ FROM %@%@%@%@%@;
, %@
SELECT %@ FROM %@%@
ckkssql
%@ does not exist in database where %@
A subclass must override %@
parentKeyUUID
buckets
rateAll
rateGroup
rateUUID
capacityAll
capacityGroup
capacityUUID
trimSize
trimTime
overloadDuration
G:%@
U:%@
B32@?0@"NSString"8@"NSDate"16^B24
RateLimiter config: %@
Overloaded until %@, %lu total buckets
Not overloaded, %lu total buckets
%lu congested buckets. Top offenders: 
%@ range %@ to %@
No buckets congested
nothing_to_do
trigger_cloudservices
trigger_escrow_upload
wait_for_unlock
EscrowRequestControllerQueue
wait-for-unlock
escrow-request-cache-cert
escrow-request-attempt-escrow-upload
trigger-escrow-store
SIMULATOR_MODEL_IDENTIFIER
SerialNumber
OTDeviceInformationActualAdapter
v16@?0@"<OTDeviceInformationNameUpdateListener>"8
available
no account
ck-account-state
ckksaccount
ckstatus-refetch
<%@: %@, hsa2: %@>
ck-account-state-%@
ckksaccount-ck
v24@?0@"CKAccountInfo"8@"NSError"16
ckks-sos
ckksaccountblock
account state unknown
logged in
v44@?0q8@"NSString"16@"NSNumber"24B32@"NSError"36
<SOSStatus: %@ (%@)>
<CliqueStatus: %@>
ERSPending
escrow
complete
escorwrequest-healthSummary
com.apple.security.cdkeychain
LookupEntry
Item
ItemType
AccessControlEntity
SecCDKeychainLookupValueTypeString
SecCDKeychainLookupValueTypeData
SecCDKeychainLookupValueTypeNumber
SecCDKeychainLookupValueTypeDate
SecCDKeychainItemCiphertext
SecCDKeychainItemWrappedKey
SecCDKeychainItemRefKeyBlob
failed to deserialize wrapped secret data
SecCDKeychain
com.apple.security.securityd
com.apple.security.keychain.ak
failed to create random key for CD database encryption
failed to save encryption key to keychain, so bailing on database creation
can't create a class A store right now because the keychain is locked
result of keychain query for database key is wrong kind of class: %@
failed to save or retrieve key for CD database encryption
unknown error retrieving managed object context
SecCDKeychain-PrimaryKey-%@
client not in access group: %@
keychain item missing access group
attempt to insert items into deallocated keychain instance
insertItems: could not get managed object context
lookupKey == %@ AND lookupValue == %@
failed to unique item (%@) using primary keys: %@
lookupKey == %@ AND lookupValueType == %@ AND lookupValue == %@
v24@?0@"NSManagedObjectContext"8@"NSError"16
persistentID == %@
attempt to fetch item from deallocated keychain instance
fetchItemForPersistentID: could not get managed object context
did not find any keychain items matching persistent ID: %@
attempt to lookup items from deallocated keychain instance
fetchItemsWithValue: could not get managed object context
did not find any keychain items matching query
deleteItemWIthPersistentID: could not get managed object context
attempt to delete item with persistant identifier that could not be found: %@
failed to deserialize SecCDKeychainItemMetadata with item type (%@) persistentID: %@ owner: %@
%@: itemType:(%@) owner:(%@) persistentID:(%@)
 attributes: %@
 lookup attributes: %@
could not create SecCDKeychainItem from managed item - managed item was malformed
could not decrypt secrets for item
%@: itemType:(%@) persistentID:(%@)
 owner: %@
 attributes: %@
 lookup attributes: %@
primaryKeys: %@
q24@?0@"NSString"8@"NSString"16
failed to create random key for encrypting item
failed to serialize item secrets dictionary
failed to encrypt item secret data
failed to create refKey
failed to encrypt item
failed to serialize item secret data blob
failed to create refKey for unwrapping item secrets
%@ : %@ [%@]
%@ | %d
 name: %@
 version: %d
 primaryKeys: %@
 syncableKeys: %@
<OctagonSelfPeer: %@>
[OctagonCKKSPeerAdapter:%@]
<OctagonCKKSPeerAdapter: %@ e:%d>
v16@?0@"_SFKeychainIdentityFetchResult"8
signing-key %@
encryption-key %@
no peer ID present
v16@?0@"<CKKSPeerUpdateListener>"8
Rate-limited the OTCheckHealthOperation:%@
v40@?0B8B12B16B20@"OTEscrowMoveRequestContext"24@"NSError"32
processOutgoingQueue
processIncomingQueue
TLKShareProcessing
scanLocalItems
fetchAllChanges
reencryptOutgoing
zone
count
access-group-missing
accessgroup
items
store
metadata_rampstate_ghostBustMID
metadata_rampstate_ghostBustSerial
metadata_rampstate_ghostBustAge
metadata_zone
otmanager
ghostBustMID
ghostBustSerial
ghostBustAge
Octagon APIs do not support non-primary users
com.apple.TrustedPeersHelper
octagon-client
No context for (%@,%@)
v56@?0@"NSString"8@"NSData"16@"NSData"24@"NSData"32@"NSData"40@"NSError"48
Octagon-healthSummary
octagon-analytics
%@%@Tries
CFU-healthSummary
octagon-recovery
Device is considered a limited peer, cannot enroll recovery key in Octagon
malformed recovery key
octagon-custodian-recovery
v24@?0@"OTCustodianRecoveryKey"8@"NSError"16
Device is considered a limited peer, cannot remove recovery key in Octagon
octagon-inheritance
v24@?0@"OTInheritanceKey"8@"NSError"16
Device is considered a limited peer, cannot remove inheritance key in Octagon
octagon-cdp
octagon-fetch-escrow-records
octagon-remove-escrow-cache
octagon-remove-escrow-caches
octagon-user-controllable-views
paused
octagon-reset-account-cdp-contents
SecureBackup
Class getSecureBackupClass(void)_block_invoke
OTManager.m
Unable to find class %s
void *CloudServicesLibrary(void)
/System/Library/PrivateFrameworks/CloudServices.framework/CloudServices
/System/Library/PrivateFrameworks/CloudServices.framework/Contents/MacOS/CloudServices
CKKSGroupOperationDispatchQueue
ckksgroup
group-start
group-finish
group-queue:%@
group-start:%@
group-finish:%@
<%@: %@ recursion>
<%@: %@ %@ - %@>
<%@: %@ %@>
Potentially more than 20 operations
<%@: %@ [%@] error:%@>
<%@: %@ [%@]%@>
 dep:
isFinished
isExecuting
Attempt to add operation(%@) to completed group(%@)
UUID
ckzone
ckrecord
entryDigests
ckmanifest_leaf
%@ %@ records: %lu
ckksmanifest
v32@?0@"NSMutableDictionary"8@"NSString"16@24
ManifestLeafRecord%@%@
CKKSManifestLeafRecord.m
failed to encode manifest leaf node DER with error: %@
pending_manifest_leaf
WrongCKRecordTypeException
CKRecordType (%@) was not %@
ckksitem
WrongEncryptionVersionException
%d is not a known encryption version
server_
<%@: %@>
<%@: %@ %p>
encitem
wrappedkey
gencount
encver
pcss
pcsk
pcsi
ckksresync
Received a record(%@) with a bad generation count (%ld > %@)
%@-fake-%@
spid-
ckme
null error passed in
Unrecognized encryption version: %lu
v_Data
Could not remove padding from decrypted item: malformed data
ckkszone
handle-modification
<%@(%@): %@ %@ (%@)>
ckks-key
can't pick a key class for an empty item
can't pick key class for protection %@
No key for item
Couldn't create object plist
No UUID for item
UUID not found in object
accessgroup not found in object
no-group
Couldn't create an item
Couldn't encrypt item
state
outgoingqueue
action
waituntil
count(rowid)
count(*)
ckksoutgoing
incomingqueue
ckkskey
ckksheal
keyClass
backupWrappedMetadataKey
generic password query failed
internet password query failed
certificate query failed
scanning %d %@
v24@?0^v8@"NSString"16
com.apple.security.keychainhealth
encountered %d errors searching for corrupted items
searchingErrorCount
failed to delete corrupted item
encountered %@ errors searching for corrupted items and %d errors attempting to delete corrupted items
incoming-queue-operation
ckkspointer
ckksincoming
Item did not have a reasonable class: %@
incoming-queue-response
non-onboarded
com.apple.ckks.item.propagation
time
modifyRecordsComplete
Manifest:-:
ManifestLeafRecord:-:
v36@?0@"NSString"8@"TPSyncingPolicy"16B24@"NSError"28
v48@?0@"NSData"8@"NSData"16@"NSArray"24@"TrustedPeersHelperTLKRecoveryResult"32@"NSError"40
join-sos-after-fetch
<CKKSTLKShareCore(%@): recv:%@ send:%@>
Peer(%@) has no signing key
No TLK share from %@
zoneID
curve
tlkUUID
senderPeerID
poisoned
wrappedTLK
signature
receiverPeerID
receiverSPKI
No trusted peer signed %@
Signed UUID doesn't match unsigned UUID for %@
inflight
reencrypt
deleted
mismatched_view
classA
classC
com.apple.security.keychain
com.apple.securityd.aps
uploadver
parentkeyref
pcsservice
pcspublickey
pcspublicidentity
server_wascurrent
synckey
class
tlkshare
sender
receiver
receiverPublicEncryptionKey
currentkey
currentitem
devicestate
octagonpeerid
octagonstatus
peerid
keystate
currentTLK
currentClassA
currentClassC
lastunlock
osver
digest_value
generation_count
leaf_records
peer_manifests
current_items
signatures
signer_id
schema
manifest_leaf
readypendingunlock
waitfortlk
waitfortlkcreation
waitfortlkupload
waitforunlock
badcurrentpointers
newtlksfailed
healtlkshares
check_tlk_shares
CKKSErrorDomain
CKKSServerExtensionErrorDomain
com.apple.security.ckks.pkconflict
com.apple.security.ckks.reencrypt
tv(sim)
kern.osrelease
kern.osversion
%s (%s)
Version
value
<CKKSZoneStateEntry(%@): created:%@ subscribed:%@ moreRecords:%@>
ckstate
ckzonecreated
ckzonesubscribed
changetoken
lastfetch
ratelimiter
lastFixup
morecoming
lastscan
extra
com.apple.private.escrow-update
com.apple.security.escrow-update
some
string_value
double_value
date_value
error_value
bagIdentity
sos adapter not enabled
failed to retrieve current self
RLgroups
RLoverLoadedUntil
RLlastJudgment
RLassetType
RLconfig
DisableKeychainRateLimiting
general
maxItemAge
maxStateSize
groups
property
name
badness
capacity
rate
RateLimiter[%@]
config:%@
groups:%@
overloaded:%@
lastJudgment:%@
accessGroup
RLoverloadedUntil
zone:
[OTSOSActualAdapter]
v12@?0i8
<OTSOSActualAdapter e:%d>
Not in SOS circle, but no error returned
No SOS peer info available, but no error returned
Not all SOS peer keys available, but no error returned
v32@?0^{__SecKey={__CFRuntimeBase=QAQ}^{__SecKeyDescriptor}^v}8^{__SecKey={__CFRuntimeBase=QAQ}^{__SecKeyDescriptor}^v}16^{__CFError=}24
v24@?0^{__CFSet=}8^{__CFError=}16
v16@?0^{__CFError=}8
supported
not supported
[OTSOSMissingAdapter]
SOS unsupported on this platform
establish-with-keys
v40@?0@"NSString"8@"NSArray"16@"TPSyncingPolicy"24@"NSError"32
determine-next-state
Key hierarchy has split: %@ and %@ are roots
Invalid TLK from CloudKit (during heal)
heal-cloudkit-modify-operation-finished-%@
<CKKSCurrentItemPointer(%@) %@: %@>
WrongCKRecordNameException
CKRecord name (%@) was not %@
identifier
currentitems
currentItemUUID
ckksviews
ckksfetch
CloudkitKeychainService
ckks-resync-local
resync-step%u-outgoing
resync-step%u-incoming
resync-step%u-reload
resync-step%u-incoming-again
resync-step%u-scan
resync-step%u-consider-restart
resynchronization restarted too many times; churn in database?
v64@?0@"NSString"8@"NSData"16@"NSData"24@"NSData"32@"NSData"40@"TPSyncingPolicy"48@"NSError"56
com.apple.security.octagon
Octagon Account State (%@,%@)
octagon-%@
SecItemUpdate: %d
SecItemAdd: %d
SecItemDelete: %d
SecItemCopyMatching: %d
couldn't deserialize account state
recoveryType
wrappedBagSecret
wrappedKCSKSecret
wrappedRecoveryKey
<CKKSCurrentKeyPointer(%@) %@: %@>
currentkeys
currentKeyUUID
<CKKSCurrentKeySet(%@): %@:%@ %@:%@ %@:%@ new:%d %@>
<CKKSCurrentKeySet(%@): %@:%@ %@:%@ %@:%@ new:%d>
unable to make keychain backed set; key is missing
metric_type
device_info
cloudkit_info
server_info
triggers
report_frequency
report_frequency_base
network_event
generic_event
none_type
network_event_type
generic_event_type
com.apple.private.ckks
ckksdevice
no AccountTracker object
CK device ID missing
Rate-limited the CKKSUpdateDeviceStateOperation
updateDeviceState-modifyRecordsComplete
ciphertext
wrappedKey
tamperCheck
near-future-scheduler-%@
nfs-%@
yyyy-MM-dd HH:mm:ss
<CKKSNearFutureScheduler(%@): next at %@
<CKKSNearFutureScheduler(%@): no pending attempts
com.apple.securityd.%@
OTBottledPeer
OTFailureReason
com.apple.security.trustedpeers.container
<%@(%@): %@>
ckmirror
wascurrent
v16@?0@"NSDictionary"8
<OctagonFlags: %@>
OctagonFlags.m
state machine tried to handle unknown flag %@
setting-recovery-tlks
Failed to parse UUID from TPH
v32@?0@"NSArray"8@"TrustedPeersHelperCustodianRecoveryKey"16@"NSError"24
<CKAccountInfo: %@>
<CKKSSelves: %@ %@>
(no past selves)
<CKKSActualPeer(%@): pubEnc:%@ pubSign:%@ views:%d>
encryptionKey
signingKey
viewList
<CKKSSOSPeer(%@): pubEnc:%@ pubSign:%@ views:%d>
spid
<CKKSSOSSelfPeer(%@): pubEnc:%@ pubSign:%@ views:%d>
type
timestamp_start
timestamp_end
metric
cloudkit
cloudkit_client
server
publicKey
aksRefKey
aksWrappedKey
backupWrappedKey
reduce-rate-limiting
ckks-resync
resync-step%u-fetch
run-incoming
v16@?0@"CKKSGroupOperation"8
com.apple.securityd.ckks
key-set-provided
key-set-queue
%@ must override %@
change array count: %ld
SOSChangeTracker
ChangeTracker is not concrete
tracker
<ChangeTracker %@ children %ld/%ld>
NonConcrete
cdp-finish
unknown-local-passcode
ckksscan
^%@$
^com\.apple\.cfnetwork$
com.apple.cfnetwork
^com\.apple\.safari\.credit-cards$
com.apple.safari.credit-cards
v16@?0^{SecDbItem={__CFRuntimeBase=QAQ}^{SecDbClass}iii^{__CFDictionary}^{__CFData}^v^{__CFArray}}8
com.apple.securityd.ckks.scan
scan-local-items
ckks-local-reset
local-reset
record-zone-changes-completed
No clients want a fetch right now
v24@?0@"CKRecordID"8@"NSString"16
v32@?0@"CKRecordZoneID"8@"CKServerChangeToken"16@"NSData"24
v44@?0@"CKRecordZoneID"8@"CKServerChangeToken"16@"NSData"24B32@"NSError"36
ckksfetcher
APNSPushMetrics
push_token_uuid
push_received_date
CKKS Push
push_event_name
fetch_error
fetch_error_domain
fetch_error_code
total_modifications
total_deletions
CKKS Push-webtunnel
submit-metric
v32@?0@"CKRecordID"8@"CKRecord"16^B24
v32@?0@"CKRecordID"8@"CKKSCloudKitDeletion"16^B24
<OSTPath(%@)>
watcher-%@
watcher-timeout-%@
<OctagonStateTransitionWatcher(%@): remaining: %@, result: %@>
Operation(%@) timed out waiting to start for [%@]
state became %@, was expecting %@
intended
became
<OctagonStateMultiStateArrivalWatcher(%@): states: %@, result: %@>
Operation(%@) timed out waiting to start for any state in [%@]
continue-ckks-resets
wait-for-ckks-reset
v24@?0@"TrustedPeersHelperPeerState"8@"NSError"16
ckks-logger
com.apple.security.ckks
v32@?0@"NSString"8@"TPSyncingPolicy"16@"NSError"24
com.apple.security.keychain.backups
baguuid
platform doesn't do backups
otcuttlefish
com.apple.octagon.launch
com.apple.security.otcuttlefishcontext
octagon-tlk-request
octagon-policy-check
octagon-upgrade-ucv
octagon-retry-fixup
Trusted
Untrusted
iCloudAccount
octagon-ucv
<OTCuttlefishContext: %@, %@>
v16@?0@"NSError"8
cloudkit-account-gone
check-trust-state
octagon-account-gone
account-not-available
octagon-cdp-status
resetting-state-machine
local-reset-watcher
establish
rpc-reset-and-establish
octagon-leave-clique
leave-clique
remove-friends
octagon-pairing
hsa2-check
ck-available
uninitialized
cdp_enabled
cdp_enabled_push_received
fixups-complete
begin-reset
account-probably-present
attempt-sos-upgrade
untrusted-update
move-to-initializing
no-consistency-checks
no-preload-octagon-key
moving-to-enable-cdp-bit
initializing-after-initial-unlock
initializing-after-unlock
octagon-update
ckks-assist
attempt-sos-update-preapproval
attempt-user-view-upgrade
ckks-policy-update
ckks-update-trust
octagon-set-secureelement
octagon-initializing
octagon-fixup_check
octagon-health-securityd-trust-check
octagon-health
octagon-health-tph-trust-check
v36@?0q8B16B20B24@"NSError"28
rpcHealthCheck
octagon-health-post-repair-cfu
octagon-icloud-account-available
octagonpush
v48@?0q8@"NSString"16@"NSDictionary"24B32B36@"NSError"40
iPhone
iPad
octagon-become-untrusted
octagon-inherited
octagon-ready
aps-push-ratelimiter
octagon-push-ratelimited
octagon-devicename
sos-consistency-ratelimiter
octagon-ck
present
missing
Cannot determine iCloud Account state; try again later
User is not signed into iCloud.
prepareForApplicant
rpcPrepare-callback
rpc-join-with-bottle
rpc-join-with-recovery-key
rpc-join-with-custodian-recovery-key
preflight-custodian-recovery-key
rpc-join-with-inheritance-key
preflight-inheritance-recovery-key
rpc-join
signingSPKI
signingSPKIHash
currentSelf
pastSelves
containerName
contextID
stateUnpaused
statePendingFlags
stateFlags
memoizedTrustState
memoizedAccountState
memoizedCDPStatus
octagonLaunchSeqence
Never checked
memoizedlastHealthCheck
sosTrustedPeersStatus
sosSelvesStatus
escrowRequest
CoreFollowUp
lastOctagonPush
pushEnvironments
contextDumpError
contextDump
self
bottleID
bottles
peers
dynamicInfo
included
stableInfo
device_name
setRecoveryKey-callback
createCustodianRecoveryKey-callback
removeCustodianRecoveryKey-callback
createInheritanceKey-callback
storeInheritanceKey-callback
removeInheritanceKey-callback
v24@?0@"TrustedPeersHelperEgoPeerStatus"8@"NSError"16
v40@?0@"NSData"8@"NSString"16@"NSData"24@"NSError"32
octagon-refetch-ckks-policy
Sync policy is missing even after refetching
This platform does not support setting the user-controllable view syncing status
octagon-se
walrus
No account settings have been set
wait-for-sync-reply
v32@?0@"NSString"8@"NSString"16^B24
octagon-tlk-recoverability
Record's bottleID is not valid in cuttlefish
Octagon peerID not trusted for record
v16@?0@"NSString"8
Record cannot recover any views
OctagonEscrowMove
OctagonEscrowMoveUnthrottled
Not performing health check, waiting for Class C Unlock
octagon-trust-health-check
Not in circle
sos-upgrade-to-ready
octagon-metrics
unlock
Unknown conditions: 0x%x
<OctagonPendingFlag: %@: %@>
<OctagonPendingFlag: %@: %@ %@>
octagon-inheritor
v80@?0@"NSString"8@"NSData"16@"NSData"24@"NSData"32@"NSData"40@"TPSyncingPolicy"48@"NSString"56@"NSArray"64@"NSError"72
v32@?0@"NSArray"8@"TrustedPeersHelperTLKRecoveryResult"16@"NSError"24
engine-state-v2
engine-peer-states
engine-manifest-cache
engine-coders
SOSEngine queue
SOSEngine
trailing %td bytes at end of state
engine-sync
v16@?0^{__OpaqueSOSTransaction=}8
Engine has no peer for %@
v16@?0^{__OpaqueSOSPeer=}8
engineLogState
<Engine %@ peers %@ MC[%d] PS[%d]>
object %@ is not an array
-tomb
engine-state
manifestCache
peerState
peerIDs
traceDate
 %@ (%@)
com.apple.sbd
SecureBackupPublicKeybag
SecureBackupService
B64@?0^{__OpaqueSOSChangeTracker=}8^{__OpaqueSOSEngine={__CFRuntimeBase=QAQ}^{SOSDataSource}^{__CFString}^{__OpaqueSOSManifest}^{__CFData}^{__CFDictionary}^{__CFDictionary}^{__CFDictionary}^{__CFDictionary}^{__CFArray}^{__CFDate}^{__CFDictionary}BB@@@@?B}16^{__OpaqueSOSTransaction=}24Q32Q40^{__CFArray=}48^^{__CFError}56
Execution has encountered an unexpected state
 trusted
B72@?0^{__OpaqueSOSChangeTracker=}8^{__OpaqueSOSEngine={__CFRuntimeBase=QAQ}^{SOSDataSource}^{__CFString}^{__OpaqueSOSManifest}^{__CFData}^{__CFDictionary}^{__CFDictionary}^{__CFDictionary}^{__CFDictionary}^{__CFArray}^{__CFDate}^{__CFDictionary}BB@@@@?B}16^{__OpaqueSOSTransaction=}24Q32Q40^{__OpaqueSOSManifest=}48^{__OpaqueSOSManifest=}56^^{__CFError}64
 untrusted
no change tracker for view set %@
v48@?0^{SOSDataSource=^{__OpaqueSOSEngine}^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?}8^{__OpaqueSOSTransaction=}16Q24Q32^{__CFArray=}40
peer: %@ is untrusted inflating not allowed
peer: %@ not found
com.apple.security.secureobjectsync.itemtime.known
com.apple.security.secureobjectsync.itemtime.new
will-commit
did-commit
did-rollback
unknown
com.apple.security.sos
apple
AirPort
%@-tomb
PCS-
ViewNotificationQueue
view
com.apple.security.view-change.%@
%02X
object %@ is not a string
in SOSPeerWriteDelete
dropping from manifest: not found in datasource
dropping from manifest
in SOSDataSourceForEachObject
in SOSPeerWriteAdd
 notifying sbd
writing changes to backup
No coder for peer: %@
Coders not loaded.
Wrong key size
Circular reference in key hierarchy
No current trust states; can't unwrap TLK
Potential TLK %@ doesn't wrap itself: %@
%@-nonsync
%@-piggy
<%@(%@): %@ (%@,%@:%d)>
synckeys
Data failed to parse as a CKKSSerializedKey
newtlks
CKKS APIs do not support non-primary users
CKKS-healthSummary
manager
@"NSDictionary"8@?0
CKKS-%@-healthSummary
%@-daysSinceClassASync
%@-daysSinceClassCSync
%@-daysSinceLastKeystateReady
metrics
CKKS global zone state
ckkstests
ckkscallback
No iCloud account available; item is not expected to sync
No syncing view for %@, %@
ckksbackup
rpc-resync-cloudkit
rpc-resync-local
CKKS disabled
rpc-fetch-and-process-result
rpc-push
ckks-rpc
No metric name
No CKKS for %@, %@
v40@?0@"CKKSExternalKey"8@"NSArray"16@"NSArray"24@"NSError"32
com.apple.security.CKKSHealthSummary
periodic-device-state-update
v28@?0@"TPSyncingPolicy"8i16@"NSError"20
TamperCheck
failed to deserialize keychain item blob
SecDbKeychainItemV7.m
Invalid parameter not satisfying: %@
failed to unwrap item metadata key
failed to decrypt item metadata contents
tamper check failed for metadata decryption
error decrypting item secret data contents
KeyDiversify
SecDbKeychainItemV7: failed to decode acl dict
SecDbKeychainItemV7: failed to decrypt item, Item can't be decrypted due to failed decode der, so drop the item.
reachabiltity-tracker
ckksnetwork
unavailable
v16@?0@"NSObject<OS_nw_path>"8
<CKKSReachabilityTracker: %@>
online
offline
network
network-available-dependency
Can't find attribute of kind %d in class %@
attr %@ has no default value
attribute %@ has NULL value
error == NULL
state= encrypted but edata is NULL
SecDbItem
attribute %@: value: %@ failed to convert
secitem
NULL value in dictionary
 IN (
 NOT IN (
persistent ref %@ is not a data
rowid %@ is not a 64 bit number
no rowid for %@
insert
SELECT 
 FROM 
, |otherAttr
tomb
%s,%@,%02X%02X%02X%02X,%s,%@,%@,%lld%@,%s,%s%02X%02X%02X%02X
v_pk
%04lx:
...|%08llx
secd-hash-name
INSERT INTO 
)VALUES(?
failed to get attribute %@ data
Corrupted item found in keychain
Corrupted item (attr NULL) found in keychain
UPDATE 
 SET 
DELETE FROM 
v24@?0@"NSString<OctagonStateString>"8^B16
%@-pending-flag
initialize
 (pending: %@)
<OctagonStateMachine(%@,%@,%@)>
OctagonStateMachine.m
state machine tried to enter unknown state %@
halt
octagon-state-follow-up
(no error)
pending-flag
Must have a lock state tracker to wait for unlock
Must have a network reachability tracker to use network reachability pending flags
test
state-rpc
%@-callback
intial-transition-%@
ks_encrypt_data: invalid plain text
ks_encrypt_data: SecRandomCopyBytes failed
ks_encrypt_data: CCCryptorGCM failed: %d
ks_encrypt_data: CCCryptorGCM expected: 16 got: %ld byte tag
SecAccessControl
ks_decrypt_data: invalid blob
ks_decrypt_data: Check for underflow (length)
ks_decrypt_data: Check for underflow (prot_length)
ks_decrypt_data: Check for underflow (prot)
ks_decrypt_data: invalid ACL
ks_decrypt_data: Check for underflow (keyclass)
ks_decrypt_data: invalid keyclass detected
ks_decrypt_data: SecAccessControlCreate failed
ks_decrypt_data: SecAccessControlSetProtection failed
ks_decrypt_data: Check for underflow (wrapped_key_size)
ks_decrypt_data: invalid version %d
ks_decrypt_data: Check for underflow (wrapped_key/taglen)
ks_decrypt_data: Check for underflow (CBC check)
ks_decrypt_data: invalid length on CBC data
ks_decrypt_data: failed to allocate data for plain text
ks_decrypt_data: CCCryptorGCM failed: %d
ks_decrypt_data: CCCryptorGCM expected: 16 got: %ld byte tag
ks_decrypt_data: CCCryptorGCM computed tag not same as tag in blob
ks_decrypt_data: CCCrypt failed: %d
r*48@?0^{__CFAllocator=}8r^^v16^^{__CFError}24r*32r*40
version is unexpected: %d
item's access group '%@' not in %@
ACL protection doesn't match the one in blob (%@ : %@)
No v_Data in backup dictionary %@
No v_PersistentRef in backup dictionary %@
v_PersistentRef %@ failed to decode
v_PersistentRef has unexpected class %@
backupUUID
Corrupted item on decrypt accc != pdmn
non-device keybag
accessible attribute %@ not a string
accessible attribute %@ unknown
plist is a %@, expecting a dictionary
trailing garbage at end of decrypted item
Null DER
com.apple.airplay.password
YouTube
com.apple.youtube.credentials
IPSec Shared Secret
PPP Password
PrintKitAccessGroup
<CKKSListenerCollection(%@): %@>
octagon-sos
after-update
sos-upgrade-with-keys
q_pairs overflow
Missing class
Past query key limit
Out of memory
clip
conflicting kSecAccess and kSecAccessControl attributes
kSecAccessControl missing protection
com.apple.apsd
update_applier: unknown key type %@
update_applier: key %@ has NULL value
set_data: value %@ is not type data
can't find class named: %@
query missing class name
applier: NULL key
applier: key %@ has NULL value
applier: key %@ invalid
applier: key %@ invalid length
applier: key %@ neither string nor number
add_class: key %@ is not %@
can find class named: %@
failed to convert match limit %@ to CFIndex
unsupported match limit %@
unsupported value for kSecMatchPolicy attribute
unsupported kSecMatchPolicy object in query
unsupported array of policies
unsupported value for kSecMatchValidOnDate attribute
unsupported value for kSecMatchTrustedOnly attribute
add_return: value %@ is not CFBoolean
add_return: unknown key %@
u_ItemList
add_use: value %@ for key %@ is neither CFBoolean nor CFNumber
add_use: value %@ for key %@ is not CFData
add_use: value %@ for key %@ is not CFString
add_use: unknown key %@
add_value: value %@ is not a valid persitent ref
add_value: unknown key %@
set_uuid_persistent_ref: value %@ is not type data
result-operation-timeout
finished %@
cancelled
executing
pending
<%@: %@ error:%@>
<%@: %@%@>
resultoperation
B32@?0@8Q16^B24
CKKSResultOperationDescriptionError
Excess recursion
Success-dependent operation failed
Operation (%@) cancelled
signerID
CKKSManifestDigestKey
CKKSManifestPeerManifestsKey
CKKSManifestCurrentItemsKey
CKKSManifestGenerationCountKey
CKKSManifestSchemaVersionKey
CKKSManifestEC384SignatureKey
CKKSManifestErrorDomain
/System/Library/Frameworks/Security.framework
CKKSLogging
plist
SyncManifests
EnforceManifests
v24@?0@"_SFECKeyPair"8@"NSError"16
v24@?0@"NSString"8@"NSError"16
q24@?0@"CKKSManifest"8@"CKKSManifest"16
v32@?0@"CKKSManifest"8Q16^B24
leafIDs
peerManifests
currentItems
futureData
ckmanifest
v32@?0@"NSString"8@"NSData"16^B24
Manifest%@%@%@%@%@%lu
v32@?0@"NSString"8@16^B24
could not find manifest public key for peer %@
could not validate item because the digest is invalid
could not validate current item because the UUID does not match the manifest
pending_manifest
failed to generate ego manifest because egoPeerID is nil
failed to generate ego manifest
%@ peerID: (%@)
v24@?0^{__SecKey=}8^{__CFError=}16
v32@?0@"NSString"8@"CKKSManifestInjectionPointHelper"16^B24
<CKKSPeerProviderState(%@): %@%@ %@%@>
No current self peer available
No current trusted peers available
Key unwrap failed
No trusted peers
No trusted TLKShares for %@
v24@?0^{__OpaqueSOSTransaction=}8^{__OpaqueSOSPeer=}16
v24@?0^{SOSDataSource=^{__OpaqueSOSEngine}^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?}8^{__OpaqueSOSEngine={__CFRuntimeBase=QAQ}^{SOSDataSource}^{__CFString}^{__OpaqueSOSManifest}^{__CFData}^{__CFDictionary}^{__CFDictionary}^{__CFDictionary}^{__CFDictionary}^{__CFArray}^{__CFDate}^{__CFDictionary}BB^{dispatch_queue_s}^{dispatch_source_s}^{dispatch_queue_s}@?B}16
v16@?0^{__OpaqueSOSObject=}8
No datasource
bad class %@ in backup
object %@ is not a dictionary
FeatureAllowed
FeaturePromoted
FeatureVisible
RetryAfter
 Couldn't find CKRecord for ramp. Defaulting to not ramped in
True
False
device is locked
not signed in
no network
v36@?0B8B12B16q20@"NSError"28
timed out waiting for response from CloudKit
cloud kit timed out
fetching ramp state
dataSourceFactory queue
hash
v40@?0^{__OpaqueSecDbConnection=}8Q16Q24^{__CFArray=}32
v24@?0^{sqlite3_stmt=}8^B16
SOSDataSource-%@
no class or data in object
no such class %@; update kc_class_with_name 
query missing %@ attribute
dsf queue
authkit
ACAccount not available
No primary account
No altdsid on primary account
security-authkit
true
false
AKAnisette not available
AuthKit
missingMID
Anisette data does not have machineID
can't get AKDeviceListRequestContextClass
Can't get primary AltDSID
missingAltDSID
can't get authController
otauthkitadapter-notifiers
v16@?0@"<OTAuthKitAdapterNotifier>"8
Missing entitlement '%@'
com.apple.private.octagon
attribute %@ not found in class %@
INSERT INTO tversion(version,minor) VALUES(%d, %d);
sqlite3_exec: %s
duplicate item %@
authentication failed
value ref not supported by queries
no error
attributes to query illegal; both persistent ref and other attributes can't be searched at the same time
attributes to query illegal; both row_id and other attributes can't be searched at the same time
attributes to query illegal; both token persistent ref and other attributes can't be searched at the same time
match not supported in attributes to update
value ref not supported in attributes to update
attributes to update illegal; both row_id and other attributes can't be updated at the same time
attributes to update illegal; both token persistent ref and other attributes can't be updated at the same time
No items updated
Delete failed to delete anything
lockdown-identities
Public
Private
com.apple.managedconfiguration
com.apple.account.CloudKit.token
com.apple.account.idms.continuation-key
push.apple.com
push.apple.com,PerAppToken.v0
appleaccount
com.apple.appleaccount.fmf.token
com.apple.appleaccount.fmf.apptoken
com.apple.appleaccount.fmip.siritoken
com.apple.appleaccount.cloudkit.token
com.apple.account.AppleAccount.token
com.apple.account.AppleAccount.password
com.apple.account.AppleAccount.rpassword
com.apple.account.idms.token
com.apple.account.idms.heartbeat-token
com.apple.account.IdentityServices.password
com.apple.account.IdentityServices.rpassword
com.apple.account.IdentityServices.token
BackupIDSAccountToken
com.apple.ids
com.apple.gs.
com.apple.facetime
registrationV1
com.apple.ind
com.apple.ind.registration
ichat
iMessage Encryption Key
iMessage Signing Key
com.apple.rapport
DELETE FROM genp WHERE musr = ?
DELETE FROM inet WHERE musr = ?
DELETE FROM cert WHERE musr = ?
DELETE FROM keys WHERE musr = ?
DELETE FROM %@ WHERE agrp = ? AND clip = 1
v24@?0^{SecDbItem={__CFRuntimeBase=QAQ}^{SecDbClass}iii^{__CFDictionary}^{__CFData}^v^{__CFArray}}8^^{SecDbItem}16
Can't create keychain dictionary
keybag-uuid
non-
Keybag UUID (%@) mismatch with backup (%@)
DELETE FROM genp WHERE sync = 0 AND NOT agrp IN ('com.apple.security.sos', 'com.apple.security.sos-usercredential', 'com.apple.security.ckks', 'com.apple.security.egoIdentities', 'com.apple.security.octagon');
DELETE FROM inet WHERE sync = 0 AND NOT agrp IN ('com.apple.security.sos', 'com.apple.security.sos-usercredential', 'com.apple.security.ckks', 'com.apple.security.egoIdentities', 'com.apple.security.octagon');
DELETE FROM cert WHERE sync = 0 AND NOT agrp IN ('com.apple.security.sos', 'com.apple.security.sos-usercredential', 'com.apple.security.ckks', 'com.apple.security.egoIdentities', 'com.apple.security.octagon');
DELETE FROM keys WHERE sync = 0 AND NOT agrp IN ('com.apple.security.sos', 'com.apple.security.sos-usercredential', 'com.apple.security.ckks', 'com.apple.security.egoIdentities', 'com.apple.security.octagon');
restore
Missing or invalid %@ in backup dictionary
No key roll in progress.
CREATE TABLE %@(
 NOT NULL
 DEFAULT 0
 DEFAULT ''
CREATE INDEX %@%@0 ON %@(%@) WHERE %@=0;
CREATE INDEX %@%@ ON %@(%@);
BLOB
TEXT
INTEGER
REAL
INTEGER PRIMARY KEY AUTOINCREMENT
UNIQUE(
pref
SELECT crowid, certdata, certpersistref, rowid, data, persistref FROM (SELECT cert.rowid AS crowid, cert.labl AS labl, cert.issr AS issr, cert.slnr AS slnr, cert.skid AS skid, cert.tkid AS tkid, keys.*,cert.data AS certdata, cert.persistref AS certpersistref FROM keys, cert WHERE keys.priv == 1 AND cert.pkhh == keys.klbl
SELECT crowid, certdata, rowid, data FROM (SELECT cert.rowid AS crowid, cert.labl AS labl, cert.issr AS issr, cert.slnr AS slnr, cert.skid AS skid, cert.tkid AS tkid, keys.*,cert.data AS certdata FROM keys, cert WHERE keys.priv == 1 AND cert.pkhh == keys.klbl
cert.agrp
crowid
agrp
SELECT rowid, data, agrp, persistref FROM 
SELECT rowid, data, agrp FROM 
 IN (?
%@=%lld
musr = ?
certpersistref = ?
clip = 0
 LIMIT %ld
no matching items found
ItemNotFound
ratelimiterdisabledlogevent
certdata
certtkid
ROWID
persistref = ?
%@ AND pdmn NOT IN ('aku','akpu','cku','dku')
SecCritical
invalid-akpu+sysbound
DELETE from genp;
DELETE from inet;
DELETE from cert;
DELETE from keys;
class name %@ is not a string
attempt to import an identity
value %@ is not a dictionary
import
check_generation: Check for underflow
rowid
cdat
mdat
labl
pdmn
sha1
accc
vwht
tkid
u_Tomb
crtr
alis
desc
icmt
invi
nega
cusi
prot
scrp
acct
svce
gena
sdmn
srvr
ptcl
atyp
port
path
ctyp
cenc
subj
issr
slnr
skid
pkhh
kcls
perm
priv
modi
klbl
atag
bsiz
esiz
sdat
edat
sens
asen
extr
next
encr
decr
drve
sign
vrfy
snrc
vyrc
wrap
unwp
minor
persistref
sysb
primaryKey
publickeyHash
publickey
backupData
key_archive_hash
key_archive
archived_key
keyarchive_name
archive_escrowid
circlestatus
lastfixup
senderpeerid
recvpeerid
recvpubenckey
osversion
actualKeyclass
binn
bini
bin0
bin1
bin2
bin3
backupbag
defaultvalue
signingkey
recoverytype
recoveryset
metadatakeydata
backupbags
backupkeyclasssigningkeys
backuprecoverysets
metadatakeys
cert
keys
ckdevicestate
tversion
item_backup
backup_keybag
backup_keyarchive
archived_key_backup
currentkeyarchives
idnt
tversion91
genp91
inet91
cert91
keys91
genp9
inet9
cert9
keys9
tversion5
genp8
inet8
cert8
keys8
genp7
inet7
cert7
keys7
SecItemSchema
genp6
inet6
cert6
keys6
genp5
inet5
cert5
keys5
defaultContext
com.apple.security.octagon.trust-status-change
CuttlefishError
retryafter
SecErrorNestedErrorCapping
SecKeychainStaticPersistentRefs
SecKeychainChanged
item
SELECT name FROM sqlite_master WHERE type='table' AND name='tversion'
Failed to read sqlite_master table: %@
upgr
SELECT version FROM tversion
SELECT minor FROM tversion WHERE version = ?
SELECT * FROM %@ WHERE persistref IS ''
B16@?0r^{SecDbAttr=^{__CFString}iQ^?^?}8
B20@?0^{sqlite3_stmt=}8i16
securityd
keychain-recovery-2.db
keychain-2-debug.db
from v0 
B44@?0^{__OpaqueSecDb=}8^{__OpaqueSecDbConnection=}16B24^B28^^{__CFError}36
B8@?0
v16@?0^{__OpaqueSecDbConnection=}8
DELETE FROM %@ WHERE rowid=%lli
Non-API attributes present
App clips are not permitted to use access groups other than application identifier
App clips are not permitted to add synchronizable items to the keychain
q_row_id
App clips are not permitted to make items synchronizable
use item list not supported
return data not supported by update
return attributes not supported by update
return ref not supported by update
return persistent ref not supported by update
match limit not supported by delete
match not supported by delete
value ref not supported by delete
rowid and other attributes are mutually exclusive
token persistent ref and other attributes are mutually exclusive
App Clips may not call this API
accessGroups not CFArray, got %@
accessGroups e empty
access not a string: %@
illegal access group: %@
SecServerKeychainCreateBackup
provided
device
, EMCS mode
fail
backup or keybag missing
keybag %@ not a data
backup %@ not a dictionary
password %@ not a data
password not a data
com.apple.ProtectedCloudStorage
com.apple.nanoregistry.migration
com.apple.nanoregistry.migration2
com.apple.bluetooth
BluetoothLESync
ImportInitialSyncItems
Half migrated but obsolete DB found: found 0x%x(0x%x) but 0x%x is needed
no schema for version: 0x%x
UPDATE tversion SET version='%d', minor='%d'
CREATE INDEX IF NOT EXISTS %@%@ ON %@(%@);
DROP INDEX IF EXISTS genpagrp; DROP INDEX IF EXISTS genpsync;
DROP INDEX IF EXISTS inetagrp; DROP INDEX IF EXISTS inetsync;
DROP INDEX IF EXISTS certagrp; DROP INDEX IF EXISTS certsync;
DROP INDEX IF EXISTS keysagrp; DROP INDEX IF EXISTS keyssync;
DROP INDEX IF EXISTS genpsync0;
DROP INDEX IF EXISTS inetsync0;
DROP INDEX IF EXISTS certsync0;
DROP INDEX IF EXISTS keyssync0;
DROP INDEX IF EXISTS genpmusr;
DROP INDEX IF EXISTS inetmusr;
DROP INDEX IF EXISTS certmusr;
DROP INDEX IF EXISTS keysmusr;
DROP INDEX IF EXISTS item_backupmusr;
DROP INDEX IF EXISTS backup_keybagmusr;
DROP INDEX IF EXISTS backup_keyarchivemusr;
DROP INDEX IF EXISTS archived_key_backupmusr;
CREATE INDEX IF NOT EXISTS agrp_musr_tomb_svce ON genp(agrp, musr, tomb, svce);
CREATE INDEX IF NOT EXISTS agrp_musr_tomb_srvr ON inet(agrp, musr, tomb, srvr);
CREATE INDEX IF NOT EXISTS agrp_musr_tomb_subj ON cert(agrp, musr, tomb, subj);
CREATE INDEX IF NOT EXISTS agrp_musr_tomb_atag ON keys(agrp, musr, tomb, atag);
ALTER TABLE %@ RENAME TO %@_old;
DROP TABLE IF EXISTS %@;
DROP INDEX IF EXISTS %@%@;
DROP INDEX IF EXISTS %@%@0;
%@_old
INSERT OR REPLACE INTO %@ (%@) SELECT %@ FROM %@;
DROP TABLE %@_old;
NOT %@ IN (?,?)
B24@?0^{__CFString=}8^B16
sec_async_db
sec_kc_dbhandle
failed to get a db handle
FilterWithDate
Non-API attributes present in query
use item list unsupported
unsupported match attribute
unsupported kSecMatchPolicy attribute
missing pointer
SELECT agrp FROM %@ WHERE persistref = ?
B12@?0i8
B16@?0^{sqlite3_stmt=}8
SELECT agrp FROM %@ WHERE rowid == %u
Client has neither %@ entitlements
application-identifier nor keychain-access-groups
Client explicitly specifies access group %@ but is only entitled for %@
DELETE FROM genp WHERE sync=1;
DELETE FROM inet WHERE sync=1;
DELETE FROM cert WHERE sync=1;
DELETE FROM keys WHERE sync=1;
VACUUM;
keychainbackup
SecServerKeychainRestore
import: keychain is not a dictionary
v32@?0^{__CFData=}8^{__OpaqueSOSObject=}16^B24
titc
v24@?0^{__OpaqueSOSTransaction=}8^B16
InitialSyncItems
persona
upload-tlks-with-keys
refKeyBlob
com.apple.private.alloy.keychain.metrics
com.apple.security.c2metric.upload
counter
error_code
error_domain
com.apple.security.push.channel.dropped
POST
application/protobuf
Content-Type
gzip
Content-Encoding
1.2.11
%@(%@)
finished
<%@ (%p): %@%@>
inCircle
TLKs
inSyncA
inSyncC
IQNOE
OQNOE
inSync
validCredentials
lastUnlock
lastKSR
lastInCircle
numItems
numTLKShares
numSyncKeys
OASMState
OAiC
OACDPStatus
OATrust
OAAttemptedJoin
OAUserViewsSyncing
OAHealthCheck
OASOSStatus
OALastPPJ
OALastKSR
OALastCFU
OAPrerecordPending
OACDPStateRun
OABottledUniqueTLKsRecoveredCount
OABottledTotalTLKSharesCount
OABottledTotalTLKSharesRecoveredCount
OABottledUniqueTLKsWithSharesCount
OABottledTLKUniqueViewCount
OARKUniqueTLKsRecoveredCount
OARKTotalTLKSharesCount
OARKTotalTLKSharesRecoveredCount
OARKUniqueTLKsWithSharesCount
OARKTLKUniqueViewCount
OACustodianUniqueTLKsRecoveredCount
OACustodianTotalTLKSharesCount
OACustodianTotalTLKSharesRecoveredCount
OACustodianUniqueTLKsWithSharesCount
OACustodianTLKUniqueViewCount
OAInheritanceUniqueTLKsRecoveredCount
OAInheritanceTotalTLKSharesCount
OAInheritanceTotalTLKSharesRecoveredCount
OAInheritanceUniqueTLKsWithSharesCount
OAInheritanceTLKUniqueViewCount
OAMIDPresent
OAMIDOnList
OAPeersWithMID
OAMIDMatchesCurrentMID
OAnPeers
OAnViablePeers
lastCKKSPush
OADCKVSProvisioned
OADCKVSEnabled
OADCKCSProvisioned
OADCKCSEnabled
OADCCKProvisioned
OADCCKEnabled
OASecureBackupTermsAccepted
recoverableError
errorDomain
errorCode
errorChain
CKKSEventProcessIncomingQueueClassA
CKKSEventProcessIncomingQueueClassC
CKKSEventProcessOutgoingQueue
CKKSEventProcessHealKeyHierarchy
CKKSEventProcessReencryption
OctagonEventSignIn
OctagonEventRamp
OctagonEventCheckTrustState
OctagonEventBottledPeerRestore
OctagonEventRecoveryKey
OctagonEventCustodianRecoveryKey
OctagonEventPreflightCustodianRecoveryKey
OctagonEventInheritanceKey
OctagonEventPreflightInheritanceKey
OctagonEventFetchAllBottles
OctagonEventFetchEscrowContents
OctagonEventResetAndEstablish
OctagonEventEstablish
OctagonEventLeaveClique
OctagonEventRemoveFriendsInClique
OctagonEventUpgradeFetchDeviceIDs
OctagonEventUpgradeSetAllowList
OctagonEventUpgradeSilentEscrow
OctagonEventUpgradePreapprovedJoin
OctagonEventUpgradePreflightPreapprovedJoin
OctagonEventUpgradePrepare
OctagonEventJoinWithVoucher
OctagonEventPreflightVouchWithBottle
OctagonEventVoucherWithBottle
OctagonEventPreflightVouchWithRecoveryKey
OctagonEventVoucherWithRecoveryKey
OctagonEventPreflightVouchWithCustodianRecoveryKey
OctagonEventVoucherWithCustodianRecoveryKey
OctagonEventVoucherWithInheritanceKey
OctagonEventSetRecoveryKey
OctagonEventSetRecoveryKeyValidationFailed
OctagonEventJoinRecoveryKeyValidationFailed
OctagonEventJoinRecoveryKeyCircleReset
OctagonEventJoinRecoveryKeyCircleResetFailed
OctagonEventJoinRecoveryKeyEnrollFailed
OctagonEventJoinRecoveryKeyFailed
OctagonEventJoinRecoveryKey
OctagonEventReset
OctagonEventPrepareIdentity
OctagonEventEstablishIdentity
OctagonEventFetchViews
OctagonEventStateTransition
OctagonEventCheckTrustForCFU
CKKSEventMissingLocalItemsFound
CKKSEventReachabilityTimerExpired
OctagonEventTPHHealthCheckStatus
OctagonEventAuthKitDeviceList
OctagonEventEscrowMoveTriggered
OctagonEventEscrowMoveRateLimited
OctagonEventEscrowMoveTermsNeeded
CKKSActivityOTFetchRampState
OctagonActivityAccountAvailable
OctagonActivityAccountNotAvailable
OctagonActivityResetAndEstablish
OctagonActivityEstablish
OctagonSOSAdapterUpdateKeys
OctagonActivityFetchAllViableBottles
OctagonActivityFetchEscrowContents
OctagonActivityBottledPeerRestore
OctagonActivitySetRecoveryKey
OctagonActivityCreateCustodianRecoveryKey
OctagonActivityJoinWithRecoveryKey
OctagonActivityJoinWithCustodianRecoveryKey
OctagonActivityPreflightJoinWithCustodianRecoveryKey
OctagonActivityRemoveCustodianRecoveryKey
OctagonActivityCreateInheritanceKey
OctagonActivityGenerateInheritanceKey
OctagonActivityStoreInheritanceKey
OctagonActivityJoinWithInheritanceKey
OctagonActivityPreflightJoinWithInheritanceKey
OctagonActivityRemoveInheritanceKey
OctagonActivityLeaveClique
OctagonActivityRemoveFriendsInClique
ckks_analytics_v2.db
ckks_analytics_v2.db-wal
ckks_analytics_v2.db-shm
ckks_analytics
last_success_%@-%@
oneCloudKitPartialFailure
child
%@%lld
error_description
underlying_error
escrow-prerecord
Escrow Prerecord: %@
ckid-
<CKKSDeviceStateEntry(%@,%@,%@,%@,%@,%@): %@ %@ %@ %@ %@ %@ upd:%@>
CliqueMissing
ckid-%@
No active HSA2 iCloud account: %@
No CK device ID: %@
operation_id
operation_type
operation_triggered
operation_group_index
vouch-with-keys
v32@?0@"NSData"8@"NSData"16@"NSError"24
<CKKSFixup:RefetchAllCurrentItemPointers (%@)>
ckksfixup
fetch-records-operation-complete
v24@?0@"NSDictionary"8@"NSError"16
<CKKSFixup:FetchAllTLKShares (%@)>
v16@?0@"CKRecord"8
v24@?0@"CKQueryCursor"8@"NSError"16
<CKKSFixup:LocalReload (%d)(%@)>
local-reload-cleanup
<CKKSFixup:ResaveCDSE (%@)>
NoAccount
WaitForHSA2
WaitForCDP
BecomeUntrusted
Ready
BecomeReady
Inherited
BecomeInherited
EnsureConsistency
EnsureOctagonKeysAreConsistent
EnsureUpdatePreapprovals
Initializing
WaitingForCloudKitAccount
CloudKitNewlyAvailable
RefetchCKKSPolicy
DetermineCDPState
CheckForAccountFixups
CheckTrustState
PerformAccountFixups
EnableUserControllableViews
DisableUserControllableViews
SetUserControllableViewsToPeerConsensus
UpdateSOSPreapprovals
InitiatorSetCDPBit
InitiatorUpdateDeviceList
InitiatorAwaitingVoucher
InitiatorJoin
InitiatorJoinCKKSReset
InitiatorJoinAfterCKKSReset
BottleJoinCreateIdentity
BottleJoinVouchWithBottle
CreateIdentityForRecoveryKey
CreateIdentityForCustodianRecoveryKey
BottlePreloadOctagonKeysInSOS
VouchWithRecoveryKey
VouchWithCustodianRecoveryKey
JoinSOSAfterCKKSFetch
PrepareAndRecoverTLKSharesForInheritancePeer
StartCompanionPairing
WaitForCDPUpdated
UntrustedUpdated
ReadyUpdated
Disabled
DetermineiCloudAccountState
AttemptSOSUpgradeDetermineCDPState
AttemptSOSUpgrade
SOSUpgradeCKKSReset
SOSUpgradeAfterCKKSReset
Unimplemented
ResetBecomeUntrusted
ResetAndEstablish
ResetAnyMissingTLKCKKSViews
EstablishEnableCDPBit
ReEnactDeviceList
ReEnactPrepare
ReEnactReadyToEstablish
EstablishCKKSReset
EstablishAfterCKKSReset
ResetAndEstablishClearLocalContextState
LocalReset
LocalResetClearLocalContextState
HSA2HealthCheck
CDPHealthCheck
TPHTrustCheck
CuttlefishTrustCheck
PostRepairCFU
SecurityTrustCheck
HealthCheckReset
NoAccountDoReset
LostAccountAuth
PeerMissingFromServer
WaitForUnlock
WaitForClassCUnlock
AssistCKKSTLKUpload
AssistCKKSTLKUploadCKKSReset
AssistCKKSTLKUploadAfterCKKSReset
HealthCheckLeaveClique
EscrowTriggerUpdate
idms_level
preapproved
tlk_upload_needed
policy_check_needed
ckks_views_changed
recd_push
account_available
attempt_sos_upgrade
attempt_machine_id_list
unlocked
attempt_sos_update_preapprovals
attempt_sos_consistency
escrowrequest_inform_cloudservices
retry_bottle_tlk_extraction
retry_rk_tlk_extraction
se_id_changed
attempt_ucv_upgrade
OTStates.m
stateName should be string
stateNum should be number
client_process_version
client_bundle_id
container
environment
anonymous
operation_group
report_operation_group_frequency
report_operation_group_frequency_base
client_operation
report_client_operation_frequency
report_client_operation_frequency_base
New item has changed; hashes mismatch. Refetch and try again.
Old item has changed; hashes mismatch. Refetch and try again.
Update to current item pointer is pending.
Current pointer(%@) does not match user-supplied %@, aborting
No user-supplied UUID and current pointer(%@) is not dangling, aborting
Current pointer(%@) does not match given value of '%@', aborting
New item(%@) is being synced; can't set current pointer.
Old item(%@) is being synced; can't set current pointer.
No synced item matching (%@); can't set current pointer.
updateCurrentItemPointer-modifyRecordsComplete
v24@?0@"CKRecord"8@"NSError"16
couldn't create query for new item pref
v24@?0^{SecDbItem={__CFRuntimeBase=QAQ}^{SecDbClass}iii^{__CFDictionary}^{__CFData}^v^{__CFArray}}8^B16
couldn't run query for new item pref
couldn't destroy query for item pref
couldn't run query
ckkstlk
v32@?0@"TrustedPeersHelperPeerState"8@"NSArray"16@"NSError"24
octagon-consistency
repair
confirm existing secret
secure terms
followup
lock-state-tracker
<CKKSLockStateTracker: %@ last:%@>
locked
keybag-unlocked-dependency
com.apple.security.analytics
BuildVersion
UniqueDeviceID
ProductName
ProductType
ProductVersion
SecDbBackupWrappedItemKey
akswrappedkey
backupwrappedkey
CloudKit account logged in.
CKKSQueue.%@
outgoing-queue-scheduler
<%@: %@ %@ %p>
ckks-initialized-operation
initial-setup
restart-setup
ckksreset
set-zones
reset-cloudkit
ckks-cloud-reset
ck-zone-missing
ck-token-expired
ck-sign-in
fixup
recover-from-cloudkit-failure
begin-trusted-operation
fetch-requested
provide-key-set
handle-all-views
ckksview
key-state-after-unlock
full-refetch
key-process
trust-gone
trusted-peers-changed
check-queues
24-hr-check
process-incoming
scan
post-fetch
fetch
waiting-for-fetch
fetch-complete
post-fetch-process
tlk-missing
newtlks-failed
no-trust
reset-views
heal-tlk-shares
heal-tlks-failed
unhealthy-lacking-trust
iqo-errored
oqo-failure
become-ready
more coming
launch
zonesize
lose-trust
No syncing view for '%@'
addition
modification
deletion
View is paused; item is not expected to sync
sos-incoming-item
keychain-api-use
No access group or identifier given
iCloud account status unknown.
currentitem-api
setCurrentItem-return-callback
get-current-item-pointer
No current item pointer found for %@
Current item pointer is empty
No CloudKit account; push will not succeed.
No TLKs for this view; push will not succeed.
No trust; push will not succeed.
Cannot push view %@; is externally managed
push
wait-for-next-incoming-queue-operation
rpc-fetch
check-keys
ckksrpc
fetch-and-process
No local keys for %@; processing queue will fail
process-incoming-queue
Syncing policy not yet loaded
No iCloud Keychain Trust
rpcWaitForPriorityViewProcessing-fail
waitForPriority-succeed
rpc-watcher
device-state-operation
havoc
pcs-mirror-keys
account-logged-in-dependency
CloudKit account logged in again.
ckkstrust
ckks-policy
cached
priority
normal
CKKS
externally-managed
wait-for-priority-view-processing
ckks-%@-notify-scheduler
com.apple.security.keychainchanged
Manatee
Engram
ApplePay
Home
LimitedPeersAllowed
com.apple.security.view-change.PCS
%@-ready-scheduler
com.apple.security.view-become-ready
com.apple.security.view-ready.%@
CKKS syncing policy not yet loaded
Cannot get view %@; is externally managed
status-rpc
global
reachability
no-network
ckdeviceID
ckdeviceIDError
lockstatetracker
cloudkitRetryAfter
policy
viewsFromPolicy
ckaccountstatus
could not determine
restricted
logged out
accounttracker
fetcher
ckksstate
lastIncomingQueueOperation
lastNewTLKOperation
lastOutgoingQueueOperation
lastProcessReceivedKeysOperation
lastReencryptOutgoingItemsOperation
statusError
devicestates
tlkshares
currentTLKPtr
currentClassAPtr
currentClassCPtr
itemsyncing
zoneCreated
zoneSubscribed
ckksManaged
launchSequence
operation
status
endpoint
error
peer-infos
peer-info
userlabel
flags
password
emcsbackup
query
attributesToUpdate
digest
publicPeerId
otrsess
data
otrrdy
viewname
viewactioncode
cfstring
cfarray
cfset
cfset2
newPublicBackupKey
RecoveryPublicKey
includeV0
reason
enabledViews
disabledViews
fileDescriptor
accessGroups
normIssuer
serialNum
version
AccountSetToNew
OTAGetEscrowCertificates
OTAPKIGetNewAsset
OTASecExperimentGetNewAsset
OTASecExperimentGetAsset
AcceptApplicants
BailFromCircle
CanAuthenticate
CopyApplicantPeerInfo
CopyConcurringPeerPeerInfo
CopyEngineState
CopyGenerationPeerInfo
CopyMyPeerInfo
CopyNotValidPeerPeerInfo
CopyPeerPeerInfo
CopyRetirementPeerInfo
CopyValidPeerPeerInfo
CopyViewUnawarePeerInfo
DeviceInCircle
GetLastDepartureReason
LoggedOutOfAccount
ProcessSyncWithAllPeers
ProcessSyncWithPeers
ProcessUnlockNotification
PurgeUserCredentials
RejectApplicants
RemoveThisDeviceFromCircle
RemovePeersFromCircle
RequestToJoin
RequestToJoinAfterRestore
ResetToEmpty
ResetToOffering
RollKeys
SetBagForAllSlices
SetLastDepartureReason
SetNewPublicBackupKey
SetUserCredentials
SetUserCredentialsAndDSID
TryUserCredentials
ValidateUserPublic
View
add_shared_web_credential
delete_all
get_log_settings
backup_copy_names
backup_register_view
backup_handoff_fd
backup_restore
backup_set_confirmed_manifest
copy_matching
update
keychain_backup
keychain_backup_syncable
keychain_restore
keychain_restore_syncable
keychain_sync_update_message
ota_pki_trust_store_version
ota_pki_asset_version
otr_session_create_remote
otr_session_process_packet_remote
set_circle_log_settings
set_xpc_log_settings
trust_evaluate
trust_store_contains
trust_store_remove_certificate
trust_store_set_trust_settings
trust_store_copy_all
trust_store_copy_usage_constraints
ocsp_cache_flush
EnsurePeerRegistration
WhoAmI
TransmogrifyToSyncBubble
UpdateTokenItems
sec_delete_items_with_access_groups_id
kSecXPCOpPeersHaveViewsEnabled
RegisterRecoveryPublicKey
GetRecoveryPublicKey
MessageFromPeerIsPending
SendToPeerIsPending
copy_parent_certificates
certificate_exists
KeybagAdd
KeybagDelete
KeychainControlEndpoint
NetworkingAnalyticsReport
SetCTExceptions
CopyCTExceptions
GetExceptionResetCount
IncrementExceptionResetCount
SetCARevocationAdditions
CopyCARevocationAdditions
ValidUpdate
SetTransparentConnectionPins
CopyTransparentConnectionPins
trust_settings_set_data
trust_settings_copy_data
sec_truststore_remove_all
Unknown xpc operation
object for key %s is NULL
data for key %s is NULL
no data for key %s
string for key %s is NULL
failed to convert string for key %s to utf8
missing fd for key %s
object for key %s not set but %@
object for key %s not array but %@
too large data for key %s
failed to create data for key %s
object for key %s not dictionary but %@
no object for key %s
trailing garbage after der decoded object for key %s
object for key %s failed to convert %s to CFString
object for key %s not string
object %@ is not a set
v24@?0Q8@"NSError"16
encryptedSecretData
encryptedMetadata
KEYCLASS_AK
KEYCLASS_CK
KEYCLASS_DK
KEYCLASS_AKU
KEYCLASS_CKU
KEYCLASS_DKU
KEYCLASS_AKPU
current TLK doesn't wrap itself: %@ %@
invalid TLK from CloudKit
No trust states available
orphaned key(%@) in hierarchy
unwrappable key(%@) in hierarchy: %@
Current class A key does not wrap to current TLK
Current class C key does not wrap to current TLK
<CKKSTLKShare(%@): recv:%@ send:%@ mod:%@>
^tlkshare-(?<uuid>[0-9A-Fa-f-]*)::(?<receiver>.*)::(?<sender>.*)$
Couldn't parse '%@' as a TLKShare ID
tlkshare-%@::%@::%@
key-state
com.apple.security.ckks.launch
<CKKSKeychainViewState: %@(%@), %@>
CKKSKeychainViewState.m
ckks-view-state
ckksshare
heal-tlkshares-%@
current self peer (%@) is not in the set of trusted peers
not_started
halted
<OctagonStateTransitionOperation(%@): intended:%@ actual:%@>
<OctagonStateTransitionGroupOperation(%@): intended:%@ actual:%@>
<OctagonStateTransitionRequest: %@ %@ sources:%d>
CKErrorDomain
CKInternalErrorDomain
CKRetryAfter
CKPartialErrors
AKAuthenticationError
v32@?0@8@"NSError"16^B24
ckksreencrypt
network_task_description
network_hostname
network_remote_addresss_and_port
network_connection_uuid
network_connection_reused
network_interface_identifier
network_protocol_name
network_request_header_size
network_request_body_bytes_sent
network_response_header_size
network_response_body_bytes_received
network_previous_attempt_count
network_fatal_error
network_status_code
network_request_uri
timestamp_c2_init
timestamp_c2_start
timestamp_c2_now
timestamp_dns_start
timestamp_dns_end
timestamp_tcp_start
timestamp_tcp_end
timestamp_ssl_start
timestamp_request_start
timestamp_request_end
timestamp_response_start
timestamp_response_end
options_quality_of_service
options_out_of_process
options_out_of_process_force_discretionary
options_allow_expensive_access
options_allow_power_nap_scheduling
options_timeout_interval_for_request
options_timeout_interval_for_resource
options_source_application_bundle_identifier
options_source_application_secondary_identifier
options_apple_id_context
options_tls_pinning_required
ckksPushTracingEnabled
ckksPushTracingUUID
ckksPushReceivedDate
aps-callback-queue
com.apple.icloud-container.
com.apple.security.cuttlefish
clearStalePushNotifications
CKKS APNS Push Dropped
CKKS APNS Push Dropped - never unlocked
apsnotification
ckkspush
external operation
Unknown external view: '%@'
View is not externally managed: '%@'
external-tlk-rpc
ckks-se
wait-until-write-finished
C8@?0
v16@?0@"OctagonStateTransitionGroupOperation"8
rpc-response
v16@?0@"CKKSResultOperation"8
Initial fetch results not present; cannot provide accurate answer about TLK state
TLKShare is not for current TLK %@
external-tlkshare-modification-rpc
%@ is not self-wrapped
Couldn't save %@ to keychain: %d
-nonsync
Couldn't load %@ from keychain: %d
-piggy
unable to unbase64 key: %@
Couldn't delete %@ from keychain: %d
<%@(%@): %@ (%@)>
<CKKSKeychainBackedKeySet: tlk:%@, classA:%@, classC:%@, newUpload:%d>
newUpload
baghash
<TPHPeerState: %@ preapproved:%d status:%@ memberChanges: %@ unk. mIDs: %@ osVersion: %@ walrus: %@ >
identityIsPreapproved
peerStatus
memberChanges
unknownMachineIDs
osVersion
<TPHEgoPeerState: %@ (mid:%@)>
egoStatus
viablePeerCountsByModelID
peerCountsByMachineID
isExcluded
isLocked
<TPHPeer: %@ %@ %@ se:%@ (%lu views)>
encryptionSPKI
seIdentity
<CustodianRecoveryKey: %@, (%@)>
recoveryString
salt
kind
<TLKRecoveryResult: %@ totalTLKSharesRecovered:%d>
totalShares
errors
RECOVERY_KEY
INHERITANCE_KEY
client_join
await_epoch_request
epoch_prepared
await_identity
voucher_prepared
done
com.apple.security.otclientstatemachine
v32@?0@"NSString<OctagonStateString>"8@"NSNumber"16^B24
initialize-client
octagon-client-%@-state
octagon-voucher-prepared
v16@?0@"OctagonStateTransitionOperation"8
v32@?0@"TrustedPeersHelperPeerState"8@"TPSyncingPolicy"16@"NSError"24
rpcEpoch
rpcEpoch-callback
otrpc
rpcVoucher
rpcVoucher-callback
WrongKeySizeException
length (%lu) was not %d
corecrypto
CCRandomGenerateBytes failed with %d
No key given
wrapped key size does not match key size
unwrapped key size does not match key size
CommonCrypto
IV generation failed
ciphertext too short
no mode given
could not ccsiv_init
could not ccsiv_set_nonce
could not ccsiv_aad
could not ccsiv_crypt
product_name
product_type
product_version
product_build
is_apple_internal
process_name
process_version
process_uuid
user_default_test_name
internal_test_config
proceed-after-fetch
operation_group_id
operation_group_name
operation_group_triggered
apns
se-api
keyset
currentitemcheck
initialfetch
fetchfailed
keyhierarchy
resync
more-coming
conflict
periodic
Fetch failed
zone-change-fetcher
zone-change-fetch-scheduler
<CKKSZoneChangeFetcher(%@): next fetch at %@
<CKKSZoneChangeFetcher(%@): no pending fetches
CKKS APNS Push Received
not-ready
zones_status
CKKS APNS Push Received-webtunnel
description
zone-change-fetcher-worker
successful-fetch-dependency
upgrade_persistent_ref
wait_for_trigger
schedule_pref_upgrade
KeychainItemUpgradeControllerQueue
persistent-ref-upgrader
upgr-phase3
keychainitemupgrade
after-upgrade--attempt-wait-for-unlock
upgrade-persistent-refs
wait-for-trigger
nothing-to-do
upgrade-persistent-ref
request-item-upgrade
SecDbKeychainMetadataKeyStore
INSERT OR REPLACE INTO metadatakeys (keyclass, actualKeyclass, data, metadatakeydata) VALUES (?,?,?,?)
INSERT OR REPLACE INTO metadatakeys (keyclass, actualKeyclass, data) VALUES (?,?,?)
v16@?0^{sqlite3_stmt=}8
SELECT data, actualKeyclass, metadatakeydata FROM metadatakeys WHERE keyclass = ?
SELECT data, actualKeyclass FROM metadatakeys WHERE keyclass = ?
v16@?0^B8
Metadata key blob both old-world and new-world
New-format metadata key blob didn't deserialize
SecDbMetadataKeyStore
SecDbKeychainMetadataKeyStore.m
re-entering -[%@ %@] - that shouldn't happen!
keychainlockedlogmessage
Unable to find a suitable metadata key and not permitted to create one
B16@?0^{__OpaqueSecDbConnection=}8
metadata_store
eventName
attributes
v32@?0@8@16^B24
<TrustedPeersHelperIntendedTPPBSecureElementIdentity: %@>
identity
certCached
serializedPrerecord
lastCloudServicesTriggerTime
lastEscrowAttemptTime
uploadCompleted
uploadRetries
triggerRequestTime
serializedReason
OTCuttlefishAccountStateHolderNotifier
No existing ego peer ID
@"OTAccountMetadataClassC"16@?0@"OTAccountMetadataClassC"8
service_name
partition
service_build
service_instance
CKKSZoneModifier.%@
zonemodifier-ckretryafter
zone-modification
ckkszonemodifier
zone-subscription
retry
zone-creation-operation
zone-creation
v32@?0@"NSArray"8@"NSArray"16@"NSError"24
zone-subscription-operation
label
username
primaryServiceID
supplementaryServiceIDs
creationDate
modificationDate
customAttributes
Credential
attempt to add credential to SFCredentialStore that is not a password credential: %@
no keychain access group found; ensure that your process has the keychain-access-groups entitlement
failed to serialize primary service identifier
failed to serialize supplementary service identifier
v20@?0B8@"NSError"12
invalid persistent identifier: %@
v24@?0@"SecCDKeychainItem"8@"NSError"16
v16@?0@"NSArray"8
v24@?0@"NSArray"8@"NSError"16
failed to get password for SFCredential
malformed supplementary service identifiers array in SecCDKeychainItem
failed to deserialize SFCredential
octagon-ckks
escrowrequest
started
c:%@-%@
v32@?0@"NSString"8@"CKKSLaunchEvent"16^B24
c:%@
v32@?0@"NSString"8@"CKKSLaunchSequence"16^B24
first-launch
re-launch
events
q24@?0@"CKKSLaunchEvent"8@"CKKSLaunchEvent"16
v32@?0@"CKKSLaunchEvent"8Q16^B24
yyyy-MM-dd'T'HH:mm:ss.SSSZ
%@ - %@:%u
attr: %@: %@
octagon-authkit
AccountName
EscrowRecord
unsynced
initialsynctimeout
pendingEnableViews
pendingDisableViews
v2dictionary
RecoveryRing
RateLimitCounters
PeerNegotiationTimeouts
kSOSAccountPeerLastSentTimestamp
NegotiationRetryCount
com.apple.security.sosaccount
lastKVSCleanup
Scope
Account Queue
User public key not trusted
User public not available
pairing
sync
SecdWatchdog
failed to lookup SecdWatchdog class from ObjC runtime
SOSEnabled
SOSInitialized
SOSMonitorMode
Security
[SOS is active]
[SOS is monitoring]
SOSLegacyMode
Public Key isn't available, this peer is in the circle, but invalid. The iCloud Password must be provided to keychain syncing subsystem to repair this.
retirement
kSOSCCInCircle
kSOSCCNotInCircle
kSOSCCRequestPending
kSOSCCCircleAbsent
kSOSCCError
Can't remove without being active peer
B32@?0^{__OpaqueSOSCircle=}8^{__OpaqueSOSFullPeerInfo=}16^{__OpaqueSOSPeerInfo=}24
No circle
v16@?0^v8
key-cleanup
v32@?0@8Q16^B24
v32@?0@"NSString"8@"NSNumber"16^B24
tlk-piggy
q24@?0@"NSDictionary"8@"NSDictionary"16
auth
No applicant provided
Accepting
Joining
*No Key*
ACCOUNT: [keyStatus: %c%c%c hpub %@] [SOSCCStatus: %@] [UID: %d  EUID: %d] %@ %s
User Visible Keychain Disallowed by Profile
Unrestricted User Visible Views
accountLogState
trigger_backup
trigger_ring_update
perform_backup
perform_ring_update
SOSAccountSettings.pb
SOSAccount.m
can't bootstrap more than once
SOS-statemachine
sosaccount
performBackups
performRingUpdates
sos-sm
perform-backup-state
perform-ring-update
perform-backup-flag
perform-ring-update-flag
com.apple.lakitu
EscrowServiceBypassToken
EscrowService
circleops
Don't have circle when joining???
v32@?0@"NSDictionary"8Q16^B24
AutoUnlock
Health
Unknown
No Signature
Unavailable
Deleting V0 Keybag failed - %d
^{__OpaqueSOSRing={__CFRuntimeBase=QAQ}^{__CFDictionary}^{__CFDictionary}^{__CFDictionary}^{__CFDictionary}}24@?0^{__CFString=}8^^{__CFError}16
B24@?0^{__OpaqueSOSBackupSliceKeyBag=}8^^{__CFError}16
NULL account or viewName parameter
Backup public key
B24@?0^{__OpaqueSOSPeerInfo=}8^^{__CFError}16
keybag
backupkey
No backup view set created
backupring
No error space.
Error saving %@
SecRandomCopyBytes failed
SOSUserKeyCreateGenerateParameters created new parameters:
Bad paramter encoding, got: %@
Key size not supported, requested %zd.
Salt length not supported, requested %zd.
Too few iterations, params suggested %zd.
SOSUserKeygen generating key for:
Keygen failed
<Params: iter: %zd, size: %zd, salt: %@>
(null)
Backup
Concordance with no public key - need to validate application
Bad generation
Improper exclusion of this peer
Improper inclusion of this peer
update parameters key failed [%@]
Encoding parameters failed
account-sync
succeeded
failed
pendingBackupPeers
ringUpdateFlag
Recovery
Not recovery ring type
keygen
Private Key not available - failed to prompt user recently
SOSUserCredential
com.apple.security.sos-usercredential
Failed fetching account credential: %d
Public Key isn't available. The iCloud Password must be provided to the syncing subsystem to repair this.
Password generated pubkey doesn't match - candidate: %@  known: %@
account public key missing, can't check stashed copy
public key no not valid, can't check stashed copy
com.apple.security.publickeyavailable
sosAccountValidatePasswordOrFail
Could not create correct key with password.
Not associated with Ring
Basic
I have no peer
No identity to get key from
Cloud Identity
No trusted circle
Can't generate keypair for icloud identity
iCloud
Can't allocate gestalt
^{__OpaqueSOSPeerInfo={__CFRuntimeBase=QAQ}^{__CFDictionary}^{__CFData}^{__CFDictionary}^{__CFString}^{__CFString}q^{__CFString}B^{__CFDictionary}}32@?0^{__OpaqueSOSPeerInfo={__CFRuntimeBase=QAQ}^{__CFDictionary}^{__CFData}^{__CFDictionary}^{__CFString}^{__CFString}q^{__CFString}B^{__CFDictionary}}8^{__SecKey={__CFRuntimeBase=QAQ}^{__SecKeyDescriptor}^v}16^^{__CFError}24
Cloud Identity - '%@'
Couldn't update name
Version parsing failed
Unsupported version (%llu)
Extra data at the end of saved acount
Cannot EnsureFactoryCircles
persistence
backupKey
Didn't consume all bytes v7
Not in circle, won't update ring
B16@?0i8B12
sosnotify
<SOSAccountTransaction*@%p %ld>
acct-txn
member
non-member
secdNotify
userKeyTrust
com.apple.security.publickeynotavailable
engine-notify
supports
doesn't support
v24@?0^{__CFSet=}8^{__CFSet=}16
SOSAccountHandleParametersChange got new user key parameters:
Didn't make peer meta for: %@
Expected data or NULL got %@
Expected circle named %@, got %@
initial-sync
v24@?0^{__CFString=}8^{__CFSet=}16
v16@?0^{__CFSet=}8
trusted_rings
Can't Alloc Account Expansion dictionary
^{__OpaqueSOSRing={__CFRuntimeBase=QAQ}^{__CFDictionary}^{__CFDictionary}^{__CFDictionary}^{__CFDictionary}}24@?0^{__CFString=}8^{__OpaqueSOSRing={__CFRuntimeBase=QAQ}^{__CFDictionary}^{__CFDictionary}^{__CFDictionary}^{__CFDictionary}}16
Rings not present
No Rings found
No device public key to work with
No device private key to work with
You give rings a bad name
Generation Old
Bad Signature
No User Signature
No trusted peer signature
No trusted peer left
No User Public Key Available
Incorrect membership for me
This peer shouldn't be in this ring since it isn't in view
Invalid Ring Membership
Bad Error Return from ConcordanceTrust
No Ring found %@
modify
*24@?0r*8*16
size mismatch der_end - der: %td
fwrite SOSBackupEventWrite
No Trusted Circle
No Peer for Account
No Trusted UserKey
Not in Circle
Enabled
V2update
viewChange
No circle to get peer key from
v24@?0^{__OpaqueSOSCircle=}8^{__CFArray=}16
HSAPreApprovedPeer
don't know how to encode
sync-with-peers
*24@?0Q8*16
SOSCoder
Extra data in SOS coder
Unsupported Sequence Version: %lld
Unsupported SOS Coder DER
coder
No local error in SOSCoderCreate
*** no otr session ***
waiting for peer to send first data packet
otr session ready
otr negotiating already
alloc failed
Sending OTR Response %s
 begin waiting for data packet
stuck?
completed negotiation
resending dh
%@ Cannot negotiate session (%ld)
%@ Cannot allocate CFData
not ready for data; resending DH packet
got data packet we were waiting for 
verify and expose message
decoded OTR protected packet
 repeated
 too old, repeated renegotiating
 too old, forcing message
 too new
%@ Cannot expose message: %d
Unknown packet type
*** using null coder ***
not ready
waiting for peer to send data packet first
%@ alloc failed
%@ cannot protect message: %d
<Coder %@ %@ %s%s>
append start packet returned: %d
DataReturned
Negotiating
NegotiationCompleted
StaleEvent
TooNew
StatusUnknown
manifest
com.apple.security.sos.manifest.error
SOSManifest
Failed to create manifest
<[%zu:%02X%02X%02X%02X]
<[%zu]
 %02X%02X%02X%02X
SOSDictionaryUpdate
Not valid ring type
Not backup ring type
Wrong set count for one return
recoveryKeyBag
No recovery key available
recovery
^{__OpaqueSOSRing={__CFRuntimeBase=QAQ}^{__CFDictionary}^{__CFDictionary}^{__CFDictionary}^{__CFDictionary}}24@?0^{__OpaqueSOSRing={__CFRuntimeBase=QAQ}^{__CFDictionary}^{__CFDictionary}^{__CFDictionary}^{__CFDictionary}}8^^{__CFError}16
Failed to set Recovery Key
No error space
SOSMessage
failed to alloc SOSMessage
SOSMessage DER decoding failure %td bytes left
v24@?0^{__CFData=}8^B16
{[%zu]
v24@?0^{__OpaqueSOSObject=}8^B16
{NO DATASOURCE}
<MSGInvalid %llu >
<MSGDigest %llu %02X%02X%02X%02X>
<MSGManifest %llu %@>
<MSGObjects %llu %02X%02X%02X%02X %@ %@ %@
<MSG %llu %@ %02X%02X%02X%02X %02X%02X%02X%02X %02X%02X%02X%02X %@ %@ %@ %s%s%s%s%s%s%s>
Invalid DER, no tag found
Object has EOL tag
Object with tag %lu has no valid DER length
Object has %td trailing unused bytes
digest length mismatch
no manifest for manifest message
Invalid message type %llu
Trailing garbage at end of message
failed to decode object header
machineID
serialNumber
SOSPeer
backup
com.apple.security.itembackup
open %s
unlink %s
v16@?0r*8
peer
ckks
v20@?0^{__sFILE=*iiss{__sbuf=*i}i^v^?^?^?^?{__sbuf=*i}^{__sFILEX}i[3C][1C]{__sbuf=*i}iq}8i16
peer-id
object %@ is not an data
has-been-in-sync
<%@ %s%s%s%@%@%@%@%@>
 -  
 %@%@
 %@[%ld]%@
confstr on _CS_DARWIN_USER_TEMP_DIR returned an error.
%s/SOSBackup-%@
fopen %s,%s
vers
sequence-number
must-send
send-objects
pending-objects
unwanted-manifest
confirmed-manifest
pending-manifest
local-manifest
v16@?0^{__sFILE=*iiss{__sbuf=*i}i^v^?^?^?^?{__sbuf=*i}^{__sFILEX}i[3C][1C]{__sbuf=*i}iq}8
backup-peer
sending negotiation message.
waiting for negotiation message.
v16@?0^{__OpaqueSOSPeerInfo={__CFRuntimeBase=QAQ}^{__CFDictionary}^{__CFData}^{__CFDictionary}^{__CFString}^{__CFString}q^{__CFString}B^{__CFDictionary}}8
Windows
v24@?0@"NSSet"8@"NSError"16
KeyParameter
Circle
Message
AlwaysKeys
FirstUnlockKeys
UnlockedKeys
key-interests
v32@?0@"CKKeyParameter"8Q16^B24
Registering with CKP
No Change, Ignoring
accountChange
dsid
iCloudIdentity-tomb
PCS-MasterKey-tomb
SOSRecoveryKeyBag
Recovery bag allocation failed
Extra space in sequence
Null Account Object
Couldn't get dsid for recovery keybag components
Couldn't get recovery keybag components
Couldn't get memory for recoveryKeyBag
Failed to create scratch
Didn't consume all data supplied
<SOSRecoveryKeyBag@%p DSID: %@ version: %d  gencount: %@  RecoveryKeyID: %@ 
NULL RecoveryKeyBag
RecoveryKeyBag has no public key
RecoveryKeyBag has no DSID
RecoveryKeyBag has no generation
Incompatible circle in KVS
circleop
iCloudIDCheck
iCloudCleanerCheck
local
remote
signing
Can't handle updates with no trusted public key here
Current Entry is NULL; rejecting %@
No Peer
accept
countersign
leave
revert
ignore
trusted
untrusted
oldCircle
newCircle
prospective_circle
circleOps-Old
circleOps-New
circle
canary
iCloudIdentityFix
noPrivateKey
updatingGenSignature
B16@?0^{__OpaqueSOSCircle=}8
v16@?0^{__OpaqueSOSPeerInfo=}8
resetToOffering
v24@?0^{__CFDictionary=}8^{__CFError=}16
Tried to publish nil Cloud Parameters
engine
otrtimer
Failed to parse SOSMessage
v48@?0^{__OpaqueSOSPeer=}8^{__OpaqueSOSCoder=}16^{SOSDataSource=^{__OpaqueSOSEngine}^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?}24^{__OpaqueSOSTransaction=}32^B40
com.apple.security.sos.messagertt
Missing engine
ratelimit
NoAttribute
com.apple.securebackupd
v32@?0@"NSString"8Q16^B24
timestamp
peerShouldSend
attributeBadness
com.apple.security.sos.synccompletion
iCloud Keychain Account Meta-data
Error %@ reading for service '%@'
SecItemCopyMatching returned non-data in '%@'
Error saving %@ to service '%@'
Unknown model
^{os_state_data_s=I(?=b32I){os_state_data_decoder_s=[64c][64c]}[64c][0C]}16@?0^{os_state_hints_s=I*II}8
CloudCircle Account Object
secAccount
views
B24@?0@"SOSAccountTransaction"8^^{__CFError}16
force-push
updates
B16@?0^^{__CFError}8
initial sync
B16@?0@"SOSAccount"8
piggy
devRecovery
syncWithPeers
B24@?0^{__CFSet=}8^^{__CFError}16
syncwith
octagon
Updating Octagon Keys in SOS
Device has no full peer info
B24@?0^{__OpaqueSOSPeerInfo={__CFRuntimeBase=QAQ}^{__CFDictionary}^{__CFData}^{__CFDictionary}^{__CFString}^{__CFString}q^{__CFString}B^{__CFDictionary}}8^^{__CFError}16
octagon-preload-keys
Device has no SOSAccount
CKKS4All update
B24@?0^{__OpaqueSOSFullPeerInfo=}8^^{__CFError}16
B16@?0^{__OpaqueSOSPeerInfo={__CFRuntimeBase=QAQ}^{__CFDictionary}^{__CFData}^{__CFDictionary}^{__CFString}^{__CFString}q^{__CFString}B^{__CFDictionary}}8
account
v56@?0@"SOSAccount"8^{__OpaqueSOSCircle=}16^{__CFSet=}24^{__CFSet=}32^{__CFSet=}40^{__CFSet=}48
^{__CFArray=}16@?0^{__CFDictionary=}8
v24@?0^{__CFData=}8^{__CFError=}16
com.apple.securityd.cloudcircleserver
DeviceName
Unknown name
Cannot inflate account object as root
fresh
success
failure
flush
Success
Failure
InitialSync.WaitPeriod
Octagon Peer Signing 
Octagon Peer Encryption 
ID for %@-%@
<?xml version="1.0" encoding="UTF-8"?>                          <!DOCTYPE plist PUBLIC "-//Apple//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd">                          <plist version="1.0">                          <dict>                          <key>general</key>                          <dict>                          <key>maxStateSize</key>                          <integer>250</integer>                          <key>maxItemAge</key>                          <integer>3600</integer>                          <key>overloadDuration</key>                          <integer>1800</integer>                          <key>name</key>                          <string>SOS</string>                          <key>MAType</key>                          <string></string>                          </dict>                          <key>groups</key>                          <array>                                <dict>                                    <key>property</key>                                    <string>global</string>                                    <key>capacity</key>                                    <integer>1000</integer>                                    <key>rate</key>                                    <integer>10</integer>                                    <key>badness</key>                                    <integer>1</integer>                                </dict>                                <dict>                                    <key>property</key>                                    <string>accessGroup</string>                                    <key>capacity</key>                                    <integer>50</integer>                                    <key>rate</key>                                    <integer>900</integer>                                    <key>badness</key>                                    <integer>3</integer>                                </dict>                          </array>                          </dict>                          </plist>                          
SOSRing
v8@?0
Applicants
Rejections
LastModifier
PeerIDs
Payload
BackupViews
Generation
RingName
RingType
Identifier
RingVersion
ring
No ring name
Failed to allocate unsigned information area
Failed to allocate signed information area
Failed to allocate signature area
Failed to allocate data area
Failed to allocate ring type
Failed to allocate ring version
Failed to allocate ring identifier
Failed to allocate applicant area
Failed to allocate rejection area
Failed to allocate generation count
Failed to allocate PeerID
MEMBER
APPLICANTS
REJECTS
Development
SOSRingSign Lacking ring or private key
v16@?0^{__CFString=}8
<SOSRing: '%@'
Gen: %@, 
Mod: %@, 
P: [%@], 
A: [%@], 
R: [%@], 
S: [%@]>
com.apple.private.security.initial-sync
v16@?0@"SOSAccountTransaction"8
v12@?0B8
com.apple.securityd.sos
v16@?0r^v8
transport
v24@?0r^v8r^v16
circleChange
No peer for circle
SecError
Octagon Peer Signing ID for %@
SOSCheckOctagonSigningKey
Octagon Peer Encryption ID for %@
SOSCheckOctagonEncryptionKey
Don't have circle
circleOps
circleOp
SecWarning
stringByReplacingOccurrencesOfString:withString:
componentsSeparatedByString:
count
objectAtIndexedSubscript:
initWithBase64EncodedString:options:
JSONObjectWithData:options:error:
objectForKey:
isEqual:
date
timeIntervalSince1970
doubleValue
stringByAppendingString:
dataUsingEncoding:
bytes
length
dataWithBytes:length:
containsObject:
objectAtIndex:
initWithCapacity:
countByEnumeratingWithState:objects:count:
addObject:
stringByPaddingToLength:withString:startingAtIndex:
arrayWithObjects:count:
watchdog
init
activateTimer
watchdogrusage:
secondsFromMachTime:
triggerOSFaults
runWatchdog
numberWithUnsignedLongLong:
numberWithLong:
dictionaryWithObjects:forKeys:count:
array
isEqualToString:
longValue
enumerateKeysAndObjectsUsingBlock:
stringWithFormat:
errorWithDomain:code:userInfo:
watchdogParameters
setWatchdogParameters:error:
diskUsageHigh
.cxx_destruct
_rusageBaseline
_lastCheckTime
_timer
_runtimeSecondsBeforeWatchdog
_resetPeriod
_checkPeriod
_checkPeriodLeeway
_gracefulExitLeeway
_diskUsageBaseLine
_diskUsageLimit
_diskUsageHigh
TB,R,V_diskUsageHigh
_setFileNameLocalizationEnabled:
sharedManager
currentPersona
userPersonaType
userPersonaNickName
userPersonaUniqueString
UTF8String
init:
transaction
setTransaction:
_transaction
T@"NSObject<OS_os_transaction>",&,V_transaction
clientHasBooleanEntitlement:
manager
completedSecCKKSInitialize
wait:
objectForKeyedSubscript:
mutableCopy
callCallback:error:
setObject:forKeyedSubscript:
errorWithDomain:code:description:
setCurrentItemForAccessGroup:hash:accessGroup:identifier:viewHint:replacing:hash:complete:
findItemPersistentRefByUUID:extraLoggingString:complete:
getCurrentItemForAccessGroup:identifier:viewHint:fetchCloudValue:complete:
verifyBackupIntegrity:completion:
SecItemAddAndNotifyOnSync:syncCallback:complete:
secItemSetCurrentItemAcrossAllDevices:newCurrentItemHash:accessGroup:identifier:viewHint:oldCurrentItemReference:oldCurrentItemHash:complete:
secItemFetchCurrentItemAcrossAllDevices:identifier:viewHint:fetchCloudValue:complete:
secItemDigest:accessGroup:complete:
secKeychainDeleteMultiuser:complete:
secItemVerifyBackupIntegrity:completion:
secItemDeleteForAppClipApplicationIdentifier:completion:
secItemPersistKeychainWritesAtHighPerformanceCost:
secItemPromoteItemsForAppClip:toParentApp:completion:
effectiveUserIdentifier
auditToken
dealloc
initWithConnection:
initWithSecurityClient:
connection
setConnection:
_client
_connection
T@"NSXPCConnection",W,V_connection
fakeEntitlements
initWithSecurityClient:fakeEntitlements:
setFakeEntitlements:
_fakeEntitlements
T@"NSMutableDictionary",&,V_fakeEntitlements
initWithMachServiceName:
setListener:
listener
setDelegate:
resume
valueForEntitlement:
class
self
performSelector:
performSelector:withObject:
performSelector:withObject:withObject:
isProxy
isKindOfClass:
isMemberOfClass:
conformsToProtocol:
respondsToSelector:
retain
release
autorelease
retainCount
zone
hash
superclass
description
debugDescription
TQ,R
T#,R
T@"NSString",R,C
interfaceWithProtocol:
setExportedInterface:
exportedInterface
configureSecuritydXPCProtocol:
setExportedObject:
listener:shouldAcceptNewConnection:
_listener
T@"NSXPCListener",&,V_listener
dictionaryRepresentation
dictionary
setObject:forKey:
setKey:
setOptionalParams:
allocWithZone:
copyWithZone:
hasKey
hasOptionalParams
readFrom:
writeTo:
copyTo:
mergeFrom:
optionalParams
_key
_optionalParams
TB,R,N
T@"NSData",&,N,V_key
T@"NSData",&,N,V_optionalParams
mutabilityQueue
lockedStates
removeAllObjects
setKeybag_state:
numberWithInt:
boolValue
numberWithBool:
keybag_state
removeObjectAtIndex:
unlockAllClasses
trapdoor
reset
isLocked:
forceInvalidPersona
forceUnwrapKeyDecodeFailure
isSEPDown
useGenerationCount
lockClassA
lockClassA_C
failNextDecryptRefKey:
popDecryptRefKeyFailure
setOperationsUntilUnlock:
updateOperationsUntilUnlock
T@"NSMutableDictionary",R
T@"NSObject<OS_dispatch_queue>",R
copy
setKeyData:
initWithBitSize:
keyData
initWithData:specifier:error:
initWithData:
externalData
setExternalData:
acmHandle
setAcmHandle:
data
setBlob:
initWithKeyData:parameters:error:
blob
_keyData
_acmHandle
_externalData
_blob
T@"NSData",&,V_keyData
T@"_SFAESKey",&,V_key
T@"NSData",&,V_acmHandle
T@"NSData",&,V_externalData
T@"NSData",&,V_blob
code
keySpecifier
initWithKeySpecifier:authenticationMode:
encrypt:withKey:error:
archivedDataWithRootObject:requiringSecureCoding:error:
hasExternalData
hasAcmHandle
unarchivedObjectOfClass:fromData:error:
ciphertext
authenticationCode
initializationVector
decrypt:withKey:error:
setAccessGroups:
hasAccessGroups
accessGroups
_accessGroups
T@"NSData",&,N,V_accessGroups
T@"NSData",&,N,V_externalData
T@"NSData",&,N,V_acmHandle
triggerAutoBugCaptureWithType:subType:subtypeContext:events:payload:detectedProcess:
triggerAutoBugCaptureWithType:subType:
string
appendString:
concatenateWithSeparator:
componentsJoinedByString:
compactDescription
removeObjectForKey:
extractObjectForKey:
isEmpty
enumerateObjectsUsingBlock:
containsElementsNotIn:
allObjects
compare:
sortedArrayUsingSelector:
shortDescription
sortedElementsTruncated:JoinedByString:
substringToIndex:
insertObject:atIndex:
sortUsingSelector:
sortedElementsJoinedByString:
dataWithLength:
mutableBytes
replaceBytesInRange:withBytes:length:
dataWithSpace:DEREncode:
currentHandler
stringWithUTF8String:
handleFailureInFunction:file:lineNumber:description:
radarnumber
isRateLimited
initWithSuiteName:
keyname:
valueForKey:
dateByAddingTimeInterval:
alert
queue
isRateLimited:
askUserIfTTR:
triggerTapToRadar:
updateRetryTimestamp
disableTTRsEntirely
initTapToRadar:description:radar:
clearRetryTimestamp
trigger
componentID
setComponentID:
componentName
setComponentName:
componentVersion
setComponentVersion:
setAlert:
radarDescription
setRadarDescription:
setRadarnumber:
setQueue:
_componentID
_componentName
_componentVersion
_alert
_radarDescription
_radarnumber
_queue
T@"NSString",&,V_alert
T@"NSString",&,V_radarDescription
T@"NSString",&,V_radarnumber
T@"NSObject<OS_dispatch_queue>",&,V_queue
T@"NSString",&,V_componentID
T@"NSString",&,V_componentName
T@"NSString",&,V_componentVersion
initWithLockStateTracker:
globalTracker
server
controller
setController:
_controller
T@"KeychainItemUpgradeRequestController",&,V_controller
domain
cuttlefishXPCConnection
retryable:
synchronousRemoteObjectProxyWithErrorHandler:
pingWithReply:
dumpWithContainer:context:reply:
departByDistrustingSelfWithContainer:context:reply:
distrustPeerIDsWithContainer:context:peerIDs:reply:
trustStatusWithContainer:context:reply:
resetWithContainer:context:resetReason:reply:
localResetWithContainer:context:reply:
setAllowedMachineIDsWithContainer:context:allowedMachineIDs:honorIDMSListChanges:reply:
addAllowedMachineIDsWithContainer:context:machineIDs:reply:
removeAllowedMachineIDsWithContainer:context:machineIDs:reply:
fetchAllowedMachineIDsWithContainer:context:reply:
fetchEgoEpochWithContainer:context:reply:
prepareWithContainer:context:epoch:machineID:bottleSalt:bottleID:modelID:deviceName:serialNumber:osVersion:policyVersion:policySecrets:syncUserControllableViews:secureElementIdentity:setting:signingPrivKeyPersistentRef:encPrivKeyPersistentRef:reply:
establishWithContainer:context:ckksKeys:tlkShares:preapprovedKeys:reply:
vouchWithContainer:context:peerID:permanentInfo:permanentInfoSig:stableInfo:stableInfoSig:ckksKeys:reply:
preflightVouchWithBottleWithContainer:context:bottleID:reply:
vouchWithBottleWithContainer:context:bottleID:entropy:bottleSalt:tlkShares:reply:
preflightVouchWithRecoveryKeyWithContainer:context:recoveryKey:salt:reply:
preflightVouchWithCustodianRecoveryKeyWithContainer:context:crk:reply:
vouchWithRecoveryKeyWithContainer:context:recoveryKey:salt:tlkShares:reply:
vouchWithCustodianRecoveryKeyWithContainer:context:crk:tlkShares:reply:
joinWithContainer:context:voucherData:voucherSig:ckksKeys:tlkShares:preapprovedKeys:reply:
preflightPreapprovedJoinWithContainer:context:preapprovedKeys:reply:
attemptPreapprovedJoinWithContainer:context:ckksKeys:tlkShares:preapprovedKeys:reply:
updateWithContainer:context:forceRefetch:deviceName:serialNumber:osVersion:policyVersion:policySecrets:syncUserControllableViews:secureElementIdentity:reply:
setPreapprovedKeysWithContainer:context:preapprovedKeys:reply:
updateTLKsWithContainer:context:ckksKeys:tlkShares:reply:
fetchViableBottlesWithContainer:context:reply:
fetchEscrowContentsWithContainer:context:reply:
fetchPolicyDocumentsWithContainer:context:versions:reply:
fetchCurrentPolicyWithContainer:context:modelIDOverride:isInheritedAccount:reply:
validatePeersWithContainer:context:reply:
fetchTrustStateWithContainer:context:reply:
setRecoveryKeyWithContainer:context:recoveryKey:salt:ckksKeys:reply:
createCustodianRecoveryKeyWithContainer:context:recoveryKey:salt:ckksKeys:uuid:kind:reply:
removeCustodianRecoveryKeyWithContainer:context:uuid:reply:
reportHealthWithContainer:context:stateMachineState:trustState:reply:
pushHealthInquiryWithContainer:context:reply:
requestHealthCheckWithContainer:context:requiresEscrowCheck:knownFederations:reply:
getSupportAppInfoWithContainer:context:reply:
fetchViableEscrowRecordsWithContainer:context:forceFetch:reply:
removeEscrowCacheWithContainer:context:reply:
resetAccountCDPContentsWithContainer:context:reply:
fetchRecoverableTLKSharesWithContainer:context:peerID:reply:
fetchAccountSettingsWithContainer:context:reply:
prepareInheritancePeerWithContainer:context:epoch:machineID:bottleSalt:bottleID:modelID:deviceName:serialNumber:osVersion:policyVersion:policySecrets:syncUserControllableViews:secureElementIdentity:signingPrivKeyPersistentRef:encPrivKeyPersistentRef:crk:reply:
recoverTLKSharesForInheritorWithContainer:context:crk:tlkShares:reply:
initWithCuttlefishXPCConnection:
_cuttlefishXPCConnection
T@"<NSXPCProxyCreating>",R,V_cuttlefishXPCConnection
intendedViewStatus
performWithStatus:
deps
cuttlefishXPCWrapper
containerName
contextID
setError:
lockStateTracker
error
isLockedError:
initWithFlag:conditions:
flagHandler
handlePendingFlag:
peerStatus
peerMissingState
setNextState:
viewList
stateHolder
setTPSyncingPolicy:
persistAccountChanges:error:
ckks
setCurrentSyncingPolicy:
notifierClass
post:
intendedState
nextState
T@"NSString<OctagonStateString>",&
T@"NSString<OctagonStateString>",R
initWithDependencies:intendedViewStatus:intendedState:peerMissingState:errorState:
groupStart
setDeps:
setPeerMissingState:
setIntendedViewStatus:
_intendedViewStatus
_intendedState
_nextState
_deps
_peerMissingState
T@"OTOperationDependencies",&,V_deps
T@"NSString<OctagonStateString>",&,V_peerMissingState
Ti,V_intendedViewStatus
T@"NSString<OctagonStateString>",&,V_nextState
T@"NSString<OctagonStateString>",R,V_intendedState
setUuid:
setZoneName:
setKeyclass:
uuid
zoneName
keyclass
_keyclass
_uuid
_zoneName
T@"NSString",&,N,V_uuid
T@"NSString",&,N,V_zoneName
T@"NSString",&,N,V_keyclass
numberWithLongLong:
addTlkSharesForVouchedIdentity:
setPeerID:
setAltDSID:
setSyncingPolicy:
setVoucher:
setVoucherSignature:
tlkSharesForVouchedIdentitysCount
clearTlkSharesForVouchedIdentitys
tlkSharesForVouchedIdentityAtIndex:
setSecureElementIdentity:
setSettings:
tlkSharesForVouchedIdentityType
hasPeerID
icloudAccountState
setIcloudAccountState:
setHasIcloudAccountState:
hasIcloudAccountState
icloudAccountStateAsString:
StringAsIcloudAccountState:
setEpoch:
setHasEpoch:
hasEpoch
hasAltDSID
trustState
setTrustState:
setHasTrustState:
hasTrustState
trustStateAsString:
StringAsTrustState:
setLastHealthCheckup:
setHasLastHealthCheckup:
hasLastHealthCheckup
attemptedJoin
setAttemptedJoin:
setHasAttemptedJoin:
hasAttemptedJoin
attemptedJoinAsString:
StringAsAttemptedJoin:
cdpState
setCdpState:
setHasCdpState:
hasCdpState
cdpStateAsString:
StringAsCdpState:
hasSyncingPolicy
hasVoucher
hasVoucherSignature
hasSecureElementIdentity
setIsInheritedAccount:
setHasIsInheritedAccount:
hasIsInheritedAccount
setWarmedEscrowCache:
setHasWarmedEscrowCache:
hasWarmedEscrowCache
setWarnedTooManyPeers:
setHasWarnedTooManyPeers:
hasWarnedTooManyPeers
hasSettings
peerID
epoch
altDSID
lastHealthCheckup
syncingPolicy
voucher
voucherSignature
tlkSharesForVouchedIdentitys
setTlkSharesForVouchedIdentitys:
secureElementIdentity
isInheritedAccount
warmedEscrowCache
warnedTooManyPeers
settings
_epoch
_lastHealthCheckup
_altDSID
_attemptedJoin
_cdpState
_icloudAccountState
_peerID
_secureElementIdentity
_settings
_syncingPolicy
_tlkSharesForVouchedIdentitys
_trustState
_voucher
_voucherSignature
_isInheritedAccount
_warmedEscrowCache
_warnedTooManyPeers
_has
T@"NSString",&,N,V_peerID
TB,N
Ti,N,V_icloudAccountState
Tq,N,V_epoch
T@"NSString",&,N,V_altDSID
Ti,N,V_trustState
TQ,N,V_lastHealthCheckup
Ti,N,V_attemptedJoin
Ti,N,V_cdpState
T@"NSData",&,N,V_syncingPolicy
T@"NSData",&,N,V_voucher
T@"NSData",&,N,V_voucherSignature
T@"NSMutableArray",&,N,V_tlkSharesForVouchedIdentitys
T@"NSData",&,N,V_secureElementIdentity
TB,N,V_isInheritedAccount
TB,N,V_warmedEscrowCache
TB,N,V_warnedTooManyPeers
T@"OTAccountMetadataClassCAccountSettings",&,N,V_settings
safeErrorClasses
restore:dsid:secret:escrowRecordID:reply:
setClasses:forSelector:argumentIndex:ofReply:
octagonEncryptionPublicKey:
octagonSigningPublicKey:
listOfEligibleBottledPeerRecords:
signIn:container:context:reply:
signOut:context:reply:
notifyIDMSTrustLevelChangeForContainer:context:reply:
reset:
handleIdentityChangeForSigningKey:ForEncryptionKey:ForPeerID:reply:
rpcEpochWithConfiguration:reply:
rpcPrepareIdentityAsApplicantWithConfiguration:reply:
rpcVoucherWithConfiguration:peerID:permanentInfo:permanentInfoSig:stableInfo:stableInfoSig:reply:
rpcJoinWithConfiguration:vouchData:vouchSig:reply:
preflightBottledPeer:dsid:reply:
launchBottledPeer:bottleID:reply:
scrubBottledPeer:bottleID:reply:
status:context:reply:
fetchEgoPeerID:context:reply:
fetchCliqueStatus:context:configuration:reply:
fetchTrustStatus:context:configuration:reply:
startOctagonStateMachine:context:reply:
resetAndEstablish:context:altDSID:resetReason:reply:
establish:context:altDSID:reply:
leaveClique:context:reply:
removeFriendsInClique:context:peerIDs:reply:
peerDeviceNamesByPeerID:context:reply:
fetchAllViableBottles:context:reply:
restore:contextID:bottleSalt:entropy:bottleID:reply:
fetchEscrowContents:contextID:reply:
createRecoveryKey:contextID:recoveryKey:reply:
joinWithRecoveryKey:contextID:recoveryKey:reply:
healthCheck:context:skipRateLimitingCheck:reply:
waitForOctagonUpgrade:context:reply:
postCDPFollowupResult:type:error:containerName:contextName:reply:
tapToRadar:description:radar:reply:
refetchCKKSPolicy:contextID:reply:
setCDPEnabled:contextID:reply:
getCDPStatus:contextID:reply:
fetchEscrowRecords:contextID:forceFetch:reply:
setUserControllableViewsSyncStatus:contextID:enabled:reply:
fetchUserControllableViewsSyncStatus:contextID:reply:
resetAccountCDPContents:contextID:reply:
setLocalSecureElementIdentity:contextID:secureElementIdentity:reply:
removeLocalSecureElementIdentityPeerID:contextID:secureElementIdentityPeerID:reply:
fetchTrustedSecureElementIdentities:contextID:reply:
fetchAccountSettings:contextID:reply:
fetchAccountWideSettings:contextID:reply:
persistAccountSettings:context:setting:reply:
waitForPriorityViewKeychainDataRecovery:contextID:reply:
createCustodianRecoveryKey:contextID:uuid:reply:
joinWithCustodianRecoveryKey:contextID:custodianRecoveryKey:reply:
preflightJoinWithCustodianRecoveryKey:contextID:custodianRecoveryKey:reply:
removeCustodianRecoveryKey:contextID:uuid:reply:
createInheritanceKey:contextID:uuid:reply:
generateInheritanceKey:contextID:uuid:reply:
storeInheritanceKey:contextID:ik:reply:
joinWithInheritanceKey:contextID:inheritanceKey:reply:
preflightJoinWithInheritanceKey:contextID:inheritanceKey:reply:
removeInheritanceKey:contextID:uuid:reply:
tlkRecoverabilityForEscrowRecordData:contextID:recordData:reply:
initWithDependencies:refetchNeeded:
fetchBeforeGettingKeyset
findKeySets:
desiredTimeout
timeout:
intendedZoneIDs
unionSet:
keysets
allKeys
viewFilter
zoneID
asKeychainBackedSet:
pendingTLKShares
share
setViewKeySets:
setIncompleteKeySets:
setPendingTLKShares:
setZonesTimedOutWithoutKeysets:
viewKeySets
incompleteKeySets
zonesTimedOutWithoutKeysets
named:withBlock:
addDependency:
runBeforeGroupFinished:
initWithDependencies:viewsToFetch:
setDesiredTimeout:
setCkks:
setViewFilter:
setFetchBeforeGettingKeyset:
_fetchBeforeGettingKeyset
_viewKeySets
_incompleteKeySets
_pendingTLKShares
_zonesTimedOutWithoutKeysets
_desiredTimeout
_ckks
_viewFilter
T@"CKKSKeychainView",&,V_ckks
T@"NSSet",&,V_viewFilter
TB,V_fetchBeforeGettingKeyset
T@"NSArray",&,V_viewKeySets
T@"NSArray",&,V_incompleteKeySets
T@"NSArray",&,V_pendingTLKShares
T@"NSSet",&,V_zonesTimedOutWithoutKeysets
TQ,V_desiredTimeout
setFinishedOp:
finishedOp
dependOnBeforeGroupFinished:
initWithDependencies:intendedState:errorState:
_finishedOp
T@"NSOperation",&,V_finishedOp
errorWithDomain:code:description:underlying:
setW:
setHasW:
hasW
setWebAccess:
setHasWebAccess:
hasWebAccess
webAccess
_webAccess
TB,N,V_w
TB,N,V_webAccess
boolForKey:
setWithArray:
stringValue
integerValue
numberWithInteger:
dateFromString:
asBOOL
asNSInteger
asString
asNSNumberInteger
asISO8601Date
asBase64DecodedData
setStringValue:
_stringValue
T@"NSString",&,V_stringValue
initWithFormat:
appendFormat:
sqlOp
columnName
values
arrayWithCapacity:
value
makeWhereClause:
bindWhereClause:whereDict:cferror:
groupByClause:
orderByClause:
quotedString:
stringByAppendingFormat:
saveToDatabaseWithConnection:error:
whereClauseToFindSelf
originalSelfWhereClause
isEqualToDictionary:
sqlTable
deleteFromTable:where:connection:error:
sqlValues
saveToDatabaseTable:row:connection:error:
tryFromDatabaseWhere:error:
sqlColumns
fromDatabaseRow:
memoizeOriginalSelfWhereClause
queryDatabaseTable:where:columns:groupBy:orderBy:limit:processRow:error:
allWhere:error:
fetch:where:orderBy:error:
exceptionWithName:reason:userInfo:
queryMaxValueForField:inTable:where:columns:processRow:
performCKKSTransaction:
deleteAll:
fromDatabaseWhere:error:
all:
fetch:error:
fetch:where:error:
saveToDatabase:
deleteFromDatabase:
setOriginalSelfWhereClause:
_originalSelfWhereClause
T@"NSDictionary",C,V_originalSelfWhereClause
initWithOperation:columnName:
op:column:
setSqlOp:
setColumnName:
_sqlOp
_columnName
TQ,V_sqlOp
TQ,V_columnName
initWithOperation:value:
op:value:
setValue:
_value
T@"NSString",&,V_value
initWithValues:
setValues:
_values
T@"NSArray",&,V_values
initWithCoder:
setWithObjects:
decodeObjectOfClasses:forKey:
dictionaryWithObjectsAndKeys:
config
buckets
overloadUntil
intValue
capacity:
rate:
timeIntervalSinceDate:
trim:
unsignedIntValue
consumeTokenFromBucket:type:at:
accessgroup
laterDate:
setBuckets:
setOverloadUntil:
keysOfEntriesPassingTest:
removeObjectsForKeys:
encodeObject:forKey:
topOffendingAccessGroups:
hasPrefix:
objectsForKeys:notFoundMarker:
dictionaryWithObjects:forKeys:
keysSortedByValueUsingSelector:
reverseObjectEnumerator
subarrayWithRange:
supportsSecureCoding
encodeWithCoder:
TB,R
judge:at:limitTime:
stateSize
diagnostics
setConfig:
_config
_buckets
_overloadUntil
T@"NSDictionary",&,V_config
T@"NSMutableDictionary",&,V_buckets
T@"NSDate",&,V_overloadUntil
initWithName:states:flags:initialState:queue:stateEngine:lockStateTracker:reachabilityTracker:
_onqueueContains:
_onqueueRemoveFlag:
initWithIntendedState:errorState:lockStateTracker:
initWithIntendedState:errorState:enforceRateLimiting:lockStateTracker:
named:entering:
unlockDependency
addNullableDependency:
loadAllFromKeychain:
hasUploadCompleted
uploadCompleted
haveRecordedDate
logger
datePropertyForKey:
setDateProperty:forKey:
setHaveRecordedDate:
certCached
forceIgnoreCloudServicesRateLimiting
hasLastCloudServicesTriggerTime
lastCloudServicesTriggerTime
hasSerializedPrerecord
escrowAttemptedWithinLastSeconds:
stateMachine
startOperation
setReason:
setExpectedFederationID:
setHasCertCached:
setSerializedPrerecord:
setSerializedReason:
saveToKeychain:
UUID
UUIDString
setTriggerRequestTime:
handleFlag:
setWithObject:
numberOfRecordsUploaded
doSimpleStateMachineRPC:op:sourceStates:reply:
_onqueueNextStateMachineTransition:flags:pendingFlags:
triggerEscrowUpdateRPC:options:reply:
storePrerecordsInEscrowRPC:
setStateMachine:
setForceIgnoreCloudServicesRateLimiting:
setLockStateTracker:
_forceIgnoreCloudServicesRateLimiting
_haveRecordedDate
_stateMachine
_lockStateTracker
T@"CKKSLockStateTracker",&,V_lockStateTracker
TB,V_haveRecordedDate
T@"OctagonStateMachine",&,V_stateMachine
TB,V_forceIgnoreCloudServicesRateLimiting
store
setStore:
setupDeviceNameListener
deviceNameUpdateListeners
registerListener:
initWithName:
setDeviceNameUpdateListeners:
modelID
deviceName
osVersion
serialNumber
registerForDeviceNameUpdates:
_deviceNameUpdateListeners
_store
T@"CKKSListenerCollection",&,V_deviceNameUpdateListeners
T^{__SCDynamicStore=},V_store
deviceNameUpdated
iterateListeners:
aksEncryptWithKeybag:keyclass:plaintext:outKeyclass:ciphertext:personaId:personaIdLength:error:
aksDecryptWithKeybag:keyclass:ciphertext:outKeyclass:plaintext:personaId:personaIdLength:error:
strongToWeakObjectsMapTable
init:error:
nsnotificationCenterClass
defaultCenter
notifyCKAccountStatusChange:
addObserver:selector:name:object:
notifyCircleChange:
performInitialDispatches
initWithName:initialDelay:expontialBackoff:maximumDelay:keepProcessAlive:dependencyDescriptionCode:block:
finishedInitialDispatches
fulfill
removeObserver:
currentCKAccountInfo
hsa2iCloudAccountStatus
descriptionInternal:
ckChangeListeners
objectEnumerator
nextObject
firstCKAccountFetch
_onqueueDeliverCurrentCloudKitState:listenerQueue:oldStatus:group:
container
fetchCKAccountStatusScheduler
setFirstCKAccountFetch:
_onqueueUpdateAccountState:deliveredSemaphore:
accountInfoWithCompletionHandler:
accountStatus
setCkdeviceID:
setCkdeviceIDError:
ckdeviceIDInitialized
fetchCurrentDeviceIDWithCompletionHandler:
setCkdeviceIDInitialized:
getCircleStatus
currentCircleStatus
setCurrentCircleStatus:
status
_onqueueUpdateCirclePeerID:
setAccountCirclePeerID:
setAccountCirclePeerIDError:
accountCirclePeerIDInitialized
fetchCirclePeerID:
setAccountCirclePeerIDInitialized:
_onqueueUpdateAccountState:dispatchGroup:
setCurrentCKAccountInfo:
ckAccountInfoInitialized
_onqueueUpdateCKDeviceID:
_onqueueDeliverCloudKitStateChanges:dispatchGroup:
keyEnumerator
cloudkitAccountStateChange:to:
notifyCKAccountStatusChangeAndWait:
octagonInformationInitialized
initToChain:
setOctagonInformationInitialized:
setTimeoutWaitForCKAccount:
initWithStatus:
setOctagonStatus:
setOctagonPeerID:
setHsa2iCloudAccountStatus:
hsa2iCloudAccountInitialized
setHsa2iCloudAccountInitialized:
stringFromAccountStatus:
registerForNotificationsOfCloudKitAccountStatusChange:
recheckCKAccountStatus
ckdeviceID
T@"NSString",C
triggerOctagonStatusFetch
setHSA2iCloudAccountStatus:
octagonStatus
octagonPeerID
T@"OTCliqueStatusWrapper",R
T@"NSString",R
init:nsnotificationCenterClass:
notifyCKAccountStatusChangeAndWaitForSignal
notifyCircleStatusChangeAndWaitForSignal
checkForAllDeliveries
setFinishedInitialDispatches:
setCkAccountInfoInitialized:
ckdeviceIDError
accountCirclePeerID
accountCirclePeerIDError
setCkChangeListeners:
setContainer:
_firstCKAccountFetch
_octagonPeerID
_finishedInitialDispatches
_fetchCKAccountStatusScheduler
_currentCKAccountInfo
_ckAccountInfoInitialized
_ckdeviceID
_ckdeviceIDError
_ckdeviceIDInitialized
_currentCircleStatus
_accountCirclePeerID
_accountCirclePeerIDError
_accountCirclePeerIDInitialized
_octagonStatus
_octagonInformationInitialized
_hsa2iCloudAccountStatus
_hsa2iCloudAccountInitialized
_nsnotificationCenterClass
_ckChangeListeners
_container
T#,R,V_nsnotificationCenterClass
T@"NSMapTable",&,V_ckChangeListeners
T@"CKContainer",&,V_container
TB,V_firstCKAccountFetch
T@"OTCliqueStatusWrapper",&,V_octagonStatus
T@"NSString",&,V_octagonPeerID
T@"CKKSCondition",&,V_octagonInformationInitialized
Tq,V_hsa2iCloudAccountStatus
T@"CKKSCondition",&,V_hsa2iCloudAccountInitialized
T@"CKKSCondition",&,V_finishedInitialDispatches
T@"CKKSNearFutureScheduler",R,V_fetchCKAccountStatusScheduler
T@"CKAccountInfo",&,V_currentCKAccountInfo
T@"CKKSCondition",&,V_ckAccountInfoInitialized
T@"NSString",C,V_ckdeviceID
T@"NSError",&,V_ckdeviceIDError
T@"CKKSCondition",&,V_ckdeviceIDInitialized
T@"SOSAccountStatus",&,V_currentCircleStatus
T@"NSString",&,V_accountCirclePeerID
T@"NSError",&,V_accountCirclePeerIDError
T@"CKKSCondition",&,V_accountCirclePeerIDInitialized
setStatus:
_status
_error
Ti,V_status
T@"NSError",&,V_error
Tq,R,V_status
setupAnalytics
triggerEscrowUpdate:options:error:
triggerEscrowUpdate:options:reply:
fetchRequestStatuses:
allValues
escrowCompletedWithinLastSeconds:reply:
loadFromKeychain:error:
pokeStateMachine
serializedPrerecord
deleteFromKeychain:
fuzzyDaysSinceDate:
AddMultiSamplerForName:withTimeInterval:block:
request:
cachePrerecord:serializedPrerecord:reply:
fetchPrerecord:reply:
fetchRequestWaitingOnPasscode:
resetAllRequests:
storePrerecordsInEscrow:
triggerEscrowUpdate:error:
fetchStatuses:
pendingEscrowUpload:
escrowCompletedWithinLastSeconds:
T@"EscrowRequestController",&,V_controller
decodeObjectOfClass:forKey:
failWithError:
initWithCiphertext:wrappedKeyData:refKeyBlob:
wrappedKeyData
refKeyBlob
_ciphertext
_wrappedKeyData
_refKeyBlob
T@"_SFAuthenticatedCiphertext",R,V_ciphertext
T@"NSData",R,V_wrappedKeyData
T@"NSData",R,V_refKeyBlob
dataWithBytesNoCopy:length:
initWithKeybag:keyclass:
initWithBlob:keybag:
wrappedDataForKey:
keyWithWrappedData:
T@"NSData",R
_refKey
initWithContentsOfURL:
initWithManagedObjectModel:
_newZeroingDataWithBytesNoCopy:length:deallocator:
URLByAppendingPathExtension:
_onQueueGetDatabaseKeyDataWithError:
addPersistentStoreWithType:configuration:URL:options:error:
initWithConcurrencyType:
setPersistentStoreCoordinator:
fetchRequest
executeFetchRequest:error:
name
version
itemType
registerItemType:withManagedObjectContext:
performBlockAndWait:
_onQueueDropClassAPersistentStore
removePersistentStore:error:
_onQueueGetManagedObjectContextWithError:
performBlock:
entityType
stringRepresentation
clientAccessGroups
owner
validateItemOwner:withConnection:withError:
primaryKeyStringRepresentationWithError:
primaryKeyNameForItemTypeName:
predicateWithFormat:
setPredicate:
firstObject
primaryKeys
managedItemWithItem:withManagedObjectContext:error:
insertNewObjectForEntityForName:inManagedObjectContext:
setItemTypeName:
setLookupKey:
setLookupValue:
setLookupValueType:
setSystemEntry:
addMatchingItemsObject:
lookupAttributes
valueType
save:
performOnManagedObjectQueue:
fetchManagedItemForPersistentID:withManagedObjectContext:error:
initWithManagedItem:keychain:error:
matchingItems
initWithManagedEntity:
lookupEntries
removeMatchingItemsObject:
deleteObject:
removeOwnedItemsObject:
removeAccessedItemsObject:
ownedItems
accessedItems
accessControlList
managedItemTypeWithContext:error:
performOnManagedObjectQueueAndWait:
setItemType:
metadata
persistentID
setPersistentID:
attributes
dataWithPropertyList:format:options:error:
setMetadata:
setType:
setStringRepresentation:
setOwner:
addOwnedItemsObject:
addAccessedItemsObject:
encryptedSecretDataWithAttributeData:keybag:error:
setData:
lookupValueTypeForObject:
initWithStorageURL:modelURL:encryptDatabase:
insertItems:withConnection:completionHandler:
fetchItemForPersistentID:withConnection:completionHandler:
fetchItemsWithValue:forLookupKey:ofType:withConnection:completionHandler:
deleteItemWithPersistentID:withConnection:completionHandler:
_registerItemTypeForTesting:
itemTypeForItemTypeName:
_persistentStoreBaseURL
_persistentStoreCoordinator
_managedObjectContext
_managedItemTypeDict
_itemTypeDict
_encryptDatabase
_classAPersistentStores
lookupTupleWithKey:value:
propertyListWithData:options:format:error:
systemEntry
lookupTupleWithManagedLookupEntry:
lookupAttributesSet
initWithItemType:persistentID:attributes:lookupAttributes:owner:keyclass:
fetchFullItemWithKeychain:withConnection:completionHandler:
managedDataBlob
_itemType
_owner
_persistentID
_attributes
_lookupAttributes
_managedDataBlob
T@"NSSet",R,C,V_lookupAttributes
T@"NSData",R,C,V_managedDataBlob
T@"SecCDKeychainItemType",R,V_itemType
T@"SecCDKeychainAccessControlEntity",R,V_owner
T@"NSUUID",R,V_persistentID
T@"NSDictionary",R,C,V_attributes
T@"NSArray",R,C
Ti,R,V_keyclass
secretsFromEncryptedData:withKeybag:error:
secrets
compare:options:
sortedArrayUsingComparator:
addData:
hashValue
base64EncodedStringWithOptions:
initRandomKeyWithSpecifier:error:
initWithKeySpecifier:
digest:
encrypt:withKey:additionalAuthenticatedData:error:
decrypt:withKey:additionalAuthenticatedData:error:
initItemType:withPersistentID:attributes:lookupAttributes:secrets:owner:keyclass:
_metadata
_encryptedSecretData
_secrets
T@"SecCDKeychainItemType",R
T@"SecCDKeychainAccessControlEntity",R
T@"NSUUID",R
T@"NSDictionary",R
T@"NSArray",R
T@"NSDictionary",R,V_secrets
T@"SecCDKeychainItemMetadata",R,V_metadata
initWithKey:value:
lookupValue
lookupValueType
lookupKey
_valueType
T@"NSString",R,C,V_key
T@"<NSCopying><NSObject>",R,C,V_value
T@"NSString<SecCDKeychainLookupValueType>",R,C,V_valueType
isEqualToSet:
setName:
setVersion:
setPrimaryKeys:
setSyncableKeys:
itemTypeForVersion:
_initWithName:version:primaryKeys:syncableKeys:
syncableKeys
managedItemType
_name
_version
_primaryKeys
_syncableKeys
_managedItemType
T@"NSString",R,C,V_name
Ti,R,V_version
T@"SecCDKeychainManagedItemType",R,V_managedItemType
_initWithEntityType:stringRepresentation:
type
accessControlEntityWithType:stringRepresentation:
_entityType
_stringRepresentation
Tq,R,N,V_entityType
T@"NSString",R,N,V_stringRepresentation
encryptionIdentity
publicKey
signingIdentity
keyPair
matchesPeer:
publicEncryptionKey
publicSigningKey
T@"_SFECPublicKey",R
encryptionKey
signingKey
T@"_SFECKeyPair",R
initWithPeerID:signingIdentity:encryptionIdentity:
setEncryptionIdentity:
setSigningIdentity:
_encryptionIdentity
_signingIdentity
T@"_SFIdentity",&,V_encryptionIdentity
T@"_SFIdentity",&,V_signingIdentity
T@"NSString",R,V_peerID
essential
defaultOverCommitManager
resultType
identityForIdentifier:resultHandler:
fetchIdentity:error:
initWithCurrent:allSelves:
signingSPKI
keyWithSubjectPublicKeyInfo:
encryptionSPKI
initWithPeerID:encryptionPublicKey:signingPublicKey:viewList:
peerChangeListeners
selfPeerChanged:
trustedPeerSetChanged:
createFromProvider:
fetchSelfPeers:
fetchTrustedPeers:
registerForPeerChangeUpdates:
sendSelfPeerChangedUpdate
sendTrustedPeerSetChangedUpdate
currentState
providerID
setEssential:
initWithPeerID:containerName:contextID:cuttlefishXPC:
setPeerChangeListeners:
_essential
_providerID
_cuttlefishXPCWrapper
_containerName
_contextID
_peerChangeListeners
T@"CKKSListenerCollection",&,V_peerChangeListeners
T@"NSString",&,V_peerID
T@"CuttlefishXPCWrapper",R,V_cuttlefishXPCWrapper
T@"NSString",R,V_containerName
T@"NSString",R,V_contextID
T@"NSString",R,V_providerID
TB,V_essential
setFinishOp:
finishOp
skipRateLimitingCheck
lastHealthCheckupDate:
setHour:
currentCalendar
dateByAddingComponents:toDate:options:
persistLastHealthCheck:error:
checkIfPasscodeIsSetForDevice
knownICDPFederations:
handleRepairSuggestions:postEscrowCFU:resetOctagon:leaveTrust:moveRequest:
setPostEscrowCFU:
setPostRepairCFU:
setResetOctagon:
setLeaveTrust:
setMoveRequest:
initWithDependencies:intendedState:errorState:deviceInfo:skipRateLimitedCheck:
deviceInfo
setDeviceInfo:
setSkipRateLimitingCheck:
postRepairCFU
postEscrowCFU
resetOctagon
leaveTrust
moveRequest
requiresEscrowCheck
setRequiresEscrowCheck:
_skipRateLimitingCheck
_postRepairCFU
_postEscrowCFU
_resetOctagon
_leaveTrust
_requiresEscrowCheck
_deviceInfo
_moveRequest
_finishOp
T@"NSOperation",&,V_finishOp
TB,V_requiresEscrowCheck
T@"OTDeviceInformation",&,V_deviceInfo
TB,V_skipRateLimitingCheck
TB,V_postRepairCFU
TB,V_postEscrowCFU
TB,V_resetOctagon
TB,V_leaveTrust
T@"OTEscrowMoveRequestContext",&,V_moveRequest
numberWithUnsignedInteger:
addToStatsDictionary:key:
summary:stats:
CKKSPowerEvent:zone:
CKKSPowerEvent:zone:count:
CKKSPowerEvent:count:
OTPowerEvent:
storedOQE:
deletedOQE:
commit
delete
setDelete:
_delete
T@"NSMutableDictionary",&,V_store
T@"NSMutableDictionary",&,V_delete
initAsEssential:
forLiveCloudKit
initWithSOSAdapter:authKitAdapter:tooManyPeersAdapter:deviceInformationAdapter:personaAdapter:apsConnectionClass:escrowRequestClass:notifierClass:loggerClass:lockStateTracker:reachabilityTracker:cloudKitClassDependencies:cuttlefishXPCConnection:cdpd:
makeCKContainer:
setContexts:
setClients:
initWithContainer:sosAdapter:accountStateTracker:lockStateTracker:reachabilityTracker:personaAdapter:cloudKitClassDependencies:
contextForContainerName:contextID:
startOctagonStateMachine
registerForCircleChangedNotifications
waitForReady:
moveToCheckTrustedState
moveToCheckTrustedStateForContainer:context:
resetManager:to:
privateCloudDatabase
initWithZoneName:ownerName:
accountTracker
reachabilityTracker
gbmidRamp
initWithRecordName:localSettingName:container:database:zoneID:accountTracker:lockStateTracker:reachabilityTracker:fetchRecordRecordsOperationClass:
setGbmidRamp:
gbserialRamp
setGbserialRamp:
gbAgeRamp
setGbAgeRamp:
personaAdapter
currentThreadIsForPrimaryiCloudAccount
allowClientRPC:
loggerClass
startLogSystemMetricsForActivityNamed:
accountAvailable:error:
stopWithEvent:result:
accountNoLongerAvailable:
idmsTrustLevelChanged:
initWithServiceName:
setRemoteObjectInterface:
clients
initWithContainerName:contextID:clientName:cuttlefish:
contexts
sosAdapter
authKitAdapter
tooManyPeersAdapter
accountStateTracker
deviceInformationAdapter
contextForContainerName:contextID:sosAdapter:authKitAdapter:tooManyPeersAdapter:lockStateTracker:accountStateTracker:deviceInformationAdapter:
viewManager
ckksAccountSyncForContainer:contextID:
apsConnectionClass
escrowRequestClass
cdpd
initWithContainerName:contextID:cuttlefish:ckksAccountSync:sosAdapter:authKitAdapter:tooManyPeersAdapter:lockStateTracker:reachabilityTracker:accountStateTracker:deviceInformationAdapter:apsConnectionClass:escrowRequestClass:notifierClass:cdpd:
rpcFetchEgoPeerID:
rpcTrustStatus:reply:
rpcStatus:
rpcResetAndEstablish:reply:
rpcEstablish:reply:
rpcLeaveClique:
rpcRemoveFriendsInClique:reply:
rpcFetchDeviceNamesByPeerID:
rpcFetchAllViableBottles:
fetchEscrowContents:
handlePairingRestart:
rpcPrepareIdentityAsApplicantWithConfiguration:epoch:reply:
clearPairingUUID
rpcJoin:vouchSig:reply:
requestTrustedDeviceListRefresh
pairingUUID
clientStateMachineForContainerName:contextID:clientName:
rpcEpoch:reply:
rpcVoucher:peerID:permanentInfo:permanentInfoSig:stableInfo:stableInfoSig:reply:
joinWithBottle:entropy:bottleSalt:reply:
ensureRampsInitialized
checkRampStateWithError:
circleStatus:
OctagonStateMap
accountMetadataStore
loadOrCreateAccountMetadata:
getTPSyncingPolicy
syncUserControllableViewsAsBoolean
currentMemoizedLastHealthCheck
machineID:
machineIDOnMemoizedList:error:
egoPeerStatus:
peerCountsByMachineID
egoPeerMachineID
viablePeerCountsByModelID
numberWithUnsignedLong:
cdpContextTypes
numberPropertyForKey:
aa_primaryAppleAccount
isProvisionedForDataclass:
isEnabledForDataclass:
aa_altDSID
getAcceptedTermsForAltDSID:withError:
followupHandler
sfaStatus
sosEnabledForPlatform
rpcSetRecoveryKey:reply:
logResultForEvent:hardFailure:result:
joinWithRecoveryKey:reply:
rpcCreateCustodianRecoveryKeyWithUUID:reply:
joinWithCustodianRecoveryKey:reply:
preflightJoinWithCustodianRecoveryKey:reply:
rpcRemoveCustodianRecoveryKeyWithUUID:reply:
rpcCreateInheritanceKeyWithUUID:reply:
rpcGenerateInheritanceKeyWithUUID:reply:
rpcStoreInheritanceKeyWithIK:reply:
joinWithInheritanceKey:reply:
preflightJoinWithInheritanceKey:reply:
rpcRemoveInheritanceKeyWithUUID:reply:
notifyContainerChange:
checkOctagonHealth:reply:
setSosEnabledForPlatform:
haltOperation
clearCKKS
disablePendingFlags
paused
pendingEscrowCacheWarmup
waitForOctagonUpgrade:
rpcWaitForPriorityViewKeychainDataRecovery:
incrementIntegerPropertyForKey:
setNumberProperty:forKey:
rpcRefetchCKKSPolicy:
getCDPStatus:
setCDPEnabled:
rpcFetchAllViableEscrowRecords:reply:
rpcInvalidateEscrowCache:
rpcSetUserControllableViewsSyncingStatus:reply:
rpcFetchUserControllableViewsSyncingStatus:
rpcResetAccountCDPContents:
rpcSetLocalSecureElementIdentity:reply:
rpcRemoveLocalSecureElementIdentityPeerID:reply:
rpcFetchTrustedSecureElementIdentities:
rpcFetchAccountSettings:
rpcAccountWideSettings:
rpcPersistAccountSettings:reply:
rpcTlkRecoverabilityForEscrowRecordData:reply:
setBypassPCSEncryption:
containerIDForContainerIdentifier:
initWithContainerID:options:
invalidateEscrowCache:contextID:reply:
initWithSOSAdapter:lockStateTracker:personaAdapter:cloudKitClassDependencies:
initializeOctagon
waitForReady:context:wait:
setCuttlefishXPCConnection:
removeClientContextForContainerName:clientName:
removeContextForContainerName:contextID:
clearAllContexts
ghostbustByMidEnabled
ghostbustBySerialEnabled
ghostbustByAgeEnabled
xpc24HrNotification
setSOSEnabledForPlatformFlag:
allContextsHalt
allContextsDisablePendingFlags
allContextsPause:
setAccountStateTracker:
setReachabilityTracker:
cloudKitContainer
setViewManager:
setCdpd:
_sosEnabledForPlatform
_sosAdapter
_authKitAdapter
_deviceInformationAdapter
_accountStateTracker
_reachabilityTracker
_cloudKitContainer
_viewManager
_gbmidRamp
_gbserialRamp
_gbAgeRamp
_cdpd
_contexts
_clients
_tooManyPeersAdapter
_personaAdapter
_apsConnectionClass
_escrowRequestClass
_notifierClass
_loggerClass
T@"OTRamp",&,N,V_gbmidRamp
T@"OTRamp",&,N,V_gbserialRamp
T@"OTRamp",&,N,V_gbAgeRamp
T@"CKKSLockStateTracker",&,N,V_lockStateTracker
T@"<OctagonFollowUpControllerProtocol>",&,N,V_cdpd
T@"NSMutableDictionary",&,V_contexts
T@"NSMutableDictionary",&,V_clients
T@"<NSXPCProxyCreating>",&,V_cuttlefishXPCConnection
T@"<OTSOSAdapter>",R,V_sosAdapter
T@"<OTAuthKitAdapter>",R,V_authKitAdapter
T@"<OTTooManyPeersAdapter>",R,V_tooManyPeersAdapter
T@"<OTDeviceInformationAdapter>",R,V_deviceInformationAdapter
T@"<OTPersonaAdapter>",R,V_personaAdapter
T#,R,V_apsConnectionClass
T#,R,V_escrowRequestClass
T#,R,V_notifierClass
T#,R,V_loggerClass
TB,N,V_sosEnabledForPlatform
T@"CKKSAccountStateTracker",&,V_accountStateTracker
T@"CKKSReachabilityTracker",&,V_reachabilityTracker
T@"CKContainer",R,V_cloudKitContainer
T@"CKKSViewManager",&,V_viewManager
allDependentsSuccessful
cancel
blockOperationWithBlock:
removeDependenciesUponCompletion
completeOperation
finishOperation
operationQueue
addOperation:
isPending
cancelAllOperations
isCancelled
operationStateString
selfname
isFinished
finishDate
operationCount
dependencies
operations
removeObject:
indexOfObject:
pendingDependenciesString:
invalidateTimeout
willChangeValueForKey:
didChangeValueForKey:
removeDependency:
setFillInError:
fillInError
internalSuccesses
allSuccessful:
operationWithBlock:
named:withBlockTakingSelf:
isConcurrent
isExecuting
start
setOperationQueue:
setStartOperation:
setFinishOperation:
setInternalSuccesses:
executing
finished
_fillInError
_operationQueue
_startOperation
_finishOperation
_internalSuccesses
TB,V_fillInError
T@"NSBlockOperation",&,V_startOperation
T@"NSBlockOperation",&,V_finishOperation
T@"NSMutableArray",&,V_internalSuccesses
T@"NSOperationQueue",&,V_operationQueue
leafUUIDForRecordID:
digestValue
recordDigestDict
encodedCKRecord
initWithUUID:digest:recordDigestDict:zone:encodedRecord:
recordID
recordName
initWithUUID:digest:recordDigestDict:zone:
containsString:
setEncodedCKRecord:
null
derData
setStoredCKRecord:
recordType
handleFailureInMethod:object:file:lineNumber:description:
recordExistsForID:
leafRecordForID:error:
tryLeafRecordForID:error:
leafRecordForPendingRecord:
initWithCKRecord:
CKRecordName
ckRecordType
updateCKRecord:zoneID:
setFromCKRecord:
matchesCKRecord:
clearDigest
_recordDigestDict
_derData
_digestValue
T@"NSString",R,N,V_zoneName
T@"NSData",R,N
T@"NSString",R,N,V_uuid
T@"NSDictionary",R,N,V_recordDigestDict
intransactionRecordChanged:resync:error:
commitToDatabaseWithError:
addOrUpdateRecordUUID:withEncryptedItemData:
newLeafRecordInZone:
addOrUpdateRecord:
deleteItemWithUUID:
T@"NSMutableDictionary",R,D,N
initWithCKRecordType:encodedCKRecord:zoneID:
parentKeyUUID
generationCount
encitem
wrappedkey
encver
plaintextPCSServiceIdentifier
plaintextPCSPublicKey
plaintextPCSPublicIdentity
initWithUUID:parentKeyUUID:zoneID:encodedCKRecord:encItem:wrappedkey:generationCount:encver:
initWithUUID:parentKeyUUID:zoneID:encodedCKRecord:encItem:wrappedkey:generationCount:encver:plaintextPCSServiceIdentifier:plaintextPCSPublicKey:plaintextPCSPublicIdentity:
setEncitem:
setParentKeyUUID:
initWithBase64:
setWrappedkey:
zeroedKey
unsignedIntegerValue
setGenerationCount:
setEncver:
setPlaintextPCSServiceIdentifier:
setPlaintextPCSPublicKey:
setPlaintextPCSPublicIdentity:
initWithRecordName:zoneID:
initWithRecordID:action:
setOSVersionInRecord:
base64WrappedKey
makeAuthenticatedDataDictionaryUpdatingCKKSItemEncVer1
makeAuthenticatedDataDictionaryUpdatingCKKSItemEncVer2:
unsignedLongValue
storedCKRecord
stringForObjectValue:
unsignedLongLongValue
base64Item
tryFromDatabase:zoneID:error:
item
initWithCKKSItem:action:state:
allWithUUID:states:zoneID:error:
intransactionRecordDeleted:resync:error:
initCopyingCKKSItem:
initWithUUID:parentKeyUUID:zoneID:
initWithUUID:parentKeyUUID:zoneID:encItem:wrappedkey:generationCount:encver:
makeAuthenticatedDataDictionaryUpdatingCKKSItem:encryptionVersion:
setBase64Item:
_parentKeyUUID
_encitem
_wrappedkey
_generationCount
_encver
_plaintextPCSServiceIdentifier
_plaintextPCSPublicKey
_plaintextPCSPublicIdentity
T@"NSString",C,V_uuid
T@"NSString",C,V_parentKeyUUID
T@"NSData",C,V_encitem
base64encitem
T@"NSString",&,Gbase64Item,SsetBase64Item:
T@"CKKSWrappedAESSIVKey",C,V_wrappedkey
TQ,V_generationCount
TQ,V_encver
T@"NSNumber",&,V_plaintextPCSServiceIdentifier
T@"NSData",&,V_plaintextPCSPublicKey
T@"NSData",&,V_plaintextPCSPublicIdentity
allUUIDsInZones:error:
allUUIDs:error:
allParentKeyUUIDs:error:
all:error:
deleteAll:error:
initWithView:uuid:parentTLKUUID:keyData:
initWithWrappedKeyData:uuid:parentKeyUUID:keyclass:state:zoneID:encodedCKRecord:currentkey:
initWithViewName:tlk:
makeCKKSKey:error:
makeFakeCKKSClassKey:zoneiD:error:
tlkUUID
receiverPeerID
datafyPeerID:
senderPeerID
wrappedTLK
signature
initWithView:tlkUUID:receiverPeerID:senderPeerID:wrappedTLK:signature:
stringifyPeerID:
initForKey:senderPeerID:recieverPeerID:receiverEncPublicKeySPKI:curve:version:epoch:poisoned:wrappedKey:signature:zoneID:
initWithShare:zoneID:encodedCKRecord:
substringFromIndex:
initWithViewName:tlkShare:
makeTLKShareRecord:
dataWithData:
appendData:
subdataWithRange:
decryptItemToDictionary:keyCache:error:
addEntriesFromDictionary:
getKeychainBackedKey:
randomKeyWrappedByParent:error:
aessivkey
encryptDictionary:key:authenticatedData:error:
loadKeyForUUID:zoneID:error:
loadKeyWithUUID:zoneID:error:
unwrapAESKey:error:
decryptDictionary:key:authenticatedData:error:
decryptItemToDictionaryVersion1or2:keyCache:error:
padData:blockSize:additionalBlock:
encryptData:authenticatedData:error:
decryptData:authenticatedData:error:
removePaddingFromData:
encryptCKKSItem:dataDictionary:updatingCKKSItem:parentkey:keyCache:error:
decryptItemToDictionaryVersionNone:error:
views
zoneModifier
deleteZones:
databaseProvider
zoneModificationOperation
deletedRecordZoneIDs
userInfo
state:
setCkzonecreated:
setCkzonesubscribed:
dispatchSyncWithSQLTransaction:
zoneSubscriptionOperation
T@"CKKSOperationDependencies",&,V_deps
numberOfPeersInOctagon
sosEnabled
action
state
waitUntil
currentKeyForClass:zoneID:error:
ensureKeyLoaded:
keyForItem:zoneID:keyCache:error:
tryFromDatabase:state:zoneID:error:
initWithCKKSItem:action:state:waitUntil:accessGroup:
arrayByAddingObjectsFromArray:
stringFromDate:
claimCallbackForUUID:
intransactionMoveToState:viewState:error:
setState:
withItem:action:zoneID:keyCache:error:
fromDatabase:state:zoneID:error:
fetch:state:zoneID:error:
allInState:zoneID:error:
countsByStateInZone:error:
countByState:zone:error:
intransactionMarkAsError:viewState:error:
setItem:
setAction:
setAccessgroup:
setWaitUntil:
_item
_action
_state
_accessgroup
_waitUntil
T@"CKKSItem",&,V_item
T@"NSString",&
T@"NSString",&,V_action
T@"NSString",&,V_state
T@"NSString",&,V_accessgroup
T@"NSDate",&,V_waitUntil
fromDatabase:zoneID:error:
fetch:startingAtUUID:state:action:zoneID:error:
countNewEntriesByKeyInZone:error:
allIQEsHaveValidUnwrappingKeys:error:
setBackupWrappedMetadataKey:
setKeyClass:
setHasKeyClass:
hasKeyClass
hasBackupWrappedMetadataKey
keyClass
backupWrappedMetadataKey
_backupWrappedMetadataKey
_keyClass
Ti,N,V_keyClass
T@"NSData",&,N,V_backupWrappedMetadataKey
xpcControlEndpoint
_init
anonymousListener
endpoint
_endpoint
processIdentifier
rpcFindCorruptedItemsWithReply:
rpcDeleteCorruptedItemsWithReply:
findCorruptedItemsWithError:
deleteCorruptedItemsWithError:
notifyViewChangedScheduler
decryptCKKSItemToAttributes:keyCache:error:
setPendingClassAEntries:
setPendingClassAEntriesError:
setMissingKey:
errorItemsProcessed
setErrorItemsProcessed:
mapDictionaryToView:
handleMismatchedViewItems
_onqueueHandleMismatchedViewItem:secDbClass:attributes:intendedView:viewState:keyCache:
_onqueueUpdateIQE:withState:error:
requestPolicyCheck
_onqueueHandleIQEChange:attributes:class:viewState:sortedForThisView:keyCache:
CKRecordWithZoneID:
_onqueueHandleIQEDelete:class:viewState:
_onqueueHandleIQEChange:item:viewState:sortedForThisView:keyCache:
viewsToScan
setValue:forKey:
readyAndSyncingViews
loadAndProcessEntries:withActionFilter:
successfulItemsProcessed
fixMismatchedViewItems:
remoteItemPointers:error:
processNewCurrentItemPointers:viewState:
newOutgoingEntries
CKKSGroupWithName:
setCurrentOutgoingQueueOperationGroup:
missingKey
pendingClassAEntries
pendingClassAEntriesError
stateIfClassAItemsRemaining
activeManagedViews
logSuccessForEvent:zoneName:
logRecoverableError:forEvent:zoneName:withAttributes:
intransaction:processQueueEntries:
_onqueueGenerateNewUUIDPersistentRefOnSecItem:viewState:
setSuccessfulItemsProcessed:
setNewOutgoingEntries:
sendEvent:event:
initWithDependencies:intending:pendingClassAItemsRemainingState:errorState:handleMismatchedViewItems:
main
setHandleMismatchedViewItems:
setViewsToScan:
setStateIfClassAItemsRemaining:
_handleMismatchedViewItems
_newOutgoingEntries
_pendingClassAEntries
_missingKey
_successfulItemsProcessed
_errorItemsProcessed
_pendingClassAEntriesError
_viewsToScan
_stateIfClassAItemsRemaining
TB,V_newOutgoingEntries
TB,V_pendingClassAEntries
T@"NSError",&,V_pendingClassAEntriesError
TB,V_missingKey
T@"NSMutableSet",&,V_viewsToScan
T@"NSString<OctagonStateString>",&,V_stateIfClassAItemsRemaining
TB,V_handleMismatchedViewItems
TQ,V_successfulItemsProcessed
TQ,V_errorItemsProcessed
pendingCallbackUUIDs
weakObjectsHashTable
isSyncingEnabledForView:
ontransactionFetchEntries:error:
currentKeyUUID
recordChangeTag
_onqueueHandleFlag:
currentOutgoingQueueOperationGroup
setItemsProcessed:
intransactionCreateDeviceStateForView:accountTracker:lockStateTracker:error:
initWithRecordsToSave:recordIDsToDelete:
setAtomic:
linearDependencies:
configuration
setAutomaticallyRetryNetworkFailures:
setDiscretionaryNetworkBehavior:
setIsCloudKitSupportOperation:
setSavePolicy:
setGroup:
qualityOfService
group
setPerRecordCompletionBlock:
modifyRecordsCompleted:fullUpload:recordsToSave:recordIDsToDelete:recordIDsModified:modifyComplete:savedRecords:deletedRecordIDs:ckerror:
setModifyRecordsCompletionBlock:
ckdatabase
intransactionCKWriteFailed:attemptedRecordsChanged:
intransactionIsErrorBadEtagOnKeyPointersOnly:
_onqueueModifyAllRecords:as:viewState:
_onqueueIsErrorMissingSyncKey:
_onqueueModifyRecordAsError:recordError:viewState:
ckErrorState
isNetworkError:
initWithFlag:conditions:delayInSeconds:
isCKKSServerPluginError:
initWithDependencies:intending:ckErrorState:errorState:
itemsProcessed
setCkErrorState:
_itemsProcessed
_ckErrorState
T@"NSString<OctagonStateString>",&,V_ckErrorState
TQ,V_itemsProcessed
bottleID
bottleSalt
primaryiCloudAccountAltDSID:
setBottleSalt:
proceedWithPeerID:refetchWasNeeded:
proceedWithFilteredTLKShares:
entropy
recordRecoveredTLKMetrics:tlkRecoveryResults:uniqueTLKsRecoveredEvent:totalSharesRecoveredEvent:totalRecoverableTLKSharesEvent:totalRecoverableTLKsEvent:totalViewsWithSharesEvent:
setVoucherSig:
saveVoucher
setTLKSharesPairedWithVoucher:
initWithDependencies:intendedState:errorState:bottleID:entropy:bottleSalt:saveVoucher:
setBottleID:
setEntropy:
voucherSig
_saveVoucher
_bottleID
_entropy
_bottleSalt
_voucherSig
T@"NSString",&,N,V_bottleID
T@"NSData",&,N,V_entropy
T@"NSString",&,N,V_bottleSalt
T@"NSData",&,N,V_voucherSig
TB,R,V_saveVoucher
operationDependencies
initWithDependencies:
proceedAfterFetch
joinAfterRestore:
resetToOffering:
setOperationDependencies:
_operationDependencies
T@"OTOperationDependencies",&,V_operationDependencies
serializeAsProtobuf:
curve
initWithCurve:
initRequiringSecureCoding:
encodedData
initForReadingFromData:error:
finishDecoding
loadFromProtobuf:error:
appendBytes:length:
poisoned
initWithKeySpecifier:digestOperation:
dataForSigning:
sign:withKey:error:
initWithData:signature:
verify:withKey:error:
verifySignature:verifyingPeer:ckrecord:error:
setCurve:
setTlkUUID:
setSenderPeerID:
setPoisoned:
setWrappedTLK:
setSignature:
setReceiverPeerID:
receiverPublicEncryptionKeySPKI
setReceiverPublicEncryptionKeySPKI:
encodeInt64:forKey:
decodeInt64ForKey:
init:sender:receiver:curve:version:epoch:poisoned:zoneID:
wrap:publicKey:error:
signRecord:ckrecord:error:
unwrapUsing:error:
share:as:to:epoch:poisoned:error:
signatureVerifiesWithPeerSet:ckrecord:error:
recoverTLK:trustedPeers:ckrecord:error:
setZoneID:
_curve
_tlkUUID
_receiverPeerID
_receiverPublicEncryptionKeySPKI
_senderPeerID
_poisoned
_wrappedTLK
_signature
_zoneID
Tq,V_curve
TQ,V_version
T@"NSString",&,V_tlkUUID
T@"NSString",&,V_receiverPeerID
T@"NSData",&,V_receiverPublicEncryptionKeySPKI
T@"NSString",&,V_senderPeerID
Tq,V_epoch
Tq,V_poisoned
T@"NSData",&,V_wrappedTLK
T@"NSData",&,V_signature
T@"CKRecordZoneID",&,V_zoneID
processInfo
operatingSystemVersionString
hasValue
T@"NSString",&,N,V_key
T@"SECC2MPGenericEventMetricValue",&,N,V_value
setEncodedRateLimiter:
ckzone
ckzonecreated
ckzonesubscribed
moreRecordsInCloudKit
encodedChangeToken
lastFetchTime
isEqualToDate:
rateLimiter
lastFixup
lastLocalKeychainScanTime
tryFromDatabase:error:
initWithCKZone:zoneCreated:zoneSubscribed:changeToken:moreRecordsInCloudKit:lastFetch:lastScan:lastFixup:encodedRateLimiter:
setEncodedChangeToken:
setRateLimiter:
encodedRateLimiter
fromDatabase:error:
getChangeToken
setChangeToken:
setCkzone:
setMoreRecordsInCloudKit:
setLastFetchTime:
setLastLocalKeychainScanTime:
setLastFixup:
_ckzonecreated
_ckzonesubscribed
_moreRecordsInCloudKit
_ckzone
_encodedChangeToken
_lastFetchTime
_lastLocalKeychainScanTime
_lastFixup
_rateLimiter
T@"NSString",&,V_ckzone
TB,V_ckzonecreated
TB,V_ckzonesubscribed
changeToken
T@"CKServerChangeToken",&,GgetChangeToken,SsetChangeToken:
T@"NSData",&,V_encodedChangeToken
TB,V_moreRecordsInCloudKit
T@"NSDate",&,V_lastFetchTime
T@"NSDate",&,V_lastLocalKeychainScanTime
TQ,V_lastFixup
T@"CKKSRateLimiter",&,V_rateLimiter
T@"NSData",&
retryFlag
accountIsDemoAccount:
logForUpgrade
logRecoverableError:forEvent:withAttributes:
stateIfAuthenticationError
logSuccessForEventNamed:
afterAuthKitFetch:accountIsDemo:
fetchCurrentDeviceList:
stateIfListUpdates
initWithDependencies:intendedState:listUpdatesState:authenticationErrorState:errorState:retryFlag:
setLogForUpgrade:
setStateIfListUpdates:
setStateIfAuthenticationError:
setRetryFlag:
_logForUpgrade
_stateIfListUpdates
_stateIfAuthenticationError
_retryFlag
T@"NSString<OctagonStateString>",&,V_stateIfListUpdates
T@"NSString<OctagonStateString>",&,V_stateIfAuthenticationError
T@"NSString<OctagonFlagString>",&,V_retryFlag
TB,V_logForUpgrade
numberWithDouble:
setErrorValue:
hasStringValue
setDoubleValue:
setHasDoubleValue:
hasDoubleValue
setDateValue:
setHasDateValue:
hasDateValue
hasErrorValue
dateValue
errorValue
_dateValue
_doubleValue
_errorValue
T@"NSString",&,N,V_stringValue
Td,N,V_doubleValue
TQ,N,V_dateValue
T@"SECC2MPError",&,N,V_errorValue
setBagIdentity:
setKeybag:
hasBagIdentity
hasKeybag
bagIdentity
keybag
_bagIdentity
_keybag
T@"SecDbBackupBagIdentity",&,N,V_bagIdentity
T@"NSData",&,N,V_keybag
currentSOSSelf:
getEgoPeerID:
currentSelf
isEqualToData:
updateOctagonKeySetWithAccount:error:
lastJudgment
distantPast
groups
getPropertyValue:object:
consumeTokenFromBucket:config:name:at:
setLastJudgment:
assetType
setGroups:
methodForSelector:
initWithConfig:
setAssetType:
_assetType
_groups
_lastJudgment
T@"NSDictionary",&,N,V_config
T@"NSArray",&,N,V_groups
T@"NSDate",&,N,V_lastJudgment
T@"NSDate",&,N,V_overloadUntil
T@"NSString",&,N,V_assetType
TQ,R,N
initWithZoneID:
setViewKeyHierarchyState:
dispatchSyncWithReadOnlySQLTransaction:
createZones:
savedRecordZones
armReadyNotification
savedSubscriptions
subscriptionID
setSosEnabled:
initWithSecKey:
sosCKKSViewList
initWithSOSPeerID:encryptionKey:signingKey:viewList:
initWithSOSPeerID:encryptionPublicKey:signingPublicKey:viewList:
_secKey
initWithPeerProviderID:essential:selfPeers:selfPeersError:trustedPeers:trustedPeersError:
performOnQuietAccountQueue:
preloadOctagonKeySetOnAccount:error:
updateCKKS4AllStatus:error:
safariViewSyncingEnabled:
TB,VsosEnabled
encodeSubjectPublicKeyInfo
peerPublicSigningKeySPKIs:
peerPublicSigningKeySPKIsForCircle:error:
proceedWithKeys:pendingTLKShares:
persistOctagonJoinAttempt:error:
isCuttlefishError:
ckksConflictState
receiveTLKUploadRecords:
initWithDependencies:intendedState:ckksConflictState:errorState:
setCkksConflictState:
_ckksConflictState
T@"NSString<OctagonStateString>",&,V_ckksConflictState
cloudkitWriteFailures
newCloudKitRecordsWritten
setSetResultStateOperation:
viewKeyHierarchyState
currentTrustStates
attemptToHealView:currentTrustStates:
setResultStateOperation
loadForZone:
currentTLKPointer
currentClassAPointer
currentClassCPointer
classA
classC
allowFullRefetchResult
initForClass:currentKeyUUID:zoneID:encodedCKRecord:
setCurrentTLKPointer:
setCurrentClassAPointer:
setCurrentClassCPointer:
allKeys:error:
topKeyInAnyState:
validTLK:
tlkMaterialPresentOrRecoverableViaTLKShare:error:
setTlk:
setCurrentKeyUUID:
setClassA:
setClassC:
randomKeyWrappedByParent:keyclass:error:
saveKeyMaterialToKeychain:
createMissingKeyShares:trustStates:databaseProvider:error:
setLongLived:
ckoperationGroup
saveToDatabaseAsOnlyCurrentKeyForClassAndState:
setNewCloudKitRecordsWritten:
logUnrecoverableError:forEvent:zoneName:withAttributes:
setCloudkitWriteFailures:
ckOperations
ensureKeyPresent:viewState:
loadKeyMaterialFromKeychain:
unwrapViaKeyHierarchy:
initWithDependencies:allowFullRefetchResult:intending:errorState:
setAllowFullRefetchResult:
setCkOperations:
_allowFullRefetchResult
_newCloudKitRecordsWritten
_cloudkitWriteFailures
_setResultStateOperation
_ckOperations
TB,V_allowFullRefetchResult
TB,V_newCloudKitRecordsWritten
TB,V_cloudkitWriteFailures
T@"CKKSResultOperation",&,V_setResultStateOperation
T@"NSHashTable",&,V_ckOperations
identifier
currentItemUUID
setIdentifier:
setCurrentItemUUID:
initForIdentifier:currentItemUUID:state:zoneID:encodedCKRecord:
allInZone:error:
_identifier
_currentItemUUID
T@"NSString<SecCKKSProcessedState>",&,V_state
T@"NSString",&,V_identifier
T@"NSString",&,V_currentItemUUID
viewsOverride
limitOperationToPriorityViewsSet
allPriorityViews
allViews
ckksManagedView
isSubsetOfSet:
setViewsOverride:
setLimitOperationToPriorityViewsSet:
priorityViews
setAllPriorityViews:
setAllViews:
peerProviders
currentSelfPeersError
currentTrustedPeersError
keysetProviderOperations
provideKeySets:
intransactionRecordChanged:resync:flagHandler:error:
intransactionCKRecordChanged:resync:
intransactionCKRecordDeleted:recordType:resync:
currentFetchReasons
initWithViewStates:zoneModifier:ckdatabase:cloudKitClassDependencies:ckoperationGroup:flagHandler:accountStateTracker:lockStateTracker:reachabilityTracker:peerProviders:databaseProvider:savedTLKNotifier:
allCKKSManagedViews
allExternalManagedViews
setStateForActiveZones:
setStateForActiveCKKSManagedViews:
setStateForActiveExternallyManagedViews:
setStateForAllViews:
operateOnSelectViews:
operateOnAllViews
limitOperationToPriorityViews
viewsInState:
viewStatesByNames:
viewStateForName:
applyNewSyncingPolicy:viewStates:
considerSelfTrusted:error:
viewNameForItem:
setCkoperationGroup:
setCkdatabase:
cloudKitClassDependencies
setCloudKitClassDependencies:
setPeerProviders:
setZoneModifier:
savedTLKNotifier
setRequestPolicyCheck:
setKeysetProviderOperations:
_limitOperationToPriorityViewsSet
_allPriorityViews
_allViews
_currentFetchReasons
_ckoperationGroup
_ckdatabase
_cloudKitClassDependencies
_currentOutgoingQueueOperationGroup
_flagHandler
_peerProviders
_databaseProvider
_zoneModifier
_savedTLKNotifier
_requestPolicyCheck
_keysetProviderOperations
_viewsOverride
T@"NSSet",&,V_viewsOverride
T@"NSSet",&,V_allViews
T@"NSSet",&,V_allPriorityViews
T@"TPSyncingPolicy",&,V_syncingPolicy
TB,V_limitOperationToPriorityViewsSet
T@"NSSet",R
T@"NSMutableSet",R,V_currentFetchReasons
T@"CKOperationGroup",&,V_ckoperationGroup
T@"CKDatabase",&,V_ckdatabase
T@"CKKSCloudKitClassDependencies",&,V_cloudKitClassDependencies
T@"CKOperationGroup",&,V_currentOutgoingQueueOperationGroup
T@"<OctagonStateFlagHandler>",R,V_flagHandler
T@"CKKSAccountStateTracker",R,V_accountStateTracker
T@"CKKSLockStateTracker",R,V_lockStateTracker
T@"CKKSReachabilityTracker",R,V_reachabilityTracker
T@"NSArray",&,V_peerProviders
T@"<CKKSDatabaseProviderProtocol>",R,V_databaseProvider
T@"CKKSZoneModifier",&,V_zoneModifier
T@"CKKSNearFutureScheduler",R,V_savedTLKNotifier
T@"CKKSNearFutureScheduler",&,V_requestPolicyCheck
T@"NSHashTable",&,V_keysetProviderOperations
holdLocalSynchronizeOperation
restartCount
addSuccessDependency:
initWithOperationDependencies:
initWithDependencies:intending:errorState:ckoperationGroup:
recordsFound
setRestartCount:
addExecutionBlock:
initWithCKKSKeychainView:
_restartCount
Ti,V_restartCount
T@"CKKSKeychainView",W,V_ckks
parsedSecureElementIdentity
setEnabled:
setTag1:
machineID
policyOverride
setPermanentInfo:
setPermanentInfoSig:
setStableInfo:
setStableInfoSig:
initWithDependencies:intendedState:errorState:deviceInfo:policyOverride:epoch:
permanentInfo
permanentInfoSig
stableInfo
stableInfoSig
setPolicyOverride:
_permanentInfo
_permanentInfoSig
_stableInfo
_stableInfoSig
_policyOverride
TQ,N,V_epoch
T@"NSData",&,V_permanentInfo
T@"NSData",&,V_permanentInfoSig
T@"NSData",&,V_stableInfo
T@"NSData",&,V_stableInfoSig
T@"TPPolicyVersion",&,V_policyOverride
deleteFromKeychainForContainer:contextID:error:
saveToKeychainForContainer:contextID:error:
peerIdentifier
setPeerIdentifier:
peerData
setPeerData:
getTLKSharesPairedWithVoucher
setOctagonSecureElementIdentity:
loadFromKeychainForContainer:contextID:error:
setWrappedBagSecret:
setWrappedKCSKSecret:
setWrappedRecoveryKey:
setRecoveryType:
setHasRecoveryType:
hasRecoveryType
hasWrappedBagSecret
hasWrappedKCSKSecret
hasWrappedRecoveryKey
recoveryType
wrappedBagSecret
wrappedKCSKSecret
wrappedRecoveryKey
_recoveryType
_wrappedBagSecret
_wrappedKCSKSecret
_wrappedRecoveryKey
Ti,N,V_recoveryType
T@"NSData",&,N,V_wrappedBagSecret
T@"NSData",&,N,V_wrappedKCSKSecret
T@"NSData",&,N,V_wrappedRecoveryKey
forKeyClass:withKeyUUID:zoneID:error:
intransactionRecordDeleted:error:
_currentKeyUUID
T@"NSString<SecCKKSKeyClass>",&,V_keyclass
T@"NSString",&,V_currentKeyUUID
setProposed:
proposed
initWithTLK:classA:classC:newUpload:
_proposed
_tlk
_classA
_classC
_currentTLKPointer
_currentClassAPointer
_currentClassCPointer
T@"CKKSKey",&,V_tlk
T@"CKKSKey",&,V_classA
T@"CKKSKey",&,V_classC
T@"CKKSCurrentKeyPointer",&,V_currentTLKPointer
T@"CKKSCurrentKeyPointer",&,V_currentClassAPointer
T@"CKKSCurrentKeyPointer",&,V_currentClassCPointer
TB,V_proposed
setCloudkitInfo:
setServerInfo:
setNetworkEvent:
setGenericEvent:
metricType
setMetricType:
setHasMetricType:
hasMetricType
metricTypeAsString:
StringAsMetricType:
hasDeviceInfo
hasCloudkitInfo
hasServerInfo
setTriggers:
setHasTriggers:
hasTriggers
setReportFrequency:
setHasReportFrequency:
hasReportFrequency
setReportFrequencyBase:
setHasReportFrequencyBase:
hasReportFrequencyBase
hasNetworkEvent
hasGenericEvent
cloudkitInfo
serverInfo
triggers
reportFrequency
reportFrequencyBase
networkEvent
genericEvent
_reportFrequency
_reportFrequencyBase
_triggers
_cloudkitInfo
_genericEvent
_metricType
_networkEvent
_serverInfo
Ti,N,V_metricType
T@"SECC2MPDeviceInfo",&,N,V_deviceInfo
T@"SECC2MPCloudKitInfo",&,N,V_cloudkitInfo
T@"SECC2MPServerInfo",&,N,V_serverInfo
TQ,N,V_triggers
TQ,N,V_reportFrequency
TQ,N,V_reportFrequencyBase
T@"SECC2MPNetworkEvent",&,N,V_networkEvent
T@"SECC2MPGenericEvent",&,N,V_genericEvent
performanceCounters:
rpcResetLocal:reply:
rpcResetCloudKit:reason:reply:
rpcResync:reply:
rpcResyncLocal:reply:
rpcStatus:fast:waitForNonTransientState:reply:
rpcFetchAndProcessChanges:classA:onlyIfNoRecentFetch:reply:
rpcPushOutgoingChanges:reply:
rpcGetCKDeviceIDWithReply:
rpcCKMetric:attributes:reply:
proposeTLKForSEView:proposedTLK:wrappedOldTLK:tlkShares:reply:
fetchSEViewKeyHierarchy:forceFetch:reply:
modifyTLKSharesForSEView:adding:deleting:reply:
deleteSEView:reply:
toggleHavoc:
pcsMirrorKeysForServices:reply:
rateLimit
modificationDate
setQualityOfService:
initWithOperationDependencies:rateLimit:ckoperationGroup:
setRateLimit:
_rateLimit
_group
T@"CKOperationGroup",&,V_group
TB,V_rateLimit
setCiphertext:
setWrappedKey:
setTamperCheck:
wrappedKey
tamperCheck
_tamperCheck
_wrappedKey
T@"NSData",&,N,V_ciphertext
T@"NSData",&,N,V_wrappedKey
T@"NSString",&,N,V_tamperCheck
initWithName:initialDelay:continuingDelay:keepProcessAlive:dependencyDescriptionCode:block:
makeOperationDependency
setInitialDelay:
initialDelay
setCurrentDelay:
setBackoff:
setMaximumDelay:
operationDependencyDescriptionCode
setDescriptionErrorCode:
nextFireTime
setDateFormat:
liveRequest
predictedNextFireTime
liveRequestReceived
_onqueueTrigger:maximumDelay:
setLiveRequest:
operationDependency
setOperationDependency:
futureBlock
setLiveRequestReceived:
currentDelay
maximumDelay
backoff
timer
dateWithTimeIntervalSinceNow:
setPredictedNextFireTime:
keepProcessAlive
setTimer:
_onqueueTimerTick
initWithName:delay:keepProcessAlive:dependencyDescriptionCode:block:
changeDelays:continuingDelay:
waitUntil:
triggerAt:
setFutureBlock:
setOperationDependencyDescriptionCode:
setKeepProcessAlive:
_liveRequest
_keepProcessAlive
_futureBlock
_operationDependency
_liveRequestReceived
_initialDelay
_currentDelay
_maximumDelay
_backoff
_operationDependencyDescriptionCode
_predictedNextFireTime
T@"NSString",&,V_name
TQ,V_initialDelay
TQ,V_currentDelay
TQ,V_maximumDelay
Td,V_backoff
Tq,V_operationDependencyDescriptionCode
T@"CKKSResultOperation",&,V_operationDependency
T@"NSDate",&,V_predictedNextFireTime
TB,V_liveRequest
T@"NSObject<OS_dispatch_source>",&,V_timer
TB,V_keepProcessAlive
T@"NSDate",R
T@?,C,V_futureBlock
T@"CKKSCondition",&,V_liveRequestReceived
wasCurrent
initWithCKKSItem:
numberFromString:
setWasCurrent:
allWithUUID:error:
countsByParentKey:error:
counts:error:
pcsMirrorKeysForService:matchingKeys:error:
_wasCurrent
TQ,V_wasCurrent
flagConditions
contentsAsString
flags
_onqueueSetFlag:
allowableFlags
dumpFlags
conditionForFlag:
setFlag:
initWithQueue:flags:
setFlagConditions:
setFlags:
_flagConditions
_flags
_allowableFlags
T@"NSMutableSet",&,V_flags
T@"NSSet",R,V_allowableFlags
T@"NSMutableDictionary",&,V_flagConditions
proceedWithKeys:salt:
recoveryKey
initWithDependencies:recoveryKey:
salt
setSalt:
setRecoveryKey:
_salt
_recoveryKey
T@"NSString",&,N,V_salt
T@"NSString",&,N,V_recoveryKey
initWithUUIDString:
initWithUUID:recoveryString:error:
setCrk:
initWithUUID:dependencies:
_crk
T@"NSUUID",&,V_uuid
T@"OTCustodianRecoveryKey",&,V_crk
initWithUUID:error:
setIk:
recoveryKeyData
T@"OTInheritanceKey",&,V_ik
proceedWithKeys:
initWithIK:dependencies:
setExpectedSendSize:
setExpectedReceiveSize:
ckksIsCKErrorRecordChangedError
isCKServerInternalError
CKPropertiesDescription
setByAddingObject:
allSelves
setCurrentSelf:
setAllSelves:
_currentSelf
_allSelves
T@"<CKKSSelfPeer>",&,V_currentSelf
T@"NSSet",&,V_allSelves
shouldHaveView:
_publicEncryptionKey
_publicSigningKey
_viewList
T@"_SFECPublicKey",R,V_publicEncryptionKey
T@"_SFECPublicKey",R,V_publicSigningKey
T@"NSSet",R,V_viewList
spid
setSpid:
setViewList:
_spid
T@"NSString",&,V_spid
T@"NSSet",&,V_viewList
setEncryptionKey:
setSigningKey:
_encryptionKey
_signingKey
T@"_SFECKeyPair",&,V_encryptionKey
T@"_SFECKeyPair",&,V_signingKey
addMetric:
metricsCount
clearMetrics
metricAtIndex:
setHasType:
hasType
typeAsString:
StringAsType:
hasName
setTimestampStart:
setHasTimestampStart:
hasTimestampStart
setTimestampEnd:
setHasTimestampEnd:
hasTimestampEnd
timestampStart
timestampEnd
metrics
setMetrics:
_timestampEnd
_timestampStart
_metrics
_type
Ti,N,V_type
T@"NSString",&,N,V_name
TQ,N,V_timestampStart
TQ,N,V_timestampEnd
T@"NSMutableArray",&,N,V_metrics
setPublicKey:
setAksRefKey:
setAksWrappedKey:
setBackupWrappedKey:
hasPublicKey
hasAksRefKey
hasAksWrappedKey
hasBackupWrappedKey
aksRefKey
aksWrappedKey
backupWrappedKey
_aksRefKey
_aksWrappedKey
_backupWrappedKey
_publicKey
T@"NSData",&,N,V_publicKey
T@"NSData",&,N,V_aksRefKey
T@"NSData",&,N,V_aksWrappedKey
T@"NSData",&,N,V_backupWrappedKey
setDefaultRetryIntervalForTests:
registerDefaults:
receiverForNamedDelegatePort:apsConnectionClass:
registerForEnvironment:
handleKeychainEventDbConnection:source:added:deleted:
registerSyncStatusCallback:callback:
setLastSynchronizeOperation:
fetchRecordZoneChangesOperationClass
initWithContainer:fetchClass:clientMap:fetchReasons:apnsPushes:forceResync:ckoperationGroup:
rpcProcessIncomingQueue:errorOnClassAFailure:
dispatchSyncWithConnection:readWriteTxion:block:
insideSQLTransaction
initWithQueue:
setKeysets:
startDependency
setStartDependency:
initWithIntendedZoneIDs:
_keysets
_intendedZoneIDs
_startDependency
T@"NSDictionary",&,V_keysets
T@"NSOperation",&,V_startDependency
T@"NSSet",R,V_intendedZoneIDs
setCkRecordType:
initWithRecordType:recordID:
_encodedCKRecord
_storedCKRecord
_ckRecordType
T@"NSString",&,V_ckRecordType
T@"NSData",C,V_encodedCKRecord
T@"CKRecord",C,V_storedCKRecord
enforceRateLimiting
setLastEscrowAttemptTime:
uploadRetries
setUploadRetries:
checkFatalError:
setNumberOfRecordsUploaded:
setUploadCompleted:
cdpUploadPrerecord:secretType:reply:
initWithContext:
attemptToEscrowPreRecord:preRecordUUID:secretType:completion:
setEnforceRateLimiting:
_enforceRateLimiting
_numberOfRecordsUploaded
TB,V_enforceRateLimiting
TQ,V_numberOfRecordsUploaded
keyViewMapping
view
hasMatchingRule
matchingRule
andsCount
orsCount
hasNot
hasExists
hasMatch
match
fieldName
regex
viewsWithNewCKKSEntries
recordsAdded
setRecordsAdded:
onboardItemToCKKS:viewState:keyCache:error:
executeQuery:readWrite:error:block:
setMissingLocalItemsFound:
logMetric:withName:
queryPredicatesForViewMapping:
processedItems
setProcessedItems:
isItemKeyForKeychainView:
areEquivalent:ckksItem:keyCache:
setRecordsFound:
minusSet:
onboardItemsInView:uuids:itemClass:databaseProvider:
fixUUIDlessItemsInZone:primaryKeys:databaseProvider:
retriggerMissingMirrorEntries:databaseProvider:
launch
addEvent:
missingLocalItemsFound
setViewsWithNewCKKSEntries:
_recordsFound
_recordsAdded
_missingLocalItemsFound
_processedItems
_viewsWithNewCKKSEntries
TQ,V_processedItems
T@"NSMutableSet",&,V_viewsWithNewCKKSEntries
TQ,V_recordsFound
TQ,V_recordsAdded
TQ,V_missingLocalItemsFound
setVoucherData:
voucherData
proceedWithPendingTLKShares:
_voucherData
T@"NSData",&,V_voucherData
T@"NSData",&,V_voucherSig
onqueuePerformLocalReset
participateInFetch
setParticipateInFetch:
resync
setResync:
_participateInFetch
_resync
_changeToken
TB,V_participateInFetch
TB,V_resync
T@"CKServerChangeToken",&,V_changeToken
initWithRecordID:recordType:
setRecordID:
setRecordType:
_recordID
_recordType
T@"CKRecordID",&,V_recordID
T@"NSString",&,V_recordType
clientMap
participateInFetch:
fetchedZoneIDs
forceResync
changeTokens
setPreviousServerChangeToken:
resyncingZones
allClientOptions
setAllClientOptions:
setFetchedZoneIDs:
queryClientsForChangeTokens
setClientMap:
performFetch
zoneIsReadyForFetching:
alloc
initWithRecordZoneIDs:configurationsByRecordZoneID:
setFetchRecordZoneChangesOperation:
fetchRecordZoneChangesOperation
setFetchAllChanges:
modifications
deletions
fetchedItems
setFetchedItems:
setRecordChangedBlock:
setRecordWithIDWasDeletedBlock:
setRecordZoneChangeTokensUpdatedBlock:
moreComing
setMoreComing:
sendChangesToClient:moreComing:
setRecordZoneFetchCompletionBlock:
totalModifications
setTotalModifications:
totalDeletions
setTotalDeletions:
isNetworkFailureError:
apnsPushes
ckksPushTracingEnabled
initWithEventName:
setIsPushTriggerFired:
ckksPushTracingUUID
ckksPushReceivedDate
associateWithCompletedOperation:
submitEventMetric:
managerObject
submitEvent:
fetchCompletedOperation
setFetchRecordZoneChangesCompletionBlock:
changesFetched:deletedRecordIDs:zoneID:newChangeToken:moreComing:resync:
fetchReasons
setFetchReasons:
setApnsPushes:
setModifications:
setDeletions:
setChangeTokens:
setForceResync:
setResyncingZones:
setFetchCompletedOperation:
_forceResync
_moreComing
_fetchRecordZoneChangesOperationClass
_fetchedZoneIDs
_fetchReasons
_apnsPushes
_modifications
_deletions
_changeTokens
_fetchRecordZoneChangesOperation
_allClientOptions
_clientMap
_fetchedItems
_totalModifications
_totalDeletions
_resyncingZones
_fetchCompletedOperation
T@"CKDatabaseOperation<CKKSFetchRecordZoneChangesOperation>",&,V_fetchRecordZoneChangesOperation
T@"NSMutableDictionary",&,V_allClientOptions
T@"NSDictionary",&,V_clientMap
TQ,V_fetchedItems
TB,V_forceResync
TB,V_moreComing
TQ,V_totalModifications
TQ,V_totalDeletions
T@"NSMutableSet",&,V_resyncingZones
T@"CKKSResultOperation",&,V_fetchCompletedOperation
T#,R,V_fetchRecordZoneChangesOperationClass
T@"CKContainer",R,V_container
T@"NSMutableArray",&,V_fetchedZoneIDs
T@"NSSet",&,V_fetchReasons
T@"NSSet",&,V_apnsPushes
T@"NSMutableDictionary",&,V_modifications
T@"NSMutableDictionary",&,V_deletions
T@"NSMutableDictionary",&,V_changeTokens
followStates
initAsSuccess
pathFromDictionary:
initWithPath:
success
nextStep:
successState
setSuccessState:
_successState
_followStates
TB,V_successState
T@"NSDictionary",R,V_followStates
initialState
pathStep
initWithState:pathStep:
asPathStep
setInitialState:
setPathStep:
_initialState
_pathStep
T@"NSString<OctagonStateString>",&,V_initialState
T@"OctagonStateTransitionPathStep",&,V_pathStep
transitionOperation
_onqueuePerformTimeoutWithUnderlyingError:
remainingPath
result
completed
active
onqueueProcessTransition:
intendedPath
setActive:
timeoutCanOccur
setTimeoutCanOccur:
onqueueStartFinishOperation
setRemainingPath:
logUnrecoverableError:forEvent:withAttributes:
setCompleted:
onqueueHandleTransition:
T@"CKKSResultOperation",R
initNamed:serialQueue:path:initialRequest:
initialRequest
setInitialRequest:
initialTimeoutListenerOp
setInitialTimeoutListenerOp:
_active
_completed
_timeoutCanOccur
_result
_intendedPath
_remainingPath
_initialRequest
_initialTimeoutListenerOp
TB,V_active
TB,V_completed
T@"OctagonStateTransitionPathStep",&,V_remainingPath
T@"OctagonStateTransitionRequest",&,V_initialRequest
T@"CKKSResultOperation",&,V_initialTimeoutListenerOp
TB,V_timeoutCanOccur
T@"NSString",R,V_name
T@"CKKSResultOperation",R,V_result
T@"OctagonStateTransitionPath",R,V_intendedPath
states
onqueueEnterState:
_onqueuePerformTimeoutWithUnderlyingError
initNamed:serialQueue:states:
_states
T@"NSSet",R,V_states
proceedWithKeys:incompleteKeySets:
resetViews:
rpcResetCloudKit:reply:
retryInterval
initWithFlag:delayInSeconds:
initWithSecureElementIdentity:
forceRefetch
peerUnknownState
setCurrentSyncingPolicy:policyIsFresh:
identityIsPreapproved
memberChanges
octagonAdapter
unknownMachineIDsPresent
initWithDependencies:intendedState:peerUnknownState:errorState:forceRefetch:retryFlag:
setForceRefetch:
setPeerUnknownState:
_forceRefetch
_peerUnknownState
TB,V_forceRefetch
T@"NSString<OctagonStateString>",&,V_peerUnknownState
isRetryable
sosNotPresentState
initWithDependencies:intendedState:sosNotPresentState:errorState:
setSosNotPresentState:
_sosNotPresentState
T@"NSString<OctagonStateString>",&,V_sosNotPresentState
cStringUsingEncoding:
proceedWithRecoveryKeyID:
initWithDependencies:intendedState:errorState:recoveryKey:saveVoucher:
T@"NSString",&,V_salt
T@"NSString",&,V_recoveryKey
baguuid
setBaguuid:
_baguuid
T@"NSData",&,N,V_baguuid
currentBackupBagUUID
wrapItemKey:forKeyclass:error:
wrapMetadataKey:forKeyclass:error:
registerCuttlefishReceiver:forContainerName:
initWithRocketName:
initWithQueue:container:context:
registerNotification:
AllOctagonFlags
initWithFollowupController:
launchSequence
notifyTrustChanged:
syncUserControllableViews
setCloudKitAccountInfo:
_onqueuePokeStateMachine
cloudKitAccountStateKnown
OctagonInAccountStates
setFirstLaunch:
recheck
init:sourceStates:serialQueue:timeout:transitionOp:
handleExternalRequest:
endTrustedOperation
named:intending:errorState:withBlockTakingSelf:
doWatchedStateMachineRPC:sourceStates:path:reply:
establishStatePathDictionary
isPaused
OctagonNotInCliqueStates
intersectsSet:
initWithDependencies:intendedState:errorState:peerIDs:
deviceAdapter
initForContainerName:contextID:epoch:machineID:modelID:deviceName:serialNumber:osVersion:
initForContainer:contextID:stateHolder:flagHandler:sosAdapter:octagonAdapter:authKitAdapter:deviceInfoAdapter:ckksAccountSync:lockStateTracker:cuttlefishXPCWrapper:escrowRequestClass:notifierClass:
setPairingUUID:
localReset:
initializingOperation
cloudKitAccountInfo
cloudKitAccountNewlyAvailableOperation:
checkForAccountFixupsOperation:
initWithDependencies:stateIfHSA2:stateIfNotHSA2:stateIfNoAccount:errorState:
evaluateSecdOctagonTrust
evaluateTPHOctagonTrust
cuttlefishTrustEvaluation
postRepairCFUAndBecomeUntrusted
becomeUntrustedOperation:
becomeReadyOperation
clearContextState
custodianRecoveryKey
prepareInformation
initWithDependencies:intendedState:ckksConflictState:errorState:deviceInfo:policyOverride:
initWithDependencies:intendedState:errorState:custodianRecoveryKey:saveVoucher:
inheritanceKey
initWithDependencies:intendedState:errorState:ik:deviceInfo:policyOverride:isInheritedAccount:epoch:
init:contextID:reason:intendedState:dependencies:errorState:cuttlefishXPCWrapper:
_onqueueHandlePendingFlagLater:
initWithDependencies:intendedState:ckksConflictState:peerMissingState:errorState:
becomeInheritedOperation
beginCloudKitOperation
repairAccountIfTrustedByTPHWithIntendedState:
checkTrustStatusAndPostRepairCFUIfNecessary:
postRepairCFU:
shouldPostConfirmPasscodeCFU:
postConfirmPasscodeCFU:
leaveTrust:
processMoveRequest:error:
containerWithIdentifier:
apsReceiver
serverPreferredPushEnvironmentWithCompletionHandler:
initialBecomeUntrustedPosted
setInitialBecomeUntrustedPosted:
setOctagonAdapter:
setSuggestTLKUploadNotifier:
setRequestPolicyCheckNotifier:
suggestTLKUploadNotifier
requestPolicyCheckNotifier
beginTrustedOperation:suggestTLKUpload:requestPolicyCheck:
upgradeUserControllableViewsRateLimiter
currentMemoizedTrustState
waitForState:wait:
extractStringKey:fromDictionary:
notifyContainerChangeWithUserInfo:
handleHealthRequest
handleTTRRequest:
apsRateLimiter
setApsRateLimiter:
shouldPopDialog
getLimit
popDialogWithCount:limit:
initWithTimeIntervalSince1970:
sosConsistencyRateLimiter
setSosConsistencyRateLimiter:
timeoutWaitForCKAccount
checkForCKAccount:
errorIfNoCKAccount:
timeout
joinStatePathDictionary
setCustodianRecoveryKey:
recoveryString
initWithUUID:encryptionKey:signingKey:recoveryString:salt:kind:
initWithDependencies:intendedState:errorState:tphcrk:
setInheritanceKey:
hashWithAlgo:ofData:
ckksPeerStatus:
dumpPendingFlags
eventsByTime
sosTrustedPeersStatus
sosSelvesStatus
sysdiagnoseStatus
registeredPushEnvironments
cleanseErrorForXPC:
rpcFetchPeerAttributes:includeSelf:reply:
useCachedAccountStatus
rpcTrustStatusCachedStatus:reply:
egoStatus
egoPeerID
isExcluded
isLocked
popTooManyPeersDialogWithEgoPeerStatus:accountMeta:
persistNewTrustState:error:
setTrustedPeerSecureElementIdentities:
setLocalPeerIdentity:
trustedPeerSecureElementIdentities
localPeerIdentity
setPendingLocalPeerIdentity:
walrus
persistAccountSettings:error:
rpcWaitForPriorityViewProcessing
rpcFetchPeerIDByBottleID:
escrowInformationMetadata
bottleId
viewsForPeerID:error:
octagonPeerIDGivenBottleID:reply:
tlkRecoverabilityInOctagon:reply:
postFollowUp:error:
intendedFederation
moveToFederationAllowed:altDSID:error:
OctagonHealthSourceStates
accountStateUpdated:from:
machinesAdded:altDSID:
machinesRemoved:altDSID:
incompleteNotificationOfMachineIDListChange
resetCKKS:
resetOctagonStateMachine
currentMemoizedAccountState
checkAllStateCleared
setFollowupHandler:
setAccountMetadataStore:
setPendingEscrowCacheWarmup:
setLaunchSequence:
setCloudKitAccountStateKnown:
setUpgradeUserControllableViewsRateLimiter:
fixupRetryScheduler
setFixupRetryScheduler:
setApsReceiver:
_resetReason
_initialBecomeUntrustedPosted
_followupHandler
_pairingUUID
_accountMetadataStore
_apsRateLimiter
_sosConsistencyRateLimiter
_deviceAdapter
_pendingEscrowCacheWarmup
_launchSequence
_cloudKitAccountInfo
_cloudKitAccountStateKnown
_suggestTLKUploadNotifier
_requestPolicyCheckNotifier
_upgradeUserControllableViewsRateLimiter
_fixupRetryScheduler
_custodianRecoveryKey
_inheritanceKey
_apsReceiver
_octagonAdapter
T@"CKKSLaunchSequence",&,V_launchSequence
T@"OTCuttlefishAccountStateHolder",&,N,V_accountMetadataStore
T@"OTFollowup",&,V_followupHandler
T@"CKAccountInfo",&,V_cloudKitAccountInfo
T@"CKKSCondition",&,V_cloudKitAccountStateKnown
T@"CKKSNearFutureScheduler",&,V_suggestTLKUploadNotifier
T@"CKKSNearFutureScheduler",&,V_requestPolicyCheckNotifier
T@"CKKSNearFutureScheduler",&,V_upgradeUserControllableViewsRateLimiter
T@"CKKSNearFutureScheduler",&,V_fixupRetryScheduler
T@"OTCustodianRecoveryKey",&,N,V_custodianRecoveryKey
T@"OTInheritanceKey",&,N,V_inheritanceKey
T@"OTAccountSettingsX",&,N,V_settings
T@"OctagonAPSReceiver",&,V_apsReceiver
T@"<CKKSPeerProvider>",&,V_octagonAdapter
TB,N,V_initialBecomeUntrustedPosted
T@"NSString",&,N,V_pairingUUID
T@"CKKSLockStateTracker",R,N,V_lockStateTracker
T@"OctagonStateMachine",R,V_stateMachine
T@"CKKSNearFutureScheduler",&,N,V_apsRateLimiter
T@"CKKSNearFutureScheduler",&,N,V_sosConsistencyRateLimiter
T@"<CKKSCloudKitAccountStateTrackingProvider><CKKSOctagonStatusMemoizer>",R,V_accountStateTracker
T@"<OTDeviceInformationAdapter>",R,V_deviceAdapter
T@"CKKSCondition",&,V_pendingEscrowCacheWarmup
initWithFlag:conditions:after:
initWithFlag:conditions:scheduler:
fireTime
flag
afterOperation
conditions
initWithFlag:after:
initWithFlag:scheduler:
setAfterOperation:
scheduler
setScheduler:
_flag
_fireTime
_conditions
_afterOperation
_scheduler
T@"CKKSNearFutureScheduler",&,V_scheduler
T@"NSString<OctagonFlagString>",R,V_flag
T@"NSDate",R,V_fireTime
TQ,R,V_conditions
T@"NSOperation",&,V_afterOperation
T@"NSString",&,N,V_value
tphcrk
setTphcrk:
_tphcrk
T@"TrustedPeersHelperCustodianRecoveryKey",&,V_tphcrk
initWithEngine:peer:localManifest:proposedManifest:confirmedManifest:andMessage:
engine
peer
confirmed
local
message
setCallbackBlock:
callCallback:
setEngine:
setPeer:
setLocal:
setConfirmed:
setMessage:
setCoder:
setCallback:
callbackBlock
coder
_callbackBlock
_engine
_peer
_coder
_local
_confirmed
_message
T@?,C,N,V_callbackBlock
T^{__OpaqueSOSEngine={__CFRuntimeBase=QAQ}^{SOSDataSource}^{__CFString}^{__OpaqueSOSManifest}^{__CFData}^{__CFDictionary}^{__CFDictionary}^{__CFDictionary}^{__CFDictionary}^{__CFArray}^{__CFDate}^{__CFDictionary}BB@@@@?B},N,V_engine
T^{__OpaqueSOSPeer=},N,V_peer
T^{__OpaqueSOSCoder=},N,V_coder
T^{__OpaqueSOSManifest=},N,V_local
T^{__OpaqueSOSManifest=},N,V_proposed
T^{__OpaqueSOSManifest=},N,V_confirmed
T^{__OpaqueSOSMessage=},N,V_message
keyWrappedBySelf:uuid:keyclass:zoneID:error:
wrappedData
keycore
wrappedKeyDataBackingStore
initWithWrappedAESKey:uuid:parentKeyUUID:keyclass:zoneID:
setKeycore:
setWrappedKeyDataBackingStore:
wrapUnder:error:
initWithKeyCore:state:currentkey:
randomKeyWrappedBySelf:error:
wrapsSelf
ensureKeyLoadedFromKeychain:
fromDatabaseAnyState:zoneID:error:
setAessivkey:
allForUUID:zoneID:error:
unwrapKey:fromShares:error:
trySelfWrappedKeyCandidate:error:
unwrapViaTLKSharesTrustedBy:error:
saveKeyMaterialToKeychain:error:
wrapAESKey:error:
deleteKeyMaterialFromKeychain:
setCurrentkey:
currentKeysForClass:state:zoneID:error:
currentkey
base64EncodedDataWithOptions:
_newZeroingDataWithBytes:length:
initWithBytes:len:
initSelfWrappedWithAESKey:uuid:keyclass:state:zoneID:encodedCKRecord:currentkey:
tryFromDatabaseAnyState:zoneID:error:
selfWrappedKeys:error:
remoteKeys:error:
localKeys:error:
countsByClass:error:
_currentkey
_keycore
_wrappedKeyDataBackingStore
T@"CKKSKeychainBackedKey",&,V_keycore
T@"NSData",&,V_wrappedKeyDataBackingStore
T@"NSString",&,V_uuid
T@"NSString",&,V_parentKeyUUID
T@"NSString<SecCKKSProcessedState>",C,V_state
TB,V_currentkey
addLockStateObserver:
initWithContainer:fetchClass:reachabilityTracker:
registerCKKSReceiver:
initWithContainer:reachabilityTracker:cloudkitDependencies:
notifyNewTLKsInKeychain
sosPeerAdapter
hasValidCredentials
dateOfLastSuccessForEvent:zoneName:
datePropertyForKey:zoneName:
fuzzyNumber:
lastIncomingQueueOperation
lastOutgoingQueueOperation
ckksActors
zoneChangeFetcher
initWithContainer:accountTracker:lockStateTracker:reachabilityTracker:changeFetcher:zoneModifier:savedTLKNotifier:cloudKitClassDependencies:
restartCKKSAccountSyncWithoutSettingPolicy:
halt
viewAllowList
setSyncingViewsAllowList:
pendingSyncCallbacks
callSyncCallbackWithErrorNoAccount:
globalRateLimiter
handleKeychainEventDbConnection:source:added:deleted:rateLimiter:
syncBackupAndNotifyAboutSync
performTransaction:
waitUntilFinished
viewsToPiggybackTLKs
setCompletionBlock:
resyncWithCloud
resyncLocal
earliestFetchTime
timeIntervalSinceNow
rpcFetchAndProcessIncomingQueue:because:errorOnClassAFailure:
rpcProcessOutgoingQueue:operationGroup:
sanitizeErrorDomain:
proposeTLKForExternallyManagedView:proposedTLK:wrappedOldTLK:tlkShares:reply:
fetchExternallyManagedViewKeyHierarchy:forceFetch:reply:
modifyTLKSharesForExternallyManagedView:adding:deleting:reply:
resetExternallyManagedCloudKitView:reply:
waitForTrustReady
dailyCoreAnalyticsMetrics:
updateDeviceState:waitForKeyHierarchyInitialization:ckoperationGroup:
getGlobalRateLimiter
lockStateChangeNotification:
restartCKKSAccountSync:
cancelPendingOperations
currentTLKsFilteredByPolicy:error:
haltAll
dropAllActors
setAccountTracker:
setPersonaAdapter:
setZoneChangeFetcher:
setCompletedSecCKKSInitialize:
setGlobalRateLimiter:
setSosPeerAdapter:
setViewAllowList:
setPendingSyncCallbacks:
setSavedTLKNotifier:
policy
setPolicy:
policyLoaded
setPolicyLoaded:
_accountTracker
_zoneChangeFetcher
_completedSecCKKSInitialize
_globalRateLimiter
_sosPeerAdapter
_viewAllowList
_pendingSyncCallbacks
_ckksActors
_policy
_policyLoaded
T@"NSSet",&,V_viewAllowList
T@"NSMutableDictionary",&,V_pendingSyncCallbacks
T@"CKKSNearFutureScheduler",&,V_savedTLKNotifier
T@"NSMutableDictionary",R,V_ckksActors
T@"TPSyncingPolicy",&,V_policy
T@"CKKSCondition",&,V_policyLoaded
T@"CKKSAccountStateTracker",&,V_accountTracker
T@"<OTPersonaAdapter>",&,V_personaAdapter
T@"CKKSZoneChangeFetcher",&,V_zoneChangeFetcher
T@"CKKSCondition",&,V_completedSecCKKSInitialize
T@"CKKSRateLimiter",&,V_globalRateLimiter
T@"<OTSOSAdapter>",&,V_sosPeerAdapter
TB,V_isInheritedAccount
setRefKeyBlob:
initRegularWrappedKeyWithData:
initRefKeyWrappedKeyWithData:refKeyBlob:
serializedRepresentation
_serializedHolder
TI,R
initWithCiphertext:wrappedKey:tamperCheck:error:
T@"_SFAuthenticatedCiphertext",R
setSecDbBackupWrappedItemKey:
initWithCiphertext:wrappedKey:tamperCheck:backupWrappedKey:error:
T@"SecDbKeychainAKSWrappedKey",R
encryptedSecretData
encryptedMetadata
metadataClassKeyWithKeybag:allowWrites:error:
decryptionOperation
unwrapFromAKS:accessControl:acmContext:callerAccessGroups:delete:keyDiversify:error:
encryptMetadataWithKeybag:error:
encryptSecretDataWithKeybag:accessControl:acmContext:error:
encryptedMetadataBlob
setEncryptedMetadata:
encryptedSecretDataBlob
setEncryptedSecretData:
encryptionOperation
wrapToAKS:withKeybag:accessControl:acmContext:error:
sharedStore
keyForKeyclass:keybag:keySpecifier:allowWrites:error:
initWithBytesNoCopy:length:
initWithBytes:length:
initWithLength:
initWithData:decryptionKeybag:error:
initWithSecretAttributes:metadataAttributes:tamperCheck:keyclass:
metadataAttributesWithError:
secretAttributesWithAcmContext:accessControl:callerAccessGroups:keyDiversify:error:
deleteWithAcmContext:accessControl:callerAccessGroups:keyDiversify:error:
encryptedBlobWithKeybag:accessControl:acmContext:error:
backupUUID
setBackupUUID:
_encryptedMetadata
_secretAttributes
_metadataAttributes
_backupUUID
T@"NSData",&,N,V_backupUUID
Ti,R,N,V_keyclass
_onQueueResetReachabilityDependency
networkMonitor
_onqueueSetNetworkReachability:
haveNetwork
reachabilityDependency
setReachabilityDependency:
noteEvent:
_onQueueRunReachabilityDependency
setHaveNetwork:
currentReachability
setNetworkReachability:
setNetworkMonitor:
_haveNetwork
_reachabilityDependency
_networkMonitor
TB,V_haveNetwork
T@"NSObject<OS_nw_path_monitor>",&,V_networkMonitor
T@"CKKSResultOperation",&,V_reachabilityDependency
setByAddingObjectsFromArray:
mutableStateConditions
setCurrentState:
_onqueueSendAnyPendingFlags
createOperationToFinishAttempt:
pendingFlags
pendingFlagsString
currentFlags
allowableStates
stateConditions
halted
stateMachineRequests
sourceStates
_onqueueStart
stateEngine
nextStateMachineCycleOperation
testHoldStates
_onqueueNextStateMachineTransition
setNextStateMachineCycleOperation:
holdStateMachineOperation
setPaused:
stateMachineWatchers
_onqueueStartNextStateMachineOperation:
_onqueueHandlePendingFlag:
_onqueueRecheckConditions
setAllowPendingFlags:
allowPendingFlags
conditionChecksInFlight
currentConditions
setCurrentConditions:
setConditionChecksInFlight:
setCheckUnlockOperation:
checkUnlockOperation
setCheckReachabilityOperation:
checkReachabilityOperation
earlierDate:
pendingFlagsScheduler
setHoldStateMachineOperation:
setHalted:
_onqueueRegisterMultiStateArrivalWatcher:
setTimeout:
doWatchedStateMachineRPC:sourceStates:path:transitionOp:reply:
registerStateTransitionWatcher:
possiblePendingFlags
testPauseStateMachineAfterEntering:
testReleaseStateMachinePause:
registerMultiStateArrivalWatcher:
setWatcherTimeout:
setStateEngine:
setMutableStateConditions:
setCurrentFlags:
setTestHoldStates:
setStateMachineRequests:
setStateMachineWatchers:
setPendingFlags:
setPendingFlagsScheduler:
_currentState
_halted
_allowPendingFlags
_paused
_allowableStates
_timeout
_stateEngine
_mutableStateConditions
_currentFlags
_holdStateMachineOperation
_testHoldStates
_nextStateMachineCycleOperation
_stateMachineRequests
_stateMachineWatchers
_pendingFlags
_pendingFlagsScheduler
_conditionChecksInFlight
_currentConditions
_checkUnlockOperation
_checkReachabilityOperation
T@"<OctagonStateMachineEngine>",W,V_stateEngine
T@"NSMutableDictionary",&,V_mutableStateConditions
T@"CKKSCondition",&,V_paused
T@"OctagonFlags",&,V_currentFlags
T@"NSOperation",&,V_holdStateMachineOperation
T@"NSMutableSet",&,V_testHoldStates
T@"CKKSResultOperation",&,V_nextStateMachineCycleOperation
T@"NSMutableArray",&,V_stateMachineRequests
T@"NSMutableArray",&,V_stateMachineWatchers
TB,V_halted
TB,V_allowPendingFlags
T@"NSMutableDictionary",&,V_pendingFlags
T@"CKKSNearFutureScheduler",&,V_pendingFlagsScheduler
TQ,V_conditionChecksInFlight
TQ,V_currentConditions
T@"NSOperation",&,V_checkUnlockOperation
T@"NSOperation",&,V_checkReachabilityOperation
T@"<OctagonFlagContainer>",R
T@"NSSet",R,V_allowableStates
TQ,N,V_timeout
resetSharedStore
listeners
setListeners:
_listeners
T@"NSMapTable",&,V_listeners
handlePrepareErrors:nextExpectedState:
persistentKeyRef:error:
setPeerPreapprovedSPKIs:
peerPreapprovedSPKIs
afterPrepare
afterPreflight
setUpdateOp:
updateOp
afterUpdate
afterSuccessfulAllowList
requestSilentEscrowUpdate
_updateOp
_peerPreapprovedSPKIs
T@"OTUpdateTrustedDeviceListOperation",&,V_updateOp
T@"NSArray",&,V_peerPreapprovedSPKIs
T@"TPPolicyVersion",R,V_policyOverride
setFinishDate:
isReady
finishingBlock
completionHandlerDidRunCondition
timeoutQueue
indexesOfObjectsPassingTest:
objectsAtIndexes:
descriptionError
descriptionErrorCode
dependenciesDescriptionError
_onqueueTimeoutError
addNullableSuccessDependency:
successDependencies
setCompletionHandlerDidRunCondition:
setSuccessDependencies:
setTimeoutQueue:
setFinishingBlock:
_finishDate
_completionHandlerDidRunCondition
_descriptionErrorCode
_successDependencies
_timeoutQueue
_finishingBlock
T@"NSMutableArray",&,V_successDependencies
T@"NSObject<OS_dispatch_queue>",&,V_timeoutQueue
T@?,C,V_finishingBlock
T@"NSDate",&,V_finishDate
T@"CKKSCondition",&,V_completionHandlerDidRunCondition
Tq,V_descriptionErrorCode
bundleWithPath:
pathForResource:ofType:
dictionaryWithContentsOfFile:
loadDefaults
egoHelper
setupError
setSetupError:
performWithSigningKey:
setEgoPeerID:
performWithEgoPeerID:
setPeerVerifyingKeys:
performWithPeerVerifyingKeys:
signerID
setHelper:
whereClauseForRecordName:
validateWithError:
enumerateObjectsWithOptions:usingBlock:
digestForData:
committedLeafRecordIDs
peerManifestIDs
currentItems
futureData
signatures
schema
initWithDigestValue:zone:generationCount:leafRecordIDs:peerManifestIDs:currentItems:futureData:signatures:signerID:schema:encodedRecord:
initWithObjects:
addObjectsFromArray:
defaultHelperForSignerID:
initWithDigestValue:zone:generationCount:leafRecordIDs:peerManifestIDs:currentItems:futureData:signatures:signerID:schema:helper:
initWithDigestValue:zone:generationCount:leafRecordIDs:peerManifestIDs:currentItems:futureData:signatures:signerID:schema:
signatureDictFromDERData:error:
futureDataDictFromRecord:withSchema:
ignoreChanges
derDataFromSignatureDict:error:
derDataFromPeerManifests:error:
updateWithRecord:error:
signatureOperation
localizedStringWithFormat:
leafRecordForItemUUID:
leafRecordForID:
leafRecords
digestValueForLeafRecords:
manifestForRecordName:error:
initialize
shouldSyncManifests
shouldEnforceManifests
performWithAccountInfo:
manifestForZone:peerID:error:
latestTrustedManifestForZone:error:
manifestForPendingManifest:
greatestKnownGenerationCount
peerManifestsFromDERData:error:
validateItem:withError:
validateCurrentItem:withError:
itemUUIDExistsInManifest:
contentsAreEqualToManifest:
nilAllIvars
leafRecordIDs
setSignerID:
helper
_signerID
_leafRecordIDs
_peerManifestIDs
_currentItemsDict
_futureData
_signaturesDict
_schema
_helper
T@"NSArray",R,N,V_leafRecordIDs
T@"NSArray",R,N,V_peerManifestIDs
T@"NSDictionary",R,N,V_currentItemsDict
T@"NSDictionary",R,N,V_futureData
T@"NSDictionary",R,N,V_signaturesDict
T@"NSDictionary",R,N,V_schema
T@"NSString",&,N,V_signerID
T@"CKKSManifestInjectionPointHelper",&,N,V_helper
TQ,R,N,V_generationCount
isReadyToCommit
isReadyToCommmit
_committedLeafRecordIDs
_readyToCommit
T@"NSArray",R,N,V_committedLeafRecordIDs
readyToCommit
TB,R,GisReadyToCommmit,V_readyToCommit
initWithPeerID:keyPair:isEgoPeer:
newManifestForZone:withItems:peerManifestIDs:currentItems:error:helper:
updateWithNewOrChangedRecords:deletedRecordIDs:
leafRecordsForItems:manifestName:zone:
initWithDigestValue:zone:generationCount:leafRecords:peerManifestIDs:currentItems:futureData:signatures:signerID:schema:
loadLeafRecords:error:
generateSignaturesWithHelper:derData:error:
tryCurrentEgoManifestForZone:
newFakeManifestForZone:withItemRecords:currentItems:signerID:keyPair:error:
newManifestForZone:withItems:peerManifestIDs:currentItems:error:
T@"CKKSManifestInjectionPointHelper",R
setCurrentItemUUID:forIdentifier:
allCKRecordsWithZoneID:
setSignatures:
_leafRecords
T@"NSDictionary",&,N
registerHelper:forPeer:
peerVerifyingKeys
registerEgoPeerID:keyPair:
setIgnoreChanges:
_keyPair
_peerVerifyingKeys
_egoPeerID
_setupError
T@"NSDictionary",&,V_peerVerifyingKeys
T@"NSString",&,V_egoPeerID
T@"NSError",&,V_setupError
initWithData:encoding:
initWithBase64EncodedData:options:
characterAtIndex:
peerProviderID
currentSelfPeers
currentTrustedPeers
recoverTLK:trustedPeers:error:
noPeersState:
setPeerProviderID:
currentTrustedPeerIDs
_peerProviderID
_currentSelfPeers
_currentSelfPeersError
_currentTrustedPeers
_currentTrustedPeerIDs
_currentTrustedPeersError
T@"NSString",&,V_peerProviderID
T@"CKKSSelves",R,N,V_currentSelfPeers
T@"NSError",R,N,V_currentSelfPeersError
T@"NSSet",R,N,V_currentTrustedPeers
T@"NSSet",R,N,V_currentTrustedPeerIDs
T@"NSError",R,N,V_currentTrustedPeersError
setAllowsCellularAccess:
fetchRecordRecordsOperationClass
initWithRecordIDs:
setDesiredKeys:
setConfiguration:
setFetchRecordsCompletionBlock:
database
localSettingName
lastFetch
retryAfter
cachedFeatureAllowed
logSystemMetricsForActivityNamed:withAction:
fetchRampRecord:reply:
stop
setRetryAfter:
setLastFetch:
setCachedFeatureAllowed:
setDatabase:
setZone:
setRecordName:
setLocalSettingName:
setAccountStatus:
_cachedFeatureAllowed
_database
_zone
_recordName
_localSettingName
_accountStatus
_fetchRecordRecordsOperationClass
_lastFetch
_retryAfter
T@"CKContainer",&,N,V_container
T@"CKDatabase",&,N,V_database
T@"CKRecordZone",&,N,V_zone
T@"CKRecordZoneID",&,N,V_zoneID
T@"NSString",&,N,V_recordName
T@"NSString",&,N,V_localSettingName
T@"CKKSAccountStateTracker",&,N,V_accountTracker
T@"CKKSReachabilityTracker",&,N,V_reachabilityTracker
Tq,V_accountStatus
T#,R,V_fetchRecordRecordsOperationClass
T@"NSDate",&,V_lastFetch
Td,V_retryAfter
TB,V_cachedFeatureAllowed
sharedInstance
authKitAccountWithAltDSID:
securityLevelForAccount:
demoAccountForAccount:
anisetteDataWithError:
machineId
fetchDeviceListWithContext:completion:
notifiers
setNotifiers:
notifyAKDeviceList:
initWithResponseBody:
machineIDs
operation
accountIsHSA2ByAltDSID:
_notifiers
T@"CKKSListenerCollection<OTAuthKitAdapterNotifier>",&,V_notifiers
methodSignatureForSelector:
selector
entitlementBearer
failFetchEscrowContents:contextID:reply:
setSelector:
invokeWithTarget:
failSetLocalSecureElementIdentity:contextID:secureElementIdentity:reply:
failRemoveLocalSecureElementIdentityPeerID:contextID:secureElementIdentityPeerID:reply:
failFetchTrustedSecureElementIdentities:contextID:reply:
failFetchAccountSettings:contextID:reply:
failFetchAccountWideSettings:contextID:reply:
failPersistAccountSettings:context:setting:reply:
initWithManager:entitlementBearer:
createWithManager:entitlementBearer:
forwardInvocation:
setManager:
setEntitlementBearer:
_manager
_entitlementBearer
T@"OTManager",&,V_manager
T@"<OctagonEntitlementBearerProtocol>",&,V_entitlementBearer
viewsRequiringTLKUpload
numberWithUnsignedInt:
hasRefKeyBlob
T@"NSData",&,N,V_refKeyBlob
TI,N,V_type
propertiesForDataclass:
initWithString:
URLByAppendingPathComponent:
ephemeralSessionConfiguration
sessionWithConfiguration:delegate:delegateQueue:
setURLSession:
setTaskMap:
sendEvent:pushTopic:
taskMap
lostEvents
setLostEvents:
eventName
requestForGenericEvent:
URLSession
dataTaskWithRequest:
set_APSRelayTopic:
taskIdentifier
getEvent:
originalRequest
c2MetricsEndpoint
initWithURL:
generateDeviceInfo
immutableData
gzipEncode:
setHTTPMethod:
setHTTPBody:
setValue:forHTTPHeaderField:
productName
setProductName:
productType
setProductType:
productVersion
setProductVersion:
buildVersion
setProductBuild:
processName
setProcessName:
processVersion
setProcessVersion:
processUUID
setProcessUuid:
URLSession:didBecomeInvalidWithError:
URLSession:didReceiveChallenge:completionHandler:
URLSessionDidFinishEventsForBackgroundURLSession:
URLSession:task:didCompleteWithError:
_taskMap
_URLSession
_lostEvents
T@"NSMutableDictionary",&,V_taskMap
T@"NSURLSession",&,V_URLSession
Tq,V_lostEvents
linearDependenciesWithSelfFirst:
defaultAnalyticsDatabasePath:
isCKPartialError:
errorChain:depth:
addCKPartialError:error:depth:
setValuesForKeysWithDictionary:
logSoftFailureForEventNamed:withAttributes:
logHardFailureForEventNamed:withAttributes:
noteEventNamed:
initWithLong:
successfulKeysRecovered
noteMetric:count:
totalTLKSharesRecovered
databasePath
createErrorAttributes:depth:attributes:
noteEvent:zoneName:
setDateProperty:forKey:zoneName:
setErrorDomain:
setErrorDescription:
setUnderlyingError:
hasErrorDomain
setErrorCode:
setHasErrorCode:
hasErrorCode
hasErrorDescription
hasUnderlyingError
errorDomain
errorCode
errorDescription
underlyingError
_errorCode
_errorDescription
_errorDomain
_underlyingError
T@"NSString",&,N,V_errorDomain
Tq,N,V_errorCode
T@"NSString",&,N,V_errorDescription
T@"SECC2MPError",&,N,V_underlyingError
triggerKeychainItemUpdateRPC:
hasLastEscrowAttemptTime
lastEscrowAttemptTime
device
circlePeerID
lastUnlockTime
circleStatus
keyState
currentTLKUUID
currentClassAUUID
currentClassCUUID
nameFromCKRecordID:
cliqueStatusToCKType:
sosCCStatusToCKType:
cktypeToOTCliqueStatusWrapper:
cktypeToSOSCCStatus:
setOsVersion:
setLastUnlockTime:
setDevice:
setCirclePeerID:
setCircleStatus:
setKeyState:
setCurrentTLKUUID:
setCurrentClassAUUID:
setCurrentClassCUUID:
initForDevice:osVersion:lastUnlockTime:octagonPeerID:octagonStatus:circlePeerID:circleStatus:keyState:currentTLKUUID:currentClassAUUID:currentClassCUUID:zoneID:encodedCKRecord:
calendarWithIdentifier:
timeZoneWithAbbreviation:
setTimeZone:
startOfDayForDate:
tryFromDatabaseFromCKRecordID:error:
_circleStatus
_device
_osVersion
_lastUnlockTime
_circlePeerID
_keyState
_currentTLKUUID
_currentClassAUUID
_currentClassCUUID
T@"NSString",&,V_device
T@"NSString",&,V_osVersion
T@"NSDate",&,V_lastUnlockTime
T@"NSString",&,V_circlePeerID
Ti,V_circleStatus
T@"NSString<OctagonStateString>",&,V_keyState
T@"NSString",&,V_currentTLKUUID
T@"NSString",&,V_currentClassAUUID
T@"NSString",&,V_currentClassCUUID
setOperationId:
setOperationType:
hasOperationId
hasOperationType
setOperationTriggered:
setHasOperationTriggered:
hasOperationTriggered
setOperationGroupIndex:
setHasOperationGroupIndex:
hasOperationGroupIndex
operationId
operationType
operationTriggered
operationGroupIndex
_operationGroupIndex
_operationId
_operationType
_operationTriggered
T@"NSString",&,N,V_operationId
T@"NSString",&,N,V_operationType
TB,N,V_operationTriggered
TI,N,V_operationGroupIndex
initWithDependencies:intendedState:errorState:deviceInfo:peerID:permanentInfo:permanentInfoSig:stableInfo:stableInfoSig:
T@"NSData",&,N,V_permanentInfo
T@"NSData",&,N,V_permanentInfoSig
T@"NSData",&,N,V_stableInfo
T@"NSData",&,N,V_stableInfoSig
fixupOperation:
fetchRecordsOperationClass
initWithOperationDependencies:ckoperationGroup:
predicateWithValue:
initWithRecordType:predicate:
queryOperationClass
initWithQuery:
setRecordFetchedBlock:
setQueryCompletionBlock:
fixupNumber
initWithOperationDependencies:fixupNumber:ckoperationGroup:entering:
setFixupNumber:
_fixupNumber
TQ,V_fixupNumber
stateInit
OctagonStateInverseMap
peerIDs
setPeerIDs:
_peerIDs
T@"NSSet",&,V_peerIDs
accountFromData:factory:error:
trust
copyPublicKeyForPeer:err:
initWithFetchRecordZoneChangesOperationClass:fetchRecordsOperationClass:queryOperationClass:modifySubscriptionsOperationClass:modifyRecordZonesOperationClass:apsConnectionClass:nsnotificationCenterClass:nsdistributednotificationCenterClass:notifierClass:
modifySubscriptionsOperationClass
modifyRecordZonesOperationClass
nsdistributednotificationCenterClass
_fetchRecordsOperationClass
_queryOperationClass
_modifySubscriptionsOperationClass
_modifyRecordZonesOperationClass
_nsdistributednotificationCenterClass
T#,R,V_fetchRecordsOperationClass
T#,R,V_queryOperationClass
T#,R,V_modifySubscriptionsOperationClass
T#,R,V_modifyRecordZonesOperationClass
T#,R,V_nsdistributednotificationCenterClass
addOperationGroup:
addClientOperation:
setClientProcessVersion:
setClientBundleId:
setEnvironment:
operationGroupsCount
clearOperationGroups
operationGroupAtIndex:
clientOperationsCount
clearClientOperations
clientOperationAtIndex:
operationGroupType
clientOperationType
hasClientProcessVersion
hasClientBundleId
hasContainer
hasEnvironment
setAnonymous:
setHasAnonymous:
hasAnonymous
setReportOperationGroupFrequency:
setHasReportOperationGroupFrequency:
hasReportOperationGroupFrequency
setReportOperationGroupFrequencyBase:
setHasReportOperationGroupFrequencyBase:
hasReportOperationGroupFrequencyBase
setReportClientOperationFrequency:
setHasReportClientOperationFrequency:
hasReportClientOperationFrequency
setReportClientOperationFrequencyBase:
setHasReportClientOperationFrequencyBase:
hasReportClientOperationFrequencyBase
clientProcessVersion
clientBundleId
environment
anonymous
operationGroups
setOperationGroups:
reportOperationGroupFrequency
reportOperationGroupFrequencyBase
clientOperations
setClientOperations:
reportClientOperationFrequency
reportClientOperationFrequencyBase
_reportClientOperationFrequency
_reportClientOperationFrequencyBase
_reportOperationGroupFrequency
_reportOperationGroupFrequencyBase
_clientBundleId
_clientOperations
_clientProcessVersion
_environment
_operationGroups
_anonymous
T@"NSString",&,N,V_clientProcessVersion
T@"NSString",&,N,V_clientBundleId
T@"NSString",&,N,V_container
T@"NSString",&,N,V_environment
TB,N,V_anonymous
T@"NSMutableArray",&,N,V_operationGroups
TQ,N,V_reportOperationGroupFrequency
TQ,N,V_reportOperationGroupFrequencyBase
T@"NSMutableArray",&,N,V_clientOperations
TQ,N,V_reportClientOperationFrequency
TQ,N,V_reportClientOperationFrequencyBase
viewState
newerItemPersistentRef
accessGroup
_onqueueFindSecDbItem:accessGroup:error:
setNewItem:
newItem
newerItemSHA1
oldItemPersistentRef
setOldItem:
oldItem
oldItemSHA1
currentPointerIdentifier
_onqueueFindSecDbItemWithUUID:accessGroup:error:
setModifyRecordsOperation:
modifyRecordsOperation
_onqueueFindSecDbItemWithQuery:error:
initWithCKKSOperationDependencies:viewState:newItem:hash:accessGroup:identifier:replacing:hash:ckoperationGroup:
setCurrentPointerIdentifier:
setAccessGroup:
setNewerItemPersistentRef:
setNewerItemSHA1:
setOldItemPersistentRef:
setOldItemSHA1:
_currentPointerIdentifier
_viewState
_modifyRecordsOperation
_accessGroup
_newerItemPersistentRef
_newerItemSHA1
_oldItemPersistentRef
_oldItemSHA1
_newItem
_oldItem
T@"CKModifyRecordsOperation",&,V_modifyRecordsOperation
T@"NSString",&,V_accessGroup
T@"NSData",&,V_newerItemPersistentRef
T@"NSData",&,V_newerItemSHA1
T@"NSData",&,V_oldItemPersistentRef
T@"NSData",&,V_oldItemSHA1
T^{SecDbItem={__CFRuntimeBase=QAQ}^{SecDbClass}iii^{__CFDictionary}^{__CFData}^v^{__CFArray}},V_newItem
T^{SecDbItem={__CFRuntimeBase=QAQ}^{SecDbClass}iii^{__CFDictionary}^{__CFData}^v^{__CFArray}},V_oldItem
T@"NSString",&,V_currentPointerIdentifier
T@"CKKSKeychainViewState",R,V_viewState
previousPendingKeySets
randomKey:
initWithDependencies:rollTLKIfPresent:preexistingPendingKeySets:intendedState:errorState:
rollTLKIfPresent
setRollTLKIfPresent:
setPreviousPendingKeySets:
_rollTLKIfPresent
_previousPendingKeySets
TB,V_rollTLKIfPresent
T@"NSDictionary",&,V_previousPendingKeySets
T@"CKKSOperationDependencies",R,V_deps
stateIfNotHSA2
stateIfNoAccount
setStateIfNotHSA2:
setStateIfNoAccount:
_stateIfNotHSA2
_stateIfNoAccount
T@"NSString<OctagonStateString>",&,V_stateIfNotHSA2
T@"NSString<OctagonStateString>",&,V_stateIfNoAccount
afterTPHTrustState:trustedPeers:
contextForStateRepair
contextForConfirmExistingSecret
contextForSecureTerms
createCDPFollowupContext:
postFollowUpWithContext:error:
postedCFUTypes
clearFollowUpWithContext:error:
clearFollowUp:error:
previousFollowupEnd
setPreviousFollowupEnd:
followupStart
setFollowupStart:
followupEnd
setFollowupEnd:
setPostedCFUTypes:
_previousFollowupEnd
_followupStart
_followupEnd
_postedCFUTypes
T@"<OctagonFollowUpControllerProtocol>",&,V_cdpd
Td,V_previousFollowupEnd
Td,V_followupStart
Td,V_followupEnd
T@"NSMutableSet",&,V_postedCFUTypes
hasPosted:
clearAllPostedFlags
keyCache
loadKeyForItem:error:
setKeyCache:
_keyCache
T@"NSMutableDictionary",&,V_keyCache
resetUnlockDependency
_onqueueRecheck
queueIsLocked
lastUnlockedTime
setLastUnlockedTime:
setUnlockDependency:
lockStateProvider
queryAKSLocked
setQueueIsLocked:
lockedError:
checkErrorChainForLockState:
initWithProvider:
setLockStateProvider:
observers
setObservers:
notify_token
setNotify_token:
_queueIsLocked
_notify_token
_unlockDependency
_lockStateProvider
_observers
_lastUnlockedTime
TB,V_queueIsLocked
T@"NSHashTable",&,V_observers
Ti,V_notify_token
T@"NSDate",&,V_lastUnlockedTime
T@"NSOperation",&,V_unlockDependency
T@"<CKKSLockStateProviderProtocol>",&,V_lockStateProvider
isAppleInternal
mainBundle
infoDictionary
hasSecDbBackupWrappedItemKey
secDbBackupWrappedItemKey
_secDbBackupWrappedItemKey
T@"NSData",&,N,V_secDbBackupWrappedItemKey
setAkswrappedkey:
setBackupwrappedkey:
setHasKeyclass:
hasKeyclass
setActualKeyclass:
setHasActualKeyclass:
hasActualKeyclass
hasBaguuid
hasAkswrappedkey
hasBackupwrappedkey
actualKeyclass
akswrappedkey
backupwrappedkey
_actualKeyclass
_akswrappedkey
_backupwrappedkey
Ti,N,V_keyclass
Ti,N,V_actualKeyclass
T@"NSData",&,N,V_akswrappedkey
T@"NSData",&,N,V_backupwrappedkey
createAccountLoggedInDependency:
containerIdentifier
lastFixupOperation
_onqueueResetAllInflightOQE:
waitUntilReadyForRPCForOperation:fast:errorOnNoCloudKitAccount:errorOnPolicyMissing:error:
cloudkitRetryAfter
trustStatus
_onqueuePrioritizePriorityViews
performInitializedOperation
setLastFixupOperation:
setLastNewTLKOperation:
loseTrustOperation:
lastNewTLKOperation
becomeReadyOperation:
keyStateFullRefetchRequested
outgoingQueueOperationScheduler
launchComplete
requestSuccessfulFetchForManyReasons:
scheduleOperation:
keyStateMachineRefetched
initWithDependencies:allowFullRefetchResult:intendedState:errorState:
anyViewsInState:
suggestTLKUpload
tlkMissingOperation:
setKeyStateMachineRefetched:
setKeyStateFullRefetchRequested:
resultsOfNextIncomingQueueOperationOperation
setResultsOfNextIncomingQueueOperationOperation:
setLastIncomingQueueOperation:
holdIncomingQueueOperation
setInitiatedLocalScan:
initWithDependencies:intendedState:errorState:holdOperation:
setLastReencryptOutgoingItemsOperation:
holdOutgoingQueueOperation
outgoingQueueOperations
setLastOutgoingQueueOperation:
launched
addAttribute:value:
setTrustStatus:
setTrustStatusKnown:
_onqueueOtherDevicesReportHavingTLKs:trustStates:
setDay:
setItemModificationsBeforePolicyLoaded:
_onqueueProcessOutgoingQueue:
policyDependentViewStateForName:error:
accountStateKnown
findFirstPendingOperation:
scheduleOperationWithoutDependencies:
findFirstPendingOperation:ofClass:
waitForPolicy:error:
priorityViewsProcessed
havoc
setHavoc:
accountStatusFromCKAccountInfo:
handleCKLogin
accountLoggedInDependency
setAccountLoggedInDependency:
handleCKLogout
loggedOut
setLoggedOut:
loggedIn
setLoggedIn:
setSuggestTLKUpload:
trustStatusKnown
intersectSet:
setByAddingObjectsFromSet:
createViewState:zoneIsNew:ckksManagedView:
setPriorityViewsProcessed:
registerClient:zoneID:
itemModificationsBeforePolicyLoaded
postNotificationName:object:userInfo:options:
initWithZoneID:ckksManagedView:notifyViewChangedScheduler:notifyViewReadyScheduler:
_onQueueZoneIsReadyForFetching:
resyncRecordsSeen
setResyncRecordsSeen:
ckErrorOrPartialError:isError:zoneID:
keyStateMachineRequestProcess
inflightFetch
keyHierarchyConditions
notifyViewReadyScheduler
allFor:keyUUID:zoneID:error:
lastProcessReceivedKeysOperation
lastReencryptOutgoingItemsOperation
sortDescriptorWithKey:ascending:
sortedArrayUsingDescriptors:
fastStatus:zoneStateEntry:
intransactionSlowStatus:
shouldRetryAfterFetchError:zoneID:
_onqueuePokeKeyStateMachine
resultsOfNextProcessIncomingQueueOperation
rpcFetchBecause:
scanLocalItems
outgoingQueueEmpty:
waitForFetchAndIncomingQueueProcessing
waitForKeyHierarchyReadiness
waitUntilAllOperationsAreFinished
waitForOperationsOfClass:
setAccountStateKnown:
setLastProcessReceivedKeysOperation:
lastSynchronizeOperation
setHoldOutgoingQueueOperation:
setHoldIncomingQueueOperation:
setHoldLocalSynchronizeOperation:
initiatedLocalScan
setOutgoingQueueOperationScheduler:
setOutgoingQueueOperations:
setDatabaseProvider:
setCurrentTrustStates:
_keyStateMachineRefetched
_keyStateFullRefetchRequested
_initiatedLocalScan
_itemModificationsBeforePolicyLoaded
_havoc
_loggedIn
_loggedOut
_accountStateKnown
_trustStatus
_trustStatusKnown
_suggestTLKUpload
_lastIncomingQueueOperation
_lastNewTLKOperation
_lastOutgoingQueueOperation
_lastProcessReceivedKeysOperation
_lastReencryptOutgoingItemsOperation
_lastSynchronizeOperation
_lastFixupOperation
_holdOutgoingQueueOperation
_holdIncomingQueueOperation
_holdLocalSynchronizeOperation
_priorityViewsProcessed
_outgoingQueueOperationScheduler
_resultsOfNextIncomingQueueOperationOperation
_outgoingQueueOperations
_resyncRecordsSeen
_accountLoggedInDependency
_currentTrustStates
T@"OctagonStateMultiStateArrivalWatcher",&,V_priorityViewsProcessed
TB,V_itemModificationsBeforePolicyLoaded
T@"CKKSNearFutureScheduler",&,V_outgoingQueueOperationScheduler
T@"CKKSResultOperation",&,V_resultsOfNextIncomingQueueOperationOperation
T@"NSHashTable",&,V_outgoingQueueOperations
T@"NSMutableSet",&,V_resyncRecordsSeen
T@"CKKSSecDbAdapter",&,V_databaseProvider
T@"CKKSResultOperation",&,V_accountLoggedInDependency
T@"NSArray",&,V_currentTrustStates
TB,V_havoc
T@"CKKSCloudKitClassDependencies",R,V_cloudKitClassDependencies
T@"NSObject<OS_dispatch_queue>",R,V_queue
T@"CKKSCondition",&,V_loggedIn
T@"CKKSCondition",&,V_loggedOut
T@"CKKSCondition",&,V_accountStateKnown
Tq,V_trustStatus
T@"CKKSCondition",&,V_trustStatusKnown
T@"TPSyncingPolicy",R
TB,V_keyStateMachineRefetched
TB,V_keyStateFullRefetchRequested
T@"CKKSNearFutureScheduler",&,V_suggestTLKUpload
T@"CKKSIncomingQueueOperation",&,V_lastIncomingQueueOperation
T@"CKKSNewTLKOperation",&,V_lastNewTLKOperation
T@"CKKSOutgoingQueueOperation",&,V_lastOutgoingQueueOperation
T@"CKKSProcessReceivedKeysOperation",&,V_lastProcessReceivedKeysOperation
T@"CKKSReencryptOutgoingItemsOperation",&,V_lastReencryptOutgoingItemsOperation
T@"CKKSSynchronizeOperation",&,V_lastSynchronizeOperation
T@"CKKSResultOperation",&,V_lastFixupOperation
T@"NSOperation",&,V_holdOutgoingQueueOperation
T@"NSOperation",&,V_holdIncomingQueueOperation
T@"NSOperation",&,V_holdLocalSynchronizeOperation
T@"NSString",R,V_zoneName
TB,V_initiatedLocalScan
T@"CKKSOperationDependencies",R,V_operationDependencies
init:contextID:intendedState:errorState:cuttlefishXPCWrapper:
setContainerName:
setContextID:
setCuttlefishXPCWrapper:
T@"NSString",&,V_containerName
T@"NSString",&,V_contextID
T@"CuttlefishXPCWrapper",&,V_cuttlefishXPCWrapper
keyclassAsString:
StringAsKeyclass:
T@"NSData",&,N,V_encryptedSecretData
T@"NSData",&,N,V_encryptedMetadata
setStorageFile:
setStorageClass:
dataWithContentsOfURL:
storageClass
setProtobufStorage:
protobufStorage
storageFile
writeToURL:atomically:
initWithStoragePath:storageClass:
storage
setStorage:
_storageFile
_storageClass
_protobufStorage
T@"NSURL",&,V_storageFile
T#,&,V_storageClass
T@"<CKKSPBCodable>",&,V_protobufStorage
processRemoteKeys:viewState:currentTrustStates:error:
checkExistingKeyHierarchy:zoneID:currentTrustStates:error:
setShare:
tryFromDatabase:receiverPeerID:senderPeerID:zoneID:error:
regularExpressionWithPattern:options:error:
firstMatchInString:options:range:
rangeWithName:
substringWithRange:
initForKey:senderPeerID:recieverPeerID:receiverEncPublicKeySPKI:curve:version:epoch:poisoned:wrappedKey:signature:zoneID:encodedCKRecord:
fromDatabase:receiverPeerID:senderPeerID:zoneID:error:
ckrecordPrefix
init:sender:receiver:curve:version:epoch:poisoned:zoneID:encodedCKRecord:
dataForSigning
signRecord:error:
verifySignature:verifyingPeer:error:
signatureVerifiesWithPeerSet:error:
_share
T@"CKKSTLKShare",&,V_share
Tq,R
readyNotificationArmed
setReadyNotificationArmed:
setLaunch:
setNotifyViewChangedScheduler:
setNotifyViewReadyScheduler:
setAllowableStates:
_ckksManagedView
_readyNotificationArmed
_viewKeyHierarchyState
_launch
_notifyViewChangedScheduler
_notifyViewReadyScheduler
T@"NSSet",&,V_allowableStates
TB,V_readyNotificationArmed
T@"CKRecordZoneID",R,V_zoneID
T@"CKKSLaunchSequence",&,V_launch
T@"NSString<OctagonStateString>",&,V_viewKeyHierarchyState
TB,R,V_ckksManagedView
T@"CKKSNearFutureScheduler",&,V_notifyViewChangedScheduler
T@"CKKSNearFutureScheduler",&,V_notifyViewReadyScheduler
failedDueToEssentialTrustState
checkAndHealTLKShares:currentTrustStates:
failedDueToLockState
setFailedDueToLockState:
createMissingKeyShares:peers:databaseProvider:error:
setFailedDueToEssentialTrustState:
areNewSharesSufficient:trustStates:error:
filterTrustedPeers:missingTLKSharesFor:databaseProvider:error:
_failedDueToLockState
_failedDueToEssentialTrustState
TB,V_failedDueToLockState
TB,V_failedDueToEssentialTrustState
initIntending:errorState:
_sourceStates
_transitionOperation
T@"NSSet",R,V_sourceStates
T@"CKKSResultOperation<OctagonStateTransitionOperationProtocol>",R,V_transitionOperation
_isRetryableNSURLError
_isCKServerInternalError
_isRetryableAKError
cuttlefishRetryAfter
publickeyHash
initWithPublicKey:publickeyHash:user:
publickey
musr
setPublickeyHash:
setPublickey:
setMusr:
_publickeyHash
_publickey
_musr
T@"NSData",&,V_publickeyHash
T@"NSData",&,V_publickey
T@"NSData",&,V_musr
setNetworkTaskDescription:
setNetworkHostname:
setNetworkRemoteAddresssAndPort:
setNetworkConnectionUuid:
setNetworkInterfaceIdentifier:
setNetworkProtocolName:
setNetworkFatalError:
setNetworkRequestUri:
setOptionsQualityOfService:
setOptionsSourceApplicationBundleIdentifier:
setOptionsSourceApplicationSecondaryIdentifier:
hasNetworkTaskDescription
hasNetworkHostname
hasNetworkRemoteAddresssAndPort
hasNetworkConnectionUuid
setNetworkConnectionReused:
setHasNetworkConnectionReused:
hasNetworkConnectionReused
hasNetworkInterfaceIdentifier
hasNetworkProtocolName
setNetworkRequestHeaderSize:
setHasNetworkRequestHeaderSize:
hasNetworkRequestHeaderSize
setNetworkRequestBodyBytesSent:
setHasNetworkRequestBodyBytesSent:
hasNetworkRequestBodyBytesSent
setNetworkResponseHeaderSize:
setHasNetworkResponseHeaderSize:
hasNetworkResponseHeaderSize
setNetworkResponseBodyBytesReceived:
setHasNetworkResponseBodyBytesReceived:
hasNetworkResponseBodyBytesReceived
setNetworkPreviousAttemptCount:
setHasNetworkPreviousAttemptCount:
hasNetworkPreviousAttemptCount
hasNetworkFatalError
setNetworkStatusCode:
setHasNetworkStatusCode:
hasNetworkStatusCode
hasNetworkRequestUri
setTimestampC2Init:
setHasTimestampC2Init:
hasTimestampC2Init
setTimestampC2Start:
setHasTimestampC2Start:
hasTimestampC2Start
setTimestampC2Now:
setHasTimestampC2Now:
hasTimestampC2Now
setTimestampDnsStart:
setHasTimestampDnsStart:
hasTimestampDnsStart
setTimestampDnsEnd:
setHasTimestampDnsEnd:
hasTimestampDnsEnd
setTimestampTcpStart:
setHasTimestampTcpStart:
hasTimestampTcpStart
setTimestampTcpEnd:
setHasTimestampTcpEnd:
hasTimestampTcpEnd
setTimestampSslStart:
setHasTimestampSslStart:
hasTimestampSslStart
setTimestampRequestStart:
setHasTimestampRequestStart:
hasTimestampRequestStart
setTimestampRequestEnd:
setHasTimestampRequestEnd:
hasTimestampRequestEnd
setTimestampResponseStart:
setHasTimestampResponseStart:
hasTimestampResponseStart
setTimestampResponseEnd:
setHasTimestampResponseEnd:
hasTimestampResponseEnd
hasOptionsQualityOfService
setOptionsOutOfProcess:
setHasOptionsOutOfProcess:
hasOptionsOutOfProcess
setOptionsOutOfProcessForceDiscretionary:
setHasOptionsOutOfProcessForceDiscretionary:
hasOptionsOutOfProcessForceDiscretionary
setOptionsAllowExpensiveAccess:
setHasOptionsAllowExpensiveAccess:
hasOptionsAllowExpensiveAccess
setOptionsAllowPowerNapScheduling:
setHasOptionsAllowPowerNapScheduling:
hasOptionsAllowPowerNapScheduling
setOptionsTimeoutIntervalForRequest:
setHasOptionsTimeoutIntervalForRequest:
hasOptionsTimeoutIntervalForRequest
setOptionsTimeoutIntervalForResource:
setHasOptionsTimeoutIntervalForResource:
hasOptionsTimeoutIntervalForResource
hasOptionsSourceApplicationBundleIdentifier
hasOptionsSourceApplicationSecondaryIdentifier
setOptionsAppleIdContext:
setHasOptionsAppleIdContext:
hasOptionsAppleIdContext
setOptionsTlsPinningRequired:
setHasOptionsTlsPinningRequired:
hasOptionsTlsPinningRequired
networkTaskDescription
networkHostname
networkRemoteAddresssAndPort
networkConnectionUuid
networkConnectionReused
networkInterfaceIdentifier
networkProtocolName
networkRequestHeaderSize
networkRequestBodyBytesSent
networkResponseHeaderSize
networkResponseBodyBytesReceived
networkPreviousAttemptCount
networkFatalError
networkStatusCode
networkRequestUri
timestampC2Init
timestampC2Start
timestampC2Now
timestampDnsStart
timestampDnsEnd
timestampTcpStart
timestampTcpEnd
timestampSslStart
timestampRequestStart
timestampRequestEnd
timestampResponseStart
timestampResponseEnd
optionsQualityOfService
optionsOutOfProcess
optionsOutOfProcessForceDiscretionary
optionsAllowExpensiveAccess
optionsAllowPowerNapScheduling
optionsTimeoutIntervalForRequest
optionsTimeoutIntervalForResource
optionsSourceApplicationBundleIdentifier
optionsSourceApplicationSecondaryIdentifier
optionsAppleIdContext
optionsTlsPinningRequired
_networkRequestBodyBytesSent
_networkResponseBodyBytesReceived
_networkStatusCode
_timestampC2Init
_timestampC2Now
_timestampC2Start
_timestampDnsEnd
_timestampDnsStart
_timestampRequestEnd
_timestampRequestStart
_timestampResponseEnd
_timestampResponseStart
_timestampSslStart
_timestampTcpEnd
_timestampTcpStart
_networkConnectionUuid
_networkFatalError
_networkHostname
_networkInterfaceIdentifier
_networkPreviousAttemptCount
_networkProtocolName
_networkRemoteAddresssAndPort
_networkRequestHeaderSize
_networkRequestUri
_networkResponseHeaderSize
_networkTaskDescription
_optionsQualityOfService
_optionsSourceApplicationBundleIdentifier
_optionsSourceApplicationSecondaryIdentifier
_optionsTimeoutIntervalForRequest
_optionsTimeoutIntervalForResource
_networkConnectionReused
_optionsAllowExpensiveAccess
_optionsAllowPowerNapScheduling
_optionsAppleIdContext
_optionsOutOfProcess
_optionsOutOfProcessForceDiscretionary
_optionsTlsPinningRequired
T@"NSString",&,N,V_networkTaskDescription
T@"NSString",&,N,V_networkHostname
T@"NSString",&,N,V_networkRemoteAddresssAndPort
T@"NSString",&,N,V_networkConnectionUuid
TB,N,V_networkConnectionReused
T@"NSString",&,N,V_networkInterfaceIdentifier
T@"NSString",&,N,V_networkProtocolName
TI,N,V_networkRequestHeaderSize
TQ,N,V_networkRequestBodyBytesSent
TI,N,V_networkResponseHeaderSize
TQ,N,V_networkResponseBodyBytesReceived
TI,N,V_networkPreviousAttemptCount
T@"SECC2MPError",&,N,V_networkFatalError
TQ,N,V_networkStatusCode
T@"NSString",&,N,V_networkRequestUri
TQ,N,V_timestampC2Init
TQ,N,V_timestampC2Start
TQ,N,V_timestampC2Now
TQ,N,V_timestampDnsStart
TQ,N,V_timestampDnsEnd
TQ,N,V_timestampTcpStart
TQ,N,V_timestampTcpEnd
TQ,N,V_timestampSslStart
TQ,N,V_timestampRequestStart
TQ,N,V_timestampRequestEnd
TQ,N,V_timestampResponseStart
TQ,N,V_timestampResponseEnd
T@"NSString",&,N,V_optionsQualityOfService
TB,N,V_optionsOutOfProcess
TB,N,V_optionsOutOfProcessForceDiscretionary
TB,N,V_optionsAllowExpensiveAccess
TB,N,V_optionsAllowPowerNapScheduling
TI,N,V_optionsTimeoutIntervalForRequest
TI,N,V_optionsTimeoutIntervalForResource
T@"NSString",&,N,V_optionsSourceApplicationBundleIdentifier
T@"NSString",&,N,V_optionsSourceApplicationSecondaryIdentifier
TB,N,V_optionsAppleIdContext
TB,N,V_optionsTlsPinningRequired
setMachineID:
setModelID:
setDeviceName:
setSerialNumber:
_machineID
_modelID
_deviceName
_serialNumber
TQ,V_epoch
T@"NSString",&,V_machineID
T@"NSString",&,V_modelID
T@"NSString",&,V_deviceName
T@"NSString",&,V_serialNumber
setCkksPushTracingEnabled:
setCkksPushTracingUUID:
setCkksPushReceivedDate:
T@"NSString",&,N
T@"NSDate",&,N
synchronizedGlobalDelegatePortMap
initWithNamedDelegatePort:apsConnectionClass:
resettableSynchronizedGlobalDelegatePortMap:
apsDeliveryQueue
environmentMap
undeliveredUpdates
undeliveredCuttlefishUpdates
initWithNamedDelegatePort:apsConnectionClass:stalePushTimeout:
setUndeliveredUpdates:
reportDroppedPushes:
namedDelegatePort
initWithEnvironmentName:namedDelegatePort:queue:
cuttlefishPushTopics
arrayByAddingObject:
setEnabledTopics:
setZoneUpdateReceiver:
notifyZoneChange:
octagonContainerMap
topic
isTracingEnabled
confirmReceiptForMessage:
clearStalePushNotifications
notificationFromRemoteNotificationDictionary:
notificationType
tracingUUID
initWithUUIDBytes:
zoneUpdateReceiver
resetGlobalDelegatePortMap
connection:didReceivePublicToken:
connection:didReceiveToken:forTopic:identifier:
connection:didReceiveIncomingMessage:
connection:didReceiveMessageForTopic:userInfo:
connection:didSendOutgoingMessage:
connection:didFailToSendOutgoingMessage:error:
connection:didChangeConnectedStatus:
connectionDidReconnect:
connection:channelSubscriptionsFailedWithFailures:
haveStalePushes
apsConnection
setApsConnection:
setClearStalePushNotifications:
setNamedDelegatePort:
setEnvironmentMap:
setUndeliveredCuttlefishUpdates:
setOctagonContainerMap:
_apsConnection
_clearStalePushNotifications
_namedDelegatePort
_environmentMap
_undeliveredUpdates
_undeliveredCuttlefishUpdates
_zoneUpdateReceiver
_octagonContainerMap
T@"CKKSNearFutureScheduler",&,V_clearStalePushNotifications
T@"NSString",&,V_namedDelegatePort
T@"NSMutableDictionary",&,V_environmentMap
T@"NSMutableSet",&,V_undeliveredUpdates
T@"NSMutableSet",&,V_undeliveredCuttlefishUpdates
T@"<CKKSZoneUpdateReceiverProtocol>",&,V_zoneUpdateReceiver
T@"NSMapTable",&,V_octagonContainerMap
T@"<OctagonAPSConnection>",&,V_apsConnection
externalManagedViewForRPC:error:
fetchCloudKitExternallyManagedViewKeyHierarchy:reply:
loadKeys:reply:
initWithAESKey:wrappedAESKey:uuid:parentKeyUUID:keyclass:zoneID:
key:wrappedByKey:uuid:parentKeyUUID:keyclass:zoneID:error:
setKeyMaterialInKeychain:error:
queryKeyMaterialInKeychain:error:
fetchKeyMaterialItemFromKeychain:resave:error:
unwrapSelfWithAESKey:error:
_aessivkey
T@"CKKSWrappedAESSIVKey",&,V_wrappedkey
T@"CKKSAESSIVKey",&,V_aessivkey
newUpload
encodeBool:forKey:
decodeBoolForKey:
setNewUpload:
_newUpload
T@"CKKSKeychainBackedKey",&,V_tlk
T@"CKKSKeychainBackedKey",&,V_classA
T@"CKKSKeychainBackedKey",&,V_classC
TB,V_newUpload
setBaghash:
hasBaghash
baghash
_baghash
T@"NSData",&,N,V_baghash
setWithSet:
initWithPeerID:isPreapproved:status:memberChanges:unknownMachineIDs:osVersion:walrus:
setIdentityIsPreapproved:
setPeerStatus:
setMemberChanges:
setUnknownMachineIDsPresent:
setWalrus:
_identityIsPreapproved
_memberChanges
_unknownMachineIDsPresent
_peerStatus
_walrus
TB,V_identityIsPreapproved
TQ,V_peerStatus
TB,V_memberChanges
TB,V_unknownMachineIDsPresent
T@"TPPBPeerStableInfoSetting",&,V_walrus
initWithEgoPeerID:egoPeerMachineID:status:viablePeerCountsByModelID:peerCountsByMachineID:isExcluded:isLocked:
setEgoStatus:
setEgoPeerMachineID:
setNumberOfPeersInOctagon:
setViablePeerCountsByModelID:
setPeerCountsByMachineID:
setIsExcluded:
setIsLocked:
_isExcluded
_isLocked
_egoStatus
_egoPeerMachineID
_numberOfPeersInOctagon
_viablePeerCountsByModelID
_peerCountsByMachineID
TQ,V_egoStatus
T@"NSString",&,V_egoPeerMachineID
TQ,V_numberOfPeersInOctagon
T@"NSDictionary",&,V_viablePeerCountsByModelID
T@"NSDictionary",&,V_peerCountsByMachineID
TB,V_isExcluded
TB,V_isLocked
initWithPeerID:signingSPKI:encryptionSPKI:secureElementIdentity:viewList:
setSigningSPKI:
setEncryptionSPKI:
_signingSPKI
_encryptionSPKI
T@"NSData",&,V_signingSPKI
T@"NSData",&,V_encryptionSPKI
T@"TPPBSecureElementIdentity",&,V_secureElementIdentity
kind
decodeInt32ForKey:
encodeInt32:forKey:
setRecoveryString:
setKind:
_kind
_recoveryString
T@"NSData",&,V_encryptionKey
T@"NSData",&,V_signingKey
T@"NSString",&,V_recoveryString
Ti,V_kind
tlkRecoveryErrors
initWithSuccessfulKeyUUIDs:totalTLKSharesRecovered:tlkRecoveryErrors:
setSuccessfulKeysRecovered:
setTotalTLKSharesRecovered:
setTlkRecoveryErrors:
_successfulKeysRecovered
_totalTLKSharesRecovered
_tlkRecoveryErrors
T@"NSSet",&,V_successfulKeysRecovered
Tq,V_totalTLKSharesRecovered
T@"NSDictionary",&,V_tlkRecoveryErrors
createOperationToFinishAttemptForClient:clientName:
clientScope
setNextClientStateMachineCycleOperation:
_onqueueStartNextClientStateMachineOperation:
nextClientStateMachineCycleOperation
_onqueueNextClientStateMachineTransition:
stateMachineClientRequests
_onqueuePokeClientStateMachine:
clientName
handleExternalClientStateMachineRequest:client:
isAcceptorWaitingForFirstMessage
notifyContainerChange
setStateConditions:
setClientScope:
setStateMachineClientRequests:
_clientName
_stateConditions
_clientScope
_nextClientStateMachineCycleOperation
_stateMachineClientRequests
T@"NSString",&,V_clientScope
T@"CKKSResultOperation",&,V_nextClientStateMachineCycleOperation
T@"NSMutableArray",&,V_stateMachineClientRequests
T@"NSString",R,V_clientName
T@"NSMutableDictionary",&,V_stateConditions
zeroKey
size
encodeBytes:length:forKey:
decodeBytesForKey:returnedLength:
doSIV:nonce:text:buffer:bufferLength:authenticatedData:error:
initWithBytesNoCopy:length:freeWhenDone:
keyMaterial
addInternalTestConfig:
setUserDefaultTestName:
internalTestConfigsCount
clearInternalTestConfigs
internalTestConfigAtIndex:
internalTestConfigType
hasProductName
hasProductType
hasProductVersion
hasProductBuild
setIsAppleInternal:
setHasIsAppleInternal:
hasIsAppleInternal
hasProcessName
hasProcessVersion
hasProcessUuid
hasUserDefaultTestName
productBuild
processUuid
userDefaultTestName
internalTestConfigs
setInternalTestConfigs:
_internalTestConfigs
_processName
_processUuid
_processVersion
_productBuild
_productName
_productType
_productVersion
_userDefaultTestName
_isAppleInternal
T@"NSString",&,N,V_productName
T@"NSString",&,N,V_productType
T@"NSString",&,N,V_productVersion
T@"NSString",&,N,V_productBuild
TB,N,V_isAppleInternal
T@"NSString",&,N,V_processName
T@"NSString",&,N,V_processVersion
T@"NSString",&,N,V_processUuid
T@"NSString",&,N,V_userDefaultTestName
T@"NSMutableArray",&,N,V_internalTestConfigs
setOperationGroupId:
setOperationGroupName:
hasOperationGroupId
hasOperationGroupName
setOperationGroupTriggered:
setHasOperationGroupTriggered:
hasOperationGroupTriggered
operationGroupId
operationGroupName
operationGroupTriggered
_operationGroupId
_operationGroupName
_operationGroupTriggered
T@"NSString",&,N,V_operationGroupId
T@"NSString",&,N,V_operationGroupName
TB,N,V_operationGroupTriggered
lastCKFetchError
T@"CKKSZoneChangeFetcher",W,V_owner
createSuccesfulFetchDependency
maybeCreateNewFetch
fetchScheduler
requestFetchDueToAPNS:
strongClientMap
successfulFetchDependency
setNewRequests:
newRequests
inflightFetchDependency
currentFetch
currentProcessResult
_onqueueCreateNewFetch
maybeCreateNewFetchOnQueue
setInflightFetchDependency:
inflightFetchDependencies
setSuccessfulFetchDependency:
setCurrentFetchReasons:
holdOperation
setLastCKFetchError:
setCurrentFetch:
setCurrentProcessResult:
setHoldOperation:
requestSuccessfulFetch:
holdFetchesUntil:
setFetchScheduler:
setInflightFetchDependencies:
_newRequests
_lastCKFetchError
_fetchScheduler
_currentFetch
_currentProcessResult
_successfulFetchDependency
_inflightFetchDependencies
_inflightFetchDependency
_holdOperation
T@"NSError",&,V_lastCKFetchError
T@"NSMapTable",&,V_clientMap
T@"CKKSFetchAllRecordZoneChangesOperation",&,V_currentFetch
T@"CKKSResultOperation",&,V_currentProcessResult
T@"NSMutableSet",&,V_currentFetchReasons
T@"NSMutableSet",&,V_apnsPushes
TB,V_newRequests
T@"CKKSZoneChangeFetchDependencyOperation",&,V_successfulFetchDependency
T@"NSMutableSet",&,V_inflightFetchDependencies
T@"CKKSZoneChangeFetchDependencyOperation",&,V_inflightFetchDependency
T@"CKKSResultOperation",&,V_holdOperation
T@"CKKSNearFutureScheduler",&,V_fetchScheduler
persistentReferenceUpgrader
setPersistentReferenceUpgrader:
_persistentReferenceUpgrader
T@"CKKSNearFutureScheduler",&,V_persistentReferenceUpgrader
dropAllKeys
_onQueueDropClassAKeys
_onQueueDropAllKeys
writeKey:ForKeyclass:withKeybag:keySpecifier:database:error:
readKeyDataForClass:fromDb:actualKeyclass:oldFormatData:newFormatData:error:
validateWrappedKey:forKeyClass:actualKeyClass:keybag:keySpecifier:error:
cachingEnabled
fetchKeyForClass:fromDb:keybag:specifier:allowWrites:error:
newKeyForKeyclass:withKeybag:keySpecifier:database:error:
dropClassAKeys
keysDict
setKeysDict:
keybagNotificationToken
setKeybagNotificationToken:
_keybagNotificationToken
_keysDict
T@"NSMutableDictionary",&,V_keysDict
Ti,V_keybagNotificationToken
semaphore
chain
setChain:
setSemaphore:
_semaphore
_chain
T@"NSObject<OS_dispatch_semaphore>",&,V_semaphore
T@"CKKSCondition",&,V_chain
setEventName:
setAttributes:
supportedAttributeClasses
generateError:
timeIntervalSinceReferenceDate
convertTimeIntervalToServerTime:
setMetricValue:forKey:
_eventName
T@"NSString",&,V_eventName
T@"NSMutableDictionary",&,V_attributes
intendedEmptyIdentity
hasUuid
setCertCached:
hasCertCached
setLastCloudServicesTriggerTime:
setHasLastCloudServicesTriggerTime:
setHasLastEscrowAttemptTime:
setHasUploadCompleted:
setHasUploadRetries:
hasUploadRetries
setHasTriggerRequestTime:
hasTriggerRequestTime
hasSerializedReason
triggerRequestTime
serializedReason
_lastCloudServicesTriggerTime
_lastEscrowAttemptTime
_triggerRequestTime
_uploadRetries
_serializedPrerecord
_serializedReason
_certCached
_uploadCompleted
TB,N,V_certCached
T@"NSData",&,N,V_serializedPrerecord
TQ,N,V_lastCloudServicesTriggerTime
TQ,N,V_lastEscrowAttemptTime
TB,N,V_uploadCompleted
TQ,N,V_uploadRetries
TQ,N,V_triggerRequestTime
T@"NSData",&,N,V_serializedReason
monitors
_onqueueLoadOrCreateAccountMetadata:
dateWithTimeIntervalSince1970:
asyncNotifyAccountStateChanges:from:
tag1
notifyQueue
persistNewEgoPeerID:error:
_onqueuePersistAccountChanges:error:
setNotifyQueue:
setMonitors:
_notifyQueue
_monitors
T@"NSObject<OS_dispatch_queue>",&,V_notifyQueue
T@"NSMutableSet",&,V_monitors
setStateHolder:
setFlagHandler:
setSosAdapter:
setAuthKitAdapter:
setDeviceInformationAdapter:
setEscrowRequestClass:
setNotifierClass:
_stateHolder
T@"OTCuttlefishAccountStateHolder",&,V_stateHolder
T@"<OctagonStateFlagHandler>",&,V_flagHandler
T@"<OTSOSAdapter>",&,V_sosAdapter
T@"<OTAuthKitAdapter>",&,V_authKitAdapter
T@"<OTDeviceInformationAdapter>",&,V_deviceInformationAdapter
T@"CKKSKeychainView",R,W,V_ckks
T#,&,V_escrowRequestClass
T#,&,V_notifierClass
setServiceName:
setPartition:
setServiceBuild:
setServiceInstance:
hasServiceName
hasPartition
hasServiceBuild
hasServiceInstance
serviceName
partition
serviceBuild
serviceInstance
_partition
_serviceBuild
_serviceInstance
_serviceName
T@"NSString",&,N,V_serviceName
T@"NSString",&,N,V_partition
T@"NSString",&,N,V_serviceBuild
T@"NSString",&,N,V_serviceInstance
initWithZoneModificationOperation:zoneSubscriptionOperation:
setZoneModificationOperation:
setZoneSubscriptionOperation:
zonesToCreate
subscriptionsToSubscribe
zoneIDsToDelete
setSavedRecordZones:
setDeletedRecordZoneIDs:
setSavedSubscriptions:
deletedSubscriptionIDs
setDeletedSubscriptionIDs:
_zoneModificationOperation
_zoneSubscriptionOperation
_zonesToCreate
_subscriptionsToSubscribe
_zoneIDsToDelete
_savedRecordZones
_deletedRecordZoneIDs
_savedSubscriptions
_deletedSubscriptionIDs
T@"CKKSResultOperation",&,V_zoneModificationOperation
T@"CKKSResultOperation",&,V_zoneSubscriptionOperation
T@"NSMutableArray",R,V_zonesToCreate
T@"NSMutableArray",R,V_subscriptionsToSubscribe
T@"NSMutableArray",R,V_zoneIDsToDelete
T@"NSArray",&,V_savedRecordZones
T@"NSArray",&,V_deletedRecordZoneIDs
T@"NSArray",&,V_savedSubscriptions
T@"NSArray",&,V_deletedSubscriptionIDs
launchOperations
pendingOperations
setPendingOperations:
_onqueueCreatePendingObjects
initWithZoneID:subscriptionID:
inflightOperations
setInflightOperations:
createModifyZonesOperation:
createModifySubscriptionsOperation:
initWithRecordZonesToSave:recordZoneIDsToDelete:
inspectErrorForRetryAfter:
setNetworkFailure:
setModifyRecordZonesCompletionBlock:
networkFailure
initWithSubscriptionsToSave:subscriptionIDsToDelete:
setModifySubscriptionsCompletionBlock:
createZone:
deleteZone:
_networkFailure
_cloudkitRetryAfter
_pendingOperations
_inflightOperations
T@"CKKSZoneModifyOperations",&,V_pendingOperations
T@"CKKSZoneModifyOperations",&,V_inflightOperations
TB,V_networkFailure
T@"CKDatabase",R,V_database
T@"CKKSNearFutureScheduler",R,V_cloudkitRetryAfter
rpcAddCredential:withAccessPolicy:reply:
rpcFetchPasswordCredentialForPersistentIdentifier:reply:
rpcLookupCredentialsForServiceIdentifiers:reply:
rpcRemoveCredentialWithPersistentIdentifier:reply:
rpcReplaceOldCredential:withNewCredential:reply:
rpcReplaceCredential:withNewCredential:reply:
initWithKeychain:xpcConnection:
_keychain
accessibility
sharingPolicy
primaryServiceIdentifier
supplementaryServiceIdentifiers
username
localizedLabel
localizedDescription
customAttributes
_cachedPassword
_lookupKey
serviceID
keyclassForAccessPolicy:
passwordCredentialForItem:error:
passwordCredentialForItemMetadata:error:
setPassword:
_initWithUsername:primaryServiceIdentifier:supplementaryServiceIdentifiers:
_setCreationDate:
_setModificationDate:
setLocalizedLabel:
setLocalizedDescription:
_setPersistentIdentifier:
setCustomAttributes:
_clientAccessGroups
T@"NSArray",R,V_clientAccessGroups
URLForResource:withExtension:
triggerCloudServicesPasscodeRequest:serializedReason:error:
beginHSA2PasscodeRequest:uuid:reason:error:
cert
setDate:
counter
setCounter:
_counter
_date
T@"NSDate",&,V_date
TI,V_counter
dependantLaunches
launchOperation
events
firstLaunch
eventsRelativeTime
setLaunched:
reportMetric
mainQueue
sortUsingComparator:
addDependantLaunch:child:
setEvents:
setLaunchOperation:
setDependantLaunches:
_firstLaunch
_launched
_events
_launchOperation
_dependantLaunches
TB,V_launched
T@"NSMutableDictionary",&,V_events
T@"NSBlockOperation",&,V_launchOperation
T@"NSMutableDictionary",&,V_dependantLaunches
resetReason
setResetReason:
Tq,V_resetReason
fetchRequestWithEntityName:
T@"NSString",C,D,N
Ti,D,N
T@"NSSet",&,D,N
T@"NSData",&,D,N
T@"NSUUID",C,D,N
T@"SecCDKeychainManagedItemType",&,D,N
T@"SecCDKeychainManagedAccessControlEntity",&,D,N
items
itemTypeName
TB,D,N
performBackups
performRingUpdates
fullPeerInfo
peerInfo
factory
circle_transport
ensureOctagonPeerKeys:
initWithDictionary:
setGestalt:
initWithRetirees:fpi:circle:departureCode:peerExpansion:
setTrust:
setFactory:
setIsListeningForSync:
setAccountPrivateKey:
set_password_tmp:
setUser_private_timer:
setLock_notification_token:
setChange_blocks:
setKey_transport:
setCircle_transport:
setCk_storage:
setKvs_message_transport:
setCircle_rings_retirements_need_attention:
setEngine_peer_state_needs_repair:
setKey_interests_need_updating:
setNeed_backup_peers_created_after_backup_key_set:
setBackup_key:
setDeviceID:
setWaitForInitialSync_blocks:
setAccountKeyIsTrusted:
setAccountKeyDerivationParameters:
setAccountKey:
setPreviousAccountKey:
setPeerPublicKey:
setSaveBlock:
sosIsEnabled
ensureFactoryCircles
setAccountIsChanging:
setSosTestmode:
setConsolidateKeyInterest:
setupStateMachine
gestalt
trustedCircle
expansion
accountKeyIsTrusted
accountKey
syncWaitAndFlush:
account
kvs_message_transport
SOSTransportMessageGetEngine
triggerBackupForPeers:
triggerRingUpdate
sosEnable
setBool:forKey:
sosEnableValidityCheck
sosDisable
saveBlock
encodedData:
peerPublicKey
valueUnionWith:valuesToUnion:
valueSubtractFrom:valuesToSubtract:
initWithGestalt:factory:
user_private_timer
lock_notification_token
key_transport
setNotifyCircleChangeOnExit:
setNotifyViewChangeOnExit:
setNotifyBackupOnExit:
setOctagonSigningFullKeyRef:
setOctagonEncryptionFullKeyRef:
getCircleStatusOnly:
getCircleStatus:
retirees
cleanupAfterPeer:circleTransport:seconds:circle:cleanupPeer:err:
addiCloudIdentity:key:err:
change_blocks
purgeIdentity
setRetirees:
postRetirement:peer:err:
flushChanges:
kvssendDebugInfo:debug:err:
modifyCircle:err:action:
setDepartureCode:
departureCode
isInCircle:
ensureFullPeerAvailable:err:
getCircle:
accountPrivateKey
sosIsEnabledString
isInCircleOnly:
updateV2Dictionary:v2:
accessGroupToNextMessageToSend
SOSTransportMessageSendMessage:id:messageToSend:err:
accessGroupRateLimitState
accessGroupToTimer
urlForSOSAccountSettings
setAccountConfiguration:
setStateMachineQueue:
stateMachineQueue
addBackupFlag
setPerformBackups:
addRingUpdateFlag
setPerformRingUpdates:
accountConfiguration
pendingBackupPeers
ringUpdateFlag
setPendingBackupPeers:
consolidateKeyInterest
setRingUpdateFlag:
clearPendingBackupPeers
_onQueueRecordRetiredPeersInCircle
_onQueueEnsureInBackupRings:
performRingUpdate
performBackup
ghostBustGetRampSettings
userPublicKey:
kvsPerformanceCounters:
rateLimitingPerformanceCounters:
stashedCredentialPublicKey:
assertStashedAccountCredential:
validatedStashedAccountCredential:
stashAccountCredential:complete:
ghostBust:complete:
ghostBustPeriodic:complete:
ghostBustTriggerTimed:complete:
ghostBustInfo:
iCloudIdentityStatus_internal:
iCloudIdentityStatus:
accountStatus:
myPeerInfo:
circleHash:
circleJoiningBlob:complete:
joinCircleWithBlob:version:complete:
initialSyncCredentials:complete:
importInitialSyncCredentials:complete:
rpcTriggerSync:complete:
getWatchdogParameters:
setWatchdogParmeters:complete:
rpcTriggerBackup:complete:
rpcTriggerRingUpdate:
removeV0Peers:
sosIsEnabledCB:
hasPeerInfo
ensureOctagonPeerKeys
startStateMachine
ghostBustGetDate
ghostBustFollowup
ghostBustSchedule
ghostBustCheckDate
sosEvaluateIfNeeded
flattenToSaveBlock
previousAccountKey
backup_key
deviceID
_password_tmp
isListeningForSync
ck_storage
circle_rings_retirements_need_attention
engine_peer_state_needs_repair
key_interests_need_updating
need_backup_peers_created_after_backup_key_set
waitForInitialSync_blocks
accountKeyDerivationParameters
notifyCircleChangeOnExit
notifyViewChangeOnExit
notifyBackupOnExit
octagonSigningFullKeyRef
octagonEncryptionFullKeyRef
accountIsChanging
sosTestmode
_isListeningForSync
_circle_rings_retirements_need_attention
_engine_peer_state_needs_repair
_key_interests_need_updating
_need_backup_peers_created_after_backup_key_set
_accountKeyIsTrusted
_notifyCircleChangeOnExit
_notifyViewChangeOnExit
_notifyBackupOnExit
_accountIsChanging
_sosTestmode
_consolidateKeyInterest
_lock_notification_token
_accountKey
_accountPrivateKey
_previousAccountKey
_peerPublicKey
_gestalt
_backup_key
_deviceID
_trust
_user_private_timer
_factory
__password_tmp
_key_transport
_circle_transport
_kvs_message_transport
_ck_storage
_change_blocks
_waitForInitialSync_blocks
_accountKeyDerivationParameters
_saveBlock
_octagonSigningFullKeyRef
_octagonEncryptionFullKeyRef
_stateMachineQueue
_accountConfiguration
_performBackups
_performRingUpdates
T@"NSObject<OS_dispatch_queue>",&,V_stateMachineQueue
T@"CKKSPBFileStorage",&,V_accountConfiguration
T@"CKKSNearFutureScheduler",&,V_performBackups
T@"CKKSNearFutureScheduler",&,V_performRingUpdates
T@"NSDictionary",&,N,V_gestalt
T@"NSData",&,N,V_backup_key
T@"NSString",&,N,V_deviceID
T@"SOSAccountTrustClassic",&,N,V_trust
T@"NSObject<OS_dispatch_queue>",&,N,V_queue
T@"NSObject<OS_dispatch_source>",&,N,V_user_private_timer
T^{__SecKey={__CFRuntimeBase=QAQ}^{__SecKeyDescriptor}^v},N,V_accountPrivateKey
T^{SOSDataSourceFactory=^?^?^?},N,V_factory
T@"NSData",&,N,V__password_tmp
TB,N,V_isListeningForSync
Ti,N,V_lock_notification_token
T@"CKKeyParameter",&,N,V_key_transport
T@"SOSKVSCircleStorageTransport",&,N,V_circle_transport
T@"SOSMessageKVS",&,N,V_kvs_message_transport
T@"SOSCKCircleStorage",&,N,V_ck_storage
TB,N,V_circle_rings_retirements_need_attention
TB,N,V_engine_peer_state_needs_repair
TB,N,V_key_interests_need_updating
TB,N,V_need_backup_peers_created_after_backup_key_set
T@"NSMutableArray",&,N,V_change_blocks
T@"NSMutableDictionary",&,N,V_waitForInitialSync_blocks
T@"NSData",&,N,V_accountKeyDerivationParameters
TB,N,V_accountKeyIsTrusted
T^{__SecKey={__CFRuntimeBase=QAQ}^{__SecKeyDescriptor}^v},N,V_accountKey
T^{__SecKey={__CFRuntimeBase=QAQ}^{__SecKeyDescriptor}^v},N,V_previousAccountKey
T^{__SecKey={__CFRuntimeBase=QAQ}^{__SecKeyDescriptor}^v},N,V_peerPublicKey
T@?,C,V_saveBlock
T^{__OpaqueSOSPeerInfo=},R,N
T^{__OpaqueSOSFullPeerInfo=},R,N
T@"NSString",R,N
TB,N,V_notifyCircleChangeOnExit
TB,N,V_notifyViewChangeOnExit
TB,N,V_notifyBackupOnExit
T@"NSUserDefaults",&,N,V_settings
T^{__SecKey={__CFRuntimeBase=QAQ}^{__SecKeyDescriptor}^v},N,V_octagonSigningFullKeyRef
T^{__SecKey={__CFRuntimeBase=QAQ}^{__SecKeyDescriptor}^v},N,V_octagonEncryptionFullKeyRef
TB,N,V_accountIsChanging
TB,N,V_sosTestmode
TB,N,V_consolidateKeyInterest
kvsSendOfficialDSID:err:
resetCircleToOffering:userKey:err:
setFullPeerInfo:
getUUIDBytes:
copyRing:err:
copyPeerSetForView:
setTrustedCircle:
initWithInt:
SOSTransportKeyParameterPublishCloudParameters:data:err:
initWithAccount:
initWithAccount:andCircleName:
initWithAccount:andName:
SOSTransportMessageSendMessages:pm:err:
initWithArray:
requestSyncWithPeers:
SOSTransportMessageSyncWithPeers:p:err:
addPendingBackupPeers:
pendingBackupPeersCount
pendingBackupPeersAtIndex:
pendingBackupPeersType
setHasRingUpdateFlag:
hasRingUpdateFlag
_pendingBackupPeers
_ringUpdateFlag
T@"NSMutableArray",&,N,V_pendingBackupPeers
TB,N,V_ringUpdateFlag
generationSignatureUpdateWith:key:
expireRetirementRecords:err:
SOSTransportMessageCleanupAfterPeerMessages:peers:err:
cleanupRetirementTickets:circle:time:err:
accountFromDER:end:factory:error:
getDEREncodedSize:err:
encodeToDER:err:start:end:
setExpansion:
getRings:
handleUpdateRing:prospectiveRing:transport:userPublicKey:writeUpdate:err:
currentTrustBitmask
initialViews
setAccount:
updateSOSCircleCachedStatus
setInitialInCircle:
setInitialTrusted:
setInitialCirclePeerCount:
initialInCircle
setInitialUnsyncedViews:
setInitialKeyParameters:
setInitialViews:
setPeersToRequestSync:
quiet
finish
peersToRequestSync
initialID
initialUnsyncedViews
initialCirclePeerCount
initialKeyParameters
initialTrusted
initWithAccount:quiet:
restart
requestSyncWith:
setInitialID:
setQuiet:
_initialInCircle
_initialTrusted
_quiet
_initialCirclePeerCount
_account
_initialViews
_initialUnsyncedViews
_initialID
_initialKeyParameters
_peersToRequestSync
TB,V_initialInCircle
T@"NSSet",&,V_initialViews
T@"NSSet",&,V_initialUnsyncedViews
T@"NSString",&,V_initialID
TB,V_initialTrusted
T@"NSData",&,V_initialKeyParameters
TI,V_initialCirclePeerCount
TB,V_quiet
T@"NSMutableSet",&,V_peersToRequestSync
T@"SOSAccount",&,V_account
performTransaction:action:
performTransaction_Locked:action:
performTransaction_Locked:
updateCircleFromRemote:newCircle:err:
getDataSourceEngine:
updateFullPeerInfo:minimum:excluded:
updateViewSets:enabled:disabled:
ensureExpansion:
clearValueFromExpansion:err:
getValueFromExpansion:err:
setValueInExpansion:value:err:
setRings:
forEachRing:
resetRing:ringName:err:
resetAllRings:err:
checkForRings:
setRing:ringName:err:
kvsRingPostRing:ring:err:
addRingDictionary
valueSetContainsValue:value:
pendEnableViewSet:
resetAccountToEmpty:transport:err:
initWithSet:
viewStatus:name:err:
isSyncingV0
activeValidInCircle:err:
copySortedPeerArray:action:
hasCircle:
forEachCirclePeerExceptMe:
trustClassic
updateGestalt:newGestalt:
updateView:name:code:err:
matchOTUserViewSettings:userViewsEnabled:err:
addSyncablePeerBlock:dsName:change:
copyPeerWithID:err:
isAccountIdentity:err:
copyPeerSetMatching:
copyPeersToListenTo:err:
peerSignatureUpdate:err:
updatePeerInfo:description:err:update:
removeInvalidApplications:userPublic:
upgradeiCloudIdentity:privKey:
copyPreApprovedHSA2Info
addEscrowToPeerInfo:err:
syncWithPeers:peerIDs:err:
requestSyncWithAllPeers:key:err:
postDebugScope:scope:err:
copyDeviceKey:
removeIncompleteiCloudIdentities:privKey:err:
clientPing:
resetRingDictionary
getTransportType
getAccount
postCircle:circleData:err:
handleRetirementMessages:err:
handleCircleMessagesAndReturnHandledCopy:err:
onqueueFreeHashBuff
hasChanged:
currentHashBuf
isUseful
accountIsHSA2
initWithActiveMIDS:
activeMIDs:
midIsValidInList:
serialIsValidInList:
updateMIDInPeerInfo:
peerinfoHasMID:
midList
setMidList:
setMachineIDs:
serialNumbers
setSerialNumbers:
_midList
_machineIDs
_serialNumbers
T@"NSSet",&,N,V_midList
T@"NSSet",&,N,V_machineIDs
T@"NSSet",&,N,V_serialNumbers
SOSTransportKeyParameterGetAccount:
SOSTransportKeyParameterGetTransportType:err:
SOSTransportKeyParameterKVSAppendKeyInterests:ak:firstUnLock:unlocked:err:
kvsAppendKeyInterest:firstUnlock:unlocked:err:
kvsAppendRingKeyInterest:firstUnlock:unlocked:err:
kvsAppendDebugKeyInterest:firstUnlock:unlocked:err:
SOSTransportMessageGetAccount
SOSTransportMessageGetTransportType
SOSTransportMessageKVSAppendKeyInterest:ak:firstUnlock:unlocked:err:
SOSTransportKeyParameterHandleNewAccount:acct:
SOSTransportKeyParameterHandleKeyParameterChanges:data:err:
SOSTransportMessageHandlePeerMessageReturnsHandledCopy:peerMessages:err:
SOSTransportMessageGetCircleName
SOSTransportMessageFlushChanges:err:
getDate
followup
schedule
checkDate
initWithDefaults:dateDescription:earliest:latest:
defaults
setDefaults:
dateDescription
setDateDescription:
earliestDate
setEarliestDate:
latestDate
setLatestDate:
_defaults
_dateDescription
_earliestDate
_latestDate
T@"NSUserDefaults",&,N,V_defaults
T@"NSString",&,N,V_dateDescription
Td,N,V_earliestDate
Td,N,V_latestDate
thisDeviceStatusInCircle:peer:
checkForSponsorshipTrust:
hasLeft
iCloudCheckEventHandle:
fixICloudIdentities:circle:
handleUpdateCircle:transport:update:err:
updateCircle:newCircle:err:
iCloudCleanerHandle:
ensureCircle:name:err:
ghostBustingOK:updatingTo:
leaveCircleWithAccount:err:
leaveCircle:err:
resetToOffering:key:err:
joinCircle:userKey:useCloudPeer:err:
circleGetTypeID
T@"SOSAccount",&,N,Vaccount
setPending_changes:
setCircleName:
circleName
pending_changes
kvsSendPendingChanges:
kvsAddToPendingChanges:data:
getCircleName
kvsSendAccountChangedWithDSID:err:
kvsRingFlushChanges:
T@"NSMutableDictionary",&,N,Vpending_changes
T@"NSString",&,N,VcircleName
T@"SOSAccount",&,Vaccount
cachedOctagonEncryptionKey
setCachedOctagonEncryptionKey:
cachedOctagonSigningKey
setCachedOctagonSigningKey:
_cachedOctagonSigningKey
_cachedOctagonEncryptionKey
T@"NSMutableDictionary",&,N,Vexpansion
T^{__OpaqueSOSFullPeerInfo=},N,VfullPeerInfo
T^{__OpaqueSOSCircle=},N,VtrustedCircle
T@"NSMutableSet",&,N,Vretirees
Ti,N,VdepartureCode
T^{__SecKey={__CFRuntimeBase=QAQ}^{__SecKeyDescriptor}^v},V_cachedOctagonSigningKey
T^{__SecKey={__CFRuntimeBase=QAQ}^{__SecKeyDescriptor}^v},V_cachedOctagonEncryptionKey
SOSTransportMessageCalculateNextTimer:rtt:peerid:
SOSTransportMessageUpdateRTTs:
SOSTransportMessageUpdateLastMessageSentTimetstamp:peer:
SOSTransportMessageHandlePeerMessage:id:cm:err:
SOSTransportMessageSendMessageIfNeeded:circleName:pID:err:
T^v,Vengine
T@"NSString",&,VcircleName
stateForAccessGroup:
initWithAccessGroup:
initWithPeer:
setUpConfigForPeer
setAccessGroupRateLimitState:
setAccessGroupToTimer:
setAccessGroupToNextMessageToSend:
_accessGroupRateLimitState
_accessGroupToTimer
_accessGroupToNextMessageToSend
T@"NSString",&,VpeerID
T@"NSMutableDictionary",&,V_accessGroupRateLimitState
T@"NSMutableDictionary",&,V_accessGroupToTimer
T@"NSMutableDictionary",&,V_accessGroupToNextMessageToSend
initSOSConnectionWithConnection:account:
initSOSClientWithAccount:
internalSOSClient
checkEntitlement:
initWithDomain:code:userInfo:
SOSTransportMessageGetTransportType:err:
T^{__CFDictionary=},Vpending_changes
haveConfirmedOctagonKeys
randomPermanentFullECKey:name:error:
getMyFullPeerInfo
fullPeerInfoVerify:err:
hasFullPeerInfo:
CopyAccountIdentityPeerInfo
isMyPeerActive:
SecdWatchdog
SecOSTransactionHolder
SecuritydXPCProtocol
SecuritydXPCServer
LocalSecuritydXPCServer
NSObject
SecuritydXPCServerListener
NSXPCListenerDelegate
MockAKSRefKey
NSCopying
SecMockAKS
MockAKSRefKeyObject
MockAKSOptionalParameters
SecABC
compactDescription
SOSDictionaryFormat
FindAndRemove
Emptiness
HasElements
Stringizing
filledAndClipped
SecTapToRadar
KeychainItemUpgradeRequestServer
CuttlefishXPCWrapper
TrustedPeersHelperProtocol
OTModifyUserControllableViewStatusOperation
OctagonStateTransitionOperationProtocol
CKKSSerializedKey
OTAccountMetadataClassC
OTFetchCKKSKeysOperation
OTLocalResetOperation
UsefulConstructors
OTAccountMetadataClassCAccountSettings
CKKSSQLResult
4 0@
CKKSSQLDatabaseObject
CKKSSQLWhereColumn
CKKSSQLWhereValue
CKKSSQLWhereIn
CKKSRateLimiter
NSSecureCoding
NSCoding
EscrowRequestController
OctagonStateMachineEngine
OTDeviceInformationActualAdapter
OTDeviceInformationAdapter
SecAKSObjCWrappers
CKKSAccountStateTracker
CKKSCloudKitAccountStateTrackingProvider
CKKSOctagonStatusMemoizer
SOSAccountStatus
OTCliqueStatusWrapper
EscrowRequestServer
EscrowRequestXPCProtocol
SecEscrowRequestable
SecCDKeychainItemWrappedSecretData
SecAKSRefKey
SecCDKeychain
SecCDKeychainItemMetadata
SecCDKeychainItem
SecCDKeychainLookupTuple
SecCDKeychainItemType
SecCDKeychainAccessControlEntity
OctagonSelfPeer
CKKSSelfPeer
CKKSPeer
OctagonCKKSPeerAdapter
CKKSPeerProvider
OTCheckHealthOperation
CKKSPowerCollection
OTManager
OTControlProtocol
CKKSGroupOperation
CKKSManifestLeafRecord
CKKSManifestPendingLeafRecord
CKKSEgoManifestLeafRecord
CKKSItem
CKKSZoneExtras
CKKSTranslation
CKKSItemEncrypter
CKKSDeleteCKZoneOperation
OTTriggerEscrowUpdateOperation
OTDetermineCDPBitStatusOperation
CKKSOutgoingQueueEntry
CKKSIncomingQueueEntry
SecDbBackupMetadataClassKey
SFKeychainControl
SFKeychainControlManager
CKKSIncomingQueueOperation
CKKSOutgoingQueueOperation
OTVouchWithBottleOperation
OTJoinSOSAfterCKKSFetchOperation
CKKSTLKShare
SECC2MPGenericEventMetric
CKKSZoneStateEntry
EscrowRequestXPCServer
OTUpdateTrustedDeviceListOperation
SECC2MPGenericEventMetricValue
SecDbBackupBag
OTEnsureOctagonKeyConsistency
RateLimiter
CKKSCreateCKZoneOperation
OTSOSActualAdapter
OTSOSAdapter
OTSOSMissingAdapter
OTSOSAdapterHelpers
OTEstablishOperation
CKKSHealKeyHierarchyOperation
CKKSCurrentItemPointer
CKKSOperationDependencies
CKKSLocalSynchronizeOperation
CKKSReloadAllItemsOperation
OTPrepareOperation
KeychainSupport
SecDbBackupRecoverySet
CKKSCurrentKeyPointer
CKKSCurrentKeySet
OTSetCDPBitOperation
SECC2MPMetric
CKKSControlProtocol
CKKSControlServer
CKKSUpdateDeviceStateOperation
SecDbKeychainSerializedMetadata
CKKSNearFutureScheduler
CKKSMirrorEntry
OctagonFlags
OctagonFlagContainer
OctagonFlagSetter
OctagonFlagClearer
OTSetRecoveryKeyOperation
OTCreateCustodianRecoveryKeyOperation
OTCreateInheritanceKeyOperation
OTStoreInheritanceKeyOperation
CKKS
CKKSSelves
CKKSActualPeer
CKKSRemotePeerProtocol
CKKSSOSPeer
CKKSSOSPeerProtocol
CKKSSOSSelfPeer
SECC2MPGenericEvent
SecDbBackupKeyClassSigningKey
CKKSSynchronizeOperation
CKKSSecDbAdapter
CKKSDatabaseProviderProtocol
CKKSProvideKeySetOperation
CKKSKeySetProviderOperationProtocol
CKKSKeySetContainerProtocol
CKKSCKRecordHolder
EscrowRequestPerformEscrowEnrollOperation
CKKSScanLocalItemsOperation
OTJoinWithVoucherOperation
CKKSLocalResetOperation
CKKSCloudKitFetchRequest
CKKSCloudKitDeletion
CKKSFetchAllRecordZoneChangesOperation
OctagonStateTransitionPathStep
OctagonStateTransitionPath
OctagonStateTransitionWatcher
OctagonStateTransitionWatcherProtocol
OctagonStateMultiStateArrivalWatcher
CKKSNotifyPostNotifier
CKKSNotifier
OTResetCKKSZonesLackingTLKsOperation
OTRemoveCustodianRecoveryKeyOperation
OTUpdateTPHOperation
OTSOSUpdatePreapprovalsOperation
OTVouchWithRecoveryKeyOperation
SecDbBackupWrappedKey
SecDbBackupManager
OTCuttlefishContext
OTCuttlefishAccountStateHolderNotifier
OctagonCuttlefishUpdateReceiver
OTAuthKitAdapterNotifier
CKKSCloudKitAccountStateListener
CKKSPeerUpdateListener
OTDeviceInformationNameUpdateListener
OctagonPendingFlag
SECC2MPInternalTestConfig
OTPreflightVouchWithCustodianRecoveryKeyOperation
OTVouchWithCustodianRecoveryKeyOperation
OTPrepareAndRecoverTLKSharesForInheritancePeerOperation
SOSEnginePeerMessageCallBackInfo
CKKSKey
CKKSViewManager
OTFetchViewsOperation
SecDbKeychainAKSWrappedKey
SecDbKeychainMetadata
SecDbKeychainSecretData
SecDbKeychainItemV7
CKKSReachabilityTracker
OctagonStateMachine
OctagonStateFlagHandler
OctagonStateOnqueuePendingFlagHandler
CKKSListenerCollection
OTSOSUpgradeOperation
CKKSResultOperation
CKKSManifest
CKKSPendingManifest
CKKSEgoManifest
CKKSManifestInjectionPointHelper
CKKSAccountInfo
CKKSPeerProviderState
OTRamp
OTLeaveCliqueOperation
OTAuthKitActualAdapter
OTAuthKitAdapter
OctagonXPCEntitlementChecker
OctagonControlServer
OTPersonaActualAdapter
OTPersonaAdapter
OTUploadNewCKKSTLKsOperation
SecDbKeychainSerializedAKSWrappedKey
SecMetrics
NSURLSessionDelegate
CKKSUsefulPrintingOperation
CKKSUsefulConstructorOperation
CKKSAnalytics
SECC2MPError
OTTooManyPeersActualAdapter
OTTooManyPeersAdapter
EscrowAttemptTimeout
CKKSDeviceStateEntry
SECC2MPCloudKitOperationInfo
OTClientVoucherOperation
CKKSFixups
CKKSFixupRefetchAllCurrentItemPointers
CKKSFixupFetchAllTLKShares
CKKSFixupLocalReloadOperation
CKKSFixupResaveDeviceStateEntriesOperation
OTStates
OTRemovePeersOperation
CKKSCloudKitClassDependencies
SECC2MPCloudKitInfo
CKKSUpdateCurrentItemPointerOperation
CKKSNewTLKOperation
OTDetermineHSA2AccountStatusOperation
OctagonCheckTrustStateOperation
OTFollowup
Testing
CKKSMemoryKeyCache
CKKSLockStateTracker
CKKSActualLockStateProvider
CKKSLockStateProviderProtocol
SecC2DeviceInfo
SecDbKeychainSerializedSecretData
SecDbKeychainSerializedMetadataKey
CKKSKeychainView
CKKSChangeFetcherClient
OTEpochOperation
SecDbKeychainSerializedItemV7
CKKSPBFileStorage
CKKSProcessReceivedKeysOperation
CKKSTLKShareRecord
CKKSKeychainViewState
CKKSHealTLKSharesOperation
OctagonStateTransitionOperation
OctagonStateTransitionGroupOperation
OctagonStateTransitionRequest
Octagon
CKKSReencryptOutgoingItemsOperation
SecBackupKeybagEntry
SECC2MPNetworkEvent
OTDeviceInformation
CKKSPushTracing
OctagonAPSReceiver
APSConnectionDelegate
ExternalClientHandling
CKKSKeychainBackedKey
CKKSKeychainBackedKeySet
SecDbBackupBagIdentity
TrustedPeersHelperPeerState
TrustedPeersHelperEgoPeerStatus
TrustedPeersHelperPeer
TrustedPeersHelperCustodianRecoveryKey
TrustedPeersHelperTLKRecoveryResult
OTClientStateMachine
CKKSBaseAESSIVKey
CKKSWrappedAESSIVKey
CKKSAESSIVKey
SECC2MPDeviceInfo
OTWaitOnPriorityViews
SECC2MPCloudKitOperationGroupInfo
CKKSZoneChangeFetchDependencyOperation
CKKSZoneChangeFetcher
CKKSZoneUpdateReceiverProtocol
KeychainItemUpgradeRequestController
SecDbKeychainMetadataKeyStore
CKKSCondition
SecEventMetric
TrustedPeersHelperIntendedTPPBSecureElementIdentity
OTPreloadOctagonKeysOperation
SecEscrowPendingRecord
OTCuttlefishAccountStateHolder
OTOperationDependencies
SECC2MPServerInfo
CKKSZoneModifyOperations
CKKSZoneModifier
SecCDKeychainItemTypeCredential
SFKeychainServerProtocol
SFKeychainServer
SFKeychainServerConnection
OTLocalCKKSResetOperation
EscrowRequestInformCloudServicesOperation
CKKSLaunchEvent
CKKSLaunchSequence
OTResetOperation
SecCDKeychainManagedAccessControlEntity
CoreDataProperties
SecCDKeychainManagedItem
SecCDKeychainManagedItemType
SecCDKeychainManagedLookupEntry
SOSAccount
SOSControlProtocol
SOSAccountConfiguration
Retirement
Persistence
SOSAccountTransaction
Transaction
Expansion
SOSAccountTrustClassic
SOSCKCircleStorage
SOSDictionaryUpdate
SOSTrustedDeviceAttributes
SOSAuthKitHelpers
SOSIntervalEvent
Circle
SOSCircleStorageTransport
SOSKVSCircleStorageTransport
CKKeyParameter
SOSAccountTrust
SOSMessage
PeerRateLimiter
KeychainItem
SOSControlServer
SOSClient
SOSClientRemote
SOSMessageKVS
Identity
Keychain initialized!
Couldn't bring up keychain: %@
SecWatchdog: watchdog has detected securityd/secd is using too much CPU - attempting to exit gracefully
SecWatchdog: watchdog has failed to exit securityd/secd gracefully - exiting ungracefully
securityd have written more then %llu
resetting watchdog monitoring interval ahead another 24 hours
SIGSTOPing self, awaiting debugger
Again, for good luck (or bad debuggers)
SIGTERM, exiting when clean 
security failed to register xpc listener for %s, exiting
XPC [%@] operation: %@ (%llu)
Authentication is needed %@ %@ %@
%@ %@ %@
%@: returning error: %@
failed to open /dev/random (%d)
failed to create refkey (%d)
invalid pub key (%zu)
failed to write /dev/random (%d)
Ignoring "%@" because client is API-restricted
Keychain access group com.apple.token ignored, feature not available
securityd client(%p): persona user %@
securityd client(%p): persona uuid %@
securityd client: app clip (API restricted)
serverxpc: Client task is null, cannot verify platformness
serverxpc: client is not a platform binary: 0x%08x
serverxpc: client has no codesign identifier
client %@ is eligible platform binary
serverxpc: client %@ is not eligible
Client %@ is valid platform binary
SecItemSetCurrentItemAcrossAllDevices: CKKSViewManager not initialized?
SecItemSetCurrentItemAcrossAllDevices: no view manager?
SecItemFetchCurrentItemAcrossAllDevices: CKKSViewManager not initialized?
CKKS didn't find a current item for (%@,%@): %@ %@
CKKS believes current item UUID for (%@,%@) is %@. Looking up persistent ref...
Found current item for (%@: %@)
ckkscurrent: No current item for (%@,%@): %@ %@
Performing keychain database checkpoint
item: keychain database checkpoint failed: %@
Keychain database checkpoint succeeded
unable to access hwaes key
Key Diversification is %s (via feature flags)
der: unable to encode date: %@
der: invalid date: %@; %s
Could not set up sqlite global error logging to syslog: %d
SecDb: SecDbCreate failed to create attributes for the write mutex; fairness properties are no longer present
SecDb: SecDbCreate failed to init the write mutex, this will end badly
SecDB: running from installer
SecDBCorrupt: %@
incremental_vacuum failed with: (%d) %{public}s
#SecDB nested transaction asked to not be committed
SecDbConnectionRelease called with NULL dbconn
SecDbConnectionRelease: IO failure reported in connection, throwing away currently idle caches
dbconn: did not expect to run out of room in the %s cache when releasing connection
SecDbForEach: SecDbConnection is readonly but we're about to write: %s
db %@ changed outside txn
_SecDbStep: SecDbConnection is readonly but we're about to write: %s
SecDbConnectionCheckCode detected corruption twice: going to handle corrupt DB
operation returned code: %d integrity check=fail
operation returned code: %d: integrity check=pass
SecDBCheckCorrupted integrity_check returned %s
#SecDB warning error %{public}@ when running integrity check
#SecDB warning: failed to run integrity check due to corruption
SecDBCheckCorrupted ran integrity_check, and that didn't return ok
SecDBCheckCorrupted failed to run integrity check
Unable to create database: %@
#SecDB starting maintenance
opened block failed: %@
opened block failed: error (%@) is being released and lost
#SecDB ending maintenance
SecDbSecDbProcessCorruptionMarker: Unable to check for corruption marker: %{darwin.errno}d
SecDbSecDbProcessCorruptionMarker: found corruption marker %s
SecDbSecDbProcessCorruptionMarker: Unable (%{darwin.errno}d) to delete corruption marker
SecDbSecDbProcessCorruptionMarker: Unable (%{darwin.errno}d) to delete db %{public}s
SecDbSecDbProcessCorruptionMarker: deleted corrupt db %{public}s
sqlDb: sql trace mask: 0x%08x
SecDbHandleCorrupt: Tried to write corruption marker %s but one already exists
SecDbHandleCorrupt: Unable (%{darwin.errno}d) to create corruption marker %{public}s
SecDbHandleCorrupt: killing self so that successor might cleanly delete corrupt db
sqlite busy/locked: %d ntries: %d totaltimeout: %d
sqlite busy/locked: too long: %d ms, giving up
failed to close database connection (%d) for %@: %s
Simulating crash, reason: %@, code=%08x
stackshot report, reason: %@, code=%08x
Triggering TTR: %@
Not showing ttr due to ratelimiting: %@
retrying cuttlefish XPC, (%d, %@)
octagon: Can't talk with TrustedPeersHelper: %@
Setting user-controllable views to %@
octagon-ckks: setting user-controllable views status errored: %@
Updating user-controllable view status failed because of lock state, will retry once unlocked: %@
Updating user-controllable view status failed because our self peer is excluded or missing
Received syncing policy %@ with view list: %@
octagon: failed to save policy+views: %@
OTSetupControlProtocol failed, continuing, but you might crash later: %@
Waiting for %@
No keys for %@: %@
Skipping keys: %@
Have proposed keys: %@
Unable to convert proposed keys: %@ %@
Have %u pending tlk shares
Fetched %d key sets, %d broken key sets, %d pendingTLKShares, and %d views timing out
Resetting local cuttlefish
Unable to reset local cuttlefish for (%@,%@): %@
Successfully reset local cuttlefish
Error resetting local account state: %@
Successfully reset local account state
error performing database transaction, major problems ahead: %@
error performing database operation, major problems ahead: %@
RateLimiter overloaded until %@
waiting for unlock before continuing with state machine
failed to fetch records from keychain, nothing to do: %@
Request %@ needs to cache a certificate, but that has been attempted recently. Holding off...
Request %@ needs a cached certififcate
Request %@ needs to be stored, but has been attempted recently. Holding off...
Request %@ needs to be stored!
failed to fetch records from keychain: %@
Investigating a new escrow request
Move requested to federation %@
Retriggering an existing escrow request: %@
escrowrequest: Unable to save modified request to keychain: %@
Retriggering an existing escrow request complete
Creating a new escrow request
beginning a new escrow request (%@)
escrowrequest: unable to save escrow update request: %@
Uploaded %d records with error %@
failed getting serial number: %d
Notified that the device name has changed
Registering with notification center %@
Retrying CK account state fetch
adding a new listener: %@
notifying new listener %@ of current state %@
error getting account info: %@
received CK Account info: %@
Received fetchCurrentDeviceIDWithCompletionHandler callback with null AccountStateTracker
CloudKit deviceID is: %@ %@
Logged back out but still received a fetchCurrentDeviceIDWithCompletionHandler callback
moving to circle status: %@
Received fetchCirclePeerID callback with null AccountStateTracker
Circle peerID is: %@ %@
Out of circle but still received a fetchCirclePeerID callback
out of circle(%@): resetting peer ID
Unable to get dispatch group.
received another notification of CK Account State %@
moving to CK Account info: %@
Starting blocking for listener %@
Done blocking for listener %@
error getting circle status: %@
error getting octagon status: %@
Caching octagon status as (%@, %@)
failed to fetch escrow statuses: %@
escrowrequest: unable to load uuid %@: %@
escrowrequest: unable to save new prerecord for uuid %@: %@
saved new prerecord for uuid %@
escrowrequest: unable to load prerecord with uuid %@: %@
escrowrequest: prerecord for uuid %@ already uploaded
fetched prerecord for uuid %@
escrowrequest: no prerecord for uuid %@: %@
Escrow request %@ doesn't yet have a certificate cached
Escrow request %@ already has a prerecord; no passcode needed
Escrow request %@ is pending a passcode
No escrow requests need a passcode
Triggering an escrow update request due to '%@'
no extant requests
escrowrequest: failed to load requests: %@
found requests: %@
deleting all requests
no extant requests; nothing to delete
error fetching records: %@
Unable to delete %@: %@
attempting to store a prerecord in escrow
SecCDKeychain: failed to deserialize wrapped secret data
SecCDKeychain: error creating AES key from unwrapped item key data with error: %@
SecCDKeychain: no persistent store URL, so we can't create or open a database
SecCDKeychain: no managed object model URL, so we can't create or open a database
SecCDKeychain: failed to create random key for CD database encryption - this means we won't be able to create a database
SecCDKeychain: failed to save encryption key to keychain, so bailing on database creation; status: %d
SecCDKeychain: can't create a class A store right now because the keychain is locked
failed to save or retrieve key for CD database encryption - this means we won't be able to create a database; status: %d
SecCDKeychain: failed to remove persistent store with error: %@
SecCDKeychain: failed to validate item owner with error: %@
SecCDKeychain: attempt to insert items into deallocated keychain instance
SecCDKeychain: insertItems: could not get managed object context
SecCDKeychain: failed to unique item (%@) using primary keys: %@
SecCDKeychain: error creating primary key string representation for item: %@; error: %@
SecCDKeychain: error creating managed item for insertion: %@; item: %@
SecCDKeychain: error fetching lookup entry during item insertion: %@
saving managed object context for items: %@
SecCDKeychain: saving managed object context failed with error: %@
saving managed object context succeeded
SecCDKeychain: attempt to fetch item from deallocated keychain instance
SecCDKeychain: fetchItemForPersistentID: could not get managed object context
SecCDKeychain: error fetching item for persistent id: %@; error: %@
SecCDKeychain: failed to create SecCDKeychainItem from managed item with error: %@
SecCDKeychain: fetchItemsWithValue: could not get managed object context
SecCDKeychain: error fetching lookup entry during item lookup: %@
SecCDKeychain: failed to create SecCDKeychainItemMetadata from managed item with error: %@
SecCDKeychain: attempt to fetch items from deallocated keychain instance
SecCDKeychain: deleteItemWithPersistentID: could not get managed object context
SecCDKeychain: attempt to delete item with persistant identifier that could not be found: %@
SecCDKeychain: error registering managedItemType for for itemType: %@
SecCDKeychain: _registerItemTypeForTesting: could not get managed object context
SecCDKeychain: failed to create random key for encrypting item with error: %@
SecCDKeychain: failed to serialize item secrets dictionary with error: %@
SecCDKeychain: failed to encrypt item secret data with error: %@
SecCDKeychain: failed to create refKey
SecCDKeychain: failed to encrypt item
SecCDKeychain: failed to serialize item secret data blob with error: %@
SecCDKeychain: failed to deserialize item wrapped secret data
SecCDKeychain: failed to create refKey for unwrapping item secrets
SecCDKeychain: failed to create item key for decryption
SecCDKeychain: failed to decrypt item secret data
SecCDKeychain: failed to deserialize item decrypted secret data
Unable to fetch identity '%@' from keychain: %@
No peer ID; therefore no identity
Unable to fetch trusted peers for (%@,%@): %@
Beginning cuttlefish health checkup
running rate limiting checks!
last health check timestamp: %@
Not rate-limiting: last updated %@ vs %@
Last update is within 3 days (%@); rate-limiting this operation
rate limited! %@
device is locked, not performing cuttlefish check
octagon-health: failed to persist last health check value:%@
NOT running rate limiting checks!
octagon-health: error: %@
cuttlefish came back with these suggestions: post repair? %d, post escrow? %d, reset octagon? %d, leave trust? %d, move record? %d
Resetting Octagon as per Cuttlefish request
Leaving clique as per Cuttlefish request
otmanager init
Initializing Octagon...
starting default state machine...
circle changed notification called, checking trust state
Octagon: CloudKit.framework appears to not be linked. Cannot create an Octagon manager (on pain of crash).
Rejecting client RPC for non-primary persona
Rejecting a signin RPC for container (%@) and context (%@): %@
signing in %@ for altDSID: %@
Rejecting a signout RPC for container (%@) and context (%@): %@
signing out of octagon trust: %@
signing out failed: %@
Rejecting a IDMS trust level change RPC for container (%@) and context (%@): %@
received a notification of IDMS trust level change in %@
handleIdentityChangeForSigningKey: %@
preflightBottledPeer: %@ %@
launchBottledPeer
restore
fetching context for key: %@
removed client context with key: %@
Rejecting a fetchEgoPeerID RPC for container (%@) and context (%@): %@
Received a fetch peer ID for container (%@) and context (%@)
Rejecting a fetchTrustStatus RPC for container (%@) and context (%@): %@
Received a trust status for container (%@) and context (%@)
Rejecting a fetchCliqueStatus RPC for container (%@) and context (%@): %@
Rejecting a status RPC for container (%@) and context (%@): %@
Received a status RPC for container (%@) and context (%@)
Rejecting a startOctagonStateMachine RPC for container (%@) and context (%@): %@
Received a start-state-machine RPC for container (%@) and context (%@)
Rejecting a resetAndEstablish RPC for container (%@) and context (%@): %@
Rejecting a establish RPC for container (%@) and context (%@): %@
Rejecting a leaveClique RPC for container (%@) and context (%@): %@
Rejecting a removeFriendsInClique RPC for container (%@) and context (%@): %@
Rejecting a peerDeviceNamesByPeerID RPC for container (%@) and context (%@): %@
Rejecting a fetchAllViableBottles RPC for container (%@) and context (%@): %@
Rejecting a rpcPrepareIdentityAsApplicant RPC for container (%@) and context (%@): %@
Rejecting a rpcEpoch RPC for container (%@) and context (%@): %@
Rejecting a rpcVoucher RPC for container (%@) and context (%@): %@
Rejecting a restore RPC for container (%@) and context (%@): %@
restore via bottle invoked for container: %@, context: %@
Reporting analytics for container: %@, context: %@
Error fetching SOS status: %@
Error fetching Octagon metadata: %@
Error fetching machine ID: %@
Error fetching 'mid on list': %@
Number of peers with machineID (%@): %@
MID match (current vs Octagon peer): %@, %@, %@
Peers: %zu, viable peers %zu
Error fetching how many peers have our MID: %@
Error fetching pendingEscrowUpload status: %@
Error fetching escrowRequestClass: %@
Rejecting a createRecoveryKey RPC for container (%@) and context (%@): %@
Setting recovery key for container: %@, context: %@
Device does not participate in SOS; cannot enroll recovery key in Octagon
recovery failed validation with error:%@
Rejecting a joinWithRecoveryKey RPC for container (%@) and context (%@): %@
join with recovery key invoked for container: %@, context: %@
octagon: recovery key is not enrolled in octagon, and current device can't set recovery keys
octagon, recovery key is not enrolled in octagon, resetting octagon circle
octagon, failed to reset octagon
attempting enrolling recovery key
octagon, failed to enroll new recovery key: %@
successfully enrolled recovery key
octagon, join with recovery key failed: %@
join with recovery key succeeded
Rejecting a createCustodianRecoveryKey RPC for container (%@) and context (%@): %@
Creating Custodian Recovery Key for container: %@, context: %@
Rejecting a joinWithCustodianRecoveryKey RPC for container (%@) and context (%@): %@
join with custodian recovery key %@ invoked for container: %@, context: %@
octagon, join with custodian recovery key failed: %@
join with custodian recovery key succeeded
preflight join with custodian recovery key %@ invoked for container: %@, context: %@
octagon, preflight join with custodian recovery key failed: %@
preflight join with custodian recovery key succeeded
Rejecting a removeCustodianRecoveryKey RPC for container (%@) and context (%@): %@
Remove Custodian Recovery Key %@ for container: %@, context: %@
Device does not participate in SOS; cannot remove recovery key in Octagon
Rejecting a createInheritanceKey RPC for container (%@) and context (%@): %@
Creating Inheritance Key for container: %@, context: %@
Rejecting a generateInheritanceKey RPC for container (%@) and context (%@): %@
Generating Inheritance Key for container: %@, context: %@
Rejecting a storeInheritanceKey RPC for container (%@) and context (%@): %@
Storing Inheritance Key for container: %@, context: %@
Rejecting a joinWithInheritanceKey RPC for container (%@) and context (%@): %@
join with inheritance key %@ invoked for container: %@, context: %@
octagon, join with inheritance key failed: %@
join with inheritance key succeeded
preflight join with inheritance key %@ invoked for container: %@, context: %@
octagon, preflight join with inheritance key failed: %@
preflight join with inheritance key succeeded
Rejecting a removeInheritanceKey RPC for container (%@) and context (%@): %@
Remove Inheritance Key %@ for container: %@, context: %@
Device does not participate in SOS; cannot remove inheritance key in Octagon
Received 24hr xpc notification
octagon: error attempting to check octagon health: %@
health check success
Rejecting a healthCheck RPC for container (%@) and context (%@): %@
notifying container of change
Rejecting a waitForOctagonUpgrade RPC for container (%@) and context (%@): %@
Attempting wait for octagon upgrade
Rejecting a waitForPriorityViewKeychainDataRecovery RPC for container (%@) and context (%@): %@
Attempting wait for priority view processing
Rejecting a refetchCKKSPolicy RPC for container (%@) and context (%@): %@
refetch-ckks-policy
refetch-ckks-policy result: %@
Rejecting a getCDPStatus RPC for container (%@) and context (%@): %@
get-cdp-status
Rejecting a setCDPEnabled RPC for container (%@) and context (%@): %@
set-cdp-enabled
Rejecting a fetchEscrowRecords RPC for container (%@) and context (%@): %@
fetching records
octagon-fetch-escrow-records: error fetching records: %@
successfully fetched records
Rejecting a invalidateEscrowCache RPC for container (%@) and context (%@): %@
beginning removing escrow cache!
octagon-remove-escrow-cache: error invalidating escrow cache: %@
successfully invalidated escrow cache
Rejecting a setUserControllableViewsSyncStatus RPC for container (%@) and context (%@): %@
octagon-user-controllable-views: error setting status: %@
successfully set status to: %@
Rejecting a fetchUserControllableViewsSyncStatus RPC for container (%@) and context (%@): %@
octagon-user-controllable-views: error fetching status: %@
successfully fetched status as: %@
Rejecting a resetAccountCDPContents RPC for container (%@) and context (%@): %@
octagon-reset-account-cdp-contents: error resetting account cdp contents: %@
successfully reset account cdp contents
Rejecting a setLocalSecureElementIdentity RPC for container (%@) and context (%@): %@
Rejecting a removeLocalSecureElementIdentityPeerID RPC for container (%@) and context (%@): %@
Rejecting a fetchTrustedSecureElementIdentities RPC for container (%@) and context (%@): %@
Rejecting a fetchAccountSettings RPC for container (%@) and context (%@): %@
Rejecting a fetchAccountWideSettings RPC for container (%@) and context (%@): %@
Rejecting a persistAccountSettings RPC for container (%@) and context (%@): %@
Rejecting a tlkRecoverabilityForEscrowRecordData RPC for container (%@) and context (%@): %@
received callback for released object
Not running due to some failed dependent: %@
Can't add operation dependency to cancelled group
failed to decode manifest leaf node DER with error: %@
uuid contains delimiter: %@
CKKSManifestLeafRecord: saving manifest leaf record to database but %@ is nil
Failed to save fetched manifest leaf record to database: %@: %@
manifest leaf CKRecord was %@
Corrupt item recieved with no wrapped key
UUID does not match
wrapping key reference does not match
SecCKRecordGenerationCountKey does not match
SecCKRecordWrappedKeyKey does not match
SecCKRecordDataKey does not match
SecCKRecordPCSServiceIdentifier does not match
SecCKRecordPCSPublicKey does not match
SecCKRecordPCSPublicIdentity does not match
error loading a CKKSMirrorEntry from database: %@
BUG: No local item matching resynced CloudKit record: %@
BUG: Local item doesn't match resynced CloudKit record: %@ %@
Already know about this item record, updating anyway: %@
received a record from CloudKit with a bad generation count: %@ (%ld > %@)
CloudKit has told us of record we already know about for %@; skipping update
couldn't save new CKRecord to database: %@ %@
CKKSMirrorEntry was created: %@
Couldn't load possible existing incoming queue entry: %@
Deleting existing CKKSIncomingQueueEntry: %@
Couldn't delete existing incoming queue entry: %@
Couldn't save modified incoming queue entry: %@
CKKSIncomingQueueEntry was created: %@
Couldn't load OQE sibling for %@: %@
Couldn't delete OQE sibling(%@) for %@: %@
CloudKit notification: deleted record(%@): %@
Couldn't save incoming queue entry: %@
CKKSMirrorEntry was deleted: %@ %@
CKKS padding function received invalid blocksize 0, using 1 instead
Couldn't decrypt old CKMirror entry: %@
ckks: couldn't decrypt item %@
decryptItemToDictionary failed: %@
No zones to delete
Deleting CloudKit zones: %@
Attempted to delete zone %@, but it's already missing. This is okay: %@
deletion of record zone %@ completed with error: %@
deletion of record zone %@ completed successfully
couldn't save zone creation status for %@: %@
Triggering escrow update
Unable to acquire a EscrowRequest object: %@
Unable to request silent escrow update: %@
Requested silent escrow update
Checking CDP status
Device is locked! restarting on unlock
CDP is %@
Unable to talk with TPH; leaving CDP status as 'unknown': %@
Octagon reports %d peers
Requesting SOS status...
Error fetching circle status. Leaving CDP status as 'unknown': %@
SOS reports circle absent. Setting CDP to 'disabled'
SOS reports some existing circle (%d). Setting CDP to 'enabled'
No SOS. CDP bit is off.
CDP bit is enabled on-disk, not modifying (would have been %@)
Writing CDP bit as %@
Failed to load account metadata: %@
Cannot select a key for no item!
can't pick key class: %@ %@
Couldn't find current key for %@: %@
Couldn't load key(%@): %@
Creating a (%@) outgoing queue entry for: %@
no key for item: %@ %@
no plist: %@ %@
No UUID for item: %@ %@
couldn't fetch UUID: %@ %@
couldn't fetch access group from item: %@ %@
couldn't fetch accessgroup: %@
Unable to fetch an existing OQE due to error: %@
Unable to fetch an existing OQE (any state) due to error: %@
Asked to delete a record for which we don't have a CKME or any OQE, ignoring: %@
Unable to decrypt current CKME: %@
Update to item only changes mdat; skipping %@
couldn't create an item: %@ %@
couldn't encrypt item: %@ %@
Couldn't delete %@: %@
Couldn't fetch an overwriting OQE, assuming one doesn't exist: %@
New modification has come in behind inflight %@; dropping failed change
Couldn't delete in-flight OQE: %@
Couldn't save %@ as %@: %@
Couldn't delete %@ (due to error %@): %@
Unable to find IQE parent keys: %@
Unable to find key %@: %@
Some item is encrypted under a non-existent key(%@).
SFKeychainControl: Client pid (%d) doesn't have entitlement: %@
Saving new current item pointer: %@
Error saving new current item pointer: %@ %@
ready to process an incoming queue entry: %@ %@ %@
Keychain is locked; can't decrypt IQE %@
Coudn't find key in keychain; will attempt to poke key hierarchy: %@
Couldn't decrypt IQE %@ for some reason: %@
Couldn't save IQE %@ as error for some reason: %@
Synced item seems wrong: %@
unknown class in object: %@ %@
Couldn't save errored IQE to database: %@
Received an item (%@), but our current policy claims it should be in view %@
Couldn't save mismatched IQE to database: %@
Received an item (%@), which should be in view %@
Unable to create SecDbItemRef from IQE: %@
Wrote a keychain item that is actually for %@; requesting scan
Unable to load CKKSMirrorEntry from database* %@
Other view (%@) already knows about this item, dropping incoming queue entry: %@
Unable to delete IQE: %@
Going to process the incoming queues for %@
Will handle mismatched view items along the way
Early-exiting from IncomingQueueOperation (after processing deletes): %@
Early-exiting from IncomingQueueOperation (after processing all incoming entries): %@
Processed %lu items in incoming queue (%lu errors)
Early-exiting from IncomingQueueOperation due to failure fixing mismatched items
Could not load remote item pointers: %@
Processed %lu items in CIP queue
Requesting scan for %@
CKKSIncomingQueueOperation cancelled, quitting
Error fetching incoming queue records: %@
Nothing in incoming queue to process (filter: %@)
Early-exiting from IncomingQueueOperation
Handling policy-mismatched items
Cannot fetch mismatched view items
No mismatched view items
Inspecting %lu mismatched items
processQueueEntries didn't complete successfully
set a new persistentref UUID for item %@: %@
Unable to make SecDbItemRef out of attributes: %@
Rejecting a tombstone item addition from CKKS(%@): %@
Rejecting a multiuser item addition from CKKS(%@): %@
Unable to save new deletion OQE: %@
Replacing item (it doesn't have a UUID) for %@
Primary key conflict; dropping CK item (arriving from wrong view) %@
Unable to fetch ckme: %@
Primary key conflict; dropping CK item %@
Primary key conflict; replacing %@%@ with CK item %@
error setting uuid persistent ref: %@
couldn't process item from IncomingQueue: %@
Couldn't handle IQE, but why?: %@
Correctly processed an IQE; deleting
couldn't delete CKKSIncomingQueueEntry: %@
IQE not correctly processed, but why? %@ %@
trying to delete with query: %@
couldn't create query: %@
couldn't delete item (as it's already gone); this is okay: %@
couldn't delete item: %@
couldn't delete query: %@
Unable to fetch priority uuid %@: %@
Priority uuid %@ is not in 'new': %@
Found OQE  to fetch priority uuid %@: %@
Item syncing for this view is disabled
Error fetching outgoing queue records: %@
processing outgoing queue: %@
Couldn't load current class keys: %@
Item's encryption key (%@ %@) is neither %@ or %@
update to a record that doesn't exist? %@
couldn't save state for CKKSOutgoingQueueEntry: %@
Record (%@)'s change tag doesn't match ckmirror's change tag, reencrypting
couldn't save oqe to database: %@
An item needs reencryption!
Nothing in outgoing queue to process
End of operation group: %@
Current keys to update: %@
Can't make current device state: %@
Can't make current device state cloudkit record, but no reason why
Updating device state: %@
Saving records %@ to CloudKit zone %@
QoS: %d; operation group is %@
Beginning upload for %d records, deleting %d records
Record to save: %@
Record to delete: %@
Record upload successful for %@ (%@)
error on row: %@ %@
error processing outgoing queue: %@
Error is simply due to current key pointers changing; marking all records as 'needs reencrypt'
Error is due to the key records missing. Marking all as 'needs reencrypt'
failed record: %@ %@
Couldn't clean up outgoing queue entry: %@
Unknown error on row: %@ %@
Error is scary: putting all inflight OQEs back into state 'new'
Record deletion successful for %@
Completed processing outgoing queue (%d modifications, %d deletions)
Couldn't update %@ in outgoingqueue: %@
Couldn't save %@ to ckmirror: %@
Couldn't save %@ to currentkey: %@
Couldn't save %@ to ckdevicestate: %@
unknown record type in results: %@
Couldn't delete %@ from outgoingqueue: %@
Couldn't delete %@ from ckmirror: %@
Operation failed; rolling back: %@
Couldn't set OQE %@ as error: %@
Couldn't set OQE %@ as %@: %@
Error is a 'missing record' error: %@
creating voucher using a bottle with escrow record id: %@
using passed in altdsid, altdsid is: %@
fetched altdsid is: %@
authkit doesn't know about the altdsid, using stored value: %@
retrieved account, altdsid is: %@
failed to retrieve account object: %@
octagon: Error preflighting voucher using bottle: %@
Bottle %@ is for peerID %@
octagon: Error fetching TLKShares to recover: %@
octagon: Error preparing voucher using bottle: %@
Saving voucher for later use...
unable to save voucher: %@
Successfully vouched with a bottle: %@, %@
SOS not enabled on this platform?
joining SOS
Error fetching circle status: %d, error:%@
SOSCCResetToOffering complete: %d %@
no signing key for peer: %@
signature didn't verify for %@ %@: %@
couldn't share %@ (wrap failed): %@
couldn't share %@ (signing failed): %@
error fetching CKState(%@): %@
escrow-update: Client pid: %d doesn't have entitlement: %@
received connection from client pid %d (euid %u)
Attempting to update trusted device list
octagon-authkit: Received an error updating the trusted device list operation, but no retry flag present.
Setting the allowed device list failed due to lock state: %@
Error is currently unknown, will not retry: %@
Machine ID list error is not fatal: requesting retry: %@
octagon-authkit: failed to fetch demo account flag: %@
octagon-authkit: Unable to fetch machine ID list: %@
octagon-authkit: empty machine id list
Unable to save machineID allow-list: %@
Successfully saved machineID allow-list (%@ change)
Beginning ensuring Octagon keys are set properly in SOS
Failed to get the current SOS self: %@
Fetched SOS Self! Fetching Octagon Adapter now.
failed to get peer id: %@
Fetched SOS Self! Fetching Octagon Adapter now: %@
failed to retrieve self peers: %@
failed to retrieve current self
SOS and Octagon signing keys do NOT match! updating SOS
SOS and Octagon keys match!
Rate limiting disabled, returning automatic all-clear
RateLimiter[%@]: Got nil instead of property named %@
RateLimiter[%@] state size %lu exceeds max %lu, overloaded until %@
RateLimter[%@]: "%@" is not an approved selector string
Zone is already created and subscribed
Asking to create and subscribe to CloudKit zones: %@
Successfully created '%@'
Failed to create '%@'
zone subscription error appears to say that the zone subscription exists; this is okay!
Successfully subscribed '%@'
Failed to subscribe to '%@'
Zone setup progress: created:%d %@ subscribed:%d %@
zone subscription error appears to say the zone doesn't exist, fixing status: %@
Received a notification that the SOS Octagon peer set changed
octagon-sos: Not in circle : %@ %@
octagon-sos: Error fetching self peer : %@
octagon-sos: Error fetching self encryption keys: %@
octagon-sos: Error fetching trusted peers: %@
octagon-sos: error fetching octagon keys for peer: %@ %@
Peer(%@) doesn't have Octagon keys, but this is expected: %@
no octagon keys available skipping updating SOS record
octagon-preload-keys: failed to preload Octagon keys in SOS:%@
successfully preloaded Octagon keys in SOS!
octagon-sos: failed to update Octagon keys in SOS:%@
successfully updated Octagon keys in SOS!
octagon-sos: failed to update CKKS4All status in SOS: %@
successfully updated CKKS4All status in SOS to '%@'
SOSCCRequestToJoinCircleAfterRestore complete: %d %@
octagon-sos: Can't create SPKI for peer: %@
octagon-sos: Created SPKI for peer: %@
octagon-sos: Not in circle; not preapproving keys: %@ (%@)
octagon-sos: Can't fetch trusted peer SPKIs: %@
Beginning an establish operation
Finishing an establish operation with %@
SOS preapproved keys are %@
Unable to fetch SOS preapproved keys: %@
SOS not enabled; no preapproved keys
octagon: failed to save 'attempted join' state: %@
Beginning establish with keys: %@
octagon: Error calling establish: %@
A CKKS key hierarchy is out of date; moving to '%@'
Couldn't persist results: %@
Due to write failures, we'll try to fetch the current state
Some records were written! Process them
View %@ is in okay state; ignoring
Attempting to heal %@
couldn't load current key set, attempting to proceed: %@
Key set is %@
Have current key pointers, but no keys. This is exceptional; requesting full refetch
Unable to determine if all IQEs have parent keys: %@
We have some item that encrypts to a non-existent key. This is exceptional; requesting full refetch
We have some item that encrypts to a non-existent key, but we cannot request a refetch! Possible inifinite-loop ahead
No current TLK pointer?
No current ClassA pointer?
No current ClassC pointer?
key hierarchy has split: there's two top keys. Currently we don't handle this situation.
No possible TLK found. Waiting for creation.
CKKS claims %@ is not a valid TLK: %@
Received a TLK(%@), but keybag appears to be locked. Entering a waiting state.
Received a TLK(%@) which we don't have in the local keychain: %@
Couldn't create a new class A key, but keybag appears to be locked. Entering waitforunlock.
couldn't create new classA key: %@
Couldn't create a new class C key, but keybag appears to be locked. Entering waitforunlock.
couldn't create new class C key: %@
Attempting to move to new key hierarchy: %@
Unable to create TLK shares for new tlk: %@
Saving new records %@
Operation group is %@
Successfully completed upload for %@
Completed Key Heal CloudKit operation with error: %@
couldn't save new key hierarchy to database; this is very bad: %@
couldn't save new key hierarchy to CloudKit: %@
Couldn't load key(%@) from keychain. Attempting recovery: %@
Couldn't unwrap key(%@) using key hierarchy due to the lock state: %@
Couldn't unwrap key(%@) using key hierarchy. Keys are broken, quitting: %@
Couldn't save key(%@) to keychain due to the lock state: %@
Couldn't save key(%@) to keychain: %@
error loading cip: %@
BUG: No current item pointer matching resynced CloudKit record: %@
BUG: Local current item pointer doesn't match resynced CloudKit record(s): %@ %@ %@
Already know about this current item pointer, skipping update: %@
Couldn't save current item pointer to database: %@: %@ %@
CloudKit notification: deleted current item pointer(%@): %@
Failed to find remote CKKSCurrentItemPointer to delete %@: %@
Failed to delete remote CKKSCurrentItemPointer %@: %@
Failed to find local CKKSCurrentItemPointer %@: %@
Failed to delete local CKKSCurrentItemPointer %@: %@
CKKSCurrentItemPointer was deleted: %@ error: %@
Limited view operation to %@
Expanded view operation to %@
Limited view operation to priority views %@
Fetching account keys for provider %@
Providing keyset (%@) to listeners
Processing record modification(%@): %@
unknown record type: %@ %@
Record modification(%@) failed:: %@
Processing record deletion(%@): %@
Record deletion(%@) failed:: %@
Received a ServerRecordChanged error, attempting to update new records and delete unknown ones
On error: updating our idea of: %@
On error: handling an unexpected delete of: %@ %@
Examining 'write failed' error: %@ %@ %@
CKKS Server extension has told us about %@ for record %@; requesting refetch and reprocess of key hierarchy
CKKS Server extension has told us about %@ for record %@, but we don't currently handle this error
Couldn't fetch attributes from item: %@
No view returned from policy (%@): %@
CKKSSynchronizeOperation cancelled, quitting
Beginning local resynchronize (attempt %u)
Couldn't fetch IQEs: %@
restarted synchronization too often; Failing
restarting synchronization operation due to new local items
Couldn't fetch mirror items: %@
Couldn't make CKRecord for item: %@
preparing an identity
AuthKit doesn't know about the altDSID: %@
Investigating use of Octagon keys from SOS identity
Failed to get the persistent ref for our SOS signing key: %d
Failed to get the persistent ref for our SOS encryption key: %d
octagon: Error preparing identity: %@
Prepared: %@ %@ %@
New syncing policy: %@ views: %@
Couldn't persist metadata: %@
failed to reset account metadata in keychain, %@
created a CKKSCurrentKey with a nil currentKeyUUID. Why?
No current key UUID in record! How/why? %@
error loading ckp: %@
BUG: No current key pointer matching resynced CloudKit record: %@
BUG: Local current key pointer doesn't match resynced CloudKit record: %@ %@
Current key pointer has 'changed', but it matches our local copy: %@
Couldn't save current key pointer to database: %@: %@
CKRecord was %@
Current key pointer modification doesn't change anything interesting; skipping reprocess: %@
error deleting ckp: %@
Unable to set CDP bit: %@
Successfully set CDP bit
Client pid: %d doesn't have entitlement: %@
Client pid: %d attempted to use CKKS, but CKKS is not enabled.
no AccountTracker object
CK device ID not initialized, likely quitting
CK device ID not initialized, quitting
Not quite sure if the account is HSA2 or not. Probably will quit?
Error creating device state entry; quitting: %@
Saving new device state %@
Device state record upload successful for %@: %@
CloudKit returned an error: %@
Couldn't save new device state(%@) to database: %@
was_current does not match
octagon: Error setting recovery key: %@
successfully set recovery key
Providing setRecoveryKey() records to %@
octagon: failed to create string: %@
octagon: Error create custodian recovery key: %@
successfully created custodian recovery key
octagon: failed to parse UUID from TPH: %@
octagon: failed to create crk: %@
Providing createCustodianRecoveryKey() records to %@
octagon: failed to create inheritance key: %@
octagon: Error create inheritance key: %@
successfully created inheritance key
octagon: Error store inheritance key: %@
successfully stored inheritance key
Providing storeCustodianRecoveryKey() records to %@
CloudKit.framework appears to not be linked. Cannot enable CKKS (on pain of crash).
reduce-rate-limiting is %@
Ignoring kSecDbCKKSTransaction notification
SecDbEvent gave us garbage: %@
Local keychain was reset; performing local resync
Local keychain reset resync finished with an error: %@
Local keychain reset resync finished successfully
Beginning resynchronize (attempt %u)
error doing database transaction, major problems ahead: %@
error getting database connection, major problems ahead: %@
mismatching zone ids in a single record: %@ and %@
%@ %s %s changes: %@
change %@ SOSObjectCopyDigest: %@
change %@ bad length digest: %@
Attempting to escrow any pending prerecords
Will retry after unlock
Skipping completed escrow request (%@)
Skipping pending escrow request (%@); it's rate limited
No pending escrow request has a prerecord
escrow request have pre-record uploading: %@
escrowrequest: unable to save last escrow time: %@
escrowrequest: fatal error for record: %@, dropping: %@
escrowrequest: unable to delete last escrow time: %@
escrowrequest: prerecord %@ upload failed: %@
escrowrequest: prerecord %@ upload succeeded
escrowrequest: unable to save completion of prerecord %@ in keychain
Not acting on exactly one view; not limiting query: %@
Too many policy rules for view %@
Policy view rule is not a match against viewhint: %@
Policy view rule is complex: %@
couldn't execute query: %@
Need to upload %@, but can't create outgoing entry: %@
Syncing new item: %@
Need to upload %@, but can't save to database: %@
Found %d missing %@ items
Onboarding %@ %@
Found %d items missing UUIDs
Found item with no uuid: %@
Assigning new UUID %@ for item %@
Unable to copy item with new UUID: %@
Unable to update item with new UUID: %@
BUG: keychain missing %lu items from mirror and/or queues: %@
BUG: error fetching previously-extant CKME (uuid: %@) from database: %@
No missing local items found
Scanning for views: %@
Unable to load CKMirrorEntries: %@
Scanning all synchronizable %@ items(%@) for: %@
scanning item: %@
Skipping tombstone %@
skipping sync of device-bound(%@) item
Ignoring syncable keychain item for non-primary account: %@
Scanned item is a CKKS internal key, skipping
Scanned item is for view %@, skipping
making new UUID for item %@: %@
couldn't copy UUID-less item's primary key: %@
Existing mirror entry with UUID %@
Existing mirror entry with UUID %@ does not match local item
Existing outgoing queue entry with UUID %@
Item(%@) is new; will attempt to add to CKKS
keychain missing %lu items from mirror, proceeding with queue scanning
unable to inspect incoming queue: %@
unable to inspect outgoing queue: %@
Exiting due to previous error: %@
Found %d views with missing items for %@
Found %d missing %@ items for %@
View wasn't ready for scan
Unable to save 'scanned' bit: %@
Saved scanned status.
Transferring ckoperation group %@
Completed scan
Could not decrypt item for comparison: %@
Could not get item contents for comparison: %@
No voucher available: %@
joining with a voucher: %@
octagon: Error joining with voucher: %@
A CKKS key hierarchy is out of date; going to state '%@'
requesting cuttlefish health check
octagon: join successful
couldn't reset zone status: %@
couldn't delete all CKKSMirrorEntry: %@
couldn't delete all CKKSOutgoingQueueEntry: %@
couldn't delete all CKKSIncomingQueueEntry: %@
couldn't delete all CKKSKey: %@
couldn't delete all CKKSTLKShare: %@
couldn't delete all CKKSCurrentKeyPointer: %@
couldn't delete all CKKSCurrentItemPointer: %@
couldn't delete all CKKSDeviceStateEntry: %@
Successfully deleted all local data for zones: %@
Using cached change token for %@: %@
Cancelling fetch: %@
Dropping the following zones from this fetch cycle: %@
Beginning fetch with discretionary network (%d): %@ options: %@
CloudKit notification: record changed(%@): %@
Received a new server change token (via block) for %@: %@ %@
Received a new server change token for %@: %@ %@
more changes pending for %@, will start a new fetch at change token %@
Record zone fetch complete: changeToken=%@ clientChangeTokenData=%@ moreComing=%@ error=%@
Must issue another fetch (with potential error %@)
Record zone changes fetch complete: error=%@
Submitting post-fetch CKEventMetric due to notification %@
Couldn't associate metric with operation: %@ %@
Metric submitted: %@
no client registered for %@, so why did we get any data?
Sorting record modification %@: %@
Sorting record deletion %@: %@
Delivering fetched changes: changed=%lu deleted=%lu moreComing=%lu resync=%u changeToken=%@
No more changes for zone; turning off resync bit
posting notification %@
Checking if any CKKS zones need resetting
Finishing resetting CKKS missing TLKs operation with %@
Key set %@ has no TLK; scheduling for reset
Error loading key set %@; not attempting reset
No CKKS views need resetting
Resetting CKKS view %@
CKKS view reset complete
Successfully reset %@
octagon: Error removing custodian recovery key: %@
successfully removed custodian recovery key
octagon: Received an error updating TPH, but no retry flag present.
Updating trust state failed because locked, retry once unlocked: %@
Error is currently unknown, aborting: %@
Updating trust state not fatal: requesting retry: %@
octagon: Unable to load current metadata: %@
Forcing a full refetch
octagon: update errored: %@
Cuttlefish reports we no longer exist.
update complete: %@, %@
octagon: Unable to save new syncing state: %@
Self peer is now preapproved!
Member list changed
Unknown machine IDs are present; requesting fetch
Self peer (%@) is excluded; moving to untrusted
Self peer (%@) is excluded but is preapproved, moving to sosuprade
Self peer (%@) is unknown; moving to '%@''
SOS update preapproval error is not fatal: requesting retry in %0.2fs: %@
SOS update preapproval error is: %@, not retrying
octagon-sos: Can't fetch trusted peers; stopping preapproved key update: %@
Updating SOS preapproved keys to %@
octagon-sos: unable to update preapproved keys: %@
Updated SOS preapproved keys
creating voucher using a recovery key
using auth kit adapter, altdsid is: %@
octagon: Error preflighting voucher using recovery key: %@
Recovery key ID %@ looks good to go
octagon: Error preparing voucher using recovery key: %@
Successfully vouched with a recovery key: %@, %@
Adding flag for CKKS TLK upload
Adding flag for CKKS policy check
Changing trust status to: %@
User controllable view state changed; posting notification
octagon-authkit: Unable to load account metadata: %@
Machines-added push is for wrong altDSID (%@); current altDSID (%@)
adding machines for altDSID(%@): %@
octagon-authkit: addAllow errored: %@
addAllow succeeded
Machines-removed push is for wrong altDSID (%@); current altDSID (%@)
removing machines for altDSID(%@): %@
octagon-authkit: removeAllow errored: %@
removeAllow succeeded
incomplete machine ID list notification -- refreshing device list
Told of a new CK account status: %@
Informed that the CK account is now unavailable: %@
Account available with altDSID: %@ %@
octagon: unable to persist new account availability: %@
Account now unavailable: %@
Informing %@ of new untrusted status (due to account disappearance)
error fetching account metadata: %@
current cdp status is: %@
octagon-cdp-status: unable to persist CDP enablement: %@
Successfully set CDP status bit to 'enabled''
device is not in clique to begin with - returning
octagon: Unable to fetch machine ID; expect signin to fail: %@
received new pairing UUID (%@)
current pairing UUID (%@) does not match config UUID (%@)
localReset returned an error: %@
localReset succeeded
octagon: Timed out waiting for local reset to complete
Waiting for an HSA2 account
CloudKit reports an account is available!
Waiting for a CloudKit account; current state is %@
Asking for a real CK account state
CDP is newly available!
Account is available!  Attempting initializing op!
Preapproved flag is high. Attempt SOS upgrade again!
We are untrusted, but it seems someone preapproves us now. Unfortunately, this platform doesn't support SOS.
Attempt SOS upgrade again!
Attempting SOS upgrade again (due to a consistency notification)
Updating TPH (while untrusted) due to push
Determine iCloud account status
Attempting local-reset
Attempting local-reset as part of signout
Ensuring consistency of things that might've changed
Preloading Octagon Keys on the SOS Account
SOS is enabled; ensuring preapprovals are correct
Investigating SOS status
clear cuttlefish context state
Updating SOS preapprovals
Updating TPH (while ready) due to push
Received an suggestion to retry TLK extraction via bottle, but have no entropy stashed
Received an suggestion to retry TLK extraction via RK, but have no recovery key stashed
Received an suggestion to update the machine ID list (while ready); updating trusted device list
Attempt SOS Update preapprovals again!
We are untrusted, but this platform doesn't support SOS.
Attempting SOS consistency checks
Someone would like us to check SOS consistency, but this platform doesn't support SOS.
Attempting user-view control upgrade
Updating CKKS policy
Removing 'account is available' flag
Removing 'IDMS level changed' flag
Removing 'CDP enabled' flag
An HSA2 iCloud account exists; waiting for CloudKit to confirm
Initializing CKKS views
Unable to fetch initial syncing policy: %@
Fetched initial syncing policy: %@
An iCloud account exists, but doesn't appear to be HSA2. Let's check!
No iCloud account available.
Unknown account state (%@). Determining...
peer is trusted: %@
trust state (%@). checking in with TPH
octagon-health: hit an error asking TPH for trust status: %@
TPH says device is locked!
TPH says we're trusted and in
TPH says we have an identity but we are not in Octagon, posted CFU: %d
Returning from cuttlefish trust check call: postRepairCFU(%d), postEscrowCFU(%d), resetOctagon(%d), leaveTrust(%d), moveRequest(%d)
Posting Repair CFU
octagon-health, hit an error evaluating prerecord status: %@
Posting Escrow CFU
Not posting confirm passcode CFU, already pending a prerecord upload
Leaving Octagon and SOS trust
Received escrow move request: %@
ocagon-health: failed to post repair cfu via state machine: %@
device is locked, not posting cfu
posted repair cfu via state machine
Error loading account data: %@
iCloud sign in occurred. Attemping to register with APS...
octagonpush: received callback for released object
octagonpush: Received error fetching preferred push environment (%@): %@
Registering for environment '%@'
repairAccountIfTrustedByTPHWithIntendedState: calling into TPH for trust status
repairAccountIfTrustedByTPHWithIntendedState status: %ld, peerID: %@, isExcluded: %d error: %@
got an error from tph, returning to become_ready state: %@
device is locked
TPH believes we're trusted, accepting ego peerID as %@
octagon-health: couldn't persist results: %@
added trusted identity to account metadata
TPH believes we're not trusted, requesting CFU post
clique status: %@, egoPeerID: %@, peerCountByModelID: %@, isExcluded: %d error: %@
octagon: Lost our identity keys! Posting CFU
device is locked; not posting CFU
Have %d peers with model %@
No iOS peers in account; not posting CFU
octagon: failed to retrieve joining attempt information: %@
SOS is enabled and we haven't attempted to join; checking with SOS
SOS is not ready, not posting CFU until it becomes so
SOS is in an unknown error state, posting CFU: %@
SOS is InCircle, not posting CFU
SOS is %@, posting CFU
octagon: hit an error checking trust state or posting a cfu: %@
octagon: device is locked, not posting cfu
clique status: %@, posted cfu: %d
device is locked, state moving to wait for unlock
Unable to set trust state: %@
Informing %@ of new untrusted status
Unable to disable the CKKS4All status in SOS: %@
octagon-ckks: No peer ID to pass to CKKS. Syncing will be disabled.
octagon-ckks: No memoized CKKS policy, re-fetching
Memoized CKKS policy has no opinion of user-controllable view status
Unable to enable the CKKS4All status in SOS: %@
Initializing CKKS views with policy %@: %@
octagon-ckks: Unable to fetch self peers for %@: %@
Waiting for device unlock to proceed
Error is scary; becoming untrusted
Informing CKKS %@ of trusted operation with self peer %@
octagon: health report is lost: %@
TTR request not for me (sn)
TTR request not for me (deviceId)
octagon: invalid type of TTR requeat: %@
received a cuttlefish push notification (%@): %@
octagon: unknown command: %@
creating aps rate limiter
notifying container of change for context: %@
popdialog: Already checked this altDSID: %@
popdialog: Successfully persisted warned-too-many-peers state for %@
octagon: popdialog: Failed to persist warned-too-many-peers state for %@: %@
popdialog: ego peer status says peer count is: %lu
popdialog: not popping dialog, number of peers ok: %lu < %lu
Unable to fetch account metadata: %@
device name updated: %@
Received an update of an SOS trust set change
This platform doesn't support SOS. This is probably a bug?
creating SOS consistency rate limiter
Unable to determine CloudKit account state?
No CK account present. Attempting to refetch CK account status...
Fetching new CK account status did not complete in time
After refetch, CK account status is %@
No cloudkit account present: %@
Preparing identity as applicant
Returning a prepare call: %@  %@
octagon-inheritance: failed to create CRK: %@
Unable to save voucher for joining: %@
No SOS peers present: %@, skipping in status
No SOS selves present: %@, skipping in status
Returning status of unpaused state machine for container (%@) and context (%@)
Failed to load account metaada for container (%@) and context (%@): %@
Finished dump for status RPC
Returning peer ID: %@
Unable to fetch peer ID: %@
Unable to dump info: %@
octagon: have a trusted peer ID without peer information: %@
Returning a set recovery key call: %@
Returning a create custodian recovery key call: %@
Returning a remove custodian recovery key call: %@
octagon: failed to generate inheritance key: %@
Returning an inheritance key call: %@
Returning remove inheritance key call: %@
returning cached clique status: %@
Device is locked! pending initialization on unlock
no account! returning clique status 'no account'
No cloudkit account present
Unknown cloudkit account status, returning cached trust value
Inherited account -- should circuit to cached trust value
error fetching trust status: %@
trust status: %@
TPPeerStatus is empty
octagon: unable to persist clique trust state: %@
updated account trust state: %@
octagon: error fetching all viable bottles: %@
fetched viable bottles: %@
fetched partially viable bottles: %@
octagon: error fetching all viable escrow records: %@
fetched escrow records: %@
octagon: failed to remove escrow cache: %@
successfully removed escrow cache
octagon: error fetching escrow contents: %@
fetched escrow contents for bottle: %@
account is not hsa2 yet, returning
state machine in the error state, cannot service request
Returning user-controllable status as %@ (%@)
Failed to fetch policy: %@
Policy missing even after a refetch?
Rejecting set of user-controllable sync status due to platform
Unable to persist identity: %@
Successfully persisted new SE identity: %@
Unable to persist removal of identity: %@
Successfully persisted removal of SE identity
Unable to load account metadata for (%@,%@): %@
Returning pending identity for (%@,%@): %@
Unable to fetch account settings for (%@,%@): %@
Beginning to wait for CKKS Priority view download
Done waiting for CKKS Priority view download with error: %@
Done waiting for CKKS Priority view download
octagon-tlk-recoverability: fetching bottles failed: %@
record's bottleID is not valid in cuttlefish
Octagon peerID not trusted for record %@
octagon-tlk-recoverability: failed assessing tlk recoverability using the octagon identity, error: %@
found views using octagon peer matching record! views: %@
octagon-tlk-recoverability: failed to find views
octagon-health: CoreCDP repair failed: %@
CoreCDP post repair success
Failed to check escrow prerecord status: %@
prerecord is pending, NOT posting CFU
no pending prerecords, posting CFU
Successfully left SOS
octagon-health: CoreCDP confirm existing secret failed: %@
Skipping escrow move request (feature disabled)
Unable to acquire EscrowRequest object: %@
Failed to get altDSID: %@
Skipping escrow move request (rate limited), posting follow up
Secure terms not accepted, posting followup
Triggered escrow move
octagon-health: Unable to trigger escrow move: %@
Posted secure terms followup
octagon-health: Failed to post secure terms followup: %@
Beginning checking overall Octagon Trust
currently waiting for class C unlock
waitForOctagonUpgrade
sos not enabled, nothing to do for waitForOctagonUpgrade
SOS circle status: %d, cannot perform sos upgrade
octagon-sos: error retrieving circle status: %@
in sos circle!, attempting upgrade
waitForOctagonUpgrade: already ready, returning
waitForOctagonUpgrade: in ready (after waiting), returning
waitForOctagonUpgrade: fail to get to ready after timeout, attempting upgrade
Failed to fetch allowed machineIDs: %@
MID (%@) on list: %@
Unable to fetch trust status: %@
octagon: failed to reset cdp account contents: %@
successfully reset cdp account contents
performing EscrowRequestServerInitialize
creating voucher using a custodian recovery key
octagon: Error preflighting voucher using custodian recovery key: %@
Preflight Custodian Recovery key ID %@ looks good to go
Custodian Recovery key ID %@ looks good to go
octagon: Error preparing voucher using custodian recovery key: %@
Successfully vouched with a custodian recovery key: %@, %@
creating inheritance peer and recovering shares using an inheritance key
octagon: failed to save 'se' state: %@
octagon-inheritor: Error preparing inheritor identity: %@
octagon-inheritor: Error recovering tlkshares: %@
Saving tlkshares for later use...
unable to save shares: %@
Successfully recovered shares
dropping corrupt manifest for %@ from cache
engine failed load state starting with nothing %@
%@ peer sent bad object: %@, rolling back changes
%@ SOSDataSourceMergeObject failed %@ rolling back changes
SOSEngineHandleMessage_locked (%@): creating a confirmed manifest via a patch (base %zu %@, +%zu, -%zu)
%@:%@ Protocol error send L00 - figure out later base: %@
SOSEngineHandleMessage_locked (%@): got a confirmed manifest by digest: (%zu, %@)
%@:%@ confirmed: %@ base: %@
SOSEngineHandleMessage_locked (%@): new confirmed manifest (%zu, %@) will replace existing confirmed manifest (%zu, %@)
SOSEngineHandleMessage_locked (%@): new confirmed manifest (%zu, %@) is first manifest for peer
%@:%@ unable to find confirmed in %@, sync protocol reset
recv %@:%@ %@
recv %@ -> %@
%@ ASSERTION FAILURE purging excess pendingObjects: %@
%@ ASSERTION FAILURE purging excess unwanted: %@
%@:%@: send state for peer [%s%s%s][%s%s] local:%zu confirmed:%zu pending:%zu, extra:%zu, missing:%zu unwanted:%zu
synced <No MSG> %@:%@
waiting <MSG not resent> %@:%@ extra: %@
%@:%@ object %02X%02X%02X%02X dropping from manifest: not found in datasource: %@
%@:%@ object %02X%02X%02X%02X dropping from manifest: %@
%@:%@ object %02X%02X%02X%02X in SOSDataSourceForEachObject: %@
%@:%@ object %02X%02X%02X%02X is really %02X%02X%02X%02X dropping from local manifest
%@:%@ object %02X%02X%02X%02X der: %@ dropping from manifest: %@
%@:%@: only have differences in unwanted set; lying to peer to stop sync
%@:%@: failed to set message manifests
%@:%@ sendObjects=true L:%@
send %@:%@ %@
%@:%@ failed to send %@
%@:%@ error in send: %@
Failed to process sync for %@: %@
failed to save engine state: %@
Start
No Engine Available
No engine peers: %@
Finish
New coder for id %@.
Failed to create coder for %@: %@
Skipping coder check for peer: %@
adding coder: %@ for peerid: %@
Coder for '%@' failed to create: %@
coder for %@ was not cf data: %@
didn't find coder for peer: %@ engine dictionary: %@
Will force peer registration: %s
SOSCCProcessEnsurePeerRegistration failed with: %@
Migrating from v0 engine state; dropping coders and forcing re-negotiation
peer: %@: bad state: %@ in engine state: %@
No keybag found for v0 backup peer: %@
%@: peer failed to inflate: %@
new engine for datasource named %@
updateChanged failed: %@
error inflating peer: %@: %@ from state: %@
peer: %@ not found, peerMap: %@, engine: %@
%@: %s %s %ld changes, txn=%@, %p
failed to delete tombstone %@ that no one cares about: %@
saving engine state
Not saving engine state, nothing changed.
Skipping non-primary item %@
Sending view notification for view %@
%@:%@: Send state for peer [%s%s%s] O: %zu, M: %zu
%@:%@ backup still done
SOSEngineUpdateChanges_locked: %@ failed: %@
%@:%@ backup done%s
%@:%@ in SOSBackupPeerWriteCompleteMarker: %@
%@:%@ backup incomplete [%zu/%zu]%s
%@:%@ object %02X%02X%02X%02X %s: %@
Probable bug: wrapped key data does not match cached version
Resaving missing key failed, continuing: %@
Unable to load TLK shares for TLK(%@): %@
Failed to recover tlk (%@) from trust state (%@): %@
Recovered tlk (%@) from trust state (%@)
Error with TLK: %@
Unable to load key due to lock state: %@
Do not yet have this key in the keychain: %@
Some key is present, but the key is not self-wrapped: %@
Failed to unwrap tlk(%@) via shares: %@
Errored saving TLK to keychain: %@
wrapping key reference (self-wrapped) does not match
wrapping key reference (non-self-wrapped) does not match
key class does not match
wrapped key does not match
error loading key: %@
BUG: No sync key matching resynced CloudKit record: %@
BUG: Local sync key doesn't match resynced CloudKit record(s): %@ %@
Already know about this sync key, skipping update: %@
Error finding existing local key for %@: %@
Couldn't update existing key: %@: %@
Couldn't save key record to database: %@: %@
Couldn't load key record from database: %@: %@
Couldn't delete key record from database: %@: %@
 couldn't fetch sos status for SF report: %@
couldn't fetch CKMirror counts for %@: %@
View has %@ item ckrecords
couldn't fetch CKKSTLKShare counts for %@: %@
View has %@ tlkshares
couldn't fetch CKKSKey counts for %@: %@
View has %@ sync keys
 couldn't load global zone state: %@
Restarting CKKS %@
registered callback for UUID: %@
fetched UUID: %@
No CK account; failing all pending sync callbacks
No CKKS view for %@, %@
New TLKs have arrived
Failed to get account object
Couldn't process sync with backup peers: %@
telling CloudServices about TLK arrival
Error getting keyset: %@
Do not have keyset: %@
Error loading key: %@
Do not have TLK: %@
Rejecting a resetLocal RPC: %@
Rejecting a resetCloudKit RPC: %@
Rejecting a resync RPC: %@
Ending rsync-CloudKit rpc with %@
Beginning resync (CloudKit) for %@
Rejecting a resync-local RPC: %@
Ending rsync-local rpc with %@
Beginning resync (local) for %@
Rejecting a status RPC: %@
Skipping fetchAndProcessCKChanges due to disabled CKKS
Rejecting a fetch-and-process RPC: %@
Skipping rpcFetchAndProcessChanges because a recent fetch was performed
Beginning fetch for %@
Rejecting a push RPC: %@
Beginning push for %@
Rejecting a ckmetric RPC: %@
Rejecting a proposeTLK RPC: %@
Rejecting a fetchSEViewHierarchy RPC: %@
Rejecting a modifyTLKShares RPC: %@
Rejecting a deleteSEView RPC: %@
Rejecting a toggleHavoc RPC: %@
Received a 24hr notification from XPC
Trust not ready, still going ahead
fetching views
octagon: failed to retrieve policy+views: %@
SecDbKeychainItemV7: error deserializing ciphertext from metadata: %@
SecDbKeychainItemV7: error deserializing wrappedKey from metadata: %@
SecDbKeychainItemV7: error deserializing ciphertext from secret data: %@
SecDbKeychainItemV7: serialized item exceeds reasonable size (%lu bytes)
SecDbKeychainItemV7: error unwrapping item metadata key (class %d, bag %d): %@
SecDbKeychainItemV7: error decrypting metadata content: %@
SecDbKeychainItemV7: tamper check failed for metadata decryption, expected %@ found %@
SecDbKeychainItemV7: error decrypting item secret data contents: %@
SecDbKeychainItemV7: tamper check failed for secret data decryption, expected %@ found %@
SecDbKeychainItemV7: failed to delete item secret key from aks
SecDbKeychainItemV7: item's metadata exceeds reasonable size (%lu bytes) (%@)
SecDbKeychainItemV7: item's secret data exceeds reasonable size (%lu bytes) (%@)
SecDbKeychainItemV7: backup manager didn't return wrapped key: %@
wrapToAKS: Key diversification feature persona(musr) %@ is data separated
SecDbKeychainItemV7: access control error
unwrapFromAKS: Key diversification feature persona(musr) %@ is data separated
nw_path update: network is %@
Network unavailable
Network available
Network still not available, retrying after waiting %2.1f hours
Merging: unable to get attribute (%@) : %@
Preserving existing data for %@
Unable to set attribute (%@) : %@
insert: failed to created a merged item: %@
failed to create a merged item so we will choose the item from the backup
Conflict resolver chose my (local) item: %@
Conflict resolver chose item from the backup: %@
Conflict resolver created a new item; return it to our caller: %@
replaced %@ in %@
    with %@ in %@
inserted %@
insert failed for item %@ with %@
cannot decrypt item %@, item is irrecoverably lost with older passcode (error %@)
error %@ reading item %@ (corrupted)
error %@ %@ != %@ item %@ (corrupted)
error attribute %@ has NULL value in item %@ (corrupted)
attribute %@: %@ item %@ (item lost with older passcode)
error attribute %@: %@ item %@ (corrupted)
deleted %@ from %@
Running state machine request %@ (from %@)
In test hold for state %@; pausing
Beginning state transition attempt %@
State machine rests (%@, f:[%@] p:[%@])
Finishing state transition attempt (ending in %@, intended: %@, f:[%@], p:[%@]): %@ %@
notifying watcher: %@
Finished waiting for operation
Waiting for unlock
Unlock occurred
Waiting for network reachability
Network is reachable
Delay has ended for pending flag %@
Operation has ended for pending flag %@: %@
Conditions are right for %@
Releasing state machine test pause from %@
Beginning a '%@' rpc
Returning '%@' result: %@
ks_decrypt_data failed to decrypt secretdata: version %u mismatch with content
decode v%d failed: %@
items accessGroup '%@' not in %@
Make this item syncable: %@
ks_encrypt_data (db): failed: %@
Unable to wrap keychain item to backup: %@
SecDbItemCopyAccessControl accc %@ != pdmn %@, setting pdmn to accc value
ks_encrypt_data: called with non-device keybag - call should be rerouted to ks_encrypt_data_legacy
Attempting SOS upgrade
Error fetching circle status: %@
Device is not in SOS circle (state: %@), quitting SOS upgrade
Failed to get the persistent ref for our SOS signing key: %@
Failed to get the persistent ref for our SOS encryption key: %@
SOS upgrade error is not fatal: requesting retry in %0.2fs: %@
SOS upgrade error is: %@; not retrying
Fetching trusted peers from SOS
Unable to fetch altDSID from AuthKit: %@
Unable to check safari view status: %@
Safari view is: %@
octagon-sos: Error preparing identity: %@
octagon-ckks: Error persisting new views and policy: %@
octagon-sos: preflightPreapprovedJoin failed: %@
TPH believes a preapprovedJoin will fail; aborting.
TPH believes a preapprovedJoin might succeed; continuing.
handling prepare error: %@
Successfully saved machineID allow-list
Fetching keys from CKKS
Beginning SOS upgrade with %d key sets and %d SOS peers
octagon-sos: attemptPreapprovedJoin failed: %@
A CKKS key hierarchy is out of date; requesting reset
octagon-sos: attemptPreapprovedJoin succeded
Providing ck records (from sos upgrade) to %@
negating %@ = %@ in query
key_count: %ld, QUERY_KEY_LIMIT: %d
update_applier: refusing to update musr
completion handler called on deallocated operation instance
cannot get signing key from account: %@
cannot get ego peer ID from account: %@
cannot get peer keys from account: %@
zone contains delimiter: %@
signerID contains delimiter: %@
attempt to create manifest from CKRecord that does not have signatures attached: %@
failed to initialize CKKSManifest from CKRecord because we could not form a signature dict from the record: %@
attempt to create manifest from CKRecord that does not have a digest attached: %@
failed to decode signatures der dict with error: %@
failed to encode signatures dict to der with error: %@
failed to decode peer manifests der array with error: %@
failed to encode peer manifests to der with error: %@
saving manifest to database but %@ is nil
could not parse components from record name: %@
failed to update manifest from CKRecord with error: %@
error encoding manifest into DER: %@
Error fetching peer verifying keys: %@
failed to lookup manifest leaf record with id: %@ error: %@
failed to fetch leaf record from CKManifest for %@
CloudKit notification: deleted manifest record (%@): %@
CKKSManifest was deleted: %@ %@ error: %@
Not ready to commit manifest, yet - missing leaf record ID: %@
Failed to save fetched manifest record to database: %@: %@
manifest CKRecord was %@
Error getting peer ID: %@
can't get ego peer ID right now - the device probably hasn't been unlocked yet
error loading leaf record from database: %@
unrecognized field type in future schema: %ld
error creating manifest der data: %@
Don't have self peers for %@: %@
Don't have trusted peers: %@
No CKKSTLKShares to %@ for %@
Checking possible TLK share %@ as %@
Unable to unwrap TLKShare(%@) as %@: %@
Current trust set: %@
Unwrapped TLKShare(%@) does not unwrap proposed TLK(%@) as %@: %@
TLKShare(%@) unlocked TLK(%@) as %@
Fetch operation records %@ fetchError %@
Fetch ramp state - featureAllowed %@, featurePromoted: %@, featureVisible: %@, retryAfter: %ld
octagon: Couldn't find CKRecord for ramp. Defaulting to not ramped in
Attempting to fetch ramp state from CloudKit
%@ Defaults availability: SecCKKSTestsEnabled[%s] DefaultsPointer[%s] DefaultsValue[%s]
feature is %@: %@ (local config)
device is locked! can't check ramp state
not signed in! can't check ramp state
no network! can't check ramp state
fetch ramp records returned with featureAllowed: %d,
 featurePromoted: %d,
 featureVisible: %d,
timed out waiting for response from CloudKit
cloud kit asked security to retry: %lu
octagon: had an error fetching ramp state: %@
Attempting to leave clique
Departing failed due to lock state: %@
Unable to depart for (%@,%@): %@
octagon: unable to persist clique departure: %@
Successfully departed clique
kSOSMergeFailure => SecDbItemSetKeybag: %@
setting UUID persistent ref on peersitem: %@
failed to set persistent ref on item %@, error: %@
Conflict resolver chose peers item: %@
Insert succeeded for: %@
kSOSMergeFailure => kSOSMergePeersObject, %@
dsMergeObject failed: mr=%ld, %@
query_destroy failed: %@
digest %zu bytes
SecDbItemSelectSHA1 failed: %@
found item for key %@@%@
failed to load %@@%@ state: %@
found item for keys %@
failed to load item %@: %@
failed to save %@@%@ state: %@
create_datasource %@ failed %@
ACAccount not available
No primary account
No altDSID on primary account
AuthKit not available
Security level for altDSID %@ is %lu
octagon-authkit:could not retrieve altDSID
octagon-authkit: hit an error retrieving altDSID: %@
Account with altDSID %@ is a demo account: %@
AKAnisette not available
Unable to fetch data: %@
Anisette data does not have machineID
fetched current machine ID as: %@
Failed to get primary account AltDSID: %@
Current machine ID list: %@
received no device list: %@
AuthKit not available; dropping device list notification
received notifyAKDeviceList: %@, read payload: %@
partial push or no machine IDs in list; treating as incomplete
Client %@ does not have entitlement %@, rejecting rpc
octagon: Client pid: %d doesn't have entitlement: %@
Couldn't fetch UUID from item; can't call callback
failed to create item from stmt: %@
deleting corrupt %@,rowid=%lld %@
failed to delete corrupt %@,rowid=%lld %@
SecServerDeleteAllForUser for user: %@ keepU %s
Request to delete app clip keychain items for identifier '%@'
Finished request to delete app clip keychain items for identifier '%@' with status %i: %@
Request to promote keychain items for app clip '%@' to parent app '%@'
AppcClipPromotion: unable to create query for class %@: %@
SecServerPromoteAppClipItemsToParentApp SecDbItemInsertOrReplace %d
Unable (%i) to promote item: %@
Encountered error %i during promotion: %@
Promotion reports success, now deleting leftover app clip items
App clip item promotion failed: %@
exporting %ssysbound class '%@'
exporting class '%@' complete
exporting class '%@' complete (no items)
exporting class '%@' failed: %@
Unable to delete nonsyncable items prior to keychain restore: %@
Successfully deleted nonsyncable items
Restoring backup items '%ld'
Restoring sysbound items '%ld'
Class %@ not up to date
SecPersistentRefCreateWithItem: Creating old persistent ref for %llu
ignoring corrupt %@,rowid=%lld %@
corrupted edata=%@
Authentication is needed for %@,rowid=%lld (%d): %@
decode item failed, keychain is locked (%d)
decode %@,rowid=%lld failed (%d): %@
handle_result: Creating old persistent ref for %llu
s3dl_query_row_digest: Creating old persistent ref for %llu
rowid %lu in %@ failed to create pref/digest
DeleteAllFromTableForMUSRView failed for %@ for musr: %@: %@
s3dl_export_row: Creating old persistent ref for %llu
ks_encrypt_data %@,rowid=%lld: failed: %@
Encountered akpu item we cannot export (filter %d), skipping. %@
Could not export item for rowid %llu: %@
export rowid %llu skipped. akpu/token: %i
SecServerDeleteAll
Ignoring unknown key class '%@'
Import %ld items of class %@ (filter %d)
Unknown value type for class %@ (filter %d)
import: failed to get the persistent ref: %@
SecServerImportItem: generated a new persistentref UUID for item %@: %@
Item already has a UUID persistent ref set: %@
Failed to import an item (%@) of class '%@': %@ - ignoring error.
imported item: %@
SecItemSchema: v12 development enabled, returning experimental schema
v12 development disabled, returning production schemas
SecError Nested Error Capping is %@ (via feature flags)
Static Persistent Refs are %@ (via feature flags)
Sent %s
notify_post %s returned: %u
no tversion table, will setup a new database: %@
database version is: 0x%08x : %d : %@
UID: %d  EUID: %d
picked up rowid: %lld that needs a persistref
upgr-phase3: failed to get persistent ref error: %@
upgr-phase3: failed to get rowID error: %@
inspecting item at row %lld in table %@, should add persistref uuid?: %@
upgrading item persistentref at row id %lld
upgr-phase3: failed to set persistentref for item:%@, error:%@
upgr-phase3: SecDbItemSetValueWithName returned false
phase3: failed to update item %@: %d, error: %@
updated item %@: %d
Upgrade %sfailed: %@
upgr-phase3: failed to perform persistent ref upgrade for keychain item(s): %@
finished upgrading keychain items' persistent refs
Failed to delete corrupt item, %@ row %lli: %@
Deleted corrupt rowid %lli from table %@
Cannot update keychain item to access group %@
Performing backup from %s keybag%s
Backup result: %s (%@)
Completed roll keys.
Failed to roll keys.
failed to collect CKKS-inet keys: %@
failed to collect PCS-genp keys: %@
failed to collect PCS-inet keys: %@
failed to collect com.apple.nanoregistry.migration-genp item: %@
failed to collect com.apple.nanoregistry.migration2-genp item: %@
failed to collect com.apple.bluetooth-genp item: %@
Importing %d items
Item w/o class
Item with unknown class: %@
Item creation failed with: %@
Failed to set sync=1: %@ for item %@
Item store failed with: %@: %@
failed to decode keychain item
interaction not allowed: %@
authentication needed: %@
AKS is not ready/timing out: %@
AKS is unavailable: %@
skipping upgrade since minor is newer
no schema for version 0x%x
Upgrading from version 0x%x to 0x%x
upgrade: Upgrade phase1 failed: %@
upgrade: Upgrade phase2 (%d) failed: %@
Done upgrading from version 0x%x to 0x%x
Upgrading saving version major 0x%x minor 0x%x
upgrade: Setting version failed: %@
upgrade: SecDB upgrade failed: %@
upgrade: error has been set but status is true
upgrade: error occurred, considering marking database as corrupt: %@
upgrade: not marking keychain database corrupt for error: %@
upgrade: unable to complete upgrade, marking DB as corrupt: %@
upgrade: unable to complete upgrade and no error object returned, marking DB as corrupt
upgrade: marking database as corrupt
upgrade: unable to opportunistically create index (%@,%@): %@
processed custom indexes (now or in the past)
upgr: failed to process custom indexes: %@
Upgrading table %@
dropping item during schema upgrade due to agrp=com.apple.token: %@
item: %@ insert during upgrade: %@
Bailing in phase 1 because AKS is unavailable: %@
skipping backup setup for this platform
dropping item during item upgrade due to agrp=com.apple.token: %@
Received SQLITE_CONSTRAINT with wrong error domain. Huh? Item: %@, error: %@
Ignoring duplicate item: %@
Bailing in phase 2 because AKS is unavailable: %@
no keychain path available
replaced %@ with %@
items matching issuer parent: %@
function SecTokenItemValueCopy failed with: %@
token item doesn't contain token value data
certificate cannot operate
certificate is not valid yet
certificate expired
item: no app clip client or attributes not set, cannot verify restrictions
SecItemServerDeleteAll
SecItemServerDeleteAll: aborting because failed to initialize Query: %@
skipping keybag unlock for EMCS
Restoring keychain backup
Restore completed successfully
SecServerKeychainRestore: Restore failed with: %@
failed to obtain manifest for keychain: %@
restore %@ not replacing existing item
restore %@ skipping corrupted item %@
restore %@ failed %@
Copy item
Persona is guest/enterprise; rejecting: %@(%d)
Received unexpected Universal/Managed/other persona; treating as not for primary account: %@(%d)
Beginning an operation to upload any pending CKKS tlks
No CKKS views need uploads
CKKS needs TLK uploads for %@
Finishing an update TLKs operation with %@
No CKKS views gave us TLKs to upload
Beginning tlk upload with keys: %@
octagon: Error calling tlk upload: %@
metrics URL is: %@
metrics %@ dropped on floor since too many are pending
metrics %@ transfer %@ completed with: %@
performing KeychainItemUpgradeRequestServerInitialize
kicking off keychain item upgrade
escrowrequest: Unable to deserialize keychain item
%d is not an SOSCCStatus?
%d is not an OTCliqueStatus?
No iCloud account active: %@ hsa2 account:%@
No CK device ID available; cannot make device state entry
Couldn't read old CKKSDeviceStateEntry from database: %@
Couldn't read current key pointers from database: %@; proceeding
Couldn't read keys from database: %@; proceeding
Device is locked; couldn't read TLK from keychain. Assuming it is present and continuing; error was %@
Couldn't read TLK from keychain. We do not have a current TLK. Error was %@
Device is locked; couldn't read ClassA key from keychain. Assuming it is present and continuing; error was %@
Couldn't read ClassA key from keychain. We do not have a current ClassA key. Error was %@
Couldn't read ClassC key from keychain. We do not have a current ClassC key. Error was %@
No octagon peer ID available
error loading cdse: %@
BUG: No current device state entry matching resynced CloudKit record: %@
BUG: Local current device state entry doesn't match resynced CloudKit record(s): %@ %@
Failed to save device record to database: %@: %@ %@
CloudKit notification: deleted device state record(%@): %@
CKKSCurrentItemPointer(%@) was deleted: %@ error: %@
creating voucher
vouching with %d keysets
octagon: Error preparing voucher: %@
Couldn't fetch current item pointers: %@
Re-fetching %@ for %@
No record ID for stored %@
No existing CIPs; fixup complete
Finished record fetch with error: %@
CloudKit believes %@ no longer exists
Unknown error for %@: %@
Finished record fetch successfully
Recieved record %@
Couldn't save CKKSZoneStateEntry(%@): %@
Updated zone fixup state to CKKSFixupRefetchCurrentItemPointers
Recieved tlk share record from query: %@
Couldn't fetch all TLKShare records: %@
Successfully fetched TLKShare records (%@)
Updated zone fixup state to CKKSFixupFetchTLKShares
Couldn't perform a reload: %@
Successfully performed a reload fixup. New fixup number is %d
Updated zone fixup state to CKKSFixupLocalReload
Unable to fetch all CDSEs: %@
Unable to save CDSE: %@
Saved CDSE has no stored record: %@
Successfully performed a ResaveDeviceState fixup
Updated zone fixup state to CKKSFixupResaveDeviceStateEntries
Attempting to remove peers: %@
Unable to remove peers for (%@,%@): %@
Successfully removed peers
CKKSUpdateCurrentItemPointerOperation cancelled, quitting
Couldn't fetch new item, quitting: %@
Hash mismatch for new item: %@ vs %@
Error fetching UUID for new item: %@
Couldn't fetch old item, quitting: %@
Hash mismatch for old item: %@ vs %@
Error fetching UUID for old item: %@
Setting current pointer for %@ to %@ (from %@)
Attempt to set a new current item pointer when one exists: %@
current item pointer(%@) doesn't match user-supplied UUID (%@); rejecting change of current
no user-supplied UUID and current item pointer(%@) is not dangling; rejecting change of current
Requested to update a current item pointer but one doesn't exist at %@; rejecting change of current
Creating a new current item pointer: %@
Error attempting to update current item pointer %@: %@
Error attempting to set a current item pointer to an item that isn't synced: %@ %@
Saving new current item pointer %@
Current pointer upload successful for %@: %@
Couldn't save new current pointer to database: %@
CloudKit record does not match saved record, ignoring: %@ %@
Couldn't save %@ to manifest: %@
couldn't create query for item persistentRef: %@
couldn't run query for item pref: %@
couldn't destroy query for item pref: %@
Query failed: %@
Query failed, cferror is %@
Using prevously-generated proposed keyset: %@
Generating new TLK
couldn't load the current TLK: %@
Old TLK is: %@ %@
Couldn't fetch and unwrap old TLK due to lock state. Entering a waiting state; %@
Couldn't fetch and unwrap old TLK: %@
Couldn't create new TLK: %@
couldn't make new key hierarchy: %@
couldn't make current key records: %@
Couldn't unwrap TLK due to lock state. Entering a waiting state; %@
couldn't unwrap TLK, aborting new TLK operation: %@
couldn't wrap oldTLK, aborting new TLK operation: %@
Saving new keys %@ to keychain
Couldn't save new key material to keychain due to lock state. Entering a waiting state; %@
couldn't save new key material to keychain; aborting new TLK operation: %@
Fatal error: unable to generate TLK shares for (%@): %@
Unable to generate TLK shares for (%@): %@
No need to make TLK for %@; they don't have any encryption keys
Generating TLK(%@) share for %@
iCloud account is present; checking HSA2 status
HSA2 is %@
iCloud account is not present: %@
octagon: unable to save new account state: %@
octagon: TPH was unable to determine current peer state: %@
octagon-consistency: Unable to fetch current account state due to lock state: %@
octagon-consistency: Unable to fetch current account state. Can't ensure consistency: %@
TPH's trust state (%@) is considered %@
TPH peer status matches cache: (%@)
octagon-consistency: Locally cached status (%@) does not match TPH's current peer status (%@)
TPH peer ID matches cache: (%@)
octagon-consistency: Locally cached peer ID (%@) does not match TPH's current peer ID (%@)
octagon-consistency: Unable to save new account state due to lock state: %@
octagon-consistency: Unable to save new account state. Erroring: %@
Saved new account metadata
Appear to be trusted for peer %@; ensuring correct state
Have iCloud account but not trusted in Octagon yet: %@; attempting SOS upgrade
Have iCloud account but not trusted in Octagon (%@)
Unknown trust state (%@). Assuming untrusted...
Posting a follow up (for Octagon) of type %@
Clearing follow ups (for Octagon) of type %@
Keybag unlocked
Error getting %@ from MobileGestalt
CloudKit reports there's more records to fetch!
No existing change token; going to try to match local items with CloudKit ones.
We have a fixup to perform: %@
Couldn't reset in-flight OQEs, bad behavior ahead: %@
Error examining existing key hierarchy: %@
No existing key hierarchy for %@. Check if there's one in CloudKit...
Requesting local data reset
Restricting local data reset to a view subset %@
Beginning local data reset for %@
Requesting reset of CK zone (logged in)
Restricting cloudkit zone reset to a view subset %@
Restricting cloudkit zone reset to active CKKS-managed subset %@
Beginning cloudkit zone reset for %@
CK account is not present
CloudKit account now present
No account available
CloudKit account is missing. Departing!
Staying in error state %@
Deleting the CloudKit Zones for %@
Resetting local data for %@
Beginning trusted state machine operation
Now operating on these views: %@
Kicking off a full key refetch based on request:%d
Kicking off a key refetch based on request
Kicking off a key reprocess based on request
In ready, but there's no trust; going into waitfortrust
Received a nudge that the trusted peers set might have changed! Reprocessing.
Launching a scan operation to find dropped items
Current state is %@, khf: %d
Kicking off a fetch based on request
Requesting TLK upload
Misbehaving key states: %@
Starting a key hierarchy full refetch
Creating new TLK shares didn't work. Attempting to refetch!
Looks like the key hierarchy is unhealthy, but we're untrusted.
Looks like the key hierarchy is unhealthy. Launching fix.
Going to process the incoming queue with a fresh policy
Zone does not yet exist: %@ %@
Incoming Queue item counts: %@
Unable to load key for %@: %@
Have pending classA items for view, but device is locked
Incoming Queue CIP count: %d
Unable to count CIPs: %@
Beginning again to include these views: %@
Couldn't count reencrypt OQEs, bad behavior ahead: %@
Zone not ready (%@): skipping reencryption
Syncing disabled for (%@): skipping incoming queue processing
Fetch last occurred at %@ (%@); beginning a new one
Fetch last occurred at %@ (for %@)
CKKS scan last occurred at %@; beginning a new one
CKKS scan last occurred at %@ (for %@)
Have %d outgoing items; scheduling upload
Error checking outgoing queue: %@
Unable to count mirror entries: %@
Unable to load keyset: %@
TLK is missing, but no trust is present.
No other devices claim to have the TLK. Resetting zone...
Resetting zones due to missing TLKs: %@
Trusted device state (%@) is too old; ignoring
Device (%@) is not trusted and from too long ago; ignoring device state (%@)
Device (%@) is not trusted, but very recent. Including in heuristic: %@
Other device (%@) has keys; it should send them to us
Error fetching device states: %@
Trusted TLK Share (%@) created recently; other devices have keys and should send them to us
Untrusted TLK Share (%@) created very recently; other devices might have keys and should rejoin the circle (and send them to us)
Skipping handleKeychainEventDbConnection due to disabled CKKS
Potential new key material from %@ (source %lu)
skipping sync of non-sync item (%d, %d)
Ignoring syncable keychain item for non-primary account
No policy configured. Skipping item: %@
No intended CKKS view for item; skipping: %@
No CKKS view for %@, skipping: %@
Routing item to zone %@: %@
skipping syncing update of tombstone item (%d, %d)
Client has asked for an item deletion to not sync. Keychain is now out of sync with account
Received an incoming %@ from SOS (%@)
Dropping sync item modification due to CK account state; will scan to find changes later
processKeychainEventItemAdded given garbage: %@ %@
Couldn't create outgoing queue entry: %@
Decided that no operation needs to occur for %@
Couldn't save outgoing queue entry to database: %@
Saved %@ to outgoing queue
Couldn't load OQE siblings for %@: %@
Couldn't find IQE matching %@: %@
Couldn't delete IQE matching %@: %@
Deleted IQE matching changed item %@
Cancelling request: %@
Rejecting current item pointer set since we don't have an iCloud account: %@
Starting change current pointer operation for %@-%@
Failed setting a current item pointer for %@ with %@
Finished setting a current item pointer for %@
Rejecting current item pointer get since no access group(%@) or identifier(%@) given
Rejecting current item pointer get since we don't have an iCloud account: %@
Rejecting current item pointer get since fetch failed: %@
No current item pointer for %@
Current item pointer is empty %@
Retrieved current item pointer: %@
Already have keyset %@
No current keyset for %@ (%@)
Received a set of %lu TLK upload records
Throwing away CKOperationGroup(%@) in favor of (%@)
rpcFetch failed: %@
rpcFetch succeeded
rpcFetchAndProcess failed: %@
No local TLKs for %@; failing a fetch rpc
Returning failure for waitForPriorityViews: %@
Returning success for waitForPriorityViews
waitForPriorityViews pending on %@
Havoc is now %@
Error getting PCS key hash for service %@: %@
Error finding inflight outgoing queue records: %@
Error fixing up inflight OQE(%@): %@
Received notification of CloudKit account status change, moving from %@ to %@
Computed status of new CK account info is same as old status: %@
Logged into iCloud.
Logging out of iCloud. Shutting down.
Account status has become undetermined. Pausing!
received a notification of CK login
Skipping CloudKit initialization due to disabled CKKS
received a notification of CK logout
Beginning trusted operation
Moving from an untrusted status; we need to process incoming queue and scan for any new items
Ending trusted operation
Nil syncing policy presented; ignoring
New syncing policy: %@ (%@) views: %@
Intersecting view list with allow list: %@
Final list: %@
Final list of externally-managed view names: %@
Syncing for %@ is now %@ (used to be %@) (policy: %@)
Stopping old view %@
Created %@ %@ view %@
Initializing a priority view for the first time
A priority view has more records in CloudKit; treating as new
Issuing scan suggestions to handle missed items
Restricting operation to priority views: %@
Not participating in fetch: not logged in
Not participating in fetch: zone not created yet
Not participating in fetch: zone is not active
skipping fetch for %@; zone is not ready
couldn't fetch zone change token for %@
Dropping fetch due to halted operation
In a resync, but there's More Coming. Waiting to scan for extra items.
Comparing local UUIDs against the CloudKit list
UUID %@ is still in CloudKit; carry on.
Couldn't read an item from the database, but it used to be there: %@ %@
Couldn't read ckme(%@) from database; continuing
BUG: Local item %@ not found in CloudKit, deleting
Couldn't save new server change token: %@
No record changes in this fetch
Beginning incoming processing for %@
Finished processing changes for %@
Received notice that our change token is out of date (for %@). Resetting local data...
Received notice that our zone(%@) does not exist. Resetting local data.
Received notice that our container does not exist. Nothing to do.
Received update that our self identity has changed
Received update that the trust set has changed
attempted to schedule an operation on a halted zone, ignoring
attempted to schedule an non-dependent operation on a halted zone, ignoring
Haven't yet received a syncing policy
Haven't yet initialized SecDb; expect failure
Rejecting %@ RPC since we don't have an iCloud account: %@
Haven't yet received a policy; failing %@
Haven't yet received a policy; expect failure later doing %@
Building status for %@
Status is %@
error loading keyset: %@
xpc: %@
retrieving epoch
octagon: Error getting epoch: %@
couldn't fetch list of remote keys: %@
After remote key processing, Key hierachy is '%@' (error: %@)
Checking consistency of key hierarchy
Key hierachy is '%@' (error: %@)
remote keys: %@
no current pointer for some keyclass: tlk:%@ a:%@ c:%@ %@ %@
Proposed TLK doesn't wrap self: %@
couldn't find active TLK: %@
Not proceeding due to trust system failure: %@
new key %@ is orphaned (%@)
Couldn't unwrap new key (%@), but keybag appears to be locked. Entering waitforunlock.
new key %@ claims to wrap to TLK, but we can't unwrap it: %@
New key %@ wraps to tlk %@
Couldn't save newly local key %@ keychain, due to lock state. Entering a waiting state; %@
couldn't save newly local key %@ to database: %@
triggering new TLK notification: %@
Accepted new key hierarchy
No existing key hierarchy (missing all CKPs): %@
Trust system reports device locked: %@
Error examining existing key hierarchy (missing at least one key): %@
Error loading TLK(%@): %@
Soft error loading TLK(%@), maybe locked: %@
Error loading classA key(%@): %@
Soft error loading classA key(%@), maybe locked: %@
Error loading classC(%@): %@
Key hierarchy unhealthy: %@
couldn't load old share for %@: %@
Couldn't save new TLK share to database: %@ %@
CloudKit notification: deleted tlk share record(%@): %@
CK notification: Couldn't delete deleted TLKShare: %@ %@
Zone is entering %@
Account is inherited, bailing out of healing TLKShares
Due to write failures, we'll retry later
View key state is %@; not checking TLK share validity
couldn't load current keys: can't fix TLK shares
Keychain is locked: can't fix shares yet: %@
couldn't load current tlk from keychain: %@
Unable to create shares for trust set %@: %@
Unable to create shares due to some trust issue: %@
Unable to create shares: %@
Don't believe we need to change any TLKShares, stopping
New shares won't resolve the share issue; erroring to avoid infinite loops: %@
Uploading %d new TLKShares
Uploading TLKShare to %@ (as %@)
Successfully completed upload for record %@
Completed TLK Share heal operation with success
Couldn't save new TLKShare record to database: %@
Completed TLK Share heal operation with error: %@
Failed to find peers for nonessential system: %@
New share set is missing shares for peers: %@
TLK not loaded; cannot make shares for peers: %@
Unable to find peers missing TLKShares: %@
Creating share of %@ as %@ for %@
Couldn't create new share for %@: %@
Couldn't find missing shares because trusted peers aren't available: %@
Couldn't find missing shares because self peers aren't available: %@
current self peer (%@) is not in the set of trusted peers: %@
Peer (%@) is not supposed to have view, skipping
Unable to load existing TLKShares for peer (%@): %@
Existing TLKShare's signature doesn't verify with current peer set: %@ %@
Local peer %@ is shared %@ via self: %@
Local peer %@ is shared %@ via trusted %@, but that's not good enough
Peer %@ is shared %@ via trusted %@
Peer %@ has a share for %@, but to old keys: %@
Missing TLK shares for %lu peers: %@
Self peers are (%@) %@
Trusted peers are (%@) %@
CKKSReencryptOutgoingItemsOperation cancelled, quitting
View is %@; reencryption will likely fail
Error fetching oqes from database: %@
Couldn't load 'new' OQE to determine status: %@
Have a new OQE superceding %@ (%@), skipping
Couldn't delete reencrypting OQE(%@) from database: %@
Reencrypting item %@
Couldn't find key in keychain; asking for reset: %@
Couldn't decrypt item %@: %@
Couldn't fetch key (%@) for item %@: %@
Couldn't fetch the current key for class %@: %@
Couldn't fetch ckme (%@) for item %@: %@
Couldn't encrypt under the new key %@: %@
Couldn't save newly-encrypted oqe %@: %@
CKKS: error fetching SecBackupKeybagEntry(%@): %@
Submitting initial CKEventMetric due to notification %@
Registering new CKKS push receiver: %@
sending stored push(%@) to newly-registered receiver: %@
received registration for released OctagonAPSReceiver
sending fake push to newly-registered cuttlefish receiver(%@): %@
OctagonAPSDelegate initiated: %@
Received per-topic push token "%@" for topic "%@" identifier "%@" on connection %@
OctagonAPSDelegate received a message(%@): %@ 
Received a cuttlefish push to container %@
received cuttlefish push for unregistered container: %@
received push for unregistered receiver: %@
unexpected notification: %@
Can't reset CloudKit zone for view %@: %@
Can't propose TLKs for view %@: %@
Unable to make TLK: %@
Unable to make fake class keys: %@
Unable to load old TLK: %@
Unable to convert old TLK: %@
Trying to set TLK %@
Wrapped old TLK: %@
TLKShares: %@
Unable to create CKP: %@
Unable to create class CKP: %@
Beginning upload for %d records
Completed uploading new TLK!
Can't fetch CloudKit zone for view %@: %@
Haven't successfully completed a fetch for this zone; returning %@
Error loading TLK pointer for this zone: %@
No TLK pointer for this zone
No TLK for this zone
Unable to load TLKShares for zone: %@
Can't modify CloudKit zone for view %@: %@
Unable to load currentTLK: %@
TLKShare is not for the current TLK(%@): %@
Unable to load TLKShare (to delete): %@ %@
Requested modifications are a no-op; claiming success
error proposing new TLK: %@
Completed modifying TLK share records!
couldn't wrap key: %@
loaded a piggy TLK (%@)
loaded a stashed TLK (%@)
Unable to unbase64 key: %@
Resaving %@ as per request
Resaving %@ failed: %@
SOSEnsureBackup: Backup already scheduled for next unlock
SOSEnsureBackup: Scheduling a backup for next unlock
Performing keychain backup after unlock because backing up while locked failed
SOSEnsureBackup: SOS made a backup of views: %@
engine: SOSEnsureBackup: encountered an error while making backup (%@)
TrustedPeersHelperSetupProtocol failed, continuing, but you might crash later: %@
Finishing state transition attempt %@
Beginning client state transition attempt %@
Running client %@ state machine request %@ (from %@)
moving to state done for %@
removing client connection for %@
OTCuttlefishContext: received a cuttlefish push notification (%@)
octagon: Can't talk with TrustedPeersHelper, update is lost: %@
OTCuttlefishContext: updating errored: %@
OTCuttlefishContext: update complete
Returning an epoch call: %llu  %@
Returning a voucher call: %@, %@, %@
Waiting for CKKS Priority view download for %@
received a zone change notification for %@ %@
Skipping fetching size no zone is ready
Halted; not starting a new fetch
Starting a new fetch, reasons: %@
No clients
blocking fetch on network reachability
Received a null self pointer; strange.
Interrogating clients about fetch error: %@
All clients thought %@ is a fatal error. Not restarting fetch.
Fetch failed with rate-limiting error, restarting in %.1f seconds: %@
Fetch failed with error, restarting soon: %@
CKKSNFS triggered!
upgrading persistent refs
hit an error, triggering CKKSNFS: %@
finished upgrading items!
waiting for trigger to occur
handling persistent ref flag, attempting to upgrade next batch
nothing to do
dropping class A metadata keys
dropping all metadata keys
SecDbKeychainItemV7: AKS decrypted metadata blob for class %d but could not turn it into a key: %@
SecDbKeychainItemV7: Unable to create key from retrieved data: %@
SecDbMetadataKeyStore: Unable to encrypt new metadata key to keybag: %@
SecDbMetadataKeyStore: Unable to encrypt new metadata key to backup infrastructure: %@
Failed to write new metadata key for %d: %@
Metadata key for %d has no or mismatching backup data; will rewrite.
No metadata key found on disk despite existing row. That's odd.
SecDbMetadataKeyStore: Unable to rewrite metadata key for %d to new format: %@
keyForKeyclass called without error param, this is a bug
SecDbKeychainItemV7: cannot decrypt metadata key because the keychain is locked (%ld)
SecDbMetadataKeyStore: Unable to load metadatakey for class %d from disk (%@) and not allowed to create new one
SecDbMetadataKeyStore: unable to use key (%ld), will attempt to create new one
SecDbMetadataKeyStore: unable to create or save new key: %@
SecDbMetadataKeyStore: scary error encountered: %@
genericMetric  %{public}@ with unhandled metric type: %{public}@
Beginning operation that preloads the SOSAccount with newly created Octagon Keys
finished creating zones
finished subscribing to zones
Halted; not launching operations
No pending zone modification operations; quitting
Have in-flight zone modification operations, will retry later
Attempting to create zones %@, delete zones %@
Zone modification failed: %@
created zones: %@
deleted zones: %@
Waiting for reachability before issuing zone creation
Attempting to subscribe to zones %@
Couldn't create cloudkit zone subscription; keychain syncing is severely degraded: %@
Successfully subscribed to %@
Waiting for reachability before issuing zone subscription
CK operation failed with rate-limit, scheduling delay for %.1f seconds: %@
SFKeychainServer: connection denied due to entitlement %@
SFKeychainServer: attempt to fetch credential with invalid persistent identifier; %@
SFKeychainServer: attempt to remove credential with invalid persistent identifier; %@
Beginning an 'reset CKKS' operation
Finishing a ckks-local-reset operation with %@
Finished ckks-local-reset with %@
Telling CloudServices about any pending requests
Trying again after unlock
No pending escrow request needs a certificate
escrowrequest: cloudservices reports an issue caching the certificate, so we'll have to try again later: %@
escrowrequest: unable to save the last attempt time: %@
escrowrequest: unable to save escrow update request certificate status, so we'll have to try again later: %@
CloudService successfully cached a certificate; request is ready for passcode
escrowrequest: unable to begin passcode request: %@
escrowrequest: sbd failed to cache a certificate
Attempting to reset octagon
Unable to reset for (%@,%@): %@
Successfully reset Octagon
Error resetting local account metadata state: %@
Successfully reset local account metadata state
sync and wait starting
failed sync and wait: %@
failed flush: %@
finished sync and wait
no stashed credential
returning stash credential: %@
SecKeyCreateWithData failed: %@
SOSAccountTryUserPrivateKey failed: %@
SOSAccountTryUserPrivateKey succeeded
failed final flush: %@
Failed to process credentials %@
trigger a forced sync for %@
No value found for SOSMonitorMode initializing to Active
Putting SOS into monitor mode
SOSMonitorMode is not turned on for this platform
Setting SOS to active
sosEvaluateIfNeeded - Turning on SOS since monitor mode is unavailable
sosEvaluateIfNeeded - checking circle
SOS is in monitor mode since the account key isn't trusted
Putting SOS into active mode for circle change
Putting SOS into monitor mode due to circle change
Changing DSID from: %@ to %@
Not Changing DSID: %@ to %@
Setting account.key_interests_need_updating to true in SOSAccountCreate
Setting Account to New
Setting account.key_interests_need_updating to true in SOSAccountSetToNew
Error cleaning up after peer, probably orphaned some stuff in KVS: (%@) 
 moving on
Reset to offering with last retirement and me as applicant
Reset to empty with last retirement
SOSFullPeerInfoPromoteToRetiredAndCopy error: %@
Create ticket failed for peer %@: %@
Couldn't post retirement (%@)
Couldn't flush retirement data (%@)
Reset backup ring %@ %s
successfully registered recovery public key
could not register recovery public key: %@
RK Cleared
Couldn't clear RK(%@)
Could not retrieve the recovery public key from the ring: %@
Normal path circle join (SOSAccountJoinCircles)
Joining after restore (SOSAccountJoinCirclesAfterRestore)
Attempting to remove peer set %@
Can't remove without userKey
Can't remove without being active peer
No peerSet to remove
Leaving circle by client request (SOSAccountRemovePeersFromCircle)
Removed Peers from circle %@
Attempting to leave circle - best effort - in %llu seconds
Leaving circle by client request (Bail)
Ensuring peer registration.
Failed to get trust object in Ensuring peer registration.
can't initialize transport for peer %@ with %@ (%@)
Updated retired peer %@ in %@
Error cleanup up after peer (%@): %@
key: %@
message keys that we should remove! %@
total keys: %lu, cleaning up %lu
Found %d TLKs
identities: %@
Making circle joining piggyback blob as sponsor (SOSAccountCopyCircleJoiningBlob)
Invalid circle status: %@ to accept piggyback as sponsor (SOSAccountCopyCircleJoiningBlob)
Peer application wasn't signed with the correct userKey
Failed to make circle joining piggyback blob as sponsor %@
Joining circles through piggyback (SOSAccountCopyCircleJoiningBlob)
Bad data blob: piggyback (SOSAccountCopyCircleJoiningBlob)
Failed - no private credential %@: piggyback (SOSAccountCopyCircleJoiningBlob)
Failed - decoding blob %@: piggyback (SOSAccountCopyCircleJoiningBlob)
setting flag in account for piggyback v0
clearing flag in account for piggyback v0
ACCOUNT: No Circle
Sync: %c%c PeerViews: %@
outstanding views: %@
timer fired!
coder is in awaiting state, restarting coder
Attempt to recover coder failed to restart: %@
coder restarted!
time fired but out of negotiation! Not restarting coder
SOSPeerRateLimiter timer went off! sending:%@ 
 to peer:%@
could not send message: %@
error grabbing engine for peer id: %@, error:%@
trigger backup for peers: %@ at %@
trigger ring update at %@
performing backup for %@
Failed to delete v0 keybag: %@
flush circles/rings failed %@
Entering state: %@ [flags: %@]
EFP calling SOSCloudKeychainSynchronizeAndWait
CloudCircle EFRESH
EFP returned, callback error: %@
EFP complete: %s %@
Starting
Returned %s
SecItemDelete: %d
Resetting circle to offering because it's empty and we're joining
attempt to join a circle we're in - continuing.
Resetting circle to offering since we are new and it doesn't verify with current userKey
Resetting my peer (ID: %@) for circle '%@' during application
Resetting circle to offering since there are no peers
Failed to join with cloud identity: %@
Got error in SOSCircleHasPeer: %@
SOSCloudKeychainGetObjectsFromCloud returned error: %@
SOSCloudKeychainRemoveKeys returned error: %@
SOSCloudKeychainPutObjectsInCloud returned error: %@
unable to fetch TLKs: %@
Failed to load TLK %@: %@
sending TLK %@
fetched TLK %@ with name %@
sending %d tlks
sending %d identities
preparing TLK in order: %@: %@
%@: Joining blob for account: %@ for piggyback (V%d) gencount: %@  pubkey: %@ signatureID: %@  starting circle hash: %@
Error during SOSAccountProcessBackupRings (%@)
Setting peerInfo backupKey to %@
Setting peerInfo backupKey to NULL
circle_rings_retirements_need_attention set to true since we got a BackupKey
failed to set V0 keybag (%@)
Not currently in circle
account backup key isn't valid: %@
Account backup key and peerinforef backup key don't match.  Using account backup key.
Failed to setup backup public key in peerInfo from account: %@
Got Success and Error (dropping error): %@
Got error setting keybag for backup view '%@': %@
Peer list contains a non-peerInfo element
failed to decode pbkdf2 params
%@ %@]
do not have an rtt yet
timeout dictionary doesn't exist
timeout for peerid: %@, doesn't exist
SOSAccountSetValue threw an error for key kSOSAccountPeerNegotiationTimeouts: %@
OTR negotiation retry count: %d
deadline value not available yet
decided to wait %d before restarting negotiation
setting timer for peer: %@
otrTimerFired fired
negotiation finished! clearing max retry counter
synced with peer: %@
failed to sync with peer: %@ error: %@
Skipped peer ID: %@ due to %@
Peer Sync failed: %@
Engine Backup Sync failed: %@
Not performing requested sync operation: not in circle yet
Syncing with KVS capable peer: %@
KVS sync %s. (%@)
Arming account to update SOSEngine with current trusted peers
Purging private account credential
Moving : %@ to previousAccountKey
not trusting new public key: %@
Setting private credential purge time to %llu minutes
Password cache expired
Failed to update user private key to keychain: %d
Failed to add user private key to keychain: %d
Stored user private key stashed local keychain
Password generated pubkey doesn't match - candidate: %@  known: %@
Looked for a stashed private key, didn't find one
Long password (>20 byte utf8) being used to derive account key 
 this may be a PET by mistake!!
Failed to publish new cloud parameters: %@
Setting account.key_interests_need_updating to true in SOSAccountAssertUserCredentials
Setting account.key_interests_need_updating to true in SOSAccountTryUserCredentials
Failed to accept provided user_private as credential
Setting account.key_interests_need_updating to true in SOSAccountTryUserPrivateKey
Accepted provided user_private as credential
trusting new public key: %@
Purging private entities for userKey
SOSAccountSetPrivateCredential nothing to save
setting new private userKey
temporarily caching userKey password
no userKey password to save
Timing out, purging private account credential
Failed to retrieve cloud parameters - %@
Failed to create correct key with password.  Caching for use with KeyParam refreshes
Already associated with ring
Failed to cleanup after peer %@ messages: %@
Failed to cleanup after peer %@ retirement: %@
Calling SOSCircleUpdatePeerInfo for %@
Signed Peerinfo to update
Failed updating PeerInfo
status: %ld
No private key associated with my_identity, resetting
Setting account.key_interests_need_updating to true in SOSAccountCreateFromDER
Error Processing expansion dictionary der - dropping account object
Setting backup key from metadata
Failed to set backup key from metadata - no key found
Non ring in ring table: %@, purging!
SOSAccountUpdateRingFromRemote called before signing in to new account
initial last circle status is: %d
new last circle status is: %d
posting kSOSCCCircleChangedNotification
UID: %d - Starting as:%s %@ v:%@
Unsynced was: %@
Unsynced is: %@
UID: %d - Finished as:%s %@ v:%@
Notified clients of kSOSCCCircleChangedNotification && kSOSCCViewMembershipChangedNotification for circle/view change
Notified clients of kSOSCCViewMembershipChangedNotification for viewchange(only)
Notified clients of kSOSCCCircleChangedNotification for userKey change
No longer trust user public key - prompting for password.
UserKey is once again trusted and we're valid in circle.
UID: %d - No account; running block on local thread
Self peer(%@) %@ CKKS For All
Peer %@ supports CKKS For All; ignoring in SOS syncing
Meta: %@: %@
My Meta: %@: %@
calling change block
SOSAccountHandleCircleMessage called before signing in to new account
NULL circle found, ignoring ...
Incompatible circle found, abandoning membership: %@
SOSAccountHandleParametersChange called before signing in to new account
SOSAccountHandleParametersChange got new public key: %@
Got same public key sent our way. Ignoring.
Got previous public key repeated. Ignoring.
Successfully used cached password with new parameters
Got new parameters for public key - could not find or use cached password
Setting account.key_interests_need_updating to true in SOSAccountHandleParametersChange
Haven't finished initial backup syncing, not registering backup metas with engine
No key to backup to, we don't enable individual view backups
View '%@' not being backed up 
 ring %@:%@ not backup ring.
Not ready, no peer meta: R: %@ Vs: %@
Backup peer meta: R: %@ Vs: %@ VD: %@
Failed to register backup meta from %@ for views %@. Error (%@)
Value provided not appropriate for a circle
No circle found in data: %@
Expected circle named %@, got %@
SOSCircleCreateFromData returned NULL.
adding sync block [%@] to array!
Views in sync: %@
not in circle nor applying: clearing pending
Pending views setting to all we can expect.
Unsynced: %@
Empty set, using NULL instead
Failure saving new unsynced value: %@ value: %@
Peer %@ synced views: %@
Setting up notifications to monitor in-sync
Couldn't find engine to setup notifications!!!
Cancelling notifications to monitor in-sync
No engine to cancel notification from.
Handling initial sync done.
Account could not add the pending view sets
updated view sets!
Could not update view sets
calling in sync block [%@]
Handling Required Backup Sync done
Warning, attempting to Add KeychainV0
Calling SOSCircleUpdatePeerInfo for gestalt change
reset all rings error: %@
Reset Rings to empty by client request
error: %@
Ring %@ not stable
start:[%s] modifier: %@
Ceasing ring handling for an echo of our own posted ring
##### No trusted peer signature found, accepting hoping for concordance later
##### No User Public Key Available, this shouldn't ever happen!!!
##### Bad Error Return from ConcordanceTrust
Decided on action [%s] based on concordance state [%@] and [%s] ring.
changing state to accept - we have a reset ring
mismatch between filteredPeerIDs and ringPeerIDSet, fixing ring and gensigning
filteredPeerIDs %@
  ringPeerIDSet %@
Backup ring contains no BSKB
BSKB is missing some backup keys
BSKB is missing recovery key
Need to fix BSKB - this will prompt a gensign
Couldn't fix BSKB (%@)
Already concur with newRing
concordance signed
Failed to concordance sign, error: %@
Reset ring for recovery from remote peer
normal ring recovery key harvest
   RePush: %@
Rejecting: %@
Have no old ring - would reset
Pushing:[%s] %@
Setting account.key_interests_need_updating to true in handleUpdateRing
Calling SOSCircleUpdatePeerInfo for views change
Enabling User Visible Views to match OT Settings
Disabling User Visible Views to match OT Settings
Attempt to set viewsets with no trusted circle
Attempt to set viewsets with no fullPeerInfo
No work to do
Couldn't copy PeerInfoRef
Unable to update peer to V2- can't update views: %@
Updating PeerInfo to V2 within SOSAccountUpdateViewSets
Enabling %@
Disabling %@
Bad view change (enable) with kSOSViewKeychainV0
Bad view change (disable) with kSOSViewKeychainV0
Calling SOSCircleUpdatePeerInfo for views or peerInfo change
Tried to set dataSourceEngine with no circle
%@ list: %@
No %@ list provided.
Unable to allocate ring
Unable to decode DER
Failed to set UUID: %@ (%@)
NULL Coder requested, no transport security
Coder create failed: %@
SOSCoderIsFor failed: %@
%@ %s %@ %@ returned %s
Resending OTR Start %@
%@ Decode OTR Protected Packet: %@
%@ Unknown packet type: %@
%@ %@ %s %@ %@ returned %s
Requesting too much space for digest vectors: %ld
reallocf failed requesting space for digest vectors: %ld (bytes)
Failed to get size of dictionary - %@
Failed to DER encode dictionary - %@
concordance trust (%s)
    knownRing: %@
 proposedRing: %@
knownkey: %@ userkey: %@ myPeerID: %@
SetRecoveryPublic: %@ from %@
SetRecoveryPublic Failed: %@
Recovery Key changed: old %@ new %@
SOSMessageSetManifests: setting base digest to %@ %zu
SOSMessageSetManifests: setting proposed digest to %@ %zu
SOSMessageSetManifests: setting sender digest to %@ %zu
internal error %td bytes unused in der buffer
der_encode_manifest_digest_message: encoded sender digest as %@
der_encode_manifest_message: encoded message additions as (%zu, %@)
der_encode_manifest_and_objects_message: encoded base digest as %@
der_decode_v0_message_body: received a DigestMessage with sender digest: %@
%td trailing bytes after deltas DER
der_decode_v0_message_body: received a ManifestMessage with (%zu, %@)
der_decode_manifest_and_objects_message: decoded base digest as %@
der_decode_message_header: decoded sender digest as %@
der_decode_message_header: decoded base digest as %@
der_decode_message_header: decoded proposed digest as %@
internal error %td bytes unused in generalizedtime DER buffer
%td trailing bytes after SOSMessage DER
%td length 
%td trailing bytes after objects DER
posting notification to CloudServices: %s
Unable to unlink file %s: %@
Handing off file %s of size %llu
Handing off file %s failed, %@
%@ keybag for backup unset
%@ backup bag: %@
%@ RM:%@ SR:%@ SA:%@ UR:%@
%@ C:%@ U:%@ O:%@
%@: willCommit R:%@ A:%@ UA:%@ %s O%s%@%s%@
bad change %@: %@
%@ had no views, inferring: %@
%@ unlinking journal file %s
%@ failed to write reset to backup journal: %@
%@ Wrote reset.
removing timer for peer: %@
%@ engine negotiating
%@ engine negotiation complete
%@ engine failed handling message %@
%@ engine stale event ignored
%@ engine received a message too soon, time to restart
%@ engine unknown coder state: %d
%@ getCoder: %@
coder state: %@
%@ Coder can wrap, getting message from engine
%@ SOSEngineCreateMessage_locked failed: %@
%@ SOSCoderWrap failed: %@
%@ negotiating, %@
coder is in awaiting state
coder not in awaiting state: %@
timer for coder already set: %@
concordance-signer-status: %@ -> %d
ring empty -> trusted
Error getting key parameters interests %@
Error getting circle interests %@
Error getting ring interests %@
Error getting debug key interests %@
Error getting message interests %@
Calculating interests done: %s
Updating interests: %@
 key-intrest: %@->%@: %@
Pushing %lu interests to CKP
Error updating keys: %@
SOSTransportDispatchMessages received kSOSKVSAccountChangedKey
Setting account to new because a new DSID is in KVS
Unknown key '%@', ignoring
Peer message processing error for: %@ -> %@ (%@)
Transport failed to handle new key parameters: %@
Transport failed to handle retirement messages: %@
No messages handled: %@
Flush failed: %@
Transport failed to handle circle messages: %@
Transport failed to process all circle messages: (%ld/%ld) %@
Transport handled no circle messages
Transport failed to handle ring messages: %@
Updates [%ld]: %@
Handled [%ld]: %@
Setting key_interests_need_updating to true in ensureCircle
start:[%s]
##### Can't update to a NULL circle ######
##### Can't replace circle - we don't care about it ######
Decided on action [%s] based on concordance state [%@] and [%s] circle.  My PeerID is %@
Leaving circle with peer %@
Key state: accountKey %@, previousAccountKey %@, old_circle_key %@
Leaving circle by newcircle state
Can't leave circle, but dumping identities
We are not in this circle, but we need to update account with it
Already concur with the new circle
Concurred with new circle
Failed to concurrence sign, error: %@
Not countersigning, not in new circle
Sending kSOSCCCircleOctagonKeysChangedNotification
Member of old circle but not of new circle (%d)
Purging my peer (ID: %@) for circle '%@'!!!
Rejected, Purging my applicant peer (ID: %@) for circle '%@'
Rejected, Reapplying (ID: %@) for circle '%@'
Fixed iCloud Identity in circle
Failed to fix broken icloud identity
%@, Accepting new circle
requesting readmission to new circle
Setting key_interests_need_updating to true in handleUpdateCircle
%@, Rejecting new circle, re-publishing old circle
%@, Rejecting: new circle Have no old circle - would reset
Pushing:[%s]
no change to userKey - skipping gensign
we changed the circle? %@
leaveCircleWithAccount: Leaving circle by client request
Leaving circle by client request
Resetting circle to offering by request from client
error resetting circle (%@) to offering: %@
circleOps: Cannot fetch signing key for old %@: %@
circleOps: Cannot fetch encryption key for old %@: %@
circleOps: Cannot fetch signing key for new %@: %@
circleOps: Cannot fetch encryption key for new %@: %@
Error, Key-Value for CircleMessage was not CFString/CFData
Error handling circle message %@ (%@): %@
Error putting: %@
Publishing Cloud Parameters
Tried to publish nil Cloud Parameters
SOSEngineHandleCodedMessage called before signing in to new account
otr negotiation completed! clearing max retry counter
Failed to handle message from peer %@: %@
Failed to turn a data gram into an SOSMessage: %@
coder handled a negotiation message
coder handled a error message: %d (error: %@)
peerID: %@ New OTR RTT: %d
peerID: %@ current date: %@, stored date: %@
rtt: %d
attribute list: %@
not going to rate limit, currently in initial sync
not in initial sync!
should send? : %@
peer is rate limited: %@
no message to send to peer: %@
number of attributes to review: %lu
accessGroup: %@, judged: %lu
setting a timer for next sync: %@
access group: %@ is being rate limited
no state for limiter for peer: %@
SOSPeerSetNextTimeToSend next time: %d
SOSPeerSetNextTimeToSend next time to sync: %llu
SOSTransportSendPendingMessage: could not send message: %@
SOSTransportSendPendingMessage: sent pending message: %@ for access group: %@
Failed request for account object
Bad SOSViewActionCode - %d
BEGIN [%lld]: SOSSignpostNameSOSCCViewSet  enableTelemetry=YES 
Cannot enable visible keychain views due to profile restrictions
 SOSSignpostNameSOSCCViewSet=%{public,signpost.telemetry:number1,name=SOSSignpostNameSOSCCViewSet}d 
SOSSignpostNameSOSCCViewSet
END [%lld] %fs: SOSSignpostNameSOSCCViewSet  SOSSignpostNameSOSCCViewSet=%{public,signpost.telemetry:number1,name=SOSSignpostNameSOSCCViewSet}d 
BEGIN [%lld]: SOSSignpostNameSyncTheLastDataToKVS  enableTelemetry=YES 
calling SOSCloudKeychainSynchronizeAndWait
SOSCloudKeychainSynchronizeAndWait: %@
returned from call; in callback to SOSCloudKeychainSynchronizeAndWait: results: %@
 SOSSignpostNameSyncTheLastDataToKVS=%{public,signpost.telemetry:number1,name=SOSSignpostNameSyncTheLastDataToKVS}d 
SOSSignpostNameSyncTheLastDataToKVS
END [%lld] %fs: SOSSignpostNameSyncTheLastDataToKVS  SOSSignpostNameSyncTheLastDataToKVS=%{public,signpost.telemetry:number1,name=SOSSignpostNameSyncTheLastDataToKVS}d 
Trying credentials and dsid (%@) for %@
BEGIN [%lld]: SOSSignpostNameSOSCCTryUserCredentials  enableTelemetry=YES 
Failed with SOSAccountTryUserCredentials() with initial known parameters %@
SOSCCTryUserCredentials_Server: No known parameters
SOSCCTryUserCredentials_Server: Trying again with EFRESH
Failed with SOSAccountTryUserCredentials() %@
 SOSSignpostNameSOSCCTryUserCredentials=%{public,signpost.telemetry:number1,name=SOSSignpostNameSOSCCTryUserCredentials}d 
SOSSignpostNameSOSCCTryUserCredentials
END [%lld] %fs: SOSSignpostNameSOSCCTryUserCredentials  SOSSignpostNameSOSCCTryUserCredentials=%{public,signpost.telemetry:number1,name=SOSSignpostNameSOSCCTryUserCredentials}d 
BEGIN [%lld]: SOSSignpostNameSOSCCCanAuthenticate  enableTelemetry=YES 
 SOSSignpostNameSOSCCCanAuthenticate=%{public,signpost.telemetry:number1,name=SOSSignpostNameSOSCCCanAuthenticate}d 
SOSSignpostNameSOSCCCanAuthenticate
END [%lld] %fs: SOSSignpostNameSOSCCCanAuthenticate  SOSSignpostNameSOSCCCanAuthenticate=%{public,signpost.telemetry:number1,name=SOSSignpostNameSOSCCCanAuthenticate}d 
BEGIN [%lld]: SOSSignpostNameSOSCCRequestToJoinCircle  enableTelemetry=YES 
 SOSSignpostNameSOSCCRequestToJoinCircle=%{public,signpost.telemetry:number1,name=SOSSignpostNameSOSCCRequestToJoinCircle}d 
SOSSignpostNameSOSCCRequestToJoinCircle
END [%lld] %fs: SOSSignpostNameSOSCCRequestToJoinCircle  SOSSignpostNameSOSCCRequestToJoinCircle=%{public,signpost.telemetry:number1,name=SOSSignpostNameSOSCCRequestToJoinCircle}d 
BEGIN [%lld]: SOSSignpostNameSOSCCRequestToJoinCircleAfterRestore  enableTelemetry=YES 
ensure peer registration error: %@
 SOSSignpostNameSOSCCRequestToJoinCircleAfterRestore=%{public,signpost.telemetry:number1,name=SOSSignpostNameSOSCCRequestToJoinCircleAfterRestore}d 
SOSSignpostNameSOSCCRequestToJoinCircleAfterRestore
END [%lld] %fs: SOSSignpostNameSOSCCRequestToJoinCircleAfterRestore  SOSSignpostNameSOSCCRequestToJoinCircleAfterRestore=%{public,signpost.telemetry:number1,name=SOSSignpostNameSOSCCRequestToJoinCircleAfterRestore}d 
BEGIN [%lld]: SOSSignpostNameSOSCCResetToOffering  enableTelemetry=YES 
 SOSSignpostNameSOSCCResetToOffering=%{public,signpost.telemetry:number1,name=SOSSignpostNameSOSCCResetToOffering}d 
SOSSignpostNameSOSCCResetToOffering
END [%lld] %fs: SOSSignpostNameSOSCCResetToOffering  SOSSignpostNameSOSCCResetToOffering=%{public,signpost.telemetry:number1,name=SOSSignpostNameSOSCCResetToOffering}d 
BEGIN [%lld]: SOSSignpostNameSOSCCResetToEmpty  enableTelemetry=YES 
 SOSSignpostNameSOSCCResetToEmpty=%{public,signpost.telemetry:number1,name=SOSSignpostNameSOSCCResetToEmpty}d 
SOSSignpostNameSOSCCResetToEmpty
END [%lld] %fs: SOSSignpostNameSOSCCResetToEmpty  SOSSignpostNameSOSCCResetToEmpty=%{public,signpost.telemetry:number1,name=SOSSignpostNameSOSCCResetToEmpty}d 
BEGIN [%lld]: SOSSignpostNameSOSCCRemoveThisDeviceFromCircle  enableTelemetry=YES 
 SOSSignpostNameSOSCCRemoveThisDeviceFromCircle=%{public,signpost.telemetry:number1,name=SOSSignpostNameSOSCCRemoveThisDeviceFromCircle}d 
SOSSignpostNameSOSCCRemoveThisDeviceFromCircle
END [%lld] %fs: SOSSignpostNameSOSCCRemoveThisDeviceFromCircle  SOSSignpostNameSOSCCRemoveThisDeviceFromCircle=%{public,signpost.telemetry:number1,name=SOSSignpostNameSOSCCRemoveThisDeviceFromCircle}d 
BEGIN [%lld]: SOSSignpostNameSOSCCRemovePeersFromCircle  enableTelemetry=YES 
 SOSSignpostNameSOSCCRemovePeersFromCircle=%{public,signpost.telemetry:number1,name=SOSSignpostNameSOSCCRemovePeersFromCircle}d 
SOSSignpostNameSOSCCRemovePeersFromCircle
END [%lld] %fs: SOSSignpostNameSOSCCRemovePeersFromCircle  SOSSignpostNameSOSCCRemovePeersFromCircle=%{public,signpost.telemetry:number1,name=SOSSignpostNameSOSCCRemovePeersFromCircle}d 
Signed into account!
circleOps: error delivering account-sign-in notification: %@
BEGIN [%lld]: SOSSignpostNameSOSCCLoggedOutOfAccount  enableTelemetry=YES 
Signed out of account!
 SOSSignpostNameSOSCCLoggedOutOfAccount=%{public,signpost.telemetry:number1,name=SOSSignpostNameSOSCCLoggedOutOfAccount}d 
SOSSignpostNameSOSCCLoggedOutOfAccount
END [%lld] %fs: SOSSignpostNameSOSCCLoggedOutOfAccount  SOSSignpostNameSOSCCLoggedOutOfAccount=%{public,signpost.telemetry:number1,name=SOSSignpostNameSOSCCLoggedOutOfAccount}d 
BEGIN [%lld]: SOSSignpostNameSOSCCCopyApplicantPeerInfo  enableTelemetry=YES 
 SOSSignpostNameSOSCCCopyApplicantPeerInfo=%{public,signpost.telemetry:number1,name=SOSSignpostNameSOSCCCopyApplicantPeerInfo}d 
SOSSignpostNameSOSCCCopyApplicantPeerInfo
END [%lld] %fs: SOSSignpostNameSOSCCCopyApplicantPeerInfo  SOSSignpostNameSOSCCCopyApplicantPeerInfo=%{public,signpost.telemetry:number1,name=SOSSignpostNameSOSCCCopyApplicantPeerInfo}d 
BEGIN [%lld]: SOSSignpostNameSOSCCCopyValidPeerPeerInfo  enableTelemetry=YES 
 SOSSignpostNameSOSCCCopyValidPeerPeerInfo=%{public,signpost.telemetry:number1,name=SOSSignpostNameSOSCCCopyValidPeerPeerInfo}d 
SOSSignpostNameSOSCCCopyValidPeerPeerInfo
END [%lld] %fs: SOSSignpostNameSOSCCCopyValidPeerPeerInfo  SOSSignpostNameSOSCCCopyValidPeerPeerInfo=%{public,signpost.telemetry:number1,name=SOSSignpostNameSOSCCCopyValidPeerPeerInfo}d 
BEGIN [%lld]: SOSSignpostNameSOSCCValidateUserPublic  enableTelemetry=YES 
 SOSSignpostNameSOSCCValidateUserPublic=%{public,signpost.telemetry:number1,name=SOSSignpostNameSOSCCValidateUserPublic}d 
SOSSignpostNameSOSCCValidateUserPublic
END [%lld] %fs: SOSSignpostNameSOSCCValidateUserPublic  SOSSignpostNameSOSCCValidateUserPublic=%{public,signpost.telemetry:number1,name=SOSSignpostNameSOSCCValidateUserPublic}d 
BEGIN [%lld]: SOSSignpostNameSOSCCCopyViewUnawarePeerInfo  enableTelemetry=YES 
 SOSSignpostNameSOSCCCopyViewUnawarePeerInfo=%{public,signpost.telemetry:number1,name=SOSSignpostNameSOSCCCopyViewUnawarePeerInfo}d 
SOSSignpostNameSOSCCCopyViewUnawarePeerInfo
END [%lld] %fs: SOSSignpostNameSOSCCCopyViewUnawarePeerInfo  SOSSignpostNameSOSCCCopyViewUnawarePeerInfo=%{public,signpost.telemetry:number1,name=SOSSignpostNameSOSCCCopyViewUnawarePeerInfo}d 
BEGIN [%lld]: SOSSignpostNameSOSCCWaitForInitialSync  enableTelemetry=YES 
Wait for initial sync start!
setting initial sync timeout to 5 minutes
setting initial sync timeout to %llu seconds
Finished!: %d
 SOSSignpostNameSOSCCWaitForInitialSync=%{public,signpost.telemetry:number1,name=SOSSignpostNameSOSCCWaitForInitialSync}d 
SOSSignpostNameSOSCCWaitForInitialSync
END [%lld] %fs: SOSSignpostNameSOSCCWaitForInitialSync  SOSSignpostNameSOSCCWaitForInitialSync=%{public,signpost.telemetry:number1,name=SOSSignpostNameSOSCCWaitForInitialSync}d 
BEGIN [%lld]: SOSSignpostNameSOSCCAcceptApplicants  enableTelemetry=YES 
 SOSSignpostNameSOSCCAcceptApplicants=%{public,signpost.telemetry:number1,name=SOSSignpostNameSOSCCAcceptApplicants}d 
SOSSignpostNameSOSCCAcceptApplicants
END [%lld] %fs: SOSSignpostNameSOSCCAcceptApplicants  SOSSignpostNameSOSCCAcceptApplicants=%{public,signpost.telemetry:number1,name=SOSSignpostNameSOSCCAcceptApplicants}d 
BEGIN [%lld]: SOSSignpostNameSOSCCCopyConcurringPeerPeerInfo  enableTelemetry=YES 
 SOSSignpostNameSOSCCCopyConcurringPeerPeerInfo=%{public,signpost.telemetry:number1,name=SOSSignpostNameSOSCCCopyConcurringPeerPeerInfo}d 
SOSSignpostNameSOSCCCopyConcurringPeerPeerInfo
END [%lld] %fs: SOSSignpostNameSOSCCCopyConcurringPeerPeerInfo  SOSSignpostNameSOSCCCopyConcurringPeerPeerInfo=%{public,signpost.telemetry:number1,name=SOSSignpostNameSOSCCCopyConcurringPeerPeerInfo}d 
BEGIN [%lld]: SOSSignpostNameSOSCCCopyMyPeerInfo  enableTelemetry=YES 
 SOSSignpostNameSOSCCCopyMyPeerInfo=%{public,signpost.telemetry:number1,name=SOSSignpostNameSOSCCCopyMyPeerInfo}d 
SOSSignpostNameSOSCCCopyMyPeerInfo
END [%lld] %fs: SOSSignpostNameSOSCCCopyMyPeerInfo  SOSSignpostNameSOSCCCopyMyPeerInfo=%{public,signpost.telemetry:number1,name=SOSSignpostNameSOSCCCopyMyPeerInfo}d 
BEGIN [%lld]: SOSSignpostNameSOSCCSetNewPublicBackupKey  enableTelemetry=YES 
SOSCCSetNewPublicBackupKey_Server acquiring account lock
SOSCCSetNewPublicBackupKey_Server acquired account lock
SOSCCSetNewPublicBackupKey_Server, new public backup is set in account
SOSCCSetNewPublicBackupKey_Server, new public backup is set and pushed
SOSCCSetNewPublicBackupKey_Server, could not set new public backup
 SOSSignpostNameSOSCCSetNewPublicBackupKey=%{public,signpost.telemetry:number1,name=SOSSignpostNameSOSCCSetNewPublicBackupKey}d 
SOSSignpostNameSOSCCSetNewPublicBackupKey
END [%lld] %fs: SOSSignpostNameSOSCCSetNewPublicBackupKey  SOSSignpostNameSOSCCSetNewPublicBackupKey=%{public,signpost.telemetry:number1,name=SOSSignpostNameSOSCCSetNewPublicBackupKey}d 
BEGIN [%lld]: SOSSignpostNameSOSCCRegisterSingleRecoverySecret  enableTelemetry=YES 
 SOSSignpostNameSOSCCRegisterSingleRecoverySecret=%{public,signpost.telemetry:number1,name=SOSSignpostNameSOSCCRegisterSingleRecoverySecret}d 
SOSSignpostNameSOSCCRegisterSingleRecoverySecret
END [%lld] %fs: SOSSignpostNameSOSCCRegisterSingleRecoverySecret  SOSSignpostNameSOSCCRegisterSingleRecoverySecret=%{public,signpost.telemetry:number1,name=SOSSignpostNameSOSCCRegisterSingleRecoverySecret}d 
Request for registering peers
BEGIN [%lld]: SOSSignpostNameSOSCCProcessEnsurePeerRegistration  enableTelemetry=YES 
 SOSSignpostNameSOSCCProcessEnsurePeerRegistration=%{public,signpost.telemetry:number1,name=SOSSignpostNameSOSCCProcessEnsurePeerRegistration}d 
SOSSignpostNameSOSCCProcessEnsurePeerRegistration
END [%lld] %fs: SOSSignpostNameSOSCCProcessEnsurePeerRegistration  SOSSignpostNameSOSCCProcessEnsurePeerRegistration=%{public,signpost.telemetry:number1,name=SOSSignpostNameSOSCCProcessEnsurePeerRegistration}d 
BEGIN [%lld]: SOSSignpostNameSOSCCProcessSyncWithPeers  enableTelemetry=YES 
 SOSSignpostNameSOSCCProcessSyncWithPeers=%{public,signpost.telemetry:number1,name=SOSSignpostNameSOSCCProcessSyncWithPeers}d 
SOSSignpostNameSOSCCProcessSyncWithPeers
END [%lld] %fs: SOSSignpostNameSOSCCProcessSyncWithPeers  SOSSignpostNameSOSCCProcessSyncWithPeers=%{public,signpost.telemetry:number1,name=SOSSignpostNameSOSCCProcessSyncWithPeers}d 
BEGIN [%lld]: SOSSignpostNameSOSCCProcessSyncWithAllPeers  enableTelemetry=YES 
SOSAccountSyncWithAllKVSPeers failed because device is locked; letting CloudKeychainProxy know
Unexpected error: %@
 SOSSignpostNameSOSCCProcessSyncWithAllPeers=%{public,signpost.telemetry:number1,name=SOSSignpostNameSOSCCProcessSyncWithAllPeers}d 
SOSSignpostNameSOSCCProcessSyncWithAllPeers
END [%lld] %fs: SOSSignpostNameSOSCCProcessSyncWithAllPeers  SOSSignpostNameSOSCCProcessSyncWithAllPeers=%{public,signpost.telemetry:number1,name=SOSSignpostNameSOSCCProcessSyncWithAllPeers}d 
Bad element, skipping: %@
CloudCircle RequestSyncWithPeersList
BEGIN [%lld]: SOSSignpostNameSOSCCRequestSyncWithPeersList  enableTelemetry=YES 
Request Sync With: %@
 SOSSignpostNameSOSCCRequestSyncWithPeersList=%{public,signpost.telemetry:number1,name=SOSSignpostNameSOSCCRequestSyncWithPeersList}d 
SOSSignpostNameSOSCCRequestSyncWithPeersList
END [%lld] %fs: SOSSignpostNameSOSCCRequestSyncWithPeersList  SOSSignpostNameSOSCCRequestSyncWithPeersList=%{public,signpost.telemetry:number1,name=SOSSignpostNameSOSCCRequestSyncWithPeersList}d 
CloudCircle SOSCCRequestSyncWithBackupPeerList
BEGIN [%lld]: SOSSignpostNameSOSCCRequestSyncWithBackupPeerList  enableTelemetry=YES 
Request backup sync With: %@
 SOSSignpostNameSOSCCRequestSyncWithBackupPeerList=%{public,signpost.telemetry:number1,name=SOSSignpostNameSOSCCRequestSyncWithBackupPeerList}d 
SOSSignpostNameSOSCCRequestSyncWithBackupPeerList
END [%lld] %fs: SOSSignpostNameSOSCCRequestSyncWithBackupPeerList  SOSSignpostNameSOSCCRequestSyncWithBackupPeerList=%{public,signpost.telemetry:number1,name=SOSSignpostNameSOSCCRequestSyncWithBackupPeerList}d 
CloudCircle EnsurePeerRegistration
BEGIN [%lld]: SOSSignpostNameSOSCCEnsurePeerRegistration  enableTelemetry=YES 
 SOSSignpostNameSOSCCEnsurePeerRegistration=%{public,signpost.telemetry:number1,name=SOSSignpostNameSOSCCEnsurePeerRegistration}d 
SOSSignpostNameSOSCCEnsurePeerRegistration
END [%lld] %fs: SOSSignpostNameSOSCCEnsurePeerRegistration  SOSSignpostNameSOSCCEnsurePeerRegistration=%{public,signpost.telemetry:number1,name=SOSSignpostNameSOSCCEnsurePeerRegistration}d 
BEGIN [%lld]: SOSSignpostNameSOSCCHandleUpdateMessage  enableTelemetry=YES 
 SOSSignpostNameSOSCCHandleUpdateMessage=%{public,signpost.telemetry:number1,name=SOSSignpostNameSOSCCHandleUpdateMessage}d 
SOSSignpostNameSOSCCHandleUpdateMessage
END [%lld] %fs: SOSSignpostNameSOSCCHandleUpdateMessage  SOSSignpostNameSOSCCHandleUpdateMessage=%{public,signpost.telemetry:number1,name=SOSSignpostNameSOSCCHandleUpdateMessage}d 
BEGIN [%lld]: SOSSignpostNameSOSCCCopyApplication  enableTelemetry=YES 
 SOSSignpostNameSOSCCCopyApplication=%{public,signpost.telemetry:number1,name=SOSSignpostNameSOSCCCopyApplication}d 
SOSSignpostNameSOSCCCopyApplication
END [%lld] %fs: SOSSignpostNameSOSCCCopyApplication  SOSSignpostNameSOSCCCopyApplication=%{public,signpost.telemetry:number1,name=SOSSignpostNameSOSCCCopyApplication}d 
 enableTelemetry=YES 
BEGIN [%lld]: SOSSignpostNameSOSCCCopyCircleJoiningBlob  enableTelemetry=YES 
 SOSSignpostNameSOSCCCopyCircleJoiningBlob=%{public,signpost.telemetry:number1,name=SOSSignpostNameSOSCCCopyCircleJoiningBlob}d 
SOSSignpostNameSOSCCCopyCircleJoiningBlob
END [%lld] %fs: SOSSignpostNameSOSCCCopyCircleJoiningBlob  SOSSignpostNameSOSCCCopyCircleJoiningBlob=%{public,signpost.telemetry:number1,name=SOSSignpostNameSOSCCCopyCircleJoiningBlob}d 
BEGIN [%lld]: SOSSignpostNameSOSCCCopyInitialSyncData  enableTelemetry=YES 
 SOSSignpostNameSOSCCCopyInitialSyncData=%{public,signpost.telemetry:number1,name=SOSSignpostNameSOSCCCopyInitialSyncData}d 
SOSSignpostNameSOSCCCopyInitialSyncData
END [%lld] %fs: SOSSignpostNameSOSCCCopyInitialSyncData  SOSSignpostNameSOSCCCopyInitialSyncData=%{public,signpost.telemetry:number1,name=SOSSignpostNameSOSCCCopyInitialSyncData}d 
BEGIN [%lld]: SOSSignpostNameSOSCCJoinWithCircleJoiningBlob  enableTelemetry=YES 
 SOSSignpostNameSOSCCJoinWithCircleJoiningBlob=%{public,signpost.telemetry:number1,name=SOSSignpostNameSOSCCJoinWithCircleJoiningBlob}d 
SOSSignpostNameSOSCCJoinWithCircleJoiningBlob
END [%lld] %fs: SOSSignpostNameSOSCCJoinWithCircleJoiningBlob  SOSSignpostNameSOSCCJoinWithCircleJoiningBlob=%{public,signpost.telemetry:number1,name=SOSSignpostNameSOSCCJoinWithCircleJoiningBlob}d 
BEGIN [%lld]: SOSSignpostNameSOSCCPeersHaveViewsEnabled  enableTelemetry=YES 
 SOSSignpostNameSOSCCPeersHaveViewsEnabled=%{public,signpost.telemetry:number1,name=SOSSignpostNameSOSCCPeersHaveViewsEnabled}d 
SOSSignpostNameSOSCCPeersHaveViewsEnabled
END [%lld] %fs: SOSSignpostNameSOSCCPeersHaveViewsEnabled  SOSSignpostNameSOSCCPeersHaveViewsEnabled=%{public,signpost.telemetry:number1,name=SOSSignpostNameSOSCCPeersHaveViewsEnabled}d 
BEGIN [%lld]: SOSSignpostNameSOSCCRegisterRecoveryPublicKey  enableTelemetry=YES 
 SOSSignpostNameSOSCCRegisterRecoveryPublicKey=%{public,signpost.telemetry:number1,name=SOSSignpostNameSOSCCRegisterRecoveryPublicKey}d 
SOSSignpostNameSOSCCRegisterRecoveryPublicKey
END [%lld] %fs: SOSSignpostNameSOSCCRegisterRecoveryPublicKey  SOSSignpostNameSOSCCRegisterRecoveryPublicKey=%{public,signpost.telemetry:number1,name=SOSSignpostNameSOSCCRegisterRecoveryPublicKey}d 
BEGIN [%lld]: SOSSignpostNameSOSCCCopyRecoveryPublicKey  enableTelemetry=YES 
 SOSSignpostNameSOSCCCopyRecoveryPublicKey=%{public,signpost.telemetry:number1,name=SOSSignpostNameSOSCCCopyRecoveryPublicKey}d 
SOSSignpostNameSOSCCCopyRecoveryPublicKey
END [%lld] %fs: SOSSignpostNameSOSCCCopyRecoveryPublicKey  SOSSignpostNameSOSCCCopyRecoveryPublicKey=%{public,signpost.telemetry:number1,name=SOSSignpostNameSOSCCCopyRecoveryPublicKey}d 
BEGIN [%lld]: SOSSignpostNameSOSCCMessageFromPeerIsPending  enableTelemetry=YES 
 SOSSignpostNameSOSCCMessageFromPeerIsPending=%{public,signpost.telemetry:number1,name=SOSSignpostNameSOSCCMessageFromPeerIsPending}d 
SOSSignpostNameSOSCCMessageFromPeerIsPending
END [%lld] %fs: SOSSignpostNameSOSCCMessageFromPeerIsPending  SOSSignpostNameSOSCCMessageFromPeerIsPending=%{public,signpost.telemetry:number1,name=SOSSignpostNameSOSCCMessageFromPeerIsPending}d 
BEGIN [%lld]: SOSSignpostNameSOSCCSendToPeerIsPending  enableTelemetry=YES 
 SOSSignpostNameSOSCCSendToPeerIsPending=%{public,signpost.telemetry:number1,name=SOSSignpostNameSOSCCSendToPeerIsPending}d 
SOSSignpostNameSOSCCSendToPeerIsPending
END [%lld] %fs: SOSSignpostNameSOSCCSendToPeerIsPending  SOSSignpostNameSOSCCSendToPeerIsPending=%{public,signpost.telemetry:number1,name=SOSSignpostNameSOSCCSendToPeerIsPending}d 
error resetting otr negotation: %@
error sending next message: %@
device does not have a peer
SOSCCPerformWithAllOctagonKeys signing key error: %@
SOSCCPerformWithAllOctagonKeys encryption key error: %@
Ensuring key agrp ('%@' from '%@') status: %d
octagon: failed to save Octagon keys to the keychain: %@
octagon: Failed to set Octagon Keys in peerInfo: %@
No peer info to update?
Success! Upated Octagon keys in SOS!
octagon-preload-keys: failed to save Octagon keys to the keychain: %@
No SOSAccount to update?
Success! Octagon Keys Preloaded!
SOSCCAccountTriggerSyncWithBackupPeer_server: %@
Failed to load account: %@
Cannot inflate account object as root
Change block called with no peerInfo
Change block called while not in circle
Requesting Ensure Peer Registration.
Not requesting Ensure Peer Registration, since it's not needed
Had trouble removing: %@, error: %@
peer counts changed, posting kSOSCCCircleChangedNotification
Error handling updates: %@
Failed to transform account into data, error: %@
Changed our peer's gestalt information.  This is not a circle change.
Got error inflating account: %@
Got NULL creating account
Can't save account: %@
BEGIN [%lld]: SOSSignpostNameSyncKVSAndWait  enableTelemetry=YES 
 SOSSignpostNameSyncKVSAndWait=%{public,signpost.telemetry:number1,name=SOSSignpostNameSyncKVSAndWait}d 
SOSSignpostNameSyncKVSAndWait
END [%lld] %fs: SOSSignpostNameSyncKVSAndWait  SOSSignpostNameSyncKVSAndWait=%{public,signpost.telemetry:number1,name=SOSSignpostNameSyncKVSAndWait}d 
BEGIN [%lld]: SOSSignpostNameFlush  enableTelemetry=YES 
 SOSSignpostNameFlush=%{public,signpost.telemetry:number1,name=SOSSignpostNameFlush}d 
SOSSignpostNameFlush
END [%lld] %fs: SOSSignpostNameFlush  SOSSignpostNameFlush=%{public,signpost.telemetry:number1,name=SOSSignpostNameFlush}d 
Setting credentials and dsid (%@) for %@.  UID is %d
BEGIN [%lld]: SOSSignpostNameAssertUserCredentialsAndOptionalDSID  enableTelemetry=YES 
Complete credentials and dsid (%@) for %@: %d %@
 SOSSignpostNameAssertUserCredentialsAndOptionalDSID=%{public,signpost.telemetry:number1,name=SOSSignpostNameAssertUserCredentialsAndOptionalDSID}d 
SOSSignpostNameAssertUserCredentialsAndOptionalDSID
END [%lld] %fs: SOSSignpostNameAssertUserCredentialsAndOptionalDSID  SOSSignpostNameAssertUserCredentialsAndOptionalDSID=%{public,signpost.telemetry:number1,name=SOSSignpostNameAssertUserCredentialsAndOptionalDSID}d 
Cannot have visible keychain views due to profile restrictions
octagon: could not save signing key: %@
octagon: could not save encryption key: %@
Could not create version number
Could not create ring identifier
SOSRingEnsureRingConsistency requires ring membership and generation count consistency check
sos: SOS have not launched yet, come later, pid: %d
sos: Client pid: %d doesn't have entitlement: %@
%@ KVSTransport handle message failed: %@
circleChange: No extant octagon signing key
circleChange: No extant octagon encryption key
circleChange: Error fetching Octagon signing key: %@
Already have Octagon signing key
circleChange: Error creating Octagon signing key: %@
circleChange: Error upgrading Octagon signing key: %@
Successfully created new Octagon signing key
error is too scary, not creating new Octagon signing key: %@
circleChange: Error fetching Octagon encryption key: %@
Already have Octagon encryption key
circleChange: Error creating Octagon encryption key: %@
circleChange: Error upgrading Octagon encryption key: %@
Successfully created new Octagon encryption key
error is too scary, not creating new Octagon encryption key: %@
FullPeerInfo has no matching private key - resetting FPI and attendant keys
Failed to copy peer public key for account object
No full_key: %@:
Couldn't purge persistent keys for %@ [%@]
@16@0:8
B24@0:8^{rusage_info_v5=[16C]QQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQ}16
B16@0:8
Q24@0:8Q16
v16@0:8
B32@0:8@16^@24
@"NSObject<OS_dispatch_source>"
@24@0:8@16
v24@0:8@16
@"NSObject<OS_os_transaction>"
v40@0:8@16@24@?32
v80@0:8@16@24@32@40@48@56@64@?72
v52@0:8@16@24@32B40@?44
v32@0:8@16@?24
v28@0:8B16@?20
v24@0:8@?16
@24@0:8^{SecurityClient=^{__SecTask}^{__CFArray}BBBBI^{__CFData}BB^{__CFString}}16
B24@0:8@16
{SecurityClient="task"^{__SecTask}"accessGroups"^{__CFArray}"allowSystemKeychain"B"allowSyncBubbleKeychain"B"isNetworkExtension"B"canAccessNetworkExtensionAccessGroups"B"uid"I"musr"^{__CFData}"inMultiUser"B"isAppClip"B"applicationIdentifier"^{__CFString}}
@"NSXPCConnection"
@32@0:8^{SecurityClient=^{__SecTask}^{__CFArray}BBBBI^{__CFData}BB^{__CFString}}16@24
@"NSMutableDictionary"
#16@0:8
@24@0:8:16
@32@0:8:16@24
@40@0:8:16@24@32
B24@0:8#16
B24@0:8:16
Vv16@0:8
Q16@0:8
^{_NSZone=}16@0:8
B24@0:8@"Protocol"16
@"NSString"16@0:8
v40@0:8@"NSDictionary"16@"<SecuritydXPCCallbackProtocol>"24@?<v@?@"NSDictionary"@"NSArray"@"NSError">32
v80@0:8@"NSData"16@"NSData"24@"NSString"32@"NSString"40@"NSString"48@"NSData"56@"NSData"64@?<v@?@"NSError">72
v52@0:8@"NSString"16@"NSString"24@"NSString"32B40@?<v@?@"NSData"@"NSError">44
v40@0:8@"NSString"16@"NSString"24@?<v@?@"NSArray"@"NSError">32
v32@0:8@"NSData"16@?<v@?B@"NSError">24
v28@0:8B16@?<v@?@"NSDictionary"@"NSError">20
v32@0:8@"NSString"16@?<v@?i>24
v40@0:8@"NSString"16@"NSString"24@?<v@?i>32
v24@0:8@?<v@?i@"NSError">16
B32@0:8@16@24
B32@0:8@"NSXPCListener"16@"NSXPCConnection"24
@"NSXPCListener"
@24@0:8^{_NSZone=}16
@"NSData"
I16@0:8
v20@0:8I16
B20@0:8i16
v20@0:8i16
@40@0:8@16@24^@32
@"_SFAESKey"
v32@0:8@16@24
v64@0:8@16@24@32@40@48@56
@32@0:8Q16@24
@32@0:8Q16@?24
@40@0:8@16@24@32
@"NSString"
@"NSObject<OS_dispatch_queue>"
@"KeychainItemUpgradeRequestController"
v48@0:8@16@24@32@?40
v48@0:8@16@24q32@?40
v156@0:8@16@24Q32@40@48@56@64@72@80@88@96@104i112@116@124@132@140@?148
v64@0:8@16@24@32@40@48@?56
v88@0:8@16@24@32@40@48@56@64@72@?80
v72@0:8@16@24@32@40@48@56@?64
v56@0:8@16@24@32@40@?48
v100@0:8@16@24B32@36@44@52@60@68@76@84@?92
v44@0:8@16@24B32@?36
v76@0:8@16@24@32@40@48@56i64@?68
v52@0:8@16@24B32@36@?44
v24@0:8@?<v@?>16
v40@0:8@"NSString"16@"NSString"24@?<v@?@"NSDictionary"@"NSError">32
v40@0:8@"NSString"16@"NSString"24@?<v@?@"NSError">32
v48@0:8@"NSString"16@"NSString"24@"NSSet"32@?<v@?@"NSError">40
v40@0:8@"NSString"16@"NSString"24@?<v@?@"TrustedPeersHelperEgoPeerStatus"@"NSError">32
v48@0:8@"NSString"16@"NSString"24q32@?<v@?@"NSError">40
v52@0:8@"NSString"16@"NSString"24@"NSSet"32B40@?<v@?B@"NSError">44
v48@0:8@"NSString"16@"NSString"24@"NSArray"32@?<v@?@"NSError">40
v40@0:8@"NSString"16@"NSString"24@?<v@?@"NSSet"@"NSError">32
v40@0:8@"NSString"16@"NSString"24@?<v@?Q@"NSError">32
v156@0:8@"NSString"16@"NSString"24Q32@"NSString"40@"NSString"48@"NSString"56@"NSString"64@"NSString"72@"NSString"80@"NSString"88@"TPPolicyVersion"96@"NSDictionary"104i112@"TPPBSecureElementIdentity"116@"OTAccountSettingsX"124@"NSData"132@"NSData"140@?<v@?@"NSString"@"NSData"@"NSData"@"NSData"@"NSData"@"TPSyncingPolicy"@"NSError">148
v156@0:8@"NSString"16@"NSString"24Q32@"NSString"40@"NSString"48@"NSString"56@"NSString"64@"NSString"72@"NSString"80@"NSString"88@"TPPolicyVersion"96@"NSDictionary"104i112@"TPPBSecureElementIdentity"116@"NSData"124@"NSData"132@"TrustedPeersHelperCustodianRecoveryKey"140@?<v@?@"NSString"@"NSData"@"NSData"@"NSData"@"NSData"@"TPSyncingPolicy"@"NSString"@"NSArray"@"NSError">148
v64@0:8@"NSString"16@"NSString"24@"NSArray"32@"NSArray"40@"NSArray"48@?<v@?@"NSString"@"NSArray"@"TPSyncingPolicy"@"NSError">56
v88@0:8@"NSString"16@"NSString"24@"NSString"32@"NSData"40@"NSData"48@"NSData"56@"NSData"64@"NSArray"72@?<v@?@"NSData"@"NSData"@"NSError">80
v48@0:8@"NSString"16@"NSString"24@"NSString"32@?<v@?@"NSString"@"TPSyncingPolicy"B@"NSError">40
v72@0:8@"NSString"16@"NSString"24@"NSString"32@"NSData"40@"NSString"48@"NSArray"56@?<v@?@"NSData"@"NSData"@"NSArray"@"TrustedPeersHelperTLKRecoveryResult"@"NSError">64
v56@0:8@"NSString"16@"NSString"24@"NSString"32@"NSString"40@?<v@?@"NSString"@"TPSyncingPolicy"@"NSError">48
v48@0:8@"NSString"16@"NSString"24@"TrustedPeersHelperCustodianRecoveryKey"32@?<v@?@"NSString"@"TPSyncingPolicy"@"NSError">40
v64@0:8@"NSString"16@"NSString"24@"NSString"32@"NSString"40@"NSArray"48@?<v@?@"NSData"@"NSData"@"NSArray"@"TrustedPeersHelperTLKRecoveryResult"@"NSError">56
v56@0:8@"NSString"16@"NSString"24@"TrustedPeersHelperCustodianRecoveryKey"32@"NSArray"40@?<v@?@"NSArray"@"TrustedPeersHelperTLKRecoveryResult"@"NSError">48
v56@0:8@"NSString"16@"NSString"24@"TrustedPeersHelperCustodianRecoveryKey"32@"NSArray"40@?<v@?@"NSData"@"NSData"@"NSArray"@"TrustedPeersHelperTLKRecoveryResult"@"NSError">48
v80@0:8@"NSString"16@"NSString"24@"NSData"32@"NSData"40@"NSArray"48@"NSArray"56@"NSArray"64@?<v@?@"NSString"@"NSArray"@"TPSyncingPolicy"@"NSError">72
v48@0:8@"NSString"16@"NSString"24@"NSArray"32@?<v@?B@"NSError">40
v100@0:8@"NSString"16@"NSString"24B32@"NSString"36@"NSString"44@"NSString"52@"NSNumber"60@"NSDictionary"68@"NSNumber"76@"TrustedPeersHelperIntendedTPPBSecureElementIdentity"84@?<v@?@"TrustedPeersHelperPeerState"@"TPSyncingPolicy"@"NSError">92
v48@0:8@"NSString"16@"NSString"24@"NSArray"32@?<v@?@"TrustedPeersHelperPeerState"@"NSError">40
v56@0:8@"NSString"16@"NSString"24@"NSArray"32@"NSArray"40@?<v@?@"NSArray"@"NSError">48
v40@0:8@"NSString"16@"NSString"24@?<v@?@"NSArray"@"NSArray"@"NSError">32
v44@0:8@"NSString"16@"NSString"24B32@?<v@?@"NSArray"@"NSError">36
v40@0:8@"NSString"16@"NSString"24@?<v@?@"NSData"@"NSString"@"NSData"@"NSError">32
v48@0:8@"NSString"16@"NSString"24@"NSSet"32@?<v@?@"NSDictionary"@"NSError">40
v48@0:8@"NSString"16@"NSString"24@"NSString"32@?<v@?@"NSArray"@"NSError">40
v52@0:8@"NSString"16@"NSString"24@"NSString"32B40@?<v@?@"TPSyncingPolicy"i@"NSError">44
v40@0:8@"NSString"16@"NSString"24@?<v@?@"TrustedPeersHelperPeerState"@"NSArray"@"NSError">32
v64@0:8@"NSString"16@"NSString"24@"NSString"32@"NSString"40@"NSArray"48@?<v@?@"NSArray"@"NSError">56
v76@0:8@"NSString"16@"NSString"24@"NSString"32@"NSString"40@"NSArray"48@"NSUUID"56i64@?<v@?@"NSArray"@"TrustedPeersHelperCustodianRecoveryKey"@"NSError">68
v48@0:8@"NSString"16@"NSString"24@"NSUUID"32@?<v@?@"NSError">40
v56@0:8@"NSString"16@"NSString"24@"NSString"32@"NSString"40@?<v@?@"NSError">48
v52@0:8@"NSString"16@"NSString"24B32@"NSArray"36@?<v@?BBBB@"OTEscrowMoveRequestContext"@"NSError">44
v40@0:8@"NSString"16@"NSString"24@?<v@?@"NSData"@"NSError">32
@"<NSXPCProxyCreating>"
@"NSString<OctagonStateString>"16@0:8
v24@0:8@"NSString<OctagonStateString>"16
@52@0:8@16i24@28@36@44
i16@0:8
@"NSString<OctagonStateString>"
@"OTOperationDependencies"
v20@0:8B16
@20@0:8i16
i24@0:8@16
v24@0:8q16
v24@0:8Q16
@24@0:8Q16
q16@0:8
@"OTAccountMetadataClassCAccountSettings"
@"NSMutableArray"
{?="epoch"b1"lastHealthCheckup"b1"attemptedJoin"b1"cdpState"b1"icloudAccountState"b1"trustState"b1"isInheritedAccount"b1"warmedEscrowCache"b1"warnedTooManyPeers"b1}
@28@0:8@16B24
@32@0:8@16@24
@"NSArray"
@"NSSet"
@"CKKSKeychainView"
@"NSOperation"
@40@0:8@16q24@32
@48@0:8@16q24@32@40
{?="w"b1"webAccess"b1}
B48@0:8@16@24^{__OpaqueSecDbConnection=}32^@40
v40@0:8^{sqlite3_stmt=}16@24^^{__CFError}32
B80@0:8@16@24@32@40@48q56@?64^@72
B56@0:8@16@24@32@40@?48
B24@0:8@?16
B24@0:8^@16
@32@0:8@16^@24
@24@0:8^@16
@32@0:8Q16^@24
@40@0:8Q16@24^@32
@48@0:8Q16@24@32^@40
B32@0:8^{__OpaqueSecDbConnection=}16^@24
@"NSDictionary"
@32@0:8Q16Q24
v24@0:8@"NSCoder"16
@24@0:8@"NSCoder"16
i20@0:8i16
@36@0:8@16i24@28
i40@0:8@16@24^@32
@"NSDate"
@"CKKSResultOperation<OctagonStateTransitionOperationProtocol>"40@0:8@"NSString<OctagonStateString>"16@"OctagonFlags"24@"<OctagonStateOnqueuePendingFlagHandler>"32
@"OctagonStateMachine"
@"CKKSLockStateTracker"
v24@0:8@"<OTDeviceInformationNameUpdateListener>"16
^{__SCDynamicStore=}16@0:8
v24@0:8^{__SCDynamicStore=}16
@"CKKSListenerCollection"
^{__SCDynamicStore=}
B72@0:8i16i20@24^i32@40r^v48Q56^@64
@24@0:8q16
B24@0:8Q16
@"NSObject<OS_dispatch_semaphore>"24@0:8@"<CKKSCloudKitAccountStateListener>"16
v24@0:8@"NSString"16
@"OTCliqueStatusWrapper"16@0:8
@32@0:8@16#24
v48@0:8@16@24@32@40
@"CKKSCondition"
@"CKKSNearFutureScheduler"
@"CKAccountInfo"
@"NSError"
@"SOSAccountStatus"
@"OTCliqueStatusWrapper"
@"NSMapTable"
@"CKContainer"
@28@0:8i16@20
v32@0:8d16@?24
v40@0:8@"NSString"16@"NSDictionary"24@?<v@?@"NSError">32
v40@0:8@"NSString"16@"NSData"24@?<v@?@"NSError">32
v32@0:8@"NSString"16@?<v@?@"NSData"@"NSError">24
v24@0:8@?<v@?@"NSString"@"NSError">16
v24@0:8@?<v@?@"NSDictionary"@"NSError">16
v24@0:8@?<v@?@"NSError">16
v24@0:8@?<v@?Q@"NSError">16
v32@0:8d16@?<v@?B@"NSError">24
B40@0:8@16@24^@32
B24@0:8d16
B32@0:8@"NSString"16^@24
B40@0:8@"NSString"16@"NSDictionary"24^@32
@"NSDictionary"24@0:8^@16
@"<SecEscrowRequestable>"24@0:8^@16
@"EscrowRequestController"
@"_SFAuthenticatedCiphertext"
@24@0:8i16i20
@28@0:8@16i24
@28@0:8@"NSData"16i24
@"NSData"24@0:8@"_SFAESKey"16
@"_SFAESKey"24@0:8@"NSData"16
@"NSData"16@0:8
^{aks_ref_key_s=}
@36@0:8@16@24B32
@"NSURL"
@"NSPersistentStoreCoordinator"
@"NSManagedObjectContext"
@60@0:8@16@24@32@40@48i56
@"SecCDKeychainItemType"
@"SecCDKeychainAccessControlEntity"
@"NSUUID"
@68@0:8@16@24@32@40@48@56i64
@36@0:8@16i24^@28
@"SecCDKeychainItemMetadata"
@"<NSCopying><NSObject>"
@"NSString<SecCDKeychainLookupValueType>"
@44@0:8@16i24@28@36
@"SecCDKeychainManagedItemType"
@32@0:8q16@24
B24@0:8@"<CKKSPeer>"16
@"_SFECPublicKey"16@0:8
@"_SFECKeyPair"16@0:8
@"_SFIdentity"
@"CKKSSelves"24@0:8^@16
@"NSSet"24@0:8^@16
v24@0:8@"<CKKSPeerUpdateListener>"16
@"CKKSPeerProviderState"16@0:8
@48@0:8@16@24@32@40
@"CuttlefishXPCWrapper"
@52@0:8@16@24@32@40B48
v40@0:8B16B20B24B28@32
@"OTDeviceInformation"
@"OTEscrowMoveRequestContext"
v40@0:8@16@24Q32
v32@0:8@16Q24
@28@0:8B16@20
v56@0:8@16@24@32q40@?48
v60@0:8B16@20@28@36@44@?52
v56@0:8@"NSString"16@"NSString"24@"NSData"32@"NSString"40@?<v@?@"NSData"@"NSData"@"NSError">48
v24@0:8@?<v@?@"NSData"@"NSError">16
v24@0:8@?<v@?@"NSArray"@"NSError">16
v48@0:8@"NSString"16@"NSString"24@"NSString"32@?<v@?@"NSError">40
v24@0:8@?<v@?B@"NSError">16
v48@0:8@"SFECKeyPair"16@"SFECKeyPair"24@"NSString"32@?<v@?B@"NSError">40
v32@0:8@"OTJoiningConfiguration"16@?<v@?Q@"NSError">24
v32@0:8@"OTJoiningConfiguration"16@?<v@?@"NSString"@"NSData"@"NSData"@"NSData"@"NSData"@"NSError">24
v72@0:8@"OTJoiningConfiguration"16@"NSString"24@"NSData"32@"NSData"40@"NSData"48@"NSData"56@?<v@?@"NSData"@"NSData"@"NSError">64
v48@0:8@"OTJoiningConfiguration"16@"NSData"24@"NSData"32@?<v@?@"NSError">40
v40@0:8@"NSString"16@"NSString"24@?<v@?@"NSString"@"NSError">32
v48@0:8@"NSString"16@"NSString"24@"OTOperationConfiguration"32@?<v@?q@"NSError">40
v48@0:8@"NSString"16@"NSString"24@"OTOperationConfiguration"32@?<v@?q@"NSString"@"NSNumber"B@"NSError">40
v56@0:8@"NSString"16@"NSString"24@"NSString"32q40@?<v@?@"NSError">48
v64@0:8@"NSString"16@"NSString"24@"NSString"32@"NSData"40@"NSString"48@?<v@?@"NSError">56
v48@0:8@"NSString"16@"NSString"24@"NSUUID"32@?<v@?@"OTCustodianRecoveryKey"@"NSError">40
v48@0:8@"NSString"16@"NSString"24@"OTCustodianRecoveryKey"32@?<v@?@"NSError">40
v48@0:8@"NSString"16@"NSString"24@"NSUUID"32@?<v@?@"OTInheritanceKey"@"NSError">40
v48@0:8@"NSString"16@"NSString"24@"OTInheritanceKey"32@?<v@?@"NSError">40
v44@0:8@"NSString"16@"NSString"24B32@?<v@?@"NSError">36
v60@0:8B16@"NSString"20@"NSError"28@"NSString"36@"NSString"44@?<v@?@"NSError">52
v40@0:8@"NSString"16@"NSString"24@?<v@?q@"NSError">32
v44@0:8@"NSString"16@"NSString"24B32@?<v@?B@"NSError">36
v40@0:8@"NSString"16@"NSString"24@?<v@?B@"NSError">32
v48@0:8@"NSString"16@"NSString"24@"OTSecureElementPeerIdentity"32@?<v@?@"NSError">40
v48@0:8@"NSString"16@"NSString"24@"NSData"32@?<v@?@"NSError">40
v40@0:8@"NSString"16@"NSString"24@?<v@?@"OTCurrentSecureElementIdentities"@"NSError">32
v40@0:8@"NSString"16@"NSString"24@?<v@?@"OTAccountSettingsX"@"NSError">32
v48@0:8@"NSString"16@"NSString"24@"OTAccountSettingsX"32@?<v@?@"NSError">40
v48@0:8@"NSString"16@"NSString"24@"NSData"32@?<v@?@"NSArray"@"NSError">40
@128@0:8@16@24@32@40@48#56#64#72#80@88@96@104@112@120
B40@0:8@16@24q32
@80@0:8@16@24@32@40@48@56@64@72
@"<OTSOSAdapter>"
@"<OTAuthKitAdapter>"
@"<OTDeviceInformationAdapter>"
@"CKKSAccountStateTracker"
@"CKKSReachabilityTracker"
@"CKKSViewManager"
@"OTRamp"
@"<OctagonFollowUpControllerProtocol>"
@"<OTTooManyPeersAdapter>"
@"<OTPersonaAdapter>"
@24@0:8@?16
@32@0:8@16@?24
@"NSOperationQueue"
@"NSBlockOperation"
@56@0:8@16@24@32@40@48
B36@0:8@16B24^@28
@72@0:8@16@24@32@40@48Q56Q64
@80@0:8@16@24@32@40@48@56Q64Q72
@104@0:8@16@24@32@40@48@56Q64Q72@80@88@96
@32@0:8@16Q24
@"CKKSWrappedAESSIVKey"
@"NSNumber"
@36@0:8@16Q24B32
@64@0:8@16@24@32@40@48^@56
@48@0:8@16@24@32^@40
@"CKKSOperationDependencies"
@48@0:8^{SecDbItem={__CFRuntimeBase=QAQ}^{SecDbClass}iii^{__CFDictionary}^{__CFData}^v^{__CFArray}}16@24@32^@40
@56@0:8^{SecDbItem={__CFRuntimeBase=QAQ}^{SecDbClass}iii^{__CFDictionary}^{__CFData}^v^{__CFArray}}16@24@32@40^@48
@48@0:8q16@24@32^@40
q40@0:8@16@24^@32
@"CKKSItem"
@64@0:8q16@24@32@40@48^@56
{?="keyClass"b1}
v64@0:8@16r^{SecDbClass=^{__CFString}B[0^{SecDbAttr}]}24@32@40@48@56
v32@0:8^{SecDbItem={__CFRuntimeBase=QAQ}^{SecDbClass}iii^{__CFDictionary}^{__CFData}^v^{__CFArray}}16@24
v60@0:8@16@24r^{SecDbClass=^{__CFString}B[0^{SecDbAttr}]}32@40B48@52
B52@0:8@16^{SecDbItem={__CFRuntimeBase=QAQ}^{SecDbClass}iii^{__CFDictionary}^{__CFData}^v^{__CFArray}}24@32B40@44
v40@0:8@16r^{SecDbClass=^{__CFString}B[0^{SecDbAttr}]}24@32
@"NSMutableSet"
v84@0:8@16B24@28@36@44@52@60@68@76
v40@0:8@16@24@32
@68@0:8@16@24@32@40@48@56B64
v28@0:8@16B24
@64@0:8@16@24@32q40q48^@56
@80@0:8@16@24@32q40Q48q56q64@72
@104@0:8@16@24@32@40q48Q56q64q72@80@88@96
B48@0:8@16@24@32^@40
@"CKRecordZoneID"
@"SECC2MPGenericEventMetricValue"
@76@0:8@16B24B28@32B40@44@52Q60@68
@"CKKSRateLimiter"
@64@0:8@16@24@32@40@48@56
@"NSString<OctagonFlagString>"
v24@0:8d16
d16@0:8
@"SECC2MPError"
{?="dateValue"b1"doubleValue"b1}
@"SecDbBackupBagIdentity"
i24@0:8^@16
B28@0:8B16^@20
@"<CKKSSelfPeer>"24@0:8^@16
B32@0:8@"<CKKSSelfPeer>"16^@24
@20@0:8B16
@44@0:8@16B24@28@36
@"CKKSResultOperation"
@"NSHashTable"
@"NSString<SecCKKSProcessedState>"
@112@0:8@16@24@32@40@48@56@64@72@80@88@96@104
B28@0:8@16B24
B36@0:8@16@24B32
@24@0:8^{SecDbItem={__CFRuntimeBase=QAQ}^{SecDbClass}iii^{__CFDictionary}^{__CFData}^v^{__CFArray}}16
@"CKOperationGroup"
@"CKDatabase"
@"CKKSCloudKitClassDependencies"
@"<OctagonStateFlagHandler>"
@"TPSyncingPolicy"
@"<CKKSDatabaseProviderProtocol>"
@"CKKSZoneModifier"
@64@0:8@16@24@32@40@48Q56
@"TPPolicyVersion"
{?="recoveryType"b1}
B44@0:8@16B24@28^@36
@"NSString<SecCKKSKeyClass>"
@"CKKSKey"
@"CKKSCurrentKeyPointer"
@"SECC2MPCloudKitInfo"
@"SECC2MPDeviceInfo"
@"SECC2MPGenericEvent"
@"SECC2MPNetworkEvent"
@"SECC2MPServerInfo"
{?="reportFrequency"b1"reportFrequencyBase"b1"triggers"b1"metricType"b1}
v44@0:8@16B24Q28@?36
v40@0:8@16B24B28@?32
v36@0:8@16B24@?28
v24@0:8@?<v@?@"NSDictionary">16
v32@0:8@"NSString"16@?<v@?@"NSError">24
v44@0:8@"NSString"16B24Q28@?<v@?@"NSArray"@"NSError">36
v40@0:8@"NSString"16B24B28@?<v@?@"NSError">32
v24@0:8@?<v@?@"NSString">16
v56@0:8@"NSString"16@"CKKSExternalKey"24@"CKKSExternalKey"32@"NSArray"40@?<v@?@"NSError">48
v36@0:8@"NSString"16B24@?<v@?@"CKKSExternalKey"@"NSArray"@"NSArray"@"NSError">28
v48@0:8@"NSString"16@"NSArray"24@"NSArray"32@?<v@?@"NSError">40
v32@0:8@"NSDictionary"16@?<v@?@"NSDictionary"@"NSError">24
@36@0:8@16B24@28
@52@0:8@16Q24B32q36@?44
@60@0:8@16Q24Q32B40q44@?52
@68@0:8@16Q24d32Q40B48q52@?60
v32@0:8Q16Q24
@?16@0:8
B24@0:8@"NSString<OctagonFlagString>"16
@"NSArray"16@0:8
@"CKKSCondition"24@0:8@"NSString<OctagonFlagString>"16
v24@0:8@"NSString<OctagonFlagString>"16
@"OTCustodianRecoveryKey"
@"OTInheritanceKey"
B24@0:8q16
@"<CKKSSelfPeer>"
B24@0:8@"NSString"16
@"_SFECPublicKey"
@"_SFECKeyPair"
{?="timestampEnd"b1"timestampStart"b1"type"b1}
v24@0:8@?<C@?>16
B36@0:8^{__OpaqueSecDbConnection=}16B24@?28
@"NSDictionary"16@0:8
@"NSSet"16@0:8
v24@0:8@"NSDictionary"16
@"CKRecord"
v40@0:8@16Q24@?32
@44@0:8@16@24B32@36
B44@0:8@16B24^@28@?36
B48@0:8^{SecDbItem={__CFRuntimeBase=QAQ}^{SecDbClass}iii^{__CFDictionary}^{__CFData}^v^{__CFArray}}16@24@32^@40
B40@0:8^{SecDbItem={__CFRuntimeBase=QAQ}^{SecDbClass}iii^{__CFDictionary}^{__CFData}^v^{__CFArray}}16@24@32
@"CKServerChangeToken"
@"CKRecordID"
@68@0:8@16#24@32@40@48B56@60
@"CKDatabaseOperation<CKKSFetchRecordZoneChangesOperation>"
@"OctagonStateTransitionPathStep"
v24@0:8@"CKKSResultOperation<OctagonStateTransitionOperationProtocol>"16
@"CKKSResultOperation"16@0:8
@"OctagonStateTransitionPath"
@"OctagonStateTransitionRequest"
@60@0:8@16@24@32@40B48@52
v32@0:8@"OTAccountMetadataClassC"16@"OTAccountMetadataClassC"24
v24@0:8@"APSIncomingMessage"16
v32@0:8@"NSArray"16@"NSString"24
v32@0:8@"CKAccountInfo"16@"CKAccountInfo"24
v24@0:8@"<CKKSPeerProvider>"16
@136@0:8@16@24@32@40@48@56@64@72@80@88@96#104#112#120@128
q24@0:8^@16
v32@0:8q16@?24
q24@0:8@16
@"OTFollowup"
@"OTCuttlefishAccountStateHolder"
@"<CKKSCloudKitAccountStateTrackingProvider><CKKSOctagonStatusMemoizer>"
@"CKKSLaunchSequence"
@"OTAccountSettingsX"
@"OctagonAPSReceiver"
@"<CKKSPeerProvider>"
@32@0:8@16d24
@40@0:8@16Q24d32
@40@0:8@16Q24@32
@"TrustedPeersHelperCustodianRecoveryKey"
@76@0:8@16@24@32@40@48@56B64Q68
@64@0:8^{__OpaqueSOSEngine={__CFRuntimeBase=QAQ}^{SOSDataSource}^{__CFString}^{__OpaqueSOSManifest}^{__CFData}^{__CFDictionary}^{__CFDictionary}^{__CFDictionary}^{__CFDictionary}^{__CFArray}^{__CFDate}^{__CFDictionary}BB@@@@?B}16^{__OpaqueSOSPeer=}24^{__OpaqueSOSManifest=}32^{__OpaqueSOSManifest=}40^{__OpaqueSOSManifest=}48^{__OpaqueSOSMessage=}56
v24@0:8^{__OpaqueSOSCoder=}16
^{__OpaqueSOSEngine={__CFRuntimeBase=QAQ}^{SOSDataSource}^{__CFString}^{__OpaqueSOSManifest}^{__CFData}^{__CFDictionary}^{__CFDictionary}^{__CFDictionary}^{__CFDictionary}^{__CFArray}^{__CFDate}^{__CFDictionary}BB@@@@?B}16@0:8
v24@0:8^{__OpaqueSOSEngine={__CFRuntimeBase=QAQ}^{SOSDataSource}^{__CFString}^{__OpaqueSOSManifest}^{__CFData}^{__CFDictionary}^{__CFDictionary}^{__CFDictionary}^{__CFDictionary}^{__CFArray}^{__CFDate}^{__CFDictionary}BB@@@@?B}16
^{__OpaqueSOSPeer=}16@0:8
v24@0:8^{__OpaqueSOSPeer=}16
^{__OpaqueSOSCoder=}16@0:8
^{__OpaqueSOSManifest=}16@0:8
v24@0:8^{__OpaqueSOSManifest=}16
^{__OpaqueSOSMessage=}16@0:8
v24@0:8^{__OpaqueSOSMessage=}16
^{__OpaqueSOSEngine={__CFRuntimeBase=QAQ}^{SOSDataSource}^{__CFString}^{__OpaqueSOSManifest}^{__CFData}^{__CFDictionary}^{__CFDictionary}^{__CFDictionary}^{__CFDictionary}^{__CFArray}^{__CFDate}^{__CFDictionary}BB@@@@?B}
^{__OpaqueSOSPeer=}
^{__OpaqueSOSCoder=}
^{__OpaqueSOSManifest=}
^{__OpaqueSOSMessage=}
@72@0:8@16@24@32@40@48@56q64
@80@0:8@16@24@32@40@48@56@64q72
@"CKKSKeychainBackedKey"
@72@0:8@16@24@32@40@48@56@64
@?24@0:8@16
v48@0:8^{__OpaqueSecDbConnection=}16Q24^{SecDbItem={__CFRuntimeBase=QAQ}^{SecDbClass}iii^{__CFDictionary}^{__CFData}^v^{__CFArray}}32^{SecDbItem={__CFRuntimeBase=QAQ}^{SecDbClass}iii^{__CFDictionary}^{__CFData}^v^{__CFArray}}40
@28@0:8B16^@20
@"CKKSZoneChangeFetcher"
@"SecDbKeychainSerializedAKSWrappedKey"
@"SecDbKeychainSerializedMetadata"
@56@0:8@16@24@32@40^@48
@"SecDbKeychainSerializedSecretData"
@44@0:8@16@24@32i40
@52@0:8@16^{__SecAccessControl=}24@32B40^@44
B52@0:8@16^{__SecAccessControl=}24@32B40^@44
@44@0:8i16^{__SecAccessControl=}20@28^@36
B28@0:8i16^@20
B44@0:8i16^{__SecAccessControl=}20@28^@36
@32@0:8i16B20^@24
@52@0:8@16i24^{__SecAccessControl=}28@36^@44
@64@0:8@16^{__SecAccessControl=}24@32@40B48B52^@56
@"SecDbKeychainSecretData"
@"SecDbKeychainMetadata"
@"NSObject<OS_nw_path_monitor>"
v24@0:8@"OctagonPendingFlag"16
@48@0:8@16@24@32@?40
@56@0:8@16@24@32@40@?48
@"<OctagonStateMachineEngine>"
@"OctagonFlags"
@32@0:8^{__SecKey={__CFRuntimeBase=QAQ}^{__SecKeyDescriptor}^v}16^@24
@"OTUpdateTrustedDeviceListOperation"
@104@0:8@16@24Q32@40@48@56@64@72@80@88@96
@96@0:8@16@24Q32@40@48@56@64@72@80@88
@"CKKSManifestInjectionPointHelper"
@64@0:8@16@24@32@40^@48@56
@60@0:8@16B24@28@36@44@52
@"CKKSSelves"
@88@0:8@16@24@32@40@48@56@64@72#80
v32@0:8Q16@?24
@"CKRecordZone"
@"NSString"24@0:8^@16
v24@0:8@?<v@?@"NSSet"@"NSError">16
v24@0:8@"<OTAuthKitAdapterNotifier>"16
@"CKKSListenerCollection<OTAuthKitAdapterNotifier>"
@"OTManager"
@"<OctagonEntitlementBearerProtocol>"
v32@0:8@"NSURLSession"16@"NSError"24
v40@0:8@"NSURLSession"16@"NSURLAuthenticationChallenge"24@?<v@?q@"NSURLCredential">32
v24@0:8@"NSURLSession"16
@"NSURLSession"
v32@0:8@16q24
v72@0:8@16@24@32@40@48@56@64
{?="errorCode"b1}
@116@0:8@16@24@32@40@48@56i64@68@76@84@92@100@108
{?="operationGroupIndex"b1"operationTriggered"b1}
@88@0:8@16@24@32@40@48@56@64@72@80
@48@0:8@16Q24@32@40
@88@0:8#16#24#32#40#48#56#64#72#80
{?="reportClientOperationFrequency"b1"reportClientOperationFrequencyBase"b1"reportOperationGroupFrequency"b1"reportOperationGroupFrequencyBase"b1"anonymous"b1}
^{SecDbItem={__CFRuntimeBase=QAQ}^{SecDbClass}iii^{__CFDictionary}^{__CFData}^v^{__CFArray}}40@0:8@16@24^@32
^{SecDbItem={__CFRuntimeBase=QAQ}^{SecDbClass}iii^{__CFDictionary}^{__CFData}^v^{__CFArray}}32@0:8@16^@24
^{SecDbItem={__CFRuntimeBase=QAQ}^{SecDbClass}iii^{__CFDictionary}^{__CFData}^v^{__CFArray}}16@0:8
v24@0:8^{SecDbItem={__CFRuntimeBase=QAQ}^{SecDbClass}iii^{__CFDictionary}^{__CFData}^v^{__CFArray}}16
@"CKKSKeychainViewState"
@"CKModifyRecordsOperation"
^{SecDbItem={__CFRuntimeBase=QAQ}^{SecDbClass}iii^{__CFDictionary}^{__CFData}^v^{__CFArray}}
@52@0:8@16B24@28@36@44
@20@0:8C16
B28@0:8C16^@20
B20@0:8C16
@"<CKKSLockStateProviderProtocol>"
{?="actualKeyclass"b1"keyclass"b1}
v56@0:8@16@24@32@40B48B52
B24@0:8@"CKRecordZoneID"16
@"CKKSCloudKitFetchRequest"24@0:8@"CKRecordZoneID"16
B32@0:8@"NSError"16@"CKRecordZoneID"24
v56@0:8@"NSArray"16@"NSArray"24@"CKRecordZoneID"32@"CKServerChangeToken"40B48B52
v56@0:8^{__OpaqueSecDbConnection=}16Q24^{SecDbItem={__CFRuntimeBase=QAQ}^{SecDbClass}iii^{__CFDictionary}^{__CFData}^v^{__CFArray}}32^{SecDbItem={__CFRuntimeBase=QAQ}^{SecDbClass}iii^{__CFDictionary}^{__CFData}^v^{__CFArray}}40@48
@36@0:8B16Q20@28
@32@0:8@16B24B28
B40@0:8@16q24@32
v24@0:8#16
B32@0:8Q16^@24
B44@0:8@16B24B28B32^@36
@"CKKSIncomingQueueOperation"
@"CKKSNewTLKOperation"
@"CKKSOutgoingQueueOperation"
@"CKKSProcessReceivedKeysOperation"
@"CKKSReencryptOutgoingItemsOperation"
@"CKKSSynchronizeOperation"
@"OctagonStateMultiStateArrivalWatcher"
@"CKKSSecDbAdapter"
@"<CKKSPBCodable>"
@88@0:8@16@24@32q40Q48q56q64@72@80
@112@0:8@16@24@32@40q48Q56q64q72@80@88@96@104
@"CKKSTLKShare"
@56@0:8@16@24@32Q40@48
@"CKKSResultOperation<OctagonStateTransitionOperationProtocol>"
{?="networkRequestBodyBytesSent"b1"networkResponseBodyBytesReceived"b1"networkStatusCode"b1"reportFrequency"b1"reportFrequencyBase"b1"timestampC2Init"b1"timestampC2Now"b1"timestampC2Start"b1"timestampDnsEnd"b1"timestampDnsStart"b1"timestampRequestEnd"b1"timestampRequestStart"b1"timestampResponseEnd"b1"timestampResponseStart"b1"timestampSslStart"b1"timestampTcpEnd"b1"timestampTcpStart"b1"triggers"b1"networkPreviousAttemptCount"b1"networkRequestHeaderSize"b1"networkResponseHeaderSize"b1"optionsTimeoutIntervalForRequest"b1"optionsTimeoutIntervalForResource"b1"networkConnectionReused"b1"optionsAllowExpensiveAccess"b1"optionsAllowPowerNapScheduling"b1"optionsAppleIdContext"b1"optionsOutOfProcess"b1"optionsOutOfProcessForceDiscretionary"b1"optionsTlsPinningRequired"b1}
@80@0:8@16@24Q32@40@48@56@64@72
v32@0:8@"APSConnection"16@"NSData"24
v48@0:8@"APSConnection"16@"NSData"24@"NSString"32@"NSString"40
v32@0:8@"APSConnection"16@"APSIncomingMessage"24
v40@0:8@"APSConnection"16@"NSString"24@"NSDictionary"32
v32@0:8@"APSConnection"16@"APSOutgoingMessage"24
v40@0:8@"APSConnection"16@"APSOutgoingMessage"24@"NSError"32
v28@0:8@"APSConnection"16B24
v24@0:8@"APSConnection"16
v32@0:8@"APSConnection"16@"NSArray"24
@40@0:8@16#24Q32
@"<OctagonAPSConnection>"
@"<CKKSZoneUpdateReceiverProtocol>"
@72@0:8@16@24@32@40@48@56^@64
@40@0:8@16^B24^@32
@"CKKSAESSIVKey"
@44@0:8@16@24@32B40
@60@0:8@16B24Q28B36B40@44@52
@"TPPBPeerStableInfoSetting"
@64@0:8@16@24Q32@40@48B56B60
@"TPPBSecureElementIdentity"
@32@0:8*16Q24
[80C]
B72@0:8r^{ccmode_siv=QQ^?^?^?^?^?^{ccmode_cbc}^{ccmode_ctr}}16@24@32*40Q48@56^@64
{?="isAppleInternal"b1}
{?="operationGroupTriggered"b1}
v24@0:8@"CKRecordZoneNotification"16
@40@0:8@16#24@32
@"CKKSFetchAllRecordZoneChangesOperation"
@"CKKSZoneChangeFetchDependencyOperation"
@56@0:8@16i24^i28i36@40^@48
@48@0:8i16i20@24^{__OpaqueSecDbConnection=}32^@40
@56@0:8@16i24i28@32^{__OpaqueSecDbConnection=}40^@48
B60@0:8i16^{__OpaqueSecDbConnection=}20^i28^@36^@44^@52
@52@0:8i16^{__OpaqueSecDbConnection=}20i28@32B40^@44
@44@0:8i16i20@24B32^@36
q24@0:8Q16
@"NSObject<OS_dispatch_semaphore>"
Q24@0:8d16
{?="lastCloudServicesTriggerTime"b1"lastEscrowAttemptTime"b1"triggerRequestTime"b1"uploadRetries"b1"certCached"b1"uploadCompleted"b1}
B32@0:8@?16^@24
@120@0:8@16@24@32@40@48@56@64@72@80@88@96#104#112
@"CKKSZoneModifyOperations"
v40@0:8@"_SFCredential"16@"_SFAccessPolicy"24@?<v@?@"NSString"@"NSError">32
v32@0:8@"NSString"16@?<v@?@"_SFPasswordCredential"@"NSString"@"NSError">24
v32@0:8@"NSArray"16@?<v@?@"NSArray"@"NSError">24
v32@0:8@"NSString"16@?<v@?B@"NSError">24
v40@0:8@"_SFCredential"16@"_SFCredential"24@?<v@?@"NSString"@"NSError">32
v40@0:8@"_SFCredential"16@"_SFCredential"24@?<v@?B@"NSError">32
@"SecCDKeychain"
@72@0:8@16@24q32@40@48@56@64
v28@0:8I16@?20
v36@0:8@16i24@?28
v24@0:8@?<v@?B@"NSData"@"NSError">16
v28@0:8I16@?<v@?B@"NSError">20
v32@0:8@"NSData"16@?<v@?@"NSData"@"NSError">24
v36@0:8@"NSData"16i24@?<v@?B@"NSError">28
v28@0:8I16@?<v@?@"NSArray"@"NSError">20
v32@0:8@"NSArray"16@?<v@?B@"NSError">24
v32@0:8@"NSDictionary"16@?<v@?@"NSError">24
v32@0:8@"NSArray"16@?<v@?@"NSError">24
v24@0:8@?<v@?B>16
v24@0:8^{__SecKey={__CFRuntimeBase=QAQ}^{__SecKeyDescriptor}^v}16
^{__OpaqueSOSPeerInfo=}16@0:8
^{__OpaqueSOSFullPeerInfo=}16@0:8
@32@0:8^{__CFDictionary=}16^{SOSDataSourceFactory=^?^?^?}24
B24@0:8^^{__CFError}16
i24@0:8^^{__CFError}16
B24@0:8^{__CFString=}16
^{__SecKey={__CFRuntimeBase=QAQ}^{__SecKeyDescriptor}^v}16@0:8
^{SOSDataSourceFactory=^?^?^?}16@0:8
v24@0:8^{SOSDataSourceFactory=^?^?^?}16
^{__SecKey={__CFRuntimeBase=QAQ}^{__SecKeyDescriptor}^v}
@"SOSAccountTrustClassic"
^{SOSDataSourceFactory=^?^?^?}
@"CKKeyParameter"
@"SOSKVSCircleStorageTransport"
@"SOSMessageKVS"
@"SOSCKCircleStorage"
@"NSUserDefaults"
@"CKKSPBFileStorage"
{?="ringUpdateFlag"b1}
B48@0:8@16^{__OpaqueSOSCircle=}24Q32^^{__CFError}40
B64@0:8@16@24Q32^{__OpaqueSOSCircle=}40^{__OpaqueSOSPeerInfo=}48^^{__CFError}56
@48@0:8r^*16r*24^{SOSDataSourceFactory=^?^?^?}32^@40
@40@0:8@16^{SOSDataSourceFactory=^?^?^?}24^@32
@"SOSAccount"
^v32@0:8^{__CFString=}16^^{__CFError}24
B32@0:8^{__CFString=}16^^{__CFError}24
B40@0:8^{__CFString=}16^v24^^{__CFError}32
B32@0:8^{__CFString=}16^v24
v32@0:8^{__CFString=}16^{__CFSet=}24
v24@0:8^{__CFSet=}16
B32@0:8@16^{__CFDictionary=}24
B32@0:8@16^^{__CFError}24
B40@0:8@16@24^^{__CFError}32
v24@0:8^{__CFDictionary=}16
B40@0:8^{__OpaqueSOSRing={__CFRuntimeBase=QAQ}^{__CFDictionary}^{__CFDictionary}^{__CFDictionary}^{__CFDictionary}}16^{__CFString=}24^^{__CFError}32
B60@0:8@16^{__OpaqueSOSRing={__CFRuntimeBase=QAQ}^{__CFDictionary}^{__CFDictionary}^{__CFDictionary}^{__CFDictionary}}24@32^{__SecKey={__CFRuntimeBase=QAQ}^{__SecKeyDescriptor}^v}40B48^^{__CFError}52
^{__OpaqueSOSRing={__CFRuntimeBase=QAQ}^{__CFDictionary}^{__CFDictionary}^{__CFDictionary}^{__CFDictionary}}32@0:8^{__CFString=}16^^{__CFError}24
^{__CFDictionary=}24@0:8^^{__CFError}16
B40@0:8@16^{__CFString=}24^^{__CFError}32
@52@0:8@16^{__OpaqueSOSFullPeerInfo=}24^{__OpaqueSOSCircle=}32i40@44
i44@0:8@16^{__CFString=}24i32^^{__CFError}36
i40@0:8@16^{__CFString=}24^^{__CFError}32
B36@0:8@16B24^^{__CFError}28
B40@0:8@16^{__CFSet=}24^{__CFSet=}32
v40@0:8@16^{__CFString=}24@?32
^{__CFSet=}24@0:8^{__CFString=}16
^{__SecKey={__CFRuntimeBase=QAQ}^{__SecKeyDescriptor}^v}32@0:8^{__CFString=}16^^{__CFError}24
^{__OpaqueSOSPeerInfo=}32@0:8^{__CFString=}16^^{__CFError}24
B32@0:8^{__OpaqueSOSPeerInfo=}16^^{__CFError}24
^{__CFSet=}24@0:8@?16
^{__CFArray=}32@0:8^{__SecKey={__CFRuntimeBase=QAQ}^{__SecKeyDescriptor}^v}16^^{__CFError}24
B32@0:8^{__SecKey={__CFRuntimeBase=QAQ}^{__SecKeyDescriptor}^v}16^^{__CFError}24
B48@0:8@16^{__CFString=}24^^{__CFError}32@?40
v32@0:8^{__OpaqueSOSCircle=}16^{__SecKey={__CFRuntimeBase=QAQ}^{__SecKeyDescriptor}^v}24
B32@0:8^{__OpaqueSOSCircle=}16^{__SecKey={__CFRuntimeBase=QAQ}^{__SecKeyDescriptor}^v}24
^{__CFSet=}16@0:8
B40@0:8^{__OpaqueSOSCircle=}16^{__SecKey={__CFRuntimeBase=QAQ}^{__SecKeyDescriptor}^v}24^^{__CFError}32
B32@0:8^{__OpaqueSOSFullPeerInfo=}16^^{__CFError}24
^{__CFArray=}32@0:8^^{__CFError}16@?24
Q32@0:8@16^@24
*48@0:8@16^@24r*32*40
^{__CFSet=}40@0:8@16^{__CFSet=}24^^{__CFError}32
B40@0:8@16^{__SecKey={__CFRuntimeBase=QAQ}^{__SecKeyDescriptor}^v}24^^{__CFError}32
^{__OpaqueSOSEngine=}24@0:8^{SOSDataSourceFactory=^?^?^?}16
B40@0:8@16^v24^^{__CFError}32
^{__SecKey={__CFRuntimeBase=QAQ}^{__SecKeyDescriptor}^v}24@0:8^^{__CFError}16
B32@0:8^{__CFDictionary=}16^^{__CFError}24
B40@0:8^{__CFString=}16^{__CFData=}24^^{__CFError}32
B40@0:8^{__CFString=}16^{__OpaqueSOSPeerInfo=}24^^{__CFError}32
^{__CFDictionary=}32@0:8^{__CFDictionary=}16^^{__CFError}24
^{__CFArray=}32@0:8^{__CFDictionary=}16^^{__CFError}24
B24@0:8^{__CFDictionary=}16
@48@0:8@16@24d32d40
i32@0:8^{__OpaqueSOSCircle=}16^{__OpaqueSOSPeerInfo=}24
^{__OpaqueSOSCircle=}24@0:8^^{__CFError}16
^{__OpaqueSOSCircle=}40@0:8@16^{__CFString=}24^^{__CFError}32
B32@0:8^{__OpaqueSOSCircle=}16^{__OpaqueSOSCircle=}24
B24@0:8^{__OpaqueSOSCircle=}16
B44@0:8^{__OpaqueSOSCircle=}16@24B32^^{__CFError}36
B40@0:8@16^{__OpaqueSOSCircle=}24^^{__CFError}32
B40@0:8@16^^{__CFError}24@?32
B32@0:8@16^{__OpaqueSOSCircle=}24
v32@0:8@16^{__SecKey={__CFRuntimeBase=QAQ}^{__SecKeyDescriptor}^v}24
B44@0:8@16^{__SecKey={__CFRuntimeBase=QAQ}^{__SecKeyDescriptor}^v}24B32^^{__CFError}36
v32@0:8^{__CFString=}16^{__CFData=}24
B48@0:8^{__CFArray=}16^{__CFArray=}24^{__CFArray=}32^^{__CFError}40
B40@0:8@16^{__CFData=}24^{__CFError=}32
q32@0:8@16^^{__CFError}24
B56@0:8@16^{__CFArray=}24^{__CFArray=}32^{__CFArray=}40^^{__CFError}48
B40@0:8@16^{__CFData=}24^^{__CFError}32
v24@0:8^{__OpaqueSOSCircle=}16
v24@0:8^{__OpaqueSOSFullPeerInfo=}16
^{__OpaqueSOSCircle=}16@0:8
^{__OpaqueSOSFullPeerInfo=}
^{__OpaqueSOSPeerInfo=}
^{__OpaqueSOSCircle=}
^v16@0:8
^{__CFString=}16@0:8
B40@0:8@16^{__CFDictionary=}24^^{__CFError}32
B40@0:8@16^{__CFSet=}24^^{__CFError}32
B48@0:8@16^{__CFString=}24^{__CFData=}32^^{__CFError}40
^{__CFDictionary=}40@0:8@16^{__CFDictionary=}24^^{__CFError}32
v36@0:8@16i24@28
v32@0:8@16^{__OpaqueSOSPeer=}24
B48@0:8@16^{__CFString=}24^{__CFString=}32^^{__CFError}40
v24@0:8^v16
@24@0:8^{__OpaqueSOSPeer=}16
^{__CFDictionary=}16@0:8
^{__CFDictionary=}
^{__SecKey={__CFRuntimeBase=QAQ}^{__SecKeyDescriptor}^v}36@0:8i16@20^^{__CFError}28
softlink:o:path:/System/Library/PrivateFrameworks/CrashReporterSupport.framework/CrashReporterSupport
softlink:o:path:/System/Library/PrivateFrameworks/CloudServices.framework/CloudServices
