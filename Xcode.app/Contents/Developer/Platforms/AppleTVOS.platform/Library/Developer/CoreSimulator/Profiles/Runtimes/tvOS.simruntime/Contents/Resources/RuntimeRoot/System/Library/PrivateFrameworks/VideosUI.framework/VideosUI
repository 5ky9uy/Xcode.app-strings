v8@?0
overideLocDict
T@"NSDictionary",&,V_overideLocDict
The %@ initializer is not available.
hash
TQ,R
superclass
T#,R
description
T@"NSString",R,C
debugDescription
currentUpdateRequest
T@"IKUpdateServiceRequest",R,N
T@"IKUpdateServiceRequest",&,N,V_currentUpdateRequest
receivedEvents
T@"NSArray",C,N,V_receivedEvents
remainingViewElements
T@"NSMutableOrderedSet",&,N,V_remainingViewElements
contextDictionary
T@"NSDictionary",&,N,V_contextDictionary
viewElement
T@"IKViewElement",W,N,V_viewElement
Error
TransactionID
CanonicalID
VUIPurchaseRequestDidFinishNotification
VUISubscribeRequestDidFinishNotification
VUIPurchaseOrSubscribeRequestDidStartNotification
canonicalId
canonicalID
T@"NSString",C,N,V_canonicalID
postPlayUpdateData
T@"NSDictionary",&,N,V_postPlayUpdateData
The %@ parameter must not be nil.
mediaLibrary
requests
T@"NSArray",C,N,V_requests
responses
T@"NSArray",C,N,V_responses
error
T@"NSError",C,N,V_error
privateQueue
T@"NSOperationQueue",&,N,V_privateQueue
T@"VUIMPMediaLibrary",&,N,V_mediaLibrary
ColorCapability
ContentDescription
ContentRating
CoverArtURL
Credits
DownloadState
Duration
Episode
Episodes
EpisodeNumber
GenreTitle
HLSColorCapability
HomeVideos
Identifier
Local
Movies
MovieRentals
OfflineFPSKeys
PlaybackURL
PreviewFrameURL
RelativeFilePathString
ReleaseDate
Seasons
SeasonNumber
Shows
Studio
Title
Type
tvShow
VUIAppInstallerViewControllerInitException
-init is not supported. Use -initWithChannel:
installable must be non-nil
App installation is update: %d
APP_UPDATE_ALERT_TITLE_FORMAT
APP_INSTALL_ALERT_TITLE_FORMAT
APP_GET_ALERT_TITLE_FORMAT
APP_UPDATE_ALERT_MESSAGE_FORMAT
APP_INSTALL_ALERT_MESSAGE_FORMAT
APP_INSTALL_ALERT_MESSAGE_FORMAT_IOS
APP_UPDATE_ALERT_MESSAGE_FORMAT_CONTENT_TYPE_MOVIE
APP_UPDATE_ALERT_MESSAGE_FORMAT_CONTENT_TYPE_SHOW
APP_INSTALL_ALERT_MESSAGE_FORMAT_CONTENT_TYPE_MOVIE
APP_INSTALL_ALERT_MESSAGE_FORMAT_CONTENT_TYPE_SHOW
APP_GET_ALERT_MESSAGE_FORMAT_CONTENT_TYPE_MOVIE
APP_GET_ALERT_MESSAGE_FORMAT_CONTENT_TYPE_SHOW
APP_INSTALL_ACTION_TITLE_UPDATE
APP_INSTALL_ACTION_TITLE_INSTALL
APP_INSTALL_ACTION_TITLE_GET
APP_INSTALL_PAGE_UPDATE_SUBTITLE_FORMAT
APP_INSTALL_PAGE_SUBTITLE_FORMAT
APP_INSTALL_PAGE_UPDATE_SUBTITLE_FORMAT_CONTENT_TYPE_MOVIE
APP_INSTALL_PAGE_UPDATE_SUBTITLE_FORMAT_CONTENT_TYPE_SHOW
APP_INSTALL_PAGE_SUBTITLE_FORMAT_CONTENT_TYPE_MOVIE
APP_INSTALL_PAGE_SUBTITLE_FORMAT_CONTENT_TYPE_SHOW
APP_INSTALL_PAGE_TITLE_FORMAT
APP_INSTALL_PAGE_UPDATE_TITLE_FORMAT
VUIAppInstallerViewController - Cancelled app installation.
VUIAppInstallerViewController - Dismissed active app installation.
v16@?0Q8
VUIAppInstallerViewController - Accepted app installation.
VUIAppInstallerViewController - App store link %@
v16@?0B8B12
v16@?0d8
VUIAppInstallerViewController - Posting app install finished.
VUIAppInstallerViewController - Hiding app install display. Headless: %d
v16@?0@"NSError"8
installable
T@"<WLKInstallable>",R,N,V_installable
localizedContentTitle
T@"NSString",C,N,V_localizedContentTitle
contentType
T@"NSString",C,N,V_contentType
confirmationTitle
T@"NSString",C,N,V_confirmationTitle
confirmationBody
T@"NSString",C,N,V_confirmationBody
updateBody
T@"NSString",C,N,V_updateBody
updateTitle
T@"NSString",C,N,V_updateTitle
confirmationInstallButtonTitle
T@"NSString",C,N,V_confirmationInstallButtonTitle
displayAppStoreLink
TB,N,V_displayAppStoreLink
displaySecondaryLink
TB,N,V_displaySecondaryLink
secondaryLinkTitle
T@"NSString",C,N,V_secondaryLinkTitle
secondaryLinkHandler
T@?,C,N,V_secondaryLinkHandler
adam-id
videos
v16@?0@"NSDictionary"8
v16@?0@"JSContext"8
v16@?0@"NSString"8
v12@?0B8
v24@?0@"NSArray"8@"NSError"16
name=%@
v20@?0B8@"NSError"12
completionHandler
T@?,C,N,V_completionHandler
deferredOpenURL
T@"NSURL",&,N,V_deferredOpenURL
deferredOpenURLCompletion
T@?,C,N,V_deferredOpenURLCompletion
com.apple.AppleTV.playback
SecureKeyDelivery
v32@?0@"NSURL"8@"NSURL"16@"NSError"24
%@%@
v24@?0@"NSData"8@"NSError"16
v16@?0@"NSURL"8
fps-cert
fps-request
v24@?0@"NSDictionary"8@"NSError"16
v24@?0@8@"NSError"16
stop 
POST
application/json
Content-Type
X-Secure-Invalidation-Dsid
fairplay-streaming-response
version
streaming-keys
B32@?0@"TVPContentKeyRequest"8Q16^B24
status
renew-after
expiration-time
playback-start-time
content-id
is-low-value
playback-duration
allow-manual-renewal
extra-server-parameters
device-limit
com.apple.fpsRequest
fairplay-streaming-request
rental-id
stop
lease-action
renew
start
skipped-rental-checkout
offline
long
certificateURL
T@"NSURL",C,N,V_certificateURL
keyServerURL
T@"NSURL",C,N,V_keyServerURL
state
Tq,N,V_state
certificateData
T@"NSData",&,N,V_certificateData
requestsAwaitingCertFetch
T@"NSMutableArray",&,N,V_requestsAwaitingCertFetch
savedRequestToUseForStopping
T@"TVPContentKeyRequest",&,N,V_savedRequestToUseForStopping
keyExpirationDate
T@"NSDate",&,N,V_keyExpirationDate
rentalPlaybackStartDate
T@"NSDate",&,N,V_rentalPlaybackStartDate
hasLoadedAnyStreamingKeyRequests
TB,N,V_hasLoadedAnyStreamingKeyRequests
contentKeySession
T@"TVPContentKeySession",&,N,V_contentKeySession
secureInvalidationNonceURL
T@"NSURL",&,N,V_secureInvalidationNonceURL
secureInvalidationDSID
T@"NSNumber",&,N,V_secureInvalidationDSID
delegate
T@"NSObject<VUIStoreFPSKeyLoaderDelegate>",W,N,V_delegate
eventCollection
T@"TVPPlaybackReportingEventCollection",&,N,V_eventCollection
rentalID
T@"NSNumber",&,N,V_rentalID
didSkipRentalCheckout
TB,N,V_didSkipRentalCheckout
v32@?0@"VUIMediaEntityFetchResponse"8Q16^B24
v16@?0@"<VUIMediaEntitiesFetchControllerDelegate>"8
T@"<VUIMediaEntitiesFetchControllerDelegate>",W,N,V_delegate
response
T@"VUIMediaEntityFetchResponse",R,N,V_response
v16@?0@8
itemID
itemType
T@"NSString",&,N,V_itemID
T@"NSString",&,N,V_itemType
channelID
T@"NSString",&,N,V_channelID
Unimplemented
-[VUIExtrasManager init] not supported, use +sharedInstance instead
Extras presented
com.apple.TVPlayback
VideoDisabledByUserProfileErrorDescription
Extras dismissed
applicationController
T@"VUIExtrasApplicationController",&,N,V_applicationController
presentingAnimator
T@"_TVNavigationZoomAnimator",&,N,V_presentingAnimator
dismissingAnimator
T@"_TVProductTemplateZoomAnimator",&,N,V_dismissingAnimator
presenting
TB,N,V_presenting
reverseDismissal
TB,N,V_reverseDismissal
unrestrictedActionParams
T@"NSString",C,N,V_unrestrictedActionParams
extrasVisible
TB,R,N,GisExtrasVisible
VUIMediaLibraryManagerHomeSharesDidChangeNotification
VUIMediaLibraryManagerHomeSharesDidChangeUserInfoKeyMediaLibraries
VUIMediaLibraryManagerHomeSharesDidChangeUserInfoKeyChangeSet
VUITellAppRemovalServiceThatSecureInvalidationDidCompleteNotification
com.apple.videosui.VUIMediaLibraryManager.serialProcessingQueue
PlistDatabasePath
com.apple.VideosUI
homeShareMediaLibraries
v16@?0@"VUIMediaLibraryManager"8
identifier
UseTVHomeSharing
deviceMediaLibrary
T@"VUIDeviceMediaLibrary",&,N,V_deviceMediaLibrary
serialProcessingDispatchQueue
T@"NSObject<OS_dispatch_queue>",&,N,V_serialProcessingDispatchQueue
homeShareManager
T@"NSObject<VUIHomeShareMediaLibraryManager>",&,N,V_homeShareManager
completionDispatchQueue
T@"NSObject<OS_dispatch_queue>",&,N,V_completionDispatchQueue
sidebandMediaLibrary
T@"VUISidebandMediaLibrary",R,N,V_sidebandMediaLibrary
aggregateMediaLibrary
T@"VUIAggregateMediaLibrary",R,N,V_aggregateMediaLibrary
T@"NSArray",R,C,N
activeMediaLibrary
T@"VUIMediaLibrary",&,N,V_activeMediaLibrary
VUIFavoritesRequestDidFinishNotification
Action
-[VUIFavoritesRequestManager init] not supported, use +sharedInstance instead
sportsFavoritesConfirmation
FAVORITES_NOTIFICATION_TEAM_ADDED
FAVORITES_NOTIFICATION_TEAM_REMOVED
ongoingEntityIDOperationDictionary
T@"NSMutableDictionary",&,N,V_ongoingEntityIDOperationDictionary
v32@?0@"UICollectionViewLayoutAttributes"8Q16^B24
T@"<VUIMediaLibraryApplicationControllerDelegate>",&,N,V_delegate
Disconnected
Connecting
Connected
Disconnecting
%@, 
taskIdentifier
TQ,N,V_taskIdentifier
latestFetchResponses
currentFetchResponses
The fetch responses arrays parameters must be non empty and contain the same number of response objects
@"NSObject<NSCopying>"16@?0@"VUIMediaEntityGroup"8
@"VUICollectionChangeSet"24@?0@"VUIMediaEntityGroup"8@"VUIMediaEntityGroup"16
@"NSObject<NSCopying>"16@?0@"VUIMediaEntity"8
B24@?0@"VUIMediaEntity"8@"VUIMediaEntity"16
fetchResponseChanges
T@"NSArray",C,N,V_fetchResponseChanges
T@"NSArray",C,N,V_latestFetchResponses
T@"NSArray",C,N,V_currentFetchResponses
EXPIRATION_LEFT
stackingPosterView
T@"_TVStackingPosterView",&,N,V_stackingPosterView
placeholderImage
T@"UIImage",&,N,V_placeholderImage
placeholderImageString
T@"NSString",&,N,V_placeholderImageString
v32@?0@"VUIMediaEntity"8Q16^B24
v32@?0@"VUIMediaEntityGroup"8Q16^B24
rentalExpirationDate
addedDate
genreTitle
title
v32@?0@"NSObject<NSCopying>"8@"NSArray"16^B24
q24@?0@"NSNumber"8@"NSNumber"16
T@"VUIMediaLibrary",&,N,V_mediaLibrary
homeShares
T@"NSArray",&,N,V_homeShares
categoryTypeByFetchRequestIdentifier
T@"NSDictionary",&,N,V_categoryTypeByFetchRequestIdentifier
mediaEntitiesFetchController
T@"VUIMediaEntitiesFetchController",&,N,V_mediaEntitiesFetchController
categoryTypes
T@"NSArray",&,N,V_categoryTypes
hasMediaEntitiesFetchCompleted
TB,N,V_hasMediaEntitiesFetchCompleted
hasStartedFetch
TB,N,V_hasStartedFetch
genreGroupings
T@"NSArray",&,N,V_genreGroupings
validCategories
T@"NSSet",&,N,V_validCategories
cloudClient
T@"VUICloudClient",&,N,V_cloudClient
rentalsUpdateFetchController
T@"VUIMediaEntitiesFetchController",&,N,V_rentalsUpdateFetchController
T@"<VUILibraryCategoryMenuViewModelDelegate>",W,N,V_delegate
mediaEntitiesByCategoryType
T@"NSDictionary",&,N,V_mediaEntitiesByCategoryType
mediaEntitiesByGenreIdentifier
T@"NSDictionary",&,N,V_mediaEntitiesByGenreIdentifier
artworkInfoDictionaryByPurchaseID
T@"NSDictionary",&,N,V_artworkInfoDictionaryByPurchaseID
categories
T@"VUIMenuDataSource",&,N,V_categories
hasContent
TB,R,N
actionRef
contextData
actionRefBuy
actionRefGet
actionRefPreorder
actionRefRent
actionRefRentWatchNow
actionRefSubscribe
actionRefComplete
actionRefUpdate
actionRefPlay
actionRefPunchout
actionRefAppPunchout
actionRefItunesExtras
actionRefRedownload
actionRefPromise
actionRefRemoveFromPlayHistory
actionRefLocationPrompt
actionRefShareMediaItem
actionRefUpdateSportsFavorite
actionRefUpdateUpNext
actionRefMarkAsWatched
actionRefClearFromPlayHistory
actionRefGdprProceed
VUIApplicationAction: Unknown action type %@
dolby-vision
dolby-atmos
metadata-ad
metadata-sdh
cs_badge_white
cs_badge_black
RTRotten
RTFresh
RTCertified
MMMM dd, yyyy
TV.CommonSense.AgeRating
v32@?0@"UIView"8Q16^B24
_TVLoadingViewController
vui_ppt_loading
TB,R,N,Gvui_ppt_isLoading
headerView
T@"UIView",&,N,V_headerView
collectionView
T@"UICollectionView",&,N,V_collectionView
editorial
spotlight
live
time
reair
badgeKind
TQ,N,V_badgeKind
cornerRadius
Td,N,V_cornerRadius
gradientBgColors
T@"NSArray",&,N,V_gradientBgColors
textLayout
T@"VUITextLayout",&,N,V_textLayout
imageLayout
T@"TVImageLayout",&,N,V_imageLayout
videosNative
isCancelled
isFinished
textBadge
scorecardView
tv_displayed
backgroundImageForMaterialRendering
T@"UIImage",&,N
_sharedDrawQueue
T@"NSOperationQueue",R,N
overlayLayout
T@"VUISportsOverlayLayout",&,N,V_overlayLayout
T@"IKViewElement",&,N,V_viewElement
T@"VUIScorecardView",&,N,V_scorecardView
scoreboardViewModel
T@"VUISportsScoreboardViewModel",&,N,V_scoreboardViewModel
textBadgeHasMaterial
TB,N,V_textBadgeHasMaterial
T@"VUITextBadgeView",&,N,V_textBadge
logoView
T@"_TVImageView",&,N,V_logoView
logoElement
T@"IKImageElement",&,N,V_logoElement
logoSize
T{CGSize=dd},N,V_logoSize
pendingOperation
T@"NSOperation",&,N,V_pendingOperation
scorecardViewBackgroundImage
T@"UIImage",&,N,V_scorecardViewBackgroundImage
backgroundImageHasChanged
TB,N,V_backgroundImageHasChanged
containingCell
T@"UICollectionReusableView",W,N,V_containingCell
isHostSetup
TB,N,V_isHostSetup
T@"UIImage",&,N,V_backgroundImageForMaterialRendering
T@"NSString",&,N,V_state
isEntitled
Offer_Card_Versions_Shadow_Mask
TV.HowToWatch.VersionsButtonGenericText
offerView
T@"VUIOfferView",&,N,V_offerView
cardSize
T{CGSize=dd},N,V_cardSize
focusedTextLabel
T@"VUILabel",&,N,V_focusedTextLabel
secondChinImageView
T@"VUIImageView",&,N,V_secondChinImageView
@"NSString"16@?0@"VUIMediaEntityGroup"8
@"NSString"16@?0@"VUIMediaEntity"8
q24@?0@"VUIMediaEntityType"8@"VUIMediaEntityType"16
v32@?0@8Q16^B24
cell
ACCESS_SEE_ALL_TITLE
appIcon
appName
apps
T@"NSArray",C,N,V_apps
verticalSpacing
Td,R,N,V_verticalSpacing
buttonLayout
T@"VUIButtonLayout",R,N,V_buttonLayout
titleLayout
T@"VUITextLayout",R,N,V_titleLayout
descriptionLayout
T@"VUITextLayout",R,N,V_descriptionLayout
badgeViewLayout
T@"VUIMediaTagsViewLayout",R,N,V_badgeViewLayout
Td,R,N,V_cornerRadius
T@"TVImageLayout",R,N,V_imageLayout
metaDataViewLayout
T@"VUINowPlayingHudMetaDataViewLayout",R,N,V_metaDataViewLayout
buttonsLayout
T@"VUINowPlayingHudButtonsLayout",R,N,V_buttonsLayout
selectedMediaInfo
T@"TVMediaInfo",R,N
shelfViewController
T@"_TVShelfViewController",&,N,V_shelfViewController
T@"TVMediaInfo",&,N,V_selectedMediaInfo
observableEventController
T@"TVObservableEventController",&,N,V_observableEventController
host
TQ,R,N,V_host
visualEffectView
T@"UIView",R,N
shouldBindRowsTogether
shelfView
T@"UIView",&,N,V_shelfView
backgroundVisualEffectView
T@"UIVisualEffectView",&,N,V_backgroundVisualEffectView
seasonCount
mediaItemCollection
requestedProperties
@16@?0@"VUIMediaEntityPropertyDescriptor"8
errorView
T@"VUIErrorView",R,N
ATVMediaTypeExtrasAuxiliaryContent
rentalAdamID
playURL
scrubVideoURL
hlsPlaylistUrl
contentRating
dataType
resumeTime
disableResumeMenu
fpsCertificateURL
fpsKeyServerURL
B32@?0@"IKMediaElement"8Q16^B24
%@.IFrameScrubVideo
resumeMenuBehavior
TQ,N,V_resumeMenuBehavior
movie
tvshow
titleTextLayout
T@"VUITextLayout",R,N,V_titleTextLayout
descriptionTextLayout
T@"VUITextLayout",R,N,V_descriptionTextLayout
debugTextLayout
T@"VUITextLayout",R,N,V_debugTextLayout
debugTextLayout2
T@"VUITextLayout",R,N,V_debugTextLayout2
badgeView
T@"_TVImageView",&,N,V_badgeView
badgeElement
T@"IKViewElement",&,N,V_badgeElement
badgeSize
T{CGSize=dd},N,V_badgeSize
badgeFrame
T{CGRect={CGPoint=dd}{CGSize=dd}},N,V_badgeFrame
badgeType
T@"NSString",&,N,V_badgeType
watched-checkmark
T@"VUIOverlayLayout",&,N,V_overlayLayout
titleLabel
T@"VUILabel",&,N,V_titleLabel
titleElement
T@"IKViewElement",&,N,V_titleElement
textBadgeElement
T@"IKViewElement",&,N,V_textBadgeElement
badgeViewWrappers
T@"NSArray",&,N,V_badgeViewWrappers
progressView
T@"_TVProgressView",&,N,V_progressView
gradientView
T@"UIView",&,N,V_gradientView
gradientLayer
T@"CAGradientLayer",&,N,V_gradientLayer
%@ - %@
Will end reporting for %@
Will begin reporting for %@
_playerStateWillChange %@
_playerCurrentMediaItemWillChange %@
Stopping %@
End session (enforcing single session) %@
Invalid player. Not creating session %@
Transition: %@ --> %@ (%@), %@, reason:%@
Valid
Invalid
Ignoring event for un-matched session %@
You must override %@ in a subclass
sessions
T@"NSMutableArray",&,N,V_sessions
enforceSinglePlaybackSession
TB,R,N,V_enforceSinglePlaybackSession
T@"MPMediaLibrary",&,N,V_mediaLibrary
T@"VUIMediaItemEntityTypesFetchResponse",&,N,V_response
%@=%@
mediaEntities
sortIndexes
<%@>
T@"NSObject<NSCopying>",C,N,V_identifier
T@"NSArray",C,N,V_mediaEntities
T@"NSArray",C,N,V_sortIndexes
showId
updateComponentType
canAutoPlay
inheritParentDataSource
dataItems
prefetchedDataDict
T@"NSDictionary",C,N,V_prefetchedDataDict
T@"NSString",C,N,V_host
productID
T@"NSString",C,N,V_productID
showID
T@"NSString",C,N,V_showID
updateEvent
TB,N,V_updateEvent
TB,N,V_canAutoPlay
APP_INSTALL_ACTION_TITLE_CANCEL
APP_INSTALL_APPSTORE_BUTTON
lockupView
T@"VUIAppInstallLockup",&,N,V_lockupView
T@"NSString",C,N,V_title
message
T@"NSString",C,N,V_message
actionButton
T@"UIButton",&,N,V_actionButton
cancelButton
T@"UIButton",&,N,V_cancelButton
appStoreButton
T@"UIButton",&,N,V_appStoreButton
secondaryLinkButton
T@"UIButton",&,N,V_secondaryLinkButton
rowTextLayout
T@"VUITextLayout",R,N,V_rowTextLayout
scoreTextLayout
T@"VUITextLayout",R,N,V_scoreTextLayout
losingRowTextLayout
T@"VUITextLayout",R,N,V_losingRowTextLayout
losingScoreTextLayout
T@"VUITextLayout",R,N,V_losingScoreTextLayout
footerTextLayout
T@"VUITextLayout",R,N,V_footerTextLayout
availabilityTextLayout
T@"VUITextLayout",R,N,V_availabilityTextLayout
availabilityImageLayout
T@"TVImageLayout",R,N,V_availabilityImageLayout
VUINowPlayingPostPlayShouldUpdateNotification
VUINowPlayingShouldShowAutoPlayUINotification
VUINowPlayingShouldHideAutoPlayUINotification
VUINowPlayingWillStartNotification
VUINowPlayingDidEndNotification
playFromBeginning
showProductPage
player
focusableDescription
skipIntro
canPlaybackInWatchNow
allowsManualPostPlayInvocation
stillWatchingAlertDuration
postPlay
show
hide
SKIP_INTRO
library media controller
extras media controller
Generic media controller
metadata
v16@?0@"VUIFocusableTextView"8
appContext
T@"IKAppContext",&,N,V_appContext
mediaPlaybackManager
T@"TVMediaPlaybackManager",&,N,V_mediaPlaybackManager
enabledUIModes
T@"NSArray",C,N,V_enabledUIModes
mediaControllerHost
T@"UIViewController<TVMediaControllerHosting>",W,N,V_mediaControllerHost
mediaController
T@"VUIMediaController",&,N,V_mediaController
nowPlayingHudView
T@"VUINowPlayingHudView",&,N,V_nowPlayingHudView
nowPlayingHudLayout
T@"VUINowPlayingHudViewLayout",&,N,V_nowPlayingHudLayout
viewModel
T@"VUINowPlayingViewModel",&,N,V_viewModel
nowPlayingHudVisible
TB,R,N,GisNowPlayingHudVisible,V_nowPlayingHudVisible
popWhenDone
TB,N,GshouldPopWhenDone,V_popWhenDone
skipIntroButton
T@"VUIButton",&,N,V_skipIntroButton
postPlayViewController
T@"VUIPostPlayDocumentServiceViewController",&,N,V_postPlayViewController
playbackContext
TQ,N,V_playbackContext
skipButtonLayout
T@"VUINowPlayingSkipButtonLayout",&,N,V_skipButtonLayout
ratingView
T@"VUIVideoAdvisoryView",&,N,V_ratingView
alreadyShownAdvisory
TB,N,GhasAlreadyShownAdvisory
waitingForPostPlayDocumentUpdate
TB,N,V_waitingForPostPlayDocumentUpdate
waitingForPostPlayDocumentUpdateToShowPostPlay
TB,N,V_waitingForPostPlayDocumentUpdateToShowPostPlay
internalMenuGestureRecognizer
T@"UITapGestureRecognizer",&,N,V_internalMenuGestureRecognizer
disappearanceReason
TQ,N,V_disappearanceReason
currentUI
TQ,N,V_currentUI
T@"NSString",R,N
showCanonicalID
T@"<VUINowPlayingViewControllerDelegate>",W,N,V_delegate
finishedPostPlayBootstrap
TB,N,V_finishedPostPlayBootstrap
showsNowPlayingHUD
TB,N,V_showsNowPlayingHUD
showsProductPageButton
TB,N
channelsTextLayout
T@"VUITextLayout",&,N,V_channelsTextLayout
channelLogoImageLayout
T@"TVImageLayout",&,N,V_channelLogoImageLayout
T@"UIVisualEffectView",R,N,V_visualEffectView
label
T@"VUILabel",&,N,V_label
library
LibraryMain
LibraryTvShowProduct
lockup
targetType
navigate
actionType
TVShows
Downloaded
RecentlyAdded
Rentals
RecentMovies
RecentTVShows
HDRMovies
RecentPurchases
HDRMovie
Downloads
HomeShares
Genres
playbackTime
artwork
urlDescription
chapterType
playbackDuration
value
viewController
T@"UIViewController",&,N,V_viewController
LIBRARY_EMPTY_TITLE_TV
LIBRARY_GENERIC_FETCH_ERROR_TITLE
%@_%@
menuCollectionViewController
T@"VUIMenuCollectionViewController",&,N,V_menuCollectionViewController
tvLibraryView
T@"VUITVLibraryView",&,N,V_tvLibraryView
gridCollectionViewController
T@"UIViewController",&,N,V_gridCollectionViewController
categoryMenuViewModel
T@"VUILibraryCategoryMenuViewModel",&,N,V_categoryMenuViewModel
currentlySelectedIndexPath
T@"NSIndexPath",&,N,V_currentlySelectedIndexPath
IncludeSortIndexes
IncludeGroupingSortIndexes
ForcePopulateProperties
__All__
resolution
HLSResolution
colorCapability
audioCapability
HLSAudioCapability
extrasURL
rentalPlaybackDuration
isLocal
releaseYear
releaseDate
seasonNumber
storeID
isPlayable
duration
previewFrameImageIdentifier
episodeNumber
mediaEntityTypes
predicate
sortDescriptors
properties
range
%@,%@
groupingKeyPath
groupingSortComparator
options
Unknown key for sort descriptor! %@
T@"NSString",C,N,V_identifier
T@"NSSet",C,N,V_mediaEntityTypes
_isItemsFetch
_isCollectionsFetch
_isShowsFetch
_isSeasonsFetch
T@"NSPredicate",C,N,V_predicate
T@"NSArray",C,N,V_sortDescriptors
T@"NSSet",C,N,V_properties
T{_NSRange=QQ},N,V_range
T@"NSString",C,N,V_groupingKeyPath
T@?,C,N,V_groupingSortComparator
T@"NSDictionary",C,N,V_options
type
coverArtImageIdentifier
handler
T@"<VUITVButtonHandler>",&,N,V_handler
completion
T@?,C,N,V_completion
tvButtonRecognizer
T@"UITapGestureRecognizer",&,N,V_tvButtonRecognizer
gestureToHandlerMap
T@"NSMapTable",&,N,V_gestureToHandlerMap
com.apple.videosui.VUIMPMediaItemAssetControllerManager.serialProcessingQueue
libraryFileURL
T@"NSURL",C,N,V_libraryFileURL
contextDataDictionary
T@"NSDictionary",R,N,V_contextDataDictionary
T@"IKAppContext",W,N,V_appContext
CoverArt
PreviewFrame
__VUIAccessView_iOSObservationContext
highlighted
ACCESS_NACK_TITLE_PLURAL
ACCESS_NACK_BODY_IOS_PLURAL
ACCESS_NACK_TITLE_FORMAT
ACCESS_NACK_BODY_IOS_FORMAT
ACCESS_SEE_ALL_BUTTON
ACCESS_ALLOW
ACCESS_DENY
ACCESS_NACK_BUTTON
privacyView
T@"UIView",&,N,V_privacyView
Item
Collection
TQ,N,V_type
play
extras
punchout
entitlementReason
rental
isEntitledToPlay
brandId
externalId
referenceId
NotDownloaded
Downloading
studio
credits
previewFrameURL
playbackURL
filePathURL
offlineFPSKeys
[omitted]
downloadState
season
T@"VUIPlistMediaDatabaseSeason",W,N,V_season
playable
T@"NSNumber",R,C,N,GisPlayable
T@"NSNumber",C,N,V_duration
T@"NSDate",C,N,V_releaseDate
T@"NSURL",C,N,V_previewFrameURL
T@"_TVContentRating",C,N,V_contentRating
T@"NSNumber",C,N,V_colorCapability
T@"NSNumber",C,N,V_HLSColorCapability
T@"NSNumber",C,N,V_episodeNumber
T@"NSString",C,N,V_studio
T@"VUIMediaItemCredits",C,N,V_credits
T@"NSURL",C,N,V_playbackURL
T@"NSURL",C,N,V_filePathURL
T@"NSDictionary",C,N,V_offlineFPSKeys
T@"NSString",C,N,V_downloadState
Unable to determine the VUIMediaEntityKind to use for this request: %@
Unexpected media entity type!
T@"VUIPlistMediaLibrary",&,N,V_mediaLibrary
T@"NSArray",&,N,V_responses
fetchControllers
v24@?0q8@"NSError"16
T@"NSArray",C,N,V_fetchControllers
mediaLibraryRevision
TQ,N,V_mediaLibraryRevision
eventTypeLabel
T@"VUILabel",&,N,V_eventTypeLabel
eventTypeLabelLayout
T@"VUITextLayout",&,N,V_eventTypeLabelLayout
subhead1Label
T@"VUILabel",&,N,V_subhead1Label
subhead1LabelLayout
T@"VUITextLayout",&,N,V_subhead1LabelLayout
subhead2Label
T@"VUILabel",&,N,V_subhead2Label
subhead2LabelLayout
T@"VUITextLayout",&,N,V_subhead2LabelLayout
tabNameLabel
T@"VUILabel",&,N,V_tabNameLabel
tabNameLabelLayout
T@"VUITextLayout",&,N,V_tabNameLabelLayout
tabImageView
T@"UIImageView",&,N,V_tabImageView
separatorView
T@"VUISeparatorView",&,N,V_separatorView
eventTypeLabelStr
T@"NSString",C,N,V_eventTypeLabelStr
subhead1LabelStr
T@"NSString",C,N,V_subhead1LabelStr
subhead2LabelStr
T@"NSString",C,N,V_subhead2LabelStr
tabImage
T@"UIImage",C,N
tabName
T@"NSString",C,N,V_tabName
T@"VUITextLayout",R,N,V_textLayout
rentalExpirationTextLayout
T@"VUITextLayout",R,N,V_rentalExpirationTextLayout
groupedKeys
T@"NSArray",R,N,V_groupedKeys
groupMargin
T{UIEdgeInsets=dddd},R,N,V_groupMargin
badgeImageLayout
T@"TVImageLayout",R,N,V_badgeImageLayout
commonSenseMargin
T{UIEdgeInsets=dddd},R,N,V_commonSenseMargin
tomatoMeterMargin
T{UIEdgeInsets=dddd},R,N,V_tomatoMeterMargin
v16@?0@"<VUIMediaItemEntityTypesFetchControllerDelegate>"8
T@"<VUIMediaItemEntityTypesFetchControllerDelegate>",W,N,V_delegate
dictionary
T@"NSDictionary",&,N,V_dictionary
headerTextLayout
T@"VUITextLayout",R,N,V_headerTextLayout
middleSpacing
Td,R,N,V_middleSpacing
headerTitleLayout
T@"VUITextLayout",R,N,V_headerTitleLayout
headerSubtitleLayout
T@"VUITextLayout",R,N,V_headerSubtitleLayout
sourceTextLayout
T@"VUITextLayout",R,N,V_sourceTextLayout
headerBadgeLayout
T@"TVImageLayout",R,N,V_headerBadgeLayout
sourceBadgeLayout
T@"TVImageLayout",R,N,V_sourceBadgeLayout
reviewTableLayout
T@"VUIFeedbackTableLayout",R,N,V_reviewTableLayout
ratingBadgeLayout
T@"TVRatingBadgeLayout",R,N,V_ratingBadgeLayout
borderRadii
T{TVCornerRadii=dddd},N,V_borderRadii
darkHighlightColor
T@"UIColor",&,N,V_darkHighlightColor
headerImagePadding
T{UIEdgeInsets=dddd},R,N,V_headerImagePadding
layoutType
Tq,R,N,V_layoutType
VUIJSMediaEntity: parseIdentifier: Unable to parse identifier - %@
%@|%@|%llu
%@|%@|%@|%llu
%@|%llu
Unexpected collection type: %@
Unexpected subtype: %@
mediaEntity
%llu
Unable to create a media entity type! (%@, %@, %@)
T@"VUIJSMediaEntityType",R,N
T@"NSString",R,C,N
T@"VUIJSMediaEntityType",&,N,V_type
T@"MPMediaEntity",&,N,V_mediaEntity
loadingLabel
T@"VUILabel",&,N,V_loadingLabel
indicatorView
T@"UIActivityIndicatorView",&,N,V_indicatorView
ITunesVideoPurchaseResolution
VUIRestrictionsDidChangeNotification
VUIPreferredVideoFormatDidChangeNotification
%@-%@
-[VUISettingsManager init] not supported, use +sharedInstance instead
restrictions
preferredVideoFormat
T@"NSString",C,N,V_preferredVideoFormat
maxMovieRank
T@"NSNumber",C,N,V_maxMovieRank
maxTVShowRank
T@"NSNumber",C,N,V_maxTVShowRank
layout
T@"VUIOfferLayout",&,N,V_layout
imageView
T@"_TVImageView",&,N,V_imageView
appIconView
T@"_TVImageView",&,N,V_appIconView
channelNameLabel
T@"VUILabel",&,N,V_channelNameLabel
subtitleLabel
T@"VUILabel",&,N,V_subtitleLabel
textLabel
T@"VUILabel",&,N,V_textLabel
T@"UIView",&,N,V_badgeView
tagsView
T@"VUIMediaTagsView",&,N,V_tagsView
versionsButton
T@"VUIButton",&,N,V_versionsButton
channelImageBackgroundView
T@"UIView",&,N,V_channelImageBackgroundView
TB,N,V_isEntitled
Default
defaultLogObject
T@"NSObject<OS_os_log>",&,N,V_defaultLogObject
mediaControllerPlaybackDelay
VUIMediaControllerForegroundStateDidChangeNotification
VUIMediaControllerWillStartPlaybackNotification
VUIMediaControllerDidStartPlaybackNotification
VUIMediaControllerWillStopPlaybackNotification
VUIMediaControllerDidStopPlaybackNotification
VUIMediaControllerIsForegroundedKey
VUIMediaControllerIsAutomaticPlaybackStartKey
VUIMediaControllerPlaybackStartReasonKey
VUIMediaControllerIsAutomaticPlaybackStopKey
VUIMediaControllerPlaybackStopReasonKey
Not doing anything
Loading image
Showing image
Waiting for player to start loading
Loading playlist
Showing playback in background
Showing playback in foreground
Finsihed playback
Media controller waiting for timeout while paused
Set image
Load image
Show image
Set playlist
MLoad playlist
Show playback
Player state changed
Transition to foreground
Transition background
Playback error occurred
Finished playback
Play
Replay
Pause
Stop
Restore avPlayerViewController
PlaylistKey
ImageProxyKey
AnimatedKey
PlaybackStateKey
generic media controller
%@(%ld)
v56@?0@"TVPStateMachine"8@"NSString"16@"NSString"24@"NSString"32@40@"NSDictionary"48
-[VUIMediaController viewWillDisappear:]
(%@)
avPlayer
v16@?0@"NSTimer"8
v20@?0@"TVPPlaylist"8B16
v16@?0@"TVPPlaylist"8
v28@?0@"TVImage"8@"NSError"16B24
v24@?0@"TVImageProxy"8@?<v@?B>16
@"NSString"40@?0@"TVPStateMachine"8@"NSString"16@24@"NSDictionary"32
Media controller finished background playback.
Media controller foregrounded
Media controller backgrounded
playbackEnabled
TB,N,GisPlaybackEnabled
showsVideoControls
mediaInfo
T@"TVMediaInfo",C,N
T@"<TVMediaControllerDelegate>",W,N
Tq,R,N
shouldZoomWhenTransitioningToBackground
coverImage
T@"UIImage",R,N
proxyImageView
T@"_TVImageView",&,N,V_proxyImageView
currentImageProxy
T@"TVImageProxy",&,N,V_currentImageProxy
playbackContainerController
T@"UIViewController",&,N,V_playbackContainerController
playbackLoadingStartDate
T@"NSDate",&,N,V_playbackLoadingStartDate
playbackLoadingTimer
T@"NSTimer",W,N,V_playbackLoadingTimer
stateMachine
T@"TVPStateMachine",&,N,V_stateMachine
pendingPlaylist
T@"TVPPlaylist",&,N,V_pendingPlaylist
pendingImageProxy
T@"TVImageProxy",&,N,V_pendingImageProxy
playerReadyToBePlayed
TB,N,GisPlayerReadyToBePlayed,V_playerReadyToBePlayed
imageAnimationOptions
TQ,N,V_imageAnimationOptions
imageAnimationDuration
Td,N,V_imageAnimationDuration
imageTransitionInterval
Td,N,V_imageTransitionInterval
shouldAnimateOverlayView
TB,N,V_shouldAnimateOverlayView
overlayViewDisplayDuration
Td,N,V_overlayViewDisplayDuration
doesDelegateRespondToShowStill
TB,N,V_doesDelegateRespondToShowStill
doesDelegateRespondToStateChange
TB,N,V_doesDelegateRespondToStateChange
playbackStopReason
Tq,N,V_playbackStopReason
secondaryVideoView
T@"TVPVideoView",&,N,V_secondaryVideoView
pauseStateTimeoutTimer
T@"NSTimer",W,N,V_pauseStateTimeoutTimer
automaticPlaybackStart
TB,N,GisAutomaticPlaybackStart,V_automaticPlaybackStart
vpafPlaybackStartReason
TQ,N,V_vpafPlaybackStartReason
automaticPlaybackStop
TB,N,GisAutomaticPlaybackStop,V_automaticPlaybackStop
vpafPlaybackStopReason
TQ,N,V_vpafPlaybackStopReason
shouldPlayAfterAppBecomesActive
TB,N,V_shouldPlayAfterAppBecomesActive
backgrounded
TB,R,N,GisBackgrounded
didWeCreatePlayer
TB,N,V_didWeCreatePlayer
titleForLogging
T@"NSString",C,N,V_titleForLogging
T@"NSObject<TVPAVFPlayback>",&,N,V_player
avPlayerViewController
T@"AVPlayerViewController",&,N,V_avPlayerViewController
T@"TVMediaInfo",C,N,V_mediaInfo
T@"<TVMediaControllerDelegate>",W,N,V_delegate
allowsSkipping
TB,N,V_allowsSkipping
TB,N,V_shouldZoomWhenTransitioningToBackground
name
T@"NSString",R,C,N,V_name
TB,N,GisPlaybackEnabled,V_playbackEnabled
stopPlayerWhenViewDisappears
TB,N,GshouldStopPlayerWhenViewDisappears,V_stopPlayerWhenViewDisappears
clearPreviousImageBeforeLoading
TB,N,V_clearPreviousImageBeforeLoading
popWhenPlayerStops
TB,N,V_popWhenPlayerStops
restoringAVPlayerController
TB,N,GisRestoringAVPlayerController,V_restoringAVPlayerController
stopWhenAnotherMediaControllerStarts
TB,N,GshouldStopWhenAnotherMediaControllerStarts,V_stopWhenAnotherMediaControllerStarts
appImageLayout
T@"TVImageLayout",&,N,V_appImageLayout
logoImageLayout
T@"TVImageLayout",&,N,V_logoImageLayout
progressBarLayout
T@"VUIProgressBarLayout",&,N,V_progressBarLayout
badgeLayout
T@"TVImageLayout",&,N,V_badgeLayout
T@"VUITextLayout",&,N,V_titleLayout
subtitleLayout
T@"VUITextLayout",&,N,V_subtitleLayout
textBadgeLayout
T@"VUITextBadgeLayout",&,N,V_textBadgeLayout
NOW_PLAYING_STILL_WATCHING_MESSAGE
CONTINUE_WATCHING
v16@?0@"UIAlertAction"8
BACK
timeoutInterval
Td,N,V_timeoutInterval
v16@?0@"<UIViewControllerTransitionCoordinatorContext>"8
stackView
T@"VUILibraryStackView",R,N,V_stackView
stackCollectionView
T@"UICollectionView",R,N,V_stackCollectionView
localizedRating
localizedReason
ratingLevel
ratingProvider
cast
screenwriters
directors
producers
Unexpected MPMediaItem type passed to -initWithMediaLibrary:mediaItem:requestedProperties:
@"NSOrderedSet"16@?0@"NSArray"8
%llu_%@_%@
vui_mediaEntityType
T@"VUIMediaEntityType",R,N
vui_resolution
T@"NSNumber",R,N
vui_colorCapability
vui_audioCapability
vui_HLSResolution
vui_HLSColorCapability
vui_HLSAudioCapability
vui_coverArtImageIdentifier
vui_previewFrameImageIdentifier
vui_showIdentifier
T@"NSObject<VUIMediaEntityIdentifier>",R,N
vui_seasonIdentifier
vui_studio
vui_credits
T@"VUIMediaItemCredits",R,N
vui_contentRating
T@"_TVContentRating",R,N
vui_isLocal
vui_isPlayable
vui_extrasURL
T@"NSURL",R,N
vui_playedState
vui_rentalEndDate
T@"NSDate",R,N
vui_rentalPlaybackEndDate
vui_rentalExpirationDate
vui_assetType
v40@?0@"NSDictionary"8{_NSRange=QQ}16^B32
textStyle
Tq,N,V_textStyle
maximumContentSizeCategory
T@"NSString",&,N,V_maximumContentSizeCategory
fontFamily
T@"NSString",&,N,V_fontFamily
fontWeight
Tq,N,V_fontWeight
fontSize
Td,N,V_fontSize
fontTraits
TI,N,V_fontTraits
fontFeature
Tq,N,V_fontFeature
margin
T{UIEdgeInsets=dddd},N,V_margin
color
T@"UIColor",&,N,V_color
darkColor
T@"UIColor",&,N,V_darkColor
highlightOrSelectedColor
T@"UIColor",&,N,V_highlightOrSelectedColor
darkHighlightOrSelectedColor
T@"UIColor",&,N,V_darkHighlightOrSelectedColor
seeMoreTextColor
T@"UIColor",&,N,V_seeMoreTextColor
darkSeeMoreTextColor
T@"UIColor",&,N,V_darkSeeMoreTextColor
textTransform
Tq,N,V_textTransform
alignment
Tq,N,V_alignment
numberOfLines
TQ,N,V_numberOfLines
numberOfLinesAXSmall
TQ,N,V_numberOfLinesAXSmall
numberOfLinesAXLarge
TQ,N,V_numberOfLinesAXLarge
minimumScaleFactor
Td,N,V_minimumScaleFactor
shadow
T@"NSShadow",&,N,V_shadow
letterSpacing
T@"NSNumber",&,N,V_letterSpacing
lineBreakMode
Tq,N,V_lineBreakMode
blendMode
Ti,N,V_blendMode
alwaysFocusable
TB,N,V_alwaysFocusable
Unknown
BackgroundTrailer
UpNext
PostPlay
AnotherPlaybackStarted
TimedOutWhilePaused
EnableDebugUI
EnableMetricsLogging
EnableMetricsExpandedLogging
EnableDemoMode
debugUIEnabled
TB,N,V_debugUIEnabled
metricsLoggingEnabled
TB,N,V_metricsLoggingEnabled
metricsExpandedLoggingEnabled
TB,N,V_metricsExpandedLoggingEnabled
enableDemoMode
TB,N,V_enableDemoMode
VUIAuthenticationManagerAccountStoreDidChangeNotification
v24@?0@"SSAuthenticateResponse"8@"NSError"16
_authRequest
T@"SSAuthenticateRequest",&,N,V__authRequest
_isObservingAccountStoreChange
TB,N,V__isObservingAccountStoreChange
documentDataSources
actionDataSource
tabIdentifier
actionFirst
localLibraryDataSource
nativePageSource
T@"NSArray",C,N,V_documentDataSources
action
T@"VUIAction",&,N,V_action
T@"NSString",&,N,V_tabIdentifier
localLibraryLink
T@"NSDictionary",C,N,V_localLibraryLink
nativePageName
T@"NSString",&,N,V_nativePageName
TB,N,V_actionFirst
@24@?0@"VUIiTunesKeyValueStoreSyncItem"8Q16
domain
conflict-detection
kvs-sync
VUISYNCKVS
#T:[%@%p] #Error #%@ : Got response from kvs-sync: %@ 
Main:
#T:[%@%p] #Error #%@ : kvs-sync response status is %@ 
rejected
put-ok
peer-ops
puts
v32@?0@"NSURLResponse"8@"NSDictionary"16@"NSError"24
T@"NSString",R,N,V_key
T@"NSData",R,N,V_value
success
TB,R,N,V_success
domainVersion
T@"NSString",R,N,V_domainVersion
peerPutItems
T@"NSArray",R,N,V_peerPutItems
putOKKeys
T@"NSArray",R,N,V_putOKKeys
rejectedKeys
T@"NSArray",R,N,V_rejectedKeys
none
baseVersion
appVersion
clientId
cookies
dsId
eventTime
experimentId
hostApp
hostAppVersion
mescalStatus
osVersion
pixelRatio
postTime
screenHeight
screenWidth
storeFrontHeader
storeFront
isSignedIn
timezoneOffset
topic
userAgent
eventType
pageContext
pageType
pageId
pageUrl
pageDetails
page
xpPostFrequency
xpSendMethod
clientCorrelationKey
windowInnerHeight
windowInnerWidth
resourceRevNum
language
xpVersionMetricsKit
environmentDataCenter
xpViewablePercentage
Time
timingTerms
T@"NSSet",R,N
baseTerms
commonTerms
mutableCommonTerms
T@"NSMutableSet",&,N,V_mutableCommonTerms
mutableTimingTerms
T@"NSMutableSet",&,N,V_mutableTimingTerms
whitelistedTerms
blacklistedTerms
None
Season
Show
defaultsSwitch
T@"UISwitch",&,N,V_defaultsSwitch
textField
T@"UITextField",&,N,V_textField
defaults
T@"VUIDebugViewDefaults",&,N,V_defaults
list-chevron
accessoryView
T@"UIImageView",&,N,V_accessoryView
onVideoSubscriberAccountChanged
wlAccountChannels
providerId
providedAppTitles
providerInfo
v16@?0@"VSAccountChannels"8
accountStore
T@"VSAccountStore",&,N,V_accountStore
imageLoadOperation
T@"NSOperation<VUIImageLoadingOperation>",&,N,V_imageLoadOperation
requestCount
TQ,N,V_requestCount
object
The %@ parameter must be an instance of %@
requestToken
[VUIAsynchronousWorkToken class]
Subclasses must override _imageLoaderIdentifier and not call super
Subclasses must override _imageLoadParamsForImageLoaderObject and not call super
Subclasses must override _imageLoadOperationWithParams and not call super
%lux%lu
crop
imageLoadContextsByImageIdentifier
T@"NSMutableDictionary",&,N,V_imageLoadContextsByImageIdentifier
imageLoadOperationQueue
T@"NSOperationQueue",&,N,V_imageLoadOperationQueue
jsPropertyStrings
T@"NSSet",R,N,Gwlk_jsPropertyStrings
SFRounded
NSCTFontUIFontDesignRounded
T@"UILabel",&,N,V_titleLabel
floatingView
T@"_UIFloatingContentView",&,N,V_floatingView
T@"NSString",&,N,V_title
shouldAppearSelected
TB,N,V_shouldAppearSelected
sortAsName
propertyType
propertyValueClassName
allowsDefaultValue
defaultValue
sourcePropertyNames
retrievesSourcePropertiesAtFetch
sourceSupportsFiltering
sourceFilterValueBlock
sourceFilterBlock
Property value class names cannot be derived for object based attributes
T@"NSString",C,N,V_name
T@"NSString",C,N,V_sortAsName
TQ,N,V_propertyType
T@"NSString",C,N,V_propertyValueClassName
T@,&,N,V_defaultValue
TB,N,V_allowsDefaultValue
T@"NSSet",C,N,V_sourcePropertyNames
TB,N,V_retrievesSourcePropertiesAtFetch
TB,N,V_sourceSupportsFiltering
T@?,C,N,V_sourceFilterValueBlock
T@?,C,N,V_sourceFilterBlock
SEASON_%@
cellWidth
Td,N,V_cellWidth
cellSize
T{CGSize=dd},N,V_cellSize
episodes
T@"NSArray",&,N,V_episodes
lastFocusedIndexPath
T@"NSIndexPath",&,N,V_lastFocusedIndexPath
shelfTitleView
T@"UIView",&,N,V_shelfTitleView
seasonVisualEffectLabel
T@"VUIVisualEffectLabel",&,N,V_seasonVisualEffectLabel
T@"VUIMediaCollection",&,N,V_season
sizingCell
T@"VUITVLibraryEpisodeListCell",&,N,V_sizingCell
CardShadowFocused
shadowView
T@"UIView",&,N,V_shadowView
shadowAlpha
Td,N,V_shadowAlpha
shadowCardSize
T{CGSize=dd},N,V_shadowCardSize
shadowCardImage
T@"UIImage",&,N,V_shadowCardImage
routerDataSource
dataDictionary
T@"NSDictionary",C,N,V_dataDictionary
T@"VUIRouterDataSource",&,N,V_routerDataSource
VUIPlayHistoryUpdatedNotification
-[VUIMarkAsWatchedRequestManager init] not supported, use +sharedInstance instead
ongoingItemIDOperationDictionary
T@"NSMutableDictionary",&,N,V_ongoingItemIDOperationDictionary
VUIGridLockupCellReuseIdentifier
v16@?0@"VUICollectionChangeSet"8
T@"VUITVLockupViewCell",&,N,V_sizingCell
currentlySelectedMediaEntity
T@"VUIMediaEntity",&,N,V_currentlySelectedMediaEntity
gridStyle
Tq,N,V_gridStyle
T@"VUICollectionView",&,N,V_collectionView
indexPathForLastFocusedItem
T@"NSIndexPath",&,N,V_indexPathForLastFocusedItem
artworkInfoDictionary
T@"NSDictionary",&,N,V_artworkInfoDictionary
maskProperties
T@"VUIGradientMaskProperties",&,N,V_maskProperties
gridCollectionViewControllerDelegate
T@"<VUITVGridCollectionViewControllerDelegate>",W,N,V_gridCollectionViewControllerDelegate
T@"NSString",&,N,V_pageType
layoutFactory
T@"VUICardViewLayoutFactory",R,N,V_layoutFactory
imageSize
T{CGSize=dd},N,V_imageSize
appImageView
T@"_TVImageView",&,N,V_appImageView
labelViews
T@"NSArray",C,N,V_labelViews
overlayView
T@"UIView",&,N,V_overlayView
button
T@"VUIButton",&,N,V_button
debugString
T@"NSString",C,N,V_debugString
mediaPlayer
onDataSourceDidChange
onDataSourceWillChange
onIsUpdateInProgressChanged
onMediaLibraryChanged
onSyncGenerationChanged
addedAfter
additionalProperties
limit
sortKeys
storeIdentifier
homeVideos
movies
onItemsChanged
added
removed
childItems
image
itemIdentifier
playState
missing-artwork
missing-item
width
height
configuration-error
progress
com.apple.watchlist.js.mediaplayer
com.apple.watchlist.js.mediaplayer,work
mediaType
persistentID
v16@?0@"UIImage"8
v12@?0f8
v32@?0@"MPMediaItem"8Q16^B24
com.apple.tv
VUIJSMediaPlayer
queryDataSource
T@"MPUQueryDataSource",&,N,V_queryDataSource
orderedItemsMap
T@"VUIOrderedItemsMap",&,N,V_orderedItemsMap
fetchOperationQueue
T@"NSOperationQueue",&,N,V_fetchOperationQueue
fetchCompletionOperationQueue
T@"NSOperationQueue",&,N,V_fetchCompletionOperationQueue
Paused
downloadProgress
bytesToDownload
bytesDownloaded
isDownloadInProgress
supportsCancellation
supportsPausing
TQ,N,V_status
Td,N,V_downloadProgress
TB,N,V_supportsCancellation
TB,N,V_supportsPausing
TQ,N,V_bytesToDownload
TQ,N,V_bytesDownloaded
downloadInProgress
TB,R,N,GisDownloadInProgress
EXPIRED
DAYS_LEFT_PLURAL
HOURS_LEFT_PLURAL
HOURS_LEFT_SINGULAR
MINUTES_LEFT_PLURAL
MINUTES_LEFT_SINGULAR
formatString
T@"NSString",C,N,V_formatString
expiryUpdateTimer
T@"NSTimer",&,N,V_expiryUpdateTimer
expirationDate
T@"NSDate",C,N,V_expirationDate
T@"<VUIRentalExpirationLabelDelegate>",W,N,V_delegate
VUIUpNextRequestDidFinishNotification
-[VUIUpNextRequestManager init] not supported, use +sharedInstance instead
upNextConfirmation
TV.Hud.AddedToUpNext
UP_NEXT_HUD_REMOVE_TEXT
ongoingCanonicalIDOperationDictionary
T@"NSMutableDictionary",&,N,V_ongoingCanonicalIDOperationDictionary
Lorem
T@"UIView",&,N,V_separatorView
animatedTitleLabel
T@"_TVAnimatedLabel",&,N,V_animatedTitleLabel
floatingContentView
T@"VUIEpisodeLockupFloatingContentView",&,N,V_floatingContentView
dataContentView
T@"UIView",&,N,V_dataContentView
T@"VUITVEpisodeInformationLayout",&,N,V_layout
episodeLabel
T@"VUILabel",&,N,V_episodeLabel
descriptionLabel
T@"VUILabel",&,N,V_descriptionLabel
metadataView
T@"VUIMediaTagsView",&,N,V_metadataView
TQ,N,V_state
universal
contentRatingsBySystem
subtitle
appsApple
-init is not supported. Use -initWithChannel: title: message: placeholder:
APP_INSTALL_ACTION_TITLE_DONE
APP_INSTALL_ACTION_TITLE_INSTALLING
APP_INSTALL_ACTION_TITLE_CLOSE
TVApp.appInstall
caller
VUIAppInstallConfirmationViewController - lockup lookup failed: %@
APP_INSTALL_OFFERS_IN_APP_PURCHASES
v24@?0@"SSLookupResponse"8@"NSError"16
barButtonItem
T@"UIBarButtonItem",&,N,V_barButtonItem
confirmationView
T@"VUIAppInstallConfirmationView",&,N,V_confirmationView
cancelationHandler
T@?,C,N,V_cancelationHandler
actionHandler
T@?,C,N,V_actionHandler
appStoreHandler
T@?,C,N,V_appStoreHandler
T@"UIButton",R,N
T@"VUIAppInstallLockup",R,N
disableLocalAsset
T@"VUILabel",R,N,V_titleLabel
T@"VUILabel",R,N,V_subtitleLabel
loading
TB,N,V_loading
detail
cachedKeysOrder
T@"NSDictionary",&,N,V_cachedKeysOrder
array
T@"NSArray",&,N,V_array
@"UIViewController"16@?0@"UIViewController"8
seasons
T@"NSArray",&,N,V_seasons
VUINowPlayingMetadataArtworkURLString
VUINowPlayingMetadataArtworkImageProxy
VUINowPlayingMetadataButtonsMetadata
VUINowPlayingMetadataButtonImage
ageRatingBadge
T@"VUITextBadge",&,N,V_ageRatingBadge
ageRatingLabel
T@"UILabel",&,N,V_ageRatingLabel
icon
T@"UIImage",&,N,V_icon
ageRating
T@"NSString",C,N,V_ageRating
T@"NSString",C,N,V_iAP
T@"NSString",C,N,V_subtitle
installView
T@"VUIAppInstallView",R,N
metadataStackView
T@"UIStackView",&,N,V_metadataStackView
canFocus
TB,N,V_canFocus
mediaEntityType
T@"VUIMediaEntityType",R,C,N
T@"NSNumber",C,N,V_persistentID
T@"VUIMediaEntityType",C,N,V_mediaEntityType
v24@?0@"NSURL"8@"NSError"16
T@"TVApplicationController",&,N,V_applicationController
bootURLController
T@"VUIBootURLController",&,N,V_bootURLController
navigationController
T@"UINavigationController",&,N,V_navigationController
com.apple.videos.tvshows.shared.purchase
com.apple.videos.movies.shared.purchase
localPath
skipIntroStart
skipIntroDuration
skipIntroTarget
ratingAdvisoryInfo
TVPMediaItemMetadata
v32@?0@"NSString"8@16^B24
/var/mobile/Media/PlaybackOverrides.plist
overrides
urlToOverride
adamIDToOverride
tvpPlaylist
T@"TVPPlaylist",&,N,V_tvpPlaylist
overridesStartTimeWithResumeTime
TB,N,V_overridesStartTimeWithResumeTime
playbackStartReason
TQ,N,V_playbackStartReason
hasProgress
TB,R,N,V_hasProgress
showsSecondaryVideoView
TB,N,V_showsSecondaryVideoView
TQ,N,V_playbackStopReason
restrictionsAlreadyUnlocked
TB,N,V_restrictionsAlreadyUnlocked
shouldDelayLoadingImage
TB,N,V_shouldDelayLoadingImage
allowsPictureInPicture
TB,N,V_allowsPictureInPicture
playbackDelayInterval
Td,N,V_playbackDelayInterval
dataViews
T@"NSArray",&,N,V_dataViews
T@"VUIProductMetadataLayout",&,N,V_layout
overallLength
audioLocale
closedCaptionLocale
subtitleLocale
isOffline
playbackFocus
foreground
background
streaming
downloading
downloaded
videoColorRange
Dolby Vision
featureCanonicalId
featureReferenceId
featureExternalId
serviceId
assetId
featureAssetId
canonicalShowId
canonicalSeasonId
sensitiveContentType
adult
programmingType
videoOnDemand
assetPlacement
feature
unknown
preroll
midroll
postroll
isSkippable
removedCanonicalIDs
T@"NSSet",C,N,V_removedCanonicalIDs
Unexpected type passed to -initWithIdentifier:type:
The delayInSeconds parameter must be greater than 0
delayInSeconds
TQ,N,V_delayInSeconds
previewImageData
fallbackImageData
baseUrl
B24@?0@8@"NSDictionary"16
geoLocationEnforced
TB,N,V_geoLocationEnforced
com.apple.videosui.VUIMediaLibraryFetchControllerQueue.serialProcessingQueue
v16@?0@"VUIMediaLibraryFetchControllerQueue"8
mutableFetchControllers
T@"NSMutableArray",&,N,V_mutableFetchControllers
paused
TB,N,GisPaused,V_paused
shouldFetchOnResume
TB,N,V_shouldFetchOnResume
currentFetchOperation
T@"VUIMediaLibraryFetchControllerQueueOperation",&,N,V_currentFetchOperation
delayContentsChangeOperation
T@"VUIDelayOperation",&,N,V_delayContentsChangeOperation
serialFetchOperationQueue
T@"NSOperationQueue",&,N,V_serialFetchOperationQueue
nowPlayingObserver
T@"VUINowPlayingObserver",&,N,V_nowPlayingObserver
T@"<VUIMediaLibraryFetchControllerQueueDelegate>",W,N,V_delegate
idType
impressionId
impressionIndex
impressionParentId
impressionType
mainValues
T@"NSDictionary",&,N,V_mainValues
otherValues
T@"NSDictionary",&,N,V_otherValues
orderedOtherKeys
T@"NSArray",&,N,V_orderedOtherKeys
parentId
v32@?0@"VUIProductSectionInfoViewModel"8Q16^B24
defaultFocusView
T@"UIView",&,N,V_defaultFocusView
prototypeInfoHeaderLabel
T@"VUILabel",&,N,V_prototypeInfoHeaderLabel
T@"VUILabel",&,N,V_headerView
infoViews
T@"NSArray",&,N,V_infoViews
footerView
T@"UIView",&,N,V_footerView
body
footer
account
shouldDenyOnCancel
suppressWelcomeVideoAddOnOptIn
NewVPPAConsentPrompt
requireVPPAStateUpdate
VUIAccessErrorDomain
VUIAccessViewControllerInitException
-init not supported. Use -initWithCompletionHandler:
VUIAccessViewController: Error -- no channel for %@
VUIAccessViewController: failed to sync settings after user gave consent. Prompt alert.
VUIAccessViewController: deny access for %@
VUIAccessViewController: failed to sync settings after user declined consent. Failing silently
VUIAccessViewController: re-routing menu gesture to dismiss.
ACCESS_MAIN_TITLE_PLURAL
ACCESS_MAIN_TITLE_PLURAL_RETURNING
ACCESS_MAIN_TITLE_FORMAT
ACCESS_MAIN_TITLE_FORMAT_RETURNING
ACCESS_DENY_FINAL
ACCESS_BODY_FORMAT_PLURAL_TV
ACCESS_BODY_FORMAT_PLURAL_RETURNING_TV
ACCESS_BODY_FORMAT_TV
ACCESS_BODY_FORMAT_RETURNING_TV
ACCESS_BODY_PLURAL
ACCESS_BODY_PLURAL_RETURNING
ACCESS_BODY
ACCESS_BODY_RETURNING
AccessUnknownErrorTitle
AccessUnknownErrorMessage
AccessUnknownErrorButton
com.apple.TVAccessViewService
VUIAccessViewController: failed to sync settings from cloud
VUIAccessViewController: grant access for %@
VUIAccessViewController: Opting user in.
VUIAccessViewController - resolveBundleIDs: proposed IDs: %@
VUIAccessViewController - handling error: %@
VUIAccessViewController - resolveBundleIDs: Error, failed to sync settings
VUIAccessViewController - resolveBundleIDs: Error, no channels
VUIAccessViewController - resolved bundles: %@
v24@?0@"WLKServerConfigurationResponse"8@"NSError"16
id: 
Impression Id: 
Index: 
Parent: 
nameLabel
T@"VUILabel",&,N,V_nameLabel
typeLabel
T@"VUILabel",&,N,V_typeLabel
staticIDLabel
T@"VUILabel",&,N,V_staticIDLabel
idLabel
T@"VUILabel",&,N,V_idLabel
idTypeLabel
T@"VUILabel",&,N,V_idTypeLabel
staticImpressionIdLabel
T@"VUILabel",&,N,V_staticImpressionIdLabel
impressionIdLabel
T@"VUILabel",&,N,V_impressionIdLabel
staticImpressionIndexLabel
T@"VUILabel",&,N,V_staticImpressionIndexLabel
impressionIndexLabel
T@"VUILabel",&,N,V_impressionIndexLabel
staticImpressionParentLabel
T@"VUILabel",&,N,V_staticImpressionParentLabel
impressionParentIdLabel
T@"VUILabel",&,N,V_impressionParentIdLabel
impressionParentNameLabel
T@"VUILabel",&,N,V_impressionParentNameLabel
T@"NSString",C,N
idStr
impressionParentName
CANT_DOWNLOAD_ON_CELLULAR_NETWORK_ERROR_TITLE
wapi
CANT_DOWNLOAD_ON_WLAN_NETWORK_ERROR_DESCRIPTION
CANT_DOWNLOAD_ON_CELLULAR_NETWORK_ERROR_DESCRIPTION
CONNECT_TO_WLAN_TO_PLAYBACK_ERROR_MESSAGE_EPISODE
CONNECT_TO_WIFI_TO_PLAYBACK_ERROR_MESSAGE_EPISODE
CONNECT_TO_WLAN_TO_PLAYBACK_ERROR_MESSAGE_MOVIE
CONNECT_TO_WIFI_TO_PLAYBACK_ERROR_MESSAGE_MOVIE
CANT_PLAYBACK_OVER_WLAN_ERROR_TITLE
CANT_PLAYBACK_OVER_CELLULAR_NETWORK_ERROR_TITLE
CELLULAR_DATA_DISABLED_ERROR_TITLE
SETTINGS
WATCH_RENTAL_IN_HD_TITLE_FORMAT
WATCH_RENTAL_IN_HD_DESCRIPTION
WATCH
WATCH_IN_SD
CANCEL
RENTAL_PLAYBACK_WINDOW_WARNING_TITLE_FORMAT
RENTAL_PLAYBACK_WINDOW_WARNING_MESSAGE
PLAY
product browser media controller
transitionAnimationEnabled
TB,N,GisTransitionAnimationEnabled,V_transitionAnimationEnabled
sportingEventId
leagueContext
scoreboard
scores
didCalculatedSize
TB,N,V_didCalculatedSize
scorecardSize
T{CGSize=dd},N,V_scorecardSize
interitemSpacing
Td,N,V_interitemSpacing
rowScoreValueSizes
T@"NSArray",&,N,V_rowScoreValueSizes
columnWidths
T@"NSArray",&,N,V_columnWidths
rowHeights
T@"NSArray",&,N,V_rowHeights
darkMaterialImage
T@"UIImage",&,N,V_darkMaterialImage
delegateRespondsToBackgroundImageForScorecardViewMaterial
TB,N,V_delegateRespondsToBackgroundImageForScorecardViewMaterial
delegateRespondsToBackgroundBlendModeForScoreValueInRowAtIndex
TB,N,V_delegateRespondsToBackgroundBlendModeForScoreValueInRowAtIndex
T@"<VUIScorecardViewDelegate>",W,N,V_delegate
scoreboardLayout
T@"VUIScoreboardLayout",&,N,V_scoreboardLayout
T@"NSString",R,N,V_canonicalId
T@"NSDictionary",R,N,V_leagueContext
T@"NSArray",R,N,V_scores
showScoreboard
TB,R,N,V_showScoreboard
assetType
seasonTitle
seasonIdentifier
hasBeenPlayed
playCount
bookmark
downloadExpirationDate
creationDate
modifiedDate
lastPlayedDate
mediaPlayerMediaItem
T@"MPMediaItem",R,N
T@"NSNumber",R,C,N
T@"NSNumber",R,C,N,V_isPlayable
T@"NSURL",R,C,N
T@"NSObject<VUIMediaEntityIdentifier>",R,C,N
T@"VUIMediaItemCredits",R,C,N
T@"NSDate",R,C,N
T@"NSNumber",C,N
com.apple.videosui.VUIAirTrafficController.ATConnection
connectionQueue
T@"NSObject<OS_dispatch_queue>",&,N,V_connectionQueue
observers
T@"NSMutableSet",&,N,V_observers
cardView
T@"VUIFeedbackView",&,N,V_cardView
showInfo.
ATVBookmarkServiceUpdatedNotification
VUIBookmarkWillUpdateNotification
BOOKMARKS
hasBeenRented
markedAsUnwatched
timestamp
bookmarkKey
T@"VUIBookmarkKey",&,N,V_bookmarkKey
uppRecord
T@"VUIUniversalPlaybackPositionRecord",&,N,V_uppRecord
VUIBookmarkService
com.apple.ATVBookmarkServiceUpdateQueue
tv-show
extras-movie
%@%@.%@
#T:[%@%p] #Error #%@ : Cannot save bookmark with nil key. bookmark=%@, identifier=%@ 
v32@?0@"NSString"8@"VUIBookmark"16^B24
dateOfLastSyncCompletion
T@"NSDate",&,N,V_dateOfLastSyncCompletion
numSyncsInProgress
TQ,N,V_numSyncsInProgress
syncInProgress
TB,N,V_syncInProgress
syncHasFinishedRecently
cardInsets
Td,N,V_cardInsets
cardUIEnabled
TB,N,V_cardUIEnabled
B24@?0@"VUIButton"8@"NSDictionary"16
bannerView
T@"VUIProductBannerView",&,N,V_bannerView
delay
overlayType
Tq,N,V_overlayType
button-play
itunes-extras-badge
PreloadAsset-Generic16x9
PreloadAsset-Dark-Generic16x9
urlBag
code
Array
Bool
Double
Integer
String
Dictionary
v28@?0@"NSArray"8B16@"NSError"20
v28@?0@"NSNumber"8B16@"NSError"20
v28@?0@"NSString"8B16@"NSError"20
v28@?0@"NSURL"8B16@"NSError"20
v28@?0@"NSDictionary"8B16@"NSError"20
error is nil
VUIAMSBagValueTypes
T@"NSDictionary",R,N
hasShownWelcomeScreen
VUIPlistMediaDatabaseContentsDidChangeNotification
com.apple.videosui.VUIPlistMediaDatabase.serialDispatchQueue
An entity must have an identifier to be added to the library
A show identifier must be provided to add a season to the library
A show identifier must be provided to add an episode to the library
A season identifier must be provided to add an episode to the library
v32@?0@"NSString"8@"VUIPlistMediaDatabaseShow"16^B24
v32@?0@"NSString"8@"VUIPlistMediaDatabaseItem"16^B24
fileURL
T@"NSURL",C,N,V_fileURL
serialDispatchQueue
T@"NSObject<OS_dispatch_queue>",&,N,V_serialDispatchQueue
databaseFileDispatchSource
T@"NSObject<OS_dispatch_source>",&,N,V_databaseFileDispatchSource
homeVideoByIdentifier
T@"NSMutableDictionary",&,N,V_homeVideoByIdentifier
movieByIdentifier
T@"NSMutableDictionary",&,N,V_movieByIdentifier
movieRentalByIdentifier
T@"NSMutableDictionary",&,N,V_movieRentalByIdentifier
showByIdentifier
T@"NSMutableDictionary",&,N,V_showByIdentifier
T@"NSArray",R,N
movieRentals
shows
labelName
T@"NSString",C,N,V_labelName
appIconLayout
T@"TVImageLayout",&,N,V_appIconLayout
logoLayout
T@"TVImageLayout",&,N,V_logoLayout
channelNameTextLayout
T@"VUITextLayout",&,N,V_channelNameTextLayout
T@"VUITextLayout",&,N,V_titleTextLayout
subtitleTextLayout
T@"VUITextLayout",&,N,V_subtitleTextLayout
focusedTextLayout
T@"VUITextLayout",&,N,V_focusedTextLayout
tagsLayout
T@"VUIMediaTagsViewLayout",&,N,V_tagsLayout
versionsButtonLayout
T@"VUIButtonLayout",&,N,V_versionsButtonLayout
borderWidth
Td,N,V_borderWidth
borderColor
T@"UIColor",&,N,V_borderColor
addedEntityIDs
removedEntityIDs
T@"NSSet",C,N,V_addedEntityIDs
T@"NSSet",C,N,V_removedEntityIDs
Unsupported comparison (%lu)
Unsupported media entity type (%@)
Invalid season Identifier (%@)
Unsupported operator type (%lu)
VUITVLibraryEpisodeListCell
EPISODE_%@
isFocusWithinCell
TB,N,V_isFocusWithinCell
selectingView
T@"UIView<TVAuxiliaryViewSelecting>",&,N,V_selectingView
imageViewElement
T@"IKViewElement",&,N,V_imageViewElement
informationViewElement
T@"IKViewElement",&,N,V_informationViewElement
press
T@"UIPress",&,N,V_press
T@"UIView",&,N,V_imageView
mediaItem
T@"VUIMediaItem",&,N,V_mediaItem
informationView
T@"VUITVEpisodeInformationView",&,N,V_informationView
T@"<VUITVLibraryEpisodeListCellDelegate>",W,N,V_delegate
T@"UIButton",&,N,V_button
hasIAP
TB,N,V_hasIAP
T@"UIView",&,N,V_stackView
T@"VUIEditorialCellLayout",&,N,V_layout
T@"VUIFavoriteBannerView",&,N,V_bannerView
bannerLayout
T@"VUIFavoriteBannerLayout",&,N,V_bannerLayout
Td,N,V_width
storeDownload
T@"MPStoreDownload",&,N,V_storeDownload
Use [VUINowPlayingViewModel initWithModel] instead
START_PLAYBACK_FROM_BEGINNING
INFO_AND_EXTRAS
MORE_EPISODES
livePlayback
TB,N,GisLivePlayback,V_livePlayback
T@"NSString",C,N,V_showCanonicalID
T@"NSDictionary",&,N,V_metadata
logoImageDownloader
T@"VUIVideoAdvisoryLogoImageDownloader",&,N,V_logoImageDownloader
ratingImage
T@"UIImage",&,N,V_ratingImage
currentMediaATVShow
TB,N,GisCurrentMediaATVShow,V_currentMediaATVShow
currentMediaTitle
autoPlay
TB,R,N,GcanAutoPlay
includesProductPageButton
TB,N,V_includesProductPageButton
autoPlayedEpisodesCount
TQ,N,V_autoPlayedEpisodesCount
revision
TQ,N,V_revision
subscribed
cover-art-url
supports-layered-image
template-url
full-url
full-token
v16@?0@"NSArray"8
T@"VUIUpNextButtonProperties",R,N
T@"VUIUpNextButtonProperties",&,N,V_properties
openUrl
punchoutURLWithoutAssociatedPlayable
T@"NSURL",R,N,V_punchoutURLWithoutAssociatedPlayable
VUIPlistMediaEntityPropertyDidChange
VUIPlistMediaEntityPropertyDidChangePropertyNameKey
VUIPlistMediaEntityPropertyDidChangePropertyValueKey
contentDescription
coverArtURL
T@"NSString",C,N,V_genreTitle
T@"NSString",C,N,V_contentDescription
T@"NSURL",C,N,V_coverArtURL
local
T@"NSNumber",R,C,N,GisLocal
VUIClearFromPlayHistoryRequestDidFinishNotification
VUIRemoveFromPlayHistoryRequestDidFinishNotification
-[VUIRemoveFromPlayHistoryRequestManager init] not supported, use +sharedInstance instead
ongoingDeleteIDOperationDictionary
T@"NSMutableDictionary",&,N,V_ongoingDeleteIDOperationDictionary
SportsInterface
getScores
TB,N,V_success
progressTimer
T@"NSObject<OS_dispatch_source>",&,N,V_progressTimer
progressBlock
T@?,C,N,V_progressBlock
T@"VUICardView",&,N,V_cardView
T@"VUICardViewLayoutFactory",&,N,V_layoutFactory
addedToDate
mediaItemCount
The identifier parameter must conform to VUIMediaEntityIdentifierInternal
q24@?0@"VUIMediaEntityGroup"8@"VUIMediaEntityGroup"16
showIdentifier
showTitle
wlSettings
onSettingsChange
onPreferencesChange
com.apple.onboarding.tvapp
baseURL
protocolVersion
VUIJSSettingsInterface: _handleSettingsDidChange
VUIJSSettingsInterface: firing onSettingsChange callback
fetchReason
fetchResponses
Tq,N,V_fetchReason
T@"NSArray",C,N,V_fetchResponses
wlNetworkInterface
endpoint
headers
httpMethod
queryParameters
timeout
suppressAuthentication
encodeQueryParams
statusCode
onEntitlementsChange
onConfigurationChange
onPlaybackReport
v12@?0i8
VUIJSNetworkInterface - _handleAppLibChange
VUIJSNetworkInterface - _handleAppLibChange - calling JS
VUIJSNetworkInterface - _handleServerConfigChange
VUIJSNetworkInterface - _handleServerConfigChange - notifications are suppressed
VUIJSNetworkInterface - _handleServerConfigChange - calling JS
VUIJSNetworkInterface - Error: Unable to communicate with the remote object proxy (%@)
VUIJSNetworkInterface - calling out to daemon for playback report
VUIJSNetworkInterface - back from daemon for playback report
VUIJSNetworkInterface - no playback report found for ID:%@
v16@?0@"WLKPlaybackSummary"8
com.apple.watchlistd.xpc
VUIJSNetworkInterface - Connection interrupted.
VUIJSNetworkInterface - Connection invalidated.
suppressServerConfigNotifications
TB,V_suppressServerConfigNotifications
VideoURLRouterInterface
getOpenURLRouterDataSource
getOpenURLRouterDataSourceEntity
getOpenURLRouterDataSourceDocumentOnly
T@"NSNumber",C,N,V_seasonNumber
hudModel
T@"VUINowPlayingHudKeys",&,N,V_hudModel
T@"VUINowPlayingHudViewLayout",&,N,V_layout
metaDataView
T@"VUINowPlayingHudMetaDataView",&,N,V_metaDataView
buttonViews
T@"NSArray",&,N,V_buttonViews
buttonHandler
T@?,C,N,V_buttonHandler
T@"UIVisualEffectView",&,N,V_visualEffectView
userInteractionEventHandler
T@?,C,N,V_userInteractionEventHandler
buyParams
waitingForTransactionToStart
TB,N,GisWaitingForTransactionToStart,V_waitingForTransactionToStart
monitorTransaction
TB,N,V_monitorTransaction
progressIndicator
T@"VUICircularProgress",&,N,V_progressIndicator
textContentTitleBackup
T@"NSString",C,N,V_textContentTitleBackup
WN-Gradient
backgroundImageView
T@"UIImageView",&,N,V_backgroundImageView
backgroundImageGradientLayer
T@"VUIWatchNowTemplateBackgroundLayer",&,N,V_backgroundImageGradientLayer
gradientImageView
T@"UIImageView",&,N,V_gradientImageView
shouldFocusUpNext
TB,N,V_shouldFocusUpNext
upNextFocused
TB,N,GisUpNextFocused,V_upNextFocused
itms_extras
previewSrc
loadingImage
isLightTheme
movieInfo
adamId
actionParams
extrasDidPushRoot
TB,R,N,V_extrasDidPushRoot
loadingImageView
T@"_TVImageView",R,N,V_loadingImageView
loadingVisualEffectView
T@"UIVisualEffectView",R,N,V_loadingVisualEffectView
loadingSpinnerView
T@"UIActivityIndicatorView",R,N,V_loadingSpinnerView
deleteId
removeFromPlayHistoryButton
deleteID
T@"NSString",&,N,V_deleteID
T@"NSString",&,N,V_canonicalID
isContinueWatching
TB,N,V_isContinueWatching
ACCESS_NACK_BODY_PLURAL
ACCESS_NACK_BODY_FORMAT
v24@?0@"UIView"8^B16
contentMetadata
Movie
previewFrameArtwork
showArtwork
genreName
formattedReleaseDate
rentalExpiration
tomatometerPercentage
tomatometerFreshness
recommendedAge
videoResolutionClass
videoDynamicRange
hasClosedCaption
hasAD
hasSDH
hasDolbyAtmos
ratingName
ratingSystem
isAdultContent
ratingValue
dolbyvisionhdr
Fresh
CertifiedFresh
TQ,R,N
mediaDescription
artworkURLFormat
artworkWidth
artworkHeight
previewFrameURLFormat
previewFrameWidth
previewFrameHeight
showArtworkURLFormat
showArtworkWidth
showArtworkHeight
releasedDate
genre
tomatoPercentage
tomatoFreshness
commonSenseRecommendedAge
hasClosedCaptions
hasADLocales
hasSDHLocales
vui_isDeviceMediaLibrary
vui_isHomeShareMediaLibrary
eventByEventDescriptor
T@"NSMutableDictionary",&,N,V_eventByEventDescriptor
events
v16@?0@"UITapGestureRecognizer"8
computationLabel
T@"VUILabel",&,N,V_computationLabel
up next media controller
identifierKeyPath
The group identifier for groups must be an NSObject which implements NSCopying
v32@?0@"NSObject<NSCopying>"8@"NSMutableArray"16^B24
T@"NSString",C,N,V_identifierKeyPath
sortIndexKeyPath
T@"NSString",C,N,V_sortIndexKeyPath
groupsSortComparator
T@?,C,N,V_groupsSortComparator
performDefaultSort
TB,N,V_performDefaultSort
T@"NSDictionary",&,N,V_contextData
mediaItemEntityTypes
areLocalMediaItemsAvailable
T@"NSOrderedSet",C,N,V_mediaItemEntityTypes
localMediaItemsAvailable
TB,N,GareLocalMediaItemsAvailable,V_localMediaItemsAvailable
T@"AVPlayerViewController",R,N,V_avPlayerViewController
T@"NSObject<TVPAVFPlayback>",R,N,V_player
T@"VUIMediaInfo",R,N,V_mediaInfo
T@"UIViewController<TVMediaControllerHosting>",&,N,V_mediaControllerHost
T@"VUISportsProductBannerView",&,N,V_bannerView
selectEventDataSource
playEventDataSource
contextMenuEventDataSource
T@"VUIEventDataSource",&,N,V_selectEventDataSource
T@"VUIEventDataSource",&,N,V_playEventDataSource
T@"VUIEventDataSource",&,N,V_contextMenuEventDataSource
VUIDebugImpressionTableViewCellReuseIdentifier
channelDetails
T@"WLKChannelDetails",&,N,V_channelDetails
contentTitle
T@"NSString",&,N,V_contentTitle
installerViewController
T@"VUIAppInstallerViewController",&,N,V_installerViewController
accessViewController
T@"VUIAccessViewController",&,N,V_accessViewController
uuid
T@"NSUUID",&,N,V_uuid
dismissOnSelect
T@"UILabel",&,N,V_label
isWatchListed
TB,N,V_isWatchListed
TB,N,V_dismissOnSelect
addedStateView
T@"VUIUpNextStateView",R,N,V_addedStateView
removedStateView
T@"VUIUpNextStateView",R,N,V_removedStateView
T@"VUIButton<VUIUpNextButtonProtocol>",W,N,V_delegate
VUIAppIconImageService: fetching app icon for key: %@ at URL: %@
VUIAppIconImageService: fetched image: %@ error: %@
%@.png
VUIAppIconImageService -- did not find image URL found for installable: %@
%02x
VUIAppIconImageService -- failed to write image cache for key: %@ error: %@
com.apple.WatchListKit
channel-icons
databaseSeason
T@"VUIPlistMediaDatabaseSeason",&,N,V_databaseSeason
prototypeSubtitleLabel
T@"VUILabel",&,N,V_prototypeSubtitleLabel
prototypeHeaderLabel
T@"VUILabel",&,N,V_prototypeHeaderLabel
T@"VUIFeedbackLayout",&,N,V_layout
headerSubtitleLabel
T@"VUILabel",&,N,V_headerSubtitleLabel
headerBadgeView
T@"_TVImageView",&,N,V_headerBadgeView
sourceLabel
T@"VUILabel",&,N,V_sourceLabel
sourceBadgeView
T@"_TVImageView",&,N,V_sourceBadgeView
T@"TVRatingBadgeView",&,N,V_ratingView
descriptionView
T@"UIView",&,N,V_descriptionView
headerBadgeSize
T{CGSize=dd},N,V_headerBadgeSize
sourceBadgeSize
T{CGSize=dd},N,V_sourceBadgeSize
kind
playedState
T@"MPMediaItemCollection",&,N,V_mediaItemCollection
T@"VUIExtrasDescriptionView",&,N,V_descriptionView
eventDescriptors
T@"NSSet",C,N,V_eventDescriptors
refreshTimerByEventDescriptor
T@"NSMutableDictionary",&,N,V_refreshTimerByEventDescriptor
refreshTimerFiredBlock
T@?,C,N,V_refreshTimerFiredBlock
v16@?0@"VUIAppDocumentRefreshEvent"8
observerMapTable
T@"NSMapTable",&,N,V_observerMapTable
playbackReportToken
Ti,N,V_playbackReportToken
lastProcesssedPlayActivity
T@"NSDate",&,N,V_lastProcesssedPlayActivity
vppaConsentLastPrompted
Current
v24@?0Q8@"NSArray"16
isSubscribed
TB,N,V_isSubscribed
channelLogoLayout
T@"VUIAppleTVChannelLogoLayout",&,N,V_channelLogoLayout
T@"VUITextLayout",&,N,V_descriptionTextLayout
disclaimerTextLayout
T@"VUITextLayout",&,N,V_disclaimerTextLayout
subscribeButtonLayout
T@"VUIButtonLayout",&,N,V_subscribeButtonLayout
Events
EventCell
Select
Validate
T@"NSArray",&,N,V_events
TQ,N,V_width
TQ,N,V_height
format
T@"NSString",C,N,V_format
ratingImageProxy
T@"TVImageProxy",&,N,V_ratingImageProxy
MediaTagsImageHelperCache
Unknown sortAs property %@
mediaEntityClassName
propertyDescriptors
propertyDescriptorsByName
T@"NSDictionary",C,N,V_propertyDescriptorsByName
T@"NSString",R,C,N,V_mediaEntityClassName
T@"NSArray",C,N,V_propertyDescriptors
lastOrientation
Tq,N,V_lastOrientation
axisFollowsDeviceOrientation
TB,N,V_axisFollowsDeviceOrientation
alignmentFollowsDeviceOrientation
TB,N,V_alignmentFollowsDeviceOrientation
Finished
downloadSucceeded
TB,N,GisDownloadInProgress,V_downloadInProgress
TB,N,V_downloadSucceeded
T@"VUINowPlayingHudMetaDataViewLayout",&,N,V_layout
badgeDummyLabel
T@"VUILabel",&,N,V_badgeDummyLabel
descriptionTextView
T@"VUIFocusableTextView",&,N,V_descriptionTextView
T@"VUIMediaTagsView",&,N,V_badgeView
VideosHasParsedElement
VideosTitle
VideosDescription
VideosImageURL
ViewElementDataSourceKey
vui_DataSource
T@"VUIViewElementDataSource",R,N
vui_updateEventDescriptors
T@"NSSet",R,C,N
partial
played
unplayed
homeVideo
%llu|%llu
mediaTypeString
T@"NSString",R,C,N,Gwlk_mediaTypeString
T@"NSString",R,C,N,Gwlk_playState
Td,N,V_time
notifiedOfEntry
TB,N,V_notifiedOfEntry
token
T@"NSUUID",&,N,V_token
T@?,C,N,V_handler
com.apple.tv.FeatureMonitorElapsedTimeQ
active
TB,N,GisActive
autoRemove
TB,N,GshouldAutoRemove
userInfo
T@,&,N
B24@?0@8^B16
startTime
Td,N
Td,R,N
skippable
TB,N,GisSkippable
B32@?0@8Q16^B24
activationType
TQ,N
advisoryDisabledTimeRanges
T@"NSArray",C,N
v36@?0d8@"NSDate"16d24B32
features
T@"NSMutableSet",&,N,V_features
featureDependencies
T@"NSMapTable",&,N,V_featureDependencies
featureTokens
T@"NSMapTable",&,N,V_featureTokens
featureBoundaryInfos
T@"NSMapTable",&,N,V_featureBoundaryInfos
featureTimers
T@"NSMapTable",&,N,V_featureTimers
featureLastRequestedUI
T@"<VUINowPlayingFeature>",&,N,V_featureLastRequestedUI
T@"NSMutableArray",&,N,V_enabledUIModes
observingElapsedTime
TB,N,V_observingElapsedTime
lastProcessedElapsedTime
Td,N,V_lastProcessedElapsedTime
boundaryTimeObserverInfos
T@"NSMutableDictionary",&,N,V_boundaryTimeObserverInfos
elapsedTimeObserverToken
T@,&,N,V_elapsedTimeObserverToken
elapsedTimeProcessingQueue
T@"NSObject<OS_dispatch_queue>",&,N,V_elapsedTimeProcessingQueue
elapsedTimes
T@"NSMutableArray",&,N,V_elapsedTimes
allFeatures
T@"<VUINowPlayingFeatureMonitorDelegate>",W,N,V_delegate
playbackManager
T@"TVMediaPlaybackManager",&,N,V_playbackManager
VUIISMediaItem
com.apple.tv.external.indefinite
v24@?0@"NSString"8@"NSError"16
https
/api/AppCert/%@
/api/license/%@
v32@?0@"NSData"8@"NSURLResponse"16@"NSError"24
asset-id
guid
SignInToWatchThisVideoErrorDescription
TVPlaybackErrorDomain
results
tokens
errors
ContentNotAuthorizedErrorDescription
TOO_MANY_DEVICES_STREAMING_VIDEO_ERROR_FORMAT
VIDEO_UNAVAILABLE_IN_THIS_REGION_ERROR
X-ISP-TOKEN
T@"NSURL",&,N,V_url
tokenServerURL
T@"NSURL",&,N,V_tokenServerURL
stopServerURL
T@"NSURL",&,N,V_stopServerURL
tokenServerParameters
T@"NSDictionary",&,N,V_tokenServerParameters
assetIDForStopping
T@"NSString",&,N,V_assetIDForStopping
loadingContext
TQ,N,V_loadingContext
disableScrubbing
TB,N,V_disableScrubbing
v32@?0@8@16^B24
VUIMetricsBackgroundTaskFlush
true
false
xp_amp_tv_vpaf
VPAFTopic
com.apple.siri
currentSiriNavController
T@"UINavigationController",W,N,V_currentSiriNavController
startIndex
count
TQ,N,V_startIndex
TQ,N,V_count
infoHeaderTextLayout
T@"VUITextLayout",R,N,V_infoHeaderTextLayout
infoBodyTextLayout
T@"VUITextLayout",R,N,V_infoBodyTextLayout
infoDescriptionTextLayout
T@"VUITextLayout",R,N,V_infoDescriptionTextLayout
descriptionLineSpacing
Td,R,N,V_descriptionLineSpacing
T@"UIColor",R,N,V_seeMoreTextColor
T@"UIColor",R,N,V_darkSeeMoreTextColor
highlightedDescriptionText
T@"UIColor",R,N,V_highlightedDescriptionText
darkHighlightedDescriptionText
T@"UIColor",R,N,V_darkHighlightedDescriptionText
isHorizontal
isDynamicTextEnabled
isTVOS
infoTextLayout
T@"VUITextLayout",R,N,V_infoTextLayout
T@"TVImageLayout",R,N,V_logoImageLayout
databaseItem
T@"VUIPlistMediaDatabaseItem",&,N,V_databaseItem
wlNotifications
showLocalNotificationsSignupAlert
showLocalNotificationsAppInstallComplete
onAction
{CGRect={CGPoint=dd}{CGSize=dd}}48@?0@"UIView"8d16d24d32B40B44
B8@?0
EXPIRATION_IN
viewsMap
T@"NSDictionary",C,N,V_viewsMap
groupedSubviews
T@"NSArray",&,N,V_groupedSubviews
totalSubviewsWidth
Td,N,V_totalSubviewsWidth
commonSenseLightImage
T@"UIImage",&,N,V_commonSenseLightImage
commonSenseDarkImage
T@"UIImage",&,N,V_commonSenseDarkImage
T@"VUIMediaTagsViewLayout",R,N,V_layout
mainMenuItems
T@"NSArray",&,N,V_mainMenuItems
genreMenuItems
T@"NSArray",&,N,V_genreMenuItems
line
T@"UIView",&,N,V_line
lineHeight
Td,N,V_lineHeight
minPadding
T{UIEdgeInsets=dddd},N,V_minPadding
minLengths
T{CGSize=dd},N,V_minLengths
documentRef
prefetchedData
uiConfiguration
backgroundImageDictionary
appType
siriuiplugin
tvapp
WatchNow
BrowseMain
MoviesMain
TVShowsMain
KidsMain
SportsMain
Library
Search
Canvas
MovieCanonical
TVShowCanonical
EpisodeCanonical
SportsCanonical
SportsFavorites
ConfirmationDialog
AccountSettings
UIMain
gdprConsent
SiriSearch
T@"NSString",&,N,V_documentRef
T@"VUIDocumentContextData",&,N,V_contextData
prefetchData
T@"VUIDocumentPreFetchedData",&,N,V_prefetchData
T@"VUIDocumentUIConfiguration",&,N,V_uiConfiguration
shouldLoadPageImmediately
TB,N,V_shouldLoadPageImmediately
q24@?0@8@16
click
search
Action Type: %@
Page: %@
Action Details: %@
actionDetails
Term: %@
term
Page Type: %@
dd/MM HH:mm:ss.SS
Null
reliableUnderlyingDictionary
T@"NSDictionary",&,N,V_reliableUnderlyingDictionary
elements
T@"NSDictionary",&,N,V_elements
timingElements
T@"NSDictionary",&,N,V_timingElements
commonElements
T@"NSDictionary",&,N,V_commonElements
sortedElementKeys
sortedTimingKeys
sortedCommonKeys
eventDate
eventSubheader
eventTertiaryInformation
rawEvent
@"NSNumber"16@?0@"VUIMPMediaEntityIdentifier"8
@"MPMediaPredicate"32@?0@"VUIMediaEntityFetchRequest"8Q16@"VUIMediaEntityType"24
@"MPMediaPredicate"32@?0@"VUIMediaEntityFetchRequest"8Q16@"NSNumber"24
@"NSNumber"16@?0@"NSNumber"8
sortTitle
@"MPMediaPredicate"32@?0@"VUIMediaEntityFetchRequest"8Q16@"VUIMPSeasonMediaCollectionIdentifier"24
appIds
AppInstall
VPPA
T@"NSString",&,N,V_pageId
eventData
T@"NSDictionary",&,N,V_eventData
Done
InProgress
VUIPlaybackReporterUTS
Playback summary is nil
reporter
T@"WLKPlaybackReporter",&,N,V_reporter
postPlayConfig
T@"VUIPostPlayConfig",&,N,V_postPlayConfig
mediaEntitiesChangeSet
groupingChangeSet
T@"VUICollectionChangeSet",&,N,V_mediaEntitiesChangeSet
T@"VUICollectionChangeSet",&,N,V_groupingChangeSet
v32@?0@"VUIFeedbackTableViewModel"8Q16^B24
v32@?0@"VUILabel"8Q16^B24
T@"VUIFeedbackTableLayout",&,N,V_layout
dataModels
T@"NSArray",&,N,V_dataModels
headerTextView
T@"VUILabel",&,N,V_headerTextView
T@"NSArray",&,N,V_descriptionTextView
titleString
T@"NSString",&,N,V_titleString
descriptionString
T@"NSString",&,N,V_descriptionString
alertView
T@"VUITVDescriptiveAlertView",&,N,V_alertView
dismissHandler
T@?,C,N,V_dismissHandler
T@"UITextView",&,N,V_descriptionTextView
manager
com.apple.videosui.VUIMPMediaLibrary.serialProcessingQueue
connectionState
v16@?0@"VUIMPMediaLibrary"8
The imageLoaderObject parameter must be an instance of VUIPlistMediaEntityImageLoadParams or conform to VUIPlistMediaEntityImageLoadParamsCreating
TQ,N,V_connectionState
serialOperationQueue
T@"NSOperationQueue",&,N,V_serialOperationQueue
comingSoonBannerData
roles
%@ %@
lastSelectedMediaInfo
T@"TVMediaInfo",&,N,V_lastSelectedMediaInfo
delegateRespondsToDocumentCreationStatus
TB,N,V_delegateRespondsToDocumentCreationStatus
delegateRespondsToMediaChange
TB,N,V_delegateRespondsToMediaChange
delegateRespondsToEventOccurred
TB,N,V_delegateRespondsToEventOccurred
delegateRespondsToDocumentUpdate
TB,N,V_delegateRespondsToDocumentUpdate
postPlayDelegate
T@"<VUIPostPlayControllerDelegate>",W,N,V_postPlayDelegate
@32@?0@"VUIMediaEntityFetchRequest"8Q16@"NSNumber"24
purchaseHistoryID
T@"MPMediaItem",&,N,V_mediaItem
sourceType
Tq,N,V_sourceType
currentURL
T@"NSURL",&,N,V_currentURL
appScriptDict
T@"NSMutableDictionary",&,N,V_appScriptDict
task
T@"NSURLSessionDataTask",&,N,V_task
gradientBoundsInsets
T{UIEdgeInsets=dddd},N,V_gradientBoundsInsets
watchnow
browse
sports
kids
pptstack
pptsports
nowPlayingConfig
showsLozengeForLivePlayback
showsStillWatchingAlertForLivePlayback
alertDurationForLivePlayback
alertIdleTimeout
TB,N,V_showsLozengeForLivePlayback
showsStillWatchingAlert
TB,N,V_showsStillWatchingAlert
Td,N,V_stillWatchingAlertDuration
Td,N,V_alertIdleTimeout
bootStrapInterval
documentUpdateOffsetInterval
bootstrapInterval
Td,N,V_bootstrapInterval
Td,N,V_documentUpdateOffsetInterval
maximumAutoPlayableItems
TQ,N,V_maximumAutoPlayableItems
Td,N,V_duration
T@"VUIPostPlayConfig",R,N,V_postPlayConfig
T@"VUINowPlayingConfig",R,N,V_nowPlayingConfig
episodeLayout
T@"VUITextLayout",R,N,V_episodeLayout
metadataLayout
T@"VUIMediaTagsViewLayout",R,N,V_metadataLayout
v32@?0@"VUIProductSectionView"8Q16^B24
sectionViews
T@"NSArray",&,N,V_sectionViews
viewLayout
T@"VUIProductMetadataLayout",&,N,V_viewLayout
airingView
T@"VUIProductInfoAiringView",&,N,V_airingView
offer
videosPlayables
punchoutOfferData
Trailer
extrasUrl
showCanonicalId
seasonCanonicalId
liveStreamServiceId
externalServiceId
rentalId
isRental
fpsCertificateUrl
fpsKeyServerUrl
fpsKeyServerQueryParameters
fpsNonceServerUrl
playbackUrl
hlsUrl
resumeTimeTimeStamp
scrubVideoUrl
channelId
channelName
vpafMetrics
mediaMetrics
tokenServerUrl
stopUrl
sharedPurchase
requiredAgeForPlayback
frequencyOfAgeConfirmation
previewUrl
adamID
extrasURLString
previewURLString
T@"NSString",&,N
tvAppDeeplinkURL
isExternal
referenceID
seasonCanonicalID
bookmarkID
T@"NSString",R,N,V_bookmarkID
externalID
isMovie
hlsURL
fpsAdditionalServerParams
fpsNonceURL
previewArtwork
T@"NSURL",R,N,V_previewArtwork
T@"VUIContentMetadata",R,N,V_metadata
stopURL
tokenServerParams
liveStreamServiceID
externalServiceID
extrasInfo
T@"VUIExtrasInfo",R,N
TB,R,N,GisSharedPurchase
The string representation must contain exactly four components
%@,%@,%@,%@
T@"NSOrderedSet",C,N,V_cast
T@"NSOrderedSet",C,N,V_directors
T@"NSOrderedSet",C,N,V_producers
T@"NSOrderedSet",C,N,V_screenwriters
hasCredits
v24@?0Q8^B16
upnext
upnextSports
navBrick
upsell
ribbon
v32@?0@"UIColor"8Q16^B24
asyncWorkToken
T@"VUIAsynchronousWorkToken",&,N,V_asyncWorkToken
The mediaCollectionType argument cannot be VUIMediaCollectionTypeNone
The mediaCollectionType (%@) is not supported for the supplied mediaCategoryType (%@)
MovieRental
TVShow
HomeVideo
subtype
mediaCategoryType
mediaCollectionType
TQ,N,V_subtype
TQ,N,V_mediaCategoryType
TQ,N,V_mediaCollectionType
TB,N,GisRental,V_rental
T@"VUISportsProductBannerLayout",&,N,V_layout
rowLabels
T@"NSArray",&,N,V_rowLabels
scoreLabels
T@"NSArray",&,N,V_scoreLabels
descriptionLabels
T@"NSArray",&,N,V_descriptionLabels
footerLabel
T@"VUILabel",&,N,V_footerLabel
availabilityTextView
T@"VUILabel",&,N,V_availabilityTextView
availabilityImageView
T@"_TVImageView",&,N,V_availabilityImageView
AcquiringLease
LeaseAgentInitialized
LeaseAgentInvalid
Leased
Re-acquiringLease
Authenticating
LeaseOperationSucceeded
LeaseOperationFailed
LeaseEventOpFailedNeedsRetry
client-data
lease-duration
lease-id
media-kind
replacement-token
lease-start
lease-stop
lease-renew
VUIVideoLeaseAgent
@"NSString"40@?0@"TVSStateMachine"8@"NSString"16@24@"NSDictionary"32
v32@?0@"NSURLResponse"8@16@"NSError"24
LeaseUnavailableForTVShowErrorDescription
LeaseUnavailableForMovieErrorDescription
leaseID
T@"NSString",&,N,V_leaseID
renewalTimer
T@"NSTimer",&,N,V_renewalTimer
T@"NSObject<TVPMediaItem>",&,N,V_mediaItem
storeMediaKind
T@"NSString",&,N,V_storeMediaKind
leaseDuration
Td,N,V_leaseDuration
numLeaseStartRetries
Td,N,V_numLeaseStartRetries
numRenewalRetries
TQ,N,V_numRenewalRetries
T@"<VUIVideoLeaseAgentDelegate>",W,N,V_delegate
request
Unsupported predicate: %@
Unsupported compound predicate: %@
Unsupported expressions in comparison predicate: %@
Unknown keypath %@ for entity kind %@
Unable to create MPMediaQuery as the supplied media entity type is not supported: %@
Unexpected media collection type!
T@"VUIMediaEntityFetchRequest",&,N,V_request
T@"VUIMediaEntityFetchResponse",C,N,V_response
mediaEntityKind
T@"VUIMediaEntityKind",&,N,V_mediaEntityKind
prefetchProperties
T@"NSMutableSet",&,N,V_prefetchProperties
mediaQueryPredicate
T@"MPMediaPredicate",&,N,V_mediaQueryPredicate
mediaQuerySortOrderingProperties
T@"NSArray",&,N,V_mediaQuerySortOrderingProperties
mediaQuerySortOrderingDirectionMappings
T@"NSDictionary",&,N,V_mediaQuerySortOrderingDirectionMappings
postFetchSortDescriptors
T@"NSArray",&,N,V_postFetchSortDescriptors
processPredicateAfterFetch
TB,N,V_processPredicateAfterFetch
processRangeAfterFetch
TB,N,V_processRangeAfterFetch
currentFetchMediaEntityType
T@"VUIMediaEntityType",&,N,V_currentFetchMediaEntityType
You must create with whitelisted clientID.
AMS request encoding failed with error:%@
v24@?0@"AMSURLResult"8@"NSError"16
v24@?0@"AMSURLRequest"8@"NSError"16
session
T@"AMSURLSession",&,N,V_session
tokenService
T@"AMSMediaTokenService",&,N,V_tokenService
clientIdentifier
T@"NSString",&,N,V_clientIdentifier
VUIStoreMediaItemMetadataLeaseID
VUIStoreMediaItemLeaseStartServerProcessingTimeMS
VUIStoreMediaItemRentalExpirationUpdatedNotification
VUIStoreMediaItem_tvOS
iTunesPreferHLSForPlayback
iTunesMaxHLSVideoResolution
iTunesFileVideoResolution
iframe-scrubber-url
atv-playhead-send-interval-secs
metadata.rating.rank
metadata.rating.label
metadata.rating.system
User-Agent
X-Dsid
artworkURL
metadata.itemName
metadata.artistName
metadata.genre
metadata.releaseDate
trickplay-url
rental-expiration-date
rental-playback-duration
rental-first-playback-date
metadata.longDescription
metadata.duration
metadata.season-number
metadata.episode-sort-id
metadata.show-name
downloadKey
v24@?0@"NSNumber"8@"NSNumber"16
Scrub AVPlayerItem loader
hls-playlist-url
Undetermined
File
v32@?0@"NSDictionary"8@"NSNumber"16@"NSError"24
v28@?0B8@"NSDictionary"12@"NSError"20
v28@?0B8@"NSError"12@"NSNumber"20
RentalAlreadyCheckedOutErrorDescription
redownloadProduct
streamingRental
songList
v16@?0@"SSPurchaseResponse"8
v56@?0@"TVSStateMachine"8@"NSString"16@"NSString"24@"NSString"32@40@"NSDictionary"48
failureType
v24@?0@"SSURLConnectionResponse"8@"NSError"16
frameTimeDifferenceInSeconds
trickplay-count
one-based-naming-scheme
thumbnail-name-format
storefront-header-suffix
at14
rottenTomatoesScore
freshness
rotten
fresh
certifiedFresh
ATVMediaTypeMovie
ATVMediaTypeMovieRental
ATVMediaTypeTVEpisode
assets
flavor
HDMO
1080p
720p
480p
asset-info.flavor
rental-checkedout-to-guid
metadata.itemId
more
startId
endId
hw.model
pendingSongs
application/x-apple-plist
T@"NSString",C,N,V_actionParams
T@"NSNumber",C,N,V_rentalID
Tq,N,V_mediaType
hlsPlaylistURL
T@"NSURL",C,N,V_hlsPlaylistURL
contentRatingRank
T@"NSNumber",C,N,V_contentRatingRank
T@"NSURL",&,N,V_playbackURL
playbackType
Tq,N,V_playbackType
preferredStoreAssetDict
T@"NSDictionary",&,N,V_preferredStoreAssetDict
leaseAgent
T@"VUIVideoLeaseAgent",&,N,V_leaseAgent
ignoreLeaseAgentStateChanges
TB,N,V_ignoreLeaseAgentStateChanges
storeFPSKeyLoader
T@"VUIStoreFPSKeyLoader",&,N,V_storeFPSKeyLoader
trickPlayImageConfigDocumentLoader
T@"TVSDocumentLoader",&,N,V_trickPlayImageConfigDocumentLoader
scrubMediaItem
T@"NSObject<TVPMediaItem>",&,N,V_scrubMediaItem
scrubPlayer
T@"TVPPlayer",&,N,V_scrubPlayer
needsRentalCheckin
TB,N,V_needsRentalCheckin
fpsKeyError
T@"NSError",&,N,V_fpsKeyError
T@"VUIBookmark",&,N,V_bookmark
rottenTomatoesOperationQueue
T@"NSOperationQueue",&,N,V_rottenTomatoesOperationQueue
mpMediaItem
T@"MPMediaItem",&,N,V_mpMediaItem
storeItemDict
T@"NSDictionary",C,N,V_storeItemDict
bookmarkDisabled
TB,N,V_bookmarkDisabled
bookmarkOverrideTime
T@"NSNumber",C,N,V_bookmarkOverrideTime
TB,N,V_disableResumeMenu
T@"NSURL",C,N,V_fpsCertificateURL
T@"NSURL",C,N,V_fpsKeyServerURL
T@"NSDictionary",C,N,V_fpsAdditionalServerParams
TQ,R,N,V_type
titleStyle
TQ,R,N,V_titleStyle
contentMotionTranslation
T{CGPoint=dd},R,N,V_contentMotionTranslation
bookkeeper.retainedEntryCount.com.apple.upp
com.apple.upp
ATVUniversalPlaybackPositionClientRecordsDidChange
ATVUniversalPlaybackPositionClientDidReset
v32@?0@"VUIUniversalPlaybackPositionRecord"8Q16^B24
T@"VUIUPPClientState",&,V_state
v32@?0@8@"VUIUniversalPlaybackPositionRecord"16^B24
v32@?0@"NSString"8@"VUIUniversalPlaybackPositionRecord"16^B24
clientState
T@"VUIUPPClientState",R,N,V_clientState
changes
T@"NSDictionary",R,N,V_changes
%@,%ld,%@,%@,%@,%@
v24@?0@8^B16
T@"NSString",C,N,V_itemIdentifier
keyType
Tq,N,V_keyType
bookmarkTime
T@"NSNumber",&,N,V_bookmarkTime
T@"NSNumber",&,N,V_hasBeenPlayed
T@"NSNumber",&,N,V_playCount
T@"NSDate",&,N,V_timestamp
pendingChanges
T@"NSMutableDictionary",R,N,V_pendingChanges
uppKeyToRecordMap
T@"NSMutableDictionary",R,N,V_uppKeyToRecordMap
lastSyncedDomainVersion
T@"NSString",C,V_lastSyncedDomainVersion
VUIMediaLibraryConnectionStateDidChangeNotification
fromState
toState
VUIMediaLibraryContentsDidChangeNotification
VUIMediaLibraryContentsDidChangeUserInfoKeyContentsChange
The %@ method needs to be override by a subclass.
%@=%lu
connectable
supportsDRMContent
T@"NSObject<VUIMediaLibraryIdentifier>",C,N,V_identifier
T@"VUIMediaLibraryManager",R,W,N,V_manager
TB,R,N,GisConnectable
@"UIColor"16@?0@"UITraitCollection"8
disclaimerLayout
T@"VUITextLayout",&,N,V_disclaimerLayout
T@"VUIButtonLayout",&,N,V_buttonLayout
Unexpected mediaCategoryType parameter: %@
supportedMediaCollectionTypes
v32@?0@"NSNumber"8@"NSSet"16^B24
supportedChildMediaCollectionTypes
T@"NSSet",C,N,V_supportedMediaCollectionTypes
T@"NSDictionary",C,N,V_supportedChildMediaCollectionTypes
com.apple.videos-preferences
LastRunValue
Idle
Waiting for earliest rental to expire
Waiting for appropriate app state to handle expiration
Showing expiration UI
Start monitoring
Rental expiration timer did fire
Application did become active
Playback UI no longer being shown
Expiration UI complete
Library contents did change
VUIRentalExpirationMonitorRentalDidExpireNotification
VUIRentalExpirationMonitor
@"ML3QueryResultSet"16@?0@"NSDate"8
v32@?0q8Q16^B24
@"NSString"8@?0
@"NSString"16@?0@"NSDate"8
dateOfLastRentalExpirationHandling
T@"NSDate",&,N,V_dateOfLastRentalExpirationHandling
earliestExpirationTimer
T@"NSTimer",&,N,V_earliestExpirationTimer
T@"VUIVideoAdvisoryViewLayout",&,N,V_layout
legendNameLabel
T@"VUILabel",&,N,V_legendNameLabel
legendDescriptionLabel
T@"VUILabel",&,N,V_legendDescriptionLabel
legendName
legendDescription
com.apple.videosui.VUINowPlayingObserver.serialProcessingQueue
v20@?0@"NSString"8I16
v12@?0I8
v24@?0^v8^{__CFError=}16
latestObservation
T@"VUINowPlayingObservation",&,N,V_latestObservation
observing
TB,N,GisObserving,V_observing
updateObservationContext
TQ,N,V_updateObservationContext
T@"<VUINowPlayingObserverDelegate>",W,N,V_delegate
nowPlayingAppBundleIdentifier
isPlaying
playing
TB,N,GisPlaying,V_playing
T@"NSString",C,N,V_nowPlayingAppBundleIdentifier
@"NSDate"16@?0@"VUIMediaCollection"8
PBUILaunchedForPlayback
v24@?0@"BSProcessHandle"8@"NSError"16
T@"VUIExtrasInfo",&,N,V_extrasInfo
logoTextLayout
T@"VUITextLayout",&,N,V_logoTextLayout
coverArtImageLayout
T@"TVImageLayout",&,N,V_coverArtImageLayout
subTextLayout
T@"VUITextLayout",R,N,V_subTextLayout
episodeInfoTextLayout
T@"VUITextLayout",R,N,V_episodeInfoTextLayout
descriptionTitleTextLayout
T@"VUITextLayout",R,N,V_descriptionTitleTextLayout
T@"VUIMediaTagsViewLayout",R,N,V_tagsLayout
maxCoverArtImageHeight
Td,R,N,V_maxCoverArtImageHeight
T@"VUITextLayout",R,N,V_disclaimerTextLayout
iconProgressPieImages
backgroundAlpha
Td,N,V_backgroundAlpha
foregroundAlpha
Td,N,V_foregroundAlpha
circleRadiusFraction
Td,N,V_circleRadiusFraction
pauseRadiusFraction
Td,N,V_pauseRadiusFraction
circleBoundingRect
T{CGRect={CGPoint=dd}{CGSize=dd}},R,N
displayedState
Tq,N,V_displayedState
displayingPaused
TB,N,V_displayingPaused
displayedFraction
Td,N,V_displayedFraction
T@"<VUISBIconProgressViewDelegate>",N,V_delegate
overlayImage
T@"UIImage",&,N,V_overlayImage
canAnimate
TB,N,V_canAnimate
sourceBackgroundImage
T@"UIImage",&,N,V_sourceBackgroundImage
resizedSourceBackgroundImage
T@"UIImage",&,N,V_resizedSourceBackgroundImage
overlayMaterialImageByIdentifier
T@"NSDictionary",C,N,V_overlayMaterialImageByIdentifier
resizedBackgroundImageSize
T{CGSize=dd},N,V_resizedBackgroundImageSize
overlayMaterialRequests
T@"NSArray",C,N,V_overlayMaterialRequests
rect
T{CGRect={CGPoint=dd}{CGSize=dd}},N,V_rect
T@"VUIPlistMediaDatabaseShow",W,N,V_show
T@"NSArray",C,N,V_episodes
T@"VUIButtonLayout",&,N,V_layout
imagesViewDefaultState
T@"_TVImageView",&,N,V_imagesViewDefaultState
imagesViewHighlightedState
T@"_TVImageView",&,N,V_imagesViewHighlightedState
backgroundImagesViewDefaultState
T@"_TVImageView",&,N,V_backgroundImagesViewDefaultState
backgroundImagesViewHighlightedState
T@"_TVImageView",&,N,V_backgroundImagesViewHighlightedState
T@"_TVImageView",&,N,V_backgroundImageView
containerGuide
T@"UIFocusContainerGuide",&,N,V_containerGuide
T@"VUIChannelBannerLayout",&,N,V_layout
appleTVChannelLogoView
T@"VUIAppleTVChannelLogoView",&,N,V_appleTVChannelLogoView
subscribeButton
T@"VUIButton",&,N,V_subscribeButton
disclaimerTextLabel
T@"VUILabel",&,N,V_disclaimerTextLabel
textLabels
T@"NSArray",&,N,V_textLabels
lastFocusedView
T@"UIView",&,N,V_lastFocusedView
logoMargin
T{UIEdgeInsets=dddd},N,V_logoMargin
legendSize
T{CGSize=dd},N,V_legendSize
legendMaxWidth
Td,N,V_legendMaxWidth
legendsMargin
T{UIEdgeInsets=dddd},N,V_legendsMargin
legendBackgroundColor
T@"UIColor",R,N,V_legendBackgroundColor
legendCornerRadius
Td,N,V_legendCornerRadius
dividerMargin
T{UIEdgeInsets=dddd},N,V_dividerMargin
dividerSize
T{CGSize=dd},N,V_dividerSize
dividerColor
T@"UIColor",R,N,V_dividerColor
legendLayout
T@"VUITextLayout",R,N,V_legendLayout
legendDescriptionLayout
T@"VUITextLayout",R,N,V_legendDescriptionLayout
RECENT_PURCHASES
RENTALS
LIBRARY_MOVIES
LIBRARY_TVSHOWS
GENRES
LIBRARY_MOVIES_4K_HDR
DOWNLOADED
LIBRARY_HOMESHARES
LIBRARY_HOME_VIDEOS
TRANSLATION NOT PROVIDED
result
T@"VUIMediaEntitiesFetchControllerResult",&,N,V_result
currentSubOperation
T@"NSOperation",&,N,V_currentSubOperation
T@"NSArray",&,N,V_videosPlayables
upNextPlayback
TB,N,GisUpNextPlayback,V_upNextPlayback
userPlaybackInitiationDate
T@"NSDate",&,N,V_userPlaybackInitiationDate
openURLCompletionDate
T@"NSDate",&,N,V_openURLCompletionDate
ContextTimeRemaining
attributedTitle
T@"NSAttributedString",C,N,V_attributedTitle
glyphSize
T{CGSize=dd},N,V_glyphSize
strokeSize
Td,N,V_strokeSize
backgroundImage
T@"UIImage",&,N,V_backgroundImage
T@"VUITextBadgeLayout",&,N,V_badgeLayout
T@"<VUITextBadgeViewDelegate>",W,N,V_delegate
VUITVShowDetailPageHeaderViewIdentifier
episodeGroups
T@"NSArray",&,N,V_episodeGroups
tvShowDetailPageViewModel
T@"VUITVShowDetailPageViewModel",&,N,V_tvShowDetailPageViewModel
mediaCollection
T@"VUIMediaCollection",R,N,V_mediaCollection
episodeShelfViewControllerBySeasonIdentifier
T@"NSDictionary",&,N,V_episodeShelfViewControllerBySeasonIdentifier
Device
Home Share
VUIMPMediaItemAssetControllerStateDidChangeNotification
mediaEntityIdentifier
v16@?0@"VUIMPMediaItemAssetController"8
v16@?0q8
T@"<VUIMediaEntityAssetControllerDelegate>",W,N
supportsStartingDownload
T@"VUIMediaEntityAssetControllerState",R,C,N
T@"NSObject<OS_dispatch_queue>",&,N
T@"NSObject<VUIMediaEntityIdentifier>",C,N,V_mediaEntityIdentifier
downloadController
T@"VUIMPMediaItemDownloadController",&,N,V_downloadController
requestingPermissionToDownload
TB,N,GisRequestingPermissionToDownload,V_requestingPermissionToDownload
T@"<VUIMediaEntityAssetControllerDelegate>",W,N,V_delegate
TB,R,N,V_supportsStartingDownload
T@"VUIMediaEntityAssetControllerState",R,C,N,V_state
backgroundBlendMode
Ti,N,V_backgroundBlendMode
backgroundColor
T@"UIColor",&,N,V_backgroundColor
separatorBlendMode
Ti,N,V_separatorBlendMode
separatorColor
T@"UIColor",&,N,V_separatorColor
padding
Td,N,V_padding
topRowLayout
T@"VUIScoreboardRowLayout",&,N,V_topRowLayout
bottomRowLayout
T@"VUIScoreboardRowLayout",&,N,V_bottomRowLayout
playWhenDone
CommerceViewControllerIdentifier
T@"NSDictionary",R,C,N,V_offer
extrasAction
T@"VUIActionItunesExtras",R,C,N
redownload-params
v32@?0q8@"NSDictionary"16@"NSError"24
TRANSACTION_RESTRICTED_CONTENT
subscriptionConfirmation
SUBSCRIPTION_NOTIFICATION_TITLE
SUBSCRIPTION_NOTIFICATION_TEXT
commerceActionRef
T@"NSString",&,N,V_commerceActionRef
T@"NSDictionary",C,N,V_contextData
imageURL
baseImageIdentifier
covertArt
previewFrame
imageType
imageIdentifier
T@"NSURL",C,N,V_imageURL
T@"NSString",C,N,V_baseImageIdentifier
TQ,N,V_imageType
T@"NSString",R,C,N,V_imageIdentifier
isProgressBar
TB,N,V_isProgressBar
Use -[VUIBookmark initWithIdentifier:keyType:] instead.
%@, identifier=%@, keyType=%ld
T@"NSString",R,N,V_identifier
Tq,R,N,V_keyType
VUIDebugViewDefaultsCellReuseIdentifier
VUIDebugViewNavigationCellReuseIdentifier
VUIDebugViewHeaderReuseIdentifier
UI Widgets
Metrics Events
Metrics
Application Defaults
containerView
T@"VUIDebugContainerView",&,N,V_containerView
requiresRelayout
TB,N,V_requiresRelayout
dataSource
T@"VUIDebugViewDataSource",&,N,V_dataSource
v32@?0@"VUIAppDocumentUpdateEvent"8Q16^B24
T@"NSString",C,N,V_documentRef
documentUpdateContext
T@"<VUIAppDocumentUpdateContext>",&,N,V_documentUpdateContext
documentUpdateViewElements
T@"NSMutableOrderedSet",&,N,V_documentUpdateViewElements
deferredDocumentUpdateEventStore
T@"VUIAppDocumentUpdateEventStore",&,N,V_deferredDocumentUpdateEventStore
deferDocumentUpdateEventProcessing
TB,N,V_deferDocumentUpdateEventProcessing
markDocumentDirtyForRefreshUpdate
TB,N,V_markDocumentDirtyForRefreshUpdate
viewControllerIdentifier
T@"NSString",&,N,V_viewControllerIdentifier
fetchResponse
fetchChanges
T@"VUIMediaItemEntityTypesFetchResponse",&,N,V_fetchResponse
T@"VUIMediaItemEntityTypesFetchResponseChanges",&,N,V_fetchChanges
dataSourceType
Tq,N,V_dataSourceType
mappingDictionary
T@"NSDictionary",C,N,V_mappingDictionary
orderedKeys
T@"NSOrderedSet",C,N,V_orderedKeys
T@"<VUIOrderedItemsMapDelegate>",W,N,V_delegate
highlightOrSelectedImage
T@"UIImage",&,N,V_highlightOrSelectedImage
VUIMediaItemTraitStopWhenPausedForTooLong
com.apple.videosui.VUIPlistMediaLibrary.serialProcessingQueue
Plist Database
v16@?0@"VUIPlistMediaLibrary"8
PlistMediaLibrary
database
T@"VUIPlistMediaDatabase",&,N,V_database
T@"VUICardFloatingContentView",&,N,V_floatingView
T@"UIView<TVAuxiliaryViewSelecting>",W,N,V_selectingView
allowsFocus
TB,N,V_allowsFocus
com.apple.VideosUI.VUIMediaLibraryFetchController.serialProcessingQueue
%p-%@-%@
v16@?0@"VUIMediaLibraryFetchController"8
completionQueue
logName
Tq,V_state
fetchOperation
T@"NSOperation",&,N,V_fetchOperation
pauseCount
TQ,N,V_pauseCount
T@"NSString",C,N,V_logName
logNameSuffix
T@"NSString",C,N,V_logNameSuffix
%@ range:%@ data:%@
startOverallPosition
overallPosition
TQ,N,V_overallPosition
T@"NSArray",&,N,V_eventData
timeRange
T{_NSRange=QQ},N,V_timeRange
TQ,N,V_duration
v32@?0{_NSRange=QQ}8^B24
T@"NSObject<TVPPlayback>",W,N,V_player
items
T@"NSArray",C,N,V_items
isLive
TB,N,V_isLive
product trailer media controller
@32@?0@"NSString"8@16@24
com.apple.frontrow
KVSUseXMLPlists
text/xml; charset=UTF-8
application/x-plist
VUIMetricsTabBarItemNotificationKey
impressions
media
enter
exit
dialog
refApp
extRefUrl
default
remove
cancel
continue
launch
linkedLaunch
linkedTaskSwitch
taskSwitch
siri
destinationUrl
quit
targetId
allow
disallow
seeAll
appStore
install
switch
link
alertButton
upNextButton
menu
fail
actionContext
alert
xp_amp_tv_main
xp_amp_tv_unidentified
xp_amp_tv_log
xp_amp_clientperf
Installed
Subscribed
isAppLaunch
processStartTime
com.apple.videosui.metrics.serialQ
appLaunchData
T@"NSDictionary",C,N,V_appLaunchData
InternalBuild
?play
action=play
VUIMetricsBackgroundTask
ProductType
BuildVersion
dbids
capacityDataAvailable
connection
capacityDisk
capacitySystem
platformName
ibids
hardwareFamily
hardwareModel
windowOuterHeight
environment
capacityData
environmentBuild
eventVersion
sbids
capacitySystemAvailable
windowOuterWidth
utsc
clientEventId
osBuildNumber
userType
xpDelegatesInfo
platformId
cbids
osLanguages
baseFields
T@"NSDictionary",C,N,V_baseFields
lastRecordedPageEventData
T@"VUIMetricsPageEventData",&,N,V_lastRecordedPageEventData
activeMetricsKit
T@"MTMetricsKit",&,N,V_activeMetricsKit
metricsKitMain
T@"MTMetricsKit",&,N,V_metricsKitMain
loggerKit
T@"MTMetricsKit",&,N,V_loggerKit
metricsKitUnidentified
T@"MTMetricsKit",&,N,V_metricsKitUnidentified
perfMetricsKit
T@"MTMetricsKit",&,N,V_perfMetricsKit
metricsDataDispatchSQ
T@"NSObject<OS_dispatch_queue>",&,N,V_metricsDataDispatchSQ
savedRecentEvents
T@"NSHashTable",&,N,V_savedRecentEvents
shouldPostAppLaunchData
TB,N,V_shouldPostAppLaunchData
currentTabIdentifier
T@"NSString",R,C,N,V_currentTabIdentifier
exitEventDestinationUrl
T@"NSString",&,N,V_exitEventDestinationUrl
resource
mpaa-g
text
mpaa-pg
pg13
mpaa-pg13
PG-13
mpaa-r
unrated
Unrated
tv-y
TV-Y
tvy7
tv-y7
TV-Y7
tv-g
TV-G
tvpg
tv-pg
TV-PG
tv14
tv-14
TV-14
tvma
tv-ma
TV-MA
tvy7fv
tv-y7fv
TV-Y7FV
bbfcu
bbfc-u
bbfcpg
bbfc-pg
bbfc12a
bbfc-12a
bbfc12
bbfc-12
bbfc15
bbfc-15
bbfc18
bbfc-18
bbfcr18
bbfc-r18
barsl
bars-l
bars10
bars-10
bars12
bars-12
bars14
bars-14
bars16
bars-16
bars18
bars-18
nc17
mpaa-nc17
NC-17
/_/g
/Plus/gi
([^0-9A-Z])+
brmovies_|brtv_|brmovie
bars
T@"NSDictionary",&,N,V_mappingDictionary
T@"VUIErrorLayout",&,N,V_layout
debugTextLabel
T@"VUILabel",&,N,V_debugTextLabel
debugTextLabel2
T@"VUILabel",&,N,V_debugTextLabel2
StackScrollPage
json
SportsScrollPage
VideoPostPlayStyleSheet
VideoWatchNowStyleSheet
VideoProductShowcaseStyleSheet
VideoSportsProductStyleSheet
VideoBaseStyleSheet
VideoStackStyleSheet
VideoAlertStyleSheet
VideoCatalogStyleSheet
onlyShowLocalContent
currentView
T@"UIView",&,N,V_currentView
contentHasBeenDeleted
TB,N,V_contentHasBeenDeleted
rootView
T@"UIView",&,N,V_rootView
pausesFetchControllersAutomatically
TB,N,V_pausesFetchControllersAutomatically
currentViewType
TQ,N,V_currentViewType
noContentErrorTitle
T@"NSString",C,N,V_noContentErrorTitle
noContentErrorMessage
T@"NSString",C,N,V_noContentErrorMessage
contentHasBeenManuallyDeleted
TB,N,V_contentHasBeenManuallyDeleted
deletedContentErrorMessage
T@"NSString",C,N,V_deletedContentErrorMessage
contentView
T@"UIView",&,N,V_contentView
TB,N,V_onlyShowLocalContent
confirmationDialogTemplate
sportsProductTemplate
watchNowTemplate
popoverTemplate
contextMenuPopoverTemplate
descriptiveInfoTemplate
errorTemplate
postPlayTemplate
confirmationCardTemplate
offersTemplate
sportsFavoritesTemplate
canvasTemplate
productShowcaseTemplate
shareActivityTemplate
videoTextBadge
disclaimerText
timeline
event
videoLockup
videoListLockup
episodeLockup
episodeInfoCard
ribbonLockup
featuredLockup
castBanner
roomBanner
showcaseHeader
channelBanner
markAsWatchedButton
shareButton
downloadButton
accountSettingsButton
debugText
favoriteCell
leagueCell
leagueHeaderCell
favoriteDescriptionCell
favoriteSpacerCell
offerListLockup
versionListLockup
productMetadata
castInfo
availableTitle
buyButton
productId
episodeId
tags
focusedText
featuredCard
upNextCard
appImg
videoRatingCard
videoReviewCard
videoAboutCard
videoTabItemCard
offerCard
editorialCard
extrasDescriptionCard
sportsFeaturedCard
sportsCard
sportsUpNextCard
sportsLockup
scorecard
scoreRow
score
logo
sportFavoriteBanner
watchNowBanner
postPlayBanner
episodeShelf
autoPostPlayDuration
vui-grid-style
full
edgeToEdge
vui-grid-type
vui-col-span
grid
vui-constrain-ratio
vui-shelf-style
plain
documentRefContext
documentRefData
isHandled
eventTimeStamp
loadDocumentImmediately
updateEvents
cropCode
isTemplated
viewSource
vui-channel-id
vui-is-favorited
vui-group
vui-supports-product-browser
light
dark
channel
tabItems
checkmark
upNext
transaction
equalPadding
vui-document-ref
popoverGroup
popoverOption
popover
phoneImage
padImage
theme
vui-update-events
vui-debug-identifier
refresh
purchases
purchase
playActivity
settings
favorites
accountChanged
removeFromPlayHistory
entitlements
utsk
appRefresh
appDidBecomeActive
playHistoryUpdated
clearPlayHistory
locationAuthorizationChanged
preBanner
postBanner
episodeNumberTitle
episodeNumberTitleAbbreviated
availabilityText
availabilityImage
tvUberImage
phoneUberImage
padUberImage
uberImage
aspectRatios
cropCodes
imagePlaceholder
phoneNarrow
phoneStandard
phoneWide
padNarrow
padStandard
padWide
jpeg
sportsLeagueID
sportsTeamName
FAVORITES_REMOVE_TEAM
FAVORITES_REMOVE_TEAM_BUTTON
T@"NSString",C,N,V_sportsLeagueID
T@"NSString",C,N,V_sportsTeamName
transform.rotation.z
indeterminateAnimation
indeterminateLayer
T@"CAShapeLayer",&,N,V_indeterminateLayer
centerLayer
T@"CAShapeLayer",&,N,V_centerLayer
progressLayer
T@"CAShapeLayer",&,N,V_progressLayer
progressBackgroundLayer
T@"CAShapeLayer",&,N,V_progressBackgroundLayer
progressWidth
Td,N,V_progressWidth
indeterminateWidth
Td,N,V_indeterminateWidth
indeterminate
TB,N,GisIndeterminate,V_indeterminate
progressFillColor
T@"UIColor",&,N,V_progressFillColor
Td,N,V_progress
centerSquareWidth
Td,N,V_centerSquareWidth
T@"NSString",R,N,V_title
T@"NSString",R,N,V_subtitle
T@"NSString",R,N,V_domain
defaultName
T@"NSString",R,N,V_defaultName
defaultBoolValue
TB,N,V_defaultBoolValue
integerValueType
TB,N,V_integerValueType
defaultIntegerValue
TQ,N,V_defaultIntegerValue
Enable Debug UI
Metrics Logging
Metrics Expanded Logging
Stage Demo
Ignore HTTP Cache
com.apple.ITMLKit
IgnoreHTTPCache
Print Document XML
LogDocumentXML
JS Console Logging
LogJSConsole
Purge Images on Launch
com.apple.TVMLKit
PurgeImageCache
Page Perf UI
PagePerformanceUIEnabled
UI Animation Coefficient
Values (0, 2, 5, 10, 25)
com.apple.UIKit
UIAnimationDragCoefficient
defaultsDataSource
T@"NSArray",&,N,V_defaultsDataSource
The cropToFit parameter cannot be set to YES when no scale size is given
scaleToSize
T{CGSize=dd},R,N
cropToFit
T@"TVImage",R,N
scalingResult
T@"NSError",R,C,N
params
T@"<VUIImageLoadParams>",&,N,V_params
T{CGSize=dd},N,V_scaleToSize
TB,N,V_cropToFit
T@"TVImage",&,N,V_image
TQ,N,V_scalingResult
buyProduct
&mtApp=%@
&vid=%@
T@"NSString",C,N,V_buyParams
urlBagKey
T@"NSString",C,N,V_urlBagKey
T@"NSString",C,N,V_userAgent
dsid
T@"NSNumber",C,N,V_dsid
strongToken
T@"NSString",C,N,V_strongToken
ignoresForcedPasswordRestriction
TB,N,V_ignoresForcedPasswordRestriction
**UNDEFINED**
NetworkHLS
NetworkCRABS
%@=%p
block
identifierInternal
T@"NSObject<VUIMediaEntityIdentifierInternal>",C,N,V_identifierInternal
firstAccessPropertiesCache
T@"NSMutableDictionary",&,N,V_firstAccessPropertiesCache
cachesPropertiesOnFirstAccess
TB,N,V_cachesPropertiesOnFirstAccess
T@"VUIMediaEntityKind",R,N,V_kind
T@"NSSet",R,N,V_requestedProperties
T@"_TVContentRating",R,C,N
localChanges
TB,N,GhasLocalChanges,V_localChanges
v36@?0@"VUIImageProxyAnimator"8@"TVImage"16@"NSError"24B32
displayImageIndex
TQ,N,V_displayImageIndex
indexOfFetchedImage
TQ,N,V_indexOfFetchedImage
transitionTimer
T@"NSTimer",W,N,V_transitionTimer
animating
TB,N,GisAnimating,V_animating
cachingEnabled
TB,N,GisCachingEnabled,V_cachingEnabled
imageProxies
T@"NSArray",C,N,V_imageProxies
animationOptions
TQ,N,V_animationOptions
animationDuration
Td,N,V_animationDuration
transitionInterval
Td,N,V_transitionInterval
type: %@,
 active: %@
TB,N,GisActive,V_active
TB,N,GshouldAutoRemove,V_autoRemove
T@,&,N,V_userInfo
type: %@,
 active: %@,
 startTime: %f,
 duration: %f,
 isSkippable: %@
Td,N,V_startTime
Td,R,N,V_duration
TB,N,GisSkippable,V_skippable
TQ,N,V_activationType
T@"NSArray",C,N,V_advisoryDisabledTimeRanges
type: %@,
 active: %@,
 duration: %f,
 repeats: %@
repeats
TB,R,N,V_repeats
VUINowPlayingFeatureTypeNowPlayingHud
VUINowPlayingFeatureTypePostPlay
VUINowPlayingFeatureTypeBootstrapPostPlay
VUINowPlayingFeatureTypePreRoll
VUINowPlayingFeatureTypeMidRoll
VUINowPlayingFeatureTypePostRoll
VUINowPlayingFeatureTypeSkipIntro
VUINowPlayingFeatureTypeTVAdvisory
VUINowPlayingFeatureTypeStillWatchingAlert
VUINowPlayingFeatureTypeStopWhenPausedForTooLong
VUINowPlayingFeatureTypeStopWhenBackgroundedForTooLong
cardLayoutType
Tq,R,N,V_cardLayoutType
Tq,R,N,V_gridStyle
gridType
Tq,R,N,V_gridType
hideFloatingBackground
TB,N,V_hideFloatingBackground
darkBackgroundColor
T@"UIColor",&,N,V_darkBackgroundColor
highlightColor
T@"UIColor",&,N,V_highlightColor
imagePosition
Tq,N,V_imagePosition
secondaryTextLayout
T@"VUITextLayout",&,N,V_secondaryTextLayout
Tq,N,V_layoutType
Tq,N,V_gridType
backgroundLayer
T@"CAShapeLayer",&,N,V_backgroundLayer
progressMaskLayer
T@"CAShapeLayer",&,N,V_progressMaskLayer
displayLink
T@"CADisplayLink",&,N,V_displayLink
autoFillDelta
Td,N,V_autoFillDelta
autoFillStartTimeStamp
Td,N,V_autoFillStartTimeStamp
progressInset
T{UIEdgeInsets=dddd},N,V_progressInset
progressTintColor
T@"UIColor",&,N,V_progressTintColor
backgroundImageInset
T{UIEdgeInsets=dddd},N,V_backgroundImageInset
backgroundTintColor
T@"UIColor",&,N,V_backgroundTintColor
centerImage
T@"UIImage",&,N,V_centerImage
centerImageInset
T{UIEdgeInsets=dddd},N,V_centerImageInset
centerTintColor
T@"UIColor",&,N,V_centerTintColor
UpnextBlurGradientAlpha
UpNextGradient
PlayMask
BackgroundMask
T@"VUIUpNextOverlayLayout",&,N,V_overlayLayout
progressViewElement
T@"IKViewElement",&,N,V_progressViewElement
appImageElement
T@"IKViewElement",&,N,V_appImageElement
logoImageView
T@"_TVImageView",&,N,V_logoImageView
logoImageElement
T@"IKViewElement",&,N,V_logoImageElement
textElement
T@"IKViewElement",&,N,V_textElement
subtitleElement
T@"IKViewElement",&,N,V_subtitleElement
blurMaskLayer
T@"CALayer",&,N,V_blurMaskLayer
progressViewShowOnlyOnFocus
TB,N,V_progressViewShowOnlyOnFocus
appImageViewShowOnlyOnFocus
TB,N,V_appImageViewShowOnlyOnFocus
logoImageViewShowOnlyOnFocus
TB,N,V_logoImageViewShowOnlyOnFocus
textLabelShowOnlyOnFocus
TB,N,V_textLabelShowOnlyOnFocus
subtitleLabelShowOnlyOnFocus
TB,N,V_subtitleLabelShowOnlyOnFocus
badgeShowOnlyOnFocus
TB,N,V_badgeShowOnlyOnFocus
isFocused
TB,N,V_isFocused
autoPlayDuration
T@"NSNumber",&,N,V_autoPlayDuration
autoPlayIndicator
T@"VUICountDownProgressIndicator",&,N,V_autoPlayIndicator
T@"CALayer",&,N,V_gradientLayer
VUIDebugMetricsEventCellReuseIdentifier
common elements
Timing Elements
T@"VUIDebugMetricsEvent",&,N,V_event
lastConfirmedAge
ageConfirmationLastPrompted
v20@?0B8q12
PBSRestrictionAllowed
PBSRestrictionDeniedByProfile
PBSRestrictionDeniedBySetting
PBSRestrictionUserCancelled
AGE_GATE_CONFIRMATION_MESSAGE
videosPlayable
T@"VUIVideosPlayable",&,N,V_videosPlayable
restrictionsCheckType
TQ,N,V_restrictionsCheckType
presentingController
T@"UIViewController",&,N,V_presentingController
com.apple.videosui.VUIMPHomeShareMediaLibraryManager.serialProcessingQueue
@"NSObject<NSCopying>"16@?0@"VUIMPHomeShareMediaLibrary"8
B24@?0@"VUIMPHomeShareMediaLibrary"8@"VUIMPHomeShareMediaLibrary"16
T@"<VUIHomeShareMediaLibraryManagerDelegate>",W,N
T@"VUIMediaLibraryManager",W,N,V_manager
mutableHomeShareMediaLibraries
T@"NSMutableArray",&,N,V_mutableHomeShareMediaLibraries
T@"<VUIHomeShareMediaLibraryManagerDelegate>",W,N,V_delegate
playUrl
PUNCHOUT_FAILED_ERROR
PUNCHOUT_FAILED_GENERIC_ERROR
TRANSACTION_RESTRICTED_PUNCHOUT
prefs:root=SCREEN_TIME&path=CONTENT_PRIVACY
isPlaybackURL
TB,N,V_isPlaybackURL
T@"NSString",C,N,V_contentTitle
punchoutURL
T@"NSURL",&,N,V_punchoutURL
TB,N,V_isEntitledToPlay
T@"VUIContentMetadata",&,N,V_contentMetadata
T@"NSString",&,N,V_externalID
T@"NSString",&,N,V_referenceID
VUIDeviceMediaLibraryUpdateStateDidChangeNotification
isUpdating
isInitialUpdateInProgress
updating
TB,R,N,GisUpdating
initialUpdateInProgress
TB,R,N,GisInitialUpdateInProgress
vui_hasValidImage
T@"VUIStoreAcquisitionProperties",C,N,V_properties
completionBlock
T@?,C,N,V_completionBlock
cancelled
TB,GisCancelled,V_cancelled
apple-timing-app
Error making purchase: no buy params specified in request
TVCKCloudDataClientError
tabId
baseFieldsForVPAF
T@"NSDictionary",R,C,N
iTunesVPAF
boot-url
UseEmbeddedJS
-[VUIBootURLController fetchBootURLWithCompletionHandler:]_block_invoke
TVBootURL
localAppURL
T@"NSURL",&,N,V_localAppURL
get-watchlist-settings
update-watchlist-settings
uvSearch/max-local-settings-age-seconds
uvSearch/uts-api-base-url
uvSearch/init-config-get-url-length-limit
uvSearch/routes/init-config-path
uvSearch/nowplaying-enabled
uvSearch/sports-enabled
uvSearch/locationEnabled
uvSearch/enabled-notification-types
push-notifications/environment
metrics
mint-account
AddFundsUrl
manageSubscriptionsUrl
signup
privacyAcknowledgementUrl
tv-app-url
processRedirectUrl
TVApp
mediaItemEntityTypesChangeSet
localMediaItemsAvailableDidChange
T@"VUICollectionChangeSet",R,N,V_mediaItemEntityTypesChangeSet
TB,R,N,V_localMediaItemsAvailableDidChange
vppaState
databaseShow
T@"VUIPlistMediaDatabaseShow",&,N,V_databaseShow
VUIMediaTagKeySeparator
VUIMediaTagKeyTitle
VUIMediaTagKeyDescription
VUIMediaTagKeyReleasedDate
VUIMediaTagKeyGenre
VUIMediaTagKeyDuration
VUIMediaTagKeyCommonSenseImage
VUIMediaTagKeyCommonSenseDarkImage
VUIMediaTagKeyCommonSenseRating
VUIMediaTagKeyRatingImage
VUIMediaTagKeyClosedCaptionImage
VUIMediaTagKeyVideoResolutionImage
VUIMediaTagKeyVideoDynamicRangeImage
VUIMediaTagKeyADLocalesImage
VUIMediaTagKeySDHLocalesImage
VUIMediaTagKeyDolbyAtmosImage
VUIMediaTagKeyTomatoFreshnessImage
VUIMediaTagKeyTomatoPercentage
VUIMediaTagKeyRentalExpiration
VUIMediaTagKeyAvailabilityText
VUIMediaTagKeyAvailabilityImage
VUIMediaTagKeyItunesExtras
VUIMediaTagKeyEpisodeNumberTitle
scoresRefreshInSeconds
sportsEventsById
T@"NSMutableDictionary",&,N,V_sportsEventsById
scoreboardUpdateTimer
T@"NSTimer",&,N,V_scoreboardUpdateTimer
scoreboardUpdateInterval
Tq,N,V_scoreboardUpdateInterval
updateInProgress
TB,N,V_updateInProgress
preActionDocumentDataSource
preActionDataSource
documentDataSource
postActionDocumentDataSource
T@"VUIDocumentDataSource",&,N,V_preActionDocumentDataSource
preAction
T@"VUIAction",&,N,V_preAction
T@"VUIDocumentDataSource",&,N,V_documentDataSource
T@"VUIDocumentDataSource",&,N,V_postActionDocumentDataSource
postAction
T@"VUIAction",&,N,V_postAction
grouping
groupingSortIndexes
mediaEntitySubtype
TQ,N,V_mediaEntitySubtype
T@"NSArray",C,N,V_grouping
T@"NSArray",C,N,V_groupingSortIndexes
showTimeSchedule
infoText
T@"VUIProductInfoAiringLayout",&,N,V_layout
infoLabel
T@"VUILabel",&,N,V_infoLabel
T@"_TVImageView",&,N,V_logo
vui-button-style
primary
@"NSDate"16@?0@"VUIMediaEntity"8
flowcase
featuredView
T@"VUICollectionViewFeaturedView",&,N,V_featuredView
com.apple.tv.external
com.apple.tv.internal
VUIStoreAuxMediaItem
m3u8
movpkg
Streaming
TOO_MANY_DEVICES_STREAMING_EPISODE_ERROR_FORMAT
TOO_MANY_DEVICES_STREAMING_MOVIE_ERROR_FORMAT
T@"NSURL",C,N,V_url
T@"VUIMutableBookmark",&,N,V_bookmark
parentReportingToken
T@"NSObject",&,N,V_parentReportingToken
isHLS
TB,N,V_isHLS
isAudioOnly
TB,N,V_isAudioOnly
T@"NSString",C,N,V_bookmarkID
isForDownload
TB,N,V_isForDownload
TB,N,V_sharedPurchase
VUIRatingViewLogoImageKey
VUIRatingViewLegendsKey
VUIRatingViewLegendNameKey
VUIRatingViewLegendDescriptionKey
dividerView
T@"UIView",&,N,V_dividerView
legendViews
T@"NSArray",C,N,V_legendViews
T@"VUIProductBannerLayout",&,N,V_layout
logoTextView
T@"VUILabel",&,N,V_logoTextView
subTextView
T@"VUILabel",&,N,V_subTextView
episodeInfoView
T@"VUILabel",&,N,V_episodeInfoView
coverArtImageView
T@"_TVImageView",&,N,V_coverArtImageView
comingSoonView
T@"VUIComingSoonBannerCardView",&,N,V_comingSoonView
castInfoView
T@"VUIProductBannerCastInfoView",&,N,V_castInfoView
disclaimerTextView
T@"VUILabel",&,N,V_disclaimerTextView
cardShowcaseFactor
Td,N,V_cardShowcaseFactor
fillColor
T@"UIColor",&,N,V_fillColor
tintColor
T@"UIColor",&,N,V_tintColor
gradientStartColor
T@"UIColor",&,N,V_gradientStartColor
gradientEndColor
T@"UIColor",&,N,V_gradientEndColor
Td,N,V_height
T{UIEdgeInsets=dddd},N,V_padding
shouldProgressBarUseRoundCorner
TB,N,V_shouldProgressBarUseRoundCorner
useMaterial
TB,N,V_useMaterial
materialView
T@"UIVisualEffectView",&,N,V_materialView
T@"VUIFeaturedCellOverlayLayout",&,N,V_overlayLayout
disclaimerLabel
T@"VUILabel",&,N,V_disclaimerLabel
buttons
T@"NSArray",&,N,V_buttons
VUISyncingKeyValueStoreVersionDidChange
VUISyncingKeyValueStoreDidReset
TVSLastKnownAccountID
schemaVersion
hasChangesSinceLastSyncBegan
clean
syncing
cleaningUpToReSyncAll
syncingAndWillSyncAgainWhenComplete
needsSync
ensureInSync
syncComplete
reset
keyPrefix
T@"NSString",R,N,V_keyPrefix
conflictResolver
T@?,R,N,V_conflictResolver
v32@?0@"NSString"8@?<@@?@"NSString"@@>16^B24
#T:[%@%p] #Error #%@ : Couldn't initialize database 
#T:[%@%p] #Error #%@ : Couldn't initialize sync engine 
kvstore-sync
#T:[%@%p] #Error #%@ : Unable to delete cached data: %@ 
com.apple.apple-tv
q24@?0@"VUIConflictResolverEntry"8@"VUIConflictResolverEntry"16
#T:[%@%p] #Warning #%@ : Error deserializing property list for key %@. Skipping. 
#T:[%@%p] #Warning #%@ : setObjectsInDictionary expected NSString keys got %@ 
#T:[%@%p] #Warning #%@ : setObjectsInDictionary failed to serialize value %@ 
#T:[%@%p] #Error #%@ : Failed to get dirty values 
v32@?0@"NSString"8@"NSData"16^B24
v16@?0@"VUIiTunesKeyValueStoreSyncResponse"8
v24@?0@"NSString"8@"NSArray"16
KVSSyncEngineStateMachine
#T:[%@%p] #Error #%@ : Still unable to open database file. Giving up. 
ATViTunesKeyValueStore-dbQueue
DELETE FROM cache WHERE dirty=0 AND lastupdated < datetime('%@')
#T:[%@%p] #Error #%@ : Error purging cache. %s 
BRLog
#T:[%@%p] #Notice #%@ : invalid since date - cannot be nil 
#T:[%@%p] #Error #%@ : Unable to remove database file %@. %@ 
#T:[%@%p] #Error #%@ : Couldn't read string from database 
#T:[%@%p] #Error #%@ : Expected column type of SQLITE_TEXT but got %d in get type. 
#T:[%@%p] #Error #%@ : Expected column type of SQLITE_BLOB for value but got %d in get type. 
#T:[%@%p] #Error #%@ : Expected column type of SQLITE_INTEGER but got %d in get type. 
SELECT value FROM cache WHERE key = ?
#T:[%@%p] #Error #%@ : Error creating data for sqlite value. 
#T:[%@%p] #Error #%@ : Error executing get value statement. %d 
#T:[%@%p] #Error #%@ : Error binding parameter in set value statement. %d 
#T:[%@%p] #Error #%@ : Error resetting statement in set value. %d 
SELECT key FROM cache
#T:[%@%p] #Error #%@ : Error creating key (%@). 
#T:[%@%p] #Error #%@ : All keys query didn't finish with SQLITE_DONE. %d 
#T:[%@%p] #Error #%@ : Error resetting all keys statement. %d 
#T:[%@%p] #Error #%@ : the db has a dsid that doesn't match the current account's DSID 
SELECT key, value FROM cache WHERE dirty = 1
#T:[%@%p] #Error #%@ : Error creating key (%@) or value (%p). 
#T:[%@%p] #Error #%@ : Dirty query didn't finish with SQLITE_DONE. %d 
#T:[%@%p] #Error #%@ : Error resetting dirty statement. %d 
BEGIN TRANSACTION
#T:[%@%p] #Error #%@ : Error beginning transaction. %d 
COMMIT TRANSACTION
#T:[%@%p] #Error #%@ : Error committing transaction. %d 
#T:[%@%p] #Error #%@ : Exception in _dbTransaction:. %@. 
ROLLBACK TRANSACTION
#T:[%@%p] #Error #%@ : Error rolling back transaction. %d 
SELECT value FROM dict WHERE key = ?
#T:[%@%p] #Error #%@ : Error binding key %@ to statement. %d 
INSERT OR REPLACE INTO dict (key, value) values (?, ?)
#T:[%@%p] #Error #%@ : Error executing sqlite3_step for _dbSetString. %d 
#T:[%@%p] #Error #%@ : Error binding key %@ or value %@ to statement. %d, %d 
#T:[%@%p] #Error #%@ : Error resetting statement in _dbSetString. %d 
INSERT OR REPLACE INTO cache (key, value, dirty) values (?, ?, 1)
#T:[%@%p] #Error #%@ : Error binding parameter in set value statement. %d, %d, %d 
#T:[%@%p] #Error #%@ : Error executing set value statement. %d 
#T:[%@%p] #Error #%@ : Error resetting statement. %d 
UPDATE cache SET dirty = 0
#T:[%@%p] #Error #%@ : Error clearing dirty bits on all records. %d 
#T:[%@%p] #Error #%@ : Couldn't create folder %@ for SQLite database. %@ 
#T:[%@%p] #Error #%@ : Can't open SQLite database. %d 
#T:[%@%p] #Error #%@ : Couldn't begin transaction. %s 
DROP TABLE dict
#T:[%@%p] #Error #%@ : (Sync)Couldn't drop dict table. %s 
DROP TABLE cache
#T:[%@%p] #Error #%@ : (Sync)Couldn't drop cache table. %s 
END TRANSACTION
#T:[%@%p] #Error #%@ : Couldn't end transaction. %s 
SELECT value FROM dict where key = '%@'
CREATE TABLE cache (key TEXT PRIMARY KEY, value BLOB, dirty BOOLEAN NOT NULL DEFAULT 1)
#T:[%@%p] #Error #%@ : Couldn't create cache table. %s 
CREATE TABLE dict (key TEXT PRIMARY KEY, value TEXT NULL)
#T:[%@%p] #Error #%@ : Couldn't create dict table. %s 
INSERT INTO dict (key, value) VALUES ('%@', '%@')
#T:[%@%p] #Error #%@ : Couldn't insert %@ into dict. %s 
#T:[%@%p] #Error #%@ : Error preparing statement. SQL: %s, ERROR: %s (%d) 
#T:[%@%p] #Error #%@ : Cannot convert value to property list. %@ 
#T:[%@%p] #Error #%@ : Error deserializing object. %@ 
menuView
T@"UIView",&,N,V_menuView
gridView
T@"UIView",&,N,V_gridView
CardShadowUnfocused
Manual
ContentsChange
upNextAdded
upNextRemoved
favoritesAdded
favoritesRemoved
MovieBundle
nameKey
contextDataDict
T@"NSDictionary",C,N,V_contextDataDict
movieID
T@"NSString",R,C,N,V_movieID
movieBundleID
T@"NSString",R,C,N,V_movieBundleID
T@"NSString",R,C,N,V_showID
episodeID
T@"NSString",R,C,N,V_episodeID
confirmationDialogType
T@"NSString",C,N,V_confirmationDialogType
Not showing anything
Showing video fullscreen
Showing video picture in picture
Showing video fullscreen and picture in picture
Waiting for playback view to appear while showing nothing
Waiting for fullscreen playback view to appear while showing picture in picture
Waiting for fullscreen playback view to appear while showing fullscreen and picture in picture
Waiting for playback view to appear to restore picture in picture
Waiting for view to appear to restore picture in picture while playing dual stream
Swapping fullscreen and picture in picture
Showing error message
Play media info
Dismiss media info
Fullscreen playback view will appear
Fullscreen playback view did appear
Fullscreen playback view will disappear
playback state did change
Will start picture in picture
Did start picture in picture
Will stop picture in picture
Did stop picture in picture
Picture in picture presentation did fail
Restore user interface for picture in picture stop
Error did occur
Error did dismiss
Application will enter foreground
Application did enter background
Post play has timedout
Media info did change
AVPlayerViewControllerKey
CompletionKey
DisappearanceReasonKey
CanPlayMediaKey
VUITVOSPlaybackManagerWillSeekToTime
VUITVOSPlaybackManagerSeekReasonKey
VUITVOSPlaybackManagerPlaybackWillStartNotification
VUITVOSPlaybackManagerPlaybackDidEndNotification
T@"TVPPlayer",&,N,V_player
featureMonitor
T@"VUINowPlayingFeatureMonitor",&,N,V_featureMonitor
requiresLinearPlayback
TB,N,V_requiresLinearPlayback
nowPlayingViewController
T@"VUINowPlayingViewController",&,N,V_nowPlayingViewController
advisoryImage
T@"UIImage",&,N,V_advisoryImage
currentMediaTVShow
TB,R,N,GisCurrentMediaTVShow
VUITVOSPlaybackManager
mute
unmute
TVPPlayerScanModeUsingAVPlayerExclusively
TVPPlayerScanModeUsingAVPlayerButMayUseExternalImagesLater
TVPPlayerScanModeUsingExternalImages
TVPPlayerScanModeNone
AVScanResultUsePlayer
AVScanResultWaitForImages
AVScanResultUsePlayerUntilFirstImageDelivered
supportsDualStreamPlayback
AV_PLAYBACK_ERROR
initialMediaItemHasCompletedInitialLoading
v16@?0@"TVPPlayer"8
v20@?0@"TVPPlayer"8B16
v20@?0@"UINavigationController"8B16
v24@?0B8B12B16B20
B16@?0@"TVPPlaylist"8
%@ %ld
 (%@)
v20@?0@"VUIMediaInfo"8B16
v24@?0@"VUIPlaybackInfo"8B16B20
v24@?0@"VUIPlaybackInfo"8@?<v@?B>16
v24@?0@"VUIPlaybackInfo"8@"TVPPlaybackState"16
fullscreenPlaybackInfo
T@"VUIPlaybackInfo",&,N,V_fullscreenPlaybackInfo
pipPlaybackInfo
T@"VUIPlaybackInfo",&,N,V_pipPlaybackInfo
errorAlertController
T@"UIAlertController",&,N,V_errorAlertController
pausedDueToViewDisappeared
TB,N,V_pausedDueToViewDisappeared
bootstrappingPostPlay
TB,N,GisBootstrappingPostPlay,V_bootstrappingPostPlay
waitingForBootstrappingToFinishToShowPostPlay
TB,N,V_waitingForBootstrappingToFinishToShowPostPlay
ignorePictureInPictureStop
TB,N,V_ignorePictureInPictureStop
postPlayUIDismissTimer
T@"NSTimer",W,N,V_postPlayUIDismissTimer
suppressErrorAlerts
TB,N,V_suppressErrorAlerts
pictureInPictureActive
TB,R,N,GisPictureInPictureActive
All subclasses must override %@ in a subclass
T@"VUIShelfView",&,N,V_containerView
focusedIndexPath
T@"NSIndexPath",&,N,V_focusedIndexPath
v16@?0@"VUIMPMediaItemDownloadController"8
observer
T@"VUIMPMediaItemDownloadControllerState",C,N,V_state
T@"NSMutableArray",&,N,V_observers
restoreDownload
TB,R,N,GisRestoreDownload
observerDispatchQueue
T@"NSObject<OS_dispatch_queue>",&,N,V_observerDispatchQueue
T@"VUIExtrasDescriptionLayout",&,N,V_layout
textView
T@"VUIFocusableTextView",&,N,V_textView
T@"VUIFavoriteBannerLayout",&,N,V_layout
backgroundView
T@"UIView",&,N,V_backgroundView
backgroundImageLogos
T@"NSArray",&,N,V_backgroundImageLogos
VUIStoreMediaItemErrorDomain
MenuCellIdentifier
MenuSectionHeaderCellIdentifier
@"NSObject<NSCopying>"16@?0@8
shouldMarkFirstCategorySelected
TB,N,V_shouldMarkFirstCategorySelected
menuCollectionView
T@"VUICollectionView",&,N,V_menuCollectionView
T@"VUIMenuCollectionViewCell",&,N,V_sizingCell
sectionHeaderSizingCell
T@"VUIMenuSectionHeaderCollectionViewCell",&,N,V_sectionHeaderSizingCell
T@"<VUIMenuCollectionViewControllerDelegate>",W,N,V_delegate
v24@?0@"VUIMediaItemEntityTypesFetchResponse"8@"NSError"16
@"NSObject<NSCopying>"16@?0@"VUIMediaEntityType"8
T@"VUIMediaItemEntityTypesFetchControllerResult",&,N,V_result
currentFetchResponse
T@"VUIMediaItemEntityTypesFetchResponse",&,N,V_currentFetchResponse
item
collection
rentals
category
collectionType
T@"NSString",&,N,V_subtype
T@"NSString",&,N,V_category
T@"NSString",&,N,V_collectionType
wlLocation
onAuthorizationStatusChanged
onLocationChanged
PartiallyPlayed
Unplayed
FullyPlayed
itms
TVSBookmark.Key
TVSBookmark.BookmarkTime
TVSBookmark.BookmarkTimestamp
TVSBookmark.PlayCount
TVSBookmark.HasBeenPlayed
TVSBookmark.HasBeenRented
TVSBookmark.IsMarkedAsUnwatched
TVSBookmark.HasFakeTimestamp
Coder must allow keyed coding.
Don't use this method
%@: key=[%@], bookmarkTime=%f, playCount=%d, hasBeenPlayed=%d, hasBeenRented=%d, isMarkedAsUnwatched=%d, bookmarkTimestamp=%@
supportsSecureCoding
TB,R
hasFakeTimestamp
TB,N,V_hasFakeTimestamp
T@"VUIBookmarkKey",R,N,V_key
Td,R,N,V_bookmarkTime
bookmarkTimestamp
T@"NSDate",R,N,V_bookmarkTimestamp
TQ,R,N,V_playCount
TB,R,N,V_hasBeenPlayed
TB,R,N,V_hasBeenRented
isMarkedAsUnwatched
TB,R,N,V_isMarkedAsUnwatched
{CGSize=dd}24@?0{CGSize=dd}8
AppleTVChannels
AppleTV-Channels
T@"VUIAppleTVChannelLogoLayout",&,N,V_layout
appleTVImageView
T@"_TVImageView",&,N,V_appleTVImageView
channelsLabel
T@"VUILabel",&,N,V_channelsLabel
channelLogoView
T@"_TVImageView",&,N,V_channelLogoView
calculatedIdentifier
TB,N,V_calculatedIdentifier
artworkCatalog
T@"MPArtworkCatalog",&,N,V_artworkCatalog
TQ,R,N,V_imageType
addedCanonicalIDs
T@"NSSet",C,N,V_addedCanonicalIDs
window
T@"UIWindow",&,N
appController
T@"TVApplicationController",R,N
vui_delegate
T@"<VUIApplicationDelegate>",R,N
descriptor
T@"VUIAppDocumentUpdateEventDescriptor",&,N,V_descriptor
dictionaryRepresentation
overrideHeight
persistentIdentifier
screenshot
overrideWidth
v32@?0@"NSURLQueryItem"8Q16^B24
TB,N,GisScreenshot,V_screenshot
persistentidentifier
T@"NSNumber",C,N,V_persistentidentifier
sourceURL
T@"NSURL",C,N,V_sourceURL
T@"NSNumber",C,N,V_storeIdentifier
T@"<MPArtworkDataSource>",&,N,V_dataSource
T@"UIImage",&,N,V_appIcon
installProgress
Td,N,V_installProgress
v16@?0@"VUIMPMediaItemCollectionAssetController"8
%K = %@
state.isDownloadInProgress
T@"VUIMediaEntityAssetControllerState",C,N,V_state
assetControllers
T@"NSArray",&,N,V_assetControllers
fullyDownloadedAssetBytes
TQ,N,V_fullyDownloadedAssetBytes
videoMetrics
T@"VUIComingSoonCardLayout",&,N,V_layout
vibrantEffectView
T@"UIVisualEffectView",&,N,V_vibrantEffectView
filters
is4K
isHDR
isPurchased
mediaCategory
sortProperties
sortDirectionMapping
ascending
descending
v48@?0@"NSString"8@"NSString"16@"NSString"24@"NSNumber"32@"NSNumber"40
T@"NSString",&,N,V_mediaEntitySubtype
T@"NSString",&,N,V_mediaCategory
T@"NSString",&,N,V_mediaCollectionType
T@"VUIChannelBannerView",R,N,V_bannerView
uiStyle
Tq,N,V_uiStyle
isPreModeBanner
TB,R,N,V_isPreModeBanner
T{TVCornerRadii=dddd},R,N,V_borderRadii
T{UIEdgeInsets=dddd},R,N,V_margin
T@"UIColor",R,N,V_backgroundColor
highlightedBackgroundColor
T@"UIColor",R,N,V_highlightedBackgroundColor
bannerMinHeight
Td,R,N,V_bannerMinHeight
maxTextWidth
Td,R,N,V_maxTextWidth
subtitleBaseLine
Td,R,N,V_subtitleBaseLine
T@"VUITextLayout",R,N,V_subtitleLayout
bannerStyle
VUIPlaybackReporterSessionMetadataKeyForegroundPlayback
VUIPlaybackReporterSessionMetadataKeyHandlingSeek
VUIPlaybackReporterSessionMetadataKeyStartReason
VUIPlaybackReporterSessionMetadataKeyStopReason
VUIPlaybackReporterSessionMetadataKeyStartType
VUIPlaybackReporterSessionMetadataKeyStopType
%@ %@ Enabled:%@
context
T@,&,N,V_context
UUID
T@"NSString",R,N,V_UUID
reportingEnabled
TB,N,V_reportingEnabled
VUICollectionViewCellReuseIdentifier
childView
T@"UIView",&,N,V_childView
persons
v40@?0@8{_NSRange=QQ}16^B32
T@"VUICastInfoLayout",&,N,V_layout
labels
T@"NSArray",&,N,V_labels
textBlendMode
Ti,N,V_textBlendMode
badgeInsets
T{UIEdgeInsets=dddd},N,V_badgeInsets
badgeStyle
TQ,N,V_badgeStyle
transitionType
animated
preferredWidth
preferredHeight
navBarHidden
navBarAdjustedToSizeClass
modalOverModalAllowed
viewControllerId
Push
FullScreen
BlurOverFullScreen
Dismiss
PopOrDismiss
Tq,N,V_type
T@"NSString",C,N,V_viewControllerIdentifier
TB,N,GisAnimated,V_animated
navigationBarHidden
TB,N,GisNavigationBarHidden,V_navigationBarHidden
navigationBarAdjustedToSizeClass
TB,N,GisNavigationBarAdjustedToSizeClass,V_navigationBarAdjustedToSizeClass
TB,N,GisModalOverModalAllowed,V_modalOverModalAllowed
FPSKeyDeletionInfo
additionalFPSRequestParamsJSONData
T@"NSData",&,D,N
contentID
T@"NSString",C,D,N
T@"NSNumber",C,D,N
T@"NSDate",C,D,N
T@"NSURL",C,D,N
keyData
keyURI
playbackExpirationStartDate
FPSKeyInfo
allowsManualRenewal
TB,D,N
isLowValue
renewalDate
renewalInterval
retrievalDate
video
T@"VUIVideoManagedObject",&,D,N
ImageData
data
imageInfo
T@"VUIImageInfoManagedObject",&,D,N
ImageInfo
canonicalHeight
Td,D,N
canonicalWidth
Tq,D,N
urlFormat
imageData
T@"VUIImageDataManagedObject",&,D,N
TVEpisode
episodeNumberInSeason
episodeNumberInSeries
T@"VUITVSeasonManagedObject",&,D,N
series
T@"VUITVSeriesManagedObject",&,D,N
TVSeason
T@"NSSet",&,D,N
TVSeries
imageInfos
TVSeriesImageInfo
Video
bookmarkTimeStamp
brandID
brandName
dateAdded
downloadTaskIdentifier
localPlaybackRelativeFilePath
localPlaybackURL
mediaMetricsJSONData
rtcServiceIdentifier
vpafMetricsJSONData
fpsKeyInfo
VideoImageInfo
VUIAppDocumentManualUpdateContext: Current update request set to: %@
Failed to fetch OpenURLDataSource while processing internal link (local only): %@
Failed to fetch OpenURLDataSource while processing internal link: %@
VUIOpenURLHandler::Authentication requested for action: %@
Prefetching store FPS certificate
Starting certificate data loading.  Waiting for certificate data before continuing requests
Certificate data has valid length.  Continuing key request loading for pending requests
Either certificate URL or key server URL was not provided
Certificate data loading in progress.  Waiting for certificate data before continuing requests
Certificate data already loaded.  Loading key requests immediately
Using cached cert data for %@.  Refreshing cert data, but not waiting for response
No cached cert data available for %@.  Fetching cert data and waiting for response
Retrieving certificate URL and key server URL from store bag
Store bag fetch complete
Error retrieving URLs from bag: %@
Updating cached cert data for URL %@
Error fetching certificate data: %@
Done with all key request batches
Starting batch of %lu key requests
Stopping further key loading since request is cancelled or failed: %@
Generating key request data for %@
Key request data generated for %@
Sending %@requests to server: %@
Received response for requests: %@
Top-level json object is not of type dictionary
Response is missing fairplay-streaming-response, version or streaming-keys
Key info dict has id but no corresponding key request could be found
Key info dict is missing id
Key info object is not a dictionary
Unable to map response data to one or more key requests.  Failing unmapped key requests.
Key renewal date: %@
Key expiration date: %@
Rental playback start date: %@
Playback duration: %f
Key response data has zero length
Key info dict has a status of 0 but is missing ckc
Received FPS response error status of %ld for %@
Key info dict is missing status
Manual media entity fetch failed with error (%@) for requests: %@
Contents change media entity fetch failed with error (%@) for requests: %@
VUINavigateToUpNextHandler:_navigateToUpNextOrSuspend
VUIFavoritesRequestManager -- caught exception while getting request operation
No delegate has been registered! -settingsURL will return nil
No delegate has been registered! -isCellularDataForPlaybackEnabled will return NO
No MPMediaItem found! Unable to check if need to warn about playback settings
No delegate has been registered! -shouldWarnAboutPlaybackSettingsForMediaIten: will return NO
No delegate has been registered! -clearCellularPlaybackQualityOverrides will be a NO-OP
No MPMediaItem found! Unable to override cellular playback quality
No delegate has been registered! -rentalAssetTypeForMediaItem: will return VUIMediaEntityAssetTypeUndefined
No delegate has been registered! -removeRentalMediaItem:withCompletion will be a no-op
VUIActionUpdateUpNext failed for itemID [%@] state [%@]
VUINowPlayingViewController::deallocated.
VUINowPlayingViewController::finished bootstrapping with result: [%@]
VUINowPlayingViewController::transferred media controller - %@ to host - %@
VUINowPlayingViewController::will %@ post play UI.
VUINowPlayingViewController::we are waiting for the document to finish updating, will defer showing post play.
VUINowPlayingViewController::we were waiting for document update to finish, resetting waitingForPostPlayDocumentUpdate.
VUINowPlayingViewController::we were also waiting to show post play, will show now and reset waitingForPostPlayDocumentUpdateToShowPostPlay.
VUINowPlayingViewController::initializing now playing controller for playback from library.
VUINowPlayingViewController::initializing now playing controller for playback extras.
VUINowPlayingViewController::initializing now playing controller for product page playback.
VUINowPlayingViewController::now playing controller will show product page
VUINowPlayingViewController::sending post play update notification with data: [%@]
VUITVLibraryViewController: Starting to monitor media library initial update
VUITVLibraryViewController: Stopping monitor of media library initial update
VUITVLibraryViewController: Update state changed
VUITVLibraryViewController: Media library is update in progress:%@
VUITVLibraryViewController: Library account changed
VUITVLibraryViewController: Active Account Changed
VUIActionPromise failed
ignore media event for adult content
[%p] - Begining VUIMediaLibraryFetchControllerQueueOperation for controllers: %@
[%p] - Starting fetch controller %@
[%p] - Finished fetch controller %@
[%p] - All fetches finished. Finishing VUIMediaLibraryFetchControllerQueueOperation operation
Initial media category types fetch failed with error (%@)
Contents change media category types fetch failed with error (%@)
VUISettingsManager - checkAndUpdateSettings - nothing has changed
VUISettingsManager - updating user preferences - calling JS
VUIMediaController::finished creating media controller %@ (%@)
VUIMediaController::finished cleaning up %@ (%@)
VUIMediaController::%s will stop media controller (%p: %@)
VUIMediaController::player is not ready to play; will start playback when it's ready.
VUIMediaController::stopping player for media controller: [%@]
VUIMediaController::playback is enabled but we don't have a player, start reloading.
VUIMediaController::no playlist specified.
VUIMediaController::cleaning up everything for %@
VUIMediaController::cleaning up player and playback view controller for %@
VUIMediaController::(%p: %@) showing background image now.
VUIMediaController::(%p: %@) showing playback view now.
VUIMediaController::delay load image with object %@
VUIMediaController::playback state changed for %@, new state %@
VUIMediaController::%@ received stop event because %@ will start playback.
VUIMediaController::%@ shouldIgnorePlaybackStop = %@
VUIMediaController::%@ invalidating waiting for timeout timer in paused state.
VUIMediaController::%@ invalidating playlist loading timer. Going to new state: %@
VUIMediaController::will create a new playback view controller with playlist:<%@>
VUIMediaController::creating player because no player was supplied.
VUIMediaController::creating avPlayerViewController because none was supplied.
VUIMediaController::starting to load the playlist:<%@>
VUIMediaController::completed loading image proxy: [%@], finished: [%@]
VUIMediaController::failed to load image proxy with error: [%@]
VUIMediaController::(%p: %@) scheduling a playlist loading timer with interval: (%f)
VUIMediaController::(%p: %@) loading timer fired, isPlaybackEnabled: (%@)
VUIMediaController::(%p: %@) since playback delay interval is 0.0, loading playlist now.
VUIMediaController::(%p: %@) playback is not enabled, not setting loading timer.
VUIMediaController::canceling loading of current image proxy: [%@], new image proxy to load: [%@]
VUIMediaController::we have a pending playlist, starting loading timer.
VUIMediaController::dispatch_after fired in StateLoadingPlaylist, isPlaybackEnabled: (%@)
VUIMediaController::playback is not enabled yet. Will show playback when it gets enabled.
VUIMediaController::%@ timedout while waiting in pause state, current state %@
VUIPlaybackReporterSession (VPAF) -  Resolved start reason:[%@]. _reason:%@(%@) _autoStart:%@
VUIPlaybackReporterSession (VPAF) -  Resolved stop reason:[%@] _reason:%@(%@) _autoStart:%@
VUIMarkAsWatchRequestManager -- caught exception while getting request operation
Media library changed. Sending notification to JS
VUIUpNextRequestManager -- caught exception while getting request operation
VUIApplicationRouter - VUIApplicationRouter::Authentication requested for action: %@
VUIApplicationViewController: TVApplicationController did finish launching with options: %@
VUIApplicationViewController: No initial view controller is available!
VUIApplicationViewController: TVApplicationController failed to launch with error: %@
VUIApplicationViewController:_startApplicationControllerWithBootURL: Should only be called once!
VUIApplicationViewController:_startApplicationControllerWithBootURL: Requires a non nil bootURL!
Will use aux media item and override playback metadata for adam ID %@ URL %@
Overriding original URL %@ with local URL %@
Overriding original resume time %@ with %@
Overriding skip intro with start %@ duration %@ target %@
Overriding advisory info with name %@ description %@ 
Overriding key %@ with value %@
Ribbon Cell with base: %@, fallback: %@, preview: %@, has_overlayView %d
Adding fetch controllers to queue: %@
Passed fetch controllers to remove from queue: %@
Actually removing fetch controllers from queue: %@
VUIMediaLibraryFetchControllerQueue for %@ has detected playback has begun. Observation = %@
VUIMediaLibraryFetchControllerQueue for %@ has detected playback has ended. Will begin a refetch. Observation = %@
[%@] - Received contents change: %@
Fetch controller (%@) has resumed. Will enqueue a new fetch operation to pick up any changes.
[%@] - Delay contents change operation is active. Waiting for delay to expire
[%@] - Creating delay contents change operation
[%@] - Delay contents change operation has completed. Starting fetching of controllers for revision: %lu
[%@] - Fetching is paused so the fetch has been deferred. It will start when fetching is resumed
Starting bookmark sync with %lu syncs already in progress
Doing dispatch_sync for _batchUpdate
_batchUpdate complete
Starting _keyValueStore sync
_keyValueStore sync complete
Starting UPP sync
UPP sync complete
Calling synchronizeWithCompletion completion handler
After sync completion, %lu syncs are still in progress
VUIWelcomeViewController - Starting GAC patch-up flow
VUIWelcomeViewController - GAC patch-up flow: Successful OptIn: %@ Err: %@
VUIWelcomeViewController - GDPR flow: Sending privacy acknowledgement for TV app to %@
VUIWelcomeViewController - GDPR flow: Successful OptIn: %@ Err: %@
VUIWelcomeViewController - GDPR flow: failed to opt in: %@
VUIWelcomeViewController - GDPR flow: Invalid privacy acknowledgement URL entry found in the bag for key: privacyAcknowledgementUrl
VUIWelcomeViewController - Welcome view has been shown previously, shouldDisplayPrivacy %d
VUIWelcomeViewController - Welcome view needs to be displayed again
Unable to save database: %@
Deleting downloaded video at %@
Unable to delete contents at %@: %@
Removing local file path from database
No file path exists for database item; not deleting downloaded video
Removing offline FPS keys from database and setting state to NotDownloaded
Unable to remove media for databaseID %@ since it doesn't exist in database
Error deserializing database file! Database URL: %@, Error: %@
Error loading database URL: %@
VUIAppDocumentUpdateEvent: Can't coalesce events as the descriptors don't match. Events: %@, %@
VUITVLibraryEpisodeListCell - Image view is nil! There is no image element.
VUINowPlayingViewModel::maximum auto playable items:(%lu) current count:(%lu)
VUIRemoveFromPlayHistoryRequestManager -- caught exception while getting request operation
Starting connection to %@
Connect attempt finished to %@ (Success = %@)
Connection progress to %@ (Progress = %@)
VUIJSNetworkInterface - Begin initconfig
VUIJSNetworkInterface - initconfig: WLK returned
VUIJSNetworkInterface - initconfig success.
VUIJSNetworkInterface - initconfig error. %@
VUIJSNetworkInterface - End initconfig
VUIJSNetworkInterface - Request start: %@ %p
WLKUIRequest.total
WLKUIRequest.bridge
VUIJSNetworkInterface - Request end: %@ %p
We are currently being presented = %@. Aborting presentation of %@.
Weird situation. We are curently being presented by %@ not the specified navigation controller: %@
%@ is already presenting something. Dismissing...
%@ is already being presented by %@. Dismissing...
VUIActionRemoveFromPlayHistory failed for itemID [%@]
Updating MPMediaItem with latest rental playback start date %@.  Previous date was %@
Not updating MPMediaItem rental playback start date since it hasn't changed.  Latest rental playback start date is %@, existing date is %@
Unable to locate MPMediaItem in order to update rental playback start
Unable to update MPMediaItem rental playback start date since start date from TVPMediaItem is nil
Presenting app installation flow for channel ID: %@
Beginning app installation flow for channel ID: %@
Completed app installation flow for channel ID: %@, success: %d isHeadless:%d
UPDATE_EVENTS: MONITOR: Playback activity notification received but we ought to ignore it.
UPDATE_EVENTS: MONITOR: Playback activity notification received but app is backgrounded so will delay processing
UPDATE_EVENTS: MONITOR: Removed observer [%p] since there were no event descriptors
UPDATE_EVENTS: MONITOR: Added observer [%p] for event descriptors [%@]
UPDATE_EVENTS: MONITOR: Active timers for event descriptors [%@]
UPDATE_EVENTS: MONITOR: Removing observer [%p]
UPDATE_EVENTS: MONITOR: App will enter foreground notification received
UPDATE_EVENTS: MONITOR: App did enter background
UPDATE_EVENTS: MONITOR: Media Library contents did change notification received
UPDATE_EVENTS: MONITOR: Settings did change notification received
UPDATE_EVENTS: MONITOR: App library did change notification received
UPDATE_EVENTS: MONITOR: Purchase did finish notification received for canonical [%@]
UPDATE_EVENTS: MONITOR: Subscription did finish notification received with error [%@]
UPDATE_EVENTS: MONITOR: Entitlements did change notification received
UPDATE_EVENTS: MONITOR: UTSK did change notification received
UPDATE_EVENTS: MONITOR: Post play did change notification received [%@]
UPDATE_EVENTS: MONITOR: Upnext request did finish notification received [%@]
UPDATE_EVENTS: MONITOR: Play history update notification received
UPDATE_EVENTS: MONITOR: Sports favorites request did finish notification received [%@]
UPDATE_EVENTS: MONITOR: Remove from play history request did finish notification received [%@]
UPDATE_EVENTS: MONITOR: Clear from play history request did finish notification received [%@]
UPDATE_EVENTS: MONITOR: Playback activity notification received but within debounce window so ignoring the event
UPDATE_EVENTS: MONITOR: Playback activity notification received
UPDATE_EVENTS: MONITOR: Playback activity begin notification received
UPDATE_EVENTS: MONITOR: Playback activity end notification received
UPDATE_EVENTS: MONITOR: Active account did change notification received
UPDATE_EVENTS: MONITOR: Restrictions did change notification received
UPDATE_EVENTS: MONITOR: Preferred video format did change notification received
UPDATE_EVENTS: MONITOR: Clear play history notification received
UPDATE_EVENTS: MONITOR: Location authorization did change notification received
UPDATE_EVENTS: MONITOR: Notifying observer [%p] of refresh event: [%@]
UPDATE_EVENTS: MONITOR: Ignoring observer [%p] for event: [%@]
UPDATE_EVENTS: MONITOR: Notifying observer [%p] of event: [%@]
VUIVPPAManager - User not logged in. Cannot continue.
VUIVPPAManager - No channel.
VUIVPPAManager - %@ does not required vppa prompt.
VUIVPPAManager - bulk consent is due
VUIVPPAManager - User has explicitly denied consent for %@
VUIVPPAManager - %@ is not consented
VUIVPPAManager - Failed to fetch init config: %@
VUIVPPAManager - Status: %@
VUIVPPAManager - Present consent screen
VUIVPPAManager - Adding VPPA channels
VUIVPPAManager - Adding Eligible channels
VUIVPPAManager - Received access result: %lu
Refresh events must specify a time in seconds
Refresh events must specify a non zero delay in seconds
Purchase events must specify the canonical ID
Feature [%@] activated.
Boundary time observer triggered for feature activation - %@
Is elapsed time within feature time window - %@
There's a dependent feature already active of this feature: [%@]
TV advisory deactivation timer fired.
Boundary time observer triggered for feature deactivation - %@
Will activate timer triggered feature: %@
Unable to parse certificate URL from request %@
Error fetching token.  Stopping playback: %@
Unable to parse asset ID data from key URI %@
Unable to create certificate URL from key URI %@
Unable to create key server URL from key URI %@
Unable to parse host or company ID from key URI %@
Key URI %@ path %@ should have 3 components but has %lu
Unable to create key URL components for key URI %@
Key URI is nil
Loading certificate data from %@
Received response for certificate from %@
Raw certificate data has valid length, but decoded data has zero length.  %@
Certificate data has zero length.  %@
Unable to retrieve certificate because of http status %ld %@
Will retry certificate fetch after random exponential backoff delay of %f seconds
Loading has been cancelled; cancelling cert fetch retry
Post body is not valid JSON
Sending stop request
Unable to create URL request
Unable to send stop request since stop server URL is nil or no asset ID is available
Sending token request
Token request received with status %ld
Response has zero length
Token server URL is nil
Unable to parse key server URL from request %@
Loading key data from %@
Received response from %@ for %@
Raw key response data has valid length, but decoded data has zero length
Key response data has zero length.  %@
Unable to load key response data because of http status %ld %@
Will retry key response fetch after random exponential backoff delay of %f seconds
Request has been cancelled; cancelling key response retry
Stopping playback since key response data cannot be retrieved
Received error diagnostics:
%@: %@
Unable to parse error diagnostics from response
VUIPlaybackReporterVPAF - Begin flushing events
VUIPlaybackReporterVPAF - Done flushing events
VUIPlaybackReporterVPAF - Reporting seek event stop: type:%@ reason:%@ id:%@
VUIPlaybackReporterVPAF - Reporting play event start: type:%@ reason:%@ id:%@
VUIPlaybackReporterVPAF - Reporting seek event start: type:%@ reason:%@ id:%@
VUIPlaybackReporterVPAF - Report play event stop: type:%@ reason:%@ id:%@
VUIPlaybackReporterVPAF - Session metrics:%@
VUIPlaybackReporterVPAF - Using topic override: %@
VUIPlaybackReporterUTS - UTS reporting disabled for adult content
VUIPlaybackReporterUTS - UTS reporting disabled for trailers/previews
VUIPlaybackReporterUTS - VOD report
VUIPlaybackReporterUTS - [CompletionState] State was specified: Done
VUIPlaybackReporterUTS - [CompletionState] State was specified: InProgress
VUIPlaybackReporterUTS - [CompletionState] State was derived from metadata: %@
VUIPlaybackReporterUTS - [CompletionState] HLS: %@ Threshold: %@ Elapsed: %@
VUIPlaybackReporterUTS - [CompletionState] State unknown
VUIPlaybackReporterUTS - Linear report
VUIPlaybackReporterUTS - Playback summary is nil
VUIPlaybackReporterUTS - Report sent for [%@] [%@] %@
Applicaiton script download manager uses custom URL cache: mem capacity %lu disk capacity %lu
Prefetch application script from: %@.
Return in-memory application script for: %@.
Already downloading application script from: %@. Add completion block to queue.
Download application script from: %@.
Successfully downloaded application script from: %@.
Failed to download application script from: %@. status code:%lu -- %@
Applying Delete Change: Deleting Sections At: %@
Applying Delete Change To Section: %lu. Delete Items At: %@
Applying Insert Change: Inserting Sections At: %@
Applying Insert Change To Section: %lu. Insert Items At: %@
Applying Move Change To Section %lu to %lu
Applying Move Change To Item %@ to %@
Applying Update Change: Updating Sections At: %@
Applying Update Change To Section: %@. Reloading Items At: %@
Unable to generate lease renewal request
Token failure acquiring lease
Failed to acquire lease.  Trying again.
Retrying lease start after authentication
Lease authentication failed
Unable to retrieve url from bag for key [%@]
Lease agent response with status %@
Sorting will be performed by MPMediaLibrary using %@ (%@)
Filtering is not supported for keypath %@. Predicate cannot be satisfied by the MPMediaLibrary directly
Sorting media entities returned from MPMediaQuery
Processing range on media entities returned from MPMediaQuery
Unable to create VUIMediaCollection for MPMediaItemCollection: %@
Evaluating for VUIMediaItemTraitStopWhenPausedForTooLong.  Rental expiration is %@
Rental is not expired and not expiring in the next hour.  Will stop after being paused for too long to allow other devices to play rental.
Rental is either expired or expiring in the next hour.  Will not stop after being paused for too long
Skipping bookmark sync since it was done recently
Playback type is HLS
Setting playbackURL to %@
Waiting for redownload to complete before continuing
Not waiting for redownload to complete before continuing
Both HLS and CRABS URLs are available
Using CRABS URL since Quick Start is Off
Only HLS URL is available (CRABS is missing)
Only CRABS URL is available (HLS is missing)
Setting playback type to %@
Using dispatch group to notify that preparation is complete
Preparation completed immediately, not using dispatch group
rentalInformation: %@ error: %@
Expiration date: %@ which is %f seconds from now
SSRentalInformationRequest response is missing playbackStartDate
SSRentalInformationRequest response is missing playbackPeriod
Waiting for rental checkout to complete before calling prepareForPlaybackInitiationWithCompletion completion handler
Not performing rental checkout since it's not required
storeItemDict is nil
Error performing redownload: %@
Skipping redownload since a store item purchase dictionary was provided
Starting redownload
Redownload complete
Empty purchase response
Unable to check out rental since dsid is invalid
Unable to check out rental since rental ID is invalid
Checking out rental
Rental checkout complete
Rental checkout failed with error: %@
Setting media item's expiration date to %@.
Setting media item's playback start date to %@.
*** hlsPlaylistURL was not provided.  This will negatively impact playback startup time.
*** contentRatingRank was not provided.  This will negatively impact playback startup time.
*** rentalID was not provided.  This will negatively impact playback startup time.
Initializing playback type to %@
No assets available in store item dictionary.  Returning store item dictionary itself.  Flavor is %@
Preferred CRABS asset flavor: %@
Unable to check in rental since dsid is invalid
Unable to check in rental since rental ID is invalid
Checking in rental
Rental checkin complete
Rental checkin failed with error: %@
Checking for orphaned rentals.  Making request to pendingSongs
pendingSongs request complete
Got list of rentals from store but a rental is now checked out and being played.  Will check when rental is done playing.
Checking in orphaned rental with adam ID %@ [%@]
Didn't find any rentals that need to be checked in
Not checking for orphaned rentals since a rental is checked out and being played.  Will check when rental is done playing.
Not checking for orphaned rentals since it's already in progress
Not checking for orphaned rentals since it's already completed
pendingSongs request failed with error %@.
Unable to check for expired rentals since dateOfLastRentalExpirationCheck or currentDate is nil
Found %lu rentals that have expired since expiration handling
Invalidating existing expiration timer
Found %lu rentals that will expire in the future
Found rental that will expire on %@
Scheduling expiration timer for earliest expiration: %@
Unable to determine earliest expiration date.  Not scheduling expiration timer
VUIActionItunesExtras::Failed to build punch out url
VUIActionItunesExtras::open application returned with error: %@
Media entity fetch failed with error (%@) for requests: %@
VUIActionPlay - Failed to punch out TV App -- %@
Cancelling download
Removing download
Updated state for MediaItemAssetController = %@
VUIActionCommerceTransaction - PurchaseFlow response: %@
VUIActionCommerceTransaction - PurchaseFlow error: %@
Failed to acquire item [%@] error [%@] response [%@]
VUIActionCommerceTransaction - SubscriptionFlow response: %@
VUIActionCommerceTransaction - SubscriptionFlow error: %@
VUIActionCommerceTransaction - SubscriptionFlow successfully refreshed config
VUIActionCommerceTransaction - SubscriptionFlow error refreshing config: %@
Failed to acquire subscription with error [%@] response [%@]
VUIAppDocumentServiceViewController: (%@): Created manual update context for context dictionary (%@) and element name (%@)
VUIAppDocumentServiceViewController: (%@): Unable to create update update context for context dictionary (%@) and element name (%@)
UPDATE_EVENTS: [%@] View will appear, starting document updates for any deferred update events if possible
UPDATE_EVENTS: [%@] View will disappear, deferring automatic document updates
UPDATE_EVENTS: [%@] View controller is being dismissed or popped off the nav stack. Will cancel any current document updates and unregister for document update events
UPDATE_EVENTS: [%@] Received new document update event [%@]. Will try to start document updates
UPDATE_EVENTS: [%@] Document update request [%p] for view element [%p] has completed with status [%lu] errorDictionary [%@]
UPDATE_EVENTS: [%@] Document will update the view elements after serviceRequest:didCompleteWithStatus: event
UPDATE_EVENTS: [%@] Update request [%p] has replaced the entire document.
UPDATE_EVENTS: [%@] Document creation request has completed with status [%lu] errorDictionary [%@]
UPDATE_EVENTS: [%@] Document has been updated
UPDATE_EVENTS: [%@] Sending update request [%p] for view element [%p] with context dictionary: %@ View Element [%p %@]
UPDATE_EVENTS: [%@] Cancelling update request [%p] for view element [%p]
VUIAppDocumentServiceViewController: (%@): _performNextDocumentUpdateIfNeeded: Update context has an update request requiring processing View Element [%p]
VUIAppDocumentServiceViewController: (%@): _performNextDocumentUpdateIfNeeded: Current update context is complete. Will check to see if any deferred events need to be processed
VUIAppDocumentServiceViewController: (%@): _performNextDocumentUpdateIfNeeded: No update context found. Will check to see if any deferred events need to be processed
UPDATE_EVENTS: [%@] DocumentUpdatesForDeferredEvents: Bailing coz currently deferring event processing
UPDATE_EVENTS: [%@] DocumentUpdatesForDeferredEvents: Bailing coz currently processing an update context [%p]
UPDATE_EVENTS: [%@] DocumentUpdatesForDeferredEvents: Bailing coz no more events to be processed
UPDATE_EVENTS: [%@] DocumentUpdatesForDeferredEvents: New automatic update context [%p] has been created for events [%lu %@] 
View Elements [%lu %@]
UPDATE_EVENTS: [%@] Registering Event Descriptors [%lu %@] 
 View elements [%lu %@]
UPDATE_EVENTS: [%@] unregistering document for update events
[%@] - Received pause request while fetching. Will cancel fetch and move to paused state
[%@] - Received pause request while in the ready state. Will move to paused state
[%@] - Received pause request while already in the puased state. Incremented paused count [%lu]
[%@] - Returning fetch controller to the ready state
[%@] - Decremented pause count for fetch controller. Decremented Count [%lu]
[%@] - Received resume request when we are in the paused state but we have a zero pause count! Ignoring
[%@] - Ignoring resume request for fetch controller as it is fetching
[%@] - Ignoring resume request for fetch controller as it is in the ready state
[%@] - Calling completion handler
[%@] - Ignoring begin fetch request as the controller is paused
[%@] - Received begin fetch request for a controller that is already fetching. Will ignore
[%@] - Received begin fetch request for a controller that is in the ready state. Will start new fetch if required
[%@] - Cancelling fetch
[%@] - Starting fetch
[%@] - New fetch not required as the library contents have not changed
[%@] - Fetch completed. Will process results and move to ready state
[%@] - Fetch completed but was cancelled. Will not process results but will remain in current state (%@) and call completion handler
VUIPlaybackReporterVPAFPlaylist - Media item lacks vpaf dictionary. Will not track.
VUIPlaybackReporterVPAFPlaylist - Media item has vpaf dictionary. Will track. %@
VUIPlaybackReporterVPAFPlaylist - Feature metrics: %@
VUIPlaybackReporterVPAFPlaylist - Parsed items: %@
VUIPlaybackReporterVPAFPlaylist - Playlist metrics: %@
Could not read processStartTime
GDPR init: Consented %d
VUIMetricsController: received JS event type:[%@], pageContext:%@
Metric not recorded - no activeMetricsKit
VUIMetricsController: received invalid event type:[%@] for data:%@
VUIMetricsController: Metrics error: %@
No perf event - GDPR not consented
No log event - GDPR not consented
WLK fetch error %@
GDPR update: consented %d
VUIMetricsController: Unserializable event data: [%@] error:[%@]
Recorded Event [%@]
========== %@ Metrics Event ========== (limited fields):%@
VUIActionUpdateSportsFavorite failed sportsLeagueID [%@] fav [%@]
VUIUpNextOverlayView::setting auto play animation with duration:(%ld seconds)
VUIPreflightManager::validating restrictions for playback.
VUIPreflightManager::restriction validation output: %@
VUIPreflightManager::either content rating is nil or not a number: %@
VUIPreflightManager::validating restrictions for purchase.
VUIPreflightManager::media is not allowed by settings/profile, showing alert.
VUIMPHomeShareMediaLibraryManager: Shared MP media libraries did change: %@. latestHomeShareMediaLibraries: %@, Current Libraries: %@
VUIMPHomeShareMediaLibraryManager: Updated home share media libraries : %@ using change set: %@
VUIActionPunchout::open application returned with error: %@
VUIActionPunchout::either punchoutURL or bundleID is nil; URL: [%@] bundleIdentifier:[%@]
Error making purchse: no buy params specified in request
Error making purchse: [%@] plist error [%@] Was cancelled [%d]
Time to process buy in ms [%ld]
%s: failed to get boot URL, error %@
VUIActionMarkedAsWatched failed for itemID [%@] type [%@] channel [%@]
VUISportsScoreboardManager - _getScoreboardUpdates update in progess, request ignored
VUISportsScoreboardManager - _getScoreboardUpdates numberOfCanonicalIds: %lu
VUISportsScoreboardManager - %@
VUISportsScoreboardManager - _resetTimer
VUISportsScoreboardManager - _invalidateTimer
VUIStoreAuxMediaItem deallocated
Keeping media item alive until key response(s) are received
Received response for key request(s)
overriding requiresLinearPlayback to YES due to TVPMediaItemTraitDisableScrubbing
setting requiresLinearPlayback to %@
Either media info is invalid or its intent is not fullscreen.
Picture in picutre %@ requested with reason:<%@>
stopAllPlayback called
Player scan mode: %@
Returning %@
Received %@
Returning %@ in %@
picture in picture did become active.
did destroy picture in picture.
picture in picture controller [%@] did request player to %@
Muting picture in picture playback.
Unmuting picture in picture playback.
Picture in picture %@ requested but there's no picture in picture active.
Playback state did change to %@
Playback error ocurred %@
Cannot update features because feature monitor is not valid.
Stopping playback since playback has been paused for too long.
Stopping playback since app has been backgrounded for too long
is post play allowed:<%@>
configured post play feature:<%@>
configured post play bootstrap feature:<%@>
bootstrapping post play so ignoring showing post play.
Will show post play so scheduling dismiss timer with interval:[%f]
Post play will hide; invalidating dismiss timer.
Scheduling a post play dismiss timer with interval:[%f]
Post play dismiss timer fired.
feature did change state: (%@) but we don't have playback info.
popping now playing view controller
created a new player: (%@)
created a new avPlayerViewController: (%@)
transferring avPlayerViewController: (%@) from fullscrren --> pip.
fullscreenPlaybackInfo is nil when going into pip.
transferring avPlayerViewController: (%@) from pip --> fullscreen.
successfully transferred pip to fullscreen, notifying avKit.
pipPlaybackInfo is nil when restoreing from pip.
unable to restore AVPlayerViewController. NavigationController: (%@)
adding stop when paused too long feature. Will stop after %f minutes of being paused
removing stop when paused too long feature
starting to swap fullscreen <--> pip.
preventing fullscreen media controller to stop before swapping pip <--> fullscreen.
muting fullscreen playback.
preventing fullscreen media controller to stop before restoring picture in picture while playing dual stream.
Stopping playback because picture in picture is ending without going back to fullscreen playback
cleaning pip playback because it is stoping.
finished swapping fullscreen <--> pip.
pausing player since application was backgrounded while not doing external playback
adding stop when backgrounded too long feature.  Will stop after %f seconds of being backgrounded
removing stop when backgrounded too long feature
post play UI has timedout and playback state is [%@].
since playback has already stopped, cleaning up fullscreen playback now.
deactivating post play UI.
Media item entity types fetch failed with error (%@)
Applying Delete Change. Deleting Rows At: %@
Applying Insert Change. Inserting Rows At: %@
Applying Move Change To Row %@ to %@
Applying Update Change To Section: %@. Reloading Rows At: %@
Updated state for MediaItemCollectionAssetController = %@
[VUIMediaEntitiesFetchOperation]: Media entity subtypes do not match for fetch filters. No entities will be returned. (%@)
[VUIMediaEntitiesFetchOperation]: Media entity subtype is not valid!: %@
[VUIMediaEntitiesFetchOperation]: Media categories do not match for fetch filters. No entities will be returned. (%@)
[VUIMediaEntitiesFetchOperation]: Media category is not valid!: %@
[VUIMediaEntitiesFetchOperation]: Media collection types do not match for fetch filters. No entities will be returned. (%@)
[VUIMediaEntitiesFetchOperation]: Media collection type is not valid!: %@
?TTTTTT
?wwwwww
?333333
f@333333
.@ffffff
?333333
p@q=
?UUUUUU
333333
?333333
@333333
t@_)
:F@
p@333333
?333333
?888888
?TTTTTT
?xxxxxx
?======
?PPPPPP
Q0>#
VUILocalizationManager
VUIAppDocumentAutomaticUpdateContext
VUIAppDocumentUpdateContext
NSObject
VUIAppDocumentManualUpdateContext
VUIAppDocumentPurchaseEvent
NSCopying
VUIAppDocumentPostPlayUpdateEvent
VUIMPMediaEntitiesFetchOperation
VUIAppInstallerViewController
VUIOpenURLHandler
VUIStoreFPSKeyLoader
VUIMediaEntitiesFetchController
VUIMarkAsWatchedButton
VUIExtrasManager
TVApplicationControllerDelegate
UIViewControllerTransitioningDelegate
MCProfileConnectionObserver
VUINavigateToUpNextHandler
VUITVButtonHandler
VUIMediaLibraryManager
VUIHomeShareMediaLibraryManagerDelegate
VUIFavoritesRequestManager
VUITopAlignedCollectionViewFlowLayout
VUIAppNavigationController
VUIMediaLibraryApplicationController
VUIScopedBackgroundTask
VUIMediaEntityFetchResponseChangesOperation
VUITVLockupViewCell
VUIRentalExpirationLabelDelegate
VUILibraryCategoryMenuViewModel
VUIMediaEntitiesFetchControllerDelegate
VUIAction
VUIMediaTagsViewHelper
VideosUI
VUIShelfView
VUITextBadgeLayout
VUIJSVideosNativeInterface
JSExport
VUISportsOverlayView
VUIScorecardViewDelegate
_TVImageSampling
VUIOverlayWithMaterialRendering
VUISportsScoreboardManagerDelegate
VUIActionUpdateUpNext
VUIOfferCell
VUIMediaLibraryUtilities
VUIAppsGridViewController
UICollectionViewDataSource
UICollectionViewDelegate
UIScrollViewDelegate
VUINowPlayingHudButtonsLayout
VUINowPlayingHudMetaDataViewLayout
VUINowPlayingHudViewLayout
TVMediaProviding
TVObservable
VUIUpNextBannerViewController
__TVShelfViewControllerDelegate
TVAppTemplateImpressionable
TVRowHosting
VUIUpNextBannerView
VUIMPShowMediaCollection
VUIErrorTemplateViewController
VUIIKPlaylistElementToMediaItemsMapper
VUIErrorLayout
VUIBadgeViewWrapper
VUIOverlayView
VUIPlaybackReporter
VUIMPMediaItemEntityTypesOperation
VUIMediaEntityGroup
VUIDocumentPreFetchedData
VUIDocumentPreFetchedDataPostPlay
VUIAppInstallConfirmationView
VUISportsProductBannerLayout
VUINowPlayingViewController
TVMediaControllerDelegate
VUIPostPlayControllerDelegate
TVMediaControllerHosting
VUIAppleTVChannelLogoLayout
VUIVisualEffectLabel
VUIMPMediaEntityImageLoadParamsCreating
VUIPlistMediaEntityImageLoadParamsCreating
VUIMediaEntityImageLoadParamsFactory
VUILibraryMetrics
VideosJSAdditions
VUIDebugMetricsEventControllerGenerator
VUITVLibraryViewController
VUIMenuCollectionViewControllerDelegate
VUILibraryCategoryMenuViewModelDelegate
VUIAppSpinnerView
VUIMediaEntityFetchRequest
VUITVActionHandlerInfo
VUITVButtonListener
VUIMPMediaItemAssetControllerManager
VUIPlistMediaLibraryIdentifier
VUIMediaLibraryIdentifier
VUIActionPromise
VUIAccessView_iOS
TVCarouselViewDataSource
VUIAppDocumentUpdateEventDescriptor
VUIMetricsMediaEvent
VUIPlistMediaDatabaseItem
VUIPlistMediaEntitiesFetchOperation
VUIMediaLibraryFetchControllerQueueOperation
VUIDebugMetricsEventCell
VUIMediaTagsViewLayout
VUIMediaItemEntityTypesFetchController
VUIDebugMetricsDictionaryViewController
VUIFeedbackTableLayout
VUIFeedbackLayout
VUIPlistMediaEntityImageLoadOperation
VUIJSMediaEntity
VUIJSMediaEntityExport
VUILoadingView
VUISettingsManager
VUIOfferView
VUILibraryStackView
VUILogObjectManager
VUIMediaController
TVMediaController
VUIUpNextOverlayLayout
VUIStillWatchingAlertPresenter
VUILibraryStackViewController
VUITextLayout
VPAF
VUIDebugDefaults
VUIAuthenticationManager
VUIOpenURLRouterDataSource
VUIiTunesKeyValueStoreSyncAPI
VUIiTunesKeyValueStoreSyncItem
VUIiTunesKeyValueStoreSyncResponse
VUISearchAppDocumentServiceViewController
VUIDebugMetricsTermCollector
VUIDebugCollectionHeaderView
VUIDebugCollectionViewDefaultsCell
UITextFieldDelegate
VUIDebugCollectionViewNavigationCell
VUIJSAccountChannels
VUIJSAccountChannelsInterface
VUIImageLoadContext
VUIImageLoader
TVImageLoader
VUIMenuCollectionViewCell
VUIMediaEntityPropertyDescriptor
VUITVShowDetailPageEpisodeShelfViewController
UICollectionViewDelegateFlowLayout
VUITVLibraryEpisodeListCellDelegate
VUIEpisodeLockupFloatingContentView
_UIFloatingContentViewDelegate
VUIViewElementDataSource
VUIMarkAsWatchedRequestManager
VUITVGridCollectionViewController
VUICardView
VUIJSMediaPlayer
VUIOrderedItemsMapDelegate
VUIJSMediaPlayerLibraryExport
VUIMediaEntityAssetControllerState
VUIProductShowcaseViewController
VUIRentalExpirationLabel
VUIUpNextRequestManager
VUITVEpisodeInformationView
VUIAppInstallConfirmationViewController
VUILibraryAlertView
VUIAppLoadingViewController
DetailCell
VUIDebugMetricsArrayViewController
VUIApplicationRouter
VUIPlistMediaDatabaseShow
VUIAppInstallLockup
VUIMenuSectionHeaderCollectionViewCell
VUIMPMediaEntityIdentifier
VUIMediaEntityIdentifierInternal
VUIMediaEntityIdentifier
VUIApplicationViewController
_TVInterfaceCreatingPrivate
TVInterfaceCreating
UIGestureRecognizerDelegate
VUIMediaInfo
MPMediaItemAdditions
VUIMediaItemAdditions
IKPlaylistElementAdditions
BackgroundImage
VUIProductSectionInfoViewModel
VUIAppDocumentRemovePlayHistoryEvent
VUIPlistMediaEntityIdentifier
VUIAppDocumentRefreshEventDescriptor
VUICollectionViewRibbonCell
VUIActionLocationPrompt
VUIMediaLibraryFetchControllerQueue
VUINowPlayingObserverDelegate
VUINowPlayingSkipButtonLayout
VUIDebugMetricsImpression
VUIMPMediaLibraryIdentifier
VUIProductSectionView
_VUIAccessViewController
VUIAccessViewController
VUIDebugMetricsImpressionTableViewCell
VUIMediaEntityPreflightManager
VUIProductBrowserViewCell
VUIProductBrowserViewController
VUIScorecardView
VUISportsScoreboardViewModel
VUIMediaItem
VUIAirTrafficController
VUIFeedbackViewCell
VUIUPPUpdateRecord
VUIBookmarkService
VUIProductView
VUIProductBannerViewController
VUIAppDocumentRefreshEvent
VUIOverlayLayout
VUIImageResourceMap
VUIJSAMSBagInterface
VUIJSAMSBagDelegate
VUIMPSeasonMediaCollection
VUIGDPRPresentationManager
VUIPlistMediaDatabase
VUILabel
VUILabelTopMarginCalculationProtocol
VUIOfferLayout
VUIAppDocumentModifiedFavoritesEvent
VUITVLibraryEpisodeListCell
TVAuxiliaryViewSelecting
VUIBuyButtonLockup
VUIEditorialCollectionViewCell
VUIFavoriteBannerCollectionViewCell
VUIMPMediaItemCloudDownloadController
MPStoreDownloadManagerObserver
VUIAppStyleFactory
VUINowPlayingViewModel
VUIMediaLibraryContentsChange
VUIChannelBannerViewFactory
VUICloudClient
VUIDirectScrollCollectionView
VUIUpNextButton
VUIUpNextButtonProtocol
VUIActionAppPunchout
VUIPlistMediaDatabaseEntity
VUIRemoveFromPlayHistoryRequestManager
VUIJSSportsInterface
VUIMPMediaLibraryConnectOperation
VUICardCollectionViewCell
VUICanvasAppDocumentServiceViewController
VUIMediaCollection
Factory
VUIJSSettingsInterface
VUIMediaEntitiesFetchControllerResult
VUIJSNetworkInterface
VUIJSURLRouterInterface
VUIMPSeasonMediaCollectionIdentifier
VUINowPlayingHudView
VUITransactionButton
VUIWatchNowTemplateController
VUIExtrasApplicationController
VUIPlaybackUtilities
VUIActionRemoveFromPlayHistory
VUIAccessView_tvOS
TVCarouselViewDelegate
VUIContentMetadata
VUIMPDeviceMediaLibrary
VUIAppDocumentUpdateEventStore
VUIFocusableTextView
VUIHomeAppDocumentServiceViewController
VUIMediaEntitiesToGroupsValueTransformer
VUIActionTypeGDPR
VUIMediaItemEntityTypesFetchResponse
VUINowPlayingInfo
VUISportsProductBannerViewController
VUIRouterDataSource
VUIDebugMetricsImpressionViewController
VUIAppInstallCoordinator
VUIUpNextStateView
VUIUpNextButtonProperties
VUIAppIconImageService
VUIPlistSeasonMediaCollection
VUIFeedbackView
VUIMPMediaCollection
VUIExtrasDescriptionCell
_VUIAppDocumentUpdateEventObserverContext
VUIAppDocumentUpdateEventMonitor
VUIVPPAManager
VUIChannelBannerLayout
VUIDebugMetricsEventListViewController
VUIVideoAdvisoryImageInfo
VUIVideoAdvisoryLogoImageDownloader
VUIMediaTagsImageHelper
VUIMediaEntityKind
VUIUIStackView
VUIMPMediaItemDownloadControllerState
VUINowPlayingHudMetaDataView
VUIMPMediaEntityImageLoadOperation
VUIMediaLibraryFetchMediaEntitiesOperation
VUINowPlayingMonitorBoundaryTimeObserverInfo
VUINowPlayingFeature
VUINowPlayingUserTriggeredFeature
VUINowPlayingTimeBoundFeature
VUINowPlayingHybridFeature
VUINowPlayingTVAdvisoryFeature
VUINowPlayingFeatureMonitor
TVMediaPlaybackManagerDelegate
VUIISMediaItem
TVPContentKeyLoading
VUIPlaybackReporterVPAF
VUICurrentSiriNavControllerContainer
VUIMediaEntitySortIndex
VUIProductMetadataLayout
VUIProductInfoAiringLayout
VUIPlistMediaItem
VUIJSNotificationCenter
WLKNotificationCenterDelegate
VUIMediaTagsView
VUIMenuDataSource
VUISeparatorView
VUIUtilities
VUIViewSpacer
VUIGradientMaskProperties
VUIPostPlayTemplateController
VUIDocumentDataSource
VUIDebugMetricsEvent
VUIMetricsPageEventData
VUILabelFactory
VUIPlaybackReporterUTS
VUIMediaEntityFetchResponseChanges
VUIFeedbackTableView
VUIFeedbackTableViewModel
VUITVDescriptiveAlertController
VUITVDescriptiveAlertView
VUIMPMediaLibrary
VUIProductBannerViewFactory
VUIPostPlayDocumentServiceViewController
VUIMPMediaItem
VUIQueryDataSource
VUIAppScriptDownloadManager
VUICollectionView
VUINowPlayingConfig
VUIPostPlayConfig
VUIFeaturesConfiguration
VUITVEpisodeInformationLayout
VUIProductMetadataView
VUIExtrasInfo
VUIVideosPlayable
VUIPresenterController
VUIMediaItemCredits
VUIPageHeaderView
VUIOverlayViewFactory
VUIMediaLibraryOperation
VUIMediaEntityType
VUISportsProductBannerView
VUIVideoLeaseAgent
VUIMPMediaEntitiesSingleFetchOperation
VUIMediaAPIClient
VUIStoreMediaItem_tvOS
VUIVideoLeaseAgentDelegate
VUIStoreFPSKeyLoaderDelegate
VUIButtonLayout
VUIUniversalPlaybackPositionClient
DataSource
SBKUniversalPlaybackPositionDataSource
VUIUniversalPlaybackPositionTransactionContext
SBKUniversalPlaybackPositionTransactionContext
VUIUniversalPlaybackPositionRecord
SBKUniversalPlaybackPositionMediaItem
VUIUPPClientState
VUIMediaLibrary
VUIFeaturedCellOverlayLayout
VUIMediaCategory
VUIAppDocumentPurchaseEventDescriptor
VUIRentalExpirationMonitor
VUIVideoAdvisoryLegendView
VUINowPlayingObserver
VUINowPlayingObservation
VUIMediaCollectionsToRecentlyAddedToMediaCollectionsValueTransformer
VUIActionItunesExtras
VUICastInfoLayout
VUIComingSoonCardLayout
VUIProductBannerLayout
VUISBGraphics
VUISBIconProgressView
_VUISBIconProgressTransition
_VUISBInstallProgressStateTransition
_VUISBIconProgressNoneWaitingStateTransition
_VUISBIconProgressWaitingLoadingStateTransition
_VUISBIconProgressLoadingNoneStateTransition
_VUISBIconProgressPausedTransition
_VUISBIconProgressFractionTransition
VUISportsOverlayBackgroundMaterialImagesOperation
VUIPlistMediaDatabaseSeason
VUIButton
VUIChannelBannerView
VUIVideoAdvisoryViewLayout
VUIMediaEntitiesFetchControllerOperation
VUIActionPlay
VUITextBadgeView
TVMLKitAdditions
VUITVShowDetailPageViewController
VUITVShowDetailPageHeaderView
VUITVShowDetailPageViewModel
VUISportsOverlayLayout
VUIMPMediaItemAssetController
VUIMPMediaItemDownloadControllerObserver
VUIMediaEntityAssetController
VUIScoreboardRowLayout
VUIScoreboardLayout
VUITransactionOffer
VUIActionCommerceTransaction
VUIPlistMediaEntityImageLoadParams
VUIImageLoadParams
VUIOverlayBlurVisualEffectView
_VUIBlurEffect
VUIBookmarkKey
VUIDebugContainerView
VUIDebugViewController
VUIAppDocumentServiceViewController
IKUpdateServiceRequestDelegate
IKServiceRequestDelegate
VUIAppDocumentUpdateEventMonitorObserving
VUIMediaItemEntityTypesFetchControllerResult
VUIOrderedItemsMap
VUIImageView
VUIPlistMediaLibrary
VUIPlistMediaItemEntityTypesOperation
VUIFocusableCollectionViewCell
VUIMediaLibraryFetchController
VUIPlaybackReporterVPAFPlaylistItem
MTMediaPlaylistItem
VUIPlaybackReporterVPAFPlaylist
MTMediaPlaylist
VUIAppDocumentCanonicalServiceViewController
VUIiTunesKeyValueStoreAPIUtils
VUIPerfMetricsAppLaunchController
VUIMetricsController
VUIMPHomeShareMediaLibrary
VUIHomeShareMediaLibrary
VUIRatingToResourceMapper
VUIErrorView
VUIJSPPTInterface
VUIPPTDelegate
VUIMLFactory
VUILibraryFetchControllerViewController
VUILocalContentProtocol
VUIActionUpdateSportsFavorite
VUIMLUtilities
VUICircularProgress
VUIDebugViewDefaults
VUIDebugViewDataSource
VUIImageLoadParamsOperation
VUIImageLoadingOperation
VUIApplicationController
IKAppContextDelegatePrivate
IKAppContextDelegate
VUIStoreAcquisitionProperties
VUIMediaEntity
VUIImageProxyAnimator
VUINowPlayingTimerTriggeredFeature
VUICardViewLayoutFactory
VUICardViewLayout
VUICardViewLayoutRecord
VUIJSFactory
VUICountDownProgressIndicator
VUIUpNextOverlayView
VUITextBadgeViewDelegate
VUIDebugMetricsEventViewController
VUIEditorialCellLayout
VUIPreflightManager
VUIMPHomeShareMediaLibraryManager
VUIHomeShareMediaLibraryManager
VUIActionPunchout
VUIDeviceMediaLibrary
ATVAcquisitionRequest
VUIStoreAcquisition
VUIBootURLController
VUICollectionViewFeaturedView
VUIAdditions
VUIVideoAdvisoryInfoDictionaryBuilder
VUIMediaItemEntityTypesFetchResponseChanges
VUIPlistShowMediaCollection
VUIExtrasDescriptionLayout
VUIActionMarkedAsWatched
VUISportsScoreboardManager
VUIEventDataSource
VUIMediaEntityFetchResponse
VUIProductInfoAiringView
VUIButtonFactory
VUIMediaEntitiesToRecentlyAddedMediaEntitiesValueTransformer
VUICollectionViewFeaturedCell
VUIStoreAuxMediaItem
VUIVideoAdvisoryView
Animator
VUIProductBannerView
VUIProgressBarLayout
VUIFeaturedCellOverlayView
VUIConflictResolverEntry
VUISyncingKeyValueStore
RetailDemoMode
VUITVLibraryView
VUICardFloatingContentView
VUIAppCell
VUIDocumentContextData
VUIDocumentContextDataMovie
VUIDocumentContextDataMovieBundle
VUIDocumentContextDataTVShow
VUIDocumentContextDataConfirmationDialog
VUIDocumentContextDataSiriSearch
VUIMPMediaItemAirTrafficDownloadController
VUIPresentationContainerViewController
VUIPlaybackInfo
VUITVOSPlaybackManager
VUINowPlayingFeatureMonitorDelegate
VUINowPlayingViewControllerDelegate
AVPlayerViewControllerDelegate
AVScanningDelegate
PBSPictureInPictureControllerObserver_Private
PBSPictureInPictureControllerObserver
VUIShelfViewController
TVShelfViewLayoutDelegate
VUIMPMediaItemDownloadController
VUIExtrasDescriptionView
VUIFavoriteBannerView
VUIMenuCollectionViewController
VUIMediaItemEntityTypesFetchControllerOperation
VUIJSMediaEntityType
VUIJSMediaEntityTypeExport
VUIJSLocationInterface
VideosExtrasJSITunesStore
SKStoreProductViewControllerDelegatePrivate
SKStoreProductViewControllerDelegate
IKJSITunesStore
VUIBookmark
NSMutableCopying
NSSecureCoding
NSCoding
VUIMutableBookmark
VUIAppleTVChannelLogoView
VUIMPMediaEntityImageLoadParams
VUIAppDocumentModifiedUpNextEvent
VUIApplicationDelegate
UIApplicationDelegate
VUIAppDocumentUpdateEvent
VUIMediaPlayerImageLoader
_VUIMediaPlayerImageLoaderConfiguration
_VUIMediaPlayerImageLoaderOperationSet
VUIAppInstallView
VUISBIconProgressViewDelegate
VUIMPMediaItemCollectionAssetController
VUIMediaEntityAssetControllerDelegate
VUIJSMetricsInterface
VUIComingSoonBannerCardView
VUIMediaEntitiesFetchOperation
VUIChannelBannerViewController
VUIWatchNowTemplateBackgroundLayer
VUIFavoriteBannerLayout
VUIPlaybackReporterSession
VUICollectionViewCell
VUIProductBannerCastInfoView
VUITextBadge
VUIDocumentUIConfiguration
VUIDocumentUIConfigurationModal
VUISportsProductBannerViewFactory
VUIFPSKeyDeletionInfoManagedObject
CoreDataProperties
VUIFPSKeyInfoManagedObject
VUIImageDataManagedObject
VUIImageInfoManagedObject
VUIMovieManagedObject
VUITVEpisodeManagedObject
VUITVSeasonManagedObject
VUITVSeriesManagedObject
VUITVSeriesImageInfoManagedObject
VUIVideoManagedObject
VUIVideoImageInfoManagedObject
init
overideLocDict
objectForKeyedSubscript:
vui_videosUIBundle
localizedStringForKey:value:table:
sharedInstance
localizedStringForKey:
intValue
localizedStringWithFormat:
copy
setOverideLocDict:
localizedStringForKey:withCount:
updateWithJSDictionary:
.cxx_destruct
_overideLocDict
raise:format:
initWithOrderedSet:
remainingViewElements
intersectOrderedSet:
count
objectAtIndex:
removeObjectAtIndex:
_documentUpdateRequestForViewElement:appContext:documentRef:
appDocument
templateElement
removeAllObjects
setCurrentUpdateRequest:
receivedEvents
vui_updateEventDescriptors
countByEnumeratingWithState:objects:count:
descriptor
containsObject:
addObject:
dictionaryRepresentation
vui_addObjectIfNotNil:
vui_setObjectIfNotNil:forKey:
isEqual:
class
self
performSelector:
performSelector:withObject:
performSelector:withObject:withObject:
isProxy
isKindOfClass:
isMemberOfClass:
conformsToProtocol:
respondsToSelector:
retain
release
autorelease
retainCount
zone
hash
superclass
description
debugDescription
updateRequestCompletedWithViewElements:documentRef:
updateCurrentUpdateRequestWithAppContext:documentRef:
currentUpdateRequest
initWithEvents:viewElements:
setReceivedEvents:
setRemainingViewElements:
_currentUpdateRequest
_receivedEvents
_remainingViewElements
contextDictionary
viewElement
setContextDictionary:
setViewElement:
defaultLogObject
initWithContextDictionary:viewElement:
_contextDictionary
_viewElement
initWithContextDictionary:element:
initWithAppContext:serviceContext:
initWithDescriptor:
mutableCopy
_purchaseEventDescriptor
canonicalID
copyWithZone:
initWithPurchaseEventDescriptor:
setCanonicalID:
_canonicalID
postPlay
postPlayUpdateData
addEntriesFromDictionary:
initWithPostPlayUpdateData:
setPostPlayUpdateData:
_postPlayUpdateData
vui_deepCopy
requests
identifier
objectForKey:
response
error
setResponses:
setError:
finishExecutionIfPossible
blockOperationWithBlock:
mediaLibrary
initWithMediaLibrary:request:
setObject:forKey:
addDependency:
privateQueue
addOperation:
initWithMediaLibrary:requests:
executionDidBegin
setRequests:
responses
setPrivateQueue:
setMediaLibrary:
_requests
_responses
_error
_privateQueue
_mediaLibrary
defaultAppLibrary
allAppBundleIdentifiers
appBundleIDs
name
length
currentDevice
userInterfaceIdiom
stringWithFormat:
isEqualToString:
uppercaseString
initWithInstallable:
setTitle:
setMessage:
actionButton
setTitle:forState:
setUpdateTitle:
setUpdateMessage:
_dismissAppInstallWithCompletion:
presentingViewController
dismissViewControllerAnimated:completion:
setCancelationHandler:
_beginInstallingApp
setActionHandler:
appStoreURL
sharedApplication
openURL:options:completionHandler:
setAppStoreHandler:
setSecondaryLinkTitle:
secondaryLinkHandler
setSecondaryLinkHandler:
arrayWithObjects:count:
setViewControllers:
loadView
view
vui_primaryDynamicBackgroundColor
setBackgroundColor:
beginIgnoringAppLibraryChanges
endIgnoringAppLibraryChanges
_initConfirmation
setPreInstallState
defaultAppInstaller
itemOffer
_updateWithInstallProgress:
_finishInstallationWithCompletion:
installAppForInstallable:offer:progressHandler:completion:
setInstallingState
lockup
installView
setInstallProgress:
finishInstallationWithCompletion:
beginInstallingAppWithProgressHandler:completion:
installable
localizedContentTitle
setLocalizedContentTitle:
contentType
setContentType:
confirmationTitle
setConfirmationTitle:
confirmationBody
setConfirmationBody:
updateBody
setUpdateBody:
updateTitle
confirmationInstallButtonTitle
setConfirmationInstallButtonTitle:
displayAppStoreLink
setDisplayAppStoreLink:
displaySecondaryLink
setDisplaySecondaryLink:
secondaryLinkTitle
_completionBlock
_lastProgress
_progressBlock
_confirmationController
_displayAppStoreLink
_displaySecondaryLink
_installable
_localizedContentTitle
_contentType
_confirmationTitle
_confirmationBody
_updateBody
_updateTitle
_confirmationInstallButtonTitle
_secondaryLinkTitle
_secondaryLinkHandler
date
scheme
lowercaseString
_getIDfromURLQueryParameters:idKeyName:
dictionaryWithObjects:forKeys:count:
routerDataSourceWithDict:appContext:
_handleOpenURLRouterDataSource:appContext:clearStack:startDate:
hasProperty:
loadingScreen
setTimeout:
showOverKeyWindow
absoluteString
vui_stringForKey:
hide
invokeMethod:withArguments:
evaluate:completionBlock:
documentDataSources
firstObject
setDeferredOpenURL:
setDeferredOpenURLCompletion:
deferredOpenURL
deferredOpenURLCompletion
processURL:appContext:completion:
localLibraryLink
viewControllerWithAppContext:
uiConfiguration
action
setUserPlaybackInitiationDate:
setOpenURLCompletionDate:
actionFirst
vui_delegate
appController
navigationController
dismissExtrasViewControllerIfPresent
_processLocalLibraryLink:playbackInitiationDate:openURLCompletionDate:
_insertPageBehindTop:viewController:clearStack:
_handleDeeplinkAction:completionHandler:
popToRootViewControllerAnimated:
topPresentedViewController
presentViewController:fromViewController:WithConfiguration:completion:
pushViewController:animated:
viewControllers
lastObject
subarrayWithRange:
addObjectsFromArray:
setViewControllers:animated:
movie
show
movieRental
season
episode
setWithObjects:
initWithMediaEntityTypes:
setProperties:
addAdamIdPredicate:
defaultManager
deviceMediaLibrary
mediaEntities
enqueueFetchRequests:completionHandler:
componentsWithURL:resolvingAgainstBaseURL:
queryItems
predicateWithFormat:
filteredArrayUsingPredicate:
value
isAccountRequired
userHasActiveAccount
allowsAccountModification
performWithTargetResponder:completionHandler:
requestAuthenticationAlwaysPrompt:withCompletionHandler:
parseURL:appContext:completion:
processEntityWithContextData:appContext:
saveDeferredURL:completion:
handleDeferredURLWithAppContext:
_fetchLocalMediaWithAdamID:completionHandler:
completionHandler
setCompletionHandler:
_completionHandler
_deferredOpenURL
_deferredOpenURLCompletion
isMainThread
_loadAndCacheCertificateDataForValidURL:completion:
_loadFPSURLsFromStoreBagWithCompletion:
eventCollection
eventReportingID
addStartEventWithName:identifier:
setRequestStartDate:
state
certificateURL
keyServerURL
setState:
requestsAwaitingCertFetch
addEndEventWithName:identifier:
setCertificateData:
_startKeyRequestsInBatches:completion:
_failKeyRequests:withError:
_loadCertificateDataWithCompletion:
initWithDomain:code:userInfo:
savedRequestToUseForStopping
_sendKeyRequestsToServer:isStopRequest:isSecureInvalidationRequest:completion:
numberWithBool:
addSingleShotEventWithName:value:
addStartEventWithName:
setCertificateURL:
setKeyServerURL:
addEndEventWithName:
contextWithBagType:
URLBagForContext:
URLWithString:
loadWithCompletionBlock:
initWithURL:
setHTTPMethod:
setTimeoutInterval:
initWithURLRequest:
setITunesStoreRequest:
setOutputBlock:
_startKeyRequests:completion:
isCancelled
keyRequestData
_generateKeyRequestDataForKeyRequests:completion:
keyIdentifier
dataUsingEncoding:
certificateData
setKeyRequestData:
makeKeyRequestDataForCertificateData:assetIDData:completion:
setSavedRequestToUseForStopping:
type
setHasLoadedAnyStreamingKeyRequests:
setServerRequestStartDate:
_bodyJSONDataForRequests:isStopRequest:
setHTTPBody:
setValue:forHTTPHeaderField:
secureInvalidationDSID
stringValue
initWithComponentType:key:
initWithPolicyType:signatureComponents:
setSAPSignaturePolicy:
URLResponse
_handleResponseForKeyRequests:responseData:URLResponse:error:
allHeaderFields
tvp_appleTimingAppHeaderValue
numberWithInteger:
statusCode
JSONObjectWithData:options:error:
vui_dictionaryForKey:
vui_numberForKey:
vui_arrayForKey:
_handleResponseDicts:forKeyRequests:
requestID
unsignedIntegerValue
indexOfObjectPassingTest:
_handleResponseDict:forKeyRequest:
integerValue
initWithBase64EncodedString:options:
vui_boolForKey:defaultValue:
setContentID:
setIsLowValueKey:
setAllowManualRenewal:
setAdditionalRequestParamsFromResponse:
serverRequestStartDate
doubleValue
dateByAddingTimeInterval:
setRenewalDate:
setRenewalInterval:
initWithTimeIntervalSince1970:
setExpirationDate:
keyExpirationDate
isEqualToDate:
setKeyExpirationDate:
rentalPlaybackStartDate
setRentalPlaybackStartDate:
setPlaybackDuration:
delegate
storeFPSKeyLoader:didReceiveUpdatedRentalExpirationDate:playbackStartDate:
setRequestEndDate:
offlineKeyDataFromServerKeyData:error:
setKeyResponseData:
storeFPSKeyLoader:didLoadOfflineKeyData:forKeyRequest:
storeFPSKeyLoader:willSucceedForKeyRequest:
finish
_errorForStoreResponseStatus:deviceLimit:
userInfo
domain
code
storeFPSKeyLoader:willFailWithError:forKeyRequest:
_jsonDictionaryForRequest:isStopRequest:
numberWithInt:
dataWithJSONObject:options:error:
base64EncodedStringWithOptions:
numberWithUnsignedInteger:
rentalID
isRenewal
didSkipRentalCheckout
defaultLocationManager
authorizationStatus
lastKnownLocation
additionalRequestParams
initialize
preFetchFPSCertificate
initWithCertificateURL:keyServerURL:
loadFairPlayStreamingKeyRequests:completion:
sendStopRequest
secureInvalidationNonceURL
setSecureInvalidationNonceURL:
setSecureInvalidationDSID:
setDelegate:
setEventCollection:
setRentalID:
setDidSkipRentalCheckout:
hasLoadedAnyStreamingKeyRequests
setRequestsAwaitingCertFetch:
contentKeySession
setContentKeySession:
_didSkipRentalCheckout
_hasLoadedAnyStreamingKeyRequests
_secureInvalidationNonceURL
_secureInvalidationDSID
_delegate
_eventCollection
_rentalID
_certificateURL
_keyServerURL
_state
_certificateData
_requestsAwaitingCertFetch
_savedRequestToUseForStopping
_keyExpirationDate
_rentalPlaybackStartDate
_contentKeySession
initWithMediaLibrary:
cancelFetch
initWithMediaLibrary:fetchReason:requests:
setCurrentFetchResponses:
fetchReason
_handleManualFetchControllerOperationDidComplete:
_handleContentsChangeFetchControllerOperationDidComplete:
result
_updateResponseWithResult:replaceContentsOnNilChanges:
_notifyFetchRequests:didCompleteWithResult:
_notifyFetchRequests:didFailWithError:
fetchResponses
fetchResponseChanges
_updateWithResponse:changes:replaceContentsOnNilChanges:
enumerateObjectsUsingBlock:
manager
completionDispatchQueue
controller:fetchRequests:didCompleteWithResult:
_notifyDelegateWithBlock:
controller:fetchRequests:didFailWithError:
initWithMediaLibrary:fetchRequests:
_fetchOperationForFetchReason:
_didCompleteFetchOperation:
_response
initWithLayout:interfaceStyle:
_selectButtonAction:eventType:
setSelectActionHandler:
setPlayActionHandler:
updateType
updateWithElement:
attributes
setItemID:
setItemType:
setChannelID:
tv_dispatchEvent:canBubble:isCancelable:extraInfo:targetResponder:completionBlock:
sendRequestForItemID:itemType:channelID:
dismissPresentedViewController
itemID
itemType
channelID
_itemID
_itemType
_channelID
_init
sharedConnection
addObserver:
removeObserver:
dealloc
exceptionWithName:reason:userInfo:
contentRating
adamID
extrasURLString
previewURLString
actionParams
loadingImage
isLightTheme
containsString:
mainScreen
bounds
initUrlWithProperties:imageSize:focusSizeIncrease:cropCode:urlFormat:
imageURLWithDescription:
mutePictureInPicture:reason:
_loadExtrasURL:adamID:actionParams:previewURL:loadingImage:lightTheme:presentImmediately:completion:
setUnrestrictedActionParams:
bundleWithIdentifier:
_showAlertWithTitle:message:
validateRestrictionForContentType:withRating:allowInteraction:withCompletion:
_extrasNavigationController
_stopExtrasApp
stop
context
launchOptions
extrasLaunchContextForURL:adamID:actionParams:previewURL:loadingImage:lightTheme:
initWithContext:window:delegate:
currentNavigationController
setTransitioningDelegate:
_presentExtrasApplicationController:usingAppNavigationController:withPreviousAppNavigationController:presentImmediately:completion:
presentWithViewController:completion:
alertControllerWithTitle:message:preferredStyle:
actionWithTitle:style:handler:
addAction:
presentViewController:animated:completion:
presentedViewController
isBeingDismissed
currentAppContext
initWithAppContext:
setObject:forKeyedSubscript:
appController:evaluateAppJavaScriptInContext:
appController:didFinishLaunchingWithOptions:
appController:didFailWithError:
appController:didStopWithOptions:
playerForAppController:
animationControllerForPresentedController:presentingController:sourceController:
animationControllerForDismissedController:
interactionControllerForPresentation:
interactionControllerForDismissal:
presentationControllerForPresentedViewController:presentingViewController:sourceViewController:
profileConnectionDidReceiveRestrictionChangedNotification:userInfo:
profileConnectionDidReceivePasscodeChangedNotification:userInfo:
profileConnectionDidReceivePasscodePolicyChangedNotification:userInfo:
profileConnectionDidReceiveProfileListChangedNotification:userInfo:
profileConnectionDidReceiveEffectiveSettingsChangedNotification:userInfo:
profileConnectionDidReceiveDefaultsChangedNotification:userInfo:
profileConnectionDidReceiveAppWhitelistChangedNotification:userInfo:
loadExtrasInfo:
isExtrasVisible
unrestrictedActionParams
applicationController
setApplicationController:
presentingAnimator
setPresentingAnimator:
dismissingAnimator
setDismissingAnimator:
presenting
setPresenting:
reverseDismissal
setReverseDismissal:
_presenting
_reverseDismissal
_unrestrictedActionParams
_applicationController
_presentingAnimator
_dismissingAnimator
shouldShowWelcomeScreen
_navigateToUpNextOrSuspend:withCompletion:
selectedViewController
templateViewController
topViewController
setTransitionAnimationEnabled:
_scrollToTopAnimated:
set_shouldFocusViewControllerAfterTransition:
focusUpNextAnimated:
tabBarController:didSelectViewController:
isUpNextFocused
launchKioskApp
tvIdentifier
setRestoresFocusAfterTransition:
selectedIndex
showcaseFactor
collectionView
scrollsToTop
handleTVAction:withCompletion:
_deviceMediaLibrary
_homeShareMediaLibraryManager
serialProcessingDispatchQueue
homeShareManager
homeShareMediaLibraries
beginDiscoveringMediaLibraries
endDiscoveringMediaLibraries
_mediaLibraryForIdentifier:
fileURLWithPath:
initWithURL:manager:
initWithManager:
willChangeValueForKey:
didChangeValueForKey:
_postHomeShareMediaLibrariesDidChangeNotificationWithMediaLibraries:andChangeSet:
_enqueueStrongSelfCompletionQueueBlock:
_enqueueCompletionQueueBlock:
boolValue
defaultCenter
postNotificationName:object:userInfo:
homeShareManager:mediaLibrariesDidUpdate:withChangeSet:
setCompletionDispatchQueue:
beginDiscoveringHomeShareMediaLibraries
endDiscoveringHomeShareMediaLibraries
mediaLibraryForIdentifier:
activeMediaLibrary
setActiveMediaLibrary:
setDeviceMediaLibrary:
sidebandMediaLibrary
aggregateMediaLibrary
setSerialProcessingDispatchQueue:
setHomeShareManager:
_activeMediaLibrary
_completionDispatchQueue
_sidebandMediaLibrary
_aggregateMediaLibrary
_serialProcessingDispatchQueue
_homeShareManager
dictionary
cancel
removeObjectForKey:
initWithAction:entityId:caller:
ongoingEntityIDOperationDictionary
post:title:body:options:
setCompletionBlock:
setValue:forKey:
wlkDefaultQueue
sendRequestForEntityID:teamName:action:
setOngoingEntityIDOperationDictionary:
_ongoingEntityIDOperationDictionary
layoutAttributesForElementsInRect:
frame
representedElementCategory
setFrame:
shouldInvalidateLayoutForBoundsChange:
settingsURLForMediaLibraryApplicationController:
isCellularDataPlaybackEnabledForMediaLibraryApplicationController:
mediaPlayerMediaItem
mediaLibraryApplicationController:shouldWarnAboutPlaybackQualityForRentalMediaItem:
clearCellularPlaybackQualityOverridesForMediaLibraryApplicationController:
mediaLibraryApplicationController:overrideCellularPlaybackQuality:forMediaItem:
mediaLibraryApplicationController:assetTypeForRentalMediaItem:
mediaLibraryApplicationController:removeRentalMediaItem:withCompletion:
defaultController
settingsURL
isCellularDataForPlaybackEnabled
shouldWarnAboutPlaybackQualityForRentalMediaItem:
clearCellularPlaybackQualityOverrides
overrideCellularPlaybackQuality:forMediaItem:
assetTypeForRentalMediaItem:
removeRentalMediaItem:withCompletion:
appendFormat:
initWithIdentifier:expirationHandler:
beginBackgroundTaskWithName:expirationHandler:
setTaskIdentifier:
taskIdentifier
endBackgroundTask:
_taskIdentifier
_preloadMediaEntityMetadata
currentFetchResponses
latestFetchResponses
_mediaEntitiesChangeSetWithLatestFetchResponse:currentFetchResponse:
initWithMediaEntitiesChangeSet:
_groupingChangeSetWithLatestFetchResponse:currentFetchResponse:
setGroupingChangeSet:
setFetchResponseChanges:
_preloadMetadataForFetchResponse:
populateMetadata
_changeSetFromCurrentMediaEntities:toLatestMediaEntities:
grouping
_groupingChangeSetWithCurrentGrouping:latestGrouping:
changeSetFromObjects:toObjects:identifierBlock:updateChangeSetBlock:
isFetchedPropertiesEqualToFetchedMediaEntity:
changeSetFromObjects:toObjects:identifierBlock:isEqualBlock:
initWithLatestFetchResponses:currentFetchResponses:
setLatestFetchResponses:
_fetchResponseChanges
_latestFetchResponses
_currentFetchResponses
setWidth:
setHeight:
width
height
setImageSize:
imageCornerRadiiWithStyle:
setBorderRadii:
setScaleMode:
placeholderImageResourceName:
setPlaceholderArtworkName:
tvs_stringForKey:
tvs_boolForKey:defaultValue:
initWithObject:imageLoader:groupType:
setImageProxy:
_placeholderImageWithLayout:
setPlaceholderImage:
imageStackViewWithDescription:layout:existingView:
setTextHighlightStyle:
setTextStyle:
setFontWeight:
whiteColor
setColor:
setAlignment:
title
labelWithString:textLayout:existingLabel:
tv_setLayout:
isRental
rentalExpirationDate
labelWithExpirationDate:textLayout:existingLabel:formatString:
initWithFrame:
setConfiguresForCollectionViewCell:
setComponents:mainImageComponent:
setStackingPosterView:
setClipsToBounds:
removeFromSuperview
contentView
addSubview:
setNeedsLayout
_layoutWithSize:metricsOnly:
layoutSubviews
placeholderArtworkName
sharedInterfaceFactory
imageForResource:
stackingPosterView
cellMetrics
configureLockupCell:withMedia:width:artworkDictionary:forMetrics:
rentalExpirationLabelNeedsRelayout:
sizeThatFits:
selectingView
placeholderImage
placeholderImageString
setPlaceholderImageString:
_stackingPosterView
_placeholderImage
_placeholderImageString
setHasMediaEntitiesFetchCompleted:
setHasStartedFetch:
setValidCategories:
validCategories
setHomeShares:
_addMediaLibraryNotificationObservers
mediaEntitiesFetchController
defaultQueueWithMediaLibrary:
removeFetchController:
_removeMediaLibraryNotificationObservers
categoryTypes
hasStartedFetch
_loadMediaEntityShelves
_updateRentalShelf
categoryTypeByFetchRequestIdentifier
setGenreGroupings:
purchaseHistoryID
_populateViewModel:
_loadImageUrls:
hasMediaEntitiesFetchCompleted
categoryViewModel:fetchDidCompleteWithCategories:error:
categories
categoryViewModel:categoriesDidChange:
_addNotificationObserversWithDeviceLibrary:
_homeShareMediaLibrariesDidChange:
addObserver:selector:name:object:
_removeNotificationObserversWithDeviceLibrary:
homeShares
vui_arrayByApplyingChangeSet:destinationObjects:
setCategoryTypes:
_constructCategoryList
setCategories:
arrayWithArray:
removeObserver:name:object:
_fetchRequestsWithMediaLibrary:categoryTypeMap:
setCategoryTypeByFetchRequestIdentifier:
setMediaEntitiesFetchController:
addFetchController:
movieRentalsFetchRequest
sortDescriptorWithKey:ascending:
initWithObjects:
setSortDescriptors:
addRecentlyAddedSortDescriptorWithLimit:
vui_predicateWithSubpredicates:type:
setPredicate:
homeVideosFetchRequest
showsFetchRequest
moviesFetchRequest
supportsUHDAndHDR
scale
addHDRColorCapabilityOr4KResolutionPredicate
setGroupingKeyPath:
enumerateKeysAndObjectsUsingBlock:
sortUsingComparator:
compare:
genreGroupings
initWithMainMenuItems:genreMenuItems:
setArtworkInfoDictionaryByPurchaseID:
loadArtworkURLsForPurchaseHistoryIDs:completionHandler:
setMediaEntitiesByGenreIdentifier:
_categoryTypesSortComparator
_categoryTypesWithMediaEntitiesMap:categoryTypeComparator:
setMediaEntitiesByCategoryType:
controllerShouldFetchForContentsChange:
initWithMediaLibrary:validCategories:
hasContent
startFetch
updateRentalShelf
mediaEntitiesByCategoryType
mediaEntitiesByGenreIdentifier
artworkInfoDictionaryByPurchaseID
cloudClient
setCloudClient:
rentalsUpdateFetchController
setRentalsUpdateFetchController:
_hasMediaEntitiesFetchCompleted
_hasStartedFetch
_mediaEntitiesByCategoryType
_mediaEntitiesByGenreIdentifier
_artworkInfoDictionaryByPurchaseID
_categories
_homeShares
_categoryTypeByFetchRequestIdentifier
_mediaEntitiesFetchController
_categoryTypes
_genreGroupings
_validCategories
_cloudClient
_rentalsUpdateFetchController
appContext
initWithActionRef:contextData:appContext:
initWithContextData:appContext:
setUpNextPlayback:
initWithContextData:
initWithContextData:viewElement:
initWithContextData:isContinueWatching:
actionWithDictionary:viewElement:appContext:
setUnitsStyle:
setAllowedUnits:
setNumberStyle:
setMultiplier:
mediaDescription
formattedReleaseDate
releasedDate
_releaseDateDescriptionFromDate:
duration
_durationDescriptionFromDuration:
genre
hasClosedCaptions
imageWithName:flatten:
hasADLocales
hasSDHLocales
tomatoPercentage
_isValidNumber:
stringFromNumber:
commonSenseRecommendedAge
_commonSenseString:
ratingName
ratingSystem
ratingValue
initWithRatingSystemString:ratingLabel:rank:ratingDescription:
badgeForContentRating:drawUnknownRatingBadge:
tomatoFreshness
videoDynamicRange
videoResolutionClass
hasDolbyAtmos
rentalExpiration
mediaItemMetadataForProperty:
valueTransformerForName:
transformedValue:
setDateFormat:
releaseDate
stringFromDate:
_mediaBagdesWithVUIMediaEntity:
homeVideo
releaseYear
genreTitle
notANumber
isEqualToNumber:
setLocalizedDateFormatFromTemplate:
stringFromTimeInterval:
stringByReplacingOccurrencesOfString:withString:
HLSResolution
resolution
HLSColorCapability
colorCapability
HLSAudioCapability
audioCapability
extrasURL
imageForResourceName:
unsignedIntValue
initWithContentMetadata:additionalMetadata:
initWithMediaItem:
initWithVUIMediaItem:
initWithVUIMediaEntity:
tagsViewDictionary
addSeperatorKey:
_tagsViewDictionary
_dateComponentFormatter
_tomatoPercentFormatter
_vui_TVLoadingViewControllerClass
subviews
alpha
vui_ppt_isLoading
vui_presentViewController:animated:completion:
vui_padding
headerView
collectionViewLayout
computedContentHeight
setHeaderView:
setCollectionView:
_headerView
_collectionView
setTextLayout:
setImageLayout:
setCornerRadius:
setBadgeKind:
textBadgeTypeFromString:
layoutWithViewElement:withTextBadgeType:
_spotlightBadgeLayoutWithViewElement:
_textBadgeLayoutWithViewElement:withBadgeType:
style
tv_valueForStyle:
gridStyleForCSSStyle:
_badgeSizeForElement:
setTintColor:
setPadding:
setMinHeight:
_updateTextColorWithViewElement:defaultColor:
systemRedColor
_updateBgColorWithViewElement:defaultColor:
color
_glyphImageLayoutWithTintColor:viewElement:
systemPinkColor
colorWithRed:green:blue:alpha:
colorWithWhite:alpha:
clearColor
setGradientBgColors:
setFontFamily:
setFontSize:
setMaximumContentSizeCategory:
setBlendMode:
setTextTransform:
tv_backgroundColor
colorType
gradientColors
children
tv_elementType
tv_color
layoutWithViewElement:
badgeKind
cornerRadius
gradientBgColors
textLayout
imageLayout
_badgeKind
_cornerRadius
_gradientBgColors
_textLayout
_imageLayout
locStringForKey:
locStringForKeyWithCount::
setLocDictionary:
setOverlayLayout:
transferLayoutStylesFromElement:
badgeElementHasContent:
_updateTextBadge:
vui_hasValidImage
logoImageLayout
layoutWithLayout:element:
decoratorSize
logoView
imageViewWithElement:layout:existingView:
dataDictionary
initWithDictionary:
_updateScoreView:
_updateBackgroundMaterialImagesWithBackgroundImageSize:performSynchronously:
setLogoSize:
setLogoView:
textBadge
setHidden:
_setupHosting
setQualityOfService:
setMaxConcurrentOperationCount:
isDescendantOfView:
setAlpha:
reset
isHidden
tv_sizeThatFits:
padding
_updateBadgePosition
willMoveToWindow:
_registerOverlayView
_teardownHosting
_unregisterOverlayView
invalidateData
imageProxy
removeObserver:forKeyPath:
size
scores
objectAtIndexedSubscript:
canonicalId
jsContextDictionary
scoreboardLayout
borderRadii
radiusFromCornerRadii:
_setCornerRadius:
showScoreboard
setScoreboardLayout:
layoutIfNeeded
_scorecardViewBackgroundImageNeedsUpdating
_redrawScorecardViewWithDuration:
setNeedsDisplay
viewElementNeedsUpdate:
textBadgeLayout
setElement:withBadgeLayout:
_textBadgeBackgroundImageNeedsUpdating
_redrawTextBadgeWithDuration:
initWithSourceBackgroundImage:
setResizedBackgroundImageSize:
initWithIdentifier:rect:
setOverlayMaterialRequests:
start
_updateBackgroundImagesWithCompletedOperation:
mainQueue
_sharedDrawQueue
addObserver:forKeyPath:options:context:
resizedSourceBackgroundImage
overlayMaterialImageByIdentifier
_scorecardViewRequiresBackgroundImage
_textBadgeRequiresBackgroundImage
setBackgroundImage:
_redrawView:withDuration:
backgroundImage
_viewBackgroundImageNeedsUpdatingWithFrame:currentBackgroundImage:
forceDisplayIfNeeded
transitionWithView:duration:options:animations:completion:
registerDelegate:canonicalId:
unregisterDelegate:canonicalId:
superview
setBackgroundImageForMaterialRendering:
tv_isDisplayed
observeValueForKeyPath:ofObject:change:context:
sportsOverlayViewFromElement:overlayLayout:existingView:
styleForScorecardView:
numberOfRowsInScorecardView:
numberOfScoreValuesForScorecardView:inRow:
scoreValue:inRow:atIndex:
maximumWidthForScorecardView:
backgroundImageForScorecardViewMaterial:
backgroundBlendModeForScoreValueInRow:atIndex:
sampleWithImage:
backgroundImageSizeDidChange:
backgroundImageForMaterialRendering
updateScoreboard:
getJSContextDictionary
overlayLayout
scoreboardViewModel
setScoreboardViewModel:
scorecardView
setScorecardView:
textBadgeHasMaterial
setTextBadgeHasMaterial:
setTextBadge:
logoElement
setLogoElement:
logoSize
pendingOperation
setPendingOperation:
scorecardViewBackgroundImage
setScorecardViewBackgroundImage:
backgroundImageHasChanged
setBackgroundImageHasChanged:
containingCell
setContainingCell:
isHostSetup
setIsHostSetup:
_textBadgeHasMaterial
_backgroundImageHasChanged
_isHostSetup
_backgroundImageForMaterialRendering
_overlayLayout
_scoreboardViewModel
_scorecardView
_textBadge
_logoView
_logoElement
_pendingOperation
_scorecardViewBackgroundImage
_containingCell
_logoSize
recordClick:
sendRequestForCanonicalID:action:
offerView
layout
setIsEntitled:
elementName
tv_width
logoLayout
setMaxWidth:
setMaxHeight:
appIconLayout
aspectRatio
setMargin:
imageView
setAppIconLayout:
titleTextLayout
titleLabel
labelWithElement:textLayout:existingLabel:
setEnablesMarqueeWhenAncestorFocused:
subtitleTextLayout
subtitleLabel
textLabel
focusedTextLayout
focusedTextLabel
vui_videosUIImageNamed:
secondChinImageView
imageWithImage:existingImageView:
colorWithAlphaComponent:
badgeLayout
badgeView
tagsLayout
tagsView
tagsViewWithMetadata:layout:element:existingView:
versionsButtonLayout
versionsButton
buttonWithElement:layout:existingButton:
textContentView
text
setText:
channelImageBackgroundView
setChannelNameLabel:
setAppIconView:
setImageView:
setTitleLabel:
setSubtitleLabel:
setTextLabel:
setBadgeView:
setTagsView:
setVersionsButton:
setChannelImageBackgroundView:
tv_semanticContentAttribute
setSemanticContentAttribute:
layer
setMasksToBounds:
borderWidth
setBorderWidth:
borderColor
CGColor
setBorderColor:
setLayout:
tv_height
offerCardHeightForCardWidth:subtitleLabel:padding:
setCardSize:
setOfferView:
setFocusedTextLabel:
setSecondChinImageView:
_updateBackgroundAndHighlightColor
setAutoresizingMask:
setAllowsFocus:
floatingView
bringSubviewToFront:
setContentMode:
isFocused
viewWithExistingView:bounds:focused:subview:
setFloatingView:
setSelectingView:
prepareForReuse
prepareForCellReuse
margin
focusedSizeIncrease
topMarginWithBaselineMargin:
backgroundColor
highlightColor
setBgColor:highlightBgColor:cornerRadius:
nextFocusedView
didUpdateFocusInContext:withAnimationCoordinator:
configureViewWithElement:existingCell:
cardSize
_offerView
_focusedTextLabel
_secondChinImageView
_cardSize
initWithIdentifierKeyPath:
setGroupsSortComparator:
setPerformDefaultSort:
setSortIndexKeyPath:
_sortIndexesForObjects:titleForObjectBlock:
valueForKey:
letterCharacterSet
characterAtIndex:
stringWithCharacters:length:
setCount:
characterIsMember:
initWithTitle:startIndex:count:
groupingForMediaEntities:groupingKeyPath:groupingSortComparator:performDefaultSort:sortIndexPropertyKey:
sortIndexesForGrouping:
sortIndexesForMediaEntities:sortIndexPropertyKey:
mediaItemEntityTypesSortComparator
setScrollDirection:
_collectionViewClass
alloc
initWithFrame:collectionViewLayout:
setTranslatesAutoresizingMaskIntoConstraints:
setDataSource:
registerClass:forCellWithReuseIdentifier:
setModalPresentationStyle:
preferredFontForTextStyle:
nativeBounds
setItemSize:
setMinimumInteritemSpacing:
setMinimumLineSpacing:
setContentInset:
setFont:
setNumberOfLines:
setTextAlignment:
setMinimumScaleFactor:
setAdjustsFontSizeToFitWidth:
setTextColor:
firstBaselineAnchor
topAnchor
constraintEqualToAnchor:constant:
setActive:
centerXAnchor
constraintEqualToAnchor:
navigationItem
bottomAnchor
leadingAnchor
trailingAnchor
reloadData
viewDidAppear:
flashScrollIndicators
dequeueReusableCellWithReuseIdentifier:forIndexPath:
setImage:
collectionView:numberOfItemsInSection:
collectionView:cellForItemAtIndexPath:
numberOfSectionsInCollectionView:
collectionView:viewForSupplementaryElementOfKind:atIndexPath:
collectionView:canMoveItemAtIndexPath:
collectionView:moveItemAtIndexPath:toIndexPath:
indexTitlesForCollectionView:
collectionView:indexPathForIndexTitle:atIndex:
scrollViewDidScroll:
scrollViewDidZoom:
scrollViewWillBeginDragging:
scrollViewWillEndDragging:withVelocity:targetContentOffset:
scrollViewDidEndDragging:willDecelerate:
scrollViewWillBeginDecelerating:
scrollViewDidEndDecelerating:
scrollViewDidEndScrollingAnimation:
viewForZoomingInScrollView:
scrollViewWillBeginZooming:withView:
scrollViewDidEndZooming:withView:atScale:
scrollViewShouldScrollToTop:
scrollViewDidScrollToTop:
scrollViewDidChangeAdjustedContentInset:
collectionView:shouldHighlightItemAtIndexPath:
collectionView:didHighlightItemAtIndexPath:
collectionView:didUnhighlightItemAtIndexPath:
collectionView:shouldSelectItemAtIndexPath:
collectionView:shouldDeselectItemAtIndexPath:
collectionView:didSelectItemAtIndexPath:
collectionView:didDeselectItemAtIndexPath:
collectionView:willDisplayCell:forItemAtIndexPath:
collectionView:willDisplaySupplementaryView:forElementKind:atIndexPath:
collectionView:didEndDisplayingCell:forItemAtIndexPath:
collectionView:didEndDisplayingSupplementaryView:forElementOfKind:atIndexPath:
collectionView:shouldShowMenuForItemAtIndexPath:
collectionView:canPerformAction:forItemAtIndexPath:withSender:
collectionView:performAction:forItemAtIndexPath:withSender:
collectionView:transitionLayoutForOldLayout:newLayout:
collectionView:canFocusItemAtIndexPath:
collectionView:shouldUpdateFocusInContext:
collectionView:didUpdateFocusInContext:withAnimationCoordinator:
indexPathForPreferredFocusedViewInCollectionView:
collectionView:targetIndexPathForMoveFromItemAtIndexPath:toProposedIndexPath:
collectionView:targetContentOffsetForProposedContentOffset:
collectionView:shouldSpringLoadItemAtIndexPath:withContext:
collectionView:shouldBeginMultipleSelectionInteractionAtIndexPath:
collectionView:didBeginMultipleSelectionInteractionAtIndexPath:
collectionViewDidEndMultipleSelectionInteraction:
collectionView:contextMenuConfigurationForItemAtIndexPath:point:
collectionView:previewForHighlightingContextMenuWithConfiguration:
collectionView:previewForDismissingContextMenuWithConfiguration:
collectionView:willCommitMenuWithAnimator:
setApps:
_collectionView:canFocusItemAtIndexPath:
apps
_titleLabel
_layout
_apps
initWithType:
verticalSpacing
buttonLayout
_verticalSpacing
_buttonLayout
setColorWithOpacityType:
setAlwaysFocusable:
titleLayout
descriptionLayout
badgeViewLayout
_titleLayout
_descriptionLayout
_badgeViewLayout
setAspectRatio:
radiiFromRadius:
setDarkTintColor:
metaDataViewLayout
buttonsLayout
_metaDataViewLayout
_buttonsLayout
initWithHost:
initWithNibName:bundle:
shelfViewController
_viewControllerFromElement:existingController:
setShelfViewController:
host
initWithFrame:addBlurBackground:
setView:
setShelfView:
featuresManagerForAppDocument:
addObserver:forEvent:
removeObserver:forEvent:
selectedMediaInfo
pushContext:forFeature:
popContext:forFeature:
willMoveToParentViewController:
setSpeedBumpEdges:
addChildViewController:
setRemembersLastFocusedIndexPath:
isViewLoaded
removeFromParentViewController
didMoveToParentViewController:
observableEventController
dispatchEvent:sender:withUserInfo:
backgroundVisualEffectView
collectionElement
sections
numberOfItems
elementForItemAtIndex:
mediaInfoForEvent:playbackContext:includingVideo:
setAppContext:
setIntent:
setAutomaticPlaybackStart:
setPlaybackContext:
array
item
_selectedMediaInfoForEvent:forElementAtIndex:
setSelectedMediaInfo:
_focusedMediaInfoForElementAtIndex:
shelfViewController:didSettleOnItemAtIndexPath:
shelfViewController:didSelectItemAtIndexPath:
shelfViewController:didPlayItemAtIndexPath:
shelfViewController:updateRelatedView:
impressionableElementsContainedInDocument:
initWithCoder:
visualEffectView
preferredFocusEnvironments
setObservableEventController:
_host
_shelfViewController
_selectedMediaInfo
_observableEventController
traitCollection
userInterfaceStyle
effectWithStyle:
initWithEffect:
rowMetricsForExpectedWidth:firstItemRowIndex:
showcaseRowMetricsForExpectedWidth:
shouldBindRowsTogether
shelfView
traitCollectionDidChange:
_updateAppearance
setEffect:
setBackgroundVisualEffectView:
_shelfViewFlags
_shelfView
_backgroundVisualEffectView
initWithMediaEntityClassName:
setWithObject:
setSourcePropertyNames:
setSortAsName:
requiredMPPropertyNames
setRetrievesSourcePropertiesAtFetch:
allValues
setPropertyDescriptors:
representativeItem
showIdentifierWithMediaItem:
initWithMediaLibrary:mediaItemCollection:identifier:requestedProperties:kind:
mediaItemCollection
items
seasonIdentifierWithMediaItem:
_propertyValueWithBlock:forKey:
initWithMediaLibrary:mediaItemCollection:requestedProperties:
seasonCount
_seasonCount
errorView
descriptionTextLayout
descriptionLabel
debugTextLayout
debugTextLabel
debugTextLayout2
setDescriptionLabel:
setDebugTextLabel:
setDebugTextLabel2:
updateWithTemplateElement:
updateWithViewElement:
_additionalLabels
_alertController
_buttonElements
_imageProxy
_imageSize
_message
_title
resumeMenuBehavior
vui_disableResumeMenu
indexesOfObjectsPassingTest:
objectsAtIndexes:
assets
vui_rentalAdamIDString
_storeMediaItemsForVideoElement:
_auxMediaItemForVideoElement:
initWithMediaItems:index:isCollection:
vui_hlsPlaylistURL
vui_contentRatingRank
vui_resumeTime
vui_fpsCertificateURL
vui_fpsKeyServerURL
vui_dataType
initWithActionParams:mediaType:hlsPlaylistURL:contentRatingRank:rentalID:
iTunesVPAF
setMediaItemMetadata:forProperty:
_shouldDisableResumeMenuForAsset:
setDisableResumeMenu:
setFpsCertificateURL:
setFpsKeyServerURL:
setBookmarkOverrideTime:
timelines
setBookmarkDisabled:
_clipMediaItemsMediaItem:fromTimelineElement:
_populateMediaItem:withMetadatafromVideoElement:
vui_scrubVideoURL
bookmarkID
setBookmarkID:
externalID
mainBundle
bundleIdentifier
events
offset
initWithStartTime:duration:
initWithMediaItem:clipTimeRange:
_populateMediaItem:withMetadatafromTimelineEventElement:
relatedContent
_populateMediaItem:withMetadatafromRelatedContentElement:
string
playlistForIKMediaElements:
setResumeMenuBehavior:
_resumeMenuBehavior
caseInsensitiveCompare:
numberWithDouble:
initWithString:
vui_launchPlaybackURL
systemDarkRedColor
_titleTextLayout
_descriptionTextLayout
_debugTextLayout
_debugTextLayout2
badgeElement
setBadgeElement:
badgeSize
setBadgeSize:
badgeFrame
setBadgeFrame:
badgeType
setBadgeType:
_badgeView
_badgeElement
_badgeType
_badgeSize
_badgeFrame
badgeViewWrappers
setTitleElement:
setTextBadgeElement:
floatValue
progressView
_viewFromElement:existingView:
progressBarLayout
gradientStartColor
setGradientStartColor:
gradientEndColor
setGradientEndColor:
shouldProgressBarUseRoundCorner
setShouldProgressBarUseRoundCorner:
fillColor
setCompleteTintColor:
setStyle:
setProgressView:
gradientView
setUserInteractionEnabled:
overlayType
imageCornerRadiusWithStyle:
setGradientView:
setBadgeViewWrappers:
bookmark
playedState
setProgress:
removeFromSuperlayer
addSublayer:
insertSubview:atIndex:
bottomMarginWithBaselineMargin:
sendSubviewToBack:
vui_currentSizeClass
tv_margin
valueWithCGRect:
removeAllAnimations
layoutFactory
activeLayout
radiiIsZero:
overlayViewFromElement:overlayLayout:existingView:
overlayViewFromMediaItem:overlayLayout:existingView:
setGradientLayer:
gradientLayer
titleElement
textBadgeElement
_gradientLayer
_titleElement
_textBadgeElement
_badgeViewWrappers
_progressView
_gradientView
_registerObservers
_removeObservers
initWithFormat:arguments:
_playerStateWillChange:
_playerCurrentMediaItemWillChange:
sessions
player
removeObjectsInArray:
_logWithFormat:
removeObject:
object
_handlePlaybackChangeForPlayer:fromState:toState:reason:
_sessionForPlayer:
stopped
_endSession:
_isTransitionValidForPlayer:fromState:toState:
playing
enforceSinglePlaybackSession
reportingEnabled
_reportForSession:state:reason:
_endSessions:
_createSessionForPlayer:
_beginSession:
raise
setSessions:
_enforceSinglePlaybackSession
_sessions
_mediaLibraryHasEpisodes
_mediaLibraryHasHasHomeVideos
_mediaLibraryHasMovies
_mediaLibraryHasMovieRentals
_mediaLibraryHasLocalMediaItems
setMediaItemEntityTypes:
setLocalMediaItemsAvailable:
setResponse:
_canUseCheapEntityCheckWithMediaEntityType:
hasMovies
vui_moviesQueryWithMediaLibrary:
_mediaLibraryHasMediaItemsWithQuery:
hasMovieRentals
vui_movieRentalsQueryWithMediaLibrary:
hasTVShows
vui_episodesQueryWithMediaLibrary:
hasHomeVideos
vui_homeVideosQueryWithMediaLibrary:
vui_isDeviceMediaLibrary
vui_isLocalPredicate:comparison:
initWithFilterPredicates:
mediaCategoryType
allowsShowingUndownloadedMovies
allowsShowingUndownloadedTVShows
setEntityLimit:
initWithMPMediaLibrary:
initWithIdentifier:
sortIndexes
componentsJoinedByString:
setIdentifier:
setMediaEntities:
setSortIndexes:
_identifier
_mediaEntities
_sortIndexes
prefetchedDataDict
jsonData
setPrefetchedDataDict:
_prefetchedDataDict
updateEvent
canAutoPlay
showID
productID
setHost:
setProductID:
setShowID:
setUpdateEvent:
setCanAutoPlay:
_updateEvent
_canAutoPlay
_productID
_showID
setContentCompressionResistancePriority:forAxis:
buttonWithType:
_buttonWithTitleForTV:textStyle:
setLineBreakMode:
_setVisualEffectViewEnabled:backgroundColor:
setSpacing:
setAxis:
button
metadataStackView
arrangedSubviews
addArrangedSubview:
setCustomSpacing:afterView:
vui_primaryTextColor
vui_secondaryTextColor
iconSize
iconCornerRadiusForSize:
vui_iconImageOfSize:radius:stroke:
setIcon:
setName:
setAgeRating:
setIAP:
setHasIAP:
setSubtitle:
_layoutForTvos
_layoutForIos
previouslyFocusedItem
setMarqueeRunning:
setMarqueeEnabled:
nextFocusedItem
initWithArrangedSubviews:
setDistribution:
widthAnchor
constraintEqualToConstant:
heightAnchor
setContentHuggingPriority:forAxis:
centerYAnchor
safeAreaLayoutGuide
constraintGreaterThanOrEqualToAnchor:
constraintLessThanOrEqualToAnchor:
readableContentGuide
constraintGreaterThanOrEqualToAnchor:constant:
constraintLessThanOrEqualToAnchor:constant:
leftAnchor
rightAnchor
_setFont:
setTitleColor:forState:
blackColor
setBackgroundImage:forStates:
setAppIcon:
setAppName:
setAppSubtitle:
lockupView
setLockupView:
message
setActionButton:
cancelButton
setCancelButton:
appStoreButton
setAppStoreButton:
secondaryLinkButton
setSecondaryLinkButton:
_didLayout
_lockupView
_imageSubtitleView
_buyLockup
_titleView
_messageView
_buttonHeightConstraint
_actionButton
_cancelButton
_appStoreButton
_secondaryLinkButton
initWithSizeClass:
rowTextLayout
setNumberOfLinesAXSmall:
textAlignmentWithSemanticContentAttribute:
losingRowTextLayout
footerTextLayout
setNumberOfLinesAXLarge:
layoutWithLayout:element:sizeClass:
scoreTextLayout
losingScoreTextLayout
availabilityTextLayout
availabilityImageLayout
_rowTextLayout
_scoreTextLayout
_losingRowTextLayout
_losingScoreTextLayout
_footerTextLayout
_availabilityTextLayout
_availabilityImageLayout
_initializeWithInfo:restoringAVPlayerController:
_removeViewModelObservers
transferMediaControllerIfNeeded
_sendPostPlayShouldUpdateNotification
cancelPreviousPerformRequestsWithTarget:selector:object:
viewDidLoad
_addGesutreRecognizersIfNeeded
viewWillAppear:
setDisappearanceReason:
_hostMediaControllerIfPossible
nowPlayingControllerViewWillAppear:
viewWillDisappear:
mediaPlaybackManager
onDisappear
disappearanceReason
nowPlayingControllerViewWillDisappear:withDisappearanceReason:
onAppear
nowPlayingControllerViewDidAppear:
_notifyDelegateOfSafeAreaChange
viewDidDisappear:
nowPlayingControllerViewDidDisappear:
viewDidLayoutSubviews
skipIntroButton
_skipIntroButtonFrame
ratingView
nowPlayingHudView
_isPostPlayVisible
postPlayViewController
_isSkipIntroVisible
mediaController
viewModel
metadata
updateWithMetadata:
showCanonicalID
parentViewController
_removeGestureRecognizersIfNeeded
setMediaPlaybackManager:
setShouldZoomWhenTransitioningToBackground:
setStopPlayerWhenViewDisappears:
initWithMediaController:
setGoesToForegroundOnFirstAppear:
_configureViewModel
_createPostPlayViewController
setWaitingForPostPlayDocumentUpdate:
postPlayConfig
documentUpdateOffsetInterval
performSelector:withObject:afterDelay:
_addMenuGestureRecognizerIfNeeded
_removeMenuGestureRecognizerIfNeeded
nowPlayingControllerDidSelectSkipIntro:
nowPlayingViewControllerMenuButtonPressedToDismiss:
nowPlayingController:safeAreaDidChange:
nowPlayingViewControllerUserDidInteract:
nowPlayingViewController:mediaInfoDidChange:canPlay:
gestureRecognizers
menuGestureRecognizer
nowPlayingController:didEnableUIMode:enabled:
swipeUpGestureRecognizer
mediaControllerHost
relinquishOwnership
adoptMediaController:
postNotificationName:object:
includesProductPageButton
setIncludesProductPageButton:
_createAndConfigureNowPlayingHudView
_nowPlayingHudSafeAreaInset:
internalMenuGestureRecognizer
setEnabled:
setNowPlayingHudView:
setCurrentUI:
setNeedsFocusUpdate
animateWithDuration:delay:options:animations:completion:
_postPlaySafeAreaInset:
waitingForPostPlayDocumentUpdate
setWaitingForPostPlayDocumentUpdateToShowPostPlay:
currentMediaItem
raitingInfoDictioanryWithRatingImage:andMediaItem:
initWithRatingInfoDictionary:
setRatingView:
show:animated:completion:
setAlreadyShownAdvisory:
hasAlreadyShownAdvisory
setTextContentView:
setSkipIntroButton:
_skipIntroSafeAreaInset:
nowPlayingConfig
alertIdleTimeout
currentMediaTitle
presentWithTitle:presentingController:timeout:responseHandler:
migratesMediaControllerFromHost:toHost:
_canContinuePlaybackInWatchNow
setMediaController:
transitionToForeground:animated:
onMediaControllerStateDidChange
onEvent
showPostPlay:animated:
setAutomaticPlaybackStop:
setPlaybackStopReason:
autoPlayedEpisodesCount
setAutoPlayedEpisodesCount:
waitingForPostPlayDocumentUpdateToShowPostPlay
mediaInfo
playbackContext
_initializeForLibraryPlaybackWith:restoringAVPlayerController:
_initializeForExtrasPlaybackWith:restoringAVPlayerController:
_initializeForGenericPlaybackWith:restoringAVPlayerController:
_applicationDidEnterBackground:
_applicationWillEnterForeground:
initWithName:
setPlayer:
avPlayerViewController
setAvPlayerViewController:
setRestoringAVPlayerController:
setMediaInfo:
setRestrictionsAlreadyUnlocked:
_allowsBackgroundPlaybackInWatchThroughOverride
_isNowPlayingHudVisible
standardUserDefaults
boolForKey:
_addSwipeUpGestureRecognizerIfNeeded
_removeSwipeUpGestureRecognizerIfNeeded
_menuPressed:
initWithTarget:action:
setNumberOfTapsRequired:
setAllowedPressTypes:
addGestureRecognizer:
setInternalMenuGestureRecognizer:
removeGestureRecognizer:
_allowsManualPostPlayInvocation
setPlaybackManager:
showsProductPageButton
_addViewModelObservers
skipButtonLayout
_isCurrentMediaMovie
initWithMovieID:
_isCurrentMediaTVShow
initWithShowID:episodeID:
setNowPlayingHudLayout:
initWithFrame:layout:
startPlaybackFromBeginning
_showProductPage
setButtonSelectHandler:
pause
descriptionText
initWithTitle:description:
play
setDismissHandler:
setDescriptionTextSelectionHandler:
setUserInteractionEventHandler:
initWithDocumentRef:
_documentRefContextDataForCurrentMediaType
setContextData:
childViewControllers
convertRect:toView:
_updatePostPlayContextDataForCurrentMediaType:updateEvent:
setPrefetchData:
setPostPlayDelegate:
setPostPlayViewController:
coverImageDidChangeForMediaController:
didFinishPlaybackForMediaController:
stateDidChangeForMediaController:
mediaController:shouldShowStill:afterStoppingForReason:
documentDidFinishCreationWithStatus:
eventDidOccur:
mediaInfoDidChangeTo:canPlay:autoPlay:
documentDidFinishUpdate
initWithNowPlayingInfo:restoringAVPlayerController:
setFinishedPostPlayBootstrap:
setShowsNowPlayingHUD:
setShowsProductPageButton:
showNowPlayingHud:animated:
showAdvisory:image:animated:
showSkipIntro:animated:
showStillWatchingAlertWithFinishedHandler:
customAnimatorForNavigationControllerOperation:toViewController:
customAnimatorForNavigationControllerOperation:fromViewController:
_mediaInfoFromMediaItem:
_stillWatchingAlertDurationOverride
finishedPostPlayBootstrap
showsNowPlayingHUD
currentUI
enabledUIModes
setEnabledUIModes:
setMediaControllerHost:
nowPlayingHudLayout
setViewModel:
isNowPlayingHudVisible
shouldPopWhenDone
setPopWhenDone:
setSkipButtonLayout:
_playbackReportToken
_delegateFlags
_finishedPostPlayBootstrap
_showsNowPlayingHUD
_nowPlayingHudVisible
_popWhenDone
_waitingForPostPlayDocumentUpdate
_waitingForPostPlayDocumentUpdateToShowPostPlay
_mediaPlaybackManager
_mediaController
_currentUI
_appContext
_enabledUIModes
_mediaControllerHost
_nowPlayingHudView
_nowPlayingHudLayout
_viewModel
_skipIntroButton
_postPlayViewController
_playbackContext
_skipButtonLayout
_ratingView
_internalMenuGestureRecognizer
_disappearanceReason
channelLogoImageLayout
maxHeight
maxWidth
layoutWithLayout:
setChannelLogoImageLayout:
channelsTextLayout
setChannelsTextLayout:
_channelLogoImageLayout
_channelsTextLayout
effectForBlurEffect:
setLabel:
_updateContentWithNewLabel:oldLabel:
vibrantLabelWithLabel:
label
_visualEffectView
_label
imageLoadParamsWithImageType:
imageLoadParamsWithMediaEntity:imageType:
getMediaEntityContentType:
recordMedia:
getMediaItemContentType:
recordPageEventWithPageId:andPageType:
createWithPageId:andPageType:andEventData:
recordPage:
stringDescription
vui_mediaEntityType
recordPlayOfMediaEntity:isLaunchingExtras:
recordPlayOfMediaItem:
recordClickOnMediaEntity:
recordPageEventWithPageType:
pageStringForEntityType:
pageStringForLibraryCellType:
pageStringForLibraryShelfType:
pageStringForLibraryCategoryType:
chapterType
playbackTime
playbackDuration
wlk_dictionaryRepresentation
collectTermsFrom:
initWithEventDictionary:termCollater:
initWithEvents:
initWithMetrics:
viewController
setViewController:
_viewController
setCategoryMenuViewModel:
_delayedGridUpdate
setMenuView:
setGridView:
_updateRentals
_accountsChanged:
categoryMenuViewModel
_isDeviceMediaLibraryInitialUpdateInProgress
setCurrentViewType:
_startMonitoringDeviceMediaLibraryInitialUpdate
setNoContentErrorTitle:
setContentView:
_showContentOrNoContentView
mainMenuItems
_initializeLibraryViewControllersWithViewModel:
currentViewType
menuCollectionViewController
updateWithCategories:
section
genreMenuItems
initWithInteger:
indexPathForRow:inSection:
_getMediaEntitiesForIndexPath:
updateWithMediaEntities:changeSet:artworkDictionary:animated:
defaultGradientMaskProperties
initWithMediaEntities:artworkDictionary:maskProperties:
setGridCollectionViewController:
_metricsPageTypeForMenuItemAtIndexPath:
setPageType:
_shouldShowContentView
isInitialUpdateInProgress
_deviceMediaLibraryUpdateStateDidChange:
_stopMonitoringDeviceMediaLibraryInitialUpdate
initWithCategories:
setMenuCollectionViewController:
didUpdateFocusToIndexPath:
didSelectMenuItemAtIndexPath:
contentScrollView
tvLibraryView
setTvLibraryView:
gridCollectionViewController
currentlySelectedIndexPath
setCurrentlySelectedIndexPath:
_menuCollectionViewController
_tvLibraryView
_gridCollectionViewController
_categoryMenuViewModel
_currentlySelectedIndexPath
initWithActivityIndicatorStyle:
startAnimating
_effectView
_spinner
isEqualToSet:
unionSet:
UUID
UUIDString
initWithSet:
_didUpdateRequestProperties
mediaEntityTypes
predicate
sortDescriptors
properties
range
groupingKeyPath
groupingSortComparator
options
subtype
_isItemsFetch
_shouldGenerateSortIndexes
propertyDescriptorForName:
propertyType
sortAsName
sortingPropertyDescriptorForName:
ascending
_finalizedSortDescriptorsFromSortDescriptors:mediaEntityKind:
_finalizedSortDescriptorFromSortDescriptor:mediaEntityKind:
initWithKey:ascending:
initWithMediaEntityType:
setRange:
setGroupingSortComparator:
setOptions:
_isCollectionsFetch
_isShowsFetch
_isSeasonsFetch
_sortIndexPropertyKeyWithMediaEntityKind:
_shouldGenerateGroupingSortIndexes
_manualSortDescriptorsWithMediaEntityKind:propertiesRequiredForSort:
setMediaEntityTypes:
_mediaEntityTypes
_predicate
_sortDescriptors
_properties
_groupingKeyPath
_groupingSortComparator
_options
_range
handler
setHandler:
completion
setCompletion:
_handler
_completion
window
_tvButtonAction:
setTvButtonRecognizer:
strongToStrongObjectsMapTable
tvButtonRecognizer
gestureToHandlerMap
defaultListener
initWithAttachingToView:
registerHandler:completion:
setGestureToHandlerMap:
_tvButtonRecognizer
_gestureToHandlerMap
initWithMediaItem:mediaEntityIdentifier:serialProcessingDispatchQueue:
initWithMediaItemCollection:mediaEntityIdentifier:serialProcessingDispatchQueue:
valuesForProperties:
longLongValue
initWithMediaItem:serialProcessingDispatchQueue:
mediaItemAssetControllerWithMediaItem:mediaEntityIdentifier:
mediaItemCollectionAssetControllerWithMediaItemCollection:mediaEntityIdentifier:
mediaItemDownloadControllerWithMediaItem:
libraryFileURL
setLibraryFileURL:
_libraryFileURL
contextDataDictionary
_contextDataDictionary
vui_keyBlueColor
setLayoutMargins:
addLayoutGuide:
constraintEqualToAnchor:multiplier:
_buildCarousel
_buildLogoStack
tintColor
_setContinuousCornerRadius:
vui_tertiaryDynamicBackgroundColor
systemFontOfSize:
dequeueReusableCellWithReuseIdentifier:forIndex:
_imageViewForIndex:
setInteritemSpacing:
setScrollMode:
setUnitScrollDuration:
vui_iconImageOfSize:
isHighlighted
animateWithDuration:animations:
numberOfItemsInCarouselView:
carouselView:cellForItemAtIndex:
initWithApps:
allowButton
disallowButton
seeAllButton
nackButton
bodyScroll
setBody:
setFooter:
showNackScreen
privacyView
setPrivacyView:
_titlePlacementGuide
_scrollStack
_bodyScroll
_bodyLabel
_logoStack
_bottomStack
_allowButton
_disallowButton
_nackButton
_privacyLabel
_seeAllButton
_carouselView
_privacyView
initWithEventType:
purchases
playActivity
settings
upNext
favorites
accountChanged
removeFromPlayHistory
entitlements
utsk
restrictions
preferredVideoFormat
appDidBecomeActive
playHistoryUpdated
clearPlayHistory
appRefresh
locationAuthorizationChanged
setType:
_type
isAdultContent
liveStreamServiceID
referenceID
mediaType
tvAppDeeplinkURL
isEntitledToPlay
contentMetadata
channelDetails
punchoutURL
recordPlay:isLaunchingExtras:
recordPunchout:isUrlForPlay:
initWithIdentifier:type:
vui_dateForKey:
initWithStringRepresentation:
fileURLWithPath:relativeToURL:
isLocal
episodeNumber
studio
credits
stringRepresentation
previewFrameURL
playbackURL
filePathURL
relativeString
stringByRemovingPercentEncoding
offlineFPSKeys
downloadState
isPlayable
setSeason:
setDuration:
setReleaseDate:
setPreviewFrameURL:
setContentRating:
setColorCapability:
setHLSColorCapability:
setEpisodeNumber:
setStudio:
setCredits:
setPlaybackURL:
setFilePathURL:
setOfflineFPSKeys:
setDownloadState:
_local
_season
_duration
_releaseDate
_previewFrameURL
_contentRating
_colorCapability
_HLSColorCapability
_episodeNumber
_studio
_credits
_playbackURL
_filePathURL
_offlineFPSKeys
_downloadState
allObjects
_itemsFetchResponseWithRequest:error:
_collectionsFetchResponseWithRequest:error:
database
movies
movieRentals
homeVideos
episodes
initWithMediaLibrary:databaseItem:requestedProperties:
_fetchResponseWithMediaEntities:request:
shows
initWithMediaLibrary:databaseShow:requestedProperties:
seasons
initWithMediaLibrary:databaseSeason:requestedProperties:
_mediaEntityKindForRequest:
sortedArrayUsingDescriptors:
setMediaEntitySubtype:
setGrouping:
setGroupingSortIndexes:
fetchControllers
_logStringWithFetchControllers:
mediaLibraryRevision
logName
beginFetchWithMediaLibraryRevision:completionHandler:completionQueue:
initWithFetchControllers:mediaLibraryRevision:
setFetchControllers:
setMediaLibraryRevision:
_fetchControllers
_mediaLibraryRevision
initWithStyle:reuseIdentifier:
image
setEventTypeLabelStr:
setSubhead1LabelStr:
setSubhead2LabelStr:
setTabName:
tabImage
setTabImage:
eventTypeLabelStr
subhead1LabelStr
subhead2LabelStr
tabName
eventTypeLabel
setEventTypeLabel:
eventTypeLabelLayout
setEventTypeLabelLayout:
subhead1Label
setSubhead1Label:
subhead1LabelLayout
setSubhead1LabelLayout:
subhead2Label
setSubhead2Label:
subhead2LabelLayout
setSubhead2LabelLayout:
tabNameLabel
setTabNameLabel:
tabNameLabelLayout
setTabNameLabelLayout:
tabImageView
setTabImageView:
separatorView
setSeparatorView:
_eventTypeLabelStr
_subhead1LabelStr
_subhead2LabelStr
_tabName
_eventTypeLabel
_eventTypeLabelLayout
_subhead1Label
_subhead1LabelLayout
_subhead2Label
_subhead2LabelLayout
_tabNameLabel
_tabNameLabelLayout
_tabImageView
_separatorView
vui_opacityColorWithType:userInterfaceStyle:
setDarkColor:
systemGrayColor
rentalExpirationTextLayout
groupedKeys
groupMargin
badgeImageLayout
commonSenseMargin
tomatoMeterMargin
_rentalExpirationTextLayout
_groupedKeys
_badgeImageLayout
_groupMargin
_commonSenseMargin
_tomatoMeterMargin
initWithMediaLibrary:fetchReason:
setCurrentFetchResponse:
_handleInitialFetchControllerOperationDidCompleteWithResult:error:
_handleContentsChangeFetchControllerOperationDidCompleteWithResult:error:
_notifyFetchDidCompleteWithResult:
_notifyFetchDidFailWithError:
controller:fetchDidCompleteWithResult:
controller:fetchDidFailWithError:
fetchResponse
fetchChanges
tableView
registerClass:forCellReuseIdentifier:
allKeys
sortedArrayUsingSelector:
dequeueReusableCellWithIdentifier:forIndexPath:
sortedKeys
detailTextLabel
numberOfSectionsInTableView:
tableView:numberOfRowsInSection:
tableView:cellForRowAtIndexPath:
setDictionary:
_dictionary
preferredContentSizeCategory
headerTextLayout
_setupLayout
middleSpacing
_headerTextLayout
_middleSpacing
elementType
initWithLayoutType:
layoutType
headerTitleLayout
headerSubtitleLayout
sourceTextLayout
tv_highlightColor
setHighlightColor:
setDarkHighlightColor:
tv_borderRadius
cornerRadiiValue
reviewTableLayout
_setupLayout:
setDarkBackgroundColor:
setRatingStyle:
setRatingStyleAXLarge:
setRatingStyleAXSmall:
setInteritemSpacingAXLarge:
setInteritemSpacingAXSmall:
setSeeMoreTextColor:
darkColor
setDarkSeeMoreTextColor:
headerBadgeLayout
sourceBadgeLayout
ratingBadgeLayout
darkHighlightColor
headerImagePadding
_headerTitleLayout
_headerSubtitleLayout
_sourceTextLayout
_headerBadgeLayout
_sourceBadgeLayout
_reviewTableLayout
_ratingBadgeLayout
_darkHighlightColor
_layoutType
_borderRadii
_headerImagePadding
initWithParams:scaleToSize:cropToFit:
_plistMediaEntityImageLoadParams
imageURL
isFileURL
dataWithContentsOfFile:
dataWithContentsOfURL:
imageWithData:
setScalingResult:
params
initWithParams:
_mediaEntityTypeForMPMediaEntity:mediaCategory:mediaCollectionType:
componentsSeparatedByString:
_numberForString:
category
mediaEntity
valueForProperty:
unsignedLongLongValue
collectionType
setWithArray:
_stringForNumber:
decimalNumberWithString:
rental
parseIdentifier:withBlock:
initWithMediaEntity:appContext:mediaCategory:mediaCollectionType:
setMediaEntity:
_mediaEntity
sizeToFit
initWithFrame:loadingString:
startTimer
loadingLabel
setLoadingLabel:
indicatorView
setIndicatorView:
_loadingLabel
_indicatorView
_restrictionsMaximumEffectiveMovieRanking
_restrictionsMaximumEffectiveTVShowRanking
_preferredVideoFormat
_formatStringForVideoFormat:
_hasRestrictionsChanged
_hasPreferredVideoFormatChanged
_sendSettingsValuesToJS
dictionaryWithCapacity:
maxMovieRank
null
maxTVShowRank
preferencesJSONData
sharedAppleTVServicesPreferences
stringForKey:
_resolutionFromString:defaultResolution:
restrictionsEnabled
effectiveValueForSetting:
checkAndUpdateSettings
setMaxMovieRank:
setMaxTVShowRank:
setPreferredVideoFormat:
_maxMovieRank
_maxTVShowRank
isAXLargeEnabled:
topMarginToLabel:withBaselineMargin:
bottomMarginToLabel:withBaselineMargin:
effectiveUserInterfaceLayoutDirection
channelNameTextLayout
setCenter:
_chinHeightForSize:
setSelected:animated:withAnimationCoordinator:
appIconView
channelNameLabel
isEntitled
_isEntitled
_imageView
_appIconView
_channelNameLabel
_subtitleLabel
_textLabel
_tagsView
_versionsButton
_channelImageBackgroundView
setDefaultLogObject:
_defaultLogObject
_registerForApplicationStateNotifications
_stateDidChangeFromState:toState:onEvent:context:userInfo:
initWithName:initialState:mode:stateChangeHandler:
setLogObject:
setCallsStateChangeHandlerSynchronously:
_registerStateMachineHandlers
setShouldAcceptEvents:
_cleanUpEverything
_addProxyImageView
cancelPreviousPerformRequestsWithTarget:
shouldStopPlayerWhenViewDisappears
setPlaybackEnabled:
isBackgrounded
_updateAVPlayerViewControllerWithAVPlayerForPlayer:
isAutomaticPlaybackStart
playbackStartReason
setVpafPlaybackStartReason:
isAutomaticPlaybackStop
playbackStopReason
setVpafPlaybackStopReason:
intent
imageProxies
setImageProxies:
_setImageProxies:
_updateMediaInfo
stateMachine
postEvent:
playbackControlsIncludeTransportBar
playbackControlsIncludeInfoViews
setPlaybackControlsIncludeTransportBar:
setPlaybackControlsIncludeInfoViews:
postEvent:withContext:userInfo:
doesDelegateRespondToStateChange
setDoesDelegateRespondToStateChange:
setDoesDelegateRespondToShowStill:
isPlayerReadyToBePlayed
playbackLoadingTimer
invalidate
setPlaybackLoadingTimer:
setPlaybackLoadingStartDate:
_updateCurrentPlaybackViewFrameForPlaybackInBackground:animated:
_handleApplicationWillResignActiveNotification:
_handleApplicationDidEnterBackgroundNotification:
_handleApplicationDidBecomeActiveNotification:
loading
setShouldPlayAfterAppBecomesActive:
shouldPlayAfterAppBecomesActive
_playbackStateChanged:
_handlePlaybackErrorNotification:
_mediaControllerStartedPlayback:
overlayViewDisplayDuration
_addOverlayViewAnimatedIfNeeded:dismissAfter:
_addContentViewIfNeeded
tvpPlaylist
titleForLogging
rangeOfString:
stringByReplacingCharactersInRange:withString:
setTitleForLogging:
stringByAppendingString:
isRestoringAVPlayerController
playlist
isEqualToPlaylist:
setPlayerReadyToBePlayed:
_setPlaylist:
currentImageProxy
loadSynchronouslyIfCached
clearPreviousImageBeforeLoading
shouldDelayLoadingImage
proxyImageView
setCurrentImageProxy:
setPendingPlaylist:
_cleanUpEverythingPlaybackRelated
_unregisterPlayerNotifications
_removePlaybackViewController
secondaryVideoView
setSecondaryVideoView:
setPlaybackContainerController:
didWeCreatePlayer
overlayView
_removeOverlayView:animated:
scheduledTimerWithTimeInterval:repeats:block:
playbackContainerController
showsSecondaryVideoView
performWithoutAnimation:
insertSubview:belowSubview:
load
vpafPlaybackStartReason
shouldStopWhenAnotherMediaControllerStarts
showsVideoControls
doesDelegateRespondToShowStill
shouldZoomWhenTransitioningToBackground
currentMediaItemPresentationSize
_hasSecondaryView
_playbackContainerViewFrame:hasSecondaryVideoView:
_secondaryVideoViewFrame:
setTransform:
_shouldShowSecondaryView
setVideoGravity:
insertSubview:aboveSubview:
avPlayer
pauseStateTimeoutTimer
setPauseStateTimeoutTimer:
vpafPlaybackStopReason
isPictureInPictureActive
setMuted:
setDidWeCreatePlayer:
setPlaylist:
_registerPlayerNotifications
setAllowsPictureInPicturePlayback:
setAllowInfoMetadataSubpanel:
_addPlaybackViewControllerForPlayback:
uiImage
_delayLoadImage:
isPlaybackEnabled
playbackDelayInterval
activeListIndex
addIndex:
removeItemsAtIndexes:
trackList
addItems:
changeMediaInDirection:
removeItemAtIndex:
executeBlockAfterCurrentStateTransition:
currentState
registerHandlerForEvent:onStates:withBlock:
setPendingImageProxy:
registerHandlerForEvent:onState:withBlock:
pendingPlaylist
_swapActiveMedia:animated:completion:
pendingImageProxy
_shouldIgnorePlaybackStop
paused
playbackLoadingStartDate
timeIntervalSinceDate:
popWhenPlayerStops
popViewControllerAnimated:
registerDefaultHandlerForEvent:withBlock:
setPreventsSleepDuringVideoPlayback:
setShowsVideoControls:
coverImage
shouldUpdateFocusInContext:
_canPause
_removeProxyImageView
allowsSkipping
setAllowsSkipping:
setClearPreviousImageBeforeLoading:
setPopWhenPlayerStops:
setStopWhenAnotherMediaControllerStarts:
setProxyImageView:
setStateMachine:
imageAnimationOptions
setImageAnimationOptions:
imageAnimationDuration
setImageAnimationDuration:
imageTransitionInterval
setImageTransitionInterval:
shouldAnimateOverlayView
setShouldAnimateOverlayView:
setOverlayViewDisplayDuration:
_allowsSkipping
_shouldZoomWhenTransitioningToBackground
_playbackEnabled
_stopPlayerWhenViewDisappears
_clearPreviousImageBeforeLoading
_popWhenPlayerStops
_restoringAVPlayerController
_stopWhenAnotherMediaControllerStarts
_playerReadyToBePlayed
_shouldAnimateOverlayView
_doesDelegateRespondToShowStill
_doesDelegateRespondToStateChange
_automaticPlaybackStart
_automaticPlaybackStop
_shouldPlayAfterAppBecomesActive
_didWeCreatePlayer
_player
_avPlayerViewController
_mediaInfo
_name
_proxyImageView
_currentImageProxy
_playbackContainerController
_playbackLoadingStartDate
_playbackLoadingTimer
_stateMachine
_pendingPlaylist
_pendingImageProxy
_imageAnimationOptions
_imageAnimationDuration
_imageTransitionInterval
_overlayViewDisplayDuration
_playbackStopReason
_secondaryVideoView
_pauseStateTimeoutTimer
_vpafPlaybackStartReason
_vpafPlaybackStopReason
_titleForLogging
doubleForKey:
setTextBadgeLayout:
vui_imageBorderColor
setUpscaleFactor:
defaultProgressBarLayout
appImageLayout
setAppImageLayout:
setLogoImageLayout:
setProgressBarLayout:
setBadgeLayout:
setTitleLayout:
subtitleLayout
setSubtitleLayout:
_appImageLayout
_logoImageLayout
_progressBarLayout
_badgeLayout
_subtitleLayout
_textBadgeLayout
timerWithTimeInterval:repeats:block:
mainRunLoop
addTimer:forMode:
timeoutInterval
_timeoutInterval
stackCollectionView
_scrollToTopIfPossible:
setShowsVerticalScrollIndicator:
setShowsHorizontalScrollIndicator:
setAlwaysBounceVertical:
configureWithCollectionView:
_updateNavigationBarPadding
currentView
invalidateLayout
isMovingFromParentViewController
viewWillTransitionToSize:withTransitionCoordinator:
animateAlongsideTransition:completion:
navigationBar
layoutMargins
scrollToTop
preferredStatusBarStyle
collectionView:layout:minimumLineSpacingForSectionAtIndex:
_invalidateLayouts
stackView
_requiresRelayout
_focusedIndexPath
_stackView
_stackCollectionView
vui_VUIMediaEntityResolutionFromMPMediaItemVideoQuality:
vui_VUIMediaEntityColorCapabilityFromMPMediaItemColorCapability:
vui_VUIMediaEntityAudioCapabilityFromMPMediaItemAudioCapability:
_vui_imageIdentifierWithImageType:
setCast:
setProducers:
setDirectors:
setScreenwriters:
vui_assetType
_vui_isLocalWithPropertyValues:
playedStateForDuration:elapsedTime:hasBeenPlayed:playCount:
dateWithTimeIntervalSinceReferenceDate:
initWithTimeInterval:sinceDate:
vui_rentalPlaybackEndDate
vui_rentalEndDate
earlierDate:
vui_assetTypeIgnoringLocalAsset:
_vui_isNetworkPlayableWithPropertyValues:
vui_coverArtImageIdentifier
vui_previewFrameImageIdentifier
artworkCatalog
screenshotArtworkCatalog
homeSharingDatabaseID
initWithMediaItem:andImageType:
vui_artworkCatalogWithImageType:
visualIdenticalityIdentifier
tv_filenameSafeString
vui_resolution
vui_colorCapability
vui_audioCapability
vui_HLSResolution
vui_HLSColorCapability
vui_HLSAudioCapability
vui_showIdentifier
vui_seasonIdentifier
vui_studio
vui_credits
vui_contentRating
vui_isPlayable
vui_isLocal
vui_extrasURL
vui_playedState
vui_rentalExpirationDate
vui_imageIdentifierWithImageType:
vui_imageLoadParamsWithImageType:
vui_MPMediaItemVideoQualityFromVUIMediaEntityResolution:
vui_MPMediaItemColorCapabilityFromVUIMediaEntityColorCapability:
vui_MPMediaItemAudioCapabilityFromVUIMediaEntityAudioCapability:
allocWithZone:
setFontTraits:
setFontFeature:
setHighlightOrSelectedColor:
setDarkHighlightOrSelectedColor:
setShadow:
setLetterSpacing:
vui_fontFromTextLayout:
_defaultParagraphStyle
attributedStringWithString:view:
attributedStringWithAttributedString:view:
initWithAttributedString:
localizedLowercaseString
localizedUppercaseString
localizedCapitalizedString
mutableString
setString:
_accessibilityHigherContrastTintColorForColor:
beginEditing
letterSpacing
shadow
addAttribute:value:range:
enumerateAttributesInRange:options:usingBlock:
endEditing
numberOfLines
isAXSmallEnabled:
numberOfLinesAXSmall
numberOfLinesAXLarge
defaultParagraphStyle
setHyphenationFactor:
defaultAttributesForLabel:
attributedStringWithString:
numberOfLinesForTraitCollection:
textStyle
maximumContentSizeCategory
fontFamily
fontWeight
fontSize
fontTraits
fontFeature
highlightOrSelectedColor
darkHighlightOrSelectedColor
seeMoreTextColor
darkSeeMoreTextColor
textTransform
alignment
minimumScaleFactor
lineBreakMode
blendMode
alwaysFocusable
_alwaysFocusable
_fontTraits
_blendMode
_textStyle
_maximumContentSizeCategory
_fontFamily
_fontWeight
_fontSize
_fontFeature
_color
_darkColor
_highlightOrSelectedColor
_darkHighlightOrSelectedColor
_seeMoreTextColor
_darkSeeMoreTextColor
_textTransform
_alignment
_numberOfLines
_numberOfLinesAXSmall
_numberOfLinesAXLarge
_minimumScaleFactor
_shadow
_letterSpacing
_lineBreakMode
_margin
consumeMetadataForKey:
transitionTypeForMediaControllerAutoStart:
consumeStopType
consumeStopReason
consumeStartType
consumeStartReason
transitionReasonForMediaControllerStartReason:autoStart:
transitionReasonForMediaControllerStopReason:autoStart:
debugUIEnabled
setDebugUIEnabled:
metricsLoggingEnabled
setMetricsLoggingEnabled:
metricsExpandedLoggingEnabled
setMetricsExpandedLoggingEnabled:
enableDemoMode
setEnableDemoMode:
_debugUIEnabled
_metricsLoggingEnabled
_metricsExpandedLoggingEnabled
_enableDemoMode
_userAccount
accountName
firstName
lastName
localizedName
_isObservingAccountStoreChange
_accountStoreDidChange:
set_isObservingAccountStoreChange:
sharedRestrictionsMonitor
defaultStore
activeAccount
initWithAccount:
setPromptStyle:
_performAuthenticationWithContext:completionHandler:
setAccountName:
setPassword:
signOutAccount:completion:
_authRequest
initWithAuthenticationContext:
set_authRequest:
authenticateResponseType
startWithAuthenticateResponseBlock:
userAccountName
userFirstName
userLastName
userFullName
signInUserWithAppleID:password:completionHandler:
signOutUserWithCompletionHandler:
__isObservingAccountStoreChange
__authRequest
initWithCapacity:
documentDataSourceWithDictionary:
setDocumentDataSources:
setAction:
setTabIdentifier:
setNativePageName:
setLocalLibraryLink:
setActionFirst:
tabIdentifier
nativePageName
_actionFirst
_documentDataSources
_action
_tabIdentifier
_localLibraryLink
_nativePageName
_initWithSuccess:domainVersion:peerPutItems:putOKKeys:rejectedKeys:
isRunningInStoreDemoMode
_callSyncHandler:queue:success:newVersion:rejectedKeys:putOKKeys:peerPutItems:
tvs_arrayByMappingObjectsUsingBlock:
dataFromPlist:contentType:error:
setURLBagKey:
setAllowedRetryCount:
documentLoaderWithRequestProperties:
setAuthenticationType:
setPostprocessor:
tvs_numberForKey:
tvs_dictionaryForKey:
tvs_arrayForKey:
loadWithCompletionHandler:
syncDomain:version:conflictDetection:puts:queue:handler:
initWithKey:value:
_key
_value
success
domainVersion
peerPutItems
putOKKeys
rejectedKeys
_success
_domainVersion
_peerPutItems
_putOKKeys
_rejectedKeys
arrayWithCapacity:
tvs_dataForKey:
populateCommonTermsFrom:
intersectSet:
mutableCommonTerms
minusSet:
blacklistedTerms
baseTerms
whitelistedTerms
timingTerms
commonTerms
setMutableCommonTerms:
mutableTimingTerms
setMutableTimingTerms:
_mutableCommonTerms
_mutableTimingTerms
configureHeaderViewWithTitle:
subtitle
integerValueType
defaultIntegerValue
defaultBoolValue
setOn:animated:
toggleDefaultBoolValue
setDefaultIntegerValue:
resignFirstResponder
textFieldShouldBeginEditing:
textFieldDidBeginEditing:
textFieldShouldEndEditing:
textFieldDidEndEditing:
textFieldDidEndEditing:reason:
textField:shouldChangeCharactersInRange:replacementString:
textFieldDidChangeSelection:
textFieldShouldClear:
textFieldShouldReturn:
configureCellWithDefaults:
_defaultsSwitchPressed:
defaultsSwitch
setDefaultsSwitch:
textField
setTextField:
defaults
setDefaults:
_defaultsSwitch
_textField
_defaults
initWithImage:
configureWithTitle:
accessoryView
setAccessoryView:
_accessoryView
_sendVideoSubscriberChangedNotificationToTheJavaScript
valueWithObject:inContext:
managedValueWithValue:
virtualMachine
addManagedReference:withOwner:
sharedCenter
channelIDs
providerInfo
callWithArguments:
removeManagedReference:withOwner:
fetchAccountChannelsWithCompletionHandler:
fetchMSOProviderStatus:
accountStore
setAccountStore:
_accountStore
imageLoadOperation
setImageLoadOperation:
requestCount
setRequestCount:
_imageLoadOperation
_requestCount
_cancelAllImageLoads
_imageLoadParamsForImageLoaderObject:
_imageIdentifierWithImageLoadParams:
_scaledImageIdentifierWithImageIdentifier:scaleToSize:cropToFit:
imageLoadContextsByImageIdentifier
_imageLoadOperationWithParams:scaleToSize:cropToFit:
imageLoadOperationQueue
scalingResult
initWithOperation:
cancelAllOperations
imageIdentifier
_imageLoaderIdentifier
imageKeyForObject:
cancelLoad:
URLForObject:
hasImageCache
loadImageForObject:scaleToSize:cropToFit:completionHandler:
loadImageForObject:scaleToSize:cropToFit:imageDirection:completionHandler:
loadImageForObject:scaleToSize:cropToFit:imageDirection:requestLoader:completionHandler:
setImageLoadContextsByImageIdentifier:
setImageLoadOperationQueue:
_imageLoadContextsByImageIdentifier
_imageLoadOperationQueue
wlk_JSgenericProperties
wlk_jsPropertyStrings
_fontFromTextStyle:maximumContentSizeCategory:fontWeight:fontSize:symbolicTraits:fontFeature:
_uifontWeightFromFontWeight:
systemFontSize
systemFontOfSize:weight:design:
fontDescriptor
initWithFontAttributes:
fontDescriptorWithName:size:
systemFontOfSize:weight:
symbolicTraits
fontDescriptorWithSymbolicTraits:
_uiFontAttributesForFeature:
fontDescriptorByAddingAttributes:
fontWithDescriptor:size:
_preferredFontForTextStyle:maximumContentSizeCategory:
ascender
scaleContentSizeValue:forTraitCollection:
descender
baselineHeight
topMarginWithBaselineMargin:traitCollection:
bottomMarginWithBaselineMargin:traitCollection:
topMarginToFont:withBaselineMargin:traitCollection:
vui_fontFromTextStyle:fontWeight:fontSize:symbolicTraits:
setRoundContentWhenDeselected:
setFocusedSizeIncrease:
setContentMotionRotation:translation:
configurationWithStyle:
setFocusAnimationConfiguration:
_updateSelectedBackgroundColor
initWithSize:
attributedText
removeAttribute:range:
setAttributedStrings:
updateFloatingViewControlState
_updateTitleTextColor
_floatingViewControlState
setControlState:animated:
_currentFocusAnimationCoordinator
setControlState:withAnimationCoordinator:
setBackgroundColor:forState:
setShouldAppearSelected:
shouldAppearSelected
_shouldAppearSelected
_floatingView
_classNameFromPropertyType:
allowsDefaultValue
data
propertyValueClassName
_updateSourceSupportsFiltering
defaultValue
sourcePropertyNames
retrievesSourcePropertiesAtFetch
sourceSupportsFiltering
sourceFilterValueBlock
sourceFilterBlock
setSourceSupportsFiltering:
setSourceFilterValueBlock:
setSourceFilterBlock:
setPropertyType:
setPropertyValueClassName:
setDefaultValue:
setAllowsDefaultValue:
_allowsDefaultValue
_retrievesSourcePropertiesAtFetch
_sourceSupportsFiltering
_sortAsName
_propertyType
_propertyValueClassName
_defaultValue
_sourcePropertyNames
_sourceFilterValueBlock
_sourceFilterBlock
initWithGridStyle:
gridStyle
vui_itemWidthForGridStyle:gridType:
_configureSizingCell
_setupViews
_updateShelfViewFrameAnimated:
configureVUITVLibraryEpisodeListCell:withMedia:width:cornerRadius:
nextFocusedIndexPath
_startPlaybackWithMediaItem:
seasonNumber
cellForItemAtIndexPath:
convertRect:fromView:
animateWithDuration:animations:completion:
initWithPlaybackContext:mpMediaItems:
setUserPlaybackInitiationDate:openURLCompletionDate:
playMediaInfo:isRentAndWatchNow:
collectionView:layout:sizeForItemAtIndexPath:
collectionView:layout:insetForSectionAtIndex:
collectionView:layout:minimumInteritemSpacingForSectionAtIndex:
collectionView:layout:referenceSizeForHeaderInSection:
collectionView:layout:referenceSizeForFooterInSection:
didTapOnImageViewWithMediaItem:
didTapOnInformationViewWithTitle:description:
initWithEpisodes:season:
cellWidth
setCellWidth:
cellSize
setCellSize:
setEpisodes:
lastFocusedIndexPath
setLastFocusedIndexPath:
shelfTitleView
setShelfTitleView:
seasonVisualEffectLabel
setSeasonVisualEffectLabel:
sizingCell
setSizingCell:
_cellWidth
_episodes
_lastFocusedIndexPath
_shelfTitleView
_seasonVisualEffectLabel
_sizingCell
_cellSize
setClipsContentToBounds:
setContentOpaque:
setShadowEnabled:
setShadowAlpha:
setShadowCardSize:
setShadowCardImage:
setShadowViewFrameWithContentMargin:
CGImage
setContents:
setContentsScale:
setContentsCenter:
floatingContentView:isTransitioningFromState:toState:
floatingContentView:didFinishTransitioningToState:
setBackgroundColorForDefault:highlight:focus:
shadowAlpha
shadowCardSize
shadowCardImage
shadowView
setShadowView:
_shadowAlpha
_shadowCardImage
_shadowView
_shadowCardSize
initWithRouterData:viewElement:
initWithDataDictionary:viewElement:
routerDataSource
setDataDictionary:
setRouterDataSource:
_dataDictionary
_routerDataSource
initWithItemID:itemType:brandID:caller:
ongoingItemIDOperationDictionary
setOngoingItemIDOperationDictionary:
_ongoingItemIDOperationDictionary
vui_collectionInteritemSpace:gridType:
setAlwaysBounceHorizontal:
gradientConfigForCollection:gradientMask:properties:configuration:
_setGradientMaskLengths:
_setGradientMaskEdgeInsets:
setGradientBoundsInsets:
_addPlayPauseHandler
setArtworkInfoDictionary:
scrollToItemAtIndexPath:atScrollPosition:animated:
vui_applyChangeSet:inSection:updateDataSourceBlock:completionHandler:
previouslyFocusedView
remembersLastFocusedIndexPath
indexPathsForVisibleItems
_configureSizingCellForItemAtIndexPath:
artworkInfoDictionary
initWithMediaCollection:
storeID
_showExtrasForMediaItem:
numberOfSections
numberOfItemsInSection:
_playPausePressed:
focusedView
visibleCells
indexPathForCell:
gridCollectionViewControllerDelegate
setGridCollectionViewControllerDelegate:
pageType
currentlySelectedMediaEntity
setCurrentlySelectedMediaEntity:
setGridStyle:
indexPathForLastFocusedItem
setIndexPathForLastFocusedItem:
maskProperties
setMaskProperties:
_gridCollectionViewControllerDelegate
_pageType
_currentlySelectedMediaEntity
_gridStyle
_indexPathForLastFocusedItem
_artworkInfoDictionary
_maskProperties
_mainImageLoaded
imagePosition
_maxTextWidthForImagePosition:width:appImageLayout:textLayout:
reverseObjectEnumerator
imageSize
vui_sizeThatFits:layout:
scaleContentSizeValue:forTraitCollection:maximumContentSizeCategory:
font
capHeight
initWithFrame:layoutFactory:
setAppImageView:
setOverlayView:
setLabelViews:
setButton:
appImageView
labelViews
debugString
setDebugString:
_layoutFactory
_appImageView
_labelViews
_overlayView
_button
_debugString
_onIsUpdateInProgressChangedNotification:
_onSyncGenerationChangedNotification:
_mediaLibraryChanged:
orderedItemsMap
removeAll
_dataSourceWillChange
_dataSourceType
entities
processEntities:forDataSourceType:
_dataSourceChanged:
_dataSourceDidChange
wlk_mediaItemForPersistentIdentifier:
setByAddingObjectsFromArray:
wlk_mediaTypeString
wlk_mediaItemForStoreIdentifier:
sharedCloudController
isUpdateInProgress
isInitialImport
_getItem:includeChildren:additionalProperties:
orderedKeys
_mediaItemForIdentifier:
setJSValue:forProperty:
setFittingSize:
setDestinationScale:
jsValueForProperty:
requestImageWithCompletionHandler:
addOperationWithBlock:
wlk_stringIdentifierForProperty:
numberWithFloat:
loadUpdateProgressWithCompletionHandler:
defaultMediaLibrary
hasMedia
homeVideosQuery
moviesQuery
tvShowsQuery
setIgnoreSystemFilterPredicates:
_countOfItems
_dataSourceForConfigurationOptions:
setQueryDataSource:
queryDataSource
initWithAppContext:options:
mediaCategory
mediaCollectionType
fetchOperationQueue
fetchCompletionOperationQueue
updateEntities:
sourceType
_dateFromConfigurationObject:
wlk_JSmovieProperties
setByAddingObjectsFromSet:
predicateWithValue:forProperty:
addFilterPredicate:
setGroupingType:
wlk_JStvShowProperties
predicateMatchingPredicates:
_setOrderingProperties:
_setOrderingDirectionMappings:
setItemPropertiesToFetch:
setCollectionPropertiesToFetch:
_orderingProperties
arrayByAddingObjectsFromArray:
_orderingDirectionMappings
predicateWithValue:forProperty:comparisonType:
initWithQuery:entityType:
setSourceType:
dateWithTimeIntervalSince1970:
timeIntervalSinceReferenceDate
entityAtIndex:
wlk_stringIdentifierForSeason
_identifierForMediaItem:withProperty:
wlk_playState
_logObject
itemsMapAddedKeys:andRemovedKeys:
findItemByPersistentIdentifier::
findItemByStoreIdentifier::
getIsUpdateInProgress
getIsInitialImport
getImageForItem:::
getItem::
getItemCount
getShowIdentifierForStoreIdentifier:
getItemWithChildren::
getItems
getUpdateProgress:
libraryHasMedia
setFilter:
setFilterAsync::
queryHasItemCount:
fetchMediaEntitiesWithOptions::
isHDRCapable
setOrderedItemsMap:
setFetchOperationQueue:
setFetchCompletionOperationQueue:
_artworkLoadingQueue
_queue
_workQueue
_queryDataSource
_orderedItemsMap
_fetchOperationQueue
_fetchCompletionOperationQueue
status
downloadProgress
bytesToDownload
bytesDownloaded
supportsCancellation
supportsPausing
isDownloadInProgress
setStatus:
setDownloadProgress:
setSupportsCancellation:
setSupportsPausing:
setBytesToDownload:
setBytesDownloaded:
_supportsCancellation
_supportsPausing
_status
_downloadProgress
_bytesToDownload
_bytesDownloaded
stackWrappingView
mediaPlayer
isPlaying
_backgroundImageRequiresBlur
_blurEffectStyle
setBackdropBlurEffectStyle:
setBackdropInitialPeek:
setBackdropPeekGradient:
_backgroundImageProxy
backgroundElement
videosPlayablesFromDictionaries:andMetadataDictionary:
initWithPlaybackContext:videosPlayables:imageProxies:storeDictionary:
setShouldDelayLoadingImage:
setShowsSecondaryVideoView:
setAllowsPictureInPicture:
setPlaybackDelayInterval:
scrollStopForShowcaseTransition
sectionIndex
edge
_setSpeedBumpEdges:
tv_associatedIKViewElement
indexOfObject:
showcaseFactorDidChange
setSectionIndex:
setEdge:
setOffset:
_shouldOverlayBlur
updateBackgroundAndBackdrop
parsedMediaInfo
didUpdateSectionInfo
scrollStopForEnteringSectionAtIndex:fromEdge:
_lastFocusableIndex
grayColor
setFormatString:
invalidateTimer
_computeExpirationLabel:
_calculateExpirationStringForDate:displayWarningColor:updateInterval:formatString:
redColor
setAttributedText:
initWithCalendarIdentifier:
components:fromDate:toDate:options:
hour
minute
second
timeIntervalSinceNow
calculateExpirationStringForDate:updateInterval:formatString:
expirationDate
formatString
expiryUpdateTimer
setExpiryUpdateTimer:
_expirationDate
_formatString
_expiryUpdateTimer
initWithAction:canonicalID:caller:
ongoingCanonicalIDOperationDictionary
setOngoingCanonicalIDOperationDictionary:
_ongoingCanonicalIDOperationDictionary
setFloatingContentView:
setDataContentView:
dictionaryWithDictionary:
_setDefaultAttributes:
_updateVisualsAppearance
episodeLayout
viewsMap
metadataLayout
highlightedContentMargin
focusedContentMargin
defaultContentMargin
defaultBackgroundColorWithTraitCollection:
highlightedBackgroundColorWithTraitCollection:
focusedBackgroundColorWithTraitCollection:
_containsData
setAnimating:
animatedTitleLabel
_updateTextsAppearance
initWithLayout:
setEpisodeLabel:
setMetadataView:
canBecomeFocused
episodeLabel
metadataView
setAnimatedTitleLabel:
floatingContentView
dataContentView
_episodeLabel
_descriptionLabel
_metadataView
_animatedTitleLabel
_floatingContentView
_dataContentView
setWaiting
setCanFocus:
lightGrayColor
actionTextForType:
setTitle:forStates:
_handleCancel
addTarget:action:forControlEvents:
_handleAppStore
_handleSecondaryLink
initWithTitle:style:target:action:
setRightBarButtonItem:
_handleAction
setLoading:
_fetchAppInfo
fetchIconForInstallable:size:completion:
appAdamIDs
setKeyProfile:
setPersonalizationStyle:
setValue:forRequestParameter:
allItems
offers
lookupDictionary
_namedRatingWithRatings:
setResponseBlock:
confirmationView
thinnedAppVariantId
compatibleProductType
_fileSizeWithDeviceSizes:
cancelationHandler
actionHandler
appStoreHandler
barButtonItem
setBarButtonItem:
setConfirmationView:
_itemOffer
_updateMessage
_cancelationHandler
_actionHandler
_appStoreHandler
_barButtonItem
_confirmationView
numberWithLongLong:
videos_disableLocalAsset
videos_persistentID
videos_resumeTime
videos_rentalAdamIDString
videos_fpsCertificateURL
videos_fpsKeyServerURL
setDirectionalLockEnabled:
safeAreaInsets
setScrollEnabled:
isScrollEnabled
setContentSize:
_scrollView
_containerView
_loadingView
_parentView
_principalView
_cancelLoading
_loading
initWithStyle:
generateCachedKeys
setCachedKeysOrder:
cachedKeysOrder
setAccessoryType:
setArray:
setObject:
tableView:didSelectRowAtIndexPath:
_array
_cachedKeysOrder
initWithArray:
vui_DataSource
playEventDataSource
selectEventDataSource
contextMenuEventDataSource
topMostVisibleViewController
snapshotImpressions
eventDataSourceForEvent:viewElement:
timeIntervalSince1970
_performForType:targetResponder:viewElement:eventDataSource:
numberWithLong:
preActionDocumentDataSource
preAction
documentDataSource
postActionDocumentDataSource
postAction
_handleDocumentDataSource:targetResponder:viewElement:completion:
initWithAccountURL:
_handleAccountSettingsPresentationWithViewController:
_amsBagURLForKey:withCompletion:
_dismissPresentedViewControllerWithCompletion:
_viewControllerWithIdentifier:
popOrDismissViewController:completion:
activeDocument
viewControllerWithAppContext:viewElement:documentOptions:
viewControllerIdentifier
popViewController:completion:
dismissViewController:completion:
parent
viewControllerForResponder:
isAnimated
pushViewController:fromViewController:isAnimated:completion:
vui_defaultBag
URLForKey:
valueWithError:
dismissViewController:animated:completion:
currentSiriNavController
visibleViewController
centeredDocumentController
handleEvent:targetResponder:viewElement:extraInfo:
handleAccountSettingsEvent:urlString:amsBagKey:
dismissOrPopViewControllerWithId:completion:
dismissOrPopLastViewControllerWithCompletion:
initWithDictionary:show:
setSeasons:
seasonForIdentifier:
_seasons
_configureLabels
setAxisFollowsDeviceOrientation:
setAlignmentFollowsDeviceOrientation:
ageRatingBadge
ageRatingLabel
_textColorForDarkMode
initWithTitle:tintColor:fontSize:cornerRadius:
setBadgeStyle:
_configureAgeRatingBadge
icon
ageRating
setMetadataStackView:
canFocus
setAgeRatingBadge:
setAgeRatingLabel:
_iconView
_nameLabel
_iAPLabel
_nameAndRatingStack
_containerStack
_canFocus
_icon
_ageRating
_iAP
_subtitle
_metadataStackView
_ageRatingBadge
_ageRatingLabel
initWithPersistentID:mediaEntityType:
persistentID
mediaEntityType
mediaItemIdentifierWithMediaItem:
setPersistentID:
setMediaEntityType:
_persistentID
_mediaEntityType
setExtendedInterfaceCreator:
initWithLocalAppURL:
setBootURLController:
bootURLController
_startApplicationControllerWithBootURL:
fetchBootURLWithCompletionHandler:
exposeObjectsInJSContext:
_exposeObjectsInJSContext:
_initialViewControllerWithAppContext:
URLForResource:
viewForElement:existingView:
viewControllerForElement:existingViewController:
collectionViewCellClassForElement:
parseAppConfigurationForElement:
imageProxyForElement:withLayout:
styleSheetURLForTemplate:
setJavaScriptApplicationURL:
_launchOptions
setLaunchOptions:
_applicationControllerClass
setNavigationController:
isRunningInSiriPluggin
setCurrentSiriNavController:
setKeyTraitEnvironment:
playerViewControllerForPlayer:
_viewForIKElement:existingView:
_viewControllerForIKElement:existingViewController:
_collectionViewCellClassForIKElement:
_parseAppConfigurationForIKElement:
_styleSheetURLForTemplate:
_navigationControllerForTabIdentifier:
_parseAppConfigurationForElement:
_imageProxyForElement:
_imageProxyForIKElement:withLayout:
gestureRecognizerShouldBegin:
gestureRecognizer:shouldRecognizeSimultaneouslyWithGestureRecognizer:
gestureRecognizer:shouldRequireFailureOfGestureRecognizer:
gestureRecognizer:shouldBeRequiredToFailByGestureRecognizer:
gestureRecognizer:shouldReceiveTouch:
gestureRecognizer:shouldReceivePress:
_bootURLController
_navigationController
_playlistFromVideosPlayables:andStoreDictionary:
setTvpPlaylist:
_updatePlaybackStartReason
restrictionsAlreadyUnlocked
addOrReplaceStartEventWithName:date:
addEndEventWithName:identifier:timestamp:
setPlaybackStartReason:
buyParams
tokenServerURL
_playbackOverridesForURL:orAdamID:
isSharedPurchase
_storeMediaItemsFromVideosPlayable:andStoreDictionary:
tokenServerParams
stopURL
initWithURL:tokenServerURL:stopServerURL:tokenServerParameters:
disableScrubbing
setDisableScrubbing:
channelName
vpafMetrics
mediaMetrics
externalServiceID
_populateMediaItem:withMetadataFromVideosPlayable:
_auxMediaItemFromVideosPlayable:
hlsURL
_tvpMediaTypeFromPlayableType:isRental:
resumeTime
fpsCertificateURL
fpsKeyServerURL
fpsAdditionalServerParams
requiredAgeForPlayback
frequencyOfAgeConfirmation
setStoreItemDict:
setFpsAdditionalServerParams:
seasonCanonicalID
scrubVideoURL
isExternal
setSharedPurchase:
extrasInfo
_populateMediaItem:withMetadataOverrides:
artworkURLFormat
artworkWidth
artworkHeight
previewFrameURLFormat
previewFrameWidth
previewFrameHeight
initWithType:start:duration:target:
initWithRatingDescription:
setRatingName:
propertyListWithData:options:format:error:
hasProgress
allowsPictureInPicture
overridesStartTimeWithResumeTime
setOverridesStartTimeWithResumeTime:
_hasProgress
_showsSecondaryVideoView
_restrictionsAlreadyUnlocked
_shouldDelayLoadingImage
_allowsPictureInPicture
_overridesStartTimeWithResumeTime
_tvpPlaylist
_playbackStartReason
_playbackDelayInterval
_playlistFromMPMediaItems:
_storeMediaItemFromMPMediaItem:
_storeMediaTypeFromMPMediaType:isRental:
_videoResolutionFromMPVideoQuality:
_videoDynamimcRangeFromMPColorCapability:
_playlistForVUIMediaItems:
initWithPlaybackContext:vuiMediaItems:
_playlistFromIKPlaylistElement:
initWithPlaybackContext:playlistElements:
setLoadSynchronouslyIfCached:
colorFromRGBStr:
initWithBackgroundImageDictionary:
infoHeaderTextLayout
tv_imageScaleToSize
infoBodyTextLayout
infoDescriptionTextLayout
descriptionLineSpacing
setLineSpacing:
setMoreLabelTextColor:
setMaximumNumberOfLines:
setMoreLabelOnNewLine:
highlightedDescriptionText
setDescriptionTextHighlightColor:
setDescriptionText:
setDescriptionTextColor:
headerViewWithString:layout:existingView:
headerViewWithImage:layout:existingView:
dataLabelViewWithString:layout:existingView:
dataDescriptionViewWithString:maxLine:layout:existingView:
dataViews
setDataViews:
_dataViews
removedCanonicalIDs
initWithRemovedCanonicalIDs:
setRemovedCanonicalIDs:
_removedCanonicalIDs
delayInSeconds
initWithDelayInSeconds:name:
setDelayInSeconds:
_delayInSeconds
vui_URLForKey:
setBaseURL:previewURL:fallbackURL:expectedContentSize:
overlayViewWithElement:cardlayoutType:existingView:canFallbackToInterfaceFactory:
stackedMediaView
_updateMaskingModeForParameters:
predicateWithBlock:
position
ribbonCellWithElement:existingCell:
_locationAuthorizationStatusDidChange:
requestAuthorizationWithForcedPrompt:
geoLocationEnforced
setGeoLocationEnforced:
_geoLocationEnforced
revision
startObserving
_handleMediaLibraryContentsDidChangeNotification:
stopObserving
_removeStateObserverForFetchControllers:
mutableFetchControllers
_enqueueSyncProcessingQueueBlock:
addFetchControllers:
_addStateObserverForFetchControllers:
_enqueueControllerFetchOperation
removeFetchControllers:
indexOfObjectIdenticalTo:
setPaused:
_enqueueAsyncProcessingQueueBlock:
nowPlayingAppBundleIdentifier
_postContentsDidChangeNotification
_handleMediaLibraryContentsChange
removeObserver:forKeyPath:context:
delayContentsChangeOperation
delayOperationWithDelay:
_delayContentsChangeOperationDidComplete:
setDelayContentsChangeOperation:
currentFetchOperation
setCurrentFetchOperation:
_notifyDelegateFetchDidComplete
isPaused
setShouldFetchOnResume:
_queueOperationDidComplete:
serialFetchOperationQueue
shouldFetchOnResume
fetchDidCompleteForMediaLibraryFetchControllerQueue:
nowPlayingObserver:latestObservationDidChange:
pauseFetching
resumeFetching
_enqueueProcessingQueueBlock:synchronous:
setMutableFetchControllers:
setSerialFetchOperationQueue:
nowPlayingObserver
setNowPlayingObserver:
_paused
_shouldFetchOnResume
_mutableFetchControllers
_currentFetchOperation
_delayContentsChangeOperation
_serialFetchOperationQueue
_nowPlayingObserver
sortUsingSelector:
idType
impressionId
impressionIndex
parentId
orderedOtherKeys
setOrderedOtherKeys:
mainValues
setMainValues:
otherValues
setOtherValues:
_orderedOtherKeys
_mainValues
_otherValues
footerView
isEqualToArray:
makeObjectsPerformSelector:
isTextTruncating
darkHighlightedDescriptionText
setDefaultFocusView:
defaultFocusView
footerLabelWithString:layout:existingView:
footerDescriptionWithString:layout:maxLine:existingView:
setFooterView:
setInfoViews:
infoViews
prototypeInfoHeaderLabel
setPrototypeInfoHeaderLabel:
_infoViews
_footerView
_defaultFocusView
_prototypeInfoHeaderLabel
setModalInPresentation:
_isHostedInRemoteViewService
channelIDForBundleID:
localizedNameForBundle:
_watchListAppIcon
_imageForBundleID:
channelForBundleID:
sharedSettings
optedIn
linkWithBundleIdentifier:
_fetchRemoteAppInfo
_setupAccessViews
_invalidateCache
_toggleLoadingScreen
_grantAccessToChannelIDs:isReconsent:
_presentGenericErrorWithCompletion:
beginIgnoringChanges
setStatus:forChannelID:externalID:
endIgnoringChanges
synchronize:
sendActionsForControlEvents:
_allow:
_disallow:
_handleSeeAllButton:
_handleNackButton:
_handleMenuGesture:
traitCollectionWithUserInterfaceStyle:
setOverrideTraitCollection:forChildViewController:
cappedTraitCollection
transitionFromView:toView:duration:options:completion:
applicationProxyForIdentifier:
tvsui_applicationFlatIcon
traitCollectionWithPreferredContentSizeCategory:
traitCollectionWithTraitsFromCollections:
initWithBundleIDs:channels:options:completionHandler:
_accessView
_channels
_privacyController
_bundleIDs
_hasCalledCompletion
_appInfos
_appChannels
_channelIds
_hasOptedIn
_shouldDenyOnCancel
_grantAccessToBundleIDs:
synchronizeSettingsFromCloudIfNeeded:
optInUser
forceUpdateWithCompletion:
setOptedIn:
setLastSyncDate:
subscribedAppBundleIdentifiers
orderedChannels
isWatchListEnabled
isFirstParty
settingsForChannelID:externalID:
accessStatus
errorWithDomain:code:userInfo:
vppaStatus
ams_sharedAccountStore
ams_activeiTunesAccount
ams_DSID
fetchConfigurationWithCompletionHandler:
grantAccessToBundleIDs:
eligibleBundleIDs
resolveBundleIDs:completionHandler:
initWithBundleIDs:options:completionHandler:
initWithChannels:options:completionHandler:
nameLabel
typeLabel
idLabel
idTypeLabel
impressionIdLabel
impressionIndexLabel
impressionParentIdLabel
impressionParentNameLabel
idStr
setIdStr:
setIdType:
setImpressionId:
setImpressionIndex:
impressionParentId
setImpressionParentId:
impressionParentName
setImpressionParentName:
setNameLabel:
setTypeLabel:
staticIDLabel
setStaticIDLabel:
setIdLabel:
setIdTypeLabel:
staticImpressionIdLabel
setStaticImpressionIdLabel:
setImpressionIdLabel:
staticImpressionIndexLabel
setStaticImpressionIndexLabel:
setImpressionIndexLabel:
staticImpressionParentLabel
setStaticImpressionParentLabel:
setImpressionParentIdLabel:
setImpressionParentNameLabel:
_typeLabel
_staticIDLabel
_idLabel
_idTypeLabel
_staticImpressionIdLabel
_impressionIdLabel
_staticImpressionIndexLabel
_impressionIndexLabel
_staticImpressionParentLabel
_impressionParentIdLabel
_impressionParentNameLabel
_mediaItemWithMPMediaItem:
_preflightPlaybackWithMediaItem:disableLocalAsset:presentingViewController:completionHandler:
_isOnWiFi
_shouldWarnStartingRentalPlaybackWindowWithMediaItem:
_presentStartingPlaybackWindowWarningWithRentalMediaItem:presentingViewController:completionHandler:
assetType
_isOnCellular
_presentCantPlaybackOverCellularAlertControllerWithMediaItem:presentingViewController:completionHandler:
_presentCellularPlaybackIsDisabledAlertControllerWithMediaItem:presentingViewController:completionHandler:
_verifyMediaItemIsPlayableOnCellular:presentingViewController:completionHandler:
_determineCellularPlaybackQualityForRentalMediaItem:presentingViewController:completionHandler:
defaultWorkspace
openSensitiveURL:withOptions:
_isMediaItemPlayableOnCellular:
initWithString:attributes:
_setAttributedMessage:
_isRemainingTimeLeftWithinRentalPlaybackWindowWithMediaItem:
rentalPlaybackDuration
networkType
preflightPlaybackWithMediaItem:disableLocalAsset:presentingViewController:completionHandler:
_preflightDownloadWithMediaEntityType:presentingViewController:completionHandler:
_preflightPlaybackWithMediaItem:presentingViewController:completionHandler:
initPrivate
viewControllerWithAppContext:documentOptions:
isTransitionAnimationEnabled
browserCellClass
mediaInfoForElement:
documentControllerForElement:
_transitionAnimationEnabled
_calculateMetricsOfScorecard
CGSizeValue
setObject:atIndexedSubscript:
drawAtPoint:
topRowLayout
bottomRowLayout
setFill
backgroundBlendMode
separatorColor
separatorBlendMode
attribute:atIndex:effectiveRange:
drawWithRect:options:context:
boundingRectWithSize:options:context:
valueWithCGSize:
_calculateColumnSpacing
drawRect:
didCalculatedSize
setDidCalculatedSize:
scorecardSize
setScorecardSize:
interitemSpacing
rowScoreValueSizes
setRowScoreValueSizes:
columnWidths
setColumnWidths:
rowHeights
setRowHeights:
darkMaterialImage
setDarkMaterialImage:
delegateRespondsToBackgroundImageForScorecardViewMaterial
setDelegateRespondsToBackgroundImageForScorecardViewMaterial:
delegateRespondsToBackgroundBlendModeForScoreValueInRowAtIndex
setDelegateRespondsToBackgroundBlendModeForScoreValueInRowAtIndex:
_didCalculatedSize
_delegateRespondsToBackgroundImageForScorecardViewMaterial
_delegateRespondsToBackgroundBlendModeForScoreValueInRowAtIndex
_scoreboardLayout
_interitemSpacing
_rowScoreValueSizes
_columnWidths
_rowHeights
_darkMaterialImage
_scorecardSize
sportsScoreSpoilersAllowed
leagueContext
_showScoreboard
_canonicalId
_leagueContext
_scores
initWithMediaLibrary:mediaItem:requestedProperties:
_propertyValueForKey:
automaticallyNotifiesObserversForKey:
hasBeenPlayed
playCount
creationDate
modifiedDate
lastPlayedDate
previewFrameImageIdentifier
seasonIdentifier
seasonTitle
keyPathsForValuesAffectingPlayedState
setHasBeenPlayed:
setPlayCount:
setBookmark:
downloadExpirationDate
_isPlayable
connectionQueue
observers
_onConnectionQueue_startObservingIfIdle
_onConnectionQueue_stopObservingIfIdle
removeAllObservers
setConnectionQueue:
setObservers:
_connectionQueue
_observers
cardView
setCardView:
_setupElements:inCardView:
darkBackgroundColor
headerBadgeView
headerBadgeViewWithImageElement:layout:existingView:
headerImageViewWithString:layout:existingView:
headerTitleViewWithString:layout:existingView:
headerSubtitleLabel
headerSubtitleLabelWithString:layout:existingView:
sourceBadgeView
sourceBadgeViewWithImageElement:layout:existingView:
sourceLabel
sourceLabelWithString:layout:existingView:
ratingBadgeViewWithValue:layout:existingBadgeView:
descriptionView
descriptionViewWithElement:layout:existingView:
dataModels
headerTextView
descriptionTextView
descriptionTextViewWithString:layout:existingView:
setHeaderTextView:
setDescriptionTextView:
setDataModels:
setHeaderBadgeView:
setHeaderBadgeSize:
setHeaderSubtitleLabel:
setSourceLabel:
setSourceBadgeView:
setSourceBadgeSize:
setDescriptionView:
_cardView
vui_containsOnlyClips
vui_isNonPurchasedContent
bookmarkKey
setBookmarkKey:
uppRecord
setUppRecord:
_bookmarkKey
_uppRecord
initWithKeyValueStore:
_handleKeyValueStoreVersionDidChangeNotification
_handleKeyValueStoreDidResetNotification
defaultClient
_handleUPPRecordsDidChangeNotification
_handleUPPClientDidResetNotification
_applicationWillResignActive:
_nukePendingChangesAndNotify
initWithKey:
tvs_dateForKey:
setBookmarkTime:
setBookmarkTimestamp:
setHasBeenRented:
setIsMarkedAsUnwatched:
bookmarkTime
bookmarkTimestamp
hasBeenRented
isMarkedAsUnwatched
keyType
tvs_filenameSafeString
hasPrefix:
initWithIdentifier:keyType:
_keyValueStoreKeyForBookmarkKey:
objectsForKeys:
_bookmarkFromKey:kvsDictionary:
recordForBookmarkKey:
timestamp
laterDate:
_updateBookmarks:withBookmark:
bookmarkKeyForKeyValueStoreKey:
allRecords
itemIdentifier
decimalDigitCharacterSet
invertedSet
rangeOfCharacterFromSet:
bookmarksForKeys:
updateBookmark:sync:
_batchUpdate
numSyncsInProgress
setNumSyncsInProgress:
setSyncInProgress:
synchronizeWithCompletion:
setDateOfLastSyncCompletion:
dateOfLastSyncCompletion
_resetForRetailWithCompletion:
_kvsDictionaryFromBookmark:
setObjectsInDictionary:
_writePendingToAppleTVKeyValueStore:
setupBookmarkService:
fetchAllBookmarksWithCompletionHandler:
bookmarkForKey:
pendingBookmarkForKey:
updateBookmark:
syncHasFinishedRecently
resetForRetailWithCompletion:
syncInProgress
_pending
_scheduledUpdate
_syncAfterUpdate
_updateQueue
_keyValueStore
_syncInProgress
_dateOfLastSyncCompletion
_numSyncsInProgress
setTimestamp:
setItemIdentifier:
writeItems:
setCardShowcaseFactor:
setCardInsets:
tv_setShowcaseFactor:
cardInsets
cardUIEnabled
setCardUIEnabled:
_cardUIEnabled
_cardInsets
_configureViewSubviews
bannerView
buttonViews
lastFocusedView
isEnabled
tv_setShowcaseConfig:
setBannerView:
_bannerView
_refreshEventDescriptor
initWithRefreshEventDescriptor:
_updateLayoutWithElement:andType:
_updateLayoutWithMediaItem:type:
interfaceStyleFromTheme:defaultInterfaceStyle:
_navBrickTitleLayout
_editorialTitleLayout
_spotlightTitleLayout
_ribbonTitleLayout
layoutWithLayout:overlayType:element:
layoutWithLayout:overlayType:mediaItem:
setOverlayType:
_isDarkTheme
_overlayType
imageNamed:
_resourceImageNamed:
arrayForKey:
generateResponseDictionary:withError:
integerForKey:
dictionaryForKey:
valueWithCompletion:
vui_registerAdditionalBagKey:withValueType:
dictionaryWithObjectsAndKeys:
convertNSErrorIntoDict:
registerBagKey:withValueType:
arrayForKeyWithCompletion::
boolForKeyWithCompletion::
doubleForKeyWithCompletion::
integerForKeyWithCompletion::
stringForKeyWithCompletion::
URLForKeyWithCompletion::
dictionaryForKeyWithCompletion::
VUIAMSBagValueTypes
setMenuDismissable:
presentViewController:fromViewController:options:completion:
isOptedIn
optInUserIfNeededAndRefreshConfig:
acknowledgePrivacyLinkWithIdentifier:URL:
setBool:forKey:
updateGDPRConsentStatus
shouldDisplayPrivacyLinkWithIdentifier:
showGDPRWelcomeScreen:
acceptGDPRAndSyncWithServers:
_sharedInstance
_parseDatabase
_startMonitoringDatabaseFile
serialDispatchQueue
movieByIdentifier
_sortedEntitiesArray:
movieRentalByIdentifier
homeVideoByIdentifier
showByIdentifier
_addShow:
_addSeason:showIdentifier:
_addEpisode:showIdentifier:seasonIdentifier:
_addHomeVideo:
_addMovie:
_addMovieRental:
_saveWithError:
removeDownloadedMediaForIdentifier:
_removeEntityWithIdentifier:
entityForIdentifier:
updateEntity:propertyName:propertyValue:
episodeForIdentifier:
itemForIdentifier:
removeItemAtURL:error:
fileURL
saveToFileURL:error:
_dictionaryRepresentation
dataWithPropertyList:format:options:error:
URLByDeletingLastPathComponent
createDirectoryAtURL:withIntermediateDirectories:attributes:error:
writeToURL:atomically:
_addItem:itemByIdentifier:
_removeItem:itemByIdentifier:
_removeMovie:
_removeMovieRental:
_removeHomeVideo:
_removeShow:
_removeSeason:fromShow:
_removeEpisode:fromSeason:
path
getCString:maxLength:encoding:
setDatabaseFileDispatchSource:
_parseDatabaseAndSendNotification
addEntity:showIdentifier:seasonIdentifier:
removeEntityWithIdentifier:
updateEntityWithIdentifier:propertyName:propertyValue:
setFileURL:
setSerialDispatchQueue:
databaseFileDispatchSource
setHomeVideoByIdentifier:
setMovieByIdentifier:
setMovieRentalByIdentifier:
setShowByIdentifier:
_fileURL
_serialDispatchQueue
_databaseFileDispatchSource
_homeVideoByIdentifier
_movieByIdentifier
_movieRentalByIdentifier
_showByIdentifier
setHighlightedTextColor:
attribute:atIndex:longestEffectiveRange:inRange:
setBaseWritingDirection:
attributesAtIndex:effectiveRange:
_firstBaselineOffsetFromTop
_baselineOffsetFromBottom
lineHeight
topMarginWithBaselineMargin:maximumContentSizeCategory:
bottomMarginWithBaselineMargin:maximumContentSizeCategory:
_updateTextColor
setHighlighted:
_updateTextColor:
labelWithAttributedString:textLayout:existingLabel:
requiresMoreThanOneLineForTextWidth:
setSelected:animated:
labelName
setLabelName:
_selected
_lastSelectedOrHighlighted
_labelName
subtitleBaselineMargin
offerCardPadding
setShadowOffset:
setShadowBlurRadius:
setShadowColor:
setLogoLayout:
setChannelNameTextLayout:
setTitleTextLayout:
setSubtitleTextLayout:
setFocusedTextLayout:
setTagsLayout:
setVersionsButtonLayout:
_appIconLayout
_logoLayout
_channelNameTextLayout
_subtitleTextLayout
_focusedTextLayout
_tagsLayout
_versionsButtonLayout
_borderWidth
_borderColor
initWithAddedEntityIDs:removedEntityIDs:
addedEntityIDs
removedEntityIDs
initWithAction:entityID:
coalescedEvent:
setAddedEntityIDs:
setRemovedEntityIDs:
_addedEntityIDs
_removedEntityIDs
vui_showPersistentIDPredicate:comparison:
vui_seasonNumberPredicate:comparison:
_vui_isPlayablePredicate:
_vui_isNetworkPlayablePredicate:
vui_mediaEntityTypePredicate:comparison:
vui_seasonIdentifierPredicate:comparison:
vui_isPlayablePredicate:comparison:
vui_restrictionsPredicateWithMediaEntityType:mediaLibrary:
vui_mediaPropertyPredicateComparisonWithPredicateOperatorType:
vui_mediaPropertyPredicateWithProperty:predicateOperatorType:value:
informationView
contentDescription
overlayViewWithMediaItem:overlayType:existingView:
setInformationView:
_shouldAddInfoViewToPoster
setMediaItem:
_postConfigurationSetup
tv_styleMetrics
imageStackViewWithElement:layout:existingView:
setImageViewElement:
informationViewElement
setInformationViewElement:
components
selectionMarginsForSize:
_focusableContentMargins
_setFocusableContentMargins:
addCoordinatedFocusingAnimations:completion:
_imageViewHandler:
_informationViewHandler:
setZPosition:
setPress:
_addTapGestureRecognizersForImageView
_addTapGestureRecognizersForInformationView
searchArea
coordinateSpace
convertRect:toCoordinateSpace:
initWithFrame:item:
addRegion:
_window
_searchForFocusRegionsInContext:
configureWithElement:existingView:
animateWithAuxiliarySelectionState:animations:
isFocusWithinCell
setIsFocusWithinCell:
imageViewElement
press
mediaItem
_isFocusWithinCell
_selectingView
_imageViewElement
_informationViewElement
_press
_mediaItem
_informationView
setContentEdgeInsets:
constraintGreaterThanOrEqualToConstant:
_updateForPreferredContentSize
_contentSizeCategoryDidChange
invalidateIntrinsicContentSize
_isLargeContentSize
setConstant:
hasIAP
_lastOrientation
_hasIAP
secondaryTextLayout
setStackView:
postModeBannerLayout
preModeBannerLayout
backgroundImageLogos
bannerStyle
imageSizeForBannerStyle:
isPreModeBanner
backgroundView
setBackgroundView:
setBackgroundImageLogos:
isDisabled
setBannerLayout:
configureCellWithElement:existingCell:
bannerLayout
_bannerLayout
_width
sharedManager
downloadForStoreID:
_stateFromStoreDownload:
initWithMediaItem:state:serialProcessingDispatchQueue:
_addStoreObserver
_removeStoreObserver
storeDownload
isRestore
_onProcessingQueue_invalidate
setStoreDownload:
cancelDownloads:
pauseDownloads:
resumeDownloads:
_setState:
percentComplete
bytesTotal
phaseIdentifier
failureError
purchaseError
setDownloadSucceeded:
addObserver:forDownloads:
removeObserver:forDownloads:
downloadManager:didAddDownloads:removeDownloads:
downloadManager:didAddActiveDownloads:removeActiveDownloads:
downloadManager:downloadDidFinish:
downloadManager:downloadDidProgress:
downloadManager:downloadPurchaseDidFinish:
downloadManager:downloadsDidProgress:
downloadManagerNetworkUsageDidChange:
isRestoreDownload
_onProcessingQueue_cancelDownload
_onProcessingQueue_pauseDownload
_onProcessingQueue_resumeDownload
_storeDownload
tv_setStyleMetrics:
vui_itemWidthForGridStyle:gridType:numGridColumns:
offerCardElementHeightForWidth:subtitleElement:withFocusedText:
cardHeightForElementType:width:
lockupSizeForElement:
initWithColor:
_cornerRadiusWithStyle:
setBorderRadius:
setAppStylesForElement:
_interfaceIdiom
_registerPlayerObserver
_registerPlaybackNotifications
_updateMetadataForCurrentMediaItem
_unregisterPlayerObserver
_unregisterPlaybackNotifications
setElapsedTime:precise:
maximumAutoPlayableItems
isCurrentMediaATVShow
_handleMediaItemDidChangeNotification:
_handleMetadataDidChangeNotification:
_metaDataInfoFromMediaItem:
setShowCanonicalID:
setCurrentMediaATVShow:
setMetadata:
isLivePlayback
setLivePlayback:
logoImageDownloader
setLogoImageDownloader:
ratingImage
setRatingImage:
_includesProductPageButton
_livePlayback
_currentMediaATVShow
_metadata
_showCanonicalID
_autoPlayedEpisodesCount
_logoImageDownloader
_ratingImage
initWithRevision:
setRevision:
_revision
setIsSubscribed:
channelLogoLayout
contentSizeCategoryIsAccessibility:
textLabels
appleTVChannelLogoView
logoViewWithChannelImageElement:layout:existingView:
isSubscribed
textViewWithElement:textLayout:existingTextView:
disclaimerTextLayout
disclaimerTextLabel
subscribeButtonLayout
subscribeButton
setDisableFocus:
setAppleTVChannelLogoView:
setTextLabels:
setSubscribeButton:
setDisclaimerTextLabel:
setOverrideUserInterfaceStyle:
configureViewWithElement:existingController:
loadArtworkInfoForPurchaseHistoryIDs:completionHandler:
panGestureRecognizer
setAllowedTouchTypes:
setBounces:
_downArrowAction:
_setButtonType:
_upArrowAction:
contentOffset
contentSize
_tapScrollDelta
setContentOffset:animated:
itemSize
minimumLineSpacing
configureWithElement:existingButton:
addedStateView
removedStateView
tv_isResource
tv_resourceImage
updateButtonContentView
callAPIAndToggleUpNextState
dismissOnSelect
upNextStateChangedToAdded
upNextStateChangedToRemoved
_openPunchoutURL:isPlaybackURL:
openURL:withOptions:error:
setExitEventDestinationUrl:
punchoutURLWithoutAssociatedPlayable
_punchoutURLWithoutAssociatedPlayable
_mediaEntityPropertyDidChange:
coverArtURL
setGenreTitle:
setContentDescription:
setCoverArtURL:
_genreTitle
_contentDescription
_coverArtURL
initWithDeleteID:caller:isContinueWatching:
ongoingDeleteIDOperationDictionary
sendRequestForDeleteID:canonicalID:isContinueWatching:
setOngoingDeleteIDOperationDictionary:
_ongoingDeleteIDOperationDictionary
_startProgressTimer
setSuccess:
_stopProgressTimer
connectWithCompletionHandler:
setProgressTimer:
connectionProgress
_notifyClientOfProgress:
progressTimer
progressBlock
setProgressBlock:
_progressTimer
_cardLayoutTypeForElement:
cardLayoutType
gridType
cardViewFactoryForType:gridStyle:gridType:
setLayoutFactory:
hideFloatingBackground
setCardView:force:
viewWithExistingView:bounds:focused:subview:hideShadow:
cardCellWithElement:existingCell:
addedToDate
mediaItemCount
_identifierPredicateWithIdentifier:
_minimalPropertiesFetchRequestWithType:
_minimalMoviesPropertiesFetchRequest
_minimalMovieRentalsPropertiesFetchRequest
_minimalShowsPropertiesFetchRequest
_seasonsFetchRequestWithShowIdentifier:
_seasonsFetchRequestWithSeasonIdentifier:
_episodesFetchRequestWithSeasonIdentifier:showIdentifier:
_addedDateSortDescriptor
_addedToDateSortDescriptor
_anyHDRColorCapabilityPredicate
_addPredicate:
_any4KResolutionPredicate
_predicateWithSubpredicates:compoundPredicateType:
_isLocalPredicate
_isEqualPredicateWithAdamId:
_isInPredicateWithAdamId:
_includeSortIndexesOptions
_titleSortDescriptor
_showIdentifierPredicateWithIdentifier:
_seasonNumberSortDescriptor
_seasonIdentifierPredicateWithIdentifier:
_episodeNumberSortDescriptor
titleSortComparatorWithAscending:
vui_equalPredicateWithKeyPath:value:
vui_inPredicateWithKeyPath:value:
numberWithUnsignedLong:
vui_keyPathBitTestPredicateWithKeyPath:value:
_resolutionPredicateWithResolution:
_HLSResolutionPredicateWithResolution:
addSortIndexesOption
addGroupingSortIndexesOption
addHDRColorCapabilityPredicate
add4KResolutionPredicate
addIsLocalPredicate
addAdamIdsPredicate:
mediaEntityFetchRequestWithIdentifier:
seasonsFetchRequest
seasonsFetchRequestWithShowIdentifier:
seasonsFetchRequestWithSeasonIdentifier:
episodesFetchRequest
episodesFetchRequestWithSeasonIdentifier:
episodesGroupedBySeasonIdentifierFetchRequestWithShowIdentifier:
_releaseYearSortDescriptor
_releaseDateSortDescriptor
_showTitleSortDescriptor
_handleSettingsDidChange:
flowWithBundle:
contentVersion
privateModeEnabled
initWithError:appContext:
watchListApps
JSONDictionary
consentedBrands
deniedBrands
updateWithDictionary:
privacyFlowContentVersion
forceUpdateWithCallback:
appSettingsByChannelID
userPreferences
wlkOverrides
updateFeaturesConfiguration:
initWithFetchReason:fetchResponses:
setFetchReason:
setFetchResponses:
_fetchReason
_fetchResponses
_handleAppLibChange:
_handleServerConfigChange:
_handlePlaybackReport:
wlk_stringForKey:
wlk_dictionaryForKey:
_requestOptionsFromJSOptions:
requestPropertiesWithEndpoint:queryParameters:httpMethod:headers:caller:timeout:options:
initWithRequestProperties:
_enqueueNetworkOp:withJSCallback:
jsContext
initWithQueryParameters:
wlkDefaultConcurrentQueue
operations
setSuppressServerConfigNotifications:
responseDictionary
fetchConfigurationWithOptions:cachePolicy:queryParameters:completion:
shortDescription
httpResponse
processResponseData:error:
initWithData:encoding:
responseStatusCode
_connection
remoteObjectProxyWithErrorHandler:
JSONRepresentation
requestPlaybackSummaryForID:completion:
initWithMachServiceName:options:
setExportedInterface:
setExportedObject:
setRemoteObjectInterface:
setInterruptionHandler:
setInvalidationHandler:
resume
makeRequest::
makeUpNextRequest::
cancelRequest:
fetchConfiguration::
invalidateConfiguration
suppressServerConfigNotifications
_suppressServerConfigNotifications
initWithPersistentID:seasonNumber:
setSeasonNumber:
_seasonNumber
_configureSubviews
metaDataView
buttonHandler
imageWithRenderingMode:
setImageTrailsTextContent:
setButtonViews:
setMetaDataView:
setVisualEffectView:
userInteractionEventHandler
hudModel
setHudModel:
setButtonHandler:
_viewsMap
_hudModel
_metaDataView
_buttonViews
_buttonHandler
_userInteractionEventHandler
_buttonTapped:eventName:
_unregisterTransactionNotifications
_layoutProgressIndicatorIfNeeded
_transactionBuyParams
isTransactionInProgressForBuyParams:
setMonitorTransaction:
_handleTransactionDidStartNotification:
progressIndicator
_updateProgressIndicatorTintColor:
monitorTransaction
_addProgressIndicatorWithFrame:
_registerForTransactionNotification
setProgressIndicator:
buttonContent
controlState
isWaitingForTransactionToStart
setWaitingForTransactionToStart:
setIndeterminate:
_handleTransactionDidFinishNotification:
textContentTitleBackup
setTextContentTitleBackup:
_waitingForTransactionToStart
_monitorTransaction
_progressIndicator
_textContentTitleBackup
_updateBackgroundImage
VideosUIBundle
imageNamed:inBundle:
resizableImageWithCapInsets:resizingMode:
shouldFocusUpNext
_doesCollectionViewHasItems
setShouldFocusUpNext:
indexPathForItem:inSection:
backgroundImageView
gradientImageView
setUpNextFocused:
_watchNowBannerScrollStop
initWithRect:withStyle:
insertSublayer:atIndex:
updateStyle:
shouldAdjustForTabBarSafeAreaInsets
setBackgroundImageView:
backgroundImageGradientLayer
setBackgroundImageGradientLayer:
setGradientImageView:
_shouldFocusUpNext
_upNextFocused
_backgroundImageView
_backgroundImageGradientLayer
_gradientImageView
setSupplementary:
setStorageIdentifier:
wallpaperViewForUserInterfaceStyle:variant:
sharedBlurRenderer
blurRenderer:renderImage:blurStyle:targetSize:blurRadius:
loadingImageView
defaultSizeForStyle:
setAllowsGroupOpacity:
setAllowsGroupBlending:
_showSpinner
insertSubview:above:
_controllerDidDisplay:
_hideExtrasLoadingImageView
loadingVisualEffectView
loadingSpinnerView
stopAnimating
extrasDidPushRoot
_hideSpinner
appNavigationControllerWillDisappear:
_extrasDidPushRoot
_loadingImageView
_loadingVisualEffectView
_loadingSpinnerView
playedThresholdTimeForDuration:
playedStateForDuration:elapsedTime:hasBeenPlayed:playCount:respectPlayCount:
suggestedBookmarkTimeForElapsedTime:duration:
playerIsLive:
deleteID
setDeleteID:
isContinueWatching
setIsContinueWatching:
_isContinueWatching
_deleteID
vui_paddingForElement:
vui_currentSizeClassForElement:
_safeAreaInsetsForDeviceWithElement:
vui_itemWidthForGridStyle:gridType:numGridColumns:element:
_vui_interitemSpaceForSizeClass:gridType:
_adjustedWindowSizeFor:
libraryCategoryListWidth
vui_collectionInteritemSpace:gridType:withElement:
tv_isPresentedModal
vui_keyWindow
statusBarOrientation
horizontalSizeClass
keyWindow
tv_adjustedWindowSize
vui_layoutType
_buildButtonStack
arrayWithObject:
_buildSeeAllButtonStack
darkGrayColor
arrayWithObjects:
_enumerateDescendentViews:
insertObject:atIndex:
constraintLessThanOrEqualToConstant:
carouselView:shouldHighlightItemAtIndex:
carouselView:didHighlightItemAtIndex:
carouselView:didUnhighlightItemAtIndex:
carouselView:shouldSelectItemAtIndex:
carouselView:shouldDeselectItemAtIndex:
carouselView:didSelectItemAtIndex:
carouselView:didDeselectItemAtIndex:
carouselView:willDisplayCell:forItemAtIndex:
carouselView:didEndDisplayingCell:forItemAtIndex:
carouselView:willDisplayItemAtIndex:
carouselView:didEndDisplayingItemAtIndex:
carouselViewDidScroll:
carouselView:didFocusItemAtIndex:
carouselView:didPlayItemAtIndex:
_contentGuide
_contentStack
_seeAllButtonStack
_buttonStack
showArtworkURLFormat
showArtworkWidth
showArtworkHeight
showTitle
_metadataDictionary
_contentTypeMap
vui_isHomeShareMediaLibrary
initWithMPMediaLibrary:type:manager:
initWithIdentifier:type:manager:
_handleMediaLibraryIsUpdateInProgressDidChangeNotification:
_storeMediaItemRentalExpirationUpdated:
_isUpdateInProgress
_isInitialUpdateInProgress
updateJaliscoMediaLibraryWithReason:completionHandler:
enqueueMediaItemEntityTypesFetchWithCompletionHandler:
saveMediaEntity:completionHandler:
becomeActive
resignActive
setValue:forProperty:
isUpdating
updateProgressWithCompletionHandler:
updateFromCloudWithReason:
eventByEventDescriptor
addEvents:
vui_setOrRemoveObject:forKey:
addEvent:
removeAllEvents
setEventByEventDescriptor:
_eventByEventDescriptor
textViewWithString:textLayout:titleString:titleLayout:existingTextView:
computationLabel
setComputationLabel:
appendAttributedString:
tv_maxTextLines
setSelectionHandler:
setPlayHandler:
textViewWithElement:textLayout:titleElement:titleLayout:existingTextView:
textViewWithString:textLayout:existingTextView:
_computationLabel
initWithDocumentServiceRequest:loadImmediately:documentRef:viewControllerIdentifier:
identifierKeyPath
valueForKeyPath:
sortIndexKeyPath
groupsSortComparator
performDefaultSort
ascendingTitleSortComparator
sortedArrayUsingComparator:
transformedValueClass
allowsReverseTransformation
setIdentifierKeyPath:
_performDefaultSort
_identifierKeyPath
_sortIndexKeyPath
_groupsSortComparator
query
vui_parsedQueryParametersDictionary
showSignupAlertPushNotificationWithAppContext:
contextData
_contextData
orderedSet
mediaItemEntityTypes
areLocalMediaItemsAvailable
mediaItemEntityTypesChangeSet
vui_applyChangeSetIfAvailable:destinationObjects:replaceContentsOnNilChanges:
orderedSetWithArray:
localMediaItemsAvailableDidChange
_localMediaItemsAvailable
_mediaItemEntityTypes
initWithMediaInfo:player:avPlayerViewController:
eventDataSourceWithEventDict:viewElement:
setSelectEventDataSource:
setPlayEventDataSource:
setContextMenuEventDataSource:
_selectEventDataSource
_playEventDataSource
_contextMenuEventDataSource
tableView:heightForRowAtIndexPath:
uuid
_installAppWithChannel:completion:
contentTitle
setInstallerViewController:
initWithChannelDetails:contentTitle:
installAppWithCompletion:
setChannelDetails:
setContentTitle:
installerViewController
accessViewController
setAccessViewController:
setUuid:
_channelDetails
_contentTitle
_installerViewController
_accessViewController
_uuid
_errorInUpdatingState:
setIsWatchListed:
setDismissOnSelect:
isWatchListed
_toggleUpNextState
_dismissOnSelect
_isWatchListed
_addedStateView
_removedStateView
_keyForInstallable:size:
_cachedImageForKey:
_imageURLForInstallable:size:
dataWithContentsOfURL:options:error:
imageWithData:scale:
_cacheImage:forKey:
appIconURLForSize:
_MD5StringForString:
UTF8String
stringWithCapacity:
_cachePath
fileExistsAtPath:
createDirectoryAtPath:withIntermediateDirectories:attributes:error:
stringByAppendingPathComponent:
stringByExpandingTildeInPath
writeToFile:options:error:
initWithData:scale:
initWithMediaLibrary:identifier:requestedProperties:kind:
databaseSeason
coverArtImageIdentifier
initWithImageURL:baseImageIdentifier:imageType:
showIdentifier
_valueForPropertyDescriptor:
setDatabaseSeason:
_databaseSeason
_scaledBadgeSizeWithImageLayout:traitCollection:
headerBadgeSize
sourceBadgeSize
prototypeSubtitleLabel
setPrototypeSubtitleLabel:
prototypeHeaderLabel
setPrototypeHeaderLabel:
_headerSubtitleLabel
_headerBadgeView
_sourceLabel
_sourceBadgeView
_descriptionView
_prototypeSubtitleLabel
_prototypeHeaderLabel
_headerBadgeSize
_sourceBadgeSize
setCachesPropertiesOnFirstAccess:
assetController
setMediaItemCollection:
_coverArtImageIdentifier
_mediaItemCollection
textView
setTextView:
setEventDescriptors:
setRefreshTimerFiredBlock:
_cancelAllRefreshTimers
refreshTimerByEventDescriptor
_refreshTimerWithRefreshTimeEventDescriptor:
_startRefreshTimer:
_cancelRefreshTimers:
setRefreshTimerByEventDescriptor:
refreshTimerFiredBlock
_cancelRefreshTimer:
eventDescriptors
_eventDescriptors
_refreshTimerByEventDescriptor
_refreshTimerFiredBlock
weakToStrongObjectsMapTable
_handleSettingsDidChangeNotification:
_handleAppLibraryDidChangeNotification:
_handleUpNextRequestDidFinishNotification:
_handlePurchaseFlowDidFinishNotification:
_handleSubscriptionDidChangeNotification:
_handleFavoritesRequestDidFinishNotification:
_handleRemoveFromPlayHistoryRequestDidFinishNotification:
_handleClearFromPlayHistoryRequestDidFinishNotification:
_handleAccountDidChangeNotification:
_handleRestrictionsDidChangeNotification:
_handleUTSKDidChangeNotification:
_handlePreferredVideoFormatDidChangeNotification:
_handlePlayHistoryUpdatedNotification:
_handleLocationAuthorizationDidChangeNotification:
_handleAppWillEnterForegroundNotification:
_handleAppDidEnterBackgroundNotification:
_handleNowPlayingWillStartNotification:
_handleNowPlayingDidEndNotification:
_handlePostPlayUpNextShouldUpdateNotification:
_handleClearPlayHistoryNotification:
_handlePlaybackReportNotification
observerMapTable
_notifyObserver:ofRefreshEvent:
_notifyObserversOfEvent:
initWithCanonicalID:
vui_errorForKey:
initWithAction:canonicalID:
lastProcesssedPlayActivity
setLastProcesssedPlayActivity:
updateLocationIfNeeded
appDocumentDidReceiveEvent:
keyEnumerator
_isAppRefreshEventType:
sharedMonitor
addObserver:forEventDescriptors:
_handleEntitlementsDidChangeNotification:
setObserverMapTable:
playbackReportToken
setPlaybackReportToken:
_appIsInForeground
_pendingPlayactivity
_ignoreWLKPlaybackReportNotification
_observerMapTable
_lastProcesssedPlayActivity
currentEnvironment
DSID
_isChannelVPPAPromptEligible:
_isVPPAPromptDueForConfig:
_presentVPPAConsentScreen:vppaState:completion:
isConsented
vppaStatusString
vppaSessionDurationInMillis
_isReminderDue:reminderInterval:
_getVPPABulkChannels:
_getEligibleBulkChannels
addUniqueChannels:channels:
username
_rootViewController
_getConsentedChannels
_getDeniedChannels
channelAlreadyExists:channelID:
channelForID:
isiTunes
rootViewController
startVPPAConsentFlow:completion:
setChannelLogoLayout:
setDescriptionTextLayout:
setDisclaimerTextLayout:
setSubscribeButtonLayout:
_isSubscribed
_channelLogoLayout
_disclaimerTextLayout
_subscribeButtonLayout
setAllowsSelectionDuringEditing:
setAllowsMultipleSelectionDuringEditing:
isEditing
finishValidation
setEditing:animated:
rightBarButtonItem
indexPathsForSelectedRows
dequeueReusableCellWithIdentifier:
eventType
eventSubheader
eventTertiaryInformation
pageContext
initWithEvent:
toggleValidationMode
setEvents:
_events
format
setFormat:
_height
_format
ratingImageProxy
isLoading
setRatingImageProxy:
downloadImageWithURL:imageInfo:completion:
_ratingImageProxy
setCountLimit:
setPropertyDescriptorsByName:
propertyDescriptors
propertyDescriptorsByName
mediaEntityClassName
_mediaEntityClassName
_propertyDescriptors
_propertyDescriptorsByName
axisFollowsDeviceOrientation
alignmentFollowsDeviceOrientation
lastOrientation
setLastOrientation:
_axisFollowsDeviceOrientation
_alignmentFollowsDeviceOrientation
downloadSucceeded
setDownloadInProgress:
_downloadSucceeded
_downloadInProgress
setCompositingFilter:
badgeDummyLabel
setBadgeDummyLabel:
_badgeDummyLabel
_descriptionTextView
whitespaceCharacterSet
stringByTrimmingCharactersInSet:
_vui_updateEventDescriptorWithType:
_parseElementIfNecessary
vui_title
vui_description
vui_imageURL
_backgroundImageProxyFromImageElement:
videosPlayables
tv_imageProxyWithLayout:
_MPMediaEntityImageLoadParams
hasImageOnDisk
bestImageFromDisk
_finishWithImage:
imageWithCGImageRef:preserveAlpha:
initWithParams:scaleToSize:
setAsyncWorkToken:
time
setTime:
notifiedOfEntry
setNotifiedOfEntry:
token
setToken:
_notifiedOfEntry
_time
_token
featureMonitor:featureDidChangeState:animated:
featureMonitor:activeFeatureDidChangeFrom:toFeature:animated:
_unregisterPlaybackStateNotification
_processAnyTimeBoundFeatures
_registerPlaybackStateChangeNotification
_updateBoundaryObserverForFeature:change:
features
_processFeature:
featureDependencies
isActive
shouldAutoRemove
setAutoRemove:
setUserInfo:
objectsPassingTest:
anyObject
featureLastRequestedUI
playbackManager
onSupplementaryUIShouldDismiss
_shouldAnimateFeature:
_deactivateFeature:animated:
_cleanupFeature:
_cancelTimerForFeature:
featureTimers
_removeAllObservedTokensForFeature:
_isTimeBoundFeature:
featuresForType:
removeFeature:
currentUIMode
_isHybridFeature:
activationType
setActivationType:
_processUserTriggeredFeature:activate:animated:
observingElapsedTime
setObservingElapsedTime:
_startObservingElapsedTime
startTime
setStartTime:
isSkippable
setSkippable:
_activeFeatures
_processTimeBoundFeature:
_isTimerTriggeredFeature:
_processTimerTriggeredFeature:
advisoryDisabledTimeRanges
setAdvisoryDisabledTimeRanges:
_isUserTriggeredFeature:
_activeFeature
setFeatureLastRequestedUI:
_removeTimeObservingForFeature:withStartTime:
_playbackStateChangedNottificaiton:
elapsedTime
_isTVAdvisoryFeature:
containsTime:
initWithStartTime:endTime:
_processElapsedTime:
addElapsedTimeObserver:
elapsedTimeObserverToken
removeElapsedTimeObserverWithToken:
setElapsedTimeObserverToken:
lastProcessedElapsedTime
setLastProcessedElapsedTime:
elapsedTimes
_processLastElapsedTime
indexSetWithIndexesInRange:
removeObjectsAtIndexes:
_processElapsedTimeOnInternalQueue:withCompletion:
elapsedTimeProcessingQueue
_timeBoundFeatures
_observerInfoForFeature:matchingTime:
_isElapsedTimeWithinFeatureTimeWindow:
_hasActiveFeaturesInArray:
_scheduleDeactivationOfTimeBoundFeature:
_activateFeature:animated:completion:
_needsUIForFeature:
onSupplementaryUIShouldPresent
_addTimeObservingForFeature:withStartTime:andHandler:
deactivateFeature:animated:
featureTokens
featureBoundaryInfos
_addObservedToken:forFeature:
arrayByAddingObject:
repeats
initWithKeyOptions:valueOptions:capacity:
setFeatureTimers:
mediaPlaybackManager:shouldHideUI:animated:animations:completion:
mediaPlaybackManager:shouldEnableUIModeImplicitly:
presentForegroundPlaybackControllerForMediaPlaybackManager:
evaluateSwipeUpMessageForMediaPlaybackManager:
allFeatures
addFeature:
addFeature:withDependencyToPreferredFeatures:
activeFeatureForType:
removeFeaturesMatching:
enableUIMode:enabled:
_hasAnyActiveFeature
_shouldActivateTimeBoundFeatureInitially:
setFeatures:
setFeatureDependencies:
setFeatureTokens:
setFeatureBoundaryInfos:
boundaryTimeObserverInfos
setBoundaryTimeObserverInfos:
setElapsedTimeProcessingQueue:
setElapsedTimes:
_observingElapsedTime
_playbackManager
_features
_featureDependencies
_featureTokens
_featureBoundaryInfos
_featureTimers
_featureLastRequestedUI
_lastProcessedElapsedTime
_boundaryTimeObserverInfos
_elapsedTimeObserverToken
_elapsedTimeProcessingQueue
_elapsedTimes
hasTrait:
iTunesMaxHLSVideoResolution
assetIDForStopping
_sendStopForAssetID:
setAssetIDForStopping:
loadingContext
setLoadingContext:
_assetIDForKeyRequest:
_certificateURLForKeyRequest:
_startKeyRequests:token:
_loadCertificateDataFromURL:loadingContext:attemptNumber:completion:
_fetchTokenForAssetID:completion:
_parseCertificateURL:keyServerURL:assetID:fromKeyRequest:
tvp_dataFromHexString
initWithURL:resolvingAgainstBaseURL:
port
setScheme:
setPort:
initWithFormat:
setPath:
sharedSession
initWithBase64EncodedData:options:
_allowedToRetryRequestForError:response:
_randomRetryDelayForFailedAttemptNumber:
dataTaskWithURL:completionHandler:
_sendKeyRequestsToServer:token:
_assetIDDataForKeyRequest:
tokenServerParameters
isValidJSONObject:
deviceGUID
stopServerURL
_linearServiceRequestForURL:assetID:
_keyServerURLForKeyRequest:
_sendURLRequestToServer:forKeyRequest:attemptNumber:
dataTaskWithRequest:completionHandler:
loadFairPlayStreamingKeyRequests:
updateOfflineKeyWithIdentifier:updatedOfflineKeyData:
mediaItemURL
isEqualToMediaItem:
cleanUpMediaItem
setUrl:
setTokenServerURL:
setStopServerURL:
setTokenServerParameters:
_disableScrubbing
_url
_tokenServerURL
_stopServerURL
_tokenServerParameters
_assetIDForStopping
_loadingContext
_handleMediaControllerNotification:
_handleSeekNotification:
system
eventRecorder
flushUnreportedEvents
addFinishBlock:
initWithPlayer:
trackerWithPlayList:
initWithPlayer:context:
setReportingEnabled:
setMetadata:forKey:
baseFieldsForVPAF
_metricsForSession:
_playHeadMillis:
seekStoppedAtOverallPosition:type:reason:eventData:
playStartedAtOverallPosition:type:reason:eventData:
seekStartedAtOverallPosition:type:reason:eventData:
nextMediaItem
playStoppedAtOverallPosition:type:reason:eventData:
_videoDisplayInfoForSession:
_screenInfo
_connectionInfo
_focusInfoForSession:
_metricsForPlayer:
isNetworkReachable
metadataForKey:
selectedAudioOption
languageCodeBCP47
_colorRangeForPlayer:
_sensitiveContentInfoForPlayer:
selectedSubtitleOption
subtitleType
currentMediaItemVideoRange
playbackDate
_setSessionMetadataValue:forKey:player:
_downloadInfoForPlayer:
_pendingPlayerProperties
initWithAMSBag:
initWithTopic:delegatePackage:
_currentSiriNavController
startIndex
setStartIndex:
_startIndex
_count
_setupLayouts
isDynamicTextEnabled
isTVOS
systemGrayTintColor
systemLightGrayColor
isHorizontal
_infoHeaderTextLayout
_infoBodyTextLayout
_infoDescriptionTextLayout
_descriptionLineSpacing
_highlightedDescriptionText
_darkHighlightedDescriptionText
infoTextLayout
_infoTextLayout
databaseItem
setDatabaseItem:
_databaseItem
setBadgeNumber:withCompletionHandler:
setBadgeString:withCompletionHandler:
showAppInstallCompletePushNotificationWithAppContext:appName:contentName:punchoutURL:
handleAction:
post::::
setBadgeNumber:
setBadgeString:
_center
_layoutSubviewsForSize:computationOnly:
_shouldPutTextOnSeaparateLines
totalSubviewsWidth
_removeGenreLabelAndSeparator
groupedSubviews
_removeSeparatorsFromGroupsIfNeeded:
_newLabelAsSubview:
_newImageViewAsSubview
_newRentalExpirationlabel:exisitingLabel:
setTag:
setCommonSenseLightImage:
setCommonSenseDarkImage:
setViewsMap:
setGroupedSubviews:
_totalSubviewsWidth
setTotalSubviewsWidth:
darkTintColor
commonSenseLightImage
commonSenseDarkImage
_groupedSubviews
_commonSenseLightImage
_commonSenseDarkImage
setMainMenuItems:
setGenreMenuItems:
_mainMenuItems
_genreMenuItems
initializeVUISeparatorView
vui_separatorColor
_updateLineColor
lineColor
setLineHeight:
intrinsicContentSize
line
setLine:
_lineHeight
_line
verticalSizeClass
initWithScaleToSize:
setDecorator:
userInterfaceLayoutDirection
contentInset
minPadding
minLengths
characterSetWithCharactersInString:
substringWithRange:
scannerWithString:
setCharactersToBeSkipped:
scanHexInt:
shouldInvalidateLayoutWithPreviousTraitCollection:newTraitCollection:
imageSizeWithAspectRatio:scaleToSize:
isIpadLayout
randomColor
createImageProxyForResourceObject:imageSize:
minimumNumberOfItemsToEnableSeeAllButton
libraryListMarginToGrid
colorFromHexStr:
spacerA
spacerB
spacerC
setMinPadding:
setMinLengths:
_minLengths
_minPadding
initWithDataSourceDict:
setDocumentRef:
uiConfigurationWithDict:
currentTabIdentifier
documentRef
prefetchData
setUiConfiguration:
shouldLoadPageImmediately
setShouldLoadPageImmediately:
_shouldLoadPageImmediately
_documentRef
_prefetchData
_uiConfiguration
elements
commonElements
timingElements
reliableUnderlyingDictionary
sortedElementKeys
sortedCommonKeys
sortedTimingKeys
rawEvent
eventDate
setElements:
setTimingElements:
setCommonElements:
setReliableUnderlyingDictionary:
_elements
_timingElements
_commonElements
_reliableUnderlyingDictionary
vui_valuesForProperties:
vui_isEqualToDownload:
setPageId:
setEventData:
createWithPageType:
createWithMetricsData:
generateMetricsDataDictionary
pageId
eventData
_pageId
_eventData
_reportForPlayer:playerState:completionState:completionBlock:
reporter
endPlaybackSession:
bootstrapInterval
_reportLinearForPlayer:playerState:completionState:completionBlock:
_reportVODForPlayer:playerState:completionState:completionBlock:
_wlkPlaybackStateForState:
_wlkPlaybackRateForState:player:
_completionFudgeFactor
VODSummaryWithBundleID:channelID:contentID:accountID:externalProfileID:timestamp:duration:elapsedTime:playbackState:playbackRate:completionState:
_reportSummary:sessionID:completion:
liveSummaryWithBundleID:channelID:serviceID:accountID:externalProfileID:timestamp:playbackState:playbackRate:currentPlaybackDate:
contentID
serviceID
reportPlayback:sessionID:completion:
scanning
rateUsedForPlayback
reportForPlayer:completionState:completionBlock:
setReporter:
setPostPlayConfig:
_reporter
_postPlayConfig
mediaEntitiesChangeSet
groupingChangeSet
setMediaEntitiesChangeSet:
_mediaEntitiesChangeSet
_groupingChangeSet
_calculateMaxDescriptionThatFit:
_calculateMaxHeaderThatFits:
_dataModels
_headerTextView
titleString
setTitleString:
descriptionString
setDescriptionString:
alertView
setAlertView:
dismissHandler
_titleString
_descriptionString
_alertView
_dismissHandler
_updateDescriptionTextViewProperties:
_setGradientMaskInsets:
setFilteringDisabled:
uniqueIdentifier
_connectionStateFromMPMediaLibraryStatus:
_handleMediaLibraryStatusDidChangeNotification:
setCloudFilteringType:
addLibraryFilterPredicate:
beginGeneratingLibraryChangeNotifications
artworkDataSource
setUsesFallbackCache:
serialOperationQueue
_enqueueProcessingBlock:
setConnectionState:
connectionState
connectWithCompletionHandler:progressHandler:
setSerialOperationQueue:
_connectionState
_serialOperationQueue
layoutWithLayout:element:sizeClass:contentType:
updateWithSizeClass:contentSizeCategoryIsAccessibility:
coverArtImageLayout
coverArtImageView
descriptionTitleTextLayout
comingSoonView
configureViewWithDataDictionary:andButtonViewElement:existingView:
setComingSoonView:
setCoverArtImageView:
_buttonViewsFromElements:existingButtons:prefersUberLayout:
availabilityTextView
availabilityImageView
_setTintColor:
_setDarkTintColor:
setAvailabilityTextView:
setAvailabilityImageView:
disclaimerTextView
setDisclaimerTextView:
_tagsViewWithMetadata:layout:existingView:
logoImageView
setLogoImageView:
logoTextLayout
subTextLayout
episodeInfoTextLayout
logoTextView
subTextView
episodeInfoView
setLogoTextView:
setSubTextView:
setEpisodeInfoView:
castInfoView
configureViewWithItems:existingView:
setCastInfoView:
comingSoonInfoString:
setDelegateRespondsToMediaChange:
setDelegateRespondsToDocumentCreationStatus:
setDelegateRespondsToEventOccurred:
setDelegateRespondsToDocumentUpdate:
postPlayDelegate
delegateRespondsToEventOccurred
delegateRespondsToMediaChange
didCompleteDocumentCreationWithStatus:errorDictionary:
delegateRespondsToDocumentCreationStatus
documentDidUpdate:
delegateRespondsToDocumentUpdate
automaticallyProvidesMediaController
lastSelectedMediaInfo
setLastSelectedMediaInfo:
_delegateRespondsToDocumentCreationStatus
_delegateRespondsToMediaChange
_delegateRespondsToEventOccurred
_delegateRespondsToDocumentUpdate
_postPlayDelegate
_lastSelectedMediaInfo
_previewFrameImageIdentifier
_sourceType
defaultSessionConfiguration
initWithMemoryCapacity:diskCapacity:diskPath:
memoryCapacity
diskCapacity
setURLCache:
sessionWithConfiguration:
setCurrentURL:
setAppScriptDict:
appScriptDict
currentURL
initWithURL:cachePolicy:timeoutInterval:
setTask:
fetchAppJavascript:cachePolicy:completionHandler:
task
_session
_completionBlocksDict
_currentURL
_appScriptDict
_task
_performWithoutLayoutBelow:
layoutBelowIfNeeded
_getGradientMaskBounds:startInsets:endInsets:intensities:
gradientBoundsInsets
_gradientBoundsInsets
_flags
showsLozengeForLivePlayback
setShowsLozengeForLivePlayback:
showsStillWatchingAlert
setShowsStillWatchingAlert:
stillWatchingAlertDuration
setStillWatchingAlertDuration:
setAlertIdleTimeout:
_showsLozengeForLivePlayback
_showsStillWatchingAlert
_stillWatchingAlertDuration
_alertIdleTimeout
setBootstrapInterval:
setDocumentUpdateOffsetInterval:
setMaximumAutoPlayableItems:
_bootstrapInterval
_documentUpdateOffsetInterval
_maximumAutoPlayableItems
_nowPlayingConfig
_configureLayout
_episodeLayout
_metadataLayout
viewLayout
setViewLayout:
airingView
configureViewWithElement:existingView:
_generateSectionViewFromElement:
updateViewWithSections:
setAiringView:
tv_interitemSpacing
tv_padding
sectionViews
setSectionViews:
_sectionViews
_viewLayout
_airingView
setActionParams:
_extrasDict
initWithDictionary:andMetadataDictionary:
isMovie
fpsNonceURL
resumeTimeTimeStamp
previewArtwork
_videosPlayableDict
_bookmarkID
_previewArtwork
setAnimated:
setNavigationBarHidden:
isModalOverModalAllowed
setAllowsModalOverModal:
popToViewController:animated:
cast
directors
producers
screenwriters
componentsSeparatedByCharactersInSet:
_arrayFromStringRepresentation:
_stringRepresentationFromArray:
hasCredits
_cast
_directors
_producers
_screenwriters
vui_applyChangeSet:inSection:completionHandler:
vui_applyChangeSet:inSection:updateDataSourceBlock:applyChangeBlock:completionHandler:
_vui_applyChangeSet:inSection:updateDataSourceBlock:applyChangeBlock:shouldWrapInUpdate:completionHandler:
insertChange
setInsertChange:
deleteChange
setDeleteChange:
moveChanges
setMoveChanges:
initWithIndex:
initWithChangeKind:sourceIndexes:destinationIndexes:
setUpdateChanges:
setUpdateChangeSet:
_vui_applyDeleteChange:inSection:applyChangeBlock:
_vui_applyInsertChange:inSection:applyChangeBlock:
_vui_applyMoveChanges:inSection:applyChangeBlock:
updateChanges
_vui_applyUpdateChanges:inSection:applyChangeBlock:updateDataSourceBlock:
performBatchUpdates:completion:
sourceIndexes
deleteSections:
_vui_indexPathsWithIndexSet:andSection:
deleteItemsAtIndexPaths:
destinationIndexes
insertSections:
insertItemsAtIndexPaths:
firstIndex
moveSection:toSection:
moveItemAtIndexPath:toIndexPath:
_vui_applySectionUpdateChanges:applyChangeBlock:updateDataSourceBlock:
_vui_applyItemUpdateChanges:inSection:applyChangeBlock:
updateChangeSet
reloadItemsAtIndexPaths:
enumerateIndexesUsingBlock:
vui_applyChangeSet:completionHandler:
vui_applySectionChangeSet:updateDataSourceBlock:completionHandler:
_overlayTypeFromString:
_upnextOverlayWithElement:existingView:
_sportsOverlayWithElement:cardlayoutType:overlayType:existingView:
_overlayWithElement:overlayType:existingView:
featuredCellOverViewFromElement:overlayType:existingView:
_overlayWithMediaItem:overlayType:existingView:
overlayLayoutForElement:cardLayoutType:
_overlayPaddingWithElement:
_gradientLayerWithViewElement:overlayType:existingLayer:
_overlayPaddingWithMediaItem:
vui_imageHighlightColor
setShouldRasterize:
setRasterizationScale:
setStartPoint:
setEndPoint:
setLocations:
setColors:
overlayTypeOfElement:
asyncWorkToken
_asyncWorkToken
_initWithMediaItemCategoryType:isRental:
_initWithMediaCollectionType:mediaCategoryType:
mediaCatgeoryForType:
supportedMediaCollectionTypes
setSubtype:
setMediaCategoryType:
setMediaCollectionType:
setRental:
_rental
_subtype
_mediaCategoryType
_mediaCollectionType
_tvOS_layoutSubviews
_totalMaxScoreWidthWithAvailableWidth:
_maxScoreWidthForColumn:availableWidth:
setRowLabels:
setScoreLabels:
setDescriptionLabels:
setFooterLabel:
rowLabels
scoreLabels
descriptionLabels
footerLabel
_rowLabels
_scoreLabels
_descriptionLabels
_footerLabel
_availabilityTextView
_availabilityImageView
stateMachinesOfType:
deregisterStateMachine:
_initializeStateMachine
postEvent:withContext:
_initiateLease
_invalidateAgentWithError:
dataWithBytes:length:
leaseID
storeMediaKind
_documentForOperation:mediaItem:clientData:leaseID:storeMediaKind:
_leaseRenewalLoaded:
_stopLease
_invalidateAgentWithError:wasCancelled:
leaseDuration
_renewLease:
scheduledTimerWithTimeInterval:target:selector:userInfo:repeats:
setRenewalTimer:
leaseAgent:renewalDidFailWithError:
renewalTimer
setNumRenewalRetries:
valueForKey:error:
uniqueID
_errorFromDictionary:
_decodeResponseDictionary:
_errorIsRecoverable:
ams_setSecureToken:forAccount:error:
ams_saveAccount:
stopAllLeases
initWithMediaItem:stateChangedHandler:
startLease
stopLease
_leaseAcquisitionLoaded:error:
setLeaseID:
setStoreMediaKind:
setLeaseDuration:
numLeaseStartRetries
setNumLeaseStartRetries:
numRenewalRetries
_FPMediaKind
_leaseID
_renewalTimer
_storeMediaKind
_leaseDuration
_numLeaseStartRetries
_numRenewalRetries
_coalesceResponses:
request
_mediaEntityKind
setMediaEntityKind:
_populatePrefetchProperties
_processRange
_processSortDescriptors
_processPredicate
_mediaQuery
_itemsFetchResponseWithMediaQuery:
_collectionsFetchResponseWithMediaQuery:
setProcessRangeAfterFetch:
mediaEntityKind
_shouldSortUsingMediaQuery
setMediaQuerySortOrderingProperties:
setMediaQuerySortOrderingDirectionMappings:
prefetchProperties
setPostFetchSortDescriptors:
postFetchSortDescriptors
_mediaQueryPredicateForPredicate:
vui_keyPathsInPredicate
setProcessPredicateAfterFetch:
setMediaQueryPredicate:
_mediaQueryPredicateForCompoundPredicate:
_mediaQueryPropertyPredicateForComparisonPredicate:
predicateWithValue:
subpredicates
compoundPredicateType
leftExpression
rightExpression
expressionType
predicateOperatorType
_keyPathMediaQueryPropertyPredicateWithKeyPathExpression:operatorType:constantExpression:
vui_isKeyPathBitTestExpression
_bitTestMediaQueryPropertyPredicateWithKeyPathBitTestExpression:operatorType:constantExpression:
keyPath
_mediaEntityPropertyDescriptorForFilteringWithKeyPath:
constantValue
arguments
_baseMediaQuery
_addEntityLimitToMediaQuery:
_addPredicateToMediaQuery:
_addSortingPropertiesToMediaQuery:
_addPrefetchPropertiesToMediaQuery:
processRangeAfterFetch
mediaQueryPredicate
_isSortingBeingPerformedByMediaQuery
mediaQuerySortOrderingProperties
mediaQuerySortOrderingDirectionMappings
processPredicateAfterFetch
_mediaEntities:subarrayWithRange:
itemSections
_fetchResponseWithMediaEntities:mediaQuerySections:
collections
collectionSections
_processFetchedMediaEntities:
_sortIndexesWithMediaQuerySection:
setRequest:
setPrefetchProperties:
currentFetchMediaEntityType
setCurrentFetchMediaEntityType:
_processPredicateAfterFetch
_processRangeAfterFetch
_request
_prefetchProperties
_mediaQueryPredicate
_mediaQuerySortOrderingProperties
_mediaQuerySortOrderingDirectionMappings
_postFetchSortDescriptors
_currentFetchMediaEntityType
initWithClientIdentifier:
setClientIdentifier:
_createSession
requestWithURL:
tokenService
initWithTokenService:bag:
setAccount:
requestByEncodingRequest:parameters:
localizedDescription
session
dataTaskPromiseWithRequest:
ephemeralSessionConfiguration
initWithConfiguration:
_createTokenServiceWithSession:
initWithTokenService:
setProtocolHandler:
setSession:
setTokenService:
clientIdentifier
initWithClientIdentifier:bag:
initializeWithClientIdentifier:
fetchContentForUrl:completion:
_tokenService
_clientIdentifier
_checkInOrphansRentalsIfNeeded
tvs_adamIDStringFromBuyParams
tvs_unsignedLongLongValue
numberWithUnsignedLongLong:
_initializePlaybackType
ams_storefront
performMediaItemMetadataTransactionWithBlock:
playbackType
_usesFileBasedContentLease
_supportsBookmarks
disableResumeMenu
_serviceIdentifier
_adamIDString
scrubMediaItem
preferredStoreAssetDict
setScrubMediaItem:
_bookmarkNetTime
contentRatingRank
storeItemDict
currentProcess
userAgentForProcessInfo:
tvs_ISO8601CombinedDateAndTimeFormatter
dateFromString:
mpMediaItem
_imageLoader
setFpsKeyError:
_mediaItemPreparationCancelled:
setVideoType:
sharedHTTPCookieStorage
tvs_setDownloadKeyCookieWithURL:downloadKey:
_loadTrickPlayConfigURL
_loadTomatoRatingDataForAdamID:completion:
setUpdatesMediaRemoteInfoAutomatically:
setUpdatesBookmarks:
setSendsPlayerReports:
setCreatesPlayerItemButDoesNotEnqueue:
setCurrentMediaItem:
setIFramePrefetchMaxSize:
setScrubPlayer:
_scrubPlayerItemDidLoad:
hlsPlaylistURL
_preferredStoreAssetDictFromStoreItemDict:
setPreferredStoreAssetDict:
iTunesPreferHLSForPlayback
setPlaybackType:
_performRedownloadWithCompletion:
setNeedsRentalCheckin:
initWithAccountIdentifier:rentalKeyIdentifier:
_updateRentalExpirationDate:playbackStartDate:
startWithResponseBlock:
_checkoutRentalWithCompletion:
_startLeaseWithCompletion:
fpsKeyError
leaseAgent
setLeaseAgent:
needsRentalCheckin
_checkInRental
storeFPSKeyLoader
setStoreFPSKeyLoader:
scrubPlayer
setIgnoreLeaseAgentStateChanges:
tvs_deleteDownloadKeyCookieForURL:
trickPlayImageConfigDocumentLoader
setTrickPlayImageConfigDocumentLoader:
setAdditionalRequestParams:
bookmarkDisabled
setShouldProcessProtocol:
setBuyParameters:
setRequestProperties:
setIgnoresForcedPasswordRestriction:
initWithPurchases:
setCreatesDownloads:
tvs_appleTimingAppHeaderValue
bodyData
startWithPurchaseResponseBlock:completionBlock:
ignoreLeaseAgentStateChanges
setShouldValidateRentalInfo:
startWithConnectionResponseBlock:
_checkInRentalWithDSID:rentalID:
setImageInterval:
setImageCount:
setBaseURL:
setUsesOneBasedImageIndexes:
setImageNameFormatString:
setVersion:
setStoreFrontSuffix:
setItemIdentifiers:
rottenTomatoesOperationQueue
setRottenTomatoesOperationQueue:
unqueuedPlayerItem
bookmarkOverrideTime
iTunesFileVideoResolution
guid
_fetchRentalsFromStoreWithCompletion:
_rentalsRequestDocumentLoaderWithStartID:endID:
replaceObjectAtIndex:withObject:
productType
checkInOrphanedRentals
storeFPSKeyLoader:shouldKeyRequestContinueInvalidationAfterLoadingNonce:
prepareForLoadingWithCompletion:
prepareForPlaybackInitiationWithCompletion:
replacementErrorForPlaybackError:
updateBookmarkWithSuggestedTime:forElapsedTime:duration:playbackOfMediaItemIsEnding:
updatePlayCountForElapsedTime:duration:
setMediaType:
setHlsPlaylistURL:
setContentRatingRank:
setMpMediaItem:
_bookmarkDisabled
_disableResumeMenu
_ignoreLeaseAgentStateChanges
_needsRentalCheckin
_actionParams
_mediaType
_hlsPlaylistURL
_contentRatingRank
_storeItemDict
_bookmarkOverrideTime
_fpsCertificateURL
_fpsKeyServerURL
_fpsAdditionalServerParams
_playbackType
_preferredStoreAssetDict
_leaseAgent
_storeFPSKeyLoader
_trickPlayImageConfigDocumentLoader
_scrubMediaItem
_scrubPlayer
_fpsKeyError
_bookmark
_rottenTomatoesOperationQueue
_mpMediaItem
initWithType:titleStyle:
_configurePrimaryButton
titleStyle
standardTitleLayoutWithStyle:
contentMotionTranslation
_titleStyle
_contentMotionTranslation
initWithDomain:dataSource:automaticSynchronizeOptions:isActive:
_activeAccountDidChange:
_setNeedsSync
synchronizeImmediatelyWithCompletionHandler:
lock
pendingChanges
keyValueStoreItemIdentifierForItem:
tvs_setObjectIfNotNil:forKey:
uppKeyToRecordMap
unlock
setHasLocalChangesToSync:
setKeyType:
_uppStore
_lastSyncTimestamp
_needsSync
_stateLock
initWithClientState:changes:
clientState
setLastSyncedDomainVersion:
changes
beginTransactionWithItemsToSyncEnumerationBlock:
commitUniversalPlaybackPositionTransaction:domainVersion:metadataEnumerationBlock:
cancelUniversalPlaybackPositionTransaction:
lastSyncedDomainVersion
_capturedDomainVersion
_clientState
_changes
longValue
_uppDictionary
enumerateValuesForProperties:usingBlock:
markAsWatched
markAsUnwatched
_itemIdentifier
_keyType
_bookmarkTime
_hasBeenPlayed
_playCount
_timestamp
_pendingChanges
_uppKeyToRecordMap
_lastSyncedDomainVersion
isConnectable
supportsDRMContent
_incrementRevision
_updateWithTitle:connectionState:
_manager
initWithOverlayType:
colorWithDynamicProvider:
disclaimerLayout
setDisclaimerLayout:
setButtonLayout:
_disclaimerLayout
_initWithType:
setSupportedMediaCollectionTypes:
setSupportedChildMediaCollectionTypes:
supportedChildMediaCollectionTypes
_supportedMediaCollectionTypes
_supportedChildMediaCollectionTypes
initWithName:initialState:mode:
_applicationDidBecomeActive:
_libraryContentsDidChange:
autoupdatingSharedLibrary
setEarliestExpirationTimer:
dateOfLastRentalExpirationHandling
predicateWithProperty:value:comparison:
predicateWithProperty:equalToInteger:
queryWithLibrary:predicate:orderingTerms:
initWithQuery:
updateToLibraryCurrentRevision
applicationState
setDateOfLastRentalExpirationHandling:
initWithPersistentID:inLibrary:
enumeratePersistentIDsUsingBlock:
earliestExpirationTimer
_expirationTimerDidFire:
startMonitoring
_dateOfLastRentalExpirationHandling
_earliestExpirationTimer
legendNameLabel
legendDescriptionLabel
legendsMargin
legendDescriptionLayout
legendLayout
legendBackgroundColor
legendCornerRadius
setLegendNameLabel:
setLegendDescriptionLabel:
legendName
setLegendName:
legendDescription
setLegendDescription:
_legendNameLabel
_legendDescriptionLabel
isObserving
setObserving:
_startObserving
_stopObserving
_updateLatestObservation
_notifyDelegateLatestObservationDidChange:
_handleNowPlayingAppDidChangeNotification:
_handleNowPlayingAppIsPlayingDidChangeNotification:
setLatestObservation:
updateObservationContext
setUpdateObservationContext:
_updateLatestObservationWithBundleIdentifier:playbackState:
initWithBundleIdentifier:isPlaying:
latestObservation
_observing
_latestObservation
_updateObservationContext
setPlaying:
setNowPlayingAppBundleIdentifier:
_playing
_nowPlayingAppBundleIdentifier
initWithDateForEntityBlock:
setMaxEntities:
_punchoutURLForDirectPlayback:ignoreExtras:
optionsWithDictionary:
serviceWithDefaultShellEndpoint
openApplication:withOptions:completion:
setExtrasInfo:
_extrasInfo
getObjects:range:
getValues:forProperties:count:
initWithSizeClass:contentType:
_createLayoutsWithSizeClass:contentType:
_coverArtImageShadow
setLogoTextLayout:
setCoverArtImageLayout:
maxCoverArtImageHeight
_sizeClass
_logoTextLayout
_subTextLayout
_episodeInfoTextLayout
_descriptionTitleTextLayout
_coverArtImageLayout
_maxCoverArtImageHeight
vui_imageFromContextWithSize:scale:type:pool:drawing:encapsulation:
slotLength
nextSlotWithBytes:length:
initWithCGImage:scale:orientation:
vui_bytesNeededForSize:scale:withContextType:
vui_imageFromContextWithSize:scale:type:pool:drawing:
setNeedsDisplayOnBoundsChange:
setOpaque:
_updateTransitionsAnimated:
_clearDisplayLink
_clearTransitionIfComplete:
_updatePausedTransitionAnimated:
_updateStateTransitionAnimated:
progressViewCanBeRemoved:
_updateFractionTransitionAnimated:
_hasActiveTransitions
_ensureDisplayLink
completeTransitionAndUpdateView:
updateToPaused:
newTransitionToPaused:
newTransitionFromState:toState:
updateToFraction:
newTransitionToFraction:
isCompleteWithView:
updateView:withElapsedTime:
_onDisplayLink:
displayLinkWithTarget:selector:
setPreferredFramesPerSecond:
addToRunLoop:forMode:
drawInRect:blendMode:alpha:
_drawPieWithCenter:
_drawOutgoingCircleWithCenter:
_drawIncomingCircleWithCenter:
_drawPauseUIWithCenter:
initWithLabel:slotLength:
numberWithUnsignedInt:
_pieImagesMemoryPool
bezierPathWithArcCenter:radius:startAngle:endAngle:clockwise:
setLineWidth:
strokeWithBlendMode:alpha:
bezierPath
moveToPoint:
addLineToPoint:
addArcWithCenter:radius:startAngle:endAngle:clockwise:
fillWithBlendMode:alpha:
_pieImageAtFraction:
_maskImage
addClip
bezierPathWithRect:
setState:paused:fractionLoaded:animated:
setCanAnimate:
setOverlayImage:
circleBoundingRect
overlayImage
canAnimate
backgroundAlpha
setBackgroundAlpha:
foregroundAlpha
setForegroundAlpha:
circleRadiusFraction
setCircleRadiusFraction:
pauseRadiusFraction
setPauseRadiusFraction:
displayedState
setDisplayedState:
displayingPaused
setDisplayingPaused:
displayedFraction
setDisplayedFraction:
_activeStateTransition
_activePausedTransition
_activeFractionTransition
_modelState
_modelPaused
_modelFraction
_displayLink
_lastUpdate
_canAnimate
_displayingPaused
_overlayImage
_backgroundAlpha
_foregroundAlpha
_circleRadiusFraction
_pauseRadiusFraction
_displayedState
_displayedFraction
_classForTransitionFromState:toState:
_initWithFromState:toState:
functionWithName:
_solveForInput:
_updateView:
_totalElapsedTime
_timingFunction
_fromState
_toState
_fraction
setNeedsDisplayInRect:
_initToPaused:
_updateTimingFunction
_updateElapsedTimeFromFraction
_toPaused
_updateView:forDisplayedFraction:
_targetFraction
sourceBackgroundImage
resizedBackgroundImageSize
drawInRect:
setResizedSourceBackgroundImage:
overlayMaterialRequests
rect
_blurredMaterialImageWithSourceBackgroundImage:forRect:
setOverlayMaterialImageByIdentifier:
imageWithCGImage:
settingsForPrivateStyle:
setColorTintAlpha:
_applyBackdropViewSettings:
main
setSourceBackgroundImage:
_overlayMaterialRequests
_resizedSourceBackgroundImage
_overlayMaterialImageByIdentifier
_sourceBackgroundImage
_resizedBackgroundImageSize
setRect:
_rect
initWithIdentifier:show:
setShow:
_show
initWithFrame:blurEffectStyle:blurEnabled:
_configureWithLayout:
setGroupName:
setImageView:state:
setBackgroundImage:state:
setDisabled:
_setFocusedColor:
setSize:
setImagesViewHighlightedState:
setBackgroundImagesViewHighlightedState:
_updateBackgroundColor
shadowOffset
shadowBlurRadius
setShadowRadius:
shadowColor
setShadowOpacity:
_imageSizeThatFits:
_hasTitle
_hasImage
_hasBackgroundImage
imagesViewDefaultState
setImagesViewDefaultState:
imagesViewHighlightedState
backgroundImagesViewDefaultState
setBackgroundImagesViewDefaultState:
backgroundImagesViewHighlightedState
_imagesViewDefaultState
_imagesViewHighlightedState
_backgroundImagesViewDefaultState
_backgroundImagesViewHighlightedState
_setManualLayoutFrame:
_layoutSubviewsWithSize:computationOnly:
disableFocus
_layoutLabels:withOrigin:maxWidth:
setLastFocusedView:
containerGuide
setContainerGuide:
_appleTVChannelLogoView
_subscribeButton
_disclaimerTextLabel
_textLabels
_lastFocusedView
_containerGuide
logoMargin
setLogoMargin:
legendSize
setLegendSize:
legendMaxWidth
setLegendMaxWidth:
setLegendsMargin:
setLegendCornerRadius:
dividerMargin
setDividerMargin:
dividerSize
setDividerSize:
dividerColor
_legendMaxWidth
_legendBackgroundColor
_legendCornerRadius
_dividerColor
_legendLayout
_legendDescriptionLayout
_legendSize
_dividerSize
_logoMargin
_legendsMargin
_dividerMargin
_startMediaLibraryFetchOperation
currentSubOperation
_handleCompletdFetchWithResponses:error:
setCurrentSubOperation:
_startChangesOperationWithMediaEntityFetchResponses:currentFetchResponses:
_resultWithResponses:
setResult:
_result
_currentSubOperation
isUpNextPlayback
userPlaybackInitiationDate
openURLCompletionDate
_playPlayables:storeDictionary:appContext:isUpNextPlayback:userPlaybackInitiationDate:openURLCompletionDate:
_playMediaInfo:extrasInfo:isRentAndWatchNow:completion:
_presentPlaybackWithMediaInfo:extrasInfo:completion:
_preflightWithMediaInfo:isRentAndWatchNow:completion:
defaultPreflightManager
setPresentingController:
setRestrictionsCheckType:
preflightWithOptions:completion:
playMediaInfo:animated:
setVideosPlayables:
_upNextPlayback
_videosPlayables
_userPlaybackInitiationDate
_openURLCompletionDate
setClearsContextBeforeDrawing:
_imageLoaded
_invalidateTimer
textBadgeViewContentsUpdated:
setGlyphSize:
setAttributedTitle:
_textSize
minHeight
CGPath
fill
stroke
vui_imageWithColor:
strokeSize
setStrokeSize:
attributedTitle
glyphSize
_strokeSize
_backgroundImage
_attributedTitle
_glyphSize
nextResponder
vui_handleEvent:forElement:sourceView:
registerClass:forSupplementaryViewOfKind:withReuseIdentifier:
startFetchControllers:
episodeShelfViewControllerBySeasonIdentifier
setChildView:
dequeueReusableSupplementaryViewOfKind:withReuseIdentifier:forIndexPath:
_buildTvShowDetailPageViewModel
_episodesBySeasonIdentifier
setEpisodeShelfViewControllerBySeasonIdentifier:
mediaCollection
episodeGroups
setEpisodeGroups:
tvShowDetailPageViewModel
setTvShowDetailPageViewModel:
_mediaCollection
_episodeGroups
_tvShowDetailPageViewModel
_episodeShelfViewControllerBySeasonIdentifier
_scoreboardTypeForElement:
_sportsOverlayALayoutWithElement:
_sportsOverlayBLayoutWithElement:
_sportsOverlayCLayoutWithElement:
scoreboardALayout
scoreboardBLayout
scoreboardCLayoutWithInnerMargin:
_supportsStartingDownloadWithMediaItem:
_onProcessingQueue_calculateStateAndNotify:
_handleMediaItemAssetControllerStateDidChangeNotification:
mediaEntityIdentifier
_onProcessingQueue_invalidateAndSetState
_enqueueAsyncProcessingQueueStrongSelfBlock:
supportsStartingDownload
_onProcessingQueue_startDownloadWithCompletion:
_onProcessingQueue_downloadController
pauseDownload
resumeDownload
_onProcessingQueue_cancelAndRemoveDownload
_assetControllerStatusFromDownloadControllerState:
_onProcessingQueue_updateStateWithStatus:downloadProgress:bytesDownloaded:bytesToDownload:supportsPausing:supportsCancellation:notify:
storeItemIdentifier
_onProcessingQueue_startMonitoringDownload
_onProcessingQueue_updateStateWithStatus:notify:
setObserverDispatchQueue:
_isDownloaded
storeDownloadForMediaItem:type:attributes:
addDownloads:
requestPermissionToDownloadWithType:completionHandler:
cancelDownload
removeItems:
_onProcessingQueue_setDownloadController:
_notifyDelegateStateDidChange:
_postStateDidChangeNotificationWithFromState:toState:
mediaEntityAssetController:stateDidChange:
mediaItemDownloadController:stateDidChange:
startDownloadWithCompletion:
cancelAndRemoveDownload
setMediaEntityIdentifier:
downloadController
setDownloadController:
isRequestingPermissionToDownload
setRequestingPermissionToDownload:
_supportsStartingDownload
_requestingPermissionToDownload
_mediaEntityIdentifier
_downloadController
_backgroundColorForIdiom:
setSeparatorColor:
_backgroundColorBlendMode
setSeparatorBlendMode:
setBackgroundBlendMode:
_topRowLayoutForIdiom:
_bottomLayoutForIdiom:
_backgroundBlendMode
_separatorBlendMode
_backgroundColor
_separatorColor
setTopRowLayout:
setBottomRowLayout:
_textBlendMode
_textColor:
_padding
_topRowLayout
_bottomRowLayout
imageOrientation
_flatImageWithColor:
imageFlippedForRightToLeftLayoutDirection
bezierPathWithRoundedRect:cornerRadius:
setStroke
imageWithColor:
offer
playWhenDone
extrasAction
_transactionOfferDict
_offer
setCommerceActionRef:
_startPurchaseFlowForOffer:playWhenDone:appContext:completionHandler:
_startSubscribeFlowForOffer:completionHandler:
setVideosPlayable:
metricsAugumentedBuyParamsWithBuyParams:
acquisitionPropertiesWithBuyParams:urlbagKey:
_addTransaction:forBuyParams:
_postPurchaseNotification:error:
acquireWithProperties:completionBlock:
_postTransactionDidStartNotificationWithBuyParams:
_postSubscriptionNotificationWithChannelName:buyParams:error:
_removeTransactionForBuyParams:
_displayConfirmationForChannelName:
mapTableWithStrongToStrongObjects
commerceActionRef
_commerceActionRef
imageType
baseImageIdentifier
setImageURL:
setBaseImageIdentifier:
setImageType:
_imageIdentifier
_imageURL
_baseImageIdentifier
_imageType
overlayVisualEffect
effectSettings
setColorTint:
setSaturationDeltaFactor:
setBlurRadius:
isProgressBar
setIsProgressBar:
_isProgressBar
setSectionInset:
defaultsDataSource
getRecentEventsForDebuggerUI
deselectItemAtIndexPath:animated:
previouslyFocusedIndexPath
_dismissViewController
containerView
setContainerView:
requiresRelayout
setRequiresRelayout:
dataSource
_dataSource
initWithDocumentServiceRequest:loadImmediately:
_cancelDocumentUpdates
_unregisterDocumentUpdateEventDescriptors
_cancelDocumentUpdatesAndPreserveUpdateEvents
_startDocumentUpdatesWithContext:
setDeferDocumentUpdateEventProcessing:
_startDocumentUpdatesForDeferredEventsIfPossible
deferredDocumentUpdateEventStore
setMarkDocumentDirtyForRefreshUpdate:
deferDocumentUpdateEventProcessing
serviceContext
element
_registerDocumentUpdateEventDescriptorsWithServiceCompletionStatus:
documentUpdateContext
documentUpdateViewElements
_performNextDocumentUpdateIfNeeded
serviceRequest:didCompleteWithStatus:errorDictionary:
replaceAppDocumentWithAppDocument:
send
_cancelDocumentUpdateWithRequest:
setDocumentUpdateContext:
_startDocumentUpdateWithRequest:
markDocumentDirtyForRefreshUpdate
_findCollectionListChildElementsInViewElement:
setDocumentUpdateViewElements:
updateServiceRequest:documentDidChange:
initWithDocumentServiceRequest:
updateDocumentWithContextDictionary:element:
setViewControllerIdentifier:
setDeferredDocumentUpdateEventStore:
_deferDocumentUpdateEventProcessing
_markDocumentDirtyForRefreshUpdate
_viewControllerIdentifier
_documentUpdateContext
_documentUpdateViewElements
_deferredDocumentUpdateEventStore
initWithFetchReason:fetchResponse:
setFetchResponse:
setFetchChanges:
_fetchResponse
_fetchChanges
setOrderedKeys:
setMappingDictionary:
mappingDictionary
setDataSourceType:
_generateStoreIdentiferToIndexMapping:generatesDifferentials:
dataSourceType
_orderedKeys
_mappingDictionary
_updateImage
highlightOrSelectedImage
setHighlightOrSelectedImage:
_flatImage
_highlightOrSelectedImage
_handleMediaDatabaseContentsDidChangeNotification:
initWithDatabase:
setDatabase:
_database
_preferredConfigurationForFocusAnimation:inContext:
pressesBegan:withEvent:
_showPressState
pressesEnded:withEvent:
_clearPressState
pressesCancelled:withEvent:
setPressed:animated:completion:
allowsFocus
pressIsAnimating
unpressOnEndAnimating
_allowsFocus
logNameSuffix
_cancelFetch
_moveToPausedState
pauseCount
setPauseCount:
_startFetchIfNeededWithMediaLibraryRevision:completionHandler:
vui_applyChangeSet:destinationObjects:
fetchOperation
setFetchOperation:
_shouldFetchForMediaLibraryRevision:
_startFetchWithCompletionHandler:
_enqueueFetchWithReason:completionHandler:
_fetchOperationCompleted:withCompletionHandler:
addExecutionBlock:
_updateMutableArray:withLatestObjects:changeSet:updateOnNoChanges:
setLogName:
setLogNameSuffix:
_logName
_logNameSuffix
_fetchOperation
_pauseCount
startOverallPosition
overallPosition
initWithPosition:duration:eventData:
setOverallPosition:
timeRange
setTimeRange:
_overallPosition
_timeRange
removeIndexesInRange:
enumerateRangesUsingBlock:
isLive
itemAtOverallPosition:rangeOptions:
itemsBetweenStartOverallPosition:endOverallPosition:
setItems:
setIsLive:
_isLive
_items
preferencesWithDomain:
boolForKey:defaultValue:
_setAppLaunchFieldWithData:
appLaunchData
setAppLaunchData:
recordAppLaunchEventWithEventType:
_appLaunchData
setupMetricsController
initWithOptions:capacity:
_createMetricsKitForTopic:
_initializeBaseFields
registerForBaseFieldChanges
_recordEnter:
_recordEvent:withEventData:
_recordExit:
exitEventDestinationUrl
_flushMetricsOnExit
_flushUnreportedEvents:
activeMetricsKit
eventHandlers
page
setLastRecordedPageEventData:
click
impressions
media
search
enter
exit
dialog
_createDataAddingBaseAndPageFieldsToEventData:
metricsDataWithPageId:pageType:pageContext:eventData:
recordEvent
_saveRecentEvents:
shouldPostAppLaunchData
setShouldPostAppLaunchData:
recordEvent:
stringValueForKey:
model
systemName
preferredLanguages
optedInVal
setBaseFields:
baseFields
_handleTabBarChange:
_handleWLKSettingsDidChange:
_handleWLKAppLibChange:
_updateBaseFieldsWithData:
removeObjectsForKeys:
recordAppLaunched
recordAppBecameActive
recordOpenUrlLaunchWithExtURL:andOptions:
recordAppWillTerminate
recordAppWillBackground
jsDelegateRecordEvent:
jsDelegateRecordPerfEvent:
jsDelegateRecordLogEvent:
flushMetrics
lastRecordedPageEventData
setActiveMetricsKit:
metricsKitMain
setMetricsKitMain:
loggerKit
setLoggerKit:
metricsKitUnidentified
setMetricsKitUnidentified:
perfMetricsKit
setPerfMetricsKit:
metricsDataDispatchSQ
setMetricsDataDispatchSQ:
savedRecentEvents
setSavedRecentEvents:
_isInternalBuild
_isAppJustLaunched
_isAppJustDeepLinkOpened
_isGDPRConsented
_shouldPostAppLaunchData
_baseFields
_currentTabIdentifier
_exitEventDestinationUrl
_lastRecordedPageEventData
_activeMetricsKit
_metricsKitMain
_loggerKit
_metricsKitUnidentified
_perfMetricsKit
_metricsDataDispatchSQ
_savedRecentEvents
enqueueKeepAliveWithCompletion:
vui_heightToBaseline
_cleanRatingName:
regularExpressionWithPattern:options:error:
stringByReplacingMatchesInString:options:range:withTemplate:
resourceForRating:ratingSystem:
layoutSubviewsWithSize:computationOnly:
debugTextLabel2
_debugTextLabel
_debugTextLabel2
pathForResource:ofType:
getStackScrollPage
getSportsScrollPage
_registerElements
_registerStyles
_registerStylesheets
buttonWithElement:existingButton:
featuredCellWithElement:existingCell:
_URLForResource:inBundle:
registerIKClass:forElementName:elementType:dependent:
registerStyle:withType:inherited:
styleSheetRegistry
_urlForStyleSheetName:
registerStyleSheetURLs:forTemplateName:basedOnTemplateName:
URLForResource:withExtension:
navigationControllerForTabIdentifier:
rootView
noContentErrorTitle
noContentErrorMessage
_createAlertViewWithTitle:description:
setContentHasBeenDeleted:
setCurrentView:
onlyShowLocalContent
setContentHasBeenManuallyDeleted:
pausesFetchControllersAutomatically
viewWillLayoutSubviews
setOnlyShowLocalContent:
updateAfterContentWasManuallyDeleted:
setPausesFetchControllersAutomatically:
setNoContentErrorMessage:
contentHasBeenDeleted
contentHasBeenManuallyDeleted
deletedContentErrorMessage
setDeletedContentErrorMessage:
setRootView:
_onlyShowLocalContent
_pausesFetchControllersAutomatically
_contentHasBeenDeleted
_contentHasBeenManuallyDeleted
_currentView
_currentViewType
_noContentErrorTitle
_noContentErrorMessage
_deletedContentErrorMessage
_contentView
_rootView
sportsLeagueID
setSportsLeagueID:
sportsTeamName
setSportsTeamName:
_sportsLeagueID
_sportsTeamName
progressLayer
_progressFrame
progressBackgroundLayer
_progressPath
centerSquareWidth
centerLayer
indeterminateLayer
indeterminateWidth
_indeterminatePath
didMoveToWindow
isIndeterminate
_configureProgress:
_isInAWindow
_addProgressLayer
setStrokeEnd:
_addIndeterminateLayer
_removeProgressLayer
_startIndeterminateAnimation
_removeIndeterminateLayer
progressWidth
progressFillColor
setCenterLayer:
setStrokeColor:
setFillColor:
setProgressBackgroundLayer:
setLineCap:
setProgressLayer:
setIndeterminateLayer:
animationWithKeyPath:
setToValue:
setRepeatCount:
addAnimation:forKey:
setIndeterminateWidth:
setProgressFillColor:
progress
setCenterSquareWidth:
setProgressWidth:
_indeterminate
_indeterminateWidth
_progressFillColor
_progress
_centerSquareWidth
_indeterminateLayer
_centerLayer
_progressLayer
_progressBackgroundLayer
_progressWidth
_vui_moviesQueryWithMediaLibrary:rentals:
_vui_configureMediaQueryWithMediaLibrary:
movieRentalsQuery
initWithTitle:subtitle:domain:defaultName:boolType:
defaultName
setDefaultBoolValue:
setIntegerValueType:
_defaultBoolValue
_integerValueType
_domain
_defaultName
_defaultIntegerValue
_createDefaultsDataSource
setDefaultsDataSource:
_defaultsDataSource
scaleToSize
cropToFit
setScaleToSize:
setCropToFit:
setParams:
_cropToFit
_image
_scalingResult
_params
_scaleToSize
deviceConfigForContext:
navigationControllerForContext:
tabBarForContext:
modalControllerForContext:
objectForPlayer:
objectForPlaylist:
objectForMediaItem:
appContext:evaluateAppJavaScriptInContext:
appContext:validateDOMDocument:inContext:error:
appContext:didStartWithOptions:
appContext:didFailWithError:
appContext:didStopWithOptions:
appContext:needsReloadWithUrgency:
appContext:needsReloadWithUrgency:options:
xhrSessionConfigurationForContext:
sourceApplicationBundleIdentifierForContext:
sourceApplicationAuditTokenDataForContext:
appContext:scriptForURL:cachePolicy:completion:
identifierForVendor
setBuyParams:
setUrlBagKey:
setDsid:
setUserAgent:
setStrongToken:
urlBagKey
userAgent
dsid
strongToken
ignoresForcedPasswordRestriction
_ignoresForcedPasswordRestriction
_buyParams
_urlBagKey
_userAgent
_dsid
_strongToken
identifierInternal
currentCalendar
components:fromDate:
year
kind
dictionaryWithValuesForKeys:
hasLocalChanges
firstAccessPropertiesCache
addedDate
requestedProperties
_defaultValueForPropertyDescriptor:
cachesPropertiesOnFirstAccess
sortTitle
setPlayedState:
_didRequestPropertyWithKey:
setLocalChanges:
setIdentifierInternal:
setFirstAccessPropertiesCache:
_localChanges
_cachesPropertiesOnFirstAccess
_identifierInternal
_firstAccessPropertiesCache
_kind
_requestedProperties
initWithImageView:andProxies:
_fetchNext
transitionInterval
_displayIntervalTimerFired:
setTransitionTimer:
transitionTimer
animationDuration
animationOptions
isCachingEnabled
setCacheOnLoad:
_setImage:animated:
setDisplayImageIndex:
isAnimating
_updateImageWithIndex:
loadImageProxy:withWeakObject:completionHandler:
indexOfFetchedImage
isImageAvailable
setIndexOfFetchedImage:
displayImageIndex
startAnimation
stopAnimation
setAnimationOptions:
setAnimationDuration:
setTransitionInterval:
setCachingEnabled:
_animating
_cachingEnabled
_imageProxies
_animationOptions
_animationDuration
_transitionInterval
_displayImageIndex
_indexOfFetchedImage
_transitionTimer
_active
_autoRemove
_userInfo
initWithType:startTime:duration:
_skippable
_startTime
_activationType
_advisoryDisabledTimeRanges
initWithType:duration:repeats:
_repeats
setLayoutType:
setGridType:
initWithCardLayoutType:gridStyle:gridType:
_layoutForCardLayoutType:interfaceIdiom:
featuredCardViewLayoutForIdiom:
upnextCardViewLayoutForIdiom:
standardCardViewLayoutForIdiom:
editorialCardViewLayout
videoLockupCardViewLayout
setSecondaryTextLayout:
setAcceptsFocus:
setImagePosition:
shadowForCardImageLayout
_phoneLayout
_padLayout
_tvLayout
_cardLayoutType
_gridType
_prototypeSubtitleLabelForOfferCardSizeCalculation
cardHeightForElementType:
setHideFloatingBackground:
_hideFloatingBackground
_darkBackgroundColor
_highlightColor
_imagePosition
_secondaryTextLayout
didMoveToSuperview
_configureProgressLayer
_setProgress:animated:
_stopAutoAnimation
progressInset
backgroundImageInset
backgroundLayer
displayLink
setDisplayLink:
_configureBackground
progressTintColor
centerImage
setClipsSubviews:
setBackgroundLayer:
insertSublayer:above:
_animateValueOnDisplayLink:
currentRunLoop
autoFillDelta
setAutoFillDelta:
initWithFrame:duration:
setProgressTintColor:
setCenterImageInset:
setCenterImage:
setProgress:animated:
setProgressInset:
setBackgroundImageInset:
backgroundTintColor
setBackgroundTintColor:
centerImageInset
centerTintColor
setCenterTintColor:
progressMaskLayer
setProgressMaskLayer:
autoFillStartTimeStamp
setAutoFillStartTimeStamp:
_progressTintColor
_backgroundTintColor
_centerImage
_centerTintColor
_backgroundLayer
_progressMaskLayer
_autoFillDelta
_autoFillStartTimeStamp
_progressInset
_backgroundImageInset
_centerImageInset
setAppImageElement:
setLogoImageElement:
useMaterial
setUseMaterial:
setProgressViewElement:
setSubtitleElement:
setTextElement:
setProgressViewShowOnlyOnFocus:
setAppImageViewShowOnlyOnFocus:
setLogoImageViewShowOnlyOnFocus:
setTextLabelShowOnlyOnFocus:
setSubtitleLabelShowOnlyOnFocus:
setBadgeShowOnlyOnFocus:
setBlurMaskLayer:
setMask:
_setAutoPlayDuration:
_invalidateAutoPlayIfNeeded
autoPlayIndicator
_toggleLayoutSubviewsSelected:animated:withAnimationCoordinator:
textLabelShowOnlyOnFocus
subtitleLabelShowOnlyOnFocus
appImageViewShowOnlyOnFocus
logoImageViewShowOnlyOnFocus
progressViewShowOnlyOnFocus
badgeShowOnlyOnFocus
addCoordinatedAnimations:completion:
setAutoPlayDuration:
_registerNowPlayingNotifications
_handleShouldShowAutoPlayUINotification:
_handleShouldHideAutoPlayUINotification:
_startAutoPlayAnimation
autoPlayDuration
_dispatchAutoPlayEvent
setAutoPlayIndicator:
progressViewElement
appImageElement
logoImageElement
textElement
subtitleElement
blurMaskLayer
setIsFocused:
_progressViewShowOnlyOnFocus
_appImageViewShowOnlyOnFocus
_logoImageViewShowOnlyOnFocus
_textLabelShowOnlyOnFocus
_subtitleLabelShowOnlyOnFocus
_badgeShowOnlyOnFocus
_isFocused
_progressViewElement
_appImageElement
_logoImageView
_logoImageElement
_textElement
_subtitleElement
_blurMaskLayer
_autoPlayDuration
_autoPlayIndicator
showViewController:sender:
setEvent:
performValidation
tableView:titleForHeaderInSection:
event
_event
presentingController
_preflightWithOptions:completion:
_performRestrictionsCheckWithCompletion:
_performAgeGateVerificationWithCompletion:
_preflightRentalWithCompletion:
videosPlayable
restrictionsCheckType
_validateRestrictionsForPlayback:
_validateRestrictionsForPurchase:
_isMovie
_contentRatingValue
_pbrestrictedValueToString:
_showMediaNotAllowedBySettingsAlert
validateRestrictionForSetting:allowInteraction:withCompletion:
_shouldShowAgeConfirmationAlert
_requiredAgeForPlayback
_setLastAgeConfirmationPrompted:
_setLastConfirmedAge:
_showAgeConfirmationWithPresentingViewController:completion:
setInteger:forKey:
_isTrailer
_lastConfirmedAge
_lastAgeConfirmationPrompted
_shouldWarnStartingRentalPlayback
_showRentalPlaybackStartingWarningWithCompletion:
_isRental
_mediaTitle
_isTVShow
_preflightDownloadWithCompletion:
_videosPlayable
_restrictionsCheckType
_presentingController
_homeShareMediaLibraries
_handleAvailableMediaLibrariesDidChange:
mutableHomeShareMediaLibraries
_sharedMPMediaLibraries
_updateMediaLibrariesWithSharedMPMediaLibraries:
sharedMediaLibraries
_notifyDelegateHomeShareMediaLibrariesDidUpdate:withChangeSet:
setManager:
setMutableHomeShareMediaLibraries:
_mutableHomeShareMediaLibraries
_isValidAppInstalled
_openPunchoutURL:
_startAppInstallFlow:
isPlaybackURL
applicationIsInstalled:
minRequiredAppVersion
bundleProxyForIdentifier:
shortVersionString
compare:options:
_openAirplayPicker:
setPunchoutURL:
setIsEntitledToPlay:
setContentMetadata:
setExternalID:
setReferenceID:
setIsPlaybackURL:
_isEntitledToPlay
_isPlaybackURL
_punchoutURL
_contentMetadata
_externalID
_referenceID
completionBlock
setCancelled:
_cancelled
vui_appleTimingAppHeaderValue
_processFirstRequest
_processRequest:
_handleCustomRequest:
_handleRequest:
_handleResponse:responseDict:forRequest:error:cancelled:
purchaseWithBuyParameters:
requestProperties
cancelAcquisition:
_pendingQueue
_concurrentCount
_activeRequest
_baseToVPAFMapping
infoDictionary
localAppURL
setLocalAppURL:
_localAppURL
addBagKey:valueType:
registerBagKeySet:forProfile:profileVersion:
bagKeySet
bagForProfile:profileVersion:
ratingDescription
initWithMediaItemEntityTypesChangeSet:localMediaItemsAvailableDidChange:
_localMediaItemsAvailableDidChange
_mediaItemEntityTypesChangeSet
databaseShow
setDatabaseShow:
_databaseShow
_resetTimer
sportsEventsById
_updateTimer
_prepareJSContextDictionaryArgument
_updateScores:
setUpdateInProgress:
_getScoreboardUpdates
setSportsEventsById:
scoreboardUpdateTimer
setScoreboardUpdateTimer:
scoreboardUpdateInterval
setScoreboardUpdateInterval:
updateInProgress
_updateInProgress
_sportsEventsById
_scoreboardUpdateTimer
_scoreboardUpdateInterval
_documentDataSourceWithDict:viewElement:
_actionForKey:eventDict:viewElement:
setPreActionDocumentDataSource:
setPreAction:
setDocumentDataSource:
setPostActionDocumentDataSource:
setPostAction:
_preActionDocumentDataSource
_preAction
_documentDataSource
_postActionDocumentDataSource
_postAction
groupingSortIndexes
mediaEntitySubtype
_grouping
_groupingSortIndexes
_mediaEntitySubtype
infoLabel
airingTextWithString:layout:existingView:
logo
airingLogoWithImageDictionary:layout:existingView:
setLogo:
setInfoLabel:
parser
displayDelegateWithDefaultAttributes:
attributedStringForHTMLString:error:
initWithProxy:andPlaceHolderImage:
imageViewWithDescription:layout:existingView:
_infoLabel
_logo
_buttonWithElement:layout:existingButton:
buttonTypeOfButtonElement:
interfaceStyleForTemplateElement:
setCropCode:
featuredView
_viewFromElement:layout:existingView:
maskedContentView
buttons
maskingMode
setFeaturedView:
_featuredView
pathExtension
isHLS
isAudioOnly
ams_iTunesAccountWithDSID:
sharedPurchase
_replacementErrorForSharedPurchasePlaybackError:
_replacementErrorForPlaybackError:
setParentReportingToken:
_keepKeyLoaderAlive:
setIsAudioOnly:
isForDownload
setIsForDownload:
parentReportingToken
setIsHLS:
_isAudioOnly
_isForDownload
_sharedPurchase
_isHLS
_parentReportingToken
_configureSubviewsWithDictionary:
legendViews
dividerView
setDividerView:
setLegendViews:
_isPortrait
_dividerView
_legendViews
_showAnimated:completion:
_hideAnimated:completion:
_showWithAnimationWithCompletion:
_hideWithAnimationWithCompletion:
cardShowcaseFactor
_logoTextView
_subTextView
_episodeInfoView
_coverArtImageView
_comingSoonView
_castInfoView
_disclaimerTextView
_cardShowcaseFactor
vui_progressBarFillColor
vui_progressBarGradientColors
materialView
setMaterialView:
_shouldProgressBarUseRoundCorner
_useMaterial
_fillColor
_tintColor
_gradientStartColor
_gradientEndColor
_materialView
disclaimerLabel
setButtons:
setDisclaimerLabel:
CGRectValue
_disclaimerLabel
_buttons
initWithKeyPrefix:conflictResolver:
keyPrefix
conflictResolver
_keyPrefix
_conflictResolver
_addConflictResolver:forKeyPrefix:
_initializeKeyValueStoreCache
_syncEngineInitialize
_syncEngineSetNeedsSync
initWithType:interval:delay:async:
dateWithTimeIntervalSinceNow:
_deleteCleanRowsNotUpdatedSince:
setPerformBlock:
registerBackgroundTask:
processInfo
processName
removeItemAtPath:error:
initWithDomain:cacheDirectory:conflictResolvers:
_syncEngineDidAccessKeyValueStore
_willAccessKeyValueStore
_dbDataValuesForKeys:
_objectsForKeys:
_dbAllKeys
_dbSetDataValues:
_dbSetNumber:forKey:
_dbDirtyValues
_conflictResolverForKey:
_dbStringForKey:
_dirtySyncItems
_dbNumberForKey:
_dbSetString:forKey:
_dbClearAllDirtyFlags
_dbTransaction:
_syncWithServer:version:completionHandler:
_synchronize
_dropAllTables
registerStateTransitionFromState:onEvent:toState:
_newSyncEngineStateMachine
_databasePath
_deleteKeyValueStoreCache
initWithUTF8String:
_dbDataFromBlobForStatement:column:
_dbStringFromTextForStatement:column:
_dbNumberFormatter
numberFromString:
bytes
defaultSyncingKeyValueStore
_dbNumberFromIntegerForStatement:column:
_databaseDirectory
_conflictResolversLock
_conflictResolvers
_conflictDetectionType
_pendingCompletionBlocks
_periodicCleanupTask
_dbQueue
_dbStmtValueForKey
_dbStmtSelectDirty
_dbStmtSelectAllKeys
_dbStmtInsertReplaceStmt
_dbStringForKeyStmt
_dbSetStringForKeyStmt
_syncEngineStateMachine
stringByDeletingLastPathComponent
stringWithUTF8String:
menuView
gridView
_menuView
_gridView
setUnfocusedShadowImage:
setFocusedShadowImage:
setUnfocusedShadowCardSize:
setUnfocusedShadowAlpha:
setFocusedShadowCardSize:
setFocusedShadowAlpha:
setNeedsUpdateConstraints
updateConstraints
lastBaselineAnchor
contextDataDict
setContextDataDict:
_contextDataDict
movieID
_movieID
initWithMovieBundleID:
movieBundleID
_movieBundleID
episodeID
_episodeID
confirmationDialogType
setConfirmationDialogType:
_confirmationDialogType
_handleMediaLibraryDidChangeNotification:
tapped
preferredContentSize
_updateRequiresLinearPlayback
requiresLinearPlayback
setRequiresLinearPlayback:
initWithMediaInfo:
isCurrentMediaTVShow
featureMonitor
setFeatureMonitor:
nowPlayingViewController
setNowPlayingViewController:
advisoryImage
setAdvisoryImage:
_requiresLinearPlayback
_featureMonitor
_nowPlayingViewController
_advisoryImage
_registerApplicationNotifications
_handleDurationChangeForPlayer:
initialMediaItemHasCompletedInitialLoading
complete
pipPlaybackInfo
mutePictureInPicture:
fullscreenPlaybackInfo
skipIntroWithPlaybackInfo:
_applyPictureInPictureInsets:
_schedulePostPlayDismissTimerWithInterval:
_playbackInfoForAVPlayerViewController:
avKitSeekDidComplete
currentScanMode
setAVKitExternalImageScanningUpdateBlock:
_setPictureInPictureMuted:
muted
_currentNavigationController
_isCurrentNavigationControllerExtrasNavigationController
_configureShowsNowPlayingHUD:
_playbackInfoForPlayer:
_configurePostPlayForPlaybackInfo:forMediaItem:
dualStreamPlaybackOverride
valueWithUIEdgeInsets:
settingsWithDuration:timingFunction:
applyPictureInPictureInsetsValue:fromSource:withAnimationSettings:usingAnimationFence:
_updateNowPlayingFeaturesForPlaybackInfo:fromMediaItem:
_playbackInfoForMonitor:
_addTVRatingFeatureToMonitor:fromMediaItem:
target
_downloadAdvisoryImageForMonitor:forMediaItem:
_addRollsInfoFeaturesToMonitor:fromMediaItem:
_addSkipInfoFeaturesToMonitor:fromMediaItem:
_updatePlaybackInfoForUI:forFeature:animated:
_bootstrapPostPlayForPlaybackInfo:
_showPostPlayUI:playbackInfo:animated:
_postPlayAllowedForPlaybackInfo:
isBootstrappingPostPlay
setWaitingForBootstrappingToFinishToShowPostPlay:
postPlayUIDismissTimer
setPostPlayUIDismissTimer:
setBootstrappingPostPlay:
waitingForBootstrappingToFinishToShowPostPlay
_updatePlaybackInfo:forFeature:animated:
suppressErrorAlerts
setErrorAlertController:
errorAlertController
_playbackStateDidChange:
_currentMediaItemDidChange:
_playbackErrorDidOccur:
_isPlayingWithinExtras
_resetPictureInPictureInset
setFullscreenPlaybackInfo:
setPipPlaybackInfo:
stringByAppendingFormat:
_notifyExtrasMainTemplateToStop:
setErrorBehavior:
setMediaRemoteUpdatingEnabled:
_configureDefaultFeatures
_supportsDualStreamPlayback
pausedDueToViewDisappeared
setPausedDueToViewDisappeared:
setIgnorePictureInPictureStop:
_showErrorIfAppropriate:
ignorePictureInPictureStop
playerViewControllerShouldDismiss:
playerViewControllerWillBeginDismissalTransition:
playerViewControllerDidEndDismissalTransition:
playerViewController:willPresentInterstitialTimeRange:
playerViewController:didPresentInterstitialTimeRange:
playerViewController:willResumePlaybackAfterUserNavigatedFromTime:toTime:
playerViewController:timeToSeekAfterUserNavigatedFromTime:toTime:
playerViewController:didSelectMediaSelectionOption:inMediaSelectionGroup:
playerViewController:didSelectExternalSubtitleOptionLanguage:
skipToNextItemForPlayerViewController:
skipToPreviousItemForPlayerViewController:
playerViewController:skipToNextChannel:
playerViewController:skipToPreviousChannel:
nextChannelInterstitialViewControllerForPlayerViewController:
previousChannelInterstitialViewControllerForPlayerViewController:
playerViewController:shouldPresentContentProposal:
playerViewController:didAcceptContentProposal:
playerViewController:didRejectContentProposal:
playerViewController:willTransitionToVisibilityOfTransportBar:withAnimationCoordinator:
playerViewController:scanFromElapsedTime:rate:imageBlock:
stopScanningPlayerViewController:
playerViewController:shouldHandleScanningForPlayerItem:
pictureInPictureControllerDidActivatePictureInPicture:
pictureInPictureControllerDidDestroyPictureInPicture:
pictureInPictureController:didUpdatePresentationState:
pictureInPictureController:didRequestPlayerMute:
dismissMediaInfoAnimated:
stopAllPlayback
playerViewController:willResumePlaybackAfterUserNavigatedFromDate:toDate:
playerViewControllerWillStartPictureInPicture:
playerViewControllerDidStartPictureInPicture:
playerViewController:failedToStartPictureInPictureWithError:
playerViewControllerWillStopPictureInPicture:
playerViewControllerDidStopPictureInPicture:
playerViewControllerShouldAutomaticallyDismissAtPictureInPictureStart:
playerViewController:restoreUserInterfaceForPictureInPictureStopWithCompletionHandler:
setSuppressErrorAlerts:
_suppressErrorAlerts
_pausedDueToViewDisappeared
_bootstrappingPostPlay
_waitingForBootstrappingToFinishToShowPostPlay
_ignorePictureInPictureStop
_fullscreenPlaybackInfo
_pipPlaybackInfo
_errorAlertController
_postPlayUIDismissTimer
_setContentInsetAdjustmentBehavior:
_updateCollectionViewLayout:
_ensureScrollViewSnaps
updateContentOffsetWithTransitionCoordinator:
_findSnappingItemFromContentOffset:withVelocity:
_snapTargetContentOffset:toItemIndexPath:atItemOffset:
setContentOffset:
indexPathForItemAtPoint:
minimumInteritemSpacing
layoutAttributesForItemAtIndexPath:
updateShelfLayout:
setInvalidateLayout:
invalidateLayoutWithContext:
focusedIndexPath
setFocusedIndexPath:
_shouldUpdateBeforeLayout
_enqueueAsyncStrongSelfProcessingQueueBlock:
_onProcessingQueue_setState:
observerDispatchQueue
_notifyObservers:stateDidChange:
_enqueueObserverQueueBlock:
_observerDispatchQueue
didSelect
_textView
maxTextWidth
subtitleBaseLine
_generateSiderowImagePointsForSize:
_generateSingleRowImagePoints
_generatePlainWeaveImagePointsForSize:
bannerMinHeight
_generatePointsForPlainWeaveSide:containerRect:imageSize:direction:
_backgroundView
_backgroundImageLogos
systemBackgroundColor
secondarySystemBackgroundColor
tertiarySystemBackgroundColor
tertiaryLabelColor
_secondaryFillColor
_tertiaryFillColor
_vui_darkModeKeyBlueColor
_vui_lightModeKeyBlueColor
opaqueSeparatorColor
vui_secondaryDynamicBackgroundColor
getRed:green:blue:alpha:
vui_blendWithColor:percentage:
vui_tertiaryTextColor
vui_primaryFillColor
vui_secondaryFillColor
vui_tertiaryFillColor
vui_keyBlueHighlightedColor
vui_opaqueSeparatorColor
vui_backgroundGradientColors
setShouldMarkFirstCategorySelected:
hasChanges
shouldMarkFirstCategorySelected
menuCollectionView
setMenuCollectionView:
sectionHeaderSizingCell
setSectionHeaderSizingCell:
_shouldMarkFirstCategorySelected
_menuCollectionView
_sectionHeaderSizingCell
currentFetchResponse
_changeSetFromMediaItemEntityTypes:toMediaItemEntityTypes:
_currentFetchResponse
initWithMediaEntitySubtype:category:collectionType:appContext:
setCategory:
setCollectionType:
_category
_collectionType
_authorizationStatusDidChange:
_locationDidChange:
requestAuthorization
shouldUpdateUserLocation
productViewControllerDidFinish:
productViewController:didFinishWithResult:
productViewController:presentProductWithRequest:animated:
loadStoreURL:playOnLaunch:
loadStoreURL:playOnLaunch:__JS_EXPORT_AS__loadStoreURL:
allowsKeyedCoding
decodeObjectOfClass:forKey:
decodeDoubleForKey:
decodeIntegerForKey:
decodeBoolForKey:
encodeObject:forKey:
encodeDouble:forKey:
encodeInteger:forKey:
encodeBool:forKey:
hasFakeTimestamp
_copyWithResultClass:
supportsSecureCoding
mutableCopyWithZone:
encodeWithCoder:
_setBookmarkTimeWithoutUpdatingTimestamp:
_setBookmarkTimestamp:
_setPlayCount:
_setHasBeenPlayed:
_setHasBeenRented:
_setIsMarkedAsUnwatched:
hasRemoteData
setHasFakeTimestamp:
_hasBeenRented
_isMarkedAsUnwatched
_hasFakeTimestamp
_bookmarkTimestamp
vui_sizeThatFits:layout:withSizeCalculation:
minWidth
vui_applyChangeSet:inSection:rowAnimation:updateDataSourceBlock:completionHandler:
_vui_applyDeleteChange:inSection:rowAnimation:
_vui_applyInsertChange:inSection:rowAnimation:
_vui_applyMoveChanges:inSection:rowAnimation:
_vui_applyUpdateChanges:inSection:rowAnimation:
deleteSections:withRowAnimation:
deleteRowsAtIndexPaths:withRowAnimation:
insertRowsAtIndexPaths:withRowAnimation:
moveRowAtIndexPath:toIndexPath:
reloadRowsAtIndexPaths:withRowAnimation:
channelLogoView
setChannelLogoView:
setAppleTVImageView:
setChannelsLabel:
appleTVImageView
channelsLabel
_channelLogoView
_appleTVImageView
_channelsLabel
calculatedIdentifier
setCalculatedIdentifier:
setArtworkCatalog:
_calculatedIdentifier
_artworkCatalog
initWithAddedCanonicalIDs:removedCanonicalIDs:
addedCanonicalIDs
setAddedCanonicalIDs:
_addedCanonicalIDs
applicationDidFinishLaunching:
application:willFinishLaunchingWithOptions:
application:didFinishLaunchingWithOptions:
applicationDidBecomeActive:
applicationWillResignActive:
application:handleOpenURL:
application:openURL:sourceApplication:annotation:
application:openURL:options:
applicationDidReceiveMemoryWarning:
applicationWillTerminate:
applicationSignificantTimeChange:
application:willChangeStatusBarOrientation:duration:
application:didChangeStatusBarOrientation:
application:willChangeStatusBarFrame:
application:didChangeStatusBarFrame:
application:didRegisterUserNotificationSettings:
application:didRegisterForRemoteNotificationsWithDeviceToken:
application:didFailToRegisterForRemoteNotificationsWithError:
application:didReceiveRemoteNotification:
application:didReceiveLocalNotification:
application:handleActionWithIdentifier:forLocalNotification:completionHandler:
application:handleActionWithIdentifier:forRemoteNotification:withResponseInfo:completionHandler:
application:handleActionWithIdentifier:forRemoteNotification:completionHandler:
application:handleActionWithIdentifier:forLocalNotification:withResponseInfo:completionHandler:
application:didReceiveRemoteNotification:fetchCompletionHandler:
application:performFetchWithCompletionHandler:
application:performActionForShortcutItem:completionHandler:
application:handleEventsForBackgroundURLSession:completionHandler:
application:handleWatchKitExtensionRequest:reply:
applicationShouldRequestHealthAuthorization:
application:handleIntent:completionHandler:
applicationDidEnterBackground:
applicationWillEnterForeground:
applicationProtectedDataWillBecomeUnavailable:
applicationProtectedDataDidBecomeAvailable:
application:supportedInterfaceOrientationsForWindow:
application:shouldAllowExtensionPointIdentifier:
application:viewControllerWithRestorationIdentifierPath:coder:
application:shouldSaveApplicationState:
application:shouldRestoreApplicationState:
application:willEncodeRestorableStateWithCoder:
application:didDecodeRestorableStateWithCoder:
application:willContinueUserActivityWithType:
application:continueUserActivity:restorationHandler:
application:didFailToContinueUserActivityWithType:error:
application:didUpdateUserActivity:
application:userDidAcceptCloudKitShareWithMetadata:
application:configurationForConnectingSceneSession:options:
application:didDiscardSceneSessions:
setWindow:
setDescriptor:
_descriptor
storeIdentifier
persistentidentifier
isScreenshot
isMediaPlayerImage:
setSourceURL:
_populateValuesFromQueryItems
sourceURL
setPersistentidentifier:
setScreenshot:
setStoreIdentifier:
_screenshot
_persistentidentifier
_sourceURL
_storeIdentifier
_progressMaskImage
_appIconSize
_appIconRadius
appIcon
installProgress
_appIconImageView
_backgroundKnockoutView
_appIcon
_installProgress
_onProcessingQueue_updateStateAndNotifyDelegate:
fullyDownloadedAssetBytes
setFullyDownloadedAssetBytes:
assetControllers
setAssetControllers:
_onProcessingQueue_setState:andNotifyDelegate:
_downloadingAssetControllersWithAssetControllers:
_allAssetsDownloaded
_stateFromDownloadingAssetControllers:fullyDownloadedAssetBytes:
_assetControllers
_fullyDownloadedAssetBytes
recordPerfEvent:
recordLogEvent:
vibrantEffectView
setVibrantEffectView:
_vibrantEffectView
_prepare
setMediaCategory:
_numberForObject:
_addPredicatesToMediaQuery:withFilters:
wlk_arrayForKey:
_setSortOrderingForMediaQuery:withSortProperties:sortDirectionMapping:
_addPrefetchPropertiesToMediaQuery:prefetchProperties:
_timeIntervalNumberForObject:
wlk_boolForKey:defaultValue:
_mpPropertiesForProperties:
_mpOrderingDirectionMappingForSortDirectionMapping:
_mediaCategory
drawInContext:
uiStyle
setUiStyle:
_uiStyle
initWithBannerType:
highlightedBackgroundColor
_isPreModeBanner
_highlightedBackgroundColor
_bannerMinHeight
_maxTextWidth
_subtitleBaseLine
substringToIndex:
setContext:
_metadataLock
_reportingEnabled
_UUID
_context
childView
_childView
labels
setLabels:
enumerateAttribute:inRange:options:usingBlock:
_labels
attributedTextFromString:fontColor:fontSize:
initWithAttributedString:tintColor:cornerRadius:
boldSystemFontOfSize:
textBlendMode
setTextBlendMode:
badgeInsets
setBadgeInsets:
badgeStyle
_badgeStyle
_badgeInsets
_presentationTypeFromString:
setModalOverModalAllowed:
setNavigationBarAdjustedToSizeClass:
_preferredSizeFromConfig:
isNavigationBarHidden
isNavigationBarAdjustedToSizeClass
_animated
_navigationBarHidden
_navigationBarAdjustedToSizeClass
_modalOverModalAllowed
fetchRequestWithEntityName:
fetchRequest
@16@0:8
@24@0:8@16
@32@0:8@16@24
v24@0:8@16
v16@0:8
@"NSDictionary"
B24@0:8@16
#16@0:8
@24@0:8:16
@32@0:8:16@24
@40@0:8:16@24@32
B16@0:8
B24@0:8#16
B24@0:8:16
Vv16@0:8
Q16@0:8
^{_NSZone=}16@0:8
B24@0:8@"Protocol"16
@"NSString"16@0:8
v32@0:8@16@24
v32@0:8@"NSOrderedSet"16@"NSString"24
v32@0:8@"IKAppContext"16@"NSString"24
@"IKUpdateServiceRequest"16@0:8
@40@0:8@16@24@32
@"IKUpdateServiceRequest"
@"NSArray"
@"NSMutableOrderedSet"
@"IKViewElement"
@24@0:8^{_NSZone=}16
@"NSString"
@"NSError"
@"NSOperationQueue"
@"VUIMPMediaLibrary"
v32@0:8@?16@?24
v24@0:8@?16
v24@0:8d16
v20@0:8B16
@?16@0:8
@"VUIAppInstallConfirmationViewController"
@"<WLKInstallable>"
v36@0:8@16@24B32
v32@0:8@16@?24
v40@0:8@16@24@?32
v44@0:8@16@24B32@36
v40@0:8@16@24@32
@"NSURL"
v40@0:8@16B24B28@?32
v48@0:8@16@24@32@40
@32@0:8q16@24
@28@0:8@16B24
q16@0:8
v24@0:8q16
@"NSNumber"
@"NSObject<VUIStoreFPSKeyLoaderDelegate>"
@"TVPPlaybackReportingEventCollection"
@"NSData"
@"NSMutableArray"
@"TVPContentKeyRequest"
@"NSDate"
@"TVPContentKeySession"
@24@0:8q16
B28@0:8@16B24
@"<VUIMediaEntitiesFetchControllerDelegate>"
@"VUIMediaEntityFetchResponse"
@32@0:8@16q24
v32@0:8@"TVApplicationController"16@"JSContext"24
v32@0:8@"TVApplicationController"16@"NSDictionary"24
v32@0:8@"TVApplicationController"16@"NSError"24
@"TVPlayer"24@0:8@"TVApplicationController"16
@"<UIViewControllerAnimatedTransitioning>"40@0:8@"UIViewController"16@"UIViewController"24@"UIViewController"32
@"<UIViewControllerAnimatedTransitioning>"24@0:8@"UIViewController"16
@"<UIViewControllerInteractiveTransitioning>"24@0:8@"<UIViewControllerAnimatedTransitioning>"16
@"UIPresentationController"40@0:8@"UIViewController"16@"UIViewController"24@"UIViewController"32
v32@0:8@"MCProfileConnection"16@"NSDictionary"24
v72@0:8@16@24@32@40@48B56B60@?64
v52@0:8@16@24@32B40@?44
@"VUIExtrasApplicationController"
@"_TVNavigationZoomAnimator"
@"_TVProductTemplateZoomAnimator"
v28@0:8B16@?20
v28@0:8B16@?<v@?@"NSString">20
v40@0:8@"NSObject<VUIHomeShareMediaLibraryManager>"16@"NSArray"24@"VUICollectionChangeSet"32
@"VUIMediaLibrary"
@"NSObject<OS_dispatch_queue>"
@"VUIDeviceMediaLibrary"
@"VUISidebandMediaLibrary"
@"VUIAggregateMediaLibrary"
@"NSObject<VUIHomeShareMediaLibraryManager>"
v40@0:8@16@24Q32
@"NSMutableDictionary"
B48@0:8{CGRect={CGPoint=dd}{CGSize=dd}}16
@48@0:8{CGRect={CGPoint=dd}{CGSize=dd}}16
v32@0:8Q16@24
Q24@0:8@16
@"<VUIMediaLibraryApplicationControllerDelegate>"
@32@0:8@16@?24
v24@0:8Q16
v52@0:8@16@24d32@40B48
v24@0:8@"VUIRentalExpirationLabel"16
{CGSize=dd}32@0:8{CGSize=dd}16
{CGSize=dd}36@0:8{CGSize=dd}16B32
@"_TVStackingPosterView"
@"UIImage"
v40@0:8@"VUIMediaEntitiesFetchController"16@"NSArray"24@"VUIMediaEntitiesFetchControllerResult"32
v40@0:8@"VUIMediaEntitiesFetchController"16@"NSArray"24@"NSError"32
B24@0:8@"VUIMediaEntitiesFetchController"16
@32@0:8@16^@24
@"<VUILibraryCategoryMenuViewModelDelegate>"
@"VUIMenuDataSource"
@"VUIMediaEntitiesFetchController"
@"NSSet"
@"VUICloudClient"
v32@0:8@"UIResponder"16@?<v@?B>24
@"NSDateComponentsFormatter"
@"NSNumberFormatter"
v36@0:8@16B24@?28
@"UIView"
@"UICollectionView"
@32@0:8@16Q24
q24@0:8@16
d16@0:8
@"VUITextLayout"
@"TVImageLayout"
@"NSString"24@0:8@"NSString"16
@"NSString"32@0:8@"NSString"16@"NSNumber"24
v24@0:8@"NSDictionary"16
B56@0:8{CGRect={CGPoint=dd}{CGSize=dd}}16@48
q32@0:8@16q24
@40@0:8@16q24q32
d24@0:8@16
i32@0:8q16q24
q24@0:8@"VUIScorecardView"16
q32@0:8@"VUIScorecardView"16q24
@"NSString"40@0:8@"VUIScorecardView"16q24q32
d24@0:8@"VUIScorecardView"16
@"UIImage"24@0:8@"VUIScorecardView"16
v24@0:8@"UIImage"16
v32@0:8{CGSize=dd}16
@"UIImage"16@0:8
v24@0:8@"VUISportsScoreboardViewModel"16
@"NSDictionary"16@0:8
v36@0:8{CGSize=dd}16B32
v32@0:8@16d24
v48@0:8@16@24@32^v40
{CGSize=dd}16@0:8
@"VUISportsOverlayLayout"
@"VUISportsScoreboardViewModel"
@"VUIScorecardView"
@"VUITextBadgeView"
@"_TVImageView"
@"IKImageElement"
@"NSOperation"
@"UICollectionReusableView"
{CGSize="width"d"height"d}
@"VUIOfferView"
@"VUILabel"
@"VUIImageView"
@52@0:8@16@24@?32B40@44
B32@0:8@16@24
@40@0:8@16@24q32
q32@0:8@"UICollectionView"16q24
@"UICollectionViewCell"32@0:8@"UICollectionView"16@"NSIndexPath"24
q24@0:8@"UICollectionView"16
@"UICollectionReusableView"40@0:8@"UICollectionView"16@"NSString"24@"NSIndexPath"32
B32@0:8@"UICollectionView"16@"NSIndexPath"24
v40@0:8@"UICollectionView"16@"NSIndexPath"24@"NSIndexPath"32
@"NSArray"24@0:8@"UICollectionView"16
@"NSIndexPath"40@0:8@"UICollectionView"16@"NSString"24q32
v48@0:8@16{CGPoint=dd}24N^{CGPoint=dd}40
v28@0:8@16B24
v40@0:8@16@24d32
v24@0:8@"UIScrollView"16
v48@0:8@"UIScrollView"16{CGPoint=dd}24N^{CGPoint=dd}40
v28@0:8@"UIScrollView"16B24
@"UIView"24@0:8@"UIScrollView"16
v32@0:8@"UIScrollView"16@"UIView"24
v40@0:8@"UIScrollView"16@"UIView"24d32
B24@0:8@"UIScrollView"16
B48@0:8@16:24@32@40
v48@0:8@16:24@32@40
{CGPoint=dd}40@0:8@16{CGPoint=dd}24
B40@0:8@16@24@32
@48@0:8@16@24{CGPoint=dd}32
v32@0:8@"UICollectionView"16@"NSIndexPath"24
v40@0:8@"UICollectionView"16@"UICollectionViewCell"24@"NSIndexPath"32
v48@0:8@"UICollectionView"16@"UICollectionReusableView"24@"NSString"32@"NSIndexPath"40
B48@0:8@"UICollectionView"16:24@"NSIndexPath"32@40
v48@0:8@"UICollectionView"16:24@"NSIndexPath"32@40
@"UICollectionViewTransitionLayout"40@0:8@"UICollectionView"16@"UICollectionViewLayout"24@"UICollectionViewLayout"32
B32@0:8@"UICollectionView"16@"UICollectionViewFocusUpdateContext"24
v40@0:8@"UICollectionView"16@"UICollectionViewFocusUpdateContext"24@"UIFocusAnimationCoordinator"32
@"NSIndexPath"24@0:8@"UICollectionView"16
@"NSIndexPath"40@0:8@"UICollectionView"16@"NSIndexPath"24@"NSIndexPath"32
{CGPoint=dd}40@0:8@"UICollectionView"16{CGPoint=dd}24
B40@0:8@"UICollectionView"16@"NSIndexPath"24@"<UISpringLoadedInteractionContext>"32
v24@0:8@"UICollectionView"16
@"UIContextMenuConfiguration"48@0:8@"UICollectionView"16@"NSIndexPath"24{CGPoint=dd}32
@"UITargetedPreview"32@0:8@"UICollectionView"16@"UIContextMenuConfiguration"24
v32@0:8@"UICollectionView"16@"<UIContextMenuInteractionCommitAnimating>"24
@"UILabel"
@"UICollectionViewFlowLayout"
@"VUIButtonLayout"
@"VUIMediaTagsViewLayout"
@"VUINowPlayingHudMetaDataViewLayout"
@"VUINowPlayingHudButtonsLayout"
v32@0:8@"<TVObserving>"16@"NSString"24
v24@0:8@"<TVObserving>"16
@"TVMediaInfo"16@0:8
v32@0:8@"_TVShelfViewController"16@"NSIndexPath"24
v32@0:8@"_TVShelfViewController"16@"UIView"24
@"NSArray"24@0:8@"IKAppDocument"16
@24@0:8Q16
@"_TVShelfViewController"
@"TVMediaInfo"
@"TVObservableEventController"
@32@0:8d16^q24
@24@0:8d16
@"NSArray"32@0:8d16^q24
@"NSArray"24@0:8d16
@52@0:8{CGRect={CGPoint=dd}{CGSize=dd}}16B48
{?="respondsToRowMetricsForExpectedWidth"B"respondsToShouldBindRowsTogether"B"respondsToShowcaseRowMetricsForExpectedWidth"B}
@"UIVisualEffectView"
@56@0:8@16@24@32@40@48
@"UIAlertController"
@"TVImageProxy"
{CGRect={CGPoint=dd}{CGSize=dd}}16@0:8
v48@0:8{CGRect={CGPoint=dd}{CGSize=dd}}16
{CGRect="origin"{CGPoint="x"d"y"d}"size"{CGSize="width"d"height"d}}
@"CAGradientLayer"
@"VUIOverlayLayout"
@"_TVProgressView"
@"VUIMediaItemEntityTypesFetchResponse"
@"MPMediaLibrary"
@"NSObject<NSCopying>"
@"VUIAppInstallLockup"
@"VUIBuyButtonLockup"
@"NSLayoutConstraint"
@"UIButton"
v40@0:8@16N^B24q32
v24@0:8@"UIViewController<TVMediaController>"16
v40@0:8@"UIViewController<TVMediaController>"16N^B24q32
v32@0:8@16B24B28
v24@0:8@"NSString"16
v32@0:8@"TVMediaInfo"16B24B28
@"UIViewController<TVMediaController>"16@0:8
v24@0:8B16B20
v32@0:8B16@20B28
{UIEdgeInsets=dddd}20@0:8B16
{?="respondsToViewWillAppear"B"respondsToViewDidAppear"B"respondsToViewWillDisappear"B"respondsToViewDidDisappear"B"respondsToEnableUIMode"B"respondsToSkipIntro"B"respondsToMenuPress"B"respondsToSafeAreaChange"B"respondsToUserDidInteract"B"respondsToMediaInfoDidChange"B}
@"<VUINowPlayingViewControllerDelegate>"
@"TVMediaPlaybackManager"
@"VUIMediaController"
@"IKAppContext"
@"UIViewController<TVMediaControllerHosting>"
@"VUINowPlayingHudView"
@"VUINowPlayingHudViewLayout"
@"VUINowPlayingViewModel"
@"VUIButton"
@"VUIPostPlayDocumentServiceViewController"
@"VUINowPlayingSkipButtonLayout"
@"VUIVideoAdvisoryView"
@"UITapGestureRecognizer"
@"VUIMPMediaEntityImageLoadParams"24@0:8Q16
@"VUIPlistMediaEntityImageLoadParams"24@0:8Q16
@"UIViewController"
v24@0:8@"NSIndexPath"16
v40@0:8@"VUILibraryCategoryMenuViewModel"16@"VUIMenuDataSource"24@"NSError"32
v32@0:8@"VUILibraryCategoryMenuViewModel"16@"VUIMenuDataSource"24
@"VUIMenuCollectionViewController"
@"VUITVLibraryView"
@"VUILibraryCategoryMenuViewModel"
@"NSIndexPath"
@"UIActivityIndicatorView"
v32@0:8{_NSRange=QQ}16
{_NSRange=QQ}16@0:8
@"NSPredicate"
{_NSRange="location"Q"length"Q}
@"<VUITVButtonHandler>"
@"NSMapTable"
Q24@0:8@"_TVCarouselView"16
@"UICollectionViewCell"32@0:8@"_TVCarouselView"16Q24
@"UILayoutGuide"
@"UIStackView"
@"UIScrollView"
@"_TVCarouselView"
@"VUIPlistMediaDatabaseSeason"
@"_TVContentRating"
@"VUIMediaItemCredits"
@"VUIPlistMediaLibrary"
@"UIImageView"
@"VUISeparatorView"
{UIEdgeInsets=dddd}16@0:8
{UIEdgeInsets="top"d"left"d"bottom"d"right"d}
@"<VUIMediaItemEntityTypesFetchControllerDelegate>"
{TVCornerRadii=dddd}16@0:8
v48@0:8{TVCornerRadii=dddd}16
@"VUIFeedbackTableLayout"
@"TVRatingBadgeLayout"
@"UIColor"
{TVCornerRadii="topLeft"d"topRight"d"bottomLeft"d"bottomRight"d}
@44@0:8@16{CGSize=dd}24B40
B32@0:8@16@?24
@"NSDictionary"24@0:8@"NSArray"16
@"VUIJSMediaEntityType"16@0:8
@48@0:8@16@24@32@40
@"VUIJSMediaEntityType"
@"MPMediaEntity"
@56@0:8{CGRect={CGPoint=dd}{CGSize=dd}}16@48
d32@0:8{CGSize=dd}16
v32@0:8B16B20@24
@"VUIOfferLayout"
@"VUIMediaTagsView"
@"NSObject<OS_os_log>"
v24@0:8@"TVMediaInfo"16
@"<TVMediaControllerDelegate>"16@0:8
v24@0:8@"<TVMediaControllerDelegate>"16
v28@0:8B16d20
v32@0:8B16B20@?24
{CGRect={CGPoint=dd}{CGSize=dd}}24@0:8B16B20
{CGRect={CGPoint=dd}{CGSize=dd}}20@0:8B16
v56@0:8@16@24@32@40@48
@"NSObject<TVPAVFPlayback>"
@"AVPlayerViewController"
@"<TVMediaControllerDelegate>"
@"NSTimer"
@"TVPStateMachine"
@"TVPPlaylist"
@"TVPVideoView"
@"VUIProgressBarLayout"
@"VUITextBadgeLayout"
v48@0:8@16@24d32@?40
d40@0:8@16@24q32
v40@0:8{CGSize=dd}16@32
@"VUILibraryStackView"
@20@0:8B16
q24@0:8Q16
Q24@0:8q16
I16@0:8
v20@0:8I16
v48@0:8{UIEdgeInsets=dddd}16
i16@0:8
v20@0:8i16
@"NSShadow"
@"SSAuthenticateRequest"
@"VUIAction"
v68@0:8@?16@24B32@36@44@52@60
v60@0:8@16@24i32@36@44@?52
@52@0:8B16@20@28@36@44
@"NSSet"16@0:8
@"NSMutableSet"
v32@0:8@16q24
B48@0:8@16{_NSRange=QQ}24@40
B24@0:8@"UITextField"16
v24@0:8@"UITextField"16
v32@0:8@"UITextField"16q24
B48@0:8@"UITextField"16{_NSRange=QQ}24@"NSString"40
@"UISwitch"
@"UITextField"
@"VUIDebugViewDefaults"
v24@0:8@"JSValue"16
@"VSAccountStore"
@"NSOperation<VUIImageLoadingOperation>"
@52@0:8@16{CGSize=dd}24B40@?44
@60@0:8@16{CGSize=dd}24B40q44@?52
@68@0:8@16{CGSize=dd}24B40q44@52@?60
@"NSString"24@0:8@16
@"NSURL"24@0:8@16
@52@0:8@16{CGSize=dd}24B40@?<v@?@"TVImage"@"NSString"@"NSDate"Q@"NSError">44
@60@0:8@16{CGSize=dd}24B40q44@?<v@?@"TVImage"@"NSString"@"NSDate"Q@"NSError">52
@68@0:8@16{CGSize=dd}24B40q44@"<IKNetworkRequestLoader>"52@?<v@?@"TVImage"@"NSString"@"NSDate"Q@"NSError">60
d32@0:8d16@24
d40@0:8@16d24@32
@44@0:8q16q24d32I40
@60@0:8q16@24q32d40I48q52
@"_UIFloatingContentView"
{CGSize=dd}40@0:8@16@24@32
{UIEdgeInsets=dddd}40@0:8@16@24q32
{CGSize=dd}40@0:8@16@24q32
{CGSize=dd}40@0:8@"UICollectionView"16@"UICollectionViewLayout"24@"NSIndexPath"32
{UIEdgeInsets=dddd}40@0:8@"UICollectionView"16@"UICollectionViewLayout"24q32
d40@0:8@"UICollectionView"16@"UICollectionViewLayout"24q32
{CGSize=dd}40@0:8@"UICollectionView"16@"UICollectionViewLayout"24q32
v24@0:8@"VUIMediaItem"16
v32@0:8@"NSString"16@"NSString"24
@"VUIVisualEffectLabel"
@"VUIMediaCollection"
@"VUITVLibraryEpisodeListCell"
v40@0:8@16Q24Q32
v32@0:8@16Q24
v40@0:8@"_UIFloatingContentView"16Q24Q32
v32@0:8@"_UIFloatingContentView"16Q24
v28@0:8Q16B24
@"VUIRouterDataSource"
v44@0:8@16@24@32B40
@"<VUITVGridCollectionViewControllerDelegate>"
@"VUITVLockupViewCell"
@"VUIMediaEntity"
@"VUICollectionView"
@"VUIGradientMaskProperties"
d48@0:8q16d24@32@40
@"VUICardViewLayoutFactory"
v32@0:8@"NSArray"16@"NSArray"24
@"NSDictionary"32@0:8@16@"NSArray"24
@"NSDictionary"32@0:8@"NSNumber"16@"NSArray"24
v40@0:8@"NSString"16@"NSDictionary"24@"JSValue"32
@"NSDictionary"32@0:8@"NSString"16@"NSArray"24
@"NSString"24@0:8@"NSNumber"16
@"NSArray"16@0:8
B24@0:8@"NSDictionary"16
v32@0:8@"NSDictionary"16@"JSValue"24
q24@0:8@"NSString"16
@36@0:8@16B24@28
@"MPUQueryDataSource"
@"VUIOrderedItemsMap"
@32@0:8q16q24
@40@0:8@16^q24@32
@48@0:8@16^B24^q32@40
@"<VUIRentalExpirationLabelDelegate>"
@"VUITVEpisodeInformationLayout"
@"_TVAnimatedLabel"
@"VUIEpisodeLockupFloatingContentView"
@"SSLookupItemOffer"
@"UIBarButtonItem"
@"VUIAppInstallConfirmationView"
@"VUIAppSpinnerView"
B48@0:8@16@24@32^@40
v48@0:8q16@24@32@40
B48@0:8@16@24@32@?40
@"VUIAppInstallView"
@"VUITextBadge"
@"VUIMediaEntityType"16@0:8
@"VUIMediaEntityType"
#24@0:8@16
@"UIView"32@0:8@"TVViewElement"16@"UIView"24
@"UIViewController"32@0:8@"TVViewElement"16@"UIViewController"24
@"NSURL"24@0:8@"NSString"16
@"UIImage"24@0:8@"NSString"16
#24@0:8@"TVViewElement"16
@"UIViewController"24@0:8@"TVPlayer"16
@"UIView"32@0:8@"IKViewElement"16@"UIView"24
@"UIViewController"32@0:8@"IKViewElement"16@"UIViewController"24
#24@0:8@"IKViewElement"16
v24@0:8@"IKViewElement"16
@"UINavigationController"24@0:8@"NSString"16
v24@0:8@"TVViewElement"16
@"TVImageProxy"24@0:8@"TVViewElement"16
@"TVImageProxy"32@0:8@"IKViewElement"16@"TVImageLayout"24
B24@0:8@"UIGestureRecognizer"16
B32@0:8@"UIGestureRecognizer"16@"UIGestureRecognizer"24
B32@0:8@"UIGestureRecognizer"16@"UITouch"24
B32@0:8@"UIGestureRecognizer"16@"UIPress"24
@"TVApplicationController"
@"VUIBootURLController"
@"UINavigationController"
@48@0:8Q16@24@32@40
@32@0:8Q16@24
q24@0:8q16
q28@0:8Q16B24
@48@0:8@16Q24@32@40
@"VUIProductMetadataLayout"
v32@0:8@"VUINowPlayingObserver"16@"VUINowPlayingObservation"24
v28@0:8@?16B24
@"<VUIMediaLibraryFetchControllerQueueDelegate>"
@"VUIMediaLibraryFetchControllerQueueOperation"
@"VUIDelayOperation"
@"VUINowPlayingObserver"
@48@0:8@16@24Q32@40
@48@0:8@16@24@32@?40
@"VUIAccessView_tvOS"
@"OBPrivacyLinkController"
@40@0:8@16@24@?32
v44@0:8@16B24@28@?36
@"<VUIScorecardViewDelegate>"
@"VUIScoreboardLayout"
@"VUIFeedbackView"
@"VUIBookmarkKey"
@"VUIUniversalPlaybackPositionRecord"
@"VUISyncingKeyValueStore"
v40@0:8{TVShowcaseConfig=qqd}16
@"VUIProductBannerView"
@40@0:8@16q24@32
v32@0:8@"NSString"16Q24
@"NSDictionary"24@0:8@"NSString"16
v32@0:8@"NSString"16@"JSValue"24
B24@0:8o^@16
B32@0:8@16o^@24
@"NSObject<OS_dispatch_source>"
d32@0:8@16d24
d32@0:8@"VUILabel"16d24
B24@0:8d16
d24@0:8d16
@32@0:8Q16q24
@28@0:8B16q20
@40@0:8@16Q24@32
v48@0:8@16@24d32d40
{UIEdgeInsets=dddd}32@0:8{CGSize=dd}16
v28@0:8B16@?<v@?>20
@"<VUITVLibraryEpisodeListCellDelegate>"
@"UIView<TVAuxiliaryViewSelecting>"
@"UIPress"
@"VUIMediaItem"
@"VUITVEpisodeInformationView"
@"VUIEditorialCellLayout"
@"VUIFavoriteBannerView"
@"VUIFavoriteBannerLayout"
v40@0:8@"MPStoreDownloadManager"16@"NSArray"24@"NSArray"32
v32@0:8@"MPStoreDownloadManager"16@"MPStoreDownload"24
v32@0:8@"MPStoreDownloadManager"16@"NSArray"24
v24@0:8@"MPStoreDownloadManager"16
@"MPStoreDownload"
{UIEdgeInsets=dddd}24@0:8q16
@"VUIVideoAdvisoryLogoImageDownloader"
@"VUIUpNextButtonProperties"16@0:8
@"VUIUpNextButtonProperties"
v20@0:8f16
@"VUICardView"
v28@0:8B16@20
@"JSValue"32@0:8@"NSDictionary"16@"JSValue"24
v28@0:8B16@"JSValue"20
@"NSXPCConnection"
@"VUINowPlayingHudKeys"
@"VUINowPlayingHudMetaDataView"
@"VUICircularProgress"
@"VUIWatchNowTemplateBackgroundLayer"
@60@0:8@16@24@32@40@48B56
d32@0:8d16d24
q44@0:8d16d24B32Q36
q48@0:8d16d24B32Q36B44
{UIEdgeInsets=dddd}24@0:8@16
d32@0:8q16q24
d40@0:8q16q24Q32
d48@0:8q16q24Q32@40
d40@0:8q16q24@32
B32@0:8@16Q24
B32@0:8@"_TVCarouselView"16Q24
v32@0:8@"_TVCarouselView"16Q24
v40@0:8@"_TVCarouselView"16@"UICollectionViewCell"24Q32
v24@0:8@"_TVCarouselView"16
@24@0:8@?16
@44@0:8@16B24@28@36
B36@0:8@16@24B32
@"NSOrderedSet"
@"VUIMediaInfo"
@"VUISportsProductBannerView"
@"VUIEventDataSource"
d32@0:8@16@24
@"WLKChannelDetails"
@"VUIAppInstallerViewController"
@"VUIAccessViewController"
@"NSUUID"
@"VUIUpNextStateView"
@"VUIButton<VUIUpNextButtonProtocol>"
v48@0:8@16{CGSize=dd}24@?40
@40@0:8@16{CGSize=dd}24
{CGSize=dd}32@0:8@16@24
@"VUIFeedbackLayout"
@"TVRatingBadgeView"
@"MPMediaItemCollection"
@"VUIExtrasDescriptionView"
B32@0:8@16d24
v40@0:8@16q24@?32
@"VUIAppleTVChannelLogoLayout"
@"VUIFocusableTextView"
@36@0:8@16Q24B32
v24@0:8@"NSArray"16
v48@0:8@16B24B28@?32@?40
B32@0:8@16q24
v48@0:8@"TVMediaPlaybackManager"16B24B28@?<v@?>32@?<v@?B>40
B32@0:8@"TVMediaPlaybackManager"16q24
B24@0:8@"TVMediaPlaybackManager"16
v24@0:8@"TVMediaPlaybackManager"16
v28@0:8q16B24
v32@0:8d16@?24
@32@0:8@16d24
v40@0:8@16d24@?32
{?="respondsToFeatureDidChangeState"B"respondsToActiveFeatureChangedFrom"B}
@"<VUINowPlayingFeatureMonitorDelegate>"
@"<VUINowPlayingFeature>"
v32@0:8@"NSArray"16@?<v@?>24
v32@0:8@"NSURL"16@"NSData"24
v48@0:8^@16^@24^@32@40
v48@0:8@16Q24Q32@?40
d24@0:8Q16
@40@0:8@16Q24Q32
@"VUIPlistMediaDatabaseItem"
v48@0:8@"NSString"16@"NSString"24@"NSString"32@"NSDictionary"40
v24@0:8@"NSNumber"16
@"WLKNotificationCenter"
{CGSize=dd}40@0:8d16{CGSize=dd}24
d40@0:8d16@24@32
v48@0:8@16q24@32^{?={UIEdgeInsets=dddd}{UIEdgeInsets=dddd}{UIEdgeInsets=dddd}}40
{TVCornerRadii=dddd}24@0:8q16
d24@0:8q16
@"VUIDocumentContextData"
@"VUIDocumentPreFetchedData"
@"VUIDocumentUIConfiguration"
v40@0:8@16Q24@?32
v48@0:8@16@24Q32@?40
@"WLKPlaybackReporter"
@"VUIPostPlayConfig"
@"VUICollectionChangeSet"
@"VUITVDescriptiveAlertView"
@"UITextView"
@36@0:8@16@24B32
v32@0:8q16@24
@"<VUIPostPlayControllerDelegate>"
@"MPMediaItem"
@"NSURLSession"
@"NSURLSessionDataTask"
v48@0:8o^{CGRect={CGPoint=dd}{CGSize=dd}}16o^{UIEdgeInsets=dddd}24o^{UIEdgeInsets=dddd}32o^{UIEdgeInsets=dddd}40
{?="layoutBelowDisabled"b1}
@"VUINowPlayingConfig"
@"VUIProductInfoAiringView"
@"VUIContentMetadata"
v44@0:8@16@24B32@?36
v48@0:8@16@24@32@?40
v48@0:8@16Q24@?32@?40
v56@0:8@16Q24@?32@?40@?48
v60@0:8@16Q24@?32@?40B48@?52
v40@0:8@16@?24@?32
@44@0:8@16q24@32B40
@48@0:8@16q24q32@40
@"VUIAsynchronousWorkToken"
@28@0:8Q16B24
@32@0:8Q16Q24
d32@0:8Q16d24
@"VUISportsProductBannerLayout"
B20@0:8i16
@"<VUIVideoLeaseAgentDelegate>"
@"NSObject<TVPMediaItem>"
@40@0:8@16{_NSRange=QQ}24
@"VUIMediaEntityFetchRequest"
@"VUIMediaEntityKind"
@"MPMediaPredicate"
@"AMSURLSession"
@"AMSMediaTokenService"
v32@0:8@"VUIVideoLeaseAgent"16@"NSError"24
v40@0:8@"VUIStoreFPSKeyLoader"16@"NSData"24@"TVPContentKeyRequest"32
v40@0:8@"VUIStoreFPSKeyLoader"16@"NSDate"24@"NSDate"32
v32@0:8@"VUIStoreFPSKeyLoader"16@"TVPContentKeyRequest"24
v40@0:8@"VUIStoreFPSKeyLoader"16@"NSError"24@"TVPContentKeyRequest"32
B32@0:8@"VUIStoreFPSKeyLoader"16@"TVPContentKeyRequest"24
@56@0:8@16q24@32@40@48
v44@0:8d16d24d32B40
v32@0:8d16d24
B24@0:8Q16
@"VUIVideoLeaseAgent"
@"VUIStoreFPSKeyLoader"
@"TVSDocumentLoader"
@"TVPPlayer"
@"VUIBookmark"
{CGPoint=dd}16@0:8
{CGPoint="x"d"y"d}
@"SBKUniversalPlaybackPositionStore"
@"NSLock"
@"VUIUPPClientState"
@"<SBKUniversalPlaybackPositionTransactionContext>"24@0:8@?<v@?@"<SBKUniversalPlaybackPositionMediaItem>">16
v24@0:8@"<SBKUniversalPlaybackPositionTransactionContext>"16
v40@0:8@"<SBKUniversalPlaybackPositionTransactionContext>"16@"NSString"24@?<@"SBKUniversalPlaybackPositionMetadata"@?>32
v32@0:8@"NSSet"16@?<v@?@"NSString"@^B>24
@"VUIMediaLibraryManager"
@"NSObject<VUIMediaLibraryIdentifier>"
@"VUIVideoAdvisoryViewLayout"
v28@0:8@16I24
@"VUINowPlayingObservation"
@"<VUINowPlayingObserverDelegate>"
@"VUIExtrasInfo"
@48@0:8@16@24q32Q40
@32@0:8q16Q24
v32@0:8q16Q24
Q44@0:8{CGSize=dd}16d32i40
@60@0:8{CGSize=dd}16d32i40@44@?52
@68@0:8{CGSize=dd}16d32i40@44@?52@?60
v40@0:8q16B24d28B36
v24@0:8^@16
v32@0:8{CGPoint=dd}16
@"_VUISBInstallProgressStateTransition"
@"_VUISBIconProgressPausedTransition"
@"_VUISBIconProgressFractionTransition"
@"CADisplayLink"
@"<VUISBIconProgressViewDelegate>"
#32@0:8q16q24
@"CAMediaTimingFunction"
@56@0:8@16{CGRect={CGPoint=dd}{CGSize=dd}}24
@"VUIPlistMediaDatabaseShow"
v48@0:8@16{CGPoint=dd}24d40
@"VUIChannelBannerLayout"
@"VUIAppleTVChannelLogoView"
@"UIFocusContainerGuide"
@"VUIMediaEntitiesFetchControllerResult"
v60@0:8@16@24@32B40@44@52
@"<VUITextBadgeViewDelegate>"
@"NSAttributedString"
@"VUITVShowDetailPageViewModel"
v32@0:8@"VUIMPMediaItemDownloadController"16@"VUIMPMediaItemDownloadControllerState"24
v24@0:8@?<v@?B@"NSError">16
@"NSObject<VUIMediaEntityIdentifier>"16@0:8
@"<VUIMediaEntityAssetControllerDelegate>"16@0:8
v24@0:8@"<VUIMediaEntityAssetControllerDelegate>"16
@"VUIMediaEntityAssetControllerState"16@0:8
@"NSObject<OS_dispatch_queue>"16@0:8
v24@0:8@"NSObject<OS_dispatch_queue>"16
v60@0:8Q16d24Q32Q40B48B52B56
@"<VUIMediaEntityAssetControllerDelegate>"
@"VUIMediaEntityAssetControllerState"
@"NSObject<VUIMediaEntityIdentifier>"
@"VUIMPMediaItemDownloadController"
@"VUIScoreboardRowLayout"
@32@0:8{CGSize=dd}16
@48@0:8{CGSize=dd}16d32d40
@40@0:8@16@24Q32
@"VUIDebugContainerView"
@"VUIDebugViewDataSource"
v40@0:8@16q24@32
v40@0:8@"IKServiceRequest"16q24@"NSDictionary"32
v32@0:8@"IKUpdateServiceRequest"16@"IKAppDocument"24
v24@0:8@"VUIAppDocumentUpdateEvent"16
@"<VUIAppDocumentUpdateContext>"
@"VUIAppDocumentUpdateEventStore"
@"VUIMediaItemEntityTypesFetchResponseChanges"
@"<VUIOrderedItemsMapDelegate>"
@"VUIPlistMediaDatabase"
@"VUICardFloatingContentView"
v40@0:8Q16@?24@32
B44@0:8@16@24@32B40
v32@0:8Q16@?24
v32@0:8q16@?24
@40@0:8Q16Q24@32
@"<MTMediaPlaylistItem>"32@0:8Q16q24
@"NSArray"32@0:8Q16Q24
@"NSObject<TVPPlayback>"
@40@0:8@16^@24^@32
@"VUIMetricsPageEventData"
@"MTMetricsKit"
@"NSHashTable"
@"VUIAsynchronousWorkToken"24@0:8@?<v@?B@"NSError">16
@"VUIErrorLayout"
@"CAShapeLayer"
@52@0:8@16@24@32@40B48
@"TVImage"16@0:8
@"NSError"16@0:8
@"TVImage"
@"<VUIImageLoadParams>"
v40@0:8@16Q24@32
@"<IKAppDeviceConfig>"24@0:8@"IKAppContext"16
@"<IKAppNavigationController>"24@0:8@"IKAppContext"16
@"IKAppTabBar"24@0:8@"IKAppContext"16
@"<IKAppPlayer>"24@0:8@"IKAppPlayerBridge"16
@"<IKAppPlaylist>"24@0:8@"IKAppPlaylistBridge"16
@"<IKAppMediaItem>"24@0:8@"IKAppMediaItemBridge"16
v32@0:8@"IKAppContext"16@"JSContext"24
B48@0:8@"IKAppContext"16@"IKDOMDocument"24@"JSContext"32^@40
v32@0:8@"IKAppContext"16@"NSDictionary"24
v32@0:8@"IKAppContext"16@"NSError"24
v32@0:8@"IKAppContext"16Q24
v40@0:8@"IKAppContext"16Q24@"NSDictionary"32
@"NSURLSessionConfiguration"24@0:8@"IKAppContext"16
@"NSString"24@0:8@"IKAppContext"16
@"NSData"24@0:8@"IKAppContext"16
v48@0:8@"IKAppContext"16@"NSURL"24Q32@?<v@?@"NSString"@"NSError"Q>40
@32@0:8@?16@24
@"NSObject<VUIMediaEntityIdentifierInternal>"
@40@0:8Q16d24d32
@36@0:8Q16d24B32
@40@0:8q16q24q32
@"VUICardViewLayout"
d64@0:8d16@24{UIEdgeInsets=dddd}32
d36@0:8d16@24B32
@56@0:8{CGRect={CGPoint=dd}{CGSize=dd}}16d48
v28@0:8d16B24
v24@0:8@"VUITextBadgeView"16
@"VUIUpNextOverlayLayout"
@"CALayer"
@"VUICountDownProgressIndicator"
@"VUIDebugMetricsEvent"
@"VUIVideosPlayable"
@24@0:8@"VUIMediaLibraryManager"16
@"<VUIHomeShareMediaLibraryManagerDelegate>"16@0:8
v24@0:8@"<VUIHomeShareMediaLibraryManagerDelegate>"16
@"<VUIHomeShareMediaLibraryManagerDelegate>"
@"VUIStoreAcquisitionProperties"
v52@0:8@16@24@32@40B48
@"ATVAcquisitionRequest"
@"VUIDocumentDataSource"
@"VUIProductInfoAiringLayout"
{CGSize=dd}24@0:8@16
@"VUICollectionViewFeaturedView"
@"VUIMutableBookmark"
@"NSObject"
@"VUIProductBannerLayout"
@"VUIComingSoonBannerCardView"
@"VUIProductBannerCastInfoView"
@"VUIFeaturedCellOverlayLayout"
@28@0:8^{sqlite3_stmt=}16i24
@?24@0:8@16
v32@0:8@?16@24
@"TVSBackgroundTask"
^{sqlite3=}
^{sqlite3_stmt=}
@"TVSStateMachine"
@68@0:8@16{CGRect={CGPoint=dd}{CGSize=dd}}24B56@60
@72@0:8@16{CGRect={CGPoint=dd}{CGSize=dd}}24B56@60B68
@"VUINowPlayingFeatureMonitor"
@"VUINowPlayingViewController"
v36@0:8@"VUINowPlayingFeatureMonitor"16@"<VUINowPlayingFeature>"24B32
v44@0:8@"VUINowPlayingFeatureMonitor"16@"<VUINowPlayingFeature>"24@"<VUINowPlayingFeature>"32B40
v36@0:8@16q24B32
v56@0:8@16{UIEdgeInsets=dddd}24
v24@0:8@"VUINowPlayingViewController"16
v32@0:8@"VUINowPlayingViewController"16Q24
v36@0:8@"VUINowPlayingViewController"16q24B32
v56@0:8@"VUINowPlayingViewController"16{UIEdgeInsets=dddd}24
v36@0:8@"VUINowPlayingViewController"16@"TVMediaInfo"24B32
v72@0:8@16{?=qiIq}24{?=qiIq}48
{?=qiIq}72@0:8@16{?=qiIq}24{?=qiIq}48
v36@0:8@16B24@28
B24@0:8@"AVPlayerViewController"16
v24@0:8@"AVPlayerViewController"16
v32@0:8@"AVPlayerViewController"16@"AVInterstitialTimeRange"24
v72@0:8@"AVPlayerViewController"16{?=qiIq}24{?=qiIq}48
{?=qiIq}72@0:8@"AVPlayerViewController"16{?=qiIq}24{?=qiIq}48
v40@0:8@"AVPlayerViewController"16@"AVMediaSelectionOption"24@"AVMediaSelectionGroup"32
v32@0:8@"AVPlayerViewController"16@"NSString"24
v32@0:8@"AVPlayerViewController"16@?<v@?B>24
@"UIViewController"24@0:8@"AVPlayerViewController"16
B32@0:8@"AVPlayerViewController"16@"AVContentProposal"24
v32@0:8@"AVPlayerViewController"16@"AVContentProposal"24
v36@0:8@"AVPlayerViewController"16B24@"<AVPlayerViewControllerAnimationCoordinator>"28
q64@0:8@16{?=qiIq}24d48@?56
q64@0:8@"AVPlayerViewController"16{?=qiIq}24d48@?<v@?{?=qiIq}@"UIImage">56
B32@0:8@"AVPlayerViewController"16@"AVPlayerItem"24
v24@0:8@"PBSPictureInPictureController"16
v32@0:8@"PBSPictureInPictureController"16Q24
v28@0:8@"PBSPictureInPictureController"16B24
@"VUIPlaybackInfo"
@40@0:8N^{CGPoint=dd}16{CGPoint=dd}24
v48@0:8N^{CGPoint=dd}16@24{CGPoint=dd}32
@"VUIShelfView"
@"VUIMPMediaItemDownloadControllerState"
@"VUIExtrasDescriptionLayout"
{CGSize=dd}24@0:8Q16
@80@0:8d16{CGRect={CGPoint=dd}{CGSize=dd}}24{CGSize=dd}56Q72
@"<VUIMenuCollectionViewControllerDelegate>"
@"VUIMenuCollectionViewCell"
@"VUIMenuSectionHeaderCollectionViewCell"
@"VUIMediaItemEntityTypesFetchControllerResult"
@"NSNumber"16@0:8
v24@0:8@"SKStoreProductViewController"16
v32@0:8@"SKStoreProductViewController"16q24
v36@0:8@"SKStoreProductViewController"16@"SKStorePageRequest"24B32
v40@0:8@"NSString"16@"JSValue"24@32
v24@0:8@"NSCoder"16
@24@0:8@"NSCoder"16
@24@0:8#16
{CGSize=dd}40@0:8{CGSize=dd}16@32
{CGSize=dd}48@0:8{CGSize=dd}16@32@?40
v56@0:8@16Q24q32@?40@?48
v40@0:8@16Q24q32
@"MPArtworkCatalog"
B48@0:8@16@24@32@40
v40@0:8@16q24d32
v56@0:8@16{CGRect={CGPoint=dd}{CGSize=dd}}24
v56@0:8@16@24@32@40@?48
Q32@0:8@16@24
B40@0:8@16@24@?32
v24@0:8@"UIApplication"16
B32@0:8@"UIApplication"16@"NSDictionary"24
B32@0:8@"UIApplication"16@"NSURL"24
B48@0:8@"UIApplication"16@"NSURL"24@"NSString"32@40
B40@0:8@"UIApplication"16@"NSURL"24@"NSDictionary"32
v40@0:8@"UIApplication"16q24d32
v32@0:8@"UIApplication"16q24
v56@0:8@"UIApplication"16{CGRect={CGPoint=dd}{CGSize=dd}}24
v32@0:8@"UIApplication"16@"UIUserNotificationSettings"24
v32@0:8@"UIApplication"16@"NSData"24
v32@0:8@"UIApplication"16@"NSError"24
v32@0:8@"UIApplication"16@"NSDictionary"24
v32@0:8@"UIApplication"16@"UILocalNotification"24
v48@0:8@"UIApplication"16@"NSString"24@"UILocalNotification"32@?<v@?>40
v56@0:8@"UIApplication"16@"NSString"24@"NSDictionary"32@"NSDictionary"40@?<v@?>48
v48@0:8@"UIApplication"16@"NSString"24@"NSDictionary"32@?<v@?>40
v56@0:8@"UIApplication"16@"NSString"24@"UILocalNotification"32@"NSDictionary"40@?<v@?>48
v40@0:8@"UIApplication"16@"NSDictionary"24@?<v@?Q>32
v32@0:8@"UIApplication"16@?<v@?Q>24
v40@0:8@"UIApplication"16@"UIApplicationShortcutItem"24@?<v@?B>32
v40@0:8@"UIApplication"16@"NSString"24@?<v@?>32
v40@0:8@"UIApplication"16@"NSDictionary"24@?<v@?@"NSDictionary">32
v40@0:8@"UIApplication"16@"INIntent"24@?<v@?@"INIntentResponse">32
Q32@0:8@"UIApplication"16@"UIWindow"24
B32@0:8@"UIApplication"16@"NSString"24
@"UIViewController"40@0:8@"UIApplication"16@"NSArray"24@"NSCoder"32
B32@0:8@"UIApplication"16@"NSCoder"24
v32@0:8@"UIApplication"16@"NSCoder"24
B40@0:8@"UIApplication"16@"NSUserActivity"24@?<v@?@"NSArray">32
v40@0:8@"UIApplication"16@"NSString"24@"NSError"32
v32@0:8@"UIApplication"16@"NSUserActivity"24
v32@0:8@"UIApplication"16@"CKShareMetadata"24
@"UISceneConfiguration"40@0:8@"UIApplication"16@"UISceneSession"24@"UISceneConnectionOptions"32
v32@0:8@"UIApplication"16@"NSSet"24
@"UIWindow"16@0:8
v24@0:8@"UIWindow"16
@"TVApplicationController"16@0:8
@"VUIAppDocumentUpdateEventDescriptor"
@"<MPArtworkDataSource>"
v24@0:8@"VUISBIconProgressView"16
@"VUISBIconProgressView"
v32@0:8@"NSObject<VUIMediaEntityAssetController>"16@"VUIMediaEntityAssetControllerState"24
@"VUIComingSoonCardLayout"
@"VUIChannelBannerView"
@56@0:8{CGRect={CGPoint=dd}{CGSize=dd}}16q48
v24@0:8^{CGContext=}16
{os_unfair_lock_s="_os_unfair_lock_opaque"I}
@"VUICastInfoLayout"
@40@0:8@16@24d32
@48@0:8@16@24d32d40
