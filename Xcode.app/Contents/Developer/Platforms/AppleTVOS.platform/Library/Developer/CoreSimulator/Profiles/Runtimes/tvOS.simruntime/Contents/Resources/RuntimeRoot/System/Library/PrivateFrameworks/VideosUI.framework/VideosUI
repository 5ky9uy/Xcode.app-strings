Maximum of 10 arguments allowed
collection
overideLocDict
T@"NSDictionary",&,V_overideLocDict
The %@ initializer is not available.
hash
TQ,R
T#,R
T@"NSString",R,C
currentUpdateRequest
T@"IKUpdateServiceRequest",R,N
T@"IKUpdateServiceRequest",&,N,V_currentUpdateRequest
receivedEvents
T@"NSArray",C,N,V_receivedEvents
remainingViewElements
T@"NSMutableOrderedSet",&,N,V_remainingViewElements
contextDictionary
T@"NSDictionary",&,N,V_contextDictionary
viewElement
T@"IKViewElement",W,N,V_viewElement
data
relationships
name
releaseDate
standard
genreNames
previewArtwork
widescreenArtwork
offers
personalizedOffers
artistName
episodeSeasonNumber
episodeNumber
contentRatingsBySystem
iTunesExtrasUrl
movies
tv-episodes
seasons
shows
value
advisories
com.apple.tv.mediaAPI
VUIFamilySharingEntityRequestResponseParser
yyyy-MM-dd
UNEXPECTEDTYPE:%@
Error
TransactionID
CanonicalID
VUIPurchaseRequestDidFinishNotification
VUISubscribeRequestDidFinishNotification
VUIPurchaseOrSubscribeRequestDidStartNotification
canonicalId
canonicalID
T@"NSString",C,N,V_canonicalID
postPlayUpdateData
T@"NSDictionary",&,N,V_postPlayUpdateData
bgVisualEffectView
T@"UIVisualEffectView",&,N,V_bgVisualEffectView
containerGuide
T@"UIFocusContainerGuide",&,N,V_containerGuide
T@"IKViewElement",&,N,V_viewElement
T@"VUIUpsellOfferViewLayout",&,N,V_layout
titleLabel
T@"VUILabel",&,N,V_titleLabel
T@"VUILabel",&,N,V_descriptionLabel
appleTVChannelLogoView
T@"VUIAppleTVChannelLogoView",&,N,V_appleTVChannelLogoView
disclaimerLabel
T@"VUILabel",&,N,V_disclaimerLabel
buttons
T@"NSArray",&,N,V_buttons
The %@ parameter must not be nil.
mediaLibrary
requests
T@"NSArray",C,N,V_requests
responses
T@"NSArray",C,N,V_responses
error
T@"NSError",C,N,V_error
privateQueue
T@"NSOperationQueue",&,N,V_privateQueue
T@"VUIMPMediaLibrary",&,N,V_mediaLibrary
ColorCapability
ContentDescription
ContentRating
CoverArtURL
Credits
DownloadState
Duration
Episode
Episodes
EpisodeNumber
GenreTitle
HLSColorCapability
HomeVideos
Identifier
Local
Movies
MovieRentals
OfflineFPSKeys
PlaybackURL
PreviewFrameURL
RelativeFilePathString
ReleaseDate
Seasons
SeasonNumber
Shows
Studio
Title
Type
tvShow
VUIAppInstallerViewControllerInitException
-init is not supported. Use -initWithChannel:
installable must be non-nil
App installation is update: %d
APP_UPDATE_ALERT_TITLE_FORMAT
APP_INSTALL_ALERT_TITLE_FORMAT
APP_GET_ALERT_TITLE_FORMAT
APP_UPDATE_ALERT_MESSAGE_FORMAT
APP_INSTALL_ALERT_MESSAGE_FORMAT
APP_INSTALL_ALERT_MESSAGE_FORMAT_IOS
APP_UPDATE_ALERT_MESSAGE_FORMAT_CONTENT_TYPE_MOVIE
APP_UPDATE_ALERT_MESSAGE_FORMAT_CONTENT_TYPE_SHOW
APP_INSTALL_ALERT_MESSAGE_FORMAT_CONTENT_TYPE_MOVIE
APP_INSTALL_ALERT_MESSAGE_FORMAT_CONTENT_TYPE_SHOW
APP_GET_ALERT_MESSAGE_FORMAT_CONTENT_TYPE_MOVIE
APP_GET_ALERT_MESSAGE_FORMAT_CONTENT_TYPE_SHOW
APP_INSTALL_ACTION_TITLE_UPDATE
APP_INSTALL_ACTION_TITLE_INSTALL
APP_INSTALL_ACTION_TITLE_GET
APP_INSTALL_PAGE_UPDATE_SUBTITLE_FORMAT
APP_INSTALL_PAGE_SUBTITLE_FORMAT
APP_INSTALL_PAGE_UPDATE_SUBTITLE_FORMAT_CONTENT_TYPE_MOVIE
APP_INSTALL_PAGE_UPDATE_SUBTITLE_FORMAT_CONTENT_TYPE_SHOW
APP_INSTALL_PAGE_SUBTITLE_FORMAT_CONTENT_TYPE_MOVIE
APP_INSTALL_PAGE_SUBTITLE_FORMAT_CONTENT_TYPE_SHOW
APP_INSTALL_PAGE_TITLE_FORMAT
APP_INSTALL_PAGE_UPDATE_TITLE_FORMAT
VUIAppInstallerViewController - Cancelled app installation.
VUIAppInstallerViewController - Dismissed active app installation.
v16@?0Q8
VUIAppInstallerViewController - Accepted app installation.
VUIAppInstallerViewController - App store link %@
v16@?0B8B12
v16@?0d8
VUIAppInstallerViewController - Posting app install finished.
VUIAppInstallerViewController - Hiding app install display. Headless: %d
v16@?0@"NSError"8
installable
T@"<WLKInstallable>",R,N,V_installable
localizedContentTitle
T@"NSString",C,N,V_localizedContentTitle
contentType
T@"NSString",C,N,V_contentType
confirmationTitle
T@"NSString",C,N,V_confirmationTitle
confirmationBody
T@"NSString",C,N,V_confirmationBody
updateBody
T@"NSString",C,N,V_updateBody
updateTitle
T@"NSString",C,N,V_updateTitle
confirmationInstallButtonTitle
T@"NSString",C,N,V_confirmationInstallButtonTitle
displayAppStoreLink
TB,N,V_displayAppStoreLink
displaySecondaryLink
TB,N,V_displaySecondaryLink
secondaryLinkTitle
T@"NSString",C,N,V_secondaryLinkTitle
secondaryLinkHandler
T@?,C,N,V_secondaryLinkHandler
addedDate
genreTitle
rentalExpirationDate
adam-id
videos
v16@?0@"NSDictionary"8
v16@?0@"NSString"8
v12@?0B8
v24@?0@"NSArray"8@"NSError"16
name=%@
v20@?0B8@"NSError"12
completionHandler
T@?,C,N,V_completionHandler
deferredOpenURL
T@"NSURL",&,N,V_deferredOpenURL
deferredOpenURLCompletion
T@?,C,N,V_deferredOpenURLCompletion
openedByDeeplink
TB,N,V_openedByDeeplink
com.apple.AppleTV.playback
SecureKeyDelivery
v32@?0@"NSURL"8@"NSURL"16@"NSError"24
%@%@
v24@?0@"NSData"8@"NSError"16
v16@?0@"NSURL"8
fps-cert
fps-request
v24@?0@"NSDictionary"8@"NSError"16
v24@?0@8@"NSError"16
stop 
POST
application/json
Content-Type
X-Secure-Invalidation-Dsid
fairplay-streaming-response
version
streaming-keys
B32@?0@"TVPContentKeyRequest"8Q16^B24
status
renew-after
expiration-time
playback-start-time
content-id
is-low-value
playback-duration
allow-manual-renewal
extra-server-parameters
device-limit
com.apple.fpsRequest
fairplay-streaming-request
rental-id
stop
lease-action
renew
start
skipped-rental-checkout
offline
long
certificateURL
T@"NSURL",C,N,V_certificateURL
keyServerURL
T@"NSURL",C,N,V_keyServerURL
state
Tq,N,V_state
certificateData
T@"NSData",&,N,V_certificateData
requestsAwaitingCertFetch
T@"NSMutableArray",&,N,V_requestsAwaitingCertFetch
savedStreamingKeyRequestToUseForStopping
T@"TVPContentKeyRequest",&,N,V_savedStreamingKeyRequestToUseForStopping
keyExpirationDate
T@"NSDate",&,N,V_keyExpirationDate
rentalPlaybackStartDate
T@"NSDate",&,N,V_rentalPlaybackStartDate
contentKeySession
T@"TVPContentKeySession",&,N,V_contentKeySession
keyIdentifierPenaltyBox
T@"NSMutableDictionary",&,N,V_keyIdentifierPenaltyBox
secureInvalidationNonceURL
T@"NSURL",&,N,V_secureInvalidationNonceURL
secureInvalidationDSID
T@"NSNumber",&,N,V_secureInvalidationDSID
delegate
T@"NSObject<VUIStoreFPSKeyLoaderDelegate>",W,N,V_delegate
eventCollection
T@"TVPPlaybackReportingEventCollection",&,N,V_eventCollection
rentalID
T@"NSNumber",&,N,V_rentalID
didSkipRentalCheckout
TB,N,V_didSkipRentalCheckout
usesKeyIdentifierPenaltyBox
TB,N,V_usesKeyIdentifierPenaltyBox
v32@?0@"VUIMediaEntityFetchResponse"8Q16^B24
v16@?0@"<VUIMediaEntitiesFetchControllerDelegate>"8
T@"<VUIMediaEntitiesFetchControllerDelegate>",W,N,V_delegate
response
T@"VUIMediaEntityFetchResponse",R,N,V_response
itemID
itemType
T@"NSString",&,N,V_itemID
T@"NSString",&,N,V_itemType
channelID
T@"NSString",&,N,V_channelID
Unimplemented
-[VUIExtrasManager init] not supported, use +sharedInstance instead
Extras presented
com.apple.TVPlayback
VideoDisabledByUserProfileErrorDescription
Extras dismissed
applicationController
T@"VUIExtrasApplicationController",&,N,V_applicationController
presentingAnimator
T@"_TVNavigationZoomAnimator",&,N,V_presentingAnimator
dismissingAnimator
T@"_TVProductTemplateZoomAnimator",&,N,V_dismissingAnimator
presenting
TB,N,V_presenting
reverseDismissal
TB,N,V_reverseDismissal
unrestrictedActionParams
T@"NSString",C,N,V_unrestrictedActionParams
extrasVisible
TB,R,N,GisExtrasVisible
VUIMediaLibraryManagerHomeSharesDidChangeNotification
VUIMediaLibraryManagerHomeSharesDidChangeUserInfoKeyMediaLibraries
VUIMediaLibraryManagerHomeSharesDidChangeUserInfoKeyChangeSet
VUITellAppRemovalServiceThatSecureInvalidationDidCompleteNotification
com.apple.videosui.VUIMediaLibraryManager.serialProcessingQueue
PlistDatabasePath
homeShareMediaLibraries
v16@?0@"VUIMediaLibraryManager"8
UseTVHomeSharing
deviceMediaLibrary
T@"VUIDeviceMediaLibrary",&,N,V_deviceMediaLibrary
serialProcessingDispatchQueue
T@"NSObject<OS_dispatch_queue>",&,N,V_serialProcessingDispatchQueue
homeShareManager
T@"NSObject<VUIHomeShareMediaLibraryManager>",&,N,V_homeShareManager
completionDispatchQueue
T@"NSObject<OS_dispatch_queue>",&,N,V_completionDispatchQueue
sidebandMediaLibrary
T@"VUISidebandMediaLibrary",R,N,V_sidebandMediaLibrary
aggregateMediaLibrary
T@"VUIAggregateMediaLibrary",R,N,V_aggregateMediaLibrary
T@"NSArray",R,C,N
activeMediaLibrary
T@"VUIMediaLibrary",&,N,V_activeMediaLibrary
VUIFavoritesRequestDidFinishNotification
Action
-[VUIFavoritesRequestManager init] not supported, use +sharedInstance instead
sportsFavoritesConfirmation
FAVORITES_NOTIFICATION_TEAM_ADDED
FAVORITES_NOTIFICATION_TEAM_REMOVED
ongoingEntityIDOperationDictionary
T@"NSMutableDictionary",&,N,V_ongoingEntityIDOperationDictionary
v32@?0@"UICollectionViewLayoutAttributes"8Q16^B24
T@"<VUIMediaLibraryApplicationControllerDelegate>",&,N,V_delegate
Disconnected
Connecting
Connected
Disconnecting
%@, 
taskIdentifier
TQ,N,V_taskIdentifier
latestFetchResponses
currentFetchResponses
The fetch responses arrays parameters must be non empty and contain the same number of response objects
@"NSObject<NSCopying>"16@?0@"VUIMediaEntityGroup"8
@"VUICollectionChangeSet"24@?0@"VUIMediaEntityGroup"8@"VUIMediaEntityGroup"16
@"NSObject<NSCopying>"16@?0@"VUIMediaEntity"8
B24@?0@"VUIMediaEntity"8@"VUIMediaEntity"16
fetchResponseChanges
T@"NSArray",C,N,V_fetchResponseChanges
T@"NSArray",C,N,V_latestFetchResponses
T@"NSArray",C,N,V_currentFetchResponses
artworkURL
EXPIRATION_LEFT
stackingPosterView
T@"_TVStackingPosterView",&,N,V_stackingPosterView
placeholderImage
T@"UIImage",&,N,V_placeholderImage
placeholderImageString
T@"NSString",&,N,V_placeholderImageString
actionRef
contextData
actionRefBuy
actionRefGet
actionRefPreorder
actionRefRent
actionRefRentWatchNow
actionRefSubscribe
actionRefComplete
actionRefUpdate
actionRefPlay
actionRefPunchout
actionRefAppPunchout
actionRefItunesExtras
actionRefRedownload
actionRefPromise
actionRefRemoveFromPlayHistory
actionRefLocationPrompt
actionRefAlert
actionRefShareMediaItem
actionRefUpdateSportsFavorite
actionRefUpdateUpNext
actionRefMarkAsWatched
actionRefClearFromPlayHistory
actionRefGdprProceed
VUIApplicationAction: Unknown action type %@
dolby-vision
dolby-atmos
metadata-ad
metadata-sdh
cs_badge_white
cs_badge_black
RTRotten
RTFresh
RTCertified
TV.CommonSense.AgeRating
v32@?0@"UIView"8Q16^B24
_TVLoadingViewController
vui_ppt_loading
TB,R,N,Gvui_ppt_isLoading
headerView
T@"UIView",&,N,V_headerView
collectionView
T@"UICollectionView",&,N,V_collectionView
editorial
spotlight
live
time
reair
comingSoon
badgeKind
TQ,N,V_badgeKind
cornerRadius
Td,N,V_cornerRadius
gradientBgColors
T@"NSArray",&,N,V_gradientBgColors
T@"VUITextLayout",&,N,V_textLayout
T@"TVImageLayout",&,N,V_imageLayout
objectIdentifier
mediaEntityType
T@"VUIMediaEntityType",R,C,N
T@"NSString",&,N,V_objectIdentifier
T@"VUIMediaEntityType",C,N,V_mediaEntityType
videosNative
textBadge
scorecardView
isCancelled
isFinished
tv_displayed
backgroundImageForMaterialRendering
T@"UIImage",&,N
_sharedDrawQueue
T@"NSOperationQueue",R,N
overlayLayout
T@"VUISportsOverlayLayout",&,N,V_overlayLayout
T@"VUIScorecardView",&,N,V_scorecardView
scoreboardViewModel
T@"VUISportsScoreboardViewModel",&,N,V_scoreboardViewModel
textBadgeHasMaterial
TB,N,V_textBadgeHasMaterial
T@"VUITextBadgeView",&,N,V_textBadge
logoView
T@"_TVImageView",&,N,V_logoView
logoElement
T@"IKImageElement",&,N,V_logoElement
logoSize
T{CGSize=dd},N,V_logoSize
pendingOperation
T@"NSOperation",&,N,V_pendingOperation
scorecardViewBackgroundImage
T@"UIImage",&,N,V_scorecardViewBackgroundImage
backgroundImageHasChanged
TB,N,V_backgroundImageHasChanged
containingCell
T@"UICollectionReusableView",W,N,V_containingCell
isHostSetup
TB,N,V_isHostSetup
isFocused
TB,N,V_isFocused
T@"UIImage",&,N,V_backgroundImageForMaterialRendering
T@"NSString",&,N,V_state
isEntitled
show-lip
Offer_Card_Versions_Shadow_Mask
TV.HowToWatch.VersionsButtonGenericText
offerView
T@"VUIOfferView",&,N,V_offerView
cardSize
T{CGSize=dd},N,V_cardSize
belowCardTextLabel
T@"VUILabel",&,N,V_belowCardTextLabel
secondChinImageView
T@"VUIImageView",&,N,V_secondChinImageView
@"NSString"16@?0@"VUIMediaEntityGroup"8
@"NSString"16@?0@"VUIMediaEntity"8
q24@?0@"VUIMediaEntityType"8@"VUIMediaEntityType"16
v32@?0@8Q16^B24
cell
ACCESS_SEE_ALL_TITLE
appIcon
appName
apps
T@"NSArray",C,N,V_apps
verticalSpacing
Td,R,N,V_verticalSpacing
buttonLayout
T@"VUIButtonLayout",R,N,V_buttonLayout
titleLayout
T@"VUITextLayout",R,N,V_titleLayout
descriptionLayout
T@"VUITextLayout",R,N,V_descriptionLayout
badgeViewLayout
T@"VUIMediaTagsViewLayout",R,N,V_badgeViewLayout
Td,R,N,V_cornerRadius
T@"TVImageLayout",R,N,V_imageLayout
metaDataViewLayout
T@"VUINowPlayingHudMetaDataViewLayout",R,N,V_metaDataViewLayout
buttonsLayout
T@"VUINowPlayingHudButtonsLayout",R,N,V_buttonsLayout
selectedMediaInfo
T@"TVMediaInfo",R,N
T@"_TVShelfViewController",&,N,V_shelfViewController
T@"TVMediaInfo",&,N,V_selectedMediaInfo
observableEventController
T@"TVObservableEventController",&,N,V_observableEventController
host
TQ,R,N,V_host
visualEffectView
T@"UIView",R,N
TB,R,N
T@"UIView",&,N,V_shelfView
backgroundVisualEffectView
T@"UIVisualEffectView",&,N,V_backgroundVisualEffectView
seasonCount
mediaItemCollection
requestedProperties
@16@?0@"VUIMediaEntityPropertyDescriptor"8
errorView
T@"VUIErrorView",R,N
ATVMediaTypeExtrasAuxiliaryContent
rentalAdamID
playURL
scrubVideoURL
hlsPlaylistUrl
contentRating
dataType
resumeTime
disableResumeMenu
fpsCertificateURL
fpsKeyServerURL
B32@?0@"IKMediaElement"8Q16^B24
%@.IFrameScrubVideo
resumeMenuBehavior
TQ,N,V_resumeMenuBehavior
movie
tvshow
T@"VUITextLayout",R,N,V_titleTextLayout
descriptionTextLayout
T@"VUITextLayout",R,N,V_descriptionTextLayout
T@"VUITextLayout",R,N,V_debugTextLayout
T@"VUITextLayout",R,N,V_debugTextLayout2
badgeView
T@"_TVImageView",&,N,V_badgeView
badgeElement
T@"IKViewElement",&,N,V_badgeElement
badgeSize
T{CGSize=dd},N,V_badgeSize
badgeFrame
T{CGRect={CGPoint=dd}{CGSize=dd}},N,V_badgeFrame
badgeType
T@"NSString",&,N,V_badgeType
watched-checkmark
T@"VUIOverlayLayout",&,N,V_overlayLayout
titleElement
T@"IKViewElement",&,N,V_titleElement
textBadgeElement
T@"IKViewElement",&,N,V_textBadgeElement
badgeViewWrappers
T@"NSArray",&,N,V_badgeViewWrappers
progressView
T@"_TVProgressView",&,N,V_progressView
gradientView
T@"UIView",&,N,V_gradientView
gradientLayer
T@"CALayer",&,N,V_gradientLayer
%@ - %@
Will end reporting for %@
Will begin reporting for %@
_playerStateWillChange %@
_playerCurrentMediaItemWillChange %@
Stopping %@
End session (enforcing single session) %@
Invalid player. Not creating session %@
Transition: %@ --> %@ (%@), %@, reason:%@
Valid
Invalid
Ignoring event for un-matched session %@
You must override %@ in a subclass
sessions
T@"NSMutableArray",&,N,V_sessions
enforceSinglePlaybackSession
TB,R,N,V_enforceSinglePlaybackSession
T@"MPMediaLibrary",&,N,V_mediaLibrary
T@"VUIMediaItemEntityTypesFetchResponse",&,N,V_response
%@=%@
mediaEntities
sortIndexes
<%@>
T@"NSObject<NSCopying>",C,N,V_identifier
T@"NSArray",C,N,V_mediaEntities
T@"NSArray",C,N,V_sortIndexes
showId
updateComponentType
canAutoPlay
excludedCanonicals
inheritParentDataSource
dataItems
prefetchedDataDict
T@"NSDictionary",C,N,V_prefetchedDataDict
T@"NSString",C,N,V_host
productID
T@"NSString",C,N,V_productID
showID
T@"NSString",C,N,V_showID
T@"NSArray",C,N,V_excludedCanonicals
updateEvent
TB,N,V_updateEvent
TB,N,V_canAutoPlay
APP_INSTALL_ACTION_TITLE_CANCEL
APP_INSTALL_APPSTORE_BUTTON
lockupView
T@"VUIAppInstallLockup",&,N,V_lockupView
T@"NSString",C,N,V_title
message
T@"NSString",C,N,V_message
actionButton
T@"UIButton",&,N,V_actionButton
cancelButton
T@"UIButton",&,N,V_cancelButton
appStoreButton
T@"UIButton",&,N,V_appStoreButton
secondaryLinkButton
T@"UIButton",&,N,V_secondaryLinkButton
rowTextLayout
T@"VUITextLayout",R,N,V_rowTextLayout
scoreTextLayout
T@"VUITextLayout",R,N,V_scoreTextLayout
losingRowTextLayout
T@"VUITextLayout",R,N,V_losingRowTextLayout
losingScoreTextLayout
T@"VUITextLayout",R,N,V_losingScoreTextLayout
footerTextLayout
T@"VUITextLayout",R,N,V_footerTextLayout
availabilityTextLayout
T@"VUITextLayout",R,N,V_availabilityTextLayout
availabilityImageLayout
T@"TVImageLayout",R,N,V_availabilityImageLayout
VUINowPlayingPostPlayShouldUpdateNotification
VUINowPlayingShouldShowAutoPlayUINotification
VUINowPlayingShouldHideAutoPlayUINotification
VUINowPlayingWillStartNotification
VUINowPlayingDidEndNotification
VUINowPlayingDidEndMediaTypeKey
playFromBeginning
showProductPage
player
focusableDescription
skipIntro
canPlaybackInWatchNow
allowsManualPostPlayInvocation
stillWatchingAlertDuration
postPlay
show
hide
library media controller
extras media controller
Generic media controller
metadata
v16@?0@"VUIFocusableTextView"8
T@"IKAppContext",&,N,V_appContext
mediaPlaybackManager
T@"TVMediaPlaybackManager",&,N,V_mediaPlaybackManager
enabledUIModes
T@"NSArray",C,N,V_enabledUIModes
mediaControllerHost
T@"UIViewController<TVMediaControllerHosting>",W,N,V_mediaControllerHost
mediaController
T@"VUIMediaController",&,N,V_mediaController
nowPlayingHudView
T@"VUINowPlayingHudView",&,N,V_nowPlayingHudView
T@"VUINowPlayingViewModel",&,N,V_viewModel
nowPlayingHudVisible
TB,R,N,GisNowPlayingHudVisible,V_nowPlayingHudVisible
popWhenDone
TB,N,GshouldPopWhenDone,V_popWhenDone
skipIntroButton
T@"VUIButton",&,N,V_skipIntroButton
postPlayViewController
T@"VUIPostPlayDocumentServiceViewController",&,N,V_postPlayViewController
playbackContext
TQ,N,V_playbackContext
skipButtonLayout
T@"VUINowPlayingSkipButtonLayout",&,N,V_skipButtonLayout
ratingView
T@"VUIVideoAdvisoryView",&,N,V_ratingView
alreadyShownAdvisory
TB,N,GhasAlreadyShownAdvisory
waitingForPostPlayDocumentUpdate
TB,N,V_waitingForPostPlayDocumentUpdate
waitingForPostPlayDocumentUpdateToShowPostPlay
TB,N,V_waitingForPostPlayDocumentUpdateToShowPostPlay
internalMenuGestureRecognizer
T@"UITapGestureRecognizer",&,N,V_internalMenuGestureRecognizer
disappearanceReason
TQ,N,V_disappearanceReason
currentUI
TQ,N,V_currentUI
T@"NSString",R,N
showCanonicalID
T@"<VUINowPlayingViewControllerDelegate>",W,N,V_delegate
showsNowPlayingHUD
TB,N,V_showsNowPlayingHUD
showsProductPageButton
channelsTextLayout
T@"VUITextLayout",&,N,V_channelsTextLayout
channelLogoImageLayout
T@"TVImageLayout",&,N,V_channelLogoImageLayout
T@"UIVisualEffectView",R,N,V_visualEffectView
label
T@"VUILabel",&,N,V_label
blurEffectStyle
Tq,N,V_blurEffectStyle
darkBlurEffectStyle
Tq,N,V_darkBlurEffectStyle
channelLogoLayout
T@"VUIAppleTVChannelLogoLayout",R,N,V_channelLogoLayout
disclaimerTextLayout
T@"VUITextLayout",R,N,V_disclaimerTextLayout
library
LibraryMain
LibraryTvShowProduct
FamilySharingLibraryMain
FamilySharingMembers
libraryItem
lockup
targetType
navigate
actionType
TVShows
FamilySharing
Downloaded
RecentlyAdded
Rentals
RecentMovies
RecentTVShows
HDRMovies
RecentPurchases
HDRMovie
Downloads
HomeShares
Genres
playbackTime
artwork
urlDescription
chapterType
playbackDuration
q24@?0@"NSDictionary"8@"NSDictionary"16
eventTime
viewController
T@"UIViewController",&,N,V_viewController
VUITVLibraryViewController
LIBRARY_EMPTY_TITLE_TV
LIBRARY_FS_NOT_SHARING_TITLE
LIBRARY_FS_NOT_SHARING_DESCRIPTION
LIBRARY_EMPTY_HS_DESCRIPTION
LIBRARY_FAMILY_SHARING_HEADER
%@_%@
familyMember
T@"VUIFamilyMember",&,N
menuCollectionViewController
T@"VUIMenuCollectionViewController",&,N,V_menuCollectionViewController
tvLibraryView
T@"VUITVLibraryView",&,N,V_tvLibraryView
detailViewController
T@"UIViewController",&,N,V_detailViewController
menuDataSource
T@"VUILibraryMenuDataSource",&,N,V_menuDataSource
currentlySelectedIndexPath
T@"NSIndexPath",&,N,V_currentlySelectedIndexPath
validCategories
T@"NSSet",&,N,V_validCategories
contentPresenter
T@"VUIViewControllerContentPresenter",&,N,V_contentPresenter
T@"VUIFamilyMember",&,N,V_familyMember
IncludeSortIndexes
IncludeGroupingSortIndexes
ForcePopulateProperties
__All__
resolution
HLSResolution
colorCapability
audioCapability
HLSAudioCapability
extrasURL
rentalPlaybackDuration
isLocal
releaseYear
seasonNumber
storeID
isPlayable
duration
previewFrameImageIdentifier
mediaEntityTypes
predicate
sortDescriptors
properties
range
%@,%@
groupingKeyPath
groupingSortComparator
options
Unknown key for sort descriptor! %@
T@"NSString",C,N,V_identifier
T@"NSSet",C,N,V_mediaEntityTypes
_isItemsFetch
_isCollectionsFetch
_isShowsFetch
_isSeasonsFetch
T@"NSPredicate",C,N,V_predicate
T@"NSArray",C,N,V_sortDescriptors
T@"NSSet",C,N,V_properties
T{_NSRange=QQ},N,V_range
T@"NSString",C,N,V_groupingKeyPath
T@?,C,N,V_groupingSortComparator
T@"NSDictionary",C,N,V_options
coverArtImageIdentifier
handler
T@"<VUITVButtonHandler>",&,N,V_handler
completion
T@?,C,N,V_completion
tvButtonRecognizer
T@"UITapGestureRecognizer",&,N,V_tvButtonRecognizer
gestureToHandlerMap
T@"NSMapTable",&,N,V_gestureToHandlerMap
durationInMilliseconds
entity
T@"VUIFamilySharingEntity",&,N,V_entity
T@"NSString",&,N,V_artworkURL
previewArtworkURL
T@"NSString",&,N,V_previewArtworkURL
iTunesExtrasInfo
T@"VUIExtrasInfo",&,N,V_iTunesExtrasInfo
T@"VUIFamilySharingRelationships",&,N,V_relationships
T@"VUIVideosPlayable",&,N,V_videosPlayable
buyParams
T@"NSString",&,N,V_buyParams
personalizedBuyParams
T@"NSString",&,N,V_personalizedBuyParams
com.apple.videosui.VUIMPMediaItemAssetControllerManager.serialProcessingQueue
libraryFileURL
T@"NSURL",C,N,V_libraryFileURL
menuItemSizingCell
T@"VUIMenuCollectionViewCell",&,N,V_menuItemSizingCell
shouldMarkFirstCellSelected
TB,N,V_shouldMarkFirstCellSelected
total
T@"NSNumber",&,N,V_total
offset
T@"NSString",&,N,V_offset
contextDataDictionary
T@"NSDictionary",R,N,V_contextDataDictionary
T@"IKAppContext",W,N,V_appContext
CoverArt
PreviewFrame
__VUIAccessView_iOSObservationContext
highlighted
ACCESS_NACK_TITLE_PLURAL
ACCESS_NACK_BODY_IOS_PLURAL
ACCESS_NACK_TITLE_FORMAT
ACCESS_NACK_BODY_IOS_FORMAT
ACCESS_SEE_ALL_BUTTON
ACCESS_ALLOW
ACCESS_DENY
ACCESS_NACK_BUTTON
privacyView
T@"UIView",&,N,V_privacyView
dismissButtonTitle
T@"NSString",&,N,V_title
descriptionString
T@"NSString",&,N,V_descriptionString
T@"NSString",&,N,V_dismissButtonTitle
Item
Collection
TQ,N,V_type
play
extras
punchout
entitlementReason
rental
isEntitledToPlay
brandId
externalId
referenceId
startType
automatic
trailer
episode
NotDownloaded
Downloading
studio
credits
previewFrameURL
playbackURL
filePathURL
offlineFPSKeys
[omitted]
downloadState
season
T@"VUIPlistMediaDatabaseSeason",W,N,V_season
playable
T@"NSNumber",R,C,N,GisPlayable
T@"NSNumber",C,N,V_duration
T@"NSDate",C,N,V_releaseDate
T@"NSURL",C,N,V_previewFrameURL
T@"_TVContentRating",C,N,V_contentRating
T@"NSNumber",C,N,V_colorCapability
T@"NSNumber",C,N,V_HLSColorCapability
T@"NSNumber",C,N,V_episodeNumber
T@"NSString",C,N,V_studio
T@"VUIMediaItemCredits",C,N,V_credits
T@"NSURL",C,N,V_playbackURL
T@"NSURL",C,N,V_filePathURL
T@"NSDictionary",C,N,V_offlineFPSKeys
T@"NSString",C,N,V_downloadState
Unable to determine the VUIMediaEntityKind to use for this request: %@
Unexpected media entity type!
T@"VUIPlistMediaLibrary",&,N,V_mediaLibrary
T@"NSArray",&,N,V_responses
fetchControllers
v24@?0q8@"NSError"16
T@"NSArray",C,N,V_fetchControllers
mediaLibraryRevision
TQ,N,V_mediaLibraryRevision
eventTypeLabel
T@"VUILabel",&,N,V_eventTypeLabel
eventTypeLabelLayout
T@"VUITextLayout",&,N,V_eventTypeLabelLayout
subhead1Label
T@"VUILabel",&,N,V_subhead1Label
subhead1LabelLayout
T@"VUITextLayout",&,N,V_subhead1LabelLayout
subhead2Label
T@"VUILabel",&,N,V_subhead2Label
subhead2LabelLayout
T@"VUITextLayout",&,N,V_subhead2LabelLayout
subhead3Label
T@"VUILabel",&,N,V_subhead3Label
subhead3LabelLayout
T@"VUITextLayout",&,N,V_subhead3LabelLayout
tabNameLabel
T@"VUILabel",&,N,V_tabNameLabel
tabNameLabelLayout
T@"VUITextLayout",&,N,V_tabNameLabelLayout
tabImageView
T@"UIImageView",&,N,V_tabImageView
separatorView
T@"VUISeparatorView",&,N,V_separatorView
eventTypeLabelStr
T@"NSString",C,N,V_eventTypeLabelStr
subhead1LabelStr
T@"NSString",C,N,V_subhead1LabelStr
subhead2LabelStr
T@"NSString",C,N,V_subhead2LabelStr
subhead3LabelStr
T@"NSString",C,N,V_subhead3LabelStr
tabImage
T@"UIImage",C,N
tabName
T@"NSString",C,N,V_tabName
T@"VUITextLayout",R,N,V_textLayout
rentalExpirationTextLayout
T@"VUITextLayout",R,N,V_rentalExpirationTextLayout
groupedKeys
T@"NSArray",R,N,V_groupedKeys
groupMargin
T{UIEdgeInsets=dddd},R,N,V_groupMargin
badgeImageLayout
T@"TVImageLayout",R,N,V_badgeImageLayout
commonSenseMargin
T{UIEdgeInsets=dddd},R,N,V_commonSenseMargin
tomatoMeterMargin
T{UIEdgeInsets=dddd},R,N,V_tomatoMeterMargin
v16@?0@"<VUIMediaItemEntityTypesFetchControllerDelegate>"8
T@"<VUIMediaItemEntityTypesFetchControllerDelegate>",W,N,V_delegate
vui-page-control-margin
pageControlView
T@"UIView<VUIPageControlView>",&,N,V_pageControlView
pageControlBottomMarginNumber
T@"NSNumber",&,N,V_pageControlBottomMarginNumber
dictionary
T@"NSDictionary",&,N,V_dictionary
headerTextLayout
T@"VUITextLayout",R,N,V_headerTextLayout
middleSpacing
Td,R,N,V_middleSpacing
headerTitleLayout
T@"VUITextLayout",R,N,V_headerTitleLayout
headerSubtitleLayout
T@"VUITextLayout",R,N,V_headerSubtitleLayout
sourceTextLayout
T@"VUITextLayout",R,N,V_sourceTextLayout
headerBadgeLayout
T@"TVImageLayout",R,N,V_headerBadgeLayout
sourceBadgeLayout
T@"TVImageLayout",R,N,V_sourceBadgeLayout
reviewTableLayout
T@"VUIFeedbackTableLayout",R,N,V_reviewTableLayout
ratingBadgeLayout
T@"TVRatingBadgeLayout",R,N,V_ratingBadgeLayout
T{TVCornerRadii=dddd},N,V_borderRadii
T@"UIColor",&,N,V_darkHighlightColor
headerImagePadding
T{UIEdgeInsets=dddd},R,N,V_headerImagePadding
layoutType
Tq,R,N,V_layoutType
hidden
alpha
monitoredView
T@"UIView",&,N,V_monitoredView
interactionHandler
T@?,C,N,V_interactionHandler
panGestureRecognizer
T@"UIPanGestureRecognizer",&,N,V_panGestureRecognizer
enabled
TB,N,GisEnabled
PostPlayItemInterface
VUIJSMediaEntity: parseIdentifier: Unable to parse identifier - %@
%@|%@|%llu
%@|%@|%@|%llu
%@|%llu
Unexpected collection type: %@
Unexpected subtype: %@
mediaEntity
%llu
Unable to create a media entity type! (%@, %@, %@)
T@"VUIJSMediaEntityType",R,N
T@"NSString",R,C,N
T@"VUIJSMediaEntityType",&,N,V_type
T@"MPMediaEntity",&,N,V_mediaEntity
loadingLabel
T@"VUILabel",&,N,V_loadingLabel
indicatorView
T@"UIActivityIndicatorView",&,N,V_indicatorView
meta
next
VUIFamilySharingMediaEntitiesResponseMetadataParser
result
T@"AMSURLResult",&,N,V_result
ITunesVideoPurchaseResolution
VUIRestrictionsDidChangeNotification
VUIPreferredVideoFormatDidChangeNotification
%@-%@
-[VUISettingsManager init] not supported, use +sharedInstance instead
restrictions
preferredVideoFormat
T@"NSString",C,N,V_preferredVideoFormat
maxMovieRank
T@"NSNumber",C,N,V_maxMovieRank
maxTVShowRank
T@"NSNumber",C,N,V_maxTVShowRank
appInstallationAllowed
TB,R,N,GisAppInstallationAllowed
T@"VUIOfferLayout",&,N,V_layout
imageView
T@"_TVImageView",&,N,V_imageView
appIconView
T@"_TVImageView",&,N,V_appIconView
channelNameLabel
T@"VUILabel",&,N,V_channelNameLabel
subtitleLabel
T@"VUILabel",&,N,V_subtitleLabel
textLabel
T@"VUILabel",&,N,V_textLabel
T@"UIView",&,N,V_badgeView
tagsView
T@"VUIMediaTagsView",&,N,V_tagsView
versionsButton
T@"VUIButton",&,N,V_versionsButton
channelImageBackgroundView
T@"UIView",&,N,V_channelImageBackgroundView
TB,N,V_isEntitled
familyMemberImageView
T@"_TVImageView",&,N,V_familyMemberImageView
monogramSize
T{CGSize=dd},R,N
nameLabel
T@"VUILabel",&,N,V_nameLabel
monogramImageLayout
T@"TVImageLayout",&,N,V_monogramImageLayout
monogramView
T@"_TVMonogramView",&,N,V_monogramView
FE_0
limit
v24@?0@"AMSURLResult"8@"NSError"16
q24@?0@"VUIMediaEntity"8@"VUIMediaEntity"16
q24@?0@"VUIMediaItem"8@"VUIMediaItem"16
B24@?0@"VUIMediaEntity"8@"NSDictionary"16
mediaClient
T@"VUIMediaAPIClient",&,N,V_mediaClient
urlRequest
T@"NSURLRequest",&,N,V_urlRequest
responseMetadata
T@"VUIMediaAPIResponseMetadata",&,N,V_responseMetadata
desiredBatchSize
T@"NSNumber",&,N,V_desiredBatchSize
processedEntities
T@"NSMutableArray",&,N,V_processedEntities
loadingNextBatch
TB,N,V_loadingNextBatch
fetchAllEntities
TB,N,V_fetchAllEntities
resultLimit
T@"NSNumber",&,N,V_resultLimit
shouldCoalesceEpisodesToShows
TB,N,V_shouldCoalesceEpisodesToShows
shouldCoalesceEpisodesToSeasons
TB,N,V_shouldCoalesceEpisodesToSeasons
shouldGroupBySeason
TB,N,V_shouldGroupBySeason
orderEpisodesByEpisodeNumber
TB,N,V_orderEpisodesByEpisodeNumber
seasonIdentifierFilter
T@"NSString",&,N,V_seasonIdentifierFilter
appImageLayout
T@"TVImageLayout",&,N,V_appImageLayout
logoImageLayout
T@"TVImageLayout",&,N,V_logoImageLayout
progressBarLayout
T@"VUIProgressBarLayout",&,N,V_progressBarLayout
badgeLayout
T@"TVImageLayout",&,N,V_badgeLayout
T@"VUITextLayout",&,N,V_titleLayout
subtitleLayout
T@"VUITextLayout",&,N,V_subtitleLayout
textBadgeLayout
T@"VUITextBadgeLayout",&,N,V_textBadgeLayout
v16@?0@"NSTimer"8
NOW_PLAYING_STILL_WATCHING_MESSAGE
CONTINUE_WATCHING
v16@?0@"UIAlertAction"8
BACK
timeoutInterval
Td,N,V_timeoutInterval
q24@?0@"NSNumber"8@"NSNumber"16
genres
T@"NSArray",&,N,V_genres
hasFetchedGenres
TB,N,V_hasFetchedGenres
hasFetchedRecentPurchases
TB,N,V_hasFetchedRecentPurchases
hasFetchedMovies
TB,N,V_hasFetchedMovies
hasFetchedShows
TB,N,V_hasFetchedShows
hasRecentPurchases
TB,N,V_hasRecentPurchases
hasMovies
TB,N,V_hasMovies
hasShows
TB,N,V_hasShows
ownerIdentifier
T@"NSString",&,N,V_ownerIdentifier
Subclasses must override _configureWithCollectionView and not call super
stackView
T@"VUILibraryStackView",R,N,V_stackView
stackCollectionView
T@"UICollectionView",R,N,V_stackCollectionView
localizedRating
localizedReason
ratingLevel
ratingProvider
cast
screenwriters
directors
producers
Unexpected MPMediaItem type passed to -initWithMediaLibrary:mediaItem:requestedProperties:
@"NSOrderedSet"16@?0@"NSArray"8
%llu_%@_%@
vui_mediaEntityType
T@"VUIMediaEntityType",R,N
vui_resolution
T@"NSNumber",R,N
vui_colorCapability
vui_audioCapability
vui_HLSResolution
vui_HLSColorCapability
vui_HLSAudioCapability
vui_coverArtImageIdentifier
vui_previewFrameImageIdentifier
vui_showIdentifier
T@"NSObject<VUIMediaEntityIdentifier>",R,N
vui_seasonIdentifier
vui_studio
vui_credits
T@"VUIMediaItemCredits",R,N
vui_contentRating
T@"_TVContentRating",R,N
vui_isLocal
vui_isPlayable
vui_extrasURL
T@"NSURL",R,N
vui_playedState
vui_rentalEndDate
T@"NSDate",R,N
vui_rentalPlaybackEndDate
vui_rentalExpirationDate
vui_assetType
v40@?0@"NSDictionary"8{_NSRange=QQ}16^B32
Tq,N,V_textStyle
maximumContentSizeCategory
T@"NSString",&,N,V_maximumContentSizeCategory
fontFamily
T@"NSString",&,N,V_fontFamily
Tq,N,V_fontWeight
Td,N,V_fontSize
fontTraits
TI,N,V_fontTraits
Tq,N,V_fontFeature
T{UIEdgeInsets=dddd},N,V_margin
color
T@"UIColor",&,N,V_color
darkColor
T@"UIColor",&,N,V_darkColor
T@"UIColor",&,N,V_highlightOrSelectedColor
T@"UIColor",&,N,V_darkHighlightOrSelectedColor
shouldUpdateTextColor
TB,N,V_shouldUpdateTextColor
seeMoreTextColor
T@"UIColor",&,N,V_seeMoreTextColor
darkSeeMoreTextColor
T@"UIColor",&,N,V_darkSeeMoreTextColor
compositingFilter
T@"NSString",&,N,V_compositingFilter
darkCompositingFilter
T@"NSString",&,N,V_darkCompositingFilter
Tq,N,V_textTransform
Tq,N,V_alignment
TQ,N,V_numberOfLines
TQ,N,V_numberOfLinesAXSmall
TQ,N,V_numberOfLinesAXLarge
Td,N,V_minimumScaleFactor
T@"NSShadow",&,N,V_shadow
T@"NSNumber",&,N,V_letterSpacing
lineBreakMode
Tq,N,V_lineBreakMode
shouldAllowParagraphHyphenation
TB,N,V_shouldAllowParagraphHyphenation
blendMode
Ti,N,V_blendMode
TB,N,V_alwaysFocusable
Unknown
BackgroundTrailer
UpNext
PostPlay
AnotherPlaybackStarted
TimedOutWhilePaused
VUIAuthenticationManagerAccountStoreDidChangeNotification
v24@?0@"SSAuthenticateResponse"8@"NSError"16
_authRequest
T@"SSAuthenticateRequest",&,N,V__authRequest
_isObservingAccountStoreChange
TB,N,V__isObservingAccountStoreChange
documentDataSources
actionDataSource
tabIdentifier
actionFirst
localLibraryDataSource
nativePageSource
T@"NSArray",C,N,V_documentDataSources
action
T@"VUIAction",&,N,V_action
T@"NSString",&,N,V_tabIdentifier
localLibraryLink
T@"NSDictionary",C,N,V_localLibraryLink
nativePageName
T@"NSString",&,N,V_nativePageName
TB,N,V_actionFirst
@24@?0@"VUIiTunesKeyValueStoreSyncItem"8Q16
domain
conflict-detection
kvs-sync
VUISYNCKVS
#T:[%@%p] #Error #%@ : Got response from kvs-sync: %@ 
Main:
#T:[%@%p] #Error #%@ : kvs-sync response status is %@ 
rejected
put-ok
peer-ops
puts
v32@?0@"NSURLResponse"8@"NSDictionary"16@"NSError"24
T@"NSString",R,N,V_key
T@"NSData",R,N,V_value
success
TB,R,N,V_success
domainVersion
T@"NSString",R,N,V_domainVersion
peerPutItems
T@"NSArray",R,N,V_peerPutItems
putOKKeys
T@"NSArray",R,N,V_putOKKeys
rejectedKeys
T@"NSArray",R,N,V_rejectedKeys
T@"<VUILibraryDataSourceDelegate>",W,N,V_delegate
topic
cbids
dbids
ibids
sbids
vppaState
locationAuthorization
appVersion
baseVersion
capacityData
capacityDataAvailable
capacityDisk
capacitySystem
capacitySystemAvailable
clientCorrelationKey
clientEventId
clientId
connection
cookies
dsId
environment
environmentBuild
eventVersion
experimentId
hardwareFamily
hardwareModel
hostApp
hostAppVersion
isSignedIn
language
mescalStatus
osBuildNumber
osLanguages
osVersion
pageHistory
pixelRatio
platformId
platformName
postTime
resourceRevNum
screenHeight
screenWidth
storeFront
storeFrontHeader
timezoneOffset
userAgent
userType
windowOuterHeight
windowOuterWidth
xpDelegatesInfo
xpPostFrequency
xpSendMethod
xpVersionMetricsKit
xpViewablePercentage
xpViewableThreshold
click
impressions
media
search
enter
exit
account
pageRender
pageType
pageId
pageDetails
pageContext
pageUrl
searchTerm
isAdultContent
dialogType
dialogId
targetId
actionDetails
location
actionUrl
offerType
serviceId
openUrl
refApp
extRefUrl
destinationUrl
term
consentType
pageRequestTime
pageAppearTime
modelRenderStartTime
modelRenderEndTime
resourceRequestStartTime
resourceRequestEndTime
pageUserInteractiveTime
pageEndTime
eventType
primaryTerms
T@"NSDictionary",R,N
baseTerms
T@"NSArray",R,N
metricsKitTerms
filteredTerms
None
Season
Show
defaultsSwitch
T@"UISwitch",&,N,V_defaultsSwitch
textField
T@"UITextField",&,N,V_textField
defaults
T@"VUIDebugViewDefaults",&,N,V_defaults
list-chevron
accessoryView
T@"UIImageView",&,N,V_accessoryView
onVideoSubscriberAccountChanged
wlAccountChannels
providerId
providedAppTitles
providerInfo
v16@?0@"VSAccountChannels"8
accountStore
T@"VSAccountStore",&,N,V_accountStore
imageLoadOperation
T@"NSOperation<VUIImageLoadingOperation>",&,N,V_imageLoadOperation
requestCount
TQ,N,V_requestCount
object
The %@ parameter must be an instance of %@
requestToken
[VUIAsynchronousWorkToken class]
Subclasses must override _imageLoaderIdentifier and not call super
Subclasses must override _imageLoadParamsForImageLoaderObject and not call super
Subclasses must override _imageLoadOperationWithParams and not call super
%lux%lu
crop
imageLoadContextsByImageIdentifier
T@"NSMutableDictionary",&,N,V_imageLoadContextsByImageIdentifier
imageLoadOperationQueue
T@"NSOperationQueue",&,N,V_imageLoadOperationQueue
validateCell
failedRulesets
ruleset
failedRules
passedRules
filteredRules
passedRulesets
filteredRulesets
Passed Rules
ruleLabel
"%@", 
Filtered Rules
onFailMapList
ruleResult
event
T@"NSDictionary",&,N,V_event
results
T@"NSArray",&,N,V_results
jsPropertyStrings
T@"NSSet",R,N,Gwlk_jsPropertyStrings
SFRounded
NSCTFontUIFontDesignRounded
T@"UILabel",&,N,V_titleLabel
floatingView
T@"_UIFloatingContentView",&,N,V_floatingView
shouldAppearSelected
TB,N,V_shouldAppearSelected
sortAsName
propertyType
propertyValueClassName
allowsDefaultValue
defaultValue
sourcePropertyNames
retrievesSourcePropertiesAtFetch
sourceSupportsFiltering
sourceFilterValueBlock
sourceFilterBlock
Property value class names cannot be derived for object based attributes
T@"NSString",C,N,V_name
T@"NSString",C,N,V_sortAsName
TQ,N,V_propertyType
T@"NSString",C,N,V_propertyValueClassName
T@,&,N,V_defaultValue
TB,N,V_allowsDefaultValue
T@"NSSet",C,N,V_sourcePropertyNames
TB,N,V_retrievesSourcePropertiesAtFetch
TB,N,V_sourceSupportsFiltering
T@?,C,N,V_sourceFilterValueBlock
T@?,C,N,V_sourceFilterBlock
ShowDetailEpisodeShelfMainSection
SEASON_%@
@"UICollectionViewCell"32@?0@"UICollectionView"8@"NSIndexPath"16@24
v32@?0@"VUIMediaItem"8Q16^B24
cellWidth
Td,N,V_cellWidth
cellSize
T{CGSize=dd},N,V_cellSize
episodes
T@"NSArray",&,N,V_episodes
lastFocusedIndexPath
T@"NSIndexPath",&,N,V_lastFocusedIndexPath
shelfTitleView
T@"UIView",&,N,V_shelfTitleView
seasonVisualEffectLabel
T@"VUIVisualEffectLabel",&,N,V_seasonVisualEffectLabel
T@"VUIMediaCollection",&,N,V_season
sizingCell
T@"VUITVLibraryEpisodeListCell",&,N,V_sizingCell
diffableDataSource
T@"UICollectionViewDiffableDataSource",&,N,V_diffableDataSource
CardShadowFocused
shadowView
T@"UIView",&,N,V_shadowView
shadowAlpha
Td,N,V_shadowAlpha
shadowCardSize
T{CGSize=dd},N,V_shadowCardSize
shadowCardImage
T@"UIImage",&,N,V_shadowCardImage
dataDictionary
T@"NSDictionary",C,N,V_dataDictionary
T@"VUIRouterDataSource",&,N,V_routerDataSource
VUIPlayHistoryUpdatedNotification
-[VUIMarkAsWatchedRequestManager init] not supported, use +sharedInstance instead
ongoingItemIDOperationDictionary
T@"NSMutableDictionary",&,N,V_ongoingItemIDOperationDictionary
com.apple.amp.ae.validator.manifest.Video.AllRulesets
com.apple.amp.ae.validator.manifest
https://ae-validator-service.amp.apple.com
/v1/validate
accept
----------V2ymHFg03ehbqgZCaKO6jy
multipart/form-data; boundary=%@
events
NSJSONSerialization error: %@
JSON string for Gladiator %@
manifest
figarojson
false
singleResult
--%@
Content-Disposition: form-data; name="%@"
--%@--
Error in Gladiator Response %@
Error Parsing Gladiator JSON response %@
v32@?0@"NSData"8@"NSURLResponse"16@"NSError"24
ruleResults
FILTERED
com.apple.amp.metrics.validator.
/v1/cache/manifest/
Error in Gladiator rulesset Response %@
rulesets
T@"NSArray",&,N,V_rulesets
layoutFactory
T@"VUICardViewLayoutFactory",R,N,V_layoutFactory
imageSize
T{CGSize=dd},N,V_imageSize
appImageView
T@"_TVImageView",&,N,V_appImageView
labelViews
T@"NSArray",C,N,V_labelViews
overlayView
T@"UIView",&,N,V_overlayView
button
T@"VUIButton",&,N,V_button
debugString
T@"NSString",C,N,V_debugString
mediaPlayer
onDataSourceDidChange
onDataSourceWillChange
onIsUpdateInProgressChanged
onMediaLibraryChanged
onSyncGenerationChanged
addedAfter
additionalProperties
sortKeys
storeIdentifier
homeVideos
onItemsChanged
added
removed
childItems
image
itemIdentifier
playState
missing-artwork
missing-item
configuration-error
progress
com.apple.watchlist.js.mediaplayer
com.apple.watchlist.js.mediaplayer,work
mediaType
persistentID
v16@?0@"UIImage"8
v12@?0f8
v32@?0@"MPMediaItem"8Q16^B24
com.apple.tv
VUIJSMediaPlayer
queryDataSource
T@"MPUQueryDataSource",&,N,V_queryDataSource
orderedItemsMap
T@"VUIOrderedItemsMap",&,N,V_orderedItemsMap
fetchOperationQueue
T@"NSOperationQueue",&,N,V_fetchOperationQueue
fetchCompletionOperationQueue
T@"NSOperationQueue",&,N,V_fetchCompletionOperationQueue
Paused
downloadProgress
bytesToDownload
bytesDownloaded
isDownloadInProgress
supportsCancellation
supportsPausing
TQ,N,V_status
Td,N,V_downloadProgress
TB,N,V_supportsCancellation
TB,N,V_supportsPausing
TQ,N,V_bytesToDownload
TQ,N,V_bytesDownloaded
downloadInProgress
TB,R,N,GisDownloadInProgress
overrideDelayLoadingImage
COUNT
EXPIRED
_DAYS
_HOURS
_MINUTES
locStringPrefix
T@"NSString",C,N,V_locStringPrefix
expiryUpdateTimer
T@"NSTimer",&,N,V_expiryUpdateTimer
expirationDate
T@"NSDate",C,N,V_expirationDate
T@"<VUIRentalExpirationLabelDelegate>",W,N,V_delegate
com.apple.VideosUI.UpNextRequestDidFinishNotification
VUIUpNextRequestDidFinishNotification
-[VUIUpNextRequestManager init] not supported, use +sharedInstance instead
upNextConfirmation
TV.Hud.AddedToUpNext
UP_NEXT_HUD_REMOVE_TEXT
ongoingCanonicalIDOperationDictionary
T@"NSMutableDictionary",&,N,V_ongoingCanonicalIDOperationDictionary
Lorem
T@"UIView",&,N,V_separatorView
animatedTitleLabel
T@"_TVAnimatedLabel",&,N,V_animatedTitleLabel
floatingContentView
T@"VUIEpisodeLockupFloatingContentView",&,N,V_floatingContentView
dataContentView
T@"UIView",&,N,V_dataContentView
T@"VUITVEpisodeInformationLayout",&,N,V_layout
episodeLabel
T@"VUILabel",&,N,V_episodeLabel
metadataView
T@"VUIMediaTagsView",&,N,V_metadataView
TQ,N,V_state
universal
appsApple
-init is not supported. Use -initWithChannel: title: message: placeholder:
APP_INSTALL_ACTION_TITLE_DONE
APP_INSTALL_ACTION_TITLE_INSTALLING
APP_INSTALL_ACTION_TITLE_CLOSE
VUIAppInstallConfirmationViewController - error, continuing  without app adam id
VUIAppInstallConfirmationViewController - lockup lookup complete
APP_INSTALL_OFFERS_IN_APP_PURCHASES
VUIAppInstallConfirmationViewController - lockup lookup failed: %@
v24@?0@"SSLookupItem"8@"NSError"16
TVApp.appInstall
caller
v24@?0@"SSLookupResponse"8@"NSError"16
barButtonItem
T@"UIBarButtonItem",&,N,V_barButtonItem
confirmationView
T@"VUIAppInstallConfirmationView",&,N,V_confirmationView
T@"<WLKInstallable>",&,N,V_installable
itemOffer
T@"SSLookupItemOffer",&,N,V_itemOffer
cancelationHandler
T@?,C,N,V_cancelationHandler
actionHandler
T@?,C,N,V_actionHandler
appStoreHandler
T@?,C,N,V_appStoreHandler
T@"UIButton",R,N
T@"VUIAppInstallLockup",R,N
disableLocalAsset
T@"VUILabel",R,N,V_titleLabel
T@"VUILabel",R,N,V_subtitleLabel
loading
TB,N,V_loading
detail
cachedKeysOrder
T@"NSDictionary",&,N,V_cachedKeysOrder
array
T@"NSArray",&,N,V_array
@"UIViewController"16@?0@"UIViewController"8
T@"NSArray",&,N,V_seasons
VUINowPlayingMetadataArtworkURLString
VUINowPlayingMetadataArtworkImageProxy
VUINowPlayingMetadataButtonsMetadata
VUINowPlayingMetadataButtonImage
ageRatingBadge
T@"VUITextBadge",&,N,V_ageRatingBadge
ageRatingLabel
T@"UILabel",&,N,V_ageRatingLabel
icon
T@"UIImage",&,N,V_icon
ageRating
T@"NSString",C,N,V_ageRating
T@"NSString",C,N,V_iAP
T@"NSString",C,N,V_subtitle
installView
T@"VUIAppInstallView",R,N
metadataStackView
T@"UIStackView",&,N,V_metadataStackView
canFocus
TB,N,V_canFocus
T@"NSNumber",C,N,V_persistentID
v24@?0@"NSURL"8@"NSError"16
T@"TVApplicationController",&,N,V_applicationController
bootURLController
T@"VUIBootURLController",&,N,V_bootURLController
navigationController
T@"UINavigationController",&,N,V_navigationController
localPath
skipIntroStart
skipIntroDuration
skipIntroTarget
ratingAdvisoryInfo
TVPMediaItemMetadata
v32@?0@"NSString"8@16^B24
/var/mobile/Media/PlaybackOverrides.plist
overrides
urlToOverride
adamIDToOverride
tvpPlaylist
T@"TVPPlaylist",&,N,V_tvpPlaylist
overridesStartTimeWithResumeTime
TB,N,V_overridesStartTimeWithResumeTime
playbackStartReason
TQ,N,V_playbackStartReason
hasProgress
TB,R,N,V_hasProgress
showsSecondaryVideoView
TB,N,V_showsSecondaryVideoView
automaticPlaybackStart
TB,N,GisAutomaticPlaybackStart,V_automaticPlaybackStart
automaticPlaybackStop
TB,N,GisAutomaticPlaybackStop,V_automaticPlaybackStop
playbackStopReason
TQ,N,V_playbackStopReason
restrictionsAlreadyUnlocked
TB,N,V_restrictionsAlreadyUnlocked
shouldDelayLoadingImage
TB,N,V_shouldDelayLoadingImage
allowsPictureInPicture
TB,N,V_allowsPictureInPicture
playbackDelayInterval
Td,N,V_playbackDelayInterval
alphaImageProxy
T@"TVImageProxy",&,N,V_alphaImageProxy
dataViews
T@"NSArray",&,N,V_dataViews
T@"VUIProductMetadataLayout",&,N,V_layout
T@"VUIMediaLibrary",&,N,V_mediaLibrary
fetchController
T@"VUIMediaEntitiesFetchController",&,N,V_fetchController
overallLength
audioLocale
closedCaptionLocale
subtitleLocale
isOffline
playbackFocus
foreground
background
streaming
downloading
downloaded
videoColorRange
Dolby Vision
featureCanonicalId
featureReferenceId
featureExternalId
assetId
featureAssetId
canonicalShowId
canonicalSeasonId
sensitiveContentType
adult
programmingType
videoOnDemand
assetPlacement
feature
unknown
preroll
midroll
postroll
isSkippable
removedCanonicalIDs
T@"NSSet",C,N,V_removedCanonicalIDs
Unexpected type passed to -initWithIdentifier:type:
The delayInSeconds parameter must be greater than 0
The eventType for refresh must be either foregroundTTL, refreshTTL or activeTTL
delayInSeconds
TQ,N,V_delayInSeconds
previewImageData
fallbackImageData
baseUrl
B24@?0@8@"NSDictionary"16
geoLocationEnforced
metrics
TB,N,V_geoLocationEnforced
dialogMetrics
T@"NSDictionary",&,N,V_dialogMetrics
offersInterface
com.apple.videosui.VUIMediaLibraryFetchControllerQueue.serialProcessingQueue
v16@?0@"VUIMediaLibraryFetchControllerQueue"8
mutableFetchControllers
T@"NSMutableArray",&,N,V_mutableFetchControllers
paused
TB,N,GisPaused,V_paused
shouldFetchOnResume
TB,N,V_shouldFetchOnResume
currentFetchOperation
T@"VUIMediaLibraryFetchControllerQueueOperation",&,N,V_currentFetchOperation
delayContentsChangeOperation
T@"VUIDelayOperation",&,N,V_delayContentsChangeOperation
serialFetchOperationQueue
T@"NSOperationQueue",&,N,V_serialFetchOperationQueue
nowPlayingObserver
T@"VUINowPlayingObserver",&,N,V_nowPlayingObserver
T@"<VUIMediaLibraryFetchControllerQueueDelegate>",W,N,V_delegate
idType
impressionId
impressionIndex
impressionParentId
impressionType
mainValues
T@"NSDictionary",&,N,V_mainValues
otherValues
T@"NSDictionary",&,N,V_otherValues
orderedOtherKeys
T@"NSArray",&,N,V_orderedOtherKeys
parentId
v32@?0@"VUIProductSectionInfoViewModel"8Q16^B24
defaultFocusView
T@"UIView",&,N,V_defaultFocusView
prototypeInfoHeaderLabel
T@"VUILabel",&,N,V_prototypeInfoHeaderLabel
T@"VUILabel",&,N,V_headerView
infoViews
T@"NSArray",&,N,V_infoViews
footerView
T@"UIView",&,N,V_footerView
shouldDenyOnCancel
suppressWelcomeVideoAddOnOptIn
NewVPPAConsentPrompt
requireVPPAStateUpdate
VUIAccessErrorDomain
VUIAccessViewControllerInitException
-init not supported. Use -initWithCompletionHandler:
VUIAccessViewController: Error -- no channel for %@
VUIAccessViewController: failed to sync settings after user gave consent. Prompt alert.
VUIAccessViewController: deny access for %@
VUIAccessViewController: failed to sync settings after user declined consent. Failing silently
VUIAccessViewController: re-routing menu gesture to dismiss.
ACCESS_MAIN_TITLE_PLURAL
ACCESS_MAIN_TITLE_PLURAL_RETURNING
ACCESS_MAIN_TITLE_FORMAT
ACCESS_MAIN_TITLE_FORMAT_RETURNING
ACCESS_DENY_FINAL
ACCESS_BODY_FORMAT_PLURAL_TV
ACCESS_BODY_FORMAT_PLURAL_RETURNING_TV
ACCESS_BODY_FORMAT_TV
ACCESS_BODY_FORMAT_RETURNING_TV
ACCESS_BODY_PLURAL
ACCESS_BODY_PLURAL_RETURNING
ACCESS_BODY
ACCESS_BODY_RETURNING
AccessUnknownErrorTitle
AccessUnknownErrorMessage
AccessUnknownErrorButton
com.apple.TVAccessViewService
VUIAccessViewController: failed to sync settings from cloud
VUIAccessViewController: grant access for %@
VUIAccessViewController: Opting user in.
VUIAccessViewController - resolveBundleIDs: proposed IDs: %@
VUIAccessViewController - handling error: %@
VUIAccessViewController - resolveBundleIDs: Error, failed to sync settings
VUIAccessViewController - resolveBundleIDs: Error, no channels
VUIAccessViewController - resolved bundles: %@
v24@?0@"WLKServerConfigurationResponse"8@"NSError"16
id: 
Impression Id: 
Index: 
Parent: 
(%@)
typeLabel
T@"VUILabel",&,N,V_typeLabel
staticIDLabel
T@"VUILabel",&,N,V_staticIDLabel
idLabel
T@"VUILabel",&,N,V_idLabel
idTypeLabel
T@"VUILabel",&,N,V_idTypeLabel
staticImpressionIdLabel
T@"VUILabel",&,N,V_staticImpressionIdLabel
impressionIdLabel
T@"VUILabel",&,N,V_impressionIdLabel
staticImpressionIndexLabel
T@"VUILabel",&,N,V_staticImpressionIndexLabel
impressionIndexLabel
T@"VUILabel",&,N,V_impressionIndexLabel
staticImpressionParentLabel
T@"VUILabel",&,N,V_staticImpressionParentLabel
impressionParentIdLabel
T@"VUILabel",&,N,V_impressionParentIdLabel
impressionParentNameLabel
T@"VUILabel",&,N,V_impressionParentNameLabel
T@"NSString",C,N
idStr
impressionParentName
product browser media controller
transitionAnimationEnabled
TB,N,GisTransitionAnimationEnabled,V_transitionAnimationEnabled
sportingEventId
leagueContext
scoreboard
scores
didCalculatedSize
TB,N,V_didCalculatedSize
scorecardSize
T{CGSize=dd},N,V_scorecardSize
interitemSpacing
Td,N,V_interitemSpacing
rowScoreValueSizes
T@"NSArray",&,N,V_rowScoreValueSizes
columnWidths
T@"NSArray",&,N,V_columnWidths
rowHeights
T@"NSArray",&,N,V_rowHeights
darkMaterialImage
T@"UIImage",&,N,V_darkMaterialImage
delegateRespondsToBackgroundImageForScorecardViewMaterial
TB,N,V_delegateRespondsToBackgroundImageForScorecardViewMaterial
delegateRespondsToBackgroundBlendModeForScoreValueInRowAtIndex
TB,N,V_delegateRespondsToBackgroundBlendModeForScoreValueInRowAtIndex
T@"<VUIScorecardViewDelegate>",W,N,V_delegate
scoreboardLayout
T@"VUIScoreboardLayout",&,N,V_scoreboardLayout
T@"NSString",R,N,V_canonicalId
T@"NSDictionary",R,N,V_leagueContext
T@"NSArray",R,N,V_scores
showScoreboard
TB,R,N,V_showScoreboard
assetType
seasonTitle
seasonIdentifier
episodeIndexInSeries
hasBeenPlayed
playCount
bookmark
downloadExpirationDate
creationDate
modifiedDate
lastPlayedDate
mediaPlayerMediaItem
T@"MPMediaItem",R,N
T@"NSNumber",R,C,N
T@"NSNumber",R,C,N,V_isPlayable
T@"NSURL",R,C,N
T@"NSObject<VUIMediaEntityIdentifier>",R,C,N
T@"VUIMediaItemCredits",R,C,N
T@"NSDate",R,C,N
T@"NSNumber",C,N
com.apple.videosui.VUIAirTrafficController.ATConnection
connectionQueue
T@"NSObject<OS_dispatch_queue>",&,N,V_connectionQueue
observers
T@"NSMutableSet",&,N,V_observers
cardView
T@"VUIFeedbackView",&,N,V_cardView
T@"UIImage",&,N,V_image
showInfo.
ATVBookmarkServiceUpdatedNotification
VUIBookmarkWillUpdateNotification
BOOKMARKS
hasBeenRented
markedAsUnwatched
timestamp
bookmarkKey
T@"VUIBookmarkKey",&,N,V_bookmarkKey
uppRecord
T@"VUIUniversalPlaybackPositionRecord",&,N,V_uppRecord
VUIBookmarkService
com.apple.ATVBookmarkServiceUpdateQueue
tv-show
extras-movie
%@%@.%@
#T:[%@%p] #Error #%@ : Cannot save bookmark with nil key. bookmark=%@, identifier=%@ 
v32@?0@"NSString"8@"VUIBookmark"16^B24
dateOfLastSyncCompletion
T@"NSDate",&,N,V_dateOfLastSyncCompletion
numSyncsInProgress
TQ,N,V_numSyncsInProgress
syncInProgress
TB,N,V_syncInProgress
syncHasFinishedRecently
cardInsets
Td,N,V_cardInsets
cardUIEnabled
TB,N,V_cardUIEnabled
B24@?0@"VUIButton"8@"NSDictionary"16
q24@?0@"VUIButton"8@"VUIButton"16
shouldAutoHighlight
TB,N,V_shouldAutoHighlight
bannerView
T@"VUIProductBannerView",&,N,V_bannerView
upsellView
T@"VUIUpsellOfferView",&,N,V_upsellView
bgImageProxy
T@"TVImageProxy",&,N,V_bgImageProxy
bgImageView
T@"UIImageView",&,N,V_bgImageView
delay
genreIdentifiers
T@"NSArray",&,N,V_genreIdentifiers
T@"NSString",&,N,V_genreTitle
overlayType
Tq,N,V_overlayType
button-play
itunes-extras-badge
PreloadAsset-Generic16x9
PreloadAsset-Dark-Generic16x9
urlBag
code
Array
Bool
Double
Integer
String
Dictionary
v28@?0@"NSArray"8B16@"NSError"20
v28@?0@"NSNumber"8B16@"NSError"20
v28@?0@"NSString"8B16@"NSError"20
v28@?0@"NSURL"8B16@"NSError"20
v28@?0@"NSDictionary"8B16@"NSError"20
error is nil
VUIAMSBagValueTypes
VUIPlistMediaDatabaseContentsDidChangeNotification
com.apple.videosui.VUIPlistMediaDatabase.serialDispatchQueue
An entity must have an identifier to be added to the library
A show identifier must be provided to add a season to the library
A show identifier must be provided to add an episode to the library
A season identifier must be provided to add an episode to the library
v32@?0@"NSString"8@"VUIPlistMediaDatabaseShow"16^B24
v32@?0@"NSString"8@"VUIPlistMediaDatabaseItem"16^B24
fileURL
T@"NSURL",C,N,V_fileURL
serialDispatchQueue
T@"NSObject<OS_dispatch_queue>",&,N,V_serialDispatchQueue
databaseFileDispatchSource
T@"NSObject<OS_dispatch_source>",&,N,V_databaseFileDispatchSource
homeVideoByIdentifier
T@"NSMutableDictionary",&,N,V_homeVideoByIdentifier
movieByIdentifier
T@"NSMutableDictionary",&,N,V_movieByIdentifier
movieRentalByIdentifier
T@"NSMutableDictionary",&,N,V_movieRentalByIdentifier
showByIdentifier
T@"NSMutableDictionary",&,N,V_showByIdentifier
movieRentals
sendingPID
labelName
T@"NSString",C,N,V_labelName
VUIGenresRequestResponseParser
appIconLayout
T@"TVImageLayout",&,N,V_appIconLayout
logoLayout
T@"TVImageLayout",&,N,V_logoLayout
channelNameTextLayout
T@"VUITextLayout",&,N,V_channelNameTextLayout
T@"VUITextLayout",&,N,V_titleTextLayout
subtitleTextLayout
T@"VUITextLayout",&,N,V_subtitleTextLayout
belowCardTextLayout
T@"VUITextLayout",&,N,V_belowCardTextLayout
tagsLayout
T@"VUIMediaTagsViewLayout",&,N,V_tagsLayout
versionsButtonLayout
T@"VUIButtonLayout",&,N,V_versionsButtonLayout
Td,N,V_borderWidth
T@"UIColor",&,N,V_borderColor
addedEntityIDs
removedEntityIDs
T@"NSSet",C,N,V_addedEntityIDs
T@"NSSet",C,N,V_removedEntityIDs
Unsupported comparison (%lu)
Unsupported media entity type (%@)
Invalid season Identifier (%@)
Unsupported operator type (%lu)
ContentViewTypeLoading
ContentViewTypeContent
ContentViewTypeNoContent
ContentViewTypeUnspecified
contentHasBeenDeleted
TB,N,V_contentHasBeenDeleted
currentView
T@"UIView",&,N,V_currentView
rootView
T@"UIView",&,N,V_rootView
currentContentViewType
TQ,N,V_currentContentViewType
contentView
T@"UIView",&,N,V_contentView
noContentErrorTitle
T@"NSString",C,N,V_noContentErrorTitle
noContentErrorMessage
T@"NSString",C,N,V_noContentErrorMessage
contentHasBeenManuallyDeleted
TB,N,V_contentHasBeenManuallyDeleted
deletedContentErrorMessage
T@"NSString",C,N,V_deletedContentErrorMessage
logName
T@"NSString",&,N,V_logName
VUITVLibraryEpisodeListCell
EPISODE_%@
isFocusWithinCell
TB,N,V_isFocusWithinCell
selectingView
T@"UIView<TVAuxiliaryViewSelecting>",&,N,V_selectingView
imageViewElement
T@"IKViewElement",&,N,V_imageViewElement
informationViewElement
T@"IKViewElement",&,N,V_informationViewElement
press
T@"UIPress",&,N,V_press
T@"UIView",&,N,V_imageView
mediaItem
T@"VUIMediaItem",&,N,V_mediaItem
informationView
T@"VUITVEpisodeInformationView",&,N,V_informationView
T@"<VUITVLibraryEpisodeListCellDelegate>",W,N,V_delegate
T@"UIButton",&,N,V_button
hasIAP
TB,N,V_hasIAP
T@"UIView",&,N,V_stackView
T@"VUIEditorialCellLayout",&,N,V_layout
T@"VUIFavoriteBannerView",&,N,V_bannerView
bannerLayout
T@"VUIFavoriteBannerLayout",&,N,V_bannerLayout
Td,N,V_width
storeDownload
T@"MPStoreDownload",&,N,V_storeDownload
Use [VUINowPlayingViewModel initWithModel] instead
START_PLAYBACK_FROM_BEGINNING
INFO_AND_EXTRAS
MORE_EPISODES
livePlayback
TB,N,GisLivePlayback,V_livePlayback
currentMediaType
T@"NSString",C,N,V_currentMediaType
T@"NSString",C,N,V_showCanonicalID
T@"NSDictionary",&,N,V_metadata
logoImageDownloader
T@"VUIVideoAdvisoryLogoImageDownloader",&,N,V_logoImageDownloader
ratingImage
T@"UIImage",&,N,V_ratingImage
currentMediaATVShow
TB,N,GisCurrentMediaATVShow,V_currentMediaATVShow
currentMediaTitle
autoPlay
TB,R,N,GcanAutoPlay
includesProductPageButton
TB,N,V_includesProductPageButton
autoPlayedEpisodesCount
TQ,N,V_autoPlayedEpisodesCount
initialPlaybackStartDate
T@"NSDate",&,N,V_initialPlaybackStartDate
revision
TQ,N,V_revision
prefersDescriptionOnPhoneSizeClass
subscribed
cover-art-url
supports-layered-image
template-url
full-url
full-token
v16@?0@"NSArray"8
T@"VUIUpNextButtonProperties",R,N
stackViewWidthConstraint
T@"NSLayoutConstraint",&,N,V_stackViewWidthConstraint
T@"VUIUpNextButtonProperties",&,N,V_properties
punchoutURLWithoutAssociatedPlayable
T@"NSURL",R,N,V_punchoutURLWithoutAssociatedPlayable
VUIPlistMediaEntityPropertyDidChange
VUIPlistMediaEntityPropertyDidChangePropertyNameKey
VUIPlistMediaEntityPropertyDidChangePropertyValueKey
contentDescription
coverArtURL
T@"NSString",C,N,V_genreTitle
T@"NSString",C,N,V_contentDescription
T@"NSURL",C,N,V_coverArtURL
local
T@"NSNumber",R,C,N,GisLocal
VUIClearFromPlayHistoryRequestDidFinishNotification
VUIRemoveFromPlayHistoryRequestDidFinishNotification
-[VUIRemoveFromPlayHistoryRequestManager init] not supported, use +sharedInstance instead
ongoingDeleteIDOperationDictionary
T@"NSMutableDictionary",&,N,V_ongoingDeleteIDOperationDictionary
SportsInterface
getScores
TB,N,V_success
progressTimer
T@"NSObject<OS_dispatch_source>",&,N,V_progressTimer
progressBlock
T@?,C,N,V_progressBlock
T@"VUICardView",&,N,V_cardView
T@"VUICardViewLayoutFactory",&,N,V_layoutFactory
addedToDate
mediaItemCount
The identifier parameter must conform to VUIMediaEntityIdentifierInternal
q24@?0@"VUIMediaEntityGroup"8@"VUIMediaEntityGroup"16
showIdentifier
showTitle
wlSettings
onSettingsChange
onPreferencesChange
com.apple.onboarding.tvapp
baseURL
protocolVersion
VUIJSSettingsInterface: _handleSettingsDidChange
VUIJSSettingsInterface: firing onSettingsChange callback
FPSKeyDeletionInfo
additionalFPSRequestParamsJSONData
T@"NSData",&,D,N
contentID
T@"NSString",C,D,N
dsid
T@"NSNumber",C,D,N
T@"NSDate",C,D,N
T@"NSURL",C,D,N
fpsNonceURL
keyData
keyURI
playbackExpirationStartDate
FPSKeyInfo
allowsManualRenewal
TB,D,N
isLowValue
renewalDate
renewalInterval
retrievalDate
video
T@"VUIVideoManagedObject",&,D,N
ImageData
imageInfo
T@"VUIImageInfoManagedObject",&,D,N
ImageInfo
canonicalHeight
Td,D,N
canonicalWidth
imageType
Tq,D,N
urlFormat
imageData
T@"VUIImageDataManagedObject",&,D,N
Movie
TVEpisode
episodeNumberInSeason
episodeNumberInSeries
T@"VUITVSeasonManagedObject",&,D,N
series
T@"VUITVSeriesManagedObject",&,D,N
TVSeason
T@"NSSet",&,D,N
TVSeries
imageInfos
TVSeriesImageInfo
Video
adamID
bookmarkTime
bookmarkTimeStamp
brandID
brandName
contentRatingDomain
contentRatingRank
dateAdded
downloadTaskIdentifier
downloadURL
externalID
frequencyOfAgeConfirmation
genreName
localPlaybackRelativeFilePath
localPlaybackURL
mediaMetricsJSONData
referenceID
requiredAgeForPlayback
rtcServiceIdentifier
vpafMetricsJSONData
fpsKeyInfo
VideoImageInfo
fetchReason
fetchResponses
Tq,N,V_fetchReason
T@"NSArray",C,N,V_fetchResponses
wlNetworkInterface
endpoint
headers
httpMethod
queryParameters
timeout
suppressAuthentication
encodeQueryParams
statusCode
onEntitlementsChange
onConfigurationChange
onPlaybackReport
v12@?0i8
VUIJSNetOp-%@
v24@?0@"AMSDialogResult"8@"NSError"16
v24@?0@"AMSAuthenticateResult"8@"NSError"16
VUIJSNetworkInterface - _handleAppLibChange
VUIJSNetworkInterface - _handleAppLibChange - calling JS
VUIJSNetworkInterface - _handleServerConfigChange
VUIJSNetworkInterface - _handleServerConfigChange - notifications are suppressed
VUIJSNetworkInterface - _handleServerConfigChange - calling JS
VUIJSNetworkInterface - Error: Unable to communicate with the remote object proxy (%@)
VUIJSNetworkInterface - calling out to daemon for playback report
VUIJSNetworkInterface - back from daemon for playback report
VUIJSNetworkInterface - no playback report found for ID:%@
v16@?0@"WLKPlaybackSummary"8
com.apple.watchlistd.xpc
VUIJSNetworkInterface - Connection interrupted.
VUIJSNetworkInterface - Connection invalidated.
suppressServerConfigNotifications
TB,V_suppressServerConfigNotifications
VideoURLRouterInterface
getOpenURLRouterDataSource
getOpenURLRouterDataSourceEntity
getOpenURLRouterDataSourceDocumentOnly
fetchedDataSources
T@"NSMutableArray",&,N,V_fetchedDataSources
T@"NSNumber",C,N,V_seasonNumber
menuItems
T@"VUIMenuDataSource",&,N,V_menuItems
hudModel
T@"VUINowPlayingHudKeys",&,N,V_hudModel
T@"VUINowPlayingHudViewLayout",&,N,V_layout
metaDataView
T@"VUINowPlayingHudMetaDataView",&,N,V_metaDataView
buttonViews
T@"NSArray",&,N,V_buttonViews
buttonHandler
T@?,C,N,V_buttonHandler
T@"UIVisualEffectView",&,N,V_visualEffectView
userInteractionEventHandler
T@?,C,N,V_userInteractionEventHandler
waitingForTransactionToStart
TB,N,GisWaitingForTransactionToStart,V_waitingForTransactionToStart
monitorTransaction
TB,N,V_monitorTransaction
progressIndicator
T@"VUICircularProgress",&,N,V_progressIndicator
textContentTitleBackup
T@"NSString",C,N,V_textContentTitleBackup
WN-Gradient
backgroundImageView
T@"UIImageView",&,N,V_backgroundImageView
backgroundImageGradientLayer
T@"VUIWatchNowTemplateBackgroundLayer",&,N,V_backgroundImageGradientLayer
gradientImageView
T@"UIImageView",&,N,V_gradientImageView
shouldFocusUpNext
TB,N,V_shouldFocusUpNext
upNextFocused
TB,N,GisUpNextFocused,V_upNextFocused
itms_extras
previewSrc
loadingImage
isLightTheme
movieInfo
adamId
actionParams
v28@?0@"TVImage"8@"NSError"16B24
extrasDidPushRoot
TB,R,N,V_extrasDidPushRoot
loadingImageView
T@"_TVImageView",R,N,V_loadingImageView
loadingVisualEffectView
T@"UIVisualEffectView",R,N,V_loadingVisualEffectView
loadingSpinnerView
T@"UIActivityIndicatorView",R,N,V_loadingSpinnerView
members
firstName
lastName
accountName
sharingPurchases
VUIFamilyMembersRequestResponseParser
B24@?0@"VUIFamilyMember"8@"NSDictionary"16
price
channelName
TV.Button.SubscribeChannel
TV.Button.SubscribeChannelFree
TV.Button.FreeYears
TV.Button.FreeMonths
@@%@@@
TV.SubDisclaimerDayFreeMonthPrice
Ds_M
TV.SubDisclaimerDaysFreeMonthPrice
TV.SubDisclaimerDayFreeYearPrice
Ds_Y
TV.SubDisclaimerDaysFreeYearPrice
TV.SubDisclaimerMonthFreeMonthPrice
Ms_M
TV.SubDisclaimerMonthsFreeMonthPrice
TV.SubDisclaimerMonthFreeYearPrice
Ms_Y
TV.SubDisclaimerMonthssFreeYearPrice
TV.HowToWatch.SubscribeChannelPriceTitleDay
TV.HowToWatch.SubscribeChannelPriceTitleMonth
TV.HowToWatch.SubscribeChannelPriceTitleYear
deleteId
removeFromPlayHistoryButton
deleteID
T@"NSString",&,N,V_deleteID
T@"NSString",&,N,V_canonicalID
isContinueWatching
TB,N,V_isContinueWatching
ACCESS_NACK_BODY_PLURAL
ACCESS_NACK_BODY_FORMAT
v24@?0@"UIView"8^B16
contentMetadata
VUIContentMetadataRatingAuxiliaryDisplayName
VUIContentMetadataUpsellRouterDataSource
VUIContentMetadataIsPlayingInPIP
previewFrameArtwork
showArtwork
formattedReleaseDate
rentalExpiration
tomatometerPercentage
tomatometerFreshness
recommendedAge
videoResolutionClass
videoDynamicRange
hasClosedCaption
hasAD
hasSDH
hasDolbyAtmos
ratingName
ratingAuxiliaryName
ratingSystem
ratingDomain
episodeIndex
ratingValue
showCanonicalId
dolbyvisionhdr
Fresh
CertifiedFresh
TQ,R,N
mediaDescription
artworkURLFormat
artworkWidth
artworkHeight
previewFrameURLFormat
previewFrameWidth
previewFrameHeight
showArtworkURLFormat
showArtworkWidth
showArtworkHeight
releasedDate
genre
tomatoPercentage
tomatoFreshness
commonSenseRecommendedAge
hasClosedCaptions
hasADLocales
hasSDHLocales
vui_isDeviceMediaLibrary
vui_isHomeShareMediaLibrary
eventByEventDescriptor
T@"NSMutableDictionary",&,N,V_eventByEventDescriptor
v16@?0@"UITapGestureRecognizer"8
computationLabel
T@"VUILabel",&,N,V_computationLabel
up next media controller
identifierKeyPath
The group identifier for groups must be an NSObject which implements NSCopying
v32@?0@"NSObject<NSCopying>"8@"NSMutableArray"16^B24
T@"NSString",C,N,V_identifierKeyPath
sortIndexKeyPath
T@"NSString",C,N,V_sortIndexKeyPath
groupsSortComparator
T@?,C,N,V_groupsSortComparator
performDefaultSort
TB,N,V_performDefaultSort
VUIActionTypeGDPRConsentedEvent
AppLaunch
T@"NSDictionary",&,N,V_contextData
mediaItemEntityTypes
areLocalMediaItemsAvailable
T@"NSOrderedSet",C,N,V_mediaItemEntityTypes
localMediaItemsAvailable
TB,N,GareLocalMediaItemsAvailable,V_localMediaItemsAvailable
avPlayerViewController
T@"AVPlayerViewController",R,N,V_avPlayerViewController
T@"NSObject<TVPAVFPlayback>",R,N,V_player
mediaInfo
T@"VUIMediaInfo",R,N,V_mediaInfo
T@"UIViewController<TVMediaControllerHosting>",&,N,V_mediaControllerHost
T@"VUISportsProductBannerView",&,N,V_bannerView
selectEventDataSource
playEventDataSource
contextMenuEventDataSource
T@"VUIEventDataSource",&,N,V_selectEventDataSource
T@"VUIEventDataSource",&,N,V_playEventDataSource
T@"VUIEventDataSource",&,N,V_contextMenuEventDataSource
VUIDebugImpressionTableViewCellReuseIdentifier
channelDetails
T@"WLKChannelDetails",&,N,V_channelDetails
contentTitle
T@"NSString",&,N,V_contentTitle
installerViewController
T@"VUIAppInstallerViewController",&,N,V_installerViewController
accessViewController
T@"VUIAccessViewController",&,N,V_accessViewController
uuid
T@"NSUUID",&,N,V_uuid
dismissOnSelect
isWatchListed
TB,N,V_isWatchListed
TB,N,V_dismissOnSelect
addedStateView
T@"VUIUpNextStateView",R,N,V_addedStateView
removedStateView
T@"VUIUpNextStateView",R,N,V_removedStateView
T@"VUIButton<VUIUpNextButtonProtocol>",W,N,V_delegate
VUIAppIconImageService: fetching app icon for key: %@ at URL: %@
VUIAppIconImageService: fetched image: %@ error: %@
%@.png
VUIAppIconImageService -- did not find image URL found for installable: %@
%02x
VUIAppIconImageService -- failed to write image cache for key: %@ error: %@
com.apple.WatchListKit
channel-icons
Default
Signpost
databaseSeason
T@"VUIPlistMediaDatabaseSeason",&,N,V_databaseSeason
prototypeSubtitleLabel
T@"VUILabel",&,N,V_prototypeSubtitleLabel
prototypeHeaderLabel
T@"VUILabel",&,N,V_prototypeHeaderLabel
T@"VUIFeedbackLayout",&,N,V_layout
headerSubtitleLabel
T@"VUILabel",&,N,V_headerSubtitleLabel
headerBadgeView
T@"_TVImageView",&,N,V_headerBadgeView
sourceLabel
T@"VUILabel",&,N,V_sourceLabel
sourceBadgeView
T@"_TVImageView",&,N,V_sourceBadgeView
T@"TVRatingBadgeView",&,N,V_ratingView
descriptionView
T@"UIView",&,N,V_descriptionView
headerBadgeSize
T{CGSize=dd},N,V_headerBadgeSize
sourceBadgeSize
T{CGSize=dd},N,V_sourceBadgeSize
kind
playedState
T@"MPMediaItemCollection",&,N,V_mediaItemCollection
T@"VUIExtrasDescriptionView",&,N,V_descriptionView
eventDescriptors
T@"NSSet",C,N,V_eventDescriptors
refreshTimerByEventDescriptor
T@"NSMutableDictionary",&,N,V_refreshTimerByEventDescriptor
refreshTimerFiredBlock
T@?,C,N,V_refreshTimerFiredBlock
v16@?0@"VUIAppDocumentRefreshEvent"8
B16@?0@"<VUIAppDocumentUpdateEventMonitorObserving>"8
observerMapTable
T@"NSMapTable",&,N,V_observerMapTable
playbackReportToken
Ti,N,V_playbackReportToken
lastProcesssedPlayActivity
T@"NSDate",&,N,V_lastProcesssedPlayActivity
lastAppDidBecomeActive
T@"NSDate",&,N,V_lastAppDidBecomeActive
vppaConsentLastPrompted
Current
v24@?0Q8@"NSArray"16
isSubscribed
TB,N,V_isSubscribed
descriptionPreferredOnPhoneSizeClass
TB,N,V_descriptionPreferredOnPhoneSizeClass
T@"VUIAppleTVChannelLogoLayout",&,N,V_channelLogoLayout
T@"VUITextLayout",&,N,V_descriptionTextLayout
T@"VUITextLayout",&,N,V_disclaimerTextLayout
subscribeButtonLayout
T@"VUIButtonLayout",&,N,V_subscribeButtonLayout
bgImageLayout
T@"TVImageLayout",&,N,V_bgImageLayout
Events
EventCell
Select
Validate
q24@?0@"NSIndexPath"8@"NSIndexPath"16
impresions
h:mm:ss a
eventTime: %@
%@: %lu impressions
%@: %@
B32@?0@"VUIDebugMetricsEvent"8Q16^B24
visibleEvents
T@"NSArray",&,N,V_visibleEvents
allEvents
T@"NSArray",&,N,V_allEvents
buttonsInHeader
T@"NSArray",&,N,V_buttonsInHeader
buttonsInHeaderSelected
T@"NSArray",&,N,V_buttonsInHeaderSelected
TQ,N,V_width
TQ,N,V_height
format
T@"NSString",C,N,V_format
ratingImageProxy
T@"TVImageProxy",&,N,V_ratingImageProxy
MediaTagsImageHelperCache
Unknown sortAs property %@
mediaEntityClassName
propertyDescriptors
propertyDescriptorsByName
T@"NSDictionary",C,N,V_propertyDescriptorsByName
T@"NSString",R,C,N,V_mediaEntityClassName
T@"NSArray",C,N,V_propertyDescriptors
lastOrientation
Tq,N,V_lastOrientation
axisFollowsDeviceOrientation
TB,N,V_axisFollowsDeviceOrientation
alignmentFollowsDeviceOrientation
TB,N,V_alignmentFollowsDeviceOrientation
Finished
downloadSucceeded
TB,N,GisDownloadInProgress,V_downloadInProgress
TB,N,V_downloadSucceeded
T@"VUINowPlayingHudMetaDataViewLayout",&,N,V_layout
badgeDummyLabel
T@"VUILabel",&,N,V_badgeDummyLabel
descriptionTextView
T@"VUIFocusableTextView",&,N,V_descriptionTextView
T@"VUIMediaTagsView",&,N,V_badgeView
VideosHasParsedElement
VideosTitle
VideosDescription
VideosImageURL
ViewElementDataSourceKey
vui_DataSource
T@"VUIViewElementDataSource",R,N
vui_updateEventDescriptors
T@"NSSet",R,C,N
familyMembers
T@"NSArray",&,N,V_familyMembers
backgroundLayer
T@"CAShapeLayer",&,N,V_backgroundLayer
centerLayer
T@"CAShapeLayer",&,N,V_centerLayer
progressLayer
T@"CAShapeLayer",&,N,V_progressLayer
progressMaskLayer
T@"CAShapeLayer",&,N,V_progressMaskLayer
displayLink
T@"CADisplayLink",&,N,V_displayLink
animating
TB,N,GisAnimating,V_animating
Td,N,V_progress
autoFillDelta
Td,N,V_autoFillDelta
centerImageView
T@"UIImageView",&,N,V_centerImageView
autoFillStartTimeStamp
Td,N,V_autoFillStartTimeStamp
Td,R,N,V_duration
progressWidth
Td,N,V_progressWidth
progressInset
T{UIEdgeInsets=dddd},N,V_progressInset
progressTintColor
T@"UIColor",&,N,V_progressTintColor
backgroundImage
T@"UIImage",&,N,V_backgroundImage
backgroundImageInset
T{UIEdgeInsets=dddd},N,V_backgroundImageInset
backgroundTintColor
T@"UIColor",&,N,V_backgroundTintColor
centerImage
T@"UIImage",&,N,V_centerImage
centerImageInset
T{UIEdgeInsets=dddd},N,V_centerImageInset
centerTintColor
T@"UIColor",&,N,V_centerTintColor
partial
played
unplayed
homeVideo
%llu|%llu
mediaTypeString
T@"NSString",R,C,N,Gwlk_mediaTypeString
T@"NSString",R,C,N,Gwlk_playState
Td,N,V_time
notifiedOfEntry
TB,N,V_notifiedOfEntry
token
T@"NSUUID",&,N,V_token
T@?,C,N,V_handler
repeatingTimer
T@"NSTimer",W,N,V_repeatingTimer
oneTimeTimer
T@"NSTimer",W,N,V_oneTimeTimer
startDate
T@"NSDate",&,N,V_startDate
backgroundedDate
T@"NSDate",&,N,V_backgroundedDate
active
TB,N,GisActive
autoRemove
TB,N,GshouldAutoRemove
userInfo
T@,&,N
B24@?0@8^B16
startTime
Td,N
Td,R,N
skippable
TB,N,GisSkippable
B32@?0@8Q16^B24
activationType
TQ,N
advisoryDisabledTimeRanges
T@"NSArray",C,N
v36@?0d8@"NSDate"16d24B32
features
T@"NSMutableSet",&,N,V_features
featureDependencies
T@"NSMapTable",&,N,V_featureDependencies
featureTokens
T@"NSMapTable",&,N,V_featureTokens
featureBoundaryInfos
T@"NSMapTable",&,N,V_featureBoundaryInfos
featureTimers
T@"NSMapTable",&,N,V_featureTimers
featureLastRequestedUI
T@"<VUINowPlayingFeature>",&,N,V_featureLastRequestedUI
T@"NSMutableArray",&,N,V_enabledUIModes
observingElapsedTime
TB,N,V_observingElapsedTime
lastProcessedElapsedTime
Td,N,V_lastProcessedElapsedTime
boundaryTimeObserverInfos
T@"NSMutableDictionary",&,N,V_boundaryTimeObserverInfos
elapsedTimeObserverToken
T@,&,N,V_elapsedTimeObserverToken
elapsedTimes
T@"NSMutableArray",&,N,V_elapsedTimes
allFeatures
T@"<VUINowPlayingFeatureMonitorDelegate>",W,N,V_delegate
T@"NSObject<TVPAVFPlayback>",&,N,V_player
playbackManager
T@"TVMediaPlaybackManager",&,N,V_playbackManager
VUIISMediaItem
v24@?0@"NSString"8@"NSError"16
https
/api/AppCert/%@
/api/license/%@
asset-id
guid
SignInToWatchThisVideoErrorDescription
TVPlaybackErrorDomain
tokens
errors
ContentNotAuthorizedErrorDescription
TOO_MANY_DEVICES_STREAMING_VIDEO_ERROR_FORMAT
VIDEO_UNAVAILABLE_IN_THIS_REGION_ERROR
X-ISP-TOKEN
T@"NSURL",&,N,V_url
tokenServerURL
T@"NSURL",&,N,V_tokenServerURL
stopServerURL
T@"NSURL",&,N,V_stopServerURL
tokenServerParameters
T@"NSDictionary",&,N,V_tokenServerParameters
assetIDForStopping
T@"NSString",&,N,V_assetIDForStopping
loadingContext
TQ,N,V_loadingContext
disableScrubbing
TB,N,V_disableScrubbing
v32@?0@8@16^B24
VUIMetricsBackgroundTaskFlush
true
xp_amp_tv_vpaf
VPAFTopic
com.apple.siri
currentSiriNavController
T@"UINavigationController",W,N,V_currentSiriNavController
startIndex
count
TQ,N,V_startIndex
TQ,N,V_count
infoHeaderTextLayout
T@"VUITextLayout",R,N,V_infoHeaderTextLayout
infoBodyTextLayout
T@"VUITextLayout",R,N,V_infoBodyTextLayout
infoDescriptionTextLayout
T@"VUITextLayout",R,N,V_infoDescriptionTextLayout
descriptionLineSpacing
Td,R,N,V_descriptionLineSpacing
bottomPadding
T@"UIColor",R,N,V_seeMoreTextColor
T@"UIColor",R,N,V_darkSeeMoreTextColor
highlightedDescriptionText
T@"UIColor",R,N,V_highlightedDescriptionText
darkHighlightedDescriptionText
T@"UIColor",R,N,V_darkHighlightedDescriptionText
isHorizontal
isDynamicTextEnabled
isTVOS
infoTextLayout
T@"VUITextLayout",R,N,V_infoTextLayout
T@"TVImageLayout",R,N,V_logoImageLayout
databaseItem
T@"VUIPlistMediaDatabaseItem",&,N,V_databaseItem
wlNotifications
showLocalNotificationsSignupAlert
showLocalNotificationsAppInstallComplete
onAction
{CGRect={CGPoint=dd}{CGSize=dd}}84@?0@"UIView"8d16d24d32B40B44{CGRect={CGPoint=dd}{CGSize=dd}}48B80
B8@?0
EXPIRATION_IN
viewsMap
T@"NSDictionary",C,N,V_viewsMap
groupedSubviews
T@"NSArray",&,N,V_groupedSubviews
totalSubviewsWidth
Td,N,V_totalSubviewsWidth
commonSenseLightImage
T@"UIImage",&,N,V_commonSenseLightImage
commonSenseDarkImage
T@"UIImage",&,N,V_commonSenseDarkImage
T@"VUIMediaTagsViewLayout",R,N,V_layout
mainMenuItems
T@"NSArray",&,N,V_mainMenuItems
genreMenuItems
T@"NSArray",&,N,V_genreMenuItems
line
T@"UIView",&,N,V_line
lineHeight
Td,N,V_lineHeight
com.apple.TVWatchList
minPadding
T{UIEdgeInsets=dddd},N,V_minPadding
minLengths
T{CGSize=dd},N,V_minLengths
documentRef
prefetchedData
uiConfiguration
backgroundImageDictionary
appType
siriuiplugin
tvapp
WatchNow
BrowseMain
MoviesMain
TVShowsMain
KidsMain
SportsMain
Library
Search
Canvas
MovieCanonical
TVShowCanonical
EpisodeCanonical
SportsCanonical
SportsFavorites
ConfirmationDialog
AccountSettings
UIMain
gdprConsent
SiriSearch
T@"NSString",&,N,V_documentRef
T@"VUIDocumentContextData",&,N,V_contextData
prefetchData
T@"VUIDocumentPreFetchedData",&,N,V_prefetchData
T@"VUIDocumentUIConfiguration",&,N,V_uiConfiguration
shouldLoadPageImmediately
TB,N,V_shouldLoadPageImmediately
metricsBase
q24@?0@"NSString"8@"NSString"16
B32@?0@"NSString"8Q16^B24
data.uts
"data.uts
 fields
keys
page fields
uncategorized fields
UTS fields
base fields
bag metrics fields
metricsKit fields
Time
dd/MM HH:mm:ss.SS
Null
rawData
T@"NSDictionary",&,N,V_rawData
eventData
T@"NSArray",&,N,V_eventData
sortedPageKeys
T@"NSArray",&,N,V_sortedPageKeys
sortedPrimaryKeys
T@"NSArray",&,N,V_sortedPrimaryKeys
eventDate
rawEvent
fetchRequest
T@"VUIMediaEntityFetchRequest",&,N,V_fetchRequest
T@"NSArray",&,N,V_mediaEntities
grouping
T@"NSArray",&,N,V_grouping
shouldFetchArtworkInfoDictionaries
TB,N,V_shouldFetchArtworkInfoDictionaries
artworkInfoDictionaryByPurchaseID
T@"NSDictionary",&,N,V_artworkInfoDictionaryByPurchaseID
@"NSNumber"16@?0@"VUIMPMediaEntityIdentifier"8
@"MPMediaPredicate"32@?0@"VUIMediaEntityFetchRequest"8Q16@"VUIMediaEntityType"24
@"MPMediaPredicate"32@?0@"VUIMediaEntityFetchRequest"8Q16@"NSNumber"24
@"NSNumber"16@?0@"NSNumber"8
sortTitle
@"MPMediaPredicate"32@?0@"VUIMediaEntityFetchRequest"8Q16@"VUIMPSeasonMediaCollectionIdentifier"24
ShowDownloaded
v32@?0@"VUIMediaEntity"8Q16^B24
v32@?0@"VUIMediaEntityGroup"8Q16^B24
showEntity
T@"VUIMediaEntity",&,N,V_showEntity
appIds
AppInstall
VPPA
T@"NSString",&,N,V_pageId
T@"NSString",&,N,V_pageType
T@"NSDictionary",&,N,V_eventData
VUIPlaybackReporterUTS
DSID is missing
[PostPlay:%.3f]
[WatchedTime:%.3f]
 [Elapsed:%.3f] [Duration:%.3f] [Done]
 [Elapsed:%.3f] [Duration:%.3f] [InProgress]
Playback summary is nil
reporter
T@"WLKPlaybackReporter",&,N,V_reporter
postPlayConfig
T@"VUIPostPlayConfig",&,N,V_postPlayConfig
mediaEntitiesChangeSet
groupingChangeSet
T@"VUICollectionChangeSet",&,N,V_mediaEntitiesChangeSet
T@"VUICollectionChangeSet",&,N,V_groupingChangeSet
v32@?0@"VUIFeedbackTableViewModel"8Q16^B24
v32@?0@"VUILabel"8Q16^B24
T@"VUIFeedbackTableLayout",&,N,V_layout
dataModels
T@"NSArray",&,N,V_dataModels
headerTextView
T@"VUILabel",&,N,V_headerTextView
T@"NSArray",&,N,V_descriptionTextView
titleString
T@"NSString",&,N,V_titleString
alertView
T@"VUITVDescriptiveAlertView",&,N,V_alertView
dismissHandler
T@?,C,N,V_dismissHandler
T@"UITextView",&,N,V_descriptionTextView
PostPlayUpsellConfig
PostPlayUpsellChannelHistory
PostPlayUpsellShowHistory
isDisabled
isPIPEnabled
minPlaybackProgressPercentage
maxCountPerShow
countDurationHrsPerShow
maxCountPerChannel
countDurationHrsPerChannel
disable
enable
FE_2
isUpsellOnPlaybackExitDisabled
TB,N,V_isUpsellOnPlaybackExitDisabled
isUpsellOnPIPPlaybackExitEnabled
TB,N,V_isUpsellOnPIPPlaybackExitEnabled
Td,N,V_minPlaybackProgressPercentage
isUpsellLimitedPerShow
TB,N,V_isUpsellLimitedPerShow
upsellMaxCountPerShow
TQ,N,V_upsellMaxCountPerShow
upsellCountDurationPerShow
Td,N,V_upsellCountDurationPerShow
isUpsellLimitedPerChannel
TB,N,V_isUpsellLimitedPerChannel
upsellMaxCountPerChannel
TQ,N,V_upsellMaxCountPerChannel
upsellCountDurationPerChannel
Td,N,V_upsellCountDurationPerChannel
manager
com.apple.videosui.VUIMPMediaLibrary.serialProcessingQueue
connectionState
v16@?0@"VUIMPMediaLibrary"8
The imageLoaderObject parameter must be an instance of VUIPlistMediaEntityImageLoadParams or conform to VUIPlistMediaEntityImageLoadParamsCreating
TQ,N,V_connectionState
serialOperationQueue
T@"NSOperationQueue",&,N,V_serialOperationQueue
comingSoonBannerData
roles
Gradient-Top-Right-Attribution
Gradient-Top-Left
T@"NSString",&,N,V_identifier
T@"_TVContentRating",&,N,V_contentRating
standardDescription
T@"NSString",&,N,V_standardDescription
T@"NSDate",&,N,V_releaseDate
UserInteractionMonitoringEvent
lastSelectedMediaInfo
T@"TVMediaInfo",&,N,V_lastSelectedMediaInfo
delegateRespondsToDocumentCreationStatus
TB,N,V_delegateRespondsToDocumentCreationStatus
delegateRespondsToMediaChange
TB,N,V_delegateRespondsToMediaChange
delegateRespondsToEventOccurred
TB,N,V_delegateRespondsToEventOccurred
delegateRespondsToDocumentUpdate
TB,N,V_delegateRespondsToDocumentUpdate
userInteractionMonitor
T@"VUIViewUserInteractionMonitor",&,N,V_userInteractionMonitor
postPlayDelegate
T@"<VUIPostPlayControllerDelegate>",W,N,V_postPlayDelegate
@32@?0@"VUIMediaEntityFetchRequest"8Q16@"NSNumber"24
purchaseHistoryID
T@"MPMediaItem",&,N,V_mediaItem
sourceType
Tq,N,V_sourceType
currentURL
T@"NSURL",&,N,V_currentURL
appScriptDict
T@"NSMutableDictionary",&,N,V_appScriptDict
task
T@"NSURLSessionDataTask",&,N,V_task
gradientBoundsInsets
T{UIEdgeInsets=dddd},N,V_gradientBoundsInsets
watchnow
browse
sports
kids
pptstack
pptsports
nowPlayingConfig
showsLozengeForLivePlayback
showsStillWatchingAlertForLivePlayback
alertDurationForLivePlayback
alertIdleTimeout
excludedMediaTypesFromReporting
TB,N,V_showsLozengeForLivePlayback
showsStillWatchingAlert
TB,N,V_showsStillWatchingAlert
Td,N,V_stillWatchingAlertDuration
Td,N,V_alertIdleTimeout
mediaTypesExcludedFromReporting
T@"NSArray",C,N,V_mediaTypesExcludedFromReporting
postPlayUpsellConfig
bootStrapInterval
documentUpdateOffsetInterval
maximumAutoPlayableItems
autoPlayTimerDuration
minAutoPlayStopTime
minAutoPlayStopTimeQAOverride
minTimeIntervalFromEndToDisplay
hlsWatchedTimeEnabled
bootstrapInterval
Td,N,V_bootstrapInterval
Td,N,V_documentUpdateOffsetInterval
TQ,N,V_maximumAutoPlayableItems
Td,N,V_duration
Td,N,V_autoPlayTimerDuration
Td,N,V_minAutoPlayStopTime
Td,N,V_minTimeIntervalFromEndToDisplay
TB,N,V_hlsWatchedTimeEnabled
autoPlayConfig
autoPlayDelayInterval
Td,N,V_autoPlayDelayInterval
inAppMessaging
minimumPresentationIntervalNormal
minimumPresentationIntervalRestricted
whitelistedFields
extRefApp
refURL
Td,N,V_minimumPresentationIntervalNormal
Td,N,V_minimumPresentationIntervalRestricted
T@"NSArray",&,N,V_whitelistedFields
T@"VUIPostPlayConfig",R,N,V_postPlayConfig
T@"VUINowPlayingConfig",R,N,V_nowPlayingConfig
T@"VUIAutoPlayConfig",R,N,V_autoPlayConfig
inAppMessagesConfig
T@"VUIInAppMessagesConfig",R,N,V_inAppMessagesConfig
episodeLayout
T@"VUITextLayout",R,N,V_episodeLayout
metadataLayout
T@"VUIMediaTagsViewLayout",R,N,V_metadataLayout
v32@?0@"VUIProductSectionView"8Q16^B24
sectionViews
T@"NSArray",&,N,V_sectionViews
viewLayout
T@"VUIProductMetadataLayout",&,N,V_viewLayout
airingView
T@"VUIProductInfoAiringView",&,N,V_airingView
offer
videosPlayables
punchoutOfferData
Trailer
extrasUrl
channelId
hlsUrl
sharedPurchase
upsellRouterDataSource
seasonCanonicalId
liveStreamServiceId
externalServiceId
rentalId
isRental
fpsCertificateUrl
fpsKeyServerUrl
fpsKeyServerQueryParameters
fpsNonceServerUrl
playbackUrl
hlsDownloadUrl
resumeTimeTimeStamp
scrubVideoUrl
vpafMetrics
mediaMetrics
tokenServerUrl
stopUrl
isApSubscription
previewUrl
extrasURLString
previewURLString
T@"NSString",&,N
tvAppDeeplinkURL
com.apple.tv.external
seasonCanonicalID
bookmarkID
T@"NSString",R,N,V_bookmarkID
isSubscription
isMovie
hlsURL
fpsAdditionalServerParams
T@"NSURL",R,N,V_previewArtwork
T@"VUIContentMetadata",R,N,V_metadata
stopURL
tokenServerParams
liveStreamServiceID
externalServiceID
extrasInfo
T@"VUIExtrasInfo",R,N
isiTunesPurchaseOrRental
TB,R,N,GisSharedPurchase
T@"VUIRouterDataSource",R,N
VUILibraryLockupCellReuseIdentifier
GridMainSection
VUILibraryGridCollectionViewController
LIBRARY_GENERIC_FETCH_ERROR_TITLE
entitiesDataSource
T@"VUIMediaEntitiesDataSource",&,N,V_entitiesDataSource
T@"UICollectionViewCell",&,N,V_sizingCell
currentNavBarButtonItem
T@"UIBarButtonItem",&,N,V_currentNavBarButtonItem
waitingForFetch
TB,N,V_waitingForFetch
currentlySelectedMediaEntity
T@"VUIMediaEntity",&,N,V_currentlySelectedMediaEntity
indexPathForLastFocusedItem
T@"NSIndexPath",&,N,V_indexPathForLastFocusedItem
artworkInfoDictionary
T@"NSDictionary",&,N,V_artworkInfoDictionary
T@"<VUILibraryGridCollectionViewControllerDelegate>",W,N,V_delegate
gridFilter
Tq,N,V_gridFilter
gridStyle
Tq,N,V_gridStyle
gridType
Tq,N,V_gridType
hideLockupTitles
TB,N,V_hideLockupTitles
libraryBarButton
T@"UIBarButtonItem",&,N,V_libraryBarButton
forceBackButton
TB,N,V_forceBackButton
The string representation must contain exactly four components
%@,%@,%@,%@
T@"NSOrderedSet",C,N,V_cast
T@"NSOrderedSet",C,N,V_directors
T@"NSOrderedSet",C,N,V_producers
T@"NSOrderedSet",C,N,V_screenwriters
hasCredits
v24@?0Q8^B16
upnext
upnextSports
navBrick
upsell
ribbon
RibbonGradient
v32@?0@"UIColor"8Q16^B24
asyncWorkToken
T@"VUIAsynchronousWorkToken",&,N,V_asyncWorkToken
unit-short
unit
style
T@"NSString",C,N,V_style
The mediaCollectionType argument cannot be VUIMediaCollectionTypeNone
The mediaCollectionType (%@) is not supported for the supplied mediaCategoryType (%@)
MovieRental
TVShow
HomeVideo
subtype
mediaCategoryType
mediaCollectionType
TQ,N,V_subtype
TQ,N,V_mediaCategoryType
TQ,N,V_mediaCollectionType
TB,N,GisRental,V_rental
T@"VUISportsProductBannerLayout",&,N,V_layout
rowLabels
T@"NSArray",&,N,V_rowLabels
scoreLabels
T@"NSArray",&,N,V_scoreLabels
descriptionLabels
T@"NSArray",&,N,V_descriptionLabels
footerLabel
T@"VUILabel",&,N,V_footerLabel
availabilityTextView
T@"VUILabel",&,N,V_availabilityTextView
availabilityImageView
T@"_TVImageView",&,N,V_availabilityImageView
AcquiringLease
LeaseAgentInitialized
LeaseAgentInvalid
Leased
Re-acquiringLease
Authenticating
LeaseOperationSucceeded
LeaseOperationFailed
LeaseEventOpFailedNeedsRetry
Play
Stop
client-data
lease-duration
lease-id
media-kind
replacement-token
lease-start
lease-stop
lease-renew
VUIVideoLeaseAgent
@"NSString"40@?0@"TVSStateMachine"8@"NSString"16@24@"NSDictionary"32
v32@?0@"NSURLResponse"8@16@"NSError"24
LeaseUnavailableForTVShowErrorDescription
LeaseUnavailableForMovieErrorDescription
leaseID
T@"NSString",&,N,V_leaseID
renewalTimer
T@"NSTimer",&,N,V_renewalTimer
T@"NSObject<TVPMediaItem>",&,N,V_mediaItem
storeMediaKind
T@"NSString",&,N,V_storeMediaKind
leaseDuration
Td,N,V_leaseDuration
numLeaseStartRetries
Td,N,V_numLeaseStartRetries
numRenewalRetries
TQ,N,V_numRenewalRetries
T@"<VUIVideoLeaseAgentDelegate>",W,N,V_delegate
request
Unsupported predicate: %@
Unsupported compound predicate: %@
Unsupported expressions in comparison predicate: %@
Unknown keypath %@ for entity kind %@
Unable to create MPMediaQuery as the supplied media entity type is not supported: %@
Unexpected media collection type!
T@"VUIMediaEntityFetchRequest",&,N,V_request
T@"VUIMediaEntityFetchResponse",C,N,V_response
mediaEntityKind
T@"VUIMediaEntityKind",&,N,V_mediaEntityKind
prefetchProperties
T@"NSMutableSet",&,N,V_prefetchProperties
mediaQueryPredicate
T@"MPMediaPredicate",&,N,V_mediaQueryPredicate
mediaQuerySortOrderingProperties
T@"NSArray",&,N,V_mediaQuerySortOrderingProperties
mediaQuerySortOrderingDirectionMappings
T@"NSDictionary",&,N,V_mediaQuerySortOrderingDirectionMappings
postFetchSortDescriptors
T@"NSArray",&,N,V_postFetchSortDescriptors
processPredicateAfterFetch
TB,N,V_processPredicateAfterFetch
processRangeAfterFetch
TB,N,V_processRangeAfterFetch
currentFetchMediaEntityType
T@"VUIMediaEntityType",&,N,V_currentFetchMediaEntityType
com.apple.tvwatchlist
You must create with whitelisted clientID.
Creating promise with request:%@
v24@?0@"AMSURLRequest"8@"NSError"16
session
T@"AMSURLSession",&,N,V_session
tokenService
T@"AMSMediaTokenService",&,N,V_tokenService
clientIdentifier
T@"NSString",&,N,V_clientIdentifier
VUIStoreMediaItemMetadataLeaseID
VUIStoreMediaItemLeaseStartServerProcessingTimeMS
VUIStoreMediaItemRentalExpirationUpdatedNotification
VUIStoreMediaItem_tvOS
iTunesPreferHLSForPlayback
iTunesMaxHLSVideoResolution
iTunesFileVideoResolution
iframe-scrubber-url
atv-playhead-send-interval-secs
metadata.rating.rank
metadata.rating.label
metadata.rating.system
User-Agent
X-Dsid
metadata.itemName
metadata.artistName
metadata.genre
metadata.releaseDate
trickplay-url
rental-expiration-date
rental-playback-duration
rental-first-playback-date
metadata.longDescription
metadata.duration
metadata.season-number
metadata.episode-sort-id
metadata.show-name
downloadKey
v24@?0@"NSNumber"8@"NSNumber"16
Scrub AVPlayerItem loader
hls-playlist-url
Undetermined
File
v32@?0@"NSDictionary"8@"NSNumber"16@"NSError"24
v28@?0B8@"NSDictionary"12@"NSError"20
v28@?0B8@"NSError"12@"NSNumber"20
RentalAlreadyCheckedOutErrorDescription
redownloadProduct
streamingRental
songList
v16@?0@"SSPurchaseResponse"8
v56@?0@"TVSStateMachine"8@"NSString"16@"NSString"24@"NSString"32@40@"NSDictionary"48
failureType
v24@?0@"SSURLConnectionResponse"8@"NSError"16
frameTimeDifferenceInSeconds
trickplay-count
one-based-naming-scheme
thumbnail-name-format
storefront-header-suffix
at14
rottenTomatoesScore
freshness
rotten
fresh
certifiedFresh
metadata.itemId
assets
flavor
HDMO
1080p
720p
480p
asset-info.flavor
rental-checkedout-to-guid
more
startId
endId
hw.model
pendingSongs
application/x-apple-plist
T@"NSString",C,N,V_actionParams
T@"NSNumber",C,N,V_rentalID
Tq,N,V_mediaType
hlsPlaylistURL
T@"NSURL",C,N,V_hlsPlaylistURL
T@"NSNumber",C,N,V_contentRatingRank
T@"NSURL",&,N,V_playbackURL
playbackType
Tq,N,V_playbackType
preferredStoreAssetDict
T@"NSDictionary",&,N,V_preferredStoreAssetDict
leaseAgent
T@"VUIVideoLeaseAgent",&,N,V_leaseAgent
ignoreLeaseAgentStateChanges
TB,N,V_ignoreLeaseAgentStateChanges
storeFPSKeyLoader
T@"VUIStoreFPSKeyLoader",&,N,V_storeFPSKeyLoader
trickPlayImageConfigDocumentLoader
T@"TVSDocumentLoader",&,N,V_trickPlayImageConfigDocumentLoader
scrubMediaItem
T@"NSObject<TVPMediaItem>",&,N,V_scrubMediaItem
scrubPlayer
T@"TVPPlayer",&,N,V_scrubPlayer
needsRentalCheckin
TB,N,V_needsRentalCheckin
fpsKeyError
T@"NSError",&,N,V_fpsKeyError
T@"VUIBookmark",&,N,V_bookmark
rottenTomatoesOperationQueue
T@"NSOperationQueue",&,N,V_rottenTomatoesOperationQueue
mpMediaItem
T@"MPMediaItem",&,N,V_mpMediaItem
T@"NSString",&,N,V_contentRatingDomain
storeItemDict
T@"NSDictionary",C,N,V_storeItemDict
bookmarkDisabled
TB,N,V_bookmarkDisabled
bookmarkOverrideTime
T@"NSNumber",C,N,V_bookmarkOverrideTime
TB,N,V_disableResumeMenu
T@"NSURL",C,N,V_fpsCertificateURL
T@"NSURL",C,N,V_fpsKeyServerURL
T@"NSDictionary",C,N,V_fpsAdditionalServerParams
T@"VUIMediaEntityType",&,N,V_type
T@"NSString",&,N,V_showTitle
T@"NSString",&,N,V_iTunesExtrasUrl
T@"NSNumber",&,N,V_seasonNumber
T@"NSNumber",&,N,V_episodeNumber
offerListing
T@"WLKOfferListing",&,N,V_offerListing
personalizedOfferListing
T@"WLKOfferListing",&,N,V_personalizedOfferListing
TQ,R,N,V_type
titleStyle
TQ,R,N,V_titleStyle
blurEnabled
TB,N,GisBlurEnabled,V_blurEnabled
contentMotionTranslation
T{CGPoint=dd},R,N,V_contentMotionTranslation
bookkeeper.retainedEntryCount.com.apple.upp
com.apple.upp
ATVUniversalPlaybackPositionClientRecordsDidChange
ATVUniversalPlaybackPositionClientDidReset
v32@?0@"VUIUniversalPlaybackPositionRecord"8Q16^B24
T@"VUIUPPClientState",&,V_state
v32@?0@8@"VUIUniversalPlaybackPositionRecord"16^B24
v32@?0@"NSString"8@"VUIUniversalPlaybackPositionRecord"16^B24
clientState
T@"VUIUPPClientState",R,N,V_clientState
changes
T@"NSDictionary",R,N,V_changes
%@,%ld,%@,%@,%@,%@
v24@?0@8^B16
T@"NSString",C,N,V_itemIdentifier
keyType
Tq,N,V_keyType
T@"NSNumber",&,N,V_bookmarkTime
T@"NSNumber",&,N,V_hasBeenPlayed
T@"NSNumber",&,N,V_playCount
T@"NSDate",&,N,V_timestamp
pendingChanges
T@"NSMutableDictionary",R,N,V_pendingChanges
uppKeyToRecordMap
T@"NSMutableDictionary",R,N,V_uppKeyToRecordMap
lastSyncedDomainVersion
T@"NSString",C,V_lastSyncedDomainVersion
VUIMediaLibraryConnectionStateDidChangeNotification
fromState
toState
VUIMediaLibraryContentsDidChangeNotification
VUIMediaLibraryContentsDidChangeUserInfoKeyContentsChange
The %@ method needs to be override by a subclass.
%@=%lu
connectable
supportsDRMContent
T@"NSObject<VUIMediaLibraryIdentifier>",C,N,V_identifier
T@"VUIMediaLibraryManager",R,W,N,V_manager
TB,R,N,GisConnectable
disclaimerLayout
T@"VUITextLayout",&,N,V_disclaimerLayout
T@"VUIButtonLayout",&,N,V_buttonLayout
Unexpected mediaCategoryType parameter: %@
supportedMediaCollectionTypes
v32@?0@"NSNumber"8@"NSSet"16^B24
supportedChildMediaCollectionTypes
T@"NSSet",C,N,V_supportedMediaCollectionTypes
T@"NSDictionary",C,N,V_supportedChildMediaCollectionTypes
MenuCellIdentifier
MenuSectionHeaderCellIdentifier
MainSectionIdentifier
GenreSectionIdentifier
LIBRARY
UINavigationBarBackIndicatorDefault
GENRES
@"UICollectionReusableView"32@?0@"UICollectionView"8@"NSString"16@"NSIndexPath"24
collectionConfiguration
T@"VUICollectionConfiguration",&,N,V_collectionConfiguration
shouldMarkFirstCategorySelected
TB,N,V_shouldMarkFirstCategorySelected
genresOnlyMenu
TB,N,V_genresOnlyMenu
menuCollectionView
T@"VUICollectionView",&,N,V_menuCollectionView
sectionHeaderSizingCell
T@"VUIMenuSectionHeaderCollectionViewCell",&,N,V_sectionHeaderSizingCell
T@"<VUIMenuCollectionViewControllerDelegate>",W,N,V_delegate
categories
T@"VUIMenuDataSource",&,N,V_categories
shouldShowBackButton
TB,N,V_shouldShowBackButton
shouldDeselectOnViewAppear
TB,N,V_shouldDeselectOnViewAppear
com.apple.videos-preferences
LastRunValue
Idle
Waiting for earliest rental to expire
Waiting for appropriate app state to handle expiration
Showing expiration UI
Start monitoring
Rental expiration timer did fire
Application did become active
Playback UI no longer being shown
Expiration UI complete
Library contents did change
VUIRentalExpirationMonitorRentalDidExpireNotification
VUIRentalExpirationMonitor
@"ML3QueryResultSet"16@?0@"NSDate"8
v32@?0q8Q16^B24
@"NSString"8@?0
@"NSString"16@?0@"NSDate"8
@"NSString"40@?0@"TVPStateMachine"8@"NSString"16@24@"NSDictionary"32
stateMachine
T@"TVPStateMachine",&,N,V_stateMachine
dateOfLastRentalExpirationHandling
T@"NSDate",&,N,V_dateOfLastRentalExpirationHandling
earliestExpirationTimer
T@"NSTimer",&,N,V_earliestExpirationTimer
T@"VUIVideoAdvisoryViewLayout",&,N,V_layout
legendNameLabel
T@"VUILabel",&,N,V_legendNameLabel
legendDescriptionLabel
T@"VUILabel",&,N,V_legendDescriptionLabel
legendName
legendDescription
com.apple.videosui.VUINowPlayingObserver.serialProcessingQueue
v20@?0@"NSString"8I16
v12@?0I8
v24@?0^v8^{__CFError=}16
latestObservation
T@"VUINowPlayingObservation",&,N,V_latestObservation
observing
TB,N,GisObserving,V_observing
updateObservationContext
TQ,N,V_updateObservationContext
T@"<VUINowPlayingObserverDelegate>",W,N,V_delegate
nowPlayingAppBundleIdentifier
isPlaying
playing
TB,N,GisPlaying,V_playing
T@"NSString",C,N,V_nowPlayingAppBundleIdentifier
@"NSDate"16@?0@"VUIMediaCollection"8
PBUILaunchedForPlayback
v24@?0@"BSProcessHandle"8@"NSError"16
T@"VUIExtrasInfo",&,N,V_extrasInfo
logoTextLayout
T@"VUITextLayout",&,N,V_logoTextLayout
coverArtImageLayout
T@"TVImageLayout",&,N,V_coverArtImageLayout
decorationImageLayout
T@"TVImageLayout",R,N,V_decorationImageLayout
subTextLayout
T@"VUITextLayout",R,N,V_subTextLayout
episodeInfoTextLayout
T@"VUITextLayout",R,N,V_episodeInfoTextLayout
descriptionTitleTextLayout
T@"VUITextLayout",R,N,V_descriptionTitleTextLayout
T@"VUIMediaTagsViewLayout",R,N,V_tagsLayout
promoTextLayout
T@"VUITextLayout",R,N,V_promoTextLayout
maxCoverArtImageHeight
Td,R,N,V_maxCoverArtImageHeight
iconProgressPieImages
backgroundAlpha
Td,N,V_backgroundAlpha
foregroundAlpha
Td,N,V_foregroundAlpha
circleRadiusFraction
Td,N,V_circleRadiusFraction
pauseRadiusFraction
Td,N,V_pauseRadiusFraction
circleBoundingRect
T{CGRect={CGPoint=dd}{CGSize=dd}},R,N
displayedState
Tq,N,V_displayedState
displayingPaused
TB,N,V_displayingPaused
displayedFraction
Td,N,V_displayedFraction
T@"<VUISBIconProgressViewDelegate>",N,V_delegate
overlayImage
T@"UIImage",&,N,V_overlayImage
canAnimate
TB,N,V_canAnimate
sourceBackgroundImage
T@"UIImage",&,N,V_sourceBackgroundImage
resizedSourceBackgroundImage
T@"UIImage",&,N,V_resizedSourceBackgroundImage
overlayMaterialImageByIdentifier
T@"NSDictionary",C,N,V_overlayMaterialImageByIdentifier
resizedBackgroundImageSize
T{CGSize=dd},N,V_resizedBackgroundImageSize
overlayMaterialRequests
T@"NSArray",C,N,V_overlayMaterialRequests
rect
T{CGRect={CGPoint=dd}{CGSize=dd}},N,V_rect
T@"VUIPlistMediaDatabaseShow",W,N,V_show
T@"NSArray",C,N,V_episodes
T@"VUIButtonLayout",&,N,V_layout
imagesViewDefaultState
T@"_TVImageView",&,N,V_imagesViewDefaultState
imagesViewHighlightedState
T@"_TVImageView",&,N,V_imagesViewHighlightedState
backgroundImagesViewDefaultState
T@"_TVImageView",&,N,V_backgroundImagesViewDefaultState
backgroundImagesViewHighlightedState
T@"_TVImageView",&,N,V_backgroundImagesViewHighlightedState
T@"_TVImageView",&,N,V_backgroundImageView
v20@?0@"UIView"8B16
backdropView
T@"VUIBackdropView",&,N,V_backdropView
maskedBackdropView
T@"VUIBackdropMaskingView",&,N,V_maskedBackdropView
backdropImage
T@"UIImage",R,N
T@"VUIChannelBannerLayout",&,N,V_layout
subscribeButton
T@"VUIButton",&,N,V_subscribeButton
disclaimerTextLabel
T@"VUILabel",&,N,V_disclaimerTextLabel
textLabels
T@"NSArray",&,N,V_textLabels
backdropBlurEffectStyle
Tq,N,V_backdropBlurEffectStyle
backdropInitialPeek
Td,N,V_backdropInitialPeek
backdropPeekGradient
Td,N,V_backdropPeekGradient
backdropMaskFactor
Td,N,V_backdropMaskFactor
T@"_TVImageView",&,N,V_bgImageView
lastFocusedView
T@"UIView",&,N,V_lastFocusedView
logoMargin
T{UIEdgeInsets=dddd},N,V_logoMargin
legendSize
T{CGSize=dd},N,V_legendSize
legendMaxWidth
Td,N,V_legendMaxWidth
legendsMargin
T{UIEdgeInsets=dddd},N,V_legendsMargin
legendNameMinWidth
Td,N,V_legendNameMinWidth
legendNamePadding
T{UIEdgeInsets=dddd},N,V_legendNamePadding
legendBackgroundColor
T@"UIColor",R,N,V_legendBackgroundColor
legendCornerRadius
Td,N,V_legendCornerRadius
dividerMargin
T{UIEdgeInsets=dddd},N,V_dividerMargin
dividerSize
T{CGSize=dd},N,V_dividerSize
dividerColor
T@"UIColor",R,N,V_dividerColor
legendLayout
T@"VUITextLayout",R,N,V_legendLayout
legendDescriptionLayout
T@"VUITextLayout",R,N,V_legendDescriptionLayout
minimumLineSpacing
Td,N,V_minimumLineSpacing
RECENT_PURCHASES
RENTALS
LIBRARY_MOVIES
LIBRARY_TVSHOWS
LIBRARY_MOVIES_4K_HDR
DOWNLOADED
LIBRARY_HOMESHARES
LIBRARY_HOME_VIDEOS
LIBRARY_FAMILY_SHARING
TRANSLATION NOT PROVIDED
T@"VUIMediaEntitiesFetchControllerResult",&,N,V_result
currentSubOperation
T@"NSOperation",&,N,V_currentSubOperation
v20@?0B8@"NSDictionary"12
T@"NSArray",&,N,V_videosPlayables
upNextPlayback
TB,N,GisUpNextPlayback,V_upNextPlayback
userPlaybackInitiationDate
T@"NSDate",&,N,V_userPlaybackInitiationDate
openURLCompletionDate
T@"NSDate",&,N,V_openURLCompletionDate
ContextTimeRemaining
attributedTitle
T@"NSAttributedString",C,N,V_attributedTitle
glyphSize
T{CGSize=dd},N,V_glyphSize
strokeSize
Td,N,V_strokeSize
T@"VUITextBadgeLayout",&,N,V_badgeLayout
T@"<VUITextBadgeViewDelegate>",W,N,V_delegate
VUITVShowDetailPageHeaderViewIdentifier
ShowDetailMainSection
VUITVShowDetailPageViewController
episodeGroups
T@"NSArray",&,N,V_episodeGroups
tvShowDetailPageViewModel
T@"VUITVShowDetailPageViewModel",&,N,V_tvShowDetailPageViewModel
headerTitle
T@"NSString",&,N,V_headerTitle
seasonsDataSource
T@"VUIMediaEntitiesDataSource",&,N,V_seasonsDataSource
episodesDataSource
T@"VUIMediaEntitiesDataSource",&,N,V_episodesDataSource
seasonsFetchHasCompleted
TB,N,V_seasonsFetchHasCompleted
episodesFetchHasCompleted
TB,N,V_episodesFetchHasCompleted
seasonIdentifiers
T@"NSArray",&,N,V_seasonIdentifiers
episodeShelfViewControllerBySeasonIdentifier
T@"NSDictionary",&,N,V_episodeShelfViewControllerBySeasonIdentifier
episodesBySeasonIdentifer
T@"NSDictionary",&,N,V_episodesBySeasonIdentifer
hasContent
logoShowOnlyOnFocus
TB,N,V_logoShowOnlyOnFocus
Device
Home Share
mediaEntityIdentifier
v16@?0@"VUIMPMediaItemAssetController"8
T@"<VUIMediaEntityAssetControllerDelegate>",W,N
supportsStartingDownload
T@"VUIMediaEntityAssetControllerState",R,C,N
T@"NSObject<OS_dispatch_queue>",&,N
T@"NSObject<VUIMediaEntityIdentifier>",C,N,V_mediaEntityIdentifier
downloadController
T@"VUIMPMediaItemDownloadController",&,N,V_downloadController
requestingPermissionToDownload
TB,N,GisRequestingPermissionToDownload,V_requestingPermissionToDownload
T@"MPMediaItem",R,N,V_mediaItem
T@"<VUIMediaEntityAssetControllerDelegate>",W,N,V_delegate
TB,R,N,V_supportsStartingDownload
T@"VUIMediaEntityAssetControllerState",R,C,N,V_state
isOpeningAnotherDocument
TB,N,V_isOpeningAnotherDocument
deferredMediaItem
T@"NSObject<TVPMediaItem>",&,N,V_deferredMediaItem
deferredElapsedTime
Td,N,V_deferredElapsedTime
backgroundBlendMode
Ti,N,V_backgroundBlendMode
backgroundColor
T@"UIColor",&,N,V_backgroundColor
separatorBlendMode
Ti,N,V_separatorBlendMode
separatorColor
T@"UIColor",&,N,V_separatorColor
Td,N,V_padding
topRowLayout
T@"VUIScoreboardRowLayout",&,N,V_topRowLayout
bottomRowLayout
T@"VUIScoreboardRowLayout",&,N,V_bottomRowLayout
documentCreator
T@"NSObject<VUIDocumentCreator>",&,N,V_documentCreator
widgetCreator
T@"NSObject<VUIWidgetCreator>",&,N,V_widgetCreator
playWhenDone
CommerceViewControllerIdentifier
notificationTitle
notificationBody
salableAdamId
T@"NSDictionary",R,C,N,V_offer
extrasAction
T@"VUIActionItunesExtras",R,C,N
redownload-params
v32@?0q8@"NSDictionary"16@"NSError"24
TRANSACTION_RESTRICTED_CONTENT
v24@?0@"WLKSubscriptionData"8@"NSError"16
SUBSCRIPTION_NOTIFICATION_TITLE
subscriptionConfirmation
TV.Hud.StartWatching
commerce transaction failure - 
commerceActionRef
T@"NSString",&,N,V_commerceActionRef
T@"NSDictionary",C,N,V_contextData
imageURL
baseImageIdentifier
covertArt
previewFrame
imageIdentifier
T@"NSURL",C,N,V_imageURL
T@"NSString",C,N,V_baseImageIdentifier
TQ,N,V_imageType
T@"NSString",R,C,N,V_imageIdentifier
isProgressBar
TB,N,V_isProgressBar
Use -[VUIBookmark initWithIdentifier:keyType:] instead.
%@, identifier=%@, keyType=%ld
T@"NSString",R,N,V_identifier
Tq,R,N,V_keyType
VUIDebugViewDefaultsCellReuseIdentifier
VUIDebugViewNavigationCellReuseIdentifier
VUIDebugViewHeaderReuseIdentifier
UI Widgets
Metrics Events
Metrics
Application Defaults
containerView
T@"VUIDebugContainerView",&,N,V_containerView
requiresRelayout
TB,N,V_requiresRelayout
dataSource
T@"VUIDebugViewDataSource",&,N,V_dataSource
v32@?0@"VUIAppDocumentUpdateEvent"8Q16^B24
T@"NSString",C,N,V_documentRef
documentUpdateContext
T@"<VUIAppDocumentUpdateContext>",&,N,V_documentUpdateContext
documentUpdateViewElements
T@"NSMutableOrderedSet",&,N,V_documentUpdateViewElements
deferredDocumentUpdateEventStore
T@"VUIAppDocumentUpdateEventStore",&,N,V_deferredDocumentUpdateEventStore
deferDocumentUpdateEventProcessing
TB,N,V_deferDocumentUpdateEventProcessing
viewWillAppearReason
TQ,N,V_viewWillAppearReason
markDocumentDirtyForRefreshUpdate
TB,N,GisDocumentMarkedDirty,V_markDocumentDirtyForRefreshUpdate
viewControllerIdentifier
T@"NSString",&,N,V_viewControllerIdentifier
viewControllerDocumentIdentifier
T@"NSString",&,N,V_viewControllerDocumentIdentifier
fetchResponse
fetchChanges
T@"VUIMediaItemEntityTypesFetchResponse",&,N,V_fetchResponse
T@"VUIMediaItemEntityTypesFetchResponseChanges",&,N,V_fetchChanges
dataSourceType
Tq,N,V_dataSourceType
mappingDictionary
T@"NSDictionary",C,N,V_mappingDictionary
orderedKeys
T@"NSOrderedSet",C,N,V_orderedKeys
T@"<VUIOrderedItemsMapDelegate>",W,N,V_delegate
highlightOrSelectedImage
T@"UIImage",&,N,V_highlightOrSelectedImage
VUIMediaItemTraitStopWhenPausedForTooLong
com.apple.videosui.VUIPlistMediaLibrary.serialProcessingQueue
Plist Database
v16@?0@"VUIPlistMediaLibrary"8
PlistMediaLibrary
database
T@"VUIPlistMediaDatabase",&,N,V_database
T@"VUICardFloatingContentView",&,N,V_floatingView
T@"UIView<TVAuxiliaryViewSelecting>",W,N,V_selectingView
allowsFocus
TB,N,V_allowsFocus
https://amp-api.videos.apple.com/v1/
me/purchases/shared/members
me/purchases
me/purchases/genres
types
with
filter[owner]
filter[genres]
filter[tvShowId]
sort
include
extend
tv-seasons
sharedPurchases
mostRecent
%@=%d
%@/%@
com.apple.VideosUI.VUIMediaLibraryFetchController.serialProcessingQueue
%p-%@-%@
v16@?0@"VUIMediaLibraryFetchController"8
completionQueue
Tq,V_state
fetchOperation
T@"NSOperation",&,N,V_fetchOperation
pauseCount
TQ,N,V_pauseCount
T@"NSString",C,N,V_logName
logNameSuffix
T@"NSString",C,N,V_logNameSuffix
%@ range:%@ data:%@
startOverallPosition
overallPosition
startPosition
Tq,R,N
TQ,N,V_overallPosition
timeRange
T{_NSRange=QQ},N,V_timeRange
TQ,N,V_duration
v32@?0{_NSRange=QQ}8^B24
T@"NSObject<TVPPlayback>",W,N,V_player
items
T@"NSArray",C,N,V_items
isLive
TB,N,V_isLive
product trailer media controller
@32@?0@"NSString"8@16@24
com.apple.frontrow
KVSUseXMLPlists
text/xml; charset=UTF-8
application/x-plist
VUIMetricsTabBarItemNotificationKey
dialog
default
remove
cancel
continue
subscribe
launch
linkedLaunch
linkedTaskSwitch
taskSwitch
siri
quit
allow
disallow
seeAll
appStore
install
switch
alertButton
upNextButton
menu
fail
actionContext
alert
details
approved
denied
undetermined
GDPR
consentGranted
xp_amp_tv_main
xp_amp_tv_unidentified
xp_amp_tv_log
xp_amp_clientperf
jsVersion
Installed
Subscribed
isAppLaunch
processStartTime
com.apple.videosui.metrics.serialQ
appLaunchData
T@"NSDictionary",C,N,V_appLaunchData
InternalBuild
?play
action=play
VUIMetricsBackgroundTask
ProductType
BuildVersion
utsc
environmentDataCenter
baseFields
T@"NSDictionary",C,N,V_baseFields
lastRecordedPageEventData
T@"VUIMetricsPageEventData",&,N,V_lastRecordedPageEventData
activeMetricsKit
T@"MTMetricsKit",&,N,V_activeMetricsKit
metricsKitMain
T@"MTMetricsKit",&,N,V_metricsKitMain
loggerKit
T@"MTMetricsKit",&,N,V_loggerKit
metricsKitUnidentified
T@"MTMetricsKit",&,N,V_metricsKitUnidentified
perfMetricsKit
T@"MTMetricsKit",&,N,V_perfMetricsKit
metricsDataDispatchSQ
T@"NSObject<OS_dispatch_queue>",&,N,V_metricsDataDispatchSQ
savedRecentEvents
T@"NSHashTable",&,N,V_savedRecentEvents
shouldPostAppLaunchData
TB,N,V_shouldPostAppLaunchData
isInDebugMode
TB,N,V_isInDebugMode
cachedOpenUrlData
T@"NSDictionary",&,N,V_cachedOpenUrlData
currentTabIdentifier
T@"NSString",R,C,N,V_currentTabIdentifier
exitEventDestinationUrl
T@"NSString",&,N,V_exitEventDestinationUrl
v32@?0@"NSData"8Q16@"NSError"24
memberIdentifier
T@"NSNumber",&,N,V_memberIdentifier
T@"NSString",&,N,V_firstName
T@"NSString",&,N,V_lastName
T@"NSString",&,N,V_accountName
TB,N,V_sharingPurchases
memberImage
T@"UIImage",&,N,V_memberImage
T@"<VUIFamilyMemberDelegate>",W,N,V_delegate
resource
mpaa-g
text
mpaa-pg
pg13
mpaa-pg13
PG-13
mpaa-r
unrated
Unrated
tv-y
TV-Y
tvy7
tv-y7
TV-Y7
tv-g
TV-G
tvpg
tv-pg
TV-PG
tv14
tv-14
TV-14
tvma
tv-ma
TV-MA
tvy7fv
tv-y7fv
TV-Y7FV
bbfcu
bbfc-u
bbfcpg
bbfc-pg
bbfc12a
bbfc-12a
bbfc12
bbfc-12
bbfc15
bbfc-15
bbfc18
bbfc-18
bbfcr18
bbfc-r18
barsl
bars-l
bars10
bars-10
bars12
bars-12
bars14
bars-14
bars16
bars-16
bars18
bars-18
nc17
mpaa-nc17
NC-17
/_/g
/Plus/gi
([^0-9A-Z])+
brmovies_|brtv_|brmovie
bars
T@"NSDictionary",&,N,V_mappingDictionary
T@"VUIErrorLayout",&,N,V_layout
debugTextLabel
T@"VUILabel",&,N,V_debugTextLabel
T@"VUILabel",&,N,V_debugTextLabel2
StackScrollPage
json
SportsScrollPage
VideoPostPlayStyleSheet
VideoWatchNowStyleSheet
VideoProductShowcaseStyleSheet
VideoSportsProductStyleSheet
VideoBaseStyleSheet
VideoStackStyleSheet
VideoAlertStyleSheet
VideoCatalogStyleSheet
confirmationDialogTemplate
sportsProductTemplate
watchNowTemplate
popoverTemplate
contextMenuPopoverTemplate
descriptiveInfoTemplate
errorTemplate
upsellOfferTemplate
postPlayTemplate
confirmationCardTemplate
offersTemplate
sportsFavoritesTemplate
canvasTemplate
productShowcaseTemplate
contextMenuTemplate
videoTextBadge
disclaimerText
promoText
timeline
videoLockup
videoListLockup
episodeLockup
episodeInfoCard
ribbonLockup
featuredLockup
messageLockup
castBanner
roomBanner
showcaseHeader
channelBanner
largeNavigationHeader
markAsWatchedButton
shareButton
downloadButton
accountSettingsButton
favoriteCell
leagueCell
leagueHeaderCell
favoriteDescriptionCell
favoriteSpacerCell
offerListLockup
versionListLockup
productMetadata
castInfo
availableTitle
buyButton
productId
episodeId
tags
focusedText
detailsText
featuredCard
upNextCard
appImg
videoRatingCard
videoReviewCard
videoAboutCard
videoTabItemCard
offerCard
editorialCard
extrasDescriptionCard
sportsFeaturedCard
sportsCard
sportsUpNextCard
sportsLockup
scorecard
scoreRow
score
sportFavoriteBanner
watchNowBanner
postPlayBanner
episodeShelf
autoPostPlayDuration
vui-grid-style
full
edgeToEdge
vui-grid-type
vui-col-span
grid
vui-constrain-ratio
vui-shelf-style
plain
documentRefContext
documentRefData
isHandled
eventTimeStamp
loadDocumentImmediately
updateEvents
alignLogoToLeftIfRTL
viewSource
vui-channel-id
vui-is-favorited
vui-group
vui-supports-product-browser
has-disclaimer-text
navBarHidden
showsStatusBarGradientView
light
dark
channel
tabItems
checkmark
upNext
transaction
equalPadding
vui-document-ref
popoverGroup
popoverOption
popover
phoneImage
padImage
disableInProductBrowser
vui-update-events
vui-debug-identifier
foregroundTTL
refreshTTL
activeTTL
purchases
purchase
playActivity
settings
favorites
accountChanged
removeFromPlayHistory
entitlements
utsk
appRefresh
appDidBecomeActive
playHistoryUpdated
clearPlayHistory
locationAuthorizationChanged
locationRetrieved
iamMessageReceived
preBanner
postBanner
banner
episodeNumberTitle
episodeNumberTitleAbbreviated
comingSoonText
availabilityText
availabilityImage
tvUberImage
phoneUberImage
padUberImage
uberImage
aspectRatios
cropCodes
imagePlaceholder
phoneNarrow
phoneStandard
phoneWide
padNarrow
padStandard
padWide
jpeg
sportsLeagueID
sportsTeamName
FAVORITES_REMOVE_TEAM
CANCEL
FAVORITES_REMOVE_TEAM_BUTTON
T@"NSString",C,N,V_sportsLeagueID
T@"NSString",C,N,V_sportsTeamName
gradientScale
Td,N,V_gradientScale
gradientStop
Td,N,V_gradientStop
v32@?0@"NSObject<NSCopying>"8@"NSArray"16^B24
homeShares
T@"NSArray",&,N,V_homeShares
mediaEntitiesFetchController
T@"VUIMediaEntitiesFetchController",&,N,V_mediaEntitiesFetchController
categoryTypeByFetchRequestIdentifier
T@"NSDictionary",&,N,V_categoryTypeByFetchRequestIdentifier
categoryTypes
T@"NSArray",&,N,V_categoryTypes
mediaEntitiesByCategoryType
T@"NSDictionary",&,N,V_mediaEntitiesByCategoryType
hasMediaEntitiesFetchCompleted
TB,N,V_hasMediaEntitiesFetchCompleted
genreGroupings
T@"NSArray",&,N,V_genreGroupings
rentalsUpdateFetchController
T@"VUIMediaEntitiesFetchController",&,N,V_rentalsUpdateFetchController
familyDataSource
T@"VUILibraryFamilyMembersDataSource",&,N,V_familyDataSource
transform.rotation.z
indeterminateAnimation
indeterminateLayer
T@"CAShapeLayer",&,N,V_indeterminateLayer
progressBackgroundLayer
T@"CAShapeLayer",&,N,V_progressBackgroundLayer
indeterminateWidth
Td,N,V_indeterminateWidth
indeterminate
TB,N,GisIndeterminate,V_indeterminate
progressFillColor
T@"UIColor",&,N,V_progressFillColor
centerSquareWidth
Td,N,V_centerSquareWidth
T@"NSString",R,N,V_title
T@"NSString",R,N,V_subtitle
T@"NSString",R,N,V_domain
defaultName
T@"NSString",R,N,V_defaultName
defaultBoolValue
TB,N,V_defaultBoolValue
integerValueType
TB,N,V_integerValueType
defaultIntegerValue
TQ,N,V_defaultIntegerValue
Enable Debug UI
Stage Demo
Ignore HTTP Cache
com.apple.ITMLKit
IgnoreHTTPCache
Print Document XML
LogDocumentXML
JS Console Logging
LogJSConsole
Purge Images on Launch
com.apple.TVMLKit
PurgeImageCache
Page Perf UI
PagePerformanceUIEnabled
UI Animation Coefficient
Values (0, 2, 5, 10, 25)
com.apple.UIKit
UIAnimationDragCoefficient
Show logging in Console
Show expanded logging in Console
Log pageRender events
metricsDataSource
T@"NSArray",&,N,V_metricsDataSource
defaultsDataSource
T@"NSArray",&,N,V_defaultsDataSource
The cropToFit parameter cannot be set to YES when no scale size is given
scaleToSize
cropToFit
T@"TVImage",R,N
scalingResult
T@"NSError",R,C,N
params
T@"<VUIImageLoadParams>",&,N,V_params
T{CGSize=dd},N,V_scaleToSize
TB,N,V_cropToFit
T@"TVImage",&,N,V_image
TQ,N,V_scalingResult
buyProduct
&mtApp=%@
&vid=%@
T@"NSString",C,N,V_buyParams
urlBagKey
T@"NSString",C,N,V_urlBagKey
T@"NSString",C,N,V_userAgent
T@"NSNumber",C,N,V_dsid
strongToken
T@"NSString",C,N,V_strongToken
ignoresForcedPasswordRestriction
TB,N,V_ignoresForcedPasswordRestriction
**UNDEFINED**
NetworkHLS
NetworkCRABS
%@=%p
block
identifierInternal
T@"NSObject<VUIMediaEntityIdentifierInternal>",C,N,V_identifierInternal
firstAccessPropertiesCache
T@"NSMutableDictionary",&,N,V_firstAccessPropertiesCache
cachesPropertiesOnFirstAccess
TB,N,V_cachesPropertiesOnFirstAccess
T@"VUIMediaEntityKind",R,N,V_kind
T@"NSSet",R,N,V_requestedProperties
T@"_TVContentRating",R,C,N
localChanges
TB,N,GhasLocalChanges,V_localChanges
onProcessOffers
isInFullScreenPlayback
eventSource
hasRegisterdDeviceForOffer
v24@?0@"NSSet"8@"NSError"16
v36@?0@"VUIImageProxyAnimator"8@"TVImage"16@"NSError"24B32
displayImageIndex
TQ,N,V_displayImageIndex
indexOfFetchedImage
TQ,N,V_indexOfFetchedImage
transitionTimer
T@"NSTimer",W,N,V_transitionTimer
cachingEnabled
TB,N,GisCachingEnabled,V_cachingEnabled
T@"NSArray",C,N,V_imageProxies
animationOptions
TQ,N,V_animationOptions
animationDuration
Td,N,V_animationDuration
transitionInterval
Td,N,V_transitionInterval
type: %@,
 active: %@
TB,N,GisActive,V_active
TB,N,GshouldAutoRemove,V_autoRemove
T@,&,N,V_userInfo
type: %@,
 active: %@,
 startTime: %f,
 duration: %f,
 isSkippable: %@
Td,N,V_startTime
TB,N,GisSkippable,V_skippable
TQ,N,V_activationType
T@"NSArray",C,N,V_advisoryDisabledTimeRanges
type: %@,
 active: %@,
 duration: %f,
 repeats: %@
repeats
TB,R,N,V_repeats
VUINowPlayingFeatureTypeNowPlayingHud
VUINowPlayingFeatureTypePostPlay
VUINowPlayingFeatureTypeBootstrapPostPlay
VUINowPlayingFeatureTypePreRoll
VUINowPlayingFeatureTypeMidRoll
VUINowPlayingFeatureTypePostRoll
VUINowPlayingFeatureTypeSkipIntro
VUINowPlayingFeatureTypeTVAdvisory
VUINowPlayingFeatureTypeStillWatchingAlert
VUINowPlayingFeatureTypeStopWhenPausedForTooLong
VUINowPlayingFeatureTypeStopWhenBackgroundedForTooLong
cardLayoutType
Tq,R,N,V_cardLayoutType
Tq,R,N,V_gridStyle
Tq,R,N,V_gridType
hideFloatingBackground
TB,N,V_hideFloatingBackground
T@"UIColor",&,N,V_darkBackgroundColor
highlightColor
T@"UIColor",&,N,V_highlightColor
imagePosition
Tq,N,V_imagePosition
secondaryTextLayout
T@"VUITextLayout",&,N,V_secondaryTextLayout
detailsTextLayout
T@"VUITextLayout",&,N,V_detailsTextLayout
Tq,N,V_layoutType
UpnextBlurGradientAlpha
UpNextGradient
PlayMask
BackgroundMask
T@"VUIUpNextOverlayLayout",&,N,V_overlayLayout
progressViewElement
T@"IKViewElement",&,N,V_progressViewElement
appImageElement
T@"IKViewElement",&,N,V_appImageElement
logoImageView
T@"_TVImageView",&,N,V_logoImageView
logoImageElement
T@"IKViewElement",&,N,V_logoImageElement
textElement
T@"IKViewElement",&,N,V_textElement
subtitleElement
T@"IKViewElement",&,N,V_subtitleElement
blurMaskLayer
T@"CALayer",&,N,V_blurMaskLayer
progressViewShowOnlyOnFocus
TB,N,V_progressViewShowOnlyOnFocus
appImageViewShowOnlyOnFocus
TB,N,V_appImageViewShowOnlyOnFocus
logoImageViewShowOnlyOnFocus
TB,N,V_logoImageViewShowOnlyOnFocus
textLabelShowOnlyOnFocus
TB,N,V_textLabelShowOnlyOnFocus
subtitleLabelShowOnlyOnFocus
TB,N,V_subtitleLabelShowOnlyOnFocus
badgeShowOnlyOnFocus
TB,N,V_badgeShowOnlyOnFocus
autoPlayDuration
T@"NSNumber",&,N,V_autoPlayDuration
autoPlayIndicator
T@"VUICountDownProgressIndicator",&,N,V_autoPlayIndicator
VUIDebugMetricsEventCellReuseIdentifier
eventType: %@
%lu impressions
%lu locations
T@"VUIDebugMetricsEvent",&,N,V_event
lastConfirmedAge
ageConfirmationLastPrompted
v20@?0B8q12
PBSRestrictionAllowed
PBSRestrictionDeniedByProfile
PBSRestrictionDeniedBySetting
PBSRestrictionUserCancelled
AGE_GATE_CONFIRMATION_MESSAGE
RENTAL_PLAYBACK_WINDOW_WARNING_TITLE_FORMAT
RENTAL_PLAYBACK_WINDOW_WARNING_MESSAGE
PLAY
restrictionsCheckType
TQ,N,V_restrictionsCheckType
presentingController
T@"UIViewController",&,N,V_presentingController
com.apple.videosui.VUIMPHomeShareMediaLibraryManager.serialProcessingQueue
@"NSObject<NSCopying>"16@?0@"VUIMPHomeShareMediaLibrary"8
B24@?0@"VUIMPHomeShareMediaLibrary"8@"VUIMPHomeShareMediaLibrary"16
T@"<VUIHomeShareMediaLibraryManagerDelegate>",W,N
T@"VUIMediaLibraryManager",W,N,V_manager
mutableHomeShareMediaLibraries
T@"NSMutableArray",&,N,V_mutableHomeShareMediaLibraries
T@"<VUIHomeShareMediaLibraryManagerDelegate>",W,N,V_delegate
playUrl
APP_INSTALL_RESTRICTED
SETTINGS
prefs:root=SCREEN_TIME&path=CONTENT_PRIVACY
PUNCHOUT_FAILED_ERROR
PUNCHOUT_FAILED_GENERIC_ERROR
TRANSACTION_RESTRICTED_PUNCHOUT
v24@?0@"NSError"8@"VUIActionPunchout"16
isPlaybackURL
TB,N,V_isPlaybackURL
T@"NSString",C,N,V_contentTitle
punchoutURL
T@"NSURL",&,N,V_punchoutURL
TB,N,V_isEntitledToPlay
T@"VUIContentMetadata",&,N,V_contentMetadata
T@"NSString",&,N,V_externalID
T@"NSString",&,N,V_referenceID
VUIDeviceMediaLibraryUpdateStateDidChangeNotification
isUpdating
isInitialUpdateInProgress
updating
TB,R,N,GisUpdating
initialUpdateInProgress
TB,R,N,GisInitialUpdateInProgress
vui_hasValidImage
mediaControllerPlaybackDelay
VUIMediaControllerForegroundStateDidChangeNotification
VUIMediaControllerWillStartPlaybackNotification
VUIMediaControllerDidStartPlaybackNotification
VUIMediaControllerWillStopPlaybackNotification
VUIMediaControllerDidStopPlaybackNotification
VUIMediaControllerIsPlayingFullscreenKey
VUIMediaControllerIsAutomaticPlaybackStartKey
VUIMediaControllerPlaybackStartReasonKey
VUIMediaControllerIsAutomaticPlaybackStopKey
VUIMediaControllerPlaybackStopReasonKey
Not doing anything
Loading image
Showing image
Waiting for player to start loading
Loading playlist
Showing playback in background
Showing playback in foreground
Finsihed playback
Media controller waiting for timeout while paused
Set image
Load image
Show image
Set playlist
Load playlist
Show playback
Player state changed
Transition to foreground
Transition background
Playback error occurred
Finished playback
Replay
Pause
Restore avPlayerViewController
PlaylistKey
ImageProxyKey
AnimatedKey
PlaybackStateKey
generic media controller
%@(%ld)
v56@?0@"TVPStateMachine"8@"NSString"16@"NSString"24@"NSString"32@40@"NSDictionary"48
-[VUIMediaController viewWillDisappear:]
Picture in picture state changed
pictureInPictureActive
avPlayer
v20@?0@"TVPPlaylist"8B16
v16@?0@"TVPPlaylist"8
v24@?0@"TVImageProxy"8@?<v@?B>16
setting initial mute state
Media controller finished background playback.
Media controller foregrounded
Media controller backgrounded
playbackEnabled
TB,N,GisPlaybackEnabled
showsVideoControls
T@"TVMediaInfo",C,N
T@"<TVMediaControllerDelegate>",W,N
shouldZoomWhenTransitioningToBackground
coverImage
proxyImageView
T@"_TVImageView",&,N,V_proxyImageView
T@"TVImageProxy",&,N,V_currentImageProxy
playbackContainerController
T@"UIViewController",&,N,V_playbackContainerController
playbackLoadingStartDate
T@"NSDate",&,N,V_playbackLoadingStartDate
playbackLoadingTimer
T@"NSTimer",W,N,V_playbackLoadingTimer
pendingPlaylist
T@"TVPPlaylist",&,N,V_pendingPlaylist
pendingImageProxy
T@"TVImageProxy",&,N,V_pendingImageProxy
playerReadyToBePlayed
TB,N,GisPlayerReadyToBePlayed,V_playerReadyToBePlayed
imageAnimationOptions
TQ,N,V_imageAnimationOptions
imageAnimationDuration
Td,N,V_imageAnimationDuration
imageTransitionInterval
Td,N,V_imageTransitionInterval
shouldAnimateOverlayView
TB,N,V_shouldAnimateOverlayView
overlayViewDisplayDuration
Td,N,V_overlayViewDisplayDuration
doesDelegateRespondToShowStill
TB,N,V_doesDelegateRespondToShowStill
doesDelegateRespondToStateChange
TB,N,V_doesDelegateRespondToStateChange
Tq,N,V_playbackStopReason
secondaryVideoView
T@"TVPVideoView",&,N,V_secondaryVideoView
pauseStateTimeoutTimer
T@"NSTimer",W,N,V_pauseStateTimeoutTimer
vpafPlaybackStartReason
TQ,N,V_vpafPlaybackStartReason
vpafPlaybackStopReason
TQ,N,V_vpafPlaybackStopReason
shouldPlayAfterAppBecomesActive
TB,N,V_shouldPlayAfterAppBecomesActive
backgrounded
TB,R,N,GisBackgrounded
didWeCreatePlayer
TB,N,V_didWeCreatePlayer
observingPictureInPictureActive
TB,N,V_observingPictureInPictureActive
titleForLogging
T@"NSString",C,N,V_titleForLogging
deactivationReasons
TQ,N,V_deactivationReasons
T@"AVPlayerViewController",&,N,V_avPlayerViewController
T@"TVMediaInfo",C,N,V_mediaInfo
T@"<TVMediaControllerDelegate>",W,N,V_delegate
allowsSkipping
TB,N,V_allowsSkipping
TB,N,V_shouldZoomWhenTransitioningToBackground
T@"NSString",R,C,N,V_name
TB,N,GisPlaybackEnabled,V_playbackEnabled
stopPlayerWhenViewDisappears
TB,N,GshouldStopPlayerWhenViewDisappears,V_stopPlayerWhenViewDisappears
clearPreviousImageBeforeLoading
TB,N,V_clearPreviousImageBeforeLoading
popWhenPlayerStops
TB,N,V_popWhenPlayerStops
restoringAVPlayerController
TB,N,GisRestoringAVPlayerController,V_restoringAVPlayerController
stopWhenAnotherMediaControllerStarts
TB,N,GshouldStopWhenAnotherMediaControllerStarts,V_stopWhenAnotherMediaControllerStarts
com.apple.VideosUI.StoreAcquisitionCrossProcessNotification
VUIStoreAcquisitionCrossProcessNotificationKeyBuyParams
VUIStoreAcquisitionCrossProcessNotificationKeyError
T@"VUIStoreAcquisitionProperties",C,N,V_properties
completionBlock
T@?,C,N,V_completionBlock
cancelled
TB,GisCancelled,V_cancelled
apple-timing-app
Error making purchase: no buy params specified in request
TVCKCloudDataClientError
tabId
baseFieldsForVPAF
T@"NSDictionary",R,C,N
iTunesVPAF
boot-url
UseEmbeddedJS
-[VUIBootURLController fetchBootURLWithCompletionHandler:]_block_invoke
TVBootURL
localAppURL
T@"NSURL",&,N,V_localAppURL
T@"VUIFamilySharingRelationship",&,N,V_season
T@"VUIFamilySharingRelationship",&,N,V_show
get-watchlist-settings
update-watchlist-settings
uvSearch/max-local-settings-age-seconds
uvSearch/uts-api-base-url
uvSearch/init-config-get-url-length-limit
uvSearch/routes/init-config-path
uvSearch/nowplaying-enabled
uvSearch/sports-enabled
uvSearch/locationEnabled
uvSearch/enabled-notification-types
push-notifications/environment
mint-account
AddFundsUrl
manageSubscriptionsUrl
manageSubscriptionsV2Url
signup
privacyAcknowledgementUrl
tv-app-url
processRedirectUrl
deviceOffers
TVApp
https://apps.mzstatic.com/content/54a1317a0ad442d3965d64ef6bfaae1c/
ACCOUNT_SWITCH
ACCOUNT_SIGNOUT
userSwitchOverlayWindow
T@"UIWindow",&,N,V_userSwitchOverlayWindow
userSwitchSnapshotView
T@"UIView",&,N,V_userSwitchSnapshotView
userSwitchEffectView
T@"UIVisualEffectView",&,N,V_userSwitchEffectView
userSwitchLabel
T@"UILabel",&,N,V_userSwitchLabel
userSpinnerView
T@"UIActivityIndicatorView",&,N,V_userSpinnerView
hiding
TB,N,V_hiding
mediaItemEntityTypesChangeSet
localMediaItemsAvailableDidChange
T@"VUICollectionChangeSet",R,N,V_mediaItemEntityTypesChangeSet
TB,R,N,V_localMediaItemsAvailableDidChange
databaseShow
T@"VUIPlistMediaDatabaseShow",&,N,V_databaseShow
VUIMediaTagKeySeparator
VUIMediaTagKeyTitle
VUIMediaTagKeyDescription
VUIMediaTagKeyReleasedDate
VUIMediaTagKeyContentRatingAuxiliaryName
VUIMediaTagKeyGenre
VUIMediaTagKeyDuration
VUIMediaTagKeyCommonSenseImage
VUIMediaTagKeyCommonSenseDarkImage
VUIMediaTagKeyCommonSenseRating
VUIMediaTagKeyRatingImage
VUIMediaTagKeyClosedCaptionImage
VUIMediaTagKeyVideoResolutionImage
VUIMediaTagKeyVideoDynamicRangeImage
VUIMediaTagKeyADLocalesImage
VUIMediaTagKeySDHLocalesImage
VUIMediaTagKeyDolbyAtmosImage
VUIMediaTagKeyTomatoFreshnessImage
VUIMediaTagKeyTomatoPercentage
VUIMediaTagKeyRentalExpiration
VUIMediaTagKeyAvailabilityText
VUIMediaTagKeyComingSoonText
VUIMediaTagKeyAvailabilityImage
VUIMediaTagKeyItunesExtras
VUIMediaTagKeyEpisodeNumberTitle
scoresRefreshInSeconds
sportsEventsById
T@"NSMutableDictionary",&,N,V_sportsEventsById
scoreboardUpdateTimer
T@"NSTimer",&,N,V_scoreboardUpdateTimer
scoreboardUpdateInterval
Tq,N,V_scoreboardUpdateInterval
updateInProgress
TB,N,V_updateInProgress
preActionDocumentDataSource
preActionDataSource
documentDataSource
postActionDocumentDataSource
T@"VUIDocumentDataSource",&,N,V_preActionDocumentDataSource
preAction
T@"VUIAction",&,N,V_preAction
T@"VUIDocumentDataSource",&,N,V_documentDataSource
T@"VUIDocumentDataSource",&,N,V_postActionDocumentDataSource
postAction
T@"VUIAction",&,N,V_postAction
groupingSortIndexes
mediaEntitySubtype
TQ,N,V_mediaEntitySubtype
T@"NSArray",C,N,V_grouping
T@"NSArray",C,N,V_groupingSortIndexes
showTimeSchedule
infoText
darkLogo
tintColor
darkTintColor
T@"VUIProductInfoAiringLayout",&,N,V_layout
infoLabel
T@"VUILabel",&,N,V_infoLabel
T@"_TVImageView",&,N,V_logo
vui-button-style
@"NSDate"16@?0@"VUIMediaEntity"8
featuredView
T@"VUICollectionViewFeaturedView",&,N,V_featuredView
VUIStoreAuxMediaItem
m3u8
movpkg
Streaming
TOO_MANY_DEVICES_STREAMING_EPISODE_ERROR_FORMAT
TOO_MANY_DEVICES_STREAMING_MOVIE_ERROR_FORMAT
T@"NSURL",C,N,V_url
T@"VUIMutableBookmark",&,N,V_bookmark
parentReportingToken
T@"NSObject",&,N,V_parentReportingToken
isHLS
TB,N,V_isHLS
isAudioOnly
TB,N,V_isAudioOnly
T@"NSString",C,N,V_bookmarkID
TB,N,V_sharedPurchase
ignoreExistingOfflineKeyData
TB,N,V_ignoreExistingOfflineKeyData
VUIRatingViewLogoImageKey
VUIRatingViewLegendsKey
VUIRatingViewLegendNameKey
VUIRatingViewLegendDescriptionKey
dividerView
T@"UIView",&,N,V_dividerView
legendViews
T@"NSArray",C,N,V_legendViews
T@"VUIProductBannerLayout",&,N,V_layout
logoTextView
T@"VUILabel",&,N,V_logoTextView
subTextView
T@"VUILabel",&,N,V_subTextView
episodeInfoView
T@"VUILabel",&,N,V_episodeInfoView
logoTextGradientView
T@"_TVImageView",&,N,V_logoTextGradientView
coverArtImageView
T@"_TVImageView",&,N,V_coverArtImageView
decorationImageView
T@"_TVImageView",&,N,V_decorationImageView
decorationImageGradientView
T@"_TVImageView",&,N,V_decorationImageGradientView
comingSoonView
T@"VUIComingSoonBannerCardView",&,N,V_comingSoonView
castInfoView
T@"VUIProductBannerCastInfoView",&,N,V_castInfoView
disclaimerTextView
T@"VUILabel",&,N,V_disclaimerTextView
promoTextView
T@"VUILabel",&,N,V_promoTextView
isFocusable
TB,N,V_isFocusable
cardShowcaseFactor
Td,N,V_cardShowcaseFactor
fillColor
T@"UIColor",&,N,V_fillColor
T@"UIColor",&,N,V_tintColor
gradientStartColor
T@"UIColor",&,N,V_gradientStartColor
gradientEndColor
T@"UIColor",&,N,V_gradientEndColor
Td,N,V_height
T{UIEdgeInsets=dddd},N,V_padding
shouldProgressBarUseRoundCorner
TB,N,V_shouldProgressBarUseRoundCorner
useMaterial
TB,N,V_useMaterial
materialView
T@"UIVisualEffectView",&,N,V_materialView
T@"VUIFeaturedCellOverlayLayout",&,N,V_overlayLayout
VUISyncingKeyValueStoreVersionDidChange
VUISyncingKeyValueStoreDidReset
TVSLastKnownAccountID
schemaVersion
hasChangesSinceLastSyncBegan
clean
syncing
cleaningUpToReSyncAll
syncingAndWillSyncAgainWhenComplete
needsSync
ensureInSync
syncComplete
reset
keyPrefix
T@"NSString",R,N,V_keyPrefix
conflictResolver
T@?,R,N,V_conflictResolver
v32@?0@"NSString"8@?<@@?@"NSString"@@>16^B24
#T:[%@%p] #Error #%@ : Couldn't initialize database 
#T:[%@%p] #Error #%@ : Couldn't initialize sync engine 
kvstore-sync
#T:[%@%p] #Error #%@ : Unable to delete cached data: %@ 
com.apple.apple-tv
q24@?0@"VUIConflictResolverEntry"8@"VUIConflictResolverEntry"16
#T:[%@%p] #Warning #%@ : Error deserializing property list for key %@. Skipping. 
#T:[%@%p] #Warning #%@ : setObjectsInDictionary expected NSString keys got %@ 
#T:[%@%p] #Warning #%@ : setObjectsInDictionary failed to serialize value %@ 
#T:[%@%p] #Error #%@ : Failed to get dirty values 
v32@?0@"NSString"8@"NSData"16^B24
v16@?0@"VUIiTunesKeyValueStoreSyncResponse"8
v24@?0@"NSString"8@"NSArray"16
KVSSyncEngineStateMachine
#T:[%@%p] #Error #%@ : Still unable to open database file. Giving up. 
ATViTunesKeyValueStore-dbQueue
DELETE FROM cache WHERE dirty=0 AND lastupdated < datetime('%@')
#T:[%@%p] #Error #%@ : Error purging cache. %s 
BRLog
#T:[%@%p] #Notice #%@ : invalid since date - cannot be nil 
#T:[%@%p] #Error #%@ : Unable to remove database file %@. %@ 
#T:[%@%p] #Error #%@ : Couldn't read string from database 
#T:[%@%p] #Error #%@ : Expected column type of SQLITE_TEXT but got %d in get type. 
#T:[%@%p] #Error #%@ : Expected column type of SQLITE_BLOB for value but got %d in get type. 
#T:[%@%p] #Error #%@ : Expected column type of SQLITE_INTEGER but got %d in get type. 
SELECT value FROM cache WHERE key = ?
#T:[%@%p] #Error #%@ : Error creating data for sqlite value. 
#T:[%@%p] #Error #%@ : Error executing get value statement. %d 
#T:[%@%p] #Error #%@ : Error binding parameter in set value statement. %d 
#T:[%@%p] #Error #%@ : Error resetting statement in set value. %d 
SELECT key FROM cache
#T:[%@%p] #Error #%@ : Error creating key (%@). 
#T:[%@%p] #Error #%@ : All keys query didn't finish with SQLITE_DONE. %d 
#T:[%@%p] #Error #%@ : Error resetting all keys statement. %d 
#T:[%@%p] #Error #%@ : the db has a dsid that doesn't match the current account's DSID 
SELECT key, value FROM cache WHERE dirty = 1
#T:[%@%p] #Error #%@ : Error creating key (%@) or value (%p). 
#T:[%@%p] #Error #%@ : Dirty query didn't finish with SQLITE_DONE. %d 
#T:[%@%p] #Error #%@ : Error resetting dirty statement. %d 
BEGIN TRANSACTION
#T:[%@%p] #Error #%@ : Error beginning transaction. %d 
COMMIT TRANSACTION
#T:[%@%p] #Error #%@ : Error committing transaction. %d 
#T:[%@%p] #Error #%@ : Exception in _dbTransaction:. %@. 
ROLLBACK TRANSACTION
#T:[%@%p] #Error #%@ : Error rolling back transaction. %d 
SELECT value FROM dict WHERE key = ?
#T:[%@%p] #Error #%@ : Error binding key %@ to statement. %d 
INSERT OR REPLACE INTO dict (key, value) values (?, ?)
#T:[%@%p] #Error #%@ : Error executing sqlite3_step for _dbSetString. %d 
#T:[%@%p] #Error #%@ : Error binding key %@ or value %@ to statement. %d, %d 
#T:[%@%p] #Error #%@ : Error resetting statement in _dbSetString. %d 
INSERT OR REPLACE INTO cache (key, value, dirty) values (?, ?, 1)
#T:[%@%p] #Error #%@ : Error binding parameter in set value statement. %d, %d, %d 
#T:[%@%p] #Error #%@ : Error executing set value statement. %d 
#T:[%@%p] #Error #%@ : Error resetting statement. %d 
UPDATE cache SET dirty = 0
#T:[%@%p] #Error #%@ : Error clearing dirty bits on all records. %d 
#T:[%@%p] #Error #%@ : Couldn't create folder %@ for SQLite database. %@ 
#T:[%@%p] #Error #%@ : Can't open SQLite database. %d 
#T:[%@%p] #Error #%@ : Couldn't begin transaction. %s 
DROP TABLE dict
#T:[%@%p] #Error #%@ : (Sync)Couldn't drop dict table. %s 
DROP TABLE cache
#T:[%@%p] #Error #%@ : (Sync)Couldn't drop cache table. %s 
END TRANSACTION
#T:[%@%p] #Error #%@ : Couldn't end transaction. %s 
SELECT value FROM dict where key = '%@'
CREATE TABLE cache (key TEXT PRIMARY KEY, value BLOB, dirty BOOLEAN NOT NULL DEFAULT 1)
#T:[%@%p] #Error #%@ : Couldn't create cache table. %s 
CREATE TABLE dict (key TEXT PRIMARY KEY, value TEXT NULL)
#T:[%@%p] #Error #%@ : Couldn't create dict table. %s 
INSERT INTO dict (key, value) VALUES ('%@', '%@')
#T:[%@%p] #Error #%@ : Couldn't insert %@ into dict. %s 
#T:[%@%p] #Error #%@ : Error preparing statement. SQL: %s, ERROR: %s (%d) 
#T:[%@%p] #Error #%@ : Cannot convert value to property list. %@ 
#T:[%@%p] #Error #%@ : Error deserializing object. %@ 
T@"VUIPageHeaderView",&,N,V_headerView
menuView
T@"UIView",&,N,V_menuView
detailView
T@"UIView",&,N,V_detailView
CardShadowUnfocused
Manual
ContentsChange
upNextAdded
upNextRemoved
favoritesAdded
favoritesRemoved
MovieBundle
nameKey
contextDataDict
T@"NSDictionary",C,N,V_contextDataDict
movieID
T@"NSString",R,C,N,V_movieID
movieBundleID
T@"NSString",R,C,N,V_movieBundleID
T@"NSString",R,C,N,V_showID
episodeID
T@"NSString",R,C,N,V_episodeID
confirmationDialogType
T@"NSString",C,N,V_confirmationDialogType
Not showing anything
Showing video fullscreen
Showing video picture in picture
Showing video fullscreen and picture in picture
Waiting for playback view to appear while showing nothing
Waiting for fullscreen playback view to appear while showing picture in picture
Waiting for fullscreen playback view to appear while showing fullscreen and picture in picture
Waiting for playback view to appear to restore picture in picture
Waiting for view to appear to restore picture in picture while playing dual stream
Swapping fullscreen and picture in picture
Showing error message
Play media info
Dismiss media info
Fullscreen playback view will appear
Fullscreen playback view did appear
Fullscreen playback view will disappear
playback state did change
Will start picture in picture
Did start picture in picture
Will stop picture in picture
Did stop picture in picture
Picture in picture presentation did fail
Restore user interface for picture in picture stop
Error did occur
Error did dismiss
Application will enter foreground
Application did enter background
Post play has timedout
Media info did change
AVPlayerViewControllerKey
CompletionKey
DisappearanceReasonKey
CanPlayMediaKey
VUITVOSPlaybackManagerWillSeekToTime
VUITVOSPlaybackManagerSeekReasonKey
VUITVOSPlaybackManagerPlaybackWillStartNotification
VUITVOSPlaybackManagerPlaybackDidEndNotification
T@"TVPPlayer",&,N,V_player
featureMonitor
T@"VUINowPlayingFeatureMonitor",&,N,V_featureMonitor
requiresLinearPlayback
TB,N,V_requiresLinearPlayback
nowPlayingViewController
T@"VUINowPlayingViewController",&,N,V_nowPlayingViewController
advisoryImage
T@"UIImage",&,N,V_advisoryImage
currentMediaTVShow
TB,R,N,GisCurrentMediaTVShow
ignorePlayerStop
TB,N,GshouldIgnorePlayerStop,V_ignorePlayerStop
VUITVOSPlaybackManager
mute
unmute
v16@?0@"AVAudioSession"8
TVPPlayerScanModeUsingAVPlayerExclusively
TVPPlayerScanModeUsingAVPlayerButMayUseExternalImagesLater
TVPPlayerScanModeUsingExternalImages
TVPPlayerScanModeNone
AVScanResultUsePlayer
AVScanResultWaitForImages
AVScanResultUsePlayerUntilFirstImageDelivered
supportsDualStreamPlayback
VUINowPlayingViewControllerDisappearnaceReasonUnknown
VUINowPlayingViewControllerDisappearanceReasonRemovedFromParent
VUINowPlayingViewControllerDisappearanceReasonGoingToProductPage
SKIP_INTRO
AV_PLAYBACK_ERROR
initialMediaItemHasCompletedInitialLoading
v16@?0@"TVPPlayer"8
v20@?0@"TVPPlayer"8B16
v20@?0@"UINavigationController"8B16
v24@?0B8B12B16B20
B16@?0@"TVPPlaylist"8
%@ %ld
 (%@)
v20@?0@"VUIMediaInfo"8B16
v24@?0@"VUIPlaybackInfo"8B16B20
v24@?0@"VUIPlaybackInfo"8@?<v@?B>16
v24@?0@"VUIPlaybackInfo"8@"TVPPlaybackState"16
fullscreenPlaybackInfo
T@"VUIPlaybackInfo",&,N,V_fullscreenPlaybackInfo
pipPlaybackInfo
T@"VUIPlaybackInfo",&,N,V_pipPlaybackInfo
TB,N,GisPictureInPictureActive,V_pictureInPictureActive
errorAlertController
T@"UIAlertController",&,N,V_errorAlertController
pausedDueToViewDisappeared
TB,N,V_pausedDueToViewDisappeared
bootstrappingPostPlay
TB,N,GisBootstrappingPostPlay,V_bootstrappingPostPlay
waitingForBootstrappingToFinishToShowPostPlay
TB,N,V_waitingForBootstrappingToFinishToShowPostPlay
ignorePictureInPictureStop
TB,N,V_ignorePictureInPictureStop
postPlayUIDismissTimer
T@"NSTimer",W,N,V_postPlayUIDismissTimer
fullscreenDisappearanceReason
TQ,N,V_fullscreenDisappearanceReason
suppressErrorAlerts
TB,N,V_suppressErrorAlerts
fullscreenPlaybackUIBeingShown
TB,R,N,GisFullscreenPlaybackUIBeingShown
isPlaybackUIBeingShown
T@"VUIShelfView",&,N,V_containerView
focusedIndexPath
T@"NSIndexPath",&,N,V_focusedIndexPath
v16@?0@"VUIMPMediaItemDownloadController"8
observer
T@"VUIMPMediaItemDownloadControllerState",C,N,V_state
T@"NSHashTable",&,N,V_observers
restoreDownload
TB,R,N,GisRestoreDownload
observerDispatchQueue
T@"NSObject<OS_dispatch_queue>",&,N,V_observerDispatchQueue
amsShowIdentifier
T@"NSString",&,N,V_amsShowIdentifier
amsSeasonIdentifier
T@"NSString",&,N,V_amsSeasonIdentifier
seasonNumbers
T@"NSArray",&,N,V_seasonNumbers
T@"VUIExtrasDescriptionLayout",&,N,V_layout
textView
T@"VUIFocusableTextView",&,N,V_textView
T@"VUIFavoriteBannerLayout",&,N,V_layout
backgroundView
T@"UIView",&,N,V_backgroundView
backgroundImageLogos
T@"NSArray",&,N,V_backgroundImageLogos
VUIStoreMediaItemErrorDomain
ATVMediaTypeMovieRental
ATVMediaTypeMovie
ATVMediaTypeTVEpisode
v24@?0@"VUIMediaItemEntityTypesFetchResponse"8@"NSError"16
@"NSObject<NSCopying>"16@?0@"VUIMediaEntityType"8
T@"VUIMediaItemEntityTypesFetchControllerResult",&,N,V_result
currentFetchResponse
T@"VUIMediaItemEntityTypesFetchResponse",&,N,V_currentFetchResponse
item
rentals
category
collectionType
T@"NSString",&,N,V_subtype
T@"NSString",&,N,V_category
T@"NSString",&,N,V_collectionType
wlLocation
onAuthorizationStatusChanged
onLocationChanged
PartiallyPlayed
Unplayed
FullyPlayed
itms
TVSBookmark.Key
TVSBookmark.BookmarkTime
TVSBookmark.BookmarkTimestamp
TVSBookmark.PlayCount
TVSBookmark.HasBeenPlayed
TVSBookmark.HasBeenRented
TVSBookmark.IsMarkedAsUnwatched
TVSBookmark.HasFakeTimestamp
Coder must allow keyed coding.
Don't use this method
%@: key=[%@], bookmarkTime=%f, playCount=%d, hasBeenPlayed=%d, hasBeenRented=%d, isMarkedAsUnwatched=%d, bookmarkTimestamp=%@
supportsSecureCoding
TB,R
hasFakeTimestamp
TB,N,V_hasFakeTimestamp
T@"VUIBookmarkKey",R,N,V_key
Td,R,N,V_bookmarkTime
bookmarkTimestamp
T@"NSDate",R,N,V_bookmarkTimestamp
TQ,R,N,V_playCount
TB,R,N,V_hasBeenPlayed
TB,R,N,V_hasBeenRented
isMarkedAsUnwatched
TB,R,N,V_isMarkedAsUnwatched
{CGSize=dd}24@?0{CGSize=dd}8
shelfTypes
T@"NSSet",&,N,V_shelfTypes
dataSourcesByShelfType
T@"NSDictionary",&,N,V_dataSourcesByShelfType
shelvesDelegate
T@"<VUIShelvesDataSourceDelegate>",W,N,V_shelvesDelegate
AppleTVChannels
AppleTV-Channels
T@"VUIAppleTVChannelLogoLayout",&,N,V_layout
appleTVImageView
T@"_TVImageView",&,N,V_appleTVImageView
channelsLabel
T@"VUILabel",&,N,V_channelsLabel
channelLogoView
T@"_TVImageView",&,N,V_channelLogoView
calculatedIdentifier
TB,N,V_calculatedIdentifier
artworkCatalog
T@"MPArtworkCatalog",&,N,V_artworkCatalog
TQ,R,N,V_imageType
addedCanonicalIDs
T@"NSSet",C,N,V_addedCanonicalIDs
window
T@"UIWindow",&,N
appController
T@"TVApplicationController",R,N
vui_delegate
T@"<VUIApplicationDelegate>",R,N
FamilyMemberCellIdentifier
FamilyMemberSection
VUIFamilyMembersViewController
T@"VUILibraryFamilyMembersDataSource",&,N,V_dataSource
T@"VUICollectionView",&,N,V_collectionView
T@"VUIFamilyMemberCell",&,N,V_sizingCell
tvCellWidth
Td,N,V_tvCellWidth
T@"<VUIFamilyMembersViewControllerDelegate>",W,N,V_delegate
VUIBackgroundMediaControllerForegroundStateDidChangeNotification
VUIBackgroundMediaControllerWillStartPlaybackNotification
VUIBackgroundMediaControllerWillStopPlaybackNotification
VUIBackgroundMediaControllerDidStartPlaybackNotification
VUIBackgroundMediaControllerDidStopPlaybackNotification
VUIBackgroundMediaControllerIsForegroundedKey
VUIBackgroundMediaControllerIsAutomaticPlaybackStartKey
VUIBackgroundMediaControllerPlaybackStartReasonKey
VUIBackgroundMediaControllerIsAutomaticPlaybackStopKey
VUIBackgroundMediaControllerPlaybackStopReasonKey
waiting for timeout while paused
background media controller
-[VUIBackgroundMediaController viewWillDisappear:]
alphaProxyImageView
T@"_TVImageView",&,N,V_alphaProxyImageView
TB,N,V_showsVideoControls
T@"VUIMediaInfo",C,N,V_mediaInfo
TB,N,GisForeground,V_foreground
TB,N,V_mutePlaybackInBackground
descriptor
T@"VUIAppDocumentUpdateEventDescriptor",&,N,V_descriptor
dictionaryRepresentation
overrideHeight
persistentIdentifier
screenshot
overrideWidth
v32@?0@"NSURLQueryItem"8Q16^B24
TB,N,GisScreenshot,V_screenshot
persistentidentifier
T@"NSNumber",C,N,V_persistentidentifier
sourceURL
T@"NSURL",C,N,V_sourceURL
T@"NSNumber",C,N,V_storeIdentifier
T@"<MPArtworkDataSource>",&,N,V_dataSource
T@"UIImage",&,N,V_appIcon
installProgress
Td,N,V_installProgress
v16@?0@"VUIMPMediaItemCollectionAssetController"8
%K = %@
state.isDownloadInProgress
T@"VUIMediaEntityAssetControllerState",C,N,V_state
assetControllers
T@"NSArray",&,N,V_assetControllers
fullyDownloadedAssetBytes
TQ,N,V_fullyDownloadedAssetBytes
videoMetrics
T@"VUIComingSoonCardLayout",&,N,V_layout
vibrantEffectView
T@"UIVisualEffectView",&,N,V_vibrantEffectView
filters
is4K
isHDR
isPurchased
mediaCategory
sortProperties
sortDirectionMapping
ascending
descending
v48@?0@"NSString"8@"NSString"16@"NSString"24@"NSNumber"32@"NSNumber"40
T@"NSString",&,N,V_mediaEntitySubtype
T@"NSString",&,N,V_mediaCategory
T@"NSString",&,N,V_mediaCollectionType
T@"VUIChannelBannerView",R,N,V_bannerView
uiStyle
Tq,N,V_uiStyle
isPreModeBanner
TB,R,N,V_isPreModeBanner
T{TVCornerRadii=dddd},R,N,V_borderRadii
T{UIEdgeInsets=dddd},R,N,V_margin
T@"UIColor",R,N,V_backgroundColor
highlightedBackgroundColor
T@"UIColor",R,N,V_highlightedBackgroundColor
bannerMinHeight
Td,R,N,V_bannerMinHeight
maxTextWidth
Td,R,N,V_maxTextWidth
subtitleBaseLine
Td,R,N,V_subtitleBaseLine
T@"VUITextLayout",R,N,V_subtitleLayout
bannerStyle
VUIPlaybackReporterSessionMetadataKeyForegroundPlayback
VUIPlaybackReporterSessionMetadataKeyHandlingSeek
VUIPlaybackReporterSessionMetadataKeyStartReason
VUIPlaybackReporterSessionMetadataKeyStopReason
VUIPlaybackReporterSessionMetadataKeyStartType
VUIPlaybackReporterSessionMetadataKeyStopType
%@ %@ Enabled:%@
context
T@,&,N,V_context
UUID
T@"NSString",R,N,V_UUID
reportingEnabled
TB,N,V_reportingEnabled
VUICollectionViewCellReuseIdentifier
childView
T@"UIView",&,N,V_childView
persons
v32@?0@"NSString"8Q16^B24
v40@?0@8{_NSRange=QQ}16^B32
T@"VUICastInfoLayout",&,N,V_layout
labels
T@"NSArray",&,N,V_labels
textBlendMode
Ti,N,V_textBlendMode
badgeInsets
T{UIEdgeInsets=dddd},N,V_badgeInsets
badgeStyle
TQ,N,V_badgeStyle
transitionType
animated
preferredWidth
preferredHeight
navBarAdjustedToSizeClass
interactivePopGestureAllowed
modalOverModalAllowed
viewControllerId
viewControllerDocumentId
Push
FullScreen
BlurOverFullScreen
Dismiss
PopOrDismiss
Tq,N,V_type
T@"NSString",C,N,V_viewControllerIdentifier
T@"NSString",C,N,V_viewControllerDocumentIdentifier
TB,N,GisAnimated,V_animated
navigationBarHidden
TB,N,GisNavigationBarHidden,V_navigationBarHidden
navigationBarAdjustedToSizeClass
TB,N,GisNavigationBarAdjustedToSizeClass,V_navigationBarAdjustedToSizeClass
isInteractivePopGestureAllowed
TB,N,GisInteractivePopGestureAllowed,V_isInteractivePopGestureAllowed
TB,N,GisModalOverModalAllowed,V_modalOverModalAllowed
_TtCC8VideosUI19VerticalStackLayout16HangerViewLayout
imageLayout
_TtCC8VideosUI19VerticalStackLayout16FooterViewLayout
$__lazy_storage_$_buttonLayout
routerDataSource
unitTestCardNoLayout
unitTestTemplate
paginationTemplate
allowsBackgroundPlaybackOverCellular
mutePlaybackInBackground
maxConcurrentImageDownloads
previousImageSize
currentImageProxy
bottom
right
topLeft
topRight
bottomRight
phone
darkSrc
placeHolderSrc
isTemplated
theme
textLayout
layout
children
attributes
debugText
caption
subtitle
title
bodyText
alphaImg
fullscreenImg
logo
badge
card
header
verticalStack
navigationBar
leftBarItems
rightBarItems
pageInfo
section
shelf
decoratedShelf
unitTestLockup
unitTestCard
updateType
animationType
imageProxies
imageSizeMode
interfaceStyle
wipe
dissolve
v16@?0q8
VideosUI.PageControlView
init(frame:)
_TtC8VideosUI15PageControlView
@?16@0:8
v24@0:8@?16
{CGSize=dd}32@0:8{CGSize=dd}16
v24@0:8q16
@48@0:8{CGRect={CGPoint=dd}{CGSize=dd}}16
currentPageDidChange
capMargin
pageControlBackgroundColor
currentPageIndicatorTintColor
pageIndicatorTintColor
pageControlType
adaptivePageControlView
roundedPageControlView
T@?,N,C
/AppleInternal/BuildRoot/Library/Caches/com.apple.xbs/Sources/VideosUI_Sim/VideosUI-450.50.65/VideosUIFramework/PageControlView.swift
init(coder:) has not been implemented
VUIPageControlView
@?<v@?q>16@0:8
v24@0:8@?<v@?q>16
^@40@0:8:16@24@32
B16@0:8
B24@0:8#16
B24@0:8:16
^v16@0:8
superclass
description
T@"NSString",N,R
debugDescription
B24@0:8@"Protocol"16
@"NSString"16@0:8
systemQuaternaryFill
systemTertiaryFill
systemSecondaryFill
tertiarySystemGroupedBackground
secondarySystemGroupedBackground
systemGroupedBackground
tertiarySystemBackground
secondarySystemBackground
systemBackground
tertiaryBackground
secondaryBackground
primaryBackground
@"UIColor"16@?0@"UITraitCollection"8
opacityA
opacityB
opacityC
lightOpacityA
lightOpacityB
lightOpacityC
darkOpacityA
darkOpacityB
darkOpacityC
primaryText
secondaryText
tertiaryText
quaternaryText
primaryFill
secondaryFill
tertiaryFill
quaternaryFill
lightKey
darkKey
keyColor
imageBorder
imageHighlight
separator
opaqueSeparator
progressBarFill
systemRed
systemGreen
systemBlue
systemOrange
systemYellow
systemPink
systemPurple
systemTeal
systemIndigo
secondaryLabel
tertiaryLabel
quaternaryLabel
link
placeholderText
systemfill
systemGray
systemGray2
systemGray3
systemGray4
systemGray5
systemGray6
_TtC8VideosUI18VideosColorFactory
left
_TtC8VideosUI23AdaptivePageControlView
numberOfPages
leftLayer
movingLayer
rightLayer
widthOfMovingBar
distanceToMove
totalWidthOfTheScrollBar
panGestureStartPoint
/AppleInternal/BuildRoot/Library/Caches/com.apple.xbs/Sources/VideosUI_Sim/VideosUI-450.50.65/VideosUIFramework/AdaptivePageControlView.swift
init(coder) is not implemented
/AppleInternal/BuildRoot/Library/Caches/com.apple.xbs/Sources/VideosUI_Sim/VideosUI-450.50.65/VideosUIFramework/DocumentRequestViewController.swift
viewWillAppear initialRequestSent: %@
VideosUI.DocumentRequestViewController
init(_:)
_TtC8VideosUI29DocumentRequestViewController
v20@0:8B16
documentServiceRequest
initialRequestSent
starting to fetch document
received fetch document response.
fetch document response failed with error: <%@>
invalid error description
fetch document response was success
updating controller with document
received ui event:<%@>
starting fetchDocument since loadImmidiately is true.
_TtC8VideosUI21PageSwipeUpViewLayout
chevronImageLayout
baselineMarginToChevron
heightOfGradientView
topMarginOfChevron
_TtC8VideosUI9ViewModel
identifier
type
childrenDictionary
parent
jsonDictionary
_document
_TtC8VideosUI9JSService
@24@0:8@16
_TtP8VideosUI18JSServiceInterface_
DecoratedShelfView::trying to update page content view with same model objects, returning.
_TtC8VideosUI18DecoratedShelfView
willHost
willRelinquish
shelfView
shelfRowMetrics
backgroundMediaController
backgroundViewModel
viewModel
verticalStackView
logoGradientView
$__lazy_storage_$_platterView
$__lazy_storage_$_gradientLayer
$__lazy_storage_$_opacityMaskLayer
PageContentView::factory did not return any background view controller.
DecoratedShelfLogoGradient
DecoratedShelfRadialGradient
@"JSValue"8@?0
/AppleInternal/BuildRoot/Library/Caches/com.apple.xbs/Sources/VideosUI_Sim/VideosUI-450.50.65/VideosUIFramework/JSValue+Additions.swift
Fatal error
Function trampoline called in unsupported state
_TtC8VideosUI8VideosUI
@48@0:8@16@24@32@40
v16@?0@"<UIViewControllerTransitionCoordinatorContext>"8
_TtC8VideosUI28DecoratedShelfViewController
v40@0:8{CGSize=dd}16@32
@32@0:8@16@24
shelfViewController
scrollViewMonitor
TVRowHosting
@32@0:8d16^q24
@24@0:8d16
shouldBindRowsTogether
@"NSArray"32@0:8d16^q24
@"NSArray"24@0:8d16
NSObject
q16@0:8
#16@0:8
@16@0:8
^@24@0:8:16
key value 
didUpdate
traitsProvider
tvValue
padValue
phoneValue
sizeClassSubscriber
valuesForSizeClassMap
currentTraitCollection
currentSizeClass
OS_dispatch_queue
v8@?0
NSCopying
_TtC8VideosUI20UnitTestLockupLayout
titleTextLayout
_TtC8VideosUI9ErrorView
descriptionLabel
debugTextLabel2
ViewModelFactory::the rawValue is not a JSOnDictionary while parsing <%@> field
ViewModelFactory::Unknown type for creating view model <%@>
ViewModelFactory::the rawValue is not a JSONDictionary while parsing <%@> field
view
VideosEnginePromiseOperation::starting promise
VideosEnginePromiseOperation::cancelling promise
v16@?0@"JSContext"8
jsPromiseOperation
owner
appContext
promise
v16@?0@"IKAppContext"8
VideosEnginePromiseOperation::looks like js promis operation is already invalidated.
VideosEnginePromiseOperation::promise was rejected.
VideosEnginePromiseOperation::promise resolved, returned response: %@
VideosEnginePromiseOperation::failed to unwrap JSValue response to object.
VideosEnginePromiseOperation::failed to unwrap response.
oneLine
twoLine
primary
textual
_TtC8VideosUI12ButtonLayout
buttonType
buttonTitleStyle
$__lazy_storage_$_imageLayout
$__lazy_storage_$_textLayout
$__lazy_storage_$_vuiButtonLayout
none
fitBB
fill
fitHeight
_TtC8VideosUI11ImageLayout
$__lazy_storage_$_tvImageLayout
continuousBorder
placeholderResourceName
cropCode
VideosUI.TextViewModel
init(type:jsonDictionary:parent:)
_TtC8VideosUI13TextViewModel
imgageLayout
computedAttributedString
undefined
center
bottomLeft
footer
leading
trailing
topLeading
topTrailing
bottomLeading
bottomTrailing
_TtC8VideosUI10ViewLayout
margin
height
minWidth
minHeight
maxHeight
lineSpacing
highlightStyle
focusMargin
focusSizeIncrease
acceptsFocus
borderRadii
shadow
relationalLayout
sizeClassPublisher
layoutTraitsProvider
_TtC8VideosUI16RelationalLayout
relations
TemplateViewController::view model does not contain any children.
TemplateViewController::view model does not have any children
down
_TtC8VideosUI28PaginationTemplateController
bottomMarginForPageControl
templateModel
lastContentOffset
lastScrollDirection
currentPage
$__lazy_storage_$_imageProxyQueue
$__lazy_storage_$_animator
$__lazy_storage_$_rightSwipeGestureRecognizer
$__lazy_storage_$_leftSwipeGestureRecognizer
playbackEventSubscriber
currentPageView
$__lazy_storage_$_reusableViews
$__lazy_storage_$_pageControl
$__lazy_storage_$_pageSwipeUpView
$__lazy_storage_$_swipeUpGestureRecognizer
$__lazy_storage_$_tapGestureRecognizer
preferredFocusEnvironments
T@"NSArray",N,R
/AppleInternal/BuildRoot/Library/Caches/com.apple.xbs/Sources/VideosUI_Sim/VideosUI-450.50.65/VideosUIFramework/PaginationTemplateController.swift
paginationtemplateController::reusing page content view
TemplateViewController::page view models are empty:%@
UIFocusEnvironment
v32@0:8@16@24
parentFocusEnvironment
T@"<UIFocusEnvironment>",N,R
focusItemContainer
T@"<UIFocusItemContainer>",N,R
preferredFocusedView
T@"UIView",N,R
@"NSArray"16@0:8
@"<UIFocusEnvironment>"16@0:8
@"<UIFocusItemContainer>"16@0:8
B24@0:8@"UIFocusUpdateContext"16
v32@0:8@"UIFocusUpdateContext"16@"UIFocusAnimationCoordinator"24
@"NSString"24@0:8@"UIFocusUpdateContext"16
@"UIView"16@0:8
^@32@0:8:16@24
T#,N,R
com.apple.VideosUI.LRUCacheQueue
MediaInfoHelper::expects background model dictionary; but it is invalid.
PromiseInterface
ServiceInterface
CreateDocument
contentAlignment
darkHighlightColor
darkBackgroundColor
minimumScaleFactor
numberOfLinesAXLarge
numberOfLinesAXSmall
darkHighlightOrSelectedColor
highlightOrSelectedColor
padding
width
maxWidth
alignment
position
focusAlign
centerGrowth
upscaleFactor
aspectRatio
scaleMode
borderWidth
borderColor
fontSize
fontFeature
numberOfLines
letterSpacing
alwaysFocusable
_TtC8VideosUI20DecoratedShelfLayout
@24@0:8^v16
$__lazy_storage_$_logoLayout
$__lazy_storage_$_shelfLayout
VideosUI.JSPromiseOperation
init(appContext:)
init()
_TtC8VideosUI18JSPromiseOperation
loadImmediately
TB,N,VloadImmediately
_TtP8VideosUI27JSPromiseOperationInterface_
TB,N
@32@0:8@"JSValue"16@"JSValue"24
JSExport
paginationDocumentRef
_TtC8VideosUI9UIFactory
v16@0:8
VideosUI1
#24@0:8@16
VideosUI2
@40@0:8q16Q24q32
VUIDocumentCreator
@"UIViewController"48@0:8@"VUIDocumentDataSource"16@"IKAppContext"24@"IKViewElement"32@"NSDictionary"40
_TVInterfaceCreatingPrivate
@"UIView"32@0:8@"IKViewElement"16@"UIView"24
@"UIViewController"32@0:8@"IKViewElement"16@"UIViewController"24
#24@0:8@"IKViewElement"16
v24@0:8@"IKViewElement"16
@"NSURL"24@0:8@"NSString"16
@"UINavigationController"24@0:8@"NSString"16
v24@0:8@"TVViewElement"16
@"TVImageProxy"24@0:8@"TVViewElement"16
@"TVImageProxy"32@0:8@"IKViewElement"16@"TVImageLayout"24
VUIWidgetCreator
@"UIView<VUIPageControlView>"40@0:8q16Q24q32
B24@0:8@16
TVInterfaceCreating
@"UIView"32@0:8@"TVViewElement"16@"UIView"24
@"UIViewController"32@0:8@"TVViewElement"16@"UIViewController"24
@"UIImage"24@0:8@"NSString"16
#24@0:8@"TVViewElement"16
@"UIViewController"24@0:8@"TVPlayer"16
LayoutFactory::there is no default/override layout for type:%@
select
holdSelect
highlight
contextMenu
pagination
_TtC8VideosUI17VerticalStackView
d24@0:8d16
platterView
$__lazy_storage_$_expandableView
$__lazy_storage_$_footerView
$__lazy_storage_$_panelView
@"TVImageProxy"24@?0{CGSize=dd}8
OS_os_log
com.apple.VideosUI
_TtC8VideosUI14VideoViewModel
videosPlayable
phoneVideosPlayable
padVideosPlayable
_TtC8VideosUI25AdaptivePageControlLayout
cornerRadiusOfBar
distanceBetweenBars
minimumWidthOfMovingBar
maxWidthOfMovingBar
barWidth
bgColor
movingBarColor
staticBarColor
DocumentServiceRequest::performing document service request with: <%@>
_TtC8VideosUI22DocumentServiceRequest
requestContext
promiseOperation
DocumentServiceRequest::received document service response.
DocumentServiceRequest::document service request failed with error:<%@>
DocumentServiceRequest::document service request was successful.
DocumentServiceRequest::returned document parser:<%@>
DocumentServiceRequest::failed to create document from the response
page
flowcase
stackType
blurPlatter
_TtC8VideosUI19VerticalStackLayout
hasBlurPlatter
$__lazy_storage_$_captionTextLayout
$__lazy_storage_$_titleTextLayout
$__lazy_storage_$_subtitleTextLayout
$__lazy_storage_$_bodyTextLayout
$__lazy_storage_$_expandableViewLayout
$__lazy_storage_$_footerLayout
_TtC8VideosUI11VideosColor
lightUIColor
darkUIColor
_dynamicUIColor
$__lazy_storage_$_color
_TtC8VideosUI14ImageViewModel
mainImage
alternateImages
$__lazy_storage_$_imageProxyCache
_TtCO8VideosUI15ImageDescriptorP33_5F44B378E4B755AED772E9F34358B5225Image
fallbackImage
$__lazy_storage_$_layoutDictionary
isResource
$__lazy_storage_$_src
$__lazy_storage_$_darkSrc
$__lazy_storage_$_crop
$__lazy_storage_$_format
$__lazy_storage_$_placeHolderSrc
themeString
/AppleInternal/BuildRoot/Library/Caches/com.apple.xbs/Sources/swiftlang/swiftlang-1103.2.24.1/swift/stdlib/public/core/NativeDictionary.swift
Duplicate values for key: '
JS promise failed
JS function does not exist
JS interface does not exist
Failed to create promise operation from JS value.
Failed to convert the response JSValue to object.
Failed to parse response.
Failed to create parser with the response, potentially not the response handled by this parser type.
The response is not a dictionary
The response dictionary has unexpected structure
_TtC8VideosUI19ErrorTemplateLayout
descriptionTextlayout
debugTextLayout
debugTextLayout2
v16@?0@8
Button(%@) dispatching play event
Button(%@) dispatching select event
_TtC8VideosUI14DocumentParser
jsonData
document
_TtC8VideosUI18UnitTestCardLayout
VideosUI.DocumentViewController
init(nibName:bundle:)
_TtC8VideosUI22DocumentViewController
v24@0:8@16
templateViewController
isTransitioning
loadingView
opaqueBackground
preferredStatusBarStyle
Tq,N,R
childViewControllerForStatusBarHidden
T@"UIViewController",N,R
shouldAutomaticallyForwardAppearanceMethods
TB,N,R
DocumentControllerUpdate
Template - %@
Template controller - %@
/AppleInternal/BuildRoot/Library/Caches/com.apple.xbs/Sources/VideosUI_Sim/VideosUI-450.50.65/VideosUIFramework/DocumentViewController.swift
merge
append
replace
delete
_TtC8VideosUI8Document
onUIEvent
Document::Unknown response type<%@> detected while parsing view model.
Document::Failed to create a model from dictionary
PageContentView::trying to update page content view with same model objects, returning.
_TtC8VideosUI15PageContentView
_playbackState
playbackDidStartObserver
playbackDidStopObserver
_TtCC8VideosUI17VerticalStackView10FooterView
subviewElements
$__lazy_storage_$_viewLayout
_TtCC8VideosUI17VerticalStackView14ExpandableView
canBecomeFocused
_TtC8VideosUI23ErrorTemplateController
template
accessibilityExtraExtraExtraLarge
accessibilityExtraExtraLarge
accessibilityExtraLarge
accessibilityLarge
accessibilityMedium
extraExtraExtraLarge
unspecified
extraSmall
small
medium
large
extraLarge
extraExtraLarge
title0
title1
title2
title3
title4
headline
headline2
headline3
subtitle1
subtitle2
subtitle3
callout
body
subhead
footnote
caption1
caption2
headlineShort
bodyShort
subheadShort
footnoteShort
caption1Short
ultraLight
thin
regular
semibold
bold
heavy
black
emphasized
smallCaps
petiteCaps
lowercase
uppercase
capitalize
justified
natural
_TtC8VideosUI10TextLayout
$__lazy_storage_$_vuiTextLayout
contentSize
textStyle
textTransform
fontWeight
textAlignment
_TtC8VideosUI17ScrollViewMonitor
scrollView
contentOffsetSubscriber
VideosUI.PageSwipeUpView
_TtC8VideosUI15PageSwipeUpView
$__lazy_storage_$_gradientView
$__lazy_storage_$_swipeUpLabel
$__lazy_storage_$_chevronView
page_swipe_up_gradient
SWIPE_UP_VIEW_MESSAGE
/AppleInternal/BuildRoot/Library/Caches/com.apple.xbs/Sources/VideosUI_Sim/VideosUI-450.50.65/VideosUIFramework/PageSwipeUpView.swift
UPDATE_EVENTS: MONITOR: Sending Document update with Context: %@
VUIAppDocumentManualUpdateContext: Current update request set to: %@
Parsing AMS Purchases Fetch with no object dictionary
Parsing AMS Entity Fetch invalid entity dictionary
Parsing AMS Entity Fetch no entity provided
Parsing AMS Entity Fetch no type provided
Parsing AMS Entity Fetch no attribute dictionary
Parsing AMS Entity Fetch no offers array
Parsing AMS Entity Fetch no genre array
Parsing AMS Entity Fetch no preview artwork dictionary
Parsing relationship bag thats not a dictionary
Parsing content rating bag thats not a dictionary
Failed to fetch OpenURLDataSource while processing internal link (local only): %@
Failed to fetch OpenURLDataSource while processing internal link: %@
VUIOpenURLHandler::Authentication requested for action: %@
Prefetching store FPS certificate
Starting certificate data loading.  Waiting for certificate data before continuing requests
Certificate data has valid length.  Continuing key request loading for pending requests
Either certificate URL or key server URL was not provided
Certificate data loading in progress.  Waiting for certificate data before continuing requests
Certificate data already loaded.  Loading key requests immediately
Removing all entries from key identifier penalty box
Using cached cert data for %@.  Refreshing cert data, but not waiting for response
No cached cert data available for %@.  Fetching cert data and waiting for response
Retrieving certificate URL and key server URL from store bag
Store bag fetch complete
Error retrieving URLs from bag: %@
Updating cached cert data for URL %@
Error fetching certificate data: %@
Done with all key request batches
Starting batch of %lu key requests
Automatically failing key request %@ since it is in the penalty box
Stopping further key loading since request is cancelled or failed: %@
Generating key request data for %@
Key request data generated for %@
Sending %@requests to server: %@
Received response for requests: %@
Received http %ld status code
Top-level json object is not of type dictionary
Response is missing fairplay-streaming-response, version or streaming-keys
Key info dict has id but no corresponding key request could be found
Key info dict is missing id
Key info object is not a dictionary
Unable to map response data to one or more key requests.  Failing unmapped key requests.
Key renewal date: %@
Key expiration date: %@
Rental playback start date: %@
Playback duration: %f
Key response data has zero length
Key info dict has a status of 0 but is missing ckc
Received FPS response error status of %ld for %@
Key info dict is missing status
Adding key identifier [%@] to penalty box since it is not owned or entitled
Manual media entity fetch failed with error (%@) for requests: %@
Contents change media entity fetch failed with error (%@) for requests: %@
VUINavigateToUpNextHandler:_navigateToUpNextOrSuspend
VUIFavoritesRequestManager -- caught exception while getting request operation
No delegate has been registered! -settingsURL will return nil
No delegate has been registered! -isCellularDataForPlaybackEnabled will return NO
No MPMediaItem found! Unable to check if need to warn about playback settings
No delegate has been registered! -shouldWarnAboutPlaybackSettingsForMediaIten: will return NO
No delegate has been registered! -clearCellularPlaybackQualityOverrides will be a NO-OP
No MPMediaItem found! Unable to override cellular playback quality
No delegate has been registered! -rentalAssetTypeForMediaItem: will return VUIMediaEntityAssetTypeUndefined
No delegate has been registered! -removeRentalMediaItem:withCompletion will be a no-op
VUIScopedBackgroundTask with identifier %@ (%lu) expired. Ending background task
VUIActionUpdateUpNext failed for itemID [%@] state [%@]
VUINowPlayingViewController::deallocated.
VUINowPlayingViewController::preparing post play excluding canonicals: <%@>
VUINowPlayingViewController::transferred media controller - %@ to host - %@
VUINowPlayingViewController::will %@ post play UI.
VUINowPlayingViewController::we are waiting for the document to finish updating, will defer showing post play.
VUINowPlayingViewController::now playing controller will show more info
VUINowPlayingViewController::we were waiting for document update to finish, resetting waitingForPostPlayDocumentUpdate.
VUINowPlayingViewController::we were also waiting to show post play, will show now and reset waitingForPostPlayDocumentUpdateToShowPostPlay.
VUINowPlayingViewController::initializing now playing controller for playback from library.
VUINowPlayingViewController::initializing now playing controller for playback extras.
VUINowPlayingViewController::initializing now playing controller for product page playback.
VUINowPlayingViewController::sending post play update notification with data: [%@]
[VUITVLibraryViewController] Datasource fetch completed
VUITVLibraryViewController: Starting to monitor media library initial update
VUITVLibraryViewController: Stopping monitor of media library initial update
VUITVLibraryViewController: Update state changed
VUITVLibraryViewController: Media library is update in progress:%@
VUITVLibraryViewController: Library account changed
VUITVLibraryViewController: Active Account Changed
VUIActionPromise failed
ignore media event for adult content
unrecognized mediaItem TVPMediaItemMetadataMediaType for contentType
[%p] - Begining VUIMediaLibraryFetchControllerQueueOperation for controllers: %@
[%p] - Starting fetch controller %@
[%p] - Finished fetch controller %@
[%p] - All fetches finished. Finishing VUIMediaLibraryFetchControllerQueueOperation operation
Initial media category types fetch failed with error (%@)
Contents change media category types fetch failed with error (%@)
Parsing AMS Metadata with no object dictionary
Parsing AMS Meta with no meta bag
Parsing AMS Meta with no offset bag
VUISettingsManager - checkAndUpdateSettings - nothing has changed
VUISettingsManager - updating user preferences - calling JS
VUIFamilySharingMediaEntitiesDataSource::looking up movie restriction ranking from settings
VUIFamilySharingMediaEntitiesDataSource::looking up tv show restriction ranking from settings
VUIPlaybackReporterSession (VPAF) -  Resolved start reason:[%@]. _reason:%@(%@) _autoStart:%@
VUIPlaybackReporterSession (VPAF) -  Resolved stop reason:[%@] _reason:%@(%@) _autoStart:%@
VUIMarkAsWatchRequestManager -- caught exception while getting request operation
Media library changed. Sending notification to JS
VUIUpNextRequestManager -- caught exception while getting request operation
VUIApplicationRouter - VUIApplicationRouter::Authentication requested for action: %@
VUIApplicationRouter - Shelf supports ProductBrowser, but not this element: %@
VUIApplicationViewController: TVApplicationController did finish launching with options: %@
VUIApplicationViewController: No initial view controller is available!
VUIApplicationViewController: TVApplicationController failed to launch with error: %@
VUIApplicationViewController:_startApplicationControllerWithBootURL: Should only be called once!
VUIApplicationViewController:_startApplicationControllerWithBootURL: Requires a non nil bootURL!
Media item is a family sharing purchase.  Using aux media item for playback
Will use aux media item and override playback metadata for adam ID %@ URL %@
Overriding original URL %@ with local URL %@
Overriding original resume time %@ with %@
Overriding skip intro with start %@ duration %@ target %@
Overriding advisory info with name %@ description %@ 
Overriding key %@ with value %@
Ribbon Cell with base: %@, fallback: %@, preview: %@, has_overlayView %d
Adding fetch controllers to queue: %@
Passed fetch controllers to remove from queue: %@
Actually removing fetch controllers from queue: %@
VUIMediaLibraryFetchControllerQueue for %@ has detected playback has begun. Observation = %@
VUIMediaLibraryFetchControllerQueue for %@ has detected playback has ended. Will begin a refetch. Observation = %@
[%@] - Received contents change: %@
Fetch controller (%@) has resumed. Will enqueue a new fetch operation to pick up any changes.
[%@] - Delay contents change operation is active. Waiting for delay to expire
[%@] - Creating delay contents change operation
[%@] - Delay contents change operation has completed. Starting fetching of controllers for revision: %lu
[%@] - Fetching is paused so the fetch has been deferred. It will start when fetching is resumed
[VUIAccessViewController]: Nil icon for TV.app
Starting bookmark sync with %lu syncs already in progress
Doing dispatch_sync for _batchUpdate
_batchUpdate complete
Starting _keyValueStore sync
_keyValueStore sync complete
Starting UPP sync
UPP sync complete
Calling synchronizeWithCompletion completion handler
After sync completion, %lu syncs are still in progress
VUIGDPRPresentationManager - Starting GAC patch-up flow
VUIGDPRPresentationManager - GAC patch-up flow: Successful OptIn: %@ Err: %@
VUIGDPRPresentationManager - GDPR flow: Privacy acknowledgement failed
VUIGDPRPresentationManager - GDPR flow: Successful OptIn: %@ Err: %@
VUIGDPRPresentationManager - GDPR flow: failed to opt in: %@
VUIGDPRPresentationManager - GDPR is shown because of user defaults override
VUIGDPRPresentationManager - GDPR needed? [%@]
Unable to save database: %@
Deleting downloaded video at %@
Unable to delete contents at %@: %@
Removing local file path from database
No file path exists for database item; not deleting downloaded video
Removing offline FPS keys from database and setting state to NotDownloaded
Unable to remove media for databaseID %@ since it doesn't exist in database
Error deserializing database file! Database URL: %@, Error: %@
Error loading database URL: %@
Parsing AMS Genre Fetch with no object dictionary
Parsing AMS Genre Fetch with no data bag
Parsing AMS Genre invalid genre dictionary
Parsing AMS Genre with no Attributes
Parsing AMS Genre with no Name
VUIAppDocumentUpdateEvent: Can't coalesce events as the descriptors don't match. Events: %@, %@
[%@] - Setting content view type:%@
VUITVLibraryEpisodeListCell - Image view is nil! There is no image element.
VUINowPlayingViewModel::current continuous playback time:(%f)
VUINowPlayingViewModel::maximum auto playable items:(%lu) current count:(%lu)
VUIRemoveFromPlayHistoryRequestManager -- caught exception while getting request operation
Starting connection to %@
Connect attempt finished to %@ (Success = %@)
Connection progress to %@ (Progress = %@)
VUIJSNetworkInterface - Begin initconfig
VUIJSNetworkInterface - initconfig: WLK returned
VUIJSNetworkInterface - initconfig success.
VUIJSNetworkInterface - initconfig error. %@
VUIJSNetworkInterface - End initconfig
VUIJSNetworkInterface - Request start: %@ %p
WLKUIRequest.total
WLKUIRequest.bridge
VUIJSNetworkInterface - Request end: %@ %p
VUIJSNetworkInterface - AMSURLProtocolDelegate handleDialogRequest begin
VUIJSNetworkInterface - AMSURLProtocolDelegate handleDialogRequest end
VUIJSNetworkInterface - AMSURLProtocolDelegate handleAuthenticateRequest begin
VUIJSNetworkInterface - AMSURLProtocolDelegate handleAuthenticateRequest end
We are currently being presented = %@. Aborting presentation of %@.
Weird situation. We are curently being presented by %@ not the specified navigation controller: %@
%@ is already presenting something. Dismissing...
%@ is already being presented by %@. Dismissing...
Parsing AMS Family Member Fetch with no object dictionary
Parsing AMS Family Member Fetch with no results bag
Parsing AMS Family Member Fetch with no family members bag
Parsing AMS Family Member Fetch invalid member dictionary
VUIActionRemoveFromPlayHistory failed for itemID [%@]
Updating MPMediaItem with latest rental playback start date %@.  Previous date was %@
Not updating MPMediaItem rental playback start date since it hasn't changed.  Latest rental playback start date is %@, existing date is %@
Unable to locate MPMediaItem in order to update rental playback start
Unable to update MPMediaItem rental playback start date since start date from TVPMediaItem is nil
VUIApplicationActionRouter - GDPR Accept Button -- Check if there is any pending offer to spend
Presenting app installation flow for channel ID: %@
Beginning app installation flow for channel ID: %@
Completed app installation flow for channel ID: %@, success: %d isHeadless:%d
UPDATE_EVENTS: MONITOR: Playback activity notification received but we ought to ignore it.
UPDATE_EVENTS: MONITOR: Playback activity notification received but app is backgrounded so will delay processing
UPDATE_EVENTS: MONITOR: Removed observer [%p] since there were no event descriptors
UPDATE_EVENTS: MONITOR: Added observer [%p] for event descriptors [%@]
UPDATE_EVENTS: MONITOR: Active timers for event descriptors [%@]
UPDATE_EVENTS: MONITOR: Removing observer [%p]
UPDATE_EVENTS: MONITOR: App will enter foreground notification received
UPDATE_EVENTS: MONITOR: Send AppDidBecomeActive notification
UPDATE_EVENTS: MONITOR: App did enter background
UPDATE_EVENTS: MONITOR: Media Library contents did change notification received
UPDATE_EVENTS: MONITOR: Settings did change notification received
UPDATE_EVENTS: MONITOR: App library did change notification received
UPDATE_EVENTS: MONITOR: Purchase did finish notification received for canonical [%@]
UPDATE_EVENTS: MONITOR: Purchase *Cross Process* did finish notification received
UPDATE_EVENTS: MONITOR: Subscription did finish notification received with error [%@]
UPDATE_EVENTS: MONITOR: Entitlements did change notification received
UPDATE_EVENTS: MONITOR: UTSK did change notification received
UPDATE_EVENTS: MONITOR: Post play did change notification received [%@]
UPDATE_EVENTS: MONITOR: Upnext request did finish notification received [%@]
UPDATE_EVENTS: MONITOR: Upnext *Cross Process* did finish notification received %@
UPDATE_EVENTS: MONITOR: Play history update notification received
UPDATE_EVENTS: MONITOR: Sports favorites request did finish notification received [%@]
UPDATE_EVENTS: MONITOR: Remove from play history request did finish notification received [%@]
UPDATE_EVENTS: MONITOR: Clear from play history request did finish notification received [%@]
UPDATE_EVENTS: MONITOR: Playback activity notification received but within debounce window so ignoring the event
UPDATE_EVENTS: MONITOR: Playback activity notification received
UPDATE_EVENTS: MONITOR: Playback activity begin notification received
UPDATE_EVENTS: MONITOR: Playback activity end notification received
UPDATE_EVENTS: MONITOR: Active account did change notification received
UPDATE_EVENTS: MONITOR: Restrictions did change notification received
UPDATE_EVENTS: MONITOR: Preferred video format did change notification received
UPDATE_EVENTS: MONITOR: Clear play history notification received
UPDATE_EVENTS: MONITOR: Location authorization did change notification received
UPDATE_EVENTS: MONITOR: Location did change notification received
UPDATE_EVENTS: MONITOR: SSPurchase request succeeded notification received
PurchaseRequestSucceeded notification's response is missing. Last interrupted Salable AdamID: %@
PurchaseRequestSucceeded Salable AdamID [%@] matched. Refresh product page
PurchaseRequestSucceeded Salable AdamID %@ matched. Fetch init/config and present toast
PurchaseRequestSucceeded notification's buyParams is invalid. Last interrupted salable adamID is %@
PurchaseRequestSucceeded notification's response is invalid. Last interrupted salable adamID is %@
UPDATE_EVENTS: MONITOR: IAM Message Did Receive Notification received
UPDATE_EVENTS: MONITOR: Notifying observer [%p] of refresh event: [%@]
UPDATE_EVENTS: MONITOR: observer document became to active by coming to foreground. Observer: [%p] for event: [%@]
UPDATE_EVENTS: MONITOR: Ignoring observer [%p] for event: [%@]
UPDATE_EVENTS: MONITOR: Notifying observer [%p] of event: [%@]
UPDATE_EVENTS: Failed to fetch init/config. Not presenting successful subscription toast
VUIVPPAManager - User not logged in. Cannot continue.
VUIVPPAManager - No channel.
VUIVPPAManager - %@ does not required vppa prompt.
VUIVPPAManager - bulk consent is due
VUIVPPAManager - User has explicitly denied consent for %@
VUIVPPAManager - %@ is not consented
VUIVPPAManager - Failed to fetch init config: %@
VUIVPPAManager - Status: %@
VUIVPPAManager - Present consent screen
VUIVPPAManager - Adding VPPA channels
VUIVPPAManager - Adding Eligible channels
VUIVPPAManager - Received access result: %lu
VUIVPPAManager - Found eligible channel: %@
Refresh events must specify a time in seconds
Refresh events must specify a non zero delay in seconds
Purchase events must specify the canonical ID
Feature [%@] added.
Feature [%@] removed.
timer feature: %@ has not expired, removing it.
since timer feature: %@ has already expired, so not removing it.
Feature [%@] activated.
Feature [%@] deactivated.
Boundary time observer triggered for feature activation - %@
Is elapsed time within feature time window - %@
Dependent preferred features: [%@]
Not activating this feature since there's a preferred feature already active.
TV advisory deactivation timer fired.
Boundary time observer triggered for feature deactivation - %@
Scheduling a timer with interval:<%f> for feature: %@
Will activate timer triggered feature: %@
timerFeature: %@ hasExpired:<%@>
cancelling timer for feature: %@, timeRemaining:<%f>
Will expire feature timers, count:<%lu>
activating feature after application entered foreground: %@
timer feature %@ has not expired yet after entering to foreground. creating a one time timer with interval: %f
Unable to parse certificate URL from request %@
Error fetching token.  Stopping playback: %@
Unable to parse asset ID data from key URI %@
Unable to create certificate URL from key URI %@
Unable to create key server URL from key URI %@
Unable to parse host or company ID from key URI %@
Key URI %@ path %@ should have 3 components but has %lu
Unable to create key URL components for key URI %@
Key URI is nil
Loading certificate data from %@
Received response for certificate from %@
Raw certificate data has valid length, but decoded data has zero length.  %@
Certificate data has zero length.  %@
Unable to retrieve certificate because of http status %ld %@
Will retry certificate fetch after random exponential backoff delay of %f seconds
Loading has been cancelled; cancelling cert fetch retry
Post body is not valid JSON
Sending stop request
Unable to create URL request
Unable to send stop request since stop server URL is nil or no asset ID is available
Sending token request
Token request received with status %ld
Response has zero length
Token server URL is nil
Unable to parse key server URL from request %@
Loading key data from %@
Received response from %@ for %@
Raw key response data has valid length, but decoded data has zero length
Key response data has zero length.  %@
Unable to load key response data because of http status %ld %@
Will retry key response fetch after random exponential backoff delay of %f seconds
Request has been cancelled; cancelling key response retry
Stopping playback since key response data cannot be retrieved
Received error diagnostics:
%@: %@
Unable to parse error diagnostics from response
VUIPlaybackReporterVPAF - Begin flushing events
VUIPlaybackReporterVPAF - Done flushing events
VUIPlaybackReporterVPAF - Reporting seek event stop: type:%@ reason:%@ id:%@
VUIPlaybackReporterVPAF - Reporting play event start: type:%@ reason:%@ id:%@
VUIPlaybackReporterVPAF - Reporting seek event start: type:%@ reason:%@ id:%@
VUIPlaybackReporterVPAF - Report play event stop: type:%@ reason:%@ id:%@
VUIPlaybackReporterVPAF - Session metrics:%@
VUIPlaybackReporterVPAF - Using topic override: %@
VUIPlaybackReporterUTS - UTS reporting disabled for adult content
VUIPlaybackReporterUTS - UTS reporting disabled for trailers/previews
VUIPlaybackReporterUTS - VOD report
VUIPlaybackReporterUTS - No DSID specified in mediaItem. Falling back to active account
VUIPlaybackReporterUTS - No DSID found. Will not report
VUIPlaybackReporterUTS - [CompletionState] State was specified: Done
VUIPlaybackReporterUTS - [CompletionState] State was specified: InProgress
VUIPlaybackReporterUTS - [CompletionState] State was derived from HLS metadata: %@
VUIPlaybackReporterUTS - [CompletionState] HLS metadata is invalid. PostPlay:[%@] Watched:[%@]
VUIPlaybackReporterUTS - [CompletionState] State unknown
VUIPlaybackReporterUTS - Linear report
VUIPlaybackReporterUTS - Playback summary is nil
VUIPlaybackReporterUTS - Report sent for [%@] [%@] %@
VUIPostPlayUpsellConfig - setting via JS %@
VUIPostPlayUpsellConfig - %s upsell on pb exit
VUIPostPlayUpsellConfig - %s upsell on pip pb exit
VUIPostPlayUpsellConfig - set progress percentage for upsell on exit: %lf
VUIPostPlayUpsellConfig - set show level rate: %ld per %f hrs
VUIPostPlayUpsellConfig - set channel level rate: %ld per %f hrs
VUIPostPlayUpsellConfig - feature is disabled from internal settings
VUIPostPlayUpsellConfig - feature is disabled by UTS
VUIPostPlayUpsellConfig - upsell on PIP exit is disabled by UTS
VUIPostPlayUpsellConfig - no upsell router data src
VUIPostPlayUpsellConfig - upsell cannot be shown while fullscreen playback is going on
VUIPostPlayUpsellConfig - unknown content playback duration
VUIPostPlayUpsellConfig - not enough played, playbackProgressPercentage %f < _minPlaybackProgressPercentage %f
VUIPostPlayUpsellConfig - missing channel id
VUIPostPlayUpsellConfig - missing show id
VUIPostPlayUpsellConfig - post play upsell reached its per channel rate(%lu/%fhrs) limit for channel %@
VUIPostPlayUpsellConfig - post play upsell reached its per show rate(%lu/%fhrs) limit for show %@
VUIPostPlayDocumentServiceViewController::user did interact with the post play UI; notifying delegate.
Applicaiton script download manager uses custom URL cache: mem capacity %lu disk capacity %lu
Prefetch application script from: %@.
Return in-memory application script for: %@.
Already downloading application script from: %@. Add completion block to queue.
Download application script from: %@.
Successfully downloaded application script from: %@.
Failed to download application script from: %@. status code:%lu -- %@
VUIPresenterController:pushViewController trying to push the same view controller as the existing one on top.
VUILibraryGridCollectionViewController:Setting %lu media entities
VUILibraryGridCollectionViewController:Creating snapshot using %lu media entity identifiers and %lu entities
Applying Delete Change: Deleting Sections At: %@
Applying Delete Change: Deleting Section At: %lu
Applying Delete Change To Section: %lu. Delete Items At: %@
Applying Insert Change: Inserting Sections At: %@
Applying Insert Change: Inserting Section At: %lu
Applying Insert Change To Section: %lu. Insert Items At: %@
Applying Move Change To Section %lu to %lu
Applying Move Change To Item %@ to %@
Applying Update Change: Updating Sections At: %@
Applying Update Change To Section: %@. Reloading Items At: %@
Unable to generate lease renewal request
Token failure acquiring lease
Failed to acquire lease.  Trying again.
Retrying lease start after authentication
Lease authentication failed
Unable to retrieve url from bag for key [%@]
Lease agent response with status %@
Sorting will be performed by MPMediaLibrary using %@ (%@)
Filtering is not supported for keypath %@. Predicate cannot be satisfied by the MPMediaLibrary directly
Sorting media entities returned from MPMediaQuery
Processing range on media entities returned from MPMediaQuery
Unable to create VUIMediaCollection for MPMediaItemCollection: %@
Evaluating for VUIMediaItemTraitStopWhenPausedForTooLong.  Rental expiration is %@
Rental is not expired and not expiring in the next hour.  Will stop after being paused for too long to allow other devices to play rental.
Rental is either expired or expiring in the next hour.  Will not stop after being paused for too long
Skipping bookmark sync since it was done recently
Playback type is HLS
Setting playbackURL to %@
Waiting for redownload to complete before continuing
Not waiting for redownload to complete before continuing
Both HLS and CRABS URLs are available
Using CRABS URL since Quick Start is Off
Only HLS URL is available (CRABS is missing)
Only CRABS URL is available (HLS is missing)
Setting playback type to %@
Using dispatch group to notify that preparation is complete
Preparation completed immediately, not using dispatch group
rentalInformation: %@ error: %@
Expiration date: %@ which is %f seconds from now
SSRentalInformationRequest response is missing playbackStartDate
SSRentalInformationRequest response is missing playbackPeriod
Waiting for rental checkout to complete before calling prepareForPlaybackInitiationWithCompletion completion handler
Not performing rental checkout since it's not required
storeItemDict is nil
Error performing redownload: %@
Skipping redownload since a store item purchase dictionary was provided
Starting redownload
Redownload complete
Empty purchase response
Unable to check out rental since dsid is invalid
Unable to check out rental since rental ID is invalid
Checking out rental
Rental checkout complete
Rental checkout failed with error: %@
Setting media item's expiration date to %@.
Setting media item's playback start date to %@.
*** hlsPlaylistURL was not provided.  This will negatively impact playback startup time.
*** contentRatingRank was not provided.  This will negatively impact playback startup time.
*** rentalID was not provided.  This will negatively impact playback startup time.
Initializing playback type to %@
No assets available in store item dictionary.  Returning store item dictionary itself.  Flavor is %@
Preferred CRABS asset flavor: %@
Unable to check in rental since dsid is invalid
Unable to check in rental since rental ID is invalid
Checking in rental
Rental checkin complete
Rental checkin failed with error: %@
Checking for orphaned rentals.  Making request to pendingSongs
pendingSongs request complete
Got list of rentals from store but a rental is now checked out and being played.  Will check when rental is done playing.
Checking in orphaned rental with adam ID %@ [%@]
Didn't find any rentals that need to be checked in
Not checking for orphaned rentals since a rental is checked out and being played.  Will check when rental is done playing.
Not checking for orphaned rentals since it's already in progress
Not checking for orphaned rentals since it's already completed
pendingSongs request failed with error %@.
VUIMenuCollectionViewController:Setting %lu main menu items, %lu genre menu items
VUIMenuCollectionViewController:Creating snapshot with %lu main menu items, %lu genre menu items
Unable to check for expired rentals since dateOfLastRentalExpirationCheck or currentDate is nil
Found %lu rentals that have expired since expiration handling
Invalidating existing expiration timer
Found %lu rentals that will expire in the future
Found rental that will expire on %@
Scheduling expiration timer for earliest expiration: %@
Unable to determine earliest expiration date.  Not scheduling expiration timer
VUIActionItunesExtras::Failed to build punch out url
VUIActionItunesExtras::open application returned with error: %@
Media entity fetch failed with error (%@) for requests: %@
VUIActionPlay - Failed to punch out TV App -- %@
VUITVShowDetailPageViewController:Setting %lu seasons, %lu episodes
VUITVShowDetailPageViewController:Creating snapshot with %lu seasons
Cancelling download
Removing download
Updated state for MediaItemAssetController = %@
VUIPostPlayUpsellManager - App is opening another document from Post Play UI.
VUIPostPlayUpsellManager - _currentMediaItemWillChange: %@, reason: %@
VUIPostPlayUpsellManager - Defer the processing of this media item upsell
VUIPostPlayUpsellManager - _handleDeferredMediaItemUpsellIfNeeded: %@
VUIPostPlayUpsellManager - _handleUpsellForMediaItem: %@
VUIPostPlayUpsellManager - Do not have valid conditions to show upsell
VUIActionCommerceTransaction - PurchaseFlow response: %@
VUIActionCommerceTransaction - PurchaseFlow error: %@
VUIActionCommerceTransaction - Failed to punch out TV App -- %@
Failed to acquire item [%@] error [%@] response [%@]
VUIActionCommerceTransaction - SubscriptionFlow response: %@
VUIActionCommerceTransaction - SubscriptionFlow error: %@
VUIActionCommerceTransaction - SubscriptionFlow successfully refreshed config
VUIActionCommerceTransaction - SubscriptionFlow error refreshing config: %@
VUIActionCommerceTransaction - SubscriptionFlow successfully refreshed subscription store
VUIActionCommerceTransaction - SubscriptionFlow error refreshing subscriptions from finance: %@
VUIActionCommerceTransaction - Subscription transaction for [%@] is interrupted due to error code: [%lu]
Failed to acquire subscription with error [%@] response [%@]
VUIActionCommerceTransaction - Purchase transaction for [%@] was interrupted due to error code: [%lu]
VUIAppDocumentServiceViewController: (%@): Created manual update context for context dictionary (%@) and element name (%@)
VUIAppDocumentServiceViewController: (%@): Unable to create update update context for context dictionary (%@) and element name (%@)
UPDATE_EVENTS: [%@] View will appear, starting document updates for any deferred update events if possible
UPDATE_EVENTS: [%@] View will disappear, deferring automatic document updates
UPDATE_EVENTS: [%@] View controller is being dismissed or popped off the nav stack. Will cancel any current document updates and unregister for document update events
UPDATE_EVENTS: [%@] Received new document update event [%@]. Will try to start document updates
UPDATE_EVENTS: [%@] AppDocumentHasBecomeActive, starting document updates for any deferred update events if possible
UPDATE_EVENTS: [%@] Document update request [%p] for view element [%p] has completed with status [%lu] errorDictionary [%@]
UPDATE_EVENTS: [%@] Document will update the view elements after serviceRequest:didCompleteWithStatus: event
UPDATE_EVENTS: [%@] Update request [%p] has replaced the entire document.
UPDATE_EVENTS: [%@] Document creation request has completed with status [%lu] errorDictionary [%@]
UPDATE_EVENTS: [%@] Document has been updated
UPDATE_EVENTS: [%@] Sending update request [%p] for view element [%p] with context dictionary: %@ View Element [%p %@]
UPDATE_EVENTS: [%@] Cancelling update request [%p] for view element [%p]
VUIAppDocumentServiceViewController: (%@): _performNextDocumentUpdateIfNeeded: Update context has an update request requiring processing View Element [%p]
VUIAppDocumentServiceViewController: (%@): _performNextDocumentUpdateIfNeeded: Current update context is complete. Will check to see if any deferred events need to be processed
VUIAppDocumentServiceViewController: (%@): _performNextDocumentUpdateIfNeeded: No update context found. Will check to see if any deferred events need to be processed
UPDATE_EVENTS: [%@] DocumentUpdatesForDeferredEvents: Bailing coz currently deferring event processing
UPDATE_EVENTS: [%@] DocumentUpdatesForDeferredEvents: Bailing coz currently processing an update context [%p]
UPDATE_EVENTS: [%@] DocumentUpdatesForDeferredEvents: Bailing coz no more events to be processed
UPDATE_EVENTS: [%@] DocumentUpdatesForDeferredEvents: New automatic update context [%p] has been created for events [%lu %@] 
View Elements [%lu %@]
UPDATE_EVENTS: [%@] Registering Event Descriptors [%lu %@] 
 View elements [%lu %@]
UPDATE_EVENTS: [%@] unregistering document for update events
[%@] - Received pause request while fetching. Will cancel fetch and move to paused state
[%@] - Received pause request while in the ready state. Will move to paused state
[%@] - Received pause request while already in the puased state. Incremented paused count [%lu]
[%@] - Returning fetch controller to the ready state
[%@] - Decremented pause count for fetch controller. Decremented Count [%lu]
[%@] - Received resume request when we are in the paused state but we have a zero pause count! Ignoring
[%@] - Ignoring resume request for fetch controller as it is fetching
[%@] - Ignoring resume request for fetch controller as it is in the ready state
[%@] - Calling completion handler
[%@] - Ignoring begin fetch request as the controller is paused
[%@] - Received begin fetch request for a controller that is already fetching. Will ignore
[%@] - Received begin fetch request for a controller that is in the ready state. Will start new fetch if required
[%@] - Cancelling fetch
[%@] - Starting fetch
[%@] - New fetch not required as the library contents have not changed
[%@] - Fetch completed. Will process results and move to ready state
[%@] - Fetch completed but was cancelled. Will not process results but will remain in current state (%@) and call completion handler
VUIPlaybackReporterVPAFPlaylist - Media item lacks vpaf dictionary. Will not track.
VUIPlaybackReporterVPAFPlaylist - Media item has vpaf dictionary. Will track. %@
VUIPlaybackReporterVPAFPlaylist - Feature metrics: %@
VUIPlaybackReporterVPAFPlaylist - Parsed items: %@
VUIPlaybackReporterVPAFPlaylist - Playlist metrics: %@
Could not read processStartTime
GDPR init: Consented %d
METRICS: No document found for impressions on exit
VUIMetricsController: received JS event type:[%@], pageContext:%@
Metric not recorded - no activeMetricsKit
VUIMetricsController: received invalid event type:[%@] for data:%@
VUIMetricsController: Metrics error: %@
VUIMetricsController: Metrics Flushed for topic: %@
No perf event - GDPR not consented
No log event - GDPR not consented
WLK fetch error %@
GDPR forced status: %d
GDPR update: consented %d
VUIMetricsController: Unserializable event data: [%@] error:[%@]
Recorded Event [%@]
========== %@ Metrics Event ========== (limited fields):%@
VUIActionUpdateSportsFavorite failed sportsLeagueID [%@] fav [%@]
Processing valid offer router data source
Invalid offer router data source
Empty offer router data source
VUIOfferUtilities - Already registered the device for offers.
VUIOfferUtilities - No account is signed in, skipping device offer registration.
VUIOfferUtilities - Error running the device offer registration. %@
VUIOfferUtilities - Registered the device for offers.
VUIUpNextOverlayView::setting auto play animation with duration:(%ld seconds)
VUIPreflightManager::validating restrictions for playback.
VUIPreflightManager::restriction validation output: %@
VUIPreflightManager::ratingValue:%@, ratingDomain:%@
VUIPreflightManager::validating restrictions for purchase.
VUIPreflightManager::media is not allowed by settings/profile, showing alert.
VUIMPHomeShareMediaLibraryManager: Shared MP media libraries did change: %@. latestHomeShareMediaLibraries: %@, Current Libraries: %@
VUIMPHomeShareMediaLibraryManager: Updated home share media libraries : %@ using change set: %@
VUIActionPunchout::openApplicationWithBundleIdentifier returned with error: %@
VUIActionPunchout::openURL returned with error: %@
VUIActionPunchout::either punchoutURL or bundleID is nil; URL: [%@] bundleIdentifier:[%@]
VUIMediaController::finished creating media controller %@ (%@)
VUIMediaController::finished cleaning up %@ (%@)
VUIMediaController::%s will stop media controller (%p: %@)
VUIMediaController::player is not ready to play; will start playback when it's ready.
VUIMediaController::stopping player for media controller: [%@]
VUIMediaController::playback is enabled but we don't have a player, start reloading.
VUIMediaController::no playlist specified.
VUIMediaController::cleaning up everything for %@
VUIMediaController::cleaning up player and playback view controller for %@
VUIMediaController::(%p: %@) showing background image now.
VUIMediaController::(%p: %@) showing playback view now.
VUIMediaController::delay load image with object %@
VUIMediaController::playback state changed for %@, new state %@
VUIMediaController::%@ received stop event because %@ will start playback.
VUIMediaController::%@ isBackgrounded:<%@>
VUIMediaController::%@ shouldIgnorePlaybackStop = %@
VUIMediaController::%@ invalidating waiting for timeout timer in paused state.
VUIMediaController::%@ invalidating playlist loading timer. Going to new state: %@
VUIMediaController::will create a new playback view controller with playlist:<%@>
VUIMediaController::creating player because no player was supplied.
VUIMediaController::creating avPlayerViewController because none was supplied.
VUIMediaController::starting to load the playlist:<%@>
VUIMediaController::completed loading image proxy: [%@], finished: [%@]
VUIMediaController::failed to load image proxy with error: [%@]
VUIMediaController::(%p: %@) not loading playlist applicationState:<%ld> isFullscreenPlaybackUIBeingShown:<%@>.
VUIMediaController::(%p: %@) scheduling a playlist loading timer with interval: (%f)
VUIMediaController::(%p: %@) loading timer fired, isPlaybackEnabled: (%@)
VUIMediaController::(%p: %@) since playback delay interval is 0.0, loading playlist now.
VUIMediaController::(%p: %@) playback is not enabled, not setting loading timer.
VUIMediaController::cancelling loading of current image proxy: [%@], new image proxy to load: [%@]
VUIMediaController::we have a pending playlist, starting loading timer.
VUIMediaController::dispatch_after fired in StateLoadingPlaylist, isPlaybackEnabled: (%@)
VUIMediaController::playback is not enabled yet. Will show playback when it gets enabled.
VUIMediaController::%@ timedout while waiting in pause state, current state %@
Error making purchse: no buy params specified in request
Error making purchse: [%@] plist error [%@] Was cancelled [%d]
Time to process buy in ms [%ld]
%s: failed to get boot URL, error %@
VUIActionMarkedAsWatched failed for itemID [%@] type [%@] channel [%@]
VUISportsScoreboardManager - _getScoreboardUpdates update in progess, request ignored
VUISportsScoreboardManager - _getScoreboardUpdates numberOfCanonicalIds: %lu
VUISportsScoreboardManager - %@
VUISportsScoreboardManager - _resetTimer
VUISportsScoreboardManager - _invalidateTimer
VUIStoreAuxMediaItem deallocated
Keeping media item alive until key response(s) are received
Received response for key request(s)
overriding requiresLinearPlayback to YES due to TVPMediaItemTraitDisableScrubbing
setting requiresLinearPlayback to %@
Either media info is invalid or its intent is not fullscreen.
Picture in picutre %@ requested with reason:<%@>
stopAllPlayback called
Setting the audio category to AVAudioSessionCategoryAmbient, mode:AVAudioSessionModeMoviePlayback
Failed to set audio session playback category: %@
Setting the audio category to AVAudioSessionCategoryPlayback, mode:AVAudioSessionModeMoviePlayback, routing: AVAudioSessionRouteSharingPolicyLongFormVideo
Now playing view controller view will disappear with reason:<%@>
Now playing view controller TVMediaPlaybackUIMode:<%ld> enabled:<%@>
Now playing view controller skipIntro button was pressed.
Now playing view controller from beginning button was pressed.
Now playing view controller more info button was pressed.
Now playing view controller menu button was pressed.
Now playing view controller media info changed:<%@>, canPlay:<%@>
Received %@
Player scan mode: %@
Returning %@
Returning %@ in %@
picture in picture did become active.
did destroy picture in picture.
picture in picture controller [%@] did request player to %@
Muting picture in picture playback.
Unmuting picture in picture playback.
Picture in picture %@ requested but there's no picture in picture active.
Playback state did change to %@
Playback error ocurred %@
Cannot update features because feature monitor is not valid.
Stopping playback since playback has been paused for too long.
Stopping playback since app has been backgrounded for too long
is post play allowed:<%@>
configured post play feature:<%@>
configured post play bootstrap feature:<%@>
bootstrapping post play so ignoring showing post play.
Will show post play so scheduling dismiss timer with interval:[%f]
Post play will hide; invalidating dismiss timer; playback state:<%@>
Since player has stopped already, cleanup fullscreen playback
Scheduling a post play dismiss timer with interval:[%f]
Post play dismiss timer fired.
Setting elapsed time to:<TVPElapsedTimeStart> for player:<%@>
Cannot set elapsed time since playBackInfo is nil.
Showing more info with now playing view controller:<%p>
Cannot show more info because nowPlayingViewController is nil.
feature did change state: (%@) but we don't have playback info.
_removeNowPlayingViewControllerFromExtrasNavigationController invoked
_removeNowPlayingViewControllerFromExtrasNavigationController::removing now playing view controller.
_removeNowPlayingViewControllerFromExtrasNavigationController::count before removing:<%lu>
_removeNowPlayingViewControllerFromExtrasNavigationController::count after removing:<%lu>
_removeNowPlayingViewControllerFromExtrasNavigationController::navgiation stack was changed, updating view controllers.
_popNowPlayingController invoked
_popNowPlayingController::removing now playing view controller.
_popNowPlayingController::navgiation stack was changed, updating view controllers.
cleaning up fullscreen playback.
popping now playing view controller
cleaning up picture in picture playback.
created a new player: (%@)
created a new avPlayerViewController: (%@)
transferring avPlayerViewController: (%@) from fullscrren --> pip.
fullscreenPlaybackInfo is nil when going into pip.
transferring avPlayerViewController: (%@) from pip --> fullscreen.
successfully transferred pip to fullscreen, notifying avKit.
pipPlaybackInfo is nil when restoreing from pip.
unable to restore AVPlayerViewController. NavigationController: (%@)
adding stop when paused too long feature. Will stop after %f minutes of being paused
removing stop when paused too long feature
_uncoverOrRemoveNowPlayingViewController::uncovered now playing view controller.
_uncoverOrRemoveNowPlayingViewController::removed now playing view controller.
already playing this playlist, didRemoveNowPlayingViewController:<%@>
playing within extras, asking main tempalte to stop.
fullscreen player has stopped, shouldIgnorePlayerStop:<%@>
current topViewController:<%@> currentUIMode:<%lu>
starting to swap fullscreen <--> pip.
preventing fullscreen media controller to stop before swapping pip <--> fullscreen.
muting fullscreen playback.
preventing fullscreen media controller to stop before restoring picture in picture while playing dual stream.
Stopping playback because picture in picture is ending without going back to fullscreen playback
Stopping picture in picture playback.
finished swapping fullscreen <--> pip.
pausing player since application was backgrounded while not doing external playback
adding stop when backgrounded too long feature.  Will stop after %f seconds of being backgrounded
removing stop when backgrounded too long feature
post play UI has timedout and playback state is [%@].
since playback has already stopped, cleaning up fullscreen playback now.
deactivating post play UI.
Media item entity types fetch failed with error (%@)
Applying Delete Change. Deleting Rows At: %@
Applying Insert Change. Inserting Rows At: %@
Applying Move Change To Row %@ to %@
Applying Update Change To Section: %@. Reloading Rows At: %@
VUIBackgroundMediaController::finished creating media controller %@ (%@)
VUIBackgroundMediaController::finished cleaning up %@ (%@)
VUIBackgroundMediaController::%s will stop media controller (%p: %@)
VUIBackgroundMediaController::player is not ready to play; will start playback when it's ready.
VUIBackgroundMediaController::stopping player for media controller: [%@]
VUIBackgroundMediaController::playback is enabled but we don't have a player, start reloading.
VUIBackgroundMediaController::cleaning up everything for %@
VUIBackgroundMediaController::cleaning up player and playback view controller for %@
VUIBackgroundMediaController::(%p: %@) showing background image now.
VUIBackgroundMediaController::(%p: %@) showing playback view now.
VUIBackgroundMediaController::delay load image with object %@
VUIBackgroundMediaController::playback state changed for %@, new state %@
VUIBackgroundMediaController::%@ received stop event because %@ will start playback.
VUIBackgroundMediaController::%@ isBackgrounded:<%@>
VUIBackgroundMediaController::%@ invalidating waiting for timeout timer in paused state.
VUIBackgroundMediaController::%@ invalidating playlist loading timer. Going to new state: %@
VUIBackgroundMediaController::will create a new playback view controller with playlist:<%@>
VUIBackgroundMediaController::creating player because no player was supplied.
VUIBackgroundMediaController::creating avPlayerViewController because none was supplied.
VUIBackgroundMediaController::starting to load the playlist:<%@>
VUIBackgroundMediaController::(%p: %@) not loading playlist applicationState:<%ld> isFullscreenPlaybackUIBeingShown:<%@>.
VUIBackgroundMediaController::(%p: %@) scheduling a playlist loading timer with interval: (%f)
VUIBackgroundMediaController::(%p: %@) loading timer fired, isPlaybackEnabled: (%@)
VUIBackgroundMediaController::(%p: %@) since playback delay interval is 0.0, loading playlist now.
VUIBackgroundMediaController::(%p: %@) playback is not enabled, not setting loading timer.
VUIMediaController::canceling loading of current image proxy: [%@], new image proxy to load: [%@]
VUIBackgroundMediaController::we have a pending playlist, starting loading timer.
VUIBackgroundMediaController::dispatch_after fired in StateLoadingPlaylist, isPlaybackEnabled: (%@)
VUIBackgroundMediaController::playback is not enabled yet. Will show playback when it gets enabled.
VUIBackgroundMediaController::%@ timedout while waiting in pause state, current state %@
Updated state for MediaItemCollectionAssetController = %@
[VUIMediaEntitiesFetchOperation]: Media entity subtypes do not match for fetch filters. No entities will be returned. (%@)
[VUIMediaEntitiesFetchOperation]: Media entity subtype is not valid!: %@
[VUIMediaEntitiesFetchOperation]: Media categories do not match for fetch filters. No entities will be returned. (%@)
[VUIMediaEntitiesFetchOperation]: Media category is not valid!: %@
[VUIMediaEntitiesFetchOperation]: Media collection types do not match for fetch filters. No entities will be returned. (%@)
[VUIMediaEntitiesFetchOperation]: Media collection type is not valid!: %@
?TTTTTT
?wwwwww
?333333
f@333333
.@ffffff
?333333
p@q=
333333
@333333
?333333
@333333
MbP?
t@_)
v@ffffff
333333
?ffffff
:F@
p@333333
?888888
?TTTTTT
?xxxxxx
333333
?333333
?======
?PPPPPP
HangerViewLayout
FooterViewLayout
VideosUI
VideosEngineParser
ViewModelKeys
EdgeInsets
CornerRadii
Device
Image
Text
Media
ViewModelType
ViewModelAttribute
ViewModelExtraInfo
AnimationType
TextViewFactory
VideosUI
PageControlView
PageControlType
NVUIPageControlType
VideosColorType
VideosColorFactory
VideosUI
AdaptivePageControlView
Direction
DocumentRequestViewController
PageSwipeUpViewLayout
ViewModel
JSService
BackgroundMediaControllerHosting
DecoratedShelfView
TVRowMetrics
CGSize
CGColor
NCGColorRef
__Unnamed_struct_rowPadding
TVRowMetricsType
VideosUI
DecoratedShelfViewController
LayoutTraits
LayoutTraitsProvider
AdaptiveLayoutProperty
VUISizeClass
UnitTestLockupLayout
ErrorView
ViewModelResult
ViewModelLiteral
ViewModelFactory
WeakSubview
CGRect
CGPoint
VideosEnginePromiseOperation
ButtonLayout
ButtonType
ButtonTitleStyle
ImageLayout
ScaleMode
TextViewModel
TextValueType
VideosUI
ViewLayout
Position
RelationalLayout
Properties
TVCornerRadii
UIEdgeInsets
VideosUI
ScrollDirection
PaginationTemplateController
AutoresizingMask
NUIViewAutoresizing
LRUCache
ImageSizeMode
MediaInfoHelper
VideosEngineJSInterface
VideosEngineJSInterfaceFunction
VideosEngine
ViewLayoutKeys
ImageLayoutKeys
TextLayoutKeys
ButtonLayoutKeys
DecoratedShelfLayout
JSPromiseOperation
VideosUI
UIFactory
DocumentRef
LayoutFactory
UIEvent
VerticalStackView
ImageViewFactory
Logger
Level
NNSAttributedStringKey
Foundation
VideoViewModel
VideosEngineServiceRequest
Output Failure
PageAnimationDirection
PageAnimator
PageWipeAnimator
PageDissolveAnimator
AnimationOptions
NUIViewAnimationOptions
AdaptivePageControlLayout
DocumentServiceRequest
VideoEngineDocumentRequest
I@af
VerticalStackLayout
StackType
VerticalStackLayoutKeys
VideosColor
ImageDescriptor
TVImageRepresentator
DisplayGuide
ImageViewModel
Image
VUIGridType
VUIGridStyle
SizeType
VideosEngineError
ErrorTemplateLayout
ButtonViewFactory
UIUserInterfaceStyle
DictionarySubscriptable
DocumentParser
UnitTestCardLayout
DocumentViewController
DocumentUpdateType
Document
PageContentView
PlaybackState
FooterView
ExpandableView
ErrorTemplateController
TextLayout
ContentSizeCategory
Style
FontWeight
FontFeature
Transform
Alignment
ScrollViewMonitor
contentOffset
PageSwipeUpView
VideosEngineRequest
ParserType
$s8VideosUI0A12EngineParserP
$sSY
SiIeyBy_
SiSgSg
SiSg
SgXw
So6UIViewC
ySicSg
So7UIColorC
So13UIPageControlCSg
ySSSo7UIColorCG
So7CALayerC
SgXw
GIegg_
SSSg
SDySSypG
SdSg
Sd_Sit
SgXw
SgXw
SaySDySSypGG
SDySSypGSg
$s8VideosUI18JSServiceInterfaceP
So10IKJSObjectC
So6UIViewCSg
_ypSgtG
_ypSgt
ypSgG
$s8VideosUI32BackgroundMediaControllerHostingP
ySo28VUIBackgroundMediaControllerCcSg
ySo28VUIBackgroundMediaControllerCSgcSg
So6UIViewCSgXw
So28VUIBackgroundMediaControllerCSg
So11UIImageViewCSg
So12_TVImageViewCSg
So18UIVisualEffectViewCSg
So15CAGradientLayerCSg
So7CALayerCSg
ypSgG
_yptG
_ypt
So16UIViewControllerCSg
yypG
ySo8NSNumberCG
So9JSContextCSo7JSValueCSayADGAD
_pIeggggozo_
So7JSValueCyXB
ySo7JSValueCG
So8NSObjectC
So16UIViewControllerC
So22_TVShelfViewControllerCSg
So13IKViewElementCSg
SgXw
So9NSCopying_p
So17UITraitCollectionC
$s8VideosUI20LayoutTraitsProviderP
yycSg
So17UITraitCollectionCSg
yxGSgXw
yxGSgXwz_x_lXX
Iegg_
So8VUILabelCSg
SayypG
So10IKJSObjectCm
y_So6UIViewC
xSgXw
So6UIViewC_
ySo6UIViewC_
yxGSgXw
yxGSgXwz_x_
RzlXX
SgXw
So10IKJSObjectCSgXw
So12IKAppContextCSgXw
GIegn_
Gz_x_
RzlXX
SgXw
So15VUIButtonLayoutCSg
ySbG
ySSG
SgXw
ypSg
SbSg
So13TVImageLayoutCSg
So18NSAttributedStringCSg
ySSypG
SaySDySSypGGSg
So8NSShadowCSg
So18UIFocusEnvironment_p
ySo18UIFocusEnvironment_pG
SaySo12TVImageProxyCGSg
_pSg
So24UISwipeGestureRecognizerCSg
So22UITapGestureRecognizerCSg
Iegy_
SgXw
SaySo12TVImageProxyCG
ySo12TVImageProxyCG
$ss25ExpressibleByArrayLiteralP
$ss10SetAlgebraP
$ss9OptionSetP
q_Sg
yxq_G
So17OS_dispatch_queueC
SDyxq__
So17VUIVideosPlayableCSg
ySo17VUIVideosPlayableCG
So12IKAppContextC
xz_x_
RzlXX
y10ParserType
GIegg_Iegg_
y10ParserType
GIegn_
y10ParserType
GIegg_
y10ParserType
$s8VideosUI27JSPromiseOperationInterfaceP
ypGSg
ySS_So35VUIAppDocumentServiceViewControllerCmtG
So35VUIAppDocumentServiceViewControllerCXMT
ySSSo35VUIAppDocumentServiceViewControllerCmG
ySS_
SaySo6UIViewC_
tGSg
y_So6UIViewC
So6UIViewC_
ySo6UIViewC_
So12_TVImageViewCXo
So12_TVImageViewCXoz_Xx
So9OS_os_logC
_yptG
_ypt
So8NSStringC
$ss21_ObjectiveCBridgeableP
$s8VideosUI0A20EngineServiceRequestP
7Failure
$s8VideosUI12PageAnimatorP
SgXw
SgXwz_Xx
GIegg_Iegg_
GIegn_
GIegg_
GIegg_
$s8VideosUI0A13EngineRequestP
So7UIColorCSg
ABSH8VideosUIyHCg_G
So18TVImageDescriptionC
ABSH8VideosUIyHCg_GSg
SgXw
SDySSypGSgSg
SSSgSg
$ss12CaseIterableP
$s8VideosUI23DictionarySubscriptableP
So17_TVAppLoadingViewCSg
So17_TVAppLoadingViewC
tcSg
SgXw
y_So6UIViewC
GGSg
ySuG
SgXw
SuSg
So8NSNumberCSg
So13VUITextLayoutCSg
So12UIScrollViewCSgXw
y_So12UIScrollViewC
So12UIScrollViewC
SgXw
SgXwz_Xx
SbIegy_
Iegy_
10ParserType
yxq_G
yqd__q_GIegno_
qd__
G0R1_
G1R1_
yxq_GIegn_
Sgz_Xx
yqd__q_GIegn_
imageLayout
$__lazy_storage_$_buttonLayout
document
identifier
layout
children
attributes
metrics
routerDataSource
value
left
bottom
right
topLeft
topRight
bottomRight
bottomLeft
tvOS
phone
darkSrc
placeHolderSrc
isTemplated
cropCode
format
theme
textLayout
videosPlayable
background
debugText
description
caption
subtitle
text
title
bodyText
alphaImg
fullscreenImg
logo
badge
button
card
editorialCard
lockup
header
video
verticalStack
footer
navigationBar
leftBarItems
rightBarItems
pageInfo
section
shelf
decoratedShelf
errorTemplate
paginationTemplate
unitTestTemplate
unitTestLockup
unitTestCard
unitTestCardNoLayout
updateType
maxConcurrentImageDownloads
mutePlaybackInBackground
allowsBackgroundPlaybackOverCellular
animationType
imageProxies
currentImageProxy
imageSize
previousImageSize
imageSizeMode
interfaceStyle
wipe
dissolve
RawValue
currentPageDidChange
capMargin
pageControlBackgroundColor
currentPageIndicatorTintColor
pageIndicatorTintColor
pageControlType
adaptivePageControlView
roundedPageControlView
RawValue
opacityA
opacityB
opacityC
lightOpacityA
lightOpacityB
lightOpacityC
darkOpacityA
darkOpacityB
darkOpacityC
primaryBackground
secondaryBackground
tertiaryBackground
primaryText
secondaryText
tertiaryText
quaternaryText
primaryFill
secondaryFill
tertiaryFill
quaternaryFill
lightKey
darkKey
keyColor
imageBorder
imageHighlight
separator
opaqueSeparator
progressBarFill
systemRed
systemGreen
systemBlue
systemOrange
systemYellow
systemPink
systemPurple
systemTeal
systemIndigo
label
secondaryLabel
tertiaryLabel
quaternaryLabel
link
placeholderText
systemBackground
secondarySystemBackground
tertiarySystemBackground
systemGroupedBackground
secondarySystemGroupedBackground
tertiarySystemGroupedBackground
systemfill
systemSecondaryFill
systemTertiaryFill
systemQuaternaryFill
systemGray
systemGray2
systemGray3
systemGray4
systemGray5
systemGray6
RawValue
currentPageDidChange
numberOfPages
leftLayer
movingLayer
rightLayer
widthOfMovingBar
distanceToMove
totalWidthOfTheScrollBar
currentPage
layout
panGestureStartPoint
left
right
RawValue
documentServiceRequest
initialRequestSent
textLayout
chevronImageLayout
baselineMarginToChevron
heightOfGradientView
topMarginOfChevron
identifier
type
children
childrenDictionary
viewLayout
parent
jsonDictionary
_document
willHost
willRelinquish
shelfView
shelfRowMetrics
backgroundMediaController
backgroundViewModel
viewModel
verticalStackView
logoGradientView
logoImageView
$__lazy_storage_$_platterView
$__lazy_storage_$_gradientLayer
$__lazy_storage_$_opacityMaskLayer
width
height
rowType
rowHeight
rowPadding
rowInset
rowInsetAlt
rowMargin
bottom
left
right
shelfViewController
viewElement
scrollViewMonitor
width
height
traitCollection
sizeClass
didUpdate
traitsProvider
default
tvValue
padValue
phoneValue
sizeClassSubscriber
valuesForSizeClassMap
currentTraitCollection
currentSizeClass
left
bottom
right
topLeft
topRight
bottomLeft
bottomRight
width
height
RawValue
titleTextLayout
imageLayout
layout
titleLabel
descriptionLabel
debugTextLabel
debugTextLabel2
some
items
none
string
bool
double
dictionary
array
width
height
view
viewModel
origin
size
width
height
jsPromiseOperation
owner
appContext
promise
buttonType
buttonTitleStyle
$__lazy_storage_$_imageLayout
$__lazy_storage_$_textLayout
$__lazy_storage_$_vuiButtonLayout
primary
textual
oneLine
twoLine
RawValue
$__lazy_storage_$_tvImageLayout
imageSize
upscaleFactor
aspectRatio
scaleMode
borderColor
borderWidth
continuousBorder
placeholderResourceName
cropCode
none
fitBB
fill
fitHeight
width
height
left
bottom
right
topLeft
topRight
bottomLeft
bottomRight
RawValue
value
imgageLayout
computedAttributedString
text
array
margin
padding
width
height
minWidth
minHeight
maxWidth
maxHeight
tintColor
backgroundColor
highlightColor
lineSpacing
position
highlightStyle
focusAlign
focusMargin
focusSizeIncrease
acceptsFocus
centerGrowth
borderRadii
shadow
relationalLayout
currentSizeClass
currentTraitCollection
sizeClassPublisher
layoutTraitsProvider
undefined
center
bottom
left
right
topLeft
topRight
bottomLeft
bottomRight
header
footer
leading
trailing
topLeading
topTrailing
bottomLeading
bottomTrailing
relations
RawValue
left
right
down
undefined
bottomMarginForPageControl
templateModel
lastContentOffset
lastScrollDirection
currentPage
$__lazy_storage_$_imageProxyQueue
$__lazy_storage_$_animator
$__lazy_storage_$_rightSwipeGestureRecognizer
$__lazy_storage_$_leftSwipeGestureRecognizer
playbackEventSubscriber
currentPageView
$__lazy_storage_$_reusableViews
$__lazy_storage_$_pageControl
$__lazy_storage_$_pageSwipeUpView
$__lazy_storage_$_swipeUpGestureRecognizer
$__lazy_storage_$_tapGestureRecognizer
width
height
rawValue
RawValue
ArrayLiteralElement
Element
countLimit
accessQueue
cache
undefined
fixedHeight
width
height
service
promise
createDocument
RawValue
margin
padding
width
height
minWidth
minHeight
maxWidth
maxHeight
tintColor
darkTintColor
backgroundColor
darkBackgroundColor
highlightColor
darkHighlightColor
lineSpacing
alignment
contentAlignment
position
highlightStyle
focusAlign
focusMargin
focusSizeIncrease
acceptsFocus
centerGrowth
light
dark
borderRadii
relations
upscaleFactor
aspectRatio
scaleMode
borderWidth
borderColor
continuousBorder
placeholderResourceName
cropCode
color
darkColor
highlightOrSelectedColor
darkHighlightOrSelectedColor
textStyle
fontFamily
fontSize
fontWeight
fontFeature
textAlignment
numberOfLines
numberOfLinesAXSmall
numberOfLinesAXLarge
minimumScaleFactor
letterSpacing
alwaysFocusable
buttonType
buttonTitleStyle
RawValue
$__lazy_storage_$_logoLayout
$__lazy_storage_$_shelfLayout
loadImmediately
pagination
RawValue
play
select
holdSelect
highlight
contextMenu
pagination
RawValue
platterView
$__lazy_storage_$_expandableView
$__lazy_storage_$_footerView
$__lazy_storage_$_panelView
layout
topLeft
topRight
bottomLeft
bottomRight
left
bottom
right
defaultLogObject
signpostLogObject
default
info
debug
error
fault
_rawValue
RawValue
_ObjectiveCType
videosPlayable
phoneVideosPlayable
padVideosPlayable
left
right
rawValue
ArrayLiteralElement
RawValue
Element
cornerRadiusOfBar
capMargin
distanceBetweenBars
minimumWidthOfMovingBar
maxWidthOfMovingBar
barWidth
bgColor
movingBarColor
staticBarColor
appContext
requestContext
promiseOperation
arguments
Output
Failure
ParserType
hasBlurPlatter
$__lazy_storage_$_captionTextLayout
$__lazy_storage_$_titleTextLayout
$__lazy_storage_$_subtitleTextLayout
$__lazy_storage_$_bodyTextLayout
$__lazy_storage_$_imageLayout
$__lazy_storage_$_expandableViewLayout
$__lazy_storage_$_footerLayout
stackType
undefined
page
flowcase
decoratedShelf
blurPlatter
RawValue
lightUIColor
darkUIColor
_dynamicUIColor
$__lazy_storage_$_color
isStackView
tvImageDescription
layout
resourceName
isResource
traitCollection
gridStyle
gridType
numberOfColumns
windowWidth
mainImage
alternateImages
$__lazy_storage_$_imageProxyCache
fallbackImage
$__lazy_storage_$_layoutDictionary
isTemplated
$__lazy_storage_$_src
$__lazy_storage_$_darkSrc
$__lazy_storage_$_crop
$__lazy_storage_$_format
$__lazy_storage_$_placeHolderSrc
themeString
tvOS
phone
width
height
AllCases
responseIsAnUnexpectedDictionary
responseIsNotADictionary
failedToCreateParser
failedToParse
failedToConvertJSValueToObject
failedToCreatePromiseOperation
interfaceDoesNotExist
functionDoesNotExist
promiseFailed
titleTextLayout
descriptionTextlayout
debugTextLayout
debugTextLayout2
jsonData
document
titleTextLayout
document
templateViewController
isTransitioning
loadingView
opaqueBackground
none
merge
append
replace
delete
onUIEvent
appContext
template
navigationBar
RawValue
backgroundMediaController
_playbackState
playbackDidStartObserver
playbackDidStopObserver
verticalStackView
viewModel
backgroundViewModel
unknown
playing
finished
left
bottom
right
width
height
subviewElements
$__lazy_storage_$_viewLayout
left
bottom
right
topLeft
topRight
bottomLeft
bottomRight
subviewElements
$__lazy_storage_$_viewLayout
isFocusable
left
bottom
right
template
$__lazy_storage_$_vuiTextLayout
contentSize
fontFamily
textStyle
textTransform
fontWeight
fontFeature
fontSize
textAlignment
numberOfLines
minimumScaleFactor
unspecified
extraSmall
small
medium
large
extraLarge
extraExtraLarge
extraExtraExtraLarge
accessibilityMedium
accessibilityLarge
accessibilityExtraLarge
accessibilityExtraExtraLarge
accessibilityExtraExtraExtraLarge
title0
title1
title2
title3
title4
headline
headline2
headline3
subtitle1
subtitle2
subtitle3
callout
body
subhead
footnote
caption1
caption2
headlineShort
bodyShort
subheadShort
footnoteShort
caption1Short
ultraLight
thin
light
regular
semibold
bold
heavy
black
emphasized
smallCaps
petiteCaps
none
lowercase
uppercase
capitalize
left
center
right
justified
natural
RawValue
scrollView
contentOffsetSubscriber
layout
$__lazy_storage_$_gradientView
$__lazy_storage_$_swipeUpLabel
$__lazy_storage_$_chevronView
VUILocalizationManager
VUIAppDocumentAutomaticUpdateContext
VUIAppDocumentUpdateContext
NSObject
VUIAppDocumentManualUpdateContext
VUIFamilySharingEntityRequestResponseParser
VUIAppDocumentPurchaseEvent
NSCopying
VUIAppDocumentPostPlayUpdateEvent
VUIUpsellOfferView
VUIMPMediaEntitiesFetchOperation
VUIAppInstallerViewController
VUIMediaEntitiesDataSourceFactory
VUIOpenURLHandler
VUIStoreFPSKeyLoader
VUIMediaEntitiesFetchController
VUIMarkAsWatchedButton
VUIExtrasManager
TVApplicationControllerDelegate
UIViewControllerTransitioningDelegate
MCProfileConnectionObserver
VUINavigateToUpNextHandler
VUITVButtonHandler
VUIMediaLibraryManager
VUIHomeShareMediaLibraryManagerDelegate
VUIFavoritesRequestManager
VUITopAlignedCollectionViewFlowLayout
VUIAppNavigationController
VUIMediaLibraryApplicationController
VUIScopedBackgroundTask
VUIDebugMetricsSubtitleCell
VUIMediaEntityFetchResponseChangesOperation
VUITVLockupViewCell
VUIRentalExpirationLabelDelegate
VUIAction
VUIMediaTagsViewHelper
VideosUI
VUIShelfView
VUITextBadgeLayout
VUIFamilySharingMediaEntityIdentifier
VUIMediaEntityIdentifierInternal
VUIMediaEntityIdentifier
VUIJSVideosNativeInterface
JSExport
VUISportsOverlayView
VUIScorecardViewDelegate
_TVImageSampling
VUIOverlayWithMaterialRendering
VUISportsScoreboardManagerDelegate
VUIActionUpdateUpNext
VUIOfferCell
VUIMediaLibraryUtilities
VUIAppsGridViewController
UICollectionViewDataSource
UICollectionViewDelegate
UIScrollViewDelegate
VUINowPlayingHudButtonsLayout
VUINowPlayingHudMetaDataViewLayout
VUINowPlayingHudViewLayout
TVMediaProviding
TVObservable
VUIUpNextBannerViewController
__TVShelfViewControllerDelegate
TVAppTemplateImpressionable
TVRowHosting
VUIUpNextBannerView
VUIMPShowMediaCollection
VUIErrorTemplateViewController
VUIIKPlaylistElementToMediaItemsMapper
VUIErrorLayout
VUIBadgeViewWrapper
VUIOverlayView
VUIPlaybackReporter
VUIMPMediaItemEntityTypesOperation
VUIMediaEntityGroup
VUIDocumentPreFetchedData
VUIDocumentPreFetchedDataPostPlay
VUIAppInstallConfirmationView
VUISportsProductBannerLayout
VUINowPlayingViewController
TVMediaControllerDelegate
VUIPostPlayControllerDelegate
TVMediaControllerHosting
VUIAppleTVChannelLogoLayout
VUIVisualEffectLabel
VUIMPMediaEntityImageLoadParamsCreating
VUIPlistMediaEntityImageLoadParamsCreating
VUIMediaEntityImageLoadParamsFactory
VUIUpsellOfferViewLayout
VUILibraryMetrics
VideosJSAdditions
VUIDebugMetricsEventControllerGenerator
VUITVLibraryViewController
VUIMenuCollectionViewControllerDelegate
VUILibraryDataSourceDelegate
VUIFamilyMembersViewControllerDelegate
VUIFamilySharingContentProtocol
VUIAppSpinnerView
VUIMediaEntityFetchRequest
VUITVActionHandlerInfo
VUITVButtonListener
VUIFamilySharingMediaItem
VUIMPMediaItemAssetControllerManager
VUIPlistMediaLibraryIdentifier
VUIMediaLibraryIdentifier
VUILibrarytvOSMenuCollectionConfiguration
VUIMediaAPIResponseMetadata
VUIActionPromise
VUIAccessView_iOS
TVCarouselViewDataSource
VUIActionAlert
VUIAppDocumentUpdateEventDescriptor
VUIMetricsMediaEvent
VUIPlistMediaDatabaseItem
VUIPlistMediaEntitiesFetchOperation
VUIMediaLibraryFetchControllerQueueOperation
VUIDebugMetricsEventCell
VUIMediaTagsViewLayout
VUIMediaItemEntityTypesFetchController
VUICarouselViewController
TVCarouselViewDelegate
VUIDebugMetricsDictionaryViewController
VUIFeedbackTableLayout
VUIFeedbackLayout
VUIViewUserInteractionMonitor
UIGestureRecognizerDelegate
VUIPlistMediaEntityImageLoadOperation
VUIJSPostPlayItemInterface
VUIJSMediaEntity
VUIJSMediaEntityExport
VUILoadingView
VUIFamilySharingMediaEntitiesResponseMetadataParser
VUISettingsManager
VUIOfferView
VUIFamilyMemberCell
VUIFamilyMemberDelegate
VUILibraryMenuDataSourceFactory
VUILibraryStackView
VUIFamilySharingMediaEntitiesDataSource
VUIUpNextOverlayLayout
VUIStillWatchingAlertPresenter
VUIFamilySharingMenuDataSource
VUILibraryStackViewController
VUITextLayout
VPAF
VUIAuthenticationManager
VUIOpenURLRouterDataSource
VUIiTunesKeyValueStoreSyncAPI
VUIiTunesKeyValueStoreSyncItem
VUIiTunesKeyValueStoreSyncResponse
VUISearchAppDocumentServiceViewController
VUILibraryDataSource
VUIDebugMetricsTermCollector
VUIDebugCollectionHeaderView
VUIDebugCollectionViewDefaultsCell
UITextFieldDelegate
VUIDebugCollectionViewNavigationCell
VUIJSAccountChannels
VUIJSAccountChannelsInterface
VUIImageLoadContext
VUIImageLoader
TVImageLoader
VUIDebugMetricsEventValidatorTableViewController
VUIMenuCollectionViewCell
VUIMediaEntityPropertyDescriptor
VUITVShowDetailPageEpisodeShelfViewController
UICollectionViewDelegateFlowLayout
VUITVLibraryEpisodeListCellDelegate
VUIEpisodeLockupFloatingContentView
_UIFloatingContentViewDelegate
VUIViewElementDataSource
VUIMarkAsWatchedRequestManager
VUIDebugMetricsEventValidator
VUIDebugMetricsGladiatorsRulesets
VUICardView
VUIJSMediaPlayer
VUIOrderedItemsMapDelegate
VUIJSMediaPlayerLibraryExport
VUIMediaEntityAssetControllerState
VUIProductShowcaseViewController
VUIRentalExpirationLabel
VUIUpNextRequestManager
VUITVEpisodeInformationView
VUIAppInstallConfirmationViewController
VUILibraryAlertView
VUIAppLoadingViewController
DetailCell
VUIDebugMetricsArrayViewController
VUIApplicationRouter
RoutingWithoutViewElement
VUIPlistMediaDatabaseShow
VUIAppInstallLockup
VUIMenuSectionHeaderCollectionViewCell
VUIMPMediaEntityIdentifier
VUIApplicationViewController
VUIMediaInfo
MPMediaItemAdditions
VUIMediaItemAdditions
IKPlaylistElementAdditions
BackgroundImage
VUIProductSectionInfoViewModel
VUIMPMediaEntitiesDataSource
VUIMediaEntitiesFetchControllerDelegate
VUIAppDocumentRemovePlayHistoryEvent
VUIPlistMediaEntityIdentifier
VUIAppDocumentRefreshEventDescriptor
VUICollectionViewRibbonCell
VUIActionLocationPrompt
VUIJSOfferInterface
VUIJSOfferManageInterface
VUIMediaLibraryFetchControllerQueue
VUINowPlayingObserverDelegate
VUINowPlayingSkipButtonLayout
VUIDebugMetricsImpression
VUIMPMediaLibraryIdentifier
VUIProductSectionView
_VUIAccessViewController
VUIAccessViewController
VUIDebugMetricsImpressionTableViewCell
VUIProductBrowserViewCell
VUIProductBrowserViewController
TVBrowserViewControllerPrivateDelegate
TVBrowserViewControllerDelegate
VUIScorecardView
VUISportsScoreboardViewModel
VUIMediaItem
VUIAirTrafficController
VUIFeedbackViewCell
VUIBackdropView
VUIUPPUpdateRecord
VUIBookmarkService
VUIProductView
VUIProductBannerViewController
VUIUpsellOfferViewController
VUIAppDocumentRefreshEvent
VUIFamilySharingGenre
VUIOverlayLayout
VUIImageResourceMap
VUIJSAMSBagInterface
VUIJSAMSBagDelegate
VUIMPSeasonMediaCollection
VUIGDPRPresentationManager
VUIPlistMediaDatabase
VUILabel
VUILabelTopMarginCalculationProtocol
VUIGenresRequestResponseParser
VUIOfferLayout
VUIAppDocumentModifiedFavoritesEvent
VUIViewControllerContentPresenter
VUITVLibraryEpisodeListCell
TVAuxiliaryViewSelecting
VUIBuyButtonLockup
VUIEditorialCollectionViewCell
VUIFavoriteBannerCollectionViewCell
VUIMPMediaItemCloudDownloadController
MPStoreDownloadManagerObserver
VUIAppStyleFactory
VUINowPlayingViewModel
VUIMediaLibraryContentsChange
VUIChannelBannerViewFactory
VUICloudClient
VUIDirectScrollCollectionView
VUIUpNextButton
VUIUpNextButtonProtocol
VUIActionAppPunchout
VUIPlistMediaDatabaseEntity
VUIRemoveFromPlayHistoryRequestManager
VUIJSSportsInterface
VUIMPMediaLibraryConnectOperation
VUICardCollectionViewCell
VUICanvasAppDocumentServiceViewController
VUIMediaCollection
Factory
VUIJSSettingsInterface
VUIFPSKeyDeletionInfoManagedObject
CoreDataProperties
VUIFPSKeyInfoManagedObject
VUIImageDataManagedObject
VUIImageInfoManagedObject
VUIMovieManagedObject
VUITVEpisodeManagedObject
VUITVSeasonManagedObject
VUITVSeriesManagedObject
VUITVSeriesImageInfoManagedObject
VUIVideoManagedObject
VUIVideoImageInfoManagedObject
VUIMediaEntitiesFetchControllerResult
VUIJSNetworkInterface
VUIDebugMetricsDetailCell
Additions
VUIJSURLRouterInterface
VUIMPLibraryShelvesDataSource
VUIMPSeasonMediaCollectionIdentifier
VUILibraryMenuDataSource
VUINowPlayingHudView
VUITransactionButton
VUIWatchNowTemplateController
VUIExtrasApplicationController
VUIPlaybackUtilities
VUIFamilyMembersRequestResponseParser
VUIActionRemoveFromPlayHistory
VUIAccessView_tvOS
VUIContentMetadata
VUIMPDeviceMediaLibrary
VUIAppDocumentUpdateEventStore
VUIFocusableTextView
VUIHomeAppDocumentServiceViewController
VUIMediaEntitiesToGroupsValueTransformer
VUIActionTypeGDPR
VUIMediaItemEntityTypesFetchResponse
VUINowPlayingInfo
VUISportsProductBannerViewController
VUIRouterDataSource
VUIDebugMetricsImpressionViewController
VUIAppInstallCoordinator
VUIUpNextStateView
VUIUpNextButtonProperties
VUIAppIconImageService
VUIPlistSeasonMediaCollection
VUIFeedbackView
VUIMPMediaCollection
VUIExtrasDescriptionCell
_VUIAppDocumentUpdateEventObserverContext
VUIAppDocumentUpdateEventMonitor
VUIVPPAManager
VUIChannelBannerLayout
VUIDebugMetricsEventListViewController
VUIVideoAdvisoryImageInfo
VUIVideoAdvisoryLogoImageDownloader
VUIMediaTagsImageHelper
VUIMediaEntityKind
VUIUIStackView
VUIMPMediaItemDownloadControllerState
VUINowPlayingHudMetaDataView
VUILibraryFamilyMembersDataSource
VUIMPMediaEntityImageLoadOperation
VUIMediaLibraryFetchMediaEntitiesOperation
VUICountDownProgressIndicator
VUINowPlayingMonitorBoundaryTimeObserverInfo
VUINowPlayingTimerFeatureInfo
VUINowPlayingFeature
VUINowPlayingUserTriggeredFeature
VUINowPlayingTimeBoundFeature
VUINowPlayingHybridFeature
VUINowPlayingTVAdvisoryFeature
VUINowPlayingFeatureMonitor
TVMediaPlaybackManagerDelegate
VUIISMediaItem
TVPContentKeyLoading
VUIPlaybackReporterVPAF
VUICurrentSiriNavControllerContainer
VUIMediaEntitySortIndex
VUIProductMetadataLayout
VUIProductInfoAiringLayout
VUIPlistMediaItem
VUIJSNotificationCenter
WLKNotificationCenterDelegate
VUIMediaTagsView
VUIMenuDataSource
VUISeparatorView
VUIUtilities
VUIViewSpacer
VUIGradientMaskProperties
VUIPostPlayTemplateController
VUIDocumentDataSource
VUIDebugMetricsEvent
VUIMediaEntitiesDataSource
VUIDownloadShowDataSource
VUIMetricsPageEventData
VUILabelFactory
VUIPlaybackReporterUTS
VUIMediaEntityFetchResponseChanges
VUIFeedbackTableView
VUIFeedbackTableViewModel
VUITVDescriptiveAlertController
VUITVDescriptiveAlertView
VUIPostPlayUpsellConfig
VUIMPMediaLibrary
VUIProductBannerViewFactory
VUIFamilySharingRelationship
VUIPostPlayDocumentServiceViewController
VUIMPMediaItem
VUIQueryDataSource
VUIAppScriptDownloadManager
VUICollectionView
VUINowPlayingConfig
VUIPostPlayConfig
VUIAutoPlayConfig
VUIInAppMessagesConfig
VUIFeaturesConfiguration
VUITVEpisodeInformationLayout
VUIProductMetadataView
VUIExtrasInfo
VUIVideosPlayable
VUIPresenterController
VUILibraryGridCollectionViewController
VUIMediaItemCredits
VUIPageHeaderView
VUIOverlayViewFactory
VUIMediaLibraryOperation
VUIICUListFormatter
VUIMediaEntityType
VUISportsProductBannerView
VUIVideoLeaseAgent
VUIMPMediaEntitiesSingleFetchOperation
VUIMediaAPIClient
VUIStoreMediaItem_tvOS
VUIVideoLeaseAgentDelegate
VUIStoreFPSKeyLoaderDelegate
VUIFamilySharingEntity
VUIButtonLayout
VUIUniversalPlaybackPositionClient
DataSource
SBKUniversalPlaybackPositionDataSource
VUIUniversalPlaybackPositionTransactionContext
SBKUniversalPlaybackPositionTransactionContext
VUIUniversalPlaybackPositionRecord
SBKUniversalPlaybackPositionMediaItem
VUIUPPClientState
VUIMediaLibrary
VUIFeaturedCellOverlayLayout
VUIMediaCategory
VUIAppDocumentPurchaseEventDescriptor
VUIMenuCollectionViewController
VUIRentalExpirationMonitor
VUIVideoAdvisoryLegendView
VUINowPlayingObserver
VUINowPlayingObservation
VUIMediaCollectionsToRecentlyAddedToMediaCollectionsValueTransformer
VUIActionItunesExtras
VUICastInfoLayout
VUIComingSoonCardLayout
VUIProductBannerLayout
VUISBGraphics
VUISBIconProgressView
_VUISBIconProgressTransition
_VUISBInstallProgressStateTransition
_VUISBIconProgressNoneWaitingStateTransition
_VUISBIconProgressWaitingLoadingStateTransition
_VUISBIconProgressLoadingNoneStateTransition
_VUISBIconProgressPausedTransition
_VUISBIconProgressFractionTransition
VUISportsOverlayBackgroundMaterialImagesOperation
VUIPlistMediaDatabaseSeason
VUIButton
VUIChannelBannerView
VUIVideoAdvisoryViewLayout
VUICollectionConfiguration
VUIMediaEntitiesFetchControllerOperation
VUIActionPlay
VUITextBadgeView
TVMLKitAdditions
VUITVShowDetailPageViewController
VUITVShowDetailPageHeaderView
VUITVShowDetailPageViewModel
VUISportsOverlayLayout
VUIMPMediaItemAssetController
VUIMPMediaItemDownloadControllerObserver
VUIMediaEntityAssetController
VUIPostPlayUpsellManager
VUIScoreboardRowLayout
VUIScoreboardLayout
VUIInterfaceFactory
VUIActionCommerceInterruptedTransactionManager
VUITransactionOffer
VUIActionCommerceTransaction
VUIPlistMediaEntityImageLoadParams
VUIImageLoadParams
VUIOverlayBlurVisualEffectView
_VUIBlurEffect
VUIBookmarkKey
VUIDebugContainerView
VUIDebugViewController
VUIAppDocumentServiceViewController
IKUpdateServiceRequestDelegate
IKServiceRequestDelegate
VUIAppDocumentUpdateEventMonitorObserving
VUIMediaItemEntityTypesFetchControllerResult
VUIOrderedItemsMap
VUIImageView
VUIPlistMediaLibrary
VUIPlistMediaItemEntityTypesOperation
VUIFocusableCollectionViewCell
VUIMediaAPIRequestFactory
VUIMediaLibraryFetchController
VUIPlaybackReporterVPAFPlaylistItem
MTMediaPlaylistItem
VUIPlaybackReporterVPAFPlaylist
MTMediaPlaylist
VUIAppDocumentCanonicalServiceViewController
VUIiTunesKeyValueStoreAPIUtils
VUIPerfMetricsAppLaunchController
VUIMetricsController
VUIMPHomeShareMediaLibrary
VUIHomeShareMediaLibrary
VUIFamilyMember
VUIRatingToResourceMapper
VUIErrorView
VUIJSPPTInterface
VUIPPTDelegate
VUIMLFactory
VUIActionUpdateSportsFavorite
VUIBackdropMaskingView
VUIMLUtilities
VUIMPMenuDataSource
VUICircularProgress
VUIDebugViewDefaults
VUIDebugViewDataSource
VUIImageLoadParamsOperation
VUIImageLoadingOperation
VUIApplicationController
IKAppContextDelegatePrivate
IKAppContextDelegate
VUIStoreAcquisitionProperties
VUIMediaEntity
VUIOfferUtilities
VUIImageProxyAnimator
VUINowPlayingTimerTriggeredFeature
VUICardViewLayoutFactory
VUICardViewLayout
VUICardViewLayoutRecord
VUIJSFactory
VUIUpNextOverlayView
VUITextBadgeViewDelegate
VUIDebugMetricsEventViewController
VUIEditorialCellLayout
VUIPreflightManager
VUIMPHomeShareMediaLibraryManager
VUIHomeShareMediaLibraryManager
VUIActionPunchout
VUIDeviceMediaLibrary
VUIMediaController
TVMediaController
VUIAcquisitionRequest
VUIStoreAcquisition
VUIBootURLController
VUICollectionViewFeaturedView
VUIFamilySharingRelationships
VUIAdditions
VUIUserSwitchOverlayWindow
VUIUserSwitchLoadingView
VUIVideoAdvisoryInfoDictionaryBuilder
VUIMediaItemEntityTypesFetchResponseChanges
VUIPlistShowMediaCollection
VUIExtrasDescriptionLayout
VUIActionMarkedAsWatched
VUISportsScoreboardManager
VUIEventDataSource
VUIMediaEntityFetchResponse
VUIProductInfoAiringView
VUIButtonFactory
VUIMediaEntitiesToRecentlyAddedMediaEntitiesValueTransformer
VUICollectionViewFeaturedCell
VUIStoreAuxMediaItem
TVPMediaItemReporting
TVPMediaItemReportingDelegate
VUIVideoAdvisoryView
Animator
VUIProductBannerView
VUIProgressBarLayout
VUIFeaturedCellOverlayView
VUIConflictResolverEntry
VUISyncingKeyValueStore
RetailDemoMode
VUITVLibraryView
VUICardFloatingContentView
VUIAppCell
VUIDocumentContextData
VUIDocumentContextDataMovie
VUIDocumentContextDataMovieBundle
VUIDocumentContextDataTVShow
VUIDocumentContextDataConfirmationDialog
VUIDocumentContextDataSiriSearch
VUIMPMediaItemAirTrafficDownloadController
VUIPresentationContainerViewController
VUIPlaybackInfo
VUITVOSPlaybackManager
VUINowPlayingFeatureMonitorDelegate
VUINowPlayingViewControllerDelegate
AVPlayerViewControllerDelegate
AVScanningDelegate
PBSPictureInPictureControllerObserver_Private
PBSPictureInPictureControllerObserver
VUIShelfViewController
TVShelfViewLayoutDelegate
VUIMPMediaItemDownloadController
VUIFamilySharingMediaCollection
VUIExtrasDescriptionView
VUIFavoriteBannerView
VUIMediaItemEntityTypesFetchControllerOperation
VUIJSMediaEntityType
VUIJSMediaEntityTypeExport
VUIJSLocationInterface
VideosExtrasJSITunesStore
SKStoreProductViewControllerDelegatePrivate
SKStoreProductViewControllerDelegate
IKJSITunesStore
VUIBookmark
NSMutableCopying
NSSecureCoding
NSCoding
VUIMutableBookmark
VUILibraryShelvesDataSource
VUIAppleTVChannelLogoView
VUIMPMediaEntityImageLoadParams
VUIAppDocumentModifiedUpNextEvent
VUIApplicationDelegate
UIApplicationDelegate
VUIFamilyMembersViewController
VUIBackgroundMediaController
VUIAppDocumentUpdateEvent
VUIMediaPlayerImageLoader
_VUIMediaPlayerImageLoaderConfiguration
_VUIMediaPlayerImageLoaderOperationSet
VUIAppInstallView
VUISBIconProgressViewDelegate
VUIMPMediaItemCollectionAssetController
VUIMediaEntityAssetControllerDelegate
VUIJSMetricsInterface
VUIComingSoonBannerCardView
VUIMediaEntitiesFetchOperation
VUIChannelView
VUIChannelBannerViewController
VUIWatchNowTemplateBackgroundLayer
VUIFavoriteBannerLayout
VUIPlaybackReporterSession
VUICollectionViewCell
VUIProductBannerCastInfoView
VUITextBadge
VUIDocumentUIConfiguration
VUIDocumentUIConfigurationModal
VUISportsProductBannerViewFactory
overideLocDict
objectForKeyedSubscript:
vui_videosUIBundle
localizedStringForKey:value:table:
count
dictionaryWithObjects:forKeys:count:
exceptionWithName:reason:userInfo:
numberWithInt:
arrayWithObjects:count:
arrayByAddingObjectsFromArray:
sharedInstance
localizedStringForKey:
objectAtIndexedSubscript:
integerValue
localizedStringWithFormat:
copy
setOverideLocDict:
localizedStringForKey:withCounts:
updateWithJSDictionary:
.cxx_destruct
_overideLocDict
raise:format:
init
initWithOrderedSet:
remainingViewElements
intersectOrderedSet:
objectAtIndex:
removeObjectAtIndex:
_documentUpdateRequestForViewElement:appContext:documentRef:
appDocument
templateElement
removeAllObjects
setCurrentUpdateRequest:
receivedEvents
vui_updateEventDescriptors
countByEnumeratingWithState:objects:count:
descriptor
containsObject:
addObject:
dictionaryRepresentation
vui_addObjectIfNotNil:
vui_setObjectIfNotNil:forKey:
isEqual:
class
self
performSelector:
performSelector:withObject:
performSelector:withObject:withObject:
isProxy
isKindOfClass:
isMemberOfClass:
conformsToProtocol:
respondsToSelector:
retain
release
autorelease
retainCount
zone
hash
superclass
description
debugDescription
updateRequestCompletedWithViewElements:documentRef:
updateCurrentUpdateRequestWithAppContext:documentRef:
currentUpdateRequest
initWithEvents:viewElements:
setReceivedEvents:
setRemainingViewElements:
_currentUpdateRequest
_receivedEvents
_remainingViewElements
contextDictionary
viewElement
setContextDictionary:
setViewElement:
initWithContextDictionary:viewElement:
_contextDictionary
_viewElement
initWithContextDictionary:element:
initWithAppContext:serviceContext:
object
vui_arrayForKey:
_processRawMediaEntities:
vui_stringForKey:
vui_dictionaryForKey:
_parseRelationshipBag:
initWithMAPIDictionaries:
firstObject
vui_numberForKey:
setDateFormat:
dateFromString:
_parseContentRatingBag:
movie
isEqualToString:
episode
setShowTitle:
setIdentifier:
setType:
setTitle:
setArtworkURL:
setPreviewArtworkURL:
setOfferListing:
setRelationships:
setEpisodeNumber:
setSeasonNumber:
setStandardDescription:
setReleaseDate:
setContentRating:
setGenreTitle:
setPersonalizedOfferListing:
setITunesExtrasUrl:
initWithAMSEntity:requestedProperties:
_parseRelationship:
setSeason:
setShow:
allKeys
objectForKey:
unsignedIntegerValue
initWithRatingSystemString:ratingLabel:rank:ratingDescription:
parseAMSURLResult:
initWithDescriptor:
mutableCopy
_purchaseEventDescriptor
canonicalID
copyWithZone:
initWithPurchaseEventDescriptor:
setCanonicalID:
_canonicalID
postPlay
postPlayUpdateData
addEntriesFromDictionary:
initWithPostPlayUpdateData:
setPostPlayUpdateData:
_postPlayUpdateData
initWithFrame:
layout
layoutWithLayout:element:
transferLayoutStylesFromElement:
children
tv_elementType
elementName
titleTextLayout
titleLabel
labelWithElement:textLayout:existingLabel:
descriptionTextLayout
descriptionLabel
disclaimerTextLayout
disclaimerLabel
channelLogoLayout
channelLogoImageLayout
appleTVChannelLogoView
logoViewWithChannelImageElement:layout:existingView:
setAppleTVChannelLogoView:
buttonLayout
buttonWithElement:layout:existingButton:
setDisclaimerLabel:
setButtons:
setLayout:
setTitleLabel:
setDescriptionLabel:
setClipsToBounds:
insertSubview:atIndex:
setBgVisualEffectView:
addLayoutGuide:
removeFromSuperview
addSubview:
setNeedsLayout
_tvOS_layoutSubviewsWithSize:computationOnly:
layoutSubviews
bounds
_setManualLayoutFrame:
width
margin
sizeThatFits:
textLayout
topMarginWithBaselineMargin:
topMarginToLabel:withBaselineMargin:
array
bottomMarginWithBaselineMargin:
vui_sizeThatFits:layout:
valueWithCGRect:
setFrame:
layer
cornerRadius
setCornerRadius:
traitCollection
userInterfaceStyle
darkBlurEffectStyle
blurEffectStyle
effectWithStyle:
setEffect:
CGRectValue
addObjectsFromArray:
upsellViewFromElement:existingView:
preferredFocusEnvironments
buttons
bgVisualEffectView
containerGuide
setContainerGuide:
_layout
_titleLabel
_descriptionLabel
_appleTVChannelLogoView
_disclaimerLabel
_buttons
_bgVisualEffectView
_containerGuide
vui_deepCopy
requests
identifier
response
error
setResponses:
setError:
finishExecutionIfPossible
blockOperationWithBlock:
mediaLibrary
initWithMediaLibrary:request:
setObject:forKey:
addDependency:
privateQueue
addOperation:
initWithMediaLibrary:requests:
executionDidBegin
setRequests:
responses
setPrivateQueue:
setMediaLibrary:
_requests
_responses
_error
_privateQueue
_mediaLibrary
defaultAppLibrary
allAppBundleIdentifiers
appBundleIDs
name
length
currentDevice
userInterfaceIdiom
stringWithFormat:
uppercaseString
initWithInstallable:
setMessage:
actionButton
setTitle:forState:
setUpdateTitle:
setUpdateMessage:
_dismissAppInstallWithCompletion:
presentingViewController
dismissViewControllerAnimated:completion:
setCancelationHandler:
_beginInstallingApp
setActionHandler:
appStoreURL
sharedApplication
openURL:options:completionHandler:
setAppStoreHandler:
setSecondaryLinkTitle:
secondaryLinkHandler
setSecondaryLinkHandler:
setViewControllers:
loadView
view
vui_primaryDynamicBackgroundColor
setBackgroundColor:
beginIgnoringAppLibraryChanges
endIgnoringAppLibraryChanges
_initConfirmation
setPreInstallState
defaultAppInstaller
itemOffer
_updateWithInstallProgress:
_finishInstallationWithCompletion:
installAppForInstallable:offer:progressHandler:completion:
setInstallingState
lockup
installView
setInstallProgress:
finishInstallationWithCompletion:
beginInstallingAppWithProgressHandler:completion:
installable
localizedContentTitle
setLocalizedContentTitle:
contentType
setContentType:
confirmationTitle
setConfirmationTitle:
confirmationBody
setConfirmationBody:
updateBody
setUpdateBody:
updateTitle
confirmationInstallButtonTitle
setConfirmationInstallButtonTitle:
displayAppStoreLink
setDisplayAppStoreLink:
displaySecondaryLink
setDisplaySecondaryLink:
secondaryLinkTitle
_completionBlock
_lastProgress
_progressBlock
_confirmationController
_displayAppStoreLink
_displaySecondaryLink
_installable
_localizedContentTitle
_contentType
_confirmationTitle
_confirmationBody
_updateBody
_updateTitle
_confirmationInstallButtonTitle
_secondaryLinkTitle
_secondaryLinkHandler
defaultManager
deviceMediaLibrary
dataSourceForCategoryType:withLibrary:withOwnerIdentifier:
initWithMediaLibrary:fetchRequest:
memberIdentifier
stringValue
seasonsRequestWithShowIdentifier:withOwnerIdentifier:
initWithNSURLRequest:
setShouldCoalesceEpisodesToSeasons:
episodesRequestWithShowIdentifier:withOwnerIdentifier:
setShouldGroupBySeason:
setOrderEpisodesByEpisodeNumber:
setSeasonIdentifierFilter:
recentPurchasesRequestWithOwnerIdentifier:
setResultLimit:
setShouldCoalesceEpisodesToShows:
show
setWithObjects:
initWithMediaEntityTypes:
setProperties:
sortDescriptorWithKey:ascending:
setSortDescriptors:
addRecentlyAddedSortDescriptorWithLimit:
vui_predicateWithSubpredicates:type:
setPredicate:
showsPurchasesRequestWithOwnerIdentifier:
showsFetchRequest
setGroupingKeyPath:
moviesPurchasesRequestWithOwnerIdentifier:
moviesFetchRequest
addHDRColorCapabilityOr4KResolutionPredicate
homeVideosFetchRequest
movieRentalsFetchRequest
initWithObjects:
genresRequestForVUIFamilySharingGenre:withOwnerIdentifier:
_fetchRequestForGenre:
vui_equalPredicateWithKeyPath:value:
_dataSourceForShelfType:withLibrary:withOwnerIdentifier:
dataSourceForCategoryType:
dataSourceForFetchRequest:withLibrary:
seasonsDataSourceForShowIdentifier:withFamilyMember:
episodesDataSourceForShowIdentifier:withFamilyMember:
seasonsDataSourceForSeasonIdentifier:showIdentifier:withFamilyMember:
episodesDataSourceForSeasonIdentifier:showIdentifier:withFamilyMember:
dataSourceForCategoryType:withFamilyMember:
dataSourceForCategoryType:withLibrary:
dataSourceForGenre:withFamilyMember:
dataSourceForGenre:withLibrary:
dataSourceForShelf:withLibrary:
dataSourceForShelf:withFamilyMember:
scheme
lowercaseString
_processLocalLink:appContext:completion:
_processNonLocalLink:appContext:completion:
hasProperty:
absoluteString
routerDataSourceWithDict:appContext:
documentDataSources
invokeMethod:withArguments:
evaluate:completionBlock:
date
_handleOpenURLRouterDataSource:appContext:clearStack:startDate:
setDeferredOpenURL:
setDeferredOpenURLCompletion:
deferredOpenURL
deferredOpenURLCompletion
processURL:appContext:completion:
_getIDfromURLQueryParameters:idKeyName:
loadingScreen
isVisible
setLoadingDelay:
setTimeout:
showOverKeyWindowWithSpinnerOnly:
nativePageName
localLibraryLink
lastObject
viewControllerWithDocumentDataSource:appContext:
uiConfiguration
action
setUserPlaybackInitiationDate:
setOpenURLCompletionDate:
actionFirst
vui_delegate
appController
navigationController
_processLocalLibraryLink:playbackInitiationDate:openURLCompletionDate:
_insertPageBehindTop:viewControllers:clearStack:
_handleDeeplinkAction:completionHandler:
popToRootViewControllerAnimated:
_pushPageViewControllers:viewControllers:skipLastViewController:
topPresentedViewController
presentViewController:fromViewController:WithConfiguration:completion:
dismissExtrasViewControllerIfPresent
viewControllers
subarrayWithRange:
setViewControllers:animated:
movieRental
season
addAdamIdPredicate:
mediaEntities
enqueueFetchRequests:completionHandler:
componentsWithURL:resolvingAgainstBaseURL:
queryItems
predicateWithFormat:
filteredArrayUsingPredicate:
value
isAccountRequired
userHasActiveAccount
allowsAccountModification
performWithTargetResponder:completionHandler:
requestAuthenticationAlwaysPrompt:withCompletionHandler:
hide
pushViewController:animated:
parseURL:appContext:completion:
processEntityWithContextData:appContext:
saveDeferredURL:completion:
handleDeferredURLWithAppContext:
_fetchLocalMediaWithAdamID:completionHandler:
openedByDeeplink
setOpenedByDeeplink:
completionHandler
setCompletionHandler:
_openedByDeeplink
_completionHandler
_deferredOpenURL
_deferredOpenURLCompletion
isMainThread
_loadAndCacheCertificateDataForValidURL:completion:
_loadFPSURLsFromStoreBagWithCompletion:
eventCollection
eventReportingID
addStartEventWithName:identifier:
setRequestStartDate:
state
certificateURL
keyServerURL
setState:
requestsAwaitingCertFetch
addEndEventWithName:identifier:
setCertificateData:
_startKeyRequestsInBatches:completion:
_failKeyRequests:withError:
_loadCertificateDataWithCompletion:
initWithDomain:code:userInfo:
savedStreamingKeyRequestToUseForStopping
_sendKeyRequestsToServer:isStopRequest:isSecureInvalidationRequest:completion:
setSavedStreamingKeyRequestToUseForStopping:
keyIdentifierPenaltyBox
numberWithBool:
addSingleShotEventWithName:value:
addStartEventWithName:
setCertificateURL:
setKeyServerURL:
addEndEventWithName:
contextWithBagType:
URLBagForContext:
URLWithString:
loadWithCompletionBlock:
initWithURL:
setHTTPMethod:
setTimeoutInterval:
initWithURLRequest:
setITunesStoreRequest:
setOutputBlock:
_startKeyRequests:completion:
keyIdentifier
isCancelled
keyRequestData
_generateKeyRequestDataForKeyRequests:completion:
dataUsingEncoding:
certificateData
setKeyRequestData:
makeKeyRequestDataForCertificateData:assetIDData:completion:
type
setServerRequestStartDate:
_bodyJSONDataForRequests:isStopRequest:
setHTTPBody:
setValue:forHTTPHeaderField:
secureInvalidationDSID
initWithComponentType:key:
initWithPolicyType:signatureComponents:
setSAPSignaturePolicy:
URLResponse
_handleResponseForKeyRequests:responseData:URLResponse:error:
allHeaderFields
tvp_appleTimingAppHeaderValue
numberWithInteger:
statusCode
JSONObjectWithData:options:error:
_handleResponseDicts:forKeyRequests:
requestID
indexOfObjectPassingTest:
_handleResponseDict:forKeyRequest:
initWithBase64EncodedString:options:
vui_boolForKey:defaultValue:
setContentID:
setIsLowValueKey:
setAllowManualRenewal:
setAdditionalRequestParamsFromResponse:
serverRequestStartDate
doubleValue
dateByAddingTimeInterval:
setRenewalDate:
setRenewalInterval:
initWithTimeIntervalSince1970:
setExpirationDate:
keyExpirationDate
isEqualToDate:
setKeyExpirationDate:
rentalPlaybackStartDate
setRentalPlaybackStartDate:
setPlaybackDuration:
delegate
storeFPSKeyLoader:didReceiveUpdatedRentalExpirationDate:playbackStartDate:
setRequestEndDate:
offlineKeyDataFromServerKeyData:error:
setKeyResponseData:
storeFPSKeyLoader:didLoadOfflineKeyData:forKeyRequest:
storeFPSKeyLoader:willSucceedForKeyRequest:
finish
_errorForStoreResponseStatus:deviceLimit:
userInfo
domain
code
usesKeyIdentifierPenaltyBox
storeFPSKeyLoader:willFailWithError:forKeyRequest:
_jsonDictionaryForRequest:isStopRequest:
dataWithJSONObject:options:error:
base64EncodedStringWithOptions:
numberWithUnsignedInteger:
rentalID
isRenewal
didSkipRentalCheckout
defaultLocationManager
authorizationStatus
lastKnownLocation
additionalRequestParams
initialize
preFetchFPSCertificate
initWithCertificateURL:keyServerURL:
loadFairPlayStreamingKeyRequests:completion:
sendStreamingStopRequestIfNecessary
removeAllEntriesFromKeyIdentifierPenaltyBox
secureInvalidationNonceURL
setSecureInvalidationNonceURL:
setSecureInvalidationDSID:
setDelegate:
setEventCollection:
setRentalID:
setDidSkipRentalCheckout:
setUsesKeyIdentifierPenaltyBox:
setRequestsAwaitingCertFetch:
contentKeySession
setContentKeySession:
setKeyIdentifierPenaltyBox:
_didSkipRentalCheckout
_usesKeyIdentifierPenaltyBox
_secureInvalidationNonceURL
_secureInvalidationDSID
_delegate
_eventCollection
_rentalID
_certificateURL
_keyServerURL
_state
_certificateData
_requestsAwaitingCertFetch
_savedStreamingKeyRequestToUseForStopping
_keyExpirationDate
_rentalPlaybackStartDate
_contentKeySession
_keyIdentifierPenaltyBox
initWithMediaLibrary:
cancelFetch
initWithMediaLibrary:fetchReason:requests:
setCurrentFetchResponses:
fetchReason
_handleManualFetchControllerOperationDidComplete:
_handleContentsChangeFetchControllerOperationDidComplete:
result
_updateResponseWithResult:replaceContentsOnNilChanges:
_notifyFetchRequests:didCompleteWithResult:
_notifyFetchRequests:didFailWithError:
fetchResponses
fetchResponseChanges
_updateWithResponse:changes:replaceContentsOnNilChanges:
enumerateObjectsUsingBlock:
manager
completionDispatchQueue
controller:fetchRequests:didCompleteWithResult:
_notifyDelegateWithBlock:
controller:fetchRequests:didFailWithError:
initWithMediaLibrary:fetchRequests:
_fetchOperationForFetchReason:
_didCompleteFetchOperation:
_response
initWithLayout:interfaceStyle:
_selectButtonAction:eventType:
setSelectActionHandler:
setPlayActionHandler:
updateType
updateWithElement:
attributes
setItemID:
setItemType:
setChannelID:
tv_dispatchEvent:canBubble:isCancelable:extraInfo:targetResponder:completionBlock:
sendRequestForItemID:itemType:channelID:
dismissPresentedViewController
itemID
itemType
channelID
_itemID
_itemType
_channelID
_init
sharedConnection
addObserver:
removeObserver:
dealloc
contentRating
adamID
extrasURLString
previewURLString
actionParams
loadingImage
isLightTheme
containsString:
mainScreen
initUrlWithProperties:imageSize:focusSizeIncrease:cropCode:urlFormat:
imageURLWithDescription:
mutePictureInPicture:reason:
_loadExtrasURL:adamID:actionParams:previewURL:loadingImage:lightTheme:presentImmediately:completion:
setUnrestrictedActionParams:
bundleWithIdentifier:
_showAlertWithTitle:message:
validateRestrictionForContentType:withRating:allowInteraction:withCompletion:
_extrasNavigationController
_stopExtrasApp
stop
context
launchOptions
extrasLaunchContextForURL:adamID:actionParams:previewURL:loadingImage:lightTheme:
initWithContext:window:delegate:
currentNavigationController
setTransitioningDelegate:
_presentExtrasApplicationController:usingAppNavigationController:withPreviousAppNavigationController:presentImmediately:completion:
presentWithViewController:completion:
alertControllerWithTitle:message:preferredStyle:
actionWithTitle:style:handler:
addAction:
presentViewController:animated:completion:
presentedViewController
isBeingDismissed
currentAppContext
initWithAppContext:
setObject:forKeyedSubscript:
appController:evaluateAppJavaScriptInContext:
appController:didFinishLaunchingWithOptions:
appController:didFailWithError:
appController:didStopWithOptions:
playerForAppController:
animationControllerForPresentedController:presentingController:sourceController:
animationControllerForDismissedController:
interactionControllerForPresentation:
interactionControllerForDismissal:
presentationControllerForPresentedViewController:presentingViewController:sourceViewController:
profileConnectionDidReceiveRestrictionChangedNotification:userInfo:
profileConnectionDidReceivePasscodeChangedNotification:userInfo:
profileConnectionDidReceivePasscodePolicyChangedNotification:userInfo:
profileConnectionDidReceiveProfileListChangedNotification:userInfo:
profileConnectionDidReceiveEffectiveSettingsChangedNotification:userInfo:
profileConnectionDidReceiveDefaultsChangedNotification:userInfo:
profileConnectionDidReceiveAppWhitelistChangedNotification:userInfo:
loadExtrasInfo:
isExtrasVisible
unrestrictedActionParams
applicationController
setApplicationController:
presentingAnimator
setPresentingAnimator:
dismissingAnimator
setDismissingAnimator:
presenting
setPresenting:
reverseDismissal
setReverseDismissal:
_presenting
_reverseDismissal
_unrestrictedActionParams
_applicationController
_presentingAnimator
_dismissingAnimator
shouldShowWelcomeScreen
_navigateToUpNextOrSuspend:withCompletion:
selectedViewController
templateViewController
topViewController
setTransitionAnimationEnabled:
_scrollToTopAnimated:
set_shouldFocusViewControllerAfterTransition:
focusUpNextAnimated:
tabBarController:didSelectViewController:
isUpNextFocused
launchKioskApp
tvIdentifier
setRestoresFocusAfterTransition:
selectedIndex
showcaseFactor
collectionView
scrollsToTop
handleTVAction:withCompletion:
_deviceMediaLibrary
_homeShareMediaLibraryManager
serialProcessingDispatchQueue
homeShareManager
homeShareMediaLibraries
beginDiscoveringMediaLibraries
endDiscoveringMediaLibraries
_mediaLibraryForIdentifier:
fileURLWithPath:
initWithURL:manager:
initWithManager:
willChangeValueForKey:
didChangeValueForKey:
_postHomeShareMediaLibrariesDidChangeNotificationWithMediaLibraries:andChangeSet:
_enqueueStrongSelfCompletionQueueBlock:
_enqueueCompletionQueueBlock:
boolValue
defaultCenter
postNotificationName:object:userInfo:
homeShareManager:mediaLibrariesDidUpdate:withChangeSet:
setCompletionDispatchQueue:
beginDiscoveringHomeShareMediaLibraries
endDiscoveringHomeShareMediaLibraries
mediaLibraryForIdentifier:
activeMediaLibrary
setActiveMediaLibrary:
setDeviceMediaLibrary:
sidebandMediaLibrary
aggregateMediaLibrary
setSerialProcessingDispatchQueue:
setHomeShareManager:
_activeMediaLibrary
_completionDispatchQueue
_sidebandMediaLibrary
_aggregateMediaLibrary
_serialProcessingDispatchQueue
_homeShareManager
dictionary
cancel
removeObjectForKey:
initWithAction:entityId:caller:
ongoingEntityIDOperationDictionary
post:title:body:options:
setCompletionBlock:
setValue:forKey:
wlkDefaultQueue
sendRequestForEntityID:teamName:action:
setOngoingEntityIDOperationDictionary:
_ongoingEntityIDOperationDictionary
layoutAttributesForElementsInRect:
frame
representedElementCategory
shouldInvalidateLayoutForBoundsChange:
settingsURLForMediaLibraryApplicationController:
isCellularDataPlaybackEnabledForMediaLibraryApplicationController:
mediaPlayerMediaItem
mediaLibraryApplicationController:shouldWarnAboutPlaybackQualityForRentalMediaItem:
clearCellularPlaybackQualityOverridesForMediaLibraryApplicationController:
mediaLibraryApplicationController:overrideCellularPlaybackQuality:forMediaItem:
mediaLibraryApplicationController:assetTypeForRentalMediaItem:
mediaLibraryApplicationController:removeRentalMediaItem:withCompletion:
defaultController
settingsURL
isCellularDataForPlaybackEnabled
shouldWarnAboutPlaybackQualityForRentalMediaItem:
clearCellularPlaybackQualityOverrides
overrideCellularPlaybackQuality:forMediaItem:
assetTypeForRentalMediaItem:
removeRentalMediaItem:withCompletion:
appendFormat:
initWithIdentifier:expirationHandler:
taskIdentifier
_endTask
beginBackgroundTaskWithName:expirationHandler:
setTaskIdentifier:
endBackgroundTask:
_taskIdentifier
initWithStyle:reuseIdentifier:
_preloadMediaEntityMetadata
currentFetchResponses
latestFetchResponses
_mediaEntitiesChangeSetWithLatestFetchResponse:currentFetchResponse:
initWithMediaEntitiesChangeSet:
_groupingChangeSetWithLatestFetchResponse:currentFetchResponse:
setGroupingChangeSet:
setFetchResponseChanges:
_preloadMetadataForFetchResponse:
populateMetadata
_changeSetFromCurrentMediaEntities:toLatestMediaEntities:
grouping
_groupingChangeSetWithCurrentGrouping:latestGrouping:
changeSetFromObjects:toObjects:identifierBlock:updateChangeSetBlock:
isFetchedPropertiesEqualToFetchedMediaEntity:
changeSetFromObjects:toObjects:identifierBlock:isEqualBlock:
initWithLatestFetchResponses:currentFetchResponses:
setLatestFetchResponses:
_fetchResponseChanges
_latestFetchResponses
_currentFetchResponses
setWidth:
setHeight:
height
setImageSize:
imageCornerRadiiWithStyle:
setBorderRadii:
setScaleMode:
placeholderImageResourceName:
setPlaceholderArtworkName:
tvs_stringForKey:
tvs_boolForKey:defaultValue:
methodForSelector:
initWithObject:imageLoader:groupType:
setImageProxy:
_placeholderImageWithLayout:
setPlaceholderImage:
imageStackViewWithDescription:layout:existingView:
setTextHighlightStyle:
setTextStyle:
setFontWeight:
whiteColor
setColor:
setAlignment:
title
labelWithString:textLayout:existingLabel:
tv_setLayout:
isRental
rentalExpirationDate
labelWithExpirationDate:textLayout:existingLabel:locStringPrefix:
setConfiguresForCollectionViewCell:
setComponents:mainImageComponent:
setStackingPosterView:
contentView
_layoutWithSize:metricsOnly:
placeholderArtworkName
sharedInterfaceFactory
imageForResource:
stackingPosterView
cellMetrics
configureLockupCell:withMedia:width:artworkDictionary:forMetrics:
rentalExpirationLabelNeedsRelayout:
selectingView
placeholderImage
placeholderImageString
setPlaceholderImageString:
_stackingPosterView
_placeholderImage
_placeholderImageString
appContext
initWithActionRef:contextData:appContext:
initWithContextData:appContext:
setUpNextPlayback:
initWithContextData:
initWithContextData:viewElement:
initWithContextData:isContinueWatching:
actionWithDictionary:viewElement:appContext:
setUnitsStyle:
setAllowedUnits:
setNumberStyle:
setMultiplier:
mediaDescription
formattedReleaseDate
releasedDate
_releaseDateDescriptionFromDate:
duration
_durationDescriptionFromDuration:
genre
hasClosedCaptions
imageWithName:flatten:
hasADLocales
hasSDHLocales
tomatoPercentage
_isValidNumber:
stringFromNumber:
commonSenseRecommendedAge
_commonSenseString:
ratingName
ratingAuxiliaryName
ratingSystem
ratingValue
badgeForContentRating:drawUnknownRatingBadge:
tomatoFreshness
videoDynamicRange
videoResolutionClass
hasDolbyAtmos
rentalExpiration
vui_attrStringForKey:
addSeperatorKey:
mediaItemMetadataForProperty:
valueTransformerForName:
transformedValue:
releaseDate
localizedStringFromDate:dateStyle:timeStyle:
_mediaBagdesWithVUIMediaEntity:
homeVideo
releaseYear
genreTitle
notANumber
isEqualToNumber:
setLocalizedDateFormatFromTemplate:
stringFromDate:
stringFromTimeInterval:
stringByReplacingOccurrencesOfString:withString:
HLSResolution
resolution
HLSColorCapability
colorCapability
HLSAudioCapability
audioCapability
extrasURL
imageForResourceName:
unsignedIntValue
initWithContentMetadata:additionalMetadata:
initWithMediaItem:
initWithVUIMediaItem:
initWithVUIMediaEntity:
tagsViewDictionary
_tagsViewDictionary
_dateComponentFormatter
_tomatoPercentFormatter
_vui_TVLoadingViewControllerClass
subviews
alpha
vui_ppt_isLoading
vui_presentViewController:animated:completion:
vui_padding
headerView
collectionViewLayout
computedContentHeight
setHeaderView:
setCollectionView:
_headerView
_collectionView
setTextLayout:
setImageLayout:
setBadgeKind:
textBadgeTypeFromString:
layoutWithViewElement:withTextBadgeType:
_spotlightBadgeLayoutWithViewElement:
_textBadgeLayoutWithViewElement:withBadgeType:
style
tv_valueForStyle:
gridStyleForCSSStyle:
_badgeSizeForElement:
setTintColor:
setPadding:
setMinHeight:
_updateTextColorWithViewElement:defaultColor:
systemRedColor
_updateBgColorWithViewElement:defaultColor:
color
_glyphImageLayoutWithTintColor:viewElement:
systemPinkColor
colorWithRed:green:blue:alpha:
colorWithWhite:alpha:
clearColor
setGradientBgColors:
setFontFamily:
setFontSize:
setMaximumContentSizeCategory:
setBlendMode:
setTextTransform:
tv_backgroundColor
colorType
gradientColors
tv_color
layoutWithViewElement:
badgeKind
gradientBgColors
imageLayout
_badgeKind
_cornerRadius
_gradientBgColors
_textLayout
_imageLayout
objectIdentifier
mediaEntityType
initWithEntityIdentifier:mediaEntityType:
setObjectIdentifier:
setMediaEntityType:
_objectIdentifier
_mediaEntityType
locStringForKey:
locStringForKeyWithCounts::
setLocDictionary:
setOverlayLayout:
badgeElementHasContent:
_updateTextBadge:
vui_hasValidImage
appImageLayout
logoImageLayout
decoratorSize
logoView
imageViewWithElement:layout:existingView:
dataDictionary
initWithDictionary:
_updateScoreView:
_updateBackgroundMaterialImagesWithBackgroundImageSize:performSynchronously:
setLogoSize:
setLogoView:
textBadge
setHidden:
_setupHosting
setQualityOfService:
setMaxConcurrentOperationCount:
isDescendantOfView:
setAlpha:
reset
isHidden
tv_sizeThatFits:
padding
_updateBadgePosition
_toggleLayoutSubviewsSelected:animated:withAnimationCoordinator:
willMoveToWindow:
_registerOverlayView
_teardownHosting
_unregisterOverlayView
setSelected:animated:withAnimationCoordinator:
invalidateData
imageProxy
_cancelPendingOperation
size
scores
canonicalId
jsContextDictionary
scoreboardLayout
borderRadii
radiusFromCornerRadii:
_setCornerRadius:
showScoreboard
setScoreboardLayout:
layoutIfNeeded
_scorecardViewBackgroundImageNeedsUpdating
_redrawScorecardViewWithDuration:
setNeedsDisplay
viewElementNeedsUpdate:
textBadgeLayout
setElement:withBadgeLayout:
_textBadgeBackgroundImageNeedsUpdating
_redrawTextBadgeWithDuration:
initWithSourceBackgroundImage:
setResizedBackgroundImageSize:
initWithIdentifier:rect:
setOverlayMaterialRequests:
start
_updateBackgroundImagesWithCompletedOperation:
mainQueue
_sharedDrawQueue
addObserver:forKeyPath:options:context:
resizedSourceBackgroundImage
overlayMaterialImageByIdentifier
_scorecardViewRequiresBackgroundImage
_textBadgeRequiresBackgroundImage
setBackgroundImage:
_redrawView:withDuration:
backgroundImage
_viewBackgroundImageNeedsUpdatingWithFrame:currentBackgroundImage:
forceDisplayIfNeeded
transitionWithView:duration:options:animations:completion:
registerDelegate:canonicalId:
unregisterDelegate:canonicalId:
superview
removeObserver:forKeyPath:
overlayLayout
logoShowOnlyOnFocus
addCoordinatedAnimations:completion:
setBackgroundImageForMaterialRendering:
tv_isDisplayed
observeValueForKeyPath:ofObject:change:context:
sportsOverlayViewFromElement:overlayLayout:existingView:
styleForScorecardView:
numberOfRowsInScorecardView:
numberOfScoreValuesForScorecardView:inRow:
scoreValue:inRow:atIndex:
maximumWidthForScorecardView:
backgroundImageForScorecardViewMaterial:
backgroundBlendModeForScoreValueInRow:atIndex:
sampleWithImage:
backgroundImageSizeDidChange:
backgroundImageForMaterialRendering
updateScoreboard:
getJSContextDictionary
scoreboardViewModel
setScoreboardViewModel:
scorecardView
setScorecardView:
textBadgeHasMaterial
setTextBadgeHasMaterial:
setTextBadge:
logoElement
setLogoElement:
logoSize
pendingOperation
setPendingOperation:
scorecardViewBackgroundImage
setScorecardViewBackgroundImage:
backgroundImageHasChanged
setBackgroundImageHasChanged:
containingCell
setContainingCell:
isHostSetup
setIsHostSetup:
isFocused
setIsFocused:
_textBadgeHasMaterial
_backgroundImageHasChanged
_isHostSetup
_isFocused
_backgroundImageForMaterialRendering
_overlayLayout
_scoreboardViewModel
_scorecardView
_textBadge
_logoView
_logoElement
_pendingOperation
_scorecardViewBackgroundImage
_containingCell
_logoSize
recordClick:
sendRequestForCanonicalID:action:
offerView
setIsEntitled:
tv_width
logoLayout
setMaxWidth:
setMaxHeight:
appIconLayout
aspectRatio
setMargin:
appIconView
setAppIconLayout:
imageView
setEnablesMarqueeWhenAncestorFocused:
subtitleTextLayout
subtitleLabel
textLabel
belowCardTextLayout
belowCardTextLabel
valueForKey:
vui_videosUIImageNamed:
secondChinImageView
imageWithImage:existingImageView:
colorWithAlphaComponent:
badgeLayout
badgeView
tagsLayout
tagsView
tagsViewWithMetadata:layout:element:existingView:
versionsButtonLayout
versionsButton
textContentView
text
setText:
channelImageBackgroundView
setChannelNameLabel:
setAppIconView:
setImageView:
setSubtitleLabel:
setTextLabel:
setBadgeView:
setTagsView:
setVersionsButton:
setChannelImageBackgroundView:
tv_semanticContentAttribute
setSemanticContentAttribute:
setMasksToBounds:
borderWidth
setBorderWidth:
borderColor
CGColor
setBorderColor:
tv_height
offerCardHeightForCardWidth:subtitleLabel:padding:
setCardSize:
setOfferView:
setBelowCardTextLabel:
setSecondChinImageView:
_updateBackgroundAndHighlightColor
setAutoresizingMask:
setAllowsFocus:
floatingView
bringSubviewToFront:
setContentMode:
viewWithExistingView:bounds:focused:subview:
setFloatingView:
setSelectingView:
prepareForReuse
prepareForCellReuse
focusedSizeIncrease
backgroundColor
highlightColor
setBgColor:highlightBgColor:cornerRadius:
nextFocusedView
didUpdateFocusInContext:withAnimationCoordinator:
configureViewWithElement:existingCell:
cardSize
_offerView
_belowCardTextLabel
_secondChinImageView
_cardSize
initWithIdentifierKeyPath:
setGroupsSortComparator:
setPerformDefaultSort:
setSortIndexKeyPath:
_sortIndexesForObjects:titleForObjectBlock:
compare:
letterCharacterSet
characterAtIndex:
stringWithCharacters:length:
setCount:
characterIsMember:
initWithTitle:startIndex:count:
groupingForMediaEntities:groupingKeyPath:groupingSortComparator:performDefaultSort:sortIndexPropertyKey:
sortIndexesForGrouping:
sortIndexesForMediaEntities:sortIndexPropertyKey:
mediaItemEntityTypesSortComparator
setScrollDirection:
_collectionViewClass
alloc
initWithFrame:collectionViewLayout:
setTranslatesAutoresizingMaskIntoConstraints:
setDataSource:
registerClass:forCellWithReuseIdentifier:
setModalPresentationStyle:
preferredFontForTextStyle:
nativeBounds
scale
setItemSize:
setMinimumInteritemSpacing:
setMinimumLineSpacing:
setContentInset:
setFont:
setNumberOfLines:
setTextAlignment:
setMinimumScaleFactor:
setAdjustsFontSizeToFitWidth:
setTextColor:
firstBaselineAnchor
topAnchor
constraintEqualToAnchor:constant:
setActive:
centerXAnchor
constraintEqualToAnchor:
navigationItem
bottomAnchor
leadingAnchor
trailingAnchor
reloadData
viewDidAppear:
flashScrollIndicators
dequeueReusableCellWithReuseIdentifier:forIndexPath:
setImage:
collectionView:numberOfItemsInSection:
collectionView:cellForItemAtIndexPath:
numberOfSectionsInCollectionView:
collectionView:viewForSupplementaryElementOfKind:atIndexPath:
collectionView:canMoveItemAtIndexPath:
collectionView:moveItemAtIndexPath:toIndexPath:
indexTitlesForCollectionView:
collectionView:indexPathForIndexTitle:atIndex:
scrollViewDidScroll:
scrollViewDidZoom:
scrollViewWillBeginDragging:
scrollViewWillEndDragging:withVelocity:targetContentOffset:
scrollViewDidEndDragging:willDecelerate:
scrollViewWillBeginDecelerating:
scrollViewDidEndDecelerating:
scrollViewDidEndScrollingAnimation:
viewForZoomingInScrollView:
scrollViewWillBeginZooming:withView:
scrollViewDidEndZooming:withView:atScale:
scrollViewShouldScrollToTop:
scrollViewDidScrollToTop:
scrollViewDidChangeAdjustedContentInset:
collectionView:shouldHighlightItemAtIndexPath:
collectionView:didHighlightItemAtIndexPath:
collectionView:didUnhighlightItemAtIndexPath:
collectionView:shouldSelectItemAtIndexPath:
collectionView:shouldDeselectItemAtIndexPath:
collectionView:didSelectItemAtIndexPath:
collectionView:didDeselectItemAtIndexPath:
collectionView:willDisplayCell:forItemAtIndexPath:
collectionView:willDisplaySupplementaryView:forElementKind:atIndexPath:
collectionView:didEndDisplayingCell:forItemAtIndexPath:
collectionView:didEndDisplayingSupplementaryView:forElementOfKind:atIndexPath:
collectionView:shouldShowMenuForItemAtIndexPath:
collectionView:canPerformAction:forItemAtIndexPath:withSender:
collectionView:performAction:forItemAtIndexPath:withSender:
collectionView:transitionLayoutForOldLayout:newLayout:
collectionView:canFocusItemAtIndexPath:
collectionView:shouldUpdateFocusInContext:
collectionView:didUpdateFocusInContext:withAnimationCoordinator:
indexPathForPreferredFocusedViewInCollectionView:
collectionView:targetIndexPathForMoveFromItemAtIndexPath:toProposedIndexPath:
collectionView:targetContentOffsetForProposedContentOffset:
collectionView:shouldSpringLoadItemAtIndexPath:withContext:
collectionView:shouldBeginMultipleSelectionInteractionAtIndexPath:
collectionView:didBeginMultipleSelectionInteractionAtIndexPath:
collectionViewDidEndMultipleSelectionInteraction:
collectionView:contextMenuConfigurationForItemAtIndexPath:point:
collectionView:previewForHighlightingContextMenuWithConfiguration:
collectionView:previewForDismissingContextMenuWithConfiguration:
collectionView:willPerformPreviewActionForMenuWithConfiguration:animator:
setApps:
_collectionView:canFocusItemAtIndexPath:
apps
_apps
initWithType:
verticalSpacing
_verticalSpacing
_buttonLayout
setColorWithOpacityType:
setAlwaysFocusable:
titleLayout
descriptionLayout
badgeViewLayout
_titleLayout
_descriptionLayout
_badgeViewLayout
setAspectRatio:
radiiFromRadius:
setDarkTintColor:
metaDataViewLayout
buttonsLayout
_metaDataViewLayout
_buttonsLayout
initWithHost:
initWithNibName:bundle:
shelfViewController
_viewControllerFromElement:existingController:
setShelfViewController:
host
initWithFrame:addBlurBackground:
setView:
setShelfView:
featuresManagerForAppDocument:
addObserver:forEvent:
removeObserver:forEvent:
selectedMediaInfo
pushContext:forFeature:
popContext:forFeature:
willMoveToParentViewController:
setSpeedBumpEdges:
addChildViewController:
setRemembersLastFocusedIndexPath:
isViewLoaded
removeFromParentViewController
didMoveToParentViewController:
observableEventController
dispatchEvent:sender:withUserInfo:
backgroundVisualEffectView
collectionElement
sections
numberOfItems
elementForItemAtIndex:
mediaInfoForEvent:playbackContext:includingVideo:
setAppContext:
setIntent:
setAutomaticPlaybackStart:
setPlaybackContext:
tv_impressionableElementsForDocument:
item
_selectedMediaInfoForEvent:forElementAtIndex:
setSelectedMediaInfo:
_focusedMediaInfoForElementAtIndex:
shelfViewController:didSettleOnItemAtIndexPath:
shelfViewController:didSelectItemAtIndexPath:
shelfViewController:didPlayItemAtIndexPath:
shelfViewController:updateRelatedView:
impressionableElementsContainedInDocument:
initWithCoder:
visualEffectView
setObservableEventController:
_host
_shelfViewController
_selectedMediaInfo
_observableEventController
initWithEffect:
rowMetricsForExpectedWidth:firstItemRowIndex:
showcaseRowMetricsForExpectedWidth:
shouldBindRowsTogether
shelfView
traitCollectionDidChange:
_updateAppearance
setBackgroundVisualEffectView:
_shelfViewFlags
_shelfView
_backgroundVisualEffectView
initWithMediaEntityClassName:
setWithObject:
setSourcePropertyNames:
setSortAsName:
requiredMPPropertyNames
setRetrievesSourcePropertiesAtFetch:
allValues
setPropertyDescriptors:
representativeItem
showIdentifierWithMediaItem:
initWithMediaLibrary:mediaItemCollection:identifier:requestedProperties:kind:
mediaItemCollection
items
seasonIdentifierWithMediaItem:
_propertyValueWithBlock:forKey:
initWithMediaLibrary:mediaItemCollection:requestedProperties:
seasonCount
_seasonCount
errorView
debugTextLayout
debugTextLabel
debugTextLayout2
setDebugTextLabel:
setDebugTextLabel2:
updateWithTemplateElement:
updateWithViewElement:
resumeMenuBehavior
vui_disableResumeMenu
indexesOfObjectsPassingTest:
objectsAtIndexes:
assets
vui_rentalAdamIDString
_storeMediaItemsForVideoElement:
_auxMediaItemForVideoElement:
initWithMediaItems:index:isCollection:
vui_hlsPlaylistURL
vui_contentRatingRank
vui_resumeTime
vui_fpsCertificateURL
vui_fpsKeyServerURL
vui_dataType
initWithActionParams:mediaType:hlsPlaylistURL:contentRatingRank:contentRatingDomain:rentalID:
iTunesVPAF
setMediaItemMetadata:forProperty:
_shouldDisableResumeMenuForAsset:
setDisableResumeMenu:
setFpsCertificateURL:
setFpsKeyServerURL:
setBookmarkOverrideTime:
timelines
setBookmarkDisabled:
_clipMediaItemsMediaItem:fromTimelineElement:
_populateMediaItem:withMetadatafromVideoElement:
vui_scrubVideoURL
bookmarkID
setBookmarkID:
externalID
mainBundle
bundleIdentifier
events
offset
initWithStartTime:duration:
initWithMediaItem:clipTimeRange:
_populateMediaItem:withMetadatafromTimelineEventElement:
relatedContent
_populateMediaItem:withMetadatafromRelatedContentElement:
string
playlistForIKMediaElements:
setResumeMenuBehavior:
_resumeMenuBehavior
caseInsensitiveCompare:
numberWithDouble:
initWithString:
vui_launchPlaybackURL
systemDarkRedColor
_titleTextLayout
_descriptionTextLayout
_debugTextLayout
_debugTextLayout2
badgeElement
setBadgeElement:
badgeSize
setBadgeSize:
badgeFrame
setBadgeFrame:
badgeType
setBadgeType:
_badgeView
_badgeElement
_badgeType
_badgeSize
_badgeFrame
badgeViewWrappers
setTitleElement:
setTextBadgeElement:
floatValue
progressView
_viewFromElement:existingView:
progressBarLayout
gradientStartColor
setGradientStartColor:
gradientEndColor
setGradientEndColor:
shouldProgressBarUseRoundCorner
setShouldProgressBarUseRoundCorner:
fillColor
setCompleteTintColor:
setStyle:
setProgressView:
gradientView
setUserInteractionEnabled:
overlayType
imageCornerRadiusWithStyle:
setGradientView:
setBadgeViewWrappers:
bookmark
playedState
setProgress:
removeFromSuperlayer
addSublayer:
effectiveUserInterfaceLayoutDirection
sendSubviewToBack:
vui_currentSizeClass
tv_margin
removeAllAnimations
layoutFactory
activeLayout
radiiIsZero:
overlayViewFromElement:overlayLayout:existingView:
overlayViewFromMediaItem:overlayLayout:existingView:
setGradientLayer:
gradientLayer
titleElement
textBadgeElement
_gradientLayer
_titleElement
_textBadgeElement
_badgeViewWrappers
_progressView
_gradientView
_registerObservers
_removeObservers
initWithFormat:arguments:
_playerStateWillChange:
addObserver:selector:name:object:
_playerCurrentMediaItemWillChange:
sessions
player
removeObjectsInArray:
_logWithFormat:
removeObject:
_handlePlaybackChangeForPlayer:fromState:toState:reason:
_sessionForPlayer:
stopped
_endSession:
_isTransitionValidForPlayer:fromState:toState:
playing
enforceSinglePlaybackSession
reportingEnabled
_reportForSession:state:reason:
_endSessions:
_createSessionForPlayer:
_beginSession:
raise
setSessions:
_enforceSinglePlaybackSession
_sessions
_mediaLibraryHasEpisodes
_mediaLibraryHasHasHomeVideos
_mediaLibraryHasMovies
_mediaLibraryHasMovieRentals
sortUsingComparator:
_mediaLibraryHasLocalMediaItems
setMediaItemEntityTypes:
setLocalMediaItemsAvailable:
setResponse:
_canUseCheapEntityCheckWithMediaEntityType:
hasMovies
vui_moviesQueryWithMediaLibrary:
_mediaLibraryHasMediaItemsWithQuery:
hasMovieRentals
vui_movieRentalsQueryWithMediaLibrary:
hasTVShows
vui_episodesQueryWithMediaLibrary:
hasHomeVideos
vui_homeVideosQueryWithMediaLibrary:
vui_isDeviceMediaLibrary
vui_isLocalPredicate:comparison:
initWithFilterPredicates:
mediaCategoryType
allowsShowingUndownloadedMovies
allowsShowingUndownloadedTVShows
setEntityLimit:
initWithMPMediaLibrary:
initWithIdentifier:
sortIndexes
componentsJoinedByString:
setMediaEntities:
setSortIndexes:
_identifier
_mediaEntities
_sortIndexes
prefetchedDataDict
jsonData
setPrefetchedDataDict:
_prefetchedDataDict
updateEvent
canAutoPlay
showID
productID
excludedCanonicals
setHost:
setProductID:
setShowID:
setExcludedCanonicals:
setUpdateEvent:
setCanAutoPlay:
_updateEvent
_canAutoPlay
_productID
_showID
_excludedCanonicals
setContentCompressionResistancePriority:forAxis:
buttonWithType:
_buttonWithTitleForTV:textStyle:
setLineBreakMode:
_setVisualEffectViewEnabled:backgroundColor:
setSpacing:
setAxis:
button
metadataStackView
arrangedSubviews
addArrangedSubview:
setCustomSpacing:afterView:
vui_primaryTextColor
vui_secondaryTextColor
iconSize
iconCornerRadiusForSize:
vui_iconImageOfSize:radius:stroke:
setIcon:
setName:
setAgeRating:
setIAP:
setHasIAP:
setSubtitle:
_layoutForTvos
_layoutForIos
previouslyFocusedItem
setMarqueeRunning:
setMarqueeEnabled:
nextFocusedItem
initWithArrangedSubviews:
setDistribution:
widthAnchor
constraintEqualToConstant:
heightAnchor
setContentHuggingPriority:forAxis:
centerYAnchor
safeAreaLayoutGuide
constraintGreaterThanOrEqualToAnchor:
constraintLessThanOrEqualToAnchor:
readableContentGuide
constraintGreaterThanOrEqualToAnchor:constant:
constraintLessThanOrEqualToAnchor:constant:
leftAnchor
rightAnchor
_setFont:
setTitleColor:forState:
blackColor
setBackgroundImage:forStates:
setAppIcon:
setAppName:
setAppSubtitle:
lockupView
setLockupView:
message
setActionButton:
cancelButton
setCancelButton:
appStoreButton
setAppStoreButton:
secondaryLinkButton
setSecondaryLinkButton:
_didLayout
_lockupView
_imageSubtitleView
_buyLockup
_titleView
_messageView
_buttonHeightConstraint
_title
_message
_actionButton
_cancelButton
_appStoreButton
_secondaryLinkButton
initWithSizeClass:
rowTextLayout
setNumberOfLinesAXSmall:
textAlignmentWithSemanticContentAttribute:
losingRowTextLayout
footerTextLayout
setNumberOfLinesAXLarge:
layoutWithLayout:element:sizeClass:
scoreTextLayout
losingScoreTextLayout
availabilityTextLayout
availabilityImageLayout
_rowTextLayout
_scoreTextLayout
_losingRowTextLayout
_losingScoreTextLayout
_footerTextLayout
_availabilityTextLayout
_availabilityImageLayout
_initializeWithInfo:restoringAVPlayerController:
_removeViewModelObservers
transferMediaControllerIfNeeded
cancelPreviousPerformRequestsWithTarget:
viewDidLoad
_addGesutreRecognizersIfNeeded
viewWillAppear:
setDisappearanceReason:
_hostMediaControllerIfPossible
nowPlayingControllerViewWillAppear:
viewWillDisappear:
mediaPlaybackManager
onDisappear
disappearanceReason
nowPlayingControllerViewWillDisappear:withDisappearanceReason:
onAppear
nowPlayingControllerViewDidAppear:
_notifyDelegateOfSafeAreaChange
viewDidDisappear:
nowPlayingControllerViewDidDisappear:
viewDidLayoutSubviews
skipIntroButton
_skipIntroButtonFrame
ratingView
nowPlayingHudView
_isPostPlayVisible
postPlayViewController
_isSkipIntroVisible
mediaController
viewModel
metadata
updateWithMetadata:
showCanonicalID
parentViewController
_removeGestureRecognizersIfNeeded
setMediaPlaybackManager:
setShouldZoomWhenTransitioningToBackground:
setStopPlayerWhenViewDisappears:
initWithMediaController:
setGoesToForegroundOnFirstAppear:
_configureViewModel
setWaitingForPostPlayDocumentUpdate:
postPlayConfig
_sendPostPlayShouldUpdateNotificationExcludingCanonicals:
documentUpdateOffsetInterval
performSelector:withObject:afterDelay:
_addMenuGestureRecognizerIfNeeded
_removeMenuGestureRecognizerIfNeeded
nowPlayingControllerDidSelectSkipIntro:
nowPlayingControllerDidSelectFromBeginningButton:
nowPlayingControllerDidSelectMoreInfoButton:
nowPlayingViewControllerMenuButtonPressedToDismiss:
nowPlayingController:safeAreaDidChange:
nowPlayingViewControllerUserDidInteract:
nowPlayingViewController:mediaInfoDidChange:canPlay:
gestureRecognizers
menuGestureRecognizer
nowPlayingController:didEnableUIMode:enabled:
swipeUpGestureRecognizer
mediaControllerHost
relinquishOwnership
adoptMediaController:
currentMediaType
includesProductPageButton
setIncludesProductPageButton:
_createAndConfigureNowPlayingHudView
_nowPlayingHudSafeAreaInset:
internalMenuGestureRecognizer
setEnabled:
setNowPlayingHudView:
setCurrentUI:
setNeedsFocusUpdate
animateWithDuration:delay:options:animations:completion:
postNotificationName:object:
_postPlaySafeAreaInset:
waitingForPostPlayDocumentUpdate
setWaitingForPostPlayDocumentUpdateToShowPostPlay:
recordDialog:
currentMediaItem
raitingInfoDictioanryWithRatingImage:andMediaItem:
initWithRatingInfoDictionary:
setRatingView:
show:animated:completion:
setAlreadyShownAdvisory:
hasAlreadyShownAdvisory
setTextContentView:
setSkipIntroButton:
_skipIntroSafeAreaInset:
nowPlayingConfig
alertIdleTimeout
currentMediaTitle
presentWithTitle:presentingController:timeout:responseHandler:
_isCurrentMediaTVShow
initWithDocumentRef:
_documentRefContextDataForCurrentMediaType
setContextData:
pause
migratesMediaControllerFromHost:toHost:
_canContinuePlaybackInWatchNow
setMediaController:
transitionToForeground:animated:
onMediaControllerStateDidChange
onEvent
showPostPlay:animated:
setAutomaticPlaybackStop:
setPlaybackStopReason:
initialPlaybackStartDate
setInitialPlaybackStartDate:
autoPlayedEpisodesCount
setAutoPlayedEpisodesCount:
waitingForPostPlayDocumentUpdateToShowPostPlay
mediaInfo
playbackContext
_initializeForLibraryPlaybackWith:restoringAVPlayerController:
_initializeForExtrasPlaybackWith:restoringAVPlayerController:
_initializeForGenericPlaybackWith:restoringAVPlayerController:
_createPostPlayViewController
_applicationDidEnterBackground:
_applicationWillEnterForeground:
initWithName:
setPlayer:
avPlayerViewController
setAvPlayerViewController:
setRestoringAVPlayerController:
setMediaInfo:
setRestrictionsAlreadyUnlocked:
_allowsBackgroundPlaybackInWatchThroughOverride
_isNowPlayingHudVisible
standardUserDefaults
boolForKey:
_addSwipeUpGestureRecognizerIfNeeded
_removeSwipeUpGestureRecognizerIfNeeded
_menuPressed:
initWithTarget:action:
setNumberOfTapsRequired:
setAllowedPressTypes:
addGestureRecognizer:
setInternalMenuGestureRecognizer:
removeGestureRecognizer:
_allowsManualPostPlayInvocation
setPlaybackManager:
showsProductPageButton
_addViewModelObservers
skipButtonLayout
_isCurrentMediaMovie
initWithMovieID:
initWithShowID:episodeID:
initWithFrame:layout:
setButtonSelectHandler:
descriptionText
initWithTitle:description:
play
setDismissHandler:
setDescriptionTextSelectionHandler:
setUserInteractionEventHandler:
childViewControllers
convertRect:toView:
_updatePostPlayContextDataForCurrentMediaType:excludingCanonicals:updateEvent:
setPrefetchData:
setPostPlayDelegate:
setPostPlayViewController:
coverImageDidChangeForMediaController:
didFinishPlaybackForMediaController:
stateDidChangeForMediaController:
mediaController:shouldShowStill:afterStoppingForReason:
documentDidFinishCreationWithStatus:
eventDidOccur:
mediaInfoDidChangeTo:canPlay:autoPlay:
documentDidFinishUpdate
initWithNowPlayingInfo:restoringAVPlayerController:
prepareForPostPlayExcludingCanonicals:
setShowsNowPlayingHUD:
setShowsProductPageButton:
showNowPlayingHud:animated:
showAdvisory:image:animated:
showSkipIntro:localizedTitle:animated:
showStillWatchingAlertWithFinishedHandler:
showMoreInfo
customAnimatorForNavigationControllerOperation:toViewController:
customAnimatorForNavigationControllerOperation:fromViewController:
_mediaInfoFromMediaItem:
_stillWatchingAlertDurationOverride
showsNowPlayingHUD
currentUI
enabledUIModes
setEnabledUIModes:
setMediaControllerHost:
setViewModel:
isNowPlayingHudVisible
shouldPopWhenDone
setPopWhenDone:
setSkipButtonLayout:
_playbackReportToken
_delegateFlags
_showsNowPlayingHUD
_nowPlayingHudVisible
_popWhenDone
_waitingForPostPlayDocumentUpdate
_waitingForPostPlayDocumentUpdateToShowPostPlay
_mediaPlaybackManager
_mediaController
_currentUI
_appContext
_enabledUIModes
_mediaControllerHost
_nowPlayingHudView
_viewModel
_skipIntroButton
_postPlayViewController
_playbackContext
_skipButtonLayout
_ratingView
_internalMenuGestureRecognizer
_disappearanceReason
maxHeight
maxWidth
layoutWithLayout:
setChannelLogoImageLayout:
channelsTextLayout
setChannelsTextLayout:
_channelLogoImageLayout
_channelsTextLayout
effectForBlurEffect:
setLabel:
_updateContentWithNewLabel:oldLabel:
vibrantLabelWithLabel:
label
_visualEffectView
_label
imageLoadParamsWithImageType:
imageLoadParamsWithMediaEntity:imageType:
_configureLayout
setBlurEffectStyle:
setDarkBlurEffectStyle:
vui_opacityColorWithType:userInterfaceStyle:
setCompositingFilter:
setDarkCompositingFilter:
safeAreaInsets
titleTopMarginPhone
titleTopMarginPad
descriptionTopMargin
_blurEffectStyle
_darkBlurEffectStyle
_channelLogoLayout
_disclaimerTextLayout
getMediaEntityContentType:
recordMedia:
getMediaItemContentType:
recordPageEventWithPageId:andPageType:
createWithPageId:andPageType:andEventData:
recordPage:
stringDescription
vui_mediaEntityType
recordPlayOfMediaEntity:isLaunchingExtras:
recordPlayOfMediaItem:
recordClickOnMediaEntity:
recordPageEventWithPageType:
pageStringForEntityType:
pageStringForLibraryCellType:
pageStringForLibraryShelfType:
pageStringForLibraryCategoryType:
chapterType
playbackTime
playbackDuration
wlk_dictionaryRepresentation
initWithEventDictionary:termCollater:
initWithEvents:
initWithMetrics:
viewController
setViewController:
_viewController
initWithViewController:
setLogName:
_delayedGridUpdate
cancelPreviousPerformRequestsWithTarget:selector:object:
setMenuView:
detailViewController
setDetailView:
_accountsChanged:
contentPresenter
setRootViewForViewController
menuDataSource
setCurrentContentViewType:
_isDeviceMediaLibraryInitialUpdateInProgress
_startMonitoringDeviceMediaLibraryInitialUpdate
startFetch
setNoContentErrorTitle:
familyMember
sharingPurchases
firstName
setNoContentErrorMessage:
tvLibraryView
setHeaderTitle:
setContentView:
viewWillLayoutSubviews
configureCurrentViewFrame
_showContentOrNoContentView
menuItems
currentContentViewType
menuCollectionViewController
_initializeLibraryViewControllersWithMenuItems:
updateWithCategories:
mainMenuItems
currentlySelectedIndexPath
section
genreMenuItems
initWithInteger:
intValue
indexPathForRow:inSection:
setCurrentlySelectedIndexPath:
libraryMenuDataSourceForFamilyMember:
initWithMenuDataSource:
setFamilyMember:
initWithDataSource:
setGridType:
setGridStyle:
getGenreByGenreTitle:
setDetailViewController:
_metricsPageTypeForMenuItemAtIndexPath:
setPageType:
_shouldShowContentView
isInitialUpdateInProgress
_deviceMediaLibraryUpdateStateDidChange:
removeObserver:name:object:
libraryMenuDataSourceForMediaLibrary:
setMenuDataSource:
_stopMonitoringDeviceMediaLibraryInitialUpdate
initWithCategories:gridConfiguration:
setMenuCollectionViewController:
didSelectMenuItemAtIndexPath:
menuCollectionViewControllerDidFinishLoading
didUpdateFocusToIndexPath:
categoryMenuViewControllerShouldDismiss:
dataSourceDidFinishFetching:
familyMemberViewController:didSelectFamilyMember:
contentScrollView
setTvLibraryView:
validCategories
setValidCategories:
setContentPresenter:
_familyMember
_menuCollectionViewController
_tvLibraryView
_detailViewController
_menuDataSource
_currentlySelectedIndexPath
_validCategories
_contentPresenter
initWithActivityIndicatorStyle:
startAnimating
_effectView
_spinner
isEqualToSet:
unionSet:
UUID
UUIDString
initWithSet:
_didUpdateRequestProperties
mediaEntityTypes
predicate
sortDescriptors
properties
range
groupingKeyPath
groupingSortComparator
options
subtype
_isItemsFetch
_shouldGenerateSortIndexes
propertyDescriptorForName:
propertyType
sortAsName
sortingPropertyDescriptorForName:
ascending
_finalizedSortDescriptorsFromSortDescriptors:mediaEntityKind:
_finalizedSortDescriptorFromSortDescriptor:mediaEntityKind:
initWithKey:ascending:
initWithMediaEntityType:
setRange:
setGroupingSortComparator:
setOptions:
_isCollectionsFetch
_isShowsFetch
_isSeasonsFetch
_sortIndexPropertyKeyWithMediaEntityKind:
_shouldGenerateGroupingSortIndexes
_manualSortDescriptorsWithMediaEntityKind:propertiesRequiredForSort:
setMediaEntityTypes:
_mediaEntityTypes
_predicate
_sortDescriptors
_properties
_groupingKeyPath
_groupingSortComparator
_options
_range
handler
setHandler:
completion
setCompletion:
_handler
_completion
window
_tvButtonAction:
setTvButtonRecognizer:
strongToStrongObjectsMapTable
tvButtonRecognizer
gestureToHandlerMap
defaultListener
initWithAttachingToView:
registerHandler:completion:
setGestureToHandlerMap:
_tvButtonRecognizer
_gestureToHandlerMap
initWithMediaLibrary:identifier:requestedProperties:kind:
entity
numberFromString:
artworkURL
iTunesExtrasUrl
_itunesExtrasDictionary
previewArtworkURL
_bestOffer
buyParameters
videosPlayablesFromDictionaries:andMetadataDictionary:
relationships
episodeNumber
seasonNumber
showTitle
initWithCalendarIdentifier:
components:fromDate:
year
standardDescription
offerListing
bestStoreBuyOffer
bestStoreGetOffer
personalizedOfferListing
bestStoreRedownloadOffer
_bestRedownloadOffer
storeID
rank
iTunesExtrasInfo
videosPlayable
showIdentifier
seasonIdentifier
contentDescription
buyParams
personalizedBuyParams
setITunesExtrasInfo:
setVideosPlayable:
setBuyParams:
setPersonalizedBuyParams:
setEntity:
_artworkURL
_previewArtworkURL
_iTunesExtrasInfo
_relationships
_videosPlayable
_buyParams
_personalizedBuyParams
_entity
initWithMediaItem:mediaEntityIdentifier:serialProcessingDispatchQueue:
initWithMediaItemCollection:mediaEntityIdentifier:serialProcessingDispatchQueue:
valuesForProperties:
longLongValue
initWithMediaItem:serialProcessingDispatchQueue:
mediaItemAssetControllerWithMediaItem:mediaEntityIdentifier:
mediaItemCollectionAssetControllerWithMediaItemCollection:mediaEntityIdentifier:
mediaItemDownloadControllerWithMediaItem:
libraryFileURL
setLibraryFileURL:
_libraryFileURL
setShouldMarkFirstCellSelected:
setSectionInset:
setShowsHorizontalScrollIndicator:
setShowsVerticalScrollIndicator:
setOpaque:
registerClass:forSupplementaryViewOfKind:withReuseIdentifier:
defaultGradientMaskProperties
gradientConfigForCollection:gradientMask:properties:configuration:
_setGradientMaskLengths:
_setGradientMaskEdgeInsets:
setGradientBoundsInsets:
shouldMarkFirstCellSelected
setShouldAppearSelected:
menuItemSizingCell
setMenuItemSizingCell:
generateCollectionView
configureCollectionViewCellForCollectionView:ForItem:AtIndexPath:
configureSizingCellForItem:
minimumLineSpacing
classForCollectionViewCell
_shouldMarkFirstCellSelected
_menuItemSizingCell
total
setTotal:
setOffset:
_total
_offset
contextDataDictionary
_contextDataDictionary
vui_keyBlueColor
setLayoutMargins:
constraintEqualToAnchor:multiplier:
_preferredFontForTextStyle:maximumContentSizeCategory:
_buildCarousel
_buildLogoStack
preferredFontDescriptorWithTextStyle:
fontDescriptorWithSymbolicTraits:
fontWithDescriptor:size:
tintColor
_setContinuousCornerRadius:
vui_tertiaryDynamicBackgroundColor
systemFontOfSize:
dequeueReusableCellWithReuseIdentifier:forIndex:
_imageViewForIndex:
setInteritemSpacing:
setScrollMode:
setUnitScrollDuration:
vui_iconImageOfSize:
isHighlighted
animateWithDuration:animations:
numberOfItemsInCarouselView:
carouselView:cellForItemAtIndex:
initWithApps:
allowButton
disallowButton
seeAllButton
nackButton
bodyScroll
setBody:
setFooter:
showNackScreen
privacyView
setPrivacyView:
_titlePlacementGuide
_scrollStack
_bodyScroll
_bodyLabel
_logoStack
_bottomStack
_allowButton
_disallowButton
_nackButton
_privacyLabel
_seeAllButton
_carouselView
_privacyView
descriptionString
setDescriptionString:
dismissButtonTitle
setDismissButtonTitle:
_descriptionString
_dismissButtonTitle
initWithEventType:
purchases
playActivity
settings
upNext
favorites
accountChanged
removeFromPlayHistory
entitlements
utsk
restrictions
preferredVideoFormat
appDidBecomeActive
playHistoryUpdated
clearPlayHistory
appRefresh
locationAuthorizationChanged
locationRetrieved
iamMessageReceived
_type
isAdultContent
liveStreamServiceID
referenceID
mediaType
tvAppDeeplinkURL
isEntitledToPlay
contentMetadata
channelDetails
punchoutURL
mediaItemURL
recordPlay:isLaunchingExtras:
recordPunchout:isUrlForPlay:
recordTVPMediaItemPlay:isBackgroundVideo:
initWithIdentifier:type:
vui_dateForKey:
initWithStringRepresentation:
fileURLWithPath:relativeToURL:
isLocal
studio
credits
stringRepresentation
previewFrameURL
playbackURL
filePathURL
relativeString
stringByRemovingPercentEncoding
offlineFPSKeys
downloadState
isPlayable
setDuration:
setPreviewFrameURL:
setColorCapability:
setHLSColorCapability:
setStudio:
setCredits:
setPlaybackURL:
setFilePathURL:
setOfflineFPSKeys:
setDownloadState:
_local
_season
_duration
_releaseDate
_previewFrameURL
_contentRating
_colorCapability
_HLSColorCapability
_episodeNumber
_studio
_credits
_playbackURL
_filePathURL
_offlineFPSKeys
_downloadState
allObjects
_itemsFetchResponseWithRequest:error:
_collectionsFetchResponseWithRequest:error:
database
movies
movieRentals
homeVideos
episodes
initWithMediaLibrary:databaseItem:requestedProperties:
_fetchResponseWithMediaEntities:request:
shows
initWithMediaLibrary:databaseShow:requestedProperties:
seasons
initWithMediaLibrary:databaseSeason:requestedProperties:
_mediaEntityKindForRequest:
sortedArrayUsingDescriptors:
setMediaEntitySubtype:
setGrouping:
setGroupingSortIndexes:
fetchControllers
_logStringWithFetchControllers:
mediaLibraryRevision
logName
beginFetchWithMediaLibraryRevision:completionHandler:completionQueue:
initWithFetchControllers:mediaLibraryRevision:
setFetchControllers:
setMediaLibraryRevision:
_fetchControllers
_mediaLibraryRevision
image
setEventTypeLabelStr:
setSubhead1LabelStr:
setSubhead2LabelStr:
setSubhead3LabelStr:
setSubhead1LabelColor:
setSubhead2LabelColor:
setSubhead3LabelColor:
setTabName:
tabImage
setTabImage:
eventTypeLabelStr
subhead1LabelStr
subhead2LabelStr
subhead3LabelStr
tabName
eventTypeLabel
setEventTypeLabel:
eventTypeLabelLayout
setEventTypeLabelLayout:
subhead1Label
setSubhead1Label:
subhead1LabelLayout
setSubhead1LabelLayout:
subhead2Label
setSubhead2Label:
subhead2LabelLayout
setSubhead2LabelLayout:
subhead3Label
setSubhead3Label:
subhead3LabelLayout
setSubhead3LabelLayout:
tabNameLabel
setTabNameLabel:
tabNameLabelLayout
setTabNameLabelLayout:
tabImageView
setTabImageView:
separatorView
setSeparatorView:
_eventTypeLabelStr
_subhead1LabelStr
_subhead2LabelStr
_subhead3LabelStr
_tabName
_eventTypeLabel
_eventTypeLabelLayout
_subhead1Label
_subhead1LabelLayout
_subhead2Label
_subhead2LabelLayout
_subhead3Label
_subhead3LabelLayout
_tabNameLabel
_tabNameLabelLayout
_tabImageView
_separatorView
setDarkColor:
systemGrayColor
rentalExpirationTextLayout
groupedKeys
groupMargin
badgeImageLayout
commonSenseMargin
tomatoMeterMargin
_rentalExpirationTextLayout
_groupedKeys
_badgeImageLayout
_groupMargin
_commonSenseMargin
_tomatoMeterMargin
initWithMediaLibrary:fetchReason:
setCurrentFetchResponse:
_handleInitialFetchControllerOperationDidCompleteWithResult:error:
_handleContentsChangeFetchControllerOperationDidCompleteWithResult:error:
_notifyFetchDidCompleteWithResult:
_notifyFetchDidFailWithError:
controller:fetchDidCompleteWithResult:
controller:fetchDidFailWithError:
fetchResponse
fetchChanges
pageControlView
showsPageControl
numberOfPages
widgetCreator
createPageControlViewWithNumberOfPages:type:currentPage:
setOverrideUserInterfaceStyle:
_pageChanged:
setCurrentPageDidChange:
numberWithFloat:
setPageControlMarginNumber:
setShowsPageControl:
updateWithViewElement:layout:
setPageControlView:
setPageControlBottomMarginNumber:
centerItemAtPageIndex:
moveToPage:
carouselView:shouldHighlightItemAtIndex:
carouselView:didHighlightItemAtIndex:
carouselView:didUnhighlightItemAtIndex:
carouselView:shouldSelectItemAtIndex:
carouselView:shouldDeselectItemAtIndex:
carouselView:didSelectItemAtIndex:
carouselView:didDeselectItemAtIndex:
carouselView:willDisplayCell:forItemAtIndex:
carouselView:didEndDisplayingCell:forItemAtIndex:
carouselView:willDisplayItemAtIndex:
carouselView:didEndDisplayingItemAtIndex:
carouselViewDidScroll:
carouselView:didFocusItemAtIndex:
carouselView:didPlayItemAtIndex:
carouselView:didCenterItemAtIndex:
pageControlBottomMarginNumber
_pageControlView
_pageControlBottomMarginNumber
tableView
registerClass:forCellReuseIdentifier:
sortedArrayUsingSelector:
dequeueReusableCellWithIdentifier:forIndexPath:
sortedKeys
detailTextLabel
numberOfSectionsInTableView:
tableView:numberOfRowsInSection:
tableView:cellForRowAtIndexPath:
setDictionary:
_dictionary
preferredContentSizeCategory
headerTextLayout
_setupLayout
middleSpacing
_headerTextLayout
_middleSpacing
elementType
initWithLayoutType:
layoutType
headerTitleLayout
headerSubtitleLayout
sourceTextLayout
tv_highlightColor
setHighlightColor:
setDarkHighlightColor:
tv_borderRadius
cornerRadiiValue
reviewTableLayout
_setupLayout:
setDarkBackgroundColor:
setRatingStyle:
setRatingStyleAXLarge:
setRatingStyleAXSmall:
setInteritemSpacingAXLarge:
setInteritemSpacingAXSmall:
setSeeMoreTextColor:
darkColor
setDarkSeeMoreTextColor:
headerBadgeLayout
sourceBadgeLayout
ratingBadgeLayout
darkHighlightColor
headerImagePadding
_headerTitleLayout
_headerSubtitleLayout
_sourceTextLayout
_headerBadgeLayout
_sourceBadgeLayout
_reviewTableLayout
_ratingBadgeLayout
_darkHighlightColor
_layoutType
_borderRadii
_headerImagePadding
_registerPanGestureRecognizer
setPanGestureRecognizer:
monitoredView
panGestureRecognizer
isEnabled
_panGestureRecognized:
interactionHandler
gestureRecognizerShouldBegin:
gestureRecognizer:shouldRecognizeSimultaneouslyWithGestureRecognizer:
gestureRecognizer:shouldRequireFailureOfGestureRecognizer:
gestureRecognizer:shouldBeRequiredToFailByGestureRecognizer:
gestureRecognizer:shouldReceiveTouch:
gestureRecognizer:shouldReceivePress:
initWithMonitoredView:interactionHndler:
setMonitoredView:
setInteractionHandler:
_monitoredView
_interactionHandler
_panGestureRecognizer
initWithParams:scaleToSize:cropToFit:
_plistMediaEntityImageLoadParams
imageURL
isFileURL
dataWithContentsOfFile:
dataWithContentsOfURL:
imageWithData:
setScalingResult:
params
initWithParams:
_mediaEntityTypeForMPMediaEntity:mediaCategory:mediaCollectionType:
componentsSeparatedByString:
_numberForString:
category
mediaEntity
valueForProperty:
unsignedLongLongValue
collectionType
setWithArray:
_stringForNumber:
decimalNumberWithString:
rental
parseIdentifier:withBlock:
initWithMediaEntity:appContext:mediaCategory:mediaCollectionType:
setMediaEntity:
_mediaEntity
sizeToFit
initWithFrame:loadingString:
startTimer
loadingLabel
setLoadingLabel:
indicatorView
setIndicatorView:
_loadingLabel
_indicatorView
setResult:
_parseTotalFromMetaBag
_parseOffsetFromMetaBag
_result
_restrictionsMaximumEffectiveMovieRanking
_restrictionsMaximumEffectiveTVShowRanking
_preferredVideoFormat
_formatStringForVideoFormat:
_hasRestrictionsChanged
_hasPreferredVideoFormatChanged
_sendSettingsValuesToJS
dictionaryWithCapacity:
maxMovieRank
null
maxTVShowRank
isUIAppInstallationAllowed
preferencesJSONData
sharedAppleTVServicesPreferences
stringForKey:
_resolutionFromString:defaultResolution:
restrictionsEnabled
effectiveValueForSetting:
checkAndUpdateSettings
isAppInstallationAllowed
setMaxMovieRank:
setMaxTVShowRank:
setPreferredVideoFormat:
_maxMovieRank
_maxTVShowRank
isAXLargeEnabled:
bottomMarginToLabel:withBaselineMargin:
channelNameTextLayout
setCenter:
_chinHeightForSize:
channelNameLabel
isEntitled
_isEntitled
_imageView
_appIconView
_channelNameLabel
_subtitleLabel
_textLabel
_tagsView
_versionsButton
_channelImageBackgroundView
memberImage
setGivenName:
lastName
setFamilyName:
stringFromPersonNameComponents:
nameLabel
setNameLabel:
_monogramViewForFamilyMemberCell:
monogramImageLayout
monogramHeight
setAcceptsFocus:
setFamilyMemberImageView:
setMonogramView:
monogramSize
initWithStyle:
setUnfocusedBgColor:
setFocusedBgColor:
initWithFrame:configuration:
setControlState:animated:
setFocusedSizeIncrease:
systemFontOfSize:weight:
fontDescriptor
initWithFirstName:lastName:imageURL:font:
setSize:
setUpscaleAdjustment:
setFillColor:
setMonogramDescription:
configureVUIFamilyMemberCell:withFamilyMember:metricsOnly:
familyMember:photoRequestDidCompleteWithImage:
setMonogramImageLayout:
monogramView
familyMemberImageView
_nameLabel
_monogramImageLayout
_monogramView
_familyMemberImageView
_validCategoriesForPlatform
_validCategoriesForHomeSharing
initWithValidCategories:
setOwnerIdentifier:
isFeatureEnabled:
initializeWithAppleTVClientIdentifier
_getLimitFromURLRequest
mediaClient
urlRequest
setResponseMetadata:
shouldGroupBySeason
_groupEpisodesbySeason:
_orderEpisodesInGroupings
shouldCoalesceEpisodesToShows
_coalesceEpisodesToShowsFromParsedEntities:
shouldCoalesceEpisodesToSeasons
_coalesceEpisodesToSeasonsFromParsedEntities:
_orderSeasonsBySeasonNumber
initWithArray:
setProcessedEntities:
processedEntities
loadingNextBatch
setLoadingNextBatch:
_applyContentRestrictionsFilter
_filterEntitiesBySeasonIdentifierIfNecessary
_filterGroupingsBySeasonIdentifierIfNecessary
_orderEpisodesIfNecessary
_limitEntitiesReturnedIfNecessary
desiredBatchSize
fetchAllEntities
_hasNextBatch
loadNextEntityBatch
fetchContentForUrl:completion:
_appendNextOffsetToURLRequest
_processedEntitiesContainsEntityWithIdentifier:
_mediaCollectionWithAMSMediaItem:
_getEntityInProcessedEntitiesWithIdentifier:
indexOfObject:
seasonNumbers
_addSeasonNumber:toCollectionSeasonNumbers:
setSeasonNumbers:
replaceObjectAtIndex:withObject:
initWithAMSEntity:requestedProperties:mediaEntityType:
_getGroupingFrom:groupingIdentifier:
_grouping:containsMediaEntity:
initWithURL:resolvingAgainstBaseURL:
_updateOffsetQueryItemForQueryItems:
setQueryItems:
requestWithURL:
setUrlRequest:
responseMetadata
initWithName:value:
resultLimit
_episodeOrderingComparator
orderEpisodesByEpisodeNumber
seasonIdentifierFilter
amsSeasonIdentifier
_applyContentRestrictionsFilterToMediaEntities:
_applyContentRestrictionsFilterToGroupings
_isAllowedToShowMediaItem:
predicateWithBlock:
setMediaClient:
setDesiredBatchSize:
setFetchAllEntities:
_shouldCoalesceEpisodesToShows
_shouldCoalesceEpisodesToSeasons
_shouldGroupBySeason
_orderEpisodesByEpisodeNumber
_loadingNextBatch
_fetchAllEntities
_resultLimit
_seasonIdentifierFilter
_mediaClient
_urlRequest
_responseMetadata
_desiredBatchSize
_processedEntities
_setAppImageDefaultSize:
_setLogoImageDefaultSize:
setTextBadgeLayout:
setUpscaleFactor:
vui_imageBorderColor
vui_imageHighlightColor
keyWindow
defaultProgressBarLayout
setAppImageLayout:
setLogoImageLayout:
setProgressBarLayout:
setBadgeLayout:
setTitleLayout:
subtitleLayout
setSubtitleLayout:
_appImageLayout
_logoImageLayout
_progressBarLayout
_badgeLayout
_subtitleLayout
_textBadgeLayout
timerWithTimeInterval:repeats:block:
invalidate
mainRunLoop
addTimer:forMode:
timeoutInterval
_timeoutInterval
_fetchGenres
_fetchRecentPurchases
_fetchMovies
_fetchShows
genres
ownerIdentifier
genresRequestWithOwnerIdentifier:
setHasFetchedGenres:
setGenres:
_hasCompletedAllFetches
_constructVUIMenuDataSource
setMenuItems:
_notifyDelegatesFetchDidComplete
setHasFetchedRecentPurchases:
setHasRecentPurchases:
setHasFetchedMovies:
setHasMovies:
setHasFetchedShows:
setHasShows:
_constructMainMenuItems
_constructGenreMenuItems
initWithMainMenuItems:genreMenuItems:
hasRecentPurchases
hasShows
_categoryTypesSortComparator
hasFetchedGenres
hasFetchedRecentPurchases
hasFetchedMovies
hasFetchedShows
_hasFetchedGenres
_hasFetchedRecentPurchases
_hasFetchedMovies
_hasFetchedShows
_hasRecentPurchases
_hasMovies
_hasShows
_ownerIdentifier
_genres
stackCollectionView
_scrollToTopIfPossible:
setAlwaysBounceVertical:
configureWithCollectionView:
_updateNavigationBarPadding
invalidateLayout
isMovingFromParentViewController
viewWillTransitionToSize:withTransitionCoordinator:
animateAlongsideTransition:completion:
navigationBar
layoutMargins
scrollToTop
preferredStatusBarStyle
collectionView:layout:minimumLineSpacingForSectionAtIndex:
_invalidateLayouts
stackView
_requiresRelayout
_focusedIndexPath
_stackView
_stackCollectionView
vui_VUIMediaEntityResolutionFromMPMediaItemVideoQuality:
vui_VUIMediaEntityColorCapabilityFromMPMediaItemColorCapability:
vui_VUIMediaEntityAudioCapabilityFromMPMediaItemAudioCapability:
_vui_imageIdentifierWithImageType:
setCast:
setProducers:
setDirectors:
setScreenwriters:
vui_assetType
_vui_isLocalWithPropertyValues:
playedStateForDuration:elapsedTime:hasBeenPlayed:playCount:
dateWithTimeIntervalSinceReferenceDate:
initWithTimeInterval:sinceDate:
vui_rentalPlaybackEndDate
vui_rentalEndDate
earlierDate:
vui_assetTypeIgnoringLocalAsset:
_vui_isNetworkPlayableWithPropertyValues:
vui_coverArtImageIdentifier
vui_previewFrameImageIdentifier
artworkCatalog
screenshotArtworkCatalog
homeSharingDatabaseID
initWithMediaItem:andImageType:
vui_artworkCatalogWithImageType:
visualIdenticalityIdentifier
tv_filenameSafeString
vui_resolution
vui_colorCapability
vui_audioCapability
vui_HLSResolution
vui_HLSColorCapability
vui_HLSAudioCapability
vui_showIdentifier
vui_seasonIdentifier
vui_studio
vui_credits
vui_contentRating
vui_isPlayable
vui_isLocal
vui_extrasURL
vui_playedState
vui_rentalExpirationDate
vui_imageIdentifierWithImageType:
vui_imageLoadParamsWithImageType:
vui_MPMediaItemVideoQualityFromVUIMediaEntityResolution:
vui_MPMediaItemColorCapabilityFromVUIMediaEntityColorCapability:
vui_MPMediaItemAudioCapabilityFromVUIMediaEntityAudioCapability:
allocWithZone:
setFontTraits:
setFontFeature:
setHighlightOrSelectedColor:
setDarkHighlightOrSelectedColor:
setShadow:
setLetterSpacing:
setShouldAllowParagraphHyphenation:
setShouldUpdateTextColor:
vui_fontFromTextLayout:
_defaultParagraphStyle
attributedStringWithString:view:
attributedStringWithAttributedString:view:updateTextColor:
initWithAttributedString:
localizedLowercaseString
localizedUppercaseString
localizedCapitalizedString
mutableString
setString:
isSelected
_accessibilityHigherContrastTintColorForColor:
beginEditing
letterSpacing
shadow
addAttribute:value:range:
enumerateAttributesInRange:options:usingBlock:
endEditing
numberOfLines
isAXSmallEnabled:
numberOfLinesAXSmall
numberOfLinesAXLarge
defaultParagraphStyle
setHyphenationFactor:
defaultAttributesForLabel:
attributedStringWithString:
numberOfLinesForTraitCollection:
textStyle
maximumContentSizeCategory
fontFamily
fontWeight
fontSize
fontTraits
fontFeature
highlightOrSelectedColor
darkHighlightOrSelectedColor
shouldUpdateTextColor
seeMoreTextColor
darkSeeMoreTextColor
compositingFilter
darkCompositingFilter
textTransform
alignment
minimumScaleFactor
lineBreakMode
shouldAllowParagraphHyphenation
blendMode
alwaysFocusable
_shouldUpdateTextColor
_shouldAllowParagraphHyphenation
_alwaysFocusable
_fontTraits
_blendMode
_textStyle
_maximumContentSizeCategory
_fontFamily
_fontWeight
_fontSize
_fontFeature
_color
_darkColor
_highlightOrSelectedColor
_darkHighlightOrSelectedColor
_seeMoreTextColor
_darkSeeMoreTextColor
_compositingFilter
_darkCompositingFilter
_textTransform
_alignment
_numberOfLines
_numberOfLinesAXSmall
_numberOfLinesAXLarge
_minimumScaleFactor
_shadow
_letterSpacing
_lineBreakMode
_margin
consumeMetadataForKey:
transitionTypeForMediaControllerAutoStart:
consumeStopType
consumeStopReason
consumeStartType
consumeStartReason
transitionReasonForMediaControllerStartReason:autoStart:
transitionReasonForMediaControllerStopReason:autoStart:
_userAccount
accountName
localizedName
_isObservingAccountStoreChange
_accountStoreDidChange:
set_isObservingAccountStoreChange:
sharedRestrictionsMonitor
defaultStore
activeAccount
initWithAccount:
setPromptStyle:
_performAuthenticationWithContext:completionHandler:
setAccountName:
setPassword:
signOutAccount:completion:
_authRequest
initWithAuthenticationContext:
set_authRequest:
authenticateResponseType
startWithAuthenticateResponseBlock:
userAccountName
userFirstName
userLastName
userFullName
signInUserWithAppleID:password:completionHandler:
signOutUserWithCompletionHandler:
__isObservingAccountStoreChange
__authRequest
initWithCapacity:
documentDataSourceWithDictionary:
setDocumentDataSources:
setAction:
setTabIdentifier:
setNativePageName:
setLocalLibraryLink:
setActionFirst:
tabIdentifier
_actionFirst
_documentDataSources
_action
_tabIdentifier
_localLibraryLink
_nativePageName
_initWithSuccess:domainVersion:peerPutItems:putOKKeys:rejectedKeys:
isRunningInStoreDemoMode
_callSyncHandler:queue:success:newVersion:rejectedKeys:putOKKeys:peerPutItems:
tvs_arrayByMappingObjectsUsingBlock:
dataFromPlist:contentType:error:
setURLBagKey:
setAllowedRetryCount:
documentLoaderWithRequestProperties:
setAuthenticationType:
setPostprocessor:
tvs_numberForKey:
tvs_dictionaryForKey:
tvs_arrayForKey:
loadWithCompletionHandler:
syncDomain:version:conflictDetection:puts:queue:handler:
initWithKey:value:
_key
_value
success
domainVersion
peerPutItems
putOKKeys
rejectedKeys
_success
_domainVersion
_peerPutItems
_putOKKeys
_rejectedKeys
arrayWithCapacity:
tvs_dataForKey:
pageTerms
clickTerms
impressionsTerms
searchTerms
enterTerms
exitTerms
accountTerms
pageRenderTerms
primaryTerms
baseTerms
metricsKitTerms
filteredTerms
dialogTerms
configureHeaderViewWithTitle:
subtitle
integerValueType
defaultIntegerValue
defaultBoolValue
setOn:animated:
toggleDefaultBoolValue
setDefaultIntegerValue:
resignFirstResponder
textFieldShouldBeginEditing:
textFieldDidBeginEditing:
textFieldShouldEndEditing:
textFieldDidEndEditing:
textFieldDidEndEditing:reason:
textField:shouldChangeCharactersInRange:replacementString:
textFieldDidChangeSelection:
textFieldShouldClear:
textFieldShouldReturn:
configureCellWithDefaults:
_defaultsSwitchPressed:
defaultsSwitch
setDefaultsSwitch:
textField
setTextField:
defaults
setDefaults:
_defaultsSwitch
_textField
_defaults
initWithImage:
configureWithTitle:
accessoryView
setAccessoryView:
_accessoryView
_sendVideoSubscriberChangedNotificationToTheJavaScript
valueWithObject:inContext:
managedValueWithValue:
virtualMachine
addManagedReference:withOwner:
sharedCenter
channelIDs
providerInfo
callWithArguments:
removeManagedReference:withOwner:
fetchAccountChannelsWithCompletionHandler:
fetchMSOProviderStatus:
accountStore
setAccountStore:
_accountStore
imageLoadOperation
setImageLoadOperation:
requestCount
setRequestCount:
_imageLoadOperation
_requestCount
_cancelAllImageLoads
_imageLoadParamsForImageLoaderObject:
_imageIdentifierWithImageLoadParams:
_scaledImageIdentifierWithImageIdentifier:scaleToSize:cropToFit:
imageLoadContextsByImageIdentifier
_imageLoadOperationWithParams:scaleToSize:cropToFit:
imageLoadOperationQueue
scalingResult
initWithOperation:
cancelAllOperations
imageIdentifier
_imageLoaderIdentifier
imageKeyForObject:
cancelLoad:
URLForObject:
hasImageCache
loadImageForObject:scaleToSize:cropToFit:completionHandler:
loadImageForObject:scaleToSize:cropToFit:imageDirection:completionHandler:
loadImageForObject:scaleToSize:cropToFit:imageDirection:requestLoader:completionHandler:
setImageLoadContextsByImageIdentifier:
setImageLoadOperationQueue:
_imageLoadContextsByImageIdentifier
_imageLoadOperationQueue
validationResults:fromIndex:
_reloadResults:
validateEvents:forRuleset:withCompletion:
setResults:
results
stringByAppendingString:
whitespaceAndNewlineCharacterSet
componentsSeparatedByCharactersInSet:
redColor
removeGladiatorPrefix:
initWithEvent:
tableView:titleForHeaderInSection:
event
setEvent:
_event
_results
wlk_JSgenericProperties
wlk_jsPropertyStrings
_fontFromTextStyle:maximumContentSizeCategory:fontWeight:fontSize:symbolicTraits:fontFeature:
_uifontWeightFromFontWeight:
systemFontSize
systemFontOfSize:weight:design:
initWithFontAttributes:
fontDescriptorWithName:size:
symbolicTraits
_uiFontAttributesForFeature:
fontDescriptorByAddingAttributes:
ascender
scaleContentSizeValue:forTraitCollection:
descender
baselineHeight
topMarginWithBaselineMargin:traitCollection:
bottomMarginWithBaselineMargin:traitCollection:
topMarginToFont:withBaselineMargin:traitCollection:
vui_fontFromTextStyle:fontWeight:fontSize:symbolicTraits:
setRoundContentWhenDeselected:
setContentMotionRotation:translation:
configurationWithStyle:
setFocusAnimationConfiguration:
_updateSelectedBackgroundColor
initWithSize:
attributedText
removeAttribute:range:
setAttributedStrings:
updateFloatingViewControlState
_updateTitleTextColor
_floatingViewControlState
_currentFocusAnimationCoordinator
setControlState:withAnimationCoordinator:
setBackgroundColor:forState:
shouldAppearSelected
_shouldAppearSelected
_floatingView
_classNameFromPropertyType:
allowsDefaultValue
data
propertyValueClassName
_updateSourceSupportsFiltering
defaultValue
sourcePropertyNames
retrievesSourcePropertiesAtFetch
sourceSupportsFiltering
sourceFilterValueBlock
sourceFilterBlock
setSourceSupportsFiltering:
setSourceFilterValueBlock:
setSourceFilterBlock:
setPropertyType:
setPropertyValueClassName:
setDefaultValue:
setAllowsDefaultValue:
_allowsDefaultValue
_retrievesSourcePropertiesAtFetch
_sourceSupportsFiltering
_name
_sortAsName
_propertyType
_propertyValueClassName
_defaultValue
_sourcePropertyNames
_sourceFilterValueBlock
_sourceFilterBlock
initWithGridStyle:
gridStyle
vui_itemWidthForGridStyle:gridType:
_configureSizingCellForEpisodes:
_createDiffableDataSourceForCollectionView:
diffableDataSource
_createDiffableDataSourceSnapshot
applySnapshot:animatingDifferences:
_setupViews
_updateShelfViewFrameAnimated:
nextFocusedIndexPath
_startPlaybackWithMediaItem:
configureVUITVLibraryEpisodeListCell:withMedia:width:cornerRadius:
initWithCollectionView:cellProvider:
appendSectionsWithIdentifiers:
appendItemsWithIdentifiers:intoSectionWithIdentifier:
sizeForEpisodeListCellWithDescription:width:cornerRadius:
cellForItemAtIndexPath:
convertRect:fromView:
animateWithDuration:animations:completion:
initWithPlaybackContext:mpMediaItems:
setUserPlaybackInitiationDate:openURLCompletionDate:
playMediaInfo:isRentAndWatchNow:
initWithPlaybackContext:videosPlayables:imageProxies:storeDictionary:
collectionView:layout:sizeForItemAtIndexPath:
collectionView:layout:insetForSectionAtIndex:
collectionView:layout:minimumInteritemSpacingForSectionAtIndex:
collectionView:layout:referenceSizeForHeaderInSection:
collectionView:layout:referenceSizeForFooterInSection:
didTapOnImageViewWithMediaItem:
didTapOnInformationViewWithTitle:description:
initWithEpisodes:season:
updateWithEpisodes:
cellWidth
setCellWidth:
cellSize
setCellSize:
setEpisodes:
lastFocusedIndexPath
setLastFocusedIndexPath:
shelfTitleView
setShelfTitleView:
seasonVisualEffectLabel
setSeasonVisualEffectLabel:
sizingCell
setSizingCell:
setDiffableDataSource:
_cellWidth
_episodes
_lastFocusedIndexPath
_shelfTitleView
_seasonVisualEffectLabel
_sizingCell
_diffableDataSource
_cellSize
setClipsContentToBounds:
setContentOpaque:
setShadowEnabled:
setShadowAlpha:
setShadowCardSize:
setShadowCardImage:
setShadowViewFrameWithContentMargin:
CGImage
setContents:
setContentsScale:
setContentsCenter:
floatingContentView:isTransitioningFromState:toState:
floatingContentView:didFinishTransitioningToState:
setBackgroundColorForDefault:highlight:focus:
shadowAlpha
shadowCardSize
shadowCardImage
shadowView
setShadowView:
_shadowAlpha
_shadowCardImage
_shadowView
_shadowCardSize
initWithRouterData:viewElement:
initWithDataDictionary:viewElement:
routerDataSource
setDataDictionary:
setRouterDataSource:
_dataDictionary
_routerDataSource
initWithItemID:itemType:brandID:caller:
ongoingItemIDOperationDictionary
setOngoingItemIDOperationDictionary:
_ongoingItemIDOperationDictionary
hasPrefix:
addValue:forHTTPHeaderField:
setURL:
timeIntervalSince1970
numberWithLong:
initWithData:encoding:
appendData:
defaultSessionConfiguration
sessionWithConfiguration:
dataTaskWithRequest:completionHandler:
resume
dictionaryWithDictionary:
rangeOfString:
stringByReplacingCharactersInRange:withString:
setRulesets:
rulesets
_rulesets
_mainImageLoaded
imagePosition
_maxTextWidthForImagePosition:width:appImageLayout:textLayout:
reverseObjectEnumerator
imageSize
scaleContentSizeValue:forTraitCollection:maximumContentSizeCategory:
font
capHeight
initWithFrame:layoutFactory:
setAppImageView:
setOverlayView:
setLabelViews:
setButton:
appImageView
labelViews
overlayView
debugString
setDebugString:
_layoutFactory
_appImageView
_labelViews
_overlayView
_button
_debugString
_imageSize
_onIsUpdateInProgressChangedNotification:
_onSyncGenerationChangedNotification:
_mediaLibraryChanged:
orderedItemsMap
removeAll
_dataSourceWillChange
_dataSourceType
entities
processEntities:forDataSourceType:
_dataSourceChanged:
_dataSourceDidChange
wlk_mediaItemForPersistentIdentifier:
setByAddingObjectsFromArray:
wlk_mediaTypeString
wlk_mediaItemForStoreIdentifier:
sharedCloudController
isUpdateInProgress
isInitialImport
_getItem:includeChildren:additionalProperties:
orderedKeys
_mediaItemForIdentifier:
setJSValue:forProperty:
setFittingSize:
setDestinationScale:
jsValueForProperty:
requestImageWithCompletionHandler:
addOperationWithBlock:
wlk_stringIdentifierForProperty:
loadUpdateProgressWithCompletionHandler:
defaultMediaLibrary
hasMedia
homeVideosQuery
moviesQuery
tvShowsQuery
setIgnoreSystemFilterPredicates:
_countOfItems
_dataSourceForConfigurationOptions:
setQueryDataSource:
queryDataSource
initWithAppContext:options:
mediaCategory
mediaCollectionType
fetchOperationQueue
fetchCompletionOperationQueue
updateEntities:
sourceType
_dateFromConfigurationObject:
wlk_JSmovieProperties
setByAddingObjectsFromSet:
predicateWithValue:forProperty:
addFilterPredicate:
setGroupingType:
wlk_JStvShowProperties
predicateMatchingPredicates:
_setOrderingProperties:
_setOrderingDirectionMappings:
setItemPropertiesToFetch:
setCollectionPropertiesToFetch:
_orderingProperties
_orderingDirectionMappings
predicateWithValue:forProperty:comparisonType:
initWithQuery:entityType:
setSourceType:
dateWithTimeIntervalSince1970:
timeIntervalSinceReferenceDate
entityAtIndex:
wlk_stringIdentifierForSeason
_identifierForMediaItem:withProperty:
wlk_playState
_logObject
itemsMapAddedKeys:andRemovedKeys:
findItemByPersistentIdentifier::
findItemByStoreIdentifier::
getIsUpdateInProgress
getIsInitialImport
getImageForItem:::
getItem::
getItemCount
getShowIdentifierForStoreIdentifier:
getItemWithChildren::
getItems
getUpdateProgress:
libraryHasMedia
setFilter:
setFilterAsync::
queryHasItemCount:
fetchMediaEntitiesWithOptions::
isHDRCapable
setOrderedItemsMap:
setFetchOperationQueue:
setFetchCompletionOperationQueue:
_artworkLoadingQueue
_queue
_workQueue
_queryDataSource
_orderedItemsMap
_fetchOperationQueue
_fetchCompletionOperationQueue
status
downloadProgress
bytesToDownload
bytesDownloaded
supportsCancellation
supportsPausing
isDownloadInProgress
setStatus:
setDownloadProgress:
setSupportsCancellation:
setSupportsPausing:
setBytesToDownload:
setBytesDownloaded:
_supportsCancellation
_supportsPausing
_status
_downloadProgress
_bytesToDownload
_bytesDownloaded
stackWrappingView
mediaPlayer
isPlaying
_backgroundImageRequiresBlur
setBackdropBlurEffectStyle:
setBackdropInitialPeek:
setBackdropPeekGradient:
_backgroundImageProxy
backgroundElement
setShouldDelayLoadingImage:
setShowsSecondaryVideoView:
setAllowsPictureInPicture:
setPlaybackDelayInterval:
scrollStopForShowcaseTransition
sectionIndex
edge
_setSpeedBumpEdges:
tv_associatedIKViewElement
showcaseFactorDidChange
setSectionIndex:
setEdge:
_shouldOverlayBlur
updateBackgroundAndBackdrop
parsedMediaInfo
didUpdateSectionInfo
scrollStopForEnteringSectionAtIndex:fromEdge:
_lastFocusableIndex
grayColor
setLocStringPrefix:
invalidateTimer
_computeExpirationLabel:
_calculateExpirationStringForDate:displayWarningColor:updateInterval:locStringPrefix:
setAttributedText:
scheduledTimerWithTimeInterval:repeats:block:
components:fromDate:toDate:options:
hour
minute
second
timeIntervalSinceNow
calculateExpirationStringForDate:updateInterval:locStringPrefix:
expirationDate
locStringPrefix
expiryUpdateTimer
setExpiryUpdateTimer:
_expirationDate
_locStringPrefix
_expiryUpdateTimer
initWithAction:canonicalID:caller:
ongoingCanonicalIDOperationDictionary
vui_defaultCenter
vui_postNotificationName:object:userInfo:
setOngoingCanonicalIDOperationDictionary:
_ongoingCanonicalIDOperationDictionary
setFloatingContentView:
setDataContentView:
_setDefaultAttributes:
_updateVisualsAppearance
episodeLayout
viewsMap
metadataLayout
highlightedContentMargin
focusedContentMargin
defaultContentMargin
defaultBackgroundColorWithTraitCollection:
highlightedBackgroundColorWithTraitCollection:
focusedBackgroundColorWithTraitCollection:
_containsData
setAnimating:
animatedTitleLabel
_updateTextsAppearance
initWithLayout:
setEpisodeLabel:
setMetadataView:
canBecomeFocused
episodeLabel
metadataView
setAnimatedTitleLabel:
floatingContentView
dataContentView
_episodeLabel
_metadataView
_animatedTitleLabel
_floatingContentView
_dataContentView
setWaiting
setCanFocus:
lightGrayColor
actionTextForType:
setTitle:forStates:
_handleCancel
addTarget:action:forControlEvents:
_handleAppStore
_handleSecondaryLink
initWithTitle:style:target:action:
setRightBarButtonItem:
_handleAction
setLoading:
_fetchAppInfo
fetchIconForInstallable:size:completion:
appAdamIDs
offers
lookupDictionary
_namedRatingWithRatings:
_fetchStoreInfoForAdamID:completion:
confirmationView
setKeyProfile:
setPersonalizationStyle:
setValue:forRequestParameter:
allItems
setResponseBlock:
thinnedAppVariantId
compatibleProductType
_fileSizeWithDeviceSizes:
cancelationHandler
actionHandler
appStoreHandler
barButtonItem
setBarButtonItem:
setConfirmationView:
setInstallable:
setItemOffer:
_updateMessage
_cancelationHandler
_actionHandler
_appStoreHandler
_barButtonItem
_confirmationView
_itemOffer
numberWithLongLong:
videos_disableLocalAsset
videos_persistentID
videos_resumeTime
videos_rentalAdamIDString
videos_fpsCertificateURL
videos_fpsKeyServerURL
setDirectionalLockEnabled:
setScrollEnabled:
isScrollEnabled
setContentSize:
_scrollView
_containerView
loading
_loadingView
_parentView
_principalView
_cancelLoading
_loading
generateCachedKeys
setCachedKeysOrder:
cachedKeysOrder
setAccessoryType:
setArray:
setObject:
tableView:didSelectRowAtIndexPath:
_array
_cachedKeysOrder
vui_DataSource
_eventDataSourceForEvent:routerDataSource:
playEventDataSource
selectEventDataSource
contextMenuEventDataSource
eventDataSourceForEvent:viewElement:
_handleEvent:targetResponder:appContext:viewElement:eventDataSource:extraInfo:
topMostVisibleViewController
snapshotImpressions
_performForType:targetResponder:appContext:viewElement:eventDataSource:
preActionDocumentDataSource
preAction
documentDataSource
postActionDocumentDataSource
postAction
_handleDocumentDataSource:targetResponder:appContext:viewElement:completion:
_dismissPresentedViewControllerWithCompletion:
_viewControllerWithIdentifier:
popOrDismissViewController:completion:
activeDocument
viewControllerWithDocumentDataSource:appContext:viewElement:documentOptions:
viewControllerIdentifier
popViewController:completion:
dismissViewController:completion:
parent
viewControllerForResponder:
isAnimated
pushViewController:fromViewController:isAnimated:completion:
vui_defaultBag
URLForKey:
valueWithError:
dismissViewController:animated:completion:
currentSiriNavController
visibleViewController
centeredDocumentController
handleEvent:targetResponder:viewElement:extraInfo:
dismissOrPopViewControllerWithId:completion:
dismissOrPopLastViewControllerWithCompletion:
_amsBagURLForKey:withCompletion:
handleEvent:targetResponder:appContext:routerDataSource:extraInfo:
initWithDictionary:show:
setSeasons:
seasonForIdentifier:
_seasons
_configureLabels
setAxisFollowsDeviceOrientation:
setAlignmentFollowsDeviceOrientation:
ageRatingBadge
ageRatingLabel
_textColorForDarkMode
initWithTitle:tintColor:fontSize:cornerRadius:
setBadgeStyle:
_configureAgeRatingBadge
icon
ageRating
setMetadataStackView:
canFocus
setAgeRatingBadge:
setAgeRatingLabel:
_iconView
_iAPLabel
_nameAndRatingStack
_containerStack
_canFocus
_icon
_ageRating
_iAP
_subtitle
_metadataStackView
_ageRatingBadge
_ageRatingLabel
initWithPersistentID:mediaEntityType:
persistentID
mediaItemIdentifierWithMediaItem:
setPersistentID:
_persistentID
initWithLocalAppURL:
setBootURLController:
bootURLController
_startApplicationControllerWithBootURL:
fetchBootURLWithCompletionHandler:
exposeObjectsInJSContext:
_exposeObjectsInJSContext:
_initialViewControllerWithAppContext:
setJavaScriptApplicationURL:
_launchOptions
setLaunchOptions:
_applicationControllerClass
setNavigationController:
isRunningInSiriPluggin
setCurrentSiriNavController:
setKeyTraitEnvironment:
_bootURLController
_navigationController
setImageProxies:
_playlistFromVideosPlayables:andStoreDictionary:
setTvpPlaylist:
_updatePlaybackStartReason
tvpPlaylist
showsSecondaryVideoView
restrictionsAlreadyUnlocked
shouldDelayLoadingImage
playbackDelayInterval
alphaImageProxy
setAlphaImageProxy:
imageProxies
isEqualToPlaylist:
addOrReplaceStartEventWithName:date:
addEndEventWithName:identifier:timestamp:
setPlaybackStartReason:
tokenServerURL
isiTunesPurchaseOrRental
isSharedPurchase
_playbackOverridesForURL:orAdamID:
_storeMediaItemFromVideosPlayable:andStoreDictionary:
tokenServerParams
stopURL
initWithURL:tokenServerURL:stopServerURL:tokenServerParameters:
disableScrubbing
setDisableScrubbing:
channelName
vpafMetrics
mediaMetrics
externalServiceID
rtcServiceIdentifier
ratingDomain
_tvpRatingDomainFromUTSRatingDomain:
_populateMediaItem:withMetadataFromVideosPlayable:
_auxMediaItemFromVideosPlayable:
hlsURL
_tvpMediaTypeFromPlayableType:isRental:
resumeTime
fpsCertificateURL
fpsKeyServerURL
fpsAdditionalServerParams
requiredAgeForPlayback
frequencyOfAgeConfirmation
setStoreItemDict:
setFpsAdditionalServerParams:
seasonCanonicalID
scrubVideoURL
episodeIndexInSeries
upsellRouterDataSource
setSharedPurchase:
extrasInfo
_populateMediaItem:withMetadataOverrides:
artworkURLFormat
artworkWidth
artworkHeight
previewFrameURLFormat
previewFrameWidth
previewFrameHeight
initWithType:start:duration:target:
initWithRatingDescription:
setRatingName:
enumerateKeysAndObjectsUsingBlock:
enableDemoMode
propertyListWithData:options:format:error:
hasProgress
isAutomaticPlaybackStart
playbackStartReason
isAutomaticPlaybackStop
playbackStopReason
allowsPictureInPicture
overridesStartTimeWithResumeTime
setOverridesStartTimeWithResumeTime:
_hasProgress
_showsSecondaryVideoView
_automaticPlaybackStart
_automaticPlaybackStop
_restrictionsAlreadyUnlocked
_shouldDelayLoadingImage
_allowsPictureInPicture
_overridesStartTimeWithResumeTime
_tvpPlaylist
_playbackStartReason
_playbackStopReason
_playbackDelayInterval
_alphaImageProxy
_playlistFromMPMediaItems:
_storeMediaItemFromMPMediaItem:
_storeMediaTypeFromMPMediaType:isRental:
_videoResolutionFromMPVideoQuality:
_videoDynamimcRangeFromMPColorCapability:
_playlistForVUIMediaItems:
initWithPlaybackContext:vuiMediaItems:
_playlistFromIKPlaylistElement:
initWithPlaybackContext:playlistElements:
setLoadSynchronouslyIfCached:
colorFromRGBStr:
initWithBackgroundImageDictionary:
infoHeaderTextLayout
tv_imageScaleToSize
infoBodyTextLayout
infoDescriptionTextLayout
descriptionLineSpacing
setLineSpacing:
setMoreLabelTextColor:
setMaximumNumberOfLines:
setMoreLabelOnNewLine:
highlightedDescriptionText
setDescriptionTextHighlightColor:
setDescriptionText:
setDescriptionTextColor:
setDescriptionTextAlignment:
headerViewWithString:layout:existingView:
headerViewWithImage:layout:existingView:
dataLabelViewWithString:layout:existingView:
dataDescriptionViewWithString:maxLine:layout:existingView:
dataViews
setDataViews:
_dataViews
initWithFetchRequest:
fetchRequest
setFetchController:
fetchController
defaultQueueWithMediaLibrary:
addFetchController:
shouldFetchArtworkInfoDictionaries
_getPurchaseHistoryIdsFromMediaEntities:
_loadImageUrlsByPurchaseHistoryIds:
setArtworkInfoDictionaryByPurchaseID:
loadArtworkURLsForPurchaseHistoryIDs:completionHandler:
purchaseHistoryID
controllerShouldFetchForContentsChange:
_fetchController
removedCanonicalIDs
initWithRemovedCanonicalIDs:
setRemovedCanonicalIDs:
_removedCanonicalIDs
delayInSeconds
initWithEventType:delayInSeconds:name:
setDelayInSeconds:
_delayInSeconds
vui_URLForKey:
setBaseURL:previewURL:fallbackURL:expectedContentSize:
overlayViewWithElement:cardlayoutType:existingView:canFallbackToInterfaceFactory:
stackedMediaView
_updateMaskingModeForParameters:
position
ribbonCellWithElement:existingCell:
_locationAuthorizationStatusDidChange:
requestAuthorizationWithForcedPrompt:
dialogMetrics
geoLocationEnforced
setGeoLocationEnforced:
setDialogMetrics:
_geoLocationEnforced
_dialogMetrics
defaultOfferManager
saveOffer:completionHandler:
fetchOffers:completion:
clearOffers:
saveOffer::
fetchOffers::
revision
startObserving
_handleMediaLibraryContentsDidChangeNotification:
stopObserving
_removeStateObserverForFetchControllers:
mutableFetchControllers
_enqueueSyncProcessingQueueBlock:
addFetchControllers:
_addStateObserverForFetchControllers:
_enqueueControllerFetchOperation
removeFetchControllers:
indexOfObjectIdenticalTo:
setPaused:
_enqueueAsyncProcessingQueueBlock:
nowPlayingAppBundleIdentifier
_postContentsDidChangeNotification
_handleMediaLibraryContentsChange
removeObserver:forKeyPath:context:
delayContentsChangeOperation
delayOperationWithDelay:
_delayContentsChangeOperationDidComplete:
setDelayContentsChangeOperation:
currentFetchOperation
setCurrentFetchOperation:
_notifyDelegateFetchDidComplete
isPaused
setShouldFetchOnResume:
_queueOperationDidComplete:
serialFetchOperationQueue
shouldFetchOnResume
fetchDidCompleteForMediaLibraryFetchControllerQueue:
nowPlayingObserver:latestObservationDidChange:
removeFetchController:
pauseFetching
resumeFetching
_enqueueProcessingQueueBlock:synchronous:
setMutableFetchControllers:
setSerialFetchOperationQueue:
nowPlayingObserver
setNowPlayingObserver:
_paused
_shouldFetchOnResume
_mutableFetchControllers
_currentFetchOperation
_delayContentsChangeOperation
_serialFetchOperationQueue
_nowPlayingObserver
sortUsingSelector:
idType
impressionId
impressionIndex
parentId
orderedOtherKeys
setOrderedOtherKeys:
mainValues
setMainValues:
otherValues
setOtherValues:
_orderedOtherKeys
_mainValues
_otherValues
footerView
isEqualToArray:
makeObjectsPerformSelector:
isTextTruncating
darkHighlightedDescriptionText
setDefaultFocusView:
focusedView
defaultFocusView
footerLabelWithString:layout:existingView:
footerDescriptionWithString:layout:maxLine:existingView:
setFooterView:
setInfoViews:
infoViews
prototypeInfoHeaderLabel
setPrototypeInfoHeaderLabel:
_infoViews
_footerView
_defaultFocusView
_prototypeInfoHeaderLabel
setModalInPresentation:
_isHostedInRemoteViewService
channelIDForBundleID:
localizedNameForBundle:
_watchListAppIcon
_imageForBundleID:
channelForBundleID:
sharedSettings
optedIn
linkWithBundleIdentifier:
_fetchRemoteAppInfo
_setupAccessViews
_invalidateCache
_toggleLoadingScreen
_grantAccessToChannelIDs:isReconsent:
_presentGenericErrorWithCompletion:
beginIgnoringChanges
setStatus:forChannelID:externalID:
endIgnoringChanges
synchronize:
sendActionsForControlEvents:
_allow:
_disallow:
_handleSeeAllButton:
_handleNackButton:
_handleMenuGesture:
traitCollectionWithUserInterfaceStyle:
setOverrideTraitCollection:forChildViewController:
cappedTraitCollection
transitionFromView:toView:duration:options:completion:
applicationProxyForIdentifier:
tvsui_applicationFlatIcon
traitCollectionWithPreferredContentSizeCategory:
traitCollectionWithTraitsFromCollections:
initWithBundleIDs:channels:options:completionHandler:
_accessView
_channels
_privacyController
_bundleIDs
_hasCalledCompletion
_appInfos
_appChannels
_channelIds
_hasOptedIn
_shouldDenyOnCancel
_grantAccessToBundleIDs:
synchronizeSettingsFromCloudIfNeeded:
optInUser
forceUpdateWithCompletion:
setOptedIn:
setLastSyncDate:
subscribedAppBundleIdentifiers
orderedChannels
isWatchListEnabled
isFirstParty
settingsForChannelID:externalID:
accessStatus
errorWithDomain:code:userInfo:
vppaStatus
ams_sharedAccountStore
ams_activeiTunesAccount
ams_DSID
fetchConfigurationWithCompletionHandler:
grantAccessToBundleIDs:
eligibleBundleIDs
resolveBundleIDs:completionHandler:
initWithBundleIDs:options:completionHandler:
initWithChannels:options:completionHandler:
typeLabel
idLabel
idTypeLabel
impressionIdLabel
impressionIndexLabel
impressionParentIdLabel
impressionParentNameLabel
idStr
setIdStr:
setIdType:
setImpressionId:
setImpressionIndex:
impressionParentId
setImpressionParentId:
impressionParentName
setImpressionParentName:
setTypeLabel:
staticIDLabel
setStaticIDLabel:
setIdLabel:
setIdTypeLabel:
staticImpressionIdLabel
setStaticImpressionIdLabel:
setImpressionIdLabel:
staticImpressionIndexLabel
setStaticImpressionIndexLabel:
setImpressionIndexLabel:
staticImpressionParentLabel
setStaticImpressionParentLabel:
setImpressionParentIdLabel:
setImpressionParentNameLabel:
_typeLabel
_staticIDLabel
_idLabel
_idTypeLabel
_staticImpressionIdLabel
_impressionIdLabel
_staticImpressionIndexLabel
_impressionIndexLabel
_staticImpressionParentLabel
_impressionParentIdLabel
_impressionParentNameLabel
initPrivate
isTransitionAnimationEnabled
elementData
browserCellClass
browserViewController:willCenterOnViewElement:
browserViewController:didCenterOnViewElement:
browserViewController:shouldShowElement:
mediaInfoForElement:
documentControllerForElement:
_transitionAnimationEnabled
_calculateMetricsOfScorecard
CGSizeValue
setObject:atIndexedSubscript:
drawAtPoint:
topRowLayout
bottomRowLayout
setFill
backgroundBlendMode
separatorColor
separatorBlendMode
attribute:atIndex:effectiveRange:
drawWithRect:options:context:
boundingRectWithSize:options:context:
valueWithCGSize:
_calculateColumnSpacing
drawRect:
didCalculatedSize
setDidCalculatedSize:
scorecardSize
setScorecardSize:
interitemSpacing
rowScoreValueSizes
setRowScoreValueSizes:
columnWidths
setColumnWidths:
rowHeights
setRowHeights:
darkMaterialImage
setDarkMaterialImage:
delegateRespondsToBackgroundImageForScorecardViewMaterial
setDelegateRespondsToBackgroundImageForScorecardViewMaterial:
delegateRespondsToBackgroundBlendModeForScoreValueInRowAtIndex
setDelegateRespondsToBackgroundBlendModeForScoreValueInRowAtIndex:
_didCalculatedSize
_delegateRespondsToBackgroundImageForScorecardViewMaterial
_delegateRespondsToBackgroundBlendModeForScoreValueInRowAtIndex
_scoreboardLayout
_interitemSpacing
_rowScoreValueSizes
_columnWidths
_rowHeights
_darkMaterialImage
_scorecardSize
sportsScoreSpoilersAllowed
leagueContext
_showScoreboard
_canonicalId
_leagueContext
_scores
initWithMediaLibrary:mediaItem:requestedProperties:
_propertyValueForKey:
automaticallyNotifiesObserversForKey:
hasBeenPlayed
playCount
creationDate
modifiedDate
lastPlayedDate
previewFrameImageIdentifier
seasonTitle
rentalPlaybackDuration
_mediaItemWithMPMediaItem:
keyPathsForValuesAffectingPlayedState
assetType
setHasBeenPlayed:
setPlayCount:
setBookmark:
downloadExpirationDate
_isPlayable
connectionQueue
observers
_onConnectionQueue_startObservingIfIdle
_onConnectionQueue_stopObservingIfIdle
removeAllObservers
setConnectionQueue:
setObservers:
_connectionQueue
_observers
cardView
setCardView:
_setupElements:inCardView:
darkBackgroundColor
headerBadgeView
headerBadgeViewWithImageElement:layout:existingView:
headerImageViewWithString:layout:existingView:
headerTitleViewWithString:layout:existingView:
headerSubtitleLabel
headerSubtitleLabelWithString:layout:existingView:
sourceBadgeView
sourceBadgeViewWithImageElement:layout:existingView:
sourceLabel
sourceLabelWithString:layout:existingView:
ratingBadgeViewWithValue:layout:existingBadgeView:
descriptionView
descriptionViewWithElement:layout:existingView:
dataModels
headerTextView
descriptionTextView
descriptionTextViewWithString:layout:existingView:
setHeaderTextView:
setDescriptionTextView:
setDataModels:
setHeaderBadgeView:
setHeaderBadgeSize:
setHeaderSubtitleLabel:
setSourceLabel:
setSourceBadgeView:
setSourceBadgeSize:
setDescriptionView:
_cardView
insertSubview:below:
initWithBlurEffectStyle:
_image
vui_containsOnlyClips
vui_isNonPurchasedContent
bookmarkKey
setBookmarkKey:
uppRecord
setUppRecord:
_bookmarkKey
_uppRecord
initWithKeyValueStore:
_handleKeyValueStoreVersionDidChangeNotification
_handleKeyValueStoreDidResetNotification
defaultClient
_handleUPPRecordsDidChangeNotification
_handleUPPClientDidResetNotification
_applicationWillResignActive:
_nukePendingChangesAndNotify
initWithKey:
tvs_dateForKey:
setBookmarkTime:
setBookmarkTimestamp:
setHasBeenRented:
setIsMarkedAsUnwatched:
bookmarkTime
bookmarkTimestamp
hasBeenRented
isMarkedAsUnwatched
keyType
tvs_filenameSafeString
initWithIdentifier:keyType:
_keyValueStoreKeyForBookmarkKey:
objectsForKeys:
_bookmarkFromKey:kvsDictionary:
recordForBookmarkKey:
timestamp
laterDate:
_updateBookmarks:withBookmark:
bookmarkKeyForKeyValueStoreKey:
allRecords
itemIdentifier
decimalDigitCharacterSet
invertedSet
rangeOfCharacterFromSet:
bookmarksForKeys:
updateBookmark:sync:
_batchUpdate
numSyncsInProgress
setNumSyncsInProgress:
setSyncInProgress:
synchronizeWithCompletion:
setDateOfLastSyncCompletion:
dateOfLastSyncCompletion
timeIntervalSinceDate:
_resetForRetailWithCompletion:
_kvsDictionaryFromBookmark:
setObjectsInDictionary:
_writePendingToAppleTVKeyValueStore:
setupBookmarkService:
fetchAllBookmarksWithCompletionHandler:
bookmarkForKey:
pendingBookmarkForKey:
updateBookmark:
syncHasFinishedRecently
resetForRetailWithCompletion:
syncInProgress
_pending
_scheduledUpdate
_syncAfterUpdate
_updateQueue
_keyValueStore
_syncInProgress
_dateOfLastSyncCompletion
_numSyncsInProgress
setTimestamp:
setItemIdentifier:
writeItems:
setCardShowcaseFactor:
setCardInsets:
tv_setShowcaseFactor:
cardInsets
cardUIEnabled
setCardUIEnabled:
_cardUIEnabled
_cardInsets
_configureViewSubviews
bannerView
buttonViews
lastFocusedView
autoHighlightIdentifier
sortedArrayUsingComparator:
arrayWithArray:
tv_setShowcaseConfig:
setBannerView:
shouldAutoHighlight
setShouldAutoHighlight:
_shouldAutoHighlight
_bannerView
upsellView
_bgImageProxyFromElement:
setBgImageProxy:
setUpsellView:
setBgImageView:
_tvOS_updateViews
tv_adjustedWindowSize
tv_imageProxyWithLayout:
bgImageProxy
bgImageView
_backgroundImageProxySize
_configureWithBgImage:backdropImage:
_upsellView
_bgImageProxy
_bgImageView
_refreshEventDescriptor
initWithRefreshEventDescriptor:
genreIdentifiers
setGenreIdentifiers:
_genreIdentifiers
_genreTitle
_updateLayoutWithElement:andType:
_updateLayoutWithMediaItem:type:
interfaceStyleFromTheme:defaultInterfaceStyle:
_navBrickTitleLayout
_editorialTitleLayout
_spotlightTitleLayout
_ribbonTitleLayout
layoutWithLayout:overlayType:element:
layoutWithLayout:overlayType:mediaItem:
setOverlayType:
_isDarkTheme
_overlayType
imageNamed:
_resourceImageNamed:
arrayForKey:
generateResponseDictionary:withError:
doubleForKey:
integerForKey:
dictionaryForKey:
valueWithCompletion:
vui_registerAdditionalBagKey:withValueType:
dictionaryWithObjectsAndKeys:
convertNSErrorIntoDict:
registerBagKey:withValueType:
arrayForKeyWithCompletion::
boolForKeyWithCompletion::
doubleForKeyWithCompletion::
integerForKeyWithCompletion::
stringForKeyWithCompletion::
URLForKeyWithCompletion::
dictionaryForKeyWithCompletion::
VUIAMSBagValueTypes
setMenuDismissable:
presentViewController:fromViewController:options:completion:
isOptedIn
optInUserIfNeededAndRefreshConfig:
registerDeviceForCommerceOffers
initWithPrivacyIdentifier:
acknowledgePrivacy
addErrorBlock:
addSuccessBlock:
gdprFirstTimeFlowEnabled
gdprWhatsNewFlowEnabled
acknowledgementNeededForPrivacyIdentifier:
showGDPRWelcomeScreen:
acceptGDPRAndSyncWithServers:
_sharedInstance
_parseDatabase
_startMonitoringDatabaseFile
serialDispatchQueue
movieByIdentifier
_sortedEntitiesArray:
movieRentalByIdentifier
homeVideoByIdentifier
showByIdentifier
_addShow:
_addSeason:showIdentifier:
_addEpisode:showIdentifier:seasonIdentifier:
_addHomeVideo:
_addMovie:
_addMovieRental:
_saveWithError:
removeDownloadedMediaForIdentifier:
_removeEntityWithIdentifier:
entityForIdentifier:
updateEntity:propertyName:propertyValue:
episodeForIdentifier:
itemForIdentifier:
removeItemAtURL:error:
fileURL
saveToFileURL:error:
_dictionaryRepresentation
dataWithPropertyList:format:options:error:
URLByDeletingLastPathComponent
createDirectoryAtURL:withIntermediateDirectories:attributes:error:
writeToURL:atomically:
_addItem:itemByIdentifier:
_removeItem:itemByIdentifier:
_removeMovie:
_removeMovieRental:
_removeHomeVideo:
_removeShow:
_removeSeason:fromShow:
_removeEpisode:fromSeason:
path
getCString:maxLength:encoding:
setDatabaseFileDispatchSource:
_parseDatabaseAndSendNotification
addEntity:showIdentifier:seasonIdentifier:
removeEntityWithIdentifier:
updateEntityWithIdentifier:propertyName:propertyValue:
setFileURL:
setSerialDispatchQueue:
databaseFileDispatchSource
setHomeVideoByIdentifier:
setMovieByIdentifier:
setMovieRentalByIdentifier:
setShowByIdentifier:
_fileURL
_serialDispatchQueue
_databaseFileDispatchSource
_homeVideoByIdentifier
_movieByIdentifier
_movieRentalByIdentifier
_showByIdentifier
postNotificationName:object:userInfo:deliverImmediately:
cStringUsingEncoding:
vui_wasSentByDifferentProcess:
setHighlightedTextColor:
attribute:atIndex:longestEffectiveRange:inRange:
setBaseWritingDirection:
attributesAtIndex:effectiveRange:
_updateCompositingFilter
_firstBaselineOffsetFromTop
_baselineOffsetFromBottom
numberOfLinesRequiredForTextWidth:
lineHeight
topMarginWithBaselineMargin:maximumContentSizeCategory:
bottomMarginWithBaselineMargin:maximumContentSizeCategory:
_updateTextColor
setHighlighted:
_updateTextColor:
labelWithAttributedString:textLayout:existingLabel:
requiresMoreThanOneLineForTextWidth:
setSelected:animated:
labelName
setLabelName:
_selected
_lastSelectedOrHighlighted
_labelName
_parseRawGenreResults:
subtitleBaselineMargin
offerCardPadding
setShadowOffset:
setShadowBlurRadius:
setShadowColor:
setLogoLayout:
setChannelNameTextLayout:
setTitleTextLayout:
setSubtitleTextLayout:
setBelowCardTextLayout:
setTagsLayout:
setVersionsButtonLayout:
_appIconLayout
_logoLayout
_channelNameTextLayout
_subtitleTextLayout
_belowCardTextLayout
_tagsLayout
_versionsButtonLayout
_borderWidth
_borderColor
initWithAddedEntityIDs:removedEntityIDs:
addedEntityIDs
removedEntityIDs
minusSet:
initWithAction:entityID:
coalescedEvent:
setAddedEntityIDs:
setRemovedEntityIDs:
_addedEntityIDs
_removedEntityIDs
vui_showPersistentIDPredicate:comparison:
vui_seasonNumberPredicate:comparison:
_vui_isPlayablePredicate:
_vui_isNetworkPlayablePredicate:
vui_mediaEntityTypePredicate:comparison:
vui_seasonIdentifierPredicate:comparison:
vui_isPlayablePredicate:comparison:
vui_restrictionsPredicateWithMediaEntityType:mediaLibrary:
vui_mediaPropertyPredicateComparisonWithPredicateOperatorType:
vui_mediaPropertyPredicateWithProperty:predicateOperatorType:value:
currentView
_logNameForContentViewType:
rootView
noContentErrorTitle
noContentErrorMessage
_createAlertViewWithTitle:description:
setContentHasBeenDeleted:
setCurrentView:
contentHasBeenDeleted
contentHasBeenManuallyDeleted
setContentHasBeenManuallyDeleted:
deletedContentErrorMessage
setDeletedContentErrorMessage:
setRootView:
_contentHasBeenDeleted
_contentHasBeenManuallyDeleted
_currentContentViewType
_currentView
_contentView
_noContentErrorTitle
_noContentErrorMessage
_deletedContentErrorMessage
_logName
_rootView
informationView
overlayViewWithMediaItem:overlayType:existingView:
setInformationView:
_shouldAddInfoViewToPoster
setMediaItem:
_postConfigurationSetup
tv_styleMetrics
imageStackViewWithElement:layout:existingView:
setImageViewElement:
informationViewElement
setInformationViewElement:
components
selectionMarginsForSize:
_focusableContentMargins
_setFocusableContentMargins:
addCoordinatedFocusingAnimations:completion:
_imageViewHandler:
_informationViewHandler:
setZPosition:
setPress:
_addTapGestureRecognizersForImageView
_addTapGestureRecognizersForInformationView
searchArea
coordinateSpace
convertRect:toCoordinateSpace:
initWithFrame:item:
addRegion:
_window
_searchForFocusRegionsInContext:
configureWithElement:existingView:
animateWithAuxiliarySelectionState:animations:
isFocusWithinCell
setIsFocusWithinCell:
imageViewElement
press
mediaItem
_isFocusWithinCell
_selectingView
_imageViewElement
_informationViewElement
_press
_mediaItem
_informationView
setContentEdgeInsets:
constraintGreaterThanOrEqualToConstant:
_updateForPreferredContentSize
_contentSizeCategoryDidChange
invalidateIntrinsicContentSize
_isLargeContentSize
setConstant:
hasIAP
_lastOrientation
_hasIAP
secondaryTextLayout
setStackView:
vui_collectionInteritemSpace:gridType:
postModeBannerLayout
preModeBannerLayout
backgroundImageLogos
bannerStyle
imageSizeForBannerStyle:
isPreModeBanner
backgroundView
setBackgroundView:
setBackgroundImageLogos:
isDisabled
setBannerLayout:
configureCellWithElement:existingCell:
bannerLayout
_bannerLayout
_width
sharedManager
downloadForStoreID:
_stateFromStoreDownload:
initWithMediaItem:state:serialProcessingDispatchQueue:
_addStoreObserver
_removeStoreObserver
storeDownload
isRestore
_onProcessingQueue_invalidate
setStoreDownload:
cancelDownloads:
pauseDownloads:
resumeDownloads:
_setState:
percentComplete
bytesTotal
phaseIdentifier
failureError
purchaseError
setDownloadSucceeded:
addObserver:forDownloads:
removeObserver:forDownloads:
downloadManager:didAddDownloads:removeDownloads:
downloadManager:didAddActiveDownloads:removeActiveDownloads:
downloadManager:downloadDidFinish:
downloadManager:downloadDidProgress:
downloadManager:downloadPurchaseDidFinish:
downloadManager:downloadsDidProgress:
downloadManagerNetworkUsageDidChange:
isRestoreDownload
_onProcessingQueue_cancelDownload
_onProcessingQueue_pauseDownload
_onProcessingQueue_resumeDownload
_storeDownload
tv_setStyleMetrics:
vui_itemWidthForGridStyle:gridType:numGridColumns:
offerCardElementHeightForWidth:subtitleElement:withFocusedText:
cardHeightForElementType:width:
lockupSizeForElement:
isPartOfPrototypeElement
setPrototype:
initWithColor:
_cornerRadiusWithStyle:
setBorderRadius:
setAppStylesForElement:
_interfaceIdiom
_registerPlayerObserver
_registerPlaybackNotifications
_updateMetadataForCurrentMediaItem
_unregisterPlayerObserver
_unregisterPlaybackNotifications
isCurrentMediaATVShow
maximumAutoPlayableItems
minAutoPlayStopTime
_handleMediaItemDidChangeNotification:
_handleMetadataDidChangeNotification:
_metaDataInfoFromMediaItem:
setCurrentMediaType:
setShowCanonicalID:
setCurrentMediaATVShow:
setMetadata:
isLivePlayback
setLivePlayback:
logoImageDownloader
setLogoImageDownloader:
ratingImage
setRatingImage:
_includesProductPageButton
_livePlayback
_currentMediaATVShow
_metadata
_currentMediaType
_showCanonicalID
_autoPlayedEpisodesCount
_initialPlaybackStartDate
_logoImageDownloader
_ratingImage
initWithRevision:
setRevision:
_revision
setIsSubscribed:
setDescriptionPreferredOnPhoneSizeClass:
contentSizeCategoryIsAccessibility:
textLabels
bgImageLayout
isSubscribed
textViewWithElement:textLayout:existingTextView:
disclaimerTextLabel
subscribeButtonLayout
subscribeButton
buttonWithElement:layout:interfaceStyle:existingButton:
setDisableFocus:
setBackdropMaskFactor:
setTextLabels:
setSubscribeButton:
setDisclaimerTextLabel:
configureViewWithElement:existingController:
loadArtworkInfoForPurchaseHistoryIDs:completionHandler:
setAllowedTouchTypes:
setBounces:
_downArrowAction:
_setButtonType:
_upArrowAction:
contentOffset
contentSize
_tapScrollDelta
setContentOffset:animated:
itemSize
configureWithElement:existingButton:
addedStateView
removedStateView
tv_isResource
tv_resourceImage
updateButtonContentView
callAPIAndToggleUpNextState
dismissOnSelect
upNextStateChangedToAdded
upNextStateChangedToRemoved
intrinsicContentSize
stackViewWidthConstraint
setStackViewWidthConstraint:
_stackViewWidthConstraint
_openPunchoutURL:isPlaybackURL:
defaultWorkspace
openURL:withOptions:error:
setExitEventDestinationUrl:
punchoutURLWithoutAssociatedPlayable
_punchoutURLWithoutAssociatedPlayable
_mediaEntityPropertyDidChange:
coverArtURL
setContentDescription:
setCoverArtURL:
_contentDescription
_coverArtURL
initWithDeleteID:caller:isContinueWatching:
ongoingDeleteIDOperationDictionary
sendRequestForDeleteID:canonicalID:isContinueWatching:
setOngoingDeleteIDOperationDictionary:
_ongoingDeleteIDOperationDictionary
_startProgressTimer
setSuccess:
_stopProgressTimer
connectWithCompletionHandler:
setProgressTimer:
connectionProgress
_notifyClientOfProgress:
progressTimer
progressBlock
setProgressBlock:
_progressTimer
_cardLayoutTypeForElement:
cardLayoutType
gridType
cardViewFactoryForType:gridStyle:gridType:
setLayoutFactory:
detailsTextLayout
hideFloatingBackground
setCardView:force:
viewWithExistingView:bounds:focused:subview:hideShadow:
cardCellWithElement:existingCell:
initWithDocumentServiceRequest:loadImmediately:documentRef:viewControllerIdentifier:viewControllerDocumentIdentifier:
addedToDate
mediaItemCount
_identifierPredicateWithIdentifier:
_minimalPropertiesFetchRequestWithType:
_minimalMoviesPropertiesFetchRequest
_minimalMovieRentalsPropertiesFetchRequest
_minimalShowsPropertiesFetchRequest
_seasonsFetchRequestWithShowIdentifier:
_seasonsFetchRequestWithSeasonIdentifier:
_episodesFetchRequestWithSeasonIdentifier:showIdentifier:
_addedDateSortDescriptor
_addedToDateSortDescriptor
_anyHDRColorCapabilityPredicate
_addPredicate:
_any4KResolutionPredicate
_predicateWithSubpredicates:compoundPredicateType:
_isLocalPredicate
_isEqualPredicateWithAdamId:
_isInPredicateWithAdamId:
_includeSortIndexesOptions
_titleSortDescriptor
_showIdentifierPredicateWithIdentifier:
_seasonNumberSortDescriptor
_seasonIdentifierPredicateWithIdentifier:
_episodeNumberSortDescriptor
titleSortComparatorWithAscending:
vui_inPredicateWithKeyPath:value:
numberWithUnsignedLong:
vui_keyPathBitTestPredicateWithKeyPath:value:
_resolutionPredicateWithResolution:
_HLSResolutionPredicateWithResolution:
addSortIndexesOption
addGroupingSortIndexesOption
addHDRColorCapabilityPredicate
add4KResolutionPredicate
addIsLocalPredicate
addAdamIdsPredicate:
mediaEntityFetchRequestWithIdentifier:
seasonsFetchRequest
seasonsFetchRequestWithShowIdentifier:
seasonsFetchRequestWithSeasonIdentifier:
episodesFetchRequest
episodesFetchRequestWithSeasonIdentifier:
episodesGroupedBySeasonIdentifierFetchRequestWithShowIdentifier:
_releaseYearSortDescriptor
_releaseDateSortDescriptor
_showTitleSortDescriptor
_handleSettingsDidChange:
flowWithBundle:
contentVersion
privateModeEnabled
initWithError:appContext:
watchListApps
JSONDictionary
consentedBrands
deniedBrands
updateWithDictionary:
privacyFlowContentVersion
forceUpdateWithCallback:
appSettingsByChannelID
userPreferences
wlkOverrides
updateFeaturesConfiguration:
fetchRequestWithEntityName:
initWithFetchReason:fetchResponses:
setFetchReason:
setFetchResponses:
_fetchReason
_fetchResponses
_handleAppLibChange:
_handleServerConfigChange:
_handlePlaybackReport:
wlk_stringForKey:
wlk_dictionaryForKey:
_requestOptionsFromJSOptions:
requestPropertiesWithEndpoint:queryParameters:httpMethod:headers:caller:timeout:options:
initWithRequestProperties:
setAuthenticationDelegate:
_enqueueNetworkOp:withJSCallback:
jsContext
initWithQueryParameters:
wlkDefaultConcurrentQueue
operations
setSuppressServerConfigNotifications:
responseDictionary
fetchConfigurationWithOptions:cachePolicy:queryParameters:completion:
substringToIndex:
shortDescription
httpResponse
processResponseData:error:
responseStatusCode
initWithRequest:presentingViewController:
present
addFinishBlock:
performAuthentication
_connection
remoteObjectProxyWithErrorHandler:
JSONRepresentation
requestPlaybackSummaryForID:completion:
initWithMachServiceName:options:
setExportedInterface:
setExportedObject:
setRemoteObjectInterface:
setInterruptionHandler:
setInvalidationHandler:
makeRequest::
makeUpNextRequest::
cancelRequest:
fetchConfiguration::
invalidateConfiguration
AMSURLSession:task:handleDialogRequest:completion:
AMSURLSession:task:handleAuthenticateRequest:completion:
suppressServerConfigNotifications
_suppressServerConfigNotifications
initWithValidShelfTypes:
_addRentalsUpdateNotificationObserver
_removeRentalsUpdateNotificationObserver
_dataSourceForShelves
setDataSourcesByShelfType:
shelfTypes
shelvesDelegate
shelvesDidFinishWithDataSource:
_updateRentalShelf
dataSourcesByShelfType
initWithValidShelfTypes:forMediaLibrary:
fetchedDataSources
setFetchedDataSources:
_fetchedDataSources
initWithPersistentID:seasonNumber:
_seasonNumber
_menuItems
_configureSubviews
metaDataView
buttonHandler
setImageTrailsTextContent:
setButtonViews:
imageWithRenderingMode:
setMetaDataView:
setVisualEffectView:
userInteractionEventHandler
hudModel
setHudModel:
setButtonHandler:
_viewsMap
_hudModel
_metaDataView
_buttonViews
_buttonHandler
_userInteractionEventHandler
_buttonTapped:eventName:
_unregisterTransactionNotifications
_layoutProgressIndicatorIfNeeded
_transactionBuyParams
isTransactionInProgressForBuyParams:
setMonitorTransaction:
_handleTransactionDidStartNotification:
progressIndicator
_updateProgressIndicatorTintColor:
monitorTransaction
_addProgressIndicatorWithFrame:
_registerForTransactionNotification
setProgressIndicator:
buttonContent
controlState
isWaitingForTransactionToStart
setWaitingForTransactionToStart:
setIndeterminate:
_handleTransactionDidFinishNotification:
textContentTitleBackup
setTextContentTitleBackup:
_waitingForTransactionToStart
_monitorTransaction
_progressIndicator
_textContentTitleBackup
_updateBackgroundImage
VideosUIBundle
imageNamed:inBundle:
resizableImageWithCapInsets:resizingMode:
insertSubview:aboveSubview:
shouldFocusUpNext
_doesCollectionViewHasItems
setShouldFocusUpNext:
indexPathForItem:inSection:
backgroundImageView
gradientImageView
visibleCells
scrollToItemAtIndexPath:atScrollPosition:animated:
setUpNextFocused:
_watchNowBannerScrollStop
numberOfSections
numberOfItemsInSection:
initWithRect:withStyle:
insertSublayer:atIndex:
updateStyle:
shouldAdjustForTabBarSafeAreaInsets
setBackgroundImageView:
backgroundImageGradientLayer
setBackgroundImageGradientLayer:
setGradientImageView:
_shouldFocusUpNext
_upNextFocused
_backgroundImageView
_backgroundImageGradientLayer
_gradientImageView
setSupplementary:
setStorageIdentifier:
wallpaperViewForUserInterfaceStyle:variant:
sharedBlurRenderer
uiImage
blurRenderer:renderImage:blurStyle:targetSize:blurRadius:
loadingImageView
load
defaultSizeForStyle:
setAllowsGroupOpacity:
setAllowsGroupBlending:
_showSpinner
insertSubview:above:
_controllerDidDisplay:
_hideExtrasLoadingImageView
loadingVisualEffectView
loadingSpinnerView
stopAnimating
extrasDidPushRoot
_hideSpinner
appNavigationControllerWillDisappear:
_extrasDidPushRoot
_loadingImageView
_loadingVisualEffectView
_loadingSpinnerView
playedThresholdTimeForDuration:
playedStateForDuration:elapsedTime:hasBeenPlayed:playCount:respectPlayCount:
suggestedBookmarkTimeForElapsedTime:duration:
playerIsLive:
_parseFamilyMemberIdentifierFromDictionary:withKey:
_processRawFamilyMemberResults:
_filterCurrentFamilyMember:fromResults:
setFirstName:
setLastName:
setMemberIdentifier:
setSharingPurchases:
offerType
_localize:token:value:
subscriptionType
introOfferPeriod
renewalPeriod
specialOfferEligible
freeTrialPeriod
_locKeyForPeriod:
formattedPrice
appendString:
vui_subscriptionOfferButtonText
vui_subscriptionOfferDisclaimerText
deleteID
setDeleteID:
isContinueWatching
setIsContinueWatching:
_isContinueWatching
_deleteID
vui_paddingForElement:
vui_currentSizeClassForElement:
_safeAreaInsetsForDeviceWithElement:
_paddingForSizeClass:safeArea:
vui_currentSizeClassForWindowWidth:
_safeAreaInsetsForDeviceWithWindowWidth:
vui_itemWidthForGridStyle:gridType:numGridColumns:element:
_adjustedWindowSizeFor:
_vui_itemWidthForGridStyle:gridType:numGridColumns:windowWidth:sizeClass:padding:
vui_paddingForWindowWidth:
_vui_interitemSpaceForSizeClass:gridType:
libraryCategoryListWidth
vui_collectionInteritemSpace:gridType:withElement:
tv_isPresentedModal
_vui_currentSizeClassForWindowWidth:safeArea:
vui_keyWindow
_layoutTypeIsPortrait
horizontalSizeClass
windows
windowScene
interfaceOrientation
vui_paddingForSizeClass:
vui_itemWidthForGridStyle:gridType:numGridColumns:windowWidth:
vui_isCompactSize:
vui_layoutType
_buildButtonStack
arrayWithObject:
_buildSeeAllButtonStack
darkGrayColor
arrayWithObjects:
_enumerateDescendentViews:
insertObject:atIndex:
constraintLessThanOrEqualToConstant:
_contentGuide
_contentStack
_seeAllButtonStack
_buttonStack
showArtworkURLFormat
showArtworkWidth
showArtworkHeight
showCanonicalId
_metadataDictionary
_contentTypeMap
vui_isHomeShareMediaLibrary
initWithMPMediaLibrary:type:manager:
initWithIdentifier:type:manager:
_handleMediaLibraryIsUpdateInProgressDidChangeNotification:
_handleApplicationDidBecomeActiveNotification:
_handleApplicationWillResignActiveNotification:
_storeMediaItemRentalExpirationUpdated:
_isUpdateInProgress
_isInitialUpdateInProgress
updateJaliscoMediaLibraryWithReason:completionHandler:
enqueueMediaItemEntityTypesFetchWithCompletionHandler:
saveMediaEntity:completionHandler:
becomeActive
resignActive
setValue:forProperty:
isUpdating
updateProgressWithCompletionHandler:
updateFromCloudWithReason:
eventByEventDescriptor
addEvents:
vui_setOrRemoveObject:forKey:
addEvent:
removeAllEvents
setEventByEventDescriptor:
_eventByEventDescriptor
textViewWithString:textLayout:titleString:titleLayout:existingTextView:
computationLabel
setComputationLabel:
appendAttributedString:
tv_maxTextLines
setSelectionHandler:
setPlayHandler:
textViewWithElement:textLayout:titleElement:titleLayout:existingTextView:
textViewWithString:textLayout:existingTextView:
_computationLabel
setClearPreviousImageBeforeLoading:
automaticallyProvidesMediaController
identifierKeyPath
valueForKeyPath:
sortIndexKeyPath
groupsSortComparator
performDefaultSort
ascendingTitleSortComparator
transformedValueClass
allowsReverseTransformation
setIdentifierKeyPath:
_performDefaultSort
_identifierKeyPath
_sortIndexKeyPath
_groupsSortComparator
query
vui_parsedQueryParametersDictionary
forceGDPRConsentStatus:
fetchAndPresentOffer:sourceEvent:
showSignupAlertPushNotificationWithAppContext:
contextData
_contextData
orderedSet
mediaItemEntityTypes
areLocalMediaItemsAvailable
mediaItemEntityTypesChangeSet
vui_applyChangeSetIfAvailable:destinationObjects:replaceContentsOnNilChanges:
orderedSetWithArray:
localMediaItemsAvailableDidChange
_localMediaItemsAvailable
_mediaItemEntityTypes
initWithMediaInfo:player:avPlayerViewController:
_avPlayerViewController
_player
_mediaInfo
eventDataSourceWithEventDict:viewElement:
setSelectEventDataSource:
setPlayEventDataSource:
setContextMenuEventDataSource:
_selectEventDataSource
_playEventDataSource
_contextMenuEventDataSource
tableView:heightForRowAtIndexPath:
uuid
_installAppWithChannel:completion:
contentTitle
setInstallerViewController:
initWithChannelDetails:contentTitle:
installAppWithCompletion:
setChannelDetails:
setContentTitle:
installerViewController
accessViewController
setAccessViewController:
setUuid:
_channelDetails
_contentTitle
_installerViewController
_accessViewController
_uuid
_errorInUpdatingState:
setIsWatchListed:
setDismissOnSelect:
isWatchListed
_toggleUpNextState
_dismissOnSelect
_isWatchListed
_addedStateView
_removedStateView
_keyForInstallable:size:
_cachedImageForKey:
_imageURLForInstallable:size:
dataWithContentsOfURL:options:error:
imageWithData:scale:
_cacheImage:forKey:
appIconURLForSize:
_MD5StringForString:
UTF8String
stringWithCapacity:
_cachePath
fileExistsAtPath:
createDirectoryAtPath:withIntermediateDirectories:attributes:error:
stringByAppendingPathComponent:
stringByExpandingTildeInPath
writeToFile:options:error:
initWithData:scale:
databaseSeason
coverArtImageIdentifier
initWithImageURL:baseImageIdentifier:imageType:
_valueForPropertyDescriptor:
setDatabaseSeason:
_databaseSeason
_scaledBadgeSizeWithImageLayout:traitCollection:
headerBadgeSize
sourceBadgeSize
prototypeSubtitleLabel
setPrototypeSubtitleLabel:
prototypeHeaderLabel
setPrototypeHeaderLabel:
_headerSubtitleLabel
_headerBadgeView
_sourceLabel
_sourceBadgeView
_descriptionView
_prototypeSubtitleLabel
_prototypeHeaderLabel
_headerBadgeSize
_sourceBadgeSize
setCachesPropertiesOnFirstAccess:
assetController
setMediaItemCollection:
_coverArtImageIdentifier
_mediaItemCollection
textView
setTextView:
setEventDescriptors:
setRefreshTimerFiredBlock:
_cancelAllRefreshTimers
refreshTimerByEventDescriptor
_refreshTimerWithRefreshTimeEventDescriptor:
_startRefreshTimer:
_cancelRefreshTimers:
setRefreshTimerByEventDescriptor:
refreshTimerFiredBlock
_cancelRefreshTimer:
eventDescriptors
_eventDescriptors
_refreshTimerByEventDescriptor
_refreshTimerFiredBlock
weakToStrongObjectsMapTable
_handleSettingsDidChangeNotification:
_handleAppLibraryDidChangeNotification:
_handleUpNextRequestDidFinishNotification:
_handlePurchaseFlowDidFinishNotification:
_handleSubscriptionDidChangeNotification:
_handleFavoritesRequestDidFinishNotification:
_handleRemoveFromPlayHistoryRequestDidFinishNotification:
_handleClearFromPlayHistoryRequestDidFinishNotification:
_handleAccountDidChangeNotification:
_handleRestrictionsDidChangeNotification:
_handleUTSKDidChangeNotification:
_handlePreferredVideoFormatDidChangeNotification:
_handlePlayHistoryUpdatedNotification:
_handleLocationAuthorizationDidChangeNotification:
_handleLocationDidChangeNotification:
_handleAppWillEnterForegroundNotification:
_handleAppDidEnterBackgroundNotification:
_handlePurchaseRequestSucceededNotification:
_handleAppDidBecomeActive:
_handleNowPlayingWillStartNotification:
_handleNowPlayingDidEndNotification:
_handlePostPlayUpNextShouldUpdateNotification:
_handleClearPlayHistoryNotification:
_handleXPUpNextRequestDidFinishNotification:
_handleXPPurchaseFlowDidFinishNotification:
_handlePlaybackReportNotification
observerMapTable
_notifyObserver:ofRefreshEvent:
lastAppDidBecomeActive
_notifyObserversOfEvent:
setLastAppDidBecomeActive:
initWithCanonicalID:
vui_errorForKey:
initWithAction:canonicalID:
lastProcesssedPlayActivity
setLastProcesssedPlayActivity:
mediaTypesExcludedFromReporting
allUsers
activeUsers
updateLocationIfNeeded
getLastInterruptedOfferDetails
unarchivedObjectOfClasses:fromData:error:
purchase
extractSalableAdamIDFromBuyParams:
_postPurchaseNotification:error:
_postSubscriptionNotification:interruptedOfferDetails:error:
setLastInterruptedOfferDetails:
appDocumentDidReceiveEvent:
keyEnumerator
_isAppRefreshEventType:
appDocumentHasBecomeActive
displayConfirmationNotificationWithTitle:andBody:forChannelName:
sharedMonitor
addObserver:forEventDescriptors:
_handleEntitlementsDidChangeNotification:
_handleIAMMessageDidReceiveNotification:
setObserverMapTable:
playbackReportToken
setPlaybackReportToken:
_appIsInForeground
_pendingPlayactivity
_ignoreWLKPlaybackReportNotification
_observerMapTable
_lastProcesssedPlayActivity
_lastAppDidBecomeActive
currentEnvironment
DSID
_isChannelVPPAPromptEligible:
_isVPPAPromptDueForConfig:
_presentVPPAConsentScreen:vppaState:completion:
isConsented
vppaStatusString
vppaSessionDurationInMillis
_isReminderDue:reminderInterval:
_getVPPABulkChannels:
_getEligibleBulkChannels
addUniqueChannels:channels:
username
_rootViewController
_getConsentedChannels
_getDeniedChannels
channelAlreadyExists:channelID:
channelForID:
isiTunes
rootViewController
startVPPAConsentFlow:completion:
_updateTextColorForDisclaimerLayout:hasBgImage:
_updateTextColorForDescriptionLayout:hasBgImage:
setBlurEnabled:
descriptionPreferredOnPhoneSizeClass
setChannelLogoLayout:
setDescriptionTextLayout:
setDisclaimerTextLayout:
setSubscribeButtonLayout:
setBgImageLayout:
_isSubscribed
_descriptionPreferredOnPhoneSizeClass
_subscribeButtonLayout
_bgImageLayout
setAllowsSelectionDuringEditing:
setAllowsMultipleSelectionDuringEditing:
isEditing
finishValidation
setEditing:animated:
rightBarButtonItem
indexPathsForSelectedRows
rawEvent
cellForRowAtIndexPath:
greenColor
dequeueReusableCellWithIdentifier:
eventType
sortedPageKeys
sortedPrimaryKeys
_formatKeyAndValue:fromEvent:
eventDate
pageContext
rawData
allEvents
visibleEvents
setButtonsInHeader:
setButtonsInHeaderSelected:
_buttonClicked:
setSelected:
setExclusiveTouch:
setTag:
buttonsInHeader
buttonsInHeaderSelected
beginUpdates
setVisibleEvents:
indexSetWithIndex:
reloadSections:withRowAnimation:
endUpdates
toggleValidationMode
tableView:viewForHeaderInSection:
setAllEvents:
_visibleEvents
_allEvents
_buttonsInHeader
_buttonsInHeaderSelected
format
setFormat:
_height
_format
ratingImageProxy
isLoading
setRatingImageProxy:
downloadImageWithURL:imageInfo:completion:
_ratingImageProxy
setCountLimit:
setPropertyDescriptorsByName:
propertyDescriptors
propertyDescriptorsByName
mediaEntityClassName
_mediaEntityClassName
_propertyDescriptors
_propertyDescriptorsByName
axisFollowsDeviceOrientation
alignmentFollowsDeviceOrientation
lastOrientation
setLastOrientation:
_axisFollowsDeviceOrientation
_alignmentFollowsDeviceOrientation
downloadSucceeded
setDownloadInProgress:
_downloadSucceeded
_downloadInProgress
badgeDummyLabel
setBadgeDummyLabel:
_badgeDummyLabel
_descriptionTextView
whitespaceCharacterSet
stringByTrimmingCharactersInSet:
_vui_updateEventDescriptorWithType:
_parseElementIfNecessary
vui_title
vui_description
vui_imageURL
_backgroundImageProxyFromImageElement:
videosPlayables
familyMembersRequest
setFamilyMembers:
_orderFamilyMembersByFirstName
familyMembers
localizedCaseInsensitiveCompare:
initWithKey:ascending:selector:
sortUsingDescriptors:
_familyMembers
_MPMediaEntityImageLoadParams
hasImageOnDisk
bestImageFromDisk
_finishWithImage:
imageWithCGImageRef:preserveAlpha:
initWithParams:scaleToSize:
setAsyncWorkToken:
didMoveToSuperview
_configureProgressLayer
_setProgress:animated:
_stopAutoAnimation
progressInset
progressLayer
backgroundImageInset
backgroundLayer
centerLayer
displayLink
setDisplayLink:
setStrokeColor:
_configureBackground
progressTintColor
progressWidth
setLineWidth:
setProgressLayer:
centerImage
setClipsSubviews:
setBackgroundLayer:
setCenterLayer:
insertSublayer:above:
_animateValueOnDisplayLink:
displayLinkWithTarget:selector:
currentRunLoop
addToRunLoop:forMode:
autoFillDelta
setAutoFillDelta:
isAnimating
progress
bezierPathWithArcCenter:radius:startAngle:endAngle:clockwise:
CGPath
setPath:
initWithFrame:duration:
setProgressTintColor:
setCenterImageInset:
setCenterImage:
setBackgroundTintColor:
setProgress:animated:
setProgressWidth:
setProgressInset:
setBackgroundImageInset:
backgroundTintColor
centerImageInset
centerTintColor
setCenterTintColor:
progressMaskLayer
setProgressMaskLayer:
centerImageView
setCenterImageView:
autoFillStartTimeStamp
setAutoFillStartTimeStamp:
_animating
_progressWidth
_progressTintColor
_backgroundImage
_backgroundTintColor
_centerImage
_centerTintColor
_backgroundLayer
_centerLayer
_progressLayer
_progressMaskLayer
_displayLink
_progress
_autoFillDelta
_centerImageView
_autoFillStartTimeStamp
_progressInset
_backgroundImageInset
_centerImageInset
wlk_mediaItemForStoreIdentifierString:
time
setTime:
notifiedOfEntry
setNotifiedOfEntry:
token
setToken:
_notifiedOfEntry
_time
_token
repeatingTimer
setRepeatingTimer:
oneTimeTimer
setOneTimeTimer:
startDate
setStartDate:
backgroundedDate
setBackgroundedDate:
_repeatingTimer
_oneTimeTimer
_startDate
_backgroundedDate
_cleanUpEverything
featureMonitor:featureDidChangeState:animated:
featureMonitor:activeFeatureDidChangeFrom:toFeature:animated:
_unregisterPlaybackStateNotification
_processAnyTimeBoundFeatures
_registerPlaybackStateChangeNotification
_updateBoundaryObserverForFeature:change:
features
_processFeature:
featureDependencies
isActive
shouldAutoRemove
setAutoRemove:
setUserInfo:
objectsPassingTest:
anyObject
featureLastRequestedUI
playbackManager
onSupplementaryUIShouldDismiss
_shouldAnimateFeature:
_deactivateFeature:animated:
_cleanupFeature:
_cancelTimerForFeature:
_isTimerFeatureExpired:
featureTimers
_removeAllObservedTokensForFeature:
_isTimeBoundFeature:
featuresForType:
removeFeature:
currentUIMode
_isHybridFeature:
activationType
setActivationType:
_processUserTriggeredFeature:activate:animated:
observingElapsedTime
setObservingElapsedTime:
_startObservingElapsedTime
startTime
setStartTime:
isSkippable
setSkippable:
_activeFeatures
_processTimeBoundFeature:
_isTimerTriggeredFeature:
_processTimerTriggeredFeature:
advisoryDisabledTimeRanges
setAdvisoryDisabledTimeRanges:
_isUserTriggeredFeature:
_isTVAdvisoryFeature:
_activeFeature
setFeatureLastRequestedUI:
_removeTimeObservingForFeature:withStartTime:
_playbackStateChangedNottificaiton:
elapsedTime
containsTime:
initWithStartTime:endTime:
_processElapsedTime:
addElapsedTimeObserver:
elapsedTimeObserverToken
removeElapsedTimeObserverWithToken:
setElapsedTimeObserverToken:
lastProcessedElapsedTime
setLastProcessedElapsedTime:
elapsedTimes
_processLastElapsedTime
indexSetWithIndexesInRange:
removeObjectsAtIndexes:
_timeBoundFeatures
_observerInfoForFeature:matchingTime:
_isElapsedTimeWithinFeatureTimeWindow:
_hasActiveFeaturesInArray:
_scheduleDeactivationOfTimeBoundFeature:
_activateFeature:animated:completion:
_needsUIForFeature:
onSupplementaryUIShouldPresent
_addTimeObservingForFeature:withStartTime:andHandler:
deactivateFeature:animated:
featureTokens
featureBoundaryInfos
_addObservedToken:forFeature:
arrayByAddingObject:
repeats
initWithKeyOptions:valueOptions:capacity:
setFeatureTimers:
nextObject
mapTableWithKeyOptions:valueOptions:
_setupTimerFeatureExpiration
_expireTimerFeaturesIfNeeded
mediaPlaybackManager:shouldHideUI:animated:animations:completion:
mediaPlaybackManager:shouldEnableUIModeImplicitly:
presentForegroundPlaybackControllerForMediaPlaybackManager:
evaluateSwipeUpMessageForMediaPlaybackManager:
allFeatures
addFeature:
addFeature:withDependencyToPreferredFeatures:
activeFeatureForType:
removeFeaturesMatching:
enableUIMode:enabled:
_hasAnyActiveFeature
_shouldActivateTimeBoundFeatureInitially:
setFeatures:
setFeatureDependencies:
setFeatureTokens:
setFeatureBoundaryInfos:
boundaryTimeObserverInfos
setBoundaryTimeObserverInfos:
setElapsedTimes:
_observingElapsedTime
_playbackManager
_features
_featureDependencies
_featureTokens
_featureBoundaryInfos
_featureTimers
_featureLastRequestedUI
_lastProcessedElapsedTime
_boundaryTimeObserverInfos
_elapsedTimeObserverToken
_elapsedTimes
setVideoType:
hasTrait:
iTunesMaxHLSVideoResolution
assetIDForStopping
_sendStopForAssetID:
setAssetIDForStopping:
loadingContext
setLoadingContext:
_assetIDForKeyRequest:
_certificateURLForKeyRequest:
_startKeyRequests:token:
_loadCertificateDataFromURL:loadingContext:attemptNumber:completion:
_fetchTokenForAssetID:completion:
_parseCertificateURL:keyServerURL:assetID:fromKeyRequest:
tvp_dataFromHexString
port
setScheme:
setPort:
initWithFormat:
sharedSession
initWithBase64EncodedData:options:
_allowedToRetryRequestForError:response:
_randomRetryDelayForFailedAttemptNumber:
dataTaskWithURL:completionHandler:
_sendKeyRequestsToServer:token:
_assetIDDataForKeyRequest:
tokenServerParameters
isValidJSONObject:
deviceGUID
stopServerURL
_linearServiceRequestForURL:assetID:
_keyServerURLForKeyRequest:
_sendURLRequestToServer:forKeyRequest:attemptNumber:
loadFairPlayStreamingKeyRequests:
updateOfflineKeyWithIdentifier:updatedOfflineKeyData:
isEqualToMediaItem:
cleanUpMediaItem
setUrl:
setTokenServerURL:
setStopServerURL:
setTokenServerParameters:
_disableScrubbing
_url
_tokenServerURL
_stopServerURL
_tokenServerParameters
_assetIDForStopping
_loadingContext
_handleMediaControllerNotification:
_handleSeekNotification:
system
eventRecorder
flushUnreportedEvents
initWithPlayer:
trackerWithPlayList:
initWithPlayer:context:
setReportingEnabled:
setMetadata:forKey:
baseFieldsForVPAF
_metricsForSession:
updateEventData:
_playHeadMillis:
seekStoppedAtOverallPosition:type:reason:eventData:
playStartedAtOverallPosition:type:reason:eventData:
seekStartedAtOverallPosition:type:reason:eventData:
paused
playlist
nextMediaItem
playStoppedAtOverallPosition:type:reason:eventData:
_videoDisplayInfoForSession:
_screenInfo
_connectionInfo
_focusInfoForSession:
_metricsForPlayer:
isNetworkReachable
metadataForKey:
selectedAudioOption
languageCodeBCP47
_colorRangeForPlayer:
_sensitiveContentInfoForPlayer:
selectedSubtitleOption
subtitleType
currentMediaItemVideoRange
playbackDate
_setSessionMetadataValue:forKey:player:
_downloadInfoForPlayer:
_pendingPlayerProperties
initWithAMSBag:
initWithTopic:delegatePackage:
_currentSiriNavController
startIndex
setStartIndex:
_startIndex
_count
_setupLayouts
isDynamicTextEnabled
isTVOS
isHorizontal
systemGrayTintColor
systemLightGrayColor
bottomPadding
_infoHeaderTextLayout
_infoBodyTextLayout
_infoDescriptionTextLayout
_descriptionLineSpacing
_highlightedDescriptionText
_darkHighlightedDescriptionText
infoTextLayout
colorWithDynamicProvider:
_infoTextLayout
databaseItem
setDatabaseItem:
_databaseItem
setBadgeNumber:withCompletionHandler:
setBadgeString:withCompletionHandler:
showAppInstallCompletePushNotificationWithAppContext:appName:contentName:punchoutURL:
handleAction:
post::::
setBadgeNumber:
setBadgeString:
_center
_layoutSubviewsForSize:computationOnly:
_shouldPutTextOnSeparateLines
totalSubviewsWidth
_removeGenreLabelAndSeparator
groupedSubviews
_removeSeparatorsFromGroupsIfNeeded:
_newLabelAsSubview:
_newLabelAsSubview:withAttributedString:
_newImageViewAsSubview
_newRentalExpirationlabel:exisitingLabel:
setCommonSenseLightImage:
setCommonSenseDarkImage:
setViewsMap:
setGroupedSubviews:
_updateImageAppearanceWithUserInterfaceStyle:
_totalSubviewsWidth
setTotalSubviewsWidth:
_updateAppearanceWithUserInterfaceStyle:
darkTintColor
commonSenseLightImage
commonSenseDarkImage
addIndex:
_groupedSubviews
_commonSenseLightImage
_commonSenseDarkImage
setMainMenuItems:
setGenreMenuItems:
_mainMenuItems
_genreMenuItems
initializeVUISeparatorView
vui_separatorColor
_updateLineColor
lineColor
setLineHeight:
line
setLine:
_lineHeight
_line
verticalSizeClass
initWithScaleToSize:
setDecorator:
userInterfaceLayoutDirection
isPlaybackUIBeingShown
contentInset
minPadding
minLengths
characterSetWithCharactersInString:
substringWithRange:
scannerWithString:
setCharactersToBeSkipped:
scanHexInt:
shouldInvalidateLayoutWithPreviousTraitCollection:newTraitCollection:
imageSizeWithAspectRatio:scaleToSize:
isIpadLayout
randomColor
createImageProxyForResourceObject:imageSize:
minimumNumberOfItemsToEnableSeeAllButton
isTVApp
isInFullscreenOrPipPlayback
libraryListMarginToGrid
colorFromHexStr:
spacerA
spacerB
spacerC
setMinPadding:
setMinLengths:
_minLengths
_minPadding
initWithDataSourceDict:
setDocumentRef:
uiConfigurationWithDict:
documentRef
prefetchData
setUiConfiguration:
shouldLoadPageImmediately
setShouldLoadPageImmediately:
_shouldLoadPageImmediately
_documentRef
_prefetchData
_uiConfiguration
_sortKeys:
eventData
setEventData:
setRawData:
setSortedPageKeys:
setSortedPrimaryKeys:
_eventData
_rawData
_sortedPageKeys
_sortedPrimaryKeys
vui_valuesForProperties:
vui_isEqualToDownload:
setFetchRequest:
setShouldFetchArtworkInfoDictionaries:
artworkInfoDictionaryByPurchaseID
_shouldFetchArtworkInfoDictionaries
_fetchRequest
_grouping
_artworkInfoDictionaryByPurchaseID
fetchRequestForMediaEntity:
showEntity
setLogNameSuffix:
initWithMediaEntity:
setShowEntity:
_showEntity
setPageId:
createWithPageType:
createWithMetricsData:
generateMetricsDataDictionary
pageId
pageType
_pageId
_pageType
_reportForPlayer:playerState:completionState:completionBlock:
reporter
endPlaybackSession:
bootstrapInterval
hlsWatchedTimeEnabled
_reportLinearForPlayer:playerState:completionState:completionBlock:
_reportVODForPlayer:playerState:completionState:completionBlock:
_wlkPlaybackStateForState:
_wlkPlaybackRateForState:player:
_watchedTimeEnabled
_completionFudgeFactor
stringByAppendingFormat:
VODSummaryWithBundleID:channelID:contentID:accountID:externalProfileID:timestamp:duration:elapsedTime:playbackState:playbackRate:completionState:
_reportSummary:sessionID:completion:
liveSummaryWithBundleID:channelID:serviceID:accountID:externalProfileID:timestamp:playbackState:playbackRate:currentPlaybackDate:
contentID
serviceID
reportPlayback:sessionID:completion:
scanning
rateUsedForPlayback
reportForPlayer:completionState:completionBlock:
setReporter:
setPostPlayConfig:
_reporter
_postPlayConfig
mediaEntitiesChangeSet
groupingChangeSet
setMediaEntitiesChangeSet:
_mediaEntitiesChangeSet
_groupingChangeSet
_calculateMaxDescriptionThatFit:
_calculateMaxHeaderThatFits:
_dataModels
_headerTextView
titleString
setTitleString:
alertView
setAlertView:
dismissHandler
_titleString
_alertView
_dismissHandler
_updateDescriptionTextViewProperties:
_setGradientMaskInsets:
setChannelLevelUpsellRateOfMaxCount:inHours:
setShowLevelUpsellRateOfMaxCount:inHours:
setMinPlaybackProgressPercentageForUpsellOnExit:
disableUpsellOnPlaybackExit:
enableUpsellOnPIPPlaybackExit:
_isFullScreenPlaybackUIShown
_isHistoryArrayFull:forMaxCount:inDurationWindow:
_recordUpsellHistoryForShowId:onChannelId:
isFullscreenPlaybackUIBeingShown
_cleanupHistory:atCurrentDate:isShow:
_trimHistoryArray:forMaxCount:inDurationWindow:atCurrentDate:
removeObjectsInRange:
configureUsingDictionary:
canShowUpsellForMediaItem:withElapsedTime:
isUpsellOnPlaybackExitDisabled
setIsUpsellOnPlaybackExitDisabled:
isUpsellOnPIPPlaybackExitEnabled
setIsUpsellOnPIPPlaybackExitEnabled:
minPlaybackProgressPercentage
setMinPlaybackProgressPercentage:
isUpsellLimitedPerShow
setIsUpsellLimitedPerShow:
upsellMaxCountPerShow
setUpsellMaxCountPerShow:
upsellCountDurationPerShow
setUpsellCountDurationPerShow:
isUpsellLimitedPerChannel
setIsUpsellLimitedPerChannel:
upsellMaxCountPerChannel
setUpsellMaxCountPerChannel:
upsellCountDurationPerChannel
setUpsellCountDurationPerChannel:
_isUpsellOnPlaybackExitDisabled
_isUpsellOnPIPPlaybackExitEnabled
_isUpsellLimitedPerShow
_isUpsellLimitedPerChannel
_minPlaybackProgressPercentage
_upsellMaxCountPerShow
_upsellCountDurationPerShow
_upsellMaxCountPerChannel
_upsellCountDurationPerChannel
setFilteringDisabled:
uniqueIdentifier
_connectionStateFromMPMediaLibraryStatus:
_handleMediaLibraryStatusDidChangeNotification:
setCloudFilteringType:
addLibraryFilterPredicate:
beginGeneratingLibraryChangeNotifications
artworkDataSource
setUsesFallbackCache:
serialOperationQueue
_enqueueProcessingBlock:
setConnectionState:
connectionState
connectWithCompletionHandler:progressHandler:
setSerialOperationQueue:
_connectionState
_serialOperationQueue
vui_stringWithFirstStrongDirectionalIsolates
layoutWithLayout:element:sizeClass:contentType:
updateWithSizeClass:contentSizeCategoryIsAccessibility:
decorationImageLayout
decorationImageView
coverArtImageLayout
coverArtImageView
descriptionTitleTextLayout
comingSoonView
configureViewWithDataDictionary:andButtonViewElement:existingView:
setComingSoonView:
setIsFocusable:
imageWithHorizontallyFlippedOrientation
setCoverArtImageView:
setDecorationImageView:
setDecorationImageGradientView:
_buttonViewsFromElements:existingButtons:prefersUberLayout:
availabilityTextView
availabilityImageView
_setTintColor:
_setDarkTintColor:
setAvailabilityTextView:
setAvailabilityImageView:
disclaimerTextView
setDisclaimerTextView:
promoTextLayout
promoTextView
setPromoTextView:
_tagsViewWithMetadata:layout:existingView:prefersUberLayout:
logoImageView
setLogoImageView:
logoTextLayout
subTextLayout
episodeInfoTextLayout
logoTextView
subTextView
episodeInfoView
setLogoTextView:
setSubTextView:
setEpisodeInfoView:
setLogoTextGradientView:
castInfoView
configureViewWithItems:existingView:
setCastInfoView:
_comingSoonInfoAttrString:prefersUberLayout:userInterfaceStyle:
_availabilityTextAttrString:prefersUberLayout:userInterfaceStyle:
_standardDescription
userInteractionMonitor
setDelegateRespondsToMediaChange:
setDelegateRespondsToDocumentCreationStatus:
setDelegateRespondsToEventOccurred:
setDelegateRespondsToDocumentUpdate:
postPlayDelegate
markAsOpeningAnotherDocument
delegateRespondsToMediaChange
didCompleteDocumentCreationWithStatus:errorDictionary:
delegateRespondsToDocumentCreationStatus
documentDidUpdate:
delegateRespondsToDocumentUpdate
delegateRespondsToEventOccurred
setUserInteractionMonitor:
lastSelectedMediaInfo
setLastSelectedMediaInfo:
_delegateRespondsToDocumentCreationStatus
_delegateRespondsToMediaChange
_delegateRespondsToEventOccurred
_delegateRespondsToDocumentUpdate
_postPlayDelegate
_lastSelectedMediaInfo
_userInteractionMonitor
_previewFrameImageIdentifier
_sourceType
initWithMemoryCapacity:diskCapacity:diskPath:
memoryCapacity
diskCapacity
setURLCache:
setCurrentURL:
setAppScriptDict:
appScriptDict
currentURL
initWithURL:cachePolicy:timeoutInterval:
setTask:
fetchAppJavascript:cachePolicy:completionHandler:
task
_session
_completionBlocksDict
_currentURL
_appScriptDict
_task
_performWithoutLayoutBelow:
layoutBelowIfNeeded
_getGradientMaskBounds:startInsets:endInsets:intensities:
gradientBoundsInsets
_gradientBoundsInsets
_flags
showsLozengeForLivePlayback
setShowsLozengeForLivePlayback:
showsStillWatchingAlert
setShowsStillWatchingAlert:
stillWatchingAlertDuration
setStillWatchingAlertDuration:
setAlertIdleTimeout:
setMediaTypesExcludedFromReporting:
_showsLozengeForLivePlayback
_showsStillWatchingAlert
_stillWatchingAlertDuration
_alertIdleTimeout
_mediaTypesExcludedFromReporting
setBootstrapInterval:
setDocumentUpdateOffsetInterval:
setMaximumAutoPlayableItems:
setMinAutoPlayStopTime:
autoPlayTimerDuration
setAutoPlayTimerDuration:
minTimeIntervalFromEndToDisplay
setMinTimeIntervalFromEndToDisplay:
setHlsWatchedTimeEnabled:
_hlsWatchedTimeEnabled
_bootstrapInterval
_documentUpdateOffsetInterval
_maximumAutoPlayableItems
_minAutoPlayStopTime
_autoPlayTimerDuration
_minTimeIntervalFromEndToDisplay
autoPlayDelayInterval
setAutoPlayDelayInterval:
_autoPlayDelayInterval
minimumPresentationIntervalNormal
setMinimumPresentationIntervalNormal:
minimumPresentationIntervalRestricted
setMinimumPresentationIntervalRestricted:
whitelistedFields
setWhitelistedFields:
_minimumPresentationIntervalNormal
_minimumPresentationIntervalRestricted
_whitelistedFields
autoPlayConfig
inAppMessagesConfig
_nowPlayingConfig
_autoPlayConfig
_inAppMessagesConfig
_episodeLayout
_metadataLayout
viewLayout
setViewLayout:
airingView
configureViewWithElement:existingView:
_generateSectionViewFromElement:
updateViewWithSections:
setAiringView:
tv_padding
tv_interitemSpacing
sectionViews
setSectionViews:
_sectionViews
_viewLayout
_airingView
setActionParams:
_extrasDict
initWithDictionary:andMetadataDictionary:
isMovie
downloadURL
fpsNonceURL
resumeTimeTimeStamp
isSubscription
previewArtwork
_videosPlayableDict
_bookmarkID
_previewArtwork
isEqualToAppDocumentServiceViewController:
setAnimated:
setNavigationBarHidden:
isModalOverModalAllowed
setAllowsModalOverModal:
popToViewController:animated:
popViewControllerAnimated:
initWithCollectionViewLayout:
_updateCurrentViewIfNeeded
applySnapshot:animatingDifferences:completion:
_createCollectionView
_addPlayPauseHandler
entitiesDataSource
leftBarButtonItem
_createDiffableDataSource
setWaitingForFetch:
_updateLayout
setArtworkInfoDictionary:
_computeBottomMargin
_configureSizingCellForItemAtIndexPath:
waitingForFetch
_tvOSHandleCellSelectionAtIndexPath:
_playPausePressed:
indexPathForCell:
previouslyFocusedView
remembersLastFocusedIndexPath
indexPathsForVisibleItems
amsShowIdentifier
initWithTitle:withSeasonsDataSource:withEpisodesDataSource:
_showExtrasForMediaItem:
_createCollectionViewFlowLayout
setAlwaysBounceHorizontal:
artworkInfoDictionary
_getEntityIdentifiersFromEntities
updateWithLatestMediaEntities:
gridFilter
setGridFilter:
hideLockupTitles
setHideLockupTitles:
libraryBarButton
setLibraryBarButton:
forceBackButton
setForceBackButton:
setEntitiesDataSource:
currentNavBarButtonItem
setCurrentNavBarButtonItem:
currentlySelectedMediaEntity
setCurrentlySelectedMediaEntity:
indexPathForLastFocusedItem
setIndexPathForLastFocusedItem:
_cellMetrics
_sizingHeaderView
_hideLockupTitles
_forceBackButton
_waitingForFetch
_gridFilter
_gridStyle
_gridType
_libraryBarButton
_entitiesDataSource
_currentNavBarButtonItem
_currentlySelectedMediaEntity
_indexPathForLastFocusedItem
_artworkInfoDictionary
cast
directors
producers
screenwriters
_arrayFromStringRepresentation:
_stringRepresentationFromArray:
hasCredits
_cast
_directors
_producers
_screenwriters
vui_applyChangeSet:inSection:completionHandler:
vui_applyChangeSet:inSection:updateDataSourceBlock:completionHandler:
vui_applyChangeSet:inSection:updateDataSourceBlock:applyChangeBlock:completionHandler:
_vui_applyChangeSet:inSection:updateDataSourceBlock:applyChangeBlock:shouldWrapInUpdate:completionHandler:
insertChange
setInsertChange:
deleteChange
setDeleteChange:
moveChanges
setMoveChanges:
initWithIndex:
initWithChangeKind:sourceIndexes:destinationIndexes:
setUpdateChanges:
setUpdateChangeSet:
_vui_applyDeleteChange:inSection:applyChangeBlock:
_vui_applyInsertChange:inSection:applyChangeBlock:
_vui_applyMoveChanges:inSection:applyChangeBlock:
updateChanges
_vui_applyUpdateChanges:inSection:applyChangeBlock:updateDataSourceBlock:
performBatchUpdates:completion:
sourceIndexes
deleteSections:
_vui_indexPathsWithIndexSet:andSection:
deleteItemsAtIndexPaths:
destinationIndexes
insertSections:
insertItemsAtIndexPaths:
firstIndex
moveSection:toSection:
moveItemAtIndexPath:toIndexPath:
_vui_applySectionUpdateChanges:applyChangeBlock:updateDataSourceBlock:
_vui_applyItemUpdateChanges:inSection:applyChangeBlock:
updateChangeSet
reloadItemsAtIndexPaths:
enumerateIndexesUsingBlock:
vui_applyChangeSet:completionHandler:
currentLocale
descriptionWithLocale:
languageCode
characterDirectionForLanguage:
vui_languageAwareDescription
_overlayTypeFromString:
_upnextOverlayWithElement:existingView:
_sportsOverlayWithElement:cardlayoutType:overlayType:existingView:
_overlayWithElement:overlayType:existingView:
featuredCellOverViewFromElement:overlayType:existingView:
_overlayWithMediaItem:overlayType:existingView:
overlayLayoutForElement:cardLayoutType:
_overlayPaddingWithElement:
setLogoShowOnlyOnFocus:
_gradientLayerWithViewElement:overlayType:existingLayer:
_overlayPaddingWithMediaItem:
setShouldRasterize:
setRasterizationScale:
setStartPoint:
setEndPoint:
setLocations:
setColors:
overlayTypeOfElement:
asyncWorkToken
_asyncWorkToken
initWithLocale:style:
initWithLocale:
_listFormatter
localizedStringByJoiningStrings:style:
_stringFromStringArray:
localizedStringByJoiningStrings:
_style
_initWithMediaItemCategoryType:isRental:
_initWithMediaCollectionType:mediaCategoryType:
mediaCatgeoryForType:
supportedMediaCollectionTypes
setSubtype:
setMediaCategoryType:
setMediaCollectionType:
setRental:
_rental
_subtype
_mediaCategoryType
_mediaCollectionType
_tvOS_layoutSubviews
_totalMaxScoreWidthWithAvailableWidth:
_maxScoreWidthForColumn:availableWidth:
setRowLabels:
setScoreLabels:
setDescriptionLabels:
setFooterLabel:
rowLabels
scoreLabels
descriptionLabels
footerLabel
_rowLabels
_scoreLabels
_descriptionLabels
_footerLabel
_availabilityTextView
_availabilityImageView
stateMachinesOfType:
deregisterStateMachine:
initWithName:initialState:mode:stateChangeHandler:
setLogObject:
_initializeStateMachine
postEvent:withContext:
_initiateLease
_invalidateAgentWithError:
registerHandlerForEvent:onState:withBlock:
dataWithBytes:length:
leaseID
storeMediaKind
_documentForOperation:mediaItem:clientData:leaseID:storeMediaKind:
_leaseRenewalLoaded:
_stopLease
_invalidateAgentWithError:wasCancelled:
leaseDuration
_renewLease:
scheduledTimerWithTimeInterval:target:selector:userInfo:repeats:
setRenewalTimer:
postEvent:
leaseAgent:renewalDidFailWithError:
executeBlockAfterCurrentStateTransition:
renewalTimer
setNumRenewalRetries:
setShouldAcceptEvents:
valueForKey:error:
uniqueID
_errorFromDictionary:
_decodeResponseDictionary:
_errorIsRecoverable:
currentState
ams_setSecureToken:forAccount:error:
ams_saveAccount:
stopAllLeases
initWithMediaItem:stateChangedHandler:
startLease
stopLease
_leaseAcquisitionLoaded:error:
setLeaseID:
setStoreMediaKind:
setLeaseDuration:
numLeaseStartRetries
setNumLeaseStartRetries:
numRenewalRetries
_FPMediaKind
_leaseID
_renewalTimer
_storeMediaKind
_leaseDuration
_numLeaseStartRetries
_numRenewalRetries
_coalesceResponses:
request
_mediaEntityKind
setMediaEntityKind:
_populatePrefetchProperties
_processRange
_processSortDescriptors
_processPredicate
_mediaQuery
_itemsFetchResponseWithMediaQuery:
_collectionsFetchResponseWithMediaQuery:
setProcessRangeAfterFetch:
mediaEntityKind
_shouldSortUsingMediaQuery
setMediaQuerySortOrderingProperties:
setMediaQuerySortOrderingDirectionMappings:
prefetchProperties
setPostFetchSortDescriptors:
postFetchSortDescriptors
_mediaQueryPredicateForPredicate:
vui_keyPathsInPredicate
setProcessPredicateAfterFetch:
setMediaQueryPredicate:
_mediaQueryPredicateForCompoundPredicate:
_mediaQueryPropertyPredicateForComparisonPredicate:
predicateWithValue:
subpredicates
compoundPredicateType
leftExpression
rightExpression
expressionType
predicateOperatorType
_keyPathMediaQueryPropertyPredicateWithKeyPathExpression:operatorType:constantExpression:
vui_isKeyPathBitTestExpression
_bitTestMediaQueryPropertyPredicateWithKeyPathBitTestExpression:operatorType:constantExpression:
keyPath
_mediaEntityPropertyDescriptorForFilteringWithKeyPath:
constantValue
arguments
_baseMediaQuery
_addEntityLimitToMediaQuery:
_addPredicateToMediaQuery:
_addSortingPropertiesToMediaQuery:
_addPrefetchPropertiesToMediaQuery:
processRangeAfterFetch
mediaQueryPredicate
_isSortingBeingPerformedByMediaQuery
mediaQuerySortOrderingProperties
mediaQuerySortOrderingDirectionMappings
processPredicateAfterFetch
_mediaEntities:subarrayWithRange:
itemSections
_fetchResponseWithMediaEntities:mediaQuerySections:
collections
collectionSections
_processFetchedMediaEntities:
_sortIndexesWithMediaQuerySection:
setRequest:
setPrefetchProperties:
currentFetchMediaEntityType
setCurrentFetchMediaEntityType:
_processPredicateAfterFetch
_processRangeAfterFetch
_request
_prefetchProperties
_mediaQueryPredicate
_mediaQuerySortOrderingProperties
_mediaQuerySortOrderingDirectionMappings
_postFetchSortDescriptors
_currentFetchMediaEntityType
initWithClientIdentifier:
setClientIdentifier:
_createSession
tokenService
initWithTokenService:bag:
setAccount:
requestByEncodingRequest:parameters:
session
dataTaskPromiseWithRequest:
initWithConfiguration:
_createTokenServiceWithSession:
initWithTokenService:
setProtocolHandler:
setSession:
setTokenService:
clientIdentifier
initWithClientIdentifier:bag:
_tokenService
_clientIdentifier
_checkInOrphansRentalsIfNeeded
tvs_adamIDStringFromBuyParams
tvs_unsignedLongLongValue
numberWithUnsignedLongLong:
_initializePlaybackType
ams_storefront
performMediaItemMetadataTransactionWithBlock:
playbackType
_usesFileBasedContentLease
_supportsBookmarks
disableResumeMenu
_serviceIdentifier
_adamIDString
scrubMediaItem
preferredStoreAssetDict
setScrubMediaItem:
_bookmarkNetTime
contentRatingDomain
contentRatingRank
storeItemDict
currentProcess
userAgentForProcessInfo:
tvs_ISO8601CombinedDateAndTimeFormatter
mpMediaItem
_imageLoader
setFpsKeyError:
_mediaItemPreparationCancelled:
sharedHTTPCookieStorage
tvs_setDownloadKeyCookieWithURL:downloadKey:
_loadTrickPlayConfigURL
_loadTomatoRatingDataForAdamID:completion:
setUpdatesMediaRemoteInfoAutomatically:
setUpdatesBookmarks:
setSendsPlayerReports:
setCreatesPlayerItemButDoesNotEnqueue:
setCurrentMediaItem:
setIFramePrefetchMaxSize:
setScrubPlayer:
_scrubPlayerItemDidLoad:
hlsPlaylistURL
_preferredStoreAssetDictFromStoreItemDict:
setPreferredStoreAssetDict:
iTunesPreferHLSForPlayback
setPlaybackType:
_performRedownloadWithCompletion:
setNeedsRentalCheckin:
initWithAccountIdentifier:rentalKeyIdentifier:
_updateRentalExpirationDate:playbackStartDate:
startWithResponseBlock:
_checkoutRentalWithCompletion:
_startLeaseWithCompletion:
fpsKeyError
leaseAgent
setLeaseAgent:
needsRentalCheckin
_checkInRental
storeFPSKeyLoader
setStoreFPSKeyLoader:
scrubPlayer
setIgnoreLeaseAgentStateChanges:
tvs_deleteDownloadKeyCookieForURL:
trickPlayImageConfigDocumentLoader
setTrickPlayImageConfigDocumentLoader:
setAdditionalRequestParams:
bookmarkDisabled
setShouldProcessProtocol:
setBuyParameters:
setRequestProperties:
setIgnoresForcedPasswordRestriction:
initWithPurchases:
setCreatesDownloads:
tvs_appleTimingAppHeaderValue
bodyData
startWithPurchaseResponseBlock:completionBlock:
ignoreLeaseAgentStateChanges
setCallsStateChangeHandlerSynchronously:
setShouldValidateRentalInfo:
startWithConnectionResponseBlock:
_checkInRentalWithDSID:rentalID:
setImageInterval:
setImageCount:
setBaseURL:
setUsesOneBasedImageIndexes:
setImageNameFormatString:
setVersion:
setStoreFrontSuffix:
setItemIdentifiers:
rottenTomatoesOperationQueue
setRottenTomatoesOperationQueue:
unqueuedPlayerItem
bookmarkOverrideTime
iTunesFileVideoResolution
guid
_fetchRentalsFromStoreWithCompletion:
_rentalsRequestDocumentLoaderWithStartID:endID:
productType
checkInOrphanedRentals
storeFPSKeyLoader:shouldKeyRequestContinueInvalidationAfterLoadingNonce:
prepareForLoadingWithCompletion:
prepareForPlaybackInitiationWithCompletion:
replacementErrorForPlaybackError:
updateBookmarkWithSuggestedTime:forElapsedTime:duration:playbackOfMediaItemIsEnding:
updatePlayCountForElapsedTime:duration:
setMediaType:
setHlsPlaylistURL:
setContentRatingRank:
setMpMediaItem:
setContentRatingDomain:
_bookmarkDisabled
_disableResumeMenu
_ignoreLeaseAgentStateChanges
_needsRentalCheckin
_actionParams
_mediaType
_hlsPlaylistURL
_contentRatingRank
_storeItemDict
_bookmarkOverrideTime
_fpsCertificateURL
_fpsKeyServerURL
_fpsAdditionalServerParams
_playbackType
_preferredStoreAssetDict
_leaseAgent
_storeFPSKeyLoader
_trickPlayImageConfigDocumentLoader
_scrubMediaItem
_scrubPlayer
_fpsKeyError
_bookmark
_rottenTomatoesOperationQueue
_mpMediaItem
_contentRatingDomain
_showTitle
_iTunesExtrasUrl
_offerListing
_personalizedOfferListing
initWithType:titleStyle:
_configurePrimaryButton
_configureTextualButton
titleStyle
contentMotionTranslation
isBlurEnabled
standardTitleLayoutWithStyle:
configurationWithPointSize:weight:
setImageSymbolConfiguration:
_blurEnabled
_titleStyle
_contentMotionTranslation
initWithDomain:dataSource:automaticSynchronizeOptions:isActive:
_activeAccountDidChange:
_setNeedsSync
synchronizeImmediatelyWithCompletionHandler:
lock
pendingChanges
keyValueStoreItemIdentifierForItem:
tvs_setObjectIfNotNil:forKey:
uppKeyToRecordMap
unlock
setHasLocalChangesToSync:
setKeyType:
_uppStore
_lastSyncTimestamp
_needsSync
_stateLock
initWithClientState:changes:
clientState
setLastSyncedDomainVersion:
changes
beginTransactionWithItemsToSyncEnumerationBlock:
commitUniversalPlaybackPositionTransaction:domainVersion:metadataEnumerationBlock:
cancelUniversalPlaybackPositionTransaction:
lastSyncedDomainVersion
_capturedDomainVersion
_clientState
_changes
longValue
_uppDictionary
enumerateValuesForProperties:usingBlock:
markAsWatched
markAsUnwatched
_itemIdentifier
_keyType
_bookmarkTime
_hasBeenPlayed
_playCount
_timestamp
_pendingChanges
_uppKeyToRecordMap
_lastSyncedDomainVersion
isConnectable
supportsDRMContent
_incrementRevision
_updateWithTitle:connectionState:
_manager
initWithOverlayType:
disclaimerLayout
setDisclaimerLayout:
setButtonLayout:
_disclaimerLayout
_initWithType:
setSupportedMediaCollectionTypes:
setSupportedChildMediaCollectionTypes:
supportedChildMediaCollectionTypes
_supportedMediaCollectionTypes
_supportedChildMediaCollectionTypes
setCollectionConfiguration:
setCategories:
setGenresOnlyMenu:
setShouldShowBackButton:
setShouldDeselectOnViewAppear:
collectionConfiguration
shouldShowBackButton
kitImageNamed:
imageFlippedForRightToLeftLayoutDirection
vui_imageWithColor:
setImage:forState:
_setTextColorFollowsTintColor:
_backSelected:
setImageEdgeInsets:
initWithCustomView:
setLeftBarButtonItem:
menuCollectionView
shouldDeselectOnViewAppear
indexPathsForSelectedItems
deselectItemAtIndexPath:animated:
_menuHasContent
selectItemAtIndexPath:animated:scrollPosition:
_setSupportsTwoLineLargeTitles:
dequeueReusableSupplementaryViewOfKind:withReuseIdentifier:forIndexPath:
setSupplementaryViewProvider:
categories
shouldMarkFirstCategorySelected
setShouldMarkFirstCategorySelected:
genresOnlyMenu
setMenuCollectionView:
sectionHeaderSizingCell
setSectionHeaderSizingCell:
_shouldShowBackButton
_shouldDeselectOnViewAppear
_shouldMarkFirstCategorySelected
_genresOnlyMenu
_categories
_collectionConfiguration
_menuCollectionView
_sectionHeaderSizingCell
initWithName:initialState:mode:
_registerStateMachineHandlers
_applicationDidBecomeActive:
_libraryContentsDidChange:
autoupdatingSharedLibrary
stateMachine
setEarliestExpirationTimer:
dateOfLastRentalExpirationHandling
predicateWithProperty:value:comparison:
predicateWithProperty:equalToInteger:
queryWithLibrary:predicate:orderingTerms:
initWithQuery:
updateToLibraryCurrentRevision
applicationState
setDateOfLastRentalExpirationHandling:
initWithPersistentID:inLibrary:
enumeratePersistentIDsUsingBlock:
earliestExpirationTimer
_expirationTimerDidFire:
registerHandlerForEvent:onStates:withBlock:
startMonitoring
setStateMachine:
_stateMachine
_dateOfLastRentalExpirationHandling
_earliestExpirationTimer
legendNameLabel
legendNamePadding
legendNameSizeThatFits:
legendDescriptionLabel
legendNameMinWidth
legendsMargin
legendDescriptionLayout
legendLayout
legendBackgroundColor
legendCornerRadius
setLegendNameLabel:
setLegendDescriptionLabel:
legendName
setLegendName:
legendDescription
setLegendDescription:
_legendNameLabel
_legendDescriptionLabel
isObserving
setObserving:
_startObserving
_stopObserving
_updateLatestObservation
_notifyDelegateLatestObservationDidChange:
_handleNowPlayingAppDidChangeNotification:
_handleNowPlayingAppIsPlayingDidChangeNotification:
setLatestObservation:
updateObservationContext
setUpdateObservationContext:
_updateLatestObservationWithBundleIdentifier:playbackState:
initWithBundleIdentifier:isPlaying:
latestObservation
_observing
_latestObservation
_updateObservationContext
setPlaying:
setNowPlayingAppBundleIdentifier:
_playing
_nowPlayingAppBundleIdentifier
initWithDateForEntityBlock:
setMaxEntities:
_punchoutURLForDirectPlayback:ignoreExtras:
optionsWithDictionary:
serviceWithDefaultShellEndpoint
openApplication:withOptions:completion:
setExtrasInfo:
_extrasInfo
getObjects:range:
getValues:forProperties:count:
initWithSizeClass:contentType:
_createLayoutsWithSizeClass:contentType:
_coverArtImageShadow
setLogoTextLayout:
setCoverArtImageLayout:
maxCoverArtImageHeight
_sizeClass
_logoTextLayout
_decorationImageLayout
_subTextLayout
_episodeInfoTextLayout
_descriptionTitleTextLayout
_promoTextLayout
_coverArtImageLayout
_maxCoverArtImageHeight
vui_imageFromContextWithSize:scale:type:pool:drawing:encapsulation:
slotLength
nextSlotWithBytes:length:
initWithCGImage:scale:orientation:
vui_bytesNeededForSize:scale:withContextType:
vui_imageFromContextWithSize:scale:type:pool:drawing:
setNeedsDisplayOnBoundsChange:
_updateTransitionsAnimated:
_clearDisplayLink
_clearTransitionIfComplete:
_updatePausedTransitionAnimated:
_updateStateTransitionAnimated:
progressViewCanBeRemoved:
_updateFractionTransitionAnimated:
_hasActiveTransitions
_ensureDisplayLink
completeTransitionAndUpdateView:
updateToPaused:
newTransitionToPaused:
newTransitionFromState:toState:
updateToFraction:
newTransitionToFraction:
isCompleteWithView:
updateView:withElapsedTime:
_onDisplayLink:
setPreferredFramesPerSecond:
drawInRect:blendMode:alpha:
_drawPieWithCenter:
_drawOutgoingCircleWithCenter:
_drawIncomingCircleWithCenter:
_drawPauseUIWithCenter:
initWithLabel:slotLength:
numberWithUnsignedInt:
_pieImagesMemoryPool
strokeWithBlendMode:alpha:
bezierPath
moveToPoint:
addLineToPoint:
addArcWithCenter:radius:startAngle:endAngle:clockwise:
fillWithBlendMode:alpha:
_pieImageAtFraction:
_maskImage
addClip
bezierPathWithRect:
setState:paused:fractionLoaded:animated:
setCanAnimate:
setOverlayImage:
circleBoundingRect
overlayImage
canAnimate
backgroundAlpha
setBackgroundAlpha:
foregroundAlpha
setForegroundAlpha:
circleRadiusFraction
setCircleRadiusFraction:
pauseRadiusFraction
setPauseRadiusFraction:
displayedState
setDisplayedState:
displayingPaused
setDisplayingPaused:
displayedFraction
setDisplayedFraction:
_activeStateTransition
_activePausedTransition
_activeFractionTransition
_modelState
_modelPaused
_modelFraction
_lastUpdate
_canAnimate
_displayingPaused
_overlayImage
_backgroundAlpha
_foregroundAlpha
_circleRadiusFraction
_pauseRadiusFraction
_displayedState
_displayedFraction
_classForTransitionFromState:toState:
_initWithFromState:toState:
functionWithName:
_solveForInput:
_updateView:
_totalElapsedTime
_timingFunction
_fromState
_toState
_fraction
setNeedsDisplayInRect:
_initToPaused:
_updateTimingFunction
_updateElapsedTimeFromFraction
_toPaused
_updateView:forDisplayedFraction:
_targetFraction
sourceBackgroundImage
resizedBackgroundImageSize
drawInRect:
setResizedSourceBackgroundImage:
overlayMaterialRequests
rect
_blurredMaterialImageWithSourceBackgroundImage:forRect:
setOverlayMaterialImageByIdentifier:
imageWithCGImage:
settingsForPrivateStyle:
setColorTintAlpha:
_applyBackdropViewSettings:
main
setSourceBackgroundImage:
_overlayMaterialRequests
_resizedSourceBackgroundImage
_overlayMaterialImageByIdentifier
_sourceBackgroundImage
_resizedBackgroundImageSize
setRect:
_rect
initWithIdentifier:show:
_show
initWithFrame:blurEffectStyle:blurEnabled:
_configureWithLayout:
setGroupName:
setImageView:state:
setBackgroundImage:state:
setDisabled:
_setFocusedColor:
setImagesViewHighlightedState:
setBackgroundImagesViewHighlightedState:
isSymbolImage
_updateBackgroundColor
shadowOffset
shadowBlurRadius
setShadowRadius:
shadowColor
setShadowOpacity:
_imageSizeThatFits:
_hasTitle
_hasImage
_hasBackgroundImage
imagesViewDefaultState
setImagesViewDefaultState:
imagesViewHighlightedState
backgroundImagesViewDefaultState
setBackgroundImagesViewDefaultState:
backgroundImagesViewHighlightedState
_imagesViewDefaultState
_imagesViewHighlightedState
_backgroundImagesViewDefaultState
_backgroundImagesViewHighlightedState
_bgImageLoaded
_layoutSubviewsWithSize:computationOnly:
disableFocus
_setBackdropViewsWithBgImageViewFrame:
_layoutLabels:withOrigin:maxWidth:
backdropBlurEffectStyle
backdropImage
backdropInitialPeek
backdropPeekGradient
backdropMaskFactor
setBackdropView:
backdropView
setBounds:
setGradientScale:
setGradientStop:
setLastFocusedView:
maskedBackdropView
setMaskedBackdropView:
_subscribeButton
_disclaimerTextLabel
_textLabels
_backdropBlurEffectStyle
_backdropInitialPeek
_backdropPeekGradient
_backdropMaskFactor
_lastFocusedView
_backdropView
_maskedBackdropView
logoMargin
setLogoMargin:
legendSize
setLegendSize:
legendMaxWidth
setLegendMaxWidth:
setLegendsMargin:
setLegendNameMinWidth:
setLegendNamePadding:
setLegendCornerRadius:
dividerMargin
setDividerMargin:
dividerSize
setDividerSize:
dividerColor
_legendMaxWidth
_legendNameMinWidth
_legendBackgroundColor
_legendCornerRadius
_dividerColor
_legendLayout
_legendDescriptionLayout
_legendSize
_dividerSize
_logoMargin
_legendsMargin
_legendNamePadding
_dividerMargin
_minimumLineSpacing
_startMediaLibraryFetchOperation
currentSubOperation
_handleCompletdFetchWithResponses:error:
setCurrentSubOperation:
_startChangesOperationWithMediaEntityFetchResponses:currentFetchResponses:
_resultWithResponses:
_currentSubOperation
isUpNextPlayback
userPlaybackInitiationDate
openURLCompletionDate
_playPlayables:storeDictionary:appContext:isUpNextPlayback:userPlaybackInitiationDate:openURLCompletionDate:
_playMediaInfo:extrasInfo:isRentAndWatchNow:completion:
_presentPlaybackWithMediaInfo:extrasInfo:completion:
_preflightWithMediaInfo:isRentAndWatchNow:completion:
defaultPreflightManager
setPresentingController:
setRestrictionsCheckType:
preflightWithOptions:completion:
playMediaInfo:animated:
setVideosPlayables:
_upNextPlayback
_videosPlayables
_userPlaybackInitiationDate
_openURLCompletionDate
setClearsContextBeforeDrawing:
_imageLoaded
_invalidateTimer
textBadgeViewContentsUpdated:
setGlyphSize:
setAttributedTitle:
_textSize
minHeight
fill
stroke
strokeSize
setStrokeSize:
attributedTitle
glyphSize
_strokeSize
_attributedTitle
_glyphSize
nextResponder
vui_handleEvent:forElement:sourceView:
seasonsDataSource
episodesDataSource
episodeShelfViewControllerBySeasonIdentifier
setSeasonsFetchHasCompleted:
setEpisodesFetchHasCompleted:
_allFetchesHaveCompleted
setEpisodeGroups:
tvShowDetailPageViewModel
_buildTvShowDetailPageViewModel
hasContent
_seasonIdentifiersWithSeasons:
_updateTvShowDetailPageViewModelWithSeasonIdentifiers:
_updateEpisodeShelvesWithLatestEpisodes
setChildView:
headerTitle
episodesBySeasonIdentifer
_episodesBySeasonIdentifier
setSeasonIdentifiers:
setEpisodeShelfViewControllerBySeasonIdentifier:
setEpisodesBySeasonIdentifer:
episodesFetchHasCompleted
seasonsFetchHasCompleted
episodeGroups
setTvShowDetailPageViewModel:
setSeasonsDataSource:
setEpisodesDataSource:
_seasonsFetchHasCompleted
_episodesFetchHasCompleted
_episodeGroups
_tvShowDetailPageViewModel
_headerTitle
_seasonsDataSource
_episodesDataSource
seasonIdentifiers
_seasonIdentifiers
_episodeShelfViewControllerBySeasonIdentifier
_episodesBySeasonIdentifer
_scoreboardTypeForElement:
_sportsOverlayALayoutWithElement:
_sportsOverlayBLayoutWithElement:
_sportsOverlayCLayoutWithElement:
scoreboardALayout
scoreboardBLayout
scoreboardCLayoutWithInnerMargin:
_logoShowOnlyOnFocus
_supportsStartingDownloadWithMediaItem:
_onProcessingQueue_calculateStateAndNotify:
mediaEntityIdentifier
_onProcessingQueue_invalidateAndSetState
_enqueueAsyncProcessingQueueStrongSelfBlock:
supportsStartingDownload
_onProcessingQueue_startDownloadAllowingCellular:quality:completion:
_onProcessingQueue_downloadController
pauseDownload
resumeDownload
_onProcessingQueue_cancelAndRemoveDownload
_assetControllerStatusFromDownloadControllerState:
_onProcessingQueue_updateStateWithStatus:downloadProgress:bytesDownloaded:bytesToDownload:supportsPausing:supportsCancellation:notify:
storeItemIdentifier
_onProcessingQueue_startMonitoringDownload
setObserverDispatchQueue:
_onProcessingQueue_updateStateWithStatus:notify:
_isDownloaded
storeDownloadForMediaItem:type:attributes:
_SSPurchase
vui_policyAllowingCellularDownloads:
setDownloadPolicy:
addDownloads:
cancelDownload
removeItems:
_onProcessingQueue_setDownloadController:
_notifyDelegateStateDidChange:
mediaEntityAssetController:stateDidChange:
mediaItemDownloadController:stateDidChange:
startDownloadAllowingCellular:quality:completion:
cancelAndRemoveDownload
setMediaEntityIdentifier:
downloadController
setDownloadController:
isRequestingPermissionToDownload
setRequestingPermissionToDownload:
_supportsStartingDownload
_requestingPermissionToDownload
_mediaEntityIdentifier
_downloadController
_handleDeferredMediaItemUpsellIfNeeded
_currentMediaItemWillChange:
isOpeningAnotherDocument
setIsOpeningAnotherDocument:
_handleUpsellForMediaItem:elapsedTimeInterval:
_reset
setDeferredMediaItem:
setDeferredElapsedTime:
deferredMediaItem
deferredElapsedTime
handleRouterDataSourceIfNeeded:
_isOpeningAnotherDocument
_deferredMediaItem
_deferredElapsedTime
_backgroundColorForIdiom:
setSeparatorColor:
_backgroundColorBlendMode
setSeparatorBlendMode:
setBackgroundBlendMode:
_topRowLayoutForIdiom:
_bottomLayoutForIdiom:
_backgroundBlendMode
_separatorBlendMode
_backgroundColor
_separatorColor
setTopRowLayout:
setBottomRowLayout:
_textBlendMode
_textColor:
_padding
_topRowLayout
_bottomRowLayout
imageWithTintColor:
bezierPathWithRoundedRect:cornerRadius:
setStroke
imageWithColor:
documentCreator
setDocumentCreator:
setWidgetCreator:
_documentCreatorFlags
_documentCreator
_widgetCreator
interruptedOfferDetails
offer
playWhenDone
notificationTitle
notificationBody
extrasAction
_transactionOfferDict
_offer
setCommerceActionRef:
_startPurchaseFlowForOffer:playWhenDone:appContext:completionHandler:
_startSubscribeFlowForOffer:completionHandler:
_extractCanonicalIDFromTransactionOffer:
_preflightManagerForTransactionOffer:
metricsAugumentedBuyParamsWithBuyParams:
acquisitionPropertiesWithBuyParams:urlbagKey:
_addTransaction:forBuyParams:
_saveInterruptedPurchaseTransactionContextInfo:canonicalID:error:
_recordLog:withBuyParams:
acquireWithProperties:completionBlock:
_postTransactionDidStartNotificationWithBuyParams:
_postSubscriptionNotificationWithChannelName:buyParams:error:
_removeTransactionForBuyParams:
fetchSubscriptionData:completion:
mapTableWithStrongToStrongObjects
commerceActionRef
recordLog:
_commerceActionRef
imageType
baseImageIdentifier
setImageURL:
setBaseImageIdentifier:
setImageType:
_imageIdentifier
_imageURL
_baseImageIdentifier
_imageType
overlayVisualEffect
effectSettings
setColorTint:
setSaturationDeltaFactor:
setBlurRadius:
isProgressBar
setIsProgressBar:
_isProgressBar
setIsInDebugMode:
metricsDataSource
defaultsDataSource
getRecentEventsForDebuggerUI
previouslyFocusedIndexPath
_dismissViewController
containerView
setContainerView:
requiresRelayout
setRequiresRelayout:
dataSource
_dataSource
initWithDocumentServiceRequest:loadImmediately:
_cancelDocumentUpdates
_unregisterDocumentUpdateEventDescriptors
_cancelDocumentUpdatesAndPreserveUpdateEvents
_startDocumentUpdatesWithContext:
setDeferDocumentUpdateEventProcessing:
_startDocumentUpdatesForDeferredEventsIfPossible
_hasRefreshEvents
setMarkDocumentDirtyForRefreshUpdate:
setViewWillAppearReason:
deferDocumentUpdateEventProcessing
deferredDocumentUpdateEventStore
serviceContext
element
_registerDocumentUpdateEventDescriptorsWithServiceCompletionStatus:
documentUpdateContext
documentUpdateViewElements
_performNextDocumentUpdateIfNeeded
serviceRequest:didCompleteWithStatus:errorDictionary:
replaceAppDocumentWithAppDocument:
applicationDidInitialize:
_disableFastScrollIfNeeded
send
_cancelDocumentUpdateWithRequest:
setDocumentUpdateContext:
_startDocumentUpdateWithRequest:
_findCollectionListChildElementsInViewElement:
setDocumentUpdateViewElements:
isDocumentMarkedDirty
_removeEventTypes:receivedEvents:
_setFocusFastScrollingDisabled:
viewControllerDocumentIdentifier
updateServiceRequest:documentDidChange:
initWithDocumentServiceRequest:
updateDocumentWithContextDictionary:element:
viewWillAppearAfterTabSwitch
setViewControllerIdentifier:
setViewControllerDocumentIdentifier:
setDeferredDocumentUpdateEventStore:
viewWillAppearReason
_deferDocumentUpdateEventProcessing
_markDocumentDirtyForRefreshUpdate
_viewControllerIdentifier
_viewControllerDocumentIdentifier
_documentUpdateContext
_documentUpdateViewElements
_deferredDocumentUpdateEventStore
_viewWillAppearReason
initWithFetchReason:fetchResponse:
setFetchResponse:
setFetchChanges:
_fetchResponse
_fetchChanges
setOrderedKeys:
setMappingDictionary:
mappingDictionary
setDataSourceType:
_generateStoreIdentiferToIndexMapping:generatesDifferentials:
dataSourceType
_orderedKeys
_mappingDictionary
_updateImage
highlightOrSelectedImage
setHighlightOrSelectedImage:
_flatImage
_highlightOrSelectedImage
_handleMediaDatabaseContentsDidChangeNotification:
initWithDatabase:
setDatabase:
_database
_preferredConfigurationForFocusAnimation:inContext:
pressesBegan:withEvent:
_showPressState
pressesEnded:withEvent:
_clearPressState
pressesCancelled:withEvent:
setPressed:animated:completion:
allowsFocus
pressIsAnimating
unpressOnEndAnimating
_allowsFocus
_URLRequestWithURLString:
_URLParameterForAdditionalParameters
_URLParameterTypeFilterWithTypes:
_URLParameterForSort:
_URLAddAdditionalParameter:
_URLParameterWithSharedPurchases
_URLParameterForLimit:
_URLParameterWithOwnerIdentifier:
_URLParameterForExtend:
_purchasesEpisodesEndpoint
_URLParameterFilterWithShowIdentifier:
_URLParameterForInclude:
_URLParameterWithGenreFilter:
_addTypeFilterToURL:forRequest:
logNameSuffix
_cancelFetch
_moveToPausedState
pauseCount
setPauseCount:
_startFetchIfNeededWithMediaLibraryRevision:completionHandler:
vui_applyChangeSet:destinationObjects:
fetchOperation
setFetchOperation:
_shouldFetchForMediaLibraryRevision:
_startFetchWithCompletionHandler:
_enqueueFetchWithReason:completionHandler:
_fetchOperationCompleted:withCompletionHandler:
addExecutionBlock:
_updateMutableArray:withLatestObjects:changeSet:updateOnNoChanges:
_logNameSuffix
_fetchOperation
_pauseCount
startOverallPosition
overallPosition
startPosition
initWithPosition:duration:eventData:
setOverallPosition:
timeRange
setTimeRange:
_overallPosition
_timeRange
removeIndexesInRange:
enumerateRangesUsingBlock:
isLive
itemAtOverallPosition:rangeOptions:
itemsBetweenStartOverallPosition:endOverallPosition:
setItems:
setIsLive:
_isLive
_items
preferencesWithDomain:
boolForKey:defaultValue:
_setAppLaunchFieldWithData:
appLaunchData
setAppLaunchData:
recordAppLaunchEventWithEventType:
_appLaunchData
setupMetricsController
initWithOptions:capacity:
shouldDisplayPrivacyLinkWithIdentifier:
_createMetricsKitForTopic:
_initializeBaseFields
registerForBaseFieldChanges
_recordEnter:
setCachedOpenUrlData:
cachedOpenUrlData
_recordEvent:withEventData:
_invokeOnInactiveMethodInJs
_recordExit:
exitEventDestinationUrl
onInactive
isInDebugMode
activeMetricsKit
eventHandlers
page
setLastRecordedPageEventData:
click
impressions
media
search
enter
exit
dialog
account
_createDataAddingBaseAndPageFieldsToEventData:
metricsDataWithPageId:pageType:pageContext:eventData:
recordEvent
_saveRecentEvents:
_flushMetrics
topic
shouldPostAppLaunchData
setShouldPostAppLaunchData:
recordEvent:
stringValueForKey:
model
systemName
preferredLanguages
optedInVal
_getLocationAuthorizationStatus
setBaseFields:
baseFields
_handleTabBarChange:
_handleWLKSettingsDidChange:
_handleWLKAppLibChange:
_handleWLKLocationManagerChange:
_setGDPRConsentStatus:
_updateBaseFieldsWithData:
_flushUnreportedEvents:
metricsPageRenderLoggingEnabled
metricsExpandedLoggingEnabled
metricsLoggingEnabled
removeObjectsForKeys:
recordAppLaunched
recordAppBecameActive
recordOpenUrlLaunchWithExtURL:andOptions:
recordAppWillTerminate
recordAppWillBackground
jsDelegateRecordEvent:
jsDelegateRecordPerfEvent:
jsDelegateRecordLogEvent:
updateGDPRConsentStatus
flushMetrics
currentTabIdentifier
lastRecordedPageEventData
setActiveMetricsKit:
metricsKitMain
setMetricsKitMain:
loggerKit
setLoggerKit:
metricsKitUnidentified
setMetricsKitUnidentified:
perfMetricsKit
setPerfMetricsKit:
metricsDataDispatchSQ
setMetricsDataDispatchSQ:
savedRecentEvents
setSavedRecentEvents:
_isInternalBuild
_isAppJustLaunched
_isAppJustDeepLinkOpened
_isGDPRConsented
_shouldPostAppLaunchData
_isInDebugMode
_baseFields
_cachedOpenUrlData
_currentTabIdentifier
_exitEventDestinationUrl
_lastRecordedPageEventData
_activeMetricsKit
_metricsKitMain
_loggerKit
_metricsKitUnidentified
_perfMetricsKit
_metricsDataDispatchSQ
_savedRecentEvents
enqueueKeepAliveWithCompletion:
vui_heightToBaseline
initWithFamilyMemberDSID:size:localFallback:
setUseMonogramAsLastResort:
setMonogramDiameter:
setMemberImage:
startRequestWithCompletionHandler:
_sharingPurchases
_memberIdentifier
_firstName
_lastName
_accountName
_memberImage
_cleanRatingName:
regularExpressionWithPattern:options:error:
stringByReplacingMatchesInString:options:range:withTemplate:
resourceForRating:ratingSystem:
layoutSubviewsWithSize:computationOnly:
debugTextLabel2
_debugTextLabel
_debugTextLabel2
pathForResource:ofType:
getStackScrollPage
getSportsScrollPage
_registerElements
_registerStyles
_registerStylesheets
buttonWithElement:existingButton:
featuredCellWithElement:existingCell:
_URLForResource:inBundle:
systemImageNamed:
_styleSheetURLForTemplate:
registerIKClass:forElementName:elementType:dependent:
registerStyle:withType:inherited:
styleSheetRegistry
_urlForStyleSheetName:
registerStyleSheetURLs:forTemplateName:basedOnTemplateName:
URLForResource:withExtension:
viewForElement:existingView:
viewControllerForElement:existingViewController:
collectionViewCellClassForElement:
imageProxyForElement:withLayout:
URLForResource:
parseAppConfigurationForElement:
styleSheetURLForTemplate:
navigationControllerForTabIdentifier:
sportsLeagueID
setSportsLeagueID:
sportsTeamName
setSportsTeamName:
_sportsLeagueID
_sportsTeamName
setMask:
gradientScale
gradientStop
_gradientScale
_gradientStop
_addAccountChangedNotificationObserver
mediaEntitiesFetchController
_removeMediaLibraryNotificationObservers
_removeAccountChangedNotificationObserver
_addMediaLibraryNotificationObservers
setHomeShares:
_loadMediaEntityShelves
setFamilyDataSource:
familyDataSource
hasMediaEntitiesFetchCompleted
_addOrRemoveFamilySharingCategoryIfNeeded
categoryTypes
setCategoryTypes:
_constructCategoryList
categoryTypeByFetchRequestIdentifier
setGenreGroupings:
_populateViewModel:
setHasMediaEntitiesFetchCompleted:
_addNotificationObserversWithDeviceLibrary:
_homeShareMediaLibrariesDidChange:
_removeNotificationObserversWithDeviceLibrary:
homeShares
vui_arrayByApplyingChangeSet:destinationObjects:
_fetchRequestsWithMediaLibrary:categoryTypeMap:
setCategoryTypeByFetchRequestIdentifier:
setMediaEntitiesFetchController:
supportsUHDAndHDR
genreGroupings
_categoryTypesWithMediaEntitiesMap:categoryTypeComparator:
setMediaEntitiesByCategoryType:
mediaEntitiesByCategoryType
rentalsUpdateFetchController
setRentalsUpdateFetchController:
_hasMediaEntitiesFetchCompleted
_homeShares
_mediaEntitiesFetchController
_categoryTypeByFetchRequestIdentifier
_categoryTypes
_mediaEntitiesByCategoryType
_genreGroupings
_rentalsUpdateFetchController
_familyDataSource
_progressFrame
progressBackgroundLayer
_progressPath
centerSquareWidth
indeterminateLayer
indeterminateWidth
_indeterminatePath
didMoveToWindow
isIndeterminate
_configureProgress:
_isInAWindow
_addProgressLayer
setStrokeEnd:
_addIndeterminateLayer
_removeProgressLayer
_startIndeterminateAnimation
_removeIndeterminateLayer
progressFillColor
setProgressBackgroundLayer:
setLineCap:
setIndeterminateLayer:
animationWithKeyPath:
setToValue:
setRepeatCount:
addAnimation:forKey:
animationForKey:
setIndeterminateWidth:
setProgressFillColor:
setCenterSquareWidth:
_indeterminate
_indeterminateWidth
_progressFillColor
_centerSquareWidth
_indeterminateLayer
_progressBackgroundLayer
_vui_moviesQueryWithMediaLibrary:rentals:
_vui_configureMediaQueryWithMediaLibrary:
movieRentalsQuery
initWithTitle:subtitle:domain:defaultName:boolType:
defaultName
setDefaultBoolValue:
setIntegerValueType:
_defaultBoolValue
_integerValueType
_domain
_defaultName
_defaultIntegerValue
_createMetricsDataSource
_createDefaultsDataSource
setMetricsDataSource:
setDefaultsDataSource:
_metricsDataSource
_defaultsDataSource
scaleToSize
cropToFit
setScaleToSize:
setCropToFit:
setParams:
_cropToFit
_scalingResult
_params
_scaleToSize
appContext:needsReloadWithUrgency:options:
deviceConfigForContext:
navigationControllerForContext:
tabBarForContext:
modalControllerForContext:
objectForPlayer:
objectForPlaylist:
objectForMediaItem:
appContext:evaluateAppJavaScriptInContext:
appContext:validateDOMDocument:inContext:error:
appContext:didStartWithOptions:
appContext:didFailWithError:
appContext:didStopWithOptions:
appContext:needsReloadWithUrgency:
xhrSessionConfigurationForContext:
sourceApplicationBundleIdentifierForContext:
sourceApplicationAuditTokenDataForContext:
appContext:scriptForURL:cachePolicy:completion:
identifierForVendor
setUrlBagKey:
setDsid:
setUserAgent:
setStrongToken:
urlBagKey
userAgent
dsid
strongToken
ignoresForcedPasswordRestriction
_ignoresForcedPasswordRestriction
_urlBagKey
_userAgent
_dsid
_strongToken
identifierInternal
currentCalendar
kind
dictionaryWithValuesForKeys:
hasLocalChanges
firstAccessPropertiesCache
addedDate
requestedProperties
_defaultValueForPropertyDescriptor:
cachesPropertiesOnFirstAccess
sortTitle
setPlayedState:
_didRequestPropertyWithKey:
setLocalChanges:
setIdentifierInternal:
setFirstAccessPropertiesCache:
_localChanges
_cachesPropertiesOnFirstAccess
_identifierInternal
_firstAccessPropertiesCache
_kind
_requestedProperties
_handleOfferDataSource:appContext:
initWithAccount:bag:
perform
setBool:forKey:
initWithImageView:andProxies:
_fetchNext
transitionInterval
_displayIntervalTimerFired:
setTransitionTimer:
transitionTimer
animationDuration
animationOptions
isCachingEnabled
setCacheOnLoad:
_setImage:animated:
setDisplayImageIndex:
_updateImageWithIndex:
loadImageProxy:withWeakObject:completionHandler:
indexOfFetchedImage
isImageAvailable
setIndexOfFetchedImage:
displayImageIndex
startAnimation
stopAnimation
setAnimationOptions:
setAnimationDuration:
setTransitionInterval:
setCachingEnabled:
_cachingEnabled
_imageProxies
_animationOptions
_animationDuration
_transitionInterval
_displayImageIndex
_indexOfFetchedImage
_transitionTimer
_active
_autoRemove
_userInfo
initWithType:startTime:duration:
_skippable
_startTime
_activationType
_advisoryDisabledTimeRanges
initWithType:duration:repeats:
_repeats
setLayoutType:
initWithCardLayoutType:gridStyle:gridType:
_layoutForCardLayoutType:interfaceIdiom:
featuredCardViewLayoutForIdiom:
upnextCardViewLayoutForIdiom:
standardCardViewLayoutForIdiom:
editorialCardViewLayout
videoLockupCardViewLayout
setSecondaryTextLayout:
setImagePosition:
shadowForCardImageLayout
setDetailsTextLayout:
_phoneLayout
_padLayout
_tvLayout
_cardLayoutType
_prototypeSubtitleLabelForOfferCardSizeCalculation
cardHeightForElementType:
setHideFloatingBackground:
_hideFloatingBackground
_darkBackgroundColor
_highlightColor
_imagePosition
_secondaryTextLayout
_detailsTextLayout
setAppImageElement:
setLogoImageElement:
useMaterial
setUseMaterial:
setProgressViewElement:
setSubtitleElement:
setTextElement:
setProgressViewShowOnlyOnFocus:
setAppImageViewShowOnlyOnFocus:
setLogoImageViewShowOnlyOnFocus:
setTextLabelShowOnlyOnFocus:
setSubtitleLabelShowOnlyOnFocus:
setBadgeShowOnlyOnFocus:
setBlurMaskLayer:
_setAutoPlayDuration:
_invalidateAutoPlayIfNeeded
autoPlayIndicator
setFlipsHorizontalAxis:
textLabelShowOnlyOnFocus
subtitleLabelShowOnlyOnFocus
appImageViewShowOnlyOnFocus
logoImageViewShowOnlyOnFocus
progressViewShowOnlyOnFocus
badgeShowOnlyOnFocus
setAutoPlayDuration:
_registerNowPlayingNotifications
_handleShouldShowAutoPlayUINotification:
_handleShouldHideAutoPlayUINotification:
_startAutoPlayAnimation
autoPlayDuration
_dispatchAutoPlayEvent
setAutoPlayIndicator:
progressViewElement
appImageElement
logoImageElement
textElement
subtitleElement
blurMaskLayer
_progressViewShowOnlyOnFocus
_appImageViewShowOnlyOnFocus
_logoImageViewShowOnlyOnFocus
_textLabelShowOnlyOnFocus
_subtitleLabelShowOnlyOnFocus
_badgeShowOnlyOnFocus
_progressViewElement
_appImageElement
_logoImageView
_logoImageElement
_textElement
_subtitleElement
_blurMaskLayer
_autoPlayDuration
_autoPlayIndicator
setSelectionStyle:
showViewController:sender:
performValidation
presentingController
_preflightWithOptions:userInfo:completion:
_performRestrictionsCheckWithCompletion:
_performAgeGateVerificationWithCompletion:
_preflightRentalWithCompletion:
restrictionsCheckType
_validateRestrictionsForPlayback:
_validateRestrictionsForPurchase:
_ratingDomain
_ratingValue
_shouldValidateRestrictionsForRatingDomain:ratingValue:
_pbrestrictedValueToString:
_showMediaNotAllowedBySettingsAlert
validateRestrictionForSetting:allowInteraction:withCompletion:
_shouldShowAgeConfirmationAlert
_requiredAgeForPlayback
_setLastAgeConfirmationPrompted:
_setLastConfirmedAge:
_showAgeConfirmationWithPresentingViewController:completion:
setInteger:forKey:
_isTrailer
_lastConfirmedAge
_lastAgeConfirmationPrompted
networkType
_shouldWarnStartingRentalPlayback
_showRentalPlaybackStartingWarningWithCompletion:
_isRental
_mediaTitle
_isOnWiFi
_restrictionsCheckType
_presentingController
_homeShareMediaLibraries
_handleAvailableMediaLibrariesDidChange:
mutableHomeShareMediaLibraries
_sharedMPMediaLibraries
_updateMediaLibrariesWithSharedMPMediaLibraries:
sharedMediaLibraries
_notifyDelegateHomeShareMediaLibrariesDidUpdate:withChangeSet:
setManager:
setMutableHomeShareMediaLibraries:
_mutableHomeShareMediaLibraries
_isValidAppInstalled
_openPunchoutURL:
_startAppInstallFlow:
openSensitiveURL:withOptions:
isPlaybackURL
openApplicationWithBundleIdentifier:configuration:completionHandler:
setFrontBoardOptions:
openURL:configuration:completionHandler:
applicationIsInstalled:
minRequiredAppVersion
bundleProxyForIdentifier:
shortVersionString
compare:options:
_openAirplayPicker:
setPunchoutURL:
setIsEntitledToPlay:
setContentMetadata:
setExternalID:
setReferenceID:
setIsPlaybackURL:
_isEntitledToPlay
_isPlaybackURL
_punchoutURL
_contentMetadata
_externalID
_referenceID
setCellularDataStates:
addNetworkType:
initWithDownloadKind:URLBagType:
setPolicyRule:
_registerForApplicationStateNotifications
_stateDidChangeFromState:toState:onEvent:context:userInfo:
_addProxyImageView
shouldStopPlayerWhenViewDisappears
setPlaybackEnabled:
isBackgrounded
_updateAVPlayerViewControllerWithAVPlayerForPlayer:
_updatePlayerMuteStateForBackgroundPlaybackWithReason:
setVpafPlaybackStartReason:
setVpafPlaybackStopReason:
intent
_setImageProxies:
_updateMediaInfo
playbackControlsIncludeTransportBar
playbackControlsIncludeInfoViews
setPlaybackControlsIncludeTransportBar:
setPlaybackControlsIncludeInfoViews:
postEvent:withContext:userInfo:
doesDelegateRespondToStateChange
setDoesDelegateRespondToStateChange:
setDoesDelegateRespondToShowStill:
isPlayerReadyToBePlayed
playbackLoadingTimer
setPlaybackLoadingTimer:
setPlaybackLoadingStartDate:
_updateCurrentPlaybackViewFrameForPlaybackInBackground:animated:
_handleApplicationDidEnterBackgroundNotification:
_applicationWillAddDeactivationReason:
_applicationDidRemoveDeactivationReason:
_shouldPausePlaybackDueToDeactivationReasons
setShouldPlayAfterAppBecomesActive:
shouldPlayAfterAppBecomesActive
deactivationReasons
_playbackStateChanged:
_handlePlaybackErrorNotification:
_mediaControllerStartedPlayback:
observingPictureInPictureActive
setObservingPictureInPictureActive:
overlayViewDisplayDuration
_addOverlayViewAnimatedIfNeeded:dismissAfter:
_addContentViewIfNeeded
titleForLogging
setTitleForLogging:
isRestoringAVPlayerController
setPlayerReadyToBePlayed:
_setPlaylist:
currentImageProxy
loadSynchronouslyIfCached
clearPreviousImageBeforeLoading
proxyImageView
setCurrentImageProxy:
setPendingPlaylist:
_cleanUpEverythingPlaybackRelated
_unregisterPlayerNotifications
_removePlaybackViewController
secondaryVideoView
setSecondaryVideoView:
setPlaybackContainerController:
didWeCreatePlayer
_removeOverlayView:animated:
playbackContainerController
performWithoutAnimation:
insertSubview:belowSubview:
isFullscreenPlaybackIntent
vpafPlaybackStartReason
shouldStopWhenAnotherMediaControllerStarts
setMuted:
showsVideoControls
doesDelegateRespondToShowStill
shouldZoomWhenTransitioningToBackground
currentMediaItemPresentationSize
_hasSecondaryView
_playbackContainerViewFrame:hasSecondaryVideoView:
_secondaryVideoViewFrame:
setTransform:
_shouldShowSecondaryView
setVideoGravity:
avPlayer
pauseStateTimeoutTimer
setPauseStateTimeoutTimer:
configureAudioSessionForBackgroundPlayback:
vpafPlaybackStopReason
isPictureInPictureActive
setDidWeCreatePlayer:
setPlaylist:
_registerPlayerNotifications
setAllowsPictureInPicturePlayback:
setAllowInfoMetadataSubpanel:
_addPlaybackViewControllerForPlayback:
_delayLoadImage:
isPlaybackEnabled
activeListIndex
removeItemsAtIndexes:
trackList
addItems:
changeMediaInDirection:
removeItemAtIndex:
setPendingImageProxy:
pendingPlaylist
_swapActiveMedia:animated:completion:
pendingImageProxy
_shouldIgnorePlaybackStop
playbackLoadingStartDate
popWhenPlayerStops
registerDefaultHandlerForEvent:withBlock:
setPreventsSleepDuringVideoPlayback:
setShowsVideoControls:
coverImage
shouldUpdateFocusInContext:
_canPause
_removeProxyImageView
allowsSkipping
setAllowsSkipping:
setPopWhenPlayerStops:
setStopWhenAnotherMediaControllerStarts:
setProxyImageView:
imageAnimationOptions
setImageAnimationOptions:
imageAnimationDuration
setImageAnimationDuration:
imageTransitionInterval
setImageTransitionInterval:
shouldAnimateOverlayView
setShouldAnimateOverlayView:
setOverlayViewDisplayDuration:
setDeactivationReasons:
_allowsSkipping
_shouldZoomWhenTransitioningToBackground
_playbackEnabled
_stopPlayerWhenViewDisappears
_clearPreviousImageBeforeLoading
_popWhenPlayerStops
_restoringAVPlayerController
_stopWhenAnotherMediaControllerStarts
_playerReadyToBePlayed
_shouldAnimateOverlayView
_doesDelegateRespondToShowStill
_doesDelegateRespondToStateChange
_shouldPlayAfterAppBecomesActive
_didWeCreatePlayer
_observingPictureInPictureActive
_proxyImageView
_currentImageProxy
_playbackContainerController
_playbackLoadingStartDate
_playbackLoadingTimer
_pendingPlaylist
_pendingImageProxy
_imageAnimationOptions
_imageAnimationDuration
_imageTransitionInterval
_overlayViewDisplayDuration
_secondaryVideoView
_pauseStateTimeoutTimer
_vpafPlaybackStartReason
_vpafPlaybackStopReason
_titleForLogging
_deactivationReasons
completionBlock
setCancelled:
_cancelled
vui_appleTimingAppHeaderValue
_processFirstRequest
_processRequest:
_handleCustomRequest:
_handleRequest:
_handleResponse:responseDict:forRequest:error:cancelled:
purchaseWithBuyParameters:
requestProperties
_postCrossProcessNotificationWithBuyParams:error:
cancelAcquisition:
_pendingQueue
_concurrentCount
_activeRequest
_baseToVPAFMapping
infoDictionary
localAppURL
setLocalAppURL:
_localAppURL
addBagKey:valueType:
addBagKey:valueType:defaultValue:
registerBagKeySet:forProfile:profileVersion:
bagKeySet
bagForProfile:profileVersion:
_wantsFocusEngine
_canBecomeKeyWindow
setWindowLevel:
setRootViewController:
superlayer
_textForUserSwitchState:
setOrigin:
snapshotViewAfterScreenUpdates:
userSwitchLabel
userSpinnerView
initWithDuration:curve:animations:
userSwitchEffectView
addCompletion:
_timeout
userSwitchSnapshotView
setUserSwitchEffectView:
setUserSwitchSnapshotView:
setUserSpinnerView:
setUserSwitchLabel:
userSwitchOverlayWindow
showOverKeyWindowUserSwitchState:completion:
setUserSwitchOverlayWindow:
hiding
setHiding:
_hiding
_userSwitchOverlayWindow
_userSwitchSnapshotView
_userSwitchEffectView
_userSwitchLabel
_userSpinnerView
ratingDescription
initWithMediaItemEntityTypesChangeSet:localMediaItemsAvailableDidChange:
_localMediaItemsAvailableDidChange
_mediaItemEntityTypesChangeSet
databaseShow
setDatabaseShow:
_databaseShow
_resetTimer
sportsEventsById
_updateTimer
_prepareJSContextDictionaryArgument
_updateScores:
setUpdateInProgress:
_getScoreboardUpdates
setSportsEventsById:
scoreboardUpdateTimer
setScoreboardUpdateTimer:
scoreboardUpdateInterval
setScoreboardUpdateInterval:
updateInProgress
_updateInProgress
_sportsEventsById
_scoreboardUpdateTimer
_scoreboardUpdateInterval
_documentDataSourceWithDict:viewElement:
_actionForKey:eventDict:viewElement:
setPreActionDocumentDataSource:
setPreAction:
setDocumentDataSource:
setPostActionDocumentDataSource:
setPostAction:
_preActionDocumentDataSource
_preAction
_documentDataSource
_postActionDocumentDataSource
_postAction
groupingSortIndexes
mediaEntitySubtype
_groupingSortIndexes
_mediaEntitySubtype
infoLabel
airingTextWithString:layout:existingView:
interfaceStyleForTemplateElement:
_tintColorForDataSource:interfaceStyle:
logo
airingLogoWithImageDictionary:layout:existingView:
setLogo:
setInfoLabel:
parser
displayDelegateWithDefaultAttributes:
attributedStringForHTMLString:error:
initWithProxy:andPlaceHolderImage:
imageViewWithDescription:layout:existingView:
_infoLabel
_logo
_buttonWithElement:layout:interfaceStyle:existingButton:
buttonTypeOfButtonElement:
tv_setAssociatedIKViewElement:
_iOSLockupWidthWithWindowWidth:safeAreaInsets:showsPageControl:
setCropCode:
featuredView
maskedContentView
maskingMode
setFeaturedView:
_featuredView
pathExtension
isHLS
isAudioOnly
ams_iTunesAccountWithDSID:
sharedPurchase
_replacementErrorForSharedPurchasePlaybackError:
_replacementErrorForPlaybackError:
setParentReportingToken:
_keepKeyLoaderAlive:
reportingDelegate
mediaItemDidBecomeCurrentItem:player:reason:
mediaItemWillNoLongerBeCurrentItem:player:reason:
mediaItem:willChangeFromPlaybackState:toPlaybackState:updatedRate:player:
mediaItem:didChangeFromPlaybackState:toPlaybackState:updatedRate:player:
mediaItemDidStall:player:
mediaItemWillStartBuffering:player:
mediaItemBufferingDidBecomeLikelyToKeepUp:timeTakenForOperation:player:
mediaItem:elapsedTimeDidChangeTo:playbackDateDidChangeTo:dueToTimeJump:
mediaItemDidSwitchVariantStreams:player:
mediaItem:errorDidOccur:player:
mediaItemDidPrepareForLoading:timeTakenForOperation:player:
mediaItemDidLoadAVAssetKeys:timeTakenForOperation:player:
mediaItemDidPrepareForPlaybackInitiation:timeTakenForOperation:player:
mediaItemPlayerItemStatusDidBecomeReadyToPlay:timeTakenForOperation:player:
mediaItemAllInitialLoadingComplete:totalTime:player:
setIsAudioOnly:
ignoreExistingOfflineKeyData
setIgnoreExistingOfflineKeyData:
parentReportingToken
setIsHLS:
_isAudioOnly
_sharedPurchase
_ignoreExistingOfflineKeyData
_isHLS
_parentReportingToken
_configureSubviewsWithDictionary:
legendViews
dividerView
setDividerView:
setLegendViews:
_isPortrait
_dividerView
_legendViews
_showAnimated:completion:
_hideAnimated:completion:
_showWithAnimationWithCompletion:
_hideWithAnimationWithCompletion:
center
logoTextGradientView
decorationImageGradientView
isFocusable
cardShowcaseFactor
_isFocusable
_logoTextView
_subTextView
_episodeInfoView
_logoTextGradientView
_coverArtImageView
_decorationImageView
_decorationImageGradientView
_comingSoonView
_castInfoView
_disclaimerTextView
_promoTextView
_cardShowcaseFactor
vui_progressBarFillColor
vui_progressBarGradientColors
materialView
setMaterialView:
_shouldProgressBarUseRoundCorner
_useMaterial
_fillColor
_tintColor
_gradientStartColor
_gradientEndColor
_materialView
initWithKeyPrefix:conflictResolver:
keyPrefix
conflictResolver
_keyPrefix
_conflictResolver
_addConflictResolver:forKeyPrefix:
_initializeKeyValueStoreCache
_syncEngineInitialize
_syncEngineSetNeedsSync
initWithType:interval:delay:async:
dateWithTimeIntervalSinceNow:
_deleteCleanRowsNotUpdatedSince:
setPerformBlock:
registerBackgroundTask:
processInfo
processName
removeItemAtPath:error:
initWithDomain:cacheDirectory:conflictResolvers:
_syncEngineDidAccessKeyValueStore
_willAccessKeyValueStore
_dbDataValuesForKeys:
_objectsForKeys:
_dbAllKeys
_dbSetDataValues:
_dbSetNumber:forKey:
_dbDirtyValues
_conflictResolverForKey:
_dbStringForKey:
_dirtySyncItems
_dbNumberForKey:
_dbSetString:forKey:
_dbClearAllDirtyFlags
_dbTransaction:
_syncWithServer:version:completionHandler:
_synchronize
_dropAllTables
registerStateTransitionFromState:onEvent:toState:
_newSyncEngineStateMachine
_databasePath
_deleteKeyValueStoreCache
initWithUTF8String:
_dbDataFromBlobForStatement:column:
_dbStringFromTextForStatement:column:
_dbNumberFormatter
bytes
defaultSyncingKeyValueStore
_dbNumberFromIntegerForStatement:column:
_databaseDirectory
_conflictResolversLock
_conflictResolvers
_conflictDetectionType
_pendingCompletionBlocks
_periodicCleanupTask
_dbQueue
_dbStmtValueForKey
_dbStmtSelectDirty
_dbStmtSelectAllKeys
_dbStmtInsertReplaceStmt
_dbStringForKeyStmt
_dbSetStringForKeyStmt
_syncEngineStateMachine
stringByDeletingLastPathComponent
stringWithUTF8String:
menuView
detailView
_menuView
_detailView
setUnfocusedShadowImage:
setFocusedShadowImage:
setUnfocusedShadowCardSize:
setUnfocusedShadowAlpha:
setFocusedShadowCardSize:
setFocusedShadowAlpha:
setNeedsUpdateConstraints
updateConstraints
lastBaselineAnchor
contextDataDict
setContextDataDict:
_contextDataDict
movieID
_movieID
initWithMovieBundleID:
movieBundleID
_movieBundleID
episodeID
_episodeID
confirmationDialogType
setConfirmationDialogType:
_confirmationDialogType
_handleMediaLibraryDidChangeNotification:
tapped
preferredContentSize
_updateRequiresLinearPlayback
requiresLinearPlayback
setRequiresLinearPlayback:
initWithMediaInfo:
isCurrentMediaTVShow
featureMonitor
setFeatureMonitor:
nowPlayingViewController
setNowPlayingViewController:
advisoryImage
setAdvisoryImage:
shouldIgnorePlayerStop
setIgnorePlayerStop:
_requiresLinearPlayback
_ignorePlayerStop
_featureMonitor
_nowPlayingViewController
_advisoryImage
_registerApplicationNotifications
_handleDurationChangeForPlayer:
initialMediaItemHasCompletedInitialLoading
complete
mutePictureInPicture:
fullscreenPlaybackInfo
pipPlaybackInfo
setPictureInPictureActive:
setCategory:mode:options:error:
setConfigurationBlock:
setCategory:mode:routeSharingPolicy:options:error:
disappearanceReasonString:
skipIntroWithPlaybackInfo:
_startPlaybackFromBeginningWithPlaybackInfo:
_showMoreInfoWithPlaybackInfo:
_applyPictureInPictureInsets:
_schedulePostPlayDismissTimerWithInterval:
_playbackInfoForAVPlayerViewController:
avKitSeekDidComplete
_markMediaItemPlayingInPIP:forAVPlayerViewController:
currentScanMode
setAVKitExternalImageScanningUpdateBlock:
_setPictureInPictureMuted:
muted
_currentNavigationController
_isCurrentNavigationControllerExtrasNavigationController
_configureShowsNowPlayingHUD:
_playbackInfoForPlayer:
_configurePostPlayForPlaybackInfo:forMediaItem:
dualStreamPlaybackOverride
valueWithUIEdgeInsets:
settingsWithDuration:timingFunction:
applyPictureInPictureInsetsValue:fromSource:withAnimationSettings:usingAnimationFence:
_updateNowPlayingFeaturesForPlaybackInfo:fromMediaItem:
_playbackInfoForMonitor:
_addTVRatingFeatureToMonitor:fromMediaItem:
_downloadAdvisoryImageForMonitor:forMediaItem:
_addRollsInfoFeaturesToMonitor:fromMediaItem:
_addSkipInfoFeaturesToMonitor:fromMediaItem:
_updatePlaybackInfoForUI:forFeature:animated:
_bootstrapPostPlayForPlaybackInfo:
localizedTitle
_showPostPlayUI:playbackInfo:animated:
_postPlayAllowedForPlaybackInfo:
isBootstrappingPostPlay
setWaitingForBootstrappingToFinishToShowPostPlay:
postPlayUIDismissTimer
setPostPlayUIDismissTimer:
dismissMediaInfoAnimated:
setBootstrappingPostPlay:
waitingForBootstrappingToFinishToShowPostPlay
target
setElapsedTime:precise:
_updatePlaybackInfo:forFeature:animated:
suppressErrorAlerts
setErrorAlertController:
errorAlertController
_playbackStateDidChange:
_currentMediaItemDidChange:
_playbackErrorDidOccur:
_isPlayingWithinExtras
_resetPictureInPictureInset
setFullscreenDisappearanceReason:
setFullscreenPlaybackInfo:
setPipPlaybackInfo:
_notifyExtrasBackgroundPlaybackToStop:
setErrorBehavior:
_configureDefaultFeatures
_supportsDualStreamPlayback
pausedDueToViewDisappeared
setPausedDueToViewDisappeared:
setIgnorePictureInPictureStop:
fullscreenDisappearanceReason
_showErrorIfAppropriate:
ignorePictureInPictureStop
playerViewControllerShouldDismiss:
playerViewControllerWillBeginDismissalTransition:
playerViewControllerDidEndDismissalTransition:
playerViewController:willPresentInterstitialTimeRange:
playerViewController:didPresentInterstitialTimeRange:
playerViewController:willResumePlaybackAfterUserNavigatedFromTime:toTime:
playerViewController:timeToSeekAfterUserNavigatedFromTime:toTime:
playerViewController:didSelectMediaSelectionOption:inMediaSelectionGroup:
playerViewController:didSelectExternalSubtitleOptionLanguage:
skipToNextItemForPlayerViewController:
skipToPreviousItemForPlayerViewController:
playerViewController:skipToNextChannel:
playerViewController:skipToPreviousChannel:
nextChannelInterstitialViewControllerForPlayerViewController:
previousChannelInterstitialViewControllerForPlayerViewController:
playerViewController:shouldPresentContentProposal:
playerViewController:didAcceptContentProposal:
playerViewController:didRejectContentProposal:
playerViewController:willTransitionToVisibilityOfTransportBar:withAnimationCoordinator:
playerViewController:scanFromElapsedTime:rate:imageBlock:
stopScanningPlayerViewController:
playerViewController:shouldHandleScanningForPlayerItem:
pictureInPictureControllerDidActivatePictureInPicture:
pictureInPictureControllerDidDestroyPictureInPicture:
pictureInPictureController:didUpdatePresentationState:
pictureInPictureController:didRequestPlayerMute:
stopAllPlayback
playerViewController:willResumePlaybackAfterUserNavigatedFromDate:toDate:
playerViewControllerWillStartPictureInPicture:
playerViewControllerDidStartPictureInPicture:
playerViewController:failedToStartPictureInPictureWithError:
playerViewControllerWillStopPictureInPicture:
playerViewControllerDidStopPictureInPicture:
playerViewControllerShouldAutomaticallyDismissAtPictureInPictureStart:
playerViewController:restoreUserInterfaceForPictureInPictureStopWithCompletionHandler:
setSuppressErrorAlerts:
_suppressErrorAlerts
_pictureInPictureActive
_pausedDueToViewDisappeared
_bootstrappingPostPlay
_waitingForBootstrappingToFinishToShowPostPlay
_ignorePictureInPictureStop
_fullscreenPlaybackInfo
_pipPlaybackInfo
_errorAlertController
_postPlayUIDismissTimer
_fullscreenDisappearanceReason
_setContentInsetAdjustmentBehavior:
_updateCollectionViewLayout:
_ensureScrollViewSnaps
updateContentOffsetWithTransitionCoordinator:
_findSnappingItemFromContentOffset:withVelocity:
_snapTargetContentOffset:toItemIndexPath:atItemOffset:
setContentOffset:
indexPathForItemAtPoint:
minimumInteritemSpacing
layoutAttributesForItemAtIndexPath:
updateShelfLayout:
setInvalidateLayout:
invalidateLayoutWithContext:
focusedIndexPath
setFocusedIndexPath:
_shouldUpdateBeforeLayout
_enqueueAsyncStrongSelfProcessingQueueBlock:
_onProcessingQueue_setState:
observerDispatchQueue
_notifyObservers:stateDidChange:
_enqueueObserverQueueBlock:
_observerDispatchQueue
setAmsShowIdentifier:
setAmsSeasonIdentifier:
_amsShowIdentifier
_amsSeasonIdentifier
_seasonNumbers
didSelect
_textView
maxTextWidth
subtitleBaseLine
_generateSiderowImagePointsForSize:
_generateSingleRowImagePoints
_generatePlainWeaveImagePointsForSize:
bannerMinHeight
_generatePointsForPlainWeaveSide:containerRect:imageSize:direction:
_backgroundView
_backgroundImageLogos
systemBackgroundColor
secondarySystemBackgroundColor
tertiarySystemBackgroundColor
tertiaryLabelColor
_secondaryFillColor
_tertiaryFillColor
_vui_darkModeKeyBlueColor
_vui_lightModeKeyBlueColor
opaqueSeparatorColor
vui_secondaryDynamicBackgroundColor
getRed:green:blue:alpha:
vui_blendWithColor:percentage:
vui_tertiaryTextColor
vui_primaryFillColor
vui_secondaryFillColor
vui_tertiaryFillColor
vui_keyBlueHighlightedColor
vui_opaqueSeparatorColor
vui_backgroundGradientColors
currentFetchResponse
_changeSetFromMediaItemEntityTypes:toMediaItemEntityTypes:
_currentFetchResponse
initWithMediaEntitySubtype:category:collectionType:appContext:
setCategory:
setCollectionType:
_category
_collectionType
_authorizationStatusDidChange:
_locationDidChange:
requestAuthorization
shouldUpdateUserLocation
productViewControllerDidFinish:
productViewController:didFinishWithResult:
productViewController:presentProductWithRequest:animated:
loadStoreURL:playOnLaunch:
loadStoreURL:playOnLaunch:__JS_EXPORT_AS__loadStoreURL:
allowsKeyedCoding
decodeObjectOfClass:forKey:
decodeDoubleForKey:
decodeIntegerForKey:
decodeBoolForKey:
encodeObject:forKey:
encodeDouble:forKey:
encodeInteger:forKey:
encodeBool:forKey:
hasFakeTimestamp
_copyWithResultClass:
supportsSecureCoding
mutableCopyWithZone:
encodeWithCoder:
_setBookmarkTimeWithoutUpdatingTimestamp:
_setBookmarkTimestamp:
_setPlayCount:
_setHasBeenPlayed:
_setHasBeenRented:
_setIsMarkedAsUnwatched:
hasRemoteData
setHasFakeTimestamp:
_hasBeenRented
_isMarkedAsUnwatched
_hasFakeTimestamp
_bookmarkTimestamp
vui_sizeThatFits:layout:withSizeCalculation:
minWidth
vui_applyChangeSet:inSection:rowAnimation:updateDataSourceBlock:completionHandler:
_vui_applyDeleteChange:inSection:rowAnimation:
_vui_applyInsertChange:inSection:rowAnimation:
_vui_applyMoveChanges:inSection:rowAnimation:
_vui_applyUpdateChanges:inSection:rowAnimation:
deleteSections:withRowAnimation:
deleteRowsAtIndexPaths:withRowAnimation:
insertRowsAtIndexPaths:withRowAnimation:
moveRowAtIndexPath:toIndexPath:
reloadRowsAtIndexPaths:withRowAnimation:
setShelfTypes:
setShelvesDelegate:
_shelfTypes
_dataSourcesByShelfType
_shelvesDelegate
channelLogoView
setChannelLogoView:
setAppleTVImageView:
setChannelsLabel:
appleTVImageView
channelsLabel
_channelLogoView
_appleTVImageView
_channelsLabel
calculatedIdentifier
setCalculatedIdentifier:
setArtworkCatalog:
_calculatedIdentifier
_artworkCatalog
initWithAddedCanonicalIDs:removedCanonicalIDs:
addedCanonicalIDs
setAddedCanonicalIDs:
_addedCanonicalIDs
applicationDidFinishLaunching:
application:willFinishLaunchingWithOptions:
application:didFinishLaunchingWithOptions:
applicationDidBecomeActive:
applicationWillResignActive:
application:handleOpenURL:
application:openURL:sourceApplication:annotation:
application:openURL:options:
applicationDidReceiveMemoryWarning:
applicationWillTerminate:
applicationSignificantTimeChange:
application:willChangeStatusBarOrientation:duration:
application:didChangeStatusBarOrientation:
application:willChangeStatusBarFrame:
application:didChangeStatusBarFrame:
application:didRegisterUserNotificationSettings:
application:didRegisterForRemoteNotificationsWithDeviceToken:
application:didFailToRegisterForRemoteNotificationsWithError:
application:didReceiveRemoteNotification:
application:didReceiveLocalNotification:
application:handleActionWithIdentifier:forLocalNotification:completionHandler:
application:handleActionWithIdentifier:forRemoteNotification:withResponseInfo:completionHandler:
application:handleActionWithIdentifier:forRemoteNotification:completionHandler:
application:handleActionWithIdentifier:forLocalNotification:withResponseInfo:completionHandler:
application:didReceiveRemoteNotification:fetchCompletionHandler:
application:performFetchWithCompletionHandler:
application:performActionForShortcutItem:completionHandler:
application:handleEventsForBackgroundURLSession:completionHandler:
application:handleWatchKitExtensionRequest:reply:
applicationShouldRequestHealthAuthorization:
application:handleIntent:completionHandler:
applicationDidEnterBackground:
applicationWillEnterForeground:
applicationProtectedDataWillBecomeUnavailable:
applicationProtectedDataDidBecomeAvailable:
application:supportedInterfaceOrientationsForWindow:
application:shouldAllowExtensionPointIdentifier:
application:viewControllerWithRestorationIdentifierPath:coder:
application:shouldSaveSecureApplicationState:
application:shouldRestoreSecureApplicationState:
application:willEncodeRestorableStateWithCoder:
application:didDecodeRestorableStateWithCoder:
application:shouldSaveApplicationState:
application:shouldRestoreApplicationState:
application:willContinueUserActivityWithType:
application:continueUserActivity:restorationHandler:
application:didFailToContinueUserActivityWithType:error:
application:didUpdateUserActivity:
application:userDidAcceptCloudKitShareWithMetadata:
application:configurationForConnectingSceneSession:options:
application:didDiscardSceneSessions:
setWindow:
_clearCollectionViewSelections:
_getFamilyMemberIdentifiersFromFamilyMembers
transitionCoordinator
tvCellWidth
setTvCellWidth:
_tvCellWidth
alphaProxyImageView
showAlphaImage:animated:
_setAlphaImageProxy:
_addAlphaProxyImageViewIfNeeded
setAlphaProxyImageView:
mutePlaybackInBackground
_addPlaybackViewControllerForPlayback
isForeground
setForeground:
setMutePlaybackInBackground:
_foreground
_mutePlaybackInBackground
_showsVideoControls
_alphaProxyImageView
setDescriptor:
_descriptor
storeIdentifier
persistentidentifier
isScreenshot
isMediaPlayerImage:
setSourceURL:
_populateValuesFromQueryItems
sourceURL
setPersistentidentifier:
setScreenshot:
setStoreIdentifier:
_screenshot
_persistentidentifier
_sourceURL
_storeIdentifier
_progressMaskImage
_appIconSize
_appIconRadius
appIcon
installProgress
_appIconImageView
_backgroundKnockoutView
_appIcon
_installProgress
_onProcessingQueue_updateStateAndNotifyDelegate:
fullyDownloadedAssetBytes
setFullyDownloadedAssetBytes:
assetControllers
setAssetControllers:
_onProcessingQueue_setState:andNotifyDelegate:
_downloadingAssetControllersWithAssetControllers:
_allAssetsDownloaded
_stateFromDownloadingAssetControllers:fullyDownloadedAssetBytes:
_assetControllers
_fullyDownloadedAssetBytes
recordPerfEvent:
recordLogEvent:
vibrantEffectView
setVibrantEffectView:
_vibrantEffectView
_prepare
setMediaCategory:
_numberForObject:
_addPredicatesToMediaQuery:withFilters:
wlk_arrayForKey:
_setSortOrderingForMediaQuery:withSortProperties:sortDirectionMapping:
_addPrefetchPropertiesToMediaQuery:prefetchProperties:
_timeIntervalNumberForObject:
wlk_boolForKey:defaultValue:
_mpPropertiesForProperties:
_mpOrderingDirectionMappingForSortDirectionMapping:
_mediaCategory
drawInContext:
uiStyle
setUiStyle:
_uiStyle
initWithBannerType:
highlightedBackgroundColor
_isPreModeBanner
_highlightedBackgroundColor
_bannerMinHeight
_maxTextWidth
_subtitleBaseLine
setContext:
_metadataLock
_reportingEnabled
_UUID
_context
childView
_childView
labels
setLabels:
enumerateAttribute:inRange:options:usingBlock:
_labels
attributedTextFromString:fontColor:fontSize:
initWithAttributedString:tintColor:cornerRadius:
boldSystemFontOfSize:
initWithString:attributes:
textBlendMode
setTextBlendMode:
badgeInsets
setBadgeInsets:
badgeStyle
_badgeStyle
_badgeInsets
_presentationTypeFromString:
setModalOverModalAllowed:
setNavigationBarAdjustedToSizeClass:
setIsInteractivePopGestureAllowed:
_preferredSizeFromConfig:
isNavigationBarHidden
isNavigationBarAdjustedToSizeClass
isInteractivePopGestureAllowed
_animated
_navigationBarHidden
_navigationBarAdjustedToSizeClass
_isInteractivePopGestureAllowed
_modalOverModalAllowed
sizeForNumberOfPages:
setCurrentPage:
setNumberOfPages:
currentPageDidChange
addNumberOfPages:
roundedControlPageChangeEventWithSender:
currentPage
setCurrentPageIndicatorTintColor:
setPageIndicatorTintColor:
systemGray6Color
systemGray5Color
systemGray4Color
systemGray3Color
systemGray2Color
quaternarySystemFillColor
tertiarySystemFillColor
secondarySystemFillColor
systemFillColor
tertiarySystemGroupedBackgroundColor
secondarySystemGroupedBackgroundColor
systemGroupedBackgroundColor
placeholderTextColor
linkColor
quaternaryLabelColor
secondaryLabelColor
labelColor
systemIndigoColor
systemTealColor
systemPurpleColor
systemYellowColor
systemOrangeColor
systemBlueColor
systemGreenColor
initWithWhite:alpha:
initWithRed:green:blue:alpha:
initWithDynamicProvider:
scanHexLongLong:
_changePageOnPanWithSender:
_changePageOnTapWithSender:
locationInView:
currentThread
overrideUserInterfaceStyle
imageNamed:inBundle:compatibleWithTraitCollection:
initWithFloat:
JSGlobalContextRef
JSValueRef
currentContext
currentThis
currentArguments
exceptionHandler
valueWithUndefinedInContext:
valueWithNewErrorFromMessage:inContext:
initializeUIFactory
initializeJSContext:
viewControllerWith:appContext:viewElement:documentOptions:
tv_rowMetricsValue
toObject
evaluateDelegateBlockSync:
setContinuousBorder:
leftSwipped:
rightSwipped:
swippedUp
menuPressed
addTarget:action:
setDirection:
tabBarController
tabBar
parentFocusEnvironment
focusItemContainer
updateFocusIfNeeded
soundIdentifierForFocusUpdateInContext:
preferredFocusedView
isObject
loadImmediately
globalObject
isInstanceOf:
setLoadImmediately:
initWithPromiseFunction:cancelFunction:
_viewForIKElement:existingView:
_viewControllerForIKElement:existingViewController:
_collectionViewCellClassForIKElement:
_parseAppConfigurationForIKElement:
_imageProxyForIKElement:withLayout:
setExtendedInterfaceCreator:
_navigationControllerForTabIdentifier:
_parseAppConfigurationForElement:
_imageProxyForElement:
playerViewControllerForPlayer:
setDynamicProxyProvider:
boundingRectWithSize:options:attributes:context:
currentTraitCollection
imageProxyWithURL:
focusSizeIncrease
overrideTraitCollectionForChildViewController:
childViewControllerForStatusBarHidden
shouldAutomaticallyForwardAppearanceMethods
resizableImageWithCapInsets:
@16@0:8
@24@0:8@16
@32@0:8@16@24
v24@0:8@16
v16@0:8
@"NSDictionary"
B24@0:8@16
#16@0:8
@24@0:8:16
@32@0:8:16@24
@40@0:8:16@24@32
B16@0:8
B24@0:8#16
B24@0:8:16
Vv16@0:8
Q16@0:8
^{_NSZone=}16@0:8
B24@0:8@"Protocol"16
@"NSString"16@0:8
v32@0:8@16@24
v32@0:8@"NSOrderedSet"16@"NSString"24
v32@0:8@"IKAppContext"16@"NSString"24
@"IKUpdateServiceRequest"16@0:8
@40@0:8@16@24@32
@"IKUpdateServiceRequest"
@"NSArray"
@"NSMutableOrderedSet"
@"IKViewElement"
@24@0:8^{_NSZone=}16
@"NSString"
@48@0:8{CGRect={CGPoint=dd}{CGSize=dd}}16
{CGSize=dd}32@0:8{CGSize=dd}16
{CGSize=dd}36@0:8{CGSize=dd}16B32
@"VUIUpsellOfferViewLayout"
@"VUILabel"
@"VUIAppleTVChannelLogoView"
@"UIVisualEffectView"
@"UIFocusContainerGuide"
@"NSError"
@"NSOperationQueue"
@"VUIMPMediaLibrary"
v32@0:8@?16@?24
v24@0:8@?16
v24@0:8d16
v20@0:8B16
@?16@0:8
@"VUIAppInstallConfirmationViewController"
@"<WLKInstallable>"
@24@0:8q16
@32@0:8q16@24
@40@0:8q16@24@32
v36@0:8@16@24B32
v32@0:8@16@?24
v40@0:8@16@24@?32
v44@0:8@16@24B32@36
v40@0:8@16@24@32
@"NSURL"
v40@0:8@16B24B28@?32
v48@0:8@16@24@32@40
@28@0:8@16B24
q16@0:8
v24@0:8q16
@"NSNumber"
@"NSObject<VUIStoreFPSKeyLoaderDelegate>"
@"TVPPlaybackReportingEventCollection"
@"NSData"
@"NSMutableArray"
@"TVPContentKeyRequest"
@"NSDate"
@"TVPContentKeySession"
@"NSMutableDictionary"
B28@0:8@16B24
@"<VUIMediaEntitiesFetchControllerDelegate>"
@"VUIMediaEntityFetchResponse"
@32@0:8@16q24
v32@0:8@"TVApplicationController"16@"JSContext"24
v32@0:8@"TVApplicationController"16@"NSDictionary"24
v32@0:8@"TVApplicationController"16@"NSError"24
@"TVPlayer"24@0:8@"TVApplicationController"16
@"<UIViewControllerAnimatedTransitioning>"40@0:8@"UIViewController"16@"UIViewController"24@"UIViewController"32
@"<UIViewControllerAnimatedTransitioning>"24@0:8@"UIViewController"16
@"<UIViewControllerInteractiveTransitioning>"24@0:8@"<UIViewControllerAnimatedTransitioning>"16
@"UIPresentationController"40@0:8@"UIViewController"16@"UIViewController"24@"UIViewController"32
v32@0:8@"MCProfileConnection"16@"NSDictionary"24
v72@0:8@16@24@32@40@48B56B60@?64
v52@0:8@16@24@32B40@?44
@"VUIExtrasApplicationController"
@"_TVNavigationZoomAnimator"
@"_TVProductTemplateZoomAnimator"
v28@0:8B16@?20
v28@0:8B16@?<v@?@"NSString">20
v40@0:8@"NSObject<VUIHomeShareMediaLibraryManager>"16@"NSArray"24@"VUICollectionChangeSet"32
@"VUIMediaLibrary"
@"NSObject<OS_dispatch_queue>"
@"VUIDeviceMediaLibrary"
@"VUISidebandMediaLibrary"
@"VUIAggregateMediaLibrary"
@"NSObject<VUIHomeShareMediaLibraryManager>"
v40@0:8@16@24Q32
B48@0:8{CGRect={CGPoint=dd}{CGSize=dd}}16
v32@0:8Q16@24
Q24@0:8@16
@"<VUIMediaLibraryApplicationControllerDelegate>"
@32@0:8@16@?24
v24@0:8Q16
v52@0:8@16@24d32@40B48
v24@0:8@"VUIRentalExpirationLabel"16
@"_TVStackingPosterView"
@"UIImage"
v32@0:8@"UIResponder"16@?<v@?B>24
@"NSDateComponentsFormatter"
@"NSNumberFormatter"
v36@0:8@16B24@?28
@"UIView"
@"UICollectionView"
@32@0:8@16Q24
q24@0:8@16
d16@0:8
@"VUITextLayout"
@"TVImageLayout"
@"VUIMediaEntityType"16@0:8
@"VUIMediaEntityType"
@"NSString"24@0:8@"NSString"16
@"NSString"32@0:8@"NSString"16@"NSArray"24
v24@0:8@"NSDictionary"16
B56@0:8{CGRect={CGPoint=dd}{CGSize=dd}}16@48
q32@0:8@16q24
@40@0:8@16q24q32
d24@0:8@16
i32@0:8q16q24
q24@0:8@"VUIScorecardView"16
q32@0:8@"VUIScorecardView"16q24
@"NSString"40@0:8@"VUIScorecardView"16q24q32
d24@0:8@"VUIScorecardView"16
@"UIImage"24@0:8@"VUIScorecardView"16
v24@0:8@"UIImage"16
v32@0:8{CGSize=dd}16
@"UIImage"16@0:8
v24@0:8@"VUISportsScoreboardViewModel"16
@"NSDictionary"16@0:8
v32@0:8B16B20@24
v36@0:8{CGSize=dd}16B32
v32@0:8@16d24
v48@0:8@16@24@32^v40
{CGSize=dd}16@0:8
@"VUISportsOverlayLayout"
@"VUISportsScoreboardViewModel"
@"VUIScorecardView"
@"VUITextBadgeView"
@"_TVImageView"
@"IKImageElement"
@"NSOperation"
@"UICollectionReusableView"
{CGSize="width"d"height"d}
@"VUIOfferView"
@"VUIImageView"
@52@0:8@16@24@?32B40@44
B32@0:8@16@24
@40@0:8@16@24q32
q32@0:8@"UICollectionView"16q24
@"UICollectionViewCell"32@0:8@"UICollectionView"16@"NSIndexPath"24
q24@0:8@"UICollectionView"16
@"UICollectionReusableView"40@0:8@"UICollectionView"16@"NSString"24@"NSIndexPath"32
B32@0:8@"UICollectionView"16@"NSIndexPath"24
v40@0:8@"UICollectionView"16@"NSIndexPath"24@"NSIndexPath"32
@"NSArray"24@0:8@"UICollectionView"16
@"NSIndexPath"40@0:8@"UICollectionView"16@"NSString"24q32
v48@0:8@16{CGPoint=dd}24N^{CGPoint=dd}40
v28@0:8@16B24
v40@0:8@16@24d32
v24@0:8@"UIScrollView"16
v48@0:8@"UIScrollView"16{CGPoint=dd}24N^{CGPoint=dd}40
v28@0:8@"UIScrollView"16B24
@"UIView"24@0:8@"UIScrollView"16
v32@0:8@"UIScrollView"16@"UIView"24
v40@0:8@"UIScrollView"16@"UIView"24d32
B24@0:8@"UIScrollView"16
B48@0:8@16:24@32@40
v48@0:8@16:24@32@40
{CGPoint=dd}40@0:8@16{CGPoint=dd}24
B40@0:8@16@24@32
@48@0:8@16@24{CGPoint=dd}32
v32@0:8@"UICollectionView"16@"NSIndexPath"24
v40@0:8@"UICollectionView"16@"UICollectionViewCell"24@"NSIndexPath"32
v48@0:8@"UICollectionView"16@"UICollectionReusableView"24@"NSString"32@"NSIndexPath"40
B48@0:8@"UICollectionView"16:24@"NSIndexPath"32@40
v48@0:8@"UICollectionView"16:24@"NSIndexPath"32@40
@"UICollectionViewTransitionLayout"40@0:8@"UICollectionView"16@"UICollectionViewLayout"24@"UICollectionViewLayout"32
B32@0:8@"UICollectionView"16@"UICollectionViewFocusUpdateContext"24
v40@0:8@"UICollectionView"16@"UICollectionViewFocusUpdateContext"24@"UIFocusAnimationCoordinator"32
@"NSIndexPath"24@0:8@"UICollectionView"16
@"NSIndexPath"40@0:8@"UICollectionView"16@"NSIndexPath"24@"NSIndexPath"32
{CGPoint=dd}40@0:8@"UICollectionView"16{CGPoint=dd}24
B40@0:8@"UICollectionView"16@"NSIndexPath"24@"<UISpringLoadedInteractionContext>"32
v24@0:8@"UICollectionView"16
@"UIContextMenuConfiguration"48@0:8@"UICollectionView"16@"NSIndexPath"24{CGPoint=dd}32
@"UITargetedPreview"32@0:8@"UICollectionView"16@"UIContextMenuConfiguration"24
v40@0:8@"UICollectionView"16@"UIContextMenuConfiguration"24@"<UIContextMenuInteractionCommitAnimating>"32
@"UILabel"
@"UICollectionViewFlowLayout"
@"VUIButtonLayout"
@"VUIMediaTagsViewLayout"
@"VUINowPlayingHudMetaDataViewLayout"
@"VUINowPlayingHudButtonsLayout"
v32@0:8@"<TVObserving>"16@"NSString"24
v24@0:8@"<TVObserving>"16
@"TVMediaInfo"16@0:8
v32@0:8@"_TVShelfViewController"16@"NSIndexPath"24
v32@0:8@"_TVShelfViewController"16@"UIView"24
@"NSArray"24@0:8@"IKAppDocument"16
@24@0:8Q16
@"_TVShelfViewController"
@"TVMediaInfo"
@"TVObservableEventController"
@32@0:8d16^q24
@24@0:8d16
@"NSArray"32@0:8d16^q24
@"NSArray"24@0:8d16
@52@0:8{CGRect={CGPoint=dd}{CGSize=dd}}16B48
{?="respondsToRowMetricsForExpectedWidth"B"respondsToShouldBindRowsTogether"B"respondsToShowcaseRowMetricsForExpectedWidth"B}
@56@0:8@16@24@32@40@48
{CGRect={CGPoint=dd}{CGSize=dd}}16@0:8
v48@0:8{CGRect={CGPoint=dd}{CGSize=dd}}16
{CGRect="origin"{CGPoint="x"d"y"d}"size"{CGSize="width"d"height"d}}
@"CALayer"
@"VUIOverlayLayout"
@"_TVProgressView"
@"VUIMediaItemEntityTypesFetchResponse"
@"MPMediaLibrary"
@"NSObject<NSCopying>"
@"VUIAppInstallLockup"
@"VUIBuyButtonLockup"
@"NSLayoutConstraint"
@"UIButton"
v40@0:8@16N^B24q32
v24@0:8@"UIViewController<TVMediaController>"16
v40@0:8@"UIViewController<TVMediaController>"16N^B24q32
v32@0:8@16B24B28
v24@0:8@"NSString"16
v32@0:8@"TVMediaInfo"16B24B28
@"UIViewController<TVMediaController>"16@0:8
v24@0:8B16B20
v32@0:8B16@20B28
{UIEdgeInsets=dddd}20@0:8B16
{?="respondsToViewWillAppear"B"respondsToViewDidAppear"B"respondsToViewWillDisappear"B"respondsToViewDidDisappear"B"respondsToEnableUIMode"B"respondsToSkipIntro"B"respondsToFromBeginning"B"respondsToMoreInfo"B"respondsToMenuPress"B"respondsToSafeAreaChange"B"respondsToUserDidInteract"B"respondsToMediaInfoDidChange"B}
@"<VUINowPlayingViewControllerDelegate>"
@"TVMediaPlaybackManager"
@"VUIMediaController"
@"IKAppContext"
@"UIViewController<TVMediaControllerHosting>"
@"VUINowPlayingHudView"
@"VUINowPlayingViewModel"
@"VUIButton"
@"VUIPostPlayDocumentServiceViewController"
@"VUINowPlayingSkipButtonLayout"
@"VUIVideoAdvisoryView"
@"UITapGestureRecognizer"
@"VUIMPMediaEntityImageLoadParams"24@0:8Q16
@"VUIPlistMediaEntityImageLoadParams"24@0:8Q16
{UIEdgeInsets=dddd}16@0:8
@"VUIAppleTVChannelLogoLayout"
@"UIViewController"
v24@0:8@"NSIndexPath"16
v24@0:8@"VUIMenuCollectionViewController"16
v24@0:8@"VUILibraryDataSource"16
v32@0:8@"UIViewController"16@"VUIFamilyMember"24
@"VUIFamilyMember"16@0:8
v24@0:8@"VUIFamilyMember"16
@"VUIFamilyMember"
@"VUIMenuCollectionViewController"
@"VUITVLibraryView"
@"VUILibraryMenuDataSource"
@"NSIndexPath"
@"NSSet"
@"VUIViewControllerContentPresenter"
@"UIActivityIndicatorView"
v32@0:8{_NSRange=QQ}16
@32@0:8@16^@24
{_NSRange=QQ}16@0:8
@"NSPredicate"
{_NSRange="location"Q"length"Q}
@"<VUITVButtonHandler>"
@"NSMapTable"
@"VUIExtrasInfo"
@"VUIFamilySharingRelationships"
@"VUIVideosPlayable"
@"VUIFamilySharingEntity"
@"VUIMenuCollectionViewCell"
Q24@0:8@"_TVCarouselView"16
@"UICollectionViewCell"32@0:8@"_TVCarouselView"16Q24
@"UILayoutGuide"
@"UIStackView"
@"UIScrollView"
@"_TVCarouselView"
@"VUIPlistMediaDatabaseSeason"
@"_TVContentRating"
@"VUIMediaItemCredits"
@"VUIPlistMediaLibrary"
@"UIImageView"
@"VUISeparatorView"
{UIEdgeInsets="top"d"left"d"bottom"d"right"d}
@"<VUIMediaItemEntityTypesFetchControllerDelegate>"
B32@0:8@16Q24
v32@0:8@16Q24
B32@0:8@"_TVCarouselView"16Q24
v32@0:8@"_TVCarouselView"16Q24
v40@0:8@"_TVCarouselView"16@"UICollectionViewCell"24Q32
v24@0:8@"_TVCarouselView"16
@"UIView<VUIPageControlView>"
{TVCornerRadii=dddd}16@0:8
v48@0:8{TVCornerRadii=dddd}16
@"VUIFeedbackTableLayout"
@"TVRatingBadgeLayout"
@"UIColor"
{TVCornerRadii="topLeft"d"topRight"d"bottomLeft"d"bottomRight"d}
B24@0:8@"UIGestureRecognizer"16
B32@0:8@"UIGestureRecognizer"16@"UIGestureRecognizer"24
B32@0:8@"UIGestureRecognizer"16@"UITouch"24
B32@0:8@"UIGestureRecognizer"16@"UIPress"24
@"UIPanGestureRecognizer"
@44@0:8@16{CGSize=dd}24B40
B32@0:8@16@?24
@"NSDictionary"24@0:8@"NSArray"16
@"VUIJSMediaEntityType"16@0:8
@48@0:8@16@24@32@40
@"VUIJSMediaEntityType"
@"MPMediaEntity"
@56@0:8{CGRect={CGPoint=dd}{CGSize=dd}}16@48
@"AMSURLResult"
d32@0:8{CGSize=dd}16
@"VUIOfferLayout"
@"VUIMediaTagsView"
v32@0:8@"VUIFamilyMember"16@"UIImage"24
@"_TVMonogramView"
@"VUIMediaAPIClient"
@"NSURLRequest"
@"VUIMediaAPIResponseMetadata"
@"VUIProgressBarLayout"
@"VUITextBadgeLayout"
v48@0:8@16@24d32@?40
d40@0:8@16@24q32
v40@0:8{CGSize=dd}16@32
@"VUILibraryStackView"
@20@0:8B16
q24@0:8Q16
Q24@0:8q16
@36@0:8@16@24B32
I16@0:8
v20@0:8I16
v48@0:8{UIEdgeInsets=dddd}16
i16@0:8
v20@0:8i16
@"NSShadow"
@"SSAuthenticateRequest"
@"VUIAction"
v68@0:8@?16@24B32@36@44@52@60
v60@0:8@16@24i32@36@44@?52
@52@0:8B16@20@28@36@44
@"<VUILibraryDataSourceDelegate>"
@"NSArray"16@0:8
v32@0:8@16q24
B48@0:8@16{_NSRange=QQ}24@40
B24@0:8@"UITextField"16
v24@0:8@"UITextField"16
v32@0:8@"UITextField"16q24
B48@0:8@"UITextField"16{_NSRange=QQ}24@"NSString"40
@"UISwitch"
@"UITextField"
@"VUIDebugViewDefaults"
v24@0:8@"JSValue"16
@"VSAccountStore"
@"NSOperation<VUIImageLoadingOperation>"
@52@0:8@16{CGSize=dd}24B40@?44
@60@0:8@16{CGSize=dd}24B40q44@?52
@68@0:8@16{CGSize=dd}24B40q44@52@?60
@"NSString"24@0:8@16
@"NSURL"24@0:8@16
@52@0:8@16{CGSize=dd}24B40@?<v@?@"TVImage"@"NSString"@"NSDate"Q@"NSError">44
@60@0:8@16{CGSize=dd}24B40q44@?<v@?@"TVImage"@"NSString"@"NSDate"Q@"NSError">52
@68@0:8@16{CGSize=dd}24B40q44@"<IKNetworkRequestLoader>"52@?<v@?@"TVImage"@"NSString"@"NSDate"Q@"NSError">60
d32@0:8d16@24
d40@0:8@16d24@32
@44@0:8q16q24d32I40
@60@0:8q16@24q32d40I48q52
@"_UIFloatingContentView"
{CGSize=dd}40@0:8@16@24@32
{UIEdgeInsets=dddd}40@0:8@16@24q32
{CGSize=dd}40@0:8@16@24q32
{CGSize=dd}40@0:8@"UICollectionView"16@"UICollectionViewLayout"24@"NSIndexPath"32
{UIEdgeInsets=dddd}40@0:8@"UICollectionView"16@"UICollectionViewLayout"24q32
d40@0:8@"UICollectionView"16@"UICollectionViewLayout"24q32
{CGSize=dd}40@0:8@"UICollectionView"16@"UICollectionViewLayout"24q32
v24@0:8@"VUIMediaItem"16
v32@0:8@"NSString"16@"NSString"24
@"VUIVisualEffectLabel"
@"VUIMediaCollection"
@"VUITVLibraryEpisodeListCell"
@"UICollectionViewDiffableDataSource"
v40@0:8@16Q24Q32
v40@0:8@"_UIFloatingContentView"16Q24Q32
v32@0:8@"_UIFloatingContentView"16Q24
v28@0:8Q16B24
@"VUIRouterDataSource"
d48@0:8q16d24@32@40
@"VUICardViewLayoutFactory"
v32@0:8@"NSArray"16@"NSArray"24
@"NSDictionary"32@0:8@16@"NSArray"24
@"NSDictionary"32@0:8@"NSNumber"16@"NSArray"24
v40@0:8@"NSString"16@"NSDictionary"24@"JSValue"32
@"NSDictionary"32@0:8@"NSString"16@"NSArray"24
@"NSString"24@0:8@"NSNumber"16
B24@0:8@"NSDictionary"16
v32@0:8@"NSDictionary"16@"JSValue"24
q24@0:8@"NSString"16
@36@0:8@16B24@28
@"MPUQueryDataSource"
@"VUIOrderedItemsMap"
@32@0:8q16q24
@40@0:8@16^q24@32
@48@0:8@16^B24^q32@40
@"<VUIRentalExpirationLabelDelegate>"
@"NSTimer"
@"VUITVEpisodeInformationLayout"
@"_TVAnimatedLabel"
@"VUIEpisodeLockupFloatingContentView"
@"UIBarButtonItem"
@"VUIAppInstallConfirmationView"
@"SSLookupItemOffer"
@"VUIAppSpinnerView"
B48@0:8@16@24@32^@40
B64@0:8@16@24@32@40@48^@56
v56@0:8q16@24@32@40@48
B56@0:8@16@24@32@40@?48
B56@0:8@16@24@32@40^@48
@"VUIAppInstallView"
@"VUITextBadge"
@"TVApplicationController"
@"VUIBootURLController"
@"UINavigationController"
@48@0:8Q16@24@32@40
@"TVPPlaylist"
@"TVImageProxy"
@32@0:8Q16@24
q24@0:8q16
q28@0:8Q16B24
@48@0:8@16Q24@32@40
@"VUIProductMetadataLayout"
v40@0:8@"VUIMediaEntitiesFetchController"16@"NSArray"24@"VUIMediaEntitiesFetchControllerResult"32
v40@0:8@"VUIMediaEntitiesFetchController"16@"NSArray"24@"NSError"32
B24@0:8@"VUIMediaEntitiesFetchController"16
@"VUIMediaEntitiesFetchController"
@40@0:8Q16Q24@32
v28@0:8B16@20
v28@0:8B16@"JSValue"20
v32@0:8@"VUINowPlayingObserver"16@"VUINowPlayingObservation"24
v28@0:8@?16B24
@"<VUIMediaLibraryFetchControllerQueueDelegate>"
@"VUIMediaLibraryFetchControllerQueueOperation"
@"VUIDelayOperation"
@"VUINowPlayingObserver"
@48@0:8@16@24Q32@40
@48@0:8@16@24@32@?40
@"VUIAccessView_tvOS"
@"OBPrivacyLinkController"
@40@0:8@16@24@?32
v32@0:8@"TVBrowserViewController"16@"TVViewElement"24
B32@0:8@"TVBrowserViewController"16@"TVViewElement"24
@"<VUIScorecardViewDelegate>"
@"VUIScoreboardLayout"
@"NSMutableSet"
@"VUIFeedbackView"
@"VUIBookmarkKey"
@"VUIUniversalPlaybackPositionRecord"
@"VUISyncingKeyValueStore"
v40@0:8{TVShowcaseConfig=qqd}16
@"VUIProductBannerView"
@"VUIUpsellOfferView"
@40@0:8@16q24@32
v32@0:8@"NSString"16Q24
@"NSDictionary"24@0:8@"NSString"16
v32@0:8@"NSString"16@"JSValue"24
B24@0:8o^@16
B32@0:8@16o^@24
@"NSObject<OS_dispatch_source>"
d32@0:8@16d24
d32@0:8@"VUILabel"16d24
B24@0:8d16
Q24@0:8d16
d24@0:8d16
@32@0:8Q16q24
@28@0:8B16q20
@40@0:8@16Q24@32
v48@0:8@16@24d32d40
{CGSize=dd}40@0:8@16d24d32
{UIEdgeInsets=dddd}32@0:8{CGSize=dd}16
v28@0:8B16@?<v@?>20
@"<VUITVLibraryEpisodeListCellDelegate>"
@"UIView<TVAuxiliaryViewSelecting>"
@"UIPress"
@"VUIMediaItem"
@"VUITVEpisodeInformationView"
@"VUIEditorialCellLayout"
@"VUIFavoriteBannerView"
@"VUIFavoriteBannerLayout"
v40@0:8@"MPStoreDownloadManager"16@"NSArray"24@"NSArray"32
v32@0:8@"MPStoreDownloadManager"16@"MPStoreDownload"24
v32@0:8@"MPStoreDownloadManager"16@"NSArray"24
v24@0:8@"MPStoreDownloadManager"16
@"MPStoreDownload"
{UIEdgeInsets=dddd}24@0:8q16
@"VUIVideoAdvisoryLogoImageDownloader"
@"VUIUpNextButtonProperties"16@0:8
@"VUIUpNextButtonProperties"
v20@0:8f16
@"VUICardView"
@52@0:8@16B24@28@36@44
@"JSValue"32@0:8@"NSDictionary"16@"JSValue"24
v48@0:8@16@24@32@?40
@"NSXPCConnection"
@"VUIMenuDataSource"
@"VUINowPlayingHudKeys"
@"VUINowPlayingHudViewLayout"
@"VUINowPlayingHudMetaDataView"
@"VUICircularProgress"
@"VUIWatchNowTemplateBackgroundLayer"
@60@0:8@16@24@32@40@48B56
d32@0:8d16d24
q44@0:8d16d24B32Q36
q48@0:8d16d24B32Q36B44
{UIEdgeInsets=dddd}24@0:8@16
{UIEdgeInsets=dddd}24@0:8d16
{UIEdgeInsets=dddd}56@0:8q16{UIEdgeInsets=dddd}24
d32@0:8q16q24
d40@0:8q16q24Q32
d48@0:8q16q24Q32@40
d48@0:8q16q24Q32d40
d88@0:8q16q24Q32d40q48{UIEdgeInsets=dddd}56
d40@0:8q16q24@32
q24@0:8d16
q56@0:8d16{UIEdgeInsets=dddd}24
@24@0:8@?16
B36@0:8@16@24B32
@"NSOrderedSet"
@"AVPlayerViewController"
@"NSObject<TVPAVFPlayback>"
@"VUIMediaInfo"
@"VUISportsProductBannerView"
@"VUIEventDataSource"
d32@0:8@16@24
@"WLKChannelDetails"
@"VUIAppInstallerViewController"
@"VUIAccessViewController"
@"NSUUID"
@"VUIUpNextStateView"
@"VUIButton<VUIUpNextButtonProtocol>"
v48@0:8@16{CGSize=dd}24@?40
@40@0:8@16{CGSize=dd}24
{CGSize=dd}32@0:8@16@24
@"VUIFeedbackLayout"
@"TVRatingBadgeView"
@"MPMediaItemCollection"
@"VUIExtrasDescriptionView"
B32@0:8@16d24
v40@0:8@16q24@?32
@"VUIFocusableTextView"
@36@0:8@16Q24B32
@56@0:8{CGRect={CGPoint=dd}{CGSize=dd}}16d48
v28@0:8d16B24
@"CAShapeLayer"
@"CADisplayLink"
v24@0:8@"NSArray"16
v48@0:8@16B24B28@?32@?40
B32@0:8@16q24
v48@0:8@"TVMediaPlaybackManager"16B24B28@?<v@?>32@?<v@?B>40
B32@0:8@"TVMediaPlaybackManager"16q24
B24@0:8@"TVMediaPlaybackManager"16
v24@0:8@"TVMediaPlaybackManager"16
v28@0:8q16B24
@32@0:8@16d24
v40@0:8@16d24@?32
{?="respondsToFeatureDidChangeState"B"respondsToActiveFeatureChangedFrom"B}
@"<VUINowPlayingFeatureMonitorDelegate>"
@"<VUINowPlayingFeature>"
v32@0:8@"NSArray"16@?<v@?>24
v32@0:8@"NSURL"16@"NSData"24
v48@0:8^@16^@24^@32@40
v48@0:8@16Q24Q32@?40
d24@0:8Q16
@40@0:8@16Q24Q32
@"VUIPlistMediaDatabaseItem"
v48@0:8@"NSString"16@"NSString"24@"NSString"32@"NSDictionary"40
v24@0:8@"NSNumber"16
@"WLKNotificationCenter"
{CGSize=dd}40@0:8d16{CGSize=dd}24
d40@0:8d16@24@32
v48@0:8@16q24@32^{?={UIEdgeInsets=dddd}{UIEdgeInsets=dddd}{UIEdgeInsets=dddd}}40
{TVCornerRadii=dddd}24@0:8q16
d24@0:8q16
@"VUIDocumentContextData"
@"VUIDocumentPreFetchedData"
@"VUIDocumentUIConfiguration"
@"VUIMediaEntityFetchRequest"
@"VUIMediaEntity"
v40@0:8@16Q24@?32
v48@0:8@16@24Q32@?40
@"WLKPlaybackReporter"
@"VUIPostPlayConfig"
@"VUICollectionChangeSet"
@"VUITVDescriptiveAlertView"
@"UITextView"
v32@0:8Q16d24
B40@0:8@16Q24d32
@48@0:8@16Q24d32@40
@44@0:8@16@24@32B40
@36@0:8@16B24q28
v32@0:8q16@24
@"<VUIPostPlayControllerDelegate>"
@"VUIViewUserInteractionMonitor"
@"MPMediaItem"
@"NSURLSession"
@"NSURLSessionDataTask"
v48@0:8o^{CGRect={CGPoint=dd}{CGSize=dd}}16o^{UIEdgeInsets=dddd}24o^{UIEdgeInsets=dddd}32o^{UIEdgeInsets=dddd}40
{?="layoutBelowDisabled"b1}
@"VUINowPlayingConfig"
@"VUIAutoPlayConfig"
@"VUIInAppMessagesConfig"
@"VUIProductInfoAiringView"
@"VUIContentMetadata"
v44@0:8@16@24B32@?36
@"VUICollectionHeaderView"
@"<VUILibraryGridCollectionViewControllerDelegate>"
@"VUIMediaEntitiesDataSource"
@"UICollectionViewCell"
v48@0:8@16Q24@?32@?40
v56@0:8@16Q24@?32@?40@?48
v60@0:8@16Q24@?32@?40B48@?52
v40@0:8@16@?24@?32
@44@0:8@16q24@32B40
@48@0:8@16q24q32@40
@"VUIAsynchronousWorkToken"
@28@0:8Q16B24
@32@0:8Q16Q24
d32@0:8Q16d24
@"VUISportsProductBannerLayout"
B20@0:8i16
@"<VUIVideoLeaseAgentDelegate>"
@"NSObject<TVPMediaItem>"
@40@0:8@16{_NSRange=QQ}24
@"VUIMediaEntityKind"
@"MPMediaPredicate"
@"AMSURLSession"
@"AMSMediaTokenService"
v32@0:8@"VUIVideoLeaseAgent"16@"NSError"24
v40@0:8@"VUIStoreFPSKeyLoader"16@"NSData"24@"TVPContentKeyRequest"32
v40@0:8@"VUIStoreFPSKeyLoader"16@"NSDate"24@"NSDate"32
v32@0:8@"VUIStoreFPSKeyLoader"16@"TVPContentKeyRequest"24
v40@0:8@"VUIStoreFPSKeyLoader"16@"NSError"24@"TVPContentKeyRequest"32
B32@0:8@"VUIStoreFPSKeyLoader"16@"TVPContentKeyRequest"24
@64@0:8@16q24@32@40@48@56
v44@0:8d16d24d32B40
v32@0:8d16d24
B24@0:8Q16
@"VUIVideoLeaseAgent"
@"VUIStoreFPSKeyLoader"
@"TVSDocumentLoader"
@"TVPPlayer"
@"VUIBookmark"
@"WLKOfferListing"
{CGPoint=dd}16@0:8
{CGPoint="x"d"y"d}
@"SBKUniversalPlaybackPositionStore"
@"NSLock"
@"VUIUPPClientState"
@"<SBKUniversalPlaybackPositionTransactionContext>"24@0:8@?<v@?@"<SBKUniversalPlaybackPositionMediaItem>">16
v24@0:8@"<SBKUniversalPlaybackPositionTransactionContext>"16
v40@0:8@"<SBKUniversalPlaybackPositionTransactionContext>"16@"NSString"24@?<@"SBKUniversalPlaybackPositionMetadata"@?>32
v32@0:8@"NSSet"16@?<v@?@"NSString"@^B>24
@"VUIMediaLibraryManager"
@"NSObject<VUIMediaLibraryIdentifier>"
@"<VUIMenuCollectionViewControllerDelegate>"
@"VUICollectionConfiguration"
@"VUICollectionView"
@"VUIMenuSectionHeaderCollectionViewCell"
@"TVPStateMachine"
@"VUIVideoAdvisoryViewLayout"
v28@0:8@16I24
@"VUINowPlayingObservation"
@"<VUINowPlayingObserverDelegate>"
@48@0:8@16@24q32Q40
@32@0:8q16Q24
v32@0:8q16Q24
Q44@0:8{CGSize=dd}16d32i40
@60@0:8{CGSize=dd}16d32i40@44@?52
@68@0:8{CGSize=dd}16d32i40@44@?52@?60
v40@0:8q16B24d28B36
v24@0:8^@16
v32@0:8{CGPoint=dd}16
@"_VUISBInstallProgressStateTransition"
@"_VUISBIconProgressPausedTransition"
@"_VUISBIconProgressFractionTransition"
@"<VUISBIconProgressViewDelegate>"
#32@0:8q16q24
@"CAMediaTimingFunction"
@56@0:8@16{CGRect={CGPoint=dd}{CGSize=dd}}24
@"VUIPlistMediaDatabaseShow"
v48@0:8@16{CGPoint=dd}24d40
@"VUIChannelBannerLayout"
@"VUIBackdropView"
@"VUIBackdropMaskingView"
@"VUIMediaEntitiesFetchControllerResult"
v60@0:8@16@24@32B40@44@52
@"<VUITextBadgeViewDelegate>"
@"NSAttributedString"
@"VUITVShowDetailPageViewModel"
v32@0:8@"VUIMPMediaItemDownloadController"16@"VUIMPMediaItemDownloadControllerState"24
v36@0:8B16q20@?28
v36@0:8B16q20@?<v@?B@"NSError">28
@"NSObject<VUIMediaEntityIdentifier>"16@0:8
@"<VUIMediaEntityAssetControllerDelegate>"16@0:8
v24@0:8@"<VUIMediaEntityAssetControllerDelegate>"16
@"VUIMediaEntityAssetControllerState"16@0:8
@"NSObject<OS_dispatch_queue>"16@0:8
v24@0:8@"NSObject<OS_dispatch_queue>"16
v60@0:8Q16d24Q32Q40B48B52B56
@"<VUIMediaEntityAssetControllerDelegate>"
@"VUIMediaEntityAssetControllerState"
@"NSObject<VUIMediaEntityIdentifier>"
@"VUIMPMediaItemDownloadController"
@"VUIScoreboardRowLayout"
@32@0:8{CGSize=dd}16
@48@0:8{CGSize=dd}16d32d40
{?="respondsToViewControllerCreation"B}
@"NSObject<VUIDocumentCreator>"
@"NSObject<VUIWidgetCreator>"
v44@0:8@16B24@28@?36
@40@0:8@16@24Q32
@"VUIDebugContainerView"
@"VUIDebugViewDataSource"
v40@0:8@16q24@32
v40@0:8@"IKServiceRequest"16q24@"NSDictionary"32
v32@0:8@"IKUpdateServiceRequest"16@"IKAppDocument"24
v24@0:8@"VUIAppDocumentUpdateEvent"16
@"<VUIAppDocumentUpdateContext>"
@"VUIAppDocumentUpdateEventStore"
@"VUIMediaItemEntityTypesFetchResponseChanges"
@"<VUIOrderedItemsMapDelegate>"
@"VUIPlistMediaDatabase"
@"VUICardFloatingContentView"
v32@0:8^@16@24
v40@0:8Q16@?24@32
B44@0:8@16@24@32B40
v32@0:8Q16@?24
v32@0:8q16@?24
@"<MTMediaPlaylistItem>"32@0:8Q16q24
@"NSArray"32@0:8Q16Q24
@"NSObject<TVPPlayback>"
@40@0:8@16^@24^@32
@"VUIMetricsPageEventData"
@"MTMetricsKit"
@"NSHashTable"
@"VUIAsynchronousWorkToken"24@0:8@?<v@?B@"NSError">16
@"<VUIFamilyMemberDelegate>"
@"VUIErrorLayout"
#24@0:8@16
@"CAGradientLayer"
@"VUILibraryFamilyMembersDataSource"
@52@0:8@16@24@32@40B48
@"TVImage"16@0:8
@"NSError"16@0:8
@"TVImage"
@"<VUIImageLoadParams>"
v40@0:8@16Q24@32
@"<IKAppDeviceConfig>"24@0:8@"IKAppContext"16
@"<IKAppNavigationController>"24@0:8@"IKAppContext"16
@"IKAppTabBar"24@0:8@"IKAppContext"16
@"<IKAppPlayer>"24@0:8@"IKAppPlayerBridge"16
@"<IKAppPlaylist>"24@0:8@"IKAppPlaylistBridge"16
@"<IKAppMediaItem>"24@0:8@"IKAppMediaItemBridge"16
v32@0:8@"IKAppContext"16@"JSContext"24
B48@0:8@"IKAppContext"16@"IKDOMDocument"24@"JSContext"32^@40
v32@0:8@"IKAppContext"16@"NSDictionary"24
v32@0:8@"IKAppContext"16@"NSError"24
v32@0:8@"IKAppContext"16Q24
v40@0:8@"IKAppContext"16Q24@"NSDictionary"32
@"NSURLSessionConfiguration"24@0:8@"IKAppContext"16
@"NSString"24@0:8@"IKAppContext"16
@"NSData"24@0:8@"IKAppContext"16
v48@0:8@"IKAppContext"16@"NSURL"24Q32@?<v@?@"NSString"@"NSError"Q>40
@32@0:8@?16@24
@"NSObject<VUIMediaEntityIdentifierInternal>"
@40@0:8Q16d24d32
@36@0:8Q16d24B32
@40@0:8q16q24q32
@"VUICardViewLayout"
d64@0:8d16@24{UIEdgeInsets=dddd}32
d36@0:8d16@24B32
v24@0:8@"VUITextBadgeView"16
@"VUIUpNextOverlayLayout"
@"VUICountDownProgressIndicator"
@"VUIDebugMetricsEvent"
v40@0:8q16@24@?32
@24@0:8@"VUIMediaLibraryManager"16
@"<VUIHomeShareMediaLibraryManagerDelegate>"16@0:8
v24@0:8@"<VUIHomeShareMediaLibraryManagerDelegate>"16
@"<VUIHomeShareMediaLibraryManagerDelegate>"
v24@0:8@"TVMediaInfo"16
@"<TVMediaControllerDelegate>"16@0:8
v24@0:8@"<TVMediaControllerDelegate>"16
v28@0:8B16d20
v32@0:8B16B20@?24
{CGRect={CGPoint=dd}{CGSize=dd}}24@0:8B16B20
{CGRect={CGPoint=dd}{CGSize=dd}}20@0:8B16
v56@0:8@16@24@32@40@48
@"<TVMediaControllerDelegate>"
@"TVPVideoView"
@"VUIStoreAcquisitionProperties"
v52@0:8@16@24@32@40B48
@"VUIAcquisitionRequest"
@"VUIFamilySharingRelationship"
@"UIWindow"
@"VUIDocumentDataSource"
@"VUIProductInfoAiringLayout"
@48@0:8@16@24q32@40
d60@0:8d16{UIEdgeInsets=dddd}24B56
{CGSize=dd}24@0:8@16
@"VUICollectionViewFeaturedView"
@"<TVPMediaItemReportingDelegate>"16@0:8
v56@0:8@16@24@32d40@48
v40@0:8@16d24@32
v44@0:8@16d24@32B40
v40@0:8@"NSObject<TVPMediaItem>"16@"NSObject<TVPPlayback>"24@"NSString"32
v56@0:8@"NSObject<TVPMediaItem>"16@"TVPPlaybackState"24@"TVPPlaybackState"32d40@"NSObject<TVPPlayback>"48
v32@0:8@"NSObject<TVPMediaItem>"16@"NSObject<TVPPlayback>"24
v40@0:8@"NSObject<TVPMediaItem>"16d24@"NSObject<TVPPlayback>"32
v44@0:8@"NSObject<TVPMediaItem>"16d24@"NSDate"32B40
v40@0:8@"NSObject<TVPMediaItem>"16@"NSError"24@"NSObject<TVPPlayback>"32
@"VUIMutableBookmark"
@"NSObject"
@"VUIProductBannerLayout"
@"VUIComingSoonBannerCardView"
@"VUIProductBannerCastInfoView"
@"VUIFeaturedCellOverlayLayout"
@28@0:8^{sqlite3_stmt=}16i24
@?24@0:8@16
v32@0:8@?16@24
@"TVSBackgroundTask"
^{sqlite3=}
^{sqlite3_stmt=}
@"TVSStateMachine"
@"VUIPageHeaderView"
@68@0:8@16{CGRect={CGPoint=dd}{CGSize=dd}}24B56@60
@72@0:8@16{CGRect={CGPoint=dd}{CGSize=dd}}24B56@60B68
@"VUINowPlayingFeatureMonitor"
@"VUINowPlayingViewController"
v44@0:8@16@24@32B40
v36@0:8@"VUINowPlayingFeatureMonitor"16@"<VUINowPlayingFeature>"24B32
v44@0:8@"VUINowPlayingFeatureMonitor"16@"<VUINowPlayingFeature>"24@"<VUINowPlayingFeature>"32B40
v36@0:8@16q24B32
v56@0:8@16{UIEdgeInsets=dddd}24
v24@0:8@"VUINowPlayingViewController"16
v32@0:8@"VUINowPlayingViewController"16Q24
v36@0:8@"VUINowPlayingViewController"16q24B32
v56@0:8@"VUINowPlayingViewController"16{UIEdgeInsets=dddd}24
v36@0:8@"VUINowPlayingViewController"16@"TVMediaInfo"24B32
v72@0:8@16{?=qiIq}24{?=qiIq}48
{?=qiIq}72@0:8@16{?=qiIq}24{?=qiIq}48
v36@0:8@16B24@28
B24@0:8@"AVPlayerViewController"16
v24@0:8@"AVPlayerViewController"16
v32@0:8@"AVPlayerViewController"16@"AVInterstitialTimeRange"24
v72@0:8@"AVPlayerViewController"16{?=qiIq}24{?=qiIq}48
{?=qiIq}72@0:8@"AVPlayerViewController"16{?=qiIq}24{?=qiIq}48
v40@0:8@"AVPlayerViewController"16@"AVMediaSelectionOption"24@"AVMediaSelectionGroup"32
v32@0:8@"AVPlayerViewController"16@"NSString"24
v32@0:8@"AVPlayerViewController"16@?<v@?B>24
@"UIViewController"24@0:8@"AVPlayerViewController"16
B32@0:8@"AVPlayerViewController"16@"AVContentProposal"24
v32@0:8@"AVPlayerViewController"16@"AVContentProposal"24
v36@0:8@"AVPlayerViewController"16B24@"<AVPlayerViewControllerAnimationCoordinator>"28
q64@0:8@16{?=qiIq}24d48@?56
q64@0:8@"AVPlayerViewController"16{?=qiIq}24d48@?<v@?{?=qiIq}@"UIImage">56
B32@0:8@"AVPlayerViewController"16@"AVPlayerItem"24
v24@0:8@"PBSPictureInPictureController"16
v32@0:8@"PBSPictureInPictureController"16Q24
v28@0:8@"PBSPictureInPictureController"16B24
@"VUIPlaybackInfo"
@"UIAlertController"
@40@0:8N^{CGPoint=dd}16{CGPoint=dd}24
v48@0:8N^{CGPoint=dd}16@24{CGPoint=dd}32
@"VUIShelfView"
@"VUIMPMediaItemDownloadControllerState"
@"VUIExtrasDescriptionLayout"
{CGSize=dd}24@0:8Q16
@80@0:8d16{CGRect={CGPoint=dd}{CGSize=dd}}24{CGSize=dd}56Q72
@"VUIMediaItemEntityTypesFetchControllerResult"
@"NSNumber"16@0:8
v24@0:8@"SKStoreProductViewController"16
v32@0:8@"SKStoreProductViewController"16q24
v36@0:8@"SKStoreProductViewController"16@"SKStorePageRequest"24B32
v40@0:8@"NSString"16@"JSValue"24@32
v24@0:8@"NSCoder"16
@24@0:8@"NSCoder"16
@24@0:8#16
{CGSize=dd}40@0:8{CGSize=dd}16@32
{CGSize=dd}48@0:8{CGSize=dd}16@32@?40
v56@0:8@16Q24q32@?40@?48
v40@0:8@16Q24q32
@"<VUIShelvesDataSourceDelegate>"
@"MPArtworkCatalog"
B48@0:8@16@24@32@40
v40@0:8@16q24d32
v56@0:8@16{CGRect={CGPoint=dd}{CGSize=dd}}24
v56@0:8@16@24@32@40@?48
Q32@0:8@16@24
B40@0:8@16@24@?32
v24@0:8@"UIApplication"16
B32@0:8@"UIApplication"16@"NSDictionary"24
B32@0:8@"UIApplication"16@"NSURL"24
B48@0:8@"UIApplication"16@"NSURL"24@"NSString"32@40
B40@0:8@"UIApplication"16@"NSURL"24@"NSDictionary"32
v40@0:8@"UIApplication"16q24d32
v32@0:8@"UIApplication"16q24
v56@0:8@"UIApplication"16{CGRect={CGPoint=dd}{CGSize=dd}}24
v32@0:8@"UIApplication"16@"UIUserNotificationSettings"24
v32@0:8@"UIApplication"16@"NSData"24
v32@0:8@"UIApplication"16@"NSError"24
v32@0:8@"UIApplication"16@"NSDictionary"24
v32@0:8@"UIApplication"16@"UILocalNotification"24
v48@0:8@"UIApplication"16@"NSString"24@"UILocalNotification"32@?<v@?>40
v56@0:8@"UIApplication"16@"NSString"24@"NSDictionary"32@"NSDictionary"40@?<v@?>48
v48@0:8@"UIApplication"16@"NSString"24@"NSDictionary"32@?<v@?>40
v56@0:8@"UIApplication"16@"NSString"24@"UILocalNotification"32@"NSDictionary"40@?<v@?>48
v40@0:8@"UIApplication"16@"NSDictionary"24@?<v@?Q>32
v32@0:8@"UIApplication"16@?<v@?Q>24
v40@0:8@"UIApplication"16@"UIApplicationShortcutItem"24@?<v@?B>32
v40@0:8@"UIApplication"16@"NSString"24@?<v@?>32
v40@0:8@"UIApplication"16@"NSDictionary"24@?<v@?@"NSDictionary">32
v40@0:8@"UIApplication"16@"INIntent"24@?<v@?@"INIntentResponse">32
Q32@0:8@"UIApplication"16@"UIWindow"24
B32@0:8@"UIApplication"16@"NSString"24
@"UIViewController"40@0:8@"UIApplication"16@"NSArray"24@"NSCoder"32
B32@0:8@"UIApplication"16@"NSCoder"24
v32@0:8@"UIApplication"16@"NSCoder"24
B40@0:8@"UIApplication"16@"NSUserActivity"24@?<v@?@"NSArray">32
v40@0:8@"UIApplication"16@"NSString"24@"NSError"32
v32@0:8@"UIApplication"16@"NSUserActivity"24
v32@0:8@"UIApplication"16@"CKShareMetadata"24
@"UISceneConfiguration"40@0:8@"UIApplication"16@"UISceneSession"24@"UISceneConnectionOptions"32
v32@0:8@"UIApplication"16@"NSSet"24
@"UIWindow"16@0:8
v24@0:8@"UIWindow"16
@"TVApplicationController"16@0:8
@"<VUIFamilyMembersViewControllerDelegate>"
@"VUIFamilyMemberCell"
@"VUIAppDocumentUpdateEventDescriptor"
@"<MPArtworkDataSource>"
v24@0:8@"VUISBIconProgressView"16
@"VUISBIconProgressView"
v32@0:8@"NSObject<VUIMediaEntityAssetController>"16@"VUIMediaEntityAssetControllerState"24
@"VUIComingSoonCardLayout"
@"VUIChannelBannerView"
@56@0:8{CGRect={CGPoint=dd}{CGSize=dd}}16q48
v24@0:8^{CGContext=}16
{os_unfair_lock_s="_os_unfair_lock_opaque"I}
@"VUICastInfoLayout"
@40@0:8@16@24d32
@48@0:8@16@24d32d40
