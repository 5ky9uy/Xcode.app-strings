MbP?
?ffffff
333333
?333333
r@q=
?{{{{{{
?QQQQQQ
?@:Q
@UUUUUU
_(knN
<ZN6mlcore11LibraryView12performQueryINS_20LocalizedSearchQueryEEEvNSt3__110shared_ptrIT_EENS4_INS_11TransactionEEENS3_8functionIFvNS4_INS5_6ResultEEEEEEEUlNS4_INS_11QueryResultEEEE_
NSt3__117bad_function_callE
NSt3__110__function6__funcIZN6mlcore11LibraryView12performQueryINS2_20LocalizedSearchQueryEEEvNS_10shared_ptrIT_EENS6_INS2_11TransactionEEENS_8functionIFvNS6_INS7_6ResultEEEEEEEUlNS6_INS2_11QueryResultEEEE_NS_9allocatorISI_EEFvSH_EEE
NSt3__110__function6__baseIFvNS_10shared_ptrIN6mlcore11QueryResultEEEEEE
Z60-[MPMediaLibraryView performCoreSearchQuery:withCompletion:]E3$_1
NSt3__110__function6__funcIZ60-[MPMediaLibraryView performCoreSearchQuery:withCompletion:]E3$_1NS_9allocatorIS2_EEFvNS_10shared_ptrIN6mlcore26LocalizedSearchQueryResultEEEEEE
NSt3__110__function6__baseIFvNS_10shared_ptrIN6mlcore26LocalizedSearchQueryResultEEEEEE
ZN6mlcore11LibraryView12performQueryINS_5QueryEEEvNSt3__110shared_ptrIT_EENS4_INS_11TransactionEEENS3_8functionIFvNS4_INS5_6ResultEEEEEEEUlNS4_INS_11QueryResultEEEE_
NSt3__110__function6__funcIZN6mlcore11LibraryView12performQueryINS2_5QueryEEEvNS_10shared_ptrIT_EENS6_INS2_11TransactionEEENS_8functionIFvNS6_INS7_6ResultEEEEEEEUlNS6_INS2_11QueryResultEEEE_NS_9allocatorISI_EEFvSH_EEE
Z54-[MPMediaLibraryView performCoreQuery:withCompletion:]E3$_0
N6mlcore11QueryResultE
NSt3__110__function6__funcIZ54-[MPMediaLibraryView performCoreQuery:withCompletion:]E3$_0NS_9allocatorIS2_EEFvNS_10shared_ptrIN6mlcore11QueryResultEEEEEE
BNSt3__120__shared_ptr_emplaceINS_6vectorINS_10shared_ptrIN6mlcore6EntityEEENS_9allocatorIS5_EEEENS6_IS8_EEEE
NSt3__120__shared_ptr_emplaceIN6mlcore11EntityQueryENS_9allocatorIS2_EEEE
NSt3__120__shared_ptr_emplaceIN6mlcore14UnaryPredicateIiEENS_9allocatorIS3_EEEE
NSt3__120__shared_ptr_emplaceIN6mlcore17EntityQueryResultENS_9allocatorIS2_EEEE
NSt3__120__shared_ptr_emplaceINS_6vectorINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEENS5_IS7_EEEENS5_IS9_EEEE
NSt3__120__shared_ptr_emplaceIN6mlcore24SmartPlaylistEntityCacheENS_9allocatorIS2_EEEE
N6mlcore17PropertyCacheBaseIJN13mediaplatform4DataEEEE
N6mlcore17PropertyCacheBaseIJEEE
N6mlcore17PropertyCacheBaseIJNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEEN13mediaplatform4DataEEEE
N6mlcore17PropertyCacheBaseIJdNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEEN13mediaplatform4DataEEEE
N6mlcore17PropertyCacheBaseIJidNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEEN13mediaplatform4DataEEEE
N6mlcore17PropertyCacheBaseIJxidNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEEN13mediaplatform4DataEEEE
NSt3__110shared_ptrINS_6vectorIN6mlcore7SectionENS_9allocatorIS3_EEEEE27__shared_ptr_default_deleteIS6_S6_EE
NSt3__120__shared_ptr_pointerIPNS_6vectorIN6mlcore7SectionENS_9allocatorIS3_EEEENS_10shared_ptrIS6_E27__shared_ptr_default_deleteIS6_S6_EENS4_IS6_EEEE
NSt3__110shared_ptrINS_6vectorIN6mlcore13PropertyCacheENS_9allocatorIS3_EEEEE27__shared_ptr_default_deleteIS6_S6_EE
NSt3__120__shared_ptr_pointerIPNS_6vectorIN6mlcore13PropertyCacheENS_9allocatorIS3_EEEENS_10shared_ptrIS6_E27__shared_ptr_default_deleteIS6_S6_EENS4_IS6_EEEE
NSt3__120__shared_ptr_emplaceIN6mlcore20LocalizedSearchScopeENS_9allocatorIS2_EEEE
N6mlcore4NoopE
NSt3__110__function6__funcIN6mlcore4NoopENS_9allocatorIS3_EEFvdEEE
NSt3__110__function6__baseIFvdEEE
NSt3__120__shared_ptr_emplaceIN6mlcore19ComparisonPredicateIiEENS_9allocatorIS3_EEEE
NSt3__120__shared_ptr_emplaceIN6mlcore22AggregateFunctionQueryENS_9allocatorIS2_EEEE
ZZZ56-[MPModelLibraryKeepLocalStatusRequestOperation execute]EUb_EUb0_E3$_0
NSt3__110__function6__funcIZZZ56-[MPModelLibraryKeepLocalStatusRequestOperation execute]EUb_EUb0_E3$_0NS_9allocatorIS2_EEFvRKN6mlcore13PropertyCacheERbEEE
NSt3__110__function6__baseIFvRKN6mlcore13PropertyCacheERbEEE
NSt3__120__shared_ptr_emplaceIN6mlcore15PropertiesQueryENS_9allocatorIS2_EEEE
NSt3__120__shared_ptr_emplaceINS_3mapIxNS_10shared_ptrIN6mlcore17EntityQueryResultEEENS_4lessIxEENS_9allocatorINS_4pairIKxS5_EEEEEENS8_ISD_EEEE
NSt3__120__shared_ptr_emplaceIN6mlcore11EntityCacheENS_9allocatorIS2_EEEE
NSt3__120__shared_ptr_emplaceIN6mlcore20LocalizedSearchQueryENS_9allocatorIS2_EEEE
NSt3__120__shared_ptr_emplaceIN6mlcore14UnaryPredicateIxEENS_9allocatorIS3_EEEE
NSt3__120__shared_ptr_emplaceIN6mlcore19ComparisonPredicateIxEENS_9allocatorIS3_EEEE
NSt3__120__shared_ptr_emplaceIN6mlcore11InPredicateIxEENS_9allocatorIS3_EEEE
ZZ110+[MPStoreLibraryPersonalizationRequestOperation personalizedResponseForContentDescriptor:requestedProperties:]EUb0_E3$_1
NSt3__110__function6__funcIZZ110+[MPStoreLibraryPersonalizationRequestOperation personalizedResponseForContentDescriptor:requestedProperties:]EUb0_E3$_1NS_9allocatorIS2_EEFvRKN6mlcore13PropertyCacheERbEEE
ZZ110+[MPStoreLibraryPersonalizationRequestOperation personalizedResponseForContentDescriptor:requestedProperties:]EUb_E3$_0
NSt3__110__function6__funcIZZ110+[MPStoreLibraryPersonalizationRequestOperation personalizedResponseForContentDescriptor:requestedProperties:]EUb_E3$_0NS_9allocatorIS2_EEFvRKN6mlcore13PropertyCacheERbEEE
NSt3__120__shared_ptr_emplaceIN6mlcore14AnyInPredicateIxEENS_9allocatorIS3_EEEE
ZZ59-[MPModelLibraryPlaylistEditChangeRequestOperation execute]EUb_E3$_0
NSt3__110__function6__funcIZZ59-[MPModelLibraryPlaylistEditChangeRequestOperation execute]EUb_E3$_0NS_9allocatorIS2_EEFvRKN6mlcore13PropertyCacheERbEEE
ZZ48-[MPStoreLibraryMappingRequestOperation execute]EUb18_E4$_11
NSt3__110__function6__funcIZZ48-[MPStoreLibraryMappingRequestOperation execute]EUb18_E4$_11NS_9allocatorIS2_EEFvRKN6mlcore13PropertyCacheERbEEE
ZZZ48-[MPStoreLibraryMappingRequestOperation execute]EUb16_EUb17_E4$_10
NSt3__110__function6__funcIZZZ48-[MPStoreLibraryMappingRequestOperation execute]EUb16_EUb17_E4$_10NS_9allocatorIS2_EEFvRKN6mlcore13PropertyCacheERbEEE
ZZ48-[MPStoreLibraryMappingRequestOperation execute]EUb15_E3$_9
NSt3__110__function6__funcIZZ48-[MPStoreLibraryMappingRequestOperation execute]EUb15_E3$_9NS_9allocatorIS2_EEFvRKN6mlcore13PropertyCacheERbEEE
ZZZ48-[MPStoreLibraryMappingRequestOperation execute]EUb13_EUb14_E3$_8
NSt3__110__function6__funcIZZZ48-[MPStoreLibraryMappingRequestOperation execute]EUb13_EUb14_E3$_8NS_9allocatorIS2_EEFvRKN6mlcore13PropertyCacheERbEEE
ZZZ48-[MPStoreLibraryMappingRequestOperation execute]EUb11_EUb12_E3$_7
NSt3__110__function6__funcIZZZ48-[MPStoreLibraryMappingRequestOperation execute]EUb11_EUb12_E3$_7NS_9allocatorIS2_EEFvRKN6mlcore13PropertyCacheERbEEE
ZZ48-[MPStoreLibraryMappingRequestOperation execute]EUb10_E3$_6
NSt3__110__function6__funcIZZ48-[MPStoreLibraryMappingRequestOperation execute]EUb10_E3$_6NS_9allocatorIS2_EEFvRKN6mlcore13PropertyCacheERbEEE
ZZZ48-[MPStoreLibraryMappingRequestOperation execute]EUb8_EUb9_E3$_5
NSt3__110__function6__funcIZZZ48-[MPStoreLibraryMappingRequestOperation execute]EUb8_EUb9_E3$_5NS_9allocatorIS2_EEFvRKN6mlcore13PropertyCacheERbEEE
ZZZ48-[MPStoreLibraryMappingRequestOperation execute]EUb6_EUb7_E3$_4
NSt3__110__function6__funcIZZZ48-[MPStoreLibraryMappingRequestOperation execute]EUb6_EUb7_E3$_4NS_9allocatorIS2_EEFvRKN6mlcore13PropertyCacheERbEEE
ZZ48-[MPStoreLibraryMappingRequestOperation execute]EUb5_E3$_3
NSt3__110__function6__funcIZZ48-[MPStoreLibraryMappingRequestOperation execute]EUb5_E3$_3NS_9allocatorIS2_EEFvRKN6mlcore13PropertyCacheERbEEE
NSt3__120__shared_ptr_emplaceIN6mlcore19ComparisonPredicateINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEEENS6_IS9_EEEE
NSt3__120__shared_ptr_emplaceIN6mlcore11InPredicateINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEEENS6_IS9_EEEE
ZZZ48-[MPStoreLibraryMappingRequestOperation execute]EUb3_EUb4_E3$_2
NSt3__110__function6__funcIZZZ48-[MPStoreLibraryMappingRequestOperation execute]EUb3_EUb4_E3$_2NS_9allocatorIS2_EEFvRKN6mlcore13PropertyCacheERbEEE
ZZZ48-[MPStoreLibraryMappingRequestOperation execute]EUb1_EUb2_E3$_1
NSt3__110__function6__funcIZZZ48-[MPStoreLibraryMappingRequestOperation execute]EUb1_EUb2_E3$_1NS_9allocatorIS2_EEFvRKN6mlcore13PropertyCacheERbEEE
ZZZ48-[MPStoreLibraryMappingRequestOperation execute]EUb_EUb0_E3$_0
NSt3__110__function6__funcIZZZ48-[MPStoreLibraryMappingRequestOperation execute]EUb_EUb0_E3$_0NS_9allocatorIS2_EEFvRKN6mlcore13PropertyCacheERbEEE
NSt3__120__shared_ptr_emplaceIN6mlcore11InPredicateIiEENS_9allocatorIS3_EEEE
NSt3__120__shared_ptr_emplaceIN6mlcore15SearchPredicateENS_9allocatorIS2_EEEE
NSt3__120__shared_ptr_emplaceIN6mlcore6TVShowENS_9allocatorIS2_EEEE
ZN6mlcore11LibraryView12performQueryINS_11EntityQueryEEEvNSt3__110shared_ptrIT_EENS4_INS_11TransactionEEENS3_8functionIFvNS4_INS5_6ResultEEEEEEEUlNS4_INS_11QueryResultEEEE_
NSt3__110__function6__funcIZN6mlcore11LibraryView12performQueryINS2_11EntityQueryEEEvNS_10shared_ptrIT_EENS6_INS2_11TransactionEEENS_8functionIFvNS6_INS7_6ResultEEEEEEEUlNS6_INS2_11QueryResultEEEE_NS_9allocatorISI_EEFvSH_EEE
ZZL33_MPMLInitPropertyPlaylistEntryMapvEUb_E3$_4
NSt3__110__function6__funcIZZL33_MPMLInitPropertyPlaylistEntryMapvEUb_E3$_4NS_9allocatorIS2_EEFvNS_10shared_ptrIN6mlcore17EntityQueryResultEEEEEE
NSt3__110__function6__baseIFvNS_10shared_ptrIN6mlcore17EntityQueryResultEEEEEE
NSt3__120__shared_ptr_emplaceIN6mlcore8PlaylistENS_9allocatorIS2_EEEE
NSt3__120__shared_ptr_emplaceIN6mlcore8ComposerENS_9allocatorIS2_EEEE
NSt3__120__shared_ptr_emplaceIN6mlcore5GenreENS_9allocatorIS2_EEEE
NSt3__120__shared_ptr_emplaceIN6mlcore6ArtistENS_9allocatorIS2_EEEE
NSt3__120__shared_ptr_emplaceIN6mlcore16MultiEntityQueryENS_9allocatorIS2_EEEE
NSt3__120__shared_ptr_emplaceINS_3mapINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEPN6mlcore17ModelPropertyBaseENS_4lessIS7_EENS5_INS_4pairIKS7_SA_EEEEEENS5_ISH_EEEE
Standalone
Non-Linear
Linear
-init is not supported, use +sharedInstance
MusicUpsellShelf
MusicSuperHeroShelf
MusicNotesHeroShelf
MusicCoverShelf
library-albums
tv-shows
social-upsells
music-videos
playlists
albums
OnboardingRequired
account
autos
omit[resource]
listen-now
iphone
v16@?0@"MPModelForYouRecommendationGroup"8
v32@?0@"MPModelForYouRecommendationGroup"8q16^B24
v32@?0@"NSNull"8q16^B24
v32@?0@"MPModelForYouRecommendationItem"8q16^B24
resultsAndFlatSectionedItems
<nil>
responses
data
unBlockSocialUser
Invalid format string- missing numeric value.
Invalid format options reference: Must be of form {*<index>} but no trailing '}' found.
Parameter index out of bounds.
MediaLibraryCore
Loved_Playlist
v48@?0^{CGContext=}8{CGRect={CGPoint=dd}{CGSize=dd}}16
com.apple.MPRequest.invalidationQueue
v16@?0@"NSString"8
class.description
MPRequestErrorDomain
MPRequestUnderlyingErrorsUserInfoKey
com.apple.MediaPlaybackCore/%@.callout
com.apple.MediaPlaybackCore/%@
<NULL>
-[MPRequest _performWithCompletion: failed to call completion %@
MPRequest.m
com.apple.MediaPlaybackCore/%@.cleanup
<%@: %p label=%@>
[MPRequest class]
_middleware
valid
MPResponseDidInvalidateNotification
<%@: %p request=%p>
[MPResponse class]
MPModelResponseDidInvalidateNotification
; results = %@
; deferredSectionProperties = %@
; deferredItemProperties = %@
; isValid = NO
request != nil
Invalid parameter not satisfying: %@
MPModelResponse.m
-initWithRequest: must be used.
MPModelPropertyLyricsHasTimeSyncedLyrics
MPModelPropertyLyricsHasLibraryLyrics
MPModelPropertyLyricsHasStoreLyrics
MPModelPropertyLyricsTTML
MPModelPropertyLyricsText
MPMoviePlayerPlaybackStateDidChangeNotification
MPMoviePlayerPlaybackDidFinishNotification
MPMoviePlayerPlaybackDidFinishReasonUserInfoKey
MPMoviePlayerLoadStateDidChangeNotification
MPMoviePlayerNowPlayingMovieDidChangeNotification
MPMoviePlayerReadyForDisplayDidChangeNotification
MPMoviePlayerScalingModeDidChangeNotification
MPMoviePlayerThumbnailImageRequestDidFinishNotification
MPMoviePlayerThumbnailImageKey
MPMoviePlayerThumbnailTimeKey
MPMoviePlayerThumbnailErrorKey
MPMoviePlayerTimedMetadataUpdatedNotification
MPMoviePlayerTimedMetadataUserInfoKey
info
mimeType
dataType
languageCode
MPMoviePlayerWillEnterFullscreenNotification
MPMoviePlayerDidEnterFullscreenNotification
MPMoviePlayerWillExitFullscreenNotification
MPMoviePlayerDidExitFullscreenNotification
MPMoviePlayerFullscreenAnimationDurationUserInfoKey
MPMoviePlayerFullscreenAnimationCurveUserInfoKey
MPMovieMediaTypesAvailableNotification
MPMovieSourceTypeAvailableNotification
MPMovieDurationAvailableNotification
MPMovieNaturalSizeAvailableNotification
MPMoviePlayerIsAirPlayVideoActiveDidChangeNotification
AFAnalyticsContextsMerge
/System/Library/PrivateFrameworks/AssistantServices.framework/AssistantServices
endTimeReciever
AFAnalytics
com.apple.MediaPlayer.MPAssistantAnalyticsReportingController.eventQueue
v40@?0@"RTCReporting"8@"NSDictionary"16@"NSArray"24@"NSError"32
com.apple.MediaPlayer.MPRTCReportingSession.operationQueue
MPStoreClientTokenDidChangeNotification
v24@?0@"ICLibraryAuthServiceClientTokenStatus"8@"NSError"16
NetworkInterface
kRTCReportingMessageParametersCategory
kRTCReportingMessageParametersType
kRTCReportingMessageParametersPayload
Code
Domain
@"NSString"16@?0@"NSString"8
-%ld
v24@?0@"MPModelLibraryResponse"8@"NSError"16
com.apple.MediaPlayer.MPModelLibraryKeepLocalChangeRequestOperation.operationQueue
MPAVItemPlaybackModeAvailableNotification
MPAVItemArtworkDidChangeNotification
MPAVItemAssetIsLoadedNotification
MPAVItemTypeAvailableNotification
MPAVItemAlternateTracksAvailableNotification
MPAVItemDisplayableTextAvailableNotification
MPAVItemDurationAvailableNotification
MPAVItemIsExplicitDidChangeNotification
MPAVItemLikedStateDidChangeNotification
MPAVItemRatingDidChangeNotification
MPAVItemTitlesDidChangeNotification
MPAVItemModelGenericObjectDidChangeNotification
MPAVItemBookmarkTimeDidChangeNotification
MPAVItemPlayerItemDidChangeNotification
MPAVItemPlayerItemWillChangeNotification
MPAVItemTimebaseDidChangeNotification
MediaPlayerAVItemErrorDomain
_MPAVItemInternalLikedStateDidChangeNotification
MPAVItemPlaybackProperties_NextPlayStartTime
MPAVItemPlaybackProperties_StartTime
MPAVItemPlaybackProperties_EndTime
MPAVItemPlaybackProperties_LookForLyrics
MPAVItemPlaybackProperties_RampInDuration
MPAVItemPlaybackProperties_RampOutDuration
MPAVItemPlaybackProperties_AudibleDRMGroupID
MPAVItemShouldPreventPlaybackDidChangeNotification
MPAVItemHasFinishedDownloadingDidChangeNotification
MPAVItemSecureKeyDeliveryRequestDidFinishNotification
MPAVItemUserInfoKeyLoadDuration
MPAVItemUserInfoKeyRequestEndDate
MPAVItemUserInfoKeyRequestError
MPAVItemUserInfoKeyRequestStartDate
MPAVItemUserInfoKeyStoreDialogDictionary
v16@?0@"MPNowPlayingContentItem"8
RampInOutInfoOutDuration
RampInOutInfoInDuration
AVItemPlaybackProperties_RampOutDuration
AVItemPlaybackProperties_RampInDuration
AudibleDRMInfoGroupID
INTERNALONLY-%@
v16@?0@"MPExportableArtworkProperties"8
trackReferences
MPAVItemTimebaseObservationContext
timebase
MPAVItemLoadedTimeRangesObservationContext
loadedTimeRanges
MPAVItemDurationObservationContext
<%@: %p> (%@)
com.apple.MediaPlayer.MPAVItem.assetQueue
@"MPAVItem"8@?0
v16@?0@"ICStoreRequestContext"8
MPQueueFeederErrorDomain
[MPQueueFeeder class]
MPQueueFeeder.m
standard
bannerUber
subscriptionCover
subscriptionHero
storeFlowcase
browseCover
fullscreenBackground
brandLogo
masterArt
tagline
album
artist
brand
iTunesBrand
showBrand
Genre
Show
recordLabel
playlist
tvSeason
socialProfile
tvtrailer
curatorName
username
iTunesBrandType
shortUrl
playlistType
personalMixSortKey
socialProfileId
handle
nameRaw
isPrivate
isVerified
songs
stations
shows
tv-seasons
relationships
yyyy-MM-dd'T'HH:mm:ss'Z'
YYYY-MM-dd
editorialNotes
itunesNotes
shortDescription
description
relationships.tracks.data
artworkTracks
stationGlyph
avatarArtwork
uber
screenshots
editorialArtwork
v16@?0@"MPRadioStationEvent<MPMutableRadioStationEvent>"8
endTime
events
isLive
stationProviderName
isChart
streamingRadioSubType
radioStationTypeId
work
workName
videoSubType
versionHash
seasonNumber
episodeCount
trackCount
purchasedAdamId
formerIds
itemId
libraryPlaylistId
libraryTrackId
shouldReportPlayEvents
shouldBookmarkPlayPosition
shortName
lastModifiedDate
meta.popularity
popularity
playlistIds
offers
itemName
movieClips
movementNumber
movementName
latestAlbumArtwork
audioTraits
isMasteredForItunes
isCompilation
contentRatingsBySystem
contentRating
explicit
genres
genreNames
hasSocialPosts
hasTimeSyncedLyrics
hasLyrics
hasArtistBio
riaa
isBeats1
discNumber
curatorId
collectionId
collectionName
childrenIds
artworkTrackIds
aucType
artistId
artworkURL
durationInMillis
curatorSocialHandle
playlistId
playlistName
MPStoreItemMetadataStorePlatformDictionary
MPStoreItemMetadataParentStoreItemMetadata
MPStoreItemMetadataOverrideChildStorePlatformDictionaries
MPStoreItemMetadataHasOverrideChildStorePlatformDictionaries
MPStoreItemMetadataExpirationDate
MPStoreItemMetadataMusicAPIDictionary
MPStoreItemMetadataDownloadAssetDictionary
metadata
<%@:%p storeID=%@ name=%@ subscriptionOffer=%@>
MPShuffleTypeOff
MPShuffleTypeItems
MPShuffleTypeCollections
MPShuffleTypeUserDefault
<MPShuffleTypeUnknown>
MPRepeatTypeOff
MPRepeatTypeOne
MPRepeatTypeAll
MPRepeatTypeUserDefault
<MPRepeatTypeUnknown>
PrepareToPlay
Play
Proactive
User Selected
com.apple.MediaPlayer.MPTiledArtworkDataSource.loadingTileDataAccessQueue
Artwork catalogs found, but at least one had an empty image
No artwork catalogs were found
Tiling artwork request was cancelled
Tiled artwork count cannot be 0.
com.apple.MediaPlayer.MPTiledArtworkDataSource.LoadingTiledArtworkRequestsQueue
com.apple.MediaPlayer.MPTiledArtworkDataSource.RenderingTiledArtworkRequestsQueue
com.apple.MediaPlayer.MPTiledArtworkDataSource.TilingArtworkCatalogOperationQueue
MPTiledArtworkError
scopedContainers cannot contain a MPModelObject subclass matching the itemKind's modelClass. label=%@
MPModelLibraryRequestOperation.mm
{shared_ptr<mlcore::PlaylistItemEntityQuery>=^{PlaylistItemEntityQuery}^{__shared_weak_count}}8@?0
com.apple.MediaPlayer.MPModelLibraryRequest.serialQueue
-[MPModelLibraryRequestOperation _executeRequest]_block_invoke
Results should not be nil!
com.apple.MediaPlayer.MPModelLibraryRequest.itemQueryOperationQueue
-[MPModelLibraryRequestOperation _executeLegacyRequest]
v32@?0@"MPMediaQuerySection"8Q16^B24
Request did not provide an entity class for %@ %@. label=%@
DO_NOT_USE
MPAVControllerBufferingStateChangedNotification
MPAVControllerOldStateParameter
MPAVControllerNewStateParameter
MPAVControllerItemChangedNotification
MPAVControllerItemParameter
MPAVControllerItemWillChangeNotification
MPAVControllerErrorParameter
MPAVControllerErrorReasonParameter
MPAVControllerPlaybackStateChangedNotification
MPAVControllerDidReloadWithPlaybackContextNotification
MPAVControllerDidSetCurrentTimeNotification
MPAVControllerWillReloadWithPlaybackContextNotification
MPAVControllerPlaybackContextParameter
MPAVControllerWillSetCurrentTimeNotification
MPAVControllerErrorDomain
MPAVControllerErrorUserInfoKeyAlertDefaultButtonActionURLString
MPAVControllerErrorUserInfoKeyAlertDefaultButtonTitle
MPAVControllerErrorUserInfoKeyAlertMessage
MPAVControllerErrorUserInfoKeyAlertTitle
MPAVControllerPreviousItemDidTransitionNaturally
MPAVControllerPlaybackStateParameter
MPAVControllerUpdatedPlaybackStateParameter
MPAVControllerItemDidChangeWhenReloadingPlaybackContextNotification
MPAVControllerNextItemStateParameter
MPAVControllerCurrentTimeParameter
Movie/video screen capture
APIC
MPAVControllerDidRegisterItemNotificationsObject
/Library/Caches/com.apple.xbs/Sources/MediaPlayer_Sim/MobileMusicPlayer-4019.110.13/MediaPlayer/Playback/Old Engine/_ios_tvos_watchos/MPAVController.m
com.apple.MediaPlayer.MPAVController.AutoPlay
queueController
_AVPlayer_VolumeDidChangeNotification
MPAudiblePlaybackPerformanceEnabled
_MPAVControllerExternalPlaybackVideoClient
usesAudioOnlyMode
wantsExternalPlayback
usesExternalPlaybackWhileExternalScreenIsActive
Picked route doesn't have a UI to nicely present audio-only items
Picked route can't play local file from a sending device
Picked route can't play encrypted local files via progressive download
presentsOptimizedUserInterfaceWhenPlayingFetchedAudioOnlyAssets
canFetchMediaDataFromSender
canPlayEncryptedProgressiveDownloadAssets
routeSubtype
isAppleTVRoute
None
AirPlay
TVOut
externalScreenType
File
Streaming
itemPlaybackMode
Unknown
Audio
Video
Undefined
itemType
itemHasProtectedContent
itemAllowsExternalPlayback
itemAllowsAirPlayFromCloud
_useAirPlayMusicMode
-[MPAVController _applicationDidRemoveDeactivationReason:]
-[MPAVController _applicationWillAddDeactivationReason:]
duration
tracks
playbackLikelyToKeepUp
playbackBufferFull
playbackBufferEmpty
canPlayFastReverse
canPlayFastForward
rate
outputObscuredDueToInsufficientExternalProtection
externalPlaybackActive
%s-%i
not loaded
loaded
itemDidChange nil
-[MPAVController setDisableAirPlayMirroringDuringPlayback:shouldIgnorePlaybackQueueTransactions:]
-[MPAVController setClient:wantsToAllowExternalPlayback:shouldIgnorePlaybackQueueTransactions:]
_allowAirPlayVideoCount incorrect
MPAVController.m
-[MPAVController togglePlaybackWithOptions:]
-[MPAVController pause]
changing track, no more tracks
invalid parameters
MPCQueueController
/System/Library/PrivateFrameworks/MediaPlaybackCore.framework/MediaPlaybackCore
PlayVideoInBackground
outputSupportsAC3
queueController.currentItem
home-sharing://
http://
https://
@"MPArtworkCatalog"16@?0d8
previewArtwork
clipAssets
descriptionText
MPRadioControllerRadioAvailabilityDidChangeNotification
MPRadioControllerRecentStationsDidChangeNotification
com.apple.mobileipod
MPRadioControllerRadioAvailability
com.apple.MediaPlayer.MPRadioController.accessQueue
@"MPArtworkCatalog"16@?0@"MPModelRadioStation"8
v16@?0@"<MPMutableRadioIdentifiers>"8
MPModelPropertySongTitle
MPModelPropertySongHasVideo
MPModelPropertySongTraits
MPModelPropertySongDownloadedDate
MPModelRelationshipSongPlaybackPosition
MPModelPropertySongVolumeAdjustment
MPModelPropertySongGaplessInfo
MPModelPropertySongCloudStatus
MPModelPropertySongUserRating
MPModelRelationshipSongStoreAsset
MPModelRelationshipSongHomeSharingAsset
MPModelPropertySongYear
MPModelPropertySongClassicalMovementNumber
MPModelPropertySongClassicalMovementCount
MPModelPropertySongClassicalMovement
MPModelPropertySongClassicalWork
MPModelPropertySongHasCloudSyncSource
MPModelPropertySongLibraryAddEligible
MPModelPropertySongLastDevicePlaybackDate
MPModelPropertySongLibraryAddedDate
MPModelPropertySongLibraryAdded
MPModelPropertySongKeepLocalManagedStatus
MPModelPropertySongKeepLocalEnableState
MPModelRelationshipSongLocalFileAsset
MPModelPropertySongArtwork
MPModelPropertySongVolumeNormalization
MPModelPropertySongShouldShowComposer
MPModelRelationshipSongLyrics
MPModelPropertySongBeatsPerMinute
MPModelPropertySongArtistUploadedContent
MPModelPropertySongExplicit
MPModelPropertySongSkipCount
MPModelPropertySongPlayCount
MPModelPropertySongDiscNumber
MPModelPropertySongTrackNumber
_MPModelPropertySongTrackCount
MPModelPropertySongDuration
MPModelPropertySongCopyrightText
MPModelPropertySongGrouping
MPModelRelationshipSongComposer
MPModelRelationshipSongGenre
MPModelRelationshipSongArtist
MPModelRelationshipSongAlbum
variants
cloud library 
shuffleable 
artist uploaded content
music videos
v16@?0@"MPModelSongKind"8
Song:v%lu:o%lu
MPModelChildSongAlbum
MPModelChildSongArtists
com.apple.MediaPlayer.MPAVTelevisionRoutingDataSource/serialQueue
refId
RTCSessionIdentifier
popularityDictionary
appDataDictionaryVersion
deviceSpecificUserInfo.
userInfo.
@24@?0@"MPNowPlayingContentItem"8@"MPMediaRemoteEntityTranslatorContext"16
predicates
com.apple.fig.screen.is.probably.being.recorded
; scaledFittingSize = %@
; tileSpacing = %.2f
; numberOfRows = %lu
; numberOfColumns = %lu
; revisionIdentifier = %@
; namespaceIdentifier = %@
; entityIdentifier = %@
<%@: %p
The provided queue has no items or collections.
<%@ %p, query = %@, firstItem = %@, shuffleType = %@, repeatType = %@>
queue
You must provide %@ with a MediaRemote playback queue. Use %@ instead.
<%@:%p EmptyQueue>
<%@:%p identifier=%@ dataLength=%lu>
<%@ %p, seedTrack = %@>
Empty track IDs array provided
<%@ %p, shuffleType = %@, trackIDs = %@>
Radio station is invalid or not found.
<%@ %p, stationID = %@, stationStringID = %@>
mrQueue
MPRemotePlaybackQueue.m
MPStoreLyricsRequestErrorDomain
v24@?0@"MPStoreLyricsResponse"8@"NSError"16
MPModelPropertyPersonName
MPRadioRecentStationsGroupLocalizedTitle
MPRadioRecentStationsGroupStations
editorial-elements
links
contents
children
editorialElementKind
label
/v1/editorial/%@/rooms/%@
viewRoomUrlRegex
musicSubscription
link
token
tabs
; disallowEmptyTitleSections = %@
; useOneLevelHeroListHierarchy = %@
; createIndependentSectionsForLiveRadioStations = %@
v16@?0@"MPModelGenre"8
hi-res-lossless
lossless
atmos
@"MPArtworkCatalog"16@?0@"MPModelAlbum"8
MPShuffleableSectionedIdentifierList.m
Can only move after a section tail that is in the shuffled SIL: afterSectionIdentifier=%@
Can only move after a section head that is in the shuffled SIL: afterSectionIdentifier=%@
Unsupported shuffle type: MPShuffleTypeUserDefault
B32@?0@"MPSectionedIdentifierListEntry"8Q16^B24
rand
cani
MPStoreLyricsSnippetRequestErrorDomain
{shared_ptr<mlcore::LocalizedSearchScope>=^{LocalizedSearchScope}^{__shared_weak_count}}24@?0@"MPModelKind"8@"MPPropertySet"16
v32@?0@"NSString"8@"MPModelKind"16^B24
Couldn't create scope for modelKind: %@
MPModelLibrarySearchScope.mm
MPModelLibrarySearchScopeItemProperties
MPModelLibrarySearchScopeName
MPModelLibrarySearchScopeItemKind
; name = %@
; itemKind = %@
MPModelLibraryAddToPlaylistChangeRequestErrorDomain
com.apple.mediaplayer.artworkservice.resizing.queue
com.apple.mediaplayer.artworkservice.resizing.OperationQueue
The lightweight routing controller only supports disabled and presence discovery modes. If detailed is needed please use MPAVRoutingController.
MPAVLightweightRoutingController.m
<%@:%p "%@"
items
section
B24@?0q8q16
v32@?0@"NSIndexPath"8Q16^B24
v16@?0@"NSIndexPath"8
globalIndex must be greater than or equal to 0
MPSectionedCollection.m
v32@?0@"NSArray"8Q16^B24
    %@ (%lu %@),
; %lu %@
sections
    
        %@,
    %@ (%lu %@): [
sectionedItems
@"MPArtworkCatalog"16@?0@"MPModelTVShow"8
MPModelPropertyPlayEventDatePlayed
MPModelPropertyPlayEventFeatureName
MPModelRelationshipPlayEventAlbum
MPModelRelationshipPlayEventArtist
MPModelRelationshipPlayEventPlaylist
MPModelRelationshipPlayEventRadioStation
MPModelRelationshipPlayEventGroup
v16@?0@"MPModelPlayEvent"8
v16@?0@"MPModelRadioStation"8
short
editorNotes
v16@?0@"MPModelStoreBrowseSection"8
subscriber
nonsubscriber
optout
include[stations]
include
<%@: %p entryType=%@>
MPSectionedIdentifierListEntryTypeUnknown
MPSectionedIdentifierListEntryTypeStart
MPSectionedIdentifierListEntryTypeHead
MPSectionedIdentifierListEntryTypeItem
MPSectionedIdentifierListEntryTypeTail
MPSectionedIdentifierListEntryTypeEnd
innerEntry not found in innerEntry.previousEntry.nextEntries
_startEntries
endEntry cannot be the same as the startingEntry
Cannot instantiate forward enumerator with MPSectionedIdentifierListEnumerationOptionReverse set
MPSectionedIdentifierListEnumerator.m
entryToEmit not found in entryToEmit.previousEntry.nextEntries
TracklistLoadDuration
PerceivedTotalStartupTime
SecureKeyBlockingLoadDuration
AFAnalyticsEventTypeMusicPlaybackSummary
MPVolumeSliderVolumeControlLabelDidChangeNotification
MPVolumeSliderVolumeControlAvailabilityDidChangeNotification
MPVolumeSliderVolumeControlCapabilitiesDidChangeNotification
VolumeWarning
VideoPlayer_Slider_Groove
ControlCenter_Slider_Thumb
VideoPlayer_Slider_Thumb
VideoPlayer_Slider_Thumb_Small
MPVolumeSlider.route must be an MPAVEndpointRoute
MPVolumeSlider.m
<%@: %p value: %f dataSource: %@
MPVolumeViewVisibilityChangedNotification
MPVolumeViewRouteButtonChangedNotification
MPVolumeViewRoutePickerPresentedNotification
MPVolumeViewWirelessRoutesAvailableDidChangeNotification
MPVolumeViewWirelessRouteActiveDidChangeNotification
MediaPlayer
NO_VOLUME_AVAILABLE
airplay
airplay_on
MPVolumeViewShowsRouteButton
MPVolumeViewShowsVolumeSlider
MPModelLibraryRequestLegacyMediaQuery
MPModelLibraryRequestMediaLibrary
MPModelLibraryRequestFilterText
MPModelLibraryRequestFilteringOptions
MPModelLibraryRequestContentRangeLength
MPModelLibraryRequestContentRangeLocation
MPModelLibraryRequestAllowedItemIdentifiers
_MPModelLibraryRequestCodingKeySortUsingAllowedItemIdentifiers
MPModelLibraryRequestWantsDetailedKeepLocalRequestableResponse
 sortUsingAllowedItemIdentifiers=YES
 filterText="%@"
 scopedContainers=[%@]
 allowedSectionIdentifiers=[%@]
 allowedItemIdentifiers=[%@]
Detailed keep local status only supported when request wantsDetailedKeepLocalRequestableResponse.
Detailed keep local status only supported when request is sectioned.
MPModelLibraryRequest.mm
com.apple.MediaPlayer.MPMediaLibraryPlaybackItemMetadata.writeQueue
v24@?0@"MPMediaItem"8@"NSError"16
v16@?0@"MPModelFileAsset"8
@"MPArtworkCatalog"16@?0@"MPModelSong"8
v16@?0@"MPModelHomeSharingAsset"8
com.apple.MPMediaLibraryPlaybackItemMetadata
%@%@%@.%@
cloudid-%llu
adamid-%lli
persistentid-%llu
MPModelStoreForYouDisplayFilterKind
withPlainEditorialNotes
types
withSocial
withRecentlyPlayed
MPModelStoreForYouRequestMode
MPModelStoreForYouRequestEndpoint
MPModelStoreForYouRequestFilteringPolicy
customForYouURL
Non-linear entries in MPSectionedIdentifierListEntryAddBranch
Non-contiguous entries in MPSectionedIdentifierListEntryAddBranch [disconnected previous]
Non-contiguous entries in MPSectionedIdentifierListEntryAddBranch [too many next]
Cannot add empty branch
MPSectionedIdentifierListEntry.m
<%@: %p> %@
<%@: %p> %@%@
<%@: %p> %@ - %@
%@ (%@)
kMRMediaRemoteOptionSenderID
<%@: %p command=%@>
<missing: %@>
%@s cannot be initialized externally.
hasTitle
textColor
<%@: %p> (
  textColor: %@
  hasTitle: %@
_allowedItemPersistentIDToItemQueryResultsIndexMap must contain an entry for every value in _allowedItemIdentifiers
Section index out of bounds: %ld (sectionCount = %ld)
MPModelLibraryDefaultSectionedCollectionDataSource.mm
faulting not implemented yet
Adjusted global index out of bounds: %ld (indexPath = %@ / entityCount = %ld)
MPModelStoreBrowseRequestOptions
MPModelStoreBrowseRequestAdditionalContent
MPModelStoreBrowseRequestSubscriptionStatus
MPModelStoreBrowseRequestEndpoint
MPModelStoreBrowseRequestFilteringPolicy
MPModelStoreBrowseRequestDomain
MPModelPropertyArtistLibraryAddedDate
MPModelPropertyArtistAlbumCount
MPModelPropertyArtistSongCount
MPModelRelationshipArtistGenre
MPModelPropertyArtistEditorialArtwork
MPModelPropertyArtistArtwork
MPModelPropertyArtistHasBiography
artists with %@
v16@?0@"MPModelArtistKind"8
Artist:a%p
MPModelPropertyPersonHasSocialPosts
MPModelChildArtistAlbums
MPAVRoutingControllerActiveSystemRouteDidChangeNotification
MPAVRoutingControllerDidPickRouteNotification
MPAVRoutingControllerRouteUserInfoKey
MPAVRoutingControllerDidUpdateVolumeControlStateNotification
pendingRoutes
cachedPickedRoutes
cachedRoutes
discoveryMode
<NONE>
route
MPAVRoutingController.m
com.apple.airplay.deviceAvailability
-[MPAVRoutingController _activeAudioRouteDidChangeNotification:]_block_invoke
v24@?0^v8^{__CFError=}16
represents NowPlaying App
does NOT represent NowPlaying App
routeName
<%@ %p dataSource=%@>
<%@ %p "%@" dataSource=%@>
com.apple.MediaPlayer.MPAVRoutingController/serialQueue
Q8@?0
^v24@?0^{os_state_hints_s=I*II}8@?<^v@?@"NSDictionary">16
Route in progress was interrupted by a new selection for the same route.
Enqueued route was cancelled because a new selection for the same route was enqueued.
Selection was cancelled due to removePendingRoute.
<%@: %p operationName=%@ routes=%@>
remove
Route selection cancelled by MPAVRoutingController cancelInProgressSelectionForRoute:
com.apple.MediaPlayer.MPAVRoutingControllerSelection/serialQueue
ipad-pro
iphone-x
odeon
DeviceClass
appleTV
AppleTV
ipod
ipad
iPad
iPhone
Active route must be of type MPAVEndpointRoute.
speaker.wave.2.fill
homePod-pair
homepod.2.fill
b520-pair
homepodmini.2.fill
homepod.and.appletv.fill
odeon-b520
homepodmini.and.appletv.fill
hifispeaker.fill
hifispeaker.2.fill
hifispeaker.and.homepodmini.fill
hifispeaker.and.homepod.fill
hifispeaker.and.appletv
person.2.fill
genericTV
tv-stick
mediastick
tv-settopbox
tv.and.mediabox
appletv.fill
homepodmini-homepod
homepod.and.homepodmini.fill
v32@?0@"MPAVRoute"8q16@"NSString"24
headphones
hearingdevice.ear
carplay
beatslogo
speaker.bluetooth.fill
car.fill
airpods
speaker
homePod
homepod.fill
b520
homepodmini.fill
airpods-b515
airpodsmax
beats-b507
beats-b372
beats-b364
beats-b419
beats-powerbeats-pro
beats.powerbeatspro
beats-x
beats.earphones
beats-studio
beats-solo
beats.headphones
beats-powerbeats
beats.powerbeats
airpods-pro
airpodspro
com.apple.MediaPlayer.MPAVRoutingController/sharedWorkerQueue
MPModelPropertyComposerLibraryAddedDate
albumKind
composers with %@
v16@?0@"MPModelComposerKind"8
Composer:a%p
[MPServerObjectDatabaseMetadataImportRequest class]
MPServerObjectDatabaseImportRequest.m
sinf2
Cannot extract sinfData from invalid synfType
miniSinf
B64@?0@"NSString"8@"NSMutableDictionary"16@"NSArray"24@"NSString"32@"MPIdentifierSet"40q48^@56
superLightweight
lightweight
plus
sinfs
flavor
Cannot obtain digest from unknown hasher algorithm
MSVHasher+Algorithms.h
attributes.assets
attributes.assetUrls
attributes.extendedAssetUrls
attributes.playParams
meta
tv-episodes
editorial-items
apple-curators
station-events
station-events|apple-curators
artists|playlists
artists|songs
artists|stations
apple-curators|playlists
playlists|apple-curators
normal
multirooms
targetedRadio
rooms
groupings
preorder
marketing-items
personal-recommendation
assetUrls
extendedAssetUrls
artwork
song
movie
tvShow
tvEpisode
artistOnly
user
streaming
editorial
activity
[MPServerObjectDatabaseAssetImportRequest class]
flavors
adamIds
v24@?0@"MPModelResponse"8@"NSError"16
Model response invalidation notification
Model response invalid before completion
 modelRequest=%@
kRTCReportingSessionInfoClientType
kRTCReportingSessionInfoClientVersion
kRTCReportingSessionInfoSessionID
kRTCReportingSessionInfoBatchEvent
kRTCReportingSessionInfoRequireUserInfo
kRTCReportingSessionInfoHierarchyToken
kRTCReportingUserInfoClientName
kRTCReportingUserInfoServiceName
RTCReporting
RTCReporting.framework
PrivateFrameworks
System
InsignificantSortPrefixes
Headers
LastCharacter
FirstCharacterAfterLanguage
NameTransform
LocalizedSectionIndices
SectionIndices
LocalizedSectionHeaders
SectionHeaders
MediaLibraryCore.framework
supplementalReason
ReplacementContext is of different type %@ != %@
 %@=%@
<%@:%p
queueDescriptor
supportsAccountRectification
sessionIdentifier
siriAssetInfo
actionAfterQueueLoad
queueEndAction
repeat/shuffle
%@/%@
MPPlaybackContextPlayActivityRecommendationData
MPPlaybackContextPlayActivityFeatureName
MPPlaybackContextPlayActionQueueGroupingID
MPPlaybackContextActionAfterQueueLoad
MPPlaybackContextQueueEndAction
MPPlaybackContextRepeatType
MPPlaybackContextShuffleType
MPContentTasteControllerDidChangeNotification
MPContentTasteControllerNotificationUserInfoKeyContentType
MPContentTasteControllerNotificationUserInfoKeyMediaEntity
MPContentTasteControllerNotificationUserInfoKeyPlaylistGlobalID
MPContentTasteControllerNotificationUserInfoKeyStoreAdamID
MPContentTasteControllerNotificationUserInfoKeyTasteType
MPContentTasteControllerWillSetTasteTypeNotification
invalid playlist global ID
unknown entity type
com.apple.MediaPlayer.MPContentTasteController.accessQueue
v32@?0@"MPContentTasteController"8Q16^B24
SingletonTasteController
com.apple.mediaplayer.MPContentTasteController.global.serial.queue
v32@?0@"MPStoreItemMetadataCacheKey"8@"MPStoreItemMetadataCache"16^B24
com.apple.MediaPlayer.MPStoreItemMetadataRequestController
v24@?0@"<ICStorePlatformResponse>"8@"NSError"16
v32@?0@"NSArray"8@"<ICStorePlatformResponse>"16@"NSError"24
v24@?0@"ICStorePlatformMetadata"8^B16
Attempting to end a transaction that never began
MPStoreItemMetadataRequestController.m
com.apple.MediaPlayer/MPStoreItemMetadata.callout
com.apple.MediaPlayer.MPStoreItemMetadataRequestController.operationQueue
playlistPersistentID
name
playlistAttributes
seedItems
dateCreated
dateModified
isWorkoutMix
isGeniusMix
isGeniusPlaylist
geniusMixRepresentativeArtists
isVoiceMemos
isActivePlaylist
isActiveGeniusPlaylist
isActiveOnTheGoPlaylist
isUserEditable
isDeletable
isLimitedDynamicSmartPlaylist
descriptionInfo
isEditable
playCount
playCountSinceSync
likedState
parentPersistentID
isPurchasesPlaylist
isCurrentDevicePurchasesPlaylist
isPlaybackHistoryPlaylist
isIgnoredSyncing
hasItems
mediaType
cloudGlobalID
cloudVersionHash
cloudShareURL
cloudIsPublic
cloudIsVisible
cloudIsSubscribed
cloudIsCuratorPlaylist
cloudAuthorStoreID
cloudAuthorDisplayName
cloudAuthorStoreURL
cloudUserCount
cloudGlobalPlayCount
cloudGlobalLikeCount
distinguishedKind
isITunesSynced
externalVendorDisplayName
externalVendorContainerTag
externalVendorIdentifier
isExternalVendorPlaylist
cloudPlaylistUniversalLibraryID
Cannot finalize unknown hasher algorithm
subclass must implement
MPMediaPlaylist.m
Playlist was initialized with a multiverse identifier containing the wrong object type (%d)
CFBundleExecutable
CFBundleDisplayName
MPModelPropertyTVEpisodeTitle
TV episode %@
MPModelPropertyTVEpisodeDownloadedDate
MPModelPropertyTVEpisodeArtwork
MPModelPropertyTVEpisodeKeepLocalManagedStatus
MPModelPropertyTVEpisodeKeepLocalEnableState
MPModelPropertyTVEpisodeLibraryAddEligible
MPModelPropertyTVEpisodeLastDevicePlaybackDate
MPModelPropertyTVEpisodeLibraryAddedDate
MPModelPropertyTVEpisodeLibraryAdded
MPModelPropertyTVEpisodeTypeDisplayName
MPModelPropertyTVEpisodeType
MPModelPropertyTVEpisodeReleaseDate
MPModelRelationshipTVEpisodeShow
MPModelRelationshipTVEpisodeSeason
MPModelRelationshipTVEpisodeStoreAsset
MPModelRelationshipTVEpisodePlaybackPosition
MPModelRelationshipTVEpisodeLocalFileAsset
MPModelPropertyTVEpisodeExplicitRating
MPModelPropertyTVEpisodeNumber
MPModelPropertyTVEpisodeMusicShow
MPModelPropertyTVEpisodeHasCloudSyncSource
MPModelPropertyTVEpisodeDuration
MPModelPropertyTVEpisodeDescriptionText
Apple Music episodes
episodes
v16@?0@"MPModelTVEpisodeKind"8
TVEpisode:v%lu:o%lu
MPPlaybackArchiveErrorDomain
Attempt to mutate after finalization.
MPPlaybackArchive.m
queueControlOptions
copyOptions
displayProperties
supportedOptions
bundleID
sessionType
sessionID
archiveType
v16@?0@"<MPMutablePlaybackArchive>"8
<%@: %p type=%ld playbackSessionIdentifier=%@ playbackSessionData=%@ playbackSessionType=%@ bundleIdentifier=%@ supportedOptions=%lu queueControlOptions=%lu displayProperties=%@ copyOptions=%lu> storage=%@
TOTAL
v32@?0q8@"NSDictionary"16^B24
Cannot decode object of type %@
MPMediaQuery.m
<%@ %p> '%@' %@ %@
equal to
ends with
starts with
contains
bit test
less than or equal
less than
greater than or equal
greater than
not equal to
'%@' %@
'%@'
MPComparisonType
MPValue
MPProperty
MPMediaPredicate is an abstract class and cannot be encoded.
MPMediaPredicate is an abstract class and cannot be decoded.
MPMediaPropertyPredicate cannot filter using the %@ property.
v24@?0q8^B16
v16@?0@8
v32@?0@"MPMediaItemCollection"8Q16^B24
Cannot decode protobuf object of type %@
MPStaticEntityType
MPStaticEntities
MLIsFilteringDisabled
MPIncludeEntitiesWithBlankNames
MPIncludeNonLibraryEntities
MPIgnoreRestrictionsPredicates
MPIgnoreSystemFilterPredicates
MPEntityOrder
MPGroupingType
MPFilterPredicates
MLEntityOrderSorted
MLEntityOrder
<%@:%p %@, %@, SystemFilters=%@>
DISABLED
MPMediaGroupingTitle
MPMediaGroupingSongsByAlbumArtist
MPMediaGroupingAlbum
MPMediaGroupingAlbumByArtist
MPMediaGroupingAlbumByAlbumArtist
MPMediaGroupingAlbumByComposer
MPMediaGroupingArtist
MPMediaGroupingAlbumArtist
MPMediaGroupingComposer
MPMediaGroupingGenre
MPMediaGroupingPlaylist
MPMediaGroupingPodcastTitle
MPMediaGroupingSeriesName
MPMediaGroupingSeasonName
MPMediaGroupingAudioBookTitle
MPMediaGroupingAlbumPersistentID
MPMediaGroupingAlbumRecentlyAdded
MPMediaGroupingAlbumArtistRecentlyAdded
MPMediaGroupingAlbumArtistRecentlyPlayed
MPMediaGroupingComposerRecentlyAdded
MPMediaGroupingComposerRecentlyPlayed
MPMediaGroupingGenreRecentlyAdded
MPMediaGroupingGenreRecentlyPlayed
(unknown grouping type)
filtering_disabled
elsePredicate
thenPredicate
conditionPredicate
<%@ %p> %@
MPPredicates
<%@ %p property:'%@' values:%@>
containmentValues
containmentProperty
<%@ %p> should%@ contain %lu persistent IDs
persistentIDs
shouldContain
<%@ %p> %@ matches '%@'
MPSearchString
com.apple.MediaPlayer.MPModelLibraryImportChangeRequestOperation.accessQueue
v24@?0@"MPMediaPlaylist"8@"NSError"16
com.apple.MediaPlayer.MPModelLibraryImportChangeRequestOperation.operationQueue
v16@?0@"MPModelCurator"8
@"MPArtworkCatalog"16@?0@"MPModelPlaylist"8
user-shared
external
spatial
MPMusicPlayerControllerErrorDomain
MPMusicPlayerControllerPlaybackStateDidChangeNotification
MPMusicPlayerControllerNowPlayingItemDidChangeNotification
MPMusicPlayerControllerVolumeDidChangeNotification
MPMusicPlayerControllerQueueDidChangeNotification
MPMediaPlaybackIsPreparedToPlayDidChangeNotification
MPMusicPlayerControllerItemPlaybackDidEndNotification
_MPMusicPlayerControllerArtworkDidChangeNotification
_MPMusicPlayerControllerQueueDidEndNotification
_MPMusicPlayerControllerQueueDidChangeNotification
_contentItemIDs
MusicKit_applicationMusicPlayer
MusicKit_systemMusicPlayer
com.apple.Music.MPMusicPlayerControllerInternal
com.apple.Music.MPMusicPlayerApplicationControllerInternal
v16@?0@"MPMusicPlayerControllerNowPlayingTimeSnapshot"8
v24@?0@"MPMusicPlayerControllerNowPlaying"8@"NSError"16
v24@?0@"MPMusicPlayerQueueDescriptor"8@"NSError"16
MPMusicPlayerController is not available on the simulator
[MPMusicPlayerController class]
MPMusicPlayerController.m
<%@:%p client=%@>
Must initialize a concrete instance of MPMusicPlayerController.
applicationQueuePlayer
systemMusicPlayer
MPArtworkCatalogEffectOptionColorAnalyzerAlgorithm
MPArtworkRepresentationBackingFileURLAssociatedKey
MPArtworkCatalogErrorDomain
i=%@/v=%@
v24@?0@8@"MPArtworkRepresentationCollection"16
v24@?0@"MPExportableArtworkProperties"8@"NSError"16
v16@?0@?<v@?@@"NSError">8
v16@?0^{CGImage=}8
v24@?0@"MPArtworkColorAnalyzer"8@"MPArtworkColorAnalysis"16
<%@: %p token=%@ fittingSize=%@ destinationScale=%lf destination=%@>
<%@: %p [redacted description due to non-main thread]>
Identifiable data source with short description "%@" is not properly registered.
%@-%@
v16@?0@"UIGraphicsImageRendererContext"8
@"UIColor"16@?0@"UITraitCollection"8
q24@?0@"NSValue"8@"NSValue"16
conditionalPredicate
isExecuting
isFinished
error
[MPAsyncOperation class]
Subclass %@ must implement -%@ defined in %@.
MPAsyncOperation.m
com.apple.MediaPlayer.MPAsyncOperation.accessQueue
albumTitle
albumArtist
genre
composer
playbackDuration
albumTrackNumber
albumTrackCount
containerItemPID
chosenByAutoFill
discCount
lyrics
year
beatsPerMinute
comments
storeItemAdamID
storeAccountID
storeDownloaderAccountID
storeFamilyAccountID
storeItemURL
storePlaylistAdamID
storeArtistAdamID
storeAlbumArtistAdamID
storeComposerAdamID
storeGenreAdamID
storeRentalID
isPremium
isRental
isITunesU
isAudible
isMusicVideo
isHD
includeInShuffle
shortDescriptionInfo
movieInfo
podcastTitle
seriesName
seasonName
episodeNumber
showSortType
episodeType
episodeTypeDisplayName
episodeSubSortOrder
isMusicShow
collectionDescription
hlsOfflinePlaybackKeys
skipCount
skipCountSinceSync
lastSkippedDate
rememberBookmarkTime
lastPlayedDate
userGrouping
sortTitle
sortArtist
sortAlbumTitle
sortAlbumArtist
sortComposer
filePath
verifiedIntegrity
locationFileName
assetURL
hasAvailableItemArtwork
chapters
chapterArtworkTimes
albumPID
artistPID
albumArtistPID
genrePID
composerPID
podcastPID
hasBeenPlayed
bookmarkTime
isDemoRental
rentalDuration
rentalPlaybackDuration
rentalPlaybackStartTime
rentalStartTime
rentalExpirationDate
rentalWindowEndDate
isOTAPurchased
isStreamingQuality
isTemporaryCloudDownload
durationInSamples
gaplessHeuristicInfo
gaplessEncodingDrain
volumeNormalization
volumeAdjustment
fileSize
podcastURL
podcastGUID
eqPreset
audioTrackID
audioTrackLocale
hasAlternateAudio
hasSubtitles
isPendingSync
hasProtectedAsset
hasAppleMusicDRM
needsRestore
storeCloudStatus
storeRedownloadParameters
downloadIdentifier
storeSagaID
restricted
storeBookmarkIdentifier
storeBookmarkTimestamp
storeBookmarkEntityRevision
isCloudItem
isAlarm
likedStateChanged
likedStateChangedDate
dateAccessed
artistOrderSection
isHidden
isLocal
isDeprotected
dateAdded
albumYear
albumKeepLocal
artistKeepLocal
albumArtistKeepLocal
genreKeepLocal
storeDatePurchased
storeExtrasURL
storeNeedsReporting
showComposer
dateDownloaded
bitRate
subscriptionStoreItemAdamID
storePlaybackEndpointType
storeAssetProtectionType
radioStationID
advertisementUniqueID
advertisementType
isArtistUploadedContent
cloudIsInMyLibrary
reportingStoreItemAdamID
assetStoreItemAdamID
isExplicit
isPlayable
isMatchAudio
isNonLibraryOwnedSubscriptionContent
significantAmountHasBeenPlayed
entityRevision
remoteLocationId
isInMyLibrary
storeCloudAssetAvailable
composerOrArtist
classicalWork
classicalMovementCount
classicalMovementNumber
hasHLSVideo
storeCloudAlbumID
storeLyricsAvailable
timeSyncedLyricsAvailable
playbackStoreID
colorCapability
hlsColorCapability
videoQuality
hlsVideoQuality
hlsPlaylistURL
audioCapability
hlsAssetTraits
hlsKeyServerURL
hlsKeyCertificateURL
availableItemArtworkToken
fetchableItemArtworkToken
fetchableItemArtworkSource
availableItemScreenshotToken
fetchableItemScreenshotToken
fetchableItemScreenshotSource
itms://?action=library-link%@
&%@=%@
podcast-url
%llu
kind
music-video
podcast-episode
tv-episode
http://itunes.apple.com/WebObjects/MZStore.woa/wa/
viewTVSeason?id=%1$llu
viewAlbum?id=%1$llu
viewMovie?id=%2$llu
viewAudiobook?id=%2$llu
viewPodcast?id=%1$llu
invalid parameter
MPMediaItem.m
com.apple.LegacyMusic
com.apple.Music
[MPMediaItem class]
v24@?0@8^B16
MPPersistentID
[MPNondurableMediaItem class]
requestHandler must be non-nil
image must be non-nil
anyMedia
musicVideo
iTunesU-video
podcast-video
home-video
anyVideo
iTunesU-audio
voiceMemo
audioBook
music
anyAudio
AnyMedia
MusicVideo
VideoPodcast
HomeVideo
TVShow
Movie
AnyVideo
ITunesUAudio
VoiceMemo
AudioBook
Podcast
AnyAudio
Invalid creation options for MPModelLibraryKeepLocalStatusRequestOperation. downloadableItemsQuery or downloadablePlaylistItemEntityQueryBlock  must be specified
Library view must not be nil.
MPModelLibraryKeepLocalStatusRequestOperation.mm
MPMediaLibraryDidChangeNotification
MPMediaLibraryPathDidChangeNotification
MPMediaLibraryChangeTypes
MPMediaLibraryChangeTypePlaylists
MPMediaLibraryChangeTypeItemsKey
_MPMediaLibraryAvailableMediaLibrariesDidChangePrivateNotification
MPMediaLibraryAvailableMediaLibrariesDidChangeNotification
MPMediaLibraryDefaultMediaLibraryDidChangeNotification
MPMediaLibraryDynamicPropertiesDidChangeNotification
MPMediaLibraryInvisiblePropertiesDidChangeNotification
MPMediaLibraryDisplayValuesDidChangeNotification
MPMediaLibraryDisplayValuesWillChangeNotification
MPMediaLibrarySyncGenerationDidChangeNotification
MPMediaLibraryConnectionProgressDidChange
MPMediaLibraryStatusDidChangeNotification
MPMediaLibraryRestrictionsDidChangeNotification
MPMediaLibraryFilteringDidChangeNotification
MPMediaLibraryCloudLibraryAvailabilityDidChangeNotification
MPMediaLibraryEntitiesAddedOrRemovedNotification
MPMediaLibraryContentTasteCatalogUpdateOptionInvalidateLocalCache
MPMediaLibraryErrorDomain
unimplemented
One or more persistentID failed to be converted into MPMediaItem.
One or more store item metadata instances didn't have a valid storeID.
One or more store item metadata instances failed to be converted into SSLookupItems.
-[MPMediaLibrary getPlaylistWithUUID:creationMetadata:completionHandler:]
SKCloudServiceController
/System/Library/Frameworks/StoreKit.framework/StoreKit
PERMISSION_DENIED
NOT_FOUND
com.apple.mediaplayer.MPMediaLibraryRemote
com.apple.mediaplayer.MPMediaLibrary.connectionAssertions
com.apple.mediaplayer.MPMediaLibrary.additionalLibraryFilterPredicatesAccessQueue
v16@?0@"NSNotification"8
@"NSNumber"16@?0@"NSArray"8
v24@?0@"MPMediaQueryCriteria"8@?<v@?@"NSNumber">16
v16@?0Q8
v16@?0@"NSNumber"8
v32@?0@?<v@?@"NSNumber">8Q16^B24
only one of item/itemsResultSet should be set
MPMediaLibrary.m
ipod-library
%p: %@
values/properties must have the same count (%lu != %lu)
v16@?0@"MPStoreDownload"8
MLSyncPlaylistId
v32@?0@"NSString"8@"MPMediaLibrary"16^B24
CAPABILITY_MISSING
v12@?0f8
Unable to connect
Connection already in progress
MPUserDSID
MPLibraryDataProviderUID
only keyed coding is supported
-[MPMediaLibrary initWithClientIdentity:userIdentity:]
com.apple.mediaplayer.MPMediaLibrary
-[MPMediaLibrary initWithClientIdentity:userIdentity:]_block_invoke
q24@?0@"MPMediaLibrary"8@"MPMediaLibrary"16
v16@?0@"MPMediaLibrary"8
NoDSID
Attempting to access a method only available for tv and audio accessory device
default_media_library
com.apple.MPMediaLibrary.global.serial.queue
v48@?0q8q16@"NSString"24q32^B40
v40@?0q8@"NSString"16q24^B32
[MPModelRequest class]
MPModelRequest.m
MPModelRequestItemSortDescriptors
MPModelRequestSectionSortDescriptors
sectionKind
itemKind
MPModelRequestItemProperties
MPModelRequestSectionProperties
MPModelRequestLabel
; label = %@
; itemProperties = %@
; itemKind=%@
; sectionProperties = %@
; sectionKind=%@
com.apple.MediaPlayer.MPModelRequest.sharedNetworkQueue
com.apple.MediaPlayer.MPModelRequest.sharedQueue
MPModelPropertySectionTitle
MPAVQueueCoordinatorFailedToQueueAnyItemsNotification
MPAVQueueCoordinatorWillInsertItemAfterItemNotification
currentItem
@"MPAVItem"16@?0@"AVPlayerItem"8
v32@?0@"MPAVItem"8Q16^B24
 [anchored]
[reused]
MPAVQueueCoordinator
<%@:%p>
%@:%@
MP_weakAssociatedQueuePlayer
@"MPQueuePlayer"8@?0
v24@?0@"MPNowPlayingContentItem"8@"MPIdentifierSet<MPMutableIdentifierSet>"16
text
results
HTTPStatusCodeKey
/v1/lyrics/%@/snippet/songs/%lld
default
v16@?0@"MPModelMediaClip"8
v16@?0@"MPModelStaticAsset"8
@"MPArtworkCatalog"16@?0@"MPModelMediaClip"8
q24@?0@"MPStoreItemMovieClipAsset"8@"MPStoreItemMovieClipAsset"16
_MSVHasher_SipHash_1_3_Append32: invalid byte count detected [byteCount & 7, tail == 0]: %lld
Cannot append to unknown hasher algorithm
_MSVHasher_SipHash_1_3_Append64: invalid byte count detected [byteCount & 7, tail == 0]: %lld
MSVHasher+SipHash.h
albumPersistentID
albumName
albumSortName
albumAlbumArtistPersistentID
albumAlbumArtist
albumRepresentativeItemPersistentID
albumRepresentativeItemArtworkToken
albumCloudStatus
albumAlbumYear
albumLikedState
albumStoreID
artistPersistentID
artistSortName
artistRepresentativeItemPersistentID
artistRepresentativeItemArtworkToken
artistCloudStatus
artistStoreID
albumArtistPersistentID
albumArtistName
albumArtistSortName
albumArtistRepresentativeItemPersistentID
albumArtistRepresentativeItemArtworkToken
albumArtistCloudStatus
albumArtistStoreID
albumArtistCloudUniversalLibraryID
composerPersistentID
composerName
composerSortName
composerRepresentativeItemPersistentID
composerRepresentativeItemArtworkToken
composerCloudStatus
composerStoreID
genrePersistentID
genreName
genreRepresentativeItemPersistentID
genreRepresentativeItemArtworkToken
genreCloudStatus
genreStoreID
artistCount
albumCount
itemCount
MPMediaItemCollection.m
MPMediaItemsQuery
MPItems
MPInitializedContainedMediaTypes
MPContainedMediaTypes
MPRepresentativeItem
MPItemsCount
-init is not supported, use -initWithItems:
MPMediaItemCollectionInitException
<%@ %lld %lld %f %d>
v16@?0@"MPModelArtist"8
@"MPArtworkCatalog"16@?0@"MPModelArtist"8
MPModelPropertyRadioStationEventHeroArtwork
MPModelPropertyRadioStationEventArtwork
MPModelPropertyRadioStationEventEndTime
MPModelPropertyRadioStationEventStartTime
MPModelPropertyRadioStationEventDescriptionText
MPModelPropertyRadioStationEventTitle
radio station event
VideoPlayer_Slider_Track_Hollow
pulseAnimation
UNKNOWN_DURATION
LIVE
VideoPlayer_Slider_Track
FINE_SCRUBBING
QUARTER_SPEED_SCRUBBING
HALF_SPEED_SCRUBBING
HI_SPEED_SCRUBBING
opacity
scrubberglow
v16@?0@"<MPMusicPlayerControllerServer>"8
v24@?0@"<MPMusicPlayerControllerServer>"8@?<B@?>16
v16@?0@"NSXPCListenerEndpoint"8
com.apple.MediaPlayer.RemotePlayerService
v16@?0@"<MPMusicPlayerControllerApplicationServer>"8
v24@?0@"<MPMusicPlayerControllerApplicationServer>"8@?<B@?>16
lyricsId
ttml
com.apple.MediaPlayer.MPStoreLyricsRequestOperation.operationQueue
com.apple.MediaPlayer.LyricsRequest.access
ttmlLyrics
MPAVRoutingControllerErrorDomain
Request for identifiers for section out of bounds: %lld
MPLazySectionedCollection.mm
Request for item identifiers out of bound in section (%lld): %lld
Index path must have two components.
Request for item out of bound in section (%lld): %lld
Request for number of items in section out of bounds: %lld
Request for section out of bounds: %lld
MPModelPropertyStaticAssetURL
MPModelPropertyStaticAssetMediaType
MPModelPropertyStaticAssetFlavorType
MPModelPropertyStaticAssetDuration
static asset
v16@?0@"MPModelComposer"8
MPModelObjectMediaItem initWithPersistentID: is not supported. Use initWithModelObject: instead.
MPModelObjectMediaItem.m
followProfile
unable to find MediaPlayer bundle
NSBundle_MPAdditions.m
MPAbstractNetworkArtworkDataSourceErrorDomain
@"MPArtworkRepresentation"32@?0{CGSize=dd}8^q24
v16@?0@"ICRequestContext"8
representationSize
@"NSCachedURLResponse"32@?0{CGSize=dd}8^q24
image_decoding
v32@?0@"NSURLSessionDataTask"8@"AVAssetResourceLoadingRequest"16^B24
MPAbstractNetworkArtworkDataSource
Failed to create URL request for catalog: %@
Artwork request must have a non-nil URL. catalog=%@
v40@?0@"NSURLSessionDataTask"8@"NSData"16@"NSURLResponse"24@"NSError"32
response
@32@?0{CGSize=dd}8^q24
q24@?0@8@16
[MPAbstractNetworkArtworkDataSource class]
MPAbstractNetworkArtworkDataSource.m
com.apple.mediaplayer.MPAbstractNetworkArtworkDataSource.imageAccessQueue
com.apple.mediaplayer.MPAbstractNetworkArtworkDataSource.videoAccessQueue
com.apple.mediaplayer.MPAbstractNetworkArtworkDataSource.callbackQueue
{-1,-1}
com.apple.mediaplayer.MPArtworkDataSourceURLCache.accessQueue
[MPMusicPlayerQueueDescriptor class]
MPMusicPlayerQueueDescriptor.m
featureName
queueGroupingID
bundleVersion
MPMusicPlayerQueueDescriptorEndTimes
MPMusicPlayerQueueDescriptorStartTimes
private
repeatType
shuffleType
MPMusicPlayerMediaItemQueueDescriptorStartItem
MPMusicPlayerMediaItemQueueDescriptorItemCollection
MPMusicPlayerMediaItemQueueDescriptorQuery
MPMusicPlayerStoreQueueDescriptorStoreFronts
MPMusicPlayerStoreQueueDescriptorStartItemID
MPMusicPlayerStoreQueueDescriptorStoreIDs
<%@:%p %@>
MPMusicPlayerPlayParametersCatalogID
MPMusicPlayerPlayParametersIsLibraryContent
MPMusicPlayerPlayParametersItemKind
MPMusicPlayerPlayParametersIdentifiers
MPMusicPlayerPlayParametersItemID
MPMusicPlayerPlayParametersDictionary
void _MSVHasher_SipHash_1_3_Append32(MSVHasherSipHash_1_3 *, uint32_t)
void _MSVHasherAppend32(MSVHasher * _Nonnull, uint32_t)
Cannot obtain hash from unknown hasher algorithm
_MSVHasher_SipHash_1_3_Append32: invalid byte count detected [byteCount & 3]: %lld
catalogId
isLibrary
<%@:%p queue=%@ startItem=%@>
MPMusicPlayerPlayParametersQueueDescriptorStartItemPlayParameters
MPMusicPlayerPlayParametersQueueDescriptorPlayParameters
radioStation
<%@:%p radioStation=%@>
playbackArchive
keyPath
relatedProperties
_allowedSectionPersistentIDToSectionQueryResultsIndexMap must contain an entry for every value in _allowedSectionIdentifiers
MPModelLibraryModelSectionedCollectionDataSource.mm
Adjusted section index out of bounds: %ld (sectionIndex = %ld / sectionEntityCount = %ld)
MPModelPropertyMediaClipTitle
mediaClip %@
MPModelRelationshipMediaClipStaticAssets
MPModelPropertyMediaClipPreviewArtwork
media clip
Disabled
Presence Scan
Detailed Scan
v24@?0@"NSString"8^B16
v24@?0@8@"NSString"16
%lld
@"UIImage"24@?0{CGSize=dd}8
MPLibrary
 %llu
com.apple.MediaPlayer.MPConcreteMediaItem.utilitySerialQueue
-init is not supported, use -initWithPersistentID:library:
MPConcreteMediaItemInitException
@"MPMediaItem"16@?0@"MPConcreteMediaEntityPropertiesCache"8
group
MPQuery
No persistent ID property could be found for media object of type %d
MPMediaLibraryDataProvider.m
@"MPMediaItemCollection"16@?0@"MPConcreteMediaEntityPropertiesCache"8
UNKNOWN_ERROR
NOT_SUPPORTED
MPProperties
com.apple.MediaPlayer.MPConcreteMediaPlaylist.accessQueue
Wrong class %@
com.apple.mediaplayer.ResultSetEntities
v40@?0Q8@"NSString"16Q24^B32
Property can't be nil
com.apple.mediaplayer.EntityProperty
ml3td_artwork_data
ml3td_radio_station_id
ml3td_advertisement_unique_id
ml3td_advertisement_type
isSourceExternal
localizedReason
ratingLevel
localizedRating
ratingProvider
v20@?0@"MPMediaChapter"8I16
@"UIImage"8@?0
v28@?0q8i16@?<v@?@"MPMediaChapter"I>20
SEASON_DISPLAY_FORMAT_%@
TestVideo
TestAudio
Media-SimTestFiles
/Library/
Media
/Library/Caches/com.apple.xbs/Sources/MediaPlayer_Sim/MobileMusicPlayer-4019.110.13/MediaPlayer/Core/MusicLibrary Support/_ios_tvos_watchos/MPMediaLibraryDataProviderML3.m
iapd
continuous
v48@?0q8q16i24i28q32^B40
v24@?0@"NSDictionary"8@"NSError"16
B16@?0@"ML3DatabaseConnection"8
v40@?0q8r^@16Q24^B32
No ML3Property for MPProperty: %@
MPMediaLibraryDataProviderML3.m
v16@?0@"ML3DatabaseConnection"8
v24@?0@"ICStorePlatformResponse"8@"NSError"16
item not found
items not found
v28@?0B8@"NSError"12@"NSData"20
Music
NanoMusic
v32@?0q8Q16^B24
SELECT revision FROM entity_revision WHERE class = 1 ORDER BY revision DESC LIMIT 1;
device
com.apple.MPMediaLibraryDataProviderML3.backgroundTask
com.apple.MPMediaLibraryDataProviderML3.cloudUpdateQueue
com.apple.MPMediaLibraryDataProviderML3.entitiesAddedOrRemovedNotificationQueue
NSUInteger MPITScaledVolumeNormalization(float)
MPITScaledVolumeNormalization is Unimplemented
v40@?0{_NSRange=QQ}8Q24^B32
MPAVRouteConnectionErrorDomain
_MPAVRouteConnectionDidInvalidateNotification
_MPAVRouteConnectionDidConnectNotification
_MPAVRouteConnectionDidAttemptConnectionNotification
MPAVRouteConnectionCorrelationIDUserInfoKey
MPAVRouteConnectionReasonUserInfoKey
MPAVRouteConnectionVolumeDidChangeNotification
MPAVRouteConnectionVolumeUserInfoKey
MPAVRouteConnectionEndpointIdentifierUserInfoKey
MPAVRouteConnectionOutputDeviceIdentifierUserInfoKey
v20@?0I8^{__CFArray=}12
MPAVRouteConnectionCustomData
MPAVRouteConnection
deprecated
<%@: %p valid: %@, connected: %@>
com.apple.MediaPlayerFramework.MPAVRouteConnection.accessQueue
com.apple.MediaPlayerFramework.MPAVRouteConnection.calloutQueue
externalDevice
MPAVRouteConnection.m
@24@?0:8@"MPMediaPredicate"16
@"NSMutableArray"16@?0:8
persistentID
keepLocal
keepLocalStatus
MPMediaEntity.m
MPSectionIndexTitles
MPSections
dataSource
MPVolumeController.m
Aborted
Active
Enforce
Overridden
MPPlaybackTime
MPPlaybackDuration
MPChapterType
MPIndexInChaptersOfSameType
MPIndexInChaptersOfAnyType
MPChapterIndex
only keyed archiving is supported
<%@: %p> chapter %lu, time = range = [%.2f, %.2f], %@ = %@
urlDescription
playbackTime
possibleObject
indexPath
com.apple.MediaPlayer.MPStoreLbraryPersonalizationCollectionDataSource.accessSerialQueue
v16@?0@"MPModelAlbum"8
v16@?0@"MPModelLyrics"8
MPMediaPlaybackItemMetadataDidChangeNotification
MPMediaPlaybackItemMetadataLikedStateDidChangeNotification
MPMediaPlaybackItemMetadataNetworkConstraintsDidChangeNotification
match
purchaseHistory
musicvideo
uploadedaudio
uploadedvideo
tvshow
User-Agent
com.apple.MediaPlayer.MPMediaPlaybackItemMetadata.accessQueue
salableAdamId
uploaded-audio
uploaded-video
high
none
unknown
v32@?0{shared_ptr<mlcore::LocalizedSearchQueryResult>=^{LocalizedSearchQueryResult}^{__shared_weak_count}}8@"NSError"24
v32@?0@"MPModelLibrarySearchScope"8Q16^B24
com.apple.MediaPlayer.MPModelLibrarySearchRequestOperation.accessSerialQueue
radio
redownload
downloaded
downloading
long
medium
actionText
price
priceFormatted
action-params
buyParams
assets
Only keyed archiving is supported.
MPStoreItemOfferLookupDictionary
v20@?0B8^{__CFError=}12
MPNowPlayingSession must be initialized with one or more AVPlayer instances.
MPNowPlayingSession.m
Cannot have two MPNowPlayingSession for the same playerID: %@
[%@] Property mapping missing for %@ : %@
MPBaseEntityTranslator.m
[%@] Relationship mapping missing for %@ : %@
No identifiers for model class: %@ from source: %@
_identifiers
[%@] Attempting to unsupport a relationship with an existing mapping: %@
[%@] Attempting to unsupport a property with an existing mapping: %@
[%@] Attempting to unsupport identifiers for %@
[%@] Attempting to set a source preprocessor for %@, but one is already set.
<%@:%p modelClass=%@>
[%@] Already an existing translator for %@
[MPBaseEntityTranslator class]
[%@] Attempting to replace existing identifiers translator for %@
[%@] Attempting to replace existing property translator for %@ : %@
[%@] Attempting to map an already unsupported property for %@ : %@
[%@] Attempting to replace existing relationship translator for %@ : %@
[%@] Attempting to map an already unsupported relationship for %@ : %@
AirPlayPortExtendedInfo
MPAVRouteDidChangeNotification
MPAVRouteUserInfoRouteKey
<%@: %p uid=%@ type=%@ subtype=%@ modelID=%@>
Speaker
Headphone
Headset
Receiver
LineOut
PersistentLineOut
DisplayPort
AirTunes
HDMI
BluetoothHeadphones
BluetoothHeadset
BluetoothLE
SPDIF
CarAudio
HomePod
Vehicle
Cluster
BluetoothSpeaker
SetTopBox
TVStick
WirelessDisplay
SmartAudio
<%@: %p name=%@ uid=%@ type=%@ subtype=%@>
| Mirroring Route: %@
<%@: %p, "%@", picked=%@ uid=%@>
B24@?0@"MPAVOutputDeviceDescription"8@"NSDictionary"16
76,8202
76,8205
76,8204
76,8203
76,8208
76,8206
76,8207
76,8201
76,8198
76,8197
76,8195
76,8194
-[MPAVRoute isPhoneRoute]
%s is abstract
-tlea
10507
76,8209
isUnavailableInAppleMusic
storePlatformData
B32@?0@"NSURLQueryItem"8Q16^B24
trackBadging
isSocialEnabled
isEnabled
isIcloudLibraryEnabled
isInternalInstall
true
apple-internal-install
v24@?0@"MRPlayerPath"8@"NSError"16
@"NSString"8@?0
v16@?0@"MRPlayerPath"8
-[MPNowPlayingSessionManager setDataSource:]_block_invoke
session
playerPath.isResolved
MPNowPlayingSessionManager.m
v24@?0@"MRPlayerPath"8@"NSString"16
routingContextID
DEFAULT_GENIUS_PLAYLIST_NAME
com.apple.MediaPlayer
com.apple.MediaPlayer.MPModelStoreBrowseRequestOperation.sectionsToNestedResponseAccessQueue
v32@?0@"MPModelStoreBrowseContentItem"8q16^B24
v24@?0@"MPModelStoreBrowseResponse"8@"NSError"16
com.apple.MediaPlayer.MPModelStoreBrowseRequestOperation.nestedRequestsOperationQueue
_MPMKT_transformedType
activities
artists
curators
music-movies
library-playlists
social-profiles
personal-social-profiles
uploaded-audios
uploaded-videos
record-labels
_composers
_lyrics
_storeAsset
_playbackPosition
attributes
MPMediaKitEntityTranslator.m
-[MPMediaKitEntityTranslator mapRelationshipKey:toModelClass:mediaKitType:]
v32@?0@"NSDictionary"8@"MPMediaKitEntityTranslatorContext"16@"MPMediaKitEntityPayloadTransformer"24
Can only call %s on generic object translators.
Use +createGenericObjectTranslator instead.
v32@?0@"NSDictionary"8@"MPMediaKitEntityTranslatorContext"16@"MPIdentifierSet<MPMutableIdentifierSet>"24
MPModelPropertyMovieTitle
MPModelPropertyMovieDownloadedDate
MPModelPropertyMovieKeepLocalManagedStatus
MPModelPropertyMovieKeepLocalEnableState
MPModelPropertyMovieLibraryAddEligible
MPModelPropertyMovieLastDevicePlaybackDate
MPModelPropertyMovieLibraryAddedDate
MPModelPropertyMovieLibraryAdded
MPModelPropertyMovieHasCloudSyncSource
MPModelPropertyMovieDuration
MPModelPropertyMovieEditorialArtwork
MPModelPropertyMovieArtwork
MPModelRelationshipMovieStoreAsset
MPModelRelationshipMoviePlaybackPosition
MPModelRelationshipMovieLocalFileAsset
MPModelPropertyMovieReleaseDate
MPModelRelationshipMovieClips
MPModelPropertyMovieInfoDictionary
MPModelPropertyMovieTagline
MPModelPropertyMovieExplicitRating
MPModelPropertyMovieDescriptionText
rentals
Apple Music movies
movies
v16@?0@"MPModelMovieKind"8
Movie:v%lu:o%lu
MPModelPropertyRadioStationName
radio station %@
MPModelPropertyRadioStationEndingAirDate
MPModelPropertyRadioStationStartingAirDate
MPModelPropertyRadioStationProviderID
MPModelPropertyRadioStationProviderBundleIdentifier
MPModelPropertyRadioStationProviderUniversalLink
MPModelPropertyRadioStationSubscriptionRequired
MPModelPropertyRadioStationProviderName
MPModelPropertyRadioStationAttributionLabel
MPModelPropertyRadioStationSubtype
MPModelPropertyRadioStationType
MPModelPropertyRadioStationAllowsItemLiking
MPModelPropertyRadioStationGlyph
MPModelPropertyRadioStationArtwork
MPModelPropertyRadioStationEvents
MPModelPropertyRadioStationHasExplicitContent
MPModelPropertyRadioStationShortEditorNotes
MPModelPropertyRadioStationEditorNotes
MPModelPropertyRadioStationLive
MPModelPropertyRadioStationBeats1
radio station
MPModelChildRadioStationEvents
SongSeeded
ArtistSeeded
Siri
Format
Editorial
GracenoteGenre
User
PlaylistSeeded
AlbumSeeded
Broadcast
MPModelPropertyKeyGroupTitle
group %@
MPModelPropertyTVShowCreatorArtwork
%@://%@/%@.%@?%@=%lli
com.apple.MediaPlayer.MPModelLibraryAddToPlaylistChangeRequestOperation.operationQueue
v16@?0@"MPModelPlaybackPosition"8
MusicShouldFakeTVEpisodes
MPModelPropertyPodcastTitle
podcast %@
MPModelPropertyPodcastArtwork
MPModelRelationshipPodcastAuthor
MPModelPropertyPodcastSupportsSubscription
MPModelPropertyPodcastShareURL
MPModelPropertyPodcastFeedURL
podcasts containing %@
v16@?0@"MPModelPodcastKind"8
Podcast:e%p
MPErrorDomain
v16@?0@"MPModelRecordLabel"8
@"MPArtworkCatalog"16@?0@"MPModelRecordLabel"8
maxHEICRequestPercentage's value must fall in range [0, 1.0]
MPStoreArtworkDataSource.m
buster
MPSectionIndex
MPRangeLength
MPRangeLocation
MPTitle
 title=%@, range=%@, sectionIndexTitleIndex=%lu
MPMediaQuerySection is a read-only object
bytes
failed to generate secure random bytes
upper bound provided is less than lowestInclusive
upper
highestInclusive
lowestInclusive
highest
lowest
source
MPArtworkResizeErrorDomain
Failed to resize nil image.
Failed to resize image with invalid scaled fitting size: {%f, %f}.
Input image has invalid scale: %f.
Input image has invalid size: {%f, %f}.
secondaryTextColorLight
secondaryTextColor
primaryTextColorLight
primaryTextColor
backgroundColorLight
backgroundColor
<%@: %p> (
  backgroundColor: %@ (%@)
  primaryTextColor: %@ (%@)
  secondaryTextColor: %@ (%@)
Dark
Light
%@ %@ %@ %@ %@
- %@
%@ %@ %@ %@ %@
UNKNOWN
 (%ld)
%@%@%@%@%@%@
debugDescription is counting on itemResult being an instance of %@
MPSectionedIdentifierList+Debugging.m
MPModelStoreBrowseContentItemPropertyItemType
MPModelStoreBrowseContentItemPropertyDetailedItemType
MPModelStoreBrowseContentItemPropertyArtistUploadedContentType
MPModelStoreBrowseContentItemRelationshipAlbum
MPModelStoreBrowseContentItemRelationshipArtist
MPModelStoreBrowseContentItemRelationshipCurator
MPModelStoreBrowseContentItemRelationshipMediaClip
MPModelStoreBrowseContentItemRelationshipMovie
MPModelStoreBrowseContentItemRelationshipPlaylist
MPModelStoreBrowseContentItemRelationshipRadioStation
MPModelStoreBrowseContentItemRelationshipSocialPerson
MPModelStoreBrowseContentItemRelationshipSong
MPModelStoreBrowseContentItemRelationshipTVEpisode
MPModelStoreBrowseContentItemRelationshipTVSeason
MPModelStoreBrowseContentItemRelationshipTVShow
MPModelStoreBrowseContentItemRelationshipTVShowCreator
MPModelStoreBrowseContentItemRelationshipRecordLabel
v16@?0@"MPModelStoreBrowseContentItem"8
@24@?0@"NSDictionary"8@"MPMediaKitEntityTranslatorContext"16
attributes.videoKind
attributes.playParams.reporting
attributes.editorialArtwork.subscriptionCover
attributes.editorialArtwork.bannerUber
attributes.artwork
attributes.description.standard
attributes.description.short
attributes.isVerified
attributes.isPrivate
v32@?0@"NSDictionary"8@"MPMediaKitEntityTranslatorContext"16@"NSMutableDictionary"24
videoKind
attributes.releaseDate
value
attributes.contentRatingsBySystem
durationInMilliseconds
attributes.offers
attributes.offers.0.durationInMillis
attributes.offers.0.durationInMilliseconds
attributes.previews
attributes.episodeNumber
attributes.editorialNotes.tagline
attributes.editorialNotes.standard
attributes.episodeCount
attributes.editorialArtwork.brandLogo
attributes.kind
attributes.editorialNotes.short
attributes.handle
attributes.editorialNotes.name
attributes.composerName
attributes.heroArtwork
attributes.endTime
attributes.startTime
attributes.title
attributes.requiresSubscription
attributes.airTime.end
attributes.airTime.start
Shoutcast
Episode
attributes.streamingRadioSubType
attributes.stationGlyph
attributes.stationProviderName
attributes.isLive
attributes.audioTraits
attributes.playParams.versionHash
attributes.url
personal-mix
attributes.isChart
attributes.playlistType
attributes.lastModifiedDate
meta.vacToken
attributes.artistName
relationships.artists.data.id.@firstObject
attributes.isMasteredForItunes
relationships.tracks
attributes.isPreorder
attributes.isCompilation
attributes.contentRating
clean
attributes.discCount
attributes.trackCount
attributes.hasTimedSyncedLyrics
attributes.hasLyrics
attributes.albumName
relationships.albums.data.id.@firstObject
attributes.movementNumber
attributes.movementCount
attributes.movementName
attributes.workName
attributes.copyright
attributes.showComposer
attributes.trackNumber
attributes.discNumber
attributes.durationInMilliseconds
attributes.durationInMillis
attributes.name
attributes.offers.kind
meta.formerIds
MPModelStoreBrowseRequestLoadAdditionalContentURL
v16@?0@"MPModelTVEpisode"8
v16@?0@"MPModelTVSeason"8
v16@?0@"MPModelTVShow"8
@"MPArtworkCatalog"16@?0@"MPModelTVEpisode"8
Given library has no library identifier
MPMediaLibrarySystemFilters.mm
com.apple.%@.global.serial.queue
properties
searchString
%@ %@
v44@?0q8q16i24q28^B36
B8@?0
com.apple.mediaplayer.systemdataprovider
GENIUS_FEATURE_NOT_AVAILABLE_SUBTITLE
GENIUS_FEATURE_NOT_AVAILABLE_TITLE
GENIUS_PICKER_NO_RESULTS_MESSAGE
GENIUS_PICKER_NO_RESULTS_TITLE
GENIUS_PLAYLIST_OFFLINE_SUBTITLE_WIFI
GENIUS_PLAYLIST_OFFLINE_SUBTITLE_WLAN
GENIUS_PLAYLIST_OFFLINE_SUBTITLE_CELLULAR
GENIUS_PLAYLIST_OFFLINE_TITLE
GENIUS_PLAYLIST_OFFLINE_SUBTITLE_ALL
GENIUS_PLAYLIST_OFFLINE_SUBTITLE_ALL_WLAN
 none
 single=%@
 case=%@
 right=%@
 left=%@
NSNumber *MPAVGetBatteryLevelFromAVODDS(MRAVOutputDeviceRef, NSDictionary *__strong, MPAVBatteryLevelType)
battery level value is not a number
MPAVBatteryLevel.m
NSString *MPAVGetRouteDescriptionKey(MPAVBatteryLevelType)
NSNumber *MPAVGetBatteryLevelFromRouteDescription(NSDictionary *__strong, MPAVBatteryLevelType)
unable to find route description key for battery level
BTDetails_BatteryLevelSingle
BTDetails_BatteryLevelCase
BTDetails_BatteryLevelRight
BTDetails_BatteryLevelLeft
v32@?0@8q16^B24
B16@?0@8
com.apple.MediaPlayer.MPStoreLibraryPersonalizationRequestOperation.operationQueue
MPPlaybackUserDefaultsPreferredResolutionsDidChangeNotification
MPPlaybackUserDefaultsMusicEQPresetDidChangeNotification
MPPlaybackUserDefaultsMusicRepeatTypeDidChangeNotification
MPPlaybackUserDefaultsMusicShuffleTypeDidChangeNotification
MPPlaybackUserDefaultsPrivateListeningEnabledDidChangeNotification
MPPlaybackUserDefaultsSoundCheckEnabledDidChangeNotification
v16@?0@"ICMutableUserIdentityProperties"8
MPCPlaybackPrivateListeningEnabled
MusicAllowsHighQualityStreamingOnCellular
MusicAllowsCellularData
ActivationDelay
PlaybackAuthorizationTokenHalfLifeDuration
AssetURLExpirationDuration
SpeakerRouteEnabled
ShowDebugUI
QHOMaximumSize
ProgressiveDownloadAssetRatio
IncludeContentItemDebugFields
ForceLibrarySupplemental
ForcedMusicResolution
ForceMusicResolution
DisableQHO
DisablePeriodicRestore
DisableMiniSINF
DisableAudioAnalysis
DisableAssetCaching
ForceMusicStreaming
MusicLowBandwidthResolution
BestQuality
PlaybackQuality
PlaybackQualityCellular
ShowLosslessAudio
com.apple.mobileipod-prefsChanged
PrefersSpatialDownloads
SpatialAudioPreference
MusicDownloadResolution
MusicHighBandwidthResolution
BufferedLosslessSwitch
MusicSoundCheckEnabledSetting
MusicShuffleSetting
MusicRepeatSetting
EQ_LATE_NIGHT
EQ_VOCAL_BOOSTER
EQ_TREBLE_REDUCER
EQ_TREBLE_BOOSTER
EQ_SPOKEN_WORD
EQ_SMALL_SPEAKERS
EQ_ROCK
EQ_RANDB
EQ_POP
EQ_PIANO
EQ_LOUNGE
EQ_LOUDNESS
EQ_LATIN
EQ_JAZZ
EQ_HIPHOP
EQ_FLAT
EQ_ELECTRONIC
EQ_DEEP
EQ_DANCE
EQ_CLASSICAL
EQ_BASS_REDUCER
EQ_BASS_BOOSTER
EQ_ACOUSTIC
Acoustic
BassBooster
BassReducer
Classical
Dance
Deep
Electronic
Flat
HipHop
Jazz
Latin
Loudness
Lounge
Piano
R & B
Rock
SmallSpeakers
SpokenWord
TrebleBooster
TrebleReducer
VocalBooster
LateNightMode
MusicEQPresetName
com.apple.MediaPlayer/MPPlaybackUserDefaults
com.apple.airplay.prefsChanged
BufferedSurroundSwitch
com.apple.airplay
com.apple.mediaplaybackcore
com.apple.videos-preferences
com.apple.song
com.apple.radio-station
com.apple.audiobook
com.apple.podcast
com.apple.audio-podcast
com.apple.video-podcast
com.apple.show
com.apple.music-video
public-audio
public-movie
public.audiovisual-content
music://show-now-playing
v16@?0@"<MPMusicPlayerControllerSystemServer>"8
countryCode
MPCloudServiceStatusControllerCloudLibraryEnabledDidChangeNotification
MPCloudServiceStatusControllerFairPlaySubscriptionStatusDidChangeNotification
MPCloudServiceStatusControllerMatchStatusDidChangeNotification
MPCloudServiceStatusControllerPurchaseHistoryEnabledDidChangeNotification
MPCloudServiceStatusControllerShouldPlaybackRequireSubscriptionLeaseDidChangeNotification
MPCloudServiceStatusControllerSubscriptionAvailabilityDidChangeNotification
MPCloudServiceStatusControllerSubscriptionLeaseDidBeginNotification
MPCloudServiceStatusControllerSubscriptionLeaseDidEndeNotification
MPCloudServiceStatusControllerSubscriptionStatusDidChangeNotification
MPCloudServiceStatusControllerUserInfoKeyLeaseEndReasonType
_MPCloudServiceStatusControllerSubscriptionAvailability
v28@?0@"NSError"8B16B20B24
_MPCloudServiceStatusControllerMatchStatus
v16@?0@"MPCloudServiceStatusController"8
 [%@]
com.apple.MediaPlayer.MPCloudServiceStatusController.accessQueue
com.apple.MediaPlayer.MPCloudServiceStatusController.calloutQueue
com.apple.MediaPlayer.MPCloudServiceStatusController.cloudLibraryStatusAccessQueue
v24@?0@"ICMusicSubscriptionStatusMonitor"8@"ICMusicSubscriptionStatus"16
com.apple.mediaplayer.MPCloudServiceStatusController.global.serial.queue
includeNonLibraryEntities
staticEntityType
Item
Collection
staticEntityIdentifiers
entityOrder
Physical
Sorted
filteringDisabled
groupingType
Title
Album
Artist
AlbumArtist
Composer
PodcastTitle
SeriesName
SeasonName
AudioBookTitle
AlbumPersistentID
AlbumByArtist
(unknown: %i)
filterPredicates
size
preview
Exclusive access not for this owner %@ != %@
MPExclusiveAccessToken.m
Exclusive access failed
v16@?0@"MPModelStoreAsset"8
%@%@%@
:%02d
%02d
com.apple.MediaPlayer.MPModelVerifyLocalFileAssetIntegrityRequest.operationQueue
filter predicates must be an NSSet
 with sort direction=%@
 ordered by %@
<%@: %p> %@, %@
actionType
followRequests
followRequest
approveAll
approve
cancel
decline
v32@?0@"NSDictionary"8Q16^B24
we should have a complete set of metadata here.
MPStoreItemImportTrackData.m
SiriSessionIdentifier
NetworkInterfaceStart
NetworkInterfaceChangeCount
StartupState
EndReason
PlaybackEndError
TracklistLoadError
TracklistLoadRequired
SecureKeyError
SecureKeyMaxLoadDuration
SecureKeyLoadCount
SecureKeyBlockingLoadCount
AssetLoadError
AssetLoadDuration
MPModelForYouRecommendationItemPropertyItemType
MPModelForYouRecommendationItemPropertyURL
MPModelForYouRecommendationItemPropertyReason
MPModelForYouRecommendationItemRelationshipAlbum
MPModelForYouRecommendationItemRelationshipPlaylist
MPModelForYouRecommendationItemRelationshipRadioStation
MPModelForYouRecommendationItemPropertyBackedByStoreItemMetadata
MPModelForYouRecommendationItemPropertyParentGroup
MPModelForYouRecommendationItemPropertySubgroupIndex
MPModelForYouRecommendationItemRelationshipSubgroup
com.apple.amp.mediaplayer
Artwork
Assistant
Assistant_Oversize
CloudController
Download
Download_Oversize
HomeSharing
InternalSettings
InternalSettings_Oversize
Library
Library_Oversize
Middleware
Middleware_Oversize
Playback
Playback_Oversize
RemoteControl
RemoteControl_Oversize
Routing
ServerObjects
ServerObjects_Oversize
SDKLibrary
SDKLibrary_Oversize
SDKPlayback
Volume
PlaybackSession
app.%@.unknown
QueueSource
QueueUniqueID
MediaAVType
AUDIO
VIDEO
AssetType
FILE
UNDETERMINED
MPRTCReportingControllerErrorDomain
com.apple.MediaPlayer.MPModelLibraryPlaylistEditChangeRequestOperation.accessQueue
MPModelLibraryPlaylistEditChangeRequestOperationErrorDomain
v24@?0Q8@"NSError"16
v224@?0{PropertyCache=^^?{unordered_map<mlcore::ModelProperty<mediaplatform::Data> *, mediaplatform::Data, std::hash<mlcore::ModelProperty<mediaplatform::Data> *>, std::equal_to<mlcore::ModelProperty<mediaplatform::Data> *>, std::allocator<std::pair<mlcore::ModelProperty<mediaplatform::Data> *const, mediaplatform::Data>>>={__hash_table<std::__hash_value_type<mlcore::ModelProperty<mediaplatform::Data> *, mediaplatform::Data>, std::__unordered_map_hasher<mlcore::ModelProperty<mediaplatform::Data> *, std::__hash_value_type<mlcore::ModelProperty<mediaplatform::Data> *, mediaplatform::Data>, std::hash<mlcore::ModelProperty<mediaplatform::Data> *>, std::equal_to<mlcore::ModelProperty<mediaplatform::Data> *>, true>, std::__unordered_map_equal<mlcore::ModelProperty<mediaplatform::Data> *, std::__hash_value_type<mlcore::ModelProperty<mediaplatform::Data> *, mediaplatform::Data>, std::equal_to<mlcore::ModelProperty<mediaplatform::Data> *>, std::hash<mlcore::ModelProperty<mediaplatform::Data> *>, true>, std::allocator<std::__hash_value_type<mlcore::ModelProperty<mediaplatform::Data> *, mediaplatform::Data>>>={unique_ptr<std::__hash_node_base<std::__hash_node<std::__hash_value_type<mlcore::ModelProperty<mediaplatform::Data> *, mediaplatform::Data>, void *> *> *[], std::__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<mlcore::ModelProperty<mediaplatform::Data> *, mediaplatform::Data>, void *> *> *>>>={__compressed_pair<std::__hash_node_base<std::__hash_node<std::__hash_value_type<mlcore::ModelProperty<mediaplatform::Data> *, mediaplatform::Data>, void *> *> **, std::__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<mlcore::ModelProperty<mediaplatform::Data> *, mediaplatform::Data>, void *> *> *>>>=^^v{__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<mlcore::ModelProperty<mediaplatform::Data> *, mediaplatform::Data>, void *> *> *>>={__compressed_pair<unsigned long, std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<mlcore::ModelProperty<mediaplatform::Data> *, mediaplatform::Data>, void *> *> *>>=Q}}}}{__compressed_pair<std::__hash_node_base<std::__hash_node<std::__hash_value_type<mlcore::ModelProperty<mediaplatform::Data> *, mediaplatform::Data>, void *> *>, std::allocator<std::__hash_node<std::__hash_value_type<mlcore::ModelProperty<mediaplatform::Data> *, mediaplatform::Data>, void *>>>={__hash_node_base<std::__hash_node<std::__hash_value_type<mlcore::ModelProperty<mediaplatform::Data> *, mediaplatform::Data>, void *> *>=^v}}{__compressed_pair<unsigned long, std::__unordered_map_hasher<mlcore::ModelProperty<mediaplatform::Data> *, std::__hash_value_type<mlcore::ModelProperty<mediaplatform::Data> *, mediaplatform::Data>, std::hash<mlcore::ModelProperty<mediaplatform::Data> *>, std::equal_to<mlcore::ModelProperty<mediaplatform::Data> *>, true>>=Q}{__compressed_pair<float, std::__unordered_map_equal<mlcore::ModelProperty<mediaplatform::Data> *, std::__hash_value_type<mlcore::ModelProperty<mediaplatform::Data> *, mediaplatform::Data>, std::equal_to<mlcore::ModelProperty<mediaplatform::Data> *>, std::hash<mlcore::ModelProperty<mediaplatform::Data> *>, true>>=f}}}{unordered_map<mlcore::ModelProperty<std::string> *, std::string, std::hash<mlcore::ModelProperty<std::string> *>, std::equal_to<mlcore::ModelProperty<std::string> *>, std::allocator<std::pair<mlcore::ModelProperty<std::string> *const, std::string>>>={__hash_table<std::__hash_value_type<mlcore::ModelProperty<std::string> *, std::string>, std::__unordered_map_hasher<mlcore::ModelProperty<std::string> *, std::__hash_value_type<mlcore::ModelProperty<std::string> *, std::string>, std::hash<mlcore::ModelProperty<std::string> *>, std::equal_to<mlcore::ModelProperty<std::string> *>, true>, std::__unordered_map_equal<mlcore::ModelProperty<std::string> *, std::__hash_value_type<mlcore::ModelProperty<std::string> *, std::string>, std::equal_to<mlcore::ModelProperty<std::string> *>, std::hash<mlcore::ModelProperty<std::string> *>, true>, std::allocator<std::__hash_value_type<mlcore::ModelProperty<std::string> *, std::string>>>={unique_ptr<std::__hash_node_base<std::__hash_node<std::__hash_value_type<mlcore::ModelProperty<std::string> *, std::string>, void *> *> *[], std::__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<mlcore::ModelProperty<std::string> *, std::string>, void *> *> *>>>={__compressed_pair<std::__hash_node_base<std::__hash_node<std::__hash_value_type<mlcore::ModelProperty<std::string> *, std::string>, void *> *> **, std::__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<mlcore::ModelProperty<std::string> *, std::string>, void *> *> *>>>=^^v{__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<mlcore::ModelProperty<std::string> *, std::string>, void *> *> *>>={__compressed_pair<unsigned long, std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<mlcore::ModelProperty<std::string> *, std::string>, void *> *> *>>=Q}}}}{__compressed_pair<std::__hash_node_base<std::__hash_node<std::__hash_value_type<mlcore::ModelProperty<std::string> *, std::string>, void *> *>, std::allocator<std::__hash_node<std::__hash_value_type<mlcore::ModelProperty<std::string> *, std::string>, void *>>>={__hash_node_base<std::__hash_node<std::__hash_value_type<mlcore::ModelProperty<std::string> *, std::string>, void *> *>=^v}}{__compressed_pair<unsigned long, std::__unordered_map_hasher<mlcore::ModelProperty<std::string> *, std::__hash_value_type<mlcore::ModelProperty<std::string> *, std::string>, std::hash<mlcore::ModelProperty<std::string> *>, std::equal_to<mlcore::ModelProperty<std::string> *>, true>>=Q}{__compressed_pair<float, std::__unordered_map_equal<mlcore::ModelProperty<std::string> *, std::__hash_value_type<mlcore::ModelProperty<std::string> *, std::string>, std::equal_to<mlcore::ModelProperty<std::string> *>, std::hash<mlcore::ModelProperty<std::string> *>, true>>=f}}}{unordered_map<mlcore::ModelProperty<double> *, double, std::hash<mlcore::ModelProperty<double> *>, std::equal_to<mlcore::ModelProperty<double> *>, std::allocator<std::pair<mlcore::ModelProperty<double> *const, double>>>={__hash_table<std::__hash_value_type<mlcore::ModelProperty<double> *, double>, std::__unordered_map_hasher<mlcore::ModelProperty<double> *, std::__hash_value_type<mlcore::ModelProperty<double> *, double>, std::hash<mlcore::ModelProperty<double> *>, std::equal_to<mlcore::ModelProperty<double> *>, true>, std::__unordered_map_equal<mlcore::ModelProperty<double> *, std::__hash_value_type<mlcore::ModelProperty<double> *, double>, std::equal_to<mlcore::ModelProperty<double> *>, std::hash<mlcore::ModelProperty<double> *>, true>, std::allocator<std::__hash_value_type<mlcore::ModelProperty<double> *, double>>>={unique_ptr<std::__hash_node_base<std::__hash_node<std::__hash_value_type<mlcore::ModelProperty<double> *, double>, void *> *> *[], std::__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<mlcore::ModelProperty<double> *, double>, void *> *> *>>>={__compressed_pair<std::__hash_node_base<std::__hash_node<std::__hash_value_type<mlcore::ModelProperty<double> *, double>, void *> *> **, std::__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<mlcore::ModelProperty<double> *, double>, void *> *> *>>>=^^v{__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<mlcore::ModelProperty<double> *, double>, void *> *> *>>={__compressed_pair<unsigned long, std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<mlcore::ModelProperty<double> *, double>, void *> *> *>>=Q}}}}{__compressed_pair<std::__hash_node_base<std::__hash_node<std::__hash_value_type<mlcore::ModelProperty<double> *, double>, void *> *>, std::allocator<std::__hash_node<std::__hash_value_type<mlcore::ModelProperty<double> *, double>, void *>>>={__hash_node_base<std::__hash_node<std::__hash_value_type<mlcore::ModelProperty<double> *, double>, void *> *>=^v}}{__compressed_pair<unsigned long, std::__unordered_map_hasher<mlcore::ModelProperty<double> *, std::__hash_value_type<mlcore::ModelProperty<double> *, double>, std::hash<mlcore::ModelProperty<double> *>, std::equal_to<mlcore::ModelProperty<double> *>, true>>=Q}{__compressed_pair<float, std::__unordered_map_equal<mlcore::ModelProperty<double> *, std::__hash_value_type<mlcore::ModelProperty<double> *, double>, std::equal_to<mlcore::ModelProperty<double> *>, std::hash<mlcore::ModelProperty<double> *>, true>>=f}}}{unordered_map<mlcore::ModelProperty<int> *, int, std::hash<mlcore::ModelProperty<int> *>, std::equal_to<mlcore::ModelProperty<int> *>, std::allocator<std::pair<mlcore::ModelProperty<int> *const, int>>>={__hash_table<std::__hash_value_type<mlcore::ModelProperty<int> *, int>, std::__unordered_map_hasher<mlcore::ModelProperty<int> *, std::__hash_value_type<mlcore::ModelProperty<int> *, int>, std::hash<mlcore::ModelProperty<int> *>, std::equal_to<mlcore::ModelProperty<int> *>, true>, std::__unordered_map_equal<mlcore::ModelProperty<int> *, std::__hash_value_type<mlcore::ModelProperty<int> *, int>, std::equal_to<mlcore::ModelProperty<int> *>, std::hash<mlcore::ModelProperty<int> *>, true>, std::allocator<std::__hash_value_type<mlcore::ModelProperty<int> *, int>>>={unique_ptr<std::__hash_node_base<std::__hash_node<std::__hash_value_type<mlcore::ModelProperty<int> *, int>, void *> *> *[], std::__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<mlcore::ModelProperty<int> *, int>, void *> *> *>>>={__compressed_pair<std::__hash_node_base<std::__hash_node<std::__hash_value_type<mlcore::ModelProperty<int> *, int>, void *> *> **, std::__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<mlcore::ModelProperty<int> *, int>, void *> *> *>>>=^^v{__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<mlcore::ModelProperty<int> *, int>, void *> *> *>>={__compressed_pair<unsigned long, std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<mlcore::ModelProperty<int> *, int>, void *> *> *>>=Q}}}}{__compressed_pair<std::__hash_node_base<std::__hash_node<std::__hash_value_type<mlcore::ModelProperty<int> *, int>, void *> *>, std::allocator<std::__hash_node<std::__hash_value_type<mlcore::ModelProperty<int> *, int>, void *>>>={__hash_node_base<std::__hash_node<std::__hash_value_type<mlcore::ModelProperty<int> *, int>, void *> *>=^v}}{__compressed_pair<unsigned long, std::__unordered_map_hasher<mlcore::ModelProperty<int> *, std::__hash_value_type<mlcore::ModelProperty<int> *, int>, std::hash<mlcore::ModelProperty<int> *>, std::equal_to<mlcore::ModelProperty<int> *>, true>>=Q}{__compressed_pair<float, std::__unordered_map_equal<mlcore::ModelProperty<int> *, std::__hash_value_type<mlcore::ModelProperty<int> *, int>, std::equal_to<mlcore::ModelProperty<int> *>, std::hash<mlcore::ModelProperty<int> *>, true>>=f}}}{unordered_map<mlcore::ModelProperty<long long> *, long long, std::hash<mlcore::ModelProperty<long long> *>, std::equal_to<mlcore::ModelProperty<long long> *>, std::allocator<std::pair<mlcore::ModelProperty<long long> *const, long long>>>={__hash_table<std::__hash_value_type<mlcore::ModelProperty<long long> *, long long>, std::__unordered_map_hasher<mlcore::ModelProperty<long long> *, std::__hash_value_type<mlcore::ModelProperty<long long> *, long long>, std::hash<mlcore::ModelProperty<long long> *>, std::equal_to<mlcore::ModelProperty<long long> *>, true>, std::__unordered_map_equal<mlcore::ModelProperty<long long> *, std::__hash_value_type<mlcore::ModelProperty<long long> *, long long>, std::equal_to<mlcore::ModelProperty<long long> *>, std::hash<mlcore::ModelProperty<long long> *>, true>, std::allocator<std::__hash_value_type<mlcore::ModelProperty<long long> *, long long>>>={unique_ptr<std::__hash_node_base<std::__hash_node<std::__hash_value_type<mlcore::ModelProperty<long long> *, long long>, void *> *> *[], std::__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<mlcore::ModelProperty<long long> *, long long>, void *> *> *>>>={__compressed_pair<std::__hash_node_base<std::__hash_node<std::__hash_value_type<mlcore::ModelProperty<long long> *, long long>, void *> *> **, std::__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<mlcore::ModelProperty<long long> *, long long>, void *> *> *>>>=^^v{__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<mlcore::ModelProperty<long long> *, long long>, void *> *> *>>={__compressed_pair<unsigned long, std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<mlcore::ModelProperty<long long> *, long long>, void *> *> *>>=Q}}}}{__compressed_pair<std::__hash_node_base<std::__hash_node<std::__hash_value_type<mlcore::ModelProperty<long long> *, long long>, void *> *>, std::allocator<std::__hash_node<std::__hash_value_type<mlcore::ModelProperty<long long> *, long long>, void *>>>={__hash_node_base<std::__hash_node<std::__hash_value_type<mlcore::ModelProperty<long long> *, long long>, void *> *>=^v}}{__compressed_pair<unsigned long, std::__unordered_map_hasher<mlcore::ModelProperty<long long> *, std::__hash_value_type<mlcore::ModelProperty<long long> *, long long>, std::hash<mlcore::ModelProperty<long long> *>, std::equal_to<mlcore::ModelProperty<long long> *>, true>>=Q}{__compressed_pair<float, std::__unordered_map_equal<mlcore::ModelProperty<long long> *, std::__hash_value_type<mlcore::ModelProperty<long long> *, long long>, std::equal_to<mlcore::ModelProperty<long long> *>, std::hash<mlcore::ModelProperty<long long> *>, true>>=f}}}^^?}8
MPModelLibraryTransientStateControllerDidChangeNotification
v32@?0@"NSIndexPath"8@"MPIdentifierSet"16^B24
v32@?0@"_MPModelLibraryRegisteredTransientState"8Q16^B24
com.apple.MediaPlayer.MPModelLibraryTransientStateController.accessQueue
com.apple.MediaPlayer.MPModelLibraryTransientStateController.notificationQueue
com.apple.MediaPlayer.MPModelLibraryTransientStateController.operationQueue
_MPNowPlayingContentItemsDidChangeNotification
identifier
queuedNowPlayingInfo
nowPlayingInfo
nowPlayingContentItem
mutatedPlaybackQueueRequests
mutatedContentItems
cachedContentItems
requestedRange
loadedRange
contentItemIDs
_playerPath
v32@?0^v8^v16@?<v@?^{__CFError=}>24
v24@?0@"MPNowPlayingInfoLyricsItem"8@"NSError"16
v48@?0@"MPNowPlayingContentItem"8@"NSData"16{CGSize=dd}24@"NSError"40
^v24@?0q8^v16
^v16@?0^{__CFString=}8
^v16@?0^v8
v24@?0^v8@?<v@?^v^{__CFError=}>16
v24@?0@"MPNowPlayingInfoTransportableSessionResponse"8@"NSError"16
v32@?0^v8^{__CFError=}16@?<v@?^{__CFError=}>24
v24@?0^v8@?<v@?^{__CFError=}>16
v16@?0^^v8
v32@?0@"NSString"8@"MPNowPlayingContentItem"16^B24
v24@?0@"NSArray"8q16
_MPNowPlayingInfoCenterPlaybackQueueDidChangeNotification
IPQI: Mismatch in contentItemIdentifiers (%ld) and loadedContentItemsRange (%ld)
MPNowPlayingInfoCenter.m
v24@?0@"NSData"8@"NSError"16
transportablePlaybackSession
<missing queue identifier>
MPNowPlayingPlaybackQueueDataSource getTransportablePlaybackSessionRepresentationWithCompletion completion was released without being called.
CIIR: Mismatch in contentItemIdentifiers=%ld, loadedContentItemsRange=%ld, previousContentItemIDCount=%ld, dataSourceContentItemIDs=%ld, replacementRange: [(_loaded) %@ : (loaded) %@] => (replacement) %@
@"MPArtworkCatalog"8@?0
-init is not supported, use +defaultCenter
com.apple.MediaPlayer.MPNowPlayingInfoCenter/accessQueue
com.apple.MediaPlayer.MPNowPlayingInfoCenter/calloutQueue
com.apple.MediaPlayer.MPNowPlayingInfoCenter/utilityQueue
MPNowPlayingInfoCenter
Cannot have two MPNowPlayingInfoCenters for the same playerPath: %@
com.apple.MediaPlayer.MPNowPlayingInfoCenter/serviceQueue
_MPNowPlayingCollectionInfoKeyTitle
_MPNowPlayingCollectionInfoKeyIdentifiers
_MPNowPlayingCollectionInfoKeyCollectionType
_MPNowPlayingCollectionInfoCollectionTypePlaylist
_MPNowPlayingCollectionInfoCollectionTypeAlbum
_MPNowPlayingCollectionInfoCollectionTypeRadio
v24@?0^{objc_property=}8^B16
__%@_KEY
v32@?0^{objc_property=}8:16:24
v@:@
v@:B
v@:c
v@:i
v@:s
v@:l
v@:q
v@:C
v@:I
v@:S
v@:L
v@:Q
v@:f
v@:d
_obj
identifiers
Attempt to set enforced property after initialization: %@
MPModelObject.m
Attempt to retrieve enforced uninitialized property: %@
MPModelObject mergeWithObject: called with a different object class: %@ %@
oids
original
classesForSecureCoding cannot contain NSObject
<%@: %p identifiers=%@ properties=%@>
modelClass
<%@: %@>
Must have produced a model kind!
v16@?0@"MPModelKind"8
[MPModelKind class]
_MPNowPlayingInfoPropertyArtworkData
_MPNowPlayingInfoPropertyArtworkMIMEType
MPNowPlayingInfoPropertyChapterCount
MPNowPlayingInfoPropertyAvailableLanguageOptions
MPNowPlayingInfoPropertyCurrentLanguageOption
MPNowPlayingInfoCollectionIdentifier
_MPNowPlayingInfoPropertyCollectionInfo
MPNowPlayingInfoPropertyChapterNumber
MPNowPlayingInfoPropertyElapsedPlaybackTime
_MPNowPlayingInfoPropertyIsSharable
_MPNowPlayingInfoPropertyIsAdvertisement
MPNowPlayingInfoPropertyIsLiveStream
_MPNowPlayingInfoPropertyIsBanned
_MPNowPlayingInfoPropertyIsLiked
_MPNowPlayingInfoPropertyIsMusicApp
_MPNowPlayingInfoPropertyIsVideosApp
MPNowPlayingInfoPropertyPlaybackQueueCount
MPNowPlayingInfoPropertyPlaybackQueueIndex
MPNowPlayingInfoPropertyPlaybackRate
MPNowPlayingInfoPropertyDefaultPlaybackRate
_MPNowPlayingInfoPropertyDefaultPlaybackRate
_MPNowPlayingInfoPropertyAppMetrics
_MPNowPlayingInfoPropertyIsSteerable
_MPNowPlayingInfoPropertyProhibitsSkip
_MPNowPlayingInfoPropertyRadioStationIdentifier
_MPNowPlayingInfoPropertyRadioStationHash
_MPNowPlayingInfoPropertyRadioStationName
_MPNowPlayingInfoPropertyRadioStationStringIdentifier
_MPNowPlayingInfoPropertyiTunesStoreIdentifier
_MPNowPlayingInfoPropertyiTunesStoreSubscriptionAdamIdentifier
_MPNowPlayingInfoPropertyArtistiTunesStoreAdamIdentifier
_MPNowPlayingInfoPropertyAlbumiTunesStoreAdamIdentifier
_MPNowPlayingInfoPropertyPlaylistGlobalIdentifier
_MPNowPlayingInfoPropertyRepeatMode
_MPNowPlayingInfoPropertyShuffleMode
_MPNowPlayingInfoPropertyPurchaseInfoData
_MPNowPlayingInfoPropertyIsLoading
_MPNowPlayingInfoPropertyExternalContentIdentifier
MPNowPlayingInfoPropertyExternalContentIdentifier
MPNowPlayingInfoPropertyExternalUserProfileIdentifier
MPNowPlayingInfoPropertyServiceIdentifier
MPNowPlayingInfoPropertyPlaybackProgress
MPNowPlayingInfoPropertyMediaType
MPNowPlayingInfoPropertyAssetURL
MPNowPlayingInfoPropertyCurrentPlaybackDate
_MPNowPlayingInfoPropertyArtworkIdentifier
_MPNowPlayingInfoPropertySupportsIsBanned
_MPNowPlayingInfoPropertySupportsIsLiked
_MPNowPlayingInfoPropertySupportsFastForward15Seconds
_MPNowPlayingInfoPropertySupportsRewind15Seconds
_MPNowPlayingInfoPropertySupportsWishlisting
image/jpeg
<%@: %p title="%@" type=%@ event=%@>
Default
Cancel
Destructive
Unknown/%ld
@"MPRemoteCommandHandlerDialogAction"16@?0@"MRSendCommandHandlerDialogAction"8
<%@: %p title="%@" message="%@" actions=%@>
<%@ %p subscriptionStatusObject: %@>
HomeSharingML3DataProviderCredentialsDidChangeNotification
Tokens
daap.songuserskipcount
daap.songuserplaycount
daap.songbookmark
daap.songuserrating
com.apple.itunes.liked-state
Library.itdb
com.apple.mobileipod.containerfill
com.apple.MediaPlayer.MPHomeSharingML3DataProvider/serialQueue
Unable to determine groupID
libraryDataProvider
SharingDisabled
@"MPArtworkCatalog"16@?0@"MPModelCurator"8
elapsed
state
live
count
artworkID
itemID
removed
inserted
Client-Daap-Request-Id
Client-Daap-Validation
text/plain
&hs-mobile-device-client=1
&hsgid=%@
HomeSharingURLProtocolErrorDomain
&daap-no-disconnect=1
http
home-sharing
v32@?0@"NSString"8@"NSString"16q24
subscription
store
purchase
sync
cloud
artistHero
chapter
collection
 retrievalTime=%f
<%@:%p libraryID=%llu entityType=%ld artworkType=%ld
com.apple.MPMediaLibraryArtworkRequest.accessQueue
MPMediaLibraryArtworkErrorDomain
Unknown artwork source type for artwork info request.
Unknown artwork source type.
Unknown-PersonID
PayloadData
PersonID
@personID
@identifier
SELECT source, payload FROM objects WHERE identifier = @identifier AND person_id = @personID LIMIT 1
CREATE TABLE IF NOT EXISTS playback_authorization_token (identifier TEXT NOT NULL, person_id TEXT NOT NULL, token TEXT NOT NULL, source INTEGER NOT NULL DEFAULT 0, type TEXT NOT NULL, half_life_expiration_date INTEGER NOT NULL DEFAULT 0, PRIMARY KEY (identifier)) WITHOUT ROWID
CREATE TABLE IF NOT EXISTS object_relationships (parent_identifier TEXT NOT NULL, child_identifier TEXT NOT_NULL, person_id TEXT NOT NULL, suborder INTEGER NOT NULL DEFAULT 0, child_key TEXT NOT NULL, PRIMARY KEY (parent_identifier, child_identifier, person_id), UNIQUE (parent_identifier, child_identifier, person_id, child_key)) WITHOUT ROWID
CREATE TABLE IF NOT EXISTS assets (identifier TEXT NOT NULL, hashed_person_id TEXT NOT NULL, flavor TEXT NOT NULL, url TEXT NOT NULL, url_expiration_date INTEGER NOT NULL DEFAULT 0, mini_sinf BLOB, sinfs BLOB, PRIMARY KEY (identifier, hashed_person_id, flavor)) WITHOUT ROWID
CREATE TABLE IF NOT EXISTS objects (identifier TEXT NOT NULL, person_id TEXT NOT NULL, source INTEGER NOT NULL DEFAULT 0, expiration_date INTEGER NOT NULL DEFAULT 0, type TEXT NOT NULL, payload TEXT, PRIMARY KEY (identifier, person_id)) WITHOUT ROWID
void _MSVHasherAppendBytes(MSVHasher * _Nonnull, const void * _Nonnull, size_t)
NSString * _Nonnull _MSVHashGetDigest(MSVHash)
@now
@hashedPersonID
com.apple.MediaPlayer.MPServerObjectDatabase/accessQueue
SOD: Unable to create database schema on disk or in-memory.
SOD: Unable to create server objects database in-memory
MPServerObjectDatabase.m
@source
SELECT payload FROM objects WHERE identifier = @identifier AND person_id = @personID AND source = @source LIMIT 1
UPDATE assets SET url = @url, url_expiration_date = @urlExpirationDate WHERE identifier = @identifier AND hashed_person_id = @hashedPersonID AND flavor = @flavor
UPDATE assets SET sinfs = @sinfs WHERE identifier = @identifier AND hashed_person_id = @hashedPersonID AND flavor = @flavor
UPDATE assets SET mini_sinf = @miniSINF WHERE identifier = @identifier AND hashed_person_id = @hashedPersonID AND flavor = @flavor
DELETE FROM object_relationships WHERE parent_identifier = @parentIdentifier AND person_id = @personID AND child_key = @childKey
INSERT OR REPLACE INTO object_relationships (parent_identifier, child_identifier, person_id, child_key, suborder) VALUES (@parentIdentifier, @childIdentifier, @personID, @childKey, @suborder)
INSERT OR REPLACE INTO playback_authorization_token (identifier, person_id, token, type, source, half_life_expiration_date) VALUES (@identifier, @personID, @token, @type, @source, @halfLifeExpirationDate)
INSERT OR REPLACE INTO assets (identifier, hashed_person_id, flavor, url, url_expiration_date) VALUES (@identifier, @hashedPersonID, @flavor, @url, @urlExpirationDate)
INSERT OR REPLACE INTO objects (identifier, person_id, source, expiration_date, type, payload) VALUES (@identifier, @personID, @source, @expirationDate, @type, @payload)
SELECT payload FROM objects WHERE source = @source AND identifier = @identifier AND person_id = @personID LIMIT 1
MPServerObjectDatabaseImport-
@flavor
lightweightPlus
SELECT identifier, hashed_person_id, flavor, url, mini_sinf, sinfs FROM assets WHERE identifier = @identifier AND hashed_person_id = @hashedPersonID AND flavor = @flavor
@sinfs
@miniSINF
@childKey
@parentIdentifier
Cannot remove relationships without a personID
childKey
@suborder
@childIdentifier
Cannot relate without a personID
Cannot import sinf with invalid type
Cannot import an asset without sinfData
Cannot import an asset without identifier
Cannot import an asset without personID
@urlExpirationDate
@url
Cannot import an asset without a personID
@payload
@expirationDate
@type
_MPSOD_mergeCount
Cannot import an object without a personID
SELECT identifier, hashed_person_id, flavor, url, mini_sinf, sinfs FROM assets WHERE mini_sinf IS NULL AND sinfs is NULL AND hashed_person_id = @hashedPersonID AND cast(identifier AS INT) != 0
SELECT identifier, hashed_person_id, flavor, url, mini_sinf, sinfs FROM assets WHERE identifier = @identifier AND hashed_person_id = @hashedPersonID AND LENGTH(mini_sinf) > 1 AND url_expiration_date > @now
SELECT identifier, hashed_person_id, flavor, url, mini_sinf, sinfs FROM assets WHERE identifier = @identifier AND hashed_person_id = @hashedPersonID AND url_expiration_date > @now
SELECT child_identifier FROM object_relationships WHERE parent_identifier = @parentIdentifier AND person_id = @personID AND child_key = @childKey ORDER BY suborder
PropertySet does not contain mapping for %@
Cannot have a source without a payload.
@"MSVSQLDatabase"8@?0
Database
ServerObjectDatabase.sqlpkg
_MP_CLEAR_SOD
com.apple.MediaPlayer/ServerObjectDatabases/%@-ServerObjectDatabase.sqlpkg
<%@: %p hashedPersonID=%@ identifier=%@ flavor=%@ miniSinf=%lld bytes sinf2=%lld bytes url=%@
Media/HomeSharingRentals.plist
databaseID
SSRentalCheckinRequest
attempted to remove rental with no item ID
MPHomeSharingRentalTracker.m
attempted to add rental with item ID: %llu, databaseID: %@
com.apple.mobileipod.home-sharing-rental-tracker
recommendations
emphasize
isGroupRecommendation
href
reason
stringForDisplay
display
RECENTLY_PLAYED_VIEW_TITLE
showAllTVShows
family
SSAuthorizationRequest
keybag
MPRemoteCommandCenterCommandsDidChangeNotification
MPRemoteCommandCenterCommandHandlersRegisteredNotification
v28@?0I8@"NSDictionary"12@?<v@?@"NSArray">20
@16@?0@"MPRemoteCommandStatus"8
@"NSArray"16@?0@"MPRemoteCommand"8
pendingEventsCount
canBeNowPlayingApplication
activeCommands
command
B32@?0@"MPRemoteCommand"8Q16^B24
Attempted to create remote command object of unknown class %@
MPRemoteCommandCenter.m
v16@?0@?<v@?>8
com.apple.MediaPlayer.MPRemoteCommandCenter
MPRemoteCommandCenter:
Cannot have two MPRemoteCommandCenters for the same playerPath: %@
LaunchCommandBuilder
v16@?0@"HSResponse"8
SSRentalCheckoutRequest
MPModelPropertyHomeSharingAssetAvailable
MPModelPropertyHomeSharingAssetProtectedContentSupportStorageFileURL
MPModelPropertyHomeSharingAssetURL
MPStoreItemLibraryImportMetadataKeyAlbumLikedState
MPStoreItemLibraryImportMetadataKeyTrackLikedState
television
MPAVTelevisionRoute.m
v32@?0{shared_ptr<mlcore::QueryResult>=^{QueryResult}^{__shared_weak_count}}8@"NSError"24
MPStoreLibraryMappingRequestOperation.mm
language-tag
LOADING_AUDIO_LABEL
generic %@
MPModelObject mergeWithObject: called with a different generic relationship type: %@ %@
MPModelGenericObject.m
MPModelRelationshipGenericGroup
MPModelRelationshipGenericRecordLabel
MPModelRelationshipGenericSocialPerson
MPModelRelationshipGenericCurator
MPModelRelationshipGenericGenre
MPModelRelationshipGenericComposer
MPModelRelationshipGenericRadioStationEvent
MPModelRelationshipGenericRadioStation
MPModelRelationshipGenericPodcastEpisode
MPModelRelationshipGenericPodcast
MPModelRelationshipGenericMediaClip
MPModelRelationshipGenericMovie
MPModelRelationshipGenericTVShow
MPModelRelationshipGenericTVSeason
MPModelRelationshipGenericTVEpisode
MPModelRelationshipGenericPlaylistEntry
MPModelRelationshipGenericPlaylist
MPModelRelationshipGenericArtist
MPModelRelationshipGenericAlbum
MPModelRelationshipGenericSong
Unsupported generic object type: %ld
Cannot provide relationship key for unknown generic object type.
relationshipKinds
any generic (%@)
; or 
humanDescription
v16@?0@"MPModelGenericObjectKind"8
%@-%p
GenericObject:k
Song
Playlist
PlaylistEntry
TVEpisode
TVSeason
MediaClip
PodcastEpisode
RadioStation
Curator
SocialPerson
RadioStationEvent
RecordLabel
Group
UnknownGenericObjectType-%ld
audio
UIBackgroundModes
Info
[INVALID CHANGE DETAILS] move.toIndex out of bounds: %ld/%ld
[INVALID CHANGE DETAILS] move.fromIndex out of bounds: %ld/%ld
[INVALID CHANGE DETAILS] insertedSections.lastIndex out of bounds: %ld/%ld
[INVALID CHANGE DETAILS] deletedSections.lastIndex out of bounds: %ld/%ld
-isValidForPreviousCount:finalCount:reason: can only be used with a flat collection change details
MPChangeDetails.m
v32@?0@"NSIndexPath"8@"NSIndexPath"16^B24
v32@?0@"NSNumber"8@"NSNumber"16^B24
Attempt to mutate immutable change details
v28@?0@"NSIndexPath"8@"NSIndexPath"16B24
; none [UNNECESSARY]
; updated item moves %@
; item moves %@
; updated items %@
; deleted items %@
; inserted items %@
; %@ updated moves %@
; %@ moves %@
; updated %@ %@
; deleted %@ %@
; inserted %@ %@
indexes
index
item
; %lu updated moves %@
; %lu moved %@
; %lu updated %@
; %lu deleted %@
; %lu inserted %@
MPChangeDetailOperation * _Nullable MPChangeDetailOperationGenerateEx(NSInteger, NSInteger, size_t * _Nonnull, BOOL * _Nonnull, __strong MPChangeDetailOperationIsEqualBlock _Nonnull)
void _MPChangeDetailsSafeAddOperation(NSInteger, NSInteger, MPChangeDetailOperation *, size_t, MPChangeDetailOperationType, uint32_t, uint32_t)
MPChangeDetailOperation *_MPChangeDetailOperationsFromOperationList(MPChangeDetailOperation *, size_t, MPChangeDetailOperationNode *, size_t *)
startNode
existingOperations
void _MPChangeDetailOperationNodeRelease(MPChangeDetailOperationNode *)
Overrelease of Operation
Invalid operation type MPChangeDetailOperationTypeReplace
Invalid operation type MPChangeDetailOperationTypeInsert
Invalid operation type MPChangeDetailOperationTypeDelete
Not enough operationCapacity
isEqualBlock
operationCount
<MPChangeDetailOperation type=none>
<MPChangeDetailOperation type=replace previousIndex=%d finalIndex=%d>
<MPChangeDetailOperation type=insert finalIndex=%d>
<MPChangeDetailOperation type=delete previousIndex=%d>
<MPChangeDetailOperations {
<unknown-store-id>
%lli
MediaRemoteLanguageOption/%@/%@ "%@"
NULL
MPCloudControllerErrorDomain
MPCloudControllerEnableCloudLibraryOptionStartInitialImport
MPCloudControllerEnableCloudLibraryOptionMergeWithCloudLibrary
MPCloudControllerCanShowCloudDownloadButtonsDidChangeNotification
MPCloudControllerCanShowCloudTracksDidChangeNotification
MPCloudControllerHasProperNetworkConditionsToShowCloudMediaDidChangeNotification
MPCloudControllerIsCellularDataRestrictedDidChangeNotification
MPCloudControllerIsCloudEnabledDidChangeNotification
MPCloudControllerCloudLibraryFailureDidChangeNotification
MPCloudControllerIsGeniusEnabledDidChangeNotification
MPCloudControllerIsUpdateInProgressDidChangeNotification
MPCloudControllerIsJaliscoGeniusEnabledDidChangeNotification
MPCloudControllerCloudAddToPlaylistBehaviorDidChangeNotification
v24@?0@"ICUserIdentityProperties"8@"NSError"16
v12@?0B8
v16@?0B8B12
-[MPCloudController fetchRecommendedContentWithSeedTrackID:seedTrackIDType:count:completion:]
completion
MPCloudController.m
v24@?0@"NSString"8@"NSError"16
Invalid update reason: %ld
v32@?0@"NSString"8@16^B24
MLCloudAccountAddToPlaylistBehavior
v16@?0@"MPCloudController"8
v32@?0@"NSString"8@"MPCloudController"16^B24
Artwork info loading not supported for artworkType=%ld, sourceType=%ld
Artwork info loading failed. Got no artwork info dictionary for item with persistent ID %lld
Artwork info loading failed. No artwork URL found in the artwork info dictionary for item with persistent ID %lld
One-off loading not supported for artworkType=%ld, sourceType=%ld
Cannot set cloud properties for groupingType=%ld properties=%@
dmap.itemhidden
daap.incrementskipcount
daap.incrementplaycount
com.apple.itunes.cloud-artwork-token
EnhancedAudioAvailable
com.apple.mediaplayer.MPCloudController.serial.queue
com.apple.mediaplayer.MPCloudController.cloudClient.callback.queue
Attempting to access a method only available for multi user device
com.apple.NanoBooks
com.apple.podcasts
com.apple.SessionTrackerApp
com.apple.NanoMusic
com.apple.Carousel
com.apple.tv
com.apple.springboard
com.apple.iBooks
com.apple.itunescloudd
com.apple.videos
com.apple.mediaplayer.MPCloudController.global.serial.queue
com.apple.MediaPlayer.MPQueuePlayer.periodicTimeObserverSerialQueue
v32@?0{?=qiIq}8
MPQueuePlayerInsufficientExternalProtectionContext
AVPlayerStatusUnknown
AVPlayerStatusFailed
AVPlayerStatusReadyToPlay
MPQueuePlayerStatusObservationContext
rawRate
MPQueuePlayerRateObservationContext
MPQueuePlayerExternalPlaybackActiveObservationContext
MPQueuePlayerCurrentItemObservationContext
com.apple.MediaPlayer.MPQueuePlayer.accessQueue
MPModelPropertyCuratorHandle
MPModelPropertyCuratorBrandLogoArtwork
MPModelPropertyCuratorEditorialArtwork
MPModelPropertyCuratorSubKind
MPModelPropertyCuratorKind
MPModelPropertyCuratorShortEditorNotes
MPModelPropertyCuratorEditorNotes
MPModelPropertyCuratorShortName
curator
v16@?0@"ICMusicKitRequestContext"8
Failed to get response body objects for each request in the compound URL load group.
errors
v24@?0@"MPStoreItemMetadataResponse"8@"NSError"16
com.apple.MediaPlayer.MPStoreModelRequestOperation.accessSerialQueue
com.apple.MediaPlayer.MPStoreLibraryPersonalizationRequest.sharedQueue
v32@?0@8@"NSIndexPath"16^B24
v16@?0@"MPModelPlaylistEntry"8
MPModelPlaylist
MPModelPropertyPlaylistName
playlist %@
MPModelPropertyPlaylistTraits
MPModelPropertyPlaylistDownloadedDate
MPModelPropertyPlaylistCloudVersionHash
MPModelPropertyPlaylistLastDevicePlaybackDate
MPModelPropertyPlaylistKeepLocalManagedStatus
MPModelPropertyPlaylistKeepLocalEnableState
MPModelPropertyPlaylistTracksTiledArtwork
MPModelPropertyPlaylistLibraryAddedDate
MPModelPropertyPlaylistLibraryAdded
MPModelPropertyPlaylistEditorialArtwork
MPModelPropertyPlaylistArtwork
MPModelPropertyPlaylistLastModifiedDateComponents
MPModelPropertyPlaylistReleaseDateComponents
MPModelPropertyPlaylistShareShortURL
MPModelPropertyPlaylistShareURL
MPModelPropertyPlaylistShortEditorNotes
MPModelPropertyPlaylistEditorNotes
MPModelPropertyPlaylistTrackCount
MPModelPropertyPlaylistType
MPModelPropertyPlaylistUserEditableComponents
MPModelPropertyPlaylistSubscribed
MPModelPropertyPlaylistVisiblePlaylist
MPModelPropertyPlaylistPublicPlaylist
MPModelPropertyPlaylistIsOwner
MPModelPropertyPlaylistCuratorPlaylist
MPModelPropertyPlaylistHasExplicitContent
MPModelPropertyPlaylistHasCleanContent
MPModelRelationshipPlaylistCurator
MPModelPropertyPlaylistDescriptionText
playlistEntryKind
non-empty 
mutable 
previously played 
 or folders
personal mix
administered
subscribed
genius
smart
v16@?0@"MPModelPlaylistKind"8
Playlist:v%lu:o%lu:pe%p
MPModelChildPlaylistEntries
success
status
Content-Type
com.apple.MPStoreSocialRequestOperation.accessQueue
POST
DELETE
application/x-www-form-urlencoded
application/json; charset=utf-8
MPNetworkPlayabilityMonitorNetworkTypeDidChangeNotification
MPNetworkPlayabilityMonitorEffectiveNetworkTypeForPlaybackDidChangeNotification
com.apple.MediaPlayer.MPNetworkPlayabilityMonitor
v24@?0@"NSArray"8@"NSError"16
v24@?0@"MPResponse"8@"NSError"16
v16@?0q8
MPRequestResponseController delegate did not call block passed to defersResponseReplacement.
Must get a response or an error
MPRequestResponseController.m
retryInterval
lastError
pendingResponse
delegate
request
revision
needsReload
observers
automaticLoad
Mismatched begin/endAutomaticResponseLoading.
Response must be subclass of MPResponse.
Request must be subclass of MPRequest.
com.apple.MediaPlayer/MPRequestResponseController
com.apple.MediaPlayer/MPRequestResponseController.calloutQueue
MPRequestResponseController
v24@?0@"MPMediaItem"8^B16
MPMediaPlaylist
B16@?0^v8
AudioAccessory5
AudioAccessory
MRAVOutputDevice
outputDevices
MPAVOutputDeviceRoute.m
LOCAL
ampMusicAPIDomains
listenNow
carPlayFCKindWhitelist
/v1/editorial
browseTabGroupingName
radioTabGroupingName
platform
art[editorial-elements:url]
/v1/me/recommendations
timezone
extend
plainEditorialNotes
with
friendsMix
social
displayFilter[kind]
/v1/me/recent/played
/v1/me/recent/radio-stations
language
artistNameObject
artistName
playParams
v16@?0@"MPAsyncBlockOperation"8
Duration
v32@?0@"MPIdentifierSet"8Q16^B24
Index not found for itemIdentifier: %@
MPQueueFeederIdentifierRegistry.m
v24@?0Q8^B16
v32@?0@"NSString"8Q16^B24
    [%ld] %@ : %@,
<%@: %p> (
_MPContentItemDidChangeUserInfoKeyDeltaRequest
v24@?0^v8@"NSArray"16
@"MRContentItemMetadataAudioFormat"16@?0@"MPNowPlayingInfoAudioFormat"8
@"MPNowPlayingInfoAudioFormat"16@?0@"MRContentItemMetadataAudioFormat"8
@"NSArray"16@?0^v8
v24@?0^v8@"MRContentItemMetadataAudioRoute"16
@"MPNowPlayingInfoAudioRoute"16@?0@"MRContentItemMetadataAudioRoute"8
@"MRContentItemMetadataAudioRoute"16@?0^v8
v24@?0^v8@"MRContentItemMetadataAudioFormat"16
@"MRContentItemMetadataAudioFormat"16@?0^v8
^{__CFArray=}16@?0@"NSArray"8
@"NSMutableArray"16@?0^{__CFArray=}8
@16@?0@"NSArray"8
@16@?0^{__CFArray=}8
@"NSDictionary"16@?0^{__CFDictionary=}8
prid
clid
ulid
claid
apid
aarpid
arpid
gpid
cpid
peid
ppid
pclid
colLibAdded
libAdded
hsLibLy
klEnable
klStatus
nonPurge
procType
endpt
rating
rembok
lrcsGzpData
purID
shComp
endT
load
hsStLy
hsTSL
cntrUID
libEligible
phold
rdwn
subReq
sfid
urlART
tmpART
lokART
supART
podURL
podSupSub
podShURL
podEpStrURL
podEpShURL
raAttrLbl
raTy
raSty
raPUL
raBID
raPrID
aPly
shLis
eConSt
acid
lisHist
com.apple.MediaPlayer.MPModelObjectPlaybackItemMetadata.writeQueue
v32@?0@"MPStoreAssetInfoPlaybackCacheRequest"8@"MPStoreAssetPlaybackResponse"16^B24
com.apple.MediaPlayer.MPStoreAssetInfoPlaybackCache.accessQueue
MPModelPropertyGenreName
genre %@
MPModelPropertyGenreLibraryAddedDate
MPModelPropertyGenreArtwork
genres with %@
v16@?0@"MPModelGenreKind"8
Genre:a%p
MPMusicAPIErrorDomain
MPStoreModelRequestAuthenticationOptions
MPStoreModelRequestClientPlatformIdentifier
MPStoreModelRequestClientVersion
MPStoreModelRequestClientIdentifier
MPStoreModelRequestTimeoutInterval
MPModelPropertyPlaybackPositionBookmarkTime
MPModelPropertyPlaybackPositionShouldRememberBookmarkTime
MPModelPropertyPlaybackPositionHasBeenPlayed
MPModelPropertyPlaybackPositionStartTime
MPModelPropertyPlaybackPositionStopTime
MPModelPropertyPlaybackPositionStoreUbiquitousIdentifier
MPModelPropertyPlaybackPositionUserPlayCount
sdVideo
sd480pVideo
720pHdVideo
1080pHdVideo
hlsUrl
<%@: %p, playbackContext=%@>
refreshUrl
seeAllUrl
timestamp
FOR_YOU_PERSONAL_MIXES_TITLE
ALBUM_RECO
NEW_RELEASES
ARTIST_PLAYLISTS
ALBUM_GROUPS
HEAVY_ROTATION
TODAYS_PLAYLISTS
RECENTLY_PLAYED
RECOMMEND_FRIENDS
FRIENDS_LISTENING
PERSONALIZED_MIX
moduleType
recoId
B16@?0@"<MPExclusiveAccessToken>"8
No tail exists for %@
MPSectionedIdentifierList.m
v32@?0@"NSString"8@"MPSectionedIdentifierListHeadEntry"16^B24
v32@?0{_NSRange=QQ}8^B24
v28@?0q8q16B24
Did not find item %@ to move after.
Did not find item %@ to insert after.
No item exists at %@:%@
Unsupported position type
@16@?0@"<MPExclusiveAccessToken>"8
Attempt to end transaction for section without active transaction: %@
v16@?0@"<MPExclusiveAccessToken>"8
Attempted to begin transaction for section with active transaction: %@
entryToMoveLatestUserClone cannot be nil
entryToMove cannot be nil
Could not find tail item entry for section identifier: %@
Could not find head entry for section identifier: %@
Could not find last entry (tailEntry.previous) for section identifier: %@
Invalid insertion (no item identifiers) in section: %@
Could not find tail entry for section identifier: %@
Could not head entry for section identifier: %@
Could not find item entry for identifier: %@
arne
@"_MPSectionedIdentifierListCloneIndexEntry"24@?0@"NSString"8@"NSString"16
v32@?0@"MSVPair"8@"_MPSectionedIdentifierListCloneIndexEntry"16^B24
positionKey
com.apple.mediaplayer.MPSectionedIdentifierList/accessQueue
Tail: %@
Head: %@
Item: %@ - %@
<%@: %p> 
B24@?0@"NSIndexPath"8@"NSIndexPath"16
MPNetworkObserverIsUsingNetworkDidChangeNotification
MPNetworkObserverIsMusicCellularStreamingAllowedDidChangeNotification
MPNetworkObserverIsVideoCellularStreamingAllowedDidChangeNotification
MPNetworkObserverIsMusicCellularDownloadingAllowedDidChangeNotification
AllowsCellularDataDownloads
com.apple.itunesstored
AllowAutoDownloadOnCellular
-[MPNetworkObserver setMusicCellularDownloadingAllowed:]
com.apple.Music-AllowsCellularDataDownloads
CellularDataMode
com.apple.MediaPlayer.MPNetworkObserver
com.apple.mobileipod.playbackPreferencesChanged-MusicAllowsCellularData
com.apple.videos-preferences-changed
v12@?0i8
-init is not supported, use +sharedNetworkObserver
MPNetworkObserverInitException
v32@?0@"NSDictionary"8@"MPStorePlatformEntityTranslatorContext"16@"MPIdentifierSet<MPMutableIdentifierSet>"24
sagaId
v32@?0@"NSDictionary"8@"MPStorePlatformEntityTranslatorContext"16@"NSMutableDictionary"24
@24@?0@"NSDictionary"8@"MPStorePlatformEntityTranslatorContext"16
itunesNotes.standard
itunesNotes.short
isPreorder
en_US_POSIX
releaseDate
children.offers.type
isAvailable
@max.self
contentRatingsBySystem.riaa.value
children.contentRatingsBySystem.riaa.value
@min.self
@max.children.trackNumber
@count.children
libraryAlbumId
composer.name
movementCount
offers.type
uploadedVideo
uploadedAudio
copyright
assets.@max.duration
subscribedAdamID
removeFollower
v16@?0@"MPModelForYouRecommendationItem"8
v16@?0@"MPModelPlaylist"8
contentType
contentId
MPAVEndpointRoutingDataSource.m
com.apple.MediaPlayer.MPAVEndpointRoutingDataSource/serialQueue
ColorSyncProfileCopyData
/System/Library/PrivateFrameworks/ColorSync.framework/ColorSync
ColorSyncProfileCreateWithName
kColorSyncSRGBProfile
SBCPlaybackPositionService
/System/Library/PrivateFrameworks/StoreBookkeeperClient.framework/StoreBookkeeperClient
SBCPlaybackPositionDomain
SBCPlaybackPositionEntity
v28@?0B8@"NSError"12@"NSArray"20
v32@?0@"SBCPlaybackPositionEntity"8Q16^B24
/Library/Caches/com.apple.xbs/Sources/MediaPlayer_Sim/MobileMusicPlayer-4019.110.13/MediaPlayer/Core/StoreBookkeeper Support/_ios_tvos_watchos/MPUbiquitousPlaybackPositionController.m
MP_onServiceQueue_resignActiveService
com.apple.%@.serviceQueue.%p
com.apple.%@.queue.%p
disableUPP
_MPContentItemDidChangeNotification
_MPContentItemDidChangeUserInfoKeyDeltaItem
_MPContentItemDidChangeUserInfoKeyImmediately
_MPContentItemNotificationsImmediateKey
_MPContentItemNotificationsSuppressedKey
<%@: %p id=%@ title="%@">
Can't create an MPContentItem object with a nil identifier.
MPContentItem.m
unfollowProfile
MPModelPropertyRecordLabelEditorialArtwork
MPModelPropertyRecordLabelArtwork
MPModelPropertyRecordLabelShortDescriptionText
MPModelPropertyRecordLabelDescriptionText
MPModelPropertyRecordLabelName
record label
MPRadioLibraryErrorDomain
MPRadioLibraryStationsDidChangeNotification
RadioModel
/System/Library/PrivateFrameworks/Radio.framework/Radio
v32@?0@"RadioStation"8Q16@"NSError"24
RadioAddStationRequest
RadioModelDidChangeNotification
UserDefault[%@]
Songs
Albums
Clear
Reset
AutoPlay
public.main-program-content
public.auxiliary-content
public.subtitles.forced-only
public.accessibility.transcribes-spoken-dialog
public.accessibility.describes-music-and-sound
public.accessibility.describes-video
public.easy-to-read
public.translation
public.translation.dubbed
public.translation.voice-over
localizedDescription
localizedName
stationStringID
uniqueIdentifier
Must provide a reason for logging.
_MPActiveUserChangeMonitor.m
Cancel existing timer before starting a new one.
Received %@
MPRemoteCommandTargetsDidChangeNotification
MPRemoteCommandEventDidTimeout
supported
hasTargets
enabled
v32@?0@"NSString"8@?<v@?@"MPRemoteCommandEvent"@?<v@?@"MPRemoteCommandStatus">>16^B24
v16@?0@"MPRemoteCommandStatus"8
Command handler completion deallocated without being called. event=%@
MPRemoteCommand.m
v24@?0@"MPRemoteCommandEvent"8@?<v@?@"MPRemoteCommandStatus">16
%p:%s
Unsupported action method signature. Must return MPRemoteCommandHandlerStatus or take a completion handler as the second argument.
Cannot use extended status with synchronous target/action
v16@?0@?<v@?@"MPRemoteCommandStatus">8
Target was not available for command.
<%@: %p name=%@ type=%ld>
com.apple.MediaPlayer/%@
MPSystemAppSpecializedQueueProminentStationIdentifier
com.apple.MediaPlayer.MPSetPlaybackQueueCommand/serialQueue
com.apple.MediaPlayer.MPInsertIntoPlaybackQueueCommand/serialQueue
void _MSVHasher_SipHash_1_3_Append64(MSVHasherSipHash_1_3 *, uint64_t)
void _MSVHasherAppend64(MSVHasher * _Nonnull, uint64_t)
MSVHash _MSVHasherFinalize(MSVHasher * _Nonnull)
0123456789abcdef
NSUInteger _MSVHashGetHash(MSVHash)
_MSVHasher_SipHash_1_3_Append64: invalid byte count detected [byteCount & 3]: %lld
MPModelForYouRecommendationGroupPropertyDisplaysAsGridCellInCarPlay
MPModelForYouRecommendationGroupPropertyRefreshURL
MPModelForYouRecommendationGroupPropertyLoadAdditionalContentURL
MPModelForYouRecommendationGroupPropertyTitle
MPModelForYouRecommendationGroupPropertySubgroups
MPModelForYouRecommendationGroupPropertySectionIndex
MPModelForYouRecommendationGroupPropertySectionedItems
MPModelForYouRecommendationGroupPropertyLastUpdatedDate
MPModelForYouRecommendationGroupPropertyGroupType
recommendation group
playlist entry %@+%@
_MPModelPropertyPlaylistEntryArtwork
MPModelRelationshipPlaylistEntrySocialContributor
MPModelRelationshipPlaylistEntryMovie
MPModelRelationshipPlaylistEntryTVEpisode
MPModelRelationshipPlaylistEntrySong
MPModelRelationshipPlaylistEntryPlaylist
MPModelPropertyPlaylistEntryPosition
playlist entries of (%@)
 or 
v16@?0@"MPModelPlaylistEntryKind"8
PlaylistEntry:k
<%@: %p status=%@ unknown/type=%ld>
<%@: %p status=%@ customData=%@/%lu bytes
<%@: %p status=%@ error=%@>
<%@: %p status=%@ dialog=%@>
<%@: %p status=%@>
<%@: %p status=%@ unknown>
v32@?0@8@16^B24
unAvailableContentIds
v16@?0@"MPChangeDetails"8
v32@?0@"MPModelStoreBrowseSection"8q16^B24
v32@?0@"NSString"8q16^B24
kinds
pageTitle
kindIds
type
content
fcKind
selectedChart
model
fcStructure
pageData
%@: [Account: %@, Enqueuer: %@, Personalized? %d, Storefront: %@]
v24@?0@"NSURLRequest"8@"NSError"16
https:///
com.apple.MediaPlayer.MPStoreItemMetadataCacheKey
v16@?0@"MPStoreItemMetadataCacheKey"8
comparisonType
MPModelStoreBrowseSectionPropertyTitle
MPModelStoreBrowseSectionPropertyType
MPModelStoreBrowseSectionPropertyLoadAdditionalContentURL
MPModelStoreBrowseSectionPropertyUniformContentItemType
MPModelStoreBrowseSectionPropertyMemberOfChartSet
MPModelStoreBrowseSectionPropertyBrick
MPModelStoreBrowseSectionPropertyPreviouslyRetrievedNestedResponse
MPModelStoreBrowseSectionPropertyDisplaysAsGridCellInCarPlay
MPModelStoreBrowseSectionRelationshipRadioStation
MPPropertySetRelationships
MPPropertySetProperties
relationship
%@: %@%@
;%@%lu %@
v32@?0@"NSString"8@"MPStoreItemMetadata"16^B24
Season %ld 
MPModelPropertyTVSeasonNumber
TV season %@
MPModelPropertyTVSeasonDownloadedDate
MPModelPropertyTVSeasonArtwork
MPModelRelationshipTVSeasonRepresentativeEpisode
MPModelRelationshipTVSeasonShow
MPModelPropertyTVSeasonSortType
MPModelPropertyTVSeasonLibraryAddEligible
MPModelPropertyTVSeasonLibraryAdded
MPModelPropertyTVSeasonLibraryAddedDate
MPModelPropertyTVSeasonHasExplicitContent
MPModelPropertyTVSeasonHasCleanContent
MPModelPropertyTVSeasonEpisodesCount
MPModelPropertyTVSeasonYear
MPModelPropertyTVSeasonDescriptionText
episodeKind
seasons with %@
v16@?0@"MPModelTVSeasonKind"8
TVSeason:e%p
MPModelLibrarySearchRequestSearchString
MPModelLibrarySearchRequestScopes
MPModelLibrarySearchRequestMaximumResultsPerScope
, scopes = %@
, searchString = %@
unknown property type
storeID
cloudID
cloudUniversalLibraryID
excludeFromShuffle
subscriptionStoreID
syncID
reportingStoreItemID
assetStoreItemID
userRating
titleOrder
trackNumber
hasTrackNumber
classicalMovement
gaplessEncodingDelay
gaplessLastFrameResync
relativeVolume
time
itemPID
availableArtworkToken
fetchableArtworkToken
fetchableArtworkSourceType
hlsAudioCapability
masteredForiTunes
libraryAdded
downloadedDate
datePlayed
hasNonPurgeableAsset
isStoreRedownloadable
location
baseLocationPath
hasStreamingAsset
protected
hasLoFiStreamingAsset
hlsTraits
homeSharingID
matchRedownloadParams
purchaseHistoryRedownloadParams
storeCloudID
purchaseHistoryID
cloudAssetAvailable
cloudStatus
endpointType
storeAdamID
isAUC
isPreOrder
dateReleased
datePlayedLocal
representativeItemExplicit
appData
globalID
nameOrder
isTracklistUserEditable
isSmart
isGenius
isSubscribed
shareURL
playlistPID
isFolder
shouldDisplayIndex
isPersonalMix
externalVendorName
hasName
artistAvailableArtworkToken
artistFetchableArtworkToken
artistFetchableArtworkSourceType
itemPid
position
cloudKVSBookmarkTime
cloudKVSKey
startTime
stopTime
cloudKVSHasBeenPlayed
cloudKVSPlayCount
feedURL
externalGUID
movieInfoPlist
sortID
subOrder
sortType
imageURL
@"MPArtworkCatalog"16@?0@"MPModelObject"8
height
width
v64@?0@"MPMediaLibraryEntityTranslationContext"8{map<std::string, mlcore::ModelPropertyBase *, std::less<std::string>, std::allocator<std::pair<const std::string, mlcore::ModelPropertyBase *>>>={__tree<std::__value_type<std::string, mlcore::ModelPropertyBase *>, std::__map_value_compare<std::string, std::__value_type<std::string, mlcore::ModelPropertyBase *>, std::less<std::string>, true>, std::allocator<std::__value_type<std::string, mlcore::ModelPropertyBase *>>>=^v{__compressed_pair<std::__tree_end_node<std::__tree_node_base<void *> *>, std::allocator<std::__tree_node<std::__value_type<std::string, mlcore::ModelPropertyBase *>, void *>>>={__tree_end_node<std::__tree_node_base<void *> *>=^v}}{__compressed_pair<unsigned long, std::__map_value_compare<std::string, std::__value_type<std::string, mlcore::ModelPropertyBase *>, std::less<std::string>, true>>=Q}}}16{shared_ptr<mlcore::Entity>=^{Entity}^{__shared_weak_count}}40@"MPIdentifierSet<MPMutableIdentifierSet>"56
v16@?0@"<MPMutableLocalLibraryIdentifiers>"8
{vector<std::shared_ptr<mlcore::Predicate>, std::allocator<std::shared_ptr<mlcore::Predicate>>>=^v^v{__compressed_pair<std::shared_ptr<mlcore::Predicate> *, std::allocator<std::shared_ptr<mlcore::Predicate>>>=^v}}16@?0@"NSArray"8
{shared_ptr<mlcore::EntityQuery>=^{EntityQuery}^{__shared_weak_count}}32@?0@"MPMediaLibraryEntityTranslationContext"8{shared_ptr<mlcore::LibraryView>=^{LibraryView}^{__shared_weak_count}}16
void _MPMLInitPropertyTVShowMap()_block_invoke_4
Must have TV Show kind to generate TV Show entity query.
MPMediaLibraryTranslatorSchema.mm
void _MPMLInitPropertyTVSeasonMap()_block_invoke_4
_MPMLInitPropertyTVSeasonMap_block_invoke_4
Must have TV Season kind to generate TV Season entity query.
void _MPMLInitPropertyTVEpisodeMap()_block_invoke_5
_MPMLInitPropertyTVEpisodeMap_block_invoke_5
Must have TV Episode kind to generate TV Episode entity query.
v16@?0@"<MPMutablePersonalStoreIdentifiers>"8
void _MPMLInitPropertyMovieMap()_block_invoke_5
Must have Movie kind to generate Movie entity query.
void _MPMLInitPropertyPodcastEpisodeMap()_block_invoke_4
_MPMLInitPropertyPodcastEpisodeMap_block_invoke_4
Must have Podcast Episode kind to generate Podcast Episode entity query.
void _MPMLInitPropertyPodcastMap()_block_invoke_3
Must have podcast kind to generate podcast entity query.
B40@?0@"MPMediaLibraryEntityTranslationContext"8^v16{shared_ptr<mlcore::Entity>=^{Entity}^{__shared_weak_count}}24
void _MPMLInitPropertyPlaylistEntryMap()_block_invoke_5
library()->isValid()
performQuery
/System/Volumes/Data/SWE/iOS/BuildRoots/BuildRoot951/Applications/Xcode.app/Contents/Developer/Platforms/AppleTVSimulator.platform/Developer/SDKs/AppleTVSimulator15.0.Internal.sdk/System/Library/PrivateFrameworks/MediaLibraryCore.framework/PrivateHeaders/LibraryView.hpp
Library must be validated before use
Must have PlaylistEntry kind to generate PlaylistEntry entity query.
Attempted to query playlist entries without scoping to a playlist.
void _MPMLInitPropertyGenreMap()_block_invoke_3
Must have Genre kind to generate Genre entity query.
void _MPMLInitPropertyComposerMap()_block_invoke_3
Must have composer kind to generate composer entity query.
void _MPMLInitPropertyArtistMap()_block_invoke_4
Must have artist kind to generate artist entity query.
@"NSArray"16@?0Q8
void _MPMLInitPropertyPlaylistMap()_block_invoke_5
Must have playlist kind to generate playlist entity query.
@"NSNumber"24@?0@"MPModelAlbum"8@"MPIdentifierSet"16
void _MPMLInitPropertyAlbumMap()_block_invoke_4
_MPMLInitPropertyAlbumMap_block_invoke_4
Must have album kind to generate album entity query.
plist
void _MPMLInitPropertySongMap()_block_invoke
_MPMLInitPropertySongMap_block_invoke
Must have song kind to generate song entity query.
MPArtworkResizeDomain
Image did not exist at URL: %@
v24@?0@"UIImage"8@"NSError"16
v16@?0@"UIImage"8
v24@?0@8@"NSError"16
Radiosity
ColorAnalysis
; fetchableArtworkToken = %@
; availableArtworkToken = %@
; artworkType = %@
screenshot
artist-hero
v24@?0@"MPArtworkRepresentation"8@"NSError"16
v24@?0@"MPMediaLibraryArtwork"8@"NSError"16
library
lyrics%@%@%@%@%@
:/?#[]@!$&'()*+,;=
%.03f
/%@/lyrics/%lld
music.apple.com
https
2.v1.
lyricsSnippetShareSignaturePrefix
adamID
https?://%@/(?<countryCode>\w{2})/lyrics/(?<adamID>[0-9]+)
blockSocialUser
MPModelPropertyFileAssetTraits
MPModelPropertyFileAssetHLSKeyCertificateURL
MPModelPropertyFileAssetHLSKeyServerURL
MPModelPropertyFileAssetPurchaseBundleFilePath
MPModelPropertyFileAssetProtectionType
MPModelPropertyFileAssetQualityType
MPModelPropertyFileAssetNonPurgeable
MPModelPropertyFileAssetFilePath
MPModelPropertyFileAssetFileSize
file asset
AVOutputContext.outputDeviceUIDs
AVOutputContext.predictedDevice
predictedDevice
<%@: %p>
B16@?0@"MRAVOutputDevice"8
RouteUID
must be an MPAVOutputDeviceRoute
MPAVOutputDeviceRoutingDataSource.m
v16@?0^{__CFError=}8
invalid class for %@
v24@?0@"MRAVEndpoint"8@"NSError"16
invalid class for %@ (%@)
v32@?0^{__CFArray=}8^v16^{__CFError=}24
Analytics: Picked endpoint route, clear system endpoint
B24@?0@"MPAVRoute"8@"NSDictionary"16
B24@?0@"MPAVOutputDeviceRoute"8@"NSDictionary"16
q24@?0@"MRAVOutputDevice"8@"MRAVOutputDevice"16
routingContextUID
com.apple.MediaPlayer.MPAVOutputDeviceRoutingDataSource/serialQueue
com.apple.MediaPlayer.MPAVOutputDeviceRoutingDataSource/discoverySessionQueue
v40@?0@"UAUserActivity"8@16@"NSString"24@?<v@?@"NSString"@"NSData"^@B>32
UAPayloadIdentifierExternalMediaContentBundleIdentifier
UAPayloadIdentifierExternalMediaContentIdentifier
-init is invalid. Use -initWithScrubbingControl: instead.
v16@?0@"MPModelGenericObject"8
v16@?0@"MPModelSong"8
surround
v16@?0@"<MPMutableUniversalStoreIdentifiers>"8
No personalization properties for modelClass: %@
MPStoreLibraryPersonalizationContentDescriptor.m
/Library/Caches/com.apple.xbs/Sources/MediaPlayer_Sim/MobileMusicPlayer-4019.110.13/MediaPlayer/UI/_ios_tvos_watchos/MPUserNotification.m
MPUserNotification.responseCompletionHandlerInvocation
com.apple.MediaPlayer.MPUserNotification.accessQueue
com.apple.MediaPlayer.MPUserNotification.callbackInvocationQueue
cfUserNotification
MPUserNotification.m
com.apple.MediaPlayer.MPUserNotification.userNotificationConversionAccessQueue
-[MPMediaEntityCache _entityWithIdentifier:mediaEntityType:collectionGroupingType:loadEntityBlock:]
Invalid entity
MPMediaEntityCache.mm
v16@?0r^v8
map::at:  key not found
com.apple.MediaPlayer.MPMediaEntityCache/deallocLaterQueue
endpointWrapper
MPAVEndpointRoute.m
 connection=%@
com.apple.mediaplayer.MPAVEndpointRoute/accessQueue
com.apple.mediaplayer.MPAVEndpointRoute/calloutQueue
endpoint
localEndpoint
v16@?0^v8
deleteSocialPost
musicConnect
deleteComment
v16@?0@"NSDictionary"8
reportConcern
musicCommon
reasonsForArtistPost
reasonsForLyrics
reasonsForSocialProfile
reasonsForSharedPlaylist
reasonsForUserComment
reasonsForArtistComment
<%@: %p %@:'%@'>
v24@?0@"ICURLBag"8@"NSError"16
v16@?0@"ICAsyncBlockOperation"8
v24@?0@"ICURLResponse"8@"NSError"16
commentId
concernItemAUCType
deviceId
commentText
concernItemId
concernTypeId
ARTIST_POST
ARTIST_COMMENT
USER_COMMENT
PUBLIC_PLAYLIST
SOCIAL_PROFILE
LYRICS
concernItemType
com.apple.MediaPlayer.MPStoreContentReporter.operationQueue
AFAnalyticsEventTypeMusicPlaybackAssetLoad
MPPlaybackArchiveDisplayProperties.m
storage
artworkImageData
subtitle
title
<%@: %p title=%@ subtitle=%@ artworkImageData=%@ storage=%@>
v16@?0@"<MPMutablePlaybackArchiveDisplayProperties>"8
v24@?0@"MPStoreLibraryMappingResponse"8@"NSError"16
MPAVRoutingDataSourceActiveAudioRouteDidChangeNotification
MPAVRoutingDataSourceRoutesDidChangeNotification
MPAVRoutingDataSourceVolumeControlAvailabilityDidChangeNotification
MPAVRoutingDataSourceExternalScreenTypeDidChangeNotification
MPAVRoutingDataSourceFailureNotification
Route
VolumeControlAvailability
Error
ExternalScreenType
%@ is abstract
v12@?0C8
com.apple.MediaPlayer.MPAVRoutingDataSource/serialQueue
com.apple.MediaPlayer.MPAVRoutingDataSource/workerQueue
MPModelPropertyStoreAssetNeedsUserUpload
MPModelPropertyStoreAssetEndpointType
MPModelPropertyStoreAssetRedownloadParameters
MPModelPropertyStoreAssetRedownloadable
MPModelPropertyStoreAssetAccountIdentifier
MPModelPropertyStoreAssetShouldReportPlayEvents
MPModelPropertyStoreAssetSubscriptionRequired
MPModelPropertyTVShowTitle
TV show %@
MPModelPropertyTVShowTagline
MPModelPropertyTVShowEpisodeCount
MPModelPropertyTVShowEditorialArtwork
MPModelPropertyTVShowArtwork
MPModelRelationshipTVShowCreator
MPModelPropertyTVShowShortEditorNotes
MPModelPropertyTVShowEditorNotes
MPModelPropertyTVShowShortTitle
seasonKind
shows with %@
v16@?0@"MPModelTVShowKind"8
TVShow:s%p
idx (%ld) is out of range (%ld)
<%@: %p resolvedURL:%@ artworkTemplateItems:%@ mediaType:%ld artworkType:%ld>
bytesPredicateValue
stringPredicateValue
boolPredicateValue
floatPredicateValue
doublePredicateValue
integerPredicateValue
social person
MPModelPropertySocialPersonArtwork
MPModelPropertySocialPersonPendingRequestsCount
MPModelPropertySocialPersonIsVerified
MPModelPropertySocialPersonIsPrivate
MPModelPropertySocialPersonBiography
MPModelPropertySocialPersonHandle
MPModelPropertySocialPersonUncensoredName
musicPlayerStateRestorationCache-queueDescriptor
musicPlayerStateRestorationCache-nowPlaying
musicFriends
MPStoreSocialErrorDomain
MPStoreSocialServiceControllerTransientStatesDidChangeNotification
MPStoreSocialServiceControllerTransientStatesSnapshotKey
_MPStoreSocialTransientStateDidChangeNotification
v16@?0@"_MPStoreSocialTransientState"8
com.apple.MediaPlayer._MPStoreSocialTransientState.accessQueue
com.apple.MediaPlayer._MPStoreSocialTransientState.calloutQueue
v24@?0@"_MPStoreSocialTransientState"8^B16
v24@?0q8@"NSError"16
com.apple.MediaPlayer.MPStoreSocialServiceController.accessQueue
com.apple.MediaPlayer.MPStoreSocialServiceController.operationQueue
v32@?0@"NSString"8@"MPPropertySet"16^B24
Relationship mapping missing for %@:%@
allocator<T>::allocate(size_t n) 'n' exceeds maximum supported size
Property translator mapping missing for %@:%@
Property mapping missing for %@:%@
MPMediaLibraryEntityTranslator.mm
_default
v16@?0@"MPModelObject"8
Sort descriptor missing transformer: %@
Sort descriptor must have at least one key.
v32@?0@"NSString"8@"NSString"16^B24
All relatedProperties must have the same number of core sort descriptors.
MPModelGenericObject can only be sorted by MPMulitSortDescriptor.
%@ entityQueryBlock did not return a query.
No entityQueryBlock was mapped for %@
joinProperty
{vector<mlcore::SortDescriptor, std::allocator<mlcore::SortDescriptor>>=^{SortDescriptor}^{SortDescriptor}{__compressed_pair<mlcore::SortDescriptor *, std::allocator<mlcore::SortDescriptor>>=^{SortDescriptor}}}40@?0{map<std::string, mlcore::ModelPropertyBase *, std::less<std::string>, std::allocator<std::pair<const std::string, mlcore::ModelPropertyBase *>>>={__tree<std::__value_type<std::string, mlcore::ModelPropertyBase *>, std::__map_value_compare<std::string, std::__value_type<std::string, mlcore::ModelPropertyBase *>, std::less<std::string>, true>, std::allocator<std::__value_type<std::string, mlcore::ModelPropertyBase *>>>=^v{__compressed_pair<std::__tree_end_node<std::__tree_node_base<void *> *>, std::allocator<std::__tree_node<std::__value_type<std::string, mlcore::ModelPropertyBase *>, void *>>>={__tree_end_node<std::__tree_node_base<void *> *>=^v}}{__compressed_pair<unsigned long, std::__map_value_compare<std::string, std::__value_type<std::string, mlcore::ModelPropertyBase *>, std::less<std::string>, true>>=Q}}}8@"NSSortDescriptor"32
Sorting by %@ is ambiguous, please define sortTransformer.
property
@56@?0@"MPMediaLibraryEntityTranslationContext"8{map<std::string, mlcore::ModelPropertyBase *, std::less<std::string>, std::allocator<std::pair<const std::string, mlcore::ModelPropertyBase *>>>={__tree<std::__value_type<std::string, mlcore::ModelPropertyBase *>, std::__map_value_compare<std::string, std::__value_type<std::string, mlcore::ModelPropertyBase *>, std::less<std::string>, true>, std::allocator<std::__value_type<std::string, mlcore::ModelPropertyBase *>>>=^v{__compressed_pair<std::__tree_end_node<std::__tree_node_base<void *> *>, std::allocator<std::__tree_node<std::__value_type<std::string, mlcore::ModelPropertyBase *>, void *>>>={__tree_end_node<std::__tree_node_base<void *> *>=^v}}{__compressed_pair<unsigned long, std::__map_value_compare<std::string, std::__value_type<std::string, mlcore::ModelPropertyBase *>, std::less<std::string>, true>>=Q}}}16{shared_ptr<mlcore::Entity>=^{Entity}^{__shared_weak_count}}40
Missing generic object kind relationship for %@.
+[MPMediaLibraryEntityTranslator _translatorForMPModelClass:mlcoreEntityClass:create:transient:]
MPModelClass && (entityClass || transient)
v16@?0@"MPModelMovie"8
@"MPArtworkCatalog"16@?0@"MPModelMovie"8
kind=%@
playbackAuthorizationToken="%@"
syncID=%lld
socialProfileID="%@"
assetAdamID=%lld
reportingAdamID=%lld
informalStaticAssetID="%@"
informalMediaClipID="%@"
vendorID="%@"
placeholder=YES
shouldExcludeFromShuffle=YES
lyricsID="%@"
contentItemID="%@"
handoffCorrelationID="%@"
containerUniqueID="%@"
storeRecommendationID="%@"
globalPlaylistID="%@"
radioStationEventID="%@"
radioStationHash="%@"
radioStationID=%lld
radioStationStringID="%@"
storeSubscriptionAdamID=%lld
formerStoreAdamIDs=[%@]
storePurchasedAdamID=%lld
cloudUniversalLibraryID="%@"
storeCloudID=%lld
storeCloudAlbumID="%@"
storeAdamID=%lld
containedPersistentID=%lld
persistentID=%lld
personID="%@"
databaseID="%@"
<EMPTY>
<EMPTY (not-singleton)>
personID.length > 0
MPIdentifierSet.m
databaseID.length > 0
MPIdentifierSetRadioStationEventID
MPIdentifierSetRadioStationID
MPIdentifierSetRadioStationHash
MPIdentifierSetRadioStationStringID
MPIdentifierSetAssetAdamID
MPIdentifierSetReportingAdamID
MPIdentifierSetInformalStaticAssetID
MPIdentifierSetInformalMediaClipID
MPIdentifierSetSocialProfileID
MPIdentifierSetStoreSubscriptionAdamID
MPIdentifierSetStorePurchasedAdamID
MPIdentifierSetCloudUniversalLibraryID
MPIdentifierSetFormerStoreAdamIDs
MPIdentifierSetStoreAdamID
MPIdentifierSetGlobalPlaylistID
MPIdentifierSetCodingKeyPlaybackAuthorizationToken
MPIdentifierSetStoreRecommendationID
MPIdentifierSetStoreCloudAlbumID
MPIdentifierSetStoreCloudID
MPIdentifierSetCodingKeyPersonID
MPIdentifierSetSyncID
MPIdentifierSetDeviceLibraryContainedPersistentID
MPIdentifierSetDeviceLibraryPersistentID
MPIdentifierSetCodingKeyDatabaseID
MPIdentifierSetVendorID
MPIdentifierSetIsPlaceholder
MPIdentifierSetShouldExcludeFromShuffle
MPIdentifierSetLyricsID
MPIdentifierSetContentItemID
MPIdentifierSetHandoffCorrelationID
MPIdentifierSetContainerUniqueID
MPIdentifierSetCodingKeyModelKind
<MPIdentifierSet EMPTY>
<MPIdentifierSet EMPTY (not-singleton)>
(%@)
<%@ %@>
v16@?0@"MPIdentifierSet<MPMutableIdentifierSet>"8
shared listening participant
MPModelPropertySharedListeningParticipantArtwork
MPModelPropertyPodcastEpisodeTitle
podcast episode %@
MPModelPropertyPodcastEpisodeArtwork
MPModelRelationshipPodcastEpisodePlaybackPosition
MPModelRelationshipPodcastEpisodeAuthor
MPModelRelationshipPodcastEpisodePodcast
MPModelRelationshipPodcastEpisodeLocalFileAsset
MPModelPropertyPodcastEpisodeSeasonNumber
MPModelPropertyPodcastEpisodeNumber
MPModelPropertyPodcastEpisodeType
MPModelPropertyPodcastEpisodeShareURL
MPModelPropertyPodcastEpisodeStreamURL
MPModelPropertyPodcastEpisodeDatePlayed
MPModelPropertyPodcastEpisodeDescriptionText
MPModelPropertyPodcastEpisodeHasVideo
MPModelPropertyPodcastEpisodeExplicit
MPModelPropertyPodcastEpisodeUserRating
MPModelPropertyPodcastEpisodeDuration
MPModelPropertyPodcastEpisodeReleaseDateComponents
unplayed 
video 
audio 
podcasts
v16@?0@"MPModelPodcastEpisodeKind"8
PodcastEpisode:v%lu:o%lu
iPod
NOW_PLAYING_SIRI_SUGGESTION
ROUTE_NAME_PLUS_COUNT
@"NSString"24@?0@"NSString"8q16
v32@?0@8Q16^B24
B24@?0@"NSString"8@"NSString"16
%@%@
ROUTE_NAME_CENTER_TRUNCATING_SEPARATOR
ROUTE_NAME_PLUS_SEPARATOR
q24@?0@"NSString"8@"NSString"16
ROUTE_NAME_ARROW_FORMAT
ROUTE_NAME_HEADPHONES_COUNT
MPRouteLabel's minimumEndCharacter property must be greater than or equal to 0.
MPRouteLabel.m
<%@ %p %@>
MPRestrictionsMonitorAllowsAccountModificationDidChangeNotification
MPRestrictionsMonitorAllowsDeletionDidChangeNotification
MPRestrictionsMonitorAllowsExplicitContentDidChangeNotification
MPRestrictionsMonitorMusicSubscriptionDidChangeNotification
MPRestrictionsMonitorAllowsRadioPurchasesDidChangeNotification
MPRestrictionsMonitorAllowsStorePurchasesDidChangeNotification
MPRestrictionsMonitorAllowsMusicVideosDidChangeNotification
PSRestrictionsPasscodeController
/System/Library/PrivateFrameworks/Preferences.framework/Preferences
.GlobalPreferences
MPDebugEUVolumeLimit
RegionalBehaviorEUVolumeLimit
CannotExceedEUVolumeLimit
com.apple.MediaPlayer.SystemVolumeDataSource.reloadQueue
MediaPlayback
<%@: %p %@>
available
not available
v12@?0I8
v20@?0f8^{__CFError=}12
v20@?0I8^{__CFError=}12
<%@: %p %@ volume control %@>
Endpoint: %@
Endpoint: %@ OutputDevice: %@
Output device route must be an output device.
Group route must be an endpoint route.
MPVolumeControllerRouteDataSource.m
imageArtwork
videoArtwork
sourceEditorialArtworkKind
format
cropStyle
artworkInfoType
LWHQ
hdmv
SDMV
480p
720p
1080p
MPStoreDownloadAttributeBackgroundRequest
MPStoreDownloadAttributeBuyParameters
MPStoreDownloadAttributeClientBundleIdentifier
MPStoreDownloadAttributeDisplaysOnLockscreen
MPStoreDownloadAttributeDownloadHandlerIdentifier
MPStoreDownloadAttributeKind
MPStoreDownloadAttributeLibraryItemIdentifier
MPStoreDownloadAttributeOriginator
MPStoreDownloadAttributeReason
MPStoreDownloadAttributeShouldDisableCellularRestrictionEnforcement
MPStoreDownloadAttributeShouldRespectMusicCellularDataRestriction
MPStoreDownloadAttributeShouldRespectStoreCellularDataRestriction
MPStoreDownloadAttributeStoreSagaItemIdentifier
MPStoreDownloadAttributeStoreItemIdentifier
MPStoreDownloadAttributeTitle
MPStoreDownloadAttributeURLBagKey
MPStoreDownloadAttributeSkipInstall
MPStoreDownloadErrorDomain
tilthistory
tiltmediacontrols
tiltnowplaying
tiltstore
tiltwishlist
MPStoreDownloadPhaseCanceled
MPStoreDownloadPhaseDataRestore
MPStoreDownloadPhaseDownloading
MPStoreDownloadPhaseFailed
MPStoreDownloadPhaseFinished
MPStoreDownloadPhaseInstalling
MPStoreDownloadPhasePaused
MPStoreDownloadPhasePreflight
MPStoreDownloadPhaseProcessing
MPStoreDownloadPhasePurchasing
MPStoreDownloadPhaseWaiting
buyProduct
paidRedownloadProduct
redownloadProduct
subDownload
SSDownloadPhaseWaiting
SSDownloadPhaseProcessing
SSDownloadPhasePreflight
SSDownloadPhasePaused
SSDownloadPhaseInstalling
SSDownloadPhaseDownloading
SSDownloadPhaseDataRestore
SSDownloadPhaseCanceled
<%@ %p %@ error:%@ canceled:%@>
com.apple.MediaPlayer.MPStoreDownload.accessQueue
SSMutableURLRequestProperties
MPStoreDownloadURLBagKeyOverride
SSDownloadPropertyShouldSuppressErrorDialogs
SSDownloadPropertyShouldCancelOnFailure
SSDownloadSizeLimitDisabled
SSDownloadPolicyUserDefaultState
SSDownloadSizeLimitNoLimit
SSDownloadPolicyRule
SSDownloadPolicy
SSDownloadPropertyStoreSagaIdentifier
&reporting=%@
podcast
book
feature-movie
videoPodcast
;stationHash:%@
;stationId:%llu
MPStoreDownloadManagerDidFetchInitialDownloadsNotification
SSDownloadPropertyLibraryItemIdentifier
/System/Library/PrivateFrameworks/StoreServices.framework/StoreServices
SSDownloadPhaseFinished
SSDownload
SSPurchase
SSDownloadPropertyClientBundleIdentifier
SSDownloadPropertyKind
SSDownloadPropertyStoreItemIdentifier
Downloads must not be empty.
MPStoreDownloadManager.m
v16@?0@"NSArray"8
SSDownloadPhaseFailed
SSDownloadPhaseIsFinishedPhase
v16@?0@"NSError"8
v20@?0B8@"NSError"12
v8@?0
com.apple.MediaPlayer.MPStoreDownloadManager.accessQueue
com.apple.MediaPlayer.MPStoreDownloadManager.calloutQueue
%@.%@
SSPurchaseManager
SSDownloadPropertyCollectionName
SSDownloadPropertyHandlerID
SSDownloadPropertyTitle
SSDownloadPropertyThumbnailImageURL
SSDownloadPropertyReason
SSDownloadPropertyPreferredAssetFlavor
SSDownloadPropertyIsRestore
SSDownloadPropertyEncodedErrorData
SSDownloadPropertyDownloadPhase
SSDownloadExternalPropertyRentalInformation
SSDownloadExternalPropertyPolicySizeLimit
SSDownloadExternalPropertyPercentComplete
SSDownloadExternalPropertyBytesDownloaded
com.apple.MediaPlayer.MPStoreDownloadManager
SSDownloadManager
SSDownloadKindMovie
SSDownloadKindTelevisionEpisode
SSDownloadKindMusicVideo
SSDownloadKindMusic
SSDownloadManagerOptions
-init is not supported. Use +sharedManager instead.
MPStoreDownloadManagerInitException
v16@?0@"MPModelSocialPerson"8
@"MPArtworkCatalog"16@?0@"MPModelSocialPerson"8
MPModelPropertyAlbumTitle
album %@
MPModelPropertyAlbumTraits
MPModelPropertyAlbumDownloadedDate
MPModelPropertyAlbumSongPopularity
MPModelPropertyAlbumShortEditorNotes
MPModelPropertyAlbumEditorNotes
MPModelPropertyAlbumPreorder
MPModelPropertyAlbumLastDevicePlaybackDate
MPModelPropertyAlbumLibraryAddEligible
MPModelPropertyAlbumKeepLocalManagedStatus
MPModelPropertyAlbumKeepLocalEnableState
MPModelPropertyAlbumVolumeNormalization
MPModelPropertyAlbumLibraryAdded
MPModelPropertyAlbumYear
MPModelPropertyAlbumLibraryAddedDate
MPModelPropertyAlbumCopyrightText
MPModelPropertyAlbumArtwork
MPModelPropertyAlbumReleaseDateComponents
MPModelPropertyAlbumIsClassical
MPModelPropertyAlbumIsCompilation
MPModelPropertyAlbumHasExplicitContent
MPModelPropertyAlbumHasCleanContent
MPModelPropertyAlbumDiscCount
MPModelPropertyAlbumMaximumItemTrackNumber
MPModelPropertyAlbumTrackCount
MPModelRelationshipAlbumRepresentativeSong
MPModelRelationshipAlbumGenre
MPModelRelationshipAlbumArtist
options
songKind
 containing %@
compilations
v16@?0@"MPModelAlbumKind"8
Album:v%lu:o%lu:s%p
MPModelChildAlbumSongs
MPModelChildAlbumArtists
MPModelChildAlbumRecordLabels
searchStringPredicate
persistentIDsPredicate
compoundPredicate
propertyPredicate
MIDDLEWARE: [%{public}@]
INVALIDATE: Middleware: %{public}@ [%{public}@] request: %{public}@
INVALIDATE: Middleware: %{public}@ [%{public}@, but already invalid] request: %{public}@
INVALIDATE: Response invalid before completion. Request: %{public}@
START Request: %{public}@ aka [%{public}@]
FINISH Request: %{public}@ Response: %{public}@ [%fs] error: %{public}@
FINISH Request: %{public}@ Response: %{public}@ [%fs]
TIMEOUT Request: %{public}@ timing out.
TIMEOUT Request: %{public}@ timing out. Remaining operations: [%{public}@]
TIMEOUT Request: %{public}@ Operation: %{public}@
INVALIDATE: Notifying invalidation for request: %{public}@
[AFAnalytics] AFAnalyticsEventTypeMusicPlaybackStart %lld %{public}@
[AFAnalytics] AFAnalyticsEventTypeMusicPlaybackReady %lld %{public}@
[AFAnalytics] AFAnalyticsEventTypeMusicPlaybackQueueReceived %lld %{public}@
[AFAnalytics] %{public}@ %lld %{public}@
MPStoreGetClientToken failed to get identity properties for token request. err=%{public}@
MPStoreGetClientToken not fetching auth token because there's no active account
 %{public}@ loadedTimeRanges %.2f of %.2f
 %{public}@ Finished downloading asset with loadedTimeRanges: %.2f of %.2f
%{public}@: setupPlaybackInfo called without an asset loaded
%{public}@: Seeking to start time: %f [override: %{BOOL}u]
%{public}@: Setting forward playback end time to: %f
%{public}@: Setting Audible DRM info: %{public}@
%{public}@: Setting ramp in/out info: %{public}@
Setting item %{public}@ EQ to %d
Failed to get exportable URL with error: %{public}@
%{public}@: Setting volume normalization to %f on %{public}@
%{public}@: ignoring volume normalization %f on %{public}@
MP->AV Asset Log Mapping: %{public}@ -> %{public}@   
Assets should not be loaded on the main thread.
    AVPlayerItem: %{public}@
MPModelLibraryRequestOperation: %p _sanityCheckRequest: allowedItemIdentifiers must contain unique array elements -- cannot contain duplicates. label=%{public}@ allowedItemIdentifiers=%{public}@
AVController: queue boundary, ending playback [%{public}@]
_resumePlaybackIfNecessary
_pausePlaybackIfNecessaryIgnoringVideoLayerAttachment:
MPAVController: %p: Pausing [UIApp isSuspendedUnderLock]
MPAVController: %p: Pausing [application state]
Resolution for item %{public}@ resolved error: %{public}@ with resolution error: %{public}@
Resolution for item %{public}@ could not resolve error: %{public}@ with resolution error: %{public}@
Using %{public}@ to resolve error %{public}@
Playback failed with error: %{public}@, not resolving (canResolve: %{public}@, allowsItemErrorResolution: %{public}@)
Found pictureType: %{public}@
Created image of size: %{public}@
Delayed time time change fired: %f
SCAN: Rate: %f, Interval: %f
 _inflightSeekRate already set, which means multiple setRate:error: calls have been made before a _rateDidChange: was received
%{public}@ %{public}@: called with item: %{public}@ with asset loaded: %{public}@ and therefore player item: %{public}@
 MPAVController _setState: %ld -> %ld
MPAVController: %p: _pausedDuringInterruption=NO [state changed from interrupted]
Setting actionAtItemEnd to %ld for state %ld
BackgroundTask: Took assertion (%lli) for playback stall
Disabling autoplay after buffer stall timeout
BackgroundTask: End assertion (%lli) at %s:%d
Skipping autoplay, disabled (for current item: %d, on player: %d, state: %ld)
Likely to keep up or full buffer: %d
Skipping autoplay, not enough buffered to keep up.
Taking autoplay background task assertion.
Scheduling autoplay background task assertion ending...
Ending autoplay background task from timing out waiting for likely to keep up.
Scheduled autoplay background task assertion is no longer relevant.
Ending autoplay background task.
- Registering for AVItem notifications from %{public}@
-- Asset loaded with player item: %{public}@
 Registering %{public}@ for double observation on %{public}@ (%{public}@)
END SEEKING: %ld
MPAVController: %p: setQueueController: %{public}@
BackgroundTask: End assertion (%lli) at %{public}s:%d
External playback configuration [override #2] - externalPlaybackUnsupportedReason: %{public}@ => wantsExternalPlayback: %{BOOL}u
External playback configuration [diagnosis] - input: %{public}@ -> output: %{public}@
External playback configuration [Updating player] - usesExternalPlaybackWhileExternalScreenIsActive:%{BOOL}u, usesAudioOnlyMode:%{BOOL}u, wantsExternalPlayback:%{BOOL}u
_verifyDisplayProtection
    ignoring because state is %d
 insufficient external protection
applying throttled index change of %ld tracks
%{public}@ %{public}@: with item: %{public}@ currentItem: %{public}@
%{public}@ _audioSessionMediaServicesWereResetNotification:
%{public}@:%d
 canPlayFastReverse 
 canPlayFastForward 
 externalPlaybackActive 
 outputObscuredDueToInsufficientExternalProtection 
 rate
 playbackBufferEmpty 
 playbackBufferFull 
 playbackLikelyToKeepUp 
 status 
 %ld
Ending playback due to AirPlay failure
MPAVController: %p: Pausing [airPlayVideoEnded]
 AVPlayerItemTimeJumpedNotification 
 %.1fs
 _streamUnlikelyToKeepUp
 _streamRanDry
 _streamLikelyToKeepUp
 _streamBufferFull
 _serverConnectionDidDie
  -- notification: %{public}@
  -- error: %{public}@
  -- currentTime: %0.2f
  -- contentItemID: %{public}@
MPAVController: %p: Disconnecting AVPlayer for reason %d
%{public}@ %{public}@: unregistering due to disconnect for reason: %li
MPAVController: %p: Creating AVPlayer and MPAVQueueCoordinator - deferItemLoading=%{BOOL}u
Setting allowsExternalPlayback: %{public}@
Setting usesExternalPlaybackWhileExternalScreenIsActive: %{public}@
Setting actionAtItemEnd to AVPlayerActionAtItemEndAdvance when connecting to the AVPlayer
_configureAudioSession
 _rateDidChange %.2f 
 %.2f
MP AVAudioSessionDelegateMediaPlayerOnly - end interruption [received from CM]. Interruptor <%{public}@> category <%{public}@> resumable <%lu>,  _state = %lu
paused during interruption: do not resume
current item requests playback prevention: do not resume
interruptor is not phone app, etc: do not resume
video while in background: do not resume
MP endInterruptionFromInterruptor :: resuming playback at %f
AVAudioSessionDelegateMediaPlayerOnly - begin interruption [received from CM]
 _itemWillChange %{public}@ 
 %{public}@
 playback state=%d, didPreviousItemReachEnd=%d, previousItemAssetLoaded: %{public}@, _isReloadingForPlaybackContextChange=%{BOOL}u
 _itemReadyToPlay
 AVPlayerItemDidPlayToEndTimeNotification
 _itemFailedToPlayToEnd %{public}@
 AVPlayerItemFailedToPlayToEndTimeNotification
 %{public}@
 %{public}@
 _itemDidChange 
 %{public}@
 asset loaded %{public}@ : current item %{public}@
MPAVController: %p: Pausing [active route change, disabling autoplay]
Ignoring pause from active route change due to state being interrupted.
reloadWithPlaybackContext:completionHandler:
 playbackContext: %{public}@
 currentPlaybackState=%d, posting MPAVControllerWillReloadWithPlaybackContextNotification
Error loading tracklist for queue feeder: %{public}@
MPAVController: %p: Honoring context action after queue load [shouldStartPlayback=%{BOOL}u]
MPAVController: %p: Overriding context action after queue load [Play]
MPAVController: %p: Overriding context action after queue load [Pause]
MPAVController: %p: Pausing [reloadWithPlaybackContext, was running, context should not start playback]
Ending playback because we don't have a current item after reload.
MPAVController: %p - setCurrentTime:options:completion: - Saving start time override - startTimeOverride: %3.2fs
Committing time change: %f
Delaying time change: %f
MPAVController: %p: Set audio session active
Enabling autoplay
Disabling autoplay
Setting rate on player: %{public}@ to %f
Preparing item: %{public}@ for rate: %f
Finished preparing item: %{public}@ for rate: %f, setting.
%{public}@ %d
%{public}@ %{public}@ %{public}@
MPAVController: %p: playWithOptions: %d allowsEnablingAutoPlay: %{BOOL}u
MPAVController: %p: Pausing [unable to set rate]
Disabling autoplay for pause
MPAVController: %p: _pausedDuringInterruption=YES
%{public}@
MPAVController: %p: endPlayback
MPAVController: %p: changePlaybackIndexBy:deltaType:ignoreElapsedTime:error:
throttling playback changes for %.2fs
applying an additional %ld delta from throttled changes
changing by %ld to track to %{public}@
BEGIN SEEKING: %d
[TelevisionRoutingDataSource] Beginning discovery using controller: %{public}@
[TelevisionRoutingDataSource] Ending discovery with controller: %{public}@
 Enforcing policy due to screen recording. setMuted/setHidden: %{BOOL}u
RPQ: initWithMediaRemotePlaybackQueue: [library] library=%{public}@
RPQ: initWithMediaRemotePlaybackQueue: [query] source=bplist query=%{public}@
RPQ: initWithMediaRemotePlaybackQueue: [query] source=protobuf protobuf=%{public}@
RPQ: initWithMediaRemotePlaybackQueue: [query] source=protobuf query=%{public}@
RPQ: initWithMediaRemotePlaybackQueue: [query] source=protobuf query=(null)
RPQ: initWithMediaRemotePlaybackQueue: [firstItem] source=mip multiverseIdentifier=%{public}@
RPQ: initWithMediaRemotePlaybackQueue: [firstItem] source=mip firstItem=%{public}@
RPQ: initWithMediaRemotePlaybackQueue: [firstItem] source=mip firstItem=(null)
RPQ: initWithMediaRemotePlaybackQueue: [firstItem] source=pid pid=%lld
RPQ: initWithMediaRemotePlaybackQueue: [firstItem] source=pid firstItem=%{public}@
RPQ: initWithMediaRemotePlaybackQueue: [firstItem] source=pid firstItem=(null)
RPQ: initWithMediaRemotePlaybackQueue: [shuffle/repeat] shuffle=%{public}@ repeat=%{public}@
userIdentityForMediaRemoteOptions - No user identity data. Using active account.
userIdentityForMediaRemoteOptions -
Cannot decode override user identity. Using active account.
userIdentityForMediaRemoteOptions - Decoded override user identity: %{private}@.
Dropping link without label: %{public}@
No match found, URL is not supported: %{public}@
countryCode not found in bag: %{public}@
Match didn't capture an identifier: %{public}@
Regex cannot be generated from pattern: %{public}@ with error %{public}@
Dropping node without title: %{public}@
Can't parse because input has unexpected type: %{public}@
Can't parse because %{public}@ property doesn't exist: %{public}@
Can't parse because array doesn't contain anything: %{public}@
Can't parse because %{public}@ property is not of expected (NSArray) type: %{public}@
Can't parse because array first object is not of expected (NSArray) type: %{public}@
Can't parse because %{public}@ property is not of expected (NSDictionary) type: %{public}@
Can't parse because array first object is not of expected (NSDictionary) type: %{public}@
[MPVolumeSlider] volumeValueDidChange %f (coalesced) for %{public}@
[MPVolumeSlider] Not committing volume change because in optimistic state
[MPVolumeSlider] Committing volume change of: %f
[MPVolumeSlider] volumeWarningStateDidChange warningState: %li slider: %{public}@
[MPVolumeSlider] EUVolumeLimitEnforcedDidChange enforced: %{BOOL}u slider: %{public}@
[MPVolumeSlider] EUVolumeLimitDidChange limit: %f slider: %{public}@
[MPVolumeSlider] volumeControlCapabilitiesDidChange controller: %{public}@ capabilities:%{public}@
[MPVolumeSlider] volumeControlAvailableDidChange available: %{BOOL}u slider: %{public}@
[MPVolumeSlider] <%@: %p> setVolumeDataSource: %@
[MPVolumeSlider] Tracked to %f for %{public}@
[MPVolumeSlider] allowUserToExceedEUVolumeLimit
[MPVolumeSlider] Tracked from %f for %{public}@
Failed to decode hls key data. err=%{public}@
MPModelLibraryDefaultSectionedCollectionDataSource %p: indexPathForItemWithIdentifiersIntersectingSet: hasEntityPosition is NO [persistentID not found in entityPersistentIDs] persistentID=%lld
Failed to pick single route %{public}@ error: %{public}@
Successfully picked single route %{public}@
 %{public}s %{public}@
Hijack - Requesting playbackState for %@
Skipping playback checks. Route: %{public}@, playbackDataSource: %{public}@
Hijack - playbackState is %{BOOL}u for %@
Hijack - RoutingController %{public}@ Presenting: %{public}@ NowPlaying: %{public}@
Perform hijack for %@
Do not perform hijack for %@
Audio category override changed to %{public}@
%{public}@ returning single pickedRoute: %{public}@
%{public}@ updated routes: [%@]
%{public}@ updated picked routes: [%@]
RCS _processSelection:completion: routing controller missing
RCS cannot add local speaker route. Picked route: %{public}@
RCS cannot add route to routing controller that does not support multiple selection routingController: %{public}@
RCS treating Add as a Set
Set command invoked with >1 route. (localSpeakerRoute=%{BOOL}U|toNonGroupableOutputContext=%{BOOL}U|nonGroupableRoute=%{BOOL}U: %{public}@
RCS set picked route %{public}@
RCS add routes %{public}@
RCS remove routes %{public}@
RCS dequeue %{public}@
RCS failed to process selection: %{public}@ error: %{public}@
RCS _dequeue routing controller missing
RCS successfully processed selection: %{public}@
RCS _dequeueSelectionWhenPossible timed out for selection %{public}@
RCS enqueue %{public}@
RCS will use existing selection %{public}@
RCS changing selection in progress from %{public}@ to %{public}@
RCS removePendingRoute routing controller missing
RCS removePendingRoute %{public}@
RCS ignoring addPendingRoute - route already pending %{public}@
RCS addPendingRoute routing controller missing
RCS addPendingRoute %{public}@
RCS pending route timed out %{public}@
RCS pickedRouteDidChange caused us to drop selection %{public}@
RCS cancelling in-progress selection %{public}@
Failed to find symbol with model: %{public}@ uti: %{public}@ error: %{public}@
Failed to find symbol with uti: %{public}@ error: %{public}@
No valid sinfs in payload
Could not serialize sinfs from payload=%{public}@, error=%{public}@
Missing miniSinf from sinfDictionary=%{public}@
Encountered unsupported MediaKit type: %@
Encountered unsupported sinfKind in assets [MediaKit]: sinfKind=%{public}@
Encountered unsupported data type in assets [MediaKit]: flavorStringType=%{public}@ urlStringType=%{public}@ urlStringType=%{public}@ flavorString=%{public}@ urlString=%{public}@
Encountered unsupported data type in assetURLs [MediaKit]: flavorStringType=%{public}@ urlStringType=%{public}@ flavorString=%{public}@ urlString=%{public}@
Encountered unexpected media kit relationship parent=%@ type=%@
Encountered unsupported StorePlatform kind: %@
Encountered unsupported data type in assetURLs [StorePlatform]: flavorStringType=%{public}@ urlStringType=%{public}@ flavorString=%{public}@ urlString=%{public}@
Encountered unexpected store platform relationship parent=%@ type=%@
Failed to add cache content to library. %{public}@
Failed to add cache playlist to library. %{public}@
Cannot create playlist with an empty name
Could not resolve default author display name
RPQ: -[MPMediaQuery initWithProtobufferDecodableObject:library:] resolving PID predicate multiverseID=%{public}@ library=%{public}@ entity=%{public}@
RPQ: -[MPMediaQuery initWithProtobufferDecodableObject:library:] resolving PID predicate value=%{public}@
Unknown comparison type %ld.
attempt to *nil* filter predicate to query: %@
No static entity found for provided library: %{public}@ multiverseID: %{public}@
Static entity recovered from included library: %{public}@ multiverseID: %{public}@
No static entity found in library: %{public}@ multiverseID: %{public}@
Unable to find static entity in any library: %{public}@
BEGIN [%lld]: getTimeSnapshot 
getTimeSnapshot
END [%lld]: getTimeSnapshot 
BEGIN [%lld]: getNowPlaying 
getNowPlaying
END [%lld]: getNowPlaying 
Failed to get server now playing error: %{public}@
BEGIN [%lld]: getDescriptor 
getDescriptor
END [%lld]: getDescriptor 
Failed to get server queue descriptor error: %{public}@
MPMusicPlayerController is not available on the simulator
Failed to loadRepresentationForArtworkCatalog with error: %{public}@
BEGIN [%lld]: endSeeking 
endSeeking
END [%lld]: endSeeking 
BEGIN [%lld]: beginSeekingBackward 
beginSeekingBackward
END [%lld]: beginSeekingBackward 
BEGIN [%lld]: beginSeekingForward 
beginSeekingForward
END [%lld]: beginSeekingForward 
setCurrentPlaybackRate
rate=%g
BEGIN [%lld]: setCurrentPlaybackRate rate=%g
END [%lld]: setCurrentPlaybackRate 
setCurrentPlaybackTime
time=%g
BEGIN [%lld]: setCurrentPlaybackTime time=%g
END [%lld]: setCurrentPlaybackTime 
BEGIN [%lld]: stop 
stop
END [%lld]: stop 
pause
BEGIN [%lld]: pause 
END [%lld]: pause 
BEGIN [%lld]: play 
play
END [%lld]: play 
prepareToPlay:sync
BEGIN [%lld]: prepareToPlay:sync 
Failed to prepareToPlay error: %{public}@
END [%lld]: prepareToPlay:sync 
BEGIN [%lld]: skipToBeginningOrPreviousItem 
skipToBeginningOrPreviousItem
END [%lld]: skipToBeginningOrPreviousItem 
duration=%f
BEGIN [%lld]: pauseWithFadeoutDuration duration=%f
pauseWithFadeoutDuration
END [%lld]: pauseWithFadeoutDuration 
shuffle
BEGIN [%lld]: shuffle 
END [%lld]: shuffle 
index=%lld
BEGIN [%lld]: nowPlayingAtIndex index=%lld
nowPlayingAtIndex
END [%lld]: nowPlayingAtIndex 
Failed getting nowPlayingAtIndex: %ld error: %{public}@
BEGIN [%lld]: skipToPreviousItem 
skipToPreviousItem
END [%lld]: skipToPreviousItem 
BEGIN [%lld]: skipToBeginning 
skipToBeginning
END [%lld]: skipToBeginning 
BEGIN [%lld]: skipToNextItem 
skipToNextItem
END [%lld]: skipToNextItem 
prepareToPlay short-circuit [already prepared to play]
prepareToPlay failed [no target descriptor]
prepareToPlay:async
BEGIN [%lld]: prepareToPlay:async 
Failed to prepareToPlay with error: %{public}@
nil server
END [%lld]: prepareToPlay:async nil server
prepareToPlay connected to server, setting queue descriptor
END [%lld]: prepareToPlay:async 
prepareToPlay completed with current target queue descriptor
prepareToPlay completed with past queue descriptor
BEGIN [%lld]: appendQueueDescriptor descriptor=%{public}@
appendQueueDescriptor
END [%lld]: appendQueueDescriptor 
appendQueueDescriptor failed error: %{public}@
BEGIN [%lld]: prependQueueDescriptor descriptor=%{public}@
prependQueueDescriptor
END [%lld]: prependQueueDescriptor 
prependQueueDescriptor failed error: %{public}@
setQueue
descriptor=%{public}@
BEGIN [%lld]: setQueue descriptor=%{public}@
END [%lld]: setQueue 
BEGIN [%lld]: setNowPlayingItem 
setNowPlayingItem
END [%lld]: setNowPlayingItem 
Failed to set now playing item error: %{public}@
shuffleMode=%ld
BEGIN [%lld]: setShuffleMode shuffleMode=%ld
setShuffleMode
END [%lld]: setShuffleMode 
getShuffleMode
BEGIN [%lld]: getShuffleMode 
END [%lld]: getShuffleMode 
setRepeatMode
repeatMode=%ld
BEGIN [%lld]: setRepeatMode repeatMode=%ld
END [%lld]: setRepeatMode 
BEGIN [%lld]: getRepeatMode 
getRepeatMode
END [%lld]: getRepeatMode 
[MPArtwork] HALTING -- Error loading artwork for catalog: %{public}@ kind: %ld error: %{public}@
[MPArtwork] Loaded nil representation -- Error loading artwork for catalog: %{public}@ kind: %ld error: %{public}@
Imported %{public}@ playlists
Failed to import %{public}@ playlists with error: %{public}@
%{public}@: Could not determine UUID string
Could not find playlist for %{public}@ and no creation metadata was provided
Creating playlist for %{public}@
Create playlist failed, not authorized
dataProvider: %{public}@ does not allow creating a playlist using the SDK
Cloud createPlaylist for %{public}@ failed: %{public}@
%{public}@ - Notifications - Reading libraryChangeObservers from deviceMediaLibrary
%@ Deferring disconnect due to active assertions: %{public}@
%p Releasing connection assertion: %{public}@
%p Active assertions: %{public}@
Not authorized, skipping filter predicate application
%{public}@ - Active user change completed - Firing notifications for path change
%p Taking connection assertion: %{public}@
MPMediaLibraryAuthorizationStatus has not been determined, %{public}@
%{public}@: app not authorized for access
%{public}@ - New library created for user identity: %@
%{public}@ - New library init called
Reloading data provider for significant change %@
Reloading data provider %@
Removing data provider %@
Adding data provider %@
%{public}@ - Posting notification [%@]
%{public}@ - Related library posting notification [%@]
MPMediaLibrary - _mediaLibraryWithUniqueIdentifier: - User change detected between encoding/decoding [recoverable] - Library=%@ - EncodedUser=%@ - DecodedLibraryUser=%@
%{public}@ - No pre-existing library for user identity: %@
%{public}@ - Request for a library with user identity: %@
%{public}@ - Singleton
Reloading items due to preferred queue depth change from %lu to %lu
+ SYNC ITEMS: [PRUNING] %{public}@
Current Item changed: %{public}@ -> %{public}@
Attempting to achieve equilibrium between MP and AV queues
[BackgroundTasks] MPAVQueueCoordinator Begin Background Task: _syncPlayerItems
Clearing loaded asset because it cannot be reused for item: %{public}@
= SYNC PLAYER: Removing %{public}@ because it was not the correct item for the index in the queue.
= SYNC PLAYER: Removing %{public}@ because it was at an index beyond where it should be.
= SYNC PLAYER: %{public}@ was already in player. Making copy.
= SYNC PLAYER: %{public}@ -> %{public}@
= SYNC PLAYER: %{public}@ removed for being beyond active range.
Achieved equilibrium between %{public}@ and %{public}@.
Has not yet achieved equilibrium.
Skipping player sync because we've already achieved equilibrium.
[BackgroundTasks] MPAVQueueCoordinator End Background Task: _syncPlayerItems
Skipping loading items.
[BackgroundTasks] MPAVQueueCoordinator Begin Background Task: _syncItemsWithPreviousItems:
Beginning with active queue depth: %lu
+ SYNC ITEMS: %{public}@%{public}@ -> %{public}@ %{public}@
Updated active queue depth to: %lu
Failed to queue any items.
+ SYNC ITEMS: %{public}@ -> (null) [removal]
[BackgroundTasks] MPAVQueueCoordinator End Background Task: _syncItemsWithPreviousItems:
Committing playback transaction because of reload without keeping current item.
+ SYNC ITEMS: [CLEARING]
+ SYNC ITEMS: %{public}@ [keeping current item]
LoadAsset
item=%{public}@
[BackgroundTasks] MPAVQueueCoordinator Begin Background Task: _loadAssetForItem:
Beginning transaction for first item load.
> Loading asset for: %{public}@
< Loaded asset for: %{public}@ [%.2fs]
Dropping asset because %{public}@ is no longer in queue.
Failed loading asset for: %{public}@ [%.2fs]
Committing transaction for first item load.
[BackgroundTasks] MPAVQueueCoordinator End Background Task: _loadAssetForItem:
Removing failed item: %{public}@
[BackgroundTasks] MPAVQueueCoordinator End [%lu]
[BackgroundTasks] MPAVQueueCoordinator Background Task Failed to Start.
[BackgroundTasks] MPAVQueueCoordinator Start [%lu]
[BackgroundTasks] MPAVQueueCoordinator Expired [%lu]
applicationMusicPlayer _establishConnectionIfNeeded failed [
 denied due to authorization status]
BEGIN [%lld]: applicationQueuePlayer:xpc:connect 
resumed connection
EVENT [%lld]: applicationQueuePlayer:xpc:connect resumed connection
BEGIN [%lld]: applicationQueuePlayer:xpc:connect:wake 
applicationQueuePlayer:xpc:connect:wake
END [%lld]: applicationQueuePlayer:xpc:connect:wake 
applicationQueuePlayer _establishConnectionIfNeeded timeout [ping did not pong]
applicationMusicPlayer:connect
BEGIN [%lld]: applicationMusicPlayer:connect 
applicationQueuePlayer:xpc:connect
END [%lld]: applicationQueuePlayer:xpc:connect 
END [%lld]: applicationMusicPlayer:connect 
applicationMusicPlayer: connection invalidated
applicationMusicPlayer: failed to get synchronousRemoteObject %{public}@
error=%{public}@
END [%lld]: applicationMusicPlayer:connect error=%{public}@
applicationController: xpc service connection invalidated
applicationController: xpc service connection interrupted
contentItemIDs.count=%llu
BEGIN [%lld]: _mediaItemsForContentItemIDs contentItemIDs.count=%llu
_mediaItemsForContentItemIDs
END [%lld]: _mediaItemsForContentItemIDs 
Failed getting nowPlayings for contentItemIDs (count: %llu) error: %{public}@
Failed to beginPlaybackAtHostTime with error: %{public}@
Failed to prerollWithCompletion with error: %{public}@
MPLazySectionedCollection %p: identifiersForItemAtIndexPath dataSource failed to produce identifiers: dataSource=<%{public}@ %p> indexPath=%{public}@
MPLazySectionedCollection %p: identifiersForItemAtIndexPath super failed to produce identifiers: indexPath=%{public}@
MPAbstractNetworkArtworkDataSource: _didReceiveWillEnterForegroundNotification: Increasing video URLCache memory capacity from 0 to default capacity.
MPAbstractNetworkArtworkDataSource: _didReceiveMemoryWarningNotification: Reducing video URLCache memory capacity to 0.
MPAbstractNetworkArtworkDataSource: -resourceLoader:didCancelLoadingRequest: canceled data task: %{public}@. loadingRequest=%p URL=%{public}@
MPAbstractNetworkArtworkDataSource: -resourceLoader:shouldWaitForLoadingOfRequestedResource: starting data task: %{public}@. loadingRequest=%p URL=%{public}@
MPAbstractNetworkArtworkDataSource: -URLSession:task:didCompleteWithError: task finished with error: %{public}@ dataTask=%{public}@
MPAbstractNetworkArtworkDataSource: -URLSession:task:didCompleteWithError: ignoring data [no loading request associated with data task] task=%{public}@
MPAbstractNetworkArtworkDataSource: -URLSession:task:didCompleteWithError: finished loading request: %p. URL=%{public}@ dataTask=%{public}@
MPAbstractNetworkArtworkDataSource: -URLSession:dataTask:willCacheResponse:completionHandler: Updating storage policy from %lu to %lu for dataTask: %{public}@. URL=%{public}@.
MPAbstractNetworkArtworkDataSource: -URLSession:dataTask:willCacheResponse:completionHandler: Decided on storage policy %lu for dataTask=%{public}@. responseURL=%{public}@
MPAbstractNetworkArtworkDataSource: -URLSession:dataTask:didReceiveData: ignoring data [no loading request associated with data task] task=%{public}@
MPAbstractNetworkArtworkDataSource: -URLSession:dataTask:didReceiveData: creating data task using accumulatedData.length. %p dataTask=%{public}@ currentOffset=%lld, requestedLength=%ld requestedOffset=%lld accumulatedData.length=%lu
MPAbstractNetworkArtworkDataSource: -URLSession:dataTask:didReceiveData: creating data task using dataRequest.requestedLength. %p dataTask=%{public}@ currentOffset=%lld, requestedLength=%ld requestedOffset=%lld dataRequest.requestedLength=%lu
MPAbstractNetworkArtworkDataSource: -URLSession:dataTask:didReceiveData: not responding with data [currentOffset was greater than length] task=%{public}@ currentOffset=%lld, requestedLength=%ld requestedOffset=%lld
MPAbstractNetworkArtworkDataSource: -URLSession:dataTask:didReceiveResponse:completionHandler: canceled data task [expectedEntrySize > diskCapacity] dataTask=%{public}@ URL=%{public}@ expectedEntrySize=%lld diskCapacity=%lu
MPAbstractNetworkArtworkDataSource: -URLSession:dataTask:didReceiveResponse:completionHandler: expecting eviction in disk cache - cache will be purged [expectedEntrySize > diskCacheAvailableSize] dataTask=%{public}@ URL=%{public}@ expectedEntrySize=%lld diskCacheAvailableSize=%lld
MPAbstractNetworkArtworkDataSource: -URLSession:dataTask:didReceiveResponse:completionHandler: canceled data task [expectedEntrySize > memoryCapacity] dataTask=%{public}@ URL=%{public}@ expectedEntrySize=%lld memoryCapacity=%lu
MPAbstractNetworkArtworkDataSource: -URLSession:dataTask:didReceiveResponse:completionHandler: expecting eviction in memory cache [expectedEntrySize > memoryCacheAvailableSize] dataTask=%{public}@ URL=%{public}@ expectedEntrySize=%lld memoryCacheAvailableSize=%lld
MPAbstractNetworkArtworkDataSource: -URLSession:dataTask:didReceiveResponse:completionHandler: Decided on disposition %ld for dataTask: %{public}@. URL=%{public}@.storagePolicy=%lu expectedEntrySize=%lld diskCacheAvailableSize=%lld memoryCacheAvailableSize=%lld
Artwork request cannot have a size of zero, catalog: %@, representation kind: %ld
%{public}@ -loadRepresentationOfKind:forArtworkCatalog:completionHandler: %{public}@
%{public}@ Encountered error while requesting artwork for NSURLSessionDataTask: %{public}@. %{public}@
MPAbstractNetworkArtworkDataSource: %p setVideoArtworkCacheURL: error creating directory at URL %{public}@
MPAbstractNetworkArtworkDataSource: %p setVideoArtworkCacheURL: Can't use videoArtworkCacheURL as cache directory [Non-directory file already exists at path] videoArtworkCacheURL=%{public}@
[MPArtwork] Asked to cache response for %{public}@, but no size was set.
-[MPMusicPlayerPlayParameters initWithDictionary:] id or kind missing from playParams dictionary. Returning nil.
MPModelLibraryModelSectionedCollectionDataSource %p: indexPathForItemWithIdentifiersIntersectingSet: adjustedSectionIndex not translated [currentSectionPersistentID not found in _allowedSectionPersistentIDs] adjustedSectionIndex=%zu currentSectionPersistentID=%lld
Received cloud library availability did change notification
Created timer to coalesce MPMediaLibraryEntitiesAddedOrRemovedNotification
Postponing MPMediaLibraryEntitiesAddedOrRemovedNotification timer due to continued notifications
Posting MPMediaLibraryEntitiesAddedOrRemovedNotification
Unexpected content rating format: %@
checking test media folder: %{public}@ -- %{public}@
no fallback test audio file found [TestAudio.<foo>]
no fallback test video file found [TestVideo.<foo>]
NOTE: Mapping file %@ to path %@
BackgroundTask: Took assertion (%lli) at %{public}s:%d
While setting library filter predicates, caught exception %{public}@ trying to read media library
Requesting artwork for %lld - %@
Skipping artwork fetch for %lld - %@
Received artwork for %lld - %@
Disabled keep_local on %lu tracks with status:%d for playlist:%lld
Cancelled keep_local on %lu tracks with status:%d for playlist:%lld
Cleared keep_local on %lu tracks with status:%d for playlist:%lld
Cleared keep_local_status for playlist %lld with status:%d
entityClass %@ (groupingType = %ld) has no ML3Property for MPProperty %@
Disabled keep_local on %lu tracks with status:%d for collection:%lld
Cancelled keep_local on %lu tracks with status:%d for collection: %lld
Cleared keep_local on %lu tracks with status:%d for collection:%lld
Cleared keep_local_status for collection %lld with status:%d
Updating Loved Playlist with likedState=%d for trackID=%lld
71542113: setting time stamp for content taste change=%lld
Fetching global playlists with IDs %{public}@...
Found playlist data for %{public}@
Did not find playlist data for %{public}@
Error fetching playlist data. %{public}@
Successfully imported playlist data. Imported tracks: %@
found container_pid:%lld for global playlistid:%{public}@
Error importing playlist data.
import global playlist with id %@ - add to cloud library: %s...
Successfully added playlist to cloud library.
Failed to add global playlist to cloud library. %{public}@
Adding %llu store items to library (also add to cloud library: %d): %{public}@
Successfully imported track data.
Adding %lld to cloud library...
Failed to import track data. %{public}@
Error adding track(s) to cloud library. %{public}@
Successfully added track(s) to cloud library.
Parsing track data...
Importing %lu tracks...
Error fetching store content for item add. %{public}@
no ML3 collection query for grouping type %@, using items query
Unable to create orderingTerms for properties: %@
Cannot filter search string by %@
MPStoreLibraryPersonalizationCollectionDataSource %p: identifiersForItemAtIndexPath returning MPIdentifierSet.emptyIdentifierSet [unpersonalizedContentDescriptors did not contain MPStoreLibraryPersonalizationContentDescriptor] indexPath=%{public}@ possibleObject=%{public}@
MPStoreLibraryPersonalizationCollectionDataSource %p: identifiersForItemAtIndexPath returning MPIdentifierSet.emptyIdentifierSet [effectiveOriginalObject has no identifiers] indexPath=%{public}@ effectiveOriginalObject=%{public}@
MPStoreLibraryPersonalizationCollectionDataSource %p: identifiersForItemAtIndexPath returning MPIdentifierSet.emptyIdentifierSet [libraryIdentifiers unionSet: failed] indexPath=%{public}@ libraryIdentifiers=%{public}@ originalIdentifiers=%{public}@
MPStoreLibraryPersonalizationCollectionDataSource %p: identifiersForItemAtIndexPath returning MPIdentifierSet.emptyIdentifierSet [originalObject has no identifiers] indexPath=%{public}@ originalObject=%{public}@
[MPMediaPlaybackItemMetadata] Store download cannot be created for %@ due to missing buy parameters with endpoint type: %ld
[MPMediaPlaybackItemMetadata] Store download cannot be created for %@ due to missing adam ID with endpoint type: %ld
MPModelLibrarySearchRequestOperation: NULL utf8 from string: '%{public}@'
Failed to update MXSessionIDs: %{public}@ for player path: %{public}@. Error: %{public}@
[MPNowPlayingSessionManager] Failed to set contextUID: %@ for session with ID: %u
[MPNowPlayingSessionManager] Destroying player: %@
[MPNowPlayingSessionManager] Creating new player: %@, routingContextID: %@
-setPlaylistProperties:trackList:forPlaylistWithPersistentID:completionHandler: completed. error: %{public}@
-setPlaylistProperties:trackList:forPlaylistWithPersistentID:completionHandler: completed.
-addStoreItemWithAdamID:referralObject:toPlaylistWithPersistentID:completionHandler: completed. error: %{public}@
-addStoreItemWithAdamID:referralObject:toPlaylistWithPersistentID:completionHandler: completed.
-addItemWithSagaID:toPlaylistWithPersistentID:completionHandler: completed. error: %{public}@
-addItemWithSagaID:toPlaylistWithPersistentID:completionHandler: completed.
[MPArtwork] Failed to create directory at '%{public}@' with error: %{public}@
[MPArtwork] Could not write resized image to %{public}@: Failed to finalize CGImageDestination
MPMediaLibrarySystemFilters %p - Updating filters - Library: %@ - has cloud library revision: %{BOOL}u - purchase history excluded: %{BOOL}u
MPMediaLibrarySystemFilters %p - Init with library: %@
+MPMediaLibrarySystemFilters - filtersForLibrary: %@ - filters:%@
MPPlaybackUserDefaults: _loadAccountProperties: getPropertiesForUserIdentity: identity=%{public}@ error: %{public}@
%{public}@ Failed to save private listening setting for home user id %{public}@. err=%{public}@
%{public}@ Failed to find account for home user id %{public}@. err=%{public}@
[PlaybackUserDefaults] setAutoPlayEnabled:forUserIdentity: %{BOOL}u userIdentity=%{public}@
[PlaybackUserDefaults] autoPlayEnabledForUserIdentity: %{BOOL}u userIdentity=%{public}@
Attempting to setSystemVolumeHUDEnabled for application that supports UIScene lifecycle (enabled: %{BOOL}u | category: %{public}@ | volumeDisplays: %{public}@)
systemMusicPlayer _establishConnectionIfNeeded failed [
 denied due to authorization status]
systemMusicPlayer _establishConnectionIfNeeded failed [application not installed]
systemMusicPlayer _establishConnectionIfNeeded timeout [ping did not pong]
systemMusicPlayer:connect
woke=%{BOOL}u
systemMusicPlayer connection invalidated
systemMusicPlayer connection interrupted
openToPlayQueueDescriptor
openToPlayQueueDescriptor:prepare
openToPlayQueueDescriptor: failed [prepare failed] error=%{public}@
openToPlayQueueDescriptor:openURL
success=%{BOOL}u
openToPlayQueueDescriptor: failed [open URL failed]
failed to open URL
setUserQueueModificationsDisabled:
userQueueModificationsDisabled
disabled=%{BOOL}u
systemMusicPlayer playbackState returning paused due to cached data
No country code found in bag, can't create storefront endpoint URL: %{public}@
No music subscription dictionary in bag, can't get subscription properties to generate URL: %{public}@
No grouping name in music subscription dictionary of bag, can't generate URL pointing to right grouping: %{public}@
%{public}@ instantiated parser: %{public}@.
%{public}@ - endObservingCloudLibraryEnabled - Unregistering for ICCloudClientIsAuthenticatedDidChangeNotification
%{public}@ - beginObservingCloudLibraryEnabled - Registering for ICCloudClientIsAuthenticatedDidChangeNotification
%{public}@ - Error retrieving user identity properties [Processing identity change] - identity=%@ - error=%{public}@
%{public}@ - Cloud library status changed [%ld -> %ld] - Posting MPCloudServiceStatusControllerCloudLibraryEnabledDidChangeNotification
%{public}@ - Received notification [ICCloudClientIsAuthenticatedDidChangeNotification]
%{public}@ - Received notification [%{public}@]
%{public}@ - Creating new controller for user identity %@
%{public}@ - New instance created for user identity: %@
%{public}@ - Related controller posting notification [%@]
%{public}@ - No pre-existing controller for user identity %@
%{public}@ - Request for a controller with user identity %@
[MPStoreItemImportTrackData] Unknown import property for metadata key %{public}@
[InfoCenter] (%{public}@) sending content items changed: %{public}@
[InfoCenter] (%{public}@) sending content item changed: %{public}@
[InfoCenter] (%{public}@) Content item mutated [already enqueued for update]: %{public}@
[InfoCenter] (%{public}@) Content item mutated: %{public}@
Using deprecated contentItem-based artwork.
Using deprecated -contentItemForOffset: playback queue datasource.
[InfoCenter] (%{public}@) invalidatePlaybackQueue [no change detected]
[InfoCenter] (%{public}@) invalidatePlaybackQueue [nowPlayingItemDidChange] %{public}@ -> %{public}@
[InfoCenter] (%{public}@) invalidatePlaybackQueue [identifiersDidChange]
becomeActivePlayerIfPossible: %{public}@ error: %{public}@
becomeActivePlayerIfPossible: %{public}@
becomeActivePlayer: %{public}@ failed %{public}@
becomeActivePlayer: %{public}@
NPIC: setNowPlayingInfo: sending to MediaRemote
NPIC: setNowPlayingInfo: finished error: %{public}@
NPIC: setNowPlayingInfo: finished
Could not populate container %{public}@: %{public}@
[MPHomeSharingML3DataProvider] Home Sharing Library became unavailable: %{public}@
%{public}@: Failure to update shared library: %{public}@
[MPHomeSharingML3DataProvider] Home sharing group ID changed to: %{public}@
Updating rental playback start date
[MPHomeSharingML3DataProvider] Creating error resolver for item ID: %llu, account ID: %llu, rental ID: %llu
[MPHomeSharingML3DataProvider] Creating error resolver for media item: %{public}@ (accountID: %llu, accountTokenData: %llu bytes, downloaderAccountID: %llu, downloaderTokenData: %llu bytes)
Cannot create error resolver for media item: %{public}@ (accountID: %llu, accountTokenData: %llu bytes, downloaderAccountID: %llu, downloaderTokenData: %llu bytes)
[MPHomeSharingML3DataProvider] Creating error resolver for account ID: %llu, token data length: %lu
Cannot create error resolver for media item: %{public}@ (accountID: %llu, tokenData: %llu bytes)
[MPHomeSharingML3DataProvider] Sending request '%{public}@'
[MPHomeSharingML3DataProvider] Setting property '%{public}@' to '%{public}@' returned status code %lu
[MPHomeSharingML3DataProvider] Removing oldest cached library: %{public}@
[MPHomeSharingML3DataProvider] [Browse] No group ID known, trying to determine it from user defaults account / password.
[MPHomeSharingML3DataProvider] Determined group ID: %{public}@
[MPHomeSharingML3DataProvider] [Browse] Ending scan.
[MPHomeSharingML3DataProvider] [Browse] Beginning scan.
[MPHomeSharingML3DataProvider] [Browse] Group ID: %{public}@
[MPHomeSharingML3DataProvider] [Browse] No group ID, skipping scan.
[MPHomeSharingML3DataProvider] [Browse] Searching for libraries in home sharing group: %{public}@
[MPHomeSharingML3DataProvider] [Browse] Browser: %{public}@ Removed %{public}@
[MPHomeSharingML3DataProvider] [Browse] Found library %{public}@
[MPHomeSharingML3DataProvider] [Browse] Added %{public}@
[MPHomeSharingURLProtocol] Starting loading for %{public}@
[MPArtwork] Failed to deprioritize artwork request %{public}@ 
 unknown artwork source type
SOD: modelObjectMatchingIdentifierSet [missing personID, defaulting to 'Unknown-PersonID']
SOD: modelObjectMatchingIdentifierSet stepError: %{public}@
SOD: Unable to create objects table. error: %{public}@
SOD: Unable to create assets table. error: %{public}@
SOD: Unable to create object relationships table. error: %{public}@
SOD: Unable to create playback authorzation token table. error: %{public}@
SOD: _MPServerObjectDatabaseAssetsMatchingIdentifierSet [missing personID, defaulting to 'Unknown-PersonID']
SOD: _MPServerObjectDatabaseAssetsMatchingIdentifierSet query='%{public}@' stepError=%{public}@
SOD: Unable to create database schema. Attempting fallback to in-memory database.
SOD: payloadForRelatedEntityWithIdentifierSet [missing personID, defaulting to 'Unknown-PersonID']
SOD: payloadForRelatedEntityWithIdentifierSet stepError: %{public}@
SOD: payloadForRelatedEntityWithIdentifierSet jsonError: %{public}@
SOD: Unable to create statements. error: %{public}@
SOD: _existingAssetMatchingIdentifier stepError: %{public}@
SOD: _existingAssetMatchingIdentifier=%p for identifier=%{public}@, flavor=%d
SOD: importAssetFullSINF: %{public}@
SOD: importAssetMiniSINF: %{public}@
SOD: removeRelationshipsForParentIdentifiersError: %{public}@
SOD: relateIdentifiers:toParentIdentifiers:order: %{public}@
SOD: importing miniSinf finished with status=%{BOOL}u
SOD: importing fullSinf finished with status=%{BOOL}u
SOD: importAssetSinf: skipping [existing sinf already in database] id=%{public}@ / flavor=%{public}@
SOD: Not updating sinfs of type=%d as asset matching identifiers=%{public}@, flavor=%d does not exist
SOD: importAssetURL: updating URL [existing asset already in database] id=%{public}@ / flavor=%{public}@
SOD: importAssetURL: skipping [existing asset already in database] id=%{public}@ / flavor=%{public}@
SOD: upsertAssetError: %{public}@
SOD: importObject: stepError: %{public}@
SOD: importObject: jsonError: %{public}@ payload=%{public}@
SOD: insertObjectError: %{public}@
SOD: enumerateAssetsMissingSINFsUsingBlock stepError: %{public}@
SOD: relatedIdentifierSetsForParentIdentifierSet [missing personID, defaulting to 'Unknown-PersonID']
SOD: relatedIdentifierSetsForParentIdentifierSet stepError: %{public}@
SOD: modelObjectMatchingIdentifierSet jsonError: %{public}@
SOD: databasePath: %{public}@
SOD: Unable to create server objects database at path=%{public}@ error=%{public}@
[MPHomeSharingRentalTracker] Saving rentals to %{public}@
[MPHomeSharingRentalTracker] Removing all rentals for database ID: %{public}@
[MPHomeSharingRentalTracker] Removing rental with item ID: %{public}@
Failed to checkin rental to iTunes Store.
[MPHomeSharingRentalTracker] iTunes rental checkout response: %{public}@
Failed iTunes side checkout request (response code = %lu)
[MPHomeSharingRentalTracker] Adding rental with item ID: %llu, database ID: %{public}@
[MPHomeSharingRentalTracker] Loading rentals from %{public}@
Dropping empty node: %{public}@
Property href of contents dictionary not found for recommendation item: %{public}@
Contents dictionary not found on relationships of recommendation item: %{public}@
Relationships dictionary not found on recommendation item: %{public}@
Recommendation item should be a dictionary: %{public}@
Recommendation item modeling failure: %{public}@
[MPHomeSharingErrorResolver] Token response: %{public}@
[MPHomeSharingErrorResolver] Got keybag data of length: %lu
[MPHomeSharingErrorResolver] Got token data of length: %lu
[MPHomeSharingErrorResolver] Reconnecting to HomeSharing Library for error: %{public}@
[MPRemoteCommandCenter] setSupportedCommands playerPath=%{public}@ %{public}@
Error setting supported commands error: %{public}@
RCC: dispatchCommandEvent: received nil commandEvent
RCC: dispatchCommandEvent: command=%{public}@
CommandDispatch
commandType=%ld
RCC: dispatchCommandEvent: command=%p finished
Updated launch commands error: %{public}@
Updated launch commands
[MPHomeSharingRentalErrorResolver] Rental checkout finished
[MPHomeSharingRentalErrorResolver] iTunes set rental playback start date response: %{public}@
[MPHomeSharingRentalErrorResolver] Rental checkout failed: %{public}@
[MPHomeSharingRentalErrorResolver] Checking out rental on iTunes side after failure with item ID: %llu homesharing ID: %llu
[MPHomeSharingRentalErrorResolver] iTunes rental checkout response: %{public}@
[MPHomeSharingRentalErrorResolver] Checking in rental on iTunes side with item ID: %llu homesharing ID: %llu
[MPHomeSharingRentalErrorResolver] iTunes rental check-in response: %{public}@
[MPHomeSharingRentalErrorResolver] Checking out rental for rental ID: %llu, account ID: %llu
[MPHomeSharingRentalErrorResolver] iTunes rental check-in failed
%{public}@ - _resignActive - Resigning
%{public}@ - _resignActive - Removing update handlers on inactive account
%{public}@ - _becomeActiveAndWaitUntilDone: - Activating
%{public}@ - _initializeUpdateInProgressState - Setting up Saga update progress handler
%{public}@ - _initializeUpdateInProgressState - Setting up Jalisco update progress handler
%{public}@ - Setting JaliscoLibraryUpdateInProgress to %{BOOL}u JaliscoLibraryInitialImport to %{BOOL}u - Posting MPCloudControllerIsUpdateInProgressDidChangeNotification [Jalisco]
%{public}@ - Setting CloudLibraryUpdateInProgress to %{BOOL}u CloudLibraryInitialImport to %{BOOL}u - Posting MPCloudControllerIsUpdateInProgressDidChangeNotification [Saga]
%{public}@ - _loadIsSagaAuthenticatedWithCompletion: - Requesting cloud authentication state [cloudEnabled=%{BOOL}u]
%{public}@ - _loadIsSagaAuthenticatedWithCompletion: - Retrieved cloud authentication state [isAuthenticated=%{BOOL}u]
%{public}@ - _loadIsSagaAuthenticatedWithCompletion: - Cloud authentication did change [%{BOOL}u -> %{BOOL}u] - Posting notifications [MPCloudControllerIsCloudEnabledDidChangeNotification]
%{public}@ - isCloudEnabled=%d, didHandleStateChange=%d
%{public}@ - Skipping all properties for setItemProperties:forPurchaseHistoryID: %{public}@
[MPCloudController] Failed to find ML3 equivalent for property: %{public}@
%{public}@ - reason=%d, disableCloudLibraryReason=%d
[CloudPersonalization] Deprioritize artwork request not supported for artworkType=%ld, sourceType=%ld
%{public}@ - Skipping all properties for setItemProperties:forSagaID: %@
%{public}@ - Skipping all properties for setPlaylistProperties:trackList:forPlaylist:completionHandler: %@
%{public}@ - Received notification [%@]
NULL image being analyzed.
Zero-sized image being analyzed.
%{public}@ was paused for playback queue transaction, but route changed. Not resuming after playback queue transaction commits.
Setting default EQ to %ld
 AVPlayerCurrentItemDidChangeNotification
[{public}%@] Setting uses external playback while external screen is active to %{public}@ on player %{public}@ (not enqueued)
[%{public}@] Setting uses external playback while external screen is active to %{public}@ on player %{public}@ (enqueued)
[%{public}@] Setting uses audio only mode for external playback to %{public}@ on player %{public}@ (not enqueued)
[%{public}@] Setting uses audio only mode for external playback to %{public}@ on player %{public}@ (enqueued)
Setting rate on AVQueuePlayer: %f
Ignoring requested rate (%f), route changed during playback queue transaction.
[%{public}@] Setting allows external playback to %{public}@ on player %{public}@ (not enqueued)
[%{public}@] Setting allows external playback to %{public}@ on player %{public}@ (enqueued)
Restoring rate to %f after playback queue transaction.
Committing playback queue transaction, %lu queued operations.
Setting rate to 0 for playback queue transaction.
Beginning playback queue transaction.
 MPQueuePlayer currentItem changed: %{public}@ -> %{public}@
 MPQueuePlayer rate changed: %f -> %f
 MPQueuePlayer item status changed: %{public}@ -> %{public}@
 insufficient external protection changed
MP->AV QueuePlayer Log Mapping: %{public}@ -> %{public}@
%{public}@: Got bag from server environment %{public}@ with correlation key %{public}@.
Determined effective cloud network type: %ld
Determined average bitrate for %{public}@: %f
RRC %{public}@: Request loading skipped [no request]
RRC %{public}@: Request loading skipped [already loading]
RRC %{public}@: Request loading skipped [not needed]
RRC <%{public}@ %p>: Request finished loading
RRC <%{public}@ %p>: Request failed with error: %{public}@
RRC <%{public}@ %p>: Recovering from error. shouldRetry: %d
RRC <%{public}@ %p>: Delegate %p returned shouldRetry: %d
RRC %{public}@: Reloading [retry mismatched request revision]
RRC <%{public}@ %p>: Deferring replacement of %p to delegate %p
RRC <%{public}@ %p>: Replacing response
RRC <%{public}@ %p>: Delegate %p replacing response with %p
RRC <%{public}@ %p>: Delegate %p timeout replacing response.
RRC <%{public}@ %p>: Needs reload [failed request]
RRC <%{public}@ %p>: Scheduling retry after %fs
RRC %{public}@: Reloading [retry, failed request]
RRC %{public}@: Scheduled reload skipped.
RRC %{public}@: Needs reload [response invalid]
RRC %{public}@: Reloading [automatic, response invalid]
RRC %{public}@: Reloading [requested by client]
RRC %{public}@: Deferring clearing of %p to delegate %p
RRC %{public}@: Clearing response
RRC %{public}@: Delegate %p clearing response with %p
RRC %{public}@: Delegate %p timeout replacing response.
RRC %{public}@: Needs reload [request by client]
RRC %{public}@: Canceling request [request by client]
RRC %{public}@: Reloading [automatic, requested by client]
RRC %{public}@: Ending automatic reloading
RRC %{public}@: Starting automatic reloading
RRC %{public}@: Reloading [automatic, beginLoading]
RRC %{public}@: Removing observer for %p
RRC %{public}@: Updating response to %p
RRC %{public}@: Needs reload [response invalid before -setResponse:]
RRC %{public}@: Reloading [response invalid before -setResponse:]
RRC %{public}@: Adding observer for %p
RRC %{public}@: Needs reload [response invalid before -setResponse: after adding observer]
RRC %{public}@: Reloading [response invalid before -setResponse: after adding observer]
RRC %{public}@: Canceling request [request changed]
RRC %{public}@: Needs reload [request changed]
RRC %{public}@: Reloading [automatic, request changed]
RRC %{public}@: Ending automatic reloading [dealloc]
No domains in music common dictionary of bag, can't generate URL: %{public}@
No host found for API domain requested (%{public}@): %{public}@
No music subscription dictionary in bag, can't get allowed FCKinds for CarPlay: %{public}@
CarPlay FCKinds allow list not found in musicSubscription dictionary, wrongly typed or empty: %{public}@
Encountered negative FCKind in CarPlay FCKinds allow list in bag, dropping it: %{public}@
SIL-Proxy %{public}@: updateItem item=%{public}@
SIL-Proxy %{public}@: updateSection
SIL-Proxy %{public}@: removeItem item=%{public}@
SIL-Proxy %{public}@: moveItemToTail item=%{public}@
SIL-Proxy %{public}@: moveItem:afterItem: item=%{public}@ afterItem=%{public}@
SIL-Proxy %{public}@: moveItemToHead item=%{public}@
SIL-Proxy %{public}@: insertItemsAtTail itemsCount=%lld
SIL-Proxy %{public}@: insertItems:afterItem: afterItem=%{public}@ itemsCount=%lld
SIL-Proxy %{public}@: insertItemsAtHead itemsCount=%lld
SIL-Proxy %{public}@: init sil=%{public}@ itemsCount=%lld
section=%{public}@
SIL-Replace-Reload
SIL-Replace
SIL-Replace-Enumerate
%{public}s: Changing %{public}@ preference to %{BOOL}u.
[EndpointRoutingDataSource] Route search failed with error: %@
[EndpointRoutingDataSource] Successfully found and picked route.
<%{public}@: %p> setting routing context UID = %{public}@
<%{public}@: %p>_targetSessionID setting target session ID = %{public}d
Cannot post _MPContentItemDidChangeNotification, item is missing required identifier.
<_MPActiveUserChangeMonitor %p> - Canceled notification timer %p [%{public}@]
<_MPActiveUserChangeMonitor %p> - Started notification timer %p
<_MPActiveUserChangeMonitor %p> - Ingesting notification %{public}@ [%ld of %ld]
<_MPActiveUserChangeMonitor %p> - Firing notification timer %p [%ld of %ld notifications received] - received=[%{public}@] - expected=[%{public}@]
RCC: invokeCommandWithEvent: handler=%{public}@ event=%{public}@
RCC: invokeCommandWithEvent: finished handler=%{public}@ event=%p
RCC: Command handler completion timeout. Not waiting on completion. event=%{public}@
Unsupported action method signature. Must return MPRemoteCommandHandlerStatus or take a completion handler as the second argument. ** This will break in a future release. **
Did not find playlist for identifiers: %{public}@
Reset predicted outputDevice
Output device UIDs determined to be available. Output devices from AVODDS will no longer be ignored.
Output device UIDs determined to be unavailable. Output devices from AVODDS will be ignored.
picked endpoint route, set devices: %{public}@
picked endpoint route, clear system endpoint: %{public}@
Found picked device with nil UID: %{public}@
Found discovery device with nil UID: %{public}@
<%{public}@:%p> Setting predicted device: %@
<%{public}@:%p> setting routing context UID = %{public}@
Created new application output context: %{public}@ for data source: %{public}@
<%{public}@: %p> External device: %{public}@ changed endpoint to: %{public}@
[BaseRoutingDataSource] Active audio category changed from %{public}@ to %{public}@
[BaseRoutingDataSource] Received active audio route did change notification: %{public}@
[BaseRoutingDataSource] Received external screen type did change notification with screen type = %ld
[BaseRoutingDataSource] Unpicking AirPlay AV routes...
[BaseRoutingDataSource] Failed to unpick AirPlay AV routes: %{public}@
[BaseRoutingDataSource] Successfully unpicked AirPlay AV routes
Failed to encode cached queue descriptor error: %{public}@
Failed to decode cached queue descriptor error: %{public}@
Failed to encode cached now playing error: %{public}@
Failed to decode cached now playing error: %{public}@
Omitting personalizedStore IDs [missing databaseID] identifierSet=%{public}@
Omitting library IDs [missing databaseID] identifierSet=%{public}@
Adjusting local endpoint volume by: %f
Setting local endpoint volume to: %f
Setting AVSystemController volume to: %f
%@ routeVolumeControlCapabilitiesDidChange %{public}@
%@ routeVolumeDidChange %f
%@ Error getting master volume: %{public}@
%@ Error getting output device volume: %{public}@
%@ initializeVolume
%@ initializeVolume - Error getting master volume: %{public}@
%@ initializeVolume - Error getting group volume control capabilities: %{public}@
%@ initializeVolume - Error getting output device volume: %{public}@
%@ initializeVolume - Error getting output device volume control capabilities: %{public}@
%@ initializeVolume - volume capabilities will change to %{public}@
%@ initializeVolume - volume will change to %f
%@ setOutputDeviceVolume: %@ to: %f for endpoint: %@
%@ setVolume to: %f endpoint: %@
%@ Error setting group volume: %{public}@
%@ Error setting output device volume: %{public}@
Download did change %{public}@ with no existing download.
Download did change: %{public}@. Download: %{public}@
Download states did change: %{public}@, progressed downloads: %{public}@, added downloads: %{public}@, finished: %{public}@
[%{public}@] UNKNOWN PURCHASE TYPE: %li
Failed to move download: %{public}@ with error: %{public}@
Failed to move purchase: %{public}@ with error: %{public}@
Failed to restart downloads %{public}@ with error %{public}@
Finished attempted restart with removed downloads: %{public}@
Failed to resume downloads %{public}@ with error %{public}@
Failed to pause downloads %{public}@ with error %{public}@
Caneled purchases %{public}@ error: %{public}@
Caneled purchases %{public}@
Paused downloads %{public}@ error: %{public}@
Paused downloads %{public}@
Failed to cancel downloads %{public}@ with error %{public}@
Failed to cancel purchases %{public}@ with error %{public}@
Cancelled purchases %{public}@, result %d error: %{public}@
Cancelled purchases %{public}@, result %d
Cancelled downloads %{public}@ error: %{public}@
Cancelled downloads %{public}@
MPModelStoreBrowseContentItemBuilder
NSFastEnumeration
MPMediaDownloadManager
MPModelForYouRecommendationsMusicKitRequestOperation
NSObject
MPStoreSocialRequestOperationDataSource
MPStoreSocialUnblockOperationDataSource
MPMediaLibraryView
NSCopying
MPUtilities
MPRequest
MPMiddlewareOperation
MPResponse
MPModelResponse
MPModelLyrics
MPModelLyricsKind
MPAssistantAnalyticsReportingController
MPUniversalTrackIDAdditions
MPRTCReportingSession
MPTiledArtworkRequest
MPRTCReportingEvent
MPModelLibraryDeleteEntityChangeRequestOperation
MPAVItem
MPAVItemAdditions
MPStoreItemMetadataRequest
MPQueueFeeder
MPModelLibraryDeleteEntityChangeRequest
MPStoreItemMetadata
NSSecureCoding
NSCoding
MPTiledArtworkDataSource
MPArtworkDataSource
_MPModelLibraryRequestItemsQueryOperation
MPModelLibraryRequestOperation
4@P a
MPModelTVEpisodePlaybackItemMetadata
MPAVController
AVAudioSessionDelegateMediaPlayerOnly
AVAudioSessionDelegate
MPAVQueueControllerDelegate
MPAVRoutingControllerDelegate
MPArtworkCatalog
MPStoreItemMovieClip
MPRadioStationEvent
MPMutableRadioStationEvent
MPRadioController
MPStoreModelRadioStationBuilder
MPModelSong
MPModelSongKind
MPAVTelevisionRoutingDataSource
MPAssistantLogEvent
MPAssistantMusicLogEvent
MPNowPlayingInfoAudioFormat
MPMediaLibraryAlbumAppData
MPStoreFileAssetInfo
MPMediaRemoteEntityTranslatorContext
MPEntityPropertyTranslator
_MPMediaRemoteEntityPropertyTranslator
MPMediaRemoteEntityTranslator
MPWeakTimer
MPModelLibraryKeepLocalChangeRequest
MPPCompoundPredicate
MPAVPolicyEnforcer
MPTiledArtworkRepresentationCacheKey
MPLocalMediaQueryRemotePlaybackQueue
MPRemotePlaybackQueue
MPEmptyPlaybackQueue
MPCustomDataPlaybackQueue
MPGeniusPlaybackQueue
MPGenericTracklistPlaybackQueue
MPRadioStationRemotePlaybackQueue
MPRouteButton
MPStoreLyricsRequest
MPModelPodcastAuthor
MPRadioRecentStationsGroup
MPModelStoreBrowseSectionBuilder
MPModelStoreGroupingsMusicKitResponseParser
MPStoreModelAlbumBuilder
MPShuffleableSectionedIdentifierList
_MPSSILDelegate
MPShuffleableSectionedIdentifierListDelegate
MPSectionedIdentifierListDelegate
_MPSSILImplementation
_MPSSILImplementationInitToken
MPStoreLyricsSnippetRequest
MPModelLibrarySearchScope
MPModelLibraryAlbumAppDataChangeRequestOperation
MPModelRecentlyPlayedRequest
MPModelLibraryAddToPlaylistChangeRequest
MPModelStoreBrowseResponse
MPArtworkResizeUtility
MPAVLightweightRoutingController
MPSectionedCollection
NSMutableCopying
MPMutableSectionedCollection
MPModelSupport
MPAdditions
MPStoreModelTVShowBuilder
MPModelPlayEvent
Convenience
MPModelForYouRecommendationsResponse
MPModelStoreRadioMusicKitRequestOperation
MPSectionedIdentifierListEnumerator
_MPSectionedIdentifierListProxyEntry
MPSectionedIdentifierListEnumerationResult
MPSectionedIdentifierListReverseEnumerator
MPFastForward
MPStoreHLSAssetInfo
MPAssistantMusicSummaryLogEvent
MPVolumeSlider
MPVolumeDisplaying
MPVolumeControllerDelegate
MPVolumeView
MPAVLightweightRoutingControllerDelegate
MPModelLibraryRequest
MPModelRequestDetailedKeepLocalStatusRequesting
MPModelLibraryResponse
MPModelResponseDetailedKeepLocalStatusRequesting
MPModelLibraryResponseKeepLocalStatusConfiguration
MPMediaLibraryPlaybackItemMetadata
MPModelForYouRecommendationsRequest
MPSectionedIdentifierListEntryPositionKey
MPSectionedIdentifierListEntry
MPSectionedIdentifierListEnumerationTrackingEntry
MPSectionedIdentifierListEnumerationItem
MPSectionedIdentifierListTailEntry
MPSectionedIdentifierListHeadEntry
MPSectionedIdentifierListItemEntry
MPRemoteCommandEvent
MPSeekCommandEvent
MPLeaveSharedPlaybackSessionCommandEvent
MPPostEventNoticeCommandEvent
MPChangeQueueEndActionCommandEvent
MPPlaybackSessionCommandEvent
MPPreloadPlaybackSessionCommandEvent
MPSetPlaybackSessionCommandEvent
MPReorderQueueCommandEvent
MPAdvanceRepeatModeCommandEvent
MPAdvanceShuffleModeCommandEvent
MPInsertIntoPlaybackQueueCommandEvent
MPSetPlaybackQueueCommandEvent
MPCreateRadioStationCommandEvent
MPChangeShuffleModeCommandEvent
MPChangeRepeatModeCommandEvent
MPChangePlaybackPositionCommandEvent
MPSpecialSeekCommandEvent
MPChangeLanguageOptionCommandEvent
MPSkipTrackCommandEvent
MPFeedbackCommandEvent
MPRatingCommandEvent
MPChangePlaybackRateCommandEvent
MPSkipIntervalCommandEvent
MPArtworkImageAttachments
MPModelLibraryDefaultSectionedCollectionDataSource
MPLazySectionedCollectionDataSource
MPModelStoreBrowseRequest
MPModelArtist
MPModelArtistKind
MPAVRoutingController
MPAVRoutingControllerSelectionQueue
MPAVRoutingControllerSelection
MPModelComposer
MPModelComposerKind
MPServerObjectDatabaseImportRequest
MPServerObjectDatabaseImportResult
MPServerObjectDatabaseMetadataImportRequest
MPServerObjectDatabaseMediaKitImportRequest
MPServerObjectDatabaseStorePlatformImportRequest
MPServerObjectDatabaseAssetImportRequest
MPServerObjectDatabaseSubPlaybackDispatchImportRequest
MPServerObjectDatabaseSINFImportRequest
_MPModelShimRequestMiddlewareOperation
MPModelShimRequest
_MPModelShimRequestMiddleware
MPMiddleware
MPModelShimResponse
_MPModelShimResponseBuilder
MPRTCReportingPrepareInternalSessionOperation
_MPMediaLibraryMLCoreStorage
MediaLibraryCore
MPModelStoreBrowseSectionUniformContentItemTypeResolver
MPContentItemAdditions
MPPlaybackContext
MPContentTasteController
MPStoreItemMetadataRequestController
MPModelStoreBrowseMusicKitRequestOperation
MPButton
MPMediaPlaylist
MPMediaPlaylistCreationMetadata
MPModelTVEpisode
MPModelTVEpisodeKind
MPModelLibraryGlobalPlaylistImportChangeRequestOperation
MPPlaybackArchiveConfiguration
MPPlaybackArchive
MPMutablePlaybackArchive
MPMediaQuery
MPPProtobufferCoding
MPMediaPropertyPredicate
MPMediaPredicate
MPMediaConditionalPredicate
MPMediaCompoundPredicate
MPMediaCompoundAllPredicate
MPMediaCompoundAnyPredicate
MPMediaContainmentPredicate
MPMediaPersistentIDsPredicate
_MPMediaSearchStringPredicate
MPMediaQueryAdditions
MPModelLibraryImportChangeRequestOperation
MPStoreModelPlaylistBuilder
MPMusicPlayerController
MPMediaPlayback
MPMusicPlayerControllerClient
_MPMusicPlayerMediaItemProxy
NewMP
_MPStaticArtworkVisualIdenticalityIdentifier
MPArtworkRepresentation
MPArtworkRepresentationCollection
_MPArtworkCatalogPlaceholderDataSource
_MPArtworkCatalogStaticDataSource
MPArtworkDataSourceVisualIdenticality
_MPArtworkCatalog
MPPConditionalPredicate
MPAsyncOperation
MPUserIdentityConsuming
MPMediaItem
MPNondurableMediaItem
MPMediaItemArtwork
MPSectionedIdentifierListIdentifierPair
MPModelLibraryKeepLocalStatusRequestOperation
QueryCriteriaResultsCache
MPMediaLibrary
_MPActiveUserChangeMonitorDelegate
MPMediaLibraryConnectionAssertion
0 0@
_MPMediaLibraryEntityChange
MPMediaLibraryContentProtectionAdditions
MPMediaLibrarySyncAnchorSupport
MPModelRequest
MPAVQueueCoordinator
MPAVQueueCoordinating
MPLogDescription
MPAVQueueCoordinatorAdditions
_MPModelMediaRemoteItemArtist
_MPModelMediaRemotePodcastEpisodeAuthor
MPStoreLyricsSnippetRequestOperation
MPStoreModelMovieMediaClipBuilder
MPLibraryKeepLocalStatusObserver
MPMediaDownloadObserver
MPLibraryKeepLocalStatusObserverIndividualEntityConfiguration
MPLibraryKeepLocalStatusObserverConfiguration
MPLibraryKeepLocalStatusObserverDetailedContainerConfiguration
MPMediaItemCollection
MPNotificationObserver
MPMediaDownload
MPStoreModelArtistBuilder
MPModelRadioStationEvent
MPModelRadioStationEventKind
MPAVErrorResolverBlockHandler
MPAVErrorResolverDelegate
MPDetailSlider
MPDetailScrubControllerDelegate
MPDetailedScrubbing
MPMusicPlayerApplicationController
MPMusicPlayerControllerApplicationServer
MPMusicPlayerControllerServer
MPMusicPlayerControllerServerActions
MPRemotePlayerServiceProtocol
MPMusicPlayerControllerQueue
_MPMusicPlayerQueueItemsProxy
MPMusicPlayerControllerMutableQueue
MPStoreLyricsResponse
MPStoreLyricsRequestOperation
MPModelRecentlyPlayedResponse
MPMediaAPIParserLayer
MPAudioDeviceController
_MPLazySectionedCollectionStorage
MPLazySectionedCollection
MPModelStaticAsset
MPModelStaticAssetKind
MPStoreModelSongBuilder
MPModelObjectMediaItem
MPStoreItemMetadataCache
MPNowPlayingInfoLyricsItemToken
MPNowPlayingInfoLyricsItem
MPNowPlayingInfoLyricsEvent
MPStoreSocialFollowOperationDataSource
MPAVAuxiliaryDevice
_MPAbstractNetworkArtworkDataSourceVisualIdenticalityIdentifier
MPAbstractNetworkArtworkDataSource
AVAssetResourceLoaderDelegate
NSURLSessionDataDelegate
NSURLSessionTaskDelegate
NSURLSessionDelegate
_MPArtworkDataSourceURLCache
MPMusicPlayerQueueDescriptor
MPMusicPlayerMediaItemQueueDescriptor
MPMusicPlayerStoreQueueDescriptor
MPMusicPlayerPlayParameters
MPMusicPlayerPlayParametersQueueDescriptor
MPMusicPlayerRadioStationQueueDescriptor
MPMusicPlayerPlaybackArchiveQueueDescriptor
MPModelSortDescriptor
MPMultiSortDescriptor
MPModelLibraryModelSectionedCollectionDataSource
MPAVErrorResolver
MPAVErrorResolverAdditions
MPModelMediaClip
MPModelMediaClipKind
MPMRAVEndpointWrapper
MPMRAVOutputContextWrapper
MPMRAVEndpointObserverWrapper
MPConcreteMediaItem
MPCacheableConcreteMediaEntity
MPConcreteMediaItemArtwork
MPConcreteMediaItemCollection
MPConcreteMediaPlaylist
MPMediaArray
MPMediaEntityResultSetArray
MPConcreteMediaEntityPropertiesCache
MPMediaLibraryDataProviderML3
MPMediaLibraryDataProviderPrivate
MPMediaLibraryDataProvider
MPMediaLibraryAdditions
MPMediaLibraryDataProviderML3Additions
MPAVRouteConnection
ML3Additions
MPModelStaticRequest
MPModelStaticResponse
MPModelLibraryAlbumAppDataChangeRequest
MPStoreFileAssetFairPlayInfo
MPMediaEntity
MPMediaQuerySectionInfo
MPMediaQueryMutableSectionInfo
MPVolumeController
MPVolumeControllerDataSourceDelegate
MPMediaChapter
MPStoreLibraryPersonalizationCollectionDataSource
MPAudioVideoRoutingPopoverController
MPMediaPlaybackItemMetadata
MPMediaPlaybackItemMetadataAdditions
MPKeyValueObserver
MPModelLibrarySearchRequestOperation
MPStoreItemOffer
MPNowPlayingSession
MPBaseEntityTranslator
_MPBaseEntityRelationshipTranslator
MPEntityRelationshipTranslator
MPAVOutputDeviceDescription
MPAVRoute
MPModelForYouRecommendationsRequestOperation
MPNowPlayingSessionManager
MPStoreLibraryMappingResponse
MPModelStoreBrowseRequestOperation
MPMediaKitEntityPayloadTransformer
MPMediaKitEntityTranslatorContext
_MPMediaKitEntityPropertyTranslator
_MPMediaKitEntityRelationshipTranslator
MPMediaKitEntityTranslator
MPMediaKitGenericObjectTranslator
MPModelMovie
MPModelMovieKind
MPModelRadioStation
MPModelRadioStationKind
MPModelGroup
MPModelGroupKind
MPModelTVShowCreator
MPPlaceholderArtwork
MPMediaAdditions
MPModelPlaylistEntriesShareEligibilityRequestOperation
MPModelLibraryAddToPlaylistChangeRequestOperation
MPStoreModelPlaybackPositionBuilder
MPModelPodcast
MPModelPodcastKind
MPStoreModelRecordLabelBuilder
MPModelLibraryHasBeenPlayedChangeRequest
MPStoreArtworkDataSource
MPMediaQuerySection
MPARC4RandomSource
MPRandom
MPRandomDistribution
MPArtworkResizeOperation
MPBrowsableContentItem
MPMutableArtworkColorAnalysis
MPArtworkColorAnalysis
Debugging
Padding
MPModelStoreBrowseContentItem
MPModelStoreBrowseRoomRequest
MPModelMoviePlaybackItemMetadata
MPStoreModelTVEpisodeBuilder
MPMediaLibrarySystemFilters
MPPSearchStringPredicate
MPMediaLibraryDataProviderSystemML3
MPMediaLibraryDataProviderSystemML3StringCoercion
MPStoreModelGenericObjectBuilder
_MPKeyPathEntityPropertyTranslator
_MPKeyPathEntityRelationshipTranslator
MPStoreRadioStreamAssetInfo
MPAVBatteryLevel
MPStoreLibraryPersonalizationRequestOperation
4AP`
_MPStoreLibraryPersonalizationAggregateLibraryAddedOperation
MPPlaybackUserDefaults
MPPlaybackEQSetting
MPVolumeHUDController
MPMusicPlayerSystemController
MPSystemMusicPlayerController
MPMusicPlayerControllerSystemServer
MPModelStoreGroupingsMusicKitRequestOperation
MPMutableStoreAssetPlaybackResponse
MPStoreAssetPlaybackResponse
MPCloudServiceStatusController
ICEnvironmentMonitorObserver
MPModelStoreBrowseRoomMusicKitResponseParser
MPPMediaQuery
MPStoreItemOfferAsset
MPDispatchQueueExclusiveAccessToken
MPPThreadKeyExclusiveAccessToken
MPExclusiveAccessToken
MPStoreModelStoreAssetBuilder
MPModelVerifyLocalFileAssetIntegrityRequest
MPMediaQueryCriteria
MPStoreSocialPendingFollowRequestOperationDataSource
MPStoreItemImportTrackData
MPRTCReportingSessionSummaryEvent
MPModelForYouRecommendationItem
MPLibraryAddStatusObserverAdditions
MPRTCReportingController
_MPRTCReportingAVItemDeallocationHandler
MPRTCReportingItemSessionContaining
MPRTCReportingItemSessionCreating
MPModelLibraryPlaylistEditChangeRequestOperation
MPProtocolProxy
MPModelLibraryTransientStateController
_MPModelLibraryRegisteredTransientState
MPNowPlayingInfoCenter
MPMediaRemoteEntityArtworkGenerator
MPNowPlayingInfoTransportableSessionResponse
_MPNowPlayingInfoTransportableSessionRequest
MPNowPlayingInfoTransportableSessionRequest
MPModelObject
MPModelKind
MPNowPlayingInfoCenterArtworkContext
NowPlayingInfo
MPLibraryRemovalAdditions
MPLibraryKeepLocalStatusObserverAdditions
MPRemoteCommandHandlerDialogAction
MPRemoteCommandHandlerDialog
MPSubscriptionStatusPlaybackInformation
MPHomeSharingML3DataProvider
MPHSBrowserDelegate
HSBrowserDelegate
MPStoreModelCuratorBuilder
MPMusicPlayerControllerNowPlayingTimeSnapshot
MPMusicPlayerControllerNowPlaying
MPMusicPlayerControllerApplicationQueueModifications
MPMusicPlayerServerStateUpdateRecord
MPHomeSharingURLProtocol
MPCubicSpringTimingParameters
MPCubicSpringAnimator
MPMediaLibraryArtworkRequest
MPArtworkTokenParametersRepresenting
MPMediaLibraryArtwork
MPMediaLibraryArtworkCatalog
MPModelPlaylistEntryTVEpisodePlaybackItemMetadata
Saga
MPModelPlaylistEntriesShareEligibilityRequest
MPServerObjectDatabase
MPMediaKitEntityRelationshipPayloadProvider
_MPServerObjectDatabaseImporter
MPServerObjectDatabaseOperations
MPSOD_Additions
MPServerObjectDatabaseAsset
MPStoreModelRequestConfiguration
MPHomeSharingRentalTracker
MPModelForYouRecommendationMusicKitGroupBuilder
MPHomeSharingErrorResolver
SSAuthorizationRequestDelegate
SSRequestDelegate
_MPRemoteLaunchCommandCenter
MPRemoteCommandCenter
MPRemoteCommandDelegate_Internal
MPStoreModelTVSeasonBuilder
MPHomeSharingRentalErrorResolver
MPModelHomeSharingAsset
MPModelLibraryHasPurchasesRequestOperation
MPModelLibraryHasPurchasesRequest
MPStoreItemLibraryImportElement
MPStoreItemLibraryImportLookupElement
MPStoreItemLibraryImport
MPAVTelevisionRoute
MPAudioAndSubtitlesController
MPStoreLibraryMappingRequestOperation
MPModelRecentlyPlayedRequestOperation
MPPlaceholderAVItem
MPModelGenericObject
MPModelGenericObjectKind
GenericObjectType
MPChangeDetails
MPStoreModelObjectBuilder
MPNowPlayingInfoLanguageOptionGroupAdditions
MPNowPlayingInfoLanguageOptionAdditions
MPCloudControllerItemIDList
MPCloudController
MPModelLibraryImportChangeRequest
MPArtworkColorAnalyzer
MPArtworkColorAnalyzerAlgorithmiTunesAdditions
MediaAdditions
MPQueuePlayer
MPModelCurator
MPModelCuratorActualKind
MPStoreModelRequestOperation
MPGaplessInfo
MPStoreLibraryPersonalizationRequest
MPStoreLibraryPersonalizationResponse
MPStoreLibraryPersonalizingAdditions
MPModelSongPlaybackItemMetadata
MPModelPlaylist
MPModelPlaylistKind
MPStoreSocialRequestOperation
MPNetworkPlayabilityMonitor
MPModelLibraryStoreIDsImportChangeRequestOperation
MPRequestResponseController
MPAVOutputDeviceRoute
MPModelForYouRecommendationMusicKitItemBuilder
MPModelLibraryIncrementSkipCountChangeRequest
MPUbiquitousPlaybackPositionEntity
MPRTCReportingSecureKeyLoadEvent
MPTiledArtworkRepresentationToken
MPQueueFeederIdentifierRegistry
MPNowPlayingContentItem
MPModelObjectPlaybackItemMetadata
MPStoreAssetInfoPlaybackCache
MPStoreAssetInfoPlaybackCacheRequest
MPModelGenre
MPModelGenreKind
MPMiddlewareAutomaticDependencyOperation
MPMiddlewareOperationMap
_MPMiddlewareChainBuilderProxy
MPMiddlewareChain
MPStoreModelRequest
MPModelPlaybackPosition
MPStoreItemMovieClipAsset
MPPlaybackContextRemotePlaybackQueue
MPModelForYouRecommendationGroupBuilder
MPSectionedIdentifierList
_MPIdentifierListSectionProxy
MPMutableIdentifierListSection
_MPSectionedIdentifierListCloneIndexEntry
_MPSectionedIdentifierListEncodableNextEntriesProviding
MPSectionedIdentifierListPosition
MPModelLibraryPlaylistEditChangeRequest
MPStorePlatformEntityTranslatorContext
_MPStorePlatformEntityPropertyTranslator
_MPStorePlatformEntityRelationshipTranslator
MPStorePlatformEntityTranslator
_MPModelLibraryDownloadQueueDataSource
MPModelLibraryDownloadQueueResponse
MPModelLibraryDownloadQueueRequest
MPNetworkObserver
MPModelStoreBrowseRoomMusicKitRequestOperation
MPRTCReportingAssetLoadEvent
MediaPlayer
MPStoreSocialRemoveFollowerOperationDataSource
MPModelForYouRecommendationItemBuilder
MPAVEndpointRoutingDataSource
MPAVCompanionProxiedEndpointRoutingDataSource
MPAVCompanionEndpointRoutingDataSource
MPCFWrapper
MPAsyncBlockOperation
MPStorePurchaseErrorResolver
MPUbiquitousPlaybackPositionController
MPContentItem
MPStoreSocialUnfollowOperationDataSource
MPModelPerson
MPLibraryAddStatusObserver
MPModelRecordLabel
MPModelRecordLabelKind
MPRadioLibrary
_MPHomeSharingArtworkCacheKey
MPHomeSharingArtworkDataSource
MPArtworkDataSourceIdentifiable
MPNowPlayingInfoLanguageOption
MPNowPlayingInfoLanguageOptionGroup
MPRadioStation
_MPActiveUserChangeMonitor
MPRemoteCommand
MPSkipIntervalCommand
MPFeedbackCommand
MPRatingCommand
MPChangePlaybackRateCommand
MPChangeRepeatModeCommand
MPChangeShuffleModeCommand
MPSkipTrackCommand
MPSetPlaybackQueueCommand
MPChangePlaybackPositionCommand
MPReorderQueueCommand
MPInsertIntoPlaybackQueueCommand
MPAdvanceShuffleModeCommand
MPAdvanceRepeatModeCommand
MPSetPlaybackSessionCommand
MPPreloadPlaybackSessionCommand
MPPlaybackSessionCommandInfo
MPSetPriorityForPlaybackSessionCommand
MPChangeQueueEndActionCommand
MPModelForYouRecommendationGroup
MPModelForYouRecommendationGroupKind
MPModelPlaylistEntry
MPModelPlaylistEntryKind
MPRemoteCommandStatus
MPModelStoreBrowseResponseParser
MPStoreItemMetadataCacheKey
MPPPropertyPredicate
MPModelStoreBrowseSection
MPPropertySet
MPMutablePropertySet
MPStoreItemMetadataResponse
MPModelTVSeason
MPModelTVSeasonKind
MPAVRoutingSheet
MPModelLibrarySearchRequest
MPModelLibrarySearchResponse
MPModelLibrarySearchSectionedCollectionDataSource
MPModelLibrarySearchEntityResultContainer
_MPModelLibraryItemArtist
_MPModelLibraryPodcastEpisodeAuthor
MPMediaLibraryTranslatorSchema
MPMediaLibraryArtworkDataSource
_MPMediaLibraryArtworkDataSourceCacheKey
_MPMediaLibraryArtworkVisualIdenticalityIdentifier
MPStoreLyricsSnippetURLComponents
MPStoreSocialBlockOperationDataSource
MPModelFileAsset
MPModelFileAssetKind
MPAVOutputDeviceRoutingDataSource
MPAVCompanionProxiedOutputDeviceRoutingDataSource
MPStoreModelTVShowCreatorBuilder
MediaPlayerAdditions
MPDetailScrubController
MPModelStorePlatformMetadataGenericObjectBuilder
MPStoreLibraryPersonalizationContentDescriptor
MPUserNotification
MPMediaEntityCache
MPAVEndpointRoute
MPStoreContentReporter
MPStoreContentReport
MPAssistantMusicAssetLoadLogEvent
MPModelPlaylistEntrySongPlaybackItemMetadata
MPPlaybackArchiveDisplayProperties
MPMutablePlaybackArchiveDisplayProperties
_MPModelLibraryKeepLocalChangeRequestUpdateItemOperation
MPModelLibraryKeepLocalChangeRequestOperation
MPAVRoutingDataSource
MPModelStoreAsset
MPContentTastePendingUpdateRecord
MPModelTVShow
MPModelTVShowKind
MPPPersistentIDsPredicate
MPExportableArtworkProperties
MPPMediaPredicateValue
MPModelSocialPerson
MPModelSocialPersonKind
MPMusicPlayerControllerSystemCache
MPStoreSocialServiceController
MPStoreSocialServiceTransientStatesSnapshot
_MPStoreSocialTransientState
_MPMediaLibraryEntityPropertyTranslator
MPMediaLibraryEntityTranslator
_MPMediaLibraryEntityRelationshipTranslator
MPMediaLibraryEntityTranslationContext
MPMediaLibraryEntityTranslatorAdditions
MPStoreModelMovieBuilder
MPModelPlaylistEntryMoviePlaybackItemMetadata
MPIdentifierSet
MPMutableIdentifierSet
MPMutableRadioIdentifiers
MPRadioIdentifiers
MPMutableUniversalStoreIdentifiers
MPUniversalStoreIdentifiers
MPMutablePersonalStoreIdentifiers
MPPersonalStoreIdentifiers
MPMutableLocalLibraryIdentifiers
MPLocalLibraryIdentifiers
MPModelLibraryIncrementPlayCountChangeRequest
MPModelSharedListeningParticipant
MPModelSharedListeningParticipantKind
MPModelPodcastEpisode
MPModelPodcastEpisodeKind
MPRouteLabel
MPArtworkConfiguration
MPRTCReportingNetworkInterfaceChangeEvent
MPRestrictionsMonitor
MCProfileConnectionObserver
MPVolumeControllerSystemDataSource
MPVolumeControllerDataSource
MPVolumeControllerRouteDataSource
MPStoreArtworkRequestToken
MPStoreDownload
MPStoreDownloadManager
SSDownloadHandlerDelegate
UIAlertViewDelegate
SSPurchaseManagerDelegate
SSDownloadManagerObserver
_MPStoreDownloadBlockObserver
MPStoreDownloadManagerObserver
MPStoreDownloadAdditions
MPStoreModelSocialPersonBuilder
MPModelAlbum
MPModelAlbumKind
MPPMediaPredicate
MPNowPlayingInfoAudioRoute
TB,N,V_allowsRadioStations
TB,N,V_allowsVideoContent
_requestedBrowseContentItemProperties
_albumBuilder
_artistBuilder
_curatorBuilder
_episodeBuilder
_movieBuilder
_radioStationBuilder
_socialPersonBuilder
_playlistBuilder
_seasonBuilder
_songBuilder
_showBuilder
_showCreatorBuilder
_recordLabelBuilder
_shouldFakeEpisodes
_allowsRadioStations
_allowsVideoContent
initWithRequestedPropertySet:
contentItemTypeForRawResponseKindIdentifierValue:
contentItemTypeForRawResponseKindIdentifiers:
contentItemTypeForStoreItemMetadata:
contentItemTypeForMusicAPIType:
modelObjectWithStoreItemMetadata:sourceModelObject:userIdentity:
allowsRadioStations
setAllowsRadioStations:
allowsVideoContent
setAllowsVideoContent:
.cxx_destruct
setRecordLabel:
setArtistUploadedContentType:
setSocialPerson:
setShowCreator:
setShow:
setSeason:
setRadioStation:
setCurator:
setDetailedItemType:
setItemType:
objectForKey:
containsObject:
isEqualToString:
integerValue
countByEnumeratingWithState:objects:count:
boolForKey:
allSupportedProperties
dictionaryWithObjects:forKeys:count:
arrayWithObjects:count:
T@"NSArray",R,N
Tq,R,N
init
_init
addObserver:
removeObserver:
prioritizeDownload:
allMediaDownloadLibraryIdentifiers
enqueueAssetForDownload:withCompletionHandler:
sendKeepLocalStatusChanged:forLibraryIdentifier:entityType:withCompletionHandler:
cancelDownloads:
activeDownloadsCount
hasActiveDownloads
activeDownloadForMediaItemPersistentID:
activeDownloadForStoreID:
downloadForIdentifierSet:downloadState:
downloadLibraryWithCompletionHandler:
array
raise:format:
T@"MPMediaDownloadManager",R,N
sharedManager
_storeBagDictionary
configurationForLoadingModelDataWithStoreBagDictionary:error:
produceResponseWithLoadedOutput:completion:
sectionProperties
itemProperties
_recommendationGroupBuilder
_recommendationGroupBuilderWithFlatSectionedItems:
_produceResultsWithItemsArray:
_produceResultsWithRecommendationsArray:recentlyPlayedArray:
_responseWithResults:personalizationResponse:
_personalizeRecommendationGroup:flatPersonalizedSectionedItems:
queryItemsWithStoreBagDictionary:
recommendationsURLWithStoreBagDictionary:
recentlyPlayedURLWithStoreBagDictionary:
isOnboardingRequired:
typesArrayWithTypes:
displayFilterKindsValueForOptions:
copy
addObject:
setPath:
setPercentEncodedQuery:
stringByReplacingOccurrencesOfString:withString:
percentEncodedQuery
setQueryItems:
queryItemWithName:value:
componentsJoinedByString:
arrayWithArray:
arrayWithObject:
addObjectsFromArray:
localTimeZone
setSubgroups:
setSectionedItems:
isBackedByStoreItemMetadata
objectAtIndexedSubscript:
errorWithDomain:code:userInfo:
arrayWithCapacity:
setHTTPMethod:
arrayByAddingObjectsFromArray:
componentsWithURL:resolvingAgainstBaseURL:
TQ,R
T#,R
T@"NSString",R,C
debugDescription
isEqual:
class
self
performSelector:
performSelector:withObject:
performSelector:withObject:withObject:
isProxy
isKindOfClass:
isMemberOfClass:
conformsToProtocol:
respondsToSelector:
retain
release
autorelease
retainCount
zone
hash
superclass
description
T@"MPModelSocialPerson",&,N
fallbackBagKeys
fallbackURLString
bagKey
httpBody
httpBodyType
httpMethod
queryItems
person
setPerson:
T@"MPModelSocialPerson",&,N,V_person
_person
dataWithJSONObject:options:error:
T{shared_ptr<mlcore::DeviceLibraryView>=^{DeviceLibraryView}^{__shared_weak_count}},R,N
T@"MPMediaLibrary",R,N,V_library
TQ,R,N,V_filteringOptions
_coreView
_library
_filteringOptions
copyWithZone:
initWithLibrary:filteringOptions:
hasEntitiesForModelKind:
mlCoreView
performCoreQuery:withCompletion:
performCoreSearchQuery:withCompletion:
_performCoreQuery:error:
library
filteringOptions
.cxx_construct
exceptionWithName:reason:userInfo:
stringWithUTF8String:
dataWithContentsOfFile:options:error:
bytes
length
initWithCGImage:
scale
CGImage
CGColor
shadowOffset
imageWithData:
shadowBlurRadius
shadowColor
clearColor
bezierPathWithRoundedRect:cornerRadius:
addClip
drawInRect:
initWithContentsOfExactFilePath:
imageWithEtchedBorderOfColor:radius:
imageWithShadow:
imageWithRoundedCornersOfRadius:
mainScreen
imageWithCGImage:scale:orientation:
deviceSupportsASTC
_initWithData:immediateLoadWithMaxSize:scale:renderingIntent:cache:
T@"NSOperationQueue",R,N,V_calloutQueue
T@"NSError",R,N,V_cancelationError
T@"NSObject<OS_dispatch_queue>",R,N,V_cleanupQueue
T@"NSOperationQueue",R,N,V_queue
T@"NSArray",C,N,V_middlewareClasses
T@"NSString",C,N,V_label
Tq,N,V_qualityOfService
Td,N,V_timeoutInterval
_label
_qualityOfService
_timeoutInterval
_calloutQueue
_cancelationError
_cleanupQueue
_queue
_middlewareClasses
prepareForResponseWithCompletion:
performWithCompletion:
_stateDumpObject
_performWithCompletion:
cancel
label
setLabel:
qualityOfService
setQualityOfService:
timeoutInterval
setTimeoutInterval:
calloutQueue
cancelationError
cleanupQueue
queue
middlewareClasses
setMiddlewareClasses:
cancelAllOperations
addOperations:waitUntilFinished:
T@"NSError",R,N
T@?,C,N
timeoutDescription
error
invalidationHandler
setInvalidationHandler:
invalidationObservers
addDependency:
valueForKeyPath:
blockOperationWithBlock:
invalidate
initWithRequest:middleware:
responseClass
stringWithFormat:
disarm
timeIntervalSinceNow
initWithDeallocHandler:
handleFailureInMethod:object:file:lineNumber:description:
currentHandler
operations
expectedMaximumResponseTimeInterval
UTF8String
date
instanceMethodForSelector:
T@"NSArray",C,N,V_middleware
T@,R,N,V_builder
T@,R,C,N,V_request
valid
TB,R,N,GisValid,V_valid
_valid
_request
_middleware
_builder
chain
request
isValid
middleware
setMiddleware:
builder
numberWithBool:
builderProtocol
postNotificationName:object:
didChangeValueForKey:
willChangeValueForKey:
T@"MPPropertySet",&,N,V_deferredSectionProperties
T@"MPPropertySet",&,N,V_deferredItemProperties
T@"MPSectionedCollection",C,N,V_results
empty
TB,R,N,GisEmpty
T@"MPModelRequest",R,C,N,V_request
_deferredSectionProperties
_deferredItemProperties
_results
initWithRequest:
getChangeDetailsFromPreviousResponse:completion:
isEmpty
_invalidate
deferredSectionProperties
setDeferredSectionProperties:
deferredItemProperties
setDeferredItemProperties:
results
setResults:
isMainThread
appendFormat:
appendString:
initWithFormat:
text
T@"NSString",C,D,N
TTML
hasStoreLyrics
TB,D,N
hasLibraryLyrics
hasTimeSyncedLyrics
__text_KEY
__TTML_KEY
__hasStoreLyrics_KEY
__hasLibraryLyrics_KEY
__hasTimeSyncedLyrics_KEY
identityKind
humanDescription
_eventQueue
_lastSiriReferenceIdentifierForPlaybackStart
_lastSiriReferenceIdentifierForWillReload
_lastSiriReferenceIdentifierWithLikelyToKeepUp
_players
_playerToObservedTimebase
registerPlayer:
unregisterPlayer:
logAssistantEvent:withTimestamp:
_bufferingStateDidChangeNotification:
_itemDidChangeNotification:
_itemTimebaseDidChangeNotification:
_willReloadWithPlaybackContextNotification:
_attemptLikelyToKeepUpReportingEventWithPlayer:
_attemptPlaybackStartReportingEventWithPlayer:
_createContextDictionaryWithSiriReferenceIdentifier:siriWHAMetricsInfo:
_timebaseEffectiveRateChangedNotification
numberWithDouble:
timeIntervalSinceReferenceDate
setObject:forKey:
logEventWithType:machAbsoluteTime:context:
sharedAnalytics
doubleValue
allObjects
removeObserver:name:object:
removeObject:
addObserver:selector:name:object:
initWithOptions:capacity:
T@"MPAssistantAnalyticsReportingController",R,N
sharedController
_mpUTITypeFromMRUTIType:
mpUniversalTrackIDType
mpUniversalTrackIDBaseID
T@"NSString",R,N
T@"NSDictionary",C,N
T@"NSString",C,N
Ti,N
Tq,N
T@,&,N
TI,N
TB,R,N
_lock
_additionalUserInfo
_clientName
_clientType
_clientVersion
_hasCompleteSessionSetup
_hasInitializedSession
_hierarchyToken
_internalSession
_operationQueue
_pendingReportingEvents
_serviceIdentifier
_sessionID
_sessionUserInfo
hasCompleteSessionSetup
hasInitializedSession
additionalUserInfo
clientName
clientType
clientVersion
hierarchyToken
serviceIdentifier
sessionID
setAdditionalUserInfo:
setClientName:
setClientType:
setClientVersion:
setHierarchyToken:
setServiceIdentifier:
setSessionID:
initializeSession
completeSessionSetup
finalizeSession
recordEvent:
addOperationWithBlock:
_recordEvent:withInternalSession:
_isRTCReportingSupported
fetchReportingStatesWithUserInfo:fetchComplete:
addEntriesFromDictionary:
mutableCopy
setMaxConcurrentOperationCount:
newHierarchyTokenFromParentToken:
sendMessageWithDictionary:error:
tokenResult
defaultIdentityStore
DSID
setWithObject:
sharedProvider
allValues
firstObject
timeToLiveMillis
getTokenStatusForDSIDs:forcingRefresh:completion:
getPropertiesForUserIdentity:completionHandler:
lastError
activeAccount
T@?,C,N,V_artworkCatalogsBlock
TB,N,V_allowsSynchronousArtworkCatalogsBlockExecution
TQ,N,V_numberOfColumns
TQ,N,V_numberOfRows
Td,N,V_tileSpacing
T@"<NSCopying>",C,N,V_entityIdentifier
T@"<NSCopying>",C,N,V_namespaceIdentifier
T@"<NSCopying>",C,N,V_revisionIdentifier
_cacheLock
_artworkCatalogsCache
_artworkCatalogsCacheCount
_allowsSynchronousArtworkCatalogsBlockExecution
_artworkCatalogsBlock
_numberOfColumns
_numberOfRows
_tileSpacing
_entityIdentifier
_namespaceIdentifier
_revisionIdentifier
artworkCatalogsWithCount:
existingArtworkCatalogsWithCount:
hasExistingArtworkCatalogsWithCount:
artworkCatalogsBlock
setArtworkCatalogsBlock:
allowsSynchronousArtworkCatalogsBlockExecution
setAllowsSynchronousArtworkCatalogsBlockExecution:
numberOfColumns
setNumberOfColumns:
numberOfRows
setNumberOfRows:
tileSpacing
setTileSpacing:
entityIdentifier
setEntityIdentifier:
namespaceIdentifier
setNamespaceIdentifier:
revisionIdentifier
setRevisionIdentifier:
subarrayWithRange:
TS,R,N,V_rtcReportingCategory
TS,R,N,V_rtcReportingType
Tq,N,V_networkInterfaceType
_rtcReportingCategory
_rtcReportingType
_networkInterfaceType
newRTCReportingMessageDictionary
newRTCReportingPayloadDictionary
networkInterfaceType
setNetworkInterfaceType:
rtcReportingCategory
rtcReportingType
numberWithInteger:
numberWithUnsignedShort:
code
T@"MPModelLibraryDeleteEntityChangeRequest",C,N,V_request
T@?,C,N,V_responseHandler
_responseHandler
execute
_handlePersistentID:modelClass:mediaLibrary:
_deleteItems:withLibrary:
_isCloudLibraryEnabled
setRequest:
responseHandler
setResponseHandler:
initWithCapacity:
unsignedLongLongValue
isSubclassOfClass:
currentThread
TB,N,V_isAssetLoaded
placeholder
TB,R,N,GisPlaceholder
tailPlaceholder
TB,R,N,GisTailPlaceholder,V_tailPlaceholder
startItem
TB,N,GisStartItem,V_startItem
Tq,N,V_repeatIndex
Tq,N,V_lastChangeDirection
TB,R,N,V_shouldPreventPlayback
T@"MPModelGenericObject",R,N,V_modelGenericObject
T@"MPModelPlayEvent",&,N,V_modelPlayEvent
T@"NSNumber",R,C,N
T@"NSNumber",C,N,V_initialPlaybackStartTimeOverride
T@"NSNumber",C,N,V_lastMetadataChangeTime
T@"NSString",R,C,N,V_rtcReportingServiceIdentifier
TB,R,N,V_allowsAirPlayFromCloud
TB,R,N,V_allowsExternalPlayback
TB,R,N,V_requiresLoadedAssetForAirPlayProperties
Tf,N,G_currentPlaybackRate,S_setCurrentPlaybackRate:,V_currentPlaybackRate
TB,R,N,V_hasFinishedDownloading
TB,N,V_hasPerformedErrorResolution
T@"NSDictionary",C,N,V_playbackInfo
T@"AVPlayerItem",&,N
T^{OpaqueCMTimebase=},R,N
activeItem
TB,N,GisActiveItem,V_activeItem
T@"NSString",R,C,N,V_storeFrontIdentifier
externalDisplay
TB,N,GhasExternalDisplay,V_externalDisplay
T{?=qiIq},R,N
T@"NSNumber",R,N,V_storeAccountID
T@"NSNumber",R,N,V_useListeningHistory
Tq,R,N,V_leasePlaybackPreventionState
T@"ICMusicSubscriptionLeaseStatus",R,C,N,V_leaseStatus
T@"NSString",C,N,V_explicitBadge
TB,R,N,V_didReachEnd
T@"NSString",C,N,V_contentItemID
T@"NSString",C,N,V_previousContentItemID
autoPlayItem
TB,N,GisAutoPlayItem,V_autoPlayItem
sharedListeningItem
TB,N,GisSharedListeningItem,V_sharedListeningItem
Tq,N,V_explicitContentState
T@"MPNowPlayingContentItem",R,N
T@"<MPAVItemObserver>",W,N,V_observer
TB,R,N,V_meetsPlaybackHistoryThreshold
assetLoaded
TB,R,N,GisAssetLoaded,V_assetLoaded
assetURLValid
TB,R,N,GisAssetURLValid
TB,R,N,V_didAttemptToLoadAsset
T@"AVAsset",R,N
TB,R,N,V_canReusePlayerItem
T@"NSError",R,C,N
T@"NSError",&,N,V_itemError
T@"NSString",&,N,V_queueIdentifier
alwaysLive
TB,R,N,GisAlwaysLive
TB,N
T@"MPQueueFeeder",W,N,V_feeder
Tq,R,N,V_playbackMode
T@"AVPlayerItemAccessLog",R,N
Td,R,N
Tf,N,V_defaultPlaybackRate
T@"NSArray",R,N,V_chapterTimeMarkers
T@"NSArray",R,N,V_artworkTimeMarkers
T@"NSArray",R,N,V_urlTimeMarkers
T@"NSArray",&,N,V_closedCaptionTimeMarkers
TB,R,N,V_useEmbeddedChapterData
Tq,R,N,V_albumStoreID
TQ,R,N
T@"NSString",R,C,N,V_copyrightText
explicitTrack
TB,R,N,GisExplicitTrack
T@"NSString",R,C,N,V_externalContentIdentifier
likedStateEnabled
TB,R,N,GisLikedStateEnabled,V_likedStateEnabled
TB,R,N,V_supportsLikedState
T@"NSString",R,C,N
streamable
TB,R,N,GisStreamable
Tq,R,N,V_storeItemInt64ID
Tq,R,N,V_storeSubscriptionAdamID
Tf,R,N
T{CGSize=dd},R,N
T@"MPMediaItem",R,&,N,V_mediaItem
Tf,N,V_loudnessInfoVolumeNormalization
Tf,N,V_soundCheckVolumeNormalization
TB,R,N,V_prefersSeekOverSkip
TB,R,N,V_hasProtectedContent
radioItem
TB,R,N,GisRadioItem
T@,&,N,V_rtcReportingParentHierarchyToken
_asset
_assetQueue
_avPlayerItem
_isAssetLoaded
_feeder
_soundCheckVolumeNormalization
_cachedDuration
_cachedPlayableDuration
_cachedSeekableTimeRanges
_seekableTimeRangesCacheTime
_type
_contentItem
_defaultPlaybackRate
_advancedDuringPlayback
_handledFinishTime
_hasPlayedThisSession
_wasCountedAsSkipped
_isStreamable
_watchingAttributes
_userChangedItemsDuringPlayback
_lyricsAvailable
_rtcReportingParentHierarchyToken
_hasLoadedHasProtectedContent
_hasLoadedPlaybackMode
_hasValidPlayerItemDuration
_lastLoggedTotalDuration
_likedState
_playerItemDuration
_exportableArtworkRevision
_meetsPlaybackHistoryThreshold
_assetLoaded
_didAttemptToLoadAsset
_canReusePlayerItem
_useEmbeddedChapterData
_likedStateEnabled
_supportsLikedState
_prefersSeekOverSkip
_hasProtectedContent
_tailPlaceholder
_startItem
_shouldPreventPlayback
_allowsAirPlayFromCloud
_allowsExternalPlayback
_requiresLoadedAssetForAirPlayProperties
_hasFinishedDownloading
_hasPerformedErrorResolution
_activeItem
_externalDisplay
_didReachEnd
_autoPlayItem
_sharedListeningItem
_currentPlaybackRate
_loudnessInfoVolumeNormalization
_observer
_itemError
_queueIdentifier
_playbackMode
_chapterTimeMarkers
_artworkTimeMarkers
_urlTimeMarkers
_closedCaptionTimeMarkers
_albumStoreID
_copyrightText
_externalContentIdentifier
_storeItemInt64ID
_storeSubscriptionAdamID
_mediaItem
_explicitBadge
_repeatIndex
_lastChangeDirection
_modelGenericObject
_modelPlayEvent
_initialPlaybackStartTimeOverride
_lastMetadataChangeTime
_rtcReportingServiceIdentifier
_playbackInfo
_storeFrontIdentifier
_storeAccountID
_useListeningHistory
_leasePlaybackPreventionState
_leaseStatus
_contentItemID
_previousContentItemID
_explicitContentState
setMeetsPlaybackHistoryThresholdForElapsedTime:startTime:
isPlaceholder
isSupportedDefaultPlaybackSpeed:
initWithURL:
initWithURL:options:
initWithAsset:
initWithPlayerItem:
dealloc
canUseLoadedAsset
supportsFastForward
supportsRewind
disableItemReuse
loadAssetAndPlayerItem
_loadAssetAndPlayerItem
updatePlayerItemMetadata
asset
playerItem
setPlayerItem:
status
playbackError
bookmarkTime
initialPlaybackStartTime
resetBookkeeping
setPlaybackStoppedTime:
notePlaybackFinishedByHittingEnd
setPlaybackCheckpointCurrentTime:
setPlaybackFinishedTime:
setRating:
subtitleTrackID
setSubtitleTrackID:
setUserAdvancedDuringPlayback:
setUserChangedItemsDuringPlayback:
setUserSkippedPlayback:
userAdvancedDuringPlayback
userSkippedPlayback
userChangedItemsDuringPlayback
durationInSeconds
path
accessLog
album
albumYear
artist
albumArtist
artistStoreID
albumTrackNumber
albumTrackCount
applyVolumeNormalizationWithSoundCheckEnabled:
composer
discNumber
discCount
isValidPlayerSubstituteForItem:
isAssetURLValid
isExplicitTrack
setExplicitBadge:
setLastChangeDirection:
genre
currentTimeDisplayOverride
usesSubscriptionLease
displayableTextLoaded
displayableText
feeder
likedState
lyrics
libraryLyrics
containerUniqueID
hasPlayedThisSession
isAd
isAlwaysLive
isStreamable
customAVEQPreset
allowsEQ
mainTitle
naturalSize
playbackRateForLevel:direction:paused:
prepareForRate:completionHandler:
presentationSize
forwardPlaybackEndTime
setFeeder:
scanIntervalForLevel:paused:
setHasPlayedThisSession:
setLikedState:
setLikedState:forUserIdentity:
setSoundCheckVolumeNormalization:
storeItemID
supportsRating
timedMetadataIfAvailable
setContentItemID:
contentItem
isRadioItem
stationAllowsItemLiking
stationID
stationHash
stationName
stationStringID
stationProviderID
_imageChapterTrackIDsForAsset:
type
userRating
mediaType
persistentID
databaseID
cloudID
personID
cloudUniversalLibraryID
cloudAlbumID
albumPersistentID
albumArtistPersistentID
artistPersistentID
genrePersistentID
composerPersistentID
storePurchasedAdamID
shouldShowComposer
duration
durationFromExternalMetadata
durationIsValid
_durationFromExternalMetadataIfAvailable
durationIfAvailable
playableDuration
playableDurationIfAvailable
_playerItemDurationIfAvailable
timebase
timeOfSeekableStart
timeOfSeekableEnd
_internalLikedStateDidChangeNotification:
_itemAttributeAvailableKey:
observeValueForKeyPath:ofObject:change:context:
_addObservationsForAVPlayerItem:
_removeObservationsForAVPlayerItem:
_likedStateDidChange
_initialPlaybackStartTimeForPlaybackInfo:
_seekableTimeRanges
_playableDurationForLoadedTimeRanges:
_loadAssetProperties
_updateSoundCheckVolumeNormalizationForPlayerItem
_shouldPublishArtworkURL
_performContentItemUpdate:
_clearAsset
_clearAssetNow
_onAssetQueueClearAsset
_updateContentItem
_updateAudioFormatInfoForContentItem:
_contentItemUserInfo
_contentItemDeviceSpecificUserInfo
setupEQPresetWithDefaultPreset:
setupWithPlaybackInfo
_updateDurationSnapshotWithElapsedTime:playbackRate:
_currentPlaybackRateDidChange:
_applyLoudnessInfo
_expectedStartTimeWithPlaybackInfo:
_expectedStopTimeWithPlaybackInfo:
_handleUpdatedLikedState:forUserIdentity:completion:
_persistedLikedState
_setCurrentPlaybackRate:
_setNeedsPersistedLikedStateUpdate
setAutoPlayItem:
setSharedListeningItem:
setExplicitContentState:
invalidateContentItemUserInfo
invalidateContentItemDeviceSpecificUserInfo
invalidateContentItemAudioFormatInfo
reevaluateHasProtectedContent
reevaluateType
replacePlayerItemWithPlayerItem:
resolvePlaybackError:withCompletion:
_updateHasFinishedDownloading
_willBecomeActivePlayerItem
_willResignActivePlayerItem
_didResignActivePlayerItem
_didBecomeActivePlayerItem
analyticsFormatName
analyticsFormatInfo
defaultPlaybackRate
setDefaultPlaybackRate:
isAssetLoaded
setIsAssetLoaded:
soundCheckVolumeNormalization
rtcReportingParentHierarchyToken
setRtcReportingParentHierarchyToken:
observer
setObserver:
meetsPlaybackHistoryThreshold
didAttemptToLoadAsset
canReusePlayerItem
itemError
setItemError:
queueIdentifier
setQueueIdentifier:
playbackMode
chapterTimeMarkers
artworkTimeMarkers
urlTimeMarkers
closedCaptionTimeMarkers
setClosedCaptionTimeMarkers:
useEmbeddedChapterData
albumStoreID
copyrightText
externalContentIdentifier
isLikedStateEnabled
supportsLikedState
storeItemInt64ID
storeSubscriptionAdamID
mediaItem
loudnessInfoVolumeNormalization
setLoudnessInfoVolumeNormalization:
prefersSeekOverSkip
hasProtectedContent
explicitBadge
isTailPlaceholder
isStartItem
setStartItem:
repeatIndex
setRepeatIndex:
lastChangeDirection
shouldPreventPlayback
modelGenericObject
modelPlayEvent
setModelPlayEvent:
initialPlaybackStartTimeOverride
setInitialPlaybackStartTimeOverride:
lastMetadataChangeTime
setLastMetadataChangeTime:
rtcReportingServiceIdentifier
allowsAirPlayFromCloud
allowsExternalPlayback
requiresLoadedAssetForAirPlayProperties
hasFinishedDownloading
hasPerformedErrorResolution
setHasPerformedErrorResolution:
playbackInfo
setPlaybackInfo:
isActiveItem
setActiveItem:
storeFrontIdentifier
hasExternalDisplay
setExternalDisplay:
storeAccountID
useListeningHistory
leasePlaybackPreventionState
leaseStatus
didReachEnd
contentItemID
previousContentItemID
setPreviousContentItemID:
isAutoPlayItem
isSharedListeningItem
explicitContentState
CMTimeRangeValue
loadedTimeRanges
isFileURL
trackID
assetTrack
tracks
isPlaybackLikelyToKeepUp
isPlaybackBufferFull
statusOfValueForKey:error:
boolValue
_setRampInOutInfo:
_setAudibleDRMInfo:
dictionaryWithObject:forKey:
setForwardPlaybackEndTime:
numberWithFloat:
isNonPurgeable
isLibraryAdded
dataUsingEncoding:
numberWithLongLong:
setObject:forKeyedSubscript:
numberWithUnsignedLongLong:
isLibraryAddEligible
isRedownloadable
absoluteString
loadValuesAsynchronouslyForKeys:completionHandler:
seekableTimeRanges
removeObserver:forKeyPath:context:
addObserver:forKeyPath:options:context:
CMTimeValue
postNotificationName:object:userInfo:
trackWithTrackID:
intValue
trackReferences
longLongValue
loggingIdentifier
canPlayFastForward
cancelPreviousPerformRequestsWithTarget:
UUIDString
playerItemWithAsset:
URLAssetWithURL:options:
URLFromPath:
fileURLWithPath:isDirectory:
stringByAddingPercentEncodingWithAllowedCharacters:
URLPathAllowedCharacterSet
stringByRemovingPercentEncoding
scheme
URLWithString:relativeToURL:
MPAVItem
setMPAVItem:
T@"MPAVItem",&,N
T@"ICClientInfo",C,N,V_clientInfo
T@"ICUserIdentity",C,N,V_delegatedUserIdentity
T@"ICUserIdentity",C,N,V_userIdentity
T@"ICUserIdentityStore",&,N,V_userIdentityStore
T@"ICStorePlatformRequest",R,C,N
TB,N,V_allowLocalEquivalencies
TQ,N,V_reason
T@"NSArray",C,N,V_itemIdentifiers
T@"NSNumber",C,N,V_timeoutInterval
T@"NSString",C,N,V_platform
Td,N,V_retryDelay
TB,N,V_shouldIgnoreCache
TB,N,V_shouldIgnoreExpiration
TB,N,V_shouldRequireCachedResults
T@"NSString",C,N,V_clientIdentifier
personalized
TB,R,N,GisPersonalized
Tq,N,V_personalizationStyle
_allowLocalEquivalencies
_shouldIgnoreCache
_shouldIgnoreExpiration
_shouldRequireCachedResults
_reason
_itemIdentifiers
_platform
_retryDelay
_clientIdentifier
_personalizationStyle
_clientInfo
_delegatedUserIdentity
_userIdentity
_userIdentityStore
clientIdentifier
clientInfo
isPersonalized
itemIdentifiers
requestingBundleIdentifier
requestingBundleVersion
setRequestingBundleIdentifier:
setRequestingBundleVersion:
userIdentity
userIdentityStore
storePlatformRequest
allowLocalEquivalencies
setAllowLocalEquivalencies:
reason
setReason:
setItemIdentifiers:
platform
setPlatform:
retryDelay
setRetryDelay:
shouldIgnoreCache
setShouldIgnoreCache:
shouldIgnoreExpiration
setShouldIgnoreExpiration:
shouldRequireCachedResults
setShouldRequireCachedResults:
setClientIdentifier:
personalizationStyle
setPersonalizationStyle:
setClientInfo:
delegatedUserIdentity
setDelegatedUserIdentity:
setUserIdentity:
setUserIdentityStore:
setPlatformIdentifier:
setRequestContext:
setIdentityStore:
setIdentity:
setDelegatedIdentity:
setReturnsLocalEquivalencies:
setKeyProfile:
defaultInfo
T@"NSString",C,N,V_playActivityQueueGroupingID
T@"NSString",C,N,V_playActivityFeatureName
T@"NSData",C,N,V_playActivityRecommendationData
T@"NSString",C,N,V_siriReferenceIdentifier
T@"NSDictionary",C,N,V_siriWHAMetricsInfo
T@"NSString",R,N,V_uniqueIdentifier
_identifierRegistry
_identifierRegistryLock
_uniqueIdentifier
_playActivityQueueGroupingID
_playActivityFeatureName
_playActivityRecommendationData
_siriReferenceIdentifier
_siriWHAMetricsInfo
replaceIdentifierRegistry:
identifierRegistryWithExclusiveAccess:
identifierRegistryWithExclusiveAccessReturningObject:
identifierRegistryWithExclusiveAccessReturningBOOL:
identifierRegistryWithExclusiveAccessReturningInteger:
supplementalPlaybackContextBehavior
supplementalPlaybackContextWithReason:
getRepresentativeMetadataForPlaybackContext:properties:completion:
errorResolverForItem:
firstModelPlayEvent
applyVolumeNormalizationForItem:
uniqueIdentifier
playActivityQueueGroupingID
setPlayActivityQueueGroupingID:
playActivityFeatureName
setPlayActivityFeatureName:
playActivityRecommendationData
setPlayActivityRecommendationData:
siriReferenceIdentifier
setSiriReferenceIdentifier:
siriWHAMetricsInfo
setSiriWHAMetricsInfo:
T@"MPModelObject",&,N,V_modelObject
_modelObject
newOperationWithResponseHandler:
performWithResponseHandler:
modelObject
setModelObject:
T@"MPStoreItemMetadata",R,C,N,V_parentStoreItemMetadata
T@"MPStoreArtworkRequestToken",R,N
T@,R,C,N
T@"NSArray",R,C,N
beats1
TB,R,N,GisBeats1
compilation
TB,R,N,GisCompilation
T@"NSDate",R,C,N
expired
TB,R,N,GisExpired
T@"NSDictionary",R,C,N
explicitContent
TB,R,N,GisExplicitContent
masteredForiTunes
TB,R,N,GisMasteredForiTunes
storeRedownloadable
TB,R,N,GisStoreRedownloadable
T@"NSURL",R,C,N
privatePerson
TB,R,N,GisPrivatePerson
verifiedPerson
TB,R,N,GisVerifiedPerson
live
TB,R,N,GisLive
_downloadAssetDictionary
_downloadMetadataDictionary
_storeMusicAPIDictionary
_expirationDate
_hasOverrideChildStorePlatformDictionaries
_hasSubscriptionOffer
_overrideChildStorePlatformDictionaries
_storePlatformDictionary
_parentStoreItemMetadata
TB,R
supportsSecureCoding
encodeWithCoder:
initWithCoder:
initWithDownloadAssetDictionary:
initWithStoreMusicAPIDictionary:
initWithStoreMusicAPIDictionary:parentStoreItemMetadata:
initWithStorePlatformDictionary:
initWithStorePlatformDictionary:expirationDate:
initWithStorePlatformDictionary:parentStoreItemMetadata:
initWithStorePlatformDictionary:parentStoreItemMetadata:expirationDate:
artistName
artistUploadedContentType
artworkRequestToken
stationGlyphRequestToken
artworkTrackIDs
isBeats1
childrenStoreIDs
childStoreItemMetadatas
collectionName
collectionStoreID
composerName
curatorName
curatorHandle
curatorID
descriptionText
editorNotes
expirationDate
isExpired
shortEditorNotes
effectiveStorePlatformDictionary
importableStorePlatformDictionary
hasArtistBiography
hasLyrics
hasSocialPosts
hasSubscriptionOffer
genreNames
isExplicitContent
explicitRating
isCompilation
isMasteredForiTunes
isPreorder
isStoreRedownloadable
audioTraits
itemKind
playlistType
personalMixSortKey
iTunesBrandType
latestAlbumArtworkRequestToken
movementCount
movementName
movementNumber
movieClipsCount
movieClips
name
offers
playlistIdentifiers
popularity
releaseDate
lastModifiedDate
shortName
shouldBookmarkPlayPosition
shouldReportPlayEvents
showComposer
storeID
formerStoreAdamIDs
socialProfileID
purchasedAdamID
subscriptionAdamID
trackCount
trackNumber
episodeCount
seasonNumber
shortURL
versionHash
videoSubtype
workName
handle
nameRaw
isPrivatePerson
isVerifiedPerson
radioStationTypeID
radioStationSubtype
isChart
radioStationProviderName
isLive
radioStationEvents
artworkRequestTokenForEditorialArtworkKind:
artworkRequestTokenForScreenshotArtwork
artworkRequestTokenForUberArtworkKind:
avatarArtworkRequestToken
artworkRequestTokenForStoreMusicAPIDictionary
artworkRequestTokenForStorePlatformDictionary:
stationGlyphRequestTokenForStoreMusicAPIDictionary
stationGlyphRequestTokenForStorePlatformDictionary:
childStorePlatformDictionaryForArtworkTrackID:
childStorePlatformDictionaryForStoreID:
descriptionTextWithStyle:
shortDescriptionText
editorNotesWithStyle:
tvEpisodeArtworkRequestToken
tvShowArtworkRequestToken
movieArtworkRequestToken
flowcaseEditorialArtworkRequestToken
brickEditorialArtworkRequestToken
metadataByAppendingMetadata:
metadataWithChildStorePlatformDictionaries:
metadataWithParentMetadata:
_storePlatformReleaseDateFormatter
_musicAPIDateFormatter
_storePlatformLastModifiedDateFormatter
_fetchValueFromStoreMusicAPIDictionary:
parentStoreItemMetadata
setCalendar:
storeServerCalendar
setLenient:
setTimeZone:
timeZoneForSecondsFromGMT:
setLocale:
localeWithLocaleIdentifier:
setDateFormat:
initWithLocaleIdentifier:
earlierDate:
artworkRequestTokenForStorePlatformArtworkValue:
initWithArtworkResponseDictionary:
dateFromString:
URLWithString:
numberWithUnsignedInteger:
numberWithInt:
stringFromDate:
initWithArtworkURL:
allocWithZone:
encodeBool:forKey:
encodeObject:forKey:
decodeBoolForKey:
decodeObjectOfClass:forKey:
decodeObjectOfClasses:forKey:
setWithObjects:
calendarWithIdentifier:
initWithArtworkResponseArray:
currentCalendar
component:fromDate:
_loadingTiledArtworkRequests
_loadingTiledArtworkRequestsAccessQueue
_renderingTiledArtworkRequestsQueue
_tiledArtworkRepresentationFallbackCache
_tilingArtworkCatalogOperationQueue
existingArtworkEffectResultForEffectType:catalog:options:
loadArtworkEffectResultForEffectType:catalog:options:systemEffectHandler:completionHandler:
hasExistingRepresentationOnDiskForArtworkCatalog:
getExportableArtworkPropertiesForCatalog:completionHandler:
areRepresentationsOfKind:availableForCatalog:
existingRepresentationOfKind:forArtworkCatalog:
loadRepresentationOfKind:forArtworkCatalog:completionHandler:
areRepresentationsAvailableForCatalog:
isRepresentation:bestRepresentationForArtworkCatalog:
existingRepresentationForArtworkCatalog:
loadRepresentationForArtworkCatalog:completionHandler:
cancelLoadingRepresentationForArtworkCatalog:
visualIdenticalityIdentifierForCatalog:
_addLoadingRequestForArtworkCatalog:
_hasLoadingRequestForArtworkCatalog:
_performAsyncBlock:
_performSyncBlock:
_removeLoadingRequestForArtworkCatalog:
_loadingRequestForArtworkCatalog:
replaceObjectAtIndex:withObject:
prepareForDisplayWithCompletionHandler:
null
_tileSizeForFittingSize:rows:columns:spacing:
isEqualToArray:
_representationCacheKeyForArtworkCatalog:forAnyRevision:
_errorWithDescription:
setCountLimit:
sharedDataSource
T@"MPMediaLibraryView",&,N,V_libraryView
T{shared_ptr<mlcore::Query>=^{Query}^{__shared_weak_count}},N,V_query
T@?,C,N,V_resultHandler
_libraryView
_resultHandler
_query
libraryView
setLibraryView:
query
setQuery:
resultHandler
setResultHandler:
T@"NSOperationQueue",&,N,V_operationQueue
T@"NSOperationQueue",&,N,V_serialAccessQueue
T@"MPModelLibraryRequest",C,N,V_request
_serialAccessQueue
_executeLegacyRequest
_executeRequest
_itemProperties
_sanityCheckRequest
_sectionProperties
operationQueue
setOperationQueue:
serialAccessQueue
setSerialAccessQueue:
arrayByAddingObject:
handleFailureInFunction:file:lineNumber:description:
enumerateObjectsUsingBlock:
currentRevision
currentContentRevision
filtersOnDynamicProperties
enumeratePersistentIDsAndProperties:usingBlock:
T@"MPModelTVEpisode",&,N,V_episode
_episode
albumArtistName
albumStoreAdamID
albumTitle
allowsInitiatingPlayWhileDownload
artistStoreAdamID
artworkCatalogForPlaybackTime:
contentTitle
contentType
expectedDuration
storeAdamID
storeSagaID
localFileAsset
playbackPosition
storeAsset
_invalidateModelObjectPlaybackItemMetadata
setEpisode:
episode
setTvEpisode:
requiredProperties
T@"MPAVPolicyEnforcer",&,N,V_policyEnforcer
Tq,N,V_actionAfterQueueLoadOverride
T@"MPQueuePlayer",R,N
T@"MPQueuePlayer",&,N,V_queuePlayer
T@"<MPAVQueueCoordinating>",&,N,V_queueCoordinator
T@"<MPAVQueueController>",R,N,V_queueController
Tq,N,V_displayOverridePlaybackState
Td,N,V_nextFadeOutDuration
externalPlaybackActive
TB,R,N,GisExternalPlaybackActive
TB,N,V_shouldEnforceHDCP
TB,N,V_shouldPostCompatibilityNotifications
TB,N,V_isReloadingForPlaybackContextChange
TB,R,N,V_canAttemptErrorResolution
T@"NSString",R,C,N,V_identifier
Tq,N,V_state
TB,N,V_useAirPlayMusicMode
TB,N,V_managesAirPlayBehaviors
Tq,R,N,V_stateBeforeInterruption
T@"MPQueueFeeder",R,N
T@"MPAVItem",R,N
T@"MPAVRoutingController",R,N
Tq,R,N,V_lastDirection
Tf,N
TB,R,N,V_muted
Td,N
TQ,R,N,V_bufferingState
currentItemReady
TB,R,N,GisCurrentItemReady
Tq,N,V_playbackMode
playing
TB,R,N,GisPlaying
TB,R,N,GisValid
_didResolveError
_disableAirPlayMirroringDuringPlayback
_shouldPreventStateChangesForRateChange
_stallBackgroundTaskIdentifier
_usesAudioOnlyModeForExternalPlayback
_allowsItemErrorResolution
_routingController
_pickedRoute
_periodicTimeObserverToken
_tickTimerEnabled
_tickTimer
_tickInterval
_currentItemBookkeepingTimer
_indexChangeDirection
_contentItemIDAtDeath
_lastDisconnectReason
_lastKnownTimeBeforeDeath
_lastPlaybackIndexChangeTime
_lastSetTime
_lastSetTimeChangeTime
_hasDelayedCurrentTimeToSet
_forceDelayedCurrentTimeToSet
_delayedCurrentTimeToSet
_pendingCurrentTime
_delayedCurrentTimeOptions
_lastSetTimeMarker
_temporaryChapterTime
_autoPlayWhenLikelyToKeepUp
_autoplayDisabledForCurrentItem
_autoPlayBackgroundTaskAssertionEnabled
_autoPlayBackgroundTaskCount
_appHasBeenSuspended
_deactivationReasons
_autoPlayBackgroundTaskIdentifier
_autoPlayTimeoutSource
_nextFadeOutDuration
_hasPendingRate
_hasSentTracePlaybackStartDidFinish
_pendingRateItem
_pendingRate
_pendingChangeForScanning
_boundaryTimeObserver
_boundaryTimes
_boundaryTimeIndexLastPosted
_observerInfos
_observerInfoToCoreMediaObserver
_rateBeforeSeek
_inflightSeekRate
_scanLevel
_scanDirection
_resetRateAfterSeekingUpdateDisabled
_seeklessState
_isSeekingOrScrubbing
_resetRateAfterSeeking
_activeRewindHoldingAtStart
_lastSeekableEnd
_whenSawSeekableEnd
_maxSeekableFwd
_seekFwdSlop
_lastSeekableStart
_whenSawSeekableStart
_maxSeekableRev
_seekRevSlop
_canSeekRev
_canSeekFwd
_alwaysPlayWheneverPossible
_stopAtEnd
_pausedDuringInterruption
_resumePlaybackWhenActive
_useApplicationAudioSession
_playInBackgroundUserDefaultEnabled
_canPlayFastForward
_canPlayFastReverse
_shouldAutoclearDisplayOverride
_state
_displayOverridePlaybackState
_bufferingState
_delayedPlaybackStateNotification
_stallTimerSource
_hasProvidedAudibleLikelyToKeepUp
_hasProvidedAudiblePlay
_itemInitialBookmarkTime
_rateBeforeResignActive
_ubiquitousBookkeepingDisabledCount
_secondsSinceUbiquitousCheckpoint
_videoViewClass
_lastInterruptionEnd
_shouldEnforceHDCP
_clientsWantingExternalPlayback
_currentItemRevisionID
_muted
_shouldPostCompatibilityNotifications
_isReloadingForPlaybackContextChange
_canAttemptErrorResolution
_useAirPlayMusicMode
_managesAirPlayBehaviors
_lastDirection
_policyEnforcer
_actionAfterQueueLoadOverride
_queuePlayer
_queueCoordinator
_queueController
_identifier
_stateBeforeInterruption
beginInterruptionFromInterruptor:
endInterruptionFromInterruptor:category:flags:
beginInterruption
endInterruptionWithFlags:
endInterruption
inputIsAvailableChanged:
queueControllerDidChangeContents:
queueController:failedToLoadItem:
queueController:didChangeContentsWithReplacementPlaybackContext:
queueController:didChangeRepeatType:
queueController:didChangeShuffleType:
queueController:didChangeActionAtQueueEnd:
queueController:didIncrementVersionForSegment:
routingControllerAvailableRoutesDidChange:
routingController:didFailToPickRouteWithError:
routingController:pickedRoutesDidChange:
routingController:pickedRouteDidChange:
routingController:shouldHijackRoute:alertStyle:busyRouteName:presentingAppName:completion:
routingController:volumeControlAvailabilityDidChange:
routingControllerExternalScreenTypeDidChange:
routingControllerDidPauseFromActiveRouteChange:
beginSeek:
_clearLastSetTimeIfPlayerTimeIsValid
_hasValidPlayerTime
_updateLastSetTimeForCurrentItemIfNeeded
changePlaybackIndexBy:deltaType:
changePlaybackIndexBy:deltaType:ignoreElapsedTime:
changePlaybackIndexBy:deltaType:ignoreElapsedTime:error:
changePlaybackIndexBy:deltaType:ignoreElapsedTime:force:error:
endSeek
isSeekingOrScrubbing
currentTimeForBookmarking
currentTime
endPlayback
pauseWithFadeout:
pause
_pauseWithFadeout:forScanning:
play
playWithOptions:
_playWithOptions:allowsEnablingAutoPlay:
setAutoPlayWhenLikelyToKeepUp:
setCurrentTime:
togglePlayback
togglePlaybackWithOptions:
forceRestartPlaybackIfNecessary
beginTickTimerWithInterval:
endTickTimer
isTickTimerEnabled
setClient:wantsToAllowExternalPlayback:
setClient:wantsToAllowExternalPlayback:shouldIgnorePlaybackQueueTransactions:
autoPlayWhenLikelyToKeepUp
currentItem
_showsPlayingWhenInState:
_seeklessStateForState:
isExternalPlaybackActive
isPlaying
shouldDisplayAsPlaying
alwaysPlayWheneverPossible
setAlwaysPlayWheneverPossible:
rate
disableAirPlayMirroringDuringPlayback
_sendTracePlaybackStartDidFinishIfNeededForItem:
setDisableAirPlayMirroringDuringPlayback:
setDisableAirPlayMirroringDuringPlayback:shouldIgnorePlaybackQueueTransactions:
setNextFadeOutDuration:
setRate:
setRate:completion:
_setRate:forScanning:withItem:completion:
hasVolumeControl
volume
setVolume:
stopAtEnd
setStopAtEnd:
routingController
setUseAirPlayMusicMode:
setManagesAirPlayBehaviors:
useApplicationAudioSession
setUseApplicationAudioSession:
isCurrentItemReady
disableAutoplayForCurrentItem
enableAutoplayForCurrentItem
avPlayer
_expectedAssetTypesForPlaybackMode:
externalPlaybackType
externalPlaybackVideoGravity
_playerAVAudioSession
setActive:
becomeActiveWithCompletion:
setExternalPlaybackVideoGravity:
setCurrentTime:options:
setCurrentTime:options:completion:
setUsesAudioOnlyModeForExternalPlayback:
setUsesAudioOnlyModeForExternalPlayback:shouldIgnorePlaybackQueueTransactions:
_setLastSetTime:
reloadWithPlaybackContext:
reloadWithPlaybackContext:completionHandler:
loadSessionWithQueueController:completionHandler:
updateBookkeepingNow
finalizeBookkeepingNow
setState:
shouldHaveNoActionAtEndForState:
showPlaybackStateOverlaysOnTVOut
durationOfCurrentItemIfAvailable
playableDurationOfCurrentItemIfAvailable
timeOfPlayableStart
timeOfPlayableEnd
isLiveStreaming
canSeekBackwards
canSeekForwards
canPlayFastReverse
canSkipToSeekableEnd
skipToSeekableStart
skipToSeekableEnd
_isExternalPlaybackActiveDidChange:
_itemAssetIsLoadedNotification:
_itemBookmarkTimeDidChangeNotification:
_updateStateForPlaybackPrevention
_itemTypeAvailableNotification:
_itemDidChange:
_playerFailedToQueueNotification:
_itemFailedToPlayToEndNotification:
_itemFailedToPlayToEnd:
_itemPlaybackDidEndNotification:
_itemReadyToPlay:
_itemWillChange:
setUbiquitousBookkeepingEnabled:
ubiquitousBookkeepingEnabled
_updateCurrentItemBookkeepingMarkedAsCheckpoint:
_updateCurrentItemBookkeepingForTimerCallback
_rateDidChange:
_configureAudioSession
_connectAVPlayer
_connectAVPlayerDeferringItemLoading:
_disconnectAVPlayerWithReason:
_serverConnectionDidDie:
_streamBufferFull:
_streamLikelyToKeepUp:
_streamRanDry:
_streamUnlikelyToKeepUp:
_timeHasJumpedNotification:
airPlayVideoEnded
airPlayFailedRentalDownloadRequired
_airPlayFailedUnsupportedVideoFormatForDeviceWithError:
_contentsChanged
_canPlayFastForwardDidChange:
_canPlayFastReverseDidChange:
_tracksDidChange:
_durationDidChange:
_shouldPausePlaybackForDeactivationReasons:
_applicationWillAddDeactivationReason:
_applicationDidRemoveDeactivationReason:
_applicationDidEnterBackgroundNotification:
_applicationWillEnterForegroundNotification:
_audioSessionMediaServicesWereResetNotification:
_itemPlayerItemWillChangeNotification:
_itemPlayerItemDidChangeNotification:
_delayedPlaybackIndexChange
_delayedUpdateScanningRate
_verifyDisplayProtection
_applyAirPlayMusicMode
_applyAirPlayMusicModeForItem:shouldIgnorePlaybackQueueTransactions:
_cancelStallTimer
_currentTimeWithPreloadedPlayerTime:value:
_shouldProvideAudiblePlaybackPerformance
_unregisterForPlayer:
_setQueueController:deferItemLoading:
_endSeekAndChangeRate:
_prepareToPlayItem:
_currentIndexInBoundaryCMTimes:
_registerForAVItemNotifications:
_resetInternalState
_setAutoPlayBackgroundTaskAssertionEnabled:
_attemptAutoPlay
_hasEnoughDataToPlay
_setBufferingState:
_setActionAtEndAttributeForState:
_delayedPostPlaybackStateChangedNotification
_postPlaybackStateChangedNotificationWithOriginalState:newState:delayable:
autoclearDisplayOverride
setAutoclearingDisplayOverridePlaybackState:
setDisplayOverridePlaybackState:
_displayPlaybackState
_scheduleUpdateCurrentItemBookkeepingTimer
_pauseBookkeepingTimer
_resumeBookkeepingTimer
_cancelUpdateCurrentItemBookkeepingTimer
_configureUpdateCurrentItemBookkeepingTimer
_clearResetRateAfterSeeking
_setAllowsItemErrorResolution:
_setState:
_setValid:
_unregisterForAVItemNotifications:
_updateProgress:
setRateForScanning:
_updateHasProtectedContentForItem:
_updateScanningRate
_updateTypeForItem:
_delayedSetCurrentTime
_updateSeekingIntervalsForStreaming
_clearSeekingIntervalsForStreaming
_extractImageFromMetadata:
_pauseTickTimer
_resumeTickTimer
_playbackFailedWithError:canResolve:
playbackHasStartedForItem:
handlePlaybackErrorWithUserInfo:
_canPlayItem:
_handlePlaybackErrorResolutionType:forItem:playbackError:resolutionError:
_pausePlaybackIfNecessary
_pausePlaybackIfNecessaryIgnoringVideoLayerAttachment:
_resumePlaybackIfNecessary
_updateCurrentItemDurationSnapshotWithPlayerTime:
_updateDirectionForChangeDelta:
_queueDidEndWithReason:lastItem:
_itemDidSignificantlyChangeElapsedTime:rate:
_enforcingPolicy:
addPeriodicTimeObserverForInterval:usingBlock:
removeTimeObserver:
displayOverridePlaybackState
lastDirection
muted
bufferingState
setPlaybackMode:
state
policyEnforcer
setPolicyEnforcer:
actionAfterQueueLoadOverride
setActionAfterQueueLoadOverride:
queuePlayer
setQueuePlayer:
queueCoordinator
setQueueCoordinator:
queueController
nextFadeOutDuration
shouldEnforceHDCP
setShouldEnforceHDCP:
shouldPostCompatibilityNotifications
setShouldPostCompatibilityNotifications:
isReloadingForPlaybackContextChange
setIsReloadingForPlaybackContextChange:
canAttemptErrorResolution
identifier
useAirPlayMusicMode
managesAirPlayBehaviors
stateBeforeInterruption
isSuspendedUnderLock
jumpToContentItemID:userInitiated:
dataValue
extraAttributes
metadataItemsFromArray:withKey:keySpace:
performSelector:withObject:afterDelay:
removeObserver:forKeyPath:
_itemKeysToObserve
cancelPreviousPerformRequestsWithTarget:selector:object:
postNotification:
performSelector:target:argument:order:modes:
arrayWithObjects:
currentRunLoop
notificationWithName:object:userInfo:
initWithObjectsAndKeys:
beginBackgroundTaskWithExpirationHandler:
endBackgroundTask:
sharedApplication
beginBackgroundTaskWithName:expirationHandler:
_playerKeysToObserve
msv_compactDescription
player:currentItemDidChangeFromItem:toItem:
jumpToContentItemID:
setApplicationAudioSession:
setCategory:error:
isApplicationAudioSession
floatValue
applicationState
isSuspended
silenceOutput:error:
setActive:error:
contentItemIDWithCurrentItemOffset:mode:didReachEnd:
prefersApplicationAudioSession
initialize
isNetworkSupportedPath:
keyPathsForValuesAffectingCurrentItem
outputSupportsAC3
automaticallyNotifiesObserversOfPlaylistManager
initWithObjects:
unsignedIntValue
audioFormats
compare:options:range:
artworkCatalogBlock
T@"NSDictionary",R,C,N,V_lookupDictionary
T@"MPStoreArtworkRequestToken",R,C,N
_lookupDictionary
initWithLookupDictionary:
assets
previewArtworkRequestToken
title
lookupDictionary
T@"NSString",C,N,V_title
T@"NSString",C,N,V_descriptionText
T@"NSDate",C,N,V_startTime
T@"NSDate",C,N,V_endTime
_title
_descriptionText
_startTime
_endTime
T@"NSDate",C,N
setTitle:
setDescriptionText:
startTime
setStartTime:
endTime
setEndTime:
initWithBlock:
radioAvailable
TB,R,N,GisRadioAvailable
_accessQueue
_connection
_hasLaunchedService
_isRadioAvailable
_remoteProcessAssertion
_remoteProcessAssertionCompletionHandler
_remoteProcessAssertionCount
isRadioAvailable
getRecentStationGroupsWithCompletionHandler:
_setRadioAvailable:
_requestedRadioStationProperties
setStationEvents:
setAttributionLabel:
setStationGlyphBlock:
setSubtype:
setLive:
setProviderName:
setHasExplicitContent:
setShortEditorNotes:
setEditorNotes:
setBeats1:
T@"MPModelAlbum",&,D,N
T@"MPModelArtist",&,D,N
T@"MPModelGenre",&,D,N
T@"MPModelComposer",&,D,N
grouping
T@"MPModelFileAsset",&,D,N
homeSharingAsset
T@"MPModelHomeSharingAsset",&,D,N
T@"MPModelPlaybackPosition",&,D,N
T@"MPModelStoreAsset",&,D,N
Td,D,N
Tq,D,N
playCount
skipCount
explicitSong
TB,D,N,GisExplicitSong
artistUploadedContent
TB,D,N,GisArtistUploadedContent
hasVideo
beatsPerMinute
T@"MPModelLyrics",&,D,N
volumeNormalization
Tf,D,N
T@?,C,D,N
hasCloudSyncSource
libraryAdded
TB,D,N,GisLibraryAdded
libraryAddedDate
T@"NSDate",C,D,N
libraryAddEligible
TB,D,N,GisLibraryAddEligible
keepLocalEnableState
keepLocalManagedStatus
year
cloudStatus
gaplessInfo
T@"MPGaplessInfo",&,D,N
volumeAdjustment
traits
TQ,D,N
classicalWork
classicalMovement
classicalMovementCount
classicalMovementNumber
downloadedDate
T@"NSDate",R,C,D,N
lastDevicePlaybackDate
artworkCatalog
insertString:atIndex:
kindWithVariants:
kindWithVariants:options:
__title_KEY
__album_KEY
__artist_KEY
__genre_KEY
__composer_KEY
__grouping_KEY
__copyrightText_KEY
__duration_KEY
__trackCount_KEY
__trackNumber_KEY
__discNumber_KEY
__playCount_KEY
__skipCount_KEY
__explicitSong_KEY
__artistUploadedContent_KEY
__hasVideo_KEY
__beatsPerMinute_KEY
__lyrics_KEY
__shouldShowComposer_KEY
__volumeNormalization_KEY
__artworkCatalogBlock_KEY
__localFileAsset_KEY
__keepLocalEnableState_KEY
__keepLocalManagedStatus_KEY
__libraryAdded_KEY
__libraryAddedDate_KEY
__lastDevicePlaybackDate_KEY
__libraryAddEligible_KEY
__hasCloudSyncSource_KEY
__classicalWork_KEY
__classicalMovement_KEY
__classicalMovementCount_KEY
__classicalMovementNumber_KEY
__year_KEY
__homeSharingAsset_KEY
__storeAsset_KEY
__userRating_KEY
__cloudStatus_KEY
__gaplessInfo_KEY
__volumeAdjustment_KEY
__playbackPosition_KEY
__downloadedDate_KEY
__traits_KEY
TQ,R,N,V_variants
TQ,R,N,V_options
_variants
_options
variants
options
encodeInteger:forKey:
decodeIntegerForKey:
stringWithString:
_discoveryController
_discoveredTelevisions
_serialQueue
setDiscoveryMode:
devicePresenceDetected
getRoutesForCategory:
getPickedRouteHasVolumeControlWithCompletion:
_onQueue_controllerDidDiscoverTelevision:
_onQueue_controllerDidRemoveTelevision:
T@"NSMutableDictionary",R,N
eventName
eventCode
eventPayload
TI,N,V_sessionID
T@"NSString",C,N,V_siriSessionIdentifier
_siriSessionIdentifier
siriSessionIdentifier
setSiriSessionIdentifier:
numberWithUnsignedInt:
T@"MRContentItemMetadataAudioFormat",R,N,V_mediaRemoteAudioFormat
spatialized
TB,N,GisSpatialized
multiChannel
TB,N,GisMultiChannel
T@"NSString",&,N
_mediaRemoteAudioFormat
initWithMediaRemoteAudioFormat:
tier
setTier:
bitrate
setBitrate:
sampleRate
setSampleRate:
bitDepth
setBitDepth:
codec
setCodec:
groupID
setGroupID:
stableVariantID
setStableVariantID:
isSpatialized
setSpatialized:
isMultiChannel
setMultiChannel:
channelLayout
setChannelLayout:
audioChannelLayoutDescription
setAudioChannelLayoutDescription:
mediaRemoteAudioFormat
Tq,R,N,V_version
_version
_appDataDict
_dirtyPopularityDict
initWithAppDataDictionary:
setSongPopularity:forIdentifierSet:
songPopularityForIdentifiers:
setSongPopularity:forAdamID:
songPopularityForAdamID:
createAppDataDictionary
version
dictionaryWithDictionary:
dictionaryWithCapacity:
T@"NSData",R,C,N
_internalInfo
initWithiTunesCloudStoreFileAssetInfo:
assetURL
downloadKey
fairPlayInfoList
flavorType
fileExtension
fileSize
protectionType
playbackAuthorizationToken
T@"<MPMediaRemoteEntityArtworkGenerator>",&,N,V_artworkGenerator
_artworkGenerator
artworkGenerator
setArtworkGenerator:
valueFromSource:context:
translatorWithKeyPath:
translatorWithBlock:
T@"NSString",R,N,V_keyPath
T@?,R,N,V_valueTransformBlock
_keyPath
_valueTransformBlock
keyPath
valueTransformBlock
buildSchemaIfNeeded
identifiersForContentItem:
objectForPropertySet:contentItem:context:
sectionObjectForPropertySet:contentItem:context:
mapIdentifierCreationBlock:
mapPropertyKey:toMPContentItemSelector:
mapArtworkPropertyKey:
mapPropertyKey:toUserInfoKey:
mapPropertyKey:toDeviceSpecificUserInfoKey:
mapPropertyKey:toValueTransformer:
mapRelationshipKey:toModelClass:
stringByAppendingString:
_timerSource
initWithInterval:queue:block:
initWithInterval:repeats:queue:block:
timerWithInterval:block:
timerWithInterval:repeats:block:
timerWithInterval:queue:block:
timerWithInterval:repeats:queue:block:
Tq,N,V_enableState
_enableState
enableState
setEnableState:
T@"NSMutableArray",&,N,V_predicates
_predicates
clearPredicates
addPredicates:
predicatesCount
predicatesAtIndex:
dictionaryRepresentation
readFrom:
writeTo:
copyTo:
predicates
setPredicates:
writeData:forTag:
T@"MPAVController",R,W,N,V_controller
_screenRecordingNotifyToken
_lastKnownScreenRecordingState
_controller
initWithAVController:
_applicationWillEnterForeground:
_isScreenRecordingDidChange:
_registerForScreenRecordingNotifications
_updateScreenRecordingState
_unregisterForScreenRecordingNotifications
controller
_scaledFittingSize
stringRepresentation
initWithTiledArtworkRequest:scaledFittingSize:
T@"MPMediaQuery",R,N,V_mediaQuery
T@"MPMediaItem",R,N,V_firstItem
Tq,R,N,V_shuffleType
Tq,R,N,V_repeatType
_mediaQuery
_firstItem
_shuffleType
_repeatType
initWithMediaRemotePlaybackQueue:options:
verifyWithError:
playbackItemMetadataForMediaItem:
mediaQuery
firstItem
shuffleType
repeatType
initWithDomain:code:userInfo:
initWithData:
T^{_MRSystemAppPlaybackQueue=},R,N
T@"NSDictionary",R,N,V_mediaRemoteOptions
requestingImmediatePlayback
TB,N,GisRequestingImmediatePlayback
T@"NSString",R,C,N,V_queueGroupingID
T@"ICUserIdentity",R,N,V_userIdentity
_mediaRemotePlaybackQueue
_queueGroupingID
_mediaRemoteOptions
isRequestingImmediatePlayback
setRequestingImmediatePlayback:
siriRecommendationIdentifier
siriAssetInfo
featureName
setSiriRecommendationIdentifier:
shouldOverrideManuallyCuratedQueue
setShouldOverrideManuallyCuratedQueue:
replaceIntent
setReplaceIntent:
userInfo
setUserInfo:
queueGroupingID
mediaRemoteOptions
unarchivedObjectOfClass:fromData:error:
valueForKey:
queueWithMediaRemotePlaybackQueue:
queueWithMediaRemotePlaybackQueue:options:
registerRemotePlaybackQueueClass:forPlaybackQueueType:
removeObjectForKey:
T@"NSData",R,N
initWithIdentifier:data:
data
T@"NSURL",R,N
seedTrack
T@"NSString",R,N,V_firstTrackIdentifier
T@"NSArray",R,N,V_trackIdentifiers
T@"MPIdentifierSet",R,N,V_collectionIdentifierSet
_firstTrackIdentifier
_trackIdentifiers
_collectionIdentifierSet
firstTrackIdentifier
trackIdentifiers
collectionIdentifierSet
Tq,R,N,V_stationID
T@"NSString",R,N,V_stationStringID
_stationID
_stationStringID
T@"UIImage",&,N
Td,N,V_accessoryImageSpacing
T@"UIFont",&,N,V_font
T{UIEdgeInsets=dddd},N,V_hitRectInsets
T@"MPAVRoute",&,N
T@"NSString",R,C,N,V_routeTitle
routeLabelHidden
TB,N,GisRouteLabelHidden,V_routeLabelHidden
T@"UIColor",&,N,V_overrideColor
Tq,N,V_routeLabelAxis
_routeLabel
_accessoryImageView
_alphaOverride
_routeLabelHidden
_accessoryImageSpacing
_font
_routeTitle
_overrideColor
_routeLabelAxis
_hitRectInsets
initWithFrame:
layoutSubviews
intrinsicContentSize
pointInside:withEvent:
sizeThatFits:
setHighlighted:
setAlpha:
tintColorDidChange
accessoryImage
setAccessoryImage:
setAccessoryImageSpacing:
setFont:
route
setRoute:
forcesUppercaseText
setForcesUppercaseText:
setRouteLabelHidden:
setRouteLabelAxis:
_intrinsicContentSizeInvalidatedForChildView:
accessoryImageSpacing
font
hitRectInsets
setHitRectInsets:
routeTitle
isRouteLabelHidden
overrideColor
setOverrideColor:
routeLabelAxis
invalidateIntrinsicContentSize
setNeedsLayout
setTintColor:
tintColor
animateWithDuration:delay:options:animations:completion:
alpha
subviews
displayScale
traitCollection
addSubview:
supportsLyricsForURLBagDictionary:
T@"MPModelSong",&,N,V_song
_song
song
setSong:
setText:
T@"NSString",C,N,V_localizedTitle
T@"NSArray",C,N,V_stations
_localizedTitle
_stations
localizedTitle
setLocalizedTitle:
stations
setStations:
T@"MPPropertySet",R,N,V_requestedPropertySet
T@"MPPropertySet",R,N
_requestedBrowseSectionProperties
_requestedPropertySet
requestedPropertySetExcludingInternalOnlyProperties
modelObjectWithTitle:loadAdditionalContentURL:uniformContentItemType:isMemberOfChartSet:isBrick:previouslyRetrievedNestedResponse:
modelObjectWithTitle:loadAdditionalContentURL:uniformContentItemType:isMemberOfChartSet:isBrick:displaysAsGridCellInCarPlay:previouslyRetrievedNestedResponse:onlyContainsEditorialElements:featuredContentKind:
modelObjectWithTitle:loadAdditionalContentURL:uniformContentItemType:isMemberOfChartSet:isBrick:displaysAsGridCellInCarPlay:previouslyRetrievedNestedResponse:onlyContainsEditorialElements:featuredContentKind:modelObject:
requestedPropertySet
setPreviouslyRetrievedNestedResponse:
setBrick:
setMemberOfChartSet:
setUniformContentItemType:
setSectionType:
setDisplaysAsGridCellInCarPlay:
allSupportedInternalOnlyProperties
allSupportedPropertiesIncludingInternalOnlyProperties:
T@"MPSectionedCollection",R,N
_parseOnceToken
_rawResponseOutput
_sectionBuilder
_contentItemBuilder
_filteredFCKinds
_storeBagLinkRegularExpression
_rootObjectIdentifier
initWithRawResponseOutput:sectionBuilder:contentItemBuilder:filteredFCKinds:userIdentity:rootObjectIdentifier:options:storeBagDictionary:
_parsedSectionedCollection
_parsedEditorialElements:
_parsedEditorialElementX:
_parsedEditorialElement:
bagRoomURLRegularExpression
musicAPIURLWithLinkURLString:
linkSectionWithDictionary:
featuredContentKindForNode:
attributesForContentNode:
firstChildOfContentNode:
childrenOfContentNode:
linksForContentNode:
featuredContentKindCorrespondsToItem:
isContentNodeAnEditorialElement:
_parsedContentNode:uniformContentItemTypeResolver:additionalAttributesFromParent:
substringWithRange:
rangeWithName:
matchesInString:options:range:
regularExpressionWithPattern:options:error:
containsIndex:
enumerateIndexesUsingBlock:
addIndex:
_requestedAlbumProperties
setRepresentativeSong:
setSongPopularityBlock:
setGenre:
setTraits:
setVolumeNormalization:
setPreorder:
setYear:
components:fromDate:
setReleaseDateComponents:
setCopyrightText:
setClassical:
setCompilation:
setKeepLocalManagedStatus:
setKeepLocalEnableState:
setLibraryAdded:
setMaximumItemTrackNumber:
setLibraryAddEligible:
setHasCleanContent:
setDiscCount:
setTrackCount:
stringValue
DSIDForUserIdentity:outError:
T@"NSString",C,N,V_shuffleStartingSectionIdentifier
T@"NSString",C,N,V_shuffleStartingItemIdentifier
delegate
T@"<MPShuffleableSectionedIdentifierListDelegate>",W,D,N
Tq,N,V_shuffleType
_shuffledList
_shuffleStartingSectionIdentifier
_shuffleStartingItemIdentifier
didDequeueShuffledItemsInSSIL:
didDequeueShuffledItemsInSectionedIdentifierList:
sectionedIdentifierList:dataSourceDidChangeItems:inSection:
sectionedIdentifierList:dataSourceDidAddItems:toSection:
sectionedIdentifierList:dataSourceDidMoveItems:inSection:
sectionedIdentifierList:dataSourceDidRemoveItems:fromSection:
sectionedIdentifierList:dataSourceDidUpdateItems:inSection:
sectionedIdentifierList:dataSourceDidUpdateSection:
encodeWithCoder:withExclusiveAccessToken:
setShuffleType:
setShuffleType:startingItem:inSection:
setShuffleType:startingItem:inSection:randomSource:
safelyReshuffleAfterItem:inSection:
enumeratorWithOptions:startPosition:endPosition:withExclusiveAccessToken:
addDataSourceAtStart:section:completion:
addDataSource:section:afterItem:inSection:completion:
addDataSource:section:afterTailOfSection:completion:
addDataSourceAtEnd:section:completion:
addDataSourceAtStart:section:sequentially:completion:
addDataSource:section:sequentially:afterItem:inSection:completion:
addDataSource:section:sequentially:afterTailOfSection:completion:
addDataSourceAtEnd:section:sequentially:completion:
replaceDataSource:forSection:completion:
moveItemToStart:fromSection:
moveItemToEnd:fromSection:
moveItem:fromSection:afterItem:inSection:
moveItem:fromSection:afterHeadOfSection:
moveItem:fromSection:afterTailOfSection:
removeItem:fromSection:
_itemCountWithExclusiveAccessToken:
dataSourceInsertItemsAtHead:inSection:
dataSourceInsertItems:afterItem:inSection:
dataSourceInsertItemsAtTail:inSection:
dataSourceRemoveItem:fromSection:
dataSourceReloadItem:inSection:
_candidateItemsWithExclusiveAccessToken:
_dequeueCandidatesWithQuota:withExclusiveAccessToken:
_shuffledListWithExclusiveAccessToken:
addDataSource:section:afterHeadOfSection:
shuffleStartingSectionIdentifier
setShuffleStartingSectionIdentifier:
shuffleStartingItemIdentifier
setShuffleStartingItemIdentifier:
doesNotRecognizeSelector:
assertHasExclusiveAccessForOwner:
dequeueCandidatesWithQuota:
candidateItems
itemCount
_isSequentialSection:withExclusiveAccessToken:
addDataSourceAtEnd:section:sequentially:
addDataSource:section:sequentially:afterTailOfSection:
addDataSource:section:sequentially:afterItem:inSection:
addDataSourceAtStart:section:sequentially:
initWithSectionedIdentifierList:randomSource:startingItemEntry:withExclusiveAccessToken:
T@"<_MPSSILDelegate>",W,D,N
T@"MPRandomDistribution",R,N,V_randomDistribution
T@"NSMutableArray",&,N,V_candidateItems
_randomDistribution
_candidateItems
_beforeInitWithCoder:
_enumerator:didEncounterEntry:withExclusiveAccessToken:
_reverseEnumeratorWillStartAtEnd:withExclusiveAccessToken:
_addShuffleSection:dataSource:withExclusiveAccessToken:
_appendShuffledItems:withExclusiveAccessToken:
_createShuffleCloneForItem:inSection:withExclusiveAccessToken:
randomDistribution
setCandidateItems:
section:shouldShuffleExcludeItem:
removeObjectAtIndex:
lastObject
indexOfObjectPassingTest:
enumerateKeysAndObjectsUsingBlock:
T@"MPStoreLyricsSnippetURLComponents",&,N,V_snippetURL
_snippetURL
snippetURL
setSnippetURL:
T{shared_ptr<mlcore::LocalizedSearchScope>=^{LocalizedSearchScope}^{__shared_weak_count}},R,N
T@"MPModelKind",&,N,V_itemKind
T@"NSString",R,C,N,V_name
T@"MPPropertySet",R,C,N,V_itemProperties
_coreScope
_itemKind
_name
initWithItemKind:name:properties:
coreScope
setItemKind:
T@"MPModelLibraryAlbumAppDataChangeRequest",C,N,V_request
setValues:forProperties:async:withCompletionBlock:
anyInLibrary:predicate:
autoupdatingSharedLibrary
predicateWithProperty:equalToInt64:
dataWithPropertyList:format:options:error:
allSupportedItemProperties
allSupportedSectionProperties
T@"MPModelPlaylist",&,N,V_playlist
T@"MPModelObject",&,N,V_representativeModelObject
T@"MPModelObject",&,N,V_referralObject
T@"MPSectionedCollection",&,N,V_songResults
T@?,C,N,V_storeImportAllowedHandler
_playlist
_representativeModelObject
_referralObject
_songResults
_storeImportAllowedHandler
playlist
setPlaylist:
representativeModelObject
setRepresentativeModelObject:
referralObject
setReferralObject:
songResults
setSongResults:
storeImportAllowedHandler
setStoreImportAllowedHandler:
_artworkCatalogWithArtworkType:
screenshotArtworkCatalog
artworkCatalogCacheProperties
screenshotArtworkCatalogCacheProperties
T@"MPModelStoreBrowseResponseParser",&,N,V_parser
T@"MPChangeDetails",&,N,V_changeDetails
_changeDetails
_parser
hasAdditionalContentItems
changeDetails
setChangeDetails:
parser
setParser:
T@"NSObject<OS_dispatch_queue>",&,N,V_artworkResizingAccessQueue
T@"NSOperationQueue",&,N,V_artworkResizingOperationQueue
T@"NSMapTable",&,N,V_artworkResizingOperations
_artworkResizingAccessQueue
_artworkResizingOperationQueue
_artworkResizingOperations
resizeImage:scaledFittingSize:useExactFittingSizeAsDestinationSize:saveToDestinationURL:completionHandler:
cancelResizeImage:
artworkResizingAccessQueue
setArtworkResizingAccessQueue:
artworkResizingOperationQueue
setArtworkResizingOperationQueue:
artworkResizingOperations
setArtworkResizingOperations:
strongToStrongObjectsMapTable
Tq,N,V_discoveryMode
TB,R,N,GisDevicePresenceDetected
T@"<MPAVLightweightRoutingControllerDelegate>",W,N,V_delegate
_avDiscoverySession
_discoveryMode
_delegate
initWithName:
isDevicePresenceDetected
pickedRoutes
_availableOutputDevicesDidChangeNotification:
_outputContextDevicesDidChangeNotification:
discoveryMode
setDelegate:
outputContextForID:
initWithDeviceFeatures:
T@,R,N
_sectionedItems
_sections
mutableCopyWithZone:
lastItem
allItems
allSections
numberOfSections
sectionAtIndex:
numberOfItemsInSection:
itemAtIndexPath:
enumerateSectionsUsingBlock:
enumerateItemsInSectionAtIndex:usingBlock:
enumerateItemsUsingBlock:
firstSection
globalIndexForIndexPath:
indexPathForGlobalIndex:
itemsInSectionAtIndex:
hasSameContentAsSectionedCollection:
lastSection
totalItemCount
changeDetailsToSectionedCollection:isEqualBlock:isUpdatedBlock:
changeDetailsToSectionedCollection:applyingUIKitWorkarounds:isEqualBlock:isUpdatedBlock:
_initializeAsEmptySectionedCollection
indexPathByAddingIndex:
section
indexPathWithIndex:
removeIndex:
indexSet
indexPathForItem:inSection:
insertSection:atIndex:
removeSectionAtIndex:
moveSectionFromIndex:toIndex:
replaceSectionAtIndex:withObject:
appendSection:
insertItem:atIndexPath:
removeItemAtIndexPath:
replaceObjectAtIndexPath:withObject:
moveItemFromIndexPath:toIndexPath:
appendItem:
appendItems:
removeAllObjects
replaceSectionsUsingBlock:
replaceItemsUsingBlock:
insertObject:atIndex:
exchangeObjectAtIndex:withObjectAtIndex:
identifiersForItemAtIndexPath:
identifiersForSectionAtIndex:
enumerateItemIdentifiersUsingBlock:
enumerateSectionIdentifiersUsingBlock:
enumerateItemIdentifiersInSectionAtIndex:usingBlock:
indexPathForItemWithIdentifiersIntersectingSet:
_storeAssetBuilder
_storeAssetProperties
_requestedTVShowProperties
setEditorialArtworkCatalogBlock:
setTagline:
setEpisodesCount:
setShortTitle:
datePlayed
T@"MPModelPlaylist",&,D,N
radioStation
T@"MPModelRadioStation",&,D,N
group
T@"MPModelGroup",&,D,N
itemType
genericObjectRepresentation
__datePlayed_KEY
__featureName_KEY
__playlist_KEY
__radioStation_KEY
__group_KEY
playEventWithModelObject:featureName:
setFeatureName:
setGroup:
additionalURLRequestsWithStoreBagDictionary:
additionalCatalogURLQueryItems
groupingNameBagKey
groupingNameWithMusicSubscriptionDictionary:
rootObjectIdentifierWithSubscriptionStatus:
recentlyPlayedSectionWithTitle:
recentlyPlayedItemsWithAPILoadedOutput:
recentlyPlayedItemWithDictionary:
radioStationWithDictionary:
requestWithURL:
TQ,N,V_options
T@"NSMutableArray",&,N,V_contexts
T@"NSMutableArray",&,N,V_nextEmittableEnumerationResults
T@"MPSectionedIdentifierListEntry",&,N,V_endEntry
T@"MPSectionedIdentifierList",R,N,V_sectionedIdentifierList
_sectionedIdentifierList
_contexts
_nextEmittableEnumerationResults
_endEntry
initWithSectionedIdentifierList:options:startEntry:endEntry:withExclusiveAccessToken:
nextObjectWithExclusiveAccessToken:
nextObject
sectionedIdentifierList
setOptions:
contexts
setContexts:
nextEmittableEnumerationResults
setNextEmittableEnumerationResults:
endEntry
setEndEntry:
removeLastObject
reverseObjectEnumerator
Tq,R,N,V_entryType
_entryType
itemResult
trackingEntryResult
branchDepth
entryType
startEntry
nextObjectIdenticalTo:
T@"NSMutableArray",&,N,V_entriesToEmit
_startEntryProxy
_entriesToEmit
entriesToEmit
setEntriesToEmit:
indexOfObjectIdenticalTo:
objectEnumerator
iTunesStoreStream
TB,R,N,GisiTunesStoreStream
initWithiTunesCloudStoreHLSAssetInfo:
playlistURL
keyCertificateURL
keyServerURL
alternatePlaylistURL
alternateKeyCertificateURL
alternateKeyServerURL
isiTunesStoreStream
enhancedAudioKeyCertificateURL
enhancedAudioKeyServerURL
Td,N,V_blockingSecureKeyLoadDuration
T@"NSNumber",C,N,V_perceivedTotalStartupTime
Td,N,V_tracklistLoadDuration
_blockingSecureKeyLoadDuration
_perceivedTotalStartupTime
_tracklistLoadDuration
blockingSecureKeyLoadDuration
setBlockingSecureKeyLoadDuration:
perceivedTotalStartupTime
setPerceivedTotalStartupTime:
tracklistLoadDuration
setTracklistLoadDuration:
TB,N,S_setIsOffScreen:
T@"UILayoutGuide",R,N,V_trackLayoutGuide
T@"UIView",R,W,N
T@"MPVolumeController",&,N,V_volumeController
T@"MPAVController",&,N,V_player
T@"MPAVEndpointRoute",&,N,V_groupRoute
T@"MPAVOutputDeviceRoute",&,N,V_outputDeviceRoute
optimisticState
TB,N,GisInOptimisticState,V_optimisticState
Tf,N,V_optimisticValue
Tq,R,N,V_style
T@"UIImage",&,N,V_volumeWarningTrackImage
T@"UIWindowScene",R,N
onScreenForVolumeDisplay
TB,R,N,GisOnScreenForVolumeDisplay
onScreen
TB,R,N,GisOnScreen
_commitTimer
_routeNameLabel
_style
_thumbImageView
_isOffScreen
_forcingOffscreenVisibility
_thumbIsDefault
_configuredLayoutGuide
_volumeWarningView
_volumeWarningBlinking
_volumeWarningTrackImage
_beganTrackingFromEUVolumeLimit
_originalMinTrackViewAlphaOverride
_originalMinValueViewAlphaOverride
_originalMaxValueViewAlphaOverride
_isCurrentlyTracking
_setVolumeStartValue
_coalescedVolumeDidChangeLogCount
_optimisticState
_optimisticValue
_trackLayoutGuide
_volumeController
_player
_groupRoute
_outputDeviceRoute
windowSceneForVolumeDisplay
isOnScreenForVolumeDisplay
volumeAudioCategory
isOnScreen
volumeController:volumeControlAvailableDidChange:
volumeController:volumeControlCapabilitiesDidChange:
volumeController:volumeControlLabelDidChange:
volumeController:volumeValueDidChange:
volumeController:mutedStateDidChange:
volumeController:volumeWarningStateDidChange:
volumeController:EUVolumeLimitDidChange:
volumeController:EUVolumeLimitEnforcedDidChange:
initWithFrame:style:
initWithFrame:style:endpointRoute:outputDeviceRoute:
createThumbView
maximumValue
minimumValue
setThumbImage:forState:
setValue:animated:
thumbRectForBounds:trackRect:value:
trackRectForBounds:
beginTrackingWithTouch:withEvent:
continueTrackingWithTouch:withEvent:
endTrackingWithTouch:withEvent:
cancelTrackingWithEvent:
_endTracking
didMoveToSuperview
didMoveToWindow
hitRect
setHidden:
setUserInteractionEnabled:
_dynamicUserInterfaceTraitDidChange
volumeControlLabel
setOptimisticValue:
setVolumeController:
setGroupRoute:
setOutputDeviceRoute:
setVolumeDataSource:
setVolumeWarningTrackImage:
updateVolume
_setIsOffScreen:
thumbView
_commitVolumeChange
_thumbImageForStyle:
_minTrackImageForStyle:
_maxTrackImageForStyle:
_resetThumbImageForState:
_layoutForAvailableRoutes
_layoutVolumeWarningView
_beginBlinkingWarningView
_blinkWarningView
_endBlinkingWarningView
_newVolumeWarningView
_routeName
_logVolumeValueDidChange:
style
volumeWarningTrackImage
trackLayoutGuide
volumeController
player
setPlayer:
groupRoute
outputDeviceRoute
isInOptimisticState
setOptimisticState:
optimisticValue
resizableImageWithCapInsets:
_flatImageWithColor:
colorWithRed:green:blue:alpha:
stretchableImageWithLeftCapWidth:topCapHeight:
imageNamed:inBundle:
isHidden
removeFromSuperview
frame
insertSubview:belowSubview:
superview
performWithoutAnimation:
setOpaque:
boldSystemFontOfSize:
animateWithDuration:animations:completion:
_maxValueView
_minValueView
_minTrackView
maximumTrackImageForState:
blackColor
whiteColor
minimumTrackImageForState:
_systemInteractionTintColor
thumbImageForState:
setShadowOffset:
setShadowBlurRadius:
setShadowColor:
colorWithWhite:alpha:
shouldMakeUIForDefaultPNG
sendActionsForControlEvents:
window
windowScene
_setDrawsAsBackdropOverlay:
_setDrawsAsBackdropOverlayWithBlendMode:
activateConstraints:
_maxTrackView
trailingAnchor
leadingAnchor
bottomAnchor
constraintEqualToAnchor:
topAnchor
scheduledTimerWithTimeInterval:target:selector:userInfo:repeats:
locationInView:
setShadowPath:
layer
CGPath
bezierPathWithOvalInRect:
allowUserToExceedEUVolumeLimit
sharedAVSystemController
setShadowOpacity:
setShadowRadius:
setClipsToBounds:
userInterfaceIdiom
currentDevice
addLayoutGuide:
setMaximumTrackImage:forState:
setMinimumTrackImage:forState:
T@"MPVolumeSlider",R,N
wirelessRoutesAvailable
TB,R,N,GareWirelessRoutesAvailable
wirelessRouteActive
TB,R,N,GisWirelessRouteActive
_lightweightRoutingController
_hasNonDefaultRouteButtonImages
_hasNonDefaultMaxVolumeSliderImage
_hasNonDefaultMinVolumeSliderImage
_hidesRouteLabelWhenNoRouteChoice
_routeButton
_routeDiscoveryEnabled
_showingButton
_showingLabel
_showingSlider
_showsRouteButton
_showsVolumeSlider
_volumeSlider
_volumeSliderShrinksFromBothEnds
_wirelessRouteIsPicked
_wirelessRoutesAvailable
_pushedRouteDiscoveryModeState
lightweightRoutingController:didChangeDevicePresenceDetected:
lightweightRoutingController:didChangePickedRoutes:
_initWithStyle:
isWirelessRouteActive
areWirelessRoutesAvailable
minimumVolumeSliderImageForState:
maximumVolumeSliderImageForState:
volumeWarningSliderImage
routeButtonImageForState:
routeButtonRectForBounds:
setMinimumVolumeSliderImage:forState:
setMaximumVolumeSliderImage:forState:
setVolumeWarningSliderImage:
setRouteButtonImage:forState:
setShowsRouteButton:
setShowsVolumeSlider:
setVolumeThumbImage:forState:
showsRouteButton
showsVolumeSlider
volumeSliderRectForBounds:
volumeThumbImageForState:
volumeThumbRectForBounds:volumeSliderRect:value:
volumeSlider
hidesRouteLabelWhenNoRouteChoice
volumeSliderShrinksFromBothEnds
setHidesRouteLabelWhenNoRouteChoice:
setVolumeSliderShrinksFromBothEnds:
isVisible
isShowingRouteButton
_createSubviews
_defaultRouteButtonImageAsSelected:
_loadAudioRoutePickerIfNeeded
_displayAudioRoutePicker
_startPrewarmingAudioRoutePicker
_stopPrewarmingAudioRoutePicker
_getDefaultVolumeSliderFrame:routeButtonFrame:forBounds:
_setShowsRouteButton:animated:
_setShowsVolumeSlider:
_setRouteDiscoveryEnabled:
_updateWirelessRouteStatus
_volumeSliderVolumeControlAvailabilityDidChangeNotification:
setSelected:
localizedStringForKey:value:table:
bundleWithIdentifier:
layoutBelowIfNeeded
animateWithDuration:animations:
addTarget:action:forControlEvents:
setShowsTouchWhenHighlighted:
setImage:forState:
systemBlueColor
setAutoresizingMask:
convertRect:fromView:
convertRect:toView:
setCharge:
_setChargeEnabled:
sizeToFit
imageForState:
convertPoint:fromView:
allowsKeyedCoding
containsValueForKey:
objCType
T@"MPMediaQuery",C,N,V_legacyMediaQuery
T@"MPMediaLibrary",&,N,V_mediaLibrary
T@"NSArray",C,N,V_allowedItemIdentifiers
T@"NSArray",C,N,V_allowedSectionIdentifiers
T@"NSArray",C,N,V_scopedContainers
TQ,N,V_filteringOptions
T@"NSString",C,N,V_filterText
T{_NSRange=QQ},N,V_contentRange
TB,N,V_wantsDetailedKeepLocalRequestableResponse
TB,N,V_sortUsingAllowedItemIdentifiers
_wantsDetailedKeepLocalRequestableResponse
_sortUsingAllowedItemIdentifiers
_mediaLibrary
_allowedItemIdentifiers
_allowedSectionIdentifiers
_scopedContainers
_filterText
_legacyMediaQuery
_contentRange
wantsDetailedKeepLocalRequestableResponse
setWantsDetailedKeepLocalRequestableResponse:
mediaLibrary
setLegacyMediaQuery:
itemTranslationContext
sectionTranslationContext
setMediaLibrary:
allowedItemIdentifiers
setAllowedItemIdentifiers:
allowedSectionIdentifiers
setAllowedSectionIdentifiers:
scopedContainers
setScopedContainers:
setFilteringOptions:
filterText
setFilterText:
contentRange
setContentRange:
sortUsingAllowedItemIdentifiers
setSortUsingAllowedItemIdentifiers:
legacyMediaQuery
encodeInt64:forKey:
deleteCharactersInRange:
T@"NSArray",C,N,V_sectionKeepLocalStatusConfigurations
T@"MPMediaLibraryConnectionAssertion",&,N,V_libraryAssertion
_sectionKeepLocalStatusConfigurations
_libraryAssertion
newOperationForDetailedKeepLocalStatusConfigurationForSectionAtIndex:responseHandler:
_mediaLibraryDidChangeNotification:
sectionKeepLocalStatusConfigurations
setSectionKeepLocalStatusConfigurations:
libraryAssertion
setLibraryAssertion:
setDownloadablePlaylistItemEntityQueryBlock:
downloadablePlaylistItemEntityQueryBlock
setDownloadableItemsQuery:
downloadableItemsQuery
T@?,C,N,V_downloadablePlaylistItemEntityQueryBlock
T{shared_ptr<mlcore::EntityQuery>=^{EntityQuery}^{__shared_weak_count}},N,V_downloadableItemsQuery
_downloadablePlaylistItemEntityQueryBlock
_downloadableItemsQuery
writeQueue
T@"NSObject<OS_dispatch_queue>",&,N,G_writeQueue,V_writeQueue
T@"MPMediaItem",&,N
_hasValidMediaItemValuesForProperties
_hasEvaluatedOfflineHLS
_isOfflineHLS
_mediaItemValuesForProperties
_playbackKeys
_writeQueue
initWithMediaItem:
buyParameters
cachedLocalPlaybackAssetFilePathReturningAssetQuality:protectionType:usesPurchaseBundle:
downloadIdentifier
prefersStoreContentInfo
endpointType
hlsPlaylistURLString
hlsOfflinePlaybackKeys
isOfflineHLS
isSubscriptionRequired
iTunesStoreContentID
iTunesStoreContentDSID
localNetworkContentURL
mediaLibraryPersistentID
protectedContentSupportStorageURL
setCachedLocalPlaybackAssetFilePath:protectionType:assetQuality:withCompletionHandler:
clearLocalPlaybackAssetFilePathWithCompletionHandler:
shouldRememberBookmarkTime
shouldReportPlayEventsToStore
storeUbiquitousIdentifier
streamingPlaybackAssetDestinationFilePathForAssetQuality:assetFlavor:protectionType:pathExtension:
setMediaItem:
_persistURI:persistentContentKey:
_cachedLocalPlaybackAssetFilePathWithIntegrityCheck:returningAssetQuality:protectionType:usesPurchaseBundle:
_invalidateMediaItemProperties
_onqueue_mediaItemValuesForProperties
setWriteQueue:
removeItemAtPath:error:
defaultManager
streamingPlaybackAssetDestinationFilePathForMediaLibraryPersistentID:storeAdamID:storeSagaID:assetQuality:assetFlavor:protectionType:pathExtension:
setHasStoreLyrics:
setShouldShowComposer:
setLocalFileAsset:
setProtectionType:
setQualityType:
setFilePath:
setPurchaseBundleFilePath:
stringByAppendingPathExtension:
stringByDeletingPathExtension
setNonPurgeable:
setComposer:
setHomeSharingAsset:
setURL:
setAvailable:
setStoreAsset:
setShouldReportPlayEvents:
setEndpointType:
setRedownloadable:
setPlaybackPosition:
setUserRating:
setHasVideo:
setArtistUploadedContent:
setExplicitSong:
pathExtension
fileExistsAtPath:isDirectory:
unarchivedObjectOfClasses:fromData:error:
unsignedIntegerValue
_highQualityCachedAssetDestinationDirectory
_lowQualityCachedAssetDestinationDirectory
createDirectoryAtPath:withIntermediateDirectories:attributes:error:
fileExistsAtPath:
pathForResourceFileOrFolder:
stringByAppendingPathComponent:
Tq,N,V_filteringPolicy
Tq,N,V_requestEndpoint
Tq,N,V_mode
Tq,N,V_types
TB,N,V_withSocial
TB,N,V_withPlainEditorialNotes
Tq,N,V_displayFilterKinds
TB,N,V_withRecentlyPlayed
T@"NSURL",C,N,V_customForYouURL
_withSocial
_withPlainEditorialNotes
_withRecentlyPlayed
_filteringPolicy
_requestEndpoint
_mode
_types
_displayFilterKinds
_customForYouURL
filteringPolicy
setFilteringPolicy:
requestEndpoint
setRequestEndpoint:
mode
setMode:
types
setTypes:
withSocial
setWithSocial:
withPlainEditorialNotes
setWithPlainEditorialNotes:
displayFilterKinds
setDisplayFilterKinds:
withRecentlyPlayed
setWithRecentlyPlayed:
customForYouURL
setCustomForYouURL:
T@"NSString",C,N,V_deviceIdentifier
T@"NSString",C,N,V_generation
_deviceIdentifier
_generation
compare:
deviceIdentifier
setDeviceIdentifier:
generation
setGeneration:
positionKeyWithDeviceIdentifier:generation:
T@"MPSectionedIdentifierListEntryPositionKey",R,N,V_positionKey
T@"NSString",R,N,V_sectionIdentifier
T@"NSString",C,N,V_hostedSectionIdentifier
T@"NSArray",R,N,V_nextEntries
T@"MPSectionedIdentifierListEntry",W,N,V_previousEntry
Tq,N,V_branchDepth
dataSourceRemoved
TB,R,N,GisDataSourceRemoved,V_dataSourceRemoved
_nextEntries
_dataSourceRemoved
_positionKey
_sectionIdentifier
_hostedSectionIdentifier
_previousEntry
_branchDepth
initWithPositionKey:sectionIdentifier:
addBranch:forceBranchDepthIncrease:
addNextEntry:
prepareForDealloc
setDataSourceRemoved
isDataSourceRemoved
nextEntries
positionKey
sectionIdentifier
hostedSectionIdentifier
setHostedSectionIdentifier:
previousEntry
setPreviousEntry:
setBranchDepth:
removed
TB,R,N,GisRemoved
itemIdentifier
isRemoved
tailEntryWithSectionHeadEntry:
T@"MPSectionedIdentifierListHeadEntry",W,N,V_sectionHeadEntry
_sectionHeadEntry
sectionHeadEntry
setSectionHeadEntry:
lastItemEntry
T@"NSMutableDictionary",R,N,V_identifiersItemEntryMap
T@"MPSectionedIdentifierListTailEntry",&,N,V_tailEntry
T@"MPSectionedIdentifierListItemEntry",&,N,V_lastItemEntry
T@"<MPSectionedIdentifierListDataSource>",&,N,V_dataSource
shuffledHead
TB,N,GisShuffledHead,V_shuffledHead
_shuffledHead
_identifiersItemEntryMap
_tailEntry
_lastItemEntry
_dataSource
identifiersItemEntryMap
tailEntry
setTailEntry:
setLastItemEntry:
dataSource
setDataSource:
isShuffledHead
setShuffledHead:
headEntryWithSectionIdentifier:
T@"NSString",R,N,V_itemIdentifier
T@"MPSectionedIdentifierListItemEntry",W,N,V_rootEntry
T@"MPSectionedIdentifierListItemEntry",R,N
TB,R,N,V_hasClones
T@"NSMutableArray",&,N,V_clonedEntries
T{?=BBBBBBBBq},R,N
dataSourceCloned
TB,R,N,GisDataSourceCloned,V_dataSourceCloned
dataSourceMoved
TB,R,N,GisDataSourceMoved,V_dataSourceMoved
userRemoved
TB,R,N,GisUserRemoved,V_userRemoved
userMoved
TB,R,N,GisUserMoved,V_userMoved
userCloned
TB,R,N,GisUserCloned,V_userCloned
_hasClones
_dataSourceCloned
_dataSourceMoved
_userRemoved
_userMoved
_userCloned
_itemIdentifier
_rootEntry
_clonedEntries
setDataSourceCloned
setDataSourceMoved
setUserRemoved
setUserMoved
setUserCloned
latestUserClone
latestDataSourceClone
newClonedEntry
_generationNumber
rootEntry
setRootEntry:
hasClones
clonedEntries
setClonedEntries:
isDataSourceCloned
isDataSourceMoved
isUserRemoved
isUserMoved
isUserCloned
itemEntryWithSectionIdentifier:itemIdentifier:generationPrefix:
itemEntryWithSectionIdentifier:itemIdentifier:
TI,R,N
T@"NSDictionary",R,N
Td,R,N,V_timeout
T@"MPRemoteCommand",R,N,V_command
Td,R,N,V_timestamp
_contextID
_commandID
_command
_timestamp
_timeout
initWithCommand:mediaRemoteType:options:
mediaRemoteCommandType
contextID
commandID
interfaceID
sourceID
playbackQueueOffset
command
timestamp
timeout
eventWithCommand:mediaRemoteType:options:
TQ,R,N,V_type
_commandType
T@"NSString",R,N,V_sessionIdentifier
_sessionIdentifier
sessionIdentifier
T@"NSString",R,N,V_eventIdentifier
T@"NSString",R,N,V_eventType
_eventIdentifier
_eventType
eventIdentifier
eventType
Tq,R,N,V_queueEndAction
TB,R,N,V_preservesQueueEndAction
_preservesQueueEndAction
_queueEndAction
queueEndAction
preservesQueueEndAction
T@"NSString",R,N,V_identifier
T@"NSString",R,N,V_revision
Tq,R,N,V_priority
_revision
_priority
revision
priority
T@"NSString",R,N,V_type
T@"NSURL",R,N,V_playbackSessionDataFilePath
T@"NSDictionary",R,N,V_metadata
_playbackSessionDataFilePath
_metadata
playbackSessionDataFilePath
metadata
propertyListWithData:options:format:error:
T@"NSData",R,N,V_playbackSessionData
_playbackSessionData
playbackSessionData
T@"NSString",R,N,V_insertBeforeContextItemID
T@"NSString",R,N,V_insertAfterContextItemID
Tq,R,N,V_destinationOffset
_insertBeforeContextItemID
_insertAfterContextItemID
_destinationOffset
insertBeforeContextItemID
insertAfterContextItemID
destinationOffset
TB,R,N,V_preservesRepeatMode
_preservesRepeatMode
preservesRepeatMode
TB,R,N,V_preservesShuffleMode
_preservesShuffleMode
preservesShuffleMode
T@"NSArray",R,C,N,V_supportedInsertionPositions
Tq,R,N,V_insertionPosition
T@"MPRemotePlaybackQueue",R,N,V_playbackQueue
T@"NSNumber",R,N,V_privateListeningOverride
T@"NSString",R,N,V_insertAfterContentItemID
_supportedInsertionPositions
_insertionPosition
_playbackQueue
_privateListeningOverride
_insertAfterContentItemID
initWithCommand:playbackQueue:options:
supportedInsertionPositions
insertionPosition
playbackQueue
privateListeningOverride
insertAfterContentItemID
T@"NSString",R,N,V_sessionIdentifierOverride
_sessionIdentifierOverride
initWithCommand:playbackQueue:
sessionIdentifierOverride
T@"NSURL",R,N,V_stationURL
requestingPlaybackInitialization
TB,R,N,GisRequestingPlaybackInitialization,V_requestingPlaybackInitialization
_requestingPlaybackInitialization
_stationURL
stationURL
isRequestingPlaybackInitialization
Td,R,N,V_positionTime
_positionTime
positionTime
T@"MPNowPlayingInfoLanguageOption",R,N,V_languageOption
Tq,R,N,V_setting
_languageOption
_setting
languageOption
setting
requestingDefermentToPlaybackQueuePosition
TB,R,N,GisRequestingDefermentToPlaybackQueuePosition,V_requestingDefermentToPlaybackQueuePosition
_requestingDefermentToPlaybackQueuePosition
isRequestingDefermentToPlaybackQueuePosition
negative
TB,R,N,GisNegative,V_negative
_negative
isNegative
Tf,R,N,V_rating
_rating
rating
Tf,R,N,V_playbackRate
_playbackRate
playbackRate
Td,R,N,V_interval
_interval
interval
T@"UIColor",R,N,V_textColor
TB,R,N,V_hasTitle
_hasTitle
_textColor
initWithTextColor:hasTitle:
textColor
hasTitle
T@"NSDictionary",&,N,V_indexPathToContainerUniqueIDMap
T{shared_ptr<std::vector<std::shared_ptr<mlcore::Entity>>>=^v^{__shared_weak_count}},R,N,V_itemIdentifierQueryResults
T{shared_ptr<mlcore::EntityQueryResult>=^{EntityQueryResult}^{__shared_weak_count}},R,N,V_itemQueryResults
T@"MPModelLibraryRequest",R,N,V_request
_entityTranslationContext
_allowedItemPersistentIDs
_allowedItemPersistentIDToItemQueryResultsIndexMap
_indexPathToContainerUniqueIDMap
_itemIdentifierQueryResults
_itemQueryResults
sectionIndexTitles
optionalSectionIndexTitlesRange
indexOfSectionForSectionIndexTitleAtIndex:
hasSameContentAsDataSource:
initWithRequest:itemQueryResults:itemIdentifierQueryResults:
_usesSections
_populateIndexMap
_adjustedGlobalIndexForIndexPath:
_allowedEntityIdentifiersContainsAllPersistentIDs
_buildIndexPathToContainerUniqueIDMapFromItemQueryResults:
indexPathToContainerUniqueIDMap
setIndexPathToContainerUniqueIDMap:
itemIdentifierQueryResults
itemQueryResults
indexPathForRow:inSection:
T@"NSURL",C,N,V_loadAdditionalContentURL
T@"MPModelStoreBrowseResponse",&,N,V_previousRetrievedNestedResponse
Tq,N,V_domain
Tq,N,V_additionalContent
Tq,N,V_subscriptionStatus
T@"MPModelStoreBrowseResponse",&,N,V_previousResponse
_loadAdditionalContentURL
_previousRetrievedNestedResponse
_domain
_additionalContent
_subscriptionStatus
_previousResponse
configureWithParentSection:
flattenRadioList
setFlattenRadioList:
loadAdditionalContentURL
setLoadAdditionalContentURL:
previousRetrievedNestedResponse
setPreviousRetrievedNestedResponse:
domain
setDomain:
additionalContent
setAdditionalContent:
subscriptionStatus
setSubscriptionStatus:
previousResponse
setPreviousResponse:
hasBiography
songCount
albumCount
T@"MPModelGenre",C,D,N
editorialArtworkCatalogBlock
editorialArtworkCatalog
kindWithAlbumKind:
__hasBiography_KEY
__editorialArtworkCatalogBlock_KEY
__songCount_KEY
__albumCount_KEY
T@"MPModelAlbumKind",R,C,N,V_albumKind
_albumKind
albumKind
T@"MPAVRoute",&,N,V_legacyCachedRoute
T@"<MPAVOutputDevicePlaybackDataSource>",W,N,V_playbackDataSource
T@"NSString",C,N,V_presentedBundleID
T@"NSString",C,N,V_representedBundleID
TB,R,N,V_representsLongFormVideoContent
T@"<MPAVRoutingControllerDelegate>",W,N,V_delegate
T@"MPAVRoutingDataSource",R,N,V_dataSource
T@"NSString",C,N,V_name
TB,N,V_fetchAvailableRoutesSynchronously
T@"NSString",C,N,V_category
Tq,N,V_routeTypes
T@"MPAVRoute",R,N
T@"NSSet",R,N
_cachedRoutes
_cachedPickedRoutes
_externalScreenType
_hasExternalScreenType
_scheduledSendDelegateRoutesChanged
_volumeControlStateForPickedRoute
_routingControllerSelectionQueue
_deviceAvailabilityNotifyToken
_deviceAvailabilityOverrideState
_stateHandle
_alwaysAllowUpdates
_fetchAvailableRoutesSynchronously
_representsLongFormVideoContent
_category
_routeTypes
_legacyCachedRoute
_playbackDataSource
_presentedBundleID
_representedBundleID
initWithDataSource:name:
alwaysAllowUpdates
setAlwaysAllowUpdates:
cachedRoutes
setCachedRoutes:
cachedPickedRoutes
availableRoutes
externalScreenType
hasPendingPickedRoutes
pickedRoute
pendingPickedRoute
pendingPickedRoutes
routeIsLeaderOfEndpoint:
routeIsPendingPick:
setCategory:
setRouteTypes:
volumeControlIsAvailable
setPresentedBundleID:
setRepresentedBundleID:
airtunesRouteIsPicked
updateAvailableRoutes
updatePickedRoutes
fetchAvailableRoutesWithCompletionQueue:completionHandler:
fetchAvailableRoutesWithCompletionHandler:
getActiveRouteWithTimeout:completion:
handsetRouteIsPicked
pickBestDeviceRoute
pickHandsetRoute
pickSpeakerRoute
selectRoute:operation:completion:
selectRoutes:operation:completion:
speakerRouteIsPicked
receiverRouteIsPicked
routeOtherThanHandsetAndSpeakerAvailable
routeOtherThanHandsetAvailable
unpickAirPlayScreenRouteWithCompletion:
videoRouteForRoute:
wirelessDisplayRouteIsPicked
wirelessDisplayRoutesAvailable
clearCachedRoutes
unpickTVRoutes
_syncUpdateRoutes
_clearLegacyCachedRoute
_externalScreenType:
_onQueueSetExternalScreenType:
_pickedRouteInArray:
_pickedRoutesInArray:
_promptForHijackIfNeeded:handler:
_shouldSendDelegateRoutesChanged
_scheduleSendDelegateRoutesChanged
_sendDelegateFailedToPickRouteWithError:
_sendDelegatePickedRoutesChanged
_setExternalScreenType:
_setVolumeControlStateForPickedRoute:
_unregisterNotifications
_updateCachedRoutes
_activeAudioRouteDidChangeNotification:
_externalScreenTypeDidChangeNotification:
_mediaServerDiedNotification:
_pickableRoutesDidChangeNotification:
_routeStatusDidChangeNotification:
_volumeControlAvailabilityDidChangeNotification:
_registerNotifications
pickRoute:
pickRoute:withPassword:
pickRoute:withPassword:completion:
_pickRoute:completion:
supportsMultipleSelection
addPickedRoute:
addPickedRoute:completion:
removePickedRoute:
removePickedRoute:completion:
_fullStateDumpObject
setName:
fetchAvailableRoutesSynchronously
setFetchAvailableRoutesSynchronously:
category
routeTypes
legacyCachedRoute
setLegacyCachedRoute:
playbackDataSource
setPlaybackDataSource:
presentedBundleID
representedBundleID
representsLongFormVideoContent
removePendingRoutes:
addPendingRoutes:
_sharedWorkerQueue
cancelInProgressSelectionForRoute:
pickedRouteDidChange
getOutputDeviceIsPlaying:completion:
setAttribute:forKey:error:
applicationProxyForIdentifier:
setOutputDevices:
sharedAudioPresentationOutputContext
enqueueSelectionOperation:forRoutes:completion:
_getActiveRouteWithTimeout:type:discoveredRoutes:completion:
bundleIdRepresentsLongFormVideoContent:
hasPendingRoutes
initWithRoutingController:
T@"MPAVRoutingController",R,W,N,V_routingController
TB,R,N,V_hasPendingPickedRoutes
_selectionsEnqueued
_selectionInProgress
_pendingRoutes
_selectionInProgressTimer
_pendingSelectionTimers
_hasPendingPickedRoutes
removeAllPendingRoutes
removePendingRoutes:withError:
_enqueue:
_dequeueSelectionWhenPossible
_dequeue
_processSelection:completion:
selectionOperation
routes
setCompletion:
completion
setSelectionOperation:
initWithRoutes:selectionOperation:
T@"NSArray",&,N,V_routes
Tq,N,V_selectionOperation
T@?,C,N,V_completion
_routes
_selectionOperation
_completion
setRoutes:
weakToStrongObjectsMapTable
_iconImageForIdentifier:
_iconImageForRoutes:
_symbolImageForRoutes:
_iconImageForRoute:
_symbolImageForRoute:
_iconNameForRoute:
_symbolNameForRoute:
_symbolNameForRoutes:
_iconNameForRoute:isSymbol:
_iconNameForRoutes:isSymbol:
_currentDeviceRoutingIconImage
_currentDeviceRoutingSymbolImage
_iconImageNameForClusterRoute:isSymbol:
getActiveRouteWithCompletion:
getProactiveRouteWithCompletion:
getProactiveRouteWithTimeout:completion:
setActiveRoute:completion:
setActiveRoute:reason:completion:
systemRoute
systemRouteWithContextUID:
_currentDeviceRoutingIconImageName
_currentDeviceRoutingSymbolName
_symbolNameForModelID:
addObserverForName:object:queue:usingBlock:
symbolForTypeIdentifier:error:
_typeWithDeviceModelCode:
_typeOfCurrentDevice
clusterStatus
homeButtonType
hasRouteSharingPolicyLongFormVideo:
_systemImageNamed:
_imageThatSuppressesAccessibilityHairlineThickening
containsString:
T@"NSDate",R,C,N,V_assetURLExpirationDate
T@"NSDate",R,C,N,V_playbackAuthorizationTokenHalfLifeDate
T@,&,N,V_payload
T@"ICUserIdentity",&,N,V_userIdentity
T@"NSDate",C,N,V_expirationDate
_payload
_assetURLExpirationDate
_playbackAuthorizationTokenHalfLifeDate
_initWithPayload:
setExpirationDate:
payload
setPayload:
assetURLExpirationDate
playbackAuthorizationTokenHalfLifeDate
isEqualToIdentity:inStore:
dateByAddingTimeInterval:
T@,R,N,V_annotatedPayload
T@"NSArray",R,N,V_playableAssetIdentifiers
_annotatedPayload
_playableAssetIdentifiers
initWithAnnotatedPayload:playableAssetIdentifiers:
annotatedPayload
playableAssetIdentifiers
performWithDatabaseOperations:augmentingPayload:playableAssetIdentifiers:error:
_relationshipKeyForObject:
initWithPayload:
_sinfTypeFromPayload:
_sinfDataFromSinfType:payload:
initWithBase64EncodedString:options:
substringToIndex:
initWithBytesNoCopy:length:encoding:freeWhenDone:
_childKeyForParentType:type:
_unsupportedMediaKitTypes
_unsupportedParentChildRelationships
allKeys
_unsupportedStorePlatformKinds
performWithDatabaseOperations:error:
_requestPayload
_hashedPersonID
initWithPayload:requestPayload:hashedPersonID:
T@"_MPModelShimRequestMiddleware",&,N,V_middleware
T@"MPModelRequest",&,N,V_modelRequest
T@?,C,N,V_invalidationHandler
T@"NSArray",R,N,V_invalidationObservers
_invalidationObservers
_invalidationHandler
_modelRequest
initWithMiddleware:modelRequest:
modelRequest
setModelRequest:
setModelResponse:
T@"MPModelResponse",&,N,V_modelResponse
T@"NSArray",&,N,V_invalidationObservers
_modelResponse
T@"NSArray",&,N
operationsForRequest:
setInvalidationObservers:
modelResponse
stringByReplacingCharactersInRange:withString:
isRTCReportingSupported
RTCReportingFrameworkPath
pathWithComponents:
T@"NSDictionary",C,N,V_additionalUserInfo
T@"NSString",C,N,V_clientName
Ti,N,V_clientType
Tq,N,V_clientVersion
T@,&,N,V_hierarchyToken
T@"NSString",C,N,V_serviceIdentifier
Tq,N,V_sessionID
startConfigurationWithCompletionHandler:
initWithSessionInfo:userInfo:frameworksToCheck:
T{shared_ptr<mlcore::DeviceLibrary>=^{DeviceLibrary}^{__shared_weak_count}},N,V__MediaLibrary_coreLibrary
__MediaLibrary_coreLibrary
_MediaLibrary_coreLibrary
set_MediaLibrary_coreLibrary:
lastPathComponent
stringByDeletingLastPathComponent
fileSystemRepresentation
sharedResourceManager
resources
sectionsInfo
sortingDetails
canonicalLanguageIdentifier
T{shared_ptr<mlcore::DeviceLibrary>=^{DeviceLibrary}^{__shared_weak_count}},R,N
_hasValidUniformContentItemType
_contentItemTypeOccurrences
_totalNumberOfOccurrences
_uniformContentItemType
addContentItemType:
uniformContentItemType
contentItemCollectionInfo
Tq,N,V_actionAfterQueueLoad
Tq,N,V_repeatType
Tq,N,V_queueEndAction
supported
TB,R,N,GisSupported
T@"MPMusicPlayerQueueDescriptor",C,N,V_queueDescriptor
T@"NSString",C,N,V_siriAssetInfo
T@"NSString",C,N,V_sessionIdentifier
TB,N,V_supportsAccountRectification
_playerCurrentItem
_supportsAccountRectification
_actionAfterQueueLoad
_queueDescriptor
_siriAssetInfo
shouldBecomeActive
descriptionComponents
containsRestorableContent
isSupported
clearStartItem
isCompatibleWithReplacementContext:incompatibleReason:
actionAfterQueueLoad
setActionAfterQueueLoad:
setRepeatType:
setQueueEndAction:
queueDescriptor
setQueueDescriptor:
setSiriAssetInfo:
setSessionIdentifier:
supportsAccountRectification
setSupportsAccountRectification:
sortedArrayUsingSelector:
caseInsensitiveCompare:
queueFeederClass
supportsAutoPlay
_pendingUpdateRecordByPlaylistGlobalID
_pendingUpdateRecordByStoreAdamID
_initWithUserIdentity:
setTasteType:forModel:withCompletionHandler:
setTasteType:forMediaEntity:withCompletionHandler:
setTasteType:forPlaylistGlobalID:withCompletionHandler:
setTasteType:forStoreAdamID:withContentType:completionHandler:
tasteTypeForModel:
tasteTypeForMediaEntity:
tasteTypeForPlaylistGlobalID:
tasteTypeForStoreAdamID:
_libraryPathDidChangeForTasteController:
_deviceMediaLibraryDidChangeNotification:
_libraryEntityForModel:
_libraryPlaylistWithGlobalID:
_libraryEntityWithStoreID:contentType:
_ML3QueryWithEntityClass:predicate:options:
_addPendingUpdateRecord:withKey:inDictionary:
_addPendingUpdateRecordForPlaylistGlobalID:contentTasteType:
_addPendingUpdateRecordForStoreAdamID:contentTasteType:
_removePendingUpdateRecordForPlaylistGlobalID:token:
_removePendingUpdateRecordForStoreAdamID:token:
_pendingUpdateRecordForKey:inDictionary:
_pendingUpdateRecordForStoreAdamID:
_pendingUpdateRecordForPlaylistGlobalID:
_postNotificationName:controller:
queryWithLibrary:predicate:orderingTerms:usingSections:options:
enumeratePersistentIDsAndProperties:ordered:usingBlock:
anyEntityPersistentID
predicateWithProperty:equalToValue:
controllerWithUserIdentity:
_postNotificationName:controller:userInfo:
T@"NSObject<OS_dispatch_queue>",R,N
T@"MPContentTasteController",R,N
globalSerialQueue
controllers
_tasteControllerWithUserIdentity:isSingleton:createIfRequired:
Tq,N,V_cacheSize
_lastExpiredMetadataPurgeMachTime
_itemCaches
_transactionLock
_transactionCount
_cacheSize
beginTransaction
endTransaction
setCacheSize:
addStoreItemMetadata:
requestStoreItemMetadataForReason:withItemIdentifiers:responseHandler:
getStoreItemMetadataForRequest:responseHandler:
_removeExpiredItemsPeriodically
cacheSize
addChild:withPendingUnitCount:
setBatchResultsHandler:
metadataDictionary
setCancellable:
setCompletedUnitCount:
progressWithTotalUnitCount:
T@"MPStoreItemMetadataRequestController",R,N
sharedStoreItemMetadataRequestController
optimalBatchSize
T{UIEdgeInsets=dddd},N,V_alignmentRectInsets
Td,N,V_holdDelayInterval
holding
TB,R,N,GisHolding
TB,N,V_hitTestDebugEnabled
_holding
_hitTestDebugView
_hitTestDebugEnabled
_holdDelayInterval
_alignmentRectInsets
alignmentRectInsets
isHolding
setAlignmentRectInsets:
setHitTestDebugEnabled:
touchesCancelled:withEvent:
touchesEnded:withEvent:
_delayedTriggerHold
_handleTouchCancel
_handleTouchDown
_handleTouchUp
holdDelayInterval
setHoldDelayInterval:
hitTestDebugEnabled
colorWithAlphaComponent:
setBorderWidth:
setBorderColor:
redColor
T{UIEdgeInsets=dddd},R,N
easyTouchDefaultHitRectInsets
easyTouchButtonWithType:
buttonWithType:
_representativeArtists
_seedTracksQuery
initWithPersistentID:
initWithPersistentID:mediaLibrary:
initWithMultiverseIdentifier:library:
valueForProperty:
addItemWithProductID:completionHandler:
addMediaItems:completionHandler:
existsInLibrary
playlistAttributes
seedItems
authorDisplayName
removeFirstItem
items
count
mediaTypes
representativeItem
multiverseIdentifier
representativeArtists
seedTracksQuery
isCloudMix
cloudGlobalID
setUserSelectedArtworkImage:
notifyDisplayValuesPropertyDidChange
componentsSeparatedByString:
_isValidPlaylistProperty:
storeId
hasStoreId
cloudUniversalLibraryId
hasCloudUniversalLibraryId
sagaId
hasSagaId
libraryName
libraryId
libraryIdentifiersCount
libraryIdentifiers
mediaObjectType
canFilterByProperty:
_createFilterableDictionary
T@"NSString",C,N,V_authorDisplayName
_defaultAuthorDisplayName
_authorDisplayName
setAuthorDisplayName:
infoDictionary
localizedInfoDictionary
mainBundle
musicShow
TB,D,N,GisMusicShow
episodeNumber
season
T@"MPModelTVSeason",&,D,N
show
T@"MPModelTVShow",&,D,N
episodeType
episodeTypeDisplayName
__descriptionText_KEY
__musicShow_KEY
__episodeNumber_KEY
__explicitRating_KEY
__season_KEY
__show_KEY
__releaseDate_KEY
__episodeType_KEY
__episodeTypeDisplayName_KEY
string
isAppleTV
isAudioAccessory
isMultiUserDevice
multiUserDevice
TB,R,N,GisMultiUserDevice
T@"NSString",C,N,V_globalPlaylistID
TB,N,V_shouldLibraryAdd
_shouldLibraryAdd
_globalPlaylistID
globalPlaylistID
setGlobalPlaylistID:
shouldLibraryAdd
setShouldLibraryAdd:
T{CGSize=dd},N,V_preferredArtworkSize
_preferredArtworkSize
initWithPreferredArtworkSize:
preferredArtworkSize
setPreferredArtworkSize:
decodeCGSizeForKey:
encodeCGSize:forKey:
TQ,N,V_copyOptions
TQ,N,V_queueControlOptions
T@"NSMutableDictionary",&,N,V_storage
Tq,R,N,V_type
T@"NSString",R,C,N,V_playbackSessionIdentifier
T@"NSString",R,C,N,V_playbackSessionType
T@"NSData",R,C,N,V_playbackSessionData
T@"MPPlaybackArchiveDisplayProperties",R,N,V_displayProperties
T@"NSString",R,C,N,V_bundleIdentifier
TQ,R,N,V_supportedOptions
_final
_displayProperties
_bundleIdentifier
_supportedOptions
_copyOptions
_queueControlOptions
_storage
_playbackSessionIdentifier
_playbackSessionType
setType:
setSessionIdentifier:type:data:
setBundleIdentifier:
setSupportedOptions:
setDisplayProperties:
setFallbackStoreIdentifier:
initWithType:sessionIdentifier:data:dataType:bundleIdentifier:supportedOptions:displayProperties:
setBOOLValue:forOption:
boolValueForOption:
copyWithOptions:
fallbackStoreIdentifier
displayProperties
bundleIdentifier
supportedOptions
copyOptions
setCopyOptions:
queueControlOptions
setQueueControlOptions:
storage
setStorage:
playbackSessionIdentifier
playbackSessionType
decodePropertyListForKey:
T@"MPMediaLibrary",&,N
T@"NSSet",C,N
orderingProperties
T@"NSArray",C,N,G_orderingProperties,S_setOrderingProperties:
orderingDirectionMappings
T@"NSDictionary",C,N,G_orderingDirectionMappings,S_setOrderingDirectionMappings:
TQ,N
T@"MPMediaQuerySectionInfo",R,N
T@"MPMediaItemCollection",R,N
playlistItemsQuery
TB,R,N,GisPlaylistItemsQuery
T@"NSSet",&,N
_criteria
_isFilteringDisabled
_staticEntities
_staticEntityType
initWithProtobufferDecodableObject:library:
initWithProtobufferDecodableObject:
protobufferEncodableObjectFromLibrary:
protobufferEncodableObject
initWithFilterPredicates:
initWithFilterPredicates:library:
initWithCriteria:library:
initWithEntities:entityType:
copyByRemovingStaticEntities
copyBySanitizingStaticEntities
filterPredicates
setFilterPredicates:
addFilterPredicate:
removeFilterPredicate:
collections
groupingType
setGroupingType:
entityLimit
setEntityLimit:
shouldIncludeNonLibraryEntities
setShouldIncludeNonLibraryEntities:
includeEntitiesWithBlankNames
setIncludeEntitiesWithBlankNames:
ignoreSystemFilterPredicates
setIgnoreSystemFilterPredicates:
ignoreRestrictionsPredicates
setIgnoreRestrictionsPredicates:
itemPropertiesToFetch
setItemPropertiesToFetch:
collectionPropertiesToFetch
setCollectionPropertiesToFetch:
_hasItems
_hasCollections
_hasStaticEntities
_countOfItems
_countOfCollections
itemPersistentIdentifiers
collectionPersistentIdentifiers
itemSectionInfo
collectionSectionInfo
_setOrderingProperties:
_orderingProperties
_setOrderingDirectionMappings:
_orderingDirectionMappings
_getRepresentativeCollectionGrouping:propertyPredicate:
_representativeCollection
_representativeCollectionGroupingType
setSortItems:
sortItems
setUseSections:
useSections
excludesEntitiesWithBlankNames
specifiesPlaylistItems
groupingThreshold
willGroupEntities
itemSections
collectionSections
_valueForAggregateFunction:onProperty:entityType:
valueForAggregateFunction:onItemsForProperty:
valueForAggregateFunction:onCollectionsForProperty:
_enumerateItemsUsingBlock:
_enumerateUnorderedItemsUsingBlock:
_enumerateItemPersistentIDsUsingBlock:
_enumerateUnorderedItemPersistentIDsUsingBlock:
_enumerateItemsInOrder:usingBlock:
_enumerateItemPersistentIDsInOrder:usingBlock:
_enumerateCollectionsUsingBlock:
_enumerateUnorderedCollectionsUsingBlock:
_enumerateCollectionPersistentIDsUsingBlock:
_enumerateUnorderedCollectionPersistentIDsUsingBlock:
_enumerateCollectionPersistentIDsInOrder:usingBlock:
_enumerateCollectionsInOrder:usingBlock:
setStaticEntities:entityType:
isPlaylistItemsQuery
_playlistItemPersistentIDForItemPersistentID:
criteria
setCriteria:
predicateMatchingPredicates:
predicateWithValue:forProperty:
T@,C,N
_property
_value
_comparisonType
descriptionOfValue:forProperty:
property
setProperty:
value
setValue:
comparisonType
setComparisonType:
hasSuffix:
decodeValueOfObjCType:at:
decodeObject
evaluateEntity:
predicateWithValue:forProperty:comparisonType:
isFilteringDisabled
initWithInteger:
setFilteringDisabled:
hasLibraryName
encodeValueOfObjCType:at:
encodeObject:
stringByAppendingFormat:
albumsQuery
artistsQuery
songsQuery
playlistsQuery
podcastsQuery
ITunesUQuery
ITunesUAudioQuery
videoITunesUQuery
audiobooksQuery
audibleAudiobooksQuery
compilationsQuery
composersQuery
genresQuery
initFilteringDisabled
albumArtistsQuery
videosQuery
musicVideosQuery
tvShowsQuery
homeVideosQuery
moviesQuery
movieRentalsQuery
audioPodcastsQuery
videoPodcastsQuery
geniusMixesQuery
playlistsRecentlyAddedQuery
T@"MPMediaPredicate",R,C,N,V_conditionPredicate
T@"MPMediaPredicate",R,C,N,V_thenPredicate
T@"MPMediaPredicate",R,C,N,V_elsePredicate
_conditionPredicate
_thenPredicate
_elsePredicate
initWithConditionPredicate:thenPredicate:elsePredicate:
conditionPredicate
thenPredicate
elsePredicate
predicateWithConditionPredicate:thenPredicate:elsePredicate:
T@"NSArray",R,C,N,V_predicates
initWithPredicates:
setByAddingObject:
T@"NSString",R,C,N,V_property
T@"NSSet",R,C,N,V_values
_values
values
predicateWithProperty:values:
TQ,R,N,V_count
Tr^q,R,N,V_persistentIDs
TB,R,N,V_shouldContain
_persistentIDs
_shouldContain
_count
persistentIDs
shouldContain
predicateWithPersistentIDs:count:shouldContain:
T@"NSString",C,N,V_searchString
T@"NSSet",C,N,V_properties
_searchString
_properties
searchString
setSearchString:
properties
setProperties:
initWithArray:
predicateWithSearchString:forProperties:
MPIsEmpty
removeItemAtIndex:
moveItemFromIndex:toIndex:
T@"MPModelLibraryImportChangeRequest",C,N,V_request
_requestedPlaylistProperties
setHandle:
setTiledArtworkRequest:
setShareShortURL:
setShareURL:
setUserEditableComponents:
setSubscribed:
setOwner:
setLastModifiedDateComponents:
setCloudVersionHash:
T@"NSString",R,C,N,V_clientIdentifier
T@"NSXPCConnection",R,N,V_connection
T@"MPMusicPlayerControllerNowPlaying",R,N,V_serverNowPlaying
T@"MPMusicPlayerControllerNowPlayingTimeSnapshot",R,N,V_serverTimeSnapshot
T@"MPMusicPlayerQueueDescriptor",R,N,V_serverQueueDescriptor
T@"MPMusicPlayerControllerNowPlayingTimeSnapshot",R,N,V_lastServerTimeSnapshot
T@"MPMusicPlayerControllerNowPlaying",R,N,V_lastServerNowPlaying
T@"NSArray",R,N,V_lastContentItemIDs
T@"MPMusicPlayerQueueDescriptor",R,N,V_targetQueueDescriptor
Tq,R,N,V_notificationsCounter
T@"MPVolumeController",R,N,V_volumeController
T@"NSObject<OS_dispatch_queue>",R,N,V_queue
T@"MPMediaItem",C,N
TB,R,N,V_isPreparedToPlay
_isPreparedToPlay
_serverNowPlaying
_serverTimeSnapshot
_serverQueueDescriptor
_lastServerTimeSnapshot
_lastServerNowPlaying
_lastContentItemIDs
_targetQueueDescriptor
_notificationsCounter
prepareToPlay
stop
beginSeekingForward
beginSeekingBackward
endSeeking
isPreparedToPlay
currentPlaybackTime
setCurrentPlaybackTime:
currentPlaybackRate
setCurrentPlaybackRate:
applyServerStateUpdateRecord:
setServerQueueDescriptor:
setServerNowPlaying:
setServerTimeSnapshot:
serverPlaybackModeDidChangeAffectingQueue:
serverItemDidEnd
serverQueueDidEnd
initWithClientIdentifier:
initWithClientIdentifier:queue:
playbackState
repeatMode
setRepeatMode:
shuffleMode
setShuffleMode:
nowPlayingItem
setNowPlayingItem:
_setNowPlayingItem:itemIdentifier:
_setNowPlayingItemWithIdentifier:
indexOfNowPlayingItem
setQueueWithQuery:
setQueueWithItemCollection:
setQueueWithStoreIDs:
setQueueWithDescriptor:
prependQueueDescriptor:
appendQueueDescriptor:
prepareToPlayWithCompletionHandler:
skipToNextItem
skipToBeginning
skipToPreviousItem
beginGeneratingPlaybackNotifications
endGeneratingPlaybackNotifications
setQueueWithQuery:firstItem:
queueAsQuery
nowPlayingAtIndex:
nowPlayingItemAtIndex:
shuffle
pauseWithFadeoutDuration:
skipToBeginningOrPreviousItem
prepareQueueForPlayback
numberOfItems
userQueueModificationsDisabled
setUserQueueModificationsDisabled:
setVolumePrivate:
playbackSpeed
setPlaybackSpeed:
isNowPlayingItemFromGeniusMix
currentChapterIndex
setCurrentChapterIndex:
isGeniusAvailable
isGeniusAvailableForSeedItems:
setQueueWithSeedItems:
setQueueWithGeniusMixPlaylist:
adjustLoadedQueueRangeToReverseCount:forwardCount:
_onQueue_applyServerStateUpdateRecord:
_clearConnection
_establishConnectionIfNeeded
onServer:
onServerAsync:errorHandler:
onServerAsync:errorHandler:retryEnabled:
_nowPlaying
_snapshot
_mediaItemFromNowPlaying:
_postPrivateQueueDidChangeNotificationWithContentItemIDs:
connection
serverNowPlaying
serverTimeSnapshot
serverQueueDescriptor
lastServerTimeSnapshot
lastServerNowPlaying
lastContentItemIDs
targetQueueDescriptor
notificationsCounter
initWithItemIdentifier:item:
T@"MPMediaItem",R,N,V_item
_item
forwardInvocation:
methodSignatureForSelector:
item
invokeWithTarget:
T@"MPMusicPlayerController",R,N
T@"MPMusicPlayerApplicationController",R,N
T@"MPMusicPlayerController<MPSystemMusicPlayerController>",R,N
systemMusicPlayer
applicationQueuePlayer
applicationMusicPlayer
alloc
iPodMusicPlayer
setRunLoopForNotifications:
genericModelObjectWithRequestedProperties:
T@"NSString",C,N,V_imageArtworkIdentifier
T@"NSString",C,N,V_videoArtworkIdentifier
_imageArtworkIdentifier
_videoArtworkIdentifier
imageArtworkIdentifier
setImageArtworkIdentifier:
videoArtworkIdentifier
setVideoArtworkIdentifier:
Tq,N,V_kind
T@"UIImage",&,N,V_image
imagePrepared
TB,N,GisImagePrepared,V_imagePrepared
T@"AVAsset",&,N,V_video
T{CGSize=dd},N,V_representationSize
T@,&,N,V_representationToken
T@"NSString",R,C,N,V_visualIdenticalityStringRepresentation
_imagePrepared
_kind
_image
_video
_visualIdenticalityStringRepresentation
_representationToken
_representationSize
debugQuickLookObject
representationWithPreparedImage:
kind
setKind:
image
setImage:
isImagePrepared
setImagePrepared:
video
setVideo:
representationSize
setRepresentationSize:
visualIdenticalityStringRepresentation
representationToken
setRepresentationToken:
representationWithSize:image:
representationWithSize:video:
representationForVisualIdentity:withSize:image:
representationForVisualIdentity:withSize:video:
T@"MPArtworkRepresentation",&,N,V_imageRepresentation
T@"MPArtworkRepresentation",&,N,V_videoRepresentation
TQ,N,V_bestRepresentationKinds
_imageRepresentation
_videoRepresentation
_bestRepresentationKinds
isBestRepresentationForKind:
resetForRepresentationKinds:
imageRepresentation
setImageRepresentation:
videoRepresentation
setVideoRepresentation:
bestRepresentationKinds
setBestRepresentationKinds:
collectionWithImageRepresentation:videoRepresentation:
collectionWithImageRepresentation:videoRepresentation:bestRepresentationKinds:
T@,W,N,V_destination
T@?,C,N,V_configurationBlock
TQ,N,V_representationKinds
T@"MPArtworkRepresentationCollection",&,N,V_bestAvailableRepresentationCollection
loadingRepresentation
TB,GisLoadingRepresentation,V_loadingRepresentation
T@"NSString",C,N,V_cacheIdentifier
T@,W,N,V_requestingContext
T@,R,N,V_token
T@"<MPArtworkDataSource>",R,W,N,V_dataSource
T@"NSCache",R,N
T@"<MPArtworkDataSourceVisualIdenticality>",R,N
TQ,N,V_renderHint
TQ,N,V_videoCacheStoragePolicy
T@"<_MPArtworkCatalogOverlayDelegate>",W,N,V_overlayDelegate
T@,&,N,V_overlayToken
T@,&,N,V_overlayStorage
Td,N,V_destinationScale
T{CGSize=dd},N,V_fittingSize
TB,N,V_allowsVideoConstrainedNetworkAccess
Tq,N,V_preferredVideoFormat
T@"MPArtworkImageAttachments",R,N
_fittingSize
_modelRevisionID
_allowsVideoConstrainedNetworkAccess
_loadingRepresentation
_destinationScale
_preferredVideoFormat
_destination
_configurationBlock
_representationKinds
_bestAvailableRepresentationCollection
_cacheIdentifier
_requestingContext
_token
_renderHint
_videoCacheStoragePolicy
_overlayDelegate
_overlayToken
_overlayStorage
initWithToken:dataSource:
setDestinationScale:
scaledFittingSize
setFittingSize:
requestImageWithCompletionHandler:
requestImageWithCompletion:
bestImageFromDisk
hasImageOnDisk
setDestination:
setDestination:configurationBlock:
requestVideoWithCompletionHandler:
setAllowsVideoConstrainedNetworkAccess:
setPreferredVideoKind:
setDestination:forRepresentationKinds:configurationBlock:
_callConfigurationWithRevisionID:
isArtworkVisuallyIdenticalToCatalog:
visualIdenticalityIdentifier
existingColorAnalysisWithAlgorithm:
requestColorAnalysisWithAlgorithm:completionHandler:
requestRadiosityImageWithCompletionHandler:
imageAttachments
requestExportableArtworkPropertiesWithCompletion:
setCacheIdentifier:forRequestingContext:
cache
videoCache
_loadBestRepresentationIfNeededOfKind:
_loadRepresentationOfKind:completionHandler:
_existingRepresentationOfKind:
_updateRepresentations
_updateRepresentationOfKind:
_updateWithRepresentation:isBestRepresentation:modelRevisionID:
_requestBestRepresentationOfKind:completionHandler:
setDestination:progressiveConfigurationBlock:
destinationScale
fittingSize
allowsVideoConstrainedNetworkAccess
preferredVideoFormat
setPreferredVideoFormat:
destination
configurationBlock
setConfigurationBlock:
representationKinds
setRepresentationKinds:
bestAvailableRepresentationCollection
setBestAvailableRepresentationCollection:
isLoadingRepresentation
setLoadingRepresentation:
cacheIdentifier
setCacheIdentifier:
requestingContext
setRequestingContext:
token
renderHint
setRenderHint:
videoCacheStoragePolicy
setVideoCacheStoragePolicy:
overlayDelegate
setOverlayDelegate:
overlayToken
setOverlayToken:
overlayStorage
setOverlayStorage:
_artworkLoadQueue
_artworkCacheForIdentifier:requestingContext:representationKind:
radiosityImageWithImage:displayScale:completionHandler:
overlayVisualIdenticalityForCatalog:
artworkCatalog:didConfigureView:withRepresentation:
artworkCatalog:didClearFromView:
artworkCatalog:willConfigureView:
overlayScaledFittingSizeForCatalog:scaledFittingSize:
staticArtworkCatalogWithImage:
staticArtworkCatalogWithRepresentationCollection:
placeholderCatalogWithSymbolName:
setCacheLimit:forCacheIdentifier:requestingContext:
setCachePurgesWhenEnteringBackground:forCacheIdentifier:requestingContext:
setCacheLimit:forCacheIdentifier:requestingContext:representationKind:
setCachePurgesWhenEnteringBackground:forCacheIdentifier:requestingContext:representationKind:
_registeredIdentifiableDataSourceAndTokenClasses
artworkCatalogWithDataSourceShortDescription:dataSourceIdentifier:tokenParameters:
setEvictsObjectsWhenApplicationEntersBackground:
_fallbackCache
imageWithActions:
drawAtPoint:
imageWithTintColor:
imageByApplyingSymbolConfiguration:
imageWithConfiguration:
configurationWithPointSize:weight:scale:
userInterfaceStyle
colorWithDynamicProvider:
setFill
tertiarySystemBackgroundColor
initWithSize:
CGSizeValue
sortedArrayUsingComparator:
_lastArtworkCatalog
clearArtworkCatalogs
artworkCatalogBackingFileURL
T@"MPArtworkCatalog",R,N
T@"MPPMediaPredicate",&,N,V_conditionalPredicate
T@"MPPMediaPredicate",&,N,V_thenPredicate
T@"MPPMediaPredicate",&,N,V_elsePredicate
_conditionalPredicate
hasConditionalPredicate
hasThenPredicate
hasElsePredicate
conditionalPredicate
setConditionalPredicate:
setThenPredicate:
setElsePredicate:
T@"NSError",R,C,N,V_error
_isExecuting
_isFinished
_error
T@"ICUserIdentity",C,N
isAsynchronous
isConcurrent
isExecuting
isFinished
start
finish
finishWithError:
T@"NSDate",R,N
TQ,R,D,N
T@"MPMediaItemArtwork",R,N
explicitItem
TB,R,N,GisExplicitItem
cloudItem
TB,R,N,GisCloudItem
protectedAsset
TB,R,N,GhasProtectedAsset
preorder
TB,R,N,GisPreorder
valuesForProperties:
didSkipWithPlayedToTime:
incrementPlayCount
markNominalAmountHasBeenPlayed
noteWasPlayedToTime:skipped:
incrementSkipCount
incrementPlayCountForPlayingToEnd
incrementPlayCountForStopTime:
updateDateAccessedToCurrentDateWithWriteCompletionBlock:
nominalHasBeenPlayedThreshold
didReceiveMemoryWarning
_bestStoreURL
populateLocationPropertiesWithPath:
populateLocationPropertiesWithPath:assetProtectionType:
populateLocationPropertiesWithPath:assetProtectionType:completionBlock:
clearLocationProperties
chapters
effectiveAlbumArtist
artwork
dateAdded
comments
isRental
isITunesU
isCloudItem
hasProtectedAsset
playbackDuration
stopTime
effectiveStopTime
podcastTitle
podcastPersistentID
predicateForProperty:
setPlayCount:
playCountSinceSync
setPlayCountSinceSync:
lastPlayedDate
setLastPlayedDate:
dateAccessed
setDateAccessed:
setSkipCount:
skipCountSinceSync
setSkipCountSinceSync:
lastSkippedDate
setLastSkippedDate:
hasBeenPlayed
setHasBeenPlayed:
playbackStoreID
rememberBookmarkTime
isExplicitItem
userGrouping
chaptersOfType:
chapterOfType:atIndex:
chapterOfType:atTime:
countOfChaptersOfType:
gaplessHeuristicInfo:durationInSamples:lastPacketsResync:encodingDelay:encodingDrain:
isUsableAsRepresentativeItem
dateDownloaded
_directStoreURL
_libraryLinkArtist
_libraryLinkKind
_libraryLinkPlaylistName
_libraryLinkURL
URLQueryAllowedCharacterSet
enumerateValuesForProperties:usingBlock:
_isValidItemProperty:
itemFromModelObject:
itemFromSong:
persistentIDPropertyForGroupingType:
ULIDPropertyForGroupingType:
titlePropertyForGroupingType:
fallbackTitlePropertyForGroupingType:
dynamicProperties
_persistentID
setValue:forKey:
decodeInt64ForKey:
defaultPropertyValues
T{CGRect={CGPoint=dd}{CGSize=dd}},R,N
_bounds
_requestHandler
initWithImage:
initWithBoundsSize:requestHandler:
imageWithSize:
bounds
imageCropRect
jpegDataWithSize:
pngDataWithSize:
pngDataFromImage:
T@"MPModelObject",&,N,V_identifyingModelObject
T@"MPMediaLibraryView",C,N,V_libraryView
T@"NSNumber",C,N,V_redownloadableItemCount
_identifyingModelObject
_redownloadableItemCount
identifyingModelObject
setIdentifyingModelObject:
redownloadableItemCount
setRedownloadableItemCount:
longValue
Tq,R,N,V_libraryChangeObservers
T{os_unfair_lock_s=I},R,N,V__MLCoreStorageLock
T@"_MPActiveUserChangeMonitor",&,N,V_activeUserChangeMonitor
T@,&,N,S_setMLCoreStorage:,V__MLCoreStorage
T^{os_unfair_lock_s=I},R,N,V__MLCoreStorageLockPointer
T@"ML3MusicLibrary",R,N
T@"ICUserIdentity",R,C,N,V_userIdentity
_libraryDataProvider
_entityCacheQueue
_fixedQueue
_notificationObservers
_itemsForCriteriaCache
_hasItemsForCriteriaCache
_countOfItemsForCriteriaCache
_itemResultSetsForCriteriaCache
_collectionsForCriteriaCache
_hasCollectionsForCriteriaCache
_countOfCollectionsForCriteriaCache
_collectionsResultSetsForCriteriaCache
_hasItemsDidLoadForCriteria
_hasCollectionsDidLoadForCriteria
_countOfCollectionsDidLoadForCriteria
_countOfItemsDidLoadForCriteria
_additionalLibraryFilterPredicates
_additionalLibraryFilterPredicatesAccessQueue
_connectionAssertions
_connectionAssertionsQueue
_disconnectAfterReleasingAssertions
_connectionProgress
_removalReason
_determinedHasMedia
_hasMedia
_determinedHasSongs
_hasSongs
_determinedHasGeniusMixes
_hasGeniusMixes
_determinedHasPlaylists
_hasPlaylists
_determinedHasComposers
_hasComposers
_determinedHasPodcasts
_hasPodcasts
_determinedHasUbiquitousBookmarkableItems
_hasUbiquitousBookmarkableContent
_determinedHasAudiobooks
_hasAudiobooks
_cloudFilteringType
_filteringDisabled
_hasVideos
_determinedHasVideos
_hasMusicVideos
_determinedHasMusicVideos
_hasAudibleAudioBooks
_determinedHasAudibleAudioBooks
_hasMovies
_determinedHasMovies
_hasCompilations
_determinedHasCompilations
_hasITunesU
_determinedHasITunesU
_hasVideoITunesU
_determinedHasVideoITunesU
_hasMovieRentals
_determinedHasMovieRentals
_hasTVShows
_determinedHasTVShows
_hasHomeVideos
_determinedHasHomeVideos
_hasVideoPodcasts
_determinedHasVideoPodcasts
_originalCellNetworkFlags
_originalWiFiNetworkFlags
__MLCoreStorageLock
__MLCoreStorage
_libraryChangeObservers
_activeUserChangeMonitor
__MLCoreStorageLockPointer
activeUserChangeDidFinish
initWithClientIdentity:userIdentity:
_clearCachedEntitiesIncludingResultSets:
_clearCachedContentDataAndResultSets:
_scheduleLibraryChangeNotificationPostingBlock:
_reloadLibraryForRestrictionsChange
_reloadLibraryForContentsChangeWithNotificationInfo:
_reloadLibraryForDynamicPropertyChangeWithNotificationInfo:
_reloadLibraryForInvisiblePropertyChangeWithNotificationInfo:
_reloadLibraryForPathChange
_activeUserDidChangeNotification:
_canShowCloudTracksDidChangeNotification:
_didReceiveMemoryWarning:
_displayValuesDidChangeNotification:
beginGeneratingLibraryChangeNotifications
endGeneratingLibraryChangeNotifications
connectWithCompletionHandler:
disconnect
currentEntityRevision
syncGenerationID
playlistGeneration
isDeviceLibrary
isHomeSharingLibrary
writable
_logDatabaseAccess
additionalLibraryFilterPredicates
addLibraryFilterPredicate:
removeLibraryFilterPredicate:
removalReason
setRemovalReason:
databasePath
hasMediaOfType:
hasMedia
hasGeniusMixes
hasPlaylists
hasArtists
hasAlbums
hasSongs
hasPodcasts
hasUbiquitousBookmarkableItems
hasGenres
hasComposers
hasAudiobooks
_checkHasContent:determined:queryHasEntitiesBlock:
_checkHasContent:determined:mediaType:queryHasEntitiesBlock:
hasVideos
hasMusicVideos
hasAudibleAudioBooks
hasMovies
hasCompilations
hasITunesUContent
hasAudioITunesUContent
hasVideoITunesUContent
hasMovieRentals
hasTVShows
hasHomeVideos
hasVideoPodcasts
hasUserPlaylists
hasAddedToLibraryAppleMusicContent
hasUserPlaylistsContainingAppleMusicContent
itemExistsWithPersistentID:
itemExistsInDatabaseWithPersistentID:
playlistExistsWithPersistentID:
collectionExistsWithPersistentID:groupingType:
collectionWithPersistentID:groupingType:
collectionWithPersistentID:groupingType:verifyExistence:
itemWithPersistentID:
itemWithPersistentID:verifyExistence:
itemWithStoreID:
decodeItemWithCoder:
newPlaylistWithPersistentID:
localizedSectionHeaderForSectionIndex:
localizedSectionIndexTitles
playbackHistoryPlaylist
photosMemoriesPlaylist
playlistWithPersistentID:
addPlaylistWithName:
addPlaylistWithName:activeGeniusPlaylist:
setSyncPlaylistId:
syncPlaylistId
homeSharingDatabaseID
URLForHomeSharingRequest:
deleteItems:
removeItems:
removePlaylist:
downloadAsset:completionHandler:
populateLocationPropertiesOfItem:withPath:assetProtectionType:
populateLocationPropertiesOfItem:withPath:assetProtectionType:completionBlock:
clearLocationPropertiesOfItem:
setValues:forProperties:forItemPersistentIDs:
geniusItemsForSeedItem:completion:
isGeniusEnabled
preferredAudioLanguages
preferredSubtitleLanguages
requiresAuthentication
connectWithAuthenticationData:completionBlock:
connectionAssertionWithIdentifier:
performTransactionWithBlock:
performReadTransactionWithBlock:
isCurrentThreadInTransaction
connectionProgress
syncValidity
entityCache
valueForDatabaseProperty:
setValue:forDatabaseProperty:
deleteDatabaseProperty:
multiverseIdentifierForTrackWithPersistentID:
multiverseIdentifierForCollectionWithPersistentID:groupingType:
entityWithMultiverseIdentifier:
entityWithLibraryURL:
entityWithSpotlightIdentifier:
entityWithPersistentID:entityType:
isValidAssetURL:
pathForAssetURL:
_persistentIDForAssetURL:
_handlesSameAccountAs:
_performBlockOnLibraryHandlingTheSameAccount:
collectionExistsContainedWithinPersistentIDs:count:groupingType:existentPID:
collectionExistsWithName:groupingType:existentPID:
collectionExistsWithStoreID:groupingType:existentPID:
collectionExistsWithSagaID:groupingType:existentPID:
collectionExistsWithCloudUniversalLibraryID:groupingType:existentPID:
collectionExistsContainedWithinSyncIDs:groupingType:existentPID:
_itemsForQueryCriteria:
_getCachedValueForQueryCritiera:valueCriteriaCache:entitiesForCriteriaCache:didLoadBlocksByQueryCriteria:valueLoadedFromEntitiesArrayBlock:loadValueFromDataProviderBlock:
_hasItemsForQueryCriteria:
_hasCollectionsForQueryCriteria:
_countOfItemsForQueryCriteria:
_countOfCollectionsForQueryCriteria:
_itemPersistentIdentifiersForQueryCriteria:
_collectionPersistentIdentifiersForQueryCriteria:
_clearPendingDisconnection
setCloudFilteringType:
cloudFilteringType
_setLibraryFilterPredicates
_collectionsForQueryCriteria:
_removeConnectionAssertion:
_disconnect
_setupNotifications
_tearDownNotifications
ml3Library
libraryChangeObservers
_initWithLibraryDataProvider:
libraryDataProvider
artworkDataSource
addStoreItem:andAddTracksToCloudLibrary:withCompletion:
addStoreItemIDs:andAddTracksToCloudLibrary:withCompletion:
addStoreItemIDs:referralObject:andAddTracksToCloudLibrary:withCompletion:
performStoreItemLibraryImport:withCompletion:
getPlaylistWithUUID:creationMetadata:completionHandler:
addPlaylistStoreItemsWithMetadata:completion:
addTracksToMyLibrary:
importArtworkTokenForEntityPersistentID:entityType:artworkToken:artworkType:sourceType:
importOriginalArtworkFromImageData:withArtworkToken:artworkType:sourceType:mediaType:
addGlobalPlaylistWithID:andAddToCloudLibrary:completion:
addNonLibraryOwnedPlaylistWithGlobalID:completion:
addNonLibraryOwnedPlaylistsWithGlobalIDs:completion:
recordPlayEventForAlbumPersistentID:
recordPlayEventForPlaylistPersistentID:
_MLCoreStorage
_setMLCoreStorage:
_MLCoreStorageLock
activeUserChangeMonitor
setActiveUserChangeMonitor:
_MLCoreStorageLockPointer
deviceMediaLibrary
initWithMetadataDictionary:
indexOfObject:
requestCapabilitiesWithCompletionHandler:
setWithArray:
authorizationStatus
compact
_endDiscoveringMediaLibrariesIfAllowed
removePointerAtIndex:
pointerAtIndex:
updateToLibraryCurrentRevision
_mediaLibraries
enumeratePersistentIDsUsingBlock:
_deviceMediaLibraryWithUserIdentity:createIfRequired:
currentDeviceInfo
scanLongLong:
scannerWithString:
host
entityFromURL:inLibrary:
addPointer:
weakObjectsPointerArray
_initWithMediaLibrary:identifier:
dictionaryWithObjectsAndKeys:
initWithUnsignedLongLong:
_postNotificationName:library:
_postNotificationName:library:userInfo:
_mediaLibraryWithUniqueIdentifier:userDSID:
requestAuthorization:
callStackSymbols
musicLibraryForUserAccount:
defaultMediaLibrary
setDefaultMediaLibrary:
deviceMediaLibraryWithUserIdentity:
beginDiscoveringMediaLibraries
endDiscoveringMediaLibraries
_sharedCloudServiceStatusMonitor
_mediaLibraryAuthorizationStatusFromCloudServiceAuthorizationStatus:
logDatabaseAccessForCurrentProcess
isLibraryServerDisabled
setLibraryServerDisabled:
mediaLibraries
sharedMediaLibraries
mediaLibraryWithUniqueIdentifier:
mediaLibraryWithUniqueIdentifier:allowsLoadingFromDisk:
_libraryForDataProvider:
_libraryDataProviders
libraryDataProviders
addLibraryDataProvider:
removeLibraryDataProvider:removalReason:
reloadLibraryDataProvider:
postEntitiesAddedOrRemovedNotificationForLibraryDataProvider:
reloadDynamicPropertiesForLibraryDataProvider:
reloadInvisiblePropertiesForLibraryDataProvider:
reloadDisplayValuesForLibraryDataProvider:
syncGenerationDidChangeForLibraryDataProvider:
uniqueIdentifierDidChangeForLibraryDataProvider:
libraryPathDidChangeForDataProvider:
removeObjectIdenticalTo:
localizedCaseInsensitiveCompare:
sortUsingComparator:
requestAuthorizationForScopes:completionHandler:
authorizationStatusForScopes:
specificAccountWithDSID:
T@"MPMediaEntity",R,N,V_entity
T@"NSString",R,C,N,V_anchor
Tq,R,N,V_deletionType
_entity
_anchor
_deletionType
initWithEntity:anchor:deletionType:
entity
anchor
deletionType
enumerateEntityChangesAfterSyncAnchor:maximumRevisionType:inUsersLibrary:usingBlock:
enumerateEntityChangesAfterSyncAnchor:maximumRevisionType:usingBlock:
_syncValidity
enumerateEntityChangesAfterSyncAnchor:usingBlock:
T@"MPModelKind",&,N,V_sectionKind
T@"MPPropertySet",C,N,V_sectionProperties
T@"NSArray",C,N,V_sectionSortDescriptors
T@"MPPropertySet",C,N,V_itemProperties
T@"NSArray",C,N,V_itemSortDescriptors
T#,&,N
_sectionKind
_sectionSortDescriptors
_itemSortDescriptors
sectionClass
setSectionClass:
itemClass
setItemClass:
_kindForClass:
sectionKind
setSectionKind:
setSectionProperties:
sectionSortDescriptors
setSectionSortDescriptors:
setItemProperties:
itemSortDescriptors
setItemSortDescriptors:
preferredQueue
T@"NSOperationQueue",R,N
sharedQueue
sharedNetworkQueue
requiresNetwork
T@"MPQueuePlayer",R,N,V_player
T@"<MPAVQueueCoordinatingDataSource>",R,W,N,V_dataSource
T@?,C,N,V_equilibriumAchievedHandler
T@"MPAVItem",R,N,V_currentItem
TB,N,V_shouldExpectEmptyQueue
TB,N,V_shouldDeferItemLoading
T@"NSArray",R,N,V_items
_backgroundTaskIdentifier
_backgroundTasks
_holdingPlaybackTransactionForFirstItem
_isPendingPlayerItemSync
_isSyncingPlayerItems
_itemsPendingAssetLoading
_lastItemAnchor
_lastPreferredQueueDepth
_needsCurrentItemUpdateAfterPlayerItemSync
_preventLoadingItems
_reusableItems
_shouldExpectEmptyQueue
_shouldDeferItemLoading
_currentItem
_items
_equilibriumAchievedHandler
reloadItemsKeepingCurrentItem:
reset
shouldExpectEmptyQueue
setShouldExpectEmptyQueue:
shouldDeferItemLoading
setShouldDeferItemLoading:
initWithPlayer:dataSource:
_currentItemHasFinishedDownloadingDidChangeNotification:
_beginBackgroundTaskAssertion
_endBackgroundTaskAssertion
_dequeueFailedItem:
_hasAchievedEquilibrium
_loadAssetForItem:
_preferredQueueDepthWithFirstItem:
_reloadItemsKeepingCurrentItem:
_syncItemsWithPreviousItems:
_syncPlayerItems
_playerItems
_removeItemFromPlayer:
_sendItemsDidChange
_updateCurrentItem
_updateQueueDepthIfNeeded
equilibriumAchievedHandler
setEquilibriumAchievedHandler:
MP_shortDescription
removeObjectsInRange:
queueCoordinatorDidChangeItems:
queueCoordinator:willInsertItem:afterItem:
setMP_associatedQueuePlayer:
setAudioTimePitchAlgorithm:
audioTimePitchAlgorithm
MP_associatedQueuePlayer
queueCoordinator:itemToFollowItem:
queueCoordinator:didLoadItem:
queueCoordinator:willLoadItem:
queueCoordinator:failedToLoadItem:
T@"MPQueuePlayer",W,N
initWithData:encoding:
getBagForRequestContext:withCompletionHandler:
enqueueDataRequest:withCompletionHandler:
parsedBody
urlResponse
defaultSession
initWithURLRequest:requestContext:
clientInfoForMusicKitRequestWithClientIdentifier:clientVersion:
setHost:
setScheme:
ic_stringValueForKey:
ic_dictionaryValueForKey:
sharedBagProvider
initWithIdentity:
_requestedClipProperties
mediaClipWithStoreItemMetadata:storeItemMovieClip:
setStaticAssets:
setFlavorType:
setUrl:
setPreviewArtworkCatalogBlock:
T@"MPLibraryKeepLocalStatusObserverConfiguration",&,N,V_configuration
T{MPLibraryActiveKeepLocalStatus=qd},R,N,V_currentStatus
TQ,R,N,V_downloadPausedReason
T@?,C,N,V_statusBlock
_activeDownloads
_pausedDownloads
_configuration
_downloadPausedReason
_statusBlock
_currentStatus
downloadManager:didEnqueueAssetDownloads:didRemoveAssetDownloads:
downloadManager:didUpdateDownloadProgress:
downloadManager:didFinishAsset:withError:
downloadManager:didCancelAssets:
downloadManager:didChangeDownloadPausedReasonForAssets:
setConfiguration:
_transientStateDidChangeNotification:
_handleDownloadStateChanged:
_calculateCurrentStatus
_updateActiveDownloadsAllowingDownloadRemoval:
_updateCurrentStatus
configuration
currentStatus
downloadPausedReason
statusBlock
setStatusBlock:
isEqualToSet:
isCollectionType
collectionType
TB,N,GisCollectionType,V_collectionType
Tq,N,V_managedStatus
TB,N,V_hasNonPurgeableAsset
TB,N,GisStoreRedownloadable,V_storeRedownloadable
_collectionType
_hasNonPurgeableAsset
_storeRedownloadable
_managedStatus
setCollectionType:
managedStatus
setManagedStatus:
hasNonPurgeableAsset
setHasNonPurgeableAsset:
setStoreRedownloadable:
pendingItemIdentifiers
T@"NSArray",C,N,V_pendingItemIdentifiers
Tq,N,V_downloadEnabledItemCount
Tq,N,V_nonPurgeableItemCount
Tq,N,V_redownloadableItemCount
_pendingItemIdentifiers
_downloadEnabledItemCount
_nonPurgeableItemCount
setPendingItemIdentifiers:
downloadEnabledItemCount
setDownloadEnabledItemCount:
nonPurgeableItemCount
setNonPurgeableItemCount:
T@"MPMediaItem",R,N
_containedMediaTypes
_initializedContainedMediaTypes
_itemsCount
_itemsQuery
_representativeItem
initWithItems:
initWithItemsQuery:
itemsQuery
setValue:forProperty:
setValue:forProperty:withCompletionBlock:
collectionWithItems:
sortTitlePropertyForGroupingType:
representativePersistentIDPropertyForGroupingType:
T@,R,W,N,V_object
T@?,R,C,N,V_handler
_object
_handler
initWithName:object:handler:
_handleNotification:
object
handler
Tq,N,V_libraryID
Tq,N,V_storeSagaID
Tq,N,V_downloadReason
Td,N,V_downloadProgress
TQ,N,V_downloadPausedReason
Tq,R,N,V_deviceLibraryID
Tq,R,N,V_storeItemID
_deviceLibraryID
_storeItemID
_downloadReason
_downloadProgress
_libraryID
_storeSagaID
initWithMPStoreDownload:
deviceLibraryID
downloadReason
setDownloadReason:
downloadProgress
setDownloadProgress:
setDownloadPausedReason:
libraryID
setLibraryID:
setStoreSagaID:
_downloadReasonFromStoreDownload:
MPMediaDownloadsFromMPStoreDownloads:
MPMediaDownloadsFromATAssets:
MPMediaDownloadPauseReasonForATAsset:
_requestedArtistProperties
setHasSocialPosts:
setHasBiography:
heroArtworkCatalogBlock
heroArtworkCatalog
__startTime_KEY
__endTime_KEY
__heroArtworkCatalogBlock_KEY
T@"MPAVErrorResolver",R,N,V_errorResolver
T@?,C,N,V_resolutionHandler
_strongSelf
_errorResolver
_resolutionHandler
errorResolver:didResolveError:withResolution:
initWithErrorResolver:
resolveError:
errorResolver
resolutionHandler
setResolutionHandler:
T@"<MPDetailSliderDelegate>",W,N,V_delegate
TB,N,V_allowsScrubbing
Td,N,V_detailScrubbingVerticalRange
Td,N,V_duration
Td,N,V_availableDuration
Tq,N,V_timeLabelStyle
Td,N,V_minTimeLabelWidth
_currentTimeInverseLabel
_currentTimeLabel
_scrubController
_allowsScrubbing
_autoscrubActive
_autoscrubTimer
_canCommit
_currentTime
_downloadingTrackOverlay
_glowDetailScrubImageView
_isTracking
_maxTrackWidth
_previousLocationInView
_trackInset
_formatter
_detailScrubbingVerticalRange
_duration
_availableDuration
_timeLabelStyle
_minTimeLabelWidth
detailScrubControllerDidBeginScrubbing:
detailScrubControllerDidEndScrubbing:
detailScrubController:didChangeValue:
detailScrubController:didChangeScrubSpeed:
thumbHitRect
initWithFrame:style:maxTrackWidth:
setBounds:
setFrame:
traitCollectionDidChange:
viewForFirstBaselineLayout
viewForLastBaselineLayout
currentThumbImage
setValue:duration:
_setValueWhileTracking:duration:
_thumbHitEdgeInsets
_autoscrubTick:
isTracking
allowsDetailScrubbing
detailScrubbingAvailableForCurrentDuration
cancelTracking
localizedScrubSpeedText
setAllowsScrubbing:
setAllowsDetailScrubbing:
setAvailableDuration:
setDuration:
setMinTimeLabelWidth:
setTimeLabelStyle:
timeLabelFontForStyle:
timeLabelTextColorForStyle:
_modernThumbImageWithColor:height:includeShadow:
_colorSliceImageWithColor:height:
_setupControlsForStyle
_updateTrackInset
_updateTimeDisplayForTime:
_updateTimeDisplayForTime:force:
_stringForTime:elapsed:
_stringForCurrentTime:
_stringForInverseCurrentTime:
_resetScrubInfo
_commitValue
_updateForAvailableDuraton
allowsScrubbing
detailScrubbingVerticalRange
setDetailScrubbingVerticalRange:
availableDuration
timeLabelStyle
minTimeLabelWidth
layoutIfNeeded
detailSlider:didChangeValue:
removeAnimationForKey:
stringFromSeconds:
setStyle:
_legacy_sizeWithFont:
alphaComponent
fill
fontWithDescriptor:size:
fontDescriptorByAddingAttributes:
fontDescriptor
systemFontOfSize:
detailSliderTrackingDidCancel:
detailSliderTrackingDidEnd:
isContinuous
addAnimation:forKey:
setAutoreverses:
setRepeatCount:
setToValue:
animationWithKeyPath:
statusBarOrientation
convertPoint:toView:
detailSliderTrackingDidBegin:
detailSlider:didChangeScrubSpeed:
animationKeys
removeAllAnimations
bundleForClass:
setLineBreakMode:
labelClass
setSemanticContentAttribute:
setDeliversTouchesForGesturesToSuperview:
T@"NSXPCConnection",R,N,V_serviceConnection
_shuffleMode
_repeatMode
_serviceConnection
performQueueTransaction:completionHandler:
prerollWithCompletion:
beginPlaybackAtHostTime:
setRelativeVolume:
setDisableAutomaticCanBeNowPlaying:
_mediaItemsForContentItemIDs:
onApplicationServerAsync:errorHandler:
onApplicationServer:
serviceConnection
getServerEndpointWithReply:
setExportedObject:
proxyWithObject:protocol:
setExportedInterface:
getNowPlayingsForContentItemIDs:reply:
setClasses:forSelector:argumentIndex:ofReply:
remoteObjectInterface
performQueueModifications:completion:
getNowPlayingWithReply:
getNowPlayingAtIndex:reply:
setNowPlayingItem:itemIdentifier:completion:
getImageForArtworkIdentifier:itemIdentifier:atSize:reply:
getTimeSnapshotWithReply:
getDescriptorWithReply:
setDescriptor:completion:
prependDescriptor:completion:
appendDescriptor:completion:
pauseWithFadeDuration:
skipWithBehavior:
reshuffle
beginSeekWithDirection:
getRepeatModeWithReply:
getShuffleModeWithReply:
setElapsedTime:completion:
setPlaybackRate:completion:
initWithListenerEndpoint:
synchronousRemoteObjectProxyWithErrorHandler:
setWantsReverseProcessAssertion:
remoteObjectProxy
resume
setInterruptionHandler:
setRemoteObjectInterface:
interfaceWithProtocol:
initWithServiceName:
initWithController:
fault
T@"MPMusicPlayerApplicationController",R,W,N,V_controller
objectAtIndex:
modifications
T@"NSMutableDictionary",&,N,V_insertedDescriptors
T@"NSMutableArray",&,N,V_removedItems
T@"MPMusicPlayerControllerApplicationQueueModifications",R,N
_insertedDescriptors
_removedItems
insertQueueDescriptor:afterItem:
_insertQueueDescriptor:afterItemWithIdentifier:
removeItem:
_removeItemWithIdentifier:
insertedDescriptors
setInsertedDescriptors:
removedItems
setRemovedItems:
TB,N,GisTTML,V_TTML
T@"NSString",&,N,V_lyricsContent
T@"NSString",&,N,V_lyricsID
_TTML
_lyricsContent
_lyricsID
isTTML
setTTML:
lyricsContent
setLyricsContent:
lyricsID
setLyricsID:
Tq,N,V_songAdamID
_songAdamID
_enqueueOperationWithURL:bagDictionary:allowingAuthentication:
songAdamID
setSongAdamID:
setCancellationHandler:
cancelRequest:
ic_intValueForKey:
parsedBodyDictionary
isCancelled
setAuthenticationProvider:
initWithUserInteractionLevel:
preferredLanguages
initWithName:value:
initWithURL:resolvingAgainstBaseURL:
_lyricsURLForURLBagDictionary:
layerWithKey:ofType:
layerWithFirstObjectOfType:
setKey:
T@"NSString",C,N,V_key
TQ,N,V_type
_key
T@,W,N,V_delegate
wirelessRouteIsPicked
_cachedNumberOfItemsInSections
_cachedNumberOfSections
_hasValidCachedNumberOfSections
_itemsCache
_itemIdentifierSetMap
_sectionsCache
_sectionIdentifierSetMap
T@"<MPLazySectionedCollectionDataSource>",&,N,V_dataSource
_mapLock
initWithDataSource:
_cachedObjectAtIndexPath:
_updateCacheWithObject:atIndexPath:
T@"NSURL",C,D,N
__flavorType_KEY
__mediaType_KEY
__url_KEY
_playbackPositionBuilder
_requestedSongProperties
setHasTimeSyncedLyrics:
setClassicalMovementNumber:
setClassicalMovementCount:
setClassicalMovement:
setClassicalWork:
setGrouping:
setVolumeAdjustment:
setCloudStatus:
setGaplessInfo:
setHasCloudSyncSource:
T@"MPModelObject",R,N,V_modelObject
T@?,C,N,V_fallbackArtworkCatalogBlock
_propertyValues
_fallbackArtworkCatalogBlock
initWithModelObject:
fallbackArtworkCatalogBlock
setFallbackArtworkCatalogBlock:
mediaItemPropertyValues
dateFromComponents:
isExplicitSong
_itemIdentifierToCompositeStoreItemMetadataLRUDictionary
_itemIdentifierToCompositeStoreItemMetadataMapTable
initWithCacheSize:
addMetadata:forItemIdentifier:
metadataForItemIdentifier:
metadataForItemIdentifier:ignoreExpiration:
removeExpiredMetadata
initWithKeyOptions:valueOptions:capacity:
cacheableItemIdentifier
initWithMaximumCapacity:
hasMetadataForRequestReason:
T^v,R,N,V_mediaRemoteLyricsItemToken
_mediaRemoteLyricsItemToken
initWithIdentifier:userInfo:
initWithMediaRemoteLyricsItemToken:
mediaRemoteLyricsItemToken
T^v,R,N,V_mediaRemoteLyricsItem
T@"MPNowPlayingInfoLyricsItemToken",R,N
_mediaRemoteLyricsItem
initWithLyrics:userProvided:
initWithLyrics:userProvided:token:
initWithMediaRemoteLyricsItem:
userProvided
mediaRemoteLyricsItem
T^v,R,N,V_mediaRemoteLyricsEvent
_mediaRemoteLyricsEvent
initWithMediaRemoteLyricsEvent:
startDate
endDate
mediaRemoteLyricsEvent
mediaPlayerBundle
T@"NSString",R,N,V_uniqueID
T@"NSString",R,N,V_productName
T@"NSString",R,N,V_deviceName
T@"NSString",R,N,V_modelIdentifier
TB,R,N,GisPlaying,V_playing
_playing
_uniqueID
_productName
_deviceName
_modelIdentifier
initWithDictionary:
uniqueID
productName
deviceName
modelIdentifier
otherConnectedDevicesFromRouteDescription:
T@"NSObject<OS_dispatch_queue>",&,N,V_imageAccessQueue
T@"NSObject<OS_dispatch_queue>",&,N,V_videoAccessQueue
T@"NSObject<OS_dispatch_queue>",&,N,V_callbackQueue
T@"NSCache",&,N,V_fallbackImageArtworkRepresentationCache
T@"NSMutableDictionary",&,N,V_pendingRequestURLToCompletionHandlers
T@"NSMapTable",&,N,V_catalogImageTaskMap
T@"NSMapTable",&,N,V_resourceLoaderStoragePolicyMap
T@"NSMutableDictionary",&,N,V_videoTaskToCacheStoragePolicy
T@"NSMutableDictionary",&,N,V_videoTaskToResourceLoadingRequest
T@"NSMutableDictionary",&,N,V_videoTaskToData
T@"NSURLSession",&,N,V_imageURLSession
T@"NSURLSession",&,N,V_videoURLSession
T@"NSURLCache",W,N,V_videoURLCache
T@"<NSURLSessionDataDelegate>",W,N,V_URLSessionDataDelegateProxy
T@"NSURLSessionConfiguration",R,N,V_URLSessionConfiguration
TB,N,V_usesFallbackCache
T@"NSURL",&,N,V_videoArtworkCacheURL
_usesFallbackCache
_URLSessionConfiguration
_videoArtworkCacheURL
_imageAccessQueue
_videoAccessQueue
_callbackQueue
_fallbackImageArtworkRepresentationCache
_pendingRequestURLToCompletionHandlers
_catalogImageTaskMap
_resourceLoaderStoragePolicyMap
_videoTaskToCacheStoragePolicy
_videoTaskToResourceLoadingRequest
_videoTaskToData
_imageURLSession
_videoURLSession
_videoURLCache
_URLSessionDataDelegateProxy
resourceLoader:shouldWaitForLoadingOfRequestedResource:
resourceLoader:shouldWaitForRenewalOfRequestedResource:
resourceLoader:didCancelLoadingRequest:
resourceLoader:shouldWaitForResponseToAuthenticationChallenge:
resourceLoader:didCancelAuthenticationChallenge:
URLSession:dataTask:didReceiveResponse:completionHandler:
URLSession:dataTask:didBecomeDownloadTask:
URLSession:dataTask:didBecomeStreamTask:
URLSession:dataTask:didReceiveData:
URLSession:dataTask:willCacheResponse:completionHandler:
URLSession:task:willBeginDelayedRequest:completionHandler:
URLSession:taskIsWaitingForConnectivity:
URLSession:task:willPerformHTTPRedirection:newRequest:completionHandler:
URLSession:task:didReceiveChallenge:completionHandler:
URLSession:task:needNewBodyStream:
URLSession:task:didSendBodyData:totalBytesSent:totalBytesExpectedToSend:
URLSession:task:didFinishCollectingMetrics:
URLSession:task:didCompleteWithError:
URLSession:didBecomeInvalidWithError:
URLSession:didReceiveChallenge:completionHandler:
URLSessionDidFinishEventsForBackgroundURLSession:
updateURLSessionWithCachePolicy:cachePath:
fallbackImageArtworkRepresentationCache
setVideoArtworkCacheURL:
supportedSizesForCatalog:
requestForCatalog:size:
cacheKeyForCatalog:size:
sortedSupportedSizesForCatalog:
shouldLookForLargerImageRepresentationsWhenBestRepresentationIsUnavailable
wantsBackgroundImageDecompression
requestForCatalog:kind:size:
bestAvailableSizeForCatalog:
cacheKeyForCatalog:kind:size:
_artworkRepresentationWithImageFromData:forURLResponse:catalog:size:immediateImageDecompressionAllowed:
_existingRepresentationFromURLCacheForArtworkCatalog:immediateImageDecompressionAllowed:
_isRepresentationSize:validForCatalog:
_existingRepresentativeObjectForArtworkCatalog:kind:handler:
_requestForCatalog:kind:size:
_performAsyncBarrierBlockOnQueue:block:
_performSyncBlockOnQueue:block:
_bestVideoArtworkRepresentationForCatalog:
_cacheKeyForCatalog:kind:size:
_bestAvailableSizeForCatalog:kind:
_subclassImplementsSelector:
_didReceiveMemoryWarningNotification:
_didReceiveWillEnterForegroundNotification:
URLSessionConfiguration
usesFallbackCache
setUsesFallbackCache:
videoArtworkCacheURL
imageAccessQueue
setImageAccessQueue:
videoAccessQueue
setVideoAccessQueue:
callbackQueue
setCallbackQueue:
setFallbackImageArtworkRepresentationCache:
pendingRequestURLToCompletionHandlers
setPendingRequestURLToCompletionHandlers:
catalogImageTaskMap
setCatalogImageTaskMap:
resourceLoaderStoragePolicyMap
setResourceLoaderStoragePolicyMap:
videoTaskToCacheStoragePolicy
setVideoTaskToCacheStoragePolicy:
videoTaskToResourceLoadingRequest
setVideoTaskToResourceLoadingRequest:
videoTaskToData
setVideoTaskToData:
imageURLSession
setImageURLSession:
videoURLSession
setVideoURLSession:
videoURLCache
setVideoURLCache:
URLSessionDataDelegateProxy
setURLSessionDataDelegateProxy:
setMemoryCapacity:
memoryCapacity
_CFURLCache
setDelegate:queue:
resourceLoader
setValue:forHTTPHeaderField:
userAgent
valueWithCGSize:
URLCache
MIMEType
dataTaskWithRequest:
finishLoading
finishLoadingWithError:
initWithResponse:data:userInfo:storagePolicy:
storagePolicy
respondWithData:
dataWithBytes:length:
currentOffset
requestedLength
requestedOffset
requestsAllDataToEndOfResource
dataRequest
_createDispatchData
currentMemoryUsage
currentDiskUsage
diskCapacity
countOfBytesExpectedToReceive
msv_dataTaskWithRequest:completionHandler:
setRepresentationSize:forRequest:
setAttribution:
removeItemAtURL:error:
getResourceValue:forKey:error:
contentsOfDirectoryAtURL:includingPropertiesForKeys:options:error:
writeToURL:atomically:
createDirectoryAtURL:withIntermediateDirectories:attributes:error:
URLByAppendingPathComponent:isDirectory:
URLForDirectory:inDomain:appropriateForURL:create:error:
dataWithContentsOfURL:
sessionWithConfiguration:delegate:delegateQueue:
finishTasksAndInvalidate
_applyVideoCacheURL:toConfiguration:
sessionWithConfiguration:
_applyImageURLCachePolicy:cacheDiskPath:toConfiguration:
setHTTPShouldUsePipelining:
defaultSessionConfiguration
setURLCache:
set_maxCacheableEntrySizeRatio:
initWithMemoryCapacity:diskCapacity:diskPath:
initWithMemoryCapacity:diskCapacity:directoryURL:
setDiskCapacity:
_requestSizeMap
storeCachedResponse:forRequest:
setRequestCachePolicy:
private
TB,N,GisPrivate,V_private
T@"NSString",R,N,V_requestingBundleIdentifier
T@"NSString",R,N,V_requestingBundleVersion
T@"NSDictionary",R,N,V_startTimes
T@"NSDictionary",R,N,V_endTimes
_private
_requestingBundleIdentifier
_requestingBundleVersion
_startTimes
_endTimes
_setStartTime:forIdentifiers:
_setEndTime:forIdentifiers:
isPrivate
setPrivate:
startTimes
endTimes
dictionary
second
first
pairWithFirst:second:
bundleVersion
shortVersionString
bundleRecordForCurrentProcess
T@"MPMediaQuery",R,C,N
T@"MPMediaItem",&,N,V_startItem
_itemCollection
initWithQuery:
initWithItemCollection:
setStartTime:forItem:
setEndTime:forItem:
itemCollection
T@"NSArray",C,N,V_storeIDs
T@"NSString",C,N,V_startItemID
_storeIDs
_storeFronts
_startItemID
initWithStoreIDs:
setStartTime:forItemWithStoreID:
setEndTime:forItemWithStoreID:
setSourceStorefront:forItemWithStoreID:
storeIDs
assetStoreFronts
setAssetStoreFronts:
setStoreIDs:
startItemID
setStartItemID:
T@"MPIdentifierSet",R,C,N,V_identifiers
T@"NSString",R,C,N,V_itemKind
libraryContent
TB,R,N,GisLibraryContent,V_libraryContent
T@"NSString",R,C,N,V_itemID
T@"NSString",R,C,N,V_catalogID
T@"NSDictionary",R,C,N,V_dictionary
_libraryContent
_dictionary
_identifiers
_itemID
_catalogID
identifiers
isLibraryContent
itemID
catalogID
T@"NSArray",C,N,V_playParametersQueue
T@"MPMusicPlayerPlayParameters",&,N,V_startItemPlayParameters
_playParametersQueue
_startItemPlayParameters
initWithPlayParametersQueue:
setStartTime:forItemWithPlayParameters:
setEndTime:forItemWithPlayParameters:
playParametersQueue
setPlayParametersQueue:
startItemPlayParameters
setStartItemPlayParameters:
T@"MPRadioStation",R,N,V_radioStation
_radioStation
initWithRadioStation:
T@"MPPlaybackArchive",R,C,N,V_playbackArchive
_playbackArchive
initWithPlaybackArchive:
playbackArchive
T@"NSArray",C,N,V_keyPath
setKeyPath:
sortDescriptorWithKeyPath:ascending:
initWithKey:ascending:
T@"NSDictionary",C,N,V_relatedProperties
_relatedProperties
relatedProperties
setRelatedProperties:
sortDescriptorWithRelatedProperties:ascending:
T{shared_ptr<std::map<long long, std::shared_ptr<mlcore::EntityQueryResult>>>=^v^{__shared_weak_count}},R,N,V_itemEntityQueryResults
T{shared_ptr<mlcore::EntityQueryResult>=^{EntityQueryResult}^{__shared_weak_count}},R,N,V_sectionEntityQueryResult
_itemTranslationContext
_sectionTranslationContext
_allowedSectionPersistentIDs
_allowedSectionPersistentIDToSectionQueryResultsIndexMap
_itemEntityQueryResults
_sectionEntityQueryResult
initWithRequest:sectionQueryResults:itemQueryResults:
_adjustedIndexForSectionIndex:
itemEntityQueryResults
sectionEntityQueryResult
T@"<MPAVErrorResolverDelegate>",W,N,V_delegate
sendDidResolveError:withResolution:
previewArtworkCatalogBlock
staticAssets
T@"NSArray",C,D,N
previewArtworkCatalog
classesForSecureCoding
__previewArtworkCatalogBlock_KEY
__staticAssets_KEY
T^v,R,N
initWithMRAVEndpoint:
unwrappedValue
initWithMRAVOutputContext:
initWithMRAVEndpointObserver:
T@"MPConcreteMediaEntityPropertiesCache",R,&,N
_propertiesCache
_utilitySerialQueue
cachedPropertyValues
initWithPersistentID:library:
_initWithPersistentID:library:propertiesCache:
invalidateCachedProperties
classForCoder
_nonBatchableOrCachedValueForProperty:needsFetch:
cachedValueForProperty:isCached:
cachePropertyValues:forProperties:persistValueInBackgroundBlock:
cacheValue:forProperty:persistValueInBackgroundBlock:
valueForProperty:isCached:
initWithArtworkCatalog:
_catalog
initWithArtworkCatalog:allowsNetworking:
concreteMediaItemWithPersistentID:library:
dataProviderEntityClass
concreteMediaItemWithPersistentID:
createUncachedConcreteMediaItemWithPersistentID:library:
_grouping
_initWithIdentifier:valuesForProperties:itemsQuery:grouping:representativeItemIdentifier:propertiesCache:
initWithIdentifier:valuesForProperties:itemsQuery:grouping:representativeItemIdentifier:
initWithIdentifier:itemsQuery:grouping:
hasName
createUncachedMediaItemCollectionWithIdentifier:valuesForProperties:itemsQuery:grouping:representativeItemIdentifier:
_clusterPlaylist
initWithProperties:itemsQuery:
_updateLibraryForPlaylistEdit:
replaceItems:completion:
replaceItemsWithPersistentIDs:completion:
appendItem:completion:
appendItems:completion:
removeItems:atFilteredIndexes:completionBlock:
removeAllItems
moveItemFromIndex:toIndex:completionBlock:
populateWithSeedItem:completionBlock:
populateWithSeedItem:queue:completionBlock:
beginGeneratingGeniusClusterItemsWithSeedItems:error:
geniusClusterItemsWithCount:error:
endGeneratingGeniusClusterItems
_allowsEditing
sectionInfo
T@"MPMediaQuerySectionInfo",R,C,D,N
T@"<MPMediaLibraryResultSet>",R,N,V_resultSet
_resultSet
_entityClass
_sectionInfo
_entities
_entitiesQueue
_queryCriteria
initWithResultSet:queryCriteria:entityType:library:
isQueryResultSetInvalidated
resultSet
setObject:atIndexedSubscript:
persistentIDAtIndex:
localRevision
T@"<MPMediaLibraryDataProvider>",R,W,N,V_dataProvider
T#,R,N,V_dataProviderEntityClass
Tq,R,N,V_identifier
_dataProviderEntityClass
_valuePersistenceBlocks
_propertiesQueue
_dataProvider
initWithLibraryDataProvider:dataProviderEntityClass:identifier:
_onBarrierCacheValues:persistValueInBackgroundBlock:
delete
dataProvider
T@"ML3MusicLibrary",&,N,V_library
T@"MPMediaLibrary",W,N,V_mediaLibrary
T@"MPMediaEntityCache",R,N,V_entityCache
T@"<MPArtworkDataSource>",R,N,V_artworkDataSource
propertiesToCache
_backgroundTaskQueue
_cloudUpdateQueue
_backgroundTask
_backgroundTaskCount
_hasScheduledEventPosting
_refreshState
_setValuesWidthLimitedQueue
_entitiesAddedOrRemovedNotificationQueue
_entitiesAddedOrRemovedCoalescingTimer
_entityCache
_artworkDataSource
T@"NSArray",C,N
onDiskProviders
setOnDiskProviders:
itemPersistentIDForStoreID:
setValue:forProperty:ofItemWithIdentifier:completionBlock:
setValue:forProperty:ofPlaylistWithIdentifier:completionBlock:
setValue:forProperty:ofCollectionWithIdentifier:groupingType:completionBlock:
addPlaylistWithValuesForProperties:
sdk_addPlaylistWithValuesForProperties:
deleteItemsWithIdentifiers:count:
removeItemsWithIdentifiers:count:
removePlaylistWithIdentifier:
setItemsWithIdentifiers:forPlaylistWithIdentifier:completionBlock:
addItemWithIdentifier:toPlaylistWithIdentifier:completionBlock:
addItemsWithIdentifiers:toPlaylistWithIdentifier:completionBlock:
sdk_addItemWithOpaqueIdentifier:toPlaylistWithIdentifier:completionBlock:
removeItemsAtIndexes:inPlaylistWithIdentifier:completionBlock:
removeAllItemsInPlaylistWithIdentifier:
removeFirstItemFromPlaylistWithIdentifier:
moveItemFromIndex:toIndex:inPlaylistWithIdentifier:completionBlock:
seedPlaylistWithIdentifier:withItemWithIdentifier:completionBlock:
createGeniusClusterPlaylistWithSeedItemIdentifiers:count:error:
generateItemIdentifiersForGeniusClusterPlaylist:count:error:
releaseGeniusClusterPlaylist:
populateLocationPropertiesOfItemWithIdentifier:withPath:assetProtectionType:
populateLocationPropertiesOfItemWithIdentifier:withPath:assetProtectionType:completionBlock:
clearLocationPropertiesOfItemWithIdentifier:
supportsEntityChangeTrackingForMediaEntityType:collectionGroupingType:dataProviderClass:
updateEntitesToCurrentRevision
sdk_addItemWithOpaqueID:withCompletion:
addPlaylistStoreItemsForLookupItems:withCompletion:
accountDSID
playbackHistoryPlaylistPersistentID
photosMemoriesPlaylistPersistentID
T@"MPMediaEntityCache",R,N
T@"<MPArtworkDataSource>",R,N
enumerateItemIdentifiersForQueryCriteria:ordered:cancelBlock:usingBlock:
enumerateCollectionIdentifiersForQueryCriteria:ordered:cancelBlock:usingBlock:
connectWithAuthenticationData:completionBlock:progressHandler:
enumerateEntityChangesAfterSyncAnchor:maximumRevisionType:inUsersLibrary:itemBlock:collectionBlock:
setLibraryEntityFilterPredicatesWithCloudFilteringType:additionalFilterPredicates:
setLibraryContainerFilterPredicatesWithCloudFilteringType:additionalFilterPredicates:
setLibraryPublicEntityFilterPredicatesWithCloudFilteringType:additionalFilterPredicates:
setLibraryPublicContainerFilterPredicatesWithCloudFilteringType:additionalFilterPredicates:
loadValueForAggregateFunction:onItemsForProperty:queryCriteria:completionBlock:
loadValueForAggregateFunction:onCollectionsForProperty:queryCriteria:completionBlock:
loadProperties:ofItemWithIdentifier:completionBlock:
loadProperties:ofCollectionWithIdentifier:groupingType:completionBlock:
itemResultSetForQueryCriteria:
collectionResultSetForQueryCriteria:
loadQueryCriteria:hasItemsWithCompletionBlock:
loadQueryCriteria:hasCollectionsWithCompletionBlock:
loadQueryCriteria:countOfItemsWithCompletionBlock:
loadQueryCriteria:countOfCollectionsWithCompletionBlock:
initWithLibrary:
setLibrary:
_storePlatformRequestContext
_importStoreItemElements:withReferralObject:andAddTracksToCloudLibrary:usingCloudAdamID:withCompletion:
_addGlobalPlaylistsToLibraryDatabase:asLibraryOwned:completion:
systemFilterPredicatesWithGroupingType:cloudTrackFilteringType:subscriptionFilteringOptions:
ML3SystemFilterPredicatesWithGroupingType:cloudTrackFilteringType:subscriptionFilteringOptions:additionalFilterPredicates:
performBackgroundTaskWithBlock:
_adjustedPlaylistPropertySeedItemsOfEntity:withDefaultValue:
_adjustedPropertyMediaTypeOfEntity:withDefaultValue:
_adjustedItemTimeOfEntity:withDefaultValue:
_adjustedItemPropertyVolumeNormalizationOfEntity:withDefaultValue:
_adjustedItemPropertyVolumeAdjustmentOfEntity:withDefaultValue:
_adjustedItemPropertyRatingOfEntity:withDefaultValue:
_adjustedItemDateOfEntity:withDefaultValue:
_adjustedItemNonnullDateOfEntity:withDefaultValue:
_adjustedItemPropertyFilePathOfEntity:withDefaultValue:
_adjustedItemPropertyMovieInfoOfEntity:withDefaultValue:
_adjustedItemPropertyEpisodeNumberOfEntity:withDefaultValue:
_adjustedItemPropertyChapterArtworkTimesOfEntity:withDefaultValue:
_adjustedItemPropertySeasonNumberOfEntity:withDefaultValue:
_adjustedItemPropertySeasonNameOfEntity:withDefaultValue:
_adjustedItemPropertyChaptersOfEntity:withDefaultValue:
_adjustedItemPropertyContentRatingOfEntity:withDefaultValue:
_adjustedItemPropertyEQPresetOfEntity:withDefaultValue:
_adjustedItemPropertyAssetURLOfEntity:withDefaultValue:
_adjustedItemPropertyVerifiedIntegrityOfEntity:withDefaultValue:
adjustedValueForMPProperty:ofEntity:withDefaultValue:
_updateArtworkDataSourceMediaLibraryUniqueIdentifier
_coalesceEvents
_postEvents
_dataProviderSupportsEntityChangeTracking
_libraryContentsDidChange:
_libraryPathDidChange:
_libraryEntitiesAddedOrRemoved:
_dynamicPropertiesDidChange:
_invisiblePropertiesDidChange:
_displayValuesDidChange:
_syncGenerationDidChange:
_libraryUIDDidChange:
_libraryCloudLibraryAvailabilityDidChange:
_loadProperties:ofEntityWithIdentifier:ML3EntityClass:completionBlock:
_loadValueForAggregateFunction:entityClass:property:query:completionBlock:
_removeEntitiesWithIdentifiers:count:entityClass:
deleteFromLibrary:deletionType:persistentIDs:count:
unlinkRedownloadableAssetsFromLibrary:persistentIDs:
valueForAggregateFunction:onEntitiesForProperty:
getValues:forProperties:count:
newWithPersistentID:inLibrary:
uniqueIdentifierForLibrary:
sortUsingSelector:
_sortByChapterIndex:
urlTitlePropertyOfChapterAtIndex:
urlPropertyOfChapterAtIndex:
titlePropertyOfChapterAtIndex:
durationInMSOfGroupAtIndex:groupingProperty:
timeLocationInMSOfChapterAtIndex:
chapterIndexForGroupIndex:groupingProperty:
countOfGroupsForProperty:
countOfChapters
chapterTOC
localizedStringWithFormat:
hasPrefix:
contentsOfDirectoryAtPath:error:
rangeOfString:
stringByStandardizingPath
dateWithTimeIntervalSinceReferenceDate:
processName
processInfo
setLibraryPublicContainerFilterPredicates:
setLibraryPublicEntityFilterPredicates:
setLibraryContainerFilterPredicates:
setLibraryEntityFilterPredicates:
clearLocationFromLibrary:persistentIDs:disableKeepLocal:
populateLocationPropertiesWithPath:protectionType:completionBlock:
populateLocationPropertiesWithPath:protectionType:
enumeratePersistentIDsAfterRevision:revisionTrackingCode:maximumRevisionType:forMediaTypes:inUsersLibrary:usingBlock:
revisionTrackingCode
libraryUID
preferredSubtitleTracks
preferredAudioTracks
moveTrackFromIndex:toIndex:
setTracksWithPersistentIDs:notify:
countOfEntities
containerQueryWithContainer:
removeFirstTrack
removeAllTracks
removeTracksAtIndexes:notify:
appendTracksWithPersistentIDs:notify:
removeFromMyLibrary:deletionType:persistentIDs:count:
newWithDictionary:inLibrary:
currentDevicePhotosMemoriesPlaylist
currentDevicePlaybackHistoryPlaylist
performDatabaseTransactionWithBlock:
setValues:forProperties:usingConnection:
predicateWithProperty:equalToInteger:
containerQueryWithContainer:predicate:
predicateWithProperty:value:comparison:
setValues:forProperties:forEntityPersistentIDs:inLibrary:usingConnection:
queryWithLibrary:predicate:orderingTerms:usingSections:
trackForeignPersistentID
_unadjustedValueForMPProperty:withDefaultValue:
timeIntervalSince1970
updateLovedPlaylistByRemovingTrackWithPersistentID:inLibrary:
updateLovedPlaylistByAddingTrackWithPersistentID:inLibrary:
databaseConnectionAllowingWrites:withBlock:
enumeratePersistentIDsAndProperties:ordered:cancelBlock:usingBlock:
getObjects:range:
recordPlayEventForContainerPersistentID:
performImport:fromSource:withProgressBlock:completionHandler:
queryWithLibrary:predicate:options:
sharedMediaLibraryService
setPendingMatch:
setPlaylistsAreLibraryOwnedContent:
setTracksAreLibraryOwnedContent:
initWithLibraryPath:trackData:playlistData:
playlistsData
trackData
initWithLookupItems:
itemForIdentifier:
isWatch
initWithPersistentID:inLibrary:
hasEntities
queryWithLibrary:predicate:
trackWithPersistentID:visibleInLibrary:
int64ValueForFirstRowAndColumn
executeQuery:
fileModificationDate
attributesOfItemAtPath:error:
_databaseFilePaths
_unadjustedValueForItemPropertyVolumeNormalizationWithDefaultValue:
_unadjustedValueForItemPropertyVolumeAdjustmentWithDefaultValue:
_unadjustedValueForItemPropertyRatingWithDefaultValue:
_unadjustedValueForItemTimeWithDefaultValue:
_unadjustedValueForItemDateWithDefaultValue:
allLibraries
sectionIndexTitleIndexForSectionIndex:
enumerateSectionHeadersUsingBlock:
T^v,R,N,V_externalDevice
connected
TB,R,N,GisConnected
connecting
TB,R,N,GisConnecting
invalidated
TB,R,N,GisInvalidated
_invalidated
_pendingConnectionHandlers
_externalDevice
initWithExternalDevice:
isConnected
isConnecting
connectWithCompletion:
connectWithOptions:completion:
connectWithUserInfo:completion:
connectWithOptions:userInfo:completion:
isInvalidated
sendCustomData:
sendMediaRemoteCommand:withOptions:completionHandler:
_connectionStateDidChange:error:
_externalDeviceConnectionStateDidChangeNotification:
externalDevice
connectWithOptions:userInfo:
initWithString:
orderingTermWithProperty:
allItemsQueryWithLibrary:predicate:orderingTerms:usingSections:
setLimit:
unrestrictedAllItemsQueryWithlibrary:predicate:orderingTerms:
queryWithLibrary:predicate:orderingTerms:
aggregateQueryWithUnitQuery:foreignPersistentIDProperty:
ML3ItemsQueryInLibrary:
ML3CollectionsQueryInLibrary:
orderingTermWithProperty:direction:
albumsDefaultOrderingTerms
albumsByAlbumArtistDefaultOrderingTerms
artistsDefaultOrderingTerms
composersDefaultOrderingTerms
genresDefaultOrderingTerms
podcastsDefaultOrderingTerms
TVShowEpisodesDefaultOrderingTerms
podcastsEpisodesDefaultOrderingTerms
albumAllArtistsDefaultOrderingTerms
defaultOrderingTerms
ML3OrderingTermsForMPOrderingProperties:directionalityMapping:entityClass:
ML3ItemsQueryInLibrary:orderingTerms:nameBlankProperty:
predicateWithProperty:
ML3OrderingTermsForGroupingType:
containerQueryWithContainer:predicate:orderingTerms:
T@"MPModelStaticResponse",&,N,V_staticResponse
_staticResponse
staticResponse
setStaticResponse:
T@"MPMediaLibraryAlbumAppData",&,N,V_albumAppData
_albumAppData
albumAppData
setAlbumAppData:
initWithResponseSinfDictionary:
initWithiTunesCloudStoreFileAssetFairPlayInfo:
responseSinfDictionary
dpInfoData
pinfData
sinfData
sinf2Data
purchaseBundleSinfDictionary
predicateWithProperties:searchString:
predicateWithConcatenatedProperties:searchString:
_ML3PredicateForML3EntityProperty:
predicateWithPredicate:
predicateWithProperty:value:comparison:caseInsensitive:
ML3PredicateForTrack
ML3PredicateForContainer
_ML3PredicateForEntityClass:
_ML3PredicateForEntityTypeSelector:
T@"MPMediaLibrary",R,N
T@"MIPMultiverseIdentifier",R,N,V_multiverseIdentifier
_multiverseIdentifier
objectForKeyedSubscript:
T@"NSArray",R,C,N,V_sections
TB,N,V_hasUnknownSection
_sectionIndexTitles
_hasUnknownSection
setSectionIndexTitles:
sections
hasUnknownSection
setHasUnknownSection:
addSectionWithHeaderTitle:sectionIndexTitleIndex:count:
T@"<MPVolumeControllerDelegate>",W,N,V_delegate
volumeControlAvailable
TB,R,N,GisVolumeControlAvailable
TI,R,N,V_volumeCapabilities
TB,N,GisMuted
T@"<MPVolumeControllerDataSource>",&,N,V_dataSource
_volumeChangeCoalescingCount
_volumeCapabilities
volumeControllerDataSource:didChangeVolume:
volumeControllerDataSource:didChangeMuted:
volumeControllerDataSource:didChangeVolumeWarning:
volumeControllerDataSource:didChangeVolumeLabel:
volumeControllerDataSource:didChangeEUVolumeLimit:
volumeControllerDataSource:didChangeEUVolumeLimitEnforced:
volumeControllerDataSource:didChangeVolumeAudioCategory:
volumeControllerDataSource:didChangeVolumeControlAvailability:
volumeControllerDataSource:didChangeVolumeCapabilities:
isVolumeControlAvailable
volumeValue
setVolumeValue:
isMuted
setMuted:
updateVolumeValue
adjustVolumeValue:
getVolumeValueWithCompletion:
setVolume:withNoticationDelay:
beginIncreasingRelativeVolume
endIncreasingRelativeVolume
beginDecreasingRelativeVolume
endDecreasingRelativeVolume
volumeWarningEnabled
volumeWarningState
EUVolumeLimit
updateVolumeWarningState
_updateVolumeControlAvailability
setVolumeAudioCategory:
volumeCapabilities
descriptionForWarningState:
T@,&,N,V_value
T@?,C,N,V_valueLoader
Tq,N,V_chapterType
Td,N,V_playbackTime
Td,N,V_playbackDuration
TQ,N,V_indexInChaptersWithSameType
TQ,N,V_indexInChaptersWithAnyType
T@"MPMediaLibraryArtworkRequest",&,N,V_artworkRequest
T@"MPMediaLibraryArtworkDataSource",W,N,V_artworkDataSource
_chapterType
_indexInChaptersWithAnyType
_indexInChaptersWithSameType
_playbackDuration
_playbackTime
_valueLoader
_artworkRequest
indexInChaptersWithAnyType
setIndexInChaptersWithAnyType:
indexInChaptersWithSameType
setIndexInChaptersWithSameType:
chapterType
setChapterType:
setPlaybackDuration:
playbackTime
setPlaybackTime:
valueLoader
setValueLoader:
artworkRequest
setArtworkRequest:
setArtworkDataSource:
decodeObjectForKey:
decodeDoubleForKey:
encodeDouble:forKey:
T@"MPSectionedCollection",&,N,V_unpersonalizedContentDescriptors
T@"NSDictionary",C,N,V_itemIndexPathToOverridePropertySet
T@"MPMediaLibraryEntityTranslationContext",&,N,V_translatingContext
T@"NSMapTable",C,N,V_relativeModelClassToMappingResponse
T@"NSMutableDictionary",&,N,V_sectionToLibraryAddedOverride
_accessSerialQueue
_entityCaches
_unpersonalizedContentDescriptors
_itemIndexPathToOverridePropertySet
_translatingContext
_relativeModelClassToMappingResponse
_sectionToLibraryAddedOverride
_libraryObjectWithRelativeModelClass:identifierSet:propertySet:
_entityCacheForEntityClass:propertiesToFetch:
unpersonalizedContentDescriptors
setUnpersonalizedContentDescriptors:
itemIndexPathToOverridePropertySet
setItemIndexPathToOverridePropertySet:
translatingContext
setTranslatingContext:
relativeModelClassToMappingResponse
setRelativeModelClassToMappingResponse:
sectionToLibraryAddedOverride
setSectionToLibraryAddedOverride:
_completePersonalizedObjectWithLibraryObject:personalizationProperties:overrideLibraryAddedStatus:
_lightweightPersonalizedObjectWithUnpersonalizedObject:libraryObject:personalizationProperties:overrideLibraryAddedStatus:
_requiredLightweightPersonalizationPropertiesForModelClass:requestedProperties:
_lightweightPersonalizedPlaybackPositionWithUnpersonalizedPlaybackPosition:libraryPlaybackPosition:personalizationProperties:
_lightweightPersonalizedPlaybackPositionWithUnpersonalizedPlaybackPosition:identifiers:personalizationProperties:
_lightweightPersonalizedLyricsWithUnpersonalizedLyrics:libraryLyrics:identifiers:personalizationProperties:
_lightweightPersonalizedStoreAssetWithUnpersonalizedAsset:libraryAsset:personalizationProperties:
setHasLibraryLyrics:
setStoreUbiquitousIdentifier:
TB,N,V_mirroringOnly
_mirroringOnly
initWithType:
initWithType:includeMirroring:
mirroringOnly
setMirroringOnly:
TB,R,N,V_prefersStoreContentInfo
rentalIdentifier
T@"NSNumber",R,N,G_rentalIdentifier,V_rentalIdentifier
T@"NSDictionary",R,N,V_hlsOfflinePlaybackKeys
offlineHLS
TB,R,N,GisOfflineHLS,V_offlineHLS
T@"NSString",R,C,N,V_hlsPlaylistURLString
TB,R,N,V_allowsInitiatingPlayWhileDownload
T@"NSString",R,C,N,V_albumArtistName
Tq,R,N,V_albumStoreAdamID
T@"NSString",R,C,N,V_albumTitle
T@"NSString",R,C,N,V_artistName
Tq,R,N,V_artistStoreAdamID
T@"NSString",R,N,V_buyParameters
T@"NSString",R,C,N,V_composerName
T@"NSString",R,C,N,V_contentTitle
TQ,R,N,V_contentType
Tq,R,N,V_downloadIdentifier
Tq,R,N,V_endpointType
Td,R,N,V_expectedDuration
T@"NSString",R,C,N,V_genreTitle
TB,R,N,V_isExplicitTrack
T@"NSURL",R,C,N,V_localNetworkContentURL
T@"MPMediaItem",R,N,V_mediaItem
Tq,R,N,V_mediaLibraryPersistentID
T@"NSURL",R,C,N,V_protectedContentSupportStorageURL
TB,R,N,V_requiresPlayWhileDownload
TB,R,N,V_showComposer
TB,R,N,V_shouldReportPlayEventsToStore
Td,R,N,V_bookmarkTime
TB,R,N,V_shouldRememberBookmarkTime
T@"NSString",R,C,N,V_storeUbiquitousIdentifier
TQ,R,N,V_storeAccountID
Tq,R,N,V_storeAdamID
TQ,R,N,V_storeSagaID
subscriptionRequired
TB,R,N,GisSubscriptionRequired,V_subscriptionRequired
Tf,R,N,V_volumeNormalization
T@"NSNumber",R,C,N,V_iTunesStoreContentID
T@"NSNumber",R,C,N,V_iTunesStoreContentDSID
_allowsCellularNetworking
_allowsInitiatingPlayWhileDownload
_isExplicitTrack
_requiresPlayWhileDownload
_showComposer
_shouldReportPlayEventsToStore
_shouldRememberBookmarkTime
_subscriptionRequired
_prefersStoreContentInfo
_offlineHLS
_volumeNormalization
_albumArtistName
_albumStoreAdamID
_albumTitle
_artistName
_artistStoreAdamID
_buyParameters
_composerName
_contentTitle
_contentType
_downloadIdentifier
_endpointType
_expectedDuration
_genreTitle
_localNetworkContentURL
_mediaLibraryPersistentID
_protectedContentSupportStorageURL
_bookmarkTime
_storeUbiquitousIdentifier
_storeAdamID
_iTunesStoreContentID
_iTunesStoreContentDSID
_rentalIdentifier
_hlsOfflinePlaybackKeys
_hlsPlaylistURLString
allowsAssetCaching
allowsCellularNetworking
additionalHTTPHeaderFields
likedState:
iTunesStoreContentDownloadParameters
iTunesStoreContentPurchasedMediaKind
iTunesStoreContentType
iTunesStoreContentUserAgent
getNetworkConstraintsForDownloadKind:withCompletionHandler:
loadMediaItemWithCompletionHandler:
setLikedState:withCompletionHandler:
setLikedState:forUserIdentity:withCompletionHandler:
streamingPlaybackPurchaseBundleDestinationFilePathForAssetFilePath:
_calculateAllowsCellularNetworking
_setNeedsAllowsCellularNetworkingUpdate
_requiresPendingItemDownload
_contentTasteControllerDidChangeNotification:
_musicCellularNetworkingAllowedDidChangeNotification:
_storeCellularNetworkingAllowedDidChangeNotification:
genreTitle
requiresPlayWhileDownload
_shouldRespectMusicCellularDataSetting
setShouldAllowDataForCellularNetworkTypes:
mediaTypeNetworkConstraintsFromURLBag:
downloadForMediaPlaybackItemMetadata:
_getEffectiveStoreDownloadAttributes:forPlaybackItemMetadata:attributes:
canCreateStoreDownloadForPlaybackItemMetadata:type:attributes:
storeDownloadForPlaybackItemMetadata:type:attributes:
T@"NSString",R,C,N,V_keyPath
initWithObject:keyPath:options:handler:
T@"MPModelLibrarySearchRequest",C,N,V_request
_runningQuery
formattedPrice
offerType
price
actionTextForType:
isEqualToDictionary:
TB,N,V_canBecomeActive
T@"NSMutableSet",&,N,V_playerSet
T@"NSSet",R,N,V_mxSessionIDs
pictureInPictureEnabled
TB,N,GisPictureInPictureEnabled,V_pictureInPictureEnabled
T@"AVAudioSession",R,N
T@"NSString",R,N,V_routingContextID
T@"MRPlayerPath",R,N,V_playerPath
T@"<MPNowPlayingSessionDelegate>",W,N,V_delegate
T@"MPNowPlayingInfoCenter",R,N,V_nowPlayingInfoCenter
T@"MPRemoteCommandCenter",R,N,V_remoteCommandCenter
active
TB,R,N,GisActive,V_active
_audioSession
_canBecomeActive
_active
_pictureInPictureEnabled
_nowPlayingInfoCenter
_remoteCommandCenter
_playerSet
_mxSessionIDs
_routingContextID
_playerPath
initWithPlayerPath:routingContextID:
initWithPlayers:
players
mediaExperienceIDs
addPlayer:
removePlayer:
updateMediaExperienceIDs
mxSessionIDKeyPath
updateAudioSession:
audioSessionID
audioSession
setCanBecomeActive:
becomeActiveIfPossibleWithCompletion:
setPictureInPictureEnabled:
activePlayerDidChangeNotification:
playerPictureInPictureEnabledDidChangeNotification:
nowPlayingInfoCenter
remoteCommandCenter
canBecomeActive
isActive
playerSet
setPlayerSet:
mxSessionIDs
isPictureInPictureEnabled
routingContextID
playerPath
nowPlayingSessionDidChangeActive:
nowPlayingSessionDidChangeCanBecomeActive:
opaqueSessionID
nowPlayingSession:audioSessionDidChange:
mxSessionID
setWithCapacity:
initWithOrigin:client:player:
localClient
localOrigin
initWithIdentifier:displayName:
nowPlayingSessionForPlayerPath:
strongToWeakObjectsMapTable
localResolvedPlayerPathFromPlayerPath:
nowPlayingSessionForPlayerID:
defaultPlayer
T#,R,N,V_MPModelClass
_propertiesToTranslators
_relationshipsToTranslators
_sourcePreprocessorBlock
_unsupportedKeys
_optionalHooks
_MPModelClass
initWithMPModelClass:
classForRelationshipKey:
prepareSource:context:properties:
setSourcePreprocessorBlock:
mapUnsupportedPropertyKey:
mapUnsupportedRelationshipKey:
_objectForPropertySet:source:context:
_objectForRelationshipKey:propertySet:source:context:
_valueForPropertyKey:source:context:
MPModelClass
propertyTranslatorForPropertyKey:
translatorForMPModelClass:
relatedMPModelClass
prepareSource:context:
relationshipTranslatorForRelationshipKey:
createTranslatorForMPModelClass:
T#,R,N,V_relatedMPModelClass
_relatedMPModelClass
T#,R,N
initWithRelatedMPModelClass:
mapIdentifiersToPropertyTranslator:
mapPropertyKey:toPropertyTranslator:
mapRelationshipKey:ofModelClass:toRelationshipTranslator:
Tq,R,N,V_routeType
Tq,R,N,V_routeSubtype
T@"NSString",R,N,V_uid
T@"NSString",R,N,V_modelID
_routeType
_routeSubtype
_uid
_modelID
initWithDeviceType:deviceSubtype:uid:
initWithDeviceType:deviceSubtype:uid:modelID:
routeType
routeSubtype
modelID
T^v,R,N,G_externalDevice,V_externalDevice
picked
TB,N,GisPicked
routingToWirelessDevice
TB,R,N,GisRoutingToWirelessDevice
Tq,R,N,V_originalRouteSubtype
T@"MPAVRouteConnection",R,N,V_connection
T@"NSString",R,N,V_routeUID
T@"NSString",R,N,V_productIdentifier
T@"NSString",R,N,V_groupUID
T@"NSString",R,N,V_designatedGroupLeaderRouteUID
Tq,R,N,V_pickableRouteType
T@"NSArray",R,N,V_clusterComposition
TB,R,N,V_canAccessRemoteAssets
TB,R,N,V_canPlayEncryptedProgressiveDownloadAssets
TB,R,N,V_canFetchMediaDataFromSender
TB,R,N,V_presentsOptimizedUserInterfaceWhenPlayingFetchedAudioOnlyAssets
proxyGroupPlayer
TB,R,N,GisProxyGroupPlayer
splitRoute
TB,R,N,GisSplitRoute
splitterCapable
TB,R,N,GisSplitterCapable
T@"MPAVBatteryLevel",R,N,V_batteryLevel
T@"NSArray",R,N,V_auxiliaryDevices
T@"NSString",R,N,V_playingPairedDeviceName
pickedOnPairedDevice
TB,R,N,GisPickedOnPairedDevice,V_pickedOnPairedDevice
playingOnPairedDevice
TB,R,N,GisPlayingOnPairedDevice,V_playingOnPairedDevice
airPlayingToDevice
TB,R,N,GisAirPlayingToDevice
TB,R,N,V_requiresPassword
displayAsPicked
TB,R,N,GisDisplayedAsPicked
airpodsRoute
TB,R,N,GisAirpodsRoute
appleTVRoute
TB,R,N,GisAppleTVRoute
beatsSoloRoute
TB,R,N,GisBeatsSoloRoute
beatsStudioRoute
TB,R,N,GisBeatsStudioRoute
beatsXRoute
TB,R,N,GisBeatsXRoute
beatsLegacyRoute
TB,R,N,GisBeatsLegacyRoute
carplayRoute
TB,R,N,GisCarplayRoute,V_carplayRoute
deviceSpeakerRoute
TB,R,N,GisDeviceSpeakerRoute
hearingDeviceRoute
TB,R,N,GisHearingDeviceRoute
homePodRoute
TB,R,N,GisHomePodRoute,V_homePodRoute
powerbeatsRoute
TB,R,N,GisPowerbeatsRoute
smartAudio
TB,R,N,GisSmartAudio
w1Route
TB,R,N,GisW1Route
airPlayRoute
TB,R,N,GisAirPlayRoute
w2Route
TB,R,N,GisW2Route
h1Route
TB,R,N,GisH1Route
shareableRoute
TB,R,N,GisShareableRoute
headphonesRoute
TB,R,N,GisHeadphonesRoute
stereoPair
TB,R,N,GisStereoPair
tvRoute
TB,R,N,GisTVRoute
tvStickRoute
TB,R,N,GisTVStickRoute
setTopBoxRoute
TB,R,N,GisSetTopBoxRoute
phoneRoute
TB,R,N,GisPhoneRoute
macRoute
TB,R,N,GisMacRoute
b444Route
TB,R,N,GisB444Route
b298Route
TB,R,N,GisB298Route
b419Route
TB,R,N,GisB419Route
b364Route
TB,R,N,GisB364Route
b372Route
TB,R,N,GisB372Route
b515Route
TB,R,N,GisB515Route
b507Route
TB,R,N,GisB507Route
b520Route
TB,R,N,GisB520Route,V_b520Route
homeTheaterRoute
TB,R,N,GisHomeTheaterRoute,V_homeTheaterRoute
homeTheaterB520Route
TB,R,N,GisHomeTheaterB520Route
lowLatencyRoute
TB,R,N,GisLowLatencyRoute
lowFidelityRoute
TB,R,N,GisLowFidelityRoute,V_lowFidelityRoute
clusterRoute
TB,R,N,GisClusterRoute,V_clusterRoute
Tq,R,N,V_clusterType
_picked
_avRouteDescription
_wirelessDisplayRoute
_displayRouteType
_batteryLevel
_canAccessRemoteAssets
_canPlayEncryptedProgressiveDownloadAssets
_canFetchMediaDataFromSender
_presentsOptimizedUserInterfaceWhenPlayingFetchedAudioOnlyAssets
_pickedOnPairedDevice
_playingOnPairedDevice
_requiresPassword
_carplayRoute
_homePodRoute
_b520Route
_homeTheaterRoute
_lowFidelityRoute
_clusterRoute
_routeUID
_productIdentifier
_groupUID
_designatedGroupLeaderRouteUID
_pickableRouteType
_clusterComposition
_auxiliaryDevices
_playingPairedDeviceName
_clusterType
_originalRouteSubtype
routeName
designatedGroupLeaderName
routeNames
setRouteName:
avRouteDescription
setAVRouteDescription:
isAirPlayingToDevice
groupLeaderAirplayIdentifier
isAppleTVRoute
isDeviceRoute
isProxyGroupPlayer
supportsGrouping
supportsAirPlayGrouping
supportsRemoteControl
isSplitterCapable
isSplitRoute
numberOfOutputDevices
isPicked
setPicked:
isRoutingToWirelessDevice
wirelessDisplayRoute
setWirelessDisplayRoute:
passwordType
isDisplayedAsPicked
displayRouteType
setDisplayRouteType:
isShareableRoute
isHeadphonesRoute
isAirpodsRoute
isB298Route
isB372Route
isB507Route
isPowerbeatsRoute
isBeatsSoloRoute
isBeatsStudioRoute
isBeatsXRoute
isBeatsLegacyRoute
isDeviceSpeakerRoute
isHearingDeviceRoute
isSmartAudio
isStereoPair
isHomeTheaterB520Route
isTVRoute
isTVStickRoute
isSetTopBoxRoute
isPhoneRoute
isMacRoute
isW1Route
isAirPlayRoute
isH1Route
isW2Route
isB444Route
isB419Route
isB364Route
isB515Route
supportsHeadTrackedSpatialAudio
headTrackedSpatialAudioEnabled
isLowLatencyRoute
supportsWirelessDisplay
containsDeviceWithSubtype:
routeUID
productIdentifier
groupUID
designatedGroupLeaderRouteUID
pickableRouteType
clusterComposition
canAccessRemoteAssets
canPlayEncryptedProgressiveDownloadAssets
canFetchMediaDataFromSender
presentsOptimizedUserInterfaceWhenPlayingFetchedAudioOnlyAssets
batteryLevel
auxiliaryDevices
playingPairedDeviceName
isPickedOnPairedDevice
isPlayingOnPairedDevice
requiresPassword
isCarplayRoute
isHomePodRoute
isB520Route
isHomeTheaterRoute
isLowFidelityRoute
isClusterRoute
clusterType
originalRouteSubtype
filteredArrayUsingPredicate:
predicateWithBlock:
routeSubtypeForMRSubtype:withOverridesFromMRType:
routeSubtypeForMRSubtype:mrType:
clusterCompositionForOutputDevice:
clusterTypeForMRClusterType:
deviceType
deviceSubtype
_missingContentIdentifiersInRecommendationsArray:storeItemMetadataResults:
_produceResponseWithRecommendationsArray:storeItemMetadataResults:completion:
T@"NSMutableDictionary",&,N,V_sessions
T@"<MPNowPlayingSessionManagerDataSource>",W,N,V_dataSource
_sessions
getActiveNowPlayingSessionForDeviceUID:completion:
_sessionForPlayerPath:
_generateAudioSessionForRoutingContextUID:
sessions
setSessions:
setRoutingContextUID:error:
auxiliarySession
nowPlayingPlayerPathOnQueue:completion:
initWithDestination:
setClient:
initWithOutputDeviceUID:
playerIDForSessionManager:
nowPlayingSessionManager:destroySession:
isResolved
nowPlayingSessionManager:prepareForSession:
Tq,N,V_libraryAddedStatus
_storeIdentifierSetToLibraryIdentifierSet
_libraryAddedStatus
libraryIdentifierSetForIdentifierSet:
setLibraryIdentifierSet:forIdentifierSet:
libraryAddedStatus
setLibraryAddedStatus:
removePredicatesForProperty:
setFilterPredicate:forProperty:
containingPlaylist
setFilterPropertyPredicate:
_updatePredicateForProperty:withPropertyPredicate:
collectionByJoiningCollections
activeGeniusPlaylist
currentDevicePurchasesPlaylist
T@"MPMediaPlaylist",R,N
_didInitializeTimeoutIntervalAdditions
_errorReportingDisabled
_individualPendingNestedRequestOperation
_nestedRequestOperationsGroup
_nestedRequestsOperationQueue
_requestType
_sectionsToPendingNestedRequestOperations
_timeoutIntervalAdditions
adjustTimeoutInterval:
_produceCarPlayResponseWithParser:withNestedRequestsForEmptyBrickSectionsInOperationQueue:completion:
_produceRegularResponseWithParser:completion:
_produceResponseWithParser:results:changeDetails:completion:
isBrick
isMemberOfChartSet
T@"NSString",R,N,V_transformedType
T@"NSMutableDictionary",R,N,V_relationships
T@"NSString",C,N,V_identifier
T@"NSMutableDictionary",R,N,V_attributes
T@"NSMutableDictionary",R,N,V_meta
_attributes
_meta
_transformedType
_relationships
initWithType:transformedType:
transformedPayload
setIdentifier:
attributes
meta
transformedType
relationships
T@"NSString",C,N,V_personID
T@"<MPMediaKitEntityRelationshipPayloadProvider>",&,N,V_relationshipPayloadProvider
_personID
_relationshipPayloadProvider
setPersonID:
relationshipPayloadProvider
setRelationshipPayloadProvider:
T@"NSString",C,N,V_mediaKitType
T@?,R,N,V_payloadTransformBlock
_mediaKitType
_payloadTransformBlock
initWithRelatedMPModelClass:mediaKitType:payloadTransformBlock:
mediaKitType
setMediaKitType:
payloadTransformBlock
identifiersForPayload:context:
mapRelationshipKey:toModelClass:mediaKitType:
mapIdentifierCreationKeyPaths:transformBlock:
mapPropertyKey:toPayloadKeyPath:
mapPropertyKey:toPayloadKeyPaths:valueTransformer:
mapPropertyKey:toPayloadKeyPaths:valueTransformerFunction:
mapRelationshipKey:toModelClass:mediaKitType:payloadTransform:
mapRelationshipKey:toModelClass:mediaKitType:attributePayloadTransform:
objectForPropertySet:payload:context:
createGenericObjectTranslator
translatorForType:
clips
tagline
movieInfoDictionary
T@"NSDictionary",C,D,N
__tagline_KEY
__movieInfoDictionary_KEY
__clips_KEY
TB,D,N,GisBeats1
TB,D,N,GisLive
hasExplicitContent
stationEvents
stationGlyphBlock
allowsItemLiking
subtype
attributionLabel
providerName
TB,D,N,GisSubscriptionRequired
providerUniversalLink
providerBundleIdentifier
startingAirDate
endingAirDate
T@"NSString",C,N,V_playbackAuthorizationToken
T@"MPRadioStationEvent",R,N
providerID
Tq,R,D,N
_playbackAuthorizationToken
stationGlyph
currentStationEvent
upcomingStationEvent
setPlaybackAuthorizationToken:
containsDate:
initWithStartDate:endDate:
__beats1_KEY
__live_KEY
__name_KEY
__editorNotes_KEY
__shortEditorNotes_KEY
__hasExplicitContent_KEY
__stationEvents_KEY
__stationGlyphBlock_KEY
__allowsItemLiking_KEY
__type_KEY
__subtype_KEY
__attributionLabel_KEY
__providerName_KEY
__subscriptionRequired_KEY
__providerUniversalLink_KEY
__providerBundleIdentifier_KEY
__providerID_KEY
__startingAirDate_KEY
__endingAirDate_KEY
noArtPlaceholderImageForMediaType:
initWithObjects:forKeys:count:
propertyForMPMediaEntityProperty:
spotlightPropertyForMPMediaEntityProperty:
T@"MPModelPlaylistEntriesShareEligibilityRequest",C,N,V_request
T@"MPModelLibraryAddToPlaylistChangeRequest",C,N,V_request
_updateCloudLibraryForPlaylist:
_requestedPlaybackPositionProperties
setStopTime:
setShouldRememberBookmarkTime:
feedURL
shareURL
supportsSubscription
author
T@"MPModelPodcastAuthor",&,D,N
kindWithEpisodeKind:
__feedURL_KEY
__shareURL_KEY
__supportsSubscription_KEY
__author_KEY
T@"MPModelPodcastEpisodeKind",R,N,V_episodeKind
_episodeKind
episodeKind
_requestedRecordLabelProperties
setShortDescriptionText:
T@"MPModelObject",R,N,V_model
TB,N,V_hasBeenPlayed
_hasBeenPlayed
_model
initWithModel:
model
Td,N,V_maxHEICRequestPercentage
_totalImageRequestCount
_HEICImageRequestCount
_maxHEICRequestPercentage
_bestURLForCatalog:kind:size:
_bestSizeForImageSizeInfo:catalog:
maxHEICRequestPercentage
setMaxHEICRequestPercentage:
supportedSizes
maxSupportedSize
hasMaxSupportedSize
HLSVideoURLForAspectRatio:
CRABSVideoURLMatchingSize:
previewFrameArtworkInfoMatchingAspectRatio:
artworkURLWithSize:cropStyle:format:preferP3ColorSpace:
sizeInfo
supportedSizesForCRABSVideoForAspectRatio:
requestWithURL:cachePolicy:timeoutInterval:
ic_URLByAppendingQueryItems:
isLegacyStoreCacheBusterEnabled
standardDefaults
responseDictionary
responseArray
imageTraits
textGradient
colorWithCGColor:
copyColorWithKind:
T@"MPStoreArtworkDataSource",R,N
sharedStoreArtworkDataSource
T{_NSRange=QQ},N,V_range
TQ,N,V_sectionIndexTitleIndex
_sectionIndexTitleIndex
_range
range
setRange:
sectionIndexTitleIndex
setSectionIndexTitleIndex:
T@"NSData",C,N,V_seed
_seed
nextIntWithUpperBound:
initWithSeed:
setSeed:
seed
encodeBytes:length:forKey:
encodeInt:forKey:
decodeBytesForKey:returnedLength:
decodeIntForKey:
initWithBytesNoCopy:length:freeWhenDone:
Tq,R,N,V_lowestValue
Tq,R,N,V_highestValue
TQ,R,N,V_numberOfPossibleOutcomes
_source
_lowestValue
_highestValue
_numberOfPossibleOutcomes
initWithRandomSource:lowestValue:highestValue:
lowestValue
highestValue
numberOfPossibleOutcomes
T{CGSize=dd},N,V_scaledFittingSize
TB,N,V_usesExactFittingSizeAsDestinationSize
T@"UIImage",R,N,V_resizedImage
T@"NSError",R,N,V_error
T@"NSURL",R,N,V_destinationURL
T@"NSObject<OS_dispatch_group>",R,N,V_operationGroup
_usesExactFittingSizeAsDestinationSize
_resizedImage
_destinationURL
_operationGroup
initWithImage:scaledFittingSize:
initWithImage:scaledFittingSize:destinationURL:
initWithImage:scaledFittingSize:useExactFittingSizeAsDestinationSize:destinationURL:
main
_resizedScaledSizeForScaledImageSize:scaledFittingSize:
resizedImage
destinationURL
operationGroup
setScaledFittingSize:
usesExactFittingSizeAsDestinationSize
setUsesExactFittingSizeAsDestinationSize:
devicePreferredImageFormat
URLByDeletingLastPathComponent
imageWithCGImage:
backgroundColor
T@"UIColor",&,D,N
primaryTextColor
secondaryTextColor
backgroundColorLight
TB,D,N,GisBackgroundColorLight
primaryTextColorLight
TB,D,N,GisPrimaryTextColorLight
secondaryTextColorLight
TB,D,N,GisSecondaryTextColorLight
setBackgroundColor:
setBackgroundColorLight:
setPrimaryTextColor:
setPrimaryTextColorLight:
setSecondaryTextColor:
setSecondaryTextColorLight:
_copyWithClass:
T@"UIColor",&,N,V_backgroundColor
T@"UIColor",&,N,V_primaryTextColor
T@"UIColor",&,N,V_secondaryTextColor
TB,R,N,GisBackgroundColorLight,V_backgroundColorLight
TB,R,N,GisPrimaryTextColorLight,V_primaryTextColorLight
TB,R,N,GisSecondaryTextColorLight,V_secondaryTextColorLight
_backgroundColor
_backgroundColorLight
_primaryTextColor
_primaryTextColorLight
_secondaryTextColor
_secondaryTextColorLight
isBackgroundColorLight
isPrimaryTextColorLight
isSecondaryTextColorLight
_debugDescriptionWithEnumerator:lengths:
debugDescriptionForItem:inSection:
stringByPaddingToLength:withString:startingAtIndex:
stringByLeftPaddingToLength:withString:startingAtIndex:
debugDescriptionForSection:
__itemType_KEY
__detailedItemType_KEY
__artistUploadedContentType_KEY
__curator_KEY
__mediaClip_KEY
__movie_KEY
__socialPerson_KEY
__song_KEY
__episode_KEY
__showCreator_KEY
__recordLabel_KEY
requiredStoreLibraryPersonalizationProperties
curator
T@"MPModelCurator",&,D,N
mediaClip
T@"MPModelMediaClip",&,D,N
movie
T@"MPModelMovie",&,D,N
socialPerson
T@"MPModelSocialPerson",&,D,N
T@"MPModelSong",&,D,N
T@"MPModelTVEpisode",&,D,N
showCreator
T@"MPModelTVShowCreator",&,D,N
recordLabel
T@"MPModelRecordLabel",&,D,N
detailedItemType
innerObject
personalizationScopedPropertiesForProperties:
relativeModelObjectForStoreLibraryPersonalization
objectWithStoreLibraryPersonalizationRelativeModelObject:
setFormatOptions:
T@"NSString",C,N,V_roomID
_roomID
roomID
setRoomID:
T@"MPModelMovie",&,N,V_movie
_movie
setMovie:
_requestedEpisodeProperties
setCreator:
setNumber:
setExplicitRating:
setMusicShow:
_shouldExcludePurchaseHistoryContent
_initWithLibrary:
shouldExcludePurchaseHistoryContent
_cloudLibraryAvailabilityDidChange:
_updateFilters
systemFiltersPerLibrary
filtersForLibrary:
T@"NSString",&,N,V_searchString
T@"NSMutableArray",&,N,V_properties
hasSearchString
clearProperties
addProperties:
propertiesCount
propertiesAtIndex:
writeString:forTag:
_currentRevision
_initInstanceVariableOnce
_seedCloudPlaylistWithTrack:container:completionBlock:
enumeratePersistentIDsAfterRevision:revisionTrackingCode:maximumRevisionType:usingBlock:
dictionaryWithSharedKeySet:
sharedKeySetForKeys:
_localizedGeniusErrorForError:geniusEnabled:
_localizedCloudGeniusErrorForError:
sharedMonitor
geniusTracksForSeedTrack:error:
tracksFromClusterForCount:error:
playlistControllerWithSeedTracks:error:
populateContainer:withSeedTrack:completionBlock:
hasGeniusDataAvailable
hasGeniusFeatureEnabled
hasWAPICapability
hasWiFiCapability
hasCellularDataCapability
MPMediaLibraryDataProviderSystemML3CoercedString
TB,N,V_shouldUsePlaylistEntry
_baseContentItemIDToOccurrenceCount
_tvEpisodeBuilder
_tvSeasonBuilder
_tvShowBuilder
_shouldUsePlaylistEntry
setPreventStoreItemMetadataCaching:
_modelObjectWithUniqueContentItemIDForModelObject:
shouldUsePlaylistEntry
setShouldUsePlaylistEntry:
T@"NSArray",R,N,V_sourceKeyPaths
T^?,R,N,V_valueTransformFunction
_sourceKeyPaths
_valueTransformFunction
sourceKeyPaths
valueTransformFunction
translatorForKeyPaths:valueTransformBlock:
translatorForKeyPaths:valueTransformFunction:
TB,N,GisiTunesStoreStream,V_iTunesStoreStream
_iTunesStoreStream
initWithiTunesCloudStoreRadioStreamAssetInfo:
flavor
streamProtocol
streamURL
isITunesStoreStream
MPStoreRadioStreamFlavorFromICStoreRadioStreamFlavor:
MPStoreRadioStreamProtocolFromICStoreRadioStreamProtocol:
setITunesStoreStream:
T@"NSNumber",R,N,V_leftPercentage
T@"NSNumber",R,N,V_rightPercentage
T@"NSNumber",R,N,V_singlePercentage
T@"NSNumber",R,N,V_casePercentage
_leftPercentage
_rightPercentage
_singlePercentage
_casePercentage
initWithRouteDescription:
initWithOutputDevice:
leftPercentage
rightPercentage
singlePercentage
casePercentage
initWithFloat:
T@"MPStoreLibraryPersonalizationRequest",C,N,V_request
setPersistentIDs:
T@"MPMediaLibraryView",N,V_libraryView
T{vector<long long, std::allocator<long long>>=^q^q{__compressed_pair<long long *, std::allocator<long long>>=^q}},N,V_persistentIDs
personalizedResponseForContentDescriptor:requestedProperties:
T@"MPPlaybackEQSetting",R,N
privateListeningEnabled
T@"NSNumber",C,N,GisPrivateListeningEnabled
devicePrivateListeningEnabled
T@"NSNumber",R,C,N,GisDevicePrivateListeningEnabled
Tq,R,N,V_preferredVideoDownloadResolution
_iPodUserDefaults
_videoUserDefaults
_mediaPlaybackCoreUserDefaults
_airplayUserDefaults
_accountsQueue
_notifyTokens
_preferredVideoDownloadResolution
autoPlayEnabledForUserIdentity:
setAutoPlayEnabled:forUserIdentity:
musicEQSetting
musicRepeatType
setMusicRepeatType:
musicShuffleType
setMusicShuffleType:
soundCheckEnabled
isPrivateListeningEnabled
setPrivateListeningEnabled:
isDevicePrivateListeningEnabled
privateListeningEnabledForHomeUserIdentifier:error:
setPrivateListeningEnabled:forHomeUserIdentifier:error:
preferredMusicLowBandwidthResolution
setPreferredMusicLowBandwidthResolution:
preferredMusicHighBandwidthResolution
setPreferredMusicHighBandwidthResolution:
preferredMusicDownloadResolution
setPreferredMusicDownloadResolution:
spatialAudioPreference
setSpatialAudioPreference:
prefersSpatialAudio
setPrefersSpatialAudio:
prefersSpatialDownloads
setPrefersSpatialDownloads:
showLosslessAudio
setShowLosslessAudio:
preferredVideoLowBandwidthResolution
preferredVideoHighBandwidthResolution
allowsHighQualityMusicStreamingOnCellular
disableAssetCaching
progressiveDownloadAssetRatio
disableAudioAnalysis
disableMiniSINF
disablePeriodicStateRestore
disableQHO
forceMusicResolution
forcedMusicResolution
forceMusicStreaming
forceLibrarySupplementalContexts
includeContentItemDebugFields
showDebugUI
maximumQueueHandOffSize
speakerRouteEnabled
assetURLExpirationDuration
playbackAuthorizationTokenHalfLifeDuration
activationDelay
resetAllInternalSettings
_migrateUserDefaults
_loadAccountProperties
_accountStoreChangedNotification:
preferredVideoDownloadResolution
updatePropertiesForUserIdentity:usingBlock:
getPropertiesForUserIdentity:error:
doubleForKey:
integerForKey:
floatForKey:
stringForKey:
setBool:forKey:
saveVerifiedAccount:error:
ic_setPrivateListeningEnabledForHomeUsers:
ic_privateListeningEnabledForHomeUsers
ic_storeAccountForHomeUserIdentifier:error:
ic_sharedAccountStore
settingWithName:
Tq,R,N,V_preset
Ti,R,N
_preset
_initWithPreset:
localizedName
avPreset
preset
allSettings
settingWithPreset:
ams_saveAccount:
ams_setAccountFlagValue:forAccountFlag:
ic_storeAccountForStoreAccountID:error:
ams_accountFlagValueForAccountFlag:
standardUserDefaults
registerDefaults:
initWithSuiteName:
T@"MPPlaybackUserDefaults",R,N
_scenes
_displays
_categories
_needsUpdate
addVolumeDisplay:
removeVolumeDisplay:
setNeedsUpdate
mainContext
registerView:inContext:
unregisterView:inContext:
_addCategory:
_updateVisibility
_updateVisibilityForVolumeDisplays:inWindowScene:
setSystemVolumeHUDEnabled:forAudioCategory:
_appAdoptsUISceneLifecycle
_setSystemVolumeHUDEnabled:forAudioCategory:
keyEnumerator
weakObjectsHashTable
T@"MPVolumeHUDController",R,N
sharedInstance
openToPlayQueueDescriptor:
_shouldAccessCache
onSystemServer:
getUserQueueModificationsDisabledWithReply:
initWithMachServiceName:options:
openURL:options:completionHandler:
_allowedFCKinds
_produceResponseWithParser:results:error:
catalogURLWithStoreBagDictionary:
dialogDictionary
fileAssetInfoList
hlsAssetInfo
T@"MPStoreHLSAssetInfo",&,D,N
liveRadioStream
TB,D,N,GisLiveRadioStream
radioStreamAssetInfoList
suzeLeaseID
T@,&,D,N
onlineSubscriptionKeysRequired
setDialogDictionary:
setFileAssetInfoList:
setHlsAssetInfo:
setLiveRadioStream:
setRadioStreamAssetInfoList:
setSuzeLeaseID:
setSubscriptionRequired:
setOnlineSubscriptionKeysRequired:
_copyWithPlaybackResponseClass:
T@"NSDictionary",R,C,N,V_dialogDictionary
T@"NSDate",R,C,N,V_expirationDate
T@"NSArray",R,C,N,V_fileAssetInfoList
T@"MPStoreHLSAssetInfo",R,N,V_hlsAssetInfo
TB,R,N,GisLiveRadioStream,V_liveRadioStream
T@"NSArray",R,C,N,V_radioStreamAssetInfoList
T@,R,N,V_suzeLeaseID
TB,R,N,V_onlineSubscriptionKeysRequired
_dialogDictionary
_fileAssetInfoList
_hlsAssetInfo
_liveRadioStream
_radioStreamAssetInfoList
_suzeLeaseID
_onlineSubscriptionKeysRequired
isLiveRadioStream
T@"NSObject<OS_dispatch_queue>",R,N,V_serialQueue
T@"SSVFairPlaySubscriptionStatus",R,N
T@"ICMusicSubscriptionFairPlayKeyStatus",R,N,V_lastKnownSubscriptionFairPlayKeyStatus
subscriptionAvailable
TB,R,N,GisSubscriptionAvailable
T@"SSVSubscriptionStatus",R,C,N,V_subscriptionStatus
T@"ICMusicSubscriptionStatus",R,C,N
cloudLibraryEnabled
TB,R,N,GisCloudLibraryEnabled
purchaseHistoryEnabled
TB,R,N,GisPurchaseHistoryEnabled
_cloudLibraryStatusAccessQueue
_cloudLibraryStatus
_cloudLibraryObservationCount
_hasLoadedMatchStatus
_hasLoadedSubscriptionAvailability
_subscriptionStatusMonitor
_subscriptionStatusObservationToken
_matchStatusObservationCount
_matchStatus
_observingNetworkReachability
_hasSubscriptionLease
_shouldPlaybackRequireSubscriptionLease
_subscriptionAvailable
_lastKnownSubscriptionFairPlayKeyStatus
environmentMonitorDidChangeNetworkReachability:
environmentMonitorDidChangeNetworkType:
environmentMonitorDidChangePower:
environmentMonitorDidChangeBatteryLevel:
environmentMonitorDidChangeTelephonyStatus:
environmentMonitorDidChangeThermalLevel:
_allowsMusicSubscriptionDidChange:
_cloudClientAuthenticationDidChange
_userIdentityStoreDidChange:
_enableICMLErrorReasonChange:
isCloudLibraryEnabled
isPurchaseHistoryEnabled
hasLoadedSubscriptionAvailability
isSubscriptionAvailable
lastKnownFairPlaySubscriptionStatus
matchStatus
shouldPlaybackRequireSubscriptionLease
musicSubscriptionStatus
beginObservingCloudLibraryEnabled
beginObservingMatchStatus
refreshMusicSubscriptionStatus
beginObservingFairPlaySubscriptionStatus
beginObservingPurchaseHistoryEnabled
beginObservingSubscriptionAvailability
endObservingCloudLibraryEnabled
endObservingMatchStatus
endObservingFairPlaySubscriptionStatus
endObservingPurchaseHistoryEnabled
endObservingSubscriptionAvailability
_calculateShouldPlaybackRequireSubscriptionLeaseReturningLikelyToReachRemoteServer:
_currentCloudLibraryEnabled
_currentPurchaseHistoryEnabled
_updateMatchStatus
_updateSubscriptionAvailability
_updateSubscriptionAvailabilityWithValue:
_beginObservingCloudLibraryEnabled
_endObservingCloudLibraryEnabled
_beginObservingMatchStatus
_endObservingMatchStatus
_copyObservationStateFrom:
_performBlockOnControllerHandlingTheSameAccount:
lastKnownSubscriptionFairPlayKeyStatus
serialQueue
_cloudServiceStatusControllerWithUserIdentity:createIfRequired:
valueForBagKey:
setAllowsExpiredBags:
performRequestWithResponseHandler:
setInteger:forKey:
initWithStoreRequestContext:
isActiveLocker
isRemoteServerLikelyReachable
refreshSubscriptionStatus
endObservingSubscriptionStatusWithToken:
beginObservingSubscriptionStatusWithHandler:
sharedMonitorForIdentity:
autoupdatingActiveAccount
T@"MPCloudServiceStatusController",R,N
cloudServiceStatusControllerWithUserIdentity:
initWithRawResponseOutput:sectionBuilder:contentItemBuilder:filteredFCKinds:userIdentity:
_parsedElements:
_parsedContentNode:additionalAttributesFromParent:
T@"NSMutableArray",&,N,V_filterPredicates
Ti,N,V_groupingType
TB,N,V_filteringDisabled
Ti,N,V_entityOrder
T@"NSMutableArray",&,N,V_staticEntityIdentifiers
Ti,N,V_staticEntityType
TB,N,V_includeNonLibraryEntities
_entityOrder
_filterPredicates
_groupingType
_staticEntityIdentifiers
_includeNonLibraryEntities
_has
clearFilterPredicates
addFilterPredicates:
filterPredicatesCount
filterPredicatesAtIndex:
setHasGroupingType:
hasGroupingType
groupingTypeAsString:
StringAsGroupingType:
setHasFilteringDisabled:
hasFilteringDisabled
entityOrder
setEntityOrder:
setHasEntityOrder:
hasEntityOrder
entityOrderAsString:
StringAsEntityOrder:
clearStaticEntityIdentifiers
addStaticEntityIdentifiers:
staticEntityIdentifiersCount
staticEntityIdentifiersAtIndex:
staticEntityType
setStaticEntityType:
setHasStaticEntityType:
hasStaticEntityType
staticEntityTypeAsString:
StringAsStaticEntityType:
setIncludeNonLibraryEntities:
setHasIncludeNonLibraryEntities:
hasIncludeNonLibraryEntities
mergeFrom:
filteringDisabled
staticEntityIdentifiers
setStaticEntityIdentifiers:
includeNonLibraryEntities
filterPredicatesType
staticEntityIdentifiersType
previewDuration
previewURL
size
_owner
tokenWithQueue:owner:
tokenWithKey:owner:
_requestedStoreAssetProperties
secondsFromGMT
ISO8601TimeZoneOffsetFromUTC
T@"MPIdentifierSet",&,N,V_sourceItemIdentifiers
T@"MPModelFileAsset",&,N,V_fileAsset
_sourceItemIdentifiers
_fileAsset
initWithFileAsset:sourceItemIdentifiers:
mediaLibraryForItemIdentifiers:
sourceItemIdentifiers
setSourceItemIdentifiers:
fileAsset
setFileAsset:
T@"NSSet",C,N,V_filterPredicates
T@"NSSet",C,N,V_itemPropertiesToFetch
T@"NSSet",C,N,V_collectionPropertiesToFetch
Tq,N,V_groupingType
TQ,N,V_entityLimit
TQ,N,V_entityOrder
T@"NSArray",C,N,V_orderingProperties
TB,N,V_ignoreSystemFilterPredicates
TB,N,V_ignoreRestrictionsPredicates
TB,N,V_includeEntitiesWithBlankNames
T@"NSDictionary",C,N,V_orderingDirectionMappings
_entityLimit
_itemPropertiesToFetch
_collectionPropertiesToFetch
_useSections
_ignoreSystemFilterPredicates
_ignoreRestrictionsPredicates
_includeEntitiesWithBlankNames
setOrderingProperties:
setOrderingDirectionMappings:
Tq,R,N,V_action
_action
initWithAction:
_actionTypeString
action
T@"NSArray",R,N,V_importElements
_importElements
initWithImportElements:
parsedStoreItemsImportProperties
_associatedElementForPropertyDict:
importElements
_importPropertiesDictFromImportMetadataDict:
T@"NSError",C,N,V_assetLoadError
Td,N,V_assetLoadDuration
Tq,N,V_blockingSecureKeyLoadCount
Td,N,V_maximumSecureKeyLoadDuration
Tq,N,V_secureKeyLoadCount
T@"NSError",C,N,V_secureKeyError
T@"NSError",C,N,V_tracklistLoadError
TB,N,V_hadBlockingTracklistLoad
T@"NSError",C,N,V_playbackEndError
Tq,N,V_endReasonType
Tq,N,V_startupState
Tq,N,V_interfaceTypeChangeCount
Tq,N,V_startInterfaceType
_hadBlockingTracklistLoad
_assetLoadError
_assetLoadDuration
_blockingSecureKeyLoadCount
_maximumSecureKeyLoadDuration
_secureKeyLoadCount
_secureKeyError
_tracklistLoadError
_playbackEndError
_endReasonType
_startupState
_interfaceTypeChangeCount
_startInterfaceType
assetLoadError
setAssetLoadError:
assetLoadDuration
setAssetLoadDuration:
blockingSecureKeyLoadCount
setBlockingSecureKeyLoadCount:
maximumSecureKeyLoadDuration
setMaximumSecureKeyLoadDuration:
secureKeyLoadCount
setSecureKeyLoadCount:
secureKeyError
setSecureKeyError:
tracklistLoadError
setTracklistLoadError:
hadBlockingTracklistLoad
setHadBlockingTracklistLoad:
playbackEndError
setPlaybackEndError:
endReasonType
setEndReasonType:
startupState
setStartupState:
interfaceTypeChangeCount
setInterfaceTypeChangeCount:
startInterfaceType
setStartInterfaceType:
__reason_KEY
__backedByStoreItemMetadata_KEY
__parentGroup_KEY
__subgroupIndex_KEY
parentGroup
T@"MPModelForYouRecommendationGroup",W,D,N
subgroupIndex
backedByStoreItemMetadata
TB,D,N,GisBackedByStoreItemMetadata
T@"MPModelForYouRecommendationGroup",R,N
subgroup
libraryAddStatusObserverConfiguration
supportsLibraryAddStatusObservation
requiredLibraryAddStatusObservationProperties
isArtistUploadedContent
T{MPLibraryAddStatusObserverConfiguration=BBBBB},R,N
T@"NSString",R,C,N,V_clientName
Ti,R,N,V_clientType
Tq,R,N,V_clientVersion
T@"MPAVController",R,W,N,V_player
_currentInterfaceType
_isReloadingWithPlaybackContext
_tracklistStartUptime
_tracklistSummaryEvent
_uniqueIdentifierToReportingSession
_uniqueIdentifierToSummaryEvent
initWithPlayer:clientName:clientType:clientVersion:
_avControllerBufferingStateDidChangeNotification:
_avControllerDidReloadWithPlaybackContextNotification:
_avControllerItemWillChangeNotification:
_avControllerWillReloadWithPlaybackContextNotification:
_avItemAssetLoadedNotification:
_avItemSecureKeyDeliveryRequestDidFinishNotification:
_avItemTypeDidChangeNotification:
_networkTypeDidChangeNotification:
_configureBaseEventPropertiesForEvent:
_completeSetupForReportingSession:avItem:
_completeSetupForReportingSession:avItem:fallbackQueueFeeder:
_initializeReportingSession:forAVItem:
_configureStartupStateForSummaryEvent:withItem:
_handleDeallocationForUniqueIdentifier:
_isAVItemReadyForReportingSessionInitialization:
_isAVItemReadyForReportingSessionSetupCompletion:
_newReportingSession
_preparedSummaryEventForAVItem:
_reportingSessionForAVItem:
_setPerceivedTotalStartupTimeForItem:withSummaryEvent:
_uniqueIdentifierForAVItem:
setHandler:
T@?,C,N,V_handler
rtcReportingPlayQueueSourceIdentifier
rtcReportingAssetType
rtcReportingSessionAdditionalUserInfo
defaultClientVersion
requiredPlaylistEntryProperties
T@"MPModelLibraryPlaylistEditChangeRequest",C,N,V_request
T@?,C,N,V_localPersistenceResponseHandler
T@?,C,N,V_completeResponseHandler
_localPersistenceResponseHandler
_completeResponseHandler
localPersistenceResponseHandler
setLocalPersistenceResponseHandler:
completeResponseHandler
setCompleteResponseHandler:
proxyForObject:protocol:
proxyForObjects:protocol:
objects
setProtocol:
setObjects:
T@"Protocol",&,N,V_protocol
T@"NSHashTable",&,N,V_objects
_protocol
_objects
protocol
signatureWithObjCTypes:
selector
_notificationQueue
_registeredTransientState
addOperation:
registerTransientAddState:forModelObjects:relatedModelObjects:
registerTransientKeepLocalState:forModelObjects:relatedModelObjects:
unregisterTransientState:
transientAddStateForModelObject:
transientKeepLocalStateForModelObject:
performDeleteEntityChangeRequest:withRelatedModelObjects:
performDeleteEntityChangeRequest:withRelatedModelObjects:completion:
performLibraryImportChangeRequest:withRelatedModelObjects:
performLibraryImportChangeRequest:withRelatedModelObjects:completion:
performKeepLocalChangeRequest:withRelatedModelObjects:
performKeepLocalChangeRequest:withRelatedModelObjects:completion:
modelObjects
keepLocalState
relatedModelObjects
addState
setToken:
setRelatedModelObjects:
setModelObjects:
setKeepLocalState:
Tq,N,V_addState
Tq,N,V_keepLocalState
T@"MPSectionedCollection",C,N,V_modelObjects
T@"MPSectionedCollection",C,N,V_relatedModelObjects
T@"NSUUID",C,N,V_token
_addState
_keepLocalState
_modelObjects
_relatedModelObjects
setAddState:
sharedDeviceLibraryController
T@"<MPNowPlayingPlaybackQueueDelegate>",W,N,V_playbackQueueDelegate
T@"NSString",C,N,V_representedApplicationBundleIdentifier
T@"<MPNowPlayingPlaybackQueueDataSource>",W,N
T@"MPNowPlayingContentItem",&,N
T@"<MPNowPlayingInfoLyricsDelegate>",W,N
T@"NSObject<OS_dispatch_queue>",&,N,V_dataSourceQueue
nowPlayingInfo
_nowPlayingInfo
_queuedNowPlayingInfo
_convertedNowPlayingInfo
_pushDate
_publishedContext
_mutatedContentItems
_mutatedPlaybackQueueRequests
_loadedContentItemsRange
_requestedContentItemsRange
_contentItemIdentifiers
_contentItems
_nowPlayingContentItem
_playbackState
_utilityQueue
_artworkResizeUtility
_contentItemInvalidationTimer
_playbackQueueDataSource
_lyricsDelegate
_callbacks
_fallbackActivity
_playbackQueueDelegate
_representedApplicationBundleIdentifier
_dataSourceQueue
artworkCatalogBlockForContentItem:
initWithPlayerID:
initWithPlayerPath:
setPlaybackState:
playerID
becomeActive
setRepresentedApplicationBundleIdentifier:
setPlaybackQueueDataSource:
playbackQueueDataSource
setLyricsDelegate:
lyricsDelegate
invalidatePlaybackQueue
invalidatePlaybackQueueWithCompletion:
nowPlayingContentItem
setNowPlayingContentItem:
setDataSourceQueue:
supportsArtworkCatalogLoading
_artworkCatalogForContentItem:
_becomeActiveWithCompletion:
_becomeActiveIfPossibleWithCompletion:
_childContentItemForContentItem:index:
_contentItemIDsInRange:itemsRange:
_contentItemForIdentifier:
_contentItemForIdentifier:alreadyOnDataSourceQueue:
_createPlaybackQueueForRequest:
_getMetadataForContentItem:completion:
_getTransportablePlaybackSessionRepresentationWithIdentifier:preferredSessionType:completion:
_invalidatePlaybackQueueImmediatelyWithCompletion:
_onDataSourceQueue_artworkCatalogForContentItem:
_onDataSourceQueue_getContentItemIDsInRange:completion:
_onQueue_clearPlaybackQueueDataSourceCallbacks
_onQueue_registerLyricsDelegateCallbacks:
_onQueue_registerPlaybackQueueDataSourceCallbacks:
_onQueue_stateDictionary
_contentItemChangedNotification:
_onQueue_pushContentItemsUpdate
playbackQueueDelegate
setPlaybackQueueDelegate:
representedApplicationBundleIdentifier
dataSourceQueue
defaultCenter
serviceQueue
nowPlayingInfoCenter:currentLanguageOptionsForContentItem:completion:
nowPlayingInfoCenter:availableLanguageOptionsForContentItem:completion:
nowPlayingInfoCenter:infoForContentItem:completion:
nowPlayingInfoCenter:lyricsForContentItem:completion:
nowPlayingInfoCenter:artworkForContentItem:size:completion:
nowPlayingInfoCenter:childContentItemIDAtIndex:ofItem:
sessionType
nowPlayingInfoCenter:didEndMigrationWithIdentifier:error:
nowPlayingInfoCenter:willBeginSessionMigrationWithIdentifier:
nowPlayingInfoCenter:getTransportablePlaybackSessionRepresentationWithCompletion:
nowPlayingInfoCenter:getTransportablePlaybackSessionRepresentationForRequest:completion:
nowPlayingInfoCenter:didEndLyricsEvent:
contentItemForOffset:
nowPlayingInfoCenter:contentItemIDForOffset:
nowPlayingInfoCenter:contentItemIDsFromOffset:toOffset:nowPlayingIndex:
nowPlayingInfoCenter:artworkCatalogForContentItem:
playbackQueueIdentifierForNowPlayingInfoCenter:
responseWithIdentifier:sessionType:data:
T@"NSString",R,N,V_sessionType
T@"NSData",R,N,V_data
_sessionType
_data
requestWithIdentifier:preferredSessionType:
T@"NSString",R,N,V_preferredSessionType
_preferredSessionType
preferredSessionType
nowPlayingInfoCenter:contentItemForID:
replaceObjectsInRange:withObjectsFromArray:
infoCenterForPlayerPath:
localPlayerPath
infoCenterForPlayerID:
resolveInstanceMethod:
performWithoutEnforcement:
_indexProperties
_lookupPropertyForSelector:result:
_modelKeyForPropertySelector:
keyForObject:
replaceCharactersInRange:withString:
uppercaseString
bidirectionalDictionary
setValue:forModelKey:
numberWithUnsignedLong:
numberWithUnsignedChar:
numberWithLong:
numberWithShort:
valueForModelKey:
unsignedLongValue
unsignedShortValue
unsignedCharValue
shortValue
T@"MPIdentifierSet",R,N
_originalIdentifierSet
_isFinalized
initWithIdentifiers:
initWithIdentifiers:block:
valueForUndefinedKey:
setValue:forUndefinedKey:
copyWithIdentifiers:
copyWithIdentifiers:block:
copyWithPropertySet:
copyWithIdentifiers:propertySet:
originalIdentifierSet
hasLoadedValueForKey:
hasLoadedValuesForPropertySet:
mergeWithObject:
_isModelKey:
_sanitizedStorage
T#,R,N,V_modelClass
T@"MPModelKind",R,N
_modelClass
_initWithModelClass:
modelClass
kindWithModelClass:
kindWithModelClass:cacheKey:block:
_kindWithModelClass:cacheKey:block:
T@"NSString",C,N,V_artworkIdentifier
T@"MPMediaItemArtwork",&,N,V_artwork
T@"NSData",&,N,V_artworkData
_artworkIdentifier
_artwork
_artworkData
artworkIdentifier
setArtworkIdentifier:
setArtwork:
artworkData
setArtworkData:
_onQueue_pushNowPlayingInfoAndRetry:
_initializeNowPlayingInfo
setNowPlayingInfo:
libraryRemovalSupportedOptions
requiredLibraryRemovalProperties
supportsLibraryRemoval
newKeepLocalStatusObserverConfiguration
requiredKeepLocalStatusObservationProperties
supportsKeepLocalStatusObservation
T@"MRSendCommandHandlerDialogAction",R,C,N,V_mediaRemoteType
T@"MPRemoteCommandEvent",R,N
_mediaRemoteType
initWithMediaRemoteType:
event
mediaRemoteType
actionWithTitle:type:commandEvent:
eventWithCommand:options:
T@"MRSendCommandHandlerDialog",R,C,N,V_mediaRemoteType
addAction:
localizedMessage
setLocalizedMessage:
actions
msv_map:
dialogWithTitle:message:
definitiveInformation
TB,R,N,GisDefinitiveInformation,V_definitiveInformation
TB,R,N,V_hasPlaybackCapability
TB,R,N,V_requiresCarrierManualVerification
TB,R,N,V_shouldUseLease
TB,R,N,V_shouldUseAccountLessStreaming
_subscriptionStatusObject
_definitiveInformation
_hasPlaybackCapability
_requiresCarrierManualVerification
_shouldUseLease
_shouldUseAccountLessStreaming
initWithICSubscriptionStatus:
isDefinitiveInformation
hasPlaybackCapability
requiresCarrierManualVerification
shouldUseLease
shouldUseAccountLessStreaming
carrierBundlingStatusType
statusType
T@"HSHomeSharingLibrary",R,N,V_homeSharingLibrary
_homeSharingLibrary
_tokenDataForDSIDs
_loadedContainerPIDs
_blocksForLoadingContainerPIDs
_containerFillQueue
URLForItemDataRequest:
initWithHomeSharingLibrary:
setRentalPlaybackStartDateForItemID:
_homeSharingGroupIDDidChangeNotification:
_homeSharingLibraryDidUpdateRevisionNumber:
_homeSharingLibraryDidBecomeUnavailable:
isSupportedSharingVersion
setTokenData:forAuthorizedDSID:
_fetchTokensForAuthorizedDSIDs
_tokenDataForAccountID:
_fillContainerForQueryCriteria:completionBlock:
homeSharingLibrary
fillContainerForHomeSharingLibrary:containerID:completionHandler:
sendRequest:withResponseHandler:
tokenData
requestWithDSID:deviceGUID:
authorizedDSIDs
deviceGUID
homeSharingGroupID
mutableBytes
initWithLength:
beginScanningForLibraries
endScanningForLibraries
checkForChangesInHomeSharingLibrary:completionHandler:
isScanningForLibraries
fileURLWithPath:
urlForRequest:
requestWithDatabaseID:itemID:format:
stringByTrimmingCharactersInSet:
punctuationCharacterSet
responseCode
setValue:forArgument:
requestWithDatabaseID:itemID:
buildDatabaseFromHomeSharingLibrary:atPath:completionHandler:progressHandler:
initWithPath:
connectionState
hs_homeSharingErrorWithCode:userInfo:
_determineHomeSharingGroupIDWithCompletionHandler:
determineGroupIDWithCompletionHandler:
defaultStore
homeSharingBrowserWithGroupID:
browser:didAddLibrary:
browser:didRemoveLibrary:
_requestedCuratorProperties
setBrandLogoArtworkCatalogBlock:
setCuratorSubKind:
setCuratorKind:
setShortName:
TB,R,N,GisLive,V_live
Tf,R,N,V_rate
Tq,R,N,V_state
_elapsedTime
_live
_rate
encodeFloat:forKey:
decodeFloatForKey:
liveSnapshotWithRate:state:
snapshotWithElapsedTime:duration:rate:atTimestamp:state:
T@"NSString",R,N,V_artworkIdentifier
Tq,R,N,V_index
Tq,R,N,V_count
_index
index
nowPlayingWithItem:itemIdentifier:artworkIdentifier:index:count:
T@"NSDictionary",R,N,V_insertedDescriptors
T@"NSArray",R,N,V_removedItemIdentifiers
_removedItemIdentifiers
initWithInsertedDescriptors:removedItemIdentifiers:
removedItemIdentifiers
TB,N,V_hasQueueDescriptor
T@"MPMusicPlayerQueueDescriptor",&,N,V_queueDescriptor
TB,N,V_hasNowPlaying
T@"MPMusicPlayerControllerNowPlaying",&,N,V_nowPlaying
TB,N,V_hasTimeSnapshot
T@"MPMusicPlayerControllerNowPlayingTimeSnapshot",&,N,V_timeSnapshot
TB,N,V_hasRepeatMode
Tq,N,V_repeatMode
TB,N,V_hasShuffleMode
Tq,N,V_shuffleMode
TB,N,V_hasContentItemIDs
T@"NSArray",C,N,V_contentItemIDs
TB,N,V_queueDidChange
TB,N,V_itemDidEnd
TB,N,V_queueDidEnd
_hasQueueDescriptor
_hasNowPlaying
_hasTimeSnapshot
_hasRepeatMode
_hasShuffleMode
_hasContentItemIDs
_queueDidChange
_itemDidEnd
_queueDidEnd
_timeSnapshot
_contentItemIDs
hasQueueDescriptor
setHasQueueDescriptor:
hasNowPlaying
setHasNowPlaying:
nowPlaying
setNowPlaying:
hasTimeSnapshot
setHasTimeSnapshot:
timeSnapshot
setTimeSnapshot:
hasRepeatMode
setHasRepeatMode:
hasShuffleMode
setHasShuffleMode:
hasContentItemIDs
setHasContentItemIDs:
contentItemIDs
setContentItemIDs:
queueDidChange
setQueueDidChange:
itemDidEnd
setItemDidEnd:
queueDidEnd
setQueueDidEnd:
startLoading
stopLoading
URLProtocolDidFinishLoading:
URLProtocol:wasRedirectedToRequest:redirectResponse:
setAllHTTPHeaderFields:
securityInfoForURL:
allHTTPHeaderFields
initWithURL:MIMEType:expectedContentLength:textEncodingName:
URLProtocol:didFailWithError:
client
baseURL
canInitWithRequest:
canonicalRequestForRequest:
registerClass:
T@"UICubicTimingParameters",C,N,V_springCubicTimingParameters
_springCubicTimingParameters
cubicTimingParameters
springCubicTimingParameters
setSpringCubicTimingParameters:
standardTimingParameters
initWithMass:stiffness:damping:initialVelocity:
initWithControlPoint1:controlPoint2:
_basicAnimationForView:withKeyPath:
setTimingFunction:
_mediaTimingFunction
timingParameters
standardSpringAnimator
initWithDuration:timingParameters:
Tq,R,N,V_artworkType
TQ,R,N,V_libraryID
Tq,R,N,V_entityType
T@"MPMediaLibraryArtwork",R,N,V_libraryArtwork
Td,N,V_retrievalTime
T@"NSString",C,N,V_availableArtworkToken
T@"NSString",C,N,V_fetchableArtworkToken
T@"NSNumber",C,N,V_fetchableArtworkSource
_mediaType
_hasRetrievedTokens
_retrievalTime
_availableArtworkToken
_fetchableArtworkToken
_fetchableArtworkSource
_entityType
_artworkType
_libraryArtwork
artworkTokenWithParameters:
artworkTokenParameters
initWithLibrary:identifier:entityType:artworkType:
initWithLibrary:identifier:entityType:artworkType:mediaType:
availableArtworkToken
setAvailableArtworkToken:
fetchableArtworkToken
setFetchableArtworkToken:
fetchableArtworkSource
setFetchableArtworkSource:
libraryArtwork
setLibraryArtwork:
retrievalTime
setRetrievalTime:
entityType
artworkType
musicLibrary
clearFailedFetchableToken
promoteFetchableArtworkTokenIfNeeded
_onQueue_musicLibrary
_onQueue_updateTokens
retrieveBestArtworkTokensForEntityPersistentID:entityType:artworkType:retrievalTime:completionHandler:
T@"MPMediaLibraryArtworkRequest",W,N,V_artworkRequest
T@"ML3Artwork",&,N,V_artwork
T{os_unfair_lock_s=I},R,N,V_stateLock
T@"NSArray",R,N,V_validSizes
_stateLock
_validSizes
originalFileURL
imageFileURLForSize:
imageFileURLForEffect:
validSizes
effectsMetadata
setEffectsMetadata:
stateLock
setInterestDictionary:
interestDictionary
fileURLForEffect:
fileURLForSize:
artworkExistsForRequest:
needsToFetchArtworkForRequest:
availableArtworkWithRequest:
fetchArtworkForRequest:completionHandler:
cancelFetchingArtworkForRequest:
fetchArtworkInfoForRequest:completionHandler:
sourceType
initWithToken:artworkType:musicLibrary:
isArtworkTokenAvailable:
MP_artworkType
T@"MPModelPlaylistEntry",&,N,V_playlistEntry
_playlistEntry
setPlaylistEntry:
playlistEntry
sagaAccountID
setSagaLastPlaylistPlayDataUploadDate:
sagaDatabaseUserVersion
setSagaDatabaseUserVersion:
storefrontIdentifier
setStorefrontIdentifier:
sagaOnDiskDatabaseRevision
setSagaOnDiskDatabaseRevision:
sagaLastLibraryUpdateTime
setSagaLastLibraryUpdateTime:
sagaLastSubscribedContainersUpdateTime
setSagaAccountID:
setSagaLastSubscribedContainersUpdateTime:
clearSagaCloudAccountID
clearSagaLastItemPlayDataUploadDate
clearSagaLastPlaylistPlayDataUploadDate
sagaLastItemPlayDataUploadDate
setSagaLastItemPlayDataUploadDate:
sagaLastPlaylistPlayDataUploadDate
T@"NSNumber",C,N
T@"MPModelPlaylist",R,N,V_playlist
initWithPlaylist:
_database
_observers
_observersLock
payloadForRelatedEntityWithIdentifierSet:
importObjectsFromRequest:options:error:
modelObjectMatchingIdentifierSet:propertySet:
relatedIdentifierSetsForParentIdentifierSet:childKey:
assetsMatchingIdentifierSet:
assetsWithMiniSINFsMatchingIdentifierSet:
playbackAuthorizationTokenForEntityMatchingIdentifierSet:
enumerateAssetsMissingSINFsForHashedPersonID:usingBlock:
importAssetsFromRequest:error:
_initWithDatabaseCreationBlock:
_assetsMatchingIdentifierSet:query:
_createDatabaseSchema
payloadDataForIdentifierSet:outError:
_payloadForIdentifierSet:outError:
_playbackAuthorizationTokenForIdentifier:
jsonDataAtColumnIndex:
int64ValueAtColumnIndex:
nextObjectWithError:
resultsForStatement:
bindStringValue:toParameterNamed:
statementWithString:error:
executeStatement:error:
bindInt64Value:toParameterNamed:
initWithMemory
jsonValueAtColumnIndex:error:
transactionWithName:
_transaction
_selectExistingObjectStatement
_insertObjectStatement
_insertObjectRelationshipStatement
_insertAssetURLStatement
_removeRelationshipsStatement
_updateMiniSINFStatement
_updateSINFStatement
_insertPlaybackAuthorizationTokenStatement
_updateAssetURLStatement
importObject:type:identifiers:source:expiration:
importAssetURL:forIdentifiers:flavor:expirationDate:
importAssetSinf:type:forIdentifier:hashedPersonID:flavor:sinfPayload:
importPlaybackAuthorizationToken:identifiers:source:type:expirationDate:
relateIdentifiers:toParentIdentifiers:childKey:order:
removeRelationshipsForParentIdentifiers:childKey:
_importAssetMiniSINF:forIdentifier:hashedPersonID:flavor:
_importAssetFullSINF:forIdentifier:hashedPersonID:flavor:
_existingAssetMatchingIdentifier:hashedPersonID:flavor:
bindDataValue:toParameterNamed:
isEqualToData:
bindJSONValue:toParameterNamed:error:
mp_deepMerge:
commit
stringValueAtColumnIndex:
JSONObjectWithData:options:error:
database:didFinishImportRequest:
database:didFailImportRequest:withErrror:
T@"MPServerObjectDatabase",R,N
sharedServerObjectDatabase
prefersInMemoryDatabase
setPrefersInMemoryDatabase:
initWithURL:error:
URLByDeletingPathExtension
URLsForDirectory:inDomains:
T@"NSString",R,C,N,V_hashedPersonID
Tq,R,N,V_flavor
T@"NSURL",R,C,N,V_url
T@"NSData",R,C,N,V_miniSINF
T@"NSArray",R,C,N,V_sinfs
_flavor
_url
_miniSINF
_sinfs
initWithIdentifier:hashedPersonID:flavor:url:miniSINF:
initWithIdentifier:hashedPersonID:flavor:url:sinfs:
_initWithIdentifier:hashedPersonID:flavor:url:miniSINF:sinfs:
initWithSQLRowResult:
hashedPersonID
miniSINF
sinfs
dataValueAtColumnIndex:
T@"NSURLRequest",R,C,N
T@"NSArray",R,C,N,V_URLRequests
T@"NSArray",R,N,V_requestedItemIdentifiers
TQ,R,N,V_itemMetadataRequestReason
_URLRequests
_requestedItemIdentifiers
_itemMetadataRequestReason
initWithURLRequest:
initWithURLRequests:
URLRequest
initWithRequestedItemIdentifiers:reason:
URLRequests
requestedItemIdentifiers
itemMetadataRequestReason
_rentalTrackerQueue
_rentals
addRentalWithItemID:databaseID:
removeRentalWithItemID:
removeAllRentalsForDatabaseID:
_saveRentals
writeToFile:atomically:
startWithCompletionBlock:
initWithAccountIdentifier:rentalKeyIdentifier:
dictionaryWithContentsOfFile:
T@"MPPropertySet",R,N,V_requestedGroupPropertySet
T@"MPPropertySet",R,N,V_requestedItemPropertySet
T@"NSDictionary",R,N,V_storeItemMetadataResults
T@"MPMutableSectionedCollection",R,N,V_flatSectionedItems
_requestedGroupProperties
_itemBuilder
_lastUpdatedDateFormatter
_isListenNow
_requestedGroupPropertySet
_requestedItemPropertySet
_storeItemMetadataResults
_flatSectionedItems
initWithRequestedGroupPropertySet:requestedItemPropertySet:storeItemMetadataResults:flatSectionedItems:storeBagDictionary:isListenNow:
initializeRequestedGroupProperties
modelObjectForRecentlyPlayedArray:userIdentity:
modelObjectForItemsArray:userIdentity:
modelObjectForRecommendationDictionary:userIdentity:
requestedGroupPropertySet
requestedItemPropertySet
storeItemMetadataResults
flatSectionedItems
setSectionIndex:
setLastUpdatedDate:
setGroupType:
allSupportedGroupProperties
filterAvailableContentGroups:withOptions:
T@"MPHomeSharingML3DataProvider",&,N,V_dataProvider
_keybagURL
_accountID
_accountTokenData
_downloaderAccountID
_downloaderAccountTokenData
_familyAccountID
_requests
_activeRequest
_atLeastOneAuthorizationRequestSuccessful
authorizationRequest:didReceiveResponse:
request:didFailWithError:
requestDidFinish:
initWithKeybagURL:accountID:accountTokenData:
initWithKeybagURL:accountID:accountTokenData:downloaderAccountID:downloaderAccountTokenData:familyAccountID:
_errorIsFairPlayError:
_performMachineAuthorization
_processNextAuthorizationRequest
setDataProvider:
setKeybagPath:
initWithAuthorizationToken:accountIdentifier:
bodyData
_scheduleSupportedCommandsChanged
_startMediaRemoteSync
_stopMediaRemoteSync
T@"MPRemoteCommand",R,N,V_specialSeekForwardCommand
T@"MPRemoteCommand",R,N,V_specialSeekBackwardCommand
T@"MPAdvanceShuffleModeCommand",R,N,V_advanceShuffleModeCommand
T@"MPAdvanceRepeatModeCommand",R,N,V_advanceRepeatModeCommand
T@"MPRemoteCommand",R,N,V_removeFromPlaybackQueueCommand
T@"MPReorderQueueCommand",R,N,V_reorderQueueCommand
T@"MPRemoteCommand",R,N,V_playItemInQueueCommand
T@"MPRemoteCommand",R,N,V_createRadioStationCommand
T@"MPSetPlaybackQueueCommand",R,N,V_setPlaybackQueueCommand
T@"MPRemoteCommand",R,N,V_prepareForSetPlaybackQueueCommand
T@"MPInsertIntoPlaybackQueueCommand",R,N,V_insertIntoPlaybackQueueCommand
T@"MPFeedbackCommand",R,N,V_addNowPlayingItemToLibraryCommand
T@"MPFeedbackCommand",R,N,V_addItemToLibraryCommand
T@"MPSetPlaybackSessionCommand",R,N,V_setPlaybackSessionCommand
T@"MPPreloadPlaybackSessionCommand",R,N,V_preloadPlaybackSessionCommand
T@"MPSetPriorityForPlaybackSessionCommand",R,N,V_setPriorityForPlaybackSessionCommand
T@"MPRemoteCommand",R,N,V_discardPlaybackSessionCommand
T@"MPRemoteCommand",R,N,V_reshuffleCommand
T@"MPChangeQueueEndActionCommand",R,N,V_changeQueueEndActionCommand
T@"MPRemoteCommand",R,N,V_leaveSharedPlaybackSessionCommand
T@"MPRemoteCommand",R,N,V_postEventNoticeCommand
T@"MRPlayerPath",R,C,N,V_playerPath
TB,N,V_disableAutomaticCanBeNowPlaying
TB,N,V_wantsSerializedEventDelivery
T@"MPRemoteCommand",R,N,V_pauseCommand
T@"MPRemoteCommand",R,N,V_playCommand
T@"MPRemoteCommand",R,N,V_stopCommand
T@"MPRemoteCommand",R,N,V_togglePlayPauseCommand
T@"MPRemoteCommand",R,N,V_enableLanguageOptionCommand
T@"MPRemoteCommand",R,N,V_disableLanguageOptionCommand
T@"MPChangePlaybackRateCommand",R,N,V_changePlaybackRateCommand
T@"MPChangeRepeatModeCommand",R,N,V_changeRepeatModeCommand
T@"MPChangeShuffleModeCommand",R,N,V_changeShuffleModeCommand
T@"MPRemoteCommand",R,N,V_nextTrackCommand
T@"MPRemoteCommand",R,N,V_previousTrackCommand
T@"MPSkipIntervalCommand",R,N,V_skipForwardCommand
T@"MPSkipIntervalCommand",R,N,V_skipBackwardCommand
T@"MPRemoteCommand",R,N,V_seekForwardCommand
T@"MPRemoteCommand",R,N,V_seekBackwardCommand
T@"MPChangePlaybackPositionCommand",R,N,V_changePlaybackPositionCommand
T@"MPRatingCommand",R,N,V_ratingCommand
T@"MPFeedbackCommand",R,N,V_likeCommand
T@"MPFeedbackCommand",R,N,V_dislikeCommand
T@"MPFeedbackCommand",R,N,V_bookmarkCommand
_activeCommands
_mediaRemoteCommandHandler
_scheduledSupportedCommandsChangedNotification
_commandHandlersRegistered
_canBeNowPlayingApplication
_processingEvent
_stateHandler
_disableAutomaticCanBeNowPlaying
_wantsSerializedEventDelivery
_pauseCommand
_playCommand
_stopCommand
_togglePlayPauseCommand
_enableLanguageOptionCommand
_disableLanguageOptionCommand
_nextTrackCommand
_previousTrackCommand
_skipForwardCommand
_skipBackwardCommand
_seekForwardCommand
_seekBackwardCommand
_ratingCommand
_changePlaybackRateCommand
_likeCommand
_dislikeCommand
_bookmarkCommand
_changePlaybackPositionCommand
_changeRepeatModeCommand
_changeShuffleModeCommand
_specialSeekForwardCommand
_specialSeekBackwardCommand
_advanceShuffleModeCommand
_advanceRepeatModeCommand
_createRadioStationCommand
_setPlaybackQueueCommand
_prepareForSetPlaybackQueueCommand
_insertIntoPlaybackQueueCommand
_removeFromPlaybackQueueCommand
_reorderQueueCommand
_playItemInQueueCommand
_addNowPlayingItemToLibraryCommand
_addItemToLibraryCommand
_setPlaybackSessionCommand
_preloadPlaybackSessionCommand
_setPriorityForPlaybackSessionCommand
_discardPlaybackSessionCommand
_reshuffleCommand
_changeQueueEndActionCommand
_leaveSharedPlaybackSessionCommand
_postEventNoticeCommand
remoteCommandDidMutatePropagatableProperty:
commandHandlersRegistered
canBeNowPlayingApplication
_pushMediaRemoteCommand:withOptions:completion:
dispatchCommandEvent:completion:
_flushEventQueue
getPendingCommandTypesWithCompletion:
pauseCommand
playCommand
stopCommand
togglePlayPauseCommand
enableLanguageOptionCommand
disableLanguageOptionCommand
nextTrackCommand
previousTrackCommand
skipForwardCommand
skipBackwardCommand
seekForwardCommand
seekBackwardCommand
ratingCommand
changePlaybackRateCommand
likeCommand
dislikeCommand
bookmarkCommand
changePlaybackPositionCommand
changeRepeatModeCommand
changeShuffleModeCommand
specialSeekForwardCommand
specialSeekBackwardCommand
advanceShuffleModeCommand
advanceRepeatModeCommand
createRadioStationCommand
setPlaybackQueueCommand
prepareForSetPlaybackQueueCommand
insertIntoPlaybackQueueCommand
removeFromPlaybackQueueCommand
reorderQueueCommand
playItemInQueueCommand
addNowPlayingItemToLibraryCommand
addItemToLibraryCommand
setPlaybackSessionCommand
preloadPlaybackSessionCommand
setPriorityForPlaybackSessionCommand
discardPlaybackSessionCommand
reshuffleCommand
changeQueueEndActionCommand
leaveSharedPlaybackSessionCommand
postEventNoticeCommand
_createRemoteCommandWithConcreteClass:mediaRemoteType:
_commandTargetsDidChangeNotification:
_updateCanBeNowPlayingApplicationIfNeeded
containsCommand:
disableAutomaticCanBeNowPlaying
wantsSerializedEventDelivery
setWantsSerializedEventDelivery:
msv_flatMap:
commandCenterForPlayerPath:
updateLaunchCommandsWithConfigurationHandler:
sharedCommandCenter
commandCenterForPlayerID:
_numberOfCommandCentersWithTargets
TQ,R,N,V_itemID
_homeSharingID
_rentalID
initWithItemID:homeSharingID:rentalID:accountID:
__available_KEY
__protectedContentSupportStorageFileURL_KEY
__URL_KEY
available
TB,D,N,GisAvailable
protectedContentSupportStorageFileURL
T@"MPModelLibraryHasPurchasesRequest",C,N,V_request
T@"NSDictionary",R,N,V_additionalTrackMetadata
_additionalTrackMetadata
initWithStoreItemID:additionalTrackMetadata:
storeItem
additionalTrackMetadata
T@"NSDictionary",R,N,V_lookupDictionary
_storeItem
initWithLookupDictionary:additionalTrackMetadata:
TB,R,N,V_addToCloudLibrary
T@"MPModelObject",R,N,V_referralObject
_addToCloudLibrary
initWithImportElements:usingCloudLibraryDestination:
initWithImportElements:referralObject:usingCloudLibraryDestination:
addToCloudLibrary
T^v,R,N,V_television
_television
initWithTelevision:
television
T@"UIViewController",W,N,V_viewControllerForOrientation
_viewControllerForOrientation
initWithAVItem:completionHandler:
viewControllerForOrientation
setViewControllerForOrientation:
supportsModelClass:
T#,N,V_modelClass
T@"NSArray",C,N,V_identifierSets
_identifierSets
setModelClass:
identifierSets
setIdentifierSets:
_produceResponseWithRecentlyPlayedArray:completion:
setCachePolicy:
TB,N,GisTailPlaceholder,V_tailPlaceholder
T@"NSString",&,N,V_album
T@"NSString",&,N,V_artist
Td,N,V_durationFromExternalMetadata
TB,N,GisExplicitTrack,V_explicitTrack
TB,N,GisLikedStateEnabled,V_likeStateEnabled
T@"NSString",&,N,V_mainTitle
TB,N,V_supportsLikedState
T@?,C,N,V_artworkCatalogBlock
_explicitTrack
_likeStateEnabled
_album
_artist
_durationFromExternalMetadata
_mainTitle
_artworkCatalogBlock
setAlbum:
setArtist:
setDurationFromExternalMetadata:
setExplicitTrack:
setLikedStateEnabled:
setMainTitle:
setSupportsLikedState:
setTailPlaceholder:
setArtworkCatalogBlock:
T@"MPModelPlaylistEntry",&,D,N
tvEpisode
podcast
T@"MPModelPodcast",&,D,N
podcastEpisode
T@"MPModelPodcastEpisode",&,D,N
radioStationEvent
T@"MPModelRadioStationEvent",R,D,N
anyObject
flattenedGenericObject
genericObjectWithModelObject:
relationshipKeyForGenericObjectType:
kindWithRelationshipKinds:
__playlistEntry_KEY
__tvEpisode_KEY
__podcast_KEY
__podcastEpisode_KEY
__radioStationEvent_KEY
setPodcastEpisode:
setPodcast:
setMediaClip:
T@"NSDictionary",R,N,V_relationshipKinds
_relationshipKinds
relationshipKinds
genericObjectType
pathForResource:ofType:
dataWithContentsOfFile:
T@"NSIndexSet",C,N,V_insertedSections
T@"NSIndexSet",C,N,V_deletedSections
T@"NSIndexSet",C,N,V_updatedSections
T@"NSArray",C,N,V_insertedItemIndexPaths
T@"NSArray",C,N,V_deletedItemIndexPaths
T@"NSArray",C,N,V_updatedItemIndexPaths
T@"NSIndexSet",R,C,N
_sectionMoves
_updatedSectionMoveFromIndexes
_itemMoves
_updatedItemMoveFromIndexPaths
_isFlatCollection
_insertedSections
_deletedSections
_updatedSections
_insertedItemIndexPaths
_deletedItemIndexPaths
_updatedItemIndexPaths
hasChanges
appendSectionMoveFromIndex:toIndex:updated:
removeSectionMoveFromIndex:
enumerateSectionMovesWithBlock:
enumerateSectionMovesUsingBlock:
appendItemMoveFromIndexPath:toIndexPath:updated:
removeItemMoveFromIndexPath:
enumerateItemMovesWithBlock:
enumerateItemMovesUsingBlock:
insertedIndexes
deletedIndexes
updatedIndexes
enumerateMovesWithBlock:
enumerateMovesUsingBlock:
applyUIKitWorkarounds
isValidForPreviousCount:finalCount:reason:
insertedSections
setInsertedSections:
deletedSections
setDeletedSections:
updatedSections
setUpdatedSections:
insertedItemIndexPaths
setInsertedItemIndexPaths:
deletedItemIndexPaths
setDeletedItemIndexPaths:
updatedItemIndexPaths
setUpdatedItemIndexPaths:
lastIndex
removeAllIndexes
T@"MPChangeDetails",R,N
changeDetailsWithPreviousCount:finalCount:isEqualBlock:isUpdatedBlock:
TB,N,V_preventStoreItemMetadataCaching
_preventStoreItemMetadataCaching
modelObjectWithStoreItemMetadata:
modelObjectWithStoreItemMetadata:sourceModelObject:
modelObjectWithStorePlatformDictionary:
modelObjectWithStoreItemMetadata:userIdentity:
modelObjectWithStorePlatformDictionary:userIdentity:
preventStoreItemMetadataCaching
availableMediaCharacteristicsWithMediaSelectionOptions
createLanguageOptionGroups
selectedMediaOptionInMediaSelectionGroup:
makeNowPlayingInfoLanguageOption
createLanguageOptions
hasMediaCharacteristic:
mediaCharacteristics
extendedLanguageTag
mediaSelectionGroupForMediaCharacteristic:
_languageOptionIdentifier
defaultOption
allowsEmptySelection
makeNowPlayingInfoLanguageOptionGroup
mpLoadValuesAsynchronouslyForKeys:completionQueue:completionHandler:
T@"ICCloudItemIDList",&,N,V_cloudItemIDList
_cloudItemIDList
addCloudItemID:idType:
insertCloudItemID:idType:atIndex:
ICCloudItemIDList
cloudItemIDList
setCloudItemIDList:
cloudItemIDListForPlaylist:
T@"NSObject<ICCloudAvailability>",R,N,V_cloudAvailabilityController
T@"ICConnectionConfiguration",R,N
Tq,N,V_activeCount
Ti,N,V_preferencesChangedNotifyToken
TB,N,V_preferencesChangedNotifyTokenIsValid
T@"NSObject<OS_dispatch_queue>",R,N,V_cloudClientCallbackQueue
T@"MSVDistributedNotificationObserver",R,N,V_addToPlaylistBehaviorChangedObserver
TB,N,V_canShowCloudDownloadButtons
TB,N,V_canDefaultMediaLibraryShowCloudContent
TB,N,V_canShowCloudMusic
TB,N,V_canShowCloudVideo
cloudEnabledValid
TB,N,GisCloudEnabledValid,V_cloudEnabledValid
cloudEnabled
TB,N,GisCloudEnabled,V_cloudEnabled
cloudLockerAccount
TB,N,GhasCloudLockerAccount,V_cloudLockerAccount
purchaseHistoryAccount
TB,N,GhasPurchaseHistoryAccount,V_purchaseHistoryAccount
updateInProgress
TB,N,GisUpdateInProgress,V_updateInProgress
initialImport
TB,N,GisInitialImport,V_initialImport
cloudLibraryUpdateInProgress
TB,N,GisCloudLibraryUpdateInProgress,V_cloudLibraryUpdateInProgress
cloudLibraryInitialImport
TB,N,GisCloudLibraryInitialImport,V_cloudLibraryInitialImport
jaliscoUpdateInProgress
TB,N,GisJaliscoUpdateInProgress,V_jaliscoUpdateInProgress
jaliscoInitialImport
TB,N,GisJaliscoInitialImport,V_jaliscoInitialImport
enhancedAudioAvailable
TB,R,N,GisEnhancedAudioAvailable
T@"ICCloudClient",R,N,V_cloudClient
T@"ICUserIdentity",R,N
enablingCloudLibraryDestructive
TB,R,N,GisEnablingCloudLibraryDestructive
jaliscoGeniusEnabled
TB,R,N,GisJaliscoGeniusEnabled,V_jaliscoGeniusEnabled
_cloudEnabled
_jaliscoGeniusEnabled
_preferencesChangedNotifyTokenIsValid
_canShowCloudDownloadButtons
_canDefaultMediaLibraryShowCloudContent
_canShowCloudMusic
_canShowCloudVideo
_cloudEnabledValid
_cloudLockerAccount
_purchaseHistoryAccount
_updateInProgress
_initialImport
_cloudLibraryUpdateInProgress
_cloudLibraryInitialImport
_jaliscoUpdateInProgress
_jaliscoInitialImport
_preferencesChangedNotifyToken
_cloudClient
_cloudAvailabilityController
_activeCount
_cloudClientCallbackQueue
_addToPlaylistBehaviorChangedObserver
canShowCloudDownloadButtonsDidChangeNotification:
canShowCloudTracksDidChangeNotification:
hasProperNetworkConditionsToShowCloudMediaDidChangeNotification:
isCellularDataRestrictedDidChangeNotification:
authenticatedDidChangeNotification:
activeUserDidChangeNotification:
enableICMLErrorReasonChange:
hasProperNetworkConditionsToPlayMedia
hasProperNetworkConditionsToShowCloudMedia
isCellularDataRestrictedForMusic
shouldProhibitMusicActionForCurrentNetworkConditions
isCellularDataRestrictedForVideos
shouldProhibitVideosActionForCurrentNetworkConditions
isCellularDataRestrictedForStoreApps
shouldProhibitStoreAppsActionForCurrentNetworkConditions
isCellularDataRestricted
shouldProhibitActionsForCurrentNetworkConditions
canShowCloudDownloadButtons
canDefaultMediaLibraryShowCloudContent
canShowCloudMusic
canShowCloudVideo
hasCloudLockerAccount
hasPurchaseHistoryAccount
isEnhancedAudioAvailable
updateSubscribedPlaylistWithSagaID:ignoreMinRefreshInterval:completionHandler:
createPlaylistWithPersistentID:properties:trackList:completionHandler:
sdk_createPlaylistWithPersistenID:properties:tracklist:completionHandler:
addGeniusPlaylistWithPersistentID:name:seedItemSagaIDs:itemSagaIDs:completionHandler:
canSetPlaylistProperty:
setPlaylistProperties:trackList:forPlaylistWithPersistentID:completionHandler:
addStoreItemWithAdamID:toPlaylistWithPersistentID:completionHandler:
addStoreItemWithAdamID:referralObject:toPlaylistWithPersistentID:completionHandler:
addItemWithSagaID:toPlaylistWithPersistentID:completionHandler:
sdk_addStoreItemWithOpaqueID:toPlaylistWithPersistentID:completionHandler:
uploadCloudPlaylistProperties
removePlaylistsWithSagaIDs:completionHandler:
publishPlaylistWithSagaID:completionHandler:
uploadArtworkForPlaylist:completionHandler:
canSetItemProperty:
setItemProperties:forSagaID:
uploadCloudItemProperties
setCollectionProperties:forCollectionWithPersistentID:groupingType:completionHandler:
addStoreItemWithAdamID:completionHandler:
addStoreItemWithAdamID:referralObject:completionHandler:
sdk_addStoreItemWithOpaqueID:completionHandler:
addStorePlaylistWithGlobalID:completionHandler:
removeItemsWithSagaIDs:completionHandler:
loadArtworkForEntityPersistentID:entityType:artworkType:artworkSourceType:completionHandler:
loadArtworkInfoForEntityPersistentID:entityType:artworkType:artworkSourceType:completionHandler:
deprioritizeArtworkRequestForEntityPersistentID:entityType:artworkType:artworkSourceType:
becomeActiveAndWaitUntilDone:
resignActive
isInitialImport
isCloudLibraryInitialImport
isJaliscoInitialImport
isUpdateInProgress
isCloudLibraryUpdateInProgress
isJaliscoUpdateInProgress
loadGeniusItemsForSagaID:completionHandler:
loadUpdateProgressWithCompletionHandler:
loadCloudMusicLibraryUpdateProgressWithCompletionHandler:
loadJaliscoLibraryUpdateProgressWithCompletionHandler:
loadLastKnownEnableICMLErrorStatusWithCompletionHander:
isEnablingCloudLibraryDestructive
enableCloudLibraryWithOptions:completionHandler:
disableCloudLibraryWithCompletionHandler:
disableCloudLibraryWithReason:completionHandler:
isAutomaticDownloadsEnabled
hasSetPreferenceForAutomaticDownloads
enableAutomaticDownloadsWithCompletionHandler:
disableAutomaticDownloadsWithCompletionHandler:
cloudAddToPlaylistBehavior
setCloudAddToPlaylistBehavior:completionHandler:
hideItemsWithPurchaseHistoryIDs:completionHandler:
setItemProperties:forPurchaseHistoryID:
updateJaliscoMediaLibraryWithReason:completionHandler:
enablingJaliscoGeniusRequiresTerms
fetchRecommendedContentWithSeedTrackID:seedTrackIDType:count:completion:
setLikedState:forEntityWithStoreID:withMediaType:timeStamp:
setLikedState:forEntityWithStoreID:withMediaType:timeStamp:completion:
setLikedState:forAlbumWithStoreID:
setLikedState:forAlbumWithStoreID:completion:
setLikedState:forPlaylistWithGlobalID:
setLikedState:forPlaylistWithGlobalID:completion:
_loadIsJaliscoGeniusSupportedWithCompletion:
_loadIsSagaAuthenticatedWithCompletion:
_initializeUpdateInProgressState
_referralForModelObject:
_becomeActiveAndWaitUntilDone:
_resignActive
isCloudEnabled
setCloudEnabled:
cloudClient
isJaliscoGeniusEnabled
cloudAvailabilityController
activeCount
setActiveCount:
preferencesChangedNotifyToken
setPreferencesChangedNotifyToken:
preferencesChangedNotifyTokenIsValid
setPreferencesChangedNotifyTokenIsValid:
cloudClientCallbackQueue
addToPlaylistBehaviorChangedObserver
setCanShowCloudDownloadButtons:
setCanDefaultMediaLibraryShowCloudContent:
setCanShowCloudMusic:
setCanShowCloudVideo:
isCloudEnabledValid
setCloudEnabledValid:
setCloudLockerAccount:
setPurchaseHistoryAccount:
setUpdateInProgress:
setInitialImport:
setCloudLibraryUpdateInProgress:
setCloudLibraryInitialImport:
setJaliscoUpdateInProgress:
setJaliscoInitialImport:
setUpdateJaliscoInProgressChangedHandler:
setUpdateSagaInProgressChangedHandler:
_controllerWithUserIdentity:createIfRequired:
sharedCloudController
referralWithAlbumAdamID:
referralWithPlaylistGlobalID:
loadIsJaliscoUpdateInProgressWithCompletionHandler:
updateJaliscoInProgressChangedHandler
loadIsSagaUpdateInProgressWithCompletionHandler:
updateSagaInProgressChangedHandler
isAuthenticatedWithCompletionHandler:
loadIsJaliscoGeniusSupportedWithCompletionHandler:
setContentTaste:forPlaylistGlobalID:configuration:withCompletionHandler:
sharedCloudContentTasteRequestListener
setContentTaste:forAlbumStoreID:configuration:withCompletionHandler:
setContentTaste:forMediaItem:storeIdentifier:configuration:timeStamp:withCompletionHandler:
initWithRequestContext:seedItemID:isLibraryID:maxResultCount:
loadJaliscoGeniusCUIDWithCompletionHandler:
updateJaliscoLibraryWithReason:completionHandler:
handleAutomaticDownloadPreferenceChangedForMediaKindMusic:withCompletionHandler:
isAutomaticDownloadsEnabledForMediaKindMusic
enableCloudLibraryWithPolicy:startInitialImport:completionHandler:
isAuthenticated
loadJaliscoUpdateProgressWithCompletionHandler:
deprioritizeAlbumArtistHeroImageForPersistentID:
deprioritizeArtistHeroImageForPersistentID:
deprioritizeSubscriptionContainerArtworkForPersistentID:
deprioritizeContainerArtworkForSagaID:
deprioritizeSubscriptionScreenshotForPersistentID:
deprioritizeScreenshotForPurchaseHistoryID:
deprioritizeScreenshotForSagaID:
deprioritizeSubscriptionItemArtworkForPersistentID:
deprioritizeItemArtworkForPurchaseHistoryID:
deprioritizeItemArtworkForSagaID:
loadArtworkInfoForSubscriptionContainerPersistentID:completionHandler:
loadArtworkInfoForContainerSagaID:completionHandler:
loadScreenshotInfoForSubscriptionPersistentID:completionHandler:
loadScreenshotInfoForPurchaseHistoryID:completionHandler:
loadScreenshotInfoForSagaID:completionHandler:
loadArtworkInfoForSubscriptionItemPersistentID:completionHandler:
loadArtworkInfoForPurchaseHistoryID:completionHandler:
loadArtworkInfoForSagaID:completionHandler:
importAlbumArtistHeroImageForPersistentID:completionHandler:
importArtistHeroImageForPersistentID:completionHandler:
importSubscriptionContainerArtworkForPersistentID:completionHandler:
importContainerArtworkForSagaID:completionHandler:
importSubscriptionScreenshotForPersistentID:completionHandler:
importScreenshotForPurchaseHistoryID:completionHandler:
importScreenshotForSagaID:completionHandler:
importSubscriptionItemArtworkForPersistentID:completionHandler:
importItemArtworkForPurchaseHistoryID:completionHandler:
importItemArtworkForSagaID:completionHandler:
addStoreItemWithAdamID:referral:completionHandler:
setAlbumProperties:forAlbumPersistentID:completionHandler:
uploadArtworkForPlaylistWithPersistentID:completionHandler:
addStoreItemWithAdamID:referral:toPlaylistWithPersistentID:completionHandler:
setPlaylistProperties:trackList:forPlaylistPersistentID:completionHandler:
sdk_createPlaylistWithPersistentID:properties:tracklist:completionHandler:
updateSubscribedPlaylistsWithSagaIDs:ignoreMinRefreshInterval:completionHandler:
isMediaApplication
observerWithDistributedName:localName:queue:
initWithConfiguration:
T@"MPCloudController",R,N
migrateCellularDataPreferencesIfNeeded
T@"MPModelObject",C,N,V_referralObject
T@"UIImage",R,N,V_image
Tq,R,N,V_algorithm
_algorithm
initWithImage:algorithm:
analyzeWithCompletionHandler:
_fallbackColorAnalysis
algorithm
darkGrayColor
colorWithITColor:
ITColor
getWhite:alpha:
getRed:green:blue:alpha:
MP_isArtworkColorAnalyzerLightColorForAlgorithm:
Tf,R,N,V_rawRate
Tq,N,V_defaultItemEQPresetType
T@"AVPlayerItem",R,N
T@?,C,N,V_playbackQueueCommitHandler
T@"AVPlayer",R,N
_allowsExternalPlaybackRevisionID
_isExternalPlaybackActive
_pausedForPlaybackQueueTransaction
_lastPickedRoute
_playbackQueueCommitHandler
_playbackQueueTransactionCount
_queuedOperations
_rateBeforePlaybackQueueTransaction
_routeDidChangeDuringPlaybackQueueTransaction
_status
_defaultItemEQPresetType
_outputObscuredDueToInsufficientExternalProtection
_usesAudioOnlyModeForExternalPlaybackRevisionID
_usesExternalPlaybackWhileExternalScreenIsActiveRevisionID
_rawRate
actionAtItemEnd
addBoundaryTimeObserverForTimes:queue:usingBlock:
addPeriodicTimeObserverForInterval:queue:usingBlock:
advanceToNextItem
beginPlaybackQueueTransactionAndPause:
isPlaybackQueueTransactionActive
commitPlaybackQueueTransaction
_externalProtectionStatus
insertItem:afterItem:
prepareItem:withCompletionHandler:
setCurrentPlaybackQueueTransactionDisplayTime:
seekToTime:
seekToTime:toleranceBefore:toleranceAfter:
seekToTime:toleranceBefore:toleranceAfter:completionHandler:
setActionAtItemEnd:
setAllowsExternalPlayback:shouldIgnorePlaybackQueueTransactions:
setMediaSelectionCriteria:forMediaCharacteristic:
setUsesExternalPlaybackWhileExternalScreenIsActive:shouldIgnorePlaybackQueueTransactions:
usesAudioOnlyModeForExternalPlayback
usesExternalPlaybackWhileExternalScreenIsActive
playerAVAudioSession
outputObscuredDueToInsufficientExternalProtection
_currentItemDidChangeNotification:
_resumePlayback:
_setClientName:
setDefaultItemEQPresetType:
_setEQPreset:
_setExpectedAssetTypes:
_setPreferredLanguageList:
_setStoppingFadeOutDuration:
_setUserVolume:
_setWantsVolumeChangesWhenPausedOrInactive:
_userVolume
playbackQueueCommitHandler
setPlaybackQueueCommitHandler:
defaultItemEQPresetType
rawRate
setExpectedAssetTypes:
_resumePlayback:error:
setUsesExternalPlaybackWhileExternalScreenIsActive:
setAllowsExternalPlayback:
_setPausesAudioVisualPlaybackInBackground:
setPreparesItemsForPlaybackAsynchronously:
setAppliesMediaSelectionCriteriaAutomatically:
_setUsesLegacyAutomaticWaitingBehavior:
curatorKind
curatorSubKind
brandLogoArtworkCatalogBlock
brandLogoArtworkCatalog
__shortName_KEY
__curatorKind_KEY
__curatorSubKind_KEY
__brandLogoArtworkCatalogBlock_KEY
__handle_KEY
T@"MPStoreModelRequest",C,N,V_request
_childOperation
_response
_startExecutingTimeStamp
_timeoutTimerSource
initWithRequest:responseHandler:
remainingTimeInterval
assertRunningInAccessQueue
dispatchAsync:
dispatchSync:
_finishWithResponse:error:
_executeItemMetadataLoadForRequestedItemIdentifiers:reason:requestContext:
_executeURLLoadWithRequest:storeBagDictionary:requestContext:
_executeURLLoadWithRequests:storeBagDictionary:requestContext:
_handleTimeout
_tearDownTimeoutTimerSource
_URLLoadRequestWithRequest:requestContext:
identity
clientInfoForMusicKitRequestWithClientIdentifier:clientVersion:bundleIdentifier:
highPrioritySession
serverCorrelationKey
serverEnvironment
initWithIdentity:clientInfo:
TQ,N,V_durationInFrames
TI,N,V_encodingDelayInFrames
TI,N,V_encodingDrainInFrames
TI,N,V_heuristicInfo
TQ,N,V_lastPacketsResync
_encodingDelayInFrames
_encodingDrainInFrames
_heuristicInfo
_durationInFrames
_lastPacketsResync
durationInFrames
setDurationInFrames:
encodingDelayInFrames
setEncodingDelayInFrames:
encodingDrainInFrames
setEncodingDrainInFrames:
heuristicInfo
setHeuristicInfo:
lastPacketsResync
setLastPacketsResync:
T@"MPSectionedCollection",R,N,V_unpersonalizedContentDescriptors
T@"MPSectionedCollection",&,N,V_representedObjects
_representedObjects
initWithUnpersonalizedContentDescriptors:
initWithUnpersonalizedRequest:unpersonalizedContentDescriptors:
propertiesForItemAtIndexPath:
setProperties:forItemAtIndexPath:
representedObjects
setRepresentedObjects:
libraryViewWithUserIdentity:
T@"MPSectionedCollection",&,N,V_representedObjectResults
T@"MPModelResponse",&,N,V_libraryResponse
_representedObjectResults
_libraryResponse
setLibraryResponse:
_libraryResponseDidInvalidateNotification:
representedObjectResults
setRepresentedObjectResults:
libraryResponse
T@"MPModelCurator",C,D,N
hasCleanContent
curatorPlaylist
TB,D,N,GisCuratorPlaylist
owner
TB,D,N,GisOwner
publicPlaylist
TB,D,N,GisPublicPlaylist
visiblePlaylist
TB,D,N,GisVisiblePlaylist
subscribed
TB,D,N,GisSubscribed
userEditableComponents
shareShortURL
releaseDateComponents
T@"NSDateComponents",C,D,N
lastModifiedDateComponents
cloudVersionHash
tiledArtworkRequest
T@"MPTiledArtworkRequest",C,D,N
trackArtworkCatalogsWithCount:
tracksTiledArtworkCatalogWithRows:columns:
kindWithPlaylistEntryKind:options:
kindWithVariants:playlistEntryKind:options:
__hasCleanContent_KEY
__curatorPlaylist_KEY
__owner_KEY
__publicPlaylist_KEY
__visiblePlaylist_KEY
__subscribed_KEY
__userEditableComponents_KEY
__shareShortURL_KEY
__releaseDateComponents_KEY
__lastModifiedDateComponents_KEY
__tiledArtworkRequest_KEY
__cloudVersionHash_KEY
T@"MPModelPlaylistEntryKind",R,N,V_playlistEntryKind
_playlistEntryKind
playlistEntryKind
T@"<MPStoreSocialRequestOperationDataSource>",R,N,V_dataSource
_requestURLFromBagDictionary:
_urlStringForKey:inBag:
setHTTPBody:
_stringRepresentationForHTTPBodyType:
_stringRepresentationForHTTPMethod:
_effectiveNetworkTypeForCloudPlayback
_networkType
_lastAverageBitrate
adjustEffectiveNetworkTypeUsingPreviouslyPlayedItem:
effectiveNetworkTypeForPlayback
networkType
lastAverageBitrate
_onQueueEffectiveNetworkTypeForAverageBitrate:
_onQueueUpdateEffectiveNetworkTypesForPlayback
observedBitrate
events
sharedNetworkPlayabilityMonitor
T@"NSObject<OS_dispatch_queue>",R,N,V_calloutQueue
T@,&,N,V_response
T@,&,N,V_request
T@"<MPRequestResponseControllerDelegate>",W,N,V_delegate
_numberOfObservers
_requestRevision
_shouldAutomaticallyLoad
_needsReload
_cancelToken
_retryInterval
_retryTimer
_lastError
_pendingResponse
response
setResponse:
beginAutomaticResponseLoading
endAutomaticResponseLoading
setNeedsReload
setNeedsReloadForSignificantRequestChange
reloadIfNeeded
_responseDidInvalidate:
_onQueue_scheduleRetryAfterInterval:
_onQueue_reloadIfNeeded
initWithTimeout:interruptionHandler:
controller:defersResponseReplacement:
controller:shouldRetryFailedRequestWithError:
didFinishLoadingRequestForController:
willBeginLoadingRequestForController:
artworkCatalogsWithMaximumCount:
tiledArtworkCatalogWithRows:columns:
T@"NSArray",R,N,V_outputDevices
T^v,R,N,V_logicalLeaderOutputDevice
groupLeader
TB,R,N,GisGroupLeader
_logicalLeaderOutputDevice
_outputDevices
initWithOutputDevices:
isGroupLeader
_anyOutputDevicePassesMRFunction:
_anyOutputDevicePassesTest:
outputDevices
logicalLeaderOutputDevice
producesLowFidelityAudio
hostDeviceClass
pickableRouteTypeForOutputDevice:
logicalLeaderFromOutputDevices:
localDeviceUID
_requestedItemProperties
_subgroupBuilder
initWithRequestedPropertySet:storeItemMetadataResults:flatSectionedItems:storeBagDictionary:isListenNow:
modelObjectForRecommendationChildDictionary:parentGroup:subgroupsAccumulator:userIdentity:
storeItemMetadataWithMusicAPIMetadataDictionary:
convertToStoreItemMetadataDictionary:
setBackedByStoreItemMetadata:
setSubgroupIndex:
setParentGroup:
T@"NSString",R,C,N,V_ubiquitousIdentifier
Td,N,V_bookmarkTimestamp
Td,N,V_bookmarkTime
TQ,N,V_userPlayCount
_ubiquitousIdentifier
_bookmarkTimestamp
_userPlayCount
initWithUbiquitousIdentifier:
setBookmarkTimestamp:
setBookmarkTime:
setUserPlayCount:
hasBeenPlayedModified
userPlayCountModified
bookmarkTimeModified
bookmarkTimestampModified
ubiquitousIdentifier
bookmarkTimestamp
userPlayCount
ubiquitousIdentifierWithStoreAdamID:
ubiquitousIdentifierWithUniqueStoreID:
T@"NSError",C,N,V_error
setError:
T@"NSArray",C,N,V_tileArtworkVisualIdenticalityIdentifiers
_tileArtworkVisualIdenticalityIdentifiers
tileArtworkVisualIdenticalityIdentifiers
setTileArtworkVisualIdenticalityIdentifiers:
T@"NSMutableArray",&,N,V_identifiers
T@"NSMutableArray",&,N,V_identifierSets
T@"NSMapTable",&,N,V_index
replaceItemAndIdentifierSet:atIndex:
applyChanges:identifierSetLookupBlock:
itemAtIndex:
indexForItem:
identifierSetAtIndex:
identifierSetForItem:
itemForIdentifierSet:
setIdentifiers:
setIndex:
indexSetWithIndexesInRange:
removeObjectsAtIndexes:
addIndexes:
objectsAtIndexes:
firstIndex
mapTableWithKeyOptions:valueOptions:
T@"MPNowPlayingInfoLyricsItem",C,N
T@"MPMediaItemArtwork",&,D,N
sharableItem
TB,N,GisSharableItem,V_sharableItem
advertisement
TB,N,GisAdvertisement
steerable
TB,N,GisSteerable
loading
TB,N,GisLoading
T@"<MPNowPlayingContentItemArtworkDataSource>",&,N,V_artworkDataSource
T@"MPNowPlayingInfoAudioFormat",C,N
T@"MPNowPlayingInfoAudioRoute",C,N
TB,N,GisExplicitItem
alwaysLiveItem
TB,N,GisAlwaysLiveItem
_sharableItem
copyWithNewIdentifier:
setReleaseDate:
deviceSpecificUserInfo
setDeviceSpecificUserInfo:
setAlbumArtistName:
albumName
setAlbumName:
setAlbumYear:
collectionIdentifier
setCollectionIdentifier:
directorName
setDirectorName:
info
setInfo:
localizedContentRating
setLocalizedContentRating:
profileIdentifier
setProfileIdentifier:
radioStationName
setRadioStationName:
seriesName
setSeriesName:
trackArtistName
setTrackArtistName:
artworkURL
setArtworkURL:
artworkURLTemplates
setArtworkURLTemplates:
localizedDurationString
setLocalizedDurationString:
setDiscNumber:
setEpisodeNumber:
setSeasonNumber:
totalDiscCount
setTotalDiscCount:
totalTrackCount
setTotalTrackCount:
setTrackNumber:
setComposerName:
genreName
setGenreName:
radioStationStringIdentifier
setRadioStationStringIdentifier:
setExternalContentIdentifier:
isAlwaysLiveItem
setAlwaysLiveItem:
isAdvertisement
setAdvertisement:
isSteerable
setSteerable:
isLoading
setLoading:
numberOfChildren
setNumberOfChildren:
storeAlbumID
setStoreAlbumID:
storeArtistID
setStoreArtistID:
setStoreID:
storeSubscriptionID
setStoreSubscriptionID:
legacyUniqueID
setLegacyUniqueID:
setPlaylistType:
radioStationType
setRadioStationType:
setEpisodeType:
editingStyleFlags
setEditingStyleFlags:
elapsedTime
setElapsedTime:
setPlaybackRate:
elapsedTimeTimestamp
collectionInfo
setCollectionInfo:
setMediaType:
auxiliaryNowPlayingInfo
calculatedElapsedTime
setElapsedTime:playbackRate:
hasLanguageOptions
setHasLanguageOptions:
availableLanguageOptions
setAvailableLanguageOptions:
currentLanguageOptions
setCurrentLanguageOptions:
invalidateLanguageOptions
setSections:
hasDescription
setHasDescription:
invalidateDescription
setHasLyrics:
setLyrics:
invalidateLyrics
hasArtwork
setHasArtwork:
invalidateArtwork
songTraits
setSongTraits:
albumTraits
setAlbumTraits:
playlistTraits
setPlaylistTraits:
preferredFormat
setPreferredFormat:
activeFormat
setActiveFormat:
activeFormatJustification
setActiveFormatJustification:
formatTierPreference
setFormatTierPreference:
audioRoute
setAudioRoute:
alternativeFormats
setAlternativeFormats:
_mergeContentItem:
setExplicitItem:
isSharableItem
setSharableItem:
hasLoading
hasSteerable
hasAdvertisement
hasAlwaysLive
shouldPushArtworkData
userInterfaceLayoutDirection
T@"MPModelFileAsset",R,N
T@"MPModelHomeSharingAsset",R,N
T@"MPModelPlaybackPosition",R,N,V_playbackPosition
T@"MPModelStoreAsset",R,N
T@"<MPModelObjectPlaybackItemMetadataDelegate>",W,N,V_modelObjectDelegate
_modelObjectDelegate
_playbackPosition
modelObjectDelegate
setModelObjectDelegate:
modelObjectPlaybackItemMetadataWillDeallocate:
requiredHomeSharingAssetProperties
requiredLocalFileAssetProperties
requiredPlaybackPositionProperties
requiredStoreAssetProperties
_accessOrderedRequests
_requestToCachedResponse
addCachedResponse:forRequest:
cachedResponseForRequest:
updateForPlaybackOfFileAsset:fromResponse:
laterDate:
T@"MPStoreAssetInfoPlaybackCache",R,N
sharedCache
TQ,N,V_accountID
TQ,N,V_delegatedAccountID
Tq,N,V_requestType
T@"NSString",C,N,V_redownloadParameters
T@"NSString",C,N,V_cloudUniversalLibraryID
Tq,N,V_storeSubscriptionAdamID
TQ,N,V_storeCloudID
Tq,N,V_storePurchasedAdamID
Tq,N,V_storeRadioAdamID
_delegatedAccountID
_redownloadParameters
_cloudUniversalLibraryID
_storeCloudID
_storePurchasedAdamID
_storeRadioAdamID
accountID
setAccountID:
delegatedAccountID
setDelegatedAccountID:
requestType
setRequestType:
redownloadParameters
setRedownloadParameters:
setCloudUniversalLibraryID:
setStoreSubscriptionAdamID:
storeCloudID
setStoreCloudID:
setStorePurchasedAdamID:
storeRadioAdamID
setStoreRadioAdamID:
T@"NSMapTable",&,N
inputProtocols
outputProtocols
inputOperations
setInputOperations:
_middlewareOperationMap
_operations
operationsForMiddleware:
allMiddleware
allOperations
mapForRequest:
setBuilderSelector:
getArgument:atIndex:
numberOfArguments
methodSignature
allocWithProtocol:
T:,N,V_builderSelector
_builders
_middlewareEnumerator
_builderSelector
initWithMiddleware:protocol:
builderSelector
builderProxyForProtocol:
setReturnValue:
methodReturnLength
T@"NSString",C,N,V_clientVersion
T@"NSString",C,N,V_clientPlatformIdentifier
TQ,N,V_authenticationOptions
_didSetTimeoutInterval
_clientPlatformIdentifier
_authenticationOptions
clientPlatformIdentifier
setClientPlatformIdentifier:
authenticationOptions
setAuthenticationOptions:
__bookmarkTime_KEY
__shouldRememberBookmarkTime_KEY
__hasBeenPlayed_KEY
__stopTime_KEY
__storeUbiquitousIdentifier_KEY
__userPlayCount_KEY
T@"NSNumber",C,D,N
hlsURL
_playbackContext
_replaceIntent
initWithPlaybackContext:
getPlaybackContextWithCompletion:
initWithRequestedGroupPropertySet:requestedItemPropertySet:storeItemMetadataResults:flatSectionedItems:
sectionDataSources
T@"NSDictionary",R,N,G_sectionDataSources
T@"<MPSectionedIdentifierListAnnotationDelegate>",W,N,V_annotationDelegate
T@"<MPSectionedIdentifierListDelegate>",W,N,V_delegate
TB,N,V_automaticallyReversesNonDestructiveDataSourceEdits
_itemCount
_startEntries
_sectionHeadEntryMap
_sectionTransactionCallouts
_automaticallyReversesNonDestructiveDataSourceEdits
_annotationDelegate
initWithIdentifier:
_stitchWithPreviousEntry:list:cloneIndex:
_stitchLastItemEntryToHeadEntry:branchList:
_stitchPreviousEntry:toEntry:cloneIndex:
_encodeEntry:withExclusiveAccessToken:
performWithExclusiveAccess:
performWithExclusiveAccessAndReturnObject:
performWithExclusiveAccessAndReturnBOOL:
performWithExclusiveAccessAndReturnInteger:
enumeratorWithOptions:
enumeratorWithOptions:startPosition:endPosition:
addDataSource:section:afterHeadOfSection:completion:
allSectionIdentifiers
hasItem:inSection:
hasSection:
isDeletedItem:inSection:
dataSourceMoveItemToHead:inSection:
dataSourceMoveItem:afterItem:inSection:
dataSourceMoveItemToTail:inSection:
dataSourceUpdateSection:
dataSourceBeginTransationForSection:
dataSourceEndTransactinForSection:
_addBranchToEntry:entries:withExclusiveAccessToken:
_dataSourceInsertItems:fromSection:afterEntry:withExclusiveAccessToken:
_dataSourceMoveItem:inSection:afterEntry:withExclusiveAccessToken:
_entryForPosition:withExclusiveAccessToken:
_insertDataSourceHead:afterEntry:withExclusiveAccessToken:
_insertDataSource:forSection:afterEntry:withExclusiveAccessToken:
_itemEntry:sectionIdentifier:withExclusiveAccessToken:
_loadDataSource:forSection:completion:
_sectionDataSources
_startEntriesWithExclusiveAccessToken:
_tailEntryForSectionIdentifier:withExclusiveAccessToken:
_sectionHeadEntryMapWithExclusiveAccessToken:
_endEntryWithExclusiveAccessToken:
_performDelegateCalloutForSection:block:
automaticallyReversesNonDestructiveDataSourceEdits
setAutomaticallyReversesNonDestructiveDataSourceEdits:
annotationDelegate
setAnnotationDelegate:
reloadSection:completion:
initWithSection:sectionedIdentifierList:existingItemIdentifiers:
T@"NSMutableArray",&,N,V_mutableItemIdentifiers
T@"NSString",R,C,N,V_sectionIdentifier
T@"MPSectionedIdentifierList",R,W,N,V_sectionedIdentifierList
_mutableItemIdentifiers
insertItemsAtHead:
insertItems:afterItem:
insertItemsAtTail:
moveItemToHead:
moveItem:afterItem:
moveItemToTail:
updateSection
updateItem:
applyChanges:itemLookupBlock:
mutableItemIdentifiers
setMutableItemIdentifiers:
enumerateRangesUsingBlock:
insertObjects:atIndexes:
encodableNextEntriesWithExclusiveAccessToken:
T@"MPSectionedIdentifierListItemEntry",&,N,V_rootEntry
T@"NSMutableSet",&,N,V_clonedEntries
sortedArrayUsingDescriptors:
sortDescriptorWithKey:ascending:
_performWithoutRequiringExclusivity:
positionForItem:inSection:
positionForHeadOfSection:
positionForTailOfSection:
TB,R,N,V_didSetPlaylistUserImage
T@"MPSectionedCollection",C,N,V_playlistEntries
T@"NSString",C,N,V_playlistDescription
T@"NSString",C,N,V_playlistName
T@"UIImage",&,N,V_playlistUserImage
T@"NSNumber",C,N,GisPublicPlaylist,V_publicPlaylist
T@"NSNumber",C,N,GisVisiblePlaylist,V_visiblePlaylist
T@"NSNumber",C,N,GisCuratorPlaylist,V_curatorPlaylist
T@"NSNumber",C,N,V_isOwner
T@"NSString",C,N,V_authorStoreIdentifier
T@"MPModelPlaylist",&,N,V_parentPlaylist
TB,N,V_shouldCreatePlaylist
_shouldCreatePlaylist
_didSetPlaylistUserImage
_playlistEntries
_playlistDescription
_playlistName
_playlistUserImage
_publicPlaylist
_visiblePlaylist
_curatorPlaylist
_isOwner
_authorStoreIdentifier
_parentPlaylist
setPlaylistUserImage:
newOperationWithLocalPersistenceResponseHandler:completeResponseHandler:
playlistEntries
setPlaylistEntries:
playlistDescription
setPlaylistDescription:
playlistName
setPlaylistName:
playlistUserImage
isPublicPlaylist
setPublicPlaylist:
isVisiblePlaylist
setVisiblePlaylist:
isCuratorPlaylist
setCuratorPlaylist:
isOwner
setIsOwner:
authorStoreIdentifier
setAuthorStoreIdentifier:
parentPlaylist
setParentPlaylist:
shouldCreatePlaylist
setShouldCreatePlaylist:
didSetPlaylistUserImage
initWithRelatedMPModelClass:payloadTransformBlock:
mapRelationshipKey:toModelClass:payloadTransform:
translatorForKind:
_entityTranslator
_entityQueryResult
musicCellularStreamingAllowed
TB,N,GisMusicCellularStreamingAllowed
videoCellularStreamingAllowed
TB,N,GisVideoCellularStreamingAllowed
musicCellularDownloadingAllowed
TB,N,GisMusicCellularDownloadingAllowed
storeCellularNetworkingAllowed
TB,R,N,GisStoreCellularNetworkingAllowed
_musicCellularNetworkingAllowedNotifyToken
_videosPreferencesChangedToken
_networkUsageCount
_videosAllowsCellularStreaming
beginUsingNetwork
endUsingNetwork
isMusicCellularStreamingAllowed
setMusicCellularStreamingAllowed:
isVideoCellularStreamingAllowed
setVideoCellularStreamingAllowed:
isMusicCellularDownloadingAllowed
setMusicCellularDownloadingAllowed:
isStoreCellularNetworkingAllowed
isUsingNetwork
T@"MPNetworkObserver",R,N
sharedNetworkObserver
roomURLWithRoomID:storeBagDictionary:
countForObject:
mediaSubTypes
mpIsOnlyAC3
mpIsSDH
initWithRequestedPropertySet:storeItemMetadataResults:flatSectionedItems:
T@"NSObject<OS_dispatch_queue>",&,N,V_serialQueue
T@"NSMutableDictionary",&,N,V_endpoints
T@"MRAVRoutingDiscoverySessionConfiguration",R,N
T@"NSString",C,N,V_routingContextUID
_discoverySession
_callbackToken
_targetSessionID
_routingContextUID
_endpoints
initWithThrottlingEnabled:
setTargetSessionID:
setRoutingContextUID:
discoverySessionConfiguration
setPickedRoute:withPassword:completion:
_endpointsDidChange:
targetSessionID
routingContextUID
setSerialQueue:
endpoints
setEndpoints:
availableEndpoints
setTargetAudioSessionID:
initWithEndpointFeatures:
removeEndpointsChangedCallback:
addEndpointsChangedCallback:
discoverySessionWithConfiguration:
setEnableThrottling:
nullRef
TB,N,GisNullRef,V_nullRef
Tr^v,R,N,V_refValue
_nullRef
_refValue
initWithCFType:
refValue
isNullRef
setNullRef:
T@?,R,C,N,V_startHandler
_startHandler
initWithStartHandler:
startHandler
T@"NSNumber",R,C,N,V_storeAccountIdentifier
_storeAccountIdentifier
initWithStoreAccountIdentifier:
storeAccountIdentifier
T@"NSObject<OS_dispatch_queue>",R,&,N,V_queue
T@"NSObject<OS_dispatch_queue>",R,&,N,V_serviceQueue
T@"SBCPlaybackPositionSyncService",&,N,V_uppServiceProxy
T@"SBCPlaybackPositionDomain",&,N,V_uppDomain
serviceActive
TB,N,GisServiceActive,V_isServiceActive
beganUsingPlaybackPositionMetadata
TB,N,GisServiceActive,V_beganUsingPlaybackPositionMetadata
TB,N,V_databaseHasBookmarkableContents
TB,R,N,V_applicationBecomingActive
TB,N,V_externallyActive
_isServiceActive
_externallyActive
_beganUsingPlaybackPositionMetadata
_databaseHasBookmarkableContents
_applicationBecomingActive
_serviceQueue
_uppServiceProxy
_uppDomain
beginUsingPlaybackPositionMetadata
_applicationDidEnterForegroundNotification:
_defaultMediaLibraryDidChangeNotification:
noteChangedPlaybackPositionMetadataForTrackPersistentID:isCheckpoint:
setExternallyActive:
externallyActive
playbackPositionForLocalEntityIdentifier:
playbackPositionForLocalEntityIdentifiers:
persistPlaybackPositionMetadataEntity:isCheckpoint:completion:
_playbackPositionEntityWithValuesFromMusicLibraryTrackPersistentID:
_onQueue_shouldBeActive
_onQueue_isEnabled
_onServiceQueue_connectedUPPServiceProxy
_onServiceQueue_resignActiveService
_onServiceQueue_becomeActiveService
_onServiceQueue_updateActiveServiceIfNeeded
isServiceActive
setServiceActive:
uppServiceProxy
setUppServiceProxy:
uppDomain
setUppDomain:
setBeganUsingPlaybackPositionMetadata:
databaseHasBookmarkableContents
setDatabaseHasBookmarkableContents:
applicationBecomingActive
beginAccessingPlaybackPositionEntities
endAccessingPlaybackPositionEntities
serviceForSyncDomain:
domainForSyncingMusicLibraryWithLibraryPath:
initWithPlaybackPositionDomain:ubiquitousIdentifier:foreignDatabaseEntityID:
playbackPositionDomain
persistPlaybackPositionEntity:isCheckpoint:completionBlock:
pullLocalPlaybackPositionForEntityIdentifiers:completionBlock:
T@"MPUbiquitousPlaybackPositionController",R,N
sharedUbiquitousPlaybackPositionController
T^v,R,N,V_mediaRemoteContentItem
streamingContent
TB,N,GisStreamingContent
TB,N,GisExplicitContent
container
TB,N,GisContainer
playable
TB,N,GisPlayable
_mediaRemoteContentItem
initWithExternalRepresentation:
_initWithMediaRemoteContentItem:
createExternalRepresentation
subtitle
setSubtitle:
playbackProgress
setPlaybackProgress:
isContainer
setContainer:
setExplicitContent:
isStreamingContent
setStreamingContent:
isPlayable
setPlayable:
_postItemChangedNotificationWithDeltaBlock:
_loadArtwork:completion:
threadDictionary
isSuppressingChangeNotifications
performSuppressingChangeNotifications:
performChangeImmediately:
__hasSocialPosts_KEY
Tq,R,N,V_currentStatus
T{MPLibraryAddStatusObserverConfiguration=BBBBB},R,N,V_configuration
T@"MPModelObject",R,N,V_identifyingModelObject
_needsStatusUpdate
_cloudController
_cloudServiceStatusController
initWithUserIdentity:
configureWithModelObject:
setConfiguration:identifyingModelObject:
_allowsExplicitContentDidChangeNotification:
_cloudLibraryEnabledDidChangeNotification:
_subscriptionStatusDidChangeNotification:
_updateInProgressDidChangeNotification:
capabilities
__shortDescriptionText_KEY
_radioController
isEnabled
stationCount
stationWithIdentifier:
addStationBasedOnTrackIDs:completion:
_radioAvailabilityDidChangeNotification:
_radioRecentStationsDidChangeNotification:
_radioModelDidChangeNotification:
_radioModel
sharedModel
startWithAddStationCompletionHandler:
setIncludeCleanTracksOnly:
initWithRadioTrackDictionary:useArtist:
stationWithID:
userStations
stationSortOrdering
defaultRadioLibrary
TQ,R,N,V_persistentID
T{CGSize=dd},R,N,V_size
_size
initWithPersistentID:size:
T@"HSHomeSharingLibrary",&,N,V_library
artworkDataSourceWithIdentifier:
artworkDataSourceShortDescription
artworkDataSourceIdentifier
signedRequestFromURLRequest:
requestWithDatabaseID:itemID:size:
T^v,R,N,V_mrLanguageOption
T@"NSString",R,D,N
T@"NSArray",R,D,N
_mrLanguageOption
initWithType:languageTag:characteristics:displayName:identifier:
initWithMRLanguageOption:
isAutomaticLegibleLanguageOption
isAutomaticAudibleLanguageOption
languageOptionType
languageTag
languageOptionCharacteristics
displayName
copyExternalRepresentation
isEqualToLanguageOption:
mrLanguageOption
T^v,R,N,V_mrLanguageOptionGroup
T@"MPNowPlayingInfoLanguageOption",R,D,N
TB,R,D,N
_mrLanguageOptionGroup
initWithLanguageOptions:defaultLanguageOption:allowEmptySelection:
initWithMRLanguageOptionGroup:
languageOptions
defaultLanguageOption
allowEmptySelection
mrLanguageOptionGroup
T@"NSString",C,N,V_stationStringID
Tq,N,V_uniqueIdentifier
T@"NSString",C,N,V_localizedName
T@"NSString",C,N,V_localizedDescription
_localizedName
_localizedDescription
initWithPlayParameters:
initWithModelStation:
initWithStation:
setUniqueIdentifier:
setLocalizedName:
localizedDescription
setLocalizedDescription:
setStationStringID:
stationDescription
T@"NSSet",R,N,V_expectedNotifications
T@"NSMutableSet",&,N,V_receivedNotifications
T@"NSObject<OS_dispatch_source>",&,N,V_notificationTimer
T@"<_MPActiveUserChangeMonitorDelegate>",W,N,V_delegate
_expectedNotifications
_receivedNotifications
_notificationTimer
initWithDelegate:
ingestNotificationName:
_startNotificationTimerWithEventHandler:
_cancelNotificationTimerWithReason:
expectedNotifications
receivedNotifications
setReceivedNotifications:
notificationTimer
setNotificationTimer:
T@"<MPRemoteCommandDelegate_Internal>",W,N,V_commandCenterDelegate
observing
TB,N,GisObserving,V_observing
supportedAndEnabled
TB,R,N,GisSupportedAndEnabled
Tq,N,V_disabledReason
Td,N,V_timeout
TI,R,N,V_mediaRemoteCommandType
T@"<MPRemoteCommandDelegate_Private>",W,N,V_delegate
TB,N,V_skipSerializedEventDelivery
enabled
TB,N,GisEnabled,V_enabled
_handlers
_enabled
_observing
_skipSerializedEventDelivery
_mediaRemoteCommandType
_commandCenterDelegate
_disabledReason
initWithMediaRemoteCommandType:
setEnabled:
isSupportedForContentItemIdentifier:
isEnabledForContentItemIdentifier:
addTarget:action:
addTarget:action:usingExtendedStatus:
removeTarget:action:
removeTarget:
addTargetWithHandler:
isSupportedAndEnabled
hasTargets
invokeCommandWithEvent:completion:
_mediaRemoteCommandInfo
commandInfoRepresentations
notifyPropagatablePropertyChanged
newCommandEvent
newCommandEventWithContentItemIdentifier:
newCommandEventWithPlaybackQueueOffset:
newCommandEventWithCommandType:options:
newSeekCommandEventWithType:
_mediaRemoteCommandInfoOptions
commandCenterDelegate
setCommandCenterDelegate:
isObserving
setObserving:
disabledReason
setDisabledReason:
setTimeout:
skipSerializedEventDelivery
setSkipSerializedEventDelivery:
setCommand:
methodForSelector:
methodReturnType
msv_errorWithDomain:code:debugDescription:
remoteCommand:isEnabledForContentItemIdentifier:
remoteCommand:isSupportedForContentItemIdentifier:
T@"NSArray",C,N,V_preferredIntervals
_preferredIntervals
setPreferredIntervals:
newCommandEventWithInterval:
preferredIntervals
TB,N,GisActive,V_active
T@"NSString",C,N,V_localizedShortTitle
_presentationStyle
_localizedShortTitle
setLocalizedShortTitle:
presentationStyle
setPresentationStyle:
newCommandEventWithState:
localizedShortTitle
Tf,N,V_minimumRating
Tf,N,V_maximumRating
_minimumRating
_maximumRating
setMinimumRating:
setMaximumRating:
newCommandEventWithRating:
minimumRating
maximumRating
T@"NSArray",C,N,V_supportedPlaybackRates
_preferredRate
_supportedPlaybackRates
setSupportedPlaybackRates:
preferredRate
setPreferredRate:
newCommandEventWithPlaybackRate:
supportedPlaybackRates
Tq,N,V_currentRepeatType
_supportedRepeatTypes
_currentRepeatType
setCurrentRepeatType:
setSupportedRepeatTypes:
newCommandEventWithType:
newCommandEventWithType:preservesRepeatMode:
currentRepeatType
Tq,N,V_currentShuffleType
_supportedShuffleTypes
_currentShuffleType
setCurrentShuffleType:
setSupportedShuffleTypes:
newCommandEventWithType:preservesShuffleMode:
currentShuffleType
Tq,N,V_upNextItemCount
_registeredSpecializedQueues
_registeredQueueTypes
_registeredCustomQueueIdentifiers
_supportsSharedQueue
_upNextItemCount
setUpNextItemCount:
registerSpecializedQueueIdentifier:localizedName:queueType:queueParameters:
unregisterSpecializedQueueIdentifier:
registerSupportedQueueType:
unregisterSupportedQueueType:
registerSupportedCustomQueueIdentifier:
unregisterSupportedCustomQueueIdentifier:
setSupportedSharedQueue:
upNextItemCount
TB,N,V_canBeControlledByScrubbing
_canBeControlledByScrubbing
setCanBeControlledByScrubbing:
newCommandEventWithPositionTime:
canBeControlledByScrubbing
newCommandEventWithInsertingContentItemID:afterContentItemID:
T@"NSArray",C,N,V_supportedInsertionPositions
setSupportedInsertionPositions:
newCommandEventWithPreservesShuffleMode:
newCommandEventWithPreservesRepeatMode:
T@"NSString",C,N,V_currentPlaybackSessionIdentifier
T@"NSString",C,N,V_currentPlaybackSessionRevision
T@"NSArray",C,N,V_exportableSessionTypes
T@"NSArray",C,N,V_supportedSessionTypes
_currentPlaybackSessionIdentifier
_currentPlaybackSessionRevision
_exportableSessionTypes
_supportedSessionTypes
setCurrentPlaybackSessionIdentifier:
setExportableSessionTypes:
setSupportedSessionTypes:
currentPlaybackSessionIdentifier
currentPlaybackSessionRevision
setCurrentPlaybackSessionRevision:
exportableSessionTypes
supportedSessionTypes
T@"NSString",R,C,N,V_revision
commandInfoWithIdentifier:revision:priority:
T@"NSArray",C,N,V_preloadedSessions
_preloadedSessions
setPreloadedSessions:
preloadedSessions
Tq,N,V_currentQueueEndAction
T@"NSArray",C,N,V_supportedQueueEndActions
_currentQueueEndAction
_supportedQueueEndActions
setCurrentQueueEndAction:
setSupportedQueueEndActions:
currentQueueEndAction
supportedQueueEndActions
groupType
lastUpdatedDate
T@"NSDate",&,D,N
sectionedItems
T@"MPSectionedCollection",&,D,N
sectionIndex
subgroups
groupRecommendation
TB,N,GisGroupRecommendation,V_groupRecommendation
displaysAsGridCellInCarPlay
_refreshURL
_groupRecommendation
refreshURL
setRefreshURL:
isGroupRecommendation
setGroupRecommendation:
__groupType_KEY
__lastUpdatedDate_KEY
__sectionedItems_KEY
__sectionIndex_KEY
__subgroups_KEY
__loadAdditionalContentURL_KEY
__refreshURL_KEY
__displaysAsGridCellInCarPlay_KEY
position
socialContributor
_artworkCatalog
T@"MPArtworkCatalog",&,D,N
kindWithKinds:
__position_KEY
__socialContributor_KEY
___artworkCatalog_KEY
T@"NSArray",R,N,V_kinds
_kinds
kinds
T@"MRSendCommandResultStatus",R,C,N,V_mediaRemoteType
T@"MPRemoteCommandHandlerDialog",R,N
_dialog
statusCode
dialog
customData
customDataType
commandError
T@"MPRemoteCommandStatus",R,N
cacheStatus:forCommandID:
fetchStatusForCommandID:
successStatus
statusWithCode:
statusWithCode:error:
statusWithCode:dialog:
statusWithCode:customData:type:
T@,R,N,V_rawResponseOutput
T{?=BB},R,N,V_options
T@"MPModelStoreBrowseResponseParser",R,N,V_previousParser
T@"MPStoreItemMetadataResponse",R,N,V_additionalStoreItemMetadataResponse
T@"MPModelStoreBrowseSectionBuilder",R,N,V_sectionBuilder
T@"MPModelStoreBrowseContentItemBuilder",R,N,V_contentItemBuilder
T@"MPChangeDetails",R,N,V_changeDetails
_additionalContentIdentifiers
_allAdditionalContentIdentifiersNeedingLookup
_storePlatformDataResults
_unavailableContentIdentifiers
_previousParser
_additionalStoreItemMetadataResponse
initWithRawResponseOutput:options:sectionBuilder:contentItemBuilder:userIdentity:
initWithPreviousParser:additionalStoreItemMetadataResponse:options:sectionBuilder:contentItemBuilder:userIdentity:
additionalContentIdentifiers
allAdditionalContentIdentifiersNeedingLookup
_parse
_parseFeaturedContentStructureModelChildren:
_parseFeaturedContentChild:isMemberOfChartSet:insertingResultsToSectionedCollection:atSectionIndex:additionalContentIdentifiers:allAdditionalContentIdentifiersNeedingLookup:
_parseSingleContentListFromPageDataDictionary:isMemberOfChartSet:
_parseUsingAdditionalContentIdentifiersFromPreviousParser
_populateStorePlatformDataResultsFromRawResponseOutputDictionary:
_populateUnavailableContentIdentifiersFromPageDataDictionary:
_storeItemMetadataForContentIdentifier:
_storeItemMetadataIsAvailableForContentIdentifier:
rawResponseOutput
previousParser
additionalStoreItemMetadataResponse
sectionBuilder
contentItemBuilder
T@"NSNumber",C,N,V_accountIdentifier
T@"NSNumber",C,N,V_enqueuerAccountIdentifier
TB,N,GisPersonalized,V_personalized
T@"NSString",C,N,V_storefrontIdentifier
_personalized
_accountIdentifier
_enqueuerAccountIdentifier
_storefrontIdentifier
initWithRequest:response:
_isGoodCacheKey
accountIdentifier
setAccountIdentifier:
enqueuerAccountIdentifier
setEnqueuerAccountIdentifier:
setPersonalized:
isEqualToNumber:
getCacheKeyWithRequest:completionHandler:
_fastGetCacheKeyWithRequest:completionHandler:
_slowGetCacheKeyWithRequest:completionHandler:
buildURLRequestWithCompletionHandler:
initWithLongLong:
ic_valueForHTTPHeaderField:
setShouldUseMescalSigning:
setAnisetteVersion:
initWithURL:requestContext:
localStoreAccountProperties
isDelegated
T@"NSString",&,N,V_property
T@"MPPMediaPredicateValue",&,N,V_value
Ti,N,V_comparisonType
hasProperty
hasValue
setHasComparisonType:
hasComparisonType
writeInt32:forTag:
__sectionType_KEY
__uniformContentItemType_KEY
__memberOfChartSet_KEY
__brick_KEY
__previouslyRetrievedNestedResponse_KEY
sectionType
memberOfChartSet
TB,D,N,GisMemberOfChartSet
brick
TB,D,N,GisBrick
previouslyRetrievedNestedResponse
T@"MPModelStoreBrowseResponse",&,D,N
TB,N,V_containsOnlyEditorialElements
_containsOnlyEditorialElements
containsOnlyEditorialElements
setContainsOnlyEditorialElements:
T@"NSSet",R,N,V_properties
T@"NSDictionary",R,N,V_relationships
initWithProperties:relationships:
containsPropertySet:
propertySetByCombiningWithPropertySet:
propertySetByIntersectingWithPropertySet:
emptyPropertySet
intersectSet:
isSubsetOfSet:
addProperty:
removeProperty:
addRelationship:properties:
removeRelationship:
propertySetWithProperties:
finalResponse
TB,N,GisFinalResponse,V_finalResponse
T@"NSArray",C,N,V_cacheMissItemIdentifiers
T@"NSArray",C,N,V_requestItemIdentifiers
T@"NSArray",C,N,V_lastBatchItemIdentifiers
_cacheMissItemIdentifiers
_itemIdentifierToStoreItemMetadata
_allStoreItemDictionaries
_finalResponse
_lastBatchItemIdentifiers
_requestItemIdentifiers
allStoreItemDictionaries
cacheMissItemIdentifiers
earliestExpirationDate
storeItemMetadataForItemIdentifier:
storeItemMetadataForItemIdentifier:returningIsFinalMetadata:
setStoreItemMetadata:forItemIdentifier:
isFinalResponse
setFinalResponse:
lastBatchItemIdentifiers
setLastBatchItemIdentifiers:
requestItemIdentifiers
setRequestItemIdentifiers:
setCacheMissItemIdentifiers:
number
episodesCount
sortType
representativeEpisode
__number_KEY
__episodesCount_KEY
__sortType_KEY
__representativeEpisode_KEY
T@"MPModelTVEpisodeKind",R,N,V_episodeKind
Tq,N,SsetAVItemType:,V_avItemType
_avItemType
initWithAVItemType:
showInView:withCompletionHandler:
dismiss
avItemType
setAVItemType:
T@"NSArray",C,N,V_scopes
Tq,N,V_maximumResultsPerScope
_scopes
_maximumResultsPerScope
scopes
setScopes:
maximumResultsPerScope
setMaximumResultsPerScope:
hasMoreResultsForSectionAtIndex:
searchWeightForIndexPath:
T@"NSArray",R,C,N,V_resultContainers
_resultContainers
initWithEntitiesQueryResultContainers:
resultContainers
entityQueryResult
entityTranslationContext
scope
T{shared_ptr<mlcore::EntityQueryResult>=^{EntityQueryResult}^{__shared_weak_count}},R,N,V_entityQueryResult
T@"MPModelLibrarySearchScope",R,C,N,V_scope
T@"MPMediaLibraryEntityTranslationContext",R,N,V_entityTranslationContext
_scope
initWithEntityQueryResult:forScope:entityTranslationContext:
predicateWithBaseProperty:
applyToView:withContext:
representedSearchScopePredicate
T@"NSCache",&,N,V_fallbackCache
T@"MPArtworkResizeUtility",&,N,V_artworkResizeUtility
T@"NSString",C,N,V_mediaLibraryUniqueIdentifier
_mediaLibraryUniqueIdentifier
_existingRepresentationForArtworkCatalog:fromCacheOnly:
_resizeOriginalArtworkForArtworkCatalog:completionHandler:
fallbackCache
_cacheRepresentation:forCatalog:
_cachedRepresentationForCatalog:
_isRepresentation:validForCatalog:
_isRepresentationSize:validForFittingSize:
_representationAtSize:forCatalog:
_resizeArtwork:forCatalog:toSize:completionHandler:
mediaLibraryUniqueIdentifier
setMediaLibraryUniqueIdentifier:
setFallbackCache:
artworkResizeUtility
setArtworkResizeUtility:
sendRequest:completionHandler:
sharedService
addDestinationWithFormat:size:url:
addJPEGDestinationWithSize:compressionQuality:url:
initWithSourceURL:
initWithArtworkCatalog:representativeSize:
T@,C,N,V_catalogIdentifier
_catalogIdentifier
catalogIdentifier
setCatalogIdentifier:
initWithContentsOfFile:
initWithArtworkType:availableArtworkToken:fetchableArtworkToken:
T@"NSString",R,N,V_availableArtworkToken
T@"NSString",R,N,V_fetchableArtworkToken
Td,R,N,V_startTime
Td,R,N,V_endTime
Tq,R,N,V_songAdamID
T@"NSString",R,N,V_language
T@"NSString",R,N,V_countryCode
T@"NSString",R,N,V_signature
_language
_countryCode
_signature
initWithSong:language:startTime:endTime:
URLWithAdditionalParameters:completion:
signatureWithCountryCode:adamID:startTime:endTime:language:
language
countryCode
signature
base64EncodedStringWithOptions:
setLength:
setPercentEncodedQueryItems:
removeCharactersInString:
firstMatchInString:options:range:
filePath
nonPurgeable
TB,D,N,GisNonPurgeable
purchaseBundleFilePath
qualityType
hlsKeyServerURL
T@"NSString",C,D,N,SsetHLSKeyServerURL:
hlsKeyCertificateURL
T@"NSString",C,D,N,SsetHLSKeyCertificateURL:
__filePath_KEY
__fileSize_KEY
__nonPurgeable_KEY
__protectionType_KEY
__purchaseBundleFilePath_KEY
__qualityType_KEY
__hlsKeyServerURL_KEY
__hlsKeyCertificateURL_KEY
_artworkCatalogRepresentativeItem
artworkCatalogCachePropertiesForGroupingType:
albumArtistArtworkCatalog
artistArtworkCatalog
T@"MPMRAVOutputContextWrapper",&,N,V_applicationOutputContext
T@"MRAVRoutingDiscoverySession",&,N,V_companionDiscoverySession
T@"MRAVRoutingDiscoverySession",&,N,V_discoverySession
T@"MRAVEndpoint",R,N
T@"MRAVOutputDevice",&,N,V_predictedDevice
TB,N,V_supportsMultipleSelection
TB,N,V_detachesRoutesToGroup
TB,N,V_supportsQueueHandoff
T@"NSString",C,N,V_presentingAppBundleID
T@"MPAVEndpointRoute",&,N,V_endpointRoute
T@"NSString",&,N,V_initiator
TB,N,V_supportsRoutePrediction
_discoverySessionQueue
_attemptedToInitializeAppOutputContext
_companionCallbackToken
_didFindCompanion
_supportsMultipleSelection
_devicePresenceDetected
_outputDeviceRoutes
_shouldSourceOutputDevicesFromAVODDS
_routingSessionManager
_didFinishLoading
_detachesRoutesToGroup
_supportsQueueHandoff
_supportsRoutePrediction
_applicationOutputContext
_predictedDevice
_endpointRoute
_presentingAppBundleID
_initiator
_companionDiscoverySession
initWithEndpointRoute:
_initWithEndpointRoute:
applicationOutputContext
setEndpointRoute:
endpoint
endpointRoute
routingSessionManager
predictedDevice
setPredictedDevice:
didFinishLoading
setDidFinishLoading:
setDiscoverySession:
setCompanionDiscoverySession:
createGroupFromOutputDevices:queue:completion:
addRouteToGroup:completion:
addRoutesToGroup:completion:
removeRouteFromGroup:completion:
removeRoutesFromGroup:completion:
_endpointsDidChangeNotification:
_outputDevicesDidChangeNotification:
outputDevicesForRoutes:
_detachableDevicesInOutputDevices:
_shouldDetachOutputDevicesToGroup:
_shouldAddPredictedDeviceToOuputDevices:
_isRemovingPredictedDevice:
_personalRoutesDidChange
_outputDevicesDidChange:
_outputDeviceRouteWithUID:
_setShouldSourceOutputDevicesFromAVODDS:
_generateDiscoverySession
_resetPredictedOutputDevice
setApplicationOutputContext:
setSupportsMultipleSelection:
detachesRoutesToGroup
setDetachesRoutesToGroup:
supportsQueueHandoff
setSupportsQueueHandoff:
presentingAppBundleID
setPresentingAppBundleID:
initiator
setInitiator:
supportsRoutePrediction
setSupportsRoutePrediction:
companionDiscoverySession
discoverySession
availableOutputDevices
supportsBluetoothSharing
isGroupable
isEligibleForWHAPlayback
msv_filter:
designatedGroupLeader
addOutputDevices:initiator:withReplyQueue:completion:
migrateToOrAddOutputDevices:initiator:withReplyQueue:completion:
activeActivityExistsForBundle:
createEndpointWithOutputDeviceUIDs:queue:completion:
setOutputDevices:initiator:withReplyQueue:completion:
migrateToOrSetOutputDevices:initiator:withReplyQueue:completion:
isLocalEndpoint
filterUsingPredicate:
personalOutputDevices
deviceID
outputDeviceDescriptions
currentRoutingSession
isLocalDevice
logicalDeviceID
isCompanionEndpoint
addOutputDevicesChangedCallback:
removeOutputDevicesChangedCallback:
longFormVideoRoutingSessionManager
unlock
lock
_globalAudioSessionLock
_internalUserActivity
setPayloadIdentifier:object:withBlock:
_setExternalMediaContentBundleIdentifier:
externalMediaContentIdentifier
setExternalMediaContentIdentifier:
_externalMediaContentBundleIdentifier
objectForIdentifier:
payloadForIdentifier:
setPayload:object:identifier:
T@"UIControl<MPDetailedScrubbing>",W,N,V_scrubbingControl
T@"<MPDetailScrubControllerDelegate>",W,N,V_delegate
Td,N,V_scrubbingVerticalRange
TB,N,V_detailedScrubbingEnabled
TB,R,N,V_isTracking
Tq,R,N,V_currentScrubSpeed
_didBeginTracking
_needsCommit
_accumulatedDelta
_beginLocationInView
_lastCommittedLocationInView
_currentValue
_detailedScrubbingEnabled
_scrubbingControl
_scrubbingVerticalRange
_currentScrubSpeed
initWithScrubbingControl:
durationAllowsForDetailedScrubbing
scaleForVerticalPosition:
_minimumScale
_scaleForIdealValueForVerticalPosition:
_beginScrubbing
_endScrubbing
_commitValue:
scrubbingControl
setScrubbingControl:
scrubbingVerticalRange
setScrubbingVerticalRange:
detailedScrubbingEnabled
setDetailedScrubbingEnabled:
currentScrubSpeed
T@"MPPropertySet",R,C,N,V_requestedProperties
_requestedProperties
initWithRequestedProperties:
genericObjectForStorePlatformMetadata:userIdentity:
requestedProperties
collectionStoreAdamID
offerWithType:
lightweightPersonalizationPropertiesForModelClass:
_lightweightPersonalizationPropertiesForPlaybackPosition
_lightweightPersonalizationPropertiesForStoreAsset
_lightweightPersonalizationPropertiesForLyrics
Tq,R,N,V_personalizationStyle
initWithModel:personalizationStyle:
T^{__CFUserNotification=},R,N,V_cfUserNotification
_callbackInvocationQueue
_willShowNotificationHandler
strongSelf
_isShowing
_runLoopSource
_showingCompletionHandlers
_cfUserNotification
initWithCFUserNotification:
willShowNotificationHandler
setWillShowNotificationHandler:
showWithCompletionHandler:
_cancelSynchronously:
_didReceiveResponseWithFlags:
cfUserNotification
_userNotificationForCFUserNotification:
_setUserNotification:forCFUserNotification:
_userNotificationConversionAccessQueue
_mediaLibraryDataProvider
_mediaLibraryDataProviderRespondsToSupportsEntityChangeTrackingMethod
_rwlock
_entityCacheMapLock
_deallocLaterQueue
_concreteEntitiesByDataProviderEntityClass
_entityTemporaryReferences
initWithMediaLibraryDataProvider:
itemWithIdentifier:
itemWithIdentifier:loadEntityBlock:
collectionWithIdentifier:grouping:loadEntityBlock:
updatePropertyValuesInEntityWithIdentifier:dataProviderEntityClass:deleted:
removeEntityWithIdentifier:dataProviderEntityClass:
_entityWithIdentifier:mediaEntityType:collectionGroupingType:loadEntityBlock:
_entityMapForDataProviderEntityClass:
_clearSomeGlobalEntityTemporaryReferences
_performWithExclusiveAccessForDataProviderEntityClass:block:
_performWithSharedAccessForDataProviderEntityClass:block:
T@"MPAVRouteConnection",&,N
T@"MPMRAVEndpointWrapper",&,N,V_endpointWrapper
_sortName
_endpointWrapper
initWithEndpoint:
sortName
establishGroup
endpointWrapper
setEndpointWrapper:
setConnection:
canModifyGroupMembership
_endpointDidChange:
_endpointOutputDevicesDidChange:
_groupLeaderIsOfDeviceSubtype:
_outputDevicesComposition
canRelayCommunicationChannel
isRemoteControllable
getActiveEndpointRouteWithCompletion:
_reportConcernBagDictionary
submitReport:completion:
deleteComment:activityID:completion:
deletePost:completion:
_performWithBag:
reportsForType:contentID:aucType:commentText:
baseURLStringForReport
_dictionariesForType:
_deleteCommentURLComponentsFromBag:
_deletePostURLComponentsFromBag:
componentsWithString:
T@"NSString",C,N,V_displayText
T@"NSString",C,N,V_userID
T@"NSString",C,N,V_contentID
Tq,N,V_concernItemType
T@"NSString",C,N,V_commentText
T@"NSString",C,N,V_aucType
T@"NSString",C,N,V_concernTypeID
_userID
_contentID
_concernItemType
_commentText
_aucType
_concernTypeID
_displayText
userID
setUserID:
contentID
setContentID:
concernItemType
setConcernItemType:
commentText
setCommentText:
aucType
setAucType:
concernTypeID
setConcernTypeID:
displayText
setDisplayText:
ic_URLByAppendingQueryParameters:
T@"MPStoreContentReporter",R,N
sharedReporter
T@"NSString",R,C,N,V_title
T@"NSString",R,C,N,V_subtitle
T@"NSData",R,C,N,V_artworkImageData
_subtitle
_artworkImageData
setArtworkImageData:
initWithTitle:subtitle:artworkImageData:
artworkImageData
T@"MPMediaItem",&,N,V_mediaItem
Tq,N,V_keepLocal
_keepLocal
keepLocal
setKeepLocal:
T@"MPModelLibraryKeepLocalChangeRequest",C,N,V_request
_handlePersistentID:modelClass:keepLocal:mediaLibrary:
_handleKeepLocalUpdateStatus:forLibraryIdentifier:mediaType:completedWithError:
TB,R,N,V_didFinishLoading
TB,R,N,V_devicePresenceDetected
Tq,N,V_filterMode
TI,N,V_targetSessionID
_workerQueue
_activeAudioCategory
_filterMode
getExternalScreenTypeWithCompletion:
unpickAirPlayAVRoutesWithCompletion:
_reloadActiveAudioCategoryWithCompletion:
activeAudioCategory
_superclassRegisterNotifications
_superclassUnregisterNotifications
filterMode
setFilterMode:
attributeForKey:
__endpointType_KEY
__redownloadParameters_KEY
__redownloadable_KEY
__accountIdentifier_KEY
__shouldReportPlayEvents_KEY
__needsUserUpload_KEY
redownloadable
TB,D,N,GisRedownloadable
needsUserUpload
T@"NSString",R,N,V_playlistGlobalID
Tq,R,N,V_tasteType
T@"NSUUID",R,N,V_UUID
_playlistGlobalID
_tasteType
_UUID
initWithPlaylistGlobalID:tasteType:
initWithStoreAdamID:tasteType:
_initializeWithType:tasteType:
playlistGlobalID
tasteType
UUID
creator
T@"MPModelTVShowCreator",C,D,N
shortTitle
kindWithSeasonKind:
__shortTitle_KEY
__creator_KEY
T@"MPModelTVSeasonKind",R,C,N,V_seasonKind
_seasonKind
seasonKind
TB,N,V_shouldContain
T^q,R,N
setShouldContain:
setHasShouldContain:
hasShouldContain
persistentIDsCount
clearPersistentIDs
addPersistentIDs:
persistentIDsAtIndex:
setPersistentIDs:count:
writeInt64:forTag:
writeBOOL:forTag:
raise
T@"ICStoreArtworkInfo",R,N
T@"NSString",C,N,V_resolvedURLString
T@"NSArray",C,N,V_artworkTemplateItems
TQ,N,V_mediaType
Tq,N,V_mediaLibraryArtworkType
_resolvedURLString
_artworkTemplateItems
_mediaLibraryArtworkType
artworkInfo
resolvedURLString
setResolvedURLString:
artworkTemplateItems
setArtworkTemplateItems:
mediaLibraryArtworkType
setMediaLibraryArtworkType:
Ti,N,V_type
Tq,N,V_integerPredicateValue
Td,N,V_doublePredicateValue
Tf,N,V_floatPredicateValue
TB,N,V_boolPredicateValue
T@"NSString",&,N,V_stringPredicateValue
T@"NSData",&,N,V_bytesPredicateValue
_doublePredicateValue
_integerPredicateValue
_bytesPredicateValue
_floatPredicateValue
_stringPredicateValue
_boolPredicateValue
setIntegerPredicateValue:
setHasIntegerPredicateValue:
hasIntegerPredicateValue
setDoublePredicateValue:
setHasDoublePredicateValue:
hasDoublePredicateValue
setFloatPredicateValue:
setHasFloatPredicateValue:
hasFloatPredicateValue
setBoolPredicateValue:
setHasBoolPredicateValue:
hasBoolPredicateValue
hasStringPredicateValue
hasBytesPredicateValue
integerPredicateValue
doublePredicateValue
floatPredicateValue
boolPredicateValue
stringPredicateValue
setStringPredicateValue:
bytesPredicateValue
setBytesPredicateValue:
writeFloat:forTag:
writeDouble:forTag:
uncensoredName
biography
TB,D,N,GisPrivate
verified
TB,D,N,GisVerified
pendingRequestsCount
__uncensoredName_KEY
__biography_KEY
__privatePerson_KEY
__verified_KEY
__pendingRequestsCount_KEY
T@"MPMusicPlayerControllerNowPlaying",&,N
T@"MPMusicPlayerQueueDescriptor",&,N
_defaults
hasCachedData
clearCache
_objectOfClass:forKey:error:
_saveObject:forKey:error:
encodedDataWithRootObject:error:
decodedObjectOfClass:fromData:error:
dataForKey:
T@"MPMusicPlayerControllerSystemCache",R,N
_transientStates
followPerson:completion:
unfollowPerson:completion:
requestFollowPerson:completion:
cancelFollowRequestOnPerson:completion:
blockPerson:completion:
unblockPerson:completion:
removeFollower:completion:
transientFollowStateForPerson:
acceptAllFollowRequestsWithCompletion:
acceptFollowRequestFromPerson:completion:
declineFollowRequestFromPerson:completion:
transientFollowPendingRequestStateForPerson:
_handleTransientStateForPersonDidChangeNotification:
_performTransientFollowState:onPerson:completion:
_performTransientFollowPendingRequestState:onPerson:completion:
_transientStateForPerson:shouldCreate:
_populateTransientStatesSnapshot:
_notifyTransientStatesDidChangeWithSnapshot:
_transientStatesDidChange
_queue_transientStatesDidChange
_newOperationForRemovingFollower:completion:
_transientFollowStatesPerProfileID
_transientFollowPendingRequestStatesPerProfileID
_addTransientFollowState:transientFollowPendingRequestState:forPerson:
followPendingRequestState
followState
setCompletionBlock:
initWithPerson:
T@"MPModelSocialPerson",R,N,V_person
T@?,C,N,V_completionBlock
_followState
_followPendingRequestState
_latestFollowOperation
_latestFollowPendingRequestOperation
_completionBlock
newOperationForTransientFollowState:completion:
newOperationForTransientFollowPendingRequestState:completion:
_endIfNeeded
completionBlock
_internalErrorForHTTPResponseCode:
T{shared_ptr<std::map<std::string, mlcore::ModelPropertyBase *>>=^v^{__shared_weak_count}},N,V_propertiesToFetchMap
T{shared_ptr<std::map<std::string, mlcore::ModelPropertyBase *>>=^v^{__shared_weak_count}},N,V_propertiesToSortMap
T@?,C,N,V_sortTransformer
T@?,C,N,V_valueTransformer
_sortTransformer
_valueTransformer
_propertiesToFetchMap
_propertiesToSortMap
propertiesToFetchMap
setPropertiesToFetchMap:
propertiesToSortMap
setPropertiesToSortMap:
sortTransformer
setSortTransformer:
valueTransformer
setValueTransformer:
transient
TB,R,N,GisTransient,V_transient
T^v,R,N,V_entityClass
T@?,C,N,V_allowedItemPredicatesBlock
T@?,C,N,V_entityQueryBlock
_transient
_allowedItemPredicatesBlock
_entityQueryBlock
mapIdentifierMLProperties:identifierCreationBlock:
mapPropertyKey:toMLProperty:
mapPropertyKey:withPropertiesToFetch:valueTransformer:
mapPropertyKey:withPropertiesToFetch:propertiesToSort:sortTransformer:valueTransformer:
mapRelationshipKey:toModelClass:usingForeignPropertyBase:
mapRelationshipKey:toModelClass:transient:usingForeignPropertyBase:
mapRelationshipKey:toModelClass:transient:usingForeignPropertyBase:relationshipValidationProperties:isValidRelationshipHandler:
objectForPropertySet:entity:context:
identifiersForEntity:context:
entityQueryForPropertySet:sortDescriptors:context:view:
propertiesQueryForPropertySet:scopedContainers:allowedItemIdentifiers:view:
MLCorePropertiesForPropertySet:
MLCoreSortDescriptorsForModelSortDescriptors:
propertiesToFetchForPropertyKey:
_propertyTranslatorForKeyPath:
_propertyForKeyPath:
_propertyMapForKeyPath:includePropertiesToSort:
_valueForKeyPath:forEntity:context:
_objectForPropertySet:entity:baseTranslator:prependKeyPath:context:
_MLCorePropertiesForPropertySet:withForeignPropertyBase:
isTransient
entityClass
allowedItemPredicatesBlock
setAllowedItemPredicatesBlock:
entityQueryBlock
setEntityQueryBlock:
foreignPropertyBase
entityTranslator
relationshipValidationProperties
validRelationshipHandler
relationshipModelClass
ascending
setModelKind:
modelKind
setRelationshipValidationProperties:
setValidRelationshipHandler:
setForeignPropertyBase:
setRelationshipModelClass:
setTransient:
T#,N,V_relationshipModelClass
TB,N,V_transient
T^v,N,V_foreignPropertyBase
T{shared_ptr<std::map<std::string, mlcore::ModelPropertyBase *>>=^v^{__shared_weak_count}},N,V_relationshipValidationProperties
T@?,C,N,V_validRelationshipHandler
T@"MPMediaLibraryEntityTranslator",R,N
_relationshipModelClass
_foreignPropertyBase
_validRelationshipHandler
_relationshipValidationProperties
_MPMediaLibraryEntityTranslator_MLCoreSortDescriptorOrdering
isMultiQuery
_translatorForMPModelClass:mlcoreEntityClass:create:transient:
translatorForMPModelClass:mlcoreEntityClass:
translatorForTransientMPModelClass:
T@"NSArray",&,N,V_allowedEntityIdentifiers
T@"NSArray",&,N,V_scopedContainers
multiQuery
TB,N,GisMultiQuery,V_multiQuery
T@"MPModelKind",&,N,V_modelKind
T@"NSString",&,N,V_personID
T@"NSString",&,N,V_filterText
_multiQuery
_allowedEntityIdentifiers
_modelKind
allowedEntityIdentifiers
setAllowedEntityIdentifiers:
setMultiQuery:
_mediaClipBuilder
_requestedMovieProperties
setClips:
T@"NSString",C,N,V_containerUniqueID
T@"NSString",C,N,V_handoffCorrelationID
T@"NSString",C,N,V_lyricsID
TB,N,V_shouldExcludeFromShuffle
TB,N,GisPlaceholder,V_placeholder
T@"NSString",C,N,V_vendorID
Tq,N,V_syncID
T@"NSString",C,N,V_socialProfileID
T@"NSString",C,N,V_informalMediaClipID
T@"NSString",C,N,V_informalStaticAssetID
T@"MPModelKind",R,N,V_modelKind
T@"<MPLocalLibraryIdentifiers>",R,N
T@"<MPPersonalStoreIdentifiers>",R,N
T@"<MPUniversalStoreIdentifiers>",R,N
T@"<MPRadioIdentifiers>",R,N
Tq,N,V_persistentID
Tq,N,V_containedPersistentID
T@"NSString",R,N,V_databaseID
TQ,N,V_cloudID
T@"NSString",C,N,V_cloudAlbumID
T@"NSString",C,N,V_recommendationID
T@"NSString",R,N,V_personID
Tq,N,V_adamID
T@"NSArray",C,N,V_formerAdamIDs
T@"NSString",C,N,V_universalCloudLibraryID
Tq,N,V_purchasedAdamID
Tq,N,V_subscriptionAdamID
Tq,N,V_reportingAdamID
Tq,N,V_assetAdamID
T@"NSString",C,N,V_stationHash
Tq,N,V_stationID
T@"NSString",C,N,V_stationEventID
_shouldExcludeFromShuffle
_placeholder
_databaseID
_containedPersistentID
_syncID
_cloudID
_cloudAlbumID
_recommendationID
_adamID
_formerAdamIDs
_universalCloudLibraryID
_purchasedAdamID
_subscriptionAdamID
_socialProfileID
_informalMediaClipID
_informalStaticAssetID
_reportingAdamID
_assetAdamID
_stationHash
_stationEventID
_containerUniqueID
_handoffCorrelationID
_vendorID
TB,N,GisPlaceholder
setLibraryIdentifiersWithDatabaseID:block:
setPersonalStoreIdentifiersWithPersonID:block:
setUniversalStoreIdentifiersWithBlock:
setRadioIdentifiersWithBlock:
setContainerUniqueID:
handoffCorrelationID
setHandoffCorrelationID:
shouldExcludeFromShuffle
setShouldExcludeFromShuffle:
setPlaceholder:
vendorID
setVendorID:
setStationHash:
setStationID:
stationEventID
setStationEventID:
adamID
setAdamID:
formerAdamIDs
setFormerAdamIDs:
universalCloudLibraryID
setUniversalCloudLibraryID:
setPurchasedAdamID:
setSubscriptionAdamID:
setSocialProfileID:
informalMediaClipID
setInformalMediaClipID:
informalStaticAssetID
setInformalStaticAssetID:
reportingAdamID
setReportingAdamID:
assetAdamID
setAssetAdamID:
setCloudID:
setCloudAlbumID:
recommendationID
setRecommendationID:
setPersistentID:
containedPersistentID
setContainedPersistentID:
syncID
setSyncID:
_initWithModelKind:block:
initWithModelKind:block:
copyWithBlock:
personalizedStore
universalStore
radio
intersectsSet:
hasCommonIdentifierWithIdentifierSet:
unionSet:
deviceLibraryPersistentID
setDeviceLibraryPersistentID:
radioStationStringID
setRadioStationStringID:
radioStationHash
setRadioStationHash:
radioStationID
setRadioStationID:
setStoreAdamID:
setFormerStoreAdamIDs:
storeCloudAlbumID
setStoreCloudAlbumID:
storeRecommendationID
setStoreRecommendationID:
identifierDescriptions:
preferredStoreStringIdentifierForPersonID:
prioritizedStoreStringIdentifiersForPersonID:
needsPersonalization
_setDefaultDatabaseIDIfNeeded
_setDefaultPersonIDIfNeeded
emptyIdentifierSet
explicitEpisode
TB,D,N,GisExplicitEpisode
__explicitEpisode_KEY
__streamURL_KEY
__seasonNumber_KEY
T@"BSUIEmojiLabelView",&,N,V_contentView
Tq,N,V_minimumEndCharacterCount
T@"NSString",R,C,N,V_text
Tq,N,V_truncationMode
TB,N,V_forcesUppercaseText
TB,N,V_displayAsSiriSuggestion
T@"MPAVRoute",&,N,V_route
T@"UILabel",R,N
T@"UIColor",&,N,V_textColor
Tq,N,V_textAlignment
TB,N,S_setTextColorFollowsTintColor:
_designatedGroupLeaderName
_previousDesignatedGroupLeaderName
_previousBounds
_previousFont
_previousRouteNames
_previousForcesUppercaseText
_previousDisplayAsSiriSuggestion
_previousTruncationMode
_routeNames
_sizingLabel
_forcesUppercaseText
_displayAsSiriSuggestion
_minimumEndCharacterCount
_text
_truncationMode
_route
_contentView
_textAlignment
titleLabel
_baselineOffsetFromBottom
_textColorFollowsTintColor
setMinimumEndCharacterCount:
setTextColor:
setTextAlignment:
setTruncationMode:
setDisplayAsSiriSuggestion:
_setTextColorFollowsTintColor:
addRouteName:
addRouteNamesFromArray:
removeRouteName:
removeRouteNamesFromArray:
_formattedRouteNameForDesignatedGroupLeaderNameText:routeNamesText:
_routeNamesSortedAlphanumeric:
_routeNamesSortedLength:
_plusSeparatedRouteNames:
_labelSizeForText:
_labelFitsText:withSize:
_updateRouteLabel
_truncateText:by:
_updateTitleIfNeeded
_bestStringThatFitsSize:
_marketingNames
_routeDidChangeNotification:
_compareLength:with:
minimumEndCharacterCount
truncationMode
displayAsSiriSuggestion
contentView
setContentView:
textAlignment
localizedUppercaseString
compare:options:
contentLabel
T@"ML3ArtworkConfiguration",&,N,V_artworkConfiguration
_artworkConfiguration
initWithConfigurationDictionaries:
supportedSizesForMediaType:artworkType:
sizesToAutogenerateForMediaType:artworkType:
artworkConfiguration
setArtworkConfiguration:
systemConfiguration
Tq,N,V_maximumTVShowRatingForAgeGate
Tq,N,V_maximumMovieRatingForAgeGate
TB,R,N,V_allowsAccountModification
TB,R,N,V_allowsDeletion
TB,R,N,V_allowsExplicitContent
TB,R,N,V_allowsMusicSubscription
TB,R,N,V_allowsStorePurchases
TB,R,N,V_allowsRadioPurchases
TB,R,N,V_allowsMusicVideos
_cachedSettings
_allowsAccountModification
_allowsDeletion
_allowsExplicitContent
_allowsMusicSubscription
_allowsStorePurchases
_allowsRadioPurchases
_allowsMusicVideos
_maximumTVShowRatingForAgeGate
_maximumMovieRatingForAgeGate
profileConnectionDidReceiveRestrictionChangedNotification:userInfo:
profileConnectionDidReceivePasscodeChangedNotification:userInfo:
profileConnectionDidReceivePasscodePolicyChangedNotification:userInfo:
profileConnectionDidReceiveProfileListChangedNotification:userInfo:
profileConnectionDidReceiveEffectiveSettingsChangedNotification:userInfo:
profileConnectionDidReceiveDefaultsChangedNotification:userInfo:
profileConnectionDidReceiveAppWhitelistChangedNotification:userInfo:
hasRestrictionsPasscode
maximumTVShowRating
maximumMovieRating
effectiveValueForSetting:
_isRunningInStoreDemoMode
_cacheValue:forSetting:
_updateWithCanPostNotifications:
allowsAccountModification
allowsDeletion
allowsExplicitContent
allowsMusicSubscription
allowsStorePurchases
allowsRadioPurchases
allowsMusicVideos
maximumTVShowRatingForAgeGate
setMaximumTVShowRatingForAgeGate:
maximumMovieRatingForAgeGate
setMaximumMovieRatingForAgeGate:
effectiveBoolValueForSetting:
notificationWithName:object:
isRunningInStoreDemoMode
settingEnabled
sharedConnection
T@"MPRestrictionsMonitor",R,N
sharedRestrictionsMonitor
T@"NSString",C,N,V_volumeAudioCategory
T@"<MPVolumeControllerDataSourceDelegate>",W,N,V_delegate
T@"NSString",R,C,N,V_volumeControlLabel
TB,R,N,GisVolumeControlAvailable,V_volumeControlAvailable
Tf,N,V_volume
TB,N,GisMuted,V_muted
TB,R,N,V_volumeWarningEnabled
Tq,R,N,V_volumeWarningState
Tf,R,N,V_EUVolumeLimit
_debugVolumeWarning
_volumeInitialized
_volumeControlCapabilitiesInitialized
_avSystemController
_volumeControlAvailable
_volumeWarningEnabled
_volume
_EUVolumeLimit
_volumeAudioCategory
_volumeControlLabel
_volumeWarningState
T@"<MPVolumeControllerDataSourceDelegate>",W,N
reloadWarning
initializeVolume
reload
applicationShouldOverrideHardwareVolumeBehavior
updateVolume:
updateVolumeControlCapabilities:
_mediaPlaybackVolumeAudioCategory
_reloadQueue
_EUVolumeLimitDidChange:
_EUVolumeLimitEnforcedDidChange:
_updateRouteLabelForRoute:
_volumeDidChangeNotification:
_volumeControlCapabilitiesDidChangeNotification:
_systemVolumeDidChange:
_systemMuteDidChange:
_reloadEUVolumeLimits
_setup
_tearDown
_volumeApplyingEUVolumePolicyToVolume:
currentRouteHasVolumeControl
getVolume:forCategory:
volumeCategoryForAudioCategory:
setVolumeTo:forCategory:
T@"MPAVRoute",&,N,V_groupRoute
T@"MPAVRoute",&,N,V_outputDeviceRoute
_pendingVolume
_hasPendingVolume
_hasVolumeInFlight
_volumeCapabilitiesInitialized
initWithGroupRoute:outputDeviceRoute:
_setPendingVolumeIfNeeded
_sendVolumeButtonEventWithUsagePage:usage:down:
_updateVolumeControlCapabilities:
_routeVolumeDidChangeNotification:
_routeVolumeControlCapabilitiesDidChangeNotification:
containsUID:
Tq,N,V_artworkInfoType
T@"ICStoreArtworkInfo",C,N,V_imageArtworkInfo
T@"ICStoreVideoArtworkInfo",C,N,V_videoArtworkInfo
T@"NSString",C,N,V_cropStyle
T@"NSString",C,N,V_format
T@"NSString",C,N,V_sourceEditorialArtworkKind
T@"NSURL",C,N,V_artworkURL
_artworkInfoType
_imageArtworkInfo
_videoArtworkInfo
_cropStyle
_format
_sourceEditorialArtworkKind
_artworkURL
artworkInfoType
setArtworkInfoType:
imageArtworkInfo
setImageArtworkInfo:
videoArtworkInfo
setVideoArtworkInfo:
cropStyle
setCropStyle:
format
setFormat:
sourceEditorialArtworkKind
setSourceEditorialArtworkKind:
tokenWithImageArtworkInfo:
tokenWithVideoArtworkInfo:
T@"NSDictionary",R,N,V_attributes
canceled
TB,R,N,GisCanceled
finished
TB,R,N,GisFinished
purchasing
TB,R,N,GisPurchasing
paused
TB,R,N,GisPaused
restore
TB,R,N,GisRestore
_canceled
_overridePhaseIdentifiers
_SSDownload
_SSPurchase
_SSPurchaseResponse
_downloadFilePath
initWithType:attributes:
bytesDownloaded
bytesTotal
downloadSizeLimit
failureError
isCanceled
isPurchasing
isRestore
isPaused
libraryItemIdentifier
percentComplete
phaseIdentifier
purchaseError
rentalInformation
storeItemIdentifier
assetsForType:
resetCachedRentalInformation
_isCanceled
_setCanceled:
_setSSDownload:
_setSSPurchase:SSPurchaseResponse:
_getDownloadFilePath
_setDownloadFilePath:
_addOverridePhaseIdentifier:
_removeOverridePhaseIdentifier:
_currentOverridePhaseIdentifier
_valueForDownloadProperty:
valueForDownloadProperty:
enumerateObjectsWithOptions:usingBlock:
resetCachedExternalProperties:count:
valueForExternalProperty:
downloadPhaseIdentifier
placeholderDownloadIdentifier
persistentIdentifier
_SSPurchaseForType:attributes:
storeDownloadForMediaItem:type:attributes:
storeDownloadWithDownloadIdentifier:
setRequestProperties:
setURLBagKey:
setValue:forDownloadProperty:
setDisplaysOnLockScreen:
setBackgroundPurchase:
setShouldInvertBoolValue:
addUserDefaultState:
setFallbackNumberValue:
setDownloadSizeLimit:
setNetworkTypes:
setDownloadPolicy:
setPolicyRules:
policyRules
setCellularDataStates:
initWithDownloadKind:URLBagType:
downloadPolicy
setIgnoresForcedPasswordRestriction:
setBuyParameters:
initWithPersistentIdentifier:
usingNetwork
TB,R,N,GisUsingNetwork
_calloutSerialQueue
_blockObservers
_downloadKindToRequiredClientBundleIdentifiers
_downloads
_userDownloads
_downloadIdentifiersToDownloads
_downloadsToObservers
_libraryIdentifiersToDownloads
_observersForAllDownloads
_storeIdentifiersToDownloads
_fetchedInitialDownloads
_downloadManager
_purchaseManager
downloadHandlerDidDisconnect:
downloadHandler:handleSession:
downloadHandler:cancelSession:
downloadHandler:pauseSession:
downloadHandler:handleAuthenticationSession:
alertView:clickedButtonAtIndex:
alertViewCancel:
willPresentAlertView:
didPresentAlertView:
alertView:willDismissWithButtonIndex:
alertView:didDismissWithButtonIndex:
alertViewShouldEnableFirstOtherButton:
purchaseManager:didFinishPurchasesWithResponses:
downloadManager:downloadStatesDidChange:
downloadManagerActiveDownloadsDidChange:
downloadManagerDownloadsDidChange:
downloadManagerNetworkUsageDidChange:
activeDownloads
downloads
userDownloads
addDownloads:
addFinishHandler:forDownloads:
addObserver:forDownloads:
pauseDownloads:
resumeDownloads:
restartDownloads:
downloadForDownloadPersistentIdentifier:
downloadForMediaItem:
downloadForMediaItemPersistentID:
downloadForStoreID:
prioritizeDownloads:
removeObserver:forDownloads:
reloadFromServer
requestPermissionToDownloadWithType:completionHandler:
_addPurchaseFinishedHandler:forDownloads:
hasFetchedInitialDownloads
_existingDownloadForSSDownload:
_observersForDownload:
_onQueue_addDownloadToMapTables:
_onQueue_findStoreDownloadWithSSDownload:SSPurchase:
_onQueue_hasExistingDownloadForStoreDownload:
_onQueue_removeDownloadFromMapTables:
_registerBlockObserver:
_sendActiveDownloadsDidChangeToObserversWithAddedDownloads:removedDownloads:
_sendDownloadsDidChangeToObserversWithAddedDownloads:removedDownloads:
_sendDownloadsDidFinishPurchasesToObserversForDownloads:
_sendDownloadsDidFinishToObserversForDownloads:notifyDownloadManager:completionHandler:
_sendDownloadsDidProgressToObserversForDownloads:
_shouldHideDownload:
_unregisterBlockObserver:
_updateActiveDownloadsWithChangedActiveDownloads:inactiveDownloads:
_updateDownloadsWithAdditions:removals:
_updateMediaItemPropertiesForFinishedStoreDownload:SSDownload:
_addNonCancelledDownloadsToActiveList:
_updateActiveDownloadsWithCancelledDownloads:
_isActiveDownload:
removeObjectsInArray:
minusSet:
downloadManager:downloadDidProgress:
downloadManager:downloadsDidProgress:
finishDownloads:
downloadManager:downloadDidFinish:
downloadManager:downloadPurchaseDidFinish:
downloadManager:didAddDownloads:removeDownloads:
downloadManager:didAddActiveDownloads:removeActiveDownloads:
T@?,C,N,V_didFinishDownloadHandler
T@?,C,N,V_didFinishPurchaseHandler
T@"MPStoreDownload",R,N,V_download
_didFinishDownloadHandler
_didFinishPurchaseHandler
_download
initWithDownload:
didFinishDownloadHandler
setDidFinishDownloadHandler:
didFinishPurchaseHandler
setDidFinishPurchaseHandler:
download
purchase
prioritizeAboveDownload:completionBlock:
movePurchases:afterPurchase:withCompletionBlock:
moveDownload:afterDownload:completionBlock:
restartDownloads:completionBlock:
resumeDownloads:completionBlock:
cancelPurchases:withCompletionBlock:
pauseDownloads:completionBlock:
cancelDownloads:completionBlock:
addPurchases:withCompletionBlock:
getPurchasesUsingBlock:
initWithManagerIdentifier:
getDownloadsUsingBlock:
initWithManagerOptions:
setShouldFilterExternalOriginatedDownloads:
setPrefetchedDownloadProperties:
setPrefetchedDownloadExternalProperties:
setPersistenceIdentifier:
IPodDownloadKinds
setDownloadKinds:
initWithKeyPointerFunctions:valuePointerFunctions:capacity:
initWithOptions:
setDescriptionFunction:
setSizeFunction:
setIsEqualFunction:
setHashFunction:
setRelinquishFunction:
setAcquireFunction:
MPSD_mediaQueryForDownloadableEntities
MPSD_mediaQueryForDownloadingEntities
MPSD_hasDownloadableEntities
MPSD_hasDownloadingEntities
MPSD_mediaItemPropertiesForDownloadability
MPSD_isDownloadable
MPSD_isDownloadInProgress
hasCapability:
_requestedSocialPersonProperties
setVerified:
setPrivatePerson:
setUncensoredName:
maximumItemTrackNumber
TB,D,N,GisCompilation
classical
TB,D,N,GisClassical
representativeSong
TB,D,N,GisPreorder
songPopularityBlock
kindWithSongKind:
kindWithSongKind:options:
kindWithVariants:songKind:
kindWithVariants:songKind:options:
__representativeSong_KEY
__maximumItemTrackNumber_KEY
__discCount_KEY
__compilation_KEY
__classical_KEY
__preorder_KEY
__songPopularityBlock_KEY
T@"MPModelSongKind",R,N,V_songKind
_songKind
songKind
MPSD_hasDownloadableItem
MPSD_hasDownloadingItem
T@"MPPPropertyPredicate",&,N,V_propertyPredicate
T@"MPPCompoundPredicate",&,N,V_compoundPredicate
T@"MPPConditionalPredicate",&,N,V_conditionalPredicate
T@"MPPPersistentIDsPredicate",&,N,V_persistentIDsPredicate
T@"MPPSearchStringPredicate",&,N,V_searchStringPredicate
_compoundPredicate
_persistentIDsPredicate
_propertyPredicate
_searchStringPredicate
setHasType:
hasType
hasPropertyPredicate
hasCompoundPredicate
hasPersistentIDsPredicate
hasSearchStringPredicate
propertyPredicate
setPropertyPredicate:
compoundPredicate
setCompoundPredicate:
persistentIDsPredicate
setPersistentIDsPredicate:
searchStringPredicate
setSearchStringPredicate:
T@"MRContentItemMetadataAudioRoute",R,N,V_mediaRemoteAudioRoute
spatializationEnabled
TB,N,GisSpatializationEnabled
_mediaRemoteAudioRoute
initWithMediaRemoteAudioRoute:
supportsSpatialization
setSupportsSpatialization:
isSpatializationEnabled
setSpatializationEnabled:
mediaRemoteAudioRoute
{?="initialized"b1"itemType"b1"detailedItemType"b1"artist"b1"album"b1"curator"b1"episode"b1"movie"b1"playlist"b1"radioStation"b1"socialPerson"b1"song"b1"season"b1"show"b1"showCreator"b1"aucType"b1"recordLabel"b1}
@"MPStoreModelAlbumBuilder"
@"MPStoreModelArtistBuilder"
@"MPStoreModelCuratorBuilder"
@"MPStoreModelTVEpisodeBuilder"
@"MPStoreModelMovieBuilder"
@"MPStoreModelRadioStationBuilder"
@"MPStoreModelSocialPersonBuilder"
@"MPStoreModelPlaylistBuilder"
@"MPStoreModelTVSeasonBuilder"
@"MPStoreModelSongBuilder"
@"MPStoreModelTVShowBuilder"
@"MPStoreModelTVShowCreatorBuilder"
@"MPStoreModelRecordLabelBuilder"
@24@0:8@16
q24@0:8q16
q24@0:8@16
@40@0:8@16@24@32
B16@0:8
v20@0:8B16
v16@0:8
Q40@0:8^{?=Q^@^Q[5Q]}16^@24Q32
@16@0:8
v24@0:8@16
v24@0:8q16
v32@0:8q16@?24
v48@0:8q16q24q32@?40
q16@0:8
@24@0:8q16
@32@0:8@16^q24
v24@0:8@?16
@"NSDictionary"
@32@0:8@16^@24
v32@0:8@16@?24
@32@0:8@16@24
B24@0:8@16
#16@0:8
@24@0:8:16
@32@0:8:16@24
@40@0:8:16@24@32
B24@0:8#16
B24@0:8@"Protocol"16
B24@0:8:16
Vv16@0:8
Q16@0:8
^{_NSZone=}16@0:8
@"NSString"16@0:8
@"NSData"16@0:8
@"NSArray"16@0:8
@"MPModelSocialPerson"16@0:8
v24@0:8@"MPModelSocialPerson"16
@"MPModelSocialPerson"
{shared_ptr<mlcore::DeviceLibraryView>="__ptr_"^{DeviceLibraryView}"__cntrl_"^{__shared_weak_count}}
@"MPMediaLibrary"
@24@0:8^{_NSZone=}16
@32@0:8@16Q24
{shared_ptr<mlcore::DeviceLibraryView>=^{DeviceLibraryView}^{__shared_weak_count}}16@0:8
v40@0:8{shared_ptr<mlcore::Query>=^{Query}^{__shared_weak_count}}16@?32
v40@0:8{shared_ptr<mlcore::LocalizedSearchQuery>=^{LocalizedSearchQuery}^{__shared_weak_count}}16@?32
{shared_ptr<mlcore::QueryResult>=^{QueryResult}^{__shared_weak_count}}40@0:8{shared_ptr<mlcore::Query>=^{Query}^{__shared_weak_count}}16^@32
@32@0:8@16d24
@24@0:8d16
@"NSString"
@"NSOperationQueue"
@"NSError"
@"NSObject<OS_dispatch_queue>"
@"NSArray"
@24@0:8@?16
d16@0:8
v24@0:8d16
@"NSError"16@0:8
@?<v@?@"NSString">16@0:8
v24@0:8@?<v@?@"NSString">16
@?16@0:8
@"MPModelRequest"
@"MPPropertySet"
@"MPSectionedCollection"
@"NSHashTable"
@"NSMapTable"
v32@0:8@16Q24
q20@0:8I16
{os_unfair_lock_s="_os_unfair_lock_opaque"I}
@"RTCReporting"
@"NSMutableArray"
i16@0:8
I16@0:8
v20@0:8i16
v20@0:8I16
v32@0:8@16@24
@"<NSCopying>"
@24@0:8Q16
B24@0:8q16
v24@0:8Q16
S16@0:8
@"MPModelLibraryDeleteEntityChangeRequest"
v40@0:8q16#24@32
@"AVAsset"
@"AVPlayerItem"
@"MPQueueFeeder"
@"MPNowPlayingContentItem"
{?="value"q"timescale"i"flags"I"epoch"q}
@"<MPAVItemObserver>"
@"MPMediaItem"
@"MPModelGenericObject"
@"MPModelPlayEvent"
@"NSNumber"
@"ICMusicSubscriptionLeaseStatus"
v32@0:8d16d24
v20@0:8f16
{CGSize=dd}16@0:8
f36@0:8Q16q24B32
v28@0:8f16@?20
{?=qiIq}16@0:8
f28@0:8Q16B24
v32@0:8q16@24
f16@0:8
^{OpaqueCMTimebase=}16@0:8
v48@0:8@16@24@32^v40
d24@0:8@16
v28@0:8d16f24
v40@0:8q16@24@?32
@"ICClientInfo"
@"ICUserIdentity"
@"ICUserIdentityStore"
@"MPQueueFeederIdentifierRegistry"
@"NSData"
B24@0:8@?16
q24@0:8@?16
v40@0:8@16@24@?32
@"MPModelObject"
@"NSDate"
@"MPStoreItemMetadata"
v24@0:8@"NSCoder"16
@24@0:8@"NSCoder"16
@"NSCountedSet"
@"NSCache"
B24@0:8@"MPArtworkCatalog"16
B32@0:8@"MPArtworkRepresentation"16@"MPArtworkCatalog"24
@"MPArtworkRepresentation"24@0:8@"MPArtworkCatalog"16
v32@0:8@"MPArtworkCatalog"16@?<v@?@"MPArtworkRepresentation"@"NSError">24
v24@0:8@"MPArtworkCatalog"16
@"<MPArtworkDataSourceVisualIdenticality>"24@0:8@"MPArtworkCatalog"16
@40@0:8q16@"MPArtworkCatalog"24@"NSDictionary"32
v56@0:8q16@"MPArtworkCatalog"24@"NSDictionary"32@?<v@?@?<v@?@@"NSError">>40@?<v@?@@"NSError">48
v32@0:8@"MPArtworkCatalog"16@?<v@?@"MPExportableArtworkProperties"@"NSError">24
B32@0:8q16@"MPArtworkCatalog"24
@"MPArtworkRepresentation"32@0:8q16@"MPArtworkCatalog"24
v40@0:8q16@"MPArtworkCatalog"24@?<v@?@"MPArtworkRepresentation"@"NSError">32
@40@0:8q16@24@32
v56@0:8q16@24@32@?40@?48
B32@0:8q16@24
@32@0:8q16@24
B32@0:8@16@24
@28@0:8@16B24
{CGSize=dd}56@0:8{CGSize=dd}16Q32Q40d48
@"MPMediaLibraryView"
{shared_ptr<mlcore::Query>="__ptr_"^{Query}"__cntrl_"^{__shared_weak_count}}
{shared_ptr<mlcore::Query>=^{Query}^{__shared_weak_count}}16@0:8
v32@0:8{shared_ptr<mlcore::Query>=^{Query}^{__shared_weak_count}}16
@"MPModelLibraryRequest"
@"MPModelTVEpisode"
@"MPAVRoutingController"
@"MPAVRoute"
^{__CFRunLoopTimer=}
@"NSObject<OS_dispatch_source>"
@"MPAVItem"
@"NSNotification"
@"NSMutableSet"
@"MPAVPolicyEnforcer"
@"MPQueuePlayer"
@"<MPAVQueueCoordinating>"
@"<MPAVQueueController>"
v24@0:8@"NSString"16
v40@0:8@"NSString"16@"NSString"24Q32
v40@0:8@16@24Q32
v24@0:8@"<MPAVQueueController>"16
v32@0:8@"<MPAVQueueController>"16@"MPAVItem"24
v32@0:8@"<MPAVQueueController>"16@"MPPlaybackContext"24
v32@0:8@"<MPAVQueueController>"16q24
v32@0:8@"<MPAVQueueController>"16@"NSString"24
v32@0:8@16q24
v24@0:8@"MPAVRoutingController"16
v32@0:8@"MPAVRoutingController"16@"NSError"24
v32@0:8@"MPAVRoutingController"16@"NSArray"24
v32@0:8@"MPAVRoutingController"16@"MPAVRoute"24
v64@0:8@"MPAVRoutingController"16@"MPAVRoute"24q32@"NSString"40@"NSString"48@?<v@?B>56
v28@0:8@"MPAVRoutingController"16B24
v64@0:8@16@24q32@40@48@?56
v28@0:8@16B24
B32@0:8q16q24
B36@0:8q16q24B32
B44@0:8q16q24B32^@36
B48@0:8q16q24B32B36^@40
v24@0:8f16B20
v28@0:8Q16B24
v32@0:8@16B24B28
v24@0:8B16B20
B20@0:8f16
B28@0:8f16@?20
B40@0:8f16B20@24@?32
v32@0:8d16q24
v40@0:8d16q24@?32
B24@0:8Q16
d44@0:8B16{?=qiIq}20
Q24@0:8@16
v36@0:8q16q24B32
v24@0:8^{__CFRunLoopTimer=}16
v48@0:8q16@24@32@40
v40@0:8{?=qiIq}16
@32@0:8d16@?24
@"NSDate"16@0:8
v24@0:8@"NSDate"16
@"NSXPCConnection"
@"BKSProcessAssertion"
{?="initialized"b1"beats1"b1"name"b1"editorNotes"b1"shortEditorNotes"b1"explicit"b1"type"b1"subtype"b1"artwork"b1"stationGlyph"b1"attributionLabel"b1"providerName"b1"live"b1}
@32@0:8Q16Q24
v24@0:8^v16
@"NSMutableDictionary"16@0:8
@"MRContentItemMetadataAudioFormat"
@"NSMutableDictionary"
@"ICStoreFileAssetInfo"
@"<MPMediaRemoteEntityArtworkGenerator>"
v32@0:8@16:24
v32@0:8@16#24
@40@0:8d16@24@?32
@44@0:8d16B24@28@?36
@36@0:8d16B24@?28
@"MPAVController"
{CGSize="width"d"height"d}
@40@0:8@16{CGSize=dd}24
@"MPMediaQuery"
@32@0:8^{_MRSystemAppPlaybackQueue=}16@24
B24@0:8^@16
^{_MRSystemAppPlaybackQueue=}
^{_MRSystemAppPlaybackQueue=}16@0:8
@24@0:8^{_MRSystemAppPlaybackQueue=}16
v28@0:8#16i24
@"MPIdentifierSet"
@"MPRouteLabel"
@"UIImageView"
@"UIFont"
@"UIColor"
{UIEdgeInsets="top"d"left"d"bottom"d"right"d}
@48@0:8{CGRect={CGPoint=dd}{CGSize=dd}}16
B40@0:8{CGPoint=dd}16@32
{CGSize=dd}32@0:8{CGSize=dd}16
{UIEdgeInsets=dddd}16@0:8
v48@0:8{UIEdgeInsets=dddd}16
@"MPModelSong"
{?="initialized"b1"title"b1"type"b1"loadAdditionalContentURL"b1"previouslyRetrievedNestedResponse"b1"uniformContentItemType"b1"memberOfChartSet"b1"displaysAsGridCellInCarPlay"b1"brick"b1}
@56@0:8@16@24q32B40B44@48
@72@0:8@16@24q32B40B44B48@52B60q64
@80@0:8@16@24q32B40B44B48@52B60q64@72
@20@0:8B16
@"MPModelStoreBrowseSectionBuilder"
@"MPModelStoreBrowseContentItemBuilder"
@"NSIndexSet"
@"NSRegularExpression"
@80@0:8@16@24@32@40@48@56Q64@72
{?="initialized"b1"copyrightText"b1"title"b1"trackCount"b1"maximumItemTrackNumber"b1"discCount"b1"hasCleanContent"b1"hasExplicitContent"b1"libraryAdded"b1"keepLocalEnableState"b1"keepLocalManagedStatus"b1"libraryAddEligible"b1"compilation"b1"classical"b1"releaseDate"b1"artwork"b1"year"b1"preorder"b1"editorNotes"b1"shortEditorNotes"b1"volumeNormalization"b1"songPopularity"b1"representativeSong"b1"traits"b1"artist"{?="identifiers"b1"name"b1}"genre"{?="identifiers"b1"name"b1}}
@"_MPSSILImplementation"
v24@0:8@"_MPSSILImplementation"16
v24@0:8@"MPShuffleableSectionedIdentifierList"16
v40@0:8@"MPSectionedIdentifierList"16@"NSArray"24@"NSString"32
v32@0:8@"MPSectionedIdentifierList"16@"NSString"24
v40@0:8@16@24@32
v40@0:8q16@24@32
@48@0:8Q16@24@32@40
v56@0:8@16@24@32@40@?48
v48@0:8@16@24@32@?40
v44@0:8@16@24B32@?36
v60@0:8@16@24B32@36@44@?52
v52@0:8@16@24B32@36@?44
v48@0:8@16@24@32@40
@"MPRandomDistribution"
@48@0:8@16@24@32@40
v36@0:8@16@24B32
v52@0:8@16@24B32@36@44
v44@0:8@16@24B32@36
@"MPStoreLyricsSnippetURLComponents"
{shared_ptr<mlcore::LocalizedSearchScope>="__ptr_"^{LocalizedSearchScope}"__cntrl_"^{__shared_weak_count}}
@"MPModelKind"
{shared_ptr<mlcore::LocalizedSearchScope>=^{LocalizedSearchScope}^{__shared_weak_count}}16@0:8
@"MPModelLibraryAlbumAppDataChangeRequest"
@"MPModelPlaylist"
@"MPChangeDetails"
@"MPModelStoreBrowseResponseParser"
@60@0:8@16{CGSize=dd}24B40@44@?52
@"AVOutputDeviceDiscoverySession"
@"<MPAVLightweightRoutingControllerDelegate>"
@40@0:8@16@?24@?32
@44@0:8@16B24@?28@?36
v32@0:8q16q24
@"MPStoreModelStoreAssetBuilder"
{?="initialized"b1"title"b1"shortTitle"b1"editorNotes"b1"shortEditorNotes"b1"editorialArtwork"b1"artwork"b1"episodeCount"b1"tagline"b1}
@"MPSectionedIdentifierList"
@"MPSectionedIdentifierListEntry"
@56@0:8@16Q24@32@40@48
@"<MPSectionedIdentifierListEnumerationItem>"16@0:8
@"<MPSectionedIdentifierListEnumerationTrackingEntry>"16@0:8
@"_MPSectionedIdentifierListProxyEntry"
@"ICStoreHLSAssetInfo"
@"NSTimer"
@"UILabel"
@"UIView"
@"UIImage"
@"UILayoutGuide"
@"MPVolumeController"
@"MPAVEndpointRoute"
@"MPAVOutputDeviceRoute"
@"UIWindowScene"16@0:8
v28@0:8@"MPVolumeController"16B24
v28@0:8@"MPVolumeController"16I24
v32@0:8@"MPVolumeController"16@"NSString"24
v28@0:8@"MPVolumeController"16f24
v32@0:8@"MPVolumeController"16q24
v28@0:8@16I24
v28@0:8@16f24
@56@0:8{CGRect={CGPoint=dd}{CGSize=dd}}16q48
@72@0:8{CGRect={CGPoint=dd}{CGSize=dd}}16q48@56@64
{CGRect={CGPoint=dd}{CGSize=dd}}84@0:8{CGRect={CGPoint=dd}{CGSize=dd}}16{CGRect={CGPoint=dd}{CGSize=dd}}48f80
{CGRect={CGPoint=dd}{CGSize=dd}}48@0:8{CGRect={CGPoint=dd}{CGSize=dd}}16
{CGRect={CGPoint=dd}{CGSize=dd}}16@0:8
@"MPAVLightweightRoutingController"
@"UIButton"
@"MPVolumeSlider"
v28@0:8@"MPAVLightweightRoutingController"16B24
v32@0:8@"MPAVLightweightRoutingController"16@"NSArray"24
v64@0:8^{CGRect={CGPoint=dd}{CGSize=dd}}16^{CGRect={CGPoint=dd}{CGSize=dd}}24{CGRect={CGPoint=dd}{CGSize=dd}}32
{_NSRange="location"Q"length"Q}
{_NSRange=QQ}16@0:8
v32@0:8{_NSRange=QQ}16
@"MPMediaLibraryConnectionAssertion"
@"NSOperation"32@0:8q16@?<v@?@"MPLibraryKeepLocalStatusObserverConfiguration"@"NSError">24
@32@0:8q16@?24
{shared_ptr<mlcore::EntityQuery>="__ptr_"^{EntityQuery}"__cntrl_"^{__shared_weak_count}}
{shared_ptr<mlcore::EntityQuery>=^{EntityQuery}^{__shared_weak_count}}16@0:8
v32@0:8{shared_ptr<mlcore::EntityQuery>=^{EntityQuery}^{__shared_weak_count}}16
@40@0:8^Q16^Q24^B32
v48@0:8@16Q24Q32@?40
@48@0:8Q16@24Q32@40
@44@0:8B16^Q20^Q28^B36
@72@0:8q16q24Q32Q40@48Q56@64
@"NSURL"
@"MPSectionedIdentifierListEntryPositionKey"
@"MPSectionedIdentifierListHeadEntry"
@"MPSectionedIdentifierListTailEntry"
@"MPSectionedIdentifierListItemEntry"
@"<MPSectionedIdentifierListDataSource>"
{?=BBBBBBBBq}16@0:8
@"MPRemoteCommand"
@36@0:8@16I24@28
@"MPRemotePlaybackQueue"
@"MPNowPlayingInfoLanguageOption"
@"MPMediaLibraryEntityTranslationContext"
{vector<long long, std::allocator<long long>>="__begin_"^q"__end_"^q"__end_cap_"{__compressed_pair<long long *, std::allocator<long long>>="__value_"^q}}
{map<long long, unsigned long, std::less<long long>, std::allocator<std::pair<const long long, unsigned long>>>="__tree_"{__tree<std::__value_type<long long, unsigned long>, std::__map_value_compare<long long, std::__value_type<long long, unsigned long>, std::less<long long>, true>, std::allocator<std::__value_type<long long, unsigned long>>>="__begin_node_"^v"__pair1_"{__compressed_pair<std::__tree_end_node<std::__tree_node_base<void *> *>, std::allocator<std::__tree_node<std::__value_type<long long, unsigned long>, void *>>>="__value_"{__tree_end_node<std::__tree_node_base<void *> *>="__left_"^v}}"__pair3_"{__compressed_pair<unsigned long, std::__map_value_compare<long long, std::__value_type<long long, unsigned long>, std::less<long long>, true>>="__value_"Q}}}
{shared_ptr<std::vector<std::shared_ptr<mlcore::Entity>>>="__ptr_"^v"__cntrl_"^{__shared_weak_count}}
{shared_ptr<mlcore::EntityQueryResult>="__ptr_"^{EntityQueryResult}"__cntrl_"^{__shared_weak_count}}
Q24@0:8Q16
@24@0:8@"NSIndexPath"16
@"MPIdentifierSet"24@0:8@"NSIndexPath"16
@"MPIdentifierSet"24@0:8q16
@"NSIndexPath"24@0:8@"MPIdentifierSet"16
B24@0:8@"<MPLazySectionedCollectionDataSource>"16
@56@0:8@16{shared_ptr<mlcore::EntityQueryResult>=^{EntityQueryResult}^{__shared_weak_count}}24{shared_ptr<std::vector<std::shared_ptr<mlcore::Entity>>>=^v^{__shared_weak_count}}40
@32@0:8{shared_ptr<mlcore::EntityQueryResult>=^{EntityQueryResult}^{__shared_weak_count}}16
{shared_ptr<std::vector<std::shared_ptr<mlcore::Entity>>>=^v^{__shared_weak_count}}16@0:8
{shared_ptr<mlcore::EntityQueryResult>=^{EntityQueryResult}^{__shared_weak_count}}16@0:8
@"MPModelStoreBrowseResponse"
@"MPModelAlbumKind"
@"MPAVRoutingControllerSelectionQueue"
@"<MPAVRoutingControllerDelegate>"
@"MPAVRoutingDataSource"
@"<MPAVOutputDevicePlaybackDataSource>"
v32@0:8d16@?24
v40@0:8@16q24@?32
q24@0:8^B16
B40@0:8@16@24@?32
B32@0:8@16@?24
@"MPAVRoutingControllerSelection"
@"MSVTimer"
@32@0:8@16q24
v48@0:8d16q24@32@?40
B48@0:8@16^@24^@32^@40
B32@0:8@16^@24
@"_MPModelShimRequestMiddleware"
@"MPModelResponse"
@"NSArray"24@0:8@"MPRequest"16
v24@0:8@"NSArray"16
{shared_ptr<mlcore::DeviceLibrary>="__ptr_"^{DeviceLibrary}"__cntrl_"^{__shared_weak_count}}
{shared_ptr<mlcore::DeviceLibrary>=^{DeviceLibrary}^{__shared_weak_count}}16@0:8
v32@0:8{shared_ptr<mlcore::DeviceLibrary>=^{DeviceLibrary}^{__shared_weak_count}}16
{map<MPModelStoreBrowseDetailedContentItemType, unsigned long, std::less<MPModelStoreBrowseDetailedContentItemType>, std::allocator<std::pair<const MPModelStoreBrowseDetailedContentItemType, unsigned long>>>="__tree_"{__tree<std::__value_type<MPModelStoreBrowseDetailedContentItemType, unsigned long>, std::__map_value_compare<MPModelStoreBrowseDetailedContentItemType, std::__value_type<MPModelStoreBrowseDetailedContentItemType, unsigned long>, std::less<MPModelStoreBrowseDetailedContentItemType>, true>, std::allocator<std::__value_type<MPModelStoreBrowseDetailedContentItemType, unsigned long>>>="__begin_node_"^v"__pair1_"{__compressed_pair<std::__tree_end_node<std::__tree_node_base<void *> *>, std::allocator<std::__tree_node<std::__value_type<MPModelStoreBrowseDetailedContentItemType, unsigned long>, void *>>>="__value_"{__tree_end_node<std::__tree_node_base<void *> *>="__left_"^v}}"__pair3_"{__compressed_pair<unsigned long, std::__map_value_compare<MPModelStoreBrowseDetailedContentItemType, std::__value_type<MPModelStoreBrowseDetailedContentItemType, unsigned long>, std::less<MPModelStoreBrowseDetailedContentItemType>, true>>="__value_"Q}}}
@"MPMusicPlayerQueueDescriptor"
@32@0:8q16q24
@40@0:8#16@24q32
@32@0:8@16B24B28
v40@0:8Q16@24@?32
@32@0:8@16@?24
@32@0:8Q16@24
@32@0:8{CGSize=dd}16
v32@0:8{CGSize=dd}16
@"MPPlaybackArchiveDisplayProperties"
v40@0:8@"NSString"16@"NSString"24@"NSData"32
v24@0:8@"MPPlaybackArchiveDisplayProperties"16
@72@0:8q16@24@32@40@48Q56@64
v28@0:8B16q20
@"MPMediaQueryCriteria"
@"<MPPProtobufferCoding>"32@0:8@"PBCodable"16@"MPMediaLibrary"24
@"<MPPProtobufferCoding>"24@0:8@"PBCodable"16
@"PBCodable"24@0:8@"MPMediaLibrary"16
@"PBCodable"16@0:8
v32@0:8^q16^@24
@40@0:8@16@24q32
v28@0:8B16@?20
@"MPMediaPredicate"
@"NSSet"
r^q16@0:8
@36@0:8r^q16Q24B32
v32@0:8Q16Q24
@"MPModelLibraryImportChangeRequest"
{?="initialized"b1"name"b1"trackCount"b1"editorNotes"b1"shortEditorNotes"b1"releaseDate"b1"lastModifiedDate"b1"artwork"b1"editorialArtwork"b1"tracksTiledArtwork"b1"hasCleanContent"b1"hasExplicitContent"b1"type"b1"libraryAdded"b1"keepLocalEnableState"b1"keepLocalManagedStatus"b1"curatorPlaylist"b1"owner"b1"publicPlaylist"b1"visiblePlaylist"b1"subscribed"b1"userEditableComponents"b1"shareURL"b1"shareShortURL"b1"descriptionText"b1"cloudVersionHash"b1"traits"b1"curator"{?="identifiers"b1"name"b1"handle"b1}}
@"MPMusicPlayerControllerNowPlaying"
@"MPMusicPlayerControllerNowPlayingTimeSnapshot"
v24@0:8@"MPMusicPlayerServerStateUpdateRecord"16
v24@0:8@"MPMusicPlayerQueueDescriptor"16
v24@0:8@"MPMusicPlayerControllerNowPlaying"16
v24@0:8@"MPMusicPlayerControllerNowPlayingTimeSnapshot"16
v32@0:8@?16@?24
v36@0:8@?16@?24B32
@40@0:8{CGSize=dd}16@32
@48@0:8@16{CGSize=dd}24@40
@"MPArtworkRepresentation"
@40@0:8@16@24Q32
@"MPArtworkRepresentationCollection"
@"<MPArtworkDataSource>"
@"<_MPArtworkCatalogOverlayDelegate>"
v40@0:8@16Q24@?32
v36@0:8@16B24q28
v36@0:8B16@20@28
v48@0:8q16@24@32q40
v44@0:8B16@20@28q36
@"MPPMediaPredicate"
@"ICUserIdentity"16@0:8
v24@0:8@"ICUserIdentity"16
B24@0:8d16
v28@0:8d16B24
@32@0:8q16Q24
@32@0:8q16d24
Q24@0:8q16
v56@0:8^I16^Q24^Q32^I40^I48
@40@0:8{CGSize=dd}16@?32
@"<MPMediaLibraryDataProviderPrivate>"
@"QueryCriteriaResultsCache"
@"NSPointerArray"
@"_MPActiveUserChangeMonitor"
^{os_unfair_lock_s=I}
B40@0:8^B16^B24@?32
B48@0:8^B16^B24Q32@?40
B32@0:8Q16q24
@32@0:8Q16q24
@36@0:8Q16q24B32
@28@0:8Q16B24
v40@0:8@16@24q32
v48@0:8@16@24q32@?40
B48@0:8r^Q16Q24q32^Q40
B40@0:8@16q24^Q32
B40@0:8q16q24^Q32
@64@0:8@16@24@32@40@?48@?56
v36@0:8q16B24@?28
v36@0:8@16B24@?28
v56@0:8Q16q24@32q40q48
B56@0:8@16@24q32q40Q48
{os_unfair_lock_s=I}16@0:8
^{os_unfair_lock_s=I}16@0:8
@"MPMediaEntity"
v44@0:8@16q24B32@?36
v24@0:8#16
@24@0:8#16
@"<MPAVQueueCoordinatingDataSource>"
@"MPAVItem"16@0:8
{?="initialized"b1"title"b1"previewArtwork"b1"staticAssets"{?="identifiers"b1"duration"b1"flavorType"b1"mediaType"b1"url"b1}}
@"MPLibraryKeepLocalStatusObserverConfiguration"
{MPLibraryActiveKeepLocalStatus="statusType"q"downloadProgress"d}
v40@0:8@"MPMediaDownloadManager"16@"NSArray"24@"NSArray"32
v32@0:8@"MPMediaDownloadManager"16@"NSArray"24
v40@0:8@"MPMediaDownloadManager"16@"NSArray"24@"NSError"32
{MPLibraryActiveKeepLocalStatus=qd}16@0:8
B20@0:8B16
@40@0:8@16@24@?32
{?="initialized"b1"name"b1"hasBiography"b1"hasSocialPosts"b1"artwork"b1"editorialArtwork"b1"genre"{?="identifiers"b1"name"b1}}
@"MPAVErrorResolverBlockHandler"
@"MPAVErrorResolver"
v40@0:8@"MPAVErrorResolver"16@"NSError"24q32
@"MPDetailScrubController"
{CGPoint="x"d"y"d}
@"AVTimeFormatter"
@"<MPDetailSliderDelegate>"
v24@0:8@"MPDetailScrubController"16
v28@0:8@"MPDetailScrubController"16f24
v32@0:8@"MPDetailScrubController"16q24
@64@0:8{CGRect={CGPoint=dd}{CGSize=dd}}16q48d56
v48@0:8{CGRect={CGPoint=dd}{CGSize=dd}}16
v28@0:8f16d20
@36@0:8@16d24B32
@28@0:8d16B24
v32@0:8@"MPMusicPlayerControllerApplicationQueueModifications"16@?<v@?@"NSError">24
v24@0:8@?<v@?B>16
v24@0:8@"NSDictionary"16
v32@0:8@"NSArray"16@?<v@?@"NSArray"@"NSError">24
v24@0:8@?<v@?@"MPMusicPlayerControllerNowPlaying"@"NSError">16
v32@0:8q16@?<v@?@"MPMusicPlayerControllerNowPlaying"@"NSError">24
v40@0:8@"MPMediaItem"16@"NSString"24@?<v@?@"NSError">32
v56@0:8@"NSString"16@"NSString"24{CGSize=dd}32@?<v@?@"NSData"@"NSError">48
v24@0:8@?<v@?@"MPMusicPlayerControllerNowPlayingTimeSnapshot">16
v24@0:8@?<v@?@"MPMusicPlayerQueueDescriptor"@"NSError">16
v32@0:8@"MPMusicPlayerQueueDescriptor"16@?<v@?@"NSError">24
v56@0:8@16@24{CGSize=dd}32@?48
v24@0:8@?<v@?q>16
v32@0:8d16@?<v@?>24
v28@0:8f16@?<v@?>20
v24@0:8@?<v@?@"NSXPCListenerEndpoint">16
@"MPMusicPlayerApplicationController"
{vector<long, std::allocator<long>>="__begin_"^q"__end_"^q"__end_cap_"{__compressed_pair<long *, std::allocator<long>>="__value_"^q}}
{map<long, MPIdentifierSet *, std::less<long>, std::allocator<std::pair<const long, MPIdentifierSet *>>>="__tree_"{__tree<std::__value_type<long, MPIdentifierSet *>, std::__map_value_compare<long, std::__value_type<long, MPIdentifierSet *>, std::less<long>, true>, std::allocator<std::__value_type<long, MPIdentifierSet *>>>="__begin_node_"^v"__pair1_"{__compressed_pair<std::__tree_end_node<std::__tree_node_base<void *> *>, std::allocator<std::__tree_node<std::__value_type<long, MPIdentifierSet *>, void *>>>="__value_"{__tree_end_node<std::__tree_node_base<void *> *>="__left_"^v}}"__pair3_"{__compressed_pair<unsigned long, std::__map_value_compare<long, std::__value_type<long, MPIdentifierSet *>, std::less<long>, true>>="__value_"Q}}}
@"_MPLazySectionedCollectionStorage"
@"<MPLazySectionedCollectionDataSource>"
@"MPStoreModelPlaybackPositionBuilder"
{?="initialized"b1"title"b1"duration"b1"trackCount"b1"trackNumber"b1"discNumber"b1"grouping"b1"explicit"b1"artistUploadedContent"b1"hasVideo"b1"artwork"b1"copyrightText"b1"keepLocalEnableState"b1"keepLocalManagedStatus"b1"hasCloudSyncSource"b1"localFileAsset"b1"libraryAdded"b1"libraryAddEligible"b1"shouldShowComposer"b1"volumeNormalization"b1"year"b1"userRating"b1"cloudStatus"b1"gaplessInfo"b1"volumeAdjustment"b1"traits"b1"classicalWork"b1"classicalMovement"b1"classicalMovementCount"b1"classicalMovementNumber"b1"album"{?="identifiers"b1"title"b1"releaseDate"b1"year"b1"artist"b1"trackCount"b1}"artist"{?="identifiers"b1"name"b1}"composer"{?="identifiers"b1"name"b1}"genre"{?="identifiers"b1"name"b1}"homeSharingAsset"{?="identifiers"b1}"lyrics"{?="identifiers"b1"text"b1"hasStoreLyrics"b1"hasTimeSyncedLyrics"b1}}
@"CPLRUDictionary"
@24@0:8^v16
^v16@0:8
@36@0:8@16B24@28
@"NSURLSessionConfiguration"
@"NSURLSession"
@"NSURLCache"
@"<NSURLSessionDataDelegate>"
B32@0:8@"AVAssetResourceLoader"16@"AVAssetResourceLoadingRequest"24
B32@0:8@"AVAssetResourceLoader"16@"AVAssetResourceRenewalRequest"24
v32@0:8@"AVAssetResourceLoader"16@"AVAssetResourceLoadingRequest"24
B32@0:8@"AVAssetResourceLoader"16@"NSURLAuthenticationChallenge"24
v32@0:8@"AVAssetResourceLoader"16@"NSURLAuthenticationChallenge"24
v48@0:8@"NSURLSession"16@"NSURLSessionDataTask"24@"NSURLResponse"32@?<v@?q>40
v40@0:8@"NSURLSession"16@"NSURLSessionDataTask"24@"NSURLSessionDownloadTask"32
v40@0:8@"NSURLSession"16@"NSURLSessionDataTask"24@"NSURLSessionStreamTask"32
v40@0:8@"NSURLSession"16@"NSURLSessionDataTask"24@"NSData"32
v48@0:8@"NSURLSession"16@"NSURLSessionDataTask"24@"NSCachedURLResponse"32@?<v@?@"NSCachedURLResponse">40
v48@0:8@"NSURLSession"16@"NSURLSessionTask"24@"NSURLRequest"32@?<v@?q@"NSURLRequest">40
v32@0:8@"NSURLSession"16@"NSURLSessionTask"24
v56@0:8@"NSURLSession"16@"NSURLSessionTask"24@"NSHTTPURLResponse"32@"NSURLRequest"40@?<v@?@"NSURLRequest">48
v48@0:8@"NSURLSession"16@"NSURLSessionTask"24@"NSURLAuthenticationChallenge"32@?<v@?q@"NSURLCredential">40
v40@0:8@"NSURLSession"16@"NSURLSessionTask"24@?<v@?@"NSInputStream">32
v56@0:8@"NSURLSession"16@"NSURLSessionTask"24q32q40q48
v40@0:8@"NSURLSession"16@"NSURLSessionTask"24@"NSURLSessionTaskMetrics"32
v40@0:8@"NSURLSession"16@"NSURLSessionTask"24@"NSError"32
v56@0:8@16@24q32q40q48
v32@0:8@"NSURLSession"16@"NSError"24
v40@0:8@"NSURLSession"16@"NSURLAuthenticationChallenge"24@?<v@?q@"NSURLCredential">32
v24@0:8@"NSURLSession"16
v32@0:8Q16@24
@48@0:8@16q24{CGSize=dd}32
{CGSize=dd}24@0:8@16
@60@0:8@16@24@32{CGSize=dd}40B56
B40@0:8{CGSize=dd}16@32
@40@0:8@16q24@?32
{CGSize=dd}32@0:8@16q24
v40@0:8Q16@24@32
@40@0:8Q16Q24@32
v40@0:8{CGSize=dd}16@32
v32@0:8d16@24
@"MPMediaItemCollection"
@"MPMusicPlayerPlayParameters"
@"MPRadioStation"
@"MPPlaybackArchive"
{shared_ptr<std::map<long long, std::shared_ptr<mlcore::EntityQueryResult>>>="__ptr_"^v"__cntrl_"^{__shared_weak_count}}
@48@0:8@16{shared_ptr<mlcore::EntityQueryResult>=^{EntityQueryResult}^{__shared_weak_count}}24^v40
{shared_ptr<std::map<long long, std::shared_ptr<mlcore::EntityQueryResult>>>=^v^{__shared_weak_count}}16@0:8
@"<MPAVErrorResolverDelegate>"
@"MPConcreteMediaEntityPropertiesCache"
@"MPConcreteMediaEntityPropertiesCache"16@0:8
@40@0:8Q16@24@32
@32@0:8@16^B24
@"MPArtworkCatalog"
{CGRect="origin"{CGPoint="x"d"y"d}"size"{CGSize="width"d"height"d}}
@64@0:8q16@24@32q40q48@56
@56@0:8q16@24@32q40q48
@40@0:8q16@24q32
v40@0:8Q16Q24@?32
@32@0:8Q16^@24
@"<MPMediaLibraryResultSet>"
@"MPMediaQuerySectionInfo"
@48@0:8@16@24q32@40
@"<MPMediaLibraryDataProvider>"
@40@0:8@16#24q32
@"ML3MusicLibrary"
@"MPMediaEntityCache"
B40@0:8@"NSString"16q24^Q32
B40@0:8@"NSArray"16q24^Q32
B24@0:8@?<B@?>16
v24@0:8@?<v@?>16
v48@0:8@16@"NSString"24q32@?<v@?B@"NSError">40
v40@0:8@"NSArray"16@"NSArray"24@"NSArray"32
v56@0:8@16@"NSString"24q32q40@?<v@?B@"NSError">48
q24@0:8@"NSDictionary"16
B32@0:8^q16Q24
v40@0:8@"NSArray"16q24@?<v@?B>32
v40@0:8q16q24@?<v@?B>32
v40@0:8@"NSString"16q24@?<v@?@"NSError">32
v40@0:8@"NSIndexSet"16q24@?<v@?B>32
v48@0:8Q16Q24q32@?<v@?B>40
v40@0:8q16q24@?<v@?B@"NSError">32
^v40@0:8^q16Q24^@32
^q40@0:8^v16^Q24^@32
v32@0:8@"MPMediaItem"16@?<v@?@"NSArray">24
v40@0:8q16@"NSString"24q32
v48@0:8q16@"NSString"24q32@?<v@?B@"NSError">40
B40@0:8q16q24o^#32
@"NSString"24@0:8Q16
@24@0:8@"NSString"16
B32@0:8@16@"NSString"24
B24@0:8@"NSString"16
@"MIPMultiverseIdentifier"24@0:8q16
@"MIPMultiverseIdentifier"32@0:8q16q24
v32@0:8@"MPStoreItemLibraryImport"16@?<v@?@"NSArray"@"NSError">24
v32@0:8@"NSString"16@?<v@?@"NSArray"@"NSError">24
v36@0:8@"NSString"16B24@?<v@?@"NSError">28
v32@0:8@"NSArray"16@?<v@?@"NSDictionary"@"NSError">24
B56@0:8@"NSData"16@"NSString"24q32q40Q48
v56@0:8Q16q24@"NSString"32q40q48
v56@0:8@16@24q32q40@?48
v40@0:8q16q24@?32
v48@0:8Q16Q24q32@?40
v40@0:8q16@24q32
v48@0:8q16@24q32@?40
v48@0:8@"NSString"16@"NSString"24@"MPMediaQueryCriteria"32@?<v@?@>40
v40@0:8@"NSSet"16q24@?<v@?@"NSDictionary">32
v48@0:8@"NSSet"16q24q32@?<v@?@"NSDictionary">40
@"<MPMediaLibraryResultSet>"24@0:8@"MPMediaQueryCriteria"16
v32@0:8@"MPMediaQueryCriteria"16@?<v@?B>24
v32@0:8@"MPMediaQueryCriteria"16@?<v@?Q>24
@"MPMediaEntityCache"16@0:8
@"<MPArtworkDataSource>"16@0:8
v44@0:8@"MPMediaQueryCriteria"16B24@?<B@?>28@?<v@?q^B>36
v44@0:8@"MPMediaQueryCriteria"16B24@?<B@?>28@?<v@?q@"NSDictionary"^B>36
v40@0:8@"NSData"16@?<v@?B@"NSError">24@?<v@?f>32
v52@0:8@"NSString"16q24B32@?<v@?q@"NSString"q^B>36@?<v@?qq@"NSString"q^B>44
v32@0:8q16@"NSArray"24
@"NSSet"16@0:8
v44@0:8@16B24@?28@?36
v40@0:8@16@?24@?32
v52@0:8@16q24B32@?36@?44
v48@0:8@16q24q32@?40
v52@0:8@16@24B32q36@?44
@40@0:8q16q24q32
@48@0:8q16q24q32@40
v48@0:8@16q24#32@?40
v56@0:8@16#24@32@40@?48
B40@0:8^q16Q24#32
v32@0:8Q16@?24
v36@0:8I16@20@?28
v28@0:8I16@20
@40@0:8@16@24#32
@"MPModelStaticResponse"
@"MPMediaLibraryAlbumAppData"
@"ICStoreFileAssetFairPlayInfo"
@"MIPMultiverseIdentifier"
v40@0:8@16Q24Q32
@"<MPVolumeControllerDataSource>"
@"<MPVolumeControllerDelegate>"
v28@0:8@"<MPVolumeControllerDataSource>"16f24
v28@0:8@"<MPVolumeControllerDataSource>"16B24
v32@0:8@"<MPVolumeControllerDataSource>"16q24
v32@0:8@"<MPVolumeControllerDataSource>"16@"NSString"24
v28@0:8@"<MPVolumeControllerDataSource>"16I24
v24@0:8f16f20
@"MPMediaLibraryArtworkRequest"
@"MPMediaLibraryArtworkDataSource"
{vector<std::shared_ptr<mlcore::EntityCache>, std::allocator<std::shared_ptr<mlcore::EntityCache>>>="__begin_"^v"__end_"^v"__end_cap_"{__compressed_pair<std::shared_ptr<mlcore::EntityCache> *, std::allocator<std::shared_ptr<mlcore::EntityCache>>>="__value_"^v}}
@40@0:8#16@24@32
{shared_ptr<mlcore::EntityCache>=^{EntityCache}^{__shared_weak_count}}48@0:8^v16{vector<mlcore::ModelPropertyBase *, std::allocator<mlcore::ModelPropertyBase *>>=^^{ModelPropertyBase}^^{ModelPropertyBase}{__compressed_pair<mlcore::ModelPropertyBase **, std::allocator<mlcore::ModelPropertyBase *>>=^^{ModelPropertyBase}}}24
@48@0:8@16@24@32q40
@32@0:8#16@24
@28@0:8q16B24
B40@0:8@16q24@32
@40@0:8@16q24@32
B40@0:8^@16@24@32
@48@0:8@16@24Q32@?40
{shared_ptr<mlcore::LocalizedSearchQuery>="__ptr_"^{LocalizedSearchQuery}"__cntrl_"^{__shared_weak_count}}
@"MPModelLibrarySearchRequest"
@"AVAudioSession"
@"<MPNowPlayingSessionDelegate>"
@"MPNowPlayingInfoCenter"
@"MPRemoteCommandCenter"
@"MRPlayerPath"
{?="_relationshipPreparesSource"b1}
#24@0:8@16
@40@0:8q16q24@32
@48@0:8q16q24@32@40
@"MPAVBatteryLevel"
@"MPAVRouteConnection"
q24@0:8I16I20
@"<MPNowPlayingSessionManagerDataSource>"
@"NSOperation"
@"NSObject<OS_dispatch_group>"
d24@0:8d16
@"<MPMediaKitEntityRelationshipPayloadProvider>"
@40@0:8#16@24@?32
v40@0:8@"NSString"16#24@"NSString"32
v40@0:8@16#24@32
v40@0:8@16@24^?32
v48@0:8@16#24@32@?40
@"MPModelPlaylistEntriesShareEligibilityRequest"
@"MPModelLibraryAddToPlaylistChangeRequest"
{?="initialized"b1"bookmarkTime"b1"shouldRememberBookmarkTime"b1"hasBeenPlayed"b1"startTime"b1"stopTime"b1"storeUbiquitousIdentifier"b1"userPlayCount"b1}
@"MPModelPodcastEpisodeKind"
{?="initialized"b1"name"b1"descriptionText"b1"shortDescriptionText"b1"artwork"b1"editorialArtwork"b1}
{CGSize=dd}32@0:8@16@24
^{Arc4State=II*}
@"<MPRandom>"
@40@0:8@16q24q32
@52@0:8@16{CGSize=dd}24B40@44
{CGSize=dd}48@0:8{CGSize=dd}16{CGSize=dd}32
@32@0:8@16^{?=iiii}24
@40@0:8Q16@24Q32
@"MPModelMovie"
{?="initialized"b1"title"b1"descriptionText"b1"duration"b1"artwork"b1"screenshotArtwork"b1"keepLocalEnableState"b1"keepLocalManagedStatus"b1"hasCloudSyncSource"b1"localFileAsset"b1"libraryAdded"b1"libraryAddEligible"b1"musicShow"b1"episodeNumber"b1"explicitRating"b1"season"{?="identifiers"b1"number"b1"year"b1"show"{?="identifiers"b1"title"b1"showCreator"{?="identifiers"b1"name"b1"artwork"b1}}}"show"{?="identifiers"b1"title"b1"showCreator"{?="identifiers"b1"name"b1"artwork"b1}}}
^?16@0:8
@32@0:8@16^?24
@"ICStoreRadioStreamAssetInfo"
@"MPStoreLibraryPersonalizationRequest"
{vector<long long, std::allocator<long long>>=^q^q{__compressed_pair<long long *, std::allocator<long long>>=^q}}16@0:8
v40@0:8{vector<long long, std::allocator<long long>>=^q^q{__compressed_pair<long long *, std::allocator<long long>>=^q}}16
@"NSUserDefaults"
{?="mobileiPodPrefsChanged"i"mobileiPodPlaybackPrefsChangedAllowCellularData"i"videoPrefsChanged"i"airplayPrefsChanged"i}
v28@0:8B16@20
v36@0:8B16@20^@28
@40@0:8@16@24^@32
@"MPStoreHLSAssetInfo"
@"ICMusicSubscriptionStatusMonitor"
@"ICMusicSubscriptionFairPlayKeyStatus"
@"SSVSubscriptionStatus"
v24@0:8@"ICEnvironmentMonitor"16
B24@0:8^B16
@56@0:8@16@24@32@40@48
{?="entityOrder"b1"groupingType"b1"staticEntityType"b1"filteringDisabled"b1"includeNonLibraryEntities"b1}
@20@0:8i16
i24@0:8@16
{?="initialized"b1"endpointType"b1"redownloadParameters"b1"redownloadable"b1"accountIdentifier"b1"shouldReportPlayEvents"b1"subscriptionRequired"b1}
@"MPModelFileAsset"
{MPLibraryAddStatusObserverConfiguration=BBBBB}16@0:8
@"MPRTCReportingSessionSummaryEvent"
@44@0:8@16@24i32q36
@"NSDictionary"16@0:8
@"MPModelLibraryPlaylistEditChangeRequest"
@"Protocol"
@"NSUUID"
@"MPNowPlayingInfoCenterArtworkContext"
{_MSVSignedRange="location"q"length"q}
@"MSVLRUDictionary"
@"MPArtworkResizeUtility"
@"<MPNowPlayingPlaybackQueueDataSource>"
@"<MPNowPlayingInfoLyricsDelegate>"
{?="createPlaybackQueue"^v"createContentItem"^v"createChildItem"^v"metadata"^v"artwork"^v"info"^v"languageOptions"^v"lyrics"^v}
@"<MPNowPlayingPlaybackQueueDelegate>"
@?<@"MPArtworkCatalog"@?>24@0:8@"MPNowPlayingContentItem"16
@?24@0:8@16
@40@0:8{?=qq}16^{?=qq}32
^v24@0:8^v16
v40@0:8{_MSVSignedRange=qq}16@?32
B32@0:8:16@?24
@"MPMediaItemArtwork"
@"MRSendCommandHandlerDialogAction"
@"MRSendCommandHandlerDialog"
@"ICMusicSubscriptionStatus"
@"HSHomeSharingLibrary"
v32@0:8@"HSBrowser"16@"HSHomeSharingLibrary"24
{?="initialized"b1"name"b1"shortName"b1"hasSocialPosts"b1"editorNotes"b1"shortEditorNotes"b1"curatorKind"b1"curatorSubKind"b1"editorialArtwork"b1"brandLogoArtwork"b1}
@28@0:8f16q20
@52@0:8d16d24f32d36q44
@56@0:8@16@24@32q40q48
@"UICubicTimingParameters"
@"MPMediaLibraryArtwork"
@24@0:8@"NSDictionary"16
@48@0:8@16Q24q32q40
@56@0:8@16Q24q32q40Q48
@"ML3Artwork"
@"MPModelPlaylistEntry"
@"MSVSQLDatabase"
{os_unfair_recursive_lock_s="ourl_lock"{os_unfair_lock_s="_os_unfair_lock_opaque"I}"ourl_count"I}
@"NSDictionary"24@0:8@"MPIdentifierSet"16
@40@0:8@16Q24^@32
@"MSVSQLDatabaseTransaction"
@"MSVSQLStatement"
B56@0:8@"NSDictionary"16@"NSString"24@"MPIdentifierSet"32q40@"NSDate"48
B48@0:8@"NSURL"16@"MPIdentifierSet"24q32@"NSDate"40
B64@0:8@"NSData"16q24@"NSString"32@"NSString"40q48@"NSArray"56
B56@0:8@"NSDictionary"16@"MPIdentifierSet"24q32@"NSString"40@"NSDate"48
B48@0:8@"MPIdentifierSet"16@"MPIdentifierSet"24@"NSString"32q40
B32@0:8@"MPIdentifierSet"16@"NSString"24
B56@0:8@16@24@32q40@48
B48@0:8@16@24q32@40
B64@0:8@16q24@32@40q48@56
B56@0:8@16@24q32@40@48
B48@0:8@16@24@32q40
@56@0:8@16@24q32@40@48
@64@0:8@16@24q32@40@48@56
{?="initialized"b1"groupType"b1"lastUpdatedDate"b1"title"b1"subgroups"b1"loadAdditionalContentURL"b1"refreshURL"b1"displaysAsGridCellInCarPlay"b1}
@"MPModelForYouRecommendationMusicKitItemBuilder"
@"NSDateFormatter"
@"MPMutableSectionedCollection"
@60@0:8@16@24@32@40@48B56
Q32@0:8Q16Q24
@"SSAuthorizationRequest"
@"MPHomeSharingML3DataProvider"
v32@0:8@"SSAuthorizationRequest"16@"SSURLConnectionResponse"24
v32@0:8@"SSRequest"16@"NSError"24
v24@0:8@"SSRequest"16
@40@0:8@16Q24@32
@64@0:8@16Q24@32Q40@48Q56
@"MPSkipIntervalCommand"
@"MPRatingCommand"
@"MPChangePlaybackRateCommand"
@"MPFeedbackCommand"
@"MPChangePlaybackPositionCommand"
@"MPChangeRepeatModeCommand"
@"MPChangeShuffleModeCommand"
@"MPAdvanceShuffleModeCommand"
@"MPAdvanceRepeatModeCommand"
@"MPSetPlaybackQueueCommand"
@"MPInsertIntoPlaybackQueueCommand"
@"MPReorderQueueCommand"
@"MPSetPlaybackSessionCommand"
@"MPPreloadPlaybackSessionCommand"
@"MPSetPriorityForPlaybackSessionCommand"
@"MPChangeQueueEndActionCommand"
v24@0:8@"MPRemoteCommand"16
@28@0:8#16I24
@"SSRentalCheckoutRequest"
@48@0:8Q16Q24Q32Q40
@"MPModelLibraryHasPurchasesRequest"
@"ICStorePlatformMetadata"
@36@0:8@16@24B32
@"UIViewController"
@"NSMutableIndexSet"
B40@0:8q16q24^@32
@48@0:8q16q24@?32@?40
@"ICCloudItemIDList"
v32@0:8Q16q24
v40@0:8Q16q24Q32
@"ICCloudClient"
@"NSObject<ICCloudAvailability>"
@"MSVDistributedNotificationObserver"
v36@0:8Q16B24@?28
v48@0:8Q16@24@32@?40
v56@0:8Q16@24@32@40@?48
v48@0:8@16@24Q32@?40
v40@0:8q16Q24@?32
v48@0:8q16@24Q32@?40
v56@0:8q16q24q32q40@?48
v48@0:8q16q24q32q40
v48@0:8q16q24Q32@?40
v48@0:8q16q24Q32@40
v56@0:8q16q24Q32@40@?48
{ITColor=dddd}16@0:8
@48@0:8{ITColor=dddd}16
@"AVQueuePlayer"
@56@0:8{?=qiIq}16@40@?48
v88@0:8{?=qiIq}16{?=qiIq}40{?=qiIq}64
v96@0:8{?=qiIq}16{?=qiIq}40{?=qiIq}64@?88
@"MPStoreModelRequest"
v40@0:8@16Q24@32
@"MPModelPlaylistEntryKind"
@"ICStoreURLRequest"
@"<MPStoreSocialRequestOperationDataSource>"
q24@0:8d16
@"<MPRequestCancellationToken>"
@"<MPRequestResponseControllerDelegate>"
B24@0:8^?16
^v24@0:8@16
q24@0:8^v16
{?="isInitialized"B"itemType"B"url"B"reason"B"backedByStoreItemMetadata"B"album"B"playlist"B"radioStation"B"subgroup"B}
@"MPModelForYouRecommendationMusicKitGroupBuilder"
@52@0:8@16@24@32@40B48
@"<MPNowPlayingContentItemArtworkDataSource>"
@"<MPModelObjectPlaybackItemMetadataDelegate>"
@"MPModelPlaybackPosition"
@"NSMapTable"16@0:8
v24@0:8@"NSMapTable"16
@"NSEnumerator"
:16@0:8
v24@0:8:16
@"MPPlaybackContext"
{?="initialized"b1"groupType"b1"lastUpdatedDate"b1"title"b1"subgroups"b1"loadAdditionalContentURL"b1"refreshURL"b1}
@"MPModelForYouRecommendationItemBuilder"
@"<MPSectionedIdentifierListDelegate>"
@"<MPSectionedIdentifierListAnnotationDelegate>"
v32@0:8@"NSArray"16@"NSString"24
v32@0:8@"NSString"16@"NSString"24
v32@0:8@"MPChangeDetails"16@?<@"NSString"@?q>24
@"NSArray"24@0:8@"<MPExclusiveAccessToken>"16
@32@0:8@?16@?24
@32@0:8#16@?24
v40@0:8@16#24@?32
@"MPModelLibraryDownloadQueueRequest"
@"MPMediaLibraryEntityTranslator"
{?="initialized"b1"itemType"b1"backedByStoreItemMetadata"b1"album"b1"playlist"b1"radioStation"b1"subgroup"b1}
@"MPModelForYouRecommendationGroupBuilder"
@"MRAVRoutingDiscoverySession"
r^v16@0:8
@"SBCPlaybackPositionSyncService"
@"SBCPlaybackPositionDomain"
v28@0:8q16B24
@"MPCloudController"
@"MPCloudServiceStatusController"
{MPLibraryAddStatusObserverConfiguration="isValidContentType"B"isLibraryAdded"B"hasCleanContent"B"hasExplicitContent"B"isLibraryAddEligible"B}
v29@0:8{MPLibraryAddStatusObserverConfiguration=BBBBB}16@21
@"MPRadioController"
@40@0:8Q16{CGSize=dd}24
@56@0:8Q16@24@32@40@48
@"<_MPActiveUserChangeMonitorDelegate>"
@"<MPRemoteCommandDelegate_Internal>"
@"<MPRemoteCommandDelegate_Private>"
@20@0:8I16
v36@0:8@16:24B32
@28@0:8I16@20
@20@0:8f16
v48@0:8@16@24q32@40
@"MRSendCommandResultStatus"
@"MPRemoteCommandHandlerDialog"
{?="useCarPlayBrowseTopLevelContentOnly"B"useCarPlayBrowseTopLevelRequestReorderingHeuristics"B}
@"MPStoreItemMetadataResponse"
@50@0:8@16{?=BB}24@26@34@42
@58@0:8@16@24{?=BB}32@34@42@50
B60@0:8@16B24@28q36@44@52
{?=BB}16@0:8
@"MPPMediaPredicateValue"
{?="comparisonType"b1}
@"MPModelTVEpisodeKind"
@"MPModelLibrarySearchScope"
@48@0:8{shared_ptr<mlcore::EntityQueryResult>=^{EntityQueryResult}^{__shared_weak_count}}16@32@40
v40@0:8{shared_ptr<mlcore::LibraryView>=^{LibraryView}^{__shared_weak_count}}16@32
{shared_ptr<mlcore::Predicate>=^{Predicate}^{__shared_weak_count}}16@0:8
{shared_ptr<mlcore::Predicate>=^{Predicate}^{__shared_weak_count}}24@0:8^v16
B48@0:8{CGSize=dd}16{CGSize=dd}32
@56@0:8@16@24{CGSize=dd}32@?48
@48@0:8@16@24d32d40
@"AVRoutingSessionManager"
@"MPMRAVOutputContextWrapper"
@"MRAVOutputDevice"
@"UIControl<MPDetailedScrubbing>"
@"<MPDetailScrubControllerDelegate>"
f24@0:8d16
{?="initialized"b1"title"b1"duration"b1"trackNumber"b1"trackCount"b1"discNumber"b1"grouping"b1"explicit"b1"artistUploadedContent"b1"hasVideo"b1"artwork"b1"copyrightText"b1"keepLocalEnableState"b1"keepLocalManagedStatus"b1"hasCloudSyncSource"b1"localFileAsset"b1"libraryAdded"b1"libraryAddEligible"b1"shouldShowComposer"b1"volumeNormalization"b1"year"b1"userRating"b1"cloudStatus"b1"gaplessInfo"b1"volumeAdjustment"b1"traits"b1"classicalWork"b1"classicalMovement"b1"classicalMovementCount"b1"classicalMovementNumber"b1"album"{?="identifiers"b1"title"b1"releaseDate"b1"year"b1"artist"b1}"artist"{?="identifiers"b1"name"b1}"composer"{?="identifiers"b1"name"b1}"genre"{?="identifiers"b1"name"b1}"homeSharingAsset"{?="identifiers"b1}"lyrics"{?="identifiers"b1"text"b1"hasStoreLyrics"b1"hasTimeSyncedLyrics"b1}}
^{__CFRunLoopSource=}
^{__CFUserNotification=}
@24@0:8^{__CFUserNotification=}16
^{__CFUserNotification=}16@0:8
v32@0:8@16^{__CFUserNotification=}24
{_opaque_pthread_rwlock_t="__sig"q"__opaque"[192c]}
^{__CFDictionary=}
@40@0:8q16q24@?32
v36@0:8q16#24B32
v32@0:8q16#24
@48@0:8q16q24q32@?40
^v24@0:8#16
v32@0:8#16@?24
@"MPMRAVEndpointWrapper"
B20@0:8I16
@48@0:8q16@24@32@40
v24@0:8@"NSData"16
@"MPModelLibraryKeepLocalChangeRequest"
v48@0:8q16#24q32@40
v48@0:8q16q24q32@40
@"MPModelTVSeasonKind"
{?="list"^q"count"Q"size"Q}
{?="shouldContain"b1}
^q16@0:8
q24@0:8Q16
v32@0:8^q16Q24
{?="doublePredicateValue"b1"integerPredicateValue"b1"floatPredicateValue"b1"boolPredicateValue"b1}
@40@0:8#16@24^@32
B40@0:8@16@24^@32
v40@0:8q16q24@32
@"MPStoreSocialRequestOperation"
{shared_ptr<std::map<std::string, mlcore::ModelPropertyBase *>>="__ptr_"^v"__cntrl_"^{__shared_weak_count}}
{shared_ptr<std::map<std::string, mlcore::ModelPropertyBase *>>=^v^{__shared_weak_count}}16@0:8
v32@0:8{shared_ptr<std::map<std::string, mlcore::ModelPropertyBase *>>=^v^{__shared_weak_count}}16
v32@0:8r^v16@?24
v32@0:8@16^v24
v40@0:8@16r^v24@?32
v56@0:8@16r^v24r^v32@?40@?48
v40@0:8@16#24^v32
v44@0:8@16#24B32^v36
v60@0:8@16#24B32^v36r^v44@?52
@48@0:8@16{shared_ptr<mlcore::Entity>=^{Entity}^{__shared_weak_count}}24@40
@40@0:8{shared_ptr<mlcore::Entity>=^{Entity}^{__shared_weak_count}}16@32
{shared_ptr<mlcore::EntityQuery>=^{EntityQuery}^{__shared_weak_count}}48@0:8@16@24@32@40
{shared_ptr<mlcore::PropertiesQuery>=^{PropertiesQuery}^{__shared_weak_count}}48@0:8@16@24@32@40
{vector<mlcore::ModelPropertyBase *, std::allocator<mlcore::ModelPropertyBase *>>=^^{ModelPropertyBase}^^{ModelPropertyBase}{__compressed_pair<mlcore::ModelPropertyBase **, std::allocator<mlcore::ModelPropertyBase *>>=^^{ModelPropertyBase}}}24@0:8@16
{vector<mlcore::SortDescriptor, std::allocator<mlcore::SortDescriptor>>=^{SortDescriptor}^{SortDescriptor}{__compressed_pair<mlcore::SortDescriptor *, std::allocator<mlcore::SortDescriptor>>=^{SortDescriptor}}}24@0:8@16
{map<std::string, mlcore::ModelPropertyBase *, std::less<std::string>, std::allocator<std::pair<const std::string, mlcore::ModelPropertyBase *>>>={__tree<std::__value_type<std::string, mlcore::ModelPropertyBase *>, std::__map_value_compare<std::string, std::__value_type<std::string, mlcore::ModelPropertyBase *>, std::less<std::string>, true>, std::allocator<std::__value_type<std::string, mlcore::ModelPropertyBase *>>>=^v{__compressed_pair<std::__tree_end_node<std::__tree_node_base<void *> *>, std::allocator<std::__tree_node<std::__value_type<std::string, mlcore::ModelPropertyBase *>, void *>>>={__tree_end_node<std::__tree_node_base<void *> *>=^v}}{__compressed_pair<unsigned long, std::__map_value_compare<std::string, std::__value_type<std::string, mlcore::ModelPropertyBase *>, std::less<std::string>, true>>=Q}}}24@0:8@16
{map<std::string, mlcore::ModelPropertyBase *, std::less<std::string>, std::allocator<std::pair<const std::string, mlcore::ModelPropertyBase *>>>={__tree<std::__value_type<std::string, mlcore::ModelPropertyBase *>, std::__map_value_compare<std::string, std::__value_type<std::string, mlcore::ModelPropertyBase *>, std::less<std::string>, true>, std::allocator<std::__value_type<std::string, mlcore::ModelPropertyBase *>>>=^v{__compressed_pair<std::__tree_end_node<std::__tree_node_base<void *> *>, std::allocator<std::__tree_node<std::__value_type<std::string, mlcore::ModelPropertyBase *>, void *>>>={__tree_end_node<std::__tree_node_base<void *> *>=^v}}{__compressed_pair<unsigned long, std::__map_value_compare<std::string, std::__value_type<std::string, mlcore::ModelPropertyBase *>, std::less<std::string>, true>>=Q}}}28@0:8@16B24
@64@0:8@16{shared_ptr<mlcore::Entity>=^{Entity}^{__shared_weak_count}}24@40@48@56
{vector<mlcore::ModelPropertyBase *, std::allocator<mlcore::ModelPropertyBase *>>=^^{ModelPropertyBase}^^{ModelPropertyBase}{__compressed_pair<mlcore::ModelPropertyBase **, std::allocator<mlcore::ModelPropertyBase *>>=^^{ModelPropertyBase}}}32@0:8@16^v24
@40@0:8#16^v24B32B36
@32@0:8#16^v24
@"MPStoreModelMovieMediaClipBuilder"
{?="initialized"b1"title"b1"description"b1"duration"b1"releaseDate"b1"explicitRating"b1"tagline"b1"artwork"b1"editorialArtwork"b1"keepLocalEnableState"b1"keepLocalManagedStatus"b1"hasCloudSyncSource"b1"localFileAsset"b1"libraryAdded"b1"libraryAddEligible"b1}
v32@0:8@"NSString"16@?<v@?@"<MPMutableLocalLibraryIdentifiers>">24
v32@0:8@"NSString"16@?<v@?@"<MPMutablePersonalStoreIdentifiers>">24
v24@0:8@?<v@?@"<MPMutableUniversalStoreIdentifiers>">16
v24@0:8@?<v@?@"<MPMutableRadioIdentifiers>">16
@"BSUIEmojiLabelView"
B40@0:8@16{CGSize=dd}24
q32@0:8@16@24
@"ML3ArtworkConfiguration"
@"MCProfileConnection"
v32@0:8@"MCProfileConnection"16@"NSDictionary"24
@"AVSystemController"
@"<MPVolumeControllerDataSourceDelegate>"
v24@0:8@?<v@?f>16
@"<MPVolumeControllerDataSourceDelegate>"16@0:8
v24@0:8@"<MPVolumeControllerDataSourceDelegate>"16
f20@0:8f16
v28@0:8I16I20B24
@"ICStoreArtworkInfo"
@"ICStoreVideoArtworkInfo"
@"SSDownload"
@"SSPurchase"
@"SSPurchaseResponse"
@"SSDownloadManager"
@"SSPurchaseManager"
v24@0:8@"SSDownloadHandler"16
v32@0:8@"SSDownloadHandler"16@"SSDownloadHandlerSession"24
v32@0:8@"SSDownloadHandler"16@"SSDownloadSession"24
B32@0:8@"SSDownloadHandler"16@"SSDownloadSession"24
v32@0:8@"SSDownloadHandler"16@"SSDownloadAuthenticationSession"24
v32@0:8@"UIAlertView"16q24
v24@0:8@"UIAlertView"16
B24@0:8@"UIAlertView"16
v32@0:8@"SSPurchaseManager"16@"NSArray"24
v32@0:8@"SSDownloadManager"16@"NSArray"24
v24@0:8@"SSDownloadManager"16
v32@0:8@?16@24
@"MPStoreDownload"
v40@0:8@"MPStoreDownloadManager"16@"NSArray"24@"NSArray"32
v32@0:8@"MPStoreDownloadManager"16@"MPStoreDownload"24
v32@0:8@"MPStoreDownloadManager"16@"NSArray"24
v24@0:8@"MPStoreDownloadManager"16
{?="initialized"b1"name"b1"uncensoredName"b1"handle"b1"biography"b1"artwork"b1"isVerified"b1"isPrivate"b1}
@"MPModelSongKind"
@"MPPCompoundPredicate"
@"MPPConditionalPredicate"
@"MPPPersistentIDsPredicate"
@"MPPPropertyPredicate"
@"MPPSearchStringPredicate"
{?="type"b1}
@"MRContentItemMetadataAudioRoute"
