@(#)PROGRAM:AuthKit  PROJECT:AuthKit-1
com.apple.Carousel.authAlertXPCService
alertTitle
alertMessage
alertIdentifier
defaultButtonTitle
alternateButtonTitle
otherButtonTitle
alertResponse
alertSupplementViewID
alertSupplementViewData
overWriteExistingAlert
systemSoundIDKey
textFieldDescription
textFieldIsSecure
textFieldInputType
textFieldLength
textFieldValue
textFieldContentType
com.apple.AuthKit.AKSecondFactorCodeView
com.apple.AuthKit.AKLocationSignInView
com.apple.AuthKit.AKAuthorize
_transactionID
_bundleID
_teamID
supportsSecureCoding
TB,R
transactionID
T@"NSString",C,N,V_transactionID
bundleID
T@"NSString",C,N,V_bundleID
teamID
T@"NSString",C,N,V_teamID
v8@?0
com.apple.AuthKit.alertRequestQueue
hash
TQ,R
superclass
T#,R
description
T@"NSString",R,C
debugDescription
v16@?0@"NSError"8
v24@?0@"NSDictionary"8@"NSError"16
internalQueue
T@"NSObject<OS_dispatch_queue>",&,N,V_internalQueue
xpcConnection
T@"NSXPCConnection",&,N,V_xpcConnection
_userID
_clientID
_altDSID
clientID
T@"NSString",C,N,V_clientID
altDSID
T@"NSString",C,N,V_altDSID
shouldIgnoreUserID
TB,N,V_shouldIgnoreUserID
shouldIgnoreTeamID
TB,N,V_shouldIgnoreTeamID
userID
T@"NSString",C,N,V_userID
com.apple.authkit
AKExtensionItemContext
com.apple.AuthKitUI.AKLocationSignInAlert
com.apple.AuthKitUI.AKSecondFactorAlert
com.apple.AuthKitUI.AKSecondFactorEntryAlert
ak_context
T@"AKAppleIDAuthenticationContext",&,D,N,Sak_setContext:
Unable to find class %s
_appID
_appName
_nonce
_serviceID
_state
appName
T@"NSString",C,N,V_appName
appID
T@"NSString",C,N,V_appID
serviceID
T@"NSString",C,N,V_serviceID
nonce
T@"NSString",C,N,V_nonce
state
T@"NSString",C,N,V_state
interruptionHandler
T@?,C,V_interruptionHandler
invalidationHandler
T@?,C,V_invalidationHandler
shouldHandleInvalidation
AKPassword
AKRawPassword
AKIDMSToken
AKDSID
AKAltDSID
AKRememberPassword
AKIsHSA2
AKSecurityLevel
AKAuthenticationMode
AKIsUnderage
AKIsLegacyStudent
AKDidPerformInteractive
AKNewAppleIDSetupInfo
AKMasterKeyID
AKDidShowServerUI
AKAcceptedTerms
AKManagedAppleID
AKAuditLogin
AKFirstName
AKLastName
AKImageURL
AKShortLivedToken
AKIdentityToken
AKIsServerUIRequired
AKIsPasscodeResetRequired
AKConfigurationInfo
AKDuplexSession
AKCircleContext
AKRepairState
AKAppleIDEmailsDidChangeNotification
com.apple.authkit.user-info-changed
security-level
auth-mode
AKDidPerformBiometric
AKDidPerformPasscode
primaryEmailVetted
firstName
lastName
reachableEmails
forwardTo
authorizedAppListVersion
previouslySelectedAsPrivateEmail
previouslySelectedEmail
AKDemoAccount
AKAdditionalInfo
AKAppleIDAuthenticationControllerXPCLock
-[AKAppleIDAuthenticationController authenticateWithContext:completion:] requires a non-nil value for the context parameter.
v20@?0B8@"NSError"12
v24@?0@"AKUserInformation"8@"NSError"16
v24@?0Q8@"NSError"16
v24@?0@"NSArray"8@"NSError"16
v24@?0@"AKApplicationMetadataInfo"8@"NSError"16
(null)
v24@?0@"NSNumber"8@"NSError"16
v24@?0@"AKCircleRequestPayload"8@"NSError"16
v24@?0@"NSString"8@"NSError"16
v24@?0@"AKAppleIDServerResourceLoadDelegate"8@"NSError"16
sensitiveAuthenticationKeys
T@"NSSet",R,N
deallocHandler
T@?,C,N,V_deallocHandler
delegate
T@"<AKAppleIDAuthenticationDelegate>",W,N
<%@: %p, _underlylingTask: %@>
request
T@"NSURLRequest",&,N,V_request
retryCount
TQ,N,V_retryCount
underlyingTask
T@"NSURLSessionDataTask",&,N,V_underlyingTask
completionHandler
T@?,C,N,V_completionHandler
receivedData
T@"NSMutableData",&,N,V_receivedData
lastRetryError
T@"NSError",&,N,V_lastRetryError
canceledOrCompleted
TB,N,V_canceledOrCompleted
AuthKitURLSession
com.apple.authkit.url
v32@?0@"NSData"8@"NSURLResponse"16@"NSError"24
icloud.com
_usesAppleIDContext
TB,N,V__usesAppleIDContext
scopes
client_id
credential_state
transfer_state
primary_client_id
origin
transferred
expired
<%@:%p> clientID: %@, scopes: %@, state:%li, transferState:%@, primaryClientID:%@, origin:%@
T@"NSArray",C,N,V_scopes
Tq,N,V_state
transferState
T@"NSString",&,N,V_transferState
primaryClientID
T@"NSString",&,N,V_primaryClientID
T@"NSString",&,N,V_origin
core
traffic
query
signpost
aaa-itriage
userInteraction
BundleID
IconData
IconScale
type
DidTapNotification
DidStartServerAuthorization
FetchAppIcon
FetchAppIconReply
StartProgressAnimation
Unknown
_attestationHeaders
%@ %@
attestationHeaders
T@"NSDictionary",C,N,V_attestationHeaders
AKContextManagerQueue
v20@?0B8@"NSDictionary"12
v12@?0B8
-[AKAppleIDAuthenticationContextManager provisionAnisetteForContext:withCompletion:]
-[AKAppleIDAuthenticationContextManager syncAnisetteForContext:withSIMData:completion:]
-[AKAppleIDAuthenticationContextManager eraseAnisetteForContext:withCompletion:]
-[AKAppleIDAuthenticationContextManager fetchAnisetteDataForContext:provisionIfNecessary:withCompletion:]
-[AKAppleIDAuthenticationContextManager legacyAnisetteDataForContext:DSID:withCompletion:]
T@"<AKAppleIDAuthenticationDelegate>",W,N,V_delegate
@32@?0@8@16^B24
(******)
com.apple.gs.
(cag).
%@...
v32@?0@"NSString"8@"NSString"16^B24
v32@?0@8@16^B24
com.apple.authkit.trusted-device-list-changed
mids
T@"NSString",R,C,V_altDSID
operation
TQ,R,V_operation
machineID
T@"NSString",R,C,V_machineID
machineIDs
T@"NSArray",R,C,V_machineIDs
serialNumber
T@"NSString",R,C,V_serialNumber
timestamp
T@"NSDate",R,C,V_timestamp
_userSelection
_loginChoice
_selectedRequest
_rawAccountPassword
<%@: %p { selectedRequest: %@, authorizationSelection: %@, loginChoice: %@, rawPassword: %@}
(empty)
selectedRequest
T@"<AKCredentialRequestProtocol>",&,N,V_selectedRequest
userSelection
T@"AKAuthorizationScopesUserSelection",&,N,V_userSelection
loginChoice
T@"NSNumber",&,N,V_loginChoice
rawAccountPassword
T@"NSString",C,N,V_rawAccountPassword
[A-Z0-9a-z._%+-]+@[A-Za-z0-9.-]+\.[A-Za-z]{2,4}
SELF MATCHES %@
POST
AKAttestationErrorDomain
AKAttestationSignerValidity
sharedSigner
T@"AKAttestationSigner",R,N
_akAction
_itemIdentifier
<%@:%p> identifier: %@, action: %@, altDSID: %@
itemIdentifier
T@"NSString",C,N,V_itemIdentifier
akAction
T@"NSString",C,N,V_akAction
number
slotID
label
dataPreferred
defaultVoice
physicalSim
inUse
PhoneCertificate
phoneCertificate
T@"NSString",&,N,V_phoneCertificate
Tq,N,V_slotID
sharedInstance
T@"AKCarrierBundleUtilities",R
true
ak-button
ak-action
X-Apple-AK-Action
X-Apple-I-Cont
AKHarvestedContinuationHeaders
start-icsc
mk-validation
continue
complete
read
cancel
delete
teardown
clientInfo
X-Apple-AK-Continuation-Data
X-Apple-Alternate-Id
X-Apple-DSID
X-Apple-I-88CC-99DE-EE63-2736
X-Apple-PE-Token
X-Apple-I-Account-Name
X-Apple-I-Account-NameType
phoneNumber
X-Apple-Requested-Partition
AKUsername
AKPasswordResetTokenKey
AKEmailVerificationCompletedNotificationKey
icloud
imessage
facetime
itunesstore
gamecenter
AKICSCURLKey
AKRecoveryURLKey
X-Apple-iCSC-Identity-Token
X-Apple-iCSC-PE-Token
X-Apple-Recovery-Identity-Token
X-Apple-Recovery-PE-Token
X-Apple-MK-Validation-Token
X-Apple-I-iCSC-PRK
X-Apple-I-iCSC-MD-M
X-Apple-I-ICSCREC
status
success
failure
appleid
errorCode
errorMessage
action
start_account_recovery
try_again
prs_account_nm
personID
dsid
repair-state
authmode
pakedata
idmsdata
circlestep
ptkn
atxid
RequestURL
Request
Header
prkgen
X-Apple-AK-Auth-Type
X-Apple-AK-Request-Auth-Type
HSA2
X-Apple-I-Experiment-Mode
X-Apple-I-RecoveryKey-Show
X-Apple-I-HSA1-Conversion
X-Apple-I-Test-Account-Mode
source
clear_followup_notification
AKFollowUpAltDSIDKey
AKFollowUpServerURL
AKFollowUpSafariURL
com.apple.authkit.hsa2-password-reset
verifyPrimaryEmail
cfudata
cfuids
items
com.apple.AuthKitUI.AKFollowUpServerUIExtension
Sign In With Apple
AKUserIdentifier
AKAuthorizedScopes
AKUserInformation
AKAuthorizationCode
AKClientBundleID
envelope.fill.badge.shield.trailinghalf.fill
faceid
touchid
key.fill
AUTH_EVENT_TYPE_UNKNOWN
SRP_AUTH_FAILURE
SECOND_FACTOR_SERVER_UI
SECOND_FACTOR_PIGGYBACK_TRANSITION
SECOND_FACTOR_PIGGYBACK_FAILURE
SECOND_FACTOR_PIGGYBACK_ESCAPE_SMS_SUCCESS
SECOND_FACTOR_PIGGYBACK_ESCAPE_FAILURE
_authorizationRequests
_callerBundleID
_iconData
_iconName
_iconScale
_iconSize
_informativeText
_isFirstPartyLogin
_isRapportLogin
_isWebLogin
_localizedAppName
_passwordRequests
_proxiedAssociatedDomains
_proxiedClientAppID
_proxiedClientAppName
_proxiedClientBundleID
_proxiedServiceID
_proxiedClientTeamID
_proxiedDeviceClass
_proxiedDeviceName
_requestIdentifier
_requirePassword
_shouldForcePrivateEmail
_shoudlForceUI
_shoudlSkipBiometrics
_shoudlSkipUI
_upgradeContext
_upgradeFromPassword
B24@?0@"<AKCredentialRequestProtocol>"8Q16
<%@: %p> Auth Request %@ 
Password Request: %@ 
Proxied Bundle: %@
Proxied Team: %@
_shouldForceUI
TB,N,V_shouldForceUI
_shouldSkipBiometrics
TB,N,V_shouldSkipBiometrics
_shouldSkipAuthorizationUI
TB,N,V_shouldSkipAuthorizationUI
TB,N,V_shouldForcePrivateEmail
TB,N,V_requirePassword
TB,N,V_isWebLogin
TB,N,V_isFirstPartyLogin
TB,N,V_isRapportLogin
_isEligibleForUpgradeFromPassword
TB,R,N,V_isEligibleForUpgradeFromPassword
T@"NSString",&,N,V_callerBundleID
T@"AKAuthorizationUpgradeContext",R,N,V_upgradeContext
T@"NSString",&,N,V_proxiedClientAppName
T@"NSString",&,N,V_proxiedClientBundleID
_proxiedClientServiceID
T@"NSString",&,N,V_proxiedClientServiceID
T@"NSString",&,N,V_proxiedClientTeamID
T@"NSString",&,N,V_proxiedClientAppID
T@"NSArray",&,N,V_proxiedAssociatedDomains
T@"NSString",&,N,V_proxiedDeviceName
T@"NSString",&,N,V_proxiedDeviceClass
T@"NSString",C,N,V_iconName
T@"NSData",C,N,V_iconData
T@"NSNumber",C,N,V_iconScale
T@"NSValue",C,N,V_iconSize
T@"NSString",C,N,V_informativeText
requestIdentifier
T@"NSUUID",R,C,N,V_requestIdentifier
authorizationRequest
T@"AKAuthorizationRequest",&,N,V_authorizationRequest
passwordRequest
T@"AKPasswordRequest",&,N,V_passwordRequest
credentialRequests
T@"NSArray",&,N
_userInformation
_makePrivateEmail
{ userInformation: %@, makePrivateEmail: %@}
userInformation
T@"AKUserInformation",C,N,V_userInformation
makePrivateEmail
TB,N,V_makePrivateEmail
X-Mme-Device-Id
X-Apple-I-Client-Time
X-Mme-Proxied-Device-Id
X-Apple-Identity-Token
X-Apple-Proxied-Identity-Token
X-Apple-GS-Token
X-Apple-SL-Token
X-Apple-I-MD
X-Apple-I-MD-M
X-Apple-I-MD-RINFO
X-Apple-I-Companion-MD
X-Apple-I-Companion-MD-M
X-Apple-I-Companion-MD-RINFO
X-Apple-I-Proxied-MD
X-Apple-I-Proxied-MD-M
X-Apple-I-Proxied-MD-RINFO
X-Apple-Ephemeral-Auth
X-Mme-Nas-Qualify
X-Apple-I-Logged-In-Services
X-Apple-AK-Context-Type
X-Apple-I-CK
X-Apple-I-PRK
X-MMe-Country
X-MMe-Proxied-Country
X-Apple-I-Locale
X-Apple-I-TimeZone
X-Apple-I-TimeZone-Offset
X-MMe-Companion-Client-Info
X-MMe-Proxied-Client-Info
X-Apple-I-PRK-Gen
X-Apple-I-Proxied-PRK-Gen
X-Apple-I-Local-Login-Uses-AppleID
X-Apple-HB-Token
X-Apple-I-MLB
X-Apple-I-ROM
X-Apple-I-SRL-NO
X-Apple-I-Proxied-SRL-NO
X-Apple-I-Device-PN
X-Apple-IDS-PAC
X-Apple-I-Phone
X-Apple-iOS-SLA-Version
X-Apple-Proxied-App-Name
X-Apple-Client-App-Name
X-Apple-I-MD-LU
X-Apple-I-CDP-Circle-Status
X-Mme-Show-Warranty
X-MMe-Device-Model
X-Apple-I-AppleID
X-Apple-I-DeviceUserMode
X-Apple-I-CFU-State
X-Apple-Offer-Security-Upgrade
X-Apple-I-App-Provided-Context
X-Apple-I-Proxied-ICSCREC
X-Apple-Test-Application
X-Apple-I-Device-Configuration-Mode
X-Apple-I-SKU-Country
X-Apple-I-DC
X-Apple-I-UrlSwitch-Info
X-Apple-I-Request-UUID
false
%@:%@
itunes
piggybacking
RegionCode
%llu
AKDisablePET
AKFakeAuthSuccess
AKDisablePiggy
AKAddHS2CreateHeader
AKSuppressHSA2Suggestions
AKAllowPhoneNumberAccounts
AKAddExperimentalModeHeader
AKAddTestApplicationHeader
AKSuppressModalSheetsInMacBuddy
_AKAlwaysShowWelcome
_AKAutocycleAppsInTiburon
_AKAutocycleAppsInWebTakeOver
_AKAddTestAccountHeader
_AKAuthorizationDemoMode
_AKCloudPartition
AKLastIDMSEnvironment
com.apple.authkit.config
v12@?0i8
shouldDisablePETs
Tq,N
shouldFakeAuthSuccess
shouldDisablePiggybacking
shouldSuppressHSA2Suggestions
shouldAddHSA2CreateHeader
shouldAllowPhoneNumberAccounts
shouldAllowExperimentalMode
shouldAllowDemoMode
shouldAllowTestApplication
shouldEnableTestAccountMode
shouldSuppressModalSheetsInMacBuddy
shouldAlwaysShowWelcome
shouldAutocycleAppsInTiburon
shouldAutocycleAppsInWebTakeover
lastKnownIDMSEnvironment
TQ,N
requestedCloudPartition
AKConfigurationDidChangeNotification
cfgs
abs-enable
baa-interval
X-MMe-Nas-Qualify
X-MMe-Nas-E
X-Apple-Baa-S
X-Apple-Baa
X-MMe-Client-Info-S
X-Apple-Baa-E
X-MMe-Proxied-Nas-Qualify
X-MMe-Proxied-Nas-E
X-Apple-Proxied-Baa-S
X-Apple-Proxied-Baa
X-MMe-Proxied-Client-Info-S
X-Apple-Proxied-Baa-E
com.apple.authkit.signingQ
@"NSXPCConnection"8@?0
v32@?0@"NSDictionary"8@"NSData"16@"NSError"24
authenticationController
T@"AKAppleIDAuthenticationController",&,N,V_authenticationController
isProxy
TB,N,V_isProxy
v16@?0@"NSNumber"8
@"NSString"32@?0@"NSString"8@"NSData"16^B24
_services
_operatingSystems
_includeUntrustedDevices
_includeFamilyDevices
<%@:%p> altDSID: %@, os: %@, services: %@, untrusted: %d, family: %d
includeUntrustedDevices
TB,N,V_includeUntrustedDevices
includeFamilyDevices
TB,N,V_includeFamilyDevices
services
T@"NSArray",C,N,V_services
operatingSystems
T@"NSArray",C,N,V_operatingSystems
/System/Library/Frameworks/AppleMediaServices.framework/AppleMediaServices
/System/Library/PrivateFrameworks/AppleMediaServices.framework/AppleMediaServices
/AppleInternal/Library/Frameworks/AppleMediaServices.framework/AppleMediaServices
AMSMediaTask
AMSBagKeySet
AMSBag
AMSMediaArtwork
AMSMediaArtworkFormatPNG
AMSMediaArtworkCropStyleBoundedBox
AMSMediaTaskPlatformMac
artwork
v24@?0@"AMSMediaResult"8@"NSError"16
attributes
platformAttributes
com.apple.ak.authorizationservices.xpc
AppleIDAuthSupportNoPinning
.GlobalPreferences
adsid
DSID
aliases
retaining-services
additionalInfo
reachableEmailAddresses
vettedPrimaryEmail
forwardingEmail
phoneAsAppleID
isUnderage
demoAccount
ageOfMajority
appleIdSignInEnabled
privateEmailSelection
authorizationEmailSelection
primaryEmail
WarmUpVerificationTimeStamp
DeviceTrustRevoked
AuthModeTimeStamp
AKAccountManagerQueue
v32@?0@"NSString"8Q16^B24
B24@?0@"ACAccount"8Q16
v32@?0@"ACAccount"8Q16^B24
@"NSString"32@?0@"NSNumber"8Q16^B24
AKAccountManager.groupedAccountCleanup
accountClass
primaryAccount
primary
primaryEmailVerified
appleIdAliases
@8@?0
T@"AKAccountManager",R,N
appleIDAccountType
T@"ACAccountType",R,N
store
T@"ACAccountStore",&,N,V_accountStore
authKitAccountType
iCloudAccountType
%02X
com.apple.ak.anisette.xpc
XPCInterface
T@"NSXPCInterface",R,N
_user
_site
_appleIDAuth
_createAppleID
AKAuthorizationLoginChoice:
User: %@    Site: %@    AppleIDAuth: %@
user
T@"NSString",C,N,V_user
site
T@"NSString",C,N,V_site
appleIDAuth
TB,N,GisAppleIDAuthorization,V_appleIDAuth
createAppleID
TB,N,GshouldCreateAppleID,V_createAppleID
/System/Library/Frameworks/CoreFollowUp.framework/CoreFollowUp
/System/Library/PrivateFrameworks/CoreFollowUp.framework/CoreFollowUp
/AppleInternal/Library/Frameworks/CoreFollowUp.framework/CoreFollowUp
FLFollowUpAction
FLFollowUpController
FLFollowUpItem
FLFollowUpNotification
FLGroupIdentifierAccount
FLNotificationOptionForce
FLNotificationOptionSpringboardAlert
_identityToken
_heartbeatToken
_shouldSendSigningHeaders
_shouldSendEphemeralAuthHeader
_serviceType
_continuationToken
_passwordResetToken
_serviceToken
_proxiedDeviceAnisetteData
_proxiedDevice
_proxyAppName
_clientAppName
_shouldSendLocalUserHasAppleIDLoginHeader
_shouldSendICSCIntentHeader
_loggedInServices
_hasEmptyPasswordOverride
_securityUpgradeContext
_shouldOfferSecurityUpgrade
_shouldSendPhoneNumber
_phoneNumberCertificate
_phoneInformation
_followupItems
_appProvidedContext
_proxiedAltDSID
_proxiedIdentityToken
_continuationHeaders
v16@?0@?<v@?>8
v24@?0@"AKAnisetteData"8@"NSError"16
v24@?0@"AKAttestationData"8@"NSError"16
hsa2
X-Apple-CDP-Action
@"NSString"32@?0@"NSString"8@"NSString"16^B24
shouldSendEphemeralAuthHeader
TB,N,V_shouldSendEphemeralAuthHeader
shouldSendICSCIntentHeader
TB,N,V_shouldSendICSCIntentHeader
shouldSendLocalUserHasAppleIDLoginHeader
TB,N,V_shouldSendLocalUserHasAppleIDLoginHeader
shouldSendPhoneNumber
TB,N,V_shouldSendPhoneNumber
shouldOfferSecurityUpgrade
TB,N,V_shouldOfferSecurityUpgrade
phoneNumberCertificate
T@"NSString",C,N,V_phoneNumberCertificate
phoneInformation
T@"NSArray",C,N,V_phoneInformation
serviceType
Tq,N,V_serviceType
loggedInServices
T@"NSArray",C,N,V_loggedInServices
passwordResetToken
T@"NSString",C,N,V_passwordResetToken
continuationToken
T@"NSString",C,N,V_continuationToken
heartbeatToken
T@"NSString",C,N,V_heartbeatToken
identityToken
T@"NSString",C,N,V_identityToken
initialURLRequestKey
T@"NSString",C,N,V_initialURLRequestKey
proxyAppName
T@"NSString",C,N,V_proxyAppName
clientAppName
T@"NSString",C,N,V_clientAppName
appProvidedContext
T@"NSString",C,N,V_appProvidedContext
hasEmptyPasswordOverride
T@"NSNumber",&,N,V_hasEmptyPasswordOverride
securityUpgradeContext
T@"NSString",C,N,V_securityUpgradeContext
followupItems
T@"NSString",C,N,V_followupItems
dataCenterIdentifier
T@"NSString",C,N,V_dataCenterIdentifier
proxiedDevice
T@"AKDevice",&,N,V_proxiedDevice
proxiedAltDSID
T@"NSString",&,N,V_proxiedAltDSID
proxiedIdentityToken
T@"NSString",&,N,V_proxiedIdentityToken
anisetteDataProvider
T@"<AKAnisetteServiceProtocol>",&,N,V_anisetteDataProvider
proxiedDeviceAnisetteData
T@"AKAnisetteData",&,N,V_proxiedDeviceAnisetteData
proxiedDeviceAttestationData
T@"AKAttestationData",&,N,V_proxiedDeviceAttestationData
shouldSendAbsintheHeader
TB,N
shouldSendSigningHeaders
TB,N,V_shouldSendSigningHeaders
serviceToken
T@"NSString",C,N,V_serviceToken
team_id
privateEmail
apps
v32@?0@8Q16^B24
<%@:%p> team: %@, user: %@, email: %@, apps: {
userIdentifier
T@"NSString",C,N,V_userIdentifier
T@"NSString",C,N,V_privateEmail
T@"NSDictionary",C,N,V_apps
step
atxnid
pake
<%@:%p> transaction: %@, step: %ld, errorCode: %ld
_responseInfo
_serverInfo
_clientInfo
_transactionId
_clientErrorCode
_circleStep
responseMessage
T@"AKPushMessage",&,N,V_responseMessage
responseInfo
T@"NSDictionary",&,N,V_responseInfo
circleStep
TQ,N,V_circleStep
serverInfo
T@"NSString",&,N,V_serverInfo
T@"NSData",&,N,V_clientInfo
clientErrorCode
Tq,N,V_clientErrorCode
T@"NSString",&,N,V_altDSID
transactionId
T@"NSString",&,N,V_transactionId
gsService
midStartProvisioning
midFinishProvisioning
midSyncMachine
securityUpgradeEligibility
securityUpgrade
validateCode
postData
iForgot
iForgotResetNotification
createAccount
device_list_self
trustedDevices
trustedDevicesSummaryUrl
qualifyCert
qualifySession
tokenUpgrade
postConfigData
fetchConfigData
changePasswordUrl
validateVettingToken
renewRecoveryToken
circle
followUpItems
fetchUserInfo
fetchAuthorizedApps
fetchPrimaryApp
fetchAuthMode
storeModernRecoveryKey
acsURL
repair
userVerificationResult
appleIDAuthorizeHTMLResponse
secondaryAuth
createChildAccount
deleteAuthorizedApp
urls
apsEnv
iForgotAppleIdLocked
idmsEnv
is-phone-number-supported
appleOwnedDomains
appleIDAuthorizationUrls
is-in-line-flow-supported
continuation-header-prefix
2faUpgradeAccountTypePriority
IdMS1
IdMS2
IdMS3
escapeHatchURL
T@"NSURL",R,N
bagProvider
T@"<AKURLBagDictionaryProvider>",&,N,V_bagProvider
basicAuthURL
startProvisioningURL
endProvisioningURL
syncAnisetteURL
upgradeEligibilityCheckURL
upgradeUIURL
validateCodeURL
checkInURL
notificationAckURL
iForgotURL
iForgotContinuationURL
createAppleIDURL
deviceListURL
trustedDevicesURL
trustedDevicesSummaryURL
absintheCertURL
absintheSessionURL
tokenUpgradeURL
configurationInfoURL
fetchConfigDataURL
changePasswordURL
validateVettingTokenURL
renewRecoveryTokenURL
circleURL
fetchFollowUps
fetchUserInfoURL
fetchAppInfoURL
fetchPrimaryBundleIDURL
fetchAuthenticationModeURL
storeModernRecoveryURL
repairURL
userVerificationURL
appleIDAuthorizeHTMLResponseURL
createChildAccountURL
deleteAuthorizedAppURL
appleIDAuthorizationURLs
APSEnvironment
T@"NSString",R,N
IDMSEnvironment
TQ,R,N
phoneNumberSupportedConfig
TB,R,N,GisPhoneNumberSupportedConfig
inlineFlowSupportedConfig
TB,R,N,GIsInlineFlowSupportedConfig
continuationHeaderPrefix
securityUpgradeServiceNames
T@"NSArray",R,N
actions
notification
body
title
dismiss
frequency
urlKey
force
delay
osAlert
defbtn
albtn
priority
zeroAction
AKAction
@32@?0@"NSDictionary"8Q16^B24
extensionIdentifier
T@"NSString",C,N
representingBundlePath
bundleIconName
T@"NSString",C,N,V_extensionIdentifier
T@"NSString",C,N,V_representingBundlePath
T@"NSString",C,N,V_bundleIconName
_encodedRecoveryIdentityToken
_encodedRecoveryPET
_authContext
_recoveryContinuationURL
_supportsMasterKeyRecovery
supportsMasterKeyRecovery
TB,N,V_supportsMasterKeyRecovery
encodedRecoveryIdentityToken
T@"NSString",C,N,V_encodedRecoveryIdentityToken
encodedRecoveryPET
T@"NSString",C,N,V_encodedRecoveryPET
recoveryContinuationURL
T@"NSURL",C,N,V_recoveryContinuationURL
authContext
T@"AKAppleIDAuthenticationContext",&,N,V_authContext
decodedRecoveryIdentityTokenString
decodedRecoveryPETString
prefs:root=APPLE_ACCOUNT
prefs:root=APPLE_ACCOUNT&aaaction=upgradeSecurityLevel
prefs:root=Passcode
AUTH_ERROR_ALERT_INVALID_CONTEXT_TITLE
Localizable
AUTH_ERROR_ALERT_INVALID_CONTEXT_MESSAGE
AUTH_ERROR_ALERT_BUTTON_OK
AUTH_ERROR_ALERT_MISSING_APPLE_ACCOUNT_TITLE
AUTH_ERROR_ALERT_MISSING_APPLE_ACCOUNT_MESSAGE
AUTH_ERROR_ALERT_BUTTON_SETTINGS
AUTH_ERROR_ALERT_BUTTON_CLOSE
AUTH_ERROR_ALERT_ACCOUNT_NOT_SUPPORTED_TITLE
AUTH_ERROR_ALERT_ACCOUNT_NOT_SUPPORTED_MESSAGE
AUTH_ERROR_ALERT_UNVERIFIED_EMAIL_TITLE
AUTH_ERROR_ALERT_UNVERIFIED_EMAIL_MESSAGE
AUTH_ERROR_ALERT_INSUFFICIENT_SECURITY_LEVEL_TITLE
AUTH_ERROR_ALERT_INSUFFICIENT_SECURITY_LEVEL_MESSAGE_TV
AUTH_ERROR_ALERT_CANNOT_FIND_SERVER_TITLE
wapi
AUTH_ERROR_ALERT_CANNOT_FIND_SERVER_MESSAGE_WLAN
AUTH_ERROR_ALERT_CANNOT_FIND_SERVER_MESSAGE_WIFI
AUTH_ERROR_ALERT_UNDERAGE_ACCOUNT_TITLE
AUTH_ERROR_ALERT_UNDERAGE_ACCOUNT_MESSAGE
AUTH_ERROR_ALERT_CREATE_PASSCODE_TITLE
AUTH_ERROR_ALERT_CREATE_PASSCODE_MESSAGE_WATCH
AUTH_ERROR_BUTTON_OPEN_PASSCODE_SETUP
&%@=%@
T@"AKAlertHandler",R,N
uiProvider
T@"<AKAlertHandlerUIProvider>",W,N,V_uiProvider
context
T@"AKAppleIDAuthenticationContext",&,N,V_context
X-Apple-Session-Key
X-Apple-Encrypted-Session-Key
stringValue
T@"NSString",C,N,V_stringValue
expirationDate
T@"NSDate",R,N,V_expirationDate
name
T@"NSString",C,N,V_name
sessionKey
T@"NSData",R,N
encryptedSessionKey
externalizedVersion
externalizedVersionString
X-Apple-I-MD-Cmd-Target
X-Apple-I-Data
AKAnisetteControllerLock
_pairedDevice
_proxiedAnisetteData
v16@?0@"NSDictionary"8
v24@?0@"NSURLRequest"8@"NSError"16
v16@?0@"NSMutableDictionary"8
paired
X-Apple-I-MD-DATA
pairedDevice
T@"AKDevice",&,N,V_pairedDevice
_SERVICE_ICLOUD
_SERVICE_ITUNES
_SERVICE_IMESSAGE
_SERVICE_FACETIME
_SERVICE_GAME_CENTER
_NO_SERVICE
_machineID
_oneTimePassword
_routingInfo
AKAnisetteData <%p>: {MID: %@ - OTP: %@ - RD: %@}
T@"NSString",C,N,V_machineID
oneTimePassword
T@"NSString",C,N,V_oneTimePassword
routingInfo
TQ,N,V_routingInfo
IDToken
authCode
isLikelyRealUser
_isLikelyRealUser
Authorization Credential:
 UID: %@ 
 Identity Token: %@ 
 AuthorizationCode: %@ 
 User Verification Result: %@ 
 User Info: %@ /n Transaction ID: %@
T@"NSString",R,C,N
TB,N,V_isLikelyRealUser
authorizedScopes
T@"NSArray",R,C,N,V_authorizedScopes
T@"NSData",R,C,N,V_identityToken
authorizationCode
T@"NSData",R,C,N,V_authorizationCode
T@"NSString",R,C,N,V_state
T@"AKUserInformation",R,N,V_userInformation
T@"NSString",R,C,N,V_transactionID
T@"NSString",R,C,N,V_userIdentifier
teams
<%@:%p> version: %@, teams: {
T@"NSString",R,C,N,V_authorizedAppListVersion
T@"NSDictionary",R,C,N,V_teams
v32@?0@"FLFollowUpItem"8Q16^B24
@32@?0@"FLFollowUpItem"8Q16^B24
AKAuthenticationError
AKAnisetteError
AKSQLError
AKUnderlyingADIErrors
_authorizedRequest
_credential
<%@: %p {
Authorized request: %@
Credential: %@
authorizedRequest
T@"<AKCredentialRequestProtocol>",&,N,V_authorizedRequest
credential
T@"<AKCredential>",&,N,V_credential
_data
_scale
_maskingStyle
data
T@"NSData",&,N,V_data
scale
T@"NSNumber",&,N,V_scale
maskingStyle
TQ,N,V_maskingStyle
AKAbsintheErrorDomain
v24@?0@"NSData"8@"NSError"16
/System/Library/Frameworks/CoreCDP.framework/CoreCDP
/System/Library/PrivateFrameworks/CoreCDP.framework/CoreCDP
/AppleInternal/Library/Frameworks/CoreCDP.framework/CoreCDP
/System/Library/Frameworks/CoreCDPUI.framework/CoreCDPUI
/System/Library/PrivateFrameworks/CoreCDPUI.framework/CoreCDPUI
/AppleInternal/Library/Frameworks/CoreCDPUI.framework/CoreCDPUI
CDPFollowUpContext
CDPFollowUpController
CDPContext
CDPRecoveryController
CDPStateController
CDPUIAccountRecoveryController
CDPUIController
CDPAccount
CDPStateErrorDomain
CDPIDMSPasswordResetKey
CDPIDMSRecordMIDKey
_waitForReply
_identityTokenValue
_heartbeatTokenValue
_pushToken
_payload
_waitForReplyTimeout
__notifyOfTimeout
identityTokenValue
T@"NSString",&,N,V_identityTokenValue
heartbeatTokenValue
T@"NSString",&,N,V_heartbeatTokenValue
pushToken
T@"NSString",&,N,V_pushToken
_notifyOfTimeout
TB,N,V__notifyOfTimeout
payload
T@"AKCircleRequestPayload",&,N,V_payload
waitForReply
TB,N,V_waitForReply
waitForReplyTimeout
Td,N,V_waitForReplyTimeout
T@"<AKAuthorizationUIProvider>",&,V_uiProvider
AKFollowUpAccountRefreshTimestamp
followupProvider
T@"<AKFollowUpProvider>",&,N,V_followupProvider
controller
T@"AKAppleIDAuthenticationController",&,N,V_controller
_credentialRequestContext
_loginChoices
<%@: %p> - bundleID: %@, localizedAppName: %@, informativeText: %@; credentialRequestContext: %@, userInformation: %@, loginChoices: %@
com.apple.aktool
aktool
localizedAppName
T@"NSString",R,C,N,V_localizedAppName
informativeText
T@"NSString",R,C,N,V_informativeText
iconName
T@"NSString",R,C,N,V_iconName
iconData
T@"NSData",R,C,N,V_iconData
iconScale
T@"NSNumber",R,C,N,V_iconScale
credentialRequestContext
T@"AKCredentialRequestContext",&,N,V_credentialRequestContext
T@"AKUserInformation",&,N,V_userInformation
loginChoices
T@"NSArray",C,N,V_loginChoices
com.nextdoor.nextdoor
com.etsy.etsyforios
com.tinyspeck.chatlyio
com.apple.AppShack
com.apple.AuthKit.AKNetworkObserver
v16@?0@"NSObject<OS_nw_path>"8
isNetworkReachable
TB,R,V_isNetworkReachable
_request
_resourceLoadDelegate
_requestType
_presentationType
_whitelistedRedirectURLs
<%@: %p 
 request: %@
 delegate: %@
 requestType: %lu
 presentationType: %lu 
resourceLoadDelegate
T@"AKAppleIDServerResourceLoadDelegate",&,N,V_resourceLoadDelegate
requestType
TQ,N,V_requestType
presentationType
TQ,N,V_presentationType
whitelistedPathURLs
T@"NSArray",C,N,V_whitelistedPathURLs
/System/Library/Frameworks/KeychainCircle.framework/KeychainCircle
/System/Library/PrivateFrameworks/KeychainCircle.framework/KeychainCircle
/AppleInternal/Library/Frameworks/KeychainCircle.framework/KeychainCircle
KCAESGCMDuplexSession
B32@?0@"FLFollowUpItem"8Q16^B24
X-Apple-I-Accepted-Terms
_userIdentifier
_password
password
T@"NSString",R,C,N,V_password
AKApplicationState
AKApplicationNonce
AKAppProvidedData
AKRequestedScopes
AKClientID
AKTeamID
AKAuthorizationStatus
AKAuthorizationAccount
AKAuthorizationIsSilentAppTransfer
AKAuthorizationIsEligibleForUpgradeFromPassword
<%@: %p {
requestIdentifier: %@,
transactionID: %@, 
clientID: %@,
teamID: %@,
userIdentifier: %@,
altDSID: %@,
state: %@,
nonce: %@,
requestedScopes: %@,
appProvidedData: %@,
isSilentAppTransfer: %d,
isEligibleForUpgradeFromPassword: %d,
existingStatus
Tq,N,V_existingStatus
authkitAccount
T@"ACAccount",&,N,V_authkitAccount
internalAuthKitAccount
T@"ACAccount",R,N
_isSilentAppTransfer
TB,N,V_isSilentAppTransfer
requestedScopes
T@"NSArray",C,N,V_requestedScopes
appProvidedData
T@"NSDictionary",C,N,V_appProvidedData
isEligibleForUpgradeFromPassword
TB,N,V_isEligibleForUpgradeFromPassword
email
X-MMe-Client-Info
https
listenerEndpoint
T@"NSXPCListenerEndpoint",R,N,V_listenerEndpoint
en_US_POSIX
yyyy'-'MM'-'dd'T'HH':'mm':'ss'Z'
<%@: %p> requestIdentifier: %@,
altDSID: %@,
userID: %@ 
transactionID:%@
T@"NSUUID",R,C,N
T@"NSString",R,C,N,V_altDSID
T@"NSUUID",R,C,N,V_transactionID
underAge
studentAccount
mkid
accountName
phoneAsAppleId
_givenName
_familyName
_forwardingEmail
_primaryEmailAddress
_accountName
_accountAliases
_reachableEmails
_previouslySelectedEmail
_ageOfMajority
_authorizedApplicationsListVersion
_masterKeyID
_vettedPrimaryEmail
_phoneAsAppleID
_isUnderage
_isLegacyStudent
_hasUsedAuthorization
_previouslyWantedPrivateEmail
_appleIDSecurityLevel
_authMode
_repairState
_selectedEmail
_additionalInfo
<%@: %p {
givenName: %@,
familyName: %@,
forwardingEmail: %@,
primaryEmailAddress: %@,
accountName: %@,
accountAliases: %@,
reachableEmails: %@,
authorizedApplicationsListVersion: %@,
masterKeyID: %@,
vettedPrimaryEmail: %@,
phoneAsAppleID: %@,
isUnderage: %@,
geOfMajority: %@,
isLegacyStudent: %@,
hasUsedAuthorization: %@, 
appleIDSecurityLevel: %lu,
authMode: %lu,
repairState: %lu,
selectedEmail: %@,
additionalInfo: %@,
givenName
T@"NSString",C,N,V_givenName
familyName
T@"NSString",C,N,V_familyName
T@"NSString",C,N,V_forwardingEmail
T@"NSString",C,N,V_previouslySelectedEmail
primaryEmailAddress
T@"NSString",C,N,V_primaryEmailAddress
T@"NSString",C,N,V_accountName
accountAliases
T@"NSArray",C,N,V_accountAliases
T@"NSArray",C,N,V_reachableEmails
authorizedApplicationsListVersion
T@"NSString",C,N,V_authorizedApplicationsListVersion
masterKeyID
T@"NSString",C,N,V_masterKeyID
T@"NSNumber",C,N,V_vettedPrimaryEmail
T@"NSNumber",C,N,V_phoneAsAppleID
T@"NSNumber",C,N,V_isUnderage
T@"NSString",C,N,V_ageOfMajority
isLegacyStudent
T@"NSNumber",C,N,V_isLegacyStudent
hasUsedAuthorization
T@"NSNumber",C,N,V_hasUsedAuthorization
previouslyWantedPrivateEmail
T@"NSNumber",C,N,V_previouslyWantedPrivateEmail
appleIDSecurityLevel
TQ,N,V_appleIDSecurityLevel
authMode
TQ,N,V_authMode
repairState
TQ,N,V_repairState
selectedEmail
T@"NSString",C,N,V_selectedEmail
T@"NSDictionary",C,N,V_additionalInfo
_uniqueDeviceIdentifier
_serverFriendlyDescription
_color
_enclosureColor
_coverGlassColor
_housingColor
_backingColor
_locale
_ROMAddress
_MLBSerialNumber
_modelNumber
_linkType
+[AKDevice activeIDSPeerDevice]
Library/Caches
AKDevice <%p> {%@} link %@
@"NSString"8@?0
@"NSNumber"8@?0
UniqueDeviceID
ModelNumber
%@;%@;%@
%@/%@ (%@/%@)
<%@> <%@> <%@>
iPhoneSimulator
ivIu8YTDnBSrYv/SN4G8Ag
ProductVersion
Simulator
@"NSLocale"8@?0
com.apple.AuthKit
%@_%@
systemContainerURL
T@"NSURL",R,C
systemContainerCacheURL
T@"NSString",R
userChosenName
userFullName
internationalMobileEquipmentIdentity
isProtectedWithPasscode
isBiometricAuthCapable
isFaceIDCapable
isUnlocked
isInCircle
mobileEquipmentIdentifier
integratedCircuitCardIdentifier
isInternalBuild
isMultiUserMode
serializedData
T@"NSData",R
serverFriendlyDescription
T@"NSString",C,N,V_serverFriendlyDescription
uniqueDeviceIdentifier
T@"NSString",C,N,V_uniqueDeviceIdentifier
color
T@"NSString",C,N,V_color
enclosureColor
T@"NSString",C,N,V_enclosureColor
coverGlassColor
T@"NSNumber",C,N,V_coverGlassColor
housingColor
T@"NSNumber",C,N,V_housingColor
backingColor
T@"NSNumber",C,N,V_backingColor
locale
T@"NSLocale",C,N,V_locale
MLBSerialNumber
T@"NSString",C,N,V_MLBSerialNumber
ROMAddress
T@"NSString",C,N,V_ROMAddress
modelNumber
T@"NSString",C,N,V_modelNumber
linkType
TQ,SsetLinkType:,V_linkType
localUserUUID
/System/Library/PreferencePanes/EnergySaver.prefPane
/System/Library/PreferencePanes/SharingPref.prefPane
/System/Library/PreferencePanes/Security.prefPane
/System/Library/PreferencePanes/InternetAccounts.prefPane
/System/Library/PreferencePanes/ParentalControls.prefPane
/System/Library/PreferencePanes/AppleIDPrefPane.prefPane
com.apple.SoftwareUpdate
com.apple.Photos
com.apple.mail
com.apple.AppStore
AKAnisetteProvisioningControllerXPCLock
No DSID was provided!
targetDevice
T@"AKDevice",&,N,V_targetDevice
-[_AKAnisetteProviderProxy provisionAnisetteForContext:withCompletion:]
-[_AKAnisetteProviderProxy syncAnisetteForContext:withSIMData:completion:]
-[_AKAnisetteProviderProxy eraseAnisetteForContext:withCompletion:]
-[_AKAnisetteProviderProxy fetchAnisetteDataForContext:provisionIfNecessary:withCompletion:]
-[_AKAnisetteProviderProxy legacyAnisetteDataForContext:DSID:withCompletion:]
%06u
LOGIN_CODE_ALERT_OK_BUTTON
/System/Library/Frameworks/UIKit.framework/UIKit
/System/Library/PrivateFrameworks/UIKit.framework/UIKit
/AppleInternal/Library/Frameworks/UIKit.framework/UIKit
/System/Library/Frameworks/RemoteUI.framework/RemoteUI
/System/Library/PrivateFrameworks/RemoteUI.framework/RemoteUI
/AppleInternal/Library/Frameworks/RemoteUI.framework/RemoteUI
RUIParser
NSDocumentTypeDocumentAttribute
NSHTMLTextDocumentType
https://gsa.apple.com
/auth
/auth/verify/phone
/auth/verify/phone/securitycode
numberWithDialCode
obfuscatedNumber
pushMode
id: %@
number with dial code: %@
mode: %@
identifier
T@"NSNumber",&,N,V_identifier
T@"NSString",&,N,V_numberWithDialCode
T@"NSString",&,N,V_obfuscatedNumber
T@"NSString",&,N,V_pushMode
Enter username: 
Enter password: 
Failed to validate username and password combination: %@
Enter 6 digit code: 
Failed to read code!
Failed to validate code: %@
IDP second factor-authentication is not supported!
Requesting second-factor ServerUI...
Unexpected second-factor authentication (%@)!
Unknown verification type
Unsupported object model found: %@
v16@?0@"NSString"8
missing page
missing passcode view
missing passcode identifier
missing response URL
httpMethod
missing HTTP method
Enter second factor code: 
secure
v24@?0@"AKTrustedPhoneNumber"8@"NSError"16
trustedPhoneNumbers
Multiple trusted numbers found!
A second factor code was send to %@ via %@
v32@?0@"NSNumber"8@"AKTrustedPhoneNumber"16^B24
%@. %@ via %@
Please select a trusted number: 
Verifying code...
HTMLContent
application/x-buddyml
Accept
application/x-plist
Content-Type
application/json
Error deserializing data %@ for data %@
code
securityCode
mode
verificationType
Tq,N,V_verificationType
secondFactorCode
T@"NSNumber",C,N,V_secondFactorCode
AKTemporaryValue
com.apple.ak.code.entered
AKAuthenticationInternalTokenCK
findmydeviced
com.apple.authkit.generic
com.apple.authkit.messages
com.apple.authkit.passkit
com.apple.authkit.appleconnect
com.apple.authkit.screentime
com.apple.authkit.tinker
com.apple.authkit.keychainsync
X-Apple-Security-Upgrade-Context
SERVICE_NAME_ICLOUD
SERVICE_NAME_ITUNES
SERVICE_NAME_IMESSAGE
SERVICE_NAME_FACETIME
SERVICE_NAME_GAMECENTER
INLINE_PASSWORD_ALERT_TITLE
PASSCODE_ALERT_MESSAGE_IPAD
PASSCODE_ALERT_MESSAGE_WATCH
%username%
authless
_reason
_username
_isUsernameEditable
_DSID
_isProxyingForApp
_proxiedAppBundleID
_proxiedAppName
_serviceIdentifiers
_identifier
_maximumLoginAttempts
_isEphemeral
_shouldAllowAppleIDCreation
_shouldPromptForPasswordOnly
_passwordPromptTitle
_defaultButtonString
_httpHeadersForRemoteUI
_isPasswordEditable
_shouldUpdatePersistentServiceTokens
_needsCredentialRecovery
_needsNewAppleID
_needsPasswordChange
_shouldPreventInteractiveAuth
_generatedCode
_latitude
_longitude
_deviceClass
_deviceColor
_deviceEnclosureColor
_shouldForceInteractiveAuth
_capabilityForUIDisplay
_companionDeviceAnisetteData
_companionDevice
_isAppleIDLoginEnabled
_hasEmptyPassword
_shouldRequestShortLivedToken
_shortLivedToken
_shouldRequestConfigurationInfo
_isTriggeredByNotification
_message
_anticipateEscrowAttempt
_isFirstTimeLogin
_supportsPiggybacking
_desiredInternalTokens
_shouldSkipSettingsLaunchAlert
_shouldSendIdentityTokenForRemoteUI
_shouldRequestRecoveryPET
_title
_shouldSkipInitialReachabilityCheck
_attemptIndex
_authenticationType
_shouldSendGrandSlamTokensForRemoteUI
_needsRepair
_appProvidedData
_masterKey
_performUIOutOfProcess
_keepAlive
_cancelButtonString
_alternativeButtonString
_hideAlternativeButton
_hideCancelButton
_hideReasonString
_clientShouldHandleAlternativeButtonAction
_windowTitle
_alwaysShowUsernameField
_privacyBundleIdentifier
_authenticationPromptStyle
_needsNewChildAccount
_authenticationMode
_needsSecurityUpgradeUI
_displayImageData
_helpAnchor
_helpBook
<%@: %p { UUID: %@ }>
<%@: %p {
UUID: %@,
username: %@,
editable-username: %@,
altDSID: %@,
DSID: %@,
password: %@,
service-type: %ld,
service IDs: %@,
reason: %@
ephemeral: %@,
password-only: %@,
authentication-type: %@,
update-service-tokens: %@,
offer-upgrade: %@,
offer-upgrade-context: %@,
proxying-for-app: %@,
proxied-app-id: %@,
proxied-device: %@,
companion-device: %@
max-login-attempts: %@
appleid-login-enabled: %@
has-empty-password: %@
request-slt: %@
short-lived-token: %@
identity-token: %@
triggered-by-push: %@
skip-alert: %@
skip-reachability-check: %@
attempt-index: %lu,
masterKey: %@,
performUIOutOfProcess: %@,
INLINE_PASSWORD_ALERT_MESSAGE
PASSWORD_ALERT_MESSAGE_PROXY_INTERNAL_BLAME
PASSWORD_ALERT_MESSAGE_SERVICE_TYPE_INTERNAL_BLAME
PASSWORD_ALERT_MESSAGE_INTERNAL_BLAME
INLINE_PASSWORD_ALERT_OK_BUTTON
INLINE_PASSWORD_ALERT_CANCEL_BUTTON
PASSCODE_ALERT_TITLE_LOCKSCREEN
PASSCODE_ALERT_MESSAGE_LOCKSCREEN_GENERIC
PASSWORD_ALERT_TITLE_LOCKSCREEN
PASSWORD_ALERT_MESSAGE_LOCKSCREEN_GENERIC
INLINE_PASSWORD_ALERT_PASSCODE_PLACEHOLDER
INLINE_PASSWORD_ALERT_PASSWORD_PLACEHOLDER
INLINE_PASSWORD_ALERT_USERNAME_PLACEHOLDER_TV
INLINE_PASSWORD_ALERT_PASSWORD_PLACEHOLDER_TV
WRONG_PASSWORD_ALERT_TRY_AGAIN_BUTTON
WRONG_PASSWORD_ALERT_CANCEL_BUTTON
ENTER_VERITIFCATION_CODE_CANCEL_BUTTON
ENTER_VERITIFCATION_CODE_FAILED_BUTTON
WRONG_LOGIN_CODE_TRY_AGAIN_BUTTON
WRONG_LOGIN_CODE_ALERT_CANCEL_BUTTON
com.apple.ak.twofa
T@"NSString",C,N,S_setProxiedAppName:
T@"NSDictionary",C,N
T@"AKDevice",C,N
companionDevice
authenticationMode
T@"NSUUID",R,N,V_identifier
TQ,R,N,V_capabilityForUIDisplay
TB,N,V_shouldSendIdentityTokenForRemoteUI
TB,N,V_shouldSendGrandSlamTokensForRemoteUI
_requiresPasswordInput
TB,R,N
_interpolatedReason
_interpolatedReasonWithBlame
TB,N,V_shouldSkipInitialReachabilityCheck
TQ,N,V_attemptIndex
contextEligibleForSilentAuthCoercion
TB,R,N,GisContextEligibleForSilentAuthCoercion
contextEligibleForSilentAuth
TB,R,N,GisContextEligibleForSilentAuth
contextEligibleForBiometricOrPasscodeAuth
TB,R,N,GisContextEligibleForBiometricOrPasscodeAuth
TB,N,V_performUIOutOfProcess
TB,N,V_keepAlive
displayImageData
T@"NSData",&,V_displayImageData
authenticationType
TQ,N,V_authenticationType
shouldPromptForPasswordOnly
TB,N,V_shouldPromptForPasswordOnly
shouldUpdatePersistentServiceTokens
TB,N,V_shouldUpdatePersistentServiceTokens
TB,N,S_setProxyingForApp:,V_isProxyingForApp
T@"NSString",C,N,S_setProxiedAppBundleID:,V_proxiedAppBundleID
T@"NSString",C,N,V_passwordPromptTitle
T@"NSString",C,N,S_setPassword:,V_password
TB,N,V_isPasswordEditable
T@"NSString",C,N,S_setShortLivedToken:,V_shortLivedToken
T@"NSString",C,N,S_setIdentityToken:,V_identityToken
isAppleIDLoginEnabled
T@"NSNumber",C,N,SsetAppleIDLoginEnabled:,V_isAppleIDLoginEnabled
hasEmptyPassword
T@"NSNumber",C,N,SsetHasEmptyPassword:,V_hasEmptyPassword
shouldRequestRecoveryPET
TB,N,V_shouldRequestRecoveryPET
shouldRequestShortLivedToken
TB,N,V_shouldRequestShortLivedToken
shouldRequestConfigurationInfo
TB,N,V_shouldRequestConfigurationInfo
supportsPiggybacking
TB,N,V_supportsPiggybacking
anticipateEscrowAttempt
TB,N,V_anticipateEscrowAttempt
desiredInternalTokens
T@"NSSet",C,N,V_desiredInternalTokens
isFirstTimeLogin
TB,N,SsetFirstTimeLogin:,V_isFirstTimeLogin
shouldSkipSettingsLaunchAlert
TB,N,V_shouldSkipSettingsLaunchAlert
T@"NSString",C,N,S_setMessage:,V_message
T@"NSString",C,N,S_setMasterKey:,V_masterKey
companionDeviceAnisetteData
T@"AKAnisetteData",&,N,V_companionDeviceAnisetteData
shouldPreventInteractiveAuth
TB,N,V_shouldPreventInteractiveAuth
shouldForceInteractiveAuth
TB,N,V_shouldForceInteractiveAuth
needsNewChildAccount
TB,N,V_needsNewChildAccount
needsSecurityUpgradeUI
TB,N,V_needsSecurityUpgradeUI
cellularDataAttributionAppBundleID
T@"NSString",C,N,V_cellularDataAttributionAppBundleID
displayString
T@"NSString",C,N,V_displayString
displayTitle
T@"NSString",C,N,V_displayTitle
username
T@"NSString",C,N,V_username
isUsernameEditable
TB,N,V_isUsernameEditable
shouldAllowAppleIDCreation
TB,N,V_shouldAllowAppleIDCreation
needsCredentialRecovery
TB,N,V_needsCredentialRecovery
needsNewAppleID
TB,N,V_needsNewAppleID
needsPasswordChange
TB,N,V_needsPasswordChange
isTriggeredByNotification
TB,N,SsetTriggeredByNotification:,V_isTriggeredByNotification
reason
T@"NSString",C,N,V_reason
defaultButtonString
T@"NSString",C,N,V_defaultButtonString
maximumLoginAttempts
Tq,N,V_maximumLoginAttempts
serviceIdentifier
serviceIdentifiers
T@"NSArray",C,N,V_serviceIdentifiers
isEphemeral
TB,N,V_isEphemeral
T@"NSString",C,N,V_DSID
httpHeadersForRemoteUI
T@"NSDictionary",C,N,V_httpHeadersForRemoteUI
T@,&,N,V_clientInfo
needsRepair
TB,N,V_needsRepair
T@"NSString",&,N,V_title
helpAnchor
T@"NSString",C,N,V_helpAnchor
helpBook
T@"NSString",C,N,V_helpBook
authenticationPromptStyle
Tq,N,V_authenticationPromptStyle
cancelButtonString
T@"NSString",&,V_cancelButtonString
alternativeButtonString
T@"NSString",&,V_alternativeButtonString
hideAlternativeButton
TB,V_hideAlternativeButton
hideCancelButton
TB,V_hideCancelButton
hideReasonString
TB,V_hideReasonString
clientShouldHandleAlternativeButtonAction
TB,N,V_clientShouldHandleAlternativeButtonAction
windowTitle
T@"NSString",&,V_windowTitle
alwaysShowUsernameField
TB,N,V_alwaysShowUsernameField
privacyBundleIdentifier
T@"NSString",C,V_privacyBundleIdentifier
T@"NSString",C,N,S_setProxiedAppName:,V_proxiedAppName
T@"AKDevice",C,N,V_proxiedDevice
T@"AKDevice",C,N,V_companionDevice
Tq,N,V_authenticationMode
generatedCode
latitude
T@"NSNumber",C,N
longitude
deviceClass
deviceColor
deviceEnclosureColor
<%@: %p {
altDSID: %@,
proxiedAppName: %@,
serviceType: %@,
proxiedDevice: %@,
companionDevice: %@,
appProvidedData: %@,
teamID: %@,
appID: %@,
request: %@,
appProvidedContext: %@,
userSelection: %@,
_hasApplicationMetaData
T@"AKAuthorizationRequest",R,C,N,V_request
realUserVerificationData
T@"NSString",C,N,V_realUserVerificationData
com.apple.ak.auth.xpc
passwordPrompt
passwordPromptGoToSettingsNotification
invalidAccountSave
invalidAccountUpdate
missingAccountServices
com.apple.AuthKit.AKPromise
v16@?0@?<v@?@@"NSError">8
v24@?0@8@"NSError"16
@24@?0@8@"NSError"16
buildNumber
osVersion
model
lastUpdatedDate
trusted
circleStatus
clcg
clhs
clbg
_name
_serialNumber
_buildNumber
_operatingSystemName
_operatingSystemVersion
_model
_machineId
_lastUpdatedDate
_trusted
_inCircle
_colorCode
_enclosureColorCode
_coverGlassColorCode
_housingColorCode
_backingColorCode
<%@:%p> Name: %@, SN: %@, Build: %@, OS: %@, Version: %@, Model: %@, Timestamp: %@, Trusted: %d, Circle Status: %d, Color Code: %@ Additional Info %@
T@"NSString",R,C,N,V_name
T@"NSString",R,C,N,V_serialNumber
T@"NSString",R,C,N,V_buildNumber
operatingSystemName
T@"NSString",R,C,N,V_operatingSystemName
operatingSystemVersion
T@"NSString",R,C,N,V_operatingSystemVersion
T@"NSString",R,C,N,V_model
colorCode
T@"NSString",R,C,N,V_colorCode
enclosureColorCode
T@"NSString",R,C,N,V_enclosureColorCode
coverGlassColorCode
T@"NSString",R,C,N,V_coverGlassColorCode
housingColorCode
T@"NSString",R,C,N,V_housingColorCode
backingColorCode
T@"NSString",R,C,N,V_backingColorCode
TB,R,N,V_trusted
inCircle
TB,R,N,V_inCircle
T@"NSDate",R,C,N,V_lastUpdatedDate
machineId
T@"NSString",R,C,N,V_machineId
T@"NSDictionary",R,C,N,V_additionalInfo
v24@?0@"AKAuthorization"8@"NSError"16
v24@?0q8@"NSError"16
v24@?0@"AKAuthorizationPresentationContext"8@"NSError"16
v24@?0@"NSSet"8@"NSError"16
T@"<AKAuthorizationUIProvider>",&
self: (%p); Connection interrupted
self: (%p); Connection invalidated
error communicating to XPC: %@
%@ deallocated
authkit/authenticate
 AuthenticationType=%{public,signpost.telemetry:number1,name=AuthenticationType}d  ProxiedBundleID=%{public,signpost.telemetry:string1,name=ProxiedBundleID}@  enableTelemetry=YES 
AuthenticateWithContext
BEGIN [%lld]: AuthenticateWithContext  AuthenticationType=%{public,signpost.telemetry:number1,name=AuthenticationType}d  ProxiedBundleID=%{public,signpost.telemetry:string1,name=ProxiedBundleID}@  enableTelemetry=YES 
 Error=%{public,signpost.telemetry:number2,name=Error}d 
END [%lld] %fs:AuthenticateWithContext  Error=%{public,signpost.telemetry:number2,name=Error}d 
Request with %@
Remote authentication service returned an error: %{public}@
Interactive authentication requested by background daemon, client error, AKAppleIDAuthenticationTypeSilentPreferred should be used
Interactive authentication requested by UI context, please investigate why silent auth could not be used
Remote authentication service came back with: %@
authkit/set-in-use
Remote authentication service returned an error: %@
Calling out to remote auth service for altDSID %@, service %@, inUse %@.
Result of remote call: %@. Error: %@.
Calling out to remote auth service for DSID %@, service %@, inUse %@.
authkit/fetch-user-info
Calling out to remote auth service to fetch user information for: %{public}@
Result of remote call: %{private}@. Error: %{public}@
authkit/fetch-user-info-typed
authkit/update-user-info
Calling out to remote auth service to update user information for: %@
Result of remote call: %{public}@. Error: %{public}@
Calling out to remote auth service to fetch user information for: %@
Result of remote call: %lu. Error: %{public}@
authkit/fetch-device-list
authkit/fetch-device-map
Calling out to remote auth service to fetch device list information for: %{public}@
Result of remote call: %@. Error: %@
authkit/fetch-app-list
Calling out to remote auth service to fetch app list information for: %@
authkit/delete-authorization-list
Calling out to remote auth service to wipe authorization database
authkit/revoke-authorization
Calling out to remote auth service to revoke authorization for clientID: %@
authkit/satori-warmup
Calling out to remote auth service to warmup verification session
WarmUp Session completed...
authkit/set-configuration-info
Calling out to remote auth service to set: %@ for identifier: %@.
authkit/fetch-configuration-info
Calling out to remote auth service to fetch configuration for identifiers: %@.
Result of remote call: %{private}@. Error: %@
authkit/check-upgrade-eligibility
HSA 2 eligibility check came back with result: %@ and error: %@
authkit/generate-login-code
Generated code: %@. Error: %@
authkit/validate-login-code
authkit/perform-circle-request
authkit/check-in
authkit/report-sign-out
authkit/report-sign-out-all
authkit/update-state-with-response
Asking akd to update state for %@ with auth response: %@
Result of updating auth state: %@. Error: %@
Failed to get passcode state with error: %@
Failed to get active code with error: %@
authkit/fetch-load-delegate
 enableTelemetry=YES 
FetchServerLoadDelegate
BEGIN [%lld]: FetchServerLoadDelegate  enableTelemetry=YES 
END [%lld] %fs:FetchServerLoadDelegate 
Asking akd for AKAppleIDServerResourceLoadDelegate for altDSID %@
Result of getting AKAppleIDServerResourceLoadDelegate: %@. Error: %@
Asking akd for AKAppleIDServerResourceLoadDelegate for context %@
authkit/sync-follow-up-items
Synchronizing follow ups for altDSID: %@
Synchronized follow ups %@ with error %@
Failed to synchronize follow ups due to xpc error: %@
authkit/followup-teardown
Asking akd to teardown: %@
Completed teardown request; Error: %@
authkit/renew-recovery-token
Asking akd to fetch a new recovery token token with info: %@
Failed to renew recovery token: %@
authkit/verify-master-key
Asking akd to verify master key with info: %@
Failed to verify master key: %@
authkit/persist-master-key
Failed to persist master key: %@
authkit/validate-vetting-token
Asking akd to validate vetting token %@ for altDSID: %@
Vetting-token validation failed due to expired master token. Attempting to re-auth...
Unable to refresh expired master token for vetting-token validation.
Master token should be fresh now. Reattempting vetting token-validation...
Result afer reauth: Is token valid? %@. Error: %@
Result: Is token valid? %@. Error: %@
authkit/create-appleid-allowed
Error getting create Apple ID state - %@
Allow create AppleID is determined to be - %@
Failed to get account name list: %@
Account name list: %@
authkit/fetch-url-bag
Calling out to remote auth service to url bag
Finished fetching URL bag. Error: %{public}@
Synchronously calling out to remote auth service to url bag
authkit/urlbag-update
Synchronously calling out to remote auth service to force update URL Bag for altDSID: %@
Finished updating urlbag update for AltDSID: %@ with result: %d error:%@
Connection to akd was interrupted!
Connection to akd was invalidated.
%{public}@ completed with error:%@
Initializing URL cache at path: %@
Failed to generate cache due to missing container path!
AKURLSession %p is initializing...
NSURLSession became invalid with error: %@
Calling all pending completions.
Creating new NSURLSession with default config...
Asked to begin task with either nil request %@ or completion handler %@
Creating task %{public}@ for request at URL: %@
Resuming task %{public}@ for URL %@
Cancelling task %{public}@ for request %@
The data parameter is nil!
Aggregating received data for task: %{public}@
Task %{public}@ completed! Error: %@
Error is recoverable. Checking if retry is possible.
Retrying is not available on this platform.
Request failed for task: %{public}@ error: %@
Task %{public}@ Request response not of expected class!
Task %{public}@ Request completed with HTTP status code: %@
Task %{public}@ Server responded with authentication error
Detected an iCloud URL request, will not perform IdMS cert validation.
Server cert validity check failed!
Bad client! You are not supposed to provide your own implementation of AKAppleIDAuthenticationUIProvider!
Context ID %@ has already been registered for authentication!
Missing context identifier, how did we get here?
authkit/should-continue
Client has no knowledge of context ID: %@
 Error=%{public,signpost.telemetry:number1,name=Error}d  enableTelemetry=YES 
ShouldContinueWithResults
BEGIN [%lld]: ShouldContinueWithResults  Error=%{public,signpost.telemetry:number1,name=Error}d  enableTelemetry=YES 
 ShouldContinue=%{public,signpost.telemetry:number2,name=ShouldContinue}d 
END [%lld] %fs:ShouldContinueWithResults  ShouldContinue=%{public,signpost.telemetry:number2,name=ShouldContinue}d 
Delegate says to continue? %@
Calling delegate...
No delegate available.
Error: We do not have a UI-capable context on the client side!
Error: We do not have a UI-capabable context on the client side!
Server has provided an invalid context lacking an ID: %@
Error: No response data!
There was an error parsing body data! %@
The body data was not in the expected (dictionary) format!
JSON for response cannot be formed from dictionary: %@
Dictionary serialization to JSON encountered error: %@
AKDeviceListDeltaMessagePayload missing timestamp
AKDeviceListDeltaMessagePayload unable to process missing operation.
AKDeviceListDeltaMessagePayload unable to process non-string operation.
AKDeviceListDeltaMessagePayload unable to process unexpected operation.
Error converting object to json string: %@
Starting retrieval of recovery info for appleId <%@ : %@>
Starting recovery using %@...
Failed to retrieve recovery info with error. %@
Recovered data for context: %@
Escrowed recovery info missing PRK
Escrowed recovery info missing MID
Building recovery response request
Failed to unwrap the icsc recovery identity token.
Recovery response: %@
Recovery response body: %@
Building recovery response body
%@ is not supported on this platform
Passcode protected: %@
_requirePassword property is being set to %i on a tvOS Device, This shoudn't be happening
Unable to get Anisette data for request %@! Error: %@
Adding proxied attestation headers - %@
Unable to serialize request parameters! Error: %@
Invalid JSON input: %@
Adding header with services: %@
Failed to attach PTN header
Failed to attach Phone Information header
Encountered incomplete Anisette data! %@
Encountered incomplete companion Anisette data! %@
Encountered incomplete Anisette data for proxied device! %@
Cached AuthKit configurations have changed. Clearing cache...
Nil key!
Connection to akd signer was interrupted!
Connection to akd signer was invalidated: this is fine.
authkit/absinthe-signature-for-data
Remote signing service returned an error: %@
Remote signing service successfully signed data.
authkit/signatures-for-data
No request, nothing to sign.
urlBag not present
We have additional absinthe headers %@
Failed to fetch absinthe headers, error: %@
We have attesation headers: %@
Failed to fetch attestation headers, error: %@
Absinthe not enabled
No baaInterval
returing %lu additional headers
Absinthe data generated for proxy %@
Absinthe error %@
Unknown absinthe error
AKAppleIDSigningController - No request body.
AKAppleIDSigningController - No client info
Attestation signature data present, isProxy %@
Attestation signature headers %@
Attestation error %@
Unknown attestation error
Fetching Icon for bundleID: %@
AMSMediaTask for bundleID %@ artwork resulted in error %@
AMSMediaResult: %@
Request for %@ received data of length %lu
Request for %@ failed %@
Exception caught: %@
Will not allow nil altDSID to be set!
Will not allow nil DSID to be set!
DSID *must* be an NSNumber, but we got: %@
Failed to update verified email to %@ with error %@ after observing verified primary email for account %@
Updated account %@ verified email to %@ after observing verified email followup tear down
Account %@ already updated to reflect email verified is %@.
Requested to update username to %@ for altDSID: %@
Updating username for: %@
Exception caught when fetching primary email address: %@
Exeption caught when setting primery email address: %@
Exception caught when fetching primary verified email: %@
Exception caught when setting primary verified email: %@
Exception caught when fetching phone as AppleID: %@
Exception caught when fetching underage property: %@
Exception caught when setting underage property: %@
Exception caught when fetching demoAccount property: %@
Exception caught when setting demoAccount property: %@
Exception caught when fetching ageOfMajority property: %@
Exception caught when setting ageOfMajority property: %@
Exception caught when fetching authorization used: %@
Exception caught when setting authorization used: %@
Exception caught when fetching reachable emails: %@
Exception caught when setting reachable emails: %@
Exception caught when fetching given name: %@
Exeption caught when setting given name: %@
Exception caught when fetching family name: %@
Exception caught when setting last name: %@
Exception caught when fetching forwarding email: %@
Exception caught when setting forwarding email: %@
Exception caught when fetching private email selected: %@
Exception caught when setting private email selection: %@
Exception caught when fetching slected email: %@
Exception caught when setting selected email: %@
Saving account %@...
Exception caught while saving account: %@
Could not save %@ due to %@
Saving of account %@ succeeed!
Last Authentication mode fetch occured %@ seconds ago
Exception caught when fetching device trust status: %@
Last Satori warmup occured %@ seconds ago
Fetching token: %@ for account %@
Nil account cannot possibly have a %@ token!
AuthKit credential is completely MIA! Account: %@. Fetch error: %@
AuthKit %@ token is missing! Account: %@. Credential: %@.
Account of service type "%@" is eligible for security upgrade.
No account is eligible for security upgrade.
Servicetype is not supported.
AuthKit account (%@) that is not an SA account is not eligible for security upgrade.
There is no matching service account for service type (%li). (%@) may be abandoned authkit account, but still on device.
Found %@ IDMS accounts for which PRK might need to be cleared.
Attempted to remove a token for nil key
Nil credential for account %@. Odd, but no clearing is necessary.
Clearing %@ for account %@...
Checking if IDMS account cleanup is necessary (%lu found)...
Removing unusued IDMS account %@...
Removing duplicate IDMS account %@...
Failed to remove account %@. Error: %@
Successfully removed account %@.
Failed to save account %@. Error: %@
Successfully saved account %@.
Done removing unused and duplicate IDMS accounts.
Invalid type for value of primaryAccount account property: %@. Account: %@
Invalid type for value of %@ account property: %@. Account: %@
Invalid type for value of appleIdAliases %@. Account: %@
Invalid type for altDSID %@. Account: %@
Overflow while attempting to compress data!
Failed to allocate buffer for compressed data!
Failed to compress data!
Attempting to unregister for all Apple IDs.
Unregistering all Apple IDs failed with error: %@
Unregistering all Apple IDs succeeded!
Current process is requesting signing synchronously, this is an error, please do not do this!
Grabbing signing headers from current device.
Failed to get signing headers, error: %@
Attempting to fetch peer anisette
Peer anisette fetch complete
Error while fetching proxied anisette %@
Not attmepting to fetch peer anisette
Configuring peer signing headers
Peer attestation completed, with results %@
Error fetching Peer Attestation %@
No proxied device, no peer headers to attach.
Looks like we already have attestation data, thanks!
Not sending signing headers for peer
Could not determine passcode state with error %@
Attaching PRK header
Signing request as ephemeral
Attaching ICSC header
Attaching Phone Info header
Attaching PTN header
Attaching PAC header
[%@] Harvested continuation header added %@
Signing request with common headers
Signing request with service token
Signing request with ID token
Signing request with HB token
Signing request with URLSwitching UrlKey
Signing request with data center identifier
Signing request with Experimental Mode opt-in header
[%@] Harvested continuation headers %@
Parsing CFU Item Payload: %@
Couldn't find pyaload data to post notification.
Building recovery context with info: %@
AlertHandler called with error: %@
Authorization alert - invalid context
Authorization alert dismissed - invalid context
Authorization alert dismissed - missing apple account
Authorization alert dismissed - unverified email
Authorization alert dismissed - insufficient security level
Authorization alert dismissed - cannot find server
Authorization alert dismissed - underage account
Authorization alert dismissed - passcode setup required
Showing alert (%@) failed, user notification is nil!. Error: %d
No existing IdMS account for altDSID %@
No existing IdMS account for DSID %@
No existing IdMS account for username %@
No altDSID, DSID or username passed on context, unable to find account
Cannot pull up IDMS account without immutable username or altDSID.
Invalid token string! %@
Error: Got malformed GS token data!
Value for %@ is missing/invalid!
Nil value for expected header: %@
Unable to serialized token properties! Error: %@
Not going to do anything with non-HTTP response from URL: %@ Task: %{public}@.
Trying to get new Anisette headers to retry request for URL:%@ Task: %{public}@ ...
Redirecting urlRequest from URL: %@ to alternate URL: %@
Url Switch request failed with error: %@, ignoring URL Switch
Unable to append header for request %@! Error: %@
Passing along decorated request for: %@
Using proxied Anisette data for headers to URL: %@.
Fetching paired device Anisette data for headers to URL: %@.
Unable to append header for request %@! Task %{public}@ Error: %@.
Passing along decorated request for URL: %@ Task %{public}@.
Using proxied Anisette data for headers to URL: %@ Task %{public}@.
Fetching paired device Anisette data for headers to URL: %@. Task: %{public}@.
No handling for HTTP status code %@ in response for URL %@
No instance of AKAnisetteProvisioningController to handle HTTP code %@ in response to %@ %@.
Sync status code (%d) received for URL: %@
HTTP 434 without sync data received!
Anisette sync was successful!
Anisette sync failed! Error: %@
Reprovision status code (%d) received for URL: %@
Unable to reprovision because Anisette data could not be erased! Error: %@
Erased Anisette data successfully. Time to provision!
Provisioning new Anisette data failed! Error: %@
Successfully provisioned new Anisette data.
Handling response %@ for URL %@...
URL Switching state code (%d) received for URL: %@
No Value found for URLSwitching header ignoring URL Switching request
No Value found for Response URLSwitch data header ignoring URL Switching request
No URL found for UrlKey after URLBag update, ignoring URL Switching request
URLBag failed to update with error: %@, ignoring URL Switching request
Failed to find localized string for key: %{private}@
Parsing server provided Data %@
AKAuthorizationCredential Successfully created with transaction id:%@
Called -[AKCoordinatedDataBlock start] after block has already been started. Ignoring call and not starting again.
Sync for account: %{private}@ - %{public}@
Last follow up refresh occured %@ seconds ago
Checking for sparse follow ups
Failed to fetch items, falling back to sync
Sparse followup item detected: %@
Will synchronize followups %@
Failed to update follow up synchronization date: %@
Updating follow up synchronization for %@
No followup items found in payload.
Synchronizing local follow up state.
Deleting: %@
Failed to clear existing follow ups: %@
Clearing Notifications: %@
Inserting: %@
Unknown action, ignoring...
Detected an item without an identifier, invalid payload
Updating existing item with identifier: %@
Existing item notification was previously dismissed, ignoring incoming notification
Incoming notification was forced, keeping it!
Found incoming sparse followups: %@
Found incoming full followups: %@
Missing username, trying to fetch one via idMS account
Matching account missing, there be dragons ahead!
Using idMS account username
Connection to authorization service interrupted
Connection to authorization service invalidated
Cannot perform request - Missing authorization request
Cannot perform request - Current platform require passcode setup
Cannot perform request - Missing account
Cannot perform request - Missing AppleAccount
Cannot perform request - FedAuth Accounts Not Permitted
Cannot perform request - Managed Accounts Not Permitted
Cannot perform request - Invalid age
Cannot perform request - Insufficient security level
Cannot perform request - Account not verified.
Cannot perform password request without password request.
Cannot perform password request - Missing Primary Apple Account
Account name is missing.
Account name value has an invalid type: %@
Primary email address is missing, probably MAKO account.
Primary email address value has an invalid type: %@
No aliases.
Aliases array value has an invalid type: %@
No additional Info.
User given name is missing.
User given name name value has an invalid type: %@
User family name is missing.
User family name value has an invalid type: %@
Mako Account Identifier Missing
Mako Account Identifier value has an invalid type: %@
User vetted primary email is missing, Possibly unverified or Mako Account.
No reachable emails for account
User reachable emails value has an invalid type: %@
No Forwarding email set for this account
Forwarding email value has an invalid type: %@
Previously selected email value has an invalid type: %@
No authorized applications list version set for this account
Authorized applications list version value has an invalid type: %@
%{private}s called on unsupported platform, please file a radar!
System container path is %s
Error getting system container: %llu
Caught error (%@) unserializing AKDevice data (%@)
Caught error (%@) serializing self (%@)
Failed to check circle status: %@
System reports isPasscodeSet: %@
Local auth returned error: %@
Not biometric capable
authkit/anisette-provision
ProvisionAnisette
BEGIN [%lld]: ProvisionAnisette  enableTelemetry=YES 
END [%lld] %fs:ProvisionAnisette 
Remote Anisette service returned an error: %@
Remote Anisette service successfuly provisioned.
authkit/sync-sim
Remote Anisette service successfuly resynced provisioning data.
authkit/anisette-erase
EraseAnisette
BEGIN [%lld]: EraseAnisette 
END [%lld] %fs:EraseAnisette 
Remote Anisette service successfuly erased provisioning data.
authkit/anisette-for-request
Not allowed to use Anisette data with non-HTTPS URLs.
authkit/fetch-anisette
FetchAnisette
BEGIN [%lld]: FetchAnisette 
Remote Anisette service returned Anisette data.
END [%lld] %fs:FetchAnisette 
authkit/legacy-anisette
Remote Anisette service returned legacy Anisette data.
authkit/fetch-attestation
FetchAttestation
BEGIN [%lld]: FetchAttestation 
END [%lld] %fs:FetchAttestation 
Remote Anisette service returned Attestation data.
Remote Attestation data returned %@ - error %@
%s (%d) called
Error, not attempting to collect second factor code
Selecting trusted numbers
No trusted number selected
Server indicates we only have one trusted number, lets use that.
Sending selected trusted number
Selected trusted number response %@
Prompting for second factor code
Invalid trusted number selection %@ - %@
Received response %@
Attempt to show server UI with unsupported configuration (still in the works)
Constructed SMS postback dictionary - %@
Client passed auth context with email value in altDSID property - this is an error, do not do this.
%@ being updated by %@
self.username is nil
Will prompt for password...
Will prompt for username and password...
Determined that we should show password field for username: %@
Showing login error...
Canceling second-factor entry prompt.
Nothing to dismiss right now.
Listening for code entry notification...
No longer listening for code entry notification.
Notified that 2FA code was entered, but code is empty!
Passing 2FA code to akd.
Dropping 2FA code because we are currently holding a reply block.
Closing login code prompt.
Received notification of login code entry. Forwarding to observer %@.
authkit/authorize
Authorization completed with authorization: %@
Authorization failed: %@
authkit/revokeUpgrade
Revoke completed successfully
Revoke failed: %@
authkit/credentialState
Credential State request returned with error: %@
Credential State returned with state: %@
authkit/credentialStateForClientID
authkit/presentationContext
getPresentationContext completed with presentation context: %@
authkit/performRequestWithSelection
performAuthorizationWithContext completed with presentation context: %@
Attempting proxy auth with context: %@
Failed to fetch authorized URLs with XPC error: %@
Failed to fetch authorized URLs with error: %@
Failed to fetch apple owned domains with XPC error: %@
Failed to fetch apple owned domains with error: %@
fetchAppleIDAuthorizeHTMLResponseTemplate completed with result.
Failed to fetch authorization HTML response template with error: %@
continueFetchingIconWithCompletion completed with result.
Failed to continue fetching icon with error: %@
authkit/fetch-primary-bundleid
Calling out to remote auth service to fetch primary bundle ID for service: %@
No URL for Apple ID Authorization
Authorization controller should process URL
Established connection between notification center endpoint and daemon service.
Failed to establish connection between notification center endpoint and daemon service with error: %@
Established connection between state broadcast handler endpoint and daemon service.
Failed to establish connection between state broadcast handler endpoint and daemon service with error: %@
softlink:o:fw:SetupAssistant
softlink:o:fw:AppleMediaServices
softlink:o:fw:CoreFollowUp
softlink:r:fw:CoreCDP
softlink:o:fw:CoreCDPUI
softlink:o:fw:KeychainCircle
softlink:o:fw:UIKit
softlink:o:fw:RemoteUI
AKAuthorizationRevokeUpgradeContext
NSCopying
NSSecureCoding
NSCoding
AKCarouselAlertProviderServiceInterface
NSObject
AKCarouselAlertClientConnection
AKAuthorizationCredentialStateRequest
AKFLFollowUpController
AKExtensionItem
AKAuthorizationUpgradeContext
AKAdaptiveService
NSXPCListenerDelegate
_AKMessageForwarder
AKAdaptiveServiceInterface
AKAdaptiveServiceShouldHandle
AKAppleIDAuthenticationController
AKURLDataTask
AKURLSession
NSURLSessionDelegate
NSURLSessionDataDelegate
NSURLSessionTaskDelegate
AKConsentedApplication
AKAuthorizationStateBroadcastHandler
AKAuthorizationStateBroadcastHandlerInterface
AKAuthorizationTVServicePresenter
AKAttestationData
AKAppleIDAuthenticationLimitedUIProvider
AKAppleIDServerAuthenticationUIProvider
AKAppleIDAuthenticationUIProvider
AKAppleIDAuthenticationContextManager
AKAppleIDAuthenticationClientProtocol
AKAnisetteProvisioningClientProtocol
AuthKit
AKDeviceListDeltaMessagePayload
AKAuthorizationUserResponse
AKNativeAccountRecoveryController
CDPAuthProvider
AKAttestationSigner
AKFollowUpTearDownContext
AKAuthorizationPresenterHostProtocol
AKAuthorizationPresenterHostInterface
AKCarrierBundlePhoneCertificate
AKCarrierBundleUtilities
AKFollowUpProviderFactory
AKCredentialRequestContext
AKAppleIDAuthenticationClientInterface
AKAuthorizationScopesUserSelection
AKConfiguration
AKAppleIDSigningController
Convenience
AKDeviceListRequestContext
CGSize
AKMediaServicesController
AKAuthorizationDaemonProtocol
AKAuthorizationDaemonInterface
AKCertificatePinning
AKAccountManager
AKAppleIDSigningDaemonProtocol
AKAppleIDSigningDaemonInterface
AKAuthorizationLoginChoice
AKAppleIDServerResourceLoadDelegate
AKDeveloperTeam
AKCircleRequestPayload
AKURLBag
AKFollowUpFactoryImpl
AKFollowUpItemFactory
AKAccountRecoveryContext
AKAuthorizationNotificationHandler
AKAuthorizationNotificationHandlerInterface
AKAlertHandler
Accounts
AKGrandSlamResponseHandler
AKToken
AKMasterToken
AKAppleIDSession
NSURLSessionAppleIDContext
AKAnisetteData
AKAnisetteProvisioningClientInterface
AKAuthorizationCredential
AKCredential
AKApplicationMetadataInfo
AKFollowUpController
AKFollowUpProvider
AKFollowUpServerPayloadFormatter
AKAuthorization
AKIconContext
AKAbsintheSigner
AKCoordinatedDataBlock
AKCDPFactory
AKPasswordRequest
AKCircleRequestContext
AKUsernameFormatter
AKAuthorizationClientImpl
AKAuthorizationClientProtocol
AKAnisetteProvisioningAndSigningDeamonInterface
AKAnisetteProvisioningDaemonProtocol
AKAnisetteProvisioningDaemonInterface
AKFollowUpSynchronizer
AKAppleIDAuthenticationDelegate
AKAuthorizationPresentationContext
AKNetworkObserver
AKServerRequestConfiguration
AKBaseFollowupManager
AKAuthorizationAppSignInDiscovery
AKPasswordCredential
AKAuthorizationRequest
AKAuthHandlerImpl
AKAuthHandler
AKAuthorizationDaemonConnection
AKAuthorizationValidator
AKCredentialRequest
AKCredentialRequestProtocol
AKAuthorizationNotificationService
AKUserInformation
AKDevice
AKUtilities
AKAnisetteProvisioningController
_AKAnisetteProviderProxy
AKTrustedPhoneNumber
AKAppleIDAuthenticationCommandLineContext
AKAppleIDAuthenticationSurrogateUIProvider
AKAppleIDAuthenticationContext
AKAuthenticationContext
SecondFactorSupport
LocationNotificationSupport
AKAuthorizationContext
AKAppleIDAuthenticationDaemonProtocol
AKAppleIDAuthenticationDaemonInterface
AKAutoBugCapture
AKPromise
AKRemoteDevice
AKAuthorizationClientInterface
AKAuthorizationController
encodeObject:forKey:
init
decodeObjectOfClass:forKey:
copy
supportsSecureCoding
copyWithZone:
encodeWithCoder:
initWithCoder:
transactionID
setTransactionID:
bundleID
setBundleID:
teamID
setTeamID:
.cxx_destruct
_transactionID
_bundleID
_teamID
setInterruptionHandler:
setInvalidationHandler:
invalidate
unsafe_invalidate
dealloc
initWithMachServiceName:options:
isEqual:
class
self
performSelector:
performSelector:withObject:
performSelector:withObject:withObject:
isProxy
isKindOfClass:
isMemberOfClass:
conformsToProtocol:
respondsToSelector:
retain
release
autorelease
retainCount
zone
hash
superclass
description
debugDescription
presentAlertWithDictionary:completion:
dismissAlert:
interfaceWithProtocol:
setRemoteObjectInterface:
internalQueue
xpcConnection
setXpcConnection:
resume
connection
remoteObjectProxyWithErrorHandler:
sharedConnection
setInternalQueue:
_internalQueue
_xpcConnection
userID
setUserID:
clientID
setClientID:
altDSID
setAltDSID:
shouldIgnoreUserID
setShouldIgnoreUserID:
shouldIgnoreTeamID
setShouldIgnoreTeamID:
_shouldIgnoreUserID
_shouldIgnoreTeamID
_userID
_clientID
_altDSID
initWithClientIdentifier:
sharedInstance
ak_setContext:
userInfo
mutableCopy
archivedDataWithRootObject:requiringSecureCoding:error:
setObject:forKey:
removeObjectForKey:
setUserInfo:
objectForKey:
unarchivedObjectOfClass:fromData:error:
ak_context
extensionItemWithAppleIDAuthenticationContext:
appName
setAppName:
appID
setAppID:
serviceID
setServiceID:
nonce
setNonce:
state
setState:
_appName
_appID
_serviceID
_nonce
_state
anonymousListener
setDelegate:
initWithStrongReceiver:
_initWithInterface:object:
initWithWeakReceiver:
endpoint
setExportedInterface:
setExportedObject:
interruptionHandler
shouldHandleInvalidation
invalidationHandler
setShouldHandleInvalidation:
listener:shouldAcceptNewConnection:
initWithInterface:strongObject:
initWithInterface:weakObject:
listenerEndpoint
_exportedInterface
_exportedObject
_listener
_interruptionHandler
_invalidationHandler
initWithReceiver:strong:
currentConnection
activate
forwardingTargetForSelector:
_weakReceiver
_strongReceiver
boolValue
numberWithBool:
setWithObjects:
initWithIdentifier:daemonXPCEndpoint:
initWithAuthenticationController:
setName:
delegate
raise:format:
authenticationType
_proxiedAppBundleID
registerContext:
unregisterContext:
code
setServiceIdentifier:
_authenticationServiceConnection
_sanitizedCopy
isContextEligibleForSilentAuth
_capabilityForUIDisplay
ak_redactedCopy
authenticateWithContext:completion:
synchronousRemoteObjectProxyWithErrorHandler:
numberWithInteger:
setAppleIDWithAltDSID:inUse:forService:completion:
setAppleIDWithDSID:inUse:forService:completion:
fetchUserInformationForAltDSID:completion:
getUserInformationForAltDSID:completion:
updateUserInformationForAltDSID:userInformation:completion:
username
fetchAuthModeWithContext:completion:
objectForKeyedSubscript:
fetchDeviceMapWithContext:completion:
fetchAppListWithAltDSID:completion:
deleteAuthorizationDatabaseWithCompletion:
revokeAuthorizationForApplicationWithClientID:completion:
warmUpVerificationSessionWithCompletion:
setConfigurationInfo:forIdentifier:forAltDSID:completion:
configurationInfoWithIdentifiers:forAltDSID:completion:
checkSecurityUpgradeEligibilityForContext:completion:
generateLoginCodeWithCompletion:
validateLoginCode:forAppleID:withCompletion:
performCircleRequestWithContext:completion:
checkInWithAuthenticationServerForAppleID:completion:
reportSignOutForAppleID:service:completion:
reportSignOutForAllAppleIDsWithCompletion:
updateStateWithExternalAuthenticationResponse:forContext:completion:
updateStateWithExternalAuthenticationResponse:forAppleID:completion:
isDevicePasscodeProtected:
activeLoginCode:
getServerUILoadDelegateForAltDSID:completion:
getServerUILoadDelegateWithContext:completion:
synchronizeFollowUpItemsForContext:completion:
teardownFollowUpWithContext:completion:
renewRecoveryTokenWithContext:completion:
verifyMasterKey:withContext:completion:
persistMasterKeyVerifier:withContext:completion:
domain
setUsername:
setIsUsernameEditable:
_setProxyingForApp:
validateVettingToken:forAltDSID:completion:
isCreateAppleIDAllowedWithCompletion:
accountNamesForAltDSID:completion:
fetchURLBagForAltDSID:completion:
fetchURLBagFromCache:altDSID:completion:
forceURLBagUpdateForAltDSID:urlSwitchData:completion:
lock
initWithListenerEndpoint:
XPCInterface
unlock
sensitiveAuthenticationKeys
initWithIdentifier:
initWithDaemonXPCEndpoint:
setAppleIDWithAltDSID:inUse:forService:
setAppleIDWithDSID:inUse:forService:
fetchDeviceListWithContext:completion:
fetchDeviceListWithContext:error:
fetchAuthorizedAppListWithContext:error:
deleteAuthorizationDatabase:
revokeAuthorizationForApplicationWithClientID:error:
validateLoginCode:forAppleID:completion:
synchronizeFollowUpItemsForContext:error:
verifyMasterKey:context:completion:
persistMasterKeyVerifier:context:completion:
accountNamesForAltDSID:
_urlBagFromCache:altDSID:withError:
deallocHandler
setDeallocHandler:
_daemonXPCEndpoint
_contextManager
_connectionLock
_deallocHandler
setCanceledOrCompleted:
receivedData
response
stringWithFormat:
_completeWithError:
request
setRequest:
retryCount
setRetryCount:
underlyingTask
setUnderlyingTask:
completionHandler
setCompletionHandler:
setReceivedData:
lastRetryError
setLastRetryError:
canceledOrCompleted
_canceledOrCompleted
_request
_retryCount
_underlyingTask
_completionHandler
_receivedData
_lastRetryError
set_usesAppleIDContext:
_createURLSessionUsesAppleIDContext:
defaultSessionConfiguration
_urlBagCache
setURLCache:
setWaitsForConnectivity:
setTimeoutIntervalForResource:
set_appleIDContext:
defaultSessionObjectWithConfiguration:
setRequestCachePolicy:
systemContainerCacheURL
path
_initWithExistingCFURLCache:
removeAllCachedResponses
allValues
count
countByEnumeratingWithState:objects:count:
_unsafe_completeTask:withError:
_usesAppleIDContext
setMaxConcurrentOperationCount:
setUnderlyingQueue:
sessionWithConfiguration:delegate:delegateQueue:
absoluteString
_URLSession
dataTaskWithRequest:
taskIdentifier
numberWithUnsignedInteger:
cancel
appendData:
_isRecoverableError:
_unsafe_retryTaskIfPossible:
isEqualToString:
dictionaryWithObjects:forKeys:count:
errorWithDomain:code:userInfo:
ak_errorWithCode:
statusCode
beginDataTaskWithRequest:completionHandler:
protectionSpace
host
containsString:
authenticationMethod
serverTrust
isValidCertificateTrust:forHostname:
sharedURLSession
sharedAnisetteFreeURLSession
sharedCacheEnabledURLSession
sharedCacheEnabledAnisetteFreeSession
sharedCacheReliantAnisetteFreeSession
URLSession:didBecomeInvalidWithError:
URLSession:didReceiveChallenge:completionHandler:
URLSessionDidFinishEventsForBackgroundURLSession:
URLSession:task:willBeginDelayedRequest:completionHandler:
URLSession:taskIsWaitingForConnectivity:
URLSession:task:willPerformHTTPRedirection:newRequest:completionHandler:
URLSession:task:didReceiveChallenge:completionHandler:
URLSession:task:needNewBodyStream:
URLSession:task:didSendBodyData:totalBytesSent:totalBytesExpectedToSend:
URLSession:task:didFinishCollectingMetrics:
URLSession:task:didCompleteWithError:
URLSession:dataTask:didReceiveResponse:completionHandler:
URLSession:dataTask:didBecomeDownloadTask:
URLSession:dataTask:didBecomeStreamTask:
URLSession:dataTask:didReceiveData:
URLSession:dataTask:willCacheResponse:completionHandler:
cancelDataTask:
beginAuthenticationDataTaskWithRequest:completionHandler:
_urlSession
_sessionQueue
_tasksByIdentifier
__usesAppleIDContext
integerValue
decodeObjectOfClasses:forKey:
decodeIntegerForKey:
encodeInteger:forKey:
initWithResponseInfo:
scopes
setScopes:
transferState
setTransferState:
origin
setOrigin:
primaryClientID
setPrimaryClientID:
_scopes
_transferState
_origin
_primaryClientID
credentialStateDidChange:forApplicationWithClientID:
_typeFromString:
_stringForType:
setObject:forKeyedSubscript:
_filterDeprecatedType:
typeOfMessage:
buildDidTapNotificationMessage
buildDidStartServerAuthorizationMessage
buildFetchAppIconMessage
buildFetchAppIconReplyWithImageData:imageScale:
allocWithZone:
allKeys
initWithDictionary:
attestationHeaders
setAttestationHeaders:
_attestationHeaders
hasPrefix:
_identifier
authenticationController:shouldContinueWithAuthenticationResults:error:forContext:
authenticationController:shouldContinueWithAuthenticationResults:error:forContext:completion:
_clientSideContextForServerContext:
presentKeepUsingUIForAppleID:completion:
dismissKeepUsingUIWithCompletion:
presentBasicLoginUIWithCompletion:
dismissBasicLoginUIWithCompletion:
presentLoginAlertWithError:title:message:completion:
presentSecondFactorUIWithCompletion:
dismissSecondFactorUIWithCompletion:
presentSecondFactorAlertWithError:title:message:completion:
presentBiometricOrPasscodeValidationForAppleID:completion:
presentServerProvidedUIWithConfiguration:completion:
dismissServerProvidedUIWithCompletion:
presentNativeRecoveryUIWithContext:completion:
dismissNativeRecoveryUIWithCompletion:
anisetteDataProvider
provisionAnisetteWithCompletion:
syncAnisetteWithSIMData:completion:
eraseAnisetteWithCompletion:
fetchAnisetteDataAndProvisionIfNecessary:withCompletion:
legacyAnisetteDataForDSID:withCompletion:
_updateWithValuesFromContext:
provisionAnisetteForContext:withCompletion:
syncAnisetteForContext:withSIMData:completion:
eraseAnisetteForContext:withCompletion:
fetchAnisetteDataForContext:provisionIfNecessary:withCompletion:
legacyAnisetteDataForContext:DSID:withCompletion:
presentKeepUsingUIForContext:appleID:completion:
dismissKeepUsingUIForContext:withCompletion:
presentBasicLoginUIForContext:completion:
dismissBasicLoginUIForContext:completion:
presentLoginAlertForContext:withError:title:message:completion:
presentSecondFactorUIForContext:completion:
dismissSecondFactorUIForContext:completion:
presentSecondFactorAlertForContext:withError:title:message:completion:
presentServerProvidedUIForContext:withConfiguration:completion:
dismissServerProvidedUIForContext:completion:
presentNativeRecoveryUIForContext:recoveryContext:completion:
dismissNativeRecoveryUIForContext:completion:
presentBiometricOrPasscodeValidationForContext:completion:
launchOutOfProcessAuthentication:surrogateID:withErrorHandler:
shouldContinueWithAuthenticationResults:error:forContextID:completion:
_authContextsByUUID
_authController
_authContextsQueue
_delegate
propertyListWithData:options:format:error:
JSONObjectWithData:options:error:
containsObject:
_ak_truncatedTokensCopy
ak_mapObjects:
initWithCapacity:
stringByReplacingOccurrencesOfString:withString:
length
substringToIndex:
enumerateKeysAndObjectsUsingBlock:
initWithString:
ak_urlEncoded
initWithName:value:
addObject:
setQueryItems:
query
isValidJSONObject:
dataWithJSONObject:options:error:
initWithData:encoding:
ak_mapObjectsNullable:
ak_urlQueryString
ak_toJSONString
ak_dictionaryWithResponseData:
ak_jsonDictionaryWithResponseData:
doubleValue
dateWithTimeIntervalSince1970:
_convertOperationToEnum:
caseInsensitiveCompare:
initWithResponseBody:
operation
machineID
machineIDs
serialNumber
timestamp
_operation
_machineID
_machineIDs
_serialNumber
_timestamp
selectedRequest
setSelectedRequest:
userSelection
setUserSelection:
loginChoice
setLoginChoice:
rawAccountPassword
setRawAccountPassword:
_selectedRequest
_userSelection
_loginChoice
_rawAccountPassword
UTF8String
dataWithBytes:length:
ak_SHA256
ak_hexString
URLQueryAllowedCharacterSet
stringByAddingPercentEncodingWithAllowedCharacters:
base64EncodedStringWithOptions:
predicateWithFormat:
evaluateWithObject:
ak_SHA256String
ak_truncatedCopy
ak_stringByZeroPaddingOccurencesOfString:
ak_isEmailAddress
ak_base64EncodedJsonFromObject:
context
authContext
setAppleID:
decodedRecoveryPETString
setPasswordEquivToken:
DSID
longLongValue
numberWithLongLong:
setDsid:
supportsMasterKeyRecovery
setIdmsMasterKeyRecovery:
idmsMasterKeyRecovery
setIdmsRecovery:
setGuestMode:
appleID
dsid
recoveryControllerWithContext:
setAuthProvider:
setUiProvider:
_mapICSCRecoveryResultsToAuthKit:
performRecovery:
dictionary
cdpIDMSRecordPRKKey
cdpIDMSRecordMIDKey
recoveryContinuationURL
requestWithURL:
setHTTPMethod:
decodedRecoveryIdentityTokenString
ak_addICSCRecoveryHeaderWithIdentityToken:forAltDSID:
ak_addRecoveryHeaderWithIdentityToken:forAltDSID:
dataUsingEncoding:
setValue:forHTTPHeaderField:
postBodyForiCSCServerUIResponseWithContext:recoveryError:
ak_setBodyWithParameters:
allHTTPHeaderFields
cdpErrorDomain
localizedFailureReason
requestForRecoveryCompletionWithContext:recoveredInfo:recoveryError:
shouldSendServerResponseForRecoveredInfo:withRecoveryError:
cdpContext:performSilentRecoveryTokenRenewal:
cdpContext:verifyMasterKey:completion:
initWithContext:uiProvider:
presentNativeRecoveryUIWithCompletion:
_recoveryController
_recoveryContext
_cdpUiProvider
sharedSigner
signatureForData:options:completion:
signaturesForData:options:completion:
itemIdentifier
setItemIdentifier:
akAction
setAkAction:
_itemIdentifier
_akAction
authorizationRequestInitiatedWithUserProvidedInformation:completion:
authorizationRequestFinishedWithAuthorization:error:completion:
continueFetchingIconWithCompletion:
setClasses:forSelector:argumentIndex:ofReply:
phoneCertificate
setPhoneCertificate:
slotID
setSlotID:
_phoneCertificate
_slotID
phoneBundleInfoWithAdditionalInfo:error:
initWithFLFollowupController:
sharedAuthKitFollowupProvider
encodeBool:forKey:
decodeBoolForKey:
currentDevice
isProtectedWithPasscode
UUID
setIsEligibleForUpgradeFromPassword:
ak_firstObjectMatchingFilter:
isEligibleForUpgradeFromPassword
array
authorizationRequest
authkitAccount
continuationTokenForAccount:
initWithUpgradeContext:
setCredentialRequests:
_isEligibleForUpgradeFromPassword
_proxiedClientAppName
_proxiedClientBundleID
_proxiedClientServiceID
_proxiedClientTeamID
_proxiedClientAppID
credentialRequests
_requirePassword
set_requirePassword:
_shouldForceUI
set_shouldForceUI:
_shouldSkipBiometrics
set_shouldSkipBiometrics:
_shouldSkipAuthorizationUI
set_shouldSkipAuthorizationUI:
_informativeText
set_informativeText:
_iconName
set_iconName:
_iconData
set_iconData:
_iconScale
set_iconScale:
_iconSize
set_iconSize:
_shouldForcePrivateEmail
set_shouldForcePrivateEmail:
set_proxiedClientAppName:
set_proxiedClientBundleID:
set_proxiedClientAppID:
set_proxiedClientTeamID:
_proxiedAssociatedDomains
set_proxiedAssociatedDomains:
_isWebLogin
set_isWebLogin:
_isFirstPartyLogin
set_isFirstPartyLogin:
_isRapportLogin
set_isRapportLogin:
_callerBundleID
set_callerBundleID:
_proxiedDeviceName
set_proxiedDeviceName:
_proxiedDeviceClass
set_proxiedDeviceClass:
set_proxiedClientServiceID:
_upgradeContext
requestIdentifier
setAuthorizationRequest:
passwordRequest
setPasswordRequest:
_passcodeProtected
_requestIdentifier
_authorizationRequest
_passwordRequest
userInformation
makePrivateEmail
setUserInformation:
setMakePrivateEmail:
_makePrivateEmail
_userInformation
isInternalBuild
localUserUUID
stringValue
uniqueDeviceIdentifier
serverFriendlyDescription
date
ak_serverFriendlyString
isInCircle
anisetteDataForURLRequest:error:
ak_anisetteHeadersWithData:
ak_proxiedAnisetteHeadersWithData:
_setAuthorizationHeaderWithToken:altDSID:key:
valueForHTTPHeaderField:
initWithBase64EncodedString:options:
dataWithPropertyList:format:options:error:
setHTTPBody:
componentsJoinedByString:
currentLocale
uppercaseString
locale
localeIdentifier
localTimeZone
name
secondsFromGMT
ROMAddress
MLBSerialNumber
phoneNumber
abbreviation
oneTimePassword
routingInfo
initWithFormat:
sharedConfiguration
shouldAllowTestApplication
addEntriesFromDictionary:
ak_proxiedClientInfoHeadersWithDevice:
modelNumber
currentDeviceAuthenticationMode
ak_addInternalBuildHeader
ak_addLocalUserUUIDHashHeader
ak_addAppleIDHeaderWithValue:
ak_addAppleIDUserModeHeaderWithValue:
ak_addDeviceUDIDHeader
ak_addProxiedDeviceUDIDHeader:
ak_addClientInfoHeader
ak_addClientTimeHeader
ak_addCircleStatusHeader
ak_addCompanionClientInfoHeader:
ak_addProxiedClientInfoHeader:
ak_addEphemeralAuthHeader
ak_addAnisetteHeaders
ak_addProxiedAnisetteHeaders:
ak_addProxiedAttestationHeaders:
ak_addAuthorizationHeaderWithIdentityToken:forAltDSID:
ak_addProxiedAuthorizationHeaderWithIdentityToken:forAltDSID:
ak_addAuthorizationHeaderWithServiceToken:forAltDSID:
ak_addAuthorizationHeaderWithHeartbeatToken:forAltDSID:
ak_addShortLivedTokenHeaderWithIdentityToken:forAltDSID:
ak_addURLSwitchingHeaderWithURLKey:altDSID:
ak_addDataCenterHeaderWithIdentifier:
ak_valueForEncodedHeaderWithKey:
ak_setJSONBodyWithParameters:
ak_addAbsintheHeaderWithValue:
ak_addLoggedInServicesHeaderForServices:
ak_addContextHeaderForServiceType:
ak_addContinutationKeyHeader:
ak_addPasswordResetKeyHeader:
ak_addCountryHeader
ak_addSKUCountryHeader
ak_addProxiedDeviceCountryHeader:
ak_addLocaleHeader
ak_addTimeZoneHeaders
ak_addPRKRequestHeader
ak_addProxiedDevicePRKRequestHeader
ak_addICSCIntentHeader
ak_addLocalUserHasAppleIDLoginHeader
ak_addDeviceROMHeader
ak_addDeviceMLBHeader
ak_addDeviceSerialNumberHeader
ak_addProxiedDeviceSerialNumberHeader:
ak_addPhoneNumberHeader
ak_addPhoneNumberCertificateHeaderWithValue:
ak_addPhoneInformationHeaderWithValue:
ak_addAcceptedSLAHeaderWithVersion:
ak_addClientApp:
ak_addProxyApp:
ak_addAppProvidedContext:
ak_addOfferSecurityUpgrade:
ak_addProxiedDeviceICSCIntentHeader
ak_addShowWarranty
ak_addDeviceModel
ak_addCFUHeader:
ak_addDeviceConfigurationModeHeader
ak_addRequestUUIDHeader:
ak_clientTimeHeader
ak_localeHeader
ak_timeZoneHeader
ak_clientInfoHeader
ak_deviceUDIDHeader
ak_anisetteHeadersWithCompanionData:
ak_proxiedHeadersForDevice:anisetteData:
removeAllObjects
standardUserDefaults
configurationValueForKey:
setConfigurationValue:forKey:
unsignedIntegerValue
_validCloudPartition:
shouldDisablePETs
setShouldDisablePETs:
shouldFakeAuthSuccess
setShouldFakeAuthSuccess:
shouldDisablePiggybacking
setShouldDisablePiggybacking:
shouldSuppressHSA2Suggestions
setShouldSuppressHSA2Suggestions:
shouldAddHSA2CreateHeader
setShouldAddHSA2CreateHeader:
shouldAllowPhoneNumberAccounts
setShouldAllowPhoneNumberAccounts:
shouldAllowExperimentalMode
setShouldAllowExperimentalMode:
shouldAllowDemoMode
setShouldAllowDemoMode:
setShouldAllowTestApplication:
shouldEnableTestAccountMode
setShouldEnableTestAccountMode:
shouldSuppressModalSheetsInMacBuddy
setShouldSuppressModalSheetsInMacBuddy:
shouldAutocycleAppsInTiburon
setShouldAutocycleAppsInTiburon:
shouldAlwaysShowWelcome
setShouldAlwaysShowWelcome:
shouldAutocycleAppsInWebTakeover
setShouldAutocycleAppsInWebTakeover:
lastKnownIDMSEnvironment
setLastKnownIDMSEnvironment:
requestedCloudPartition
setRequestedCloudPartition:
_cachedSettings
_notificationToken
_settingsQueue
_connectionInterrupted
_connectionInvalidated
_connection
absintheSignatureForData:completion:
setIsProxy:
authenticationController
setAuthenticationController:
_signerLock
_signingQueue
_listenerEndpoint
_isProxy
_authenticationController
_additionalAbsintheHeadersForRequest:completion:
_additionalAttestationHeadersForRequest:withInterval:completion:
HTTPBody
ak_errorWithCode:userInfo:
signingHeadersForRequest:completion:
includeUntrustedDevices
setIncludeUntrustedDevices:
includeFamilyDevices
setIncludeFamilyDevices:
services
setServices:
operatingSystems
setOperatingSystems:
_includeUntrustedDevices
_includeFamilyDevices
_services
_operatingSystems
CGSizeValue
bagSubProfile
bagSubProfileVersion
bagKeySet
registerBagKeySet:forProfile:profileVersion:
bagForProfile:profileVersion:
mainBundle
bundleIdentifier
initWithType:clientIdentifier:clientVersion:bag:
arrayWithObjects:count:
setBundleIdentifiers:
setIncludedResultKeys:
setAdditionalPlatforms:
perform
responseDataItems
firstObject
_artworkURLFromResult:size:updatingIconContext:
setData:
addFinishBlock:
artworkDictionary
setMaskingStyle:
URLWithSize:cropStyle:format:
appIconForBundleID:size:completion:
objCType
getValue:size:
performAuthorization:completion:
performAuthorizationWithContext:withUserProvidedInformation:completion:
getCredentialStateForRequest:completion:
getCredentialStateForClientID:completion:
getPresentationContextForRequestContext:completion:
fetchAppleIDAuthorizationURLSetWithCompletion:
fetchAppleOwnedDomainSetWithCompletion:
revokeUpgradeWithContext:completion:
fetchAppleIDAuthorizeHTMLResponseTemplateWithCompletion:
fetchPrimaryApplicationInformationForWebServiceWithInfo:completion:
continueFetchingIconForRequestContext:completion:
establishConnectionWithNotificationHandlerEndpoint:completion:
establishConnectionWithStateBroadcastHandlerEndpoint:completion:
startDiscoveryWithCompletion:
isAccountsFrameworkAvailable
accountPropertyForKey:
setAccountProperty:forKey:
aliasesForAccount:
reachableEmailAddressesForAccount:
enumerateObjectsUsingBlock:
formattedUsernameFromUsername:
authKitAccountWithAltDSID:
verifiedPrimaryEmailForAccount:
setVerifiedPrimaryEmail:forAccount:
saveAccount:error:
_setUsername:forAccount:
appleIDAccountWithAltDSID:
iCloudAccountForAltDSID:
store
saveVerifiedAccount:error:
performWithinPersonaForAccount:withBlock:
updateAuthModeTimestampForAccount:
timeIntervalSinceDate:
numberWithDouble:
hearbeatTokenForAccount:error:
continuationTokenForAccount:error:
passwordResetTokenForAccount:error:
passwordResetTokenBackupForAccount:error:
_tokenWithName:forAccount:error:
tokenWithExternalizedVersionString:
_removeTokenKey:forAccount:
credentialForAccount:error:
credentialItemForKey:
authKitAccountType
accountsWithAccountType:options:error:
accountTypeWithAccountTypeIdentifier:error:
appleIDAccountType
altDSIDforPrimaryiCloudAccount
_serviceTypesForSecurityUpgrade
_serviceTypeForServiceNameString:
accountsUsingService:
allObjects
_isAccountEligibleForSecurityUpgrade:ofServiceType:
bagForAltDSID:
securityUpgradeServiceNames
_defaultSecurityUpgradeServiceNames
accountTypeForTypeIdentifier:
securityLevelForAccount:
_matchingServiceAccountForAuthKitAccount:service:
_accountTypeForServiceType:
accountsWithAccountType:
altDSIDForAccount:
creationDate
compare:
_removeTokenForKeys:forAccount:
credential
setCredentialItem:forKey:
setCredential:
removeObject:
allAuthKitAccounts
servicesUsingAccount:
stringRepresentationForService:
ak_map:
removeAccount:withCompletionHandler:
iCloudAccountForAppleID:
isPrimaryiCloudAccount:
iCloudAccountType
_aliasesForiCloudAccount:
_altDSIDForiCloudAccount:
primaryiCloudAccount
personaIDIfCurrentPersonaIsDataSeparated
setAltDSID:forAccount:
DSIDForAccount:
setDSID:forAccount:
combinedAliasesAndReachableEmailsForAccount:
setAliases:forAccount:
formattedUsernameForAccount:
updateVerifiedEmail:forAccountWithAltDSID:
updateUsername:forAccountsWithAltDSID:
primaryEmailAddressForAccount:
setPrimaryEmailAddress:forAccount:
phoneAsAppleIDForAccount:
setPhoneAsAppleID:forAccount:
userUnderAgeForAccount:
setUserUnderage:forAccount:
demoAccountForAccount:
setDemoAccount:forAccount:
ageOfMajorityForAccount:
setAgeOfMajority:forAccount:
authorizationUsedForAccount:
setAuthorizationUsed:forAccount:
setReachableEmailAddresses:forAccount:
givenNameForAccount:
setGivenName:forAccount:
familyNameForAccount:
setFamilyName:forAccount:
forwardingEmailForAccount:
setForwardingEmail:forAccount:
selectedPrivateEmailForAccount:
setSelectedPrivateEmail:forAccount:
selectedAuthorizationEmailForAccount:
setSelectedAuthorizationEmail:forAccount:
setSecurityLevel:forAccount:
authenticationModeForAccount:
setAuthenticationMode:forAccount:
shouldUpdateAuthModeForAccount:
deviceTrustRevokedForAccount:
setDeviceTrustRevoked:forAccount:
shouldPerformSatoriWarmupVerificationForAccount:
updateSatoriWarmUpTimestampForAccount:
needsRepairForAccount:
repairStateForAccount:
setRepairState:forAccount:
hearbeatTokenForAccount:
passwordResetTokenForAccount:
passwordResetTokenBackupForAccount:
masterTokenForAccount:
removeMasterTokenForAccount:
authKitAccountWithDSID:
authKitAccountWithAppleID:
appleIDAccountWithAppleID:
primaryAuthKitAccount
accountEligibleForUpdate
mostRecentlyUsedAuthKitAccount
removeAllPasswordResetTokens
removeContinuationTokenForAccount:
setAccount:inUse:byService:
activeServiceNamesForAccount:
removeUnusedAndDuplicateAuthKitAccountsWithCompletion:
hasPrimaryiCloudAccountForAppleID:
hasPrimaryiCloudAccountForAltDSID:
isPrimaryiCloudAccountEmailVerified:
transportableAuthKitAccount:
additionalInfoForAccount:
setAdditionalInfo:forAccount:
setStore:
_accountStore
_accountQueue
_authKitAccountType
_authKitAccountTypeLock
_appleIDAccountType
_appleIDAccountTypeLock
_iCloudAccountType
_iCloudAccountTypeLock
_accountTypeCacheLock
_accountTypeCache
bytes
appendFormat:
dataWithBytesNoCopy:length:freeWhenDone:
ak_compressedData:
initWithUser:site:
user
setUser:
site
setSite:
isAppleIDAuthorization
setAppleIDAuth:
shouldCreateAppleID
setCreateAppleID:
_appleIDAuth
_createAppleID
_user
_site
initWithAltDSID:identityToken:
shouldSendSigningHeaders
setShouldSendSigningHeaders:
signRequest:withCompletionHandler:
_signRequest:
signingController
proxiedDevice
_proxiedProvisioningController
anisetteDataWithCompletion:
fetchAttestationForRequest:completion:
initForDevice:provider:
signRequestWithCommonHeaders:
UUIDString
_signWithProxiedDeviceHeaders:
sharedController
_retrieveContinuationHeaders
isMultiUserMode
_signWithFeatureOptInHeaders:
allHeaderFields
_harvestContinuationHeadersFromHeaders:
signalFromServerResponse:
isResponseActionable:
needsNewAppleID
needsNewChildAccount
appProvidedContext
needsSecurityUpgradeUI
isEphemeral
setShouldSendEphemeralAuthHeader:
isAppleIDLoginEnabled
setShouldSendLocalUserHasAppleIDLoginHeader:
serviceType
setServiceType:
setAppProvidedContext:
_proxiedAppName
setProxyAppName:
setShouldSendPhoneNumber:
hasEmptyPassword
setHasEmptyPasswordOverride:
securityUpgradeContext
setSecurityUpgradeContext:
anticipateEscrowAttempt
setShouldSendICSCIntentHeader:
shouldOfferSecurityUpgrade
setShouldOfferSecurityUpgrade:
pendingFollowUpItems:
pendingAuthKitFollowUpPayload:
setFollowupItems:
proxiedDeviceAnisetteData
setProxiedDeviceAnisetteData:
setProxiedDevice:
continuationHeaderPrefix
shouldSendAbsintheHeader
setShouldSendAbsintheHeader:
signRequest:
processResponse:
isResponseFinal:
isAuthenticationRequired:
isResponseFinalForHSA2ServerFlow:
decorateWithContext:
serviceToken
setServiceToken:
shouldSendEphemeralAuthHeader
shouldSendICSCIntentHeader
shouldSendLocalUserHasAppleIDLoginHeader
shouldSendPhoneNumber
phoneNumberCertificate
setPhoneNumberCertificate:
phoneInformation
setPhoneInformation:
loggedInServices
setLoggedInServices:
passwordResetToken
setPasswordResetToken:
continuationToken
setContinuationToken:
heartbeatToken
setHeartbeatToken:
identityToken
setIdentityToken:
initialURLRequestKey
setInitialURLRequestKey:
proxyAppName
clientAppName
setClientAppName:
hasEmptyPasswordOverride
followupItems
dataCenterIdentifier
setDataCenterIdentifier:
proxiedAltDSID
setProxiedAltDSID:
proxiedIdentityToken
setProxiedIdentityToken:
setAnisetteDataProvider:
proxiedDeviceAttestationData
setProxiedDeviceAttestationData:
_continuationHeaders
_context
_shouldSendEphemeralAuthHeader
_shouldSendICSCIntentHeader
_shouldSendLocalUserHasAppleIDLoginHeader
_shouldSendPhoneNumber
_shouldOfferSecurityUpgrade
_shouldSendSigningHeaders
_serviceToken
_phoneNumberCertificate
_phoneInformation
_serviceType
_loggedInServices
_passwordResetToken
_continuationToken
_heartbeatToken
_identityToken
_initialURLRequestKey
_proxyAppName
_clientAppName
_appProvidedContext
_hasEmptyPasswordOverride
_securityUpgradeContext
_followupItems
_dataCenterIdentifier
_proxiedDevice
_proxiedAltDSID
_proxiedIdentityToken
_anisetteDataProvider
_proxiedDeviceAnisetteData
_proxiedDeviceAttestationData
userIdentifier
setUserIdentifier:
privateEmail
setPrivateEmail:
apps
setApps:
_userIdentifier
_privateEmail
_apps
transactionId
setTransactionId:
serverInfo
setServerInfo:
clientErrorCode
circleStep
setCircleStep:
setWithArray:
payloadWithMessage:
isRequestingPayload
isAcceptingPayload
clientInfo
replyPayload
setClientInfo:
setClientErrorCode:
responseMessage
setResponseMessage:
responseInfo
setResponseInfo:
_serverInfo
_clientInfo
_clientErrorCode
_transactionId
_responseMessage
_responseInfo
_circleStep
sharedBag
_currentBags
initWithAltDSID:
_urlAtKey:
configurationAtKey:
configurationAtKey:fromCache:
_requestEnvironmentsWithError:
_IDMSEnvironmentFromString:
_requestEnvironmentsWithBag:
_configurationsFromCache:withError:
_fetchURLBagWithCompletion:
_requestNewURLBagIfNecessaryWithError:
URLWithString:
_urlBagFromCache:withError:
bagProvider
urlBagFromCache:altDSID:error:
keyForEscapeHatchURL
looksLikeiForgotURLKey:
IDMSEnvironmentFromBag:
basicAuthURL
startProvisioningURL
endProvisioningURL
syncAnisetteURL
upgradeEligibilityCheckURL
upgradeUIURL
validateCodeURL
escapeHatchURL
checkInURL
notificationAckURL
iForgotURL
iForgotContinuationURL
createAppleIDURL
deviceListURL
trustedDevicesURL
trustedDevicesSummaryURL
absintheCertURL
absintheSessionURL
tokenUpgradeURL
configurationInfoURL
fetchConfigDataURL
changePasswordURL
validateVettingTokenURL
renewRecoveryTokenURL
circleURL
fetchFollowUps
fetchUserInfoURL
fetchAppInfoURL
fetchPrimaryBundleIDURL
fetchAuthenticationModeURL
storeModernRecoveryURL
isPhoneNumberSupportedConfig
acsURL
repairURL
userVerificationURL
deleteAuthorizedAppURL
appleOwnedDomains
appleIDAuthorizationURLs
appleIDAuthorizeHTMLResponseURL
createChildAccountURL
APSEnvironment
IDMSEnvironment
IsInlineFlowSupportedConfig
requestNewURLBagIfNecessaryWithCompletion:
requestNewURLBagIfNecessaryWithError:
urlAtKey:
forceUpdateBagWithUrlSwitchData:completion:
setBagProvider:
_bagProvider
_itemFromPayload:withAltDSID:
ak_mapNullable:
setUniqueIdentifier:
extensionIdentifier
setExtensionIdentifier:
_actionsFromPayload:
setActions:
_notificationFromPayload:
setNotification:
notification
title
setTitle:
setInformativeText:
setGroupIdentifier:
setRepresentingBundlePath:
setBundleIconName:
setDisplayStyle:
displayStyle
_actionFromInfo:
setLabel:
setFrequency:
setFirstNotificationDelay:
options
setByAddingObjectsFromArray:
setOptions:
actionWithTitle:andActionKey:
setActivateAction:
setClearAction:
_clearAction
itemsForAltDSID:fromIDMSPayload:
itemIdentifiersRequiringNotificationClearFromPayload:
IsFollowUpItemNotificationForced:
representingBundlePath
bundleIconName
_extensionIdentifier
_representingBundlePath
_bundleIconName
setDSID:
setAuthContext:
setSupportsMasterKeyRecovery:
setEncodedRecoveryIdentityToken:
setEncodedRecoveryPET:
setRecoveryContinuationURL:
encodedRecoveryIdentityToken
tokenWithBase64String:
encodedRecoveryPET
recoveryContextWithServerInfo:
isValid
_supportsMasterKeyRecovery
_encodedRecoveryIdentityToken
_encodedRecoveryPET
_recoveryContinuationURL
_authContext
credentialStateDidChange:completion:
initWithFormat:arguments:
initWithCString:encoding:
showAlertForError:withAuthKitAccount:withCompletion:
_showAlertForInvalidContextWithCompletion:
_showAlertForMissingAppleAccountWithCompletion:
_showAlertForAccountNotSupportedWithCompletion:
_showAlertForUnverifiedEmailWithCompletion:
_showAlertForInsufficientSecurityLevelWithBundleID:completionHandler:
_showAlertForCannotFindServerWithCompletion:
_showAlertForUnderageAccount:withCompletion:
_showAlertForPasscodeSetupWithCompletion:
bundleForClass:
localizedStringForKey:value:table:
notificationDictionaryWithTitle:message:defaultButton:alternateButton:
showAlert:primaryAction:altAction:
_openSpyglass
_openPasscodeSetup
alertHandlerShowAlert:primaryAction:altAction:
showAlert:primaryAction:altAction:cancelAction:
resourceURL
defaultWorkspace
openSensitiveURL:withOptions:
_URLWithString:byAppendingParameters:
keyEnumerator
showAlertForError:withCompletion:
_openUpgradeAccountSecurityLevelWithBundleID:
uiProvider
_uiProvider
isUsernameEditable
authKitAccount:
authKitAccountForSilentServiceToken:
_handleInvalidMasterTokenWithSubErrorCode:
_revokeDeviceTrust
initWithContext:
handleResponseError:
setContext:
dateWithTimeIntervalSinceNow:
componentsSeparatedByString:
objectAtIndexedSubscript:
tokenWithValue:lifetime:
setStringValue:
expirationDate
_expirationDate
_stringValue
_name
tokenWithExternalizedVersion:lifetime:
_setSessionKey:
_setEncryptedSessionKey:
initWithAppleID:altDSID:
externalizedVersion
updateWithHTTPURLResponse:
sessionKey
encryptedSessionKey
externalizedVersionString
_properties
originalRequest
_generateAppleIDHeadersForSessionTask:withCompletion:
_handleAnissetteURLResponse:forRequest:withCompletion:
_handleURLSwitchingResponse:forRequest:withCompletion:
_generateAppleIDHeadersForRequest:error:
_genericAppleIDHeadersDictionaryForRequest:
_nativeAnisetteController
anisetteDataWithError:
_pairedDeviceAnisetteController
anisetteDataForURLRequest:completion:
syncWithSIMData:completion:
provisionWithCompletion:
eraseWithCompletion:
lastObject
setURL:
URLSession:task:getAppleIDHeadersForResponse:completionHandler:
relevantHTTPStatusCodes
URLSession:task:getAppleIDRequestOrHeadersForResponse:completionHandler:
appleIDHeadersForRequest:
handleResponse:forRequest:shouldRetry:
pairedDevice
setPairedDevice:
_proxiedAnisetteData
_anisetteControllerLock
_pairedDevice
stringByAppendingString:
numberWithUnsignedLongLong:
setMachineID:
setOneTimePassword:
setRoutingInfo:
_oneTimePassword
_routingInfo
serverProvidedData
serviceTokens
setSelectedEmail:
failWithError:
initWithServerResponse:
authorizedScopes
authorizationCode
isLikelyRealUser
setIsLikelyRealUser:
_isLikelyRealUser
_authorizedScopes
_authorizationCode
authorizedAppListVersion
teams
_authorizedAppListVersion
_teams
clearPendingFollowUpItems:
postFollowUpItem:error:
uniqueIdentifier
removeFollowUpItemsWithIdentifiers:error:
clearPendingFollowUpItemsWithUniqueIdentifiers:error:
clearNotificationForItem:error:
removeAllFollowUpItems:
addFollowUpItems:error:
removeFollowUpItems:error:
clearNotificationsForItem:error:
_followupController
ak_isUserCancelError
ak_isUserSkippedError
ak_errorByAppendingUserInfo:
ak_isUserTryAgainError
ak_isUserInitiatedError
ak_isServiceError
ak_isAuthenticationErrorWithCode:
ak_errorWithCode:underlyingError:
ak_wrappedAnisetteError:
authorizedRequest
setAuthorizedRequest:
_authorizedRequest
_credential
data
scale
setScale:
maskingStyle
_data
_scale
_maskingStyle
signatureForURLRequest:completionHandler:
signatureForURLRequest:
_contextCreationDate
initWithBlock:
_start
_callCompletionWithData:error:
startCoordinatingBlock:
start
setCompletion:
_block
_started
_lock
_group
contextWithAuthResults:
initWithAuthenticationResults:
contextForStateRepair
isICDPEnabledForDSID:
initWithPresentingViewController:
stateControllerWithContext:
followUpRepairContext
followUpController
cdpAccountIsICDPEnabledForDSID:
accountRecoveryControllerWithPresentingViewController:
cdpStateUIController
cdpUIControllerWithPresentingViewController:
decodeDoubleForKey:
encodeDouble:forKey:
payload
setPayload:
waitForReply
setWaitForReply:
waitForReplyTimeout
setWaitForReplyTimeout:
identityTokenValue
setIdentityTokenValue:
heartbeatTokenValue
setHeartbeatTokenValue:
pushToken
setPushToken:
_notifyOfTimeout
set_notifyOfTimeout:
_waitForReply
__notifyOfTimeout
_payload
_waitForReplyTimeout
_identityTokenValue
_heartbeatTokenValue
_pushToken
presentAuthorizationUIForContext:completion:
provisionAnisetteForDevice:completion:
syncAnisetteWithSIMData:device:completion:
eraseAnisetteForDevice:completion:
fetchAnisetteDataAndProvisionIfNecessary:device:completion:
legacyAnisetteDataForDSID:device:completion:
attestationDataForDevice:withRequest:completion:
shouldSynchronizeForAccount:
updateSynchronizeTimeForAccount:inStore:
followupProvider
actions
informativeText
updateSynchronizeTimeNoSaveForAccount:
saveAccount:withCompletionHandler:
synchronizeFollowUpsForAccount:inStore:error:
setFollowupProvider:
controller
setController:
_followupProvider
_controller
_addPresenterParameters
initWithContext:bundleID:
_addPresentationParametersForContext:
applicationProxyForIdentifier:
localizedNameForContext:
localizedName
presentationContextForRequestContext:client:
initWithContext:client:
localizedAppName
iconName
iconData
iconScale
credentialRequestContext
setCredentialRequestContext:
loginChoices
setLoginChoices:
_localizedAppName
_credentialRequestContext
_loginChoices
_startPathMonitor
_stopPathMonitor
_networkReachabilityDidChange
setArgument:atIndex:
invoke
methodSignatureForSelector:
invocationWithMethodSignature:
setSelector:
setTarget:
valueWithNonretainedObject:
sharedNetworkObserver
isNetworkReachable
addNetworkReachableObserver:selector:
removeNetworkReachableObserver:
_pathMonitor
_observerQueue
_invocationByObserver
_isNetworkReachable
initWithRequest:requestType:
resourceLoadDelegate
setResourceLoadDelegate:
requestType
setRequestType:
presentationType
setPresentationType:
whitelistedPathURLs
setWhitelistedPathURLs:
_resourceLoadDelegate
_requestType
_presentationType
_whitelistedPathURLs
ak_filter:
_alignedInsertionCandidates:withExistingItems:
frequency
arrayByAddingObjectsFromArray:
initWithFollowUpFactory:provider:
synchronizeFollowUpsWithServerPayload:altDSID:error:
_factory
_provider
_daemonConnection
_ak_dataForEncodedHeaderWithKey:
ak_stringForEncodedHeaderWithKey:
ak_acceptedTermsInfo
decodeObjectForKey:
initWithUser:password:
password
_password
setRequestIdentifier:
setRequestedScopes:
internalAuthKitAccount
setAuthkitAccount:
_isSilentAppTransfer
set_isSilentAppTransfer:
requestedScopes
appProvidedData
setAppProvidedData:
existingStatus
setExistingStatus:
_authkitAccount
_requestedScopes
_appProvidedData
_existingStatus
scheme
ak_usesHTTPSScheme
setShouldSkipSettingsLaunchAlert:
buildReauthenticationContextFromContext:error:
reauthenticateWithContext:completion:
initWithListenerEndpoint:exportedInterface:
_connectionInterruptionHandler
_connectionInvalidationHandler
_unfairLock
initWithLocaleIdentifier:
setDateFormat:
setLocale:
timeZoneForSecondsFromGMT:
setTimeZone:
stringFromDate:
canPerformAuthorizationRequest:error:
canPerformPasswordRequest:error:
_requirePasscodeSet
givenName
familyName
selectedEmail
canPerformCredentialRequest:error:
shouldContinueWithResponse:error:
_sharedService
startWithNotificationHandler:
startWithStateBroadcastHandler:
_configureNotificationService
_configureStateBroadcastService
startServiceWithNotificationHandler:
startServiceWithStateBroadcastHandler:
_service
_daemonEndpoint
setGivenName:
setFamilyName:
setForwardingEmail:
setPrimaryEmailAddress:
setAccountName:
setAccountAliases:
setReachableEmails:
setAuthorizedApplicationsListVersion:
setMasterKeyID:
setVettedPrimaryEmail:
setPhoneAsAppleID:
setHasUsedAuthorization:
setIsUnderage:
setAgeOfMajority:
setPreviouslySelectedEmail:
setPreviouslyWantedPrivateEmail:
setIsLegacyStudent:
setAppleIDSecurityLevel:
setAuthMode:
setRepairState:
setAdditionalInfo:
forwardingEmail
previouslySelectedEmail
primaryEmailAddress
accountName
accountAliases
reachableEmails
authorizedApplicationsListVersion
masterKeyID
vettedPrimaryEmail
phoneAsAppleID
isUnderage
ageOfMajority
isLegacyStudent
hasUsedAuthorization
previouslyWantedPrivateEmail
appleIDSecurityLevel
authMode
repairState
additionalInfo
_givenName
_familyName
_forwardingEmail
_previouslySelectedEmail
_primaryEmailAddress
_accountName
_accountAliases
_reachableEmails
_authorizedApplicationsListVersion
_masterKeyID
_vettedPrimaryEmail
_phoneAsAppleID
_isUnderage
_ageOfMajority
_isLegacyStudent
_hasUsedAuthorization
_previouslyWantedPrivateEmail
_appleIDSecurityLevel
_authMode
_repairState
_additionalInfo
_selectedEmail
setLinkType:
_setShouldUpdateToValue:
fileURLWithFileSystemRepresentation:isDirectory:relativeToURL:
systemContainerURL
URLByAppendingPathComponent:
color
enclosureColor
coverGlassColor
housingColor
backingColor
_hardwareModel
_osName
_osVersion
_buildNumber
infoDictionary
autoupdatingCurrentLocale
isPasscodeSet
canEvaluatePolicy:error:
activeIDSPeerDevice
deviceWithSerializedData:
deviceSpecificLocalizedStringWithKey:
serializedData
setColor:
setEnclosureColor:
setCoverGlassColor:
setHousingColor:
setBackingColor:
setUniqueDeviceIdentifier:
setROMAddress:
setMLBSerialNumber:
setModelNumber:
setServerFriendlyDescription:
userChosenName
userFullName
internationalMobileEquipmentIdentity
isUnlocked
isBiometricAuthCapable
isFaceIDCapable
mobileEquipmentIdentifier
integratedCircuitCardIdentifier
_volumeGroupUUID
linkType
_shouldUpdateUniqueDeviceIdentifier
_shouldUpdateServerFriendlyDescription
_shouldUpdateColor
_shouldUpdateEnclosureColor
_shouldUpdateCoverGlassColor
_shouldUpdateHousingColor
_shouldUpdateBackingColor
_shouldUpdateLocale
_shouldUpdateROMAddress
_shouldUpdateMLBSerialNumber
_shouldUpdateModelNumber
_uniqueDeviceIdentifier
_serverFriendlyDescription
_color
_enclosureColor
_coverGlassColor
_housingColor
_backingColor
_locale
_ROMAddress
_MLBSerialNumber
_modelNumber
_linkType
processInfo
processIdentifier
initWithBytes:length:encoding:
fileURLWithPath:
bundleWithURL:
objectForInfoDictionaryKey:
currentApplicationIdentifier
bundleWithIdentifier:
bundleVersion
currentApplicationVersion
urlForBundleIdentifier:
openApplicationWithBundleID:
launchSoftwareUpdate
launchPhotosApplication
openEnergySaverPref
openSharingPref
openSecurityPref
openInternetAccountPref
openParentalControlPref
openAppleIDPref
openAppleIDPrefWithLaunchParameters:
screenLockIsEnabled
ak_arrayWithResponseData:
ak_arrayWithJSONResponseData:
_anisetteServiceConnection
fetchAnisetteDataAndProvisionIfNecessary:error:
exceptionWithName:reason:userInfo:
initWithProvider:
targetDevice
setTargetDevice:
_targetDevice
_setMessage:
setReason:
unsignedIntValue
setGeneratedCode:
_message
_interpolatedReason
intValue
numberWithInt:
initWithJSONDictionary:
identifier
setIdentifier:
numberWithDialCode
setNumberWithDialCode:
obfuscatedNumber
setObfuscatedNumber:
pushMode
setPushMode:
_numberWithDialCode
_obfuscatedNumber
_pushMode
initWithVerificationType:
setSupportsPiggybacking:
localizedDescription
secondFactorCode
setSecondFactorCode:
_presentServerUISecondFactorWithConfiguration:completion:
_mutableJSONRequestForPath:
_beginDataTaskWithRequest:configuration:completion:
allPages
primaryAlert
message
passcodeViewOM
attributes
navTitle
_parseHeaderTitleForPasscodeView:
_promptForVerificationCodeWithSecureEntry:
absoluteURLWithString:
_xmlUIRequestForURL:withPostbackDictionary:
_verifySecondFactorCodeWithRequest:completion:
_collectAndPostSecondFactorCodeForTrustedNumber:configuration:completion:
_promptUserForSelectionWithTrustedNumbers:
_jsonPostbackDictionaryForCode:numberId:
verificationType
_jsonDictionaryForData:error:
_handleServerUISMSSecondFactorWithDictionary:statusCode:configuration:completion:
initWithXML:baseURL:delegate:
error
uiObjectModel
_handleServerUISecondFactorWithObjectModel:configuration:completion:
HTMLHeader
valueForKey:
initWithData:options:documentAttributes:error:
string
initWithURL:
componentsWithString:
setPath:
_mutableJSONRequestForURL:
_xmlUIRequestForURL:withServerInfo:
setVerificationType:
_secondFactorCode
_verificationType
_initWithIdentifier:
companionDevice
_shouldSkipInitialReachabilityCheck
shouldPromptForPasswordOnly
initWithSurrogateID:
reason
_appendBlameIfRequiredTo:
stringWithUTF8String:
serviceIdentifiers
setServiceIdentifiers:
_interpolatedReasonWithBlame
_secondFactorQueue
_startListeningForSecondFactorCodeEntryNotification
_stopListeningForSecondFactorCodeEntryNotification
_setProxiedAppName:
setCompanionDevice:
authenticationMode
setAuthenticationMode:
_localUserHasEmptyPassword
isContextEligibleForSilentAuthCoercion
isContextEligibleForBiometricOrPasscodeAuth
setShouldPreventInteractiveAuth:
shouldPreventInteractiveAuth
setShouldForceInteractiveAuth:
shouldForceInteractiveAuth
serviceIdentifier
_requiresPasswordInput
_handleSecondFactorCodeEntry
_isProxyingForApp
_setProxiedAppBundleID:
_setIdentityToken:
_shouldSendIdentityTokenForRemoteUI
set_shouldSendIdentityTokenForRemoteUI:
_shouldSendGrandSlamTokensForRemoteUI
set_shouldSendGrandSlamTokensForRemoteUI:
_passwordPromptTitle
set_passwordPromptTitle:
_setPassword:
_isPasswordEditable
set_isPasswordEditable:
_shortLivedToken
_setShortLivedToken:
set_shouldSkipInitialReachabilityCheck:
_attemptIndex
set_attemptIndex:
companionDeviceAnisetteData
setCompanionDeviceAnisetteData:
_masterKey
_setMasterKey:
_performUIOutOfProcess
set_performUIOutOfProcess:
_keepAlive
set_keepAlive:
shouldAllowAppleIDCreation
setShouldAllowAppleIDCreation:
needsCredentialRecovery
setNeedsCredentialRecovery:
setNeedsNewAppleID:
needsPasswordChange
setNeedsPasswordChange:
isTriggeredByNotification
setTriggeredByNotification:
defaultButtonString
setDefaultButtonString:
maximumLoginAttempts
setMaximumLoginAttempts:
setIsEphemeral:
httpHeadersForRemoteUI
setHttpHeadersForRemoteUI:
needsRepair
setNeedsRepair:
helpAnchor
setHelpAnchor:
helpBook
setHelpBook:
authenticationPromptStyle
setAuthenticationPromptStyle:
cancelButtonString
setCancelButtonString:
alternativeButtonString
setAlternativeButtonString:
hideAlternativeButton
setHideAlternativeButton:
hideCancelButton
setHideCancelButton:
hideReasonString
setHideReasonString:
clientShouldHandleAlternativeButtonAction
setClientShouldHandleAlternativeButtonAction:
windowTitle
setWindowTitle:
alwaysShowUsernameField
setAlwaysShowUsernameField:
privacyBundleIdentifier
setPrivacyBundleIdentifier:
displayImageData
setDisplayImageData:
setAuthenticationType:
setShouldPromptForPasswordOnly:
shouldUpdatePersistentServiceTokens
setShouldUpdatePersistentServiceTokens:
setAppleIDLoginEnabled:
setHasEmptyPassword:
shouldRequestRecoveryPET
setShouldRequestRecoveryPET:
shouldRequestShortLivedToken
setShouldRequestShortLivedToken:
shouldRequestConfigurationInfo
setShouldRequestConfigurationInfo:
supportsPiggybacking
setAnticipateEscrowAttempt:
desiredInternalTokens
setDesiredInternalTokens:
isFirstTimeLogin
setFirstTimeLogin:
shouldSkipSettingsLaunchAlert
setNeedsNewChildAccount:
setNeedsSecurityUpgradeUI:
cellularDataAttributionAppBundleID
setCellularDataAttributionAppBundleID:
displayString
setDisplayString:
displayTitle
setDisplayTitle:
_generatedCode
_latitude
_longitude
_deviceClass
_deviceColor
_deviceEnclosureColor
_activeSecondFactoryEntryPrompt
_secondFactoryEntryCompletion
_companionDevice
_shouldPreventInteractiveAuth
_shouldForceInteractiveAuth
_isUsernameEditable
_shouldAllowAppleIDCreation
_needsCredentialRecovery
_needsNewAppleID
_needsPasswordChange
_isTriggeredByNotification
_isEphemeral
_needsRepair
_hideAlternativeButton
_hideCancelButton
_hideReasonString
_clientShouldHandleAlternativeButtonAction
_alwaysShowUsernameField
_shouldPromptForPasswordOnly
_shouldUpdatePersistentServiceTokens
_shouldRequestRecoveryPET
_shouldRequestShortLivedToken
_shouldRequestConfigurationInfo
_supportsPiggybacking
_anticipateEscrowAttempt
_isFirstTimeLogin
_shouldSkipSettingsLaunchAlert
_needsNewChildAccount
_needsSecurityUpgradeUI
_companionDeviceAnisetteData
_authenticationMode
_username
_reason
_defaultButtonString
_maximumLoginAttempts
_serviceIdentifiers
_DSID
_httpHeadersForRemoteUI
_title
_helpAnchor
_helpBook
_authenticationPromptStyle
_cancelButtonString
_alternativeButtonString
_windowTitle
_privacyBundleIdentifier
_displayImageData
_authenticationType
_isAppleIDLoginEnabled
_hasEmptyPassword
_desiredInternalTokens
_cellularDataAttributionAppBundleID
_displayString
_displayTitle
generatedCode
latitude
setLatitude:
longitude
setLongitude:
deviceClass
setDeviceClass:
deviceColor
setDeviceColor:
deviceEnclosureColor
setDeviceEnclosureColor:
initWithRequest:
_hasApplicationMetaData
realUserVerificationData
setRealUserVerificationData:
_realUserVerificationData
setByAddingObject:
triggerAutoBugCaptureWithSubType:andBundleID:userInfo:
shouldCapturePromptBugForContext:
userInfoFromContext:
userInfoFromAccount:
_startWithBlock:
_completeWithValue:error:
onComplete:
_chain:
initWithValue:
initWithError:
then:
catch:
_queue
_completed
_value
_error
_callbacks
_initWithInfo:
initWithInfo:
buildNumber
operatingSystemName
operatingSystemVersion
model
colorCode
enclosureColorCode
coverGlassColorCode
housingColorCode
backingColorCode
trusted
inCircle
lastUpdatedDate
machineId
_trusted
_inCircle
_operatingSystemName
_operatingSystemVersion
_model
_colorCode
_enclosureColorCode
_coverGlassColorCode
_housingColorCode
_backingColorCode
_lastUpdatedDate
_machineId
_shouldOverrideProxiedBundleIDForContext:
_appleIDAuthorizationURLs
componentsWithURL:resolvingAgainstBaseURL:
port
_appleOwnedDomains
compare:options:range:
characterAtIndex:
canPerformAuthorization
shouldProcessURL:
isURLFromAppleOwnedDomain:
performAuthorizationWithContext:completion:
revokeAuthorizationWithContext:completion:
primaryApplicationInformationForWebServiceWithInfo:error:
_clientImpl
B16@0:8
@24@0:8^{_NSZone=}16
v24@0:8@16
@24@0:8@16
v24@0:8@"NSCoder"16
@24@0:8@"NSCoder"16
@16@0:8
v16@0:8
@"NSString"
B24@0:8@16
#16@0:8
@24@0:8:16
@32@0:8:16@24
@40@0:8:16@24@32
B24@0:8#16
B24@0:8:16
Vv16@0:8
Q16@0:8
^{_NSZone=}16@0:8
B24@0:8@"Protocol"16
@"NSString"16@0:8
v32@0:8@16@?24
v32@0:8@"NSDictionary"16@?<v@?@"NSDictionary"@"NSError">24
v24@0:8@"NSString"16
@"NSObject<OS_dispatch_queue>"
@"NSXPCConnection"
v20@0:8B16
B32@0:8@16@24
B32@0:8@"NSXPCListener"16@"NSXPCConnection"24
@32@0:8@16@24
@?16@0:8
v24@0:8@?16
@"NSXPCInterface"
@"NSXPCListener"
@28@0:8@16B24
v36@0:8@16B24q28
v40@0:8@16@24@?32
@32@0:8@16^@24
B24@0:8^@16
B32@0:8@16^@24
v48@0:8@16@24@32@?40
v40@0:8Q16@24@?32
v40@0:8@16q24@?32
@24@0:8^@16
@36@0:8B16@20^@28
@"NSXPCListenerEndpoint"
@"AKAppleIDAuthenticationContextManager"
@"NSLock"
v24@0:8Q16
@"NSURLRequest"
@"NSURLSessionDataTask"
@"NSMutableData"
@"NSError"
@20@0:8B16
v32@0:8@16@24
v32@0:8@"NSURLSession"16@"NSError"24
v40@0:8@"NSURLSession"16@"NSURLAuthenticationChallenge"24@?<v@?q@"NSURLCredential">32
v24@0:8@"NSURLSession"16
v56@0:8@16@24@32@40@?48
v56@0:8@16@24q32q40q48
v40@0:8@16@24@32
v48@0:8@"NSURLSession"16@"NSURLSessionTask"24@"NSURLRequest"32@?<v@?q@"NSURLRequest">40
v32@0:8@"NSURLSession"16@"NSURLSessionTask"24
v56@0:8@"NSURLSession"16@"NSURLSessionTask"24@"NSHTTPURLResponse"32@"NSURLRequest"40@?<v@?@"NSURLRequest">48
v48@0:8@"NSURLSession"16@"NSURLSessionTask"24@"NSURLAuthenticationChallenge"32@?<v@?q@"NSURLCredential">40
v40@0:8@"NSURLSession"16@"NSURLSessionTask"24@?<v@?@"NSInputStream">32
v56@0:8@"NSURLSession"16@"NSURLSessionTask"24q32q40q48
v40@0:8@"NSURLSession"16@"NSURLSessionTask"24@"NSURLSessionTaskMetrics"32
v40@0:8@"NSURLSession"16@"NSURLSessionTask"24@"NSError"32
v48@0:8@"NSURLSession"16@"NSURLSessionDataTask"24@"NSURLResponse"32@?<v@?q>40
v40@0:8@"NSURLSession"16@"NSURLSessionDataTask"24@"NSURLSessionDownloadTask"32
v40@0:8@"NSURLSession"16@"NSURLSessionDataTask"24@"NSURLSessionStreamTask"32
v40@0:8@"NSURLSession"16@"NSURLSessionDataTask"24@"NSData"32
v48@0:8@"NSURLSession"16@"NSURLSessionDataTask"24@"NSCachedURLResponse"32@?<v@?@"NSCachedURLResponse">40
@32@0:8@16@?24
@"NSURLSession"
@"NSMutableDictionary"
q16@0:8
v24@0:8q16
@"NSArray"
v32@0:8q16@24
v32@0:8q16@"NSString"24
q24@0:8@16
@24@0:8q16
@"NSDictionary"
v24@0:8@?<v@?@"NSString"@"NSString"@"NSDictionary"@"NSError">16
v24@0:8@?<v@?B@"NSError">16
v48@0:8@"NSError"16@"NSString"24@"NSString"32@?<v@?@"NSString"@"NSString"@"NSDictionary"@"NSError">40
v24@0:8@?<v@?@"NSNumber"@"NSError">16
v48@0:8@"NSError"16@"NSString"24@"NSString"32@?<v@?@"NSNumber"@"NSError">40
v32@0:8@"NSString"16@?<v@?Q@"NSError">24
v32@0:8@"AKServerRequestConfiguration"16@?<v@?@"NSHTTPURLResponse"@"NSDictionary"@"NSError">24
v32@0:8@"AKAccountRecoveryContext"16@?<v@?@"NSDictionary"@"NSError">24
v32@0:8@"NSString"16@?<v@?B@"NSError">24
v36@0:8@16B24@?28
v32@0:8@"AKAppleIDAuthenticationContext"16@?<v@?B@"NSError">24
v40@0:8@"AKAppleIDAuthenticationContext"16@"NSData"24@?<v@?B@"NSError">32
v36@0:8@"AKAppleIDAuthenticationContext"16B24@?<v@?@"AKAnisetteData"@"NSError">28
v40@0:8@"AKAppleIDAuthenticationContext"16@"NSString"24@?<v@?@"AKAnisetteData"@"NSError">32
v40@0:8@"AKAppleIDAuthenticationContext"16@"NSString"24@?<v@?B@"NSError">32
v32@0:8@"AKAppleIDAuthenticationContext"16@?<v@?@"NSString"@"NSString"@"NSDictionary"@"NSError">24
v56@0:8@"AKAppleIDAuthenticationContext"16@"NSError"24@"NSString"32@"NSString"40@?<v@?@"NSString"@"NSString"@"NSDictionary"@"NSError">48
v32@0:8@"AKAppleIDAuthenticationContext"16@?<v@?@"NSNumber"@"NSError">24
v56@0:8@"AKAppleIDAuthenticationContext"16@"NSError"24@"NSString"32@"NSString"40@?<v@?@"NSNumber"@"NSError">48
v40@0:8@"AKAppleIDAuthenticationContext"16@"AKServerRequestConfiguration"24@?<v@?@"NSHTTPURLResponse"@"NSDictionary"@"NSError">32
v40@0:8@"AKAppleIDAuthenticationContext"16@"AKAccountRecoveryContext"24@?<v@?@"NSDictionary"@"NSError">32
v32@0:8@"AKAppleIDAuthenticationContext"16@?<v@?Q@"NSError">24
v40@0:8@"AKAppleIDAuthenticationContext"16@"NSUUID"24@?<v@?@"NSError">32
v48@0:8@"NSDictionary"16@"NSError"24@"NSUUID"32@?<v@?B@"NSDictionary">40
@"AKAppleIDAuthenticationController"
@"<AKAppleIDAuthenticationDelegate>"
@24@0:8@?16
Q24@0:8@16
@"NSDate"
@"<AKCredentialRequestProtocol>"
@"AKAuthorizationScopesUserSelection"
@"NSNumber"
@40@0:8@16@24@32
v32@0:8@"CDPContext"16@?<v@?@"CDPContext"@"NSError">24
v40@0:8@"CDPContext"16@"NSString"24@?<v@?@"NSDictionary"@"NSError">32
@"CDPRecoveryController"
@"AKAccountRecoveryContext"
@"<CDPStateUIProvider>"
v32@0:8@"AKAuthorizationUserResponse"16@?<v@?@"AKAuthorization"@"NSError">24
v40@0:8@"AKAuthorization"16@"NSError"24@?<v@?B@"NSError">32
v24@0:8@?<v@?@"NSData"@"NSError">16
@"NSData"
@"NSValue"
@"AKAuthorizationUpgradeContext"
@"NSUUID"
@"AKAuthorizationRequest"
@"AKPasswordRequest"
@"AKUserInformation"
B24@0:8q16
{os_unfair_lock_s="_os_unfair_lock_opaque"I}
{CGSize=dd}16@0:8
@48@0:8@16{CGSize=dd}24@40
v32@0:8@"AKCredentialRequestContext"16@?<v@?@"AKAuthorization"@"NSError">24
v40@0:8@"AKCredentialRequestContext"16@"AKAuthorizationUserResponse"24@?<v@?@"AKAuthorization"@"NSError">32
v32@0:8@"AKAuthorizationCredentialStateRequest"16@?<v@?q@"NSError">24
v32@0:8@"NSString"16@?<v@?q@"NSError">24
v32@0:8@"AKCredentialRequestContext"16@?<v@?@"AKAuthorizationPresentationContext"@"NSError">24
v24@0:8@?<v@?@"NSSet"@"NSError">16
v32@0:8@"AKAuthorizationRevokeUpgradeContext"16@?<v@?B@"NSError">24
v24@0:8@?<v@?@"NSString"@"NSError">16
v32@0:8@"AKCredentialRequestContext"16@?<v@?@"NSData"@"NSError">24
v32@0:8@"NSXPCListenerEndpoint"16@?<v@?B@"NSError">24
B32@0:8^{__SecTrust=}16@24
v28@0:8B16@20
v32@0:8Q16@24
@40@0:8@16@24^@32
B32@0:8@16q24
@32@0:8@16q24
@"ACAccountStore"
@"ACAccountType"
@20@0:8i16
v32@0:8@"NSData"16@?<v@?@"NSString"@"NSError">24
v40@0:8@"NSDictionary"16@"NSDictionary"24@?<v@?@"NSDictionary"@"NSData"@"NSError">32
@"AKAnisetteProvisioningController"
@"AKAppleIDAuthenticationContext"
@"AKDevice"
@"<AKAnisetteServiceProtocol>"
@"AKAnisetteData"
@"AKAttestationData"
@"AKPushMessage"
@28@0:8B16^@20
@"<AKURLBagDictionaryProvider>"
@"NSArray"32@0:8@"NSString"16@"NSArray"24
@"NSArray"24@0:8@"NSArray"16
B24@0:8@"FLFollowUpItem"16
@"NSURL"
v32@0:8q16@?24
v32@0:8q16@?<v@?B@"NSError">24
B40@0:8@16@?24@?32
B48@0:8@16@?24@?32@?40
@48@0:8@16@24@32@40
@"<AKAlertHandlerUIProvider>"
v48@0:8@"NSURLSession"16@"NSURLSessionTask"24@"NSURLResponse"32@?<v@?B@"NSDictionary">40
@"NSSet"16@0:8
v48@0:8@"NSURLSession"16@"NSURLSessionTask"24@"NSURLResponse"32@?<v@?B@"NSDictionary"@"NSURLRequest">40
v40@0:8@16@24^B32
@"NSArray"24@0:8^@16
B32@0:8@"NSArray"16^@24
B32@0:8@"FLFollowUpItem"16^@24
@"FLFollowUpController"
@32@0:8q16@24
@"<AKCredential>"
@"NSObject<OS_dispatch_group>"
d16@0:8
v24@0:8d16
@"AKCircleRequestPayload"
@"<AKAuthorizationUIProvider>"
v36@0:8B16@20@?28
v32@0:8@"AKDevice"16@?<v@?B@"NSError">24
v40@0:8@"NSData"16@"AKDevice"24@?<v@?B@"NSError">32
v36@0:8B16@"AKDevice"20@?<v@?@"AKAnisetteData"@"NSError">28
v40@0:8@"NSString"16@"AKDevice"24@?<v@?@"AKAnisetteData"@"NSError">32
v40@0:8@"AKDevice"16@"NSURLRequest"24@?<v@?@"AKAttestationData"@"NSError">32
B48@0:8@16@24@32@40
B48@0:8@"AKAppleIDAuthenticationController"16@"NSMutableDictionary"24@"NSError"32@"AKAppleIDAuthenticationContext"40
v56@0:8@"AKAppleIDAuthenticationController"16@"NSMutableDictionary"24@"NSError"32@"AKAppleIDAuthenticationContext"40@?<v@?B>48
B40@0:8@16@24^@32
@"<AKFollowUpProvider>"
@"AKCredentialRequestContext"
v32@0:8@16:24
@"NSObject<OS_nw_path_monitor>"
@32@0:8@16Q24
@"AKAppleIDServerResourceLoadDelegate"
@"<AKFollowUpItemFactory>"
@"AKAuthorizationDaemonConnection"
@"ACAccount"
@"AKAppleIDAuthenticationContext"32@0:8@"AKAppleIDAuthenticationContext"16^@24
@"<AKAuthorizationClientProtocol>"
@"NSUUID"16@0:8
@"AKAdaptiveService"
@"NSLocale"
v28@0:8B16@?20
v48@0:8@16q24@32@?40
@24@0:8@"NSString"16
@"NSDictionary"16@0:8
v24@0:8@"NSDictionary"16
@"AKDevice"16@0:8
v24@0:8@"AKDevice"16
^{__CFUserNotification=}
@"NSSet"
v44@0:8@16B24q28@?36
Vv24@0:8@?16
v32@0:8@"AKAppleIDAuthenticationContext"16@?<v@?@"NSDictionary"@"NSError">24
v40@0:8Q16@"NSString"24@?<v@?B@"NSError">32
v40@0:8@"NSHTTPURLResponse"16@"NSString"24@?<v@?B@"NSError">32
v40@0:8@"NSHTTPURLResponse"16@"AKAppleIDAuthenticationContext"24@?<v@?B@"NSError">32
v32@0:8@"NSString"16@?<v@?@"AKAppleIDServerResourceLoadDelegate"@"NSError">24
v32@0:8@"AKAppleIDAuthenticationContext"16@?<v@?@"AKAppleIDServerResourceLoadDelegate"@"NSError">24
v44@0:8@"NSString"16B24q28@?<v@?B@"NSError">36
v44@0:8@"NSNumber"16B24q28@?<v@?B@"NSError">36
v32@0:8@"NSString"16@?<v@?@"AKUserInformation"@"NSError">24
v40@0:8@"NSString"16@"AKUserInformation"24@?<v@?B@"NSError">32
v32@0:8@"AKDeviceListRequestContext"16@?<v@?@"NSDictionary"@"NSError">24
v32@0:8@"NSString"16@?<v@?@"AKApplicationMetadataInfo"@"NSError">24
v48@0:8@"<NSSecureCoding>"16@"NSString"24@"NSString"32@?<v@?B@"NSError">40
v40@0:8@"NSArray"16@"NSString"24@?<v@?@"NSDictionary"@"NSError">32
v40@0:8@"NSString"16q24@?<v@?B@"NSError">32
v40@0:8@"NSString"16@"NSString"24@?<v@?B@"NSError">32
Vv24@0:8@?<v@?B@"NSError">16
v32@0:8@"AKCircleRequestContext"16@?<v@?@"AKCircleRequestPayload"@"NSError">24
v40@0:8@"NSString"16@"AKAccountRecoveryContext"24@?<v@?@"NSDictionary"@"NSError">32
v40@0:8@"NSDictionary"16@"AKAppleIDAuthenticationContext"24@?<v@?B@"NSError">32
v32@0:8@"AKFollowUpTearDownContext"16@?<v@?B@"NSError">24
v32@0:8@"NSString"16@?<v@?@"NSArray"@"NSError">24
v32@0:8@"NSString"16@?<v@?@"NSDictionary"@"NSError">24
v36@0:8B16@"NSString"20@?<v@?@"NSDictionary"@"NSError">28
@"NSMutableArray"
@"AKAuthorizationClientImpl"
