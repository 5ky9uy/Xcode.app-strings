N12_GLOBAL__N_132ExternalFunctionsPassedConstantsE
N12_GLOBAL__N_116CallGraphPrinterE
N12_GLOBAL__N_117BreakpointPrinterE
N12_GLOBAL__N_114DomInfoPrinterE
N4llvm2cl11OptionValueIbEE
N4llvm2cl15OptionValueBaseIbLb0EEE
N4llvm2cl15OptionValueCopyIbEE
N4llvm6detail17AnalysisPassModelINS_6ModuleENS_34FunctionAnalysisManagerModuleProxyELb0EEE
N4llvm6detail19AnalysisPassConceptINS_6ModuleEEE
N4llvm6detail19AnalysisResultModelINS_6ModuleENS_34FunctionAnalysisManagerModuleProxyENS3_6ResultENS_17PreservedAnalysesELb1EEE
N4llvm6detail21AnalysisResultConceptINS_6ModuleEEE
N4llvm6detail17AnalysisPassModelINS_6ModuleENS_31CGSCCAnalysisManagerModuleProxyELb0EEE
N4llvm6detail19AnalysisResultModelINS_6ModuleENS_31CGSCCAnalysisManagerModuleProxyENS3_6ResultENS_17PreservedAnalysesELb1EEE
N4llvm6detail17AnalysisPassModelINS_13LazyCallGraph3SCCENS_33FunctionAnalysisManagerCGSCCProxyELb0EEE
N4llvm6detail19AnalysisPassConceptINS_13LazyCallGraph3SCCEEE
N4llvm6detail19AnalysisResultModelINS_13LazyCallGraph3SCCENS_33FunctionAnalysisManagerCGSCCProxyENS4_6ResultENS_17PreservedAnalysesELb1EEE
N4llvm6detail21AnalysisResultConceptINS_13LazyCallGraph3SCCEEE
N4llvm6detail17AnalysisPassModelINS_13LazyCallGraph3SCCENS_31ModuleAnalysisManagerCGSCCProxyELb0EEE
N4llvm6detail19AnalysisResultModelINS_13LazyCallGraph3SCCENS_31ModuleAnalysisManagerCGSCCProxyENS4_6ResultENS_17PreservedAnalysesELb0EEE
N4llvm6detail17AnalysisPassModelINS_8FunctionENS_33CGSCCAnalysisManagerFunctionProxyELb0EEE
N4llvm6detail19AnalysisPassConceptINS_8FunctionEEE
N4llvm6detail19AnalysisResultModelINS_8FunctionENS_33CGSCCAnalysisManagerFunctionProxyENS3_6ResultENS_17PreservedAnalysesELb0EEE
N4llvm6detail21AnalysisResultConceptINS_8FunctionEEE
N4llvm6detail17AnalysisPassModelINS_8FunctionENS_34ModuleAnalysisManagerFunctionProxyELb0EEE
N4llvm6detail19AnalysisResultModelINS_8FunctionENS_34ModuleAnalysisManagerFunctionProxyENS3_6ResultENS_17PreservedAnalysesELb0EEE
N4llvm6detail9PassModelINS_6ModuleENS_12VerifierPassENS_17PreservedAnalysesELb0EEE
N4llvm6detail11PassConceptINS_6ModuleEEE
N4llvm6detail9PassModelINS_6ModuleENS_15PrintModulePassENS_17PreservedAnalysesELb0EEE
N4llvm6detail9PassModelINS_6ModuleENS_17BitcodeWriterPassENS_17PreservedAnalysesELb0EEE
N12_GLOBAL__N_119FunctionPassPrinterE
N12_GLOBAL__N_123CallGraphSCCPassPrinterE
N12_GLOBAL__N_117ModulePassPrinterE
N12_GLOBAL__N_115LoopPassPrinterE
N12_GLOBAL__N_117RegionPassPrinterE
N12_GLOBAL__N_121BasicBlockPassPrinterE
N12_GLOBAL__N_16CFGSCCE
N12_GLOBAL__N_112CallGraphSCCE
N4llvm2cl3optINS_15MCTargetOptions18AsmInstrumentationELb0ENS0_6parserIS3_EEEE
N4llvm2cl11opt_storageINS_15MCTargetOptions18AsmInstrumentationELb0ELb0EEE
N4llvm2cl6parserINS_15MCTargetOptions18AsmInstrumentationEEE
N4llvm2cl11OptionValueINS_15MCTargetOptions18AsmInstrumentationEEE
N4llvm2cl15OptionValueBaseINS_15MCTargetOptions18AsmInstrumentationELb0EEE
N4llvm2cl15OptionValueCopyINS_15MCTargetOptions18AsmInstrumentationEEE
N4llvm2cl15OptionValueCopyINSt3__112basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEEEE
N4llvm2cl4listINSt3__112basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEEbNS0_6parserIS8_EEEE
N4llvm2cl12list_storageINSt3__112basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEEbEE
N4llvm2cl3optINS_5Reloc5ModelELb0ENS0_6parserIS3_EEEE
N4llvm2cl11opt_storageINS_5Reloc5ModelELb0ELb0EEE
N4llvm2cl6parserINS_5Reloc5ModelEEE
N4llvm2cl11OptionValueINS_5Reloc5ModelEEE
N4llvm2cl15OptionValueBaseINS_5Reloc5ModelELb0EEE
N4llvm2cl15OptionValueCopyINS_5Reloc5ModelEEE
N4llvm2cl3optINS_11ThreadModel5ModelELb0ENS0_6parserIS3_EEEE
N4llvm2cl11opt_storageINS_11ThreadModel5ModelELb0ELb0EEE
N4llvm2cl6parserINS_11ThreadModel5ModelEEE
N4llvm2cl11OptionValueINS_11ThreadModel5ModelEEE
N4llvm2cl15OptionValueBaseINS_11ThreadModel5ModelELb0EEE
N4llvm2cl15OptionValueCopyINS_11ThreadModel5ModelEEE
N4llvm2cl3optINS_9CodeModel5ModelELb0ENS0_6parserIS3_EEEE
N4llvm2cl11opt_storageINS_9CodeModel5ModelELb0ELb0EEE
N4llvm2cl6parserINS_9CodeModel5ModelEEE
N4llvm2cl11OptionValueINS_9CodeModel5ModelEEE
N4llvm2cl15OptionValueBaseINS_9CodeModel5ModelELb0EEE
N4llvm2cl15OptionValueCopyINS_9CodeModel5ModelEEE
N4llvm2cl3optINS_13TargetMachine15CodeGenFileTypeELb0ENS0_6parserIS3_EEEE
N4llvm2cl11opt_storageINS_13TargetMachine15CodeGenFileTypeELb0ELb0EEE
N4llvm2cl6parserINS_13TargetMachine15CodeGenFileTypeEEE
N4llvm2cl11OptionValueINS_13TargetMachine15CodeGenFileTypeEEE
N4llvm2cl15OptionValueBaseINS_13TargetMachine15CodeGenFileTypeELb0EEE
N4llvm2cl15OptionValueCopyINS_13TargetMachine15CodeGenFileTypeEEE
N4llvm2cl3optINS_8FloatABI7ABITypeELb0ENS0_6parserIS3_EEEE
N4llvm2cl11opt_storageINS_8FloatABI7ABITypeELb0ELb0EEE
N4llvm2cl6parserINS_8FloatABI7ABITypeEEE
N4llvm2cl11OptionValueINS_8FloatABI7ABITypeEEE
N4llvm2cl15OptionValueBaseINS_8FloatABI7ABITypeELb0EEE
N4llvm2cl15OptionValueCopyINS_8FloatABI7ABITypeEEE
N4llvm2cl3optINS_10FPOpFusion14FPOpFusionModeELb0ENS0_6parserIS3_EEEE
N4llvm2cl11opt_storageINS_10FPOpFusion14FPOpFusionModeELb0ELb0EEE
N4llvm2cl6parserINS_10FPOpFusion14FPOpFusionModeEEE
N4llvm2cl11OptionValueINS_10FPOpFusion14FPOpFusionModeEEE
N4llvm2cl15OptionValueBaseINS_10FPOpFusion14FPOpFusionModeELb0EEE
N4llvm2cl15OptionValueCopyINS_10FPOpFusion14FPOpFusionModeEEE
N4llvm2cl3optINS_9JumpTable13JumpTableTypeELb0ENS0_6parserIS3_EEEE
N4llvm2cl11opt_storageINS_9JumpTable13JumpTableTypeELb0ELb0EEE
N4llvm2cl6parserINS_9JumpTable13JumpTableTypeEEE
N4llvm2cl11OptionValueINS_9JumpTable13JumpTableTypeEEE
N4llvm2cl15OptionValueBaseINS_9JumpTable13JumpTableTypeELb0EEE
N4llvm2cl15OptionValueCopyINS_9JumpTable13JumpTableTypeEEE
N4llvm2cl4listIPKNS_8PassInfoEbNS_14PassNameParserEEE
N4llvm2cl12list_storageIPKNS_8PassInfoEbEE
N4llvm2cl11OptionValueIiEE
N4llvm2cl15OptionValueBaseIiLb0EEE
N4llvm2cl15OptionValueCopyIiEE
N4llvm2cl11OptionValueIjEE
N4llvm2cl15OptionValueBaseIjLb0EEE
N4llvm2cl15OptionValueCopyIjEE
N4llvm2cl3optINS_12PluginLoaderELb0ENS0_6parserINSt3__112basic_stringIcNS4_11char_traitsIcEENS4_9allocatorIcEEEEEEEE
N4llvm2cl11opt_storageINS_12PluginLoaderELb0ELb1EEE
N4llvm12PluginLoaderE
N4llvm2cl11OptionValueINS_12PluginLoaderEEE
N4llvm2cl15OptionValueBaseINS_12PluginLoaderELb1EEE
N4llvm13X86AsmPrinterE
N12_GLOBAL__N_124X86CallFrameOptimizationE
N12_GLOBAL__N_115X86ExpandPseudoE
N12_GLOBAL__N_111X86FastISelE
N12_GLOBAL__N_13FPSE
N4llvm16X86FrameLoweringE
N12_GLOBAL__N_115X86DAGToDAGISelE
27k"
27W"
27f"
27R"
27a"
27\"
27i(
27$'
27n(
27)'
27s(
O" 
O"@
O" 
O"@
!# 
!#@
(" 
("@
!# 
!#@
(" 
("@
370!
370!
270!
37,!
37,!
27,!
37#!
37#!
27#!
37H!
37D!
37a!
37\!
37[!
37V!
37U!
37w!
37q!
37k!
37/
37W/
37S/
37'/
37#/
37</
377/
376/
371/
370/
37N/
37H/
37B/
374!
374!
274!
37$!
37$!
27$!
37L!
37b!
37x!
37r!
37l!
37[/
37+/
37=/
37O/
37I/
37C/
37x.
37*%
27*%
37-)
27-)
37.)
27.)
37] 
37[ 
37+
37Z#
37R#
37
37N#
37F#
27L'
27Q'
27V'
27*(
27/(
274(
27j'
27o'
27t'
27H(
27M(
27R(
27['
27`'
27e'
279(
27>(
27C(
27.'
273'
278'
27(
27='
27B'
27G'
27 (
27%(
27y'
27~'
27W(
27\(
27a(
27V3
27.%
27,%
272%
270%
!27N
37z)
37_)
37])
37h)
37r)
37i)
37`)
37})
27z)
27_)
27])
27h)
27r)
27i)
27`)
27})
37q)
37|)
27q)
27|)
37R*
37I*
37@*
37m*
37d*
37[*
37H*
37?*
37Q*
37l*
37c*
37Z*
&27p
&27r
&27y
&27{
37`/
37^/
378.
37W.
37<.
37&.
37$.
37,.
37:.
37E.
37n.
37e.
37\.
37O.
37F.
37=.
37v.
37Y.
37d.
37m.
37[.
37N.
372.
A79.
B7%.
37d4
37E4
37b4
37d0
37[0
37R0
37I0
37@0
3770
37?0
3760
27d4
27E4
27b4
27d0
27[0
27R0
27I0
27@0
2770
27?0
2760
37n0
37l0
37Z0
37c0
37Q0
37H0
27n0
27l0
27Z0
27c0
27Q0
27H0
27x(
27z(
27,%
27.%
270%
272%
27o(
27'
27*'
27j(
27%'
27 '
27t(
370,
376,
37&,
37.,
37%,
37<,
37d4
27d4
37-
@27G
@27H
@27I
@27J
27/%
27-%
273%
271%
V27M
V27N
V27O
W27P
W27Q
W27R
E27 
37y4
37g4
37p4
37Z4
37H4
37Q4
27y4
27g4
27p4
27Z4
27H4
27Q4
37x4
37Y4
37f4
37o4
37G4
37P4
27x4
27Y4
27f4
27o4
27G4
27P4
37|3
37o3
37Z3
37c3
37w3
37y3
37W3
37n3
37{3
37Y3
37b3
7_3
7h3
2793
27'3
2703
27D3
27$3
27"3
2783
27&3
27/3
7,3
753
27F2
27D2
27*1
27(1
]7'1
]7%1
]7&1
]7$1
]7C2
]7A2
]7B2
]7@2
]7:2
]782
]792
]772
7' 
7? 
77 
37m)
37k)
37l)
37j)
37K)
37J)
375)
374)
37f0
37h0
37D0
37B0
37e0
37A0
37C0
37g0
37]$
37\$
37u$
37t$
7`$
7Z"
7Y"
7_$
7{2
7z2
]7%2
]7#2
]7$2
]7"2
37\4
37r4
37^4
37t4
37[4
37q4
37]4
37s4
72
3723
3713
3743
3733
773
763
794
784
37d)
37b)
37c)
37a)
37]0
37_0
37;0
3790
37\0
3780
37:0
37^0
37W$
37V$
37o$
37n$
7r$
7Z$
7Y$
7q$
37|(
37{(
7i"
7U"
7T"
7h"
7r2
7]2
7q2
7\2
7j3
7i3
37i4
37S4
37k4
37U4
37h4
37R4
37j4
37T4
37)3
37(3
37+3
37*3
7.3
7-3
704
7/4
37~)
37T0
37V0
37S0
37U0
37i$
37h$
7l$
7k$
7d"
7c"
7T2
7S2
7a3
7`3
37J4
37L4
37I4
37K4
73
37t)
37v)
37s)
37u)
37Q)
37P)
37;)
37:)
37K0
37M0
37J0
37L0
37c$
37b$
37t 
37)2
37(2
37+2
37*2
]712
]7/2
]702
]7.2
371
37{4
37}4
37z4
37|4
37;3
37:3
37=3
37<3
37W)
37V)
37A)
37@)
27x(
27x(
27x(
27x(
271%
271%
261%
273%
273%
263%
27-%
27-%
26-%
27/%
27/%
26/%
37&4
37 0
37(0
3740
37"0
37.0
370
A750
B7!0
37;4
37)4
3724
37C4
37$4
37&4
37:4
37(4
3714
7.4
774
37x/
37b/
37j/
37v/
37d/
37z/
37{/
37p/
A7w/
B7c/
37E)
373)
371)
379)
27E)
273)
271)
279)
37?)
27?)
A7F)
B72)
37[)
37I)
37G)
37O)
27[)
27I)
27G)
27O)
37U)
27U)
A7\)
B7H)
37z&
37h&
37~&
37f&
37n&
37|&
37t&
A7{&
B7g&
37d&
373&
37R&
37P&
37X&
37!&
37H&
37?&
376&
37+&
37"&
37^&
37G&
37>&
375&
37*&
A7e&
B7Q&
37H%
37g%
376%
37L%
374%
37<%
37J%
37U%
37|%
37s%
37j%
37_%
37V%
37M%
37B%
37{%
37r%
37i%
37^%
37j,
37C,
37c,
37W,
37K,
37".
37u-
37E-
37n-
37_-
37P-
37x-
37@-
37m,
37x,
379-
37--
37!-
377!
37)!
277!
27)!
37'!
27'!
A78!
B7*!
37O!
37e!
37A!
37}!
37Q!
37{!
37g!
A7P!
B7B!
B7~!
37~+
371+
37%+
37++
37I$
37C$
37O$
37z#
37h#
37y#
37g#
37/!
37+!
37!
37"!
27/!
27+!
27!
27"!
373!
37!!
273!
27!!
37G!
37C!
37`!
37_!
37Y!
37Z!
37S!
37T!
37v!
37u!
37p!
37o!
37j!
37i!
37K!
37z.
37!)
37')
37%
37$%
37V/
37R/
37&/
37"/
37;/
37:/
374/
375/
37./
37//
37M/
37L/
37G/
37F/
37A/
37@/
37Z/
37*/
27[$
27U$
27a$
27s$
27m$
27g$
7^$
7X$
7p$
7j$
27n 
27c 
27p 
27r 
$7~ 
D6Q+
D6Q+
D6Q+
D6Q+
7X"
7S"
7g"
7b"
37k2
37t2
37b2
37M2
37V2
37a2
37j2
37L2
37s2
37U2
7p2
7R2
7y2
7[2
]7"1
]7#1
37;2
3722
27'2
27&2
]7>2
]7?2
]752
]762
]7,2
]7-2
]7 2
]7!2
37R#
37Z#
37F#
37N#
37V#
37J#
37
N4llvm17X86TargetLoweringE
|${$
~$}$
<!;!
@!?!
M#L#
Y#X#
Q+P+
g+f+
}+|+
a/`/
+1*1
G2F2
#3"3
E3D3
E#D#
Q#P#
_/^/
)1(1
E2D2
%3$3
o n 
d c 
q p 
]#\#
y(x(
4+3+
S+R+
i+h+
.1,1
/1-1
J2H2
K2I2
L3J3
M3K3
T3R3
U3S3
^ ] 
b a 
(!'!
8!7!
P!O!
f!e!
|!{!
O#N#
[#Z#
+%*%
e&d&
{&z&
4&3&
I%H%
h%g%
/)-)
F)E)
\)[)
{)z)
2+1+
k,j,
A-@-
v-u-
#.".
9.8.
X.W.
w.v.
w/v/
5040
o0n0
x3w3
%4$4
D4C4
c4b4
G#F#
S#R#
X3W3
z3y3
'4&4
F4E4
e4d4
\ [ 
` _ 
*!)!
B!A!
R!Q!
h!g!
~!}!
Q&P&
g&f&
}&|&
5%4%
K%J%
0).)
2)1)
H)G)
^)])
D,C,
/,.,
n,m,
F-E-
y-x-
%.$.
;.:.
Z.Y.
y.x.
c/b/
y/x/
!0 0
m0l0
K"I"
O"M"
q"o"
u"s"
y"w"
}"{"
<#8#
=#9#
B#>#
C#?#
t3n3
v#s#
d%^%
0&*&
M&G&
+,%,
T.N.
s.m.
nk
85
<#:#
=#;#
B#@#
C#A#
. ) 
F A 
v3s3
j3g3
a3^3
u3r3
i3f3
`3]3
N4llvm15X86GenInstrInfoE
N4llvm12X86InstrInfoE
4b4n0
4c4o0[
*d4E4l0e4F4m0j
N12_GLOBAL__N_14CGBRE
N12_GLOBAL__N_112LDTLSCleanupE
N4llvm22X86MachineFunctionInfoE
N12_GLOBAL__N_112PadShortFuncE
.A++
.A..
/A//
0C00
1C11
5A22
4D33
4D44
5A55
8A88
9F99
:C::
?D<<
=D==
>C>>
?D??
@F@@
AAAA
BFBB
CCCC
DDDD
EEEE
FFFF
GGGG
LLLLL
L(LLLLL
KXKX0KX

88"8""""
?000
N4llvm18X86GenRegisterInfoE
N4llvm15X86RegisterInfoE
N4llvm19X86SelectionDAGInfoE
N4llvm19X86GenSubtargetInfoE
N4llvm12X86SubtargetE
N4llvm16X86TargetMachineE
N12_GLOBAL__N_113X86PassConfigE
NSt3__110__function6__funcIZN4llvm16X86TargetMachine19getTargetIRAnalysisEvE3$_0NS_9allocatorIS4_EEFNS2_19TargetTransformInfoERNS2_8FunctionEEEE
NSt3__110__function6__baseIFN4llvm19TargetTransformInfoERNS2_8FunctionEEEE
N4llvm19TargetTransformInfo5ModelINS_10X86TTIImplEEE
N4llvm19TargetTransformInfo7ConceptE
ZN4llvm16X86TargetMachine19getTargetIRAnalysisEvE3$_0
N4llvm27X86_64MachoTargetObjectFileE
N4llvm22X86ELFTargetObjectFileE
N4llvm28X86LinuxNaClTargetObjectFileE
N4llvm26X86WindowsTargetObjectFileE
N12_GLOBAL__N_118VZeroUpperInserterE
N12_GLOBAL__N_112FixupLEAPassE
N12_GLOBAL__N_114WinEHStatePassE
*I!$
\iI!
!I!E*I!d
\iI!
I!biI
\iI!
*S"$
\iS"
!S"E*S"d
\iS"
*\!$
\i\!
!\!E*\!d
\i\!
\i!"
\i!"
!!"E*!
K.d!
\i'
\i'
'bi'
\i'
*b#$
\ib#
!b#E*b#d
\ib#
b#bib
\ib#
\iq%
q%biq%
%,"e-,
K.,"
E,"eM,
/,"e
\iR biR
D$biD
f.4!
\iR 
\i' bi'
)$bi)
\iB biB
\iB 
\i' 
\i_ bi_
Q$biQ
f.>!
\i_ 
\i4 bi4
6$bi6
\i4 
-px!-kx
Ax!-k
"-ky
A{"gJ{
`J{"]J{
\i<%
\i;
\i;
*v#$
\iv#
!v#E*v#d
\iv#
*\"$
\i\"
!\"E*\"d
\i\"
\i$%
\ie*
\ie*
\ii(
\ii(
<O3a
<Osa
\iL
\iL
\i'+
\i'+
<O4$
<Ot$
<q30
\iJ"
!J"E*J"d
\i!)
-pV-kV
AV-kR
\i<*
\i<*
\i<*
zAbzK
oAboK
\iq+
\iq+
\iR*
\iR*
\i='
\i='
\i))
\i))
$Jm 
dJm EJm
\iu$
\id"
$Jw 
dJw EJw
$J$#
dJ$#EJ$
bndmk 
bndcl 
bndcn 
bndcu 
bndmov 
bndldx 
bndstx 
prefetcht0
sha1msg1
sha256msg1
prefetcht1
pfrcpit1
pfrsqit1
vmovdqa32
vmovdqu32
sha1msg2
sha256msg2
sha256rnds2
prefetcht2
pfrcpit2
vshuff64x2
vinsertf64x2
vbroadcastf64x2
vshufi64x2
vinserti64x2
vbroadcasti64x2
vmovdqa64
xsavec64
fxsave64
fxrstor64
xsaves64
xrstors64
xsaveopt64
vmovdqu64
sha1rnds4
vshuff32x4
vextractf32x4
vinsertf32x4
vbroadcastf32x4
vshufi32x4
vextracti32x4
vinserti32x4
vbroadcasti32x4
vextractf64x4
vinsertf64x4
vbroadcastf64x4
vextracti64x4
vinserti64x4
vbroadcasti64x4
vmovdqu16
vperm2f128
vextractf128
vinsertf128
vbroadcastf128
vperm2i128
vextracti128
vinserti128
vbroadcasti128
vmovdqu8
vinsertf32x8
vbroadcastf32x8
vinserti32x8
vbroadcasti32x8
vmovntdqa
vmovdqa
seta
prefetchnta
crc32b
vpmovm2b
cmpxchg16b
cmpxchg8b
vpshab
sbbb
vpsubb
adcb
decb
incb
vpaddb
xaddb
kandb
vpmovusdb
vpmovsdb
vpmovdb
vpshufb
negb
cmpxchgb
vpavgb
vpmovmskb
rclb
vpshlb
rolb
kshiftlb
imulb
vpblendmb
vptestnmb
vpcomb
vptestmb
kandnb
vpsignb
fcmovnb
vpcmpb
vpcmpeqb
vpmovusqb
vpmovsqb
vpmovqb
sarb
rcrb
shrb
korb
kxnorb
rorb
kxorb
vpinsrb
kshiftrb
vpextrb
scasb
vpabsb
movabsb
vpsubsb
vpaddsb
lodsb
vpminsb
cmpsb
outsb
vpsubusb
vpaddusb
pavgusb
movsb
vpmaxsb
setb
vpcmpgtb
knotb
vprotb
vpbroadcastb
kortestb
vpcomub
vpminub
vpcmpub
pfsub
vpmaxub
vpblendvb
idivb
fcmovb
kmovb
clwb
vpacksswb
vpackuswb
vpmovuswb
vpmovswb
vpmovwb
pfacc
pfnacc
pfpnacc
vaesdec
xsavec
blcic
blsic
t1mskc
vaesimc
vaesenc
vpermi2d
vpmovm2d
vpermt2d
vpbroadcastmw2d
vpshad
vpsrad
vphaddbd
vphaddubd
vphsubd
vpsubd
vpmovsxbd
vpmovzxbd
pfadd
vphaddd
vpaddd
kandd
vpandd
vpexpandd
vpblendd
vpgatherdd
vpscatterdd
vpmacsdd
vpmacssdd
pi2fd
vpshufd
pf2id
invpcid
invvpid
fbld
vpshld
vpslld
vpmulld
vprold
vpsrld
vmptrld
kshiftld
vpblendmd
vptestnmd
vpcomd
vpermd
vptestmd
vpand
kandnd
vpandnd
valignd
vpsignd
bound
vfmaddsub231pd
vfmsub231pd
vfnmsub231pd
vfmsubadd231pd
vfmadd231pd
vfnmadd231pd
vfmaddsub132pd
vfmsub132pd
vfnmsub132pd
vfmsubadd132pd
vfmadd132pd
vfnmadd132pd
vpermi2pd
cvtpi2pd
vpermil2pd
vexp2pd
vcvtdq2pd
vcvtudq2pd
vcvtqq2pd
vcvtuqq2pd
vcvtps2pd
vpermt2pd
vfmaddsub213pd
vfmsub213pd
vfnmsub213pd
vfmsubadd213pd
vfmadd213pd
vfnmadd213pd
vrcp14pd
vrsqrt14pd
vrcp28pd
vrsqrt28pd
vmovapd
pswapd
vfmaddsubpd
vaddsubpd
vhsubpd
vfmsubpd
vfnmsubpd
vsubpd
vgatherpf0dpd
vscatterpf0dpd
vgatherpf1dpd
vscatterpf1dpd
vfmsubaddpd
vhaddpd
vfmaddpd
vfnmaddpd
vaddpd
vexpandpd
vandpd
vblendpd
vroundpd
vgatherdpd
vscatterdpd
vreducepd
vrangepd
vrndscalepd
vscalefpd
vshufpd
vunpckhpd
vmovhpd
vmovmskpd
vpermilpd
vunpcklpd
vmulpd
vmovlpd
vpcmpd
vblendmpd
vfixupimmpd
vpermpd
vandnpd
vminpd
vdppd
vcmppd
vgetexppd
vgatherpf0qpd
vscatterpf0qpd
vgatherpf1qpd
vscatterpf1qpd
vgatherqpd
vscatterqpd
vorpd
vxorpd
vcompresspd
vmovntpd
vsqrtpd
vtestpd
vmovupd
vblendvpd
vdivpd
vmaskmovpd
vmaxpd
vfrczpd
vpcmpeqd
vpgatherqd
vpscatterqd
vpmovusqd
vpmovsqd
vpmovqd
kord
kxnord
vpord
vprord
kxord
vpxord
vpinsrd
kshiftrd
vpextrd
vfmsub231sd
vfnmsub231sd
vfmadd231sd
vfnmadd231sd
vfmsub132sd
vfnmsub132sd
vfmadd132sd
vfnmadd132sd
vcvtss2sd
vfmsub213sd
vfnmsub213sd
vfmadd213sd
vfnmadd213sd
vrcp14sd
vrsqrt14sd
vrcp28sd
vrsqrt28sd
vpabsd
vfmsubsd
vfnmsubsd
vsubsd
vfmaddsd
vfnmaddsd
vaddsd
vroundsd
vreducesd
vrangesd
vrndscalesd
vscalefsd
vucomisd
vcomisd
vmulsd
vfixupimmsd
vpminsd
vminsd
vcmpsd
vgetexpsd
vpcompressd
movntsd
vsqrtsd
vbroadcastsd
vdivsd
vmovsd
vpmaxsd
vmaxsd
vfrczsd
vpconflictd
vpcmpgtd
vplzcntd
knotd
vprotd
vpbroadcastd
kortestd
vpcomud
vpminud
vpcmpud
vpmaxud
vpsravd
vpsllvd
vprolvd
vpsrlvd
vpmaskmovd
vmovd
vprorvd
vphsubwd
vphaddwd
vpmaddwd
vpunpckhwd
vpunpcklwd
vpmacswd
vpmadcswd
vpmacsswd
vpmadcsswd
vphadduwd
vpmovsxwd
vpmovzxwd
setae
fcmovnbe
setbe
fcmovbe
ffree
pfcmpge
setge
setle
loopne
setne
fcmovne
loope
sete
sha1nexte
fnsave
fxsave
fcmove
invlpg
setg
prefetch
fxch
vcvtps2ph
vpmacsdqh
vpmacssdqh
clflush
blci
fcomi
fucomi
cvttpd2pi
cvtpd2pi
cvttps2pi
cvtps2pi
fcompi
fucompi
vpcmpestri
vpcmpistri
vcvttsd2si
vcvtsd2si
vcvttss2si
vcvtss2si
vcvttsd2usi
vcvtsd2usi
vcvttss2usi
vcvtss2usi
blcmsk
tzmsk
crc32l
leal
cmoval
sbbl
movsbl
fsubl
fisubl
cmovbl
movzbl
adcl
decl
incl
btcl
vmreadl
faddl
fiaddl
xaddl
rdseedl
fldl
shldl
fildl
rdrandl
shrdl
vcvtsi2sdl
vcvtusi2sdl
cmovael
cmovbel
cmovgel
cmovlel
cmovnel
rdfsbasel
wrfsbasel
rdgsbasel
wrgsbasel
vmwritel
cmovel
bsfl
negl
cmpxchgl
cmovgl
pushl
bzhil
blsil
movntil
blsmskl
rcll
fildll
shll
blcfill
blsfill
lcalll
roll
fistpll
fisttpll
lsll
fmull
fimull
cmovll
fcoml
ficoml
andnl
cmovnol
cmovol
bswapl
pdepl
cmpl
ljmpl
fcompl
ficompl
cmovnpl
nopl
popl
arpl
fstpl
fistpl
fisttpl
cmovpl
vpmacsdql
vpmacssdql
larl
sarl
fsubrl
fisubrl
rcrl
shrl
rorl
xorl
bsrl
blsrl
btrl
strl
bextrl
fdivrl
fidivrl
scasl
movabsl
ldsl
lodsl
lesl
lfsl
lgsl
cmovnsl
cmpsl
vcvtsi2ssl
vcvtusi2ssl
lssl
btsl
outsl
cmovsl
lgdtl
sgdtl
lidtl
sidtl
sldtl
lretl
setl
popcntl
lzcntl
tzcntl
notl
testl
fstl
fistl
pextl
pfmul
fdivl
fidivl
movl
smswl
movswl
movzwl
adcxl
shlxl
mulxl
adoxl
sarxl
shrxl
rorxl
vpmovb2m
vpmovd2m
vpmovq2m
vpmovw2m
fcom
fucom
vpperm
vpcmpestrm
vpcmpistrm
vpandn
xbegin
pfmin
vmxon
setno
seto
fsubp
pfrcp
faddp
fmulp
rex64 jmp
fcomp
fucomp
setnp
loop
fsubrp
fdivrp
setp
fbstp
fstp
vmovddup
vmovshdup
vmovsldup
#EH_SjLj_Setup
fdivp
crc32q
vpbroadcastmb2q
vpermi2q
vpmovm2q
movdq2q
vpermt2q
leaq
vpshaq
vpsraq
cmovaq
sbbq
vphaddbq
movsbq
vphaddubq
vpsubq
cmovbq
vpmovsxbq
vpmovzxbq
movzbq
adcq
decq
incq
btcq
vcvttpd2dq
vcvtpd2dq
movq2dq
vcvttps2dq
vcvtps2dq
vmreadq
vphsubdq
vpaddq
xaddq
vphadddq
rdseedq
vpunpckhdq
shldq
vpunpckldq
vpslldq
vpsrldq
vpmuldq
kandq
vpandq
vpexpandq
rdrandq
vpunpckhqdq
vpunpcklqdq
vpclmulqdq
vpgatherdq
vpscatterdq
shrdq
vcvtsi2sdq
vcvtusi2sdq
vmovntdq
vcvttpd2udq
vcvtpd2udq
vcvttps2udq
vcvtps2udq
vphaddudq
vpmuludq
vpmovsxdq
vpmovzxdq
cmovaeq
cmovbeq
cmovgeq
cmovleq
cmovneq
pfcmpeq
rdfsbaseq
wrfsbaseq
rdgsbaseq
wrgsbaseq
vmwriteq
cmoveq
bsfq
negq
cmpxchgq
cmovgq
pushq
bzhiq
blsiq
movntiq
blsmskq
rclq
vpshlq
callq
vpsllq
vpmullq
vprolq
vpsrlq
lslq
movslq
kshiftlq
imulq
cmovlq
vpblendmq
vptestnmq
vpcomq
vpermq
vptestmq
kandnq
vpandnq
valignq
cmovnoq
cmovoq
bswapq
pdepq
vpcmpq
cmovnpq
popq
cmovpq
vcvttpd2qq
vcvtpd2qq
vcvttps2qq
vcvtps2qq
vpcmpeqq
vpgatherqq
vpscatterqq
vcvttpd2uqq
vcvtpd2uqq
vcvttps2uqq
vcvtps2uqq
larq
sarq
rcrq
shrq
korq
kxnorq
vporq
vprorq
kxorq
vpxorq
bsrq
blsrq
vpinsrq
btrq
kshiftrq
strq
bextrq
vpextrq
scasq
vpabsq
movabsq
lodsq
lfsq
lgsq
vpminsq
cmovnsq
cmpsq
vcvtsi2ssq
vcvtusi2ssq
vpcompressq
lssq
btsq
cmovsq
vpmaxsq
vpconflictq
lgdtq
sgdtq
lidtq
sidtq
sldtq
lretq
vpcmpgtq
popcntq
vplzcntq
tzcntq
movntq
knotq
vprotq
insertq
vpbroadcastq
kortestq
pextq
vpcomuq
vpminuq
vpcmpuq
vpmaxuq
vpsravq
idivq
vpsllvq
vprolvq
vpsrlvq
vpmaskmovq
vmovq
vprorvq
vphaddwq
smswq
movswq
vphadduwq
vpmovsxwq
vpmovzxwq
movzwq
adcxq
shlxq
mulxq
adoxq
sarxq
shrxq
rorxq
vmclear
pfsubr
enter
vpalignr
vpor
frstor
fxrstor
vpxor
verr
vldmxcsr
vstmxcsr
bextr
fdivr
fsubs
fisubs
blcs
fadds
fiadds
flds
filds
xsaves
fmuls
fimuls
fcoms
ficoms
setns
vfmaddsub231ps
vfmsub231ps
vfnmsub231ps
vfmsubadd231ps
vfmadd231ps
vfnmadd231ps
vfmaddsub132ps
vfmsub132ps
vfnmsub132ps
vfmsubadd132ps
vfmadd132ps
vfnmadd132ps
vcvtpd2ps
vcvtph2ps
vpermi2ps
cvtpi2ps
vpermil2ps
vexp2ps
vcvtdq2ps
vcvtudq2ps
vcvtqq2ps
vcvtuqq2ps
vpermt2ps
vfmaddsub213ps
vfmsub213ps
vfnmsub213ps
vfmsubadd213ps
vfmadd213ps
vfnmadd213ps
vrcp14ps
vrsqrt14ps
vrcp28ps
vrsqrt28ps
vmovaps
vfmaddsubps
vaddsubps
vhsubps
vfmsubps
vfnmsubps
vsubps
vgatherpf0dps
vscatterpf0dps
vgatherpf1dps
vscatterpf1dps
vfmsubaddps
vhaddps
vfmaddps
vfnmaddps
vaddps
vexpandps
vandps
vblendps
vroundps
vgatherdps
vscatterdps
vreduceps
vrangeps
vrndscaleps
vscalefps
vshufps
vunpckhps
vmovlhps
vmovhps
vmovmskps
vmovhlps
vpermilps
vunpcklps
vmulps
vmovlps
vblendmps
vfixupimmps
fcomps
ficomps
vpermps
vandnps
vminps
vrcpps
vdpps
vcmpps
vgetexpps
vgatherpf0qps
vscatterpf0qps
vgatherpf1qps
vscatterpf1qps
vgatherqps
vscatterqps
vorps
vxorps
vcompressps
vextractps
vmovntps
vinsertps
vrsqrtps
vsqrtps
vtestps
fstps
fistps
fisttps
vmovups
vblendvps
vdivps
vmaskmovps
vmaxps
vfrczps
fsubrs
fisubrs
xrstors
fdivrs
fidivrs
vfmsub231ss
vfnmsub231ss
vfmadd231ss
vfnmadd231ss
vfmsub132ss
vfnmsub132ss
vfmadd132ss
vfnmadd132ss
vcvtsd2ss
vfmsub213ss
vfnmsub213ss
vfmadd213ss
vfnmadd213ss
vrcp14ss
vrsqrt14ss
vrcp28ss
vrsqrt28ss
vfmsubss
vfnmsubss
vsubss
vfmaddss
vfnmaddss
vaddss
vroundss
vreducess
vrangess
vrndscaless
vscalefss
vucomiss
vcomiss
vmulss
vfixupimmss
vminss
vrcpss
vcmpss
vgetexpss
movntss
vrsqrtss
vsqrtss
vbroadcastss
vdivss
vmovss
vmaxss
vfrczss
sets
fsts
fists
fdivs
fidivs
fldt
pfcmpgt
invept
xsaveopt
clflushopt
fstpt
xabort
pfrsqrt
vaesdeclast
vaesenclast
vptest
vaeskeygenassist
vmptrst
fcmovnu
vlddqu
vmaskmovdqu
vmovdqu
fcmovu
fdiv
fldenv
fnstenv
vpcmov
crc32w
vpermi2w
vpmovm2w
vpermt2w
leaw
vpshaw
vpsraw
cmovaw
sbbw
vphsubbw
vmpsadbw
vpsadbw
vphaddbw
vpunpckhbw
kunpckbw
vpunpcklbw
movsbw
vphaddubw
vphsubw
vpsubw
cmovbw
vpmovsxbw
vpmovzxbw
movzbw
adcw
fldcw
decw
incw
btcw
fnstcw
vphaddw
vpaddw
xaddw
rdseedw
shldw
kandw
rdrandw
vpblendw
shrdw
vpackssdw
vpackusdw
vpmovusdw
vpmovsdw
vpmovdw
cmovaew
cmovbew
cmovgew
cmovlew
cmovnew
cmovew
pi2fw
bsfw
pshufw
negw
cmpxchgw
vpavgw
cmovgw
prefetchw
vpshufhw
vpmulhw
pushw
pf2iw
rclw
vpshuflw
vpshlw
lcallw
vpsllw
vpmullw
rolw
vpsrlw
lslw
kshiftlw
imulw
cmovlw
vpblendmw
vptestnmw
vpcomw
vpermw
vptestmw
kandnw
vpsignw
cmovnow
cmovow
vpcmpw
ljmpw
cmovnpw
nopw
popw
cmovpw
vpcmpeqw
vpmovusqw
vpmovsqw
vpmovqw
larw
sarw
rcrw
verw
pmulhrw
shrw
korw
kxnorw
rorw
kxorw
bsrw
vpinsrw
btrw
kshiftrw
ltrw
strw
vpextrw
scasw
vpabsw
movabsw
vpmaddubsw
vphsubsw
vpsubsw
vphaddsw
vpaddsw
ldsw
lodsw
lesw
lfsw
lgsw
vpminsw
cmovnsw
cmpsw
vpmulhrsw
lssw
btsw
fnstsw
outsw
vpsubusw
vpaddusw
cmovsw
vpmaxsw
lgdtw
sgdtw
lidtw
sidtw
lldtw
sldtw
lretw
vpcmpgtw
popcntw
lzcntw
tzcntw
knotw
vprotw
vpbroadcastw
kortestw
vpmulhuw
vpcomuw
vpminuw
vpcmpuw
vphminposuw
vpmaxuw
vpsravw
idivw
vpsllvw
vpsrlvw
kmovw
vpmacsww
lmsww
smsww
vpmacssww
pfmax
vcvttpd2dqx
vcvtpd2dqx
vcvttpd2udqx
vcvtpd2udqx
vcvtpd2psx
vcvtqq2psx
vcvtuqq2psx
vcvttpd2dqy
vcvtpd2dqy
vcvttpd2udqy
vcvtpd2udqy
vcvtpd2psy
vcvtqq2psy
vcvtuqq2psy
jecxz
jcxz
jrcxz
fsub
%st(0), 
fadd
%st(0), 
fmul
%st(0), 
fsubr
%st(0), 
fdivr
%st(0), 
fdiv
%st(0), 
movabsb
%al, 
stosb
%al, 
outb
%al, 
movb
%al, 
rclb
%cl, 
shlb
%cl, 
rolb
%cl, 
sarb
%cl, 
rcrb
%cl, 
shrb
%cl, 
rorb
%cl, 
shldl
%cl, 
shrdl
%cl, 
rcll
%cl, 
shll
%cl, 
roll
%cl, 
sarl
%cl, 
rcrl
%cl, 
shrl
%cl, 
rorl
%cl, 
shldq
%cl, 
shrdq
%cl, 
rclq
%cl, 
shlq
%cl, 
rolq
%cl, 
sarq
%cl, 
rcrq
%cl, 
shrq
%cl, 
rorq
%cl, 
shldw
%cl, 
shrdw
%cl, 
rclw
%cl, 
shlw
%cl, 
rolw
%cl, 
sarw
%cl, 
rcrw
%cl, 
shrw
%cl, 
rorw
%cl, 
movabsw
%ax, 
stosw
%ax, 
outw
%ax, 
movw
%ax, 
movabsl
%eax, 
stosl
%eax, 
outl
%eax, 
movl
%eax, 
movabsq
%rax, 
stosq
%rax, 
movq
%rax, 
insb
%dx, 
insl
%dx, 
insw
%dx, 
vexp2pd
{sae}, 
vcvtps2pd
{sae}, 
vrcp28pd
{sae}, 
vrsqrt28pd
{sae}, 
vminpd
{sae}, 
vgetexppd
{sae}, 
vmaxpd
{sae}, 
vrcp28sd
{sae}, 
vrsqrt28sd
{sae}, 
vminsd
{sae}, 
vgetexpsd
{sae}, 
vmaxsd
{sae}, 
vcvttpd2dq
{sae}, 
vcvttps2dq
{sae}, 
vcvttpd2udq
{sae}, 
vcvttps2udq
{sae}, 
vcvttpd2qq
{sae}, 
vcvttps2qq
{sae}, 
vcvttpd2uqq
{sae}, 
vcvttps2uqq
{sae}, 
vexp2ps
{sae}, 
vrcp28ps
{sae}, 
vrsqrt28ps
{sae}, 
vminps
{sae}, 
vgetexpps
{sae}, 
vmaxps
{sae}, 
vrcp28ss
{sae}, 
vrsqrt28ss
{sae}, 
vminss
{sae}, 
vgetexpss
{sae}, 
vmaxss
{sae}, 
#VAARG_64 
#eh_return, addr: 
#SEH_SaveXMM 
#VASTART_SAVE_XMM_REGS 
#SEH_StackAlloc 
#SEH_PushFrame 
#SEH_SetFrame 
#SEH_SaveReg 
#SEH_PushReg 
#CMOV__RFP80 PSEUDO!
#CMOV__V32I1 PSEUDO!
#CMOV__V64I1 PSEUDO!
#CMOV__V16I1 PSEUDO!
#CMOV__V8I1 PSEUDO!
#CMOV__V4F32 PSEUDO!
#CMOV__V16F32 PSEUDO!
#CMOV__V8F32 PSEUDO!
#CMOV__RFP32 PSEUDO!
#CMOV__FR32 PSEUDO!
#CMOV__GR32 PSEUDO!
#BINOP RELEASE_ADD64mi32 PSEUDO!
#BINOP RELEASE_AND64mi32 PSEUDO!
#BINOP RELEASE_XOR64mi32 PSEUDO!
#BINOP RELEASE_OR64mi32 PSEUDO!
#RELEASE_MOV64mi32 PSEUDO!
#CMOV__V2F64 PSEUDO!
#CMOV__V4F64 PSEUDO!
#CMOV__V8F64 PSEUDO!
#CMOV__V2I64 PSEUDO!
#CMOV__V4I64 PSEUDO!
#CMOV__V8I64 PSEUDO!
#CMOV__RFP64 PSEUDO!
#CMOV__FR64 PSEUDO!
#CMOV__GR16 PSEUDO!
#CMOV__GR8 PSEUDO!
#BINOP RELEASE_ADD32mi PSEUDO!
#BINOP RELEASE_AND32mi PSEUDO!
#BINOP RELEASE_XOR32mi PSEUDO!
#BINOP RELEASE_OR32mi PSEUDO!
#RELEASE_MOV32mi PSEUDO!
#RELEASE_MOV16mi PSEUDO!
#BINOP RELEASE_ADD8mi PSEUDO!
#BINOP RELEASE_AND8mi PSEUDO!
#BINOP RELEASE_XOR8mi PSEUDO!
#BINOP RELEASE_OR8mi PSEUDO!
#RELEASE_MOV8mi PSEUDO!
#UNOP RELEASE_DEC32m PSEUDO!
#UNOP RELEASE_INC32m PSEUDO!
#UNOP RELEASE_DEC64m PSEUDO!
#UNOP RELEASE_INC64m PSEUDO!
#UNOP RELEASE_DEC16m PSEUDO!
#UNOP RELEASE_INC16m PSEUDO!
#UNOP RELEASE_DEC8m PSEUDO!
#UNOP RELEASE_INC8m PSEUDO!
#ACQUIRE_MOV32rm PSEUDO!
#ACQUIRE_MOV64rm PSEUDO!
#ACQUIRE_MOV16rm PSEUDO!
#ACQUIRE_MOV8rm PSEUDO!
#BINOP RELEASE_FADD32mr PSEUDO!
#BINOP RELEASE_ADD32mr PSEUDO!
#BINOP RELEASE_AND32mr PSEUDO!
#BINOP RELEASE_XOR32mr PSEUDO!
#BINOP RELEASE_OR32mr PSEUDO!
#RELEASE_MOV32mr PSEUDO!
#BINOP RELEASE_FADD64mr PSEUDO!
#BINOP RELEASE_ADD64mr PSEUDO!
#BINOP RELEASE_AND64mr PSEUDO!
#BINOP RELEASE_XOR64mr PSEUDO!
#BINOP RELEASE_OR64mr PSEUDO!
#RELEASE_MOV64mr PSEUDO!
#RELEASE_MOV16mr PSEUDO!
#BINOP RELEASE_ADD8mr PSEUDO!
#BINOP RELEASE_AND8mr PSEUDO!
#BINOP RELEASE_XOR8mr PSEUDO!
#BINOP RELEASE_OR8mr PSEUDO!
#RELEASE_MOV8mr PSEUDO!
lcalll
ljmpl
lcallq
rex64 jmpq
ljmpq
lcallw
ljmpw
xsha1
fld1
fprem1
f2xm1
fyl2xp1
#EH_SJLJ_LONGJMP32
#EH_SJLJ_SETJMP32
# TLSCall_32
# TLS_addr32
# TLS_base_addr32
fldlg2
fldln2
int3
#EH_SJLJ_LONGJMP64
#EH_SJLJ_SETJMP64
# TLSCall_64
# TLS_addr64
# TLS_base_addr64
rex64
data16
xsha256
LIFETIME_END
BUNDLE
DBG_VALUE
# XBEGIN
#ADJCALLSTACKDOWN
#ADJCALLSTACKUP
#MEMBARRIER
LIFETIME_START
ud2b
xcryptecb
xcryptcfb
xcryptofb
rep;stosb
rep;movsb
xlatb
clac
stac
xcryptcbc
getsec
rdpmc
vmfunc
rdtsc
cpuid
xend
cltd
cwtd
wbinvd
fldl2e
lfence
mfence
sfence
fscale
vmresume
repne
xacquire
xstore
xrelease
pause
#SEH_Epilogue
#SEH_EndPrologue
leave
vmxoff
lahf
sahf
vmlaunch
clgi
stgi
fldpi
# win32 fptoui
lock
%dx, %al
pushal
popal
pushfl
popfl
vmmcall
vmcall
syscall
vzeroall
rep;stosl
rep;movsl
iretl
lretl
sysretl
sysexitl
cwtl
montmul
fxam
fprem
vpcom
fpatan
fptan
fsin
# dynamic stack allocation
into
cqto
rdtscp
vpcmp
vcmp
fnop
fcompp
fucompp
fdecstp
fincstp
pushfq
popfq
rep;stosq
rep;movsq
iretq
lretq
sysretq
sysexitq
cltq
vzeroupper
sysenter
monitor
rdmsr
wrmsr
xcryptctr
fabs
pushl
pushw
pushl
popl
pushw
popw
pushl
popl
pushw
popw
pushl
popl
pushq
popq
pushw
popw
pushl
popl
pushq
popq
pushw
popw
swapgs
fchs
# variable sized alloca for segmented stacks
encls
femms
fcos
fsincos
pushl
popl
pushw
popw
clts
fldl2t
fxtract
mwait
pcommit
fninit
frndint
fsqrt
xtest
ftst
enclu
xgetbv
xsetbv
pushaw
popaw
pushfw
popfw
rep;stosw
rep;movsw
cbtw
iretw
lretw
fyl2x
fnstsw
%dx, %ax
vmload
%eax
vmsave
%eax
vmrun
%eax
skinit
%eax
invlpga
%ecx, %eax
%dx, %eax
vmload
%rax
vmsave
%rax
vmrun
%rax
invlpga
%ecx, %rax
outb
%al, %dx
outw
%ax, %dx
outl
%eax, %dx
fnclex
fldz
st(0)
st(1)
st(2)
st(3)
st(4)
st(5)
st(6)
st(7)
xmm10
ymm10
zmm10
cr10
dr10
xmm20
ymm20
zmm20
xmm30
ymm30
zmm30
bnd0
xmm0
ymm0
zmm0
xmm11
ymm11
zmm11
cr11
dr11
xmm21
ymm21
zmm21
xmm31
ymm31
zmm31
bnd1
xmm1
ymm1
zmm1
xmm12
ymm12
zmm12
cr12
dr12
xmm22
ymm22
zmm22
bnd2
xmm2
ymm2
zmm2
xmm13
ymm13
zmm13
cr13
dr13
xmm23
ymm23
zmm23
bnd3
xmm3
ymm3
zmm3
xmm14
ymm14
zmm14
cr14
dr14
xmm24
ymm24
zmm24
xmm4
ymm4
zmm4
xmm15
ymm15
zmm15
cr15
dr15
xmm25
ymm25
zmm25
xmm5
ymm5
zmm5
xmm16
ymm16
zmm16
xmm26
ymm26
zmm26
xmm6
ymm6
zmm6
xmm17
ymm17
zmm17
xmm27
ymm27
zmm27
xmm7
ymm7
zmm7
xmm18
ymm18
zmm18
xmm28
ymm28
zmm28
xmm8
ymm8
zmm8
xmm19
ymm19
zmm19
xmm29
ymm29
zmm29
xmm9
ymm9
zmm9
r10b
r11b
r12b
r13b
r14b
r15b
r10d
r11d
r12d
r13d
r14d
r15d
flags
r10w
r11w
r12w
r13w
r14w
r15w
fpsw
N4llvm17X86ATTInstPrinterE
>JBP
;T@#;T@#;TP
;T@=;T@
;T@G;T@G;TP
%U@#%U@#%UP
%U@=%U@
%U@G%U@G%UP
hV@#hV@#hVP
hV@=hV@
hV@GhV@GhVP
[T@#[T@
[T@=[T@=[TP
[T@G[T@
-V@#-V@#-VP
-V@#-V@
-V@=-V@=-VP
>U@#>U@
>U@=>U@=>UP
>U@G>U@
/T@#/T@#/TP
/T@=/T@
/T@G/T@G/TP
[V@#[V@#[VP
[V@=[V@
[V@G[V@G[VP
OT@#OT@
OT@=OT@=OTP
OT@GOT@
!V@#!V@#!VP
!V@#!V@
!V@=!V@=!VP
1U@#1U@
1U@=1U@=1UP
1U@G1U@
tV@#tV@#tVP
tV@#tV@
tV@=tV@=tVP
H'JP
L.[P
L5tp
L+\P
+\PK+\PK+\
 \@# \@
 \@= \@= \P
 \@G \@
"~IP
<~IP
F~IP
>~@P
D~@P
>*AP
D*AP
>[BP
D[BP
>uAP
DuAP
"aKP
<aKP
FaKP
4b@?4bP
4b@E4bP
yG`OyG
yG`QyG
C!DP
C!DP
C)EP
C)EP
C|WP
C|WP
C|WP
C|WP
C|WP
HBVP
BVPKBVPKBV
_U@?_UP
UO@?UOP
jU@?jUP
`O@?`OP
RI@#RI@%RIP
RI@=RI@
RI@GRI@%RIP
aZ@#aZ@
aZ@=aZ@'aZP
aZ@GaZ@
hI@GhI@GhIP
wZ@GwZ@
@J@%@JP
@J@%@JP
G[@'G[P
UJ@%UJP
UJ@%UJP
\[@'\[P
\I@#\I@%\IP
\I@=\I@
\I@G\I@%\IP
kZ@#kZ@
kZ@=kZ@'kZP
kZ@GkZ@
rI@GrI@GrIP
OK@#OK@%OKP
OK@=OK@
OK@GOK@%OKP
bndmk 
bndcl 
bndcn 
bndcu 
bndmov 
bndldx 
bndstx 
prefetcht0
sha1msg1
sha256msg1
prefetcht1
pfrcpit1
pfrsqit1
vmovdqa32
crc32
vmovdqu32
sha1msg2
sha256msg2
sha256rnds2
prefetcht2
pfrcpit2
vshuff64x2
vinsertf64x2
vbroadcastf64x2
vshufi64x2
vinserti64x2
vbroadcasti64x2
vmovdqa64
xsavec64
fxsave64
fxrstor64
xsaves64
xrstors64
xsaveopt64
vmovdqu64
sha1rnds4
vshuff32x4
vextractf32x4
vinsertf32x4
vbroadcastf32x4
vshufi32x4
vextracti32x4
vinserti32x4
vbroadcasti32x4
vextractf64x4
vinsertf64x4
vbroadcastf64x4
vextracti64x4
vinserti64x4
vbroadcasti64x4
vmovdqu16
vperm2f128
vextractf128
vinsertf128
vbroadcastf128
vperm2i128
vextracti128
vinserti128
vbroadcasti128
vmovdqu8
vinsertf32x8
vbroadcastf32x8
vinserti32x8
vbroadcasti32x8
vmovntdqa
vmovdqa
seta
prefetchnta
cmova
vpmovm2b
cmpxchg16b
cmpxchg8b
vpshab
vpsubb
vpaddb
kandb
vpmovusdb
vpmovsdb
vpmovdb
vpshufb
vpavgb
vpmovmskb
vpshlb
kshiftlb
vpblendmb
vptestnmb
vpcomb
vptestmb
kandnb
vpsignb
vpcmpb
vpcmpeqb
vpmovusqb
vpmovsqb
vpmovqb
korb
kxnorb
kxorb
vpinsrb
kshiftrb
vpextrb
vpabsb
vpsubsb
vpaddsb
vpminsb
stosb
cmpsb
vpsubusb
vpaddusb
pavgusb
movsb
vpmaxsb
setb
vpcmpgtb
knotb
vprotb
vpbroadcastb
kortestb
vpcomub
vpminub
vpcmpub
pfsub
fisub
vpmaxub
vpblendvb
cmovb
kmovb
clwb
vpacksswb
vpackuswb
vpmovuswb
vpmovswb
vpmovwb
pfacc
pfnacc
pfpnacc
vaesdec
xsavec
blcic
blsic
t1mskc
vaesimc
vaesenc
vpermi2d
vpmovm2d
vpermt2d
vpbroadcastmw2d
vmread
vpshad
vpsrad
vphaddbd
vphaddubd
vphsubd
vpsubd
vpmovsxbd
vpmovzxbd
pfadd
fiadd
xadd
vphaddd
vpaddd
kandd
vpandd
vpexpandd
vpblendd
vpgatherdd
vpscatterdd
vpmacsdd
vpmacssdd
rdseed
pi2fd
vpshufd
pf2id
invpcid
invvpid
fbld
vpshld
fild
vpslld
vpmulld
vprold
vpsrld
vmptrld
kshiftld
vpblendmd
vptestnmd
vpcomd
vpermd
vptestmd
vpand
rdrand
kandnd
vpandnd
valignd
vpsignd
bound
vfmaddsub231pd
vfmsub231pd
vfnmsub231pd
vfmsubadd231pd
vfmadd231pd
vfnmadd231pd
vfmaddsub132pd
vfmsub132pd
vfnmsub132pd
vfmsubadd132pd
vfmadd132pd
vfnmadd132pd
vpermi2pd
cvtpi2pd
vpermil2pd
vexp2pd
vcvtdq2pd
vcvtudq2pd
vcvtqq2pd
vcvtuqq2pd
vcvtps2pd
vpermt2pd
vfmaddsub213pd
vfmsub213pd
vfnmsub213pd
vfmsubadd213pd
vfmadd213pd
vfnmadd213pd
vrcp14pd
vrsqrt14pd
vrcp28pd
vrsqrt28pd
vmovapd
pswapd
vfmaddsubpd
vaddsubpd
vhsubpd
vfmsubpd
vfnmsubpd
vsubpd
vfmsubaddpd
vhaddpd
vfmaddpd
vfnmaddpd
vaddpd
vexpandpd
vandpd
vblendpd
vroundpd
vgatherdpd
vscatterdpd
vreducepd
vrangepd
vrndscalepd
vscalefpd
vshufpd
vunpckhpd
vmovhpd
vmovmskpd
vpermilpd
vunpcklpd
vmulpd
vmovlpd
vpcmpd
vblendmpd
vfixupimmpd
vpermpd
vandnpd
vminpd
vdppd
vcmppd
vgetexppd
vgatherqpd
vscatterqpd
vorpd
vxorpd
vcompresspd
vmovntpd
vsqrtpd
vtestpd
vmovupd
vblendvpd
vdivpd
vmaskmovpd
vmaxpd
vfrczpd
vpcmpeqd
vpgatherqd
vpscatterqd
vpmovusqd
vpmovsqd
vpmovqd
shrd
kord
kxnord
vpord
vprord
kxord
vpxord
vpinsrd
kshiftrd
vpextrd
vfmsub231sd
vfnmsub231sd
vfmadd231sd
vfnmadd231sd
vfmsub132sd
vfnmsub132sd
vfmadd132sd
vfnmadd132sd
vcvtsi2sd
vcvtusi2sd
vcvtss2sd
vfmsub213sd
vfnmsub213sd
vfmadd213sd
vfnmadd213sd
vrcp14sd
vrsqrt14sd
vrcp28sd
vrsqrt28sd
vpabsd
vfmsubsd
vfnmsubsd
vsubsd
vfmaddsd
vfnmaddsd
vaddsd
vroundsd
vreducesd
vrangesd
vrndscalesd
vscalefsd
vucomisd
vcomisd
vmulsd
vfixupimmsd
vpminsd
vminsd
stosd
vcmpsd
vgetexpsd
vpcompressd
movntsd
vsqrtsd
vbroadcastsd
vdivsd
vmovsd
vpmaxsd
vmaxsd
vfrczsd
vpconflictd
vpcmpgtd
vplzcntd
knotd
vprotd
vpbroadcastd
kortestd
vpcomud
vpminud
vpcmpud
vpmaxud
vpsravd
vpsllvd
vprolvd
vpsrlvd
vpmaskmovd
vmovd
vprorvd
vphsubwd
vphaddwd
vpmaddwd
vpunpckhwd
vpunpcklwd
vpmacswd
vpmadcswd
vpmacsswd
vpmadcsswd
vphadduwd
vpmovsxwd
vpmovzxwd
movsxd
setae
cmovae
setbe
cmovbe
ffree
pfcmpge
setge
cmovge
setle
cmovle
loopne
setne
cmovne
loope
rdfsbase
wrfsbase
rdgsbase
wrgsbase
sete
vmwrite
sha1nexte
fnsave
fxsave
cmove
retf
cmpxchg
invlpg
setg
cmovg
prefetch
fxch
vcvtps2ph
vpmacsdqh
vpmacssdqh
clflush
push
blci
bzhi
fcomi
fucomi
cvttpd2pi
cvtpd2pi
cvttps2pi
cvtps2pi
fcompi
fucompi
vpcmpestri
vpcmpistri
vcvttsd2si
vcvtsd2si
vcvttss2si
vcvtss2si
blsi
vcvttsd2usi
vcvtsd2usi
vcvttss2usi
vcvtss2usi
movnti
blcmsk
blsmsk
tzmsk
lcall
blcfill
blsfill
arpl
vpmacsdql
vpmacssdql
setl
pfmul
fimul
cmovl
vpmovb2m
vpmovd2m
vpmovq2m
vpmovw2m
fcom
ficom
fucom
vpperm
vpcmpestrm
vpcmpistrm
vpandn
xbegin
pfmin
vmxon
setno
cmovno
seto
cmovo
bswap
fsubp
pfrcp
faddp
pdep
fmulp
rex64 jmp
ljmp
fcomp
ficomp
fucomp
setnp
cmovnp
loop
fsubrp
fdivrp
setp
fbstp
fstp
fistp
fisttp
vmovddup
vmovshdup
vmovsldup
#EH_SjLj_Setup
fdivp
cmovp
vpbroadcastmb2q
vpermi2q
vpmovm2q
movdq2q
vpermt2q
vpshaq
vpsraq
vphaddbq
vphaddubq
vpsubq
vpmovsxbq
vpmovzxbq
vcvttpd2dq
vcvtpd2dq
movq2dq
vcvttps2dq
vcvtps2dq
vphsubdq
vpaddq
vphadddq
vpunpckhdq
vpunpckldq
vpslldq
vpsrldq
vpmuldq
kandq
vpandq
vpexpandq
vpunpckhqdq
vpunpcklqdq
vpclmulqdq
vpgatherdq
vpscatterdq
vmovntdq
vcvttpd2udq
vcvtpd2udq
vcvttps2udq
vcvtps2udq
vphaddudq
vpmuludq
vpmovsxdq
vpmovzxdq
pfcmpeq
retfq
vpshlq
vpsllq
vpmullq
vprolq
vpsrlq
kshiftlq
vpblendmq
vptestnmq
vpcomq
vpermq
vptestmq
kandnq
vpandnq
valignq
vpcmpq
vcvttpd2qq
vcvtpd2qq
vcvttps2qq
vcvtps2qq
vpcmpeqq
vpgatherqq
vpscatterqq
vcvttpd2uqq
vcvtpd2uqq
vcvttps2uqq
vcvtps2uqq
korq
kxnorq
vporq
vprorq
kxorq
vpxorq
vpinsrq
kshiftrq
vpextrq
vpabsq
vpminsq
stosq
cmpsq
vpcompressq
movsq
vpmaxsq
vpconflictq
vpcmpgtq
vplzcntq
movntq
knotq
vprotq
insertq
vpbroadcastq
kortestq
vpcomuq
vpminuq
vpcmpuq
vpmaxuq
vpsravq
vpsllvq
vprolvq
vpsrlvq
vpmaskmovq
vmovq
vprorvq
vphaddwq
vphadduwq
vpmovsxwq
vpmovzxwq
vmclear
pfsubr
fisubr
enter
vpalignr
vpor
frstor
fxrstor
vpxor
verr
vldmxcsr
vstmxcsr
blsr
bextr
fdivr
fidivr
movabs
blcs
xsaves
setns
cmovns
vfmaddsub231ps
vfmsub231ps
vfnmsub231ps
vfmsubadd231ps
vfmadd231ps
vfnmadd231ps
vfmaddsub132ps
vfmsub132ps
vfnmsub132ps
vfmsubadd132ps
vfmadd132ps
vfnmadd132ps
vcvtpd2ps
vcvtph2ps
vpermi2ps
cvtpi2ps
vpermil2ps
vexp2ps
vcvtdq2ps
vcvtudq2ps
vcvtqq2ps
vcvtuqq2ps
vpermt2ps
vfmaddsub213ps
vfmsub213ps
vfnmsub213ps
vfmsubadd213ps
vfmadd213ps
vfnmadd213ps
vrcp14ps
vrsqrt14ps
vrcp28ps
vrsqrt28ps
vmovaps
vfmaddsubps
vaddsubps
vhsubps
vfmsubps
vfnmsubps
vsubps
vfmsubaddps
vhaddps
vfmaddps
vfnmaddps
vaddps
vexpandps
vandps
vblendps
vroundps
vgatherdps
vscatterdps
vreduceps
vrangeps
vrndscaleps
vscalefps
vshufps
vunpckhps
vmovlhps
vmovhps
vmovmskps
vmovhlps
vpermilps
vunpcklps
vmulps
vmovlps
vblendmps
vfixupimmps
vpermps
vandnps
vminps
vrcpps
vdpps
vcmpps
vgetexpps
vgatherqps
vscatterqps
vorps
vxorps
vcompressps
vextractps
vmovntps
vinsertps
vrsqrtps
vsqrtps
vtestps
vmovups
vblendvps
vdivps
vmaskmovps
vmaxps
vfrczps
xrstors
vfmsub231ss
vfnmsub231ss
vfmadd231ss
vfnmadd231ss
vfmsub132ss
vfnmsub132ss
vfmadd132ss
vfnmadd132ss
vcvtsd2ss
vcvtsi2ss
vcvtusi2ss
vfmsub213ss
vfnmsub213ss
vfmadd213ss
vfnmadd213ss
vrcp14ss
vrsqrt14ss
vrcp28ss
vrsqrt28ss
vfmsubss
vfnmsubss
vsubss
vfmaddss
vfnmaddss
vaddss
vroundss
vreducess
vrangess
vrndscaless
vscalefss
vucomiss
vcomiss
vmulss
vfixupimmss
vminss
vrcpss
vcmpss
vgetexpss
movntss
vrsqrtss
vsqrtss
vbroadcastss
vdivss
vmovss
vmaxss
vfrczss
sets
cmovs
lgdt
sgdt
lidt
sidt
lldt
sldt
pfcmpgt
popcnt
lzcnt
tzcnt
invept
xsaveopt
clflushopt
xabort
pfrsqrt
vaesdeclast
vaesenclast
vptest
fist
vaeskeygenassist
vmptrst
pext
vlddqu
vmaskmovdqu
vmovdqu
fdiv
fidiv
fldenv
fnstenv
vpcmov
vpermi2w
vpmovm2w
vpermt2w
vpshaw
vpsraw
vphsubbw
vmpsadbw
vpsadbw
vphaddbw
vpunpckhbw
kunpckbw
vpunpcklbw
vphaddubw
vphsubw
vpsubw
vpmovsxbw
vpmovzxbw
fldcw
fnstcw
vphaddw
vpaddw
kandw
vpblendw
vpackssdw
vpackusdw
vpmovusdw
vpmovsdw
vpmovdw
pi2fw
pshufw
vpavgw
prefetchw
vpshufhw
vpmulhw
pf2iw
vpshuflw
vpshlw
vpsllw
vpmullw
vpsrlw
kshiftlw
vpblendmw
vptestnmw
vpcomw
vpermw
vptestmw
kandnw
vpsignw
vpcmpw
vpcmpeqw
vpmovusqw
vpmovsqw
vpmovqw
verw
pmulhrw
korw
kxnorw
kxorw
vpinsrw
kshiftrw
vpextrw
vpabsw
vpmaddubsw
vphsubsw
vpsubsw
vphaddsw
vpaddsw
lmsw
smsw
vpminsw
stosw
cmpsw
vpmulhrsw
fnstsw
vpsubusw
vpaddusw
movsw
vpmaxsw
vpcmpgtw
knotw
vprotw
vpbroadcastw
kortestw
vpmulhuw
vpcomuw
vpminuw
vpcmpuw
vphminposuw
vpmaxuw
vpsravw
vpsllvw
vpsrlvw
kmovw
vpmacsww
vpmacssww
pfmax
adcx
shlx
mulx
adox
vcvttpd2dqx
vcvtpd2dqx
sarx
shrx
rorx
vcvtpd2psx
movsx
movzx
jecxz
jcxz
jrcxz
fcmovnb
st(0), 
fcmovb
st(0), 
fcmovnbe
st(0), 
fcmovbe
st(0), 
fcmovne
st(0), 
fcmove
st(0), 
fcmovnu
st(0), 
fcmovu
st(0), 
al, 
scasb
al, 
lodsb
al, 
al, 
al, 
al, 
al, 
al, 
al, 
al, 
movabs
al, 
test
al, 
al, 
ax, 
ax, 
ax, 
ax, 
ax, 
xchg
ax, 
ax, 
ax, 
ax, 
movabs
ax, 
test
ax, 
ax, 
scasw
ax, 
lodsw
ax, 
eax, 
eax, 
eax, 
eax, 
eax, 
scasd
eax, 
lodsd
eax, 
xchg
eax, 
eax, 
eax, 
eax, 
movabs
eax, 
test
eax, 
eax, 
rax, 
rax, 
rax, 
rax, 
rax, 
xchg
rax, 
rax, 
scasq
rax, 
lodsq
rax, 
rax, 
movabs
rax, 
test
rax, 
rax, 
outsb
dx, 
outsd
dx, 
outsw
dx, 
#VAARG_64 
#eh_return, addr: 
#SEH_SaveXMM 
#VASTART_SAVE_XMM_REGS 
#SEH_StackAlloc 
#SEH_PushFrame 
#SEH_SetFrame 
#SEH_SaveReg 
#SEH_PushReg 
#CMOV__RFP80 PSEUDO!
#CMOV__V32I1 PSEUDO!
#CMOV__V64I1 PSEUDO!
#CMOV__V16I1 PSEUDO!
#CMOV__V8I1 PSEUDO!
#CMOV__V4F32 PSEUDO!
#CMOV__V16F32 PSEUDO!
#CMOV__V8F32 PSEUDO!
#CMOV__RFP32 PSEUDO!
#CMOV__FR32 PSEUDO!
#CMOV__GR32 PSEUDO!
#BINOP RELEASE_ADD64mi32 PSEUDO!
#BINOP RELEASE_AND64mi32 PSEUDO!
#BINOP RELEASE_XOR64mi32 PSEUDO!
#BINOP RELEASE_OR64mi32 PSEUDO!
#RELEASE_MOV64mi32 PSEUDO!
#CMOV__V2F64 PSEUDO!
#CMOV__V4F64 PSEUDO!
#CMOV__V8F64 PSEUDO!
#CMOV__V2I64 PSEUDO!
#CMOV__V4I64 PSEUDO!
#CMOV__V8I64 PSEUDO!
#CMOV__RFP64 PSEUDO!
#CMOV__FR64 PSEUDO!
#CMOV__GR16 PSEUDO!
#CMOV__GR8 PSEUDO!
#BINOP RELEASE_ADD32mi PSEUDO!
#BINOP RELEASE_AND32mi PSEUDO!
#BINOP RELEASE_XOR32mi PSEUDO!
#BINOP RELEASE_OR32mi PSEUDO!
#RELEASE_MOV32mi PSEUDO!
#RELEASE_MOV16mi PSEUDO!
#BINOP RELEASE_ADD8mi PSEUDO!
#BINOP RELEASE_AND8mi PSEUDO!
#BINOP RELEASE_XOR8mi PSEUDO!
#BINOP RELEASE_OR8mi PSEUDO!
#RELEASE_MOV8mi PSEUDO!
#UNOP RELEASE_DEC32m PSEUDO!
#UNOP RELEASE_INC32m PSEUDO!
#UNOP RELEASE_DEC64m PSEUDO!
#UNOP RELEASE_INC64m PSEUDO!
#UNOP RELEASE_DEC16m PSEUDO!
#UNOP RELEASE_INC16m PSEUDO!
#UNOP RELEASE_DEC8m PSEUDO!
#UNOP RELEASE_INC8m PSEUDO!
#ACQUIRE_MOV32rm PSEUDO!
#ACQUIRE_MOV64rm PSEUDO!
#ACQUIRE_MOV16rm PSEUDO!
#ACQUIRE_MOV8rm PSEUDO!
#BINOP RELEASE_FADD32mr PSEUDO!
#BINOP RELEASE_ADD32mr PSEUDO!
#BINOP RELEASE_AND32mr PSEUDO!
#BINOP RELEASE_XOR32mr PSEUDO!
#BINOP RELEASE_OR32mr PSEUDO!
#RELEASE_MOV32mr PSEUDO!
#BINOP RELEASE_FADD64mr PSEUDO!
#BINOP RELEASE_ADD64mr PSEUDO!
#BINOP RELEASE_AND64mr PSEUDO!
#BINOP RELEASE_XOR64mr PSEUDO!
#BINOP RELEASE_OR64mr PSEUDO!
#RELEASE_MOV64mr PSEUDO!
#RELEASE_MOV16mr PSEUDO!
#BINOP RELEASE_ADD8mr PSEUDO!
#BINOP RELEASE_AND8mr PSEUDO!
#BINOP RELEASE_XOR8mr PSEUDO!
#BINOP RELEASE_OR8mr PSEUDO!
#RELEASE_MOV8mr PSEUDO!
xsha1
fld1
fprem1
f2xm1
fyl2xp1
#EH_SJLJ_LONGJMP32
#EH_SJLJ_SETJMP32
# TLSCall_32
# TLS_addr32
# TLS_base_addr32
fldlg2
fldln2
int3
#EH_SJLJ_LONGJMP64
#EH_SJLJ_SETJMP64
# TLSCall_64
# TLS_addr64
# TLS_base_addr64
rex64
data16
xsha256
LIFETIME_END
BUNDLE
DBG_VALUE
# XBEGIN
#ADJCALLSTACKDOWN
#ADJCALLSTACKUP
#MEMBARRIER
LIFETIME_START
ud2b
xcryptecb
xcryptcfb
xcryptofb
rep stosb
rep movsb
xlatb
clac
stac
xcryptcbc
getsec
rdpmc
vmfunc
rdtsc
pushfd
popfd
cpuid
xend
rep stosd
rep movsd
iretd
wbinvd
fldl2e
lfence
mfence
sfence
cwde
fscale
vmresume
repne
cdqe
xacquire
xstore
xrelease
pause
#SEH_Epilogue
#SEH_EndPrologue
leave
vmxoff
lahf
sahf
pushf
popf
retf
vmlaunch
clgi
stgi
fldpi
# win32 fptoui
lock
dx, al
pushal
popal
vmmcall
vmcall
syscall
vzeroall
montmul
fxam
fprem
vpcom
fpatan
fptan
fsin
# dynamic stack allocation
into
rdtscp
vpcmp
vcmp
fnop
fcompp
fucompp
fdecstp
fincstp
pushfq
popfq
retfq
rep stosq
rep movsq
iretq
vzeroupper
sysenter
monitor
rdmsr
wrmsr
xcryptctr
fabs
push
push
push
push
push
swapgs
fchs
# variable sized alloca for segmented stacks
encls
femms
fcos
fsincos
push
clts
fldl2t
fxtract
iret
sysret
mwait
pcommit
fninit
sysexit
frndint
fsqrt
xtest
ftst
enclu
xgetbv
xsetbv
pushaw
popaw
rep stosw
rep movsw
fyl2x
fnstsw
dx, ax
vmload
vmsave
vmrun
skinit
dx, eax
vmload
vmsave
vmrun
invlpga
eax, ecx
invlpga
rax, ecx
al, dx
ax, dx
eax, dx
fnclex
fldz
vgatherpf0dpd
vscatterpf0dpd
vgatherpf1dpd
vscatterpf1dpd
vgatherpf0qpd
vscatterpf0qpd
vgatherpf1qpd
vscatterpf1qpd
vgatherpf0dps
vscatterpf0dps
vgatherpf1dps
vscatterpf1dps
vgatherpf0qps
vscatterpf0qps
vgatherpf1qps
vscatterpf1qps
st(0)
st(1)
st(2)
st(3)
st(4)
st(5)
st(6)
st(7)
xmm10
ymm10
zmm10
cr10
dr10
xmm20
ymm20
zmm20
xmm30
ymm30
zmm30
bnd0
xmm0
ymm0
zmm0
xmm11
ymm11
zmm11
cr11
dr11
xmm21
ymm21
zmm21
xmm31
ymm31
zmm31
bnd1
xmm1
ymm1
zmm1
xmm12
ymm12
zmm12
cr12
dr12
xmm22
ymm22
zmm22
bnd2
xmm2
ymm2
zmm2
xmm13
ymm13
zmm13
cr13
dr13
xmm23
ymm23
zmm23
bnd3
xmm3
ymm3
zmm3
xmm14
ymm14
zmm14
cr14
dr14
xmm24
ymm24
zmm24
xmm4
ymm4
zmm4
xmm15
ymm15
zmm15
cr15
dr15
xmm25
ymm25
zmm25
xmm5
ymm5
zmm5
xmm16
ymm16
zmm16
xmm26
ymm26
zmm26
xmm6
ymm6
zmm6
xmm17
ymm17
zmm17
xmm27
ymm27
zmm27
xmm7
ymm7
zmm7
xmm18
ymm18
zmm18
xmm28
ymm28
zmm28
xmm8
ymm8
zmm8
xmm19
ymm19
zmm19
xmm29
ymm29
zmm29
xmm9
ymm9
zmm9
r10b
r11b
r12b
r13b
r14b
r15b
r10d
r11d
r12d
r13d
r14d
r15d
flags
r10w
r11w
r12w
r13w
r14w
r15w
fpsw
N4llvm19X86IntelInstPrinterE
N12_GLOBAL__N_122DarwinX86_32AsmBackendE
N12_GLOBAL__N_119DarwinX86AsmBackendE
N12_GLOBAL__N_113X86AsmBackendE
N12_GLOBAL__N_120WindowsX86AsmBackendE
N12_GLOBAL__N_119ELFX86_32AsmBackendE
N12_GLOBAL__N_116ELFX86AsmBackendE
N12_GLOBAL__N_122DarwinX86_64AsmBackendE
N12_GLOBAL__N_120ELFX86_X32AsmBackendE
N12_GLOBAL__N_119ELFX86_64AsmBackendE
XMM10
YMM10
ZMM10
CR10
DR10
XMM20
YMM20
ZMM20
XMM30
YMM30
ZMM30
BND0
XMM0
YMM0
ZMM0
XMM11
YMM11
ZMM11
CR11
DR11
XMM21
YMM21
ZMM21
XMM31
YMM31
ZMM31
BND1
XMM1
YMM1
ZMM1
XMM12
YMM12
ZMM12
CR12
DR12
XMM22
YMM22
ZMM22
BND2
XMM2
YMM2
ZMM2
XMM13
YMM13
ZMM13
CR13
DR13
XMM23
YMM23
ZMM23
BND3
XMM3
YMM3
ZMM3
XMM14
YMM14
ZMM14
CR14
DR14
XMM24
YMM24
ZMM24
XMM4
YMM4
ZMM4
XMM15
YMM15
ZMM15
CR15
DR15
XMM25
YMM25
ZMM25
XMM5
YMM5
ZMM5
XMM16
YMM16
ZMM16
XMM26
YMM26
ZMM26
XMM6
YMM6
ZMM6
XMM17
YMM17
ZMM17
XMM27
YMM27
ZMM27
XMM7
YMM7
ZMM7
XMM18
YMM18
ZMM18
XMM28
YMM28
ZMM28
XMM8
YMM8
ZMM8
XMM19
YMM19
ZMM19
XMM29
YMM29
ZMM29
XMM9
YMM9
ZMM9
R10B
R11B
R12B
R13B
R14B
R15B
R10D
R11D
R12D
R13D
R14D
R15D
EFLAGS
R10W
R11W
R12W
R13W
R14W
R15W
FPSW
RFP80
VR512
VK32
RFP32
VR512_with_sub_xmm_in_FR32
GR32
VK64
RFP64
FR64
GR64
VR64
GR64_TCW64
VK16
GR16
VR256
VR128
GR64_with_sub_32bit_in_GR32_NOAX_and_GR32_TC
GR64_with_sub_32bit_in_GR32_TC
GR64_NOSP_and_GR64_TC
GR64_NOREX_NOSP_and_GR64_TC
GR64_NOREX_and_GR64_TC
GR64_with_sub_32bit_in_GR32_AD
GR32_ABCD
GR64_ABCD
GR16_ABCD
DEBUG_REG
CONTROL_REG
SEGMENT_REG
GR8_ABCD_H
GR8_ABCD_L
VK1WM
VK32WM
VK2WM
VK64WM
VK4WM
VK16WM
VK8WM
GR64_with_sub_32bit_in_GR32_NOAX_and_GR32_NOSP
GR64_NOSP
GR64_with_sub_32bit_in_GR32_NOAX_and_GR32_NOREX_NOSP
GR64_NOREX_NOSP
FPCCR
BNDR
FR32X
FR64X
VR256X
VR128X
GR64_with_sub_32bit_in_GR32_AD_and_GR32_NOAX
GR64_with_sub_32bit_in_GR32_ABCD_and_GR32_NOAX
GR64_TCW64_and_GR64_with_sub_32bit_in_GR32_NOAX
GR64_TC_and_GR64_with_sub_32bit_in_GR32_NOAX
GR64_TC_and_GR64_with_sub_32bit_in_GR32_NOAX_and_GR32_NOREX
GR64_NOREX
GR64_with_sub_16bit_in_GR16_NOREX
GR8_NOREX
GR64_with_sub_8bit
MORESTACK_RET_RESTORE_R10
LD_Fp080
LD_Fp180
CMOV_RFP80
SUB_FpI32m80
ADD_FpI32m80
MUL_FpI32m80
SUBR_FpI32m80
DIVR_FpI32m80
DIV_FpI32m80
ILD_Fp32m80
IST_Fp32m80
ISTT_Fp32m80
ILD_Fp64m80
IST_Fp64m80
ISTT_Fp64m80
SUB_FpI16m80
ADD_FpI16m80
MUL_FpI16m80
SUBR_FpI16m80
DIVR_FpI16m80
DIV_FpI16m80
ILD_Fp16m80
IST_Fp16m80
ISTT_Fp16m80
CMOVNB_Fp80
SUB_Fp80
CMOVB_Fp80
ADD_Fp80
CMOVNBE_Fp80
CMOVBE_Fp80
CMOVNE_Fp80
CMOVE_Fp80
MUL_Fp80
SIN_Fp80
CMOVNP_Fp80
CMOVP_Fp80
ABS_Fp80
CHS_Fp80
COS_Fp80
SQRT_Fp80
TST_Fp80
DIV_Fp80
UCOM_FpIr80
UCOM_Fpr80
LD_F0
AVX512_512_SET0
V_SET0
AVX_SET0
PREFETCHT0
SUB_FrST0
ADD_FrST0
MUL_FrST0
SUBR_FrST0
DIVR_FrST0
DIV_FrST0
SUB_FPrST0
ADD_FPrST0
MUL_FPrST0
SUBR_FPrST0
DIVR_FPrST0
DIV_FPrST0
PBLENDVBrm0
BLENDVPDrm0
BLENDVPSrm0
MOV32r0
PBLENDVBrr0
BLENDVPDrr0
BLENDVPSrr0
XSHA1
LD_F1
CMOV_V32I1
CMOV_V64I1
CMOV_V16I1
CMOV_V8I1
FPREM1
F2XM1
FYL2XP1
PREFETCHT1
JA_1
JB_1
JAE_1
JBE_1
JGE_1
JE_1
JLE_1
JNE_1
JG_1
JL_1
JO_1
JNO_1
JP_1
JMP_1
JNP_1
JS_1
JNS_1
RCL32m1
SHL32m1
ROL32m1
SAR32m1
RCR32m1
SHR32m1
ROR32m1
RCL64m1
SHL64m1
ROL64m1
SAR64m1
RCR64m1
SHR64m1
ROR64m1
RCL16m1
SHL16m1
ROL16m1
SAR16m1
RCR16m1
SHR16m1
ROR16m1
RCL8m1
SHL8m1
ROL8m1
SAR8m1
RCR8m1
SHR8m1
ROR8m1
RCL32r1
SHL32r1
ROL32r1
SAR32r1
RCR32r1
SHR32r1
ROR32r1
RCL64r1
SHL64r1
ROL64r1
SAR64r1
RCR64r1
SHR64r1
ROR64r1
RCL16r1
SHL16r1
ROL16r1
SAR16r1
RCR16r1
SHR16r1
ROR16r1
RCL8r1
SHL8r1
ROL8r1
SAR8r1
RCR8r1
SHR8r1
ROR8r1
LD_Fp032
LD_Fp132
INVLPGA32
PUSHA32
POPA32
VMLOAD32
LXADD32
INVPCID32
INVVPID32
VMSAVE32
CMOV_V4F32
CMOV_V16F32
CMOV_V8F32
PUSHF32
POPF32
LCMPXCHG32
VMRUN32
ADJCALLSTACKDOWN32
CMOV_RFP32
ADJCALLSTACKUP32
CMOV_FR32
CMOV_GR32
PUSHCS32
PUSHDS32
POPDS32
PUSHES32
POPES32
PUSHFS32
POPFS32
PUSHGS32
POPGS32
PUSHSS32
POPSS32
IRET32
INVEPT32
SEG_ALLOCA_32
REP_STOSB_32
REP_MOVSB_32
REP_STOSD_32
REP_MOVSD_32
WIN_FTOL_32
REP_STOSW_32
REP_MOVSW_32
TLSCall_32
SBB32i32
SUB32i32
ADC32i32
ADD32i32
AND32i32
CMP32i32
XOR32i32
TEST32i32
SBB64i32
SUB64i32
ADC64i32
ADD64i32
AND64i32
PUSH64i32
CMP64i32
XOR64i32
TEST64i32
PUSHi32
SBB64mi32
LOCK_SUB64mi32
ADC64mi32
RELEASE_ADD64mi32
LOCK_ADD64mi32
RELEASE_AND64mi32
LOCK_AND64mi32
CMP64mi32
RELEASE_XOR64mi32
LOCK_XOR64mi32
RELEASE_OR64mi32
LOCK_OR64mi32
TEST64mi32
RELEASE_MOV64mi32
IMUL64rmi32
SBB64ri32
SUB64ri32
ADC64ri32
ADD64ri32
AND64ri32
CMP64ri32
XOR64ri32
TEST64ri32
MOV64ri32
IMUL64rri32
CALL64pcrel32
CALLpcrel32
ST_FpP80m32
SUB_Fp80m32
ADD_Fp80m32
MUL_Fp80m32
SUBR_Fp80m32
DIVR_Fp80m32
ST_Fp80m32
DIV_Fp80m32
SUB_FpI32m32
ADD_FpI32m32
MUL_FpI32m32
SUBR_FpI32m32
DIVR_FpI32m32
DIV_FpI32m32
ILD_Fp32m32
IST_Fp32m32
ISTT_Fp32m32
CRC32r32m32
ST_FpP64m32
SUB_Fp64m32
ADD_Fp64m32
ILD_Fp64m32
MUL_Fp64m32
SUBR_Fp64m32
DIVR_Fp64m32
IST_Fp64m32
ISTT_Fp64m32
DIV_Fp64m32
SUB_FpI16m32
ADD_FpI16m32
MUL_FpI16m32
SUBR_FpI16m32
DIVR_FpI16m32
DIV_FpI16m32
ILD_Fp16m32
IST_Fp16m32
ISTT_Fp16m32
MOVSX64rm32
MOV32ao32
MOV64ao32
MOV16ao32
MOV8ao32
CMOVNB_Fp32
SUB_Fp32
CMOVB_Fp32
ADD_Fp32
CMOVNBE_Fp32
CMOVBE_Fp32
CMOVNE_Fp32
CMOVE_Fp32
MUL_Fp32
SIN_Fp32
CMOVNP_Fp32
CMOVP_Fp32
ABS_Fp32
CHS_Fp32
COS_Fp32
SQRT_Fp32
TST_Fp32
DIV_Fp32
EH_SjLj_LongJmp32
EH_SjLj_SetJmp32
CRC32r32r32
UCOM_FpIr32
TLS_addr32
TLS_base_addr32
UCOM_Fpr32
MOVSX64rr32
FLDLG2
FLDLN2
PREFETCHT2
JA_2
JB_2
JAE_2
JBE_2
JGE_2
JE_2
JLE_2
JNE_2
JG_2
JL_2
XBEGIN_2
JO_2
JNO_2
JP_2
JMP_2
JNP_2
JS_2
JNS_2
INT3
LD_Fp064
LD_Fp164
INVLPGA64
XSAVEC64
VMLOAD64
LXADD64
INVPCID64
INVVPID64
RDFSBASE64
WRFSBASE64
RDGSBASE64
WRGSBASE64
LEAVE64
VMSAVE64
FXSAVE64
CMOV_V2F64
CMOV_V4F64
CMOV_V8F64
PUSHF64
POPF64
LCMPXCHG64
CMOV_V2I64
CMOV_V4I64
CMOV_V8I64
FARCALL64
EH_RETURN64
VMRUN64
ADJCALLSTACKDOWN64
CMOV_RFP64
FARJMP64
ADJCALLSTACKUP64
MMX_MASKMOVQ64
CMOV_FR64
FXRSTOR64
XSAVES64
PUSHFS64
POPFS64
PUSHGS64
POPGS64
XRSTORS64
IRET64
SYSRET64
SYSEXIT64
INVEPT64
XSAVEOPT64
VMASKMOVDQU64
SEG_ALLOCA_64
REP_STOSB_64
REP_MOVSB_64
REP_STOSD_64
REP_MOVSD_64
VAARG_64
WIN_FTOL_64
REP_STOSQ_64
REP_MOVSQ_64
REP_STOSW_64
REP_MOVSW_64
TLSCall_64
TAILJMPd64
TCRETURNdi64
TCRETURNmi64
MOV32ri64
TCRETURNri64
ST_FpP80m64
SUB_Fp80m64
ADD_Fp80m64
MUL_Fp80m64
SUBR_Fp80m64
DIVR_Fp80m64
ST_Fp80m64
DIV_Fp80m64
SUB_FpI32m64
ADD_FpI32m64
MUL_FpI32m64
SUBR_FpI32m64
DIVR_FpI32m64
DIV_FpI32m64
ILD_Fp32m64
IST_Fp32m64
ISTT_Fp32m64
ILD_Fp64m64
IST_Fp64m64
ISTT_Fp64m64
CRC32r64m64
SUB_FpI16m64
ADD_FpI16m64
MUL_FpI16m64
SUBR_FpI16m64
DIVR_FpI16m64
DIV_FpI16m64
ILD_Fp16m64
IST_Fp16m64
ISTT_Fp16m64
TAILJMPm64
MMX_PSHUFBrm64
MMX_PSIGNBrm64
MMX_PABSBrm64
MMX_PHSUBDrm64
MMX_PHADDrm64
MMX_PSIGNDrm64
MMX_PABSDrm64
MMX_PHSUBWrm64
MMX_PHADDWrm64
MMX_PSIGNWrm64
MMX_PABSWrm64
MMX_PMADDUBSWrm64
MMX_PHSUBSWrm64
MMX_PHADDSWrm64
MMX_PMULHRSWrm64
MOV32ao64
MOV64ao64
MOV16ao64
MOV8ao64
CMOVNB_Fp64
SUB_Fp64
CMOVB_Fp64
ADD_Fp64
CMOVNBE_Fp64
CMOVBE_Fp64
CMOVNE_Fp64
CMOVE_Fp64
MUL_Fp64
SIN_Fp64
CMOVNP_Fp64
CMOVP_Fp64
ABS_Fp64
CHS_Fp64
COS_Fp64
SQRT_Fp64
TST_Fp64
DIV_Fp64
EH_SjLj_LongJmp64
EH_SjLj_SetJmp64
CRC32r64r64
UCOM_FpIr64
TAILJMPr64
XCHG32ar64
TLS_addr64
TLS_base_addr64
UCOM_Fpr64
MMX_PSHUFBrr64
MMX_PSIGNBrr64
MMX_PABSBrr64
MMX_PHSUBDrr64
MMX_PHADDrr64
MMX_PSIGNDrr64
MMX_PABSDrr64
MMX_PHSUBWrr64
MMX_PHADDWrr64
MMX_PSIGNWrr64
MMX_PABSWrr64
MMX_PMADDUBSWrr64
MMX_PHSUBSWrr64
MMX_PHADDSWrr64
MMX_PMULHRSWrr64
JA_4
JB_4
JAE_4
JBE_4
JGE_4
JE_4
JLE_4
JNE_4
JG_4
JL_4
XBEGIN_4
JO_4
JNO_4
JP_4
JMP_4
JNP_4
JS_4
JNS_4
PUSHA16
POPA16
LXADD16
PUSHF16
POPF16
LCMPXCHG16
CMOV_GR16
PUSHCS16
PUSHDS16
POPDS16
PUSHES16
POPES16
PUSHFS16
POPFS16
PUSHGS16
POPGS16
PUSHSS16
POPSS16
IRET16
SBB16i16
SUB16i16
ADC16i16
ADD16i16
AND16i16
CMP16i16
XOR16i16
TEST16i16
PUSHi16
CALLpcrel16
CRC32r32m16
MOVSX32rm16
MOVZX32rm16
MOVSX64rm16
MOV32ao16
MOV16ao16
MOV8ao16
CRC32r32r16
MOVSX32rr16
MOVZX32rr16
MOVSX64rr16
XSHA256
VPABSBrm256
VPABSDrm256
VPABSWrm256
VPMADDUBSWrm256
VPHSUBSWrm256
VPHADDSWrm256
VPMULHRSWrm256
VPABSBrr256
VPABSDrr256
VPABSWrr256
VPMADDUBSWrr256
VPHSUBSWrr256
VPHADDSWrr256
VPMULHRSWrr256
VBROADCASTF128
VBROADCASTI128
VPABSBrm128
VPABSDrm128
VPABSWrm128
VPMADDUBSWrm128
VPHSUBSWrm128
VPHADDSWrm128
VPMULHRSWrm128
VPHMINPOSUWrm128
VPABSBrr128
VPABSDrr128
VPABSWrr128
VPMADDUBSWrr128
VPHSUBSWrr128
VPHADDSWrr128
VPMULHRSWrr128
VPHMINPOSUWrr128
LXADD8
LCMPXCHG8
CMOV_GR8
PUSH32i8
PUSH64i8
PUSH16i8
SBB8i8
SUB8i8
ADC8i8
AAD8i8
ADD8i8
AND8i8
AAM8i8
CMP8i8
XOR8i8
TEST8i8
SBB32mi8
LOCK_SUB32mi8
ADC32mi8
BTC32mi8
LOCK_ADD32mi8
LOCK_AND32mi8
CMP32mi8
LOCK_XOR32mi8
LOCK_OR32mi8
BTR32mi8
BTS32mi8
BT32mi8
SBB64mi8
LOCK_SUB64mi8
ADC64mi8
BTC64mi8
LOCK_ADD64mi8
LOCK_AND64mi8
CMP64mi8
LOCK_XOR64mi8
LOCK_OR64mi8
BTR64mi8
BTS64mi8
BT64mi8
SBB16mi8
LOCK_SUB16mi8
ADC16mi8
BTC16mi8
LOCK_ADD16mi8
LOCK_AND16mi8
CMP16mi8
LOCK_XOR16mi8
LOCK_OR16mi8
BTR16mi8
BTS16mi8
BT16mi8
SBB8mi8
SUB8mi8
ADC8mi8
ADD8mi8
AND8mi8
CMP8mi8
XOR8mi8
IMUL32rmi8
IMUL64rmi8
IMUL16rmi8
SBB32ri8
SUB32ri8
ADC32ri8
BTC32ri8
ADD32ri8
AND32ri8
CMP32ri8
XOR32ri8
BTR32ri8
BTS32ri8
BT32ri8
SBB64ri8
SUB64ri8
ADC64ri8
BTC64ri8
ADD64ri8
AND64ri8
CMP64ri8
XOR64ri8
BTR64ri8
BTS64ri8
BT64ri8
SBB16ri8
SUB16ri8
ADC16ri8
BTC16ri8
ADD16ri8
AND16ri8
CMP16ri8
XOR16ri8
BTR16ri8
BTS16ri8
BT16ri8
SBB8ri8
SUB8ri8
ADC8ri8
ADD8ri8
AND8ri8
CMP8ri8
XOR8ri8
SHLD32mri8
SHRD32mri8
SHLD64mri8
SHRD64mri8
SHLD16mri8
SHRD16mri8
SHLD32rri8
SHRD32rri8
IMUL32rri8
SHLD64rri8
SHRD64rri8
IMUL64rri8
SHLD16rri8
SHRD16rri8
IMUL16rri8
CRC32r32m8
CRC32r64m8
MOVSX32rm8
MOVZX32rm8
MOVSX64rm8
MOVSX16rm8
MOVZX16rm8
MOVSX32_NOREXrm8
MOVZX32_NOREXrm8
CRC32r32r8
CRC32r64r8
MOVSX32rr8
MOVZX32rr8
MOVSX64rr8
MOVSX16rr8
MOVZX16rr8
MOVSX32_NOREXrr8
MOVZX32_NOREXrr8
WIN_ALLOCA
PREFETCHNTA
KSET0B
KSET1B
UD2B
LCMPXCHG16B
LCMPXCHG8B
XCRYPTECB
ADD64ri32_DB
ADD32ri8_DB
ADD64ri8_DB
ADD16ri8_DB
ADD32ri_DB
ADD16ri_DB
ADD32rr_DB
ADD64rr_DB
ADD16rr_DB
XCRYPTCFB
XCRYPTOFB
SCASB
LODSB
INSB
STOSB
CMPSB
OUTSB
MOVSB
CLWB
CLAC
STAC
XCRYPTCBC
GETSEC
XSAVEC
RDPMC
VMFUNC
RDTSC
KSET0D
KSET1D
CPUID
XEND
LIFETIME_END
LOAD_STACK_GUARD
FsFLD0SD
MOVNTSD
WBINVD
FLDL2E
LFENCE
MFENCE
SFENCE
REG_SEQUENCE
CWDE
FFREE
FSCALE
BUNDLE
VMRESUME
LOOPNE
LOCAL_ESCAPE
LOOPE
CDQE
XSTORE
RDFSBASE
WRFSBASE
RDGSBASE
WRGSBASE
PAUSE
DBG_VALUE
LEAVE
FXSAVE
IMPLICIT_DEF
VMXOFF
LAHF
SAHF
CMOVNB_F
CMOVB_F
CMOVNBE_F
CMOVBE_F
CMOVNE_F
CMOVE_F
XCH_F
SIN_F
CMOVNP_F
CMOVP_F
ABS_F
CHS_F
COS_F
SQRT_F
TST_F
VPCMPESTRM128REG
VPCMPISTRM128REG
EXTRACT_SUBREG
INSERT_SUBREG
VPCMPESTRIREG
VPCMPISTRIREG
SUBREG_TO_REG
INVLPG
VMLAUNCH
PREFETCH
CLFLUSH
CLGI
STGI
FLDPI
EXTRQI
INSERTQI
RCL32mCL
SHL32mCL
ROL32mCL
SAR32mCL
RCR32mCL
SHR32mCL
ROR32mCL
RCL64mCL
SHL64mCL
ROL64mCL
SAR64mCL
RCR64mCL
SHR64mCL
ROR64mCL
RCL16mCL
SHL16mCL
ROL16mCL
SAR16mCL
RCR16mCL
SHR16mCL
ROR16mCL
RCL8mCL
SHL8mCL
ROL8mCL
SAR8mCL
RCR8mCL
SHR8mCL
ROR8mCL
RCL32rCL
SHL32rCL
ROL32rCL
SAR32rCL
RCR32rCL
SHR32rCL
ROR32rCL
RCL64rCL
SHL64rCL
ROL64rCL
SAR64rCL
RCR64rCL
SHR64rCL
ROR64rCL
RCL16rCL
SHL16rCL
ROL16rCL
SAR16rCL
RCR16rCL
SHR16rCL
ROR16rCL
RCL8rCL
SHL8rCL
ROL8rCL
SAR8rCL
RCR8rCL
SHR8rCL
ROR8rCL
SHLD32mrCL
SHRD32mrCL
SHLD64mrCL
SHRD64mrCL
SHLD16mrCL
SHRD16mrCL
SHLD32rrCL
SHRD32rrCL
SHLD64rrCL
SHRD64rrCL
SHLD16rrCL
SHRD16rrCL
GC_LABEL
EH_LABEL
LRETIL
VMMCALL
VMCALL
SYSCALL
VZEROALL
KILL
NOOPL
SCASL
LODSL
INSL
STOSL
CMPSL
OUTSL
MOVSL
LRETL
MONTMUL
FXAM
VPCMPESTRM128MEM
VPCMPISTRM128MEM
VPCMPESTRIMEM
VPCMPISTRIMEM
FP80_TO_INT32_IN_MEM
FP32_TO_INT32_IN_MEM
FP64_TO_INT32_IN_MEM
FP80_TO_INT64_IN_MEM
FP32_TO_INT64_IN_MEM
FP64_TO_INT64_IN_MEM
FP80_TO_INT16_IN_MEM
FP32_TO_INT16_IN_MEM
FP64_TO_INT16_IN_MEM
FPREM
SEH_SaveXMM
INLINEASM
FPATAN
FPTAN
XBEGIN
CFI_INSTRUCTION
VMXON
EH_RETURN
INTO
STACKMAP
TRAP
RDTSCP
FNOP
LOOP
NOOP
FAULTING_LOAD_OP
FCOMPP
FDECSTP
FINCSTP
KSET0Q
KSET1Q
LRETIQ
EXTRQ
SCASQ
LODSQ
STOSQ
CMPSQ
MOVSQ
LRETQ
INSERTQ
MMX_MASKMOVQ
MOVZX64rm16_Q
MOVZX64rr16_Q
MOVZX64rm8_Q
MOVZX64rr8_Q
VZEROUPPER
SYSENTER
MONITOR
FXRSTOR
VLDMXCSR
VSTMXCSR
RDMSR
WRMSR
XCRYPTCTR
AVX2_SETALLONES
V_SETALLONES
XSAVES
VASTART_SAVE_XMM_REGS
SWAPGS
ENCLS
FEMMS
MMX_EMMS
FSINCOS
XRSTORS
FsFLD0SS
COPY_TO_REGCLASS
MOVNTSS
CLTS
FLDL2T
XLAT
FXTRACT
SYSRET
MORESTACK_RET
WAIT
PCOMMIT
SKINIT
FNINIT
SYSEXIT
FRNDINT
STATEPOINT
PATCHPOINT
XSAVEOPT
CLFLUSHOPT
LIFETIME_START
XABORT
XTEST
ENCLU
VMASKMOVDQU
XGETBV
XSETBV
VFMADDSUBPD4rrY_REV
VFMSUBPD4rrY_REV
VFNMSUBPD4rrY_REV
VFMSUBADDPD4rrY_REV
VFMADDPD4rrY_REV
VFNMADDPD4rrY_REV
VFMADDSUBPS4rrY_REV
VFMSUBPS4rrY_REV
VFNMSUBPS4rrY_REV
VFMSUBADDPS4rrY_REV
VFMADDPS4rrY_REV
VFNMADDPS4rrY_REV
SBB32rr_REV
SUB32rr_REV
ADC32rr_REV
ADD32rr_REV
AND32rr_REV
CMP32rr_REV
XOR32rr_REV
MOV32rr_REV
SBB64rr_REV
SUB64rr_REV
ADC64rr_REV
ADD64rr_REV
AND64rr_REV
CMP64rr_REV
MMX_MOVQ64rr_REV
XOR64rr_REV
MOV64rr_REV
VFMADDSUBPD4rr_REV
VFMSUBPD4rr_REV
VFNMSUBPD4rr_REV
VFMSUBADDPD4rr_REV
VFMADDPD4rr_REV
VFNMADDPD4rr_REV
VFMSUBSD4rr_REV
VFNMSUBSD4rr_REV
VFMADDSD4rr_REV
VFNMADDSD4rr_REV
VFMADDSUBPS4rr_REV
VFMSUBPS4rr_REV
VFNMSUBPS4rr_REV
VFMSUBADDPS4rr_REV
VFMADDPS4rr_REV
VFNMADDPS4rr_REV
VFMSUBSS4rr_REV
VFNMSUBSS4rr_REV
VFMADDSS4rr_REV
VFNMADDSS4rr_REV
SBB16rr_REV
SUB16rr_REV
ADC16rr_REV
ADD16rr_REV
AND16rr_REV
CMP16rr_REV
XOR16rr_REV
MOV16rr_REV
SBB8rr_REV
SUB8rr_REV
ADC8rr_REV
ADD8rr_REV
AND8rr_REV
CMP8rr_REV
XOR8rr_REV
MOV8rr_REV
VMOVDQArr_REV
VMOVAPDrr_REV
VMOVUPDrr_REV
VMOVSDrr_REV
VMOVAPSrr_REV
VMOVUPSrr_REV
VMOVSSrr_REV
VMOVDQUrr_REV
VPEXTRWrr_REV
VMOVDQAYrr_REV
VMOVAPDYrr_REV
VMOVUPDYrr_REV
VMOVAPSYrr_REV
VMOVUPSYrr_REV
VMOVDQUYrr_REV
VMOVSDZrr_REV
VMOVSSZrr_REV
KSET0W
KSET1W
PREFETCHW
LRETIW
NOOPW
SCASW
LODSW
INSW
STOSW
CMPSW
OUTSW
MOVSW
LRETW
FYL2X
FNCLEX
TEST8ri_NOREX
MOV8rm_NOREX
MOV8mr_NOREX
MOV8rr_NOREX
TAILJMPd64_REX
TAILJMPm64_REX
TAILJMPr64_REX
REX64_PREFIX
DATA16_PREFIX
REPNE_PREFIX
XACQUIRE_PREFIX
XRELEASE_PREFIX
LOCK_PREFIX
REP_PREFIX
CS_PREFIX
DS_PREFIX
ES_PREFIX
FS_PREFIX
GS_PREFIX
SS_PREFIX
COPY
VFMADDSUBPDr231mY
VFMSUBPDr231mY
VFNMSUBPDr231mY
VFMSUBADDPDr231mY
VFMADDPDr231mY
VFNMADDPDr231mY
VFMADDSUBPSr231mY
VFMSUBPSr231mY
VFNMSUBPSr231mY
VFMSUBADDPSr231mY
VFMADDPSr231mY
VFNMADDPSr231mY
VFMADDSUBPDr132mY
VFMSUBPDr132mY
VFNMSUBPDr132mY
VFMSUBADDPDr132mY
VFMADDPDr132mY
VFNMADDPDr132mY
VFMADDSUBPSr132mY
VFMSUBPSr132mY
VFNMSUBPSr132mY
VFMSUBADDPSr132mY
VFMADDPSr132mY
VFNMADDPSr132mY
VFMADDSUBPDr213mY
VFMSUBPDr213mY
VFNMSUBPDr213mY
VFMSUBADDPDr213mY
VFMADDPDr213mY
VFNMADDPDr213mY
VFMADDSUBPSr213mY
VFMSUBPSr213mY
VFNMSUBPSr213mY
VFMSUBADDPSr213mY
VFMADDPSr213mY
VFNMADDPSr213mY
VFMADDSUBPD4rmY
VFMSUBPD4rmY
VFNMSUBPD4rmY
VFMSUBADDPD4rmY
VFMADDPD4rmY
VFNMADDPD4rmY
VFMADDSUBPS4rmY
VFMSUBPS4rmY
VFNMSUBPS4rmY
VFMSUBADDPS4rmY
VFMADDPS4rmY
VFNMADDPS4rmY
VPERMIL2PDrmY
VFRCZPDrmY
VPERMIL2PSrmY
VFRCZPSrmY
VPCMOVrmY
VFMADDSUBPDr231rY
VFMSUBPDr231rY
VFNMSUBPDr231rY
VFMSUBADDPDr231rY
VFMADDPDr231rY
VFNMADDPDr231rY
VFMADDSUBPSr231rY
VFMSUBPSr231rY
VFNMSUBPSr231rY
VFMSUBADDPSr231rY
VFMADDPSr231rY
VFNMADDPSr231rY
VFMADDSUBPDr132rY
VFMSUBPDr132rY
VFNMSUBPDr132rY
VFMSUBADDPDr132rY
VFMADDPDr132rY
VFNMADDPDr132rY
VFMADDSUBPSr132rY
VFMSUBPSr132rY
VFNMSUBPSr132rY
VFMSUBADDPSr132rY
VFMADDPSr132rY
VFNMADDPSr132rY
VFMADDSUBPDr213rY
VFMSUBPDr213rY
VFNMSUBPDr213rY
VFMSUBADDPDr213rY
VFMADDPDr213rY
VFNMADDPDr213rY
VFMADDSUBPSr213rY
VFMSUBPSr213rY
VFNMSUBPSr213rY
VFMSUBADDPSr213rY
VFMADDPSr213rY
VFNMADDPSr213rY
VFMADDSUBPD4mrY
VFMSUBPD4mrY
VFNMSUBPD4mrY
VFMSUBADDPD4mrY
VFMADDPD4mrY
VFNMADDPD4mrY
VFMADDSUBPS4mrY
VFMSUBPS4mrY
VFNMSUBPS4mrY
VFMSUBADDPS4mrY
VFMADDPS4mrY
VFNMADDPS4mrY
VPERMIL2PDmrY
VPERMIL2PSmrY
VPCMOVmrY
VFMADDSUBPD4rrY
VFMSUBPD4rrY
VFNMSUBPD4rrY
VFMSUBADDPD4rrY
VFMADDPD4rrY
VFNMADDPD4rrY
VFMADDSUBPS4rrY
VFMSUBPS4rrY
VFNMSUBPS4rrY
VFMSUBADDPS4rrY
VFMADDPS4rrY
VFNMADDPS4rrY
VPERMIL2PDrrY
VFRCZPDrrY
VPERMIL2PSrrY
VFRCZPSrrY
VPCMOVrrY
JECXZ
JCXZ
JRCXZ
MOV32o32a
MOV64o32a
MOV16o32a
MOV8o32a
MOV32o64a
MOV64o64a
MOV16o64a
MOV8o64a
MOV32o16a
MOV16o16a
MOV8o16a
VPCMPDZ256rmib
VPCMPUDZ256rmib
VPCMPQZ256rmib
VPCMPUQZ256rmib
VPCMPDZ128rmib
VPCMPUDZ128rmib
VPCMPQZ128rmib
VPCMPUQZ128rmib
VPCMPDZrmib
VPCMPUDZrmib
VPCMPQZrmib
VPCMPUQZrmib
VREDUCESDZ128rrib
VRANGESDZ128rrib
VFIXUPIMMSDZ128rrib
VREDUCESSZ128rrib
VRANGESSZ128rrib
VFIXUPIMMSSZ128rrib
VREDUCEPDZrrib
VRANGEPDZrrib
VRNDSCALEPDZrrib
VFIXUPIMMPDZrrib
VCMPPDZrrib
VREDUCEPSZrrib
VRANGEPSZrrib
VRNDSCALEPSZrrib
VFIXUPIMMPSZrrib
VCMPPSZrrib
VFMADDSUB231PDZ256mb
VFMSUB231PDZ256mb
VFNMSUB231PDZ256mb
VFMSUBADD231PDZ256mb
VFMADD231PDZ256mb
VFNMADD231PDZ256mb
VFMADDSUB132PDZ256mb
VFMSUB132PDZ256mb
VFNMSUB132PDZ256mb
VFMSUBADD132PDZ256mb
VFMADD132PDZ256mb
VFNMADD132PDZ256mb
VFMADDSUB213PDZ256mb
VFMSUB213PDZ256mb
VFNMSUB213PDZ256mb
VFMSUBADD213PDZ256mb
VFMADD213PDZ256mb
VFNMADD213PDZ256mb
VRCP14PDZ256mb
VRSQRT14PDZ256mb
VGETEXPPDZ256mb
VSQRTPDZ256mb
VFMADDSUB231PSZ256mb
VFMSUB231PSZ256mb
VFNMSUB231PSZ256mb
VFMSUBADD231PSZ256mb
VFMADD231PSZ256mb
VFNMADD231PSZ256mb
VFMADDSUB132PSZ256mb
VFMSUB132PSZ256mb
VFNMSUB132PSZ256mb
VFMSUBADD132PSZ256mb
VFMADD132PSZ256mb
VFNMADD132PSZ256mb
VFMADDSUB213PSZ256mb
VFMSUB213PSZ256mb
VFNMSUB213PSZ256mb
VFMSUBADD213PSZ256mb
VFMADD213PSZ256mb
VFNMADD213PSZ256mb
VRCP14PSZ256mb
VRSQRT14PSZ256mb
VGETEXPPSZ256mb
VSQRTPSZ256mb
VFMADDSUB231PDZ128mb
VFMSUB231PDZ128mb
VFNMSUB231PDZ128mb
VFMSUBADD231PDZ128mb
VFMADD231PDZ128mb
VFNMADD231PDZ128mb
VFMADDSUB132PDZ128mb
VFMSUB132PDZ128mb
VFNMSUB132PDZ128mb
VFMSUBADD132PDZ128mb
VFMADD132PDZ128mb
VFNMADD132PDZ128mb
VFMADDSUB213PDZ128mb
VFMSUB213PDZ128mb
VFNMSUB213PDZ128mb
VFMSUBADD213PDZ128mb
VFMADD213PDZ128mb
VFNMADD213PDZ128mb
VRCP14PDZ128mb
VRSQRT14PDZ128mb
VGETEXPPDZ128mb
VSQRTPDZ128mb
VFMADDSUB231PSZ128mb
VFMSUB231PSZ128mb
VFNMSUB231PSZ128mb
VFMSUBADD231PSZ128mb
VFMADD231PSZ128mb
VFNMADD231PSZ128mb
VFMADDSUB132PSZ128mb
VFMSUB132PSZ128mb
VFNMSUB132PSZ128mb
VFMSUBADD132PSZ128mb
VFMADD132PSZ128mb
VFNMADD132PSZ128mb
VFMADDSUB213PSZ128mb
VFMSUB213PSZ128mb
VFNMSUB213PSZ128mb
VFMSUBADD213PSZ128mb
VFMADD213PSZ128mb
VFNMADD213PSZ128mb
VRCP14PSZ128mb
VRSQRT14PSZ128mb
VGETEXPPSZ128mb
VSQRTPSZ128mb
VEXP2PDmb
VRCP28PDmb
VRSQRT28PDmb
VGETEXPPDmb
VEXP2PSmb
VRCP28PSmb
VRSQRT28PSmb
VGETEXPPSmb
VFMADDSUB231PDZmb
VFMSUB231PDZmb
VFNMSUB231PDZmb
VFMSUBADD231PDZmb
VFMADD231PDZmb
VFNMADD231PDZmb
VFMADDSUB132PDZmb
VFMSUB132PDZmb
VFNMSUB132PDZmb
VFMSUBADD132PDZmb
VFMADD132PDZmb
VFNMADD132PDZmb
VFMADDSUB213PDZmb
VFMSUB213PDZmb
VFNMSUB213PDZmb
VFMSUBADD213PDZmb
VFMADD213PDZmb
VFNMADD213PDZmb
VRCP14PDZmb
VRSQRT14PDZmb
VSQRTPDZmb
VFMADDSUB231PSZmb
VFMSUB231PSZmb
VFNMSUB231PSZmb
VFMSUBADD231PSZmb
VFMADD231PSZmb
VFNMADD231PSZmb
VFMADDSUB132PSZmb
VFMSUB132PSZmb
VFNMSUB132PSZmb
VFMSUBADD132PSZmb
VFMADD132PSZmb
VFNMADD132PSZmb
VFMADDSUB213PSZmb
VFMSUB213PSZmb
VFNMSUB213PSZmb
VFMSUBADD213PSZmb
VFMADD213PSZmb
VFNMADD213PSZmb
VRCP14PSZmb
VRSQRT14PSZmb
VSQRTPSZmb
VPERMI2D256rmb
VPERMT2D256rmb
VPERMI2PD256rmb
VPERMT2PD256rmb
VPERMI2Q256rmb
VPERMT2Q256rmb
VPERMI2PS256rmb
VPERMT2PS256rmb
VPERMI2W256rmb
VPERMT2W256rmb
VPSUBDZ256rmb
VPADDDZ256rmb
VPANDDZ256rmb
VPMULLDZ256rmb
VPBLENDMDZ256rmb
VPTESTNMDZ256rmb
VPERMDZ256rmb
VPTESTMDZ256rmb
VPANDNDZ256rmb
VCVTDQ2PDZ256rmb
VCVTUDQ2PDZ256rmb
VCVTQQ2PDZ256rmb
VCVTUQQ2PDZ256rmb
VCVTPS2PDZ256rmb
VSUBPDZ256rmb
VADDPDZ256rmb
VANDPDZ256rmb
VSCALEFPDZ256rmb
VUNPCKHPDZ256rmb
VUNPCKLPDZ256rmb
VMULPDZ256rmb
VBLENDMPDZ256rmb
VPERMPDZ256rmb
VANDNPDZ256rmb
VMINPDZ256rmb
VORPDZ256rmb
VXORPDZ256rmb
VDIVPDZ256rmb
VMAXPDZ256rmb
VPCMPEQDZ256rmb
VPORDZ256rmb
VPXORDZ256rmb
VPABSDZ256rmb
VPMINSDZ256rmb
VPMAXSDZ256rmb
VPCMPGTDZ256rmb
VPMINUDZ256rmb
VPMAXUDZ256rmb
VPSRAVDZ256rmb
VPSLLVDZ256rmb
VPROLVDZ256rmb
VPSRLVDZ256rmb
VPRORVDZ256rmb
VPSUBQZ256rmb
VCVTTPD2DQZ256rmb
VCVTPD2DQZ256rmb
VCVTTPS2DQZ256rmb
VCVTPS2DQZ256rmb
VPADDQZ256rmb
VPUNPCKHDQZ256rmb
VPUNPCKLDQZ256rmb
VPMULDQZ256rmb
VPANDQZ256rmb
VPUNPCKHQDQZ256rmb
VPUNPCKLQDQZ256rmb
VCVTTPD2UDQZ256rmb
VCVTPD2UDQZ256rmb
VCVTTPS2UDQZ256rmb
VCVTPS2UDQZ256rmb
VPMULUDQZ256rmb
VPMULLQZ256rmb
VPBLENDMQZ256rmb
VPTESTNMQZ256rmb
VPERMQZ256rmb
VPTESTMQZ256rmb
VPANDNQZ256rmb
VCVTTPD2QQZ256rmb
VCVTPD2QQZ256rmb
VCVTTPS2QQZ256rmb
VCVTPS2QQZ256rmb
VPCMPEQQZ256rmb
VCVTTPD2UQQZ256rmb
VCVTPD2UQQZ256rmb
VCVTTPS2UQQZ256rmb
VCVTPS2UQQZ256rmb
VPORQZ256rmb
VPXORQZ256rmb
VPABSQZ256rmb
VPMINSQZ256rmb
VPMAXSQZ256rmb
VPCMPGTQZ256rmb
VPMINUQZ256rmb
VPMAXUQZ256rmb
VPSRAVQZ256rmb
VPSLLVQZ256rmb
VPROLVQZ256rmb
VPSRLVQZ256rmb
VPRORVQZ256rmb
VCVTPD2PSZ256rmb
VCVTDQ2PSZ256rmb
VCVTUDQ2PSZ256rmb
VCVTQQ2PSZ256rmb
VCVTUQQ2PSZ256rmb
VSUBPSZ256rmb
VADDPSZ256rmb
VANDPSZ256rmb
VSCALEFPSZ256rmb
VUNPCKHPSZ256rmb
VUNPCKLPSZ256rmb
VMULPSZ256rmb
VBLENDMPSZ256rmb
VPERMPSZ256rmb
VANDNPSZ256rmb
VMINPSZ256rmb
VORPSZ256rmb
VXORPSZ256rmb
VDIVPSZ256rmb
VMAXPSZ256rmb
VPACKSSDWZ256rmb
VPACKUSDWZ256rmb
VPERMI2D128rmb
VPERMT2D128rmb
VPERMI2PD128rmb
VPERMT2PD128rmb
VPERMI2Q128rmb
VPERMT2Q128rmb
VPERMI2PS128rmb
VPERMT2PS128rmb
VPERMI2W128rmb
VPERMT2W128rmb
VPSUBDZ128rmb
VPADDDZ128rmb
VPANDDZ128rmb
VPMULLDZ128rmb
VPBLENDMDZ128rmb
VPTESTNMDZ128rmb
VPTESTMDZ128rmb
VPANDNDZ128rmb
VCVTDQ2PDZ128rmb
VCVTUDQ2PDZ128rmb
VCVTQQ2PDZ128rmb
VCVTUQQ2PDZ128rmb
VCVTPS2PDZ128rmb
VSUBPDZ128rmb
VADDPDZ128rmb
VANDPDZ128rmb
VSCALEFPDZ128rmb
VUNPCKHPDZ128rmb
VUNPCKLPDZ128rmb
VMULPDZ128rmb
VBLENDMPDZ128rmb
VANDNPDZ128rmb
VMINPDZ128rmb
VORPDZ128rmb
VXORPDZ128rmb
VDIVPDZ128rmb
VMAXPDZ128rmb
VPCMPEQDZ128rmb
VPORDZ128rmb
VPXORDZ128rmb
VPABSDZ128rmb
VPMINSDZ128rmb
VPMAXSDZ128rmb
VPCMPGTDZ128rmb
VPMINUDZ128rmb
VPMAXUDZ128rmb
VPSRAVDZ128rmb
VPSLLVDZ128rmb
VPROLVDZ128rmb
VPSRLVDZ128rmb
VPRORVDZ128rmb
VPSUBQZ128rmb
VCVTTPD2DQZ128rmb
VCVTPD2DQZ128rmb
VCVTTPS2DQZ128rmb
VCVTPS2DQZ128rmb
VPADDQZ128rmb
VPUNPCKHDQZ128rmb
VPUNPCKLDQZ128rmb
VPMULDQZ128rmb
VPANDQZ128rmb
VPUNPCKHQDQZ128rmb
VPUNPCKLQDQZ128rmb
VCVTTPD2UDQZ128rmb
VCVTPD2UDQZ128rmb
VCVTTPS2UDQZ128rmb
VCVTPS2UDQZ128rmb
VPMULUDQZ128rmb
VPMULLQZ128rmb
VPBLENDMQZ128rmb
VPTESTNMQZ128rmb
VPTESTMQZ128rmb
VPANDNQZ128rmb
VCVTTPD2QQZ128rmb
VCVTPD2QQZ128rmb
VCVTTPS2QQZ128rmb
VCVTPS2QQZ128rmb
VPCMPEQQZ128rmb
VCVTTPD2UQQZ128rmb
VCVTPD2UQQZ128rmb
VCVTTPS2UQQZ128rmb
VCVTPS2UQQZ128rmb
VPORQZ128rmb
VPXORQZ128rmb
VPABSQZ128rmb
VPMINSQZ128rmb
VPMAXSQZ128rmb
VPCMPGTQZ128rmb
VPMINUQZ128rmb
VPMAXUQZ128rmb
VPSRAVQZ128rmb
VPSLLVQZ128rmb
VPROLVQZ128rmb
VPSRLVQZ128rmb
VPRORVQZ128rmb
VCVTPD2PSZ128rmb
VCVTDQ2PSZ128rmb
VCVTUDQ2PSZ128rmb
VCVTQQ2PSZ128rmb
VCVTUQQ2PSZ128rmb
VSUBPSZ128rmb
VADDPSZ128rmb
VANDPSZ128rmb
VSCALEFPSZ128rmb
VUNPCKHPSZ128rmb
VUNPCKLPSZ128rmb
VMULPSZ128rmb
VBLENDMPSZ128rmb
VANDNPSZ128rmb
VMINPSZ128rmb
VORPSZ128rmb
VXORPSZ128rmb
VDIVPSZ128rmb
VMAXPSZ128rmb
VPACKSSDWZ128rmb
VPACKUSDWZ128rmb
VPERMI2Drmb
VPERMT2Drmb
VPERMI2PDrmb
VPERMT2PDrmb
VPCONFLICTDrmb
VPLZCNTDrmb
VPERMI2Qrmb
VPERMT2Qrmb
VPCONFLICTQrmb
VPLZCNTQrmb
VPERMI2PSrmb
VPERMT2PSrmb
VPERMI2Wrmb
VPERMT2Wrmb
VPSUBDZrmb
VPADDDZrmb
VPANDDZrmb
VPMULLDZrmb
VPBLENDMDZrmb
VPTESTNMDZrmb
VPERMDZrmb
VPTESTMDZrmb
VPANDNDZrmb
VCVTDQ2PDZrmb
VCVTUDQ2PDZrmb
VCVTQQ2PDZrmb
VCVTUQQ2PDZrmb
VCVTPS2PDZrmb
VSUBPDZrmb
VADDPDZrmb
VANDPDZrmb
VSCALEFPDZrmb
VUNPCKHPDZrmb
VUNPCKLPDZrmb
VMULPDZrmb
VBLENDMPDZrmb
VPERMPDZrmb
VANDNPDZrmb
VMINPDZrmb
VORPDZrmb
VXORPDZrmb
VDIVPDZrmb
VMAXPDZrmb
VPCMPEQDZrmb
VPORDZrmb
VPXORDZrmb
VPABSDZrmb
VPMINSDZrmb
VPMAXSDZrmb
VPCMPGTDZrmb
VPMINUDZrmb
VPMAXUDZrmb
VPSRAVDZrmb
VPSLLVDZrmb
VPROLVDZrmb
VPSRLVDZrmb
VPRORVDZrmb
VPSUBQZrmb
VCVTTPD2DQZrmb
VCVTPD2DQZrmb
VCVTTPS2DQZrmb
VCVTPS2DQZrmb
VPADDQZrmb
VPUNPCKHDQZrmb
VPUNPCKLDQZrmb
VPMULDQZrmb
VPANDQZrmb
VPUNPCKHQDQZrmb
VPUNPCKLQDQZrmb
VCVTTPD2UDQZrmb
VCVTPD2UDQZrmb
VCVTTPS2UDQZrmb
VCVTPS2UDQZrmb
VPMULUDQZrmb
VPMULLQZrmb
VPBLENDMQZrmb
VPTESTNMQZrmb
VPERMQZrmb
VPTESTMQZrmb
VPANDNQZrmb
VCVTTPD2QQZrmb
VCVTPD2QQZrmb
VCVTTPS2QQZrmb
VCVTPS2QQZrmb
VPCMPEQQZrmb
VCVTTPD2UQQZrmb
VCVTPD2UQQZrmb
VCVTTPS2UQQZrmb
VCVTPS2UQQZrmb
VPORQZrmb
VPXORQZrmb
VPABSQZrmb
VPMINSQZrmb
VPMAXSQZrmb
VPCMPGTQZrmb
VPMINUQZrmb
VPMAXUQZrmb
VPSRAVQZrmb
VPSLLVQZrmb
VPROLVQZrmb
VPSRLVQZrmb
VPRORVQZrmb
VCVTPD2PSZrmb
VCVTDQ2PSZrmb
VCVTUDQ2PSZrmb
VCVTQQ2PSZrmb
VCVTUQQ2PSZrmb
VSUBPSZrmb
VADDPSZrmb
VANDPSZrmb
VSCALEFPSZrmb
VUNPCKHPSZrmb
VUNPCKLPSZrmb
VMULPSZrmb
VBLENDMPSZrmb
VPERMPSZrmb
VANDNPSZrmb
VMINPSZrmb
VORPSZrmb
VXORPSZrmb
VDIVPSZrmb
VMAXPSZrmb
VPACKSSDWZrmb
VPACKUSDWZrmb
VEXP2PDrb
VRCP28PDrb
VRSQRT28PDrb
VGETEXPPDrb
VRCP28SDrb
VRSQRT28SDrb
VRNDSCALESDrb
VGETEXPSDrb
VEXP2PSrb
VRCP28PSrb
VRSQRT28PSrb
VGETEXPPSrb
VRCP28SSrb
VRSQRT28SSrb
VRNDSCALESSrb
VGETEXPSSrb
VFMADDSUB231PDZrb
VFMSUB231PDZrb
VFNMSUB231PDZrb
VFMSUBADD231PDZrb
VFMADD231PDZrb
VFNMADD231PDZrb
VFMADDSUB132PDZrb
VFMSUB132PDZrb
VFNMSUB132PDZrb
VFMSUBADD132PDZrb
VFMADD132PDZrb
VFNMADD132PDZrb
VFMADDSUB213PDZrb
VFMSUB213PDZrb
VFNMSUB213PDZrb
VFMSUBADD213PDZrb
VFMADD213PDZrb
VFNMADD213PDZrb
VSUBPDZrb
VADDPDZrb
VSCALEFPDZrb
VMULPDZrb
VMINPDZrb
VSQRTPDZrb
VDIVPDZrb
VMAXPDZrb
VFMADDSUB231PSZrb
VFMSUB231PSZrb
VFNMSUB231PSZrb
VFMSUBADD231PSZrb
VFMADD231PSZrb
VFNMADD231PSZrb
VFMADDSUB132PSZrb
VFMSUB132PSZrb
VFNMSUB132PSZrb
VFMSUBADD132PSZrb
VFMADD132PSZrb
VFNMADD132PSZrb
VFMADDSUB213PSZrb
VFMSUB213PSZrb
VFNMSUB213PSZrb
VFMSUBADD213PSZrb
VFMADD213PSZrb
VFNMADD213PSZrb
VSUBPSZrb
VADDPSZrb
VSCALEFPSZrb
VMULPSZrb
VMINPSZrb
VSQRTPSZrb
VDIVPSZrb
VMAXPSZrb
VSCALEFSDZ128rrb
VSCALEFSSZ128rrb
VCVTQQ2PDZrrb
VCVTUQQ2PDZrrb
VCVTPS2PDZrrb
VSUBSDZrrb
VADDSDZrrb
VMULSDZrrb
VMINSDZrrb
VDIVSDZrrb
VMAXSDZrrb
VCVTTPD2DQZrrb
VCVTPD2DQZrrb
VCVTTPS2DQZrrb
VCVTPS2DQZrrb
VCVTTPD2UDQZrrb
VCVTPD2UDQZrrb
VCVTTPS2UDQZrrb
VCVTPS2UDQZrrb
VCVTTPD2QQZrrb
VCVTPD2QQZrrb
VCVTTPS2QQZrrb
VCVTPS2QQZrrb
VCVTTPD2UQQZrrb
VCVTPD2UQQZrrb
VCVTTPS2UQQZrrb
VCVTPS2UQQZrrb
VCVTPD2PSZrrb
VCVTDQ2PSZrrb
VCVTUDQ2PSZrrb
VCVTQQ2PSZrrb
VCVTUQQ2PSZrrb
VSUBSSZrrb
VADDSSZrrb
VMULSSZrrb
VMINSSZrrb
VDIVSSZrrb
VMAXSSZrrb
SEH_StackAlloc
MOV32rc
MOV64rc
TAILJMPd
OR32mrLocked
MOV32rd
MOV64rd
SEH_PushFrame
SEH_SetFrame
SEH_Epilogue
SEH_EndPrologue
SEH_SaveReg
SEH_PushReg
FARCALL32i
FARJMP32i
FARCALL16i
FARJMP16i
VPSRADZ256mbi
VPSHUFDZ256mbi
VPSLLDZ256mbi
VPROLDZ256mbi
VPSRLDZ256mbi
VPERMPDZ256mbi
VPRORDZ256mbi
VPSRAQZ256mbi
VPSLLQZ256mbi
VPROLQZ256mbi
VPSRLQZ256mbi
VPERMQZ256mbi
VPRORQZ256mbi
VPSRADZ128mbi
VPSHUFDZ128mbi
VPSLLDZ128mbi
VPROLDZ128mbi
VPSRLDZ128mbi
VPRORDZ128mbi
VPSRAQZ128mbi
VPSLLQZ128mbi
VPROLQZ128mbi
VPSRLQZ128mbi
VPRORQZ128mbi
VPSRADZmbi
VPSHUFDZmbi
VPSLLDZmbi
VPROLDZmbi
VPSRLDZmbi
VPERMPDZmbi
VPRORDZmbi
VPSRAQZmbi
VPSLLQZmbi
VPROLQZmbi
VPSRLQZmbi
VPERMQZmbi
VPRORQZmbi
VSHUFF64X2Z256rmbi
VSHUFI64X2Z256rmbi
VSHUFF32X4Z256rmbi
VSHUFI32X4Z256rmbi
VALIGNDZ256rmbi
VREDUCEPDZ256rmbi
VRANGEPDZ256rmbi
VRNDSCALEPDZ256rmbi
VFIXUPIMMPDZ256rmbi
VCMPPDZ256rmbi
VALIGND_FPZ256rmbi
VALIGNQ_FPZ256rmbi
VALIGNQZ256rmbi
VREDUCEPSZ256rmbi
VRANGEPSZ256rmbi
VRNDSCALEPSZ256rmbi
VFIXUPIMMPSZ256rmbi
VCMPPSZ256rmbi
VALIGNDZ128rmbi
VREDUCEPDZ128rmbi
VRANGEPDZ128rmbi
VRNDSCALEPDZ128rmbi
VFIXUPIMMPDZ128rmbi
VCMPPDZ128rmbi
VALIGND_FPZ128rmbi
VALIGNQ_FPZ128rmbi
VALIGNQZ128rmbi
VREDUCEPSZ128rmbi
VRANGEPSZ128rmbi
VRNDSCALEPSZ128rmbi
VFIXUPIMMPSZ128rmbi
VCMPPSZ128rmbi
VSHUFF64X2Zrmbi
VSHUFI64X2Zrmbi
VSHUFF32X4Zrmbi
VSHUFI32X4Zrmbi
VALIGNDZrmbi
VREDUCEPDZrmbi
VRANGEPDZrmbi
VRNDSCALEPDZrmbi
VFIXUPIMMPDZrmbi
VCMPPDZrmbi
VALIGND_FPZrmbi
VALIGNQ_FPZrmbi
VALIGNQZrmbi
VREDUCEPSZrmbi
VRANGEPSZrmbi
VRNDSCALEPSZrmbi
VFIXUPIMMPSZrmbi
VCMPPSZrmbi
TCRETURNdi
SBB32mi
LOCK_SUB32mi
ADC32mi
RELEASE_ADD32mi
LOCK_ADD32mi
RELEASE_AND32mi
LOCK_AND32mi
BEXTRI32mi
RCL32mi
SHL32mi
ROL32mi
CMP32mi
SAR32mi
RCR32mi
SHR32mi
ROR32mi
RELEASE_XOR32mi
LOCK_XOR32mi
RELEASE_OR32mi
LOCK_OR32mi
TEST32mi
RELEASE_MOV32mi
RORX32mi
BEXTRI64mi
RCL64mi
SHL64mi
ROL64mi
SAR64mi
RCR64mi
SHR64mi
ROR64mi
RORX64mi
SBB16mi
LOCK_SUB16mi
ADC16mi
LOCK_ADD16mi
LOCK_AND16mi
RCL16mi
SHL16mi
ROL16mi
CMP16mi
SAR16mi
RCR16mi
SHR16mi
ROR16mi
LOCK_XOR16mi
LOCK_OR16mi
TEST16mi
RELEASE_MOV16mi
VPSRADZ256mi
VPSHUFDZ256mi
VPSLLDZ256mi
VPROLDZ256mi
VPSRLDZ256mi
VPERMPDZ256mi
VPRORDZ256mi
VPSRAQZ256mi
VPSLLQZ256mi
VPROLQZ256mi
VPSRLQZ256mi
VPERMQZ256mi
VPRORQZ256mi
VPSRAWZ256mi
VPSHUFHWZ256mi
VPSHUFLWZ256mi
VPSLLWZ256mi
VPSRLWZ256mi
VPSRADZ128mi
VPSHUFDZ128mi
VPSLLDZ128mi
VPROLDZ128mi
VPSRLDZ128mi
VPRORDZ128mi
VPSRAQZ128mi
VPSLLQZ128mi
VPROLQZ128mi
VPSRLQZ128mi
VPRORQZ128mi
VPSRAWZ128mi
VPSHUFHWZ128mi
VPSHUFLWZ128mi
VPSLLWZ128mi
VPSRLWZ128mi
SBB8mi
LOCK_SUB8mi
ADC8mi
RELEASE_ADD8mi
LOCK_ADD8mi
RELEASE_AND8mi
LOCK_AND8mi
RCL8mi
SHL8mi
ROL8mi
CMP8mi
SAR8mi
RCR8mi
SHR8mi
ROR8mi
RELEASE_XOR8mi
LOCK_XOR8mi
RELEASE_OR8mi
LOCK_OR8mi
TEST8mi
RELEASE_MOV8mi
VPCOMBmi
VPROTBmi
VPCOMUBmi
VPSHUFDmi
VPCOMDmi
VPERMILPDmi
VPROTDmi
VPCOMUDmi
TCRETURNmi
VPCOMQmi
VPROTQmi
VPCOMUQmi
VPERMILPSmi
MMX_PSHUFWmi
VPSHUFHWmi
VPSHUFLWmi
VPCOMWmi
VPROTWmi
VPCOMUWmi
VPSHUFDYmi
VPERMILPDYmi
VPERMPDYmi
VPERMQYmi
VPERMILPSYmi
VPSHUFHWYmi
VPSHUFLWYmi
VPSRADZmi
VPSHUFDZmi
VPSLLDZmi
VPROLDZmi
VPSRLDZmi
VPERMILPDZmi
VPERMPDZmi
VPRORDZmi
VPSRAQZmi
VPSLLQZmi
VPROLQZmi
VPSRLQZmi
VPERMQZmi
VPRORQZmi
VPERMILPSZmi
VPSRAWZmi
VPSHUFHWZmi
VPSHUFLWZmi
VPSLLWZmi
VPSRLWZmi
IMUL32rmi
SHA1RNDS4rmi
IMUL16rmi
VSHUFF64X2Z256rmi
VSHUFI64X2Z256rmi
VSHUFF32X4Z256rmi
VSHUFI32X4Z256rmi
VPCMPBZ256rmi
VPCMPUBZ256rmi
VALIGNDZ256rmi
VREDUCEPDZ256rmi
VRANGEPDZ256rmi
VRNDSCALEPDZ256rmi
VPCMPDZ256rmi
VFIXUPIMMPDZ256rmi
VCMPPDZ256rmi
VPCMPUDZ256rmi
VALIGND_FPZ256rmi
VALIGNQ_FPZ256rmi
VALIGNQZ256rmi
VPCMPQZ256rmi
VPCMPUQZ256rmi
VREDUCEPSZ256rmi
VRANGEPSZ256rmi
VRNDSCALEPSZ256rmi
VFIXUPIMMPSZ256rmi
VCMPPSZ256rmi
VPCMPWZ256rmi
VPCMPUWZ256rmi
VPCMPBZ128rmi
VPCMPUBZ128rmi
VALIGNDZ128rmi
VREDUCEPDZ128rmi
VRANGEPDZ128rmi
VRNDSCALEPDZ128rmi
VPCMPDZ128rmi
VFIXUPIMMPDZ128rmi
VCMPPDZ128rmi
VREDUCESDZ128rmi
VRANGESDZ128rmi
VFIXUPIMMSDZ128rmi
VPCMPUDZ128rmi
VALIGND_FPZ128rmi
VALIGNQ_FPZ128rmi
VALIGNQZ128rmi
VPCMPQZ128rmi
VPCMPUQZ128rmi
VREDUCEPSZ128rmi
VRANGEPSZ128rmi
VRNDSCALEPSZ128rmi
VFIXUPIMMPSZ128rmi
VCMPPSZ128rmi
VREDUCESSZ128rmi
VRANGESSZ128rmi
VFIXUPIMMSSZ128rmi
VPCMPWZ128rmi
VPCMPUWZ128rmi
VPBLENDDrmi
VBLENDPDrmi
VSHUFPDrmi
VDPPDrmi
VCMPPDrmi
VBLENDPSrmi
VSHUFPSrmi
VDPPSrmi
VCMPPSrmi
VMPSADBWrmi
VPBLENDWrmi
VPINSRWrmi
VPBLENDDYrmi
VBLENDPDYrmi
VSHUFPDYrmi
VCMPPDYrmi
VBLENDPSYrmi
VSHUFPSYrmi
VDPPSYrmi
VCMPPSYrmi
VMPSADBWYrmi
VPBLENDWYrmi
VSHUFF64X2Zrmi
VSHUFI64X2Zrmi
VSHUFF32X4Zrmi
VSHUFI32X4Zrmi
VPCMPBZrmi
VPCMPUBZrmi
VALIGNDZrmi
VREDUCEPDZrmi
VRANGEPDZrmi
VRNDSCALEPDZrmi
VSHUFPDZrmi
VPCMPDZrmi
VFIXUPIMMPDZrmi
VCMPPDZrmi
VPCMPUDZrmi
VALIGND_FPZrmi
VALIGNQ_FPZrmi
VALIGNQZrmi
VPCMPQZrmi
VPCMPUQZrmi
VREDUCEPSZrmi
VRANGEPSZrmi
VRNDSCALEPSZrmi
VSHUFPSZrmi
VFIXUPIMMPSZrmi
VCMPPSZrmi
VPCMPWZrmi
VPCMPUWZrmi
MMX_PINSRWirmi
SBB32ri
SUB32ri
ADC32ri
ADD32ri
AND32ri
BEXTRI32ri
RCL32ri
SHL32ri
ROL32ri
IN32ri
CMP32ri
SAR32ri
RCR32ri
SHR32ri
ROR32ri
XOR32ri
TEST32ri
MOV32ri
RORX32ri
BEXTRI64ri
RCL64ri
SHL64ri
ROL64ri
SAR64ri
RCR64ri
SHR64ri
ROR64ri
MOV64ri
RORX64ri
SBB16ri
SUB16ri
ADC16ri
ADD16ri
AND16ri
RCL16ri
SHL16ri
ROL16ri
IN16ri
CMP16ri
SAR16ri
RCR16ri
SHR16ri
ROR16ri
XOR16ri
TEST16ri
MOV16ri
VPSRADZ256ri
VPSHUFDZ256ri
VPSLLDZ256ri
VPROLDZ256ri
VPSRLDZ256ri
VPERMPDZ256ri
VPRORDZ256ri
VPSRAQZ256ri
VPSLLQZ256ri
VPROLQZ256ri
VPSRLQZ256ri
VPERMQZ256ri
VPRORQZ256ri
VPSRAWZ256ri
VPSHUFHWZ256ri
VPSHUFLWZ256ri
VPSLLWZ256ri
VPSRLWZ256ri
VPSRADZ128ri
VPSHUFDZ128ri
VPSLLDZ128ri
VPROLDZ128ri
VPSRLDZ128ri
VPRORDZ128ri
VPSRAQZ128ri
VPSLLQZ128ri
VPROLQZ128ri
VPSRLQZ128ri
VPRORQZ128ri
VPSRAWZ128ri
VPSHUFHWZ128ri
VPSHUFLWZ128ri
VPSLLWZ128ri
VPSRLWZ128ri
SBB8ri
SUB8ri
ADC8ri
ADD8ri
AND8ri
RCL8ri
SHL8ri
ROL8ri
IN8ri
CMP8ri
SAR8ri
RCR8ri
SHR8ri
ROR8ri
XOR8ri
TEST8ri
MOV8ri
KSHIFTLBri
VPCOMBri
KSHIFTRBri
VPROTBri
VPCOMUBri
VPSRADri
MMX_PSRADri
VPSHUFDri
VPSLLDri
MMX_PSLLDri
VPSRLDri
MMX_PSRLDri
KSHIFTLDri
VPCOMDri
VPERMILPDri
KSHIFTRDri
VPROTDri
VPCOMUDri
TCRETURNri
VPSLLDQri
VPSRLDQri
VPSLLQri
MMX_PSLLQri
VPSRLQri
MMX_PSRLQri
KSHIFTLQri
VPCOMQri
KSHIFTRQri
VPROTQri
VPCOMUQri
VPERMILPSri
VPSRAWri
MMX_PSRAWri
MMX_PSHUFWri
VPSHUFHWri
VPSHUFLWri
VPSLLWri
MMX_PSLLWri
VPSRLWri
MMX_PSRLWri
KSHIFTLWri
VPCOMWri
KSHIFTRWri
VPEXTRWri
VPROTWri
VPCOMUWri
VPSRADYri
VPSHUFDYri
VPSLLDYri
VPSRLDYri
VPERMILPDYri
VPERMPDYri
VPSLLDQYri
VPSRLDQYri
VPSLLQYri
VPSRLQYri
VPERMQYri
VPERMILPSYri
VPSRAWYri
VPSHUFHWYri
VPSHUFLWYri
VPSLLWYri
VPSRLWYri
VPSRADZri
VPSHUFDZri
VPSLLDZri
VPROLDZri
VPSRLDZri
VPERMILPDZri
VPERMPDZri
VPRORDZri
VPSRAQZri
VPSLLQZri
VPROLQZri
VPSRLQZri
VPERMQZri
VPRORQZri
VPERMILPSZri
VPSRAWZri
VPSHUFHWZri
VPSHUFLWZri
VPSLLWZri
VPSRLWZri
IMUL32rri
SHA1RNDS4rri
IMUL16rri
VSHUFF64X2Z256rri
VSHUFI64X2Z256rri
VSHUFF32X4Z256rri
VSHUFI32X4Z256rri
VPCMPBZ256rri
VPCMPUBZ256rri
VALIGNDZ256rri
VREDUCEPDZ256rri
VRANGEPDZ256rri
VRNDSCALEPDZ256rri
VPCMPDZ256rri
VFIXUPIMMPDZ256rri
VCMPPDZ256rri
VPCMPUDZ256rri
VALIGND_FPZ256rri
VALIGNQ_FPZ256rri
VALIGNQZ256rri
VPCMPQZ256rri
VPCMPUQZ256rri
VREDUCEPSZ256rri
VRANGEPSZ256rri
VRNDSCALEPSZ256rri
VFIXUPIMMPSZ256rri
VCMPPSZ256rri
VPCMPWZ256rri
VPCMPUWZ256rri
VPCMPBZ128rri
VPCMPUBZ128rri
VALIGNDZ128rri
VREDUCEPDZ128rri
VRANGEPDZ128rri
VRNDSCALEPDZ128rri
VPCMPDZ128rri
VFIXUPIMMPDZ128rri
VCMPPDZ128rri
VREDUCESDZ128rri
VRANGESDZ128rri
VFIXUPIMMSDZ128rri
VPCMPUDZ128rri
VALIGND_FPZ128rri
VALIGNQ_FPZ128rri
VALIGNQZ128rri
VPCMPQZ128rri
VPCMPUQZ128rri
VREDUCEPSZ128rri
VRANGEPSZ128rri
VRNDSCALEPSZ128rri
VFIXUPIMMPSZ128rri
VCMPPSZ128rri
VREDUCESSZ128rri
VRANGESSZ128rri
VFIXUPIMMSSZ128rri
VPCMPWZ128rri
VPCMPUWZ128rri
VPBLENDDrri
VBLENDPDrri
VSHUFPDrri
VDPPDrri
VCMPPDrri
VBLENDPSrri
VSHUFPSrri
VDPPSrri
VCMPPSrri
VMPSADBWrri
VPBLENDWrri
VPINSRWrri
VPBLENDDYrri
VBLENDPDYrri
VSHUFPDYrri
VCMPPDYrri
VBLENDPSYrri
VSHUFPSYrri
VDPPSYrri
VCMPPSYrri
VMPSADBWYrri
VPBLENDWYrri
VSHUFF64X2Zrri
VSHUFI64X2Zrri
VSHUFF32X4Zrri
VSHUFI32X4Zrri
VPCMPBZrri
VPCMPUBZrri
VALIGNDZrri
VREDUCEPDZrri
VRANGEPDZrri
VRNDSCALEPDZrri
VSHUFPDZrri
VPCMPDZrri
VFIXUPIMMPDZrri
VCMPPDZrri
VPCMPUDZrri
VALIGND_FPZrri
VALIGNQ_FPZrri
VALIGNQZrri
VPCMPQZrri
VPCMPUQZrri
VREDUCEPSZrri
VRANGEPSZrri
VRNDSCALEPSZrri
VSHUFPSZrri
VFIXUPIMMPSZrri
VCMPPSZrri
VPCMPWZrri
VPCMPUWZrri
MMX_PINSRWirri
MMX_PEXTRWirri
VPCMPDZ256rmibk
VPCMPUDZ256rmibk
VPCMPQZ256rmibk
VPCMPUQZ256rmibk
VPCMPDZ128rmibk
VPCMPUDZ128rmibk
VPCMPQZ128rmibk
VPCMPUQZ128rmibk
VPCMPDZrmibk
VPCMPUDZrmibk
VPCMPQZrmibk
VPCMPUQZrmibk
VREDUCESDZ128rribk
VRANGESDZ128rribk
VFIXUPIMMSDZ128rribk
VREDUCESSZ128rribk
VRANGESSZ128rribk
VFIXUPIMMSSZ128rribk
VREDUCEPDZrribk
VRANGEPDZrribk
VRNDSCALEPDZrribk
VFIXUPIMMPDZrribk
VCMPPDZrribk
VREDUCEPSZrribk
VRANGEPSZrribk
VRNDSCALEPSZrribk
VFIXUPIMMPSZrribk
VCMPPSZrribk
VFMADDSUB231PDZ256mbk
VFMSUB231PDZ256mbk
VFNMSUB231PDZ256mbk
VFMSUBADD231PDZ256mbk
VFMADD231PDZ256mbk
VFNMADD231PDZ256mbk
VFMADDSUB132PDZ256mbk
VFMSUB132PDZ256mbk
VFNMSUB132PDZ256mbk
VFMSUBADD132PDZ256mbk
VFMADD132PDZ256mbk
VFNMADD132PDZ256mbk
VFMADDSUB213PDZ256mbk
VFMSUB213PDZ256mbk
VFNMSUB213PDZ256mbk
VFMSUBADD213PDZ256mbk
VFMADD213PDZ256mbk
VFNMADD213PDZ256mbk
VRCP14PDZ256mbk
VRSQRT14PDZ256mbk
VGETEXPPDZ256mbk
VSQRTPDZ256mbk
VFMADDSUB231PSZ256mbk
VFMSUB231PSZ256mbk
VFNMSUB231PSZ256mbk
VFMSUBADD231PSZ256mbk
VFMADD231PSZ256mbk
VFNMADD231PSZ256mbk
VFMADDSUB132PSZ256mbk
VFMSUB132PSZ256mbk
VFNMSUB132PSZ256mbk
VFMSUBADD132PSZ256mbk
VFMADD132PSZ256mbk
VFNMADD132PSZ256mbk
VFMADDSUB213PSZ256mbk
VFMSUB213PSZ256mbk
VFNMSUB213PSZ256mbk
VFMSUBADD213PSZ256mbk
VFMADD213PSZ256mbk
VFNMADD213PSZ256mbk
VRCP14PSZ256mbk
VRSQRT14PSZ256mbk
VGETEXPPSZ256mbk
VSQRTPSZ256mbk
VFMADDSUB231PDZ128mbk
VFMSUB231PDZ128mbk
VFNMSUB231PDZ128mbk
VFMSUBADD231PDZ128mbk
VFMADD231PDZ128mbk
VFNMADD231PDZ128mbk
VFMADDSUB132PDZ128mbk
VFMSUB132PDZ128mbk
VFNMSUB132PDZ128mbk
VFMSUBADD132PDZ128mbk
VFMADD132PDZ128mbk
VFNMADD132PDZ128mbk
VFMADDSUB213PDZ128mbk
VFMSUB213PDZ128mbk
VFNMSUB213PDZ128mbk
VFMSUBADD213PDZ128mbk
VFMADD213PDZ128mbk
VFNMADD213PDZ128mbk
VRCP14PDZ128mbk
VRSQRT14PDZ128mbk
VGETEXPPDZ128mbk
VSQRTPDZ128mbk
VFMADDSUB231PSZ128mbk
VFMSUB231PSZ128mbk
VFNMSUB231PSZ128mbk
VFMSUBADD231PSZ128mbk
VFMADD231PSZ128mbk
VFNMADD231PSZ128mbk
VFMADDSUB132PSZ128mbk
VFMSUB132PSZ128mbk
VFNMSUB132PSZ128mbk
VFMSUBADD132PSZ128mbk
VFMADD132PSZ128mbk
VFNMADD132PSZ128mbk
VFMADDSUB213PSZ128mbk
VFMSUB213PSZ128mbk
VFNMSUB213PSZ128mbk
VFMSUBADD213PSZ128mbk
VFMADD213PSZ128mbk
VFNMADD213PSZ128mbk
VRCP14PSZ128mbk
VRSQRT14PSZ128mbk
VGETEXPPSZ128mbk
VSQRTPSZ128mbk
VEXP2PDmbk
VRCP28PDmbk
VRSQRT28PDmbk
VGETEXPPDmbk
VEXP2PSmbk
VRCP28PSmbk
VRSQRT28PSmbk
VGETEXPPSmbk
VFMADDSUB231PDZmbk
VFMSUB231PDZmbk
VFNMSUB231PDZmbk
VFMSUBADD231PDZmbk
VFMADD231PDZmbk
VFNMADD231PDZmbk
VFMADDSUB132PDZmbk
VFMSUB132PDZmbk
VFNMSUB132PDZmbk
VFMSUBADD132PDZmbk
VFMADD132PDZmbk
VFNMADD132PDZmbk
VFMADDSUB213PDZmbk
VFMSUB213PDZmbk
VFNMSUB213PDZmbk
VFMSUBADD213PDZmbk
VFMADD213PDZmbk
VFNMADD213PDZmbk
VRCP14PDZmbk
VRSQRT14PDZmbk
VSQRTPDZmbk
VFMADDSUB231PSZmbk
VFMSUB231PSZmbk
VFNMSUB231PSZmbk
VFMSUBADD231PSZmbk
VFMADD231PSZmbk
VFNMADD231PSZmbk
VFMADDSUB132PSZmbk
VFMSUB132PSZmbk
VFNMSUB132PSZmbk
VFMSUBADD132PSZmbk
VFMADD132PSZmbk
VFNMADD132PSZmbk
VFMADDSUB213PSZmbk
VFMSUB213PSZmbk
VFNMSUB213PSZmbk
VFMSUBADD213PSZmbk
VFMADD213PSZmbk
VFNMADD213PSZmbk
VRCP14PSZmbk
VRSQRT14PSZmbk
VSQRTPSZmbk
VPERMI2D256rmbk
VPERMT2D256rmbk
VPERMI2PD256rmbk
VPERMT2PD256rmbk
VPERMI2Q256rmbk
VPERMT2Q256rmbk
VPERMI2PS256rmbk
VPERMT2PS256rmbk
VPERMI2W256rmbk
VPERMT2W256rmbk
VPSUBDZ256rmbk
VPADDDZ256rmbk
VPANDDZ256rmbk
VPMULLDZ256rmbk
VPBLENDMDZ256rmbk
VPTESTNMDZ256rmbk
VPERMDZ256rmbk
VPTESTMDZ256rmbk
VPANDNDZ256rmbk
VCVTDQ2PDZ256rmbk
VCVTUDQ2PDZ256rmbk
VCVTQQ2PDZ256rmbk
VCVTUQQ2PDZ256rmbk
VCVTPS2PDZ256rmbk
VSUBPDZ256rmbk
VADDPDZ256rmbk
VANDPDZ256rmbk
VSCALEFPDZ256rmbk
VUNPCKHPDZ256rmbk
VUNPCKLPDZ256rmbk
VMULPDZ256rmbk
VBLENDMPDZ256rmbk
VPERMPDZ256rmbk
VANDNPDZ256rmbk
VMINPDZ256rmbk
VORPDZ256rmbk
VXORPDZ256rmbk
VDIVPDZ256rmbk
VMAXPDZ256rmbk
VPCMPEQDZ256rmbk
VPORDZ256rmbk
VPXORDZ256rmbk
VPABSDZ256rmbk
VPMINSDZ256rmbk
VPMAXSDZ256rmbk
VPCMPGTDZ256rmbk
VPMINUDZ256rmbk
VPMAXUDZ256rmbk
VPSRAVDZ256rmbk
VPSLLVDZ256rmbk
VPROLVDZ256rmbk
VPSRLVDZ256rmbk
VPRORVDZ256rmbk
VPSUBQZ256rmbk
VCVTTPD2DQZ256rmbk
VCVTPD2DQZ256rmbk
VCVTTPS2DQZ256rmbk
VCVTPS2DQZ256rmbk
VPADDQZ256rmbk
VPUNPCKHDQZ256rmbk
VPUNPCKLDQZ256rmbk
VPMULDQZ256rmbk
VPANDQZ256rmbk
VPUNPCKHQDQZ256rmbk
VPUNPCKLQDQZ256rmbk
VCVTTPD2UDQZ256rmbk
VCVTPD2UDQZ256rmbk
VCVTTPS2UDQZ256rmbk
VCVTPS2UDQZ256rmbk
VPMULUDQZ256rmbk
VPMULLQZ256rmbk
VPBLENDMQZ256rmbk
VPTESTNMQZ256rmbk
VPERMQZ256rmbk
VPTESTMQZ256rmbk
VPANDNQZ256rmbk
VCVTTPD2QQZ256rmbk
VCVTPD2QQZ256rmbk
VCVTTPS2QQZ256rmbk
VCVTPS2QQZ256rmbk
VPCMPEQQZ256rmbk
VCVTTPD2UQQZ256rmbk
VCVTPD2UQQZ256rmbk
VCVTTPS2UQQZ256rmbk
VCVTPS2UQQZ256rmbk
VPORQZ256rmbk
VPXORQZ256rmbk
VPABSQZ256rmbk
VPMINSQZ256rmbk
VPMAXSQZ256rmbk
VPCMPGTQZ256rmbk
VPMINUQZ256rmbk
VPMAXUQZ256rmbk
VPSRAVQZ256rmbk
VPSLLVQZ256rmbk
VPROLVQZ256rmbk
VPSRLVQZ256rmbk
VPRORVQZ256rmbk
VCVTPD2PSZ256rmbk
VCVTDQ2PSZ256rmbk
VCVTUDQ2PSZ256rmbk
VCVTQQ2PSZ256rmbk
VCVTUQQ2PSZ256rmbk
VSUBPSZ256rmbk
VADDPSZ256rmbk
VANDPSZ256rmbk
VSCALEFPSZ256rmbk
VUNPCKHPSZ256rmbk
VUNPCKLPSZ256rmbk
VMULPSZ256rmbk
VBLENDMPSZ256rmbk
VPERMPSZ256rmbk
VANDNPSZ256rmbk
VMINPSZ256rmbk
VORPSZ256rmbk
VXORPSZ256rmbk
VDIVPSZ256rmbk
VMAXPSZ256rmbk
VPACKSSDWZ256rmbk
VPACKUSDWZ256rmbk
VPERMI2D128rmbk
VPERMT2D128rmbk
VPERMI2PD128rmbk
VPERMT2PD128rmbk
VPERMI2Q128rmbk
VPERMT2Q128rmbk
VPERMI2PS128rmbk
VPERMT2PS128rmbk
VPERMI2W128rmbk
VPERMT2W128rmbk
VPSUBDZ128rmbk
VPADDDZ128rmbk
VPANDDZ128rmbk
VPMULLDZ128rmbk
VPBLENDMDZ128rmbk
VPTESTNMDZ128rmbk
VPTESTMDZ128rmbk
VPANDNDZ128rmbk
VCVTDQ2PDZ128rmbk
VCVTUDQ2PDZ128rmbk
VCVTQQ2PDZ128rmbk
VCVTUQQ2PDZ128rmbk
VCVTPS2PDZ128rmbk
VSUBPDZ128rmbk
VADDPDZ128rmbk
VANDPDZ128rmbk
VSCALEFPDZ128rmbk
VUNPCKHPDZ128rmbk
VUNPCKLPDZ128rmbk
VMULPDZ128rmbk
VBLENDMPDZ128rmbk
VANDNPDZ128rmbk
VMINPDZ128rmbk
VORPDZ128rmbk
VXORPDZ128rmbk
VDIVPDZ128rmbk
VMAXPDZ128rmbk
VPCMPEQDZ128rmbk
VPORDZ128rmbk
VPXORDZ128rmbk
VPABSDZ128rmbk
VPMINSDZ128rmbk
VPMAXSDZ128rmbk
VPCMPGTDZ128rmbk
VPMINUDZ128rmbk
VPMAXUDZ128rmbk
VPSRAVDZ128rmbk
VPSLLVDZ128rmbk
VPROLVDZ128rmbk
VPSRLVDZ128rmbk
VPRORVDZ128rmbk
VPSUBQZ128rmbk
VCVTTPD2DQZ128rmbk
VCVTPD2DQZ128rmbk
VCVTTPS2DQZ128rmbk
VCVTPS2DQZ128rmbk
VPADDQZ128rmbk
VPUNPCKHDQZ128rmbk
VPUNPCKLDQZ128rmbk
VPMULDQZ128rmbk
VPANDQZ128rmbk
VPUNPCKHQDQZ128rmbk
VPUNPCKLQDQZ128rmbk
VCVTTPD2UDQZ128rmbk
VCVTPD2UDQZ128rmbk
VCVTTPS2UDQZ128rmbk
VCVTPS2UDQZ128rmbk
VPMULUDQZ128rmbk
VPMULLQZ128rmbk
VPBLENDMQZ128rmbk
VPTESTNMQZ128rmbk
VPTESTMQZ128rmbk
VPANDNQZ128rmbk
VCVTTPD2QQZ128rmbk
VCVTPD2QQZ128rmbk
VCVTTPS2QQZ128rmbk
VCVTPS2QQZ128rmbk
VPCMPEQQZ128rmbk
VCVTTPD2UQQZ128rmbk
VCVTPD2UQQZ128rmbk
VCVTTPS2UQQZ128rmbk
VCVTPS2UQQZ128rmbk
VPORQZ128rmbk
VPXORQZ128rmbk
VPABSQZ128rmbk
VPMINSQZ128rmbk
VPMAXSQZ128rmbk
VPCMPGTQZ128rmbk
VPMINUQZ128rmbk
VPMAXUQZ128rmbk
VPSRAVQZ128rmbk
VPSLLVQZ128rmbk
VPROLVQZ128rmbk
VPSRLVQZ128rmbk
VPRORVQZ128rmbk
VCVTPD2PSZ128rmbk
VCVTDQ2PSZ128rmbk
VCVTUDQ2PSZ128rmbk
VCVTQQ2PSZ128rmbk
VCVTUQQ2PSZ128rmbk
VSUBPSZ128rmbk
VADDPSZ128rmbk
VANDPSZ128rmbk
VSCALEFPSZ128rmbk
VUNPCKHPSZ128rmbk
VUNPCKLPSZ128rmbk
VMULPSZ128rmbk
VBLENDMPSZ128rmbk
VANDNPSZ128rmbk
VMINPSZ128rmbk
VORPSZ128rmbk
VXORPSZ128rmbk
VDIVPSZ128rmbk
VMAXPSZ128rmbk
VPACKSSDWZ128rmbk
VPACKUSDWZ128rmbk
VPERMI2Drmbk
VPERMT2Drmbk
VPERMI2PDrmbk
VPERMT2PDrmbk
VPCONFLICTDrmbk
VPLZCNTDrmbk
VPERMI2Qrmbk
VPERMT2Qrmbk
VPCONFLICTQrmbk
VPLZCNTQrmbk
VPERMI2PSrmbk
VPERMT2PSrmbk
VPERMI2Wrmbk
VPERMT2Wrmbk
VPSUBDZrmbk
VPADDDZrmbk
VPANDDZrmbk
VPMULLDZrmbk
VPBLENDMDZrmbk
VPTESTNMDZrmbk
VPERMDZrmbk
VPTESTMDZrmbk
VPANDNDZrmbk
VCVTDQ2PDZrmbk
VCVTUDQ2PDZrmbk
VCVTQQ2PDZrmbk
VCVTUQQ2PDZrmbk
VCVTPS2PDZrmbk
VSUBPDZrmbk
VADDPDZrmbk
VANDPDZrmbk
VSCALEFPDZrmbk
VUNPCKHPDZrmbk
VUNPCKLPDZrmbk
VMULPDZrmbk
VBLENDMPDZrmbk
VPERMPDZrmbk
VANDNPDZrmbk
VMINPDZrmbk
VORPDZrmbk
VXORPDZrmbk
VDIVPDZrmbk
VMAXPDZrmbk
VPCMPEQDZrmbk
VPORDZrmbk
VPXORDZrmbk
VPABSDZrmbk
VPMINSDZrmbk
VPMAXSDZrmbk
VPCMPGTDZrmbk
VPMINUDZrmbk
VPMAXUDZrmbk
VPSRAVDZrmbk
VPSLLVDZrmbk
VPROLVDZrmbk
VPSRLVDZrmbk
VPRORVDZrmbk
VPSUBQZrmbk
VCVTTPD2DQZrmbk
VCVTPD2DQZrmbk
VCVTTPS2DQZrmbk
VCVTPS2DQZrmbk
VPADDQZrmbk
VPUNPCKHDQZrmbk
VPUNPCKLDQZrmbk
VPMULDQZrmbk
VPANDQZrmbk
VPUNPCKHQDQZrmbk
VPUNPCKLQDQZrmbk
VCVTTPD2UDQZrmbk
VCVTPD2UDQZrmbk
VCVTTPS2UDQZrmbk
VCVTPS2UDQZrmbk
VPMULUDQZrmbk
VPMULLQZrmbk
VPBLENDMQZrmbk
VPTESTNMQZrmbk
VPERMQZrmbk
VPTESTMQZrmbk
VPANDNQZrmbk
VCVTTPD2QQZrmbk
VCVTPD2QQZrmbk
VCVTTPS2QQZrmbk
VCVTPS2QQZrmbk
VPCMPEQQZrmbk
VCVTTPD2UQQZrmbk
VCVTPD2UQQZrmbk
VCVTTPS2UQQZrmbk
VCVTPS2UQQZrmbk
VPORQZrmbk
VPXORQZrmbk
VPABSQZrmbk
VPMINSQZrmbk
VPMAXSQZrmbk
VPCMPGTQZrmbk
VPMINUQZrmbk
VPMAXUQZrmbk
VPSRAVQZrmbk
VPSLLVQZrmbk
VPROLVQZrmbk
VPSRLVQZrmbk
VPRORVQZrmbk
VCVTPD2PSZrmbk
VCVTDQ2PSZrmbk
VCVTUDQ2PSZrmbk
VCVTQQ2PSZrmbk
VCVTUQQ2PSZrmbk
VSUBPSZrmbk
VADDPSZrmbk
VANDPSZrmbk
VSCALEFPSZrmbk
VUNPCKHPSZrmbk
VUNPCKLPSZrmbk
VMULPSZrmbk
VBLENDMPSZrmbk
VPERMPSZrmbk
VANDNPSZrmbk
VMINPSZrmbk
VORPSZrmbk
VXORPSZrmbk
VDIVPSZrmbk
VMAXPSZrmbk
VPACKSSDWZrmbk
VPACKUSDWZrmbk
VEXP2PDrbk
VRCP28PDrbk
VRSQRT28PDrbk
VGETEXPPDrbk
VRCP28SDrbk
VRSQRT28SDrbk
VRNDSCALESDrbk
VGETEXPSDrbk
VEXP2PSrbk
VRCP28PSrbk
VRSQRT28PSrbk
VGETEXPPSrbk
VRCP28SSrbk
VRSQRT28SSrbk
VRNDSCALESSrbk
VGETEXPSSrbk
VFMADDSUB231PDZrbk
VFMSUB231PDZrbk
VFNMSUB231PDZrbk
VFMSUBADD231PDZrbk
VFMADD231PDZrbk
VFNMADD231PDZrbk
VFMADDSUB132PDZrbk
VFMSUB132PDZrbk
VFNMSUB132PDZrbk
VFMSUBADD132PDZrbk
VFMADD132PDZrbk
VFNMADD132PDZrbk
VFMADDSUB213PDZrbk
VFMSUB213PDZrbk
VFNMSUB213PDZrbk
VFMSUBADD213PDZrbk
VFMADD213PDZrbk
VFNMADD213PDZrbk
VSUBPDZrbk
VADDPDZrbk
VSCALEFPDZrbk
VMULPDZrbk
VMINPDZrbk
VSQRTPDZrbk
VDIVPDZrbk
VMAXPDZrbk
VFMADDSUB231PSZrbk
VFMSUB231PSZrbk
VFNMSUB231PSZrbk
VFMSUBADD231PSZrbk
VFMADD231PSZrbk
VFNMADD231PSZrbk
VFMADDSUB132PSZrbk
VFMSUB132PSZrbk
VFNMSUB132PSZrbk
VFMSUBADD132PSZrbk
VFMADD132PSZrbk
VFNMADD132PSZrbk
VFMADDSUB213PSZrbk
VFMSUB213PSZrbk
VFNMSUB213PSZrbk
VFMSUBADD213PSZrbk
VFMADD213PSZrbk
VFNMADD213PSZrbk
VSUBPSZrbk
VADDPSZrbk
VSCALEFPSZrbk
VMULPSZrbk
VMINPSZrbk
VSQRTPSZrbk
VDIVPSZrbk
VMAXPSZrbk
VSCALEFSDZ128rrbk
VSCALEFSSZ128rrbk
VCVTQQ2PDZrrbk
VCVTUQQ2PDZrrbk
VCVTPS2PDZrrbk
VSUBSDZrrbk
VADDSDZrrbk
VMULSDZrrbk
VMINSDZrrbk
VDIVSDZrrbk
VMAXSDZrrbk
VCVTTPD2DQZrrbk
VCVTPD2DQZrrbk
VCVTTPS2DQZrrbk
VCVTPS2DQZrrbk
VCVTTPD2UDQZrrbk
VCVTPD2UDQZrrbk
VCVTTPS2UDQZrrbk
VCVTPS2UDQZrrbk
VCVTTPD2QQZrrbk
VCVTPD2QQZrrbk
VCVTTPS2QQZrrbk
VCVTPS2QQZrrbk
VCVTTPD2UQQZrrbk
VCVTPD2UQQZrrbk
VCVTTPS2UQQZrrbk
VCVTPS2UQQZrrbk
VCVTPD2PSZrrbk
VCVTDQ2PSZrrbk
VCVTUDQ2PSZrrbk
VCVTQQ2PSZrrbk
VCVTUQQ2PSZrrbk
VSUBSSZrrbk
VADDSSZrrbk
VMULSSZrrbk
VMINSSZrrbk
VDIVSSZrrbk
VMAXSSZrrbk
VPSRADZ256mbik
VPSHUFDZ256mbik
VPSLLDZ256mbik
VPROLDZ256mbik
VPSRLDZ256mbik
VPERMPDZ256mbik
VPRORDZ256mbik
VPSRAQZ256mbik
VPSLLQZ256mbik
VPROLQZ256mbik
VPSRLQZ256mbik
VPERMQZ256mbik
VPRORQZ256mbik
VPSRADZ128mbik
VPSHUFDZ128mbik
VPSLLDZ128mbik
VPROLDZ128mbik
VPSRLDZ128mbik
VPRORDZ128mbik
VPSRAQZ128mbik
VPSLLQZ128mbik
VPROLQZ128mbik
VPSRLQZ128mbik
VPRORQZ128mbik
VPSRADZmbik
VPSHUFDZmbik
VPSLLDZmbik
VPROLDZmbik
VPSRLDZmbik
VPERMPDZmbik
VPRORDZmbik
VPSRAQZmbik
VPSLLQZmbik
VPROLQZmbik
VPSRLQZmbik
VPERMQZmbik
VPRORQZmbik
VSHUFF64X2Z256rmbik
VSHUFI64X2Z256rmbik
VSHUFF32X4Z256rmbik
VSHUFI32X4Z256rmbik
VALIGNDZ256rmbik
VREDUCEPDZ256rmbik
VRANGEPDZ256rmbik
VRNDSCALEPDZ256rmbik
VFIXUPIMMPDZ256rmbik
VCMPPDZ256rmbik
VALIGND_FPZ256rmbik
VALIGNQ_FPZ256rmbik
VALIGNQZ256rmbik
VREDUCEPSZ256rmbik
VRANGEPSZ256rmbik
VRNDSCALEPSZ256rmbik
VFIXUPIMMPSZ256rmbik
VCMPPSZ256rmbik
VALIGNDZ128rmbik
VREDUCEPDZ128rmbik
VRANGEPDZ128rmbik
VRNDSCALEPDZ128rmbik
VFIXUPIMMPDZ128rmbik
VCMPPDZ128rmbik
VALIGND_FPZ128rmbik
VALIGNQ_FPZ128rmbik
VALIGNQZ128rmbik
VREDUCEPSZ128rmbik
VRANGEPSZ128rmbik
VRNDSCALEPSZ128rmbik
VFIXUPIMMPSZ128rmbik
VCMPPSZ128rmbik
VSHUFF64X2Zrmbik
VSHUFI64X2Zrmbik
VSHUFF32X4Zrmbik
VSHUFI32X4Zrmbik
VALIGNDZrmbik
VREDUCEPDZrmbik
VRANGEPDZrmbik
VRNDSCALEPDZrmbik
VFIXUPIMMPDZrmbik
VCMPPDZrmbik
VALIGND_FPZrmbik
VALIGNQ_FPZrmbik
VALIGNQZrmbik
VREDUCEPSZrmbik
VRANGEPSZrmbik
VRNDSCALEPSZrmbik
VFIXUPIMMPSZrmbik
VCMPPSZrmbik
VPSRADZ256mik
VPSHUFDZ256mik
VPSLLDZ256mik
VPROLDZ256mik
VPSRLDZ256mik
VPERMPDZ256mik
VPRORDZ256mik
VPSRAQZ256mik
VPSLLQZ256mik
VPROLQZ256mik
VPSRLQZ256mik
VPERMQZ256mik
VPRORQZ256mik
VPSRAWZ256mik
VPSHUFHWZ256mik
VPSHUFLWZ256mik
VPSLLWZ256mik
VPSRLWZ256mik
VPSRADZ128mik
VPSHUFDZ128mik
VPSLLDZ128mik
VPROLDZ128mik
VPSRLDZ128mik
VPRORDZ128mik
VPSRAQZ128mik
VPSLLQZ128mik
VPROLQZ128mik
VPSRLQZ128mik
VPRORQZ128mik
VPSRAWZ128mik
VPSHUFHWZ128mik
VPSHUFLWZ128mik
VPSLLWZ128mik
VPSRLWZ128mik
VPSRADZmik
VPSHUFDZmik
VPSLLDZmik
VPROLDZmik
VPSRLDZmik
VPERMPDZmik
VPRORDZmik
VPSRAQZmik
VPSLLQZmik
VPROLQZmik
VPSRLQZmik
VPERMQZmik
VPRORQZmik
VPSRAWZmik
VPSHUFHWZmik
VPSHUFLWZmik
VPSLLWZmik
VPSRLWZmik
VSHUFF64X2Z256rmik
VSHUFI64X2Z256rmik
VSHUFF32X4Z256rmik
VSHUFI32X4Z256rmik
VPCMPBZ256rmik
VPCMPUBZ256rmik
VALIGNDZ256rmik
VREDUCEPDZ256rmik
VRANGEPDZ256rmik
VRNDSCALEPDZ256rmik
VPCMPDZ256rmik
VFIXUPIMMPDZ256rmik
VCMPPDZ256rmik
VPCMPUDZ256rmik
VALIGND_FPZ256rmik
VALIGNQ_FPZ256rmik
VALIGNQZ256rmik
VPCMPQZ256rmik
VPCMPUQZ256rmik
VREDUCEPSZ256rmik
VRANGEPSZ256rmik
VRNDSCALEPSZ256rmik
VFIXUPIMMPSZ256rmik
VCMPPSZ256rmik
VPCMPWZ256rmik
VPCMPUWZ256rmik
VPCMPBZ128rmik
VPCMPUBZ128rmik
VALIGNDZ128rmik
VREDUCEPDZ128rmik
VRANGEPDZ128rmik
VRNDSCALEPDZ128rmik
VPCMPDZ128rmik
VFIXUPIMMPDZ128rmik
VCMPPDZ128rmik
VREDUCESDZ128rmik
VRANGESDZ128rmik
VFIXUPIMMSDZ128rmik
VPCMPUDZ128rmik
VALIGND_FPZ128rmik
VALIGNQ_FPZ128rmik
VALIGNQZ128rmik
VPCMPQZ128rmik
VPCMPUQZ128rmik
VREDUCEPSZ128rmik
VRANGEPSZ128rmik
VRNDSCALEPSZ128rmik
VFIXUPIMMPSZ128rmik
VCMPPSZ128rmik
VREDUCESSZ128rmik
VRANGESSZ128rmik
VFIXUPIMMSSZ128rmik
VPCMPWZ128rmik
VPCMPUWZ128rmik
VSHUFF64X2Zrmik
VSHUFI64X2Zrmik
VSHUFF32X4Zrmik
VSHUFI32X4Zrmik
VPCMPBZrmik
VPCMPUBZrmik
VALIGNDZrmik
VREDUCEPDZrmik
VRANGEPDZrmik
VRNDSCALEPDZrmik
VPCMPDZrmik
VFIXUPIMMPDZrmik
VCMPPDZrmik
VPCMPUDZrmik
VALIGND_FPZrmik
VALIGNQ_FPZrmik
VALIGNQZrmik
VPCMPQZrmik
VPCMPUQZrmik
VREDUCEPSZrmik
VRANGEPSZrmik
VRNDSCALEPSZrmik
VFIXUPIMMPSZrmik
VCMPPSZrmik
VPCMPWZrmik
VPCMPUWZrmik
VPSRADZ256rik
VPSHUFDZ256rik
VPSLLDZ256rik
VPROLDZ256rik
VPSRLDZ256rik
VPERMPDZ256rik
VPRORDZ256rik
VPSRAQZ256rik
VPSLLQZ256rik
VPROLQZ256rik
VPSRLQZ256rik
VPERMQZ256rik
VPRORQZ256rik
VPSRAWZ256rik
VPSHUFHWZ256rik
VPSHUFLWZ256rik
VPSLLWZ256rik
VPSRLWZ256rik
VPSRADZ128rik
VPSHUFDZ128rik
VPSLLDZ128rik
VPROLDZ128rik
VPSRLDZ128rik
VPRORDZ128rik
VPSRAQZ128rik
VPSLLQZ128rik
VPROLQZ128rik
VPSRLQZ128rik
VPRORQZ128rik
VPSRAWZ128rik
VPSHUFHWZ128rik
VPSHUFLWZ128rik
VPSLLWZ128rik
VPSRLWZ128rik
VPSRADZrik
VPSHUFDZrik
VPSLLDZrik
VPROLDZrik
VPSRLDZrik
VPERMPDZrik
VPRORDZrik
VPSRAQZrik
VPSLLQZrik
VPROLQZrik
VPSRLQZrik
VPERMQZrik
VPRORQZrik
VPSRAWZrik
VPSHUFHWZrik
VPSHUFLWZrik
VPSLLWZrik
VPSRLWZrik
VSHUFF64X2Z256rrik
VSHUFI64X2Z256rrik
VSHUFF32X4Z256rrik
VSHUFI32X4Z256rrik
VPCMPBZ256rrik
VPCMPUBZ256rrik
VALIGNDZ256rrik
VREDUCEPDZ256rrik
VRANGEPDZ256rrik
VRNDSCALEPDZ256rrik
VPCMPDZ256rrik
VFIXUPIMMPDZ256rrik
VCMPPDZ256rrik
VPCMPUDZ256rrik
VALIGND_FPZ256rrik
VALIGNQ_FPZ256rrik
VALIGNQZ256rrik
VPCMPQZ256rrik
VPCMPUQZ256rrik
VREDUCEPSZ256rrik
VRANGEPSZ256rrik
VRNDSCALEPSZ256rrik
VFIXUPIMMPSZ256rrik
VCMPPSZ256rrik
VPCMPWZ256rrik
VPCMPUWZ256rrik
VPCMPBZ128rrik
VPCMPUBZ128rrik
VALIGNDZ128rrik
VREDUCEPDZ128rrik
VRANGEPDZ128rrik
VRNDSCALEPDZ128rrik
VPCMPDZ128rrik
VFIXUPIMMPDZ128rrik
VCMPPDZ128rrik
VREDUCESDZ128rrik
VRANGESDZ128rrik
VFIXUPIMMSDZ128rrik
VPCMPUDZ128rrik
VALIGND_FPZ128rrik
VALIGNQ_FPZ128rrik
VALIGNQZ128rrik
VPCMPQZ128rrik
VPCMPUQZ128rrik
VREDUCEPSZ128rrik
VRANGEPSZ128rrik
VRNDSCALEPSZ128rrik
VFIXUPIMMPSZ128rrik
VCMPPSZ128rrik
VREDUCESSZ128rrik
VRANGESSZ128rrik
VFIXUPIMMSSZ128rrik
VPCMPWZ128rrik
VPCMPUWZ128rrik
VSHUFF64X2Zrrik
VSHUFI64X2Zrrik
VSHUFF32X4Zrrik
VSHUFI32X4Zrrik
VPCMPBZrrik
VPCMPUBZrrik
VALIGNDZrrik
VREDUCEPDZrrik
VRANGEPDZrrik
VRNDSCALEPDZrrik
VPCMPDZrrik
VFIXUPIMMPDZrrik
VCMPPDZrrik
VPCMPUDZrrik
VALIGND_FPZrrik
VALIGNQ_FPZrrik
VALIGNQZrrik
VPCMPQZrrik
VPCMPUQZrrik
VREDUCEPSZrrik
VRANGEPSZrrik
VRNDSCALEPSZrrik
VFIXUPIMMPSZrrik
VCMPPSZrrik
VPCMPWZrrik
VPCMPUWZrrik
KMOVBkk
KMOVDkk
KMOVQkk
KMOVWkk
VFMADDSUB231PDZ256mk
VFMSUB231PDZ256mk
VFNMSUB231PDZ256mk
VFMSUBADD231PDZ256mk
VFMADD231PDZ256mk
VFNMADD231PDZ256mk
VFMADDSUB132PDZ256mk
VFMSUB132PDZ256mk
VFNMSUB132PDZ256mk
VFMSUBADD132PDZ256mk
VFMADD132PDZ256mk
VFNMADD132PDZ256mk
VFMADDSUB213PDZ256mk
VFMSUB213PDZ256mk
VFNMSUB213PDZ256mk
VFMSUBADD213PDZ256mk
VFMADD213PDZ256mk
VFNMADD213PDZ256mk
VRCP14PDZ256mk
VRSQRT14PDZ256mk
VGETEXPPDZ256mk
VSQRTPDZ256mk
VBROADCASTSDZ256mk
VFMADDSUB231PSZ256mk
VFMSUB231PSZ256mk
VFNMSUB231PSZ256mk
VFMSUBADD231PSZ256mk
VFMADD231PSZ256mk
VFNMADD231PSZ256mk
VFMADDSUB132PSZ256mk
VFMSUB132PSZ256mk
VFNMSUB132PSZ256mk
VFMSUBADD132PSZ256mk
VFMADD132PSZ256mk
VFNMADD132PSZ256mk
VFMADDSUB213PSZ256mk
VFMSUB213PSZ256mk
VFNMSUB213PSZ256mk
VFMSUBADD213PSZ256mk
VFMADD213PSZ256mk
VFNMADD213PSZ256mk
VRCP14PSZ256mk
VRSQRT14PSZ256mk
VGETEXPPSZ256mk
VSQRTPSZ256mk
VBROADCASTSSZ256mk
VFMADDSUB231PDZ128mk
VFMSUB231PDZ128mk
VFNMSUB231PDZ128mk
VFMSUBADD231PDZ128mk
VFMADD231PDZ128mk
VFNMADD231PDZ128mk
VFMADDSUB132PDZ128mk
VFMSUB132PDZ128mk
VFNMSUB132PDZ128mk
VFMSUBADD132PDZ128mk
VFMADD132PDZ128mk
VFNMADD132PDZ128mk
VFMADDSUB213PDZ128mk
VFMSUB213PDZ128mk
VFNMSUB213PDZ128mk
VFMSUBADD213PDZ128mk
VFMADD213PDZ128mk
VFNMADD213PDZ128mk
VRCP14PDZ128mk
VRSQRT14PDZ128mk
VGETEXPPDZ128mk
VSQRTPDZ128mk
VFMADDSUB231PSZ128mk
VFMSUB231PSZ128mk
VFNMSUB231PSZ128mk
VFMSUBADD231PSZ128mk
VFMADD231PSZ128mk
VFNMADD231PSZ128mk
VFMADDSUB132PSZ128mk
VFMSUB132PSZ128mk
VFNMSUB132PSZ128mk
VFMSUBADD132PSZ128mk
VFMADD132PSZ128mk
VFNMADD132PSZ128mk
VFMADDSUB213PSZ128mk
VFMSUB213PSZ128mk
VFNMSUB213PSZ128mk
VFMSUBADD213PSZ128mk
VFMADD213PSZ128mk
VFNMADD213PSZ128mk
VRCP14PSZ128mk
VRSQRT14PSZ128mk
VGETEXPPSZ128mk
VSQRTPSZ128mk
VBROADCASTSSZ128mk
KMOVBmk
VEXP2PDmk
VRCP28PDmk
VRSQRT28PDmk
VGETEXPPDmk
VRCP28SDmk
VRSQRT28SDmk
VRNDSCALESDmk
VGETEXPSDmk
KMOVDmk
KMOVQmk
VEXP2PSmk
VRCP28PSmk
VRSQRT28PSmk
VGETEXPPSmk
VRCP28SSmk
VRSQRT28SSmk
VRNDSCALESSmk
VGETEXPSSmk
KMOVWmk
VFMADDSUB231PDZmk
VFMSUB231PDZmk
VFNMSUB231PDZmk
VFMSUBADD231PDZmk
VFMADD231PDZmk
VFNMADD231PDZmk
VFMADDSUB132PDZmk
VFMSUB132PDZmk
VFNMSUB132PDZmk
VFMSUBADD132PDZmk
VFMADD132PDZmk
VFNMADD132PDZmk
VFMADDSUB213PDZmk
VFMSUB213PDZmk
VFNMSUB213PDZmk
VFMSUBADD213PDZmk
VFMADD213PDZmk
VFNMADD213PDZmk
VRCP14PDZmk
VRSQRT14PDZmk
VSQRTPDZmk
VBROADCASTSDZmk
VFMADDSUB231PSZmk
VFMSUB231PSZmk
VFNMSUB231PSZmk
VFMSUBADD231PSZmk
VFMADD231PSZmk
VFNMADD231PSZmk
VFMADDSUB132PSZmk
VFMSUB132PSZmk
VFNMSUB132PSZmk
VFMSUBADD132PSZmk
VFMADD132PSZmk
VFNMADD132PSZmk
VFMADDSUB213PSZmk
VFMSUB213PSZmk
VFNMSUB213PSZmk
VFMSUBADD213PSZmk
VFMADD213PSZmk
VFNMADD213PSZmk
VRCP14PSZmk
VRSQRT14PSZmk
VSQRTPSZmk
VBROADCASTSSZmk
VBROADCASTF64X2rmk
VBROADCASTI64X2rmk
VBROADCASTF32X4rmk
VBROADCASTI32X4rmk
VBROADCASTF64X4rmk
VBROADCASTI64X4rmk
VPERMI2D256rmk
VPERMT2D256rmk
VPERMI2PD256rmk
VPERMT2PD256rmk
VPERMI2Q256rmk
VPERMT2Q256rmk
VPERMI2PS256rmk
VPERMT2PS256rmk
VPERMI2W256rmk
VPERMT2W256rmk
VMOVDQA32Z256rmk
VMOVDQU32Z256rmk
VMOVDQA64Z256rmk
VMOVDQU64Z256rmk
VBROADCASTF32X4Z256rmk
VBROADCASTI32X4Z256rmk
VMOVDQU16Z256rmk
VMOVDQU8Z256rmk
VPSUBBZ256rmk
VPADDBZ256rmk
VPSHUFBZ256rmk
VPAVGBZ256rmk
VPBLENDMBZ256rmk
VPTESTNMBZ256rmk
VPTESTMBZ256rmk
VPCMPEQBZ256rmk
VPABSBZ256rmk
VPSUBSBZ256rmk
VPADDSBZ256rmk
VPMINSBZ256rmk
VPSUBUSBZ256rmk
VPADDUSBZ256rmk
VPMAXSBZ256rmk
VPCMPGTBZ256rmk
VPMINUBZ256rmk
VPMAXUBZ256rmk
VPACKSSWBZ256rmk
VPACKUSWBZ256rmk
VPSRADZ256rmk
VPSUBDZ256rmk
VPMOVSXBDZ256rmk
VPMOVZXBDZ256rmk
VPADDDZ256rmk
VPANDDZ256rmk
VPEXPANDDZ256rmk
VPSLLDZ256rmk
VPMULLDZ256rmk
VPSRLDZ256rmk
VPBLENDMDZ256rmk
VPTESTNMDZ256rmk
VPERMDZ256rmk
VPTESTMDZ256rmk
VPANDNDZ256rmk
VCVTDQ2PDZ256rmk
VCVTUDQ2PDZ256rmk
VCVTQQ2PDZ256rmk
VCVTUQQ2PDZ256rmk
VCVTPS2PDZ256rmk
VMOVAPDZ256rmk
VSUBPDZ256rmk
VADDPDZ256rmk
VEXPANDPDZ256rmk
VANDPDZ256rmk
VSCALEFPDZ256rmk
VUNPCKHPDZ256rmk
VUNPCKLPDZ256rmk
VMULPDZ256rmk
VBLENDMPDZ256rmk
VPERMPDZ256rmk
VANDNPDZ256rmk
VMINPDZ256rmk
VORPDZ256rmk
VXORPDZ256rmk
VMOVUPDZ256rmk
VDIVPDZ256rmk
VMAXPDZ256rmk
VPCMPEQDZ256rmk
VPORDZ256rmk
VPXORDZ256rmk
VPABSDZ256rmk
VPMINSDZ256rmk
VPMAXSDZ256rmk
VPCMPGTDZ256rmk
VPMINUDZ256rmk
VPMAXUDZ256rmk
VPSRAVDZ256rmk
VPSLLVDZ256rmk
VPROLVDZ256rmk
VPSRLVDZ256rmk
VPRORVDZ256rmk
VPMADDWDZ256rmk
VPUNPCKHWDZ256rmk
VPUNPCKLWDZ256rmk
VPMOVSXWDZ256rmk
VPMOVZXWDZ256rmk
VPSRAQZ256rmk
VPSUBQZ256rmk
VPMOVSXBQZ256rmk
VPMOVZXBQZ256rmk
VCVTTPD2DQZ256rmk
VCVTPD2DQZ256rmk
VCVTTPS2DQZ256rmk
VCVTPS2DQZ256rmk
VPADDQZ256rmk
VPUNPCKHDQZ256rmk
VPUNPCKLDQZ256rmk
VPMULDQZ256rmk
VPANDQZ256rmk
VPEXPANDQZ256rmk
VPUNPCKHQDQZ256rmk
VPUNPCKLQDQZ256rmk
VCVTTPD2UDQZ256rmk
VCVTPD2UDQZ256rmk
VCVTTPS2UDQZ256rmk
VCVTPS2UDQZ256rmk
VPMULUDQZ256rmk
VPMOVSXDQZ256rmk
VPMOVZXDQZ256rmk
VPSLLQZ256rmk
VPMULLQZ256rmk
VPSRLQZ256rmk
VPBLENDMQZ256rmk
VPTESTNMQZ256rmk
VPERMQZ256rmk
VPTESTMQZ256rmk
VPANDNQZ256rmk
VCVTTPD2QQZ256rmk
VCVTPD2QQZ256rmk
VCVTTPS2QQZ256rmk
VCVTPS2QQZ256rmk
VPCMPEQQZ256rmk
VCVTTPD2UQQZ256rmk
VCVTPD2UQQZ256rmk
VCVTTPS2UQQZ256rmk
VCVTPS2UQQZ256rmk
VPORQZ256rmk
VPXORQZ256rmk
VPABSQZ256rmk
VPMINSQZ256rmk
VPMAXSQZ256rmk
VPCMPGTQZ256rmk
VPMINUQZ256rmk
VPMAXUQZ256rmk
VPSRAVQZ256rmk
VPSLLVQZ256rmk
VPROLVQZ256rmk
VPSRLVQZ256rmk
VPRORVQZ256rmk
VPMOVSXWQZ256rmk
VPMOVZXWQZ256rmk
VCVTPD2PSZ256rmk
VCVTDQ2PSZ256rmk
VCVTUDQ2PSZ256rmk
VCVTQQ2PSZ256rmk
VCVTUQQ2PSZ256rmk
VMOVAPSZ256rmk
VSUBPSZ256rmk
VADDPSZ256rmk
VEXPANDPSZ256rmk
VANDPSZ256rmk
VSCALEFPSZ256rmk
VUNPCKHPSZ256rmk
VUNPCKLPSZ256rmk
VMULPSZ256rmk
VBLENDMPSZ256rmk
VPERMPSZ256rmk
VANDNPSZ256rmk
VMINPSZ256rmk
VORPSZ256rmk
VXORPSZ256rmk
VMOVUPSZ256rmk
VDIVPSZ256rmk
VMAXPSZ256rmk
VPSRAWZ256rmk
VPUNPCKHBWZ256rmk
VPUNPCKLBWZ256rmk
VPSUBWZ256rmk
VPMOVSXBWZ256rmk
VPMOVZXBWZ256rmk
VPADDWZ256rmk
VPACKSSDWZ256rmk
VPACKUSDWZ256rmk
VPAVGWZ256rmk
VPMULHWZ256rmk
VPSLLWZ256rmk
VPMULLWZ256rmk
VPSRLWZ256rmk
VPBLENDMWZ256rmk
VPTESTNMWZ256rmk
VPERMWZ256rmk
VPTESTMWZ256rmk
VPCMPEQWZ256rmk
VPABSWZ256rmk
VPMADDUBSWZ256rmk
VPSUBSWZ256rmk
VPADDSWZ256rmk
VPMINSWZ256rmk
VPMULHRSWZ256rmk
VPSUBUSWZ256rmk
VPADDUSWZ256rmk
VPMAXSWZ256rmk
VPCMPGTWZ256rmk
VPMULHUWZ256rmk
VPMINUWZ256rmk
VPMAXUWZ256rmk
VPSRAVWZ256rmk
VPSLLVWZ256rmk
VPSRLVWZ256rmk
VPERMI2D128rmk
VPERMT2D128rmk
VPERMI2PD128rmk
VPERMT2PD128rmk
VPERMI2Q128rmk
VPERMT2Q128rmk
VPERMI2PS128rmk
VPERMT2PS128rmk
VPERMI2W128rmk
VPERMT2W128rmk
VMOVDQA32Z128rmk
VMOVDQU32Z128rmk
VBROADCASTF64X2Z128rmk
VBROADCASTI64X2Z128rmk
VMOVDQA64Z128rmk
VMOVDQU64Z128rmk
VMOVDQU16Z128rmk
VMOVDQU8Z128rmk
VPSUBBZ128rmk
VPADDBZ128rmk
VPSHUFBZ128rmk
VPAVGBZ128rmk
VPBLENDMBZ128rmk
VPTESTNMBZ128rmk
VPTESTMBZ128rmk
VPCMPEQBZ128rmk
VPABSBZ128rmk
VPSUBSBZ128rmk
VPADDSBZ128rmk
VPMINSBZ128rmk
VPSUBUSBZ128rmk
VPADDUSBZ128rmk
VPMAXSBZ128rmk
VPCMPGTBZ128rmk
VPMINUBZ128rmk
VPMAXUBZ128rmk
VPACKSSWBZ128rmk
VPACKUSWBZ128rmk
VPSRADZ128rmk
VPSUBDZ128rmk
VPMOVSXBDZ128rmk
VPMOVZXBDZ128rmk
VPADDDZ128rmk
VPANDDZ128rmk
VPEXPANDDZ128rmk
VPSLLDZ128rmk
VPMULLDZ128rmk
VPSRLDZ128rmk
VPBLENDMDZ128rmk
VPTESTNMDZ128rmk
VPTESTMDZ128rmk
VPANDNDZ128rmk
VCVTDQ2PDZ128rmk
VCVTUDQ2PDZ128rmk
VCVTQQ2PDZ128rmk
VCVTUQQ2PDZ128rmk
VCVTPS2PDZ128rmk
VMOVAPDZ128rmk
VSUBPDZ128rmk
VADDPDZ128rmk
VEXPANDPDZ128rmk
VANDPDZ128rmk
VSCALEFPDZ128rmk
VUNPCKHPDZ128rmk
VUNPCKLPDZ128rmk
VMULPDZ128rmk
VBLENDMPDZ128rmk
VANDNPDZ128rmk
VMINPDZ128rmk
VORPDZ128rmk
VXORPDZ128rmk
VMOVUPDZ128rmk
VDIVPDZ128rmk
VMAXPDZ128rmk
VPCMPEQDZ128rmk
VPORDZ128rmk
VPXORDZ128rmk
VPABSDZ128rmk
VSCALEFSDZ128rmk
VPMINSDZ128rmk
VPMAXSDZ128rmk
VPCMPGTDZ128rmk
VPMINUDZ128rmk
VPMAXUDZ128rmk
VPSRAVDZ128rmk
VPSLLVDZ128rmk
VPROLVDZ128rmk
VPSRLVDZ128rmk
VPRORVDZ128rmk
VPMADDWDZ128rmk
VPUNPCKHWDZ128rmk
VPUNPCKLWDZ128rmk
VPMOVSXWDZ128rmk
VPMOVZXWDZ128rmk
VPSRAQZ128rmk
VPSUBQZ128rmk
VPMOVSXBQZ128rmk
VPMOVZXBQZ128rmk
VCVTTPD2DQZ128rmk
VCVTPD2DQZ128rmk
VCVTTPS2DQZ128rmk
VCVTPS2DQZ128rmk
VPADDQZ128rmk
VPUNPCKHDQZ128rmk
VPUNPCKLDQZ128rmk
VPMULDQZ128rmk
VPANDQZ128rmk
VPEXPANDQZ128rmk
VPUNPCKHQDQZ128rmk
VPUNPCKLQDQZ128rmk
VCVTTPD2UDQZ128rmk
VCVTPD2UDQZ128rmk
VCVTTPS2UDQZ128rmk
VCVTPS2UDQZ128rmk
VPMULUDQZ128rmk
VPMOVSXDQZ128rmk
VPMOVZXDQZ128rmk
VPSLLQZ128rmk
VPMULLQZ128rmk
VPSRLQZ128rmk
VPBLENDMQZ128rmk
VPTESTNMQZ128rmk
VPTESTMQZ128rmk
VPANDNQZ128rmk
VCVTTPD2QQZ128rmk
VCVTPD2QQZ128rmk
VCVTTPS2QQZ128rmk
VCVTPS2QQZ128rmk
VPCMPEQQZ128rmk
VCVTTPD2UQQZ128rmk
VCVTPD2UQQZ128rmk
VCVTTPS2UQQZ128rmk
VCVTPS2UQQZ128rmk
VPORQZ128rmk
VPXORQZ128rmk
VPABSQZ128rmk
VPMINSQZ128rmk
VPMAXSQZ128rmk
VPCMPGTQZ128rmk
VPMINUQZ128rmk
VPMAXUQZ128rmk
VPSRAVQZ128rmk
VPSLLVQZ128rmk
VPROLVQZ128rmk
VPSRLVQZ128rmk
VPRORVQZ128rmk
VPMOVSXWQZ128rmk
VPMOVZXWQZ128rmk
VCVTPD2PSZ128rmk
VCVTDQ2PSZ128rmk
VCVTUDQ2PSZ128rmk
VCVTQQ2PSZ128rmk
VCVTUQQ2PSZ128rmk
VMOVAPSZ128rmk
VSUBPSZ128rmk
VADDPSZ128rmk
VEXPANDPSZ128rmk
VANDPSZ128rmk
VSCALEFPSZ128rmk
VUNPCKHPSZ128rmk
VUNPCKLPSZ128rmk
VMULPSZ128rmk
VBLENDMPSZ128rmk
VANDNPSZ128rmk
VMINPSZ128rmk
VORPSZ128rmk
VXORPSZ128rmk
VMOVUPSZ128rmk
VDIVPSZ128rmk
VMAXPSZ128rmk
VSCALEFSSZ128rmk
VPSRAWZ128rmk
VPUNPCKHBWZ128rmk
VPUNPCKLBWZ128rmk
VPSUBWZ128rmk
VPMOVSXBWZ128rmk
VPMOVZXBWZ128rmk
VPADDWZ128rmk
VPACKSSDWZ128rmk
VPACKUSDWZ128rmk
VPAVGWZ128rmk
VPMULHWZ128rmk
VPSLLWZ128rmk
VPMULLWZ128rmk
VPSRLWZ128rmk
VPBLENDMWZ128rmk
VPTESTNMWZ128rmk
VPERMWZ128rmk
VPTESTMWZ128rmk
VPCMPEQWZ128rmk
VPABSWZ128rmk
VPMADDUBSWZ128rmk
VPSUBSWZ128rmk
VPADDSWZ128rmk
VPMINSWZ128rmk
VPMULHRSWZ128rmk
VPSUBUSWZ128rmk
VPADDUSWZ128rmk
VPMAXSWZ128rmk
VPCMPGTWZ128rmk
VPMULHUWZ128rmk
VPMINUWZ128rmk
VPMAXUWZ128rmk
VPSRAVWZ128rmk
VPSLLVWZ128rmk
VPSRLVWZ128rmk
VBROADCASTF32X8rmk
VBROADCASTI32X8rmk
VPERMI2Drmk
VPERMT2Drmk
VPERMI2PDrmk
VPERMT2PDrmk
VPCONFLICTDrmk
VPLZCNTDrmk
VPERMI2Qrmk
VPERMT2Qrmk
VPCONFLICTQrmk
VPLZCNTQrmk
VPERMI2PSrmk
VPERMT2PSrmk
VPERMI2Wrmk
VPERMT2Wrmk
VMOVDQA32Zrmk
VMOVDQU32Zrmk
VMOVDQA64Zrmk
VMOVDQU64Zrmk
VMOVDQU16Zrmk
VMOVDQU8Zrmk
VPSUBBZrmk
VPADDBZrmk
VPSHUFBZrmk
VPAVGBZrmk
VPBLENDMBZrmk
VPTESTNMBZrmk
VPTESTMBZrmk
VPCMPEQBZrmk
VPABSBZrmk
VPSUBSBZrmk
VPADDSBZrmk
VPMINSBZrmk
VPSUBUSBZrmk
VPADDUSBZrmk
VPMAXSBZrmk
VPCMPGTBZrmk
VPMINUBZrmk
VPMAXUBZrmk
VPACKSSWBZrmk
VPACKUSWBZrmk
VPSRADZrmk
VPSUBDZrmk
VPMOVSXBDZrmk
VPMOVZXBDZrmk
VPADDDZrmk
VPANDDZrmk
VPEXPANDDZrmk
VPSLLDZrmk
VPMULLDZrmk
VPSRLDZrmk
VPBLENDMDZrmk
VPTESTNMDZrmk
VPERMDZrmk
VPTESTMDZrmk
VPANDNDZrmk
VCVTDQ2PDZrmk
VCVTUDQ2PDZrmk
VCVTQQ2PDZrmk
VCVTUQQ2PDZrmk
VCVTPS2PDZrmk
VMOVAPDZrmk
VSUBPDZrmk
VADDPDZrmk
VEXPANDPDZrmk
VANDPDZrmk
VSCALEFPDZrmk
VUNPCKHPDZrmk
VUNPCKLPDZrmk
VMULPDZrmk
VBLENDMPDZrmk
VPERMPDZrmk
VANDNPDZrmk
VMINPDZrmk
VORPDZrmk
VXORPDZrmk
VMOVUPDZrmk
VDIVPDZrmk
VMAXPDZrmk
VPCMPEQDZrmk
VPORDZrmk
VPXORDZrmk
VPABSDZrmk
VPMINSDZrmk
VPMAXSDZrmk
VPCMPGTDZrmk
VPBROADCASTDZrmk
VPMINUDZrmk
VPMAXUDZrmk
VPSRAVDZrmk
VPSLLVDZrmk
VPROLVDZrmk
VPSRLVDZrmk
VPRORVDZrmk
VPMADDWDZrmk
VPUNPCKHWDZrmk
VPUNPCKLWDZrmk
VPMOVSXWDZrmk
VPMOVZXWDZrmk
VPSRAQZrmk
VPSUBQZrmk
VPMOVSXBQZrmk
VPMOVZXBQZrmk
VCVTTPD2DQZrmk
VCVTPD2DQZrmk
VCVTTPS2DQZrmk
VCVTPS2DQZrmk
VPADDQZrmk
VPUNPCKHDQZrmk
VPUNPCKLDQZrmk
VPMULDQZrmk
VPANDQZrmk
VPEXPANDQZrmk
VPUNPCKHQDQZrmk
VPUNPCKLQDQZrmk
VCVTTPD2UDQZrmk
VCVTPD2UDQZrmk
VCVTTPS2UDQZrmk
VCVTPS2UDQZrmk
VPMULUDQZrmk
VPMOVSXDQZrmk
VPMOVZXDQZrmk
VPSLLQZrmk
VPMULLQZrmk
VPSRLQZrmk
VPBLENDMQZrmk
VPTESTNMQZrmk
VPERMQZrmk
VPTESTMQZrmk
VPANDNQZrmk
VCVTTPD2QQZrmk
VCVTPD2QQZrmk
VCVTTPS2QQZrmk
VCVTPS2QQZrmk
VPCMPEQQZrmk
VCVTTPD2UQQZrmk
VCVTPD2UQQZrmk
VCVTTPS2UQQZrmk
VCVTPS2UQQZrmk
VPORQZrmk
VPXORQZrmk
VPABSQZrmk
VPMINSQZrmk
VPMAXSQZrmk
VPCMPGTQZrmk
VPBROADCASTQZrmk
VPMINUQZrmk
VPMAXUQZrmk
VPSRAVQZrmk
VPSLLVQZrmk
VPROLVQZrmk
VPSRLVQZrmk
VPRORVQZrmk
VPMOVSXWQZrmk
VPMOVZXWQZrmk
VCVTPD2PSZrmk
VCVTDQ2PSZrmk
VCVTUDQ2PSZrmk
VCVTQQ2PSZrmk
VCVTUQQ2PSZrmk
VMOVAPSZrmk
VSUBPSZrmk
VADDPSZrmk
VEXPANDPSZrmk
VANDPSZrmk
VSCALEFPSZrmk
VUNPCKHPSZrmk
VUNPCKLPSZrmk
VMULPSZrmk
VBLENDMPSZrmk
VPERMPSZrmk
VANDNPSZrmk
VMINPSZrmk
VORPSZrmk
VXORPSZrmk
VMOVUPSZrmk
VDIVPSZrmk
VMAXPSZrmk
VPSRAWZrmk
VPUNPCKHBWZrmk
VPUNPCKLBWZrmk
VPSUBWZrmk
VPMOVSXBWZrmk
VPMOVZXBWZrmk
VPADDWZrmk
VPACKSSDWZrmk
VPACKUSDWZrmk
VPAVGWZrmk
VPMULHWZrmk
VPSLLWZrmk
VPMULLWZrmk
VPSRLWZrmk
VPBLENDMWZrmk
VPTESTNMWZrmk
VPERMWZrmk
VPTESTMWZrmk
VPCMPEQWZrmk
VPABSWZrmk
VPMADDUBSWZrmk
VPSUBSWZrmk
VPADDSWZrmk
VPMINSWZrmk
VPMULHRSWZrmk
VPSUBUSWZrmk
VPADDUSWZrmk
VPMAXSWZrmk
VPCMPGTWZrmk
VPMULHUWZrmk
VPMINUWZrmk
VPMAXUWZrmk
VPSRAVWZrmk
VPSLLVWZrmk
VPSRLVWZrmk
VFMADDSUB231PDZ256rk
VFMSUB231PDZ256rk
VFNMSUB231PDZ256rk
VFMSUBADD231PDZ256rk
VFMADD231PDZ256rk
VFNMADD231PDZ256rk
VFMADDSUB132PDZ256rk
VFMSUB132PDZ256rk
VFNMSUB132PDZ256rk
VFMSUBADD132PDZ256rk
VFMADD132PDZ256rk
VFNMADD132PDZ256rk
VFMADDSUB213PDZ256rk
VFMSUB213PDZ256rk
VFNMSUB213PDZ256rk
VFMSUBADD213PDZ256rk
VFMADD213PDZ256rk
VFNMADD213PDZ256rk
VRCP14PDZ256rk
VRSQRT14PDZ256rk
VGETEXPPDZ256rk
VSQRTPDZ256rk
VBROADCASTSDZ256rk
VFMADDSUB231PSZ256rk
VFMSUB231PSZ256rk
VFNMSUB231PSZ256rk
VFMSUBADD231PSZ256rk
VFMADD231PSZ256rk
VFNMADD231PSZ256rk
VFMADDSUB132PSZ256rk
VFMSUB132PSZ256rk
VFNMSUB132PSZ256rk
VFMSUBADD132PSZ256rk
VFMADD132PSZ256rk
VFNMADD132PSZ256rk
VFMADDSUB213PSZ256rk
VFMSUB213PSZ256rk
VFNMSUB213PSZ256rk
VFMSUBADD213PSZ256rk
VFMADD213PSZ256rk
VFNMADD213PSZ256rk
VRCP14PSZ256rk
VRSQRT14PSZ256rk
VGETEXPPSZ256rk
VSQRTPSZ256rk
VBROADCASTSSZ256rk
VPBROADCASTBrZ256rk
VPBROADCASTDrZ256rk
VPBROADCASTQrZ256rk
VPBROADCASTWrZ256rk
VFMADDSUB231PDZ128rk
VFMSUB231PDZ128rk
VFNMSUB231PDZ128rk
VFMSUBADD231PDZ128rk
VFMADD231PDZ128rk
VFNMADD231PDZ128rk
VFMADDSUB132PDZ128rk
VFMSUB132PDZ128rk
VFNMSUB132PDZ128rk
VFMSUBADD132PDZ128rk
VFMADD132PDZ128rk
VFNMADD132PDZ128rk
VFMADDSUB213PDZ128rk
VFMSUB213PDZ128rk
VFNMSUB213PDZ128rk
VFMSUBADD213PDZ128rk
VFMADD213PDZ128rk
VFNMADD213PDZ128rk
VRCP14PDZ128rk
VRSQRT14PDZ128rk
VGETEXPPDZ128rk
VSQRTPDZ128rk
VFMADDSUB231PSZ128rk
VFMSUB231PSZ128rk
VFNMSUB231PSZ128rk
VFMSUBADD231PSZ128rk
VFMADD231PSZ128rk
VFNMADD231PSZ128rk
VFMADDSUB132PSZ128rk
VFMSUB132PSZ128rk
VFNMSUB132PSZ128rk
VFMSUBADD132PSZ128rk
VFMADD132PSZ128rk
VFNMADD132PSZ128rk
VFMADDSUB213PSZ128rk
VFMSUB213PSZ128rk
VFNMSUB213PSZ128rk
VFMSUBADD213PSZ128rk
VFMADD213PSZ128rk
VFNMADD213PSZ128rk
VRCP14PSZ128rk
VRSQRT14PSZ128rk
VGETEXPPSZ128rk
VSQRTPSZ128rk
VBROADCASTSSZ128rk
VPBROADCASTBrZ128rk
VPBROADCASTDrZ128rk
VPBROADCASTQrZ128rk
VPBROADCASTWrZ128rk
KMOVBrk
VEXP2PDrk
VRCP28PDrk
VRSQRT28PDrk
VGETEXPPDrk
VRCP28SDrk
VRSQRT28SDrk
VRNDSCALESDrk
VGETEXPSDrk
KMOVDrk
KMOVQrk
VEXP2PSrk
VRCP28PSrk
VRSQRT28PSrk
VGETEXPPSrk
VRCP28SSrk
VRSQRT28SSrk
VRNDSCALESSrk
VGETEXPSSrk
KMOVWrk
VFMADDSUB231PDZrk
VFMSUB231PDZrk
VFNMSUB231PDZrk
VFMSUBADD231PDZrk
VFMADD231PDZrk
VFNMADD231PDZrk
VFMADDSUB132PDZrk
VFMSUB132PDZrk
VFNMSUB132PDZrk
VFMSUBADD132PDZrk
VFMADD132PDZrk
VFNMADD132PDZrk
VFMADDSUB213PDZrk
VFMSUB213PDZrk
VFNMSUB213PDZrk
VFMSUBADD213PDZrk
VFMADD213PDZrk
VFNMADD213PDZrk
VRCP14PDZrk
VRSQRT14PDZrk
VSQRTPDZrk
VBROADCASTSDZrk
VFMADDSUB231PSZrk
VFMSUB231PSZrk
VFNMSUB231PSZrk
VFMSUBADD231PSZrk
VFMADD231PSZrk
VFNMADD231PSZrk
VFMADDSUB132PSZrk
VFMSUB132PSZrk
VFNMSUB132PSZrk
VFMSUBADD132PSZrk
VFMADD132PSZrk
VFNMADD132PSZrk
VFMADDSUB213PSZrk
VFMSUB213PSZrk
VFNMSUB213PSZrk
VFMSUBADD213PSZrk
VFMADD213PSZrk
VFNMADD213PSZrk
VRCP14PSZrk
VRSQRT14PSZrk
VSQRTPSZrk
VBROADCASTSSZrk
VPBROADCASTBrZrk
VPBROADCASTDrZrk
VPBROADCASTQrZrk
VPBROADCASTWrZrk
VMOVDQA32Z256mrk
VMOVDQU32Z256mrk
VMOVDQA64Z256mrk
VMOVDQU64Z256mrk
VMOVDQU16Z256mrk
VMOVDQU8Z256mrk
VPMOVUSDBZ256mrk
VPMOVSDBZ256mrk
VPMOVDBZ256mrk
VPMOVUSQBZ256mrk
VPMOVSQBZ256mrk
VPMOVQBZ256mrk
VPMOVUSWBZ256mrk
VPMOVSWBZ256mrk
VPMOVWBZ256mrk
VMOVAPDZ256mrk
VCOMPRESSPDZ256mrk
VMOVUPDZ256mrk
VPMOVUSQDZ256mrk
VPMOVSQDZ256mrk
VPMOVQDZ256mrk
VPCOMPRESSDZ256mrk
VPCOMPRESSQZ256mrk
VMOVAPSZ256mrk
VCOMPRESSPSZ256mrk
VMOVUPSZ256mrk
VPMOVUSDWZ256mrk
VPMOVSDWZ256mrk
VPMOVDWZ256mrk
VPMOVUSQWZ256mrk
VPMOVSQWZ256mrk
VPMOVQWZ256mrk
VMOVDQA32Z128mrk
VMOVDQU32Z128mrk
VMOVDQA64Z128mrk
VMOVDQU64Z128mrk
VMOVDQU16Z128mrk
VMOVDQU8Z128mrk
VPMOVUSDBZ128mrk
VPMOVSDBZ128mrk
VPMOVDBZ128mrk
VPMOVUSQBZ128mrk
VPMOVSQBZ128mrk
VPMOVQBZ128mrk
VPMOVUSWBZ128mrk
VPMOVSWBZ128mrk
VPMOVWBZ128mrk
VMOVAPDZ128mrk
VCOMPRESSPDZ128mrk
VMOVUPDZ128mrk
VPMOVUSQDZ128mrk
VPMOVSQDZ128mrk
VPMOVQDZ128mrk
VPCOMPRESSDZ128mrk
VPCOMPRESSQZ128mrk
VMOVAPSZ128mrk
VCOMPRESSPSZ128mrk
VMOVUPSZ128mrk
VPMOVUSDWZ128mrk
VPMOVSDWZ128mrk
VPMOVDWZ128mrk
VPMOVUSQWZ128mrk
VPMOVSQWZ128mrk
VPMOVQWZ128mrk
VMOVDQA32Zmrk
VMOVDQU32Zmrk
VMOVDQA64Zmrk
VMOVDQU64Zmrk
VMOVDQU16Zmrk
VMOVDQU8Zmrk
VPMOVUSDBZmrk
VPMOVSDBZmrk
VPMOVDBZmrk
VPMOVUSQBZmrk
VPMOVSQBZmrk
VPMOVQBZmrk
VPMOVUSWBZmrk
VPMOVSWBZmrk
VPMOVWBZmrk
VMOVAPDZmrk
VCOMPRESSPDZmrk
VMOVUPDZmrk
VPMOVUSQDZmrk
VPMOVSQDZmrk
VPMOVQDZmrk
VPCOMPRESSDZmrk
VMOVSDZmrk
VPCOMPRESSQZmrk
VMOVAPSZmrk
VCOMPRESSPSZmrk
VMOVUPSZmrk
VMOVSSZmrk
VPMOVUSDWZmrk
VPMOVSDWZmrk
VPMOVDWZmrk
VPMOVUSQWZmrk
VPMOVSQWZmrk
VPMOVQWZmrk
VEXTRACTF32x4rrk
VEXTRACTI32x4rrk
VEXTRACTF64x4rrk
VEXTRACTI64x4rrk
VPERMI2D256rrk
VPERMT2D256rrk
VPERMI2PD256rrk
VPERMT2PD256rrk
VPERMI2Q256rrk
VPERMT2Q256rrk
VPERMI2PS256rrk
VPERMT2PS256rrk
VPERMI2W256rrk
VPERMT2W256rrk
VMOVDQA32Z256rrk
VMOVDQU32Z256rrk
VMOVDQA64Z256rrk
VMOVDQU64Z256rrk
VMOVDQU16Z256rrk
VMOVDQU8Z256rrk
VPSUBBZ256rrk
VPADDBZ256rrk
VPMOVUSDBZ256rrk
VPMOVSDBZ256rrk
VPMOVDBZ256rrk
VPSHUFBZ256rrk
VPAVGBZ256rrk
VPBLENDMBZ256rrk
VPTESTNMBZ256rrk
VPTESTMBZ256rrk
VPCMPEQBZ256rrk
VPMOVUSQBZ256rrk
VPMOVSQBZ256rrk
VPMOVQBZ256rrk
VPABSBZ256rrk
VPSUBSBZ256rrk
VPADDSBZ256rrk
VPMINSBZ256rrk
VPSUBUSBZ256rrk
VPADDUSBZ256rrk
VPMAXSBZ256rrk
VPCMPGTBZ256rrk
VPMINUBZ256rrk
VPMAXUBZ256rrk
VPACKSSWBZ256rrk
VPACKUSWBZ256rrk
VPMOVUSWBZ256rrk
VPMOVSWBZ256rrk
VPMOVWBZ256rrk
VPSRADZ256rrk
VPSUBDZ256rrk
VPMOVSXBDZ256rrk
VPMOVZXBDZ256rrk
VPADDDZ256rrk
VPANDDZ256rrk
VPEXPANDDZ256rrk
VPSLLDZ256rrk
VPMULLDZ256rrk
VPSRLDZ256rrk
VPBLENDMDZ256rrk
VPTESTNMDZ256rrk
VPERMDZ256rrk
VPTESTMDZ256rrk
VPANDNDZ256rrk
VCVTDQ2PDZ256rrk
VCVTUDQ2PDZ256rrk
VCVTQQ2PDZ256rrk
VCVTUQQ2PDZ256rrk
VCVTPS2PDZ256rrk
VMOVAPDZ256rrk
VSUBPDZ256rrk
VADDPDZ256rrk
VEXPANDPDZ256rrk
VANDPDZ256rrk
VSCALEFPDZ256rrk
VUNPCKHPDZ256rrk
VUNPCKLPDZ256rrk
VMULPDZ256rrk
VBLENDMPDZ256rrk
VPERMPDZ256rrk
VANDNPDZ256rrk
VMINPDZ256rrk
VORPDZ256rrk
VXORPDZ256rrk
VCOMPRESSPDZ256rrk
VMOVUPDZ256rrk
VDIVPDZ256rrk
VMAXPDZ256rrk
VPCMPEQDZ256rrk
VPMOVUSQDZ256rrk
VPMOVSQDZ256rrk
VPMOVQDZ256rrk
VPORDZ256rrk
VPXORDZ256rrk
VPABSDZ256rrk
VPMINSDZ256rrk
VPCOMPRESSDZ256rrk
VPMAXSDZ256rrk
VPCMPGTDZ256rrk
VPMINUDZ256rrk
VPMAXUDZ256rrk
VPSRAVDZ256rrk
VPSLLVDZ256rrk
VPROLVDZ256rrk
VPSRLVDZ256rrk
VPRORVDZ256rrk
VPMADDWDZ256rrk
VPUNPCKHWDZ256rrk
VPUNPCKLWDZ256rrk
VPMOVSXWDZ256rrk
VPMOVZXWDZ256rrk
VPSRAQZ256rrk
VPSUBQZ256rrk
VPMOVSXBQZ256rrk
VPMOVZXBQZ256rrk
VCVTTPD2DQZ256rrk
VCVTPD2DQZ256rrk
VCVTTPS2DQZ256rrk
VCVTPS2DQZ256rrk
VPADDQZ256rrk
VPUNPCKHDQZ256rrk
VPUNPCKLDQZ256rrk
VPMULDQZ256rrk
VPANDQZ256rrk
VPEXPANDQZ256rrk
VPUNPCKHQDQZ256rrk
VPUNPCKLQDQZ256rrk
VCVTTPD2UDQZ256rrk
VCVTPD2UDQZ256rrk
VCVTTPS2UDQZ256rrk
VCVTPS2UDQZ256rrk
VPMULUDQZ256rrk
VPMOVSXDQZ256rrk
VPMOVZXDQZ256rrk
VPSLLQZ256rrk
VPMULLQZ256rrk
VPSRLQZ256rrk
VPBLENDMQZ256rrk
VPTESTNMQZ256rrk
VPERMQZ256rrk
VPTESTMQZ256rrk
VPANDNQZ256rrk
VCVTTPD2QQZ256rrk
VCVTPD2QQZ256rrk
VCVTTPS2QQZ256rrk
VCVTPS2QQZ256rrk
VPCMPEQQZ256rrk
VCVTTPD2UQQZ256rrk
VCVTPD2UQQZ256rrk
VCVTTPS2UQQZ256rrk
VCVTPS2UQQZ256rrk
VPORQZ256rrk
VPXORQZ256rrk
VPABSQZ256rrk
VPMINSQZ256rrk
VPCOMPRESSQZ256rrk
VPMAXSQZ256rrk
VPCMPGTQZ256rrk
VPMINUQZ256rrk
VPMAXUQZ256rrk
VPSRAVQZ256rrk
VPSLLVQZ256rrk
VPROLVQZ256rrk
VPSRLVQZ256rrk
VPRORVQZ256rrk
VPMOVSXWQZ256rrk
VPMOVZXWQZ256rrk
VCVTPD2PSZ256rrk
VCVTDQ2PSZ256rrk
VCVTUDQ2PSZ256rrk
VCVTQQ2PSZ256rrk
VCVTUQQ2PSZ256rrk
VMOVAPSZ256rrk
VSUBPSZ256rrk
VADDPSZ256rrk
VEXPANDPSZ256rrk
VANDPSZ256rrk
VSCALEFPSZ256rrk
VUNPCKHPSZ256rrk
VUNPCKLPSZ256rrk
VMULPSZ256rrk
VBLENDMPSZ256rrk
VPERMPSZ256rrk
VANDNPSZ256rrk
VMINPSZ256rrk
VORPSZ256rrk
VXORPSZ256rrk
VCOMPRESSPSZ256rrk
VMOVUPSZ256rrk
VDIVPSZ256rrk
VMAXPSZ256rrk
VPSRAWZ256rrk
VPUNPCKHBWZ256rrk
VPUNPCKLBWZ256rrk
VPSUBWZ256rrk
VPMOVSXBWZ256rrk
VPMOVZXBWZ256rrk
VPADDWZ256rrk
VPACKSSDWZ256rrk
VPACKUSDWZ256rrk
VPMOVUSDWZ256rrk
VPMOVSDWZ256rrk
VPMOVDWZ256rrk
VPAVGWZ256rrk
VPMULHWZ256rrk
VPSLLWZ256rrk
VPMULLWZ256rrk
VPSRLWZ256rrk
VPBLENDMWZ256rrk
VPTESTNMWZ256rrk
VPERMWZ256rrk
VPTESTMWZ256rrk
VPCMPEQWZ256rrk
VPMOVUSQWZ256rrk
VPMOVSQWZ256rrk
VPMOVQWZ256rrk
VPABSWZ256rrk
VPMADDUBSWZ256rrk
VPSUBSWZ256rrk
VPADDSWZ256rrk
VPMINSWZ256rrk
VPMULHRSWZ256rrk
VPSUBUSWZ256rrk
VPADDUSWZ256rrk
VPMAXSWZ256rrk
VPCMPGTWZ256rrk
VPMULHUWZ256rrk
VPMINUWZ256rrk
VPMAXUWZ256rrk
VPSRAVWZ256rrk
VPSLLVWZ256rrk
VPSRLVWZ256rrk
VPERMI2D128rrk
VPERMT2D128rrk
VPERMI2PD128rrk
VPERMT2PD128rrk
VPERMI2Q128rrk
VPERMT2Q128rrk
VPERMI2PS128rrk
VPERMT2PS128rrk
VPERMI2W128rrk
VPERMT2W128rrk
VMOVDQA32Z128rrk
VMOVDQU32Z128rrk
VMOVDQA64Z128rrk
VMOVDQU64Z128rrk
VMOVDQU16Z128rrk
VMOVDQU8Z128rrk
VPSUBBZ128rrk
VPADDBZ128rrk
VPMOVUSDBZ128rrk
VPMOVSDBZ128rrk
VPMOVDBZ128rrk
VPSHUFBZ128rrk
VPAVGBZ128rrk
VPBLENDMBZ128rrk
VPTESTNMBZ128rrk
VPTESTMBZ128rrk
VPCMPEQBZ128rrk
VPMOVUSQBZ128rrk
VPMOVSQBZ128rrk
VPMOVQBZ128rrk
VPABSBZ128rrk
VPSUBSBZ128rrk
VPADDSBZ128rrk
VPMINSBZ128rrk
VPSUBUSBZ128rrk
VPADDUSBZ128rrk
VPMAXSBZ128rrk
VPCMPGTBZ128rrk
VPMINUBZ128rrk
VPMAXUBZ128rrk
VPACKSSWBZ128rrk
VPACKUSWBZ128rrk
VPMOVUSWBZ128rrk
VPMOVSWBZ128rrk
VPMOVWBZ128rrk
VPSRADZ128rrk
VPSUBDZ128rrk
VPMOVSXBDZ128rrk
VPMOVZXBDZ128rrk
VPADDDZ128rrk
VPANDDZ128rrk
VPEXPANDDZ128rrk
VPSLLDZ128rrk
VPMULLDZ128rrk
VPSRLDZ128rrk
VPBLENDMDZ128rrk
VPTESTNMDZ128rrk
VPTESTMDZ128rrk
VPANDNDZ128rrk
VCVTDQ2PDZ128rrk
VCVTUDQ2PDZ128rrk
VCVTQQ2PDZ128rrk
VCVTUQQ2PDZ128rrk
VCVTPS2PDZ128rrk
VMOVAPDZ128rrk
VSUBPDZ128rrk
VADDPDZ128rrk
VEXPANDPDZ128rrk
VANDPDZ128rrk
VSCALEFPDZ128rrk
VUNPCKHPDZ128rrk
VUNPCKLPDZ128rrk
VMULPDZ128rrk
VBLENDMPDZ128rrk
VANDNPDZ128rrk
VMINPDZ128rrk
VORPDZ128rrk
VXORPDZ128rrk
VCOMPRESSPDZ128rrk
VMOVUPDZ128rrk
VDIVPDZ128rrk
VMAXPDZ128rrk
VPCMPEQDZ128rrk
VPMOVUSQDZ128rrk
VPMOVSQDZ128rrk
VPMOVQDZ128rrk
VPORDZ128rrk
VPXORDZ128rrk
VPABSDZ128rrk
VSCALEFSDZ128rrk
VPMINSDZ128rrk
VPCOMPRESSDZ128rrk
VPMAXSDZ128rrk
VPCMPGTDZ128rrk
VPMINUDZ128rrk
VPMAXUDZ128rrk
VPSRAVDZ128rrk
VPSLLVDZ128rrk
VPROLVDZ128rrk
VPSRLVDZ128rrk
VPRORVDZ128rrk
VPMADDWDZ128rrk
VPUNPCKHWDZ128rrk
VPUNPCKLWDZ128rrk
VPMOVSXWDZ128rrk
VPMOVZXWDZ128rrk
VPSRAQZ128rrk
VPSUBQZ128rrk
VPMOVSXBQZ128rrk
VPMOVZXBQZ128rrk
VCVTTPD2DQZ128rrk
VCVTPD2DQZ128rrk
VCVTTPS2DQZ128rrk
VCVTPS2DQZ128rrk
VPADDQZ128rrk
VPUNPCKHDQZ128rrk
VPUNPCKLDQZ128rrk
VPMULDQZ128rrk
VPANDQZ128rrk
VPEXPANDQZ128rrk
VPUNPCKHQDQZ128rrk
VPUNPCKLQDQZ128rrk
VCVTTPD2UDQZ128rrk
VCVTPD2UDQZ128rrk
VCVTTPS2UDQZ128rrk
VCVTPS2UDQZ128rrk
VPMULUDQZ128rrk
VPMOVSXDQZ128rrk
VPMOVZXDQZ128rrk
VPSLLQZ128rrk
VPMULLQZ128rrk
VPSRLQZ128rrk
VPBLENDMQZ128rrk
VPTESTNMQZ128rrk
VPTESTMQZ128rrk
VPANDNQZ128rrk
VCVTTPD2QQZ128rrk
VCVTPD2QQZ128rrk
VCVTTPS2QQZ128rrk
VCVTPS2QQZ128rrk
VPCMPEQQZ128rrk
VCVTTPD2UQQZ128rrk
VCVTPD2UQQZ128rrk
VCVTTPS2UQQZ128rrk
VCVTPS2UQQZ128rrk
VPORQZ128rrk
VPXORQZ128rrk
VPABSQZ128rrk
VPMINSQZ128rrk
VPCOMPRESSQZ128rrk
VPMAXSQZ128rrk
VPCMPGTQZ128rrk
VPMINUQZ128rrk
VPMAXUQZ128rrk
VPSRAVQZ128rrk
VPSLLVQZ128rrk
VPROLVQZ128rrk
VPSRLVQZ128rrk
VPRORVQZ128rrk
VPMOVSXWQZ128rrk
VPMOVZXWQZ128rrk
VCVTPD2PSZ128rrk
VCVTDQ2PSZ128rrk
VCVTUDQ2PSZ128rrk
VCVTQQ2PSZ128rrk
VCVTUQQ2PSZ128rrk
VMOVAPSZ128rrk
VSUBPSZ128rrk
VADDPSZ128rrk
VEXPANDPSZ128rrk
VANDPSZ128rrk
VSCALEFPSZ128rrk
VUNPCKHPSZ128rrk
VUNPCKLPSZ128rrk
VMULPSZ128rrk
VBLENDMPSZ128rrk
VANDNPSZ128rrk
VMINPSZ128rrk
VORPSZ128rrk
VXORPSZ128rrk
VCOMPRESSPSZ128rrk
VMOVUPSZ128rrk
VDIVPSZ128rrk
VMAXPSZ128rrk
VSCALEFSSZ128rrk
VPSRAWZ128rrk
VPUNPCKHBWZ128rrk
VPUNPCKLBWZ128rrk
VPSUBWZ128rrk
VPMOVSXBWZ128rrk
VPMOVZXBWZ128rrk
VPADDWZ128rrk
VPACKSSDWZ128rrk
VPACKUSDWZ128rrk
VPMOVUSDWZ128rrk
VPMOVSDWZ128rrk
VPMOVDWZ128rrk
VPAVGWZ128rrk
VPMULHWZ128rrk
VPSLLWZ128rrk
VPMULLWZ128rrk
VPSRLWZ128rrk
VPBLENDMWZ128rrk
VPTESTNMWZ128rrk
VPERMWZ128rrk
VPTESTMWZ128rrk
VPCMPEQWZ128rrk
VPMOVUSQWZ128rrk
VPMOVSQWZ128rrk
VPMOVQWZ128rrk
VPABSWZ128rrk
VPMADDUBSWZ128rrk
VPSUBSWZ128rrk
VPADDSWZ128rrk
VPMINSWZ128rrk
VPMULHRSWZ128rrk
VPSUBUSWZ128rrk
VPADDUSWZ128rrk
VPMAXSWZ128rrk
VPCMPGTWZ128rrk
VPMULHUWZ128rrk
VPMINUWZ128rrk
VPMAXUWZ128rrk
VPSRAVWZ128rrk
VPSLLVWZ128rrk
VPSRLVWZ128rrk
VPERMI2Drrk
VPERMT2Drrk
VPERMI2PDrrk
VPERMT2PDrrk
VPCONFLICTDrrk
VPLZCNTDrrk
VPERMI2Qrrk
VPERMT2Qrrk
VPCONFLICTQrrk
VPLZCNTQrrk
VPERMI2PSrrk
VPERMT2PSrrk
VPERMI2Wrrk
VPERMT2Wrrk
VMOVDQA32Zrrk
VMOVDQU32Zrrk
VMOVDQA64Zrrk
VMOVDQU64Zrrk
VMOVDQU16Zrrk
VMOVDQU8Zrrk
VPSUBBZrrk
VPADDBZrrk
VPMOVUSDBZrrk
VPMOVSDBZrrk
VPMOVDBZrrk
VPSHUFBZrrk
VPAVGBZrrk
VPBLENDMBZrrk
VPTESTNMBZrrk
VPTESTMBZrrk
VPCMPEQBZrrk
VPMOVUSQBZrrk
VPMOVSQBZrrk
VPMOVQBZrrk
VPABSBZrrk
VPSUBSBZrrk
VPADDSBZrrk
VPMINSBZrrk
VPSUBUSBZrrk
VPADDUSBZrrk
VPMAXSBZrrk
VPCMPGTBZrrk
VPMINUBZrrk
VPMAXUBZrrk
VPACKSSWBZrrk
VPACKUSWBZrrk
VPMOVUSWBZrrk
VPMOVSWBZrrk
VPMOVWBZrrk
VPSRADZrrk
VPSUBDZrrk
VPMOVSXBDZrrk
VPMOVZXBDZrrk
VPADDDZrrk
VPANDDZrrk
VPEXPANDDZrrk
VPSLLDZrrk
VPMULLDZrrk
VPSRLDZrrk
VPBLENDMDZrrk
VPTESTNMDZrrk
VPERMDZrrk
VPTESTMDZrrk
VPANDNDZrrk
VCVTDQ2PDZrrk
VCVTUDQ2PDZrrk
VCVTQQ2PDZrrk
VCVTUQQ2PDZrrk
VCVTPS2PDZrrk
VMOVAPDZrrk
VSUBPDZrrk
VADDPDZrrk
VEXPANDPDZrrk
VANDPDZrrk
VSCALEFPDZrrk
VUNPCKHPDZrrk
VUNPCKLPDZrrk
VMULPDZrrk
VBLENDMPDZrrk
VPERMPDZrrk
VANDNPDZrrk
VMINPDZrrk
VORPDZrrk
VXORPDZrrk
VCOMPRESSPDZrrk
VMOVUPDZrrk
VDIVPDZrrk
VMAXPDZrrk
VPCMPEQDZrrk
VPMOVUSQDZrrk
VPMOVSQDZrrk
VPMOVQDZrrk
VPORDZrrk
VPXORDZrrk
VPABSDZrrk
VPMINSDZrrk
VPCOMPRESSDZrrk
VMOVSDZrrk
VPMAXSDZrrk
VPCMPGTDZrrk
VPBROADCASTDZrrk
VPMINUDZrrk
VPMAXUDZrrk
VPSRAVDZrrk
VPSLLVDZrrk
VPROLVDZrrk
VPSRLVDZrrk
VPRORVDZrrk
VPMADDWDZrrk
VPUNPCKHWDZrrk
VPUNPCKLWDZrrk
VPMOVSXWDZrrk
VPMOVZXWDZrrk
VPSRAQZrrk
VPSUBQZrrk
VPMOVSXBQZrrk
VPMOVZXBQZrrk
VCVTTPD2DQZrrk
VCVTPD2DQZrrk
VCVTTPS2DQZrrk
VCVTPS2DQZrrk
VPADDQZrrk
VPUNPCKHDQZrrk
VPUNPCKLDQZrrk
VPMULDQZrrk
VPANDQZrrk
VPEXPANDQZrrk
VPUNPCKHQDQZrrk
VPUNPCKLQDQZrrk
VCVTTPD2UDQZrrk
VCVTPD2UDQZrrk
VCVTTPS2UDQZrrk
VCVTPS2UDQZrrk
VPMULUDQZrrk
VPMOVSXDQZrrk
VPMOVZXDQZrrk
VPSLLQZrrk
VPMULLQZrrk
VPSRLQZrrk
VPBLENDMQZrrk
VPTESTNMQZrrk
VPERMQZrrk
VPTESTMQZrrk
VPANDNQZrrk
VCVTTPD2QQZrrk
VCVTPD2QQZrrk
VCVTTPS2QQZrrk
VCVTPS2QQZrrk
VPCMPEQQZrrk
VCVTTPD2UQQZrrk
VCVTPD2UQQZrrk
VCVTTPS2UQQZrrk
VCVTPS2UQQZrrk
VPORQZrrk
VPXORQZrrk
VPABSQZrrk
VPMINSQZrrk
VPCOMPRESSQZrrk
VPMAXSQZrrk
VPCMPGTQZrrk
VPBROADCASTQZrrk
VPMINUQZrrk
VPMAXUQZrrk
VPSRAVQZrrk
VPSLLVQZrrk
VPROLVQZrrk
VPSRLVQZrrk
VPRORVQZrrk
VPMOVSXWQZrrk
VPMOVZXWQZrrk
VCVTPD2PSZrrk
VCVTDQ2PSZrrk
VCVTUDQ2PSZrrk
VCVTQQ2PSZrrk
VCVTUQQ2PSZrrk
VMOVAPSZrrk
VSUBPSZrrk
VADDPSZrrk
VEXPANDPSZrrk
VANDPSZrrk
VSCALEFPSZrrk
VUNPCKHPSZrrk
VUNPCKLPSZrrk
VMULPSZrrk
VBLENDMPSZrrk
VPERMPSZrrk
VANDNPSZrrk
VMINPSZrrk
VORPSZrrk
VXORPSZrrk
VCOMPRESSPSZrrk
VMOVUPSZrrk
VDIVPSZrrk
VMAXPSZrrk
VMOVSSZrrk
VPSRAWZrrk
VPUNPCKHBWZrrk
VPUNPCKLBWZrrk
VPSUBWZrrk
VPMOVSXBWZrrk
VPMOVZXBWZrrk
VPADDWZrrk
VPACKSSDWZrrk
VPACKUSDWZrrk
VPMOVUSDWZrrk
VPMOVSDWZrrk
VPMOVDWZrrk
VPAVGWZrrk
VPMULHWZrrk
VPSLLWZrrk
VPMULLWZrrk
VPSRLWZrrk
VPBLENDMWZrrk
VPTESTNMWZrrk
VPERMWZrrk
VPTESTMWZrrk
VPCMPEQWZrrk
VPMOVUSQWZrrk
VPMOVSQWZrrk
VPMOVQWZrrk
VPABSWZrrk
VPMADDUBSWZrrk
VPSUBSWZrrk
VPADDSWZrrk
VPMINSWZrrk
VPMULHRSWZrrk
VPSUBUSWZrrk
VPADDUSWZrrk
VPMAXSWZrrk
VPCMPGTWZrrk
VPMULHUWZrrk
VPMINUWZrrk
VPMAXUWZrrk
VPSRAVWZrrk
VPSLLVWZrrk
VPSRLVWZrrk
VCMPPDZrrib_altk
VCMPPSZrrib_altk
VCMPPDZ256rmbi_altk
VCMPPSZ256rmbi_altk
VCMPPDZ128rmbi_altk
VCMPPSZ128rmbi_altk
VCMPPDZrmbi_altk
VCMPPSZrmbi_altk
VCMPPDZ256rmi_altk
VCMPPSZ256rmi_altk
VCMPPDZ128rmi_altk
VREDUCESDZ128rmi_altk
VRANGESDZ128rmi_altk
VFIXUPIMMSDZ128rmi_altk
VCMPPSZ128rmi_altk
VREDUCESSZ128rmi_altk
VRANGESSZ128rmi_altk
VFIXUPIMMSSZ128rmi_altk
VCMPPDZrmi_altk
VCMPPSZrmi_altk
VCMPPDZ256rri_altk
VCMPPSZ256rri_altk
VCMPPDZ128rri_altk
VCMPPSZ128rri_altk
VCMPPDZrri_altk
VCMPPSZrri_altk
VFMSUB231SD231SDrb_Intk
VFNMSUB231SD231SDrb_Intk
VFMADD231SD231SDrb_Intk
VFNMADD231SD231SDrb_Intk
VFMSUB132SD132SDrb_Intk
VFNMSUB132SD132SDrb_Intk
VFMADD132SD132SDrb_Intk
VFNMADD132SD132SDrb_Intk
VFMSUB213SD213SDrb_Intk
VFNMSUB213SD213SDrb_Intk
VFMADD213SD213SDrb_Intk
VFNMADD213SD213SDrb_Intk
VFMSUB231SS231SSrb_Intk
VFNMSUB231SS231SSrb_Intk
VFMADD231SS231SSrb_Intk
VFNMADD231SS231SSrb_Intk
VFMSUB132SS132SSrb_Intk
VFNMSUB132SS132SSrb_Intk
VFMADD132SS132SSrb_Intk
VFNMADD132SS132SSrb_Intk
VFMSUB213SS213SSrb_Intk
VFNMSUB213SS213SSrb_Intk
VFMADD213SS213SSrb_Intk
VFNMADD213SS213SSrb_Intk
VFMSUB231SD231SDm_Intk
VFNMSUB231SD231SDm_Intk
VFMADD231SD231SDm_Intk
VFNMADD231SD231SDm_Intk
VFMSUB132SD132SDm_Intk
VFNMSUB132SD132SDm_Intk
VFMADD132SD132SDm_Intk
VFNMADD132SD132SDm_Intk
VFMSUB213SD213SDm_Intk
VFNMSUB213SD213SDm_Intk
VFMADD213SD213SDm_Intk
VFNMADD213SD213SDm_Intk
VFMSUB231SS231SSm_Intk
VFNMSUB231SS231SSm_Intk
VFMADD231SS231SSm_Intk
VFNMADD231SS231SSm_Intk
VFMSUB132SS132SSm_Intk
VFNMSUB132SS132SSm_Intk
VFMADD132SS132SSm_Intk
VFNMADD132SS132SSm_Intk
VFMSUB213SS213SSm_Intk
VFNMSUB213SS213SSm_Intk
VFMADD213SS213SSm_Intk
VFNMADD213SS213SSm_Intk
VSUBSDZrm_Intk
VADDSDZrm_Intk
VMULSDZrm_Intk
VMINSDZrm_Intk
VDIVSDZrm_Intk
VMAXSDZrm_Intk
VSUBSSZrm_Intk
VADDSSZrm_Intk
VMULSSZrm_Intk
VMINSSZrm_Intk
VDIVSSZrm_Intk
VMAXSSZrm_Intk
VFMSUB231SD231SDr_Intk
VFNMSUB231SD231SDr_Intk
VFMADD231SD231SDr_Intk
VFNMADD231SD231SDr_Intk
VFMSUB132SD132SDr_Intk
VFNMSUB132SD132SDr_Intk
VFMADD132SD132SDr_Intk
VFNMADD132SD132SDr_Intk
VFMSUB213SD213SDr_Intk
VFNMSUB213SD213SDr_Intk
VFMADD213SD213SDr_Intk
VFNMADD213SD213SDr_Intk
VFMSUB231SS231SSr_Intk
VFNMSUB231SS231SSr_Intk
VFMADD231SS231SSr_Intk
VFNMADD231SS231SSr_Intk
VFMSUB132SS132SSr_Intk
VFNMSUB132SS132SSr_Intk
VFMADD132SS132SSr_Intk
VFNMADD132SS132SSr_Intk
VFMSUB213SS213SSr_Intk
VFNMSUB213SS213SSr_Intk
VFMADD213SS213SSr_Intk
VFNMADD213SS213SSr_Intk
VSUBSDZrr_Intk
VADDSDZrr_Intk
VMULSDZrr_Intk
VMINSDZrr_Intk
VDIVSDZrr_Intk
VMAXSDZrr_Intk
VSUBSSZrr_Intk
VADDSSZrr_Intk
VMULSSZrr_Intk
VMINSSZrr_Intk
VDIVSSZrr_Intk
VMAXSSZrr_Intk
LD_F80m
ST_FP80m
ST_FpP80m
LD_Fp80m
VFMADDSUBPDr231m
VFMSUBPDr231m
VFNMSUBPDr231m
VFMSUBADDPDr231m
VFMADDPDr231m
VFNMADDPDr231m
VFMSUBSDr231m
VFNMSUBSDr231m
VFMADDSDr231m
VFNMADDSDr231m
VFMADDSUBPSr231m
VFMSUBPSr231m
VFNMSUBPSr231m
VFMSUBADDPSr231m
VFMADDPSr231m
VFNMADDPSr231m
VFMSUBSSr231m
VFNMSUBSSr231m
VFMADDSSr231m
VFNMADDSSr231m
VFMADDSUBPDr132m
VFMSUBPDr132m
VFNMSUBPDr132m
VFMSUBADDPDr132m
VFMADDPDr132m
VFNMADDPDr132m
VFMSUBSDr132m
VFNMSUBSDr132m
VFMADDSDr132m
VFNMADDSDr132m
VFMADDSUBPSr132m
VFMSUBPSr132m
VFNMSUBPSr132m
VFMSUBADDPSr132m
VFMADDPSr132m
VFNMADDPSr132m
VFMSUBSSr132m
VFNMSUBSSr132m
VFMADDSSr132m
VFNMADDSSr132m
RELEASE_DEC32m
LOCK_DEC32m
RELEASE_INC32m
LOCK_INC32m
SUB_F32m
ADD_F32m
ILD_F32m
MUL_F32m
SUBR_F32m
DIVR_F32m
IST_F32m
DIV_F32m
NEG32m
SUB_FI32m
ADD_FI32m
MUL_FI32m
SUBR_FI32m
DIVR_FI32m
DIV_FI32m
FARCALL32m
IMUL32m
FCOM32m
FICOM32m
IST_FP32m
ISTT_FP32m
FARJMP32m
FCOMP32m
FICOMP32m
ST_FpP32m
LGDT32m
SGDT32m
LIDT32m
SIDT32m
NOT32m
IDIV32m
SUB_Fp32m
ADD_Fp32m
LD_Fp32m
MUL_Fp32m
SUBR_Fp32m
DIVR_Fp32m
ST_Fp32m
DIV_Fp32m
VFMADDSUBPDr213m
VFMSUBPDr213m
VFNMSUBPDr213m
VFMSUBADDPDr213m
VFMADDPDr213m
VFNMADDPDr213m
VFMSUBSDr213m
VFNMSUBSDr213m
VFMADDSDr213m
VFNMADDSDr213m
VFMADDSUBPSr213m
VFMSUBPSr213m
VFNMSUBPSr213m
VFMSUBADDPSr213m
VFMADDPSr213m
VFNMADDPSr213m
VFMSUBSSr213m
VFNMSUBSSr213m
VFMADDSSr213m
VFNMADDSSr213m
RELEASE_DEC64m
LOCK_DEC64m
RELEASE_INC64m
LOCK_INC64m
SUB_F64m
ADD_F64m
ILD_F64m
MUL_F64m
SUBR_F64m
DIVR_F64m
ST_F64m
DIV_F64m
NEG64m
CALL64m
IMUL64m
FCOM64m
IST_FP64m
ISTT_FP64m
JMP64m
FCOMP64m
ST_FpP64m
LGDT64m
SGDT64m
LIDT64m
SIDT64m
SLDT64m
NOT64m
IDIV64m
SUB_Fp64m
ADD_Fp64m
LD_Fp64m
MUL_Fp64m
SUBR_Fp64m
DIVR_Fp64m
ST_Fp64m
DIV_Fp64m
RELEASE_DEC16m
LOCK_DEC16m
RELEASE_INC16m
LOCK_INC16m
ILD_F16m
IST_F16m
NEG16m
SUB_FI16m
ADD_FI16m
MUL_FI16m
SUBR_FI16m
DIVR_FI16m
DIV_FI16m
FARCALL16m
IMUL16m
FICOM16m
IST_FP16m
ISTT_FP16m
FARJMP16m
FICOMP16m
LGDT16m
SGDT16m
LIDT16m
SIDT16m
LLDT16m
SLDT16m
NOT16m
IDIV16m
FLDCW16m
FNSTCW16m
LMSW16m
SMSW16m
VFMADDSUB231PDZ256m
VFMSUB231PDZ256m
VFNMSUB231PDZ256m
VFMSUBADD231PDZ256m
VFMADD231PDZ256m
VFNMADD231PDZ256m
VFMADDSUB132PDZ256m
VFMSUB132PDZ256m
VFNMSUB132PDZ256m
VFMSUBADD132PDZ256m
VFMADD132PDZ256m
VFNMADD132PDZ256m
VFMADDSUB213PDZ256m
VFMSUB213PDZ256m
VFNMSUB213PDZ256m
VFMSUBADD213PDZ256m
VFMADD213PDZ256m
VFNMADD213PDZ256m
VRCP14PDZ256m
VRSQRT14PDZ256m
VGETEXPPDZ256m
VSQRTPDZ256m
VBROADCASTSDZ256m
VFMADDSUB231PSZ256m
VFMSUB231PSZ256m
VFNMSUB231PSZ256m
VFMSUBADD231PSZ256m
VFMADD231PSZ256m
VFNMADD231PSZ256m
VFMADDSUB132PSZ256m
VFMSUB132PSZ256m
VFNMSUB132PSZ256m
VFMSUBADD132PSZ256m
VFMADD132PSZ256m
VFNMADD132PSZ256m
VFMADDSUB213PSZ256m
VFMSUB213PSZ256m
VFNMSUB213PSZ256m
VFMSUBADD213PSZ256m
VFMADD213PSZ256m
VFNMADD213PSZ256m
VRCP14PSZ256m
VRSQRT14PSZ256m
VGETEXPPSZ256m
VSQRTPSZ256m
VBROADCASTSSZ256m
VFMADDSUB231PDZ128m
VFMSUB231PDZ128m
VFNMSUB231PDZ128m
VFMSUBADD231PDZ128m
VFMADD231PDZ128m
VFNMADD231PDZ128m
VFMADDSUB132PDZ128m
VFMSUB132PDZ128m
VFNMSUB132PDZ128m
VFMSUBADD132PDZ128m
VFMADD132PDZ128m
VFNMADD132PDZ128m
VFMADDSUB213PDZ128m
VFMSUB213PDZ128m
VFNMSUB213PDZ128m
VFMSUBADD213PDZ128m
VFMADD213PDZ128m
VFNMADD213PDZ128m
VRCP14PDZ128m
VRSQRT14PDZ128m
VGETEXPPDZ128m
VSQRTPDZ128m
VFMADDSUB231PSZ128m
VFMSUB231PSZ128m
VFNMSUB231PSZ128m
VFMSUBADD231PSZ128m
VFMADD231PSZ128m
VFNMADD231PSZ128m
VFMADDSUB132PSZ128m
VFMSUB132PSZ128m
VFNMSUB132PSZ128m
VFMSUBADD132PSZ128m
VFMADD132PSZ128m
VFNMADD132PSZ128m
VFMADDSUB213PSZ128m
VFMSUB213PSZ128m
VFNMSUB213PSZ128m
VFMSUBADD213PSZ128m
VFMADD213PSZ128m
VFNMADD213PSZ128m
VRCP14PSZ128m
VRSQRT14PSZ128m
VGETEXPPSZ128m
VSQRTPSZ128m
VBROADCASTSSZ128m
RELEASE_DEC8m
LOCK_DEC8m
RELEASE_INC8m
LOCK_INC8m
NEG8m
IMUL8m
NOT8m
IDIV8m
SETAm
SETBm
FBLDm
VMPTRLDm
VEXP2PDm
VRCP28PDm
VRSQRT28PDm
VGATHERPF0DPDm
VSCATTERPF0DPDm
VGATHERPF1DPDm
VSCATTERPF1DPDm
VROUNDPDm
VGETEXPPDm
VGATHERPF0QPDm
VSCATTERPF0QPDm
VGATHERPF1QPDm
VSCATTERPF1QPDm
VSQRTPDm
VROUNDYPDm
VFMSUB231SD231SDm
VFNMSUB231SD231SDm
VFMADD231SD231SDm
VFNMADD231SD231SDm
VFMSUB132SD132SDm
VFNMSUB132SD132SDm
VFMADD132SD132SDm
VFNMADD132SD132SDm
VFMSUB213SD213SDm
VFNMSUB213SD213SDm
VFMADD213SD213SDm
VFNMADD213SD213SDm
VRCP28SDm
VRSQRT28SDm
VROUNDSDm
VRNDSCALESDm
VGETEXPSDm
VSQRTSDm
SETAEm
SETBEm
SETGEm
SETLEm
SETNEm
SETEm
FSAVEm
SETGm
SETLm
SETNOm
SETOm
TAILJMPm
SETNPm
SETPm
FBSTPm
VMCLEARm
FRSTORm
VERRm
LTRm
STRm
SETNSm
VEXP2PSm
VRCP28PSm
VRSQRT28PSm
VGATHERPF0DPSm
VSCATTERPF0DPSm
VGATHERPF1DPSm
VSCATTERPF1DPSm
VROUNDPSm
VRCPPSm
VGETEXPPSm
VGATHERPF0QPSm
VSCATTERPF0QPSm
VGATHERPF1QPSm
VSCATTERPF1QPSm
VRSQRTPSm
VSQRTPSm
VROUNDYPSm
VFMSUB231SS231SSm
VFNMSUB231SS231SSm
VFMADD231SS231SSm
VFNMADD231SS231SSm
VFMSUB132SS132SSm
VFNMSUB132SS132SSm
VFMADD132SS132SSm
VFNMADD132SS132SSm
VFMSUB213SS213SSm
VFNMSUB213SS213SSm
VFMADD213SS213SSm
VFNMADD213SS213SSm
VRCP28SSm
VRSQRT28SSm
VROUNDSSm
VRNDSCALESSm
VRCPSSm
VGETEXPSSm
VRSQRTSSm
VSQRTSSm
SETSm
VMPTRSTm
FLDENVm
FSTENVm
VERWm
FNSTSWm
VSQRTPDYm
VRCPPSYm
VRSQRTPSYm
VSQRTPSYm
VFMADDSUB231PDZm
VFMSUB231PDZm
VFNMSUB231PDZm
VFMSUBADD231PDZm
VFMADD231PDZm
VFNMADD231PDZm
VFMADDSUB132PDZm
VFMSUB132PDZm
VFNMSUB132PDZm
VFMSUBADD132PDZm
VFMADD132PDZm
VFNMADD132PDZm
VFMADDSUB213PDZm
VFMSUB213PDZm
VFNMSUB213PDZm
VFMSUBADD213PDZm
VFMADD213PDZm
VFNMADD213PDZm
VRCP14PDZm
VRSQRT14PDZm
VSQRTPDZm
VSQRTSDZm
VBROADCASTSDZm
VFMADDSUB231PSZm
VFMSUB231PSZm
VFNMSUB231PSZm
VFMSUBADD231PSZm
VFMADD231PSZm
VFNMADD231PSZm
VFMADDSUB132PSZm
VFMSUB132PSZm
VFNMSUB132PSZm
VFMSUBADD132PSZm
VFMADD132PSZm
VFNMADD132PSZm
VFMADDSUB213PSZm
VFMSUB213PSZm
VFNMSUB213PSZm
VFMSUBADD213PSZm
VFMADD213PSZm
VFNMADD213PSZm
VRCP14PSZm
VRSQRT14PSZm
VSQRTPSZm
VSQRTSSZm
VBROADCASTSSZm
KMOVBkm
KMOVDkm
KMOVQkm
KMOVWkm
PUSH32rmm
POP32rmm
PUSH64rmm
POP64rmm
PUSH16rmm
POP16rmm
SHA1MSG1rm
SHA256MSG1rm
PFRCPIT1rm
PFRSQIT1rm
CMOVA32rm
SBB32rm
SUB32rm
CMOVB32rm
ADC32rm
BLCIC32rm
BLSIC32rm
T1MSKC32rm
VMREAD32rm
XADD32rm
AND32rm
CMOVAE32rm
CMOVBE32rm
CMOVGE32rm
CMOVLE32rm
CMOVNE32rm
VMWRITE32rm
CMOVE32rm
BSF32rm
CMPXCHG32rm
CMOVG32rm
BLCI32rm
BZHI32rm
BLSI32rm
BNDMK32rm
BLCMSK32rm
BLSMSK32rm
TZMSK32rm
BNDCL32rm
BLCFILL32rm
BLSFILL32rm
LSL32rm
IMUL32rm
CMOVL32rm
BNDMOVRM32rm
BNDCN32rm
ANDN32rm
CMOVNO32rm
CMOVO32rm
PDEP32rm
CMP32rm
CMOVNP32rm
CMOVP32rm
LAR32rm
XOR32rm
BSR32rm
BLSR32rm
BEXTR32rm
BLCS32rm
LDS32rm
BOUNDS32rm
LES32rm
LFS32rm
LGS32rm
CMOVNS32rm
LSS32rm
CMOVS32rm
POPCNT32rm
LZCNT32rm
TZCNT32rm
TEST32rm
PEXT32rm
BNDCU32rm
ACQUIRE_MOV32rm
ADCX32rm
SHLX32rm
MULX32rm
ADOX32rm
SARX32rm
SHRX32rm
SHA1MSG2rm
SHA256MSG2rm
SHA256RNDS2rm
PFRCPIT2rm
VBROADCASTF64X2rm
VBROADCASTI64X2rm
VINSERTF64x2rm
VINSERTI64x2rm
CMOVA64rm
SBB64rm
SUB64rm
CMOVB64rm
ADC64rm
BLCIC64rm
BLSIC64rm
T1MSKC64rm
VMREAD64rm
XADD64rm
AND64rm
Int_VCVTSI2SD64rm
Int_CVTSI2SD64rm
MMX_MOVD64rm
CMOVAE64rm
CMOVBE64rm
CMOVGE64rm
CMOVLE64rm
CMOVNE64rm
VMWRITE64rm
CMOVE64rm
BSF64rm
CMPXCHG64rm
CMOVG64rm
BLCI64rm
BZHI64rm
Int_VCVTTSD2SI64rm
Int_CVTTSD2SI64rm
VCVTSD2SI64rm
Int_VCVTTSS2SI64rm
Int_CVTTSS2SI64rm
VCVTSS2SI64rm
BLSI64rm
BNDMK64rm
BLCMSK64rm
BLSMSK64rm
TZMSK64rm
BNDCL64rm
BLCFILL64rm
BLSFILL64rm
LSL64rm
IMUL64rm
CMOVL64rm
BNDMOVRM64rm
BNDCN64rm
ANDN64rm
CMOVNO64rm
CMOVO64rm
PDEP64rm
CMP64rm
CMOVNP64rm
CMOVP64rm
MMX_MOVQ64rm
LAR64rm
XOR64rm
BSR64rm
BLSR64rm
BEXTR64rm
BLCS64rm
LFS64rm
LGS64rm
CMOVNS64rm
Int_VCVTSI2SS64rm
Int_CVTSI2SS64rm
LSS64rm
CMOVS64rm
POPCNT64rm
LZCNT64rm
TZCNT64rm
TEST64rm
PEXT64rm
BNDCU64rm
ACQUIRE_MOV64rm
ADCX64rm
SHLX64rm
MULX64rm
ADOX64rm
SARX64rm
SHRX64rm
MMX_MOVD64from64rm
MMX_MOVD64to64rm
VMOVPQIto64rm
VFMADDSUBPD4rm
VFMSUBPD4rm
VFNMSUBPD4rm
VFMSUBADDPD4rm
VFMADDPD4rm
VFNMADDPD4rm
VFMSUBSD4rm
VFNMSUBSD4rm
VFMADDSD4rm
VFNMADDSD4rm
VFMADDSUBPS4rm
VFMSUBPS4rm
VFNMSUBPS4rm
VFMSUBADDPS4rm
VFMADDPS4rm
VFNMADDPS4rm
VFMSUBSS4rm
VFNMSUBSS4rm
VFMADDSS4rm
VFNMADDSS4rm
VBROADCASTF32X4rm
VBROADCASTI32X4rm
VBROADCASTF64X4rm
VBROADCASTI64X4rm
VEXTRACTF32x4rm
VINSERTF32x4rm
VEXTRACTI32x4rm
VINSERTI32x4rm
VEXTRACTF64x4rm
VINSERTF64x4rm
VEXTRACTI64x4rm
VINSERTI64x4rm
CMOVA16rm
SBB16rm
SUB16rm
CMOVB16rm
ADC16rm
XADD16rm
AND16rm
CMOVAE16rm
CMOVBE16rm
CMOVGE16rm
CMOVLE16rm
CMOVNE16rm
CMOVE16rm
BSF16rm
CMPXCHG16rm
CMOVG16rm
LSL16rm
IMUL16rm
CMOVL16rm
CMOVNO16rm
CMOVO16rm
CMP16rm
CMOVNP16rm
CMOVP16rm
LAR16rm
XOR16rm
BSR16rm
LDS16rm
BOUNDS16rm
LES16rm
LFS16rm
LGS16rm
CMOVNS16rm
LSS16rm
CMOVS16rm
POPCNT16rm
LZCNT16rm
TZCNT16rm
TEST16rm
ACQUIRE_MOV16rm
VPERMI2D256rm
VPERMT2D256rm
VPERMI2PD256rm
VPERMT2PD256rm
VPERMI2Q256rm
VPERMT2Q256rm
VPALIGNR256rm
VPERMI2PS256rm
VPERMT2PS256rm
VPERMI2W256rm
VPERMT2W256rm
VMOVDQA32Z256rm
VMOVDQU32Z256rm
VMOVDQA64Z256rm
VMOVDQU64Z256rm
VBROADCASTF32X4Z256rm
VBROADCASTI32X4Z256rm
VMOVDQU16Z256rm
VMOVDQU8Z256rm
VMOVNTDQAZ256rm
VPSUBBZ256rm
VPADDBZ256rm
VPSHUFBZ256rm
VPAVGBZ256rm
VPBLENDMBZ256rm
VPTESTNMBZ256rm
VPTESTMBZ256rm
VPCMPEQBZ256rm
VPABSBZ256rm
VPSUBSBZ256rm
VPADDSBZ256rm
VPMINSBZ256rm
VPSUBUSBZ256rm
VPADDUSBZ256rm
VPMAXSBZ256rm
VPCMPGTBZ256rm
VPMINUBZ256rm
VPMAXUBZ256rm
VPACKSSWBZ256rm
VPACKUSWBZ256rm
VPSRADZ256rm
VPSUBDZ256rm
VPMOVSXBDZ256rm
VPMOVZXBDZ256rm
VPADDDZ256rm
VPANDDZ256rm
VPEXPANDDZ256rm
VPGATHERDDZ256rm
VPSLLDZ256rm
VPMULLDZ256rm
VPSRLDZ256rm
VPBLENDMDZ256rm
VPTESTNMDZ256rm
VPERMDZ256rm
VPTESTMDZ256rm
VPANDNDZ256rm
VCVTDQ2PDZ256rm
VCVTUDQ2PDZ256rm
VCVTQQ2PDZ256rm
VCVTUQQ2PDZ256rm
VCVTPS2PDZ256rm
VMOVAPDZ256rm
VSUBPDZ256rm
VADDPDZ256rm
VEXPANDPDZ256rm
VANDPDZ256rm
VGATHERDPDZ256rm
VSCALEFPDZ256rm
VUNPCKHPDZ256rm
VUNPCKLPDZ256rm
VMULPDZ256rm
VBLENDMPDZ256rm
VPERMPDZ256rm
VANDNPDZ256rm
VMINPDZ256rm
VGATHERQPDZ256rm
VORPDZ256rm
VXORPDZ256rm
VMOVUPDZ256rm
VDIVPDZ256rm
VMAXPDZ256rm
VPCMPEQDZ256rm
VPGATHERQDZ256rm
VPORDZ256rm
VPXORDZ256rm
VPABSDZ256rm
VPMINSDZ256rm
VPMAXSDZ256rm
VPCMPGTDZ256rm
VPMINUDZ256rm
VPMAXUDZ256rm
VPSRAVDZ256rm
VPSLLVDZ256rm
VPROLVDZ256rm
VPSRLVDZ256rm
VPRORVDZ256rm
VPMADDWDZ256rm
VPUNPCKHWDZ256rm
VPUNPCKLWDZ256rm
VPMOVSXWDZ256rm
VPMOVZXWDZ256rm
VPSRAQZ256rm
VPSUBQZ256rm
VPMOVSXBQZ256rm
VPMOVZXBQZ256rm
VCVTTPD2DQZ256rm
VCVTPD2DQZ256rm
VCVTTPS2DQZ256rm
VCVTPS2DQZ256rm
VPADDQZ256rm
VPUNPCKHDQZ256rm
VPUNPCKLDQZ256rm
VPMULDQZ256rm
VPANDQZ256rm
VPEXPANDQZ256rm
VPUNPCKHQDQZ256rm
VPUNPCKLQDQZ256rm
VPGATHERDQZ256rm
VCVTTPD2UDQZ256rm
VCVTPD2UDQZ256rm
VCVTTPS2UDQZ256rm
VCVTPS2UDQZ256rm
VPMULUDQZ256rm
VPMOVSXDQZ256rm
VPMOVZXDQZ256rm
VPSLLQZ256rm
VPMULLQZ256rm
VPSRLQZ256rm
VPBLENDMQZ256rm
VPTESTNMQZ256rm
VPERMQZ256rm
VPTESTMQZ256rm
VPANDNQZ256rm
VCVTTPD2QQZ256rm
VCVTPD2QQZ256rm
VCVTTPS2QQZ256rm
VCVTPS2QQZ256rm
VPCMPEQQZ256rm
VPGATHERQQZ256rm
VCVTTPD2UQQZ256rm
VCVTPD2UQQZ256rm
VCVTTPS2UQQZ256rm
VCVTPS2UQQZ256rm
VPORQZ256rm
VPXORQZ256rm
VPABSQZ256rm
VPMINSQZ256rm
VPMAXSQZ256rm
VPCMPGTQZ256rm
VPMINUQZ256rm
VPMAXUQZ256rm
VPSRAVQZ256rm
VPSLLVQZ256rm
VPROLVQZ256rm
VPSRLVQZ256rm
VPRORVQZ256rm
VPMOVSXWQZ256rm
VPMOVZXWQZ256rm
VCVTPD2PSZ256rm
VCVTDQ2PSZ256rm
VCVTUDQ2PSZ256rm
VCVTQQ2PSZ256rm
VCVTUQQ2PSZ256rm
VMOVAPSZ256rm
VSUBPSZ256rm
VADDPSZ256rm
VEXPANDPSZ256rm
VANDPSZ256rm
VGATHERDPSZ256rm
VSCALEFPSZ256rm
VUNPCKHPSZ256rm
VUNPCKLPSZ256rm
VMULPSZ256rm
VBLENDMPSZ256rm
VPERMPSZ256rm
VANDNPSZ256rm
VMINPSZ256rm
VGATHERQPSZ256rm
VORPSZ256rm
VXORPSZ256rm
VMOVUPSZ256rm
VDIVPSZ256rm
VMAXPSZ256rm
VPSRAWZ256rm
VPUNPCKHBWZ256rm
VPUNPCKLBWZ256rm
VPSUBWZ256rm
VPMOVSXBWZ256rm
VPMOVZXBWZ256rm
VPADDWZ256rm
VPACKSSDWZ256rm
VPACKUSDWZ256rm
VPAVGWZ256rm
VPMULHWZ256rm
VPSLLWZ256rm
VPMULLWZ256rm
VPSRLWZ256rm
VPBLENDMWZ256rm
VPTESTNMWZ256rm
VPERMWZ256rm
VPTESTMWZ256rm
VPCMPEQWZ256rm
VPABSWZ256rm
VPMADDUBSWZ256rm
VPSUBSWZ256rm
VPADDSWZ256rm
VPMINSWZ256rm
VPMULHRSWZ256rm
VPSUBUSWZ256rm
VPADDUSWZ256rm
VPMAXSWZ256rm
VPCMPGTWZ256rm
VPMULHUWZ256rm
VPMINUWZ256rm
VPMAXUWZ256rm
VPSRAVWZ256rm
VPSLLVWZ256rm
VPSRLVWZ256rm
VPERMI2D128rm
VPERMT2D128rm
VPERMI2PD128rm
VPERMT2PD128rm
VPERM2F128rm
VINSERTF128rm
VPERM2I128rm
VINSERTI128rm
VPCMPESTRM128rm
VPCMPISTRM128rm
VPERMI2Q128rm
VPERMT2Q128rm
VPALIGNR128rm
VPERMI2PS128rm
VPERMT2PS128rm
VAESKEYGENASSIST128rm
VPERMI2W128rm
VPERMT2W128rm
VMOVDQA32Z128rm
VMOVDQU32Z128rm
VBROADCASTF64X2Z128rm
VBROADCASTI64X2Z128rm
VMOVDQA64Z128rm
VMOVDQU64Z128rm
VMOVDQU16Z128rm
VMOVDQU8Z128rm
VMOVNTDQAZ128rm
VPSUBBZ128rm
VPADDBZ128rm
VPSHUFBZ128rm
VPAVGBZ128rm
VPBLENDMBZ128rm
VPTESTNMBZ128rm
VPTESTMBZ128rm
VPCMPEQBZ128rm
VPABSBZ128rm
VPSUBSBZ128rm
VPADDSBZ128rm
VPMINSBZ128rm
VPSUBUSBZ128rm
VPADDUSBZ128rm
VPMAXSBZ128rm
VPCMPGTBZ128rm
VPMINUBZ128rm
VPMAXUBZ128rm
VPACKSSWBZ128rm
VPACKUSWBZ128rm
VPSRADZ128rm
VPSUBDZ128rm
VPMOVSXBDZ128rm
VPMOVZXBDZ128rm
VPADDDZ128rm
VPANDDZ128rm
VPEXPANDDZ128rm
VPGATHERDDZ128rm
VPSLLDZ128rm
VPMULLDZ128rm
VPSRLDZ128rm
VPBLENDMDZ128rm
VPTESTNMDZ128rm
VPTESTMDZ128rm
VPANDNDZ128rm
VCVTDQ2PDZ128rm
VCVTUDQ2PDZ128rm
VCVTQQ2PDZ128rm
VCVTUQQ2PDZ128rm
VCVTPS2PDZ128rm
VMOVAPDZ128rm
VSUBPDZ128rm
VADDPDZ128rm
VEXPANDPDZ128rm
VANDPDZ128rm
VGATHERDPDZ128rm
VSCALEFPDZ128rm
VUNPCKHPDZ128rm
VUNPCKLPDZ128rm
VMULPDZ128rm
VBLENDMPDZ128rm
VANDNPDZ128rm
VMINPDZ128rm
VGATHERQPDZ128rm
VORPDZ128rm
VXORPDZ128rm
VMOVUPDZ128rm
VDIVPDZ128rm
VMAXPDZ128rm
VPCMPEQDZ128rm
VPGATHERQDZ128rm
VPORDZ128rm
VPXORDZ128rm
VPABSDZ128rm
VSCALEFSDZ128rm
VPMINSDZ128rm
VPMAXSDZ128rm
VPCMPGTDZ128rm
VPMINUDZ128rm
VPMAXUDZ128rm
VPSRAVDZ128rm
VPSLLVDZ128rm
VPROLVDZ128rm
VPSRLVDZ128rm
VPRORVDZ128rm
VPMADDWDZ128rm
VPUNPCKHWDZ128rm
VPUNPCKLWDZ128rm
VPMOVSXWDZ128rm
VPMOVZXWDZ128rm
VPSRAQZ128rm
VPSUBQZ128rm
VPMOVSXBQZ128rm
VPMOVZXBQZ128rm
VCVTTPD2DQZ128rm
VCVTPD2DQZ128rm
VCVTTPS2DQZ128rm
VCVTPS2DQZ128rm
VPADDQZ128rm
VPUNPCKHDQZ128rm
VPUNPCKLDQZ128rm
VPMULDQZ128rm
VPANDQZ128rm
VPEXPANDQZ128rm
VPUNPCKHQDQZ128rm
VPUNPCKLQDQZ128rm
VPGATHERDQZ128rm
VCVTTPD2UDQZ128rm
VCVTPD2UDQZ128rm
VCVTTPS2UDQZ128rm
VCVTPS2UDQZ128rm
VPMULUDQZ128rm
VPMOVSXDQZ128rm
VPMOVZXDQZ128rm
VPSLLQZ128rm
VPMULLQZ128rm
VPSRLQZ128rm
VPBLENDMQZ128rm
VPTESTNMQZ128rm
VPTESTMQZ128rm
VPANDNQZ128rm
VCVTTPD2QQZ128rm
VCVTPD2QQZ128rm
VCVTTPS2QQZ128rm
VCVTPS2QQZ128rm
VPCMPEQQZ128rm
VPGATHERQQZ128rm
VCVTTPD2UQQZ128rm
VCVTPD2UQQZ128rm
VCVTTPS2UQQZ128rm
VCVTPS2UQQZ128rm
VPORQZ128rm
VPXORQZ128rm
VPABSQZ128rm
VPMINSQZ128rm
VPMAXSQZ128rm
VPCMPGTQZ128rm
VPMINUQZ128rm
VPMAXUQZ128rm
VPSRAVQZ128rm
VPSLLVQZ128rm
VPROLVQZ128rm
VPSRLVQZ128rm
VPRORVQZ128rm
VPMOVSXWQZ128rm
VPMOVZXWQZ128rm
VCVTPD2PSZ128rm
VCVTDQ2PSZ128rm
VCVTUDQ2PSZ128rm
VCVTQQ2PSZ128rm
VCVTUQQ2PSZ128rm
VMOVAPSZ128rm
VSUBPSZ128rm
VADDPSZ128rm
VEXPANDPSZ128rm
VANDPSZ128rm
VGATHERDPSZ128rm
VSCALEFPSZ128rm
VUNPCKHPSZ128rm
VUNPCKLPSZ128rm
VMULPSZ128rm
VBLENDMPSZ128rm
VANDNPSZ128rm
VMINPSZ128rm
VGATHERQPSZ128rm
VORPSZ128rm
VXORPSZ128rm
VMOVUPSZ128rm
VDIVPSZ128rm
VMAXPSZ128rm
VSCALEFSSZ128rm
VPSRAWZ128rm
VPUNPCKHBWZ128rm
VPUNPCKLBWZ128rm
VPSUBWZ128rm
VPMOVSXBWZ128rm
VPMOVZXBWZ128rm
VPADDWZ128rm
VPACKSSDWZ128rm
VPACKUSDWZ128rm
VPAVGWZ128rm
VPMULHWZ128rm
VPSLLWZ128rm
VPMULLWZ128rm
VPSRLWZ128rm
VPBLENDMWZ128rm
VPTESTNMWZ128rm
VPERMWZ128rm
VPTESTMWZ128rm
VPCMPEQWZ128rm
VPABSWZ128rm
VPMADDUBSWZ128rm
VPSUBSWZ128rm
VPADDSWZ128rm
VPMINSWZ128rm
VPMULHRSWZ128rm
VPSUBUSWZ128rm
VPADDUSWZ128rm
VPMAXSWZ128rm
VPCMPGTWZ128rm
VPMULHUWZ128rm
VPMINUWZ128rm
VPMAXUWZ128rm
VPSRAVWZ128rm
VPSLLVWZ128rm
VPSRLVWZ128rm
SBB8rm
SUB8rm
ADC8rm
XADD8rm
AND8rm
CMPXCHG8rm
CMP8rm
XOR8rm
TEST8rm
ACQUIRE_MOV8rm
VBROADCASTF32X8rm
VBROADCASTI32X8rm
VINSERTF32x8rm
VINSERTI32x8rm
VMOVNTDQArm
VMOVDQArm
VPSHABrm
VPSUBBrm
VPADDBrm
VPSHUFBrm
VPAVGBrm
VPSHLBrm
VPSIGNBrm
VPCMPEQBrm
VPINSRBrm
VPSUBSBrm
VPADDSBrm
VPMINSBrm
VPSUBUSBrm
VPADDUSBrm
PAVGUSBrm
VPMAXSBrm
VPCMPGTBrm
VPROTBrm
VPBROADCASTBrm
VPMINUBrm
PFSUBrm
VPMAXUBrm
VPBLENDVBrm
VPACKSSWBrm
VPACKUSWBrm
PFACCrm
PFNACCrm
PFPNACCrm
VAESDECrm
VAESIMCrm
VAESENCrm
VPERMI2Drm
VPERMT2Drm
VPSHADrm
VPSRADrm
MMX_PSRADrm
VPHADDBDrm
VPHADDUBDrm
VPHSUBDrm
VPSUBDrm
VPMOVSXBDrm
VPMOVZXBDrm
PFADDrm
VPHADDDrm
VPADDDrm
VPGATHERDDrm
VPMACSDDrm
VPMACSSDDrm
PI2FDrm
PF2IDrm
VPSHLDrm
VPSLLDrm
MMX_PSLLDrm
VPMULLDrm
VPSRLDrm
MMX_PSRLDrm
VPANDrm
VPSIGNDrm
VPERMI2PDrm
VPERMIL2PDrm
VCVTDQ2PDrm
VCVTPS2PDrm
VPERMT2PDrm
FsVMOVAPDrm
FsMOVAPDrm
PSWAPDrm
VADDSUBPDrm
VHSUBPDrm
VSUBPDrm
VMINCPDrm
VMAXCPDrm
VHADDPDrm
VADDPDrm
VANDPDrm
VFsANDPDrm
VFvANDPDrm
VGATHERDPDrm
VUNPCKHPDrm
VMOVHPDrm
VPERMILPDrm
VUNPCKLPDrm
VMULPDrm
VMOVLPDrm
VANDNPDrm
VFsANDNPDrm
VFvANDNPDrm
VMINPDrm
VGATHERQPDrm
VORPDrm
VXORPDrm
VFsXORPDrm
VFvXORPDrm
VFsORPDrm
VFvORPDrm
VTESTPDrm
VMOVUPDrm
VBLENDVPDrm
VDIVPDrm
VMASKMOVPDrm
VMAXPDrm
VFRCZPDrm
VPCMPEQDrm
VPGATHERQDrm
VPINSRDrm
Int_VCVTSI2SDrm
Int_CVTSI2SDrm
Int_VCVTSS2SDrm
Int_CVTSS2SDrm
VRCP14SDrm
VRSQRT14SDrm
VSUBSDrm
VMINCSDrm
VMAXCSDrm
VADDSDrm
Int_VUCOMISDrm
Int_UCOMISDrm
Int_VCOMISDrm
Int_COMISDrm
VMULSDrm
VPMINSDrm
VMINSDrm
Int_VCMPSDrm
Int_CMPSDrm
VDIVSDrm
VMOVSDrm
VPMAXSDrm
VMAXSDrm
VFRCZSDrm
VMOV64toSDrm
VPCONFLICTDrm
VPCMPGTDrm
VPLZCNTDrm
VPROTDrm
VPBROADCASTDrm
VPMINUDrm
VPMAXUDrm
VPSRAVDrm
VPSLLVDrm
VPSRLVDrm
VPMASKMOVDrm
VPHSUBWDrm
VPHADDWDrm
VPMADDWDrm
VPUNPCKHWDrm
VPUNPCKLWDrm
VPMACSWDrm
VPMADCSWDrm
VPMACSSWDrm
VPMADCSSWDrm
VPHADDUWDrm
VPMOVSXWDrm
VPMOVZXWDrm
PFCMPGErm
SHA1NEXTErm
VPMACSDQHrm
VPMACSSDQHrm
VMOVDI2PDIrm
VMOVQI2PQIrm
VMOVZQI2PQIrm
VMOVZPQILo2PQIrm
VMOV64toPQIrm
VPCMPESTRIrm
VPCMPISTRIrm
Int_VCVTTSD2SIrm
Int_CVTTSD2SIrm
VCVTSD2SIrm
Int_VCVTTSS2SIrm
Int_CVTTSS2SIrm
VCVTSS2SIrm
VPMACSDQLrm
VPMACSSDQLrm
PFMULrm
VPPERMrm
VPANDNrm
PFMINrm
PFRCPrm
VMOVDDUPrm
VMOVSHDUPrm
VMOVSLDUPrm
VPERMI2Qrm
VPERMT2Qrm
VPSHAQrm
VPHADDBQrm
VPHADDUBQrm
VPSUBQrm
VPMOVSXBQrm
VPMOVZXBQrm
CVTTPD2DQrm
CVTPD2DQrm
VCVTTPS2DQrm
VCVTPS2DQrm
VPHSUBDQrm
VPADDQrm
VPHADDDQrm
VPUNPCKHDQrm
VPUNPCKLDQrm
VPMULDQrm
VPUNPCKHQDQrm
VPUNPCKLQDQrm
VPCLMULQDQrm
VPGATHERDQrm
VPHADDUDQrm
VPMULUDQrm
VPMOVSXDQrm
VPMOVZXDQrm
PFCMPEQrm
VPSHLQrm
VPSLLQrm
MMX_PSLLQrm
VPSRLQrm
MMX_PSRLQrm
VPCMPEQQrm
VPGATHERQQrm
VPINSRQrm
VPCONFLICTQrm
VPCMPGTQrm
VPLZCNTQrm
VPROTQrm
VPBROADCASTQrm
VPSLLVQrm
VPSRLVQrm
VPMASKMOVQrm
VPHADDWQrm
VPHADDUWQrm
VPMOVSXWQrm
VPMOVZXWQrm
PFSUBRrm
VPORrm
VPXORrm
CVTPD2PSrm
VCVTPH2PSrm
VPERMI2PSrm
VPERMIL2PSrm
VCVTDQ2PSrm
VPERMT2PSrm
FsVMOVAPSrm
FsMOVAPSrm
VADDSUBPSrm
VHSUBPSrm
VSUBPSrm
VMINCPSrm
VMAXCPSrm
VHADDPSrm
VADDPSrm
VANDPSrm
VFsANDPSrm
VFvANDPSrm
VGATHERDPSrm
VUNPCKHPSrm
VMOVHPSrm
VPERMILPSrm
VUNPCKLPSrm
VMULPSrm
VMOVLPSrm
VANDNPSrm
VFsANDNPSrm
VFvANDNPSrm
VMINPSrm
VGATHERQPSrm
VORPSrm
VXORPSrm
VFsXORPSrm
VFvXORPSrm
VFsORPSrm
VFvORPSrm
VINSERTPSrm
VTESTPSrm
VMOVUPSrm
VBLENDVPSrm
VDIVPSrm
VMASKMOVPSrm
VMAXPSrm
VFRCZPSrm
Int_VCVTSD2SSrm
Int_CVTSD2SSrm
VMOVDI2SSrm
Int_VCVTSI2SSrm
Int_CVTSI2SSrm
VRCP14SSrm
VRSQRT14SSrm
VSUBSSrm
VMINCSSrm
VMAXCSSrm
VADDSSrm
Int_VUCOMISSrm
Int_UCOMISSrm
Int_VCOMISSrm
Int_COMISSrm
VMULSSrm
VMINSSrm
Int_VCMPSSrm
Int_CMPSSrm
VBROADCASTSSrm
VDIVSSrm
VMOVSSrm
VMAXSSrm
VFRCZSSrm
PFCMPGTrm
PFRSQRTrm
VAESDECLASTrm
VAESENCLASTrm
VPTESTrm
VLDDQUrm
VMOVDQUrm
VPCMOVrm
VPERMI2Wrm
VPERMT2Wrm
VPSHAWrm
VPSRAWrm
MMX_PSRAWrm
VPHSUBBWrm
VPSADBWrm
VPHADDBWrm
VPUNPCKHBWrm
VPUNPCKLBWrm
VPHADDUBWrm
VPHSUBWrm
VPSUBWrm
VPMOVSXBWrm
VPMOVZXBWrm
VPHADDWrm
VPADDWrm
VPACKSSDWrm
VPACKUSDWrm
PI2FWrm
VPAVGWrm
VPMULHWrm
PF2IWrm
VPSHLWrm
VPSLLWrm
MMX_PSLLWrm
VPMULLWrm
VPSRLWrm
MMX_PSRLWrm
VPSIGNWrm
VPCMPEQWrm
PMULHRWrm
VPSUBSWrm
VPADDSWrm
VPMINSWrm
VPSUBUSWrm
VPADDUSWrm
VPMAXSWrm
VPCMPGTWrm
VPROTWrm
VPBROADCASTWrm
VPMULHUWrm
VPMINUWrm
VPMAXUWrm
VPMACSWWrm
VPMACSSWWrm
PFMAXrm
BNDLDXrm
VCVTTPD2DQXrm
VCVTPD2DQXrm
VCVTPD2PSXrm
VMOVNTDQAYrm
VMOVDQAYrm
VPSUBBYrm
VPADDBYrm
VPSHUFBYrm
VPAVGBYrm
VPSIGNBYrm
VPCMPEQBYrm
VPSUBSBYrm
VPADDSBYrm
VPMINSBYrm
VPSUBUSBYrm
VPADDUSBYrm
VPMAXSBYrm
VPCMPGTBYrm
VPBROADCASTBYrm
VPMINUBYrm
VPMAXUBYrm
VPBLENDVBYrm
VPACKSSWBYrm
VPACKUSWBYrm
VPSRADYrm
VPHSUBDYrm
VPSUBDYrm
VPMOVSXBDYrm
VPMOVZXBDYrm
VPHADDDYrm
VPADDDYrm
VPGATHERDDYrm
VPSLLDYrm
VPMULLDYrm
VPSRLDYrm
VPERMDYrm
VPANDYrm
VPSIGNDYrm
VCVTDQ2PDYrm
VCVTPS2PDYrm
VMOVAPDYrm
VADDSUBPDYrm
VHSUBPDYrm
VSUBPDYrm
VMINCPDYrm
VMAXCPDYrm
VHADDPDYrm
VADDPDYrm
VANDPDYrm
VFvANDPDYrm
VGATHERDPDYrm
VUNPCKHPDYrm
VPERMILPDYrm
VUNPCKLPDYrm
VMULPDYrm
VANDNPDYrm
VFvANDNPDYrm
VMINPDYrm
VGATHERQPDYrm
VORPDYrm
VXORPDYrm
VFvXORPDYrm
VFvORPDYrm
VTESTPDYrm
VMOVUPDYrm
VBLENDVPDYrm
VDIVPDYrm
VMASKMOVPDYrm
VMAXPDYrm
VPCMPEQDYrm
VPGATHERQDYrm
VPMINSDYrm
VBROADCASTSDYrm
VPMAXSDYrm
VPCMPGTDYrm
VPBROADCASTDYrm
VPMINUDYrm
VPMAXUDYrm
VPSRAVDYrm
VPSLLVDYrm
VPSRLVDYrm
VPMASKMOVDYrm
VPMADDWDYrm
VPUNPCKHWDYrm
VPUNPCKLWDYrm
VPMOVSXWDYrm
VPMOVZXWDYrm
VPANDNYrm
VMOVDDUPYrm
VMOVSHDUPYrm
VMOVSLDUPYrm
VPSUBQYrm
VPMOVSXBQYrm
VPMOVZXBQYrm
VCVTTPD2DQYrm
VCVTPD2DQYrm
VCVTTPS2DQYrm
VCVTPS2DQYrm
VPADDQYrm
VPUNPCKHDQYrm
VPUNPCKLDQYrm
VPMULDQYrm
VPUNPCKHQDQYrm
VPUNPCKLQDQYrm
VPGATHERDQYrm
VPMULUDQYrm
VPMOVSXDQYrm
VPMOVZXDQYrm
VPSLLQYrm
VPSRLQYrm
VPCMPEQQYrm
VPGATHERQQYrm
VPCMPGTQYrm
VPBROADCASTQYrm
VPSLLVQYrm
VPSRLVQYrm
VPMASKMOVQYrm
VPMOVSXWQYrm
VPMOVZXWQYrm
VPORYrm
VPXORYrm
VCVTPD2PSYrm
VCVTPH2PSYrm
VCVTDQ2PSYrm
VMOVAPSYrm
VADDSUBPSYrm
VHSUBPSYrm
VSUBPSYrm
VMINCPSYrm
VMAXCPSYrm
VHADDPSYrm
VADDPSYrm
VANDPSYrm
VFvANDPSYrm
VGATHERDPSYrm
VUNPCKHPSYrm
VPERMILPSYrm
VUNPCKLPSYrm
VMULPSYrm
VPERMPSYrm
VANDNPSYrm
VFvANDNPSYrm
VMINPSYrm
VGATHERQPSYrm
VORPSYrm
VXORPSYrm
VFvXORPSYrm
VFvORPSYrm
VTESTPSYrm
VMOVUPSYrm
VBLENDVPSYrm
VDIVPSYrm
VMASKMOVPSYrm
VMAXPSYrm
VBROADCASTSSYrm
VPTESTYrm
VLDDQUYrm
VMOVDQUYrm
VPSRAWYrm
VPSADBWYrm
VPUNPCKHBWYrm
VPUNPCKLBWYrm
VPHSUBWYrm
VPSUBWYrm
VPMOVSXBWYrm
VPMOVZXBWYrm
VPHADDWYrm
VPADDWYrm
VPACKSSDWYrm
VPACKUSDWYrm
VPAVGWYrm
VPMULHWYrm
VPSLLWYrm
VPMULLWYrm
VPSRLWYrm
VPSIGNWYrm
VPCMPEQWYrm
VPSUBSWYrm
VPADDSWYrm
VPMINSWYrm
VPSUBUSWYrm
VPADDUSWYrm
VPMAXSWYrm
VPCMPGTWYrm
VPBROADCASTWYrm
VPMULHUWYrm
VPMINUWYrm
VPMAXUWYrm
VMOVDQA32Zrm
VMOVDQU32Zrm
VMOVDQA64Zrm
Int_VCVTSI2SD64Zrm
Int_VCVTTSD2SI64Zrm
VCVTSD2SI64Zrm
Int_VCVTTSS2SI64Zrm
VCVTSS2SI64Zrm
Int_VCVTTSD2USI64Zrm
VCVTSD2USI64Zrm
Int_VCVTTSS2USI64Zrm
VCVTSS2USI64Zrm
Int_VCVTSI2SS64Zrm
VMOVDQU64Zrm
VMOVDQU16Zrm
VMOVDQU8Zrm
VMOVNTDQAZrm
VPSUBBZrm
VPADDBZrm
VPSHUFBZrm
VPAVGBZrm
VPBLENDMBZrm
VPTESTNMBZrm
VPTESTMBZrm
VPCMPEQBZrm
VPABSBZrm
VPSUBSBZrm
VPADDSBZrm
VPMINSBZrm
VPSUBUSBZrm
VPADDUSBZrm
VPMAXSBZrm
VPCMPGTBZrm
VPMINUBZrm
VPMAXUBZrm
VPACKSSWBZrm
VPACKUSWBZrm
VPSRADZrm
VPSUBDZrm
VPMOVSXBDZrm
VPMOVZXBDZrm
VPADDDZrm
VPANDDZrm
VPEXPANDDZrm
VPGATHERDDZrm
VPSLLDZrm
VPMULLDZrm
VPSRLDZrm
VPBLENDMDZrm
VPTESTNMDZrm
VPERMDZrm
VPTESTMDZrm
VPANDNDZrm
VCVTDQ2PDZrm
VCVTUDQ2PDZrm
VCVTQQ2PDZrm
VCVTUQQ2PDZrm
VCVTPS2PDZrm
VMOVAPDZrm
VSUBPDZrm
VADDPDZrm
VEXPANDPDZrm
VANDPDZrm
VGATHERDPDZrm
VSCALEFPDZrm
VUNPCKHPDZrm
VPERMILPDZrm
VUNPCKLPDZrm
VMULPDZrm
VBLENDMPDZrm
VPERMPDZrm
VANDNPDZrm
VMINPDZrm
VGATHERQPDZrm
VORPDZrm
VXORPDZrm
VMOVUPDZrm
VDIVPDZrm
VMAXPDZrm
VPCMPEQDZrm
VPGATHERQDZrm
VPORDZrm
VPXORDZrm
VCVTSI642SDZrm
VCVTUSI642SDZrm
Int_VCVTSI2SDZrm
Int_VCVTUSI2SDZrm
VCVTSS2SDZrm
VPABSDZrm
VSUBSDZrm
VADDSDZrm
Int_VUCOMISDZrm
Int_VCOMISDZrm
VMULSDZrm
VPMINSDZrm
VMINSDZrm
VCMPSDZrm
VDIVSDZrm
VMOVSDZrm
VPMAXSDZrm
VMAXSDZrm
VPCMPGTDZrm
VPBROADCASTDZrm
VPMINUDZrm
VPMAXUDZrm
VPSRAVDZrm
VPSLLVDZrm
VPROLVDZrm
VPSRLVDZrm
VPRORVDZrm
VPMADDWDZrm
VPUNPCKHWDZrm
VPUNPCKLWDZrm
VPMOVSXWDZrm
VPMOVZXWDZrm
VMOVDI2PDIZrm
VMOVQI2PQIZrm
VMOVZPQILo2PQIZrm
Int_VCVTTSD2SIZrm
VCVTSD2SIZrm
Int_VCVTTSS2SIZrm
VCVTSS2SIZrm
Int_VCVTTSD2USIZrm
VCVTSD2USIZrm
Int_VCVTTSS2USIZrm
VCVTSS2USIZrm
VMOVDDUPZrm
VMOVSHDUPZrm
VMOVSLDUPZrm
VPSRAQZrm
VPSUBQZrm
VPMOVSXBQZrm
VPMOVZXBQZrm
VCVTTPD2DQZrm
VCVTPD2DQZrm
VCVTTPS2DQZrm
VCVTPS2DQZrm
VPADDQZrm
VPUNPCKHDQZrm
VPUNPCKLDQZrm
VPMULDQZrm
VPANDQZrm
VPEXPANDQZrm
VPUNPCKHQDQZrm
VPUNPCKLQDQZrm
VPGATHERDQZrm
VCVTTPD2UDQZrm
VCVTPD2UDQZrm
VCVTTPS2UDQZrm
VCVTPS2UDQZrm
VPMULUDQZrm
VPMOVSXDQZrm
VPMOVZXDQZrm
VPSLLQZrm
VPMULLQZrm
VPSRLQZrm
VPBLENDMQZrm
VPTESTNMQZrm
VPERMQZrm
VPTESTMQZrm
VPANDNQZrm
VCVTTPD2QQZrm
VCVTPD2QQZrm
VCVTTPS2QQZrm
VCVTPS2QQZrm
VPCMPEQQZrm
VPGATHERQQZrm
VCVTTPD2UQQZrm
VCVTPD2UQQZrm
VCVTTPS2UQQZrm
VCVTPS2UQQZrm
VPORQZrm
VPXORQZrm
VPABSQZrm
VPMINSQZrm
VPMAXSQZrm
VPCMPGTQZrm
VPBROADCASTQZrm
VPMINUQZrm
VPMAXUQZrm
VPSRAVQZrm
VPSLLVQZrm
VPROLVQZrm
VPSRLVQZrm
VPRORVQZrm
VPMOVSXWQZrm
VPMOVZXWQZrm
VCVTPD2PSZrm
VCVTPH2PSZrm
VCVTDQ2PSZrm
VCVTUDQ2PSZrm
VCVTQQ2PSZrm
VCVTUQQ2PSZrm
VMOVAPSZrm
VSUBPSZrm
VADDPSZrm
VEXPANDPSZrm
VANDPSZrm
VGATHERDPSZrm
VSCALEFPSZrm
VUNPCKHPSZrm
VPERMILPSZrm
VUNPCKLPSZrm
VMULPSZrm
VBLENDMPSZrm
VPERMPSZrm
VANDNPSZrm
VMINPSZrm
VGATHERQPSZrm
VORPSZrm
VXORPSZrm
VMOVUPSZrm
VDIVPSZrm
VMAXPSZrm
VCVTSI642SSZrm
VCVTUSI642SSZrm
VCVTSD2SSZrm
VMOVDI2SSZrm
Int_VCVTSI2SSZrm
VCVTUSI2SSZrm
VSUBSSZrm
VADDSSZrm
Int_VUCOMISSZrm
Int_VCOMISSZrm
VMULSSZrm
VMINSSZrm
VCMPSSZrm
VDIVSSZrm
VMOVSSZrm
VMAXSSZrm
VPSRAWZrm
VPUNPCKHBWZrm
VPUNPCKLBWZrm
VPSUBWZrm
VPMOVSXBWZrm
VPMOVZXBWZrm
VPADDWZrm
VPACKSSDWZrm
VPACKUSDWZrm
VPAVGWZrm
VPMULHWZrm
VPSLLWZrm
VPMULLWZrm
VPSRLWZrm
VPBLENDMWZrm
VPTESTNMWZrm
VPERMWZrm
VPTESTMWZrm
VPCMPEQWZrm
VPABSWZrm
VPMADDUBSWZrm
VPSUBSWZrm
VPADDSWZrm
VPMINSWZrm
VPMULHRSWZrm
VPSUBUSWZrm
VPADDUSWZrm
VPMAXSWZrm
VPCMPGTWZrm
VPMULHUWZrm
VPMINUWZrm
VPMAXUWZrm
VPSRAVWZrm
VPSLLVWZrm
VPSRLVWZrm
MMX_PALIGNR64irm
MMX_PSUBBirm
MMX_PADDBirm
MMX_PAVGBirm
MMX_PCMPEQBirm
MMX_PSUBSBirm
MMX_PADDSBirm
MMX_PSUBUSBirm
MMX_PADDUSBirm
MMX_PCMPGTBirm
MMX_PMINUBirm
MMX_PMAXUBirm
MMX_PACKSSWBirm
MMX_PACKUSWBirm
MMX_PSUBDirm
MMX_PADDDirm
MMX_PANDirm
MMX_CVTPI2PDirm
MMX_PCMPEQDirm
MMX_PCMPGTDirm
MMX_PMADDWDirm
MMX_PUNPCKHWDirm
MMX_PUNPCKLWDirm
MMX_CVTTPD2PIirm
MMX_CVTPD2PIirm
MMX_CVTTPS2PIirm
MMX_CVTPS2PIirm
MMX_PANDNirm
MMX_PSUBQirm
MMX_PADDQirm
MMX_PUNPCKHDQirm
MMX_PUNPCKLDQirm
MMX_PMULUDQirm
MMX_PORirm
MMX_PXORirm
MMX_CVTPI2PSirm
MMX_PSADBWirm
MMX_PUNPCKHBWirm
MMX_PUNPCKLBWirm
MMX_PSUBWirm
MMX_PADDWirm
MMX_PACKSSDWirm
MMX_PAVGWirm
MMX_PMULHWirm
MMX_PMULLWirm
MMX_PCMPEQWirm
MMX_PSUBSWirm
MMX_PADDSWirm
MMX_PMINSWirm
MMX_PSUBUSWirm
MMX_PADDUSWirm
MMX_PMAXSWirm
MMX_PCMPGTWirm
MMX_PMULHUWirm
VINSERTPSzrm
MOV32sm
MOV64sm
MOV16sm
EH_SjLj_Setup
SUB_FST0r
ADD_FST0r
MUL_FST0r
COM_FST0r
COMP_FST0r
SUBR_FST0r
DIVR_FST0r
DIV_FST0r
VFMADDSUBPDr231r
VFMSUBPDr231r
VFNMSUBPDr231r
VFMSUBADDPDr231r
VFMADDPDr231r
VFNMADDPDr231r
VFMSUBSDr231r
VFNMSUBSDr231r
VFMADDSDr231r
VFNMADDSDr231r
VFMADDSUBPSr231r
VFMSUBPSr231r
VFNMSUBPSr231r
VFMSUBADDPSr231r
VFMADDPSr231r
VFNMADDPSr231r
VFMSUBSSr231r
VFNMSUBSSr231r
VFMADDSSr231r
VFNMADDSSr231r
VFMADDSUBPDr132r
VFMSUBPDr132r
VFNMSUBPDr132r
VFMSUBADDPDr132r
VFMADDPDr132r
VFNMADDPDr132r
VFMSUBSDr132r
VFNMSUBSDr132r
VFMADDSDr132r
VFNMADDSDr132r
VFMADDSUBPSr132r
VFMSUBPSr132r
VFNMSUBPSr132r
VFMSUBADDPSr132r
VFMADDPSr132r
VFNMADDPSr132r
VFMSUBSSr132r
VFNMSUBSSr132r
VFMADDSSr132r
VFNMADDSSr132r
LEA32r
DEC32r
INC32r
MOVPC32r
SETB_C32r
RDSEED32r
RDRAND32r
NEG32r
PUSH32r
CALL32r
IMUL32r
BSWAP32r
JMP32r
POP32r
STR32r
SLDT32r
NOT32r
IDIV32r
SMSW32r
LEA64_32r
VFMADDSUBPDr213r
VFMSUBPDr213r
VFNMSUBPDr213r
VFMSUBADDPDr213r
VFMADDPDr213r
VFNMADDPDr213r
VFMSUBSDr213r
VFNMSUBSDr213r
VFMADDSDr213r
VFNMADDSDr213r
VFMADDSUBPSr213r
VFMSUBPSr213r
VFNMSUBPSr213r
VFMSUBADDPSr213r
VFMADDPSr213r
VFNMADDPSr213r
VFMSUBSSr213r
VFNMSUBSSr213r
VFMADDSSr213r
VFNMADDSSr213r
LEA64r
DEC64r
INC64r
SETB_C64r
RDSEED64r
RDRAND64r
NEG64r
PUSH64r
CALL64r
IMUL64r
BSWAP64r
JMP64r
POP64r
STR64r
SLDT64r
NOT64r
IDIV64r
SMSW64r
LEA16r
DEC16r
INC16r
SETB_C16r
RDSEED16r
RDRAND16r
NEG16r
PUSH16r
CALL16r
IMUL16r
JMP16r
POP16r
STR16r
LLDT16r
SLDT16r
NOT16r
IDIV16r
LMSW16r
SMSW16r
FNSTSW16r
VFMADDSUB231PDZ256r
VFMSUB231PDZ256r
VFNMSUB231PDZ256r
VFMSUBADD231PDZ256r
VFMADD231PDZ256r
VFNMADD231PDZ256r
VFMADDSUB132PDZ256r
VFMSUB132PDZ256r
VFNMSUB132PDZ256r
VFMSUBADD132PDZ256r
VFMADD132PDZ256r
VFNMADD132PDZ256r
VFMADDSUB213PDZ256r
VFMSUB213PDZ256r
VFNMSUB213PDZ256r
VFMSUBADD213PDZ256r
VFMADD213PDZ256r
VFNMADD213PDZ256r
VRCP14PDZ256r
VRSQRT14PDZ256r
VGETEXPPDZ256r
VSQRTPDZ256r
VBROADCASTSDZ256r
VFMADDSUB231PSZ256r
VFMSUB231PSZ256r
VFNMSUB231PSZ256r
VFMSUBADD231PSZ256r
VFMADD231PSZ256r
VFNMADD231PSZ256r
VFMADDSUB132PSZ256r
VFMSUB132PSZ256r
VFNMSUB132PSZ256r
VFMSUBADD132PSZ256r
VFMADD132PSZ256r
VFNMADD132PSZ256r
VFMADDSUB213PSZ256r
VFMSUB213PSZ256r
VFNMSUB213PSZ256r
VFMSUBADD213PSZ256r
VFMADD213PSZ256r
VFNMADD213PSZ256r
VRCP14PSZ256r
VRSQRT14PSZ256r
VGETEXPPSZ256r
VSQRTPSZ256r
VBROADCASTSSZ256r
VPBROADCASTBrZ256r
VPBROADCASTDrZ256r
VPBROADCASTQrZ256r
VPBROADCASTWrZ256r
VFMADDSUB231PDZ128r
VFMSUB231PDZ128r
VFNMSUB231PDZ128r
VFMSUBADD231PDZ128r
VFMADD231PDZ128r
VFNMADD231PDZ128r
VFMADDSUB132PDZ128r
VFMSUB132PDZ128r
VFNMSUB132PDZ128r
VFMSUBADD132PDZ128r
VFMADD132PDZ128r
VFNMADD132PDZ128r
VFMADDSUB213PDZ128r
VFMSUB213PDZ128r
VFNMSUB213PDZ128r
VFMSUBADD213PDZ128r
VFMADD213PDZ128r
VFNMADD213PDZ128r
VRCP14PDZ128r
VRSQRT14PDZ128r
VGETEXPPDZ128r
VSQRTPDZ128r
VFMADDSUB231PSZ128r
VFMSUB231PSZ128r
VFNMSUB231PSZ128r
VFMSUBADD231PSZ128r
VFMADD231PSZ128r
VFNMADD231PSZ128r
VFMADDSUB132PSZ128r
VFMSUB132PSZ128r
VFNMSUB132PSZ128r
VFMSUBADD132PSZ128r
VFMADD132PSZ128r
VFNMADD132PSZ128r
VFMADDSUB213PSZ128r
VFMSUB213PSZ128r
VFNMSUB213PSZ128r
VFMSUBADD213PSZ128r
VFMADD213PSZ128r
VFNMADD213PSZ128r
VRCP14PSZ128r
VRSQRT14PSZ128r
VGETEXPPSZ128r
VSQRTPSZ128r
VBROADCASTSSZ128r
VPBROADCASTBrZ128r
VPBROADCASTDrZ128r
VPBROADCASTQrZ128r
VPBROADCASTWrZ128r
DEC8r
INC8r
SETB_C8r
NEG8r
IMUL8r
NOT8r
IDIV8r
SETAr
SETBr
VEXP2PDr
VRCP28PDr
VRSQRT28PDr
VROUNDPDr
VGETEXPPDr
VSQRTPDr
VROUNDYPDr
VFMSUB231SD231SDr
VFNMSUB231SD231SDr
VFMADD231SD231SDr
VFNMADD231SD231SDr
VFMSUB132SD132SDr
VFNMSUB132SD132SDr
VFMADD132SD132SDr
VFNMADD132SD132SDr
VFMSUB213SD213SDr
VFNMSUB213SD213SDr
VFMADD213SD213SDr
VFNMADD213SD213SDr
VRCP28SDr
VRSQRT28SDr
VROUNDSDr
VRNDSCALESDr
VGETEXPSDr
VSQRTSDr
SETAEr
SETBEr
SETGEr
SETLEr
SETNEr
SETEr
UCOM_Fr
SETGr
UCOM_FIr
SETLr
SETNOr
SETOr
UCOM_FPr
UCOM_FIPr
TAILJMPr
SETNPr
UCOM_FPPr
SETPr
VERRr
LTRr
SETNSr
VEXP2PSr
VRCP28PSr
VRSQRT28PSr
VROUNDPSr
VRCPPSr
VGETEXPPSr
VRSQRTPSr
VSQRTPSr
VROUNDYPSr
VFMSUB231SS231SSr
VFNMSUB231SS231SSr
VFMADD231SS231SSr
VFNMADD231SS231SSr
VFMSUB132SS132SSr
VFNMSUB132SS132SSr
VFMADD132SS132SSr
VFNMADD132SS132SSr
VFMSUB213SS213SSr
VFNMSUB213SS213SSr
VFMADD213SS213SSr
VFNMADD213SS213SSr
VRCP28SSr
VRSQRT28SSr
VROUNDSSr
VRNDSCALESSr
VRCPSSr
VGETEXPSSr
VRSQRTSSr
VSQRTSSr
SETSr
VERWr
VSQRTPDYr
VRCPPSYr
VRSQRTPSYr
VSQRTPSYr
VFMADDSUB231PDZr
VFMSUB231PDZr
VFNMSUB231PDZr
VFMSUBADD231PDZr
VFMADD231PDZr
VFNMADD231PDZr
VFMADDSUB132PDZr
VFMSUB132PDZr
VFNMSUB132PDZr
VFMSUBADD132PDZr
VFMADD132PDZr
VFNMADD132PDZr
VFMADDSUB213PDZr
VFMSUB213PDZr
VFNMSUB213PDZr
VFMSUBADD213PDZr
VFMADD213PDZr
VFNMADD213PDZr
VRCP14PDZr
VRSQRT14PDZr
VSQRTPDZr
VSQRTSDZr
VBROADCASTSDZr
VFMADDSUB231PSZr
VFMSUB231PSZr
VFNMSUB231PSZr
VFMSUBADD231PSZr
VFMADD231PSZr
VFNMADD231PSZr
VFMADDSUB132PSZr
VFMSUB132PSZr
VFNMSUB132PSZr
VFMSUBADD132PSZr
VFMADD132PSZr
VFNMADD132PSZr
VFMADDSUB213PSZr
VFMSUB213PSZr
VFNMSUB213PSZr
VFMSUBADD213PSZr
VFMADD213PSZr
VFNMADD213PSZr
VRCP14PSZr
VRSQRT14PSZr
VSQRTPSZr
VSQRTSSZr
VBROADCASTSSZr
VPBROADCASTBrZr
VPBROADCASTDrZr
VPBROADCASTQrZr
VPBROADCASTWrZr
XCHG32ar
XCHG64ar
XCHG16ar
MOV32cr
MOV64cr
MOV32dr
MOV64dr
Int_MemBarrier
OUT32ir
OUT16ir
OUT8ir
KMOVBkr
KMOVDkr
KMOVQkr
KMOVWkr
SBB32mr
LOCK_SUB32mr
ADC32mr
BTC32mr
RELEASE_FADD32mr
RELEASE_ADD32mr
LOCK_ADD32mr
RELEASE_AND32mr
LOCK_AND32mr
MOVBE32mr
CMP32mr
BNDMOVMR32mr
RELEASE_XOR32mr
LOCK_XOR32mr
RELEASE_OR32mr
LOCK_OR32mr
BTR32mr
BTS32mr
BT32mr
RELEASE_MOV32mr
SBB64mr
LOCK_SUB64mr
ADC64mr
BTC64mr
RELEASE_FADD64mr
RELEASE_ADD64mr
LOCK_ADD64mr
RELEASE_AND64mr
LOCK_AND64mr
MMX_MOVD64mr
MOVBE64mr
CMP64mr
MMX_MOVQ64mr
BNDMOVMR64mr
RELEASE_XOR64mr
LOCK_XOR64mr
RELEASE_OR64mr
LOCK_OR64mr
BTR64mr
BTS64mr
BT64mr
RELEASE_MOV64mr
MOVNTI_64mr
VMOVSDto64mr
VFMADDSUBPD4mr
VFMSUBPD4mr
VFNMSUBPD4mr
VFMSUBADDPD4mr
VFMADDPD4mr
VFNMADDPD4mr
VFMSUBSD4mr
VFNMSUBSD4mr
VFMADDSD4mr
VFNMADDSD4mr
VFMADDSUBPS4mr
VFMSUBPS4mr
VFNMSUBPS4mr
VFMSUBADDPS4mr
VFMADDPS4mr
VFNMADDPS4mr
VFMSUBSS4mr
VFNMSUBSS4mr
VFMADDSS4mr
VFNMADDSS4mr
SBB16mr
LOCK_SUB16mr
ADC16mr
BTC16mr
LOCK_ADD16mr
LOCK_AND16mr
MOVBE16mr
ARPL16mr
CMP16mr
LOCK_XOR16mr
LOCK_OR16mr
BTR16mr
BTS16mr
BT16mr
RELEASE_MOV16mr
VMOVDQA32Z256mr
VMOVDQU32Z256mr
VMOVDQA64Z256mr
VMOVDQU64Z256mr
VMOVDQU16Z256mr
VMOVDQU8Z256mr
VPMOVUSDBZ256mr
VPMOVSDBZ256mr
VPMOVDBZ256mr
VPMOVUSQBZ256mr
VPMOVSQBZ256mr
VPMOVQBZ256mr
VPMOVUSWBZ256mr
VPMOVSWBZ256mr
VPMOVWBZ256mr
VPSCATTERDDZ256mr
VMOVAPDZ256mr
VSCATTERDPDZ256mr
VSCATTERQPDZ256mr
VCOMPRESSPDZ256mr
VMOVNTPDZ256mr
VMOVUPDZ256mr
VPSCATTERQDZ256mr
VPMOVUSQDZ256mr
VPMOVSQDZ256mr
VPMOVQDZ256mr
VPCOMPRESSDZ256mr
VPSCATTERDQZ256mr
VMOVNTDQZ256mr
VPSCATTERQQZ256mr
VPCOMPRESSQZ256mr
VMOVAPSZ256mr
VSCATTERDPSZ256mr
VSCATTERQPSZ256mr
VCOMPRESSPSZ256mr
VMOVNTPSZ256mr
VMOVUPSZ256mr
VPMOVUSDWZ256mr
VPMOVSDWZ256mr
VPMOVDWZ256mr
VPMOVUSQWZ256mr
VPMOVSQWZ256mr
VPMOVQWZ256mr
VEXTRACTF128mr
VEXTRACTI128mr
VMOVDQA32Z128mr
VMOVDQU32Z128mr
VMOVDQA64Z128mr
VMOVDQU64Z128mr
VMOVDQU16Z128mr
VMOVDQU8Z128mr
VPMOVUSDBZ128mr
VPMOVSDBZ128mr
VPMOVDBZ128mr
VPMOVUSQBZ128mr
VPMOVSQBZ128mr
VPMOVQBZ128mr
VPMOVUSWBZ128mr
VPMOVSWBZ128mr
VPMOVWBZ128mr
VPSCATTERDDZ128mr
VMOVAPDZ128mr
VSCATTERDPDZ128mr
VSCATTERQPDZ128mr
VCOMPRESSPDZ128mr
VMOVNTPDZ128mr
VMOVUPDZ128mr
VPSCATTERQDZ128mr
VPMOVUSQDZ128mr
VPMOVSQDZ128mr
VPMOVQDZ128mr
VPCOMPRESSDZ128mr
VPSCATTERDQZ128mr
VMOVNTDQZ128mr
VPSCATTERQQZ128mr
VPCOMPRESSQZ128mr
VMOVAPSZ128mr
VSCATTERDPSZ128mr
VSCATTERQPSZ128mr
VCOMPRESSPSZ128mr
VMOVNTPSZ128mr
VMOVUPSZ128mr
VPMOVUSDWZ128mr
VPMOVSDWZ128mr
VPMOVDWZ128mr
VPMOVUSQWZ128mr
VPMOVSQWZ128mr
VPMOVQWZ128mr
SBB8mr
LOCK_SUB8mr
ADC8mr
RELEASE_ADD8mr
LOCK_ADD8mr
RELEASE_AND8mr
LOCK_AND8mr
CMP8mr
RELEASE_XOR8mr
LOCK_XOR8mr
RELEASE_OR8mr
LOCK_OR8mr
RELEASE_MOV8mr
VMOVDQAmr
VPSHABmr
VPSHLBmr
VPEXTRBmr
VPROTBmr
VPSHADmr
VPSHLDmr
VPERMIL2PDmr
VMOVAPDmr
VMOVHPDmr
VMOVLPDmr
VMOVNTPDmr
VMOVUPDmr
VMASKMOVPDmr
VPEXTRDmr
VMOVSDmr
VPROTDmr
VPMASKMOVDmr
VCVTPS2PHmr
VMOVPDI2DImr
VMOVSS2DImr
VMOVPQI2QImr
MOVNTImr
VPPERMmr
VPSHAQmr
VMOVNTDQmr
VPSHLQmr
VPEXTRQmr
MMX_MOVNTQmr
VPROTQmr
VPMASKMOVQmr
VPERMIL2PSmr
VMOVAPSmr
VMOVHPSmr
VMOVLPSmr
VEXTRACTPSmr
VMOVNTPSmr
VMOVUPSmr
VMASKMOVPSmr
VMOVSSmr
VMOVDQUmr
VPCMOVmr
VPSHAWmr
VPSHLWmr
VPEXTRWmr
VPROTWmr
BNDSTXmr
VMOVDQAYmr
VMOVAPDYmr
VMOVNTPDYmr
VMOVUPDYmr
VMASKMOVPDYmr
VPMASKMOVDYmr
VCVTPS2PHYmr
VMOVNTDQYmr
VPMASKMOVQYmr
VMOVAPSYmr
VMOVNTPSYmr
VMOVUPSYmr
VMASKMOVPSYmr
VMOVDQUYmr
VMOVDQA32Zmr
VMOVDQU32Zmr
VMOVDQA64Zmr
VMOVDQU64Zmr
VMOVSDto64Zmr
VMOVPQIto64Zmr
VMOVDQU16Zmr
VMOVDQU8Zmr
VPMOVUSDBZmr
VPMOVSDBZmr
VPMOVDBZmr
VPMOVUSQBZmr
VPMOVSQBZmr
VPMOVQBZmr
VPMOVUSWBZmr
VPMOVSWBZmr
VPMOVWBZmr
VPSCATTERDDZmr
VMOVAPDZmr
VSCATTERDPDZmr
VSCATTERQPDZmr
VCOMPRESSPDZmr
VMOVNTPDZmr
VMOVUPDZmr
VPSCATTERQDZmr
VPMOVUSQDZmr
VPMOVSQDZmr
VPMOVQDZmr
VPCOMPRESSDZmr
VMOVSDZmr
VCVTPS2PHZmr
VMOVPDI2DIZmr
VMOVSS2DIZmr
VPSCATTERDQZmr
VMOVNTDQZmr
VPSCATTERQQZmr
VPCOMPRESSQZmr
VMOVAPSZmr
VSCATTERDPSZmr
VSCATTERQPSZmr
VCOMPRESSPSZmr
VMOVNTPSZmr
VMOVUPSZmr
VMOVSSZmr
VPMOVUSDWZmr
VPMOVSDWZmr
VPMOVDWZmr
VPMOVUSQWZmr
VPMOVSQWZmr
VPMOVQWZmr
PUSH32rmr
POP32rmr
PUSH64rmr
POP64rmr
PUSH16rmr
POP16rmr
VEXTRACTPSzmr
SHA1MSG1rr
SHA256MSG1rr
PFRCPIT1rr
PFRSQIT1rr
CMOVA32rr
SBB32rr
SUB32rr
CMOVB32rr
ADC32rr
BLCIC32rr
BLSIC32rr
T1MSKC32rr
BTC32rr
VMREAD32rr
XADD32rr
AND32rr
CMOVAE32rr
CMOVBE32rr
CMOVGE32rr
CMOVLE32rr
CMOVNE32rr
VMWRITE32rr
CMOVE32rr
BSF32rr
CMPXCHG32rr
CMOVG32rr
BLCI32rr
BZHI32rr
BLSI32rr
BLCMSK32rr
BLSMSK32rr
TZMSK32rr
BNDCL32rr
BLCFILL32rr
BLSFILL32rr
LSL32rr
IMUL32rr
CMOVL32rr
BNDCN32rr
ANDN32rr
IN32rr
CMOVNO32rr
CMOVO32rr
PDEP32rr
CMP32rr
CMOVNP32rr
CMOVP32rr
LAR32rr
XOR32rr
BSR32rr
BLSR32rr
BTR32rr
BEXTR32rr
BLCS32rr
CMOVNS32rr
BTS32rr
CMOVS32rr
BT32rr
POPCNT32rr
LZCNT32rr
TZCNT32rr
TEST32rr
OUT32rr
PEXT32rr
BNDCU32rr
MOV32rr
ADCX32rr
SHLX32rr
MULX32rr
ADOX32rr
SARX32rr
SHRX32rr
SHA1MSG2rr
SHA256MSG2rr
SHA256RNDS2rr
PFRCPIT2rr
VINSERTF64x2rr
VINSERTI64x2rr
CMOVA64rr
SBB64rr
SUB64rr
CMOVB64rr
ADC64rr
BLCIC64rr
BLSIC64rr
T1MSKC64rr
BTC64rr
VMREAD64rr
XADD64rr
AND64rr
Int_VCVTSI2SD64rr
Int_CVTSI2SD64rr
MMX_MOVD64rr
CMOVAE64rr
CMOVBE64rr
CMOVGE64rr
CMOVLE64rr
CMOVNE64rr
VMWRITE64rr
CMOVE64rr
BSF64rr
CMPXCHG64rr
CMOVG64rr
BLCI64rr
BZHI64rr
Int_VCVTTSD2SI64rr
Int_CVTTSD2SI64rr
VCVTSD2SI64rr
Int_VCVTTSS2SI64rr
Int_CVTTSS2SI64rr
VCVTSS2SI64rr
BLSI64rr
BLCMSK64rr
BLSMSK64rr
TZMSK64rr
BNDCL64rr
BLCFILL64rr
BLSFILL64rr
LSL64rr
IMUL64rr
CMOVL64rr
BNDCN64rr
ANDN64rr
CMOVNO64rr
CMOVO64rr
PDEP64rr
CMP64rr
CMOVNP64rr
CMOVP64rr
MMX_MOVQ64rr
LAR64rr
MMX_MOVQ2FR64rr
XOR64rr
BSR64rr
BLSR64rr
BTR64rr
BEXTR64rr
BLCS64rr
CMOVNS64rr
Int_VCVTSI2SS64rr
Int_CVTSI2SS64rr
BTS64rr
CMOVS64rr
BT64rr
POPCNT64rr
LZCNT64rr
TZCNT64rr
TEST64rr
PEXT64rr
BNDCU64rr
MOV64rr
ADCX64rr
SHLX64rr
MULX64rr
ADOX64rr
SARX64rr
SHRX64rr
MMX_MOVD64from64rr
MMX_MOVD64to64rr
VMOVSDto64rr
VMOVPQIto64rr
VFMADDSUBPD4rr
VFMSUBPD4rr
VFNMSUBPD4rr
VFMSUBADDPD4rr
VFMADDPD4rr
VFNMADDPD4rr
VFMSUBSD4rr
VFNMSUBSD4rr
VFMADDSD4rr
VFNMADDSD4rr
VFMADDSUBPS4rr
VFMSUBPS4rr
VFNMSUBPS4rr
VFMSUBADDPS4rr
VFMADDPS4rr
VFNMADDPS4rr
VFMSUBSS4rr
VFNMSUBSS4rr
VFMADDSS4rr
VFNMADDSS4rr
VEXTRACTF32x4rr
VINSERTF32x4rr
VEXTRACTI32x4rr
VINSERTI32x4rr
VEXTRACTF64x4rr
VINSERTF64x4rr
VEXTRACTI64x4rr
VINSERTI64x4rr
CMOVA16rr
SBB16rr
SUB16rr
CMOVB16rr
ADC16rr
BTC16rr
XADD16rr
AND16rr
CMOVAE16rr
CMOVBE16rr
CMOVGE16rr
CMOVLE16rr
CMOVNE16rr
CMOVE16rr
BSF16rr
CMPXCHG16rr
CMOVG16rr
ARPL16rr
LSL16rr
IMUL16rr
CMOVL16rr
IN16rr
CMOVNO16rr
CMOVO16rr
CMP16rr
CMOVNP16rr
CMOVP16rr
LAR16rr
XOR16rr
BSR16rr
BTR16rr
CMOVNS16rr
BTS16rr
CMOVS16rr
BT16rr
POPCNT16rr
LZCNT16rr
TZCNT16rr
TEST16rr
OUT16rr
MOV16rr
VPERMI2D256rr
VPERMT2D256rr
VPERMI2PD256rr
VPERMT2PD256rr
VPERMI2Q256rr
VPERMT2Q256rr
VPALIGNR256rr
VPERMI2PS256rr
VPERMT2PS256rr
VPERMI2W256rr
VPERMT2W256rr
VMOVDQA32Z256rr
VMOVDQU32Z256rr
VMOVDQA64Z256rr
VMOVDQU64Z256rr
VMOVDQU16Z256rr
VMOVDQU8Z256rr
VPMOVM2BZ256rr
VPSUBBZ256rr
VPADDBZ256rr
VPMOVUSDBZ256rr
VPMOVSDBZ256rr
VPMOVDBZ256rr
VPSHUFBZ256rr
VPAVGBZ256rr
VPBLENDMBZ256rr
VPTESTNMBZ256rr
VPTESTMBZ256rr
VPCMPEQBZ256rr
VPMOVUSQBZ256rr
VPMOVSQBZ256rr
VPMOVQBZ256rr
VPABSBZ256rr
VPSUBSBZ256rr
VPADDSBZ256rr
VPMINSBZ256rr
VPSUBUSBZ256rr
VPADDUSBZ256rr
VPMAXSBZ256rr
VPCMPGTBZ256rr
VPMINUBZ256rr
VPMAXUBZ256rr
VPACKSSWBZ256rr
VPACKUSWBZ256rr
VPMOVUSWBZ256rr
VPMOVSWBZ256rr
VPMOVWBZ256rr
VPMOVM2DZ256rr
VPBROADCASTMW2DZ256rr
VPSRADZ256rr
VPSUBDZ256rr
VPMOVSXBDZ256rr
VPMOVZXBDZ256rr
VPADDDZ256rr
VPANDDZ256rr
VPEXPANDDZ256rr
VPSLLDZ256rr
VPMULLDZ256rr
VPSRLDZ256rr
VPBLENDMDZ256rr
VPTESTNMDZ256rr
VPERMDZ256rr
VPTESTMDZ256rr
VPANDNDZ256rr
VCVTDQ2PDZ256rr
VCVTUDQ2PDZ256rr
VCVTQQ2PDZ256rr
VCVTUQQ2PDZ256rr
VCVTPS2PDZ256rr
VMOVAPDZ256rr
VSUBPDZ256rr
VADDPDZ256rr
VEXPANDPDZ256rr
VANDPDZ256rr
VSCALEFPDZ256rr
VUNPCKHPDZ256rr
VUNPCKLPDZ256rr
VMULPDZ256rr
VBLENDMPDZ256rr
VPERMPDZ256rr
VANDNPDZ256rr
VMINPDZ256rr
VORPDZ256rr
VXORPDZ256rr
VCOMPRESSPDZ256rr
VMOVUPDZ256rr
VDIVPDZ256rr
VMAXPDZ256rr
VPCMPEQDZ256rr
VPMOVUSQDZ256rr
VPMOVSQDZ256rr
VPMOVQDZ256rr
VPORDZ256rr
VPXORDZ256rr
VPABSDZ256rr
VPMINSDZ256rr
VPCOMPRESSDZ256rr
VPMAXSDZ256rr
VPCMPGTDZ256rr
VPMINUDZ256rr
VPMAXUDZ256rr
VPSRAVDZ256rr
VPSLLVDZ256rr
VPROLVDZ256rr
VPSRLVDZ256rr
VPRORVDZ256rr
VPMADDWDZ256rr
VPUNPCKHWDZ256rr
VPUNPCKLWDZ256rr
VPMOVSXWDZ256rr
VPMOVZXWDZ256rr
VPMOVB2MZ256rr
VPMOVD2MZ256rr
VPMOVQ2MZ256rr
VPMOVW2MZ256rr
VPBROADCASTMB2QZ256rr
VPMOVM2QZ256rr
VPSRAQZ256rr
VPSUBQZ256rr
VPMOVSXBQZ256rr
VPMOVZXBQZ256rr
VCVTTPD2DQZ256rr
VCVTPD2DQZ256rr
VCVTTPS2DQZ256rr
VCVTPS2DQZ256rr
VPADDQZ256rr
VPUNPCKHDQZ256rr
VPUNPCKLDQZ256rr
VPMULDQZ256rr
VPANDQZ256rr
VPEXPANDQZ256rr
VPUNPCKHQDQZ256rr
VPUNPCKLQDQZ256rr
VCVTTPD2UDQZ256rr
VCVTPD2UDQZ256rr
VCVTTPS2UDQZ256rr
VCVTPS2UDQZ256rr
VPMULUDQZ256rr
VPMOVSXDQZ256rr
VPMOVZXDQZ256rr
VPSLLQZ256rr
VPMULLQZ256rr
VPSRLQZ256rr
VPBLENDMQZ256rr
VPTESTNMQZ256rr
VPERMQZ256rr
VPTESTMQZ256rr
VPANDNQZ256rr
VCVTTPD2QQZ256rr
VCVTPD2QQZ256rr
VCVTTPS2QQZ256rr
VCVTPS2QQZ256rr
VPCMPEQQZ256rr
VCVTTPD2UQQZ256rr
VCVTPD2UQQZ256rr
VCVTTPS2UQQZ256rr
VCVTPS2UQQZ256rr
VPORQZ256rr
VPXORQZ256rr
VPABSQZ256rr
VPMINSQZ256rr
VPCOMPRESSQZ256rr
VPMAXSQZ256rr
VPCMPGTQZ256rr
VPMINUQZ256rr
VPMAXUQZ256rr
VPSRAVQZ256rr
VPSLLVQZ256rr
VPROLVQZ256rr
VPSRLVQZ256rr
VPRORVQZ256rr
VPMOVSXWQZ256rr
VPMOVZXWQZ256rr
VCVTPD2PSZ256rr
VCVTDQ2PSZ256rr
VCVTUDQ2PSZ256rr
VCVTQQ2PSZ256rr
VCVTUQQ2PSZ256rr
VMOVAPSZ256rr
VSUBPSZ256rr
VADDPSZ256rr
VEXPANDPSZ256rr
VANDPSZ256rr
VSCALEFPSZ256rr
VUNPCKHPSZ256rr
VUNPCKLPSZ256rr
VMULPSZ256rr
VBLENDMPSZ256rr
VPERMPSZ256rr
VANDNPSZ256rr
VMINPSZ256rr
VORPSZ256rr
VXORPSZ256rr
VCOMPRESSPSZ256rr
VMOVUPSZ256rr
VDIVPSZ256rr
VMAXPSZ256rr
VPMOVM2WZ256rr
VPSRAWZ256rr
VPUNPCKHBWZ256rr
VPUNPCKLBWZ256rr
VPSUBWZ256rr
VPMOVSXBWZ256rr
VPMOVZXBWZ256rr
VPADDWZ256rr
VPACKSSDWZ256rr
VPACKUSDWZ256rr
VPMOVUSDWZ256rr
VPMOVSDWZ256rr
VPMOVDWZ256rr
VPAVGWZ256rr
VPMULHWZ256rr
VPSLLWZ256rr
VPMULLWZ256rr
VPSRLWZ256rr
VPBLENDMWZ256rr
VPTESTNMWZ256rr
VPERMWZ256rr
VPTESTMWZ256rr
VPCMPEQWZ256rr
VPMOVUSQWZ256rr
VPMOVSQWZ256rr
VPMOVQWZ256rr
VPABSWZ256rr
VPMADDUBSWZ256rr
VPSUBSWZ256rr
VPADDSWZ256rr
VPMINSWZ256rr
VPMULHRSWZ256rr
VPSUBUSWZ256rr
VPADDUSWZ256rr
VPMAXSWZ256rr
VPCMPGTWZ256rr
VPMULHUWZ256rr
VPMINUWZ256rr
VPMAXUWZ256rr
VPSRAVWZ256rr
VPSLLVWZ256rr
VPSRLVWZ256rr
VPERMI2D128rr
VPERMT2D128rr
VPERMI2PD128rr
VPERMT2PD128rr
VPERM2F128rr
VEXTRACTF128rr
VINSERTF128rr
VPERM2I128rr
VEXTRACTI128rr
VINSERTI128rr
VPCMPESTRM128rr
VPCMPISTRM128rr
VPERMI2Q128rr
VPERMT2Q128rr
VPALIGNR128rr
VPERMI2PS128rr
VPERMT2PS128rr
VAESKEYGENASSIST128rr
VPERMI2W128rr
VPERMT2W128rr
VMOVDQA32Z128rr
VMOVDQU32Z128rr
VMOVDQA64Z128rr
VMOVDQU64Z128rr
VMOVDQU16Z128rr
VMOVDQU8Z128rr
VPMOVM2BZ128rr
VPSUBBZ128rr
VPADDBZ128rr
VPMOVUSDBZ128rr
VPMOVSDBZ128rr
VPMOVDBZ128rr
VPSHUFBZ128rr
VPAVGBZ128rr
VPBLENDMBZ128rr
VPTESTNMBZ128rr
VPTESTMBZ128rr
VPCMPEQBZ128rr
VPMOVUSQBZ128rr
VPMOVSQBZ128rr
VPMOVQBZ128rr
VPABSBZ128rr
VPSUBSBZ128rr
VPADDSBZ128rr
VPMINSBZ128rr
VPSUBUSBZ128rr
VPADDUSBZ128rr
VPMAXSBZ128rr
VPCMPGTBZ128rr
VPMINUBZ128rr
VPMAXUBZ128rr
VPACKSSWBZ128rr
VPACKUSWBZ128rr
VPMOVUSWBZ128rr
VPMOVSWBZ128rr
VPMOVWBZ128rr
VPMOVM2DZ128rr
VPBROADCASTMW2DZ128rr
VPSRADZ128rr
VPSUBDZ128rr
VPMOVSXBDZ128rr
VPMOVZXBDZ128rr
VPADDDZ128rr
VPANDDZ128rr
VPEXPANDDZ128rr
VPSLLDZ128rr
VPMULLDZ128rr
VPSRLDZ128rr
VPBLENDMDZ128rr
VPTESTNMDZ128rr
VPTESTMDZ128rr
VPANDNDZ128rr
VCVTDQ2PDZ128rr
VCVTUDQ2PDZ128rr
VCVTQQ2PDZ128rr
VCVTUQQ2PDZ128rr
VCVTPS2PDZ128rr
VMOVAPDZ128rr
VSUBPDZ128rr
VADDPDZ128rr
VEXPANDPDZ128rr
VANDPDZ128rr
VSCALEFPDZ128rr
VUNPCKHPDZ128rr
VUNPCKLPDZ128rr
VMULPDZ128rr
VBLENDMPDZ128rr
VANDNPDZ128rr
VMINPDZ128rr
VORPDZ128rr
VXORPDZ128rr
VCOMPRESSPDZ128rr
VMOVUPDZ128rr
VDIVPDZ128rr
VMAXPDZ128rr
VPCMPEQDZ128rr
VPMOVUSQDZ128rr
VPMOVSQDZ128rr
VPMOVQDZ128rr
VPORDZ128rr
VPXORDZ128rr
VPABSDZ128rr
VSCALEFSDZ128rr
VPMINSDZ128rr
VPCOMPRESSDZ128rr
VPMAXSDZ128rr
VPCMPGTDZ128rr
VPMINUDZ128rr
VPMAXUDZ128rr
VPSRAVDZ128rr
VPSLLVDZ128rr
VPROLVDZ128rr
VPSRLVDZ128rr
VPRORVDZ128rr
VPMADDWDZ128rr
VPUNPCKHWDZ128rr
VPUNPCKLWDZ128rr
VPMOVSXWDZ128rr
VPMOVZXWDZ128rr
VPMOVB2MZ128rr
VPMOVD2MZ128rr
VPMOVQ2MZ128rr
VPMOVW2MZ128rr
VPBROADCASTMB2QZ128rr
VPMOVM2QZ128rr
VPSRAQZ128rr
VPSUBQZ128rr
VPMOVSXBQZ128rr
VPMOVZXBQZ128rr
VCVTTPD2DQZ128rr
VCVTPD2DQZ128rr
VCVTTPS2DQZ128rr
VCVTPS2DQZ128rr
VPADDQZ128rr
VPUNPCKHDQZ128rr
VPUNPCKLDQZ128rr
VPMULDQZ128rr
VPANDQZ128rr
VPEXPANDQZ128rr
VPUNPCKHQDQZ128rr
VPUNPCKLQDQZ128rr
VCVTTPD2UDQZ128rr
VCVTPD2UDQZ128rr
VCVTTPS2UDQZ128rr
VCVTPS2UDQZ128rr
VPMULUDQZ128rr
VPMOVSXDQZ128rr
VPMOVZXDQZ128rr
VPSLLQZ128rr
VPMULLQZ128rr
VPSRLQZ128rr
VPBLENDMQZ128rr
VPTESTNMQZ128rr
VPTESTMQZ128rr
VPANDNQZ128rr
VCVTTPD2QQZ128rr
VCVTPD2QQZ128rr
VCVTTPS2QQZ128rr
VCVTPS2QQZ128rr
VPCMPEQQZ128rr
VCVTTPD2UQQZ128rr
VCVTPD2UQQZ128rr
VCVTTPS2UQQZ128rr
VCVTPS2UQQZ128rr
VPORQZ128rr
VPXORQZ128rr
VPABSQZ128rr
VPMINSQZ128rr
VPCOMPRESSQZ128rr
VPMAXSQZ128rr
VPCMPGTQZ128rr
VPMINUQZ128rr
VPMAXUQZ128rr
VPSRAVQZ128rr
VPSLLVQZ128rr
VPROLVQZ128rr
VPSRLVQZ128rr
VPRORVQZ128rr
VPMOVSXWQZ128rr
VPMOVZXWQZ128rr
VCVTPD2PSZ128rr
VCVTDQ2PSZ128rr
VCVTUDQ2PSZ128rr
VCVTQQ2PSZ128rr
VCVTUQQ2PSZ128rr
VMOVAPSZ128rr
VSUBPSZ128rr
VADDPSZ128rr
VEXPANDPSZ128rr
VANDPSZ128rr
VSCALEFPSZ128rr
VUNPCKHPSZ128rr
VUNPCKLPSZ128rr
VMULPSZ128rr
VBLENDMPSZ128rr
VANDNPSZ128rr
VMINPSZ128rr
VORPSZ128rr
VXORPSZ128rr
VCOMPRESSPSZ128rr
VMOVUPSZ128rr
VDIVPSZ128rr
VMAXPSZ128rr
VSCALEFSSZ128rr
VPMOVM2WZ128rr
VPSRAWZ128rr
VPUNPCKHBWZ128rr
VPUNPCKLBWZ128rr
VPSUBWZ128rr
VPMOVSXBWZ128rr
VPMOVZXBWZ128rr
VPADDWZ128rr
VPACKSSDWZ128rr
VPACKUSDWZ128rr
VPMOVUSDWZ128rr
VPMOVSDWZ128rr
VPMOVDWZ128rr
VPAVGWZ128rr
VPMULHWZ128rr
VPSLLWZ128rr
VPMULLWZ128rr
VPSRLWZ128rr
VPBLENDMWZ128rr
VPTESTNMWZ128rr
VPERMWZ128rr
VPTESTMWZ128rr
VPCMPEQWZ128rr
VPMOVUSQWZ128rr
VPMOVSQWZ128rr
VPMOVQWZ128rr
VPABSWZ128rr
VPMADDUBSWZ128rr
VPSUBSWZ128rr
VPADDSWZ128rr
VPMINSWZ128rr
VPMULHRSWZ128rr
VPSUBUSWZ128rr
VPADDUSWZ128rr
VPMAXSWZ128rr
VPCMPGTWZ128rr
VPMULHUWZ128rr
VPMINUWZ128rr
VPMAXUWZ128rr
VPSRAVWZ128rr
VPSLLVWZ128rr
VPSRLVWZ128rr
SBB8rr
SUB8rr
ADC8rr
XADD8rr
AND8rr
CMPXCHG8rr
IN8rr
CMP8rr
XOR8rr
TEST8rr
OUT8rr
MOV8rr
VINSERTF32x8rr
VINSERTI32x8rr
VMOVDQArr
VPSHABrr
VPSUBBrr
VPADDBrr
KANDBrr
VPSHUFBrr
VPAVGBrr
VPMOVMSKBrr
MMX_PMOVMSKBrr
VPSHLBrr
KANDNBrr
VPSIGNBrr
VPCMPEQBrr
KORBrr
KXNORBrr
KXORBrr
VPINSRBrr
VPEXTRBrr
VPSUBSBrr
VPADDSBrr
VPMINSBrr
VPSUBUSBrr
VPADDUSBrr
PAVGUSBrr
VPMAXSBrr
VPCMPGTBrr
KNOTBrr
VPROTBrr
VPBROADCASTBrr
KORTESTBrr
VPMINUBrr
PFSUBrr
VPMAXUBrr
VPBLENDVBrr
VPACKSSWBrr
VPACKUSWBrr
PFACCrr
PFNACCrr
PFPNACCrr
VAESDECrr
VAESIMCrr
VAESENCrr
VPERMI2Drr
VPERMT2Drr
VPSHADrr
VPSRADrr
MMX_PSRADrr
VPHADDBDrr
VPHADDUBDrr
VPHSUBDrr
VPSUBDrr
VPMOVSXBDrr
VPMOVZXBDrr
PFADDrr
VPHADDDrr
VPADDDrr
KANDDrr
VPMACSDDrr
VPMACSSDDrr
PI2FDrr
PF2IDrr
VPSHLDrr
VPSLLDrr
MMX_PSLLDrr
VPMULLDrr
VPSRLDrr
MMX_PSRLDrr
VPANDrr
KANDNDrr
VPSIGNDrr
VPERMI2PDrr
VPERMIL2PDrr
VCVTDQ2PDrr
VCVTPS2PDrr
VPERMT2PDrr
VMOVAPDrr
PSWAPDrr
VADDSUBPDrr
VHSUBPDrr
VSUBPDrr
VMINCPDrr
VMAXCPDrr
VHADDPDrr
VADDPDrr
VANDPDrr
VFsANDPDrr
VFvANDPDrr
VUNPCKHPDrr
VMOVMSKPDrr
VPERMILPDrr
VUNPCKLPDrr
VMULPDrr
VANDNPDrr
VFsANDNPDrr
VFvANDNPDrr
VMINPDrr
VORPDrr
VXORPDrr
VFsXORPDrr
VFvXORPDrr
VFsORPDrr
VFvORPDrr
VTESTPDrr
VMOVUPDrr
VBLENDVPDrr
VDIVPDrr
VMAXPDrr
VFRCZPDrr
VPCMPEQDrr
KORDrr
KXNORDrr
KXORDrr
VPINSRDrr
VPEXTRDrr
Int_VCVTSI2SDrr
Int_CVTSI2SDrr
Int_VCVTSS2SDrr
Int_CVTSS2SDrr
VRCP14SDrr
VRSQRT14SDrr
VSUBSDrr
VMINCSDrr
VMAXCSDrr
VADDSDrr
Int_VUCOMISDrr
Int_UCOMISDrr
Int_VCOMISDrr
Int_COMISDrr
VMULSDrr
VPMINSDrr
VMINSDrr
Int_VCMPSDrr
Int_CMPSDrr
VDIVSDrr
VMOVSDrr
VPMAXSDrr
VMAXSDrr
VFRCZSDrr
VMOV64toSDrr
VPCONFLICTDrr
VPCMPGTDrr
VPLZCNTDrr
KNOTDrr
VPROTDrr
VPBROADCASTDrr
KORTESTDrr
VPMINUDrr
VPMAXUDrr
VPSRAVDrr
VPSLLVDrr
VPSRLVDrr
VPHSUBWDrr
VPHADDWDrr
VPMADDWDrr
VPUNPCKHWDrr
VPUNPCKLWDrr
VPMACSWDrr
VPMADCSWDrr
VPMACSSWDrr
VPMADCSSWDrr
VPHADDUWDrr
VPMOVSXWDrr
VPMOVZXWDrr
PFCMPGErr
SHA1NEXTErr
LD_Frr
ST_Frr
VCVTPS2PHrr
VPMACSDQHrr
VPMACSSDQHrr
VMOVPDI2DIrr
VMOVSS2DIrr
VMOVDI2PDIrr
VMOVPQI2QIrr
VMOVZQI2PQIrr
VMOVZPQILo2PQIrr
VMOV64toPQIrr
VPCMPESTRIrr
VPCMPISTRIrr
Int_VCVTTSD2SIrr
Int_CVTTSD2SIrr
VCVTSD2SIrr
Int_VCVTTSS2SIrr
Int_CVTTSS2SIrr
VCVTSS2SIrr
VPMACSDQLrr
VPMACSSDQLrr
PFMULrr
VPPERMrr
BNDMOVRMrr
VPANDNrr
PFMINrr
PFRCPrr
ST_FPrr
VMOVDDUPrr
VMOVSHDUPrr
VMOVSLDUPrr
MMX_MOVFR642Qrr
VPERMI2Qrr
MMX_MOVDQ2Qrr
VPERMT2Qrr
VPSHAQrr
VPHADDBQrr
VPHADDUBQrr
VPSUBQrr
VPMOVSXBQrr
VPMOVZXBQrr
VCVTTPD2DQrr
VCVTPD2DQrr
MMX_MOVQ2DQrr
VCVTTPS2DQrr
VCVTPS2DQrr
VPHSUBDQrr
VPADDQrr
VPHADDDQrr
VPUNPCKHDQrr
VPUNPCKLDQrr
VPMULDQrr
KANDQrr
VPUNPCKHQDQrr
VPUNPCKLQDQrr
VPCLMULQDQrr
VPHADDUDQrr
VPMULUDQrr
VPMOVSXDQrr
VPMOVZXDQrr
PFCMPEQrr
VPSHLQrr
VPSLLQrr
MMX_PSLLQrr
VPSRLQrr
MMX_PSRLQrr
KANDNQrr
VPCMPEQQrr
KORQrr
KXNORQrr
KXORQrr
VPINSRQrr
VPEXTRQrr
VPCONFLICTQrr
VPCMPGTQrr
VPLZCNTQrr
KNOTQrr
VPROTQrr
VPBROADCASTQrr
KORTESTQrr
VPSLLVQrr
VPSRLVQrr
VPHADDWQrr
VPHADDUWQrr
VPMOVSXWQrr
VPMOVZXWQrr
PFSUBRrr
BNDMOVMRrr
VPORrr
VPXORrr
VCVTPD2PSrr
VCVTPH2PSrr
VPERMI2PSrr
VPERMIL2PSrr
VCVTDQ2PSrr
VPERMT2PSrr
VMOVAPSrr
VADDSUBPSrr
VHSUBPSrr
VSUBPSrr
VMINCPSrr
VMAXCPSrr
VHADDPSrr
VADDPSrr
VANDPSrr
VFsANDPSrr
VFvANDPSrr
VUNPCKHPSrr
VMOVLHPSrr
VMOVMSKPSrr
VMOVHLPSrr
VPERMILPSrr
VUNPCKLPSrr
VMULPSrr
VANDNPSrr
VFsANDNPSrr
VFvANDNPSrr
VMINPSrr
VORPSrr
VXORPSrr
VFsXORPSrr
VFvXORPSrr
VFsORPSrr
VFvORPSrr
VEXTRACTPSrr
VINSERTPSrr
VTESTPSrr
VMOVUPSrr
VBLENDVPSrr
VDIVPSrr
VMAXPSrr
VFRCZPSrr
Int_VCVTSD2SSrr
Int_CVTSD2SSrr
VMOVDI2SSrr
Int_VCVTSI2SSrr
Int_CVTSI2SSrr
VRCP14SSrr
VRSQRT14SSrr
VSUBSSrr
VMINCSSrr
VMAXCSSrr
VADDSSrr
Int_VUCOMISSrr
Int_UCOMISSrr
Int_VCOMISSrr
Int_COMISSrr
VMULSSrr
VMINSSrr
Int_VCMPSSrr
Int_CMPSSrr
VBROADCASTSSrr
VDIVSSrr
VMOVSSrr
VMAXSSrr
VFRCZSSrr
PFCMPGTrr
MWAITrr
PFRSQRTrr
VAESDECLASTrr
VAESENCLASTrr
VPTESTrr
VMOVDQUrr
VPCMOVrr
VPERMI2Wrr
VPERMT2Wrr
VPSHAWrr
VPSRAWrr
MMX_PSRAWrr
VPHSUBBWrr
VPSADBWrr
VPHADDBWrr
VPUNPCKHBWrr
KUNPCKBWrr
VPUNPCKLBWrr
VPHADDUBWrr
VPHSUBWrr
VPSUBWrr
VPMOVSXBWrr
VPMOVZXBWrr
VPHADDWrr
VPADDWrr
KANDWrr
VPACKSSDWrr
VPACKUSDWrr
PI2FWrr
VPAVGWrr
VPMULHWrr
PF2IWrr
VPSHLWrr
VPSLLWrr
MMX_PSLLWrr
VPMULLWrr
VPSRLWrr
MMX_PSRLWrr
KANDNWrr
VPSIGNWrr
VPCMPEQWrr
PMULHRWrr
KORWrr
KXNORWrr
KXORWrr
VPSUBSWrr
VPADDSWrr
VPMINSWrr
VPSUBUSWrr
VPADDUSWrr
VPMAXSWrr
VPCMPGTWrr
KNOTWrr
VPROTWrr
VPBROADCASTWrr
KORTESTWrr
VPMULHUWrr
VPMINUWrr
VPMAXUWrr
VPMACSWWrr
VPMACSSWWrr
PFMAXrr
VMOVDQAYrr
VPSUBBYrr
VPADDBYrr
VPSHUFBYrr
VPAVGBYrr
VPMOVMSKBYrr
VPSIGNBYrr
VPCMPEQBYrr
VPSUBSBYrr
VPADDSBYrr
VPMINSBYrr
VPSUBUSBYrr
VPADDUSBYrr
VPMAXSBYrr
VPCMPGTBYrr
VPBROADCASTBYrr
VPMINUBYrr
VPMAXUBYrr
VPBLENDVBYrr
VPACKSSWBYrr
VPACKUSWBYrr
VPSRADYrr
VPHSUBDYrr
VPSUBDYrr
VPMOVSXBDYrr
VPMOVZXBDYrr
VPHADDDYrr
VPADDDYrr
VPSLLDYrr
VPMULLDYrr
VPSRLDYrr
VPERMDYrr
VPANDYrr
VPSIGNDYrr
VCVTDQ2PDYrr
VCVTPS2PDYrr
VMOVAPDYrr
VADDSUBPDYrr
VHSUBPDYrr
VSUBPDYrr
VMINCPDYrr
VMAXCPDYrr
VHADDPDYrr
VADDPDYrr
VANDPDYrr
VFvANDPDYrr
VUNPCKHPDYrr
VMOVMSKPDYrr
VPERMILPDYrr
VUNPCKLPDYrr
VMULPDYrr
VANDNPDYrr
VFvANDNPDYrr
VMINPDYrr
VORPDYrr
VXORPDYrr
VFvXORPDYrr
VFvORPDYrr
VTESTPDYrr
VMOVUPDYrr
VBLENDVPDYrr
VDIVPDYrr
VMAXPDYrr
VPCMPEQDYrr
VPMINSDYrr
VBROADCASTSDYrr
VPMAXSDYrr
VPCMPGTDYrr
VPBROADCASTDYrr
VPMINUDYrr
VPMAXUDYrr
VPSRAVDYrr
VPSLLVDYrr
VPSRLVDYrr
VPMADDWDYrr
VPUNPCKHWDYrr
VPUNPCKLWDYrr
VPMOVSXWDYrr
VPMOVZXWDYrr
VCVTPS2PHYrr
VPANDNYrr
VMOVDDUPYrr
VMOVSHDUPYrr
VMOVSLDUPYrr
VPSUBQYrr
VPMOVSXBQYrr
VPMOVZXBQYrr
VCVTTPD2DQYrr
VCVTPD2DQYrr
VCVTTPS2DQYrr
VCVTPS2DQYrr
VPADDQYrr
VPUNPCKHDQYrr
VPUNPCKLDQYrr
VPMULDQYrr
VPUNPCKHQDQYrr
VPUNPCKLQDQYrr
VPMULUDQYrr
VPMOVSXDQYrr
VPMOVZXDQYrr
VPSLLQYrr
VPSRLQYrr
VPCMPEQQYrr
VPCMPGTQYrr
VPBROADCASTQYrr
VPSLLVQYrr
VPSRLVQYrr
VPMOVSXWQYrr
VPMOVZXWQYrr
VPORYrr
VPXORYrr
VCVTPD2PSYrr
VCVTPH2PSYrr
VCVTDQ2PSYrr
VMOVAPSYrr
VADDSUBPSYrr
VHSUBPSYrr
VSUBPSYrr
VMINCPSYrr
VMAXCPSYrr
VHADDPSYrr
VADDPSYrr
VANDPSYrr
VFvANDPSYrr
VUNPCKHPSYrr
VMOVMSKPSYrr
VPERMILPSYrr
VUNPCKLPSYrr
VMULPSYrr
VPERMPSYrr
VANDNPSYrr
VFvANDNPSYrr
VMINPSYrr
VORPSYrr
VXORPSYrr
VFvXORPSYrr
VFvORPSYrr
VTESTPSYrr
VMOVUPSYrr
VBLENDVPSYrr
VDIVPSYrr
VMAXPSYrr
VBROADCASTSSYrr
VPTESTYrr
VMOVDQUYrr
VPSRAWYrr
VPSADBWYrr
VPUNPCKHBWYrr
VPUNPCKLBWYrr
VPHSUBWYrr
VPSUBWYrr
VPMOVSXBWYrr
VPMOVZXBWYrr
VPHADDWYrr
VPADDWYrr
VPACKSSDWYrr
VPACKUSDWYrr
VPAVGWYrr
VPMULHWYrr
VPSLLWYrr
VPMULLWYrr
VPSRLWYrr
VPSIGNWYrr
VPCMPEQWYrr
VPSUBSWYrr
VPADDSWYrr
VPMINSWYrr
VPSUBUSWYrr
VPADDUSWYrr
VPMAXSWYrr
VPCMPGTWYrr
VPBROADCASTWYrr
VPMULHUWYrr
VPMINUWYrr
VPMAXUWYrr
VMOVDQA32Zrr
VMOVDQU32Zrr
VMOVDQA64Zrr
Int_VCVTSI2SD64Zrr
Int_VCVTTSD2SI64Zrr
VCVTSD2SI64Zrr
Int_VCVTTSS2SI64Zrr
VCVTSS2SI64Zrr
Int_VCVTTSD2USI64Zrr
VCVTSD2USI64Zrr
Int_VCVTTSS2USI64Zrr
VCVTSS2USI64Zrr
Int_VCVTSI2SS64Zrr
VMOVDQU64Zrr
VMOVSDto64Zrr
VMOVPQIto64Zrr
VMOVDQU16Zrr
VMOVDQU8Zrr
VPMOVM2BZrr
VPSUBBZrr
VPADDBZrr
VPMOVUSDBZrr
VPMOVSDBZrr
VPMOVDBZrr
VPSHUFBZrr
VPAVGBZrr
VPBLENDMBZrr
VPTESTNMBZrr
VPTESTMBZrr
VPCMPEQBZrr
VPMOVUSQBZrr
VPMOVSQBZrr
VPMOVQBZrr
VPABSBZrr
VPSUBSBZrr
VPADDSBZrr
VPMINSBZrr
VPSUBUSBZrr
VPADDUSBZrr
VPMAXSBZrr
VPCMPGTBZrr
VPMINUBZrr
VPMAXUBZrr
VPACKSSWBZrr
VPACKUSWBZrr
VPMOVUSWBZrr
VPMOVSWBZrr
VPMOVWBZrr
VPMOVM2DZrr
VPBROADCASTMW2DZrr
VPSRADZrr
VPSUBDZrr
VPMOVSXBDZrr
VPMOVZXBDZrr
VPADDDZrr
VPANDDZrr
VPEXPANDDZrr
VPSLLDZrr
VPMULLDZrr
VPSRLDZrr
VPBLENDMDZrr
VPTESTNMDZrr
VPERMDZrr
VPTESTMDZrr
VPANDNDZrr
VCVTDQ2PDZrr
VCVTUDQ2PDZrr
VCVTQQ2PDZrr
VCVTUQQ2PDZrr
VCVTPS2PDZrr
VMOVAPDZrr
VSUBPDZrr
VADDPDZrr
VEXPANDPDZrr
VANDPDZrr
VSCALEFPDZrr
VUNPCKHPDZrr
VPERMILPDZrr
VUNPCKLPDZrr
VMULPDZrr
VBLENDMPDZrr
VPERMPDZrr
VANDNPDZrr
VMINPDZrr
VORPDZrr
VXORPDZrr
VCOMPRESSPDZrr
VMOVUPDZrr
VDIVPDZrr
VMAXPDZrr
VPCMPEQDZrr
VPMOVUSQDZrr
VPMOVSQDZrr
VPMOVQDZrr
VPORDZrr
VPXORDZrr
VCVTSI642SDZrr
VCVTUSI642SDZrr
Int_VCVTSI2SDZrr
Int_VCVTUSI2SDZrr
VCVTSS2SDZrr
VPABSDZrr
VSUBSDZrr
VADDSDZrr
Int_VUCOMISDZrr
Int_VCOMISDZrr
VMULSDZrr
VPMINSDZrr
VMINSDZrr
VCMPSDZrr
VPCOMPRESSDZrr
VDIVSDZrr
VMOVSDZrr
VPMAXSDZrr
VMAXSDZrr
VMOV64toSDZrr
VPCMPGTDZrr
VPBROADCASTDZrr
VPMINUDZrr
VPMAXUDZrr
VPSRAVDZrr
VPSLLVDZrr
VPROLVDZrr
VPSRLVDZrr
VPRORVDZrr
VPMADDWDZrr
VPUNPCKHWDZrr
VPUNPCKLWDZrr
VPMOVSXWDZrr
VPMOVZXWDZrr
VCVTPS2PHZrr
VMOVPDI2DIZrr
VMOVSS2DIZrr
VMOVDI2PDIZrr
VMOVZPQILo2PQIZrr
VMOV64toPQIZrr
Int_VCVTTSD2SIZrr
VCVTSD2SIZrr
Int_VCVTTSS2SIZrr
VCVTSS2SIZrr
Int_VCVTTSD2USIZrr
VCVTSD2USIZrr
Int_VCVTTSS2USIZrr
VCVTSS2USIZrr
VPMOVB2MZrr
VPMOVD2MZrr
VPMOVQ2MZrr
VPMOVW2MZrr
VMOVDDUPZrr
VMOVSHDUPZrr
VMOVSLDUPZrr
VPBROADCASTMB2QZrr
VPMOVM2QZrr
VPSRAQZrr
VPSUBQZrr
VPMOVSXBQZrr
VPMOVZXBQZrr
VCVTTPD2DQZrr
VCVTPD2DQZrr
VCVTTPS2DQZrr
VCVTPS2DQZrr
VPADDQZrr
VPUNPCKHDQZrr
VPUNPCKLDQZrr
VPMULDQZrr
VPANDQZrr
VPEXPANDQZrr
VPUNPCKHQDQZrr
VPUNPCKLQDQZrr
VCVTTPD2UDQZrr
VCVTPD2UDQZrr
VCVTTPS2UDQZrr
VCVTPS2UDQZrr
VPMULUDQZrr
VPMOVSXDQZrr
VPMOVZXDQZrr
VPSLLQZrr
VPMULLQZrr
VPSRLQZrr
VPBLENDMQZrr
VPTESTNMQZrr
VPERMQZrr
VPTESTMQZrr
VPANDNQZrr
VCVTTPD2QQZrr
VCVTPD2QQZrr
VCVTTPS2QQZrr
VCVTPS2QQZrr
VPCMPEQQZrr
VCVTTPD2UQQZrr
VCVTPD2UQQZrr
VCVTTPS2UQQZrr
VCVTPS2UQQZrr
VPORQZrr
VPXORQZrr
VPABSQZrr
VPMINSQZrr
VPCOMPRESSQZrr
VPMAXSQZrr
VPCMPGTQZrr
VPBROADCASTQZrr
VPMINUQZrr
VPMAXUQZrr
VPSRAVQZrr
VPSLLVQZrr
VPROLVQZrr
VPSRLVQZrr
VPRORVQZrr
VPMOVSXWQZrr
VPMOVZXWQZrr
VCVTPD2PSZrr
VCVTPH2PSZrr
VCVTDQ2PSZrr
VCVTUDQ2PSZrr
VCVTQQ2PSZrr
VCVTUQQ2PSZrr
VMOVAPSZrr
VSUBPSZrr
VADDPSZrr
VEXPANDPSZrr
VANDPSZrr
VSCALEFPSZrr
VUNPCKHPSZrr
VMOVLHPSZrr
VMOVHLPSZrr
VPERMILPSZrr
VUNPCKLPSZrr
VMULPSZrr
VBLENDMPSZrr
VPERMPSZrr
VANDNPSZrr
VMINPSZrr
VORPSZrr
VXORPSZrr
VCOMPRESSPSZrr
VMOVUPSZrr
VDIVPSZrr
VMAXPSZrr
VCVTSI642SSZrr
VCVTUSI642SSZrr
VCVTSD2SSZrr
VMOVDI2SSZrr
Int_VCVTSI2SSZrr
VCVTUSI2SSZrr
VSUBSSZrr
VADDSSZrr
Int_VUCOMISSZrr
Int_VCOMISSZrr
VMULSSZrr
VMINSSZrr
VCMPSSZrr
VDIVSSZrr
VMOVSSZrr
VMAXSSZrr
VPMOVM2WZrr
VPSRAWZrr
VPUNPCKHBWZrr
VPUNPCKLBWZrr
VPSUBWZrr
VPMOVSXBWZrr
VPMOVZXBWZrr
VPADDWZrr
VPACKSSDWZrr
VPACKUSDWZrr
VPMOVUSDWZrr
VPMOVSDWZrr
VPMOVDWZrr
VPAVGWZrr
VPMULHWZrr
VPSLLWZrr
VPMULLWZrr
VPSRLWZrr
VPBLENDMWZrr
VPTESTNMWZrr
VPERMWZrr
VPTESTMWZrr
VPCMPEQWZrr
VPMOVUSQWZrr
VPMOVSQWZrr
VPMOVQWZrr
VPABSWZrr
VPMADDUBSWZrr
VPSUBSWZrr
VPADDSWZrr
VPMINSWZrr
VPMULHRSWZrr
VPSUBUSWZrr
VPADDUSWZrr
VPMAXSWZrr
VPCMPGTWZrr
VPMULHUWZrr
VPMINUWZrr
VPMAXUWZrr
VPSRAVWZrr
VPSLLVWZrr
VPSRLVWZrr
MMX_MOVD64grr
MMX_PALIGNR64irr
MMX_PSUBBirr
MMX_PADDBirr
MMX_PAVGBirr
MMX_PCMPEQBirr
MMX_PSUBSBirr
MMX_PADDSBirr
MMX_PSUBUSBirr
MMX_PADDUSBirr
MMX_PCMPGTBirr
MMX_PMINUBirr
MMX_PMAXUBirr
MMX_PACKSSWBirr
MMX_PACKUSWBirr
MMX_PSUBDirr
MMX_PADDDirr
MMX_PANDirr
MMX_CVTPI2PDirr
MMX_PCMPEQDirr
MMX_PCMPGTDirr
MMX_PMADDWDirr
MMX_PUNPCKHWDirr
MMX_PUNPCKLWDirr
MMX_CVTTPD2PIirr
MMX_CVTPD2PIirr
MMX_CVTTPS2PIirr
MMX_CVTPS2PIirr
MMX_PANDNirr
MMX_PSUBQirr
MMX_PADDQirr
MMX_PUNPCKHDQirr
MMX_PUNPCKLDQirr
MMX_PMULUDQirr
MMX_PORirr
MMX_PXORirr
MMX_CVTPI2PSirr
MMX_PSADBWirr
MMX_PUNPCKHBWirr
MMX_PUNPCKLBWirr
MMX_PSUBWirr
MMX_PADDWirr
MMX_PACKSSDWirr
MMX_PAVGWirr
MMX_PMULHWirr
MMX_PMULLWirr
MMX_PCMPEQWirr
MMX_PSUBSWirr
MMX_PADDSWirr
MMX_PMINSWirr
MMX_PSUBUSWirr
MMX_PADDUSWirr
MMX_PMAXSWirr
MMX_PCMPGTWirr
MMX_PMULHUWirr
MONITORrrr
VEXTRACTPSzrr
VINSERTPSzrr
MOV32sr
MOV64sr
MOV16sr
MOV32ms
MOV64ms
MOV16ms
MOV32rs
MOV64rs
MOV16rs
VPCMPDZ256rmib_alt
VPCMPUDZ256rmib_alt
VPCMPQZ256rmib_alt
VPCMPUQZ256rmib_alt
VPCMPDZ128rmib_alt
VPCMPUDZ128rmib_alt
VPCMPQZ128rmib_alt
VPCMPUQZ128rmib_alt
VPCMPDZrmib_alt
VPCMPUDZrmib_alt
VPCMPQZrmib_alt
VPCMPUQZrmib_alt
VCMPPDZrrib_alt
VCMPPSZrrib_alt
VCMPPDZ256rmbi_alt
VCMPPSZ256rmbi_alt
VCMPPDZ128rmbi_alt
VCMPPSZ128rmbi_alt
VCMPPDZrmbi_alt
VCMPPSZrmbi_alt
VPCOMBmi_alt
VPCOMUBmi_alt
VPCOMDmi_alt
VPCOMUDmi_alt
VPCOMQmi_alt
VPCOMUQmi_alt
VPCOMWmi_alt
VPCOMUWmi_alt
VPCMPBZ256rmi_alt
VPCMPUBZ256rmi_alt
VPCMPDZ256rmi_alt
VCMPPDZ256rmi_alt
VPCMPUDZ256rmi_alt
VPCMPQZ256rmi_alt
VPCMPUQZ256rmi_alt
VCMPPSZ256rmi_alt
VPCMPWZ256rmi_alt
VPCMPUWZ256rmi_alt
VPCMPBZ128rmi_alt
VPCMPUBZ128rmi_alt
VPCMPDZ128rmi_alt
VCMPPDZ128rmi_alt
VREDUCESDZ128rmi_alt
VRANGESDZ128rmi_alt
VFIXUPIMMSDZ128rmi_alt
VPCMPUDZ128rmi_alt
VPCMPQZ128rmi_alt
VPCMPUQZ128rmi_alt
VCMPPSZ128rmi_alt
VREDUCESSZ128rmi_alt
VRANGESSZ128rmi_alt
VFIXUPIMMSSZ128rmi_alt
VPCMPWZ128rmi_alt
VPCMPUWZ128rmi_alt
VCMPPDrmi_alt
VCMPPSrmi_alt
VCMPPDYrmi_alt
VCMPPSYrmi_alt
VPCMPBZrmi_alt
VPCMPUBZrmi_alt
VPCMPDZrmi_alt
VCMPPDZrmi_alt
VCMPSDZrmi_alt
VPCMPUDZrmi_alt
VPCMPQZrmi_alt
VPCMPUQZrmi_alt
VCMPPSZrmi_alt
VCMPSSZrmi_alt
VPCMPWZrmi_alt
VPCMPUWZrmi_alt
MOV32ri_alt
MOV16ri_alt
MOV8ri_alt
VPCOMBri_alt
VPCOMUBri_alt
VPCOMDri_alt
VPCOMUDri_alt
VPCOMQri_alt
VPCOMUQri_alt
VPCOMWri_alt
VPCOMUWri_alt
VPCMPBZ256rri_alt
VPCMPUBZ256rri_alt
VPCMPDZ256rri_alt
VCMPPDZ256rri_alt
VPCMPUDZ256rri_alt
VPCMPQZ256rri_alt
VPCMPUQZ256rri_alt
VCMPPSZ256rri_alt
VPCMPWZ256rri_alt
VPCMPUWZ256rri_alt
VPCMPBZ128rri_alt
VPCMPUBZ128rri_alt
VPCMPDZ128rri_alt
VCMPPDZ128rri_alt
VPCMPUDZ128rri_alt
VPCMPQZ128rri_alt
VPCMPUQZ128rri_alt
VCMPPSZ128rri_alt
VPCMPWZ128rri_alt
VPCMPUWZ128rri_alt
VCMPPDrri_alt
VCMPPSrri_alt
VCMPPDYrri_alt
VCMPPSYrri_alt
VPCMPBZrri_alt
VPCMPUBZrri_alt
VPCMPDZrri_alt
VCMPPDZrri_alt
VCMPSDZrri_alt
VPCMPUDZrri_alt
VPCMPQZrri_alt
VPCMPUQZrri_alt
VCMPPSZrri_alt
VCMPSSZrri_alt
VPCMPWZrri_alt
VPCMPUWZrri_alt
VPCMPDZ256rmibk_alt
VPCMPUDZ256rmibk_alt
VPCMPQZ256rmibk_alt
VPCMPUQZ256rmibk_alt
VPCMPDZ128rmibk_alt
VPCMPUDZ128rmibk_alt
VPCMPQZ128rmibk_alt
VPCMPUQZ128rmibk_alt
VPCMPDZrmibk_alt
VPCMPUDZrmibk_alt
VPCMPQZrmibk_alt
VPCMPUQZrmibk_alt
VPCMPBZ256rmik_alt
VPCMPUBZ256rmik_alt
VPCMPDZ256rmik_alt
VPCMPUDZ256rmik_alt
VPCMPQZ256rmik_alt
VPCMPUQZ256rmik_alt
VPCMPWZ256rmik_alt
VPCMPUWZ256rmik_alt
VPCMPBZ128rmik_alt
VPCMPUBZ128rmik_alt
VPCMPDZ128rmik_alt
VPCMPUDZ128rmik_alt
VPCMPQZ128rmik_alt
VPCMPUQZ128rmik_alt
VPCMPWZ128rmik_alt
VPCMPUWZ128rmik_alt
VPCMPBZrmik_alt
VPCMPUBZrmik_alt
VPCMPDZrmik_alt
VPCMPUDZrmik_alt
VPCMPQZrmik_alt
VPCMPUQZrmik_alt
VPCMPWZrmik_alt
VPCMPUWZrmik_alt
VPCMPBZ256rrik_alt
VPCMPUBZ256rrik_alt
VPCMPDZ256rrik_alt
VPCMPUDZ256rrik_alt
VPCMPQZ256rrik_alt
VPCMPUQZ256rrik_alt
VPCMPWZ256rrik_alt
VPCMPUWZ256rrik_alt
VPCMPBZ128rrik_alt
VPCMPUBZ128rrik_alt
VPCMPDZ128rrik_alt
VPCMPUDZ128rrik_alt
VPCMPQZ128rrik_alt
VPCMPUQZ128rrik_alt
VPCMPWZ128rrik_alt
VPCMPUWZ128rrik_alt
VPCMPBZrrik_alt
VPCMPUBZrrik_alt
VPCMPDZrrik_alt
VPCMPUDZrrik_alt
VPCMPQZrrik_alt
VPCMPUQZrrik_alt
VPCMPWZrrik_alt
VPCMPUWZrrik_alt
VMOVDQA32Z256rrk_alt
VMOVDQU32Z256rrk_alt
VMOVDQA64Z256rrk_alt
VMOVDQU64Z256rrk_alt
VMOVDQU16Z256rrk_alt
VMOVDQU8Z256rrk_alt
VMOVAPDZ256rrk_alt
VMOVUPDZ256rrk_alt
VMOVAPSZ256rrk_alt
VMOVUPSZ256rrk_alt
VMOVDQA32Z128rrk_alt
VMOVDQU32Z128rrk_alt
VMOVDQA64Z128rrk_alt
VMOVDQU64Z128rrk_alt
VMOVDQU16Z128rrk_alt
VMOVDQU8Z128rrk_alt
VMOVAPDZ128rrk_alt
VMOVUPDZ128rrk_alt
VMOVAPSZ128rrk_alt
VMOVUPSZ128rrk_alt
VMOVDQA32Zrrk_alt
VMOVDQU32Zrrk_alt
VMOVDQA64Zrrk_alt
VMOVDQU64Zrrk_alt
VMOVDQU16Zrrk_alt
VMOVDQU8Zrrk_alt
VMOVAPDZrrk_alt
VMOVUPDZrrk_alt
VMOVAPSZrrk_alt
VMOVUPSZrrk_alt
VCMPSDrm_alt
VCMPSSrm_alt
DEC32r_alt
INC32r_alt
DEC16r_alt
INC16r_alt
VMOVDQA32Z256rr_alt
VMOVDQU32Z256rr_alt
VMOVDQA64Z256rr_alt
VMOVDQU64Z256rr_alt
VMOVDQU16Z256rr_alt
VMOVDQU8Z256rr_alt
VMOVAPDZ256rr_alt
VMOVUPDZ256rr_alt
VMOVAPSZ256rr_alt
VMOVUPSZ256rr_alt
VMOVDQA32Z128rr_alt
VMOVDQU32Z128rr_alt
VMOVDQA64Z128rr_alt
VMOVDQU64Z128rr_alt
VMOVDQU16Z128rr_alt
VMOVDQU8Z128rr_alt
VMOVAPDZ128rr_alt
VMOVUPDZ128rr_alt
VMOVAPSZ128rr_alt
VMOVUPSZ128rr_alt
VCMPSDrr_alt
VCMPSSrr_alt
VMOVDQA32Zrr_alt
VMOVDQU32Zrr_alt
VMOVDQA64Zrr_alt
VMOVDQU64Zrr_alt
VMOVDQU16Zrr_alt
VMOVDQU8Zrr_alt
VMOVAPDZrr_alt
VMOVUPDZrr_alt
VMOVAPSZrr_alt
VMOVUPSZrr_alt
VMOVDQA32Z256rrkz_alt
VMOVDQU32Z256rrkz_alt
VMOVDQA64Z256rrkz_alt
VMOVDQU64Z256rrkz_alt
VMOVDQU16Z256rrkz_alt
VMOVDQU8Z256rrkz_alt
VMOVAPDZ256rrkz_alt
VMOVUPDZ256rrkz_alt
VMOVAPSZ256rrkz_alt
VMOVUPSZ256rrkz_alt
VMOVDQA32Z128rrkz_alt
VMOVDQU32Z128rrkz_alt
VMOVDQA64Z128rrkz_alt
VMOVDQU64Z128rrkz_alt
VMOVDQU16Z128rrkz_alt
VMOVDQU8Z128rrkz_alt
VMOVAPDZ128rrkz_alt
VMOVUPDZ128rrkz_alt
VMOVAPSZ128rrkz_alt
VMOVUPSZ128rrkz_alt
VMOVDQA32Zrrkz_alt
VMOVDQU32Zrrkz_alt
VMOVDQA64Zrrkz_alt
VMOVDQU64Zrrkz_alt
VMOVDQU16Zrrkz_alt
VMOVDQU8Zrrkz_alt
VMOVAPDZrrkz_alt
VMOVUPDZrrkz_alt
VMOVAPSZrrkz_alt
VMOVUPSZrrkz_alt
VFMSUB231SD231SDrb_Int
VFNMSUB231SD231SDrb_Int
VFMADD231SD231SDrb_Int
VFNMADD231SD231SDrb_Int
VFMSUB132SD132SDrb_Int
VFNMSUB132SD132SDrb_Int
VFMADD132SD132SDrb_Int
VFNMADD132SD132SDrb_Int
VFMSUB213SD213SDrb_Int
VFNMSUB213SD213SDrb_Int
VFMADD213SD213SDrb_Int
VFNMADD213SD213SDrb_Int
VFMSUB231SS231SSrb_Int
VFNMSUB231SS231SSrb_Int
VFMADD231SS231SSrb_Int
VFNMADD231SS231SSrb_Int
VFMSUB132SS132SSrb_Int
VFNMSUB132SS132SSrb_Int
VFMADD132SS132SSrb_Int
VFNMADD132SS132SSrb_Int
VFMSUB213SS213SSrb_Int
VFNMSUB213SS213SSrb_Int
VFMADD213SS213SSrb_Int
VFNMADD213SS213SSrb_Int
VCVTSI642SDZrrb_Int
VCVTUSI642SDZrrb_Int
VCVTSI2SDZrrb_Int
VCVTSI642SSZrrb_Int
VCVTUSI642SSZrrb_Int
VCVTSI2SSZrrb_Int
VCVTUSI2SSZrrb_Int
VFMSUB231SD231SDm_Int
VFNMSUB231SD231SDm_Int
VFMADD231SD231SDm_Int
VFNMADD231SD231SDm_Int
VFMSUB132SD132SDm_Int
VFNMSUB132SD132SDm_Int
VFMADD132SD132SDm_Int
VFNMADD132SD132SDm_Int
VFMSUB213SD213SDm_Int
VFNMSUB213SD213SDm_Int
VFMADD213SD213SDm_Int
VFNMADD213SD213SDm_Int
VSQRTSDm_Int
VFMSUB231SS231SSm_Int
VFNMSUB231SS231SSm_Int
VFMADD231SS231SSm_Int
VFNMADD231SS231SSm_Int
VFMSUB132SS132SSm_Int
VFNMSUB132SS132SSm_Int
VFMADD132SS132SSm_Int
VFNMADD132SS132SSm_Int
VFMSUB213SS213SSm_Int
VFNMSUB213SS213SSm_Int
VFMADD213SS213SSm_Int
VFNMADD213SS213SSm_Int
VRCPSSm_Int
VRSQRTSSm_Int
VSQRTSSm_Int
VSQRTSDZm_Int
VSQRTSSZm_Int
VFMSUBSD4rm_Int
VFNMSUBSD4rm_Int
VFMADDSD4rm_Int
VFNMADDSD4rm_Int
VFMSUBSS4rm_Int
VFNMSUBSS4rm_Int
VFMADDSS4rm_Int
VFNMADDSS4rm_Int
VSUBSDrm_Int
VADDSDrm_Int
VMULSDrm_Int
VMINSDrm_Int
VDIVSDrm_Int
VMAXSDrm_Int
VSUBSSrm_Int
VADDSSrm_Int
VMULSSrm_Int
VMINSSrm_Int
VDIVSSrm_Int
VMAXSSrm_Int
VCVTSI642SDZrm_Int
VCVTUSI642SDZrm_Int
VCVTSI2SDZrm_Int
VCVTUSI2SDZrm_Int
VSUBSDZrm_Int
VADDSDZrm_Int
VMULSDZrm_Int
VMINSDZrm_Int
VDIVSDZrm_Int
VMAXSDZrm_Int
VCVTSI642SSZrm_Int
VCVTUSI642SSZrm_Int
VCVTSI2SSZrm_Int
VCVTUSI2SSZrm_Int
VSUBSSZrm_Int
VADDSSZrm_Int
VMULSSZrm_Int
VMINSSZrm_Int
VDIVSSZrm_Int
VMAXSSZrm_Int
VFMSUB231SD231SDr_Int
VFNMSUB231SD231SDr_Int
VFMADD231SD231SDr_Int
VFNMADD231SD231SDr_Int
VFMSUB132SD132SDr_Int
VFNMSUB132SD132SDr_Int
VFMADD132SD132SDr_Int
VFNMADD132SD132SDr_Int
VFMSUB213SD213SDr_Int
VFNMSUB213SD213SDr_Int
VFMADD213SD213SDr_Int
VFNMADD213SD213SDr_Int
VROUNDSDr_Int
VSQRTSDr_Int
VFMSUB231SS231SSr_Int
VFNMSUB231SS231SSr_Int
VFMADD231SS231SSr_Int
VFNMADD231SS231SSr_Int
VFMSUB132SS132SSr_Int
VFNMSUB132SS132SSr_Int
VFMADD132SS132SSr_Int
VFNMADD132SS132SSr_Int
VFMSUB213SS213SSr_Int
VFNMSUB213SS213SSr_Int
VFMADD213SS213SSr_Int
VFNMADD213SS213SSr_Int
VROUNDSSr_Int
VRCPSSr_Int
VRSQRTSSr_Int
VSQRTSSr_Int
VSQRTSDZr_Int
VSQRTSSZr_Int
VFMSUBSD4mr_Int
VFNMSUBSD4mr_Int
VFMADDSD4mr_Int
VFNMADDSD4mr_Int
VFMSUBSS4mr_Int
VFNMSUBSS4mr_Int
VFMADDSS4mr_Int
VFNMADDSS4mr_Int
VFMSUBSD4rr_Int
VFNMSUBSD4rr_Int
VFMADDSD4rr_Int
VFNMADDSD4rr_Int
VFMSUBSS4rr_Int
VFNMSUBSS4rr_Int
VFMADDSS4rr_Int
VFNMADDSS4rr_Int
VSUBSDrr_Int
VADDSDrr_Int
VMULSDrr_Int
VMINSDrr_Int
VDIVSDrr_Int
VMAXSDrr_Int
VSUBSSrr_Int
VADDSSrr_Int
VMULSSrr_Int
VMINSSrr_Int
VDIVSSrr_Int
VMAXSSrr_Int
VCVTSI642SDZrr_Int
VCVTUSI642SDZrr_Int
VCVTSI2SDZrr_Int
VCVTUSI2SDZrr_Int
VSUBSDZrr_Int
VADDSDZrr_Int
VMULSDZrr_Int
VMINSDZrr_Int
VDIVSDZrr_Int
VMAXSDZrr_Int
VCVTSI642SSZrr_Int
VCVTUSI642SSZrr_Int
VCVTSI2SSZrr_Int
VCVTUSI2SSZrr_Int
VSUBSSZrr_Int
VADDSSZrr_Int
VMULSSZrr_Int
VMINSSZrr_Int
VDIVSSZrr_Int
VMAXSSZrr_Int
VREDUCESDZ128rribkz
VRANGESDZ128rribkz
VFIXUPIMMSDZ128rribkz
VREDUCESSZ128rribkz
VRANGESSZ128rribkz
VFIXUPIMMSSZ128rribkz
VREDUCEPDZrribkz
VRANGEPDZrribkz
VRNDSCALEPDZrribkz
VFIXUPIMMPDZrribkz
VREDUCEPSZrribkz
VRANGEPSZrribkz
VRNDSCALEPSZrribkz
VFIXUPIMMPSZrribkz
VFMADDSUB231PDZ256mbkz
VFMSUB231PDZ256mbkz
VFNMSUB231PDZ256mbkz
VFMSUBADD231PDZ256mbkz
VFMADD231PDZ256mbkz
VFNMADD231PDZ256mbkz
VFMADDSUB132PDZ256mbkz
VFMSUB132PDZ256mbkz
VFNMSUB132PDZ256mbkz
VFMSUBADD132PDZ256mbkz
VFMADD132PDZ256mbkz
VFNMADD132PDZ256mbkz
VFMADDSUB213PDZ256mbkz
VFMSUB213PDZ256mbkz
VFNMSUB213PDZ256mbkz
VFMSUBADD213PDZ256mbkz
VFMADD213PDZ256mbkz
VFNMADD213PDZ256mbkz
VRCP14PDZ256mbkz
VRSQRT14PDZ256mbkz
VGETEXPPDZ256mbkz
VSQRTPDZ256mbkz
VFMADDSUB231PSZ256mbkz
VFMSUB231PSZ256mbkz
VFNMSUB231PSZ256mbkz
VFMSUBADD231PSZ256mbkz
VFMADD231PSZ256mbkz
VFNMADD231PSZ256mbkz
VFMADDSUB132PSZ256mbkz
VFMSUB132PSZ256mbkz
VFNMSUB132PSZ256mbkz
VFMSUBADD132PSZ256mbkz
VFMADD132PSZ256mbkz
VFNMADD132PSZ256mbkz
VFMADDSUB213PSZ256mbkz
VFMSUB213PSZ256mbkz
VFNMSUB213PSZ256mbkz
VFMSUBADD213PSZ256mbkz
VFMADD213PSZ256mbkz
VFNMADD213PSZ256mbkz
VRCP14PSZ256mbkz
VRSQRT14PSZ256mbkz
VGETEXPPSZ256mbkz
VSQRTPSZ256mbkz
VFMADDSUB231PDZ128mbkz
VFMSUB231PDZ128mbkz
VFNMSUB231PDZ128mbkz
VFMSUBADD231PDZ128mbkz
VFMADD231PDZ128mbkz
VFNMADD231PDZ128mbkz
VFMADDSUB132PDZ128mbkz
VFMSUB132PDZ128mbkz
VFNMSUB132PDZ128mbkz
VFMSUBADD132PDZ128mbkz
VFMADD132PDZ128mbkz
VFNMADD132PDZ128mbkz
VFMADDSUB213PDZ128mbkz
VFMSUB213PDZ128mbkz
VFNMSUB213PDZ128mbkz
VFMSUBADD213PDZ128mbkz
VFMADD213PDZ128mbkz
VFNMADD213PDZ128mbkz
VRCP14PDZ128mbkz
VRSQRT14PDZ128mbkz
VGETEXPPDZ128mbkz
VSQRTPDZ128mbkz
VFMADDSUB231PSZ128mbkz
VFMSUB231PSZ128mbkz
VFNMSUB231PSZ128mbkz
VFMSUBADD231PSZ128mbkz
VFMADD231PSZ128mbkz
VFNMADD231PSZ128mbkz
VFMADDSUB132PSZ128mbkz
VFMSUB132PSZ128mbkz
VFNMSUB132PSZ128mbkz
VFMSUBADD132PSZ128mbkz
VFMADD132PSZ128mbkz
VFNMADD132PSZ128mbkz
VFMADDSUB213PSZ128mbkz
VFMSUB213PSZ128mbkz
VFNMSUB213PSZ128mbkz
VFMSUBADD213PSZ128mbkz
VFMADD213PSZ128mbkz
VFNMADD213PSZ128mbkz
VRCP14PSZ128mbkz
VRSQRT14PSZ128mbkz
VGETEXPPSZ128mbkz
VSQRTPSZ128mbkz
VEXP2PDmbkz
VRCP28PDmbkz
VRSQRT28PDmbkz
VGETEXPPDmbkz
VEXP2PSmbkz
VRCP28PSmbkz
VRSQRT28PSmbkz
VGETEXPPSmbkz
VFMADDSUB231PDZmbkz
VFMSUB231PDZmbkz
VFNMSUB231PDZmbkz
VFMSUBADD231PDZmbkz
VFMADD231PDZmbkz
VFNMADD231PDZmbkz
VFMADDSUB132PDZmbkz
VFMSUB132PDZmbkz
VFNMSUB132PDZmbkz
VFMSUBADD132PDZmbkz
VFMADD132PDZmbkz
VFNMADD132PDZmbkz
VFMADDSUB213PDZmbkz
VFMSUB213PDZmbkz
VFNMSUB213PDZmbkz
VFMSUBADD213PDZmbkz
VFMADD213PDZmbkz
VFNMADD213PDZmbkz
VRCP14PDZmbkz
VRSQRT14PDZmbkz
VSQRTPDZmbkz
VFMADDSUB231PSZmbkz
VFMSUB231PSZmbkz
VFNMSUB231PSZmbkz
VFMSUBADD231PSZmbkz
VFMADD231PSZmbkz
VFNMADD231PSZmbkz
VFMADDSUB132PSZmbkz
VFMSUB132PSZmbkz
VFNMSUB132PSZmbkz
VFMSUBADD132PSZmbkz
VFMADD132PSZmbkz
VFNMADD132PSZmbkz
VFMADDSUB213PSZmbkz
VFMSUB213PSZmbkz
VFNMSUB213PSZmbkz
VFMSUBADD213PSZmbkz
VFMADD213PSZmbkz
VFNMADD213PSZmbkz
VRCP14PSZmbkz
VRSQRT14PSZmbkz
VSQRTPSZmbkz
VPERMI2D256rmbkz
VPERMT2D256rmbkz
VPERMI2PD256rmbkz
VPERMT2PD256rmbkz
VPERMI2Q256rmbkz
VPERMT2Q256rmbkz
VPERMI2PS256rmbkz
VPERMT2PS256rmbkz
VPERMI2W256rmbkz
VPERMT2W256rmbkz
VPSUBDZ256rmbkz
VPADDDZ256rmbkz
VPANDDZ256rmbkz
VPMULLDZ256rmbkz
VPERMDZ256rmbkz
VPANDNDZ256rmbkz
VCVTDQ2PDZ256rmbkz
VCVTUDQ2PDZ256rmbkz
VCVTQQ2PDZ256rmbkz
VCVTUQQ2PDZ256rmbkz
VCVTPS2PDZ256rmbkz
VSUBPDZ256rmbkz
VADDPDZ256rmbkz
VANDPDZ256rmbkz
VSCALEFPDZ256rmbkz
VUNPCKHPDZ256rmbkz
VUNPCKLPDZ256rmbkz
VMULPDZ256rmbkz
VPERMPDZ256rmbkz
VANDNPDZ256rmbkz
VMINPDZ256rmbkz
VORPDZ256rmbkz
VXORPDZ256rmbkz
VDIVPDZ256rmbkz
VMAXPDZ256rmbkz
VPORDZ256rmbkz
VPXORDZ256rmbkz
VPABSDZ256rmbkz
VPMINSDZ256rmbkz
VPMAXSDZ256rmbkz
VPMINUDZ256rmbkz
VPMAXUDZ256rmbkz
VPSRAVDZ256rmbkz
VPSLLVDZ256rmbkz
VPROLVDZ256rmbkz
VPSRLVDZ256rmbkz
VPRORVDZ256rmbkz
VPSUBQZ256rmbkz
VCVTTPD2DQZ256rmbkz
VCVTPD2DQZ256rmbkz
VCVTTPS2DQZ256rmbkz
VCVTPS2DQZ256rmbkz
VPADDQZ256rmbkz
VPUNPCKHDQZ256rmbkz
VPUNPCKLDQZ256rmbkz
VPMULDQZ256rmbkz
VPANDQZ256rmbkz
VPUNPCKHQDQZ256rmbkz
VPUNPCKLQDQZ256rmbkz
VCVTTPD2UDQZ256rmbkz
VCVTPD2UDQZ256rmbkz
VCVTTPS2UDQZ256rmbkz
VCVTPS2UDQZ256rmbkz
VPMULUDQZ256rmbkz
VPMULLQZ256rmbkz
VPERMQZ256rmbkz
VPANDNQZ256rmbkz
VCVTTPD2QQZ256rmbkz
VCVTPD2QQZ256rmbkz
VCVTTPS2QQZ256rmbkz
VCVTPS2QQZ256rmbkz
VCVTTPD2UQQZ256rmbkz
VCVTPD2UQQZ256rmbkz
VCVTTPS2UQQZ256rmbkz
VCVTPS2UQQZ256rmbkz
VPORQZ256rmbkz
VPXORQZ256rmbkz
VPABSQZ256rmbkz
VPMINSQZ256rmbkz
VPMAXSQZ256rmbkz
VPMINUQZ256rmbkz
VPMAXUQZ256rmbkz
VPSRAVQZ256rmbkz
VPSLLVQZ256rmbkz
VPROLVQZ256rmbkz
VPSRLVQZ256rmbkz
VPRORVQZ256rmbkz
VCVTPD2PSZ256rmbkz
VCVTDQ2PSZ256rmbkz
VCVTUDQ2PSZ256rmbkz
VCVTQQ2PSZ256rmbkz
VCVTUQQ2PSZ256rmbkz
VSUBPSZ256rmbkz
VADDPSZ256rmbkz
VANDPSZ256rmbkz
VSCALEFPSZ256rmbkz
VUNPCKHPSZ256rmbkz
VUNPCKLPSZ256rmbkz
VMULPSZ256rmbkz
VPERMPSZ256rmbkz
VANDNPSZ256rmbkz
VMINPSZ256rmbkz
VORPSZ256rmbkz
VXORPSZ256rmbkz
VDIVPSZ256rmbkz
VMAXPSZ256rmbkz
VPACKSSDWZ256rmbkz
VPACKUSDWZ256rmbkz
VPERMI2D128rmbkz
VPERMT2D128rmbkz
VPERMI2PD128rmbkz
VPERMT2PD128rmbkz
VPERMI2Q128rmbkz
VPERMT2Q128rmbkz
VPERMI2PS128rmbkz
VPERMT2PS128rmbkz
VPERMI2W128rmbkz
VPERMT2W128rmbkz
VPSUBDZ128rmbkz
VPADDDZ128rmbkz
VPANDDZ128rmbkz
VPMULLDZ128rmbkz
VPANDNDZ128rmbkz
VCVTDQ2PDZ128rmbkz
VCVTUDQ2PDZ128rmbkz
VCVTQQ2PDZ128rmbkz
VCVTUQQ2PDZ128rmbkz
VCVTPS2PDZ128rmbkz
VSUBPDZ128rmbkz
VADDPDZ128rmbkz
VANDPDZ128rmbkz
VSCALEFPDZ128rmbkz
VUNPCKHPDZ128rmbkz
VUNPCKLPDZ128rmbkz
VMULPDZ128rmbkz
VANDNPDZ128rmbkz
VMINPDZ128rmbkz
VORPDZ128rmbkz
VXORPDZ128rmbkz
VDIVPDZ128rmbkz
VMAXPDZ128rmbkz
VPORDZ128rmbkz
VPXORDZ128rmbkz
VPABSDZ128rmbkz
VPMINSDZ128rmbkz
VPMAXSDZ128rmbkz
VPMINUDZ128rmbkz
VPMAXUDZ128rmbkz
VPSRAVDZ128rmbkz
VPSLLVDZ128rmbkz
VPROLVDZ128rmbkz
VPSRLVDZ128rmbkz
VPRORVDZ128rmbkz
VPSUBQZ128rmbkz
VCVTTPD2DQZ128rmbkz
VCVTPD2DQZ128rmbkz
VCVTTPS2DQZ128rmbkz
VCVTPS2DQZ128rmbkz
VPADDQZ128rmbkz
VPUNPCKHDQZ128rmbkz
VPUNPCKLDQZ128rmbkz
VPMULDQZ128rmbkz
VPANDQZ128rmbkz
VPUNPCKHQDQZ128rmbkz
VPUNPCKLQDQZ128rmbkz
VCVTTPD2UDQZ128rmbkz
VCVTPD2UDQZ128rmbkz
VCVTTPS2UDQZ128rmbkz
VCVTPS2UDQZ128rmbkz
VPMULUDQZ128rmbkz
VPMULLQZ128rmbkz
VPANDNQZ128rmbkz
VCVTTPD2QQZ128rmbkz
VCVTPD2QQZ128rmbkz
VCVTTPS2QQZ128rmbkz
VCVTPS2QQZ128rmbkz
VCVTTPD2UQQZ128rmbkz
VCVTPD2UQQZ128rmbkz
VCVTTPS2UQQZ128rmbkz
VCVTPS2UQQZ128rmbkz
VPORQZ128rmbkz
VPXORQZ128rmbkz
VPABSQZ128rmbkz
VPMINSQZ128rmbkz
VPMAXSQZ128rmbkz
VPMINUQZ128rmbkz
VPMAXUQZ128rmbkz
VPSRAVQZ128rmbkz
VPSLLVQZ128rmbkz
VPROLVQZ128rmbkz
VPSRLVQZ128rmbkz
VPRORVQZ128rmbkz
VCVTPD2PSZ128rmbkz
VCVTDQ2PSZ128rmbkz
VCVTUDQ2PSZ128rmbkz
VCVTQQ2PSZ128rmbkz
VCVTUQQ2PSZ128rmbkz
VSUBPSZ128rmbkz
VADDPSZ128rmbkz
VANDPSZ128rmbkz
VSCALEFPSZ128rmbkz
VUNPCKHPSZ128rmbkz
VUNPCKLPSZ128rmbkz
VMULPSZ128rmbkz
VANDNPSZ128rmbkz
VMINPSZ128rmbkz
VORPSZ128rmbkz
VXORPSZ128rmbkz
VDIVPSZ128rmbkz
VMAXPSZ128rmbkz
VPACKSSDWZ128rmbkz
VPACKUSDWZ128rmbkz
VPERMI2Drmbkz
VPERMT2Drmbkz
VPERMI2PDrmbkz
VPERMT2PDrmbkz
VPCONFLICTDrmbkz
VPLZCNTDrmbkz
VPERMI2Qrmbkz
VPERMT2Qrmbkz
VPCONFLICTQrmbkz
VPLZCNTQrmbkz
VPERMI2PSrmbkz
VPERMT2PSrmbkz
VPERMI2Wrmbkz
VPERMT2Wrmbkz
VPSUBDZrmbkz
VPADDDZrmbkz
VPANDDZrmbkz
VPMULLDZrmbkz
VPERMDZrmbkz
VPANDNDZrmbkz
VCVTDQ2PDZrmbkz
VCVTUDQ2PDZrmbkz
VCVTQQ2PDZrmbkz
VCVTUQQ2PDZrmbkz
VCVTPS2PDZrmbkz
VSUBPDZrmbkz
VADDPDZrmbkz
VANDPDZrmbkz
VSCALEFPDZrmbkz
VUNPCKHPDZrmbkz
VUNPCKLPDZrmbkz
VMULPDZrmbkz
VPERMPDZrmbkz
VANDNPDZrmbkz
VMINPDZrmbkz
VORPDZrmbkz
VXORPDZrmbkz
VDIVPDZrmbkz
VMAXPDZrmbkz
VPORDZrmbkz
VPXORDZrmbkz
VPABSDZrmbkz
VPMINSDZrmbkz
VPMAXSDZrmbkz
VPMINUDZrmbkz
VPMAXUDZrmbkz
VPSRAVDZrmbkz
VPSLLVDZrmbkz
VPROLVDZrmbkz
VPSRLVDZrmbkz
VPRORVDZrmbkz
VPSUBQZrmbkz
VCVTTPD2DQZrmbkz
VCVTPD2DQZrmbkz
VCVTTPS2DQZrmbkz
VCVTPS2DQZrmbkz
VPADDQZrmbkz
VPUNPCKHDQZrmbkz
VPUNPCKLDQZrmbkz
VPMULDQZrmbkz
VPANDQZrmbkz
VPUNPCKHQDQZrmbkz
VPUNPCKLQDQZrmbkz
VCVTTPD2UDQZrmbkz
VCVTPD2UDQZrmbkz
VCVTTPS2UDQZrmbkz
VCVTPS2UDQZrmbkz
VPMULUDQZrmbkz
VPMULLQZrmbkz
VPERMQZrmbkz
VPANDNQZrmbkz
VCVTTPD2QQZrmbkz
VCVTPD2QQZrmbkz
VCVTTPS2QQZrmbkz
VCVTPS2QQZrmbkz
VCVTTPD2UQQZrmbkz
VCVTPD2UQQZrmbkz
VCVTTPS2UQQZrmbkz
VCVTPS2UQQZrmbkz
VPORQZrmbkz
VPXORQZrmbkz
VPABSQZrmbkz
VPMINSQZrmbkz
VPMAXSQZrmbkz
VPMINUQZrmbkz
VPMAXUQZrmbkz
VPSRAVQZrmbkz
VPSLLVQZrmbkz
VPROLVQZrmbkz
VPSRLVQZrmbkz
VPRORVQZrmbkz
VCVTPD2PSZrmbkz
VCVTDQ2PSZrmbkz
VCVTUDQ2PSZrmbkz
VCVTQQ2PSZrmbkz
VCVTUQQ2PSZrmbkz
VSUBPSZrmbkz
VADDPSZrmbkz
VANDPSZrmbkz
VSCALEFPSZrmbkz
VUNPCKHPSZrmbkz
VUNPCKLPSZrmbkz
VMULPSZrmbkz
VPERMPSZrmbkz
VANDNPSZrmbkz
VMINPSZrmbkz
VORPSZrmbkz
VXORPSZrmbkz
VDIVPSZrmbkz
VMAXPSZrmbkz
VPACKSSDWZrmbkz
VPACKUSDWZrmbkz
VEXP2PDrbkz
VRCP28PDrbkz
VRSQRT28PDrbkz
VGETEXPPDrbkz
VRCP28SDrbkz
VRSQRT28SDrbkz
VRNDSCALESDrbkz
VGETEXPSDrbkz
VEXP2PSrbkz
VRCP28PSrbkz
VRSQRT28PSrbkz
VGETEXPPSrbkz
VRCP28SSrbkz
VRSQRT28SSrbkz
VRNDSCALESSrbkz
VGETEXPSSrbkz
VFMADDSUB231PDZrbkz
VFMSUB231PDZrbkz
VFNMSUB231PDZrbkz
VFMSUBADD231PDZrbkz
VFMADD231PDZrbkz
VFNMADD231PDZrbkz
VFMADDSUB132PDZrbkz
VFMSUB132PDZrbkz
VFNMSUB132PDZrbkz
VFMSUBADD132PDZrbkz
VFMADD132PDZrbkz
VFNMADD132PDZrbkz
VFMADDSUB213PDZrbkz
VFMSUB213PDZrbkz
VFNMSUB213PDZrbkz
VFMSUBADD213PDZrbkz
VFMADD213PDZrbkz
VFNMADD213PDZrbkz
VSUBPDZrbkz
VADDPDZrbkz
VSCALEFPDZrbkz
VMULPDZrbkz
VMINPDZrbkz
VSQRTPDZrbkz
VDIVPDZrbkz
VMAXPDZrbkz
VFMADDSUB231PSZrbkz
VFMSUB231PSZrbkz
VFNMSUB231PSZrbkz
VFMSUBADD231PSZrbkz
VFMADD231PSZrbkz
VFNMADD231PSZrbkz
VFMADDSUB132PSZrbkz
VFMSUB132PSZrbkz
VFNMSUB132PSZrbkz
VFMSUBADD132PSZrbkz
VFMADD132PSZrbkz
VFNMADD132PSZrbkz
VFMADDSUB213PSZrbkz
VFMSUB213PSZrbkz
VFNMSUB213PSZrbkz
VFMSUBADD213PSZrbkz
VFMADD213PSZrbkz
VFNMADD213PSZrbkz
VSUBPSZrbkz
VADDPSZrbkz
VSCALEFPSZrbkz
VMULPSZrbkz
VMINPSZrbkz
VSQRTPSZrbkz
VDIVPSZrbkz
VMAXPSZrbkz
VSCALEFSDZ128rrbkz
VSCALEFSSZ128rrbkz
VCVTQQ2PDZrrbkz
VCVTUQQ2PDZrrbkz
VCVTPS2PDZrrbkz
VSUBSDZrrbkz
VADDSDZrrbkz
VMULSDZrrbkz
VMINSDZrrbkz
VDIVSDZrrbkz
VMAXSDZrrbkz
VCVTTPD2DQZrrbkz
VCVTPD2DQZrrbkz
VCVTTPS2DQZrrbkz
VCVTPS2DQZrrbkz
VCVTTPD2UDQZrrbkz
VCVTPD2UDQZrrbkz
VCVTTPS2UDQZrrbkz
VCVTPS2UDQZrrbkz
VCVTTPD2QQZrrbkz
VCVTPD2QQZrrbkz
VCVTTPS2QQZrrbkz
VCVTPS2QQZrrbkz
VCVTTPD2UQQZrrbkz
VCVTPD2UQQZrrbkz
VCVTTPS2UQQZrrbkz
VCVTPS2UQQZrrbkz
VCVTPD2PSZrrbkz
VCVTDQ2PSZrrbkz
VCVTUDQ2PSZrrbkz
VCVTQQ2PSZrrbkz
VCVTUQQ2PSZrrbkz
VSUBSSZrrbkz
VADDSSZrrbkz
VMULSSZrrbkz
VMINSSZrrbkz
VDIVSSZrrbkz
VMAXSSZrrbkz
VPSRADZ256mbikz
VPSHUFDZ256mbikz
VPSLLDZ256mbikz
VPROLDZ256mbikz
VPSRLDZ256mbikz
VPERMPDZ256mbikz
VPRORDZ256mbikz
VPSRAQZ256mbikz
VPSLLQZ256mbikz
VPROLQZ256mbikz
VPSRLQZ256mbikz
VPERMQZ256mbikz
VPRORQZ256mbikz
VPSRADZ128mbikz
VPSHUFDZ128mbikz
VPSLLDZ128mbikz
VPROLDZ128mbikz
VPSRLDZ128mbikz
VPRORDZ128mbikz
VPSRAQZ128mbikz
VPSLLQZ128mbikz
VPROLQZ128mbikz
VPSRLQZ128mbikz
VPRORQZ128mbikz
VPSRADZmbikz
VPSHUFDZmbikz
VPSLLDZmbikz
VPROLDZmbikz
VPSRLDZmbikz
VPERMPDZmbikz
VPRORDZmbikz
VPSRAQZmbikz
VPSLLQZmbikz
VPROLQZmbikz
VPSRLQZmbikz
VPERMQZmbikz
VPRORQZmbikz
VSHUFF64X2Z256rmbikz
VSHUFI64X2Z256rmbikz
VSHUFF32X4Z256rmbikz
VSHUFI32X4Z256rmbikz
VALIGNDZ256rmbikz
VREDUCEPDZ256rmbikz
VRANGEPDZ256rmbikz
VRNDSCALEPDZ256rmbikz
VFIXUPIMMPDZ256rmbikz
VALIGND_FPZ256rmbikz
VALIGNQ_FPZ256rmbikz
VALIGNQZ256rmbikz
VREDUCEPSZ256rmbikz
VRANGEPSZ256rmbikz
VRNDSCALEPSZ256rmbikz
VFIXUPIMMPSZ256rmbikz
VALIGNDZ128rmbikz
VREDUCEPDZ128rmbikz
VRANGEPDZ128rmbikz
VRNDSCALEPDZ128rmbikz
VFIXUPIMMPDZ128rmbikz
VALIGND_FPZ128rmbikz
VALIGNQ_FPZ128rmbikz
VALIGNQZ128rmbikz
VREDUCEPSZ128rmbikz
VRANGEPSZ128rmbikz
VRNDSCALEPSZ128rmbikz
VFIXUPIMMPSZ128rmbikz
VSHUFF64X2Zrmbikz
VSHUFI64X2Zrmbikz
VSHUFF32X4Zrmbikz
VSHUFI32X4Zrmbikz
VALIGNDZrmbikz
VREDUCEPDZrmbikz
VRANGEPDZrmbikz
VRNDSCALEPDZrmbikz
VFIXUPIMMPDZrmbikz
VALIGND_FPZrmbikz
VALIGNQ_FPZrmbikz
VALIGNQZrmbikz
VREDUCEPSZrmbikz
VRANGEPSZrmbikz
VRNDSCALEPSZrmbikz
VFIXUPIMMPSZrmbikz
VPSRADZ256mikz
VPSHUFDZ256mikz
VPSLLDZ256mikz
VPROLDZ256mikz
VPSRLDZ256mikz
VPERMPDZ256mikz
VPRORDZ256mikz
VPSRAQZ256mikz
VPSLLQZ256mikz
VPROLQZ256mikz
VPSRLQZ256mikz
VPERMQZ256mikz
VPRORQZ256mikz
VPSRAWZ256mikz
VPSHUFHWZ256mikz
VPSHUFLWZ256mikz
VPSLLWZ256mikz
VPSRLWZ256mikz
VPSRADZ128mikz
VPSHUFDZ128mikz
VPSLLDZ128mikz
VPROLDZ128mikz
VPSRLDZ128mikz
VPRORDZ128mikz
VPSRAQZ128mikz
VPSLLQZ128mikz
VPROLQZ128mikz
VPSRLQZ128mikz
VPRORQZ128mikz
VPSRAWZ128mikz
VPSHUFHWZ128mikz
VPSHUFLWZ128mikz
VPSLLWZ128mikz
VPSRLWZ128mikz
VPSRADZmikz
VPSHUFDZmikz
VPSLLDZmikz
VPROLDZmikz
VPSRLDZmikz
VPERMPDZmikz
VPRORDZmikz
VPSRAQZmikz
VPSLLQZmikz
VPROLQZmikz
VPSRLQZmikz
VPERMQZmikz
VPRORQZmikz
VPSRAWZmikz
VPSHUFHWZmikz
VPSHUFLWZmikz
VPSLLWZmikz
VPSRLWZmikz
VSHUFF64X2Z256rmikz
VSHUFI64X2Z256rmikz
VSHUFF32X4Z256rmikz
VSHUFI32X4Z256rmikz
VALIGNDZ256rmikz
VREDUCEPDZ256rmikz
VRANGEPDZ256rmikz
VRNDSCALEPDZ256rmikz
VFIXUPIMMPDZ256rmikz
VALIGND_FPZ256rmikz
VALIGNQ_FPZ256rmikz
VALIGNQZ256rmikz
VREDUCEPSZ256rmikz
VRANGEPSZ256rmikz
VRNDSCALEPSZ256rmikz
VFIXUPIMMPSZ256rmikz
VALIGNDZ128rmikz
VREDUCEPDZ128rmikz
VRANGEPDZ128rmikz
VRNDSCALEPDZ128rmikz
VFIXUPIMMPDZ128rmikz
VREDUCESDZ128rmikz
VRANGESDZ128rmikz
VFIXUPIMMSDZ128rmikz
VALIGND_FPZ128rmikz
VALIGNQ_FPZ128rmikz
VALIGNQZ128rmikz
VREDUCEPSZ128rmikz
VRANGEPSZ128rmikz
VRNDSCALEPSZ128rmikz
VFIXUPIMMPSZ128rmikz
VREDUCESSZ128rmikz
VRANGESSZ128rmikz
VFIXUPIMMSSZ128rmikz
VSHUFF64X2Zrmikz
VSHUFI64X2Zrmikz
VSHUFF32X4Zrmikz
VSHUFI32X4Zrmikz
VALIGNDZrmikz
VREDUCEPDZrmikz
VRANGEPDZrmikz
VRNDSCALEPDZrmikz
VFIXUPIMMPDZrmikz
VALIGND_FPZrmikz
VALIGNQ_FPZrmikz
VALIGNQZrmikz
VREDUCEPSZrmikz
VRANGEPSZrmikz
VRNDSCALEPSZrmikz
VFIXUPIMMPSZrmikz
VPSRADZ256rikz
VPSHUFDZ256rikz
VPSLLDZ256rikz
VPROLDZ256rikz
VPSRLDZ256rikz
VPERMPDZ256rikz
VPRORDZ256rikz
VPSRAQZ256rikz
VPSLLQZ256rikz
VPROLQZ256rikz
VPSRLQZ256rikz
VPERMQZ256rikz
VPRORQZ256rikz
VPSRAWZ256rikz
VPSHUFHWZ256rikz
VPSHUFLWZ256rikz
VPSLLWZ256rikz
VPSRLWZ256rikz
VPSRADZ128rikz
VPSHUFDZ128rikz
VPSLLDZ128rikz
VPROLDZ128rikz
VPSRLDZ128rikz
VPRORDZ128rikz
VPSRAQZ128rikz
VPSLLQZ128rikz
VPROLQZ128rikz
VPSRLQZ128rikz
VPRORQZ128rikz
VPSRAWZ128rikz
VPSHUFHWZ128rikz
VPSHUFLWZ128rikz
VPSLLWZ128rikz
VPSRLWZ128rikz
VPSRADZrikz
VPSHUFDZrikz
VPSLLDZrikz
VPROLDZrikz
VPSRLDZrikz
VPERMPDZrikz
VPRORDZrikz
VPSRAQZrikz
VPSLLQZrikz
VPROLQZrikz
VPSRLQZrikz
VPERMQZrikz
VPRORQZrikz
VPSRAWZrikz
VPSHUFHWZrikz
VPSHUFLWZrikz
VPSLLWZrikz
VPSRLWZrikz
VSHUFF64X2Z256rrikz
VSHUFI64X2Z256rrikz
VSHUFF32X4Z256rrikz
VSHUFI32X4Z256rrikz
VALIGNDZ256rrikz
VREDUCEPDZ256rrikz
VRANGEPDZ256rrikz
VRNDSCALEPDZ256rrikz
VFIXUPIMMPDZ256rrikz
VALIGND_FPZ256rrikz
VALIGNQ_FPZ256rrikz
VALIGNQZ256rrikz
VREDUCEPSZ256rrikz
VRANGEPSZ256rrikz
VRNDSCALEPSZ256rrikz
VFIXUPIMMPSZ256rrikz
VALIGNDZ128rrikz
VREDUCEPDZ128rrikz
VRANGEPDZ128rrikz
VRNDSCALEPDZ128rrikz
VFIXUPIMMPDZ128rrikz
VREDUCESDZ128rrikz
VRANGESDZ128rrikz
VFIXUPIMMSDZ128rrikz
VALIGND_FPZ128rrikz
VALIGNQ_FPZ128rrikz
VALIGNQZ128rrikz
VREDUCEPSZ128rrikz
VRANGEPSZ128rrikz
VRNDSCALEPSZ128rrikz
VFIXUPIMMPSZ128rrikz
VREDUCESSZ128rrikz
VRANGESSZ128rrikz
VFIXUPIMMSSZ128rrikz
VSHUFF64X2Zrrikz
VSHUFI64X2Zrrikz
VSHUFF32X4Zrrikz
VSHUFI32X4Zrrikz
VALIGNDZrrikz
VREDUCEPDZrrikz
VRANGEPDZrrikz
VRNDSCALEPDZrrikz
VFIXUPIMMPDZrrikz
VALIGND_FPZrrikz
VALIGNQ_FPZrrikz
VALIGNQZrrikz
VREDUCEPSZrrikz
VRANGEPSZrrikz
VRNDSCALEPSZrrikz
VFIXUPIMMPSZrrikz
VFMADDSUB231PDZ256mkz
VFMSUB231PDZ256mkz
VFNMSUB231PDZ256mkz
VFMSUBADD231PDZ256mkz
VFMADD231PDZ256mkz
VFNMADD231PDZ256mkz
VFMADDSUB132PDZ256mkz
VFMSUB132PDZ256mkz
VFNMSUB132PDZ256mkz
VFMSUBADD132PDZ256mkz
VFMADD132PDZ256mkz
VFNMADD132PDZ256mkz
VFMADDSUB213PDZ256mkz
VFMSUB213PDZ256mkz
VFNMSUB213PDZ256mkz
VFMSUBADD213PDZ256mkz
VFMADD213PDZ256mkz
VFNMADD213PDZ256mkz
VRCP14PDZ256mkz
VRSQRT14PDZ256mkz
VGETEXPPDZ256mkz
VSQRTPDZ256mkz
VBROADCASTSDZ256mkz
VFMADDSUB231PSZ256mkz
VFMSUB231PSZ256mkz
VFNMSUB231PSZ256mkz
VFMSUBADD231PSZ256mkz
VFMADD231PSZ256mkz
VFNMADD231PSZ256mkz
VFMADDSUB132PSZ256mkz
VFMSUB132PSZ256mkz
VFNMSUB132PSZ256mkz
VFMSUBADD132PSZ256mkz
VFMADD132PSZ256mkz
VFNMADD132PSZ256mkz
VFMADDSUB213PSZ256mkz
VFMSUB213PSZ256mkz
VFNMSUB213PSZ256mkz
VFMSUBADD213PSZ256mkz
VFMADD213PSZ256mkz
VFNMADD213PSZ256mkz
VRCP14PSZ256mkz
VRSQRT14PSZ256mkz
VGETEXPPSZ256mkz
VSQRTPSZ256mkz
VBROADCASTSSZ256mkz
VFMADDSUB231PDZ128mkz
VFMSUB231PDZ128mkz
VFNMSUB231PDZ128mkz
VFMSUBADD231PDZ128mkz
VFMADD231PDZ128mkz
VFNMADD231PDZ128mkz
VFMADDSUB132PDZ128mkz
VFMSUB132PDZ128mkz
VFNMSUB132PDZ128mkz
VFMSUBADD132PDZ128mkz
VFMADD132PDZ128mkz
VFNMADD132PDZ128mkz
VFMADDSUB213PDZ128mkz
VFMSUB213PDZ128mkz
VFNMSUB213PDZ128mkz
VFMSUBADD213PDZ128mkz
VFMADD213PDZ128mkz
VFNMADD213PDZ128mkz
VRCP14PDZ128mkz
VRSQRT14PDZ128mkz
VGETEXPPDZ128mkz
VSQRTPDZ128mkz
VFMADDSUB231PSZ128mkz
VFMSUB231PSZ128mkz
VFNMSUB231PSZ128mkz
VFMSUBADD231PSZ128mkz
VFMADD231PSZ128mkz
VFNMADD231PSZ128mkz
VFMADDSUB132PSZ128mkz
VFMSUB132PSZ128mkz
VFNMSUB132PSZ128mkz
VFMSUBADD132PSZ128mkz
VFMADD132PSZ128mkz
VFNMADD132PSZ128mkz
VFMADDSUB213PSZ128mkz
VFMSUB213PSZ128mkz
VFNMSUB213PSZ128mkz
VFMSUBADD213PSZ128mkz
VFMADD213PSZ128mkz
VFNMADD213PSZ128mkz
VRCP14PSZ128mkz
VRSQRT14PSZ128mkz
VGETEXPPSZ128mkz
VSQRTPSZ128mkz
VBROADCASTSSZ128mkz
VEXP2PDmkz
VRCP28PDmkz
VRSQRT28PDmkz
VGETEXPPDmkz
VRCP28SDmkz
VRSQRT28SDmkz
VRNDSCALESDmkz
VGETEXPSDmkz
VEXP2PSmkz
VRCP28PSmkz
VRSQRT28PSmkz
VGETEXPPSmkz
VRCP28SSmkz
VRSQRT28SSmkz
VRNDSCALESSmkz
VGETEXPSSmkz
VFMADDSUB231PDZmkz
VFMSUB231PDZmkz
VFNMSUB231PDZmkz
VFMSUBADD231PDZmkz
VFMADD231PDZmkz
VFNMADD231PDZmkz
VFMADDSUB132PDZmkz
VFMSUB132PDZmkz
VFNMSUB132PDZmkz
VFMSUBADD132PDZmkz
VFMADD132PDZmkz
VFNMADD132PDZmkz
VFMADDSUB213PDZmkz
VFMSUB213PDZmkz
VFNMSUB213PDZmkz
VFMSUBADD213PDZmkz
VFMADD213PDZmkz
VFNMADD213PDZmkz
VRCP14PDZmkz
VRSQRT14PDZmkz
VSQRTPDZmkz
VBROADCASTSDZmkz
VFMADDSUB231PSZmkz
VFMSUB231PSZmkz
VFNMSUB231PSZmkz
VFMSUBADD231PSZmkz
VFMADD231PSZmkz
VFNMADD231PSZmkz
VFMADDSUB132PSZmkz
VFMSUB132PSZmkz
VFNMSUB132PSZmkz
VFMSUBADD132PSZmkz
VFMADD132PSZmkz
VFNMADD132PSZmkz
VFMADDSUB213PSZmkz
VFMSUB213PSZmkz
VFNMSUB213PSZmkz
VFMSUBADD213PSZmkz
VFMADD213PSZmkz
VFNMADD213PSZmkz
VRCP14PSZmkz
VRSQRT14PSZmkz
VSQRTPSZmkz
VBROADCASTSSZmkz
VBROADCASTF64X2rmkz
VBROADCASTI64X2rmkz
VBROADCASTF32X4rmkz
VBROADCASTI32X4rmkz
VBROADCASTF64X4rmkz
VBROADCASTI64X4rmkz
VPERMI2D256rmkz
VPERMT2D256rmkz
VPERMI2PD256rmkz
VPERMT2PD256rmkz
VPERMI2Q256rmkz
VPERMT2Q256rmkz
VPERMI2PS256rmkz
VPERMT2PS256rmkz
VPERMI2W256rmkz
VPERMT2W256rmkz
VMOVDQA32Z256rmkz
VMOVDQU32Z256rmkz
VMOVDQA64Z256rmkz
VMOVDQU64Z256rmkz
VBROADCASTF32X4Z256rmkz
VBROADCASTI32X4Z256rmkz
VMOVDQU16Z256rmkz
VMOVDQU8Z256rmkz
VPSUBBZ256rmkz
VPADDBZ256rmkz
VPSHUFBZ256rmkz
VPAVGBZ256rmkz
VPBLENDMBZ256rmkz
VPABSBZ256rmkz
VPSUBSBZ256rmkz
VPADDSBZ256rmkz
VPMINSBZ256rmkz
VPSUBUSBZ256rmkz
VPADDUSBZ256rmkz
VPMAXSBZ256rmkz
VPMINUBZ256rmkz
VPMAXUBZ256rmkz
VPACKSSWBZ256rmkz
VPACKUSWBZ256rmkz
VPSRADZ256rmkz
VPSUBDZ256rmkz
VPMOVSXBDZ256rmkz
VPMOVZXBDZ256rmkz
VPADDDZ256rmkz
VPANDDZ256rmkz
VPEXPANDDZ256rmkz
VPSLLDZ256rmkz
VPMULLDZ256rmkz
VPSRLDZ256rmkz
VPBLENDMDZ256rmkz
VPERMDZ256rmkz
VPANDNDZ256rmkz
VCVTDQ2PDZ256rmkz
VCVTUDQ2PDZ256rmkz
VCVTQQ2PDZ256rmkz
VCVTUQQ2PDZ256rmkz
VCVTPS2PDZ256rmkz
VMOVAPDZ256rmkz
VSUBPDZ256rmkz
VADDPDZ256rmkz
VEXPANDPDZ256rmkz
VANDPDZ256rmkz
VSCALEFPDZ256rmkz
VUNPCKHPDZ256rmkz
VUNPCKLPDZ256rmkz
VMULPDZ256rmkz
VBLENDMPDZ256rmkz
VPERMPDZ256rmkz
VANDNPDZ256rmkz
VMINPDZ256rmkz
VORPDZ256rmkz
VXORPDZ256rmkz
VMOVUPDZ256rmkz
VDIVPDZ256rmkz
VMAXPDZ256rmkz
VPORDZ256rmkz
VPXORDZ256rmkz
VPABSDZ256rmkz
VPMINSDZ256rmkz
VPMAXSDZ256rmkz
VPMINUDZ256rmkz
VPMAXUDZ256rmkz
VPSRAVDZ256rmkz
VPSLLVDZ256rmkz
VPROLVDZ256rmkz
VPSRLVDZ256rmkz
VPRORVDZ256rmkz
VPMADDWDZ256rmkz
VPUNPCKHWDZ256rmkz
VPUNPCKLWDZ256rmkz
VPMOVSXWDZ256rmkz
VPMOVZXWDZ256rmkz
VPSRAQZ256rmkz
VPSUBQZ256rmkz
VPMOVSXBQZ256rmkz
VPMOVZXBQZ256rmkz
VCVTTPD2DQZ256rmkz
VCVTPD2DQZ256rmkz
VCVTTPS2DQZ256rmkz
VCVTPS2DQZ256rmkz
VPADDQZ256rmkz
VPUNPCKHDQZ256rmkz
VPUNPCKLDQZ256rmkz
VPMULDQZ256rmkz
VPANDQZ256rmkz
VPEXPANDQZ256rmkz
VPUNPCKHQDQZ256rmkz
VPUNPCKLQDQZ256rmkz
VCVTTPD2UDQZ256rmkz
VCVTPD2UDQZ256rmkz
VCVTTPS2UDQZ256rmkz
VCVTPS2UDQZ256rmkz
VPMULUDQZ256rmkz
VPMOVSXDQZ256rmkz
VPMOVZXDQZ256rmkz
VPSLLQZ256rmkz
VPMULLQZ256rmkz
VPSRLQZ256rmkz
VPBLENDMQZ256rmkz
VPERMQZ256rmkz
VPANDNQZ256rmkz
VCVTTPD2QQZ256rmkz
VCVTPD2QQZ256rmkz
VCVTTPS2QQZ256rmkz
VCVTPS2QQZ256rmkz
VCVTTPD2UQQZ256rmkz
VCVTPD2UQQZ256rmkz
VCVTTPS2UQQZ256rmkz
VCVTPS2UQQZ256rmkz
VPORQZ256rmkz
VPXORQZ256rmkz
VPABSQZ256rmkz
VPMINSQZ256rmkz
VPMAXSQZ256rmkz
VPMINUQZ256rmkz
VPMAXUQZ256rmkz
VPSRAVQZ256rmkz
VPSLLVQZ256rmkz
VPROLVQZ256rmkz
VPSRLVQZ256rmkz
VPRORVQZ256rmkz
VPMOVSXWQZ256rmkz
VPMOVZXWQZ256rmkz
VCVTPD2PSZ256rmkz
VCVTDQ2PSZ256rmkz
VCVTUDQ2PSZ256rmkz
VCVTQQ2PSZ256rmkz
VCVTUQQ2PSZ256rmkz
VMOVAPSZ256rmkz
VSUBPSZ256rmkz
VADDPSZ256rmkz
VEXPANDPSZ256rmkz
VANDPSZ256rmkz
VSCALEFPSZ256rmkz
VUNPCKHPSZ256rmkz
VUNPCKLPSZ256rmkz
VMULPSZ256rmkz
VBLENDMPSZ256rmkz
VPERMPSZ256rmkz
VANDNPSZ256rmkz
VMINPSZ256rmkz
VORPSZ256rmkz
VXORPSZ256rmkz
VMOVUPSZ256rmkz
VDIVPSZ256rmkz
VMAXPSZ256rmkz
VPSRAWZ256rmkz
VPUNPCKHBWZ256rmkz
VPUNPCKLBWZ256rmkz
VPSUBWZ256rmkz
VPMOVSXBWZ256rmkz
VPMOVZXBWZ256rmkz
VPADDWZ256rmkz
VPACKSSDWZ256rmkz
VPACKUSDWZ256rmkz
VPAVGWZ256rmkz
VPMULHWZ256rmkz
VPSLLWZ256rmkz
VPMULLWZ256rmkz
VPSRLWZ256rmkz
VPBLENDMWZ256rmkz
VPERMWZ256rmkz
VPABSWZ256rmkz
VPMADDUBSWZ256rmkz
VPSUBSWZ256rmkz
VPADDSWZ256rmkz
VPMINSWZ256rmkz
VPMULHRSWZ256rmkz
VPSUBUSWZ256rmkz
VPADDUSWZ256rmkz
VPMAXSWZ256rmkz
VPMULHUWZ256rmkz
VPMINUWZ256rmkz
VPMAXUWZ256rmkz
VPSRAVWZ256rmkz
VPSLLVWZ256rmkz
VPSRLVWZ256rmkz
VPERMI2D128rmkz
VPERMT2D128rmkz
VPERMI2PD128rmkz
VPERMT2PD128rmkz
VPERMI2Q128rmkz
VPERMT2Q128rmkz
VPERMI2PS128rmkz
VPERMT2PS128rmkz
VPERMI2W128rmkz
VPERMT2W128rmkz
VMOVDQA32Z128rmkz
VMOVDQU32Z128rmkz
VBROADCASTF64X2Z128rmkz
VBROADCASTI64X2Z128rmkz
VMOVDQA64Z128rmkz
VMOVDQU64Z128rmkz
VMOVDQU16Z128rmkz
VMOVDQU8Z128rmkz
VPSUBBZ128rmkz
VPADDBZ128rmkz
VPSHUFBZ128rmkz
VPAVGBZ128rmkz
VPBLENDMBZ128rmkz
VPABSBZ128rmkz
VPSUBSBZ128rmkz
VPADDSBZ128rmkz
VPMINSBZ128rmkz
VPSUBUSBZ128rmkz
VPADDUSBZ128rmkz
VPMAXSBZ128rmkz
VPMINUBZ128rmkz
VPMAXUBZ128rmkz
VPACKSSWBZ128rmkz
VPACKUSWBZ128rmkz
VPSRADZ128rmkz
VPSUBDZ128rmkz
VPMOVSXBDZ128rmkz
VPMOVZXBDZ128rmkz
VPADDDZ128rmkz
VPANDDZ128rmkz
VPEXPANDDZ128rmkz
VPSLLDZ128rmkz
VPMULLDZ128rmkz
VPSRLDZ128rmkz
VPBLENDMDZ128rmkz
VPANDNDZ128rmkz
VCVTDQ2PDZ128rmkz
VCVTUDQ2PDZ128rmkz
VCVTQQ2PDZ128rmkz
VCVTUQQ2PDZ128rmkz
VCVTPS2PDZ128rmkz
VMOVAPDZ128rmkz
VSUBPDZ128rmkz
VADDPDZ128rmkz
VEXPANDPDZ128rmkz
VANDPDZ128rmkz
VSCALEFPDZ128rmkz
VUNPCKHPDZ128rmkz
VUNPCKLPDZ128rmkz
VMULPDZ128rmkz
VBLENDMPDZ128rmkz
VANDNPDZ128rmkz
VMINPDZ128rmkz
VORPDZ128rmkz
VXORPDZ128rmkz
VMOVUPDZ128rmkz
VDIVPDZ128rmkz
VMAXPDZ128rmkz
VPORDZ128rmkz
VPXORDZ128rmkz
VPABSDZ128rmkz
VSCALEFSDZ128rmkz
VPMINSDZ128rmkz
VPMAXSDZ128rmkz
VPMINUDZ128rmkz
VPMAXUDZ128rmkz
VPSRAVDZ128rmkz
VPSLLVDZ128rmkz
VPROLVDZ128rmkz
VPSRLVDZ128rmkz
VPRORVDZ128rmkz
VPMADDWDZ128rmkz
VPUNPCKHWDZ128rmkz
VPUNPCKLWDZ128rmkz
VPMOVSXWDZ128rmkz
VPMOVZXWDZ128rmkz
VPSRAQZ128rmkz
VPSUBQZ128rmkz
VPMOVSXBQZ128rmkz
VPMOVZXBQZ128rmkz
VCVTTPD2DQZ128rmkz
VCVTPD2DQZ128rmkz
VCVTTPS2DQZ128rmkz
VCVTPS2DQZ128rmkz
VPADDQZ128rmkz
VPUNPCKHDQZ128rmkz
VPUNPCKLDQZ128rmkz
VPMULDQZ128rmkz
VPANDQZ128rmkz
VPEXPANDQZ128rmkz
VPUNPCKHQDQZ128rmkz
VPUNPCKLQDQZ128rmkz
VCVTTPD2UDQZ128rmkz
VCVTPD2UDQZ128rmkz
VCVTTPS2UDQZ128rmkz
VCVTPS2UDQZ128rmkz
VPMULUDQZ128rmkz
VPMOVSXDQZ128rmkz
VPMOVZXDQZ128rmkz
VPSLLQZ128rmkz
VPMULLQZ128rmkz
VPSRLQZ128rmkz
VPBLENDMQZ128rmkz
VPANDNQZ128rmkz
VCVTTPD2QQZ128rmkz
VCVTPD2QQZ128rmkz
VCVTTPS2QQZ128rmkz
VCVTPS2QQZ128rmkz
VCVTTPD2UQQZ128rmkz
VCVTPD2UQQZ128rmkz
VCVTTPS2UQQZ128rmkz
VCVTPS2UQQZ128rmkz
VPORQZ128rmkz
VPXORQZ128rmkz
VPABSQZ128rmkz
VPMINSQZ128rmkz
VPMAXSQZ128rmkz
VPMINUQZ128rmkz
VPMAXUQZ128rmkz
VPSRAVQZ128rmkz
VPSLLVQZ128rmkz
VPROLVQZ128rmkz
VPSRLVQZ128rmkz
VPRORVQZ128rmkz
VPMOVSXWQZ128rmkz
VPMOVZXWQZ128rmkz
VCVTPD2PSZ128rmkz
VCVTDQ2PSZ128rmkz
VCVTUDQ2PSZ128rmkz
VCVTQQ2PSZ128rmkz
VCVTUQQ2PSZ128rmkz
VMOVAPSZ128rmkz
VSUBPSZ128rmkz
VADDPSZ128rmkz
VEXPANDPSZ128rmkz
VANDPSZ128rmkz
VSCALEFPSZ128rmkz
VUNPCKHPSZ128rmkz
VUNPCKLPSZ128rmkz
VMULPSZ128rmkz
VBLENDMPSZ128rmkz
VANDNPSZ128rmkz
VMINPSZ128rmkz
VORPSZ128rmkz
VXORPSZ128rmkz
VMOVUPSZ128rmkz
VDIVPSZ128rmkz
VMAXPSZ128rmkz
VSCALEFSSZ128rmkz
VPSRAWZ128rmkz
VPUNPCKHBWZ128rmkz
VPUNPCKLBWZ128rmkz
VPSUBWZ128rmkz
VPMOVSXBWZ128rmkz
VPMOVZXBWZ128rmkz
VPADDWZ128rmkz
VPACKSSDWZ128rmkz
VPACKUSDWZ128rmkz
VPAVGWZ128rmkz
VPMULHWZ128rmkz
VPSLLWZ128rmkz
VPMULLWZ128rmkz
VPSRLWZ128rmkz
VPBLENDMWZ128rmkz
VPERMWZ128rmkz
VPABSWZ128rmkz
VPMADDUBSWZ128rmkz
VPSUBSWZ128rmkz
VPADDSWZ128rmkz
VPMINSWZ128rmkz
VPMULHRSWZ128rmkz
VPSUBUSWZ128rmkz
VPADDUSWZ128rmkz
VPMAXSWZ128rmkz
VPMULHUWZ128rmkz
VPMINUWZ128rmkz
VPMAXUWZ128rmkz
VPSRAVWZ128rmkz
VPSLLVWZ128rmkz
VPSRLVWZ128rmkz
VBROADCASTF32X8rmkz
VBROADCASTI32X8rmkz
VPERMI2Drmkz
VPERMT2Drmkz
VPERMI2PDrmkz
VPERMT2PDrmkz
VPCONFLICTDrmkz
VPLZCNTDrmkz
VPERMI2Qrmkz
VPERMT2Qrmkz
VPCONFLICTQrmkz
VPLZCNTQrmkz
VPERMI2PSrmkz
VPERMT2PSrmkz
VPERMI2Wrmkz
VPERMT2Wrmkz
VMOVDQA32Zrmkz
VMOVDQU32Zrmkz
VMOVDQA64Zrmkz
VMOVDQU64Zrmkz
VMOVDQU16Zrmkz
VMOVDQU8Zrmkz
VPSUBBZrmkz
VPADDBZrmkz
VPSHUFBZrmkz
VPAVGBZrmkz
VPBLENDMBZrmkz
VPABSBZrmkz
VPSUBSBZrmkz
VPADDSBZrmkz
VPMINSBZrmkz
VPSUBUSBZrmkz
VPADDUSBZrmkz
VPMAXSBZrmkz
VPMINUBZrmkz
VPMAXUBZrmkz
VPACKSSWBZrmkz
VPACKUSWBZrmkz
VPSRADZrmkz
VPSUBDZrmkz
VPMOVSXBDZrmkz
VPMOVZXBDZrmkz
VPADDDZrmkz
VPANDDZrmkz
VPEXPANDDZrmkz
VPSLLDZrmkz
VPMULLDZrmkz
VPSRLDZrmkz
VPBLENDMDZrmkz
VPERMDZrmkz
VPANDNDZrmkz
VCVTDQ2PDZrmkz
VCVTUDQ2PDZrmkz
VCVTQQ2PDZrmkz
VCVTUQQ2PDZrmkz
VCVTPS2PDZrmkz
VMOVAPDZrmkz
VSUBPDZrmkz
VADDPDZrmkz
VEXPANDPDZrmkz
VANDPDZrmkz
VSCALEFPDZrmkz
VUNPCKHPDZrmkz
VUNPCKLPDZrmkz
VMULPDZrmkz
VBLENDMPDZrmkz
VPERMPDZrmkz
VANDNPDZrmkz
VMINPDZrmkz
VORPDZrmkz
VXORPDZrmkz
VMOVUPDZrmkz
VDIVPDZrmkz
VMAXPDZrmkz
VPORDZrmkz
VPXORDZrmkz
VPABSDZrmkz
VPMINSDZrmkz
VPMAXSDZrmkz
VPBROADCASTDZrmkz
VPMINUDZrmkz
VPMAXUDZrmkz
VPSRAVDZrmkz
VPSLLVDZrmkz
VPROLVDZrmkz
VPSRLVDZrmkz
VPRORVDZrmkz
VPMADDWDZrmkz
VPUNPCKHWDZrmkz
VPUNPCKLWDZrmkz
VPMOVSXWDZrmkz
VPMOVZXWDZrmkz
VPSRAQZrmkz
VPSUBQZrmkz
VPMOVSXBQZrmkz
VPMOVZXBQZrmkz
VCVTTPD2DQZrmkz
VCVTPD2DQZrmkz
VCVTTPS2DQZrmkz
VCVTPS2DQZrmkz
VPADDQZrmkz
VPUNPCKHDQZrmkz
VPUNPCKLDQZrmkz
VPMULDQZrmkz
VPANDQZrmkz
VPEXPANDQZrmkz
VPUNPCKHQDQZrmkz
VPUNPCKLQDQZrmkz
VCVTTPD2UDQZrmkz
VCVTPD2UDQZrmkz
VCVTTPS2UDQZrmkz
VCVTPS2UDQZrmkz
VPMULUDQZrmkz
VPMOVSXDQZrmkz
VPMOVZXDQZrmkz
VPSLLQZrmkz
VPMULLQZrmkz
VPSRLQZrmkz
VPBLENDMQZrmkz
VPERMQZrmkz
VPANDNQZrmkz
VCVTTPD2QQZrmkz
VCVTPD2QQZrmkz
VCVTTPS2QQZrmkz
VCVTPS2QQZrmkz
VCVTTPD2UQQZrmkz
VCVTPD2UQQZrmkz
VCVTTPS2UQQZrmkz
VCVTPS2UQQZrmkz
VPORQZrmkz
VPXORQZrmkz
VPABSQZrmkz
VPMINSQZrmkz
VPMAXSQZrmkz
VPBROADCASTQZrmkz
VPMINUQZrmkz
VPMAXUQZrmkz
VPSRAVQZrmkz
VPSLLVQZrmkz
VPROLVQZrmkz
VPSRLVQZrmkz
VPRORVQZrmkz
VPMOVSXWQZrmkz
VPMOVZXWQZrmkz
VCVTPD2PSZrmkz
VCVTDQ2PSZrmkz
VCVTUDQ2PSZrmkz
VCVTQQ2PSZrmkz
VCVTUQQ2PSZrmkz
VMOVAPSZrmkz
VSUBPSZrmkz
VADDPSZrmkz
VEXPANDPSZrmkz
VANDPSZrmkz
VSCALEFPSZrmkz
VUNPCKHPSZrmkz
VUNPCKLPSZrmkz
VMULPSZrmkz
VBLENDMPSZrmkz
VPERMPSZrmkz
VANDNPSZrmkz
VMINPSZrmkz
VORPSZrmkz
VXORPSZrmkz
VMOVUPSZrmkz
VDIVPSZrmkz
VMAXPSZrmkz
VPSRAWZrmkz
VPUNPCKHBWZrmkz
VPUNPCKLBWZrmkz
VPSUBWZrmkz
VPMOVSXBWZrmkz
VPMOVZXBWZrmkz
VPADDWZrmkz
VPACKSSDWZrmkz
VPACKUSDWZrmkz
VPAVGWZrmkz
VPMULHWZrmkz
VPSLLWZrmkz
VPMULLWZrmkz
VPSRLWZrmkz
VPBLENDMWZrmkz
VPERMWZrmkz
VPABSWZrmkz
VPMADDUBSWZrmkz
VPSUBSWZrmkz
VPADDSWZrmkz
VPMINSWZrmkz
VPMULHRSWZrmkz
VPSUBUSWZrmkz
VPADDUSWZrmkz
VPMAXSWZrmkz
VPMULHUWZrmkz
VPMINUWZrmkz
VPMAXUWZrmkz
VPSRAVWZrmkz
VPSLLVWZrmkz
VPSRLVWZrmkz
VFMADDSUB231PDZ256rkz
VFMSUB231PDZ256rkz
VFNMSUB231PDZ256rkz
VFMSUBADD231PDZ256rkz
VFMADD231PDZ256rkz
VFNMADD231PDZ256rkz
VFMADDSUB132PDZ256rkz
VFMSUB132PDZ256rkz
VFNMSUB132PDZ256rkz
VFMSUBADD132PDZ256rkz
VFMADD132PDZ256rkz
VFNMADD132PDZ256rkz
VFMADDSUB213PDZ256rkz
VFMSUB213PDZ256rkz
VFNMSUB213PDZ256rkz
VFMSUBADD213PDZ256rkz
VFMADD213PDZ256rkz
VFNMADD213PDZ256rkz
VRCP14PDZ256rkz
VRSQRT14PDZ256rkz
VGETEXPPDZ256rkz
VSQRTPDZ256rkz
VBROADCASTSDZ256rkz
VFMADDSUB231PSZ256rkz
VFMSUB231PSZ256rkz
VFNMSUB231PSZ256rkz
VFMSUBADD231PSZ256rkz
VFMADD231PSZ256rkz
VFNMADD231PSZ256rkz
VFMADDSUB132PSZ256rkz
VFMSUB132PSZ256rkz
VFNMSUB132PSZ256rkz
VFMSUBADD132PSZ256rkz
VFMADD132PSZ256rkz
VFNMADD132PSZ256rkz
VFMADDSUB213PSZ256rkz
VFMSUB213PSZ256rkz
VFNMSUB213PSZ256rkz
VFMSUBADD213PSZ256rkz
VFMADD213PSZ256rkz
VFNMADD213PSZ256rkz
VRCP14PSZ256rkz
VRSQRT14PSZ256rkz
VGETEXPPSZ256rkz
VSQRTPSZ256rkz
VBROADCASTSSZ256rkz
VPBROADCASTBrZ256rkz
VPBROADCASTDrZ256rkz
VPBROADCASTQrZ256rkz
VPBROADCASTWrZ256rkz
VFMADDSUB231PDZ128rkz
VFMSUB231PDZ128rkz
VFNMSUB231PDZ128rkz
VFMSUBADD231PDZ128rkz
VFMADD231PDZ128rkz
VFNMADD231PDZ128rkz
VFMADDSUB132PDZ128rkz
VFMSUB132PDZ128rkz
VFNMSUB132PDZ128rkz
VFMSUBADD132PDZ128rkz
VFMADD132PDZ128rkz
VFNMADD132PDZ128rkz
VFMADDSUB213PDZ128rkz
VFMSUB213PDZ128rkz
VFNMSUB213PDZ128rkz
VFMSUBADD213PDZ128rkz
VFMADD213PDZ128rkz
VFNMADD213PDZ128rkz
VRCP14PDZ128rkz
VRSQRT14PDZ128rkz
VGETEXPPDZ128rkz
VSQRTPDZ128rkz
VFMADDSUB231PSZ128rkz
VFMSUB231PSZ128rkz
VFNMSUB231PSZ128rkz
VFMSUBADD231PSZ128rkz
VFMADD231PSZ128rkz
VFNMADD231PSZ128rkz
VFMADDSUB132PSZ128rkz
VFMSUB132PSZ128rkz
VFNMSUB132PSZ128rkz
VFMSUBADD132PSZ128rkz
VFMADD132PSZ128rkz
VFNMADD132PSZ128rkz
VFMADDSUB213PSZ128rkz
VFMSUB213PSZ128rkz
VFNMSUB213PSZ128rkz
VFMSUBADD213PSZ128rkz
VFMADD213PSZ128rkz
VFNMADD213PSZ128rkz
VRCP14PSZ128rkz
VRSQRT14PSZ128rkz
VGETEXPPSZ128rkz
VSQRTPSZ128rkz
VBROADCASTSSZ128rkz
VPBROADCASTBrZ128rkz
VPBROADCASTDrZ128rkz
VPBROADCASTQrZ128rkz
VPBROADCASTWrZ128rkz
VEXP2PDrkz
VRCP28PDrkz
VRSQRT28PDrkz
VGETEXPPDrkz
VRCP28SDrkz
VRSQRT28SDrkz
VRNDSCALESDrkz
VGETEXPSDrkz
VEXP2PSrkz
VRCP28PSrkz
VRSQRT28PSrkz
VGETEXPPSrkz
VRCP28SSrkz
VRSQRT28SSrkz
VRNDSCALESSrkz
VGETEXPSSrkz
VFMADDSUB231PDZrkz
VFMSUB231PDZrkz
VFNMSUB231PDZrkz
VFMSUBADD231PDZrkz
VFMADD231PDZrkz
VFNMADD231PDZrkz
VFMADDSUB132PDZrkz
VFMSUB132PDZrkz
VFNMSUB132PDZrkz
VFMSUBADD132PDZrkz
VFMADD132PDZrkz
VFNMADD132PDZrkz
VFMADDSUB213PDZrkz
VFMSUB213PDZrkz
VFNMSUB213PDZrkz
VFMSUBADD213PDZrkz
VFMADD213PDZrkz
VFNMADD213PDZrkz
VRCP14PDZrkz
VRSQRT14PDZrkz
VSQRTPDZrkz
VBROADCASTSDZrkz
VFMADDSUB231PSZrkz
VFMSUB231PSZrkz
VFNMSUB231PSZrkz
VFMSUBADD231PSZrkz
VFMADD231PSZrkz
VFNMADD231PSZrkz
VFMADDSUB132PSZrkz
VFMSUB132PSZrkz
VFNMSUB132PSZrkz
VFMSUBADD132PSZrkz
VFMADD132PSZrkz
VFNMADD132PSZrkz
VFMADDSUB213PSZrkz
VFMSUB213PSZrkz
VFNMSUB213PSZrkz
VFMSUBADD213PSZrkz
VFMADD213PSZrkz
VFNMADD213PSZrkz
VRCP14PSZrkz
VRSQRT14PSZrkz
VSQRTPSZrkz
VBROADCASTSSZrkz
VPBROADCASTBrZrkz
VPBROADCASTDrZrkz
VPBROADCASTQrZrkz
VPBROADCASTWrZrkz
VEXTRACTF32x4rrkz
VEXTRACTI32x4rrkz
VEXTRACTF64x4rrkz
VEXTRACTI64x4rrkz
VPERMI2D256rrkz
VPERMT2D256rrkz
VPERMI2PD256rrkz
VPERMT2PD256rrkz
VPERMI2Q256rrkz
VPERMT2Q256rrkz
VPERMI2PS256rrkz
VPERMT2PS256rrkz
VPERMI2W256rrkz
VPERMT2W256rrkz
VMOVDQA32Z256rrkz
VMOVDQU32Z256rrkz
VMOVDQA64Z256rrkz
VMOVDQU64Z256rrkz
VMOVDQU16Z256rrkz
VMOVDQU8Z256rrkz
VPSUBBZ256rrkz
VPADDBZ256rrkz
VPMOVUSDBZ256rrkz
VPMOVSDBZ256rrkz
VPMOVDBZ256rrkz
VPSHUFBZ256rrkz
VPAVGBZ256rrkz
VPBLENDMBZ256rrkz
VPMOVUSQBZ256rrkz
VPMOVSQBZ256rrkz
VPMOVQBZ256rrkz
VPABSBZ256rrkz
VPSUBSBZ256rrkz
VPADDSBZ256rrkz
VPMINSBZ256rrkz
VPSUBUSBZ256rrkz
VPADDUSBZ256rrkz
VPMAXSBZ256rrkz
VPMINUBZ256rrkz
VPMAXUBZ256rrkz
VPACKSSWBZ256rrkz
VPACKUSWBZ256rrkz
VPMOVUSWBZ256rrkz
VPMOVSWBZ256rrkz
VPMOVWBZ256rrkz
VPSRADZ256rrkz
VPSUBDZ256rrkz
VPMOVSXBDZ256rrkz
VPMOVZXBDZ256rrkz
VPADDDZ256rrkz
VPANDDZ256rrkz
VPEXPANDDZ256rrkz
VPSLLDZ256rrkz
VPMULLDZ256rrkz
VPSRLDZ256rrkz
VPBLENDMDZ256rrkz
VPERMDZ256rrkz
VPANDNDZ256rrkz
VCVTDQ2PDZ256rrkz
VCVTUDQ2PDZ256rrkz
VCVTQQ2PDZ256rrkz
VCVTUQQ2PDZ256rrkz
VCVTPS2PDZ256rrkz
VMOVAPDZ256rrkz
VSUBPDZ256rrkz
VADDPDZ256rrkz
VEXPANDPDZ256rrkz
VANDPDZ256rrkz
VSCALEFPDZ256rrkz
VUNPCKHPDZ256rrkz
VUNPCKLPDZ256rrkz
VMULPDZ256rrkz
VBLENDMPDZ256rrkz
VPERMPDZ256rrkz
VANDNPDZ256rrkz
VMINPDZ256rrkz
VORPDZ256rrkz
VXORPDZ256rrkz
VCOMPRESSPDZ256rrkz
VMOVUPDZ256rrkz
VDIVPDZ256rrkz
VMAXPDZ256rrkz
VPMOVUSQDZ256rrkz
VPMOVSQDZ256rrkz
VPMOVQDZ256rrkz
VPORDZ256rrkz
VPXORDZ256rrkz
VPABSDZ256rrkz
VPMINSDZ256rrkz
VPCOMPRESSDZ256rrkz
VPMAXSDZ256rrkz
VPMINUDZ256rrkz
VPMAXUDZ256rrkz
VPSRAVDZ256rrkz
VPSLLVDZ256rrkz
VPROLVDZ256rrkz
VPSRLVDZ256rrkz
VPRORVDZ256rrkz
VPMADDWDZ256rrkz
VPUNPCKHWDZ256rrkz
VPUNPCKLWDZ256rrkz
VPMOVSXWDZ256rrkz
VPMOVZXWDZ256rrkz
VPSRAQZ256rrkz
VPSUBQZ256rrkz
VPMOVSXBQZ256rrkz
VPMOVZXBQZ256rrkz
VCVTTPD2DQZ256rrkz
VCVTPD2DQZ256rrkz
VCVTTPS2DQZ256rrkz
VCVTPS2DQZ256rrkz
VPADDQZ256rrkz
VPUNPCKHDQZ256rrkz
VPUNPCKLDQZ256rrkz
VPMULDQZ256rrkz
VPANDQZ256rrkz
VPEXPANDQZ256rrkz
VPUNPCKHQDQZ256rrkz
VPUNPCKLQDQZ256rrkz
VCVTTPD2UDQZ256rrkz
VCVTPD2UDQZ256rrkz
VCVTTPS2UDQZ256rrkz
VCVTPS2UDQZ256rrkz
VPMULUDQZ256rrkz
VPMOVSXDQZ256rrkz
VPMOVZXDQZ256rrkz
VPSLLQZ256rrkz
VPMULLQZ256rrkz
VPSRLQZ256rrkz
VPBLENDMQZ256rrkz
VPERMQZ256rrkz
VPANDNQZ256rrkz
VCVTTPD2QQZ256rrkz
VCVTPD2QQZ256rrkz
VCVTTPS2QQZ256rrkz
VCVTPS2QQZ256rrkz
VCVTTPD2UQQZ256rrkz
VCVTPD2UQQZ256rrkz
VCVTTPS2UQQZ256rrkz
VCVTPS2UQQZ256rrkz
VPORQZ256rrkz
VPXORQZ256rrkz
VPABSQZ256rrkz
VPMINSQZ256rrkz
VPCOMPRESSQZ256rrkz
VPMAXSQZ256rrkz
VPMINUQZ256rrkz
VPMAXUQZ256rrkz
VPSRAVQZ256rrkz
VPSLLVQZ256rrkz
VPROLVQZ256rrkz
VPSRLVQZ256rrkz
VPRORVQZ256rrkz
VPMOVSXWQZ256rrkz
VPMOVZXWQZ256rrkz
VCVTPD2PSZ256rrkz
VCVTDQ2PSZ256rrkz
VCVTUDQ2PSZ256rrkz
VCVTQQ2PSZ256rrkz
VCVTUQQ2PSZ256rrkz
VMOVAPSZ256rrkz
VSUBPSZ256rrkz
VADDPSZ256rrkz
VEXPANDPSZ256rrkz
VANDPSZ256rrkz
VSCALEFPSZ256rrkz
VUNPCKHPSZ256rrkz
VUNPCKLPSZ256rrkz
VMULPSZ256rrkz
VBLENDMPSZ256rrkz
VPERMPSZ256rrkz
VANDNPSZ256rrkz
VMINPSZ256rrkz
VORPSZ256rrkz
VXORPSZ256rrkz
VCOMPRESSPSZ256rrkz
VMOVUPSZ256rrkz
VDIVPSZ256rrkz
VMAXPSZ256rrkz
VPSRAWZ256rrkz
VPUNPCKHBWZ256rrkz
VPUNPCKLBWZ256rrkz
VPSUBWZ256rrkz
VPMOVSXBWZ256rrkz
VPMOVZXBWZ256rrkz
VPADDWZ256rrkz
VPACKSSDWZ256rrkz
VPACKUSDWZ256rrkz
VPMOVUSDWZ256rrkz
VPMOVSDWZ256rrkz
VPMOVDWZ256rrkz
VPAVGWZ256rrkz
VPMULHWZ256rrkz
VPSLLWZ256rrkz
VPMULLWZ256rrkz
VPSRLWZ256rrkz
VPBLENDMWZ256rrkz
VPERMWZ256rrkz
VPMOVUSQWZ256rrkz
VPMOVSQWZ256rrkz
VPMOVQWZ256rrkz
VPABSWZ256rrkz
VPMADDUBSWZ256rrkz
VPSUBSWZ256rrkz
VPADDSWZ256rrkz
VPMINSWZ256rrkz
VPMULHRSWZ256rrkz
VPSUBUSWZ256rrkz
VPADDUSWZ256rrkz
VPMAXSWZ256rrkz
VPMULHUWZ256rrkz
VPMINUWZ256rrkz
VPMAXUWZ256rrkz
VPSRAVWZ256rrkz
VPSLLVWZ256rrkz
VPSRLVWZ256rrkz
VPERMI2D128rrkz
VPERMT2D128rrkz
VPERMI2PD128rrkz
VPERMT2PD128rrkz
VPERMI2Q128rrkz
VPERMT2Q128rrkz
VPERMI2PS128rrkz
VPERMT2PS128rrkz
VPERMI2W128rrkz
VPERMT2W128rrkz
VMOVDQA32Z128rrkz
VMOVDQU32Z128rrkz
VMOVDQA64Z128rrkz
VMOVDQU64Z128rrkz
VMOVDQU16Z128rrkz
VMOVDQU8Z128rrkz
VPSUBBZ128rrkz
VPADDBZ128rrkz
VPMOVUSDBZ128rrkz
VPMOVSDBZ128rrkz
VPMOVDBZ128rrkz
VPSHUFBZ128rrkz
VPAVGBZ128rrkz
VPBLENDMBZ128rrkz
VPMOVUSQBZ128rrkz
VPMOVSQBZ128rrkz
VPMOVQBZ128rrkz
VPABSBZ128rrkz
VPSUBSBZ128rrkz
VPADDSBZ128rrkz
VPMINSBZ128rrkz
VPSUBUSBZ128rrkz
VPADDUSBZ128rrkz
VPMAXSBZ128rrkz
VPMINUBZ128rrkz
VPMAXUBZ128rrkz
VPACKSSWBZ128rrkz
VPACKUSWBZ128rrkz
VPMOVUSWBZ128rrkz
VPMOVSWBZ128rrkz
VPMOVWBZ128rrkz
VPSRADZ128rrkz
VPSUBDZ128rrkz
VPMOVSXBDZ128rrkz
VPMOVZXBDZ128rrkz
VPADDDZ128rrkz
VPANDDZ128rrkz
VPEXPANDDZ128rrkz
VPSLLDZ128rrkz
VPMULLDZ128rrkz
VPSRLDZ128rrkz
VPBLENDMDZ128rrkz
VPANDNDZ128rrkz
VCVTDQ2PDZ128rrkz
VCVTUDQ2PDZ128rrkz
VCVTQQ2PDZ128rrkz
VCVTUQQ2PDZ128rrkz
VCVTPS2PDZ128rrkz
VMOVAPDZ128rrkz
VSUBPDZ128rrkz
VADDPDZ128rrkz
VEXPANDPDZ128rrkz
VANDPDZ128rrkz
VSCALEFPDZ128rrkz
VUNPCKHPDZ128rrkz
VUNPCKLPDZ128rrkz
VMULPDZ128rrkz
VBLENDMPDZ128rrkz
VANDNPDZ128rrkz
VMINPDZ128rrkz
VORPDZ128rrkz
VXORPDZ128rrkz
VCOMPRESSPDZ128rrkz
VMOVUPDZ128rrkz
VDIVPDZ128rrkz
VMAXPDZ128rrkz
VPMOVUSQDZ128rrkz
VPMOVSQDZ128rrkz
VPMOVQDZ128rrkz
VPORDZ128rrkz
VPXORDZ128rrkz
VPABSDZ128rrkz
VSCALEFSDZ128rrkz
VPMINSDZ128rrkz
VPCOMPRESSDZ128rrkz
VPMAXSDZ128rrkz
VPMINUDZ128rrkz
VPMAXUDZ128rrkz
VPSRAVDZ128rrkz
VPSLLVDZ128rrkz
VPROLVDZ128rrkz
VPSRLVDZ128rrkz
VPRORVDZ128rrkz
VPMADDWDZ128rrkz
VPUNPCKHWDZ128rrkz
VPUNPCKLWDZ128rrkz
VPMOVSXWDZ128rrkz
VPMOVZXWDZ128rrkz
VPSRAQZ128rrkz
VPSUBQZ128rrkz
VPMOVSXBQZ128rrkz
VPMOVZXBQZ128rrkz
VCVTTPD2DQZ128rrkz
VCVTPD2DQZ128rrkz
VCVTTPS2DQZ128rrkz
VCVTPS2DQZ128rrkz
VPADDQZ128rrkz
VPUNPCKHDQZ128rrkz
VPUNPCKLDQZ128rrkz
VPMULDQZ128rrkz
VPANDQZ128rrkz
VPEXPANDQZ128rrkz
VPUNPCKHQDQZ128rrkz
VPUNPCKLQDQZ128rrkz
VCVTTPD2UDQZ128rrkz
VCVTPD2UDQZ128rrkz
VCVTTPS2UDQZ128rrkz
VCVTPS2UDQZ128rrkz
VPMULUDQZ128rrkz
VPMOVSXDQZ128rrkz
VPMOVZXDQZ128rrkz
VPSLLQZ128rrkz
VPMULLQZ128rrkz
VPSRLQZ128rrkz
VPBLENDMQZ128rrkz
VPANDNQZ128rrkz
VCVTTPD2QQZ128rrkz
VCVTPD2QQZ128rrkz
VCVTTPS2QQZ128rrkz
VCVTPS2QQZ128rrkz
VCVTTPD2UQQZ128rrkz
VCVTPD2UQQZ128rrkz
VCVTTPS2UQQZ128rrkz
VCVTPS2UQQZ128rrkz
VPORQZ128rrkz
VPXORQZ128rrkz
VPABSQZ128rrkz
VPMINSQZ128rrkz
VPCOMPRESSQZ128rrkz
VPMAXSQZ128rrkz
VPMINUQZ128rrkz
VPMAXUQZ128rrkz
VPSRAVQZ128rrkz
VPSLLVQZ128rrkz
VPROLVQZ128rrkz
VPSRLVQZ128rrkz
VPRORVQZ128rrkz
VPMOVSXWQZ128rrkz
VPMOVZXWQZ128rrkz
VCVTPD2PSZ128rrkz
VCVTDQ2PSZ128rrkz
VCVTUDQ2PSZ128rrkz
VCVTQQ2PSZ128rrkz
VCVTUQQ2PSZ128rrkz
VMOVAPSZ128rrkz
VSUBPSZ128rrkz
VADDPSZ128rrkz
VEXPANDPSZ128rrkz
VANDPSZ128rrkz
VSCALEFPSZ128rrkz
VUNPCKHPSZ128rrkz
VUNPCKLPSZ128rrkz
VMULPSZ128rrkz
VBLENDMPSZ128rrkz
VANDNPSZ128rrkz
VMINPSZ128rrkz
VORPSZ128rrkz
VXORPSZ128rrkz
VCOMPRESSPSZ128rrkz
VMOVUPSZ128rrkz
VDIVPSZ128rrkz
VMAXPSZ128rrkz
VSCALEFSSZ128rrkz
VPSRAWZ128rrkz
VPUNPCKHBWZ128rrkz
VPUNPCKLBWZ128rrkz
VPSUBWZ128rrkz
VPMOVSXBWZ128rrkz
VPMOVZXBWZ128rrkz
VPADDWZ128rrkz
VPACKSSDWZ128rrkz
VPACKUSDWZ128rrkz
VPMOVUSDWZ128rrkz
VPMOVSDWZ128rrkz
VPMOVDWZ128rrkz
VPAVGWZ128rrkz
VPMULHWZ128rrkz
VPSLLWZ128rrkz
VPMULLWZ128rrkz
VPSRLWZ128rrkz
VPBLENDMWZ128rrkz
VPERMWZ128rrkz
VPMOVUSQWZ128rrkz
VPMOVSQWZ128rrkz
VPMOVQWZ128rrkz
VPABSWZ128rrkz
VPMADDUBSWZ128rrkz
VPSUBSWZ128rrkz
VPADDSWZ128rrkz
VPMINSWZ128rrkz
VPMULHRSWZ128rrkz
VPSUBUSWZ128rrkz
VPADDUSWZ128rrkz
VPMAXSWZ128rrkz
VPMULHUWZ128rrkz
VPMINUWZ128rrkz
VPMAXUWZ128rrkz
VPSRAVWZ128rrkz
VPSLLVWZ128rrkz
VPSRLVWZ128rrkz
VPERMI2Drrkz
VPERMT2Drrkz
VPERMI2PDrrkz
VPERMT2PDrrkz
VPCONFLICTDrrkz
VPLZCNTDrrkz
VPERMI2Qrrkz
VPERMT2Qrrkz
VPCONFLICTQrrkz
VPLZCNTQrrkz
VPERMI2PSrrkz
VPERMT2PSrrkz
VPERMI2Wrrkz
VPERMT2Wrrkz
VMOVDQA32Zrrkz
VMOVDQU32Zrrkz
VMOVDQA64Zrrkz
VMOVDQU64Zrrkz
VMOVDQU16Zrrkz
VMOVDQU8Zrrkz
VPSUBBZrrkz
VPADDBZrrkz
VPMOVUSDBZrrkz
VPMOVSDBZrrkz
VPMOVDBZrrkz
VPSHUFBZrrkz
VPAVGBZrrkz
VPBLENDMBZrrkz
VPMOVUSQBZrrkz
VPMOVSQBZrrkz
VPMOVQBZrrkz
VPABSBZrrkz
VPSUBSBZrrkz
VPADDSBZrrkz
VPMINSBZrrkz
VPSUBUSBZrrkz
VPADDUSBZrrkz
VPMAXSBZrrkz
VPMINUBZrrkz
VPMAXUBZrrkz
VPACKSSWBZrrkz
VPACKUSWBZrrkz
VPMOVUSWBZrrkz
VPMOVSWBZrrkz
VPMOVWBZrrkz
VPSRADZrrkz
VPSUBDZrrkz
VPMOVSXBDZrrkz
VPMOVZXBDZrrkz
VPADDDZrrkz
VPANDDZrrkz
VPEXPANDDZrrkz
VPSLLDZrrkz
VPMULLDZrrkz
VPSRLDZrrkz
VPBLENDMDZrrkz
VPERMDZrrkz
VPANDNDZrrkz
VCVTDQ2PDZrrkz
VCVTUDQ2PDZrrkz
VCVTQQ2PDZrrkz
VCVTUQQ2PDZrrkz
VCVTPS2PDZrrkz
VMOVAPDZrrkz
VSUBPDZrrkz
VADDPDZrrkz
VEXPANDPDZrrkz
VANDPDZrrkz
VSCALEFPDZrrkz
VUNPCKHPDZrrkz
VUNPCKLPDZrrkz
VMULPDZrrkz
VBLENDMPDZrrkz
VPERMPDZrrkz
VANDNPDZrrkz
VMINPDZrrkz
VORPDZrrkz
VXORPDZrrkz
VCOMPRESSPDZrrkz
VMOVUPDZrrkz
VDIVPDZrrkz
VMAXPDZrrkz
VPMOVUSQDZrrkz
VPMOVSQDZrrkz
VPMOVQDZrrkz
VPORDZrrkz
VPXORDZrrkz
VPABSDZrrkz
VPMINSDZrrkz
VPCOMPRESSDZrrkz
VPMAXSDZrrkz
VPBROADCASTDZrrkz
VPMINUDZrrkz
VPMAXUDZrrkz
VPSRAVDZrrkz
VPSLLVDZrrkz
VPROLVDZrrkz
VPSRLVDZrrkz
VPRORVDZrrkz
VPMADDWDZrrkz
VPUNPCKHWDZrrkz
VPUNPCKLWDZrrkz
VPMOVSXWDZrrkz
VPMOVZXWDZrrkz
VPSRAQZrrkz
VPSUBQZrrkz
VPMOVSXBQZrrkz
VPMOVZXBQZrrkz
VCVTTPD2DQZrrkz
VCVTPD2DQZrrkz
VCVTTPS2DQZrrkz
VCVTPS2DQZrrkz
VPADDQZrrkz
VPUNPCKHDQZrrkz
VPUNPCKLDQZrrkz
VPMULDQZrrkz
VPANDQZrrkz
VPEXPANDQZrrkz
VPUNPCKHQDQZrrkz
VPUNPCKLQDQZrrkz
VCVTTPD2UDQZrrkz
VCVTPD2UDQZrrkz
VCVTTPS2UDQZrrkz
VCVTPS2UDQZrrkz
VPMULUDQZrrkz
VPMOVSXDQZrrkz
VPMOVZXDQZrrkz
VPSLLQZrrkz
VPMULLQZrrkz
VPSRLQZrrkz
VPBLENDMQZrrkz
VPERMQZrrkz
VPANDNQZrrkz
VCVTTPD2QQZrrkz
VCVTPD2QQZrrkz
VCVTTPS2QQZrrkz
VCVTPS2QQZrrkz
VCVTTPD2UQQZrrkz
VCVTPD2UQQZrrkz
VCVTTPS2UQQZrrkz
VCVTPS2UQQZrrkz
VPORQZrrkz
VPXORQZrrkz
VPABSQZrrkz
VPMINSQZrrkz
VPCOMPRESSQZrrkz
VPMAXSQZrrkz
VPBROADCASTQZrrkz
VPMINUQZrrkz
VPMAXUQZrrkz
VPSRAVQZrrkz
VPSLLVQZrrkz
VPROLVQZrrkz
VPSRLVQZrrkz
VPRORVQZrrkz
VPMOVSXWQZrrkz
VPMOVZXWQZrrkz
VCVTPD2PSZrrkz
VCVTDQ2PSZrrkz
VCVTUDQ2PSZrrkz
VCVTQQ2PSZrrkz
VCVTUQQ2PSZrrkz
VMOVAPSZrrkz
VSUBPSZrrkz
VADDPSZrrkz
VEXPANDPSZrrkz
VANDPSZrrkz
VSCALEFPSZrrkz
VUNPCKHPSZrrkz
VUNPCKLPSZrrkz
VMULPSZrrkz
VBLENDMPSZrrkz
VPERMPSZrrkz
VANDNPSZrrkz
VMINPSZrrkz
VORPSZrrkz
VXORPSZrrkz
VCOMPRESSPSZrrkz
VMOVUPSZrrkz
VDIVPSZrrkz
VMAXPSZrrkz
VPSRAWZrrkz
VPUNPCKHBWZrrkz
VPUNPCKLBWZrrkz
VPSUBWZrrkz
VPMOVSXBWZrrkz
VPMOVZXBWZrrkz
VPADDWZrrkz
VPACKSSDWZrrkz
VPACKUSDWZrrkz
VPMOVUSDWZrrkz
VPMOVSDWZrrkz
VPMOVDWZrrkz
VPAVGWZrrkz
VPMULHWZrrkz
VPSLLWZrrkz
VPMULLWZrrkz
VPSRLWZrrkz
VPBLENDMWZrrkz
VPERMWZrrkz
VPMOVUSQWZrrkz
VPMOVSQWZrrkz
VPMOVQWZrrkz
VPABSWZrrkz
VPMADDUBSWZrrkz
VPSUBSWZrrkz
VPADDSWZrrkz
VPMINSWZrrkz
VPMULHRSWZrrkz
VPSUBUSWZrrkz
VPADDUSWZrrkz
VPMAXSWZrrkz
VPMULHUWZrrkz
VPMINUWZrrkz
VPMAXUWZrrkz
VPSRAVWZrrkz
VPSLLVWZrrkz
VPSRLVWZrrkz
VREDUCESDZ128rmi_altkz
VRANGESDZ128rmi_altkz
VFIXUPIMMSDZ128rmi_altkz
VREDUCESSZ128rmi_altkz
VRANGESSZ128rmi_altkz
VFIXUPIMMSSZ128rmi_altkz
VFMSUB231SD231SDrb_Intkz
VFNMSUB231SD231SDrb_Intkz
VFMADD231SD231SDrb_Intkz
VFNMADD231SD231SDrb_Intkz
VFMSUB132SD132SDrb_Intkz
VFNMSUB132SD132SDrb_Intkz
VFMADD132SD132SDrb_Intkz
VFNMADD132SD132SDrb_Intkz
VFMSUB213SD213SDrb_Intkz
VFNMSUB213SD213SDrb_Intkz
VFMADD213SD213SDrb_Intkz
VFNMADD213SD213SDrb_Intkz
VFMSUB231SS231SSrb_Intkz
VFNMSUB231SS231SSrb_Intkz
VFMADD231SS231SSrb_Intkz
VFNMADD231SS231SSrb_Intkz
VFMSUB132SS132SSrb_Intkz
VFNMSUB132SS132SSrb_Intkz
VFMADD132SS132SSrb_Intkz
VFNMADD132SS132SSrb_Intkz
VFMSUB213SS213SSrb_Intkz
VFNMSUB213SS213SSrb_Intkz
VFMADD213SS213SSrb_Intkz
VFNMADD213SS213SSrb_Intkz
VFMSUB231SD231SDm_Intkz
VFNMSUB231SD231SDm_Intkz
VFMADD231SD231SDm_Intkz
VFNMADD231SD231SDm_Intkz
VFMSUB132SD132SDm_Intkz
VFNMSUB132SD132SDm_Intkz
VFMADD132SD132SDm_Intkz
VFNMADD132SD132SDm_Intkz
VFMSUB213SD213SDm_Intkz
VFNMSUB213SD213SDm_Intkz
VFMADD213SD213SDm_Intkz
VFNMADD213SD213SDm_Intkz
VFMSUB231SS231SSm_Intkz
VFNMSUB231SS231SSm_Intkz
VFMADD231SS231SSm_Intkz
VFNMADD231SS231SSm_Intkz
VFMSUB132SS132SSm_Intkz
VFNMSUB132SS132SSm_Intkz
VFMADD132SS132SSm_Intkz
VFNMADD132SS132SSm_Intkz
VFMSUB213SS213SSm_Intkz
VFNMSUB213SS213SSm_Intkz
VFMADD213SS213SSm_Intkz
VFNMADD213SS213SSm_Intkz
VSUBSDZrm_Intkz
VADDSDZrm_Intkz
VMULSDZrm_Intkz
VMINSDZrm_Intkz
VDIVSDZrm_Intkz
VMAXSDZrm_Intkz
VSUBSSZrm_Intkz
VADDSSZrm_Intkz
VMULSSZrm_Intkz
VMINSSZrm_Intkz
VDIVSSZrm_Intkz
VMAXSSZrm_Intkz
VFMSUB231SD231SDr_Intkz
VFNMSUB231SD231SDr_Intkz
VFMADD231SD231SDr_Intkz
VFNMADD231SD231SDr_Intkz
VFMSUB132SD132SDr_Intkz
VFNMSUB132SD132SDr_Intkz
VFMADD132SD132SDr_Intkz
VFNMADD132SD132SDr_Intkz
VFMSUB213SD213SDr_Intkz
VFNMSUB213SD213SDr_Intkz
VFMADD213SD213SDr_Intkz
VFNMADD213SD213SDr_Intkz
VFMSUB231SS231SSr_Intkz
VFNMSUB231SS231SSr_Intkz
VFMADD231SS231SSr_Intkz
VFNMADD231SS231SSr_Intkz
VFMSUB132SS132SSr_Intkz
VFNMSUB132SS132SSr_Intkz
VFMADD132SS132SSr_Intkz
VFNMADD132SS132SSr_Intkz
VFMSUB213SS213SSr_Intkz
VFNMSUB213SS213SSr_Intkz
VFMADD213SS213SSr_Intkz
VFNMADD213SS213SSr_Intkz
VSUBSDZrr_Intkz
VADDSDZrr_Intkz
VMULSDZrr_Intkz
VMINSDZrr_Intkz
VDIVSDZrr_Intkz
VMAXSDZrr_Intkz
VSUBSSZrr_Intkz
VADDSSZrr_Intkz
VMULSSZrr_Intkz
VMINSSZrr_Intkz
VDIVSSZrr_Intkz
VMAXSSZrr_Intkz
N4llvm18X86MCAsmInfoDarwinE
N4llvm21X86_64MCAsmInfoDarwinE
N4llvm15X86ELFMCAsmInfoE
N4llvm21X86MCAsmInfoMicrosoftE
N4llvm19X86MCAsmInfoGNUCOFFE
N4llvm2cl3optI17AsmWriterFlavorTyLb0ENS0_6parserIS2_EEEE
N4llvm2cl11opt_storageI17AsmWriterFlavorTyLb0ELb0EEE
N4llvm2cl6parserI17AsmWriterFlavorTyEE
N4llvm2cl11OptionValueI17AsmWriterFlavorTyEE
N4llvm2cl15OptionValueBaseI17AsmWriterFlavorTyLb0EEE
N4llvm2cl15OptionValueCopyI17AsmWriterFlavorTyEE
N12_GLOBAL__N_116X86MCCodeEmitterE
N12_GLOBAL__N_119X86MachObjectWriterE
N12_GLOBAL__N_118X86ELFObjectWriterE
N12_GLOBAL__N_118X86WinCOFFStreamerE
N12_GLOBAL__N_122X86WinCOFFObjectWriterE
N12_GLOBAL__N_125X86_64MachORelocationInfoE
N12_GLOBAL__N_123X86_64ELFRelocationInfoE
N4llvm13AliasAnalysisE
N12_GLOBAL__N_120AliasAnalysisCounterE
N12_GLOBAL__N_16AAEvalE
N12_GLOBAL__N_113AliasDebuggerE
N4llvm15AliasSetTracker13ASTCallbackVHE
N12_GLOBAL__N_115AliasSetPrinterE
N4llvm22AssumptionCacheTracker18FunctionCallbackVHE
N4llvm22AssumptionCacheTrackerE
N4llvm18BasicAliasAnalysisE
N4llvm29BlockFrequencyInfoWrapperPassE
N4llvm22BlockFrequencyInfoImplINS_10BasicBlockEEE
N4llvm26BlockFrequencyInfoImplBaseE
N4llvm32BranchProbabilityInfoWrapperPassE
N12_GLOBAL__N_19CFGViewerE
N12_GLOBAL__N_113CFGOnlyViewerE
N12_GLOBAL__N_110CFGPrinterE
N12_GLOBAL__N_114CFGOnlyPrinterE
N4llvm16CFGStructurePassE
N12_GLOBAL__N_116CFLAliasAnalysisE
N12_GLOBAL__N_114FunctionHandleE
N4llvm14CaptureTrackerE
N12_GLOBAL__N_120SimpleCaptureTrackerE
N12_GLOBAL__N_114CapturesBeforeE
Cost Model Analysis
N12_GLOBAL__N_117CostModelAnalysisE
Delinearization
N12_GLOBAL__N_115DelinearizationE
N4llvm10DependenceE
N4llvm14FullDependenceE
N4llvm18DependenceAnalysisE
N4llvm18DivergenceAnalysisE
N12_GLOBAL__N_110DomPrinterE
N4llvm21DOTGraphTraitsPrinterINS_24DominatorTreeWrapperPassELb0EPNS_13DominatorTreeEN12_GLOBAL__N_143DominatorTreeWrapperPassAnalysisGraphTraitsEEE
N12_GLOBAL__N_114DomOnlyPrinterE
N4llvm21DOTGraphTraitsPrinterINS_24DominatorTreeWrapperPassELb1EPNS_13DominatorTreeEN12_GLOBAL__N_143DominatorTreeWrapperPassAnalysisGraphTraitsEEE
N12_GLOBAL__N_19DomViewerE
N4llvm20DOTGraphTraitsViewerINS_24DominatorTreeWrapperPassELb0EPNS_13DominatorTreeEN12_GLOBAL__N_143DominatorTreeWrapperPassAnalysisGraphTraitsEEE
N12_GLOBAL__N_113DomOnlyViewerE
N4llvm20DOTGraphTraitsViewerINS_24DominatorTreeWrapperPassELb1EPNS_13DominatorTreeEN12_GLOBAL__N_143DominatorTreeWrapperPassAnalysisGraphTraitsEEE
N12_GLOBAL__N_114PostDomPrinterE
N4llvm21DOTGraphTraitsPrinterINS_17PostDominatorTreeELb0EPS1_NS_26DefaultAnalysisGraphTraitsIS1_S2_EEEE
N12_GLOBAL__N_118PostDomOnlyPrinterE
N4llvm21DOTGraphTraitsPrinterINS_17PostDominatorTreeELb1EPS1_NS_26DefaultAnalysisGraphTraitsIS1_S2_EEEE
N12_GLOBAL__N_113PostDomViewerE
N4llvm20DOTGraphTraitsViewerINS_17PostDominatorTreeELb0EPS1_NS_26DefaultAnalysisGraphTraitsIS1_S2_EEEE
N12_GLOBAL__N_117PostDomOnlyViewerE
N4llvm20DOTGraphTraitsViewerINS_17PostDominatorTreeELb1EPS1_NS_26DefaultAnalysisGraphTraitsIS1_S2_EEEE
N4llvm17DominanceFrontierE
N12_GLOBAL__N_116GPUAliasAnalysisE
N4llvm11IVStrideUseE
N4llvm10ilist_nodeINS_11IVStrideUseEEE
N4llvm15ilist_half_nodeINS_11IVStrideUseEEE
N4llvm7IVUsersE
N12_GLOBAL__N_19InstCountE
N4llvm11InstVisitorIN12_GLOBAL__N_19InstCountEvEE
N4llvm17IntervalPartitionE
N4llvm13LazyValueInfoE
N12_GLOBAL__N_114LVIValueHandleE
N4llvm20LibCallAliasAnalysisE
N4llvm11LibCallInfoE
N12_GLOBAL__N_14LintE
N4llvm11InstVisitorIN12_GLOBAL__N_14LintEvEE
N4llvm18LoopAccessAnalysisE
Loop Access Analysis
N4llvm2cl3optIjLb1ENS0_6parserIjEEEE
N4llvm2cl11opt_storageIjLb1ELb0EEE
N4llvm19LoopInfoWrapperPassE
N4llvm8LoopPassE
N4llvm13LPPassManagerE
N12_GLOBAL__N_113PrintLoopPassE
N12_GLOBAL__N_113MemDepPrinterE
N12_GLOBAL__N_115MemDerefPrinterE
N4llvm24MemoryDependenceAnalysisE
N12_GLOBAL__N_122ModuleDebugInfoPrinterE
N12_GLOBAL__N_14NoAAE
N4llvm17PostDominatorTreeE
N4llvm14RegionInfoBaseINS_12RegionTraitsINS_8FunctionEEEEE
N4llvm10RegionInfoE
N4llvm14RegionInfoPassE
N4llvm2cl3optINS_10RegionBaseINS_12RegionTraitsINS_8FunctionEEEE10PrintStyleELb1ENS0_6parserIS7_EEEE
N4llvm2cl11opt_storageINS_10RegionBaseINS_12RegionTraitsINS_8FunctionEEEE10PrintStyleELb1ELb0EEE
N4llvm2cl6parserINS_10RegionBaseINS_12RegionTraitsINS_8FunctionEEEE10PrintStyleEEE
N4llvm2cl11OptionValueINS_10RegionBaseINS_12RegionTraitsINS_8FunctionEEEE10PrintStyleEEE
N4llvm2cl15OptionValueBaseINS_10RegionBaseINS_12RegionTraitsINS_8FunctionEEEE10PrintStyleELb0EEE
N4llvm2cl15OptionValueCopyINS_10RegionBaseINS_12RegionTraitsINS_8FunctionEEEE10PrintStyleEEE
N4llvm10RegionPassE
N4llvm13RGPassManagerE
N12_GLOBAL__N_115PrintRegionPassE
N12_GLOBAL__N_113RegionPrinterE
N4llvm21DOTGraphTraitsPrinterINS_14RegionInfoPassELb0EPNS_10RegionInfoEN12_GLOBAL__N_125RegionInfoPassGraphTraitsEEE
N12_GLOBAL__N_117RegionOnlyPrinterE
N4llvm21DOTGraphTraitsPrinterINS_14RegionInfoPassELb1EPNS_10RegionInfoEN12_GLOBAL__N_125RegionInfoPassGraphTraitsEEE
N12_GLOBAL__N_112RegionViewerE
N4llvm20DOTGraphTraitsViewerINS_14RegionInfoPassELb0EPNS_10RegionInfoEN12_GLOBAL__N_125RegionInfoPassGraphTraitsEEE
N12_GLOBAL__N_116RegionOnlyViewerE
N4llvm20DOTGraphTraitsViewerINS_14RegionInfoPassELb1EPNS_10RegionInfoEN12_GLOBAL__N_125RegionInfoPassGraphTraitsEEE
N4llvm11SCEVUnknownE
N4llvm4SCEVE
N4llvm14FoldingSetImpl4NodeE
N4llvm15ScalarEvolution14SCEVCallbackVHE
N4llvm15ScalarEvolutionE
N4llvm10FoldingSetINS_4SCEVEEE
N12_GLOBAL__N_128ScalarEvolutionAliasAnalysisE
N4llvm28TargetLibraryInfoWrapperPassE
N4llvm2cl3optINS_21TargetLibraryInfoImpl13VectorLibraryELb0ENS0_6parserIS3_EEEE
N4llvm2cl11opt_storageINS_21TargetLibraryInfoImpl13VectorLibraryELb0ELb0EEE
N4llvm2cl6parserINS_21TargetLibraryInfoImpl13VectorLibraryEEE
N4llvm2cl11OptionValueINS_21TargetLibraryInfoImpl13VectorLibraryEEE
N4llvm2cl15OptionValueBaseINS_21TargetLibraryInfoImpl13VectorLibraryELb0EEE
N4llvm2cl15OptionValueCopyINS_21TargetLibraryInfoImpl13VectorLibraryEEE
N4llvm30TargetTransformInfoWrapperPassE
N4llvm19TargetTransformInfo5ModelIN12_GLOBAL__N_19NoTTIImplEEE
NSt3__110__function6__funcIPFN4llvm19TargetTransformInfoERNS2_8FunctionEENS_9allocatorIS7_EES6_EE
PFN4llvm19TargetTransformInfoERNS_8FunctionEE
FN4llvm19TargetTransformInfoERNS_8FunctionEE
N12_GLOBAL__N_122TypeBasedAliasAnalysisE
N12_GLOBAL__N_115ScopedNoAliasAAE
N12_GLOBAL__N_116WriteBitcodePassE
N4llvm24AggressiveAntiDepBreakerE
N12_GLOBAL__N_112AtomicExpandE
N12_GLOBAL__N_116BranchFolderPassE
N12_GLOBAL__N_114CodeGenPrepareE
N4llvm18ValueMapCallbackVHIPNS_5ValueES2_NS_14ValueMapConfigIS2_NS_3sys10SmartMutexILb0EEEEEEE
N12_GLOBAL__N_124TypePromotionTransaction11ZExtBuilderE
N12_GLOBAL__N_124TypePromotionTransaction19TypePromotionActionE
N12_GLOBAL__N_124TypePromotionTransaction12UsesReplacerE
N12_GLOBAL__N_124TypePromotionTransaction18InstructionRemoverE
N12_GLOBAL__N_124TypePromotionTransaction13OperandsHiderE
N12_GLOBAL__N_124TypePromotionTransaction13OperandSetterE
N12_GLOBAL__N_124TypePromotionTransaction12TruncBuilderE
N12_GLOBAL__N_124TypePromotionTransaction11TypeMutatorE
N12_GLOBAL__N_124TypePromotionTransaction11SExtBuilderE
N12_GLOBAL__N_124TypePromotionTransaction21InstructionMoveBeforeE
N4llvm22CriticalAntiDepBreakerE
N4llvm20DefaultVLIWSchedulerE
N4llvm18VLIWPacketizerListE
N12_GLOBAL__N_126DeadMachineInstructionElimE
N4llvm25DummyRequireLiveVariablesE
N12_GLOBAL__N_114DwarfEHPrepareE
N12_GLOBAL__N_116EarlyIfConverterE
N4llvm11EdgeBundlesE
N12_GLOBAL__N_110ExeDepsFixE
N12_GLOBAL__N_117ExpandISelPseudosE
N12_GLOBAL__N_112ExpandPostRAE
N4llvm12GCModuleInfoE
N12_GLOBAL__N_17PrinterE
N12_GLOBAL__N_115LowerIntrinsicsE
N12_GLOBAL__N_121GCMachineCodeAnalysisE
N12_GLOBAL__N_111IfConverterE
N12_GLOBAL__N_118ImplicitNullChecksE
N4llvm7SpillerE
N12_GLOBAL__N_113InlineSpillerE
UUUUUUUU33333333
N4llvm17LLVMTargetMachineE
NSt3__110__function6__funcIZN4llvm17LLVMTargetMachine19getTargetIRAnalysisEvE3$_0NS_9allocatorIS4_EEFNS2_19TargetTransformInfoERNS2_8FunctionEEEE
N4llvm19TargetTransformInfo5ModelINS_12BasicTTIImplEEE
ZN4llvm17LLVMTargetMachine19getTargetIRAnalysisEvE3$_0
N4llvm20LatencyPriorityQueueE
N4llvm18LiveDebugVariablesE
N4llvm13LiveIntervalsE
N4llvm13LiveRangeEdit8DelegateE
N4llvm13LiveRangeEditE
N4llvm13LiveRegMatrixE
N4llvm10LiveStacksE
N4llvm13LiveVariablesE
N12_GLOBAL__N_118LocalStackSlotPassE
N4llvm25MachineBlockFrequencyInfoE
N4llvm22BlockFrequencyInfoImplINS_17MachineBasicBlockEEE
N12_GLOBAL__N_121MachineBlockPlacementE
N12_GLOBAL__N_126MachineBlockPlacementStatsE
N4llvm28MachineBranchProbabilityInfoE
N12_GLOBAL__N_110MachineCSEE
N12_GLOBAL__N_115MachineCombinerE
N12_GLOBAL__N_122MachineCopyPropagationE
N4llvm20MachineDominatorTreeE
N4llvm24MachineConstantPoolValueE
N4llvm26MachineFunctionInitializerE
N4llvm19MachineFunctionInfoE
N4llvm18ValueMapCallbackVHIPKNS_11GlobalValueENSt3__110unique_ptrIKNS_28GlobalValuePseudoSourceValueENS4_14default_deleteIS7_EEEENS_14ValueMapConfigIS3_NS_3sys10SmartMutexILb0EEEEEEE
N4llvm23MachineFunctionAnalysisE
N4llvm19MachineFunctionPassE
N12_GLOBAL__N_126MachineFunctionPrinterPassE
N12_GLOBAL__N_120UnpackMachineBundlesE
N12_GLOBAL__N_122FinalizeMachineBundlesE
N12_GLOBAL__N_111MachineLICME
N4llvm15MachineLoopInfoE
N4llvm21MachineModuleInfoImplE
N4llvm26MMIAddrLabelMapCallbackPtrE
N4llvm17MachineModuleInfoE
N4llvm22MachineModuleInfoMachOE
N4llvm20MachineModuleInfoELFE
N4llvm27MachinePassRegistryListenerE
N4llvm24MachinePostDominatorTreeE
N4llvm19MachineRegisterInfo8DelegateE
N4llvm20MachineSchedStrategyE
N4llvm19ScheduleDAGMutationE
N4llvm13ScheduleDAGMIE
N4llvm17ScheduleDAGMILiveE
N4llvm16GenericSchedulerE
N4llvm20GenericSchedulerBaseE
N4llvm20PostGenericSchedulerE
N4llvm19MachineSchedContextE
N12_GLOBAL__N_116MachineSchedulerE
N12_GLOBAL__N_120MachineSchedulerBaseE
N12_GLOBAL__N_120PostMachineSchedulerE
N4llvm2cl3optIPFPNS_17ScheduleDAGInstrsEPNS_19MachineSchedContextEELb0ENS_18RegisterPassParserINS_20MachineSchedRegistryEEEEE
N4llvm2cl11opt_storageIPFPNS_17ScheduleDAGInstrsEPNS_19MachineSchedContextEELb0ELb0EEE
N4llvm18RegisterPassParserINS_20MachineSchedRegistryEEE
N4llvm2cl6parserIPFPNS_17ScheduleDAGInstrsEPNS_19MachineSchedContextEEEE
N4llvm2cl11OptionValueIPFPNS_17ScheduleDAGInstrsEPNS_19MachineSchedContextEEEE
N4llvm2cl15OptionValueBaseIPFPNS_17ScheduleDAGInstrsEPNS_19MachineSchedContextEELb0EEE
N4llvm2cl15OptionValueCopyIPFPNS_17ScheduleDAGInstrsEPNS_19MachineSchedContextEEEE
N12_GLOBAL__N_113CopyConstrainE
N12_GLOBAL__N_119LoadClusterMutationE
N12_GLOBAL__N_111MacroFusionE
N12_GLOBAL__N_112ILPSchedulerE
N12_GLOBAL__N_114MachineSinkingE
N4llvm19MachineTraceMetricsE
N4llvm19MachineTraceMetrics8EnsembleE
N12_GLOBAL__N_121MinInstrCountEnsembleE
N12_GLOBAL__N_119MachineVerifierPassE
abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789_-/^., 
01234567
0123456789abcdefABCDEF
0123456789
N12_GLOBAL__N_115MIRPrintingPassE
N12_GLOBAL__N_112OptimizePHIsE
N12_GLOBAL__N_114PHIEliminationE
N4llvm16TargetPassConfigE
N4llvm2cl3optIPFPNS_12FunctionPassEvELb0ENS_18RegisterPassParserINS_16RegisterRegAllocEEEEE
N4llvm2cl11opt_storageIPFPNS_12FunctionPassEvELb0ELb0EEE
N4llvm18RegisterPassParserINS_16RegisterRegAllocEEE
N4llvm2cl6parserIPFPNS_12FunctionPassEvEEE
N4llvm2cl11OptionValueIPFPNS_12FunctionPassEvEEE
N4llvm2cl15OptionValueBaseIPFPNS_12FunctionPassEvELb0EEE
N4llvm2cl15OptionValueCopyIPFPNS_12FunctionPassEvEEE
N4llvm2cl3optINS0_13boolOrDefaultELb0ENS0_6parserIS2_EEEE
N4llvm2cl11opt_storageINS0_13boolOrDefaultELb0ELb0EEE
N12_GLOBAL__N_117PeepholeOptimizerE
N12_GLOBAL__N_121UncoalescableRewriterE
N12_GLOBAL__N_112CopyRewriterE
N12_GLOBAL__N_120InsertSubregRewriterE
N12_GLOBAL__N_121ExtractSubregRewriterE
N12_GLOBAL__N_119RegSequenceRewriterE
N4llvm14AntiDepBreakerE
N12_GLOBAL__N_115PostRASchedulerE
N12_GLOBAL__N_120SchedulePostRATDListE
N12_GLOBAL__N_119ProcessImplicitDefsE
N12_GLOBAL__N_13PEIE
N4llvm27FixedStackPseudoSourceValueE
N4llvm17PseudoSourceValueE
N4llvm26CallEntryPseudoSourceValueE
N4llvm28GlobalValuePseudoSourceValueE
N4llvm31ExternalSymbolPseudoSourceValueE
Register Allocation
N4llvm12RegAllocBaseE
N12_GLOBAL__N_16RAFastE
N4llvm2cl3optINS_11SplitEditor19ComplementSpillModeELb0ENS0_6parserIS3_EEEE
N4llvm2cl11opt_storageINS_11SplitEditor19ComplementSpillModeELb0ELb0EEE
N4llvm2cl6parserINS_11SplitEditor19ComplementSpillModeEEE
N4llvm2cl11OptionValueINS_11SplitEditor19ComplementSpillModeEEE
N4llvm2cl15OptionValueBaseINS_11SplitEditor19ComplementSpillModeELb0EEE
N4llvm2cl15OptionValueCopyINS_11SplitEditor19ComplementSpillModeEEE
N12_GLOBAL__N_18RAGreedyE
N12_GLOBAL__N_117RegisterCoalescerE
N4llvm23SchedulingPriorityQueueE
N4llvm24ScheduleHazardRecognizerE
N4llvm11ScheduleDAGE
N4llvm17ScheduleDAGInstrsE
N4llvm26ScoreboardHazardRecognizerE
N12_GLOBAL__N_110ShrinkWrapE
N12_GLOBAL__N_121ShadowStackGCLoweringE
N12_GLOBAL__N_113SjLjEHPrepareE
N4llvm11SlotIndexesE
N4llvm14SpillPlacementE
N12_GLOBAL__N_113StackColoringE
N4llvm14StackProtectorE
N4llvm18ValueMapCallbackVHIPKNS_10AllocaInstENS_14StackProtector13SSPLayoutKindENS_14ValueMapConfigIS3_NS_3sys10SmartMutexILb0EEEEEEE
N12_GLOBAL__N_117StackSlotColoringE
N12_GLOBAL__N_116StackMapLivenessE
N12_GLOBAL__N_117TailDuplicatePassE
N4llvm19TargetFrameLoweringE
N4llvm15TargetInstrInfoE
N4llvm11MCInstrInfoE
N4llvm18TargetLoweringBaseE
N4llvm27TargetLoweringObjectFileELFE
N4llvm29TargetLoweringObjectFileMachOE
N4llvm28TargetLoweringObjectFileCOFFE
N4llvm18TargetRegisterInfoE
N4llvm14MCRegisterInfoE
N12_GLOBAL__N_125TwoAddressInstructionPassE
N12_GLOBAL__N_120UnreachableBlockElimE
N12_GLOBAL__N_127UnreachableMachineBlockElimE
N4llvm10VirtRegMapE
N12_GLOBAL__N_115VirtRegRewriterE
N12_GLOBAL__N_112WinEHPrepareE
N12_GLOBAL__N_118WinEHCatchDirectorE
N12_GLOBAL__N_124WinEHCloningDirectorBaseE
N4llvm15CloningDirectorE
N12_GLOBAL__N_130WinEHFrameVariableMaterializerE
N12_GLOBAL__N_120WinEHCleanupDirectorE
N4llvm21FunctionGroupAnalysisE
N4llvm22AGX2CommonRegisterInfoE
N4llvm21GPUCommonRegisterInfoE
N4llvm23AGX01CommonRegisterInfoE
N4llvm24AssemblyAnnotationWriterE
N4llvm13AttributeImplE
N4llvm17EnumAttributeImplE
N4llvm16IntAttributeImplE
N4llvm19StringAttributeImplE
N4llvm10BasicBlockE
N4llvm10ilist_nodeINS_10BasicBlockEEE
N4llvm15ilist_half_nodeINS_10BasicBlockEEE
N4llvm8ConstantE
N4llvm17ConstantDataArrayE
N4llvm22ConstantDataSequentialE
N4llvm18ConstantDataVectorE
N4llvm11ConstantIntE
N4llvm10ConstantFPE
N4llvm13ConstantArrayE
N4llvm14ConstantStructE
N4llvm14ConstantVectorE
N4llvm12BlockAddressE
N4llvm21ConstantAggregateZeroE
N4llvm19ConstantPointerNullE
N4llvm10UndefValueE
N4llvm8FCmpInstE
N4llvm9VAArgInstE
N4llvm16ExtractValueInstE
N4llvm15InsertValueInstE
N4llvm23DiagnosticInfoInlineAsmE
N4llvm14DiagnosticInfoE
N4llvm23DiagnosticInfoStackSizeE
N4llvm34DiagnosticInfoDebugMetadataVersionE
N4llvm27DiagnosticInfoSampleProfileE
N4llvm30DiagnosticInfoOptimizationBaseE
N4llvm32DiagnosticInfoOptimizationRemarkE
N4llvm38DiagnosticInfoOptimizationRemarkMissedE
N4llvm40DiagnosticInfoOptimizationRemarkAnalysisE
N4llvm23DiagnosticInfoMIRParserE
N4llvm33DiagnosticInfoOptimizationFailureE
N4llvm49DiagnosticInfoOptimizationRemarkAnalysisFPCommuteE
N4llvm48DiagnosticInfoOptimizationRemarkAnalysisAliasingE
N4llvm2cl3optIN12_GLOBAL__N_114PassRemarksOptELb1ENS0_6parserINSt3__112basic_stringIcNS5_11char_traitsIcEENS5_9allocatorIcEEEEEEEE
N4llvm2cl11opt_storageIN12_GLOBAL__N_114PassRemarksOptELb1ELb1EEE
N4llvm2cl11OptionValueIN12_GLOBAL__N_114PassRemarksOptEEE
N4llvm2cl15OptionValueBaseIN12_GLOBAL__N_114PassRemarksOptELb1EEE
NSt3__120__shared_ptr_emplaceIN4llvm5RegexENS_9allocatorIS2_EEEE
N4llvm27DiagnosticPrinterRawOStreamE
N4llvm17DiagnosticPrinterE
N4llvm24DominatorTreeWrapperPassE
////////.
PD33PD33PD33PDDDPDDDPDDDPD33PD33PD33P4
PD33PD33PD33PDDDPDDDPDDDPD33PD33PD33PD4
PD33PDDDPD33P4
PD33PDDDPD33PD4
{{{{
----KKK
B|||C
 K.D0L.D [.D [.D3
|L|CJ
[BJzJ
L|LC
BYzY
[{[BJzJ
L|LCYzY
[{[B
BzYz
{[{BJ
[BJzJ
L|LCYzY
[{[BJzJ
L|LCYzY
[{[B
|L|C
BzYz
{[{B
Bzzz
|||C
Bzzz
|||C
|<|C<|
B|||C
B|||C
 K.D0L.D [.D [.D
zzzz{{{{
zzzz
zzzz{{{{
zzzz{{{{
zzzz
zzzz{{{{
zzzz{{{{
zzzz
zzzz{{{{
zzzz
JJJJzzz
zzzz
,,,,
B,$r
YYY"
YYYYZZZZ,,,
JJJJYJJYYJJYJJJJYJJYYJJYJ;;J;;;;J;;J;;;;J;;JJ;;J,,,,,,,
__builtin_adjust_trampoline
__syncthreads
__builtin_debugtrap
__builtin_unwind_init
__builtin_flt_rounds
__builtin_init_trampoline
__nvvm_abs_i
__nvvm_abs_ll
__nvvm_add_rm_d
__nvvm_add_rm_f
__nvvm_add_rm_ftz_f
__nvvm_add_rn_d
__nvvm_add_rn_f
__nvvm_add_rn_ftz_f
__nvvm_add_rp_d
__nvvm_add_rp_f
__nvvm_add_rp_ftz_f
__nvvm_add_rz_d
__nvvm_add_rz_f
__nvvm_add_rz_ftz_f
__nvvm_bar0
__nvvm_bar0_and
__nvvm_bar0_or
__nvvm_bar0_popc
__nvvm_bitcast_d2ll
__nvvm_bitcast_f2i
__nvvm_bitcast_i2f
__nvvm_bitcast_ll2d
__nvvm_brev32
__nvvm_brev64
__nvvm_ceil_d
__nvvm_ceil_f
__nvvm_ceil_ftz_f
__nvvm_clz_i
__nvvm_clz_ll
__nvvm_cos_approx_f
__nvvm_cos_approx_ftz_f
__nvvm_d2f_rm
__nvvm_d2f_rm_ftz
__nvvm_d2f_rn
__nvvm_d2f_rn_ftz
__nvvm_d2f_rp
__nvvm_d2f_rp_ftz
__nvvm_d2f_rz
__nvvm_d2f_rz_ftz
__nvvm_d2i_hi
__nvvm_d2i_lo
__nvvm_d2i_rm
__nvvm_d2i_rn
__nvvm_d2i_rp
__nvvm_d2i_rz
__nvvm_d2ll_rm
__nvvm_d2ll_rn
__nvvm_d2ll_rp
__nvvm_d2ll_rz
__nvvm_d2ui_rm
__nvvm_d2ui_rn
__nvvm_d2ui_rp
__nvvm_d2ui_rz
__nvvm_d2ull_rm
__nvvm_d2ull_rn
__nvvm_d2ull_rp
__nvvm_d2ull_rz
__nvvm_div_approx_f
__nvvm_div_approx_ftz_f
__nvvm_div_rm_d
__nvvm_div_rm_f
__nvvm_div_rm_ftz_f
__nvvm_div_rn_d
__nvvm_div_rn_f
__nvvm_div_rn_ftz_f
__nvvm_div_rp_d
__nvvm_div_rp_f
__nvvm_div_rp_ftz_f
__nvvm_div_rz_d
__nvvm_div_rz_f
__nvvm_div_rz_ftz_f
__nvvm_ex2_approx_d
__nvvm_ex2_approx_f
__nvvm_ex2_approx_ftz_f
__nvvm_f2h_rn
__nvvm_f2h_rn_ftz
__nvvm_f2i_rm
__nvvm_f2i_rm_ftz
__nvvm_f2i_rn
__nvvm_f2i_rn_ftz
__nvvm_f2i_rp
__nvvm_f2i_rp_ftz
__nvvm_f2i_rz
__nvvm_f2i_rz_ftz
__nvvm_f2ll_rm
__nvvm_f2ll_rm_ftz
__nvvm_f2ll_rn
__nvvm_f2ll_rn_ftz
__nvvm_f2ll_rp
__nvvm_f2ll_rp_ftz
__nvvm_f2ll_rz
__nvvm_f2ll_rz_ftz
__nvvm_f2ui_rm
__nvvm_f2ui_rm_ftz
__nvvm_f2ui_rn
__nvvm_f2ui_rn_ftz
__nvvm_f2ui_rp
__nvvm_f2ui_rp_ftz
__nvvm_f2ui_rz
__nvvm_f2ui_rz_ftz
__nvvm_f2ull_rm
__nvvm_f2ull_rm_ftz
__nvvm_f2ull_rn
__nvvm_f2ull_rn_ftz
__nvvm_f2ull_rp
__nvvm_f2ull_rp_ftz
__nvvm_f2ull_rz
__nvvm_f2ull_rz_ftz
__nvvm_fabs_d
__nvvm_fabs_f
__nvvm_fabs_ftz_f
__nvvm_floor_d
__nvvm_floor_f
__nvvm_floor_ftz_f
__nvvm_fma_rm_d
__nvvm_fma_rm_f
__nvvm_fma_rm_ftz_f
__nvvm_fma_rn_d
__nvvm_fma_rn_f
__nvvm_fma_rn_ftz_f
__nvvm_fma_rp_d
__nvvm_fma_rp_f
__nvvm_fma_rp_ftz_f
__nvvm_fma_rz_d
__nvvm_fma_rz_f
__nvvm_fma_rz_ftz_f
__nvvm_fmax_d
__nvvm_fmax_f
__nvvm_fmax_ftz_f
__nvvm_fmin_d
__nvvm_fmin_f
__nvvm_fmin_ftz_f
__nvvm_h2f
__nvvm_i2d_rm
__nvvm_i2d_rn
__nvvm_i2d_rp
__nvvm_i2d_rz
__nvvm_i2f_rm
__nvvm_i2f_rn
__nvvm_i2f_rp
__nvvm_i2f_rz
__nvvm_isspacep_const
__nvvm_isspacep_global
__nvvm_isspacep_local
__nvvm_isspacep_shared
__nvvm_istypep_sampler
__nvvm_istypep_surface
__nvvm_istypep_texture
__nvvm_lg2_approx_d
__nvvm_lg2_approx_f
__nvvm_lg2_approx_ftz_f
__nvvm_ll2d_rm
__nvvm_ll2d_rn
__nvvm_ll2d_rp
__nvvm_ll2d_rz
__nvvm_ll2f_rm
__nvvm_ll2f_rn
__nvvm_ll2f_rp
__nvvm_ll2f_rz
__nvvm_lohi_i2d
__nvvm_max_i
__nvvm_max_ll
__nvvm_max_ui
__nvvm_max_ull
__nvvm_membar_cta
__nvvm_membar_gl
__nvvm_membar_sys
__nvvm_min_i
__nvvm_min_ll
__nvvm_min_ui
__nvvm_min_ull
__nvvm_mul_rm_d
__nvvm_mul_rm_f
__nvvm_mul_rm_ftz_f
__nvvm_mul_rn_d
__nvvm_mul_rn_f
__nvvm_mul_rn_ftz_f
__nvvm_mul_rp_d
__nvvm_mul_rp_f
__nvvm_mul_rp_ftz_f
__nvvm_mul_rz_d
__nvvm_mul_rz_f
__nvvm_mul_rz_ftz_f
__nvvm_mul24_i
__nvvm_mul24_ui
__nvvm_mulhi_i
__nvvm_mulhi_ll
__nvvm_mulhi_ui
__nvvm_mulhi_ull
__nvvm_popc_i
__nvvm_popc_ll
__nvvm_prmt
__nvvm_rcp_approx_ftz_d
__nvvm_rcp_rm_d
__nvvm_rcp_rm_f
__nvvm_rcp_rm_ftz_f
__nvvm_rcp_rn_d
__nvvm_rcp_rn_f
__nvvm_rcp_rn_ftz_f
__nvvm_rcp_rp_d
__nvvm_rcp_rp_f
__nvvm_rcp_rp_ftz_f
__nvvm_rcp_rz_d
__nvvm_rcp_rz_f
__nvvm_rcp_rz_ftz_f
__nvvm_read_ptx_sreg_ctaid_x
__nvvm_read_ptx_sreg_ctaid_y
__nvvm_read_ptx_sreg_ctaid_z
__nvvm_read_ptx_sreg_envreg0
__nvvm_read_ptx_sreg_envreg1
__nvvm_read_ptx_sreg_envreg10
__nvvm_read_ptx_sreg_envreg11
__nvvm_read_ptx_sreg_envreg12
__nvvm_read_ptx_sreg_envreg13
__nvvm_read_ptx_sreg_envreg14
__nvvm_read_ptx_sreg_envreg15
__nvvm_read_ptx_sreg_envreg16
__nvvm_read_ptx_sreg_envreg17
__nvvm_read_ptx_sreg_envreg18
__nvvm_read_ptx_sreg_envreg19
__nvvm_read_ptx_sreg_envreg2
__nvvm_read_ptx_sreg_envreg20
__nvvm_read_ptx_sreg_envreg21
__nvvm_read_ptx_sreg_envreg22
__nvvm_read_ptx_sreg_envreg23
__nvvm_read_ptx_sreg_envreg24
__nvvm_read_ptx_sreg_envreg25
__nvvm_read_ptx_sreg_envreg26
__nvvm_read_ptx_sreg_envreg27
__nvvm_read_ptx_sreg_envreg28
__nvvm_read_ptx_sreg_envreg29
__nvvm_read_ptx_sreg_envreg3
__nvvm_read_ptx_sreg_envreg30
__nvvm_read_ptx_sreg_envreg31
__nvvm_read_ptx_sreg_envreg4
__nvvm_read_ptx_sreg_envreg5
__nvvm_read_ptx_sreg_envreg6
__nvvm_read_ptx_sreg_envreg7
__nvvm_read_ptx_sreg_envreg8
__nvvm_read_ptx_sreg_envreg9
__nvvm_read_ptx_sreg_nctaid_x
__nvvm_read_ptx_sreg_nctaid_y
__nvvm_read_ptx_sreg_nctaid_z
__nvvm_read_ptx_sreg_ntid_x
__nvvm_read_ptx_sreg_ntid_y
__nvvm_read_ptx_sreg_ntid_z
__nvvm_read_ptx_sreg_tid_x
__nvvm_read_ptx_sreg_tid_y
__nvvm_read_ptx_sreg_tid_z
__nvvm_read_ptx_sreg_warpsize
__nvvm_rotate_b32
__nvvm_rotate_b64
__nvvm_rotate_right_b64
__nvvm_round_d
__nvvm_round_f
__nvvm_round_ftz_f
__nvvm_rsqrt_approx_d
__nvvm_rsqrt_approx_f
__nvvm_rsqrt_approx_ftz_f
__nvvm_sad_i
__nvvm_sad_ui
__nvvm_saturate_d
__nvvm_saturate_f
__nvvm_saturate_ftz_f
__nvvm_sin_approx_f
__nvvm_sin_approx_ftz_f
__nvvm_sqrt_approx_f
__nvvm_sqrt_approx_ftz_f
__nvvm_sqrt_f
__nvvm_sqrt_rm_d
__nvvm_sqrt_rm_f
__nvvm_sqrt_rm_ftz_f
__nvvm_sqrt_rn_d
__nvvm_sqrt_rn_f
__nvvm_sqrt_rn_ftz_f
__nvvm_sqrt_rp_d
__nvvm_sqrt_rp_f
__nvvm_sqrt_rp_ftz_f
__nvvm_sqrt_rz_d
__nvvm_sqrt_rz_f
__nvvm_sqrt_rz_ftz_f
__nvvm_suq_array_size
__nvvm_suq_channel_data_type
__nvvm_suq_channel_order
__nvvm_suq_depth
__nvvm_suq_height
__nvvm_suq_width
__nvvm_sust_b_1d_array_i16_clamp
__nvvm_sust_b_1d_array_i16_trap
__nvvm_sust_b_1d_array_i16_zero
__nvvm_sust_b_1d_array_i32_clamp
__nvvm_sust_b_1d_array_i32_trap
__nvvm_sust_b_1d_array_i32_zero
__nvvm_sust_b_1d_array_i64_clamp
__nvvm_sust_b_1d_array_i64_trap
__nvvm_sust_b_1d_array_i64_zero
__nvvm_sust_b_1d_array_i8_clamp
__nvvm_sust_b_1d_array_i8_trap
__nvvm_sust_b_1d_array_i8_zero
__nvvm_sust_b_1d_array_v2i16_clamp
__nvvm_sust_b_1d_array_v2i16_trap
__nvvm_sust_b_1d_array_v2i16_zero
__nvvm_sust_b_1d_array_v2i32_clamp
__nvvm_sust_b_1d_array_v2i32_trap
__nvvm_sust_b_1d_array_v2i32_zero
__nvvm_sust_b_1d_array_v2i64_clamp
__nvvm_sust_b_1d_array_v2i64_trap
__nvvm_sust_b_1d_array_v2i64_zero
__nvvm_sust_b_1d_array_v2i8_clamp
__nvvm_sust_b_1d_array_v2i8_trap
__nvvm_sust_b_1d_array_v2i8_zero
__nvvm_sust_b_1d_array_v4i16_clamp
__nvvm_sust_b_1d_array_v4i16_trap
__nvvm_sust_b_1d_array_v4i16_zero
__nvvm_sust_b_1d_array_v4i32_clamp
__nvvm_sust_b_1d_array_v4i32_trap
__nvvm_sust_b_1d_array_v4i32_zero
__nvvm_sust_b_1d_array_v4i8_clamp
__nvvm_sust_b_1d_array_v4i8_trap
__nvvm_sust_b_1d_array_v4i8_zero
__nvvm_sust_b_1d_i16_clamp
__nvvm_sust_b_1d_i16_trap
__nvvm_sust_b_1d_i16_zero
__nvvm_sust_b_1d_i32_clamp
__nvvm_sust_b_1d_i32_trap
__nvvm_sust_b_1d_i32_zero
__nvvm_sust_b_1d_i64_clamp
__nvvm_sust_b_1d_i64_trap
__nvvm_sust_b_1d_i64_zero
__nvvm_sust_b_1d_i8_clamp
__nvvm_sust_b_1d_i8_trap
__nvvm_sust_b_1d_i8_zero
__nvvm_sust_b_1d_v2i16_clamp
__nvvm_sust_b_1d_v2i16_trap
__nvvm_sust_b_1d_v2i16_zero
__nvvm_sust_b_1d_v2i32_clamp
__nvvm_sust_b_1d_v2i32_trap
__nvvm_sust_b_1d_v2i32_zero
__nvvm_sust_b_1d_v2i64_clamp
__nvvm_sust_b_1d_v2i64_trap
__nvvm_sust_b_1d_v2i64_zero
__nvvm_sust_b_1d_v2i8_clamp
__nvvm_sust_b_1d_v2i8_trap
__nvvm_sust_b_1d_v2i8_zero
__nvvm_sust_b_1d_v4i16_clamp
__nvvm_sust_b_1d_v4i16_trap
__nvvm_sust_b_1d_v4i16_zero
__nvvm_sust_b_1d_v4i32_clamp
__nvvm_sust_b_1d_v4i32_trap
__nvvm_sust_b_1d_v4i32_zero
__nvvm_sust_b_1d_v4i8_clamp
__nvvm_sust_b_1d_v4i8_trap
__nvvm_sust_b_1d_v4i8_zero
__nvvm_sust_b_2d_array_i16_clamp
__nvvm_sust_b_2d_array_i16_trap
__nvvm_sust_b_2d_array_i16_zero
__nvvm_sust_b_2d_array_i32_clamp
__nvvm_sust_b_2d_array_i32_trap
__nvvm_sust_b_2d_array_i32_zero
__nvvm_sust_b_2d_array_i64_clamp
__nvvm_sust_b_2d_array_i64_trap
__nvvm_sust_b_2d_array_i64_zero
__nvvm_sust_b_2d_array_i8_clamp
__nvvm_sust_b_2d_array_i8_trap
__nvvm_sust_b_2d_array_i8_zero
__nvvm_sust_b_2d_array_v2i16_clamp
__nvvm_sust_b_2d_array_v2i16_trap
__nvvm_sust_b_2d_array_v2i16_zero
__nvvm_sust_b_2d_array_v2i32_clamp
__nvvm_sust_b_2d_array_v2i32_trap
__nvvm_sust_b_2d_array_v2i32_zero
__nvvm_sust_b_2d_array_v2i64_clamp
__nvvm_sust_b_2d_array_v2i64_trap
__nvvm_sust_b_2d_array_v2i64_zero
__nvvm_sust_b_2d_array_v2i8_clamp
__nvvm_sust_b_2d_array_v2i8_trap
__nvvm_sust_b_2d_array_v2i8_zero
__nvvm_sust_b_2d_array_v4i16_clamp
__nvvm_sust_b_2d_array_v4i16_trap
__nvvm_sust_b_2d_array_v4i16_zero
__nvvm_sust_b_2d_array_v4i32_clamp
__nvvm_sust_b_2d_array_v4i32_trap
__nvvm_sust_b_2d_array_v4i32_zero
__nvvm_sust_b_2d_array_v4i8_clamp
__nvvm_sust_b_2d_array_v4i8_trap
__nvvm_sust_b_2d_array_v4i8_zero
__nvvm_sust_b_2d_i16_clamp
__nvvm_sust_b_2d_i16_trap
__nvvm_sust_b_2d_i16_zero
__nvvm_sust_b_2d_i32_clamp
__nvvm_sust_b_2d_i32_trap
__nvvm_sust_b_2d_i32_zero
__nvvm_sust_b_2d_i64_clamp
__nvvm_sust_b_2d_i64_trap
__nvvm_sust_b_2d_i64_zero
__nvvm_sust_b_2d_i8_clamp
__nvvm_sust_b_2d_i8_trap
__nvvm_sust_b_2d_i8_zero
__nvvm_sust_b_2d_v2i16_clamp
__nvvm_sust_b_2d_v2i16_trap
__nvvm_sust_b_2d_v2i16_zero
__nvvm_sust_b_2d_v2i32_clamp
__nvvm_sust_b_2d_v2i32_trap
__nvvm_sust_b_2d_v2i32_zero
__nvvm_sust_b_2d_v2i64_clamp
__nvvm_sust_b_2d_v2i64_trap
__nvvm_sust_b_2d_v2i64_zero
__nvvm_sust_b_2d_v2i8_clamp
__nvvm_sust_b_2d_v2i8_trap
__nvvm_sust_b_2d_v2i8_zero
__nvvm_sust_b_2d_v4i16_clamp
__nvvm_sust_b_2d_v4i16_trap
__nvvm_sust_b_2d_v4i16_zero
__nvvm_sust_b_2d_v4i32_clamp
__nvvm_sust_b_2d_v4i32_trap
__nvvm_sust_b_2d_v4i32_zero
__nvvm_sust_b_2d_v4i8_clamp
__nvvm_sust_b_2d_v4i8_trap
__nvvm_sust_b_2d_v4i8_zero
__nvvm_sust_b_3d_i16_clamp
__nvvm_sust_b_3d_i16_trap
__nvvm_sust_b_3d_i16_zero
__nvvm_sust_b_3d_i32_clamp
__nvvm_sust_b_3d_i32_trap
__nvvm_sust_b_3d_i32_zero
__nvvm_sust_b_3d_i64_clamp
__nvvm_sust_b_3d_i64_trap
__nvvm_sust_b_3d_i64_zero
__nvvm_sust_b_3d_i8_clamp
__nvvm_sust_b_3d_i8_trap
__nvvm_sust_b_3d_i8_zero
__nvvm_sust_b_3d_v2i16_clamp
__nvvm_sust_b_3d_v2i16_trap
__nvvm_sust_b_3d_v2i16_zero
__nvvm_sust_b_3d_v2i32_clamp
__nvvm_sust_b_3d_v2i32_trap
__nvvm_sust_b_3d_v2i32_zero
__nvvm_sust_b_3d_v2i64_clamp
__nvvm_sust_b_3d_v2i64_trap
__nvvm_sust_b_3d_v2i64_zero
__nvvm_sust_b_3d_v2i8_clamp
__nvvm_sust_b_3d_v2i8_trap
__nvvm_sust_b_3d_v2i8_zero
__nvvm_sust_b_3d_v4i16_clamp
__nvvm_sust_b_3d_v4i16_trap
__nvvm_sust_b_3d_v4i16_zero
__nvvm_sust_b_3d_v4i32_clamp
__nvvm_sust_b_3d_v4i32_trap
__nvvm_sust_b_3d_v4i32_zero
__nvvm_sust_b_3d_v4i8_clamp
__nvvm_sust_b_3d_v4i8_trap
__nvvm_sust_b_3d_v4i8_zero
__nvvm_sust_p_1d_array_i16_trap
__nvvm_sust_p_1d_array_i32_trap
__nvvm_sust_p_1d_array_i8_trap
__nvvm_sust_p_1d_array_v2i16_trap
__nvvm_sust_p_1d_array_v2i32_trap
__nvvm_sust_p_1d_array_v2i8_trap
__nvvm_sust_p_1d_array_v4i16_trap
__nvvm_sust_p_1d_array_v4i32_trap
__nvvm_sust_p_1d_array_v4i8_trap
__nvvm_sust_p_1d_i16_trap
__nvvm_sust_p_1d_i32_trap
__nvvm_sust_p_1d_i8_trap
__nvvm_sust_p_1d_v2i16_trap
__nvvm_sust_p_1d_v2i32_trap
__nvvm_sust_p_1d_v2i8_trap
__nvvm_sust_p_1d_v4i16_trap
__nvvm_sust_p_1d_v4i32_trap
__nvvm_sust_p_1d_v4i8_trap
__nvvm_sust_p_2d_array_i16_trap
__nvvm_sust_p_2d_array_i32_trap
__nvvm_sust_p_2d_array_i8_trap
__nvvm_sust_p_2d_array_v2i16_trap
__nvvm_sust_p_2d_array_v2i32_trap
__nvvm_sust_p_2d_array_v2i8_trap
__nvvm_sust_p_2d_array_v4i16_trap
__nvvm_sust_p_2d_array_v4i32_trap
__nvvm_sust_p_2d_array_v4i8_trap
__nvvm_sust_p_2d_i16_trap
__nvvm_sust_p_2d_i32_trap
__nvvm_sust_p_2d_i8_trap
__nvvm_sust_p_2d_v2i16_trap
__nvvm_sust_p_2d_v2i32_trap
__nvvm_sust_p_2d_v2i8_trap
__nvvm_sust_p_2d_v4i16_trap
__nvvm_sust_p_2d_v4i32_trap
__nvvm_sust_p_2d_v4i8_trap
__nvvm_sust_p_3d_i16_trap
__nvvm_sust_p_3d_i32_trap
__nvvm_sust_p_3d_i8_trap
__nvvm_sust_p_3d_v2i16_trap
__nvvm_sust_p_3d_v2i32_trap
__nvvm_sust_p_3d_v2i8_trap
__nvvm_sust_p_3d_v4i16_trap
__nvvm_sust_p_3d_v4i32_trap
__nvvm_sust_p_3d_v4i8_trap
__nvvm_swap_lo_hi_b64
__nvvm_trunc_d
__nvvm_trunc_f
__nvvm_trunc_ftz_f
__nvvm_txq_array_size
__nvvm_txq_channel_data_type
__nvvm_txq_channel_order
__nvvm_txq_depth
__nvvm_txq_height
__nvvm_txq_num_mipmap_levels
__nvvm_txq_num_samples
__nvvm_txq_width
__nvvm_ui2d_rm
__nvvm_ui2d_rn
__nvvm_ui2d_rp
__nvvm_ui2d_rz
__nvvm_ui2f_rm
__nvvm_ui2f_rn
__nvvm_ui2f_rp
__nvvm_ui2f_rz
__nvvm_ull2d_rm
__nvvm_ull2d_rn
__nvvm_ull2d_rp
__nvvm_ull2d_rz
__nvvm_ull2f_rm
__nvvm_ull2f_rn
__nvvm_ull2f_rp
__nvvm_ull2f_rz
__builtin_object_size
__builtin_ptx_bar_sync
__builtin_ptx_read_clock
__builtin_ptx_read_clock64
__builtin_ptx_read_ctaid_w
__builtin_ptx_read_ctaid_x
__builtin_ptx_read_ctaid_y
__builtin_ptx_read_ctaid_z
__builtin_ptx_read_gridid
__builtin_ptx_read_laneid
__builtin_ptx_read_lanemask_eq
__builtin_ptx_read_lanemask_ge
__builtin_ptx_read_lanemask_gt
__builtin_ptx_read_lanemask_le
__builtin_ptx_read_lanemask_lt
__builtin_ptx_read_nctaid_w
__builtin_ptx_read_nctaid_x
__builtin_ptx_read_nctaid_y
__builtin_ptx_read_nctaid_z
__builtin_ptx_read_nsmid
__builtin_ptx_read_ntid_w
__builtin_ptx_read_ntid_x
__builtin_ptx_read_ntid_y
__builtin_ptx_read_ntid_z
__builtin_ptx_read_nwarpid
__builtin_ptx_read_pm0
__builtin_ptx_read_pm1
__builtin_ptx_read_pm2
__builtin_ptx_read_pm3
__builtin_ptx_read_smid
__builtin_ptx_read_tid_w
__builtin_ptx_read_tid_x
__builtin_ptx_read_tid_y
__builtin_ptx_read_tid_z
__builtin_ptx_read_warpid
__builtin_stack_restore
__builtin_stack_save
__builtin_trap
__builtin_ia32_pavgusb
__builtin_ia32_pf2id
__builtin_ia32_pfacc
__builtin_ia32_pfadd
__builtin_ia32_pfcmpeq
__builtin_ia32_pfcmpge
__builtin_ia32_pfcmpgt
__builtin_ia32_pfmax
__builtin_ia32_pfmin
__builtin_ia32_pfmul
__builtin_ia32_pfrcp
__builtin_ia32_pfrcpit1
__builtin_ia32_pfrcpit2
__builtin_ia32_pfrsqit1
__builtin_ia32_pfrsqrt
__builtin_ia32_pfsub
__builtin_ia32_pfsubr
__builtin_ia32_pi2fd
__builtin_ia32_pmulhrw
__builtin_ia32_pf2iw
__builtin_ia32_pfnacc
__builtin_ia32_pfpnacc
__builtin_ia32_pi2fw
__builtin_ia32_addcarry_u32
__builtin_ia32_addcarry_u64
__builtin_ia32_addcarryx_u32
__builtin_ia32_addcarryx_u64
__builtin_ia32_aesdec128
__builtin_ia32_aesdeclast128
__builtin_ia32_aesenc128
__builtin_ia32_aesenclast128
__builtin_ia32_aesimc128
__builtin_ia32_aeskeygenassist128
__builtin_ia32_addsubpd256
__builtin_ia32_addsubps256
__builtin_ia32_blendvpd256
__builtin_ia32_blendvps256
__builtin_ia32_cmppd256
__builtin_ia32_cmpps256
__builtin_ia32_cvtpd2ps256
__builtin_ia32_cvtpd2dq256
__builtin_ia32_cvtps2pd256
__builtin_ia32_cvtps2dq256
__builtin_ia32_cvtdq2pd256
__builtin_ia32_cvtdq2ps256
__builtin_ia32_cvttpd2dq256
__builtin_ia32_cvttps2dq256
__builtin_ia32_dpps256
__builtin_ia32_haddpd256
__builtin_ia32_haddps256
__builtin_ia32_hsubpd256
__builtin_ia32_hsubps256
__builtin_ia32_lddqu256
__builtin_ia32_maskloadpd
__builtin_ia32_maskloadpd256
__builtin_ia32_maskloadps
__builtin_ia32_maskloadps256
__builtin_ia32_maskstorepd
__builtin_ia32_maskstorepd256
__builtin_ia32_maskstoreps
__builtin_ia32_maskstoreps256
__builtin_ia32_maxpd256
__builtin_ia32_maxps256
__builtin_ia32_minpd256
__builtin_ia32_minps256
__builtin_ia32_movmskpd256
__builtin_ia32_movmskps256
__builtin_ia32_ptestc256
__builtin_ia32_ptestnzc256
__builtin_ia32_ptestz256
__builtin_ia32_rcpps256
__builtin_ia32_roundpd256
__builtin_ia32_roundps256
__builtin_ia32_rsqrtps256
__builtin_ia32_sqrtpd256
__builtin_ia32_sqrtps256
__builtin_ia32_storedqu256
__builtin_ia32_storeupd256
__builtin_ia32_storeups256
__builtin_ia32_vbroadcastf128_pd256
__builtin_ia32_vbroadcastf128_ps256
__builtin_ia32_vperm2f128_pd256
__builtin_ia32_vperm2f128_ps256
__builtin_ia32_vperm2f128_si256
__builtin_ia32_vpermilvarpd
__builtin_ia32_vpermilvarpd256
__builtin_ia32_vpermilvarps
__builtin_ia32_vpermilvarps256
__builtin_ia32_vtestcpd
__builtin_ia32_vtestcpd256
__builtin_ia32_vtestcps
__builtin_ia32_vtestcps256
__builtin_ia32_vtestnzcpd
__builtin_ia32_vtestnzcpd256
__builtin_ia32_vtestnzcps
__builtin_ia32_vtestnzcps256
__builtin_ia32_vtestzpd
__builtin_ia32_vtestzpd256
__builtin_ia32_vtestzps
__builtin_ia32_vtestzps256
__builtin_ia32_vzeroall
__builtin_ia32_vzeroupper
__builtin_ia32_gatherd_d
__builtin_ia32_gatherd_d256
__builtin_ia32_gatherd_pd
__builtin_ia32_gatherd_pd256
__builtin_ia32_gatherd_ps
__builtin_ia32_gatherd_ps256
__builtin_ia32_gatherd_q
__builtin_ia32_gatherd_q256
__builtin_ia32_gatherq_d
__builtin_ia32_gatherq_d256
__builtin_ia32_gatherq_pd
__builtin_ia32_gatherq_pd256
__builtin_ia32_gatherq_ps
__builtin_ia32_gatherq_ps256
__builtin_ia32_gatherq_q
__builtin_ia32_gatherq_q256
__builtin_ia32_maskloadd
__builtin_ia32_maskloadd256
__builtin_ia32_maskloadq
__builtin_ia32_maskloadq256
__builtin_ia32_maskstored
__builtin_ia32_maskstored256
__builtin_ia32_maskstoreq
__builtin_ia32_maskstoreq256
__builtin_ia32_movntdqa256
__builtin_ia32_mpsadbw256
__builtin_ia32_pabsb256
__builtin_ia32_pabsd256
__builtin_ia32_pabsw256
__builtin_ia32_packssdw256
__builtin_ia32_packsswb256
__builtin_ia32_packusdw256
__builtin_ia32_packuswb256
__builtin_ia32_paddsb256
__builtin_ia32_paddsw256
__builtin_ia32_paddusb256
__builtin_ia32_paddusw256
__builtin_ia32_pavgb256
__builtin_ia32_pavgw256
__builtin_ia32_pblendvb256
__builtin_ia32_permvarsi256
__builtin_ia32_permvarsf256
__builtin_ia32_phaddd256
__builtin_ia32_phaddsw256
__builtin_ia32_phaddw256
__builtin_ia32_phsubd256
__builtin_ia32_phsubsw256
__builtin_ia32_phsubw256
__builtin_ia32_pmaddubsw256
__builtin_ia32_pmaddwd256
__builtin_ia32_pmaxsb256
__builtin_ia32_pmaxsd256
__builtin_ia32_pmaxsw256
__builtin_ia32_pmaxub256
__builtin_ia32_pmaxud256
__builtin_ia32_pmaxuw256
__builtin_ia32_pminsb256
__builtin_ia32_pminsd256
__builtin_ia32_pminsw256
__builtin_ia32_pminub256
__builtin_ia32_pminud256
__builtin_ia32_pminuw256
__builtin_ia32_pmovmskb256
__builtin_ia32_pmovsxbd256
__builtin_ia32_pmovsxbq256
__builtin_ia32_pmovsxbw256
__builtin_ia32_pmovsxdq256
__builtin_ia32_pmovsxwd256
__builtin_ia32_pmovsxwq256
__builtin_ia32_pmovzxbd256
__builtin_ia32_pmovzxbq256
__builtin_ia32_pmovzxbw256
__builtin_ia32_pmovzxdq256
__builtin_ia32_pmovzxwd256
__builtin_ia32_pmovzxwq256
__builtin_ia32_pmuldq256
__builtin_ia32_pmulhrsw256
__builtin_ia32_pmulhw256
__builtin_ia32_pmulhuw256
__builtin_ia32_pmuludq256
__builtin_ia32_psadbw256
__builtin_ia32_pshufb256
__builtin_ia32_psignb256
__builtin_ia32_psignd256
__builtin_ia32_psignw256
__builtin_ia32_pslld256
__builtin_ia32_psllq256
__builtin_ia32_psllw256
__builtin_ia32_pslldi256
__builtin_ia32_psllqi256
__builtin_ia32_psllwi256
__builtin_ia32_psllv4si
__builtin_ia32_psllv8si
__builtin_ia32_psllv2di
__builtin_ia32_psllv4di
__builtin_ia32_psrad256
__builtin_ia32_psraw256
__builtin_ia32_psradi256
__builtin_ia32_psrawi256
__builtin_ia32_psrav4si
__builtin_ia32_psrav8si
__builtin_ia32_psrld256
__builtin_ia32_psrlq256
__builtin_ia32_psrlw256
__builtin_ia32_psrldi256
__builtin_ia32_psrlqi256
__builtin_ia32_psrlwi256
__builtin_ia32_psrlv4si
__builtin_ia32_psrlv8si
__builtin_ia32_psrlv2di
__builtin_ia32_psrlv4di
__builtin_ia32_psubsb256
__builtin_ia32_psubsw256
__builtin_ia32_psubusb256
__builtin_ia32_psubusw256
__builtin_ia32_permti256
__builtin_ia32_cvtsd2usi
__builtin_ia32_cvtsd2usi64
__builtin_ia32_cvtsi2sd32
__builtin_ia32_cvtsi2sd64
__builtin_ia32_cvtsi2ss32
__builtin_ia32_cvtsi2ss64
__builtin_ia32_cvtss2usi
__builtin_ia32_cvtss2usi64
__builtin_ia32_cvttsd2usi
__builtin_ia32_cvttsd2usi64
__builtin_ia32_cvttss2usi
__builtin_ia32_cvttss2usi64
__builtin_ia32_cvtusi2sd32
__builtin_ia32_cvtusi2ss32
__builtin_ia32_cvtusi2sd64
__builtin_ia32_cvtusi2ss64
__builtin_ia32_exp2pd_mask
__builtin_ia32_exp2ps_mask
__builtin_ia32_gathersiv8df
__builtin_ia32_gathersiv16si
__builtin_ia32_gathersiv8di
__builtin_ia32_gathersiv16sf
__builtin_ia32_gatherdiv8df
__builtin_ia32_gatherdiv16si
__builtin_ia32_gatherdiv8di
__builtin_ia32_gatherdiv16sf
__builtin_ia32_gather3div2df
__builtin_ia32_gather3div2di
__builtin_ia32_gather3div4df
__builtin_ia32_gather3div4di
__builtin_ia32_gather3div4sf
__builtin_ia32_gather3div4si
__builtin_ia32_gather3div8sf
__builtin_ia32_gather3div8si
__builtin_ia32_gather3siv2df
__builtin_ia32_gather3siv2di
__builtin_ia32_gather3siv4df
__builtin_ia32_gather3siv4di
__builtin_ia32_gather3siv4sf
__builtin_ia32_gather3siv4si
__builtin_ia32_gather3siv8sf
__builtin_ia32_gather3siv8si
__builtin_ia32_gatherpfdpd
__builtin_ia32_gatherpfdps
__builtin_ia32_gatherpfqpd
__builtin_ia32_gatherpfqps
__builtin_ia32_kandhi
__builtin_ia32_kandnhi
__builtin_ia32_knothi
__builtin_ia32_korhi
__builtin_ia32_kortestchi
__builtin_ia32_kortestzhi
__builtin_ia32_kunpckhi
__builtin_ia32_kxnorhi
__builtin_ia32_kxorhi
__builtin_ia32_addpd128_mask
__builtin_ia32_addpd256_mask
__builtin_ia32_addpd512_mask
__builtin_ia32_addps128_mask
__builtin_ia32_addps256_mask
__builtin_ia32_addps512_mask
__builtin_ia32_addsd_mask
__builtin_ia32_addss_mask
__builtin_ia32_andpd128_mask
__builtin_ia32_andpd256_mask
__builtin_ia32_andpd512_mask
__builtin_ia32_andps128_mask
__builtin_ia32_andps256_mask
__builtin_ia32_andps512_mask
__builtin_ia32_andnpd128_mask
__builtin_ia32_andnpd256_mask
__builtin_ia32_andnpd512_mask
__builtin_ia32_andnps128_mask
__builtin_ia32_andnps256_mask
__builtin_ia32_andnps512_mask
__builtin_ia32_blendmb_128_mask
__builtin_ia32_blendmb_256_mask
__builtin_ia32_blendmb_512_mask
__builtin_ia32_blendmd_128_mask
__builtin_ia32_blendmd_256_mask
__builtin_ia32_blendmd_512_mask
__builtin_ia32_blendmpd_128_mask
__builtin_ia32_blendmpd_256_mask
__builtin_ia32_blendmpd_512_mask
__builtin_ia32_blendmps_128_mask
__builtin_ia32_blendmps_256_mask
__builtin_ia32_blendmps_512_mask
__builtin_ia32_blendmq_128_mask
__builtin_ia32_blendmq_256_mask
__builtin_ia32_blendmq_512_mask
__builtin_ia32_blendmw_128_mask
__builtin_ia32_blendmw_256_mask
__builtin_ia32_blendmw_512_mask
__builtin_ia32_cmpb128_mask
__builtin_ia32_cmpb256_mask
__builtin_ia32_cmpb512_mask
__builtin_ia32_cmpd128_mask
__builtin_ia32_cmpd256_mask
__builtin_ia32_cmpd512_mask
__builtin_ia32_cmppd128_mask
__builtin_ia32_cmppd256_mask
__builtin_ia32_cmppd512_mask
__builtin_ia32_cmpps128_mask
__builtin_ia32_cmpps256_mask
__builtin_ia32_cmpps512_mask
__builtin_ia32_cmpq128_mask
__builtin_ia32_cmpq256_mask
__builtin_ia32_cmpq512_mask
__builtin_ia32_cmpw128_mask
__builtin_ia32_cmpw256_mask
__builtin_ia32_cmpw512_mask
__builtin_ia32_compresssi128_mask
__builtin_ia32_compresssi256_mask
__builtin_ia32_compresssi512_mask
__builtin_ia32_compressdf128_mask
__builtin_ia32_compressdf256_mask
__builtin_ia32_compressdf512_mask
__builtin_ia32_compresssf128_mask
__builtin_ia32_compresssf256_mask
__builtin_ia32_compresssf512_mask
__builtin_ia32_compressdi128_mask
__builtin_ia32_compressdi256_mask
__builtin_ia32_compressdi512_mask
__builtin_ia32_compressstoresi128_mask
__builtin_ia32_compressstoresi256_mask
__builtin_ia32_compressstoresi512_mask
__builtin_ia32_compressstoredf128_mask
__builtin_ia32_compressstoredf256_mask
__builtin_ia32_compressstoredf512_mask
__builtin_ia32_compressstoresf128_mask
__builtin_ia32_compressstoresf256_mask
__builtin_ia32_compressstoresf512_mask
__builtin_ia32_compressstoredi128_mask
__builtin_ia32_compressstoredi256_mask
__builtin_ia32_compressstoredi512_mask
__builtin_ia32_vpconflictsi_512_mask
__builtin_ia32_vpconflictdi_512_mask
__builtin_ia32_cvtdq2pd128_mask
__builtin_ia32_cvtdq2pd256_mask
__builtin_ia32_cvtdq2pd512_mask
__builtin_ia32_cvtdq2ps128_mask
__builtin_ia32_cvtdq2ps256_mask
__builtin_ia32_cvtdq2ps512_mask
__builtin_ia32_cvtpd2dq128_mask
__builtin_ia32_cvtpd2dq256_mask
__builtin_ia32_cvtpd2dq512_mask
__builtin_ia32_cvtpd2ps_mask
__builtin_ia32_cvtpd2ps256_mask
__builtin_ia32_cvtpd2ps512_mask
__builtin_ia32_cvtpd2qq128_mask
__builtin_ia32_cvtpd2qq256_mask
__builtin_ia32_cvtpd2qq512_mask
__builtin_ia32_cvtpd2udq128_mask
__builtin_ia32_cvtpd2udq256_mask
__builtin_ia32_cvtpd2udq512_mask
__builtin_ia32_cvtpd2uqq128_mask
__builtin_ia32_cvtpd2uqq256_mask
__builtin_ia32_cvtpd2uqq512_mask
__builtin_ia32_cvtps2dq128_mask
__builtin_ia32_cvtps2dq256_mask
__builtin_ia32_cvtps2dq512_mask
__builtin_ia32_cvtps2pd128_mask
__builtin_ia32_cvtps2pd256_mask
__builtin_ia32_cvtps2pd512_mask
__builtin_ia32_cvtps2qq128_mask
__builtin_ia32_cvtps2qq256_mask
__builtin_ia32_cvtps2qq512_mask
__builtin_ia32_cvtps2udq128_mask
__builtin_ia32_cvtps2udq256_mask
__builtin_ia32_cvtps2udq512_mask
__builtin_ia32_cvtps2uqq128_mask
__builtin_ia32_cvtps2uqq256_mask
__builtin_ia32_cvtps2uqq512_mask
__builtin_ia32_cvtqq2pd128_mask
__builtin_ia32_cvtqq2pd256_mask
__builtin_ia32_cvtqq2pd512_mask
__builtin_ia32_cvtqq2ps128_mask
__builtin_ia32_cvtqq2ps256_mask
__builtin_ia32_cvtqq2ps512_mask
__builtin_ia32_cvttpd2dq128_mask
__builtin_ia32_cvttpd2dq256_mask
__builtin_ia32_cvttpd2dq512_mask
__builtin_ia32_cvttpd2qq128_mask
__builtin_ia32_cvttpd2qq256_mask
__builtin_ia32_cvttpd2qq512_mask
__builtin_ia32_cvttpd2udq128_mask
__builtin_ia32_cvttpd2udq256_mask
__builtin_ia32_cvttpd2udq512_mask
__builtin_ia32_cvttpd2uqq128_mask
__builtin_ia32_cvttpd2uqq256_mask
__builtin_ia32_cvttpd2uqq512_mask
__builtin_ia32_cvttps2dq128_mask
__builtin_ia32_cvttps2dq256_mask
__builtin_ia32_cvttps2dq512_mask
__builtin_ia32_cvttps2qq128_mask
__builtin_ia32_cvttps2qq256_mask
__builtin_ia32_cvttps2qq512_mask
__builtin_ia32_cvttps2udq128_mask
__builtin_ia32_cvttps2udq256_mask
__builtin_ia32_cvttps2udq512_mask
__builtin_ia32_cvttps2uqq128_mask
__builtin_ia32_cvttps2uqq256_mask
__builtin_ia32_cvttps2uqq512_mask
__builtin_ia32_cvtudq2pd128_mask
__builtin_ia32_cvtudq2pd256_mask
__builtin_ia32_cvtudq2pd512_mask
__builtin_ia32_cvtudq2ps128_mask
__builtin_ia32_cvtudq2ps256_mask
__builtin_ia32_cvtudq2ps512_mask
__builtin_ia32_cvtuqq2pd128_mask
__builtin_ia32_cvtuqq2pd256_mask
__builtin_ia32_cvtuqq2pd512_mask
__builtin_ia32_cvtuqq2ps128_mask
__builtin_ia32_cvtuqq2ps256_mask
__builtin_ia32_cvtuqq2ps512_mask
__builtin_ia32_divpd_mask
__builtin_ia32_divpd256_mask
__builtin_ia32_divpd512_mask
__builtin_ia32_divps_mask
__builtin_ia32_divps256_mask
__builtin_ia32_divps512_mask
__builtin_ia32_divsd_mask
__builtin_ia32_divss_mask
__builtin_ia32_expandsi128_mask
__builtin_ia32_expandsi256_mask
__builtin_ia32_expandsi512_mask
__builtin_ia32_expandloadsi128_mask
__builtin_ia32_expandloadsi256_mask
__builtin_ia32_expandloadsi512_mask
__builtin_ia32_expandloaddf128_mask
__builtin_ia32_expandloaddf256_mask
__builtin_ia32_expandloaddf512_mask
__builtin_ia32_expandloadsf128_mask
__builtin_ia32_expandloadsf256_mask
__builtin_ia32_expandloadsf512_mask
__builtin_ia32_expandloaddi128_mask
__builtin_ia32_expandloaddi256_mask
__builtin_ia32_expandloaddi512_mask
__builtin_ia32_expanddf128_mask
__builtin_ia32_expanddf256_mask
__builtin_ia32_expanddf512_mask
__builtin_ia32_expandsf128_mask
__builtin_ia32_expandsf256_mask
__builtin_ia32_expandsf512_mask
__builtin_ia32_expanddi128_mask
__builtin_ia32_expanddi256_mask
__builtin_ia32_expanddi512_mask
__builtin_ia32_getexppd128_mask
__builtin_ia32_getexppd256_mask
__builtin_ia32_getexppd512_mask
__builtin_ia32_getexpps128_mask
__builtin_ia32_getexpps256_mask
__builtin_ia32_getexpps512_mask
__builtin_ia32_getexpsd_mask
__builtin_ia32_getexpss_mask
__builtin_ia32_loadapd512_mask
__builtin_ia32_loadaps512_mask
__builtin_ia32_loaddqusi512_mask
__builtin_ia32_loadupd512_mask
__builtin_ia32_loadups512_mask
__builtin_ia32_loaddqudi512_mask
__builtin_ia32_vplzcntd_512_mask
__builtin_ia32_vplzcntq_512_mask
__builtin_ia32_maxpd_mask
__builtin_ia32_maxpd256_mask
__builtin_ia32_maxpd512_mask
__builtin_ia32_maxps_mask
__builtin_ia32_maxps256_mask
__builtin_ia32_maxps512_mask
__builtin_ia32_maxsd_mask
__builtin_ia32_maxss_mask
__builtin_ia32_minpd_mask
__builtin_ia32_minpd256_mask
__builtin_ia32_minpd512_mask
__builtin_ia32_minps_mask
__builtin_ia32_minps256_mask
__builtin_ia32_minps512_mask
__builtin_ia32_minsd_mask
__builtin_ia32_minss_mask
__builtin_ia32_mulpd_mask
__builtin_ia32_mulpd256_mask
__builtin_ia32_mulpd512_mask
__builtin_ia32_mulps_mask
__builtin_ia32_mulps256_mask
__builtin_ia32_mulps512_mask
__builtin_ia32_mulsd_mask
__builtin_ia32_mulss_mask
__builtin_ia32_orpd128_mask
__builtin_ia32_orpd256_mask
__builtin_ia32_orpd512_mask
__builtin_ia32_orps128_mask
__builtin_ia32_orps256_mask
__builtin_ia32_orps512_mask
__builtin_ia32_pabsb128_mask
__builtin_ia32_pabsb256_mask
__builtin_ia32_pabsb512_mask
__builtin_ia32_pabsd128_mask
__builtin_ia32_pabsd256_mask
__builtin_ia32_pabsd512_mask
__builtin_ia32_pabsq128_mask
__builtin_ia32_pabsq256_mask
__builtin_ia32_pabsq512_mask
__builtin_ia32_pabsw128_mask
__builtin_ia32_pabsw256_mask
__builtin_ia32_pabsw512_mask
__builtin_ia32_packssdw128_mask
__builtin_ia32_packssdw256_mask
__builtin_ia32_packssdw512_mask
__builtin_ia32_packsswb128_mask
__builtin_ia32_packsswb256_mask
__builtin_ia32_packsswb512_mask
__builtin_ia32_packusdw128_mask
__builtin_ia32_packusdw256_mask
__builtin_ia32_packusdw512_mask
__builtin_ia32_packuswb128_mask
__builtin_ia32_packuswb256_mask
__builtin_ia32_packuswb512_mask
__builtin_ia32_paddb128_mask
__builtin_ia32_paddb256_mask
__builtin_ia32_paddb512_mask
__builtin_ia32_paddd128_mask
__builtin_ia32_paddd256_mask
__builtin_ia32_paddd512_mask
__builtin_ia32_paddq128_mask
__builtin_ia32_paddq256_mask
__builtin_ia32_paddq512_mask
__builtin_ia32_paddw128_mask
__builtin_ia32_paddw256_mask
__builtin_ia32_paddw512_mask
__builtin_ia32_paddsb128_mask
__builtin_ia32_paddsb256_mask
__builtin_ia32_paddsb512_mask
__builtin_ia32_paddsw128_mask
__builtin_ia32_paddsw256_mask
__builtin_ia32_paddsw512_mask
__builtin_ia32_paddusb128_mask
__builtin_ia32_paddusb256_mask
__builtin_ia32_paddusb512_mask
__builtin_ia32_paddusw128_mask
__builtin_ia32_paddusw256_mask
__builtin_ia32_paddusw512_mask
__builtin_ia32_pandd128_mask
__builtin_ia32_pandd256_mask
__builtin_ia32_pandd512_mask
__builtin_ia32_pandq128_mask
__builtin_ia32_pandq256_mask
__builtin_ia32_pandq512_mask
__builtin_ia32_pandnd128_mask
__builtin_ia32_pandnd256_mask
__builtin_ia32_pandnd512_mask
__builtin_ia32_pandnq128_mask
__builtin_ia32_pandnq256_mask
__builtin_ia32_pandnq512_mask
__builtin_ia32_pavgb128_mask
__builtin_ia32_pavgb256_mask
__builtin_ia32_pavgb512_mask
__builtin_ia32_pavgw128_mask
__builtin_ia32_pavgw256_mask
__builtin_ia32_pavgw512_mask
__builtin_ia32_pbroadcastd512_gpr_mask
__builtin_ia32_pbroadcastq512_gpr_mask
__builtin_ia32_pbroadcastq512_mem_mask
__builtin_ia32_pcmpeqb128_mask
__builtin_ia32_pcmpeqb256_mask
__builtin_ia32_pcmpeqb512_mask
__builtin_ia32_pcmpeqd128_mask
__builtin_ia32_pcmpeqd256_mask
__builtin_ia32_pcmpeqd512_mask
__builtin_ia32_pcmpeqq128_mask
__builtin_ia32_pcmpeqq256_mask
__builtin_ia32_pcmpeqq512_mask
__builtin_ia32_pcmpeqw128_mask
__builtin_ia32_pcmpeqw256_mask
__builtin_ia32_pcmpeqw512_mask
__builtin_ia32_pcmpgtb128_mask
__builtin_ia32_pcmpgtb256_mask
__builtin_ia32_pcmpgtb512_mask
__builtin_ia32_pcmpgtd128_mask
__builtin_ia32_pcmpgtd256_mask
__builtin_ia32_pcmpgtd512_mask
__builtin_ia32_pcmpgtq128_mask
__builtin_ia32_pcmpgtq256_mask
__builtin_ia32_pcmpgtq512_mask
__builtin_ia32_pcmpgtw128_mask
__builtin_ia32_pcmpgtw256_mask
__builtin_ia32_pcmpgtw512_mask
__builtin_ia32_pmaddubsw128_mask
__builtin_ia32_pmaddubsw256_mask
__builtin_ia32_pmaddubsw512_mask
__builtin_ia32_pmaddwd128_mask
__builtin_ia32_pmaddwd256_mask
__builtin_ia32_pmaddwd512_mask
__builtin_ia32_pmaxsb128_mask
__builtin_ia32_pmaxsb256_mask
__builtin_ia32_pmaxsb512_mask
__builtin_ia32_pmaxsd128_mask
__builtin_ia32_pmaxsd256_mask
__builtin_ia32_pmaxsd512_mask
__builtin_ia32_pmaxsq128_mask
__builtin_ia32_pmaxsq256_mask
__builtin_ia32_pmaxsq512_mask
__builtin_ia32_pmaxsw128_mask
__builtin_ia32_pmaxsw256_mask
__builtin_ia32_pmaxsw512_mask
__builtin_ia32_pmaxub128_mask
__builtin_ia32_pmaxub256_mask
__builtin_ia32_pmaxub512_mask
__builtin_ia32_pmaxud128_mask
__builtin_ia32_pmaxud256_mask
__builtin_ia32_pmaxud512_mask
__builtin_ia32_pmaxuq128_mask
__builtin_ia32_pmaxuq256_mask
__builtin_ia32_pmaxuq512_mask
__builtin_ia32_pmaxuw128_mask
__builtin_ia32_pmaxuw256_mask
__builtin_ia32_pmaxuw512_mask
__builtin_ia32_pminsb128_mask
__builtin_ia32_pminsb256_mask
__builtin_ia32_pminsb512_mask
__builtin_ia32_pminsd128_mask
__builtin_ia32_pminsd256_mask
__builtin_ia32_pminsd512_mask
__builtin_ia32_pminsq128_mask
__builtin_ia32_pminsq256_mask
__builtin_ia32_pminsq512_mask
__builtin_ia32_pminsw128_mask
__builtin_ia32_pminsw256_mask
__builtin_ia32_pminsw512_mask
__builtin_ia32_pminub128_mask
__builtin_ia32_pminub256_mask
__builtin_ia32_pminub512_mask
__builtin_ia32_pminud128_mask
__builtin_ia32_pminud256_mask
__builtin_ia32_pminud512_mask
__builtin_ia32_pminuq128_mask
__builtin_ia32_pminuq256_mask
__builtin_ia32_pminuq512_mask
__builtin_ia32_pminuw128_mask
__builtin_ia32_pminuw256_mask
__builtin_ia32_pminuw512_mask
__builtin_ia32_pmovdb128_mask
__builtin_ia32_pmovdb256_mask
__builtin_ia32_pmovdb512_mask
__builtin_ia32_pmovdb128mem_mask
__builtin_ia32_pmovdb256mem_mask
__builtin_ia32_pmovdb512mem_mask
__builtin_ia32_pmovdw128_mask
__builtin_ia32_pmovdw256_mask
__builtin_ia32_pmovdw512_mask
__builtin_ia32_pmovdw128mem_mask
__builtin_ia32_pmovdw256mem_mask
__builtin_ia32_pmovdw512mem_mask
__builtin_ia32_pmovqb128_mask
__builtin_ia32_pmovqb256_mask
__builtin_ia32_pmovqb512_mask
__builtin_ia32_pmovqb128mem_mask
__builtin_ia32_pmovqb256mem_mask
__builtin_ia32_pmovqb512mem_mask
__builtin_ia32_pmovqd128_mask
__builtin_ia32_pmovqd256_mask
__builtin_ia32_pmovqd512_mask
__builtin_ia32_pmovqd128mem_mask
__builtin_ia32_pmovqd256mem_mask
__builtin_ia32_pmovqd512mem_mask
__builtin_ia32_pmovqw128_mask
__builtin_ia32_pmovqw256_mask
__builtin_ia32_pmovqw512_mask
__builtin_ia32_pmovqw128mem_mask
__builtin_ia32_pmovqw256mem_mask
__builtin_ia32_pmovqw512mem_mask
__builtin_ia32_pmovwb128_mask
__builtin_ia32_pmovwb256_mask
__builtin_ia32_pmovwb512_mask
__builtin_ia32_pmovwb128mem_mask
__builtin_ia32_pmovwb256mem_mask
__builtin_ia32_pmovwb512mem_mask
__builtin_ia32_pmovsdb128_mask
__builtin_ia32_pmovsdb256_mask
__builtin_ia32_pmovsdb512_mask
__builtin_ia32_pmovsdb128mem_mask
__builtin_ia32_pmovsdb256mem_mask
__builtin_ia32_pmovsdb512mem_mask
__builtin_ia32_pmovsdw128_mask
__builtin_ia32_pmovsdw256_mask
__builtin_ia32_pmovsdw512_mask
__builtin_ia32_pmovsdw128mem_mask
__builtin_ia32_pmovsdw256mem_mask
__builtin_ia32_pmovsdw512mem_mask
__builtin_ia32_pmovsqb128_mask
__builtin_ia32_pmovsqb256_mask
__builtin_ia32_pmovsqb512_mask
__builtin_ia32_pmovsqb128mem_mask
__builtin_ia32_pmovsqb256mem_mask
__builtin_ia32_pmovsqb512mem_mask
__builtin_ia32_pmovsqd128_mask
__builtin_ia32_pmovsqd256_mask
__builtin_ia32_pmovsqd512_mask
__builtin_ia32_pmovsqd128mem_mask
__builtin_ia32_pmovsqd256mem_mask
__builtin_ia32_pmovsqd512mem_mask
__builtin_ia32_pmovsqw128_mask
__builtin_ia32_pmovsqw256_mask
__builtin_ia32_pmovsqw512_mask
__builtin_ia32_pmovsqw128mem_mask
__builtin_ia32_pmovsqw256mem_mask
__builtin_ia32_pmovsqw512mem_mask
__builtin_ia32_pmovswb128_mask
__builtin_ia32_pmovswb256_mask
__builtin_ia32_pmovswb512_mask
__builtin_ia32_pmovswb128mem_mask
__builtin_ia32_pmovswb256mem_mask
__builtin_ia32_pmovswb512mem_mask
__builtin_ia32_pmovusdb128_mask
__builtin_ia32_pmovusdb256_mask
__builtin_ia32_pmovusdb512_mask
__builtin_ia32_pmovusdb128mem_mask
__builtin_ia32_pmovusdb256mem_mask
__builtin_ia32_pmovusdb512mem_mask
__builtin_ia32_pmovusdw128_mask
__builtin_ia32_pmovusdw256_mask
__builtin_ia32_pmovusdw512_mask
__builtin_ia32_pmovusdw128mem_mask
__builtin_ia32_pmovusdw256mem_mask
__builtin_ia32_pmovusdw512mem_mask
__builtin_ia32_pmovusqb128_mask
__builtin_ia32_pmovusqb256_mask
__builtin_ia32_pmovusqb512_mask
__builtin_ia32_pmovusqb128mem_mask
__builtin_ia32_pmovusqb256mem_mask
__builtin_ia32_pmovusqb512mem_mask
__builtin_ia32_pmovusqd128_mask
__builtin_ia32_pmovusqd256_mask
__builtin_ia32_pmovusqd512_mask
__builtin_ia32_pmovusqd128mem_mask
__builtin_ia32_pmovusqd256mem_mask
__builtin_ia32_pmovusqd512mem_mask
__builtin_ia32_pmovusqw128_mask
__builtin_ia32_pmovusqw256_mask
__builtin_ia32_pmovusqw512_mask
__builtin_ia32_pmovusqw128mem_mask
__builtin_ia32_pmovusqw256mem_mask
__builtin_ia32_pmovusqw512mem_mask
__builtin_ia32_pmovuswb128_mask
__builtin_ia32_pmovuswb256_mask
__builtin_ia32_pmovuswb512_mask
__builtin_ia32_pmovuswb128mem_mask
__builtin_ia32_pmovuswb256mem_mask
__builtin_ia32_pmovuswb512mem_mask
__builtin_ia32_pmuldq128_mask
__builtin_ia32_pmuldq256_mask
__builtin_ia32_pmuldq512_mask
__builtin_ia32_pmulhrsw128_mask
__builtin_ia32_pmulhrsw256_mask
__builtin_ia32_pmulhrsw512_mask
__builtin_ia32_pmulhw128_mask
__builtin_ia32_pmulhw256_mask
__builtin_ia32_pmulhw512_mask
__builtin_ia32_pmulhuw128_mask
__builtin_ia32_pmulhuw256_mask
__builtin_ia32_pmulhuw512_mask
__builtin_ia32_pmulld128_mask
__builtin_ia32_pmulld256_mask
__builtin_ia32_pmulld512_mask
__builtin_ia32_pmullq128_mask
__builtin_ia32_pmullq256_mask
__builtin_ia32_pmullq512_mask
__builtin_ia32_pmullw128_mask
__builtin_ia32_pmullw256_mask
__builtin_ia32_pmullw512_mask
__builtin_ia32_pmuludq128_mask
__builtin_ia32_pmuludq256_mask
__builtin_ia32_pmuludq512_mask
__builtin_ia32_pord128_mask
__builtin_ia32_pord256_mask
__builtin_ia32_pord512_mask
__builtin_ia32_porq128_mask
__builtin_ia32_porq256_mask
__builtin_ia32_porq512_mask
__builtin_ia32_pshufb128_mask
__builtin_ia32_pshufb256_mask
__builtin_ia32_pshufb512_mask
__builtin_ia32_pslld512_mask
__builtin_ia32_psllq512_mask
__builtin_ia32_pslldi512
__builtin_ia32_psllqi512
__builtin_ia32_psllv16si_mask
__builtin_ia32_psllv8di_mask
__builtin_ia32_psrad512_mask
__builtin_ia32_psraq512_mask
__builtin_ia32_psradi512
__builtin_ia32_psraqi512
__builtin_ia32_psrav16si_mask
__builtin_ia32_psrav8di_mask
__builtin_ia32_psrld512_mask
__builtin_ia32_psrlq512_mask
__builtin_ia32_psrldi512
__builtin_ia32_psrlqi512
__builtin_ia32_psrlv16si_mask
__builtin_ia32_psrlv8di_mask
__builtin_ia32_psubb128_mask
__builtin_ia32_psubb256_mask
__builtin_ia32_psubb512_mask
__builtin_ia32_psubd128_mask
__builtin_ia32_psubd256_mask
__builtin_ia32_psubd512_mask
__builtin_ia32_psubq128_mask
__builtin_ia32_psubq256_mask
__builtin_ia32_psubq512_mask
__builtin_ia32_psubw128_mask
__builtin_ia32_psubw256_mask
__builtin_ia32_psubw512_mask
__builtin_ia32_psubsb128_mask
__builtin_ia32_psubsb256_mask
__builtin_ia32_psubsb512_mask
__builtin_ia32_psubsw128_mask
__builtin_ia32_psubsw256_mask
__builtin_ia32_psubsw512_mask
__builtin_ia32_psubusb128_mask
__builtin_ia32_psubusb256_mask
__builtin_ia32_psubusb512_mask
__builtin_ia32_psubusw128_mask
__builtin_ia32_psubusw256_mask
__builtin_ia32_psubusw512_mask
__builtin_ia32_ptestmd512
__builtin_ia32_ptestmq512
__builtin_ia32_punpckhbw128_mask
__builtin_ia32_punpckhbw256_mask
__builtin_ia32_punpckhbw512_mask
__builtin_ia32_punpckhdq128_mask
__builtin_ia32_punpckhdq256_mask
__builtin_ia32_punpckhdq512_mask
__builtin_ia32_punpckhqdq128_mask
__builtin_ia32_punpckhqdq256_mask
__builtin_ia32_punpckhqdq512_mask
__builtin_ia32_punpckhwd128_mask
__builtin_ia32_punpckhwd256_mask
__builtin_ia32_punpckhwd512_mask
__builtin_ia32_punpcklbw128_mask
__builtin_ia32_punpcklbw256_mask
__builtin_ia32_punpcklbw512_mask
__builtin_ia32_punpckldq128_mask
__builtin_ia32_punpckldq256_mask
__builtin_ia32_punpckldq512_mask
__builtin_ia32_punpcklqdq128_mask
__builtin_ia32_punpcklqdq256_mask
__builtin_ia32_punpcklqdq512_mask
__builtin_ia32_punpcklwd128_mask
__builtin_ia32_punpcklwd256_mask
__builtin_ia32_punpcklwd512_mask
__builtin_ia32_pxord128_mask
__builtin_ia32_pxord256_mask
__builtin_ia32_pxord512_mask
__builtin_ia32_pxorq128_mask
__builtin_ia32_pxorq256_mask
__builtin_ia32_pxorq512_mask
__builtin_ia32_rangepd128_mask
__builtin_ia32_rangepd256_mask
__builtin_ia32_rangepd512_mask
__builtin_ia32_rangeps128_mask
__builtin_ia32_rangeps256_mask
__builtin_ia32_rangeps512_mask
__builtin_ia32_rangesd_mask
__builtin_ia32_rangess_mask
__builtin_ia32_reducepd128_mask
__builtin_ia32_reducepd256_mask
__builtin_ia32_reducepd512_mask
__builtin_ia32_reduceps128_mask
__builtin_ia32_reduceps256_mask
__builtin_ia32_reduceps512_mask
__builtin_ia32_reducesd_mask
__builtin_ia32_reducess_mask
__builtin_ia32_rndscalepd_128_mask
__builtin_ia32_rndscalepd_256_mask
__builtin_ia32_rndscalepd_mask
__builtin_ia32_rndscaleps_128_mask
__builtin_ia32_rndscaleps_256_mask
__builtin_ia32_rndscaleps_mask
__builtin_ia32_rndscalesd_mask
__builtin_ia32_rndscaless_mask
__builtin_ia32_scalefpd128_mask
__builtin_ia32_scalefpd256_mask
__builtin_ia32_scalefpd512_mask
__builtin_ia32_scalefps128_mask
__builtin_ia32_scalefps256_mask
__builtin_ia32_scalefps512_mask
__builtin_ia32_scalefsd_round
__builtin_ia32_scalefss_round
__builtin_ia32_sqrtpd128_mask
__builtin_ia32_sqrtpd256_mask
__builtin_ia32_sqrtpd512_mask
__builtin_ia32_sqrtps128_mask
__builtin_ia32_sqrtps256_mask
__builtin_ia32_sqrtps512_mask
__builtin_ia32_storeapd512_mask
__builtin_ia32_storeaps512_mask
__builtin_ia32_storess_mask
__builtin_ia32_storedqusi512_mask
__builtin_ia32_storeupd512_mask
__builtin_ia32_storeups512_mask
__builtin_ia32_storedqudi512_mask
__builtin_ia32_subpd128_mask
__builtin_ia32_subpd256_mask
__builtin_ia32_subpd512_mask
__builtin_ia32_subps128_mask
__builtin_ia32_subps256_mask
__builtin_ia32_subps512_mask
__builtin_ia32_subsd_mask
__builtin_ia32_subss_mask
__builtin_ia32_ucmpb128_mask
__builtin_ia32_ucmpb256_mask
__builtin_ia32_ucmpb512_mask
__builtin_ia32_ucmpd128_mask
__builtin_ia32_ucmpd256_mask
__builtin_ia32_ucmpd512_mask
__builtin_ia32_ucmpq128_mask
__builtin_ia32_ucmpq256_mask
__builtin_ia32_ucmpq512_mask
__builtin_ia32_ucmpw128_mask
__builtin_ia32_ucmpw256_mask
__builtin_ia32_ucmpw512_mask
__builtin_ia32_unpckhpd128_mask
__builtin_ia32_unpckhpd256_mask
__builtin_ia32_unpckhpd512_mask
__builtin_ia32_unpckhps128_mask
__builtin_ia32_unpckhps256_mask
__builtin_ia32_unpckhps512_mask
__builtin_ia32_unpcklpd128_mask
__builtin_ia32_unpcklpd256_mask
__builtin_ia32_unpcklpd512_mask
__builtin_ia32_unpcklps128_mask
__builtin_ia32_unpcklps256_mask
__builtin_ia32_unpcklps512_mask
__builtin_ia32_alignd512_mask
__builtin_ia32_alignq512_mask
__builtin_ia32_vcvtph2ps512_mask
__builtin_ia32_vcvtps2ph512_mask
__builtin_ia32_extractf32x4_mask
__builtin_ia32_extractf64x4_mask
__builtin_ia32_extracti32x4_mask
__builtin_ia32_extracti64x4_mask
__builtin_ia32_vfmaddpd128_mask
__builtin_ia32_vfmaddpd256_mask
__builtin_ia32_vfmaddpd512_mask
__builtin_ia32_vfmaddps128_mask
__builtin_ia32_vfmaddps256_mask
__builtin_ia32_vfmaddps512_mask
__builtin_ia32_vfmaddsubpd128_mask
__builtin_ia32_vfmaddsubpd256_mask
__builtin_ia32_vfmaddsubpd512_mask
__builtin_ia32_vfmaddsubps128_mask
__builtin_ia32_vfmaddsubps256_mask
__builtin_ia32_vfmaddsubps512_mask
__builtin_ia32_vfnmaddpd128_mask
__builtin_ia32_vfnmaddpd256_mask
__builtin_ia32_vfnmaddpd512_mask
__builtin_ia32_vfnmaddps128_mask
__builtin_ia32_vfnmaddps256_mask
__builtin_ia32_vfnmaddps512_mask
__builtin_ia32_vfnmsubpd128_mask
__builtin_ia32_vfnmsubpd256_mask
__builtin_ia32_vfnmsubpd512_mask
__builtin_ia32_vfnmsubps128_mask
__builtin_ia32_vfnmsubps256_mask
__builtin_ia32_vfnmsubps512_mask
__builtin_ia32_vpermi2vard128_mask
__builtin_ia32_vpermi2vard256_mask
__builtin_ia32_vpermi2vard512_mask
__builtin_ia32_vpermi2varhi128_mask
__builtin_ia32_vpermi2varhi256_mask
__builtin_ia32_vpermi2varhi512_mask
__builtin_ia32_vpermi2varpd128_mask
__builtin_ia32_vpermi2varpd256_mask
__builtin_ia32_vpermi2varpd512_mask
__builtin_ia32_vpermi2varps128_mask
__builtin_ia32_vpermi2varps256_mask
__builtin_ia32_vpermi2varps512_mask
__builtin_ia32_vpermi2varq128_mask
__builtin_ia32_vpermi2varq256_mask
__builtin_ia32_vpermi2varq512_mask
__builtin_ia32_vpermt2vard128_mask
__builtin_ia32_vpermt2vard256_mask
__builtin_ia32_vpermt2vard512_mask
__builtin_ia32_vpermt2varhi128_mask
__builtin_ia32_vpermt2varhi256_mask
__builtin_ia32_vpermt2varhi512_mask
__builtin_ia32_vpermt2varpd128_mask
__builtin_ia32_vpermt2varpd256_mask
__builtin_ia32_vpermt2varpd512_mask
__builtin_ia32_vpermt2varps128_mask
__builtin_ia32_vpermt2varps256_mask
__builtin_ia32_vpermt2varps512_mask
__builtin_ia32_vpermt2varq128_mask
__builtin_ia32_vpermt2varq256_mask
__builtin_ia32_vpermt2varq512_mask
__builtin_ia32_xorpd128_mask
__builtin_ia32_xorpd256_mask
__builtin_ia32_xorpd512_mask
__builtin_ia32_xorps128_mask
__builtin_ia32_xorps256_mask
__builtin_ia32_xorps512_mask
__builtin_ia32_vfmaddpd128_mask3
__builtin_ia32_vfmaddpd256_mask3
__builtin_ia32_vfmaddpd512_mask3
__builtin_ia32_vfmaddps128_mask3
__builtin_ia32_vfmaddps256_mask3
__builtin_ia32_vfmaddps512_mask3
__builtin_ia32_vfmaddsubpd128_mask3
__builtin_ia32_vfmaddsubpd256_mask3
__builtin_ia32_vfmaddsubpd512_mask3
__builtin_ia32_vfmaddsubps128_mask3
__builtin_ia32_vfmaddsubps256_mask3
__builtin_ia32_vfmaddsubps512_mask3
__builtin_ia32_vfmsubpd128_mask3
__builtin_ia32_vfmsubpd256_mask3
__builtin_ia32_vfmsubpd512_mask3
__builtin_ia32_vfmsubps128_mask3
__builtin_ia32_vfmsubps256_mask3
__builtin_ia32_vfmsubps512_mask3
__builtin_ia32_vfmsubaddpd128_mask3
__builtin_ia32_vfmsubaddpd256_mask3
__builtin_ia32_vfmsubaddpd512_mask3
__builtin_ia32_vfmsubaddps128_mask3
__builtin_ia32_vfmsubaddps256_mask3
__builtin_ia32_vfmsubaddps512_mask3
__builtin_ia32_vfnmsubpd128_mask3
__builtin_ia32_vfnmsubpd256_mask3
__builtin_ia32_vfnmsubpd512_mask3
__builtin_ia32_vfnmsubps128_mask3
__builtin_ia32_vfnmsubps256_mask3
__builtin_ia32_vfnmsubps512_mask3
__builtin_ia32_vfmaddpd128_maskz
__builtin_ia32_vfmaddpd256_maskz
__builtin_ia32_vfmaddpd512_maskz
__builtin_ia32_vfmaddps128_maskz
__builtin_ia32_vfmaddps256_maskz
__builtin_ia32_vfmaddps512_maskz
__builtin_ia32_vfmaddsubpd128_maskz
__builtin_ia32_vfmaddsubpd256_maskz
__builtin_ia32_vfmaddsubpd512_maskz
__builtin_ia32_vfmaddsubps128_maskz
__builtin_ia32_vfmaddsubps256_maskz
__builtin_ia32_vfmaddsubps512_maskz
__builtin_ia32_vpermt2vard128_maskz
__builtin_ia32_vpermt2vard256_maskz
__builtin_ia32_vpermt2vard512_maskz
__builtin_ia32_vpermt2varhi128_maskz
__builtin_ia32_vpermt2varhi256_maskz
__builtin_ia32_vpermt2varhi512_maskz
__builtin_ia32_vpermt2varpd128_maskz
__builtin_ia32_vpermt2varpd256_maskz
__builtin_ia32_vpermt2varpd512_maskz
__builtin_ia32_vpermt2varps128_maskz
__builtin_ia32_vpermt2varps256_maskz
__builtin_ia32_vpermt2varps512_maskz
__builtin_ia32_vpermt2varq128_maskz
__builtin_ia32_vpermt2varq256_maskz
__builtin_ia32_vpermt2varq512_maskz
__builtin_ia32_movntdqa512
__builtin_ia32_pbroadcastd512
__builtin_ia32_pbroadcastq512
__builtin_ia32_pmovzxbd512
__builtin_ia32_pmovzxbq512
__builtin_ia32_pmovzxdq512
__builtin_ia32_pmovzxwd512
__builtin_ia32_pmovzxwq512
__builtin_ia32_rcp14pd512_mask
__builtin_ia32_rcp14ps512_mask
__builtin_ia32_rcp14sd_mask
__builtin_ia32_rcp14ss_mask
__builtin_ia32_rcp28pd_mask
__builtin_ia32_rcp28ps_mask
__builtin_ia32_rcp28sd_mask
__builtin_ia32_rcp28ss_mask
__builtin_ia32_rsqrt14pd512_mask
__builtin_ia32_rsqrt14ps512_mask
__builtin_ia32_rsqrt14sd_mask
__builtin_ia32_rsqrt14ss_mask
__builtin_ia32_rsqrt28pd_mask
__builtin_ia32_rsqrt28ps_mask
__builtin_ia32_rsqrt28sd_mask
__builtin_ia32_rsqrt28ss_mask
__builtin_ia32_scattersiv8df
__builtin_ia32_scattersiv16si
__builtin_ia32_scattersiv8di
__builtin_ia32_scattersiv16sf
__builtin_ia32_scatterdiv8df
__builtin_ia32_scatterdiv16si
__builtin_ia32_scatterdiv8di
__builtin_ia32_scatterdiv16sf
__builtin_ia32_scatterdiv2df
__builtin_ia32_scatterdiv2di
__builtin_ia32_scatterdiv4df
__builtin_ia32_scatterdiv4di
__builtin_ia32_scatterdiv4sf
__builtin_ia32_scatterdiv4si
__builtin_ia32_scatterdiv8sf
__builtin_ia32_scatterdiv8si
__builtin_ia32_scatterpfdpd
__builtin_ia32_scatterpfdps
__builtin_ia32_scatterpfqpd
__builtin_ia32_scatterpfqps
__builtin_ia32_scattersiv2df
__builtin_ia32_scattersiv2di
__builtin_ia32_scattersiv4df
__builtin_ia32_scattersiv4di
__builtin_ia32_scattersiv4sf
__builtin_ia32_scattersiv4si
__builtin_ia32_scattersiv8sf
__builtin_ia32_scattersiv8si
__builtin_ia32_sqrtrndsd
__builtin_ia32_sqrtrndss
__builtin_ia32_vbroadcastsd512
__builtin_ia32_vbroadcastsd_pd512
__builtin_ia32_vbroadcastss512
__builtin_ia32_vbroadcastss_ps512
__builtin_ia32_bextr_u32
__builtin_ia32_bextr_u64
__builtin_ia32_bzhi_si
__builtin_ia32_bzhi_di
__builtin_ia32_pdep_si
__builtin_ia32_pdep_di
__builtin_ia32_pext_si
__builtin_ia32_pext_di
__builtin_ia32_vfmaddpd
__builtin_ia32_vfmaddpd256
__builtin_ia32_vfmaddps
__builtin_ia32_vfmaddps256
__builtin_ia32_vfmaddsd
__builtin_ia32_vfmaddss
__builtin_ia32_vfmaddsubpd
__builtin_ia32_vfmaddsubpd256
__builtin_ia32_vfmaddsubps
__builtin_ia32_vfmaddsubps256
__builtin_ia32_vfmsubpd
__builtin_ia32_vfmsubpd256
__builtin_ia32_vfmsubps
__builtin_ia32_vfmsubps256
__builtin_ia32_vfmsubsd
__builtin_ia32_vfmsubss
__builtin_ia32_vfmsubaddpd
__builtin_ia32_vfmsubaddpd256
__builtin_ia32_vfmsubaddps
__builtin_ia32_vfmsubaddps256
__builtin_ia32_vfnmaddpd
__builtin_ia32_vfnmaddpd256
__builtin_ia32_vfnmaddps
__builtin_ia32_vfnmaddps256
__builtin_ia32_vfnmaddsd
__builtin_ia32_vfnmaddss
__builtin_ia32_vfnmsubpd
__builtin_ia32_vfnmsubpd256
__builtin_ia32_vfnmsubps
__builtin_ia32_vfnmsubps256
__builtin_ia32_vfnmsubsd
__builtin_ia32_vfnmsubss
__builtin_ia32_fxrstor
__builtin_ia32_fxrstor64
__builtin_ia32_fxsave
__builtin_ia32_fxsave64
__builtin_ia32_emms
__builtin_ia32_femms
__builtin_ia32_maskmovq
__builtin_ia32_movntq
__builtin_ia32_packssdw
__builtin_ia32_packsswb
__builtin_ia32_packuswb
__builtin_ia32_paddb
__builtin_ia32_paddd
__builtin_ia32_paddq
__builtin_ia32_paddw
__builtin_ia32_paddsb
__builtin_ia32_paddsw
__builtin_ia32_paddusb
__builtin_ia32_paddusw
__builtin_ia32_palignr
__builtin_ia32_pand
__builtin_ia32_pandn
__builtin_ia32_pavgb
__builtin_ia32_pavgw
__builtin_ia32_pcmpeqb
__builtin_ia32_pcmpeqd
__builtin_ia32_pcmpeqw
__builtin_ia32_pcmpgtb
__builtin_ia32_pcmpgtd
__builtin_ia32_pcmpgtw
__builtin_ia32_vec_ext_v4hi
__builtin_ia32_vec_set_v4hi
__builtin_ia32_pmaddwd
__builtin_ia32_pmaxsw
__builtin_ia32_pmaxub
__builtin_ia32_pminsw
__builtin_ia32_pminub
__builtin_ia32_pmovmskb
__builtin_ia32_pmulhw
__builtin_ia32_pmulhuw
__builtin_ia32_pmullw
__builtin_ia32_pmuludq
__builtin_ia32_por
__builtin_ia32_psadbw
__builtin_ia32_pslld
__builtin_ia32_psllq
__builtin_ia32_psllw
__builtin_ia32_pslldi
__builtin_ia32_psllqi
__builtin_ia32_psllwi
__builtin_ia32_psrad
__builtin_ia32_psraw
__builtin_ia32_psradi
__builtin_ia32_psrawi
__builtin_ia32_psrld
__builtin_ia32_psrlq
__builtin_ia32_psrlw
__builtin_ia32_psrldi
__builtin_ia32_psrlqi
__builtin_ia32_psrlwi
__builtin_ia32_psubb
__builtin_ia32_psubd
__builtin_ia32_psubq
__builtin_ia32_psubw
__builtin_ia32_psubsb
__builtin_ia32_psubsw
__builtin_ia32_psubusb
__builtin_ia32_psubusw
__builtin_ia32_punpckhbw
__builtin_ia32_punpckhdq
__builtin_ia32_punpckhwd
__builtin_ia32_punpcklbw
__builtin_ia32_punpckldq
__builtin_ia32_punpcklwd
__builtin_ia32_pxor
__builtin_ia32_pclmulqdq128
__builtin_ia32_rdfsbase32
__builtin_ia32_rdfsbase64
__builtin_ia32_rdgsbase32
__builtin_ia32_rdgsbase64
__builtin_ia32_rdpmc
__builtin_ia32_rdtsc
__builtin_ia32_rdtscp
__builtin_ia32_sha1msg1
__builtin_ia32_sha1msg2
__builtin_ia32_sha1nexte
__builtin_ia32_sha1rnds4
__builtin_ia32_sha256msg1
__builtin_ia32_sha256msg2
__builtin_ia32_sha256rnds2
__builtin_ia32_addss
__builtin_ia32_cmpps
__builtin_ia32_cmpss
__builtin_ia32_comieq
__builtin_ia32_comige
__builtin_ia32_comigt
__builtin_ia32_comile
__builtin_ia32_comilt
__builtin_ia32_comineq
__builtin_ia32_cvtpd2pi
__builtin_ia32_cvtpi2pd
__builtin_ia32_cvtpi2ps
__builtin_ia32_cvtps2pi
__builtin_ia32_cvtsi2ss
__builtin_ia32_cvtsi642ss
__builtin_ia32_cvtss2si
__builtin_ia32_cvtss2si64
__builtin_ia32_cvttpd2pi
__builtin_ia32_cvttps2pi
__builtin_ia32_cvttss2si
__builtin_ia32_cvttss2si64
__builtin_ia32_divss
__builtin_ia32_maxps
__builtin_ia32_maxss
__builtin_ia32_minps
__builtin_ia32_minss
__builtin_ia32_movmskps
__builtin_ia32_mulss
__builtin_ia32_pshufw
__builtin_ia32_rcpps
__builtin_ia32_rcpss
__builtin_ia32_rsqrtps
__builtin_ia32_rsqrtss
__builtin_ia32_sfence
__builtin_ia32_sqrtps
__builtin_ia32_sqrtss
__builtin_ia32_storeups
__builtin_ia32_subss
__builtin_ia32_ucomieq
__builtin_ia32_ucomige
__builtin_ia32_ucomigt
__builtin_ia32_ucomile
__builtin_ia32_ucomilt
__builtin_ia32_ucomineq
__builtin_ia32_addsd
__builtin_ia32_clflush
__builtin_ia32_cmppd
__builtin_ia32_cmpsd
__builtin_ia32_comisdeq
__builtin_ia32_comisdge
__builtin_ia32_comisdgt
__builtin_ia32_comisdle
__builtin_ia32_comisdlt
__builtin_ia32_comisdneq
__builtin_ia32_cvtdq2pd
__builtin_ia32_cvtdq2ps
__builtin_ia32_cvtpd2dq
__builtin_ia32_cvtpd2ps
__builtin_ia32_cvtps2dq
__builtin_ia32_cvtps2pd
__builtin_ia32_cvtsd2si
__builtin_ia32_cvtsd2si64
__builtin_ia32_cvtsd2ss
__builtin_ia32_cvtsi2sd
__builtin_ia32_cvtsi642sd
__builtin_ia32_cvtss2sd
__builtin_ia32_cvttpd2dq
__builtin_ia32_cvttps2dq
__builtin_ia32_cvttsd2si
__builtin_ia32_cvttsd2si64
__builtin_ia32_divsd
__builtin_ia32_lfence
__builtin_ia32_maskmovdqu
__builtin_ia32_maxpd
__builtin_ia32_maxsd
__builtin_ia32_mfence
__builtin_ia32_minpd
__builtin_ia32_minsd
__builtin_ia32_movmskpd
__builtin_ia32_mulsd
__builtin_ia32_packssdw128
__builtin_ia32_packsswb128
__builtin_ia32_packuswb128
__builtin_ia32_paddsb128
__builtin_ia32_paddsw128
__builtin_ia32_paddusb128
__builtin_ia32_paddusw128
__builtin_ia32_pause
__builtin_ia32_pavgb128
__builtin_ia32_pavgw128
__builtin_ia32_pmaddwd128
__builtin_ia32_pmaxsw128
__builtin_ia32_pmaxub128
__builtin_ia32_pminsw128
__builtin_ia32_pminub128
__builtin_ia32_pmovmskb128
__builtin_ia32_pmulhw128
__builtin_ia32_pmulhuw128
__builtin_ia32_pmuludq128
__builtin_ia32_psadbw128
__builtin_ia32_pshufd
__builtin_ia32_pshufhw
__builtin_ia32_pshuflw
__builtin_ia32_pslld128
__builtin_ia32_psllq128
__builtin_ia32_psllw128
__builtin_ia32_pslldi128
__builtin_ia32_psllqi128
__builtin_ia32_psllwi128
__builtin_ia32_psrad128
__builtin_ia32_psraw128
__builtin_ia32_psradi128
__builtin_ia32_psrawi128
__builtin_ia32_psrld128
__builtin_ia32_psrlq128
__builtin_ia32_psrlw128
__builtin_ia32_psrldi128
__builtin_ia32_psrlqi128
__builtin_ia32_psrlwi128
__builtin_ia32_psubsb128
__builtin_ia32_psubsw128
__builtin_ia32_psubusb128
__builtin_ia32_psubusw128
__builtin_ia32_sqrtpd
__builtin_ia32_sqrtsd
__builtin_ia32_storelv4si
__builtin_ia32_storedqu
__builtin_ia32_storeupd
__builtin_ia32_subsd
__builtin_ia32_ucomisdeq
__builtin_ia32_ucomisdge
__builtin_ia32_ucomisdgt
__builtin_ia32_ucomisdle
__builtin_ia32_ucomisdlt
__builtin_ia32_ucomisdneq
__builtin_ia32_addsubpd
__builtin_ia32_addsubps
__builtin_ia32_haddpd
__builtin_ia32_haddps
__builtin_ia32_hsubpd
__builtin_ia32_hsubps
__builtin_ia32_lddqu
__builtin_ia32_monitor
__builtin_ia32_mwait
__builtin_ia32_blendvpd
__builtin_ia32_blendvps
__builtin_ia32_dppd
__builtin_ia32_dpps
__builtin_ia32_extractps128
__builtin_ia32_insertps128
__builtin_ia32_movntdqa
__builtin_ia32_mpsadbw128
__builtin_ia32_packusdw128
__builtin_ia32_pblendvb128
__builtin_ia32_phminposuw128
__builtin_ia32_pmaxsb128
__builtin_ia32_pmaxsd128
__builtin_ia32_pmaxud128
__builtin_ia32_pmaxuw128
__builtin_ia32_pminsb128
__builtin_ia32_pminsd128
__builtin_ia32_pminud128
__builtin_ia32_pminuw128
__builtin_ia32_pmovsxbd128
__builtin_ia32_pmovsxbq128
__builtin_ia32_pmovsxbw128
__builtin_ia32_pmovsxdq128
__builtin_ia32_pmovsxwd128
__builtin_ia32_pmovsxwq128
__builtin_ia32_pmovzxbd128
__builtin_ia32_pmovzxbq128
__builtin_ia32_pmovzxbw128
__builtin_ia32_pmovzxdq128
__builtin_ia32_pmovzxwd128
__builtin_ia32_pmovzxwq128
__builtin_ia32_pmuldq128
__builtin_ia32_ptestc128
__builtin_ia32_ptestnzc128
__builtin_ia32_ptestz128
__builtin_ia32_roundpd
__builtin_ia32_roundps
__builtin_ia32_roundsd
__builtin_ia32_roundss
__builtin_ia32_crc32hi
__builtin_ia32_crc32si
__builtin_ia32_crc32qi
__builtin_ia32_crc32di
__builtin_ia32_pcmpestri128
__builtin_ia32_pcmpestria128
__builtin_ia32_pcmpestric128
__builtin_ia32_pcmpestrio128
__builtin_ia32_pcmpestris128
__builtin_ia32_pcmpestriz128
__builtin_ia32_pcmpestrm128
__builtin_ia32_pcmpistri128
__builtin_ia32_pcmpistria128
__builtin_ia32_pcmpistric128
__builtin_ia32_pcmpistrio128
__builtin_ia32_pcmpistris128
__builtin_ia32_pcmpistriz128
__builtin_ia32_pcmpistrm128
__builtin_ia32_extrq
__builtin_ia32_extrqi
__builtin_ia32_insertq
__builtin_ia32_insertqi
__builtin_ia32_movntsd
__builtin_ia32_movntss
__builtin_ia32_pabsb
__builtin_ia32_pabsb128
__builtin_ia32_pabsd
__builtin_ia32_pabsd128
__builtin_ia32_pabsw
__builtin_ia32_pabsw128
__builtin_ia32_phaddd
__builtin_ia32_phaddd128
__builtin_ia32_phaddsw
__builtin_ia32_phaddsw128
__builtin_ia32_phaddw
__builtin_ia32_phaddw128
__builtin_ia32_phsubd
__builtin_ia32_phsubd128
__builtin_ia32_phsubsw
__builtin_ia32_phsubsw128
__builtin_ia32_phsubw
__builtin_ia32_phsubw128
__builtin_ia32_pmaddubsw
__builtin_ia32_pmaddubsw128
__builtin_ia32_pmulhrsw
__builtin_ia32_pmulhrsw128
__builtin_ia32_pshufb
__builtin_ia32_pshufb128
__builtin_ia32_psignb
__builtin_ia32_psignb128
__builtin_ia32_psignd
__builtin_ia32_psignd128
__builtin_ia32_psignw
__builtin_ia32_psignw128
__builtin_ia32_subborrow_u32
__builtin_ia32_subborrow_u64
__builtin_ia32_bextri_u32
__builtin_ia32_bextri_u64
__builtin_ia32_vcvtph2ps
__builtin_ia32_vcvtph2ps256
__builtin_ia32_vcvtps2ph
__builtin_ia32_vcvtps2ph256
__builtin_ia32_wrfsbase32
__builtin_ia32_wrfsbase64
__builtin_ia32_wrgsbase32
__builtin_ia32_wrgsbase64
__builtin_ia32_xabort
__builtin_ia32_xbegin
__builtin_ia32_xend
__builtin_ia32_vfrczpd
__builtin_ia32_vfrczpd256
__builtin_ia32_vfrczps
__builtin_ia32_vfrczps256
__builtin_ia32_vfrczsd
__builtin_ia32_vfrczss
__builtin_ia32_vpcmov
__builtin_ia32_vpcmov_256
__builtin_ia32_vpcomb
__builtin_ia32_vpcomd
__builtin_ia32_vpcomq
__builtin_ia32_vpcomub
__builtin_ia32_vpcomud
__builtin_ia32_vpcomuq
__builtin_ia32_vpcomuw
__builtin_ia32_vpcomw
__builtin_ia32_vpermil2pd
__builtin_ia32_vpermil2pd256
__builtin_ia32_vpermil2ps
__builtin_ia32_vpermil2ps256
__builtin_ia32_vphaddbd
__builtin_ia32_vphaddbq
__builtin_ia32_vphaddbw
__builtin_ia32_vphadddq
__builtin_ia32_vphaddubd
__builtin_ia32_vphaddubq
__builtin_ia32_vphaddubw
__builtin_ia32_vphaddudq
__builtin_ia32_vphadduwd
__builtin_ia32_vphadduwq
__builtin_ia32_vphaddwd
__builtin_ia32_vphaddwq
__builtin_ia32_vphsubbw
__builtin_ia32_vphsubdq
__builtin_ia32_vphsubwd
__builtin_ia32_vpmacsdd
__builtin_ia32_vpmacsdqh
__builtin_ia32_vpmacsdql
__builtin_ia32_vpmacssdd
__builtin_ia32_vpmacssdqh
__builtin_ia32_vpmacssdql
__builtin_ia32_vpmacsswd
__builtin_ia32_vpmacssww
__builtin_ia32_vpmacswd
__builtin_ia32_vpmacsww
__builtin_ia32_vpmadcsswd
__builtin_ia32_vpmadcswd
__builtin_ia32_vpperm
__builtin_ia32_vprotb
__builtin_ia32_vprotbi
__builtin_ia32_vprotd
__builtin_ia32_vprotdi
__builtin_ia32_vprotq
__builtin_ia32_vprotqi
__builtin_ia32_vprotw
__builtin_ia32_vprotwi
__builtin_ia32_vpshab
__builtin_ia32_vpshad
__builtin_ia32_vpshaq
__builtin_ia32_vpshaw
__builtin_ia32_vpshlb
__builtin_ia32_vpshld
__builtin_ia32_vpshlq
__builtin_ia32_vpshlw
__builtin_ia32_xtest
N4llvm8ArgumentE
N4llvm10ilist_nodeINS_8ArgumentEEE
N4llvm15ilist_half_nodeINS_8ArgumentEEE
N4llvm8FunctionE
N4llvm10ilist_nodeINS_8FunctionEEE
N4llvm15ilist_half_nodeINS_8FunctionEEE
N4llvm14GVMaterializerE
N4llvm11GlobalValueE
N4llvm12GlobalObjectE
N4llvm14GlobalVariableE
N4llvm10ilist_nodeINS_14GlobalVariableEEE
N4llvm15ilist_half_nodeINS_14GlobalVariableEEE
N4llvm11GlobalAliasE
N4llvm10ilist_nodeINS_11GlobalAliasEEE
N4llvm15ilist_half_nodeINS_11GlobalAliasEEE
N12_GLOBAL__N_122PrintModulePassWrapperE
N12_GLOBAL__N_124PrintFunctionPassWrapperE
N12_GLOBAL__N_119PrintBasicBlockPassE
N4llvm9InlineAsmE
N4llvm11InstructionE
N4llvm10ilist_nodeINS_11InstructionEEE
N4llvm15ilist_half_nodeINS_11InstructionEEE
ccccccccc
N4llvm14TerminatorInstE
N4llvm16UnaryInstructionE
N4llvm8CastInstE
N4llvm7CmpInstE
N4llvm8CallInstE
N4llvm10InvokeInstE
N4llvm10ReturnInstE
N4llvm10ResumeInstE
N4llvm17CleanupReturnInstE
N4llvm15CatchEndPadInstE
N4llvm15CatchReturnInstE
N4llvm12CatchPadInstE
N4llvm16TerminatePadInstE
N4llvm15UnreachableInstE
N4llvm10BranchInstE
N4llvm10AllocaInstE
N4llvm10SwitchInstE
N4llvm14IndirectBrInstE
N4llvm14LandingPadInstE
N4llvm14CleanupPadInstE
N4llvm8LoadInstE
N4llvm9StoreInstE
N4llvm17AtomicCmpXchgInstE
N4llvm13AtomicRMWInstE
N4llvm9FenceInstE
N4llvm18ExtractElementInstE
N4llvm17InsertElementInstE
N4llvm17ShuffleVectorInstE
N4llvm14BinaryOperatorE
N4llvm9TruncInstE
N4llvm8ZExtInstE
N4llvm8SExtInstE
N4llvm11FPTruncInstE
N4llvm9FPExtInstE
N4llvm10UIToFPInstE
N4llvm10SIToFPInstE
N4llvm10FPToUIInstE
N4llvm10FPToSIInstE
N4llvm12PtrToIntInstE
N4llvm12IntToPtrInstE
N4llvm11BitCastInstE
N4llvm17AddrSpaceCastInstE
N4llvm17UnaryConstantExprE
N4llvm12ConstantExprE
N4llvm18BinaryConstantExprE
N4llvm18SelectConstantExprE
N4llvm26ExtractElementConstantExprE
N4llvm25InsertElementConstantExprE
N4llvm25ShuffleVectorConstantExprE
N4llvm24ExtractValueConstantExprE
N4llvm23InsertValueConstantExprE
N4llvm19CompareConstantExprE
N4llvm25GetElementPtrConstantExprE
N4llvm10FoldingSetINS_13AttributeImplEEE
N4llvm10FoldingSetINS_16AttributeSetImplEEE
N4llvm10FoldingSetINS_16AttributeSetNodeEEE
N4llvm27PassManagerPrettyStackEntryE
N4llvm13PMDataManagerE
N4llvm13FPPassManagerE
N4llvm6legacy23FunctionPassManagerImplE
N4llvm17PMTopLevelManagerE
N4llvm6legacy15PassManagerImplE
N4llvm6legacy15PassManagerBaseE
N4llvm6legacy19FunctionPassManagerE
N4llvm6legacy11PassManagerE
N4llvm2cl3optIN12_GLOBAL__N_114PassDebugLevelELb0ENS0_6parserIS3_EEEE
N4llvm2cl11opt_storageIN12_GLOBAL__N_114PassDebugLevelELb0ELb0EEE
N4llvm2cl6parserIN12_GLOBAL__N_114PassDebugLevelEEE
N4llvm2cl11OptionValueIN12_GLOBAL__N_114PassDebugLevelEEE
N4llvm2cl15OptionValueBaseIN12_GLOBAL__N_114PassDebugLevelELb0EEE
N4llvm2cl15OptionValueCopyIN12_GLOBAL__N_114PassDebugLevelEEE
N12_GLOBAL__N_113MPPassManagerE
N12_GLOBAL__N_113BBPassManagerE
N4llvm2cl3optIbLb1ENS0_6parserIbEEEE
N4llvm2cl11opt_storageIbLb1ELb0EEE
N4llvm15MetadataAsValueE
N4llvm4PassE
N4llvm10ModulePassE
N4llvm13ImmutablePassE
N4llvm12FunctionPassE
N4llvm14BasicBlockPassE
N4llvm14PassNameParserE
N4llvm24PassRegistrationListenerE
N4llvm2cl6parserIPKNS_8PassInfoEEE
N12_GLOBAL__N_116GetCFGOnlyPassesE
N4llvm2cl11OptionValueIPKNS_8PassInfoEEE
N4llvm2cl15OptionValueBaseIPKNS_8PassInfoELb0EEE
N4llvm2cl15OptionValueCopyIPKNS_8PassInfoEEE
N4llvm4UserE
N4llvm8OperatorE
N4llvm10CallbackVHE
N4llvm15ValueHandleBaseE
N4llvm5ValueE
N12_GLOBAL__N_118VerifierLegacyPassE
N4llvm20CallGraphWrapperPassE
N4llvm16CallGraphSCCPassE
N12_GLOBAL__N_113CGPassManagerE
N12_GLOBAL__N_118PrintCallGraphPassE
N12_GLOBAL__N_115CallGraphViewerE
N4llvm26DOTGraphTraitsModuleViewerINS_20CallGraphWrapperPassELb1EPNS_9CallGraphENS_34AnalysisCallGraphWrapperPassTraitsEEE
N12_GLOBAL__N_116CallGraphPrinterE
N4llvm27DOTGraphTraitsModulePrinterINS_20CallGraphWrapperPassELb1EPNS_9CallGraphENS_34AnalysisCallGraphWrapperPassTraitsEEE
N12_GLOBAL__N_113GlobalsModRefE
N12_GLOBAL__N_113GlobalsModRef22DeletionCallbackHandleE
N4llvm18InlineCostAnalysisE
N12_GLOBAL__N_112ArgPromotionE
N12_GLOBAL__N_111BarrierNoopE
N12_GLOBAL__N_113ConstantMergeE
N12_GLOBAL__N_13DAEE
N12_GLOBAL__N_13DAHE
N12_GLOBAL__N_128EliminateAvailableExternallyE
N12_GLOBAL__N_113FunctionAttrsE
N12_GLOBAL__N_119ArgumentUsesTrackerE
N12_GLOBAL__N_19GlobalDCEE
N12_GLOBAL__N_19GlobalOptE
N12_GLOBAL__N_14IPCPE
N12_GLOBAL__N_113AlwaysInlinerE
N12_GLOBAL__N_113SimpleInlinerE
N4llvm7InlinerE
N12_GLOBAL__N_115InternalizePassE
NSt3__114basic_ifstreamIcNS_11char_traitsIcEEEE
NSt3__113basic_filebufIcNS_11char_traitsIcEEEE
N12_GLOBAL__N_113LoopExtractorE
N12_GLOBAL__N_119SingleLoopExtractorE
N12_GLOBAL__N_118BlockExtractorPassE
N12_GLOBAL__N_112LowerBitSetsE
N12_GLOBAL__N_114MergeFunctionsE
N12_GLOBAL__N_114PartialInlinerE
N12_GLOBAL__N_17PruneEHE
N12_GLOBAL__N_123StripDeadPrototypesPassE
N12_GLOBAL__N_112StripSymbolsE
N12_GLOBAL__N_120StripNonDebugSymbolsE
N12_GLOBAL__N_117StripDebugDeclareE
N12_GLOBAL__N_118StripDeadDebugInfoE
N12_GLOBAL__N_124InstructionCombiningPassE
N12_GLOBAL__N_116AddressSanitizerE
N12_GLOBAL__N_122AddressSanitizerModuleE
N12_GLOBAL__N_114BoundsCheckingE
N12_GLOBAL__N_117DataFlowSanitizerE
N12_GLOBAL__N_112GCOVProfilerE
N4llvm17GetElementPtrInstE
N4llvm10SelectInstE
N4llvm8ICmpInstE
N12_GLOBAL__N_115MemorySanitizerE
N12_GLOBAL__N_117VarArgAMD64HelperE
N12_GLOBAL__N_112VarArgHelperE
N12_GLOBAL__N_118VarArgMIPS64HelperE
N12_GLOBAL__N_116VarArgNoOpHelperE
N12_GLOBAL__N_114InstrProfilingE
N12_GLOBAL__N_19SafeStackE
N12_GLOBAL__N_123SanitizerCoverageModuleE
N12_GLOBAL__N_115ThreadSanitizerE
N12_GLOBAL__N_115ELFObjectWriterE
N4llvm12MCAsmBackendE
N4llvm9MCAsmInfoE
N4llvm13MCAsmInfoCOFFE
N4llvm18MCAsmInfoMicrosoftE
N4llvm16MCAsmInfoGNUCOFFE
N4llvm15MCAsmInfoDarwinE
N4llvm12MCAsmInfoELFE
N12_GLOBAL__N_113MCAsmStreamerE
N4llvm13format_objectIJhEEE
N4llvm13MCCodeEmitterE
N4llvm23MCELFObjectTargetWriterE
N4llvm13MCELFStreamerE
N4llvm12MCTargetExprE
N4llvm6MCExprE
N4llvm13MCInstPrinterE
N4llvm15MCInstrAnalysisE
N12_GLOBAL__N_115MCMachOStreamerE
N4llvm24MCMachObjectTargetWriterE
N12_GLOBAL__N_114MCNullStreamerE
N4llvm16MCObjectStreamerE
N4llvm14MCObjectWriterE
N4llvm9MCSectionE
N4llvm13MCSectionCOFFE
N4llvm12MCSectionELFE
N4llvm14MCSectionMachOE
N4llvm16MCTargetStreamerE
N4llvm10MCStreamerE
N4llvm7Win64EH13UnwindEmitterE
N4llvm5WinEH13UnwindEmitterE
N4llvm16MachObjectWriterE
ZNK4llvm14MCLOHDirective11getEmitSizeERKNS_16MachObjectWriterERKNS_11MCAsmLayoutEE20raw_counting_ostream
N4llvm13format_objectIJjPKcS2_EEE
N4llvm27MCWinCOFFObjectTargetWriterE
N12_GLOBAL__N_119WinCOFFObjectWriterE
N4llvm17MCWinCOFFStreamerE
N12_GLOBAL__N_110ObjCARCOptE
N12_GLOBAL__N_113ObjCARCExpandE
N12_GLOBAL__N_113ObjCARCAPElimE
N4llvm7objcarc20ObjCARCAliasAnalysisE
N12_GLOBAL__N_115ObjCARCContractE
N12_GLOBAL__N_16PAEvalE
N12_GLOBAL__N_14ADCEE
Alignment from assumptions
N12_GLOBAL__N_124AlignmentFromAssumptionsE
N12_GLOBAL__N_14BDCEE
N12_GLOBAL__N_116ConstantHoistingE
N12_GLOBAL__N_119ConstantPropagationE
N12_GLOBAL__N_126CorrelatedValuePropagationE
N12_GLOBAL__N_119DeadInstEliminationE
N12_GLOBAL__N_13DCEE
N12_GLOBAL__N_13DSEE
N12_GLOBAL__N_118EarlyCSELegacyPassE
N12_GLOBAL__N_114FlattenCFGPassE
N12_GLOBAL__N_19Float2IntE
NSt3__110__function6__funcIZN12_GLOBAL__N_19Float2Int12walkForwardsEvE3$_0NS_9allocatorIS4_EEFN4llvm13ConstantRangeENS7_8ArrayRefIS8_EEEEE
NSt3__110__function6__baseIFN4llvm13ConstantRangeENS2_8ArrayRefIS3_EEEEE
ZN12_GLOBAL__N_19Float2Int12walkForwardsEvE3$_0
NSt3__110__function6__funcIZN12_GLOBAL__N_19Float2Int12walkForwardsEvE3$_1NS_9allocatorIS4_EEFN4llvm13ConstantRangeENS7_8ArrayRefIS8_EEEEE
ZN12_GLOBAL__N_19Float2Int12walkForwardsEvE3$_1
NSt3__110__function6__funcIZN12_GLOBAL__N_19Float2Int12walkForwardsEvE3$_2NS_9allocatorIS4_EEFN4llvm13ConstantRangeENS7_8ArrayRefIS8_EEEEE
ZN12_GLOBAL__N_19Float2Int12walkForwardsEvE3$_2
NSt3__110__function6__funcIZN12_GLOBAL__N_19Float2Int12walkForwardsEvE3$_3NS_9allocatorIS4_EEFN4llvm13ConstantRangeENS7_8ArrayRefIS8_EEEEE
ZN12_GLOBAL__N_19Float2Int12walkForwardsEvE3$_3
NSt3__110__function6__funcIZN12_GLOBAL__N_19Float2Int12walkForwardsEvE3$_4NS_9allocatorIS4_EEFN4llvm13ConstantRangeENS7_8ArrayRefIS8_EEEEE
ZN12_GLOBAL__N_19Float2Int12walkForwardsEvE3$_4
N12_GLOBAL__N_13GVNE
N12_GLOBAL__N_130InductiveRangeCheckEliminationE
N4llvm2cl3optI14ReplaceExitValLb0ENS0_6parserIS2_EEEE
N4llvm2cl11opt_storageI14ReplaceExitValLb0ELb0EEE
N4llvm2cl6parserI14ReplaceExitValEE
N4llvm2cl11OptionValueI14ReplaceExitValEE
N4llvm2cl15OptionValueBaseI14ReplaceExitValLb0EEE
N4llvm2cl15OptionValueCopyI14ReplaceExitValEE
N12_GLOBAL__N_114IndVarSimplifyE
N12_GLOBAL__N_121IndVarSimplifyVisitorE
N12_GLOBAL__N_113JumpThreadingE
N12_GLOBAL__N_14LICME
N12_GLOBAL__N_112LoopPromoterE
N12_GLOBAL__N_111LoadCombineE
N12_GLOBAL__N_112LoopDeletionE
Loop Distribition
N12_GLOBAL__N_114LoopDistributeE
N12_GLOBAL__N_118LoopIdiomRecognizeE
N12_GLOBAL__N_116LoopInstSimplifyE
N12_GLOBAL__N_115LoopInterchangeE
N12_GLOBAL__N_110LoopRerollE
N12_GLOBAL__N_110LoopRotateE
N4llvm18ValueMapCallbackVHIPKNS_5ValueENS_6WeakVHENS_14ValueMapConfigIS3_NS_3sys10SmartMutexILb0EEEEEEE
N12_GLOBAL__N_115LoopSimplifyCFGE
N12_GLOBAL__N_118LoopStrengthReduceE
N12_GLOBAL__N_110LoopUnrollE
N12_GLOBAL__N_112LoopUnswitchE
N12_GLOBAL__N_111LowerAtomicE
N12_GLOBAL__N_120LowerExpectIntrinsicE
N12_GLOBAL__N_19MemCpyOptE
N12_GLOBAL__N_121MergedLoadStoreMotionE
N12_GLOBAL__N_115NaryReassociateE
N12_GLOBAL__N_123PartiallyInlineLibCallsE
N12_GLOBAL__N_115PlaceSafepointsE
N12_GLOBAL__N_127PlaceBackedgeSafepointsImplE
N12_GLOBAL__N_111ReassociateE
N12_GLOBAL__N_18RegToMemE
N12_GLOBAL__N_123RewriteStatepointsForGCE
N12_GLOBAL__N_14SCCPE
N12_GLOBAL__N_16IPSCCPE
N12_GLOBAL__N_14SROAE
N12_GLOBAL__N_114AllocaPromoterE
N12_GLOBAL__N_119SampleProfileLoaderE
N12_GLOBAL__N_17SROA_DTE
N12_GLOBAL__N_14SROAE
N12_GLOBAL__N_114AllocaPromoterE
N12_GLOBAL__N_110SROA_SSAUpE
N12_GLOBAL__N_110ScalarizerE
N4llvm11InstVisitorIN12_GLOBAL__N_110ScalarizerEbEE
N12_GLOBAL__N_126SeparateConstOffsetFromGEPE
N12_GLOBAL__N_115CFGSimplifyPassE
N12_GLOBAL__N_17SinkingE
N12_GLOBAL__N_120SpeculativeExecutionE
N12_GLOBAL__N_126StraightLineStrengthReduceE
N12_GLOBAL__N_114StructurizeCFGE
N12_GLOBAL__N_112TailCallElimE
N12_GLOBAL__N_116AddFastMathFlagsE
N12_GLOBAL__N_113ExpandAllocasE
N12_GLOBAL__N_118FlattenControlFlowE
N12_GLOBAL__N_114FMAContractionE
N12_GLOBAL__N_117GPUCodeGenPrepareE
N12_GLOBAL__N_115GPUDMAPromotionE
N12_GLOBAL__N_110LSShrinkerE
N12_GLOBAL__N_112LSVectorizerE
N12_GLOBAL__N_19LoopMergeE
N12_GLOBAL__N_116LoopNoopAnalysisE
N12_GLOBAL__N_113MSAATransformE
N12_GLOBAL__N_114OptimizeFencesE
N12_GLOBAL__N_116ConstantProgramsE
NSt3__110__function6__funcINS_8functionIFbRKN4llvm8FunctionEEEENS_9allocatorIS8_EEFbRS4_EEE
NSt3__110__function6__baseIFbRN4llvm8FunctionEEEE
NSt3__18functionIFbRKN4llvm8FunctionEEEE
NSt3__110__function34__maybe_derive_from_unary_functionIFbRKN4llvm8FunctionEEEE
NSt3__114unary_functionIRKN4llvm8FunctionEbEE
NSt3__110__function35__maybe_derive_from_binary_functionIFbRKN4llvm8FunctionEEEE
N12_GLOBAL__N_118InvariantExtractorE
N12_GLOBAL__N_19ScalarizeE
N12_GLOBAL__N_119TwoPassPunchthroughE
NSt3__110__function6__funcIZN12_GLOBAL__N_112SplitAnalyze15checkHeuristicsERNS2_15SplitDeclGatherEE3$_1NS_9allocatorIS6_EEFbPN4llvm5ValueEEEE
NSt3__110__function6__baseIFbPN4llvm5ValueEEEE
ZN12_GLOBAL__N_112SplitAnalyze15checkHeuristicsERNS_15SplitDeclGatherEE3$_1
NSt3__110__function6__funcIZN12_GLOBAL__N_112SplitAnalyze15checkHeuristicsERNS2_15SplitDeclGatherEE3$_2NS_9allocatorIS6_EEFbPN4llvm5ValueEEEE
ZN12_GLOBAL__N_112SplitAnalyze15checkHeuristicsERNS_15SplitDeclGatherEE3$_2
NSt3__110__function6__funcIPFjPN4llvm5ValueEENS_9allocatorIS6_EES5_EE
NSt3__110__function6__baseIFjPN4llvm5ValueEEEE
PFjPN4llvm5ValueEE
FjPN4llvm5ValueEE
N12_GLOBAL__N_117TrimVertexDMAListE
agc.main
0123456789ABCDEF0
0123456789abcdef0
0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZ
N4llvm2cl6OptionE
N4llvm2cl11OptionValueINS0_13boolOrDefaultEEE
N4llvm2cl15OptionValueCopyINS0_13boolOrDefaultEEE
N4llvm2cl18GenericOptionValueE
N4llvm2cl11OptionValueINSt3__112basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEEEE
N4llvm2cl19generic_parser_baseE
N4llvm2cl17basic_parser_implE
N4llvm2cl6parserIbEE
N4llvm2cl12basic_parserIbEE
N4llvm2cl6parserINS0_13boolOrDefaultEEE
N4llvm2cl12basic_parserINS0_13boolOrDefaultEEE
N4llvm2cl6parserIiEE
N4llvm2cl12basic_parserIiEE
N4llvm2cl6parserIjEE
N4llvm2cl12basic_parserIjEE
N4llvm2cl6parserIyEE
N4llvm2cl12basic_parserIyEE
N4llvm2cl6parserIdEE
N4llvm2cl12basic_parserIdEE
N4llvm2cl6parserIfEE
N4llvm2cl12basic_parserIfEE
N4llvm2cl6parserINSt3__112basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEEEE
N4llvm2cl12basic_parserINSt3__112basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEEEE
N4llvm2cl6parserIcEE
N4llvm2cl12basic_parserIcEE
N4llvm2cl3optIjLb0ENS0_6parserIjEEEE
N4llvm2cl11opt_storageIjLb0ELb0EEE
N4llvm2cl3optIiLb0ENS0_6parserIiEEEE
N4llvm2cl11opt_storageIiLb0ELb0EEE
N4llvm2cl3optINSt3__112basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEELb0ENS0_6parserIS8_EEEE
N4llvm2cl11opt_storageINSt3__112basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEELb0ELb1EEE
NSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEE
NSt3__121__basic_string_commonILb1EEE
N4llvm2cl3optIcLb0ENS0_6parserIcEEEE
N4llvm2cl11opt_storageIcLb0ELb0EEE
N4llvm2cl3optIbLb0ENS0_6parserIbEEEE
N4llvm2cl11opt_storageIbLb0ELb0EEE
N4llvm2cl5aliasE
N4llvm18BumpPtrStringSaverE
N12_GLOBAL__N_111HelpPrinterE
N12_GLOBAL__N_122CategorizedHelpPrinterE
N4llvm2cl11OptionValueIcEE
N4llvm2cl15OptionValueBaseIcLb0EEE
N4llvm2cl15OptionValueCopyIcEE
N4llvm2cl3optIN12_GLOBAL__N_111HelpPrinterELb1ENS0_6parserIbEEEE
N4llvm2cl11opt_storageIN12_GLOBAL__N_111HelpPrinterELb1ELb1EEE
N4llvm2cl11OptionValueIN12_GLOBAL__N_111HelpPrinterEEE
N4llvm2cl15OptionValueBaseIN12_GLOBAL__N_111HelpPrinterELb1EEE
N4llvm2cl3optIN12_GLOBAL__N_118HelpPrinterWrapperELb1ENS0_6parserIbEEEE
N4llvm2cl11opt_storageIN12_GLOBAL__N_118HelpPrinterWrapperELb1ELb1EEE
N4llvm2cl11OptionValueIN12_GLOBAL__N_118HelpPrinterWrapperEEE
N4llvm2cl15OptionValueBaseIN12_GLOBAL__N_118HelpPrinterWrapperELb1EEE
N4llvm2cl3optIN12_GLOBAL__N_114VersionPrinterELb1ENS0_6parserIbEEEE
N4llvm2cl11opt_storageIN12_GLOBAL__N_114VersionPrinterELb1ELb1EEE
N4llvm2cl11OptionValueIN12_GLOBAL__N_114VersionPrinterEEE
N4llvm2cl15OptionValueBaseIN12_GLOBAL__N_114VersionPrinterELb1EEE
N4llvm14FoldingSetImplE
N4llvm21formatted_raw_ostreamE
N4llvm12MemoryBufferE
N12_GLOBAL__N_115MemoryBufferMemE
N12_GLOBAL__N_120MemoryBufferMMapFileE
N4llvm12MemoryObjectE
N4llvm15Rot13ObfuscatorE
N4llvm19IncrementObfuscatorE
N4llvm22PrettyStackTraceStringE
N4llvm21PrettyStackTraceEntryE
N4llvm23PrettyStackTraceProgramE
N4llvm2cl3optIyLb0ENS0_6parserIyEEEE
N4llvm2cl11opt_storageIyLb0ELb0EEE
N4llvm2cl11OptionValueIyEE
N4llvm2cl15OptionValueBaseIyLb0EEE
N4llvm2cl15OptionValueCopyIyEE
()^$|*+?.[]\{}
N4llvm21StreamingMemoryObjectE
N12_GLOBAL__N_115RawMemoryObjectE
N4llvm11StringSaverE
Y@N4llvm2cl3optINSt3__112basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEELb1ENS0_6parserIS8_EEEE
N4llvm2cl11opt_storageINSt3__112basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEELb1ELb1EEE
N4llvm13format_objectIJddEEE
N4llvm13format_objectIJxEEE
N4llvm4yaml8NullNodeE
N4llvm4yaml4NodeE
N4llvm4yaml10ScalarNodeE
N4llvm4yaml15BlockScalarNodeE
N4llvm4yaml12KeyValueNodeE
N4llvm4yaml11MappingNodeE
N4llvm4yaml12SequenceNodeE
N4llvm4yaml9AliasNodeE
N4llvm4yaml5Input5HNodeE
N4llvm4yaml5Input10EmptyHNodeE
N4llvm4yaml5Input11ScalarHNodeE
N4llvm4yaml5Input8MapHNodeE
N4llvm4yaml5Input13SequenceHNodeE
N4llvm4yaml2IOE
N4llvm4yaml5InputE
N4llvm4yaml6OutputE
N4llvm13format_objectIJfEEE
N4llvm13format_objectIJtEEE
0x0000000000000000
                                                                                
N4llvm11raw_ostreamE
N4llvm18raw_string_ostreamE
N4llvm19raw_svector_ostreamE
N4llvm17raw_pwrite_streamE
N4llvm16raw_null_ostreamE
N4llvm18format_object_baseE
N4llvm14raw_fd_ostreamE
N4llvm13format_objectIJdEEE
[0;30m
[0;31m
[0;32m
[0;33m
[0;34m
[0;35m
[0;36m
[0;37m
[0;1;30m
[0;1;31m
[0;1;32m
[0;1;33m
[0;1;34m
[0;1;35m
[0;1;36m
[0;1;37m
[0;40m
[0;41m
[0;42m
[0;43m
[0;44m
[0;45m
[0;46m
[0;47m
[0;1;40m
[0;1;41m
[0;1;42m
[0;1;43m
[0;1;44m
[0;1;45m
[0;1;46m
[0;1;47m
N4llvm13format_objectIJiEEE
N4llvm13format_objectIJiPKcEEE
N4llvm13format_objectIJimEEE
N4llvm13format_objectIJjEEE
N4llvm24TargetLoweringObjectFileE
N4llvm16MCObjectFileInfoE
N4llvm13TargetMachineE
NSt3__110__function6__funcIZN4llvm13TargetMachine19getTargetIRAnalysisEvE3$_0NS_9allocatorIS4_EEFNS2_19TargetTransformInfoERNS2_8FunctionEEEE
ZN4llvm13TargetMachine19getTargetIRAnalysisEvE3$_0
N4llvm19TargetSubtargetInfoE
N4llvm15MCSubtargetInfoE
N12_GLOBAL__N_117AddDiscriminatorsE
N12_GLOBAL__N_118BreakCriticalEdgesE
N12_GLOBAL__N_19InstNamerE
N4llvm7PHINodeE
N12_GLOBAL__N_15LCSSAE
N12_GLOBAL__N_112LoopSimplifyE
N12_GLOBAL__N_111LowerInvokeE
N12_GLOBAL__N_111LowerSwitchE
N12_GLOBAL__N_111PromotePassE
N12_GLOBAL__N_111MetaRenamerE
N4llvm10ObfuscatorE
NSt3__110__function6__funcIZL21obfuscateModuleModifyRN4llvm6ModuleERNS2_10ObfuscatorENS_8functionIFbRNS2_5ValueEEEEE3$_2NS_9allocatorISC_EEFNS2_9StringRefESF_EEE
NSt3__110__function6__baseIFN4llvm9StringRefES3_EEE
ZL21obfuscateModuleModifyRN4llvm6ModuleERNS_10ObfuscatorENSt3__18functionIFbRNS_5ValueEEEEE3$_2
N12_GLOBAL__N_115ObfuscateModuleE
NSt3__110__function6__funcIZN4llvm15obfuscateModuleERNS2_6ModuleERNS2_10ObfuscatorERNS2_9StringMapINS2_6detail13DenseSetEmptyERNS2_20BumpPtrAllocatorImplINS2_15MallocAllocatorELm4096ELm4096EEEEEE3$_1NS_9allocatorISG_EEFbRNS2_5ValueEEEE
NSt3__110__function6__baseIFbRN4llvm5ValueEEEE
ZN4llvm15obfuscateModuleERNS_6ModuleERNS_10ObfuscatorERNS_9StringMapINS_6detail13DenseSetEmptyERNS_20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EEEEEE3$_1
N4llvm20LoadAndStorePromoterE
N4llvm9IVVisitorE
N12_GLOBAL__N_114InstSimplifierE
?N12_GLOBAL__N_126StripNonLineTableDebugInfoE
N12_GLOBAL__N_114RewriteSymbolsE
N12_GLOBAL__N_125ExplicitRewriteDescriptorILN4llvm14SymbolRewriter17RewriteDescriptor4TypeE1ENS1_8FunctionEXadL_ZNKS1_6Module11getFunctionENS1_9StringRefEEEEE
N4llvm14SymbolRewriter17RewriteDescriptorE
N4llvm10ilist_nodeINS_14SymbolRewriter17RewriteDescriptorEEE
N4llvm15ilist_half_nodeINS_14SymbolRewriter17RewriteDescriptorEEE
N12_GLOBAL__N_124PatternRewriteDescriptorILN4llvm14SymbolRewriter17RewriteDescriptor4TypeE1ENS1_8FunctionEXadL_ZNKS1_6Module11getFunctionENS1_9StringRefEEEXadL_ZNS6_9functionsEvEEEE
N12_GLOBAL__N_125ExplicitRewriteDescriptorILN4llvm14SymbolRewriter17RewriteDescriptor4TypeE2ENS1_14GlobalVariableEXadL_ZNKS1_6Module17getGlobalVariableENS1_9StringRefEEEEE
N12_GLOBAL__N_124PatternRewriteDescriptorILN4llvm14SymbolRewriter17RewriteDescriptor4TypeE2ENS1_14GlobalVariableEXadL_ZNKS1_6Module17getGlobalVariableENS1_9StringRefEEEXadL_ZNS6_7globalsEvEEEE
N12_GLOBAL__N_125ExplicitRewriteDescriptorILN4llvm14SymbolRewriter17RewriteDescriptor4TypeE3ENS1_11GlobalAliasEXadL_ZNKS1_6Module13getNamedAliasENS1_9StringRefEEEEE
N12_GLOBAL__N_124PatternRewriteDescriptorILN4llvm14SymbolRewriter17RewriteDescriptor4TypeE3ENS1_11GlobalAliasEXadL_ZNKS1_6Module13getNamedAliasENS1_9StringRefEEEXadL_ZNS6_7aliasesEvEEEE
N4llvm22UnifyFunctionExitNodesE
N4llvm20ValueMapTypeRemapperE
N4llvm17ValueMaterializerE
Basic-Block Vectorization
N12_GLOBAL__N_111BBVectorizeE
Loop Vectorization
N12_GLOBAL__N_113LoopVectorizeE
N12_GLOBAL__N_117InnerLoopUnrollerE
N12_GLOBAL__N_119InnerLoopVectorizerE
SLP Vectorizer
N12_GLOBAL__N_113SLPVectorizerE
N4llvm6detail17AnalysisPassModelINS_6ModuleENS_21LazyCallGraphAnalysisELb0EEE
N4llvm6detail19AnalysisResultModelINS_6ModuleENS_21LazyCallGraphAnalysisENS_13LazyCallGraphENS_17PreservedAnalysesELb0EEE
N4llvm6detail17AnalysisPassModelINS_6ModuleEN12_GLOBAL__N_118NoOpModuleAnalysisELb0EEE
N4llvm6detail19AnalysisResultModelINS_6ModuleEN12_GLOBAL__N_118NoOpModuleAnalysisENS4_6ResultENS_17PreservedAnalysesELb0EEE
N4llvm6detail17AnalysisPassModelINS_6ModuleENS_21TargetLibraryAnalysisELb0EEE
N4llvm6detail19AnalysisResultModelINS_6ModuleENS_21TargetLibraryAnalysisENS_17TargetLibraryInfoENS_17PreservedAnalysesELb1EEE
N4llvm6detail17AnalysisPassModelINS_13LazyCallGraph3SCCEN12_GLOBAL__N_117NoOpCGSCCAnalysisELb0EEE
N4llvm6detail19AnalysisResultModelINS_13LazyCallGraph3SCCEN12_GLOBAL__N_117NoOpCGSCCAnalysisENS5_6ResultENS_17PreservedAnalysesELb0EEE
N4llvm6detail17AnalysisPassModelINS_8FunctionENS_18AssumptionAnalysisELb0EEE
N4llvm6detail19AnalysisResultModelINS_8FunctionENS_18AssumptionAnalysisENS_15AssumptionCacheENS_17PreservedAnalysesELb0EEE
N4llvm6detail17AnalysisPassModelINS_8FunctionENS_21DominatorTreeAnalysisELb0EEE
N4llvm6detail19AnalysisResultModelINS_8FunctionENS_21DominatorTreeAnalysisENS_13DominatorTreeENS_17PreservedAnalysesELb0EEE
N4llvm6detail17AnalysisPassModelINS_8FunctionENS_12LoopAnalysisELb1EEE
N4llvm6detail19AnalysisResultModelINS_8FunctionENS_12LoopAnalysisENS_8LoopInfoENS_17PreservedAnalysesELb0EEE
N4llvm6detail17AnalysisPassModelINS_8FunctionEN12_GLOBAL__N_120NoOpFunctionAnalysisELb0EEE
N4llvm6detail19AnalysisResultModelINS_8FunctionEN12_GLOBAL__N_120NoOpFunctionAnalysisENS4_6ResultENS_17PreservedAnalysesELb0EEE
N4llvm6detail17AnalysisPassModelINS_8FunctionENS_21TargetLibraryAnalysisELb0EEE
N4llvm6detail19AnalysisResultModelINS_8FunctionENS_21TargetLibraryAnalysisENS_17TargetLibraryInfoENS_17PreservedAnalysesELb0EEE
N4llvm6detail17AnalysisPassModelINS_8FunctionENS_16TargetIRAnalysisELb0EEE
N4llvm6detail19AnalysisResultModelINS_8FunctionENS_16TargetIRAnalysisENS_19TargetTransformInfoENS_17PreservedAnalysesELb1EEE
N4llvm6detail9PassModelINS_6ModuleENS_19RequireAnalysisPassINS_21LazyCallGraphAnalysisEEENS_17PreservedAnalysesELb1EEE
N4llvm6detail9PassModelINS_6ModuleENS_22InvalidateAnalysisPassINS_21LazyCallGraphAnalysisEEENS_17PreservedAnalysesELb1EEE
N4llvm6detail9PassModelINS_6ModuleENS_19RequireAnalysisPassIN12_GLOBAL__N_118NoOpModuleAnalysisEEENS_17PreservedAnalysesELb1EEE
N4llvm6detail9PassModelINS_6ModuleENS_22InvalidateAnalysisPassIN12_GLOBAL__N_118NoOpModuleAnalysisEEENS_17PreservedAnalysesELb1EEE
N4llvm6detail9PassModelINS_6ModuleENS_19RequireAnalysisPassINS_21TargetLibraryAnalysisEEENS_17PreservedAnalysesELb1EEE
N4llvm6detail9PassModelINS_6ModuleENS_22InvalidateAnalysisPassINS_21TargetLibraryAnalysisEEENS_17PreservedAnalysesELb1EEE
N4llvm6detail9PassModelINS_6ModuleENS_25InvalidateAllAnalysesPassENS_17PreservedAnalysesELb0EEE
N4llvm6detail9PassModelINS_6ModuleEN12_GLOBAL__N_114NoOpModulePassENS_17PreservedAnalysesELb0EEE
N4llvm6detail9PassModelINS_6ModuleENS_24LazyCallGraphPrinterPassENS_17PreservedAnalysesELb1EEE
N4llvm6detail9PassModelINS_13LazyCallGraph3SCCENS_19RequireAnalysisPassIN12_GLOBAL__N_117NoOpCGSCCAnalysisEEENS_17PreservedAnalysesELb1EEE
N4llvm6detail11PassConceptINS_13LazyCallGraph3SCCEEE
N4llvm6detail9PassModelINS_13LazyCallGraph3SCCENS_22InvalidateAnalysisPassIN12_GLOBAL__N_117NoOpCGSCCAnalysisEEENS_17PreservedAnalysesELb1EEE
N4llvm6detail9PassModelINS_13LazyCallGraph3SCCENS_25InvalidateAllAnalysesPassENS_17PreservedAnalysesELb0EEE
N4llvm6detail9PassModelINS_13LazyCallGraph3SCCEN12_GLOBAL__N_113NoOpCGSCCPassENS_17PreservedAnalysesELb0EEE
N4llvm6detail9PassModelINS_8FunctionENS_19RequireAnalysisPassINS_18AssumptionAnalysisEEENS_17PreservedAnalysesELb1EEE
N4llvm6detail11PassConceptINS_8FunctionEEE
N4llvm6detail9PassModelINS_8FunctionENS_22InvalidateAnalysisPassINS_18AssumptionAnalysisEEENS_17PreservedAnalysesELb1EEE
N4llvm6detail9PassModelINS_8FunctionENS_19RequireAnalysisPassINS_21DominatorTreeAnalysisEEENS_17PreservedAnalysesELb1EEE
N4llvm6detail9PassModelINS_8FunctionENS_22InvalidateAnalysisPassINS_21DominatorTreeAnalysisEEENS_17PreservedAnalysesELb1EEE
N4llvm6detail9PassModelINS_8FunctionENS_19RequireAnalysisPassINS_12LoopAnalysisEEENS_17PreservedAnalysesELb1EEE
N4llvm6detail9PassModelINS_8FunctionENS_22InvalidateAnalysisPassINS_12LoopAnalysisEEENS_17PreservedAnalysesELb1EEE
N4llvm6detail9PassModelINS_8FunctionENS_19RequireAnalysisPassIN12_GLOBAL__N_120NoOpFunctionAnalysisEEENS_17PreservedAnalysesELb1EEE
N4llvm6detail9PassModelINS_8FunctionENS_22InvalidateAnalysisPassIN12_GLOBAL__N_120NoOpFunctionAnalysisEEENS_17PreservedAnalysesELb1EEE
N4llvm6detail9PassModelINS_8FunctionENS_19RequireAnalysisPassINS_21TargetLibraryAnalysisEEENS_17PreservedAnalysesELb1EEE
N4llvm6detail9PassModelINS_8FunctionENS_22InvalidateAnalysisPassINS_21TargetLibraryAnalysisEEENS_17PreservedAnalysesELb1EEE
N4llvm6detail9PassModelINS_8FunctionENS_19RequireAnalysisPassINS_16TargetIRAnalysisEEENS_17PreservedAnalysesELb1EEE
N4llvm6detail9PassModelINS_8FunctionENS_22InvalidateAnalysisPassINS_16TargetIRAnalysisEEENS_17PreservedAnalysesELb1EEE
N4llvm6detail9PassModelINS_8FunctionENS_12EarlyCSEPassENS_17PreservedAnalysesELb1EEE
N4llvm6detail9PassModelINS_8FunctionENS_15InstCombinePassENS_17PreservedAnalysesELb1EEE
N4llvm6detail9PassModelINS_8FunctionENS_25InvalidateAllAnalysesPassENS_17PreservedAnalysesELb0EEE
N4llvm6detail9PassModelINS_8FunctionEN12_GLOBAL__N_116NoOpFunctionPassENS_17PreservedAnalysesELb0EEE
N4llvm6detail9PassModelINS_8FunctionENS_24LowerExpectIntrinsicPassENS_17PreservedAnalysesELb0EEE
N4llvm6detail9PassModelINS_8FunctionENS_17PrintFunctionPassENS_17PreservedAnalysesELb0EEE
N4llvm6detail9PassModelINS_8FunctionENS_21AssumptionPrinterPassENS_17PreservedAnalysesELb1EEE
N4llvm6detail9PassModelINS_8FunctionENS_24DominatorTreePrinterPassENS_17PreservedAnalysesELb1EEE
N4llvm6detail9PassModelINS_8FunctionENS_15LoopPrinterPassENS_17PreservedAnalysesELb1EEE
N4llvm6detail9PassModelINS_8FunctionENS_15SimplifyCFGPassENS_17PreservedAnalysesELb1EEE
N4llvm6detail9PassModelINS_8FunctionENS_12VerifierPassENS_17PreservedAnalysesELb0EEE
N4llvm6detail9PassModelINS_8FunctionENS_25DominatorTreeVerifierPassENS_17PreservedAnalysesELb1EEE
N4llvm6detail9PassModelINS_8FunctionENS_11PassManagerIS2_EENS_17PreservedAnalysesELb1EEE
N4llvm6detail9PassModelINS_13LazyCallGraph3SCCENS_11PassManagerIS3_EENS_17PreservedAnalysesELb1EEE
N4llvm6detail9PassModelINS_13LazyCallGraph3SCCENS_26CGSCCToFunctionPassAdaptorINS_11PassManagerINS_8FunctionEEEEENS_17PreservedAnalysesELb1EEE
N4llvm6detail9PassModelINS_6ModuleENS_11PassManagerIS2_EENS_17PreservedAnalysesELb1EEE
N4llvm6detail9PassModelINS_6ModuleENS_33ModuleToPostOrderCGSCCPassAdaptorINS_11PassManagerINS_13LazyCallGraph3SCCEEEEENS_17PreservedAnalysesELb1EEE
N4llvm6detail9PassModelINS_6ModuleENS_27ModuleToFunctionPassAdaptorINS_11PassManagerINS_8FunctionEEEEENS_17PreservedAnalysesELb1EEE
N4llvm12ARMExceptionE
N4llvm10AsmPrinterE
N4llvm17AsmPrinterHandlerE
N4llvm13format_objectIJyEEE
N4llvm19HashingByteStreamerE
N4llvm15DwarfAccelTable16HashDataContentsE
22ModuleHashDataContents
19DIEHashDataContentsILb1EE
19DIEHashDataContentsILb0EE
N4llvm21DwarfCFIExceptionBaseE
N4llvm17DwarfCFIExceptionE
N4llvm16DwarfCompileUnitE
N4llvm23DebugLocDwarfExpressionE
N4llvm15DwarfExpressionE
N4llvm10DwarfDebugE
N4llvm2cl3optINS_12DebuggerKindELb0ENS0_6parserIS2_EEEE
N4llvm2cl11opt_storageINS_12DebuggerKindELb0ELb0EEE
N4llvm2cl6parserINS_12DebuggerKindEEE
N4llvm2cl11OptionValueINS_12DebuggerKindEEE
N4llvm2cl15OptionValueBaseINS_12DebuggerKindELb0EEE
N4llvm2cl15OptionValueCopyINS_12DebuggerKindEEE
N4llvm2cl3optIN12_GLOBAL__N_112DefaultOnOffELb0ENS0_6parserIS3_EEEE
N4llvm2cl11opt_storageIN12_GLOBAL__N_112DefaultOnOffELb0ELb0EEE
N4llvm2cl6parserIN12_GLOBAL__N_112DefaultOnOffEEE
N4llvm2cl11OptionValueIN12_GLOBAL__N_112DefaultOnOffEEE
N4llvm2cl15OptionValueBaseIN12_GLOBAL__N_112DefaultOnOffELb0EEE
N4llvm2cl15OptionValueCopyIN12_GLOBAL__N_112DefaultOnOffEEE
N4llvm18BufferByteStreamerE
N4llvm12ByteStreamerE
N4llvm14APByteStreamerE
N4llvm10FoldingSetINS_9DIEAbbrevEEE
N4llvm18DIEDwarfExpressionE
N4llvm9DwarfUnitE
N4llvm13DwarfTypeUnitE
N4llvm10EHStreamerE
N4llvm12WinExceptionE
N4llvm21WinCodeViewLineTablesE
N12_GLOBAL__N_115WorklistRemoverE
N4llvm8FastISelE
N12_GLOBAL__N_118NodeUpdateListenerE
N4llvm21ResourcePriorityQueueE
N12_GLOBAL__N_117ScheduleDAGRRListE
N12_GLOBAL__N_125RegReductionPriorityQueueINS_13bu_ls_rr_sortEEE
N12_GLOBAL__N_118RegReductionPQBaseE
N12_GLOBAL__N_125RegReductionPriorityQueueINS_14src_ls_rr_sortEEE
N12_GLOBAL__N_125RegReductionPriorityQueueINS_17hybrid_ls_rr_sortEEE
N12_GLOBAL__N_125RegReductionPriorityQueueINS_14ilp_ls_rr_sortEEE
N4llvm18ScheduleDAGSDNodesE
N4llvm12SelectionDAG17DAGUpdateListenerE
N12_GLOBAL__N_118RAUWUpdateListenerE
N4llvm10FoldingSetINS_6SDNodeEEE
N4llvm10FoldingSetINS_12SDVTListNodeEEE
N4llvm16SelectionDAGISelE
N4llvm2cl3optIPFPNS_18ScheduleDAGSDNodesEPNS_16SelectionDAGISelENS_10CodeGenOpt5LevelEELb0ENS_18RegisterPassParserINS_17RegisterSchedulerEEEEE
N4llvm2cl11opt_storageIPFPNS_18ScheduleDAGSDNodesEPNS_16SelectionDAGISelENS_10CodeGenOpt5LevelEELb0ELb0EEE
N4llvm18RegisterPassParserINS_17RegisterSchedulerEEE
N4llvm2cl6parserIPFPNS_18ScheduleDAGSDNodesEPNS_16SelectionDAGISelENS_10CodeGenOpt5LevelEEEE
N4llvm2cl11OptionValueIPFPNS_18ScheduleDAGSDNodesEPNS_16SelectionDAGISelENS_10CodeGenOpt5LevelEEEE
N4llvm2cl15OptionValueBaseIPFPNS_18ScheduleDAGSDNodesEPNS_16SelectionDAGISelENS_10CodeGenOpt5LevelEELb0EEE
N4llvm2cl15OptionValueCopyIPFPNS_18ScheduleDAGSDNodesEPNS_16SelectionDAGISelENS_10CodeGenOpt5LevelEEEE
N12_GLOBAL__N_111ISelUpdaterE
N12_GLOBAL__N_117MatchStateUpdaterE
N12_GLOBAL__N_115ScheduleDAGVLIWE
N4llvm14TargetLoweringE
N4llvm22TargetSelectionDAGInfoE
N4llvm16MCRelocationInfoE
N12_GLOBAL__N_127SampleProfErrorCategoryTypeE
N4llvm10sampleprof23SampleProfileReaderTextE
N4llvm10sampleprof19SampleProfileReaderE
N4llvm10sampleprof25SampleProfileReaderBinaryE
N4llvm6object7ArchiveE
N4llvm6object6BinaryE
N4llvm6object14COFFObjectFileE
N4llvm6object17ELFObjectFileBaseE
N4llvm6object13ELFObjectFileINS0_7ELFTypeILNS_7support10endiannessE1ELb0EEEEE
N4llvm6object13ELFObjectFileINS0_7ELFTypeILNS_7support10endiannessE0ELb0EEEEE
N4llvm6object13ELFObjectFileINS0_7ELFTypeILNS_7support10endiannessE1ELb1EEEEE
N4llvm6object13ELFObjectFileINS0_7ELFTypeILNS_7support10endiannessE0ELb1EEEEE
N12_GLOBAL__N_122_object_error_categoryE
N4llvm6object12IRObjectFileE
N4llvm6object15MachOObjectFileE
N4llvm6object20MachOUniversalBinaryE
N4llvm6object10ObjectFileE
N4llvm14RecordStreamerE
N4llvm6object12SymbolicFileE
N4llvm8AsmLexerE
N4llvm23MCAsmParserSemaCallbackE
N12_GLOBAL__N_19AsmParserE
N12_GLOBAL__N_113COFFAsmParserE
N12_GLOBAL__N_115DarwinAsmParserE
N12_GLOBAL__N_112ELFAsmParserE
N4llvm10MCAsmLexerE
N4llvm18MCParsedAsmOperandE
N4llvm11MCAsmParserE
N4llvm20MCAsmParserExtensionE
N4llvm17MCTargetAsmParserE
N4llvm21BitcodeDiagnosticInfoE
N12_GLOBAL__N_113BitcodeReaderE
NSt3__110__function6__funcIZL14getDiagHandlerNS_8functionIFvRKN4llvm14DiagnosticInfoEEEERNS3_11LLVMContextEE3$_0NS_9allocatorISB_EES7_EE
NSt3__110__function6__baseIFvRKN4llvm14DiagnosticInfoEEEE
ZL14getDiagHandlerNSt3__18functionIFvRKN4llvm14DiagnosticInfoEEEERNS1_11LLVMContextEE3$_0
N4llvm12_GLOBAL__N_119ConstantPlaceHolderE
N12_GLOBAL__N_124BitcodeErrorCategoryTypeE
print-externalfnconstants
Print external fn callsites passed constants
print-callgraph
Print a call graph
Function '
llvm.dbg.cu
llvm.dbg.sp
print-dom-info
Dominator Info Printer
debug-pass-manager
Print pass management debugging information
: unable to parse pass pipeline description.
FunctionAnalysisManagerModuleProxy
CGSCCAnalysisManagerModuleProxy
FunctionAnalysisManagerCGSCCProxy
ModuleAnalysisManagerCGSCCProxy
CGSCCAnalysisManagerFunctionProxy
ModuleAnalysisManagerFunctionProxy
VerifierPass
PrintModulePass
BitcodeWriterPass
Starting pass manager run.
Running pass: 
Finished pass manager run.
Invalidating all non-preserved analyses for: 
Invalidating analysis: 
FunctionPass Printer: 
Printing analysis '
' for function '
CallGraphSCCPass Printer: 
ModulePass Printer: 
LoopPass Printer: 
RegionPass Printer: 
' for 
region: '
' in function '
BasicBlockPass Printer: 
Printing Analysis info for BasicBlock '
': Pass 
print-cfg-sccs
Print SCCs of each function CFG
print-callgraph-sccs
Print SCCs of the Call Graph
SCCs for Function 
 in PostOrder:
SCC #
 (Has self-loop).
SCCs for the program in PostOrder:
external node
asm-instrumentation
Instrumentation of inline assembly and assembly source files
none
no instrumentation at all
address
instrument instructions with memory arguments
mc-relax-all
When used with filetype=obj, relax all fixups in the emitted object file
dwarf-version
Dwarf version
asm-show-inst
Emit internal instruction representation to assembly file
fatal-warnings
Treat warnings as errors
no-warn
Suppress all warnings
Alias for --no-warn
target-abi
The name of the ABI to be targeted from the backend.
march
Architecture to generate code for (see --version)
mcpu
Target a specific cpu type (-mcpu=help for details)
cpu-name
mattr
Target specific attributes (-mattr=help for details)
a1,+a2,-a3,...
relocation-model
Choose relocation model
default
Target default relocation model
static
Non-relocatable code
Fully relocatable, position independent code
dynamic-no-pic
Relocatable external references, non-relocatable code
thread-model
Choose threading model
posix
POSIX thread model
single
Single thread model
code-model
Choose code model
Target default code model
small
Small code model
kernel
Kernel code model
medium
Medium code model
large
Large code model
filetype
Choose a file type (not all types are supported by all targets):
Emit an assembly ('.s') file
Emit a native object ('.o') file
null
Emit nothing, for performance testing
enable-fp-mad
Enable less precise MAD instructions to be generated
disable-fp-elim
Disable frame pointer elimination optimization
enable-unsafe-fp-math
Enable optimizations that may decrease FP precision
enable-no-infs-fp-math
Enable FP math optimizations that assume no +-Infs
enable-no-nans-fp-math
Enable FP math optimizations that assume no NaNs
enable-sign-dependent-rounding-fp-math
Force codegen to assume rounding mode can change dynamically
float-abi
Choose float ABI type
Target default float ABI type
soft
Soft float ABI (implied by -soft-float)
hard
Hard float ABI (uses FP registers)
fp-contract
Enable aggressive formation of fused FP ops
fast
Fuse FP ops whenever profitable
Only fuse 'blessed' FP ops.
Only fuse FP ops when the result won't be affected.
recip
Choose reciprocal operation types and parameters.
all,none,default,divf,!vec-sqrtd,vec-divd:0,sqrt:9...
nozero-initialized-in-bss
Don't place zero-initialized symbols into bss section
tailcallopt
Turn fastcc calls into tail calls by (potentially) changing ABI.
disable-tail-calls
Never emit tail calls
stack-alignment
Override default stack alignment
trap-func
Emit a call to trap function rather than a trap instruction
enable-pie
Assume the creation of a position independent executable.
use-ctors
Use .ctors instead of .init_array.
stop-after
Stop compilation after a specific pass
pass-name
start-after
Resume compilation after a specific pass
run-pass
Run compiler only for one specific pass
data-sections
Emit data into separate sections
function-sections
Emit functions into separate sections
emulated-tls
Use emulated TLS model
unique-section-names
Give unique names to every section
jump-table-type
Choose the type of Jump-Instruction Table for jumptable.
Create a single table for all jumptable functions
arity
Create one table per number of parameters.
simplified
Create one table per simplified function type.
full
Create one table per unique function type.
load
pluginfilename
Load the specified plugin
Optimizations available:
passes
A textual description of the pass pipeline for optimizing
<input bitcode file>
filename
Override output filename
Enable binary output on terminals
Print module after each transformation
disable-output
Do not write result bitcode file
Write output as LLVM assembly
disable-verify
Do not verify result module
verify-each
Verify after each transform
strip-debug
Strip debugger symbol info from translation unit
disable-inlining
Do not run the inliner pass
disable-opt
Do not run any optimization passes
std-link-opts
Include the standard link time optimizations
Optimization level 1. Similar to clang -O1
Optimization level 2. Similar to clang -O2
Like -O2 with extra optimizations for size. Similar to clang -Os
Like -Os but reduces code size further. Similar to clang -Oz
Optimization level 3. Similar to clang -O3
mtriple
Override target triple for module
funit-at-a-time
Enable IPO. This corresponds to gcc's -funit-at-a-time
disable-loop-unrolling
Disable loop unrolling in all relevant passes
disable-loop-vectorization
Disable the loop vectorization pass
disable-slp-vectorization
Disable the slp vectorization pass
disable-simplify-libcalls
Disable simplify-libcalls
Obsolete option
quiet
Alias for -q
analyze
Only perform analysis, no optimization
print-breakpoints-for-testing
Print select breakpoints location for testing
default-data-layout
data layout string to use if not specified by module
layout-string
preserve-bc-uselistorder
Preserve use-list order when writing LLVM bitcode.
preserve-ll-uselistorder
Preserve use-list order when writing LLVM assembly.
llvm .bc -> .bc modular optimizer and analysis printer
: analyze mode conflicts with no-output mode.
: error: input module is broken!
WARNING: The -o (output filename) option is ignored when
the --disable-output option is used.
: cannot create pass: 
Cannot find option named '
native
target-cpu
target-features
no-frame-pointer-elim
true
false
trap-func-name
cl::alias must only have one cl::aliasopt(...) specified!
cl::alias must have argument name specified!
cl::alias must have an cl::aliasopt(option) specified!
(%rip)
no-rip
@feat.00
__IMPORT
__jump_table
__pointers
_fltused
__fltused
$stub
$non_lazy_ptr
__imp_
 + [.-
@TLSGD
@TLSLD
@TLSLDM
@GOTTPOFF
@INDNTPOFF
@TPOFF
@DTPOFF
@NTPOFF
@GOTNTPOFF
@GOTPCREL
@GOT
@GOTOFF
@PLT
@TLVP
@SECREL32
subreg
X86 Assembly / Object Emitter
no-x86-call-frame-opt
Avoid optimizing x86 call frames for size
X86 Optimize Call Frame
X86 pseudo instruction expansion pass
X86 FP Stackifier
Stack overflow!
Access past stack top!
Cannot pop empty stack!
Stack empty??
Stack cannot be empty!
fixed input regs must be last on the x87 stack
output regs must be last on the x87 stack
clobbers must be last on the x87 stack
implicitly popped regs must be last on the x87 stack
_ftol2
___chkstk_ms
__chkstk
_alloca
_chkstk
Can't handle guaranteed tail call under win64 yet
stack-probe-size
Segmented stacks do not support vararg functions.
Segmented stacks not supported on this platform.
Segmented stacks not supported on FreeBSD i386.
erlang.
bif_
inc_stack_0
Segmented stacks does not support fastcall with nested function.
X86 DAG->DAG Instruction Selection
__main
x86-experimental-vector-widening-legalization
Enable an experimental vector type legalization through widening rather than promotion.
_alldiv
_aulldiv
_allrem
_aullrem
_allmul
SSE register return with SSE disabled
SSE2 register return with SSE2 disabled
cannot use inalloca attribute on a register parameter
any parameter with the inalloca attribute must be the only memory argument
_tls_array
_tls_index
Cannot use segmented stacks with functions that have nested arguments.
register 
 is allocatable: function has no frame pointer
Invalid register name global variable
Nest register in use - reduce number of inreg parameters!
X86ISD::BSF
X86ISD::BSR
X86ISD::SHLD
X86ISD::SHRD
X86ISD::FAND
X86ISD::FANDN
X86ISD::FOR
X86ISD::FXOR
X86ISD::FILD
X86ISD::FILD_FLAG
X86ISD::FP_TO_INT16_IN_MEM
X86ISD::FP_TO_INT32_IN_MEM
X86ISD::FP_TO_INT64_IN_MEM
X86ISD::FLD
X86ISD::FST
X86ISD::CALL
X86ISD::RDTSC_DAG
X86ISD::RDTSCP_DAG
X86ISD::RDPMC_DAG
X86ISD::BT
X86ISD::CMP
X86ISD::COMI
X86ISD::UCOMI
X86ISD::CMPM
X86ISD::CMPMU
X86ISD::CMPM_RND
X86ISD::SETCC
X86ISD::SETCC_CARRY
X86ISD::FSETCC
X86ISD::FGETSIGNx86
X86ISD::CMOV
X86ISD::BRCOND
X86ISD::RET_FLAG
X86ISD::REP_STOS
X86ISD::REP_MOVS
X86ISD::GlobalBaseReg
X86ISD::Wrapper
X86ISD::WrapperRIP
X86ISD::MOVDQ2Q
X86ISD::MMX_MOVD2W
X86ISD::MMX_MOVW2D
X86ISD::PEXTRB
X86ISD::PEXTRW
X86ISD::INSERTPS
X86ISD::PINSRB
X86ISD::PINSRW
X86ISD::MMX_PINSRW
X86ISD::PSHUFB
X86ISD::ANDNP
X86ISD::PSIGN
X86ISD::BLENDI
X86ISD::SHRUNKBLEND
X86ISD::ADDUS
X86ISD::SUBUS
X86ISD::HADD
X86ISD::HSUB
X86ISD::FHADD
X86ISD::FHSUB
X86ISD::ABS
X86ISD::FMAX
X86ISD::FMAX_RND
X86ISD::FMIN
X86ISD::FMIN_RND
X86ISD::FMAXC
X86ISD::FMINC
X86ISD::FRSQRT
X86ISD::FRCP
X86ISD::EXTRQI
X86ISD::INSERTQI
X86ISD::TLSADDR
X86ISD::TLSBASEADDR
X86ISD::TLSCALL
X86ISD::EH_SJLJ_SETJMP
X86ISD::EH_SJLJ_LONGJMP
X86ISD::EH_RETURN
X86ISD::TC_RETURN
X86ISD::FNSTCW16m
X86ISD::FNSTSW16r
X86ISD::LCMPXCHG_DAG
X86ISD::LCMPXCHG8_DAG
X86ISD::LCMPXCHG16_DAG
X86ISD::VZEXT_MOVL
X86ISD::VZEXT_LOAD
X86ISD::VZEXT
X86ISD::VSEXT
X86ISD::VTRUNC
X86ISD::VTRUNCS
X86ISD::VTRUNCUS
X86ISD::VINSERT
X86ISD::VFPEXT
X86ISD::VFPROUND
X86ISD::CVTDQ2PD
X86ISD::CVTUDQ2PD
X86ISD::VSHLDQ
X86ISD::VSRLDQ
X86ISD::VSHL
X86ISD::VSRL
X86ISD::VSRA
X86ISD::VSHLI
X86ISD::VSRLI
X86ISD::VSRAI
X86ISD::CMPP
X86ISD::PCMPEQ
X86ISD::PCMPGT
X86ISD::PCMPEQM
X86ISD::PCMPGTM
X86ISD::ADD
X86ISD::SUB
X86ISD::ADC
X86ISD::SBB
X86ISD::SMUL
X86ISD::UMUL
X86ISD::SMUL8
X86ISD::UMUL8
X86ISD::SDIVREM8_SEXT_HREG
X86ISD::UDIVREM8_ZEXT_HREG
X86ISD::INC
X86ISD::DEC
X86ISD::OR
X86ISD::XOR
X86ISD::AND
X86ISD::BEXTR
X86ISD::MUL_IMM
X86ISD::PTEST
X86ISD::TESTP
X86ISD::TESTM
X86ISD::TESTNM
X86ISD::KORTEST
X86ISD::PACKSS
X86ISD::PACKUS
X86ISD::PALIGNR
X86ISD::VALIGN
X86ISD::PSHUFD
X86ISD::PSHUFHW
X86ISD::PSHUFLW
X86ISD::SHUFP
X86ISD::SHUF128
X86ISD::MOVLHPS
X86ISD::MOVLHPD
X86ISD::MOVHLPS
X86ISD::MOVLPS
X86ISD::MOVLPD
X86ISD::MOVDDUP
X86ISD::MOVSHDUP
X86ISD::MOVSLDUP
X86ISD::MOVSD
X86ISD::MOVSS
X86ISD::UNPCKL
X86ISD::UNPCKH
X86ISD::VBROADCAST
X86ISD::SUBV_BROADCAST
X86ISD::VEXTRACT
X86ISD::VPERMILPV
X86ISD::VPERMILPI
X86ISD::VPERM2X128
X86ISD::VPERMV
X86ISD::VPERMV3
X86ISD::VPERMIV3
X86ISD::VPERMI
X86ISD::VFIXUPIMM
X86ISD::VRANGE
X86ISD::PMULUDQ
X86ISD::PMULDQ
X86ISD::PSADBW
X86ISD::VASTART_SAVE_XMM_REGS
X86ISD::VAARG_64
X86ISD::WIN_ALLOCA
X86ISD::MEMBARRIER
X86ISD::MFENCE
X86ISD::SFENCE
X86ISD::LFENCE
X86ISD::SEG_ALLOCA
X86ISD::WIN_FTOL
X86ISD::SAHF
X86ISD::RDRAND
X86ISD::RDSEED
X86ISD::VPMADDUBSW
X86ISD::VPMADDWD
X86ISD::FMADD
X86ISD::FMSUB
X86ISD::FNMADD
X86ISD::FNMSUB
X86ISD::FMADDSUB
X86ISD::FMSUBADD
X86ISD::FMADD_RND
X86ISD::FNMADD_RND
X86ISD::FMSUB_RND
X86ISD::FNMSUB_RND
X86ISD::FMADDSUB_RND
X86ISD::FMSUBADD_RND
X86ISD::VRNDSCALE
X86ISD::VREDUCE
X86ISD::PCMPESTRI
X86ISD::PCMPISTRI
X86ISD::XTEST
X86ISD::COMPRESS
X86ISD::EXPAND
X86ISD::SELECT
X86ISD::ADDSUB
X86ISD::RCP28
X86ISD::EXP2
X86ISD::RSQRT28
X86ISD::FADD_RND
X86ISD::FSUB_RND
X86ISD::FMUL_RND
X86ISD::FDIV_RND
X86ISD::FSQRT_RND
X86ISD::FGETEXP_RND
X86ISD::SCALEF
X86ISD::ADDS
X86ISD::SUBS
X86ISD::AVG
X86ISD::MULHRS
X86ISD::SINT_TO_FP_RND
X86ISD::UINT_TO_FP_RND
X86ISD::FP_TO_SINT_RND
X86ISD::FP_TO_UINT_RND
__morestack_allocate_stack_space
bswap
bswapl
bswapq
${0:q}
=r,0,
rorw
$$8,
${0:w}
rolw
rorl
$$16,
%eax
%edx
xchgl
%eax,
{st}
{flags}
llvm.x86.seh.recoverfp must take a function as the first argument
querying registration node size for function without personality
can only recover FP for MSVC EH personality functions
__sincos_stret
__sincosf_stret
~{cc}
~{flags}
~{fpsr}
~{dirflag}
disable-spill-fusing
Disable fusing of spill code into instructions
print-failed-fuse-candidates
Print instructions that the allocator wants to fuse, but the X86 backend currently can't
remat-pic-stub-load
Re-materialize load from stub in PIC mode
We failed to fuse operand 
x86-got-absolute-address
x86-pic-base-offset
x86-got
x86-gotoff
x86-gotpcrel
x86-plt
x86-tlsgd
x86-tlsld
x86-tlsldm
x86-gottpoff
x86-indntpoff
x86-tpoff
x86-dtpoff
x86-ntpoff
x86-gotntpoff
x86-dllimport
x86-darwin-stub
x86-darwin-nonlazy
x86-darwin-nonlazy-pic-base
x86-darwin-hidden-nonlazy-pic-base
x86-tlvp
x86-tlvp-pic-base
x86-secrel
X86 PIC Global Base Reg Initialization
_GLOBAL_OFFSET_TABLE_
Local Dynamic TLS Access Clean-up
MEMBARRIER
eh_return, addr: %
TAILCALL
__tls_get_addr
___tls_get_addr
zero
X86 Atom pad short functions
GR8_ABCD_H
GR8_ABCD_L
BNDR
SEGMENT_REG
RFP32
GR8_NOREX
DEBUG_REG
VR64
GR8_NOREX+GR64_NOREX_and_GR64_TC
GR8_NOREX+GR64_TCW64
FR32
CONTROL_REG
GR64_NOREX
GR8_NOREX+GR64_TC
GR8+GR64_TCW64
GR64_NOREX+GR64_TC
GR8+GR64_NOREX
GR8+GR64_TC
FR32X
GR64
CSR_32
CSR_32EHRet
CSR_64
CSR_64EHRet
CSR_64_AllRegs
CSR_64_AllRegs_AVX
CSR_64_Intel_OCL_BI
CSR_64_Intel_OCL_BI_AVX
CSR_64_Intel_OCL_BI_AVX512
CSR_64_MostRegs
CSR_64_RT_AllRegs
CSR_64_RT_AllRegs_AVX
CSR_64_RT_MostRegs
CSR_64_SwiftError
CSR_NoRegs
CSR_Win64
CSR_Win64_Intel_OCL_BI_AVX
CSR_Win64_Intel_OCL_BI_AVX512
x86-use-base-pointer
Enable use of a base pointer for complex stack frames
Stack realignment in presence of dynamic allocas is not supported withthis calling convention.
sub_8bit
sub_8bit_hi
sub_16bit
sub_32bit
sub_xmm
sub_ymm
Expected a variant SchedClass
x86-early-ifcvt
Enable early if-conversion on X86
__bzero
+64bit,+sse2,
+64bit,+sse2
x86-machine-combiner
Enable the machine combiner pass
sqrtf
divf
vec-sqrtf
vec-divf
use-soft-float
+soft-float
,+soft-float
x86-use-vzeroupper
Minimize AVX to SSE transition penalty
-p:32:32
-i64:64
-f64:32:64
-f80:128
-f80:32
-n8:16:32:64
-n8:16:32
-a:0:32-S32
-S128
copysign
copysignf
copysignl
fabs
fabsf
fabsl
fmin
fminf
fminl
fmax
fmaxf
fmaxl
sinf
sinl
cosf
cosl
sqrt
sqrtl
powf
powl
exp2
exp2l
exp2f
floor
floorf
ceil
round
ffsl
labs
llabs
llvm.
__ImageBase
__real@
__xmm@
X86 vzeroupper inserter
X86 LEA Fixup
Windows 32-bit x86 EH state insertion
__security_cookie
CXXExceptionRegistration
EHRegistrationNode
__ehhandler$
safeseh
SEHExceptionRegistration
, %rax
, %ax
, %eax
, %al
, %st(0)
  # NOREX
, %dx
{1to2}, 
{1to4}, 
{1to8}, 
{1to16}, 
{sae}, 
,{sae}, 
{sae}, 
} {z}
{1to32}, 
, {sae}, 
cvtsd2siq
xstorerng
<reg:
lock
callq
unord
eq_uq
neq_oq
eq_os
lt_oq
le_oq
unord_s
neq_us
nlt_uq
nle_uq
ord_s
eq_us
nge_uq
ngt_uq
false_os
neq_os
ge_oq
gt_oq
true_us
{rn-sae}
{rd-sae}
{ru-sae}
{rz-sae}
<imm:
imm = 0x%llX
<mem:
%es:(
, st(0)
, dx
, ax
, eax
, rax
, al
, cl
} {z}, 
{1to2}
{1to4}
{1to8}
{1to16}
, {sae}
} , 
,{sae}
{1to32}
lock
es:[
word ptr 
dword ptr 
qword ptr 
byte ptr 
xmmword ptr 
opaque ptr 
xword ptr 
ymmword ptr 
zmmword ptr 
reloc_riprel_4byte
reloc_riprel_4byte_movq_load
reloc_signed_4byte
reloc_global_offset_table
unexpected instruction to relax: 
16bit-mode
16-bit mode (i8086)
32bit-mode
32-bit mode (80386)
3dnow
Enable 3DNow! instructions
3dnowa
Enable 3DNow! Athlon instructions
64bit
Support 64-bit instructions
64bit-mode
64-bit mode (x86_64)
Support ADX instructions
Enable AES instructions
atom
Intel Atom processors
Enable AVX instructions
avx2
Enable AVX2 instructions
avx512bw
Enable AVX-512 Byte and Word Instructions
avx512cd
Enable AVX-512 Conflict Detection Instructions
avx512dq
Enable AVX-512 Doubleword and Quadword Instructions
avx512er
Enable AVX-512 Exponential and Reciprocal Instructions
avx512f
Enable AVX-512 instructions
avx512pf
Enable AVX-512 PreFetch Instructions
avx512vl
Enable AVX-512 Vector Length eXtensions
Support BMI instructions
bmi2
Support BMI2 instructions
call-reg-indirect
Call register indirect
cmov
Enable conditional move instructions
cx16
64-bit with cmpxchg16b
f16c
Support 16-bit floating point conversion instructions
fast-unaligned-mem
Fast unaligned memory access
Enable three-operand fused multiple-add
fma4
Enable four-operand fused multiple-add
fsgsbase
Support FS/GS Base instructions
Support HLE
idivl-to-divb
Use 8-bit divide for positive values less than 256
idivq-to-divw
Use 16-bit divide for positive values less than 65536
lea-sp
Use LEA for adjusting the stack pointer
lea-uses-ag
LEA instruction needs inputs at AG stage
lzcnt
Support LZCNT instruction
Enable MMX instructions
movbe
Support MOVBE instruction
Support MPX instructions
pad-short-functions
Pad short functions
pclmul
Enable packed carry-less multiplication instructions
popcnt
Support POPCNT instruction
prfchw
Support PRFCHW instructions
rdrnd
Support RDRAND instruction
rdseed
Support RDSEED instruction
Support RTM instructions
Enable SHA instructions
Intel Silvermont processors
slow-bt-mem
Bit testing of memory is slow
slow-incdec
INC and DEC instructions are slower than ADD and SUB
slow-lea
LEA instruction with certain arguments is slow
slow-shld
SHLD instruction is slow
slow-unaligned-mem-32
Slow unaligned 32-byte memory access
soft-float
Use software floating point features.
Enable SSE instructions
sse-unaligned-mem
Allow unaligned memory operands with SSE instructions
sse2
Enable SSE2 instructions
sse3
Enable SSE3 instructions
sse4.1
Enable SSE 4.1 instructions
sse4.2
Enable SSE 4.2 instructions
sse4a
Support SSE 4a instructions
ssse3
Enable SSSE3 instructions
Enable TBM instructions
Enable XOP instructions
amdfam10
Select the amdfam10 processor
athlon
Select the athlon processor
athlon-4
Select the athlon-4 processor
athlon-fx
Select the athlon-fx processor
athlon-mp
Select the athlon-mp processor
athlon-tbird
Select the athlon-tbird processor
athlon-xp
Select the athlon-xp processor
athlon64
Select the athlon64 processor
athlon64-sse3
Select the athlon64-sse3 processor
Select the atom processor
barcelona
Select the barcelona processor
bdver1
Select the bdver1 processor
bdver2
Select the bdver2 processor
bdver3
Select the bdver3 processor
bdver4
Select the bdver4 processor
bonnell
Select the bonnell processor
broadwell
Select the broadwell processor
btver1
Select the btver1 processor
btver2
Select the btver2 processor
Select the c3 processor
c3-2
Select the c3-2 processor
core-avx-i
Select the core-avx-i processor
core-avx2
Select the core-avx2 processor
core2
Select the core2 processor
corei7
Select the corei7 processor
corei7-avx
Select the corei7-avx processor
generic
Select the generic processor
geode
Select the geode processor
haswell
Select the haswell processor
i386
Select the i386 processor
i486
Select the i486 processor
i586
Select the i586 processor
i686
Select the i686 processor
ivybridge
Select the ivybridge processor
Select the k6 processor
k6-2
Select the k6-2 processor
k6-3
Select the k6-3 processor
Select the k8 processor
k8-sse3
Select the k8-sse3 processor
Select the knl processor
nehalem
Select the nehalem processor
nocona
Select the nocona processor
opteron
Select the opteron processor
opteron-sse3
Select the opteron-sse3 processor
penryn
Select the penryn processor
pentium
Select the pentium processor
pentium-m
Select the pentium-m processor
pentium-mmx
Select the pentium-mmx processor
pentium2
Select the pentium2 processor
pentium3
Select the pentium3 processor
pentium3m
Select the pentium3m processor
pentium4
Select the pentium4 processor
pentium4m
Select the pentium4m processor
pentiumpro
Select the pentiumpro processor
prescott
Select the prescott processor
sandybridge
Select the sandybridge processor
silvermont
Select the silvermont processor
Select the skx processor
skylake
Select the skylake processor
Select the slm processor
westmere
Select the westmere processor
winchip-c6
Select the winchip-c6 processor
winchip2
Select the winchip2 processor
Select the x86-64 processor
yonah
Select the yonah processor
+64bit-mode,-32bit-mode,-16bit-mode
-64bit-mode,+32bit-mode,-16bit-mode
-64bit-mode,-32bit-mode,+16bit-mode
x86-asm-syntax
Choose style of code to emit from X86 backend:
Emit AT&T-style assembly
intel
Emit Intel-style assembly
mark-data-regions
Mark code section jump table data regions.
FORM: 
unsupported relocation of modified symbol
unsupported pc-relative relocation of difference
unsupported relocation with identical base
unsupported relocation with subtraction expression, symbol '
unsupported relocation of variable '
unsupported relocation of undefined symbol '
unsupported symbol modifier in relocation
unsupported symbol modifier in branch relocation
TLVP symbol modifier should have been rip-rel
32-bit absolute addressing is not supported in 64-bit mode
0x%x
Section too large, can't encode r_address (
) into 24 bits of scattered relocation entry.
Expected X86_64_RELOC_UNSIGNED after X86_64_RELOC_SUBTRACTOR.
32-bit X86: Pentium-Pro and above
x86-64
64-bit X86: EM64T and AMD64
Alias Analysis
count-aa-print-all-queries
count-aa-print-all-failed-queries
Count Alias Analysis Query Responses
count-aa
===== Alias Analysis Counter Report =====
  Analysis counted:
no alias
may alias
partial alias
must alias
  Alias Analysis Counter Summary: 
 Total MRI_Mod/MRI_Ref Queries Performed
no mod/ref
mod/ref
  MRI_Mod/MRI_Ref Analysis Counter Summary: 
 responses (
No alias
May alias
Partial alias
Must alias
MRI_NoModRef
JustRef
JustMod
MRI_ModRef
print-all-alias-modref-info
print-no-aliases
print-may-aliases
print-partial-aliases
print-must-aliases
print-no-modref
print-mod
print-ref
print-modref
evaluate-aa-metadata
Exhaustive Alias Analysis Precision Evaluator
aa-eval
===== Alias Analysis Evaluator Report =====
  Alias Analysis Evaluator Summary: No pointers!
 Total Alias Queries Performed
 no alias responses 
 may alias responses 
 partial alias responses 
 must alias responses 
  Alias Analysis Evaluator Pointer Alias Summary: 
  Alias Analysis Mod/Ref Evaluator Summary: no mod/ref!
 Total ModRef Queries Performed
 no mod/ref responses 
 mod responses 
 ref responses 
 mod & ref responses 
  Alias Analysis Evaluator Mod/Ref Summary: 
Function: 
 pointers, 
 call sites
NoAlias
MayAlias
PartialAlias
MustAlias
NoModRef
Just Mod
Just Ref
Both ModRef
 <-> 
:  Ptr: 
AA use debugger
debug-aa
  AliasSet[
must
 alias, 
No access 
Ref       
Mod       
Mod/Ref   
[volatile] 
 forwarding to 
Pointers: 
 Unknown instructions: 
Alias Set Tracker: 
 alias sets for 
 pointer values.
Alias Set Printer
print-alias-sets
Verifier error:
Cached assumptions for function: 
Assumption Cache Tracker
assumption-cache-tracker
basicaa-recphi
basicaa
Basic Alias Analysis (stateless AA impl)
BlockFrequencyInfo::view is only available in debug builds on systems with Graphviz or gv!
Block Frequency Analysis
block-freq
block-frequency-info: 
: float = 
, int = 
---- Branch Probabilities ----
edge 
 -> 
 probability is 
 [HOT edge]
Branch Probability Analysis
branch-prob
View CFG of function
view-cfg
View CFG of function (with no function bodies)
view-cfg-only
Print CFG of function to 'dot' file
dot-cfg
Print CFG of function to 'dot' file (with no function bodies)
dot-cfg-only
cfg.
CFG for '
CFG Structure analysis
cfgstructure
CFL-Based AA implementation
cfl-aa
costmodel-reduxcost
Recognize reduction patterns.
cost-model
Cost Model: Found an estimated cost of 
Cost Model: Unknown cost
 for instruction: 
air.convert
delinearize
Delinearization on function 
Inst:
In Loop with Header: 
AddRec: 
failed to delinearize
Base offset: 
ArrayDecl[UnknownSize]
 with elements of 
 bytes.
ArrayRef
da-delinearize
Try to delinearize array references.
 Empty
 Any
 Point is <
 Distance is 
*X + 
*Y = 
 Line is 
confused
consistent 
flow
output
anti
input
 splitable
Dependence Analysis
da analyze - 
da analyze - split level = 
, iteration = 
none!
DIVERGENT:  
DIVERGENT:
Divergence Analysis
divergence
View dominance tree of function
view-dom
View dominance tree of function (with no function bodies)
view-dom-only
View postdominance tree of function
view-postdom
View postdominance tree of function (with no function bodies)
view-postdom-only
Print dominance tree of function to 'dot' file
dot-dom
Print dominance tree of function to 'dot' file (with no function bodies)
dot-dom-only
Print postdominance tree of function to 'dot' file
dot-postdom
Print postdominance tree of function to 'dot' file (with no function bodies)
dot-postdom-only
.dot
Writing '
'...
 for '
' function
  error opening file for writing!
Dominator tree
digraph "
digraph unnamed {
label="
Node
 [shape=record,
label="{
}"];
Post dominance root node
\l...
|<s64>truncated...
 -> Node
domonly
error opening file '
' for writing!
 done. 
postdom
Post dominator tree
postdomonly
  DomFrontier for BB 
 is:
<<exit node>>
Dominance Frontier Construction
domfrontier
GPU Alias Analysis
gpuaa
GPU-specific alias analysis
IV Users for loop 
 with backedge-taken count 
 (post-inc with loop 
 in  
Printing <null> User
Induction Variable Users
iv-users
Counts the various types of Instructions
instcount
Number of GetElementPtr insts
Number of Load insts
Number of Store insts
Number of Call insts
Number of Invoke insts
Number of Alloca insts
-------------------------------------------------------------
Interval Contents:
Interval Predecessors:
Interval Successors:
Interval Partition Construction
intervals
Printing the call graph for module: 
  Call edges in function: 
    -> 
  SCC with 
 functions:
undefined
overdefined
notconstant<
constantrange<
constant<
Lazy Value Information Analysis
lazy-value-info
LibCall Alias Analysis
libcall-aa
__gnat_eh_personality
__gxx_personality_v0
__gcc_personality_v0
__objc_personality_v0
_except_handler3
_except_handler4
__C_specific_handler
__CxxFrameHandler3
Statically lint-checks LLVM IR
lint
Unusual: Unnamed function with non-local linkage
Unusual: Return statement in function with noreturn attribute
Unusual: Returning alloca value
Undefined behavior: indirectbr with no destinations
Undefined behavior: Null pointer dereference
Undefined behavior: Undef pointer dereference
Unusual: All-ones pointer dereference
Unusual: Address one pointer dereference
Undefined behavior: Write to read-only memory
Undefined behavior: Write to text section
Unusual: Load from function body
Undefined behavior: Load from block address
Undefined behavior: Call to block address
Undefined behavior: Branch to non-blockaddress
Undefined behavior: Buffer overflow
Undefined behavior: Memory reference address is misaligned
Undefined behavior: Caller and callee calling convention differ
Undefined behavior: Call argument count mismatches callee argument count
Undefined behavior: Call return type mismatches callee return type
Undefined behavior: Call argument type mismatches callee parameter type
Unusual: noalias argument aliases another argument
Undefined behavior: Call with "tail" keyword references alloca
Undefined behavior: memcpy source and destination overlap
Undefined behavior: va_start called in a non-varargs function
llvm.eh.begincatch may be reachable without passing a landingpad
llvm.eh.begincatch may be called a second time before llvm.eh.endcatch
Some paths from llvm.eh.begincatch may not reach llvm.eh.endcatch
llvm.eh.endcatch may be called a second time after llvm.eh.begincatch
llvm.eh.endcatch may be reachable without passing llvm.eh.begincatch
Unusual: unreachable immediately preceded by instruction without side effects
Undefined result: sub(undef, undef)
Undefined behavior: Division by zero
Undefined result: Shift count out of range
Undefined result: xor(undef, undef)
Pessimization: Static alloca outside of entry block
Undefined result: extractelement index out of range
Undefined result: insertelement index out of range
force-vector-width
Sets the SIMD width. Zero is autoselect.
force-vector-interleave
Sets the vectorization interleave count. Zero is autoselect.
runtime-memory-check-threshold
When performing memory disambiguation checks at runtime do not generate more than this number of comparisons (default = 8).
memory-check-merge-threshold
Maximum number of comparisons done when trying to merge runtime memory checks. (default = 100)
max-interesting-dependences
Maximum number of interesting dependences collected by loop-access analysis (default = 100)
Check 
Comparing group (
Against group (
Run-time memory checks:
Grouped accesses:
Group 
(Low: 
 High: 
Member: 
NoDep
Forward
ForwardButPreventsForwarding
Backward
BackwardVectorizable
BackwardVectorizableButPreventsForwarding
 -> 
loop control flow is not understood by analyzer
read with atomic ordering or volatile read
instruction cannot be vectorized
write with atomic ordering or volatile write
cannot identify array bounds
cannot check memory dependencies at runtime
unsafe dependent memory operations in loop
bound0
bound1
found.conflict
conflict.rdx
memcheck.conflict
Memory dependences are safe with run-time checks
Memory dependences are safe
Report: 
Interesting Dependences:
Too many interesting dependences, not recorded
Store to invariant address was 
not 
found in loop.
loop-accesses
Loop at depth 
 containing: 
<header>
<latch>
<exiting>
verify-loop-info
Verify loop info (time consuming)
llvm.loop
Natural Loop Information
loops
Loop Pass Manager
Printing <null> block
Loop Pass Manager
Print MemDeps of function
print-memdeps
 in block 
 from: 
Clobber
NonFuncLocal
Unknown
Memory Dereferenciblity of pointers in function
print-memderefs
The following are dereferenceable:
memdep-block-scan-limit
The number of instructions to scan in a block in memory dependency analysis (default = 100)
Memory Dependence Analysis
memdep
Decodes module-level debug info
module-debuginfo
Compile unit: 
unknown-language(
Subprogram: 
Global variable: 
Type:
unknown-encoding(
unknown-tag(
 (identifier: '
 from 
No Alias Analysis (always returns 'may' alias)
no-aa
PHITransAddr contains extra instructions:
  InstInput #
 is 
.phi.trans.insert
Instruction in PHITransAddr is not phi-translatable:
Post-Dominator Tree Construction
postdomtree
<Function Return>
 => 
Region tree:
End region tree
verify-region-info
Verify region info (time consuming)
print-region-style
style of printing regions
print no details
print regions in detail with block_iterator
print regions in detail with element_iterator
Detect single entry single exit regions
regions
<deleted>
Region Pass Manager
Printing <null> Block
Region Pass Manager
only-simple-regions
Show only simple regions in the graphviz viewer
Print regions of function to 'dot' file
dot-regions
Print regions of function to 'dot' file (with no function bodies)
dot-regions-only
View regions of function
view-regions
View regions of function (with no function bodies)
view-regions-only
Region Graph
Not implemented
constraint=false
colorscheme = "paired12"
subgraph cluster_
label = "";
style = filled;
color = 
style = solid;
Node
regonly
scalar-evolution-max-iterations
Maximum number of iterations SCEV will symbolically execute a constant derived loop
verify-scev
Verify ScalarEvolution's backedge taken counts (slow)
(trunc 
 to 
(zext 
(sext 
nuw><
nsw><
nw><
 umax 
 smax 
<nuw>
<nsw>
 /u 
sizeof(
alignof(
offsetof(
***COULDNOTCOMPUTE***
Classifying expressions for: 
  -->  
 U: 
 S: 
Exits: 
<<Unknown>>
Determining loop execution counts for: 
undef
SCEVValidator: SCEV for loop '
' changed from '
' to '
Scalar Evolution Analysis
scalar-evolution
Loop 
<multiple exits> 
backedge-taken count is 
Unpredictable backedge-taken count. 
Loop 
max backedge-taken count is 
Unpredictable max backedge-taken count. 
<nw>
ScalarEvolution-based Alias Analysis
scev-aa
scevgep
.iv.next
indvar
indvar.next
smax
umax
vector-library
Vector functions library
No vector functions library
Accelerate
Accelerate framework
_IO_getc
_IO_putc
_ZdaPv
_ZdaPvRKSt9nothrow_t
_ZdaPvj
_ZdaPvm
_ZdlPv
_ZdlPvRKSt9nothrow_t
_ZdlPvj
_ZdlPvm
_Znaj
_ZnajRKSt9nothrow_t
_Znam
_ZnamRKSt9nothrow_t
_Znwj
_ZnwjRKSt9nothrow_t
_Znwm
_ZnwmRKSt9nothrow_t
__cospi
__cospif
__cxa_atexit
__cxa_guard_abort
__cxa_guard_acquire
__cxa_guard_release
__isoc99_scanf
__isoc99_sscanf
__memcpy_chk
__memmove_chk
__memset_chk
__sincospi_stret
__sincospif_stret
__sinpi
__sinpif
__sqrt_finite
__sqrtf_finite
__sqrtl_finite
__stpcpy_chk
__stpncpy_chk
__strcpy_chk
__strdup
__strncpy_chk
__strndup
__strtok_r
access
acos
acosf
acosh
acoshf
acoshl
acosl
asin
asinf
asinh
asinhf
asinhl
asinl
atan
atan2
atan2f
atan2l
atanf
atanh
atanhf
atanhl
atanl
atof
atoi
atol
atoll
bcmp
bcopy
bzero
calloc
cbrt
cbrtf
cbrtl
ceilf
ceill
chmod
chown
clearerr
closedir
cosh
coshf
coshl
ctermid
exp10
exp10f
exp10l
expf
expl
expm1
expm1f
expm1l
fclose
fdopen
feof
ferror
fflush
ffsll
fgetc
fgetpos
fgets
fileno
fiprintf
flockfile
floorl
fmod
fmodf
fmodl
fopen
fopen64
fprintf
fputc
fputs
fread
frexp
frexpf
frexpl
fscanf
fseek
fseeko
fseeko64
fsetpos
fstat
fstat64
fstatvfs
fstatvfs64
ftell
ftello
ftello64
ftrylockfile
funlockfile
fwrite
getc
getc_unlocked
getchar
getenv
getitimer
getlogin_r
getpwnam
gets
gettimeofday
htonl
htons
iprintf
isascii
isdigit
lchown
ldexp
ldexpf
ldexpl
log10
log10f
log10l
log1p
log1pf
log1pl
log2
log2f
log2l
logb
logbf
logbl
logf
logl
lstat
lstat64
memalign
memccpy
memchr
memcmp
memmove
memrchr
mkdir
mktime
modf
modff
modfl
nearbyint
nearbyintf
nearbyintl
ntohl
ntohs
open
open64
opendir
pclose
perror
popen
posix_memalign
pread
printf
putc
putchar
puts
pwrite
qsort
read
readlink
realloc
reallocf
realpath
remove
rename
rewind
rint
rintf
rintl
rmdir
roundf
roundl
scanf
setbuf
setitimer
setvbuf
sinh
sinhf
sinhl
siprintf
snprintf
sprintf
sscanf
stat
stat64
statvfs
statvfs64
stpcpy
stpncpy
strcasecmp
strcat
strchr
strcmp
strcoll
strcpy
strcspn
strdup
strlen
strncasecmp
strncat
strncmp
strncpy
strndup
strnlen
strpbrk
strrchr
strspn
strstr
strtod
strtof
strtok
strtok_r
strtol
strtold
strtoll
strtoul
strtoull
strxfrm
system
tanf
tanh
tanhf
tanhl
tanl
times
tmpfile
tmpfile64
toascii
truncf
truncl
uname
ungetc
unlink
unsetenv
utime
utimes
valloc
vfprintf
vfscanf
vprintf
vscanf
vsnprintf
vsprintf
vsscanf
write
vceilf
vfabsf
llvm.fabs.f32
vfloorf
vsqrtf
llvm.sqrt.f32
vexpf
llvm.exp.f32
vexpm1f
vlogf
llvm.log.f32
vlog1pf
vlog10f
llvm.log10.f32
vlogbf
vsinf
llvm.sin.f32
vcosf
llvm.cos.f32
vtanf
vasinf
vacosf
vatanf
vsinhf
vcoshf
vtanhf
vasinhf
vacoshf
vatanhf
fwrite$UNIX2003
fputs$UNIX2003
_copysign
__exp10
__exp10f
Target Library Information
targetlibinfo
Target Transform Information
enable-tbaa
vtable pointer
Cycle found in TBAA metadata.
Type-Based Alias Analysis
enable-scoped-noalias
Scoped NoAlias Alias Analysis
scoped-noalias
value-tracking-dom-conditions
dom-conditions-max-depth
dom-conditions-dom-blocks
dom-conditions-max-uses
dom-conditions-single-cmp-use
Invalid encoding
Bitcode Writer
MetaData
Map Name: 
Size: 
Value: [null]
 Uses(
 [null]
Metadata: slot = 
agg-antidep-debugdiv
Debug control for aggressive anti-dep breaker
agg-antidep-debugmod
llvm.eh.catch.all.value
atomicrmw.end
atomicrmw.start
loaded
Expand Atomic calls in terms of either load-linked & store-conditional or cmpxchg
atomic-expand
tryagain
success
newloaded
cmpxchg.end
cmpxchg.failure
cmpxchg.success
cmpxchg.trystore
cmpxchg.start
should_store
partial-unrolling-threshold
Threshold for partial unrolling
enable-tail-merge
tail-merge-threshold
Max number of predecessors to consider tail merging
tail-merge-size
Min number of instructions to consider tail merging
Control Flow Optimizer
branch-folder
disable-cgp-branch-opts
Disable branch optimizations in CodeGenPrepare
disable-cgp-gc-opts
Disable GC optimizations in CodeGenPrepare
disable-cgp-select2branch
Disable select to branch conversion.
addr-sink-using-gep
Address sinking in CGP using GEPs.
enable-andcmp-sinking
Enable sinkinig and/cmp into branches.
disable-cgp-store-extract
Disable store(extract) optimizations in CodeGenPrepare
stress-cgp-store-extract
Stress test store(extract) optimizations in CodeGenPrepare
disable-cgp-ext-ld-promotion
Disable ext(promotable(ld)) -> promoted(ext(ld)) optimization in CodeGenPrepare
stress-cgp-ext-ld-promotion
Stress test ext(promotable(ld)) -> promoted(ext(ld)) optimization in CodeGenPrepare
Optimize for code generation
codegenprepare
CodeGen Prepare
.cond.split
promoted
uadd.overflow
uadd
overflow
sunkaddr
res.phi.else
cond.load
res.phi.select
select.end
select.mid
Remove dead machine instructions
dead-mi-elimination
Dummy require Live Variables
DummyRequireLiveVariables
Prepare DWARF exceptions
dwarfehprepare
Exception handling preparation
unwind_resume
exn.obj
early-ifcvt-limit
Maximum number of instructions per speculated block.
stress-early-ifcvt
Turn all knobs to 11
Early If Converter
early-ifcvt
Early If-Conversion
view-edge-bundles
Pop up a window to show edge bundle graphs
digraph {
"BB#
" [ shape=box ]
 -> "BB#
" -> 
" -> "BB#
" [ color=lightgray ]
EdgeBundles
Bundle Machine CFG Edges
edge-bundles
Execution dependency fix
Expand ISel Pseudo-instructions
expand-isel-pseudos
Post-RA pseudo instruction expansion pass
postrapseudos
Fault Maps: 
__LLVM_FaultMaps
FaultingLoad
Fault kind: 
, faulting PC offset: 
, handling PC offset: 
FunctionAddress: 
, NumFaultingPCs: 
Version: 
NumFunctions: 
unsupported GC: 
 (did you remember to link and initialize the CodeGen library?)
Create Garbage Collector Module Metadata
collector-metadata
Print Garbage Collector Information
GC roots for 
[sp]
GC safe points for 
, live = {
pre-call
post-call
GC Lowering
gc-lowering
Lower Garbage Collection Instructions
Analyze Machine Code For Garbage Collection
gc-analysis
ifcvt-fn-start
ifcvt-fn-stop
ifcvt-limit
disable-ifcvt-simple
disable-ifcvt-simple-false
disable-ifcvt-triangle
disable-ifcvt-triangle-rev
disable-ifcvt-triangle-false
disable-ifcvt-triangle-false-rev
disable-ifcvt-diamond
ifcvt-branch-fold
If Converter
if-converter
ifcvt
Number of simple if-conversions performed
Number of simple (F) if-conversions performed
Number of triangle if-conversions performed
Number of triangle (R) if-conversions performed
Number of triangle (F) if-conversions performed
Number of triangle (F/R) if-conversions performed
Number of diamond if-conversions performed
imp-null-check-page-size
The page size of the target in bytes
Implicit null checks
implicit-null-checks
disable-spill-hoist
Disable inline spill hoisting
setjmp
longjmp
abort
Cannot lower a call to a non-intrinsic function '
Code generator does not support intrinsic function '
WARNING: this target does not support the llvm.stack
save
restore
 intrinsic.
WARNING: this target does not support the llvm.
return
frame
address intrinsic.
WARNING: this target does not support the llvm.readcyclecoun
ter intrinsic.  It is being lowered to a constant 0
cppop.and1
ctpop.sh
cppop.and2
ctpop.step
ctpop.part
ctpop.part.sh
bswap.2
bswap.1
bswap.i16
bswap.4
bswap.3
bswap.and3
bswap.and2
bswap.or1
bswap.or2
bswap.i32
bswap.8
bswap.7
bswap.6
bswap.5
bswap.and7
bswap.and6
bswap.and5
bswap.and4
bswap.or3
bswap.or4
bswap.or5
bswap.or6
bswap.i64
ctlz.sh
ctlz.step
fast-isel
Enable the "fast" instruction selector
live-debug-variables
Enable the live debug variables pass
Debug Variable Analysis
livedebugvars
EMPTY
-phi
 L%04X 
Clean updater: 
Null updater.
 updater with gap = 
, last start = 
  Area 1:
  Spills:
  Area 2:
enable-subreg-liveness
Enable subregister liveness tracking.
use-segment-set-for-physregs
Use segment set for the computation of the live ranges of physregs.
********** INTERVALS **********
RegMasks:
********** MACHINEINSTRS **********
Live Interval Analysis
liveintervals
 empty
Live Register Matrix
liveregmatrix
Live Registers:
 (uninitialized)
 (empty)
 [Unknown]
Live Stack Slot Analysis
livestacks
regalloc=... not currently supported with -O0
Live Variable Analysis
livevars
Local Stack Slot Allocation
localstackalloc
Can't print out MachineBasicBlock because parent MachineFunction
 is null
derived from LLVM BB 
EH LANDING PAD
ADDRESS TAKEN
Align 
 bytes)
    Live Ins:
    Predecessors according to CFG:
  * 
    Successors according to CFG:
MachineBlockFrequencyInfo::view is only available in debug builds on systems with Graphviz or gv!
Machine Block Frequency Analysis
machine-block-freq
align-all-blocks
Force the alignment of all blocks in the function.
block-placement-exit-block-bias
Block frequency percentage a loop exit block needs over the original exit to be considered the new exit.
outline-optional-branches
Put completely optional branches, i.e. branches with a common post dominator, out of line.
outline-optional-threshold
Don't outline optional branches that are a single block with an instruction count below this threshold
Branch Probability Basic Block Placement
block-placement
Basic Block Placement Stats
block-placement-stats
edge MBB#
 -> MBB#
Machine Branch Probability Analysis
machine-branch-prob
Machine Common Subexpression Elimination
machine-cse
Machine InstCombiner
machine-combiner
Machine Copy Propagation Pass
machine-cp
MachineCopyPropagation should be run after register allocation!
MachineDominator Tree Construction
machinedomtree
# Machine code for function 
Post SSA
, not tracking liveness
Function Live Ins: 
# End machine code for function 
MachineFunction::viewCFG is only available in debug builds on 
systems with Graphviz or gv!
MachineFunction::viewCFGOnly is only available in debug builds on 
Frame Objects:
  fi#
dead
variable sized
size=
, align=
, fixed
, at location [SP
Jump Tables:
  jt#
Constant Pool:
  cp#
Machine Function Analysis
Machine Function Printer
MachineFunction Printer
print-whole-regmask
Print the full contents of regmask operands in IR dumps
earlyclobber,
imp-
,read-undef
imp-use
kill
dead
internal
tied
<BB#
<fi#
<cp#
<ti#
<jt#
<ga:
<es:
<regmask
 more...
<regliveout>
<MCSym=
<call frame instruction>
[TF=
Volatile 
(addrspace=
(align=
(tbaa=
(alias.scope=
(noalias=
(nontemporal)
(invariant)
UNKNOWN
 [sideeffect]
 [mayload]
 [maystore]
 [alignstack]
 [attdialect]
 [inteldialect]
pred:
opt:
:[reguse
:[regdef
:[regdef-ec
:[clobber
:[imm
:[mem
:[??
 tiedto:$
 ...
 flags: 
FrameSetup
FrameDestroy
 mem:
 line no:
 inlined @[ 
 indirect
 dbg:
Unpack machine instruction bundles
unpack-mi-bundles
Finalize machine instruction bundles
finalize-mi-bundles
avoid-speculation
MachineLICM should avoid speculation
hoist-cheap-insts
MachineLICM should hoist even cheap instructions
sink-insts-to-avoid-spills
MachineLICM should sink instructions into loops to avoid register spills
Machine Loop Invariant Code Motion
machinelicm
Machine Natural Loop Construction
machine-loops
Machine Module Information
machinemoduleinfo
MachinePostDominator Tree Construction
machinepostdomtree
misched-topdown
Force top-down list scheduling
misched-bottomup
Force bottom-up list scheduling
misched-dcpl
Print critical path length to stdout
misched-regpressure
Enable register pressure scheduling.
misched-cyclicpath
Enable cyclic critical path analysis.
misched-cluster
Enable load clustering.
misched-fusion
Enable scheduling for macro fusion.
verify-misched
Verify machine instrs before and after machine scheduling
Machine instruction scheduler to use
Use the target's default scheduler choice.
enable-misched
Enable the machine instruction scheduling pass.
Critical Path(GS-RR ): 
converge
Standard converging scheduler.
Critical Path(PGS-RR ): 
ilpmax
Schedule bottom-up for max ILP
ilpmin
Schedule bottom-up for min ILP
ScheduleDAGMI::viewGraph is only available in debug builds on 
Scheduling-Units Graph for 
Machine Instruction Scheduler
machine-scheduler
Before machine scheduling.
After machine scheduling.
:BB# 
PostRA Machine Instruction Scheduler
postmisched
Before post machine scheduling.
After post machine scheduling.
TopQ
BotQ
machine-sink-split
Split critical edges during machine sinking
machine-sink-bfi
Use block frequency info to find successors to sink
Machine code sinking
machine-sink
 ensemble:
  BB#
depth=
 pred=BB#
 pred=null
 head=BB#
 +instrs
depth invalid
height=
 succ=BB#
 succ=null
 tail=BB#
height invalid
, crit=
 trace BB#
 --> BB#
 instrs.
 cycles.
 <- BB#
 -> BB#
Machine Trace Metrics
machine-trace-metrics
MinInstr
machineverifier
Bad instruction parent pointer
Instruction: 
Missing BundledPred flag, BundledSucc was set on predecessor
BundledPred flag is set, but BundledSucc not set on predecessor
No bundle header
Instruction has operand with wrong parent set
BundledSucc flag set on last instruction in block
Found 
 machine code errors.
MBB has duplicate entries in its predecessor list.
MBB has duplicate entries in its successor list.
FrameSetup is after another FrameSetup
FrameDestroy is not after a FrameSetup
FrameDestroy <n> is after FrameSetup <m>
FrameDestroy <
> is after FrameSetup <
The exit stack state of a predecessor is inconsistent.
Predecessor BB#
 has exit state (
), while BB#
 has entry state (
The entry stack state of a successor is inconsistent.
Successor BB#
A return block ends with a FrameSetup.
A return block ends with a nonzero stack adjustment.
MBB has allocable live-in, but isn't entry or landing-pad.
MBB has successor that isn't part of the function.
Inconsistent CFG
MBB is not in the predecessor list of the successor BB#
MBB has predecessor that isn't part of the function.
MBB is not in the successor list of the predecessor BB#
MBB has more than one landing pad successor
MBB exits via unconditional fall-through but doesn't have exactly one CFG successor!
MBB exits via unconditional fall-through but its successor differs from its CFG successor!
MBB exits via unconditional fall-through but ends with a barrier instruction!
MBB exits via unconditional fall-through but has a condition!
MBB exits via unconditional branch but doesn't have exactly one CFG successor!
MBB exits via unconditional branch but the CFG successor doesn't match the actual successor!
MBB exits via unconditional branch but doesn't contain any instructions!
MBB exits via unconditional branch but doesn't end with a barrier instruction!
MBB exits via unconditional branch but the branch isn't a terminator instruction!
MBB conditionally falls through out of function!
MBB exits via conditional branch/fall-through but only has one CFG successor!
MBB exits via conditional branch/fall-through but the CFG successor don't match the actual successor!
MBB exits via conditional branch/fall-through but doesn't have exactly two CFG successors!
MBB exits via conditional branch/fall-through but the CFG successors don't match the actual successors!
MBB exits via conditional branch/fall-through but doesn't contain any instructions!
MBB exits via conditional branch/fall-through but ends with a barrier instruction!
MBB exits via conditional branch/fall-through but the branch isn't a terminator instruction!
MBB exits via conditional branch/branch through but only has one CFG successor!
MBB exits via conditional branch/branch through but the CFG successor don't match the actual successor!
MBB exits via conditional branch/branch but doesn't have exactly two CFG successors!
MBB exits via conditional branch/branch but the CFG successors don't match the actual successors!
MBB exits via conditional branch/branch but doesn't contain any instructions!
MBB exits via conditional branch/branch but doesn't end with a barrier instruction!
MBB exits via conditional branch/branch but the branch isn't a terminator instruction!
MBB exits via conditinal branch/branch but there's no condition!
AnalyzeBranch returned invalid data!
MBB live-in list contains non-physical register
- basic block: BB#
*** Bad machine code: 
 ***
- function:    
- instruction: 
Instruction index out of order
Last instruction was at 
Non-terminator instruction after the first terminator
First terminator was:
Too few operands
 operands expected, but 
 given.
Missing mayLoad flag
Missing mayStore flag
Debug instruction has a slot index
Instruction inside bundle has a slot index
Missing slot index
Too few operands on inline asm
Asm string must be an external symbol
Asm flags must be an immediate
Unknown asm flags
Missing operands in last group
Expected implicit register after groups
- operand 
:   
Explicit definition must be a register
Explicit definition marked as use
Explicit definition marked as implicit
Explicit operand marked as def
Explicit operand marked as implicit
Tied use must be a register
Operand should be tied
Tied def doesn't match MCInstrDesc
Explicit operand should not be tied
Extra explicit operand on non-variadic instruction
Must be tied to a register
Missing tie flags on tied operand
Inconsistent tie links
Explicit def tied to explicit use without tie constraint
Explicit def should be tied to implicit use
Two-address instruction operands must be identical
Illegal subregister index for physical register
Illegal physical register for instruction
 is not a 
 register.
Invalid subregister index for virtual register
Register class 
 does not support subreg index 
Invalid register class for subregister index
 does not fully support subreg index 
No largest legal super class exists.
No matching super-reg register class.
Illegal virtual register for instruction
Expected a 
 register, but got a 
 register
PHI operand is not in the CFG
Instruction loads from dead spill slot
Live stack: 
Instruction stores to dead spill slot
Kill missing from LiveVariables
No live segment at use
 is not live in 
Live range continues after kill flag
Live range: 
Virtual register has no live interval
Using an undefined physical register
Reading virtual register without a def
Using a killed virtual register
Multiple virtual register defs in SSA form
Inconsistent valno->def
Valno 
 is not defined at 
No live segment at def
Live range continues after dead def flag
Virtual register has no Live interval
Block ends before last instruction index
Block ends at 
 last instruction was at 
Virtual register killed in block, but needed live out.
Virtual register 
 is used after the block.
Virtual register def doesn't dominate all uses.
PHI operand is not live-out from predecessor
Missing PHI operand
 is a predecessor according to the CFG.
LiveVariables: Block missing from AliveBlocks
 must be live through the block.
LiveVariables: Block should not be in AliveBlocks
 is not needed live through the block.
Missing live interval for virtual register
 still has defs or uses
Lane masks of sub ranges overlap in live interval
Subrange lanemask is invalid
Subrange must not be empty
A Subrange is not covered by the main range
Multiple connected components in live interval
: valnos
- interval:    
- liverange:   
- register:    
- lanemask:    
%04X
Valno not live at def and not marked unused
Valno #
Live segment at def has different valno
 is defined at 
 where valno #
 is live
Invalid definition index
PHIDef value is not defined at MBB start
, not at the beginning of BB#
No instruction at def index
Defining instruction does not modify register
Early clobber def must be at an early-clobber slot
Non-PHI, non-early clobber def must be at a register slot
Foreign valno in live segment
 has a bad valno
Live segment valno is marked unused
Bad start of live segment, no basic block
Live segment must begin at MBB entry or valno def
Bad end of live segment, no basic block
Live segment doesn't end at a valid instruction
Live segment ends at B slot of an instruction
Live segment ending at dead slot spans instructions
Live segment ending at early clobber slot must be redefined by an EC def in the same instruction
Instruction ending live segment doesn't read the register
Register not marked live out of predecessor
 live into BB#
, not live before 
Different value live out of predecessor
 live out of BB#
Valno #
<unnamed alloca>
<ir-block badref>
%ir-block.
address-taken
landing-pad
align 
successors: 
liveins: 
frame-setup 
 debug-location 
 :: 
%bb.
%ir.
<unserializable ir value>
%fixed-stack.
%stack.
target-flags(
<unknown>) 
<unknown target flag>
<unknown bitmask target flag>
implicit-def 
implicit 
def 
dead 
killed 
undef 
early-clobber 
debug-use 
(tied-def 
%const.
target-index(
%jump-table.
liveout(
volatile 
non-temporal 
invariant 
load 
store 
 into 
stack
jump-table
constant-pool
call-entry 
call-entry $
, !tbaa 
, !alias.scope 
, !noalias 
, !range 
.cfi_same_value 
<mcsymbol> 
.cfi_offset 
.cfi_def_cfa_register 
.cfi_def_cfa_offset 
.cfi_def_cfa 
<unserializable cfi operation>
<badreg>
alignment
exposesReturnsTwice
hasInlineAsm
isSSA
tracksRegLiveness
tracksSubRegLiveness
registers
liveins
calleeSavedRegisters
frameInfo
fixedStack
constants
jumpTable
body
Null
NULL
.nan
.NaN
.NAN
.inf
.Inf
.INF
^(\.[0-9]+|[0-9]+(\.[0-9]*)?)([eE][-+]?[0-9]+)?$
class
preferred-register
virtual-reg
isFrameAddressTaken
isReturnAddressTaken
hasStackMap
hasPatchPoint
stackSize
offsetAdjustment
maxAlignment
adjustsStack
hasCalls
stackProtector
maxCallFrameSize
hasOpaqueSPAdjustment
hasVAStart
hasMustTailInVarArgFunc
savePoint
restorePoint
isImmutable
isAliased
callee-saved-register
spill-slot
local-offset
di-variable
di-expression
di-location
variable-sized
kind
entries
block-address
gp-rel64-block-address
gp-rel32-block-address
label-difference32
custom32
blocks
MIR Printer
mir-printer
MIR Printing Pass
Optimize machine instruction PHIs
opt-phis
disable-phi-elim-edge-splitting
Disable critical edge splitting during PHI elimination
phi-elim-split-all-critical-edges
Split all critical edges during PHI elimination
no-phi-elim-live-out-early-exit
Do not use an early exit if isLiveOutPastPHIs returns true.
Eliminate PHI nodes for register allocation
phi-node-elimination
disable-post-ra
Disable Post Regalloc
disable-branch-fold
Disable branch folding
disable-tail-duplicate
Disable tail duplication
disable-early-taildup
Disable pre-register allocation tail duplication
disable-block-placement
Disable probability-driven block placement
enable-block-placement-stats
Collect probability-driven block placement stats
disable-ssc
Disable Stack Slot Coloring
disable-machine-dce
Disable Machine Dead Code Elimination
disable-early-ifcvt
Disable Early If-conversion
disable-machine-licm
Disable Machine LICM
disable-machine-cse
Disable Machine Common Subexpression Elimination
enable-shrink-wrap
enable the shrink-wrapping pass
optimize-regalloc
Enable optimized register allocation compilation path.
disable-postra-machine-licm
disable-machine-sink
Disable Machine Sinking
disable-lsr
Disable Loop Strength Reduction Pass
disable-constant-hoisting
Disable ConstantHoisting
disable-cgp
Disable Codegen Prepare
disable-copyprop
Disable Copy Propagation pass
disable-partial-libcall-inlining
Disable Partial Libcall Inlining
enable-implicit-null-checks
Fold null checks into faulting memory operations
print-lsr-output
Print LLVM IR produced by the loop-reduce pass
print-isel-input
Print LLVM IR input to isel pass
print-gc
Dump garbage collector data
verify-machineinstrs
Verify generated machine code
print-machineinstrs
Print machine instrs
option-unspecified
misched-postra
Run MachineScheduler post regalloc (independent of preRA sched)
early-live-intervals
Run live interval analysis earlier in the pipeline
use-cfl-aa-in-codegen
Enable the new, experimental CFL alias analysis in CodeGen
After 
Cannot stop compilation after pass that is not run
*** Code after LSR ***
*** Final LLVM Code input to ISel ***
machineinstr-printer
After Instruction Selection
pick register allocator based on -O option
regalloc
Register allocator to use
After pre Register Coalescer passes
After pre Machine Scheduler passes
After post Machine Scheduling passes
Target Pass Configuration
targetpassconfig
aggressive-ext-opt
Aggressive extension optimization
disable-peephole
Disable the peephole optimizer
disable-adv-copy-opt
Disable advanced copy optimization
rewrite-phi-limit
Limit the length of PHI chains to lookup
Peephole Optimizations
peephole-opts
post-RA-scheduler
Enable scheduling after register allocation
break-anti-dependencies
Break post-RA scheduling anti-dependencies: "critical", "all", or "none"
postra-sched-debugdiv
Debug control MBBs that are scheduled
postra-sched-debugmod
Post RA top-down list latency scheduler
critical
Process Implicit Definitions
processimpdefs
warn-stack-size
Warn for stack size bigger than the given number
Prologue/Epilogue Insertion & Frame Finalization
prologepilog
FixedStack
Stack
JumpTable
ConstantPool
GlobalValueCallEntry
ExternalSymbolCallEntry
verify-regalloc
Verify during register allocation
Seed Live Regs
fast register allocator
Fast Register Allocator
inline assembly requires more registers than available
ran out of registers during register allocation
split-spill-mode
Spill mode for splitting live ranges
Optimize for size
speed
Optimize for speed
lcr-max-depth
Last chance recoloring max depth
lcr-max-interf
Last chance recoloring maximum number of considered interference at a time
exhaustive-register-search
Exhaustive Search for registers bypassing the depth and interference cutoffs of last chance recoloring
enable-local-reassign
Local reassignment can yield better allocation decisions, but may be compile time intensive
enable-deferred-spilling
Instead of spilling a variable right away, defer the actual code insertion to the end of the allocation. That way the allocator might still find a suitable coloring for this variable because of other evicted variables.
regalloc-csr-first-time-cost
Cost for first time use of callee-saved register.
greedy
greedy register allocator
Greedy Register Allocator
Before greedy register allocator
register allocation failed: maximum depth for recoloring reached. Use -fexhaustive-register-search to skip cutoffs
register allocation failed: maximum interference for recoloring reached. Use -fexhaustive-register-search to skip cutoffs
register allocation failed: maximum interference and depth for recoloring reached. Use -fexhaustive-register-search to skip cutoffs
Spiller
After spilling
After splitting live range around region
Evict
Local Splitting
Global Splitting
After splitting live range around basic blocks
stress-regalloc
Limit all regclasses to N registers
join-liveintervals
Coalesce copies (default=true)
terminal-rule
Apply the terminal rule
join-splitedges
Coalesce copies on split edges (default=subtarget)
join-globalcopies
Coalesce copies that span blocks (default=subtarget)
verify-coalescing
Verify machine instrs before and after register coalescing
Simple Register Coalescing
simple-register-coalescing
Before register coalescing
After register coalescing
Max Pressure: 
Live In: 
Live Out: 
Curr Pressure: 
enable-aa-sched-mi
Enable use of AA during MI DAG construction
use-tbaa-in-sched-mi
Enable use of TBAA during MI DAG construction
<entry>
<exit>
dag.
BADILP
ScheduleDAG::viewGraph is only available in debug builds on 
Shrink Wrap Pass
shrink-wrap
Shrink Wrapping analysis
Shadow Stack GC Lowering
shadow-stack-gc-lowering
shadow-stack
gc_map
gc_stackentry
llvm_gc_root_chain
gc_frame
gc_currhead
gc_frame.map
gc_root
gc_frame.next
gc_newhead
gc_cleanup
gc_savedhead
gc_map.
__gc_
gc_stackentry.
cleanup.lpad
.cont
Prepare SjLj exceptions
sjljehprepare
SJLJ Exception Handling preparation
_Unwind_SjLj_Register
_Unwind_SjLj_Unregister
jbuf_gep
jbuf_fp_gep
jbuf_sp_gep
.tmp
fn_context
__data
exception_gep
exn_val
exn_selector_gep
exn_selector_val
pers_fn_gep
lsda_addr
lsda_gep
lpad.val
call_site
Berd
Slot index numbering
slotindexes
Spill Code Placement Analysis
spill-code-placement
no-stack-coloring
Disable stack coloring
protect-from-escaped-allocas
Do not optimize lifetime zones that are broken
Merge disjoint stack slots
stack-coloring
enable-selectiondag-sp
stack-protector-buffer-size
SP_return
CallStackCheckFailBlk
__stack_smash_handler
Insert stack protectors
stack-protector
__guard_local
StackGuardSlot
StackGuard
no-stack-slot-sharing
Suppress slot sharing during stack coloring
ssc-dce-limit
Stack Slot Coloring
stack-slot-coloring
stackslotcoloring
Number of trivially dead stack accesses eliminated
enable-patchpoint-liveness
Enable PatchPoint Liveness Analysis Pass
StackMap Liveness Analysis
stackmap-liveness
stackmap-version
Specify the stackmap encoding version (default = 1)
Stack Maps: 
callsites:
callsite 
  has 
 locations
Loc 
<Unprocessed operand>
Register 
Direct 
Indirect 
Constant 
Constant Index 
[encoding: .byte 
, .byte 
, .short 
, .int 
has 
 live-out registers
[encoding: .short 
, .byte 0, .byte 
__LLVM_StackMaps
tail-dup-size
Maximum instructions to consider tail duplicating
tail-dup-verify
Verify sanity of PHI instructions during taildup
tail-dup-limit
Tail Duplication
tailduplication
Malformed PHI in BB#
  missing input from predecessor BB#
Warning: malformed PHI in BB#
  extra input from predecessor BB#
  non-existing BB#
Number of tails duplicated
disable-sched-hazard
Disable hazard detection during preRA scheduling
misched
post-RA-sched
cannot spill patchpoint subregister operand
jump-is-expensive
Do not create extra branches to split comparison logic.
__ashlhi3
__ashlsi3
__lshrhi3
__lshrsi3
__ashrhi3
__ashrsi3
__mulqi3
__mulhi3
__mulsi3
__divqi3
__divhi3
__udivqi3
__udivhi3
__modqi3
__modhi3
__umodqi3
__umodhi3
__negsi2
__addxf3
__addtf3
__gcc_qadd
__subxf3
__subtf3
__gcc_qsub
__mulxf3
__multf3
__gcc_qmul
__divxf3
__divtf3
__gcc_qdiv
fmaf
fmal
__powitf2
__extenddftf2
__extendsftf2
__truncxfhf2
__trunctfhf2
__truncxfsf2
__trunctfsf2
__truncxfdf2
__trunctfdf2
__fixsfqi
__fixsfhi
__fixdfqi
__fixdfhi
__fixxfsi
__fixtfsi
__fixtfdi
__fixtfti
__fixunssfqi
__fixunssfhi
__fixunsdfqi
__fixunsdfhi
__fixunstfsi
__fixunstfdi
__fixunstfti
__floatsixf
__floatsitf
__floatditf
__floattitf
__floatunsixf
__floatunsitf
__floatunditf
__floatuntitf
__eqtf2
__netf2
__getf2
__lttf2
__letf2
__gttf2
__unordtf2
_Unwind_Resume
__sync_val_compare_and_swap_1
__sync_val_compare_and_swap_2
__sync_val_compare_and_swap_4
__sync_val_compare_and_swap_8
__sync_val_compare_and_swap_16
__sync_lock_test_and_set_1
__sync_lock_test_and_set_2
__sync_lock_test_and_set_4
__sync_lock_test_and_set_8
__sync_lock_test_and_set_16
__sync_fetch_and_add_1
__sync_fetch_and_add_2
__sync_fetch_and_add_16
__sync_fetch_and_sub_1
__sync_fetch_and_sub_2
__sync_fetch_and_sub_16
__sync_fetch_and_and_1
__sync_fetch_and_and_2
__sync_fetch_and_and_16
__sync_fetch_and_or_1
__sync_fetch_and_or_2
__sync_fetch_and_or_16
__sync_fetch_and_xor_1
__sync_fetch_and_xor_2
__sync_fetch_and_xor_16
__sync_fetch_and_nand_1
__sync_fetch_and_nand_2
__sync_fetch_and_nand_16
__sync_fetch_and_max_1
__sync_fetch_and_max_2
__sync_fetch_and_max_16
__sync_fetch_and_umax_1
__sync_fetch_and_umax_2
__sync_fetch_and_umax_16
__sync_fetch_and_min_1
__sync_fetch_and_min_2
__sync_fetch_and_min_16
__sync_fetch_and_umin_1
__sync_fetch_and_umin_2
__sync_fetch_and_umin_16
sincosf
sincos
sincosl
DW.ref.
We do not support this DWARF encoding yet!
.data.
.DW.stub
.init_array
.fini_array
Objective-C Image Info Version
Objective-C Garbage Collection
Objective-C GC Only
Objective-C Is Simulated
Objective-C Image Swift Version
Objective-C Image Info Section
Linker Options
Invalid section specifier '
L_OBJC_IMAGE_INFO
Global variable '
' has an invalid section specifier '
' section type or attributes does not match previous section specifier
 /EXPORT:
 -export:
,DATA
,data
.bss
.bss.
.gnu.linkonce.b.
.llvm.linkonce.b.
.sbss
.sbss.
.gnu.linkonce.sb.
.llvm.linkonce.sb.
.tdata
.tdata.
.gnu.linkonce.td.
.llvm.linkonce.td.
.tbss
.tbss.
.gnu.linkonce.tb.
.llvm.linkonce.tb.
ELF COMDATs only support SelectionKind::Any, '
' cannot be lowered.
.preinit_array
.rodata.str
.rodata.cst
.text
.rodata
.data
.data.rel.local
.data.rel
.data.rel.ro.local
.data.rel.ro
.ctors
.dtors
MachO doesn't support COMDATs, '
Associative COMDAT symbol '
' does not exist.
' is not a key for its COMDAT.
.tls$
.rdata
no-frame-pointer-elim-non-leaf
force-align-stack
Force align the stack to the minimum alignment needed for the function.
%noreg
%vreg
%physreg
:sub(
Unit~
BadUnit~
no-realign-stack
schedmodel
Use TargetSchedModel for latency lookup
scheditins
Use InstrItineraryData for latency lookup
twoaddr-reschedule
Coalesce copies by rescheduling (default=true)
Two-Address instruction pass
twoaddressinstruction
After two-address instruction pass
Remove unreachable blocks from the CFG
unreachableblockelim
Remove unreachable machine basic blocks
unreachable-mbb-elimination
********** REGISTER MAP **********
 -> fi#
Virtual Register Map
virtregmap
Virtual Register Rewriter
virtregrewriter
Prepare Windows exceptions
winehprepare
Windows exception handling preparation
wineh-parent
.wineh.phibb
Unexpected PHI on EH Pad
.wineh.spillslot
.wineh.reload
.for.
Uncolored BB!
Multicolor BB!
EH Pad still has a PHI!
seh_exception_code
sehcode
recover
.reg2mem
.reload
.catch
.cleanup
Failed to demote instruction used in exception handler of function 
WinEHPrepare failed to demote instruction
stub
Wide integer literals unsupported!
Unsupported literal constant!
literals
atst
uvsw
agx.functiongroups
Cannot print  function groups without a module
Function 
's group contains:
agx.common.store.limits
const-calc
number-of-dma
local-store
Unsupported literal constant inside struct/array!
Unsupported literal vector!
Function Groups
function-groups
 = comdat 
exactmatch
largest
noduplicates
samesize
 = type 
; ModuleID = '
target datalayout = "
target triple = "
module asm "
; uselistorder directives
uselistorder
_bb 
, { 
<null operand!>
asm 
sideeffect 
alignstack 
inteldialect 
", "
<badref>
attributes #
 = { 
distinct 
<temporary!> 
!DILocation(
line
column
scope
inlinedAt
!DIExpression(
!GenericDINode(
header
operands: {
tag: 
!DISubrange(
count
lowerBound
!DIEnumerator(
name
!DIBasicType(
size
encoding
!DIDerivedType(
file
baseType
offset
flags
extraData
!DICompositeType(
elements
runtimeLang
vtableHolder
templateParams
identifier
!DISubroutineType(
types
!DIFile(
directory
!DICompileUnit(
language
producer
isOptimized
runtimeVersion
splitDebugFilename
emissionKind
enums
retainedTypes
subprograms
globals
imports
dwoId
!DISubprogram(
linkageName
type
isLocal
isDefinition
scopeLine
containingType
virtuality
virtualIndex
declaration
variables
!DILexicalBlock(
!DILexicalBlockFile(
discriminator
!DINamespace(
!DIModule(
configMacros
includePath
isysroot
!DITemplateTypeParameter(
!DITemplateValueParameter(
!DIGlobalVariable(
variable
!DILocalVariable(
!DIObjCProperty(
setter
getter
attributes
!DIImportedEntity(
entity
 = !{
<empty name> 
void
half
float
double
x86_fp80
fp128
ppc_fp128
label
metadata
x86_mmx
%"type 
 addrspace(
opaque
<badref> = 
musttail 
tail 
notail 
 atomic
 weak
 volatile
    
          cleanup
          catch 
          filter 
] to 
 unwind 
] unwind 
to caller
 void
, ...
          to 
inalloca 
swifterror 
, align 
 fast
 nnan
 ninf
 nsz
 arcp
 nuw
 nsw
 exact
 inbounds
 <unknown operation 
 xchg
 add
 sub
 and
 nand
 xor
 max
 min
 umax
 umin
fastcc
coldcc
webkit_jscc
anyregcc
preserve_mostcc
preserve_allcc
ghccc
x86_stdcallcc
x86_fastcallcc
x86_thiscallcc
x86_vectorcallcc
intel_ocl_bicc
arm_apcscc
arm_aapcscc
arm_aapcs_vfpcc
msp430_intrcc
ptx_kernel
ptx_device
agx_ticc 
agx_pscc 
agx_vscc 
agx_sscc 
agx_sfcc 
agx_sicc 
agx_clcc 
agx_dscc 
agx_mrcc 
x86_64_sysvcc
x86_64_win64cc
spir_func
spir_kernel
swiftcc
 singlethread
 <bad ordering 
 unordered
 monotonic
 acquire
 release
 acq_rel
 seq_cst
!<unknown kind #
 ; (
; <label>:
; Error: Block without parent!
 No predecessors!
 preds = 
; Materializable
external 
unnamed_addr 
addrspace(
externally_initialized 
constant 
global 
, section "
private 
internal 
linkonce 
linkonce_odr 
weak 
weak_odr 
common 
appending 
extern_weak 
available_externally 
hidden 
protected 
dllimport 
dllexport 
thread_local 
thread_local(localdynamic) 
thread_local(initialexec) 
thread_local(localexec) 
 comdat
; Function Attrs: 
declare 
define 
 unnamed_addr
 section "
 align 
 gc "
 prefix 
 prologue 
 personality 
alias 
 <<NULL ALIASEE>>
zeroinitializer
blockaddress(
<placeholder or erroneous Constant>
sanitize_address
alwaysinline
argmemonly
builtin
byval
convergent
swifterror
swiftself
inalloca
inlinehint
inreg
jumptable
minsize
nest
nobuiltin
nocapture
noduplicate
noimplicitfloat
noinline
nonlazybind
noredzone
noreturn
nounwind
optnone
optsize
readnone
readonly
returned
returns_twice
signext
sspreq
sspstrong
safestack
sret
sanitize_thread
sanitize_memory
uwtable
zeroext
cold
align
alignstack
PAL[
  { 
llvm.x86.sse2.pcmpeq.
llvm.x86.avx2.pcmpeq.
pcmpeq
llvm.x86.sse2.pcmpgt.
llvm.x86.avx2.pcmpgt.
pcmpgt
llvm.x86.avx.movnt.dq.256
llvm.x86.avx.movnt.ps.256
llvm.x86.avx.movnt.pd.256
llvm.x86.xop.vpcom
llvm.x86.sse42.crc32.64.8
llvm.x86.avx.vbroadcast
llvm.x86.avx2.vbroadcasti128
llvm.x86.avx2.pbroadcast
llvm.x86.avx2.vbroadcast
llvm.x86.sse2.psll.dq
llvm.x86.sse2.psrl.dq
llvm.x86.avx2.psll.dq
llvm.x86.avx2.psrl.dq
llvm.x86.sse2.psll.dq.bs
llvm.x86.sse2.psrl.dq.bs
llvm.x86.avx2.psll.dq.bs
llvm.x86.avx2.psrl.dq.bs
llvm.x86.sse41.pblendw
llvm.x86.sse41.blendpd
llvm.x86.sse41.blendps
llvm.x86.avx.blend.pd.256
llvm.x86.avx.blend.ps.256
llvm.x86.avx2.pblendw
llvm.x86.avx2.pblendd.128
llvm.x86.avx2.pblendd.256
llvm.x86.avx.vinsertf128.pd.256
llvm.x86.avx.vinsertf128.ps.256
llvm.x86.avx.vinsertf128.si.256
llvm.x86.avx2.vinserti128
llvm.x86.avx.vextractf128.pd.256
llvm.x86.avx.vextractf128.ps.256
llvm.x86.avx.vextractf128.si.256
llvm.x86.avx2.vextracti128
llvm.x86.avx.vpermil.pd.256
llvm.x86.avx.vpermil.pd
llvm.x86.avx.vpermil.ps
llvm.vectorizer.
llvm.vectorizer.unroll
llvm.loop.interleave.count
llvm.loop.vectorize.
arm.neon.vclz
llvm.ctlz.
arm.neon.vcnt
ctlz.
cttz.
objectsize.
x86.sse2.pcmpeq.
x86.sse2.pcmpgt.
x86.avx2.pcmpeq.
x86.avx2.pcmpgt.
x86.avx2.vbroadcast
x86.avx2.pbroadcast
x86.avx.vpermil.
x86.avx.vinsertf128.pd.256
x86.avx.vinsertf128.ps.256
x86.avx.vinsertf128.si.256
x86.avx2.vinserti128
x86.avx.vextractf128.pd.256
x86.avx.vextractf128.ps.256
x86.avx.vextractf128.si.256
x86.avx2.vextracti128
x86.avx.movnt.dq.256
x86.avx.movnt.pd.256
x86.avx.movnt.ps.256
x86.sse42.crc32.64.8
x86.avx.vbroadcast.ss
x86.avx.vbroadcast.ss.256
x86.avx.vbroadcast.sd.256
x86.sse2.psll.dq
x86.sse2.psrl.dq
x86.avx2.psll.dq
x86.avx2.psrl.dq
x86.sse2.psll.dq.bs
x86.sse2.psrl.dq.bs
x86.avx2.psll.dq.bs
x86.avx2.psrl.dq.bs
x86.sse41.pblendw
x86.sse41.blendpd
x86.sse41.blendps
x86.avx.blend.pd.256
x86.avx.blend.ps.256
x86.avx2.pblendw
x86.avx2.pblendd.128
x86.avx2.pblendd.256
x86.avx2.vbroadcasti128
x86.xop.vpcom
x86.sse41.ptest
x86.sse41.ptestc
x86.sse41.ptestz
x86.sse41.ptestnzc
x86.sse41.insertps
x86.sse41.dppd
x86.sse41.dpps
x86.sse41.mpsadbw
x86.avx.dp.ps.256
x86.avx2.mpsadbw
x86.xop.vfrcz.ss
x86.xop.vfrcz.sd
x86.fma4.
llvm.x86.fma
full-set
empty-set
Error printing to file
Printing <null> Type
Printing <null> Value
decltype(nullptr)
-m:o
-m:x
-m:w
-m:e
Invalid address space, must be a 24bit integer
Missing size specification for pointer in datalayout string
Invalid pointer size of 0 bytes
Missing alignment specification for pointer in datalayout string
Pointer ABI alignment must be a power of 2
Pointer preferred alignment must be a power of 2
Sized aggregate specification in datalayout string
Missing alignment specification in datalayout string
ABI alignment specification must be >0 for non-aggregate types
Zero width native integer type in datalayout string
Unexpected trailing characters after mangling specifier in datalayout string
Expected mangling specifier in datalayout string
Unknown mangling specifier in datalayout string
Unknown mangling in datalayout string
Unknown specifier in datalayout string
Invalid bit width, must be a 24bit integer
Invalid ABI alignment, must be a 16bit integer
Invalid preferred alignment, must be a 16bit integer
Invalid ABI alignment, must be a power of 2
Invalid preferred alignment, must be a power of 2
Preferred alignment cannot be less than the ABI alignment
Trailing separator in datalayout string
Expected token before separator in datalayout string
not a number, or does not fit in an unsigned int
number of bits must be a byte width multiple
llvm.dbg.declare
llvm.dbg.value
Debug Info Version
DIFlagPrivate
DIFlagProtected
DIFlagPublic
DIFlagFwdDecl
DIFlagAppleBlock
DIFlagBlockByrefStruct
DIFlagVirtual
DIFlagArtificial
DIFlagExplicit
DIFlagPrototyped
DIFlagObjcClassComplete
DIFlagObjectPointer
DIFlagVector
DIFlagStaticMember
DIFlagLValueReference
DIFlagRValueReference
DIFlagExternalTypeRef
 @[ 
pass-remarks
pattern
Enable optimization remarks from passes whose name match the given regular expression
pass-remarks-missed
Enable missed optimization remarks from passes whose name match the given regular expression
pass-remarks-analysis
Enable optimization analysis remarks from passes whose name match the given regular expression
srcloc
 at line 
stack size limit exceeded (
) in 
ignoring debug info with an invalid version (
loop not interleaved: 
Invalid regular expression '
' in -pass-remarks: 
verify-dom-info
Verify dominator info (time consuming)
=============================--------------------------------
Inorder PostDominator Tree: 
Inorder Dominator Tree: 
DFSNumbers invalid: 
 slow queries.
DominatorTree is not up to date!
Computed:
Actual:
DominatorTree for function: 
Dominator Tree Construction
domtree
 <<exit node>>
not_intrinsic
llvm.aarch64.neon.pmull64
llvm.aarch64.neon.sqdmulls.scalar
llvm.aarch64.neon.vcvtfp2hf
llvm.aarch64.neon.vcvthf2fp
llvm.aarch64.sisd.fcvtxn
llvm.adjust.trampoline
llvm.agx.color.coverage.mask
llvm.agx.deferred.attribute.pass
llvm.agx.number.of.samples
llvm.agx.read.sample.number
llvm.agx.samplerState
llvm.agx.smp.1d.1xf
llvm.agx.smp.1d.1xh
llvm.agx.smp.1d.2xf
llvm.agx.smp.1d.2xh
llvm.agx.smp.1d.3xf
llvm.agx.smp.1d.3xh
llvm.agx.smp.1d.4xf
llvm.agx.smp.1d.4xh
llvm.agx.smp.1d.array.1xf
llvm.agx.smp.1d.array.1xh
llvm.agx.smp.1d.array.2xf
llvm.agx.smp.1d.array.2xh
llvm.agx.smp.1d.array.3xf
llvm.agx.smp.1d.array.3xh
llvm.agx.smp.1d.array.4xf
llvm.agx.smp.1d.array.4xh
llvm.agx.smp.1d.array.cf16.1xf
llvm.agx.smp.1d.array.cf16.1xh
llvm.agx.smp.1d.array.cf16.2xf
llvm.agx.smp.1d.array.cf16.2xh
llvm.agx.smp.1d.array.cf16.3xf
llvm.agx.smp.1d.array.cf16.3xh
llvm.agx.smp.1d.array.cf16.4xf
llvm.agx.smp.1d.array.cf16.4xh
llvm.agx.smp.1d.array.ci16.1xf
llvm.agx.smp.1d.array.ci16.1xh
llvm.agx.smp.1d.array.ci16.2xf
llvm.agx.smp.1d.array.ci16.2xh
llvm.agx.smp.1d.array.ci16.3xf
llvm.agx.smp.1d.array.ci16.3xh
llvm.agx.smp.1d.array.ci16.4xf
llvm.agx.smp.1d.array.ci16.4xh
llvm.agx.smp.1d.array.ci16.lod.1xf
llvm.agx.smp.1d.array.ci16.lod.1xh
llvm.agx.smp.1d.array.ci16.lod.2xf
llvm.agx.smp.1d.array.ci16.lod.2xh
llvm.agx.smp.1d.array.ci16.lod.3xf
llvm.agx.smp.1d.array.ci16.lod.3xh
llvm.agx.smp.1d.array.ci16.lod.4xf
llvm.agx.smp.1d.array.ci16.lod.4xh
llvm.agx.smp.1d.array.i.1xf
llvm.agx.smp.1d.array.i.1xh
llvm.agx.smp.1d.array.i.2xf
llvm.agx.smp.1d.array.i.2xh
llvm.agx.smp.1d.array.i.3xf
llvm.agx.smp.1d.array.i.3xh
llvm.agx.smp.1d.array.i.4xf
llvm.agx.smp.1d.array.i.4xh
llvm.agx.smp.1d.array.i.lod.1xf
llvm.agx.smp.1d.array.i.lod.1xh
llvm.agx.smp.1d.array.i.lod.2xf
llvm.agx.smp.1d.array.i.lod.2xh
llvm.agx.smp.1d.array.i.lod.3xf
llvm.agx.smp.1d.array.i.lod.3xh
llvm.agx.smp.1d.array.i.lod.4xf
llvm.agx.smp.1d.array.i.lod.4xh
llvm.agx.smp.1d.cf16.1xf
llvm.agx.smp.1d.cf16.1xh
llvm.agx.smp.1d.cf16.2xf
llvm.agx.smp.1d.cf16.2xh
llvm.agx.smp.1d.cf16.3xf
llvm.agx.smp.1d.cf16.3xh
llvm.agx.smp.1d.cf16.4xf
llvm.agx.smp.1d.cf16.4xh
llvm.agx.smp.1d.ci16.1xf
llvm.agx.smp.1d.ci16.1xh
llvm.agx.smp.1d.ci16.2xf
llvm.agx.smp.1d.ci16.2xh
llvm.agx.smp.1d.ci16.3xf
llvm.agx.smp.1d.ci16.3xh
llvm.agx.smp.1d.ci16.4xf
llvm.agx.smp.1d.ci16.4xh
llvm.agx.smp.1d.ci16.lod.1xf
llvm.agx.smp.1d.ci16.lod.1xh
llvm.agx.smp.1d.ci16.lod.2xf
llvm.agx.smp.1d.ci16.lod.2xh
llvm.agx.smp.1d.ci16.lod.3xf
llvm.agx.smp.1d.ci16.lod.3xh
llvm.agx.smp.1d.ci16.lod.4xf
llvm.agx.smp.1d.ci16.lod.4xh
llvm.agx.smp.1d.i.1xf
llvm.agx.smp.1d.i.1xh
llvm.agx.smp.1d.i.2xf
llvm.agx.smp.1d.i.2xh
llvm.agx.smp.1d.i.3xf
llvm.agx.smp.1d.i.3xh
llvm.agx.smp.1d.i.4xf
llvm.agx.smp.1d.i.4xh
llvm.agx.smp.1d.i.lod.1xf
llvm.agx.smp.1d.i.lod.1xh
llvm.agx.smp.1d.i.lod.2xf
llvm.agx.smp.1d.i.lod.2xh
llvm.agx.smp.1d.i.lod.3xf
llvm.agx.smp.1d.i.lod.3xh
llvm.agx.smp.1d.i.lod.4xf
llvm.agx.smp.1d.i.lod.4xh
llvm.agx.smp.2d.1xf
llvm.agx.smp.2d.1xh
llvm.agx.smp.2d.2xf
llvm.agx.smp.2d.2xh
llvm.agx.smp.2d.3xf
llvm.agx.smp.2d.3xh
llvm.agx.smp.2d.4xf
llvm.agx.smp.2d.4xh
llvm.agx.smp.2d.array.1xf
llvm.agx.smp.2d.array.1xh
llvm.agx.smp.2d.array.2xf
llvm.agx.smp.2d.array.2xh
llvm.agx.smp.2d.array.3xf
llvm.agx.smp.2d.array.3xh
llvm.agx.smp.2d.array.4xf
llvm.agx.smp.2d.array.4xh
llvm.agx.smp.2d.array.cf16.1xf
llvm.agx.smp.2d.array.cf16.1xh
llvm.agx.smp.2d.array.cf16.2xf
llvm.agx.smp.2d.array.cf16.2xh
llvm.agx.smp.2d.array.cf16.3xf
llvm.agx.smp.2d.array.cf16.3xh
llvm.agx.smp.2d.array.cf16.4xf
llvm.agx.smp.2d.array.cf16.4xh
llvm.agx.smp.2d.array.cf16.gather.1xf
llvm.agx.smp.2d.array.cf16.gather.1xh
llvm.agx.smp.2d.array.cf16.gather.2xf
llvm.agx.smp.2d.array.cf16.gather.2xh
llvm.agx.smp.2d.array.cf16.gather.3xf
llvm.agx.smp.2d.array.cf16.gather.3xh
llvm.agx.smp.2d.array.cf16.gather.4xf
llvm.agx.smp.2d.array.cf16.gather.4xh
llvm.agx.smp.2d.array.cf16.gather.offset.1xf
llvm.agx.smp.2d.array.cf16.gather.offset.1xh
llvm.agx.smp.2d.array.cf16.gather.offset.2xf
llvm.agx.smp.2d.array.cf16.gather.offset.2xh
llvm.agx.smp.2d.array.cf16.gather.offset.3xf
llvm.agx.smp.2d.array.cf16.gather.offset.3xh
llvm.agx.smp.2d.array.cf16.gather.offset.4xf
llvm.agx.smp.2d.array.cf16.gather.offset.4xh
llvm.agx.smp.2d.array.cf16.grad.1xf
llvm.agx.smp.2d.array.cf16.grad.1xh
llvm.agx.smp.2d.array.cf16.grad.2xf
llvm.agx.smp.2d.array.cf16.grad.2xh
llvm.agx.smp.2d.array.cf16.grad.3xf
llvm.agx.smp.2d.array.cf16.grad.3xh
llvm.agx.smp.2d.array.cf16.grad.4xf
llvm.agx.smp.2d.array.cf16.grad.4xh
llvm.agx.smp.2d.array.cf16.grad.offset.1xf
llvm.agx.smp.2d.array.cf16.grad.offset.1xh
llvm.agx.smp.2d.array.cf16.grad.offset.2xf
llvm.agx.smp.2d.array.cf16.grad.offset.2xh
llvm.agx.smp.2d.array.cf16.grad.offset.3xf
llvm.agx.smp.2d.array.cf16.grad.offset.3xh
llvm.agx.smp.2d.array.cf16.grad.offset.4xf
llvm.agx.smp.2d.array.cf16.grad.offset.4xh
llvm.agx.smp.2d.array.cf16.lod.1xf
llvm.agx.smp.2d.array.cf16.lod.1xh
llvm.agx.smp.2d.array.cf16.lod.2xf
llvm.agx.smp.2d.array.cf16.lod.2xh
llvm.agx.smp.2d.array.cf16.lod.3xf
llvm.agx.smp.2d.array.cf16.lod.3xh
llvm.agx.smp.2d.array.cf16.lod.4xf
llvm.agx.smp.2d.array.cf16.lod.4xh
llvm.agx.smp.2d.array.cf16.lod.offset.1xf
llvm.agx.smp.2d.array.cf16.lod.offset.1xh
llvm.agx.smp.2d.array.cf16.lod.offset.2xf
llvm.agx.smp.2d.array.cf16.lod.offset.2xh
llvm.agx.smp.2d.array.cf16.lod.offset.3xf
llvm.agx.smp.2d.array.cf16.lod.offset.3xh
llvm.agx.smp.2d.array.cf16.lod.offset.4xf
llvm.agx.smp.2d.array.cf16.lod.offset.4xh
llvm.agx.smp.2d.array.cf16.offset.1xf
llvm.agx.smp.2d.array.cf16.offset.1xh
llvm.agx.smp.2d.array.cf16.offset.2xf
llvm.agx.smp.2d.array.cf16.offset.2xh
llvm.agx.smp.2d.array.cf16.offset.3xf
llvm.agx.smp.2d.array.cf16.offset.3xh
llvm.agx.smp.2d.array.cf16.offset.4xf
llvm.agx.smp.2d.array.cf16.offset.4xh
llvm.agx.smp.2d.array.cf16.shadow.1xf
llvm.agx.smp.2d.array.cf16.shadow.1xh
llvm.agx.smp.2d.array.cf16.shadow.2xf
llvm.agx.smp.2d.array.cf16.shadow.2xh
llvm.agx.smp.2d.array.cf16.shadow.3xf
llvm.agx.smp.2d.array.cf16.shadow.3xh
llvm.agx.smp.2d.array.cf16.shadow.4xf
llvm.agx.smp.2d.array.cf16.shadow.4xh
llvm.agx.smp.2d.array.cf16.shadow.gather.1xf
llvm.agx.smp.2d.array.cf16.shadow.gather.1xh
llvm.agx.smp.2d.array.cf16.shadow.gather.2xf
llvm.agx.smp.2d.array.cf16.shadow.gather.2xh
llvm.agx.smp.2d.array.cf16.shadow.gather.3xf
llvm.agx.smp.2d.array.cf16.shadow.gather.3xh
llvm.agx.smp.2d.array.cf16.shadow.gather.4xf
llvm.agx.smp.2d.array.cf16.shadow.gather.4xh
llvm.agx.smp.2d.array.cf16.shadow.gather.offset.1xf
llvm.agx.smp.2d.array.cf16.shadow.gather.offset.1xh
llvm.agx.smp.2d.array.cf16.shadow.gather.offset.2xf
llvm.agx.smp.2d.array.cf16.shadow.gather.offset.2xh
llvm.agx.smp.2d.array.cf16.shadow.gather.offset.3xf
llvm.agx.smp.2d.array.cf16.shadow.gather.offset.3xh
llvm.agx.smp.2d.array.cf16.shadow.gather.offset.4xf
llvm.agx.smp.2d.array.cf16.shadow.gather.offset.4xh
llvm.agx.smp.2d.array.cf16.shadow.grad.1xf
llvm.agx.smp.2d.array.cf16.shadow.grad.1xh
llvm.agx.smp.2d.array.cf16.shadow.grad.2xf
llvm.agx.smp.2d.array.cf16.shadow.grad.2xh
llvm.agx.smp.2d.array.cf16.shadow.grad.3xf
llvm.agx.smp.2d.array.cf16.shadow.grad.3xh
llvm.agx.smp.2d.array.cf16.shadow.grad.4xf
llvm.agx.smp.2d.array.cf16.shadow.grad.4xh
llvm.agx.smp.2d.array.cf16.shadow.grad.offset.1xf
llvm.agx.smp.2d.array.cf16.shadow.grad.offset.1xh
llvm.agx.smp.2d.array.cf16.shadow.grad.offset.2xf
llvm.agx.smp.2d.array.cf16.shadow.grad.offset.2xh
llvm.agx.smp.2d.array.cf16.shadow.grad.offset.3xf
llvm.agx.smp.2d.array.cf16.shadow.grad.offset.3xh
llvm.agx.smp.2d.array.cf16.shadow.grad.offset.4xf
llvm.agx.smp.2d.array.cf16.shadow.grad.offset.4xh
llvm.agx.smp.2d.array.cf16.shadow.lod.1xf
llvm.agx.smp.2d.array.cf16.shadow.lod.1xh
llvm.agx.smp.2d.array.cf16.shadow.lod.2xf
llvm.agx.smp.2d.array.cf16.shadow.lod.2xh
llvm.agx.smp.2d.array.cf16.shadow.lod.3xf
llvm.agx.smp.2d.array.cf16.shadow.lod.3xh
llvm.agx.smp.2d.array.cf16.shadow.lod.4xf
llvm.agx.smp.2d.array.cf16.shadow.lod.4xh
llvm.agx.smp.2d.array.cf16.shadow.lod.offset.1xf
llvm.agx.smp.2d.array.cf16.shadow.lod.offset.1xh
llvm.agx.smp.2d.array.cf16.shadow.lod.offset.2xf
llvm.agx.smp.2d.array.cf16.shadow.lod.offset.2xh
llvm.agx.smp.2d.array.cf16.shadow.lod.offset.3xf
llvm.agx.smp.2d.array.cf16.shadow.lod.offset.3xh
llvm.agx.smp.2d.array.cf16.shadow.lod.offset.4xf
llvm.agx.smp.2d.array.cf16.shadow.lod.offset.4xh
llvm.agx.smp.2d.array.cf16.shadow.offset.1xf
llvm.agx.smp.2d.array.cf16.shadow.offset.1xh
llvm.agx.smp.2d.array.cf16.shadow.offset.2xf
llvm.agx.smp.2d.array.cf16.shadow.offset.2xh
llvm.agx.smp.2d.array.cf16.shadow.offset.3xf
llvm.agx.smp.2d.array.cf16.shadow.offset.3xh
llvm.agx.smp.2d.array.cf16.shadow.offset.4xf
llvm.agx.smp.2d.array.cf16.shadow.offset.4xh
llvm.agx.smp.2d.array.ci16.lod.1xf
llvm.agx.smp.2d.array.ci16.lod.1xh
llvm.agx.smp.2d.array.ci16.lod.2xf
llvm.agx.smp.2d.array.ci16.lod.2xh
llvm.agx.smp.2d.array.ci16.lod.3xf
llvm.agx.smp.2d.array.ci16.lod.3xh
llvm.agx.smp.2d.array.ci16.lod.4xf
llvm.agx.smp.2d.array.ci16.lod.4xh
llvm.agx.smp.2d.array.ci16.lod.offset.1xf
llvm.agx.smp.2d.array.ci16.lod.offset.1xh
llvm.agx.smp.2d.array.ci16.lod.offset.2xf
llvm.agx.smp.2d.array.ci16.lod.offset.2xh
llvm.agx.smp.2d.array.ci16.lod.offset.3xf
llvm.agx.smp.2d.array.ci16.lod.offset.3xh
llvm.agx.smp.2d.array.ci16.lod.offset.4xf
llvm.agx.smp.2d.array.ci16.lod.offset.4xh
llvm.agx.smp.2d.array.gather.1xf
llvm.agx.smp.2d.array.gather.1xh
llvm.agx.smp.2d.array.gather.2xf
llvm.agx.smp.2d.array.gather.2xh
llvm.agx.smp.2d.array.gather.3xf
llvm.agx.smp.2d.array.gather.3xh
llvm.agx.smp.2d.array.gather.4xf
llvm.agx.smp.2d.array.gather.4xh
llvm.agx.smp.2d.array.gather.offset.1xf
llvm.agx.smp.2d.array.gather.offset.1xh
llvm.agx.smp.2d.array.gather.offset.2xf
llvm.agx.smp.2d.array.gather.offset.2xh
llvm.agx.smp.2d.array.gather.offset.3xf
llvm.agx.smp.2d.array.gather.offset.3xh
llvm.agx.smp.2d.array.gather.offset.4xf
llvm.agx.smp.2d.array.gather.offset.4xh
llvm.agx.smp.2d.array.grad.1xf
llvm.agx.smp.2d.array.grad.1xh
llvm.agx.smp.2d.array.grad.2xf
llvm.agx.smp.2d.array.grad.2xh
llvm.agx.smp.2d.array.grad.3xf
llvm.agx.smp.2d.array.grad.3xh
llvm.agx.smp.2d.array.grad.4xf
llvm.agx.smp.2d.array.grad.4xh
llvm.agx.smp.2d.array.grad.offset.1xf
llvm.agx.smp.2d.array.grad.offset.1xh
llvm.agx.smp.2d.array.grad.offset.2xf
llvm.agx.smp.2d.array.grad.offset.2xh
llvm.agx.smp.2d.array.grad.offset.3xf
llvm.agx.smp.2d.array.grad.offset.3xh
llvm.agx.smp.2d.array.grad.offset.4xf
llvm.agx.smp.2d.array.grad.offset.4xh
llvm.agx.smp.2d.array.i.lod.1xf
llvm.agx.smp.2d.array.i.lod.1xh
llvm.agx.smp.2d.array.i.lod.2xf
llvm.agx.smp.2d.array.i.lod.2xh
llvm.agx.smp.2d.array.i.lod.3xf
llvm.agx.smp.2d.array.i.lod.3xh
llvm.agx.smp.2d.array.i.lod.4xf
llvm.agx.smp.2d.array.i.lod.4xh
llvm.agx.smp.2d.array.i.lod.offset.1xf
llvm.agx.smp.2d.array.i.lod.offset.1xh
llvm.agx.smp.2d.array.i.lod.offset.2xf
llvm.agx.smp.2d.array.i.lod.offset.2xh
llvm.agx.smp.2d.array.i.lod.offset.3xf
llvm.agx.smp.2d.array.i.lod.offset.3xh
llvm.agx.smp.2d.array.i.lod.offset.4xf
llvm.agx.smp.2d.array.i.lod.offset.4xh
llvm.agx.smp.2d.array.lod.1xf
llvm.agx.smp.2d.array.lod.1xh
llvm.agx.smp.2d.array.lod.2xf
llvm.agx.smp.2d.array.lod.2xh
llvm.agx.smp.2d.array.lod.3xf
llvm.agx.smp.2d.array.lod.3xh
llvm.agx.smp.2d.array.lod.4xf
llvm.agx.smp.2d.array.lod.4xh
llvm.agx.smp.2d.array.lod.offset.1xf
llvm.agx.smp.2d.array.lod.offset.1xh
llvm.agx.smp.2d.array.lod.offset.2xf
llvm.agx.smp.2d.array.lod.offset.2xh
llvm.agx.smp.2d.array.lod.offset.3xf
llvm.agx.smp.2d.array.lod.offset.3xh
llvm.agx.smp.2d.array.lod.offset.4xf
llvm.agx.smp.2d.array.lod.offset.4xh
llvm.agx.smp.2d.array.offset.1xf
llvm.agx.smp.2d.array.offset.1xh
llvm.agx.smp.2d.array.offset.2xf
llvm.agx.smp.2d.array.offset.2xh
llvm.agx.smp.2d.array.offset.3xf
llvm.agx.smp.2d.array.offset.3xh
llvm.agx.smp.2d.array.offset.4xf
llvm.agx.smp.2d.array.offset.4xh
llvm.agx.smp.2d.array.shadow.1xf
llvm.agx.smp.2d.array.shadow.1xh
llvm.agx.smp.2d.array.shadow.2xf
llvm.agx.smp.2d.array.shadow.2xh
llvm.agx.smp.2d.array.shadow.3xf
llvm.agx.smp.2d.array.shadow.3xh
llvm.agx.smp.2d.array.shadow.4xf
llvm.agx.smp.2d.array.shadow.4xh
llvm.agx.smp.2d.array.shadow.gather.1xf
llvm.agx.smp.2d.array.shadow.gather.1xh
llvm.agx.smp.2d.array.shadow.gather.2xf
llvm.agx.smp.2d.array.shadow.gather.2xh
llvm.agx.smp.2d.array.shadow.gather.3xf
llvm.agx.smp.2d.array.shadow.gather.3xh
llvm.agx.smp.2d.array.shadow.gather.4xf
llvm.agx.smp.2d.array.shadow.gather.4xh
llvm.agx.smp.2d.array.shadow.gather.offset.1xf
llvm.agx.smp.2d.array.shadow.gather.offset.1xh
llvm.agx.smp.2d.array.shadow.gather.offset.2xf
llvm.agx.smp.2d.array.shadow.gather.offset.2xh
llvm.agx.smp.2d.array.shadow.gather.offset.3xf
llvm.agx.smp.2d.array.shadow.gather.offset.3xh
llvm.agx.smp.2d.array.shadow.gather.offset.4xf
llvm.agx.smp.2d.array.shadow.gather.offset.4xh
llvm.agx.smp.2d.array.shadow.grad.1xf
llvm.agx.smp.2d.array.shadow.grad.1xh
llvm.agx.smp.2d.array.shadow.grad.2xf
llvm.agx.smp.2d.array.shadow.grad.2xh
llvm.agx.smp.2d.array.shadow.grad.3xf
llvm.agx.smp.2d.array.shadow.grad.3xh
llvm.agx.smp.2d.array.shadow.grad.4xf
llvm.agx.smp.2d.array.shadow.grad.4xh
llvm.agx.smp.2d.array.shadow.grad.offset.1xf
llvm.agx.smp.2d.array.shadow.grad.offset.1xh
llvm.agx.smp.2d.array.shadow.grad.offset.2xf
llvm.agx.smp.2d.array.shadow.grad.offset.2xh
llvm.agx.smp.2d.array.shadow.grad.offset.3xf
llvm.agx.smp.2d.array.shadow.grad.offset.3xh
llvm.agx.smp.2d.array.shadow.grad.offset.4xf
llvm.agx.smp.2d.array.shadow.grad.offset.4xh
llvm.agx.smp.2d.array.shadow.lod.1xf
llvm.agx.smp.2d.array.shadow.lod.1xh
llvm.agx.smp.2d.array.shadow.lod.2xf
llvm.agx.smp.2d.array.shadow.lod.2xh
llvm.agx.smp.2d.array.shadow.lod.3xf
llvm.agx.smp.2d.array.shadow.lod.3xh
llvm.agx.smp.2d.array.shadow.lod.4xf
llvm.agx.smp.2d.array.shadow.lod.4xh
llvm.agx.smp.2d.array.shadow.lod.offset.1xf
llvm.agx.smp.2d.array.shadow.lod.offset.1xh
llvm.agx.smp.2d.array.shadow.lod.offset.2xf
llvm.agx.smp.2d.array.shadow.lod.offset.2xh
llvm.agx.smp.2d.array.shadow.lod.offset.3xf
llvm.agx.smp.2d.array.shadow.lod.offset.3xh
llvm.agx.smp.2d.array.shadow.lod.offset.4xf
llvm.agx.smp.2d.array.shadow.lod.offset.4xh
llvm.agx.smp.2d.array.shadow.offset.1xf
llvm.agx.smp.2d.array.shadow.offset.1xh
llvm.agx.smp.2d.array.shadow.offset.2xf
llvm.agx.smp.2d.array.shadow.offset.2xh
llvm.agx.smp.2d.array.shadow.offset.3xf
llvm.agx.smp.2d.array.shadow.offset.3xh
llvm.agx.smp.2d.array.shadow.offset.4xf
llvm.agx.smp.2d.array.shadow.offset.4xh
llvm.agx.smp.2d.cf16.1xf
llvm.agx.smp.2d.cf16.1xh
llvm.agx.smp.2d.cf16.2xf
llvm.agx.smp.2d.cf16.2xh
llvm.agx.smp.2d.cf16.3xf
llvm.agx.smp.2d.cf16.3xh
llvm.agx.smp.2d.cf16.4xf
llvm.agx.smp.2d.cf16.4xh
llvm.agx.smp.2d.cf16.gather.1xf
llvm.agx.smp.2d.cf16.gather.1xh
llvm.agx.smp.2d.cf16.gather.2xf
llvm.agx.smp.2d.cf16.gather.2xh
llvm.agx.smp.2d.cf16.gather.3xf
llvm.agx.smp.2d.cf16.gather.3xh
llvm.agx.smp.2d.cf16.gather.4xf
llvm.agx.smp.2d.cf16.gather.4xh
llvm.agx.smp.2d.cf16.gather.offset.1xf
llvm.agx.smp.2d.cf16.gather.offset.1xh
llvm.agx.smp.2d.cf16.gather.offset.2xf
llvm.agx.smp.2d.cf16.gather.offset.2xh
llvm.agx.smp.2d.cf16.gather.offset.3xf
llvm.agx.smp.2d.cf16.gather.offset.3xh
llvm.agx.smp.2d.cf16.gather.offset.4xf
llvm.agx.smp.2d.cf16.gather.offset.4xh
llvm.agx.smp.2d.cf16.grad.1xf
llvm.agx.smp.2d.cf16.grad.1xh
llvm.agx.smp.2d.cf16.grad.2xf
llvm.agx.smp.2d.cf16.grad.2xh
llvm.agx.smp.2d.cf16.grad.3xf
llvm.agx.smp.2d.cf16.grad.3xh
llvm.agx.smp.2d.cf16.grad.4xf
llvm.agx.smp.2d.cf16.grad.4xh
llvm.agx.smp.2d.cf16.grad.offset.1xf
llvm.agx.smp.2d.cf16.grad.offset.1xh
llvm.agx.smp.2d.cf16.grad.offset.2xf
llvm.agx.smp.2d.cf16.grad.offset.2xh
llvm.agx.smp.2d.cf16.grad.offset.3xf
llvm.agx.smp.2d.cf16.grad.offset.3xh
llvm.agx.smp.2d.cf16.grad.offset.4xf
llvm.agx.smp.2d.cf16.grad.offset.4xh
llvm.agx.smp.2d.cf16.lod.1xf
llvm.agx.smp.2d.cf16.lod.1xh
llvm.agx.smp.2d.cf16.lod.2xf
llvm.agx.smp.2d.cf16.lod.2xh
llvm.agx.smp.2d.cf16.lod.3xf
llvm.agx.smp.2d.cf16.lod.3xh
llvm.agx.smp.2d.cf16.lod.4xf
llvm.agx.smp.2d.cf16.lod.4xh
llvm.agx.smp.2d.cf16.lod.offset.1xf
llvm.agx.smp.2d.cf16.lod.offset.1xh
llvm.agx.smp.2d.cf16.lod.offset.2xf
llvm.agx.smp.2d.cf16.lod.offset.2xh
llvm.agx.smp.2d.cf16.lod.offset.3xf
llvm.agx.smp.2d.cf16.lod.offset.3xh
llvm.agx.smp.2d.cf16.lod.offset.4xf
llvm.agx.smp.2d.cf16.lod.offset.4xh
llvm.agx.smp.2d.cf16.offset.1xf
llvm.agx.smp.2d.cf16.offset.1xh
llvm.agx.smp.2d.cf16.offset.2xf
llvm.agx.smp.2d.cf16.offset.2xh
llvm.agx.smp.2d.cf16.offset.3xf
llvm.agx.smp.2d.cf16.offset.3xh
llvm.agx.smp.2d.cf16.offset.4xf
llvm.agx.smp.2d.cf16.offset.4xh
llvm.agx.smp.2d.cf16.shadow.1xf
llvm.agx.smp.2d.cf16.shadow.1xh
llvm.agx.smp.2d.cf16.shadow.2xf
llvm.agx.smp.2d.cf16.shadow.2xh
llvm.agx.smp.2d.cf16.shadow.3xf
llvm.agx.smp.2d.cf16.shadow.3xh
llvm.agx.smp.2d.cf16.shadow.4xf
llvm.agx.smp.2d.cf16.shadow.4xh
llvm.agx.smp.2d.cf16.shadow.gather.1xf
llvm.agx.smp.2d.cf16.shadow.gather.1xh
llvm.agx.smp.2d.cf16.shadow.gather.2xf
llvm.agx.smp.2d.cf16.shadow.gather.2xh
llvm.agx.smp.2d.cf16.shadow.gather.3xf
llvm.agx.smp.2d.cf16.shadow.gather.3xh
llvm.agx.smp.2d.cf16.shadow.gather.4xf
llvm.agx.smp.2d.cf16.shadow.gather.4xh
llvm.agx.smp.2d.cf16.shadow.gather.offset.1xf
llvm.agx.smp.2d.cf16.shadow.gather.offset.1xh
llvm.agx.smp.2d.cf16.shadow.gather.offset.2xf
llvm.agx.smp.2d.cf16.shadow.gather.offset.2xh
llvm.agx.smp.2d.cf16.shadow.gather.offset.3xf
llvm.agx.smp.2d.cf16.shadow.gather.offset.3xh
llvm.agx.smp.2d.cf16.shadow.gather.offset.4xf
llvm.agx.smp.2d.cf16.shadow.gather.offset.4xh
llvm.agx.smp.2d.cf16.shadow.grad.1xf
llvm.agx.smp.2d.cf16.shadow.grad.1xh
llvm.agx.smp.2d.cf16.shadow.grad.2xf
llvm.agx.smp.2d.cf16.shadow.grad.2xh
llvm.agx.smp.2d.cf16.shadow.grad.3xf
llvm.agx.smp.2d.cf16.shadow.grad.3xh
llvm.agx.smp.2d.cf16.shadow.grad.4xf
llvm.agx.smp.2d.cf16.shadow.grad.4xh
llvm.agx.smp.2d.cf16.shadow.grad.offset.1xf
llvm.agx.smp.2d.cf16.shadow.grad.offset.1xh
llvm.agx.smp.2d.cf16.shadow.grad.offset.2xf
llvm.agx.smp.2d.cf16.shadow.grad.offset.2xh
llvm.agx.smp.2d.cf16.shadow.grad.offset.3xf
llvm.agx.smp.2d.cf16.shadow.grad.offset.3xh
llvm.agx.smp.2d.cf16.shadow.grad.offset.4xf
llvm.agx.smp.2d.cf16.shadow.grad.offset.4xh
llvm.agx.smp.2d.cf16.shadow.lod.1xf
llvm.agx.smp.2d.cf16.shadow.lod.1xh
llvm.agx.smp.2d.cf16.shadow.lod.2xf
llvm.agx.smp.2d.cf16.shadow.lod.2xh
llvm.agx.smp.2d.cf16.shadow.lod.3xf
llvm.agx.smp.2d.cf16.shadow.lod.3xh
llvm.agx.smp.2d.cf16.shadow.lod.4xf
llvm.agx.smp.2d.cf16.shadow.lod.4xh
llvm.agx.smp.2d.cf16.shadow.lod.offset.1xf
llvm.agx.smp.2d.cf16.shadow.lod.offset.1xh
llvm.agx.smp.2d.cf16.shadow.lod.offset.2xf
llvm.agx.smp.2d.cf16.shadow.lod.offset.2xh
llvm.agx.smp.2d.cf16.shadow.lod.offset.3xf
llvm.agx.smp.2d.cf16.shadow.lod.offset.3xh
llvm.agx.smp.2d.cf16.shadow.lod.offset.4xf
llvm.agx.smp.2d.cf16.shadow.lod.offset.4xh
llvm.agx.smp.2d.cf16.shadow.offset.1xf
llvm.agx.smp.2d.cf16.shadow.offset.1xh
llvm.agx.smp.2d.cf16.shadow.offset.2xf
llvm.agx.smp.2d.cf16.shadow.offset.2xh
llvm.agx.smp.2d.cf16.shadow.offset.3xf
llvm.agx.smp.2d.cf16.shadow.offset.3xh
llvm.agx.smp.2d.cf16.shadow.offset.4xf
llvm.agx.smp.2d.cf16.shadow.offset.4xh
llvm.agx.smp.2d.ci16.lod.1xf
llvm.agx.smp.2d.ci16.lod.1xh
llvm.agx.smp.2d.ci16.lod.2xf
llvm.agx.smp.2d.ci16.lod.2xh
llvm.agx.smp.2d.ci16.lod.3xf
llvm.agx.smp.2d.ci16.lod.3xh
llvm.agx.smp.2d.ci16.lod.4xf
llvm.agx.smp.2d.ci16.lod.4xh
llvm.agx.smp.2d.ci16.lod.offset.1xf
llvm.agx.smp.2d.ci16.lod.offset.1xh
llvm.agx.smp.2d.ci16.lod.offset.2xf
llvm.agx.smp.2d.ci16.lod.offset.2xh
llvm.agx.smp.2d.ci16.lod.offset.3xf
llvm.agx.smp.2d.ci16.lod.offset.3xh
llvm.agx.smp.2d.ci16.lod.offset.4xf
llvm.agx.smp.2d.ci16.lod.offset.4xh
llvm.agx.smp.2d.gather.1xf
llvm.agx.smp.2d.gather.1xh
llvm.agx.smp.2d.gather.2xf
llvm.agx.smp.2d.gather.2xh
llvm.agx.smp.2d.gather.3xf
llvm.agx.smp.2d.gather.3xh
llvm.agx.smp.2d.gather.4xf
llvm.agx.smp.2d.gather.4xh
llvm.agx.smp.2d.gather.offset.1xf
llvm.agx.smp.2d.gather.offset.1xh
llvm.agx.smp.2d.gather.offset.2xf
llvm.agx.smp.2d.gather.offset.2xh
llvm.agx.smp.2d.gather.offset.3xf
llvm.agx.smp.2d.gather.offset.3xh
llvm.agx.smp.2d.gather.offset.4xf
llvm.agx.smp.2d.gather.offset.4xh
llvm.agx.smp.2d.grad.1xf
llvm.agx.smp.2d.grad.1xh
llvm.agx.smp.2d.grad.2xf
llvm.agx.smp.2d.grad.2xh
llvm.agx.smp.2d.grad.3xf
llvm.agx.smp.2d.grad.3xh
llvm.agx.smp.2d.grad.4xf
llvm.agx.smp.2d.grad.4xh
llvm.agx.smp.2d.grad.offset.1xf
llvm.agx.smp.2d.grad.offset.1xh
llvm.agx.smp.2d.grad.offset.2xf
llvm.agx.smp.2d.grad.offset.2xh
llvm.agx.smp.2d.grad.offset.3xf
llvm.agx.smp.2d.grad.offset.3xh
llvm.agx.smp.2d.grad.offset.4xf
llvm.agx.smp.2d.grad.offset.4xh
llvm.agx.smp.2d.i.lod.1xf
llvm.agx.smp.2d.i.lod.1xh
llvm.agx.smp.2d.i.lod.2xf
llvm.agx.smp.2d.i.lod.2xh
llvm.agx.smp.2d.i.lod.3xf
llvm.agx.smp.2d.i.lod.3xh
llvm.agx.smp.2d.i.lod.4xf
llvm.agx.smp.2d.i.lod.4xh
llvm.agx.smp.2d.i.lod.offset.1xf
llvm.agx.smp.2d.i.lod.offset.1xh
llvm.agx.smp.2d.i.lod.offset.2xf
llvm.agx.smp.2d.i.lod.offset.2xh
llvm.agx.smp.2d.i.lod.offset.3xf
llvm.agx.smp.2d.i.lod.offset.3xh
llvm.agx.smp.2d.i.lod.offset.4xf
llvm.agx.smp.2d.i.lod.offset.4xh
llvm.agx.smp.2d.lod.1xf
llvm.agx.smp.2d.lod.1xh
llvm.agx.smp.2d.lod.2xf
llvm.agx.smp.2d.lod.2xh
llvm.agx.smp.2d.lod.3xf
llvm.agx.smp.2d.lod.3xh
llvm.agx.smp.2d.lod.4xf
llvm.agx.smp.2d.lod.4xh
llvm.agx.smp.2d.lod.offset.1xf
llvm.agx.smp.2d.lod.offset.1xh
llvm.agx.smp.2d.lod.offset.2xf
llvm.agx.smp.2d.lod.offset.2xh
llvm.agx.smp.2d.lod.offset.3xf
llvm.agx.smp.2d.lod.offset.3xh
llvm.agx.smp.2d.lod.offset.4xf
llvm.agx.smp.2d.lod.offset.4xh
llvm.agx.smp.2d.msaa.1xf
llvm.agx.smp.2d.msaa.1xh
llvm.agx.smp.2d.msaa.2xf
llvm.agx.smp.2d.msaa.2xh
llvm.agx.smp.2d.msaa.3xf
llvm.agx.smp.2d.msaa.3xh
llvm.agx.smp.2d.msaa.4xf
llvm.agx.smp.2d.msaa.4xh
llvm.agx.smp.2d.msaa.cf16.1xf
llvm.agx.smp.2d.msaa.cf16.1xh
llvm.agx.smp.2d.msaa.cf16.2xf
llvm.agx.smp.2d.msaa.cf16.2xh
llvm.agx.smp.2d.msaa.cf16.3xf
llvm.agx.smp.2d.msaa.cf16.3xh
llvm.agx.smp.2d.msaa.cf16.4xf
llvm.agx.smp.2d.msaa.cf16.4xh
llvm.agx.smp.2d.msaa.ci16.1xf
llvm.agx.smp.2d.msaa.ci16.1xh
llvm.agx.smp.2d.msaa.ci16.2xf
llvm.agx.smp.2d.msaa.ci16.2xh
llvm.agx.smp.2d.msaa.ci16.3xf
llvm.agx.smp.2d.msaa.ci16.3xh
llvm.agx.smp.2d.msaa.ci16.4xf
llvm.agx.smp.2d.msaa.ci16.4xh
llvm.agx.smp.2d.msaa.ci16.lod.1xf
llvm.agx.smp.2d.msaa.ci16.lod.1xh
llvm.agx.smp.2d.msaa.ci16.lod.2xf
llvm.agx.smp.2d.msaa.ci16.lod.2xh
llvm.agx.smp.2d.msaa.ci16.lod.3xf
llvm.agx.smp.2d.msaa.ci16.lod.3xh
llvm.agx.smp.2d.msaa.ci16.lod.4xf
llvm.agx.smp.2d.msaa.ci16.lod.4xh
llvm.agx.smp.2d.msaa.i.1xf
llvm.agx.smp.2d.msaa.i.1xh
llvm.agx.smp.2d.msaa.i.2xf
llvm.agx.smp.2d.msaa.i.2xh
llvm.agx.smp.2d.msaa.i.3xf
llvm.agx.smp.2d.msaa.i.3xh
llvm.agx.smp.2d.msaa.i.4xf
llvm.agx.smp.2d.msaa.i.4xh
llvm.agx.smp.2d.msaa.i.lod.1xf
llvm.agx.smp.2d.msaa.i.lod.1xh
llvm.agx.smp.2d.msaa.i.lod.2xf
llvm.agx.smp.2d.msaa.i.lod.2xh
llvm.agx.smp.2d.msaa.i.lod.3xf
llvm.agx.smp.2d.msaa.i.lod.3xh
llvm.agx.smp.2d.msaa.i.lod.4xf
llvm.agx.smp.2d.msaa.i.lod.4xh
llvm.agx.smp.2d.offset.1xf
llvm.agx.smp.2d.offset.1xh
llvm.agx.smp.2d.offset.2xf
llvm.agx.smp.2d.offset.2xh
llvm.agx.smp.2d.offset.3xf
llvm.agx.smp.2d.offset.3xh
llvm.agx.smp.2d.offset.4xf
llvm.agx.smp.2d.offset.4xh
llvm.agx.smp.2d.shadow.1xf
llvm.agx.smp.2d.shadow.1xh
llvm.agx.smp.2d.shadow.2xf
llvm.agx.smp.2d.shadow.2xh
llvm.agx.smp.2d.shadow.3xf
llvm.agx.smp.2d.shadow.3xh
llvm.agx.smp.2d.shadow.4xf
llvm.agx.smp.2d.shadow.4xh
llvm.agx.smp.2d.shadow.gather.1xf
llvm.agx.smp.2d.shadow.gather.1xh
llvm.agx.smp.2d.shadow.gather.2xf
llvm.agx.smp.2d.shadow.gather.2xh
llvm.agx.smp.2d.shadow.gather.3xf
llvm.agx.smp.2d.shadow.gather.3xh
llvm.agx.smp.2d.shadow.gather.4xf
llvm.agx.smp.2d.shadow.gather.4xh
llvm.agx.smp.2d.shadow.gather.offset.1xf
llvm.agx.smp.2d.shadow.gather.offset.1xh
llvm.agx.smp.2d.shadow.gather.offset.2xf
llvm.agx.smp.2d.shadow.gather.offset.2xh
llvm.agx.smp.2d.shadow.gather.offset.3xf
llvm.agx.smp.2d.shadow.gather.offset.3xh
llvm.agx.smp.2d.shadow.gather.offset.4xf
llvm.agx.smp.2d.shadow.gather.offset.4xh
llvm.agx.smp.2d.shadow.grad.1xf
llvm.agx.smp.2d.shadow.grad.1xh
llvm.agx.smp.2d.shadow.grad.2xf
llvm.agx.smp.2d.shadow.grad.2xh
llvm.agx.smp.2d.shadow.grad.3xf
llvm.agx.smp.2d.shadow.grad.3xh
llvm.agx.smp.2d.shadow.grad.4xf
llvm.agx.smp.2d.shadow.grad.4xh
llvm.agx.smp.2d.shadow.grad.offset.1xf
llvm.agx.smp.2d.shadow.grad.offset.1xh
llvm.agx.smp.2d.shadow.grad.offset.2xf
llvm.agx.smp.2d.shadow.grad.offset.2xh
llvm.agx.smp.2d.shadow.grad.offset.3xf
llvm.agx.smp.2d.shadow.grad.offset.3xh
llvm.agx.smp.2d.shadow.grad.offset.4xf
llvm.agx.smp.2d.shadow.grad.offset.4xh
llvm.agx.smp.2d.shadow.lod.1xf
llvm.agx.smp.2d.shadow.lod.1xh
llvm.agx.smp.2d.shadow.lod.2xf
llvm.agx.smp.2d.shadow.lod.2xh
llvm.agx.smp.2d.shadow.lod.3xf
llvm.agx.smp.2d.shadow.lod.3xh
llvm.agx.smp.2d.shadow.lod.4xf
llvm.agx.smp.2d.shadow.lod.4xh
llvm.agx.smp.2d.shadow.lod.offset.1xf
llvm.agx.smp.2d.shadow.lod.offset.1xh
llvm.agx.smp.2d.shadow.lod.offset.2xf
llvm.agx.smp.2d.shadow.lod.offset.2xh
llvm.agx.smp.2d.shadow.lod.offset.3xf
llvm.agx.smp.2d.shadow.lod.offset.3xh
llvm.agx.smp.2d.shadow.lod.offset.4xf
llvm.agx.smp.2d.shadow.lod.offset.4xh
llvm.agx.smp.2d.shadow.offset.1xf
llvm.agx.smp.2d.shadow.offset.1xh
llvm.agx.smp.2d.shadow.offset.2xf
llvm.agx.smp.2d.shadow.offset.2xh
llvm.agx.smp.2d.shadow.offset.3xf
llvm.agx.smp.2d.shadow.offset.3xh
llvm.agx.smp.2d.shadow.offset.4xf
llvm.agx.smp.2d.shadow.offset.4xh
llvm.agx.smp.3d.1xf
llvm.agx.smp.3d.1xh
llvm.agx.smp.3d.2xf
llvm.agx.smp.3d.2xh
llvm.agx.smp.3d.3xf
llvm.agx.smp.3d.3xh
llvm.agx.smp.3d.4xf
llvm.agx.smp.3d.4xh
llvm.agx.smp.3d.cf16.1xf
llvm.agx.smp.3d.cf16.1xh
llvm.agx.smp.3d.cf16.2xf
llvm.agx.smp.3d.cf16.2xh
llvm.agx.smp.3d.cf16.3xf
llvm.agx.smp.3d.cf16.3xh
llvm.agx.smp.3d.cf16.4xf
llvm.agx.smp.3d.cf16.4xh
llvm.agx.smp.3d.cf16.grad.1xf
llvm.agx.smp.3d.cf16.grad.1xh
llvm.agx.smp.3d.cf16.grad.2xf
llvm.agx.smp.3d.cf16.grad.2xh
llvm.agx.smp.3d.cf16.grad.3xf
llvm.agx.smp.3d.cf16.grad.3xh
llvm.agx.smp.3d.cf16.grad.4xf
llvm.agx.smp.3d.cf16.grad.4xh
llvm.agx.smp.3d.cf16.grad.offset.1xf
llvm.agx.smp.3d.cf16.grad.offset.1xh
llvm.agx.smp.3d.cf16.grad.offset.2xf
llvm.agx.smp.3d.cf16.grad.offset.2xh
llvm.agx.smp.3d.cf16.grad.offset.3xf
llvm.agx.smp.3d.cf16.grad.offset.3xh
llvm.agx.smp.3d.cf16.grad.offset.4xf
llvm.agx.smp.3d.cf16.grad.offset.4xh
llvm.agx.smp.3d.cf16.lod.1xf
llvm.agx.smp.3d.cf16.lod.1xh
llvm.agx.smp.3d.cf16.lod.2xf
llvm.agx.smp.3d.cf16.lod.2xh
llvm.agx.smp.3d.cf16.lod.3xf
llvm.agx.smp.3d.cf16.lod.3xh
llvm.agx.smp.3d.cf16.lod.4xf
llvm.agx.smp.3d.cf16.lod.4xh
llvm.agx.smp.3d.cf16.lod.offset.1xf
llvm.agx.smp.3d.cf16.lod.offset.1xh
llvm.agx.smp.3d.cf16.lod.offset.2xf
llvm.agx.smp.3d.cf16.lod.offset.2xh
llvm.agx.smp.3d.cf16.lod.offset.3xf
llvm.agx.smp.3d.cf16.lod.offset.3xh
llvm.agx.smp.3d.cf16.lod.offset.4xf
llvm.agx.smp.3d.cf16.lod.offset.4xh
llvm.agx.smp.3d.cf16.offset.1xf
llvm.agx.smp.3d.cf16.offset.1xh
llvm.agx.smp.3d.cf16.offset.2xf
llvm.agx.smp.3d.cf16.offset.2xh
llvm.agx.smp.3d.cf16.offset.3xf
llvm.agx.smp.3d.cf16.offset.3xh
llvm.agx.smp.3d.cf16.offset.4xf
llvm.agx.smp.3d.cf16.offset.4xh
llvm.agx.smp.3d.ci16.lod.1xf
llvm.agx.smp.3d.ci16.lod.1xh
llvm.agx.smp.3d.ci16.lod.2xf
llvm.agx.smp.3d.ci16.lod.2xh
llvm.agx.smp.3d.ci16.lod.3xf
llvm.agx.smp.3d.ci16.lod.3xh
llvm.agx.smp.3d.ci16.lod.4xf
llvm.agx.smp.3d.ci16.lod.4xh
llvm.agx.smp.3d.ci16.lod.offset.1xf
llvm.agx.smp.3d.ci16.lod.offset.1xh
llvm.agx.smp.3d.ci16.lod.offset.2xf
llvm.agx.smp.3d.ci16.lod.offset.2xh
llvm.agx.smp.3d.ci16.lod.offset.3xf
llvm.agx.smp.3d.ci16.lod.offset.3xh
llvm.agx.smp.3d.ci16.lod.offset.4xf
llvm.agx.smp.3d.ci16.lod.offset.4xh
llvm.agx.smp.3d.grad.1xf
llvm.agx.smp.3d.grad.1xh
llvm.agx.smp.3d.grad.2xf
llvm.agx.smp.3d.grad.2xh
llvm.agx.smp.3d.grad.3xf
llvm.agx.smp.3d.grad.3xh
llvm.agx.smp.3d.grad.4xf
llvm.agx.smp.3d.grad.4xh
llvm.agx.smp.3d.grad.offset.1xf
llvm.agx.smp.3d.grad.offset.1xh
llvm.agx.smp.3d.grad.offset.2xf
llvm.agx.smp.3d.grad.offset.2xh
llvm.agx.smp.3d.grad.offset.3xf
llvm.agx.smp.3d.grad.offset.3xh
llvm.agx.smp.3d.grad.offset.4xf
llvm.agx.smp.3d.grad.offset.4xh
llvm.agx.smp.3d.i.lod.1xf
llvm.agx.smp.3d.i.lod.1xh
llvm.agx.smp.3d.i.lod.2xf
llvm.agx.smp.3d.i.lod.2xh
llvm.agx.smp.3d.i.lod.3xf
llvm.agx.smp.3d.i.lod.3xh
llvm.agx.smp.3d.i.lod.4xf
llvm.agx.smp.3d.i.lod.4xh
llvm.agx.smp.3d.i.lod.offset.1xf
llvm.agx.smp.3d.i.lod.offset.1xh
llvm.agx.smp.3d.i.lod.offset.2xf
llvm.agx.smp.3d.i.lod.offset.2xh
llvm.agx.smp.3d.i.lod.offset.3xf
llvm.agx.smp.3d.i.lod.offset.3xh
llvm.agx.smp.3d.i.lod.offset.4xf
llvm.agx.smp.3d.i.lod.offset.4xh
llvm.agx.smp.3d.lod.1xf
llvm.agx.smp.3d.lod.1xh
llvm.agx.smp.3d.lod.2xf
llvm.agx.smp.3d.lod.2xh
llvm.agx.smp.3d.lod.3xf
llvm.agx.smp.3d.lod.3xh
llvm.agx.smp.3d.lod.4xf
llvm.agx.smp.3d.lod.4xh
llvm.agx.smp.3d.lod.offset.1xf
llvm.agx.smp.3d.lod.offset.1xh
llvm.agx.smp.3d.lod.offset.2xf
llvm.agx.smp.3d.lod.offset.2xh
llvm.agx.smp.3d.lod.offset.3xf
llvm.agx.smp.3d.lod.offset.3xh
llvm.agx.smp.3d.lod.offset.4xf
llvm.agx.smp.3d.lod.offset.4xh
llvm.agx.smp.3d.offset.1xf
llvm.agx.smp.3d.offset.1xh
llvm.agx.smp.3d.offset.2xf
llvm.agx.smp.3d.offset.2xh
llvm.agx.smp.3d.offset.3xf
llvm.agx.smp.3d.offset.3xh
llvm.agx.smp.3d.offset.4xf
llvm.agx.smp.3d.offset.4xh
llvm.agx.smp.cube.1xf
llvm.agx.smp.cube.1xh
llvm.agx.smp.cube.2xf
llvm.agx.smp.cube.2xh
llvm.agx.smp.cube.3xf
llvm.agx.smp.cube.3xh
llvm.agx.smp.cube.4xf
llvm.agx.smp.cube.4xh
llvm.agx.smp.cube.array.1xf
llvm.agx.smp.cube.array.1xh
llvm.agx.smp.cube.array.2xf
llvm.agx.smp.cube.array.2xh
llvm.agx.smp.cube.array.3xf
llvm.agx.smp.cube.array.3xh
llvm.agx.smp.cube.array.4xf
llvm.agx.smp.cube.array.4xh
llvm.agx.smp.cube.array.cf16.1xf
llvm.agx.smp.cube.array.cf16.1xh
llvm.agx.smp.cube.array.cf16.2xf
llvm.agx.smp.cube.array.cf16.2xh
llvm.agx.smp.cube.array.cf16.3xf
llvm.agx.smp.cube.array.cf16.3xh
llvm.agx.smp.cube.array.cf16.4xf
llvm.agx.smp.cube.array.cf16.4xh
llvm.agx.smp.cube.array.cf16.gather.1xf
llvm.agx.smp.cube.array.cf16.gather.1xh
llvm.agx.smp.cube.array.cf16.gather.2xf
llvm.agx.smp.cube.array.cf16.gather.2xh
llvm.agx.smp.cube.array.cf16.gather.3xf
llvm.agx.smp.cube.array.cf16.gather.3xh
llvm.agx.smp.cube.array.cf16.gather.4xf
llvm.agx.smp.cube.array.cf16.gather.4xh
llvm.agx.smp.cube.array.cf16.grad.1xf
llvm.agx.smp.cube.array.cf16.grad.1xh
llvm.agx.smp.cube.array.cf16.grad.2xf
llvm.agx.smp.cube.array.cf16.grad.2xh
llvm.agx.smp.cube.array.cf16.grad.3xf
llvm.agx.smp.cube.array.cf16.grad.3xh
llvm.agx.smp.cube.array.cf16.grad.4xf
llvm.agx.smp.cube.array.cf16.grad.4xh
llvm.agx.smp.cube.array.cf16.lod.1xf
llvm.agx.smp.cube.array.cf16.lod.1xh
llvm.agx.smp.cube.array.cf16.lod.2xf
llvm.agx.smp.cube.array.cf16.lod.2xh
llvm.agx.smp.cube.array.cf16.lod.3xf
llvm.agx.smp.cube.array.cf16.lod.3xh
llvm.agx.smp.cube.array.cf16.lod.4xf
llvm.agx.smp.cube.array.cf16.lod.4xh
llvm.agx.smp.cube.array.gather.1xf
llvm.agx.smp.cube.array.gather.1xh
llvm.agx.smp.cube.array.gather.2xf
llvm.agx.smp.cube.array.gather.2xh
llvm.agx.smp.cube.array.gather.3xf
llvm.agx.smp.cube.array.gather.3xh
llvm.agx.smp.cube.array.gather.4xf
llvm.agx.smp.cube.array.gather.4xh
llvm.agx.smp.cube.array.grad.1xf
llvm.agx.smp.cube.array.grad.1xh
llvm.agx.smp.cube.array.grad.2xf
llvm.agx.smp.cube.array.grad.2xh
llvm.agx.smp.cube.array.grad.3xf
llvm.agx.smp.cube.array.grad.3xh
llvm.agx.smp.cube.array.grad.4xf
llvm.agx.smp.cube.array.grad.4xh
llvm.agx.smp.cube.array.lod.1xf
llvm.agx.smp.cube.array.lod.1xh
llvm.agx.smp.cube.array.lod.2xf
llvm.agx.smp.cube.array.lod.2xh
llvm.agx.smp.cube.array.lod.3xf
llvm.agx.smp.cube.array.lod.3xh
llvm.agx.smp.cube.array.lod.4xf
llvm.agx.smp.cube.array.lod.4xh
llvm.agx.smp.cube.cf16.1xf
llvm.agx.smp.cube.cf16.1xh
llvm.agx.smp.cube.cf16.2xf
llvm.agx.smp.cube.cf16.2xh
llvm.agx.smp.cube.cf16.3xf
llvm.agx.smp.cube.cf16.3xh
llvm.agx.smp.cube.cf16.4xf
llvm.agx.smp.cube.cf16.4xh
llvm.agx.smp.cube.cf16.gather.1xf
llvm.agx.smp.cube.cf16.gather.1xh
llvm.agx.smp.cube.cf16.gather.2xf
llvm.agx.smp.cube.cf16.gather.2xh
llvm.agx.smp.cube.cf16.gather.3xf
llvm.agx.smp.cube.cf16.gather.3xh
llvm.agx.smp.cube.cf16.gather.4xf
llvm.agx.smp.cube.cf16.gather.4xh
llvm.agx.smp.cube.cf16.grad.1xf
llvm.agx.smp.cube.cf16.grad.1xh
llvm.agx.smp.cube.cf16.grad.2xf
llvm.agx.smp.cube.cf16.grad.2xh
llvm.agx.smp.cube.cf16.grad.3xf
llvm.agx.smp.cube.cf16.grad.3xh
llvm.agx.smp.cube.cf16.grad.4xf
llvm.agx.smp.cube.cf16.grad.4xh
llvm.agx.smp.cube.cf16.lod.1xf
llvm.agx.smp.cube.cf16.lod.1xh
llvm.agx.smp.cube.cf16.lod.2xf
llvm.agx.smp.cube.cf16.lod.2xh
llvm.agx.smp.cube.cf16.lod.3xf
llvm.agx.smp.cube.cf16.lod.3xh
llvm.agx.smp.cube.cf16.lod.4xf
llvm.agx.smp.cube.cf16.lod.4xh
llvm.agx.smp.cube.cf16.shadow.1xf
llvm.agx.smp.cube.cf16.shadow.1xh
llvm.agx.smp.cube.cf16.shadow.2xf
llvm.agx.smp.cube.cf16.shadow.2xh
llvm.agx.smp.cube.cf16.shadow.3xf
llvm.agx.smp.cube.cf16.shadow.3xh
llvm.agx.smp.cube.cf16.shadow.4xf
llvm.agx.smp.cube.cf16.shadow.4xh
llvm.agx.smp.cube.cf16.shadow.gather.1xf
llvm.agx.smp.cube.cf16.shadow.gather.1xh
llvm.agx.smp.cube.cf16.shadow.gather.2xf
llvm.agx.smp.cube.cf16.shadow.gather.2xh
llvm.agx.smp.cube.cf16.shadow.gather.3xf
llvm.agx.smp.cube.cf16.shadow.gather.3xh
llvm.agx.smp.cube.cf16.shadow.gather.4xf
llvm.agx.smp.cube.cf16.shadow.gather.4xh
llvm.agx.smp.cube.cf16.shadow.grad.1xf
llvm.agx.smp.cube.cf16.shadow.grad.1xh
llvm.agx.smp.cube.cf16.shadow.grad.2xf
llvm.agx.smp.cube.cf16.shadow.grad.2xh
llvm.agx.smp.cube.cf16.shadow.grad.3xf
llvm.agx.smp.cube.cf16.shadow.grad.3xh
llvm.agx.smp.cube.cf16.shadow.grad.4xf
llvm.agx.smp.cube.cf16.shadow.grad.4xh
llvm.agx.smp.cube.cf16.shadow.lod.1xf
llvm.agx.smp.cube.cf16.shadow.lod.1xh
llvm.agx.smp.cube.cf16.shadow.lod.2xf
llvm.agx.smp.cube.cf16.shadow.lod.2xh
llvm.agx.smp.cube.cf16.shadow.lod.3xf
llvm.agx.smp.cube.cf16.shadow.lod.3xh
llvm.agx.smp.cube.cf16.shadow.lod.4xf
llvm.agx.smp.cube.cf16.shadow.lod.4xh
llvm.agx.smp.cube.gather.1xf
llvm.agx.smp.cube.gather.1xh
llvm.agx.smp.cube.gather.2xf
llvm.agx.smp.cube.gather.2xh
llvm.agx.smp.cube.gather.3xf
llvm.agx.smp.cube.gather.3xh
llvm.agx.smp.cube.gather.4xf
llvm.agx.smp.cube.gather.4xh
llvm.agx.smp.cube.grad.1xf
llvm.agx.smp.cube.grad.1xh
llvm.agx.smp.cube.grad.2xf
llvm.agx.smp.cube.grad.2xh
llvm.agx.smp.cube.grad.3xf
llvm.agx.smp.cube.grad.3xh
llvm.agx.smp.cube.grad.4xf
llvm.agx.smp.cube.grad.4xh
llvm.agx.smp.cube.lod.1xf
llvm.agx.smp.cube.lod.1xh
llvm.agx.smp.cube.lod.2xf
llvm.agx.smp.cube.lod.2xh
llvm.agx.smp.cube.lod.3xf
llvm.agx.smp.cube.lod.3xh
llvm.agx.smp.cube.lod.4xf
llvm.agx.smp.cube.lod.4xh
llvm.agx.smp.cube.shadow.1xf
llvm.agx.smp.cube.shadow.1xh
llvm.agx.smp.cube.shadow.2xf
llvm.agx.smp.cube.shadow.2xh
llvm.agx.smp.cube.shadow.3xf
llvm.agx.smp.cube.shadow.3xh
llvm.agx.smp.cube.shadow.4xf
llvm.agx.smp.cube.shadow.4xh
llvm.agx.smp.cube.shadow.gather.1xf
llvm.agx.smp.cube.shadow.gather.1xh
llvm.agx.smp.cube.shadow.gather.2xf
llvm.agx.smp.cube.shadow.gather.2xh
llvm.agx.smp.cube.shadow.gather.3xf
llvm.agx.smp.cube.shadow.gather.3xh
llvm.agx.smp.cube.shadow.gather.4xf
llvm.agx.smp.cube.shadow.gather.4xh
llvm.agx.smp.cube.shadow.grad.1xf
llvm.agx.smp.cube.shadow.grad.1xh
llvm.agx.smp.cube.shadow.grad.2xf
llvm.agx.smp.cube.shadow.grad.2xh
llvm.agx.smp.cube.shadow.grad.3xf
llvm.agx.smp.cube.shadow.grad.3xh
llvm.agx.smp.cube.shadow.grad.4xf
llvm.agx.smp.cube.shadow.grad.4xh
llvm.agx.smp.cube.shadow.lod.1xf
llvm.agx.smp.cube.shadow.lod.1xh
llvm.agx.smp.cube.shadow.lod.2xf
llvm.agx.smp.cube.shadow.lod.2xh
llvm.agx.smp.cube.shadow.lod.3xf
llvm.agx.smp.cube.shadow.lod.3xh
llvm.agx.smp.cube.shadow.lod.4xf
llvm.agx.smp.cube.shadow.lod.4xh
llvm.agx.smp.cubedir.1xf
llvm.agx.smp.cubedir.1xh
llvm.agx.smp.cubedir.2xf
llvm.agx.smp.cubedir.2xh
llvm.agx.smp.cubedir.3xf
llvm.agx.smp.cubedir.3xh
llvm.agx.smp.cubedir.4xf
llvm.agx.smp.cubedir.4xh
llvm.agx.smp.cubedir.array.1xf
llvm.agx.smp.cubedir.array.1xh
llvm.agx.smp.cubedir.array.2xf
llvm.agx.smp.cubedir.array.2xh
llvm.agx.smp.cubedir.array.3xf
llvm.agx.smp.cubedir.array.3xh
llvm.agx.smp.cubedir.array.4xf
llvm.agx.smp.cubedir.array.4xh
llvm.agx.smp.cubedir.array.cf16.1xf
llvm.agx.smp.cubedir.array.cf16.1xh
llvm.agx.smp.cubedir.array.cf16.2xf
llvm.agx.smp.cubedir.array.cf16.2xh
llvm.agx.smp.cubedir.array.cf16.3xf
llvm.agx.smp.cubedir.array.cf16.3xh
llvm.agx.smp.cubedir.array.cf16.4xf
llvm.agx.smp.cubedir.array.cf16.4xh
llvm.agx.smp.cubedir.array.cf16.gather.1xf
llvm.agx.smp.cubedir.array.cf16.gather.1xh
llvm.agx.smp.cubedir.array.cf16.gather.2xf
llvm.agx.smp.cubedir.array.cf16.gather.2xh
llvm.agx.smp.cubedir.array.cf16.gather.3xf
llvm.agx.smp.cubedir.array.cf16.gather.3xh
llvm.agx.smp.cubedir.array.cf16.gather.4xf
llvm.agx.smp.cubedir.array.cf16.gather.4xh
llvm.agx.smp.cubedir.array.cf16.grad.1xf
llvm.agx.smp.cubedir.array.cf16.grad.1xh
llvm.agx.smp.cubedir.array.cf16.grad.2xf
llvm.agx.smp.cubedir.array.cf16.grad.2xh
llvm.agx.smp.cubedir.array.cf16.grad.3xf
llvm.agx.smp.cubedir.array.cf16.grad.3xh
llvm.agx.smp.cubedir.array.cf16.grad.4xf
llvm.agx.smp.cubedir.array.cf16.grad.4xh
llvm.agx.smp.cubedir.array.cf16.lod.1xf
llvm.agx.smp.cubedir.array.cf16.lod.1xh
llvm.agx.smp.cubedir.array.cf16.lod.2xf
llvm.agx.smp.cubedir.array.cf16.lod.2xh
llvm.agx.smp.cubedir.array.cf16.lod.3xf
llvm.agx.smp.cubedir.array.cf16.lod.3xh
llvm.agx.smp.cubedir.array.cf16.lod.4xf
llvm.agx.smp.cubedir.array.cf16.lod.4xh
llvm.agx.smp.cubedir.array.cf16.shadow.1xf
llvm.agx.smp.cubedir.array.cf16.shadow.1xh
llvm.agx.smp.cubedir.array.cf16.shadow.2xf
llvm.agx.smp.cubedir.array.cf16.shadow.2xh
llvm.agx.smp.cubedir.array.cf16.shadow.3xf
llvm.agx.smp.cubedir.array.cf16.shadow.3xh
llvm.agx.smp.cubedir.array.cf16.shadow.4xf
llvm.agx.smp.cubedir.array.cf16.shadow.4xh
llvm.agx.smp.cubedir.array.cf16.shadow.gather.1xf
llvm.agx.smp.cubedir.array.cf16.shadow.gather.1xh
llvm.agx.smp.cubedir.array.cf16.shadow.gather.2xf
llvm.agx.smp.cubedir.array.cf16.shadow.gather.2xh
llvm.agx.smp.cubedir.array.cf16.shadow.gather.3xf
llvm.agx.smp.cubedir.array.cf16.shadow.gather.3xh
llvm.agx.smp.cubedir.array.cf16.shadow.gather.4xf
llvm.agx.smp.cubedir.array.cf16.shadow.gather.4xh
llvm.agx.smp.cubedir.array.cf16.shadow.grad.1xf
llvm.agx.smp.cubedir.array.cf16.shadow.grad.1xh
llvm.agx.smp.cubedir.array.cf16.shadow.grad.2xf
llvm.agx.smp.cubedir.array.cf16.shadow.grad.2xh
llvm.agx.smp.cubedir.array.cf16.shadow.grad.3xf
llvm.agx.smp.cubedir.array.cf16.shadow.grad.3xh
llvm.agx.smp.cubedir.array.cf16.shadow.grad.4xf
llvm.agx.smp.cubedir.array.cf16.shadow.grad.4xh
llvm.agx.smp.cubedir.array.cf16.shadow.lod.1xf
llvm.agx.smp.cubedir.array.cf16.shadow.lod.1xh
llvm.agx.smp.cubedir.array.cf16.shadow.lod.2xf
llvm.agx.smp.cubedir.array.cf16.shadow.lod.2xh
llvm.agx.smp.cubedir.array.cf16.shadow.lod.3xf
llvm.agx.smp.cubedir.array.cf16.shadow.lod.3xh
llvm.agx.smp.cubedir.array.cf16.shadow.lod.4xf
llvm.agx.smp.cubedir.array.cf16.shadow.lod.4xh
llvm.agx.smp.cubedir.array.gather.1xf
llvm.agx.smp.cubedir.array.gather.1xh
llvm.agx.smp.cubedir.array.gather.2xf
llvm.agx.smp.cubedir.array.gather.2xh
llvm.agx.smp.cubedir.array.gather.3xf
llvm.agx.smp.cubedir.array.gather.3xh
llvm.agx.smp.cubedir.array.gather.4xf
llvm.agx.smp.cubedir.array.gather.4xh
llvm.agx.smp.cubedir.array.grad.1xf
llvm.agx.smp.cubedir.array.grad.1xh
llvm.agx.smp.cubedir.array.grad.2xf
llvm.agx.smp.cubedir.array.grad.2xh
llvm.agx.smp.cubedir.array.grad.3xf
llvm.agx.smp.cubedir.array.grad.3xh
llvm.agx.smp.cubedir.array.grad.4xf
llvm.agx.smp.cubedir.array.grad.4xh
llvm.agx.smp.cubedir.array.lod.1xf
llvm.agx.smp.cubedir.array.lod.1xh
llvm.agx.smp.cubedir.array.lod.2xf
llvm.agx.smp.cubedir.array.lod.2xh
llvm.agx.smp.cubedir.array.lod.3xf
llvm.agx.smp.cubedir.array.lod.3xh
llvm.agx.smp.cubedir.array.lod.4xf
llvm.agx.smp.cubedir.array.lod.4xh
llvm.agx.smp.cubedir.array.shadow.1xf
llvm.agx.smp.cubedir.array.shadow.1xh
llvm.agx.smp.cubedir.array.shadow.2xf
llvm.agx.smp.cubedir.array.shadow.2xh
llvm.agx.smp.cubedir.array.shadow.3xf
llvm.agx.smp.cubedir.array.shadow.3xh
llvm.agx.smp.cubedir.array.shadow.4xf
llvm.agx.smp.cubedir.array.shadow.4xh
llvm.agx.smp.cubedir.array.shadow.gather.1xf
llvm.agx.smp.cubedir.array.shadow.gather.1xh
llvm.agx.smp.cubedir.array.shadow.gather.2xf
llvm.agx.smp.cubedir.array.shadow.gather.2xh
llvm.agx.smp.cubedir.array.shadow.gather.3xf
llvm.agx.smp.cubedir.array.shadow.gather.3xh
llvm.agx.smp.cubedir.array.shadow.gather.4xf
llvm.agx.smp.cubedir.array.shadow.gather.4xh
llvm.agx.smp.cubedir.array.shadow.grad.1xf
llvm.agx.smp.cubedir.array.shadow.grad.1xh
llvm.agx.smp.cubedir.array.shadow.grad.2xf
llvm.agx.smp.cubedir.array.shadow.grad.2xh
llvm.agx.smp.cubedir.array.shadow.grad.3xf
llvm.agx.smp.cubedir.array.shadow.grad.3xh
llvm.agx.smp.cubedir.array.shadow.grad.4xf
llvm.agx.smp.cubedir.array.shadow.grad.4xh
llvm.agx.smp.cubedir.array.shadow.lod.1xf
llvm.agx.smp.cubedir.array.shadow.lod.1xh
llvm.agx.smp.cubedir.array.shadow.lod.2xf
llvm.agx.smp.cubedir.array.shadow.lod.2xh
llvm.agx.smp.cubedir.array.shadow.lod.3xf
llvm.agx.smp.cubedir.array.shadow.lod.3xh
llvm.agx.smp.cubedir.array.shadow.lod.4xf
llvm.agx.smp.cubedir.array.shadow.lod.4xh
llvm.agx.smp.cubedir.cf16.1xf
llvm.agx.smp.cubedir.cf16.1xh
llvm.agx.smp.cubedir.cf16.2xf
llvm.agx.smp.cubedir.cf16.2xh
llvm.agx.smp.cubedir.cf16.3xf
llvm.agx.smp.cubedir.cf16.3xh
llvm.agx.smp.cubedir.cf16.4xf
llvm.agx.smp.cubedir.cf16.4xh
llvm.agx.smp.cubedir.cf16.gather.1xf
llvm.agx.smp.cubedir.cf16.gather.1xh
llvm.agx.smp.cubedir.cf16.gather.2xf
llvm.agx.smp.cubedir.cf16.gather.2xh
llvm.agx.smp.cubedir.cf16.gather.3xf
llvm.agx.smp.cubedir.cf16.gather.3xh
llvm.agx.smp.cubedir.cf16.gather.4xf
llvm.agx.smp.cubedir.cf16.gather.4xh
llvm.agx.smp.cubedir.cf16.grad.1xf
llvm.agx.smp.cubedir.cf16.grad.1xh
llvm.agx.smp.cubedir.cf16.grad.2xf
llvm.agx.smp.cubedir.cf16.grad.2xh
llvm.agx.smp.cubedir.cf16.grad.3xf
llvm.agx.smp.cubedir.cf16.grad.3xh
llvm.agx.smp.cubedir.cf16.grad.4xf
llvm.agx.smp.cubedir.cf16.grad.4xh
llvm.agx.smp.cubedir.cf16.lod.1xf
llvm.agx.smp.cubedir.cf16.lod.1xh
llvm.agx.smp.cubedir.cf16.lod.2xf
llvm.agx.smp.cubedir.cf16.lod.2xh
llvm.agx.smp.cubedir.cf16.lod.3xf
llvm.agx.smp.cubedir.cf16.lod.3xh
llvm.agx.smp.cubedir.cf16.lod.4xf
llvm.agx.smp.cubedir.cf16.lod.4xh
llvm.agx.smp.cubedir.cf16.shadow.1xf
llvm.agx.smp.cubedir.cf16.shadow.1xh
llvm.agx.smp.cubedir.cf16.shadow.2xf
llvm.agx.smp.cubedir.cf16.shadow.2xh
llvm.agx.smp.cubedir.cf16.shadow.3xf
llvm.agx.smp.cubedir.cf16.shadow.3xh
llvm.agx.smp.cubedir.cf16.shadow.4xf
llvm.agx.smp.cubedir.cf16.shadow.4xh
llvm.agx.smp.cubedir.cf16.shadow.gather.1xf
llvm.agx.smp.cubedir.cf16.shadow.gather.1xh
llvm.agx.smp.cubedir.cf16.shadow.gather.2xf
llvm.agx.smp.cubedir.cf16.shadow.gather.2xh
llvm.agx.smp.cubedir.cf16.shadow.gather.3xf
llvm.agx.smp.cubedir.cf16.shadow.gather.3xh
llvm.agx.smp.cubedir.cf16.shadow.gather.4xf
llvm.agx.smp.cubedir.cf16.shadow.gather.4xh
llvm.agx.smp.cubedir.cf16.shadow.grad.1xf
llvm.agx.smp.cubedir.cf16.shadow.grad.1xh
llvm.agx.smp.cubedir.cf16.shadow.grad.2xf
llvm.agx.smp.cubedir.cf16.shadow.grad.2xh
llvm.agx.smp.cubedir.cf16.shadow.grad.3xf
llvm.agx.smp.cubedir.cf16.shadow.grad.3xh
llvm.agx.smp.cubedir.cf16.shadow.grad.4xf
llvm.agx.smp.cubedir.cf16.shadow.grad.4xh
llvm.agx.smp.cubedir.cf16.shadow.lod.1xf
llvm.agx.smp.cubedir.cf16.shadow.lod.1xh
llvm.agx.smp.cubedir.cf16.shadow.lod.2xf
llvm.agx.smp.cubedir.cf16.shadow.lod.2xh
llvm.agx.smp.cubedir.cf16.shadow.lod.3xf
llvm.agx.smp.cubedir.cf16.shadow.lod.3xh
llvm.agx.smp.cubedir.cf16.shadow.lod.4xf
llvm.agx.smp.cubedir.cf16.shadow.lod.4xh
llvm.agx.smp.cubedir.gather.1xf
llvm.agx.smp.cubedir.gather.1xh
llvm.agx.smp.cubedir.gather.2xf
llvm.agx.smp.cubedir.gather.2xh
llvm.agx.smp.cubedir.gather.3xf
llvm.agx.smp.cubedir.gather.3xh
llvm.agx.smp.cubedir.gather.4xf
llvm.agx.smp.cubedir.gather.4xh
llvm.agx.smp.cubedir.grad.1xf
llvm.agx.smp.cubedir.grad.1xh
llvm.agx.smp.cubedir.grad.2xf
llvm.agx.smp.cubedir.grad.2xh
llvm.agx.smp.cubedir.grad.3xf
llvm.agx.smp.cubedir.grad.3xh
llvm.agx.smp.cubedir.grad.4xf
llvm.agx.smp.cubedir.grad.4xh
llvm.agx.smp.cubedir.lod.1xf
llvm.agx.smp.cubedir.lod.1xh
llvm.agx.smp.cubedir.lod.2xf
llvm.agx.smp.cubedir.lod.2xh
llvm.agx.smp.cubedir.lod.3xf
llvm.agx.smp.cubedir.lod.3xh
llvm.agx.smp.cubedir.lod.4xf
llvm.agx.smp.cubedir.lod.4xh
llvm.agx.smp.cubedir.shadow.1xf
llvm.agx.smp.cubedir.shadow.1xh
llvm.agx.smp.cubedir.shadow.2xf
llvm.agx.smp.cubedir.shadow.2xh
llvm.agx.smp.cubedir.shadow.3xf
llvm.agx.smp.cubedir.shadow.3xh
llvm.agx.smp.cubedir.shadow.4xf
llvm.agx.smp.cubedir.shadow.4xh
llvm.agx.smp.cubedir.shadow.gather.1xf
llvm.agx.smp.cubedir.shadow.gather.1xh
llvm.agx.smp.cubedir.shadow.gather.2xf
llvm.agx.smp.cubedir.shadow.gather.2xh
llvm.agx.smp.cubedir.shadow.gather.3xf
llvm.agx.smp.cubedir.shadow.gather.3xh
llvm.agx.smp.cubedir.shadow.gather.4xf
llvm.agx.smp.cubedir.shadow.gather.4xh
llvm.agx.smp.cubedir.shadow.grad.1xf
llvm.agx.smp.cubedir.shadow.grad.1xh
llvm.agx.smp.cubedir.shadow.grad.2xf
llvm.agx.smp.cubedir.shadow.grad.2xh
llvm.agx.smp.cubedir.shadow.grad.3xf
llvm.agx.smp.cubedir.shadow.grad.3xh
llvm.agx.smp.cubedir.shadow.grad.4xf
llvm.agx.smp.cubedir.shadow.grad.4xh
llvm.agx.smp.cubedir.shadow.lod.1xf
llvm.agx.smp.cubedir.shadow.lod.1xh
llvm.agx.smp.cubedir.shadow.lod.2xf
llvm.agx.smp.cubedir.shadow.lod.2xh
llvm.agx.smp.cubedir.shadow.lod.3xf
llvm.agx.smp.cubedir.shadow.lod.3xh
llvm.agx.smp.cubedir.shadow.lod.4xf
llvm.agx.smp.cubedir.shadow.lod.4xh
llvm.agx.smp.cubestf.1xf
llvm.agx.smp.cubestf.1xh
llvm.agx.smp.cubestf.2xf
llvm.agx.smp.cubestf.2xh
llvm.agx.smp.cubestf.3xf
llvm.agx.smp.cubestf.3xh
llvm.agx.smp.cubestf.4xf
llvm.agx.smp.cubestf.4xh
llvm.agx.smp.cubestf.array.1xf
llvm.agx.smp.cubestf.array.1xh
llvm.agx.smp.cubestf.array.2xf
llvm.agx.smp.cubestf.array.2xh
llvm.agx.smp.cubestf.array.3xf
llvm.agx.smp.cubestf.array.3xh
llvm.agx.smp.cubestf.array.4xf
llvm.agx.smp.cubestf.array.4xh
llvm.agx.smp.cubestf.array.cf16.1xf
llvm.agx.smp.cubestf.array.cf16.1xh
llvm.agx.smp.cubestf.array.cf16.2xf
llvm.agx.smp.cubestf.array.cf16.2xh
llvm.agx.smp.cubestf.array.cf16.3xf
llvm.agx.smp.cubestf.array.cf16.3xh
llvm.agx.smp.cubestf.array.cf16.4xf
llvm.agx.smp.cubestf.array.cf16.4xh
llvm.agx.smp.cubestf.array.cf16.gather.1xf
llvm.agx.smp.cubestf.array.cf16.gather.1xh
llvm.agx.smp.cubestf.array.cf16.gather.2xf
llvm.agx.smp.cubestf.array.cf16.gather.2xh
llvm.agx.smp.cubestf.array.cf16.gather.3xf
llvm.agx.smp.cubestf.array.cf16.gather.3xh
llvm.agx.smp.cubestf.array.cf16.gather.4xf
llvm.agx.smp.cubestf.array.cf16.gather.4xh
llvm.agx.smp.cubestf.array.cf16.grad.1xf
llvm.agx.smp.cubestf.array.cf16.grad.1xh
llvm.agx.smp.cubestf.array.cf16.grad.2xf
llvm.agx.smp.cubestf.array.cf16.grad.2xh
llvm.agx.smp.cubestf.array.cf16.grad.3xf
llvm.agx.smp.cubestf.array.cf16.grad.3xh
llvm.agx.smp.cubestf.array.cf16.grad.4xf
llvm.agx.smp.cubestf.array.cf16.grad.4xh
llvm.agx.smp.cubestf.array.cf16.lod.1xf
llvm.agx.smp.cubestf.array.cf16.lod.1xh
llvm.agx.smp.cubestf.array.cf16.lod.2xf
llvm.agx.smp.cubestf.array.cf16.lod.2xh
llvm.agx.smp.cubestf.array.cf16.lod.3xf
llvm.agx.smp.cubestf.array.cf16.lod.3xh
llvm.agx.smp.cubestf.array.cf16.lod.4xf
llvm.agx.smp.cubestf.array.cf16.lod.4xh
llvm.agx.smp.cubestf.array.cf16.shadow.1xf
llvm.agx.smp.cubestf.array.cf16.shadow.1xh
llvm.agx.smp.cubestf.array.cf16.shadow.2xf
llvm.agx.smp.cubestf.array.cf16.shadow.2xh
llvm.agx.smp.cubestf.array.cf16.shadow.3xf
llvm.agx.smp.cubestf.array.cf16.shadow.3xh
llvm.agx.smp.cubestf.array.cf16.shadow.4xf
llvm.agx.smp.cubestf.array.cf16.shadow.4xh
llvm.agx.smp.cubestf.array.cf16.shadow.gather.1xf
llvm.agx.smp.cubestf.array.cf16.shadow.gather.1xh
llvm.agx.smp.cubestf.array.cf16.shadow.gather.2xf
llvm.agx.smp.cubestf.array.cf16.shadow.gather.2xh
llvm.agx.smp.cubestf.array.cf16.shadow.gather.3xf
llvm.agx.smp.cubestf.array.cf16.shadow.gather.3xh
llvm.agx.smp.cubestf.array.cf16.shadow.gather.4xf
llvm.agx.smp.cubestf.array.cf16.shadow.gather.4xh
llvm.agx.smp.cubestf.array.cf16.shadow.grad.1xf
llvm.agx.smp.cubestf.array.cf16.shadow.grad.1xh
llvm.agx.smp.cubestf.array.cf16.shadow.grad.2xf
llvm.agx.smp.cubestf.array.cf16.shadow.grad.2xh
llvm.agx.smp.cubestf.array.cf16.shadow.grad.3xf
llvm.agx.smp.cubestf.array.cf16.shadow.grad.3xh
llvm.agx.smp.cubestf.array.cf16.shadow.grad.4xf
llvm.agx.smp.cubestf.array.cf16.shadow.grad.4xh
llvm.agx.smp.cubestf.array.cf16.shadow.lod.1xf
llvm.agx.smp.cubestf.array.cf16.shadow.lod.1xh
llvm.agx.smp.cubestf.array.cf16.shadow.lod.2xf
llvm.agx.smp.cubestf.array.cf16.shadow.lod.2xh
llvm.agx.smp.cubestf.array.cf16.shadow.lod.3xf
llvm.agx.smp.cubestf.array.cf16.shadow.lod.3xh
llvm.agx.smp.cubestf.array.cf16.shadow.lod.4xf
llvm.agx.smp.cubestf.array.cf16.shadow.lod.4xh
llvm.agx.smp.cubestf.array.ci16.1xf
llvm.agx.smp.cubestf.array.ci16.1xh
llvm.agx.smp.cubestf.array.ci16.2xf
llvm.agx.smp.cubestf.array.ci16.2xh
llvm.agx.smp.cubestf.array.ci16.3xf
llvm.agx.smp.cubestf.array.ci16.3xh
llvm.agx.smp.cubestf.array.ci16.4xf
llvm.agx.smp.cubestf.array.ci16.4xh
llvm.agx.smp.cubestf.array.ci16.lod.1xf
llvm.agx.smp.cubestf.array.ci16.lod.1xh
llvm.agx.smp.cubestf.array.ci16.lod.2xf
llvm.agx.smp.cubestf.array.ci16.lod.2xh
llvm.agx.smp.cubestf.array.ci16.lod.3xf
llvm.agx.smp.cubestf.array.ci16.lod.3xh
llvm.agx.smp.cubestf.array.ci16.lod.4xf
llvm.agx.smp.cubestf.array.ci16.lod.4xh
llvm.agx.smp.cubestf.array.gather.1xf
llvm.agx.smp.cubestf.array.gather.1xh
llvm.agx.smp.cubestf.array.gather.2xf
llvm.agx.smp.cubestf.array.gather.2xh
llvm.agx.smp.cubestf.array.gather.3xf
llvm.agx.smp.cubestf.array.gather.3xh
llvm.agx.smp.cubestf.array.gather.4xf
llvm.agx.smp.cubestf.array.gather.4xh
llvm.agx.smp.cubestf.array.grad.1xf
llvm.agx.smp.cubestf.array.grad.1xh
llvm.agx.smp.cubestf.array.grad.2xf
llvm.agx.smp.cubestf.array.grad.2xh
llvm.agx.smp.cubestf.array.grad.3xf
llvm.agx.smp.cubestf.array.grad.3xh
llvm.agx.smp.cubestf.array.grad.4xf
llvm.agx.smp.cubestf.array.grad.4xh
llvm.agx.smp.cubestf.array.i.1xf
llvm.agx.smp.cubestf.array.i.1xh
llvm.agx.smp.cubestf.array.i.2xf
llvm.agx.smp.cubestf.array.i.2xh
llvm.agx.smp.cubestf.array.i.3xf
llvm.agx.smp.cubestf.array.i.3xh
llvm.agx.smp.cubestf.array.i.4xf
llvm.agx.smp.cubestf.array.i.4xh
llvm.agx.smp.cubestf.array.i.lod.1xf
llvm.agx.smp.cubestf.array.i.lod.1xh
llvm.agx.smp.cubestf.array.i.lod.2xf
llvm.agx.smp.cubestf.array.i.lod.2xh
llvm.agx.smp.cubestf.array.i.lod.3xf
llvm.agx.smp.cubestf.array.i.lod.3xh
llvm.agx.smp.cubestf.array.i.lod.4xf
llvm.agx.smp.cubestf.array.i.lod.4xh
llvm.agx.smp.cubestf.array.lod.1xf
llvm.agx.smp.cubestf.array.lod.1xh
llvm.agx.smp.cubestf.array.lod.2xf
llvm.agx.smp.cubestf.array.lod.2xh
llvm.agx.smp.cubestf.array.lod.3xf
llvm.agx.smp.cubestf.array.lod.3xh
llvm.agx.smp.cubestf.array.lod.4xf
llvm.agx.smp.cubestf.array.lod.4xh
llvm.agx.smp.cubestf.array.shadow.1xf
llvm.agx.smp.cubestf.array.shadow.1xh
llvm.agx.smp.cubestf.array.shadow.2xf
llvm.agx.smp.cubestf.array.shadow.2xh
llvm.agx.smp.cubestf.array.shadow.3xf
llvm.agx.smp.cubestf.array.shadow.3xh
llvm.agx.smp.cubestf.array.shadow.4xf
llvm.agx.smp.cubestf.array.shadow.4xh
llvm.agx.smp.cubestf.array.shadow.gather.1xf
llvm.agx.smp.cubestf.array.shadow.gather.1xh
llvm.agx.smp.cubestf.array.shadow.gather.2xf
llvm.agx.smp.cubestf.array.shadow.gather.2xh
llvm.agx.smp.cubestf.array.shadow.gather.3xf
llvm.agx.smp.cubestf.array.shadow.gather.3xh
llvm.agx.smp.cubestf.array.shadow.gather.4xf
llvm.agx.smp.cubestf.array.shadow.gather.4xh
llvm.agx.smp.cubestf.array.shadow.grad.1xf
llvm.agx.smp.cubestf.array.shadow.grad.1xh
llvm.agx.smp.cubestf.array.shadow.grad.2xf
llvm.agx.smp.cubestf.array.shadow.grad.2xh
llvm.agx.smp.cubestf.array.shadow.grad.3xf
llvm.agx.smp.cubestf.array.shadow.grad.3xh
llvm.agx.smp.cubestf.array.shadow.grad.4xf
llvm.agx.smp.cubestf.array.shadow.grad.4xh
llvm.agx.smp.cubestf.array.shadow.lod.1xf
llvm.agx.smp.cubestf.array.shadow.lod.1xh
llvm.agx.smp.cubestf.array.shadow.lod.2xf
llvm.agx.smp.cubestf.array.shadow.lod.2xh
llvm.agx.smp.cubestf.array.shadow.lod.3xf
llvm.agx.smp.cubestf.array.shadow.lod.3xh
llvm.agx.smp.cubestf.array.shadow.lod.4xf
llvm.agx.smp.cubestf.array.shadow.lod.4xh
llvm.agx.smp.cubestf.cf16.1xf
llvm.agx.smp.cubestf.cf16.1xh
llvm.agx.smp.cubestf.cf16.2xf
llvm.agx.smp.cubestf.cf16.2xh
llvm.agx.smp.cubestf.cf16.3xf
llvm.agx.smp.cubestf.cf16.3xh
llvm.agx.smp.cubestf.cf16.4xf
llvm.agx.smp.cubestf.cf16.4xh
llvm.agx.smp.cubestf.cf16.gather.1xf
llvm.agx.smp.cubestf.cf16.gather.1xh
llvm.agx.smp.cubestf.cf16.gather.2xf
llvm.agx.smp.cubestf.cf16.gather.2xh
llvm.agx.smp.cubestf.cf16.gather.3xf
llvm.agx.smp.cubestf.cf16.gather.3xh
llvm.agx.smp.cubestf.cf16.gather.4xf
llvm.agx.smp.cubestf.cf16.gather.4xh
llvm.agx.smp.cubestf.cf16.grad.1xf
llvm.agx.smp.cubestf.cf16.grad.1xh
llvm.agx.smp.cubestf.cf16.grad.2xf
llvm.agx.smp.cubestf.cf16.grad.2xh
llvm.agx.smp.cubestf.cf16.grad.3xf
llvm.agx.smp.cubestf.cf16.grad.3xh
llvm.agx.smp.cubestf.cf16.grad.4xf
llvm.agx.smp.cubestf.cf16.grad.4xh
llvm.agx.smp.cubestf.cf16.lod.1xf
llvm.agx.smp.cubestf.cf16.lod.1xh
llvm.agx.smp.cubestf.cf16.lod.2xf
llvm.agx.smp.cubestf.cf16.lod.2xh
llvm.agx.smp.cubestf.cf16.lod.3xf
llvm.agx.smp.cubestf.cf16.lod.3xh
llvm.agx.smp.cubestf.cf16.lod.4xf
llvm.agx.smp.cubestf.cf16.lod.4xh
llvm.agx.smp.cubestf.cf16.shadow.1xf
llvm.agx.smp.cubestf.cf16.shadow.1xh
llvm.agx.smp.cubestf.cf16.shadow.2xf
llvm.agx.smp.cubestf.cf16.shadow.2xh
llvm.agx.smp.cubestf.cf16.shadow.3xf
llvm.agx.smp.cubestf.cf16.shadow.3xh
llvm.agx.smp.cubestf.cf16.shadow.4xf
llvm.agx.smp.cubestf.cf16.shadow.4xh
llvm.agx.smp.cubestf.cf16.shadow.gather.1xf
llvm.agx.smp.cubestf.cf16.shadow.gather.1xh
llvm.agx.smp.cubestf.cf16.shadow.gather.2xf
llvm.agx.smp.cubestf.cf16.shadow.gather.2xh
llvm.agx.smp.cubestf.cf16.shadow.gather.3xf
llvm.agx.smp.cubestf.cf16.shadow.gather.3xh
llvm.agx.smp.cubestf.cf16.shadow.gather.4xf
llvm.agx.smp.cubestf.cf16.shadow.gather.4xh
llvm.agx.smp.cubestf.cf16.shadow.grad.1xf
llvm.agx.smp.cubestf.cf16.shadow.grad.1xh
llvm.agx.smp.cubestf.cf16.shadow.grad.2xf
llvm.agx.smp.cubestf.cf16.shadow.grad.2xh
llvm.agx.smp.cubestf.cf16.shadow.grad.3xf
llvm.agx.smp.cubestf.cf16.shadow.grad.3xh
llvm.agx.smp.cubestf.cf16.shadow.grad.4xf
llvm.agx.smp.cubestf.cf16.shadow.grad.4xh
llvm.agx.smp.cubestf.cf16.shadow.lod.1xf
llvm.agx.smp.cubestf.cf16.shadow.lod.1xh
llvm.agx.smp.cubestf.cf16.shadow.lod.2xf
llvm.agx.smp.cubestf.cf16.shadow.lod.2xh
llvm.agx.smp.cubestf.cf16.shadow.lod.3xf
llvm.agx.smp.cubestf.cf16.shadow.lod.3xh
llvm.agx.smp.cubestf.cf16.shadow.lod.4xf
llvm.agx.smp.cubestf.cf16.shadow.lod.4xh
llvm.agx.smp.cubestf.ci16.1xf
llvm.agx.smp.cubestf.ci16.1xh
llvm.agx.smp.cubestf.ci16.2xf
llvm.agx.smp.cubestf.ci16.2xh
llvm.agx.smp.cubestf.ci16.3xf
llvm.agx.smp.cubestf.ci16.3xh
llvm.agx.smp.cubestf.ci16.4xf
llvm.agx.smp.cubestf.ci16.4xh
llvm.agx.smp.cubestf.ci16.lod.1xf
llvm.agx.smp.cubestf.ci16.lod.1xh
llvm.agx.smp.cubestf.ci16.lod.2xf
llvm.agx.smp.cubestf.ci16.lod.2xh
llvm.agx.smp.cubestf.ci16.lod.3xf
llvm.agx.smp.cubestf.ci16.lod.3xh
llvm.agx.smp.cubestf.ci16.lod.4xf
llvm.agx.smp.cubestf.ci16.lod.4xh
llvm.agx.smp.cubestf.gather.1xf
llvm.agx.smp.cubestf.gather.1xh
llvm.agx.smp.cubestf.gather.2xf
llvm.agx.smp.cubestf.gather.2xh
llvm.agx.smp.cubestf.gather.3xf
llvm.agx.smp.cubestf.gather.3xh
llvm.agx.smp.cubestf.gather.4xf
llvm.agx.smp.cubestf.gather.4xh
llvm.agx.smp.cubestf.grad.1xf
llvm.agx.smp.cubestf.grad.1xh
llvm.agx.smp.cubestf.grad.2xf
llvm.agx.smp.cubestf.grad.2xh
llvm.agx.smp.cubestf.grad.3xf
llvm.agx.smp.cubestf.grad.3xh
llvm.agx.smp.cubestf.grad.4xf
llvm.agx.smp.cubestf.grad.4xh
llvm.agx.smp.cubestf.i.1xf
llvm.agx.smp.cubestf.i.1xh
llvm.agx.smp.cubestf.i.2xf
llvm.agx.smp.cubestf.i.2xh
llvm.agx.smp.cubestf.i.3xf
llvm.agx.smp.cubestf.i.3xh
llvm.agx.smp.cubestf.i.4xf
llvm.agx.smp.cubestf.i.4xh
llvm.agx.smp.cubestf.i.lod.1xf
llvm.agx.smp.cubestf.i.lod.1xh
llvm.agx.smp.cubestf.i.lod.2xf
llvm.agx.smp.cubestf.i.lod.2xh
llvm.agx.smp.cubestf.i.lod.3xf
llvm.agx.smp.cubestf.i.lod.3xh
llvm.agx.smp.cubestf.i.lod.4xf
llvm.agx.smp.cubestf.i.lod.4xh
llvm.agx.smp.cubestf.lod.1xf
llvm.agx.smp.cubestf.lod.1xh
llvm.agx.smp.cubestf.lod.2xf
llvm.agx.smp.cubestf.lod.2xh
llvm.agx.smp.cubestf.lod.3xf
llvm.agx.smp.cubestf.lod.3xh
llvm.agx.smp.cubestf.lod.4xf
llvm.agx.smp.cubestf.lod.4xh
llvm.agx.smp.cubestf.shadow.1xf
llvm.agx.smp.cubestf.shadow.1xh
llvm.agx.smp.cubestf.shadow.2xf
llvm.agx.smp.cubestf.shadow.2xh
llvm.agx.smp.cubestf.shadow.3xf
llvm.agx.smp.cubestf.shadow.3xh
llvm.agx.smp.cubestf.shadow.4xf
llvm.agx.smp.cubestf.shadow.4xh
llvm.agx.smp.cubestf.shadow.gather.1xf
llvm.agx.smp.cubestf.shadow.gather.1xh
llvm.agx.smp.cubestf.shadow.gather.2xf
llvm.agx.smp.cubestf.shadow.gather.2xh
llvm.agx.smp.cubestf.shadow.gather.3xf
llvm.agx.smp.cubestf.shadow.gather.3xh
llvm.agx.smp.cubestf.shadow.gather.4xf
llvm.agx.smp.cubestf.shadow.gather.4xh
llvm.agx.smp.cubestf.shadow.grad.1xf
llvm.agx.smp.cubestf.shadow.grad.1xh
llvm.agx.smp.cubestf.shadow.grad.2xf
llvm.agx.smp.cubestf.shadow.grad.2xh
llvm.agx.smp.cubestf.shadow.grad.3xf
llvm.agx.smp.cubestf.shadow.grad.3xh
llvm.agx.smp.cubestf.shadow.grad.4xf
llvm.agx.smp.cubestf.shadow.grad.4xh
llvm.agx.smp.cubestf.shadow.lod.1xf
llvm.agx.smp.cubestf.shadow.lod.1xh
llvm.agx.smp.cubestf.shadow.lod.2xf
llvm.agx.smp.cubestf.shadow.lod.2xh
llvm.agx.smp.cubestf.shadow.lod.3xf
llvm.agx.smp.cubestf.shadow.lod.3xh
llvm.agx.smp.cubestf.shadow.lod.4xf
llvm.agx.smp.cubestf.shadow.lod.4xh
llvm.agx.smpw.1d.array.ci16.4xf
llvm.agx.smpw.1d.array.ci16.4xh
llvm.agx.smpw.1d.array.ci16.lod.4xf
llvm.agx.smpw.1d.array.ci16.lod.4xh
llvm.agx.smpw.1d.array.i.4xf
llvm.agx.smpw.1d.array.i.4xh
llvm.agx.smpw.1d.array.i.lod.4xf
llvm.agx.smpw.1d.array.i.lod.4xh
llvm.agx.smpw.1d.ci16.4xf
llvm.agx.smpw.1d.ci16.4xh
llvm.agx.smpw.1d.ci16.lod.4xf
llvm.agx.smpw.1d.ci16.lod.4xh
llvm.agx.smpw.1d.i.4xf
llvm.agx.smpw.1d.i.4xh
llvm.agx.smpw.1d.i.lod.4xf
llvm.agx.smpw.1d.i.lod.4xh
llvm.agx.smpw.2d.array.ci16.4xf
llvm.agx.smpw.2d.array.ci16.4xh
llvm.agx.smpw.2d.array.ci16.lod.4xf
llvm.agx.smpw.2d.array.ci16.lod.4xh
llvm.agx.smpw.2d.array.i.4xf
llvm.agx.smpw.2d.array.i.4xh
llvm.agx.smpw.2d.array.i.lod.4xf
llvm.agx.smpw.2d.array.i.lod.4xh
llvm.agx.smpw.2d.ci16.4xf
llvm.agx.smpw.2d.ci16.4xh
llvm.agx.smpw.2d.ci16.lod.4xf
llvm.agx.smpw.2d.ci16.lod.4xh
llvm.agx.smpw.2d.i.4xf
llvm.agx.smpw.2d.i.4xh
llvm.agx.smpw.2d.i.lod.4xf
llvm.agx.smpw.2d.i.lod.4xh
llvm.agx.smpw.3d.ci16.4xf
llvm.agx.smpw.3d.ci16.4xh
llvm.agx.smpw.3d.ci16.lod.4xf
llvm.agx.smpw.3d.ci16.lod.4xh
llvm.agx.smpw.3d.i.4xf
llvm.agx.smpw.3d.i.4xh
llvm.agx.smpw.3d.i.lod.4xf
llvm.agx.smpw.3d.i.lod.4xh
llvm.agx.smpw.cubestf.array.ci16.4xf
llvm.agx.smpw.cubestf.array.ci16.4xh
llvm.agx.smpw.cubestf.array.ci16.lod.4xf
llvm.agx.smpw.cubestf.array.ci16.lod.4xh
llvm.agx.smpw.cubestf.array.i.4xf
llvm.agx.smpw.cubestf.array.i.4xh
llvm.agx.smpw.cubestf.array.i.lod.4xf
llvm.agx.smpw.cubestf.array.i.lod.4xh
llvm.agx.smpw.cubestf.ci16.4xf
llvm.agx.smpw.cubestf.ci16.4xh
llvm.agx.smpw.cubestf.ci16.lod.4xf
llvm.agx.smpw.cubestf.ci16.lod.4xh
llvm.agx.smpw.cubestf.i.4xf
llvm.agx.smpw.cubestf.i.4xh
llvm.agx.smpw.cubestf.i.lod.4xf
llvm.agx.smpw.cubestf.i.lod.4xh
llvm.agx.textureState
llvm.annotation
llvm.assume
llvm.bitset.test
llvm.bswap
llvm.canonicalize
llvm.ceil
llvm.clear_cache
llvm.convert.from.fp16
llvm.convert.to.fp16
llvm.convertff
llvm.convertfsi
llvm.convertfui
llvm.convertsif
llvm.convertss
llvm.convertsu
llvm.convertuif
llvm.convertus
llvm.convertuu
llvm.copysign
llvm.cos
llvm.ctlz
llvm.ctpop
llvm.cttz
llvm.cuda.syncthreads
llvm.debugtrap
llvm.donothing
llvm.eh.actions
llvm.eh.begincatch
llvm.eh.dwarf.cfa
llvm.eh.endcatch
llvm.eh.exceptioncode
llvm.eh.return.i32
llvm.eh.return.i64
llvm.eh.sjlj.callsite
llvm.eh.sjlj.functioncontext
llvm.eh.sjlj.longjmp
llvm.eh.sjlj.lsda
llvm.eh.sjlj.setjmp
llvm.eh.sjlj.setup.dispatch
llvm.eh.typeid.for
llvm.eh.unwind.init
llvm.exp
llvm.exp2
llvm.expect
llvm.experimental.gc.relocate
llvm.experimental.gc.result
llvm.experimental.gc.result.float
llvm.experimental.gc.result.int
llvm.experimental.gc.result.ptr
llvm.experimental.gc.statepoint
llvm.experimental.patchpoint.i64
llvm.experimental.patchpoint.void
llvm.experimental.stackmap
llvm.fabs
llvm.floor
llvm.flt.rounds
llvm.fma
llvm.fmuladd
llvm.frameaddress
llvm.gcread
llvm.gcroot
llvm.gcwrite
llvm.init.trampoline
llvm.instrprof.increment
llvm.invariant.end
llvm.invariant.start
llvm.lifetime.end
llvm.lifetime.start
llvm.localaddress
llvm.localescape
llvm.localrecover
llvm.log
llvm.log10
llvm.log2
llvm.longjmp
llvm.masked.gather
llvm.masked.load
llvm.masked.scatter
llvm.masked.store
llvm.maxnum
llvm.memcpy
llvm.memmove
llvm.memset
llvm.minnum
llvm.nearbyint
llvm.nvvm.abs.i
llvm.nvvm.abs.ll
llvm.nvvm.add.rm.d
llvm.nvvm.add.rm.f
llvm.nvvm.add.rm.ftz.f
llvm.nvvm.add.rn.d
llvm.nvvm.add.rn.f
llvm.nvvm.add.rn.ftz.f
llvm.nvvm.add.rp.d
llvm.nvvm.add.rp.f
llvm.nvvm.add.rp.ftz.f
llvm.nvvm.add.rz.d
llvm.nvvm.add.rz.f
llvm.nvvm.add.rz.ftz.f
llvm.nvvm.atomic.load.add.f32
llvm.nvvm.atomic.load.dec.32
llvm.nvvm.atomic.load.inc.32
llvm.nvvm.barrier0
llvm.nvvm.barrier0.and
llvm.nvvm.barrier0.or
llvm.nvvm.barrier0.popc
llvm.nvvm.bitcast.d2ll
llvm.nvvm.bitcast.f2i
llvm.nvvm.bitcast.i2f
llvm.nvvm.bitcast.ll2d
llvm.nvvm.brev32
llvm.nvvm.brev64
llvm.nvvm.ceil.d
llvm.nvvm.ceil.f
llvm.nvvm.ceil.ftz.f
llvm.nvvm.clz.i
llvm.nvvm.clz.ll
llvm.nvvm.compiler.error
llvm.nvvm.compiler.warn
llvm.nvvm.cos.approx.f
llvm.nvvm.cos.approx.ftz.f
llvm.nvvm.d2f.rm
llvm.nvvm.d2f.rm.ftz
llvm.nvvm.d2f.rn
llvm.nvvm.d2f.rn.ftz
llvm.nvvm.d2f.rp
llvm.nvvm.d2f.rp.ftz
llvm.nvvm.d2f.rz
llvm.nvvm.d2f.rz.ftz
llvm.nvvm.d2i.hi
llvm.nvvm.d2i.lo
llvm.nvvm.d2i.rm
llvm.nvvm.d2i.rn
llvm.nvvm.d2i.rp
llvm.nvvm.d2i.rz
llvm.nvvm.d2ll.rm
llvm.nvvm.d2ll.rn
llvm.nvvm.d2ll.rp
llvm.nvvm.d2ll.rz
llvm.nvvm.d2ui.rm
llvm.nvvm.d2ui.rn
llvm.nvvm.d2ui.rp
llvm.nvvm.d2ui.rz
llvm.nvvm.d2ull.rm
llvm.nvvm.d2ull.rn
llvm.nvvm.d2ull.rp
llvm.nvvm.d2ull.rz
llvm.nvvm.div.approx.f
llvm.nvvm.div.approx.ftz.f
llvm.nvvm.div.rm.d
llvm.nvvm.div.rm.f
llvm.nvvm.div.rm.ftz.f
llvm.nvvm.div.rn.d
llvm.nvvm.div.rn.f
llvm.nvvm.div.rn.ftz.f
llvm.nvvm.div.rp.d
llvm.nvvm.div.rp.f
llvm.nvvm.div.rp.ftz.f
llvm.nvvm.div.rz.d
llvm.nvvm.div.rz.f
llvm.nvvm.div.rz.ftz.f
llvm.nvvm.ex2.approx.d
llvm.nvvm.ex2.approx.f
llvm.nvvm.ex2.approx.ftz.f
llvm.nvvm.f2h.rn
llvm.nvvm.f2h.rn.ftz
llvm.nvvm.f2i.rm
llvm.nvvm.f2i.rm.ftz
llvm.nvvm.f2i.rn
llvm.nvvm.f2i.rn.ftz
llvm.nvvm.f2i.rp
llvm.nvvm.f2i.rp.ftz
llvm.nvvm.f2i.rz
llvm.nvvm.f2i.rz.ftz
llvm.nvvm.f2ll.rm
llvm.nvvm.f2ll.rm.ftz
llvm.nvvm.f2ll.rn
llvm.nvvm.f2ll.rn.ftz
llvm.nvvm.f2ll.rp
llvm.nvvm.f2ll.rp.ftz
llvm.nvvm.f2ll.rz
llvm.nvvm.f2ll.rz.ftz
llvm.nvvm.f2ui.rm
llvm.nvvm.f2ui.rm.ftz
llvm.nvvm.f2ui.rn
llvm.nvvm.f2ui.rn.ftz
llvm.nvvm.f2ui.rp
llvm.nvvm.f2ui.rp.ftz
llvm.nvvm.f2ui.rz
llvm.nvvm.f2ui.rz.ftz
llvm.nvvm.f2ull.rm
llvm.nvvm.f2ull.rm.ftz
llvm.nvvm.f2ull.rn
llvm.nvvm.f2ull.rn.ftz
llvm.nvvm.f2ull.rp
llvm.nvvm.f2ull.rp.ftz
llvm.nvvm.f2ull.rz
llvm.nvvm.f2ull.rz.ftz
llvm.nvvm.fabs.d
llvm.nvvm.fabs.f
llvm.nvvm.fabs.ftz.f
llvm.nvvm.floor.d
llvm.nvvm.floor.f
llvm.nvvm.floor.ftz.f
llvm.nvvm.fma.rm.d
llvm.nvvm.fma.rm.f
llvm.nvvm.fma.rm.ftz.f
llvm.nvvm.fma.rn.d
llvm.nvvm.fma.rn.f
llvm.nvvm.fma.rn.ftz.f
llvm.nvvm.fma.rp.d
llvm.nvvm.fma.rp.f
llvm.nvvm.fma.rp.ftz.f
llvm.nvvm.fma.rz.d
llvm.nvvm.fma.rz.f
llvm.nvvm.fma.rz.ftz.f
llvm.nvvm.fmax.d
llvm.nvvm.fmax.f
llvm.nvvm.fmax.ftz.f
llvm.nvvm.fmin.d
llvm.nvvm.fmin.f
llvm.nvvm.fmin.ftz.f
llvm.nvvm.h2f
llvm.nvvm.i2d.rm
llvm.nvvm.i2d.rn
llvm.nvvm.i2d.rp
llvm.nvvm.i2d.rz
llvm.nvvm.i2f.rm
llvm.nvvm.i2f.rn
llvm.nvvm.i2f.rp
llvm.nvvm.i2f.rz
llvm.nvvm.isspacep.const
llvm.nvvm.isspacep.global
llvm.nvvm.isspacep.local
llvm.nvvm.isspacep.shared
llvm.nvvm.istypep.sampler
llvm.nvvm.istypep.surface
llvm.nvvm.istypep.texture
llvm.nvvm.ldg.global.f
llvm.nvvm.ldg.global.i
llvm.nvvm.ldg.global.p
llvm.nvvm.ldu.global.f
llvm.nvvm.ldu.global.i
llvm.nvvm.ldu.global.p
llvm.nvvm.lg2.approx.d
llvm.nvvm.lg2.approx.f
llvm.nvvm.lg2.approx.ftz.f
llvm.nvvm.ll2d.rm
llvm.nvvm.ll2d.rn
llvm.nvvm.ll2d.rp
llvm.nvvm.ll2d.rz
llvm.nvvm.ll2f.rm
llvm.nvvm.ll2f.rn
llvm.nvvm.ll2f.rp
llvm.nvvm.ll2f.rz
llvm.nvvm.lohi.i2d
llvm.nvvm.max.i
llvm.nvvm.max.ll
llvm.nvvm.max.ui
llvm.nvvm.max.ull
llvm.nvvm.membar.cta
llvm.nvvm.membar.gl
llvm.nvvm.membar.sys
llvm.nvvm.min.i
llvm.nvvm.min.ll
llvm.nvvm.min.ui
llvm.nvvm.min.ull
llvm.nvvm.move.double
llvm.nvvm.move.float
llvm.nvvm.move.i16
llvm.nvvm.move.i32
llvm.nvvm.move.i64
llvm.nvvm.move.ptr
llvm.nvvm.mul.rm.d
llvm.nvvm.mul.rm.f
llvm.nvvm.mul.rm.ftz.f
llvm.nvvm.mul.rn.d
llvm.nvvm.mul.rn.f
llvm.nvvm.mul.rn.ftz.f
llvm.nvvm.mul.rp.d
llvm.nvvm.mul.rp.f
llvm.nvvm.mul.rp.ftz.f
llvm.nvvm.mul.rz.d
llvm.nvvm.mul.rz.f
llvm.nvvm.mul.rz.ftz.f
llvm.nvvm.mul24.i
llvm.nvvm.mul24.ui
llvm.nvvm.mulhi.i
llvm.nvvm.mulhi.ll
llvm.nvvm.mulhi.ui
llvm.nvvm.mulhi.ull
llvm.nvvm.popc.i
llvm.nvvm.popc.ll
llvm.nvvm.prmt
llvm.nvvm.ptr.constant.to.gen
llvm.nvvm.ptr.gen.to.constant
llvm.nvvm.ptr.gen.to.global
llvm.nvvm.ptr.gen.to.local
llvm.nvvm.ptr.gen.to.param
llvm.nvvm.ptr.gen.to.shared
llvm.nvvm.ptr.global.to.gen
llvm.nvvm.ptr.local.to.gen
llvm.nvvm.ptr.shared.to.gen
llvm.nvvm.rcp.approx.ftz.d
llvm.nvvm.rcp.rm.d
llvm.nvvm.rcp.rm.f
llvm.nvvm.rcp.rm.ftz.f
llvm.nvvm.rcp.rn.d
llvm.nvvm.rcp.rn.f
llvm.nvvm.rcp.rn.ftz.f
llvm.nvvm.rcp.rp.d
llvm.nvvm.rcp.rp.f
llvm.nvvm.rcp.rp.ftz.f
llvm.nvvm.rcp.rz.d
llvm.nvvm.rcp.rz.f
llvm.nvvm.rcp.rz.ftz.f
llvm.nvvm.read.ptx.sreg.ctaid.x
llvm.nvvm.read.ptx.sreg.ctaid.y
llvm.nvvm.read.ptx.sreg.ctaid.z
llvm.nvvm.read.ptx.sreg.envreg0
llvm.nvvm.read.ptx.sreg.envreg1
llvm.nvvm.read.ptx.sreg.envreg10
llvm.nvvm.read.ptx.sreg.envreg11
llvm.nvvm.read.ptx.sreg.envreg12
llvm.nvvm.read.ptx.sreg.envreg13
llvm.nvvm.read.ptx.sreg.envreg14
llvm.nvvm.read.ptx.sreg.envreg15
llvm.nvvm.read.ptx.sreg.envreg16
llvm.nvvm.read.ptx.sreg.envreg17
llvm.nvvm.read.ptx.sreg.envreg18
llvm.nvvm.read.ptx.sreg.envreg19
llvm.nvvm.read.ptx.sreg.envreg2
llvm.nvvm.read.ptx.sreg.envreg20
llvm.nvvm.read.ptx.sreg.envreg21
llvm.nvvm.read.ptx.sreg.envreg22
llvm.nvvm.read.ptx.sreg.envreg23
llvm.nvvm.read.ptx.sreg.envreg24
llvm.nvvm.read.ptx.sreg.envreg25
llvm.nvvm.read.ptx.sreg.envreg26
llvm.nvvm.read.ptx.sreg.envreg27
llvm.nvvm.read.ptx.sreg.envreg28
llvm.nvvm.read.ptx.sreg.envreg29
llvm.nvvm.read.ptx.sreg.envreg3
llvm.nvvm.read.ptx.sreg.envreg30
llvm.nvvm.read.ptx.sreg.envreg31
llvm.nvvm.read.ptx.sreg.envreg4
llvm.nvvm.read.ptx.sreg.envreg5
llvm.nvvm.read.ptx.sreg.envreg6
llvm.nvvm.read.ptx.sreg.envreg7
llvm.nvvm.read.ptx.sreg.envreg8
llvm.nvvm.read.ptx.sreg.envreg9
llvm.nvvm.read.ptx.sreg.nctaid.x
llvm.nvvm.read.ptx.sreg.nctaid.y
llvm.nvvm.read.ptx.sreg.nctaid.z
llvm.nvvm.read.ptx.sreg.ntid.x
llvm.nvvm.read.ptx.sreg.ntid.y
llvm.nvvm.read.ptx.sreg.ntid.z
llvm.nvvm.read.ptx.sreg.tid.x
llvm.nvvm.read.ptx.sreg.tid.y
llvm.nvvm.read.ptx.sreg.tid.z
llvm.nvvm.read.ptx.sreg.warpsize
llvm.nvvm.reflect
llvm.nvvm.rotate.b32
llvm.nvvm.rotate.b64
llvm.nvvm.rotate.right.b64
llvm.nvvm.round.d
llvm.nvvm.round.f
llvm.nvvm.round.ftz.f
llvm.nvvm.rsqrt.approx.d
llvm.nvvm.rsqrt.approx.f
llvm.nvvm.rsqrt.approx.ftz.f
llvm.nvvm.sad.i
llvm.nvvm.sad.ui
llvm.nvvm.saturate.d
llvm.nvvm.saturate.f
llvm.nvvm.saturate.ftz.f
llvm.nvvm.sin.approx.f
llvm.nvvm.sin.approx.ftz.f
llvm.nvvm.sqrt.approx.f
llvm.nvvm.sqrt.approx.ftz.f
llvm.nvvm.sqrt.f
llvm.nvvm.sqrt.rm.d
llvm.nvvm.sqrt.rm.f
llvm.nvvm.sqrt.rm.ftz.f
llvm.nvvm.sqrt.rn.d
llvm.nvvm.sqrt.rn.f
llvm.nvvm.sqrt.rn.ftz.f
llvm.nvvm.sqrt.rp.d
llvm.nvvm.sqrt.rp.f
llvm.nvvm.sqrt.rp.ftz.f
llvm.nvvm.sqrt.rz.d
llvm.nvvm.sqrt.rz.f
llvm.nvvm.sqrt.rz.ftz.f
llvm.nvvm.suld.1d.array.i16.clamp
llvm.nvvm.suld.1d.array.i16.trap
llvm.nvvm.suld.1d.array.i16.zero
llvm.nvvm.suld.1d.array.i32.clamp
llvm.nvvm.suld.1d.array.i32.trap
llvm.nvvm.suld.1d.array.i32.zero
llvm.nvvm.suld.1d.array.i64.clamp
llvm.nvvm.suld.1d.array.i64.trap
llvm.nvvm.suld.1d.array.i64.zero
llvm.nvvm.suld.1d.array.i8.clamp
llvm.nvvm.suld.1d.array.i8.trap
llvm.nvvm.suld.1d.array.i8.zero
llvm.nvvm.suld.1d.array.v2i16.clamp
llvm.nvvm.suld.1d.array.v2i16.trap
llvm.nvvm.suld.1d.array.v2i16.zero
llvm.nvvm.suld.1d.array.v2i32.clamp
llvm.nvvm.suld.1d.array.v2i32.trap
llvm.nvvm.suld.1d.array.v2i32.zero
llvm.nvvm.suld.1d.array.v2i64.clamp
llvm.nvvm.suld.1d.array.v2i64.trap
llvm.nvvm.suld.1d.array.v2i64.zero
llvm.nvvm.suld.1d.array.v2i8.clamp
llvm.nvvm.suld.1d.array.v2i8.trap
llvm.nvvm.suld.1d.array.v2i8.zero
llvm.nvvm.suld.1d.array.v4i16.clamp
llvm.nvvm.suld.1d.array.v4i16.trap
llvm.nvvm.suld.1d.array.v4i16.zero
llvm.nvvm.suld.1d.array.v4i32.clamp
llvm.nvvm.suld.1d.array.v4i32.trap
llvm.nvvm.suld.1d.array.v4i32.zero
llvm.nvvm.suld.1d.array.v4i8.clamp
llvm.nvvm.suld.1d.array.v4i8.trap
llvm.nvvm.suld.1d.array.v4i8.zero
llvm.nvvm.suld.1d.i16.clamp
llvm.nvvm.suld.1d.i16.trap
llvm.nvvm.suld.1d.i16.zero
llvm.nvvm.suld.1d.i32.clamp
llvm.nvvm.suld.1d.i32.trap
llvm.nvvm.suld.1d.i32.zero
llvm.nvvm.suld.1d.i64.clamp
llvm.nvvm.suld.1d.i64.trap
llvm.nvvm.suld.1d.i64.zero
llvm.nvvm.suld.1d.i8.clamp
llvm.nvvm.suld.1d.i8.trap
llvm.nvvm.suld.1d.i8.zero
llvm.nvvm.suld.1d.v2i16.clamp
llvm.nvvm.suld.1d.v2i16.trap
llvm.nvvm.suld.1d.v2i16.zero
llvm.nvvm.suld.1d.v2i32.clamp
llvm.nvvm.suld.1d.v2i32.trap
llvm.nvvm.suld.1d.v2i32.zero
llvm.nvvm.suld.1d.v2i64.clamp
llvm.nvvm.suld.1d.v2i64.trap
llvm.nvvm.suld.1d.v2i64.zero
llvm.nvvm.suld.1d.v2i8.clamp
llvm.nvvm.suld.1d.v2i8.trap
llvm.nvvm.suld.1d.v2i8.zero
llvm.nvvm.suld.1d.v4i16.clamp
llvm.nvvm.suld.1d.v4i16.trap
llvm.nvvm.suld.1d.v4i16.zero
llvm.nvvm.suld.1d.v4i32.clamp
llvm.nvvm.suld.1d.v4i32.trap
llvm.nvvm.suld.1d.v4i32.zero
llvm.nvvm.suld.1d.v4i8.clamp
llvm.nvvm.suld.1d.v4i8.trap
llvm.nvvm.suld.1d.v4i8.zero
llvm.nvvm.suld.2d.array.i16.clamp
llvm.nvvm.suld.2d.array.i16.trap
llvm.nvvm.suld.2d.array.i16.zero
llvm.nvvm.suld.2d.array.i32.clamp
llvm.nvvm.suld.2d.array.i32.trap
llvm.nvvm.suld.2d.array.i32.zero
llvm.nvvm.suld.2d.array.i64.clamp
llvm.nvvm.suld.2d.array.i64.trap
llvm.nvvm.suld.2d.array.i64.zero
llvm.nvvm.suld.2d.array.i8.clamp
llvm.nvvm.suld.2d.array.i8.trap
llvm.nvvm.suld.2d.array.i8.zero
llvm.nvvm.suld.2d.array.v2i16.clamp
llvm.nvvm.suld.2d.array.v2i16.trap
llvm.nvvm.suld.2d.array.v2i16.zero
llvm.nvvm.suld.2d.array.v2i32.clamp
llvm.nvvm.suld.2d.array.v2i32.trap
llvm.nvvm.suld.2d.array.v2i32.zero
llvm.nvvm.suld.2d.array.v2i64.clamp
llvm.nvvm.suld.2d.array.v2i64.trap
llvm.nvvm.suld.2d.array.v2i64.zero
llvm.nvvm.suld.2d.array.v2i8.clamp
llvm.nvvm.suld.2d.array.v2i8.trap
llvm.nvvm.suld.2d.array.v2i8.zero
llvm.nvvm.suld.2d.array.v4i16.clamp
llvm.nvvm.suld.2d.array.v4i16.trap
llvm.nvvm.suld.2d.array.v4i16.zero
llvm.nvvm.suld.2d.array.v4i32.clamp
llvm.nvvm.suld.2d.array.v4i32.trap
llvm.nvvm.suld.2d.array.v4i32.zero
llvm.nvvm.suld.2d.array.v4i8.clamp
llvm.nvvm.suld.2d.array.v4i8.trap
llvm.nvvm.suld.2d.array.v4i8.zero
llvm.nvvm.suld.2d.i16.clamp
llvm.nvvm.suld.2d.i16.trap
llvm.nvvm.suld.2d.i16.zero
llvm.nvvm.suld.2d.i32.clamp
llvm.nvvm.suld.2d.i32.trap
llvm.nvvm.suld.2d.i32.zero
llvm.nvvm.suld.2d.i64.clamp
llvm.nvvm.suld.2d.i64.trap
llvm.nvvm.suld.2d.i64.zero
llvm.nvvm.suld.2d.i8.clamp
llvm.nvvm.suld.2d.i8.trap
llvm.nvvm.suld.2d.i8.zero
llvm.nvvm.suld.2d.v2i16.clamp
llvm.nvvm.suld.2d.v2i16.trap
llvm.nvvm.suld.2d.v2i16.zero
llvm.nvvm.suld.2d.v2i32.clamp
llvm.nvvm.suld.2d.v2i32.trap
llvm.nvvm.suld.2d.v2i32.zero
llvm.nvvm.suld.2d.v2i64.clamp
llvm.nvvm.suld.2d.v2i64.trap
llvm.nvvm.suld.2d.v2i64.zero
llvm.nvvm.suld.2d.v2i8.clamp
llvm.nvvm.suld.2d.v2i8.trap
llvm.nvvm.suld.2d.v2i8.zero
llvm.nvvm.suld.2d.v4i16.clamp
llvm.nvvm.suld.2d.v4i16.trap
llvm.nvvm.suld.2d.v4i16.zero
llvm.nvvm.suld.2d.v4i32.clamp
llvm.nvvm.suld.2d.v4i32.trap
llvm.nvvm.suld.2d.v4i32.zero
llvm.nvvm.suld.2d.v4i8.clamp
llvm.nvvm.suld.2d.v4i8.trap
llvm.nvvm.suld.2d.v4i8.zero
llvm.nvvm.suld.3d.i16.clamp
llvm.nvvm.suld.3d.i16.trap
llvm.nvvm.suld.3d.i16.zero
llvm.nvvm.suld.3d.i32.clamp
llvm.nvvm.suld.3d.i32.trap
llvm.nvvm.suld.3d.i32.zero
llvm.nvvm.suld.3d.i64.clamp
llvm.nvvm.suld.3d.i64.trap
llvm.nvvm.suld.3d.i64.zero
llvm.nvvm.suld.3d.i8.clamp
llvm.nvvm.suld.3d.i8.trap
llvm.nvvm.suld.3d.i8.zero
llvm.nvvm.suld.3d.v2i16.clamp
llvm.nvvm.suld.3d.v2i16.trap
llvm.nvvm.suld.3d.v2i16.zero
llvm.nvvm.suld.3d.v2i32.clamp
llvm.nvvm.suld.3d.v2i32.trap
llvm.nvvm.suld.3d.v2i32.zero
llvm.nvvm.suld.3d.v2i64.clamp
llvm.nvvm.suld.3d.v2i64.trap
llvm.nvvm.suld.3d.v2i64.zero
llvm.nvvm.suld.3d.v2i8.clamp
llvm.nvvm.suld.3d.v2i8.trap
llvm.nvvm.suld.3d.v2i8.zero
llvm.nvvm.suld.3d.v4i16.clamp
llvm.nvvm.suld.3d.v4i16.trap
llvm.nvvm.suld.3d.v4i16.zero
llvm.nvvm.suld.3d.v4i32.clamp
llvm.nvvm.suld.3d.v4i32.trap
llvm.nvvm.suld.3d.v4i32.zero
llvm.nvvm.suld.3d.v4i8.clamp
llvm.nvvm.suld.3d.v4i8.trap
llvm.nvvm.suld.3d.v4i8.zero
llvm.nvvm.suq.array.size
llvm.nvvm.suq.channel.data.type
llvm.nvvm.suq.channel.order
llvm.nvvm.suq.depth
llvm.nvvm.suq.height
llvm.nvvm.suq.width
llvm.nvvm.sust.b.1d.array.i16.clamp
llvm.nvvm.sust.b.1d.array.i16.trap
llvm.nvvm.sust.b.1d.array.i16.zero
llvm.nvvm.sust.b.1d.array.i32.clamp
llvm.nvvm.sust.b.1d.array.i32.trap
llvm.nvvm.sust.b.1d.array.i32.zero
llvm.nvvm.sust.b.1d.array.i64.clamp
llvm.nvvm.sust.b.1d.array.i64.trap
llvm.nvvm.sust.b.1d.array.i64.zero
llvm.nvvm.sust.b.1d.array.i8.clamp
llvm.nvvm.sust.b.1d.array.i8.trap
llvm.nvvm.sust.b.1d.array.i8.zero
llvm.nvvm.sust.b.1d.array.v2i16.clamp
llvm.nvvm.sust.b.1d.array.v2i16.trap
llvm.nvvm.sust.b.1d.array.v2i16.zero
llvm.nvvm.sust.b.1d.array.v2i32.clamp
llvm.nvvm.sust.b.1d.array.v2i32.trap
llvm.nvvm.sust.b.1d.array.v2i32.zero
llvm.nvvm.sust.b.1d.array.v2i64.clamp
llvm.nvvm.sust.b.1d.array.v2i64.trap
llvm.nvvm.sust.b.1d.array.v2i64.zero
llvm.nvvm.sust.b.1d.array.v2i8.clamp
llvm.nvvm.sust.b.1d.array.v2i8.trap
llvm.nvvm.sust.b.1d.array.v2i8.zero
llvm.nvvm.sust.b.1d.array.v4i16.clamp
llvm.nvvm.sust.b.1d.array.v4i16.trap
llvm.nvvm.sust.b.1d.array.v4i16.zero
llvm.nvvm.sust.b.1d.array.v4i32.clamp
llvm.nvvm.sust.b.1d.array.v4i32.trap
llvm.nvvm.sust.b.1d.array.v4i32.zero
llvm.nvvm.sust.b.1d.array.v4i8.clamp
llvm.nvvm.sust.b.1d.array.v4i8.trap
llvm.nvvm.sust.b.1d.array.v4i8.zero
llvm.nvvm.sust.b.1d.i16.clamp
llvm.nvvm.sust.b.1d.i16.trap
llvm.nvvm.sust.b.1d.i16.zero
llvm.nvvm.sust.b.1d.i32.clamp
llvm.nvvm.sust.b.1d.i32.trap
llvm.nvvm.sust.b.1d.i32.zero
llvm.nvvm.sust.b.1d.i64.clamp
llvm.nvvm.sust.b.1d.i64.trap
llvm.nvvm.sust.b.1d.i64.zero
llvm.nvvm.sust.b.1d.i8.clamp
llvm.nvvm.sust.b.1d.i8.trap
llvm.nvvm.sust.b.1d.i8.zero
llvm.nvvm.sust.b.1d.v2i16.clamp
llvm.nvvm.sust.b.1d.v2i16.trap
llvm.nvvm.sust.b.1d.v2i16.zero
llvm.nvvm.sust.b.1d.v2i32.clamp
llvm.nvvm.sust.b.1d.v2i32.trap
llvm.nvvm.sust.b.1d.v2i32.zero
llvm.nvvm.sust.b.1d.v2i64.clamp
llvm.nvvm.sust.b.1d.v2i64.trap
llvm.nvvm.sust.b.1d.v2i64.zero
llvm.nvvm.sust.b.1d.v2i8.clamp
llvm.nvvm.sust.b.1d.v2i8.trap
llvm.nvvm.sust.b.1d.v2i8.zero
llvm.nvvm.sust.b.1d.v4i16.clamp
llvm.nvvm.sust.b.1d.v4i16.trap
llvm.nvvm.sust.b.1d.v4i16.zero
llvm.nvvm.sust.b.1d.v4i32.clamp
llvm.nvvm.sust.b.1d.v4i32.trap
llvm.nvvm.sust.b.1d.v4i32.zero
llvm.nvvm.sust.b.1d.v4i8.clamp
llvm.nvvm.sust.b.1d.v4i8.trap
llvm.nvvm.sust.b.1d.v4i8.zero
llvm.nvvm.sust.b.2d.array.i16.clamp
llvm.nvvm.sust.b.2d.array.i16.trap
llvm.nvvm.sust.b.2d.array.i16.zero
llvm.nvvm.sust.b.2d.array.i32.clamp
llvm.nvvm.sust.b.2d.array.i32.trap
llvm.nvvm.sust.b.2d.array.i32.zero
llvm.nvvm.sust.b.2d.array.i64.clamp
llvm.nvvm.sust.b.2d.array.i64.trap
llvm.nvvm.sust.b.2d.array.i64.zero
llvm.nvvm.sust.b.2d.array.i8.clamp
llvm.nvvm.sust.b.2d.array.i8.trap
llvm.nvvm.sust.b.2d.array.i8.zero
llvm.nvvm.sust.b.2d.array.v2i16.clamp
llvm.nvvm.sust.b.2d.array.v2i16.trap
llvm.nvvm.sust.b.2d.array.v2i16.zero
llvm.nvvm.sust.b.2d.array.v2i32.clamp
llvm.nvvm.sust.b.2d.array.v2i32.trap
llvm.nvvm.sust.b.2d.array.v2i32.zero
llvm.nvvm.sust.b.2d.array.v2i64.clamp
llvm.nvvm.sust.b.2d.array.v2i64.trap
llvm.nvvm.sust.b.2d.array.v2i64.zero
llvm.nvvm.sust.b.2d.array.v2i8.clamp
llvm.nvvm.sust.b.2d.array.v2i8.trap
llvm.nvvm.sust.b.2d.array.v2i8.zero
llvm.nvvm.sust.b.2d.array.v4i16.clamp
llvm.nvvm.sust.b.2d.array.v4i16.trap
llvm.nvvm.sust.b.2d.array.v4i16.zero
llvm.nvvm.sust.b.2d.array.v4i32.clamp
llvm.nvvm.sust.b.2d.array.v4i32.trap
llvm.nvvm.sust.b.2d.array.v4i32.zero
llvm.nvvm.sust.b.2d.array.v4i8.clamp
llvm.nvvm.sust.b.2d.array.v4i8.trap
llvm.nvvm.sust.b.2d.array.v4i8.zero
llvm.nvvm.sust.b.2d.i16.clamp
llvm.nvvm.sust.b.2d.i16.trap
llvm.nvvm.sust.b.2d.i16.zero
llvm.nvvm.sust.b.2d.i32.clamp
llvm.nvvm.sust.b.2d.i32.trap
llvm.nvvm.sust.b.2d.i32.zero
llvm.nvvm.sust.b.2d.i64.clamp
llvm.nvvm.sust.b.2d.i64.trap
llvm.nvvm.sust.b.2d.i64.zero
llvm.nvvm.sust.b.2d.i8.clamp
llvm.nvvm.sust.b.2d.i8.trap
llvm.nvvm.sust.b.2d.i8.zero
llvm.nvvm.sust.b.2d.v2i16.clamp
llvm.nvvm.sust.b.2d.v2i16.trap
llvm.nvvm.sust.b.2d.v2i16.zero
llvm.nvvm.sust.b.2d.v2i32.clamp
llvm.nvvm.sust.b.2d.v2i32.trap
llvm.nvvm.sust.b.2d.v2i32.zero
llvm.nvvm.sust.b.2d.v2i64.clamp
llvm.nvvm.sust.b.2d.v2i64.trap
llvm.nvvm.sust.b.2d.v2i64.zero
llvm.nvvm.sust.b.2d.v2i8.clamp
llvm.nvvm.sust.b.2d.v2i8.trap
llvm.nvvm.sust.b.2d.v2i8.zero
llvm.nvvm.sust.b.2d.v4i16.clamp
llvm.nvvm.sust.b.2d.v4i16.trap
llvm.nvvm.sust.b.2d.v4i16.zero
llvm.nvvm.sust.b.2d.v4i32.clamp
llvm.nvvm.sust.b.2d.v4i32.trap
llvm.nvvm.sust.b.2d.v4i32.zero
llvm.nvvm.sust.b.2d.v4i8.clamp
llvm.nvvm.sust.b.2d.v4i8.trap
llvm.nvvm.sust.b.2d.v4i8.zero
llvm.nvvm.sust.b.3d.i16.clamp
llvm.nvvm.sust.b.3d.i16.trap
llvm.nvvm.sust.b.3d.i16.zero
llvm.nvvm.sust.b.3d.i32.clamp
llvm.nvvm.sust.b.3d.i32.trap
llvm.nvvm.sust.b.3d.i32.zero
llvm.nvvm.sust.b.3d.i64.clamp
llvm.nvvm.sust.b.3d.i64.trap
llvm.nvvm.sust.b.3d.i64.zero
llvm.nvvm.sust.b.3d.i8.clamp
llvm.nvvm.sust.b.3d.i8.trap
llvm.nvvm.sust.b.3d.i8.zero
llvm.nvvm.sust.b.3d.v2i16.clamp
llvm.nvvm.sust.b.3d.v2i16.trap
llvm.nvvm.sust.b.3d.v2i16.zero
llvm.nvvm.sust.b.3d.v2i32.clamp
llvm.nvvm.sust.b.3d.v2i32.trap
llvm.nvvm.sust.b.3d.v2i32.zero
llvm.nvvm.sust.b.3d.v2i64.clamp
llvm.nvvm.sust.b.3d.v2i64.trap
llvm.nvvm.sust.b.3d.v2i64.zero
llvm.nvvm.sust.b.3d.v2i8.clamp
llvm.nvvm.sust.b.3d.v2i8.trap
llvm.nvvm.sust.b.3d.v2i8.zero
llvm.nvvm.sust.b.3d.v4i16.clamp
llvm.nvvm.sust.b.3d.v4i16.trap
llvm.nvvm.sust.b.3d.v4i16.zero
llvm.nvvm.sust.b.3d.v4i32.clamp
llvm.nvvm.sust.b.3d.v4i32.trap
llvm.nvvm.sust.b.3d.v4i32.zero
llvm.nvvm.sust.b.3d.v4i8.clamp
llvm.nvvm.sust.b.3d.v4i8.trap
llvm.nvvm.sust.b.3d.v4i8.zero
llvm.nvvm.sust.p.1d.array.i16.trap
llvm.nvvm.sust.p.1d.array.i32.trap
llvm.nvvm.sust.p.1d.array.i8.trap
llvm.nvvm.sust.p.1d.array.v2i16.trap
llvm.nvvm.sust.p.1d.array.v2i32.trap
llvm.nvvm.sust.p.1d.array.v2i8.trap
llvm.nvvm.sust.p.1d.array.v4i16.trap
llvm.nvvm.sust.p.1d.array.v4i32.trap
llvm.nvvm.sust.p.1d.array.v4i8.trap
llvm.nvvm.sust.p.1d.i16.trap
llvm.nvvm.sust.p.1d.i32.trap
llvm.nvvm.sust.p.1d.i8.trap
llvm.nvvm.sust.p.1d.v2i16.trap
llvm.nvvm.sust.p.1d.v2i32.trap
llvm.nvvm.sust.p.1d.v2i8.trap
llvm.nvvm.sust.p.1d.v4i16.trap
llvm.nvvm.sust.p.1d.v4i32.trap
llvm.nvvm.sust.p.1d.v4i8.trap
llvm.nvvm.sust.p.2d.array.i16.trap
llvm.nvvm.sust.p.2d.array.i32.trap
llvm.nvvm.sust.p.2d.array.i8.trap
llvm.nvvm.sust.p.2d.array.v2i16.trap
llvm.nvvm.sust.p.2d.array.v2i32.trap
llvm.nvvm.sust.p.2d.array.v2i8.trap
llvm.nvvm.sust.p.2d.array.v4i16.trap
llvm.nvvm.sust.p.2d.array.v4i32.trap
llvm.nvvm.sust.p.2d.array.v4i8.trap
llvm.nvvm.sust.p.2d.i16.trap
llvm.nvvm.sust.p.2d.i32.trap
llvm.nvvm.sust.p.2d.i8.trap
llvm.nvvm.sust.p.2d.v2i16.trap
llvm.nvvm.sust.p.2d.v2i32.trap
llvm.nvvm.sust.p.2d.v2i8.trap
llvm.nvvm.sust.p.2d.v4i16.trap
llvm.nvvm.sust.p.2d.v4i32.trap
llvm.nvvm.sust.p.2d.v4i8.trap
llvm.nvvm.sust.p.3d.i16.trap
llvm.nvvm.sust.p.3d.i32.trap
llvm.nvvm.sust.p.3d.i8.trap
llvm.nvvm.sust.p.3d.v2i16.trap
llvm.nvvm.sust.p.3d.v2i32.trap
llvm.nvvm.sust.p.3d.v2i8.trap
llvm.nvvm.sust.p.3d.v4i16.trap
llvm.nvvm.sust.p.3d.v4i32.trap
llvm.nvvm.sust.p.3d.v4i8.trap
llvm.nvvm.swap.lo.hi.b64
llvm.nvvm.tex.1d.array.grad.v4f32.f32
llvm.nvvm.tex.1d.array.grad.v4s32.f32
llvm.nvvm.tex.1d.array.grad.v4u32.f32
llvm.nvvm.tex.1d.array.level.v4f32.f32
llvm.nvvm.tex.1d.array.level.v4s32.f32
llvm.nvvm.tex.1d.array.level.v4u32.f32
llvm.nvvm.tex.1d.array.v4f32.f32
llvm.nvvm.tex.1d.array.v4f32.s32
llvm.nvvm.tex.1d.array.v4s32.f32
llvm.nvvm.tex.1d.array.v4s32.s32
llvm.nvvm.tex.1d.array.v4u32.f32
llvm.nvvm.tex.1d.array.v4u32.s32
llvm.nvvm.tex.1d.grad.v4f32.f32
llvm.nvvm.tex.1d.grad.v4s32.f32
llvm.nvvm.tex.1d.grad.v4u32.f32
llvm.nvvm.tex.1d.level.v4f32.f32
llvm.nvvm.tex.1d.level.v4s32.f32
llvm.nvvm.tex.1d.level.v4u32.f32
llvm.nvvm.tex.1d.v4f32.f32
llvm.nvvm.tex.1d.v4f32.s32
llvm.nvvm.tex.1d.v4s32.f32
llvm.nvvm.tex.1d.v4s32.s32
llvm.nvvm.tex.1d.v4u32.f32
llvm.nvvm.tex.1d.v4u32.s32
llvm.nvvm.tex.2d.array.grad.v4f32.f32
llvm.nvvm.tex.2d.array.grad.v4s32.f32
llvm.nvvm.tex.2d.array.grad.v4u32.f32
llvm.nvvm.tex.2d.array.level.v4f32.f32
llvm.nvvm.tex.2d.array.level.v4s32.f32
llvm.nvvm.tex.2d.array.level.v4u32.f32
llvm.nvvm.tex.2d.array.v4f32.f32
llvm.nvvm.tex.2d.array.v4f32.s32
llvm.nvvm.tex.2d.array.v4s32.f32
llvm.nvvm.tex.2d.array.v4s32.s32
llvm.nvvm.tex.2d.array.v4u32.f32
llvm.nvvm.tex.2d.array.v4u32.s32
llvm.nvvm.tex.2d.grad.v4f32.f32
llvm.nvvm.tex.2d.grad.v4s32.f32
llvm.nvvm.tex.2d.grad.v4u32.f32
llvm.nvvm.tex.2d.level.v4f32.f32
llvm.nvvm.tex.2d.level.v4s32.f32
llvm.nvvm.tex.2d.level.v4u32.f32
llvm.nvvm.tex.2d.v4f32.f32
llvm.nvvm.tex.2d.v4f32.s32
llvm.nvvm.tex.2d.v4s32.f32
llvm.nvvm.tex.2d.v4s32.s32
llvm.nvvm.tex.2d.v4u32.f32
llvm.nvvm.tex.2d.v4u32.s32
llvm.nvvm.tex.3d.grad.v4f32.f32
llvm.nvvm.tex.3d.grad.v4s32.f32
llvm.nvvm.tex.3d.grad.v4u32.f32
llvm.nvvm.tex.3d.level.v4f32.f32
llvm.nvvm.tex.3d.level.v4s32.f32
llvm.nvvm.tex.3d.level.v4u32.f32
llvm.nvvm.tex.3d.v4f32.f32
llvm.nvvm.tex.3d.v4f32.s32
llvm.nvvm.tex.3d.v4s32.f32
llvm.nvvm.tex.3d.v4s32.s32
llvm.nvvm.tex.3d.v4u32.f32
llvm.nvvm.tex.3d.v4u32.s32
llvm.nvvm.tex.cube.array.level.v4f32.f32
llvm.nvvm.tex.cube.array.level.v4s32.f32
llvm.nvvm.tex.cube.array.level.v4u32.f32
llvm.nvvm.tex.cube.array.v4f32.f32
llvm.nvvm.tex.cube.array.v4s32.f32
llvm.nvvm.tex.cube.array.v4u32.f32
llvm.nvvm.tex.cube.level.v4f32.f32
llvm.nvvm.tex.cube.level.v4s32.f32
llvm.nvvm.tex.cube.level.v4u32.f32
llvm.nvvm.tex.cube.v4f32.f32
llvm.nvvm.tex.cube.v4s32.f32
llvm.nvvm.tex.cube.v4u32.f32
llvm.nvvm.tex.unified.1d.array.grad.v4f32.f32
llvm.nvvm.tex.unified.1d.array.grad.v4s32.f32
llvm.nvvm.tex.unified.1d.array.grad.v4u32.f32
llvm.nvvm.tex.unified.1d.array.level.v4f32.f32
llvm.nvvm.tex.unified.1d.array.level.v4s32.f32
llvm.nvvm.tex.unified.1d.array.level.v4u32.f32
llvm.nvvm.tex.unified.1d.array.v4f32.f32
llvm.nvvm.tex.unified.1d.array.v4f32.s32
llvm.nvvm.tex.unified.1d.array.v4s32.f32
llvm.nvvm.tex.unified.1d.array.v4s32.s32
llvm.nvvm.tex.unified.1d.array.v4u32.f32
llvm.nvvm.tex.unified.1d.array.v4u32.s32
llvm.nvvm.tex.unified.1d.grad.v4f32.f32
llvm.nvvm.tex.unified.1d.grad.v4s32.f32
llvm.nvvm.tex.unified.1d.grad.v4u32.f32
llvm.nvvm.tex.unified.1d.level.v4f32.f32
llvm.nvvm.tex.unified.1d.level.v4s32.f32
llvm.nvvm.tex.unified.1d.level.v4u32.f32
llvm.nvvm.tex.unified.1d.v4f32.f32
llvm.nvvm.tex.unified.1d.v4f32.s32
llvm.nvvm.tex.unified.1d.v4s32.f32
llvm.nvvm.tex.unified.1d.v4s32.s32
llvm.nvvm.tex.unified.1d.v4u32.f32
llvm.nvvm.tex.unified.1d.v4u32.s32
llvm.nvvm.tex.unified.2d.array.grad.v4f32.f32
llvm.nvvm.tex.unified.2d.array.grad.v4s32.f32
llvm.nvvm.tex.unified.2d.array.grad.v4u32.f32
llvm.nvvm.tex.unified.2d.array.level.v4f32.f32
llvm.nvvm.tex.unified.2d.array.level.v4s32.f32
llvm.nvvm.tex.unified.2d.array.level.v4u32.f32
llvm.nvvm.tex.unified.2d.array.v4f32.f32
llvm.nvvm.tex.unified.2d.array.v4f32.s32
llvm.nvvm.tex.unified.2d.array.v4s32.f32
llvm.nvvm.tex.unified.2d.array.v4s32.s32
llvm.nvvm.tex.unified.2d.array.v4u32.f32
llvm.nvvm.tex.unified.2d.array.v4u32.s32
llvm.nvvm.tex.unified.2d.grad.v4f32.f32
llvm.nvvm.tex.unified.2d.grad.v4s32.f32
llvm.nvvm.tex.unified.2d.grad.v4u32.f32
llvm.nvvm.tex.unified.2d.level.v4f32.f32
llvm.nvvm.tex.unified.2d.level.v4s32.f32
llvm.nvvm.tex.unified.2d.level.v4u32.f32
llvm.nvvm.tex.unified.2d.v4f32.f32
llvm.nvvm.tex.unified.2d.v4f32.s32
llvm.nvvm.tex.unified.2d.v4s32.f32
llvm.nvvm.tex.unified.2d.v4s32.s32
llvm.nvvm.tex.unified.2d.v4u32.f32
llvm.nvvm.tex.unified.2d.v4u32.s32
llvm.nvvm.tex.unified.3d.grad.v4f32.f32
llvm.nvvm.tex.unified.3d.grad.v4s32.f32
llvm.nvvm.tex.unified.3d.grad.v4u32.f32
llvm.nvvm.tex.unified.3d.level.v4f32.f32
llvm.nvvm.tex.unified.3d.level.v4s32.f32
llvm.nvvm.tex.unified.3d.level.v4u32.f32
llvm.nvvm.tex.unified.3d.v4f32.f32
llvm.nvvm.tex.unified.3d.v4f32.s32
llvm.nvvm.tex.unified.3d.v4s32.f32
llvm.nvvm.tex.unified.3d.v4s32.s32
llvm.nvvm.tex.unified.3d.v4u32.f32
llvm.nvvm.tex.unified.3d.v4u32.s32
llvm.nvvm.tex.unified.cube.array.level.v4f32.f32
llvm.nvvm.tex.unified.cube.array.level.v4s32.f32
llvm.nvvm.tex.unified.cube.array.level.v4u32.f32
llvm.nvvm.tex.unified.cube.array.v4f32.f32
llvm.nvvm.tex.unified.cube.array.v4s32.f32
llvm.nvvm.tex.unified.cube.array.v4u32.f32
llvm.nvvm.tex.unified.cube.level.v4f32.f32
llvm.nvvm.tex.unified.cube.level.v4s32.f32
llvm.nvvm.tex.unified.cube.level.v4u32.f32
llvm.nvvm.tex.unified.cube.v4f32.f32
llvm.nvvm.tex.unified.cube.v4s32.f32
llvm.nvvm.tex.unified.cube.v4u32.f32
llvm.nvvm.texsurf.handle
llvm.nvvm.texsurf.handle.internal
llvm.nvvm.tld4.a.2d.v4f32.f32
llvm.nvvm.tld4.a.2d.v4s32.f32
llvm.nvvm.tld4.a.2d.v4u32.f32
llvm.nvvm.tld4.b.2d.v4f32.f32
llvm.nvvm.tld4.b.2d.v4s32.f32
llvm.nvvm.tld4.b.2d.v4u32.f32
llvm.nvvm.tld4.g.2d.v4f32.f32
llvm.nvvm.tld4.g.2d.v4s32.f32
llvm.nvvm.tld4.g.2d.v4u32.f32
llvm.nvvm.tld4.r.2d.v4f32.f32
llvm.nvvm.tld4.r.2d.v4s32.f32
llvm.nvvm.tld4.r.2d.v4u32.f32
llvm.nvvm.tld4.unified.a.2d.v4f32.f32
llvm.nvvm.tld4.unified.a.2d.v4s32.f32
llvm.nvvm.tld4.unified.a.2d.v4u32.f32
llvm.nvvm.tld4.unified.b.2d.v4f32.f32
llvm.nvvm.tld4.unified.b.2d.v4s32.f32
llvm.nvvm.tld4.unified.b.2d.v4u32.f32
llvm.nvvm.tld4.unified.g.2d.v4f32.f32
llvm.nvvm.tld4.unified.g.2d.v4s32.f32
llvm.nvvm.tld4.unified.g.2d.v4u32.f32
llvm.nvvm.tld4.unified.r.2d.v4f32.f32
llvm.nvvm.tld4.unified.r.2d.v4s32.f32
llvm.nvvm.tld4.unified.r.2d.v4u32.f32
llvm.nvvm.trunc.d
llvm.nvvm.trunc.f
llvm.nvvm.trunc.ftz.f
llvm.nvvm.txq.array.size
llvm.nvvm.txq.channel.data.type
llvm.nvvm.txq.channel.order
llvm.nvvm.txq.depth
llvm.nvvm.txq.height
llvm.nvvm.txq.num.mipmap.levels
llvm.nvvm.txq.num.samples
llvm.nvvm.txq.width
llvm.nvvm.ui2d.rm
llvm.nvvm.ui2d.rn
llvm.nvvm.ui2d.rp
llvm.nvvm.ui2d.rz
llvm.nvvm.ui2f.rm
llvm.nvvm.ui2f.rn
llvm.nvvm.ui2f.rp
llvm.nvvm.ui2f.rz
llvm.nvvm.ull2d.rm
llvm.nvvm.ull2d.rn
llvm.nvvm.ull2d.rp
llvm.nvvm.ull2d.rz
llvm.nvvm.ull2f.rm
llvm.nvvm.ull2f.rn
llvm.nvvm.ull2f.rp
llvm.nvvm.ull2f.rz
llvm.objectsize
llvm.pcmarker
llvm.pow
llvm.powi
llvm.prefetch
llvm.ptr.annotation
llvm.ptx.bar.sync
llvm.ptx.read.clock
llvm.ptx.read.clock64
llvm.ptx.read.ctaid.w
llvm.ptx.read.ctaid.x
llvm.ptx.read.ctaid.y
llvm.ptx.read.ctaid.z
llvm.ptx.read.gridid
llvm.ptx.read.laneid
llvm.ptx.read.lanemask.eq
llvm.ptx.read.lanemask.ge
llvm.ptx.read.lanemask.gt
llvm.ptx.read.lanemask.le
llvm.ptx.read.lanemask.lt
llvm.ptx.read.nctaid.w
llvm.ptx.read.nctaid.x
llvm.ptx.read.nctaid.y
llvm.ptx.read.nctaid.z
llvm.ptx.read.nsmid
llvm.ptx.read.ntid.w
llvm.ptx.read.ntid.x
llvm.ptx.read.ntid.y
llvm.ptx.read.ntid.z
llvm.ptx.read.nwarpid
llvm.ptx.read.pm0
llvm.ptx.read.pm1
llvm.ptx.read.pm2
llvm.ptx.read.pm3
llvm.ptx.read.smid
llvm.ptx.read.tid.w
llvm.ptx.read.tid.x
llvm.ptx.read.tid.y
llvm.ptx.read.tid.z
llvm.ptx.read.warpid
llvm.rcp
llvm.read_register
llvm.readcyclecounter
llvm.returnaddress
llvm.rint
llvm.round
llvm.rsqrt
llvm.sabsdiff
llvm.sadd.with.overflow
llvm.setjmp
llvm.siglongjmp
llvm.sigsetjmp
llvm.sin
llvm.smul.with.overflow
llvm.sqrt
llvm.ssub.with.overflow
llvm.stackprotector
llvm.stackprotectorcheck
llvm.stackrestore
llvm.stacksave
llvm.trap
llvm.trunc
llvm.uabsdiff
llvm.uadd.with.overflow
llvm.umul.with.overflow
llvm.usub.with.overflow
llvm.va_copy
llvm.va_end
llvm.va_start
llvm.var.annotation
llvm.write_register
llvm.x86.3dnow.pavgusb
llvm.x86.3dnow.pf2id
llvm.x86.3dnow.pfacc
llvm.x86.3dnow.pfadd
llvm.x86.3dnow.pfcmpeq
llvm.x86.3dnow.pfcmpge
llvm.x86.3dnow.pfcmpgt
llvm.x86.3dnow.pfmax
llvm.x86.3dnow.pfmin
llvm.x86.3dnow.pfmul
llvm.x86.3dnow.pfrcp
llvm.x86.3dnow.pfrcpit1
llvm.x86.3dnow.pfrcpit2
llvm.x86.3dnow.pfrsqit1
llvm.x86.3dnow.pfrsqrt
llvm.x86.3dnow.pfsub
llvm.x86.3dnow.pfsubr
llvm.x86.3dnow.pi2fd
llvm.x86.3dnow.pmulhrw
llvm.x86.3dnowa.pf2iw
llvm.x86.3dnowa.pfnacc
llvm.x86.3dnowa.pfpnacc
llvm.x86.3dnowa.pi2fw
llvm.x86.3dnowa.pswapd
llvm.x86.addcarry.u32
llvm.x86.addcarry.u64
llvm.x86.addcarryx.u32
llvm.x86.addcarryx.u64
llvm.x86.aesni.aesdec
llvm.x86.aesni.aesdeclast
llvm.x86.aesni.aesenc
llvm.x86.aesni.aesenclast
llvm.x86.aesni.aesimc
llvm.x86.aesni.aeskeygenassist
llvm.x86.avx.addsub.pd.256
llvm.x86.avx.addsub.ps.256
llvm.x86.avx.blendv.pd.256
llvm.x86.avx.blendv.ps.256
llvm.x86.avx.cmp.pd.256
llvm.x86.avx.cmp.ps.256
llvm.x86.avx.cvt.pd2.ps.256
llvm.x86.avx.cvt.pd2dq.256
llvm.x86.avx.cvt.ps2.pd.256
llvm.x86.avx.cvt.ps2dq.256
llvm.x86.avx.cvtdq2.pd.256
llvm.x86.avx.cvtdq2.ps.256
llvm.x86.avx.cvtt.pd2dq.256
llvm.x86.avx.cvtt.ps2dq.256
llvm.x86.avx.dp.ps.256
llvm.x86.avx.hadd.pd.256
llvm.x86.avx.hadd.ps.256
llvm.x86.avx.hsub.pd.256
llvm.x86.avx.hsub.ps.256
llvm.x86.avx.ldu.dq.256
llvm.x86.avx.maskload.pd
llvm.x86.avx.maskload.pd.256
llvm.x86.avx.maskload.ps
llvm.x86.avx.maskload.ps.256
llvm.x86.avx.maskstore.pd
llvm.x86.avx.maskstore.pd.256
llvm.x86.avx.maskstore.ps
llvm.x86.avx.maskstore.ps.256
llvm.x86.avx.max.pd.256
llvm.x86.avx.max.ps.256
llvm.x86.avx.min.pd.256
llvm.x86.avx.min.ps.256
llvm.x86.avx.movmsk.pd.256
llvm.x86.avx.movmsk.ps.256
llvm.x86.avx.ptestc.256
llvm.x86.avx.ptestnzc.256
llvm.x86.avx.ptestz.256
llvm.x86.avx.rcp.ps.256
llvm.x86.avx.round.pd.256
llvm.x86.avx.round.ps.256
llvm.x86.avx.rsqrt.ps.256
llvm.x86.avx.sqrt.pd.256
llvm.x86.avx.sqrt.ps.256
llvm.x86.avx.storeu.dq.256
llvm.x86.avx.storeu.pd.256
llvm.x86.avx.storeu.ps.256
llvm.x86.avx.vbroadcastf128.pd.256
llvm.x86.avx.vbroadcastf128.ps.256
llvm.x86.avx.vperm2f128.pd.256
llvm.x86.avx.vperm2f128.ps.256
llvm.x86.avx.vperm2f128.si.256
llvm.x86.avx.vpermilvar.pd
llvm.x86.avx.vpermilvar.pd.256
llvm.x86.avx.vpermilvar.ps
llvm.x86.avx.vpermilvar.ps.256
llvm.x86.avx.vtestc.pd
llvm.x86.avx.vtestc.pd.256
llvm.x86.avx.vtestc.ps
llvm.x86.avx.vtestc.ps.256
llvm.x86.avx.vtestnzc.pd
llvm.x86.avx.vtestnzc.pd.256
llvm.x86.avx.vtestnzc.ps
llvm.x86.avx.vtestnzc.ps.256
llvm.x86.avx.vtestz.pd
llvm.x86.avx.vtestz.pd.256
llvm.x86.avx.vtestz.ps
llvm.x86.avx.vtestz.ps.256
llvm.x86.avx.vzeroall
llvm.x86.avx.vzeroupper
llvm.x86.avx2.gather.d.d
llvm.x86.avx2.gather.d.d.256
llvm.x86.avx2.gather.d.pd
llvm.x86.avx2.gather.d.pd.256
llvm.x86.avx2.gather.d.ps
llvm.x86.avx2.gather.d.ps.256
llvm.x86.avx2.gather.d.q
llvm.x86.avx2.gather.d.q.256
llvm.x86.avx2.gather.q.d
llvm.x86.avx2.gather.q.d.256
llvm.x86.avx2.gather.q.pd
llvm.x86.avx2.gather.q.pd.256
llvm.x86.avx2.gather.q.ps
llvm.x86.avx2.gather.q.ps.256
llvm.x86.avx2.gather.q.q
llvm.x86.avx2.gather.q.q.256
llvm.x86.avx2.maskload.d
llvm.x86.avx2.maskload.d.256
llvm.x86.avx2.maskload.q
llvm.x86.avx2.maskload.q.256
llvm.x86.avx2.maskstore.d
llvm.x86.avx2.maskstore.d.256
llvm.x86.avx2.maskstore.q
llvm.x86.avx2.maskstore.q.256
llvm.x86.avx2.movntdqa
llvm.x86.avx2.mpsadbw
llvm.x86.avx2.pabs.b
llvm.x86.avx2.pabs.d
llvm.x86.avx2.pabs.w
llvm.x86.avx2.packssdw
llvm.x86.avx2.packsswb
llvm.x86.avx2.packusdw
llvm.x86.avx2.packuswb
llvm.x86.avx2.padds.b
llvm.x86.avx2.padds.w
llvm.x86.avx2.paddus.b
llvm.x86.avx2.paddus.w
llvm.x86.avx2.pavg.b
llvm.x86.avx2.pavg.w
llvm.x86.avx2.pblendvb
llvm.x86.avx2.permd
llvm.x86.avx2.permps
llvm.x86.avx2.phadd.d
llvm.x86.avx2.phadd.sw
llvm.x86.avx2.phadd.w
llvm.x86.avx2.phsub.d
llvm.x86.avx2.phsub.sw
llvm.x86.avx2.phsub.w
llvm.x86.avx2.pmadd.ub.sw
llvm.x86.avx2.pmadd.wd
llvm.x86.avx2.pmaxs.b
llvm.x86.avx2.pmaxs.d
llvm.x86.avx2.pmaxs.w
llvm.x86.avx2.pmaxu.b
llvm.x86.avx2.pmaxu.d
llvm.x86.avx2.pmaxu.w
llvm.x86.avx2.pmins.b
llvm.x86.avx2.pmins.d
llvm.x86.avx2.pmins.w
llvm.x86.avx2.pminu.b
llvm.x86.avx2.pminu.d
llvm.x86.avx2.pminu.w
llvm.x86.avx2.pmovmskb
llvm.x86.avx2.pmovsxbd
llvm.x86.avx2.pmovsxbq
llvm.x86.avx2.pmovsxbw
llvm.x86.avx2.pmovsxdq
llvm.x86.avx2.pmovsxwd
llvm.x86.avx2.pmovsxwq
llvm.x86.avx2.pmovzxbd
llvm.x86.avx2.pmovzxbq
llvm.x86.avx2.pmovzxbw
llvm.x86.avx2.pmovzxdq
llvm.x86.avx2.pmovzxwd
llvm.x86.avx2.pmovzxwq
llvm.x86.avx2.pmul.dq
llvm.x86.avx2.pmul.hr.sw
llvm.x86.avx2.pmulh.w
llvm.x86.avx2.pmulhu.w
llvm.x86.avx2.pmulu.dq
llvm.x86.avx2.psad.bw
llvm.x86.avx2.pshuf.b
llvm.x86.avx2.psign.b
llvm.x86.avx2.psign.d
llvm.x86.avx2.psign.w
llvm.x86.avx2.psll.d
llvm.x86.avx2.psll.q
llvm.x86.avx2.psll.w
llvm.x86.avx2.pslli.d
llvm.x86.avx2.pslli.q
llvm.x86.avx2.pslli.w
llvm.x86.avx2.psllv.d
llvm.x86.avx2.psllv.d.256
llvm.x86.avx2.psllv.q
llvm.x86.avx2.psllv.q.256
llvm.x86.avx2.psra.d
llvm.x86.avx2.psra.w
llvm.x86.avx2.psrai.d
llvm.x86.avx2.psrai.w
llvm.x86.avx2.psrav.d
llvm.x86.avx2.psrav.d.256
llvm.x86.avx2.psrl.d
llvm.x86.avx2.psrl.q
llvm.x86.avx2.psrl.w
llvm.x86.avx2.psrli.d
llvm.x86.avx2.psrli.q
llvm.x86.avx2.psrli.w
llvm.x86.avx2.psrlv.d
llvm.x86.avx2.psrlv.d.256
llvm.x86.avx2.psrlv.q
llvm.x86.avx2.psrlv.q.256
llvm.x86.avx2.psubs.b
llvm.x86.avx2.psubs.w
llvm.x86.avx2.psubus.b
llvm.x86.avx2.psubus.w
llvm.x86.avx2.vperm2i128
llvm.x86.avx512.cvtsd2usi
llvm.x86.avx512.cvtsd2usi64
llvm.x86.avx512.cvtsi2sd32
llvm.x86.avx512.cvtsi2sd64
llvm.x86.avx512.cvtsi2ss32
llvm.x86.avx512.cvtsi2ss64
llvm.x86.avx512.cvtss2usi
llvm.x86.avx512.cvtss2usi64
llvm.x86.avx512.cvttsd2usi
llvm.x86.avx512.cvttsd2usi64
llvm.x86.avx512.cvttss2usi
llvm.x86.avx512.cvttss2usi64
llvm.x86.avx512.cvtusi2sd
llvm.x86.avx512.cvtusi2ss
llvm.x86.avx512.cvtusi642sd
llvm.x86.avx512.cvtusi642ss
llvm.x86.avx512.exp2.pd
llvm.x86.avx512.exp2.ps
llvm.x86.avx512.gather.dpd.512
llvm.x86.avx512.gather.dpi.512
llvm.x86.avx512.gather.dpq.512
llvm.x86.avx512.gather.dps.512
llvm.x86.avx512.gather.qpd.512
llvm.x86.avx512.gather.qpi.512
llvm.x86.avx512.gather.qpq.512
llvm.x86.avx512.gather.qps.512
llvm.x86.avx512.gather3div2.df
llvm.x86.avx512.gather3div2.di
llvm.x86.avx512.gather3div4.df
llvm.x86.avx512.gather3div4.di
llvm.x86.avx512.gather3div4.sf
llvm.x86.avx512.gather3div4.si
llvm.x86.avx512.gather3div8.sf
llvm.x86.avx512.gather3div8.si
llvm.x86.avx512.gather3siv2.df
llvm.x86.avx512.gather3siv2.di
llvm.x86.avx512.gather3siv4.df
llvm.x86.avx512.gather3siv4.di
llvm.x86.avx512.gather3siv4.sf
llvm.x86.avx512.gather3siv4.si
llvm.x86.avx512.gather3siv8.sf
llvm.x86.avx512.gather3siv8.si
llvm.x86.avx512.gatherpf.dpd.512
llvm.x86.avx512.gatherpf.dps.512
llvm.x86.avx512.gatherpf.qpd.512
llvm.x86.avx512.gatherpf.qps.512
llvm.x86.avx512.kand.w
llvm.x86.avx512.kandn.w
llvm.x86.avx512.knot.w
llvm.x86.avx512.kor.w
llvm.x86.avx512.kortestc.w
llvm.x86.avx512.kortestz.w
llvm.x86.avx512.kunpck.bw
llvm.x86.avx512.kxnor.w
llvm.x86.avx512.kxor.w
llvm.x86.avx512.mask.add.pd.128
llvm.x86.avx512.mask.add.pd.256
llvm.x86.avx512.mask.add.pd.512
llvm.x86.avx512.mask.add.ps.128
llvm.x86.avx512.mask.add.ps.256
llvm.x86.avx512.mask.add.ps.512
llvm.x86.avx512.mask.add.sd.round
llvm.x86.avx512.mask.add.ss.round
llvm.x86.avx512.mask.and.pd.128
llvm.x86.avx512.mask.and.pd.256
llvm.x86.avx512.mask.and.pd.512
llvm.x86.avx512.mask.and.ps.128
llvm.x86.avx512.mask.and.ps.256
llvm.x86.avx512.mask.and.ps.512
llvm.x86.avx512.mask.andn.pd.128
llvm.x86.avx512.mask.andn.pd.256
llvm.x86.avx512.mask.andn.pd.512
llvm.x86.avx512.mask.andn.ps.128
llvm.x86.avx512.mask.andn.ps.256
llvm.x86.avx512.mask.andn.ps.512
llvm.x86.avx512.mask.blend.b.128
llvm.x86.avx512.mask.blend.b.256
llvm.x86.avx512.mask.blend.b.512
llvm.x86.avx512.mask.blend.d.128
llvm.x86.avx512.mask.blend.d.256
llvm.x86.avx512.mask.blend.d.512
llvm.x86.avx512.mask.blend.pd.128
llvm.x86.avx512.mask.blend.pd.256
llvm.x86.avx512.mask.blend.pd.512
llvm.x86.avx512.mask.blend.ps.128
llvm.x86.avx512.mask.blend.ps.256
llvm.x86.avx512.mask.blend.ps.512
llvm.x86.avx512.mask.blend.q.128
llvm.x86.avx512.mask.blend.q.256
llvm.x86.avx512.mask.blend.q.512
llvm.x86.avx512.mask.blend.w.128
llvm.x86.avx512.mask.blend.w.256
llvm.x86.avx512.mask.blend.w.512
llvm.x86.avx512.mask.cmp.b.128
llvm.x86.avx512.mask.cmp.b.256
llvm.x86.avx512.mask.cmp.b.512
llvm.x86.avx512.mask.cmp.d.128
llvm.x86.avx512.mask.cmp.d.256
llvm.x86.avx512.mask.cmp.d.512
llvm.x86.avx512.mask.cmp.pd.128
llvm.x86.avx512.mask.cmp.pd.256
llvm.x86.avx512.mask.cmp.pd.512
llvm.x86.avx512.mask.cmp.ps.128
llvm.x86.avx512.mask.cmp.ps.256
llvm.x86.avx512.mask.cmp.ps.512
llvm.x86.avx512.mask.cmp.q.128
llvm.x86.avx512.mask.cmp.q.256
llvm.x86.avx512.mask.cmp.q.512
llvm.x86.avx512.mask.cmp.w.128
llvm.x86.avx512.mask.cmp.w.256
llvm.x86.avx512.mask.cmp.w.512
llvm.x86.avx512.mask.compress.d.128
llvm.x86.avx512.mask.compress.d.256
llvm.x86.avx512.mask.compress.d.512
llvm.x86.avx512.mask.compress.pd.128
llvm.x86.avx512.mask.compress.pd.256
llvm.x86.avx512.mask.compress.pd.512
llvm.x86.avx512.mask.compress.ps.128
llvm.x86.avx512.mask.compress.ps.256
llvm.x86.avx512.mask.compress.ps.512
llvm.x86.avx512.mask.compress.q.128
llvm.x86.avx512.mask.compress.q.256
llvm.x86.avx512.mask.compress.q.512
llvm.x86.avx512.mask.compress.store.d.128
llvm.x86.avx512.mask.compress.store.d.256
llvm.x86.avx512.mask.compress.store.d.512
llvm.x86.avx512.mask.compress.store.pd.128
llvm.x86.avx512.mask.compress.store.pd.256
llvm.x86.avx512.mask.compress.store.pd.512
llvm.x86.avx512.mask.compress.store.ps.128
llvm.x86.avx512.mask.compress.store.ps.256
llvm.x86.avx512.mask.compress.store.ps.512
llvm.x86.avx512.mask.compress.store.q.128
llvm.x86.avx512.mask.compress.store.q.256
llvm.x86.avx512.mask.compress.store.q.512
llvm.x86.avx512.mask.conflict.d.512
llvm.x86.avx512.mask.conflict.q.512
llvm.x86.avx512.mask.cvtdq2pd.128
llvm.x86.avx512.mask.cvtdq2pd.256
llvm.x86.avx512.mask.cvtdq2pd.512
llvm.x86.avx512.mask.cvtdq2ps.128
llvm.x86.avx512.mask.cvtdq2ps.256
llvm.x86.avx512.mask.cvtdq2ps.512
llvm.x86.avx512.mask.cvtpd2dq.128
llvm.x86.avx512.mask.cvtpd2dq.256
llvm.x86.avx512.mask.cvtpd2dq.512
llvm.x86.avx512.mask.cvtpd2ps
llvm.x86.avx512.mask.cvtpd2ps.256
llvm.x86.avx512.mask.cvtpd2ps.512
llvm.x86.avx512.mask.cvtpd2qq.128
llvm.x86.avx512.mask.cvtpd2qq.256
llvm.x86.avx512.mask.cvtpd2qq.512
llvm.x86.avx512.mask.cvtpd2udq.128
llvm.x86.avx512.mask.cvtpd2udq.256
llvm.x86.avx512.mask.cvtpd2udq.512
llvm.x86.avx512.mask.cvtpd2uqq.128
llvm.x86.avx512.mask.cvtpd2uqq.256
llvm.x86.avx512.mask.cvtpd2uqq.512
llvm.x86.avx512.mask.cvtps2dq.128
llvm.x86.avx512.mask.cvtps2dq.256
llvm.x86.avx512.mask.cvtps2dq.512
llvm.x86.avx512.mask.cvtps2pd.128
llvm.x86.avx512.mask.cvtps2pd.256
llvm.x86.avx512.mask.cvtps2pd.512
llvm.x86.avx512.mask.cvtps2qq.128
llvm.x86.avx512.mask.cvtps2qq.256
llvm.x86.avx512.mask.cvtps2qq.512
llvm.x86.avx512.mask.cvtps2udq.128
llvm.x86.avx512.mask.cvtps2udq.256
llvm.x86.avx512.mask.cvtps2udq.512
llvm.x86.avx512.mask.cvtps2uqq.128
llvm.x86.avx512.mask.cvtps2uqq.256
llvm.x86.avx512.mask.cvtps2uqq.512
llvm.x86.avx512.mask.cvtqq2pd.128
llvm.x86.avx512.mask.cvtqq2pd.256
llvm.x86.avx512.mask.cvtqq2pd.512
llvm.x86.avx512.mask.cvtqq2ps.128
llvm.x86.avx512.mask.cvtqq2ps.256
llvm.x86.avx512.mask.cvtqq2ps.512
llvm.x86.avx512.mask.cvttpd2dq.128
llvm.x86.avx512.mask.cvttpd2dq.256
llvm.x86.avx512.mask.cvttpd2dq.512
llvm.x86.avx512.mask.cvttpd2qq.128
llvm.x86.avx512.mask.cvttpd2qq.256
llvm.x86.avx512.mask.cvttpd2qq.512
llvm.x86.avx512.mask.cvttpd2udq.128
llvm.x86.avx512.mask.cvttpd2udq.256
llvm.x86.avx512.mask.cvttpd2udq.512
llvm.x86.avx512.mask.cvttpd2uqq.128
llvm.x86.avx512.mask.cvttpd2uqq.256
llvm.x86.avx512.mask.cvttpd2uqq.512
llvm.x86.avx512.mask.cvttps2dq.128
llvm.x86.avx512.mask.cvttps2dq.256
llvm.x86.avx512.mask.cvttps2dq.512
llvm.x86.avx512.mask.cvttps2qq.128
llvm.x86.avx512.mask.cvttps2qq.256
llvm.x86.avx512.mask.cvttps2qq.512
llvm.x86.avx512.mask.cvttps2udq.128
llvm.x86.avx512.mask.cvttps2udq.256
llvm.x86.avx512.mask.cvttps2udq.512
llvm.x86.avx512.mask.cvttps2uqq.128
llvm.x86.avx512.mask.cvttps2uqq.256
llvm.x86.avx512.mask.cvttps2uqq.512
llvm.x86.avx512.mask.cvtudq2pd.128
llvm.x86.avx512.mask.cvtudq2pd.256
llvm.x86.avx512.mask.cvtudq2pd.512
llvm.x86.avx512.mask.cvtudq2ps.128
llvm.x86.avx512.mask.cvtudq2ps.256
llvm.x86.avx512.mask.cvtudq2ps.512
llvm.x86.avx512.mask.cvtuqq2pd.128
llvm.x86.avx512.mask.cvtuqq2pd.256
llvm.x86.avx512.mask.cvtuqq2pd.512
llvm.x86.avx512.mask.cvtuqq2ps.128
llvm.x86.avx512.mask.cvtuqq2ps.256
llvm.x86.avx512.mask.cvtuqq2ps.512
llvm.x86.avx512.mask.div.pd.128
llvm.x86.avx512.mask.div.pd.256
llvm.x86.avx512.mask.div.pd.512
llvm.x86.avx512.mask.div.ps.128
llvm.x86.avx512.mask.div.ps.256
llvm.x86.avx512.mask.div.ps.512
llvm.x86.avx512.mask.div.sd.round
llvm.x86.avx512.mask.div.ss.round
llvm.x86.avx512.mask.expand.d.128
llvm.x86.avx512.mask.expand.d.256
llvm.x86.avx512.mask.expand.d.512
llvm.x86.avx512.mask.expand.load.d.128
llvm.x86.avx512.mask.expand.load.d.256
llvm.x86.avx512.mask.expand.load.d.512
llvm.x86.avx512.mask.expand.load.pd.128
llvm.x86.avx512.mask.expand.load.pd.256
llvm.x86.avx512.mask.expand.load.pd.512
llvm.x86.avx512.mask.expand.load.ps.128
llvm.x86.avx512.mask.expand.load.ps.256
llvm.x86.avx512.mask.expand.load.ps.512
llvm.x86.avx512.mask.expand.load.q.128
llvm.x86.avx512.mask.expand.load.q.256
llvm.x86.avx512.mask.expand.load.q.512
llvm.x86.avx512.mask.expand.pd.128
llvm.x86.avx512.mask.expand.pd.256
llvm.x86.avx512.mask.expand.pd.512
llvm.x86.avx512.mask.expand.ps.128
llvm.x86.avx512.mask.expand.ps.256
llvm.x86.avx512.mask.expand.ps.512
llvm.x86.avx512.mask.expand.q.128
llvm.x86.avx512.mask.expand.q.256
llvm.x86.avx512.mask.expand.q.512
llvm.x86.avx512.mask.getexp.pd.128
llvm.x86.avx512.mask.getexp.pd.256
llvm.x86.avx512.mask.getexp.pd.512
llvm.x86.avx512.mask.getexp.ps.128
llvm.x86.avx512.mask.getexp.ps.256
llvm.x86.avx512.mask.getexp.ps.512
llvm.x86.avx512.mask.getexp.sd
llvm.x86.avx512.mask.getexp.ss
llvm.x86.avx512.mask.load.pd.512
llvm.x86.avx512.mask.load.ps.512
llvm.x86.avx512.mask.loadu.d.512
llvm.x86.avx512.mask.loadu.pd.512
llvm.x86.avx512.mask.loadu.ps.512
llvm.x86.avx512.mask.loadu.q.512
llvm.x86.avx512.mask.lzcnt.d.512
llvm.x86.avx512.mask.lzcnt.q.512
llvm.x86.avx512.mask.max.pd.128
llvm.x86.avx512.mask.max.pd.256
llvm.x86.avx512.mask.max.pd.512
llvm.x86.avx512.mask.max.ps.128
llvm.x86.avx512.mask.max.ps.256
llvm.x86.avx512.mask.max.ps.512
llvm.x86.avx512.mask.max.sd.round
llvm.x86.avx512.mask.max.ss.round
llvm.x86.avx512.mask.min.pd.128
llvm.x86.avx512.mask.min.pd.256
llvm.x86.avx512.mask.min.pd.512
llvm.x86.avx512.mask.min.ps.128
llvm.x86.avx512.mask.min.ps.256
llvm.x86.avx512.mask.min.ps.512
llvm.x86.avx512.mask.min.sd.round
llvm.x86.avx512.mask.min.ss.round
llvm.x86.avx512.mask.mul.pd.128
llvm.x86.avx512.mask.mul.pd.256
llvm.x86.avx512.mask.mul.pd.512
llvm.x86.avx512.mask.mul.ps.128
llvm.x86.avx512.mask.mul.ps.256
llvm.x86.avx512.mask.mul.ps.512
llvm.x86.avx512.mask.mul.sd.round
llvm.x86.avx512.mask.mul.ss.round
llvm.x86.avx512.mask.or.pd.128
llvm.x86.avx512.mask.or.pd.256
llvm.x86.avx512.mask.or.pd.512
llvm.x86.avx512.mask.or.ps.128
llvm.x86.avx512.mask.or.ps.256
llvm.x86.avx512.mask.or.ps.512
llvm.x86.avx512.mask.pabs.b.128
llvm.x86.avx512.mask.pabs.b.256
llvm.x86.avx512.mask.pabs.b.512
llvm.x86.avx512.mask.pabs.d.128
llvm.x86.avx512.mask.pabs.d.256
llvm.x86.avx512.mask.pabs.d.512
llvm.x86.avx512.mask.pabs.q.128
llvm.x86.avx512.mask.pabs.q.256
llvm.x86.avx512.mask.pabs.q.512
llvm.x86.avx512.mask.pabs.w.128
llvm.x86.avx512.mask.pabs.w.256
llvm.x86.avx512.mask.pabs.w.512
llvm.x86.avx512.mask.packssdw.128
llvm.x86.avx512.mask.packssdw.256
llvm.x86.avx512.mask.packssdw.512
llvm.x86.avx512.mask.packsswb.128
llvm.x86.avx512.mask.packsswb.256
llvm.x86.avx512.mask.packsswb.512
llvm.x86.avx512.mask.packusdw.128
llvm.x86.avx512.mask.packusdw.256
llvm.x86.avx512.mask.packusdw.512
llvm.x86.avx512.mask.packuswb.128
llvm.x86.avx512.mask.packuswb.256
llvm.x86.avx512.mask.packuswb.512
llvm.x86.avx512.mask.padd.b.128
llvm.x86.avx512.mask.padd.b.256
llvm.x86.avx512.mask.padd.b.512
llvm.x86.avx512.mask.padd.d.128
llvm.x86.avx512.mask.padd.d.256
llvm.x86.avx512.mask.padd.d.512
llvm.x86.avx512.mask.padd.q.128
llvm.x86.avx512.mask.padd.q.256
llvm.x86.avx512.mask.padd.q.512
llvm.x86.avx512.mask.padd.w.128
llvm.x86.avx512.mask.padd.w.256
llvm.x86.avx512.mask.padd.w.512
llvm.x86.avx512.mask.padds.b.128
llvm.x86.avx512.mask.padds.b.256
llvm.x86.avx512.mask.padds.b.512
llvm.x86.avx512.mask.padds.w.128
llvm.x86.avx512.mask.padds.w.256
llvm.x86.avx512.mask.padds.w.512
llvm.x86.avx512.mask.paddus.b.128
llvm.x86.avx512.mask.paddus.b.256
llvm.x86.avx512.mask.paddus.b.512
llvm.x86.avx512.mask.paddus.w.128
llvm.x86.avx512.mask.paddus.w.256
llvm.x86.avx512.mask.paddus.w.512
llvm.x86.avx512.mask.pand.d.128
llvm.x86.avx512.mask.pand.d.256
llvm.x86.avx512.mask.pand.d.512
llvm.x86.avx512.mask.pand.q.128
llvm.x86.avx512.mask.pand.q.256
llvm.x86.avx512.mask.pand.q.512
llvm.x86.avx512.mask.pandn.d.128
llvm.x86.avx512.mask.pandn.d.256
llvm.x86.avx512.mask.pandn.d.512
llvm.x86.avx512.mask.pandn.q.128
llvm.x86.avx512.mask.pandn.q.256
llvm.x86.avx512.mask.pandn.q.512
llvm.x86.avx512.mask.pavg.b.128
llvm.x86.avx512.mask.pavg.b.256
llvm.x86.avx512.mask.pavg.b.512
llvm.x86.avx512.mask.pavg.w.128
llvm.x86.avx512.mask.pavg.w.256
llvm.x86.avx512.mask.pavg.w.512
llvm.x86.avx512.mask.pbroadcast.d.gpr.512
llvm.x86.avx512.mask.pbroadcast.q.gpr.512
llvm.x86.avx512.mask.pbroadcast.q.mem.512
llvm.x86.avx512.mask.pcmpeq.b.128
llvm.x86.avx512.mask.pcmpeq.b.256
llvm.x86.avx512.mask.pcmpeq.b.512
llvm.x86.avx512.mask.pcmpeq.d.128
llvm.x86.avx512.mask.pcmpeq.d.256
llvm.x86.avx512.mask.pcmpeq.d.512
llvm.x86.avx512.mask.pcmpeq.q.128
llvm.x86.avx512.mask.pcmpeq.q.256
llvm.x86.avx512.mask.pcmpeq.q.512
llvm.x86.avx512.mask.pcmpeq.w.128
llvm.x86.avx512.mask.pcmpeq.w.256
llvm.x86.avx512.mask.pcmpeq.w.512
llvm.x86.avx512.mask.pcmpgt.b.128
llvm.x86.avx512.mask.pcmpgt.b.256
llvm.x86.avx512.mask.pcmpgt.b.512
llvm.x86.avx512.mask.pcmpgt.d.128
llvm.x86.avx512.mask.pcmpgt.d.256
llvm.x86.avx512.mask.pcmpgt.d.512
llvm.x86.avx512.mask.pcmpgt.q.128
llvm.x86.avx512.mask.pcmpgt.q.256
llvm.x86.avx512.mask.pcmpgt.q.512
llvm.x86.avx512.mask.pcmpgt.w.128
llvm.x86.avx512.mask.pcmpgt.w.256
llvm.x86.avx512.mask.pcmpgt.w.512
llvm.x86.avx512.mask.pmaddubs.w.128
llvm.x86.avx512.mask.pmaddubs.w.256
llvm.x86.avx512.mask.pmaddubs.w.512
llvm.x86.avx512.mask.pmaddw.d.128
llvm.x86.avx512.mask.pmaddw.d.256
llvm.x86.avx512.mask.pmaddw.d.512
llvm.x86.avx512.mask.pmaxs.b.128
llvm.x86.avx512.mask.pmaxs.b.256
llvm.x86.avx512.mask.pmaxs.b.512
llvm.x86.avx512.mask.pmaxs.d.128
llvm.x86.avx512.mask.pmaxs.d.256
llvm.x86.avx512.mask.pmaxs.d.512
llvm.x86.avx512.mask.pmaxs.q.128
llvm.x86.avx512.mask.pmaxs.q.256
llvm.x86.avx512.mask.pmaxs.q.512
llvm.x86.avx512.mask.pmaxs.w.128
llvm.x86.avx512.mask.pmaxs.w.256
llvm.x86.avx512.mask.pmaxs.w.512
llvm.x86.avx512.mask.pmaxu.b.128
llvm.x86.avx512.mask.pmaxu.b.256
llvm.x86.avx512.mask.pmaxu.b.512
llvm.x86.avx512.mask.pmaxu.d.128
llvm.x86.avx512.mask.pmaxu.d.256
llvm.x86.avx512.mask.pmaxu.d.512
llvm.x86.avx512.mask.pmaxu.q.128
llvm.x86.avx512.mask.pmaxu.q.256
llvm.x86.avx512.mask.pmaxu.q.512
llvm.x86.avx512.mask.pmaxu.w.128
llvm.x86.avx512.mask.pmaxu.w.256
llvm.x86.avx512.mask.pmaxu.w.512
llvm.x86.avx512.mask.pmins.b.128
llvm.x86.avx512.mask.pmins.b.256
llvm.x86.avx512.mask.pmins.b.512
llvm.x86.avx512.mask.pmins.d.128
llvm.x86.avx512.mask.pmins.d.256
llvm.x86.avx512.mask.pmins.d.512
llvm.x86.avx512.mask.pmins.q.128
llvm.x86.avx512.mask.pmins.q.256
llvm.x86.avx512.mask.pmins.q.512
llvm.x86.avx512.mask.pmins.w.128
llvm.x86.avx512.mask.pmins.w.256
llvm.x86.avx512.mask.pmins.w.512
llvm.x86.avx512.mask.pminu.b.128
llvm.x86.avx512.mask.pminu.b.256
llvm.x86.avx512.mask.pminu.b.512
llvm.x86.avx512.mask.pminu.d.128
llvm.x86.avx512.mask.pminu.d.256
llvm.x86.avx512.mask.pminu.d.512
llvm.x86.avx512.mask.pminu.q.128
llvm.x86.avx512.mask.pminu.q.256
llvm.x86.avx512.mask.pminu.q.512
llvm.x86.avx512.mask.pminu.w.128
llvm.x86.avx512.mask.pminu.w.256
llvm.x86.avx512.mask.pminu.w.512
llvm.x86.avx512.mask.pmov.db.128
llvm.x86.avx512.mask.pmov.db.256
llvm.x86.avx512.mask.pmov.db.512
llvm.x86.avx512.mask.pmov.db.mem.128
llvm.x86.avx512.mask.pmov.db.mem.256
llvm.x86.avx512.mask.pmov.db.mem.512
llvm.x86.avx512.mask.pmov.dw.128
llvm.x86.avx512.mask.pmov.dw.256
llvm.x86.avx512.mask.pmov.dw.512
llvm.x86.avx512.mask.pmov.dw.mem.128
llvm.x86.avx512.mask.pmov.dw.mem.256
llvm.x86.avx512.mask.pmov.dw.mem.512
llvm.x86.avx512.mask.pmov.qb.128
llvm.x86.avx512.mask.pmov.qb.256
llvm.x86.avx512.mask.pmov.qb.512
llvm.x86.avx512.mask.pmov.qb.mem.128
llvm.x86.avx512.mask.pmov.qb.mem.256
llvm.x86.avx512.mask.pmov.qb.mem.512
llvm.x86.avx512.mask.pmov.qd.128
llvm.x86.avx512.mask.pmov.qd.256
llvm.x86.avx512.mask.pmov.qd.512
llvm.x86.avx512.mask.pmov.qd.mem.128
llvm.x86.avx512.mask.pmov.qd.mem.256
llvm.x86.avx512.mask.pmov.qd.mem.512
llvm.x86.avx512.mask.pmov.qw.128
llvm.x86.avx512.mask.pmov.qw.256
llvm.x86.avx512.mask.pmov.qw.512
llvm.x86.avx512.mask.pmov.qw.mem.128
llvm.x86.avx512.mask.pmov.qw.mem.256
llvm.x86.avx512.mask.pmov.qw.mem.512
llvm.x86.avx512.mask.pmov.wb.128
llvm.x86.avx512.mask.pmov.wb.256
llvm.x86.avx512.mask.pmov.wb.512
llvm.x86.avx512.mask.pmov.wb.mem.128
llvm.x86.avx512.mask.pmov.wb.mem.256
llvm.x86.avx512.mask.pmov.wb.mem.512
llvm.x86.avx512.mask.pmovs.db.128
llvm.x86.avx512.mask.pmovs.db.256
llvm.x86.avx512.mask.pmovs.db.512
llvm.x86.avx512.mask.pmovs.db.mem.128
llvm.x86.avx512.mask.pmovs.db.mem.256
llvm.x86.avx512.mask.pmovs.db.mem.512
llvm.x86.avx512.mask.pmovs.dw.128
llvm.x86.avx512.mask.pmovs.dw.256
llvm.x86.avx512.mask.pmovs.dw.512
llvm.x86.avx512.mask.pmovs.dw.mem.128
llvm.x86.avx512.mask.pmovs.dw.mem.256
llvm.x86.avx512.mask.pmovs.dw.mem.512
llvm.x86.avx512.mask.pmovs.qb.128
llvm.x86.avx512.mask.pmovs.qb.256
llvm.x86.avx512.mask.pmovs.qb.512
llvm.x86.avx512.mask.pmovs.qb.mem.128
llvm.x86.avx512.mask.pmovs.qb.mem.256
llvm.x86.avx512.mask.pmovs.qb.mem.512
llvm.x86.avx512.mask.pmovs.qd.128
llvm.x86.avx512.mask.pmovs.qd.256
llvm.x86.avx512.mask.pmovs.qd.512
llvm.x86.avx512.mask.pmovs.qd.mem.128
llvm.x86.avx512.mask.pmovs.qd.mem.256
llvm.x86.avx512.mask.pmovs.qd.mem.512
llvm.x86.avx512.mask.pmovs.qw.128
llvm.x86.avx512.mask.pmovs.qw.256
llvm.x86.avx512.mask.pmovs.qw.512
llvm.x86.avx512.mask.pmovs.qw.mem.128
llvm.x86.avx512.mask.pmovs.qw.mem.256
llvm.x86.avx512.mask.pmovs.qw.mem.512
llvm.x86.avx512.mask.pmovs.wb.128
llvm.x86.avx512.mask.pmovs.wb.256
llvm.x86.avx512.mask.pmovs.wb.512
llvm.x86.avx512.mask.pmovs.wb.mem.128
llvm.x86.avx512.mask.pmovs.wb.mem.256
llvm.x86.avx512.mask.pmovs.wb.mem.512
llvm.x86.avx512.mask.pmovus.db.128
llvm.x86.avx512.mask.pmovus.db.256
llvm.x86.avx512.mask.pmovus.db.512
llvm.x86.avx512.mask.pmovus.db.mem.128
llvm.x86.avx512.mask.pmovus.db.mem.256
llvm.x86.avx512.mask.pmovus.db.mem.512
llvm.x86.avx512.mask.pmovus.dw.128
llvm.x86.avx512.mask.pmovus.dw.256
llvm.x86.avx512.mask.pmovus.dw.512
llvm.x86.avx512.mask.pmovus.dw.mem.128
llvm.x86.avx512.mask.pmovus.dw.mem.256
llvm.x86.avx512.mask.pmovus.dw.mem.512
llvm.x86.avx512.mask.pmovus.qb.128
llvm.x86.avx512.mask.pmovus.qb.256
llvm.x86.avx512.mask.pmovus.qb.512
llvm.x86.avx512.mask.pmovus.qb.mem.128
llvm.x86.avx512.mask.pmovus.qb.mem.256
llvm.x86.avx512.mask.pmovus.qb.mem.512
llvm.x86.avx512.mask.pmovus.qd.128
llvm.x86.avx512.mask.pmovus.qd.256
llvm.x86.avx512.mask.pmovus.qd.512
llvm.x86.avx512.mask.pmovus.qd.mem.128
llvm.x86.avx512.mask.pmovus.qd.mem.256
llvm.x86.avx512.mask.pmovus.qd.mem.512
llvm.x86.avx512.mask.pmovus.qw.128
llvm.x86.avx512.mask.pmovus.qw.256
llvm.x86.avx512.mask.pmovus.qw.512
llvm.x86.avx512.mask.pmovus.qw.mem.128
llvm.x86.avx512.mask.pmovus.qw.mem.256
llvm.x86.avx512.mask.pmovus.qw.mem.512
llvm.x86.avx512.mask.pmovus.wb.128
llvm.x86.avx512.mask.pmovus.wb.256
llvm.x86.avx512.mask.pmovus.wb.512
llvm.x86.avx512.mask.pmovus.wb.mem.128
llvm.x86.avx512.mask.pmovus.wb.mem.256
llvm.x86.avx512.mask.pmovus.wb.mem.512
llvm.x86.avx512.mask.pmul.dq.128
llvm.x86.avx512.mask.pmul.dq.256
llvm.x86.avx512.mask.pmul.dq.512
llvm.x86.avx512.mask.pmul.hr.sw.128
llvm.x86.avx512.mask.pmul.hr.sw.256
llvm.x86.avx512.mask.pmul.hr.sw.512
llvm.x86.avx512.mask.pmulh.w.128
llvm.x86.avx512.mask.pmulh.w.256
llvm.x86.avx512.mask.pmulh.w.512
llvm.x86.avx512.mask.pmulhu.w.128
llvm.x86.avx512.mask.pmulhu.w.256
llvm.x86.avx512.mask.pmulhu.w.512
llvm.x86.avx512.mask.pmull.d.128
llvm.x86.avx512.mask.pmull.d.256
llvm.x86.avx512.mask.pmull.d.512
llvm.x86.avx512.mask.pmull.q.128
llvm.x86.avx512.mask.pmull.q.256
llvm.x86.avx512.mask.pmull.q.512
llvm.x86.avx512.mask.pmull.w.128
llvm.x86.avx512.mask.pmull.w.256
llvm.x86.avx512.mask.pmull.w.512
llvm.x86.avx512.mask.pmulu.dq.128
llvm.x86.avx512.mask.pmulu.dq.256
llvm.x86.avx512.mask.pmulu.dq.512
llvm.x86.avx512.mask.por.d.128
llvm.x86.avx512.mask.por.d.256
llvm.x86.avx512.mask.por.d.512
llvm.x86.avx512.mask.por.q.128
llvm.x86.avx512.mask.por.q.256
llvm.x86.avx512.mask.por.q.512
llvm.x86.avx512.mask.pshuf.b.128
llvm.x86.avx512.mask.pshuf.b.256
llvm.x86.avx512.mask.pshuf.b.512
llvm.x86.avx512.mask.psll.d
llvm.x86.avx512.mask.psll.q
llvm.x86.avx512.mask.pslli.d
llvm.x86.avx512.mask.pslli.q
llvm.x86.avx512.mask.psllv.d
llvm.x86.avx512.mask.psllv.q
llvm.x86.avx512.mask.psra.d
llvm.x86.avx512.mask.psra.q
llvm.x86.avx512.mask.psrai.d
llvm.x86.avx512.mask.psrai.q
llvm.x86.avx512.mask.psrav.d
llvm.x86.avx512.mask.psrav.q
llvm.x86.avx512.mask.psrl.d
llvm.x86.avx512.mask.psrl.q
llvm.x86.avx512.mask.psrli.d
llvm.x86.avx512.mask.psrli.q
llvm.x86.avx512.mask.psrlv.d
llvm.x86.avx512.mask.psrlv.q
llvm.x86.avx512.mask.psub.b.128
llvm.x86.avx512.mask.psub.b.256
llvm.x86.avx512.mask.psub.b.512
llvm.x86.avx512.mask.psub.d.128
llvm.x86.avx512.mask.psub.d.256
llvm.x86.avx512.mask.psub.d.512
llvm.x86.avx512.mask.psub.q.128
llvm.x86.avx512.mask.psub.q.256
llvm.x86.avx512.mask.psub.q.512
llvm.x86.avx512.mask.psub.w.128
llvm.x86.avx512.mask.psub.w.256
llvm.x86.avx512.mask.psub.w.512
llvm.x86.avx512.mask.psubs.b.128
llvm.x86.avx512.mask.psubs.b.256
llvm.x86.avx512.mask.psubs.b.512
llvm.x86.avx512.mask.psubs.w.128
llvm.x86.avx512.mask.psubs.w.256
llvm.x86.avx512.mask.psubs.w.512
llvm.x86.avx512.mask.psubus.b.128
llvm.x86.avx512.mask.psubus.b.256
llvm.x86.avx512.mask.psubus.b.512
llvm.x86.avx512.mask.psubus.w.128
llvm.x86.avx512.mask.psubus.w.256
llvm.x86.avx512.mask.psubus.w.512
llvm.x86.avx512.mask.ptestm.d.512
llvm.x86.avx512.mask.ptestm.q.512
llvm.x86.avx512.mask.punpckhb.w.128
llvm.x86.avx512.mask.punpckhb.w.256
llvm.x86.avx512.mask.punpckhb.w.512
llvm.x86.avx512.mask.punpckhd.q.128
llvm.x86.avx512.mask.punpckhd.q.256
llvm.x86.avx512.mask.punpckhd.q.512
llvm.x86.avx512.mask.punpckhqd.q.128
llvm.x86.avx512.mask.punpckhqd.q.256
llvm.x86.avx512.mask.punpckhqd.q.512
llvm.x86.avx512.mask.punpckhw.d.128
llvm.x86.avx512.mask.punpckhw.d.256
llvm.x86.avx512.mask.punpckhw.d.512
llvm.x86.avx512.mask.punpcklb.w.128
llvm.x86.avx512.mask.punpcklb.w.256
llvm.x86.avx512.mask.punpcklb.w.512
llvm.x86.avx512.mask.punpckld.q.128
llvm.x86.avx512.mask.punpckld.q.256
llvm.x86.avx512.mask.punpckld.q.512
llvm.x86.avx512.mask.punpcklqd.q.128
llvm.x86.avx512.mask.punpcklqd.q.256
llvm.x86.avx512.mask.punpcklqd.q.512
llvm.x86.avx512.mask.punpcklw.d.128
llvm.x86.avx512.mask.punpcklw.d.256
llvm.x86.avx512.mask.punpcklw.d.512
llvm.x86.avx512.mask.pxor.d.128
llvm.x86.avx512.mask.pxor.d.256
llvm.x86.avx512.mask.pxor.d.512
llvm.x86.avx512.mask.pxor.q.128
llvm.x86.avx512.mask.pxor.q.256
llvm.x86.avx512.mask.pxor.q.512
llvm.x86.avx512.mask.range.pd.128
llvm.x86.avx512.mask.range.pd.256
llvm.x86.avx512.mask.range.pd.512
llvm.x86.avx512.mask.range.ps.128
llvm.x86.avx512.mask.range.ps.256
llvm.x86.avx512.mask.range.ps.512
llvm.x86.avx512.mask.range.sd
llvm.x86.avx512.mask.range.ss
llvm.x86.avx512.mask.reduce.pd.128
llvm.x86.avx512.mask.reduce.pd.256
llvm.x86.avx512.mask.reduce.pd.512
llvm.x86.avx512.mask.reduce.ps.128
llvm.x86.avx512.mask.reduce.ps.256
llvm.x86.avx512.mask.reduce.ps.512
llvm.x86.avx512.mask.reduce.sd
llvm.x86.avx512.mask.reduce.ss
llvm.x86.avx512.mask.rndscale.pd.128
llvm.x86.avx512.mask.rndscale.pd.256
llvm.x86.avx512.mask.rndscale.pd.512
llvm.x86.avx512.mask.rndscale.ps.128
llvm.x86.avx512.mask.rndscale.ps.256
llvm.x86.avx512.mask.rndscale.ps.512
llvm.x86.avx512.mask.rndscale.sd
llvm.x86.avx512.mask.rndscale.ss
llvm.x86.avx512.mask.scalef.pd.128
llvm.x86.avx512.mask.scalef.pd.256
llvm.x86.avx512.mask.scalef.pd.512
llvm.x86.avx512.mask.scalef.ps.128
llvm.x86.avx512.mask.scalef.ps.256
llvm.x86.avx512.mask.scalef.ps.512
llvm.x86.avx512.mask.scalef.sd
llvm.x86.avx512.mask.scalef.ss
llvm.x86.avx512.mask.sqrt.pd.128
llvm.x86.avx512.mask.sqrt.pd.256
llvm.x86.avx512.mask.sqrt.pd.512
llvm.x86.avx512.mask.sqrt.ps.128
llvm.x86.avx512.mask.sqrt.ps.256
llvm.x86.avx512.mask.sqrt.ps.512
llvm.x86.avx512.mask.store.pd.512
llvm.x86.avx512.mask.store.ps.512
llvm.x86.avx512.mask.store.ss
llvm.x86.avx512.mask.storeu.d.512
llvm.x86.avx512.mask.storeu.pd.512
llvm.x86.avx512.mask.storeu.ps.512
llvm.x86.avx512.mask.storeu.q.512
llvm.x86.avx512.mask.sub.pd.128
llvm.x86.avx512.mask.sub.pd.256
llvm.x86.avx512.mask.sub.pd.512
llvm.x86.avx512.mask.sub.ps.128
llvm.x86.avx512.mask.sub.ps.256
llvm.x86.avx512.mask.sub.ps.512
llvm.x86.avx512.mask.sub.sd.round
llvm.x86.avx512.mask.sub.ss.round
llvm.x86.avx512.mask.ucmp.b.128
llvm.x86.avx512.mask.ucmp.b.256
llvm.x86.avx512.mask.ucmp.b.512
llvm.x86.avx512.mask.ucmp.d.128
llvm.x86.avx512.mask.ucmp.d.256
llvm.x86.avx512.mask.ucmp.d.512
llvm.x86.avx512.mask.ucmp.q.128
llvm.x86.avx512.mask.ucmp.q.256
llvm.x86.avx512.mask.ucmp.q.512
llvm.x86.avx512.mask.ucmp.w.128
llvm.x86.avx512.mask.ucmp.w.256
llvm.x86.avx512.mask.ucmp.w.512
llvm.x86.avx512.mask.unpckh.pd.128
llvm.x86.avx512.mask.unpckh.pd.256
llvm.x86.avx512.mask.unpckh.pd.512
llvm.x86.avx512.mask.unpckh.ps.128
llvm.x86.avx512.mask.unpckh.ps.256
llvm.x86.avx512.mask.unpckh.ps.512
llvm.x86.avx512.mask.unpckl.pd.128
llvm.x86.avx512.mask.unpckl.pd.256
llvm.x86.avx512.mask.unpckl.pd.512
llvm.x86.avx512.mask.unpckl.ps.128
llvm.x86.avx512.mask.unpckl.ps.256
llvm.x86.avx512.mask.unpckl.ps.512
llvm.x86.avx512.mask.valign.d.512
llvm.x86.avx512.mask.valign.q.512
llvm.x86.avx512.mask.vcvtph2ps.512
llvm.x86.avx512.mask.vcvtps2ph.512
llvm.x86.avx512.mask.vextractf32x4.512
llvm.x86.avx512.mask.vextractf64x4.512
llvm.x86.avx512.mask.vextracti32x4.512
llvm.x86.avx512.mask.vextracti64x4.512
llvm.x86.avx512.mask.vfmadd.pd.128
llvm.x86.avx512.mask.vfmadd.pd.256
llvm.x86.avx512.mask.vfmadd.pd.512
llvm.x86.avx512.mask.vfmadd.ps.128
llvm.x86.avx512.mask.vfmadd.ps.256
llvm.x86.avx512.mask.vfmadd.ps.512
llvm.x86.avx512.mask.vfmaddsub.pd.128
llvm.x86.avx512.mask.vfmaddsub.pd.256
llvm.x86.avx512.mask.vfmaddsub.pd.512
llvm.x86.avx512.mask.vfmaddsub.ps.128
llvm.x86.avx512.mask.vfmaddsub.ps.256
llvm.x86.avx512.mask.vfmaddsub.ps.512
llvm.x86.avx512.mask.vfnmadd.pd.128
llvm.x86.avx512.mask.vfnmadd.pd.256
llvm.x86.avx512.mask.vfnmadd.pd.512
llvm.x86.avx512.mask.vfnmadd.ps.128
llvm.x86.avx512.mask.vfnmadd.ps.256
llvm.x86.avx512.mask.vfnmadd.ps.512
llvm.x86.avx512.mask.vfnmsub.pd.128
llvm.x86.avx512.mask.vfnmsub.pd.256
llvm.x86.avx512.mask.vfnmsub.pd.512
llvm.x86.avx512.mask.vfnmsub.ps.128
llvm.x86.avx512.mask.vfnmsub.ps.256
llvm.x86.avx512.mask.vfnmsub.ps.512
llvm.x86.avx512.mask.vpermi2var.d.128
llvm.x86.avx512.mask.vpermi2var.d.256
llvm.x86.avx512.mask.vpermi2var.d.512
llvm.x86.avx512.mask.vpermi2var.hi.128
llvm.x86.avx512.mask.vpermi2var.hi.256
llvm.x86.avx512.mask.vpermi2var.hi.512
llvm.x86.avx512.mask.vpermi2var.pd.128
llvm.x86.avx512.mask.vpermi2var.pd.256
llvm.x86.avx512.mask.vpermi2var.pd.512
llvm.x86.avx512.mask.vpermi2var.ps.128
llvm.x86.avx512.mask.vpermi2var.ps.256
llvm.x86.avx512.mask.vpermi2var.ps.512
llvm.x86.avx512.mask.vpermi2var.q.128
llvm.x86.avx512.mask.vpermi2var.q.256
llvm.x86.avx512.mask.vpermi2var.q.512
llvm.x86.avx512.mask.vpermt2var.d.128
llvm.x86.avx512.mask.vpermt2var.d.256
llvm.x86.avx512.mask.vpermt2var.d.512
llvm.x86.avx512.mask.vpermt2var.hi.128
llvm.x86.avx512.mask.vpermt2var.hi.256
llvm.x86.avx512.mask.vpermt2var.hi.512
llvm.x86.avx512.mask.vpermt2var.pd.128
llvm.x86.avx512.mask.vpermt2var.pd.256
llvm.x86.avx512.mask.vpermt2var.pd.512
llvm.x86.avx512.mask.vpermt2var.ps.128
llvm.x86.avx512.mask.vpermt2var.ps.256
llvm.x86.avx512.mask.vpermt2var.ps.512
llvm.x86.avx512.mask.vpermt2var.q.128
llvm.x86.avx512.mask.vpermt2var.q.256
llvm.x86.avx512.mask.vpermt2var.q.512
llvm.x86.avx512.mask.xor.pd.128
llvm.x86.avx512.mask.xor.pd.256
llvm.x86.avx512.mask.xor.pd.512
llvm.x86.avx512.mask.xor.ps.128
llvm.x86.avx512.mask.xor.ps.256
llvm.x86.avx512.mask.xor.ps.512
llvm.x86.avx512.mask3.vfmadd.pd.128
llvm.x86.avx512.mask3.vfmadd.pd.256
llvm.x86.avx512.mask3.vfmadd.pd.512
llvm.x86.avx512.mask3.vfmadd.ps.128
llvm.x86.avx512.mask3.vfmadd.ps.256
llvm.x86.avx512.mask3.vfmadd.ps.512
llvm.x86.avx512.mask3.vfmaddsub.pd.128
llvm.x86.avx512.mask3.vfmaddsub.pd.256
llvm.x86.avx512.mask3.vfmaddsub.pd.512
llvm.x86.avx512.mask3.vfmaddsub.ps.128
llvm.x86.avx512.mask3.vfmaddsub.ps.256
llvm.x86.avx512.mask3.vfmaddsub.ps.512
llvm.x86.avx512.mask3.vfmsub.pd.128
llvm.x86.avx512.mask3.vfmsub.pd.256
llvm.x86.avx512.mask3.vfmsub.pd.512
llvm.x86.avx512.mask3.vfmsub.ps.128
llvm.x86.avx512.mask3.vfmsub.ps.256
llvm.x86.avx512.mask3.vfmsub.ps.512
llvm.x86.avx512.mask3.vfmsubadd.pd.128
llvm.x86.avx512.mask3.vfmsubadd.pd.256
llvm.x86.avx512.mask3.vfmsubadd.pd.512
llvm.x86.avx512.mask3.vfmsubadd.ps.128
llvm.x86.avx512.mask3.vfmsubadd.ps.256
llvm.x86.avx512.mask3.vfmsubadd.ps.512
llvm.x86.avx512.mask3.vfnmsub.pd.128
llvm.x86.avx512.mask3.vfnmsub.pd.256
llvm.x86.avx512.mask3.vfnmsub.pd.512
llvm.x86.avx512.mask3.vfnmsub.ps.128
llvm.x86.avx512.mask3.vfnmsub.ps.256
llvm.x86.avx512.mask3.vfnmsub.ps.512
llvm.x86.avx512.maskz.vfmadd.pd.128
llvm.x86.avx512.maskz.vfmadd.pd.256
llvm.x86.avx512.maskz.vfmadd.pd.512
llvm.x86.avx512.maskz.vfmadd.ps.128
llvm.x86.avx512.maskz.vfmadd.ps.256
llvm.x86.avx512.maskz.vfmadd.ps.512
llvm.x86.avx512.maskz.vfmaddsub.pd.128
llvm.x86.avx512.maskz.vfmaddsub.pd.256
llvm.x86.avx512.maskz.vfmaddsub.pd.512
llvm.x86.avx512.maskz.vfmaddsub.ps.128
llvm.x86.avx512.maskz.vfmaddsub.ps.256
llvm.x86.avx512.maskz.vfmaddsub.ps.512
llvm.x86.avx512.maskz.vpermt2var.d.128
llvm.x86.avx512.maskz.vpermt2var.d.256
llvm.x86.avx512.maskz.vpermt2var.d.512
llvm.x86.avx512.maskz.vpermt2var.hi.128
llvm.x86.avx512.maskz.vpermt2var.hi.256
llvm.x86.avx512.maskz.vpermt2var.hi.512
llvm.x86.avx512.maskz.vpermt2var.pd.128
llvm.x86.avx512.maskz.vpermt2var.pd.256
llvm.x86.avx512.maskz.vpermt2var.pd.512
llvm.x86.avx512.maskz.vpermt2var.ps.128
llvm.x86.avx512.maskz.vpermt2var.ps.256
llvm.x86.avx512.maskz.vpermt2var.ps.512
llvm.x86.avx512.maskz.vpermt2var.q.128
llvm.x86.avx512.maskz.vpermt2var.q.256
llvm.x86.avx512.maskz.vpermt2var.q.512
llvm.x86.avx512.movntdqa
llvm.x86.avx512.pbroadcastd.512
llvm.x86.avx512.pbroadcastd.i32.512
llvm.x86.avx512.pbroadcastq.512
llvm.x86.avx512.pbroadcastq.i64.512
llvm.x86.avx512.pmovzxbd
llvm.x86.avx512.pmovzxbq
llvm.x86.avx512.pmovzxdq
llvm.x86.avx512.pmovzxwd
llvm.x86.avx512.pmovzxwq
llvm.x86.avx512.rcp14.pd.512
llvm.x86.avx512.rcp14.ps.512
llvm.x86.avx512.rcp14.sd
llvm.x86.avx512.rcp14.ss
llvm.x86.avx512.rcp28.pd
llvm.x86.avx512.rcp28.ps
llvm.x86.avx512.rcp28.sd
llvm.x86.avx512.rcp28.ss
llvm.x86.avx512.rsqrt14.pd.512
llvm.x86.avx512.rsqrt14.ps.512
llvm.x86.avx512.rsqrt14.sd
llvm.x86.avx512.rsqrt14.ss
llvm.x86.avx512.rsqrt28.pd
llvm.x86.avx512.rsqrt28.ps
llvm.x86.avx512.rsqrt28.sd
llvm.x86.avx512.rsqrt28.ss
llvm.x86.avx512.scatter.dpd.512
llvm.x86.avx512.scatter.dpi.512
llvm.x86.avx512.scatter.dpq.512
llvm.x86.avx512.scatter.dps.512
llvm.x86.avx512.scatter.qpd.512
llvm.x86.avx512.scatter.qpi.512
llvm.x86.avx512.scatter.qpq.512
llvm.x86.avx512.scatter.qps.512
llvm.x86.avx512.scatterdiv2.df
llvm.x86.avx512.scatterdiv2.di
llvm.x86.avx512.scatterdiv4.df
llvm.x86.avx512.scatterdiv4.di
llvm.x86.avx512.scatterdiv4.sf
llvm.x86.avx512.scatterdiv4.si
llvm.x86.avx512.scatterdiv8.sf
llvm.x86.avx512.scatterdiv8.si
llvm.x86.avx512.scatterpf.dpd.512
llvm.x86.avx512.scatterpf.dps.512
llvm.x86.avx512.scatterpf.qpd.512
llvm.x86.avx512.scatterpf.qps.512
llvm.x86.avx512.scattersiv2.df
llvm.x86.avx512.scattersiv2.di
llvm.x86.avx512.scattersiv4.df
llvm.x86.avx512.scattersiv4.di
llvm.x86.avx512.scattersiv4.sf
llvm.x86.avx512.scattersiv4.si
llvm.x86.avx512.scattersiv8.sf
llvm.x86.avx512.scattersiv8.si
llvm.x86.avx512.sqrt.sd
llvm.x86.avx512.sqrt.ss
llvm.x86.avx512.vbroadcast.sd.512
llvm.x86.avx512.vbroadcast.sd.pd.512
llvm.x86.avx512.vbroadcast.ss.512
llvm.x86.avx512.vbroadcast.ss.ps.512
llvm.x86.bmi.bextr.32
llvm.x86.bmi.bextr.64
llvm.x86.bmi.bzhi.32
llvm.x86.bmi.bzhi.64
llvm.x86.bmi.pdep.32
llvm.x86.bmi.pdep.64
llvm.x86.bmi.pext.32
llvm.x86.bmi.pext.64
llvm.x86.fma.vfmadd.pd
llvm.x86.fma.vfmadd.pd.256
llvm.x86.fma.vfmadd.ps
llvm.x86.fma.vfmadd.ps.256
llvm.x86.fma.vfmadd.sd
llvm.x86.fma.vfmadd.ss
llvm.x86.fma.vfmaddsub.pd
llvm.x86.fma.vfmaddsub.pd.256
llvm.x86.fma.vfmaddsub.ps
llvm.x86.fma.vfmaddsub.ps.256
llvm.x86.fma.vfmsub.pd
llvm.x86.fma.vfmsub.pd.256
llvm.x86.fma.vfmsub.ps
llvm.x86.fma.vfmsub.ps.256
llvm.x86.fma.vfmsub.sd
llvm.x86.fma.vfmsub.ss
llvm.x86.fma.vfmsubadd.pd
llvm.x86.fma.vfmsubadd.pd.256
llvm.x86.fma.vfmsubadd.ps
llvm.x86.fma.vfmsubadd.ps.256
llvm.x86.fma.vfnmadd.pd
llvm.x86.fma.vfnmadd.pd.256
llvm.x86.fma.vfnmadd.ps
llvm.x86.fma.vfnmadd.ps.256
llvm.x86.fma.vfnmadd.sd
llvm.x86.fma.vfnmadd.ss
llvm.x86.fma.vfnmsub.pd
llvm.x86.fma.vfnmsub.pd.256
llvm.x86.fma.vfnmsub.ps
llvm.x86.fma.vfnmsub.ps.256
llvm.x86.fma.vfnmsub.sd
llvm.x86.fma.vfnmsub.ss
llvm.x86.fxrstor
llvm.x86.fxrstor64
llvm.x86.fxsave
llvm.x86.fxsave64
llvm.x86.int
llvm.x86.mmx.emms
llvm.x86.mmx.femms
llvm.x86.mmx.maskmovq
llvm.x86.mmx.movnt.dq
llvm.x86.mmx.packssdw
llvm.x86.mmx.packsswb
llvm.x86.mmx.packuswb
llvm.x86.mmx.padd.b
llvm.x86.mmx.padd.d
llvm.x86.mmx.padd.q
llvm.x86.mmx.padd.w
llvm.x86.mmx.padds.b
llvm.x86.mmx.padds.w
llvm.x86.mmx.paddus.b
llvm.x86.mmx.paddus.w
llvm.x86.mmx.palignr.b
llvm.x86.mmx.pand
llvm.x86.mmx.pandn
llvm.x86.mmx.pavg.b
llvm.x86.mmx.pavg.w
llvm.x86.mmx.pcmpeq.b
llvm.x86.mmx.pcmpeq.d
llvm.x86.mmx.pcmpeq.w
llvm.x86.mmx.pcmpgt.b
llvm.x86.mmx.pcmpgt.d
llvm.x86.mmx.pcmpgt.w
llvm.x86.mmx.pextr.w
llvm.x86.mmx.pinsr.w
llvm.x86.mmx.pmadd.wd
llvm.x86.mmx.pmaxs.w
llvm.x86.mmx.pmaxu.b
llvm.x86.mmx.pmins.w
llvm.x86.mmx.pminu.b
llvm.x86.mmx.pmovmskb
llvm.x86.mmx.pmulh.w
llvm.x86.mmx.pmulhu.w
llvm.x86.mmx.pmull.w
llvm.x86.mmx.pmulu.dq
llvm.x86.mmx.por
llvm.x86.mmx.psad.bw
llvm.x86.mmx.psll.d
llvm.x86.mmx.psll.q
llvm.x86.mmx.psll.w
llvm.x86.mmx.pslli.d
llvm.x86.mmx.pslli.q
llvm.x86.mmx.pslli.w
llvm.x86.mmx.psra.d
llvm.x86.mmx.psra.w
llvm.x86.mmx.psrai.d
llvm.x86.mmx.psrai.w
llvm.x86.mmx.psrl.d
llvm.x86.mmx.psrl.q
llvm.x86.mmx.psrl.w
llvm.x86.mmx.psrli.d
llvm.x86.mmx.psrli.q
llvm.x86.mmx.psrli.w
llvm.x86.mmx.psub.b
llvm.x86.mmx.psub.d
llvm.x86.mmx.psub.q
llvm.x86.mmx.psub.w
llvm.x86.mmx.psubs.b
llvm.x86.mmx.psubs.w
llvm.x86.mmx.psubus.b
llvm.x86.mmx.psubus.w
llvm.x86.mmx.punpckhbw
llvm.x86.mmx.punpckhdq
llvm.x86.mmx.punpckhwd
llvm.x86.mmx.punpcklbw
llvm.x86.mmx.punpckldq
llvm.x86.mmx.punpcklwd
llvm.x86.mmx.pxor
llvm.x86.pclmulqdq
llvm.x86.rdfsbase.32
llvm.x86.rdfsbase.64
llvm.x86.rdgsbase.32
llvm.x86.rdgsbase.64
llvm.x86.rdpmc
llvm.x86.rdrand.16
llvm.x86.rdrand.32
llvm.x86.rdrand.64
llvm.x86.rdseed.16
llvm.x86.rdseed.32
llvm.x86.rdseed.64
llvm.x86.rdtsc
llvm.x86.rdtscp
llvm.x86.seh.lsda
llvm.x86.seh.recoverfp
llvm.x86.seh.restoreframe
llvm.x86.sha1msg1
llvm.x86.sha1msg2
llvm.x86.sha1nexte
llvm.x86.sha1rnds4
llvm.x86.sha256msg1
llvm.x86.sha256msg2
llvm.x86.sha256rnds2
llvm.x86.sse.add.ss
llvm.x86.sse.cmp.ps
llvm.x86.sse.cmp.ss
llvm.x86.sse.comieq.ss
llvm.x86.sse.comige.ss
llvm.x86.sse.comigt.ss
llvm.x86.sse.comile.ss
llvm.x86.sse.comilt.ss
llvm.x86.sse.comineq.ss
llvm.x86.sse.cvtpd2pi
llvm.x86.sse.cvtpi2pd
llvm.x86.sse.cvtpi2ps
llvm.x86.sse.cvtps2pi
llvm.x86.sse.cvtsi2ss
llvm.x86.sse.cvtsi642ss
llvm.x86.sse.cvtss2si
llvm.x86.sse.cvtss2si64
llvm.x86.sse.cvttpd2pi
llvm.x86.sse.cvttps2pi
llvm.x86.sse.cvttss2si
llvm.x86.sse.cvttss2si64
llvm.x86.sse.div.ss
llvm.x86.sse.ldmxcsr
llvm.x86.sse.max.ps
llvm.x86.sse.max.ss
llvm.x86.sse.min.ps
llvm.x86.sse.min.ss
llvm.x86.sse.movmsk.ps
llvm.x86.sse.mul.ss
llvm.x86.sse.pshuf.w
llvm.x86.sse.rcp.ps
llvm.x86.sse.rcp.ss
llvm.x86.sse.rsqrt.ps
llvm.x86.sse.rsqrt.ss
llvm.x86.sse.sfence
llvm.x86.sse.sqrt.ps
llvm.x86.sse.sqrt.ss
llvm.x86.sse.stmxcsr
llvm.x86.sse.storeu.ps
llvm.x86.sse.sub.ss
llvm.x86.sse.ucomieq.ss
llvm.x86.sse.ucomige.ss
llvm.x86.sse.ucomigt.ss
llvm.x86.sse.ucomile.ss
llvm.x86.sse.ucomilt.ss
llvm.x86.sse.ucomineq.ss
llvm.x86.sse2.add.sd
llvm.x86.sse2.clflush
llvm.x86.sse2.cmp.pd
llvm.x86.sse2.cmp.sd
llvm.x86.sse2.comieq.sd
llvm.x86.sse2.comige.sd
llvm.x86.sse2.comigt.sd
llvm.x86.sse2.comile.sd
llvm.x86.sse2.comilt.sd
llvm.x86.sse2.comineq.sd
llvm.x86.sse2.cvtdq2pd
llvm.x86.sse2.cvtdq2ps
llvm.x86.sse2.cvtpd2dq
llvm.x86.sse2.cvtpd2ps
llvm.x86.sse2.cvtps2dq
llvm.x86.sse2.cvtps2pd
llvm.x86.sse2.cvtsd2si
llvm.x86.sse2.cvtsd2si64
llvm.x86.sse2.cvtsd2ss
llvm.x86.sse2.cvtsi2sd
llvm.x86.sse2.cvtsi642sd
llvm.x86.sse2.cvtss2sd
llvm.x86.sse2.cvttpd2dq
llvm.x86.sse2.cvttps2dq
llvm.x86.sse2.cvttsd2si
llvm.x86.sse2.cvttsd2si64
llvm.x86.sse2.div.sd
llvm.x86.sse2.lfence
llvm.x86.sse2.maskmov.dqu
llvm.x86.sse2.max.pd
llvm.x86.sse2.max.sd
llvm.x86.sse2.mfence
llvm.x86.sse2.min.pd
llvm.x86.sse2.min.sd
llvm.x86.sse2.movmsk.pd
llvm.x86.sse2.mul.sd
llvm.x86.sse2.packssdw.128
llvm.x86.sse2.packsswb.128
llvm.x86.sse2.packuswb.128
llvm.x86.sse2.padds.b
llvm.x86.sse2.padds.w
llvm.x86.sse2.paddus.b
llvm.x86.sse2.paddus.w
llvm.x86.sse2.pause
llvm.x86.sse2.pavg.b
llvm.x86.sse2.pavg.w
llvm.x86.sse2.pmadd.wd
llvm.x86.sse2.pmaxs.w
llvm.x86.sse2.pmaxu.b
llvm.x86.sse2.pmins.w
llvm.x86.sse2.pminu.b
llvm.x86.sse2.pmovmskb.128
llvm.x86.sse2.pmulh.w
llvm.x86.sse2.pmulhu.w
llvm.x86.sse2.pmulu.dq
llvm.x86.sse2.psad.bw
llvm.x86.sse2.pshuf.d
llvm.x86.sse2.pshufh.w
llvm.x86.sse2.pshufl.w
llvm.x86.sse2.psll.d
llvm.x86.sse2.psll.q
llvm.x86.sse2.psll.w
llvm.x86.sse2.pslli.d
llvm.x86.sse2.pslli.q
llvm.x86.sse2.pslli.w
llvm.x86.sse2.psra.d
llvm.x86.sse2.psra.w
llvm.x86.sse2.psrai.d
llvm.x86.sse2.psrai.w
llvm.x86.sse2.psrl.d
llvm.x86.sse2.psrl.q
llvm.x86.sse2.psrl.w
llvm.x86.sse2.psrli.d
llvm.x86.sse2.psrli.q
llvm.x86.sse2.psrli.w
llvm.x86.sse2.psubs.b
llvm.x86.sse2.psubs.w
llvm.x86.sse2.psubus.b
llvm.x86.sse2.psubus.w
llvm.x86.sse2.sqrt.pd
llvm.x86.sse2.sqrt.sd
llvm.x86.sse2.storel.dq
llvm.x86.sse2.storeu.dq
llvm.x86.sse2.storeu.pd
llvm.x86.sse2.sub.sd
llvm.x86.sse2.ucomieq.sd
llvm.x86.sse2.ucomige.sd
llvm.x86.sse2.ucomigt.sd
llvm.x86.sse2.ucomile.sd
llvm.x86.sse2.ucomilt.sd
llvm.x86.sse2.ucomineq.sd
llvm.x86.sse3.addsub.pd
llvm.x86.sse3.addsub.ps
llvm.x86.sse3.hadd.pd
llvm.x86.sse3.hadd.ps
llvm.x86.sse3.hsub.pd
llvm.x86.sse3.hsub.ps
llvm.x86.sse3.ldu.dq
llvm.x86.sse3.monitor
llvm.x86.sse3.mwait
llvm.x86.sse41.blendvpd
llvm.x86.sse41.blendvps
llvm.x86.sse41.dppd
llvm.x86.sse41.dpps
llvm.x86.sse41.extractps
llvm.x86.sse41.insertps
llvm.x86.sse41.movntdqa
llvm.x86.sse41.mpsadbw
llvm.x86.sse41.packusdw
llvm.x86.sse41.pblendvb
llvm.x86.sse41.pextrb
llvm.x86.sse41.pextrd
llvm.x86.sse41.pextrq
llvm.x86.sse41.phminposuw
llvm.x86.sse41.pmaxsb
llvm.x86.sse41.pmaxsd
llvm.x86.sse41.pmaxud
llvm.x86.sse41.pmaxuw
llvm.x86.sse41.pminsb
llvm.x86.sse41.pminsd
llvm.x86.sse41.pminud
llvm.x86.sse41.pminuw
llvm.x86.sse41.pmovsxbd
llvm.x86.sse41.pmovsxbq
llvm.x86.sse41.pmovsxbw
llvm.x86.sse41.pmovsxdq
llvm.x86.sse41.pmovsxwd
llvm.x86.sse41.pmovsxwq
llvm.x86.sse41.pmovzxbd
llvm.x86.sse41.pmovzxbq
llvm.x86.sse41.pmovzxbw
llvm.x86.sse41.pmovzxdq
llvm.x86.sse41.pmovzxwd
llvm.x86.sse41.pmovzxwq
llvm.x86.sse41.pmuldq
llvm.x86.sse41.ptestc
llvm.x86.sse41.ptestnzc
llvm.x86.sse41.ptestz
llvm.x86.sse41.round.pd
llvm.x86.sse41.round.ps
llvm.x86.sse41.round.sd
llvm.x86.sse41.round.ss
llvm.x86.sse42.crc32.32.16
llvm.x86.sse42.crc32.32.32
llvm.x86.sse42.crc32.32.8
llvm.x86.sse42.crc32.64.64
llvm.x86.sse42.pcmpestri128
llvm.x86.sse42.pcmpestria128
llvm.x86.sse42.pcmpestric128
llvm.x86.sse42.pcmpestrio128
llvm.x86.sse42.pcmpestris128
llvm.x86.sse42.pcmpestriz128
llvm.x86.sse42.pcmpestrm128
llvm.x86.sse42.pcmpistri128
llvm.x86.sse42.pcmpistria128
llvm.x86.sse42.pcmpistric128
llvm.x86.sse42.pcmpistrio128
llvm.x86.sse42.pcmpistris128
llvm.x86.sse42.pcmpistriz128
llvm.x86.sse42.pcmpistrm128
llvm.x86.sse4a.extrq
llvm.x86.sse4a.extrqi
llvm.x86.sse4a.insertq
llvm.x86.sse4a.insertqi
llvm.x86.sse4a.movnt.sd
llvm.x86.sse4a.movnt.ss
llvm.x86.ssse3.pabs.b
llvm.x86.ssse3.pabs.b.128
llvm.x86.ssse3.pabs.d
llvm.x86.ssse3.pabs.d.128
llvm.x86.ssse3.pabs.w
llvm.x86.ssse3.pabs.w.128
llvm.x86.ssse3.phadd.d
llvm.x86.ssse3.phadd.d.128
llvm.x86.ssse3.phadd.sw
llvm.x86.ssse3.phadd.sw.128
llvm.x86.ssse3.phadd.w
llvm.x86.ssse3.phadd.w.128
llvm.x86.ssse3.phsub.d
llvm.x86.ssse3.phsub.d.128
llvm.x86.ssse3.phsub.sw
llvm.x86.ssse3.phsub.sw.128
llvm.x86.ssse3.phsub.w
llvm.x86.ssse3.phsub.w.128
llvm.x86.ssse3.pmadd.ub.sw
llvm.x86.ssse3.pmadd.ub.sw.128
llvm.x86.ssse3.pmul.hr.sw
llvm.x86.ssse3.pmul.hr.sw.128
llvm.x86.ssse3.pshuf.b
llvm.x86.ssse3.pshuf.b.128
llvm.x86.ssse3.psign.b
llvm.x86.ssse3.psign.b.128
llvm.x86.ssse3.psign.d
llvm.x86.ssse3.psign.d.128
llvm.x86.ssse3.psign.w
llvm.x86.ssse3.psign.w.128
llvm.x86.subborrow.u32
llvm.x86.subborrow.u64
llvm.x86.tbm.bextri.u32
llvm.x86.tbm.bextri.u64
llvm.x86.vcvtph2ps.128
llvm.x86.vcvtph2ps.256
llvm.x86.vcvtps2ph.128
llvm.x86.vcvtps2ph.256
llvm.x86.wrfsbase.32
llvm.x86.wrfsbase.64
llvm.x86.wrgsbase.32
llvm.x86.wrgsbase.64
llvm.x86.xabort
llvm.x86.xbegin
llvm.x86.xend
llvm.x86.xop.vfrcz.pd
llvm.x86.xop.vfrcz.pd.256
llvm.x86.xop.vfrcz.ps
llvm.x86.xop.vfrcz.ps.256
llvm.x86.xop.vfrcz.sd
llvm.x86.xop.vfrcz.ss
llvm.x86.xop.vpcmov
llvm.x86.xop.vpcmov.256
llvm.x86.xop.vpcomb
llvm.x86.xop.vpcomd
llvm.x86.xop.vpcomq
llvm.x86.xop.vpcomub
llvm.x86.xop.vpcomud
llvm.x86.xop.vpcomuq
llvm.x86.xop.vpcomuw
llvm.x86.xop.vpcomw
llvm.x86.xop.vpermil2pd
llvm.x86.xop.vpermil2pd.256
llvm.x86.xop.vpermil2ps
llvm.x86.xop.vpermil2ps.256
llvm.x86.xop.vphaddbd
llvm.x86.xop.vphaddbq
llvm.x86.xop.vphaddbw
llvm.x86.xop.vphadddq
llvm.x86.xop.vphaddubd
llvm.x86.xop.vphaddubq
llvm.x86.xop.vphaddubw
llvm.x86.xop.vphaddudq
llvm.x86.xop.vphadduwd
llvm.x86.xop.vphadduwq
llvm.x86.xop.vphaddwd
llvm.x86.xop.vphaddwq
llvm.x86.xop.vphsubbw
llvm.x86.xop.vphsubdq
llvm.x86.xop.vphsubwd
llvm.x86.xop.vpmacsdd
llvm.x86.xop.vpmacsdqh
llvm.x86.xop.vpmacsdql
llvm.x86.xop.vpmacssdd
llvm.x86.xop.vpmacssdqh
llvm.x86.xop.vpmacssdql
llvm.x86.xop.vpmacsswd
llvm.x86.xop.vpmacssww
llvm.x86.xop.vpmacswd
llvm.x86.xop.vpmacsww
llvm.x86.xop.vpmadcsswd
llvm.x86.xop.vpmadcswd
llvm.x86.xop.vpperm
llvm.x86.xop.vprotb
llvm.x86.xop.vprotbi
llvm.x86.xop.vprotd
llvm.x86.xop.vprotdi
llvm.x86.xop.vprotq
llvm.x86.xop.vprotqi
llvm.x86.xop.vprotw
llvm.x86.xop.vprotwi
llvm.x86.xop.vpshab
llvm.x86.xop.vpshad
llvm.x86.xop.vpshaq
llvm.x86.xop.vpshaw
llvm.x86.xop.vpshlb
llvm.x86.xop.vpshld
llvm.x86.xop.vpshlq
llvm.x86.xop.vpshlw
llvm.x86.xtest
vararg
Print module to stderr
print-module
Print function to stderr
print-function
Print BB to stderr
print-bb
switch
indirectbr
invoke
resume
unreachable
cleanupret
catchendpad
catchret
catchpad
terminatepad
fadd
fsub
fmul
udiv
sdiv
fdiv
urem
srem
frem
alloca
store
cmpxchg
atomicrmw
fence
getelementptr
zext
sext
fptrunc
fpext
fptoui
fptosi
uitofp
sitofp
ptrtoint
addrspacecast
icmp
fcmp
select
call
lshr
ashr
va_arg
extractelement
insertelement
shufflevector
extractvalue
insertvalue
landingpad
cleanuppad
<Invalid operator> 
both values to select must have same type
vector select condition element type must be i1
selected values for vector select must be vectors
vector select requires selected vectors to have the same vector length as select condition
select condition must be i1 or <n x i1>
mallocsize
malloc
malloccall
free
tbaa
prof
fpmath
range
tbaa.struct
invariant.load
alias.scope
noalias
nontemporal
llvm.mem.parallel_loop_access
nonnull
dereferenceable
dereferenceable_or_null
make.implicit
error
warning
remark
note
debug-pass
Print PassManager debugging information
Disabled
disable debug output
Arguments
print pass arguments to pass to 'opt'
Structure
print pass structure before run()
Executions
print pass name before it is executed
Details
print pass details when it is executed
print-before
Print IR before specified passes
print-after
Print IR after specified passes
print-before-all
Print IR before each pass
print-after-all
Print IR after each pass
Releasing pass '
Running pass '
 on module '
 on 
function
basic block
value
Pass '
' is not initialized.
Verify if there is a pass dependency cycle.
Required Passes:
Error: Required pass not found! Possible causes:
- Pass misconfiguration (e.g.: missing macros)
- Corruption of the global PassRegistry
*** IR Dump Before 
 ***
*** IR Dump After 
Pass Arguments: 
 -- '
' is not preserving '
 -*- '
' is the last user of following pass instances.
 Free these instances
Executing Pass '
Made Modification '
 Freeing Pass '
' on BasicBlock '
'...
' on Function '
' on Module '
' on Region '
' on Loop '
' on Call Graph Nodes '
Required
Preserved
 Analyses:
 Uninitialized Pass
Error reading bitcode file: 
FunctionPass Manager
time-passes
Time each pass, printing elapsed time for each on exit
Module Pass Manager
ModulePass Manager
... Pass execution timing report ...
BasicBlock Pass Manager
BasicBlockPass Manager
Function Pass Manager
cl::location(x) specified more than once!
__unnamed_
llvm.module.flags
Dwarf Version
CodeView
PIC Level
Unnamed pass: implement Pass::getPassName()
Pass::print not implemented for pass: '
Two passes with the same argument (-
) attempted to be registered!
i128
f128
ppcf128
isVoid
glue
x86mmx
v2i1
v4i1
v8i1
v16i1
v32i1
v64i1
v1i8
v2i8
v4i8
v8i8
v16i8
v32i8
v64i8
v1i16
v2i16
v4i16
v8i16
v16i16
v32i16
v1i32
v2i32
v4i32
v8i32
v16i32
v1i64
v2i64
v4i64
v8i64
v16i64
v1i128
v1f32
v2f32
v2f16
v4f16
v8f16
v4f32
v8f32
v16f32
v1f64
v2f64
v4f64
v8f64
Metadata
Untyped
verify-debug-info
Broken module found, compilation aborted!
Broken function found, compilation aborted!
' does not contain an entry block!
Basic Block in function '
' does not have terminator!
Function context does not match Module context!
Functions may not have common linkage
# formal arguments must match # of arguments for function type!
Functions cannot return aggregate values!
Invalid struct return type!
Attribute after last parameter!
Attribute 'builtin' can only be applied to a callsite.
Calling convention does not support varargs or perfect forwarding!
Argument value does not match function argument type!
Function arguments must have first-class types!
Function takes metadata but isn't an intrinsic
unmaterialized function cannot have metadata
invalid linkage type for function declaration
function without a body cannot have metadata
Function declaration shouldn't have a personality routine
llvm intrinsics cannot be defined!
Entry block to function must not have predecessors!
blockaddress may not be used with the entry block!
Invalid user of intrinsic instruction!
Function is marked as dllimport, but not external.
More than one parameter has attribute nest!
More than one parameter has attribute returned!
Incompatible argument and return types for 'returned' attribute
Cannot have multiple 'sret' parameters!
Attribute 'sret' is not on first or second parameter!
Cannot have multiple 'swiftself' parameters!
Cannot have multiple 'swifterror' parameters!
inalloca isn't on the last parameter!
Attributes 'readnone and readonly' are incompatible!
Attributes 'noinline and alwaysinline' are incompatible!
Attribute 'optnone' requires 'noinline'!
Attributes 'optsize and optnone' are incompatible!
Attributes 'minsize and optnone' are incompatible!
Attribute 'jumptable' requires 'unnamed_addr'
Attributes 'byval', 'inalloca', 'nest', 'sret', 'nocapture', 'returned', 'swiftself', and 'swifterror' do not apply to return values!
Attributes 'byval', 'inalloca', 'inreg', 'nest', and 'sret' are incompatible!
Attributes 'inalloca and readonly' are incompatible!
Attributes 'sret and returned' are incompatible!
Attributes 'zeroext and signext' are incompatible!
Wrong types for attribute: 
Attributes 'byval' and 'inalloca' do not support unsized types!
Attribute 'byval' only applies to parameters with pointer type!
Attribute '
' only applies to functions!
' does not apply to function returns
' does not apply to functions!
!prof annotations should have exactly 2 operands
first operand should not be null
expected string with name of the !prof annotation
function_entry_count
first operand should be 'function_entry_count'
second operand should not be null
expected integer argument to function_entry_count
Invalid operand for global metadata!
Expected no forward declarations!
All nodes should be resolved!
location requires a valid scope
inlined-at should be a location
invalid expression
invalid tag
invalid subrange count
invalid pointer to member type
invalid scope
invalid base type
invalid file
invalid composite elements
invalid vtable holder
invalid reference flags
class/union requires a filename
invalid template params
invalid template parameter
invalid subroutine type ref
compile units must be distinct
invalid filename
invalid enum list
invalid enum type
invalid retained type list
invalid retained type
invalid subprogram list
invalid subprogram ref
invalid global variable list
invalid global variable ref
invalid imported entity list
invalid imported entity ref
invalid subroutine type
invalid containing type
invalid function
invalid subprogram declaration
invalid variable list
invalid local variable
!dbg attachment points at wrong subprogram for function
cannot have column info without line info
invalid local scope
invalid scope ref
anonymous module
invalid type ref
missing global variable name
invalid global varaible ref
invalid static data member declaration
local variable requires a valid scope
invalid scope for imported entity
invalid imported entity
Expected valid value
Unexpected metadata round-trip through values
function-local metadata used outside a function
function-local metadata not in basic block
function-local metadata used in wrong function
Basic Block does not have terminator!
PHI nodes must have at least one entry.  If the block is dead, the PHI should be removed!
PHINode should have one entry for each predecessor of its parent basic block!
PHI node has multiple entries for the same basic block with different incoming values!
PHI node entries do not match predecessors!
Instruction has bogus parent pointer!
Operand is null
Found return instr that returns non-void in Function of void return type!
Function return type does not match operand type of return inst!
Terminator found in the middle of a basic block!
Instruction not embedded in basic block!
Only PHI nodes may reference their own value!
Instruction has a name, but provides a void value!
Instruction returns a non-scalar type!
Invalid use of metadata!
Instruction referencing instruction not embedded in a basic block!
Use of instruction is not an instruction!
Instruction has null operand!
Instruction operands must be first-class values!
Cannot take the address of an intrinsic!
Cannot invoke an intrinsinc other than donothing or patchpoint
Referencing function in another module!
Referring to a basic block in another function!
Referring to an argument in another function!
Referencing global in another module!
Cannot take the address of an inline asm!
fpmath requires a floating point result!
fpmath takes one operand!
fpmath accuracy not a positive number!
invalid fpmath accuracy!
Ranges are only for loads, calls and invokes!
nonnull applies only to pointer types
nonnull applies only to load instructions, use attributes for calls or invokes
invalid !dbg metadata attachment
Instruction does not dominate all uses!
Invalid bitcast
Unfinished range!
It should have at least one range!
The lower limit must be an integer!
The upper limit must be an integer!
Range types must match instruction type!
Range must not be empty!
Intervals are overlapping
Intervals are not in order
Intervals are contiguous
Branch condition is not 'i1' type!
Switch constants must all be same type as switch value!
Duplicate integer as switch case
Indirectbr operand must have pointer type!
Indirectbr destinations must all have pointer type!
The unwind destination does not have an exception handling instruction!
Called function must be a pointer!
Called function is not pointer to function type!
Called function is not the same type as the call!
Called function requires more parameters than were provided!
Incorrect number of arguments passed to called function!
Call parameter type does not match function signature!
inalloca argument for call has mismatched alloca
swifterror argument for call has mismatched alloca
Attribute 'sret' cannot be used for vararg call arguments!
inalloca isn't on the last argument!
Function has metadata parameter but isn't an intrinsic
Intrinsic functions should never be defined!
Intrinsic has incorrect return type!
Intrinsic has incorrect argument type!
Intrinsic was not defined with variable arguments!
Callsite was not defined with variable arguments!
Intrinsic has too few arguments!
Intrinsic name not mangled correctly for type arguments! Should be: 
is_zero_undef argument of bit counting intrinsics must be a constant int
invalid llvm.dbg.declare intrinsic call 1
declare
alignment argument of memory intrinsics must be a constant int
alignment argument of memory intrinsics must be a power of 2
isvolatile argument of memory intrinsics must be a constant int
llvm.gcroot parameter #1 must be an alloca.
llvm.gcroot parameter #2 must be a constant.
llvm.gcroot parameter #1 must either be a pointer alloca, or argument #2 must be a non-null constant.
Enclosing function does not use GC.
llvm.init_trampoline parameter #2 must resolve to a function.
invalid arguments to llvm.prefetch
llvm.stackprotector parameter #2 must resolve to an alloca.
size argument of memory use markers must be a constant integer
llvm.invariant.end parameter #2 must be a constant integer
llvm.localescape used outside of entry block
multiple calls to llvm.localescape in one function
llvm.localescape only accepts static allocas
llvm.localrecover first argument must be function defined in this module
idx argument of llvm.localrecover must be a constant int
gc.statepoint support for inline assembly unimplemented
gc.result operand #1 must be from a statepoint
gc.result result type does not match wrapped callee
wrong number of arguments
gc relocate on unwind path incorrectly linked to the statepoint
safepoints should have unique landingpads
safepoint block should be well formed
gc relocate should be linked to a statepoint
gc relocate is incorrectly tied to the statepoint
gc.relocate operand #2 must be integer offset
gc.relocate operand #3 must be integer offset
gc.relocate: statepoint base index out of bounds
gc.relocate: statepoint derived index out of bounds
gc.statepoint: insufficient arguments
gc.statement: number of call arguments must be constant integer
gc.statepoint: mismatch in number of call arguments
gc.statepoint: number of transition arguments must be a constant integer
gc.statepoint: number of deoptimization arguments must be a constant integer
gc.relocate: statepoint base index doesn't fall within the 'gc parameters' section of the statepoint call
gc.relocate: statepoint derived index doesn't fall within the 'gc parameters' section of the statepoint call
gc.relocate: relocated value must be a gc pointer
gc.relocate: relocating a pointer shouldn't change its address space
invalid llvm.dbg.
 intrinsic address/value
 intrinsic variable
 intrinsic expression
llvm.dbg.
 intrinsic requires a !dbg attachment
mismatched subprogram between llvm.dbg.
 variable and !dbg attachment
gc.statepoint must read and write all memory to preserve reordering restrictions required by safepoint semantics
gc.statepoint ID must be a constant integer
gc.statepoint number of patchable bytes must be a constant integer
gc.statepoint number of patchable bytes must be positive
gc.statepoint callee must be of function pointer type
gc.statepoint number of arguments to underlying call must be constant integer
gc.statepoint number of arguments to underlying call must be positive
gc.statepoint mismatch in number of vararg call args
gc.statepoint doesn't support wrapping non-void vararg functions yet
gc.statepoint mismatch in number of call args
gc.statepoint flags must be constant integer
unknown flag used in gc.statepoint flags argument
gc.statepoint call argument does not match wrapped function type
gc.statepoint number of transition arguments must be constant integer
gc.statepoint number of transition arguments must be positive
gc.statepoint number of deoptimization arguments must be constant integer
gc.statepoint number of deoptimization arguments must be positive
gc.statepoint too few arguments according to length fields
illegal use of statepoint token
gc.result or gc.relocate are the only value usesof a gc.statepoint
gc.result connected to wrong gc.statepoint
gc.relocate connected to wrong gc.statepoint
CleanupReturnInst must unwind to an EH block which is not a landingpad.
The catchpad instruction should have a consistent result type inside a function.
CatchPadInst needs to be in a function with a personality.
CatchPadInst not the first non-PHI instruction in the block.
CatchPadInst must unwind to a CatchPadInst or a CatchEndPadInst.
EH pad cannot be in entry block.
Block containing LandingPadInst must be jumped to only by the unwind edge of an invoke.
EH pad must be jumped to via an unwind edge
TerminatePadInst needs to be in a function with a personality.
TerminatePadInst not the first non-PHI instruction in the block.
TerminatePadInst must unwind to an EH block which is not a landingpad.
CatchEndPadInst needs to be in a function with a personality.
CatchEndPadInst not the first non-PHI instruction in the block.
CatchEndPadInst must have no more than one CatchPadInst predecessor.
CatchEndPad must unwind to an EH block which is not a landingpad.
Both operands to a binary operator are not of the same type!
Integer arithmetic operators only work with integral types!
Integer arithmetic operators must have same type for operands and result!
Floating-point arithmetic operators only work with floating-point types!
Floating-point arithmetic operators must have same type for operands and result!
Logical operators only work with integral types!
Logical operators must have same type for operands and result!
Shifts only work with integral types!
Shift return type must be same as operands!
Allocation instruction pointer not in the generic address space!
Cannot allocate unsized type
Alloca array size must have integer type
huge alignment values are unsupported
Load operand must be a pointer.
Load cannot have Release ordering
Atomic load must specify explicit alignment
atomic load operand must have integer type!
atomic load operand must be power-of-two byte-sized integer
Non-atomic load cannot have SynchronizationScope specified
Store operand must be a pointer.
Stored value type does not match pointer operand type!
Store cannot have Acquire ordering
Atomic store must specify explicit alignment
atomic store operand must have integer type!
atomic store operand must be power-of-two byte-sized integer
Non-atomic store cannot have SynchronizationScope specified
GEP base pointer is not a vector or a vector of pointers
GEP into unsized type!
Invalid indices for GEP pointer type!
GEP is not of right type for indices!
Vector GEP result width doesn't match operand's
Invalid GEP index vector width
All GEP indices should be of integer type
fence instructions may only have acquire, release, acq_rel, or seq_cst ordering.
cmpxchg instructions must be atomic.
cmpxchg instructions cannot be unordered.
cmpxchg instructions be at least as constrained on success as fail
cmpxchg failure ordering cannot include release semantics
First cmpxchg operand must be a pointer.
cmpxchg operand must have integer type!
cmpxchg operand must be power-of-two byte-sized integer
Expected value type does not match pointer operand type!
atomicrmw instructions must be atomic.
atomicrmw instructions cannot be unordered.
First atomicrmw operand must be a pointer.
atomicrmw operand must have integer type!
atomicrmw operand must be power-of-two byte-sized integer
Argument value type does not match pointer operand type!
Invalid binary operation!
Trunc only operates on integer
Trunc only produces integer
trunc source and destination must both be a vector or neither
DestTy too big for Trunc
ZExt only operates on integer
ZExt only produces an integer
zext source and destination must both be a vector or neither
Type too small for ZExt
SExt only operates on integer
SExt only produces an integer
sext source and destination must both be a vector or neither
Type too small for SExt
FPToUI source and dest must both be vector or scalar
FPToUI source must be FP or FP vector
FPToUI result must be integer or integer vector
FPToUI source and dest vector length mismatch
FPToSI source and dest must both be vector or scalar
FPToSI source must be FP or FP vector
FPToSI result must be integer or integer vector
FPToSI source and dest vector length mismatch
UIToFP source and dest must both be vector or scalar
UIToFP source must be integer or integer vector
UIToFP result must be FP or FP vector
UIToFP source and dest vector length mismatch
SIToFP source and dest must both be vector or scalar
SIToFP source must be integer or integer vector
SIToFP result must be FP or FP vector
SIToFP source and dest vector length mismatch
FPTrunc only operates on FP
FPTrunc only produces an FP
fptrunc source and destination must both be a vector or neither
DestTy too big for FPTrunc
FPExt only operates on FP
FPExt only produces an FP
fpext source and destination must both be a vector or neither
DestTy too small for FPExt
PtrToInt source must be pointer
PtrToInt result must be integral
PtrToInt type mismatch
PtrToInt Vector width mismatch
IntToPtr source must be an integral
IntToPtr result must be a pointer
IntToPtr type mismatch
IntToPtr Vector width mismatch
AddrSpaceCast source must be a pointer
AddrSpaceCast result must be a pointer
AddrSpaceCast must be between different address spaces
AddrSpaceCast vector pointer number of elements mismatch
Both operands to ICmp instruction are not of the same type!
Invalid operand types for ICmp instruction
Invalid predicate in ICmp instruction!
Both operands to FCmp instruction are not of the same type!
Invalid operand types for FCmp instruction
Invalid predicate in FCmp instruction!
PHI nodes not grouped at top of basic block!
PHI node operands are not the same type as the result!
cannot use musttail call with inline asm
cannot guarantee tail call due to mismatched parameter counts
cannot guarantee tail call due to mismatched varargs
cannot guarantee tail call due to mismatched return types
cannot guarantee tail call due to mismatched parameter types
cannot guarantee tail call due to mismatched calling conv
cannot guarantee tail call due to mismatched ABI impacting function attributes
bitcast following musttail call must use the call
musttail call must be precede a ret with an optional bitcast
musttail call result must be returned
Invalid operands for select instruction!
Select values must have same type as select instruction!
User-defined operators should not live outside of a pass!
Invalid extractelement operands!
Invalid insertelement operands!
Invalid shufflevector operands!
Invalid ExtractValueInst operands!
Invalid InsertValueInst operands!
LandingPadInst needs at least one clause or to be a cleanup.
The landingpad instruction should have a consistent result type inside a function.
LandingPadInst needs to be in a function with a personality.
LandingPadInst not the first non-PHI instruction in the block.
Catch operand does not have pointer type!
Filter operand is not an array of constants!
The cleanuppad instruction should have a consistent result type inside a function.
CleanupPadInst needs to be in a function with a personality.
CleanupPadInst not the first non-PHI instruction in the block.
Global is external, but doesn't have external or weak linkage!
Only global variables can have appending linkage!
Only global arrays can have appending linkage!
Declaration may not be in a Comdat!
all indices passed to llvm.localrecover must be less than the number of arguments passed ot llvm.localescape in the parent function
Global variable initializer type does not match global variable type!
'common' global must have a zero initializer!
'common' global may not be marked constant!
'common' global may not be in a Comdat!
invalid linkage type for global declaration
llvm.global_ctors
llvm.global_dtors
invalid linkage for intrinsic global variable
wrong type for intrinsic global variable
llvm.used
llvm.compiler.used
wrong initalizer for intrinsic global variable
invalid llvm.used member
members of llvm.used must be named
Global is marked as dllimport, but not external
Alias should have private, internal, linkonce, weak, linkonce_odr, weak_odr, or external linkage!
Aliasee cannot be NULL!
Alias and aliasee types should match!
Aliasee should be either GlobalValue or ConstantExpr
Alias must point to a definition
Aliases cannot form a cycle
Alias cannot point to a weak alias
invalid compile unit
comdat global value has private linkage
invalid requirement on flag, flag is not present in module
invalid requirement on flag, flag does not have the required value
incorrect number of operands in module flag
invalid behavior operand in module flag (expected constant integer)
invalid behavior operand in module flag (unexpected constant)
invalid ID operand in module flag (expected metadata string)
invalid value for 'require' module flag (expected metadata pair)
invalid value for 'require' module flag (first value operand should be a string)
invalid value for 'append'-type module flag (expected a metadata node)
module flag identifiers must be unique (or of 'require' type)
llvm.ident
incorrect number of operands in llvm.ident metadata
invalid value for llvm.ident metadata entry operand(the operand should be a string)
piece is larger than or outside of variable
piece covers entire variable
unresolved type ref
Module Verifier
CallGraph Root is: 
<<null function: 0x
Call graph node for function: '
Call graph node <<null function>>
>>  #uses=
  CS<
> calls 
function '
external node
No call graph has been built!
CallGraph Construction
basiccg
max-cg-scc-iterations
CallGraph Pass Manager
Call Graph SCC Pass Manager
cgscc-passmgr
Maximum CGSCCPassMgr iterations on one SCC
Printing <null> Function
View call graph
view-callgraph
Print call graph to 'dot' file
dot-callgraph
callgraph
Call graph
enable-unsafe-globalsmodref-alias-results
Simple mod/ref analysis for globals
globalsmodref-aa
Inline Cost Analysis
inline-cost
Promote 'by reference' arguments to scalars
argpromotion
A No-Op Barrier Pass
barrier
Merge Duplicate Global Constants
constmerge
Dead Argument Elimination
deadargelim
Dead Argument Hacking (BUGPOINT USE ONLY; DO NOT USE)
deadarghaX0r
newret
oldret
Eliminate Available Externally Globals
elim-avail-extern
Deduce function attributes
functionattrs
Dead Global Elimination
globaldce
Global Variable Optimizer
globalopt
.body
newgv
.init
.val
notinit
isneg
isnull
malloc_cont
malloc_ret_null
free_it
next
Interprocedural constant propagation
ipconstprop
main
Inliner for always_inline functions
always-inline
Function Integration/Inlining
inline
inline-threshold
Control the amount of inlining to perform (default = 225)
inlinehint-threshold
Threshold for inlining functions with inline hint
inlinecold-threshold
Threshold for inlining functions with cold attribute
 should always be inlined (cost=always)
 should never be inlined (cost=never)
 too costly to inline (cost=
, threshold=
Not inlining. Cost of inlining 
 increases the cost of inlining 
 in other contexts
 can be inlined into 
 with cost=
 (threshold=
 will not be inlined into 
 inlined into 
internalize-public-api-file
A file containing list of symbol names to preserve
internalize-public-api-list
list
A list of symbol names to preserve
Internalize Global Symbols
internalize
WARNING: Internalize couldn't load file '
'! Continuing as if it's empty.
llvm.global.annotations
__stack_chk_fail
__stack_chk_guard
extract-blocks-file
A file containing list of basic blocks to not extract
Extract loops into new functions
loop-extract
Extract at most one loop into a new function
loop-extract-single
Extract Basic Blocks From Module (for bugpoint use)
extract-blocks
WARNING: BlockExtractor couldn't load file '
lowerbitsets-avoid-reuse
Try to avoid reuse of byte array addresses using aliases
offset 
 size 
 all-ones
Lower bitset metadata
lowerbitsets
llvm.bitsets
Second argument of llvm.bitset.test must be metadata string
All operands of llvm.bitsets metadata must have 3 elements
Bit set element must be a constant
Bit set element offset must be a constant
Bit set element offset must be an integer constant
bits_use
bits
mergefunc-sanity
How many functions in module could be used for MergeFunctions pass sanity check. '0' disables this check. Works only with '-debug' key.
Merge Functions
mergefunc
Partial Inliner
partial-inliner
vectorize-loops
Run the Loop vectorization passes
vectorize-slp
Run the SLP vectorization passes
vectorize-slp-aggressive
Run the BB vectorization passes
use-gvn-after-vectorization
Run GVN instead of Early CSE after vectorization passes
extra-vectorizer-passes
Run cleanup optimization passes after vectorization.
use-new-sroa
Enable the new, experimental SROA pass
reroll-loops
Run the loop rerolling pass
float-to-int
Run the float2int (float demotion) pass
combine-loads
Run the load combining pass
run-slp-after-loop-vectorization
Run the SLP vectorizer (and BB vectorizer) after the Loop vectorizer instead of before
use-cfl-aa
Enable the new, experimental CFL alias analysis
mlsm
Enable motion of merged load and store
enable-loopinterchange
Enable the new, experimental LoopInterchange Pass
enable-loop-distribute
Enable the new, experimental LoopDistribution Pass
enable-non-lto-gmr
Enable the GlobalsModRef AliasAnalysis outside of the LTO pipeline.
Remove unused exception handling info
prune-eh
Strip Unused Function Prototypes
strip-dead-prototypes
Strip all symbols from a module
strip
llvm.dbg
Strip all symbols, except dbg symbols, from a module
strip-nondebug
Strip all llvm.dbg.declare intrinsics
strip-debug-declare
Strip debug info for unused symbols
strip-dead-debug-info
Could not open input file: 
Parse IR
LLVM IR Parsing
phitmp
.sum
.cmp
Combine redundant instructions
.offs
.idx
addconv
diff.neg
fold
.masked
and.shrunk
.demorgan
bitfield
notlhs
notrhs
agx.sample_rate
blendv
thunk
.lobit
.mask
.unshifted
.trunc
sadd
sadd.result
sadd.overflow
umul
umul.value
storemerge
.sub
.unpack
suba
subc
rsqrt
mulsqrt
extract
extract.t
not.
xyzw
gep_offset_
.Elt
.lhs
.rhs
.elt
.extract
asan-kernel
Enable KernelAddressSanitizer instrumentation
asan-instrument-reads
instrument read instructions
asan-instrument-writes
instrument write instructions
asan-instrument-atomics
instrument atomic instructions (rmw, cmpxchg)
asan-always-slow-path
use instrumentation with slow path for all accesses
asan-max-ins-per-bb
maximal number of instructions to instrument in any given BB
asan-stack
Handle stack memory
asan-use-after-return
Check return-after-free
asan-globals
Handle global objects
asan-initialization-order
Handle C++ initializer order
asan-detect-invalid-pointer-pair
Instrument <, <=, >, >=, - with pointer operands
asan-realign-stack
Realign stack to the value of this flag (power of two)
asan-instrumentation-with-call-threshold
If the function being instrumented contains more than this number of memory accesses, use callbacks instead of inline checks (-1 means never use callbacks).
asan-memory-access-callback-prefix
Prefix for memory access callbacks
__asan_
asan-instrument-allocas
instrument dynamic allocas
asan-skip-promotable-allocas
Do not instrument promotable allocas
asan-mapping-scale
scale of asan shadow mapping
asan-opt
Optimize instrumentation
asan-opt-same-temp
Instrument the same temp just once
asan-opt-globals
Don't instrument scalar globals
asan-opt-stack
Don't instrument scalar stack variables
asan-check-lifetime
Use llvm.lifetime intrinsics to insert extra checks
asan-stack-dynamic-alloca
Use dynamic alloca to represent stack variables
asan-force-experiment
Force optimization experiment (for testing)
asan-debug
debug
asan-debug-stack
debug stack
asan-debug-func
Debug func
asan-debug-min
Debug min inst
asan-debug-max
Debug man inst
AddressSanitizer: detects use-after-free and out-of-bounds bugs.
asan
AddressSanitizerFunctionPass
llvm.asan.globals
asan.module_ctor
__asan_init
__asan_version_mismatch_check_v6
exp_
_noabort
__asan_report_
__asan_handle_no_return
__sanitizer_ptr_cmp
__sanitizer_ptr_sub
 load]
__asan_stack_malloc_
__asan_stack_free_
__asan_poison_stack_memory
__asan_unpoison_stack_memory
__asan_alloca_poison
__asan_allocas_unpoison
MyAlloca
__asan_option_detect_stack_use_after_return
__asan_gen_
AddressSanitizer: detects use-after-free and out-of-bounds bugs.ModulePass
asan-module
AddressSanitizerModule
__asan_before_dynamic_init
__asan_after_dynamic_init
__asan_register_globals
__asan_unregister_globals
__llvm
.CRT
__OBJC
__DATA
__objc_
__cfstring
__TEXT
__sancov_gen_
asan.module_dtor
bounds-checking-single-trap
Use one trap block per function
Run-time bounds checking
bounds-checking
trap
dfsan-preserve-alignment
respect alignment requirements provided by input IR
dfsan-abilist
File listing native ABI functions and how the pass treats them
dfsan-args-abi
Use the argument ABI rather than the TLS ABI
dfsan-combine-pointer-labels-on-load
Combine the label of the pointer with the label of the data when loading from memory.
dfsan-combine-pointer-labels-on-store
Combine the label of the pointer with the label of the data when storing in memory.
dfsan-debug-nonzero-labels
Insert calls to __dfsan_nonzero_label on observing a parameter, load or return with a nonzero label
DataFlowSanitizer: dynamic data flow analysis.
dfsan
unsupported triple
skip
__dfsan_arg_tls
__dfsan_retval_tls
__dfsan_union
dfsan_union
__dfsan_union_load
__dfsan_unimplemented
__dfsan_set_label
__dfsan_nonzero_label
__dfsan_vararg_wrapper
dfsw$
uninstrumented
<unknown type>
dfs$
.symver 
split-stack
functional
discard
custom
__dfsw_
dfst
labelva
labelreturn
default-gcov-version
402*
gcov-exit-block-before-body
Invalid -default-gcov-version: 
Insert instrumentation for GCOV profiling
insert-gcov-profiling
GCOV Profiler
gcno
oncg
llvm.gcov
__llvm_gcov_ctr
__llvm_gcov_init
entry
llvm_gcov_init
__llvm_gcda_edge_table
__llvm_gcov_global_state_pred
__llvm_gcov_indirect_counter_increment
__llvm_gcov_writeout
gcda
llvm_gcda_start_file
llvm_gcda_emit_function
llvm_gcda_emit_arcs
llvm_gcda_summary_info
llvm_gcda_end_file
__llvm_gcov_flush
invalid return type for __llvm_gcov_flush
exit
predecessor
pred
counters
counter
msan-track-origins
Track origins (allocation sites) of poisoned memory
msan-keep-going
keep going after reporting a UMR
msan-poison-stack
poison uninitialized stack variables
msan-poison-stack-with-call
poison uninitialized stack variables with a call
msan-poison-stack-pattern
poison uninitialized stack variables with the given patter
msan-poison-undef
poison undef temps
msan-handle-icmp
propagate shadow through ICmpEQ and ICmpNE
msan-handle-icmp-exact
exact handling of relational integer ICmp
msan-check-access-address
report accesses through a pointer which has poisoned shadow
msan-dump-strict-instructions
print out instructions with default strict semantics
msan-instrumentation-with-call-threshold
If the function being instrumented requires more than this number of checks and origin stores, use callbacks instead of inline checks (-1 means never use callbacks).
msan-check-constant-shadow
Insert checks for constant shadow values
MemorySanitizer: detects uninitialized reads.
msan
MemorySanitizer
unsupported architecture
unsupported operating system
__msan_track_origins
__msan_keep_going
msan.module_ctor
__msan_init
_msarg
_msarg_o
__msan_warning
__msan_warning_noreturn
__msan_maybe_warning_
__msan_maybe_store_origin_
__msan_set_alloca_origin4
__msan_poison_stack
__msan_chain_origin
__msan_memmove
__msan_memcpy
__msan_memset
__msan_retval_tls
__msan_retval_origin_tls
__msan_param_tls
__msan_param_origin_tls
__msan_va_arg_tls
__msan_va_arg_overflow_size_tls
__msan_origin_tls
_msret
ZZZ call 
ZZZ 
QQQ 
_msprop
msprop_mul_cst
----
nosanitize
_msld
_msprop_ptrtoint
_msprop_inttoptr
_msprop_icmp
_msprop_icmpslt
_msphi_s
_msphi_o
_msprop_vector_pack
_msprop_select
_mscmp
Frontend instrumentation-based coverage lowering.
instrprof
Frontend instrumentation-based coverage lowering
__llvm_coverage_mapping
pgocount
data
__DATA,__llvm_prf_names
__llvm_prf_names
__llvm_profile_
__DATA,__llvm_prf_cnts
__llvm_prf_cnts
__DATA,__llvm_prf_data
__llvm_prf_data
__DATA,__llvm_covmap
__llvm_covmap
__llvm_profile_register_functions
__llvm_profile_register_function
__llvm_profile_runtime
__llvm_profile_runtime_user
llvm.metadata
__llvm_profile_init
__llvm_profile_override_default_filename
Safe Stack instrumentation pass
safe-stack
gcroot intrinsic not compatible with safestack attribute
__safestack_unsafe_stack_ptr
 must have void* type
 must be thread-local
unsafe_stack_ptr
unsafe_stack_static_top
unsafe_stack_dynamic_ptr
sanitizer-coverage-level
Sanitizer Coverage. 0: none, 1: entry block, 2: all blocks, 3: all blocks and critical edges, 4: above plus indirect calls
sanitizer-coverage-block-threshold
Use a callback with a guard check inside it if there are more than this number of blocks.
sanitizer-coverage-experimental-tracing
Experimental basic-block tracing: insert callbacks at every basic block
sanitizer-coverage-experimental-trace-compares
Experimental tracing of CMP and similar instructions
sanitizer-coverage-8bit-counters
Experimental 8-bit counters
SanitizerCoverage: TODO.ModulePass
sancov
SanitizerCoverageModule
__sancov_gen_cov_tmp
__sancov_gen_cov
__sancov_gen_cov_counter
__sanitizer_cov
__sanitizer_cov_with_check
__sanitizer_cov_indir_call16
__sanitizer_cov_trace_cmp
__sanitizer_cov_trace_switch
__sanitizer_cov_trace_func_enter
__sanitizer_cov_trace_basic_block
.module_ctor
__sancov_gen_callee_cache
__sancov_gen_cov_switch_values
sancov.module_ctor
__sanitizer_cov_module_init
tsan-instrument-memory-accesses
Instrument memory accesses
tsan-instrument-func-entry-exit
Instrument function entry and exit
tsan-instrument-atomics
Instrument atomics
tsan-instrument-memintrinsics
Instrument memintrinsics (memset/memcpy/memmove)
ThreadSanitizer: detects data races.
tsan
ThreadSanitizer
tsan.module_ctor
__tsan_init
__tsan_func_entry
__tsan_func_exit
__tsan_read
__tsan_write
__tsan_unaligned_read
__tsan_unaligned_write
__tsan_atomic
_load
_store
_exchange
_fetch_add
_fetch_sub
_fetch_and
_fetch_or
_fetch_xor
_fetch_nand
_compare_exchange_val
__tsan_vptr_update
__tsan_vptr_read
__tsan_atomic_thread_fence
__tsan_atomic_signal_fence
A @@ version cannot be undefined
No relocation available to represent this relative expression
Cannot represent a difference across sections
Cannot represent a subtraction with a weak symbol
.strtab
.debug_
.rela
.rel
.symtab
Undefined temporary
__imp_?
__imp_@?
.symtab_shndxr
Size expression must be absolute.
FK_Data_1
FK_Data_2
FK_Data_4
FK_Data_8
FK_PCRel_1
FK_PCRel_2
FK_PCRel_4
FK_PCRel_8
FK_GPRel_1
FK_GPRel_2
FK_GPRel_4
FK_GPRel_8
FK_SecRel_1
FK_SecRel_2
FK_SecRel_4
FK_SecRel_8
NO_APP
.code32
.code64
.zero
.ascii
.asciz
.byte
.short
.long
.quad
.globl
 InlineAsm Start
 InlineAsm End
.weak_reference 
.space
.note.GNU-stack
.weak
.cfi_startproc
 simple
.cfi_endproc
.syntax unified
.subsections_via_symbols
.linker_option "
.data_region
.data_region jt8
.data_region jt16
.data_region jt32
.end_data_region
.watchos_version_min
.tvos_version_min
.ios_version_min
.macosx_version_min
.thumb_func
.weakref 
.type
gnu_indirect_function
object
tls_object
common
no_type
gnu_unique_object
.hidden
.indirect_symbol
.internal
.lazy_reference
.local
.no_dead_strip
.symbol_resolver
.alt_entry
.private_extern
.protected
.reference
.weak_definition
.weak_def_can_be_hidden
.desc
.def
.scl
.endef
.safeseh
.secidx
.secrel32
.size
AdrpAdrp
AdrpLdr
AdrpAddLdr
AdrpLdrGotLdr
AdrpAddStr
AdrpLdrGotStr
AdrpAdd
AdrpLdrGot
.loh
.comm
.lcomm
.zerofill 
.tbss 
Don't know how to emit this value.
.uleb128 
.sleb128 
.align
.p2alignw 
.p2alignl 
, 0x
.balign
.balignw
.balignl
.org 
.file
.ident
.loc
 basic_block
 prologue_end
 epilogue_begin
 is_stmt 
 isa 
 discriminator 
.cfi_sections 
.eh_frame
, .debug_frame
.debug_frame
.cfi_def_cfa 
.cfi_def_cfa_offset 
.cfi_def_cfa_register 
.cfi_offset 
.cfi_personality 
.cfi_lsda 
.cfi_remember_state
.cfi_restore_state
.cfi_same_value 
.cfi_rel_offset 
.cfi_adjust_cfa_offset 
.cfi_escape 
0x%02x
.cfi_signal_frame
.cfi_undefined 
.cfi_register 
.cfi_window_save
.seh_proc 
.seh_endproc
.seh_startchained
.seh_endchained
.seh_pushreg 
.seh_setframe 
.seh_stackalloc 
.seh_savereg 
.seh_savexmm 
.seh_pushframe
 @code
.seh_endprologue
.seh_handler 
, @unwind
, @except
.seh_handlerdata
.intel_syntax noprefix
encoding: [
  fixup 
offset: 
, value: 
, kind: 
.bundle_align_mode 
.bundle_lock
 align_to_end
.bundle_unlock
' could not be evaluated in a subtraction expression
Common symbol 
 cannot be used in assignment expr
expected relocatable expression
invalid .org offset '
' (at offset '
unable to write NOP sequence of 
 bytes
non-zero initializer found in section '
non-zero initializer found in virtual section
sleb128 and uleb128 expressions must be absolute
<MCFixup
 Offset:
 Value:
 Kind:
unable to evaluate offset for variable '
unable to evaluate offset to undefined symbol '
undefined .align directive, value size '
' is not a divisor of padding size '
unable to write nop sequence of 
AS_SECURE_LOG_FILE
$frame_escape_
$parent_frame_offset
__ehtable$
.group
llvm-mc (based on LLVM 3.8.0svn)
Fragment can't be larger than a bundle size
Padding cannot exceed 255 bytes
Unterminated .bundle_lock when changing a section
Symbol: 
 redeclared as different type
Emitting values inside a locked bundle is forbidden
.comment
.bundle_align_mode cannot be changed once set
.bundle_lock forbidden when bundling is disabled
.bundle_unlock forbidden when bundling is disabled
.bundle_unlock without matching lock
Empty bundle-locked group is forbidden
<<invalid>>
<<none>>
GOTOFF
GOTPCREL
GOTTPOFF
INDNTPOFF
NTPOFF
GOTNTPOFF
TLSGD
TLSLD
TLSLDM
TPOFF
DTPOFF
TLVP
TLVPPAGE
TLVPPAGEOFF
PAGE
PAGEOFF
GOTPAGE
GOTPAGEOFF
SECREL32
SIZE
WEAKREF
target1
target2
prel31
sbrel
tlsldo
tlscall
tlsdesc
tlsdescseq
higher
highera
highest
highesta
got@l
got@h
got@ha
tocbase
toc@l
toc@h
toc@ha
dtpmod
tprel
tprel@l
tprel@h
tprel@ha
tprel@higher
tprel@highera
tprel@highest
tprel@highesta
dtprel
dtprel@l
dtprel@h
dtprel@ha
dtprel@higher
dtprel@highera
dtprel@highest
dtprel@highesta
got@tprel
got@tprel@l
got@tprel@h
got@tprel@ha
got@dtprel
got@dtprel@l
got@dtprel@h
got@dtprel@ha
got@tlsgd
got@tlsgd@l
got@tlsgd@h
got@tlsgd@ha
tlsgd
got@tlsld
got@tlsld@l
got@tlsld@h
got@tlsld@ha
tlsld
local
GPREL
GOT_CALL
GOT16
ABS_HI
ABS_LO
DTPREL_HI
DTPREL_LO
GOTTPREL
TPREL_HI
TPREL_LO
GPOFF_HI
GPOFF_LO
GOT_DISP
GOT_PAGE
GOT_OFST
HIGHER
HIGHEST
GOT_HI16
GOT_LO16
CALL_HI16
CALL_LO16
PCREL_HI16
PCREL_LO16
IMGREL
PCREL
LO16
HI16
GDGOT
LDGOT
GDPLT
LDPLT
IEGOT
gotoff
gotpcrel
got_prel
gottpoff
indntpoff
ntpoff
gotntpoff
tlsldm
tpoff
dtpoff
tlvp
tlvppage
tlvppageoff
page
pageoff
gotpage
gotpageoff
imgrel
secrel32
<MCOperand 
INVALID
Reg:
Imm:
Expr:(
Inst:(
UNDEFINED
<MCInst 
<MCInst #
0123456789abcdef
%lld
-0x%llx
0x%llx
-0%llxh
-%llxh
0%llxh
%llxh
__DWARF
thumbv7k
__text
__thread_data
__thread_bss
__thread_vars
__thread_init
__ustring
__literal4
__literal8
__literal16
__const
__textcoal_nt
__const_coal
__datacoal_nt
__common
__bss
__la_symbol_ptr
__nl_symbol_ptr
__constructor
__destructor
__mod_init_func
__mod_term_func
__gcc_except_tab
__LD
__compact_unwind
__apple_names
names_begin
__apple_objc
objc_begin
__apple_namespac
namespac_begin
__apple_types
types_begin
__apple_exttypes
exttypes_begin
__debug_abbrev
section_abbrev
__debug_info
section_info
__debug_line
section_line
__debug_frame
__debug_pubnames
__debug_pubtypes
__debug_gnu_pubn
__debug_gnu_pubt
__debug_str
__debug_loc
section_debug_loc
__debug_aranges
__debug_ranges
debug_range
__debug_inlined
__LLVM_STACKMAPS
__llvm_stackmaps
__LLVM_FAULTMAPS
__llvm_faultmaps
.rodata.cst4
.rodata.cst8
.rodata.cst16
.gcc_except_table
.debug_abbrev
.debug_info
.debug_line
.debug_pubnames
.debug_pubtypes
.debug_gnu_pubnames
.debug_gnu_pubtypes
.debug_str
.debug_loc
.debug_aranges
.debug_ranges
.apple_names
.apple_objc
.apple_namespaces
.apple_types
.apple_exttypes
.debug_info.dwo
.debug_types.dwo
.debug_abbrev.dwo
.debug_str.dwo
.debug_line.dwo
.debug_loc.dwo
skel_loc
.debug_str_offsets.dwo
.debug_addr
addr_sec
.llvm_stackmaps
.llvm_faultmaps
.CRT$XCU
.CRT$XTX
.debug$S
section_info_dwo
section_types_dwo
section_abbrev_dwo
.drectve
.pdata
.xdata
.sxdata
.debug_types
__eh_frame
This file format doesn't support weak aliases.
Cannot evaluate subsection number
Subsection number out of range
sec_end
Mismatched bundle_lock/unlock directives
one_only,
discard,
same_size,
same_contents,
associative,
largest,
newest,
,#alloc
,#execinstr
,#write
,#exclude
,#tls
init_array
fini_array
preinit_array
nobits
progbits
,comdat
,unique,
.subsection
0123456789_.abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ
.section
,none,
mach-o section specifier requires a segment whose length is between 1 and 16 characters
mach-o section specifier requires a segment and section separated by a comma
mach-o section specifier requires a section whose length is between 1 and 16 characters
mach-o section specifier uses an unknown section type
mach-o section specifier of type 'symbol_stubs' requires a size specifier
mach-o section specifier has invalid attribute
mach-o section specifier cannot have a stub size specified because it does not have type 'symbol_stubs'
mach-o section specifier has a malformed stub size
regular
S_REGULAR
S_ZEROFILL
cstring_literals
S_CSTRING_LITERALS
4byte_literals
S_4BYTE_LITERALS
8byte_literals
S_8BYTE_LITERALS
literal_pointers
S_LITERAL_POINTERS
non_lazy_symbol_pointers
S_NON_LAZY_SYMBOL_POINTERS
lazy_symbol_pointers
S_LAZY_SYMBOL_POINTERS
symbol_stubs
S_SYMBOL_STUBS
mod_init_funcs
S_MOD_INIT_FUNC_POINTERS
mod_term_funcs
S_MOD_TERM_FUNC_POINTERS
coalesced
S_COALESCED
S_GB_ZEROFILL
interposing
S_INTERPOSING
16byte_literals
S_16BYTE_LITERALS
S_DTRACE_DOF
S_LAZY_DYLIB_SYMBOL_POINTERS
thread_local_regular
S_THREAD_LOCAL_REGULAR
thread_local_zerofill
S_THREAD_LOCAL_ZEROFILL
thread_local_variables
S_THREAD_LOCAL_VARIABLES
thread_local_variable_pointers
S_THREAD_LOCAL_VARIABLE_POINTERS
thread_local_init_function_pointers
S_THREAD_LOCAL_INIT_FUNCTION_POINTERS
pure_instructions
S_ATTR_PURE_INSTRUCTIONS
no_toc
S_ATTR_NO_TOC
strip_static_syms
S_ATTR_STRIP_STATIC_SYMS
no_dead_strip
S_ATTR_NO_DEAD_STRIP
live_support
S_ATTR_LIVE_SUPPORT
self_modifying_code
S_ATTR_SELF_MODIFYING_CODE
S_ATTR_DEBUG
S_ATTR_SOME_INSTRUCTIONS
S_ATTR_EXT_RELOC
S_ATTR_LOC_RELOC
unsupported directive in streamer
line_table_start
No open frame
Starting a frame before finishing the previous one!
.seh_* directives are not supported on this target
No open Win64 EH frame function!
Starting a function before ending the previous one!
Not all chained regions terminated!
End of a chained region outside a chained region!
Chained unwind areas can't have handlers!
Don't know what kind of handler this is!
Frame register and offset already specified!
Misaligned frame pointer offset!
Frame offset must be less than or equal to 240!
Allocation size must be non-zero!
Misaligned stack allocation!
Misaligned saved register offset!
Misaligned saved vector register offset!
If present, PushMachFrame must be the first UOP
EmitRawText called on an MCStreamer that doesn't support it,  something must not be fully mc'ized
Unfinished frame!
Symbol name with unsupported characters
.text$
indirect symbol '
' not in a symbol pointer or stub section
invalid 'common' alignment '
' for '
' is not a recognized feature for this target
 (ignoring feature)
help
' is not a recognized processor for this target
 (ignoring processor)
+help
altivec
Available CPUs for this target:
  %-*s - %s.
Available features for this target:
Use +feature to enable a feature, or -feature to disable it.
For example, llc -mcpu=mycpu -mattr=+feature1,-feature2
two sections have the same comdat
Weak externals may only alias symbols
.weak.
.default
conflicting sections for symbol
symbol '
' can not be undefined
' can not be undefined in a subtraction expression
PE COFF object files can't have more than 2147483647 sections
Missing associated COMDAT section for section 
COFF string table is greater than 64 GB.
ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/
starting a new symbol definition without completing the previous one
storage class specified outside of symbol definition
storage class value '
' out of range
symbol type specified outside of a symbol definition
type value '
ending symbol definition without starting one
alignment is limited to 32-bytes
 -aligncomm:"
enable-objc-arc-opts
enable/disable all ARC Optimizations
ObjC ARC optimization
objc-arc
objc_retain
objc_release
objc_autorelease
objc_retainAutoreleasedReturnValue
objc_unsafeClaimAutoreleasedReturnValue
objc_retainBlock
objc_autoreleaseReturnValue
objc_autoreleasePoolPush
objc_loadWeakRetained
objc_loadWeak
objc_destroyWeak
objc_storeWeak
objc_initWeak
objc_moveWeak
objc_copyWeak
objc_retainedObject
objc_unretainedObject
objc_unretainedPointer
clang.arc.use
l_objc_msgSend_fixup_
__message_refs
__objc_classrefs
__objc_superrefs
__objc_methname
__cstring
clang.imprecise_release
clang.arc.no_objc_arc_exceptions
ObjC ARC expansion
objc-arc-expand
ObjC ARC autorelease pool elimination
objc-arc-apelim
ObjC-ARC-Based Alias Analysis
objc-arc-aa
ARCInstKind::Retain
ARCInstKind::RetainRV
ARCInstKind::ClaimRV
ARCInstKind::RetainBlock
ARCInstKind::Release
ARCInstKind::Autorelease
ARCInstKind::AutoreleaseRV
ARCInstKind::AutoreleasepoolPush
ARCInstKind::AutoreleasepoolPop
ARCInstKind::NoopCast
ARCInstKind::FusedRetainAutorelease
ARCInstKind::FusedRetainAutoreleaseRV
ARCInstKind::LoadWeakRetained
ARCInstKind::StoreWeak
ARCInstKind::InitWeak
ARCInstKind::LoadWeak
ARCInstKind::MoveWeak
ARCInstKind::CopyWeak
ARCInstKind::DestroyWeak
ARCInstKind::StoreStrong
ARCInstKind::CallOrUser
ARCInstKind::Call
ARCInstKind::User
ARCInstKind::IntrinsicUser
ARCInstKind::None
objc_autoreleasePoolPop
objc_retain_autorelease
objc_sync_enter
objc_sync_exit
llvm.arc.annotation.topdown.bbstart
llvm.arc.annotation.topdown.bbend
llvm.arc.annotation.bottomup.bbstart
llvm.arc.annotation.bottomup.bbend
ObjC ARC contraction
objc-arc-contract
clang.arc.retainAutoreleasedReturnValueMarker
objc_storeStrong
objc_retainAutorelease
objc_retainAutoreleaseReturnValue
 and 
 are related.
 are not related.
Evaluate ProvenanceAnalysis on all pairs
pa-eval
S_None
S_Retain
S_CanRelease
S_Use
S_Release
S_MovableRelease
S_Stop
Aggressive Dead Code Elimination
adce
alignment-from-assumptions
Bit-Tracking Dead Code Elimination
bdce
Constant Hoisting
consthoist
const
const_mat
Simple constant propagation
constprop
Value Propagation
correlated-propagation
Dead Instruction Elimination
Dead Code Elimination
Dead Store Elimination
Early CSE
Flatten the CFG
flattencfg
float2int-max-integer-bw
Max integer bitwidth to consider in float2int(default=64)
Float to int
float2int
enable-pre
enable-load-pre
max-recurse-depth
Max recurse depth (default = 1000)
.pre-phi
.pre
trunc
inttoptr
bitcast
Global Value Numbering
irce-loop-size-cutoff
irce-print-changed-loops
irce-print-range-checks
irce-max-exit-prob-reciprocal
Inductive range check elimination
irce
irce: looking at loop 
irce: loop has 
 inductive range checks: 
InductiveRangeCheck:
  Kind: 
  Offset: 
  Scale: 
  Length: 
(null)
  Branch: 
RANGE_CHECK_UNKNOWN
RANGE_CHECK_UPPER
RANGE_CHECK_LOWER
RANGE_CHECK_BOTH
indvar.start
exit.preloop.at
exit.mainloop.at
preloop
postloop
mainloop
.exit.selector
.pseudo.exit
.copy
indvar.end
irce: in function 
constrained 
verify-indvars
Verify the ScalarEvolution result after running indvars
liv-reduce
Reduce live induction variables.
replexitval
Choose the strategy to replace exit value in IndVarSimplify
never
never replace exit value
cheap
only replace exit value when the cost is cheap
always
always replace exit value whenever possible
Induction Variable Simplification
indvars
.int
indvar.conv
.wide
lftr.wideiv
lftr.limit
jump-threading-threshold
Max block size to duplicate for jump threading
Jump Threading
jump-threading
.thr_comm
.thread
select.unfold
thread-pre-split
disable-licm-promotion
Disable memory promotion in LICM pass
.promoted
Loop Invariant Code Motion
licm
.lcssa
LoadCombine
.combined
combine.extract
.shift
load-combine
Number of loads combined
Combine Adjacent Loads
Delete dead loops
loop-deletion
loop-distribute-verify
Turn on DominatorTree and LoopInfo verification after Loop Distribution
loop-distribute-non-if-convertible
Whether to distribute into a loop that may not be if-convertible by the loop vectorizer
loop-distribute
.ldist
Recognize loop idioms
loop-idiom
memset
memcpy
memset_pattern16
.memset_pattern
tcphi
tcdec
Simplify instructions in loops
loop-instsimplify
Interchanges loops for cache reuse
loop-interchange
.split
max-reroll-increment
The maximum increment for loop rerolling
reroll-num-tolerated-failed-matches
The maximum number of failures to tolerate during fuzzy matching. (default: 400)
Reroll loops
loop-reroll
reroll
exitcond
rotation-max-header-size
The default maximum header size for automatic loop rotation
Rotate Loops
loop-rotate
.lr.ph
Simplify loop CFG
loop-simplifycfg
enable-lsr-phielim
Enable LSR phi elimination
Loop Strength Reduction
loop-reduce
IV.S.
IV.S.next.
.termcond
scmp
lsr.chain
unroll-threshold
The baseline cost threshold for loop unrolling
unroll-percent-dynamic-cost-saved-threshold
The percentage of estimated dynamic cost which must be saved by unrolling to allow unrolling up to the max threshold.
unroll-dynamic-cost-savings-discount
This is the amount discounted from the total unroll cost when the unrolled form has a high dynamic cost savings (triggered by the '-unroll-perecent-dynamic-cost-saved-threshold' flag).
unroll-max-iteration-count-to-analyze
Don't allow loop unrolling to simulate more than this number ofiterations when checking full unroll profitability
unroll-count
Use this unroll count for all loops including those with unroll_count pragma values, for testing purposes
unroll-allow-partial
Allows loops to be partially unrolled until -unroll-threshold loop size is reached.
unroll-runtime
Unroll loops with run-time trip counts
pragma-unroll-threshold
Unrolled size limit for loops with an unroll(full) or unroll_count pragma.
Unroll loops
loop-unroll
Unable to unroll loop the number of times directed by unroll_count pragma because the loop contains a convergent instruction, and so must have an unroll count that divides the loop trip multiple of 
.  Unrolling instead 
 time(s).
Unable to unroll loop the number of times directed by unroll_count pragma because unrolled size is too large.
Unable to fully unroll loop as directed by unroll(full) pragma because loop has a runtime trip count.
Unable to unroll loop as directed by unroll(enable) pragma because unrolled size is too large.
Unable to fully unroll loop as directed by unroll pragma because unrolled size is too large.
llvm.loop.unroll.disable
llvm.loop.unroll.full
llvm.loop.unroll.enable
llvm.loop.unroll.count
llvm.loop.unroll.runtime.disable
llvm.loop.unroll.
loop-unswitch-threshold
Max loop size to unswitch
Unswitch loops
loop-unswitch
branch_weights
us-unreachable
.us-lcssa
Lower atomic intrinsics to non-atomic form
loweratomic
likely-branch-weight
Weight of the branch likely to be taken (default = 64)
unlikely-branch-weight
Weight of the branch unlikely to be taken (default = 4)
Lower 'expect' Intrinsics
memcpyopt
tmpcast
MemCpy Optimization
.sink
MergedLoadStoreMotion
mldst-motion
Nary reassociation
nary-reassociate
Partially inline calls to library functions
partially-inline-libcalls
call.sqrt
spp-all-backedges
spp-counted
spp-split-backedge
spp-trace
spp-no-entry
spp-no-call
spp-no-backedge
gc.safepoint_poll
statepoint-example
coreclr
skipping safepoint placement in finite loop
skipping safepoint placement due to unconditional call
[LSP] terminator instruction: 
gc-leaf-function
statepoint-id
statepoint-num-patch-bytes
safepoint_token
Place Backedge Safepoints
place-backedge-safepoints-impl
Place Safepoints
place-safepoints
Reassociate expressions
reassociate
.neg
and.ra
factor
Demote all values to stack slots
reg2mem
reg2mem alloca point
trace-rewrite-statepoints
spp-print-liveset
spp-print-liveset-size
spp-print-base-pointers
spp-rematerialization-threshold
rs4gc-clobber-non-live
Base Pairs: (w/Relocation)
 derived %
 base %
__tmp_use
Live Variables:
Safepoint For: 
Number live values: 
Base Pairs (w/o Relocation):
States after initialization:
 for 
States after meet iteration:
is_base_value
Updating base value cache
 for: 
 to: 
nullptr
.base
base_phi
base_select
.remat
statepoint_token
relocate_token
.relocated
.casted
Make relocations explicit at statepoints
rewrite-statepoints-for-gc
Sparse Conditional Constant Propagation
sccp
SCCP: Don't know how to handle: 
Interprocedural Sparse Conditional Constant Propagation
ipsccp
force-ssa-updater
sroa-random-shuffle-slices
sroa-strict-inbounds
SROA
sroa
.fca
.sroa.
Maximum number of uses of a partition
Maximum number of partitions per alloca
Scalar Replacement Of Aggregates
sample-profile-file
Profile file loaded by -sample-profile
sample-profile-max-propagate-iterations
Maximum number of iterations to go through when propagating sample block/edge weights through the CFG.
Sample Profile loader
sample-profile
Sample profile pass
Could not open profile: 
No debug information found in function 
: Function profile not used
Scalar Replacement of Aggregates (DT)
scalarrepl
Scalar Replacement of Aggregates (SSAUp)
scalarrepl-ssa
insert
sroa.load.elt
sroa.store.elt
srcval
dyn.offset
mask
Scalarize vector operations
scalarizer
scalarize-load-store
Allow the scalarizer pass to scalarize loads and store
.cast
.upto
disable-separate-const-offset-from-gep
Do not separate the constant offset from a GEP instruction
reassociate-geps-verify-no-dead-code
Verify this pass produces no dead code
Split GEPs to a variadic base and a constant offset for better CSE
separate-const-offset-from-gep
uglygep
idxprom
Dead instruction detected!
bonus-inst-threshold
Control the number of bonus instructions (default = 1)
merge
simplifycfg
Simplify the CFG
Code sinking
sink
spec-exec-max-speculation-cost
Speculative execution is not applied to basic blocks where the cost of the instructions to speculatively execute exceeds this limit.
spec-exec-max-not-hoisted
Speculative execution is not applied to basic blocks where the number of instructions that would not be speculatively executed exceeds this limit.
Speculatively execute instructions
speculative-execution
Straight line strength reduction
slsr
Structurize the CFG
structurizecfg
Structurize control flow
.inv
entry.orig
Flow
Tail Call Elimination
tailcallelim
marked this readnone call a tail call candidate
marked this call a tail call candidate
transforming tail recursion to loop
tailrecurse
accumulator.tr
AddFastMathFlags
add-fast-math-flags
Expand dynamic allocas
expand-allocas
Dynamic alloca expander
threshold
single-threshold
simple-switch-threshold
flatten-cutoff
Flatten control flow
gpu-flattencfg
FlattenCFGThresholdOverride
Number of blocks eliminated
switchcmp
max-fma-contraction
Limit the fma-contraction pass
fma-contraction
Perform GPU-specific code gen preparation
gpu-codegen-prepare
GPU-specific code gen preparation
GPU DMA Promotion
dma-promotion
agx.common_store_dma
agx.driver_bindings
agx.compute_driver_bindings
agx.driver_parameters_dma
image_state
sampler_state
promotedConstantAlloca
constant_literals
agx.literals_buffer
literalsbuffer
buffer_bindings
driver_parameters
driverparambuffer
driver_param_buffer
dparamcache
driver_parameter_cached
memorycache
memory_cache
Shrink load and store instructions
ls-shrinker
GPU Load and Store Shrinker
agx0
agx1
agx2
Vectorize load and store instructions
ls-vectorizer
GPU Load and Store Vectorizer
loopmerge-depth
The maximum depth to process
Merge loops
loopmerge
GPU Loop Merge
join
exit.phi
.phi
oop No-op Analysis Pass
loop-noop-analysis
Loop No-op Analysis Pass
unroll-samplerate
Unroll the loops to sample-rate
colorloop-v2
Version 2 of the color loop
colorloop-v2-unroll
Version 2 of the color loop, unrolled
unroll-colorloop
Always unroll the color loop
Transform the shader to enable MSAA mode
msaa-transform
MSAA Transformation Pass
msaa_transform
msaa_ph.safe
msaa_h.safe
msaa_prelatch.safe
msaa_latch.safe
msaa_exit.safe
skip-cond
coverage_mask
smp-mask
orig-col-msk
col-mask
cvg-msk-next
col-mask-16
cvg-mask-next-16
smp-num
smp-num-next
msaa_first.blending
msaa_cond.blending
msaa_last.blending
msaa_ph.blending
msaa_h.blending
msaa_body.blending
msaa_prelatch.blending
msaa_latch.blending
msaa_exit.blending
col-mask-shift8
msaa_ph.feedback
msaa_h.feedback
msaa_body.feedback
msaa_prelatch.feedback
msaa_latch.feedback
msaa_exit.feedback
msaa_switch.entry
msaa_switch.second
msaa_switch.exit
msaa_switch.4x
msaa_switch.2x
msaa_switch.nomsaa
msaa_inter.exit
msaa.mode
msaa_blending.color1
msaa_blending.color2
msaa_blending.color3
msaa_blending.inter_exit
msaa_blending.exit
msaa_pb
Optimize GPU fence instructions
optimize-fences
GPU fence optimizer
Generation of constant programs
constant-programs
.constant_program
computed_constants
new_gep
Invariant Extraction
extract-invariants
.sample_invariants
.thread_invariants
thread_invariants.temp
thread_invariant
invariant
retval
atom_loop.header
atom_loop.body
atom_loop.latch
wa_true_bb
wa_false2_bb
por0
por2
.clone
cast
scalarize-cutoff
scalarize-maxldst-width
Max architectural width of LD/ST instructions
Scalarize
scalarize
Number of instructions attempted to scalarize
deferred-attribute-pass
Enable deferred VS attribute shading pass
tpp-smp-ratio
Definitely do if redundant sample ratio is less than
tpp-smp-ratio-max
Abort if redundant sample ratio exceeds
tpp-itr-ratio
Definitely do if redundant sample ratio is inconclusive and redundant iterate component ratio is less than
tpp-cost-ratio
Transform if all else is inconclusive and redundant cost ratio is less than
Transform the shader to enable two pass punchthrough
two-pass-punchthrough
Two Pass Punchthrough
tpp_functions
.visibility-section
tpp.return
tpp.entry
visibility-pass
attribute-pass
is-visibility
agx.dma-list
.vi_trimmed
TrimVertexDMAList
trim-vi-dma-list
INFINITY
-inf
-INFINITY
-nan
-NaN
0.0E+0
APInt(
%g%%
General options
: for the -
 option: 
may only occur zero or one times!
must occur exactly one time!
TRUE
True
FALSE
False
' is invalid value for boolean argument! Try 0 or 1
' value invalid for integer argument!
' value invalid for uint argument!
    =
 -   
    -
 (default: 
= *unknown option value*
*no default*
= *cannot print option value*
Generic Options
help-list
Display list of available options (-help-list-hidden for more)
help-list-hidden
Display list of all available options
Display available options (-help-hidden for more)
help-hidden
Display all available options
print-options
Print non-default options after command line parsing
print-all-options
Print all option values after command line parsing
version
Display the version of this program
: CommandLine Error: Option '
' registered more than once!
inconsistency in registered CommandLine options
Cannot specify more than one option with cl::ConsumeAfter!
\"' 
error - this positional option will never be matched, because it does not Require a value, and a cl::ConsumeAfter option is active!
error - option can never match, because another positional argument will match an unbounded number of values, and this option does not require a value!
' is all messed up!
: Unknown command line argument '
'.  Try: '
 -help'
: Did you mean '-
: Not enough positional command line arguments specified!
Must specify at least 
 positional arguments: See: 
 -help
: Too many positional arguments specified!
Can specify at most 
must be specified at least once!
requires a value!
multi-valued option specified with ValueDisallowed modifier!
does not allow a value! '
' specified.
not enough values!
' value invalid for floating point argument!
  This option category has no options.
OVERVIEW: 
USAGE: 
 [options]
OPTIONS:
LLVM (http://llvm.org/):
LLVM
 version 
3.8.0svn
Optimized build
(unknown)
  Built 
Aug 11 2016
21:28:50
  Default target: 
  Host CPU: 
uint
number
string
char
DW_TAG_array_type
DW_TAG_class_type
DW_TAG_entry_point
DW_TAG_enumeration_type
DW_TAG_formal_parameter
DW_TAG_imported_declaration
DW_TAG_label
DW_TAG_lexical_block
DW_TAG_member
DW_TAG_pointer_type
DW_TAG_reference_type
DW_TAG_compile_unit
DW_TAG_string_type
DW_TAG_structure_type
DW_TAG_subroutine_type
DW_TAG_typedef
DW_TAG_union_type
DW_TAG_unspecified_parameters
DW_TAG_variant
DW_TAG_common_block
DW_TAG_common_inclusion
DW_TAG_inheritance
DW_TAG_inlined_subroutine
DW_TAG_module
DW_TAG_ptr_to_member_type
DW_TAG_set_type
DW_TAG_subrange_type
DW_TAG_with_stmt
DW_TAG_access_declaration
DW_TAG_base_type
DW_TAG_catch_block
DW_TAG_const_type
DW_TAG_constant
DW_TAG_enumerator
DW_TAG_file_type
DW_TAG_friend
DW_TAG_namelist
DW_TAG_namelist_item
DW_TAG_packed_type
DW_TAG_subprogram
DW_TAG_template_type_parameter
DW_TAG_template_value_parameter
DW_TAG_thrown_type
DW_TAG_try_block
DW_TAG_variant_part
DW_TAG_variable
DW_TAG_volatile_type
DW_TAG_dwarf_procedure
DW_TAG_restrict_type
DW_TAG_interface_type
DW_TAG_namespace
DW_TAG_imported_module
DW_TAG_unspecified_type
DW_TAG_partial_unit
DW_TAG_imported_unit
DW_TAG_condition
DW_TAG_shared_type
DW_TAG_type_unit
DW_TAG_rvalue_reference_type
DW_TAG_template_alias
DW_TAG_coarray_type
DW_TAG_generic_subrange
DW_TAG_dynamic_type
DW_TAG_MIPS_loop
DW_TAG_format_label
DW_TAG_function_template
DW_TAG_class_template
DW_TAG_GNU_template_template_param
DW_TAG_GNU_template_parameter_pack
DW_TAG_GNU_formal_parameter_pack
DW_TAG_APPLE_property
DW_CHILDREN_no
DW_CHILDREN_yes
DW_AT_sibling
DW_AT_location
DW_AT_name
DW_AT_ordering
DW_AT_byte_size
DW_AT_bit_offset
DW_AT_bit_size
DW_AT_stmt_list
DW_AT_low_pc
DW_AT_high_pc
DW_AT_language
DW_AT_discr
DW_AT_discr_value
DW_AT_visibility
DW_AT_import
DW_AT_string_length
DW_AT_common_reference
DW_AT_comp_dir
DW_AT_const_value
DW_AT_containing_type
DW_AT_default_value
DW_AT_inline
DW_AT_is_optional
DW_AT_lower_bound
DW_AT_producer
DW_AT_prototyped
DW_AT_return_addr
DW_AT_start_scope
DW_AT_bit_stride
DW_AT_upper_bound
DW_AT_abstract_origin
DW_AT_accessibility
DW_AT_address_class
DW_AT_artificial
DW_AT_base_types
DW_AT_calling_convention
DW_AT_count
DW_AT_data_member_location
DW_AT_decl_column
DW_AT_decl_file
DW_AT_decl_line
DW_AT_declaration
DW_AT_discr_list
DW_AT_encoding
DW_AT_external
DW_AT_frame_base
DW_AT_friend
DW_AT_identifier_case
DW_AT_macro_info
DW_AT_namelist_item
DW_AT_priority
DW_AT_segment
DW_AT_specification
DW_AT_static_link
DW_AT_type
DW_AT_use_location
DW_AT_variable_parameter
DW_AT_virtuality
DW_AT_vtable_elem_location
DW_AT_allocated
DW_AT_associated
DW_AT_data_location
DW_AT_byte_stride
DW_AT_entry_pc
DW_AT_use_UTF8
DW_AT_extension
DW_AT_ranges
DW_AT_trampoline
DW_AT_call_column
DW_AT_call_file
DW_AT_call_line
DW_AT_description
DW_AT_binary_scale
DW_AT_decimal_scale
DW_AT_small
DW_AT_decimal_sign
DW_AT_digit_count
DW_AT_picture_string
DW_AT_mutable
DW_AT_threads_scaled
DW_AT_explicit
DW_AT_object_pointer
DW_AT_endianity
DW_AT_elemental
DW_AT_pure
DW_AT_recursive
DW_AT_signature
DW_AT_main_subprogram
DW_AT_data_bit_offset
DW_AT_const_expr
DW_AT_enum_class
DW_AT_linkage_name
DW_AT_string_length_bit_size
DW_AT_string_length_byte_size
DW_AT_rank
DW_AT_str_offsets_base
DW_AT_addr_base
DW_AT_ranges_base
DW_AT_dwo_id
DW_AT_dwo_name
DW_AT_reference
DW_AT_rvalue_reference
DW_AT_MIPS_loop_begin
DW_AT_MIPS_tail_loop_begin
DW_AT_MIPS_epilog_begin
DW_AT_MIPS_loop_unroll_factor
DW_AT_MIPS_software_pipeline_depth
DW_AT_MIPS_linkage_name
DW_AT_MIPS_stride
DW_AT_MIPS_abstract_name
DW_AT_MIPS_clone_origin
DW_AT_MIPS_has_inlines
DW_AT_MIPS_stride_byte
DW_AT_MIPS_stride_elem
DW_AT_MIPS_ptr_dopetype
DW_AT_MIPS_allocatable_dopetype
DW_AT_MIPS_assumed_shape_dopetype
DW_AT_sf_names
DW_AT_src_info
DW_AT_mac_info
DW_AT_src_coords
DW_AT_body_begin
DW_AT_body_end
DW_AT_GNU_vector
DW_AT_GNU_template_name
DW_AT_GNU_odr_signature
DW_AT_MIPS_assumed_size
DW_AT_lo_user
DW_AT_hi_user
DW_AT_APPLE_optimized
DW_AT_APPLE_flags
DW_AT_APPLE_isa
DW_AT_APPLE_block
DW_AT_APPLE_major_runtime_vers
DW_AT_APPLE_runtime_class
DW_AT_APPLE_omit_frame_ptr
DW_AT_APPLE_property_name
DW_AT_APPLE_property_getter
DW_AT_APPLE_property_setter
DW_AT_APPLE_property_attribute
DW_AT_APPLE_property
DW_AT_APPLE_objc_complete_type
DW_AT_LLVM_include_path
DW_AT_LLVM_config_macros
DW_AT_LLVM_isysroot
DW_AT_GNU_dwo_name
DW_AT_GNU_dwo_id
DW_AT_GNU_ranges_base
DW_AT_GNU_addr_base
DW_AT_GNU_pubnames
DW_AT_GNU_pubtypes
DW_FORM_addr
DW_FORM_block2
DW_FORM_block4
DW_FORM_data2
DW_FORM_data4
DW_FORM_data8
DW_FORM_string
DW_FORM_block
DW_FORM_block1
DW_FORM_data1
DW_FORM_flag
DW_FORM_sdata
DW_FORM_strp
DW_FORM_udata
DW_FORM_ref_addr
DW_FORM_ref1
DW_FORM_ref2
DW_FORM_ref4
DW_FORM_ref8
DW_FORM_ref_udata
DW_FORM_indirect
DW_FORM_sec_offset
DW_FORM_exprloc
DW_FORM_flag_present
DW_FORM_ref_sig8
DW_FORM_GNU_addr_index
DW_FORM_GNU_str_index
DW_FORM_GNU_ref_alt
DW_FORM_GNU_strp_alt
DW_OP_addr
DW_OP_deref
DW_OP_const1u
DW_OP_const1s
DW_OP_const2u
DW_OP_const2s
DW_OP_const4u
DW_OP_const4s
DW_OP_const8u
DW_OP_const8s
DW_OP_constu
DW_OP_consts
DW_OP_dup
DW_OP_drop
DW_OP_over
DW_OP_pick
DW_OP_swap
DW_OP_rot
DW_OP_xderef
DW_OP_abs
DW_OP_and
DW_OP_div
DW_OP_minus
DW_OP_mod
DW_OP_mul
DW_OP_neg
DW_OP_not
DW_OP_or
DW_OP_plus
DW_OP_plus_uconst
DW_OP_shl
DW_OP_shr
DW_OP_shra
DW_OP_xor
DW_OP_skip
DW_OP_bra
DW_OP_eq
DW_OP_ge
DW_OP_gt
DW_OP_le
DW_OP_lt
DW_OP_ne
DW_OP_lit0
DW_OP_lit1
DW_OP_lit2
DW_OP_lit3
DW_OP_lit4
DW_OP_lit5
DW_OP_lit6
DW_OP_lit7
DW_OP_lit8
DW_OP_lit9
DW_OP_lit10
DW_OP_lit11
DW_OP_lit12
DW_OP_lit13
DW_OP_lit14
DW_OP_lit15
DW_OP_lit16
DW_OP_lit17
DW_OP_lit18
DW_OP_lit19
DW_OP_lit20
DW_OP_lit21
DW_OP_lit22
DW_OP_lit23
DW_OP_lit24
DW_OP_lit25
DW_OP_lit26
DW_OP_lit27
DW_OP_lit28
DW_OP_lit29
DW_OP_lit30
DW_OP_lit31
DW_OP_reg0
DW_OP_reg1
DW_OP_reg2
DW_OP_reg3
DW_OP_reg4
DW_OP_reg5
DW_OP_reg6
DW_OP_reg7
DW_OP_reg8
DW_OP_reg9
DW_OP_reg10
DW_OP_reg11
DW_OP_reg12
DW_OP_reg13
DW_OP_reg14
DW_OP_reg15
DW_OP_reg16
DW_OP_reg17
DW_OP_reg18
DW_OP_reg19
DW_OP_reg20
DW_OP_reg21
DW_OP_reg22
DW_OP_reg23
DW_OP_reg24
DW_OP_reg25
DW_OP_reg26
DW_OP_reg27
DW_OP_reg28
DW_OP_reg29
DW_OP_reg30
DW_OP_reg31
DW_OP_breg0
DW_OP_breg1
DW_OP_breg2
DW_OP_breg3
DW_OP_breg4
DW_OP_breg5
DW_OP_breg6
DW_OP_breg7
DW_OP_breg8
DW_OP_breg9
DW_OP_breg10
DW_OP_breg11
DW_OP_breg12
DW_OP_breg13
DW_OP_breg14
DW_OP_breg15
DW_OP_breg16
DW_OP_breg17
DW_OP_breg18
DW_OP_breg19
DW_OP_breg20
DW_OP_breg21
DW_OP_breg22
DW_OP_breg23
DW_OP_breg24
DW_OP_breg25
DW_OP_breg26
DW_OP_breg27
DW_OP_breg28
DW_OP_breg29
DW_OP_breg30
DW_OP_breg31
DW_OP_regx
DW_OP_fbreg
DW_OP_bregx
DW_OP_piece
DW_OP_deref_size
DW_OP_xderef_size
DW_OP_nop
DW_OP_push_object_address
DW_OP_call2
DW_OP_call4
DW_OP_call_ref
DW_OP_form_tls_address
DW_OP_call_frame_cfa
DW_OP_bit_piece
DW_OP_implicit_value
DW_OP_stack_value
DW_OP_GNU_push_tls_address
DW_OP_GNU_addr_index
DW_OP_GNU_const_index
DW_ATE_address
DW_ATE_boolean
DW_ATE_complex_float
DW_ATE_float
DW_ATE_signed
DW_ATE_signed_char
DW_ATE_unsigned
DW_ATE_unsigned_char
DW_ATE_imaginary_float
DW_ATE_packed_decimal
DW_ATE_numeric_string
DW_ATE_edited
DW_ATE_signed_fixed
DW_ATE_unsigned_fixed
DW_ATE_decimal_float
DW_ATE_UTF
DW_DS_unsigned
DW_DS_leading_overpunch
DW_DS_trailing_overpunch
DW_DS_leading_separate
DW_DS_trailing_separate
DW_END_default
DW_END_big
DW_END_little
DW_END_lo_user
DW_END_hi_user
DW_ACCESS_public
DW_ACCESS_protected
DW_ACCESS_private
DW_VIS_local
DW_VIS_exported
DW_VIS_qualified
DW_VIRTUALITY_none
DW_VIRTUALITY_virtual
DW_VIRTUALITY_pure_virtual
DW_LANG_C89
DW_LANG_C
DW_LANG_Ada83
DW_LANG_C_plus_plus
DW_LANG_Cobol74
DW_LANG_Cobol85
DW_LANG_Fortran77
DW_LANG_Fortran90
DW_LANG_Pascal83
DW_LANG_Modula2
DW_LANG_Java
DW_LANG_C99
DW_LANG_Ada95
DW_LANG_Fortran95
DW_LANG_PLI
DW_LANG_ObjC
DW_LANG_ObjC_plus_plus
DW_LANG_UPC
DW_LANG_D
DW_LANG_Python
DW_LANG_OpenCL
DW_LANG_Go
DW_LANG_Modula3
DW_LANG_Haskell
DW_LANG_C_plus_plus_03
DW_LANG_C_plus_plus_11
DW_LANG_OCaml
DW_LANG_Rust
DW_LANG_C11
DW_LANG_Swift
DW_LANG_Julia
DW_LANG_Dylan
DW_LANG_C_plus_plus_14
DW_LANG_Fortran03
DW_LANG_Fortran08
DW_LANG_Mips_Assembler
DW_ID_case_sensitive
DW_ID_up_case
DW_ID_down_case
DW_ID_case_insensitive
DW_CC_normal
DW_CC_program
DW_CC_nocall
DW_CC_lo_user
DW_CC_hi_user
DW_INL_not_inlined
DW_INL_inlined
DW_INL_declared_not_inlined
DW_INL_declared_inlined
DW_ORD_row_major
DW_ORD_col_major
DW_DSC_label
DW_DSC_range
DW_LNS_copy
DW_LNS_advance_pc
DW_LNS_advance_line
DW_LNS_set_file
DW_LNS_set_column
DW_LNS_negate_stmt
DW_LNS_set_basic_block
DW_LNS_const_add_pc
DW_LNS_fixed_advance_pc
DW_LNS_set_prologue_end
DW_LNS_set_epilogue_begin
DW_LNS_set_isa
DW_LNE_end_sequence
DW_LNE_set_address
DW_LNE_define_file
DW_LNE_set_discriminator
DW_LNE_lo_user
DW_LNE_hi_user
DW_MACINFO_define
DW_MACINFO_undef
DW_MACINFO_start_file
DW_MACINFO_end_file
DW_MACINFO_vendor_ext
DW_CFA_nop
DW_CFA_advance_loc
DW_CFA_offset
DW_CFA_restore
DW_CFA_set_loc
DW_CFA_advance_loc1
DW_CFA_advance_loc2
DW_CFA_advance_loc4
DW_CFA_offset_extended
DW_CFA_restore_extended
DW_CFA_undefined
DW_CFA_same_value
DW_CFA_register
DW_CFA_remember_state
DW_CFA_restore_state
DW_CFA_def_cfa
DW_CFA_def_cfa_register
DW_CFA_def_cfa_offset
DW_CFA_def_cfa_expression
DW_CFA_expression
DW_CFA_offset_extended_sf
DW_CFA_def_cfa_sf
DW_CFA_def_cfa_offset_sf
DW_CFA_val_offset
DW_CFA_val_offset_sf
DW_CFA_val_expression
DW_CFA_MIPS_advance_loc8
DW_CFA_GNU_window_save
DW_CFA_GNU_args_size
DW_CFA_lo_user
DW_CFA_hi_user
DW_APPLE_PROPERTY_readonly
DW_APPLE_PROPERTY_getter
DW_APPLE_PROPERTY_assign
DW_APPLE_PROPERTY_readwrite
DW_APPLE_PROPERTY_retain
DW_APPLE_PROPERTY_copy
DW_APPLE_PROPERTY_nonatomic
DW_APPLE_PROPERTY_setter
DW_APPLE_PROPERTY_atomic
DW_APPLE_PROPERTY_weak
DW_APPLE_PROPERTY_strong
DW_APPLE_PROPERTY_unsafe_unretained
DW_ATOM_null
DW_ATOM_die_offset
DW_ATOM_cu_offset
DW_ATOM_die_tag
DW_ATOM_type_flags
DW_ATOM_qual_name_hash
DW_ATOM_ext_types
NONE
TYPE
VARIABLE
FUNCTION
OTHER
UNUSED5
UNUSED6
UNUSED7
EXTERNAL
STATIC
LLVM ERROR: 
UNREACHABLE executed
 at 
view-background
Execute graph viewer in the background. Creates tmp file litter.
aaaaaa
aa0000
00aa00
aa5500
0055ff
aa00aa
00aaaa
555555
ff5555
55ff55
ffff55
5555ff
ff55ff
55ffff
ffaaaa
aaffaa
ffffaa
aaaaff
ffaaff
aaffff
Error: 
'... 
Trying 'open' program... 
xdg-open
Trying 'xdg-open' program... 
Graphviz
Running 'Graphviz' program... 
xdot|xdot.py
Running 'xdot.py' program... 
dot|fdp|neato|twopi|circo
-Tps
-Nfontname=Courier
-Gsize=7.5,10
Running '
' program... 
--spartan
dotty
Running 'dotty' program... 
Error: Couldn't find a usable graph viewer program:
  Tried '
Remember to erase graph file: 
neato
twopi
circo
Unknown buffer
%.2x
BCSymbolMap Version: 1.0
BCSymbolMap Version:
warning: missing version string. Assuming 1.0.
BCSymbolMap Version: 1.0
warning: symbol map version 
is not supported. Not unobfuscating.
Error opening '
  -load request ignored.
Program arguments: 
Stack dump:
rng-seed
seed
Seed for the random number generator
replacement string contained trailing backslash
0123456789
invalid backreference string '
Included from 
<unknown>
<stdin>
error: 
warning: 
note: 
can't open file '
error parsing file '
malformed line 
malformed regex in line 
getPointer in streaming memory objects not allowed
WARNING: You're attempting to print out a bitcode file.
This is inadvisable as it may cause display problems. If
you REALLY want to taste LLVM bitcode first-hand, you
can force output with the `-f' option.
+hwdiv-arm
-hwdiv-arm
+hwdiv
-hwdiv
+fp-only-sp
+d16
-fp-only-sp
-d16
+fp-armv8
+vfp4
-fp-armv8
+vfp3
+fp16
-vfp4
-fp16
+vfp2
-vfp3
-vfp2
+crypto
+neon
-crypto
-neon
thumb,arm
arm,thumb
fpe2
fpe3
maverick
invalid
vfp2
vfpv2
vfp3
vfpv3
vfp4
vfpv4
vfp3-d16
vfpv3-d16
vfp4-d16
vfpv4-d16
fp4-sp-d16
vfpv4-sp-d16
fpv4-sp-d16
fp4-dp-d16
fpv4-dp-d16
fp5-sp-d16
fpv5-sp-d16
fp5-dp-d16
fpv5-dp-d16
fpv5-d16
neon-vfpv3
neon
v6sm
v6s-m
v6-m
v7-a
v7-r
v7-m
v7em
v7e-m
v8-a
v8.1a
v8.1-a
vfpv3-fp16
vfpv3-d16-fp16
vfpv3xd
vfpv3xd-fp16
fp-armv8
neon-fp16
neon-vfpv4
neon-fp-armv8
crypto-neon-fp-armv8
softvfp
arm2
arm3
arm6
arm7m
arm8
arm810
strongarm110
strongarm1100
strongarm1110
arm7tdmi-s
arm710t
arm720t
arm9
arm9tdmi
arm920
arm920t
arm922t
arm9312
arm940t
ep9312
arm10tdmi
arm1020t
arm9e
arm946e-s
arm966e-s
arm968e-s
arm10e
arm1020e
arm1022e
iwmmxt
arm1136jf-s
arm1176j-s
arm1176jz-s
mpcore
mpcorenovfp
arm1156t2-s
arm1156t2f-s
cortex-m0
cortex-m0plus
cortex-m1
sc000
cortex-a5
cortex-a7
cortex-a12
cortex-a15
cortex-a17
krait
cortex-r4
cortex-r4f
cortex-r5
cortex-r7
sc300
cortex-m3
cortex-m4
cortex-m7
cortex-a53
cortex-a57
cortex-a72
cyclone
arm1136j-s
arm1136jz-s
swift
armv2
armv2a
armv3
armv3m
armv4
armv4t
armv5t
armv5te
armv5tej
5TEJ
armv6
armv6k
armv6t2
v6t2
armv6z
armv6zk
v6zk
armv6-m
armv6s-m
6S-M
armv7-a
armv7-r
armv7-m
armv7e-m
7E-M
armv8-a
armv8.1-a
8.1-A
iwmmxt2
armv5
armv5e
armv6j
armv6hl
v6hl
armv7
armv7l
armv7hl
v7hl
armv7s
armv7k
crypto
idiv
simd
virt
track-memory
Enable -time-passes memory tracking (this may be slow)
info-output-file
File to append -stats and -timer output to
Error opening info-output-file '
 for appending!
%9lld  
  Total Execution Time: %5.4f seconds (%5.4f wall clock)
   ---User Time---
   --System Time--
   --User+System--
   ---Wall Time---
  ---Mem---
  --- Name ---
Total
Miscellaneous Ungrouped Timers
        -----     
  %7.4f (%5.1f%%)
unknown
aarch64
aarch64_be
armeb
bpfel
bpfeb
hexagon
mips
mipsel
mips64
mips64el
msp430
powerpc64
powerpc64le
powerpc
r600
amdgcn
sparc
sparcv9
sparcel
s390x
thumb
thumbeb
x86_64
xcore
nvptx
nvptx64
igil32
igil64
air64
gpu_32
gpu_64
le32
le64
amdil
amdil64
hsail
hsail64
spir
spir64
kalimba
shave
wasm32
wasm64
amdgpu
s390
igil
apple
scei
nvidia
cloudabi
darwin
dragonfly
freebsd
kfreebsd
linux
macosx
netbsd
openbsd
solaris
windows
haiku
minix
rtems
nacl
bitrig
cuda
nvcl
amdhsa
tvos
watchos
gnueabihf
gnueabi
gnux32
code32
code16
eabi
eabihf
android
msvc
itanium
cygnus
amdopencl
arm64
ppc64
ppc32
ppc64le
systemz
cygwin
mingw
androideabi
arm1176jzf-s
cortex-a9
arm926ej-s
strongarm
cortex-a8
arm7tdmi
bpf_be
bpf_le
i786
i886
i986
amd64
x86_64h
xscale
xscaleeb
mipseb
mipsallegrex
mipsallegrexel
mips64eb
sparc64
kalimba3
kalimba4
kalimba5
win32
coff
macho
empty
rope:
cstring:"
std::string:"
stringref:"
smallstring:"
char:"
decUI:"
decI:"
decUL:"
decL:"
decULL:"
decLL:"
uhex:"
(Twine 
Stream-Start: 
Stream-End: 
Version-Directive: 
Tag-Directive: 
Document-Start: 
Document-End: 
Block-Entry: 
Block-End: 
Block-Sequence-Start: 
Block-Mapping-Start: 
Flow-Entry: 
Flow-Sequence-Start: 
Flow-Sequence-End: 
Flow-Mapping-Start: 
Flow-Mapping-End: 
Key: 
Value: 
Scalar: 
Block Scalar: 
Alias: 
Anchor: 
Tag: 
YAML
#;/?:@&=+$,_.!~*'()[]
Not dealing with this yet
Could not find expected : for simple key
Expected quote at end of scalar
Found unexpected ':' while scanning a plain scalar
,:?[]{}
Found invalid tab character in indentation
Got empty plain scalar
Got empty alias or anchor
Expected a line break after block scalar header
Leading all-spaces line must be smaller than the block indent
A text line is less indented than the block scalar
-?:,[]{}#&*!|>'"%@`
Unrecognized character while tokenizing.
Can only iterate over the stream once
Unknown tag handle 
tag:yaml.org,2002:null
tag:yaml.org,2002:str
tag:yaml.org,2002:map
tag:yaml.org,2002:seq
Unrecognized escape code!
Unexpected token in Key Value.
Unexpected token. Expected Key or Block End
Unexpected token. Expected Key, Flow Entry, or Flow Mapping End.
Unexpected token. Expected Block Entry or Block End.
Could not find closing ]!
Expected , between entries!
tag:yaml.org,2002:
Already encountered an anchor for this node!
Already encountered a tag for this node!
Unexpected token
not a mapping
missing required key '
unknown key '
not a sequence
unknown enumerated scalar
expected sequence of bit values
unexpected scalar in sequence of bit values
unknown bit value
unexpected scalar
Map key must be a scalar
unknown node kind
                
invalid boolean
invalid number
out of range number
invalid floating point number
0x%02X
invalid hex8 number
out of range hex8 number
0x%04X
invalid hex16 number
out of range hex16 number
0x%08X
invalid hex32 number
out of range hex32 number
0x%016llX
invalid hex64 number
IO failure on output stream.
[:<:]]
[:>:]]
alnum
ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789
alpha
ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz
blank
cntrl
digit
graph
ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789!"#$%&'()*+,-./:;<=>?@[\]^_`{|}~
lower
abcdefghijklmnopqrstuvwxyz
ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789!"#$%&'()*+,-./:;<=>?@[\]^_`{|}~ 
punct
!"#$%&'()*+,-./:;<=>?@[\]^_`{|}~
space
upper
ABCDEFGHIJKLMNOPQRSTUVWXYZ
xdigit
0123456789ABCDEFabcdef
alert
backspace
newline
vertical-tab
form-feed
carriage-return
exclamation-mark
quotation-mark
number-sign
dollar-sign
percent-sign
ampersand
apostrophe
left-parenthesis
right-parenthesis
asterisk
plus-sign
comma
hyphen
hyphen-minus
period
full-stop
slash
solidus
three
four
five
seven
eight
nine
colon
semicolon
less-than-sign
equals-sign
greater-than-sign
question-mark
commercial-at
left-square-bracket
backslash
reverse-solidus
right-square-bracket
circumflex
circumflex-accent
underscore
low-line
grave-accent
left-brace
left-curly-bracket
vertical-line
right-brace
right-curly-bracket
tilde
REG_0x%x
REG_NOMATCH
llvm_regexec() failed to match
REG_BADPAT
invalid regular expression
REG_ECOLLATE
invalid collating element
REG_ECTYPE
invalid character class
REG_EESCAPE
trailing backslash (\)
REG_ESUBREG
invalid backreference number
REG_EBRACK
brackets ([ ]) not balanced
REG_EPAREN
parentheses not balanced
REG_EBRACE
braces not balanced
REG_BADBR
invalid repetition count(s)
REG_ERANGE
invalid character range
REG_ESPACE
out of memory
REG_BADRPT
repetition-operator operand invalid
REG_EMPTY
empty (sub)expression
REG_ASSERT
"can't happen" -- you found a bug
REG_INVARG
invalid argument to regex routine
*** unknown regexp error code ***
x86_64-apple-darwin15.0.0
-darwin
GenuineIntel
AuthenticAMD
-%%%%%%
!<arch>
!<thin>
HOME
0123456789abcdef
-%%%%%%.
TMPDIR
TEMP
TEMPDIR
/var/tmp/
COLUMNS
colors
PATH
Child timed out but wouldn't die
Child timed out
Error waiting for child process
Program could not be executed
 (core dumped)
Executable "
" doesn't exist!
Can't redirect stderr to stdout
posix_spawn failed
Couldn't fork
/dev/null
Cannot dup2
Cannot open file '
%-2d
 %-*s
 %#0*lx
 + %u
llvm-symbolizer
error: invalid target '
: error: unable to get target for '
', see --version and --triple.
Unable to find target for this triple (no targets are registered)
No available targets are compatible with this triple, see -version for the available targets.
Cannot choose between targets "
" and "
  Registered Targets:
    
    (none)
%Y-%m-%d %H:%M:%S
%s.%.9u
less-precise-fpmad
unsafe-fp-math
no-infs-fp-math
Invalid option for -recip.
Duplicate option for -recip.
divd
vec-divd
sqrtd
vec-sqrtd
Invalid refinement step for -recip.
no-discriminators
Disable generation of discriminator information.
Add DWARF path discriminators
add-discriminators
.split-lp
lpad
lpad.phi
_crit_edge
split
Break critical edges in CFG
break-crit-edges
cstr
chari
aggregate-extracted-args
Aggregate arguments to code-extracted functions
.ret
gep_
loadgep_
.out
.loc
structArg
targetBlock
gep_reload_
.exitStub
codeRepl
newFuncRoot
enable-noalias-to-md-conversion
Convert noalias attributes to metadata during inlining.
preserve-alignment-assumptions-during-inlining
Convert align attributes to assumptions during inlining.
savedstack
.exit
ptrint
offsetcast
offsetptr
maskedptr
maskcond
: argument 
.noexc
.lpad-body
eh.lpad-body
_udiv-special-cases
udiv-end
udiv-loop-exit
udiv-do-while
udiv-preheader
udiv-bb1
Assign names to anonymous instructions
instnamer
lcssa
Loop-Closed SSA Form Pass
cond
.preheader
loop-simplify
.loopexit
.outer
.backedge
Canonicalize natural loops
completely unrolled loop with 
 iterations
 with a breakout at trip 
 with 
 trips per branch
 with run-time trip count
unrolled loop by a factor of 
xtraiter
lcmp.mod
.prol
prol.iter
.unr
.unr-lcssa
rdx.minmax.cmp
rdx.minmax.select
.lver.memcheck
.lver.orig
.lver
Lower invoke and unwind, for unwindless code generators
lowerinvoke
Lower SwitchInst's to branches
lowerswitch
NewDefault
NodeBlock
Pivot
LeafBlock
SwitchLeaf
.off
Promote Memory to Register
mem2reg
Assign new names to everything
metarenamer
quux
barney
snork
blam
hoge
wibble
wobble
widget
wombat
eggs
pluto
spam
alias
global
struct.
obfuscation-symbol-map
Specify the symbol_map output
filename.bcsymbolmap
obfuscate-preserve
<sym name>
__hidden#
__ir_hidden#
could not open obfuscation symbol map: 
__absvdi2
__absvsi2
__absvti2
__adddf3
__adddf3vfp
__addsf3
__addsf3vfp
__addvdi3
__addvsi3
__addvti3
__aeabi_d2f
__aeabi_d2iz
__aeabi_d2lz
__aeabi_d2uiz
__aeabi_d2ulz
__aeabi_dadd
__aeabi_dcmpun
__aeabi_ddiv
__aeabi_dmul
__aeabi_dneg
__aeabi_dsub
__aeabi_f2d
__aeabi_f2iz
__aeabi_f2lz
__aeabi_f2uiz
__aeabi_f2ulz
__aeabi_fadd
__aeabi_fcmpun
__aeabi_fdiv
__aeabi_fmul
__aeabi_fneg
__aeabi_fsub
__aeabi_i2d
__aeabi_i2f
__aeabi_idiv
__aeabi_l2d
__aeabi_l2f
__aeabi_lasr
__aeabi_lcmp
__aeabi_llsl
__aeabi_llsr
__aeabi_lmul
__aeabi_ui2d
__aeabi_ui2f
__aeabi_uidiv
__aeabi_ul2d
__aeabi_ul2f
__aeabi_ulcmp
__ashldi3
__ashlti3
__ashrdi3
__ashrti3
__bswapdi2
__bswapsi2
__clzdi2
__clzsi2
__clzti2
__cmpdi2
__cmpti2
__ctzdi2
__ctzsi2
__ctzti2
__divdc3
__divdf3
__divdf3vfp
__divdi3
__divmodsi4
__divsc3
__divsf3
__divsf3vfp
__divsi3
__divti3
__divxc3
__eprintf
__eqdf2
__eqdf2vfp
__eqsf2
__eqsf2vfp
__extendhfsf2
__extendsfdf2
__extendsfdf2vfp
__ffsdi2
__ffsti2
__fixdfdi
__fixdfsi
__fixdfsivfp
__fixdfti
__fixsfdi
__fixsfsi
__fixsfsivfp
__fixsfti
__fixunsdfdi
__fixunsdfsi
__fixunsdfsivfp
__fixunsdfti
__fixunssfdi
__fixunssfsi
__fixunssfsivfp
__fixunssfti
__fixunsxfdi
__fixunsxfsi
__fixunsxfti
__fixxfdi
__fixxfti
__floatdidf
__floatdisf
__floatdixf
__floatsidf
__floatsidfvfp
__floatsisf
__floatsisfvfp
__floattidf
__floattisf
__floattixf
__floatundidf
__floatundisf
__floatundixf
__floatunsidf
__floatunsisf
__floatunssidfvfp
__floatunssisfvfp
__floatuntidf
__floatuntisf
__floatuntixf
__gcov_flush
__gedf2
__gedf2vfp
__gesf2
__gesf2vfp
__gnu_f2h_ieee
__gnu_h2f_ieee
__gtdf2
__gtdf2vfp
__gtsf2
__gtsf2vfp
__ledf2
__ledf2vfp
__lesf2
__lesf2vfp
__llvm_profile_CurrentFilename
__llvm_profile_OwnsFilename
__llvm_profile_begin_counters
__llvm_profile_begin_data
__llvm_profile_begin_names
__llvm_profile_end_counters
__llvm_profile_end_data
__llvm_profile_end_names
__llvm_profile_get_magic
__llvm_profile_get_size_for_buffer
__llvm_profile_get_size_for_buffer_internal
__llvm_profile_get_version
__llvm_profile_initialize_file
__llvm_profile_recursive_mkdir
__llvm_profile_register_write_file_atexit
__llvm_profile_reset_counters
__llvm_profile_set_filename
__llvm_profile_write_buffer
__llvm_profile_write_buffer_internal
__llvm_profile_write_file
__lshrdi3
__lshrti3
__ltdf2
__ltdf2vfp
__ltsf2
__ltsf2vfp
__moddi3
__modsi3
__modti3
__muldc3
__muldf3
__muldf3vfp
__muldi3
__mulodi4
__mulosi4
__muloti4
__mulsc3
__mulsf3
__mulsf3vfp
__multi3
__mulvdi3
__mulvsi3
__mulvti3
__mulxc3
__nedf2
__nedf2vfp
__negdf2
__negdi2
__negsf2
__negti2
__negvdi2
__negvsi2
__negvti2
__nesf2
__nesf2vfp
__paritydi2
__paritysi2
__parityti2
__popcountdi2
__popcountsi2
__popcountti2
__powidf2
__powisf2
__powixf2
__subdf3
__subdf3vfp
__subsf3
__subsf3vfp
__subvdi3
__subvsi3
__subvti3
__switch16
__switch32
__switch8
__switchu8
__sync_fetch_and_add_4
__sync_fetch_and_add_8
__sync_fetch_and_and_4
__sync_fetch_and_and_8
__sync_fetch_and_max_4
__sync_fetch_and_max_8
__sync_fetch_and_min_4
__sync_fetch_and_min_8
__sync_fetch_and_nand_4
__sync_fetch_and_nand_8
__sync_fetch_and_or_4
__sync_fetch_and_or_8
__sync_fetch_and_sub_4
__sync_fetch_and_sub_8
__sync_fetch_and_umax_4
__sync_fetch_and_umax_8
__sync_fetch_and_umin_4
__sync_fetch_and_umin_8
__sync_fetch_and_xor_4
__sync_fetch_and_xor_8
__truncdfhf2
__truncdfsf2
__truncdfsf2vfp
__truncsfhf2
__ucmpdi2
__ucmpti2
__udivdi3
__udivmoddi4
__udivmodsi4
__udivmodti4
__udivsi3
__udivti3
__umoddi3
__umodsi3
__umodti3
__unorddf2
__unorddf2vfp
__unordsf2
__unordsf2vfp
atomic_flag_clear
atomic_flag_clear_explicit
atomic_flag_test_and_set
atomic_flag_test_and_set_explicit
atomic_signal_fence
atomic_thread_fence
compilerrt_abort_impl
llvm_delete_flush_function_list
llvm_delete_writeout_function_list
llvm_gcda_increment_indirect_counter
llvm_register_flush_function
llvm_register_writeout_function
llvm_writeout_files
__obfs_tmp#
Obfuscate all strings in the module
obfuscate-module
__stack_chk
clang.arc
__dtrace
section$start$
section$end$
segment$start$
segment$end$
Sanitizer interface function redefined: 
phi-node-folding-threshold
Control the amount of phi node folding to perform (default = 2)
simplifycfg-dup-ret
Duplicate return instructions into unconditional branches
simplifycfg-sink-common
Sink common instructions down to the end block
simplifycfg-hoist-cond-stores
Hoist conditional stores if an unconditional store precedes
.not
.old
or.cond
not.cond
and.cond
switch.edge
magicptr
infloop
switch.early.test
.critedge
brmerge
.mux
switch.selectcmp
switch.select
switch.lookup
switch.tableidx
switch.hole_check
switch.maskindex
switch.shifted
switch.lobit
switch.table
switch.idx.cast
switch.idx.mult
switch.offset
switch.cast
switch.shiftamt
switch.downshift
switch.masked
switch.tableidx.zext
switch.gep
switch.load
inverted.cmp
Remove redundant instructions
instsimplify
error-reporting-is-cold
Treat error-reporting calls as cold
enable-double-float-shrink
Enable unsafe double to float shrinking for math lib calls
endptr
strcmpload
simplify-libcalls
folded strlen(select) to select of constants
strlenfirst
memchr.bounds
memchr.bits
lhsc
lhsv
rhsc
rhsv
chardiff
pow2
powrecip
cttz
ispos
isdigittmp
leninc
sincospi
sinpi
cospi
stderr
Strip all debug info except linetables
strip-nonlinetable-debuginfo
rewrite-map-file
Symbol Rewrite Map
unable to read rewrite map '
unable to parse rewrite map '
DescriptorList node must be a map
rewrite type must be a scalar
rewrite descriptor must be a map
global variable
global alias
unknown rewrite type
descriptor key must be a scalar
descriptor value must be a scalar
source
invalid regex: 
target
transform
naked
unknown key for function
exactly one of transform or target must be specified
descriptor Key must be a scalar
unknown Key for Global Variable
unknown key for Global Alias
Rewrite Symbols
rewrite-symbols
unable to transforn 
 in 
UnifiedUnreachableBlock
UnifiedReturnBlock
UnifiedRetVal
Unify function exit nodes
mergereturn
bb-vectorize-ignore-target-info
Ignore target information
bb-vectorize-req-chain-depth
The required chain depth for vectorization
bb-vectorize-use-chain-depth
Use the chain depth requirement with target information
bb-vectorize-search-limit
The maximum search distance for instruction pairs
bb-vectorize-splat-breaks-chain
Replicating one element to a pair breaks the chain
bb-vectorize-vector-bits
The size of the native vector registers
bb-vectorize-max-iter
The maximum number of pairing iterations
bb-vectorize-pow2-len-only
Don't try to form non-2^n-length vectors
bb-vectorize-max-instr-per-group
The maximum number of pairable instructions per group
bb-vectorize-max-pairs-per-group
The maximum number of candidate instruction pairs per group
bb-vectorize-max-cycle-check-pairs
The maximum number of candidate pairs with which to use a full cycle check
bb-vectorize-no-bools
Don't try to vectorize boolean (i1) values
bb-vectorize-no-ints
Don't try to vectorize integer values
bb-vectorize-no-floats
Don't try to vectorize floating-point values
bb-vectorize-no-pointers
Don't try to vectorize pointer values
bb-vectorize-no-casts
Don't try to vectorize casting (conversion) operations
bb-vectorize-no-math
Don't try to vectorize floating-point math intrinsics
bb-vectorize-no-bitmanip
Don't try to vectorize BitManipulation intrinsics
bb-vectorize-no-fma
Don't try to vectorize the fused-multiply-add intrinsic
bb-vectorize-no-select
Don't try to vectorize select instructions
bb-vectorize-no-cmp
Don't try to vectorize comparison instructions
bb-vectorize-no-gep
Don't try to vectorize getelementptr instructions
bb-vectorize-no-mem-ops
Don't try to vectorize loads and stores
bb-vectorize-aligned-only
Only generate aligned loads and stores
bb-vectorize-no-mem-op-boost
Don't boost the chain-depth contribution of loads and stores
bb-vectorize-fast-dep
Use a fast instruction dependency analysis
bb-vectorize
.v.i
.v.r
enable-if-conversion
Enable if-conversion during vectorization.
vectorizer-min-trip-count
Don't vectorize loops with a constant trip count that is smaller than this value.
enable-mem-access-versioning
Enable symblic stride memory access versioning
enable-interleaved-mem-accesses
Enable vectorization on interleaved memory accesses in a loop
max-interleave-group-factor
Maximum factor for an interleaved access group (default = 8)
force-target-num-scalar-regs
A flag that overrides the target's number of scalar registers.
force-target-num-vector-regs
A flag that overrides the target's number of vector registers.
force-target-max-scalar-interleave
A flag that overrides the target's max interleave factor for scalar loops.
force-target-max-vector-interleave
A flag that overrides the target's max interleave factor for vectorized loops.
force-target-instruction-cost
A flag that overrides the target's expected cost for an instruction to a single constant value. Mostly useful for getting consistent testing.
small-loop-cost
The cost of a loop that is considered 'small' by the interleaver.
loop-vectorize-with-block-frequency
Enable the use of the block frequency analysis to access PGO heuristics minimizing code growth in cold regions and being more aggressive in hot regions.
enable-loadstore-runtime-interleave
Enable runtime interleaving until load/store ports are saturated
vectorize-num-stores-pred
Max number of stores to be predicated behind an if.
enable-ind-var-reg-heur
Count the induction variable only once when interleaving
enable-cond-stores-vec
Enable if predication of stores during vectorization.
max-nested-scalar-reduction-interleave
The maximum interleave count to use when interleaving a scalar reduction in a nested loop.
loop-vectorize
vectorization is not beneficial and is not explicitly forced
loop not vectorized due to NoImplicitFloat attribute
the cost-model indicates that vectorization is not beneficial
the cost-model indicates that interleaving is not beneficial
 and is explicitly disabled or interleave count is set to 1
the cost-model indicates that interleaving is beneficial but is explicitly disabled or interleave count is set to 1
interleaved loop (interleaved count: 
vectorized loop (vectorization width: 
, interleaved count: 
vectorize.width
interleave.count
vectorize.enable
llvm.loop.
loop not vectorized: vectorization and interleaving are explicitly disabled, or vectorize width and interleave count are both set to 1
vectorization is explicitly disabled
use -Rpass-analysis=loop-vectorize for more info
 (Force=true
, Vector Width=
, Interleave Count=
loop not vectorized: 
loop control flow is not understood by vectorizer
loop is not the innermost loop
could not determine number of loop iterations
if-conversion is disabled
loop contains a switch statement
control flow cannot be substituted for a select
no-nans-fp-math
value could not be identified as an induction or reduction variable
control flow not understood by vectorizer
use of induction value outside of the loop is not handled by vectorizer
value that could not be identified as reduction is used outside the loop
call instruction cannot be vectorized
intrinsic instruction cannot be vectorized
instruction return type cannot be vectorized
store instruction cannot be vectorized
value cannot be used outside the loop
loop induction variable could not be identified
write to a loop invariant address could not be vectorized
failed explicitly specified loop vectorization
failed explicitly specified loop interleaving
runtime pointer checks needed. Enable vectorization of this loop with '#pragma clang loop vectorize(enable)' when compiling with -Os/-Oz
store that is conditionally executed prevents vectorization
unable to calculate the loop count due to complex control flow
cannot optimize for size and vectorize at the same time. Enable vectorization of this loop with '#pragma clang loop vectorize(enable)' when compiling with -Os/-Oz
vectorization requires changes in the order of operations, however IEEE 754 floating-point operations are not commutative
cannot prove pointers refer to independent arrays in memory. The loop requires 
 runtime independence checks to vectorize the loop, but that would exceed the limit of 
 checks
cond.store
.cloned
else
gep.indvar.base
gep.indvar.idx
wide.masked.load
wide.load
wide.vec
strided.vec
interleaved.vec
broadcast
.splatinsert
.splat
induction
reverse
minmax.ident
rdx.vec.exit.phi
bin.rdx
rdx.shuf
bc.merge.rdx
vec.phi
predphi
normalized.idx
offset.idx
next.gep
insert.gep
backedge.ptrcnt.to.int
backedge.overflow
vector.body
middle.block
scalar.ph
index
overflow.checked
ptrcnt.to.int
cnt.cast
end.idx
n.mod.vf
n.vec
end.idx.rnd.down
cmp.zero
vector.ph
vector.stridecheck
vector.memcheck
resume.val
trunc.resume.val
bc.resume.val
bc.trunc.resume.val
cast.crd
ind.end
ptr.ind.end
new.indc.resume.val
cmp.n
index.next
stride.chk
stride.not.one
slp-threshold
Only vectorize if you gain more than this number 
slp-vectorize-hor
Attempt to vectorize horizontal reductions
slp-vectorize-hor-store
Attempt to vectorize horizontal reductions feeding into a store
slp-max-reg-size
Attempt to vectorize for this register size in bits
slp-vectorizer
rdx.shuf.l
rdx.shuf.r
require<lcg>
invalidate<lcg>
require<no-op-module>
invalidate<no-op-module>
require<targetlibinfo>
invalidate<targetlibinfo>
invalidate<all>
no-op-module
print
print-cg
verify
require<no-op-cgscc>
invalidate<no-op-cgscc>
no-op-cgscc
require<assumptions>
invalidate<assumptions>
require<domtree>
invalidate<domtree>
require<loops>
invalidate<loops>
require<no-op-function>
invalidate<no-op-function>
require<targetir>
invalidate<targetir>
early-cse
instcombine
no-op-function
lower-expect
print<assumptions>
print<domtree>
print<loops>
simplify-cfg
verify<domtree>
function(
cgscc(
module(
Lazy CallGraph Analysis
NoOpModuleAnalysis
TargetLibraryAnalysis
NoOpCGSCCAnalysis
AssumptionAnalysis
DominatorTreeAnalysis
LoopAnalysis
NoOpFunctionAnalysis
TargetIRAnalysis
Running analysis: 
RequireAnalysisPass
InvalidateAnalysisPass
InvalidateAllAnalysesPass
NoOpModulePass
LazyCallGraphPrinterPass
NoOpCGSCCPass
EarlyCSEPass
InstCombinePass
NoOpFunctionPass
LowerExpectIntrinsicPass
PrintFunctionPass
AssumptionPrinterPass
DominatorTreePrinterPass
LoopPrinterPass
SimplifyCFGPass
DominatorTreeVerifierPass
PassManager
CGSCCToFunctionPassAdaptor
ModuleToPostOrderCGSCCPassAdaptor
ModuleToFunctionPassAdaptor
>> Catch TypeInfos <<
TypeInfo 
>> Filter TypeInfos <<
FilterInfo 
Start of file scope inline assembly
End of file scope inline assembly
' is already defined
$tlv$init
_tlv_bootstrap
Address taken block that was later removed
' is a protected alias
' label emitted multiple times to assembly file
implicit-def: 
avoids zero-length function
Address of block that was removed by CodeGen
func_end
__morestack_addr
__morestack
exception
func_begin
.constructors_used
.destructors_used
Unsupported expression in static initializer: 
_set_
Block address taken
 BB#
no GCMetadataPrinter registered for GC: 
Debug Info Emission
CodeView Line Tables
DWARF Emission
DWARF Exception Writer
__emutls_t.
__emutls_v.
-byte Reload
-byte Folded Reload
-byte Spill
-byte Folded Spill
 Reload Reuse
DEBUG_VALUE: 
 [bit_piece offset=
 size=
 <- 
(long double) 
kill:
<def>
<kill>
0x%llx
  in Loop: Header=BB
 Depth=
This 
Inner 
Loop Header: Depth=
Parent Loop BB
Child Loop BB
 Depth 
DW_CFA_offset + Reg (
 Encoding = 
Encoding = 
nop (could not find a dwarf register number)
Abbrev [
] 0x
End Of Children Mark
Abbreviation Code
EOM(3)
absptr
omit
pcrel
udata4
udata8
sdata4
sdata8
pcrel udata4
pcrel sdata4
pcrel udata8
pcrel sdata8
indirect pcrel udata4
indirect pcrel sdata4
indirect pcrel udata8
indirect pcrel sdata8
<unknown encoding>
<inline asm>
Inline asm not supported by this streamer because we don't have an asm parser for this target
Error parsing inline asm
private
comment
Unknown special formatter '
' for machine instr: 
Nested variants found in inline asm string: '
Unterminated ${:foo} operand in inline asm string: '
Bad $ operand number in inline asm string: '
Bad ${:} expression in inline asm string: '
Bad ${} expression in inline asm string: '
Invalid $ operand number in inline asm string: '
invalid operand in inline asm: '
.intel_syntax
.att_syntax
debug_loc
EOM(1)
EOM(2)
Header Magic
Header Version
Header Hash Function
Header Bucket Count
Header Hash Count
Header Data Length
HeaderData Die Offset Base
HeaderData Atom Count
Bucket 
Hash in Bucket 
Offset in Bucket 
Num DIEs
  Module string offset: 
  Tag: 
  Flags: 0
debug_ranges
cu_begin
disable-debug-info-print
Disable debug info printing
use-unknown-locations
Make an absence of debug location information explicit.
generate-gnu-dwarf-pub-sections
Generate GNU-style pubnames and pubtypes
generate-arange-section
Generate dwarf aranges
debugger-tune
Tune debug info for a particular debugger
lldb
SCE targets (e.g. PS4)
dwarf-accel-tables
Output prototype dwarf accelerator tables.
Default
Default for platform
Enable
Enabled
Disable
split-dwarf
Output DWARF5 split debug info.
generate-dwarf-pub-sections
Generate DWARF pubnames and pubtypes sections
dwarf-linkage-names
Emit DWARF linkage-name attributes.
info_string
skel_string
Names
ObjC
namespac
external_types
Length of Public 
 Info
_begin
_end
DWARF Version
Offset of Compilation Unit Info
Compilation Unit Length
DIE offset
Kind: 
External Name
End Mark
Types
Loc expr size
Length of ARange Set
DWARF Arange version number
Offset Into Debug Info Section
Address Size (in bytes)
Segment Size (in bytes)
ARange terminator
DWARF Debug Writer
super-register
sub-register
string offset=
generate-type-units
Generate DWARF4 type units.
__forwarding
(anonymous namespace)
sizetype
Length of Unit
DWARF version number
Offset Into Abbrev. Section
Type Signature
Type DIE Offset
GCC_except_table
@LPStart
@TType
@TType base offset
Call site
Call site table length
>> Call Site 
  On exception at call site 
  Action: cleanup
  Action: 
  Call between 
    has no landing pad
    jumps to 
  On action: cleanup
  On action: 
>> Action Record 
  Catch TypeInfo 
  Filter TypeInfo 
  Cleanup
  No further actions
  Continue to action 
$cppxdata$
$stateUnwindMap$
$tryMap$
$ip2state$
$handlerMap$
\..\
File index to string table offset subsection
String table
Symbol subsection for 
Line table subsection for 
Segment for file '
' begins
combiner-alias-analysis
Enable DAG combiner alias-analysis heuristics
combiner-global-alias-analysis
Enable DAG combiner's use of IR alias analysis
combiner-use-tbaa
Enable DAG combiner's use of TBAA
combiner-stress-load-slicing
Bypass the profitability model of load slicing
combiner-split-load-index
DAG combiner may split indexing from loads
__sync_synchronize
Attempt at an invalid promotion-related conversion
enable-legalize-types-checking
Unprocessed value in a map!
Value with legal type was transformed!
Processed value not in any map!
Value in multiple maps!
 ReplacedValues
 PromotedIntegers
 SoftenedFloats
 ScalarizedVectors
 ExpandedIntegers
 ExpandedFloats
 SplitVectors
 WidenedVectors
Do not know how to scalarize the result of this operator!
Do not know how to split the result of this operator!
Do not know how to split this operator's operand!
disable-dfa-sched
Disable use of DFA during scheduling
dfa-sched-reg-pressure-threshold
Track reg pressure and switch priority to in-depth
list-burr
Bottom-up register reduction list scheduling
Similar to list-burr but schedules in source order when possible
list-hybrid
Bottom-up register pressure aware list scheduling which tries to balance latency and register pressure
list-ilp
Bottom-up register pressure aware list scheduling which tries to balance ILP and register pressure
disable-sched-cycles
Disable cycle-level precision during preRA scheduling
disable-sched-reg-pressure
Disable regpressure priority in sched=list-ilp
disable-sched-live-uses
Disable live use priority in sched=list-ilp
disable-sched-vrcycle
Disable virtual register cycle interference checks
disable-sched-physreg-join
Disable physreg def-use affinity
disable-sched-stalls
Disable no-stall priority in sched=list-ilp
disable-sched-critical-path
Disable critical path priority in sched=list-ilp
disable-sched-height
Disable scheduled-height priority in sched=list-ilp
disable-2addr-hack
Disable scheduler's two-address hack
max-sched-reorder
Number of instructions to allow ahead of the critical path in sched=list-ilp
sched-avg-ipc
Average inst/cycle whan no target itinerary exists.
Can't handle live physical register dependency!
sched-high-latency-cycles
Roughly estimate the number of cycles that 'long latency'instructions take for targets with no itinerary
sunit-dag.
limit-float-precision
Generate low-precision inline sequences for some float libcalls
enable-fmf-dag
Enable fast-math-flags for DAG nodes
visitCleanupRet not yet implemented!
visitCatchEndPad not yet implemented!
visitCatchRet not yet implemented!
visitCatchPad not yet implemented!
visitTerminatePad not yet implemented!
visitCleanupPad not yet implemented!
Cannot generate unaligned atomic load
Cannot generate unaligned atomic store
_setjmp
_longjmp
couldn't allocate output register for constraint '
inline asm not supported yet: don't know how to handle tied indirect register inputs
inline asm error: This value type register class is not natively supported!
invalid operand for inline asm constraint '
Don't know how to handle indirect register inputs yet for constraint '
couldn't allocate input reg for constraint '
non-trivial scalar-to-vector conversion
, possible invalid constraint for vector type
scalar-to-vector conversion failed
<<Unknown DAG Node>>
<<Unknown Machine Node #
<<Unknown Target Node #
<<Unknown Node #
Prefetch
AtomicFence
AtomicCmpSwap
AtomicCmpSwapWithSuccess
AtomicSwap
AtomicLoadAdd
AtomicLoadSub
AtomicLoadAnd
AtomicLoadOr
AtomicLoadXor
AtomicLoadNand
AtomicLoadMin
AtomicLoadMax
AtomicLoadUMin
AtomicLoadUMax
AtomicLoad
AtomicStore
PCMarker
ReadCycleCounter
SrcValue
MDNode
EntryToken
TokenFactor
AssertSext
AssertZext
BasicBlock
ValueType
Register
RegisterMask
OpaqueConstant
Constant
ConstantFP
GlobalAddress
GlobalTLSAddress
FrameIndex
GLOBAL_OFFSET_TABLE
RETURNADDR
FRAMEADDR
LOCAL_RECOVER
READ_REGISTER
WRITE_REGISTER
FRAME_TO_ARGS_OFFSET
EH_RETURN
EH_SJLJ_SETJMP
EH_SJLJ_LONGJMP
EH_SJLJ_SETUP_DISPATCH
TargetIndex
ExternalSymbol
BlockAddress
BUILD_VECTOR
OpaqueTargetConstant
TargetConstant
TargetConstantFP
TargetGlobalAddress
TargetGlobalTLSAddress
TargetFrameIndex
TargetJumpTable
TargetConstantPool
TargetExternalSymbol
MCSymbol
TargetBlockAddress
CopyToReg
CopyFromReg
merge_values
inlineasm
eh_label
handlenode
fminnum
fmaxnum
fminnan
fmaxnan
fneg
fsqrt
fsin
fcos
fsincos
ftrunc
ffloor
fceil
frint
fnearbyint
fround
fexp
fexp2
flog
flog2
flog10
mulhu
mulhs
smul_lohi
umul_lohi
sdivrem
udivrem
rotl
rotr
fmad
fcopysign
fgetsign
fpow
smin
fpowi
setcc
vselect
select_cc
insert_vector_elt
extract_vector_elt
concat_vectors
insert_subvector
extract_subvector
scalar_to_vector
vector_shuffle
carry_false
addc
adde
saddo
uaddo
ssubo
usubo
smulo
umulo
sube
shl_parts
sra_parts
srl_parts
uabsdiff
sabsdiff
sign_extend
zero_extend
any_extend
sign_extend_inreg
any_extend_vector_inreg
sign_extend_vector_inreg
zero_extend_vector_inreg
truncate
fp_round
flt_rounds
fp_round_inreg
fp_extend
sint_to_fp
uint_to_fp
fp_to_sint
fp_to_uint
fp16_to_fp
fp_to_fp16
cvt_ff
cvt_fs
cvt_fu
cvt_sf
cvt_uf
cvt_ss
cvt_su
cvt_us
cvt_uu
brind
br_jt
brcond
br_cc
callseq_start
callseq_end
masked_load
masked_store
masked_gather
masked_scatter
vaarg
vacopy
vaend
vastart
dynamic_stackalloc
extract_element
build_pair
stacksave
stackrestore
debugtrap
lifetime.start
lifetime.end
gc_transition.start
gc_transition.end
ctpop
cttz_zero_undef
ctlz
ctlz_zero_undef
init_trampoline
adjust_trampoline
setoeq
setogt
setoge
setolt
setole
setone
seto
setuo
setueq
setugt
setuge
setult
setule
setune
seteq
setgt
setge
setlt
setle
setne
settrue
settrue2
setfalse
setfalse2
<pre-inc>
<pre-dec>
<post-inc>
<post-dec>
Mem:
<APFloat(
 [TF=
<null>
, anyext
, sext
, zext
, trunc to 
 [ORD=
 [ID=
SelectionDAG has 
 nodes:
: <multiple use>
fast-isel-verbose
Enable verbose messages in the "fast" instruction selector
fast-isel-abort
Enable abort calls when "fast" instruction selection fails to lower an instruction: 0 disable the abort, 1 will abort but for args, calls and terminators, 2 will also abort for argument lowering, and 3 will never fallback to SelectionDAG.
use-mbpi
use Machine Branch Probability Info
pre-RA-sched
Instruction schedulers available (before register allocation):
Best scheduler for the target
Instruction Selection and Scheduling
DAG Combining 1
Type Legalization
DAG Combining after legalize types
Vector Legalization
Type Legalization 2
DAG Combining after legalize vectors
DAG Legalization
DAG Combining 2
Instruction Selection
Instruction Scheduling
Instruction Creation
Instruction Scheduling Cleanup
FastISel didn't lower all arguments
FastISel missed call: 
FastISel didn't select the entire block
FastISel missed terminator: 
FastISel miss: 
Could not match memory address.  Inline asm failure!
Cannot select: 
In function: 
intrinsic %
target intrinsic %
unknown intrinsic #
SelectionDAG::viewGraph is only available in debug builds on 
SelectionDAG::clearGraphAttrs is only available in debug builds
 on systems with Graphviz or gv!
SelectionDAG::setGraphAttrs is only available in debug builds
SelectionDAG::getGraphAttrs is only available in debug builds
SelectionDAG::setGraphColor is only available in debug builds
SelectionDAG::setSubgraphColor is only available in debug builds
CROSS RC COPY
plaintext=circle
GraphRoot
color=blue,style=dashed
 label ="
statepoint-lowering
Maximum number of stack slots required for a singe statepoint
vliw-td
VLIW scheduler
Unsupported library call operation!
memory
Indirect operand for inline asm not a pointer!
Unsupported asm: input constraint with a matching output constraint of incompatible type!
argument to '__builtin_return_address' must be a constant integer
__emutls_get_address
__clear_cache
Named registers not implemented for this target
constant bigger than 64 bits detected!
constant bigger than 128 bits detected!
end of file in COMDAT variable name
Null bytes are not allowed in names
end of file in string constant
end of file in global variable name
invalid value number (too large)!
bitwidth for integer type out of range!
define
constant
available_externally
linkonce
linkonce_odr
weak
weak_odr
appending
dllimport
dllexport
hidden
protected
unnamed_addr
externally_initialized
extern_weak
external
thread_local
localdynamic
initialexec
localexec
caller
tail
musttail
notail
triple
unwind
deplibs
datalayout
volatile
atomic
unordered
monotonic
acquire
release
acq_rel
seq_cst
singlethread
nnan
ninf
arcp
exact
inbounds
addrspace
section
module
sideeffect
inteldialect
prefix
prologue
agx_ticc
agx_pscc
agx_vscc
agx_sscc
agx_sfcc
agx_sicc
agx_clcc
agx_dscc
agx_prcc
agx_mrcc
comdat
xchg
nand
umin
blockaddress
distinct
uselistorder_bb
personality
cleanup
catch
filter
DW_TAG_
DW_ATE_
DW_VIRTUALITY_
DW_LANG_
DW_OP_
DIFlag
expected end of string
expected function name in blockaddress
use of undefined type '%
use of undefined type named '
use of undefined comdat '$
use of undefined value '@
use of undefined metadata '!
expected top-level entity
expected 'module asm'
unknown target property
expected '=' after target triple
expected '=' after target datalayout
expected '=' after deplibs
expected ']' at end of list
expected '=' after name
expected 'type' after '='
non-struct types may not be recursive
expected 'type' after name
expected 'global' or 'constant'
variable expected to be numbered '%
expected '=' in global variable
expected '=' here
expected comdat keyword
expected comdat type
unknown selection kind
redefinition of comdat '$
Expected '!' here
Expected '{' here
expected end of metadata node
unexpected type in metadata definition
Metadata id is already used
invalid linkage type for alias
symbol with local linkage must have default visibility
invalid aliasee
An alias must have pointer type
redefinition of global named '@
forward reference and definition of alias have different types
invalid type for global variable
redefinition of global '@
forward reference and definition of global have different types
expected global section string
unknown global variable property!
expected attribute group id
expected '{' here
expected end of attribute group
attribute group has no attributes
unterminated attribute group
cannot have an attribute group reference in an attribute group
invalid use of attribute on a function
invalid use of parameter-only attribute on a function
global variable reference must have pointer type
' defined with type '
expected string constant
expected integer
expected 32-bit integer (too large)
expected localdynamic, initialexec or localexec
expected ')' after thread local model
expected '(' in address space
expected ')' in address space
invalid use of function-only attribute
invalid use of parameter-only attribute
invalid use of attribute on return type
expected metadata after comma
alignment is not a power of two
huge alignments are not supported yet
expected '('
expected ')'
dereferenceable bytes must be non-zero
expected metadata or 'align'
Expected ordering on atomic instruction
stack alignment is not a power of two
expected ',' as start of index list
expected index
expected '>' at end of packed struct
void type only allowed for function results
basic block pointers are invalid
pointers to void are invalid - use i8* instead
pointer to this type is invalid
pointers to void are invalid; use i8* instead
expected '*' in address space
expected '(' in call
expected ',' in argument list
unexpected ellipsis in argument list for 
non-musttail call
musttail call in non-varargs function
expected ')' at end of argument list
expected '...' at end of argument list for musttail call in varargs function
argument can not have void type
invalid type for function argument
invalid function return type
argument name invalid in function type
argument attributes invalid in function type
redefinition of type
forward references to non-struct type
expected '>' in packed struct
invalid element type for struct
expected '}' at end of struct
expected number in address space
expected 'x' after element count
expected end of sequential type
zero element vector is illegal
size too large for vector
invalid vector element type
invalid array element type
use of undefined value '%
' is not a basic block
invalid use of a non-first-class type
instructions returning void cannot have a name
instruction expected to be numbered '%
instruction forward referenced with type '
multiple definition of local value named '
expected value token
expected end of struct constant
expected end of packed struct
expected end of constant
constant vector must not be empty
vector elements must have integer, pointer or floating point type
vector element #
 is not of type '
expected end of array constant
invalid array element type: 
array element #
expected string
expected comma in inline asm expression
expected constraint string
expected '(' in block address expression
expected comma in block address expression
expected ')' in block address expression
expected basic block name in blockaddress
cannot take blockaddress inside a declaration
referenced value is not a basic block
cannot take address of numeric label after the function is defined
expected '(' after constantexpr cast
expected 'to' in constantexpr cast
expected ')' at end of constantexpr cast
invalid cast opcode for cast from '
expected '(' in extractvalue constantexpr
expected ')' in extractvalue constantexpr
extractvalue operand must be aggregate type
invalid indices for extractvalue
expected '(' in insertvalue constantexpr
expected comma in insertvalue constantexpr
expected ')' in insertvalue constantexpr
insertvalue operand must be aggregate type
invalid indices for insertvalue
insertvalue operand and field disagree in type: '
' instead of '
expected '(' in compare constantexpr
expected comma in compare constantexpr
expected ')' in compare constantexpr
compare operands must have the same type
fcmp requires floating point operands
icmp requires pointer or integer operands
expected '(' in binary constantexpr
expected comma in binary constantexpr
expected ')' in binary constantexpr
operands of constexpr must have same type
nuw only applies to integer operations
nsw only applies to integer operations
constexpr requires integer operands
constexpr requires fp operands
expected '(' in logical constantexpr
expected comma in logical constantexpr
expected ')' in logical constantexpr
constexpr requires integer or integer vector operands
expected '(' in constantexpr
expected comma after getelementptr's type
expected ')' in constantexpr
base of getelementptr must be a pointer
explicit pointee type doesn't match operand's pointee type
getelementptr index must be an integer
getelementptr index type missmatch
getelementptr vector index has a wrong number of elements
base element of getelementptr must be sized
invalid getelementptr indices
expected three operands to select
expected three operands to shufflevector
invalid operands to shufflevector
expected two operands to extractelement
invalid extractelement operands
expected three operands to insertelement
invalid insertelement operands
global values must be constants
expected comdat variable
expected ')' after comdat var
comdat cannot be unnamed
expected '!' here
DILocation
DIExpression
GenericDINode
DISubrange
DIEnumerator
DIBasicType
DIDerivedType
DICompositeType
DISubroutineType
DIFile
DICompileUnit
DISubprogram
DILexicalBlock
DILexicalBlockFile
DINamespace
DIModule
DITemplateTypeParameter
DITemplateValueParameter
DIGlobalVariable
DILocalVariable
DIObjCProperty
DIImportedEntity
expected metadata type
missing required field 'scope'
missing required field 'tag'
missing required field 'count'
missing required field 'name'
missing required field 'value'
missing required field 'baseType'
missing required field 'types'
missing required field 'filename'
missing required field 'directory'
missing 'distinct', required for !DICompileUnit
missing required field 'language'
missing required field 'file'
missing required field 'discriminator'
missing required field 'type'
expected '(' here
invalid DWARF op '
expected unsigned integer
element too large, limit is 
expected ')' here
invalid metadata-value-metadata roundtrip
expected metadata operand
functions are not values, refer to them as pointers
invalid use of function-local name
invalid type for inline asm constraint string
integer constant must have integer type
floating point constant invalid for type
floating point constant does not have type '
null must be a pointer type
invalid type for undef constant
invalid empty array initializer
invalid type for null constant
constant expression type mismatch
initializer with struct type has wrong # elements
packed'ness of initializer and type don't match
element 
 of struct initializer doesn't match struct element type
expected a constant value
expected a basic block
invalid linkage for function definition
invalid linkage for function declaration
invalid function linkage type
function expected to be numbered '%
expected function name
expected '(' in function argument list
'builtin' attribute not valid on function
functions with 'sret' argument must return void
invalid forward reference to function as global value!
invalid forward reference to function '
' with wrong type!
invalid redefinition of function '
redefinition of function '@
type of definition and forward reference of '@
' disagree
redefinition of argument '%
expected '{' in function body
function body requires at least one basic block
unable to create block named '
expected '=' after instruction id
expected '=' after instruction name
found end of file when expecting more instructions
expected instruction opcode
expected fcmp predicate (e.g. 'oeq')
expected icmp predicate (e.g. 'eq')
value doesn't match function result type '
branch condition must have 'i1' type
expected ',' after branch condition
expected ',' after true destination
expected ',' after switch condition
expected '[' with switch table
switch condition must have integer type
expected ',' after case value
duplicate case value in switch
case value is not a constant integer
expected ',' after indirectbr address
expected '[' with indirectbr
indirectbr address must have pointer type
expected ']' at end of block list
expected 'to' in invoke
expected 'unwind' in invoke
Invalid result type for LLVM function
too many arguments specified
argument is not of expected type '
not enough parameters specified for call
invoke instructions may not have an alignment
expected '[' in cleanuppad
expected 'unwind' in cleanupret
expected 'caller' in cleanupret
expected 'to' in catchpad
expected 'unwind' in catchpad
expected 'unwind' in terminatepad
expected 'caller' in terminatepad
expected 'unwind' in catchendpad
expected ',' in arithmetic operation
invalid operand type for instruction
expected ',' in logical operation
instruction requires integer or integer vector operands
expected ',' after compare value
icmp requires integer operands
expected 'to' after cast value
expected ',' after select condition
expected ',' after select value
expected ',' after vaarg operand
va_arg requires operand with first class type
expected ',' after extract value
expected ',' after insertelement value
expected ',' after shuffle mask
expected ',' after shuffle value
invalid shufflevector operands
expected '[' in phi value list
expected ']' in phi value list
phi node must have first class type
expected 'catch' or 'filter' clause type
'catch' clause has an invalid type
'filter' clause has an invalid type
clause argument must be a constant
expected 'tail call'
call instructions may not have an alignment
invalid type for alloca
element count must have integer type
expected comma after load's type
load operand must be a pointer to a first class type
atomic load must have explicit non-zero alignment
atomic load cannot use Release ordering
expected ',' after store operand
store operand must be a pointer
store operand must be a first class value
stored value and pointer type do not match
atomic store must have explicit non-zero alignment
atomic store cannot use Acquire ordering
expected ',' after cmpxchg address
expected ',' after cmpxchg cmp operand
cmpxchg cannot be unordered
cmpxchg must be at least as ordered on success as failure
cmpxchg operand must be a pointer
compare value and pointer type do not match
new value and pointer type do not match
cmpxchg operand must be an integer
expected binary operation in atomicrmw
expected ',' after atomicrmw address
atomicrmw cannot be unordered
atomicrmw operand must be a pointer
atomicrmw value and pointer type do not match
atomicrmw operand must be an integer
fence cannot be unordered
fence cannot be monotonic
expected comma after insertvalue operand
value has no uses
value only has one use
wrong number of indexes, expected 
expected non-empty list of uselistorder indexes
expected '}' here
expected >= 2 uselistorder indexes
expected distinct uselistorder indexes in range [0, size)
expected uselistorder indexes to change the order
expected uselistorder directive
expected comma in uselistorder directive
expected comma in uselistorder_bb directive
expected function name in uselistorder_bb
invalid function forward reference in uselistorder_bb
invalid declaration in uselistorder_bb
invalid numeric label in uselistorder_bb
expected basic block name in uselistorder_bb
invalid basic block in uselistorder_bb
expected basic block in uselistorder_bb
expected type
expected field label here
invalid field '
field '
' cannot be specified more than once
value for '
' too large, limit is 
' cannot be null
operands
expected DWARF tag
invalid DWARF tag
' cannot be empty
expected signed integer
' too small, limit is 
expected DWARF type attribute encoding
invalid DWARF type attribute encoding
expected debug info flag
invalid debug info flag flag '
expected DWARF language
invalid DWARF language
expected 'true' or 'false'
expected DWARF virtuality code
invalid DWARF virtuality code
expected constant
<string>
llvm.sampleprof
Success
Invalid file format (bad magic)
Unsupported format version
Too much profile data
Truncated profile data
Malformed profile data
Unrecognized profile encoding format
 sampled lines
line offset: 
, discriminator: 
, number of samples: 
, calls:
^([^0-9].*):([0-9]+):([0-9]+)$
^([0-9]+)\.?([0-9]+)?: ([0-9]+)(.*)$
 +([^0-9 ][^ ]*):([0-9]+)
Expected 'mangled_name:NUM:NUM', found 
Expected 'NUM[.NUM]: NUM[ mangled_name:NUM]*', found 
Expected 'mangled_name:NUM', found 
__.SYMDEF
__.SYMDEF SORTED
/SYM64/
Sections with relocations should have an address of 0
COFF-i386
COFF-x86-64
COFF-ARM
COFF-ARM64
COFF-<unknown arch>
IMAGE_REL_AMD64_ABSOLUTE
IMAGE_REL_AMD64_ADDR64
IMAGE_REL_AMD64_ADDR32
IMAGE_REL_AMD64_ADDR32NB
IMAGE_REL_AMD64_REL32
IMAGE_REL_AMD64_REL32_1
IMAGE_REL_AMD64_REL32_2
IMAGE_REL_AMD64_REL32_3
IMAGE_REL_AMD64_REL32_4
IMAGE_REL_AMD64_REL32_5
IMAGE_REL_AMD64_SECTION
IMAGE_REL_AMD64_SECREL
IMAGE_REL_AMD64_SECREL7
IMAGE_REL_AMD64_TOKEN
IMAGE_REL_AMD64_SREL32
IMAGE_REL_AMD64_PAIR
IMAGE_REL_AMD64_SSPAN32
IMAGE_REL_ARM_ABSOLUTE
IMAGE_REL_ARM_ADDR32
IMAGE_REL_ARM_ADDR32NB
IMAGE_REL_ARM_BRANCH24
IMAGE_REL_ARM_BRANCH11
IMAGE_REL_ARM_TOKEN
IMAGE_REL_ARM_BLX24
IMAGE_REL_ARM_BLX11
IMAGE_REL_ARM_SECTION
IMAGE_REL_ARM_SECREL
IMAGE_REL_ARM_MOV32A
IMAGE_REL_ARM_MOV32T
IMAGE_REL_ARM_BRANCH20T
IMAGE_REL_ARM_BRANCH24T
IMAGE_REL_ARM_BLX23T
IMAGE_REL_I386_ABSOLUTE
IMAGE_REL_I386_DIR16
IMAGE_REL_I386_REL16
IMAGE_REL_I386_DIR32
IMAGE_REL_I386_DIR32NB
IMAGE_REL_I386_SEG12
IMAGE_REL_I386_SECTION
IMAGE_REL_I386_SECREL
IMAGE_REL_I386_TOKEN
IMAGE_REL_I386_SECREL7
IMAGE_REL_I386_REL32
R_X86_64_NONE
R_X86_64_64
R_X86_64_PC32
R_X86_64_GOT32
R_X86_64_PLT32
R_X86_64_COPY
R_X86_64_GLOB_DAT
R_X86_64_JUMP_SLOT
R_X86_64_RELATIVE
R_X86_64_GOTPCREL
R_X86_64_32
R_X86_64_32S
R_X86_64_16
R_X86_64_PC16
R_X86_64_8
R_X86_64_PC8
R_X86_64_DTPMOD64
R_X86_64_DTPOFF64
R_X86_64_TPOFF64
R_X86_64_TLSGD
R_X86_64_TLSLD
R_X86_64_DTPOFF32
R_X86_64_GOTTPOFF
R_X86_64_TPOFF32
R_X86_64_PC64
R_X86_64_GOTOFF64
R_X86_64_GOTPC32
R_X86_64_GOT64
R_X86_64_GOTPCREL64
R_X86_64_GOTPC64
R_X86_64_GOTPLT64
R_X86_64_PLTOFF64
R_X86_64_SIZE32
R_X86_64_SIZE64
R_X86_64_GOTPC32_TLSDESC
R_X86_64_TLSDESC_CALL
R_X86_64_TLSDESC
R_X86_64_IRELATIVE
R_386_NONE
R_386_32
R_386_PC32
R_386_GOT32
R_386_PLT32
R_386_COPY
R_386_GLOB_DAT
R_386_JUMP_SLOT
R_386_RELATIVE
R_386_GOTOFF
R_386_GOTPC
R_386_32PLT
R_386_TLS_TPOFF
R_386_TLS_IE
R_386_TLS_GOTIE
R_386_TLS_LE
R_386_TLS_GD
R_386_TLS_LDM
R_386_16
R_386_PC16
R_386_8
R_386_PC8
R_386_TLS_GD_32
R_386_TLS_GD_PUSH
R_386_TLS_GD_CALL
R_386_TLS_GD_POP
R_386_TLS_LDM_32
R_386_TLS_LDM_PUSH
R_386_TLS_LDM_CALL
R_386_TLS_LDM_POP
R_386_TLS_LDO_32
R_386_TLS_IE_32
R_386_TLS_LE_32
R_386_TLS_DTPMOD32
R_386_TLS_DTPOFF32
R_386_TLS_TPOFF32
R_386_TLS_GOTDESC
R_386_TLS_DESC_CALL
R_386_TLS_DESC
R_386_IRELATIVE
R_386_NUM
R_MIPS_NONE
R_MIPS_16
R_MIPS_32
R_MIPS_REL32
R_MIPS_26
R_MIPS_HI16
R_MIPS_LO16
R_MIPS_GPREL16
R_MIPS_LITERAL
R_MIPS_GOT16
R_MIPS_PC16
R_MIPS_CALL16
R_MIPS_GPREL32
R_MIPS_UNUSED1
R_MIPS_UNUSED2
R_MIPS_UNUSED3
R_MIPS_SHIFT5
R_MIPS_SHIFT6
R_MIPS_64
R_MIPS_GOT_DISP
R_MIPS_GOT_PAGE
R_MIPS_GOT_OFST
R_MIPS_GOT_HI16
R_MIPS_GOT_LO16
R_MIPS_SUB
R_MIPS_INSERT_A
R_MIPS_INSERT_B
R_MIPS_DELETE
R_MIPS_HIGHER
R_MIPS_HIGHEST
R_MIPS_CALL_HI16
R_MIPS_CALL_LO16
R_MIPS_SCN_DISP
R_MIPS_REL16
R_MIPS_ADD_IMMEDIATE
R_MIPS_PJUMP
R_MIPS_RELGOT
R_MIPS_JALR
R_MIPS_TLS_DTPMOD32
R_MIPS_TLS_DTPREL32
R_MIPS_TLS_DTPMOD64
R_MIPS_TLS_DTPREL64
R_MIPS_TLS_GD
R_MIPS_TLS_LDM
R_MIPS_TLS_DTPREL_HI16
R_MIPS_TLS_DTPREL_LO16
R_MIPS_TLS_GOTTPREL
R_MIPS_TLS_TPREL32
R_MIPS_TLS_TPREL64
R_MIPS_TLS_TPREL_HI16
R_MIPS_TLS_TPREL_LO16
R_MIPS_GLOB_DAT
R_MIPS_PC21_S2
R_MIPS_PC26_S2
R_MIPS_PC18_S3
R_MIPS_PC19_S2
R_MIPS_PCHI16
R_MIPS_PCLO16
R_MIPS16_26
R_MIPS16_GPREL
R_MIPS16_GOT16
R_MIPS16_CALL16
R_MIPS16_HI16
R_MIPS16_LO16
R_MIPS16_TLS_GD
R_MIPS16_TLS_LDM
R_MIPS16_TLS_DTPREL_HI16
R_MIPS16_TLS_DTPREL_LO16
R_MIPS16_TLS_GOTTPREL
R_MIPS16_TLS_TPREL_HI16
R_MIPS16_TLS_TPREL_LO16
R_MIPS_COPY
R_MIPS_JUMP_SLOT
R_MICROMIPS_26_S1
R_MICROMIPS_HI16
R_MICROMIPS_LO16
R_MICROMIPS_GPREL16
R_MICROMIPS_LITERAL
R_MICROMIPS_GOT16
R_MICROMIPS_PC7_S1
R_MICROMIPS_PC10_S1
R_MICROMIPS_PC16_S1
R_MICROMIPS_CALL16
R_MICROMIPS_GOT_DISP
R_MICROMIPS_GOT_PAGE
R_MICROMIPS_GOT_OFST
R_MICROMIPS_GOT_HI16
R_MICROMIPS_GOT_LO16
R_MICROMIPS_SUB
R_MICROMIPS_HIGHER
R_MICROMIPS_HIGHEST
R_MICROMIPS_CALL_HI16
R_MICROMIPS_CALL_LO16
R_MICROMIPS_SCN_DISP
R_MICROMIPS_JALR
R_MICROMIPS_HI0_LO16
R_MICROMIPS_TLS_GD
R_MICROMIPS_TLS_LDM
R_MICROMIPS_TLS_DTPREL_HI16
R_MICROMIPS_TLS_DTPREL_LO16
R_MICROMIPS_TLS_GOTTPREL
R_MICROMIPS_TLS_TPREL_HI16
R_MICROMIPS_TLS_TPREL_LO16
R_MICROMIPS_GPREL7_S2
R_MICROMIPS_PC23_S2
R_MICROMIPS_PC21_S2
R_MICROMIPS_PC26_S2
R_MICROMIPS_PC18_S3
R_MICROMIPS_PC19_S2
R_MIPS_NUM
R_MIPS_PC32
R_MIPS_EH
R_AARCH64_NONE
R_AARCH64_ABS64
R_AARCH64_ABS32
R_AARCH64_ABS16
R_AARCH64_PREL64
R_AARCH64_PREL32
R_AARCH64_PREL16
R_AARCH64_MOVW_UABS_G0
R_AARCH64_MOVW_UABS_G0_NC
R_AARCH64_MOVW_UABS_G1
R_AARCH64_MOVW_UABS_G1_NC
R_AARCH64_MOVW_UABS_G2
R_AARCH64_MOVW_UABS_G2_NC
R_AARCH64_MOVW_UABS_G3
R_AARCH64_MOVW_SABS_G0
R_AARCH64_MOVW_SABS_G1
R_AARCH64_MOVW_SABS_G2
R_AARCH64_LD_PREL_LO19
R_AARCH64_ADR_PREL_LO21
R_AARCH64_ADR_PREL_PG_HI21
R_AARCH64_ADR_PREL_PG_HI21_NC
R_AARCH64_ADD_ABS_LO12_NC
R_AARCH64_LDST8_ABS_LO12_NC
R_AARCH64_TSTBR14
R_AARCH64_CONDBR19
R_AARCH64_JUMP26
R_AARCH64_CALL26
R_AARCH64_LDST16_ABS_LO12_NC
R_AARCH64_LDST32_ABS_LO12_NC
R_AARCH64_LDST64_ABS_LO12_NC
R_AARCH64_MOVW_PREL_G0
R_AARCH64_MOVW_PREL_G0_NC
R_AARCH64_MOVW_PREL_G1
R_AARCH64_MOVW_PREL_G1_NC
R_AARCH64_MOVW_PREL_G2
R_AARCH64_MOVW_PREL_G2_NC
R_AARCH64_MOVW_PREL_G3
R_AARCH64_LDST128_ABS_LO12_NC
R_AARCH64_MOVW_GOTOFF_G0
R_AARCH64_MOVW_GOTOFF_G0_NC
R_AARCH64_MOVW_GOTOFF_G1
R_AARCH64_MOVW_GOTOFF_G1_NC
R_AARCH64_MOVW_GOTOFF_G2
R_AARCH64_MOVW_GOTOFF_G2_NC
R_AARCH64_MOVW_GOTOFF_G3
R_AARCH64_GOTREL64
R_AARCH64_GOTREL32
R_AARCH64_GOT_LD_PREL19
R_AARCH64_LD64_GOTOFF_LO15
R_AARCH64_ADR_GOT_PAGE
R_AARCH64_LD64_GOT_LO12_NC
R_AARCH64_LD64_GOTPAGE_LO15
R_AARCH64_TLSGD_ADR_PREL21
R_AARCH64_TLSGD_ADR_PAGE21
R_AARCH64_TLSGD_ADD_LO12_NC
R_AARCH64_TLSGD_MOVW_G1
R_AARCH64_TLSGD_MOVW_G0_NC
R_AARCH64_TLSLD_ADR_PREL21
R_AARCH64_TLSLD_ADR_PAGE21
R_AARCH64_TLSLD_ADD_LO12_NC
R_AARCH64_TLSLD_MOVW_G1
R_AARCH64_TLSLD_MOVW_G0_NC
R_AARCH64_TLSLD_LD_PREL19
R_AARCH64_TLSLD_MOVW_DTPREL_G2
R_AARCH64_TLSLD_MOVW_DTPREL_G1
R_AARCH64_TLSLD_MOVW_DTPREL_G1_NC
R_AARCH64_TLSLD_MOVW_DTPREL_G0
R_AARCH64_TLSLD_MOVW_DTPREL_G0_NC
R_AARCH64_TLSLD_ADD_DTPREL_HI12
R_AARCH64_TLSLD_ADD_DTPREL_LO12
R_AARCH64_TLSLD_ADD_DTPREL_LO12_NC
R_AARCH64_TLSLD_LDST8_DTPREL_LO12
R_AARCH64_TLSLD_LDST8_DTPREL_LO12_NC
R_AARCH64_TLSLD_LDST16_DTPREL_LO12
R_AARCH64_TLSLD_LDST16_DTPREL_LO12_NC
R_AARCH64_TLSLD_LDST32_DTPREL_LO12
R_AARCH64_TLSLD_LDST32_DTPREL_LO12_NC
R_AARCH64_TLSLD_LDST64_DTPREL_LO12
R_AARCH64_TLSLD_LDST64_DTPREL_LO12_NC
R_AARCH64_TLSIE_MOVW_GOTTPREL_G1
R_AARCH64_TLSIE_MOVW_GOTTPREL_G0_NC
R_AARCH64_TLSIE_ADR_GOTTPREL_PAGE21
R_AARCH64_TLSIE_LD64_GOTTPREL_LO12_NC
R_AARCH64_TLSIE_LD_GOTTPREL_PREL19
R_AARCH64_TLSLE_MOVW_TPREL_G2
R_AARCH64_TLSLE_MOVW_TPREL_G1
R_AARCH64_TLSLE_MOVW_TPREL_G1_NC
R_AARCH64_TLSLE_MOVW_TPREL_G0
R_AARCH64_TLSLE_MOVW_TPREL_G0_NC
R_AARCH64_TLSLE_ADD_TPREL_HI12
R_AARCH64_TLSLE_ADD_TPREL_LO12
R_AARCH64_TLSLE_ADD_TPREL_LO12_NC
R_AARCH64_TLSLE_LDST8_TPREL_LO12
R_AARCH64_TLSLE_LDST8_TPREL_LO12_NC
R_AARCH64_TLSLE_LDST16_TPREL_LO12
R_AARCH64_TLSLE_LDST16_TPREL_LO12_NC
R_AARCH64_TLSLE_LDST32_TPREL_LO12
R_AARCH64_TLSLE_LDST32_TPREL_LO12_NC
R_AARCH64_TLSLE_LDST64_TPREL_LO12
R_AARCH64_TLSLE_LDST64_TPREL_LO12_NC
R_AARCH64_TLSDESC_LD_PREL19
R_AARCH64_TLSDESC_ADR_PREL21
R_AARCH64_TLSDESC_ADR_PAGE21
R_AARCH64_TLSDESC_LD64_LO12_NC
R_AARCH64_TLSDESC_ADD_LO12_NC
R_AARCH64_TLSDESC_OFF_G1
R_AARCH64_TLSDESC_OFF_G0_NC
R_AARCH64_TLSDESC_LDR
R_AARCH64_TLSDESC_ADD
R_AARCH64_TLSDESC_CALL
R_AARCH64_TLSLE_LDST128_TPREL_LO12
R_AARCH64_TLSLE_LDST128_TPREL_LO12_NC
R_AARCH64_TLSLD_LDST128_DTPREL_LO12
R_AARCH64_TLSLD_LDST128_DTPREL_LO12_NC
R_AARCH64_COPY
R_AARCH64_GLOB_DAT
R_AARCH64_JUMP_SLOT
R_AARCH64_RELATIVE
R_AARCH64_TLS_DTPREL64
R_AARCH64_TLS_DTPMOD64
R_AARCH64_TLS_TPREL64
R_AARCH64_TLSDESC
R_AARCH64_IRELATIVE
R_ARM_NONE
R_ARM_PC24
R_ARM_ABS32
R_ARM_REL32
R_ARM_LDR_PC_G0
R_ARM_ABS16
R_ARM_ABS12
R_ARM_THM_ABS5
R_ARM_ABS8
R_ARM_SBREL32
R_ARM_THM_CALL
R_ARM_THM_PC8
R_ARM_BREL_ADJ
R_ARM_TLS_DESC
R_ARM_THM_SWI8
R_ARM_XPC25
R_ARM_THM_XPC22
R_ARM_TLS_DTPMOD32
R_ARM_TLS_DTPOFF32
R_ARM_TLS_TPOFF32
R_ARM_COPY
R_ARM_GLOB_DAT
R_ARM_JUMP_SLOT
R_ARM_RELATIVE
R_ARM_GOTOFF32
R_ARM_BASE_PREL
R_ARM_GOT_BREL
R_ARM_PLT32
R_ARM_CALL
R_ARM_JUMP24
R_ARM_THM_JUMP24
R_ARM_BASE_ABS
R_ARM_ALU_PCREL_7_0
R_ARM_ALU_PCREL_15_8
R_ARM_ALU_PCREL_23_15
R_ARM_LDR_SBREL_11_0_NC
R_ARM_ALU_SBREL_19_12_NC
R_ARM_ALU_SBREL_27_20_CK
R_ARM_TARGET1
R_ARM_SBREL31
R_ARM_V4BX
R_ARM_TARGET2
R_ARM_PREL31
R_ARM_MOVW_ABS_NC
R_ARM_MOVT_ABS
R_ARM_MOVW_PREL_NC
R_ARM_MOVT_PREL
R_ARM_THM_MOVW_ABS_NC
R_ARM_THM_MOVT_ABS
R_ARM_THM_MOVW_PREL_NC
R_ARM_THM_MOVT_PREL
R_ARM_THM_JUMP19
R_ARM_THM_JUMP6
R_ARM_THM_ALU_PREL_11_0
R_ARM_THM_PC12
R_ARM_ABS32_NOI
R_ARM_REL32_NOI
R_ARM_ALU_PC_G0_NC
R_ARM_ALU_PC_G0
R_ARM_ALU_PC_G1_NC
R_ARM_ALU_PC_G1
R_ARM_ALU_PC_G2
R_ARM_LDR_PC_G1
R_ARM_LDR_PC_G2
R_ARM_LDRS_PC_G0
R_ARM_LDRS_PC_G1
R_ARM_LDRS_PC_G2
R_ARM_LDC_PC_G0
R_ARM_LDC_PC_G1
R_ARM_LDC_PC_G2
R_ARM_ALU_SB_G0_NC
R_ARM_ALU_SB_G0
R_ARM_ALU_SB_G1_NC
R_ARM_ALU_SB_G1
R_ARM_ALU_SB_G2
R_ARM_LDR_SB_G0
R_ARM_LDR_SB_G1
R_ARM_LDR_SB_G2
R_ARM_LDRS_SB_G0
R_ARM_LDRS_SB_G1
R_ARM_LDRS_SB_G2
R_ARM_LDC_SB_G0
R_ARM_LDC_SB_G1
R_ARM_LDC_SB_G2
R_ARM_MOVW_BREL_NC
R_ARM_MOVT_BREL
R_ARM_MOVW_BREL
R_ARM_THM_MOVW_BREL_NC
R_ARM_THM_MOVT_BREL
R_ARM_THM_MOVW_BREL
R_ARM_TLS_GOTDESC
R_ARM_TLS_CALL
R_ARM_TLS_DESCSEQ
R_ARM_THM_TLS_CALL
R_ARM_PLT32_ABS
R_ARM_GOT_ABS
R_ARM_GOT_PREL
R_ARM_GOT_BREL12
R_ARM_GOTOFF12
R_ARM_GOTRELAX
R_ARM_GNU_VTENTRY
R_ARM_GNU_VTINHERIT
R_ARM_THM_JUMP11
R_ARM_THM_JUMP8
R_ARM_TLS_GD32
R_ARM_TLS_LDM32
R_ARM_TLS_LDO32
R_ARM_TLS_IE32
R_ARM_TLS_LE32
R_ARM_TLS_LDO12
R_ARM_TLS_LE12
R_ARM_TLS_IE12GP
R_ARM_PRIVATE_0
R_ARM_PRIVATE_1
R_ARM_PRIVATE_2
R_ARM_PRIVATE_3
R_ARM_PRIVATE_4
R_ARM_PRIVATE_5
R_ARM_PRIVATE_6
R_ARM_PRIVATE_7
R_ARM_PRIVATE_8
R_ARM_PRIVATE_9
R_ARM_PRIVATE_10
R_ARM_PRIVATE_11
R_ARM_PRIVATE_12
R_ARM_PRIVATE_13
R_ARM_PRIVATE_14
R_ARM_PRIVATE_15
R_ARM_ME_TOO
R_ARM_THM_TLS_DESCSEQ16
R_ARM_THM_TLS_DESCSEQ32
R_ARM_IRELATIVE
R_HEX_NONE
R_HEX_B22_PCREL
R_HEX_B15_PCREL
R_HEX_B7_PCREL
R_HEX_LO16
R_HEX_HI16
R_HEX_32
R_HEX_16
R_HEX_8
R_HEX_GPREL16_0
R_HEX_GPREL16_1
R_HEX_GPREL16_2
R_HEX_GPREL16_3
R_HEX_HL16
R_HEX_B13_PCREL
R_HEX_B9_PCREL
R_HEX_B32_PCREL_X
R_HEX_32_6_X
R_HEX_B22_PCREL_X
R_HEX_B15_PCREL_X
R_HEX_B13_PCREL_X
R_HEX_B9_PCREL_X
R_HEX_B7_PCREL_X
R_HEX_16_X
R_HEX_12_X
R_HEX_11_X
R_HEX_10_X
R_HEX_9_X
R_HEX_8_X
R_HEX_7_X
R_HEX_6_X
R_HEX_32_PCREL
R_HEX_COPY
R_HEX_GLOB_DAT
R_HEX_JMP_SLOT
R_HEX_RELATIVE
R_HEX_PLT_B22_PCREL
R_HEX_GOTREL_LO16
R_HEX_GOTREL_HI16
R_HEX_GOTREL_32
R_HEX_GOT_LO16
R_HEX_GOT_HI16
R_HEX_GOT_32
R_HEX_GOT_16
R_HEX_DTPMOD_32
R_HEX_DTPREL_LO16
R_HEX_DTPREL_HI16
R_HEX_DTPREL_32
R_HEX_DTPREL_16
R_HEX_GD_PLT_B22_PCREL
R_HEX_GD_GOT_LO16
R_HEX_GD_GOT_HI16
R_HEX_GD_GOT_32
R_HEX_GD_GOT_16
R_HEX_IE_LO16
R_HEX_IE_HI16
R_HEX_IE_32
R_HEX_IE_GOT_LO16
R_HEX_IE_GOT_HI16
R_HEX_IE_GOT_32
R_HEX_IE_GOT_16
R_HEX_TPREL_LO16
R_HEX_TPREL_HI16
R_HEX_TPREL_32
R_HEX_TPREL_16
R_HEX_6_PCREL_X
R_HEX_GOTREL_32_6_X
R_HEX_GOTREL_16_X
R_HEX_GOTREL_11_X
R_HEX_GOT_32_6_X
R_HEX_GOT_16_X
R_HEX_GOT_11_X
R_HEX_DTPREL_32_6_X
R_HEX_DTPREL_16_X
R_HEX_DTPREL_11_X
R_HEX_GD_GOT_32_6_X
R_HEX_GD_GOT_16_X
R_HEX_GD_GOT_11_X
R_HEX_IE_32_6_X
R_HEX_IE_16_X
R_HEX_IE_GOT_32_6_X
R_HEX_IE_GOT_16_X
R_HEX_IE_GOT_11_X
R_HEX_TPREL_32_6_X
R_HEX_TPREL_16_X
R_HEX_TPREL_11_X
R_HEX_LD_PLT_B22_PCREL
R_HEX_LD_GOT_LO16
R_HEX_LD_GOT_HI16
R_HEX_LD_GOT_32
R_HEX_LD_GOT_16
R_HEX_LD_GOT_32_6_X
R_HEX_LD_GOT_16_X
R_HEX_LD_GOT_11_X
R_PPC_NONE
R_PPC_ADDR32
R_PPC_ADDR24
R_PPC_ADDR16
R_PPC_ADDR16_LO
R_PPC_ADDR16_HI
R_PPC_ADDR16_HA
R_PPC_ADDR14
R_PPC_ADDR14_BRTAKEN
R_PPC_ADDR14_BRNTAKEN
R_PPC_REL24
R_PPC_REL14
R_PPC_REL14_BRTAKEN
R_PPC_REL14_BRNTAKEN
R_PPC_GOT16
R_PPC_GOT16_LO
R_PPC_GOT16_HI
R_PPC_GOT16_HA
R_PPC_PLTREL24
R_PPC_JMP_SLOT
R_PPC_LOCAL24PC
R_PPC_REL32
R_PPC_TLS
R_PPC_DTPMOD32
R_PPC_TPREL16
R_PPC_TPREL16_LO
R_PPC_TPREL16_HI
R_PPC_TPREL16_HA
R_PPC_TPREL32
R_PPC_DTPREL16
R_PPC_DTPREL16_LO
R_PPC_DTPREL16_HI
R_PPC_DTPREL16_HA
R_PPC_DTPREL32
R_PPC_GOT_TLSGD16
R_PPC_GOT_TLSGD16_LO
R_PPC_GOT_TLSGD16_HI
R_PPC_GOT_TLSGD16_HA
R_PPC_GOT_TLSLD16
R_PPC_GOT_TLSLD16_LO
R_PPC_GOT_TLSLD16_HI
R_PPC_GOT_TLSLD16_HA
R_PPC_GOT_TPREL16
R_PPC_GOT_TPREL16_LO
R_PPC_GOT_TPREL16_HI
R_PPC_GOT_TPREL16_HA
R_PPC_GOT_DTPREL16
R_PPC_GOT_DTPREL16_LO
R_PPC_GOT_DTPREL16_HI
R_PPC_GOT_DTPREL16_HA
R_PPC_TLSGD
R_PPC_TLSLD
R_PPC_REL16
R_PPC_REL16_LO
R_PPC_REL16_HI
R_PPC_REL16_HA
R_PPC64_NONE
R_PPC64_ADDR32
R_PPC64_ADDR24
R_PPC64_ADDR16
R_PPC64_ADDR16_LO
R_PPC64_ADDR16_HI
R_PPC64_ADDR16_HA
R_PPC64_ADDR14
R_PPC64_ADDR14_BRTAKEN
R_PPC64_ADDR14_BRNTAKEN
R_PPC64_REL24
R_PPC64_REL14
R_PPC64_REL14_BRTAKEN
R_PPC64_REL14_BRNTAKEN
R_PPC64_GOT16
R_PPC64_GOT16_LO
R_PPC64_GOT16_HI
R_PPC64_GOT16_HA
R_PPC64_JMP_SLOT
R_PPC64_REL32
R_PPC64_ADDR64
R_PPC64_ADDR16_HIGHER
R_PPC64_ADDR16_HIGHERA
R_PPC64_ADDR16_HIGHEST
R_PPC64_ADDR16_HIGHESTA
R_PPC64_REL64
R_PPC64_TOC16
R_PPC64_TOC16_LO
R_PPC64_TOC16_HI
R_PPC64_TOC16_HA
R_PPC64_TOC
R_PPC64_ADDR16_DS
R_PPC64_ADDR16_LO_DS
R_PPC64_GOT16_DS
R_PPC64_GOT16_LO_DS
R_PPC64_TOC16_DS
R_PPC64_TOC16_LO_DS
R_PPC64_TLS
R_PPC64_DTPMOD64
R_PPC64_TPREL16
R_PPC64_TPREL16_LO
R_PPC64_TPREL16_HI
R_PPC64_TPREL16_HA
R_PPC64_TPREL64
R_PPC64_DTPREL16
R_PPC64_DTPREL16_LO
R_PPC64_DTPREL16_HI
R_PPC64_DTPREL16_HA
R_PPC64_DTPREL64
R_PPC64_GOT_TLSGD16
R_PPC64_GOT_TLSGD16_LO
R_PPC64_GOT_TLSGD16_HI
R_PPC64_GOT_TLSGD16_HA
R_PPC64_GOT_TLSLD16
R_PPC64_GOT_TLSLD16_LO
R_PPC64_GOT_TLSLD16_HI
R_PPC64_GOT_TLSLD16_HA
R_PPC64_GOT_TPREL16_DS
R_PPC64_GOT_TPREL16_LO_DS
R_PPC64_GOT_TPREL16_HI
R_PPC64_GOT_TPREL16_HA
R_PPC64_GOT_DTPREL16_DS
R_PPC64_GOT_DTPREL16_LO_DS
R_PPC64_GOT_DTPREL16_HI
R_PPC64_GOT_DTPREL16_HA
R_PPC64_TPREL16_DS
R_PPC64_TPREL16_LO_DS
R_PPC64_TPREL16_HIGHER
R_PPC64_TPREL16_HIGHERA
R_PPC64_TPREL16_HIGHEST
R_PPC64_TPREL16_HIGHESTA
R_PPC64_DTPREL16_DS
R_PPC64_DTPREL16_LO_DS
R_PPC64_DTPREL16_HIGHER
R_PPC64_DTPREL16_HIGHERA
R_PPC64_DTPREL16_HIGHEST
R_PPC64_DTPREL16_HIGHESTA
R_PPC64_TLSGD
R_PPC64_TLSLD
R_PPC64_REL16
R_PPC64_REL16_LO
R_PPC64_REL16_HI
R_PPC64_REL16_HA
R_390_NONE
R_390_8
R_390_12
R_390_16
R_390_32
R_390_PC32
R_390_GOT12
R_390_GOT32
R_390_PLT32
R_390_COPY
R_390_GLOB_DAT
R_390_JMP_SLOT
R_390_RELATIVE
R_390_GOTOFF
R_390_GOTPC
R_390_GOT16
R_390_PC16
R_390_PC16DBL
R_390_PLT16DBL
R_390_PC32DBL
R_390_PLT32DBL
R_390_GOTPCDBL
R_390_64
R_390_PC64
R_390_GOT64
R_390_PLT64
R_390_GOTENT
R_390_GOTOFF16
R_390_GOTOFF64
R_390_GOTPLT12
R_390_GOTPLT16
R_390_GOTPLT32
R_390_GOTPLT64
R_390_GOTPLTENT
R_390_PLTOFF16
R_390_PLTOFF32
R_390_PLTOFF64
R_390_TLS_LOAD
R_390_TLS_GDCALL
R_390_TLS_LDCALL
R_390_TLS_GD32
R_390_TLS_GD64
R_390_TLS_GOTIE12
R_390_TLS_GOTIE32
R_390_TLS_GOTIE64
R_390_TLS_LDM32
R_390_TLS_LDM64
R_390_TLS_IE32
R_390_TLS_IE64
R_390_TLS_IEENT
R_390_TLS_LE32
R_390_TLS_LE64
R_390_TLS_LDO32
R_390_TLS_LDO64
R_390_TLS_DTPMOD
R_390_TLS_DTPOFF
R_390_TLS_TPOFF
R_390_20
R_390_GOT20
R_390_GOTPLT20
R_390_TLS_GOTIE20
R_390_IRELATIVE
R_SPARC_NONE
R_SPARC_8
R_SPARC_16
R_SPARC_32
R_SPARC_DISP8
R_SPARC_DISP16
R_SPARC_DISP32
R_SPARC_WDISP30
R_SPARC_WDISP22
R_SPARC_HI22
R_SPARC_22
R_SPARC_13
R_SPARC_LO10
R_SPARC_GOT10
R_SPARC_GOT13
R_SPARC_GOT22
R_SPARC_PC10
R_SPARC_PC22
R_SPARC_WPLT30
R_SPARC_COPY
R_SPARC_GLOB_DAT
R_SPARC_JMP_SLOT
R_SPARC_RELATIVE
R_SPARC_UA32
R_SPARC_PLT32
R_SPARC_HIPLT22
R_SPARC_LOPLT10
R_SPARC_PCPLT32
R_SPARC_PCPLT22
R_SPARC_PCPLT10
R_SPARC_10
R_SPARC_11
R_SPARC_64
R_SPARC_OLO10
R_SPARC_HH22
R_SPARC_HM10
R_SPARC_LM22
R_SPARC_PC_HH22
R_SPARC_PC_HM10
R_SPARC_PC_LM22
R_SPARC_WDISP16
R_SPARC_WDISP19
R_SPARC_7
R_SPARC_5
R_SPARC_6
R_SPARC_DISP64
R_SPARC_PLT64
R_SPARC_HIX22
R_SPARC_LOX10
R_SPARC_H44
R_SPARC_M44
R_SPARC_L44
R_SPARC_REGISTER
R_SPARC_UA64
R_SPARC_UA16
R_SPARC_TLS_GD_HI22
R_SPARC_TLS_GD_LO10
R_SPARC_TLS_GD_ADD
R_SPARC_TLS_GD_CALL
R_SPARC_TLS_LDM_HI22
R_SPARC_TLS_LDM_LO10
R_SPARC_TLS_LDM_ADD
R_SPARC_TLS_LDM_CALL
R_SPARC_TLS_LDO_HIX22
R_SPARC_TLS_LDO_LOX10
R_SPARC_TLS_LDO_ADD
R_SPARC_TLS_IE_HI22
R_SPARC_TLS_IE_LO10
R_SPARC_TLS_IE_LD
R_SPARC_TLS_IE_LDX
R_SPARC_TLS_IE_ADD
R_SPARC_TLS_LE_HIX22
R_SPARC_TLS_LE_LOX10
R_SPARC_TLS_DTPMOD32
R_SPARC_TLS_DTPMOD64
R_SPARC_TLS_DTPOFF32
R_SPARC_TLS_DTPOFF64
R_SPARC_TLS_TPOFF32
R_SPARC_TLS_TPOFF64
R_SPARC_GOTDATA_HIX22
R_SPARC_GOTDATA_LOX10
R_SPARC_GOTDATA_OP_HIX22
R_SPARC_GOTDATA_OP_LOX10
R_SPARC_GOTDATA_OP
Invalid section header entry size (e_shentsize) in ELF header
Invalid symbol size
Invalid symbol table section type!
ELF32-i386
ELF32-x86-64
ELF32-arm-little
ELF32-arm-big
ELF32-hexagon
ELF32-mips
ELF32-ppc
ELF32-sparc
ELF32-unknown
ELF64-i386
ELF64-x86-64
ELF64-aarch64-little
ELF64-aarch64-big
ELF64-ppc64
ELF64-s390
ELF64-sparc
ELF64-mips
ELF64-unknown
Invalid ELFCLASS!
llvm.object
No object file for requested architecture
The file was not recognized as a valid object file
Invalid data was encountered while parsing the file
The end of the file was unexpectedly encountered
String table must end with a null terminator
Invalid section index
Bitcode section not found in object file
Invalid dynamic table size
Mach-O load command with size < 8 bytes
Mach-O segment load command contains too many sections
Mach-O segment load command size is too small
.llvmbc
Symbol name entry points before beginning or past end of file.
getSymbolSection: Invalid section index.
GENERIC_RELOC_VANILLA
GENERIC_RELOC_PAIR
GENERIC_RELOC_SECTDIFF
GENERIC_RELOC_PB_LA_PTR
GENERIC_RELOC_LOCAL_SECTDIFF
GENERIC_RELOC_TLV
X86_64_RELOC_UNSIGNED
X86_64_RELOC_SIGNED
X86_64_RELOC_BRANCH
X86_64_RELOC_GOT_LOAD
X86_64_RELOC_GOT
X86_64_RELOC_SUBTRACTOR
X86_64_RELOC_SIGNED_1
X86_64_RELOC_SIGNED_2
X86_64_RELOC_SIGNED_4
X86_64_RELOC_TLV
ARM_RELOC_VANILLA
ARM_RELOC_PAIR
ARM_RELOC_SECTDIFF
ARM_RELOC_LOCAL_SECTDIFF
ARM_RELOC_PB_LA_PTR
ARM_RELOC_BR24
ARM_THUMB_RELOC_BR22
ARM_THUMB_32BIT_BRANCH
ARM_RELOC_HALF
ARM_RELOC_HALF_SECTDIFF
ARM64_RELOC_UNSIGNED
ARM64_RELOC_SUBTRACTOR
ARM64_RELOC_BRANCH26
ARM64_RELOC_PAGE21
ARM64_RELOC_PAGEOFF12
ARM64_RELOC_GOT_LOAD_PAGE21
ARM64_RELOC_GOT_LOAD_PAGEOFF12
ARM64_RELOC_POINTER_TO_GOT
ARM64_RELOC_TLVP_LOAD_PAGE21
ARM64_RELOC_TLVP_LOAD_PAGEOFF12
ARM64_RELOC_ADDEND
PPC_RELOC_VANILLA
PPC_RELOC_PAIR
PPC_RELOC_BR14
PPC_RELOC_BR24
PPC_RELOC_HI16
PPC_RELOC_LO16
PPC_RELOC_HA16
PPC_RELOC_LO14
PPC_RELOC_SECTDIFF
PPC_RELOC_PB_LA_PTR
PPC_RELOC_HI16_SECTDIFF
PPC_RELOC_LO16_SECTDIFF
PPC_RELOC_HA16_SECTDIFF
PPC_RELOC_JBSR
PPC_RELOC_LO14_SECTDIFF
PPC_RELOC_LOCAL_SECTDIFF
.framework/
Versions/
.dylib
.qtx
Requested symbol index is out of range.
Mach-O 32-bit i386
Mach-O arm
Mach-O arm64 (ILP32)
Mach-O 32-bit ppc
Mach-O 32-bit unknown
Mach-O 64-bit x86-64
Mach-O arm64
Mach-O 64-bit ppc64
Mach-O 64-bit GPU
Mach-O 64-bit unknown
i386-apple-darwin
x86_64-apple-darwin
x86_64h-apple-darwin
armv4t-apple-darwin
armv5e-apple-darwin
xscale-apple-darwin
armv6-apple-darwin
armv6m-apple-darwin
armv7-apple-darwin
armv7em-apple-darwin
armv7k-apple-darwin
armv7m-apple-darwin
armv7s-apple-darwin
arm64-apple-darwin
arm64-apple-darwin-code32
ppc-apple-darwin
ppc64-apple-darwin
thumbv4t-apple-darwin
thumbv5e-apple-darwin
thumbv6-apple-darwin
thumbv6m-apple-darwin
thumbv7-apple-darwin
thumbv7em-apple-darwin
thumbv7k-apple-darwin
thumbv7m-apple-darwin
thumbv7s-apple-darwin
armv6m
armv7em
armv7m
pointer
text abs32
text rel32
Malformed MachO file.
__PAGEZERO
invalid hexadecimal floating-point constant: expected at least one significand digit
invalid hexadecimal floating-point constant: expected exponent part 'p'
invalid hexadecimal floating-point constant: expected at least one exponent digit
unterminated comment
invalid decimal number
invalid hexdecimal number
invalid binary number
invalid hexadecimal number
invalid octal number
unterminated single quote
single quote way too long
unterminated string constant
invalid character in input
missing expression
unexpected token in assignment
Recursive use of '
redefinition of '
invalid assignment to '
invalid reassignment of non-absolute variable '
expected absolute expression
.set
.equ
.equiv
.ascii
.asciz
.string
.byte
.short
.value
.2byte
.long
.4byte
.quad
.8byte
.octa
.single
.float
.double
.align
.align32
.p2align
.p2alignw
.p2alignl
.org
.fill
.zero
.extern
.globl
.global
.lazy_reference
.no_dead_strip
.symbol_resolver
.alt_entry
.private_extern
.reference
.weak_definition
.weak_reference
.weak_def_can_be_hidden
.comm
.common
.lcomm
.abort
.include
.incbin
.code16
.code16gcc
.rept
.rep
.irp
.irpc
.endr
.bundle_align_mode
.bundle_lock
.bundle_unlock
.ifeq
.ifge
.ifgt
.ifle
.iflt
.ifne
.ifb
.ifnb
.ifc
.ifeqs
.ifnc
.ifnes
.ifdef
.ifndef
.ifnotdef
.elseif
.else
.end
.endif
.skip
.space
.file
.line
.stabs
.sleb128
.uleb128
.cfi_sections
.cfi_startproc
.cfi_endproc
.cfi_def_cfa
.cfi_def_cfa_offset
.cfi_adjust_cfa_offset
.cfi_def_cfa_register
.cfi_offset
.cfi_rel_offset
.cfi_personality
.cfi_lsda
.cfi_remember_state
.cfi_restore_state
.cfi_same_value
.cfi_restore
.cfi_escape
.cfi_signal_frame
.cfi_undefined
.cfi_register
.cfi_window_save
.macros_on
.macros_off
.macro
.exitm
.endm
.endmacro
.purgem
.err
.error
.warning
unmatched .ifs or .elses
unassigned file number: 
 for .file directives
assembler local symbol '
' not defined
unexpected token at start of statement
invalid use of pseudo-symbol '.' as a label
invalid symbol redefinition
 not supported yet
unknown directive
_emit
__emit
_EMIT
__EMIT
ALIGN
parsed instruction: [
unexpected token in '.if' directive
unexpected token in '.ifb' directive
unexpected token in '.ifc' directive
expected string parameter for '.ifeqs' directive
expected string parameter for '.ifnes' directive
expected comma after first string for '.ifeqs' directive
expected comma after first string for '.ifnes' directive
expected identifier after '.ifdef'
Encountered a .elseif that doesn't follow a .if or  an .elseif
unexpected token in '.elseif' directive
unexpected token in '.else' directive
Encountered a .else that doesn't follow a .if or an .elseif
unexpected token in '.endif' directive
Encountered a .endif that doesn't follow a .if or .else
macros cannot be nested more than 20 levels deep
.endmacro
<instantiation>
invalid argument identifier for formal argument
expected '=' after formal parameter identifier
cannot mix positional and keyword arguments
parameter named '
' does not exist for macro '
missing value for required parameter '
' in macro '
too many positional arguments
unexpected token in macro instantiation
unbalanced parentheses in macro argument
Wrong number of arguments
expected identifier after '
unexpected token in '
expected string in '
' directive
literal value out of range for directive
unexpected token in directive
unknown token in expression
infinity
invalid floating point literal
invalid alignment value
alignment must be a power of 2
alignment directive can never be satisfied in this many bytes, ignoring maximum bytes expression
maximum bytes expression exceeds alignment and has no effect
unexpected token in '.org' directive
expected assembly-time absolute expression
'.fill' directive with negative repeat count has no effect
unexpected token in '.fill' directive
'.fill' directive with negative size has no effect
'.fill' directive with size greater than 8 has been truncated to 8
'.fill' directive pattern has been truncated to 32-bits
unexpected token in '.zero' directive
expected identifier in directive
non-local symbol required in directive
unable to emit symbol attribute
alignment not supported on this target
unexpected token in '.comm' or '.lcomm' directive
invalid '.comm' or '.lcomm' directive size, can't be less than zero
invalid '.comm' or '.lcomm' directive alignment, can't be less than zero
unexpected token in '.abort' directive
.abort detected. Assembly stopping.
.abort '
' detected. Assembly stopping.
expected string in '.include' directive
unexpected token in '.include' directive
Could not find include file '
expected string in '.incbin' directive
unexpected token in '.incbin' directive
Could not find incbin file '
Count is negative
no matching '.endr' in definition
unexpected token in '.endr' directive
.endr
expected identifier in '.irp' directive
expected comma in '.irp' directive
expected identifier in '.irpc' directive
expected comma in '.irpc' directive
unexpected token in '.irpc' directive
unmatched '.endr' directive
unexpected token after expression in '.bundle_align_mode' directive
invalid bundle alignment size (expected between 0 and 30)
invalid option for '.bundle_lock' directive
align_to_end
unexpected token after '.bundle_lock' directive option
unexpected token in '.bundle_unlock' directive
invalid number of bytes in '
file number less than one
unexpected token in '.file' directive
explicit path specified, but no file number
input can't have .file dwarf directives when -g is used to generate dwarf debug info for assembly code
file number already allocated
unexpected token in '.line' directive
unexpected token in '.loc' directive
file number less than one in '.loc' directive
unassigned file number in '.loc' directive
line number less than zero in '.loc' directive
column position less than zero in '.loc' directive
basic_block
prologue_end
epilogue_begin
is_stmt
is_stmt value not 0 or 1
is_stmt value not the constant value of 0 or 1
isa number less than zero
isa number not a constant value
unknown sub-directive in '.loc' directive
unsupported directive '.stabs'
Expected an identifier
simple
unexpected token in .cfi_startproc directive
unsupported encoding.
unexpected token in '.cfi_signal_frame'
expected identifier in '.macro' directive
Vararg parameter '
' should be last one in the list of parameters.
missing parameter qualifier for '
 is not a valid parameter qualifier for '
pointless default value for required parameter '
no matching '.endmacro' in definition
macro '
macro defined with named parameters which are not used in macro body, possible positional parameter found in body which will have no effect
unexpected '
' in file, no current macro definition
expected identifier in '.purgem' directive
unexpected token in '.purgem' directive
' is not defined
unexpected token in '.end' directive
.err encountered
.error directive invoked in source file
.error argument must be a string
.warning directive invoked in source file
.warning argument must be a string
unexpected expression in _emit
unexpected expression in align
literal value not a power of two greater then zero
.align 
while in macro instantiation
unexpected backslash at end of string
invalid octal escape sequence (out of range)
invalid escape sequence (unrecognized character)
unexpected symbol modifier following '@'
invalid variant '
invalid modifier '
' (no symbols present)
invalid variant on expression '
' (already modified)
invalid token in expression
expected symbol variant after '@'
unexpected token in variant, expected ')'
unexpected modifier on variable reference
invalid reference to undefined symbol
brackets expression not supported on this target
expected ')' in parentheses expression
expected ']' in brackets expression
expected section directive before assembly directive
.def
.scl
.endef
.secrel32
.secidx
.safeseh
.linkonce
.seh_proc
.seh_endproc
.seh_startchained
.seh_endchained
.seh_handler
.seh_handlerdata
.seh_pushreg
.seh_setframe
.seh_stackalloc
.seh_savereg
.seh_savexmm
.seh_pushframe
.seh_endprologue
unexpected token in section switching directive
expected comdat type such as 'discard' or 'largest' after protection bits
expected comma in directive
conflicting section flags 'b' and 'd'.
one_only
same_size
same_contents
associative
newest
unrecognized COMDAT type '
cannot make section associative with .linkonce
section '
' is already linkonce
you must specify one or both of @unwind or @except
a handler attribute must begin with '@'
expected @unwind or @except
except
register can't be represented in SEH unwind info
register number is too high
you must specify a stack pointer offset
offset is not a multiple of 16
size is not a multiple of 8
you must specify an offset on the stack
code
expected @code
.indirect_symbol
.lsym
.dump
.load
.secure_log_unique
.secure_log_reset
.zerofill
.data_region
.end_data_region
.const
.const_data
.constructor
.cstring
.destructor
.dyld
.fvmlib_init0
.fvmlib_init1
.lazy_symbol_pointer
.linker_option
.literal16
.literal4
.literal8
.mod_init_func
.mod_term_func
.non_lazy_symbol_pointer
.objc_cat_cls_meth
.objc_cat_inst_meth
.objc_category
.objc_class
.objc_class_names
.objc_class_vars
.objc_cls_meth
.objc_cls_refs
.objc_inst_meth
.objc_instance_vars
.objc_message_refs
.objc_meta_class
.objc_meth_var_names
.objc_meth_var_types
.objc_module_info
.objc_protocol
.objc_selector_strs
.objc_string_object
.objc_symbols
.picsymbol_stub
.static_const
.static_data
.symbol_stub
.thread_init_func
.tlv
.watchos_version_min
.tvos_version_min
.ios_version_min
.macosx_version_min
unexpected token in '.desc' directive
indirect symbol not in a symbol pointer or stub section
expected identifier in .indirect_symbol directive
unable to emit indirect symbol attribute for: 
unexpected token in '.indirect_symbol' directive
unexpected token in '.lsym' directive
directive '.lsym' is unsupported
unexpected token in '.subsections_via_symbols' directive
expected string in '.dump' or '.load' directive
unexpected token in '.dump' or '.load' directive
ignoring directive .dump for now
ignoring directive .load for now
expected identifier after '.section' directive
unexpected token in '.section' directive
unexpected token in '.secure_log_unique' directive
.secure_log_unique specified multiple times
.secure_log_unique used but AS_SECURE_LOG_FILE environment variable unset.
can't open secure log file: 
unexpected token in '.secure_log_reset' directive
unexpected token in '.tbss' directive
invalid '.tbss' directive size, can't be less thanzero
invalid '.tbss' alignment, can't be lessthan zero
expected segment name after '.zerofill' directive
expected section name after comma in '.zerofill' directive
unexpected token in '.zerofill' directive
invalid '.zerofill' directive size, can't be less than zero
invalid '.zerofill' directive alignment, can't be less than zero
expected region type after '.data_region' directive
jt16
jt32
unknown region type in '.data_region' directive
unexpected token in '.end_data_region' directive
__dyld
__fvmlib_init0
__fvmlib_init1
__cat_cls_meth
__cat_inst_meth
__category
__class
__class_vars
__cls_meth
__cls_refs
__inst_meth
__instance_vars
__meta_class
__module_info
__protocol
__selector_strs
__string_object
__symbols
__picsymbol_stub
__static_const
__static_data
__symbol_stub
invalid OS major version number
minor OS version number required, comma expected
invalid OS minor version number
invalid update specifier, comma expected
invalid OS update number
 should only be used for 
 targets
overriding previous version_min directive
previous definition is here
.section
.pushsection
.popsection
.size
.previous
.type
.ident
.symver
.version
.weakref
.weak
.local
.protected
.internal
.hidden
.subsection
.fini
expected string in directive
unknown flag
Section cannot specifiy a group name while also acting as a member of the last group
Mergeable section must specify the type
Group section must specify the type
expected '@<type>', '%<type>' or "<type>"
expected the entry size
entry size must be positive
expected group name
Linkage must be 'comdat'
unique
expected 'unique'
expected commma
unique id must be positive
unique id is too large
.note
unknown section type
DWARF2 only supports one section per compilation unit
alloc
execinstr
.popsection without corresponding .pushsection
.previous without corresponding .section
expected STT_<TYPE_IN_UPPER_CASE>, '#<type>', '%<type>' or "<type>"
expected STT_<TYPE_IN_UPPER_CASE>, '#<type>', '@<type>', '%<type>' or "<type>"
expected symbol type in directive
unsupported attribute in '.type' directive
unexpected token in '.type' directive
STT_FUNC
STT_OBJECT
STT_TLS
STT_COMMON
STT_NOTYPE
notype
STT_GNU_IFUNC
unexpected token in '.ident' directive
expected a comma
expected a '@' in the name
unexpected token in '.version' directive
Could not find function in stream
Unexpected end of file
Invalid record
Malformed block
Invalid value
Invalid type for value
Invalid ID
Invalid global variable comdat ID
Invalid function comdat ID
Malformed global initializer set
Invalid multiple blocks
Unknown attribute kind (
Bitwidth for integer type out of range
Invalid type
Invalid function argument type
Invalid TYPE table
Invalid vector length
Invalid TYPE table: Only named structs can be forward referenced
Invalid ronstant reference
Explicit gep operator type does not match pointee type of pointer operand
Type mismatch in constant table!
Expected a constant
Alias and aliasee types don't match
METADATA_NAME not followed by METADATA_NAMED_NODE
Conflicting METADATA_KIND records
Insufficient function protos
Invalid alignment value
Explicit gep type does not match pointee type of pointer operand
EXTRACTVAL: Invalid instruction with 0 indices
EXTRACTVAL: Invalid type
EXTRACTVAL: Invalid struct index
EXTRACTVAL: Invalid array index
INSERTVAL: Invalid instruction with 0 indices
INSERTVAL: Invalid type
INSERTVAL: Invalid struct index
INSERTVAL: Invalid array index
Inserted value type doesn't match aggregate type
Explicit invoke type is not a function type
Callee is not a pointer
Callee is not of pointer to function type
Explicit invoke type does not match pointee type of callee operand
Insufficient operands to call
Personality function mismatch
Old-style alloca with a non-pointer type
Explicit call type is not a function type
Callee is not a pointer type
Explicit call type does not match pointee type of callee operand
Invalid instruction with no BB
Never resolved value found in function
Load/Store operand is not a pointer type
Explicit load/store type does not match pointee type of pointer operand
Cannot load/store from pointer
Never resolved function from blockaddress
Invalid bitcode signature
Malformed IR file
Invalid bitcode wrapper header
llvm.bitcode
Corrupted bitcode
Abbreviation starts with an Array or a Blob
Array op not second to last
Array element type has to be an encoding of a type
Array element type can't be an Array or a Blob
Fixed or VBR abbrev record with size > MaxChunkData
Abbrev record with no operands
Invalid abbrev number
`,! 
`,a 
`,! 
`,a 
`,)@
`,i@
`,)@
`,i@
`*! 
`*a 
`*! 
`*a 
`*)@
`*i@
`*)@
`*i@
x-( 
x-h 
ha! 
ha! 
ha! 
ha! 
ha)@
ha)@
ha)@
ha)@
xE  
xE` 
xE(@
xEh@
`s( 
`sh 
`s( 
`sh 
`-( 
`-h 
`-( 
`-h 
`=( 
`=h 
`=( 
`=h 
`<  
`<` 
`<  
`<` 
`<(@
`<h@
`<(@
`<h@
`<( 
`<h 
`<( 
`<h 
`=( 
`=h 
`=( 
`=h 
`=  
`=` 
`=  
`=` 
`=(@
`=h@
`=(@
`=h@
`/! 
`/a 
`/! 
`/a 
`/)@
`/i@
`/)@
`/i@
xD  
xD` 
xD(@
xDh@
x*! 
x*a 
x*! 
x*a 
x*)@
x*i@
x*)@
x*i@
`L! 
`La 
`L! 
`La 
`L)@
`Li@
`L)@
`Li@
`T! 
`Ta 
`T! 
`Ta 
`T)@
`Ti@
`T)@
`Ti@
`\! 
`\a 
`\! 
`\a 
`\)@
`\i@
`\)@
`\i@
`K! 
`Ka 
`K! 
`Ka 
`K)@
`Ki@
`K)@
`Ki@
`S! 
`Sa 
`S! 
`Sa 
`S)@
`Si@
`S)@
`Si@
`[! 
`[a 
`[! 
`[a 
`[)@
`[i@
`[)@
`[i@
`M! 
`Ma 
`M! 
`Ma 
`M)@
`Mi@
`M)@
`Mi@
`U! 
`Ua 
`U! 
`Ua 
`U)@
`Ui@
`U)@
`Ui@
`]! 
`]a 
`]! 
`]a 
`])@
`]i@
`])@
`]i@
`N! 
`Na 
`N! 
`Na 
`N)@
`Ni@
`N)@
`Ni@
`V! 
`Va 
`V! 
`Va 
`V)@
`Vi@
`V)@
`Vi@
`^! 
`^a 
`^! 
`^a 
`^)@
`^i@
`^)@
`^i@
`O! 
`Oa 
`O! 
`Oa 
`O)@
`Oi@
`O)@
`Oi@
`W! 
`Wa 
`W! 
`Wa 
`W)@
`Wi@
`W)@
`Wi@
`_! 
`_a 
`_! 
`_a 
`_)@
`_i@
`_)@
`_i@
`!  
`!` 
`!  
`!` 
`!(@
`!h@
`!(@
`!h@
`+! 
`+a 
`+! 
`+a 
`+)@
`+i@
`+)@
`+i@
x~! 
x~a 
x~! 
x~a 
x~)@
x~i@
x~)@
x~i@
xv! 
xva 
xv! 
xva 
xv)@
xvi@
xv)@
xvi@
xn! 
xna 
xn! 
xna 
xn)@
xni@
xn)@
xni@
xp! 
xpa 
xp! 
xpa 
xp)@
xpi@
xp)@
xpi@
x3! 
x3a 
x3! 
x3a 
x3)@
x3i@
x3)@
x3i@
x2! 
x2a 
x2! 
x2a 
x2)@
x2i@
x2)@
x2i@
`=  
`=` 
`=(@
`=h@
`>  
`>` 
`>(@
`>h@
x:! 
x:! 
x:)@
x:)@
x;! 
x;! 
x;)@
x;)@
x2! 
x2! 
x2)@
x2)@
x3! 
x3! 
x3)@
x3)@
x;! 
x;a 
x;! 
x;a 
x;)@
x;i@
x;)@
x;i@
x?! 
x?a 
x?! 
x?a 
x?)@
x?i@
x?)@
x?i@
xw! 
xwa 
xw! 
xwa 
xw)@
xwi@
xw)@
xwi@
xo! 
xoa 
xo! 
xoa 
xo)@
xoi@
xo)@
xoi@
xu! 
xua 
xu! 
xua 
xu)@
xui@
xu)@
xui@
xm! 
xma 
xm! 
xma 
xm)@
xmi@
xm)@
xmi@
xr! 
xra 
xr! 
xra 
xr)@
xri@
xr)@
xri@
x ! 
x a 
x ! 
x a 
x )@
x i@
x )@
x i@
x9! 
x9a 
x9! 
x9a 
x9)@
x9i@
x9)@
x9i@
x9! 
x9a 
x9! 
x9a 
x9)@
x9i@
x9)@
x9i@
x8  
x8` 
x8  
x8` 
x8(@
x8h@
x8(@
x8h@
x9! 
x9a 
x9! 
x9a 
xy! 
xya 
xy! 
xya 
x9)@
x9i@
x9)@
x9i@
xy) 
xyi 
xy) 
xyi 
x9! 
x9a 
x9! 
x9a 
xq! 
xqa 
xq! 
xqa 
x9)@
x9i@
x9)@
x9i@
xq) 
xqi 
xq) 
xqi 
x#! 
x#a 
x#! 
x#a 
x#)@
x#i@
x#)@
x#i@
x9! 
x9a 
x9! 
x9a 
xi! 
xia 
xi! 
xia 
x9)@
x9i@
x9)@
x9i@
xi) 
xii 
xi) 
xii 
x|! 
x|a 
x|! 
x|a 
x|)@
x|i@
x|)@
x|i@
x}! 
x}a 
x}! 
x}a 
x})@
x}i@
x})@
x}i@
xt! 
xta 
xt! 
xta 
xt)@
xti@
xt)@
xti@
xl! 
xla 
xl! 
xla 
xl)@
xli@
xl)@
xli@
x4! 
x4a 
x4! 
x4a 
x4)@
x4i@
x4)@
x4i@
x5! 
x5a 
x5! 
x5a 
x5)@
x5i@
x5)@
x5i@
x0! 
x0a 
x0! 
x0a 
x0)@
x0i@
x0)@
x0i@
x1! 
x1a 
x1! 
x1a 
x1)@
x1i@
x1)@
x1i@
x(! 
x(a 
x(! 
x(a 
x()@
x(i@
x()@
x(i@
`&  
`&` 
`&  
`&` 
`&(@
`&h@
`&(@
`&h@
x+  
x+` 
x+  
x+` 
x+(@
x+h@
x+(@
x+h@
`'  
`'` 
`'  
`'` 
`'(@
`'h@
`'(@
`'h@
`.! 
`.a 
`.! 
`.a 
`.)@
`.i@
`.)@
`.i@
