Querying
HDSPSleepScreenUnlockCount
v8@?0
DataVersion
v16@?0@"HKSPChange"8
v16@?0@"<HDSPSleepStorageObserver>"8
HDSPSleepScheduleStateChangeReason
HDSPSleepModeChangeReason
sleepIntervalScheduler
@"NAFuture"16@?0@"NSArray"8
SleepDailyAnalyticsReportQuery
com.apple.sleep.analytics-daily.activity
v32@?0@"HKSleepDaySummaryQuery"8@"NSArray"16@"NSError"24
Disabled
@"HDSPSleepLockScreenManager"16@?0@"HDSPEnvironment"8
@"HDSPSleepWidgetManager"16@?0@"HDSPEnvironment"8
@"HDSPSleepModeManager"16@?0@"HDSPEnvironment"8
@"HDSPSleepStorage"16@?0@"HDSPEnvironment"8
@"HDSPSleepScheduleModelManager"16@?0@"HDSPEnvironment"8
@"HDSPSleepEventScheduler"16@?0@"HDSPEnvironment"8
@"HDSPSleepStoreServer"16@?0@"HDSPEnvironment"8
@"HDSPSleepScheduleStateCoordinator"16@?0@"HDSPEnvironment"8
@"HDSPSleepActionManager"16@?0@"HDSPEnvironment"8
@"HDSPSleepAlarmManager"16@?0@"HDSPEnvironment"8
@"HDSPContextStoreManager"16@?0@"HDSPEnvironment"8
@"HDSPBiomeManager"16@?0@"HDSPEnvironment"8
@"HDSPSleepScheduleModelMigrationManager"16@?0@"HDSPEnvironment"8
@"HDSPNotificationListener"16@?0@"HDSPEnvironment"8
@"HDSPIDSServiceManager"16@?0@"HDSPEnvironment"8
@"HDSPDiagnostics"16@?0@"HDSPEnvironment"8
@"HDSPSystemMonitor"16@?0@"HDSPEnvironment"8
@"HDSPTimeChangeListener"16@?0@"HDSPEnvironment"8
@"HKSPSensitiveUIMonitor"16@?0@"HDSPEnvironment"8
v16@?0@"<HDSPChargingReminderStateMachineDelegate>"8
com.apple.healthlite.SleepDetectedActivity
com.apple.healthlite.SleepSessionEndRequest
SleepTracking
com.apple.sleep.applaunch.registration
@"<HDSPTimeAsleepTracker>"8@?0
v16@?0@"<HDSPTimeAsleepAnalysis>"8
@"HDSPSleepSessionInterval"16@?0@"NSDateInterval"8
v24@?0@"NSObject<NSCopying><NSSecureCoding>"8@"NSObject<NSCopying><NSSecureCoding>"16
v16@?0@"_CDContextualChangeRegistration"8
Current State: %@
Current State
HDSPWakeUpResultsNotificationErrorDomain
Query returned data insufficient to attempt wake up result computation
RESULT_NOTIFICATION_TITLE
HDSPWakeUpResultsNotificationLocalizer.m
This method can only localized content for One Day Wake Up Results; received category %@
This method can only localized content for One Week Wake Up Results; received category %@
One Week goal achieved count must be 3 or 4; received %@
This method can only localized content for Two Week Wake Up Results; received category %@
Daily sleep duration goal requires OneDay category
Weekly goal achieved requires OneWeek or TwoWeek category
WAKE_UP_RESULT_ONE_DAY_DURATION
WAKE_UP_RESULT_THREE_DAY_GOAL_ACHIEVED
WAKE_UP_RESULT_FOUR_DAY_GOAL_ACHIEVED
WAKE_UP_RESULT_TWO_WEEK_GOAL_ACHIEVED
%@_%ld
%@_%ld_SUBSTITUTION
%@_NAME_%ld
%@_NAME_%ld_SUBSTITUTION
com.apple.sleepd.diagnostics
com.apple.sleepd
<none>
v16@?0@"<HDSPDiagnosticsProvider>"8
LockScreenBedtimeExpired
com.apple.sleepd.contextstore-registration
v24@?0@"NSString"8@"NSDictionary"16
v16@?0@"<HDSPSleepSessionObserver>"8
HDSPSleepLockStateMachineLaunchContext
WaitingForRetry
WidgetUpcomingChange
WidgetBedtimeExpired
WidgetGreetingExpired
ActivityTracking
Demo
HDSPUnprocessedSessions
SleepSessions.data
@16@?0@"HDSPSleepSession"8
v24@?0@8@"NSError"16
v16@?0@"NSArray"8
v16@?0@8
@"NAFuture"16@?0@"HDSPSleepSession"8
ActivityAfterWakeUpTracking
StartBatteryMonitoring
StopBatteryMonitoring
com.apple.sleep.BatteryMonitoring.activity
@"NSNumber"16@?0@"HKSleepDaySummary"8
B16@?0@"HKSleepDaySummary"8
@16@?0@"HKSPAnalyticsWindDownEventData"8
not set
female
male
other
Waiting
NotOnboarded
Bedtime
WaitingForWakeUp
NOTIFICATION_HEADER_FORMAT_%@_%@
NOTIFICATION_SLEEP_TITLE
NOTIFICATION_HEALTHAPP_TITLE
HDSPEnvironmentContext
@"HDSPChargingReminderManager"16@?0@"HDSPEnvironment"8
@"HDSPWakeUpResultsNotificationManager"16@?0@"HDSPEnvironment"8
@"HDSPAnalyticsManager"16@?0@"HDSPEnvironment"8
@"HDSPSleepTrackingManager"16@?0@"HDSPEnvironment"8
@"HDSPGoodMorningAlertManager"16@?0@"HDSPEnvironment"8
@"HDSPWakeDetectionManager"16@?0@"HDSPEnvironment"8
@"HDSPSleepNotificationManager"16@?0@"HDSPEnvironment"8
defaultCallbackScheduler
v16@?0@"<HDSPEnvironmentAware>"8
v24@?0@"NSNull"8@"NSError"16
(%@) Current State: %@, System Ready: %d, Environment Ready: %d
Environment
none
System Ready
Environment Ready
com.apple.sleep.HDSPSleepStoreServer
HDSPSleepStoreSyncAnchor
@"HKSPXPCConnectionListener"16@?0@"HDSPSleepStoreServer"8
v24@?0@"HDSPWakeUpResultsNotificationBuilder"8@"NSError"16
v16@?0@"<HKSPSleepClient>"8
B16@?0@"HKSPXPCClient"8
v24@?0@"<HKSPSyncAnchor>"8@"NSError"16
v16@?0@"HKSPXPCClient"8
Sync Anchor: %@
Connected Clients: %@
Sync Anchor
Connected Clients
com.apple.rootrobot
configuration
minimal
WindDown
AutomatedOffFromManual
com.apple.mobile.keybagd.first_unlock
v16@?0@"<HDSPDeviceUnlockObserver>"8
Greeting
EARLY_DISMISS_YES
EARLY_DISMISS_NO
v12@?0B8
HDSPCFUserNotificationCenter.m
Invalid parameter not satisfying: %@
alarmEnabled || sleepModeOn
EARLY_WAKEUP_TITLE_ALARM_AND_SLEEP_FOCUS
EARLY_WAKEUP_TITLE_ALARM_AND_SLEEP_MODE
EARLY_WAKEUP_TITLE_SLEEP_FOCUS
EARLY_WAKEUP_TITLE_SLEEP_MODE
EARLY_WAKEUP_TITLE_ALARM
EARLY_WAKEUP_BODY_ALARM_AND_SLEEP_FOCUS
EARLY_WAKEUP_BODY_ALARM_AND_SLEEP_MODE
EARLY_WAKEUP_BODY_SLEEP_FOCUS
EARLY_WAKEUP_BODY_SLEEP_MODE
EARLY_WAKEUP_BODY_ALARM
AutoTracking
v24@?0@"NSArray"8@"NSError"16
v16@?0@"NAPromise"8
isOnWrist
lastOnWristDate
v16@?0@"<HDSPWatchOnWristObserver>"8
Initial
v16@?0@"<HDSPGoodMorningAlertStateMachineDelegate>"8
v16@?0@"<HDSPApplicationWorkspaceObserver>"8
B16@?0@"_HDSPCFUserNotificationCenterRegistration"8
Launched: %@
Launched
v16@?0@"<HDSPEnvironmentStateMachineDelegate>"8
DelayedWakeUp
confirmedUntilDate
wakeUpConfirmedDate
wakeUpConfirmedUntilDate
Notified
v16@?0@"<HDSPWakeUpResultsNotificationStateMachineDelegate>"8
@"<HDSPSyncedUserDefaults>"8@?0
v16@?0@"NSSet"8
v16@?0@"<HKSPUserDefaults>"8
v16@?0@"NSString"8
ScheduleWakeDetection
@"<HDSPWakeDetector>"16@?0@"HDSPEnvironment"8
@"<HDSPWakeDetector>"16@?0@?<@"<HDSPWakeDetector>"@?@"HDSPEnvironment">8
B16@?0@"<HDSPWakeDetector>"8
v16@?0@"<HDSPWakeDetector>"8
B16@?0@"NSDate"8
B16@?0@"NSDateInterval"8
@"NSDate"16@?0@"NSDateInterval"8
@16@?0@"<HDSPWakeDetector>"8
Presenting
InternalEnd
HKSPSleepEventIdentifierWakeUpResultsNotificationAttemptBegin
HKSPSleepEventIdentifierWakeUpResultsNotificationAttemptTimeout
WakeUpResultsNotificationDelayOverride
com.apple.sleep.WakeUpResultsNotificationRetry.activity
B16@?0@"HKSPSleepEvent"8
HDSPWakeUpResultsNotificationManager.m
_queryResultFuture must be finished before we can post notification
v16@?0@"HDSPWakeUpResultsNotificationBuilder"8
v16@?0@"NSError"8
WakeUpResults
ManualOff
v16@?0@"HDSPSyncedDefaultsKeySet"8
@"NSSet"16@?0@"HDSPSyncedDefaultsKeySet"8
B16@?0@"HDSPSyncedDefaultsKeySet"8
B24@?0@"NSString"8@"HDSPSyncedDefaultsKeySet"16
@24@?0@"NSString"8@"HDSPSyncedDefaultsKeySet"16
HKSPLastSchedule
HKSPLastSettings
HKSPLastRecord
v20@?0B8@"NSError"12
Detecting
date
identifier
Bedtime In Progress
HDSPLastEventTriggerDate
HDSPLastStandardSleepEvent
HDSPRescheduleAssertion
HDSPRescheduleTransaction
HDSPNotifyDueAssertion
@"<HDSPEventScheduler>"16@?0@"HDSPEnvironment"8
@"HKSPThrottler"16@?0@?<v@?>8
com.apple.sleep.HDSPSleepEventScheduler
v16@?0@"<HDSPSleepEventProvider>"8
v16@?0@"HKSPSleepEvent"8
@"NAFuture"16@?0@"<HDSPSleepEventHandler>"8
Scheduled Events: %@, Last Standard Sleep Event: %@
Scheduled Events
Last Standard Sleep Event
B16@?0@"MTAlarm"8
@"<HDSPProcessState>"12@?0i8
@"RBSProcessPredicate"16@?0@"RBSProcessIdentifier"8
v32@?0@"RBSProcessMonitor"8@"RBSProcessHandle"16@"RBSProcessStateUpdate"24
v16@?0@"<RBSProcessMonitorConfiguring>"8
SignificantTimeChange
com.apple.system.timezone
v16@?0@"<HDSPTimeChangeObserver>"8
com.apple.alarm
com.apple.sleepd.NextAlarm
Date
UserVisible
Ready
sleepEvents
Ready: %d
Has Been Unlocked: %d
Charging: %d
Battery: %f
On Wrist: %d
Has Been Unlocked
Charging
Battery
OnWrist
com.apple.SleepDaemon
Localizable
GeneratedCoaching
@"NSString"16@?0@"<HDSPAssertion>"8
B16@?0@"<HDSPAssertion>"8
transactions
assertions
Assertions: %@
Transactions: %@
Assertions
Transactions
@"NAFuture"16@?0@"<HDSPSleepScheduleStateObserver>"8
@"NAFuture"8@?0
BedtimeInProgress
sleepModeOn
Migration
v16@?0@"<BMStoreData>"8
eventBody.semanticModeIdentifier
com.apple.sleep.HDSPBiomeManager.queue
com.apple.sleepd.biome
v16@?0@"BPSCompletion"8
v16@?0@"BMStoreEvent"8
GoodMorningAlertTimeOut
v16@?0@"<HDSPGoodMorningAlertObserver>"8
v16@?0@"<HDSPSleepNotificationPublisher><HDSPEnvironmentAware>"8
v16@?0@"<HDSPSleepNotificationPublisher>"8
@"NAFuture"16@?0@"<HDSPSleepActionObserver>"8
v16@?0@"<HDSPSleepActionObserver>"8
v16@?0@"MTAlarm"8
@"NSDate"16@?0@"MTAlarm"8
v16@?0@"<HDSPWakeDetectionStateMachineDelegate>"8
Upcoming
isSignificantChange
isSignificantEventRecordUpdate
topLevelChangeKeys
com.apple.system.powersources.source
v16@?0@"<HDSPDevicePowerObserver>"8
v16@?0@"<HDSPSleepLockScreenStateMachineDelegate>"8
v16@?0@"NSObject<OS_xpc_object>"8
DelayingForTracking
goodMorningDismissed
WakeUp
v16@?0@"<HDSPSleepScheduleStateCoordinatorStateMachineDelegate>"8
com.apple.private.alloy.sleep.classd
source
changeEvaluation
SleepSessionDateInterval
SleepSessionSleepIntervals
SleepSessionEndReason
SleepSessionMetadata
RequiresFirstUnlock
@"NSDateInterval"8@?0
@"NSArray"8@?0
Q8@?0
@"NSDictionary"8@?0
B8@?0
interval
sleepIntervals
endReason
requiresFirstUnlock
SleepSessionInterval
SleepSessionType
type
Awake
InBed
InSleep
Manual
OnCharger
ActivityDetectedAfterWakeUp
AppLaunchedAfterWakeUp
Internal
TimeOut
Cancel
Error
Scheduled
v16@?0@"<HDSPSleepScheduleModelObserver>"8
B16@?0^@8
B16@?0@"HKSPSleepScheduleOccurrence"8
Sleep Schedule Model: %@
Sleep Schedule Model
Carousel
Springboard
v12@?0i8
v16@?0@"<HDSPSpringboardObserver>"8
com.apple.springboard.finishedstartup
ManualTracking
B16@?0@"UNNotification"8
@16@?0@"UNNotification"8
en_US_POSIX
yyyy-MM-dd_HH:mm
BEDTIME_REMINDER_TITLE
BEDTIME_REMINDER_MESSAGE
WIND_DOWN_REMINDER_TITLE
WIND_DOWN_REMINDER_MESSAGE
WIND_DOWN_REMINDER_MESSAGE_PRE_ONBOARDING
HDSPUserNotificationCenter.m
This method can only be used to format localized strings containing bedtime or wakeUp times.
_SINGULAR
CHARGE_WATCH_TITLE
CHARGE_WATCH_ALARM_MESSAGE
CHARGE_WATCH_SLEEP_TRACKING_MESSAGE
CHARGE_WATCH_NO_ALARM_OR_SLEEP_TRACKING_MESSAGE
v16@?0@"<HDSPSleepModeStateMachineDelegate>"8
v16@?0Q8
v16@?0@"<HDSPSleepWidgetStateMachineDelegate>"8
com.apple.sleep.sync.SleepScheduleDidChange
com.apple.sleep.NPSDomainAccessor.serial
v24@?0@"NSString"8@"<NSCopying><NSCoding>"16
AutomatedOff
NotReady
NeedsProtectedData
com.apple.distnoted.matching
com.apple.notifyd.matching
Notification
@"NAFuture"16@?0@"<HDSPNotificationObserver>"8
Monitoring
com.apple.mobiletimerd.MTAlarmServer
v24@?0@"MTAlarm"8@"NSError"16
@"NAFuture"16@?0@"NSNull"8
ManualBedtime
v16@?0@"BMUserFocusComputedModeEvent"8
HDSPSleepModeManager.m
Unable to set wind down via this method
v16@?0@"<HDSPSleepModeObserver>"8
state
specificState
[%{public}@] Received query failed with error %{public}@
[%{public}@] Received query completion event
[%{public}@] Received protected heath data available event
[%{public}@] Executing query
[%{public}@] startDetecting
[%{public}@] stopDetecting
[%{public}@] setNumberOfTimesDismissed: %ld
[%{public}@] sleepLockWasDismissed (%ld times)
[%{public}@] counts as early wake up
[%{public}@] loading schedule
[%{public}@] persisting schedule %{public}@
[%{public}@] persisting schedule changes %{public}@
[%{public}@] removing sleep schedule
[%{public}@] loading settings
[%{public}@] persisting settings %{public}@
[%{public}@] persisting settings changes %{public}@
[%{public}@] removing sleep settings
[%{public}@] loading event record
[%{public}@] creating default event record
[%{public}@] persisting event record %{public}@
[%{public}@] persisting event record changes %{public}@
[%{public}@] removing sleep event record
[%{public}@] loading model
[%{public}@] persisting model
[%{public}@] nothing persisted for properties of class %{public}@
[%{public}@] failed deserialization of class %{public}@ with error %{public}@
[%{public}@] failed serialization with error %{public}@
[%{public}@] environmentWillBecomeReady
[%{public}@] environmentDidBecomeReady
[%{public}@] syncedDefaultsDidChangeExternally
[%{public}@] it's bedtime, turning on bedtime mode if it's not on
[%{public}@] it's wind down, turning on wind down mode if it's not on
[%{public}@] turning off sleep mode if it's on
[%{public}@] it's wind down, turning on sleep mode mode
[%{public}@] it's wind down but sleep mode is disabled, turning off sleep mode
[%{public}@] it's bedtime, turning on sleep mode mode
[%{public}@] it's bedtime but sleep mode is disabled, turning off sleep mode
[%{public}@] it's wake up, turning off sleep mode
[%{public}@] sleep schedule state was disabled
[%{public}@] bedtime mode turned on (%{public}@)
[%{public}@] ignoring automation turn on
[%{public}@] ignoring automation turn off
[%{public}@] sleep focus mode changed
[%{public}@] no sleep focus mode exists
[%{public}@] sleep schedule disabled
[%{public}@] time in bed tracking disabled
[%{public}@] state changed to wake up (%{public}@)
[%{public}@] ending time in bed tracking
[%{public}@] ending sleep session with reason %{public}@
[%{public}@] created %{public}@
[%{public}@] using 90 minutes before bedtime %{public}@ as session start
[%{public}@] using bedtime date %{public}@ as session start
[%{public}@] computing in bed intervals inside %{public}@
[%{public}@] _computeSessionMetadataForInterval: %{public}@
[%{public}@] previous occurrence: %{public}@
[%{public}@] user set wake time: %{public}@ user set bed time: %{public}@
[%{public}@] finished processing session: %{public}@
[%{public}@] processed session has intervals: %@
[%{public}@] Environment will become ready
[%{public}@] Environment did become ready
[%{public}@] Significant time change detected
[%{public}@] Updating schedule activity
[%{public}@] Scheduling daily collection activity
[%{public}@] Running daily collection activity
[%{public}@] Cancelling daily collection activity
[%{public}@] Data collection disabled; not executing query
[%{public}@] Data collection is already in progress; not executing query
[%{public}@] Query failed with error: %{public}@
[%{public}@] Query succeeded
[%{public}@] Sending daily reports: %{public}@
[%{public}@] Pruning wind down action data prior to %{public}@
[%{public}@] in detection window
[%{public}@] sleep features disabled
[%{public}@] sleep tracking onboarding not completed
[%{public}@] sleep coaching onboarding not completed
[%{public}@] setting initial demo schedule
[%{public}@] resetDemoMode
[%{public}@] failed to delete schedule with error %{public}@
[%{public}@] failed to save model with error %{public}@
[%{public}@] updateState
[%{public}@] telling scheduler we have events to schedule
[%{public}@] telling scheduler we no longer have events to schedule
[%{public}@] starting sleep session (%{public}@)
[%{public}@] sleep tracker completed sleep analysis for session with end reason %{public}@
[%{public}@] no sleep analysis provided
[%{public}@] not saving session with end reason %{public}@
[%{public}@] invalid session with start date %{public}@ after end date %{public}@!
[%{public}@] created session has intervals: %@
[%{public}@] starting activity detection
[%{public}@] stopping activity detection
[%{public}@] starting app launch detection
[%{public}@] app launch detected: %{public}@
[%{public}@] stopping app launch detection
[%{public}@] notifying for activity detected on date %{public}@
[%{public}@] didUpdateSleepScheduleModel: %{public}@
[%{public}@] sleepScheduleStateDidChange: %{public}@ previousState: %{public}@ (%{public}@)
[%{public}@] scheduling %{public}@
[%{public}@] sleep tracking event due
[%{public}@] sleepModeDidChange: %{public}@ (%{public}@)
[%{public}@] device charging state changed: %d
[%{public}@] significant time change detected
[%{public}@] received %{public}@
[%{public}@] ignoring stopDetecting
[%{public}@] previousSessionFinished
[%{public}@.%p] initializing...
----------------------------%{public}@----------------------------
[%{public}@]
[%{public}@] sleep mode did change: %{public}@ (%{public}@)
[%{public}@] sleep settings did change
[%{public}@] present the good morning alert
[%{public}@] dismiss the good morning alert
[%{public}@] sleepLockScreenStateDidChange: %ld previousState: %ld
[%{public}@] updating assertion, sleep screen enabled: %@, sleep mode on: %@
[%{public}@] significantTimeChangeDetected
[%{public}@] timeZoneChangeDetected
[%{public}@] overriding lock screen state: %@ (userInfo: %@)
[%{public}@] bedtime expired event due
[%{public}@] no events to schedule
[%{public}@] registering predicate %{public}@ for identifier %{public}@
[%{public}@] processing callback with identifier %{public}@
[%{public}@] unregistering %{public}@
[%{public}@] sleep state changed from %{public}@ to %{public}@ (%{public}@)
[%{public}@] ignoring wake up state as it was not due to normal reason
[%{public}@] sleep event due %{public}@
[%{public}@] sleep mode changed from %{public}@ to %{public}@ (%{public}@)
[%{public}@] adding %{public}@ to context
[%{public}@] previous context is %{public}@
[%{public}@] previous context is of unexpected class %{public}@
[%{public}@] new context is %{public}@
[%{public}@] didSaveSession %{public}@
[%{public}@] didSaveArchivedSessions %{public}@
[%{public}@] requestsProcessedSessionForSession %{public}@
[%{public}@] sleepSessionManagerDidFinishSession
[%{public}@] presenting good morning alert
[%{public}@] skipping good morning alert, lock screen isn't active
[%{public}@] user turned on sleep mode
[%{public}@] determined state: %{public}@
[%{public}@] sleep mode is off, waiting to be told to present greeting
[%{public}@] sleep mode is off, not presenting greeting (%{public}@)
[%{public}@] sleep screen disabled
[%{public}@] Received retry event
[%{public}@] overriding widget state
[%{public}@] sleep schedule model did change
[%{public}@] sleep schedule state did change
[%{public}@] sleep mode did change
[%{public}@] sleepWidgetStateDidChange: %{public}@ (%{public}@)
[%{public}@] sleepWidgetShouldReload (%{public}@)
[%{public}@] greeting expired event due
[%{public}@] upcoming change event due
[%{public}@] activity detected during sleep window %{public}@, notifying
[%{public}@] good morning alerts disabled
[%{public}@] starting session
[%{public}@] stopping session
[%{public}@] there are unprocessed sessions to save
[%{public}@] can write session data
[%{public}@] can't write sessions until first unlock
[%{public}@] no unprocessed sessions to save
[%{public}@] waiting for first unlock
[%{public}@] %ld unprocessed sessions
[%{public}@] %ld processed sessions
[%{public}@] caught exception %{public}@ when trying to read sessions
[%{public}@] unarchiving failed with error %{public}@
[%{public}@] no data found in file %{public}@
[%{public}@] archiveSession: %{public}@
[%{public}@] creating session directory at %{public}@
[%{public}@] failed to create directory at %{public}@ with error %{public}@
[%{public}@] wrote sessions to file %{public}@
[%{public}@] failed to write sessions file with error %{public}@
[%{public}@] saveSession %{public}@
[%{public}@] session has nothing to write
[%{public}@] session needs additional processing
[%{public}@] session is ready to write
[%{public}@] saving processed session %{public}@
[%{public}@] archiving session for now
[%{public}@] failed to remove session data file error %{public}@
[%{public}@] deviceHasBeenUnlocked
[%{public}@] saving session %{public}@ from %{public}@
[%{public}@] determining state
[%{public}@] not onboarded, determined state: %{public}@
[%{public}@] schedule disabled, determined state: %{public}@
[%{public}@] in user requested sleep mode, determined state: %{public}@
[%{public}@] nextEvent: %{public}@
[%{public}@] wake up date: %{public}@ (secondsAfterWakeUp: %f)
[%{public}@] schedule state is disabled
[%{public}@] schedule state is wind down
[%{public}@] timed out waiting for activity, ending tracking.
[%{public}@] activity detected after wake up (%{public}@), ending tracking
[%{public}@] app launched after wake up (%{public}@), ending tracking
[%{public}@] sleepScheduleStateDidChange
[%{public}@] deviceChangedChargingState (isCharging: %d)
[%{public}@] ignoring monitor end date (%{public}@) before start date (%{public}@)
[%{public}@] monitor window is: %{public}@
[%{public}@] already passed current window %{public}@
[%{public}@] startBatteryMonitoring
[%{public}@] checkBatteryLevel
[%{public}@] stopBatteryMonitoring
[%{public}@] battery monitoring event due
[%{public}@] it's time to stop monitoring
[%{public}@] it's bedtime
[%{public}@] posting battery reminder notification
[%{public}@] Building daily analytics report from %{public}lu summaries in range %{public}@
[%{public}@] Summary: %{public}@
[%{public}@] Schedule's last modified date occurred after the current date
[%{public}@] Onboard date occurred after the current date
[%{public}@] Unable access biological sex due to error: %{public}@
[%{public}@] Unable access age due to error: %{public}@
[%{public}@] skipping good morning alert, watch is charging
[%{public}@] wake time reached and alarm enabled
[%{public}@] wake time reached and alarm disabled
[%{public}@] wake up was confirmed
[%{public}@] Received wake up event
[%{public}@] Transitioning to delaying for tracking state
[%{public}@] received upoming change event due
[%{public}@] shutdown
[%{public}@] prepare
[%{public}@] systemDidBecomeReady
[%{public}@] environment needs migration
[%{public}@] dataMigrationDidComplete (error: %{public}@))
[%{public}@] environment is ready
%{public}@ updated syncAnchor: %{public}@
[%{public}@] startListening
[%{public}@] environmentDidBecomeReady: %{public}@
[%{public}@] Environment will become invalid
[%{public}@] connect received from %{public}@
[%{public}@] server disabled
[%{public}@] check in received from %{public}@ with syncAnchor: %{public}@
[%{public}@] request received for sleep schedule
[%{public}@] performing request for sleep schedule
[%{public}@] completing request for sleep schedule: %{public}@
[%{public}@] request received to save current sleep schedule: %{public}@ from: %{public}@
[%{public}@] performing request to save current sleep schedule: %{public}@ from: %{public}@
[%{public}@] request received to save current sleep schedule failed: %{public}@
[%{public}@] completing request to save current sleep schedule: %{public}@ from: %{public}@
[%{public}@] request received for sleep settings
[%{public}@] performing request for sleep settings
[%{public}@] completing request for sleep settings: %{public}@
[%{public}@] request received to save current sleep settings: %{public}@ from: %{public}@
[%{public}@] performing request to save current sleep settings: %{public}@ from: %{public}@
[%{public}@] request received to save current sleep settings failed: %{public}@
[%{public}@] completing request to save current sleep settings: %{public}@ from: %{public}@
[%{public}@] request received for sleep event record
[%{public}@] performing request for sleep event record
[%{public}@] completing request for sleep event record: %{public}@
[%{public}@] request received to save current sleep event record: %{public}@ from: %{public}@
[%{public}@] performing request to save current sleep event record: %{public}@ from: %{public}@
[%{public}@] request received to save current sleep event record failed: %{public}@
[%{public}@] completing request to save current sleep event record: %{public}@ from: %{public}@
[%{public}@] request received for sleep mode on
[%{public}@] performing request for sleep mode on
[%{public}@] completing request for sleep mode: %ld
[%{public}@] request received to set sleep mode: %{public}@ (%{public}@) from: %{public}@
[%{public}@] performing request set sleep mode: %{public}@ (%{public}@) from: %{public}@
[%{public}@] completing request to set sleep mode: %{public}@ (%{public}@) from: %{public}@
[%{public}@] request received for sleep schedule state
[%{public}@] performing request for sleep schedule state
[%{public}@] completing request for sleep schedule state: %{public}@
[%{public}@] request received for sleep widget state
[%{public}@] performing request for sleep widget state
[%{public}@] completing request for sleep widget state: %{public}@
[%{public}@] Request received to publish notification: %@
[%{public}@] Performing request to publish notification: %@
[%{public}@] Completing request to publish notification: %@
[%{public}@] Request received to publish wake up results notification
[%{public}@] Performing request to publish wake up results notification
[%{public}@] Request received to override lock screen state: %@ (userInfo: %@)
[%{public}@] Performing request override lock screen state: %@
[%{public}@] lock screen not supported on this device
[%{public}@] Completing request override lock screen state: %@
[%{public}@] Request received to override sleep widget state: %@
[%{public}@] Performing request to override sleep widget state: %@
[%{public}@] widgets not supported on this device
[%{public}@] Completing request to override sleep widget state: %@
[%{public}@] Request received to clear sleep widget override
[%{public}@] Performing request clear sleep widget override
[%{public}@] Completing request to clear sleep widget override
[%{public}@] feature disabled
[%{public}@] Request received to create sleep focus mode
[%{public}@] Performing request to create sleep focus mode
[%{public}@] Completing request to create sleep focus mode
[%{public}@] Request received to delete sleep focus mode
[%{public}@] Performing request to delete sleep focus mode
[%{public}@] Completing request to delete sleep focus mode
[%{public}@] Request received to confirm awake from: %{public}@
[%{public}@] Performing request to confirm awake
[%{public}@] Completing request to confirm awake
[%{public}@] Request received to dismiss good morning from: %{public}@
[%{public}@] Performing request to dismiss good morning
[%{public}@] Completing request to dismiss good morning
[%{public}@] Request received to dismiss sleep lock from: %{public}@
[%{public}@] Performing request to dismiss sleep lock
[%{public}@] Completing request to dismiss sleep lock
[%{public}@] Request received for sleep alarm dismissal on %{public}@ from: %{public}@
[%{public}@] Performing request for sleep alarm dismissal on %{public}@
[%{public}@] Completing request for sleep alarm dismissal on %{public}@
[%{public}@] Request received for sleep alarm snooze until %{public}@ from: %{public}@
[%{public}@] Performing request for sleep alarm snooze until %{public}@
[%{public}@] Completing request for sleep alarm snooze until %{public}@
[%{public}@] Request received for sleep alarm modified from: %{public}@
[%{public}@] Performing request for sleep alarm modified
[%{public}@] Completing request for sleep alarm modified
[%{public}@] source: %{public}@ didUpdateSleepSchedule: %{public}@
[%{public}@] source: %{public}@ didUpdateSleepSettings: %{public}@
[%{public}@] source: %{public}@ didUpdateSleepEventRecord: %{public}@
[%{public}@] sleepEventIsDue: %{public}@
[%{public}@] sleepScheduleStateDidChange: %{public}@ (%{public}@)
[%{public}@] sleepModeDidChange: %ld previousMode: %ld reason: %{public}@
[%{public}@] skipping notification to suspended client: %{public}@
[%{public}@] %{public}@ has out of date sync anchor (%{public}@ vs %{public}@)
[%{public}@] asking newly running client to check in: %{public}@
[%{public}@] client did become suspended: %{public}@
[%{public}@] initializing with %{public}@
[%{public}@] Carousel is started.
[%{public}@] Waiting for Carousel to start.
[%{public}@] NPS completed initial sync.
[%{public}@] NPS hasn't completed initial sync.
[%{public}@] Waiting for CSLSApplicationStateRestoredNotification
[%{public}@] we're in demo environment
[%{public}@] Checking if we are in root robot.
[%{public}@] Running in root robot %d
[%{public}@] Carousel has started
[%{public}@] restore finished
[%{public}@] sleep mode turned on via automation
[%{public}@] going back into %{public}@
[%{public}@] received bedtime expired event due
[%{public}@] found initial hasBeenUnlockedSinceBoot value of [%d]
[%{public}@] handleFirstUnlock
[%{public}@] received greeting expired event due
[%{public}@] publishWakeDetectionNotification
[%{public}@] sleep mode is on
[%{public}@] alarm is enabled
[%{public}@] confirming the awake notification
[%{public}@] dismissing the awake notification
[%{public}@] publishing notification with properties %{public}@
[%{public}@] posting CFUserNotification for %{public}@
[%{public}@] failed to post CFUserNotification (%d)
[%{public}@] failed to create CFUserNotification (%d)
[%{public}@] calling handler for %{public}@
[%{public}@] cancelling CFUserNotification for %{public}@
[%{public}@] sleep schedule disabled, ending tracking.
[%{public}@] user confirmed wake up, ending tracking.
[%{public}@] alarm disabled and wake time reached, continuing tracking until activity is detected.
[%{public}@] wake up occurred because of expired alarm, ending tracking
[%{public}@] started in wake up state, continuing tracking until activity is detected.
[%{public}@] wake up occurred for another reason, ending tracking.
[%{public}@] sleep mode exited during automatic tracking (%{public}@), ignoring.
[%{public}@] starting activity tracking
[%{public}@] performing data migration from from version %lu to %lu
[%{public}@] migrating from MobileTimer
[%{public}@] migrating from sleep alarm %{public}@
[%{public}@] migrating settings based on onboarding
[%{public}@] sleep coaching completed, enabling dnd during wind down
[%{public}@] sleep tracking completed, enabling watch face
[%{public}@] migrating sleep focus mode
[%{public}@] creating sleep focus mode because we've already onboarded or enabled scheduledSleepMode
[%{public}@] failed to migrate sleep focus mode
[%{public}@] skipping focus mode creation
[%{public}@] didUpdateOnWristState from %{public}@ to %{public}@
[%{public}@] wasOnWrist: %d
[%{public}@] on wrist state definitely changed to off.
[%{public}@] on wrist state definitely changed to on.
[%{public}@] HID requested sleep session end, ending tracking.
[%{public}@] failed to create application record: %{public}@.
[%{public}@] System is ready
[%{public}@] Springboard started
sleepd disabled
sleepd entering demo mode
sleepd setting up sigterm handler
sleepd received sigterm
[%{public}@] treating disabled alarm as confirmed wake up
[%{public}@] still waiting for snoozed alarm %{public}@
[%{public}@] waiting until %{public}@
[%{public}@] it's time for wind down
[%{public}@] it's time for bed
[%{public}@] good morning screen has been up too long
[%{public}@] dismissing good morning alert
[%{public}@] it's before wake up time, expiring state
[%{public}@] not posting wake detection notification
[%{public}@] wake detection disabled after notifying
[%{public}@] state is expired
[%{public}@] detectedOnWristOnDate: %{public}@
[%{public}@] loading default value %{public}@ for %{public}@
[%{public}@] hdsp_setExternalChangeDelegate %{public}@
[%{public}@] _nanoDefaultsDidReceiveExternalChange
[%{public}@] has wakeDetectors: %{public}@
[%{public}@] wake up event was detected by %{public}@ at %{public}@
[%{public}@] event outside of detection window %{public}@
[%{public}@] startWakeDetection
[%{public}@] stopWakeDetection
[%{public}@] wake detection event due
[%{public}@] posting wake detection notification
[%{public}@] not posting notification because sleep mode and alarm are off
[%{public}@] wake detection notification posted on other device
sleepInterval is nil
Sleep interval: %f greater than allowed: %f. Will not be used
[%{public}@] presentAlertForGoodMorning
[%{public}@] dismissAlertForGoodMorning
[%{public}@] good morning alert dismissed %{public}@
[%{public}@] keeping off until next %{public}@ at %{public}@
[%{public}@] wind down entered from %{public}@
[%{public}@] bedtime entered from %{public}@
[%{public}@] updating state
[%{public}@] Update state
[%{public}@] Environment did become ready.
[%{public}@] Sleep model changed
[%{public}@] sleepScheduleStateChanged from %{public}@ to %{public}@ for %{public}@
[%{public}@] Not in delaying state yet; no events to schedule until user wakes up
[%{public}@] No previous wake up events found before date; no events to schedule
[%{public}@] Creating events for attempt window %{public}@; events: %{public}@
[%{public}@] Tracking delay event due
[%{public}@] Daily results notification attempt timeout due
[%{public}@] Resolved attempt window beforeDate: %@ (passed: %@)
[%{public}@] Overriding default notification delay to %{public}@s
[%{public}@] Requesting to schedule tracking delay
[%{public}@] Requesting to cancel tracking delay
[%{public}@] Scheduling retry attempt
[%{public}@] Attempting retry
[%{public}@] Unscheduling retry attempt
[%{public}@] Start observing protected data availability
[%{public}@] Stop observing protected data availability
[%{public}@] Starting new query
[%{public}@] Unexpected call to start query while already in progress
[%{public}@] Preparing daily results notification
[%{public}@] Query succeeded with result: %{public}@
[%{public}@] Unable to fetch user name with error %{public}@
[%{public}@] no previous model to restore
[%{public}@] restoring previous model
[%{public}@] sleep schedule added
[%{public}@] sleep schedule changes were significant
[%{public}@] sleep schedule removed
[%{public}@] sleep settings added
[%{public}@] sleep settings changes were significant
[%{public}@] sleep record added
[%{public}@] sleep record changes were significant
[%{public}@] syncing notifiedForEarlyWakeUpMessage %{public}@
[%{public}@] syncing setSleepModeMessage %{public}@
[%{public}@] focus mode enabled, checking if paired device supports focus mode
[%{public}@] not syncing because paired device supports focus mode
[%{public}@] not syncing message for source %{public}@
[%{public}@] not syncing message to/from watch because watch sleep features are disabled
[%{public}@] syncing confirmWakeUpMessage %{public}@
[%{public}@] syncing dismissGoodMorningMessage %{public}@
[%{public}@] sending message %{public}@ on service %{public}@
[%{public}@] sent message %{public}@ on service %{public}@
[%{public}@] failed to send message %{public}@ with error %{public}@ on service %{public}@
[%{public}@] received message %{public}@ from service %{public}@
[%{public}@] unexpected message received %{public}@
[%{public}@] _handleSetSleepModeMessage: %{public}@
[%{public}@] _handleConfirmWakeUpMessage: %{public}@
[%{public}@] _handleDismissGoodMorningMessage: %{public}@
[%{public}@] _handleNotifiedForEarlyWakeUpMessage: %{public}@
[%{public}@] wakeDetectionEventDue
[%{public}@] wakeupEventDetected: %{public}@
[%{public}@] ignoring wake up event because sleep mode is off and alarm is disabled
[%{public}@] wake detection event found
[%{public}@] earlyWakeUpWasNotifiedRemotely
_HDSPPowerAssertion
[%{public}@] Error setting relevant shortcuts in store %{public}@
[%{public}@] rescheduling events...
[%{public}@] unscheduling events...
[%{public}@] sleep schedule disabled, not scheduling
[%{public}@] sleep features disabled for this watch, not scheduling
[%{public}@] failed to deserialize sleep event %{public}@ with error %{public}@
[%{public}@] updating last standard sleep event: %{public}@
[%{public}@] failed to serialize sleep event %{public}@ with error %{public}@
[%{public}@] gathering pending events
[%{public}@] looking for events due after: %{public}@ from: %{public}@
[%{public}@] %{public}@ has upcoming events: %{public}@
[%{public}@] %{public}@ has no upcoming events
[%{public}@] all upcoming events: %{public}@
[%{public}@] next event is %{public}@
[%{public}@] event is already due
[%{public}@] no upcoming events
[%{public}@] scheduledEventIsDue
[%{public}@] overdue events: %{public}@
[%{public}@] notifying %{public}@ for %{public}@
[%{public}@] eventProviderHasUpcomingEvents: %{public}@
[%{public}@] eventProviderCancelledEvents: %{public}@
[%{public}@] event provider %{public}@ didn't synthesize a delegate
[%{public}@] setting lastEventTriggerDate to current date because it's in the future
[%{public}@] saving sessions
[%{public}@] checking auth status
[%{public}@] doesn't have write access for HKCategoryTypeIdentifierSleepAnalysis
[%{public}@] processing session: %@
[%{public}@] skipping session due to missing bedtime or wake time: %@
[%{public}@] creating HealthKit samples
[%{public}@] saving samples to HealthKit failed with error: %{public}@
[%{public}@] finished saving %lu samples
[%{public}@] reset sleep alarm snooze state
[%{public}@] updating sleep alarms for model change
[%{public}@] failed to fetch handle with error: %{public}@
[%{public}@] monitoring process: %{public}@
[%{public}@] no longer monitoring process: %{public}@
[%{public}@] process %{public}@ no longer suspended
[%{public}@] process %{public}@ is suspended
[%{public}@] handleSignificantTimeChange
[%{public}@] timeZone: %{public}@
[%{public}@] handleTimeZoneChange
[%{public}@] bedtime has changed to be later, treating state as expired
[%{public}@] charging reminders disabled after notifying
[%{public}@] system is ready
[%{public}@] system not ready
[%{public}@] Taking assertion with identifier %{public}@
[%{public}@] Releasing assertion with identifier %{public}@
_HDSPOSTransaction
[%{public}@] transaction timed out
[%{public}@] _updateSleepScheduleState
[%{public}@] notifying observers for sleepScheduleStateDidChange from %{public}@ to %{public}@ with reason %{public}@
[%{public}@] failed to save event record with error %{public}@
[%{public}@] setting wakeUpWithNoAlarmDate to %{public}@
[%{public}@] setting wakeUpAlarmDismissedDate to %{public}@
[%{public}@] snoozeFireDateShouldBeReset
[%{public}@] wakeTimeReached
[%{public}@] bedtimeReached
[%{public}@] windDownReached
[%{public}@] wakeNotificationWasConfirmed
[%{public}@] wakeUpAlarmWasDismissed
[%{public}@] user turned on sleep mode, staying here
[%{public}@] in user requested sleep mode, staying here
[%{public}@] Init failed: Invalid morning index range %{public}@
[%{public}@] Init failed: Nil sleep day summaries
[%{public}@] Init failed: Zero sleep day summaries
[%{public}@] Init failed: No sleep day summary for last night
[%{public}@] Init failed: No asleep duration for last night
[%{public}@] Building notification from %lu summaries in range %{public}@
[%{public}@] Did not meet sleep duration goal last night; this is required for all notifications
[%{public}@] Not enough days achieved for two-week goal notification
[%{public}@] Too many days achieved for two-week goal notification
[%{public}@] Not enough days achieved for short-week goal notification
[%{public}@] Too many days achieved for short-week goal notification
[%{public}@] Not enough days achieved for last night goal notification
[%{public}@] Too many days achieved for last night goal notification
[%{public}@] dropping Biome callback
[%{public}@] subscribing publisher %{public}@
[%{public}@] unsubscribing %{public}@
[%{public}@] we're in user requested sleep mode before wind down/bedtime, telling Biome
[%{public}@] writing event: [%{public}@]
[%{public}@] finished publishing with error %{public}@
[%{public}@] received callback with event %{public}@
[%{public}@] good morning alert timed out
[%{public}@] goodMorningWasDismissed
[%{public}@] telling observers to present good morning alert
[%{public}@] telling observers to dismiss good morning alert
[%{public}@] publishNotificationForEvent: %{public}@
[%{public}@] tearDownNotifications
[%{public}@] posting good morning notification
[%{public}@] didUpdateSleepSchedule: %{public}@
[%{public}@] tearing down notifications at bedtime
[%{public}@] tearing down notifications at wake up
[%{public}@] tearing down charging reminder
[%{public}@] tearing down bedtime reminder
[%{public}@] tearing down wind down reminder
[%{public}@] tearing down wake detection notification
[%{public}@] tearing down good morning notification
[%{public}@] Telling scheduler we have events to schedule
[%{public}@] Bedtime and wind down notifications disabled
[%{public}@] Bedtime and wind down notifications disabled since sleep features are disabled on Watch.
[%{public}@] Ignoring event %{public}@ due to being in current state %{public}@
[%{public}@] wind down mode turned off by user (%{public}@)
[%{public}@] wind down mode turned off by automation (%{public}@)
[%{public}@] successfully set mode configuration
[%{public}@] failed to set mode configuration with error: %{public}@
[%{public}@] failed to create default mode configuration with error: %{public}@
[%{public}@] failed to get mode configuration with error: %{public}@
[%{public}@] sleep mode configuration already exists
[%{public}@] wake up notification confirmed (%{public}@)
[%{public}@] Ignoring request to confirm wake up due to state %{public}@
[%{public}@] wake up notification confirmed at %{public}@, until %{public}@, (%{public}@)
[%{public}@] Dismissing good morning (%{public}@)
[%{public}@] Good morning was dismissed %{public}@
[%{public}@] Dismissed sleep lock (%{public}@)
[%{public}@] sleep alarm did dismiss: %{public}@ (%{public}@)
[%{public}@] sleepAlarm has nil dismiss date
[%{public}@] sleepAlarm has old dismiss date: %{public}@
[%{public}@] sleep alarm dismissed at %{public}@
[%{public}@] sleep alarm did snooze: %{public}@ (%{public}@)
[%{public}@] sleep alarm snoozed until %{public}@
[%{public}@] sleep alarms modified (%{public}@)
[%{public}@] latest sleep alarm modified date: %{public}@
[%{public}@] latest sleep alarm snooze date: %{public}@
[%{public}@] snooze date was reset
[%{public}@] charging: %d
[%{public}@] battery level: %f
[%{public}@] Received tracking delay event
[%{public}@] sleep tracking event due, starting tracking
[%{public}@] bedtime occurred, starting tracking
[%{public}@] user engaged sleep mode, starting tracking
[%{public}@] sending message %{public}@
[%{public}@] failed to serialize message %{public}@ with error %{public}@
[%{public}@] enqueuing message %{public}@ with options %{public}@ on service
[%{public}@] successfully enqueued message %{public}@
[%{public}@] failed to enqueue message %{public}@ with error %{public}@
[%{public}@] received incoming message %{public}@ from service
[%{public}@] failed to deserialize incoming message with error %{public}@
[%{public}@] successfully sent message %{public}@
[%{public}@] failed to send message %{public}@ with error %{public}@
[%{public}@] failed to load model: %{public}@
[%{public}@] loading model...
[%{public}@] failed to load schedule: %{public}@
[%{public}@] failed to load settings: %{public}@
[%{public}@] failed to load record: %{public}@
[%{public}@] sleepScheduleModel: %{public}@ - %{public}@
[%{public}@] removeSleepScheduleModel %{public}@
[%{public}@] notifying observers for sleepScheduleModel changes from %{public}@
[%{public}@] loading schedule...
[%{public}@] persisted schedule invalid: %{public}@
[%{public}@] persisting valid schedule: %{public}@
[%{public}@] no valid schedule could be made
[%{public}@] failed to load schedule with error %{public}@
[%{public}@] loaded %{public}@
[%{public}@] saveSleepSchedule: %{public}@ - %{public}@
[%{public}@] no changes to save
[%{public}@] sleep schedule was created
[%{public}@] sleep schedule was updated
[%{public}@] applying changes: %{public}@
[%{public}@] resetting snooze fire date
[%{public}@] override that happened today (%{public}@) moving to the future (%{public}@)
[%{public}@] override that happened today (%{public}@) deleted
[%{public}@] set wakeUpOverriddenDate to %{public}@
[%{public}@] set wakeUpConfirmedUntilDate to %{public}@
[%{public}@] sleep schedule validation failed due to invalid occurrence
[%{public}@] sleep schedule validation failed: %{public}@
[%{public}@] sleep schedule was deleted
[%{public}@] notifying observers for sleepSchedule change from %{public}@
[%{public}@] loading settings...
[%{public}@] failed to load settings with error %{public}@
[%{public}@] saveSleepSettings: %{public}@ - %{public}@
[%{public}@] sleep settings were created
[%{public}@] sleep settings were updated
[%{public}@] sleep settings were reset
[%{public}@] notifying observers for sleepSettings change from %{public}@
[%{public}@] loading event record...
[%{public}@] failed to load event record with error %{public}@
[%{public}@] saveSleepEventRecord: %{public}@ - %{public}@
[%{public}@] sleep event record was updated
[%{public}@] sleep tracking completed, enabling watch screen
[%{public}@] sleep event record was created
[%{public}@] sleep event record was reset
[%{public}@] save failed with error: %{public}@
[%{public}@] notifying observers for sleepEventRecord change from %{public}@
[%{public}@] setting lastModifiedDate on schedule to current date because it's in the future
[%{public}@] setting lastModifiedDate on settings to current date because it's in the future
[%{public}@] resetting wakeUpEarlyNotificationConfirmedDate because it's in the future
[%{public}@] resetting wakeUpOverriddenDate because it's in the future
[%{public}@] setting lastModifiedDate on event record to current date because it's in the future
[%{public}@] setting wakeUpAlarmDismissedDate on event record to current date because it's in the future
[%{public}@] setting wakeUpWithNoAlarmDate on event record to current date because it's in the future
[%{public}@] setting goodMorningDismissedDate on event record to current date because it's in the future
[%{public}@] observedApplicationDidUninstall
[%{public}@] turning off watch sleep features since sleep app was removed
[%{public}@] failed to turn off watch sleep features with error %{public}@
[%{public}@] sleepStorageDidChangeExternally
[%{public}@] failed to load sleep schedule after sync with error %{public}@
[%{public}@] %{public}@ started = %d
[%{public}@] Start monitoring %{public}@ start
[%{public}@] Alreay monitoring %{public}@
[%{public}@] Stop monitoring %{public}@ start
[%{public}@] Sending notification
[%{public}@] Received posting notification completion event
[%{public}@] bedtime mode turned off by user (%{public}@)
[%{public}@] bedtime mode turned off by automation (%{public}@)
[%{public}@] sleep mode exited outside of bedtime (%{public}@), ending tracking.
[%{public}@] unable to create notification identifier for event %{public}@
[%{public}@] unable to create notification content for event %{public}@
[%{public}@] failed to publish %{public}@ with error %{public}@
[%{public}@] published %{public}@
[%{public}@] tearDownNotificationForEventIdentifier %{public}@
[%{public}@] Tearing down %{public}@
[%{public}@] Tearing down all notifications
[%{public}@] Unable to find next event with identifier %{public}@ for message %{public}@
[%{public}@] Cannot create content for wake up results without valid data: %@
[%{public}@] Creating content for %{public}@
[%{public}@] sleep features disabled for this watch
[%{public}@] sleep schedule is nil
[%{public}@] sleep schedule is disabled
[%{public}@] currently in a wind down session
[%{public}@] currently in a bedtime session
[%{public}@] not in a session, must be awake
[%{public}@] significant time change occurred
[%{public}@] timezone change occurred
[%{public}@] treating significant record update as confirmed
[%{public}@] significant schedule change occurred (reason: %{public}@)
[%{public}@] schedule change not significant
[%{public}@] notifying for external change
[%{public}@] failed to create NPSDomainAccessor
[%{public}@] re-creating NPSDomainAccessor
[%{public}@] _handleActivePairedDeviceDidChange: %{public}@
[%{public}@] performing full sync
[%{public}@] synchronize failed with error %{public}@
[%{public}@] npsManager is nil when syncing
[%{public}@] syncing user defaults: %{public}@
[%{public}@] syncing per-gizmo defaults: %{public}@
[%{public}@] going to regular off state
[%{public}@] ignoring remote sleep mode exit
[%{public}@] sleep mode manually exited, treating as wake up event
[%{public}@] Transitioning to querying state
[%{public}@] in monitoring window
[%{public}@] wind down time is greater than monitor window
[%{public}@] currently charging
[%{public}@] received notification %{public}@, taking assertion
[%{public}@] batteryLevelChanged: %f
[%{public}@] we should charge
[%{public}@] we don't need to charge yet
[%{public}@] lazily checking alarm server
[%{public}@] alarm server not ready yet
[%{public}@] alarm server is ready
[%{public}@] received notification that alarm server is ready
[%{public}@] sleep alarms: %{public}@
[%{public}@] failed to update sleep alarms with error %{public}@
[%{public}@] failed to reset snooze state with error %{public}@
[%{public}@] Posting HKSPNotificationPresentGoodMorningAlert
[%{public}@] not posting %{public}@ because sensitive UI is disabled
[%{public}@] Posting HKSPNotificationDismissGoodMorningAlert
[%{public}@] it's wind down, but staying in manual bedtime mode
[%{public}@] it's bedtime, but staying in manual bedtime mode
[%{public}@] staying in manual bedtime mode
[%{public}@] sleep schedule changed to disabled from %{public}@
[%{public}@] sleep schedule state is disabled but staying in manual bedtime mode
[%{public}@] manual bedtime mode turned off by automation (%{public}@)
[%{public}@] no sleep focus mode exists while in manual bedtime mode
[%{public}@] watch is charging
[%{public}@] in wake detection window
[%{public}@] in sleep tracking window
[%{public}@] in user requested sleep mode
[%{public}@] watch sleep features disabled
[%{public}@] sleep tracking disabled
[%{public}@] sleep schedule disabled, only manual tracking supported
[%{public}@] received biome event: %{public}@
[%{public}@] setSleepMode: %{public}@ (%{public}@)
[%{public}@] ignoring cloud synced user requested event because sleep features are disabled for this watch
[%{public}@] handling biome event
[%{public}@] ignoring biome event
[%{public}@] sleep mode engaged from Hunter watch, making sure focus mode is created
[%{public}@] failed to create focus mode: %{public}@
[%{public}@] sleepScheduleStateChanged: %{public}@ reason: %{public}@
[%{public}@] sleepModeDidChange: %{public}@ previousMode: %{public}@ reason: %{public}@, notifying observers
[%{public}@] failed to fetch sleep focus mode: %{public}@)
[%{public}@] wake up alarm was snoozed
[%{public}@] wake up alarm already dismissed
[%{public}@] wake up alarm is firing
[%{public}@] next wake up date is beyond maximum interval (%{public}@)
[%{public}@] user visible end date is %{public}@
[%{public}@] sleepFocusModeDidChange
[%{public}@] sleep mode during wind down not enabled
[%{public}@] scheduled sleep mode not enabled
[%{public}@] no sleep schedule
[%{public}@] sleep schedule not enabled
[%{public}@] scheduledSleepMode disabled
[%{public}@] device is in demo mode
[%{public}@] user hasn't onboarded wind down yet
[%{public}@] user just enabled scheduledSleepMode
[%{public}@] user just onboarded sleep 
[%{public}@] creating sleep focus mode
[%{public}@] failed to create sleep focus mode: %{public}@
[%{public}@] successfully created sleep focus mode
[%{public}@] deleting sleep focus mode
[%{public}@] failed to delete sleep focus mode: %{public}@
[%{public}@] successfully deleted sleep focus mode
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
HDSPWakeUpResultsNotificationQueryingState
HDSPSleepScreenUnlockDetector
HDSPSleepActionObserver
NSObject
HDSPSleepModeObserver
HDSPWakeDetector
HDSPEnvironmentAware
HDSPSleepStorage
HDSPSyncedUserDefaultsExternalChangeDelegate
HDSPSource
HDSPSleepModeStateMachineState
HDSPSleepModeStateMachineEventHandler
HKSPStateMachineEventHandler
HDSPTimeInBedTracker
HDSPSleepScheduleStateObserver
HDSPSleepTracker
HDSPAnalyticsManager
HDSPTimeChangeObserver
HDSPGoodMorningAlertDisabledState
HDSPWakeDetectionStateMachineState
HDSPWakeDetectionStateMachineEventHandler
HDSPSleepScheduleStateCoordinatorStateMachineContext
HDSPDemoModeEnvironment
HDSPNotificationObserver
HDSPSleepModeOffState
HDSPChargingReminderStateMachine
HDSPChargingReminderStateMachineDelegate
HKSPStateMachineDelegate
HDSPChargingReminderStateMachineInfoProvider
HKSPStateMachineInfoProvider
HDSPChargingReminderStateMachineEventHandler
HDSPSleep
HDSPTimeAsleepTracker
HDSPSleepEventHandler
HDSPSleepEventProvider
HDSPTimeAsleepTrackerStateMachineInfoProvider
HDSPTimeAsleepTrackerStateMachineDelegate
HDSPDiagnosticsProvider
HKSPDiagnosticsProvider
HDSPSleepScheduleModelObserver
HDSPDevicePowerObserver
HDSPWakeUpResultsNotification
HDSPWakeDetectionDisabledState
HDSPTimeAsleepTrackerStateMachine
HDSPTimeAsleepTrackerStateMachineEventHandler
HDSPWakeUpResultsNotificationLocalizer
HDSPDiagnostics
HDSPSleepLockScreenManager
HDSPSleepLockScreenStateMachineInfoProvider
HDSPSleepLockScreenStateMachineDelegate
HDSPSleepLockScreenAssertionManagerDelegate
HKSPSensitiveUIObserver
HDSPGoodMorningAlertObserver
HDSPContextStoreManager
HDSPSleepTrackingManager
HDSPSleepSessionManagerDelegate
HDSPSleepLockScreenStateMachineState
HDSPSleepLockScreenStateMachineEventHandler
HDSPWakeUpResultsNotificationWaitingForRetryState
HDSPSleepWidgetManager
HDSPSleepWidgetStateMachineInfoProvider
HDSPSleepWidgetStateMachineDelegate
HDSPTimeAsleepTrackerActivityTrackingState
HDSPGoodMorningAlertStateMachineState
HDSPGoodMorningAlertStateMachineEventHandler
HDSPNotifiedForEarlyWakeUpIDSMessage
HDSPIDSMessage
HKSPDictionarySerializable
NSCoding
NSCopying
HDSPEnvironmentDemoState
HDSPSleepSessionManager
HDSPSleepTrackerDelegate
HDSPDeviceUnlockObserver
HDSPSleepWidgetStateMachineState
HDSPSleepWidgetStateMachineEventHandler
HDSPTimeAsleepTrackerActivityAfterWakeUpTrackingState
HDSPChargingReminderManager
HDSPAnalyticsDailyReportBuilder
HDSPGoodMorningAlertWaitingState
HDSPSleepWidgetNotOnboardedState
HDSPSleepScheduleStateCoordinatorBedtimeState
HDSPWakeUpResultsNotificationWaitingForWakeUpState
HDSPSleepWidgetWaitingState
HDSPEnvironment
HDSPEnvironmentStateMachineDelegate
HDSPEnvironmentStateMachineInfoProvider
HDSPSystemReadyDelegate
HDSPSleepStoreServer
HKSPSleepServer
HKSPServer
HDSPProcessStateManagerDelegate
HKSPXPCConnectionListenerDelegate
HDSPWatchReadyProvider
HDSPSpringboardObserver
HDSPSystemReadyProvider
HDSPSleepLockScreenWindDownState
HDSPSleepModeAutomatedOffFromManualState
HDSPSleepWidgetBedtimeState
HDSPSleepLockScreenAssertionManager
HDSPChargingReminderWaitingState
HDSPDeviceUnlockMonitor
HDSPSleepWidgetGreetingState
HDSPCFUserNotificationCenter
HDSPSleepNotificationPublisher
HDSPTimeAsleepTrackerAutoTrackingState
HDSPTimeAsleepTrackerDisabledState
_HDSPQuietSource
HDSPSleepScheduleModelMigrationManager
HDSPWatchOnWristMonitor
HDSPSleepScheduleStateCoordinatorInitialState
HDSPTimeAsleepTrackerSleepTrackingState
HDSPGoodMorningAlertStateMachine
HDSPGoodMorningAlertStateMachineDelegate
HDSPGoodMorningAlertStateMachineInfoProvider
HDSPApplicationWorkspaceMonitor
LSApplicationWorkspaceObserverProtocol
HDSPWakeUpResultsNotificationDisabledState
_HDSPCFUserNotificationCenterRegistration
HDSPCFUserNotificationCenterManager
HDSPPhoneReadyProvider
HDSPSleepDaemon
HDSPEnvironmentStateMachine
HDSPEnvironmentStateMachineEventHandler
HDSPSimulatorReadyProvider
HDSPSleepScheduleStateCoordinatorDelayedWakeUpState
HDSPSleepLockScreenBedtimeState
HDSPConfirmWakeUpIDSMessage
HDSPSleepWidgetDisabledState
HDSPSleepLockScreenGreetingState
HDSPWakeDetectionNotifiedState
HDSPWakeUpResultsNotificationStateMachine
HDSPWakeUpResultsNotificationStateMachineDelegate
HDSPWakeUpResultsNotificationStateMachineEventHandler
HDSPWatchOnWristWakeDetector
HDSPWatchOnWristObserver
HDSPSyncedDefaults
HDSPSyncedUserDefaults
HKSPUserDefaults
HDSPWakeDetectionManager
HDSPWakeDetectorDelegate
HDSPWakeDetectionStateMachineDelegate
HDSPWakeDetectionStateMachineInfoProvider
HDSPGoodMorningAlertPresentingState
_HDSPSleepModeTurnedOffState
HDSPTimeAsleepTrackerInternalEndState
HDSPWakeUpResultsNotificationManager
HDSPWakeUpResultsNotificationStateMachineInfoProvider
HDSPSleepModeManualOffState
HDSPDisabledSleepFocusModeBridge
HDSPSleepFocusModeBridge
HKSPSleepFocusModeBridge
HDSPSyncedDefaultsConfiguration
HDSPSyncedDefaultsVersionInfo
HDSPSyncedDefaultsKeySet
HDSPSleepScheduleModelChangeEvaluator
HDSPIDSServiceManager
HDSPIDSServiceDelegate
HDSPWakeDetectionDetectingState
HDSPEventRecordMessage
BSDescriptionProviding
_HDSPPowerAssertion
HDSPAssertion
HDSPWidgetRelevantShortcutDonor
HDSPWidgetRelevanceDonor
HDSPSleepLockScreenBedtimeInProgressState
Daemon
HDSPSleepEventScheduler
HDSPEventScheduleDelegate
HDSPSleepEventDelegate
HDSPSleepSessionPersistence
HDSPSleepAlarmManager
HDSPSleepScheduleStateCoordinatorDisabledState
HDSPProcessStateManager
HDSPTimeChangeListener
HDSPChargingReminderNotifiedState
HDSPXPCAlarmScheduler
HDSPEventScheduler
HDSPEnvironmentReadyState
HDSPSleepEventList
HDSPSystemMonitor
HDSPAssertionManager
_HDSPOSTransaction
HDSPSleepScheduleStateCoordinator
HDSPSleepScheduleStateCoordinatorStateMachineDelegate
HDSPSleepScheduleStateCoordinatorStateMachineInfoProvider
HDSPGCDTimerScheduler
HDSPSleepWidgetBedtimeInProgressState
HDSPSetSleepModeIDSMessage
HDSPEnvironmentMigrationState
HDSPSleepLockScreenOffState
HDSPWakeUpResultsNotificationBuilder
HDSPDisabledEnvironment
HDSPBiomeManager
_HDSPBiomeBridge
HDSPBiomeInterface
HDSPGoodMorningAlertManager
HDSPWakeDetectionWaitingState
HDSPSleepScheduleStateCoordinatorWindDownState
HDSPSleepNotificationManager
HDSPSleepModeWindDownState
Editing
HDSPWakeUpResultsNotificationStateMachineState
HDSPSleepActionManager
HDSPCFUserNotification
HDSPWakeDetectionStateMachine
HDSPSleepWidgetUpcomingState
HDSPEnvironmentState
HDSPSleepScheduleModelChangeEvaluation
HDSPSleepWidgetWindDownState
HDSPDevicePowerMonitor
HDSPSleepLockScreenStateMachine
HDSPXPCActivityScheduler
HDSPActivityScheduler
HDSPSleepScheduleModelSaveResult
HDSPWakeUpResultsNotificationDelayingForTrackingState
HDSPDismissGoodMorningIDSMessage
HDSPSleepScheduleStateCoordinatorWakeUpState
HDSPSleepScheduleStateCoordinatorStateMachine
HDSPSleepScheduleStateCoordinatorStateMachineEventHandler
HDSPTimeAsleepTrackerWaitingState
HDSPIDSService
_HDSPIDSService
IDSServiceDelegate
HDSPEnvironmentContext
HDSPSleepSession
NSSecureCoding
HDSPSleepSessionInterval
HDSPSleepScheduleModelManager
HDSPSleepStorageObserver
HDSPApplicationWorkspaceObserver
HDSPSpringboardMonitor
HDSPWakeUpResultsNotificationNotifiedState
HDSPSleepModeBedtimeState
HDSPTimeAsleepTrackerManualTrackingState
HDSPUserNotificationCenter
HDSPSleepModeStateMachine
HDSPSleepModeStateMachineDelegate
HDSPSleepModeStateMachineInfoProvider
HDSPSleepScheduleStateCoordinatorStateMachineState
HDSPSleepWidgetStateMachine
HDSPNanoDefaults
HDSPSleepScheduleModelValidationResult
HDSPSleepModeAutomatedOffState
HDSPEnvironmentNotReadyState
HDSPChargingReminderDisabledState
HDSPSleepModeExitDetector
HDSPWakeUpResultsNotificationNeedsProtectedDataState
HDSPChargingReminderStateMachineState
HDSPNotificationListener
HDSPChargingReminderMonitoringState
HDSPMobileTimerBridge
HDSPSleepAlarmProvider
HDSPDarwinNotificationCenter
HDSPSleepModeManualBedtimeState
HDSPTimeAsleepTrackerStateMachineState
HDSPSleepModeManager
HKSPSleepFocusModeBridgeDelegate
initWithCoder:
isMemberOfClass:
infoProvider
currentDate
notificationAttemptWindowForWakeUpBeforeDate:
endDate
setExpirationDate:
isStateExpired
stateMachine
needsProtectedDataState
delegate
startObservingProtectedHealthDataAvailability
_executeQuery
stopObservingProtectedHealthDataAvailability
hksp_isHealthDatabaseInaccessibleError
_retryQueryIfNeededOrTransitionToNeedsProtectedDataState
hdsp_isInsufficientAsleepDataError
_transitionToRetryState
_transitionToWaitingForWakeUpState
_transitionToNotifiedState
executeQuery
enterState:
waitingForWakeUpState
notifiedState
waitingForRetryState
stateName
willEnterWithPreviousState:context:
didEnterWithPreviousState:context:
didExitWithNextState:context:
queryDidFailWithError:
queryDidComplete
protectedHealthDataDidBecomeAvailable
_shouldRetryImmediatelyOnFailure
init
environment
performBlock:withLock:
sleepModeManager
addObserver:
actionManager
_resetCounter
removeObserver:
setNumberOfTimesDismissed:
_withLock:
userDefaults
hksp_setInteger:forKey:
hksp_integerForKey:
isDetecting
numberOfTimesDismissed
wakeDetectorDelegate
currentDateProvider
wakeDetector:didDetectWakeUpEventOnDate:
isEqual:
class
self
performSelector:
performSelector:withObject:
performSelector:withObject:withObject:
isProxy
isKindOfClass:
conformsToProtocol:
respondsToSelector:
retain
release
autorelease
retainCount
zone
hash
superclass
description
debugDescription
TQ,R
T#,R
T@"NSString",R,C
wakeUpAlarmWasDismissed
wakeUpAlarmWasSnoozed
goodMorningWasDismissed
wakeNotificationWasConfirmed
sleepLockWasDismissed
sleepModeDidChange:previousMode:reason:
startDetecting
stopDetecting
detectionWindowMinutes
setWakeDetectorDelegate:
TB,R,N
TQ,R,N
T@"<HDSPWakeDetectorDelegate>",W,N
initWithEnvironment:
environmentWillBecomeReady:
environmentDidBecomeReady:
environmentWillInvalidate:
T@"HDSPEnvironment",R,W,N
dismissCounterLock
.cxx_destruct
_isDetecting
_dismissCounterLock
_wakeDetectorDelegate
_environment
TQ,N
T{os_unfair_lock_s=I},R,N,V_dismissCounterLock
TB,R,N,V_isDetecting
T@"<HDSPWakeDetectorDelegate>",W,N,V_wakeDetectorDelegate
T@"HDSPEnvironment",R,W,N,V_environment
initWithDataVersionKey:currentDataVersion:
initWithIdentifier:modficationDateKey:keysToPersist:keysToSync:
initWithIdentifier:modficationDateKey:keysToPersist:keysToSync:perGizmoKeys:perGizmoDefaultValues:
arrayWithObjects:count:
initWithVersionInfo:keySets:
standardConfiguration
initWithEnvironment:configuration:
initWithEnvironment:configuration:syncedDefaults:
defaultCallbackScheduler
initWithCallbackScheduler:
syncedDefaults
dataVersion
saveCurrentDataVersion
setWithObject:
innerClasses
setByAddingObjectsFromSet:
_loadObjectOfClass:allowedClasses:propertiesToLoad:error:
_saveObject:error:
_saveObjectChanges:versionKey:currentVersion:error:
_removeObjectProperties:error:
loadSleepSchedule:
loadSleepSettings:
loadSleepEventRecord:
sleepScheduleModelWithSleepSchedule:sleepSettings:sleepEventRecord:
sleepSchedule
saveSleepSchedule:error:
sleepSettings
saveSleepSettings:error:
sleepEventRecord
saveSleepEventRecord:error:
hksp_dictionaryRepresentationForKeys:
count
dictionaryWithObjects:forKeys:count:
initWithAllowedClasses:serializedDictionary:
deserializeObjectOfClass:error:
serialize:error:
serializedDictionary
hksp_serializedProperties
mutableCopy
hksp_saveDictionary:
hksp_serializedClassName
keySetForIdentifier:
keysToPersist
allKeys
setWithArray:
hk_minus:
hksp_removeObjectsForKeys:
hksp_synchronize
changes
changedValue
isAdd
isUpdate
copyWithZone:
property
identifier
setObject:forKeyedSubscript:
na_each:
numberWithUnsignedInteger:
hksp_setObject:forKey:
hdsp_setExternalChangeDelegate:
sleepStorageDidChangeExternally:
enumerateObserversWithBlock:
syncedUserDefaultsDidChangeExternally:
syncedUserDefaults:didChangeExternallyForKeys:
sourceIdentifier
dontNotify
dontSync
targetSource
T@"NSString",R,N
T@"<HDSPSource>",R,N
needsMigration
saveSleepScheduleChanges:error:
removeSleepScheduleWithError:
saveSleepSettingsChanges:error:
removeSleepSettingsWithError:
saveSleepEventRecordChanges:error:
removeSleepEventRecordWithError:
loadSleepScheduleModel:
saveSleepScheduleModel:error:
configuration
observers
_syncedDefaults
_configuration
_observers
T@"HDSPSyncedDefaults",R,N,V_syncedDefaults
T@"HDSPSyncedDefaultsConfiguration",R,N,V_configuration
T@"HKSPObserverSet",R,N,V_observers
objectForKeyedSubscript:
integerValue
defaultChangeReason
unsignedIntegerValue
sleepMode
determineNextState
sleepScheduleState
shouldGoIntoSleepModeDuringState:
bedtimeState
windDownState
offState
enterState:context:
updateState
manualBedtimeState
hasSleepFocusMode
sleepScheduleStateChangedToWindDown:fromState:
sleepScheduleStateChangedToBedtime:fromState:
sleepScheduleStateChangedToWakeUp:
sleepScheduleStateChangedToDisabledFromState:
userTurnedOnSleepModeWithReason:
userTurnedOffSleepModeWithReason:
automationTurnedOnSleepModeWithReason:
automationTurnedOffSleepModeWithReason:
sleepFocusModeDidChange
T@"HDSPSleepModeStateMachine",R,W,D,N
Tq,R,N
sleepCoordinator
sleepScheduleModel
isEnabledAndHasOccurrences
timeInBedTracking
sleepScheduleModelManager
isTimeInBedTrackingEnabled
_endSleepSessionWithReason:
_createSleepSessionWithEndDate:endReason:
sleepTracker:didEndSession:reason:
_computeSleepSessionStartBeforeDate:
initWithStartDate:endDate:
_computeSessionMetadataForInterval:
sleepSessionWithDateInterval:sleepIntervals:endReason:metadata:requiresFirstUnlock:
previousEventWithIdentifier:dueBeforeDate:
sleepTracking
dateByAddingTimeInterval:
futureWithResult:
previousOccurrenceBeforeDate:
isSingleDayOverride
hk_gregorianCalendar
wakeUpComponents
dateFromComponents:
bedtimeComponents
hksp_dateNearestMatchingComponents:
startDate
systemTimeZone
name
requiresFirstUnlock
interval
computeSleepIntervalsForInterval:
endReason
metadata
sleepIntervals
flatMap:
sleepScheduleStateDidChange:previousState:reason:
setDelegate:
processedSessionForSession:
previousSessionFinished
T@"<HDSPSleepTrackerDelegate>",W,N
sleepIntervalScheduler
_delegate
_sleepIntervalScheduler
T@"<HKSPQueueBackedScheduler>",R,N,V_sleepIntervalScheduler
T@"HKSPSleepScheduleModel",R,N
T@"<HDSPSleepTrackerDelegate>",W,N,V_delegate
hksp_analyticsUserDefaults
initWithUserDefaults:
initWithEventName:callbackScheduler:
initWithEnvironment:analyticsManager:dataCollectionScheduler:
timeChangeListener
updateScheduledActivity
isDataCollectionEnabled
scheduleDailyCollectionActivity
cancelDailyCollectionActivity
dataCollectionScheduler
dailyCollectionActivity
_lock_executeQuery
scheduleActivity:options:activityHandler:
unschedule
isDiagnosticDataSubmissionAllowed
isDataCollectionInProgress
_queryMorningIndexRangeForDate:
_processQueryResultsWithSummaries:queryRange:error:
_makeReportQueryWithMorningIndexRange:resultsHandler:
healthStoreProvider
healthStore
executeQuery:
initWithEnvironment:daySummaries:morningIndexRange:
_submitAnalyticsReportsUsingBuilder:
_pruneExpiredWindDownActionDataBeforeQueryRange:
hk_dayIndexWithCalendar:
initWithMorningIndexRange:ascending:limit:requireSleepAnalysis:resultsHandler:
setDebugIdentifier:
buildReports
analyticsManager
trackEvents:
numberWithInteger:
analyticsStore
removeAllWindDownActionsBeforeMorningIndex:
significantTimeChangeDetected:
timeZoneChangeDetected:
_unit_testing_pruneExpiredWindDownActionData
analyticsLock
_isDataCollectionInProgress
_analyticsLock
_dataCollectionScheduler
_analyticsManager
T{os_unfair_lock_s=I},R,N,V_analyticsLock
T@"<HDSPActivityScheduler>",R,N,V_dataCollectionScheduler
TB,R,N,V_isDataCollectionInProgress
T@"HKSPAnalyticsManager",R,N,V_analyticsManager
isWakeDetectionDisabled
disabledState
inDetectionWindow
detectingState
waitingState
isWatch
watchSleepFeaturesEnabled
isAnySleepTrackingOnboardingCompleted
isAnySleepCoachingOnboardingCompleted
wakeDetectionEventDue
wakeupEventDetected:
earlyWakeUpWasNotifiedRemotely
schedulesWakeDetection
T@"HDSPWakeDetectionStateMachine",R,W,D,N
contextWithReason:
contextForWakeUpWithOutAlarm
contextForAlarmTurnedOffWhileFiring
reason
isForWakeUpWithoutAlarm
isForAlarmTurnedOffWhileFiring
_isForWakeUpWithoutAlarm
_isForAlarmTurnedOffWhileFiring
_reason
TQ,R,N,V_reason
TB,R,N,V_isForWakeUpWithoutAlarm
TB,R,N,V_isForAlarmTurnedOffWhileFiring
sharedBehavior
isAppleWatch
hksp_isRunningUnitTests
initWithEnvironment:sleepFocusModeBridge:
initWithLocalDeviceHealthStore
standardUserDefaults
initWithBehavior:sleepStorageProvider:sleepScheduleModelManagerProvider:sleepSchedulerProvider:sleepServerProvider:sleepCoordinatorProvider:sleepModeManagerProvider:sleepTrackingManagerProvider:goodMorningAlertManagerProvider:chargingReminderManagerProvider:wakeDetectionManagerProvider:wakeUpResultsNotificationManagerProvider:actionManagerProvider:sleepAlarmManagerProvider:healthStoreProvider:contextStoreManagerProvider:biomeManagerProvider:migrationManagerProvider:notificationManagerProvider:notificationListenerProvider:sleepLockScreenManagerProvider:sleepWidgetManagerProvider:idsServiceManagerProvider:diagnosticsProvider:systemMonitorProvider:assertionManager:timeChangeListenerProvider:sensitiveUIMonitorProvider:analyticsManagerProvider:userDefaults:currentDateProvider:defaultCallbackScheduler:
environmentDidBecomeReady
setInitialSchedule
resetDemoMode
futureWithNoResult
setSleepMode:
demoScheduleModel
perform:withSource:
demoSleepSchedule
demoSleepSettings
demoEventRecord
setScheduledSleepMode:
setSleepTracking:
setTimeInBedTracking:
setBedtimeReminders:
setChargingReminders:
setWakeUpResults:
sleepModeOptions
setSleepModeOptions:
setWeekdays:
setHour:
setMinute:
setWakeUpComponents:
setBedtimeComponents:
alarmConfiguration
setEnabled:
setAlarmConfiguration:
saveOccurrence:
setSleepDurationGoal:
copy
setSleepCoachingOnboardingCompletedVersion:
setSleepTrackingOnboardingCompletedVersion:
setSleepWindDownShortcutsOnboardingCompletedVersion:
sleepCoachingOnboardingFirstCompletedDate
setSleepCoachingOnboardingFirstCompletedDate:
sleepTrackingOnboardingFirstCompletedDate
setSleepTrackingOnboardingFirstCompletedDate:
sleepWindDownShortcutsOnboardingFirstCompletedDate
setSleepWindDownShortcutsOnboardingFirstCompletedDate:
notificationListener:didReceiveNotificationWithName:
isDemoEnvironment
initWithIdentifier:allowedStates:persistence:delegate:infoProvider:currentDateProvider:
initWithStateMachine:
persistedState
setInitialState:
currentState
batteryMonitoringEventDue
batteryLevelChanged:
postChargingReminderNotification
notifyDelegateWithBlock:
scheduleBatteryMonitoring
unscheduleBatteryMonitoring
startBatteryMonitoring
stopBatteryMonitoring
sleepFeaturesEnabled
monitoringWindowAfterDate:
isCharging
callbackScheduler
T@"<NAScheduler>",R,N
T@"NSDate",R,N
initWithIdentifier:persistence:delegate:infoProvider:currentDateProvider:
loggingCategory
monitoringState
_disabledState
_waitingState
_monitoringState
_notifiedState
T@"<HDSPChargingReminderStateMachineDelegate>",R,W,D,N
T@"<HDSPChargingReminderStateMachineInfoProvider>",R,W,D,N
T@"HDSPChargingReminderDisabledState",R,N,V_disabledState
T@"HDSPChargingReminderWaitingState",R,N,V_waitingState
T@"HDSPChargingReminderMonitoringState",R,N,V_monitoringState
T@"HDSPChargingReminderNotifiedState",R,N,V_notifiedState
soundWithAlertType:
setShouldRepeat:
setAlertTopic:
hdsp_bedtimeReminderSound
hdsp_chargingReminderSound
hdsp_wakeUpResultsSound
hdsp_wakeDetectionSound
initWithEnvironment:sleepTrackerProvider:
sleepScheduler
addEventHandler:
addEventProvider:
notificationListener
diagnostics
addProvider:
systemMonitor
devicePowerMonitor
inUserRequestedSleepMode
currentSleepScheduleState
nextEventWithIdentifier:dueAfterDate:
hksp_isBeforeDate:
sleepEventDelegate
eventProviderHasUpcomingEvents:
eventProviderCancelledEvents:
hdsp_startSleepTrackingSessionWithReason:
sleepTrackerDidStartSession:
_handleSleepSessionAnalysisResults:endReason:
hdsp_endSleepTrackingSessionWithReason:resultsHandler:
_createSleepSessionWithSleepAnalysis:endReason:
hksp_isAfterDate:
asleepIntervals
sleepSessionIntervalWithInterval:type:
na_map:
startActivityUpdates
stopActivityUpdates
contextStoreManager
healthAppForegroundPredicate
_handleAppLaunched:onDate:
registerPredicate:identifier:callback:
sleepAppForegroundPredicate
appLaunchedOnDate:
unregister:
bedtimeOccurred
wakeUpOccurredWithReason:
trackingWindowAfterDate:
hksp_isAfterOrSameAsDate:
sleepEventWithIdentifier:dueDate:isUserVisible:
isEqualToString:
sleepTrackingEventDue
userEngagedSleepMode
sleepModeExitedWithReason:
_handleActivityDetectedOnDate:
_handleInternalSleepSessionEndRequest
activityDetectedOnDate:
sleepSessionEndRequestedInternally
startWakeDetectionOccurred
sleepSessionFinished
stringWithFormat:
sleepEventIsDue:
eventIdentifiers
upcomingEventsDueAfterDate:
providerIdentifier
setSleepEventDelegate:
T@"NSString",R,C,N
T@"<HDSPSleepEventDelegate>",W,N
inWakeDetectionWindow
scheduleSleepTracking
unscheduleSleepTracking
startSleepTrackingSessionWithReason:
endSleepTrackingSessionWithReason:
startActivityDetection
stopActivityDetection
startAppLaunchDetection
stopAppLaunchDetection
notifyForActivityDetectedOnDate:
diagnosticInfo
diagnosticDescription
sleepScheduleModelManager:didUpdateSleepSchedule:
sleepScheduleModelManager:didUpdateSleepSettings:
sleepScheduleModelManager:didUpdateSleepEventRecord:
sleepScheduleModelManager:didUpdateSleepScheduleModel:
deviceChangedChargingState:
sleepTrackerProvider
sleepTracker
timeAsleepTrackerLock
appLaunchRegistrations
_timeAsleepTrackerLock
_sleepEventDelegate
_sleepTrackerProvider
_sleepTracker
_stateMachine
_appLaunchRegistrations
T@?,R,C,N,V_sleepTrackerProvider
T@"<HDSPTimeAsleepTracker>",R,N,V_sleepTracker
T{os_unfair_lock_s=I},R,N,V_timeAsleepTrackerLock
T@"HDSPTimeAsleepTrackerStateMachine",R,N,V_stateMachine
T@"NSArray",R,N,V_appLaunchRegistrations
T@"<HDSPSleepEventDelegate>",W,N,V_sleepEventDelegate
errorWithDomain:code:userInfo:
domain
code
hdsp_insufficientAsleepDataError
autoTrackingState
activityTrackingState
activityAfterWakeUpTrackingState
manualTrackingState
internalEndState
_autoTrackingState
_activityTrackingState
_activityAfterWakeUpTrackingState
_manualTrackingState
_internalEndState
T@"<HDSPTimeAsleepTrackerStateMachineDelegate>",R,W,D,N
T@"<HDSPTimeAsleepTrackerStateMachineInfoProvider>",R,W,D,N
T@"HDSPTimeAsleepTrackerDisabledState",R,N,V_disabledState
T@"HDSPTimeAsleepTrackerWaitingState",R,N,V_waitingState
T@"HDSPTimeAsleepTrackerAutoTrackingState",R,N,V_autoTrackingState
T@"HDSPTimeAsleepTrackerActivityTrackingState",R,N,V_activityTrackingState
T@"HDSPTimeAsleepTrackerActivityAfterWakeUpTrackingState",R,N,V_activityAfterWakeUpTrackingState
T@"HDSPTimeAsleepTrackerManualTrackingState",R,N,V_manualTrackingState
T@"HDSPTimeAsleepTrackerInternalEndState",R,N,V_internalEndState
notification
category
_localizedBodyForOneDayNotification
_localizedBodyForOneWeekDayNotification
_localizedBodyForTwoWeekNotification
currentHandler
handleFailureInMethod:object:file:lineNumber:description:
dailySleepDurationGoal
numberWithDouble:
localizedStringFromNumber:numberStyle:
userFirstName
_embeddedNameLocalizedStringKey
length
_embeddedNameSubstitutionStringKey
localizedStringWithFormat:
_regularLocalizedStringKey
_regularSubstitutionStringKey
weeklyGoalAchieved
notificationVariant
goalAchieved
secondUnit
doubleValueForUnit:
dayUnit
_localizedStringKeyBase
initWithNotification:healthStore:
localizedTitle
localizedBody
_notification
_healthStore
T@"HDSPWakeUpResultsNotification",R,N,V_notification
T@"HKHealthStore",R,N,V_healthStore
immediateScheduler
initWithLabel:
removeProvider:
_logDiagnostics:
countByEnumeratingWithState:objects:count:
providers
_providers
_diagnostics
T@"HKSPObserverSet",R,N,V_providers
T@"HKSPDiagnostics",R,N,V_diagnostics
initWithEnvironment:assertionManager:
goodMorningAlertManager
sensitiveUIMonitor
sleepModeDidChange:reason:
presentAlertForGoodMorning
dismissAlertForGoodMorning
_lock_updateLockScreenAssertion
shouldHideForSensitivity:
numberWithBool:
_lock_resolvedLockScreenState
_lock_overridingLockScreenState
_lock_shouldShowLockScreenForState:
takeAssertionIfNeeded
sendLockScreenState:userInfo:
invalidateAssertion
hasLockScreenConnection
bedtimeExpiredEventDue
_bedtimeExpiredEventAfterDate:
laterDate:
sleepEventWithIdentifier:dueDate:
dueDate
_currentState
isLockScreenActive
sleepLockScreenStateDidChange:previousState:
scheduleLockScreenStateChange
unscheduleLockScreenStateChange
lockScreenDidConnect
sensitiveUIStateChanged
currentLockScreenState
overrideLockScreenState:userInfo:
sleepLockScreenLock
assertionManager
setCurrentLockScreenState:
didUpdateAlertAssertion
setDidUpdateAlertAssertion:
_state
_overrideState
_overrideUserInfo
_sleepLockScreenLock
_assertionManager
_currentLockScreenState
_didUpdateAlertAssertion
T{os_unfair_lock_s=I},R,N,V_sleepLockScreenLock
T@"HDSPSleepLockScreenStateMachine",R,N,V_stateMachine
T@"<HDSPSleepLockScreenAssertionManager>",R,N,V_assertionManager
Tq,N,V_currentLockScreenState
T@?,C,N,V_didUpdateAlertAssertion
userContext
initWithEnvironment:context:
value
localWakingRegistrationWithIdentifier:contextualPredicate:clientIdentifier:callback:
registerCallback:
deregisterCallback:
keyPathForDefaultPairedDeviceForegroundApp
predicateForKeyPath:equalToValue:
keyPathForForegroundApp
_writeSleepInfoToContextStore:
lastModifiedDate
updateForScheduleModelModifiedOnDate:
sleepScheduleModelDateModified
sleepEvent
sleepModeState
sleepModeOn
contextualKeyPath
addEntriesFromDictionary:
keyPathForSleepStateDictionary
context
contextLock
_contextLock
_context
T{os_unfair_lock_s=I},R,N,V_contextLock
T@"<_CDLocalContext>",R,N,V_context
platformSpecificTrackerWithEnvironment:
initWithEnvironment:sleepSessionManager:sleepTracker:
behavior
savePendingSessions
sleepSessionSaved:
archivedSleepSessionsSaved:
sleepSessionManager:didSaveSession:
sleepSessionManager:didSaveArchivedSessions:
sleepSessionManager:requestsProcessedSessionForSession:
sleepSessionManagerDidFinishSession:
sleepSessionObservers
sleepSessionManager
_sleepSessionObservers
_sleepSessionManager
T@"HKSPObserverSet",R,N,V_sleepSessionObservers
T@"HDSPSleepSessionManager",R,N,V_sleepSessionManager
T@"<HDSPSleepTracker>",R,N,V_sleepTracker
sleepLockScreenState
schedulesLockScreenStateChange
greetingState
_updateStateForSleepMode:reason:context:
_isSleepLockScreenDisabled
bedtimeInProgressState
timeIntervalSinceDate:
goodMorningScreenEnabledWithLogObject:
T@"HDSPSleepLockScreenStateMachine",R,W,D,N
scheduleRetryAttempt
unscheduleRetryAttempt
queryingState
retryAttemptEventDue
initWithEnvironment:widgetReloader:reloadThrottler:relevanceDonor:
_lock_currentSleepWidgetState
widgetState
sleepScheduleModelDidChange:
sleepScheduleStateDidChange:
sleepModeDidChange:isUserRequested:
significantTimeChangeOccurred
currentContext
source
execute
donateRelevanceForWidgetState:
greetingExpiredEventDue
upcomingChangeEventDue
_upcomingChangeEventAfterDate:
_greetingExpiredEventAfterDate:
nextEventDueAfterDate:
currentSleepWidgetState
isOnboarded
sleepWidgetStateDidChange:previousState:
sleepWidgetShouldReload
scheduleWidgetStateChange
unscheduleWidgetStateChange
overrideWidgetState:
clearWidgetOverrideState
_sleepWidgetLock
_widgetReloader
_reloadThrottler
_relevanceDonor
_isOverridingWidgetState
isActivityTrackingState
goodMorningAlertEnabled
sleepScheduleStateChangedToBedtime
sleepScheduleStateChangedToWakeUp
goodMorningAlertTimedOut
T@"HDSPGoodMorningAlertStateMachine",R,W,D,N
encodeWithCoder:
sleepHealthStore
initWithEnvironment:persistence:
deviceUnlockMonitor
firstObject
mainBundle
bundleIdentifier
stringByAppendingPathComponent:
_archivedSessionDirectory
hdsp_startSession
hdsp_stopSession
_hasUnprocessedSessions
hasBeenUnlockedSinceBoot
_locked_savePendingSessions
_waitForFirstUnlock
defaultManager
_archivedSessionFile
fileExistsAtPath:isDirectory:
_unprocessedSessions
combineAllFutures:
hdsp_persistSessions:
removeSessionDataFile
addCompletionBlock:
addSuccessBlock:
initWithContentsOfFile:
initForReadingFromData:error:
decodeObjectOfClasses:forKey:
finishDecoding
addObject:
fileExistsAtPath:
createDirectoryAtPath:withIntermediateDirectories:attributes:error:
initRequiringSecureCoding:
encodeObject:forKey:
finishEncoding
encodedData
writeToFile:options:error:
archiveSession:
removeItemAtPath:error:
startSession
saveSession:
stopSession
deviceHasBeenUnlocked
persistence
deviceUnlockManager
sessionLock
_sessionLock
_persistence
_deviceUnlockManager
T@"<HDSPSleepSessionPersistence>",R,N,V_persistence
T@"HDSPDeviceUnlockMonitor",R,N,V_deviceUnlockManager
T{os_unfair_lock_s=I},R,N,V_sessionLock
T@"<HDSPSleepSessionManagerDelegate>",W,N,V_delegate
schedulesWidgetStateChange
_determineNextState
notOnboardedState
hksp_isBeforeOrSameAsDate:
upcomingState
widgetStateHasTimeComponent
reloadsWidgetOnModelChange
reloadsWidgetOnTimeChange
updateLifetimeIntervalForCurrentDate:expirationBlock:
determineExpirationDateForCurrentDate:
_updateStateSpecific
initWithEnvironment:monitoringScheduler:
bedtimeReminders
windDownTime
earlierDate:
hkspDescription
monitorCriteria
checkBatteryLevel
batteryLevel
isWaitingOrMonitoring
array
nextOccurrenceAfterDate:
isEnabled
notificationManager
publishNotificationForEvent:userInfo:
chargingReminderLock
monitoringScheduler
_chargingReminderLock
_monitoringScheduler
T{os_unfair_lock_s=I},R,N,V_chargingReminderLock
T@"HDSPChargingReminderStateMachine",R,N,V_stateMachine
T@"<HDSPActivityScheduler>",R,N,V_monitoringScheduler
daySummaries
morningIndexRange
showSensitiveLogItems
_dailyReportEvent
_windDownEvents
addObjectsFromArray:
markAllActionsAsCollected
goalProgressForDaySummaries:inMorningIndexRange:
isImproveHealthAndActivitySubmissionAllowed
setIsImproveHealthAndActivitySubmissionAllowed:
_userAgeForCurrentDate:
setUserAge:
_biologicalSex
setBiologicalSex:
activePairedWatchProductType
setActiveWatchProductType:
_weeksSinceOnboardDate:currentDate:calendar:
setWeeksSinceOnboardedSleepSchedule:
setWeeksSinceOnboardedSleepTracking:
setWeeksSinceOnboardedWindDownActions:
occurrences
setScheduleMigration:
sleepDurationGoal
setSleepGoal:
setWatchSleepTrackingEnabled:
setTimeInBedTrackingEnabled:
setBedTimeWindDownRemindersEnabled:
wakeUpResults
setWakeUpResultsEnabled:
scheduledSleepMode
setScheduledSleepModeEnabled:
chargingReminders
setChargeRemindersEnabled:
_didInteractWithWindDownActionsWithinLastTwoDays
setInteractedWithWindDownLast24Hrs:
setUseSleepScreen:
occurrenceOnDay:
setScheduleMonday:
setAlarmMonday:
toneIdentifier
setHapticToneIdentifierMonday:
usesDefaultBedtimeAndWakeUpComponents
setIsDefaultScheduleMonday:
setScheduleTuesday:
setAlarmTuesday:
setHapticToneIdentifierTuesday:
setIsDefaultScheduleTuesday:
setScheduleWednesday:
setAlarmWednesday:
setHapticToneIdentifierWednesday:
setIsDefaultScheduleWednesday:
setScheduleThursday:
setAlarmThursday:
setHapticToneIdentifierThursday:
setIsDefaultScheduleThursday:
setScheduleFriday:
setAlarmFriday:
setHapticToneIdentifierFriday:
setIsDefaultScheduleFriday:
setScheduleSaturday:
setAlarmSaturday:
setHapticToneIdentifierSaturday:
setIsDefaultScheduleSaturday:
setScheduleSunday:
setAlarmSunday:
setHapticToneIdentifierSunday:
setIsDefaultScheduleSunday:
setScheduleDisabled:
_changedSchedule:withinNumberOfDays:currentDate:calendar:
setScheduleChangePast24Hours:
setScheduleChangePast7days:
standardDeviationActualTimeAsleep
setStddevActualTimeAsleep:
standardDeviationScheduledTimeAsleep
setStddevScheduledTimeAsleep:
standardDeviationActualVsScheduledTimeAsleep
setStddevActualVsScheduledTimeAsleep:
_daysWhereUserWoreWatchToSleepOverLastSevenDaysWithCalendar:
currentCalendar
hk_weekendDays
intersectSet:
setDaysWornWatchToSleepInLast7Days:
setWeekendDaysWornWatchToSleepInLast7Days:
_woreWatchToSleepLastNight
setDidWearWatchToSleepLastNight:
morningIndex
containsPeriodsWithAppleSleepTrackingData
dateInterval
component:fromDate:
hk_mapToSet:
hk_firstObjectPassingTest:
uncollectedWindDownActions
initWithWindDownEventData:watchProductType:weeksSinceOnboarded:
hk_map:
hk_morningIndexWithCalendar:
windDownActionsAfterMorningIndex:
allValues
wasUsed
components:fromDate:toDate:options:
startOfDayForDate:
weekOfYear
biologicalSexWithError:
biologicalSex
dateOfBirthComponentsWithError:
hk_ageWithCurrentDate:
_daySummaries
_morningIndexRange
T@"NSArray",R,N,V_daySummaries
T{?=qq},R,N,V_morningIndexRange
isOnCharger
presentingState
isAlarmEnabled
delayedWakeUpState
wakeUpState
scheduleState
wakeTimeReached
wakeUpConfirmed
_transitionToDelayingForTrackingState
delayingForTrackingState
wakeUpDidOccur
setHeader:
setThreadIdentifier:
hdsp_notificationContentWithEnvironment:
localizedUppercaseString
startListening
initWithDelegate:infoProvider:
shutdown
dealloc
_environmentAwareComponents
performWhenEnvironmentIsReady:withContext:
perform:withContext:
contextWithSource:
currentThread
threadDictionary
removeLastObject
lastObject
systemDidBecomeReady
readyState
isSystemReady
needDataMigration
performDataMigration
dataMigrationDidComplete
na_safeAddObject:
finishWithNoResult
isEnvironmentReady
standardEnvironment
disabledEnvironment
demoModeEnvironment
environmentShouldMigrateData
needsDataMigration
performWhenEnvironmentIsReady:
currentSource
prepare
isDisabled
sleepStorage
sleepTrackingManager
stateMachineLock
environmentIsReady
sleepServer
chargingReminderManager
wakeDetectionManager
wakeUpResultsNotificationManager
sleepAlarmManager
sleepLockScreenManager
sleepWidgetManager
migrationManager
biomeManager
idsServiceManager
_stateMachineLock
_behavior
_sleepScheduleModelManager
_sleepStorage
_sleepScheduler
_sleepCoordinator
_sleepModeManager
_sleepTrackingManager
_actionManager
_notificationManager
_environmentIsReady
_currentDateProvider
_userDefaults
_sleepServer
_goodMorningAlertManager
_chargingReminderManager
_wakeDetectionManager
_wakeUpResultsNotificationManager
_sleepAlarmManager
_healthStoreProvider
_notificationListener
_sleepLockScreenManager
_sleepWidgetManager
_systemMonitor
_timeChangeListener
_sensitiveUIMonitor
_migrationManager
_contextStoreManager
_biomeManager
_idsServiceManager
_defaultCallbackScheduler
T@"HDSPEnvironmentStateMachine",R,N,V_stateMachine
T{os_unfair_lock_s=I},R,N,V_stateMachineLock
T@"NAFuture",R,N,V_environmentIsReady
T@?,R,C,N,V_currentDateProvider
T@"<HKSPUserDefaults>",R,N,V_userDefaults
T@"HDSPSleepStoreServer",R,N,V_sleepServer
T@"HDSPGoodMorningAlertManager",R,N,V_goodMorningAlertManager
T@"HDSPChargingReminderManager",R,N,V_chargingReminderManager
T@"HDSPWakeDetectionManager",R,N,V_wakeDetectionManager
T@"HDSPWakeUpResultsNotificationManager",R,N,V_wakeUpResultsNotificationManager
T@"HDSPSleepAlarmManager",R,N,V_sleepAlarmManager
T@"HKSPHealthStoreProvider",R,N,V_healthStoreProvider
T@"HDSPDiagnostics",R,N,V_diagnostics
T@"HDSPNotificationListener",R,N,V_notificationListener
T@"HDSPSleepLockScreenManager",R,N,V_sleepLockScreenManager
T@"HDSPSleepWidgetManager",R,N,V_sleepWidgetManager
T@"HDSPSystemMonitor",R,N,V_systemMonitor
T@"HDSPAssertionManager",R,N,V_assertionManager
T@"HDSPTimeChangeListener",R,N,V_timeChangeListener
T@"HKSPSensitiveUIMonitor",R,N,V_sensitiveUIMonitor
T@"HDSPSleepScheduleModelMigrationManager",R,N,V_migrationManager
T@"HDSPContextStoreManager",R,N,V_contextStoreManager
T@"HDSPBiomeManager",R,N,V_biomeManager
T@"HDSPIDSServiceManager",R,N,V_idsServiceManager
T@"<HKSPQueueBackedScheduler>",R,N,V_defaultCallbackScheduler
T@"HDSPAnalyticsManager",R,N,V_analyticsManager
T@"_HKBehavior",R,N,V_behavior
T@"HDSPSleepScheduleModelManager",R,N,V_sleepScheduleModelManager
T@"HDSPSleepStorage",R,N,V_sleepStorage
T@"HDSPSleepEventScheduler",R,N,V_sleepScheduler
T@"HDSPSleepScheduleStateCoordinator",R,N,V_sleepCoordinator
T@"HDSPSleepModeManager",R,N,V_sleepModeManager
T@"HDSPSleepTrackingManager",R,N,V_sleepTrackingManager
T@"HDSPSleepActionManager",R,N,V_actionManager
T@"HDSPSleepNotificationManager",R,N,V_notificationManager
infoForMachServiceName:remoteObjectInterface:exportedObject:exportedObjectInterface:lifecycleNotification:requiredEntitlement:options:
listenerWithConnectionInfo:
initWithEnvironment:connectionListenerProvider:processStateManager:
_locked_syncAnchor
hksp_objectForKey:
hksp_increment
connectionListener
currentClient
syncAnchor
_notifyClient:forMissedMessagesWithSyncAnchor:
_performWhenEnvironmentIsReady:
setSleepMode:reason:
performImmediateQueryForNotification
buildNotification
userInfo
createFocusModeWithError:
deleteFocusModeWithError:
confirmAwakeNotification
dismissGoodMorning
dismissSleepLock
sleepAlarmDismissedOnDate:
sleepAlarmSnoozedUntilDate:
sleepAlarmWasModified
incrementSyncAnchor
sleepScheduleChanged:
_checkForSuspendedBlock
performRemoteBlockOnClients:passingTest:
objectWithSyncAnchor:
sleepSettingsChanged:
sleepEventRecordChanged:
sleepEventOccurred:
standardEventIdentifiers
initWithScheduleState:syncAnchor:
sleepScheduleStateChanged:
initWithSleepMode:syncAnchor:
sleepModeChanged:
processID
isProcessSuspended:
compare:
lastStandardSleepEvent
performRemoteBlock:onClient:
connectedClientsWithPID:
clientShouldCheckInWithCompletion:
startMonitoringProcessState:
stopMonitoringProcessState:
connectedClients
connectWithCompletion:
checkInWithSyncAnchor:completion:
getSleepScheduleWithCompletion:
saveSleepSchedule:completion:
getSleepSettingsWithCompletion:
saveSleepSettings:completion:
getSleepEventRecordWithCompletion:
saveSleepEventRecord:completion:
getSleepModeWithCompletion:
setSleepMode:reason:completion:
getSleepScheduleStateWithCompletion:
getSleepWidgetStateWithCompletion:
confirmAwakeWithCompletion:
dismissGoodMorningWithCompletion:
dismissSleepLockWithCompletion:
sleepAlarmWasDismissedOnDate:completion:
sleepAlarmWasSnoozedUntilDate:completion:
sleepAlarmWasModifiedWithCompletion:
publishNotificationWithIdentifier:userInfo:completion:
publishWakeUpResultsNotificationWithCompletion:
setLockScreenOverrideState:userInfo:completion:
setWidgetOverrideState:completion:
clearWidgetOverrideWithCompletion:
createSleepFocusModeWithCompletion:
deleteSleepFocusModeWithCompletion:
processNoLongerSuspended:
processDidBecomeSuspended:
connectionListenerDidAddClient:
connectionListenerDidRemoveClient:
processStateManager
syncLock
_syncLock
_connectionListener
_processStateManager
T@"HKSPXPCConnectionListener",R,N,V_connectionListener
T@"HDSPProcessStateManager",R,N,V_processStateManager
T@"<HKSPSyncAnchor>",R,N
T{os_unfair_lock_s=I},R,N,V_syncLock
initWithCallbackScheduler:isAppleWatch:
isSpringboardStarted
_waitForInitialSync
isInRootRobotOrDemoMode
_isInRootRobot
initWithSuiteName:
stringForKey:
_finishWaitingForInitialSync
springboardDidStart
T@"<HDSPSystemReadyDelegate>",W,N
restoreDidFinish
springboardMonitor
observingRestore
lock
_observingRestore
_lock
_springboardMonitor
T@"HDSPSpringboardMonitor",R,N,V_springboardMonitor
TB,R,N,V_observingRestore
T{os_unfair_lock_s=I},R,N,V_lock
T@"<HDSPSystemReadyDelegate>",W,N,V_delegate
connection
T@"<HDSPSleepLockScreenAssertionManagerDelegate>",W,N
setConnection:
_listener
_connection
_connectionLock
T@"<HDSPSleepLockScreenAssertionManagerDelegate>",W,N,V_delegate
hkspMainThreadScheduler
overrideDeviceHasBeenUnlockedSinceBoot
boolValue
_latestKeyBagValueForHasBeenUnlockedSinceBoot
handleFirstUnlock
setOverrideDeviceHasBeenUnlockedSinceBoot:
monitorLock
_hasBeenUnlockedSinceBoot
_monitorLock
_overrideDeviceHasBeenUnlockedSinceBoot
T{os_unfair_lock_s=I},R,N,V_monitorLock
T@"NSNumber",&,N,V_overrideDeviceHasBeenUnlockedSinceBoot
TB,R,N,V_hasBeenUnlockedSinceBoot
_publishWakeDetectionNotificationForUserInfo:
_wakeDetectionAlertTitleForAlarmEnabled:sleepModeOn:
_wakeDetectionAlertBodyForAlarmEnabled:sleepModeOn:
_publishNotificationWithIdentifier:title:message:defaultButtonTitle:otherButtonTitle:bypassDND:actionHandler:
userNotificationWithIdentifier:notification:actionHandler:
takeAssertionWithIdentifier:type:timeout:
sharedManager
postNotification:fromCenter:
removeObjectForKey:
actionHandler
releaseAssertionWithIdentifier:
cancelNotification:fromCenter:
tearDownNotificationForEventIdentifier:
tearDownNotifications
handleResponse:forUserNotification:
notificationLock
notifications
_notificationLock
_notifications
T{os_unfair_lock_s=I},R,N,V_notificationLock
T@"NSMutableDictionary",R,N,V_notifications
isSleepScheduleDisabled
setSourceIdentifier:
setTargetSource:
setDontNotify:
setDontSync:
_dontNotify
_dontSync
_sourceIdentifier
_targetSource
T@"NSString",&,N,V_sourceIdentifier
T@"<HDSPSource>",&,N,V_targetSource
TB,N,V_dontNotify
TB,N,V_dontSync
initWithEnvironment:scheduler:
_migrateSleepScheduleFromMobileTimer
_migrateSleepFocusMode
_migrateOnboardingSettings
chainFutures:
sleepAlarmProvider
sleepAlarmsFuture
finishWithError:
sleepScheduleModelFromSleepAlarm:
finishWithResult:error:
lazyFutureWithBlock:
scheduler
_scheduler
T@"<NAScheduler>",R,N,V_scheduler
initWithUserDefaults:callbackScheduler:
activate
_lock_isOnWrist
hksp_boolForKey:
hksp_setBool:forKey:
_lock_lastOnWristDate
effectiveOnWristState
isDeviceOnCharger
_lock_setIsOnWrist:
date
_lock_setLastOnWristDate:
detectedOffWristOnDate:
confidence
detectedOnWristOnDate:
isOnWrist
lastOnWristDate
onWristMonitor:didUpdateOnWristState:fromState:
onWristMonitor
_onWristMonitor
T@"CSLSOnWristMonitor",R,N,V_onWristMonitor
updateStateWithChangeReason:
isSleepTrackingState
defaultStartReason
defaultEndReason
scheduleGoodMorningTimeOut
unscheduleGoodMorningTimeOut
_presentingState
T@"<HDSPGoodMorningAlertStateMachineDelegate>",R,W,D,N
T@"<HDSPGoodMorningAlertStateMachineInfoProvider>",R,W,D,N
T@"HDSPGoodMorningAlertDisabledState",R,N,V_disabledState
T@"HDSPGoodMorningAlertWaitingState",R,N,V_waitingState
T@"HDSPGoodMorningAlertPresentingState",R,N,V_presentingState
addObserver:wasFirst:
defaultWorkspace
removeObserver:wasLast:
initWithBundleIdentifier:allowPlaceholder:error:
applicationState
isValid
isInstalled
isPlaceholder
observedApplicationDidUninstall
applicationInstallsDidStart:
applicationInstallsDidChange:
applicationInstallsDidUpdateIcon:
applicationsWillInstall:
applicationsDidInstall:
pluginsDidInstall:
applicationsDidFailToInstall:
applicationsWillUninstall:
pluginsWillUninstall:
applicationsDidUninstall:
pluginsDidUninstall:
applicationsDidFailToUninstall:
applicationInstallsArePrioritized:arePaused:
applicationInstallsDidPause:
applicationInstallsDidResume:
applicationInstallsDidCancel:
applicationInstallsDidPrioritize:
applicationStateDidChange:
applicationIconDidChange:
networkUsageChanged:
observeLaunchProhibitedApps
deviceManagementPolicyDidChange:
applicationsDidChangePersonas:
databaseWasRebuilt
isApplicationInstalled:
isNotificationEnabled
setNotification:
notificationCenter
setNotificationCenter:
_notificationCenter
T@"HDSPCFUserNotification",&,N,V_notification
T@"HDSPCFUserNotificationCenter",&,N,V_notificationCenter
na_firstObjectPassingTest:
removeObject:
registrationLock
registrations
_registrationLock
_registrations
T{os_unfair_lock_s=I},R,N,V_registrationLock
T@"NSMutableArray",R,N,V_registrations
initWithBehavior:
hksp_supportsSleep
hksp_demoMode
_setupSigtermHandler
_handleSigterm
start
launchDate
sigtermSource
_launchDate
_sigtermSource
T@"NSDate",R,N,V_launchDate
T@"NSObject<OS_dispatch_source>",R,N,V_sigtermSource
T@"HDSPEnvironment",R,N,V_environment
notReadyState
migrationState
demoState
_notReadyState
_migrationState
_readyState
_demoState
T@"<HDSPEnvironmentStateMachineDelegate>",R,W,D,N
T@"<HDSPEnvironmentStateMachineInfoProvider>",R,W,D,N
T@"HDSPEnvironmentNotReadyState",R,N,V_notReadyState
T@"HDSPEnvironmentMigrationState",R,N,V_migrationState
T@"HDSPEnvironmentReadyState",R,N,V_readyState
T@"HDSPEnvironmentDemoState",R,N,V_demoState
isInDemoMode
snoozeFireDateShouldBeReset
significantScheduleChangeOccurred:
wakeUpAlarmSnoozedUntilDate
windDownReached
bedtimeReached
initWithDate:
decodeObjectOfClass:forKey:
builderWithObject:
wakeUpConfirmedDate
appendObject:withName:
wakeUpConfirmedUntilDate
initWithWakeUpConfirmedDate:wakeUpConfirmedUntilDate:
succinctDescriptionBuilder
_wakeUpConfirmedUntilDate
T@"NSDate",R,N,V_wakeUpConfirmedUntilDate
expirationDate
postWakeDetectionNotification
trackingDelayEventDue
didPostResultsNotification
postResultsNotification
scheduleTrackingDelay
unscheduleTrackingDelay
isWaitingForWakeUp
isDelayingForTracking
_waitingForWakeUpState
_delayingForTrackingState
_waitingForRetryState
_queryingState
_needsProtectedDataState
T@"<HDSPWakeUpResultsNotificationStateMachineDelegate>",R,W,D,N
T@"<HDSPWakeUpResultsNotificationStateMachineInfoProvider>",R,W,D,N
T@"HDSPWakeUpResultsNotificationWaitingForWakeUpState",R,N,V_waitingForWakeUpState
T@"HDSPWakeUpResultsNotificationDelayingForTrackingState",R,N,V_delayingForTrackingState
T@"HDSPWakeUpResultsNotificationWaitingForRetryState",R,N,V_waitingForRetryState
T@"HDSPWakeUpResultsNotificationQueryingState",R,N,V_queryingState
T@"HDSPWakeUpResultsNotificationNeedsProtectedDataState",R,N,V_needsProtectedDataState
T@"HDSPWakeUpResultsNotificationNotifiedState",R,N,V_notifiedState
T@"HDSPWakeUpResultsNotificationDisabledState",R,N,V_disabledState
watchOnWristMonitor
_nanoDefaultsProvider
initWithEnvironment:configuration:nanoDefaultsProvider:throttleInterval:
_throttled_synchronizeKeys:
initWithInterval:updateBlock:scheduler:
allKeysToPersist
allPerGizmoKeys
allPerGizmoDefaultValues
hk_intersection:
_setDefaultForKey:setBlock:
null
shouldPersistKey:
_defaultsForKey:
shouldSyncKey:
containsObject:
hksp_removeObjectForKey:
hksp_floatForKey:
hksp_setFloat:forKey:
hksp_dataForKey:
hksp_dictionaryRepresentation
removeAllObjects
hksp_synchronizeKeys:
allObjects
accumulateValues:
_syncCurrentDataVersions
supportsNanoSync
versionInfo
currentDataVersion
dataVersionKey
_nanoDefaultsDidReceiveExternalChange
hdsp_forceSynchronizeWithCompletion:
localDefaultsDictionaryRepresentation
_localDefaults
_nanoDefaults
_keysNeedingSynchronize
_syncAccumulator
T@"<HDSPSyncedUserDefaultsExternalChangeDelegate>",W,N,V_delegate
platformSpecificProviders:
initWithEnvironment:wakeDetectorProviders:
arrayWithArray:
detectionWindowForDetector:afterDate:
hksp_containsDate:
nextWakeUpAfterDate:
na_filter:
_detectionWindowForDetector:afterDate:nextWakeUp:
performBlock:
upcomingStartDetectionDatesAfterDate:
hksp_earliestFromDates:
relevantOccurrence
sendNotifiedForEarlyWakeUpMessage
detectionWindowsAfterDate:
na_any:
_detectionWindowsAfterDate:nextWakeUp:
scheduleWakeDetection
unscheduleWakeDetection
startWakeDetection
stopWakeDetection
upcomingStartDetectionDateAfterDate:
sleepModeIsOff
T@"HKSPSleepScheduleOccurrence",R,N
wakeDetectors
wakeDetectionLock
_wakeDetectionLock
_wakeDetectors
T@"NSArray",R,N,V_wakeDetectors
T{os_unfair_lock_s=I},R,N,V_wakeDetectionLock
T@"HDSPWakeDetectionStateMachine",R,N,V_stateMachine
categoryTypeForIdentifier:
maximumAllowedDuration
duration
type
localDevice
categorySampleWithType:value:startDate:endDate:device:metadata:
hdsp_categorySampleForSleepSessionInterval:metadata:
lifetimeInterval
goodMorningDismissedDate
hk_stripLeadingTrailingWhitespace
goalAchievedQuantityForCategory:userInfo:
initWithCategory:endMorningIndex:goalAchieved:notificationVariant:userFirstName:
goalAchievedUserInfoKeyForCategory:
goalAchievedUserInfoValue
initWithDictionary:
endMorningIndex
isEqualToNotification:
isOneNight
doubleValue
quantityWithUnit:doubleValue:
wakeUpResultsNotificationFromUserInfo:
categoryIdentifier
_category
_goalAchieved
_endMorningIndex
_notificationVariant
_userFirstName
TQ,R,N,V_category
T@"HKQuantity",R,C,N,V_goalAchieved
Tq,R,N,V_endMorningIndex
Tq,R,N,V_notificationVariant
T@"NSString",R,C,N,V_userFirstName
T@"NSDictionary",R,C,N
initWithEnvironment:retryAttemptScheduler:
_updateState
stringWithUTF8String:
_isDelayingForTracking
hk_filter:
setWithObjects:
_sleepScheduleModel
_trackingDelayDuration
initWithStartDate:duration:
objectForKey:
retryAttemptScheduler
retryCriteria
registerForLaunchNotificationWithName:key:
unregisterForLaunchNotificationWithName:key:
isFinished
_lock_startQuery
calendarWithIdentifier:
addFailureBlock:
healthAppDefaultsDomainWithHealthStore:
propertyListValueForKey:error:
localizedDescription
initWithDaySummaries:morningIndexRange:userFirstName:
isWakeUpResultsNotificationEnabled
_isWaitingForWakeUp
queryResultFuture
goalProgressEngine
_queryResultFuture
_goalProgressEngine
_retryAttemptScheduler
T@"HDSPWakeUpResultsNotificationStateMachine",R,N,V_stateMachine
T@"NAFuture",R,N,V_queryResultFuture
T@"HKSHGoalProgressEngine",R,N,V_goalProgressEngine
T@"<HDSPActivityScheduler>",R,N,V_retryAttemptScheduler
initWithHasSleepFocusMode:mirrorsSleepFocusMode:
hasSleepFocusMode:
sleepFocusConfiguration:
invalidate
T@"<HKSPSleepFocusModeBridgeDelegate>",W,N
createSleepFocusMode:
removeSleepFocusMode:
sleepFocusModeIdentifier
T@"<HKSPSleepFocusModeBridgeDelegate>",W,N,Vdelegate
_createKeySetMapForKeySets:
keySets
unionSet:
perGizmoKeys
_accumulateKeysWithBlock:includeVersionInfo:
keysToSync
perGizmoDefaultValues
allKeysToSync
_allKeysToPersist
intersectsSet:
modificationDateKey
_keySetForKey:
filteredKeySetsWithKeysToSync:
_keySetMap
_versionInfo
T@"HDSPSyncedDefaultsVersionInfo",R,N,V_versionInfo
T@"NSArray",R,N
T@"NSSet",R,N
T@"NSDictionary",R,N
_dataVersionKey
_currentDataVersion
T@"NSString",R,C,N,V_dataVersionKey
TQ,R,N,V_currentDataVersion
_allKeysToSync
_identifier
_modificationDateKey
_keysToPersist
_keysToSync
_perGizmoKeys
_perGizmoDefaultValues
T@"NSString",R,C,N,V_identifier
T@"NSString",R,C,N,V_modificationDateKey
T@"NSSet",R,N,V_keysToPersist
T@"NSSet",R,N,V_keysToSync
T@"NSSet",R,N,V_perGizmoKeys
T@"NSDictionary",R,N,V_perGizmoDefaultValues
_loadPersistedModel
_persistModel:
_restorePersistedModelWithScheduleData:settingsData:recordData:
unarchivedObjectOfClass:fromData:error:
setLastSchedule:
setLastSettings:
setLastRecord:
_persistSchedule:
_persistSettings:
_persistRecord:
lastSchedule
archivedDataWithRootObject:requiringSecureCoding:error:
lastSettings
lastRecord
significantChangeWithTopLevelChangeKeys:
_evaluateChangesFromObject:toObject:outChangeSet:
topLevelChangeKeys
initWithIsSignificantChange:isSignificantEventRecordUpdate:topLevelChangeKeys:
evaluateSleepScheduleAdd:
evaluateSleepScheduleRemove
evaluateSleepScheduleUpdate:
evaluateSleepSettingsAdd:
evaluateSleepSettingsUpdate:
evaluateSleepRecordAdd:
evaluateSleepRecordUpdate:
combinedEvaluation:
evaluateSleepScheduleModelChange:
_lastSchedule
_lastSettings
_lastRecord
T@"HKSPSleepSchedule",C,N,V_lastSchedule
T@"HKSPSleepSettings",C,N,V_lastSettings
T@"HKSPSleepEventRecord",C,N,V_lastRecord
localServiceWithScheduler:
initWithEnvironment:localService:
sendMessage:
_shouldSyncSleepModeWithReason:
initWithSleepModeOn:
_shouldSyncMessage
hksp_activePairedDeviceSupportsFocusMode
wakeUpEarlyNotificationConfirmedDate
initWithGoodMorningDismissedDate:
_sendMessage:onService:
sendMessage:completion:
_handleReceivedMessage:
_handleSetSleepModeMessage:
_handleConfirmWakeUpMessage:
_handleDismissGoodMorningMessage:
_handleNotifiedForEarlyWakeUpMessage:
confirmAwakeNotificationOnDate:confirmUntilDate:
goodMorningDismissed
dismissGoodMorningOnDate:
_allowedMessageClasses
service:didReceiveMessage:
localService
_localService
T@"<HDSPIDSService>",R,N,V_localService
succinctDescription
build
dateDescription
descriptionBuilderWithMultilinePrefix:
descriptionWithMultilinePrefix:
_date
T@"NSDate",R,N,V_date
assertionWithIdentifier:timeout:
initWithIdentifier:timeout:
_locked_release
releaseAssertion
appendString:withName:
assertionWithIdentifier:
signpost_id
assertionLock
_assertionLock
_signpost_id
TQ,R,N,V_signpost_id
T{os_unfair_lock_s=I},R,N,V_assertionLock
defaultStore
dateWithTimeIntervalSinceNow:
_setRelevantShortcuts:
initWithIntent:
initWithShortcut:
setWidgetKind:
setRelevanceProviders:
setRelevantShortcuts:completionHandler:
_store
initWithCurrentDateProvider:
serialDispatchQueueSchedulerWithName:
initWithInterval:executeBlock:scheduler:
initWithEnvironment:schedulerProvider:throttlerProvider:
weakObjectsHashTable
_schedulePendingEvents
_lock_rescheduleEvents
_lock_shouldScheduleEvents
takeAssertionWithIdentifier:type:
removeAllEvents
_loadLastStandardSleepEvent
rescheduleEvents
lastEventTriggerDate
distantPast
removeEventsForProvider:
addEvents:provider:
nextEvent
_lock_scheduledEventIsDue
isUserVisible
scheduleEventForDate:options:
setLastEventTriggerDate:
overdueEventsForDate:
isExpired:
removeEvents:
_lock_updateLastStandardSleepEvent:
_shouldNotifyHandler:forEvent:
enumerateObserversWithFutureBlock:
sleepEvents
allEvents
_allSleepEvents
scheduledEventIsDue
removeEventProvider:
removeEventHandler:
setLastStandardSleepEvent:
scheduleLock
eventHandlers
eventProviders
pendingEventProviders
throttler
_scheduleLock
_lastStandardSleepEvent
_sleepEvents
_eventHandlers
_eventProviders
_pendingEventProviders
_throttler
T{os_unfair_lock_s=I},R,N,V_scheduleLock
T@"HDSPSleepEventList",R,N,V_sleepEvents
T@"HKSPObserverSet",R,N,V_eventHandlers
T@"NSHashTable",R,N,V_eventProviders
T@"NSHashTable",R,N,V_pendingEventProviders
T@"<HDSPEventScheduler>",R,N,V_scheduler
T@"HKSPThrottler",R,N,V_throttler
T@"HKSPSleepEvent",&,N,V_lastStandardSleepEvent
T@"NSDate",&,N
startSleepTrackingSession
stopSleepTrackingSession
authorizationStatusForType:
na_genericError
saveSleepTrackingSamples:completion:
initWithEnvironment:sleepAlarmProvider:
sleepAlarmsIgnoringCache:
currentSleepAlarms
alarmIDString
resetSleepAlarmSnoozeState
updateSleepAlarms
currentSleepAlarmWithIdentifier:
_sleepAlarmProvider
T@"<HDSPSleepAlarmProvider>",R,N,V_sleepAlarmProvider
identifierWithPid:
handleForIdentifier:error:
initWithProcessStateProvider:
taskState
_updateConfiguration
predicateMatchingIdentifier:
setPredicates:
setValues:
setStateDescriptor:
previousState
state
_process:didUpdateFromState:toState:
setUpdateHandler:
updateConfiguration:
_processStateMonitor
_processIdentifiers
_processStateProvider
T@"<HDSPProcessStateManagerDelegate>",W,N,V_delegate
handleSignificantTimeChange
handleTimeZoneChange
resetSystemTimeZone
T@"HDSPEnvironment",R,W,N,Venvironment
isChargingReminderDisabled
UTF8String
T@"<HDSPEventScheduleDelegate>",W,N
T@"<HDSPEventScheduleDelegate>",W,N,Vdelegate
_sortEvents
sortUsingComparator:
appendArraySection:withName:multilinePrefix:skipIfEmpty:
eventsByProvider
sortedEvents
_eventsByProvider
_sortedEvents
T@"NSMutableDictionary",R,N,V_eventsByProvider
T@"NSArray",R,N,V_sortedEvents
initWithEnvironment:watchOnWristMonitor:devicePowerMonitor:deviceUnlockMonitor:
_platformSpecificReadyProviderForEnvironment:
initWithEnvironment:watchOnWristMonitor:devicePowerMonitor:deviceUnlockMonitor:systemReadyProvider:applicationWorkspaceMonitor:
appendFormat:
dictionaryWithDictionary:
numberWithFloat:
applicationWorkspaceMonitor
systemReadyProvider
systemReady
systemMonitorLock
_systemReady
_systemMonitorLock
_deviceUnlockMonitor
_devicePowerMonitor
_applicationWorkspaceMonitor
_watchOnWristMonitor
_systemReadyProvider
T@"<HDSPSystemReadyProvider>",R,N,V_systemReadyProvider
TB,R,N,V_systemReady
T{os_unfair_lock_s=I},R,N,V_systemMonitorLock
T@"HDSPDeviceUnlockMonitor",R,N,V_deviceUnlockMonitor
T@"HDSPDevicePowerMonitor",R,N,V_devicePowerMonitor
T@"HDSPApplicationWorkspaceMonitor",R,N,V_applicationWorkspaceMonitor
T@"HDSPWatchOnWristMonitor",R,N,V_watchOnWristMonitor
bundleWithIdentifier:
localizedStringForKey:value:table:
assertionClassForType:
takeAssertion:
distantFuture
timeIntervalSinceNow
_assertionsOfType:
activeAssertionIdentifiersOfType:
takeIndefiniteAssertionWithIdentifier:type:
assertionsLock
assertions
setAssertions:
_assertionsLock
_assertions
T{os_unfair_lock_s=I},R,N,V_assertionsLock
T@"NSMutableDictionary",&,N,V_assertions
transaction
transactionLock
timer
_transactionLock
_transaction
_timer
T@"NSObject<OS_os_transaction>",R,N,V_transaction
T{os_unfair_lock_s=I},R,N,V_transactionLock
T@"NSObject<OS_dispatch_source>",R,N,V_timer
_updateEventRecordForSleepScheduleState:context:notifyBlock:
_updateEventRecordHelper:sleepScheduleState:context:
saveSleepEventRecord:error:preNotifyBlock:
setWakeUpWithNoAlarmDate:
setWakeUpAlarmDismissedDate:
setWakeUpAlarmSnoozedUntilDate:
changeEvaluation
scheduleModelChanged:
significantTimeChange
timeZoneChange
sleepScheduleStateDidChange:previousState:context:
previousOccurrence
_updateSleepScheduleState
T@"HDSPSleepScheduleStateCoordinatorStateMachine",R,N,V_stateMachine
encodeBool:forKey:
decodeBoolForKey:
appendBool:withName:
_sleepModeOn
TB,R,N,V_sleepModeOn
sleepDuration
_didMeetSleepDurationGoalLastNight
_sleepDurationGoalAchievedTwoWeekNotification
_sleepDurationGoalAchievedShortWeekNotification
_sleepDurationGoalAchievedLastNightNotification
sleepDurationGoalAchievedCount
_notificationForCategory:morningIndexRange:goalAchieved:
_randomNotificationVariantForCategory:
T@"NSString",R,N,V_userFirstName
sleepModePublisher
subscribe:callback:
initWithEnvironment:biomeInterface:
cancel
userFocusComputedMode
publisher
filterWithKeyPath:value:
_writeSleepModeToBiome:reason:
computeUserVisibleEndDate
sleepModeStream
biomeSleepModeStateForSleepModeState:
biomeSleepModeChangeReasonForSleepModeChangeReason:
initWithSleepModeState:sleepModeChangeReason:expectedEndDate:
sendEvent:toStream:
unsubscribe:
biomeInterface
_biomeInterface
T@"<HDSPBiomeInterface>",R,N,V_biomeInterface
initWithIdentifier:targetQueue:waking:
subscribeOn:
error
eventBody
sinkWithCompletion:receiveInput:
sendEvent:
T@"BMBiomeScheduler",R,N,V_scheduler
isPresenting
presentingExpirationDate
goodMorningAlertNotificationsEnabledWithLogObject:
goodMorningAlertLock
goodMorningAlertObservers
_goodMorningAlertLock
_goodMorningAlertObservers
T{os_unfair_lock_s=I},R,N,V_goodMorningAlertLock
T@"HDSPGoodMorningAlertStateMachine",R,N,V_stateMachine
T@"HKSPObserverSet",R,N,V_goodMorningAlertObservers
arrayWithObject:
initWithEnvironment:notificationPublishers:
_rescheduleEvents
_windDownNotificationEventAfterDate:
hk_addNonNilObject:
_bedtimeNotificationEventAfterDate:
_bedtimeOrWindDownNotificationsEnabled
_bedtimeOrWindDownNotificationEventIsDue:
_tearDownWakeDetectionNotification
_tearDownMorningNotification
_tearDownChargingReminder
_tearDownWindDownReminder
_tearDownBedtimeReminder
sleepEventWithIdentifier:dueDate:expirationDate:isUserVisible:
bedtimeReminderWasConfirmed
bedtimeReminderWasDismissed
wakeNotificationWasDismissed
notificationPublishers
_notificationPublishers
T@"NSArray",R,N,V_notificationPublishers
manualOffState
automatedOffState
modeConfigService
createDefaultSleepingModeConfigurationWithError:
setModeConfiguration:error:
updateCachedHasSleepFocusMode:
removeModeConfigurationForModeIdentifier:error:
isExpiredForDate:
T@"HDSPWakeUpResultsNotificationStateMachine",R,W,D,N
T@"<HDSPWakeUpResultsNotificationStateMachineInfoProvider>",R,N
notificationEnabled
TB,R,N,GisNotificationEnabled
stateExpired
TB,R,N,GisStateExpired
confirmAwakeNotificationOnDate:
computeConfirmedWakeUpUntilDateForEarlyWakeUpDate:
setWakeUpEarlyNotificationConfirmedDate:
setWakeUpConfirmedUntilDate:
setGoodMorningDismissedDate:
wakeUpAlarmDismissedDate
isEqualToDate:
_latestDateInAlarms:dateBlock:
snoozeFireDate
_isValidSnoozeDate:
initWithIdentifier:notification:actionHandler:
_actionHandler
T@"NSString",R,N,V_identifier
T^{__CFUserNotification=},R,N,V_notification
T@?,R,C,N,V_actionHandler
_detectingState
T@"<HDSPWakeDetectionStateMachineDelegate>",R,W,D,N
T@"<HDSPWakeDetectionStateMachineInfoProvider>",R,W,D,N
T@"HDSPWakeDetectionDisabledState",R,N,V_disabledState
T@"HDSPWakeDetectionWaitingState",R,N,V_waitingState
T@"HDSPWakeDetectionDetectingState",R,N,V_detectingState
T@"HDSPWakeDetectionNotifiedState",R,N,V_notifiedState
T@"HDSPEnvironmentStateMachine",R,W,D,N
isSignificantChange
isSignificantEventRecordUpdate
appendBool:withName:ifEqualTo:
appendInteger:withName:
emptyEvaluation
significantEventRecordUpdateWithTopLevelChangeKeys:
_isSignificantChange
_isSignificantEventRecordUpdate
_topLevelChangeKeys
TB,R,N,V_isSignificantChange
TB,R,N,V_isSignificantEventRecordUpdate
T@"NSSet",R,N,V_topLevelChangeKeys
floatValue
isChargingOverride
setIsChargingOverride:
batteryLevelOverride
setBatteryLevelOverride:
_isChargingOverride
_batteryLevelOverride
T@"NSNumber",&,N,V_isChargingOverride
T@"NSNumber",&,N,V_batteryLevelOverride
Tf,R,N
_offState
_windDownState
_bedtimeState
_bedtimeInProgressState
_greetingState
T@"<HDSPSleepLockScreenStateMachineDelegate>",R,W,D,N
T@"<HDSPSleepLockScreenStateMachineInfoProvider>",R,W,D,N
T@"HDSPSleepLockScreenOffState",R,N,V_offState
T@"HDSPSleepLockScreenWindDownState",R,N,V_windDownState
T@"HDSPSleepLockScreenBedtimeState",R,N,V_bedtimeState
T@"HDSPSleepLockScreenBedtimeInProgressState",R,N,V_bedtimeInProgressState
T@"HDSPSleepLockScreenGreetingState",R,N,V_greetingState
scheduleActivityWithCriteria:options:activityHandler:
eventName
_eventName
_callbackScheduler
T@"NSString",R,C,N,V_eventName
T@"<NAScheduler>",R,N,V_callbackScheduler
initWithSuccess:changeEvaluation:error:shouldNotify:
emptyResult
saveFailedWithError:
success
shouldNotify
_success
_shouldNotify
_changeEvaluation
_error
TB,R,N,V_success
T@"HDSPSleepScheduleModelChangeEvaluation",R,N,V_changeEvaluation
T@"NSError",R,N,V_error
TB,R,N,V_shouldNotify
persistedStateIgnoringExpiration
initialState
_wakeUpState
_delayedWakeUpState
_initialState
T@"<HDSPSleepScheduleStateCoordinatorStateMachineDelegate>",R,W,D,N
T@"<HDSPSleepScheduleStateCoordinatorStateMachineInfoProvider>",R,W,D,N
T@"HDSPSleepScheduleStateCoordinatorDisabledState",R,N,V_disabledState
T@"HDSPSleepScheduleStateCoordinatorWakeUpState",R,N,V_wakeUpState
T@"HDSPSleepScheduleStateCoordinatorBedtimeState",R,N,V_bedtimeState
T@"HDSPSleepScheduleStateCoordinatorWindDownState",R,N,V_windDownState
T@"HDSPSleepScheduleStateCoordinatorDelayedWakeUpState",R,N,V_delayedWakeUpState
T@"HDSPSleepScheduleStateCoordinatorInitialState",R,N,V_initialState
isSleepTrackingSchedulingState
initWithScheduler:
initWithService:
queue
addDelegate:queue:
_sendSerializedMessage:identifier:completion:
_localDestinations
sendMessage:toDestinations:priority:options:identifier:error:
T@"<HDSPIDSServiceDelegate>",W,N
service:account:incomingOpportunisticData:withIdentifier:fromID:context:
service:didSendOpportunisticDataWithIdentifier:toIDs:
service:account:incomingMessage:fromID:context:
service:account:incomingData:fromID:context:
service:account:incomingUnhandledProtobuf:fromID:context:
service:account:incomingResourceAtURL:fromID:context:
service:account:incomingResourceAtURL:metadata:fromID:context:
service:account:incomingPendingMessageOfType:fromID:context:
service:activeAccountsChanged:
service:devicesChanged:
service:nearbyDevicesChanged:
service:connectedDevicesChanged:
service:linkedDevicesChanged:
service:account:identifier:didSendWithSuccess:error:
service:account:identifier:didSendWithSuccess:error:context:
service:account:identifier:sentBytes:totalBytes:
service:account:identifier:hasBeenDeliveredWithContext:
service:account:identifier:fromID:hasBeenDeliveredWithContext:
service:account:inviteReceivedForSession:fromID:
service:account:inviteReceivedForSession:fromID:withOptions:
service:account:inviteReceivedForSession:fromID:withContext:
service:account:receivedGroupSessionParticipantUpdate:
service:account:receivedGroupSessionParticipantDataUpdate:
serviceSpaceDidBecomeAvailable:
serviceAllowedTrafficClassifiersDidReset:
service:didSwitchActivePairedDevice:acknowledgementBlock:
_service
T@"<HDSPIDSServiceDelegate>",W,N,V_delegate
initWithSource:changeEvaluation:
appendObject:withName:skipIfNil:
contextByApplyingChangeEvaluation:
_source
T@"<HDSPSource>",R,N,V_source
initWithDateInterval:sleepIntervals:endReason:metadata:requiresFirstUnlock:
encodeInteger:forKey:
decodeIntegerForKey:
builderWithObject:ofExpectedClass:
appendObject:counterpart:
appendUnsignedInteger:counterpart:
appendBool:counterpart:
isEqual
appendUnsignedInteger:withName:
supportsSecureCoding
TB,R
_requiresFirstUnlock
_interval
_sleepIntervals
_endReason
_metadata
T@"NSDateInterval",R,N,V_interval
T@"NSArray",R,N,V_sleepIntervals
TQ,R,N,V_endReason
T@"NSDictionary",R,N,V_metadata
TB,R,N,V_requiresFirstUnlock
initWithInterval:type:
_type
TQ,R,N,V_type
_loadSleepScheduleModel:
_shouldTurnOffWatchSleepFeatures
_turnOffWatchSleepFeatures
_locked_loadSleepScheduleModel:
_locked_loadSleepSchedule:
_locked_loadSleepSettings:
_locked_loadSleepEventRecord:
_locked_saveSleepSchedule:
_locked_saveSleepSettings:
_locked_saveSleepEventRecord:
_locked_notifyObserversForSleepScheduleModelChange:
_locked_sleepScheduleModel
_shouldNotifyObserver:
_locked_validateSleepSchedule:generateValidSchedule:
timelineResults
validSleepSchedule
_locked_saveSleepSchedule:error:
_locked_notifyObserversForSleepScheduleChange:
_locked_removeSleepSchedule
_locked_updateSleepSchedule:
_locked_setSleepSchedule:
_locked_applyNecessaryChangesBeforeSaving:
_locked_updateModelWithBlock:persistBlock:error:
_locked_canApplyChangesFrom:to:error:
changeSet
_locked_applyNecessaryChangesBeforeSavingSleepSchedule:validationResult:
_locked_applyNecessaryEventRecordChangesBeforeSavingSleepSchedule:validationResult:
snoozeFireDateNeedsReset
hasChangeForPropertyIdentifier:
originalValueForPropertyIdentifier:
changedValueForPropertyIdentifier:
isDate:inSameDayAsDate:
previousResolvedOccurrenceBeforeDate:
wakeUpEvent
occurrence
setWakeUpOverriddenDate:
wakeUpOverriddenDate
computeConfirmedWakeUpUntilDateForOverrideWakeUpDate:
hksp_latestFromDates:
_locked_saveSleepEventRecord:error:
isValidOccurrence
na_all:
hksp_validationErrorWithReason:
emptyFailureWithError:
builderWithSleepScheduleModel:date:
buildTimelineWithOptions:
sleepScheduleInvalid
sleepScheduleInvalidReason
initWithSuccess:timelineResults:error:
_locked_resetSleepEventRecord
_locked_saveSleepSettings:error:
_locked_notifyObserversForSleepSettingsChange:
_locked_resetSleepSettings
_locked_updateSleepSettings:
_locked_setSleepSettings:
_locked_saveSleepEventRecord:error:preNotifyBlock:
_locked_notifyObserversForSleepEventRecordChange:
_locked_updateSleepEventRecord:
_locked_setSleepEventRecord:
_locked_applyNecessaryChangesBeforeSavingSleepEventRecord:
_locked_applyNecessarySleepSettingsChangesBeforeSavingSleepEventRecord:
setLastModifiedDate:
_earliestDateToScheduleEventsForDate:
wakeUpWithNoAlarmDate
setWatchSleepFeaturesEnabled:
removeSleepScheduleModelWithError:
_loadSleepSchedule:
notifyObserversForSleepScheduleChange:
_loadSleepSettings:
notifyObserversForSleepSettingsChange:
_loadSleepEventRecord:
notifyObserversForSleepEventRecordChange:
storeLock
changeEvaluator
_storeLock
_sleepSchedule
_sleepSettings
_sleepEventRecord
_changeEvaluator
T{os_unfair_lock_s=I},R,N,V_storeLock
T@"HDSPSleepScheduleModelChangeEvaluator",R,N,V_changeEvaluator
T@"HKSPSleepSchedule",R,N,V_sleepSchedule
T@"HKSPSleepSettings",R,N,V_sleepSettings
T@"HKSPSleepEventRecord",R,N,V_sleepEventRecord
_checkSpringBoardStarted
_processName
_stopMonitoring
_startMonitoring
_checkAndNotify
notifyToken
springboardStarted
springboardStartedLock
_isAppleWatch
_springboardStarted
_notifyToken
_springboardStartedLock
TB,R,N,V_isAppleWatch
Ti,R,N,V_notifyToken
TB,R,N,V_springboardStarted
T{os_unfair_lock_s=I},R,N,V_springboardStartedLock
numberWithUnsignedLong:
initWithBundleIdentifier:
initWithEnvironment:notificationCenter:
_notificationRequestForEvent:userInfo:
_publishNotificationRequest:
_notificationRequestIdentifierForEvent:
_notificationContentForEventIdentifier:userInfo:
requestWithIdentifier:content:trigger:destinations:
addNotificationRequest:withCompletionHandler:
request
content
removeDeliveredNotificationsWithIdentifiers:
getDeliveredNotificationsWithCompletionHandler:
_notificationIdentifierPrefixForEventIdentifier:
_generateUniqueIdentifierForNotificationIdentifierPrefix:eventDate:
_stringForEventDate:
stringByAppendingFormat:
localeWithLocaleIdentifier:
setLocale:
timeZoneForSecondsFromGMT:
setTimeZone:
setDateFormat:
stringFromDate:
_windDownReminderContent
_bedtimeReminderContent
_chargingReminderContentWithUserInfo:
_wakeUpResultsContentWithUserInfo:
_wakeDetectionContentWithUserInfo:
_contentByAddingCommonUserInfoTo:
setUserInfo:
setCategoryIdentifier:
setTitle:
_localizedBedtimeOrWindDownReminderBodyWithKey:embeddingTimeForEvent:
setBody:
setSound:
_windDownReminderBodyContent
localizedStringFromDate:dateStyle:timeStyle:
hksp_dateRequiresSingularTimeString:
stringByAppendingString:
localizedStandardRangeOfString:
replaceCharactersInRange:withString:
_chargingReminderBodyForAlarmEnabled:sleepTrackingEnabled:
setShouldIgnoreDoNotDisturb:
T@"UNUserNotificationCenter",R,N,V_notificationCenter
automatedOffFromManualState
_manualOffState
_manualBedtimeState
_automatedOffState
_automatedOffFromManualState
T@"<HDSPSleepModeStateMachineDelegate>",R,W,D,N
T@"<HDSPSleepModeStateMachineInfoProvider>",R,W,D,N
T@"HDSPSleepModeOffState",R,N,V_offState
T@"HDSPSleepModeWindDownState",R,N,V_windDownState
T@"HDSPSleepModeManualOffState",R,N,V_manualOffState
T@"HDSPSleepModeBedtimeState",R,N,V_bedtimeState
T@"HDSPSleepModeManualBedtimeState",R,N,V_manualBedtimeState
T@"HDSPSleepModeAutomatedOffState",R,N,V_automatedOffState
T@"HDSPSleepModeAutomatedOffFromManualState",R,N,V_automatedOffFromManualState
determineNextStateFromTimeline
timeline
_timelineForDate:
resolvedOccurrenceContainingDate:
windDownInterval
hksp_containsDate:searchOptions:
bedtimeInterval
_scheduleState
T@"HDSPSleepScheduleStateCoordinatorStateMachine",R,W,D,N
TQ,R,N,V_scheduleState
_upcomingState
_notOnboardedState
T@"<HDSPSleepWidgetStateMachineDelegate>",R,W,D,N
T@"<HDSPSleepWidgetStateMachineInfoProvider>",R,W,D,N
T@"HDSPSleepWidgetDisabledState",R,N,V_disabledState
T@"HDSPSleepWidgetWaitingState",R,N,V_waitingState
T@"HDSPSleepWidgetUpcomingState",R,N,V_upcomingState
T@"HDSPSleepWidgetWindDownState",R,N,V_windDownState
T@"HDSPSleepWidgetBedtimeState",R,N,V_bedtimeState
T@"HDSPSleepWidgetBedtimeInProgressState",R,N,V_bedtimeInProgressState
T@"HDSPSleepWidgetGreetingState",R,N,V_greetingState
T@"HDSPSleepWidgetNotOnboardedState",R,N,V_notOnboardedState
initWithInterval:executeBlock:
initWithDomain:
_handleNanoPreferencesSync
_resetNPSDomainAccessor
npsDomainAccessor
synchronize
_registerForNotifications
defaultCenter
_handleActivePairedDeviceDidChange:
addObserver:selector:name:object:
setObject:forKey:
boolForKey:
setBool:forKey:
floatForKey:
setFloat:forKey:
integerForKey:
setInteger:forKey:
dataForKey:
dictionaryRepresentation
hksp_dictionaryByFilteringKeys:
synchronizeUserDefaultsDomain:keys:
synchronizeNanoDomain:keys:
_npsManager
_npsDomainAccessorQueue
_notifyThrottler
_npsDomainAccessor
T@"NPSDomainAccessor",R,N,V_npsDomainAccessor
_timelineResults
T@"HKSPSleepEventTimelineResults",R,N,V_timelineResults
enterMigrationOrReadyState
_transitionToQueryingState
_inMonitoringWindow
chargingRemindersEnabledWithLogObject:
T@"HDSPChargingReminderStateMachine",R,W,D,N
initWithUTF8String:
_registerForStream:
stringWithCString:encoding:
_handleNotificationWithName:completion:
launchNotificationRegistrations
launchNotificationRegistrationLock
_launchNotificationRegistrationLock
_launchNotificationRegistrations
T@"NSMutableDictionary",R,N,V_launchNotificationRegistrations
T{os_unfair_lock_s=I},R,N,V_launchNotificationRegistrationLock
initWithAlarmManager:
_checkAlarmServer
sleepAlarm
removeObserver:name:object:
_alarmServerReady
sleepAlarmsSync
sleepAlarms
hour
minute
bedtimeHour
bedtimeMinute
repeatSchedule
weekdays
bedtimeReminder
bedtimeReminderMinutes
windDownMinutes
sound
soundVolume
vibrationIdentifier
setWindDownMinutes:
setSoundVolume:
setToneIdentifier:
setVibrationIdentifier:
dismissedDate
sleepAlarm:matchesSleepScheduleModel:
T@"NAFuture",R,N
alarmServerReady
alarmManager
_alarmManager
T@"MTAlarmManager",R,N,V_alarmManager
T@"NAFuture",R,N,V_alarmServerReady
_handleSleepFocusModeDeletionIfNecessary
_updateStateCommon
isTimeAsleepTrackingDisabled
inTrackingWindow
T@"HDSPTimeAsleepTrackerStateMachine",R,W,D,N
sleepFocusConfigurationServiceWithOptions:
_handleFocusModeEvent:
_enableSleepModeControlCenterModuleIfNeeded
_ensureFocusModeCreatedForSleepMode:reason:
_userTurnedOffSleepModeWithReason:
_automationTurnedOffSleepModeWithReason:
_userTurnedOnSleepModeWithReason:
_automationTurnedOnSleepModeWithReason:
_shouldHandleBiomeEvent:
modeUpdateReason
modeUpdateSource
_sleepModeChangeReasonForBiomeReason:source:
isStarting
_createFocusModeIfNeeded
notifyObserversForSleepModeChange:previousMode:reason:
_powerLogSleepMode:
_isScheduledSleepModeEnabled
_isSleepModeDuringWindDownEnabled
sleepFocusModeBridge:didUpdateSleepFocusConfiguration:
sleepModeLock
sleepModeObservers
sleepFocusModeBridge
_sleepModeLock
_sleepModeObservers
_sleepFocusModeBridge
T{os_unfair_lock_s=I},R,N,V_sleepModeLock
T@"HDSPSleepModeStateMachine",R,N,V_stateMachine
T@"HKSPObserverSet",R,N,V_sleepModeObservers
T@"<HDSPSleepFocusModeBridge>",R,N,V_sleepFocusModeBridge
Tq,N
@24@0:8@16
@16@0:8
v32@0:8@16@24
v24@0:8@16
v16@0:8
B24@0:8@16
#16@0:8
@24@0:8:16
@32@0:8:16@24
@40@0:8:16@24@32
B16@0:8
B24@0:8#16
B24@0:8:16
Vv16@0:8
Q16@0:8
^{_NSZone=}16@0:8
B24@0:8@"Protocol"16
@"NSString"16@0:8
v40@0:8q16q24Q32
@"<HDSPWakeDetectorDelegate>"16@0:8
v24@0:8@"<HDSPWakeDetectorDelegate>"16
@24@0:8@"HDSPEnvironment"16
@"HDSPEnvironment"16@0:8
v24@0:8@"HDSPEnvironment"16
v24@0:8@?16
v24@0:8Q16
{os_unfair_lock_s=I}16@0:8
{os_unfair_lock_s="_os_unfair_lock_opaque"I}
@"<HDSPWakeDetectorDelegate>"
@"HDSPEnvironment"
v24@0:8@"<HDSPSyncedUserDefaults>"16
v32@0:8@"<HDSPSyncedUserDefaults>"16@"NSSet"24
@"<HDSPSource>"16@0:8
@40@0:8@16@24@32
@24@0:8^@16
B32@0:8@16^@24
B24@0:8^@16
@48@0:8#16@24@32^@40
B48@0:8@16@24Q32^@40
@"HDSPSyncedDefaults"
@"HDSPSyncedDefaultsConfiguration"
@"HKSPObserverSet"
v32@0:8Q16Q24
q16@0:8
v40@0:8Q16Q24Q32
@"<HDSPSleepTrackerDelegate>"16@0:8
v24@0:8@"<HDSPSleepTrackerDelegate>"16
@"NAFuture"24@0:8@"HDSPSleepSession"16
@32@0:8@16Q24
@"<HDSPSleepTrackerDelegate>"
@"<HKSPQueueBackedScheduler>"
v24@0:8@"HDSPTimeChangeListener"16
v48@0:8@16{?=qq}24@40
{?=qq}24@0:8@16
@40@0:8{?=qq}16@?32
v32@0:8{?=qq}16
@"<HDSPActivityScheduler>"
@"HKSPAnalyticsManager"
v24@0:8@"NSDate"16
@24@0:8Q16
@32@0:8@16@24
@"NAFuture"32@0:8@"HDSPNotificationListener"16@"NSString"24
@"<NAScheduler>"16@0:8
@"NSDateInterval"24@0:8@"NSDate"16
@"NSDate"16@0:8
@"HKSPSleepScheduleModel"16@0:8
v20@0:8f16
@56@0:8@16@24@32@40@?48
@"HDSPChargingReminderDisabledState"
@"HDSPChargingReminderWaitingState"
@"HDSPChargingReminderMonitoringState"
@"HDSPChargingReminderNotifiedState"
v24@0:8@"HKSPSleepEvent"16
@"NSSet"16@0:8
@"NSArray"24@0:8@"NSDate"16
@"<HDSPSleepEventDelegate>"16@0:8
v24@0:8@"<HDSPSleepEventDelegate>"16
@"NSDictionary"16@0:8
v32@0:8@"HDSPSleepScheduleModelManager"16@"HKSPSleepSchedule"24
v32@0:8@"HDSPSleepScheduleModelManager"16@"HKSPSleepSettings"24
v32@0:8@"HDSPSleepScheduleModelManager"16@"HKSPSleepEventRecord"24
v32@0:8@"HDSPSleepScheduleModelManager"16@"HKSPSleepScheduleModel"24
v20@0:8B16
@32@0:8@16@?24
v32@0:8@16Q24
@?16@0:8
@"<HDSPSleepEventDelegate>"
@"<HDSPTimeAsleepTracker>"
@"HDSPTimeAsleepTrackerStateMachine"
@"NSArray"
@"HDSPTimeAsleepTrackerDisabledState"
@"HDSPTimeAsleepTrackerWaitingState"
@"HDSPTimeAsleepTrackerAutoTrackingState"
@"HDSPTimeAsleepTrackerActivityTrackingState"
@"HDSPTimeAsleepTrackerActivityAfterWakeUpTrackingState"
@"HDSPTimeAsleepTrackerManualTrackingState"
@"HDSPTimeAsleepTrackerInternalEndState"
d16@0:8
@"HDSPWakeUpResultsNotification"
@"HKHealthStore"
@"HKSPDiagnostics"
v32@0:8q16q24
B24@0:8q16
v32@0:8q16@24
v24@0:8q16
@"NSDictionary"
@"HDSPSleepLockScreenStateMachine"
@"<HDSPSleepLockScreenAssertionManager>"
@40@0:8@16@24@?32
@"<_CDLocalContext>"
v32@0:8@"HDSPSleepSessionManager"16@"HDSPSleepSession"24
v32@0:8@"HDSPSleepSessionManager"16@"NSArray"24
@"NAFuture"32@0:8@"HDSPSleepSessionManager"16@"HDSPSleepSession"24
v24@0:8@"HDSPSleepSessionManager"16
@"HDSPSleepSessionManager"
@"<HDSPSleepTracker>"
v32@0:8q16Q24
v40@0:8q16Q24@32
@48@0:8@16@24@32@40
@"HDSPSleepWidgetStateMachine"
@"<HDSPWidgetReloader>"
@"HKSPThrottler"
@"<HDSPWidgetRelevanceDonor>"
v24@0:8@"NSCoder"16
@24@0:8@"NSCoder"16
@24@0:8^{_NSZone=}16
v40@0:8@16@24Q32
v24@0:8@"<HDSPSleepTracker>"16
v40@0:8@"<HDSPSleepTracker>"16@"HDSPSleepSession"24Q32
@"<HDSPSleepSessionManagerDelegate>"
@"<HDSPSleepSessionPersistence>"
@"HDSPDeviceUnlockMonitor"
v28@0:8q16B24
v24@0:8@"HKSPSleepScheduleModel"16
@"HDSPChargingReminderStateMachine"
@48@0:8@16@24{?=qq}32
B48@0:8@16Q24@32@40
{?=qq}16@0:8
{?="start"q"duration"q}
@272@0:8@16@?24@?32@?40@?48@?56@?64@?72@?80@?88@?96@?104@?112@?120@128@?136@?144@?152@?160@?168@?176@?184@?192@?200@?208@216@?224@?232@?240@248@?256@264
v32@0:8@?16^{os_unfair_lock_s=I}24
v32@0:8@?16@24
@"_HKBehavior"
@"HDSPSleepScheduleModelManager"
@"HDSPSleepStorage"
@"HDSPSleepEventScheduler"
@"HDSPSleepScheduleStateCoordinator"
@"HDSPSleepModeManager"
@"HDSPSleepTrackingManager"
@"HDSPSleepActionManager"
@"HDSPSleepNotificationManager"
@"HDSPEnvironmentStateMachine"
@"NAFuture"
@"<HKSPUserDefaults>"
@"HDSPSleepStoreServer"
@"HDSPGoodMorningAlertManager"
@"HDSPChargingReminderManager"
@"HDSPWakeDetectionManager"
@"HDSPWakeUpResultsNotificationManager"
@"HDSPSleepAlarmManager"
@"HKSPHealthStoreProvider"
@"HDSPDiagnostics"
@"HDSPNotificationListener"
@"HDSPSleepLockScreenManager"
@"HDSPSleepWidgetManager"
@"HDSPSystemMonitor"
@"HDSPAssertionManager"
@"HDSPTimeChangeListener"
@"HKSPSensitiveUIMonitor"
@"HDSPSleepScheduleModelMigrationManager"
@"HDSPContextStoreManager"
@"HDSPBiomeManager"
@"HDSPIDSServiceManager"
@"HDSPAnalyticsManager"
v32@0:8@16@?24
v24@0:8@?<v@?@"<HKSPSyncAnchor>"@"NSError">16
v32@0:8@"<HKSPSyncAnchor>"16@?<v@?B@"NSError">24
v40@0:8q16Q24@?32
v40@0:8@16@24@?32
v40@0:8q16@24@?32
v32@0:8q16@?24
v24@0:8@?<v@?@"HKSPSleepSchedule"@"NSError">16
v32@0:8@"HKSPSleepSchedule"16@?<v@?@"NSError">24
v24@0:8@?<v@?@"HKSPSleepSettings"@"NSError">16
v32@0:8@"HKSPSleepSettings"16@?<v@?@"NSError">24
v24@0:8@?<v@?@"HKSPSleepEventRecord"@"NSError">16
v32@0:8@"HKSPSleepEventRecord"16@?<v@?@"NSError">24
v24@0:8@?<v@?q@"NSError">16
v40@0:8q16Q24@?<v@?@"NSError">32
v24@0:8@?<v@?Q@"NSError">16
v24@0:8@?<v@?B@"NSError">16
v32@0:8@"NSDate"16@?<v@?B@"NSError">24
v40@0:8@"NSString"16@"NSDictionary"24@?<v@?B@"NSError">32
v24@0:8@?<v@?@"NSDictionary"@"NSError">16
v40@0:8q16@"NSDictionary"24@?<v@?B@"NSError">32
v32@0:8q16@?<v@?B@"NSError">24
v20@0:8i16
v24@0:8@"HKSPXPCClient"16
@40@0:8@16@?24@32
@"HKSPXPCConnectionListener"
@"HDSPProcessStateManager"
@"<HDSPSystemReadyDelegate>"16@0:8
v24@0:8@"<HDSPSystemReadyDelegate>"16
@"<HDSPSystemReadyDelegate>"
@"HDSPSpringboardMonitor"
v32@0:8q16@"NSDictionary"24
@"<HDSPSleepLockScreenAssertionManagerDelegate>"16@0:8
v24@0:8@"<HDSPSleepLockScreenAssertionManagerDelegate>"16
@"NSXPCListener"
@"NSXPCConnection"
@"<HDSPSleepLockScreenAssertionManagerDelegate>"
@"NSNumber"
v32@0:8@"HKSPSleepEvent"16@"NSDictionary"24
v24@0:8@"NSString"16
@24@0:8B16B20
v68@0:8@16@24@32@40@48B56@?60
v32@0:8Q16@24
@"NSMutableDictionary"
@"NSString"
@"<HDSPSource>"
@"<NAScheduler>"
v40@0:8@16@24@32
@"CSLSOnWristMonitor"
@"HDSPGoodMorningAlertDisabledState"
@"HDSPGoodMorningAlertWaitingState"
@"HDSPGoodMorningAlertPresentingState"
v24@0:8@"NSArray"16
v32@0:8@"NSArray"16@"NSArray"24
@"HDSPCFUserNotification"
@"HDSPCFUserNotificationCenter"
@"NSMutableArray"
@"NSDate"
@"NSObject<OS_dispatch_source>"
@"HDSPEnvironmentNotReadyState"
@"HDSPEnvironmentMigrationState"
@"HDSPEnvironmentReadyState"
@"HDSPEnvironmentDemoState"
v24@0:8@"NSError"16
@"HDSPWakeUpResultsNotificationWaitingForWakeUpState"
@"HDSPWakeUpResultsNotificationDelayingForTrackingState"
@"HDSPWakeUpResultsNotificationWaitingForRetryState"
@"HDSPWakeUpResultsNotificationQueryingState"
@"HDSPWakeUpResultsNotificationNeedsProtectedDataState"
@"HDSPWakeUpResultsNotificationNotifiedState"
@"HDSPWakeUpResultsNotificationDisabledState"
v28@0:8B16@20
f24@0:8@16
v28@0:8f16@20
q24@0:8@16
@24@0:8@"NSString"16
v32@0:8@16@"NSString"24
B24@0:8@"NSString"16
v28@0:8B16@"NSString"20
f24@0:8@"NSString"16
v28@0:8f16@"NSString"20
q24@0:8@"NSString"16
v32@0:8q16@"NSString"24
@"NSData"24@0:8@"NSString"16
@"NSDictionary"24@0:8@"NSSet"16
v24@0:8@"NSDictionary"16
v24@0:8@"NSSet"16
v24@0:8@"<HDSPSyncedUserDefaultsExternalChangeDelegate>"16
@48@0:8@16@24@?32d40
@"<HDSPSyncedUserDefaults>"
@"NSMutableSet"
@"HKSPAccumulator"
@"<HDSPSyncedUserDefaultsExternalChangeDelegate>"
v32@0:8@"<HDSPWakeDetector>"16@"NSDate"24
@"NSDate"24@0:8@"NSDate"16
@"HKSPSleepScheduleOccurrence"16@0:8
@"HDSPWakeDetectionStateMachine"
@32@0:8Q16@24
@56@0:8Q16q24@32q40@48
@"HKQuantity"
@"HDSPWakeUpResultsNotificationStateMachine"
@"HKSHGoalProgressEngine"
@"HKSPSleepFocusConfiguration"24@0:8^@16
@"<HKSPSleepFocusModeBridgeDelegate>"16@0:8
v24@0:8@"<HKSPSleepFocusModeBridgeDelegate>"16
@"<HKSPSleepFocusModeBridgeDelegate>"
@28@0:8@?16B24
@"HDSPSyncedDefaultsVersionInfo"
@64@0:8@16@24@32@40@48@56
@"NSSet"
Q40@0:8@16@24^@32
@"HKSPSleepSchedule"
@"HKSPSleepSettings"
@"HKSPSleepEventRecord"
v32@0:8@"<HDSPIDSService>"16@"<HDSPIDSMessage>"24
B24@0:8Q16
@"<HDSPIDSService>"
@"NSString"24@0:8@"NSString"16
@"BSDescriptionBuilder"24@0:8@"NSString"16
@"BSDescriptionBuilder"16@0:8
@32@0:8@16d24
@32@0:8@"NSString"16d24
@"INRelevantShortcutStore"
v24@0:8@"<HDSPSleepEventProvider>"16
@40@0:8@16@?24@?32
B32@0:8@16@24
@"HKSPSleepEvent"
@"HDSPSleepEventList"
@"NSHashTable"
@"<HDSPEventScheduler>"
@"NAFuture"24@0:8@"NSArray"16
@"<HDSPSleepAlarmProvider>"
@24@0:8@?16
B20@0:8i16
@"RBSProcessMonitor"
@"<HDSPProcessStateManagerDelegate>"
v32@0:8@"NSDate"16Q24
@"<HDSPEventScheduleDelegate>"16@0:8
v24@0:8@"<HDSPEventScheduleDelegate>"16
@"<HDSPEventScheduleDelegate>"
@"HDSPDevicePowerMonitor"
@"HDSPApplicationWorkspaceMonitor"
@"HDSPWatchOnWristMonitor"
@"<HDSPSystemReadyProvider>"
#24@0:8Q16
v40@0:8@16Q24d32
@"NSObject<OS_os_transaction>"
v40@0:8Q16Q24@32
v40@0:8Q16Q24@"HDSPSleepScheduleStateCoordinatorStateMachineContext"32
v40@0:8Q16@24@?32
B40@0:8@16Q24@32
@"HDSPSleepScheduleStateCoordinatorStateMachine"
@20@0:8B16
@48@0:8@16{?=qq}24@40
q24@0:8Q16
@48@0:8Q16{?=qq}24@40
Q24@0:8q16
Q24@0:8Q16
@"<HDSPBiomeInterface>"
@32@0:8@16@?<v@?@"<BMStoreData>">24
v32@0:8@"<BMStoreData>"16@"<BMSourceStream>"24
@"BMBiomeScheduler"
@"HDSPGoodMorningAlertStateMachine"
@40@0:8@16^{__CFUserNotification=}24@?32
^{__CFUserNotification=}16@0:8
^{__CFUserNotification=}
@"HDSPWakeDetectionDisabledState"
@"HDSPWakeDetectionWaitingState"
@"HDSPWakeDetectionDetectingState"
@"HDSPWakeDetectionNotifiedState"
@32@0:8B16B20@24
f16@0:8
@"HDSPSleepLockScreenOffState"
@"HDSPSleepLockScreenWindDownState"
@"HDSPSleepLockScreenBedtimeState"
@"HDSPSleepLockScreenBedtimeInProgressState"
@"HDSPSleepLockScreenGreetingState"
v40@0:8@16Q24@?32
v40@0:8@16Q24@?<v@?>32
@40@0:8B16@20@28B36
@"HDSPSleepScheduleModelChangeEvaluation"
@"NSError"
v24@0:8@"HDSPSleepScheduleModelChangeEvaluation"16
@"HDSPSleepScheduleStateCoordinatorDisabledState"
@"HDSPSleepScheduleStateCoordinatorWakeUpState"
@"HDSPSleepScheduleStateCoordinatorBedtimeState"
@"HDSPSleepScheduleStateCoordinatorWindDownState"
@"HDSPSleepScheduleStateCoordinatorDelayedWakeUpState"
@"HDSPSleepScheduleStateCoordinatorInitialState"
v32@0:8@"<HDSPIDSMessage>"16@?<v@?B@"NSError">24
@"<HDSPIDSServiceDelegate>"16@0:8
v24@0:8@"<HDSPIDSServiceDelegate>"16
v64@0:8@16@24@32@40@48@56
v56@0:8@16@24@32@40@48
v56@0:8@16@24q32@40@48
v52@0:8@16@24@32B40@44
v60@0:8@16@24@32B40@44@52
v56@0:8@16@24@32q40q48
v48@0:8@16@24@32@40
v64@0:8@"IDSService"16@"IDSAccount"24@"NSData"32@"NSString"40@"NSString"48@"IDSMessageContext"56
v40@0:8@"IDSService"16@"NSString"24@"NSArray"32
v56@0:8@"IDSService"16@"IDSAccount"24@"NSDictionary"32@"NSString"40@"IDSMessageContext"48
v56@0:8@"IDSService"16@"IDSAccount"24@"NSData"32@"NSString"40@"IDSMessageContext"48
v56@0:8@"IDSService"16@"IDSAccount"24@"IDSProtobuf"32@"NSString"40@"IDSMessageContext"48
v56@0:8@"IDSService"16@"IDSAccount"24@"NSURL"32@"NSString"40@"IDSMessageContext"48
v64@0:8@"IDSService"16@"IDSAccount"24@"NSURL"32@"NSDictionary"40@"NSString"48@"IDSMessageContext"56
v56@0:8@"IDSService"16@"IDSAccount"24q32@"NSString"40@"IDSMessageContext"48
v32@0:8@"IDSService"16@"NSSet"24
v32@0:8@"IDSService"16@"NSArray"24
v52@0:8@"IDSService"16@"IDSAccount"24@"NSString"32B40@"NSError"44
v60@0:8@"IDSService"16@"IDSAccount"24@"NSString"32B40@"NSError"44@"IDSMessageContext"52
v56@0:8@"IDSService"16@"IDSAccount"24@"NSString"32q40q48
v48@0:8@"IDSService"16@"IDSAccount"24@"NSString"32@40
v56@0:8@"IDSService"16@"IDSAccount"24@"NSString"32@"NSString"40@48
v48@0:8@"IDSService"16@"IDSAccount"24@"IDSSession"32@"NSString"40
v56@0:8@"IDSService"16@"IDSAccount"24@"IDSSession"32@"NSString"40@"NSDictionary"48
v56@0:8@"IDSService"16@"IDSAccount"24@"IDSSession"32@"NSString"40@"NSData"48
v40@0:8@"IDSService"16@"IDSAccount"24@"IDSGroupSessionParticipantUpdate"32
v24@0:8@"IDSService"16
v40@0:8@"IDSService"16@"IDSDevice"24@?<v@?>32
@"IDSService"
@"<HDSPIDSServiceDelegate>"
@52@0:8@16@24Q32@40B48
@"NSDateInterval"
v24@0:8@"HDSPSleepStorage"16
@28@0:8@16B24
B40@0:8@16^@24@?32
B40@0:8@?16@?24^@32
B40@0:8@16@24^@32
@"HDSPSleepScheduleModelChangeEvaluator"
i16@0:8
@"UNUserNotificationCenter"
@"HDSPSleepModeOffState"
@"HDSPSleepModeWindDownState"
@"HDSPSleepModeManualOffState"
@"HDSPSleepModeBedtimeState"
@"HDSPSleepModeManualBedtimeState"
@"HDSPSleepModeAutomatedOffState"
@"HDSPSleepModeAutomatedOffFromManualState"
@"HDSPSleepWidgetDisabledState"
@"HDSPSleepWidgetWaitingState"
@"HDSPSleepWidgetUpcomingState"
@"HDSPSleepWidgetWindDownState"
@"HDSPSleepWidgetBedtimeState"
@"HDSPSleepWidgetBedtimeInProgressState"
@"HDSPSleepWidgetGreetingState"
@"HDSPSleepWidgetNotOnboardedState"
@"NPSManager"
@"NSObject<OS_dispatch_queue>"
@"NPSDomainAccessor"
@36@0:8B16@20@28
@"HKSPSleepEventTimelineResults"
v32@0:8r*16@24
@"NSArray"20@0:8B16
@"NSArray"16@0:8
@"NAFuture"16@0:8
@"MTAlarmManager"
Q32@0:8Q16q24
v32@0:8@"<HKSPSleepFocusModeBridge>"16@"HKSPSleepFocusConfiguration"24
@"HDSPSleepModeStateMachine"
@"<HDSPSleepFocusModeBridge>"
