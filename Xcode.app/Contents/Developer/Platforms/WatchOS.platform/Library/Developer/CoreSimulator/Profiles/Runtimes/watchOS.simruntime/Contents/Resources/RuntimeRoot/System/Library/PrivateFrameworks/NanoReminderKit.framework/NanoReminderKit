@(#)PROGRAM:NanoReminderKit  PROJECT:NanoReminders-1
?333333
v8@?0
-[NRKFetchCompletionBlockManager addCompletionBlock:completion:]
-[NRKFetchCompletionBlockManager removeCompletionBlockNamed:]
v32@?0@8@16^B24
-[NRKFetchCompletionBlockManager runCompletionBlocks]_block_invoke
-[NRKFetchCompletionBlockManager runCompletionBlocks]
NRKActivityRecipe Error
kNRKActivityRecipeNotificationName_RecipeComplete
v16@?0@8
listId
name=%@
%@://%@
%@://
%@=%@
NRKReminderStoreDataChangedNotification
+[NRKReminderStore sharedInstance]
+[NRKReminderStore sharedInstanceWithAutoLoadHint:]_block_invoke
com.apple.nrk.fetch_queue
v20@?0B8@"NSError"12
-[NRKReminderStore enumerateReminderListsUsingBlock:]
v32@?0@"NRKReminderList"8Q16^B24
-[NRKReminderStore reminderListByIdentifier:]
-[NRKReminderStore reminderListByIndex:]
-[NRKReminderStore commitReminder:completion:]
-[NRKReminderStore simpleCommitReminder:commitImmediately:error:]
-[NRKReminderStore triggerOnceWhenInitialDataLoaded:registerTriggeredBlock:]
-[NRKReminderStore _initialSetup]
-[NRKReminderStore handleEventStoreChangedNotification:]
-[NRKReminderStore reloadForReason:completion:]
v16@?0@"NRKReloadShuttle"8
-[NRKReminderStore _fetchReminderLists:]
-[NRKReminderStore _fetchReminderLists:]_block_invoke
v32@?0@"EKCalendar"8Q16^B24
-[NRKReminderStore _fetchScheduledList:]
-[NRKReminderStore _fetchScheduledList:]_block_invoke
-[NRKReminderStore _fetchReminderListWithPredicate:dispatchGroup:EKCalendar:activeReferenceCounter:completionBlock:]
q24@?0@8@16
v32@?0@"EKReminder"8Q16^B24
-[NRKReminderStore _setNewListsFromShuttle:]_block_invoke
v16@?0Q8
v32@?0@"NRKReminder"8Q16^B24
v24@?0@"NRKReminder"8@"NSError"16
 parentIndex = %lu listParent = 0x%x, storeParent = 0x%x, displayOrder = %d
+[NRKWriteQueue sharedInstance]_block_invoke
-[NRKWriteQueue _enqueue:]
-[NRKWriteQueue doChangeCommit:withDelay:]
-[NRKWriteQueue _addNewChangeRequest:]
-[NRKWriteQueue _removeChangeRequestForID:]
-[NRKWriteQueue _commitAllWrites]
v32@?0@"NRKChangeRequest"8Q16^B24
-[NRKWriteQueue reconnectRequestsToReminders:]_block_invoke
v32@?0@"NSString"8@"NRKChangeRequest"16^B24
-[NRKWriteQueue _incrementProcessAssertion]
nanoreminderkit writing
-[NRKWriteQueue _decrementProcessAssertion]
NREMLogForCategory
/Library/Caches/com.apple.xbs/Sources/NanoReminders_Sim/NanoReminders-150/NanoReminderKit/NanoRemindersLogging.m
category < NREMLoggingCategoryCount
NanoReminders
NanoRemindersApplication
NanoRemindersFramework
NanoRemindersComplication
com.apple.nanoreminders
NRKSyntheticDailyScheduledReminderListID
SCHEDULED_TEXT
NanoReminderKit_localizable
 displayOrder = %d
v16@?0@"NSError"8
-[NRKReminderList updateForCurrentTime]
-[NRKReminderList setRemindersWithChangedCompletedStates:]
-[NRKReminderList adjustListForChangedRemindersUnlocked:]_block_invoke
v24@?0@"NSMutableArray"8@"NSMutableArray"16
-[NRKReminderList produceReminderArraysForAdjustment:withCompletion:]
-[NRKReminderList produceReminderArraysForAdjustment:withCompletion:]_block_invoke
v32@?0@"NSString"8@"NRKCompletedChangedState"16^B24
-[NRKReminderList _fixupListChangedCompletedStateForRecurringCompletions]_block_invoke
-[NRKReminderList moveReminder:fromUncompletedToCompleted:uncompletedArray:completedArray:forChangedState:]
-[NRKReminderList insertReminderByDisplayOrder:intoArray:withOverrideDisplayOrder:]
-[NRKReminderList insertReminderByDisplayOrder:intoArray:withOverrideDisplayOrder:]_block_invoke
-[NRKReminderList insertReminderByChronologicalOrder:intoArray:usingDate:sortOrder:andDueOrCompletionDate:]
-[NRKReminderList insertReminderByChronologicalOrder:intoArray:usingDate:sortOrder:andDueOrCompletionDate:]_block_invoke
v24@?0@"NRKReminderList"8@"NSError"16
B32@?0@"NRKReminder"8Q16^B24
-[NRKScheduledRemindersList initWithListId:storeParent:]
-[NRKScheduledRemindersList initWithUncompletedReminderList:completedList:listId:storeParent:]
-[NRKScheduledRemindersList enumerateDaysUsingBlock:]
v32@?0@"NRKReminderDay"8Q16^B24
-[NRKScheduledRemindersList enumerateRemindersUsingBlock:]
-[NRKScheduledRemindersList dayByIndex:]
--- BEGIN description NRKScheduledRemindersList
earlierTodayIndex [%ld]
todayIndex [%ld]
Day at idx %u: 
Reminder at idx %u: 
--- END description NRKScheduledRemindersList
-[NRKScheduledRemindersList indexForDate:]
-[NRKScheduledRemindersList reminderListForDayByIndex:]
-[NRKScheduledRemindersList getMutableRemindersWithCompletedState:]
-[NRKScheduledRemindersList adjustListForChangedRemindersUnlocked:]_block_invoke
-[NRKScheduledRemindersList moveReminder:fromUncompletedToCompleted:uncompletedArray:completedArray:forChangedState:]
-[NRKScheduledRemindersList _setupDaysArrayFromNRKReminderListsUncompleted:andCompletedList:]
v24@?0@"NSMutableArray"8q16
-[NRKScheduledRemindersList _setupDaysArrayFromCompletedNRKReminderList:]
-[NRKScheduledRemindersList _setupDaysArrayFromUncompletedNRKReminderList:completionBlock:]
--- BEGIN description NRKReminderDay
date [%@]
Number of reminders [%lu]
--- END description NRKReminderDay
-[NRKChangeRequest applyChangeToReminder]
-[NRKChangeRequest cleanupReminderState]
-[NRKChangeRequest completeClient]
%s: Adding completion block: %@
%s: removing completion block: %@
%s: Running completion block: %@
%s: Erasing all completion blocks as they have run.
[%s]First instance
[%s] returning reminderList: %@
Initial data load reset the registered trigger will call block in a moment
Initial data load called trigger
saving reminder failed error[%@]
[%s] Initial data load already complete. called trigger
[%s] Initial data load incomplete. registering trigger
Initial data load trigger just cancelled
[%s] Request reload of datastore for: %@
[%s]Enter
[%s]fetchActiveCounter not unique abandoning this update for the next [1]
[%s]Number of reminder lists to load: %u
[%s]fetchActiveCounter not unique abandoning this update for the next [2]
[%s]Loading reminder for list: %@
[%s]Found a list with a nil or empty identifier with name [%@]
[%s]
[%s]fetchActiveCounter not unique abandoning this update for the next [4]
[%s]No reminder lists found in database.
[%s]Enter about to enqueue reload of scheduled list
[%s]we have not been preempted so grabbing days list...
[%s]we have been superseded so skipped grabbing scheduled list...
[%s]enter
eKReminders [%@]
This reminder had a nil reminderId. parent listid[%@] index[%lu]
returning reminder list id [%@], uncompleted count [%u], completed count [%u]
[%s]performBlockWhileLockedUntilNoCount block with refcount [%lu]. Stashing list for later
[%s]performBlockWhileLockedUntilNoCount block with refcount [%lu]. self.numReminderLists [%lu]
The list dictionary does not contain list of id [%@] so dropping!!. here is the dictionary [%@]
[%s] Instantiating single instance of NRKWriteQueue
[%s] Adding request [%{public}@] to queue
[%s] dropping back to back changes that cancel each other
[%s] back to back changes that cancel each other but one is in flight
[%s] back to back writes of the same thing
[%s] back to back writes of the same thing but one is in flight!!
[%s] adding new request id [%{public}@] to main list
[%s] overriding write Q requst id [%{public}@] with newer one
[%s] removing change request from writequeue id [%{public}@]
[%s] Committing all [%lu] writes to database
[%s] error commiting changed reminder in database. error[%{public}@]
[%s] Successfully commited change so clearing our requests
[%s] reconnected change request to reminder ID [%{public}@]
[%s] Change request can't reconnect so deleting this change (losing it) id[%{public}@]
[%s] <------ Taking process assertion
[%s] ------> Releasing process assertion
[%s] enter noop will be removed soon
[%s] setting remindersWithChangedCompletedStates [%@]
[%s] adjusting list
[%s] applying Adjustment to completed and uncompleted
[%s] hiding reminder[%@]
[%s] restoring the completed and uncompleted arrays to what they default to
[%s] reinserting reminder[%@]
[%s] first time reminder about to set up as hidden[%@], objectID[%@]
[%s] swapped reminder [%@]
[%s] Moving reminder from uncompleted to completed array
[%s] Moving reminder from completed to uncompleted array
[%s]  id [%{public}@]
[%s]  reminder.displayOrder [%{public}lu] currentReminder.displayOrder [%{public}lu]
[%s]  already in destination array!!
[%s] id [%{public}@] date[%{public}@] sortOrder[%{public}li], compareDueDate[%{public}i]
[%s] comparing item id [%{public}@] date[%{public}@]
[%s] inserting item here index [%{public}lu]
[%s] ...
[%s] returning reminder day: %@
[%s] enter
[%s] enter state [%d]
[%s] enter completedList count[%lu]
[%s] daylist count[%lu]
[%s] enter uncompletedList count[%lu]
[%s] one of targetReminder[0x%lx], changedItem[0x%lx] or changeApplySelector[0x%x] is nil
[%s] Updating state and clear change request from client reminder, [%{public}@]
[%s] Notify client that their change is virtually done and in cache (but not yet committed to disk), [%{public}@]
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
NRKFetchCompletionBlockManager
NRKActivityRecipe
NRKReloadShuttle
NRKReminderURL
NRKReminderStore
NRKReminder
ExclamationMarks
NRKWriteQueue
NRKGateKeeperReferenceCounter
NRKReminderList
NRKCompletedChangedState
NSCopying
NRKScheduledRemindersList
NRKReminderDay
NRKChangeRequest
init
lock
setObject:forKey:
unlock
removeObjectForKey:
enumerateKeysAndObjectsUsingBlock:
removeAllObjects
sharedInstance
addCompletionBlock:completion:
removeCompletionBlockNamed:
runCompletionBlocks
.cxx_destruct
_completionBlockDictionary
_lock
UTF8String
setExecutionQueue:
_reset
executionQueue
dealloc
scriptError
setScriptError:
setAwaitSemaphore:
setAwaitTest:
awaitSemaphore
errorWithDomain:code:userInfo:
_busyCheckForDisplayLink:
displayLinkWithTarget:selector:
mainRunLoop
addToRunLoop:forMode:
invalidate
copy
defaultCenter
postNotificationName:object:
awaitTest
initWithName:
addBlockStep:
addTriggeredWaitStep:withTimeout:timeoutBlock:passingTest:
addFixedWaitIntervalStep:
addDisplayLinkPollWithTimeoutStep:pollingWith:
runWithCompletionBlock:
_executionQueue
_scriptError
_awaitSemaphore
_awaitTest
T@"NSObject<OS_dispatch_queue>",&,V_executionQueue
T@"NSError",&,V_scriptError
T@"NSObject<OS_dispatch_semaphore>",&,V_awaitSemaphore
T@?,C,N,V_awaitTest
isReloadCompleted
globalActiveFetchCounter
decrement
isUniqueCounter
increment
setItem:onOldItem:withItemID:andSetterBlock:
numberWithInteger:
containsObject:
addObject:
count
initWithFetchCounter:andLoadOnlySingleItem:withCompletion:
isSuperseded
setLoadPrimacy
setScheduledList:
setReminderListArray:
setReminderListsDict:
scheduledList
reminderListArray
reminderListsDict
isCacheConnected
setCacheConnected:
setIsSuperseded:
expectSingleItem
setExpectSingleItem:
setGlobalActiveFetchCounter:
setLock:
completion
setCompletion:
readyItemsSet
setReadyItemsSet:
_cacheConnected
_isSuperseded
_expectSingleItem
_scheduledList
_reminderListArray
_reminderListsDict
_globalActiveFetchCounter
_completion
_readyItemsSet
TB,N,V_isSuperseded
TB,R,N
TB,N,V_expectSingleItem
T@"NRKGateKeeperReferenceCounter",&,N,V_globalActiveFetchCounter
T@"NSLock",&,N,V_lock
T@?,C,N,V_completion
T@"NSMutableSet",&,N,V_readyItemsSet
T@"NRKReminderList",&,N,V_scheduledList
T@"NSArray",&,N,V_reminderListArray
T@"NSMutableDictionary",&,N,V_reminderListsDict
cacheConnected
TB,N,GisCacheConnected,V_cacheConnected
initWithReminderId:inListId:
reminderId
listId
scheme
isEqualToString:
host
componentsWithURL:resolvingAgainstBaseURL:
predicateWithFormat:
queryItems
filteredArrayUsingPredicate:
firstObject
value
stringWithFormat:
componentsWithString:
setQuery:
string
initWithReminder:inList:
initWithURL:
setReminderId:
setListId:
setUrl:
_reminderId
_listId
_url
T@"NSString",&,N,V_reminderId
T@"NSString",&,N,V_listId
T@"NSString",&,N,V_url
sharedInstanceWithAutoLoadHint:
initWithAutoLoadHint:
setAutoLoadJustScheduledList:
array
setReminderLists:
setFetchIds:
setEventKitStore:
setFetchActiveCounter:
setClientActiveUseCounter:
setRemindersByListId:
setFetchDispatchQ:
authorizationStatusForEntityType:
_initialSetup
eventKitStore
requestAccessToEntityType:completion:
_fetchReminderData
initWithLeadingEdgeDelay:coalescingDelay:action:
setSignalCoalescer:
fetchDispatchQ
signalCoalescer
setQueue:
handleEventStoreChangedNotification:
addObserver:selector:name:object:
removeObserver:
clientActiveUseCounter
reminderLists
enumerateObjectsUsingBlock:
eKCalendar
removeCalendar:commit:error:
commit:
remindersByListId
objectForKey:
numReminderLists
objectAtIndexedSubscript:
calendarItemWithIdentifier:
calendar
calendarIdentifier
defaultCalendarForNewReminders
title
initialDataLoadedEventBlock
initialDataLoadedEventCallerToken
setInitialDataLoadedEventCallerToken:
setInitialDataLoadedEventBlock:
simpleCommitReminder:commitImmediately:error:
eKReminder
saveReminder:commit:error:
removeReminder:commit:error:
setEKReminder:
saveCalendar:commit:error:
isDataLoaded
signal
_fetchReminderData:fetchCompletionBlock:
fetchActiveCounter
autoLoadJustScheduledList
_setNewListsFromShuttle:
_fetchScheduledList:
_fetchReminderLists:
readWriteCalendarsForEntityType:
dictionary
length
arrayWithObject:
_propertySetForPreload
predicateForPreloadedIncompleteRemindersWithDueDate:calendars:sortOrder:preloadProperties:
remindersMatchingPredicate:
_sortEKReminders:
addObjectsFromArray:
predicateForPreloadedCompletedRemindersWithDueDate:calendars:sortOrder:preloadProperties:
_createNRKReminderListWithEKReminders:eKCalendar:listId:enumerateOptions:
setFirstCompletedIndex:
_createNewReminderListsFromDict:calendars:
initWithUncompletedReminderList:completedList:listId:storeParent:
_sortEKCalendars:
_createReminderListArrayWithEKCalendars:andListDictionary:
_updateListItemsWithIndeces:
setParentIndex:
mutableCopy
displayOrder
compareForSortByDisplayOrder:obj1Title:obj2DisplayOrder:obj2Title:
sortWithOptions:usingComparator:
localizedCompare:
initWithEKReminder:
enumerateObjectsWithOptions:usingBlock:
initWithReminderArray:storeParent:eKCalendar:listId:
uncompletedCount
completedCount
waitingReloadShuttle
setWaitingReloadShuttle:
_reconnectWriteCacheToNewDatabase:
_applyUIListAdjustments:
addEntriesFromDictionary:
initWithListId:storeParent:
setNumReminderLists:
setDataLoaded:
performBlockWhileLockedUntilNoCount:
countByEnumeratingWithState:objects:count:
objectForKeyedSubscript:
pendingWrites
reminderArray
reconnectRequestsToReminders:
getRemindersWithChangedCompletedStates
setRemindersWithChangedCompletedStates:
adjustListForChangedRemindersUnlocked:
setWithObjects:
enumerateReminderListsUsingBlock:
deleteReminderList:completionBlock:
commitAllChangesWithCompletion:
simpleCommitAllChanges:
reminderListByIdentifier:
reminderListByIndex:
reminderListIdForReminderId:
defaultListNameForNewReminders
commitReminder:completion:
deleteReminder:commitImmediate:completionBlock:
commitReminderList:completion:
startLoadTimingTestWithCompletion:
triggerOnceWhenInitialDataLoaded:registerTriggeredBlock:
cancelTriggerOnInitialDataLoaded
reloadForReason:completion:
abandonReloadForReason:
_fetchReminderListWithPredicate:dispatchGroup:EKCalendar:activeReferenceCounter:completionBlock:
_processFreshEKReminderList:calendar:remindersById:
numScheduledReminders
setNumScheduledReminders:
uncompletedReminderListFilterTimeDelta
setUncompletedReminderListFilterTimeDelta:
fetchIds
loadTimingTestBlock
setLoadTimingTestBlock:
_dataLoaded
_autoLoadJustScheduledList
_numScheduledReminders
_numReminderLists
_uncompletedReminderListFilterTimeDelta
_reminderLists
_remindersByListId
_fetchIds
_eventKitStore
_fetchActiveCounter
_waitingReloadShuttle
_loadTimingTestBlock
_initialDataLoadedEventCallerToken
_initialDataLoadedEventBlock
_signalCoalescer
_clientActiveUseCounter
_fetchDispatchQ
dataLoaded
TB,N,GisDataLoaded,V_dataLoaded
TQ,N,V_numScheduledReminders
TQ,N,V_numReminderLists
T@"NSMutableArray",&,N,V_reminderLists
T@"NSMutableDictionary",&,N,V_remindersByListId
T@"NSMutableSet",&,N,V_fetchIds
T@"EKEventStore",&,N,V_eventKitStore
T@"NRKGateKeeperReferenceCounter",&,N,V_fetchActiveCounter
T@"NRKReloadShuttle",&,N,V_waitingReloadShuttle
TB,N,V_autoLoadJustScheduledList
T@?,C,N,V_loadTimingTestBlock
T@,&,N,V_initialDataLoadedEventCallerToken
T@?,C,N,V_initialDataLoadedEventBlock
T@"NEKSignalCoalescer",&,N,V_signalCoalescer
T@"NRKGateKeeperReferenceCounter",&,N,V_clientActiveUseCounter
T@"NSObject<OS_dispatch_queue>",&,N,V_fetchDispatchQ
TQ,N,V_uncompletedReminderListFilterTimeDelta
T@"NSString",R,N
calendarItemIdentifier
startDateComponents
storeParent
setStartDateComponents:
dueDateComponents
changedItem
boolValue
isCompleted
completionDate
priority
notes
hasAlarms
alarms
bestDisplayAlarm
hasRecurrenceRules
recurrenceRules
listParent
numberWithBool:
applyCompletedChange:
compareCompletedChange:toChange:
initWithReminder:changeType:changeSelector:changeComparisonSelector:changedItem:callerCompletion:
doChangeCommit:withDelay:
rollback
setCompleted:
description
parentIndex
appendString:
CGColor
initWithCGColor:
setStartDateComponents:commitImmediate:withCompletion:
isCompletedInDatabase
setCompleted:commitImmediate:withCompletion:
isEqual:
setChangeRequest:
removeChangeRequest:
parentListColor
clientLinkage
setClientLinkage:
setListParent:
setDisplayOrder:
setParentListColor:
changeRequest
_clientLinkage
_parentIndex
_listParent
_eKReminder
_displayOrder
_parentListColor
_changeRequest
T@"NRKReminderList",W,N,V_listParent
T@"EKReminder",&,N,V_eKReminder
TQ,N,V_parentIndex
TQ,N,V_displayOrder
T@"NRKReminderStore",R,N
T@"UIColor",&,N,V_parentListColor
T@"NRKChangeRequest",&,N,V_changeRequest
T@,&,N,V_clientLinkage
T@"NSDateComponents",R,N
T@"NSArray",R,N
T@"EKAlarm",R,N
completed
TB,R,N,GisCompleted
T@"NSDate",R,N
TQ,R,N
numberOfExclamationMarksForPriority:
segmentedControlIndexForPriority:
numberOfExclamationMarksForPriority
segmentedControlIndexForPriority
targetReminderId
_incrementProcessAssertion
_commitAllWrites
targetReminder
compareChange:toChange:
isInterruptableState
_removeChangeRequestForID:
completeClient
cleanupReminderState
_decrementProcessAssertion
_addNewChangeRequest:
isWriteQueueReadyState
setState:
_enqueue:
removeObject:
applyChangeToReminder
localizedDescription
setTargetReminder:
processInfo
processIdentifier
initWithPID:flags:reason:name:withHandler:
_waitingRequests
_commitThreshold
_currentDelayBlock
_allChangeRequests
_queueLock
_processAssertion
TB,R
incrementWithProcessAssertion
isUnusedCounter
counter
setCounter:
processAssertion
setProcessAssertion:
completionBlocks
setCompletionBlocks:
_counter
_completionBlocks
TQ,N,V_counter
T@"BKSProcessAssertion",&,N,V_processAssertion
T@"NSMutableArray",&,N,V_completionBlocks
_fixupRemindersParentRefs
isScheduledReminderList
systemPinkColor
bundleForClass:
_getLocalBundle
localizedStringForKey:value:table:
arrayWithArray:
setReminderArray:
setCGColor:
_setValueUsingBlock:commitImmediate:withCompletion:
getMutableRemindersWithCompletedState:
initWithArray:
subarrayWithRange:
initWithDictionary:copyItems:
initWithReminderId:reminderCompleted:
setCompletionDate:
setDueDateComponents:
setRecurringReminderState:
setListAdjustedForChangedReminders:
produceReminderArraysForAdjustment:withCompletion:
isListAdjustedForChangedReminders
_fixupListChangedCompletedStateForRecurringCompletions
ungatedReminderByIdentifier:
reminderCompleted
recurringReminderState
_populateReminderArraysUncompleted:completed:
moveReminder:fromUncompletedToCompleted:uncompletedArray:completedArray:forChangedState:
_findOutOfOrderRemindersFromUncompleted:andCompleted:
insertReminderByDisplayOrder:intoArray:withOverrideDisplayOrder:
objectID
ungatedReminderParentObjectID:andDueDate:
setOverrideDisplayOrder:
insertReminderByChronologicalOrder:intoArray:usingDate:sortOrder:andDueOrCompletionDate:
overrideDisplayOrder
insertObject:atIndex:
dayDateFromComponents:
findFakeCompletionDateForReminder:
compare:
currentCalendar
dateFromComponents:
startOfDayForDate:
indexOfObjectPassingTest:
parentID
isEqualToDate:
initWithStoreParent:listId:
copyListColor
enumerateRemindersUsingBlock:
reminderByIdentifier:
deleteReminder:completionBlock:
setListColor:commitImmediate:withCompletion:
deleteAllRemindersWithCompletion:
reminderByIndex:
updateForCurrentTime
getRemindersWithCompletedState:
stashCurrentReminderCompletedStateForIminentStateChange:onReminder:
adjustListForChangedReminders:
setIsScheduledReminderList:
firstCompletedIndex
completedChangedRemindersStates
setCompletedChangedRemindersStates:
hiddenReminderArray
setHiddenReminderArray:
setStoreParent:
setEKCalendar:
setCount:
_remindersWithChangedCompletedStates
_isScheduledReminderList
_listAdjustedForChangedReminders
_firstCompletedIndex
_completedChangedRemindersStates
_reminderArray
_hiddenReminderArray
_storeParent
_eKCalendar
_count
T@"NSArray",&,N,V_reminderArray
T@"NSMutableArray",&,N,V_hiddenReminderArray
T@"NRKReminderStore",W,N,V_storeParent
T@"EKCalendar",&,N,V_eKCalendar
TB,N,V_isScheduledReminderList
TQ,N,V_count
Tq,N,V_firstCompletedIndex
listAdjustedForChangedReminders
TB,N,GisListAdjustedForChangedReminders,V_listAdjustedForChangedReminders
T@"NSMutableDictionary",C,V_completedChangedRemindersStates
allocWithZone:
copyWithZone:
setReminderCompleted:
_reminderCompleted
_overrideDisplayOrder
_completionDate
_recurringReminderState
_dueDateComponents
TB,N,V_reminderCompleted
T@"NSDate",&,N,V_completionDate
TQ,N,V_recurringReminderState
Ti,N,V_overrideDisplayOrder
T@"NSDateComponents",&,N,V_dueDateComponents
_setupDaysArrayFromNRKReminderListsUncompleted:andCompletedList:
days
reminderList
earlierTodayIndex
appendFormat:
todayIndex
enumerateDaysUsingBlock:
setHour:
setMinute:
setSecond:
compareDayDate:
section
reminderListForDayByIndex:
absoluteDate
_setupDaysArrayFromCompletedNRKReminderList:
setTodayIndex:
setDays:
_updateCompletedCount
_updateUncompletedCount
_setupDaysArrayFromUncompletedNRKReminderList:completionBlock:
setEarlierTodayIndex:
_todayDate
date
setReminderList:
initWithDate:parentList:
_dateRelativeToToday:
autoupdatingCurrentCalendar
rangeOfUnit:startDate:interval:forDate:
timeIntervalSinceReferenceDate
dayCount
dayByIndex:
indexForDate:
reminderAtIndexPath:
getFirstReminderDueAfterDate:
_dateComponentsRelativeToToday:
_uncompletedCount
_completedCount
_earlierTodayIndex
_todayIndex
_days
T@"NSArray",&,N,V_days
Tq,N,V_earlierTodayIndex
Tq,N,V_todayIndex
compareDateOfDay:
setDate:
index
setIndex:
parentList
setParentList:
_date
_index
_reminderList
_parentList
T@"NRKScheduledRemindersList",W,N,V_parentList
T@"NSDate",&,N,V_date
TQ,N,V_index
T@"NRKReminderList",&,N,V_reminderList
methodForSelector:
completionBlock
isCommitableState
setChangedItem:
state
requestType
setRequestType:
changeApplySelector
setChangeApplySelector:
changeCompareSelector
setChangeCompareSelector:
_targetReminder
_targetReminderId
_completionBlock
_changedItem
_state
_requestType
_changeApplySelector
_changeCompareSelector
T:,N,V_changeApplySelector
T:,N,V_changeCompareSelector
T@"NRKReminder",W,N,V_targetReminder
T@"NSString",R,N,V_targetReminderId
T@?,R,C,N,V_completionBlock
T@"NSObject",&,N,V_changedItem
Tq,N,V_state
Tq,N,V_requestType
interruptableState
TB,R,N,GisInterruptableState
writeQueueReadyState
TB,R,N,GisWriteQueueReadyState
commitableState
TB,R,N,GisCommitableState
@16@0:8
v32@0:8@16@?24
v24@0:8@16
v16@0:8
@"NSMutableDictionary"
@"NSLock"
@24@0:8@16
v24@0:8@?16
v48@0:8@?16d24@?32@?40
v24@0:8d16
v32@0:8d16@?24
@?16@0:8
@"NSObject<OS_dispatch_queue>"
@"NSError"
@"NSObject<OS_dispatch_semaphore>"
@36@0:8@16B24@?28
B16@0:8
v48@0:8@16@24q32@?40
v20@0:8B16
@"NRKReminderList"
@"NSArray"
@"NRKGateKeeperReferenceCounter"
@"NSMutableSet"
@32@0:8@16@24
@"NSString"
@20@0:8B16
q40@0:8i16@20i28@32
B24@0:8^@16
@24@0:8Q16
B36@0:8@16B24^@28
v36@0:8@16B24@?28
@56@0:8@16@24@32@40@?48
v40@0:8@16@24@32
@48@0:8@16@24@32Q40
Q16@0:8
v24@0:8Q16
@"NSMutableArray"
@"EKEventStore"
@"NRKReloadShuttle"
@"NEKSignalCoalescer"
v32@0:8B16B20@?24
B24@0:8@16
q32@0:8@16@24
@"EKReminder"
@"UIColor"
@"NRKChangeRequest"
q16@0:8
q24@0:8q16
v28@0:8@16B24
@"BKSProcessAssertion"
@48@0:8@16@24@32@40
^{CGColor=}16@0:8
v36@0:8^{CGColor=}16B24@?28
v28@0:8B16@20
v32@0:8^@16^@24
v28@0:8B16@?20
v52@0:8@16B24@28@36@44
v36@0:8@16@24i32
v52@0:8@16@24@32q40B48
v36@0:8@?16B24@?28
v24@0:8q16
@"NRKReminderStore"
@"EKCalendar"
@24@0:8^{_NSZone=}16
@28@0:8@16B24
i16@0:8
v20@0:8i16
@"NSDate"
@"NSDateComponents"
Q24@0:8@16
v32@0:8@16@24
q24@0:8@16
@"NRKScheduledRemindersList"
@64@0:8@16q24:32:40@48@?56
:16@0:8
v24@0:8:16
@"NRKReminder"
@"NSObject"
