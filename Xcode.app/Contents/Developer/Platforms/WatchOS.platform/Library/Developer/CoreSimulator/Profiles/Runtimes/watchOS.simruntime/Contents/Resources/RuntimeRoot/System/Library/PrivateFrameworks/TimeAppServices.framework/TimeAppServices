@(#)PROGRAM:TimeAppServices  PROJECT:NanoTimer-1
NTSAlarmModelFiringAlarmsDidChange
NTSTimerModelFiringTimersDidChange
v8@?0
<%@<%@>:%p>
alertID
v16@?0@"<NTSAlertable>"8
q24@?0@"NTSAlert"8@"NTSAlert"16
SNOOZE_BUTTON
v12@?0B8
v32@?0@"UNNotification"8@"<NTSAlertProvider>"16@?<v@?B>24
REPEAT_BUTTON
STOP_BUTTON
com.apple.NanoAlarm
com.apple.NanoStopwatch
com.apple.TimeAppServices.stopwatchclient
com.apple.stopwatchserverqueue
TimerState
StartTotalTime
ElapsedTotalTime
StartLapTime
ElapsedLapTime
Laps
v16@?0@"CSLSSnapshotContext"8
com.apple.alarmtimersoundqueue
None
Alarm Id: %@ Nightstand: %@ AlertConfiguration: %@
Timer Id: %@
Unknown alert type
q24@?0@"NTSAlarmTimerAlert"8@"NTSAlarmTimerAlert"16
@"NSString"16@?0@"NTSAlarmTimerAlert"8
com.apple.NanoClockAlertProvider
NCAPSoundTimeout
v24@?0q8@"NSError"16
<%@:%p content: %@ nightstand: %d alertConfiguration: %@>
com.apple.NanoTimeKit
Localizable_Eucalyptus
TODAY_ONLY
TODAY
TOMORROW_ONLY
TOMORROW
EEEE
%@_ONLY
bed.double.fill
SLEEP
v24@?0@"BSProcessHandle"8@"NSError"16
NO_ALARM
SKIPPED
com.apple.private.NanoTimer
LastMainMenuGravity
LastTimerType
LastTimerDuration
LastTimerAppInputCustomDuration
TimerRecentCustomDurations
com.apple.nanotimer.recent.added
customizedTimerDuration
NTSTimerUserPrefsRecentsChanged
v32@?0@"NSNumber"8Q16^B24
AlertPowerAssertionTimeout
%@{alert date = %@, title = %@}
NTSStopwatchModelStateChangedNotification
NTSStopwatchModelLapAddedNotification
NTSStopwatchModelReloadNotification
NTSStopwatchModelPreparedForPPT
v16@?0@"NSError"8
v56@?0q8d16d24d32d40@"NSArray"48
<nil>
v24@?0@"MTTimer"8@"NSError"16
v24@?0@"MTAlarm"8@"NSError"16
com.apple.TimeAppServices.stopwatchserver
NTALogForCategory
NTALogging.m
category < NTALoggingCategoryCount
NanoTimeApps
TimeAppServices
TimeAppServicesSound
NanoTimer
NanoAlarm
NanoStopwatch
NanoWorldClock
NanoClockAlertProvider
NanoClockActivateProvider
NanoTimerSiri
Tool
SessionProvider
Complication
SunriseComplication
WorldClockComplication
com.apple.nanotimeapps
%{public}@ Received notification about removed alerts: %{public}@
%{public}@ firingAlerts after add: %{public}@
%{public}@ firingAlerts after remove: %{public}@
%{public}@ Clearing notification for %@
%{public}@ Performing snooze for %@
%{public}@ Notification didn't have a snooze action.
%{public}@ Alert not snoozeable.
%{public}@ Performing repeat for %@
%{public}@ Notification didn't have a repeat action.
%{public}@ Alert not repeatable.
%{public}@ Performing dismiss for %@
%{public}@ Notification didn't have a dismiss action.
%{public}@ Removing notification %@ for firing alert
%{public}@ No notification found
%{public}@ Alert not found
%{public}@ Alert not firing
%{public}@ Orphaned local notification notification detected: %@.  Removing all old notifications
%{public}@ Handling wantsAlertForNotification (wantsAlert? %d) for notification: %@ Notification ID: %{public}@
%{public}@ Handling addNotification for notification: %@ Notification ID: %{public}@
%{public}@ adding %{public}@ Notification ID: %{public}@
%{public}@ no alert made for notification: %@
%{public}@ Ignoring notification with category: %{public}@  Notification: %@
%{public}@ Handling replacement of old publisher Notificaton ID: %{public}@, old notification: %@
%{public}@ old notification is removed. Adding new publisher Notification ID: %{public}@, new notification: %@ 
%{public}@ Ignoring notification replacement with category: %{public}@  Notification: %@
%{public}@ Handling removeNotification for notification: %@
%{public}@ Handling noteNotificationsInvalidated. Removing all firing alerts.
Stopwatch server is preparing to run
Stopwatch server is now running
Stopwatch server changed state. Flagged app for needing a new snapshot.
playSoundForAlarm called for %{public}@
playSoundForTimer called for %{public}@
stopSoundForAlarm called for %{public}@
stopSoundForTimer called for %{public}@
isPlayingSound: %{public}@
_playSoundForAlert - after add: alerts: [%{public}@]
_stopSoundForAlert - after remove: alerts: [%{public}@]
_queue_updatePlayingSound: Alert to play: %{public}@.  Playing alert: %{public}@
Alert sound timed out!
_queue_requestToneLibraryToStopSound: Telling ToneLibrary to stop playing sound for: %{public}@. TLAlert is %{public}@
_queue_stopPlayingSound: State is NoSession. Not doing anything as we are already stopped.
_queue_stopPlayingSound: State is NoSession, but playing alert is not nil.  Setting to nil. Alert: %{public}@
_queue_stopPlayingSound: State is SessionActive. Ending session. New state is NoSession.
_queue_stopPlayingSound: State is SoundPlaying. New state is PendingStop.
_queue_stopPlayingSound: State is PendingStop. Need to wait for ToneLibrary playback completion handler to be called.
_playbackCompletionHandler: Completion type: %{public}@. Error: %{public}@
_playbackCompletionHandler: New state is SessionActive.
_playbackCompletionHandler: State is already NoSession.
_queue_startSession: Error setting audio category: %{public}@
_queue_startSession: Error setting AVAudioSession active: %{public}@
_queue_requestToneLibraryToPlaySound: Telling tone library to play sound for %{public}@. TLAlert is %{public}@
_queue_startPlayingSound: State is NoSession. New state is: SoundPlaying. Starting session and playing sound.
_queue_startPlayingSound: State is NoSession. The alert timed out already so we are not playing sound.  New state is No Session.
_queue_startPlayingSound: State is SessionActive. New state is: SoundPlaying. Playing sound.
_queue_startPlayingSound: State is SessionActive. The alert timed out already so we are not playing sound.  New state is No SessionActive.
_queue_startPlayingSound: State is SoundPlaying. The new alert wants to play the same sound. New state is: SoundPlaying. New alert: %{public}@
_queue_startPlayingSound: State is SoundPlaying. The new alert wants to play a different sound. Need to stop old sound. New state is: PendingStop.
_queue_startPlayingSound: State is SoundPlaying. The same alert is playing so no change needed.  New state is SoundPlaying.
_queue_startPlayingSound: State is PendingStop. Need to wait for ToneLibrary playback completion handler to be called.
[Sound] is this sleep alarm? %{public}@. did user turn on sleep sensitive UI? %{public}@.
[Sound] set current wakeup alarm sound volume to %{public}f.
[Sound] MTAlarm.sound.soundVolume is nil. use system volume instead.
[Sound] regular alarm tone will be played.
rendering alarm title: today is %{public}@, wakeUp date is %{public}@ and is singleDayOverride? %{public}@
wake up day of the week is %@
failed to deep link to sleep app from %{public}@.
failed to retrieve current sleep schedule with error: %{public}@
sleep alarm status is set to %{public}ld
HKSPSleepScheduleOccurrence is not null but the associated wakeUpComponents is null.
Using an alert power assertion timeout of %{public}d
printing categoryID: %{public}@, allowSnooze: %{public}d
[Sound] Firing alert for notification %{public}@ has sound %{public}@
Alert date %{public}@ specified for notification with date: %{public}@ and request identifier: %{public}@
Notification with request identifier: %{public}@ has  date: %{public}@
Stopwatch model notified of stopwatch server interruption. If you see this while the server is running, make sure to include the proper entitlement.
Stopwatch model encountered error getting values from stopwatch server: %@
Stopwatch model seeded initial values from server
Stopwatch model done initializing
%{public}@ Start observing timer notifications for %{public}@
%{public}@ Stop observing timer notifications for %{public}@
%{public}@ Starting timer tick updates for handler: %p with token: %@
%{public}@ Stopping timer tick updates for handler: %p with token: %@
%{public}@ Timer request finished. Start pending request.
%{public}@ Will retry getting current timer. Retry attempt: %u
%{public}@ Performing retry attempt: %u to get current timer.
%{public}@ Performed %u attempts to get timer state.  All failed. Not retrying.
%{public}@ Clearing requestInProgress due to max failures reached.
%{public}@ Resetting retry count
%{public}@ Clearing requestInProgress due to successful request.
%{public}@ Request is in progress. Will wait to make subsequent request.
%{public}@ Setting requestInProgress
%{public}@ Current timer request started.
%{public}@ Next timer request finished.
%{public}@ Checking timer tick updater.  AppForegound: %@, NumHandlers: %u, Timer State: %@
%{public}@ Timer tick updater: Timer needed - creating display link for timer tick updates.
%{public}@ Timer tick updater: Timer not needed - deleting display link used for timer tick updates.
%{public}@ Error getting current timer from %{public}@: %{public}@
%{public}@ Performing checkin for app foregrounded.
%{public}@ Received %{public}@. Will check if timer ticks are needed.
%{public}@ Received %{public}@. Will perform checkin and check if timer ticks are needed.
%{public}@ Performing checkin.
%{public}@ checking for timer ticks in response to %{public}@.
NTSFiringAlertManager
NTSAlertHandler
NTSNotificationHandler
NSObject
NTSStopwatchServer
NSXPCListenerDelegate
NTSStopwatchTimer
NTSAlarmTimerAlertSoundController
NTSAlarmTimerAlert
NTSUtilities
NTSTimerUserPrefs
NTSAlert
NTSAlertablePrivate
NTSAlertable
MTAlarm
NTSStopwatchModel
NTSStopwatchClient
NTSTimerTimer
NTSAlarmSnoozeTimer
arrayWithObjects:count:
_initWithAlertableClass:changeNotificationName:removalNotificationName:supportedNotificationCategories:
init
copy
setWithArray:
defaultCenter
alertsRemoved:
addObserver:selector:name:object:
stringWithFormat:
removeObserver:
dealloc
userInfo
objectForKey:
valueForKey:
removeFiringAlert:
na_each:
count
_alertWithNotificationID:
_removeAlert:
_postChangeNotification
countByEnumeratingWithState:objects:count:
notification
request
identifier
isEqualToString:
addObject:
alert
firedDate
compare:
sortUsingComparator:
changeNotificationName
postNotificationName:object:
removeObject:
alertID
isEqual:
firstObject
notificationProviderDelegate
setWithObject:
alertProvider:requestClearNotifications:
firingAlerts
containsObject:
isSnoozeable
otherActionIdentifier
localizedUserNotificationStringForKey:arguments:
actionWithIdentifier:title:options:
_clearNotification:alertProvider:
alertProvider:requestsPerformAction:forNotification:completion:
clearNotificationForFiringAlert:withNotificationActionBlock:
isRepeatable
dismissActionIdentifier
isAlertFiring
_findAlertForAlertable:
alertProvider
sharedManager
cancelNotifications
sourceIdentifier
content
categoryIdentifier
length
_isOrphanedLocalNotificationNotification:
isNotificationForUs:
alertForNotification:withAlertProvider:
addAlert:
_removeOrphanedLocalNotificationNotification:alertProvider:
alertProvider:addNotification:
removeAlertWithNotificationID:
removeAllObjects
sharedAlarmManager
sharedTimerManager
class
self
performSelector:
performSelector:withObject:
performSelector:withObject:withObject:
isProxy
isKindOfClass:
isMemberOfClass:
conformsToProtocol:
respondsToSelector:
retain
release
autorelease
retainCount
zone
hash
superclass
description
debugDescription
TQ,R
T#,R
T@"NSString",R,C
alertProvider:wantsAlertForNotification:
alertProvider:addNotification:replaceNotification:
alertProvider:modifyNotification:
alertProvider:removeNotification:
noteNotificationsInvalidated
shouldShowAlert:
dismissFiringAlert:
repeatFiringAlert:
snoozeFiringAlert:
alertProviderDelegate
setAlertProviderDelegate:
numFiringAlerts
nextFiringAlert
alertableClass
setAlertableClass:
setChangeNotificationName:
alerts
setAlerts:
supportedNotificationCategories
setSupportedNotificationCategories:
.cxx_destruct
_alertableClass
_changeNotificationName
_alerts
_supportedNotificationCategories
T#,&,N,V_alertableClass
T@"NSString",C,N,V_changeNotificationName
T@"NSMutableOrderedSet",&,N,V_alerts
T@"NSSet",&,N,V_supportedNotificationCategories
Tq,R,N
T@"<NTSAlertable>",R,N
initWithMachServiceName:
setDelegate:
resume
doubleValue
valueForEntitlement:
boolValue
setRemoteObjectInterface:
setExportedInterface:
setExportedObject:
setInvalidationHandler:
currentConnection
_queue_updateClientsExcept:
sharedInstance
invalidSnapshotContext
setSnapshotContext:forBundleID:completion:
numberWithInteger:
numberWithDouble:
remoteObjectProxy
updateModelWithState:startTotalTime:elapsedTotalTime:startLapTime:elapsedLapTime:laps:
listener:shouldAcceptNewConnection:
saveState:startTotalTime:elapsedTotalTime:startLapTime:elapsedLapTime:laps:
getModelWithHandler:
_queue
_clientConnections
_state
_startTotalTime
_elapsedTotalTime
_startLapTime
_elapsedLapTime
_laps
_appBackgrounded:
_appForegrounded:
_modelStateChanged:
_modelReload:
sharedApplication
applicationState
numberWithUnsignedInteger:
_nextToken
setObject:forKeyedSubscript:
_updateTimer
removeObjectForKey:
sharedStopwatchModel
state
_tick:
displayLinkWithTarget:selector:
setPreferredFramesPerSecond:
mainRunLoop
addToRunLoop:forMode:
invalidate
_invokeHandlers
_invokeDigitalTimeUpdateHandlers
allValues
sharedStopwatchTimer
startUpdatesWithHandler:
startDigitalTimeUpdatesWithHandler:
stopUpdatesForToken:
_displayLink
_updateDigitalTimeThisTick
_handlers
_digitalTimeUpdateHandlers
_appInForeground
playSoundForAlarm:nightstand:
initWithAlarm:
setNightstand:
_logAlertDescription:
_playSoundForAlert:
initWithTimer:
stopSoundForAlarm:nightstand:
_stopSoundForAlert:
_hasAlertTimedOut:
_withAlertsLock:
fireDate
_soundTimeoutInterval
dateByAddingTimeInterval:
date
_timeOutDateForAlert:
_hasAlertTimedOut:withTimeOutDate:
type
alarmIDString
nightstand
alertConfiguration
timerIDString
isEqualToDate:
array
na_map:
_updatePlayingSound
standardUserDefaults
persistentDomainForName:
intValue
_queue_updatePlayingSound
hasSoundBeenInterrupted
_queue_stopPlayingSound
_queue_startPlayingSound:withTimeoutDate:
_queue_requestToneLibraryToStopSound
stop
setActive:withOptions:error:
setHasSoundBeenInterrupted:
setCategory:error:
setActive:error:
alertWithConfiguration:
_playbackCompletionHandler:error:
playWithCompletionHandler:
_timeout:
initWithFireDate:interval:target:selector:userInfo:repeats:
addTimer:forMode:
_queue_startSession
_queue_requestToneLibraryToPlaySound:
sharedAlertSoundController
playSoundForAlarm:
playSoundForTimer:
stopSoundForAlarm:
stopSoundForTimer:
isPlayingSound
_alertsLock
_playingAlert
_tlAlert
_timeoutTimer
_soundState
initWithType:
sharedMonitor
shouldHideForSensitivity:
isSleepAlarm
setTopic:
sound
toneIdentifier
setToneIdentifier:
soundVolume
floatValue
setAudioVolume:
audioVolume
_alertConfiguration
_nightstand
_hasSoundBeenInterrupted
_type
_fireDate
_content
TQ,R,N,V_type
T@"NSDate",R,N,V_fireDate
T@"TLAlertConfiguration",R,N
T@,R,N,V_content
TB,N,V_nightstand
TB,N,V_hasSoundBeenInterrupted
localizedStringForKey:value:table:
isDateInToday:
isDateInTomorrow:
setDateFormat:
currentLocale
setLocale:
stringFromDate:
uppercaseString
configurationWithScale:
systemImageNamed:withConfiguration:
systemGrayTextColor
imageWithTintColor:renderingMode:
setImage:
localizedUppercaseString
_preferredFontForTextStyle:variant:
dictionaryWithObjects:forKeys:count:
initWithString:attributes:
attributedStringWithAttachment:
mutableCopy
appendAttributedString:
setAlignment:
setLineBreakMode:
addAttribute:value:range:
serviceWithDefaultShellEndpoint
optionsWithDictionary:
openApplication:withOptions:completion:
occurrence
wakeUpComponents
hour
minute
sleepAlarmWithHour:minute:
alarmConfiguration
isEnabled
setEnabled:
isSingleDayOverride
wakeUpEvent
dueDate
setTitle:
bundleForClass:
numberWithFloat:
_updateCustomRecents:
setTimerLastType:
setTimerLastDuration:
setTimerLastCustomDuration:
recentCustomDurations
isEqualToNumber:
enumerateObjectsUsingBlock:
removeObjectAtIndex:
insertObject:atIndex:
initWithObjects:
allObjects
timerLastMainMenuGravity:
setTimerLastMainMenuGravity:
timerLastType:
timerLastDuration:
timerLastCustomDuration:
setDefaultsForStartedTimerWithType:duration:
defaultPresetDurations
resetTimerDefaults
_takePowerAssertion
displayTitle
_releasePowerAssertion
initWithAlertable:notification:alertProvider:
_assertionTimeout
setNotification:
setAlert:
_notification
_alert
_alertProvider
T@"<NTSAlertable>",&,N,V_alert
T@"UNNotification",&,N,V_notification
T@"<NTSAlertProvider>",R,W,N,V_alertProvider
mtTimer
T@"NSString",R,C,N
T@"NSDate",R,N
TB,R,N
mtAlarm
mtStringByRemovingNotificationPrefixes
initWithUUIDString:
initWithIdentifier:
_firedDateWithNotificationRequest:
setFiredDate:
objectForKeyedSubscript:
setAllowsSnooze:
allowsSnooze
setSleepAlarm:
repeats
body
mtSound
setSound:
setState:
setDismissedDate:
setDuration:
isFiring
initWithMachServiceName:options:
_pushToServer
setInterruptionHandler:
synchronousRemoteObjectProxyWithErrorHandler:
reloadState:startTotalTime:elapsedTotalTime:startLapTime:elapsedLapTime:laps:suppressNotification:
startTotalTime
elapsedTotalTime
startLapTime
elapsedLapTime
laps
setStartTotalTime:
setElapsedTotalTime:
setStartLapTime:
setElapsedLapTime:
setLaps:
setMinLapTime:
setMaxLapTime:
minLapTime
maxLapTime
currentLapTime
addLap:
currentTime
timeAdjustedForDigitalDisplay:
objectAtIndexedSubscript:
reset
start
elapsedDurationForFutureTime:
timeForElapsedDuration:
elapsedLapDurationForFutureTime:
timeForElapsedLapDuration:
adjustedDigitalTime
lapTime:
lastLapTime
timeUntilLastLap
lapsCount
avgLapTime
pptTestPrep
pptTestCleanup
_stopwatchServer
_minLapTime
_maxLapTime
Tq,N,V_state
Td,N,V_startTotalTime
Td,N,V_elapsedTotalTime
Td,N,V_startLapTime
Td,N,V_elapsedLapTime
Td,N,V_minLapTime
Td,N,V_maxLapTime
T@"NSMutableArray",&,N,V_laps
Td,R,N
getCurrentTimerSync
stopCurrentTimerSync
pauseCurrentTimerSync
resumeCurrentTimerSync
startCurrentTimerWithDurationSync:
_modelStateReset:
_withTimerLock:
removeObserver:name:object:
_startObserving
_stopObserving
_updateTimerForRetry:
_performPendingRequest
_performRetry
nextTimer
descriptionForState:
_endRequestWithError:
addCompletionBlock:
checkIn
name
sharedTimerTimer
startTimerUpdatesWithHandler:
stopTimerUpdatesForToken:
_timerManager
_isObserving
_timerLock
_updateErrorCount
_requestPending
_requestInProgress
setHandlers:
_backgrounded:
_foregrounded:
nextAlarm
isSnoozed
sharedAlarmSnoozeTimer
alarmManager
setAlarmManager:
displayLink
setDisplayLink:
handlers
nextToken
setNextToken:
inForeground
setInForeground:
_inForeground
_alarmManager
T@"MTAlarmManager",&,N,V_alarmManager
T@"CADisplayLink",&,N,V_displayLink
T@"NSMutableDictionary",&,N,V_handlers
TQ,N,V_nextToken
TB,N,V_inForeground
interfaceWithProtocol:
setWithObjects:
setClasses:forSelector:argumentIndex:ofReply:
@16@0:8
B24@0:8@16
#16@0:8
@24@0:8:16
@32@0:8:16@24
@40@0:8:16@24@32
B16@0:8
B24@0:8#16
B24@0:8:16
Vv16@0:8
Q16@0:8
^{_NSZone=}16@0:8
B24@0:8@"Protocol"16
@"NSString"16@0:8
B32@0:8@16@24
v32@0:8@16@24
v40@0:8@16@24@32
v16@0:8
B32@0:8@"<NTSAlertProvider>"16@"UNNotification"24
v32@0:8@"<NTSAlertProvider>"16@"UNNotification"24
v40@0:8@"<NTSAlertProvider>"16@"UNNotification"24@"UNNotification"32
v24@0:8@16
B24@0:8@"<NTSAlertable>"16
v24@0:8@"<NTSAlertable>"16
@48@0:8#16@24@32@40
q16@0:8
@24@0:8@16
v32@0:8@16@?24
v24@0:8#16
@"NSString"
@"NSMutableOrderedSet"
@"NSSet"
B32@0:8@"NSXPCListener"16@"NSXPCConnection"24
v64@0:8q16d24d32d40d48@56
v24@0:8@?16
@"NSObject<OS_dispatch_queue>"
@"NSMutableArray"
@"NSArray"
@24@0:8@?16
@"CADisplayLink"
@"NSMutableDictionary"
d16@0:8
v28@0:8@16B24
v32@0:8q16@24
{os_unfair_lock_s="_os_unfair_lock_opaque"I}
@"NTSAlarmTimerAlert"
@"TLAlert"
@"NSTimer"
v20@0:8B16
@"TLAlertConfiguration"
@"NSDate"
f24@0:8*16
v20@0:8f16
q24@0:8*16
v24@0:8q16
d24@0:8*16
v24@0:8d16
v32@0:8q16d24
@40@0:8@16@24@32
@"UNNotification"
@"<NTSAlertable>"
@"<NTSAlertProvider>"
@32@0:8@16@24
@"NSDate"16@0:8
@"NTSAlert"32@0:8@"UNNotification"16@"<NTSAlertProvider>"24
d24@0:8d16
v64@0:8q16d24d32d40d48@"NSArray"56
v68@0:8q16d24d32d40d48@56B64
d24@0:8Q16
@"NSXPCConnection"
@"MTTimerManager"
v24@0:8Q16
@"MTAlarmManager"
v24@0:8@?<v@?qdddd@"NSArray">16
