@(#)PROGRAM:ProactiveML  PROJECT:Suggestions-1115
hash
TQ,R
superclass
T#,R
description
T@"NSString",R,C
debugDescription
outputLabels
inputSequence
 %zu
hasTimestamp
TB,N
timestamp
TQ,N,V_timestamp
hasModelInfo
TB,R,N
modelInfo
T@"AWDProactiveModelFittingModelInfo",&,N,V_modelInfo
hasMinibatchStats
minibatchStats
T@"AWDProactiveModelFittingMinibatchStats",&,N,V_minibatchStats
hasEvaluationMetrics
evaluationMetrics
T@"AWDProactiveModelFittingEvalMetrics",&,N,V_evaluationMetrics
precisionAtKs
T@"NSMutableArray",&,N,V_precisionAtKs
precisionAtK
%@ %@
hasSparseFloatWeights
sparseFloatWeights
T@"AWDProactiveModelFittingSparseFloatVector",&,N,V_sparseFloatWeights
hasSparseQuantizedWeights
sparseQuantizedWeights
T@"AWDProactiveModelFittingQuantizedSparseVector",&,N,V_sparseQuantizedWeights
hasWeightsScaleFactor
weightsScaleFactor
Tf,N,V_weightsScaleFactor
hasWeightsL2norm
weightsL2norm
Tf,N,V_weightsL2norm
hasDenseQuantizedWeights
denseQuantizedWeights
T@"AWDProactiveModelFittingQuantizedDenseVector",&,N,V_denseQuantizedWeights
weights
T@"PMLModelWeights",&,N,V_weights
covariates
T@"PMLSparseMatrix",&,N,V_covariates
objective
T@"PMLModelRegressor",&,N,V_objective
intercept
TB,N,V_intercept
Invalid covariates, length: %tu but model weights length: %d
PMLGradientSolver.m
Covariates must have the same column-length as weights. Got covariates with %tu columns but weights of length %d
batchPredictionCalculator
predictionCalculator
gradientCalculator
Invalid parameter not satisfying: %@
hasSparseFloatFeatures
sparseFloatFeatures
T@"AWDProactiveModelFittingSparseFloatVector",&,N,V_sparseFloatFeatures
hasSparseQuantizedFeatures
sparseQuantizedFeatures
T@"AWDProactiveModelFittingQuantizedSparseVector",&,N,V_sparseQuantizedFeatures
hasFeaturesScaleFactor
featuresScaleFactor
Tf,N,V_featuresScaleFactor
hasFeaturesL2norm
featuresL2norm
Tf,N,V_featuresL2norm
indicesCount
TQ,R,N
indices
T^I,R,N
valuesCount
values
hasLength
length
TI,N,V_length
hasMinValue
minValue
Tf,N,V_minValue
hasBucketSize
bucketSize
Tf,N,V_bucketSize
idx (%tu) is out of range (%tu)
hasStats
stats
T@"AWDProactiveModelFittingMinibatchStats",&,N,V_stats
hasSparseFloatFeatureMatrix
sparseFloatFeatureMatrix
T@"AWDProactiveModelFittingSparseFloatMatrix",&,N,V_sparseFloatFeatureMatrix
hasSparseQuantizedFeatureMatrix
sparseQuantizedFeatureMatrix
T@"AWDProactiveModelFittingQuantizedSparseMatrix",&,N,V_sparseQuantizedFeatureMatrix
hasFeatureMatrixScaleFactor
featureMatrixScaleFactor
Tf,N,V_featureMatrixScaleFactor
hasFeatureMatrixL2norm
featureMatrixL2norm
Tf,N,V_featureMatrixL2norm
T^Q,R,N
T^f,R,N
TQ,N,V_length
columnIndicesCount
columnIndices
hasColumnLength
columnLength
TQ,N,V_columnLength
rowIndicesCount
rowIndices
hasRowLength
rowLength
TQ,N,V_rowLength
PMLImmutableLogisticRegressionModel.m
TI,N,V_columnLength
TI,N,V_rowLength
-[PMLModelWeights(PMLPlistAndChunksSerialization) initWithPlist:chunks:context:]
/Library/Caches/com.apple.xbs/Sources/Suggestions_Sim/Suggestions-1115/ProactiveML/MobileAsset/PMLDictionaryParameters.m
[__expr isKindOfClass:[NSNumber class]]
[__expr isKindOfClass:[PMLDataChunkDenseFloatVector class]]
SHAPE
VALUES
-[PMLModelWeights(PMLMobileAssetParameterGetStrategy) initFromDictionary:]
weightArray.count == [shapeArray[0] unsignedIntegerValue]
-[PMLModelRegressor(PMLPlistAndChunksSerialization) initWithPlist:chunks:context:]
-[PMLModelRegressor(PMLMobileAssetParameterGetStrategy) initFromDictionary:]
regressorArray.count == [shapeArray[0] unsignedIntegerValue]
-[PMLImmutableLogisticRegressionModel(PMLPlistAndChunksSerialization) initWithPlist:chunks:context:]
WEIGHTS
INTERCEPT
MULTI_LABEL_REGRESSION_MODELS
LEXICON_PATH
MAX_TOKEN_LENGTH
FEATURE_VECTOR_LENGTH
MAX_TOKEN_NGRAM_LENGTH
CHARACTER_NGRAM_LENGTH
CHARACTER_NGRAM_LOCATION
BUCKET_SIZE
malloc failed
SELF != ''
Process name %@ is not python
PMLClassificationEvaluationMetrics.m
python
com.apple.suggestions.suggestd
hasName
name
T@"NSString",&,N,V_name
hasVersion
version
T@"NSString",&,N,V_version
hasLocale
locale
T@"NSString",&,N,V_locale
Tr^f,R,N
count
data
T@"NSData",R,N
Index %tu out of bounds (vector length: %tu)
PMLDenseVector.m
v20@?0f8Q12
other.count == self.count
mutablePtr
mutableData
T@"NSMutableData",R,N,V_mutableData
end >= start
end > 0 && end <= self.count
start >= 0 && start < self.count
Failed to allocate NSData.
PMLMutableDenseVectorAllocationFailure
hasRmse
rmse
Tf,N,V_rmse
hasF1
Tf,N,V_f1
hasTruePositives
truePositives
TQ,N,V_truePositives
hasTrueNegatives
trueNegatives
TQ,N,V_trueNegatives
hasFalsePositives
falsePositives
TQ,N,V_falsePositives
hasFalseNegatives
falseNegatives
TQ,N,V_falseNegatives
positiveScoresCount
positiveScores
negativeScoresCount
negativeScores
hasSecsToExecute
secsToExecute
Tf,N,V_secsToExecute
numberOfRows
numberOfColumns
isSymmetric
TB,N,V_isSymmetric
matrix
T^{sparse_m_float=},N,V_matrix
v28@?0f8Q12Q20
v40@?0Q8Q16r^f24r^q32
Can not mark %lu x %lu matrix as symmetric
PMLSparseMatrix.m
Invalid shape, all rows must be the same length (row %lu length: %lu, first row length: %lu)
hasLabel
label
TQ,N,V_label
hasSupervisionType
supervisionType
TQ,N,V_supervisionType
hasConfidenceScore
confidenceScore
Tf,N,V_confidenceScore
hasSupport
support
Tf,N,V_support
@"PMLMutableDenseVector"24@?0@"PMLSparseMatrix"8@"PMLModelWeights"16
logisticBatch
/Library/Caches/com.apple.xbs/Sources/Suggestions_Sim/Suggestions-1115/ProactiveML/PMLMathFunctions.h
s == SPARSE_SUCCESS
f24@?0@"PMLSparseVector"8@"PMLModelWeights"16
f40@?0@"PMLModelWeights"8@"PMLSparseMatrix"16@"PMLModelRegressor"24^f32
calculateAvgGradientForBatch
Ti,R,N
normalize
TB,N,V_normalize
NON_WORD_TOKENS_LOCALE
SHOULD_TOKENIZE_NEWLINES
CHARACTER_NORMALIZATION
TOKEN_NORMALIZATION
TOKEN_NGRAM_LENGTH
TOKEN_NGRAM_LOCATION
NGRAM_SIZE
v12@?0I8
(characterNGramRange.location && characterNGramRange.length) || (tokenNGramRange.location && tokenNGramRange.length)
buckets > 0
PMLHashingVectorizer.m
v8@?0
com.apple.proactive
TQ,R,N,V_numberOfRows
TQ,R,N,V_numberOfColumns
PMLDenseMatrix.m
T@"NSString",R,N,V_name
T@"NSString",R,N,V_version
featureVersion
Tf,R,N,V_featureVersion
T@"NSString",R,N,V_locale
<%@ %@ %@ %@>
LOCALE
VERSION
NAME
Handle %@ is not a sub-model handle.
PMLSessionDescriptor.m
_label([0-9]+)
_label[0-9]+
%@_label%lu
Unexpected featureVersion extracted for %@; pattern: %@; descriptor: %@
Unexpected number of match ranges for %@; pattern: %@; descriptor: %@
Unexpected number of matches for %@; pattern: %@; descriptor: %@
regex
(^|&)FV=([0-9]+(.[0-9]+)?)($|&)
%@-%@-%@
chunks
PMLDataChunk.m
vector
Tr^d,R,N
plist
T@,R,N
hasBatchSize
batchSize
TQ,N,V_batchSize
perLabelSupports
T@"NSMutableArray",&,N,V_perLabelSupports
perLabelSupport
trainingNetworkPath
T@"NSURL",R,N,V_trainingNetworkPath
inputName
T@"NSString",R,N,V_inputName
inputDim
TQ,R,N,V_inputDim
outputName
T@"NSString",R,N,V_outputName
trueLabelName
T@"NSString",R,N,V_trueLabelName
lossValueName
T@"NSString",R,N,V_lossValueName
trainingOutputName
T@"NSString",R,N,V_trainingOutputName
trainingControlVariableName
T@"NSString",R,N,V_trainingControlVariableName
initializerName
T@"NSString",R,N,V_initializerName
globalsToGetGradientsFor
T@"NSArray",R,N,V_globalsToGetGradientsFor
layerWeightsToGetGradientsFor
T@"NSArray",R,N,V_layerWeightsToGetGradientsFor
layerBiasesToGetGradientsFor
T@"NSArray",R,N,V_layerBiasesToGetGradientsFor
PML_ESPRESSO_LAYER_BIASES_TO_GET_GRADIENTS_FOR
PML_ESPRESSO_LAYER_WEIGHTS_TO_GET_GRADIENTS_FOR
PML_ESPRESSO_GLOBALS_TO_GET_GRADIENTS_FOR
PML_ESPRESSO_INITIALIZER_NAME
PML_ESPRESSO_TRAINING_CONTROL_VARIABLE_NAME
PML_ESPRESSO_TRAINING_OUTPUT_NAME
PML_ESPRESSO_LOSS_VALUE_NAME
PML_ESPRESSO_TRUE_LABEL_NAME
PML_ESPRESSO_OUTPUT_NAME
PML_ESPRESSO_INPUT_DIM
PML_ESPRESSO_INPUT_NAME
Can't instantiate %@. Missing "%@" dependency.
PMLEspressoTrainingVariables.m
PML_ESPRESSO_TRAINING_NETWORK_PATH
hasEvaluation
evaluation
T@"AWDProactiveModelFittingEvaluation",&,N,V_evaluation
hasLogRegWeights
logRegWeights
T@"AWDProactiveModelFittingLogRegWeights",&,N,V_logRegWeights
hasLogRegGradient
logRegGradient
T@"AWDProactiveModelFittingLogRegGradient",&,N,V_logRegGradient
hasLinRegFeatureMatrix
linRegFeatureMatrix
T@"AWDProactiveModelFittingLinRegFeatureMatrix",&,N,V_linRegFeatureMatrix
hasLinRegObjectiveFeatures
linRegObjectiveFeatures
T@"AWDProactiveModelFittingLinRegObjectiveFeatures",&,N,V_linRegObjectiveFeatures
v16@?0^{_CFBurstTrie=}8
path
PMLLexicon.m
v32@?0@"NSString"8@"NSNumber"16^B24
PlanClass
NoiseStrategy
ProactiveMLErrorDomain
numberOfNonZeroValues
TQ,N,V_numberOfNonZeroValues
sparseIndices
T^q,N,V_sparseIndices
sparseValues
T^f,N,V_sparseValues
TQ,R,N,V_length
Too big vector.
PMLSparseVector.m
v24@?0^v8Q16
numberOfNonZeroValues == 0 || (indices && values)
hasK
TQ,N,V_k
hasPrecision
precision
Tf,N,V_precision
CLASS_NAME
Invalid plan. class %@ doesn't conform to %@
Invalid plan. Unknown class: %@
PMLPlistClassWrapper.m
hasSparseFloatGradient
sparseFloatGradient
T@"AWDProactiveModelFittingSparseFloatVector",&,N,V_sparseFloatGradient
hasIteration
iteration
TQ,N,V_iteration
hasSparseQuantizedGradient
sparseQuantizedGradient
T@"AWDProactiveModelFittingQuantizedSparseVector",&,N,V_sparseQuantizedGradient
hasGradientScaleFactor
gradientScaleFactor
Tf,N,V_gradientScaleFactor
hasGradientL2norm
gradientL2norm
Tf,N,V_gradientL2norm
hasDenseQuantizedGradient
denseQuantizedGradient
T@"AWDProactiveModelFittingQuantizedDenseVector",&,N,V_denseQuantizedGradient
Could not bind the input buffer to layer %@ in espresso plan, status code %d
Could not bind the output buffer to layer %@ in espresso plan, status code %d
Could not execute espresso plan, status code %d
Could not create espresso context
Could not create espresso plan
Could not add espresso network from file %@ with storage type %05x, status code %d
Could not declare espresso network input %@, status code %d
Could not declare espresso network output %@, status code %d
Could not build espresso plan, status code %d
Could not bind the input buffer to layer %@ in espresso plan during initialization, status code %d
Unable to get input shape to layer %@ in espresso plan during initialization, status code %d
Input layer %@ has rank %zu, shape %@, num parameters %tu
Could not bind the output buffer to layer %@ in espresso plan during initialization, status code %d
Unable to get output shape to layer %@ in espresso plan during initialization, status code %d
Output layer %@ has rank %zu, shape %@, num parameters %tu
Stopped after iter %li with NAN error
Stopped after iter %li with DBL_MAX error
Stopped after iter %li with -DBL_MAX error
Stopped after iter %li with -INFINITY error
Stopped after iter %li with INFINITY error
Stopped after iter %li with perfect fit
Stopped after iter %li with loss %f
Error extracting floats from sparse rows, status: %d
Chunk descriptor out of bounds: ends at %llu in data of length %llu
Could not parse chunk %u; bailing out
Could not open chunk file at %@: %@
Error loading plist chunk: %@
Error writing plist chunk: %@
Unable to read Espresso network file at: %@
Returning 0 for word id since token is not in lexicon: %@
Falling back to default system lexicon since lexicon at following path is invalid in existence: %@
Returning nil for PMLLexicon since unable to initialize lexicon
Error reading object from NSData: %@
Error writing object to NSData: %@
zPLR
PMLMultiLabelEspressoClassifier
PMLMultiLabelClassifierProtocol
NSObject
AWDProactiveModelFittingEvaluation
NSCopying
AWDProactiveModelFittingLogRegWeights
PMLGradientSolver
AWDProactiveModelFittingLinRegObjectiveFeatures
AWDProactiveModelFittingQuantizedSparseVector
AWDProactiveModelFittingModelInfoStatsPair
AWDProactiveModelFittingLinRegFeatureMatrix
AWDProactiveModelFittingSparseFloatVector
PMLLaplaceSampler
PMLSampler
AWDProactiveModelFittingSparseFloatMatrix
PMLImmutableLogisticRegressionModel
AWDProactiveModelFittingQuantizedSparseMatrix
PMLPlistAndChunksSerializableProtocol
PMLMobileAssetParameterGetStrategy
PMLChunkToVec
PMLPlistAndChunksSerialization
PMLMultiLabelLogisticRegressionModel
PMLMultiLabelClassifierModelProtocol
PMLFastTextVectorizer
PMLTransformerProtocol
PMLClassificationEvaluationMetrics
AWDProactiveModelFittingModelInfo
PMLDenseVector
NSMutableCopying
PMLMutableDenseVector
AWDProactiveModelFittingEvalMetrics
PMLSparseMatrix
AWDProactiveModelFittingSession
AWDProactiveModelFittingLabelSupportPair
PMLLogisticRegressionModel
PMLGaussianSampler
PMLModelRegressor
PMLHashingVectorizer
PMLDenseMatrix
PMLSessionDescriptor
AWDProactiveModelFittingQuantizedDenseVector
PMLDataChunk
PMLDataChunkDenseDoubleVector
PMLDataChunkDenseFloatVector
PMLDataChunkPlist
PMLDataChunkRaw
AWDProactiveModelFittingMinibatchStats
PMLEspressoTrainingVariables
PMLModelWeights
AWDProactiveModelFittingParsecFeedbackEnvelope
PMLLexicon
PMLSparseVector
AWDProactiveModelFittingPrecisionAtKPair
PMLPlistClassWrapper
AWDProactiveModelFittingLogRegGradient
_espressoModel
_espressoPlan
_espressoContext
_outputNumReplyClasses
_inputNumParameters
outputDimension
predict:
debugDescription
isEqual:
class
self
performSelector:
performSelector:withObject:
performSelector:withObject:withObject:
isProxy
isKindOfClass:
isMemberOfClass:
conformsToProtocol:
respondsToSelector:
retain
release
autorelease
retainCount
zone
hash
superclass
description
dealloc
initWithEspressoContext:espressoPlan:espressoModel:inputNumParameters:outputNumReplyClasses:
addObject:
numberWithFloat:
cStringUsingEncoding:
makeStringForShape:
getNumParametersFromShape:rank:
classifierWithEspressoModelFile:intercept:
UTF8String
appendFormat:
appendString:
_timestamp
_evaluationMetrics
_minibatchStats
_modelInfo
_precisionAtKs
_has
copyWithZone:
setTimestamp:
setHasTimestamp:
hasTimestamp
hasModelInfo
hasMinibatchStats
hasEvaluationMetrics
clearPrecisionAtKs
addPrecisionAtK:
precisionAtKsCount
precisionAtKAtIndex:
dictionaryRepresentation
readFrom:
writeTo:
copyTo:
mergeFrom:
timestamp
modelInfo
setModelInfo:
minibatchStats
setMinibatchStats:
evaluationMetrics
setEvaluationMetrics:
precisionAtKs
setPrecisionAtKs:
.cxx_destruct
countByEnumeratingWithState:objects:count:
allocWithZone:
initWithCapacity:
setObject:forKey:
numberWithUnsignedLongLong:
dictionary
stringWithFormat:
objectAtIndex:
removeAllObjects
precisionAtKType
_denseQuantizedWeights
_sparseFloatWeights
_sparseQuantizedWeights
_weightsL2norm
_weightsScaleFactor
hasSparseFloatWeights
hasSparseQuantizedWeights
setWeightsScaleFactor:
setHasWeightsScaleFactor:
hasWeightsScaleFactor
setWeightsL2norm:
setHasWeightsL2norm:
hasWeightsL2norm
hasDenseQuantizedWeights
sparseFloatWeights
setSparseFloatWeights:
sparseQuantizedWeights
setSparseQuantizedWeights:
weightsScaleFactor
weightsL2norm
denseQuantizedWeights
setDenseQuantizedWeights:
_learningRate
_stoppingThreshold
_minIterations
_gradientCalculator
_predictionCalculator
_batchPredictionCalculator
_intercept
_weights
_covariates
_objective
initWithLearningRate:minIterations:stoppingThreshold:weights:intercept:gradientCalculator:predictionCalculator:batchPredictionCalculator:
init
solve
computeAvgGradientWithIterations:
setCovariates:
solveWithAvgGradient:maxNumberOfIterations:
batchPredict:
solveForCovariates:objectives:
weights
setWeights:
covariates
objective
setObjective:
intercept
setIntercept:
handleFailureInMethod:object:file:lineNumber:description:
currentHandler
_featuresL2norm
_featuresScaleFactor
_sparseFloatFeatures
_sparseQuantizedFeatures
hasSparseFloatFeatures
hasSparseQuantizedFeatures
setFeaturesScaleFactor:
setHasFeaturesScaleFactor:
hasFeaturesScaleFactor
setFeaturesL2norm:
setHasFeaturesL2norm:
hasFeaturesL2norm
sparseFloatFeatures
setSparseFloatFeatures:
sparseQuantizedFeatures
setSparseQuantizedFeatures:
featuresScaleFactor
featuresL2norm
_indices
_values
_bucketSize
_length
_minValue
indicesCount
indices
clearIndices
addIndices:
indicesAtIndex:
setIndices:count:
valuesCount
values
clearValues
addValues:
valuesAtIndex:
setValues:count:
setLength:
setHasLength:
hasLength
setMinValue:
setHasMinValue:
hasMinValue
setBucketSize:
setHasBucketSize:
hasBucketSize
length
minValue
bucketSize
numberWithUnsignedInt:
raise
exceptionWithName:reason:userInfo:
_stats
hasStats
stats
setStats:
_featureMatrixL2norm
_featureMatrixScaleFactor
_sparseFloatFeatureMatrix
_sparseQuantizedFeatureMatrix
hasSparseFloatFeatureMatrix
hasSparseQuantizedFeatureMatrix
setFeatureMatrixScaleFactor:
setHasFeatureMatrixScaleFactor:
hasFeatureMatrixScaleFactor
setFeatureMatrixL2norm:
setHasFeatureMatrixL2norm:
hasFeatureMatrixL2norm
sparseFloatFeatureMatrix
setSparseFloatFeatureMatrix:
sparseQuantizedFeatureMatrix
setSparseQuantizedFeatureMatrix:
featureMatrixScaleFactor
featureMatrixL2norm
_rng
_magnitude
initWithMagnitude:
sample
initWithMagnitude:seed:
_columnIndices
_rowIndices
_columnLength
_rowLength
columnIndicesCount
columnIndices
clearColumnIndices
addColumnIndices:
columnIndicesAtIndex:
setColumnIndices:count:
setColumnLength:
setHasColumnLength:
hasColumnLength
rowIndicesCount
rowIndices
clearRowIndices
addRowIndices:
rowIndicesAtIndex:
setRowIndices:count:
setRowLength:
setHasRowLength:
hasRowLength
columnLength
rowLength
_backingObject
initWithWeights:intercept:
initWithChunk:intercept:
initWithFloatsNoCopy:count:intercept:
toChunk
arrayWithObjects:count:
numberWithDouble:
toPlistWithChunks:
initWithPlist:chunks:context:
objectForKeyedSubscript:
numberWithBool:
boolValue
writeToFile:atomically:
floatValue
numberWithUnsignedInteger:
lastObject
numberWithInt:
dictionaryWithObjects:forKeys:count:
initFromDictionary:
toDictionary
toVec
objectAtIndexedSubscript:
migrateDenseDoubleVectorToDenseFloatVector:
unsignedIntegerValue
_models
initWithWeightsArray:andIntercept:
initWithModels:
serialize
firstObject
_lexicon
_featureVectorLength
_vocabSize
_characterNGramRange
_maxTokenNGramLength
_splitCharacterSet
_maxTokenLength
_bow
_eow
transform:
initWithLexiconPath:bucketSize:characterNGramRange:maxTokenNGramLength:featureVectorLength:maxTokenLength:bow:eow:
initWithLexicon:bucketSize:characterNGramRange:maxTokenNGramLength:featureVectorLength:maxTokenLength:bow:eow:
_getVocabSize
_hashUniCharToBucket:len:
_splitTextToTokens:
_addCharacterNGramHashesToCounter:tokenIndices:
_addTokenNGramHashesToCounter:tokenIndices:
intValue
subarrayWithRange:
numberWithUnsignedLong:
unsignedIntValue
filteredArrayUsingPredicate:
predicateWithFormat:
componentsSeparatedByCharactersInSet:
addCharactersInString:
whitespaceAndNewlineCharacterSet
precision:predictions:predicate:
recall:predictions:predicate:
f1Score:predictions:predicate:
truePositives:predictions:predicate:
falsePositives:predictions:predicate:
trueNegatives:predictions:predicate:
falseNegatives:predictions:predicate:
addScoresForOutcomes:predictions:predicate:metrics:
roundFloatToSigFigs:sigFigs:
setReportSamplingRate:
isEqualToString:
processName
processInfo
_locale
_name
_version
hasName
hasVersion
hasLocale
name
setName:
version
setVersion:
locale
setLocale:
_data
mutableCopyWithZone:
count
data
initWithCount:
initWithFloats:count:
initWithFloatsNoCopy:count:freeWhenDone:
initWithFloatsNoCopy:count:deallocator:
initWithData:
initWithNumbers:
sliceFrom:to:
vecByAppendingVec:
cosineDistanceFrom:
l1norm
l2norm
maxValue
density
enumerateValuesWithBlock:
enumerateNonZeroValuesWithBlock:
valueAt:
_mutableData
mutablePtr
initWithMutableData:
append:
append:count:
processValuesInPlaceWithBlock:
scaleInPlaceWithInversedFactor:
scaleInPlaceWithFactor:
sumInPlaceWithVector:
mutableData
appendBytes:length:
bytes
appendData:
mutableBytes
initWithLength:
mutableCopy
initWithBytesNoCopy:length:deallocator:
initWithBytesNoCopy:length:freeWhenDone:
initWithBytes:length:
denseVectorFromNumbers:
_negativeScores
_positiveScores
_falseNegatives
_falsePositives
_trueNegatives
_truePositives
_rmse
_secsToExecute
setRmse:
setHasRmse:
hasRmse
setF1:
setHasF1:
hasF1
setTruePositives:
setHasTruePositives:
hasTruePositives
setTrueNegatives:
setHasTrueNegatives:
hasTrueNegatives
setFalsePositives:
setHasFalsePositives:
hasFalsePositives
setFalseNegatives:
setHasFalseNegatives:
hasFalseNegatives
positiveScoresCount
positiveScores
clearPositiveScores
addPositiveScores:
positiveScoresAtIndex:
setPositiveScores:count:
negativeScoresCount
negativeScores
clearNegativeScores
addNegativeScores:
negativeScoresAtIndex:
setNegativeScores:count:
setSecsToExecute:
setHasSecsToExecute:
hasSecsToExecute
rmse
truePositives
trueNegatives
falsePositives
falseNegatives
secsToExecute
_isSymmetric
_matrix
initWithSparseMatrix:
numberOfRows
numberOfColumns
setMatrix:
setIsSymmetric:
valueAtRow:column:
_enumerateSparseRowsWithBlock:
enumerateNonZeroValuesForRow:withBlock:
matrixWithConstantColumn
isSymmetric
matrix
sparseMatrixWithNumberOfRows:numberOfColumns:
sparseMatrixFromNumbers:
_label
_supervisionType
_confidenceScore
setLabel:
setHasLabel:
hasLabel
setSupervisionType:
setHasSupervisionType:
hasSupervisionType
setConfidenceScore:
setHasConfidenceScore:
hasConfidenceScore
label
supervisionType
confidenceScore
_support
setSupport:
setHasSupport:
hasSupport
support
_solver
initWithSolver:
solverWithWeights:andIntercept:
solverWithWeights:
solverWithWeights:andIntercept:learningRate:minIterations:stoppingThreshold:
withWeights:
withWeights:andIntercept:
denseVector
initModelRegressorFromFloats:
initWithRegressorFromFloat:
regressorFor:
inverseValues
modelRegressorFromFloat:
modelRegressorFromFloats:
regressorVectorFrom:
_buckets
_normalize
_tokenNGramRange
_shouldNormalizeTokens
_shouldNormalizeCharacters
_localeForNonwordTokens
_tokenizeNewlines
initWithBucketSize:ngrams:localeForNonwordTokens:tokenizeNewlines:andIntercept:
initWithBucketSize:characterNGramRange:tokenNGramRange:shouldNormalizeTokens:shouldNormalizeCharacters:localeForNonwordTokens:tokenizeNewlines:withIntercept:
transformBatch:
isEqualToHashingVectorizer:
normalize
setNormalize:
localeWithLocaleIdentifier:
setObject:forKeyedSubscript:
localeIdentifier
getCharacters:range:
withBucketSize:andNgrams:
withBucketSize:ngrams:localeForNonwordTokens:tokenizeNewlines:andIntercept:
withBucketSize:characterNGramRange:tokenNGramRange:shouldNormalizeTokens:shouldNormalizeCharacters:localeForNonwordTokens:tokenizeNewlines:withIntercept:
withBucketSize:characterNGramRange:tokenNGramRange:shouldNormalizeTokens:shouldNormalizeCharacters:withIntercept:
_numberOfRows
_numberOfColumns
initWithData:numberOfRows:numberOfColumns:
denseMatrixFromData:numberOfRows:numberOfColumns:
denseMatrixFromNumbers:
_featureVersion
initWithName:version:locale:
_parseFeatureVersion:descriptor:
subSessionDescriptorForLabel:
baseSessionDescriptor
isSubSessionDescriptor
subSessionLabel
featureVersion
initWithFormat:
descriptorForName:version:locale:
integerValue
substringWithRange:
rangeAtIndex:
firstMatchInString:options:range:
regularExpressionWithPattern:options:error:
numberOfMatchesInString:options:range:
stringByReplacingMatchesInString:options:range:withTemplate:
numberOfRanges
raise:format:
pattern
matchesInString:options:range:
_backingData
_superdata
setSuperdata:
isEqualToData:
dataChunkType
chunkOfType:data:superdata:
chunksFromFileAtPath:
chunksFromData:
serializeChunks:
initWithContentsOfFile:options:error:
vector
chunkWithVector:count:
_plist
_parsed
plist
propertyListWithData:options:format:error:
chunkWithPlist:
dataWithPropertyList:format:options:error:
chunkWithData:
_batchSize
_perLabelSupports
setBatchSize:
setHasBatchSize:
hasBatchSize
clearPerLabelSupports
addPerLabelSupport:
perLabelSupportsCount
perLabelSupportAtIndex:
batchSize
perLabelSupports
setPerLabelSupports:
perLabelSupportType
_initializedWithNSData
_trainingNetworkPath
_inputName
_inputDim
_outputName
_trueLabelName
_lossValueName
_trainingOutputName
_trainingControlVariableName
_initializerName
_globalsToGetGradientsFor
_layerWeightsToGetGradientsFor
_layerBiasesToGetGradientsFor
initWithTrainingNetworkPath:inputName:inputDim:outputName:trueLabelName:lossValueName:trainingOutputName:trainingControlVariableName:initializerName:globalsToGetGradientsFor:layerWeightsToGetGradientsFor:layerBiasesToGetGradientsFor:
isEqualToEspressoTrainingVariables:
trainingNetworkPath
inputName
inputDim
outputName
trueLabelName
lossValueName
trainingOutputName
trainingControlVariableName
initializerName
globalsToGetGradientsFor
layerWeightsToGetGradientsFor
layerBiasesToGetGradientsFor
dataWithContentsOfFile:
absoluteString
isReadableFileAtPath:
path
defaultManager
initModelWeightsFromFloats:
asMutableDenseVector
weightsByAppendingWeights:
copy
modelWeightsFromFloats:
modelWeightsOfLength:rng:
modelWeightsOfLength:
modelWeightsOfLength:rngSeed:
zeroWeightsOfLength:
constWeightsOfLength:value:
weightsFromNumbers:
initWithSeed:
next
_evaluation
_linRegFeatureMatrix
_linRegObjectiveFeatures
_logRegGradient
_logRegWeights
hasEvaluation
hasLogRegWeights
hasLogRegGradient
hasLinRegFeatureMatrix
hasLinRegObjectiveFeatures
evaluation
setEvaluation:
logRegWeights
setLogRegWeights:
logRegGradient
setLogRegGradient:
linRegFeatureMatrix
setLinRegFeatureMatrix:
linRegObjectiveFeatures
setLinRegObjectiveFeatures:
initWithPath:
getWordIDforToken:
getTotalEntries
runBlockWithTrie:
payloadForString:
fileSize
attributesOfItemAtPath:error:
fileExistsAtPath:
serializeLexiconToFile:tokenToWordIDDict:
enumerateKeysAndObjectsUsingBlock:
_numberOfNonZeroValues
_sparseIndices
_sparseValues
initWithLength:numberOfNonZeroValues:indicesData:valuesData:
initWithLength:numberOfNonZeroValues:indices:values:
indicesData
valuesData
indicesAsUInt16Data
quantizedValuesAsUInt8DataWithMin:max:
maxAbsValue
setSparseValues:
setSparseIndices:
processNonZeroValuesInPlaceWithBlock:
valueAtIndex:
vectorWithConstantColumn
numberOfNonZeroValues
setNumberOfNonZeroValues:
sparseIndices
sparseValues
dataWithBytesNoCopy:length:freeWhenDone:
sparseVectorFromDense:length:
sparseVectorFromDense:
sparseVectorEmptyWithLength:
sparseVectorFromNumbers:
sparseVectorFromNumbers:indices:length:
_precision
setK:
setHasK:
hasK
setPrecision:
setHasPrecision:
hasPrecision
precision
_classNameKey
initWithClassNameKey:
writeToPlistWithObject:andChunks:
readObjectWithPlist:chunks:context:
writeToDataWithObject:andChunks:
readObjectWithData:chunks:context:
addEntriesFromDictionary:
_iteration
_denseQuantizedGradient
_gradientL2norm
_gradientScaleFactor
_sparseFloatGradient
_sparseQuantizedGradient
hasSparseFloatGradient
setIteration:
setHasIteration:
hasIteration
hasSparseQuantizedGradient
setGradientScaleFactor:
setHasGradientScaleFactor:
hasGradientScaleFactor
setGradientL2norm:
setHasGradientL2norm:
hasGradientL2norm
hasDenseQuantizedGradient
sparseFloatGradient
setSparseFloatGradient:
iteration
sparseQuantizedGradient
setSparseQuantizedGradient:
gradientScaleFactor
gradientL2norm
denseQuantizedGradient
setDenseQuantizedGradient:
{?="plan"^v"network_index"i}
Q16@0:8
@"NSArray"24@0:8@"PMLSparseVector"16
@24@0:8@16
B24@0:8@16
#16@0:8
@16@0:8
@24@0:8:16
@32@0:8:16@24
@40@0:8:16@24@32
B16@0:8
B24@0:8#16
B24@0:8@"Protocol"16
B24@0:8:16
Vv16@0:8
^{_NSZone=}16@0:8
@"NSString"16@0:8
v16@0:8
@64@0:8^v16^v24{?=^vi}32Q48Q56
@24@0:8[10Q]16
Q32@0:8[10Q]16Q24
@28@0:8@16B24
@"AWDProactiveModelFittingEvalMetrics"
@"AWDProactiveModelFittingMinibatchStats"
@"AWDProactiveModelFittingModelInfo"
@"NSMutableArray"
{?="timestamp"b1}
@24@0:8^{_NSZone=}16
v24@0:8Q16
v20@0:8B16
v24@0:8@16
@24@0:8Q16
@"AWDProactiveModelFittingQuantizedDenseVector"
@"AWDProactiveModelFittingSparseFloatVector"
@"AWDProactiveModelFittingQuantizedSparseVector"
{?="timestamp"b1"weightsL2norm"b1"weightsScaleFactor"b1}
v20@0:8f16
f16@0:8
@"PMLModelWeights"
@"PMLSparseMatrix"
@"PMLModelRegressor"
@68@0:8f16Q20f28@32B40@?44@?52@?60
v32@0:8^f16Q24
f24@0:8@16
v32@0:8@16@24
{?="timestamp"b1"featuresL2norm"b1"featuresScaleFactor"b1}
{?="list"^I"count"Q"size"Q}
{?="bucketSize"b1"length"b1"minValue"b1}
^I16@0:8
v20@0:8I16
I24@0:8Q16
v32@0:8^I16Q24
I16@0:8
@"AWDProactiveModelFittingSparseFloatMatrix"
@"AWDProactiveModelFittingQuantizedSparseMatrix"
{?="timestamp"b1"featureMatrixL2norm"b1"featureMatrixScaleFactor"b1}
{?="list"^Q"count"Q"size"Q}
{?="list"^f"count"Q"size"Q}
{?="length"b1}
^Q16@0:8
Q24@0:8Q16
v32@0:8^Q16Q24
^f16@0:8
f24@0:8Q16
{?="s"[2Q]}
@20@0:8f16
@28@0:8f16Q20
{?="columnLength"b1"rowLength"b1}
@32@0:8r^f16i24B28
{?="bucketSize"b1"columnLength"b1"minValue"b1"rowLength"b1}
@24@0:8@"NSMutableArray"16
@40@0:8@16@"NSArray"24@"NSDictionary"32
@40@0:8@16@24@32
@"NSArray"
@28@0:8@"NSArray"16B24
@"PMLLexicon"
{_NSRange="location"Q"length"Q}
@"NSCharacterSet"
@"NSString"
@88@0:8@16Q24{_NSRange=QQ}32Q48Q56Q64@72@80
Q28@0:8r^S16i24
f40@0:8@16@24@?32
Q40@0:8@16@24@?32
v48@0:8@16@24@?32@40
f24@0:8f16i20
@"NSMutableData"
r^f16@0:8
@32@0:8r^f16Q24
@36@0:8^f16Q24B32
@40@0:8^f16Q24@?32
@24@0:8i16i20
v24@0:8@?16
v32@0:8r^f16Q24
{?="falseNegatives"b1"falsePositives"b1"trueNegatives"b1"truePositives"b1"f1"b1"rmse"b1"secsToExecute"b1}
^{sparse_m_float=}
@24@0:8^{sparse_m_float=}16
v24@0:8^{sparse_m_float=}16
f32@0:8Q16Q24
v32@0:8Q16@?24
^{sparse_m_float=}16@0:8
@32@0:8Q16Q24
{?="label"b1"supervisionType"b1"timestamp"b1"confidenceScore"b1}
{?="label"b1"support"b1}
@"PMLGradientSolver"
@44@0:8@16B24f28Q32f40
@"PMLDenseVector"
@20@0:8i16
i16@0:8
@"NSLocale"
@40@0:8i16i20@24B32B36
@76@0:8i16{_NSRange=QQ}20{_NSRange=QQ}36B52B56@60B68B72
@64@0:8i16{_NSRange=QQ}20{_NSRange=QQ}36B52B56B60
@40@0:8@16Q24Q32
f32@0:8@16@24
{?="bucketSize"b1"minValue"b1}
@"NSData"
@36@0:8I16@20@28
r^d16@0:8
@28@0:8r^d16i24
@28@0:8r^f16i24
{?="batchSize"b1"support"b1}
@"NSURL"
@112@0:8@16@24Q32@40@48@56@64@72@80@88@96@104
@"PMLMutableDenseVector"
@28@0:8i16@20
@28@0:8i16Q20
@24@0:8i16f20
@"AWDProactiveModelFittingEvaluation"
@"AWDProactiveModelFittingLinRegFeatureMatrix"
@"AWDProactiveModelFittingLinRegObjectiveFeatures"
@"AWDProactiveModelFittingLogRegGradient"
@"AWDProactiveModelFittingLogRegWeights"
@"_PASCFBurstTrie"
Q24@0:8@16
B32@0:8@16@24
@48@0:8Q16Q24@32@40
@48@0:8Q16Q24^q32^f40
@24@0:8f16f20
v24@0:8^f16
v24@0:8^q16
^q16@0:8
@40@0:8@16@24Q32
{?="k"b1"precision"b1}
@32@0:8@16@24
{?="iteration"b1"timestamp"b1"gradientL2norm"b1"gradientScaleFactor"b1}
