preferredFontForTextStyle:
colorWithRed:green:blue:alpha:
dictionaryWithObjects:forKeys:count:
initWithString:attributes:
stringByAppendingString:
appendAttributedString:
itemLabel
setAttributedText:
configureTitle:subtitle:width:
initWithNibName:bundle:
setDelegate:
startWithTextInputContext:applicationDictionary:
delegate
text
initWithString:
quickboardRemoteTextInputViewController:didEndRemoteTextInputSessionWithAttributedText:
session
quickboardRemoteTextInputViewController:didUpdateInputDictionary:
viewDidLoad
setShowsAcceptButton:
contentView
bounds
initWithFrame:
primaryLanguage
setTitle:
setMessage:
addSubview:
isEqual:
class
self
performSelector:
performSelector:withObject:
performSelector:withObject:withObject:
isProxy
isKindOfClass:
isMemberOfClass:
conformsToProtocol:
respondsToSelector:
retain
release
autorelease
retainCount
zone
hash
superclass
description
debugDescription
textInputSession:didCompleteWithAttributedText:
textInputSession:didUpdateInputDictionary:
initWithTextInputContext:applicationDictionary:
acceptButtonTappedWithCompletion:
.cxx_destruct
_session
init
decodeObjectOfClass:forKey:
decodeBoolForKey:
decodeIntegerForKey:
encodeObject:forKey:
encodeBool:forKey:
encodeInteger:forKey:
stringWithFormat:
supportsSecureCoding
autocapitalizationType
setAutocapitalizationType:
autocorrectionType
setAutocorrectionType:
spellCheckingType
setSpellCheckingType:
smartQuotesType
setSmartQuotesType:
smartDashesType
setSmartDashesType:
smartInsertDeleteType
setSmartInsertDeleteType:
keyboardType
setKeyboardType:
keyboardAppearance
setKeyboardAppearance:
returnKeyType
setReturnKeyType:
enablesReturnKeyAutomatically
setEnablesReturnKeyAutomatically:
isSecureTextEntry
setSecureTextEntry:
textContentType
setTextContentType:
passwordRules
setPasswordRules:
encodeWithCoder:
initWithCoder:
minimumLength
setMinimumLength:
attributedHeaderText
setAttributedHeaderText:
requestingApplicationBundleID
setRequestingApplicationBundleID:
initialText
setInitialText:
tintColor
setTintColor:
secondaryTextContentType
setSecondaryTextContentType:
_secureTextEntry
_textContentType
_minimumLength
_returnKeyType
_attributedHeaderText
_requestingApplicationBundleID
_initialText
_tintColor
_secondaryTextContentType
arrayWithObjects:count:
initWithMachNames:
setRtiDocState:
setSourceSession:
initWithUnboundedContextBefore:markedText:selectedText:unboundedContextAfter:selectedRangeInMarkedText:
rtiDocState
setDocumentState:
setRtiDocTraits:
rtiDocTraits
textInputTraits
setSmartInsertDeleteEnabled:
mainBundle
localizedStringForKey:value:table:
setPrompt:
isEqualToString:
setAutofillMode:
setAutofillContext:
setBundleId:
initWithBundleIdentifier:error:
initWithBundleIdentifier:allowPlaceholder:error:
containingBundleRecord
localizedName
infoDictionary
objectForKey:ofClass:
setAppName:
setLocalizedAppName:
objectForKeyedSubscript:
setAppId:
setAssociatedDomains:
UUID
setUuid:
rtiClient
uuid
beginAllowingRemoteTextInput:
setEnvironmentEnabled:withReason:
resume
beginRemoteTextInputSessionWithID:documentTraits:initialDocumentState:
endRemoteTextInputSessionWithID:
pause
endAllowingRemoteTextInput:
documentState
contextBeforeInput
markedText
selectedText
contextAfterInput
keyboardOutput
customInfo
insertionText
sourceSession
applyLocalTextOperations:toDocumentState:
objectForKey:
setObject:forKey:
removeObjectForKey:
copy
dealloc
performTextOperations:
performTextOperations:resultHandler:
setRtiClient:
setText:
currentAttributedText
setCurrentAttributedText:
_uuid
_rtiClient
_rtiDocState
_rtiDocTraits
_delegate
_text
_sourceSession
_currentAttributedText
setSuggestedKeychainItems:
setAllKeychainItems:
setContext:
context
canEvaluatePolicy:error:
setPasscodeEnabled:
isPasscodeEnabled
setWristMonitor:
wristMonitor
setWristDetectDisabled:
requestWristDetectionDisabledStatusWithCompletion:
viewWillAppear:
supportsAutofillSignInSuggestions
initiateAutofillSuggestions
textInputContext
setTrayButtonsBackgroundColor:
supportsNumpad
supportsEmoji
reloadTrayView
viewDidDisappear:
dismissViewControllerAnimated:completion:
presentedViewController
_quickboardRemoteObjectProxy
quickboardDidCancelEditing
cancelDictation
willMoveToParentViewController:
_hostAuditToken
updateAppIDWithTask:
updateBundleIDWithTask:
initiateOneTimeCodeSupport
setMinTextLengthForEnablingAccept:
updateReturnKey:
updateHeaderContentView
systemBlueColor
view
window
setAppID:
setConfirmationType:
setTextInputContext:
interfaceWithProtocol:
quickboardDidUpdateAttributedText:
quickboardDidEndEditing
quickboardDidUpdateInputDictionary:
_remoteViewControllerProxy
trayButtonsBackgroundColor
specs
defaultButtonHeight
initWithFrame:tintColor:backgroundCornerRadius:
setAction:
numpadButtonTapped:
addTarget:action:forControlEvents:
addObject:
emojiButtonTapped:
supportsRemoteTextInput
_presentRemoteTextInputViewController
appID
count
suggestedKeychainItems
addObjectsFromArray:
reloadListItems
getCredentialsForAppWithAppID:completionHandler:
allKeychainItems
getAllCredentialsWithCompletionHandler:
getApprovedSharedWebCredentialsEntriesSortedByHighestValueForAppWithAppID:completionHandler:
setAnimatingSelection:
_cellAnimationDuration
objectAtIndexedSubscript:
user
password
quickboard:didUpdateInputDictionary:
quickboard:textEntered:
supportsOneTimeCode
currentOneTimeCode
listView
dequeueReusableCellWithIdentifier:
newCell
site
collectionView
listItemCellReuseIdentifier
dequeueReusableCellWithReuseIdentifier:forIndexPath:
titleLabel
detailLabel
initWithStyle:reuseIdentifier:
didSelectKeychainItem:keychainArray:
selectOneTimeCodeForItem:
isWristDetectDisabled
selectAutofillSignInSuggestionForItem:keychainArray:
evaluatePolicy:localizedReason:reply:
setUserInteractionEnabled:
headerContentLabel
setHeaderContentLabel:
setNumberOfLines:
mainScreen
sizeThatFits:
systemMinimumLayoutMargins
setFrame:
initWithDelegate:numberPadMode:
languageController
setLanguageController:
presentViewController:animated:completion:
initWithDelegate:
associatedDomains
sharedInstance
activeDeviceSelectorBlock
getAllDevicesWithArchivedAltAccountDevicesMatching:
firstObject
valueForProperty:
boolValue
aa_primaryAppleAccount
oneTimeCodeAcceleratorQueue
setOneTimeCodeAcceleratorQueue:
obtainOneTimeCodeCredential:
initWithBlockForUpdates:
setOneTimeCodeAccelerator:
setCurrentOneTimeCode:
timeIntervalSinceNow
deselectCellAnimationDuration
supportsDictationInput
_exportedInterface
_remoteViewControllerInterface
quickboardInputCancelled:
extraButtonImage
extraButtonTapped
blurSourceViewForQuickboard:
quickboard:textUpdated:
quickboard:languageDidChange:
inputContextIdentifierForQuickboard:
quickboard:selectionFrameOriginYInDestinationView:
quickboardViewControllerContactFilter
onWristMonitor:didUpdateOnWristState:fromState:
_hostApplicationWillEnterForeground
_hostApplicationDidEnterBackground
supportsArouetInput
additionalTrayButtons
shouldShowSecondarySectionList
numberOfListItems
numberOfSecondaryListItems
titleForListItemSection
titleForSecondaryListItemSection
cellForListItem:
cellForSecondaryListItem:
itemCellForListItem:forIndexPath:
itemCellForSecondaryListItem:forIndexPath:
listItemCellClass
secondaryListItemCellClass
didSelectListItem:
didSelectSecondaryListItem:
headerContentViewHeight
headerContentView
shouldShowLanguageButton
oneTimeCodeAccelerator
remoteTextInputViewController
setRemoteTextInputViewController:
_passcodeEnabled
_wristDetectDisabled
_textInputContext
_appID
_suggestedKeychainItems
_allKeychainItems
_associatedDomains
_headerContentLabel
_context
_wristMonitor
_oneTimeCodeAccelerator
_currentOneTimeCode
_oneTimeCodeAcceleratorQueue
_remoteTextInputViewController
REMOTE_TEXT_INPUT_VIEW_CONTROLLER_TITLE
REMOTE_TEXT_INPUT_VIEW_CONTROLLER_MESSAGE
hash
TQ,R
superclass
T#,R
description
T@"NSString",R,C
debugDescription
session
T@"PUICQuickboardRemoteTextInputSession",R,N,V_session
delegate
T@"<PUICQuickboardRemoteTextInputViewControllerDelegate>",W,D,N
textContentType
secureTextEntry
initialText
tintColor
secondaryTextContentType
minimumLength
returnKeyType
attributedHeaderText
%@ {textContentType=%@, isSecureTextEntry=%@, requestingApplicationBundleID=%@, tintColor=%@, secondaryTextContentType=%@, minimumLength=%li, returnKeyType=%li, attributedHeaderText=%@}
autocapitalizationType
Tq,N
autocorrectionType
spellCheckingType
smartQuotesType
smartDashesType
smartInsertDeleteType
keyboardType
keyboardAppearance
enablesReturnKeyAutomatically
TB,N
TB,N,GisSecureTextEntry
T@"NSString",C,N
passwordRules
T@"UITextInputPasswordRules",C,N
supportsSecureCoding
TB,R
requestingApplicationBundleID
T@"NSString",&,N,V_requestingApplicationBundleID
T@"NSString",&,N,V_initialText
T@"UIColor",&,N,V_tintColor
T@"NSString",&,N,V_secondaryTextContentType
Tq,N,V_minimumLength
Tq,N,V_returnKeyType
T@"NSAttributedString",&,N,V_attributedHeaderText
TB,N,GisSecureTextEntry,V_secureTextEntry
T@"NSString",C,N,V_textContentType
v8@?0
REMOTE_TEXT_INPUT_NOTIFICATION_TITLE
REMOTE_TEXT_INPUT_NOTIFICATION_PROMPT
applicationIdentifier
associatedDomains
Quickboard remote text input session starting.
Quickboard remote text input session ending.
%@%@%@
AutofillUsername
AutofillPassword
uuid
T@"NSUUID",&,N,V_uuid
rtiClient
T@"RTIInputSystemClient",&,N,V_rtiClient
rtiDocState
T@"RTIDocumentState",&,N,V_rtiDocState
rtiDocTraits
T@"RTIDocumentTraits",&,N,V_rtiDocTraits
sourceSession
T@"RTIInputSystemSourceSession",&,N,V_sourceSession
currentAttributedText
T@"NSMutableAttributedString",&,N,V_currentAttributedText
T@"<PUICQuickboardRemoteTextInputSessionDelegate>",W,N,V_delegate
text
T@"NSString",C,N,V_text
LSApplicationExtensionRecord
Unable to find class %s
/System/Library/PrivateFrameworks/CoreServices.framework/CoreServices
LSApplicationRecord
v20@?0B8@"NSError"12
application-identifier
v16@?0@"NSArray"8
SUGGESTED_PASSWORDS
ALL_PASSWORDS
AutofillCellReuseIdentifier
ONE_TIME_CODE_SOURCE
LOCAL_AUTH_MESSAGE_REASON
QuickboardViewService
com.apple.QuickboardViewService.IMOneTimeCodeAccelerator
appID
T@"NSString",&,N,V_appID
suggestedKeychainItems
T@"NSMutableArray",&,N,V_suggestedKeychainItems
allKeychainItems
T@"NSMutableArray",&,N,V_allKeychainItems
T@"NSArray",&,N,V_associatedDomains
headerContentLabel
T@"UILabel",&,N,V_headerContentLabel
context
T@"LAContext",&,N,V_context
passcodeEnabled
TB,N,GisPasscodeEnabled,V_passcodeEnabled
wristDetectDisabled
TB,N,GisWristDetectDisabled,V_wristDetectDisabled
wristMonitor
T@"CSLSOnWristMonitor",&,N,V_wristMonitor
oneTimeCodeAccelerator
T@"IMOneTimeCodeAccelerator",&,N,V_oneTimeCodeAccelerator
currentOneTimeCode
T@"NSDictionary",&,N,V_currentOneTimeCode
oneTimeCodeAcceleratorQueue
T@"NSObject<OS_dispatch_queue>",&,N,V_oneTimeCodeAcceleratorQueue
remoteTextInputViewController
T@"PUICQuickboardRemoteTextInputViewController",W,N,V_remoteTextInputViewController
PUICQuickboardListAutofillItemCell
PUICQuickboardRemoteTextInputViewController
PUICQuickboardRemoteTextInputSessionDelegate
NSObject
PUICTextInputContext
UITextInputTraits
NSSecureCoding
NSCoding
PUICQuickboardRemoteTextInputSession
RTIInputSystemClientDelegate
PUICQuickboardViewServiceInterface
PUICQuickboardRemoteInterface
PUICQuickboardServiceController
PUICQuickboardViewControllerDelegate
PUICQuickboardRemoteTextInputViewControllerDelegate
CSLSOnWristMonitorDelegate
v40@0:8@16@24d32
B24@0:8@16
#16@0:8
@16@0:8
@24@0:8:16
@32@0:8:16@24
@40@0:8:16@24@32
B16@0:8
B24@0:8#16
B24@0:8:16
Vv16@0:8
Q16@0:8
^{_NSZone=}16@0:8
B24@0:8@"Protocol"16
@"NSString"16@0:8
v32@0:8@16@24
v32@0:8@"PUICQuickboardRemoteTextInputSession"16@"NSAttributedString"24
v32@0:8@16@"NSDictionary"24
@32@0:8@16@24
v24@0:8@?16
v16@0:8
@"PUICQuickboardRemoteTextInputSession"
q16@0:8
v24@0:8q16
v20@0:8B16
v24@0:8@16
v24@0:8@"NSString"16
@"UITextInputPasswordRules"16@0:8
v24@0:8@"UITextInputPasswordRules"16
@24@0:8@16
v24@0:8@"NSCoder"16
@24@0:8@"NSCoder"16
@"NSString"
@"NSAttributedString"
@"UIColor"
v32@0:8@16@?24
v24@0:8@"RTITextOperations"16
v32@0:8@"RTITextOperations"16@?<v@?Q>24
@"NSUUID"
@"RTIInputSystemClient"
@"RTIDocumentState"
@"RTIDocumentTraits"
@"<PUICQuickboardRemoteTextInputSessionDelegate>"
@"RTIInputSystemSourceSession"
@"NSMutableAttributedString"
v24@0:8@"PUICTextInputContext"16
v24@0:8@"NSAttributedString"16
v24@0:8@"NSDictionary"16
d32@0:8@16^@24
v32@0:8@"<PUICQuickboardController>"16@"NSAttributedString"24
v24@0:8@"<PUICQuickboardController>"16
@"UIImage"16@0:8
@"UIView"24@0:8@"<PUICQuickboardController>"16
v32@0:8@"<PUICQuickboardController>"16@"NSString"24
@"NSString"24@0:8@"<PUICQuickboardController>"16
d32@0:8@"<PUICQuickboardController>"16^@24
v32@0:8@"PUICQuickboardRemoteTextInputViewController"16@"NSAttributedString"24
v32@0:8@"PUICQuickboardRemoteTextInputViewController"16@"NSDictionary"24
v40@0:8@16@24@32
v40@0:8@"CSLSOnWristMonitor"16@"CSLSOnWristState"24@"CSLSOnWristState"32
v24@0:8^{__SecTask=}16
v32@0:8q16@24
@24@0:8q16
@32@0:8q16@24
d16@0:8
@"PUICTextInputContext"
@"NSMutableArray"
@"NSArray"
@"UILabel"
@"LAContext"
@"CSLSOnWristMonitor"
@"IMOneTimeCodeAccelerator"
@"NSDictionary"
@"NSObject<OS_dispatch_queue>"
@"PUICQuickboardRemoteTextInputViewController"
Failed to get appRecord for %{public}@: %{public}@
Failed to get appRecord from containingBundleRecord for %{public}@: %{public}@
A bundle identifier was not passed to quickboard, autofill suggestions may not work.
isPasscodeEnabled %d possible error %{public}@
requestWristDetectionDisabledStatusWithCompletion isWristDetectionDisabled %d possible error %{public}@
PUICQuickboardServiceController: cancelling dictation.
PUICQuickboardServiceController: host did enter background %@
Unable to get entitlements for client task. Error: %{public}@
Unable to get bundle id for client task. Error: %{public}@
Tried to select an item that should not exist in the QuickboardViewService
isPasscodeEnabled %d error %{public}@
Passcode entry failed. Do not return value to app. success %d error %{public}@
Passcode entry succeeded %d error %{public}@
<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE plist PUBLIC "-//Apple//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd">
<plist version="1.0">
<dict>
<key>com.apple.UIKit.vends-view-services</key>
<true/>
<key>com.apple.accounts.appleaccount.fullaccess</key>
<true/>
<key>com.apple.carousel.onWristMonitor.actions</key>
<array>
<string>monitor</string>
</array>
<key>com.apple.private.associated-domains</key>
<true/>
<key>com.apple.private.coreservices.canmaplsdatabase</key>
<true/>
<key>com.apple.private.imcore.imagent</key>
<true/>
<key>com.apple.security.exception.mach-lookup.global-name</key>
<array>
<string>com.apple.sharing.remote-text-editing</string>
<string>com.apple.SharedWebCredentials</string>
<string>com.apple.Carousel.wristmonitor</string>
</array>
<key>keychain-access-groups</key>
<array>
<string>com.apple.cfnetwork</string>
</array>
<key>platform-application</key>
<true/>
</dict>
</plist>
zPLR
