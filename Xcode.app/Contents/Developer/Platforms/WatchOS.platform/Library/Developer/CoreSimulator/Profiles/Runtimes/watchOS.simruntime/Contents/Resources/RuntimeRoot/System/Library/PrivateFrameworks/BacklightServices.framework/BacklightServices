@(#)PROGRAM:BacklightServices  PROJECT:BacklightServices-1
.@-C
%p backlight proxy setup, will set %u observers, perform %u requests
%p created alwaysOnSession:%{public}@ for updatedEnvironment:%@ withDelta:%@
%p destroying alwaysOnSession:%{public}@ for updatedEnvironment:%@ withDelta:%@
%p delegate:<%p %{public}@> environment:%{public}@ performBacklightSceneUpdate:%{public}@
%p delegate:<NULL> (will complete immediately) environment:%{public}@ performBacklightSceneUpdate:%{public}@
%p performDesiredFidelityRequest:%{public}@ alwaysOnSession:%{public}@ environment:<%p %{public}@>, createdSession=%{BOOL}u
%p performFrameSpecifiersRequest:%{public}@ alwaysOnSession:%{public}@ environment:<%p %{public}@>
failure in %{public}@ of <%{public}@:%p> (%{public}@:%i) : %{public}@
%@ not a FBSSceneIdentityToken for [%@ %@]
invalid FBSSceneIdentityToken from %{public}@ for [%@ %@]
%p completeWithDesiredFidelity should only be called once
%p did activate connection:%{public}@ for endpoint:%{public}@
%p could not find assertion:%@; %@
%p set assertion:%{public}@ for identifier:%{public}@
%p remove assertion:%{public}@ for identifier:%{public}@
BLSXPCAssertionService Reconnect
%p Reconnect assertions
%p %{public}@ oldIdentifier=%{public}@ is no longer acquired when handling the reconnection event, ignoring
%p %{public}@ oldIdentifier=%{public}@ has a new identifier, ignoring
%p Reacquiring assertion %p for state %{public}@
%p acquiringAssertionForDescriptor %{public}@
%p assertion:%{public}@ failed to acquire with connection error:%{public}@
%p assertion:%{public}@ failed to acquire with error:%{public}@
%p assertion:%{public}@ already has identifier:%{public}@
%p already aquired:%{public}@, ignoring
%p tell remote to cancel assertion:%{public}@
%p tell remote to restart timeout timer for assertion:%{public}@
%p failed to acquire assertion:%{public}@ with identifier:%{public}@ server error:%{public}@
%p acquired assertion:%{public}@ with identifier:%{public}@
%p will cancel assertion:%{public}@ with identifier:%{public}@
%p did cancel assertion:%{public}@ with identifier:%{public}@ error:%{public}@
%p paused assertion:%{public}@ with identifier:%{public}@
%p resumed assertion:%{public}@ with identifier:%{public}@
%p assertion acquired before service setup, pending:%{public}@
%p assertion invalidated (%{public}@) before service setup, no longer pending:%{public}@
%p assertion timeout restarted before service setup:%{public}@
%p service setup, will transition %u assertions
BLSDurationAttribute initialized without valid subclass
%p environment updated:%{public}@
  delta:%{public}@
  diff:%{public}@
  new:%{public}@
  old:%{public}@
  new:%{public}@
%p environment:%{public}@ updated sceneUpdate:%{public}@
%p environment:%{public}@ updated desiredFidelityRequest:%@
%p environment:%{public}@ updated frameSpecifiersRequest:%@
%p:%{public}@ settings visualState nil
%p scene settings change did not contain an update action, but did contain a ramp or animation complete action 
environment:%{public}@ 
actions:%{public}@
%p scene settings change animated but did not contain animationComplete action, transitionContext:%{public}@ scene:%{public}@
%p unexpectedly nil frameSpecifier. presentationDate:%{public}@ alwaysOnSession:%{public}@
%p will send response to updateAction:%{public}@
%p unable to send response to updateAction:%{public}@
%p bare scene update complete visualState:%{public}@ frameSpecifier:%{public}@
%p will send duration:%lf response to rampAction:%{public}@
%p unable to send duration:%lf response to rampAction:%{public}@
%p will send response to animationCompleteAction:%{public}@
%p unable to send response to animationCompleteAction:%{public}@
invalid date from %{public}@
%p sceneContentsDidUpdate should only be called once for update:%@
%p sceneContentsDidUpdate for update:%@
%p performBacklightRampWithDuration should only be called once for update:%@
%p performBacklightRampWithDuration:%lf for update:%@
%p ignoring performBacklightRampWithDuration:%lf for update:%@
sceneContentsAnimationDidComplete should only be called once for update:%@
%p sceneContentsAnimationDidComplete for update:%@
%p sceneContentsAnimationDidComplete but nil completion for update:%@
%p nil identifier for timeline:%{public}@
%p nil timelineIdentifier for entrySpecifier:%{public}@ frameSpecifier:%{public}@
frequency:%d for identifier:%@ must be > 0, using 1 instead
%p:%{public}@ frequency:%d -> requestedFidelity:%{public}@
%p:%{public}@ periodicInterval:%lf -> requestedFidelity:%{public}@
%p %{public}@ is not of type BLSAlwaysOnDateSpecifier from %{public}@
%p for assertion with explanation:%{public}@ cannot repeat the same exact attribute:%{public}@
%p BLSAssertion must be invalidated before dealloc:%{public}@
BLSAssertionService defaultService reset - should only occur during unit testing
%p did acquire assertion %{public}@, willNotify=%{BOOL}d
%p failed to acquire assertion %{public}@ with error:%{public}@
%p did pause assertion %{public}@
%p did resume assertion %{public}@
%p (warning) will cancel assertion %{public}@
%p did cancel assertion %{public}@ with error:%{public}@
performDesiredFidelityRequest desiredFidelity:Minutes - nil timeline array returned by delegate:%@
performDesiredFidelityRequest desiredFidelity:%{public}@ for frameSpecifiers:%{public}@
performDesiredFidelityRequest desiredFidelity:Minutes for empty frameSpecifiers
nil timeline array returned by delegate:%@
performFrameSpecifiersRequest dateSpecifers:%{public}@ for frameSpecifiers:%{public}@
BLSAttribute initialized without valid subclass
BLSAssertionIdentifier initialized with invalid clientPid:%d hostPid:%d
failed to decode explanation from %{public}@
unknown %@ class cannot init with %@
%p create environment:%@ for scene:%@
%p setDelegate:<%p %{public}@> hasDelegate:%{BOOL}u for environment:%{public}@
%p setSupportsAlwaysOn:%{BOOL}u for environment:%{public}@
%p setOptsOutOfProcessAssertions:%{BOOL}u for environment:%{public}@
%p invalidateAllTimelinesForReason:%{public}@ for environment:%{public}@
create BLSBacklightFBSSceneEnvironment for fbsScene:%@
BLSXPCBacklightProxy Reconnect
%p backlight proxy has observers - reconnect and begin observation.
%p Reset BLSXPCBacklightProxy for reconnect because there are no observers.
change request missing from encoding: %@
<BLSFrameSpecifierModel %p> tried to add empty specifiers %{public}@
<BLSFrameSpecifierModel %p> tried to purge specifiers before a nil date
<BLSFrameSpecifierModel %p> tried to purge specifiers on or after a nil date
%p:specifier:nil presentationDate:%{public}@ specifiers:%{public}@ firstSpecifier:%{public}@ startCompare:%ld, endCompare:%ld, presentationDateTimeInterval:%lf firstPresentationIntervalStartDateTimeInterval:%lf
will send desiredFidelity:%{public}@ response to desiredFidelityAction:%{public}@
unable to send desiredFidelity:%{public}@ response to desiredFidelityAction:%{public}@
will send specifiers:%{public}@ response to frameSpecifiersAction:%{public}@
unable to send specifiers:%{public}@ response to frameSpecifiersAction:%{public}@
respondToActions: start action count:%ld
respondToActions expect to handle action:%@
respondToActions unhandled action:%@
response failed for action:%@
one or more actions did not respond after %lf seconds; %@
respondToActions: remaining action count:%ld
decoded object:%{public}@ for %{public}@ is not a BLSAttribute class
unable to decode attribute for %{public}@
completeWithDateSpecifiers should only be called once for request:%@
BLSBacklightProxy setDefaultBacklightProxy replacing nil - no backlight instances created prior to server bringup - yay
BLSBacklightProxy defaultBacklightProxy reset - should only occur during unit testing
%@ is not of class BLSBacklightSceneVisualState
%@ is not of class NSDate
%@ is not of class NSNumber
percentComplete
didChange
entry
previousEntry
B32@?0@"BLSAlwaysOnTimelineEntrySpecifier"8Q16^B24
presentation interval
@16@?0@"BLSAlwaysOnTimelineEntrySpecifier"8
%@,%.2lf%% %@%s
entries
(%u)
v16@?0@"<BSDescriptionStringAppendTarget>"8
v16@?0@8
{ visualState:%u date:%u active:%u blanked:%u seed:%u }
time
animated
duration
timeline
userObject
Invalid condition not satisfying: %@
[self respondsToSelector:@selector(setTimelineIdentifier:)]
BLSAlwaysOnTimelineEntry.m
[self respondsToSelector:@selector(setRequestedFidelity:)]
<nil title>
no descriptive state data or state data is not in property list format, please file a radar, description = %@
InactiveOn
ActiveOn
identityToken
BSServiceConnectionEndpoint
_bs_assert_object != nil
BLSXPCAssertionService.m
[_bs_assert_object isKindOfClass:BSServiceConnectionEndpointClass]
BLSXPCAssertionService.requestQueue
v16@?0@"BSServiceConnection<BSServiceConnectionContext>"8
v16@?0@"<BSServiceConnectionConfiguring>"8
v8@?0
v16@?0@"<BLSXPCAssertionServiceHostInterface>"8
%@ does not support replaceWithService: %@
only BLSAssertion objects supported by pending service not:%@
replacement service has been set, should not be invalidating:%@
replacement service has been set, should not be restarting timeout timer for:%@
en_US_POSIX
HH:mm:ss.SSS MM/dd
<Distant Past>
<Distant Future>
%@ (%@ ago)
%@ (in %@)
HH:mm:ss.SSS
%@ : %.3fs duration
%llu approx:%@
%@ approx:%@
%@ %@
v17@?0@"FBSSceneTransitionContext"8{?=b1b1b1b1b1b1}16
@16@?0@"BSAction"8
v16@?0d8
date
fidelity
@"NSObject"8@?0
q8@?0
previous
specifier
trigger
sceneContentsUpdated
didStartBacklightRamp
animationComplete
backlightRampNonNil
animationCompletionNonNil
q24@?0@"BLSAlwaysOnFrameSpecifier"8@"BLSAlwaysOnFrameSpecifier"16
v24@?0@"NSDate"8^B16
v28@?0@"NSDate"8B16^B20
B32@?0@"NSDate"8Q16^B24
@16@?0@"NSDate"8
q24@?0@"BLSAlwaysOnTimelineUnconfiguredEntry"8@"BLSAlwaysOnTimelineUnconfiguredEntry"16
BLSAssertion must be invalidated before dealloc:%@
BLSAssertion.m
isAcquired
acquiredTimestamp
acquiredDuration
pendingAcquisition
isPaused
descriptor
identifier
service
observerCount
BLSAssertion cannot be acquired after invalidation:%@
v16@?0@"<BLSAssertionObserving>"8
not acquired
client requested
server acknowledged
model
<%p:%@>
environment
@16@?0@"BLSAlwaysOnFrameSpecifier"8
@16@?0@"BLSAlwaysOnDateSpecifier"8
%@, fidelity:%@
com.apple.BacklightServices
clientPid
hostPid
count
com.apple.BacklightServices.backlight
Off/Inactive
On/Active
Unknown
Idle
MotionGesture
Button
DisplayTap
DisplaySwipe
DisplayLongPress
DisplayCover
ButtonRotation
ChargingStatus
Application
Assertion
ConfigChange
requestedState
explanation
timestamp
source
metadata
<NULL>
metadataClass
BLSBacklightChangeSourceEventMetadata is an abstract class
position
Left
Right
Down
direction
active
liveUpdating
unrestrictedFramerateUpdates
visualState
presentationDate
frameSpecifier
optsOutOfProcessAssertions
NULL
v16@?0@"FBSMutableSceneClientSettings"8
@"BLSBacklightFBSSceneEnvironment"8@?0
BLSXPCBacklightProxy.m
touchTarget
B8@?0
state
previousState
request
BLSSharedWorkloop
assertions
backlight
budget
flipbook
scenes
timelines
userInitiated
Full
adjustedLuminance
first
last
specifiers
B32@?0@"BLSAlwaysOnFrameSpecifier"8Q16^B24
v16@?0q8
v16@?0@"NSArray"8
B16@?0@"BLSAttribute"8
B32@?0@"BLSAttribute"8Q16^B24
attributes
B24@?0Q8@"NSObject<OS_xpc_object>"16
v24@?0Q8^v16
interval
reset
restart
clearInteraction
com.apple.BacklightServices.assertions
attempting to replace backlightProxy:%@ which does not respond to replaceWithBacklightProxy:
Unspecified
Never
Minutes
Seconds
Milliseconds
@16@?0@8
BLSBacklightSceneVisualState
NSDate
NSNumber
zPLR
zPLR
zPLR
BLSPendingBacklightProxy
BLSBacklightProxy
BLSBacklightStateObservable
NSObject
BLSAlwaysOnTimelineEntrySpecifier
NSCopying
BLSAlwaysOnFrameSpecifier
BLSAlwaysFillFlipbookAttribute
BacklightServices
BLSBacklightSceneEnvironmentUpdater
BLSAlwaysOnTimelineEntry
NSMutableCopying
BLSAlwaysOnTimelineUnconfiguredEntry
BLSSceneAttribute
BSXPCCoding
BLSEnableDynamicWristRaiseAttribute
BLSValidWhenBacklightInactiveAttribute
BLSIgnoreWhenBacklightInactivatesAttribute
BLSCancelWhenBacklightInactivatesAttribute
BLSDisableRaiseGestureAttribute
BLSDesiredFidelityRequest
BLSXPCAssertionService
BLSAssertionService
BLSXPCAssertionServiceClientInterface
BLSDisableBacklightWatchdogsAttribute
BLSPendingAssertionService
BLSRequestUnrestrictedFramerateAttribute
BLSPeekingEnumerator
BLSPeeking
BLSPseudoFlipbookAttribute
BLSDurationAttribute
BLSInvalidationDurationAttribute
BLSWarningDurationAttribute
BLSTimeoutDurationAttribute
BLSBacklightFBSSceneEnvironmentDiffAction
BLSBacklightFBSSceneEnvironmentDiffActionNullDelegate
BLSBacklightFBSSceneEnvironmentDiffActionDelegate
BLSEnableCoverGestureAttribute
BLSIgnoreCoverGestureAttribute
BLSDisableLongCoverGestureAttribute
BLSAlwaysOnDateSpecifier
NSSecureCoding
NSCoding
BLSBacklightSceneUpdate
BLSRequestLiveUpdatingAttribute
BLSAlwaysOnTimeline
BLSAlwaysOnFrequencyPerMinuteTimeline
BLSAlwaysOnPeriodicTimeline
BLSAlwaysOnExplicitEntriesTimeline
BLSFrameSpecifiersRequestResponse
BLSFrameSpecifiersRequestAction
BLSInvalidateFrameSpecifiersAction
BLSDisableAlwaysOnHoldThroughAttribute
BLSDisableAlwaysOnSwipeThroughAttribute
BLSDisableAlwaysOnTapThroughAttribute
BLSDisableAlwaysOnHoldGestureAttribute
BLSDisableAlwaysOnSwipeGestureAttribute
BLSDisableInactiveTapGestureAttribute
BLSAssertion
BLSAssertionServiceResponding
BLSAsserting
BSCancellable
BSInvalidatable
BLSAlwaysOnSession
BLSPauseWhenSceneBackgroundAttribute
BLSAttribute
BLSFidelityThreshold
BLSAssertionIdentifier
BLSXPCBacklightProxyHostInterface
BLSXPCBacklightProxyClientInterface
BLSXPCBacklightProxySpecification
BLSBacklightChangeRequest
BLSBacklightChangeSourceEventMetadata
BLSBacklightChangeSourceEventDisplayTapMetadata
BLSBacklightChangeSourceEventDisplaySwipeMetadata
BLSBacklightChangeSourceEventDisplayLongPressMetadata
BLSBacklightFBSSceneEnvironment
BLSBacklightSceneEnvironment_Private
BLSBacklightSceneEnvironment
BacklightServices_Internal
BLSTransparentFlipbookAttribute
BLSXPCBacklightProxy
BLSBacklightSceneUpdateContext
BLSBacklightSceneClientSettings
BLSTouchLockAttribute
BLSBacklightChangeEvent
BLSSharedWorkloop
BLSForceActiveAttribute
BLSDisableCommitOnWakeMeasurementAttribute
BLSBacklightSceneVisualState
BLSDesiredFidelityResponse
BLSDesiredFidelityAction
BLSDisableLowerGestureAttribute
BLSFrameSpecifierModel
BLSDisableAlwaysOnAttribute
BLSBacklightFBSSceneEnvironmentActionHandler
BLSDisableFlipbookAttribute
BLSAssertionDescriptor
BLSBacklightSceneSettingsDiffInspector
BLSFrameSpecifiersRequest
BLSPreventBacklightIdleAttribute
BLSXPCAssertionServiceHostInterface
BLSXPCAssertionServiceSpecification
BLSBacklight
BLSRuntime
BLSBacklightSceneUpdateAction
BLSBacklightSceneUpdateBacklightRampResponse
BLSBacklightSceneUpdateBacklightRampAction
BLSBacklightSceneUpdateAnimationCompleteAction
BLSBacklightSceneSettings
BacklightServicesInternal
init
array
initWithOptions:capacity:
backlightState
isTransitioning
isAlwaysOnEnabled
addObserver:
addObject:
removeObserver:
removeObject:
performChangeRequest:
allObjects
count
countByEnumeratingWithState:objects:count:
isEqual:
class
self
performSelector:
performSelector:withObject:
performSelector:withObject:withObject:
isProxy
isKindOfClass:
isMemberOfClass:
conformsToProtocol:
respondsToSelector:
retain
release
autorelease
retainCount
zone
hash
superclass
description
debugDescription
TQ,R
T#,R
T@"NSString",R,C
Tq,R,N
transitioning
TB,R,N,GisTransitioning
alwaysOnEnabled
TB,R,N,GisAlwaysOnEnabled
replaceWithBacklightProxy:
.cxx_destruct
_requests
_observers
_replacementBacklightProxy
_lock
_backlightState
timelineEntry
compare:
requestedFidelity
builderWithObject:
appendDouble:withName:decimalPrecision:
didChange
appendBool:withName:
appendObject:withName:
appendPointer:withName:
build
percentComplete
numberWithDouble:
initWithTimelineEntry:percentComplete:previousTimelineEntry:didChange:
copyWithZone:
setRequestedFidelity:
grantedFidelity
setGrantedFidelity:
previousTimelineEntry
setDidChange:
_requestedFidelity
_didChange
_timelineEntry
_grantedFidelity
_percentComplete
_previousTimelineEntry
TB,V_didChange
Tq,V_grantedFidelity
T@"BLSAlwaysOnTimelineEntry",R,V_timelineEntry
Td,R,V_percentComplete
T@"BLSAlwaysOnTimelineEntry",R,V_previousTimelineEntry
copy
arrayWithObjects:count:
presentationTime
initWithStartDate:duration:
initWithTimelineEntrySpecifiers:presentationInterval:
timelineIdentifier
indexOfObjectPassingTest:
objectAtIndex:
presentationInterval
bls_loggingString
bls_shortLoggingString
entrySpecifierForTimelineIdentifier:
timeIntervalSinceDate:
fidelityForUpdateInterval:
startDate
endDate
isEqualToDate:
entrySpecifiers
initWithStartDate:endDate:
appendString:withName:
stringWithFormat:
appendArraySection:withName:skipIfEmpty:objectTransformer:
appendArraySection:withName:skipIfEmpty:
isEqualToArray:
initWithArray:copyItems:
loggingStringForPresentationInterval:
shortLoggingStringForPresentationInterval:
initWithTimelineEntry:previousTimelineEntry:
correctedSpecifierWithNextSpecifier:
_entrySpecifiers
_presentationInterval
T@"NSArray",R,V_entrySpecifiers
T@"NSDateInterval",R,V_presentationInterval
Tq,R
alwaysFillFlipbook
appendFormat:
appendCustomFormatWithName:block:
sortKeys
sortedArrayUsingSelector:
firstObject
subarrayWithRange:
lastObject
arrayByAddingObjectsFromArray:
setWithArray:
appendCollection:withName:itemBlock:
bls_appendBoundedCollection:withName:maximumItems:itemBlock:
visualState
updateFidelity
adjustedLuminance
alwaysOnSession
invalidate
setAlwaysOnSession:
delegate
environment:performBacklightSceneUpdate:
sceneContentsDidUpdate
context
isAnimated
performBacklightRampWithDuration:
sceneContentsAnimationDidComplete
identifier
performDesiredFidelityRequest:
completeWithDesiredFidelity:
performFrameSpecifiersRequest:
completeWithDateSpecifiers:
initWithEnvironment:
updatedEnvironment:withDelta:backlightSceneUpdate:
environment:performDesiredFidelityRequest:
environment:performFrameSpecifiersRequest:
appendObject:withName:skipIfNil:
userObject
initWithPresentationTime:requestedFidelity:animated:duration:timelineIdentifier:userObject:
loggingStringForPresentationTime:
shortLoggingStringForPresentationTime:
mutableCopyWithZone:
setAnimated:
duration
setDuration:
setTimelineIdentifier:
setUserObject:
_animated
_presentationTime
_duration
_timelineIdentifier
_userObject
Tq,N,V_requestedFidelity
animated
TB,N,GisAnimated,V_animated
Td,N,V_duration
T@"<NSObject>",&,N,V_userObject
T@"<NSObject><NSCopying>",&,N,V_timelineIdentifier
T@"NSDate",R,N,V_presentationTime
UTF8String
entryForPresentationTime:withRequestedFidelity:
entryForPresentationTime:withRequestedFidelity:animated:userObject:
entryForPresentationTime:
entryForPresentationTime:animated:userObject:
Tq,D,N
T@"<NSObject><NSCopying>",&,D,N
TB,D,N,GisAnimated
Td,D,N
T@"<NSObject>",&,D,N
length
propertyList:isValidForFormat:
dataWithPropertyList:format:options:error:
bytes
identityToken
initWithSceneIdentityToken:
stringRepresentation
builder
appendPointer:
appendObject:
sceneIdentityToken
decodeObjectOfClass:forKey:
encodeObject:forKey:
supportsSecureCoding
initWithXPCDictionary:
encodeWithXPCDictionary:
fallbackXPCEncodableClass
initWithFBSScene:
initWithCoder:
encodeWithCoder:
_sceneIdentityToken
T@"FBSSceneIdentityToken",R,N,V_sceneIdentityToken
enableDynamicWristRaise
ignoreWhenBacklightInactivates
cancelWhenBacklightInactivates
disableRaiseGesture
disableWristUpGesture
initWithCompletion:
_completion
_lock_completed
defaultShellMachName
endpointForMachName:service:instance:
nullEndpointForService:instance:
defaultEndpoint
initWithEndpoint:
strongToWeakObjectsMapTable
connectionWithEndpoint:
serviceQuality
serial
serviceClass
relativePriority
serviceClass:relativePriority:
setServiceQuality:
setTargetQueue:
interface
setInterface:
setInterfaceTarget:
activate
setInterruptionHandler:
setInvalidationHandler:
configureConnection:
dealloc
objectForKey:
removeObjectForKey:
setObject:forKey:
remoteTarget
objectEnumerator
addObjectsFromArray:
removeAllObjects
setIdentifier:
acquisitionState
descriptor
acquireAssertionForDescriptor:error:
isBSServiceConnectionError
localizedDescription
acquireAssertion:
serviceFailedToAcquireWithError:
isAcquired
cancelAssertion:withError:
restartAssertionTimeoutTimer:
raise:format:
serviceDidAcquire
serviceWillCancel
serviceDidCancelWithError:
serviceDidPause
serviceDidResume
replaceWithService:
assertionAcquired:
assertion:failedToAcquireWithError:
assertionPaused:
assertionResumed:
assertionWillCancel:
assertionDidCancel:withError:
_requestQueue
_connection
_assertions
_assertionsToReacquire
disableWatchdogs
setService:
_assertionsToAcquire
_replacementService
requestUnrestrictedFramerateForFBSScene:
requestUnrestrictedFramerateForFBSSceneIdentityToken:
timeIntervalSinceNow
initWithTimeIntervalSinceNow:
initWithLocaleIdentifier:
setLocale:
setDateFormat:
setUnitsStyle:
setAllowedUnits:
distantPast
distantFuture
stringFromDate:
stringFromDate:toDate:
bls_compare:withEpsilon:
bls_machContinuousTime
bls_initWithMachContinuousTime:
bls_initWithBSContinuousMachTime:
bls_isOnOrAfter:andOnOrBefore:
bls_isOnOrAfter:andOnOrBefore:withEpsilon:
TQ,R,N
dateWithTimeIntervalSinceNow:
bls_machContinuousStartTime
bls_machContinuousEndTime
bls_machDuration
bls_initWithStartMachContinuousTime:endMachContinuousTime:
nextObject
peekingEnumeratorWithEnumerator:
peekNextObject
_enumerator
_peekedObject
peekingEnumerator
usePseudoFlipbook
initWithDuration:
appendTimeInterval:withName:decomposeUnits:
appendDouble:
decodeDoubleForKey:
encodeDouble:forKey:
cancelAfterInterval:
warnAfterInterval:
timeoutAfterInterval:
canBePaused
Td,R,N,V_duration
inspectDiff:
backlightSceneEnvironment
presentationDate
bls_visualState
bls_presentationDate
frameSpecifier
updater
performChangesWithTransitionContext:environmentDelta:performActionsBlock:
settings
actions
bs_map:
initWithRampDuration:
sendResponse:
response
event
canSendResponse
isTouchTargetable
initWithVisualState:previousVisualState:frameSpecifier:animated:triggerEvent:touchTargetable:sceneContentsUpdated:performBacklightRamp:sceneContentsAnimationComplete:
desiredFidelityRequestFromAction:
frameSpecifiersRequestFromAction:
performActionsForUpdatedFBSScene:settingsDiff:fromSettings:transitionContext:
setDelegate:
_diffInspector
_delegate
T@"<BLSBacklightFBSSceneEnvironmentDiffActionDelegate>",W,V_delegate
enableCoverGesture
ignoreCoverGesture
disableLongCoverGesture
initWithDate:fidelity:
appendInteger:
builderWithObject:ofExpectedClass:
date
appendObject:counterpart:
fidelity
appendInteger:counterpart:
isEqual
dateWithTimeIntervalSinceReferenceDate:
timeIntervalSinceReferenceDate
decodeIntForKey:
encodeInteger:forKey:
TB,R
newSpecifierWithMaxFidelity:
_date
_fidelity
T@"NSDate",R,N,V_date
Tq,R,N,V_fidelity
initWithVisualState:previousVisualState:frameSpecifier:animated:triggerEvent:touchTargetable:
previousVisualState
triggerEvent
appendBool:withName:ifEqualTo:
areSceneContentsUpdated
didStartBacklightRamp
isAnimationComplete
_sceneContentsUpdatedBlock
_performBacklightRampBlock
_sceneContentsAnimationCompleteBlock
_lock_sceneContentsUpdated
_lock_didStartBacklightRamp
_lock_animationComplete
_context
T@"BLSBacklightSceneUpdateContext",R,N,V_context
sceneContentsUpdated
TB,R,N,GareSceneContentsUpdated
TB,R,N
animationComplete
TB,R,N,GisAnimationComplete
requestLiveUpdatingForFBSScene:
requestLiveUpdatingForFBSSceneIdentityToken:
initWithIdentifier:configure:
initWithPerMinuteUpdateFrequency:identifier:configure:
initWithUpdateInterval:startDate:identifier:configure:
initWithEntries:identifier:configure:
reverseObjectEnumerator
unconfiguredEntriesForDateInterval:previousEntry:
requestedFidelityForStartEntryInDateInterval:withPreviousEntry:
mutableCopy
replaceObjectAtIndex:withObject:
arrayWithCapacity:
configureEntry:previousEntry:
configuredEntriesForDateInterval:previousEntry:shouldConstructStartEntry:
dateByAddingTimeInterval:
sortedArrayUsingComparator:
dictionary
laterDate:
setObject:forKeyedSubscript:
objectForKeyedSubscript:
allValues
coalescedSpecifierFromEnumerator:forDateInterval:framesPerSecond:previousSpecifier:
uncoalescedFrameSpecifiersForTimelines:dateInterval:shouldConstructStartSpecifier:framesPerSecond:previousSpecifier:
coalesceSpecifiers:forDateInterval:framesPerSecond:previousSpecifier:
emptyTimelineWithIdentifier:
timelineWithPerMinuteUpdateFrequency:identifier:configure:
everyMinuteTimelineWithIdentifier:configure:
timelineWithUpdateInterval:startDate:identifier:configure:
timelineWithEntries:identifier:configure:
rangeOfEntries:forDateInterval:shouldIncludePrevious:
constructFrameSpecifiersForTimelines:dateInterval:shouldConstructStartSpecifier:framesPerSecond:previousSpecifier:
_identifier
_configureEntryBlock
T@"<NSObject><NSCopying>",R,N,V_identifier
autoupdatingCurrentCalendar
setSecond:
components:fromDate:
second
nanosecond
nextDateAfterDate:matchingComponents:options:
dateByAddingUnit:value:toDate:options:
enumerateDatesStartingAfterDate:matchingComponents:options:usingBlock:
removeObjectsInRange:
_calendar
_frequencyPerMinute
_periodicInterval
_periodicStart
_explicitEntries
setObject:forSetting:
initWithInfo:error:
info
objectForSetting:
initWithCapacity:
initWithDateSpecifiers:
dateSpecifiers
T@"NSArray",R,N
setFlag:forSetting:
responderWithHandler:
setQueue:
setTimeout:
initWithInfo:responder:
boolForSetting:
initWithDateInterval:previousPresentationDate:shouldReset:completion:
dateInterval
previousPresentationDate
shouldReset
T@"NSDateInterval",R,N
T@"NSDate",R,N
initWithReason:
reason
T@"NSString",R,N
disableHoldThrough
disableSwipeThrough
disableTapThrough
disableHoldGesture
disableSwipeGesture
disableTapGesture
initWithExplanation:attributes:
acquireWithObserver:
service
appendInteger:withName:
explanation
attributes
cancel
isHostProcess
assertionWasAcquired:
assertion:didFailToAcquireWithError:
assertionDidPause:
assertionDidResume:
assertion:didCancelWithError:
acquireWithExplanation:observer:attributes:
setDefaultService:
acquired
TB,R,N,GisAcquired
T@"BLSAssertionDescriptor",R,N
T@"BLSAssertionIdentifier",&,N
isPaused
isActive
restartTimeoutTimer
_lock_paused
_lock_invalidated
_lock_acquisitionState
_lock_acquiredMachContinuousTime
_descriptor
_service
T@"<BLSAssertionService>",&,V_service
T@"NSString",R,C,N
T@"NSArray",R,C,N
paused
TB,R,N,GisPaused
active
TB,R,N,GisActive
T@"BLSAssertionDescriptor",R,N,V_descriptor
specifierAtPresentationDate:
environment
environment:timelinesForDateInterval:previousSpecifier:
bls_boundedDescriptionWithMax:
specifierForPresentationDate:
setModel:
model
addSpecifiers:
bls_boundedDescriptionWithMax:transformer:
_environment
_model
T@"BLSFrameSpecifierModel",&,V_model
T@"<BLSBacklightSceneEnvironment>",R,W,V_environment
pauseWhenBackgroundFBSScene:
secondsFidelityThreshold
animationCoalesceThreshold
appendInt:withName:
appendUInt64:withName:
appendUnsignedInteger:
clientPid
hostPid
initWithClientPid:hostPid:count:
decodeInt32ForKey:
decodeInt64ForKey:
encodeInt32:forKey:
encodeInt64:forKey:
nextCount
_hostPid
_clientPid
_count
Ti,R,N,V_hostPid
Ti,R,N,V_clientPid
TQ,R,N,V_count
userInteractive
interfaceWithIdentifier:
getBacklightState
beginObservation
endObservation
protocolForProtocol:
setServer:
didCompleteUpdateToState:forEvent:
didChangeAlwaysOnEnabled:
setClient:
T@"BSServiceQuality",R,C,N
T@"BSServiceInterface",R,C,N
appendString:
requestedActivityState
timestamp
sourceEvent
sourceEventMetadata
stringWithUTF8String:
initWithRequestedActivityState:explanation:timestamp:sourceEvent:sourceEventMetadata:
decodeIntegerForKey:
decodeObjectOfClasses:forKey:
_requestedActivityState
_explanation
_timestamp
_sourceEvent
_sourceEventMetadata
Tq,R,N,V_requestedActivityState
T@"NSString",R,C,N,V_explanation
TQ,R,N,V_timestamp
Tq,R,N,V_sourceEvent
T@"BLSBacklightChangeSourceEventMetadata",R,N,V_sourceEventMetadata
appendPoint:withName:
appendCGPoint:
position
initWithPosition:
decodePointForKey:
encodePoint:forKey:
_position
T{CGPoint=dd},R,N,V_position
direction
initWithDirection:
_direction
Tq,R,N,V_direction
_setFBSScene:
_FBSScene
descriptionDescribedBySettings:
bls_isDelegateActive
bls_isLiveUpdating
bls_hasUnrestrictedFramerateUpdates
optsOutOfProcessAssertions
bls_setHasDelegate:
updateClientSettingsWithBlock:
bls_isBlanked
clientSettings
bls_supportsAlwaysOn
bls_setSupportsAlwaysOn:
bls_optsOutOfProcessAssertions
bls_setOptsOutOfProcessAssertions:
setWithObject:
sendActions:
createEnvironmentForFBSScene:
invalidateAllTimelinesForReason:
isDelegateActive
isDisplayBlanked
isLiveUpdating
hasUnrestrictedFramerateUpdates
supportsAlwaysOn
setSupportsAlwaysOn:
T@"<BLSBacklightSceneEnvironmentDelegate>",&
delegateActive
TB,R,GisDelegateActive
displayBlanked
TB,R,GisDisplayBlanked
T@"BLSBacklightSceneVisualState",R
T@"BLSAlwaysOnFrameSpecifier",R
T@"BLSAlwaysOnSession",R
liveUpdating
TB,R,GisLiveUpdating
unrestrictedFramerateUpdates
TB,R,GhasUnrestrictedFramerateUpdates
T@"NSDate",R
T@"BLSAlwaysOnSession",&
T@"BLSBacklightSceneEnvironmentUpdater",R
setOptsOutOfProcessAssertions:
_alwaysOnSession
_updater
_fbsScene
fbsScene
T@"FBSScene",W,G_FBSScene,S_setFBSScene:,V_fbsScene
T@"BLSAlwaysOnSession",&,V_alwaysOnSession
T@"BLSBacklightSceneEnvironmentUpdater",R,V_updater
backlightSceneEnvironmentWithCreationBlock:
transparentFlipbook
integerValue
backlight:didCompleteUpdateToState:forEvent:
boolValue
backlight:didChangeAlwaysOnEnabled:
_callbackQueue
_lock_connection
_isBacklightStateCached
_isAlwaysOnEnabled
_isAlwaysOnEnabledCached
appendBool:
appendBool:counterpart:
_touchTargetable
_visualState
_previousVisualState
_frameSpecifier
_triggerEvent
T@"BLSBacklightSceneVisualState",R,N,V_visualState
T@"BLSBacklightSceneVisualState",R,N,V_previousVisualState
T@"BLSAlwaysOnFrameSpecifier",R,N,V_frameSpecifier
TB,R,N,GisAnimated,V_animated
T@"BLSBacklightChangeEvent",R,N,V_triggerEvent
touchTargetable
TB,R,N,GisTouchTargetable,V_touchTargetable
otherSettings
flagForSetting:
bls_hasDelegate
TB,D,N,Gbls_hasDelegate,Sbls_setHasDelegate:
TB,D,N,Sbls_setSupportsAlwaysOn:
TB,D,N,Sbls_setOptsOutOfProcessAssertions:
touchLock
eventID
state
previousState
changeRequest
initWithEventID:state:previousState:changeRequest:
_eventID
_state
_previousState
_changeRequest
TQ,R,N,V_eventID
Tq,R,N,V_state
Tq,R,N,V_previousState
T@"BLSBacklightChangeRequest",R,N,V_changeRequest
workloop
dispatchWithQOSClass:block:
serialQueueWithQOSClass:label:
initWithUserInitiated:
userInitiated
decodeBoolForKey:
encodeBool:forKey:
forceActive
forceActiveUserInitiated:
_userInitiated
TB,R,N,V_userInitiated
disableMeasurement
initWithActiveAppearance:updateFidelity:adjustedLuminance:
activeAppearance
newVisualStateWithUpdateFidelity:
expectedFidelity
_activeAppearance
_updateFidelity
_adjustedLuminance
Tq,R,N,V_activeAppearance
Tq,R,N,V_updateFidelity
Tq,R,N,V_adjustedLuminance
numberWithInteger:
initWithDesiredFidelity:
desiredFidelity
disableLowerGesture
disableWristDownGesture
appendUnsignedInteger:withName:
removeLastObject
indexOfObjectWithOptions:passingTest:
bls_boundedDescriptionWithTransformer:
specifiers
purgeAllButOneSpecifiersBeforeDate:
purgeAllSpecifiersOnOrAfterDate:
_specifiers
T@"NSArray",R
disableAlwaysOn
bls_boundedDescription
_expectsResponse
respondToActions:forFBSScene:fromTransitionContext:
disableFlipbook
bs_containsObjectPassingTest:
arrayByAddingObject:
containsObject:
indexesOfObjectsPassingTest:
objectsAtIndexes:
attributeOfClass:
attributesOfClasses:
_attributes
T@"NSArray",R,C,N,V_attributes
observeOtherSetting:withBlock:
inspectDiff:withContext:
_shouldReset
_dateInterval
_previousPresentationDate
T@"NSDateInterval",R,N,V_dateInterval
T@"NSDate",R,N,V_previousPresentationDate
TB,R,N,V_shouldReset
initWithRestartTimerOnInvalidation:clearUserInteraction:
restartTimerOnInvalidation
clearUserInteraction
preventIdle
preventIdleAndRestartTimerOnInvalidation
preventIdleClearUserInteractionAndRestartTimerOnInvalidation
_restartTimerOnInvalidation
_clearUserInteraction
TB,R,N,V_restartTimerOnInvalidation
TB,R,N,V_clearUserInteraction
destroyAssertion:
sharedBacklight
setDefaultBacklightProxy:
_backlightProxy
setIsHostProcess:
TB,N
initWithBacklightChangeEvent:animated:touchTargetable:completion:
T@"BLSBacklightChangeEvent",R,N
TB,R,N,GisAnimated
TB,R,N,GisTouchTargetable
doubleValue
rampDuration
Td,R,N
bs_mapNoNulls:
unsignedLongLongValue
bls_isAlwaysOnEnabledForEnvironment
bls_renderSeed
bls_delegateActive
TB,R,N,Gbls_isDelegateActive
bls_blanked
TB,R,N,Gbls_isBlanked
T@"BLSBacklightSceneVisualState",R,N
bls_alwaysOnEnabledForEnvironment
TB,R,N,Gbls_isAlwaysOnEnabledForEnvironment
bls_liveUpdating
TB,R,N,Gbls_isLiveUpdating
bls_unrestrictedFramerateUpdates
TB,R,N,Gbls_hasUnrestrictedFramerateUpdates
numberWithUnsignedLongLong:
bls_setDelegateActive:
bls_setBlanked:
bls_setVisualState:
bls_setPresentationDate:
bls_setAlwaysOnEnabledForEnvironment:
bls_setRenderSeed:
bls_setLiveUpdating:
bls_setUnrestrictedFramerateUpdates:
TB,D,N,Gbls_isDelegateActive,Sbls_setDelegateActive:
TB,D,N,Gbls_isBlanked,Sbls_setBlanked:
T@"BLSBacklightSceneVisualState",&,D,N,Sbls_setVisualState:
T@"NSDate",&,D,N,Sbls_setPresentationDate:
TB,D,N,Gbls_isAlwaysOnEnabledForEnvironment,Sbls_setAlwaysOnEnabledForEnvironment:
TQ,N,Sbls_setRenderSeed:
TB,N,Gbls_isLiveUpdating,Sbls_setLiveUpdating:
TB,N,Gbls_hasUnrestrictedFramerateUpdates,Sbls_setUnrestrictedFramerateUpdates:
B24@0:8@16
#16@0:8
@16@0:8
@24@0:8:16
@32@0:8:16@24
@40@0:8:16@24@32
B16@0:8
B24@0:8#16
B24@0:8:16
Vv16@0:8
Q16@0:8
^{_NSZone=}16@0:8
B24@0:8@"Protocol"16
@"NSString"16@0:8
v24@0:8@16
q16@0:8
v24@0:8@"<BLSBacklightStateObserving>"16
@24@0:8@16
@"NSError"24@0:8@"BLSBacklightChangeRequest"16
v16@0:8
@"NSMutableArray"
@"NSHashTable"
@"<BLSBacklightProxy>"
{os_unfair_lock_s="_os_unfair_lock_opaque"I}
@24@0:8^{_NSZone=}16
@44@0:8@16d24@32B40
q24@0:8@16
v24@0:8q16
d16@0:8
v20@0:8B16
@"BLSAlwaysOnTimelineEntry"
@32@0:8@16@24
@"NSArray"
@"NSDateInterval"
v48@0:8@16@24q32@?40
v33@0:8@16{?=b1b1b1b1b1b1}24@25
v32@0:8@16@24
@60@0:8@16q24B32d36@44@52
v24@0:8d16
@"NSDate"
@"<NSObject><NSCopying>"
@"<NSObject>"
@32@0:8@16q24
@44@0:8@16q24B32@36
@36@0:8@16B24@28
@24@0:8@"NSObject<OS_xpc_object>"16
v24@0:8@"NSObject<OS_xpc_object>"16
@"FBSSceneIdentityToken"
@24@0:8@?16
Vv24@0:8@16
Vv32@0:8@16@24
Vv24@0:8@"<BLSAssertionServiceResponding>"16
Vv32@0:8@"<BLSAssertionServiceResponding>"16@"NSError"24
v24@0:8@"<BLSAssertionService>"16
Vv24@0:8@"BLSAssertionIdentifier"16
Vv32@0:8@"BLSAssertionIdentifier"16@"NSError"24
@"NSObject<OS_dispatch_queue>"
@"BSServiceConnection"
@"NSMapTable"
@"NSMutableSet"
@"<BLSAssertionService>"
@24@0:8Q16
@24@0:8d16
q32@0:8@16d24
B32@0:8@16@24
B40@0:8@16@24d32
@32@0:8Q16Q24
@"NSEnumerator"
v48@0:8@16@24@32@40
@"BLSBacklightSceneSettingsDiffInspector"
@"<BLSBacklightFBSSceneEnvironmentDiffActionDelegate>"
v33@0:8@16{?=b1b1b1b1b1b1}24@?25
v33@0:8@"FBSSceneTransitionContext"16{?=b1b1b1b1b1b1}24@?<v@?@"FBSSceneTransitionContext"{?=b1b1b1b1b1b1}>25
v24@0:8@"NSCoder"16
@24@0:8@"NSCoder"16
@24@0:8q16
@80@0:8@16@24@32B40@44B52@?56@?64@?72
@"BLSBacklightSceneUpdateContext"
@40@0:8q16@24@?32
@32@0:8@16@?24
@48@0:8d16@24@32@?40
@40@0:8@16@24@?32
{_NSRange=QQ}36@0:8@16@24B32
@52@0:8@16@24B32d36@44
@48@0:8@16@24d32@40
q32@0:8@16@24
@36@0:8@16@24B32
@"NSCalendar"
@44@0:8@16@24B32@?36
@40@0:8@16@24@32
@"BLSAssertionDescriptor"16@0:8
@"BLSAssertionIdentifier"16@0:8
v24@0:8@"BLSAssertionIdentifier"16
Vv24@0:8@"NSError"16
@"BLSAssertionIdentifier"
@"BLSAssertionDescriptor"
@"<BLSBacklightSceneEnvironment>"
@"BLSFrameSpecifierModel"
q24@0:8d16
@32@0:8i16i20Q24
i16@0:8
@"NSNumber"16@0:8
Vv32@0:8@"NSNumber"16@"BLSBacklightChangeEvent"24
Vv24@0:8@"NSNumber"16
@56@0:8q16@24Q32q40@48
@"NSString"
@"BLSBacklightChangeSourceEventMetadata"
@32@0:8{CGPoint=dd}16
{CGPoint=dd}16@0:8
{CGPoint="x"d"y"d}
v24@0:8@"NSString"16
@"<BLSBacklightSceneEnvironmentDelegate>"16@0:8
v24@0:8@"<BLSBacklightSceneEnvironmentDelegate>"16
@"BLSBacklightSceneVisualState"16@0:8
@"BLSAlwaysOnFrameSpecifier"16@0:8
@"BLSAlwaysOnSession"16@0:8
@"NSDate"16@0:8
v24@0:8@"BLSAlwaysOnSession"16
@"BLSBacklightSceneEnvironmentUpdater"16@0:8
@"<BLSBacklightSceneEnvironmentDelegate>"
@"BLSAlwaysOnSession"
@"BLSBacklightSceneEnvironmentUpdater"
@"FBSScene"
@56@0:8@16@24@32B40@44B52
@"BLSBacklightSceneVisualState"
@"BLSAlwaysOnFrameSpecifier"
@"BLSBacklightChangeEvent"
@48@0:8Q16q24q32@40
@"BLSBacklightChangeRequest"
v28@0:8I16@?20
@28@0:8I16r*20
@20@0:8B16
@40@0:8q16q24q32
@24@0:8#16
{?=b1b1b1b1b1b1}24@0:8@16
@24@0:8B16B20
@32@0:8@16o^@24
@"BLSAssertionIdentifier"32@0:8@"BLSAssertionDescriptor"16o^@24
@40@0:8@16B24B28@?32
@32@0:8q16@?24
v24@0:8Q16
