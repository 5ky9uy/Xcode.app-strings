layoutMarginsObserver
T@"<TKTonePickerTableViewLayoutMarginsObserver>",W,N,V_layoutMarginsObserver
separatorObserver
T@"<TKTonePickerTableViewSeparatorObserver>",W,N,V_separatorObserver
ringtones
alert tones
modern
classic
sort
<classic_ringtone_identifier>
<classic_alert_tone_identifier>
RINGTONE_PICKER_IGNORE_MUTING_FOOTER_TEXT
RINGTONE_PICKER_STORE_SECTION_TITLE
RINGTONE_PICKER_GROUP_TITLE_DEFAULT
RINGTONE_PICKER_GROUP_TITLE_MEDIA
RINGTONE_PICKER_IGNORE_MUTING_TITLE
VIBRATION_PICKER_TITLE
RINGTONE_PICKER_RINGTONES_STORE
RINGTONE_PICKER_DOWNLOAD_ALL_PURCHASE_TONES
RINGTONE_PICKER_CHECKING_FOR_DOWNLOADS
RINGTONE_PICKER_DOWNLOADING
/BuildRoot/Library/Caches/com.apple.xbs/Sources/ToneLibrary_Sim/ToneLibrary-501/Kit/Tones/TKTonePickerController.m
-[TKTonePickerController _pickerRowItemAtIndex:inSectionForItem:]
RINGTONE_PICKER_NONE
RINGTONE_PICKER_CHOOSE_MEDIA
CLASSIC_TONES_NAME
-[TKTonePickerController deleteTonePickerItem:]
-[TKTonePickerController deleteTonePickerItem:]_block_invoke
v32@?0@"NSString"8Q16^B24
v8@?0
RINGTONE_PICKER_GROUP_TITLE_RINGTONES
RINGTONE_PICKER_GROUP_TITLE_TONES
TKAlertTones
TKAlarmWakeUpRingtones
TKRingtones
plist
q24@?0@"NSString"8@"NSString"16
-[TKTonePickerController toneStoreDownloadsDidStart:]_block_invoke
v32@?0@"NSMutableArray"8Q16^B24
-[TKTonePickerController toneStoreDownloadsDidFinish:]_block_invoke
v12@?0B8
RINGTONE_PICKER_STORE_SECTION_FOOTER_FORMAT_TEXT
tonePickerLatestRedownloadAllDate
-[TKTonePickerController _playToneWithIdentifier:]
v24@?0q8@"NSError"16
VIBRATION_PICKER_DEFAULT
RINGTONE_PICKER_DEFAULT_MARKER_FORMAT
hash
TQ,R
superclass
T#,R
description
T@"NSString",R,C
debugDescription
showsToneStore
TB,N,V_showsToneStore
mediaAtTop
TB,N,GisMediaAtTop,V_mediaAtTop
showsVibrations
TB,N,V_showsVibrations
selectedVibrationIdentifier
T@"NSString",C,N,V_selectedVibrationIdentifier
showsIgnoreMute
TB,N,V_showsIgnoreMute
ignoreMute
TB,N,V_ignoreMute
canShowStore
TB,R,N
toneStoreDownloadController
T@"<TLToneStoreDownloadController>",&,N,V_toneStoreDownloadController
_classicRingtoneIdentifiers
T@"NSArray",&,N,S_setClassicRingtoneIdentifiers:,V__classicRingtoneIdentifiers
_classicAlertToneIdentifiers
T@"NSArray",&,N,S_setClassicAlertToneIdentifiers:,V__classicAlertToneIdentifiers
_selectedClassicRingtoneIndex
TQ,N,S_setSelectedClassicRingtoneIndex:,V__selectedClassicRingtoneIndex
_selectedClassicAlertToneIndex
TQ,N,S_setSelectedClassicAlertToneIndex:,V__selectedClassicAlertToneIndex
_topLevelSelectedTonePickerItem
T@"TKTonePickerItem",R,N
_selectedToneIndexPath
T@"NSIndexPath",&,N,S_setSelectedToneIndexPath:,V__selectedToneIndexPath
_indexPathForToneStoreGroup
T@"NSIndexPath",R,N
_indexPathForDefaultGroup
_indexPathForFirstToneGroup
_indexPathForMediaGroup
_indexPathForNone
_indexPathForVibrationGroup
indexPathForSelectedTone
_behavesAsRingtonePicker
TB,N,S_setBehavesAsRingtonePicker:,V__behavesAsRingtonePicker
_alertTonesPlistName
T@"NSString",R,N
_ringtonesPlistName
_toneManager
T@"TLToneManager",&,N,S_setToneManager:
delegate
T@"<TKTonePickerControllerDelegate>",W,N,V_delegate
alertType
Tq,R,N,V_alertType
topic
T@"NSString",C,N,V_topic
defaultToneIdentifier
T@"NSString",C,N,V_defaultToneIdentifier
showsDefault
TB,N,V_showsDefault
showsNone
TB,N,V_showsNone
noneAtTop
TB,N,GisNoneAtTop,V_noneAtTop
noneString
T@"NSString",C,N,V_noneString
showsNothingSelected
TB,N,V_showsNothingSelected
selectedTonePickerItem
selectedToneIdentifier
T@"NSString",C,N
labelText
labelFont
T@"UIFont",&,N
labelTextColor
T@"UIColor",&,N
labelShadowColor
labelShadowOffset
T{UIOffset=dd},N
labelPaddingInsets
T{UIEdgeInsets=dddd},N,V_labelPaddingInsets
textLabelColor
T@"UIColor",&,N,V_textLabelColor
shouldTintTextLabel
TB,N,V_shouldTintTextLabel
/BuildRoot/Library/Caches/com.apple.xbs/Sources/ToneLibrary_Sim/ToneLibrary-501/Kit/Shared/Embedded/DisplayLink/TKDisplayLinkManager.m
-[TKDisplayLinkManager beginRequiringWarmUpMode]
-[TKDisplayLinkManager endRequiringWarmUpMode]
v32@?0@"NSUUID"8@"TKDisplayLinkManagerObserver"16^B24
currentDisplayLinkManager
T@"TKDisplayLinkManager",R,N
paused
TB,R,N,GisPaused
duration
Td,R,N
timestamp
v16@?0@"UIGraphicsImageRendererContext"8
vibrationRecorderBarsBackgroundColor
T@"UIColor",R,N
screen
T@"UIScreen",&,N
vibrationRecorderInstructionsLabelFont
T@"UIFont",R,N
vibrationRecorderInstructionsLabelTextColor
vibrationRecorderInstructionsLabelBackgroundColor
vibrationRecorderInstructionsLabelPositionOffset
T{UIOffset=dd},R,N
vibrationRecorderInstructionsLabelEdgeInsets
T{UIEdgeInsets=dddd},R,N
vibrationRecorderInstructionsLabelFadeAnimationDuration
vibrationRecorderControlsToolbarVerticalOffset
vibrationRecorderControlsToolbarAdditionalHeight
vibrationRecorderControlsToolbarItemsHorizontalOffsetFromEdge
vibrationRecorderProgressToolbarVerticalOffset
vibrationRecorderProgressToolbarAdditionalHeight
vibrationRecorderProgressViewHorizontalOffsetFromEdge
vibrationRecorderProgressViewHeight
vibrationRecorderProgressViewTrackColor
vibrationRecorderProgressViewDotHorizontalInset
vibrationRecorderProgressViewDotTintColor
vibrationRecorderProgressViewResizableDotImage
T@"UIImage",R,N
vibrationRecorderProgressViewAccessibilityAdditionalHeight
vibrationRecorderRippleViewBackgroundColor
vibrationRecorderRippleRingLineWidth
vibrationRecorderRippleInitialRadius
vibrationRecorderRippleFinalRadius
vibrationRecorderRippleFingerStillSpeed
vibrationRecorderRippleFingerMovingSpeed
defaultAnimationDuration
T@"UIScreen",&,N,V_screen
VIBRATION_RECORDER_TITLE
SAVE
VIBRATION_RECORDER_ENTER_VIBRATION_NAME
v16@?0@"UITextField"8
CANCEL
v16@?0@"UIAlertAction"8
VIBRATION_RECORDER_DID_ENTER_RECORDING_MODE_ANNOUNCEMENT
VIBRATION_RECORDER_DID_EXIT_RECORDING_MODE_ANNOUNCEMENT
VIBRATION_RECORDER_DID_ENTER_REPLAY_MODE_ANNOUNCEMENT
VIBRATION_RECORDER_DID_EXIT_REPLAY_MODE_ANNOUNCEMENT
T@"<TKVibrationRecorderViewControllerDelegate>",W,N,V_delegate
parentVibrationRecorderViewController
T@"TKVibrationRecorderViewController",W,N,V_parentVibrationRecorderViewController
-[TKTonePickerViewController dealloc]
-[TKTonePickerViewController viewDidAppear:]
TKTonePickerSectionHeaderDefault
TKTonePickerSectionHeaderMedia
TKTonePickerSectionHeaderStore
TKTonePickerSectionHeaderRegularToneGroup
checkmark
v32@?0@8@16^B24
tonePickerMediaItemList
_TKTonePickerCellReuseIdentifier
_TKTonePickerCellWithDisclosureIndicatorReuseIdentifier
_TKTonePickerCellWithSwitchReuseIdentifier
_TKTonePickerCellWithActivityIndicatorReuseIdentifier
_TKTonePickerCellWithDownloadProgressReuseIdentifier
_TKTonePickerDividerCellReuseIdentifier
/BuildRoot/Library/Caches/com.apple.xbs/Sources/ToneLibrary_Sim/ToneLibrary-501/Kit/Tones/Embedded/TKTonePickerViewController.m
-[TKTonePickerViewController tableView:cellForPickerRowItem:]
-[TKTonePickerViewController tableView:cellForRowAtIndexPath:]
-[TKTonePickerViewController tonePickerController:didDeletePickerRowItems:]
-[TKTonePickerViewController tonePickerController:didInsertPickerRowItems:]
-[TKTonePickerViewController tonePickerController:didUpdateDownloadProgressOfTonePickerItem:]
-[TKTonePickerViewController tonePickerController:didUpdateTonePickerItem:]
-[TKTonePickerViewController tonePickerController:requestsPresentingToneClassicsPickerForItem:]
Tq,R,N
TB,N
TB,N,GisNoneAtTop
T@"<TKTonePickerViewControllerDelegate>",W,N,V_delegate
showsMedia
TB,N,V_showsMedia
TB,N,GisMediaAtTop
selectedMediaIdentifier
T@"NSNumber",C,N
styleProvider
T@"<TKTonePickerStyleProvider>",&,N,V_styleProvider
/BuildRoot/Library/Caches/com.apple.xbs/Sources/ToneLibrary_Sim/ToneLibrary-501/Kit/Tones/Embedded/iOS/TKToneClassicsTableViewController.m
-[TKToneClassicsTableViewController tableView:cellForRowAtIndexPath:]
tonePickerTableViewControllerHelper
T@"<TKTonePickerTableViewControllerHelper>",W,N,V_tonePickerTableViewControllerHelper
classic ringtones header
classic alert tones header
ignore mute
itemKind
numberOfChildren
_parentTonePickerController
T@"TKTonePickerController",W,N,S_setParentTonePickerController:,V__parentTonePickerController
Tq,N,S_setNumberOfChildren:,V_numberOfChildren
TQ,N,S_setItemKind:,V_itemKind
needsRoomForCheckmark
TB,N,S_setNeedsRoomForCheckmark:,V_needsRoomForCheckmark
needsActivityIndicator
TB,N,S_setNeedsActivityIndicator:,V_needsActivityIndicator
needsDownloadProgress
TB,N,S_setNeedsDownloadProgress:,V_needsDownloadProgress
downloadProgress
Tf,N,S_setDownloadProgress:,V_downloadProgress
parentSectionItem
T@"TKTonePickerSectionItem",R,N
contentBackgroundColor
contentBackdropOverlayBlendMode
Tq,N,V_contentBackdropOverlayBlendMode
tk_section
tk_row
_TLVibrationPickerViewTableCellDefaultIdentifier
_TLVibrationPickerViewTableCellWithDisclosureIndicatorIdentifier
q8@?0
Hiding the user generated section of the vibration picker while in editing mode is invalid.
VIBRATION_UNTITLED_NAME
i24@?0r^v8r^v16
 %ld
VIBRATION_PICKER_GROUP_TITLE_DEFAULT
VIBRATION_PICKER_GROUP_TITLE_STANDARD
VIBRATION_PICKER_GROUP_TITLE_USER_GENERATED
VIBRATION_PICKER_CREATE_NEW_USER_GENERATED_PATTERN
%@ (%@)
VIBRATION_NAME_TEXT_FIELD_PLACEHOLDER
_additionalDelegate
T@"<TKVibrationPickerViewControllerDelegate>",W,N,S_setAdditionalDelegate:,V__additionalDelegate
_dismissalDelegate
T@"<TKVibrationPickerViewControllerDismissalDelegate>",W,N,S_setDismissalDelegate:,V__dismissalDelegate
T@"<TKVibrationPickerViewControllerDelegate>",W,N,V_delegate
defaultVibrationIdentifier
T@"NSString",C,N,V_defaultVibrationIdentifier
correspondingToneIdentifier
T@"NSString",C,N,V_correspondingToneIdentifier
showsUserGenerated
TB,N,V_showsUserGenerated
T@"NSString",&,N,V_selectedVibrationIdentifier
allowsDeletingDefaultVibration
TB,N,V_allowsDeletingDefaultVibration
showsEditButtonInNavigationBar
TB,N,V_showsEditButtonInNavigationBar
canEnterEditingMode
T@"<TKVibrationPickerStyleProvider>",&,N,V_styleProvider
T@"<TKVibrationPickerTableViewCellDelegate>",W,N,V_delegate
T@"NSString",&,N
placeholderText
regularTextFont
regularTextColor
T@"UIColor",&,N,V_regularTextColor
highlightedTextColor
editable
TB,N,GisEditable,V_editable
checked
TB,N,GisChecked
text
footerText
T@"NSString",C,N,S_setText:,V_text
T@"NSString",C,N,S_setFooterText:,V_footerText
vibrationRecorderViewControllerDelegate
T@"<TKVibrationRecorderViewControllerDelegate>",W,N
VIBRATION_RECORDER_INSTRUCTIONS_LINE
VIBRATION_RECORDER_RECORD_BUTTON_NAME
VIBRATION_RECORDER_STOP_BUTTON_NAME
VIBRATION_RECORDER_PLAY_BUTTON_NAME
VIBRATION_RECORDER_TOUCH_SURFACE_INSTRUCTIONS_HIDDEN_HINT
v16@?0@"TKDisplayLinkManager"8
T@"<TKVibrationRecorderViewDelegate>",W,N,V_delegate
@"NSLayoutConstraint"24@?0q8d16
VIBRATION_RECORDER_PROGRESS_DESCRIPTION
VIBRATION_RECORDER_PROGRESS_VALUE_FORMAT
currentTimeInterval
Td,N,V_currentTimeInterval
roundedCornersCompensationDelayMode
Ti,N,V_roundedCornersCompensationDelayMode
normalizedRingLocation
T{CGPoint=dd},R,N,V_normalizedRingLocation
ringSpeed
Td,R,N,V_ringSpeed
Tq,N,S_setRow:,V_row
VIBRATION_RECORDER_PROGRESS_DOT_DESCRIPTION
VIBRATION_RECORDER_PROGRESS_DOT_VALUE_FORMAT
VIBRATION_RECORDER_PROGRESS_DOT_PREVIOUS_PAUSE_FORMAT
%@ %@
timeInterval
Td,N,V_timeInterval
Td,N,V_duration
previousPauseTimeInterval
Td,N,V_previousPauseTimeInterval
previousPauseDuration
Td,N,V_previousPauseDuration
accessibilityFrameAdditionalHeight
Td,N,V_accessibilityFrameAdditionalHeight
<%@: %p
section
; %@ = %ld
; %@ = %@
; %@ = "%@"
Tq,N,S_setSection:,V_section
minimumTextIndentation
Td,N,V_minimumTextIndentation
ring layer identifier
ring enlargement animation
path
opacity
_touchDown
TB,R,N,G_isTouchDown
fingerStillSpeed
Td,N,V_fingerStillSpeed
fingerMovingSpeed
Td,N,V_fingerMovingSpeed
firstRippleInitialRadius
Td,N,V_firstRippleInitialRadius
fadeOutRadius
Td,N,V_fadeOutRadius
classicToneIndex
Tq,N,S_setClassicToneIndex:,V_classicToneIndex
parentItem
location
T{CGPoint=dd},R,N,V_location
VIBRATION_RECORDER_TOUCH_SURFACE
T@"<TKVibrationRecorderTouchSurfaceDelegate>",W,N,V_delegate
shouldTintText
detailText
showsCheckmark
showsDisclosureIndicator
shouldPreventSelection
TB,N,S_setShouldTintText:,V_shouldTintText
T@"NSString",C,N,S_setDetailText:,V_detailText
TB,N,S_setShowsCheckmark:,V_showsCheckmark
TB,N,S_setShowsDisclosureIndicator:,V_showsDisclosureIndicator
TB,N,S_setShouldPreventSelection:,V_shouldPreventSelection
/BuildRoot/Library/Caches/com.apple.xbs/Sources/ToneLibrary_Sim/ToneLibrary-501/Kit/Vibrations/Recorder/Touch-Surface/TKVibrationRecorderTouchSurfaceRecordedDataWrapper.m
-[TKVibrationRecorderTouchSurfaceRecordedDataWrapper recordNormalizedTouchLocation:touchPhase:]
%.1f
SECONDS_PLURAL_FORMAT
SECONDS_SINGULAR_FORMAT
TKVibratorController
vibratorState
TQ,R,N
progress
Tf,N,V_progress
defaultStyleForTableViewCellsWithDetailText
defaultTableViewCellTextColor
groupedTableCellBackgroundColor
groupedTableHeaderFooterTextColor
empty
default
media
store
regularToneGroup
sectionHeader
regularToneSectionIndex
TQ,N,S_setSectionHeader:,V_sectionHeader
TQ,N,S_setRegularToneSectionIndex:,V_regularToneSectionIndex
|   
<%@: %p>%@
 - AMBIGUOUS LAYOUT
AMBIGUOUS LAYOUT IN SUBTREE
No views in subtree have an ambiguous layout. Good job!
333333
?333333
?[[[[[[
Keeping redownload all tones functionality disabled for new tone picker because it was last triggered less than %ld minutes ago.
*** Assertion failure in %{private}s, %{private}@:%{private}lu.
%{private}@
*** Assertion failure.
We expect to have a default tone identifier.
Cannot delete %{public}@.
Unexpected updated number of sections.
Unexpected number of items.
Unexpected.
Skipping %{public}@ in tone picker because this tone is not valid.
This is the only scenario we know how to handle properly.
Unexpectedly has updated target actions even though not handling display refresh.
Nilling out tonePickerTableViewControllerHelper of %{public}@ in %{public}s for %{public}@.
%{public}@ doesn't support this kind of picker row item: %{public}@.
%{public}@ unexpectedly found a nil pickerRowItem while generating cell for row at index path %{public}@.
%{public}@ is about to return a nil cell for row at index path %{public}@ with pickerRowItem = %{public}@.
Assigning %{public}@ as tonePickerTableViewControllerHelper of %{public}@ in %{public}s.
The tonePickerTableViewControllerHelper property of %{public}@ is being updated from %{public}@ to %{public}@. Reloading table view.
The tonePickerTableViewControllerHelper of %{public}@ was unexpectedly nil when UITableView requested the cell for row at index path %{public}@.
%{public}@ unexpectedly found a nil toneClassicsPickerItem while generating cell for row at index path %{public}@.
%{public}@ is about to return a nil cell for row at index path %{public}@ with toneClassicsPickerItem = %{public}@.
Couldn't not handle recording touch location in warm up mode with index %lu.
zPLR
zPLR
zPLR
TKTonePickerTableView
TKTonePickerController
TLToneStoreDownloadObserver
NSObject
TKLabelContainerView
TKPickerTableViewCell
TKExtensions
TKDisplayLinkManager
TKDisplayLinkManagerObserver
TKStyleProvider
TKVibrationRecorderStyleProvider
TKVibrationRecorderContentViewController
TKVibrationRecorderViewDelegate
UITextFieldDelegate
TKTonePickerViewController
TKTonePickerControllerDelegate
TKTonePickerControllerDelegateInternal
TKTonePickerTableViewControllerHelper
TKTonePickerTableViewLayoutMarginsObserver
TKTonePickerTableViewSeparatorObserver
MPMediaPickerControllerDelegate
TKToneClassicsTableViewController
TKTonePickerItem
TKPickerContainerItem
TKPickerDividerTableViewCell
TKSectionAwareTableView
TKVibrationPickerViewController
TKVibrationPickerTableViewCellDelegate
TKVibrationRecorderViewControllerDelegate
UINavigationControllerDelegate
TKVibrationPickerTableViewCell
TKPickerSectionItem
TKVibrationRecorderViewController
TKVibrationRecorderView
TKVibrationRecorderTouchSurfaceDelegate
TKVibrationRecorderProgressView
TKVibrationRecorderRippleRingLayer
TKPickerRowItem
PSStateRestoration
TKVibrationRecorderProgressDotImageView
TKPickerItem
TKTonePickerTableViewCellLayoutManager
TKVibrationRecorderRippleView
CAAnimationDelegate
TKToneClassicsPickerItem
TKVibrationRecorderRippleTouchContext
TKVibrationRecorderTouchSurface
TKPickerSelectableItem
TKVibrationRecorderTouchSurfaceRecordedDataWrapper
TKVibrationInterfaceUtilities
TKVibratorController
TKQueue
TKDownloadIndicatorView
TKUIKitConstants
TKTonePickerSectionItem
TKPickerDividerItem
TKConstraintBasedLayout
layoutMarginsDidChange
layoutMarginsObserver
layoutMarginsDidChangeInTonePickerTableView:
separatorObserver
separatorColorDidChangeInTonePickerTableView:
setSeparatorColor:
_handleSeparatorColorDidChange
layoutSubviews
.cxx_destruct
setLayoutMarginsObserver:
setSeparatorObserver:
_layoutMarginsObserver
_separatorObserver
init
_reloadStateForBasicBehavior
sharedToneManager
_setToneManager:
currentToneIdentifierForAlertType:
copy
_latestRedownloadAllTonesDate
date
timeIntervalSinceDate:
_setSelectedClassicAlertToneIndex:
_setSelectedClassicRingtoneIndex:
_indexPathForNone
_setSelectedToneIndexPath:
_resetSelectedVibrationIdentifierForcingUpdatingVibrationName:
_reloadTones
defaultCenter
_handleAlertOverridePolicyDidChangeNotification:
addObserver:selector:name:object:
removeObserver:name:object:
_unregisterForUserGeneratedVibrationsDidChangeNotification
removeObserver:
dealloc
currentToneIdentifierForAlertType:topic:
length
topic
_selectedToneIndexPath
tk_section
tk_row
tk_indexPathForRow:inSection:
_invalidatePickerItemCaches
_didReloadTones
_indexPathForIgnoreMuteGroup
_cachedPickerItemForSection:
_cachedPickerRowItemAtIndex:inSectionForItem:
delegate
tonePickerController:didUpdateIgnoreMute:forTonePickerItem:atIndexPath:
_isNoneGroupAtIndexPath:
_isDefaultGroupAtIndexPath:
_indexPathForDefaultGroup
setSelectedToneIdentifier:
isEqualToString:
count
isNoneAtTop
_showsMedia
_indexPathForVibrationGroup
_indexPathForToneStoreGroup
_footerTextForToneStoreGroup
_indexPathForMediaGroup
_mediaItemsCount
_indexPathForFirstToneGroup
objectAtIndex:
_setText:
_setFooterText:
_setNumberOfChildren:
_setSection:
_setSectionHeader:
_setRegularToneSectionIndex:
_setParentTonePickerController:
_cachePickerSectionItem:forSection:
section
_isDividerAtIndexPath:
_setRow:
_isIgnoreMuteGroupAtIndexPath:
_isVibrationGroupAtIndexPath:
_nameOfSelectedVibrationIdentifier
_isToneStoreGroupAtIndexPath:
defaultToneIdentifier
stringWithUTF8String:
lastPathComponent
callStackSymbols
_nameForToneIdentifier:
noneString
_isMediaGroupAtIndexPath:
tonePickerController:titleOfMediaItemAtIndex:
_identifierOfToneAtIndexPath:
_classicAlertToneIdentifiers
_selectedClassicAlertToneIndex
selectedToneIdentifier
_classicRingtoneIdentifiers
_selectedClassicRingtoneIndex
_annotatedNameForToneIdentifier:
objectForKey:
downloadProgress
showsNothingSelected
isEqual:
_setShowsCheckmark:
_setItemKind:
_setShowsDisclosureIndicator:
_setNeedsRoomForCheckmark:
_setNeedsActivityIndicator:
_setNeedsDownloadProgress:
_setDownloadProgress:
_setShouldTintText:
_setShouldPreventSelection:
_setDetailText:
_cachePickerRowItem:atIndex:inSectionForItem:
itemKind
_cachedToneClassicsPickerItemForIndex:headerKind:
_setClassicToneIndex:
_cacheToneClassicsPickerItem:forIndex:headerKind:
tk_ensureHasItemsOrNullUpToIndex:
replaceObjectAtIndex:withObject:
null
countByEnumeratingWithState:objects:count:
_isMediaAtTop
_indexPathForToneWithIdentifier:
indexOfObject:
_indexOfMediaItemWithIdentifier:
_aliasForToneIdentifier:
_identifierOfMediaItemAtIndex:
pickerItemForSection:
childItemAtIndex:
_topLevelSelectedTonePickerItem
_identifierOfSelectedClassicAlertTone
_identifierOfSelectedClassicRingtone
_setSelectedToneIdentifier:currentlyReloadingTones:
toneWithIdentifierIsValid:
_didSelectToneWithIdentifier:
_identifierAtIndexPath:isMediaItem:
_didSelectToneClassicsPickerItem:
setShowsNothingSelected:
tonePickerControllerRequestsPresentingVibrationPicker:
_goToStore
_redownloadAllTones
stopPlayingWithFadeOut:
tonePickerController:didSelectMediaItemAtIndex:selectionDidChange:
tonePickerControllerRequestsPresentingMediaItemPicker:
tonePickerController:requestsPresentingToneClassicsPickerForItem:
_didUpdateCheckedStatus:ofPickerItemForRowAtIndexPath:
_didUpdateDetailText:ofPickerItemForRowAtIndexPath:
_resetSelectedClassicRingtoneIndex
_resetSelectedClassicAlertToneIndex
_updateDetailTextOfVibrationItem
_didSelectMediaItemWithIdentifier:
_playToneWithIdentifier:
_togglePlayForToneWithIdentifier:
classicToneIndex
_didUpdateCheckedStatus:ofToneClassicsPickerItem:
containsObject:
canDeleteTonePickerItem:
numberOfSections
text
addObject:
numberOfChildren
_removeToneWithIdentifier:
_reloadTonesForExternalChange:shouldSkipDelegateFullReload:
mutableCopy
insertObject:atIndex:
enumerateObjectsUsingBlock:
_applyBatchUpdatesWithDeletedPickerRowItems:deletedTonePickerSectionItems:insertedPickerRowItems:insertedTonePickerSectionItems:tonePickerSectionItemsWithUpdatedHeaderText:tonePickerSectionItemsWithUpdatedFooterText:
_performBatchUpdates:completion:
_setBehavesAsRingtonePicker:
setShowsNone:
_reloadMediaItems
_behavesAsRingtonePicker
_installedTones
identifier
isPrivateTone
duration
isProtectedContent
isRingtone
isPurchased
allValues
addObjectsFromArray:
toneIdentifier
_loadRingtonesFromPlist
_setClassicRingtoneIdentifiers:
_loadAlertTonesFromPlist
_setClassicAlertToneIdentifiers:
_sortToneIdentifiersArray:
firstObject
alertType
bundleForClass:
pathForResource:ofType:
dictionaryWithContentsOfFile:
boolValue
removeObjectAtIndex:
setObject:forKey:
_alertTonesPlistName
_loadTonesFromPlistNamed:
_ringtonesPlistName
localizedCaseInsensitiveCompare:
sortUsingComparator:
_toneManagerContentsChanged:
tonePickerController:requestsPerformingBatchUpdates:completion:
tonePickerController:didDeletePickerRowItems:
tonePickerController:didDeleteTonePickerSectionItems:
tonePickerController:didInsertPickerRowItems:
tonePickerController:didInsertTonePickerSectionItems:
tonePickerController:didUpdateHeaderTextOfTonePickerSectionItems:
tonePickerController:didUpdateFooterTextOfTonePickerSectionItems:
sharedCapabilitiesManager
isRingtoneStoreAvailable
isAlertToneStoreAvailable
addObserver:
_enableToneStoreDownloadItemIfAppropriate
_didUpdateFooterTextForToneStoreGroup
_disableToneStoreDownloadItem
_didUpdateToneStoreDownloadItem
_pickerRowItemAtIndex:inSectionForItem:
tonePickerController:didUpdateDownloadProgressOfTonePickerItem:
removeObjectForKey:
arrayWithObjects:count:
_indexPathForToneStoreDownloadItem
_uncachePickerRowItemAtIndex:inSectionForItem:
shouldTintText
needsActivityIndicator
tonePickerController:didUpdateTonePickerItem:
storeAccountName
_updateLatestRedownloadAllTonesDate
stringWithFormat:
name
nameForToneIdentifier:
openRingtoneStore
openAlertToneStore
redownloadAllTones
copySharedResourcesPreferencesDomain
tonePickerController:willBeginPlaybackOfToneWithIdentifier:
initWithType:
setTopic:
setToneIdentifier:
setVibrationIdentifier:
setShouldRepeat:
setForPreview:
alertWithConfiguration:
stop
_didFinishPlayingAlert:
playWithCompletionHandler:
setFadeOutDuration:
stopWithOptions:
tonePickerControllerDidStopPlaying:withFadeOutDuration:
tonePickerControllerShouldShowMedia:
isMediaAtTop
numberOfMediaItemsInTonePickerController:
tonePickerController:identifierOfMediaItemAtIndex:
tonePickerController:indexOfMediaItemWithIdentifier:
tonePickerController:selectedMediaItemWithIdentifier:
tonePickerControllerRequestsMediaItemsRefresh:
_registerForUserGeneratedVibrationsDidChangeNotification
_setSelectedVibrationIdentifier:explicitlySet:
_setSelectedVibrationIdentifier:forceUpdatingVibrationName:explicitlySet:
sharedVibrationManager
_currentVibrationIdentifierForAlertType:topic:
_currentOverridePolicyForType:
_sanitizeVibrationIdentifier:forAlertType:topic:correspondingToneIdentifier:didFallbackToCurrentVibrationIdentifier:
defaultVibrationIdentifierForAlertType:
_sanitizedSelectedVibrationIdentifierAllowingNilForDefault:
nameOfVibrationWithIdentifier:
tonePickerControllerDidReloadTones:
tonePickerController:selectedToneWithIdentifier:
tonePickerController:didUpdateCheckedStatus:ofTonePickerItem:
tonePickerController:didUpdateDetailText:ofTonePickerItem:
class
self
performSelector:
performSelector:withObject:
performSelector:withObject:withObject:
isProxy
isKindOfClass:
isMemberOfClass:
conformsToProtocol:
respondsToSelector:
retain
release
autorelease
retainCount
zone
hash
superclass
description
debugDescription
storeAccountNameDidChange:
didFinishCheckingForAvailableToneStoreDownloads:
toneStoreDownloadsDidStart:
toneStoreDownloadsDidProgress:
toneStoreDownloadsDidFinish:
initWithAlertType:
setDefaultToneIdentifier:
setShowsToneStore:
setShowsIgnoreMute:
setIgnoreMute:
setShowsDefault:
setNoneAtTop:
setNoneString:
_toneClassicsPickerItemAtIndex:belowTonePickerItem:
indexPathForSelectedTone
selectedTonePickerItem
_selectedIdentifier:
didSelectTonePickerItem:
deleteTonePickerItem:
_toneManager
canShowStore
setToneStoreDownloadController:
finishedWithPicker
setMediaAtTop:
setShowsVibrations:
setSelectedVibrationIdentifier:
setDelegate:
showsDefault
showsNone
showsToneStore
showsVibrations
selectedVibrationIdentifier
showsIgnoreMute
ignoreMute
toneStoreDownloadController
_toneTypes
_defaultToneIdentifierWasExplicitlySet
_selectedToneWasExplicitlySetToDefaultTone
_selectedVibrationIdentifierWasExplicitlySet
_showsNoneWasExplicitlySet
_isToneStoreDownloadButtonAllowed
_toneStoreDownloadButtonState
_activeToneStoreDownloadsByIdentifier
_finishedToneStoreDownloadsByIdentifier
_shouldFreezeContentsOriginatingFromToneManager
_hasLoadedTonesOnce
_cachedPickerSectionItems
_cachedPickerRowItems
_cachedClassicRingtonePickerItems
_cachedClassicAlertTonePickerItems
_toneGroupLists
_toneGroupNames
_toneGroupBucketIdentifiers
_identifiersOfRemovableTones
_playingAlert
_showsDefault
_showsNone
_noneAtTop
_showsNothingSelected
_showsToneStore
_mediaAtTop
_showsVibrations
_showsIgnoreMute
_ignoreMute
__behavesAsRingtonePicker
_delegate
_alertType
_topic
_defaultToneIdentifier
_noneString
_selectedVibrationIdentifier
_toneStoreDownloadController
__classicRingtoneIdentifiers
__classicAlertToneIdentifiers
__selectedClassicRingtoneIndex
__selectedClassicAlertToneIndex
__selectedToneIndexPath
isMainThread
initWithFrame:
clearColor
setBackgroundColor:
addSubview:
setText:
sizeToFit
setNeedsLayout
font
setFont:
textColor
setTextColor:
shadowColor
setShadowColor:
shadowOffset
setShadowOffset:
labelPaddingInsets
frame
bounds
safeAreaInsets
setFrame:
labelText
setLabelText:
labelFont
setLabelFont:
labelTextColor
setLabelTextColor:
labelShadowColor
setLabelShadowColor:
labelShadowOffset
setLabelShadowOffset:
setLabelPaddingInsets:
sizeThatFits:
_label
_labelPaddingInsets
_updateTextLabelColor
tintColorDidChange
tintColor
defaultTableViewCellTextColor
textLabel
setSectionLocation:animated:
backgroundView
setSectionLocation:
selectedBackgroundView
setTextLabelColor:
setShouldTintTextLabel:
textLabelColor
shouldTintTextLabel
_shouldTintTextLabel
_textLabelColor
firstItem
secondItem
tk_firstCommonAncestorWithView:
constraints
removeConstraint:
superview
tk_removeFromContainer
currentThread
threadDictionary
invalidate
isPaused
timestamp
_displayDidRefresh:
displayLinkWithTarget:selector:
currentRunLoop
addToRunLoop:forMode:
setPaused:
addObserverForFrameInterval:handler:
UUID
initWithBlock:frameInterval:
_prepareUpdatedObserversForModification
_didAddFirstObserver
_didRemoveLastObserver
addEntriesFromDictionary:
_displayLink
_isWarmUpModeEnabled
_setDisplayLink:
_releaseCurrentDisplayLinkManager
displayDidRefresh:
enumerateKeysAndObjectsUsingBlock:
removeAllObjects
currentDisplayLinkManager
addObserverWithHandler:
removeObserverWithToken:
beginRequiringWarmUpMode
endRequiringWarmUpMode
_activeObservers
_updatedObservers
_hasUpdatedObservers
_isHandlingDisplayRefresh
_warmUpModeRequirementsCount
initWithBlock:
_block
_frameInterval
_displayDidRefreshCount
mainScreen
setScreen:
_didReceiveMemoryWarning:
_cachedStyleObjectForPropertyWithSelector:
_bundle
imageNamed:inBundle:
_setCachedStyleObject:forPropertyWithSelector:
initWithSize:
imageWithActions:
imageWithRenderingMode:
resizableImageWithCapInsets:
blackColor
preferredFontForTextStyle:
whiteColor
colorWithAlphaComponent:
defaultAnimationDuration
screen
scale
vibrationRecorderProgressViewResizableDotImage
size
colorWithWhite:alpha:
bezierPathWithOvalInRect:
fill
_cachedResizableImageForPropertyWithSelector:capInsets:size:imageRenderingMode:withDrawingActions:
vibrationRecorderBarsBackgroundColor
vibrationRecorderInstructionsLabelFont
vibrationRecorderInstructionsLabelTextColor
vibrationRecorderInstructionsLabelBackgroundColor
vibrationRecorderInstructionsLabelPositionOffset
vibrationRecorderInstructionsLabelEdgeInsets
vibrationRecorderInstructionsLabelFadeAnimationDuration
vibrationRecorderControlsToolbarVerticalOffset
vibrationRecorderControlsToolbarAdditionalHeight
vibrationRecorderControlsToolbarItemsHorizontalOffsetFromEdge
vibrationRecorderProgressToolbarVerticalOffset
vibrationRecorderProgressToolbarAdditionalHeight
vibrationRecorderProgressViewHorizontalOffsetFromEdge
vibrationRecorderProgressViewHeight
vibrationRecorderProgressViewTrackColor
vibrationRecorderProgressViewDotHorizontalInset
vibrationRecorderProgressViewDotTintColor
vibrationRecorderProgressViewAccessibilityAdditionalHeight
vibrationRecorderRippleViewBackgroundColor
vibrationRecorderRippleRingLineWidth
vibrationRecorderRippleInitialRadius
vibrationRecorderRippleFinalRadius
vibrationRecorderRippleFingerStillSpeed
vibrationRecorderRippleFingerMovingSpeed
_cachedImageWithName:forPropertyWithSelector:
_cachedStyleProperties
_screen
initWithNibName:bundle:
setTitle:
navigationItem
_cancelButtonTapped:
initWithBarButtonSystemItem:target:action:
_saveButtonTapped:
initWithTitle:style:target:action:
setLeftBarButtonItem:
setRightBarButtonItem:
_handleApplicationDidEnterBackgroundNotification:
sharedApplication
_cleanUpVibrationNameAlertController
vibrationRecorderView:buttonTappedWithIdentifier:
applicationWillSuspend
_stopRecordingOrPlayingForApplicationSuspension
initWithVibrationPatternMaximumDuration:
setView:
viewDidAppear:
becomeFirstResponder
resignFirstResponder
_finishedWithRecorder
viewWillDisappear:
setEnabled:
viewWillAppear:
viewDidDisappear:
dismissViewControllerAnimated:completion:
parentVibrationRecorderViewController
vibrationRecorderViewControllerWasDismissedWithoutSavingRecordedVibrationPattern:
alertControllerWithTitle:message:preferredStyle:
configureVibrationNameTextField:
addTextFieldWithConfigurationHandler:
textFields
_vibrationNameTextFieldContentsDidChange:
_cancelButtonInAlertTapped:
actionWithTitle:style:handler:
addAction:
_saveButtonInAlertTapped:
_updateStateSaveButtonInAlert
presentViewController:animated:completion:
propertyListRepresentation
vibrationRecorderViewController:didFinishRecordingVibrationPattern:name:
vibrationNameTextField:shouldChangeCharactersInRange:replacementString:
simpleVibrationPatternWithVibrationDuration:pauseDuration:
_stopVibrating
turnOnWithVibrationPattern:
turnOff
timeIntervalSinceReferenceDate
appendVibrationComponentWithDuration:isPause:
startAnimatingProgress
_storeVibrationComponentOfTypePause:
_indefiniteVibrationPattern
_startVibratingWithVibrationPattern:
enterReplayModeWithVibrationPattern:
_accessibilityDidEnterReplayMode
enterRecordingMode
_accessibilityDidEnterRecordingMode
vibrationComponentDidEndForVibrationRecorderView:
_eraseCurrentVibrationComponentDidStartTimeStamp
exitRecordingModeWithPlayButtonEnabled:
_accessibilityDidExitRecordingMode
exitReplayMode
_accessibilityDidExitReplayMode
contextObject
setContextObject:
stopAnimatingProgress
_accessibilityMakeAnnouncementWithStringForLocalizationIdentifier:
vibrationComponentDidStartForVibrationRecorderView:
vibrationRecorderViewDidFinishReplayingVibration:
vibrationRecorderViewDidEnterRecordingMode:
vibrationRecorderView:didExitRecordingModeWithContextObject:
vibrationRecorderViewDidReachVibrationRecordingMaximumDuration:
textFieldShouldBeginEditing:
textFieldDidBeginEditing:
textFieldShouldEndEditing:
textFieldDidEndEditing:
textFieldDidEndEditing:reason:
textField:shouldChangeCharactersInRange:replacementString:
textFieldDidChangeSelection:
textFieldShouldClear:
textFieldShouldReturn:
initWithVibratorController:
loadView
supportedInterfaceOrientations
_canShowWhileLocked
setParentVibrationRecorderViewController:
_mode
_vibrationRecorderView
_recordedVibrationPattern
_currentVibrationComponentDidStartTimeStamp
_isWaitingForEndOfCurrentVibrationComponent
_cancelButton
_saveButton
_vibrationNameAlertController
_vibrationNameAlertSaveAction
_vibrationNameAlertTextField
_vibratorController
_parentVibrationRecorderViewController
initWithStyle:
_checkmarkImage
_handlePreferredContentSizeCategoryDidChangeNotification:
showsMedia
defaultMediaLibrary
endGeneratingLibraryChangeNotifications
tonePickerTableViewControllerWillBeDeallocated:
_handleSwitchControlValueChanged:
removeTarget:action:forControlEvents:
setTonePickerTableViewControllerHelper:
isOn
isViewLoaded
tableView
_updateStyleOfTableView:forStyleProvider:
reloadData
tonePickerUsesOpaqueBackground
setBackgroundView:
tonePickerTableViewSeparatorStyle
setSeparatorStyle:
tonePickerCustomTableSeparatorBackdropOverlayBlendMode
_setSeparatorBackdropOverlayBlendMode:
tonePickerCustomTableSeparatorColor
loadViewForTonePickerTableViewController:
viewDidLoad
_reloadData
lineHeight
setEstimatedRowHeight:
setRowHeight:
view
window
indexPathForSelectedRow
deselectRowAtIndexPath:animated:
viewDidLayoutSubviews
indexPathsForVisibleRows
scrollToRowAtIndexPath:atScrollPosition:animated:
sectionHeader
regularToneSectionIndex
wantsCustomTonePickerHeaderView
tonePickerHeaderTextShouldBeUppercase
currentLocale
uppercaseStringWithLocale:
tonePickerHeaderTextFont
tonePickerHeaderTextColor
tonePickerHeaderTextShadowColor
tonePickerHeaderTextShadowOffset
tonePickerHeaderTextPaddingInsets
defaultFontDescriptorWithTextStyle:
fontDescriptorWithSymbolicTraits:
fontWithDescriptor:size:
configurationWithFont:scale:
systemImageNamed:withConfiguration:
tonePickerViewController:selectedToneWithIdentifier:
tonePickerCellTextColor
_resetScrollingPosition
accessoryView
setAccessoryView:
setProgress:animated:completion:
initWithCapacity:
unsignedLongLongValue
numberWithUnsignedLongLong:
_handleMediaLibraryDidChangeNotification
beginGeneratingLibraryChangeNotifications
setSelectedMediaIdentifier:
selectedIdentifier:
_mediaItemForIdentifier:
_addMediaIdentifierToList:
indexPathForRow:inSection:
isEqualToNumber:
removeObjectsInArray:
predicateWithValue:forProperty:
setWithObjects:
initWithFilterPredicates:
items
tonePickerViewController:selectedMediaItemWithIdentifier:
applicationMusicPlayer
playbackState
_playMediaItemWithIdentifier:
arrayWithObject:
collectionWithItems:
_musicPlayer
setQueueWithItemCollection:
setRepeatMode:
play
pauseWithFadeoutDuration:
navigationController
valueForProperty:
cellForRowAtIndexPath:
setAccessoryType:
initWithFrame:style:
setAutoresizingMask:
setTableView:
isEditing
setEditing:
dequeueReusableCellWithIdentifier:
_separatorBackdropOverlayBlendMode
setContentBackdropOverlayBlendMode:
separatorColor
setContentBackgroundColor:
setSelectionStyle:
setUserInteractionEnabled:
tonePickerCellBackgroundColor
showsDisclosureIndicator
needsDownloadProgress
defaultStyleForTableViewCellsWithDetailText
initWithStyle:reuseIdentifier:
setEditingAccessoryType:
tonePickerCellHighlightedTextColor
setHighlightedTextColor:
tonePickerCellTextFont
newBackgroundViewForSelectedTonePickerCell:
setSelectedBackgroundView:
newAccessoryDisclosureIndicatorViewForTonePickerCell
setEditingAccessoryView:
_configureTextColorOfLabelInCell:shouldTintText:checked:
addTarget:action:forControlEvents:
initWithActivityIndicatorStyle:
detailTextLabel
detailText
showsCheckmark
updateCell:withCheckedStatus:forTonePickerItem:
setOn:
setColor:
startAnimating
_updateCell:withDownloadProgress:animated:
tableView:updateCell:withSeparatorForPickerRowItem:
parentItem
_setShouldHaveFullLengthBottomSeparator:
setSeparatorInset:
_shouldShowCheckmarkOnTrailingEdge
imageView
setImage:
_pickerRowItemForIndexPath:
updateDividerContentColorToMatchSeparatorColorInTableView:
tableView:cellForPickerRowItem:
tableView:didSelectRowAtIndexPath:forPickerRowItem:
rowHeight
_customHeaderViewForHeaderInSection:
tableView:viewForHeaderInSection:
footerText
tableView:willDisplayCell:forPickerRowItem:
shouldPreventSelection
didReloadTones
performBatchUpdates:completion:
deleteRowsAtIndexPaths:withRowAnimation:
addIndex:
deleteSections:withRowAnimation:
insertRowsAtIndexPaths:withRowAnimation:
insertSections:withRowAnimation:
_reloadSectionHeaderFooters:withRowAnimation:
didUpdateCheckedStatus:ofToneClassicsPickerItem:
reloadRowsAtIndexPaths:withRowAnimation:
updateCell:withDetailText:
didUpdateDetailText:ofToneClassicsPickerItem:
_togglePlayMediaItemWithIdentifier:
initWithMediaTypes:
setAllowsPickingMultipleItems:
setModalPresentationStyle:
_stopMediaItemPlaybackWithFadeOutDuration:
tonePickerViewController:didChangeIgnoreMute:
initWithClassicTonesHeaderItem:
backgroundColor
_sectionContentInset
_setSectionContentInset:
_setClipUnderlapWhileTransitioning:
pushViewController:animated:
tonePickerController:requestsPresentingAlertWithTitle:message:
tonePickerTableViewWillDisappear:
mediaPicker:didPickMediaItems:
mediaPickerDidCancel:
setStyleProvider:
setShowsMedia:
selectedMediaIdentifier
addMediaItems:
removeMediaItems:
tableView:cellForRowAtIndexPath:
numberOfSectionsInTableView:
tableView:numberOfRowsInSection:
tableView:editingStyleForRowAtIndexPath:
tableView:commitEditingStyle:forRowAtIndexPath:
tableView:didSelectRowAtIndexPath:
tableView:heightForRowAtIndexPath:
tableView:titleForHeaderInSection:
tableView:heightForHeaderInSection:
tableView:titleForFooterInSection:
tableView:willDisplayCell:forRowAtIndexPath:
tableView:shouldHighlightRowAtIndexPath:
styleProvider
_tonePickerController
_showsToneStoreWasSetExplicitly
_needsScrollPositionReset
_storeBarButtonItem
_toneSectionHeaderViews
_mediaPickerController
_mediaItems
_toneClassicsTableViewController
_isHandlingSwitchControlValueChanged
_switchControlsBeingObserved
_styleProvider
tonePickerTableViewControllerHelper
_classicTonesHeaderItem
_tonePickerTableViewControllerHelper
_parentTonePickerController
_appendDescriptionOfAttributesToString:
_appendDescriptionOfAttributeNamed:withStringValue:toString:
parentSectionItem
needsRoomForCheckmark
_needsRoomForCheckmark
_needsActivityIndicator
_needsDownloadProgress
_downloadProgress
_itemKind
__parentTonePickerController
_numberOfChildren
_dividerViewFrame
contentView
_setDrawsAsBackdropOverlayWithBlendMode:
convertRect:toView:
contentBackgroundColor
contentBackdropOverlayBlendMode
_dividerView
_contentBackdropOverlayBlendMode
hasUserGeneratedVibrationsCapability
currentVibrationIdentifierForAlertType:
setDefaultVibrationIdentifier:
_updateVisibilityOfSynchronizedGroup
_sectionForDefaultGroup
_updateSectionVisibilityFlagToValue:usingBlock:sectionIndexGetter:
_sanitizedDefaultVibrationIdentifier
_indexPathForVibrationWithIdentifier:
currentVibrationIdentifierForAlertType:topic:
arrayWithObjects:
raise:format:
_sectionForUserGeneratedGroup
canEnterEditingMode
_sectionForNoneGroup
noneVibrationName
_updateCheckedStateOfAllVisibleCells
_updateEditButtonItem
_sortedUserGeneratedVibrationIdentifiers
vibrationPickerUsesOpaqueBackground
vibrationPickerCustomBackgroundColor
vibrationPickerTableViewSeparatorStyle
vibrationPickerCustomTableSeparatorBackdropOverlayBlendMode
vibrationPickerCustomTableSeparatorColor
showsEditButtonInNavigationBar
_updateEditButtonItemWithAnimation:
setAllowsSelectionDuringEditing:
_selectedVibrationIndexPath
presentedViewController
_dismissalDelegate
vibrationPickerViewControllerWasDismissed:
allKeys
sortedArrayUsingSelector:
allUserSelectableSystemVibrationIdentifiers
_sortedArrayWithVibrationIdentifiers:allowsDuplicateVibrationNames:
allUserGeneratedVibrationIdentifiers
showsUserGenerated
willChangeValueForKey:
didChangeValueForKey:
setEditing:animated:
_sectionForSynchronizedGroup
_sectionForSystemGroup
_sortedVibrationIdentifiers
vibrationWithIdentifierIsValid:
vibrationPickerViewController:selectedVibrationWithIdentifier:
_additionalDelegate
parentViewController
_navigationItem
editButtonItem
setRightBarButtonItem:animated:
indexPathForCell:
whitespaceCharacterSet
stringByTrimmingCharactersInSet:
decimalDigitCharacterSet
invertedSet
hasPrefix:
stringByReplacingCharactersInRange:withString:
rangeOfCharacterFromSet:
integerValue
localizedStringWithFormat:
stringByAppendingString:
indexSetWithIndex:
reloadSections:withRowAnimation:
performWithoutAnimation:
_cellAccessoriesDescriptorForRowAtIndexPath:
setChecked:
_areSynchronizedVibrationsAllowedForAlertType:
_sanitizedCorrespondingToneIdentifier
_synchronizedVibrationIdentifierForToneIdentifier:
_localizationIdentifierForHeaderInSection:
wantsCustomVibrationPickerHeaderView
vibrationPickerHeaderTextShouldBeUppercase
vibrationPickerHeaderTextFont
vibrationPickerHeaderTextColor
vibrationPickerHeaderTextShadowColor
vibrationPickerHeaderTextShadowOffset
vibrationPickerHeaderTextPaddingInsets
_showsOnlyEditableSections
initWithReuseIdentifier:
vibrationPickerCellTextFont
setRegularTextFont:
vibrationPickerCellTextColor
setRegularTextColor:
vibrationPickerCellHighlightedTextColor
vibrationPickerCellBackgroundColor
newBackgroundViewForSelectedVibrationPickerCell:
newAccessoryDisclosureIndicatorViewForVibrationPickerCell
setEditable:
setPlaceholderText:
_updateSelectionStyleForCell:indexPath:
_identifierOfVibrationAtIndexPath:
deleteUserGeneratedVibrationPatternWithIdentifier:error:
_handleError:
beginUpdates
endUpdates
_processCurrentVibrationSelection
visibleCells
makeTextFieldResignFirstResponderIfNeeded
setVibrationRecorderViewControllerDelegate:
_sanitizeVibrationIdentifierForPlayback:
_startVibratingWithVibrationIdentifier:
vibratorState
_adjustedNameForVibrationWithDesiredName:vibrationIdentifier:
addUserGeneratedVibrationPattern:name:error:
patternForVibrationWithIdentifier:
setName:forUserGeneratedVibrationWithIdentifier:error:
moveRowAtIndexPath:toIndexPath:
viewControllers
lastObject
setHidesBackButton:animated:
vibrationPickerTableViewCell:endedEditingWithText:
navigationController:willShowViewController:animated:
navigationController:didShowViewController:animated:
navigationControllerSupportedInterfaceOrientations:
navigationControllerPreferredInterfaceOrientationForPresentation:
navigationController:interactionControllerForAnimationController:
navigationController:animationControllerForOperation:fromViewController:toViewController:
setCorrespondingToneIdentifier:
setShowsUserGenerated:
setShowsEditButtonInNavigationBar:
_handleUserGeneratedVibrationsDidChangeNotification
tableView:willSelectRowAtIndexPath:
tableView:willBeginEditingRowAtIndexPath:
tableView:didEndEditingRowAtIndexPath:
_presentVibrationRecorderViewController
defaultVibrationIdentifier
correspondingToneIdentifier
allowsDeletingDefaultVibration
setAllowsDeletingDefaultVibration:
_setAdditionalDelegate:
_setDismissalDelegate:
_showsUserGenerated
_showsEditButtonAtRightSideOfCurrentNavigationController
_allowsDeletingDefaultVibration
_canEnterEditingMode
_viewHasAppearedAtLeastOnce
_isCallingParentViewController
_swipeToDeleteMode
_skipNextUserGeneratedVibrationsDidChangeNotification
_defaultVibrationIdentifierWasExplicitlySet
_showsSynchronized
_synchronizedVibrationIdentifier
_vibrationManager
_vibrationShouldStopTimer
_indexPathOfCellBeingDeleted
_sectionHeaderViews
_showsEditButtonInNavigationBar
_defaultVibrationIdentifier
_correspondingToneIdentifier
__additionalDelegate
__dismissalDelegate
_makeRemovableTextFieldEditable:
_isDisplayingRemovableTextField
placeholder
setPlaceholder:
highlightedTextColor
accessoryType
regularTextColor
isFirstResponder
indentationLevel
indentationWidth
descender
_layoutRemovableTextField
didTransitionToState:
isEditable
willTransitionToState:
areAnimationsEnabled
setAnimationsEnabled:
removeFromSuperview
placeholderText
regularTextFont
isChecked
_removableTextField
_editable
_regularTextColor
_text
_footerText
initWithRootViewController:
vibrationRecorderViewControllerDelegate
_vibrationRecorderContentViewController
safeAreaLayoutGuide
setTranslatesAutoresizingMaskIntoConstraints:
intrinsicContentSize
tk_addedConstraintForLayoutAttribute:asEqualToValueOfItem:withOffset:
tk_constrainLayoutAttribute:asEqualToValueOfItem:
tk_addedConstraintForLayoutAttribute:asEqualToLayoutAttribute:ofItem:withOffset:
tk_constrainLayoutAttribute:asEqualToConstant:
initWithMaximumTimeInterval:styleProvider:
tk_constrainLayoutAttribute:asEqualToValueOfItem:withOffset:
initWithVibrationPatternMaximumDuration:styleProvider:
setAccessibilityHint:
insertSubview:belowSubview:
tk_addedConstraintForLayoutAttribute:asEqualToValueOfItem:
tk_constrainLayoutAttribute:asEqualToLayoutAttribute:ofItem:
setFingerStillSpeed:
setFingerMovingSpeed:
setFirstRippleInitialRadius:
setFadeOutRadius:
setTextAlignment:
setLineBreakMode:
setNumberOfLines:
setIsAccessibilityElement:
tk_constrainLayoutAttribute:asGreaterThanOrEqualToValueOfItem:withOffset:
tk_constrainLayoutAttribute:asLessThanOrEqualToValueOfItem:withOffset:
_enterWaitingModeWithAnimation:enablePlayButton:
_handleScreenPeripheryInsetsDidChangeNotification:
_titleForControlsToolbarButtonWithIdentifier:
_handleLeftButtonTapped:
_handleRightButtonTapped:
semanticContentAttribute
userInterfaceLayoutDirectionForSemanticContentAttribute:
setWidth:
setItems:animated:
_setLeftButtonIdentifier:enabled:rightButtonIdentifier:enabled:animated:
setAlpha:
animateWithDuration:delay:options:animations:completion:
_exitWaitingModeWithAnimation:
clearAllVibrationComponents
setRoundedCornersCompensationDelayMode:
setCurrentTimeInterval:
vibrationComponentDidEnd
exitRecordingMode
_updateProgress:
currentVibrationComponentShouldEnd
didMoveToWindow
setConstant:
_updateBottomLineToolbarForPeripheryInsetsChange
object
_peripheryInsets
_setHidesShadow:
safeAreaInsetsDidChange
vibrationComponentDidStart
vibrationRecorderTouchSurfaceDidEnterRecordingMode:
vibrationComponentDidStartForVibrationRecorderTouchSurface:
vibrationComponentDidEndForVibrationRecorderTouchSurface:
vibrationRecorderTouchSurface:didExitRecordingModeWithContextObject:
vibrationRecorderTouchSurfaceDidFinishReplayingVibration:
_instructionsLabel
_bottomLineToolbar
_controlsToolbar
_progressView
_touchSurface
_bottomLineToolbarBottomConstraint
_controlsToolbarTopConstraint
_progressToolbarBottomConstraint
_touchSurfaceTopConstraint
_isReplayModeEnabled
_leftButtonIdentifier
_rightButtonIdentifier
_vibrationPatternMaximumDuration
_currentVibrationProgressDidStartTimestamp
_currentVibrationComponentDidStartTimestamp
_isAnimatingProgress
_displayLinkManagerObserverToken
tk_addedConstraintForLayoutAttribute:asEqualToValueOfItem:withMultiplier:
_cappedValueForTimeInterval:
roundedCornersCompensationDelayMode
_dotInsets
_dotSize
_frameForDotAtTimeInterval:duration:
_updateHorizontalConstraintsOfDotForCurrentVibrationComponent:withFrame:
setDuration:
_resizableDotImage
initWithImage:
_dotTintColor
setTintColor:
setTimeInterval:
setPreviousPauseTimeInterval:
setPreviousPauseDuration:
setAccessibilityFrameAdditionalHeight:
tk_addedConstraintForLayoutAttribute:asEqualToLayoutAttribute:ofItem:withMultiplier:
didMoveToSuperview
_updateProgressViewBackgroundColor
descriptionForDuration:
accessibilityValue
accessibilityFrame
isAccessibilityElement
accessibilityLabel
currentTimeInterval
_maximumTimeInterval
_currentVibrationComponentDidBeginTimeInterval
_previousPauseDidBeginTimeInterval
_progressViewWidthConstraint
_dotForCurrentVibrationComponent
_dotForCurrentVibrationComponentLeftConstraint
_dotForCurrentVibrationComponentRightConstraint
_dots
_roundedCornersCompensationDelayMode
_currentTimeInterval
setFillColor:
reset
timeIntervalSinceCreation
configureWithTimeIntervalSinceCreation:normalizedRingLocation:ringSpeed:
normalizedRingLocation
ringSpeed
_creationTimestamp
_ringSpeed
_normalizedRingLocation
_appendDescriptionOfAttributeNamed:withIntegerValue:toString:
_row
canBeShownFromSuspendedState
timeInterval
previousPauseTimeInterval
previousPauseDuration
accessibilityFrameAdditionalHeight
accessibilityTraits
_timeInterval
_duration
_previousPauseTimeInterval
_previousPauseDuration
_accessibilityFrameAdditionalHeight
initWithFormat:
appendString:
appendFormat:
_appendDescriptionOfAttributeNamed:withBoolValue:toString:
_section
minimumTextIndentation
textRectForCell:rowWidth:forSizing:
_adjustedTextFrameWithOriginalTextFrame:forCell:
setMinimumTextIndentation:
_minimumTextIndentation
initWithStyleProvider:
setOpaque:
setAccessibilityTraits:
_stopAnimation
_updateRingEnlargementAnimation
_currentSpeed
_enqueueRingLayerWithTimeIntervalSinceCreation:normalizedLocation:speed:
tk_lastEnqueuedObject
_reusableTouchContextObject
configureWithTimeIntervalSinceCreation:location:
tk_enqueueObject:
tk_nextDequeuedObject
tk_dequeueObject
_enqueueReusableTouchContextObject:
location
fingerStillSpeed
fingerMovingSpeed
_refresh:
firstRippleInitialRadius
fadeOutRadius
_reusableRingLayer
numberWithUnsignedInteger:
layer
addSublayer:
setBeginTime:
setValue:forKey:
addAnimation:forKey:
_enqueueReusableRingLayer:
CGColor
setStrokeColor:
setLineWidth:
setKeyPath:
CGPath
setFromValue:
setToValue:
numberWithDouble:
setAnimations:
begin
setPosition:
commit
valueForKey:
removeObject:
removeFromSuperlayer
_startAnimation
anyObject
locationInView:
_touchBeganAtLocation:
_touchMovedToLocation:
_touchEndedAtLocation:
touchesEnded:withEvent:
animationDidStart:
animationDidStop:finished:
_isTouchDown
touchesBegan:withEvent:
touchesMoved:withEvent:
touchesCancelled:withEvent:
_currentTouchLocation
_currentTouchStartTime
_numberOfRipplesForCurrentTouch
_isTrackingTouch
_recentTouchesContextQueue
_reusableTouchContexts
_currentSpeedCoefficient
_needsCurrentSpeedRefresh
_isAnimating
_ringLayersQueue
_reusableRingLayers
_ringLayersByIdentifiers
_lastRingLayerIdentifier
_ringEnlargementAnimation
_fingerStillSpeed
_fingerMovingSpeed
_firstRippleInitialRadius
_fadeOutRadius
_classicToneIndex
_location
setMultipleTouchEnabled:
setClipsToBounds:
setAccessibilityLabel:
_recordTouchLocation:touchPhase:
didStopRecording
recordNormalizedTouchLocation:touchPhase:
_updateTouchLocationForReplayMode:
getNormalizedTouchLocation:touchPhase:forTimeInterval:
_isRecordingModeEnabled
_recordedDataWrapper
_shouldIgnoreCurrentTouch
_vibrationPatternToReplay
_replayModeWasEnteredStartTime
_shouldTintText
_showsCheckmark
_showsDisclosureIndicator
_shouldPreventSelection
_detailText
_updateMaximumFramesPerSecondRate:
_prepareRecordedDataBufferForStoringEnoughElementsForRecordingDuration:
_recordFinalDataWithNormalizedTouchLocation:touchPhase:timeIntervalSinceBeginningOfPattern:
_vibrationPatternDidStartTimestamp
_maximumFramesPerSecondRate
_recordedData
_recordedDataElementsCount
_recordedDataCursor
_warmUpModeDidStartTimestamp
_displayLinkHasRefreshedAtLeastOnce
setAutocapitalizationType:
setReturnKeyType:
setEnablesReturnKeyAutomatically:
sendActionsForControlEvents:
initWithLabel:appendUUIDToLabel:
_turnOffIfAppropriate
performSynchronousBlock:
_previewVibrationSystemSoundID
numberWithUnsignedInt:
initWithObjectsAndKeys:
_vibrationDidCompleteWithPlayRequestIdentifier:
_accessQueue
_activePlayRequestIdentifier
_pendingStopRequestIdentifiers
removeLastObject
nextResponder
tk_firstViewControllerInResponderChain
_intrinsicDownloadIndicatorViewSize
setBounds:
setNeedsDisplay
colorWithRed:green:blue:alpha:
setFill
setStroke
traitCollection
displayScale
moveToPoint:
addLineToPoint:
addArcWithCenter:radius:startAngle:endAngle:clockwise:
closePath
stroke
_handleDisplayLinkDidFire:
mainRunLoop
functionWithName:
_stopProgressAnimation
_solveForInput:
drawRect:
setProgress:
progress
_initialAnimatedProgress
_currentAnimatedProgress
_progressAnimationEndTime
_progressAnimationStartTime
_progressAnimationCompletionHandlers
_progressAnimationTimingFunction
_progress
tableCellGroupedBackgroundColor
_groupTableHeaderFooterTextColor
groupedTableCellBackgroundColor
groupedTableHeaderFooterTextColor
_sectionHeader
_regularToneSectionIndex
tk_addedConstraintForLayoutAttribute:asEqualToConstant:
tk_addedConstraintForLayoutAttribute:asEqualToLayoutAttribute:ofItem:
tk_constrainLayoutAttribute:asEqualToLayoutAttribute:ofItem:withMultiplier:
tk_addedConstraintForLayoutAttribute:relatedBy:toItem:attribute:multiplier:constant:
tk_addedConstraintForLayoutAttribute:asLessThanOrEqualToValueOfItem:withOffset:
tk_addedConstraintFotLayoutAttribute:asGreaterThanOrEqualToValueOfItem:withOffset:
constraintWithItem:attribute:relatedBy:toItem:attribute:multiplier:constant:
addConstraint:
owningView
_tl_depth
hasAmbiguousLayout
subviews
_tk_recursiveAutolayoutTraceAtLevel:anyDescendantHasAmbiguousLayout:
tk_constrainLayoutAttribute:asEqualToLayoutAttribute:ofItem:withOffset:
tk_constrainLayoutAttribute:asEqualToValueOfItem:withMultiplier:
tk_constrainLayoutAttribute:relatedBy:toItem:attribute:multiplier:constant:
_tk_autolayoutTrace
v16@0:8
v24@0:8@16
@16@0:8
@"<TKTonePickerTableViewLayoutMarginsObserver>"
@"<TKTonePickerTableViewSeparatorObserver>"
B24@0:8@16
#16@0:8
@24@0:8:16
@32@0:8:16@24
@40@0:8:16@24@32
B16@0:8
B24@0:8#16
B24@0:8:16
Vv16@0:8
Q16@0:8
^{_NSZone=}16@0:8
B24@0:8@"Protocol"16
@"NSString"16@0:8
v20@0:8B16
v24@0:8@"NSString"16
v24@0:8@"NSArray"16
@24@0:8q16
q16@0:8
@32@0:8q16@24
v32@0:8@16q24
v40@0:8@16q24@32
v32@0:8q16@24
@32@0:8q16Q24
v40@0:8@16q24Q32
@24@0:8@16
@32@0:8@16^B24
v28@0:8@16B24
@24@0:8^B16
v24@0:8B16B20
v32@0:8@?16@?24
v64@0:8@16@24@32@40@48@56
@24@0:8Q16
Q24@0:8@16
v32@0:8@16B24B28
@20@0:8B16
v28@0:8B16@20
v32@0:8@16@24
v24@0:8Q16
@"TLToneManager"
@"NSMutableDictionary"
@"NSMutableArray"
@"NSArray"
@"NSMutableSet"
@"TLAlert"
@"<TKTonePickerControllerDelegate>"
@"NSString"
@"<TLToneStoreDownloadController>"
@"NSIndexPath"
@48@0:8{CGRect={CGPoint=dd}{CGSize=dd}}16
{UIOffset=dd}16@0:8
v32@0:8{UIOffset=dd}16
v48@0:8{UIEdgeInsets=dddd}16
{CGSize=dd}32@0:8{CGSize=dd}16
{UIEdgeInsets=dddd}16@0:8
@"UILabel"
{UIEdgeInsets="top"d"left"d"bottom"d"right"d}
v24@0:8i16B20
@"UIColor"
d16@0:8
@24@0:8@?16
@32@0:8Q16@?24
@"CADisplayLink"
@32@0:8@?16Q24
@"UIColor"16@0:8
@"UIScreen"16@0:8
v24@0:8@"UIScreen"16
@"UIFont"16@0:8
@"UIImage"16@0:8
v32@0:8@16:24
@32@0:8@16:24
@88@0:8:16{UIEdgeInsets=dddd}24{CGSize=dd}56q72@?80
@"NSBundle"
@"UIScreen"
v28@0:8@16i24
v24@0:8@"TKVibrationRecorderView"16
v28@0:8@"TKVibrationRecorderView"16i24
B24@0:8@"TKVibrationRecorderView"16
v32@0:8@"TKVibrationRecorderView"16@24
B48@0:8@16{_NSRange=QQ}24@40
B24@0:8@"UITextField"16
v24@0:8@"UITextField"16
v32@0:8@"UITextField"16q24
B48@0:8@"UITextField"16{_NSRange=QQ}24@"NSString"40
@"TKVibrationRecorderView"
@"TLVibrationPattern"
@"UIBarButtonItem"
@"UIAlertController"
@"UIAlertAction"
@"UITextField"
@"TKVibratorController"
@"NSDictionary"
@"<TKVibrationRecorderViewControllerDelegate>"
@"TKVibrationRecorderViewController"
v40@0:8@16@?24@?32
v36@0:8@16B24@28
v40@0:8@16@24@32
v24@0:8@"TKTonePickerController"16
v40@0:8@"TKTonePickerController"16@?<v@?>24@?<v@?B>32
v32@0:8@"TKTonePickerController"16@"NSArray"24
v36@0:8@"TKTonePickerController"16B24@"TKTonePickerItem"28
v40@0:8@"TKTonePickerController"16@"NSString"24@"TKTonePickerItem"32
v32@0:8@"TKTonePickerController"16@"TKTonePickerItem"24
v32@0:8@"TKTonePickerController"16@"NSString"24
@32@0:8@16Q24
Q32@0:8@16@24
v36@0:8@16Q24B32
v32@0:8@16d24
v44@0:8@16B24@28@36
v32@0:8@"TKTonePickerController"16@"NSNumber"24
B24@0:8@"TKTonePickerController"16
Q24@0:8@"TKTonePickerController"16
@"NSNumber"32@0:8@"TKTonePickerController"16Q24
@"NSString"32@0:8@"TKTonePickerController"16Q24
Q32@0:8@"TKTonePickerController"16@"NSNumber"24
v36@0:8@"TKTonePickerController"16Q24B32
v32@0:8@"TKTonePickerController"16d24
v44@0:8@"TKTonePickerController"16B24@"TKTonePickerItem"28@"NSIndexPath"36
v40@0:8@"TKTonePickerController"16@"NSString"24@"NSString"32
@32@0:8@16@24
v24@0:8@"UITableViewController<TKTonePickerTableViewLayoutMarginsObserver><TKTonePickerTableViewSeparatorObserver>"16
@"UITableViewCell"32@0:8@"UITableView"16@"TKPickerRowItem"24
v40@0:8@"UITableView"16@"UITableViewCell"24@"TKPickerRowItem"32
@"TKTonePickerItem"16@0:8
v36@0:8@"TKPickerTableViewCell"16B24@"TKTonePickerItem"28
v32@0:8@"TKPickerTableViewCell"16@"NSString"24
v24@0:8@"UITableView"16
v40@0:8@"UITableView"16@"NSIndexPath"24@"TKPickerRowItem"32
v24@0:8@"TKTonePickerTableView"16
v32@0:8@"MPMediaPickerController"16@"MPMediaItemCollection"24
v24@0:8@"MPMediaPickerController"16
v32@0:8@16f24B28
v24@0:8d16
q24@0:8@16
q32@0:8@16q24
q32@0:8@16@24
d32@0:8@16@24
@32@0:8@16q24
d32@0:8@16q24
B32@0:8@16@24
@"TKTonePickerController"
@"UIImage"
@"MPMediaPickerController"
@"MPMusicPlayerController"
@"TKToneClassicsTableViewController"
@"<TKTonePickerViewControllerDelegate>"
@"<TKTonePickerStyleProvider>"
@"TKTonePickerItem"
@"<TKTonePickerTableViewControllerHelper>"
@"TKPickerItem"24@0:8q16
f16@0:8
v20@0:8f16
v24@0:8q16
{CGRect={CGPoint=dd}{CGSize=dd}}16@0:8
@"UIView"
@32@0:8q16q24
v32@0:8@"TKVibrationPickerTableViewCell"16@"NSString"24
v40@0:8@"TKVibrationRecorderViewController"16@"NSDictionary"24@"NSString"32
v24@0:8@"TKVibrationRecorderViewController"16
v36@0:8@16@24B32
@48@0:8@16q24@32@40
v36@0:8@"UINavigationController"16@"UIViewController"24B32
Q24@0:8@"UINavigationController"16
q24@0:8@"UINavigationController"16
@"<UIViewControllerInteractiveTransitioning>"32@0:8@"UINavigationController"16@"<UIViewControllerAnimatedTransitioning>"24
@"<UIViewControllerAnimatedTransitioning>"48@0:8@"UINavigationController"16q24@"UIViewController"32@"UIViewController"40
{?=BB}24@0:8@16
@28@0:8@16B24
v36@0:8B16@?20@?28
@"TLVibrationManager"
@"NSTimer"
@"<TKVibrationPickerViewControllerDelegate>"
@"<TKVibrationPickerStyleProvider>"
@"<TKVibrationPickerViewControllerDismissalDelegate>"
@"<TKVibrationPickerTableViewCellDelegate>"
@"TKVibrationRecorderContentViewController"
B24@0:8@"TKVibrationRecorderTouchSurface"16
v24@0:8@"TKVibrationRecorderTouchSurface"16
v32@0:8@"TKVibrationRecorderTouchSurface"16@24
@24@0:8d16
@20@0:8i16
v36@0:8i16B20i24B28B32
@"<TKVibrationRecorderStyleProvider>"
@"UIToolbar"
@"TKVibrationRecorderProgressView"
@"TKVibrationRecorderTouchSurface"
@"NSLayoutConstraint"
@"<NSCopying>"
@"<TKVibrationRecorderViewDelegate>"
@32@0:8d16@24
{CGSize=dd}16@0:8
v56@0:8@16{CGRect={CGPoint=dd}{CGSize=dd}}24
{CGRect={CGPoint=dd}{CGSize=dd}}32@0:8d16d24
d24@0:8d16
i16@0:8
v20@0:8i16
@"TKVibrationRecorderProgressDotImageView"
v48@0:8d16{CGPoint=dd}24d40
{CGPoint=dd}16@0:8
{CGPoint="x"d"y"d}
{CGRect={CGPoint=dd}{CGSize=dd}}56@0:8{CGRect={CGPoint=dd}{CGSize=dd}}16@48
{CGRect={CGPoint=dd}{CGSize=dd}}36@0:8@16d24B32
v24@0:8@"CAAnimation"16
v28@0:8@"CAAnimation"16B24
v32@0:8{CGPoint=dd}16
@"CAAnimation"
v40@0:8d16{CGPoint=dd}24
v36@0:8{CGPoint=dd}16i32
@"TKVibrationRecorderTouchSurfaceRecordedDataWrapper"
@"<TKVibrationRecorderTouchSurfaceDelegate>"
v44@0:8{CGPoint=dd}16i32d36
B40@0:8^{CGPoint=dd}16^i24d32
I16@0:8
@"TLAccessQueue"
@"NSUUID"
v48@0:8{CGRect={CGPoint=dd}{CGSize=dd}}16
v32@0:8f16B20@?24
@"CAMediaTimingFunction"
v32@0:8q16d24
v40@0:8q16@24d32
v40@0:8q16q24@32
v48@0:8q16q24@32d40
@32@0:8q16d24
@40@0:8q16@24d32
@40@0:8q16q24@32
@48@0:8q16q24@32d40
v64@0:8q16q24@32q40d48d56
@64@0:8q16q24@32q40d48d56
@32@0:8q16^B24
