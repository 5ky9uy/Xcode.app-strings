com.apple.Carousel.authAlertXPCService
alertTitle
alertMessage
alertIdentifier
defaultButtonTitle
alternateButtonTitle
otherButtonTitle
alertResponse
alertSupplementViewID
alertSupplementViewData
overWriteExistingAlert
systemSoundIDKey
textFieldDescription
textFieldIsSecure
textFieldInputType
textFieldLength
textFieldValue
textFieldContentType
AKCarouselAlertError
com.apple.AuthKit.AKSecondFactorCodeView
com.apple.AuthKit.AKLocationSignInView
com.apple.AuthKit.AKAuthorize
v8@?0
com.apple.AuthKit.alertRequestQueue
hash
TQ,R
superclass
T#,R
description
T@"NSString",R,C
debugDescription
v16@?0@"NSError"8
v24@?0@"NSDictionary"8@"NSError"16
internalQueue
T@"NSObject<OS_dispatch_queue>",&,N,V_internalQueue
xpcConnection
T@"NSXPCConnection",&,N,V_xpcConnection
_userID
_clientID
_teamID
_altDSID
supportsSecureCoding
TB,R
teamID
T@"NSString",C,N,V_teamID
clientID
T@"NSString",C,N,V_clientID
altDSID
T@"NSString",C,N,V_altDSID
userID
T@"NSString",C,N,V_userID
AKExtensionItemContext
com.apple.AuthKitUI.AKLocationSignInAlert
com.apple.AuthKitUI.AKSecondFactorAlert
com.apple.AuthKitUI.AKSecondFactorEntryAlert
ak_context
T@"AKAppleIDAuthenticationContext",&,D,N,Sak_setContext:
X-Apple-Identity-Token
X-Apple-Session-Key
X-Apple-Encrypted-Session-Key
stringValue
T@"NSString",C,N,V_stringValue
expirationDate
T@"NSDate",R,N,V_expirationDate
name
T@"NSString",C,N,V_name
sessionKey
T@"NSData",R,N
encryptedSessionKey
externalizedVersion
externalizedVersionString
T@"NSString",R,N
AKPassword
AKRawPassword
AKIDMSToken
AKDSID
AKAltDSID
AKRememberPassword
AKIsHSA2
AKSecurityLevel
AKAuthenticationMode
AKIsUnderage
AKIsLegacyStudent
AKDidPerformInteractive
AKNewAppleIDSetupInfo
AKMasterKeyID
AKDidShowServerUI
AKAcceptedTerms
AKManagedAppleID
AKAuditLogin
AKFirstName
AKLastName
AKImageURL
AKShortLivedToken
AKIdentityToken
AKIsServerUIRequired
AKIsPasscodeResetRequired
AKConfigurationInfo
AKDuplexSession
AKCircleContext
AKRepairState
AKAppleIDEmailsDidChangeNotification
com.apple.authkit.user-info-changed
security-level
auth-mode
AKDidPerformBiometric
AKDidPerformPasscode
primaryEmailVetted
firstName
lastName
reachableEmails
forwardTo
authorizedAppListVersion
previouslySelectedAsPrivateEmail
previouslySelectedEmail
AKAppleIDAuthenticationControllerXPCLock
-[AKAppleIDAuthenticationController authenticateWithContext:completion:] requires a non-nil value for the context parameter.
v20@?0B8@"NSError"12
v24@?0@"AKUserInformation"8@"NSError"16
v24@?0Q8@"NSError"16
v24@?0@"NSArray"8@"NSError"16
v24@?0@"AKApplicationMetadataInfo"8@"NSError"16
(null)
v24@?0@"NSNumber"8@"NSError"16
v24@?0@"AKCircleRequestPayload"8@"NSError"16
v24@?0@"NSString"8@"NSError"16
v24@?0@"AKAppleIDServerResourceLoadDelegate"8@"NSError"16
sensitiveAuthenticationKeys
T@"NSSet",R,N
deallocHandler
T@?,C,N,V_deallocHandler
delegate
T@"<AKAppleIDAuthenticationDelegate>",W,N
AKContextManagerQueue
v20@?0B8@"NSDictionary"12
v12@?0B8
-[_AKAppleIDAuthenticationContextManager provisionAnisetteForContext:withCompletion:]
-[_AKAppleIDAuthenticationContextManager syncAnisetteForContext:withSIMData:completion:]
-[_AKAppleIDAuthenticationContextManager eraseAnisetteForContext:withCompletion:]
-[_AKAppleIDAuthenticationContextManager fetchAnisetteDataForContext:provisionIfNecessary:withCompletion:]
-[_AKAppleIDAuthenticationContextManager legacyAnisetteDataForContext:DSID:withCompletion:]
T@"<AKAppleIDAuthenticationDelegate>",W,N,V_delegate
<%@: %p, _underlylingTask: %@>
request
T@"NSURLRequest",&,N,V_request
retryCount
TQ,N,V_retryCount
underlyingTask
T@"NSURLSessionDataTask",&,N,V_underlyingTask
completionHandler
T@?,C,N,V_completionHandler
receivedData
T@"NSMutableData",&,N,V_receivedData
lastRetryError
T@"NSError",&,N,V_lastRetryError
canceledOrCompleted
TB,N,V_canceledOrCompleted
AuthKitURLSession
com.apple.authkit.url
v32@?0@"NSData"8@"NSURLResponse"16@"NSError"24
icloud.com
_usesAppleIDContext
TB,N,V__usesAppleIDContext
scopes
client_id
credential_state
<%@:%p> clientID: %@, scopes: %@, state:%li
T@"NSArray",C,N,V_scopes
state
Tq,N,V_state
com.apple.authkit
core
traffic
query
signpost
BundleID
iTunesAltDSID
IconData
IconScale
type
StartProgressAnimation
FetchAppIcon
FetchAppIconReply
Unknown
_attestationHeaders
%@ %@
attestationHeaders
T@"NSDictionary",C,N,V_attestationHeaders
@32@?0@8@16^B24
(******)
com.apple.gs.
(cag).
%@...
v32@?0@"NSString"8@"NSString"16^B24
v32@?0@8@16^B24
com.apple.authkit.trusted-device-list-changed
T@"NSString",R,C,V_altDSID
operation
TQ,R,V_operation
machineID
T@"NSString",R,C,V_machineID
serialNumber
T@"NSString",R,C,V_serialNumber
timestamp
T@"NSDate",R,C,V_timestamp
_userSelection
_loginChoice
_selectedRequest
_rawAccountPassword
<%@: %p { selectedRequest: %@, authorizationSelection: %@, loginChoice: %@, rawPassword: %@}
selectedRequest
T@"<AKCredentialRequestProtocol>",&,N,V_selectedRequest
userSelection
T@"AKAuthorizationScopesUserSelection",&,N,V_userSelection
loginChoice
T@"NSNumber",&,N,V_loginChoice
rawAccountPassword
T@"NSString",C,N,V_rawAccountPassword
POST
AKAttestationErrorDomain
AKAttestationSignerValidity
sharedSigner
T@"AKAttestationSigner",R,N
_akAction
_itemIdentifier
<%@:%p> identifier: %@, action: %@, altDSID: %@
itemIdentifier
T@"NSString",C,N,V_itemIdentifier
akAction
T@"NSString",C,N,V_akAction
number
slotID
label
dataPreferred
defaultVoice
physicalSim
PhoneCertificate
phoneCertificate
T@"NSString",&,N,V_phoneCertificate
Tq,N,V_slotID
sharedInstance
T@"AKCarrierBundleUtilities",R
com.apple.accounts.carrierUtilities.queue
true
ak-button
ak-action
X-Apple-AK-Action
start-icsc
mk-validation
continue
complete
read
cancel
delete
teardown
clientInfo
X-Apple-AK-Continuation-Data
X-Apple-Alternate-Id
X-Apple-DSID
X-Apple-I-88CC-99DE-EE63-2736
X-Apple-PE-Token
X-Apple-I-Account-Name
X-Apple-I-Account-NameType
phoneNumber
AKUsername
AKPasswordResetTokenKey
AKEmailVerificationCompletedNotificationKey
icloud
imessage
facetime
itunesstore
appstore
gamecenter
AKICSCURLKey
AKRecoveryURLKey
X-Apple-iCSC-Identity-Token
X-Apple-iCSC-PE-Token
X-Apple-Recovery-Identity-Token
X-Apple-Recovery-PE-Token
X-Apple-MK-Validation-Token
X-Apple-I-iCSC-PRK
X-Apple-I-iCSC-MD-M
X-Apple-I-ICSCREC
status
success
failure
appleid
errorCode
errorMessage
action
start_account_recovery
try_again
prs_account_nm
personID
dsid
repair-state
authmode
pakedata
idmsdata
circlestep
ptkn
atxid
RequestURL
Request
Header
prkgen
X-Apple-AK-Auth-Type
X-Apple-AK-Request-Auth-Type
HSA2
X-Apple-I-Experiment-Mode
X-Apple-I-RecoveryKey-Show
X-Apple-I-HSA1-Conversion
X-Apple-I-Test-Account-Mode
source
clear_followup_notification
AKFollowUpAltDSIDKey
AKFollowUpServerURL
AKFollowUpSafariURL
cfudata
cfuids
items
AKUserIdentifier
AKAuthorizedScopes
AKUserInformation
AKAuthorizationCode
AKTVExpectediTunesAltDSID
AUTH_EVENT_TYPE_UNKNOWN
SRP_AUTH_FAILURE
SECOND_FACTOR_SERVER_UI
SECOND_FACTOR_PIGGYBACK_TRANSITION
SECOND_FACTOR_PIGGYBACK_FAILURE
SECOND_FACTOR_PIGGYBACK_ESCAPE_SMS_SUCCESS
SECOND_FACTOR_PIGGYBACK_ESCAPE_FAILURE
_requestIdentifier
_shoudlSkipBiometrics
_shoudlForceUI
_shoudlSkipUI
_localizedAppName
_informativeText
_iconName
_iconData
_iconScale
_shouldForcePrivateEmail
_proxiedClientAppName
_proxiedClientBundleID
_proxiedClientTeamID
_proxiedClientAppID
_proxiedAssociatedDomains
_authorizationRequests
_passwordRequests
_isFirstPartyLogin
_requirePassword
_isRapportLogin
B24@?0@"<AKCredentialRequestProtocol>"8Q16
<%@: %p> Auth Request %@ 
Password Request: %@ 
Proxied Bundle: %@
Proxied Team: %@
T@"NSString",C,N,V_iconName
T@"NSData",C,N,V_iconData
T@"NSNumber",C,N,V_iconScale
T@"NSString",C,N,V_informativeText
_shouldForceUI
TB,N,V_shouldForceUI
_shouldSkipBiometrics
TB,N,V_shouldSkipBiometrics
_shouldSkipAuthorizationUI
TB,N,V_shouldSkipAuthorizationUI
TB,N,V_shouldForcePrivateEmail
TB,N,V_requirePassword
TB,N,V_isFirstPartyLogin
TB,N,V_isRapportLogin
T@"NSString",&,N,V_proxiedClientAppName
T@"NSString",&,N,V_proxiedClientBundleID
T@"NSString",&,N,V_proxiedClientTeamID
T@"NSString",&,N,V_proxiedClientAppID
T@"NSArray",&,N,V_proxiedAssociatedDomains
requestIdentifier
T@"NSUUID",R,C,N,V_requestIdentifier
authorizationRequest
T@"AKAuthorizationRequest",&,N,V_authorizationRequest
passwordRequest
T@"AKPasswordRequest",&,N,V_passwordRequest
credentialRequests
T@"NSArray",&,N
_userInformation
_makePrivateEmail
{ userInformation: %@, makePrivateEmail: %@}
userInformation
T@"AKUserInformation",C,N,V_userInformation
makePrivateEmail
TB,N,V_makePrivateEmail
X-Mme-Device-Id
X-Apple-I-Client-Time
X-Mme-Proxied-Device-Id
X-Apple-Proxied-Identity-Token
X-Apple-GS-Token
X-Apple-SL-Token
X-Apple-I-MD
X-Apple-I-MD-M
X-Apple-I-MD-RINFO
X-Apple-I-Companion-MD
X-Apple-I-Companion-MD-M
X-Apple-I-Companion-MD-RINFO
X-Apple-I-Proxied-MD
X-Apple-I-Proxied-MD-M
X-Apple-I-Proxied-MD-RINFO
X-Apple-Ephemeral-Auth
X-Mme-Nas-Qualify
X-Apple-I-Logged-In-Services
X-Apple-AK-Context-Type
X-Apple-I-CK
X-Apple-I-PRK
X-MMe-Country
X-MMe-Proxied-Country
X-Apple-I-Locale
X-Apple-I-TimeZone
X-Apple-I-TimeZone-Offset
X-MMe-Companion-Client-Info
X-MMe-Proxied-Client-Info
X-Apple-I-PRK-Gen
X-Apple-I-Proxied-PRK-Gen
X-Apple-I-Local-Login-Uses-AppleID
X-Apple-HB-Token
X-Apple-I-MLB
X-Apple-I-ROM
X-Apple-I-SRL-NO
X-Apple-I-Proxied-SRL-NO
X-Apple-I-Device-PN
X-Apple-IDS-PAC
X-Apple-I-Phone
X-Apple-iOS-SLA-Version
X-Apple-Proxied-App-Name
X-Apple-Client-App-Name
X-Apple-I-MD-LU
X-Apple-I-CDP-Circle-Status
X-Mme-Show-Warranty
X-MMe-Device-Model
X-Apple-I-AppleID
X-Apple-I-DeviceUserMode
X-Apple-I-CFU-State
X-Apple-I-App-Provided-Context
X-Apple-I-Proxied-ICSCREC
X-Apple-Test-Application
X-Apple-I-Device-Configuration-Mode
false
%@:%@
itunes
piggybacking
%llu
AKDisablePET
AKFakeAuthSuccess
AKDisablePiggy
AKAddHS2CreateHeader
AKSuppressHSA2Suggestions
AKAllowPhoneNumberAccounts
AKAddExperimentalModeHeader
AKAddTestApplicationHeader
AKSuppressModalSheetsInMacBuddy
_AKAutocycleAppsInTiburon
_AKAddTestAccountHeader
_AKAuthorizationDemoMode
AKLastIDMSEnvironment
com.apple.authkit.config
v12@?0i8
shouldDisablePETs
Tq,N
shouldFakeAuthSuccess
shouldDisablePiggybacking
shouldSuppressHSA2Suggestions
shouldAddHSA2CreateHeader
shouldAllowPhoneNumberAccounts
shouldAllowExperimentalMode
shouldAllowDemoMode
shouldAllowTestApplication
shouldEnableTestAccountMode
shouldSuppressModalSheetsInMacBuddy
shouldAutocycleAppsInTiburon
lastKnownIDMSEnvironment
TQ,N
AKConfigurationDidChangeNotification
cfgs
abs-enable
baa-interval
X-MMe-Nas-Qualify
X-MMe-Nas-E
X-Apple-Baa-S
X-Apple-Baa
X-MMe-Client-Info-S
X-Apple-Baa-E
X-MMe-Proxied-Nas-Qualify
X-MMe-Proxied-Nas-E
X-Apple-Proxied-Baa-S
X-Apple-Proxied-Baa
X-MMe-Proxied-Client-Info-S
X-Apple-Proxied-Baa-E
com.apple.authkit.signingQ
@"NSXPCConnection"8@?0
v32@?0@"NSDictionary"8@"NSData"16@"NSError"24
authenticationController
T@"AKAppleIDAuthenticationController",&,N,V_authenticationController
isProxy
TB,N,V_isProxy
v16@?0@"NSNumber"8
@"NSString"32@?0@"NSString"8@"NSData"16^B24
_services
_operatingSystems
_includeUntrustedDevices
_includeFamilyDevices
<%@:%p> altDSID: %@, os: %@, services: %@, untrusted: %d, family: %d
includeUntrustedDevices
TB,N,V_includeUntrustedDevices
includeFamilyDevices
TB,N,V_includeFamilyDevices
services
T@"NSArray",C,N,V_services
operatingSystems
T@"NSArray",C,N,V_operatingSystems
com.apple.ak.authorizationservices.xpc
AppleIDAuthSupportNoPinning
.GlobalPreferences
adsid
DSID
aliases
retaining-services
reachableEmailAddresses
vettedPrimaryEmail
forwardingEmail
applicationListVersion
phoneAsAppleID
isUnderage
appleIdSignInEnabled
privateEmailSelection
authorizationEmailSelection
__OSINSTALL_ENVIRONMENT
__AKSYNCBUBBLE
AKAccountManagerQueue
@"NSString"32@?0@"NSNumber"8Q16^B24
AKAccountManager.groupedAccountCleanup
accountClass
primaryAccount
primary
primaryEmailVerified
appleIdAliases
T@"AKAccountManager",R,N
appleIDAccountType
T@"ACAccountType",R,N
store
T@"ACAccountStore",&,N,V_accountStore
authKitAccountType
iCloudAccountType
AMSBag
/System/Library/PrivateFrameworks/AppleMediaServices.framework/AppleMediaServices
ACAccountStore
/System/Library/Frameworks/Accounts.framework/Accounts
ACHeartbeatTokenKey
ACContinuationTokenKey
ACPasswordResetTokenKey
ACPasswordResetTokenBackupKey
ACTokenKey
ACAccountTypeIdentifierIDMS
ACAccountTypeIdentifierAppleAccount
ACAccountTypeIdentifierAppleIDAuthentication
%02X
com.apple.ak.anisette.xpc
XPCInterface
T@"NSXPCInterface",R,N
_user
_site
_appleIDAuth
AKAuthorizationLoginChoice:
User: %@    Site: %@    AppleIDAuth: %@
user
T@"NSString",C,N,V_user
site
T@"NSString",C,N,V_site
appleIDAuth
TB,N,V_appleIDAuth
_identityToken
_heartbeatToken
_shouldSendSigningHeaders
_shouldSendEphemeralAuthHeader
_serviceType
_continuationToken
_passwordResetToken
_serviceToken
_proxiedDeviceAnisetteData
_proxiedDevice
_proxyAppName
_clientAppName
_shouldSendLocalUserHasAppleIDLoginHeader
_shouldSendICSCIntentHeader
_loggedInServices
_hasEmptyPasswordOverride
_securityUpgradeContext
_shouldSendPhoneNumber
_phoneNumberCertificate
_phoneInformation
_followupItems
_appProvidedContext
_proxiedAltDSID
_proxiedIdentityToken
v16@?0@?<v@?>8
v24@?0@"AKAttestationData"8@"NSError"16
hsa2
X-Apple-CDP-Action
shouldSendEphemeralAuthHeader
TB,N,V_shouldSendEphemeralAuthHeader
shouldSendICSCIntentHeader
TB,N,V_shouldSendICSCIntentHeader
shouldSendLocalUserHasAppleIDLoginHeader
TB,N,V_shouldSendLocalUserHasAppleIDLoginHeader
shouldSendPhoneNumber
TB,N,V_shouldSendPhoneNumber
phoneNumberCertificate
T@"NSString",C,N,V_phoneNumberCertificate
phoneInformation
T@"NSArray",C,N,V_phoneInformation
serviceType
Tq,N,V_serviceType
loggedInServices
T@"NSArray",C,N,V_loggedInServices
passwordResetToken
T@"NSString",C,N,V_passwordResetToken
continuationToken
T@"NSString",C,N,V_continuationToken
heartbeatToken
T@"NSString",C,N,V_heartbeatToken
identityToken
T@"NSString",C,N,V_identityToken
proxyAppName
T@"NSString",C,N,V_proxyAppName
clientAppName
T@"NSString",C,N,V_clientAppName
appProvidedContext
T@"NSString",C,N,V_appProvidedContext
hasEmptyPasswordOverride
T@"NSNumber",&,N,V_hasEmptyPasswordOverride
securityUpgradeContext
T@"NSString",C,N,V_securityUpgradeContext
followupItems
T@"NSString",C,N,V_followupItems
proxiedDevice
T@"AKDevice",&,N,V_proxiedDevice
proxiedAltDSID
T@"NSString",&,N,V_proxiedAltDSID
proxiedIdentityToken
T@"NSString",&,N,V_proxiedIdentityToken
anisetteDataProvider
T@"<AKAnisetteServiceProtocol>",&,N,V_anisetteDataProvider
proxiedDeviceAnisetteData
T@"AKAnisetteData",&,N,V_proxiedDeviceAnisetteData
proxiedDeviceAttestationData
T@"AKAttestationData",&,N,V_proxiedDeviceAttestationData
shouldSendAbsintheHeader
TB,N
shouldSendSigningHeaders
TB,N,V_shouldSendSigningHeaders
serviceToken
T@"NSString",C,N,V_serviceToken
team_id
privateEmail
apps
v32@?0@8Q16^B24
<%@:%p> team: %@, user: %@, email: %@, apps: {
userIdentifier
T@"NSString",C,N,V_userIdentifier
T@"NSString",C,N,V_privateEmail
T@"NSDictionary",C,N,V_apps
step
atxnid
pake
<%@:%p> transaction: %@, step: %ld, errorCode: %ld
_responseInfo
_serverInfo
_clientInfo
_transactionId
_clientErrorCode
_circleStep
responseMessage
T@"AKPushMessage",&,N,V_responseMessage
responseInfo
T@"NSDictionary",&,N,V_responseInfo
circleStep
TQ,N,V_circleStep
serverInfo
T@"NSString",&,N,V_serverInfo
T@"NSData",&,N,V_clientInfo
clientErrorCode
Tq,N,V_clientErrorCode
T@"NSString",&,N,V_altDSID
transactionId
T@"NSString",&,N,V_transactionId
urls
gsService
midStartProvisioning
midFinishProvisioning
midSyncMachine
securityUpgradeEligibility
securityUpgrade
validateCode
secondaryAuth
postData
apsEnv
iForgot
iForgotAppleIdLocked
iForgotResetNotification
createAccount
device_list_self
trustedDevices
trustedDevicesSummaryUrl
qualifyCert
qualifySession
tokenUpgrade
postConfigData
fetchConfigData
changePasswordUrl
validateVettingToken
renewRecoveryToken
idmsEnv
circle
followUpItems
fetchUserInfo
fetchAuthorizedApps
fetchAuthMode
storeModernRecoveryKey
is-phone-number-supported
acsURL
repair
userVerificationResult
appleOwnedDomains
appleIDAuthorizationUrls
appleIDAuthorizeHTMLResponse
is-in-line-flow-supported
IdMS1
IdMS2
IdMS3
escapeHatchURL
T@"NSURL",R,N
bagProvider
T@"<AKURLBagDictionaryProvider>",&,N,V_bagProvider
basicAuthURL
startProvisioningURL
endProvisioningURL
syncAnisetteURL
upgradeEligibilityCheckURL
upgradeUIURL
validateCodeURL
checkInURL
notificationAckURL
iForgotURL
iForgotContinuationURL
createAppleIDURL
deviceListURL
trustedDevicesURL
trustedDevicesSummaryURL
absintheCertURL
absintheSessionURL
tokenUpgradeURL
configurationInfoURL
fetchConfigDataURL
changePasswordURL
validateVettingTokenURL
renewRecoveryTokenURL
circleURL
fetchFollowUps
fetchUserInfoURL
fetchAppInfoURL
fetchAuthenticationModeURL
storeModernRecoveryURL
repairURL
userVerificationURL
appleIDAuthorizationURLs
appleIDAuthorizeHTMLResponseURL
APSEnvironment
IDMSEnvironment
TQ,R,N
phoneNumberSupportedConfig
TB,R,N,GisPhoneNumberSupportedConfig
inlineFlowSupportedConfig
TB,R,N,GIsInlineFlowSupportedConfig
_encodedRecoveryIdentityToken
_encodedRecoveryPET
_authContext
_recoveryContinuationURL
_supportsMasterKeyRecovery
supportsMasterKeyRecovery
TB,N,V_supportsMasterKeyRecovery
encodedRecoveryIdentityToken
T@"NSString",C,N,V_encodedRecoveryIdentityToken
encodedRecoveryPET
T@"NSString",C,N,V_encodedRecoveryPET
recoveryContinuationURL
T@"NSURL",C,N,V_recoveryContinuationURL
authContext
T@"AKAppleIDAuthenticationContext",&,N,V_authContext
decodedRecoveryIdentityTokenString
decodedRecoveryPETString
prefs:root=APPLE_ACCOUNT
prefs:root=APPLE_ACCOUNT&aaaction=upgradeSecurityLevel
AUTH_ALERT_SIGN_IN_NOT_COMPLETED
Localizable
AUTH_ERROR_ALERT_BUTTON_OK
AUTH_ERROR_ALERT_INVALID_CONTEXT_TITLE
AUTH_ERROR_ALERT_INVALID_CONTEXT_MESSAGE
AUTH_ERROR_ALERT_MISSING_APPLE_ACCOUNT_TITLE
AUTH_ERROR_ALERT_MISSING_APPLE_ACCOUNT_MESSAGE_WATCHOS
AUTH_ERROR_ALERT_ACCOUNT_NOT_SUPPORTED_TITLE
AUTH_ERROR_ALERT_ACCOUNT_NOT_SUPPORTED_MESSAGE
AUTH_ERROR_ALERT_UNVERIFIED_EMAIL_TITLE
AUTH_ERROR_ALERT_UNVERIFIED_EMAIL_MESSAGE
AUTH_ERROR_ALERT_INSUFFICIENT_SECURITY_LEVEL_TITLE
AUTH_ERROR_ALERT_INSUFFICIENT_SECURITY_LEVEL_MESSAGE
AUTH_ERROR_ALERT_CANNOT_FIND_SERVER_TITLE
AUTH_ERROR_ALERT_CANNOT_FIND_SERVER_MESSAGE
AUTH_ERROR_ALERT_UNDERAGE_ACCOUNT_TITLE
AUTH_ERROR_ALERT_UNDERAGE_ACCOUNT_MESSAGE
T@"AKAlertHandler",R,N
uiProvider
T@"<AKAlertHandlerUIProvider>",W,N,V_uiProvider
X-Apple-I-MD-Cmd-Target
AKAnisetteControllerLock
_serviceID
_pairedDevice
_proxiedAnisetteData
v16@?0@"NSDictionary"8
v16@?0@"NSMutableDictionary"8
v24@?0@"AKAnisetteData"8@"NSError"16
paired
X-Apple-I-MD-DATA
pairedDevice
T@"AKDevice",&,N,V_pairedDevice
_SERVICE_ICLOUD
_SERVICE_ITUNES
_SERVICE_APP_STORE
_SERVICE_IMESSAGE
_SERVICE_FACETIME
_SERVICE_GAME_CENTER
_NO_SERVICE
_machineID
_oneTimePassword
_routingInfo
AKAnisetteData <%p>: {MID: %@ - OTP: %@ - RD: %@}
T@"NSString",C,N,V_machineID
oneTimePassword
T@"NSString",C,N,V_oneTimePassword
routingInfo
TQ,N,V_routingInfo
IDToken
authCode
_state
_isLikelyRealUser
Authorization Credential:
 UID: %@ 
 Identity Token: %@ 
 AuthorizationCode: %@ 
 User Verification Result: %@ 
 User Info: %@
T@"NSString",R,C,N
isLikelyRealUser
TB,N,V_isLikelyRealUser
authorizedScopes
T@"NSArray",R,C,N,V_authorizedScopes
T@"NSData",R,C,N,V_identityToken
authorizationCode
T@"NSData",R,C,N,V_authorizationCode
T@"NSString",R,C,N,V_state
T@"AKUserInformation",R,N,V_userInformation
T@"NSString",R,C,N,V_userIdentifier
teams
<%@:%p> version: %@, teams: {
T@"NSString",R,C,N,V_authorizedAppListVersion
T@"NSDictionary",R,C,N,V_teams
AKAuthenticationError
AKAnisetteError
AKSQLError
AKUnderlyingADIErrors
_authorizedRequest
_credential
<%@: %p {
Authorized request: %@
Credential: %@
authorizedRequest
T@"<AKCredentialRequestProtocol>",&,N,V_authorizedRequest
credential
T@"<AKCredential>",&,N,V_credential
AKAbsintheErrorDomain
CDPContext
/System/Library/PrivateFrameworks/CoreCDP.framework/CoreCDP
CDPStateController
CDPRecoveryController
CDPFollowUpContext
CDPFollowUpController
CDPStateErrorDomain
CDPIDMSRecordMIDKey
CDPIDMSPasswordResetKey
_waitForReply
_identityTokenValue
_heartbeatTokenValue
_pushToken
_payload
_waitForReplyTimeout
__notifyOfTimeout
identityTokenValue
T@"NSString",&,N,V_identityTokenValue
heartbeatTokenValue
T@"NSString",&,N,V_heartbeatTokenValue
pushToken
T@"NSString",&,N,V_pushToken
_notifyOfTimeout
TB,N,V__notifyOfTimeout
payload
T@"AKCircleRequestPayload",&,N,V_payload
waitForReply
TB,N,V_waitForReply
waitForReplyTimeout
Td,N,V_waitForReplyTimeout
_bundleID
_credentialRequestContext
_loginChoices
com.apple.aktool
aktool
SNfDJgQFV2Xj7+WnozcJPw
bundleID
T@"NSString",C,N,V_bundleID
isFirstPartyLogin
TB,R,N,V_isFirstPartyLogin
isRapportLogin
TB,R,N,V_isRapportLogin
localizedAppName
T@"NSString",R,C,N,V_localizedAppName
informativeText
T@"NSString",R,C,N,V_informativeText
iconName
T@"NSString",R,C,N,V_iconName
iconData
T@"NSData",R,C,N,V_iconData
iconScale
T@"NSNumber",R,C,N,V_iconScale
credentialRequestContext
T@"AKCredentialRequestContext",&,N,V_credentialRequestContext
T@"AKUserInformation",&,N,V_userInformation
loginChoices
T@"NSArray",C,N,V_loginChoices
com.nextdoor.nextdoor
com.etsy.etsyforios
com.tinyspeck.chatlyio
com.apple.AppShack
com.apple.AuthKit.AKNetworkObserver
v16@?0@"NSObject<OS_nw_path>"8
isNetworkReachable
TB,R,V_isNetworkReachable
_request
_resourceLoadDelegate
_requestType
_presentationType
_whitelistedRedirectURLs
<%@: %p 
 request: %@
 delegate: %@
 requestType: %lu
 presentationType: %lu 
resourceLoadDelegate
T@"AKAppleIDServerResourceLoadDelegate",&,N,V_resourceLoadDelegate
requestType
TQ,N,V_requestType
presentationType
TQ,N,V_presentationType
whitelistedPathURLs
T@"NSArray",C,N,V_whitelistedPathURLs
_userIdentifier
_password
password
T@"NSString",R,C,N,V_password
AKApplicationState
AKAppProvidedData
AKRequestedScopes
AKClientID
AKTeamID
AKAuthorizationStatus
AKAuthorizationAccount
AKAuthorizationAltDSID
<%@: %p {
requestIdentifier: %@,
clientID: %@,
teamID: %@,
userIdentifier: %@,
altDSID: %@,
state: %@,
requestedScopes: %@,
appProvidedData: %@,
existingStatus
Tq,N,V_existingStatus
authkitAccount
T@"ACAccount",&,N,V_authkitAccount
requestedScopes
T@"NSArray",C,N,V_requestedScopes
T@"NSString",C,N,V_state
appProvidedData
T@"NSDictionary",C,N,V_appProvidedData
ACAccount
email
X-MMe-Client-Info
https
listenerEndpoint
T@"NSXPCListenerEndpoint",R,N,V_listenerEndpoint
en_US_POSIX
yyyy'-'MM'-'dd'T'HH':'mm':'ss'Z'
<%@: %p> requestIdentifier: %@,
altDSID: %@,
userID: %@
T@"NSString",C,N
T@"NSUUID",R,C,N
T@"NSString",R,C,N,V_altDSID
underAge
studentAccount
mkid
accountName
phoneAsAppleId
_givenName
_familyName
_forwardingEmail
_accountName
_accountAliases
_reachableEmails
_authorizedApplicationsListVersion
_masterKeyID
_vettedPrimaryEmail
_phoneAsAppleID
_isUnderage
_isLegacyStudent
_hasUsedAuthorization
_appleIDSecurityLevel
_authMode
_repairState
_selectedEmail
<%@: %p {
givenName: %@,
familyName: %@,
forwardingEmail: %@,
accountName: %@,
accountAliases: %@,
reachableEmails: %@,
authorizedApplicationsListVersion: %@,
masterKeyID: %@,
vettedPrimaryEmail: %@,
phoneAsAppleID: %@,
isUnderage: %@,
isLegacyStudent: %@,
hasUsedAuthorization: %@, 
appleIDSecurityLevel: %lu,
authMode: %lu,
repairState: %lu,
selectedEmail: %@,
givenName
T@"NSString",C,N,V_givenName
familyName
T@"NSString",C,N,V_familyName
T@"NSString",C,N,V_forwardingEmail
T@"NSString",C,N,V_accountName
accountAliases
T@"NSArray",C,N,V_accountAliases
T@"NSArray",C,N,V_reachableEmails
authorizedApplicationsListVersion
T@"NSString",C,N,V_authorizedApplicationsListVersion
masterKeyID
T@"NSString",C,N,V_masterKeyID
TB,N,V_vettedPrimaryEmail
TB,N,V_phoneAsAppleID
TB,N,V_isUnderage
isLegacyStudent
TB,N,V_isLegacyStudent
hasUsedAuthorization
TB,N,V_hasUsedAuthorization
appleIDSecurityLevel
TQ,N,V_appleIDSecurityLevel
authMode
TQ,N,V_authMode
repairState
TQ,N,V_repairState
selectedEmail
T@"NSString",C,N,V_selectedEmail
T@"NSString",R,C,N,V_previouslySelectedEmail
previouslyWantedPrivateEmail
TB,R,N,V_previouslyWantedPrivateEmail
Library/Caches
_uniqueDeviceIdentifier
_serverFriendlyDescription
_color
_enclosureColor
_locale
_linkType
AKDevice <%p> {%@} link %@
DMin
UniqueDeviceID
ModelNumber
%@;%@;%@
%@/%@ (%@/%@)
<%@> <%@> <%@>
iPhoneSimulator
Simulator
%@_%@
systemContainerURL
T@"NSURL",R,C
systemContainerCacheURL
T@"NSString",R
userChosenName
localUserUUID
userFullName
internationalMobileEquipmentIdentity
isProtectedWithPasscode
isBiometricAuthCapable
isFaceIDCapable
isUnlocked
isInCircle
mobileEquipmentIdentifier
integratedCircuitCardIdentifier
isInternalBuild
isMultiUserMode
serializedData
T@"NSData",R
serverFriendlyDescription
T@"NSString",C,V_serverFriendlyDescription
uniqueDeviceIdentifier
T@"NSString",C,V_uniqueDeviceIdentifier
color
T@"NSString",C,V_color
enclosureColor
T@"NSString",C,V_enclosureColor
coverGlassColor
T@"NSNumber",C,V_coverGlassColor
housingColor
T@"NSNumber",C,V_housingColor
backingColor
T@"NSNumber",C,V_backingColor
locale
T@"NSLocale",C,V_locale
MLBSerialNumber
T@"NSString",C,V_MLBSerialNumber
ROMAddress
T@"NSString",C,V_ROMAddress
modelNumber
T@"NSString",C,V_modelNumber
linkType
TQ,SsetLinkType:,V_linkType
NRPairedDeviceRegistry
/System/Library/PrivateFrameworks/NanoRegistry.framework/NanoRegistry
NRDevicePropertyUDID
NRDevicePropertyColor
NRDevicePropertyEnclosureColor
NRDevicePropertyDeviceCoverGlassColor
NRDevicePropertyDeviceHousingColor
NRDevicePropertyDeviceBackingColor
NRDevicePropertyCurrentUserLocale
NRDevicePropertyProductType
NRDevicePropertySystemName
NRDevicePropertySystemVersion
NRDevicePropertySystemBuildVersion
AKAnisetteProvisioningControllerXPCLock
No DSID was provided!
targetDevice
T@"AKDevice",&,N,V_targetDevice
-[_AKAnisetteProviderProxy provisionAnisetteForContext:withCompletion:]
-[_AKAnisetteProviderProxy syncAnisetteForContext:withSIMData:completion:]
-[_AKAnisetteProviderProxy eraseAnisetteForContext:withCompletion:]
-[_AKAnisetteProviderProxy fetchAnisetteDataForContext:provisionIfNecessary:withCompletion:]
-[_AKAnisetteProviderProxy legacyAnisetteDataForContext:DSID:withCompletion:]
%06u
LOGIN_CODE_ALERT_OK_BUTTON
AKTemporaryValue
com.apple.ak.code.entered
AKAuthenticationInternalTokenCK
com.apple.AuthKit.AuthenticationContextAlert
com.apple.authkit.generic
com.apple.authkit.messages
com.apple.authkit.passkit
com.apple.authkit.appleconnect
com.apple.authkit.screentime
com.apple.authkit.keychainsync
X-Apple-Security-Upgrade-Context
SERVICE_NAME_ICLOUD
SERVICE_NAME_ITUNES
SERVICE_NAME_APPSTORE
SERVICE_NAME_IMESSAGE
SERVICE_NAME_FACETIME
SERVICE_NAME_GAMECENTER
INLINE_PASSWORD_ALERT_TITLE
PASSCODE_ALERT_MESSAGE_IPAD
PASSCODE_ALERT_MESSAGE_WATCH
%username%
_reason
_username
_isUsernameEditable
_DSID
_isProxyingForApp
_proxiedAppBundleID
_proxiedAppName
_serviceIdentifiers
_identifier
_maximumLoginAttempts
_isEphemeral
_shouldAllowAppleIDCreation
_shouldPromptForPasswordOnly
_passwordPromptTitle
_defaultButtonString
_httpHeadersForRemoteUI
_isPasswordEditable
_shouldUpdatePersistentServiceTokens
_shouldOfferSecurityUpgrade
_needsCredentialRecovery
_needsNewAppleID
_needsPasswordChange
_shouldPreventInteractiveAuth
_generatedCode
_latitude
_longitude
_deviceClass
_deviceColor
_deviceEnclosureColor
_shouldForceInteractiveAuth
_capabilityForUIDisplay
_companionDeviceAnisetteData
_companionDevice
_isAppleIDLoginEnabled
_hasEmptyPassword
_shouldRequestShortLivedToken
_shortLivedToken
_shouldRequestConfigurationInfo
_isTriggeredByNotification
_message
_anticipateEscrowAttempt
_isFirstTimeLogin
_supportsPiggybacking
_desiredInternalTokens
_shouldSkipSettingsLaunchAlert
_shouldSendIdentityTokenForRemoteUI
_shouldRequestRecoveryPET
_title
_shouldSkipInitialReachabilityCheck
_attemptIndex
_authenticationType
_shouldSendGrandSlamTokensForRemoteUI
_needsRepair
_appProvidedData
_helpAnchor
_helpBook
<%@: %p { UUID: %@ }>
<%@: %p {
UUID: %@,
username: %@,
editable-username: %@,
altDSID: %@,
DSID: %@,
password: %@,
service-type: %ld,
service IDs: %@,
reason: %@
ephemeral: %@,
password-only: %@,
authentication-type: %@,
update-service-tokens: %@,
offer-upgrade: %@,
offer-upgrade-context: %@,
proxying-for-app: %@,
proxied-app-id: %@,
proxied-device: %@,
companion-device: %@
max-login-attempts: %@
appleid-login-enabled: %@
has-empty-password: %@
request-slt: %@
short-lived-token: %@
identity-token: %@
triggered-by-push: %@
skip-alert: %@
skip-reachability-check: %@
attempt-index: %lu,
INLINE_PASSWORD_ALERT_MESSAGE
PASSWORD_ALERT_MESSAGE_PROXY_INTERNAL_BLAME
PASSWORD_ALERT_MESSAGE_SERVICE_TYPE_INTERNAL_BLAME
PASSWORD_ALERT_MESSAGE_INTERNAL_BLAME
INLINE_PASSWORD_ALERT_OK_BUTTON
INLINE_PASSWORD_ALERT_CANCEL_BUTTON
INLINE_PASSWORD_ALERT_PASSWORD_PLACEHOLDER_WATCH
WRONG_PASSWORD_ALERT_CANCEL_BUTTON
WRONG_PASSWORD_ALERT_TRY_AGAIN_BUTTON
VERIFICATION_HEADER
ENTER_VERIFICATION_CODE
ENTER_VERITIFCATION_CODE_CANCEL_BUTTON
ENTER_VERITIFCATION_CODE_FAILED_BUTTON
ENTER_CODE
WRONG_LOGIN_CODE_TRY_AGAIN_BUTTON
WRONG_LOGIN_CODE_ALERT_CANCEL_BUTTON
com.apple.ak.twofa
INLINE_PASSWORD_ALERT_PASSCODE_PLACEHOLDER_WATCH
T@"NSString",C,N,S_setProxiedAppName:
T@"NSDictionary",C,N
T@"AKDevice",C,N
companionDevice
T@"NSUUID",R,N,V_identifier
TQ,R,N,V_capabilityForUIDisplay
TB,N,V_shouldSendIdentityTokenForRemoteUI
TB,N,V_shouldSendGrandSlamTokensForRemoteUI
_requiresPasswordInput
TB,R,N
_interpolatedReason
_interpolatedReasonWithBlame
TB,N,V_shouldSkipInitialReachabilityCheck
TQ,N,V_attemptIndex
contextEligibleForSilentAuthCoercion
TB,R,N,GisContextEligibleForSilentAuthCoercion
contextEligibleForSilentAuth
TB,R,N,GisContextEligibleForSilentAuth
contextEligibleForBiometricOrPasscodeAuth
TB,R,N,GisContextEligibleForBiometricOrPasscodeAuth
authenticationType
TQ,N,V_authenticationType
shouldPromptForPasswordOnly
TB,N,V_shouldPromptForPasswordOnly
shouldUpdatePersistentServiceTokens
TB,N,V_shouldUpdatePersistentServiceTokens
TB,N,S_setProxyingForApp:,V_isProxyingForApp
T@"NSString",C,N,S_setProxiedAppBundleID:,V_proxiedAppBundleID
T@"NSString",C,N,V_passwordPromptTitle
T@"NSString",C,N,S_setPassword:,V_password
TB,N,V_isPasswordEditable
T@"NSString",C,N,S_setShortLivedToken:,V_shortLivedToken
T@"NSString",C,N,S_setIdentityToken:,V_identityToken
isAppleIDLoginEnabled
T@"NSNumber",C,N,SsetAppleIDLoginEnabled:,V_isAppleIDLoginEnabled
hasEmptyPassword
T@"NSNumber",C,N,SsetHasEmptyPassword:,V_hasEmptyPassword
shouldRequestRecoveryPET
TB,N,V_shouldRequestRecoveryPET
shouldRequestShortLivedToken
TB,N,V_shouldRequestShortLivedToken
shouldRequestConfigurationInfo
TB,N,V_shouldRequestConfigurationInfo
supportsPiggybacking
TB,N,V_supportsPiggybacking
anticipateEscrowAttempt
TB,N,V_anticipateEscrowAttempt
desiredInternalTokens
T@"NSSet",C,N,V_desiredInternalTokens
isFirstTimeLogin
TB,N,SsetFirstTimeLogin:,V_isFirstTimeLogin
shouldSkipSettingsLaunchAlert
TB,N,V_shouldSkipSettingsLaunchAlert
T@"NSString",C,N,S_setMessage:,V_message
companionDeviceAnisetteData
T@"AKAnisetteData",&,N,V_companionDeviceAnisetteData
shouldPreventInteractiveAuth
TB,N,V_shouldPreventInteractiveAuth
shouldForceInteractiveAuth
TB,N,V_shouldForceInteractiveAuth
displayString
T@"NSString",C,N,V_displayString
displayTitle
T@"NSString",C,N,V_displayTitle
username
T@"NSString",C,N,V_username
isUsernameEditable
TB,N,V_isUsernameEditable
shouldAllowAppleIDCreation
TB,N,V_shouldAllowAppleIDCreation
needsCredentialRecovery
TB,N,V_needsCredentialRecovery
needsNewAppleID
TB,N,V_needsNewAppleID
needsPasswordChange
TB,N,V_needsPasswordChange
isTriggeredByNotification
TB,N,SsetTriggeredByNotification:,V_isTriggeredByNotification
reason
T@"NSString",C,N,V_reason
defaultButtonString
T@"NSString",C,N,V_defaultButtonString
maximumLoginAttempts
Tq,N,V_maximumLoginAttempts
serviceIdentifier
serviceIdentifiers
T@"NSArray",C,N,V_serviceIdentifiers
isEphemeral
TB,N,V_isEphemeral
T@"NSString",C,N,V_DSID
httpHeadersForRemoteUI
T@"NSDictionary",C,N,V_httpHeadersForRemoteUI
T@,&,N,V_clientInfo
shouldOfferSecurityUpgrade
TB,N,V_shouldOfferSecurityUpgrade
needsRepair
TB,N,V_needsRepair
title
T@"NSString",&,N,V_title
helpAnchor
T@"NSString",C,N,V_helpAnchor
helpBook
T@"NSString",C,N,V_helpBook
T@"NSString",C,N,S_setProxiedAppName:,V_proxiedAppName
T@"AKDevice",C,N,V_proxiedDevice
T@"AKDevice",C,N,V_companionDevice
generatedCode
latitude
T@"NSNumber",C,N
longitude
deviceClass
deviceColor
deviceEnclosureColor
<%@: %p {
altDSID: %@,
proxiedAppName: %@,
serviceType: %@,
proxiedDevice: %@,
companionDevice: %@,
appProvidedData: %@,
teamID: %@,
appID: %@,
request: %@,
appProvidedContext: %@,
userSelection: %@,
_hasApplicationMetaData
T@"AKAuthorizationRequest",R,C,N,V_request
com.apple.ak.auth.xpc
KCAESGCMDuplexSession
/System/Library/PrivateFrameworks/KeychainCircle.framework/KeychainCircle
passwordPrompt
passwordPromptGoToSettingsNotification
invalidAccountSave
invalidAccountUpdate
missingAccountServices
buildNumber
osVersion
model
lastUpdatedDate
trusted
circleStatus
clcg
clhs
clbg
_name
_serialNumber
_buildNumber
_operatingSystemName
_operatingSystemVersion
_model
_machineId
_lastUpdatedDate
_trusted
_inCircle
_colorCode
_enclosureColorCode
_coverGlassColorCode
_housingColorCode
_backingColorCode
<%@:%p> Name: %@, SN: %@, Build: %@, OS: %@, Version: %@, Model: %@, Timestamp: %@, Trusted: %d, Circle Status: %d, Color Code: %@
T@"NSString",R,C,N,V_name
T@"NSString",R,C,N,V_serialNumber
T@"NSString",R,C,N,V_buildNumber
operatingSystemName
T@"NSString",R,C,N,V_operatingSystemName
operatingSystemVersion
T@"NSString",R,C,N,V_operatingSystemVersion
T@"NSString",R,C,N,V_model
colorCode
T@"NSString",R,C,N,V_colorCode
enclosureColorCode
T@"NSString",R,C,N,V_enclosureColorCode
coverGlassColorCode
T@"NSString",R,C,N,V_coverGlassColorCode
housingColorCode
T@"NSString",R,C,N,V_housingColorCode
backingColorCode
T@"NSString",R,C,N,V_backingColorCode
TB,R,N,V_trusted
inCircle
TB,R,N,V_inCircle
T@"NSDate",R,C,N,V_lastUpdatedDate
machineId
T@"NSString",R,C,N,V_machineId
v24@?0@"AKAuthorization"8@"NSError"16
v24@?0q8@"NSError"16
v24@?0@"AKAuthorizationPresentationContext"8@"NSError"16
v24@?0@"NSSet"8@"NSError"16
T@"<AKAuthorizationUIProvider>",&,V_uiProvider
self: (%p); Connection interrupted
self: (%p); Connection invalidated
error communicating to XPC: %@
Invalid token string! %@
Error: Got malformed GS token data!
Value for %@ is missing/invalid!
Nil value for expected header: %@
Unable to serialized token properties! Error: %@
%@ deallocated
authkit/authenticate
 AuthenticationType=%{public,signpost.telemetry:number1,name=AuthenticationType}d  ProxiedBundleID=%{public,signpost.telemetry:string1,name=ProxiedBundleID}@  enableTelemetry=YES 
AuthenticateWithContext
BEGIN [%lld]: AuthenticateWithContext  AuthenticationType=%{public,signpost.telemetry:number1,name=AuthenticationType}d  ProxiedBundleID=%{public,signpost.telemetry:string1,name=ProxiedBundleID}@  enableTelemetry=YES 
 Error=%{public,signpost.telemetry:number2,name=Error}d 
END [%lld] %fs:AuthenticateWithContext  Error=%{public,signpost.telemetry:number2,name=Error}d 
Request with %@
Remote authentication service returned an error: %{public}@
Interactive authentication requested by background daemon, client error, AKAppleIDAuthenticationTypeSilentPreferred should be used
Interactive authentication requested by UI context, please investigate why silent auth could not be used
Remote authentication service came back with: %@
authkit/set-in-use
Remote authentication service returned an error: %@
Calling out to remote auth service for altDSID %@, service %@, inUse %@.
Result of remote call: %@. Error: %@.
Calling out to remote auth service for DSID %@, service %@, inUse %@.
authkit/fetch-user-info
Calling out to remote auth service to fetch user information for: %{public}@
Result of remote call: %{private}@. Error: %{public}@
authkit/fetch-user-info-typed
Calling out to remote auth service to fetch user information for: %@
Result of remote call: %lu. Error: %{public}@
authkit/fetch-device-list
authkit/fetch-device-map
Calling out to remote auth service to fetch device list information for: %{public}@
Result of remote call: %@. Error: %@
authkit/fetch-app-list
Calling out to remote auth service to fetch app list information for: %@
authkit/delete-authorization-list
Calling out to remote auth service to wipe authorization database
authkit/revoke-authorization
Calling out to remote auth service to revoke authorization for teamID: %@
authkit/set-configuration-info
Calling out to remote auth service to set: %@ for identifier: %@.
authkit/fetch-configuration-info
Calling out to remote auth service to fetch configuration for identifiers: %@.
Result of remote call: %{private}@. Error: %@
authkit/check-upgrade-eligibility
HSA 2 eligibility check came back with result: %@ and error: %@
authkit/generate-login-code
Generated code: %@. Error: %@
authkit/validate-login-code
authkit/perform-circle-request
authkit/check-in
authkit/report-sign-out
authkit/report-sign-out-all
authkit/update-state-with-response
Asking akd to update state for %@ with auth response: %@
Result of updating auth state: %@. Error: %@
Failed to get passcode state with error: %@
Failed to get active code with error: %@
authkit/fetch-load-delegate
FetchServerLoadDelegate
BEGIN [%lld]: FetchServerLoadDelegate 
END [%lld] %fs:FetchServerLoadDelegate 
Asking akd for AKAppleIDServerResourceLoadDelegate for altDSID %@
Result of getting AKAppleIDServerResourceLoadDelegate: %@. Error: %@
Asking akd for AKAppleIDServerResourceLoadDelegate for context %@
authkit/sync-follow-up-items
Synchronizing follow ups for altDSID: %@
Synchronized follow ups %@ with error %@
Failed to synchronize follow ups due to xpc error: %@
authkit/followup-teardown
Asking akd to teardown: %@
Completed teardown request; Error: %@
authkit/renew-recovery-token
Asking akd to fetch a new recovery token token with info: %@
Failed to renew recovery token: %@
authkit/verify-master-key
Asking akd to verify master key with info: %@
Failed to verify master key: %@
authkit/persist-master-key
Failed to persist master key: %@
authkit/validate-vetting-token
Asking akd to validate vetting token %@ for altDSID: %@
Vetting-token validation failed due to expired master token. Attempting to re-auth...
Unable to refresh expired master token for vetting-token validation.
Master token should be fresh now. Reattempting vetting token-validation...
Result afer reauth: Is token valid? %@. Error: %@
Result: Is token valid? %@. Error: %@
Failed to get account name list: %@
Account name list: %@
authkit/fetch-url-bag
Calling out to remote auth service to url bag
Finished fetching URL bag. Error: %{public}@
Synchronously calling out to remote auth service to url bag
Connection to akd was interrupted!
Connection to akd was invalidated.
Bad client! You are not supposed to provide your own implementation of AKAppleIDAuthenticationUIProvider!
Missing context identifier, how did we get here?
authkit/should-continue
Client has no knowledge of context ID: %@
 Error=%{public,signpost.telemetry:number1,name=Error}d  enableTelemetry=YES 
ShouldContinueWithResults
BEGIN [%lld]: ShouldContinueWithResults  Error=%{public,signpost.telemetry:number1,name=Error}d  enableTelemetry=YES 
 ShouldContinue=%{public,signpost.telemetry:number1,name=ShouldContinue}d 
END [%lld] %fs:ShouldContinueWithResults  ShouldContinue=%{public,signpost.telemetry:number1,name=ShouldContinue}d 
Delegate says to continue? %@
Calling delegate...
No delegate available.
Error: We do not have a UI-capable context on the client side!
Error: We do not have a UI-capabable context on the client side!
Server has provided an invalid context lacking an ID: %@
%{public}@ completed with error:%@
Initializing URL cache at path: %@
Failed to generate cache due to missing container path!
AKURLSession %p is initializing...
NSURLSession became invalid with error: %@
Calling all pending completions.
Creating new NSURLSession with default config...
Asked to begin task with either nil request %@ or completion handler %@
Creating task %{public}@ for request at URL: %@
Resuming task %{public}@ for URL %@
Cancelling task %{public}@ for request %@
The data parameter is nil!
Aggregating received data for task: %{public}@
Task %{public}@ completed! Error: %@
Error is recoverable. Checking if retry is possible.
This request has been retried %@ times.
Retry count has been exceeded! %{public}@
Will retry in %@ second(s)...
Retry attempt #%@: resuming task %{public}@...
Request failed for task: %{public}@ error: %@
Task %{public}@ Request response not of expected class!
Task %{public}@ Request completed with HTTP status code: %@
Task %{public}@ Server responded with authentication error
Detected an iCloud URL request, will not perform IdMS cert validation.
Server cert validity check failed!
Error: No response data!
There was an error parsing body data! %@
The body data was not in the expected (dictionary) format!
JSON for response cannot be formed from dictionary: %@
Dictionary serialization to JSON encountered error: %@
AKDeviceListDeltaMessagePayload missing timestamp
AKDeviceListDeltaMessagePayload unable to process missing operation.
AKDeviceListDeltaMessagePayload unable to process non-string operation.
AKDeviceListDeltaMessagePayload unable to process unexpected operation.
Error converting object to json string: %@
Starting retrieval of recovery info for appleId <%@ : %@>
Starting recovery using %@...
Failed to retrieve recovery info with error. %@
Recovered data for context: %@
Escrowed recovery info missing PRK
Escrowed recovery info missing MID
Building recovery response request
Failed to unwrap the icsc recovery identity token.
Recovery response: %@
Recovery response body: %@
Building recovery response body
Populating results with bundle info: %@
Failed to fetch subscription info with error: %@
Unable to get Anisette data for request %@! Error: %@
Unable to serialize request parameters! Error: %@
Invalid JSON input: %@
Adding header with services: %@
Failed to attach PTN header
Failed to attach Phone Information header
Encountered incomplete Anisette data! %@
Encountered incomplete companion Anisette data! %@
Encountered incomplete Anisette data for proxied device! %@
Cached AuthKit configurations have changed. Clearing cache...
Nil key!
Connection to akd signer was interrupted!
Connection to akd signer was invalidated: this is fine.
authkit/absinthe-signature-for-data
Remote signing service returned an error: %@
Remote signing service successfully signed data.
authkit/signatures-for-data
No request, nothing to sign.
urlBag not present
We have additional absinthe headers %@
Failed to fetch absinthe headers, error: %@
We have attesation headers: %@
Failed to fetch attestation headers, error: %@
Absinthe not enabled
No baaInterval
returing %lu additional headers
Absinthe data generated for proxy %@
Absinthe error %@
Unknown absinthe error
AKAppleIDSigningController - No request body.
AKAppleIDSigningController - No client info
Attestation signature data present, isProxy %@
Attestation signature headers %@
Attestation error %@
Unknown attestation error
Exception caught: %@
Will not allow nil altDSID to be set!
Will not allow nil DSID to be set!
DSID *must* be an NSNumber, but we got: %@
Requested to update username to %@ for altDSID: %@
Updating username for: %@
Exception caught when fetching primary verified email: %@
Exception caught when setting primary verified email: %@
Exception caught when fetching phone as AppleID: %@
Exception caught when fetching underage property: %@
Exception caught when setting underage property: %@
Exception caught when fetching authorization used: %@
Exception caught when setting authorization used: %@
Exception caught when fetching reachable emails: %@
Exception caught when setting reachable emails: %@
Exception caught when fetching given name: %@
Exeption caught when setting given name: %@
Exception caught when fetching family name: %@
Exception caught when setting last name: %@
Exception caught when fetching forwarding email: %@
Exception caught when setting forwarding email: %@
Exception caught when fetching private email selected: %@
Exception caught when setting private email selection: %@
Exception caught when fetching slected email: %@
Exception caught when setting selected email: %@
Excception caught when fetching application list version: %@
Exception caught when setting application list version: %@
Saving account %@...
Exception caught while saving account: %@
Could not save %@ due to %@
Saving of account %@ succeeed!
Fetching token: %@ for account %@
Nil account cannot possibly have a %@ token!
AuthKit credential is completely MIA! Account: %@. Fetch error: %@
AuthKit %@ token is missing! Account: %@. Credential: %@.
Found %@ IDMS accounts for which PRK might need to be cleared.
Attempted to remove a token for nil key
Nil credential for account %@. Odd, but no clearing is necessary.
Clearing %@ for account %@...
Checking if IDMS account cleanup is necessary (%lu found)...
Removing unusued IDMS account %@...
Removing duplicate IDMS account %@...
Failed to remove account %@. Error: %@
Successfully removed account %@.
Failed to save account %@. Error: %@
Successfully saved account %@.
Done removing unused and duplicate IDMS accounts.
Invalid type for value of primaryAccount account property: %@. Account: %@
Invalid type for value of %@ account property: %@. Account: %@
Invalid type for value of appleIdAliases %@. Account: %@
Invalid type for altDSID %@. Account: %@
Overflow while attempting to compress data!
Failed to allocate buffer for compressed data!
Failed to compress data!
Attempting to unregister for all Apple IDs.
Unregistering all Apple IDs failed with error: %@
Unregistering all Apple IDs succeeded!
Current process is requesting signing synchronously, this is an error, please do not do this!
Grabbing signing headers from current device.
Failed to get signing headers, error: %@
Configuring signing headers
Error fetching Peer Attestation %@
Looks like we already have attestation data, thanks!
Not sending signing headers for peer
Could not determine passcode state with error %@
Attaching PRK header
Signing request as ephemeral
Attaching ICSC header
Attaching Phone Info header
Attaching PTN header
Attaching PAC header
Signing request with common headers
Signing request with service token
Signing request with ID token
Signing request with HB token
Signing request with Experimental Mode opt-in header
Building recovery context with info: %@
Authorization alert - invalid context
Authorization alert dismissed - invalid context
Authorization alert dismissed - missing apple account
Authorization alert dismissed - unverified email
Authorization alert dismissed - insufficient security level
Authorization alert dismissed - cannot find server
Authorization alert dismissed - underage account
Showing alert (%@) failed, user notification is nil!. Error: %d
No existing IdMS account for altDSID %@
No existing IdMS account for DSID %@
No existing IdMS account for username %@
No altDSID, DSID or username passed on context, unable to find account
Cannot pull up IDMS account without immutable username or altDSID.
Not going to do anything with non-HTTP response from URL: %@ Task: %{public}@.
Trying to get new Anisette headers to retry request for URL:%@ Task: %{public}@ ...
Unable to append header for request %@! Error: %@
Passing along decorated request for: %@
Using proxied Anisette data for headers to URL: %@.
Fetching paired device Anisette data for headers to URL: %@.
Unable to append header for request %@! Task %{public}@ Error: %@.
Passing along decorated request for URL: %@ Task %{public}@.
Using proxied Anisette data for headers to URL: %@ Task %{public}@.
Fetching paired device Anisette data for headers to URL: %@. Task: %{public}@.
Handling response %@ for URL %@...
No handling for HTTP status code %@ in response for URL %@
No instance of AKAnisetteProvisioningController to handle HTTP code %@ in response to %@ %@.
Sync status code (%d) received for URL: %@
HTTP 434 without sync data received!
Anisette sync was successful!
Anisette sync failed! Error: %@
Reprovision status code (%d) received for URL: %@
Unable to reprovision because Anisette data could not be erased! Error: %@
Erased Anisette data successfully. Time to provision!
Provisioning new Anisette data failed! Error: %@
Successfully provisioned new Anisette data.
Failed to find localized string for key: %{private}@
Parsing server provided Data %@
AKAuthorizationCredential Succesfully created with txid %@
Connection to authorization service interrupted
Connection to authorization service invalidated
Cannot perform request - Missing authorization request
Cannot perform request - Missing account
Cannot perform request - Missing AppleAccount
Cannot perform request - Invalid account properties
Cannot perform request - Insufficient security level
Cannot perform request - Invalid age
Cannot perform request - Account not verified.
Cannot perform password request without password request.
Cannot perform Rapport client authorization. {iCloud=%{public}@, iTunes=%{public}@}
Account name is missing.
Account name value has an invalid type: %@
No aliases.
Aliases array value has an invalid type: %@
User given name is missing.
User given name name value has an invalid type: %@
User family name is missing.
User family name value has an invalid type: %@
Mako Account Identifier Missing, Defaulting to NO.
User vetted primary email is missing, Possibly unverified or Mako Account.
No reachable emails for account
User reachable emails value has an invalid type: %@
No Forwarding email set for this account
Forwarding email value has an invalid type: %@
Previously selected email value has an invalid type: %@
No authorized applications list version set for this account
Authorized applications list version value has an invalid type: %@
System container path is %s
Error getting system container: %llu
Caught error (%@) unserializing AKDevice data (%@)
Caught error (%@) serializing self (%@)
Failed to check circle status: %@
System reports isPasscodeSet: %@
Local auth returned error: %@
Not biometric capable
authkit/anisette-provision
 enableTelemetry=YES 
ProvisionAnisette
BEGIN [%lld]: ProvisionAnisette  enableTelemetry=YES 
END [%lld] %fs:ProvisionAnisette 
Remote Anisette service returned an error: %@
Remote Anisette service successfuly provisioned.
authkit/sync-sim
Remote Anisette service successfuly resynced provisioning data.
authkit/anisette-erase
EraseAnisette
BEGIN [%lld]: EraseAnisette 
END [%lld] %fs:EraseAnisette 
Remote Anisette service successfuly erased provisioning data.
authkit/anisette-for-request
Not allowed to use Anisette data with non-HTTPS URLs.
authkit/fetch-anisette
FetchAnisette
BEGIN [%lld]: FetchAnisette 
Remote Anisette service returned Anisette data.
END [%lld] %fs:FetchAnisette 
authkit/legacy-anisette
Remote Anisette service returned legacy Anisette data.
authkit/fetch-attestation
FetchAttestation
BEGIN [%lld]: FetchAttestation 
END [%lld] %fs:FetchAttestation 
%s (%d) called
%@ being updated by %@
self.username is nil
Will prompt for password...
Platform does not support prompting for both username and password...
received response with error: %@
Determined that we should show password field for username: %@
Showing login error...
received response: %d
Canceling second-factor entry prompt if present.
Listening for code entry notification...
No longer listening for code entry notification.
Notified that 2FA code was entered, but code is empty!
Passing 2FA code to akd.
Dropping 2FA code because we are currently holding a reply block.
Closing login code prompt.
Received notification of login code entry. Forwarding to observer %@.
authkit/authorize
Authorization completed with authorization: %@
Authorization failed: %@
authkit/credentialState
Credential State request returned with error: %@
Credential State returned with state: %@
authkit/presentationContext
getPresentationContext completed with presentation context: %@
authkit/performRequestWithSelection
performAuthorizationWithContext completed with presentation context: %@
Attempting proxy auth with context: %@
Failed to fetch authorized URLs with XPC error: %@
Failed to fetch authorized URLs with error: %@
Failed to fetch apple owned domains with XPC error: %@
Failed to fetch apple owned domains with error: %@
fetchAppleIDAuthorizeHTMLResponseTemplate completed with result.
Failed to fetch authorization HTML response template with error: %@
No URL for Apple ID Authorization
Authorization controller should process URL
@(#)PROGRAM:AuthKit  PROJECT:AuthKit-1
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
AKCarouselAlertProviderServiceInterface
NSObject
AKCarouselAlertClientConnection
AKAuthorizationCredentialStateRequest
NSSecureCoding
NSCoding
AKExtensionItem
AKToken
AKMasterToken
AKAppleIDAuthenticationController
AKAppleIDAuthenticationLimitedUIProvider
AKAppleIDServerAuthenticationUIProvider
AKAppleIDAuthenticationUIProvider
_AKAppleIDAuthenticationContextManager
AKAppleIDAuthenticationClientProtocol
AKAnisetteProvisioningClientProtocol
AKURLDataTask
AKURLSession
NSURLSessionDelegate
NSURLSessionDataDelegate
NSURLSessionTaskDelegate
AKConsentedApplication
AKAuthorizationTVServicePresenter
AKAttestationData
NSCopying
AuthKit
AKDeviceListDeltaMessagePayload
AKAuthorizationUserResponse
AKNativeAccountRecoveryController
CDPAuthProvider
AKAttestationSigner
AKFollowUpTearDownContext
AKAuthorizationPresenterHostProtocol
AKAuthorizationPresenterHostInterface
AKCarrierBundlePhoneCertificate
AKCarrierBundleUtilities
AKCredentialRequestContext
AKAppleIDAuthenticationClientInterface
AKAuthorizationScopesUserSelection
AKConfiguration
AKAppleIDSigningController
Convenience
AKDeviceListRequestContext
AKAuthorizationDaemonProtocol
AKAuthorizationDaemonInterface
AKCertificatePinning
AKAccountManager
AKAppleIDSigningDaemonProtocol
AKAppleIDSigningDaemonInterface
AKAuthorizationLoginChoice
AKAppleIDServerResourceLoadDelegate
AKDeveloperTeam
AKCircleRequestPayload
AKURLBag
AKAccountRecoveryContext
AKAlertHandler
Accounts
AKAppleIDSession
NSURLSessionAppleIDContext
AKAnisetteData
AKAnisetteProvisioningClientInterface
AKAuthorizationCredential
AKCredential
AKApplicationMetadataInfo
AKAuthorization
AKAbsintheSigner
AKCDPFactory
AKPasswordRequest
AKCircleRequestContext
AuthKit_Errors
AKUsernameFormatter
AKAnisetteProvisioningAndSigningDeamonInterface
AKAnisetteProvisioningDaemonProtocol
AKAnisetteProvisioningDaemonInterface
AKAuthorizationPresentationContext
AKNetworkObserver
AKServerRequestConfiguration
AKAuthorizationAppSignInDiscovery
AKPasswordCredential
AKAuthorizationRequest
AKAuthorizationDaemonConnection
AKAuthorizationValidator
AKCredentialRequest
AKCredentialRequestProtocol
AKUserInformation
AKDevice
AKAnisetteProvisioningController
_AKAnisetteProviderProxy
AKAppleIDAuthenticationSurrogateUIProvider
AKAppleIDAuthenticationContext
AKAuthenticationContext
SecondFactorSupport
LocationNotificationSupport
AKAuthorizationContext
AKAppleIDAuthenticationDaemonProtocol
AKAppleIDAuthenticationDaemonInterface
AKAutoBugCapture
AKRemoteDevice
AKAuthorizationClientProtocol
AKAuthorizationClientInterface
AKAuthorizationController
init
setInterruptionHandler:
setInvalidationHandler:
invalidate
unsafe_invalidate
dealloc
initWithMachServiceName:options:
isEqual:
class
self
performSelector:
performSelector:withObject:
performSelector:withObject:withObject:
isProxy
isKindOfClass:
isMemberOfClass:
conformsToProtocol:
respondsToSelector:
retain
release
autorelease
retainCount
zone
hash
superclass
description
debugDescription
presentAlertWithDictionary:completion:
dismissAlert:
interfaceWithProtocol:
setRemoteObjectInterface:
internalQueue
setXpcConnection:
resume
connection
remoteObjectProxyWithErrorHandler:
sharedConnection
.cxx_destruct
setInternalQueue:
xpcConnection
_internalQueue
_xpcConnection
decodeObjectOfClass:forKey:
encodeObject:forKey:
supportsSecureCoding
encodeWithCoder:
initWithCoder:
userID
setUserID:
teamID
setTeamID:
clientID
setClientID:
altDSID
setAltDSID:
_userID
_teamID
_clientID
_altDSID
ak_setContext:
userInfo
mutableCopy
archivedDataWithRootObject:requiringSecureCoding:error:
setObject:forKey:
removeObjectForKey:
setUserInfo:
objectForKey:
unarchivedObjectOfClass:fromData:error:
ak_context
extensionItemWithAppleIDAuthenticationContext:
copy
doubleValue
dateWithTimeIntervalSinceNow:
length
initWithBase64EncodedString:options:
initWithData:encoding:
componentsSeparatedByString:
count
objectAtIndexedSubscript:
tokenWithValue:lifetime:
setName:
tokenWithBase64String:
stringValue
setStringValue:
expirationDate
name
_expirationDate
_stringValue
_name
dataUsingEncoding:
tokenWithExternalizedVersion:lifetime:
propertyListWithData:options:format:error:
allHeaderFields
objectForKeyedSubscript:
_setSessionKey:
_setEncryptedSessionKey:
initWithAppleID:altDSID:
setObject:forKeyedSubscript:
dataWithPropertyList:format:options:error:
externalizedVersion
tokenWithExternalizedVersionString:
updateWithHTTPURLResponse:
sessionKey
encryptedSessionKey
externalizedVersionString
_properties
setWithObjects:
initWithIdentifier:daemonXPCEndpoint:
initWithAuthenticationController:
delegate
setDelegate:
raise:format:
authenticationType
_proxiedAppBundleID
registerContext:
unregisterContext:
code
setServiceIdentifier:
_authenticationServiceConnection
_sanitizedCopy
isContextEligibleForSilentAuth
_capabilityForUIDisplay
ak_redactedCopy
authenticateWithContext:completion:
synchronousRemoteObjectProxyWithErrorHandler:
numberWithInteger:
setAppleIDWithAltDSID:inUse:forService:completion:
setAppleIDWithDSID:inUse:forService:completion:
fetchUserInformationForAltDSID:completion:
getUserInformationForAltDSID:completion:
username
fetchAuthModeWithContext:completion:
fetchDeviceMapWithContext:completion:
fetchAppListWithAltDSID:completion:
deleteAuthorizationDatabaseWithCompletion:
revokeAuthorizationForTeamWithTeamID:completion:
setConfigurationInfo:forIdentifier:forAltDSID:completion:
configurationInfoWithIdentifiers:forAltDSID:completion:
checkSecurityUpgradeEligibilityForContext:completion:
generateLoginCodeWithCompletion:
validateLoginCode:forAppleID:withCompletion:
performCircleRequestWithContext:completion:
checkInWithAuthenticationServerForAppleID:completion:
reportSignOutForAppleID:service:completion:
reportSignOutForAllAppleIDsWithCompletion:
updateStateWithExternalAuthenticationResponse:forContext:completion:
updateStateWithExternalAuthenticationResponse:forAppleID:completion:
isDevicePasscodeProtected:
activeLoginCode:
getServerUILoadDelegateForAltDSID:completion:
getServerUILoadDelegateWithContext:completion:
synchronizeFollowUpItemsForContext:completion:
teardownFollowUpWithContext:completion:
renewRecoveryTokenWithContext:completion:
verifyMasterKey:withContext:completion:
persistMasterKeyVerifier:withContext:completion:
domain
setUsername:
setIsUsernameEditable:
_setProxyingForApp:
validateVettingToken:forAltDSID:completion:
accountNamesForAltDSID:completion:
fetchURLBagWithCompletion:
fetchURLBagFromCache:withCompletion:
lock
initWithListenerEndpoint:
XPCInterface
setExportedObject:
setExportedInterface:
unlock
sensitiveAuthenticationKeys
initWithIdentifier:
initWithDaemonXPCEndpoint:
setAppleIDWithAltDSID:inUse:forService:
setAppleIDWithDSID:inUse:forService:
fetchDeviceListWithContext:completion:
fetchDeviceListWithContext:error:
fetchAuthorizedAppListWithContext:error:
deleteAuthorizationDatabase:
revokeAuthorizationForTeamWithTeamID:error:
validateLoginCode:forAppleID:completion:
synchronizeFollowUpItemsForContext:error:
verifyMasterKey:context:completion:
persistMasterKeyVerifier:context:completion:
accountNamesForAltDSID:
_urlBagFromCache:withError:
deallocHandler
setDeallocHandler:
_serviceID
_daemonXPCEndpoint
_contextManager
_connectionLock
_deallocHandler
hasPrefix:
_identifier
authenticationController:shouldContinueWithAuthenticationResults:error:forContext:
authenticationController:shouldContinueWithAuthenticationResults:error:forContext:completion:
_clientSideContextForServerContext:
ak_errorWithCode:
presentKeepUsingUIForAppleID:completion:
dismissKeepUsingUIWithCompletion:
presentBasicLoginUIWithCompletion:
dismissBasicLoginUIWithCompletion:
presentLoginAlertWithError:title:message:completion:
presentSecondFactorUIWithCompletion:
dismissSecondFactorUIWithCompletion:
presentSecondFactorAlertWithError:title:message:completion:
presentBiometricOrPasscodeValidationForAppleID:completion:
presentServerProvidedUIWithConfiguration:completion:
dismissServerProvidedUIWithCompletion:
presentNativeRecoveryUIWithContext:completion:
dismissNativeRecoveryUIWithCompletion:
anisetteDataProvider
provisionAnisetteWithCompletion:
syncAnisetteWithSIMData:completion:
eraseAnisetteWithCompletion:
fetchAnisetteDataAndProvisionIfNecessary:withCompletion:
legacyAnisetteDataForDSID:withCompletion:
_updateWithValuesFromContext:
provisionAnisetteForContext:withCompletion:
syncAnisetteForContext:withSIMData:completion:
eraseAnisetteForContext:withCompletion:
fetchAnisetteDataForContext:provisionIfNecessary:withCompletion:
legacyAnisetteDataForContext:DSID:withCompletion:
presentKeepUsingUIForContext:appleID:completion:
dismissKeepUsingUIForContext:withCompletion:
presentBasicLoginUIForContext:completion:
dismissBasicLoginUIForContext:completion:
presentLoginAlertForContext:withError:title:message:completion:
presentSecondFactorUIForContext:completion:
dismissSecondFactorUIForContext:completion:
presentSecondFactorAlertForContext:withError:title:message:completion:
presentServerProvidedUIForContext:withConfiguration:completion:
dismissServerProvidedUIForContext:completion:
presentNativeRecoveryUIForContext:recoveryContext:completion:
dismissNativeRecoveryUIForContext:completion:
presentBiometricOrPasscodeValidationForContext:completion:
shouldContinueWithAuthenticationResults:error:forContextID:completion:
_authContextsByUUID
_authController
_authContextsQueue
_delegate
setCanceledOrCompleted:
receivedData
response
stringWithFormat:
_completeWithError:
request
setRequest:
retryCount
setRetryCount:
underlyingTask
setUnderlyingTask:
completionHandler
setCompletionHandler:
setReceivedData:
lastRetryError
setLastRetryError:
canceledOrCompleted
_canceledOrCompleted
_request
_retryCount
_underlyingTask
_completionHandler
_receivedData
_lastRetryError
set_usesAppleIDContext:
_createURLSessionUsesAppleIDContext:
defaultSessionConfiguration
_urlBagCache
setURLCache:
setWaitsForConnectivity:
setTimeoutIntervalForResource:
set_appleIDContext:
defaultSessionObjectWithConfiguration:
setRequestCachePolicy:
systemContainerCacheURL
path
_initWithExistingCFURLCache:
removeAllCachedResponses
allValues
countByEnumeratingWithState:objects:count:
_unsafe_completeTask:withError:
_usesAppleIDContext
setMaxConcurrentOperationCount:
setUnderlyingQueue:
sessionWithConfiguration:delegate:delegateQueue:
absoluteString
_URLSession
dataTaskWithRequest:
taskIdentifier
numberWithUnsignedInteger:
state
cancel
appendData:
_isRecoverableError:
_unsafe_retryTaskIfPossible:
isEqualToString:
numberWithInt:
arrayWithObjects:count:
integerValue
numberWithLongLong:
dictionaryWithObjects:forKeys:count:
errorWithDomain:code:userInfo:
statusCode
beginDataTaskWithRequest:completionHandler:
protectionSpace
host
containsString:
authenticationMethod
serverTrust
isValidCertificateTrust:forHostname:
sharedURLSession
sharedAnisetteFreeURLSession
sharedCacheEnabledURLSession
sharedCacheEnabledAnisetteFreeSession
sharedCacheReliantAnisetteFreeSession
URLSession:didBecomeInvalidWithError:
URLSession:didReceiveChallenge:completionHandler:
URLSessionDidFinishEventsForBackgroundURLSession:
URLSession:task:willBeginDelayedRequest:completionHandler:
URLSession:taskIsWaitingForConnectivity:
URLSession:task:willPerformHTTPRedirection:newRequest:completionHandler:
URLSession:task:didReceiveChallenge:completionHandler:
URLSession:task:needNewBodyStream:
URLSession:task:didSendBodyData:totalBytesSent:totalBytesExpectedToSend:
URLSession:task:didFinishCollectingMetrics:
URLSession:task:didCompleteWithError:
URLSession:dataTask:didReceiveResponse:completionHandler:
URLSession:dataTask:didBecomeDownloadTask:
URLSession:dataTask:didBecomeStreamTask:
URLSession:dataTask:didReceiveData:
URLSession:dataTask:willCacheResponse:completionHandler:
cancelDataTask:
beginAuthenticationDataTaskWithRequest:completionHandler:
_urlSession
_sessionQueue
_tasksByIdentifier
__usesAppleIDContext
valueForKey:
decodeObjectOfClasses:forKey:
decodeIntegerForKey:
encodeInteger:forKey:
initWithResponseInfo:
scopes
setScopes:
setState:
_scopes
_state
_typeFromString:
_stringForType:
typeOfMessage:
buildStartProgressAnimationMessage
buildFetchAppIconMessage
buildFetchAppIconReplyWithImageData:imageScale:
allocWithZone:
allKeys
copyWithZone:
initWithDictionary:
attestationHeaders
setAttestationHeaders:
_attestationHeaders
JSONObjectWithData:options:error:
containsObject:
_ak_truncatedTokensCopy
ak_mapObjects:
initWithCapacity:
stringByReplacingOccurrencesOfString:withString:
substringToIndex:
enumerateKeysAndObjectsUsingBlock:
initWithString:
ak_urlEncoded
initWithName:value:
addObject:
setQueryItems:
query
isValidJSONObject:
dataWithJSONObject:options:error:
ak_mapObjectsNullable:
ak_urlQueryString
ak_toJSONString
ak_dictionaryWithResponseData:
ak_jsonDictionaryWithResponseData:
dateWithTimeIntervalSince1970:
_convertOperationToEnum:
caseInsensitiveCompare:
initWithResponseBody:
operation
machineID
serialNumber
timestamp
_operation
_machineID
_serialNumber
_timestamp
selectedRequest
setSelectedRequest:
userSelection
setUserSelection:
loginChoice
setLoginChoice:
rawAccountPassword
setRawAccountPassword:
_selectedRequest
_userSelection
_loginChoice
_rawAccountPassword
UTF8String
dataWithBytes:length:
ak_SHA256
ak_hexString
URLQueryAllowedCharacterSet
stringByAddingPercentEncodingWithAllowedCharacters:
base64EncodedStringWithOptions:
ak_SHA256String
ak_base64EncodedJsonFromObject:
context
authContext
setAppleID:
decodedRecoveryPETString
setPasswordEquivToken:
DSID
longLongValue
setDsid:
supportsMasterKeyRecovery
setIdmsMasterKeyRecovery:
idmsMasterKeyRecovery
setIdmsRecovery:
setGuestMode:
appleID
dsid
recoveryControllerWithContext:
setAuthProvider:
setUiProvider:
_mapICSCRecoveryResultsToAuthKit:
performRecovery:
dictionary
cdpIDMSRecordPRKKey
cdpIDMSRecordMIDKey
recoveryContinuationURL
requestWithURL:
setHTTPMethod:
decodedRecoveryIdentityTokenString
ak_addICSCRecoveryHeaderWithIdentityToken:forAltDSID:
ak_addRecoveryHeaderWithIdentityToken:forAltDSID:
setValue:forHTTPHeaderField:
postBodyForiCSCServerUIResponseWithContext:recoveryError:
ak_setBodyWithParameters:
allHTTPHeaderFields
cdpErrorDomain
localizedFailureReason
requestForRecoveryCompletionWithContext:recoveredInfo:recoveryError:
shouldSendServerResponseForRecoveredInfo:withRecoveryError:
cdpContext:performSilentRecoveryTokenRenewal:
cdpContext:verifyMasterKey:completion:
initWithContext:uiProvider:
presentNativeRecoveryUIWithCompletion:
_recoveryController
_recoveryContext
_cdpUiProvider
sharedSigner
signatureForData:options:completion:
signaturesForData:options:completion:
itemIdentifier
setItemIdentifier:
akAction
setAkAction:
_itemIdentifier
_akAction
authorizationRequestInitiatedWithUserProvidedInformation:completion:
authorizationRequestFinishedWithError:completion:
setClasses:forSelector:argumentIndex:ofReply:
phoneCertificate
setPhoneCertificate:
slotID
setSlotID:
_phoneCertificate
_slotID
initWithQueue:
getSubscriptionInfoWithError:
array
subscriptionsInUse
userDataPreferred
numberWithBool:
userDefaultVoice
getMobileSubscriberHomeCountryList:error:
firstObject
phoneNumber
_formattedValueForPhoneNumber:countryCode:
label
sharedInstance
phoneBundleInfoWithAdditionalInfo:error:
_telephonyClient
_carrierUtilitiesQueue
encodeBool:forKey:
decodeBoolForKey:
UUID
ak_firstObjectMatchingFilter:
authorizationRequest
authkitAccount
continuationTokenForAccount:
currentDevice
isProtectedWithPasscode
setCredentialRequests:
credentialRequests
_requirePassword
_shouldForceUI
set_shouldForceUI:
_shouldSkipBiometrics
set_shouldSkipBiometrics:
_shouldSkipAuthorizationUI
set_shouldSkipAuthorizationUI:
_informativeText
set_informativeText:
_iconName
set_iconName:
_iconData
set_iconData:
_iconScale
set_iconScale:
_shouldForcePrivateEmail
set_shouldForcePrivateEmail:
_proxiedClientAppName
set_proxiedClientAppName:
_proxiedClientBundleID
set_proxiedClientBundleID:
_proxiedClientAppID
set_proxiedClientAppID:
_proxiedClientTeamID
set_proxiedClientTeamID:
_proxiedAssociatedDomains
set_proxiedAssociatedDomains:
set_requirePassword:
_isFirstPartyLogin
set_isFirstPartyLogin:
_isRapportLogin
set_isRapportLogin:
requestIdentifier
setAuthorizationRequest:
passwordRequest
setPasswordRequest:
_requestIdentifier
_authorizationRequest
_passwordRequest
userInformation
makePrivateEmail
setUserInformation:
setMakePrivateEmail:
_makePrivateEmail
_userInformation
isInternalBuild
localUserUUID
uniqueDeviceIdentifier
serverFriendlyDescription
date
ak_serverFriendlyString
isInCircle
anisetteDataForURLRequest:error:
ak_anisetteHeadersWithData:
ak_proxiedAnisetteHeadersWithData:
_setAuthorizationHeaderWithToken:altDSID:key:
setHTTPBody:
componentsJoinedByString:
currentLocale
uppercaseString
locale
localeIdentifier
localTimeZone
secondsFromGMT
ROMAddress
MLBSerialNumber
abbreviation
oneTimePassword
routingInfo
initWithFormat:
sharedConfiguration
shouldAllowTestApplication
modelNumber
currentDeviceAuthenticationMode
ak_addInternalBuildHeader
ak_addLocalUserUUIDHashHeader
ak_addAppleIDHeaderWithValue:
ak_addAppleIDUserModeHeaderWithValue:
ak_addDeviceUDIDHeader
ak_addProxiedDeviceUDIDHeader:
ak_addClientInfoHeader
ak_addClientTimeHeader
ak_addCircleStatusHeader
ak_addCompanionClientInfoHeader:
ak_addProxiedClientInfoHeader:
ak_addEphemeralAuthHeader
ak_addAnisetteHeaders
ak_addProxiedAnisetteHeaders:
ak_addProxiedAttestationHeaders:
ak_addAuthorizationHeaderWithIdentityToken:forAltDSID:
ak_addProxiedAuthorizationHeaderWithIdentityToken:forAltDSID:
ak_addAuthorizationHeaderWithServiceToken:forAltDSID:
ak_addAuthorizationHeaderWithHeartbeatToken:forAltDSID:
ak_addShortLivedTokenHeaderWithIdentityToken:forAltDSID:
ak_setJSONBodyWithParameters:
ak_addAbsintheHeaderWithValue:
ak_addLoggedInServicesHeaderForServices:
ak_addContextHeaderForServiceType:
ak_addContinutationKeyHeader:
ak_addPasswordResetKeyHeader:
ak_addCountryHeader
ak_addProxiedDeviceCountryHeader:
ak_addLocaleHeader
ak_addTimeZoneHeaders
ak_addPRKRequestHeader
ak_addProxiedDevicePRKRequestHeader
ak_addICSCIntentHeader
ak_addLocalUserHasAppleIDLoginHeader
ak_addDeviceROMHeader
ak_addDeviceMLBHeader
ak_addDeviceSerialNumberHeader
ak_addProxiedDeviceSerialNumberHeader:
ak_addPhoneNumberHeader
ak_addPhoneNumberCertificateHeaderWithValue:
ak_addPhoneInformationHeaderWithValue:
ak_addAcceptedSLAHeaderWithVersion:
ak_addClientApp:
ak_addProxyApp:
ak_addAppProvidedContext:
ak_addProxiedDeviceICSCIntentHeader
ak_addShowWarranty
ak_addDeviceModel
ak_addCFUHeader:
ak_addDeviceConfigurationModeHeader
ak_clientTimeHeader
ak_localeHeader
ak_timeZoneHeader
ak_clientInfoHeader
ak_deviceUDIDHeader
ak_anisetteHeadersWithCompanionData:
removeAllObjects
standardUserDefaults
configurationValueForKey:
setConfigurationValue:forKey:
unsignedIntegerValue
shouldDisablePETs
setShouldDisablePETs:
shouldFakeAuthSuccess
setShouldFakeAuthSuccess:
shouldDisablePiggybacking
setShouldDisablePiggybacking:
shouldSuppressHSA2Suggestions
setShouldSuppressHSA2Suggestions:
shouldAddHSA2CreateHeader
setShouldAddHSA2CreateHeader:
shouldAllowPhoneNumberAccounts
setShouldAllowPhoneNumberAccounts:
shouldAllowExperimentalMode
setShouldAllowExperimentalMode:
shouldAllowDemoMode
setShouldAllowDemoMode:
setShouldAllowTestApplication:
shouldEnableTestAccountMode
setShouldEnableTestAccountMode:
shouldSuppressModalSheetsInMacBuddy
setShouldSuppressModalSheetsInMacBuddy:
shouldAutocycleAppsInTiburon
setShouldAutocycleAppsInTiburon:
lastKnownIDMSEnvironment
setLastKnownIDMSEnvironment:
_cachedSettings
_notificationToken
_settingsQueue
_connectionInterrupted
_connectionInvalidated
_connection
absintheSignatureForData:completion:
setIsProxy:
authenticationController
setAuthenticationController:
_signerLock
_signingQueue
_listenerEndpoint
_isProxy
_authenticationController
_additionalAbsintheHeadersForRequest:completion:
addEntriesFromDictionary:
_additionalAttestationHeadersForRequest:withInterval:completion:
HTTPBody
ak_errorWithCode:userInfo:
signingHeadersForRequest:completion:
includeUntrustedDevices
setIncludeUntrustedDevices:
includeFamilyDevices
setIncludeFamilyDevices:
services
setServices:
operatingSystems
setOperatingSystems:
_includeUntrustedDevices
_includeFamilyDevices
_services
_operatingSystems
performAuthorization:completion:
performAuthorizationWithContext:withUserProvidedInformation:completion:
getCredentialStateForRequest:completion:
getPresentationContextForRequestContext:completion:
fetchAppleIDAuthorizationURLSetWithCompletion:
fetchAppleOwnedDomainSetWithCompletion:
fetchAppleIDAuthorizeHTMLResponseTemplateWithCompletion:
startDiscoveryWithCompletion:
isAccountsFrameworkAvailable
alloc
accountPropertyForKey:
setAccountProperty:forKey:
authKitAccountWithAltDSID:
_setUsername:forAccount:
aliasesForAccount:
indexOfObject:
setObject:atIndexedSubscript:
setAliases:forAccount:
saveAccount:error:
appleIDAccountWithAltDSID:
iCloudAccountForAltDSID:
boolValue
store
saveVerifiedAccount:error:
hearbeatTokenForAccount:error:
continuationTokenForAccount:error:
passwordResetTokenForAccount:error:
passwordResetTokenBackupForAccount:error:
_tokenWithName:forAccount:error:
_removeTokenKey:forAccount:
credentialForAccount:error:
credentialItemForKey:
authKitAccountType
accountsWithAccountType:options:error:
accountTypeWithAccountTypeIdentifier:error:
appleIDAccountType
altDSIDforPrimaryiCloudAccount
creationDate
compare:
_removeTokenForKeys:forAccount:
credential
setCredentialItem:forKey:
setCredential:
removeObject:
servicesUsingAccount:
allObjects
stringRepresentationForService:
ak_map:
allAuthKitAccounts
altDSIDForAccount:
removeAccount:withCompletionHandler:
iCloudAccountForAppleID:
isPrimaryiCloudAccount:
iCloudAccountType
_aliasesForiCloudAccount:
_altDSIDForiCloudAccount:
primaryiCloudAccount
ams_sharedAccountStore
ams_activeiTunesAccount
ams_altDSID
setAltDSID:forAccount:
DSIDForAccount:
setDSID:forAccount:
updateUsername:forAccountsWithAltDSID:
verifiedPrimaryEmailForAccount:
setVerifiedPrimaryEmail:forAccount:
phoneAsAppleIDForAccount:
setPhoneAsAppleID:forAccount:
userUnderAgeForAccount:
setUserUnderage:forAccount:
authorizationUsedForAccount:
setAuthorizationUsed:forAccount:
reachableEmailAddressesForAccount:
setReachableEmailAddresses:forAccount:
givenNameForAccount:
setGivenName:forAccount:
familyNameForAccount:
setFamilyName:forAccount:
forwardingEmailForAccount:
setForwardingEmail:forAccount:
selectedPrivateEmailForAccount:
setSelectedPrivateEmail:forAccount:
selectedAuthorizationEmailForAccount:
setSelectedAuthorizationEmail:forAccount:
applicationListVersionForAccount:
setApplicationListVersion:forAccount:
securityLevelForAccount:
setSecurityLevel:forAccount:
authenticationModeForAccount:
setAuthenticationMode:forAccount:
needsRepairForAccount:
repairStateForAccount:
setRepairState:forAccount:
hearbeatTokenForAccount:
passwordResetTokenForAccount:
passwordResetTokenBackupForAccount:
masterTokenForAccount:
removeMasterTokenForAccount:
authKitAccountWithDSID:
authKitAccountWithAppleID:
appleIDAccountWithAppleID:
primaryAuthKitAccount
mostRecentlyUsedAuthKitAccount
removeAllPasswordResetTokens
removeContinuationTokenForAccount:
setAccount:inUse:byService:
activeServiceNamesForAccount:
removeUnusedAndDuplicateAuthKitAccountsWithCompletion:
hasPrimaryiCloudAccountForAppleID:
hasPrimaryiCloudAccountForAltDSID:
isPrimaryiCloudAccountEmailVerified:
altDSIDforActiveiTunesAccount
transportableAuthKitAccount:
setStore:
_accountStore
_accountQueue
_authKitAccountType
_authKitAccountTypeLock
_appleIDAccountType
_appleIDAccountTypeLock
_iCloudAccountType
_iCloudAccountTypeLock
bytes
appendFormat:
dataWithBytesNoCopy:length:freeWhenDone:
ak_compressedData:
initWithUser:site:
user
setUser:
site
setSite:
appleIDAuth
setAppleIDAuth:
_appleIDAuth
_user
_site
shouldSendSigningHeaders
setShouldSendSigningHeaders:
signRequest:withCompletionHandler:
_signRequest:
signingController
proxiedDevice
initForDevice:provider:
fetchAttestationForRequest:completion:
signRequestWithCommonHeaders:
_signWithProxiedDeviceHeaders:
sharedController
isMultiUserMode
_signWithFeatureOptInHeaders:
signalFromServerResponse:
isResponseActionable:
initWithAltDSID:identityToken:
shouldSendAbsintheHeader
setShouldSendAbsintheHeader:
signRequest:
isResponseFinal:
isAuthenticationRequired:
isResponseFinalForHSA2ServerFlow:
serviceToken
setServiceToken:
shouldSendEphemeralAuthHeader
setShouldSendEphemeralAuthHeader:
shouldSendICSCIntentHeader
setShouldSendICSCIntentHeader:
shouldSendLocalUserHasAppleIDLoginHeader
setShouldSendLocalUserHasAppleIDLoginHeader:
shouldSendPhoneNumber
setShouldSendPhoneNumber:
phoneNumberCertificate
setPhoneNumberCertificate:
phoneInformation
setPhoneInformation:
serviceType
setServiceType:
loggedInServices
setLoggedInServices:
passwordResetToken
setPasswordResetToken:
continuationToken
setContinuationToken:
heartbeatToken
setHeartbeatToken:
identityToken
setIdentityToken:
proxyAppName
setProxyAppName:
clientAppName
setClientAppName:
appProvidedContext
setAppProvidedContext:
hasEmptyPasswordOverride
setHasEmptyPasswordOverride:
securityUpgradeContext
setSecurityUpgradeContext:
followupItems
setFollowupItems:
setProxiedDevice:
proxiedAltDSID
setProxiedAltDSID:
proxiedIdentityToken
setProxiedIdentityToken:
setAnisetteDataProvider:
proxiedDeviceAnisetteData
setProxiedDeviceAnisetteData:
proxiedDeviceAttestationData
setProxiedDeviceAttestationData:
_shouldSendEphemeralAuthHeader
_shouldSendICSCIntentHeader
_shouldSendLocalUserHasAppleIDLoginHeader
_shouldSendPhoneNumber
_shouldSendSigningHeaders
_serviceToken
_phoneNumberCertificate
_phoneInformation
_serviceType
_loggedInServices
_passwordResetToken
_continuationToken
_heartbeatToken
_identityToken
_proxyAppName
_clientAppName
_appProvidedContext
_hasEmptyPasswordOverride
_securityUpgradeContext
_followupItems
_proxiedDevice
_proxiedAltDSID
_proxiedIdentityToken
_anisetteDataProvider
_proxiedDeviceAnisetteData
_proxiedDeviceAttestationData
enumerateObjectsUsingBlock:
userIdentifier
setUserIdentifier:
privateEmail
setPrivateEmail:
apps
setApps:
_userIdentifier
_privateEmail
_apps
transactionId
setTransactionId:
serverInfo
setServerInfo:
clientErrorCode
circleStep
setCircleStep:
setWithArray:
payloadWithMessage:
isRequestingPayload
isAcceptingPayload
clientInfo
replyPayload
setClientInfo:
setClientErrorCode:
responseMessage
setResponseMessage:
responseInfo
setResponseInfo:
_serverInfo
_clientInfo
_clientErrorCode
_transactionId
_responseMessage
_responseInfo
_circleStep
_urlAtKey:
configurationAtKey:
configurationAtKey:fromCache:
_requestEnvironmentsWithError:
_IDMSEnvironmentFromString:
_requestEnvironmentsWithBag:
_configurationsFromCache:withError:
_fetchURLBagWithCompletion:
_requestNewURLBagIfNecessaryWithError:
URLWithString:
bagProvider
urlBagFromCache:withError:
sharedBag
keyForEscapeHatchURL
looksLikeiForgotURLKey:
IDMSEnvironmentFromBag:
basicAuthURL
startProvisioningURL
endProvisioningURL
syncAnisetteURL
upgradeEligibilityCheckURL
upgradeUIURL
validateCodeURL
escapeHatchURL
checkInURL
notificationAckURL
iForgotURL
iForgotContinuationURL
createAppleIDURL
deviceListURL
trustedDevicesURL
trustedDevicesSummaryURL
absintheCertURL
absintheSessionURL
tokenUpgradeURL
configurationInfoURL
fetchConfigDataURL
changePasswordURL
validateVettingTokenURL
renewRecoveryTokenURL
circleURL
fetchFollowUps
fetchUserInfoURL
fetchAppInfoURL
fetchAuthenticationModeURL
storeModernRecoveryURL
isPhoneNumberSupportedConfig
acsURL
repairURL
userVerificationURL
appleOwnedDomains
appleIDAuthorizationURLs
appleIDAuthorizeHTMLResponseURL
APSEnvironment
IDMSEnvironment
IsInlineFlowSupportedConfig
requestNewURLBagIfNecessaryWithCompletion:
requestNewURLBagIfNecessaryWithError:
urlAtKey:
setBagProvider:
_bagProvider
setDSID:
setAuthContext:
setSupportsMasterKeyRecovery:
setEncodedRecoveryIdentityToken:
setEncodedRecoveryPET:
setRecoveryContinuationURL:
encodedRecoveryIdentityToken
encodedRecoveryPET
recoveryContextWithServerInfo:
isValid
_supportsMasterKeyRecovery
_encodedRecoveryIdentityToken
_encodedRecoveryPET
_recoveryContinuationURL
_authContext
_showAlertForSignupNotCompletedWithCompletion:andShouldDismiss:
_showAlertForInvalidContextWithCompletion:
_showAlertForMissingAppleAccountWithCompletion:
_showAlertForAccountNotSupportedWithCompletion:
_showAlertForUnverifiedEmailWithCompletion:
_showAlertForInsufficientSecurityLevelWithCompletion:
_showAlertForCannotFindServerWithCompletion:
_showAlertForUnderageAccountWithCompletion:
bundleForClass:
localizedStringForKey:value:table:
notificationDictionaryWithTitle:message:defaultButton:alternateButton:
showAlert:primaryAction:altAction:
_openSpyglass
_openUpgradeAccountSecurityLevel
alertHandlerShowAlert:primaryAction:altAction:
showAlert:primaryAction:altAction:cancelAction:
defaultWorkspace
openSensitiveURL:withOptions:
showAlertForError:withCompletion:
uiProvider
_uiProvider
isUsernameEditable
authKitAccount:
authKitAccountForSilentServiceToken:
originalRequest
_generateAppleIDHeadersForSessionTask:withCompletion:
_handleURLResponse:forRequest:withCompletion:
_generateAppleIDHeadersForRequest:error:
_genericAppleIDHeadersDictionaryForRequest:
_nativeAnisetteController
anisetteDataWithError:
_pairedDeviceAnisetteController
anisetteDataForURLRequest:completion:
syncWithSIMData:completion:
provisionWithCompletion:
eraseWithCompletion:
URLSession:task:getAppleIDHeadersForResponse:completionHandler:
relevantHTTPStatusCodes
appleIDHeadersForRequest:
handleResponse:forRequest:shouldRetry:
pairedDevice
setPairedDevice:
_proxiedAnisetteData
_anisetteControllerLock
_pairedDevice
stringByAppendingString:
numberWithUnsignedLongLong:
setMachineID:
setOneTimePassword:
setRoutingInfo:
_oneTimePassword
_routingInfo
serverProvidedData
serviceTokens
setSelectedEmail:
failWithError:
initWithServerResponse:
authorizedScopes
authorizationCode
isLikelyRealUser
setIsLikelyRealUser:
_isLikelyRealUser
_authorizedScopes
_authorizationCode
authorizedAppListVersion
teams
_authorizedAppListVersion
_teams
ak_isUserCancelError
ak_isUserSkippedError
ak_isUserTryAgainError
ak_isServiceError
ak_isAuthorizationUserNotSupportedError
ak_errorWithCode:underlyingError:
ak_wrappedAnisetteError:
authorizedRequest
setAuthorizedRequest:
_authorizedRequest
_credential
signatureForURLRequest:completionHandler:
signatureForURLRequest:
_contextCreationDate
contextWithAuthResults:
initWithAuthenticationResults:
initWithContext:
contextForStateRepair
stateControllerWithContext:
followUpRepairContext
followUpController
accountRecoveryControllerWithPresentingViewController:
cdpStateUIController
decodeDoubleForKey:
encodeDouble:forKey:
payload
setPayload:
waitForReply
setWaitForReply:
waitForReplyTimeout
setWaitForReplyTimeout:
identityTokenValue
setIdentityTokenValue:
heartbeatTokenValue
setHeartbeatTokenValue:
pushToken
setPushToken:
_notifyOfTimeout
set_notifyOfTimeout:
_waitForReply
__notifyOfTimeout
_payload
_waitForReplyTimeout
_identityTokenValue
_heartbeatTokenValue
_pushToken
ak_errorByAppendingUserInfo:
formattedUsernameFromUsername:
provisionAnisetteForDevice:completion:
syncAnisetteWithSIMData:device:completion:
eraseAnisetteForDevice:completion:
fetchAnisetteDataAndProvisionIfNecessary:device:completion:
legacyAnisetteDataForDSID:device:completion:
attestationDataForDevice:withRequest:completion:
_addPresenterParameters
_addPresentationParametersForContext:
pluginKitProxyForIdentifier:
containingBundle
applicationProxyForIdentifier:
localizedNameForContext:
localizedName
bundleURL
_iconVariantForScale:
iconDataForVariant:
numberWithFloat:
initWithContext:bundleID:
bundleID
setBundleID:
isFirstPartyLogin
isRapportLogin
localizedAppName
informativeText
iconName
iconData
iconScale
credentialRequestContext
setCredentialRequestContext:
loginChoices
setLoginChoices:
_bundleID
_localizedAppName
_credentialRequestContext
_loginChoices
_startPathMonitor
_stopPathMonitor
_networkReachabilityDidChange
setArgument:atIndex:
invoke
methodSignatureForSelector:
invocationWithMethodSignature:
setSelector:
setTarget:
valueWithNonretainedObject:
sharedNetworkObserver
isNetworkReachable
addNetworkReachableObserver:selector:
removeNetworkReachableObserver:
_pathMonitor
_observerQueue
_invocationByObserver
_isNetworkReachable
initWithRequest:requestType:
resourceLoadDelegate
setResourceLoadDelegate:
requestType
setRequestType:
presentationType
setPresentationType:
whitelistedPathURLs
setWhitelistedPathURLs:
_resourceLoadDelegate
_requestType
_presentationType
_whitelistedPathURLs
_daemonConnection
decodeObjectForKey:
initWithUser:password:
password
_password
initWithAltDSID:
setRequestedScopes:
setAppProvidedData:
setExistingStatus:
setAuthkitAccount:
requestedScopes
appProvidedData
existingStatus
_authkitAccount
_requestedScopes
_appProvidedData
_existingStatus
scheme
ak_usesHTTPSScheme
initWithListenerEndpoint:exportedInterface:
_connectionInterruptionHandler
_connectionInvalidationHandler
listenerEndpoint
_unfairLock
initWithLocaleIdentifier:
setDateFormat:
setLocale:
timeZoneForSecondsFromGMT:
setTimeZone:
stringFromDate:
canPerformAuthorizationRequest:error:
canPerformPasswordRequest:error:
givenName
familyName
selectedEmail
canPerformCredentialRequest:error:
canPerformRapportClientAuthorizationWithError:
shouldContinueWithResponse:error:
setRequestIdentifier:
setGivenName:
setFamilyName:
setForwardingEmail:
setAccountName:
setAccountAliases:
setReachableEmails:
setAuthorizedApplicationsListVersion:
setMasterKeyID:
setVettedPrimaryEmail:
setPhoneAsAppleID:
setHasUsedAuthorization:
setIsUnderage:
setIsLegacyStudent:
setAppleIDSecurityLevel:
setAuthMode:
setRepairState:
forwardingEmail
previouslySelectedEmail
accountName
accountAliases
reachableEmails
authorizedApplicationsListVersion
masterKeyID
vettedPrimaryEmail
phoneAsAppleID
isUnderage
isLegacyStudent
hasUsedAuthorization
previouslyWantedPrivateEmail
appleIDSecurityLevel
authMode
repairState
_vettedPrimaryEmail
_phoneAsAppleID
_isUnderage
_isLegacyStudent
_hasUsedAuthorization
_previouslyWantedPrivateEmail
_givenName
_familyName
_forwardingEmail
_previouslySelectedEmail
_accountName
_accountAliases
_reachableEmails
_authorizedApplicationsListVersion
_masterKeyID
_appleIDSecurityLevel
_authMode
_repairState
_selectedEmail
_lookUpCurrentUniqueDeviceID
setUniqueDeviceIdentifier:
_generateServerFriendlyDescription
setServerFriendlyDescription:
_lookUpCurrentColor
setColor:
_lookUpCurrentEnclosureColor
setEnclosureColor:
_lookUpCurrentCoverGlassColor
setCoverGlassColor:
_lookUpCurrentHousingColor
setHousingColor:
_lookUpCurrentBackingColor
setBackingColor:
autoupdatingCurrentLocale
_lookupROMAddress
setROMAddress:
_lookupMLBSerialNumber
setMLBSerialNumber:
setLinkType:
_lookupModelNumber
setModelNumber:
getActivePairedDevice
valueForProperty:
_generateServerFriendlyDescriptionForPairedDevice:
localeWithLocaleIdentifier:
fileURLWithFileSystemRepresentation:isDirectory:relativeToURL:
systemContainerURL
URLByAppendingPathComponent:
_hardwareModel
_osName
_osVersion
_buildNumber
infoDictionary
mainBundle
bundleIdentifier
isPasscodeSet
canEvaluatePolicy:error:
activeIDSPeerDevice
deviceWithSerializedData:
personaIDIfCurrentPersonaIsEnterprise
deviceSpecificLocalizedStringWithKey:
serializedData
userChosenName
userFullName
internationalMobileEquipmentIdentity
isUnlocked
isBiometricAuthCapable
isFaceIDCapable
mobileEquipmentIdentifier
integratedCircuitCardIdentifier
color
enclosureColor
coverGlassColor
housingColor
backingColor
linkType
_isMonitoringUnlockEvents
_monitoringLock
_serverFriendlyDescription
_uniqueDeviceIdentifier
_color
_enclosureColor
_coverGlassColor
_housingColor
_backingColor
_locale
_MLBSerialNumber
_ROMAddress
_modelNumber
_linkType
ak_filter:
ak_mapNullable:
ak_arrayWithResponseData:
ak_arrayWithJSONResponseData:
_anisetteServiceConnection
fetchAnisetteDataAndProvisionIfNecessary:error:
exceptionWithName:reason:userInfo:
initWithProvider:
anisetteDataWithCompletion:
targetDevice
setTargetDevice:
_targetDevice
_setMessage:
setReason:
unsignedIntValue
setGeneratedCode:
_message
_interpolatedReason
_initWithIdentifier:
_proxiedAppName
companionDevice
_shouldSkipInitialReachabilityCheck
shouldPromptForPasswordOnly
isEphemeral
initWithSurrogateID:
reason
_appendBlameIfRequiredTo:
stringWithUTF8String:
serviceIdentifiers
setServiceIdentifiers:
_interpolatedReasonWithBlame
_secondFactorQueue
_setProxiedAppName:
setCompanionDevice:
_localUserHasEmptyPassword
isContextEligibleForSilentAuthCoercion
isContextEligibleForBiometricOrPasscodeAuth
setShouldPreventInteractiveAuth:
shouldPreventInteractiveAuth
setShouldForceInteractiveAuth:
shouldForceInteractiveAuth
serviceIdentifier
_requiresPasswordInput
_startListeningForSecondFactorCodeEntryNotification
_stopListeningForSecondFactorCodeEntryNotification
_handleSecondFactorCodeEntry
_isProxyingForApp
_setProxiedAppBundleID:
_setIdentityToken:
_shouldSendIdentityTokenForRemoteUI
set_shouldSendIdentityTokenForRemoteUI:
_shouldSendGrandSlamTokensForRemoteUI
set_shouldSendGrandSlamTokensForRemoteUI:
_passwordPromptTitle
set_passwordPromptTitle:
_setPassword:
_isPasswordEditable
set_isPasswordEditable:
_shortLivedToken
_setShortLivedToken:
set_shouldSkipInitialReachabilityCheck:
_attemptIndex
set_attemptIndex:
companionDeviceAnisetteData
setCompanionDeviceAnisetteData:
shouldAllowAppleIDCreation
setShouldAllowAppleIDCreation:
needsCredentialRecovery
setNeedsCredentialRecovery:
needsNewAppleID
setNeedsNewAppleID:
needsPasswordChange
setNeedsPasswordChange:
isTriggeredByNotification
setTriggeredByNotification:
defaultButtonString
setDefaultButtonString:
maximumLoginAttempts
setMaximumLoginAttempts:
setIsEphemeral:
httpHeadersForRemoteUI
setHttpHeadersForRemoteUI:
shouldOfferSecurityUpgrade
setShouldOfferSecurityUpgrade:
needsRepair
setNeedsRepair:
title
setTitle:
helpAnchor
setHelpAnchor:
helpBook
setHelpBook:
setAuthenticationType:
setShouldPromptForPasswordOnly:
shouldUpdatePersistentServiceTokens
setShouldUpdatePersistentServiceTokens:
isAppleIDLoginEnabled
setAppleIDLoginEnabled:
hasEmptyPassword
setHasEmptyPassword:
shouldRequestRecoveryPET
setShouldRequestRecoveryPET:
shouldRequestShortLivedToken
setShouldRequestShortLivedToken:
shouldRequestConfigurationInfo
setShouldRequestConfigurationInfo:
supportsPiggybacking
setSupportsPiggybacking:
anticipateEscrowAttempt
setAnticipateEscrowAttempt:
desiredInternalTokens
setDesiredInternalTokens:
isFirstTimeLogin
setFirstTimeLogin:
shouldSkipSettingsLaunchAlert
setShouldSkipSettingsLaunchAlert:
displayString
setDisplayString:
displayTitle
setDisplayTitle:
_generatedCode
_latitude
_longitude
_deviceClass
_deviceColor
_deviceEnclosureColor
_activeSecondFactoryEntryPrompt
_secondFactoryEntryCompletion
_companionDevice
_shouldPreventInteractiveAuth
_shouldForceInteractiveAuth
_isUsernameEditable
_shouldAllowAppleIDCreation
_needsCredentialRecovery
_needsNewAppleID
_needsPasswordChange
_isTriggeredByNotification
_isEphemeral
_shouldOfferSecurityUpgrade
_needsRepair
_shouldPromptForPasswordOnly
_shouldUpdatePersistentServiceTokens
_shouldRequestRecoveryPET
_shouldRequestShortLivedToken
_shouldRequestConfigurationInfo
_supportsPiggybacking
_anticipateEscrowAttempt
_isFirstTimeLogin
_shouldSkipSettingsLaunchAlert
_companionDeviceAnisetteData
_username
_reason
_defaultButtonString
_maximumLoginAttempts
_serviceIdentifiers
_DSID
_httpHeadersForRemoteUI
_title
_helpAnchor
_helpBook
_authenticationType
_isAppleIDLoginEnabled
_hasEmptyPassword
_desiredInternalTokens
_displayString
_displayTitle
generatedCode
latitude
setLatitude:
longitude
setLongitude:
deviceClass
setDeviceClass:
deviceColor
setDeviceColor:
deviceEnclosureColor
setDeviceEnclosureColor:
initWithRequest:
_hasApplicationMetaData
setByAddingObject:
triggerAutoBugCaptureWithSubType:andBundleID:userInfo:
shouldCapturePromptBugForContext:
userInfoFromContext:
userInfoFromAccount:
_initWithInfo:
initWithInfo:
buildNumber
operatingSystemName
operatingSystemVersion
model
colorCode
enclosureColorCode
coverGlassColorCode
housingColorCode
backingColorCode
trusted
inCircle
lastUpdatedDate
machineId
_trusted
_inCircle
_operatingSystemName
_operatingSystemVersion
_model
_colorCode
_enclosureColorCode
_coverGlassColorCode
_housingColorCode
_backingColorCode
_lastUpdatedDate
_machineId
presentAuthorizationUIForContext:completion:
_appleIDAuthorizationURLs
componentsWithURL:resolvingAgainstBaseURL:
port
_appleOwnedDomains
compare:options:range:
canPerformAuthorization
shouldProcessURL:
isURLFromAppleOwnedDomain:
performAuthorizationWithContext:completion:
B24@0:8@16
#16@0:8
@16@0:8
@24@0:8:16
@32@0:8:16@24
@40@0:8:16@24@32
B16@0:8
B24@0:8#16
B24@0:8:16
Vv16@0:8
Q16@0:8
^{_NSZone=}16@0:8
B24@0:8@"Protocol"16
@"NSString"16@0:8
v32@0:8@16@?24
v24@0:8@16
v32@0:8@"NSDictionary"16@?<v@?@"NSDictionary"@"NSError">24
v24@0:8@"NSString"16
v16@0:8
@"NSObject<OS_dispatch_queue>"
@"NSXPCConnection"
@24@0:8@16
v24@0:8@"NSCoder"16
@24@0:8@"NSCoder"16
@"NSString"
@32@0:8@16@24
@"NSDate"
@"NSMutableDictionary"
v36@0:8@16B24q28
@32@0:8@16^@24
B24@0:8^@16
B32@0:8@16^@24
v48@0:8@16@24@32@?40
v40@0:8@16@24@?32
v24@0:8@?16
v40@0:8Q16@24@?32
v40@0:8@16q24@?32
@24@0:8^@16
@28@0:8B16^@20
@?16@0:8
@"NSXPCListenerEndpoint"
@"_AKAppleIDAuthenticationContextManager"
@"NSLock"
v24@0:8@?<v@?@"NSString"@"NSString"@"NSDictionary"@"NSError">16
v24@0:8@?<v@?B@"NSError">16
v48@0:8@"NSError"16@"NSString"24@"NSString"32@?<v@?@"NSString"@"NSString"@"NSDictionary"@"NSError">40
v24@0:8@?<v@?@"NSNumber"@"NSError">16
v48@0:8@"NSError"16@"NSString"24@"NSString"32@?<v@?@"NSNumber"@"NSError">40
v32@0:8@"NSString"16@?<v@?Q@"NSError">24
v32@0:8@"AKServerRequestConfiguration"16@?<v@?@"NSHTTPURLResponse"@"NSDictionary"@"NSError">24
v32@0:8@"AKAccountRecoveryContext"16@?<v@?@"NSDictionary"@"NSError">24
v32@0:8@"NSString"16@?<v@?B@"NSError">24
v36@0:8@16B24@?28
v32@0:8@"AKAppleIDAuthenticationContext"16@?<v@?B@"NSError">24
v40@0:8@"AKAppleIDAuthenticationContext"16@"NSData"24@?<v@?B@"NSError">32
v36@0:8@"AKAppleIDAuthenticationContext"16B24@?<v@?@"AKAnisetteData"@"NSError">28
v40@0:8@"AKAppleIDAuthenticationContext"16@"NSString"24@?<v@?@"AKAnisetteData"@"NSError">32
v56@0:8@16@24@32@40@?48
v40@0:8@"AKAppleIDAuthenticationContext"16@"NSString"24@?<v@?B@"NSError">32
v32@0:8@"AKAppleIDAuthenticationContext"16@?<v@?@"NSString"@"NSString"@"NSDictionary"@"NSError">24
v56@0:8@"AKAppleIDAuthenticationContext"16@"NSError"24@"NSString"32@"NSString"40@?<v@?@"NSString"@"NSString"@"NSDictionary"@"NSError">48
v32@0:8@"AKAppleIDAuthenticationContext"16@?<v@?@"NSNumber"@"NSError">24
v56@0:8@"AKAppleIDAuthenticationContext"16@"NSError"24@"NSString"32@"NSString"40@?<v@?@"NSNumber"@"NSError">48
v40@0:8@"AKAppleIDAuthenticationContext"16@"AKServerRequestConfiguration"24@?<v@?@"NSHTTPURLResponse"@"NSDictionary"@"NSError">32
v40@0:8@"AKAppleIDAuthenticationContext"16@"AKAccountRecoveryContext"24@?<v@?@"NSDictionary"@"NSError">32
v32@0:8@"AKAppleIDAuthenticationContext"16@?<v@?Q@"NSError">24
v48@0:8@"NSDictionary"16@"NSError"24@"NSUUID"32@?<v@?B@"NSDictionary">40
@"AKAppleIDAuthenticationController"
@"<AKAppleIDAuthenticationDelegate>"
v24@0:8Q16
v20@0:8B16
@"NSURLRequest"
@"NSURLSessionDataTask"
@"NSMutableData"
@"NSError"
@20@0:8B16
v32@0:8@16@24
v32@0:8@"NSURLSession"16@"NSError"24
v40@0:8@"NSURLSession"16@"NSURLAuthenticationChallenge"24@?<v@?q@"NSURLCredential">32
v24@0:8@"NSURLSession"16
v56@0:8@16@24q32q40q48
v40@0:8@16@24@32
v48@0:8@"NSURLSession"16@"NSURLSessionTask"24@"NSURLRequest"32@?<v@?q@"NSURLRequest">40
v32@0:8@"NSURLSession"16@"NSURLSessionTask"24
v56@0:8@"NSURLSession"16@"NSURLSessionTask"24@"NSHTTPURLResponse"32@"NSURLRequest"40@?<v@?@"NSURLRequest">48
v48@0:8@"NSURLSession"16@"NSURLSessionTask"24@"NSURLAuthenticationChallenge"32@?<v@?q@"NSURLCredential">40
v40@0:8@"NSURLSession"16@"NSURLSessionTask"24@?<v@?@"NSInputStream">32
v56@0:8@"NSURLSession"16@"NSURLSessionTask"24q32q40q48
v40@0:8@"NSURLSession"16@"NSURLSessionTask"24@"NSURLSessionTaskMetrics"32
v40@0:8@"NSURLSession"16@"NSURLSessionTask"24@"NSError"32
v48@0:8@"NSURLSession"16@"NSURLSessionDataTask"24@"NSURLResponse"32@?<v@?q>40
v40@0:8@"NSURLSession"16@"NSURLSessionDataTask"24@"NSURLSessionDownloadTask"32
v40@0:8@"NSURLSession"16@"NSURLSessionDataTask"24@"NSURLSessionStreamTask"32
v40@0:8@"NSURLSession"16@"NSURLSessionDataTask"24@"NSData"32
v48@0:8@"NSURLSession"16@"NSURLSessionDataTask"24@"NSCachedURLResponse"32@?<v@?@"NSCachedURLResponse">40
@32@0:8@16@?24
@"NSURLSession"
q16@0:8
v24@0:8q16
@"NSArray"
q24@0:8@16
@24@0:8q16
@24@0:8^{_NSZone=}16
@"NSDictionary"
@24@0:8@?16
Q24@0:8@16
@"<AKCredentialRequestProtocol>"
@"AKAuthorizationScopesUserSelection"
@"NSNumber"
@40@0:8@16@24@32
B32@0:8@16@24
v32@0:8@"CDPContext"16@?<v@?@"CDPContext"@"NSError">24
v40@0:8@"CDPContext"16@"NSString"24@?<v@?@"NSDictionary"@"NSError">32
@"CDPRecoveryController"
@"AKAccountRecoveryContext"
@"<CDPStateUIProvider>"
v32@0:8@"AKAuthorizationUserResponse"16@?<v@?@"AKAuthorization"@"NSError">24
v32@0:8@"NSError"16@?<v@?B@"NSError">24
@"CoreTelephonyClient"
@"NSData"
@"NSUUID"
@"AKAuthorizationRequest"
@"AKPasswordRequest"
@"AKUserInformation"
{os_unfair_lock_s="_os_unfair_lock_opaque"I}
v32@0:8@"AKCredentialRequestContext"16@?<v@?@"AKAuthorization"@"NSError">24
v40@0:8@"AKCredentialRequestContext"16@"AKAuthorizationUserResponse"24@?<v@?@"AKAuthorization"@"NSError">32
v32@0:8@"AKAuthorizationCredentialStateRequest"16@?<v@?q@"NSError">24
v32@0:8@"AKCredentialRequestContext"16@?<v@?@"AKAuthorizationPresentationContext"@"NSError">24
v24@0:8@?<v@?@"NSSet"@"NSError">16
v24@0:8@?<v@?@"NSString"@"NSError">16
B32@0:8^{__SecTrust=}16@24
v28@0:8B16@20
v32@0:8Q16@24
@40@0:8@16@24^@32
@"ACAccountStore"
@"ACAccountType"
@20@0:8i16
v32@0:8@"NSData"16@?<v@?@"NSString"@"NSError">24
v40@0:8@"NSDictionary"16@"NSDictionary"24@?<v@?@"NSDictionary"@"NSData"@"NSError">32
@"AKDevice"
@"<AKAnisetteServiceProtocol>"
@"AKAnisetteData"
@"AKAttestationData"
@"AKPushMessage"
@28@0:8@16B24
@"<AKURLBagDictionaryProvider>"
@"NSURL"
@"AKAppleIDAuthenticationContext"
v28@0:8@?16B24
B40@0:8@16@?24@?32
B48@0:8@16@?24@?32@?40
@48@0:8@16@24@32@40
@"<AKAlertHandlerUIProvider>"
v48@0:8@"NSURLSession"16@"NSURLSessionTask"24@"NSURLResponse"32@?<v@?B@"NSDictionary">40
@"NSSet"16@0:8
v40@0:8@16@24^B32
@"AKAnisetteProvisioningController"
@32@0:8q16@24
@"<AKCredential>"
d16@0:8
v24@0:8d16
@"AKCircleRequestPayload"
v36@0:8B16@20@?28
v32@0:8@"AKDevice"16@?<v@?B@"NSError">24
v40@0:8@"NSData"16@"AKDevice"24@?<v@?B@"NSError">32
v36@0:8B16@"AKDevice"20@?<v@?@"AKAnisetteData"@"NSError">28
v40@0:8@"NSString"16@"AKDevice"24@?<v@?@"AKAnisetteData"@"NSError">32
v40@0:8@"AKDevice"16@"NSURLRequest"24@?<v@?@"AKAttestationData"@"NSError">32
i20@0:8f16
@"AKCredentialRequestContext"
v32@0:8@16:24
@"NSObject<OS_nw_path_monitor>"
@32@0:8@16Q24
@"AKAppleIDServerResourceLoadDelegate"
@"AKAuthorizationDaemonConnection"
@"ACAccount"
@"<AKAuthorizationClientProtocol>"
@"NSUUID"16@0:8
@"NSLocale"
v28@0:8B16@?20
@24@0:8@"NSString"16
@"NSDictionary"16@0:8
v24@0:8@"NSDictionary"16
@"AKDevice"16@0:8
v24@0:8@"AKDevice"16
^{__CFUserNotification=}
@"NSSet"
v44@0:8@16B24q28@?36
v32@0:8@"AKAppleIDAuthenticationContext"16@?<v@?@"NSDictionary"@"NSError">24
v40@0:8Q16@"NSString"24@?<v@?B@"NSError">32
v40@0:8@"NSHTTPURLResponse"16@"NSString"24@?<v@?B@"NSError">32
v40@0:8@"NSHTTPURLResponse"16@"AKAppleIDAuthenticationContext"24@?<v@?B@"NSError">32
v32@0:8@"NSString"16@?<v@?@"AKAppleIDServerResourceLoadDelegate"@"NSError">24
v32@0:8@"AKAppleIDAuthenticationContext"16@?<v@?@"AKAppleIDServerResourceLoadDelegate"@"NSError">24
v44@0:8@"NSString"16B24q28@?<v@?B@"NSError">36
v44@0:8@"NSNumber"16B24q28@?<v@?B@"NSError">36
v32@0:8@"NSString"16@?<v@?@"AKUserInformation"@"NSError">24
v32@0:8@"AKDeviceListRequestContext"16@?<v@?@"NSDictionary"@"NSError">24
v32@0:8@"NSString"16@?<v@?@"AKApplicationMetadataInfo"@"NSError">24
v48@0:8@"<NSSecureCoding>"16@"NSString"24@"NSString"32@?<v@?B@"NSError">40
v40@0:8@"NSArray"16@"NSString"24@?<v@?@"NSDictionary"@"NSError">32
v40@0:8@"NSString"16q24@?<v@?B@"NSError">32
v40@0:8@"NSString"16@"NSString"24@?<v@?B@"NSError">32
v32@0:8@"AKCircleRequestContext"16@?<v@?@"AKCircleRequestPayload"@"NSError">24
v40@0:8@"NSString"16@"AKAccountRecoveryContext"24@?<v@?@"NSDictionary"@"NSError">32
v40@0:8@"NSDictionary"16@"AKAppleIDAuthenticationContext"24@?<v@?B@"NSError">32
v32@0:8@"AKFollowUpTearDownContext"16@?<v@?B@"NSError">24
v32@0:8@"NSString"16@?<v@?@"NSArray"@"NSError">24
v24@0:8@?<v@?@"NSDictionary"@"NSError">16
v28@0:8B16@?<v@?@"NSDictionary"@"NSError">20
v32@0:8@"NSString"16@?<v@?@"NSDictionary"@"NSError">24
@"<AKAuthorizationUIProvider>"
