Snooze
Directions
Join Meeting
snoozeAction
T@"UNNotificationAction",R,N
directionsAction
conferenceCallAction
?travel=true
EventNotificationEmailSenderButton
Email Sender
hash
TQ,R
superclass
T#,R
description
T@"NSString",R,C
debugDescription
v8@?0
<%@: %p>(
addedRecords = %@
removedRecords = %@
modifiedRecords = %@
addedRecords
T@"NSArray",R,C,N,V_addedRecords
removedRecords
T@"NSArray",R,C,N,V_removedRecords
modifiedRecords
T@"NSArray",R,C,N,V_modifiedRecords
wrappedStorage
T@"<CALNNotificationStorage>",&,V_wrappedStorage
com.apple.mobilecal.bulletin-subsection.upcomingEvents
com.apple.mobilecal.bulletin-subsection.invitations
com.apple.mobilecal.bulletin-subsection.Responses
com.apple.mobilecal.bulletin-subsection.resourceChanges
com.apple.mobilecal.bulletin-subsection.suggestions
<%@: %p>(sourceClientIdentifier = %@, launchURL = %@, expirationDate = %@, eventInvitationNotification = %@, eventRepresentationDictionary = %@, isDelegate = %@, sourceTitle = %@, sourceIdentifier = %@)
sourceClientIdentifier
T@"NSString",R,C,N,V_sourceClientIdentifier
launchURL
T@"NSURL",R,C,N,V_launchURL
expirationDate
T@"NSDate",R,C,N,V_expirationDate
eventInvitationNotification
T@"EKCalendarEventInvitationNotification",R,N,V_eventInvitationNotification
eventRepresentationDictionary
T@"NSDictionary",R,C,N,V_eventRepresentationDictionary
isDelegate
TB,R,N,V_isDelegate
sourceTitle
T@"NSString",R,C,N,V_sourceTitle
sourceIdentifier
T@"NSString",R,C,N,V_sourceIdentifier
None
Allow in CarPlay
Allow actions in CarPlay
Prevent automatic removal from recents
(%@)
CALNSharedInvitationResponseCategoryIdentifier
com.apple.calendar.notifications.SharedCalendarInvitationResponse
notification.hiddenPreviewsBodyPlaceholder.calendar.invitationResponse
Invitation Response
Shared Calendar Invitation
T@"NSString",R,N
categories
T@"NSArray",R,N
dataSource
T@"<CALNSharedCalendarInvitationResponseNotificationDataSource>",R,N,V_dataSource
notificationManager
T@"<CALNNotificationManager>",R,W,N,V_notificationManager
iconIdentifierProvider
T@"<CALNCalendarIconIdentifierProvider>",R,N,V_iconIdentifierProvider
sourceEventRepresentationProvider
T@"<CALNSourceEventRepresentationProvider>",R,N,V_sourceEventRepresentationProvider
<%@: %p>(identifier = %@, actions = %@, options = %@, hiddenPreviewsBodyPlaceholder = %@, categorySummaryFormat = %@)
identifier
T@"NSString",R,C,N,V_identifier
actions
T@"NSArray",R,C,N,V_actions
options
TQ,R,N,V_options
hiddenPreviewsBodyPlaceholder
T@"NSString",R,C,N,V_hiddenPreviewsBodyPlaceholder
categorySummaryFormat
T@"NSString",R,C,N,V_categorySummaryFormat
<%@: %p>(sourceClientIdentifier = %@, launchURL = %@, expirationDate = %@, conflictDetails = %@, eventInvitationNotification = %@, eventURI = %@, eventRepresentationDictionary = %@, isDelegate = %@, sourceTitle = %@, sourceIdentifier = %@)
conflictDetails
T@"EKConflictDetails",R,N,V_conflictDetails
eventURI
T@"NSString",R,C,N,V_eventURI
com.apple.calendar.notifications.CALNTriggeredEventNotificationResponseDataHypothesisDataPayloadKey
com.apple.calendar.notifications.CALNTriggeredEventNotificationResponseDataLastFireTimeOfAlertOffsetFromTravelTimePayloadKey
v32@?0@"CALNNotificationAction"8Q16^B24
v32@?0@"UNNotificationAction"8Q16^B24
EventInvitation.CanRespond
EventInvitation.CouldBeJunk
CALNNotificationMaybeAction
CALNNotificationDeclineAction
com.apple.calendar.notifications.EventInvitation
notification.hiddenPreviewsBodyPlaceholder.event.invitation
Invitation
EventInvitationNotificationAcceptButton
Accept
EventInvitationNotificationDeclineButton
Decline
EventInvitationNotificationMaybeButton
Maybe
EventInvitationNotificationReportJunkButton
Report Junk
EventInvitationNotificationDefaultTitle
Time changed to %@
Date changed to %@
Location changed to %@
Location removed
Invitation From %@
Unknown Sender
T@"<CALNEventInvitationNotificationDataSource>",R,N,V_dataSource
<%@: %p>(identifier = %@, title = %@, url = %@)
title
T@"NSString",R,C,N,V_title
T@"NSURL",R,C,N,V_url
sharedInstance
T@"CALNEKStats",R,N
_CalDatabaseChangedNotification
minimumAllowableTravelTime
Td,R,N
T@"CALNDefaultTravelAdvisoryAuthority",R,N
notifications.PostedNotification
notifications.NotificationResponse
notificationType
actionIdentifier
T@"CALNCalAnalyticsHandler",R,N
x-apple-eventkit-alert-%@
v24@?0@"EKEvent"8@"EKAlarm"16
travelAdvisory.userAction.directions
travelAdvisory.userAction.emailSender
-[CALNTriggeredEventNotificationEKDataSource _alertsFired:]
delegate
T@"<CALNTriggeredEventNotificationDataSourceDelegate>",W,N
eventStoreProvider
T@"<EKEventStoreProvider>",R,N,V_eventStoreProvider
remoteMutator
T@"<CALNRemoteMutator>",R,N,V_remoteMutator
dataSourceEventRepresentationProvider
T@"<CALNDataSourceEventRepresentationProvider>",R,N,V_dataSourceEventRepresentationProvider
coreLocationManager
T@"CALNCalendarCoreLocationManager",R,N,V_coreLocationManager
stats
T@"<CALNStats>",R,N,V_stats
ttlEventTracker
T@"<CALNTTLEventTracker>",R,N,V_ttlEventTracker
alarmEngineMonitor
T@"<CALNAlarmEngineMonitor>",R,N,V_alarmEngineMonitor
travelEngine
T@"<CALNTravelEngine>",R,N,V_travelEngine
foundInAppsEventTracker
T@"<CALNFoundInAppsEventTracker>",R,N,V_foundInAppsEventTracker
suggestionsServiceLogger
T@"<CALNSuggestionsServiceLogger>",R,N,V_suggestionsServiceLogger
routeHypothesizerProvider
T@"<CALNRouteHypothesizerProvider>",R,N,V_routeHypothesizerProvider
timeToLeaveRefreshMonitor
T@"<CALNTimeToLeaveRefreshMonitor>",R,N,V_timeToLeaveRefreshMonitor
debugPreferences
T@"<CALNDebugPreferences>",R,N,V_debugPreferences
mailtoURLProvider
T@"CALNTriggeredEventNotificationMailtoURLProvider",R,N,V_mailtoURLProvider
T@"<CALNTriggeredEventNotificationDataSourceDelegate>",W,N,V_delegate
currentCADRouteHypothesis
T@"CADRouteHypothesis",&,N
updateHandler
T@?,R,N
state
TQ,R,N
currentHypothesis
T@"EKTravelEngineHypothesis",R,N
T@?,C,N,V_updateHandler
T@"CADRouteHypothesis",&,N,VcurrentCADRouteHypothesis
<%@: %p>(title = %@, location = %@, startDate = %@, endDate = %@, isAllDay = %@, launchURL = %@, isLocationEvent = %@, eventID = %@, eventRepresentationDictionary = %@, legacyIdentifier = %@, mapItemURL = %@, conferenceURL = %@, mailtoURL = %@, hasSuggestedLocation = %@, eventHasAlarms = %@, alarmID = %@, isOffsetFromTravelTimeStart = %@, lastFireTimeOfAlertOffsetFromTravelTime = %@, allowsLocationAlerts = %@, hypothesis = %@, travelAdvisoryTimelinessPeriod = %@, forceDisplayOfNewTravelAdvisoryHypotheses = %@, locationWithoutPrediction = %@, preferredLocation = %@)
location
T@"NSString",R,C,N,V_location
locationWithoutPrediction
T@"NSString",R,C,N,V_locationWithoutPrediction
preferredLocation
T@"EKStructuredLocation",R,N,V_preferredLocation
startDate
T@"NSDate",R,C,N,V_startDate
endDate
T@"NSDate",R,C,N,V_endDate
isAllDay
TB,R,N,V_isAllDay
isLocationEvent
TB,R,N,V_isLocationEvent
eventID
T@"NSString",R,C,N,V_eventID
eventObjectID
T@"NSString",R,C,N,V_eventObjectID
legacyIdentifier
T@"NSString",R,C,N,V_legacyIdentifier
mapItemURL
T@"NSURL",R,C,N,V_mapItemURL
conferenceURL
T@"NSURL",R,C,N,V_conferenceURL
mailtoURL
T@"NSURL",R,C,N,V_mailtoURL
hasSuggestedLocation
TB,R,N,V_hasSuggestedLocation
eventHasAlarms
TB,R,N,V_eventHasAlarms
alarmID
T@"NSString",R,C,N,V_alarmID
isOffsetFromTravelTimeStart
TB,R,N,V_isOffsetFromTravelTimeStart
lastFireTimeOfAlertOffsetFromTravelTime
T@"NSDate",R,C,N,V_lastFireTimeOfAlertOffsetFromTravelTime
allowsLocationAlerts
TB,R,N,V_allowsLocationAlerts
hypothesis
T@"EKTravelEngineHypothesis",R,C,N,V_hypothesis
travelAdvisoryTimelinessPeriod
TQ,R,N,V_travelAdvisoryTimelinessPeriod
forceDisplayOfNewTravelAdvisoryHypotheses
TB,R,N,V_forceDisplayOfNewTravelAdvisoryHypotheses
CALNSharedCalendarInvitationDefaultCategory
CALNSharedCalendarInvitationCouldBeJunkCategory
CALNSharedCalendarInvitationJoinActionIdentifier
CALNSharedCalendarInvitationDeclineActionIdentifier
calinvitelist:
com.apple.calendar.notifications.SharedCalendarInvitation
notification.hiddenPreviewsBodyPlaceholder.calendar.invitation
SharedCalendarInvitationJoinButton
Join
SharedCalendarInvitationDeclineButton
SharedCalendarInvitationReportJunkButton
Invitation to share a calendar with %@.
T@"<CALNSharedCalendarInvitationNotificationDataSource>",R,N,V_dataSource
v16@?0@"NSError"8
T@"<UNUserNotificationCenterDelegate>",W,N
userNotificationCenter
T@"UNUserNotificationCenter",R,N,V_userNotificationCenter
stringRepresentation
sources
T@"NSArray<CALNNotificationSource>",R,C,N,V_sources
inboxNotificationMonitor
T@"CALNInboxNotificationMonitor",R,N,V_inboxNotificationMonitor
T@"<CALNNotificationManager>",R,N,V_notificationManager
<%@: %p>(notificationRecord = %@, actionIdentifier = %@, originIdentifier = %@, targetConnectionEndpoint = %@)
notificationRecord
T@"CALNNotificationRecord",R,N,V_notificationRecord
T@"NSString",R,C,N,V_actionIdentifier
originIdentifier
T@"NSString",R,C,N,V_originIdentifier
targetConnectionEndpoint
T@"BSServiceConnectionEndpoint",R,N,V_targetConnectionEndpoint
work
v32@?0@"<CALNNotificationSource>"8Q16^B24
B32@?0@"CALNNotificationRecord"8Q16^B24
isProtectedDataAvailable
TB,R,N
workQueue
T@"NSObject<OS_dispatch_queue>",R,N,V_workQueue
notificationSourceMap
T@"NSMutableDictionary",&,N,V_notificationSourceMap
storage
T@"<CALNNotificationStorage>",&,N,V_storage
analyticsHandler
T@"<CALNAnalyticsHandler>",R,N,V_analyticsHandler
active
TB,N,GisActive,V_active
TB,N,V_isProtectedDataAvailable
T@"<CALNUserNotificationCenter>",R,N,V_userNotificationCenter
notificationSources
notificationMapper
T@"CALNUNNotificationMapper",R,N,V_notificationMapper
<%@: %p>(sourceClientIdentifier = %@, suggestionNotification = %@, expirationDate = %@, launchURL = %@)
suggestionNotification
T@"EKCalendarSuggestionNotification",R,N,V_suggestionNotification
T@"CALNEKTTLEventTracker",R,N
v32@?0@"UNNotification"8Q16^B24
notificationRequestMapper
T@"CALNUNNotificationRequestMapper",R,N,V_notificationRequestMapper
<%@: %p>(identifier = %@, content = %@)
content
supportsSecureCoding
TB,R
T@"CALNNotificationContent",R,C,N,V_content
date
shouldPresentAlert
shouldPlaySound
<%@: %p>(sourceIdentifier = %@, sourceClientIdentifier = %@, content = %@, shouldPresentAlert = %@, shouldPlaySound = %@, hasAlertContent = %@)
T@"NSDate",R,C,N,V_date
TB,R,N,V_shouldPresentAlert
hasAlertContent
TB,R,N,V_shouldPlaySound
hasSound
T@"NSString",C,D,N
T@"CALNNotificationContent",C,D,N
T@"NSDate",C,D,N
TB,D,N
routeHypothesizer
T@"GEORouteHypothesizer",R,N,V_routeHypothesizer
CALNUNUserNotificationCenterErrorDomain
Could not add notification request.
User notification center is inactive.
Activate the user notification center before adding a notification request.
B16@?0@"CALNNotificationRecord"8
v16@?0Q8
CalendarNotificationsAuthorization
authorizationStatus
soundSetting
badgeSetting
alertSetting
notificationCenterSetting
lockScreenSetting
carPlaySetting
alertStyle
showPreviewsSetting
v32@?0@"NSString"8@"UNNotificationSettings"16^B24
%@_%@
T@"<CALNUserNotificationCenterDelegate>",W,N
T@"<CALNUNUserNotificationCenterProtocol>",R,N,V_userNotificationCenter
T@"<CALNNotificationStorage>",R,N,V_storage
notificationContentMapper
T@"CALNUNNotificationContentMapper",R,N,V_notificationContentMapper
notificationResponseMapper
T@"CALNUNNotificationResponseMapper",R,N,V_notificationResponseMapper
T@"<CALNUserNotificationCenterDelegate>",W,N,V_delegate
<%@: %p>(title = %@, subtitle = %@, body = %@, categoryIdentifier = %@, sectionIdentifier = %@, date = %@, expirationDate = %@, defaultActionURL = %@, iconIdentifier = %@, shouldHideTime = %@, shouldSuppressSyncDismissalWhenRemoved = %@, peopleIdentifiers = %@, sound = %@, threadIdentifier = %@, summaryArgument = %@, summaryArgumentCount = %lu, userInfo = %@)
body
subtitle
categoryIdentifier
sectionIdentifier
defaultActionURL
iconIdentifier
shouldHideTime
shouldSuppressSyncDismissalWhenRemoved
peopleIdentifiers
sound
userInfo
threadIdentifier
summaryArgument
summaryArgumentCount
T@"NSString",R,C,N,V_subtitle
T@"NSString",R,C,N,V_body
T@"NSString",R,C,N,V_categoryIdentifier
T@"NSString",R,C,N,V_sectionIdentifier
T@"NSURL",R,C,N,V_defaultActionURL
TB,R,N,V_shouldHideTime
T@"NSString",R,C,N,V_iconIdentifier
TB,R,N,V_shouldSuppressSyncDismissalWhenRemoved
T@"NSArray",R,C,N,V_peopleIdentifiers
T@"CALNNotificationSound",R,C,N,V_sound
T@"NSDictionary",R,C,N,V_userInfo
T@"NSString",R,C,N,V_threadIdentifier
T@"NSString",R,C,N,V_summaryArgument
TQ,R,N,V_summaryArgumentCount
T@"NSURL",C,D,N
T@"NSArray",C,D,N
T@"CALNNotificationSound",C,D,N
T@"NSDictionary",C,D,N
TQ,D,N
v32@?0@"CALNNotification"8Q16^B24
Alert
Badge
Sound
inboxNotificationProvider
T@"<CALNInboxNotificationProvider>",R,N,V_inboxNotificationProvider
notificationReferenceProvider
T@"<CALNEKCalendarNotificationReferenceProvider>",R,N,V_notificationReferenceProvider
path
T@"NSString",R,C,N,V_path
inMemoryStorage
T@"CALNInMemoryNotificationStorage",R,N,V_inMemoryStorage
Email sender unknown title
Event
/?&:$+,;=@
mailto:%@?subject=%@
mailAccounts
T@"<CALNMailAccounts>",R,N,V_mailAccounts
<%@: %p>(sourceIdentifier = %@, sourceClientIdentifier = %@)
<%@: %p>(sourceIdentifier = %@, sourceClientIdentifier = %@, stringRepresentation = %@)
T@"NSString",R,C,N,V_stringRepresentation
remoteMutatorInternal
T@"NEKRemoteMutator",R,N,V_remoteMutatorInternal
<%@: %p(date: %@, request: %@)
request
T@"CALNNotificationRequest",R,C,N,V_request
CALNNotificationDeleteActionIdentifier
com.apple.calendar.notifications.EventCanceled
EventCanceledDeleteButton
Delete
Canceled by %@
T@"<CALNEventCanceledNotificationDataSource>",R,N,V_dataSource
com.apple.calendarnotification.uitrigger
com.apple.NanoCalendar.uitrigger.upcomingEvents
Create an alerting event.
com.apple.NanoCalendar.uitrigger.upcomingEvents-dry
Create an upcoming event. Identical to upcomingEvents (preserved for compatiblity).
com.apple.NanoCalendar.uitrigger.invitation
Create an invitation.
com.apple.NanoCalendar.uitrigger.invitationModified
Create an invitation modification.
com.apple.NanoCalendar.uitrigger.invitationCancelled
Create an invitation cancellation.
com.apple.NanoCalendar.uitrigger.attendeeReplied
Create an attendee reply.
com.apple.NanoCalendar.uitrigger.sharedCalendar.invitation
Create an invitation for a shared calendar.
com.apple.NanoCalendar.uitrigger.sharedCalendar.inviteReply
Create a reply for a shared calendar invitation.
com.apple.NanoCalendar.uitrigger.sharedCalendar.eventAdded
Create an event for a shared calendar.
com.apple.NanoCalendar.uitrigger.sharedCalendar.eventUpdated
Create an event update on a shared calendar.
com.apple.NanoCalendar.uitrigger.sharedCalendar.eventDeleted
Create an event deletion on a shared calendar.
com.apple.NanoCalendar.uitrigger.nextEvent
Create an alert for the next upcoming event in the database. Currently only used by F5.
com.apple.calendar.notifications.uiTriggers
Failed to get notification content
Design Sync-up for upcoming products
Dino Room
x-apple-calevent://null-event-id-%@
Notifications Design Update
organizer
Natalia Maric
nmaric@apple.com
name
email
{M} Golden Gate (20) {RESTRICTED} VG6 2nd
absoluteStartDate
relativeStartDateFromNow
absoluteEndDate
relativeEndDateFromStartDate
Gustavo Chaurais
gchaurais@apple.com
I can't make it tomorrow. Could you re-schedule?
Trip to Hawaii
David Schimon
dschimon@apple.com
Beach Time
Waimea Beach
%@://%@
calshow:%d
uiTriggerClient
T@"CSLSUITriggerRemoteClient",R,N,V_uiTriggerClient
triggeredEventNotificationSource
T@"CALNTriggeredEventNotificationSource",R,N,V_triggeredEventNotificationSource
eventInvitationNotificationSource
T@"CALNEventInvitationNotificationSource",R,N,V_eventInvitationNotificationSource
eventInvitationResponseNotificationSource
T@"CALNEventInvitationResponseNotificationSource",R,N,V_eventInvitationResponseNotificationSource
eventCanceledNotificationSource
T@"CALNEventCanceledNotificationSource",R,N,V_eventCanceledNotificationSource
sharedCalendarInvitationNotificationSource
T@"CALNSharedCalendarInvitationNotificationSource",R,N,V_sharedCalendarInvitationNotificationSource
sharedCalendarInvitationResponseNotificationSource
T@"CALNSharedCalendarInvitationResponseNotificationSource",R,N,V_sharedCalendarInvitationResponseNotificationSource
calendarResourceChangedNotificationSource
T@"CALNCalendarResourceChangedNotificationSource",R,N,V_calendarResourceChangedNotificationSource
/System/Library/PrivateFrameworks/CarouselServices.framework/CarouselServices
CSLSUITriggerRemoteClientFactory
Unable to find class %s
recordMap
T@"NSMutableDictionary",R,N,V_recordMap
T@"CALNSyntheticRouteHypothesizerProvider",R,N
syntheticRouteHypothesizerCache
T@"CADSyntheticRouteHypothesizerCache",R,N,V_syntheticRouteHypothesizerCache
com.apple.CALNNotificationDefaultActionIdentifier
com.apple.CALNNotificationDismissActionIdentifier
<%@: %p>(notification = %@, actionIdentifier = %@, originIdentifier = %@, targetConnectionEndpoint = %@)
notification
T@"CALNNotification",R,N,V_notification
CALNNotificationIconCacheQueue
NotificationIconCache
notificationIconProvider
T@"<CALNNotificationIconProvider>",R,N,V_notificationIconProvider
queue
T@"NSObject<OS_dispatch_queue>",R,N,V_queue
<%@: %p>(trigger = %@, alarmID = %@, isOffsetFromTravelTimeStart = %@, hypothesis = %@)
trigger
TQ,R,N,V_trigger
T@"EKTravelEngineHypothesis",R,N,V_hypothesis
CalendarNotificationRefreshTimer-
%@-[%@]
T@"<CALNTimeToLeaveRefreshMonitorDelegate>",W,N
T@"<CALNTimeToLeaveRefreshStorage>",R,N,V_storage
registeredForBackgroundTaskAgentJobs
TB,N,GisRegisteredForBackgroundTaskAgentJobs,V_registeredForBackgroundTaskAgentJobs
T@"<CALNTimeToLeaveRefreshMonitorDelegate>",W,N,V_delegate
notificationCenter
T@"NSNotificationCenter",R,N,V_notificationCenter
alarmEngine
T@"_EKAlarmEngine",R,N,V_alarmEngine
com.apple.calendar.notification.inMemoryTriggeredEventNotificationDataStorage.work
notificationDataMap
T@"NSMutableDictionary",R,N,V_notificationDataMap
T@"CALNNullRemoteMutator",R,N
T@"CALNCUIKIconProvider",R,N
<%@: %p>(sourceClientIdentifier = %@, calendarNotification = %@, changeType = %@, date = %@, allDay = %@, timeZone = %@, expirationDate = %@, launchURL = %@, isDelegate = %@, sourceTitle = %@, sourceIdentifier = %@)
calendarNotification
T@"EKCalendarResourceChangeNotification",R,N,V_calendarNotification
changeType
TI,R,N,V_changeType
allDay
TB,R,N,V_allDay
timeZone
T@"NSTimeZone",R,C,N,V_timeZone
@"EKEventStore"8@?0
eventNotificationReferences
eventNotificationCount
notificationMonitor
T@"_EKNotificationMonitor",R,N,V_notificationMonitor
coreLocationProvider
T@"<CALNCoreLocationProvider>",R,N,V_coreLocationProvider
T@"CALNGEORouteHypothesizerProvider",R,N
Library/Calendars
Default
Calendar
Reminders
AlarmEngine
defaultCategory
T@"NSObject<OS_os_log>",R,N
calendar
reminders
com.apple.calendar.notification
modules
travelAdvisoryTimelinessAuthority
T@"EKTravelAdvisoryTimelinessAuthority",R,N,V_travelAdvisoryTimelinessAuthority
SuggestedEvent.Default
SuggestedEvent.Coalesced
SuggestedEvent.Canceled
CALNNotificationConfirmAction
CALNNotificationIgnoreAction
CALNNotificationDeleteAction
com.apple.calendar.notifications.SuggestedEvent
Add to calendar button for a suggested event
Add to Calendar
Ignore button for a suggested event
Ignore
Delete button for a canceled suggested event
%@.%@
T@"<CALNSuggestedEventNotificationDataSource>",R,N,V_dataSource
T@"CALNDefaultTriggeredEventNotificationMapItemURLProvider",R,N
T@"CALNEKSuggestionsServiceLogger",R,N
travelAdvisoryAuthority
T@"<CALNTravelAdvisoryAuthority>",R,N,V_travelAdvisoryAuthority
dateProvider
T@"<CalDateProvider>",R,N,V_dateProvider
com.apple.navd.wakeUpForHypothesisUpdate
callback
v32@?0@8Q16^B24
v16@?0@"EKTravelEngineAgendaEntry"8
com.apple.calendar.LocationAuthDenied
periodicRefreshTimer
B32@?0@8@"EKTravelEngineAgendaEntry"16^B24
v24@?0@"NSString"8^B16
v32@?0@"EKEvent"8Q16^B24
v32@?0@"NSString"8@"EKTravelEngineAgendaEntry"16^B24
authorizedInternal
TB,N,V_authorizedInternal
adviceBlock
T@?,C,N,V_adviceBlock
authorized
authorizationChangedBlock
T@?,C,N,V_authorizationChangedBlock
eventSignificantlyChangedBlock
T@?,C,N,V_eventSignificantlyChangedBlock
/tmp/CalNotificationsAvailable
B32@?0@"CALNSuggestedEventNotificationInfo"8Q16^B24
v24@?0@"CALNNotificationCategory"8^B16
v24@?0@"UNNotificationCategory"8^B16
-[CALNLaunchServicesURLHandler openURL:response:]
v24@?0@"NSDictionary"8@"NSError"16
notificationIconMapper
T@"CALNUNNotificationIconMapper",R,N,V_notificationIconMapper
upcomingEventsThread
com.apple.calendar.notification.CALNTriggeredEventNotificationResponseDataPayloadUserInfoKey
AlarmID
MapItemURL
ConferenceURL
IsLocation
com.apple.calendar.notifications.TimeTriggeredEvent
notification.hiddenPreviewsBodyPlaceholder.upcomingEvent
Upcoming Event
%u more upcoming events
Summaries
v32@?0@"NSString"8@"NSArray"16^B24
v32@?0@"NSString"8@"CALNTriggeredEventNotificationData"16^B24
v32@?0@"NSString"8@"NSDate"16^B24
T@"<CALNTriggeredEventNotificationDataSource>",R,N,V_dataSource
triggerHelper
T@"<CALNTriggeredEventNotificationTriggerHelper>",R,N,V_triggerHelper
transitionProvider
T@"<CALNTriggeredEventNotificationTransitionProvider>",R,N,V_transitionProvider
bodyDescriptionProvider
T@"<CALNTriggeredEventNotificationBodyDescriptionProvider>",R,N,V_bodyDescriptionProvider
T@"<CALNTravelAdvisoryTimelinessAuthority>",R,N,V_travelAdvisoryTimelinessAuthority
notificationDataStorage
T@"<CALNTriggeredEventNotificationDataStorage>",R,N,V_notificationDataStorage
timeToLeaveRefreshStorage
T@"<CALNTimeToLeaveRefreshStorage>",R,N,V_timeToLeaveRefreshStorage
eventURLToObjectIDMap
T@"NSMutableDictionary",R,N,V_eventURLToObjectIDMap
urlHandler
T@"<CALNURLHandler>",R,N,V_urlHandler
mapItemURLProvider
T@"<CALNTriggeredEventNotificationMapItemURLProvider>",R,N,V_mapItemURLProvider
mapItemURLUserInfoKey
conferenceURLUserInfoKey
T@"CALNEKFoundInAppsEventTracker",R,N
EKAlarmEngineAlarmsDidFireNotification
EKAlarmEngineAlarmOccurrencesKey
com.apple.mobilecal.preference.notification.calendarsExcludedFromNotifications
com.apple.locationd.vehicle.connected
com.apple.locationd.vehicle.disconnected
LastDBSequence
com.apple.calendar.notification.alarmengine
phone rebooted
calaccessd relaunched
com.apple.alarm
-[_EKAlarmEngine _updateWithForceForAlarmTable:forFences:]
-[_EKAlarmEngine _storeAlarms:nextScheduleLimit:eventStore:]
CacheEndDate
com.apple.mobilecal
CalendarsExcludedFromNotifications
v16@?0@"NSArray"8
-[_EKAlarmEngine _rescheduleTimer]
Date
yyyy-MM-dd HH:mm:ss.SSS
-[_EKAlarmEngine _timerFired]
calshow:%d?eventid=%d
-[_EKAlarmEngine _removeStaleRefiringAlarmsWithEventStore:]
-[_EKAlarmEngine _shouldRefireAlarms]
-[_EKAlarmEngine _shouldUseCoreRoutine]
-[_EKAlarmEngine _locationDaemonDidLaunch]
-[_EKAlarmEngine _removeAllFences]
-[_EKAlarmEngine _removeAllFencesSynch]
-[_EKAlarmEngine _stringForAuthorizationStatus:]
Not Determined
Restricted
Denied
Authorized Always
Authorized In Use
Unknown status
-[_EKAlarmEngine _shouldAdjustFencesWithStatus:]
-[_EKAlarmEngine _adjustFences:]
UUID
v24@?0@"RTLocationOfInterest"8@"NSError"16
-[_EKAlarmEngine _updateRegionMonitoringForRegion:withLocationOfInterest:forLocation:]
-[_EKAlarmEngine _allowConservativeEntry]
-[_EKAlarmEngine _proximityAlertTriggered:entered:]
ENTER
EXIT
-[_EKAlarmEngine locationManager:didEnterRegion:]
-[_EKAlarmEngine locationManager:didExitRegion:]
-[_EKAlarmEngine locationManager:didFailWithError:]
-[_EKAlarmEngine locationManager:monitoringDidFailForRegion:withError:]
-[_EKAlarmEngine locationManager:didChangeAuthorizationStatus:]
-[_EKAlarmEngine _setupLocationManager]
-[_EKAlarmEngine _isRegionMonitoringSupported]
-[_EKAlarmEngine _resetLocationManager]
-[_EKAlarmEngine _updateRegionMonitoring:]
-[_EKAlarmEngine _allowVehicleTrigger]
-[_EKAlarmEngine _motionUpdatedWithConnectionState:]
-[_EKAlarmEngine _debugStringForVehicleConnectionState:]
CONNECTED
DISCONNECTED
UNKNOWN
-[_EKAlarmEngine _vehicleTriggerFired:]
-[_EKAlarmEngine _vehicleTriggerFired:]_block_invoke_2
-[_EKAlarmEngine _insertSideAlarmObjectForVehicleTriggerAlarm:forReminder:withDelay:eventStore:context:]
+[_EKAlarmEngine _publisherBulletinIDForTask:]
+[_EKAlarmEngine _publisherBulletinIDForReminder:]
+[_EKAlarmEngine _publisherBulletinIDForTaskUniqueIdentifier:]
x-apple-reminder://%@
com.apple.calaccessd.alarmEngine.alarm.name
com.apple.calaccessd.alarmEngine.alarm.context
com.apple.calaccessd.alarmEngine.alarm.context.date
T@"CALNCUIKTravelAdvisoryDescriptionGenerator",R,N
com.apple.calendar.notification.inMemoryTimeToLeaveRefreshStorage.work
refreshDateMap
T@"NSMutableDictionary",R,N,V_refreshDateMap
applicationState
T@"UISApplicationState",R,N,V_applicationState
CALNBulletinReportProblemAction
Mail_identifier
CALNNotificationReportJunkEventAction
CALNNotificationReportJunkCalendarAction
CALNNotificationConferenceCallAction
CALNTriggeredEventNotificationSnoozeActionIdentifier
CALNNotificationDirectionsAction
hasDisplayedLeaveByMessage
hasDisplayedLeaveNowMessage
hasDisplayedRunningLateMessage
lastTimeNotificationAdded
<%@: %p>(alarmID = %@, isOffsetFromTravelTimeStart = %@, lastFireTimeOfAlertOffsetFromTravelTime = %@, hypothesis = %@, hasDisplayedLeaveByMessage = %@, hasDisplayedLeaveNowMessage = %@, hasDisplayedRunningLateMessage = %@, lastTimeNotificationAdded = %@)
TB,R,N,V_hasDisplayedLeaveByMessage
TB,R,N,V_hasDisplayedLeaveNowMessage
TB,R,N,V_hasDisplayedRunningLateMessage
T@"NSDate",R,C,N,V_lastTimeNotificationAdded
T@"EKTravelEngineHypothesis",C,D,N
T@"CALNNullAlarmEngineMonitor",R,N
calinvite:%@
<%@: %p>(alertType = %@, alertTopic = %@)
alertTopic
alertType
Tq,R,N,V_alertType
T@"NSString",R,C,N,V_alertTopic
-[CALNNotificationServerModule receivedNotificationNamed:]
v16@?0@"NSMutableDictionary"8
com.apple.calendar.notifications.stateCaptureQ
Notification Settings
@8@?0
-[CALNNotificationServerModule receivedAlarmNamed:]
-[CALNNotificationServerModule handleBTAJob:named:]
-[CALNNotificationServerModule protectedDataDidBecomeAvailable]
Notifications.Calendar.Unprotected
Notifications.Calendar.Protected
Notifications.Calendar.TriggeredEvent.NotificationData
Notifications.Calendar.TriggeredEvent.TimeToLeaveRefresh
calendarNotificationServer
T@"CALNNotificationServer",R,N,V_calendarNotificationServer
notificationSourceRefresher
T@"CALNNotificationSourceRefresher",R,N,V_notificationSourceRefresher
calendarAppBadgeUpdater
T@"CALNCalendarAppBadgeUpdater",R,N,V_calendarAppBadgeUpdater
calendarStorageWrapper
T@"CALNNotificationStorageWrapper",R,N,V_calendarStorageWrapper
remindersStorageWrapper
T@"CALNNotificationStorageWrapper",R,N,V_remindersStorageWrapper
T@"NSArray",R,N,V_modules
com.apple.calendar.notifications.postFakeNotification
com.apple.calendar.notifications.FakeNotification.%@
com.apple.calendar.notifications.fakeNotificationSourceQ
Discrete
Private
Fake notification
T@"NSString",R,N,V_sourceIdentifier
fireTime
T@"NSDate",&,D,N
entityURI
T@"NSString",&,D,N
entityID
T@"NSNumber",&,D,N
entityDate
entityTimeZone
isDelayedProximityAlarm
externalID
acknowledgedDate
refiring
nextEmissionDate
throttleQueue
emissionTimer
%@-%@
running
TB,N,V_running
throttleIdentifier
T@"NSString",&,N,V_throttleIdentifier
T@"NSObject<OS_dispatch_queue>",&,N,V_throttleQueue
T@"NSDate",&,N,V_nextEmissionDate
T@"PCPersistentTimer",&,N,V_emissionTimer
eventExternalURL
T@"NSString",&,V_eventExternalURL
requestHypothesisRefreshBlock
T@?,C,N,V_requestHypothesisRefreshBlock
cancelHypothesisRequestRefreshBlock
T@?,C,N,V_cancelHypothesisRequestRefreshBlock
emissionBlock
T@?,C,N,V_emissionBlock
locationString
B24@?0@"NSData"8@"NSData"16
B24@?0@"NSDate"8@"NSDate"16
B24@?0@"CLLocation"8@"CLLocation"16
B24@?0@"NSString"8@"NSString"16
T@"NSString",&,N,V_eventExternalURL
T@"NSDate",&,N,V_startDate
T@"NSDate",&,N,V_endDate
transportTypeOverride
Ti,N,V_transportTypeOverride
T@"NSString",&,N,V_locationString
geoLocation
T@"CLLocation",&,N,V_geoLocation
locationMapKitHandle
T@"NSData",&,N,V_locationMapKitHandle
locationIsAConferenceRoom
TB,N,V_locationIsAConferenceRoom
automaticGeocodingAllowed
TB,N,V_automaticGeocodingAllowed
<%@: %p>(lastFireTimeOfAlertOffsetFromTravelTime = %@, hypothesis = %@)
Suggested Location: %@
travelAdvisoryDescriptionGenerator
T@"<CALNTravelAdvisoryDescriptionGenerator>",R,N,V_travelAdvisoryDescriptionGenerator
%@ <%p> {title = %@; date = %@; timeZone = %@}
recordID
publisherBulletinID
T@"NSString",R,N,V_publisherBulletinID
T@"NSString",R,N,V_title
T@"NSString",R,N,V_location
eventDate
T@"NSDate",R,N,V_eventDate
T@"NSDate",R,N,V_endDate
eventTimeZone
T@"NSTimeZone",R,N,V_eventTimeZone
appLink
T@"NSUserActivity",R,N,V_appLink
action
T@"NSURL",R,N,V_action
T@"NSURL",R,N,V_entityID
tentative
TB,R,N,V_tentative
proximity
Tq,R,N,V_proximity
T@"NSString",R,N,V_externalID
acknowledged
TB,R,N,V_acknowledged
dismissalID
T@"NSString",R,N,V_dismissalID
T@"NSString",R,N,V_alarmID
TB,R,N,V_refiring
isPseudoEvent
TB,R,N,V_isPseudoEvent
mapKitHandle
T@"NSData",&,N,V_mapKitHandle
hasGeoLocationCoordinates
TB,N,V_hasGeoLocationCoordinates
geoLocationCoordinates
T{CLLocationCoordinate2D=dd},N,V_geoLocationCoordinates
hasOrganizerThatIsNotCurrentUser
TB,N,V_hasOrganizerThatIsNotCurrentUser
organizerEmailAddress
T@"NSString",&,N,V_organizerEmailAddress
startLocationRouting
T@"NSString",&,N,V_startLocationRouting
locationAddress
T@"NSString",&,N,V_locationAddress
latestHypothesis
T@"EKTravelEngineHypothesis",&,N,V_latestHypothesis
T@"NSDate",&,N,V_lastFireTimeOfAlertOffsetFromTravelTime
lastTimeBulletinAdded
T@"NSDate",&,N,V_lastTimeBulletinAdded
isSuggestedLocation
TB,N,V_isSuggestedLocation
T@"NSURL",&,N,V_conferenceURL
isOnSharedCalendar
TB,N,V_isOnSharedCalendar
TB,N,V_hasDisplayedLeaveByMessage
TB,N,V_hasDisplayedLeaveNowMessage
TB,N,V_hasDisplayedRunningLateMessage
currentRouteHypothesizerNotificationType
TQ,N,V_currentRouteHypothesizerNotificationType
fireDate
T@"NSDate",&,N,V_fireDate
isPurelyATimeToLeaveAlert
T@"CALNEKDebugPreferences",R,N
T@"CALNNullTimeToLeaveRefreshMonitor",R,N
T@"<CALNTravelEngineDelegate>",W,N
T@"CALNNullTravelEngine",R,N
T@"<CALNTravelEngineDelegate>",W,N,V_delegate
BLTWatchLegacyMap
T@"CALNUNUserNotificationCenterFactory",R,N
CALNResourceChangedCategoryIdentifier
com.apple.calendar.notifications.CalendarResourceChanged
notification.hiddenPreviewsBodyPlaceholder.resourceChange
Shared Event Change
Shared Calendar Change
T@"<CALNCalendarResourceChangedNotificationDataSource>",R,N,V_dataSource
T@"CALNDefaultEKCalendarNotificationReferenceProvider",R,N
T@"CALNInMemoryTimeToLeaveRefreshStorage",R,N,V_inMemoryStorage
%@ - Failed to create a valid persistent coordinator or store; context will be nil!
+[EKSideTableContext sideTableContext]
Alarm
fireTime > %@
fireTime >= %@ and fireTime <= %@
isDelayedProximityAlarm = YES
refiring = YES and fireTime < %@
refiring = YES and alarmID = %d and fireTime < %@
Setting
key = %@
value
Extras.db
Unable to recover by deleting old database! %@, %@
SideTables
momd
Failed to load schema at %@
Error while importing %@, %@
Creating new database...
Created new database successfully.
Second Error while creating new database %@, %@
%@ - Unable to remove sqlite files
-[EKSideTableContext _persistentStoreCoordinator]
v24@?0@"NSString"8@"EKTravelEngineHypothesis"16
v16@?0@"NSString"8
v12@?0B8
T@"EKTravelEngine",R,N,V_travelEngine
For %@
T@"CALNMSMailAccounts",R,N
com.apple.calendar.notifications.TriggeredEvent
com.apple.calendar.notifications.TriggeredEvent.Snooze
com.apple.calendar.notifications.TriggeredEvent.Directions
com.apple.calendar.notifications.TriggeredEvent.Directions.Snooze
com.apple.calendar.notifications.TriggeredEvent.ConferenceCall.Snooze
com.apple.calendar.notifications.TriggeredEvent.Directions.ConferenceCall
com.apple.calendar.notifications.TriggeredEvent.Directions.ConferenceCall.Snooze
CALNNotificationAcceptAction
mailto
Replace
Remove
notificationIconCache
T@"CALNNotificationIconCache",R,N,V_notificationIconCache
<%@: %p>(title = %@, location = %@, startDate = %@, endDate = %@, isAllDay = %@, eventID = %@, eventRepresentationDictionary = %@, legacyIdentifier = %@, preferredLocation = %@, conferenceURL = %@, mailtoURL = %@, hasSuggestedLocation = %@, eventHasAlarms = %@, allowsLocationAlerts = %@, forceDisplayOfNewTravelAdvisoryHypotheses = %@, locationWithoutPrediction = %@)
<%@: %p>(sourceClientIdentifier = %@, calendarNotification = %@), isDelegate = %@, sourceTitle = %@, sourceIdentifier = %@)
T@"EKCalendarNotification",R,N,V_calendarNotification
v16@?0@"NSDate"8
geoCodedLocationsCount
travelEngine.geocoding.unneeded
travelEngine.geocoding.success
MKErrorDomain
travelEngine.geocoding.failure.UnrecognizedDomain
travelEngine.geocoding.failure.MKErrorDomain.UnrecognizedCode
travelEngine.geocoding.failure.MKErrorDomain.MKErrorUnknown
travelEngine.geocoding.failure.MKErrorDomain.MKErrorServerFailure
travelEngine.geocoding.failure.MKErrorDomain.MKErrorLoadingThrottled
travelEngine.geocoding.failure.MKErrorDomain.MKErrorPlacemarkNotFound
travelEngine.geocoding.failure.MKErrorDomain.MKErrorDirectionsNotFound
travelEngine.eligibleEvents.hypothesizerSentHypothesis
travelEngine.eligibleEvents.hypothesizerNeverSentHypothesis
travelEngine.eligibleEvents.maximumTravelTimeDistribution
travelEngine.eligibleEvents.travelTimeNeverExceededLimit
travelEngine.eligibleEvents.travelTimeSometimesExceededLimit
travelEngine.eligibleEvents.travelTimeAlwaysExceededLimit
emi-%@-%@
v24@?0@"MKMapItem"8@"NSError"16
T@"NSObject<OS_dispatch_queue>",&,N,V_workQueue
callbackQueue
T@"NSObject<OS_dispatch_queue>",&,N,V_callbackQueue
originalEventInternal
T@"EKTravelEngineOriginalEvent",&,N,V_originalEventInternal
throttle
T@"EKTravelEngineThrottle",&,N,V_throttle
geocoder
T@"CalGeocoder",&,N,V_geocoder
hypothesizerProvider
T@"<CALNRouteHypothesizerProvider>",R,N,V_hypothesizerProvider
hypothesizer
T@"<CALNRouteHypothesizer>",&,N,V_hypothesizer
geocodedEventEncountered
TB,N,V_geocodedEventEncountered
hypothesizerSentAtLeastOneHypothesis
TB,N,V_hypothesizerSentAtLeastOneHypothesis
travelTimeThresholdExceededState
Tq,N,V_travelTimeThresholdExceededState
maximumTravelDurationEncountered
Td,N,V_maximumTravelDurationEncountered
agendaEntryIdentifier
T@"NSString",&,N,V_agendaEntryIdentifier
originalEvent
T@"EKTravelEngineOriginalEvent",R,N
updateBlock
T@?,C,N,V_updateBlock
entrySignificantlyChangedBlock
T@?,C,N,V_entrySignificantlyChangedBlock
dismissed
TB,N,V_dismissed
PreHypothesizing
Hypothesizing
UnableToHypothesizePermanently
UnableToHypothesizeTemporarily
DoneHypothesizing
(unknown: %lu)
dataAccessExpressConnection
T@"<CALNDataAccessExpressConnection>",R,N,V_dataAccessExpressConnection
<%@: %p>(sourceClientIdentifier = %@, calendarNotification = %@, isDelegate = %@, sourceTitle = %@, sourceIdentifier = %@)
T@"CALNInMemoryTriggeredEventNotificationDataStorage",R,N,V_inMemoryStorage
com.apple.calendar.notifications.EventInvitationResponse
notification.hiddenPreviewsBodyPlaceholder.event.invitationResponse
EventNotificationDefaultTitleAttendeeReply
Attendee Response
T@"<CALNEventInvitationResponseNotificationDataSource>",R,N,V_dataSource
Cannot record display of initial time to leave alert with travel advisory status = %{public}@, source client identifier = %{public}@
Could not get ttl event tracker alert type for travel advisory timeliness status = %{public}@, source client identifier = %{public}@
Cannot record display of initial time to leave alert because could not get event to compute required supporting metrics for source client identifier = %{public}@, alert type = %{public}@
Tracked pseudo event initial time to leave fired and logged event showed time to leave notification for source client identifier = %{public}@, unique key = %@
Cannot record display of initial time to leave alert because no hypothesis available to compute required supporting metrics for source client identifier = %{public}@, alert type = %{public}@
Tracked event fired ttl alert with source client identifier = %{public}@, alert type = %{public}@, transport type = %{public}@, eta type = %{public}@, travel state = %{public}@, has suggested location = %{public}@, is on shared calendar = %{public}@
Preparing to send feedback for posting notification with source client identifier = %{public}@, travel advisory timeliness status = %{public}@
Sent feedback for posting leave by notification for event with external URL = %{public}@
Sent feedback for posting leave now notification for event with external URL = %{public}@
Determined not to send feedback for added notification with source client identifier = %{public}@, travel advisory timeliness status = %{public}@
Could not get launch URL because unable to get event ID url for event ID = %{public}@
Error: Could not get updated actions for triggered event notification because notification is not a triggered event notification. category identifier = %{public}@, notification identifier = %{public}@, existing actions: %@. notification: %@.
Could not get mail organizer action for notification without mailto URL. notification identifier = %{public}@, notification: %@.
Applying diff to notification manager. Removed: %@, Modified: %@, Added: %@
Refreshed shared calendar invitation response notifications in response to database change. Found %{public}@ notifications for changed objects.
Refreshed shared calendar invitation response notifications. Found %{public}@ notifications.
Failed to get content for shared calendar invitation notification with sourceClientIdentifier = %{public}@
Fetched shared calendar invitation response notification with sourceClientIdentifier %{public}@. Content: %@
Received notification response for shared calendar invitation response %{public}@ with actionIdentifier = %{public}@
Could not unarchive hypothesis. error = %{public}@
Could not archive hypothesis. error = %{public}@
Failed to get notification info for sourceClientIdentifier (%{public}@)
Fetched event invitation notification with sourceClientIdentifier %{public}@. Content: %@
Refreshed event invitation notifications in response to database change. Found %{public}@ notifications for changed objects.
Refreshed event invitation notifications. Found %{public}@ notifications.
Received notification response for event invitation %{public}@ with actionIdentifier = %{public}@
Could not get event ID url to use for fetching triggered event notification info. source client identifier = %{public}@, event ID = %{public}@
Could not get event for source client identifier with protected data available. source client identifier = %{public}@, event ID = %{public}@. Could not get notification info as a result.
Fetched triggered event notification info with source client identifier: %{public}@. Triggered notification info: %@.
Failed to find event occurrence for sourceClientIdentifier %{public}@. Withdrawing notification.
Failed to find event occurrence for eventID = %{public}@. Should remove notification meta data.
Failed to find event occurrence for eventID = %{public}@. Should remove time to leave refresh timer.
Computed notification expiration date for event id = %{public}@, expiration date = %{public}@, event start date = %{public}@, event end date = %{public}@, alarm id = %{public}@, alarm date = %{public}@, alarm absolute date = %{public}@, is alarm absolute = %{public}@, alarm relative offset %{public}@
No event ID available to set up time to leave refresh timer. source client identifier = @{public}@, trigger date = %{public}@
No event ID available to remove time to leave refresh timer. source client identifier = %{public}@
Cancelled hypothesis refresh request for event ID = %{public}@
Requested hypothesis refresh date for event ID = %{public}@, requested hypothesis refresh date = %{public}@
Could not get event ID to cease route monitoring event for source client identifier = %{public}@
Ceased route monitoring for event ID = %{public}@
Acknowledging event with source client identifier: %{public}@, shouldMarkAsHavingReceivedLocation = %{public}@
Cannot mark as having received location because location alerts are not allowed, source client identifier = %{public}@
Snoozed event: %{public}@ duration: %f
Handling directions action with source client identifier (%{public}@)
Handling mail organizer action with source client identifier (%{public}@)
Could not fetch event for event id = %{public}@. Suppressing received hypothesis trigger as a result, hypothesis = %@
Travel advice received. source client identifier = %{public}@, event external url = %{public}@, hypothesis = %@
No delegate to send travel advice received message. event external url = %{public}@
Travel engine event changed significantly. source client identifier = %{public}@, event external url = %{public}@
No delegate to send travel engine event signficantly changed. event external url = %{public}@
No delegate to send travel engine authorization changed message. authorized = %{public}@
Could not fetch event for event id = %{public}@. Suppressing time to leave refresh timer trigger as a result.
Leave now refresh timer fired for source client identifier = %{public}@, event external url = %{public}@
No delegate to send time to leave refresh timer fired message. event external url = %{public}@
Preparing to send feedback for added notification with source client identifier = %{public}@
Could not get event ID for source client identifier = %{public}@
Received alarm engine notification without any fired alarms
Received alarm engine notification with %{public}d fired alerts
Should not trigger for fired alert. entity ID = %{public}@
No delegate available to send alert fired message. source client identifier = %{public}@
Should not trigger for fired alert info without scheme. entity ID = %{public}@
Should not trigger for fired alert with entity ID scheme = %{public}@
Should not trigger for acknowledged alert info. entity ID = %{public}@
Failed to find alarm for sourceClientIdentifier %{public}@. Withdrawing notification.
Withdrawing notification for event (%{public}@) whose alarm is now in the future.
Error acknowledging alarm (%{public}@) for event (%{public}@): %@
Could not get event ID url for event ID = %{public}@
Refreshed shared calendar invitation notifications in response to database change. Found %{public}@ notifications for changed objects.
Refreshed shared calendar invitation notifications. Found %{public}@ notifications.
Fetched shared calendar invitation notification with sourceClientIdentifier %{public}@. Content: %@
Received notification response for shared calendar invitation %{public}@ with actionIdentifier = %{public}@
Error adding notification request, error = %@, request identifier = %{public}@
Error replacing content for notification request, error = %@, identifier = %{public}@
Received notification changed callback.
Refreshing all notifications.
Refreshing notifications affected by changes to objects %@.
Finished refreshing notifications.
Withdrawing expired notification with sourceIdentifier %{public}@ and sourceClientIdentifier %{public}@
Requesting activation.
Cannot activate server since it is already active.
Activating.
Activated.
Requesting deactivation.
Cannot deactivate server since it is already inactive.
Deactivating.
Deactivated.
Setting notification soures: %{public}@
Did set notification sources: %{public}@
Getting notification categories from notification sources: %{public}@.
Requesting fetching records with source identifier: %@.
Fetching records with source identifier: %@.
Fetched records with source identifier: %{public}@. Fetched records: %@.
Adding record with source identifier = %{public}@, source client identifier = %{public}@
Error adding notification request. Source identifier = %{public}@, Source client identifier = %{public}@, error = %@, request = %@.
Added notification request, identifier = %{public}@, request = %@.
Updating record with source identifier = %{public}@, source client identifier = %{public}@
Error replacing notification request. Source identifier = %{public}@, Source client identifier = %{public}@, error = %@, request = %@.
Replaced notification request, identifier = %{public}@, request = %@.
Could not remove record because could not get notification identifier for source identifier = %{public}@, source client identifier = %{public}@
Removing record with source identifier = %{public}@, source client identifier = %{public}@
Error: Expected storage to contain only one record that has the same source identifier and source client identifier. Source identifier: %{public}@. Source client identifier: %{public}@. Fetched records: %@.
Received user notification center delegate will present notification message. User notification center: %@. Notification: %@.
Invoking callback with options: %{public}@.
Could not get record response from response. request identifier = %{public}@, response = %@
Transforming notification response to notification record response. request identifier = %{public}@, response = %@.
Could not get notification identifier from request identifier = %{public}@
Could not find notification record with notification identifier = %{public}@, records = %@
Transformed notification response to notification record response. Notifiation response: %@. Notification record response: %@.
Cannot add request to inactive user notification center. Request identifier = %{public}@, request = %@
Added notification record to storage. Notification record source identifier = %{public}@, source client identifier = %{public}@, record = %@
Could not add notification record to storage since notification record is nil. Notification request identifier = %{public}@, request = %@
Adding unNotificationRequest with identifier = %{public}@, request = %@
Added unNotificationRequest with identifier = %{public}@
Added updated notification record to storage. Notification record source identifier = %{public}@, source client identifier = %{public}@, record = %@
Could not add updated notification record to storage since notification record is nil. Notification request identifier = %{public}@
Replaced request with identifier = %{public}@, unNotificationContent = %@
Will present notification with identifier = %{public}@, notification = %@
Delegate is unexpectedly nil. Invoking callback with options = %{public}@, notification identifier = %{public}@, notification = %@
Invoking callback with options = %{public}@, notification identifier = %{public}@
Did receive notification response. identifier = %{public}@, response = %@
Delegate is unexpectedly nil. notification response identifier = %{public}@, response = %@
Updating record with date. Record source identifier = %{public}@, source client identifier = %{public}@, date = %{public}@, record = %@
Updated record. Source identifier = %{public}@, source client identifier = %{public}@, date = %{public}@, record = %@
Tranforming notification record to notification request. Record: %@.
Transformed notification record to notification request. Record: %@. Request: %@.
Transforming notification request to notificaiton record. Request: %@.
Cannot transform notification request to notification record since notification identifier is nil.
Transformed notification request to notification record. Request: %@. Record: %@.
Transforming notification record to notification. Record: %@.
Transformed notification record to notification. Record: %@. Notification: %@.
Fetched event canceled notification infos. Found %{public}@ notifications
Failed to get notification reference with sourceClientIdentifier %{public}@
Failed to get notification from notification reference. sourceClientIdentifier = %{public}@
Fetched event canceled notification info with sourceClientIdentifier: %{public}@ info: %@
Failed to get canceled event (%{public}@) when trying to delete it
Failed to delete canceled event (%{public}@): %@
Notifications file did not exist at path = %{public}@. Will try to create one.
Loaded notification records, count = %lu
Error archiving notifications (%@). error = %@
Error writing archived notifications to path = %{public}@, error = %@
Could not get mailto url for event. Event does not have an organizer that is not the current user. In other words, there is no organizer for this event or the current user is the organizer. event external URL = %{public}@
Could not get mailto url because could not find organizer's email address. event external URL = %{public}@
Could not get mailto url because cannot send mail. event external URL = %{public}@
Constructing notification identifier string representation from components: %{public}@.
Cannot construct notification identifier string representation from components since source identifier is an empty string. Components: %{public}@.
Cannot construct notification identifier string representation from components since source client identifier is an empty string. Components: %{public}@.
Cannot construct notification identifier string representation from components since source identifier could not be encoded. Components: %{public}@.
Constructed notification identifier string representation from components. String representation: %{public}@. Components: %{public}@.
Deconstructing notification identifier string representation into components. String representation: %{public}@.
Cannot deconstruct notification identifier string representation into components since there are an unexpected number of encoded components. Expected encoded component count: %{public}@. Actual encoded component count: %{public}@. Encoded components: %{public}@. String representation: %{public}@.
Cannot deconstruct notification identifier string representation into components since source identifier is an empty string. String representation: %{public}@.
Cannot deconstruct notification identifier string representation into components since source client identifier is an empty string. String representation: %{public}@.
Deconstructed notification identifier string representation into components. String representation: %{public}@. Components: %{public}@.
Cannot initialize notification identifier with source client identifier and source client identifier because a string representation could not be constructed. Source identifier: %{public}@. Source Client identifier: %{public}@.
Cannot initialize notification identifier with string representation because string representation could not be deconstructed into components. String representation: %{public}@.
Setting snooze time: %@. Alarm: %@. Calendar item: %@.
Refreshed event canceled notifications in response to database change. Found %{public}@ notifications for changed objects.
Refreshed event canceled notifications. Found %{public}@ notifications.
Fetched event canceled notification with sourceClientIdentifier %{public}@. Content: %@
Received notification response for event canceled %{public}@ with actionIdentifier = %{public}@
Registering UI trigger %{public}@
UITrigger requested (Name = %{public}@; Dictionary = %{public}@).
Cannot add record without alert content, source identifier = %{public}@, source client identifier = %{public}@
Cannot add record that should not be presented, source identifier = %{public}@, source client identifier = %{public}@
Cannot add record because notification identifier could not be created with record's source identifier and record's source client identifier. Record source identifier: %{public}@. Record source client identifier: %{public}@.
Added record, source identifier = %{public}@, source client identifier = %{public}@
Removed notification record with identifier = %{public}@
Failed to generate icon with identifier %{public}@
Failed to save icon with identifier %{public}@ to path %{public}@. error = %{public}@
Error trying to create notifications icon cache directory: %{public}@
Received background task agent job but time to leave refresh monitor is not active. background task agent job name = %{public}s
Could not get saved event external url xpc object
Time to leave refresh monitor is not registered for background task agent jobs. Cannot set up refresh timer for event, event external url = %{public}@, refresh date = %{public}@
A refresh timer with the same trigger date of [%{public}@] has already been set up. Will not set up a new timer. Event external URL: [%{public}@].
Set up refresh timer. event external url = %{public}@, trigger date = %{public}@, job name = %{public}s
Time to leave refresh monitor is not registered for background task agent jobs. Cannot remove refresh timer for event, event external url = %{public}@
There is no existing refresh timer to remove for event with external URL = %{public}@.
Removed refresh timer for event with external url = %{public}@
Refresh timer fired for event external url = %{public}@
No delegate available to message about fired refresh timer for event external url = %{public}@
Received notification but alarm engine monitor is not active. notification name = %{public}@
Alarm engine monitor received did register for alarms message but the alarm engine monitor is not active. Cannot send did register for alarms message to alarm engine.
Received alarm but alarm engine monitor is not active. alarm name = %{public}@
Received notification but inbox notification monitor is not active. notification name = %{public}@
Marking as heaving received location
Failed to create default calendar directory: %{public}@
Could not get start of leave now period for hypothesis = %@
Could not get start of running late period for hypothesis = %@
Failed to get notification infos for sourceClientIdentifier (%{public}@)
Fetched suggested event notification with sourceClientIdentifier %{public}@. Content: %@
Refreshed suggested event notifications in response to database change. Found %{public}@ notifications for changed objects.
Refreshed suggested event notifications. Found %{public}@ notifications.
Received notification response for suggested event notification with source client identifier = %{public}@, actionIdentifier = %{public}@
No arrival date provided for map item url launch options.
Could not get alarm ID for triggered alarm
Should not modify for alarm fired because old notification data is nil. source client identifier = %{public}@
Should not modify for alarm fired that is not offset from travel time start. source client identifier = %{public}@
Should not modify for alarm fired that is offset from travel time start because last time notification added is nil. source client identifier = %{public}@
Should modify for alarm fired that is offset from travel time start because last fire time of alert is within eight minutes. source client identifier = %{public}@
Should not add notification because no new travel advice received, source client identifier = %{public}@
We've detected that the user has arrived at the event's location, source client identifier = %{public}@
Should add notification because new travel advice received and no associated notification data exists already, source client identifier = %{public}@
Should not add notification because time to leave status has already been displayed. source client identifier = %{public}@
Should not add notification because notification recently fired due to a travel time alert. source client identifier = %{public}@
Should not add notification because an alert already fired for the event and the user is traveling to the destination. source client identifier = %{public}@
Should add notification because new travel advice received for existing alert. source client identifier = %{public}@
Should remove notification because the user has arrived and we've only shown pure 'Time to Leave' alerts and no manual alerts for this event. Source client identifier to remove = %{public}@
Could not compute transition for time to leave refresh timer fired because could not find existing notification data. source client identifier = %{public}@
Time to leave status already displayed based on travel advisory timeliness period: (%{public}@), period = %lu, hasDisplayedLeaveByMessage = (%{public}@), hasDisplayedLeaveNowMessage = (%{public}@), hasDisplayedRunningLateMessage = (%{public}@)
Tried to add hypothesis message to event representation with the wrong type: (%@)
Travel engine initialized: [%@]
The travel engine is already running.  Will not start engine: [%@]
Travel engine preparing to start: [%@]
Travel engine started: [%@]
The travel engine is not running.  Will not stop engine: [%@]
The travel engine is preparing to stop: [%@]
Travel engine stopped: [%@]
nil 'externalURL' given. Will not request hypothesis refresh at date: [%@] for any events.
Requesting hypothesis refresh at date: [%@] for event that has external URL: [%@]
Will not request hypothesis refresh at date: [%@] for event that has external URL: [%@] because is isn't being monitored
nil 'externalURL' given. Will not cancel a hypothesis refresh request for any events.
Canceling hypothesis refresh request for event that has external URL: [%@]
Will not cancel refresh request for event that has external URL: [%@] because it isn't being monitored.
nil 'externalURL' given.  Will not cease monitoring for any events.
Ceasing monitoring for event that has external URL: [%@]
Will not cease monitoring for event that has external URL: [%@] because it isn't being monitored.
Will search for travel agenda candidates between [%@] and [%@].  Calendars to search: [%@]
Location authorization status changed to [%@]
The location authorization state has changed.  self.authorizedInternal: [%@]
Received notification: [%@].
The state EventKit feature set was changed
The state of SuggestEventLocations was changed
The travel engine is yielding to sync already.  Ignoring notification.
The travel engine is not currently yielding to sync.  Ignoring notification.
Updating database encryption state.
Installing sync yield timer for travel engine: [%@].
Sync yield timer fired.  Overriding sync yield and refreshing if needed.
Installed sync yield timer with [%ld] second length for travel engine: [%@].
Uninstalling sync yield timer for travel engine: [%@].
Installing a periodic refresh timer for travel engine: [%@].  Timer interval: [%@].  Estimated earliest fire date (based on system time): [%@].  Estimated latest fire date (based on system time): [%@]
Uninstalling the periodic refresh timer for travel engine: [%@].
Registering notification observation for travel engine: [%@].
Unregistering notification observation for travel engine: [%@].
Trimming entries before [%@] and after [%@].
Removing travel agenda entry that ends before the time window: [%@]
Removing travel agenda entry that starts after the time window: [%@]
Data does not need to be refreshed.  Will not refresh data for travel engine: [%@]
Cannot access data. Will not refresh data for travel engine: [%@]
Currently yielding to sync. Will not refresh data for travel engine: [%@]
Calendar system service is not authorized to use location
Refreshing data for travel engine: [%@]
The travel agenda time window interval is [%@] seconds.
Found [%lu] travel agenda candidates.
Inspecting travel agenda candidate event with title [%@], location [%@], start date [%@], and external URL [%@].
No external url for event: [%@].  Will not register as travel agenda item.
No location for event with external URL: [%@].  Will unregister as travel entry if it exists.
Unregistering event with external URL [%@] since it seems to have lost its location.
Event is or may be junk. Will not register as travel agenda item.
No routing method found on event with external URL [%@].  Defaulting to [%@].
Using routing method [%@] for event with external URL [%@].
Creating agenda entry because one does not exist for event with external URL: [%@]
Hypothesis updated for event with external URL: [%@].  Hypothesis: [%@]
Significant change encountered for event with external URL [%@].
The entry has been dismissed, but it's location has changed.  Clearing the dismissed flag for the entry for event with external URL: [%@]
The entry has been dismissed, but it's start date has changed.  Clearing the dismissed flag for the entry for event with external URL: [%@]
The entry has been dismissed.  Will not update the entry for event with external URL: [%@]
Unregistering event with external URL since it's not in the travel window: [%@]
Unregistering all agenda entries.
The periodic refresh timer fired for travel engine: [%@].  Fire time: [%@].  Last system wake date: [%@].
Installation of location manager requested.
Installation of location manager complete.  Location manager: [%@]
Uninstallation of location manager requested.
Uninstallation of location manager complete.
nil 'externalURL' given.  Will not send feedback for posting notification.
nil 'feedback' given.  Will not send feedback for posting notification.
Will not send feedback for posting notification for event that has external URL: [%@] because it isn't being monitored.
Creating the sentinel file was successful or the sentinel file already exists
Could not create sentinel file
Fetched (%lu) suggested event notifications
Failed to get notification from notification reference.
Failed to get suggested event notification reference with objectID %{public}@
Failed to get suggested event notification from notification reference. objectID = %{public}@
Fetched suggested event notification with objectID = %{public}@, notification info = %@
Could not get event. Cannot delete suggested event for source client identifier = %{public}@
Error deleting canceled suggested event: %@
Clearing suggested event notification with source client identifier = %{public}@
Clearing suggested event notification with object ID = %{public}@
Failed to get notification object from notification reference. Bailing. notification objectID = %@
Failed to get resource change for notification with objectID %{public}@
Failed to mark resource change as alerted for notification with objectID %{public}@, error = %@
Cleared suggested event notification with objectID %{public}@
Could not get event. Cannot acknowledge event for source client identifier = %{public}@
Unexpectedly found more than 1 event with extraction group identifier = %{public}@. Found (%lu) events
Cannot create notification info from notification without source client identifier, notification object ID = %{public}@
Opening url for response, source identifier = %{public}@, source client identifier = %{public}@, action identifier = %{public}@, url = %@
Could not open url, error = %@, url = %@
Unexpected number of topic identifiers. Expected: 1. Actual: %lu. Resolved section identifier: %{public}@. Topic identifiers: %{public}@.
Getting content for source client identifier = %{public}@
Using default title for notification content despite protected data being available, source client identifier = %{public}@
Category identifier for content = %{public}@, should include snooze action = (%{BOOL}d), should include directions action = (%{BOOL}d), should include conference call action = (%{BOOL}d), source client identifier = %@
Received notification response with action identifier = %{public}@, source client identifier = %{public}@
Triggered with source client identifier = %{public}@, trigger data = %{public}@
Could not get notification info for event (%{public}@).
Existing records = %@.
Existing record matching event for source client identifier = %{public}@, existing record source client identifier = %{public}@, existing record = %@
Existing notification data for source client identifier = %{public}@, existing notification data = %@
Determined that notification should trigger = %{public}@. source client identifier = %{public}@
Could not get notification content. source client identifier = %{public}@, source notification info = %@
Transition = %{public}@, source client identifier = %{public}@
No existing delivered notification to perform replace transition, source client identifier = %{public}@
Notification that should trigger cannot because we could not compute the transistion type. source client identifier = %{public}@
Travel engine event changed significantly. Will reset 'Time to Leave' display state for existing record if it exists. source client identifier = %{public}@
Could not get existing record for source client identifier = %{public}@
Travel advisory authorization changed. authorized = %{public}@
Clearing travel advisory hypotheses
Updating refresh timer for source client identifier = %{public}@
Location alerts are not allowed. Will remove the associated refresh timer for source client identifier = %{public}@
There is no hypothesis. Will remove the associated refresh timer for source client identifier = %{public}@
Hypothesis indicates user has arrived. Will remove associated refresh timer for source client identifier = %{public}@
Will refresh at date: [%@] when the user needs to 'Leave Now' at %{public}@, source client identifier = %{public}@
Will refresh when the user will become late at %{public}@, source client identifier = %{public}@
Will set up a refresh timer with an adjusted refresh date of %{public}@. source client identifier = %{public}@
Refreshing notification with source client identifier = %{public}@
Removing notification meta data due to refresh for eventID = %{public}@
Notification meta data is expired for eventID = %{public}@. Should remove notification meta data.
Could not get an expiration date for notification meta data for eventID = %{public}@. Treating notification meta data as expired.
Time to leave refresh date is expired for eventID = %{public}@. Should remove time to leave refresh timer.
Getting content for notification with source client identifier = %{public}@, should clear hypothesis = %{public}@
Failed to get source notification info. source client identifier = %{public}@
Failed to get notification info for event (%{public}@). Returning nil content
Notification added with source client identifier = %{public}@, trigger = %{public}@
Error: Could not get launch URL for action. notification identifier = %{public}@, action identifier = %{public}@, response = %@
Updating stored notification data for source client identifier = %{public}@, transition = %{public}@
Could not get notification data for source client identifier = %{public}@
Adding notification data for source notification info. source client identifier = %{public}@, transition = %{public}@
No event ID to add notification data for source client identifier = %{public}@
Added notification data, source client identifier = %{public}@, event ID = %{public}@, notification data = %@
Resetting stored notification data time to leave display state for source client identifier = %{public}@
Cleared travel advisory from notification meta data for source client identifier = %{public}@
No content available to get notification response data. source client identifier = %{public}@
No user info available to get notification response data. source client identifier = %{public}@
No notification response data payload in user info. source client identifier = %{public}@
Source client identifiers refer to the same event. Source client identifier: %{public}@. Other source client identifier: %{public}@.
Source client identifiers do not refer to the same event. Source client identifier: %{public}@. Other source client identifier: %{public}@.
Stopping
Starting up. Last sequence was %d, context is %@
Reminders notifications enabled
Alarm engine behaving like %@
Reminders notifications disabled
Locations not available.  Removing all installed fences.
Alarm engine handling did register for alarms message
Received alarm notification. XPC Alarm context: %s. XPC Alarm context date: %@.
Updated next fire date: %@.
Protected data now available.
Data protection enabled. Waiting for unlock before updating.
Sync running. Waiting for it to finish before updating.
Alarm table population not started.  Will wait until the end of an existing population action to retry.
Database changed.
Alarms may have changed: %s
Time zone changed.
Simulated offset changed.
%s - EKSideTableContext failed to be created, nothing will be stored
There were %lu alarms found which will occur in the next 15 days
Found %d pre-existing past refiring alarms in the side table...
Replacing previously-held refiring alarm, because it's already in the set of alarms to store: %@ (new fireDate = %@)
Re-adding %ld past refiring alarms to the side table.
Unable to save alarm side table: %@
Populating alarm table
Calendar TZ = %@; System TZ = %@; Time Zone Support = %@
Time Zone Support pref is suspect (%@)
Searching for alarms between [%@] and [%@]
Alarm Table populated in %f
Retrying alarm table population due to previous request to do so.
Rescheduling timer
No cache end date. This means we haven't populated the table. No timer will be set.
We're close to our cache end date. Going to attempt a rebuild.
No alarms found. Setting time to cache end date.
Set _nextFireDate to [%@]
Adjusted fire date from [%@] to [%@]
%s - refire date was nil and a new timer won't be scheduled, context was %@
Installing timer with fire date: [%@]
Formatted scheduled alarm trigger date: %@.
Scheduled XPC alarm event: %s. Alarm context: %s.
Notifying: %lu alarms fired.
Timer Fired.
Fire date suspiciously old. Resetting to one minute before now.
Looking for alarms between %@ and %@
Found %lu timedAlarms
Found %lu alarm(s)
Removing side alarm for junk or maybe junk event with rowID: %@
Removing side alarm for completed reminder with rowID: %@
Timer fired for unsupported item
Side alarm has no Entity URI, will not fire. rowID: %@
Attempting to handle timer fired for reminder but reminders notifications are disabled
Unable to save alarm side table when pruning side alarms: %@
%s - Unable to create side table context; stale refiring alarms will NOT be removed
Checking for stale refiring side alarms to remove...
Removing refiring side alarm for alarm row ID %d because it was acknowledged (sideAlarm check)
Removing refiring side alarm for row ID %d because it was acknowledged (EKAlarm check)
Removing refiring side alarm for row ID %d because the EKAlarm is gone
Removing refiring side alarm for row ID %d because the owning entity is gone
Removing refiring side alarm for row ID %d because the reminder was completed
Removing refiring side alarm for row ID %d because the fire date moved into the future (old = %@, new = %@)
Sync timer fired.
Sync started. Suppressing updates while it runs.
Sync done.
Significant time change.
Per-calendar notification suppression setting changed.
Location daemon restarted.
Stopping Monitoring for region ID %@
Current location authorization status: %@
Region monitoring not available or enabled. Trigger ignored!
Searching for location-based alarms
Found %lu location-based alarms
CL is monitoring %lu regions
Date criteria not met for alert %@.
Region for alert %@ no longer meets date criteria.  Removing.
Region for alert %@ has changed. Removing.
Can't create region for alarm %@.
Started monitoring for alarm %@.
Could not determine if location for alarm was a location of interest, error: %@
Event store was nil when updating fences!
Updated monitoring for alarm %@, waiting for settled: %@
Not updating monitoring for alarm %@: region appears to have changed
Not updating monitoring for alarm %@: region appears to have been deleted
PROXIMITY ALARM TRIGGERED (%@): %@
Location-based alarm with delay %.f triggered proximity: %@.
Firing location-based reminder alarm: %@
Notifying location-based alarm fired: %@.
%s - Unable to fetch alarm %@.
Entered region %@.
Exited region %@.
General location manager error %@.
region monitoring error for %@: %@.
Location manager authorization status is %@.
Aborted our last attempt to adjust fences.  Doing it now.
Removing all fences due to authorization change
Creating location manager with bundle path %@
Region monitoring supported [%d]
Removing ourselves as a delegate and removing reference to location manager
Changing to monitoring regions
Changing to disabled monitoring regions
Vehicle trigger alarms fired, connected = %@
%s - Unable to create alarm side table, no vehicle triggers will be handled
Firing vehicle delayed trigger alarm for: %@
Vehicle-triggered alarm: %@ with delay %f being added to side table
'NULL' task given.  Will not create a distinct publisher bulletin ID.
Could not find unique identifier for task with entity ID: [%@].  Will not create a distinct publisher bulletin ID.
'nil' task given.  Will not create a distinct publisher bulletin ID.
Could not find unique identifier for reminder: [%@].  Will not create a distinct publisher bulletin ID.
'nil' unique identifier given.  Will not create a publisher bulletin ID.
Could not encode unique identifier: [%@].  Will not create a distinct publisher bulletin ID.
%{public}s called when reminders notifications are disabled
Fetched event invitation notification infos. Found %{public}@ notifications
Fetched event invitation notification info with sourceClientIdentifier: %{public}@ info: %@
Failed to get event (%{public}@) when attempting to report as junk
Ignoring notification for event that cannot be responded to. (%{public}@)
Failed to get event (%{public}@) when attempting to set participant status to %{public}@
Failed to save event (%{public}@) when setting participant status (%{public}@): %@
Determining whether or not to trigger for source client identifier = %{public}@, trigger = %{public}@, source notification info = %@, old notification data = %@
Should trigger for alarm. source client identifier = %{public}@
Should not trigger because nil hypothesis received and no existing notification data, source client identifier = %{public}@
Should not trigger because nil hypothesis received and existing notification data has no travel advice, source client identifier = %{public}@
Should trigger because nil hypothesis received and notification data has existing travel advice for source client identifier = %{public}@
Should trigger because forcing display of new travel advisory hypotheses for source client identifier = %{public}@
Should not trigger because location alerts are disabled. source client identifier = %{public}@
We've detected that the user has arrived at the event's location. source client url = %{public}@, has existing notification data = %{public}@
Should not trigger because the user has not seen travel advisory information for this event yet and we've detected the user will not arrive until the event is over. Will not show travel advisory information. source client identifier = %{public}@
Found existing notification data for event. source client identifier = %{public}@
Should not trigger because the predicated travel time is less than the minimum allowable travel time threshold so we can't proivde a time to leave alert. source client identifier = %{public}@, predicated travel time = %{public}@, minimum allowable travel time threshold = %{public}@
Should not trigger because the event's start date is before now and we don't have any existing notification data. source client identifier = %{public}@
Should not trigger because the user is definitely traveling to the destination and we don't have any existing notification data for this event. source client identifier = %{public}@, travel state = %{public}@
Should not trigger because the user is traveling towards the destination, we don't have any existing notification data for this event and the event already has normal alarms on it, so the user will be alerted of this event at some point. source client identifier = %{public}@
Should trigger because new travel advice received and no existing notification data for this event exists already. source client identifier = %{public}@
Should trigger because notification has existing travel advice. source client identifier = %{public}@
Should trigger because notification recently fired due to a travel time alert. source client identifier = %{public}@
Should trigger because an alert was already fired for the event and the user is traveling to the destination. source client identifier = %{public}@
Should not trigger because new travel hypothesis received for event that does not satisfy minimum travel time threshold. source client identifier = %{public}@
Should not trigger for time to leave refresh timer fired because no existing notification data. source client identifier = %{public}@
Should not trigger for time to leave refresh timer fired because location alerts are disabled. source client identifier = %{public}@
Should trigger for time to leave refresh timer fired because we have no travel advice. source client identifier = %{public}@
Should trigger because the user is traveling to the destination or has arrived. source client identifier = %{public}@
Should not trigger for time to leave because an alert was already fired for this event and showed a 'Leave Now' message. source client identifier = %{public}@
Should trigger for time to leave because the user needs to see the 'Leave Now' alert. source client identifier = %{public}@
Update calendar app badge count to %{public}d
Could not get alarm ID for source client identifier = %{public}@
Invalid sourceClientIdentifier (%{public}@). Could not find at least one component.
Failed to construct URL from sourceClientIdentifier (%{public}@)
Failed to construct objectID from sourceClientIdentifier (%{public}@)
Failed to load notification reference for sourceClientIdentifier (%{public}@
sourceClientIdentifier was nil. Bailing.
Failed to get calendar for sourceClientIdentifier (%{public}@).
Failed to hide calendar (%{public}@) from notification center: %@
Unexpected entity type %{public}@ when trying to get EKInviteReplyNotification with sourceClientIdentifier %{public}@
Failed to get invite reply notification with sourceClientIdentifier %{public}@
Failed to remove invite reply notification with sourceClientIdentifier %{public}@: %@
Failed to find event for notification using url (%{public}@)
Failed to get event (%{public}@) when attempting to clear invitation notification
Not clearing invitation status for sourceClientIdentifier %{public}@ because it is set to none
Failed to clear invitation status for event (%{public}@): %@
Creating notification server module
Reloading calendar notifications after first unlock
Cannot reload notification with sourceClientIdentifier = %@. Failed to find notification source with sourceIdentifier = %{public}@.
Reloaded notification record with source identifier = %{public}@, source client identifier = %{public}@, title = %@
Created notification storage at path %{public}@
Failed to create storage for notifications at path %{public}@. error = %@. Falling back to in-memory storage.
Created triggered event notification data storage at path %{public}@
Failed to create triggered event notification data storage at path %{public}@. error = %@. Falling back to in-memory storage.
Created time to leave refresh storage at path %{public}@
Failed to create time to leave refresh storage at path %{public}@. error = %@. Falling back to in-memory storage.
Throttle has been requested to tear down: [%@]
Travel engine throttle tear down: [%@]
No date given.  Tearing down emission timer.
'nil' emission timer given.  Uninstalling emission timer.
The given emission date %@ is before now %@.  Firing the emission block and uninstalling the timer.
The given emission date is the same as the existing emission date.  Will not update the emission timer.  Emission date: [%@]
Firing emission block for travel engine throttle: [%@]
Created a new emission timer [%@] that will fire on the emission date: [%@]
Uninstalling timer [%@] for travel engine throttle: [%@].
Emission timer fired at [%@]
Cleared out the next emission date due to emission timer firing.
Cannot create route hypothesis body for notification without a hypothesis. source client identifier: %{public}@
Cannot create body with travel advisory for notification without travel advisory timeliness status. source client identifier = %{public}@
Cannot create route hypothesis body for notification because it was determined that it should not be included. source client identifier = %{public}@, Notification info: %@.
Could not convert travel advisory timeliness period none to a ttl description type number
Cannot set legacy identifier for calendar notification with no URL.
Refreshed calendar resource changed notifications in response to database change. Found %{public}@ notifications for changed objects.
Refreshed calendar resource changed notifications. Found %{public}@ notifications.
Failed to get content for calendar resource changed notification with sourceClientIdentifier = %{public}@
Fetched calendar resource changed notification with sourceClientIdentifier %{public}@. Content: %@
Received notification response for calendar resource changed %{public}@ with actionIdentifier = %{public}@
Time to Leave refresh storage file did not exist at path = %{public}@. Will try to create one.
Could not save time to leave refresh date. error = %{public}@, identifier = %{public}@, data = %@
Could not save after removing time to leave refresh date. error = %{public}@, identifer = %{public}@
Could not save after removing time to leave refresh dates. error = %{public}@
Loaded time to leave refresh timer dates, count = %lu
Error archiving time to leave refresh dates (%@). error = %@
Error writing archived data to path = %{public}@, error = %@
Travel advisories are not supported. Will not start travel engine.
Travel advisories are not supported. Will not stop travel engine.
Travel engine wrapper received did register for background task agent jobs message but the travel engine wrapper is not active. Cannot start travel engine.
Travel engine wrapper received did register for background task agent jobs message. Starting travel engine.
Received background task agent job but travel engine is not active. job name = %{public}s
Received notification but travel engine is not active. notification name = %{public}@
No delegate exists to send travel advice received message
No delegate exists to send event significantly changed message
No delegate exists to send authorization changed message
Fetched event invitation response notification info with sourceClientIdentifier: %{public}@ info: %@
Ignoring junk event
Could not get icon identifier from icon path = %{public}@, notification icon = %{public}@
Could not get icon path for icon identifier = %{public}@
Update with original event requested: [%@]
Event has significantly changed: [%@].  Original event: [%@]
No equality check was performed.  Original event: [%@]
Will attempt to hypothesize.  Previous original event: [%@] Original event: [%@]
Firing request hypothesis refresh block in travel engine for [%@]
Firing cancel hypothesis request block in travel engine for [%@]
Firing emission block in travel engine for [%@]
Requesting refresh for hypothesizer, %@
Request hypothesis refresh timer fired at [%@]
Emission hypothesis refresh timer fired at [%@]
Created a new request refresh timer that will fire at: [%@] for entry: [%@]
Uninstalling request refresh timer for agenda entry: [%@].
Created a new emission refresh timer that will fire at: [%@] for entry: [%@]
Uninstalling emission refresh timer for agenda entry: [%@].
'nil' error given.  Will not account for geocoding failure.
Sending UI feedback to the hypothesizer.  Notification type: [%@].  Original event: [%@]
Clearing all state in the agenda entry for original event: [%@]
A map handle already exists on the event.  Will not enhance location by geocoding the location string.  Original event: [%@]
A geolocation already exists on the event.  Will not enhance location by geocoding the location string.  Original event: [%@]
The location is a conference room without structured location information.  Will not proceed to monitor route.  Original event: [%@].
No map handle or geolocation exists on the event.  Will enhance location by geocoding the location string.  Original event: [%@]
Automatic geocoding is not allowed yet. We will not attempt to geocode for this event [%@]
Geocoding complete.  Elapsed time: [%@] ms.  Original event: [%@]
Encountered error while geocoding.  Will not proceed to monitor route.  Location string: [%@] Error: [%@].
No geocoding results found.  Will not proceed to monitor route.  Location string: [%@].
Map item found after geocoding.  Location string: [%@].  Map item: [%@]
No event external URL found.  Will not save geocoding result to the database. Original event: [%@].
'saveGeocodedLocationsInTravelEngine' set to 'NO.'  Will not save geocoding result to the database. Original event: [%@].
Saved geocoding result to the database successfully. Original event: [%@].
Failed to save the geocoding result to the database successfully. Original event: [%@].  Error: [%@]
Setting up route monitoring.  Original event: [%@]
No map handle or geolocation found.  Will not monitor routing for event.  Original event: [%@]
Found map handle.  Will use to generate destination.  Original event: [%@]
Found geolocation.  Will use for route monitoring.  Original event: [%@].  Geocoordinates - Latitude: [%@], Longitude: [%@]
Creating a synthetic hypothesis.  Original event: [%@]
Created a synthetic hypothesis: [%@]
Creating hypothesizer to monitor routing.  Destination: [%@] Original event: [%@] Hypothesizer: [%@]
Hypothesizer is gone.  Returning early.
Hypothesizer updated to state: [%@].  Original event: [%@]. Hypothesis: [%@]
Done hypothesizing for original event: [%@]
Analyzing hypothesis for original event: [%@]
Conservative Travel time [%@] does not satisfy the initial emission travel time requirement since it is more than the maximum allowable travel time: [%@]. Will not emit hypothesis as a result.
Hypothesis's conservative travel time [%@] meets the initial emission travel time requirement since it is less than or equal to the maximum allowable travel time: [%@]).
Set 'encounteredHypothesisThatSatisfiesInitialEmissionRequirement' to [%@].
Determining whether or not hypothesis satisfies additional travel time requirements. Hypothesis: [%@].
Travel time: [%@] is less than the minimum allowable travel time: [%@]. Will not emit hypothesis as a result.
Arrival time: [%@] is after event end date: [%@]. Will not emit hypothesis as a result.
Hypothesis satisfied additional travel time requirements. Will emit hypothesis as a result. Hypothesis: [%@].
Encountered hypothesis that satisfies additional travel time requirements. Hypothesis: [%@]. Original event: [%@]
Updating agenda entry with hypothesis: [%@]. Agenda entry: [%@].
Fetched shared calendar invitation notification infos. Found %{public}@ notifications
Fetched shared calendar invitation notification with sourceClientIdentifier = %{public}@. Info = %@
Failed to get notification object from notification reference. Bailing.
Fetched shared calendar invitation response notification infos. Found %{public}@ notifications
Fetched shared calendar invitation response notification with sourceClientIdentifier = %{public}@. Info = %@
Fetched calendar resource changed notification infos. Found %{public}@ notifications
Fetched calendar resource changed notification with sourceClientIdentifier = %{public}@. Info = %@
Failed to get resource change (%{public}@) for notification with sourceClientIdentifier %{public}@
Failed to remove resource change (%{public}@) for notification with sourceClientIdentifier %{public}@
Marked as having received location with effective bundle identifier = %{public}@
Notification data file did not exist at path = %{public}@. Will try to create one.
Could not save notification data. error = %{public}@, identifier = %{public}@, data = %@
Could not save after removing notification data. error = %{public}@, identifer = %{public}@
Loaded notification meta data, count = %lu
Error archiving notification data (%@). error = %@
Refreshed event invitation response notifications in response to database change. Found %{public}@ notifications for changed objects.
Refreshed event invitation response notifications. Found %{public}@ notifications.
Fetched event invitation response notification with sourceClientIdentifier %{public}@. Content: %@
Received notification response for event invitation response %{public}@ with actionIdentifier = %{public}@
@(#)PROGRAM:CalendarNotification  PROJECT:CalendarNotification-1
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
CALNTriggeredEventNotificationActionUtilities
CALNTriggeredEventNotificationFeedbackHelper
CALNTriggeredEventNotificationLaunchURLProvider
CALNTriggeredEventNotificationActions
CALNTriggeredEventNotificationActionUpdater
NSObject
CALNTriggeredEventNotificationResponseLaunchURLProvider
CALNNotificationRecordsDiff
CALNNotificationRecordsDiffer
CALNNotificationStorageWrapper
CALNNotificationStorage
CALNNotificationRecordsDiffApplier
CALNEventInvitationResponseNotificationInfo
CALNSharedCalendarInvitationResponseNotificationSource
CALNNotificationSource
CALNNotificationResponseDelegate
CALNTimeToLeaveEventTrackerUtilities
CALNNotificationCategory
NSCopying
CALNEventInvitationNotificationInfo
CALNEventRepresentationDataSourceUtils
CALNTriggeredEventNotificationResponseDataPayloadMapper
CALNUNNotificationActionMapper
CALNEventInvitationNotificationSource
UnitTesting
CALNNotificationAction
CALNEKStats
CALNStats
CALNTravelAdvisoryUtilities
CALNDefaultTravelAdvisoryAuthority
CALNTravelAdvisoryAuthority
CALNCalAnalyticsHandler
CALNAnalyticsHandler
CALNTriggeredEventNotificationEKDataSource
CALNTravelEngineDelegate
CALNTimeToLeaveRefreshMonitorDelegate
CALNTriggeredEventNotificationDataSource
CALNSyntheticRouteHypothesizer
CALNSyntheticRouteHypothesizerProtocol
CALNRouteHypothesizer
CADSyntheticRouteHypothesizer
CALNTriggeredEventNotificationSourceNotificationInfo
CALNSharedCalendarInvitationNotificationSource
CALNUNDefaultUserNotificationCenter
CALNUNUserNotificationCenterProtocol
CALNNotificationSourceRefresher
CALNNotificationRecordResponse
CALNNotificationServer
CADModule
CalActivatable
CalDarwinNotificationReceiver
CalAlarmReceiver
CalBackgroundTaskAgentReceiver
CalDataProtectionObservable
CALNUserNotificationCenterDelegate
CALNNotificationManager
CALNUNNotificationResponseMapper
CALNSuggestedEventNotificationInfo
CALNEKTTLEventTracker
CALNTTLEventTracker
CALNUNNotificationMapper
CALNNotificationRequest
NSSecureCoding
NSCoding
CALNNotificationRecord
NSMutableCopying
CALNMutableNotificationRecord
CALNDateStringUtils
CALNGEORouteHypothesizer
CALNEventCanceledNotificationInfo
CALNUNUserNotificationCenter
UNUserNotificationCenterDelegate
CALNUserNotificationCenter
CALNNotificationContent
CALNMutableNotificationContent
CALNNullCoreLocationProvider
CALNCoreLocationProvider
CALNNotificationMapper
CALNEventCanceledNotificationEKDataSource
CALNEventCanceledNotificationDataSource
CALNPersistentNotificationStorage
CALNTriggeredEventNotificationMailtoURLProvider
CALNNotificationIdentifierComponents
CALNNotificationIdentifier
CALNNEKRemoteMutator
CALNRemoteMutator
CALNNotification
CALNEventCanceledNotificationSource
CALNLSApplicationWorkspaceProvider
CALNApplicationWorkspaceProvider
CALNUITriggersNotificationSource
CSLSUITriggerRemoteProvider
CALNInMemoryNotificationStorage
CALNEventRepresentationSourceUtils
CALNSyntheticRouteHypothesizerProvider
CALNRouteHypothesizerProvider
CALNNotificationResponse
CALNNotificationIconCache
CALNTriggeredEventNotificationTriggerData
CALNDefaultTimeToLeaveRefreshMonitor
CALNTimeToLeaveRefreshMonitor
CALNEKAlarmEngineMonitor
CALNAlarmEngineMonitor
CALNInMemoryTriggeredEventNotificationDataStorage
CALNTriggeredEventNotificationDataStorage
UserInfoUtils
CALNNullRemoteMutator
CALNDataAccessExpressSharedConnection
CALNDataAccessExpressConnection
CALNCUIKIconProvider
CALNNotificationIconProvider
CALNCalendarIconIdentifierProvider
CALNCalendarResourceChangedNotificationInfo
CALNInboxNotificationMonitor
CALNInboxNotificationProvider
CALNCalendarCoreLocationManager
CALNGEORouteHypothesizerProvider
CALNLogSubsystem
CALNModuleProvider
CADModuleProvider
CALNEKTravelAdvisoryTimelinessAuthority
CALNTravelAdvisoryTimelinessAuthority
CALNSuggestedEventNotificationSource
CALNUNNotificationSoundMapper
CALNRemoteMutatorShared
CALNDefaultTriggeredEventNotificationMapItemURLProvider
CALNTriggeredEventNotificationMapItemURLProvider
CALNEKSuggestionsServiceLogger
CALNSuggestionsServiceLogger
CALNDefaultTriggeredEventNotificationTransitionProvider
CALNTriggeredEventNotificationTransitionProvider
CALNEKUIEventRepresentationProvider
CALNDataSourceEventRepresentationProvider
CALNSourceEventRepresentationProvider
CALNRouteHypothesisMapper
EKTravelEngine
CLLocationManagerDelegate
CALNNotificationUtilities
CALNSuggestedEventNotificationEKDataSource
CALNSuggestedEventNotificationDataSource
CALNUNNotificationCategoryMapper
CALNLaunchServicesURLHandler
CALNURLHandler
CALNUNNotificationContentMapper
CALNTriggeredEventNotificationSource
CALNTriggeredEventNotificationDataSourceDelegate
CALNEKFoundInAppsEventTracker
CALNFoundInAppsEventTracker
_EKAlarmEngine
CALNCUIKTravelAdvisoryDescriptionGenerator
CALNTravelAdvisoryDescriptionGenerator
CALNInMemoryTimeToLeaveRefreshStorage
CALNTimeToLeaveRefreshStorage
CALNEventInvitationNotificationEKDataSource
CALNEventInvitationNotificationDataSource
CALNDefaultTriggeredEventNotificationTriggerHelper
CALNTriggeredEventNotificationTriggerHelper
CALNCalendarAppBadgeUpdater
CALNUNNotificationPresentationOptionsMapper
CALNTriggeredEventNotificationSourceClientIdentifierUtilities
CALNResourceChangedNotificationDataSourceUtils
CALNTriggeredEventNotificationData
CALNMutableTriggeredEventNotificationData
CALNNotificationDataSourceUtils
CALNNullAlarmEngineMonitor
CALNEventInvitationNotificationDataSourceUtils
CALNNotificationSound
CALNMutableNotificationSound
CALNNotificationServerModule
CALNFakeNotificationSource
EKSideAlarm
EKTravelEngineThrottle
EKTravelEngineOriginalEvent
CALNTriggeredEventNotificationResponseData
CALNDefaultTriggeredEventNotificationBodyDescriptionProvider
CALNTriggeredEventNotificationBodyDescriptionProvider
EKCalendarItemAlertInfo
CALNEKDebugPreferences
CALNDebugPreferences
CALNNullTimeToLeaveRefreshMonitor
CALNNullTravelEngine
CALNTravelEngine
CALNLegacyIdentifierUtils
CALNUNUserNotificationCenterFactory
CALNUserNotificationCenterFactory
CALNBundle
CALNCalendarResourceChangedNotificationSource
CALNDefaultEKCalendarNotificationReferenceProvider
CALNEKCalendarNotificationReferenceProvider
CALNPersistentTimeToLeaveRefreshStorage
EKSideTableContext
CALNEKTravelEngine
CALNNotificationSourceUtils
CALNUNNotificationRequestMapper
CALNEventInvitationResponseNotificationEKDataSource
CALNEventInvitationResponseNotificationDataSource
CALNMSMailAccounts
CALNMailAccounts
CALNNotificationFilter
CALNTriggeredEventNotificationTransitionUtilities
CALNUNNotificationIconMapper
CALNTriggeredEventNotificationInfo
CALNSharedCalendarInvitationNotificationInfo
EKTravelEngineAgendaEntry
CALNSharedCalendarInvitationNotificationEKDataSource
CALNSharedCalendarInvitationNotificationDataSource
CALNSharedCalendarInvitationResponseNotificationInfo
CALNSharedCalendarInvitationResponseNotificationEKDataSource
CALNSharedCalendarInvitationResponseNotificationDataSource
CALNCalendarResourceChangedNotificationEKDataSource
CALNCalendarResourceChangedNotificationDataSource
CALNCLCoreLocationProvider
CALNPersistentTriggeredEventNotificationDataStorage
CALNEventInvitationResponseNotificationSource
bundleForClass:
localizedStringForKey:value:table:
actionWithIdentifier:title:options:
snoozeAction
directionsAction
conferenceCallAction
calendar
numberWithUnsignedInteger:
ttlEventTrackerAlertTypeForTravelAdvisoryTimelinessPeriod:
unsignedIntegerValue
suggestionInfo
trackPseudoEventInitialTimeToLeaveFired
uniqueKey
logEventShowedTimeToLeaveNotificationWithUniqueKey:
transportType
ttlEventTrackerTransportTypeForGEOTransportType:
ttlEventTrackerETATypeForHypothesis:
travelState
ttlEventTrackerTravelStateForHypothesisTravelState:
hasPredictedLocation
sharingStatus
trackEventFiredTTLAlertWithAlertType:transportType:etaType:travelState:hasSuggestedLocation:isOnSharedCalendar:
numberWithBool:
sendFeedbackForPostingLeaveByNotificationForEventWithExternalURL:
sendFeedbackForPostingLeaveNowNotificationForEventWithExternalURL:
recordDisplayOfInitialTimeToLeaveAlertForSourceClientIdentifier:event:hypothesis:travelAdvisoryTimelinessPeriod:foundInAppsEventTracker:suggestionsServiceLogger:ttlEventTracker:
sendFeedbackForPostingNotificationWithTravelAdvisoryTimelinessPeriod:sourceClientIdentifier:travelEngine:
URLWithString:
_launchURLForEventID:hypothesis:isTravelLaunchURL:
_travelLaunchURLForEventID:hypothesis:
absoluteString
stringByAppendingString:
launchURLForOptionalEventID:hypothesis:isTravelLaunchURL:
request
content
categoryIdentifier
hasPrefix:
identifier
initWithArray:
_mailOrganizerActionForNotification:
addObject:
copy
notification
actionIdentifier
isEqualToString:
_mailtoURLForNotification:
userInfo
objectForKeyedSubscript:
isEqual:
class
self
performSelector:
performSelector:withObject:
performSelector:withObject:withObject:
isProxy
isKindOfClass:
isMemberOfClass:
conformsToProtocol:
respondsToSelector:
retain
release
autorelease
retainCount
zone
hash
superclass
description
debugDescription
updatedActionsForNotification:existingActions:
launchURLForResponse:
init
count
emptyDiff
initWithAddedRecords:removedRecords:modifiedRecords:
addedRecords
removedRecords
modifiedRecords
stringWithFormat:
diffWithAddedRecords:removedRecords:modifiedRecords:
.cxx_destruct
_addedRecords
_removedRecords
_modifiedRecords
dictionaryWithCapacity:
countByEnumeratingWithState:objects:count:
sourceIdentifier
sourceClientIdentifier
initWithSourceIdentifier:sourceClientIdentifier:
setObject:forKeyedSubscript:
removeObjectForKey:
allKeys
containsObject:
allValues
diffOldRecords:withNewRecords:filteredBySourceClientIDs:
isEqualForDiffingPurposesToContent:
wrappedStorage
addNotificationRecord:
notificationRecords
removeNotificationRecordsPassingTest:
initWithWrappedStorage:
setWrappedStorage:
_wrappedStorage
defaultCategory
removeRecordWithSourceIdentifier:sourceClientIdentifier:
updateRecord:
addRecord:
fetchRecordsWithSourceIdentifier:
applyDiff:toNotificationManager:
refreshNotificationManager:withNotificationRecords:forSourceWithIdentifier:filteredBySourceClientIDs:
launchURL
expirationDate
eventInvitationNotification
eventRepresentationDictionary
isDelegate
sourceTitle
initWithSourceClientIdentifier:launchURL:expirationDate:eventInvitationNotification:eventRepresentationDictionary:isDelegate:sourceTitle:sourceIdentifier:
_isDelegate
_sourceClientIdentifier
_launchURL
_expirationDate
_eventInvitationNotification
_eventRepresentationDictionary
_sourceTitle
_sourceIdentifier
array
componentsJoinedByString:
bundle
categoryWithIdentifier:actions:hiddenPreviewsBodyPlaceholder:options:
arrayWithObjects:count:
dataSource
fetchSharedCalendarInvitationResponseNotificationSourceClientIdentifiers:
contentForNotificationWithSourceClientIdentifier:
initWithSourceIdentifier:sourceClientIdentifier:content:
notificationManager
fetchSharedCalendarInvitationResponseNotificationWithSourceClientIdentifier:
contentForNotificationWithInfo:
calendarNotification
title
soundWithAlertType:
setTitle:
setBody:
setCategoryIdentifier:
setSound:
iconIdentifierProvider
date
currentCalendar
identifierForIconWithDate:inCalendar:
setIconIdentifier:
setSummaryArgument:
updateSubtitleAndThreadIdentifierOnNotificationContent:forDelegateSourceWithTitle:identifier:
sourceEventRepresentationProvider
eventRepresentationDictionaryForResponseNotificationWithTitle:message:
setEventRepresentationDictionary:onNotificationContent:
setLegacyIdentifierForCalendarNotification:onNotificationContent:
notificationRecord
clearSharedCalendarInvitationResponseWithSourceClientIdentifier:
didReceiveResponse:
refreshNotifications:
categories
initWithDataSource:notificationManager:iconIdentifierProvider:sourceEventRepresentationProvider:
_dataSource
_notificationManager
_iconIdentifierProvider
_sourceEventRepresentationProvider
date:representsLatenessForHypothesis:
date:representsApproachingDepartureDateForHypothesis:
estimatedTravelTime
ttlEventTrackerAlertTypeForDate:hypothesis:
trackDirectionsEngagedForTTLAlertWithAlertType:transportType:etaType:hasSuggestedLocation:isOnSharedCalendar:
trackDirectionsEngagedForNotificationUsingTTLEventTracker:hypothesis:lastFireTimeOfAlertOffsetFromTravelTime:hasSuggestedLocation:isOnSharedCalendar:
alloc
initWithIdentifier:actions:hiddenPreviewsBodyPlaceholder:options:categorySummaryFormat:
actions
options
hiddenPreviewsBodyPlaceholder
categorySummaryFormat
isEqualToCategory:
categoryWithIdentifier:actions:hiddenPreviewsBodyPlaceholder:options:categorySummaryFormat:
copyWithZone:
_identifier
_actions
_options
_hiddenPreviewsBodyPlaceholder
_categorySummaryFormat
conflictDetails
eventURI
initWithSourceClientIdentifier:launchURL:expirationDate:conflictDetails:eventInvitationNotification:eventRepresentationDictionary:eventURI:isDelegate:sourceTitle:sourceIdentifier:
_conflictDetails
_eventURI
_userActivityUserInfoForEvent:
setUserActivityUserInfo:
organizerContactDictionary
organizer
isCurrentUser
setOrganizerForContactDictionary:
initWithEvent:view:forceLocal:
dictionary
updateEventRepresentation:forEvent:
_setHypothesisDataFromNotificationData:inPayload:
_setLastFireTimeOfAlertOffsetFromTravelTimeFromNotificationData:inPayload:
_hypothesisFromPayload:
_lastFireTimeOfAlertOffsetFromTravelTimeFromPayload:
initWithHypothesis:lastFireTimeOfAlertOffsetFromTravelTime:
unarchivedObjectOfClass:fromData:error:
_hypothesisDataForNotificationData:
hypothesis
archivedDataWithRootObject:requiringSecureCoding:error:
lastFireTimeOfAlertOffsetFromTravelTime
payloadForNotificationResponseData:
notificationResponseDataForPayload:
_unNotificationActionFromCALNNotificationAction:
enumerateObjectsUsingBlock:
_calnNotificationActionFromUNNotificationAction:
actionWithIdentifier:title:url:options:
actionWithIdentifier:title:url:
unNotificationActionsFromCALNNotificationActions:
calnNotificationActionsFromUNNotificationActions:
actionWithIdentifier:title:
fetchEventInvitationNotificationWithSourceClientIdentifier:
_notificationBodyForNotificationInfo:contactIdentifier:summaryArgument:
couldBeJunk
startDate
setSectionIdentifier:
setDate:
setExpirationDate:
setDefaultActionURL:
isAllDay
setShouldHideTime:
setPeopleIdentifiers:
dictionaryWithObjects:forKeys:count:
setUserInfo:
fetchEventInvitationNotificationSourceClientIdentifiers:
clearEventInvitationWithSourceClientIdentifier:
acceptEventInvitationWithSourceClientIdentifier:
declineEventInvitationWithSourceClientIdentifier:
tentativeAcceptEventInvitationWithSourceClientIdentifier:
reportEventInvitationAsJunkWithSourceClientIdentifier:
type
dateTimeStringForEventDate:alwaysIncludeDate:allDayEvent:
timeChanged
dateChanged
locationChanged
location
length
displayNameForJunkIdentity:
insertObject:atIndex:
sharedGenerator
conflictStringForConflictDetails:maxTitleLength:
whitespaceCharacterSet
stringByTrimmingCharactersInSet:
initWithDataSource:notificationManager:iconIdentifierProvider:
defaultCategoryIdentifier
couldBeJunkCategoryIdentifier
acceptActionIdentifier
maybeActionIdentifier
declineActionIdentifier
reportJunkActionIdentifier
initWithIdentifier:title:url:
isEqualToAction:
_title
_url
addToScalar:value:domain:
sharedInstance
timeIntervalSinceDate:
isLastFireTimeOfAlert:withinEightMinutesOfDate:
minimumAllowableTravelTime
doesHypothesisSatisfyMinimumAllowableTravelTime:minimumAllowableTravelTime:
travelStateIndicatesTravelingTowardDestination:
doesHypothesisSatisfyMinimumAllowableTravelTime:
recordPostedNotification:
recordNotificationResponse:
initWithCoreLocationProvider:
alarmEngineMonitor
_alertsFired:
addAlarmsFiredObserver:selector:
travelEngine
setDelegate:
timeToLeaveRefreshMonitor
eventID:andAlarmID:fromSourceClientIdentifier:
eventStoreProvider
eventStore
_eventOccurrenceWithURI:
locationsWithoutPrediction
firstObject
endDate
dataSourceEventRepresentationProvider
timeZone
eventRepresentationDictionaryForUpcomingEvent:date:displayTimeZone:
preferredLocation
conferenceURLForDisplay
mailtoURLProvider
mailtoURLForEvent:
hasAlarms
coreLocationManager
allowsLocationAlerts
debugPreferences
forceDisplayOfNewTravelAdvisoryHypotheses
objectID
stringRepresentation
initWithTitle:location:locationWithoutPrediction:startDate:endDate:isAllDay:eventID:eventObjectID:eventRepresentationDictionary:legacyIdentifier:preferredLocation:conferenceURL:mailtoURL:hasSuggestedLocation:eventHasAlarms:allowsLocationAlerts:forceDisplayOfNewTravelAdvisoryHypotheses:
_shouldWithdrawNotificationWithSourceClientIdentifier:event:alarmID:
_eventForEventID:
laterDate:
isEqualToDate:
_alarmForEvent:withAlarmID:
_alarmDateForAlarm:eventStartDate:
_notificationExpirationDateForNullableAlarmDate:eventEndDate:
absoluteDate
isAbsolute
relativeOffset
numberWithDouble:
dateByAddingTimeInterval:
_notificationExpirationDateForAlarmDate:eventEndDate:
dateByAddingDays:inCalendar:
eventIDForSourceClientIdentifier:
setUpTimeToLeaveRefreshTimerWithTriggerDate:eventID:
setUpRefreshTimerWithTriggerDate:eventExternalURL:
_didSetUpTimeToLeaveRefreshTimerForEventID:triggerDate:
removeTimeToLeaveRefreshTimerForEventID:
removeRefreshTimerForEventExternalURL:
cancelHypothesisRefreshRequestForEventWithExternalURL:
_requestHypothesisRefreshInterval
requestHypothesisRefreshAtDate:forEventWithExternalURL:
ceaseRouteMonitoringEventWithEventID:
ceaseMonitoringForEventWithExternalURL:
_handleNotificationActionForSourceClientIdentifier:acknowledgeAlarm:eventActions:
markAsHavingReceivedLocation
snoozeAlarm:withTimeIntervalFromNow:
remoteMutator
setSnoozeTimeInterval:alarm:calendarItem:
stats
isPrediction
ttlEventTracker
sourceClientIdentifierForEventID:alarmID:
delegate
initWithTrigger:alarmID:isOffsetFromTravelTimeStart:hypothesis:
dataSource:triggeredWithSourceClientIdentifier:triggerData:
dataSource:travelEngineEventSignificantlyChangedWithSourceClientIdentifier:
dataSource:travelAdvisoryAuthorizationChanged:
_eventForSourceClientIdentifier:
foundInAppsEventTracker
suggestionsServiceLogger
routeHypothesizerProvider
didDismissUINotification:forPlannedDestination:dismissalType:
_alertFiredForAlertInfo:
_shouldTriggerForAlertInfo:
entityID
_sourceClientIdentifierForAlertInfo:
alarmID
isOffsetFromTravelTimeStart
scheme
acknowledged
allAlarms
externalID
CalSimulatedDateForNow
setAcknowledgedDate:
saveEvent:span:error:
travelEngine:receivedHypothesis:eventExternalURL:
travelEngine:eventSignificantlyChangedWithEventExternalURL:
travelEngine:authorizationChanged:
timeToLeaveRefreshMonitor:refreshTimerFiredForEventExternalURL:
fetchTriggeredEventNotificationInfoWithSourceClientIdentifier:isProtectedDataAvailable:
shouldWithdrawNotificationWithSourceClientIdentifier:
shouldRemoveNotificationMetaDataWithEventID:
shouldRemoveTimeToLeaveRefreshTimerWithRefreshDate:eventID:
notificationExpirationDateForEventID:alarmID:
acknowledgeEventWithSourceClientIdentifier:shouldMarkAsHavingReceivedLocation:
snoozeEventWithSourceClientIdentifier:
handleDirectionsActionWithSourceClientIdentifier:hypothesis:lastFireTimeOfAlertOffsetFromTravelTime:
handleConferenceCallActionWithSourceClientIdentifier:
handleMailOrganizerActionWithSourceClientIdentifier:hypothesis:
eventObjectIDForEventID:
setUpTimeToLeaveRefreshTimerWithTriggerDate:sourceClientIdentifier:
removeTimeToLeaveRefreshTimerForSourceClientIdentifier:
ceaseRouteMonitoringEventForSourceClientIdentifier:
sendFeedbackForAddedTravelAdvisoryNotificationWithSourceClientIdentifier:hypothesis:travelAdvisoryTimelinessPeriod:
sendFeedbackForAddedLeaveNowNotificationWithSourceClientIdentifier:
initWithEventStoreProvider:remoteMutator:dataSourceEventRepresentationProvider:coreLocationProvider:stats:ttlEventTracker:alarmEngineMonitor:travelEngine:foundInAppsEventTracker:suggestionsServiceLogger:routeHypothesizerProvider:timeToLeaveRefreshMonitor:debugPreferences:mailtoURLProvider:
_delegate
_eventStoreProvider
_remoteMutator
_dataSourceEventRepresentationProvider
_coreLocationManager
_stats
_ttlEventTracker
_alarmEngineMonitor
_travelEngine
_foundInAppsEventTracker
_suggestionsServiceLogger
_routeHypothesizerProvider
_timeToLeaveRefreshMonitor
_debugPreferences
_mailtoURLProvider
snoozeInterval
currentCADRouteHypothesis
ekTravelEngineHypothesisFromCADRouteHypothesis:
setUpdateHandler:
setCurrentCADRouteHypothesis:
updateHandler
startHypothesizingWithUpdateHandler:
requestRefresh
stopHypothesizing
didPostUINotification:
state
currentHypothesis
_updateHandler
isLocationEvent
eventID
legacyIdentifier
mapItemURL
conferenceURL
mailtoURL
hasSuggestedLocation
eventHasAlarms
travelAdvisoryTimelinessPeriod
locationWithoutPrediction
initWithTitle:location:locationWithoutPrediction:preferredLocation:startDate:endDate:isAllDay:launchURL:isLocationEvent:eventID:eventObjectID:eventRepresentationDictionary:legacyIdentifier:mapItemURL:conferenceURL:mailtoURL:hasSuggestedLocation:eventHasAlarms:alarmID:isOffsetFromTravelTimeStart:lastFireTimeOfAlertOffsetFromTravelTime:allowsLocationAlerts:hypothesis:travelAdvisoryTimelinessPeriod:forceDisplayOfNewTravelAdvisoryHypotheses:
eventObjectID
_isAllDay
_isLocationEvent
_hasSuggestedLocation
_eventHasAlarms
_isOffsetFromTravelTimeStart
_allowsLocationAlerts
_forceDisplayOfNewTravelAdvisoryHypotheses
_location
_locationWithoutPrediction
_preferredLocation
_startDate
_endDate
_eventID
_eventObjectID
_legacyIdentifier
_mapItemURL
_conferenceURL
_mailtoURL
_alarmID
_lastFireTimeOfAlertOffsetFromTravelTime
_hypothesis
_travelAdvisoryTimelinessPeriod
fetchSharedCalendarInvitationNotificationSourceClientIdentifiers:
fetchSharedCalendarInvitationNotificationWithSourceClientIdentifier:
localizedStringWithFormat:
eventRepresentationDictionaryForSharedCalendarInvitationNotificationWithTitle:message:
clearSharedCalendarInvitationWithSourceClientIdentifier:
joinSharedCalendarWithSourceClientIdentifier:
declineSharedCalendarWithSourceClientIdentifier:
reportSharedCalendarAsJunkWithSourceClientIdentifier:
joinActionIdentifier
categoryIdentifierWithoutReportJunk
categoryIdentifierWithReportJunk
initWithBundleIdentifier:
userNotificationCenter
setNotificationCategories:
notificationCategories
addNotificationRequest:withCompletionHandler:
replaceContentForRequestWithIdentifier:replacementContent:completionHandler:
deliveredNotifications
removeDeliveredNotificationsWithIdentifiers:
removeAllDeliveredNotifications
setWantsNotificationResponsesDelivered
notificationSettings
notificationSettingsForTopics
addNotificationRequest:error:
replaceContentForRequestWithIdentifier:replacementContent:error:
_userNotificationCenter
handleNotificationsChangedNotification:
addNotificationsChangedObserver:selector:
valueForKey:
setWithArray:
sources
_withdrawExpiredNotificationsForSource:
timeIntervalSinceNow
initWithSources:notificationMonitor:notificationManager:
refreshNotifications
inboxNotificationMonitor
_sources
_inboxNotificationMonitor
initWithNotificationRecord:actionIdentifier:originIdentifier:targetConnectionEndpoint:
originIdentifier
targetConnectionEndpoint
responseWithNotificationRecord:actionIdentifier:originIdentifier:targetConnectionEndpoint:
_notificationRecord
_actionIdentifier
_originIdentifier
_targetConnectionEndpoint
UTF8String
hasBeenUnlockedSinceBoot
workQueue
_activate
isActive
activate
setActive:
_deactivate
deactivate
_notificationSourceMapWithNotificationSources:
mutableCopy
setNotificationSourceMap:
_didSetNotificationSources:
arrayWithCapacity:
addObjectsFromArray:
notificationSourceMap
setIsProtectedDataAvailable:
_fetchRecordsWithSourceIdentifier:
storage
indexesOfObjectsPassingTest:
objectsAtIndexes:
_addRecord:
notificationRequestFromNotificationRecord:
analyticsHandler
_updateRecord:
replaceNotificationRequest:error:
_removeRecordWithSourceIdentifier:sourceClientIdentifier:
_notificationRecordResponseFromNotificationResponse:
notificationSourceForSourceIdentifier:
initWithStringRepresentation:
indexOfObjectPassingTest:
objectAtIndex:
receivedNotificationNamed:
didRegisterForAlarms
receivedAlarmNamed:
didRegisterForBackgroundTaskAgentJobs
handleBTAJob:named:
protectedDataDidBecomeAvailable
userNotificationCenter:willPresentNotification:withCompletionHandler:
userNotificationCenter:didReceiveNotificationResponse:withCompletionHandler:
isProtectedDataAvailable
initWithUserNotificationCenter:storage:analyticsHandler:deviceLockObserver:
setNotificationSources:
notificationSources
_notificationRecordWithSourceIdentifier:sourceClientIdentifier:
setStorage:
_active
_isProtectedDataAvailable
_workQueue
_notificationSourceMap
_storage
_analyticsHandler
notificationMapper
calnNotificationFromUNNotification:
_calnNotificationActionIdentifierFromUNNotificationActionIdentifier:
responseWithNotification:actionIdentifier:originIdentifier:targetConnectionEndpoint:
initWithNotificationMapper:
calnNotificationResponseFromUNNotificationResponse:
_notificationMapper
suggestionNotification
initWithSourceClientIdentifier:launchURL:expirationDate:suggestionNotification:
_suggestionNotification
notificationRequestMapper
calnNotificationRequestFromUNNotificationRequest:
notificationWithRequest:date:
_calnNotificationFromUNNotification:
initWithNotificationRequestMapper:
calnNotificationsFromUNNotifications:
_notificationRequestMapper
_initWithIdentifier:content:
isEqualToRequest:
encodeObject:forKey:
decodeObjectOfClass:forKey:
requestWithIdentifier:content:
supportsSecureCoding
encodeWithCoder:
initWithCoder:
_content
initWithSourceIdentifier:sourceClientIdentifier:content:date:shouldPresentAlert:shouldPlaySound:
decodeBoolForKey:
shouldPresentAlert
encodeBool:forKey:
shouldPlaySound
isEqualToRecord:
body
subtitle
sound
alertType
hasAlertContent
allocWithZone:
mutableCopyWithZone:
hasSound
_date
_shouldPresentAlert
_shouldPlaySound
setSourceIdentifier:
setSourceClientIdentifier:
setContent:
setShouldPresentAlert:
setShouldPlaySound:
_allDayFormatter
stringFromDate:
_dateTimeFormatter
localizedStringFromDate:dateStyle:timeStyle:
autoupdatingCurrentLocale
setLocale:
setDateStyle:
setTimeStyle:
setDoesRelativeDateFormatting:
routeHypothesizer
ekTravelEngineHypothesisFromGEORouteHypothesis:
initWithRouteHypothesizer:
_routeHypothesizer
userNotificationCenterWithBundleIdentifier:
initWithNotificationIconCache:
initWithNotificationIconMapper:
initWithNotificationContentMapper:notificationIconMapper:
errorWithDomain:code:userInfo:
notificationRecordFromNotificationRequest:
unNotificationRequestFromCALNNotificationRequest:
calnNotificationCategoriesFromUNNotificationCategories:
_updatedRecord:
notificationContentMapper
unNotificationContentFromCALNNotificationContent:
unNotificationCategoriesFromCALNNotificationCategories:
unNotificationPresentationOptionsFromCALNNotificationPresentationOptions:
notificationResponseMapper
authorizationStatus
numberWithInteger:
_addSettingName:value:toStatsPayload:forTopicIdentifier:
soundSetting
badgeSetting
alertSetting
notificationCenterSetting
lockScreenSetting
carPlaySetting
alertStyle
showPreviewsSetting
enumerateKeysAndObjectsUsingBlock:
_statsPayloadKeyForSettingName:topicIdentifier:
userNotificationCenter:openSettingsForNotification:
collectSettingsStats:
initWithBundleIdentifier:userNotificationCenterFactory:storage:notificationIconCache:
_notificationContentMapper
_notificationResponseMapper
sectionIdentifier
defaultActionURL
iconIdentifier
shouldHideTime
shouldSuppressSyncDismissalWhenRemoved
peopleIdentifiers
threadIdentifier
summaryArgument
summaryArgumentCount
isEqualToContent:
_initWithTitle:subtitle:body:categoryIdentifier:sectionIdentifier:date:expirationDate:defaultActionURL:iconIdentifier:shouldHideTime:shouldSuppressSyncDismissalWhenRemoved:peopleIdentifiers:sound:userInfo:threadIdentifier:summaryArgument:summaryArgumentCount:
encodeInteger:forKey:
decodeObjectOfClasses:forKey:
setWithObjects:
decodeIntegerForKey:
_subtitle
_body
_categoryIdentifier
_sectionIdentifier
_defaultActionURL
_iconIdentifier
_shouldHideTime
_shouldSuppressSyncDismissalWhenRemoved
_peopleIdentifiers
_sound
_userInfo
_threadIdentifier
_summaryArgument
_summaryArgumentCount
setSubtitle:
setShouldSuppressSyncDismissalWhenRemoved:
setThreadIdentifier:
setSummaryArgumentCount:
authorizationStatusForBundleIdentifier:
authorizationStatusForBundle:
markAsHavingReceivedLocationWithEffectiveBundleIdentifier:
notificationFromNotificationRecord:
notificationRecordsFromNotifications:
fetchEventCanceledNotificationSourceClientIdentifiers:
initWithCapacity:
fetchEventCanceledNotificationWithSourceClientIdentifier:
inboxNotificationProvider
eventNotificationReferences
hiddenFromNotificationCenter
sourceClientIdentifierForNotification:
notificationReferenceProvider
notificationReferenceOfType:withSourceClientIdentifier:inEventStore:withNotificationReferenceProvider:
_notificationInfoFromNotification:inEventStore:
clearEventInvitationOfType:withSourceClientIdentifier:inEventStore:withNotificationReferenceProvider:
eventForNotificationOfType:withSourceClientIdentifier:inEventStore:withNotificationReferenceProvider:
deleteEvent:inEventStore:withSpan:usingRemoteMutator:error:
expirationDateForEventInvitation:
eventForEventInvitation:inEventStore:
source
uniqueIdentifier
launchURLForEvent:
eventRepresentationDictionaryForInvitationNotification:event:date:endDate:timeZone:
fetchEventCanceledNotifications
clearCanceledEventNotificationWithSourceClientIdentifier:
deleteCanceledEventWithSourceClientIdentifier:
initWithEventStoreProvider:inboxNotificationProvider:notificationReferenceProvider:remoteMutator:dataSourceEventRepresentationProvider:
_inboxNotificationProvider
_notificationReferenceProvider
initWithPath:
defaultManager
fileExistsAtPath:
_loadNotificationsWithError:
_saveNotificationsWithError:
dataWithContentsOfFile:
unarchivedObjectOfClasses:fromData:error:
inMemoryStorage
path
notificationRecordsFromPersistentNotificationStorageWithPath:error:
writeToFile:options:error:
persistentNotificationStorageWithPath:error:
_path
_inMemoryStorage
externalURL
emailAddress
mailAccounts
canSendMail
URLFragmentAllowedCharacterSet
removeCharactersInString:
stringByAddingPercentEncodingWithAllowedCharacters:
initWithMailAccounts:
_mailAccounts
_allowedCharacterSetForEncodingNotificationIdentifierComponents
componentsSeparatedByString:
objectAtIndexedSubscript:
stringByRemovingPercentEncoding
characterSetWithCharactersInString:
invertedSet
_constructNotificationIdentifierStringRepresentationFromComponents:
initWithSourceIdentifier:sourceClientIdentifier:stringRepresentation:
_deconstructNotificationIdentifierStringRepresentationIntoComponents:
isEqualToNotificationIdentifier:
_stringRepresentation
remoteMutatorInternal
setParticipantStatus:span:event:
deleteEvent:span:
deleteEvent:withSpan:
initWithBackingRemoteMutator:
_remoteMutatorInternal
initWithNotificationRequest:date:
isEqualToNotification:
_request
owner
deleteActionIdentifier
defaultWorkspace
openUserActivity:withApplicationProxy:options:completionHandler:
openUserActivity:options:completionHandler:
remoteClientWithMachServiceName:
addUITriggerRemoteProvider:forUITriggerName:englishUsage:
_fakeTriggeredEventNotificationContentWithSourceClientIdentifier:
_fakeEventInvitationNotificationContentWithDictionary:
_fakeInviteModifiedNotificationContentWithDictionary:
_fakeInviteCanceledNotificationContentWithDictionary:
_fakeAttendeeRepliedNotificationContentWithDictionary:
_fakeSharedCalendarInvitationNotificationContentWithDictionary:
_fakeSharedCalendarInviteReplyNotificationContentWithDictionary:
_fakeSharedCalendarEventAddedNotificationContentWithDictionary:
_fakeSharedCalendarEventUpdatedNotificationContentWithDictionary:
_fakeSharedCalendarEventDeletedNotificationContentWithDictionary:
_fakeNextEventNotificationContentWithSourceClientIdentifier:
dateWithTimeIntervalSinceNow:
triggeredEventNotificationSource
contentForSourceClientIdentifier:sourceNotificationInfo:isProtectedDataAvailable:
_fakeInvitationNotificationInfoWithDictionary:type:sourceClientIdentifier:
eventInvitationNotificationSource
setTimeChanged:
setDateChanged:
setLocationChanged:
_fakeEventCanceledNotificationInfoWithDictionary:
eventCanceledNotificationSource
_fakeAttendeeRepliedNotificationInfoWithDictionary:
eventInvitationResponseNotificationSource
_fakeSharedCalendarInvitationNotificationInfoWithDictionary:
sharedCalendarInvitationNotificationSource
_fakeSharedCalendarInviteReplyNotificationInfoWithDictionary:
sharedCalendarInvitationResponseNotificationSource
_fakeCalendarResourceChangedNotificationInfoWithDictionary:sourceClientIdentifier:notificationType:resourceChangeType:
calendarResourceChangedNotificationSource
_fakeNextEventNotificationInfoNextEvent:
initWithType:
UUID
UUIDString
setURL:
setAlerted:
setParticipationStatus:
setHiddenFromNotificationCenter:
setName:
setEmailAddress:
setLocation:
setStartDate:
doubleValue
setEndDate:
_fakeInvitationNotificationWithDictionary:type:
attendeeWithName:emailAddress:phoneNumber:url:
setCommentChanged:
setComment:
setParticipantStatus:
initWithParticipant:forEvent:
setAttendees:
setAttendeeReplyChanged:
initWithSourceClientIdentifier:calendarNotification:isDelegate:sourceTitle:sourceIdentifier:
setStatus:
setChangeType:
setCalendarName:
allDay
expirationDateForNotification:
initWithSourceClientIdentifier:calendarNotification:changeType:date:allDay:timeZone:expirationDate:launchURL:isDelegate:sourceTitle:sourceIdentifier:
predicateForEventsWithStartDate:endDate:calendars:
eventsMatchingPredicate:
calendarItemIdentifier
timeIntervalSinceReferenceDate
handleUITriggerWithName:dictionary:reason:completion:
initWithNotificationManager:eventStoreProvider:triggeredEventNotificationSource:eventInvitationNotificationSource:eventInvitationResponseNotificationSource:eventCanceledNotificationSource:sharedCalendarInvitationNotificationSource:sharedCalendarInvitationResponseNotificationSource:calendarResourceChangedNotificationSource:
uiTriggerClient
_uiTriggerClient
_triggeredEventNotificationSource
_eventInvitationNotificationSource
_eventInvitationResponseNotificationSource
_eventCanceledNotificationSource
_sharedCalendarInvitationNotificationSource
_sharedCalendarInvitationResponseNotificationSource
_calendarResourceChangedNotificationSource
_notificationRecords
recordMap
_addNotificationRecord:
_removeNotificationRecordsPassingTest:
_recordMap
setUserInfoValue:forKey:
syntheticRouteHypothesizerCache
addSyntheticRouteHypothesizer:forEventExternalURL:
removeSyntheticRouteHypothesizerForEventExternalURL:
hypothesizerForPlannedDestination:
createdRouteHypothesizer:forEventExternalURL:
removedRouteHypothesizerForEventExternalURL:
_syntheticRouteHypothesizerCache
initWithNotification:actionIdentifier:originIdentifier:targetConnectionEndpoint:
isEqualToResponse:
_notification
_pathForCachedIconWithIdentifier:
queue
_addIconWithIdentifier:toCacheAtPath:
stringByDeletingLastPathComponent
_iconCacheDirectory
lastPathComponent
pathExtension
stringByDeletingPathExtension
notificationIconProvider
pngDataForIconWithIdentifier:
_createCacheDirectoryIfNeeded
createDirectoryAtPath:withIntermediateDirectories:attributes:error:
stringByAppendingPathExtension:
stringByAppendingPathComponent:
initWithNotificationIconProvider:
cachedIconPathForIconIdentifier:
iconIdentifierForCachedIconPath:
_notificationIconProvider
_queue
trigger
_trigger
setRegisteredForBackgroundTaskAgentJobs:
_refreshTimerFiredForEventExternalURL:
isRegisteredForBackgroundTaskAgentJobs
refreshDateWithIdentifier:
_refreshTimerBTAJobNameForEventExternalURL:
cStringUsingEncoding:
addRefreshDate:withIdentifier:
removeRefreshDateWithIdentifier:
stringValue
stringWithUTF8String:
initWithStorage:
_registeredForBackgroundTaskAgentJobs
alarmEngine
start
handleDarwinNotification:
notificationCenter
addObserver:selector:name:object:
removeObserver:name:object:
removeAlarmsFiredObserver:
initWithAlarmEngine:notificationCenter:
_notificationCenter
_alarmEngine
notificationDataMap
removeAllObjects
notificationData
notificationDataWithIdentifier:
addNotificationData:withIdentifier:
removeNotificationDataWithIdentifier:
removeNotificationData
_notificationDataMap
sharedConnection
respondToSharedCalendarInvite:forCalendarWithID:accountID:queue:completionBlock:
reportSharedCalendarInviteAsJunkForCalendarWithID:accountID:queue:completionBlock:
_parseIconIdentifier:intoDate:calendar:type:
mainScreen
scale
initWithSize:scale:
setShouldApplyMask:
initWithDate:calendar:format:
imageForImageDescriptor:
CGImage
imageWithCGImage:scale:orientation:
intValue
calendarWithIdentifier:
localeWithLocaleIdentifier:
setCalendar:
setDay:
setWeekday:
setMonth:
components:fromDate:
month
calendarIdentifier
_identifierEncodingAllowedCharacters
locale
localeIdentifier
changeType
numberWithUnsignedInt:
_allDay
_changeType
_calendarNotification
_timeZone
initWithOptions:eventStoreGetter:
defaultCenter
notificationMonitor
notificationReferences
notificationCount
stop
eventNotificationCount
initWithEventStoreProvider:
removeNotificationsChangedObserver:
addNotificationCountChangedObserver:selector:
removeNotificationCountChangedObserver:selector:
_notificationMonitor
coreLocationProvider
bundleIdentifier
_coreLocationProvider
numberWithInt:
reminders
modules
travelAdvisoryTimelinessAuthority
updateWithHypothesis:
period
startOfLeaveNowPeriod
startOfRunningLatePeriod
periodForHypothesis:
startOfLeaveNowPeriodForHypothesis:
startOfRunningLatePeriodForHypothesis:
initWithTravelAdvisoryTimelinessAuthority:
_travelAdvisoryTimelinessAuthority
_bundle
brandedOriginDescriptionStringWithAppName:
fetchSuggestedEventNotificationsWithSourceClientIdentifier:
compare:
sortUsingSelector:
coalescedInfoForSuggestionNotifications:
descriptionText
originAppName
lastObject
allDescriptionStringsWithOptions:
fetchSuggestedEventNotificationObjectIDs
_sourceClientIdentifiersForObjectIDs:
fetchSuggestedEventNotificationWithObjectID:
allObjects
clearSuggestedEventNotificationWithSourceClientIdentifier:
confirmSuggestedEventWithSourceClientIdentifier:
ignoreSuggestedEventWithSourceClientIdentifier:
deleteCanceledSuggestedEventWithSourceClientIdentifier:
defaultSuggestedEventCategoryIdentifier
coalescedSuggestedEventCategoryIdentifier
suggestedEventCanceledCategoryIdentifier
confirmActionIdentifier
ignoreActionIdentifier
alertTopic
setAlertTopic:
unNotificationSoundFromCALNNotificationSound:
calnNotificationSoundFromUNNotificationSound:
removeEvent:span:error:
_mapItemURLForEventLocation:eventStartDate:hypothesis:
routing
_mapItemURLLaunchOptionsForHypothesis:routing:eventStartDate:
mapKitHandle
geoLocation
_urlForMapItemHandles:options:
_eventLocationFromStructuredLocation:
_mapItemNameFromEventLocation:
address
_urlForLocation:address:label:options:
stringByReplacingOccurrencesOfString:withString:
_directionsModeForHypothesis:routing:
_mapItemURLLaunchOptionsForDirectionsMode:eventDate:isFromTimeToLeaveNotification:
_directionsModeForTransportType:
_directionsModeForRouting:
routingModeEnumForCalRouteType:
_directionsModeForLocationRoutingMode:
mapItemURLForOptionalEventLocation:eventStartDate:hypothesis:
_transitionForAlarmFiredForSourceClientIdentifier:sourceNotificationInfo:oldNotificationData:
_transitionForTravelAdviceReceivedForSourceClientIdentifier:sourceNotificationInfo:oldNotificationData:
_transitionForTimeToLeaveRefreshTimerFiredForSourceClientIdentifier:sourceNotificationInfo:oldNotificationData:
_shouldModifyForAlarmFiredForSourceClientIdentifier:sourceNotificationInfo:oldNotificationData:
_transitionForAlarmFiredForNewAlarmID:optionalOldAlarmID:
lastTimeNotificationAdded
dateProvider
_transitionForAlarmFiredForNewAlarmID:oldAlarmID:
_shouldRemoveNotificationForTravelAdviceReceivedForSourceClientIdentifier:sourceNotificationInfo:oldNotificationData:
_shouldAddNotificationForTravelAdviceReceivedForSourceClientIdentifier:sourceNotificationInfo:oldNotificationData:
_timeToLeaveStateAlreadyDisplayedBasedOnSourceNotificationInfo:oldNotificationData:
travelAdvisoryAuthority
hasDisplayedLeaveNowMessage
hasDisplayedLeaveByMessage
hasDisplayedRunningLateMessage
transitionForSourceClientIdentifier:sourceNotificationInfo:oldNotificationData:trigger:
initWithTravelAdvisoryAuthority:dateProvider:
_travelAdvisoryAuthority
_dateProvider
upcomingEventNotificationRepresentationWithEvent:date:displayTimeZone:
dictionaryRepresentation
invitationNotificationRepresentationWithNotification:event:date:endDate:timeZone:
resourceChangeNotificationWithNotification:message:date:endDate:timeZone:
responseNotificationWithTitle:message:
initWithDictionary:
updateUpcomingEventNotificationWithHypothesisMessage:
eventRepresentationDictionaryForResourceChangeNotification:message:date:endDate:timeZone:
updateEventRepresentationDictionary:withHypothesisMessage:
conservativeDepartureDate
conservativeTravelTime
suggestedDepartureDate
aggressiveDepartureDate
aggressiveTravelTime
routeName
supportsLiveTraffic
currentTrafficDensity
trafficDensityDescription
initWithTransportType:conservativeDepartureDate:conservativeTravelTime:suggestedDepartureDate:estimatedTravelTime:aggressiveDepartureDate:aggressiveTravelTime:routeName:supportsLiveTraffic:currentTrafficDensity:trafficDensityDescription:travelState:
stateChangedNotificationName
_stopInternal
dealloc
_registerForNotificationObservation
_installPeriodicRefreshTimer
_installLocationManager
_refreshIfNeeded
_uninstallLocationManager
_unregisterAllAgendaEntries
_unregisterForNotificationObservation
_uninstallSyncYieldTimer
_uninstallPeriodicRefreshTimer
objectForKey:
requestHypothesisRefreshAtDate:
cancelHypothesisRefreshRequest
shared
preventMarkingTravelAdvisoryEntriesAsDismissed
setDismissed:
reset
_calDatabaseChangedNotificationReceived
_calSyncClientBeginningMultiSaveNotificationReceived
_calSyncClientFinishedMultiSaveNotificationReceived
_enableTravelAdvisoriesForAutomaticBehaviorNotificationReceived
_significantTimeChangeNotificationReceived
_eventKitFeatureSetChanged
_updateDatabaseEncryptionState
_suggestEventLocationsSettingChanged
btaJobName
_periodicRefreshTimerFired:
throttle
_travelAgendaTimeWindowInterval
travelEligibleEvents:fromStartDate:untilEndDate:
calendarsForEntityType:
isIgnoringEventAlerts
travelEligibleEventsInCalendars:startDate:endDate:
authorizedInternal
sendFeedbackForPostingLeaveByNotification
_sendFeedbackForPostingNotificationForEventWithExternalURL:feedback:
sendFeedbackForPostingLeaveNowNotification
authorizationStatusAsString:
isLocationManagerStatusAuthorized:
postNotificationName:object:userInfo:deliverImmediately:
setAuthorizedInternal:
authorizationChangedBlock
_installSyncYieldTimer
dataIsAccessible
fuzzyMaximumInitialUpdateIntervalBeforeStartDate
_periodicRefreshInterval
initWithTimeInterval:serviceIdentifier:target:selector:userInfo:
setMinimumEarlyFireProportion:
scheduleInQueue:
invalidate
originalEvent
CalIsBeforeOrSameAsDate:
CalIsAfterDate:
keysOfEntriesPassingTest:
removeObjectsForKeys:
_authorizedToAcquireLocation
setTimeout:
setPurgingAllowed:
setCreationBlock:
acquireCachedEventStoreOrCreate:
_trimAgendaEntriesBeforeDate:andAfterDate:
shouldIgnoreNotificationForEvent:
travelStartLocation
geoTransportTypeAsString:
geoTransportTypeForCalLocationRoutingMode:
initWithRouteHypothesizerProvider:
latestHypothesis
adviceBlock
setUpdateBlock:
eventSignificantlyChangedBlock
setEntrySignificantlyChangedBlock:
setObject:forKey:
dismissed
structuredLocation
locationString
setEventExternalURL:
setTransportTypeOverride:
setLocationString:
setGeoLocation:
locationIsAConferenceRoom
setLocationIsAConferenceRoom:
setLocationMapKitHandle:
automaticLocationGeocodingAllowed
setAutomaticGeocodingAllowed:
updateWithOriginalEvent:
lastSystemWakeDate
initWithEffectiveBundle:delegate:onQueue:
requestedDarwinNotifications
requestRefreshTimeInterval
travelEligibleEventsInEventStore:
locationManager:didUpdateToLocation:fromLocation:
locationManager:didUpdateLocations:
locationManager:didUpdateHeading:
locationManagerShouldDisplayHeadingCalibration:
locationManager:didDetermineState:forRegion:
locationManager:didRangeBeacons:inRegion:
locationManager:rangingBeaconsDidFailForRegion:withError:
locationManager:didRangeBeacons:satisfyingConstraint:
locationManager:didFailRangingBeaconsForConstraint:error:
locationManager:didEnterRegion:
locationManager:didExitRegion:
locationManager:didFailWithError:
locationManager:monitoringDidFailForRegion:withError:
locationManager:didChangeAuthorizationStatus:
locationManager:didStartMonitoringForRegion:
locationManagerDidPauseLocationUpdates:
locationManagerDidResumeLocationUpdates:
locationManager:didFinishDeferredUpdatesWithError:
locationManager:didVisit:
authorized
setAdviceBlock:
setAuthorizationChangedBlock:
setEventSignificantlyChangedBlock:
_callbackQueue
_syncYieldTimer
_running
_needsRefresh
_databaseIsEncryptedAndUnreadable
_yieldingToSync
_eventExternalURLsToAgendaEntries
_periodicRefreshTimer
_locationManager
_timedEventStorePurger
_authorizedInternal
_adviceBlock
_authorizationChangedBlock
_eventSignificantlyChangedBlock
_pathForSentinelFile
createFileAtPath:contents:attributes:
shouldBehaveAsRestart
createSentinelFileIfNeeded
needsAlert
predicateForEventsCreatedFromSuggestionWithExtractionGroupIdentifier:
eventIdentifier
_acknowledgeSuggestedEventWithSourceClientIdentifier:accept:
_eventForSourceClientIdentifier:eventStore:
_clearSuggestedEventNotificationWithObjectID:
resourceChangeFromEventStore:
markResourceChangeAlertedAndSave:error:
acceptSuggestedEvent:
logEventConfirmedNotificationWithUniqueKey:
logEventRejectedNotificationWithUniqueKey:
deleteSuggestedEvent:
launchURLForNotification:inEventStore:
fetchSuggestedEventNotifications
initWithEventStoreProvider:inboxNotificationProvider:notificationReferenceProvider:
_unNotificationCategoryFromCALNNotificationCategory:
_calnNotificationCategoryFromUNNotificationCategory:
_unNotificationCategoryOptionsFromCALNNotificationCategoryOptions:
categoryWithIdentifier:actions:intentIdentifiers:hiddenPreviewsBodyPlaceholder:categorySummaryFormat:options:
_calnNotificationCategoryOptionsFromUNNotificationCategoryOptions:
_openApplicationOptionsForResponse:
setFrontBoardOptions:
setTargetConnectionEndpoint:
setSensitive:
openURL:configuration:completionHandler:
openURL:response:
_setBodyForUNMutableNotificationContent:usingCALNNotificationContent:
_unNotificationIconFromCALNNotificationContent:
setIcon:
_setPeopleIdentifiersForUNMutableNotificationContent:usingCALNNotificationContent:
_setSoundForUNMutableNotificationContent:usingCALNNotificationContent:
_setSubtitleForUNMutableNotificationContent:usingCALNNotificationContent:
_setSummaryArgumentForUNMutableNotificationContent:usingCALNNotificationContent:
_setThreadIdentifierForUNMutableNotificationContent:usingCALNNotificationContent:
_setTitleForUNMutableNotificationContent:usingCALNNotificationContent:
_setTopicIdentifiersForUNMutableNotificationContent:usingCALNNotificationContent:
_setUserInfoForUNMutableNotificationContent:usingCALNNotificationContent:
setShouldBackgroundDefaultAction:
_iconIdentifierFromUNNotificationContent:
topicIdentifiers
_sectionIdentifierFromTopicIdentifiers:
_calnNotificationSoundFromUNNotificationContent:
setTopicIdentifiers:
notificationIconMapper
unNotificationIconFromIconIdentifier:
icon
iconIdentifierFromUNNotificationIcon:
calnNotificationContentFromUNNotificationContent:
_notificationIconMapper
_contentForNotificationWithSourceClientIdentifier:
bodyDescriptionProvider
bodyForSourceClientIdentifier:sourceNotificationInfo:
_eventRepresentationDictionaryWithSourceNotificationInfo:hypothesisMessage:
setLegacyIdentifier:onNotificationContent:
_notificationResponseDataForSourceNotificationInfo:
_setNotificationResponseData:onNotificationContent:
_refreshNotifications:
_didReceiveResponse:
boolValue
_handleDirectionsActionWithResponse:
_handleConferenceCallActionWithResponse:
_handleMailOrganizerActionWithResponse:
_shouldCeaseRouteMonitoringEventForSourceClientIdentifier:
_clearTravelAdvisoryFromNotificationMetaDataForSourceClientIdentifier:
_triggeredWithSourceClientIdentifier:triggerData:
_travelAdvisoryAuthorizationChanged:
_travelEngineEventSignificantlyChangedWithSourceClientIdentifier:
_existingRecordMatchingEventForSourceClientIdentifier:existingRecords:
_existingNotificationDataMatchingEventForSourceClientIdentifier:
_sourceNotificationInfoForSourceClientIdentifier:notificationInfo:existingNotificationData:hypothesis:shouldClearHypothesis:isOffsetFromTravelTimeStart:isForContentCreation:
triggerHelper
shouldTriggerForSourceClientIdentifier:trigger:sourceNotificationInfo:oldNotificationData:
_updateTimeToLeaveRefreshTimerForSourceClientIdentifier:hypothesis:allowsLocationAlerts:
_updatedSourceNotificationInfoForContentCreation:
transitionProvider
descriptionForTransition:
_resolvedSourceClientIdentifierForNewSourceClientIdentifier:oldSourceClientIdentifier:
_addRecord:sourceNotificationInfo:existingNotificationData:trigger:transition:now:
_shouldUpdateStoredNotificationDataGivenTransition:
_updateStoredNotificationDataForSourceClientIdentifier:sourceNotificationInfo:existingNotificationData:transition:now:
_existingRecordMatchingEventForSourceClientIdentifier:
_resetStoredNotificationDataTimeToLeaveDisplayStateForSourceClientIdentifier:
_clearTravelAdvisoryHypotheses
_updateNotification:shouldClearHypothesis:
_updateTimeToLeaveRefreshTimerForSourceClientIdentifier:
_mayCeaseRouteMonitoringForExistingNotificationData:
_calnTravelAdvisoryTimelinessPeriodFromEKTravelAvisoryTimelinessPeriod:
_travelAdvisoryTimelinessPeriodForHypothesis:
dateBySubtractingCalSimulatedOffset
_refreshNotificationMetaDataWithObjectIDs:
_refreshTimeToLeaveRefreshTimersWithObjectIDs:
_refreshNotificationRecordsWithObjectIDs:
_notificationWithSourceClientIdentifier:affectedByChangesToObjects:
_refreshNotification:
notificationDataStorage
_itemWithEventID:affectedByChangesToObjects:
_refreshNotificationMetaData:eventID:
_shouldRemoveNotificationMetaData:eventID:
_removeStoredNotificationDataForEventWithEventID:
_isNotificationMetaDataExpired:eventID:
timeToLeaveRefreshStorage
refreshDates
_refreshTimeToLeaveRefreshTimerWithRefreshDate:eventID:
_shouldRemoveTimeToLeaveRefreshTimerWithRefreshDate:eventID:
_contentForNotificationWithSourceClientIdentifier:shouldClearHypothesis:
_sourceNotificationInfoForSourceClientIdentifier:shouldClearHypothesis:isForContentCreation:
alarmIDForSourceClientIdentifier:
mapItemURLProvider
_updatedLastFireTimeOfAlertOffsetFromTravelTimeGivenIsOffsetFromTravelTime:
_sourceClientIdentifier:matchesEventForSourceClientIdentifier:
_addEventURL:mappingToEventObjectID:
_addNotificationDataForSourceClientIdentifier:sourceNotificationInfo:existingNotificationData:transition:now:
_notificationAddedWithSourceClientIdentifier:sourceNotificationInfo:trigger:
_launchURLForResponse:
urlHandler
_notificationResponseDataForRecord:
setAlarmID:
setIsOffsetFromTravelTimeStart:
setLastFireTimeOfAlertOffsetFromTravelTime:
setHypothesis:
setHasDisplayedLeaveByMessage:
setHasDisplayedLeaveNowMessage:
setHasDisplayedRunningLateMessage:
setLastTimeNotificationAdded:
_notificationDataForSourceNotificationInfo:existingNotificationData:transition:now:
_addNotificationData:forSourceClientIdentifier:
_updatedNotificationDataResettingTimeToLeaveDisplayState:
_mapItemURLForNotification:
_conferenceURLForNotification:
initWithDataSource:notificationManager:iconIdentifierProvider:sourceEventRepresentationProvider:triggerHelper:transitionProvider:bodyDescriptionProvider:travelAdvisoryTimelinessAuthority:dateProvider:notificationDataStorage:urlHandler:mapItemURLProvider:timeToLeaveRefreshStorage:
_shouldRemoveStoredNotificationDataGivenShouldWithdrawNotification:hasExistingTravelInformation:mayCeaseRouteMonitoring:
eventURLToObjectIDMap
_triggerHelper
_transitionProvider
_bodyDescriptionProvider
_notificationDataStorage
_timeToLeaveRefreshStorage
_eventURLToObjectIDMap
_urlHandler
_mapItemURLProvider
sourceClientIdentifier:matchesEventForSourceClientIdentifier:
snoozeActionIdentifier
directionsActionIdentifier
conferenceCallActionIdentifier
mailOrganizerActionIdentifier
mapItemURLUserInfoKey
conferenceURLUserInfoKey
_killSyncTimer
remindersNotificationsEnabled
_updateRegionMonitoring:
_killTimer
sideTableContext
settingForKey:
performBlockAndWait:
_timeZoneChanged:
_simulatedOffsetChanged:
_isRegionMonitoringSupported
_shouldRefireAlarms
_shouldUseCoreRoutine
_allowConservativeEntry
areLocationsCurrentlyEnabled
_removeAllFencesSynch
_databaseChanged
_syncDidStart
_syncDidEnd
_timeDidChangeSignificantly
_locationDaemonDidLaunch
_protectedDataDidBecomeAvailable
_calendarNotificationSettingChanged
_motionUpdatedWithConnectionState:
_updateWithForceForAlarmTable:forFences:
_isDataProtected
_rescheduleTimer
dateWithTimeIntervalSince1970:
_timerFired
_eventStore
_haveAlarmsChanged:
_populateAlarmTable:
_adjustFences:
_removeStaleRefiringAlarmsWithEventStore:
sequenceNumber
changesSinceSequenceNumber:
delayedProximityAlarms
refiringAlarms
deleteAllAlarms
insertNewAlarm
ownerID
ownerDate
ownerURI
setEntityURI:
setEntityID:
setEntityDate:
ownerTimeZone
name
setEntityTimeZone:
fireDate
setFireTime:
setExternalID:
acknowledgedDate
setRefiring:
fireTime
objectIDWithEntityType:rowID:
objectWithObjectID:
insertObject:
setSetting:forKey:
save:
standardUserDefaults
synchronize
persistentDomainForName:
CalIsBeforeDate:
_dateFormatter
_storeAlarms:nextScheduleLimit:eventStore:
_populateFinished
alarmOccurrencesBetweenStartDate:endDate:inCalendars:completion:
nextAlarmFireTime
dateWithTimeIntervalSinceReferenceDate:
_installTimerWithFireDate:
setDateFormat:
dictionaryWithObject:forKey:
postNotificationName:object:userInfo:
alarmsBetweenStartDate:endDate:
arrayWithArray:
setWithCapacity:
initWithCalendarIdentifier:
setTimeZone:
entityTimeZone
timeZoneWithName:
eventForUID:occurrenceDate:
entityDate
components:fromDate:toDate:options:
dateByAddingComponents:toDate:options:
_publisherBulletinIDForTask:
entityURI
initWithString:
dateWithTimeInterval:sinceDate:
_initWithUserActivityData:
refiring
_alertInfoAlarmIDFromSideAlarm:
initWithTitle:location:date:endDate:timeZone:allDay:tentative:publisherBulletinID:entityID:appLink:action:proximity:externalID:acknowledged:dismissalID:alarmID:isOffsetFromTravelTimeStart:refiring:pseudoEvent:
setMapKitHandle:
setHasGeoLocationCoordinates:
setGeoLocationCoordinates:
setHasOrganizerThatIsNotCurrentUser:
setOrganizerEmailAddress:
setStartLocationRouting:
setLocationAddress:
setConferenceURL:
setFireDate:
_notifyAlarmsFired:
deleteObject:
rowID
publicObjectWithObjectID:
_isAlarmAcknowledgedWithAcknowledgedDate:fireDate:
completionDate
dueDate
logUnexpectedRemindersCall:
_syncTimerFired:
initWithFireDate:interval:target:selector:userInfo:repeats:
currentRunLoop
addTimer:forMode:
_resetSyncTimer
monitoredRegions
stopMonitoringForRegion:
areLocationsAllowedWithAuthorizationStatus:
bundleWithPath:
_stringForAuthorizationStatus:
_shouldAdjustFencesWithStatus:
systemTimeZone
calendarDateWithDate:timeZone:
calendarDateForDay
calendarDateByAddingDays:
center
coordinate
radius
defaultGeofencedReminderRadius
referenceFrame
initWithCenter:radius:identifier:
setReferenceFrame:
startMonitoringForRegion:
proximity
initWithLatitude:longitude:
_updateRegionMonitoringForRegion:withLocationOfInterest:forLocation:
fetchLocationOfInterestAtLocation:withHandler:
locationBasedAlarmOccurrencesWithCompletion:
alwaysSetArrivedAndSettledForReminders
setConservativeEntry:
isConservativeEntryEnabled
alarmWithUUID:
areLocationsAllowed
ownerUUID
calendarItemWithIdentifier:
appLink
action
externalURI
dueDateComponents
dateFromComponents:
hour
minute
second
_alertInfoAlarmIDFromEKAlarm:
clientLocation
_publisherBulletinIDForReminder:
_proximityAlertTriggered:entered:
_removeAllFences
_setupLocationManager
_resetLocationManager
areVehicleTriggersEnabled
_insertSideAlarmObjectForVehicleTriggerAlarm:forReminder:withDelay:eventStore:context:
vehicleTriggerAlarmOccurrencesWithCompletion:
refiringAlarmAlreadyExists:
_publisherBulletinIDForTaskUniqueIdentifier:
calendarItemExternalIdentifier
notificationsEnabled
_allowVehicleTrigger
_debugStringForVehicleConnectionState:
_vehicleTriggerFired:
_lastDBSequence
_dispatchQueue
_nextFireDate
_lastCheckpoint
_populating
_populateStart
_syncTimer
_pendingChanges
_needsAlarmTablePopulation
_fencesNeedAdjusted
_routineManager
_tomorrow
_regionMonitoringEnabled
_includeRefiringAlarmsForInitialReschedule
_refirePastAlarmsForInitialUpdate
_monitoredRegions
_shouldUpdateWithForceForAlarmTable
_shouldUpdateWithForceForFences
_vehicleConnectionState
travelAdvisoryDescriptionOfType:hypothesis:location:
refreshDateMap
removeRefreshDates
_refreshDateMap
_setParticipantStatus:withSourceClientIdentifier:
setIsJunk:shouldSave:
scanForConflicts
canBeRespondedTo
setInvitationStatus:
_spanForNewStatusWithEvent:
responseMustApplyToAll
hasRecurrenceRules
fetchEventInvitationNotifications
_shouldTriggerForTravelAdviceReceivedForSourceClientIdentifier:sourceNotificationInfo:oldNotificationData:
_shouldTriggerForTimeToLeaveRefreshForSourceClientIdentifier:sourceNotificationInfo:oldNotificationData:
_eventWillEndBeforeUserArrivesForHypothesis:eventEndDate:
_shouldTriggerForTravelAdviceReceivedGivenHasExistingNotificationDataForSourceClientIdentifier:hypothesis:sourceNotificationInfo:oldNotificationData:hasExistingTravelAdvice:satisfiesMinimumTravelTimeThreshold:
_shouldTriggerForTimeToLeaveRefreshGivenImmediateDepartureTimelinessStatusForSourceClientIdentifier:oldNotificationData:
handleNotificationCountChangedNotification:
applicationState
setBadgeValue:
initWithInboxNotificationMonitor:
_applicationState
_characterSetForEncodingIdentifierComponents
distantFuture
calendarItem
_initWithAlarmID:isOffsetFromTravelTimeStart:lastFireTimeOfAlertOffsetFromTravelTime:hypothesis:hasDisplayedLeaveByMessage:hasDisplayedLeaveNowMessage:hasDisplayedRunningLateMessage:lastTimeNotificationAdded:
isEqualToNotificationData:
_hasDisplayedLeaveByMessage
_hasDisplayedLeaveNowMessage
_hasDisplayedRunningLateMessage
_lastTimeNotificationAdded
objectIDWithURL:
objectIDWithSourceClientIdentifier:
notificationReferenceForObjectID:withType:inEventStore:
calendarWithID:
calendarWithSourceClientIdentifier:inEventStore:
hideCalendarFromNotificationCenter:inEventStore:
sharedOwnerName
sharedOwnerEmail
sharedOwnerPhoneNumber
recordRecentForContactWithName:emailAddress:phoneNumber:
setIsJunk:
hideCalendarsFromNotificationCenter:error:
entityType
removeInviteReplyNotification:error:
respondToSharedCalendarInvitationWithSourceClientIdentifier:inEventStore:withDataAccessExpressConnection:accept:
reportSharedCalendarInvitationAsJunkWithSourceClientIdentifier:inEventStore:
clearSharedCalendarInvitationResponseWithSourceClientIdentifier:inEventStore:
_eventWithURI:checkValid:
attendees
proposedStartDate
isAfterDate:
invitationStatus
setInvitationStatus:forEvent:error:
_initWithAlertType:alertTopic:
isEqualToSound:
_alertType
_alertTopic
_protectedCalendarNotificationStorage
_unprotectedCalendarNotificationStorage
initWithCreationBlock:
syntheticTravelAdvisoriesEnabled
initWithTravelEngine:
_createCalendarNotificationServerWithUserNotificationCenterFactory:storage:eventStoreProvider:inboxNotificationProvider:alarmEngineMonitor:travelEngine:timeToLeaveRefreshMonitor:timeToLeaveRefreshStorage:
_registerSettingsCaptureHandlers
_createNotificationServerWithUserNotificationCenter:storage:eventStoreProvider:inboxNotificationProvider:alarmEngineMonitor:travelEngine:timeToLeaveRefreshMonitor:timeToLeaveRefreshStorage:
_createNotificationSourcesWithNotificationManager:eventStoreProvider:inboxNotificationProvider:alarmEngineMonitor:travelEngine:timeToLeaveRefreshMonitor:timeToLeaveRefreshStorage:
initWithEventStoreProvider:inboxNotificationProvider:notificationReferenceProvider:dataSourceEventRepresentationProvider:
initWithTravelAdvisoryDescriptionGenerator:
initWithDateProvider:
_triggeredEventNotificationDataStorage
initWithEventStoreProvider:inboxNotificationProvider:notificationReferenceProvider:dataAccessExpressConnection:
initWithNotificationManager:sourceIdentifierSuffix:
notificationSourceRefresher
calendarNotificationServer
calendarStorageWrapper
_reloadNotificationsFromUnprotectedStorage:intoProtectedStorage:withStorageWrapper:forNotificationServer:
_reloadNotificationRecords:forNotificationServer:
_removeNotificationsFromUnprotectedStorage:
_reloadNotificationsAfterFirstUnlock
_notificationStoragePathWithName:
_createNotificationStorageAtPath:
_setProtectedClassForStorageAtPath:
_triggeredEventNotificationDataStoragePathWithName:
_createTriggeredEventNotificationDataStorageAtPath:
persistentStorageWithPath:error:
_timeToLeaveRefreshStoragePathWithName:
_createTimeToLeaveRefreshStorageAtPath:
calendarAppBadgeUpdater
remindersStorageWrapper
_calendarNotificationServer
_notificationSourceRefresher
_calendarAppBadgeUpdater
_calendarStorageWrapper
_remindersStorageWrapper
_modules
_activeSourcesQueue
_activeSources
hashTableWithOptions:
postFakeNotification
setThrottleIdentifier:
throttleIdentifier
setThrottleQueue:
_uninstallEmissionTimer
initWithSuperclassDescription:
nextEmissionDate
setKey:withDate:
throttleQueue
setKey:withPointerAddress:
emissionTimer
setKey:withObject:
build
shouldBypassTravelEngineThrottle
_fireEmissionBlock
emissionThresholdTimeInterval
_updateEmissionDate:
eventExternalURL
_emissionTimerFired:
setNextEmissionDate:
_createEmissionTimerWithDate:
emissionBlock
setEmissionTimer:
tearDown
updatePredictedDepartureDate:
requestHypothesisRefreshBlock
setRequestHypothesisRefreshBlock:
cancelHypothesisRequestRefreshBlock
setCancelHypothesisRequestRefreshBlock:
setEmissionBlock:
running
setRunning:
_eventExternalURL
_requestHypothesisRefreshBlock
_cancelHypothesisRequestRefreshBlock
_emissionBlock
_throttleIdentifier
_throttleQueue
_nextEmissionDate
_emissionTimer
setKey:withString:
isEqualToData:
altitude
transportTypeOverride
locationMapKitHandle
automaticGeocodingAllowed
isEqualToOriginalEvent:
_locationIsAConferenceRoom
_automaticGeocodingAllowed
_transportTypeOverride
_locationString
_geoLocation
_locationMapKitHandle
_bodyWithTravelAdvisoryForSourceClientIdentifier:sourceNotificationInfo:
_bodyWithoutTravelAdvisoryForSourceClientIdentifier:sourceNotificationInfo:
shouldIncludeTravelAdvisoryDescription:
_ttlDescriptionTypeNumberForTravelAdvisoryTimelinessPeriod:
travelAdvisoryDescriptionGenerator
locationStringForLocation:locationWithoutPrediction:preferredLocation:
_travelAdvisoryDescriptionGenerator
eventDate
eventTimeZone
recordID
publisherBulletinID
isPurelyATimeToLeaveAlert
resetTimeToLeaveDisplayState
tentative
dismissalID
isPseudoEvent
hasGeoLocationCoordinates
geoLocationCoordinates
hasOrganizerThatIsNotCurrentUser
organizerEmailAddress
startLocationRouting
locationAddress
setLatestHypothesis:
lastTimeBulletinAdded
setLastTimeBulletinAdded:
isSuggestedLocation
setIsSuggestedLocation:
isOnSharedCalendar
setIsOnSharedCalendar:
currentRouteHypothesizerNotificationType
setCurrentRouteHypothesizerNotificationType:
_tentative
_acknowledged
_refiring
_isPseudoEvent
_hasGeoLocationCoordinates
_hasOrganizerThatIsNotCurrentUser
_isSuggestedLocation
_isOnSharedCalendar
_publisherBulletinID
_eventDate
_eventTimeZone
_appLink
_action
_entityID
_proximity
_externalID
_dismissalID
_mapKitHandle
_organizerEmailAddress
_startLocationRouting
_locationAddress
_latestHypothesis
_lastTimeBulletinAdded
_currentRouteHypothesizerNotificationType
_fireDate
_geoLocationCoordinates
fetchCalendarResourceChangedNotificationSourceClientIdentifiers:
fetchCalendarResourceChangedNotificationWithSourceClientIdentifier:
appendString:
clearCalendarResourceChangedNotificationWithSourceClientIdentifier:
initWithType:objectID:eventStore:
initWithType:objectID:date:eventStore:
notificationReferenceForObjectID:withType:date:inEventStore:
_loadDataWithError:
_saveDataWithError:
_addRefreshDate:withIdentifier:
_removeRefreshDateWithIdentifier:
_removeData
timeToLeaveRefreshDataFromPersistentStorageWithPath:error:
initWithConcurrencyType:
persistentStoreCoordinator
persistentStores
_persistentStoreCoordinator
setPersistentStoreCoordinator:
setUndoManager:
setMergePolicy:
entityForName:inManagedObjectContext:
setEntity:
setPredicate:
setIncludesPendingChanges:
executeFetchRequest:error:
_alarmsMatchingPredicate:
insertNewObjectForEntityForName:inManagedObjectContext:
predicateWithFormat:
setFetchLimit:
sortDescriptorWithKey:ascending:
arrayWithObject:
setSortDescriptors:
_settingForKey:
setValue:forKey:
rootDirectory
_pathForPersistentStore
fileURLWithPath:
_managedObjectModel
initWithManagedObjectModel:
_urlForPersistentStore
_destroyPersistentStoreAtURL:withType:options:error:
pathForResource:ofType:
initWithContentsOfURL:
dictionaryWithObjectsAndKeys:
addPersistentStoreWithType:configuration:URL:options:error:
_removeSqliteFiles
isTravelAdvisorySupported
_adviceReceivedBlock
_eventSignficantlyChangedBlock
phoneNumber
formattedStringForPhoneNumber:
requestWithIdentifier:content:trigger:
fetchEventInvitationResponseNotificationSourceClientIdentifiers:
fetchEventInvitationResponseNotificationWithSourceClientIdentifier:
fetchEventInvitationResponseNotifications
clearEventInvitationResponseWithSourceClientIdentifier:
junkStatus
notificationIconCache
iconAtPath:
_notificationIconCache
setAgendaEntryIdentifier:
setWorkQueue:
setCallbackQueue:
setTravelTimeThresholdExceededState:
_uninstallRequestHypothesisRefreshTimer
originalEventInternal
setOriginalEventInternal:
entrySignificantlyChangedBlock
callbackQueue
performAgendaEntryEqualityChecksInTravelEngine
_clearEverything
setThrottle:
_createEmissionHypothesisRefreshTimerWithDate:
cancelEmissionHypothesisRefresh
updateBlock
_enhanceLocation
hypothesizer
_hypothesisRefreshTimerFired
_uninstallEmissionHypothesisRefreshTimer
_createHypothesisRequestRefreshTimerWithDate:
requestHypothesisRefreshBTAJobName
createBTAJobWithName:atDate:
removeBTAJobWithName:
emissionHypothesisRefreshBTAJobName
_performAnalyticsPostProcessing
maximumAllowableTravelTime
_sendFeedbackToHypothesizerForPostingNotification:
geocodedEventEncountered
setGeocodedEventEncountered:
_trackTTLCandidateEvent:
domain
code
maximumTravelDurationEncountered
pushToDistribution:value:domain:significantDigits:
travelTimeThresholdExceededState
hypothesizerSentAtLeastOneHypothesis
_accountForHypothesizerSendingHypothesis
_accountForHypothesizerNeverHavingSentHypothesis
_accountForTravelDurationThresholdExceededState
_accountForMaximumTravelDuration
agendaEntryIdentifier
_requestHypothesisRefreshTimerFired:
_emissionHypothesisRefreshTimerFired
setHypothesizerSentAtLeastOneHypothesis:
setMaximumTravelDurationEncountered:
geocoder
cancel
setGeocoder:
setHypothesizer:
hypothesizerProvider
_setUpRouteMonitoring
_accountForNoLocationEnhancementNeeded
elapsedTimeAsNumber:
_accountForGeocodingFailureWithError:
_accountForLocationEnhancementSuccess
_handle
placemark
saveGeocodedLocationsInTravelEngine
updateWithGeocodedMapItemAndSaveWithCommit:eventStore:error:
initWithLocationString:andCompletionBlock:
startGeocoding
_generateDestination
overrideTravelAdvisoryHypothesis
_createSyntheticHypothesis
_updateWithHypothesis:
_accountForGeocodedEventEncounter
_createHypothesizerForDestination:
initWithMapItemHandle:
initWithCoordinate:
setArrivalDate:
setTransportType:
overriddenTravelAdvisoryHypothesisConservativeTravelTime
overriddenTravelAdvisoryHypothesisEstimatedTravelTime
overriddenTravelAdvisoryHypothesisAggressiveTravelTime
syntheticHypothesisWithStartDate:conservativeTravelTime:estimatedTravelTime:aggressiveTravelTime:
overriddenTravelAdvisoryHypothesisTransportType
geoTransportTypeForString:
overriddenTravelAdvisoryHypothesisRouteName
overriddenTravelAdvisoryHypothesisSupportsLiveTraffic
overriddenTravelAdvisoryHypothesisCurrentTrafficDensity
geoTrafficDensityForString:
overriddenTravelAdvisoryHypothesisTravelState
geoRouteHypothesisTravelStateForString:
setRouteName:
setSupportsLiveTraffic:
setCurrentTrafficDensity:
setTravelState:
_updateTravelTimeExceededThresholdStateUsingExceededValue:
_dismissed
_geocodedEventEncountered
_hypothesizerSentAtLeastOneHypothesis
_updateBlock
_entrySignificantlyChangedBlock
_originalEventInternal
_throttle
_geocoder
_hypothesizerProvider
_hypothesizer
_travelTimeThresholdExceededState
_maximumTravelDurationEncountered
_agendaEntryIdentifier
_notificationInfoFromNotificationReference:
dataAccessExpressConnection
_notificationInfoFromNotification:
fetchSharedCalendarInvitationNotifications
_dataAccessExpressConnection
fetchSharedCalendarInvitationResponseNotifications
removeResourceChange:error:
fetchCalendarResourceChangedNotifications
initWithEffectiveBundleIdentifier:delegate:onQueue:
_addNotificationData:withIdentifier:
_removeNotificationDataWithIdentifier:
notificationDataFromPersistentStorageWithPath:error:
@16@0:8
v72@0:8@16@24@32Q40@48@56@64
v40@0:8Q16@24@32
@40@0:8@16@24^B32
@32@0:8@16@24
@24@0:8@16
B24@0:8@16
#16@0:8
@24@0:8:16
@32@0:8:16@24
@40@0:8:16@24@32
B16@0:8
B24@0:8#16
B24@0:8:16
Vv16@0:8
Q16@0:8
^{_NSZone=}16@0:8
B24@0:8@"Protocol"16
@"NSString"16@0:8
@"NSArray"32@0:8@"UNNotification"16@"NSArray"24
@"NSURL"24@0:8@"UNNotificationResponse"16
@40@0:8@16@24@32
v16@0:8
@"NSArray"
v24@0:8@16
v24@0:8@?16
@"NSArray"16@0:8
v24@0:8@"CALNNotificationRecord"16
v24@0:8@?<B@?@"CALNNotificationRecord">16
@"<CALNNotificationStorage>"
v32@0:8@16@24
v48@0:8@16@24@32@40
@76@0:8@16@24@32@40@48B56@60@68
@"NSString"
@"NSURL"
@"NSDate"
@"EKCalendarEventInvitationNotification"
@"NSDictionary"
v24@0:8@"CALNNotificationRecordResponse"16
v24@0:8@"NSSet"16
@"CALNNotificationContent"24@0:8@"NSString"16
@48@0:8@16@24@32@40
@"<CALNSharedCalendarInvitationResponseNotificationDataSource>"
@"<CALNNotificationManager>"
@"<CALNCalendarIconIdentifierProvider>"
@"<CALNSourceEventRepresentationProvider>"
Q32@0:8@16@24
Q20@0:8i16
Q24@0:8@16
Q24@0:8q16
@24@0:8Q16
v48@0:8@16@24@32B40B44
@48@0:8@16@24@32Q40
@56@0:8@16@24@32Q40@48
@24@0:8^{_NSZone=}16
@92@0:8@16@24@32@40@48@56@64B72@76@84
@"EKConflictDetails"
@40@0:8@16^@24^@32
@"<CALNEventInvitationNotificationDataSource>"
v36@0:8@16q24i32
v36@0:8@"NSString"16q24i32
B32@0:8@16@24
B24@0:8q16
d16@0:8
B24@0:8@"EKTravelEngineHypothesis"16
v40@0:8@16@24@32
v28@0:8@16B24
v40@0:8@"<CALNTravelEngine>"16@"EKTravelEngineHypothesis"24@"NSString"32
v32@0:8@"<CALNTravelEngine>"16@"NSString"24
v28@0:8@"<CALNTravelEngine>"16B24
v32@0:8@"<CALNTimeToLeaveRefreshMonitor>"16@"NSString"24
@28@0:8@16B24
v40@0:8@16@24Q32
v40@0:8Q16@24Q32
@"CALNTriggeredEventNotificationInfo"28@0:8@"NSString"16B24
B24@0:8@"NSString"16
B32@0:8@"NSDate"16@"NSString"24
@"NSDate"32@0:8@"NSString"16@"NSString"24
v28@0:8@"NSString"16B24
v24@0:8@"NSString"16
v40@0:8@"NSString"16@"EKTravelEngineHypothesis"24@"NSDate"32
v32@0:8@"NSString"16@"EKTravelEngineHypothesis"24
@"NSString"24@0:8@"NSURL"16
v32@0:8@"NSDate"16@"NSString"24
v40@0:8@"NSString"16@"EKTravelEngineHypothesis"24Q32
v40@0:8Q16@"GEOPlannedDestination"24Q32
@"<CALNTriggeredEventNotificationDataSourceDelegate>"16@0:8
v24@0:8@"<CALNTriggeredEventNotificationDataSourceDelegate>"16
@128@0:8@16@24@32@40@48@56@64@72@80@88@96@104@112@120
B40@0:8@16@24@32
v36@0:8@16B24@?28
@"<CALNTriggeredEventNotificationDataSourceDelegate>"
@"<EKEventStoreProvider>"
@"<CALNRemoteMutator>"
@"<CALNDataSourceEventRepresentationProvider>"
@"CALNCalendarCoreLocationManager"
@"<CALNStats>"
@"<CALNTTLEventTracker>"
@"<CALNAlarmEngineMonitor>"
@"<CALNTravelEngine>"
@"<CALNFoundInAppsEventTracker>"
@"<CALNSuggestionsServiceLogger>"
@"<CALNRouteHypothesizerProvider>"
@"<CALNTimeToLeaveRefreshMonitor>"
@"<CALNDebugPreferences>"
@"CALNTriggeredEventNotificationMailtoURLProvider"
@?16@0:8
@"CADRouteHypothesis"16@0:8
v24@0:8@"CADRouteHypothesis"16
@?<v@?>16@0:8
v24@0:8Q16
v24@0:8@?<v@?>16
@"EKTravelEngineHypothesis"16@0:8
@"CADRouteHypothesis"
@188@0:8@16@24@32@40@48@56B64@68B76@80@88@96@104@112@120@128B136B140@144B152@156B164@168Q176B184
@"EKStructuredLocation"
@"EKTravelEngineHypothesis"
@"<CALNSharedCalendarInvitationNotificationDataSource>"
B32@0:8@16^@24
B40@0:8@16@24^@32
@"NSSet"16@0:8
B32@0:8@"UNNotificationRequest"16^@24
B40@0:8@"NSString"16@"UNNotificationContent"24^@32
v24@0:8@"NSArray"16
@"UNNotificationSettings"16@0:8
@"NSDictionary"16@0:8
@"<UNUserNotificationCenterDelegate>"16@0:8
v24@0:8@"<UNUserNotificationCenterDelegate>"16
@"UNUserNotificationCenter"
@"NSArray<CALNNotificationSource>"
@"CALNInboxNotificationMonitor"
@"CALNNotificationRecord"
@"BSServiceConnectionEndpoint"
v32@0:8@16r*24
v32@0:8@"NSObject<OS_xpc_object>"16r*24
v40@0:8@16@24@?32
v40@0:8@"<CALNUserNotificationCenter>"16@"CALNNotification"24@?<v@?Q>32
v40@0:8@"<CALNUserNotificationCenter>"16@"CALNNotificationResponse"24@?<v@?>32
@"NSArray"24@0:8@"NSString"16
v32@0:8@"NSString"16@"NSString"24
v20@0:8B16
@"<CALNUserNotificationCenter>"
@"NSObject<OS_dispatch_queue>"
@"NSMutableDictionary"
@"<CALNAnalyticsHandler>"
@"CALNUNNotificationMapper"
@"EKCalendarSuggestionNotification"
v56@0:8Q16Q24Q32Q40B48B52
v48@0:8Q16Q24Q32B40B44
@"CALNUNNotificationRequestMapper"
v24@0:8@"NSCoder"16
@24@0:8@"NSCoder"16
@"CALNNotificationContent"
@56@0:8@16@24@32@40B48B52
@32@0:8@16B24B28
@"GEORouteHypothesizer"
v40@0:8@"UNUserNotificationCenter"16@"UNNotification"24@?<v@?Q>32
v40@0:8@"UNUserNotificationCenter"16@"UNNotificationResponse"24@?<v@?>32
v32@0:8@"UNUserNotificationCenter"16@"UNNotification"24
B32@0:8@"CALNNotificationRequest"16^@24
v24@0:8@"NSMutableDictionary"16
@"<CALNUserNotificationCenterDelegate>"16@0:8
v24@0:8@"<CALNUserNotificationCenterDelegate>"16
@"<CALNUserNotificationCenterDelegate>"
@"<CALNUNUserNotificationCenterProtocol>"
@"CALNUNNotificationContentMapper"
@"CALNUNNotificationResponseMapper"
@144@0:8@16@24@32@40@48@56@64@72@80B88B92@96@104@112@120@128Q136
@"CALNNotificationSound"
i24@0:8@16
i24@0:8@"NSString"16
i24@0:8@"NSBundle"16
@"NSArray"24@0:8@"NSSet"16
@"CALNEventCanceledNotificationInfo"24@0:8@"NSString"16
@56@0:8@16@24@32@40@48
@"<CALNInboxNotificationProvider>"
@"<CALNEKCalendarNotificationReferenceProvider>"
@32@0:8@16^@24
B24@0:8^@16
@"CALNInMemoryNotificationStorage"
@"<CALNMailAccounts>"
v40@0:8d16@24@32
v40@0:8q16q24@32
B32@0:8@16q24
v40@0:8d16@"EKAlarm"24@"EKCalendarItem"32
v40@0:8q16q24@"EKEvent"32
B32@0:8@"EKEvent"16q24
@"NEKRemoteMutator"
@"CALNNotificationRequest"
@"<CALNEventCanceledNotificationDataSource>"
v40@0:8@"NSUserActivity"16@"NSDictionary"24@?<v@?B@"NSError">32
v48@0:8@16@24q32@?40
v48@0:8@"NSString"16@"NSDictionary"24q32@?<v@?B@"NSString">40
@88@0:8@16@24@32@40@48@56@64@72@80
@32@0:8@16q24
@40@0:8@16q24@32
@44@0:8@16@24q32I40
@24@0:8^@16
@"CSLSUITriggerRemoteClient"
@"CALNTriggeredEventNotificationSource"
@"CALNEventInvitationNotificationSource"
@"CALNEventInvitationResponseNotificationSource"
@"CALNEventCanceledNotificationSource"
@"CALNSharedCalendarInvitationNotificationSource"
@"CALNSharedCalendarInvitationResponseNotificationSource"
@"CALNCalendarResourceChangedNotificationSource"
@"<CALNRouteHypothesizer>"24@0:8@"GEOPlannedDestination"16
v32@0:8@"<CALNRouteHypothesizer>"16@"NSString"24
@"CADSyntheticRouteHypothesizerCache"
@"CALNNotification"
@"<CALNNotificationIconProvider>"
@44@0:8Q16@24B32@36
@"<CALNTimeToLeaveRefreshMonitorDelegate>"16@0:8
v24@0:8@"<CALNTimeToLeaveRefreshMonitorDelegate>"16
@"<CALNTimeToLeaveRefreshMonitorDelegate>"
@"<CALNTimeToLeaveRefreshStorage>"
v32@0:8@16:24
@"NSNotificationCenter"
@"_EKAlarmEngine"
@"CALNTriggeredEventNotificationData"24@0:8@"NSString"16
v32@0:8@"CALNTriggeredEventNotificationData"16@"NSString"24
v56@0:8q16@24@32@40@?48
v48@0:8@16@24@32@?40
v56@0:8q16@"NSString"24@"NSString"32@"NSObject<OS_dispatch_queue>"40@?<v@?@"NSString"@"NSString"@"NSError">48
v48@0:8@"NSString"16@"NSString"24@"NSObject<OS_dispatch_queue>"32@?<v@?@"NSString"@"NSString"@"NSError">40
B48@0:8@16^@24^@32^q40
@"NSData"24@0:8@"NSString"16
@"NSString"32@0:8@"NSDate"16@"NSCalendar"24
@92@0:8@16@24I32@36B44@48@56@64B72@76@84
I16@0:8
@"EKCalendarResourceChangeNotification"
@"NSTimeZone"
@"_EKNotificationMonitor"
@"<CALNCoreLocationProvider>"
Q24@0:8@"EKTravelEngineHypothesis"16
@"NSDate"24@0:8@"EKTravelEngineHypothesis"16
@"EKTravelAdvisoryTimelinessAuthority"
@"<CALNSuggestedEventNotificationDataSource>"
B56@0:8@16@24q32@40^@48
@36@0:8@16@24B32
@20@0:8i16
@24@0:8q16
@"NSURL"40@0:8@"EKStructuredLocation"16@"NSDate"24@"EKTravelEngineHypothesis"32
Q48@0:8@16@24@32Q40
Q48@0:8@"NSString"16@"CALNTriggeredEventNotificationSourceNotificationInfo"24@"CALNTriggeredEventNotificationData"32Q40
Q40@0:8@16@24@32
@"<CALNTravelAdvisoryAuthority>"
@"<CalDateProvider>"
@"NSDictionary"40@0:8@"EKEvent"16@"NSDate"24@"NSTimeZone"32
@"NSDictionary"56@0:8@"EKCalendarEventInvitationNotification"16@"EKEvent"24@"NSDate"32@"NSDate"40@"NSTimeZone"48
@"NSDictionary"32@0:8@"NSString"16@"NSString"24
@"NSDictionary"56@0:8@"EKCalendarResourceChangeNotification"16@"NSString"24@"NSDate"32@"NSDate"40@"NSTimeZone"48
@"NSDictionary"32@0:8@"NSDictionary"16@"NSString"24
v40@0:8@16q24@32
v28@0:8@16i24
v40@0:8@"CLLocationManager"16@"CLLocation"24@"CLLocation"32
v32@0:8@"CLLocationManager"16@"NSArray"24
v32@0:8@"CLLocationManager"16@"CLHeading"24
B24@0:8@"CLLocationManager"16
v40@0:8@"CLLocationManager"16q24@"CLRegion"32
v40@0:8@"CLLocationManager"16@"NSArray"24@"CLBeaconRegion"32
v40@0:8@"CLLocationManager"16@"CLBeaconRegion"24@"NSError"32
v40@0:8@"CLLocationManager"16@"NSArray"24@"CLBeaconIdentityConstraint"32
v40@0:8@"CLLocationManager"16@"CLBeaconIdentityConstraint"24@"NSError"32
v32@0:8@"CLLocationManager"16@"CLRegion"24
v32@0:8@"CLLocationManager"16@"NSError"24
v40@0:8@"CLLocationManager"16@"CLRegion"24@"NSError"32
v28@0:8@"CLLocationManager"16i24
v24@0:8@"CLLocationManager"16
v32@0:8@"CLLocationManager"16@"CLVisit"24
B20@0:8i16
v32@0:8@16@?24
@"NSObject<OS_dispatch_source>"
@"PCPersistentTimer"
@"CLLocationManager"
@"EKTimedEventStorePurger"
@"CALNSuggestedEventNotificationInfo"24@0:8@"NSString"16
Q24@0:8Q16
v32@0:8@"NSURL"16@"CALNNotificationRecordResponse"24
@"CALNUNNotificationIconMapper"
v40@0:8@"<CALNTriggeredEventNotificationDataSource>"16@"NSString"24@"CALNTriggeredEventNotificationTriggerData"32
v28@0:8@"<CALNTriggeredEventNotificationDataSource>"16B24
v32@0:8@"<CALNTriggeredEventNotificationDataSource>"16@"NSString"24
@120@0:8@16@24@32@40@48@56@64@72@80@88@96@104@112
v36@0:8@16@24B32
@60@0:8@16@24@32@40B48B52B56
v64@0:8@16@24@32Q40Q48@56
@48@0:8@16@24Q32@40
v56@0:8@16@24@32Q40@48
B28@0:8B16B20B24
B24@0:8Q16
@20@0:8B16
@"<CALNTriggeredEventNotificationDataSource>"
@"<CALNTriggeredEventNotificationTriggerHelper>"
@"<CALNTriggeredEventNotificationTransitionProvider>"
@"<CALNTriggeredEventNotificationBodyDescriptionProvider>"
@"<CALNTravelAdvisoryTimelinessAuthority>"
@"<CALNTriggeredEventNotificationDataStorage>"
@"<CALNURLHandler>"
@"<CALNTriggeredEventNotificationMapItemURLProvider>"
@24@0:8^v16
v24@0:8r*16
v24@0:8B16B20
v48@0:8@16@24{CLLocationCoordinate2D=dd}32
v24@0:8q16
@56@0:8@16@24d32@40@48
@"NSTimer"
@"NSDateFormatter"
@"RTRoutineManager"
@40@0:8Q16@24@32
@"NSString"40@0:8Q16@"EKTravelEngineHypothesis"24@"NSString"32
@"NSDate"24@0:8@"NSString"16
q24@0:8@16
@"CALNEventInvitationNotificationInfo"24@0:8@"NSString"16
v32@0:8q16@24
B48@0:8@16Q24@32@40
B48@0:8@"NSString"16Q24@"CALNTriggeredEventNotificationSourceNotificationInfo"32@"CALNTriggeredEventNotificationData"40
B56@0:8@16@24@32@40B48B52
@"UISApplicationState"
v40@0:8^@16^@24@32
@64@0:8@16B24@28@36B44B48B52@56
@44@0:8i16@20@28@36
v44@0:8@16@24@32B40
v44@0:8i16@20@28@36
@32@0:8q16@24
q16@0:8
@80@0:8@16@24@32@40@48@56@64@72
@72@0:8@16@24@32@40@48@56@64
@"CALNNotificationServer"
@"CALNNotificationSourceRefresher"
@"CALNCalendarAppBadgeUpdater"
@"CALNNotificationStorageWrapper"
i16@0:8
v20@0:8i16
@"CLLocation"
@"NSData"
@"NSString"32@0:8@"NSString"16@"CALNTriggeredEventNotificationSourceNotificationInfo"24
@"<CALNTravelAdvisoryDescriptionGenerator>"
@144@0:8@16@24@32@40@48B56B60@64@72@80@88q96@104B112@116@124B132B136B140
{CLLocationCoordinate2D=dd}16@0:8
v32@0:8{CLLocationCoordinate2D=dd}16
@"NSUserActivity"
{CLLocationCoordinate2D="latitude"d"longitude"d}
@"<CALNTravelEngineDelegate>"16@0:8
v24@0:8@"<CALNTravelEngineDelegate>"16
@"<CALNTravelEngineDelegate>"
@"<CALNUNUserNotificationCenterProtocol>"24@0:8@"NSString"16
@"<CALNCalendarResourceChangedNotificationDataSource>"
@36@0:8@16i24@28
@44@0:8@16i24@28@36
@"EKCalendarNotificationReference"36@0:8@"EKObjectID"16i24@"EKEventStore"28
@"EKCalendarNotificationReference"44@0:8@"EKObjectID"16i24@"NSDate"28@"EKEventStore"36
@"CALNInMemoryTimeToLeaveRefreshStorage"
@"EKTravelEngine"
@"CALNEventInvitationResponseNotificationInfo"24@0:8@"NSString"16
@"CALNNotificationIconCache"
@132@0:8@16@24@32@40@48B56@60@68@76@84@92@100@108B116B120B124B128
@52@0:8@16@24B32@36@44
@"EKCalendarNotification"
v24@0:8d16
@"EKTravelEngineOriginalEvent"
@"EKTravelEngineThrottle"
@"CalGeocoder"
@"<CALNRouteHypothesizer>"
@"CALNSharedCalendarInvitationNotificationInfo"24@0:8@"NSString"16
@"<CALNDataAccessExpressConnection>"
@"CALNSharedCalendarInvitationResponseNotificationInfo"24@0:8@"NSString"16
@"CALNCalendarResourceChangedNotificationInfo"24@0:8@"NSString"16
@"CALNInMemoryTriggeredEventNotificationDataStorage"
@"<CALNEventInvitationResponseNotificationDataSource>"
