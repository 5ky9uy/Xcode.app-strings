init
initWithQueue:
setWorkQueue:
workQueue
setWorkQueueName:
defaultCenter
_handleLocaleChanged:
addObserver:selector:name:object:
setMigrationDataSource:
removeObserver:
dealloc
valueForEntitlement:
boolValue
isEqual:
class
self
performSelector:
performSelector:withObject:
performSelector:withObject:withObject:
isProxy
isKindOfClass:
isMemberOfClass:
conformsToProtocol:
respondsToSelector:
retain
release
autorelease
retainCount
zone
hash
superclass
description
debugDescription
renderPassAtURL:width:height:imageScale:reply:
interfaceWithProtocol:
setExportedInterface:
setExportedObject:
resume
initWithFrame:
mainScreen
setScreen:
viewForPass:withFrame:
addSubview:
setPass:
setShowFullPass:
setHideAccessoryIfPossible:
setShowAccessoryButtonIfHidden:
sizeThatFits:
setFrame:
updateUIIfNeeded
layoutIfNeeded
layer
renderInContext:
barcodeView
frame
convertPoint:fromView:
lastPathComponent
transactionWithName:
_createPowerAssertionWithReason:
flushLoadedImageSets
invalidate
_releasePowerAssertionWithID:
bounds
floatValue
scale
pathExtension
isEqualToString:
initWithFileURL:warnings:orError:
paymentPass
secureElementIdentifiers
updateDevicePaymentApplicationsWithSecureElementIdentifiers:
count
enumerateObjectsUsingBlock:
bundleWithURL:
_resizeAndRenderPass:containerSize:imageScale:bundle:reply:
sharedDatabase
passForUniqueID:includeImageSets:
_renderPass:containerSize:imageScale:reply:
loadImageSetAsync:preheat:withCompletion:
performWork:
imageSetLoadedIfNeeded:
loadPDFArtFromBundle:targetSize:scale:
name
_respondToLocaleOrLanguageOrLegibilityChanging:
numberWithInt:
numberWithDouble:
dictionaryWithObjects:forKeys:count:
listener:shouldAcceptNewConnection:
.cxx_destruct
_workQueue
setCaching:
setResolveForeignReferences:
_setScale:
serviceListener
setDelegate:
initWithFormat:arguments:
cStringUsingEncoding:
uniqueID
localeWithLocaleIdentifier:
setLocale:
setDateFormat:
stringFromDate:
stringWithFormat:
array
isFileURL
path
addObject:
writeToURL:atomically:
postNotificationName:object:userInfo:
style
npkHasValidPaymentCardAssets
NanoPassRenderingService
com.apple.language.changed
com.apple.nanopassrenderingservice.client
hash
TQ,R
superclass
T#,R
description
T@"NSString",R,C
debugDescription
v24@?0@"PKPass"8@"UIImage"16
pkpass
warnings encountered:
v32@?0@8Q16^B24
v16@?0@"UIImage"8
error encountered: %@
no error encountered but no pass returned from -initWithFileURL:warnings:orError:, skipping
v8@?0
v16@?0@?<v@?>8
Unknown reason
AssertType
PreventUserIdleSystemSleep
AssertLevel
AssertName
Nano Pass Kit rendering service
TimeoutSeconds
HumanReadableReason
workQueue
T@"NPKWorkQueue",&,N,V_workQueue
en_US_POSIX
yyyy-MM-dd' 'HH:mm:ss.SSSSZZZZZ
Missing background card art
Notice: Pass rendering service new new connection from listener: %@ %@
Error: Rejecting connection %@
Notice: Receive request to render Pass:%@ size:%@ imageScale:%f
Create view and render
Notice: Receive request to render Pass at URL:%@ size:{%@,%@} imageScale:%@
Notice: Ignored request to render Pass at URL:%@ size:{%@,%@} imageScale:%@. Not given complition block
Request to render Pass:%@
Render Pass
Notice: Start process request to render Pass at URL:%@ size:{%@,%@} imageScale:%@
Notice: Returning image:%@ for pass at URL:%@
Notice: Given context scale has value is less or equal to 0.0 setting main screen scale:%f
Notice: The given URL Looks like is a valid Bundle Pass URL. Will try to get images from there
load pass at path Pass:%@
Load Pass
Notice: Created pass:%@ for render.
Notice: The given URL Looks like is a Fake Bundle URL (from migration). Will try to get image stored during migration
Notice: Found at the library a pass:%@ for uniqueID:%@ to render
Notice: Not Found pass at library for uniqueID:%@ to render
Load Image Set
Notice: exiting in response to notification %@
Notice: %{public}@ %p: Created power assertion: rendering service, %@ (%d)
Notice: %{public}@ %p: Released power assertion: rendering service (%d)
Notice: Requesting file radar for missing card art for pass with uniqueID:%@
Notice: Generated Image data:%@
PKWatchOSPassRenderingServiceExportedInterface
NSObject
NPKNanoPassRenderingServiceImplementation
NSXPCListenerDelegate
NPKGizmoDatabaseMigrationDataSource
B24@0:8@16
#16@0:8
@16@0:8
@24@0:8:16
@32@0:8:16@24
@40@0:8:16@24@32
B16@0:8
B24@0:8#16
B24@0:8:16
Vv16@0:8
Q16@0:8
^{_NSZone=}16@0:8
B24@0:8@"Protocol"16
@"NSString"16@0:8
v56@0:8@16@24@32@40@?48
v56@0:8@"NSURL"16@"NSNumber"24@"NSNumber"32@"NSNumber"40@?<v@?@"NSData">48
B32@0:8@16@24
B32@0:8@"NSXPCListener"16@"NSXPCConnection"24
@"NSArray"16@0:8
v16@0:8
v56@0:8@16{CGSize=dd}24d40@?48
v64@0:8@16{CGSize=dd}24d40@48@?56
v24@0:8@16
I24@0:8@16
v20@0:8I16
@"NPKWorkQueue"
<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE plist PUBLIC "-//Apple//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd">
<plist version="1.0">
<dict>
<key>com.apple.nanopassd.connect</key>
<true/>
<key>com.apple.nfcd.hwmanager</key>
<true/>
<key>com.apple.security.exception.files.home-relative-path.read-write</key>
<array>
<string>/Library/NanoPasses/</string>
</array>
<key>com.apple.security.exception.mach-lookup.global-name</key>
<array>
<string>com.apple.gizmo.NanoPassbookService</string>
</array>
</dict>
</plist>
zPLR
