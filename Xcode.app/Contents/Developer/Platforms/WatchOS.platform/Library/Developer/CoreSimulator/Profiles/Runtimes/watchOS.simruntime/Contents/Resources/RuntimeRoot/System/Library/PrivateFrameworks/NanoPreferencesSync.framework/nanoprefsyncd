applicationProxyForIdentifier:
groupContainerURLs
objectForKey:
path
dataContainerURL
initWithUserDefaultsDomain:containerPath:
init
synchronize
allKeys
setWithArray:
serializeObject:error:
unserializeObject:error:
initWithUserDefaultsDomain:container:appGroupContainer:
synchronizeForReading
synchronizeForWriting
setObject:forKey:
copyKeyList
serializedObjectForKey:error:
.cxx_destruct
domain
setDomain:
type
setType:
container
setContainer:
appGroupContainer
setAppGroupContainer:
containerPath
setContainerPath:
hasChangesToWrite
setHasChangesToWrite:
_hasChangesToWrite
_domain
_type
_container
_appGroupContainer
_containerPath
stringByStandardizingPath
_openDBAtPath:
invalidate
dealloc
countByEnumeratingWithState:objects:count:
setMessageType:forMessageID:
getMessageType:forMessageID:
removeMessageFromMessageTypeTable:
objectForKeyedSubscript:
setObject:forKeyedSubscript:
addObject:
enumerateKeysAndObjectsUsingBlock:
isEqual:
fileSystemRepresentation
copy
_getSchemaVersion
initWithPath:
sentSettingsSyncMessage:forDomain:keys:cloudEnabled:
untrackSettingsSyncMessagesForDomain:keys:cloudEnabled:
sentSettingsBackupMessage:forContainer:domain:keys:
untrackSettingsBackupMessageForContainer:domain:keys:
sentFileBackupMessage:forFileAtPath:
untrackFileBackupMessageForFileAtPath:
messageWasDelivered:
messageWasPurged:
getSettingsSyncDataForMessage:handler:
getSettingsBackupDataForMessage:handler:
getFileBackupDataForMessage:handler:
stashSettingsSyncData:forDomain:key:isTwoWaySync:timestamp:
getStashedSettingsSyncDataWithHandler:
flushStashedSettingsSyncData
purgePendingOutgoingMessages
setPath:
version
setDb:
getMessageTypeForMessageID
setGetMessageTypeForMessageID:
setMessageTypeForMessageID
setSetMessageTypeForMessageID:
setMessageIDForSettingSync
setSetMessageIDForSettingSync:
setMessageIDForSettingBackup
setSetMessageIDForSettingBackup:
setMessageIDForFileBackup
setSetMessageIDForFileBackup:
untrackSettingsSyncMessage
setUntrackSettingsSyncMessage:
untrackSettingsBackupMessage
setUntrackSettingsBackupMessage:
untrackFileBackupMessage
setUntrackFileBackupMessage:
untrackSettingsSyncForMessageID
setUntrackSettingsSyncForMessageID:
untrackSettingsBackupForMessageID
setUntrackSettingsBackupForMessageID:
untrackFileBackupForMessageID
setUntrackFileBackupForMessageID:
removeMessageFromMessageTypeTable
setRemoveMessageFromMessageTypeTable:
setNullMessageIDForSettingSync
setSetNullMessageIDForSettingSync:
setNullMessageIDForSettingBackup
setSetNullMessageIDForSettingBackup:
setNullMessageIDForFileBackup
setSetNullMessageIDForFileBackup:
getSettingsSyncForMessageID
setGetSettingsSyncForMessageID:
getSettingsBackupForMessageID
setGetSettingsBackupForMessageID:
getFileBackupForMessageID
setGetFileBackupForMessageID:
getSettingsSyncWithNullMessageID
setGetSettingsSyncWithNullMessageID:
getSettingsBackupWithNullMessageID
setGetSettingsBackupWithNullMessageID:
getFileBackupWithNullMessageID
setGetFileBackupWithNullMessageID:
stashSettingsSyncData
setStashSettingsSyncData:
getStashedSettingSyncData
setGetStashedSettingSyncData:
flushStashedSettingSyncData
setFlushStashedSettingSyncData:
purgeMessageTypeTable
setPurgeMessageTypeTable:
purgeSettingsSyncTable
setPurgeSettingsSyncTable:
purgeSettingsBackupTable
setPurgeSettingsBackupTable:
purgeFileBackupTable
setPurgeFileBackupTable:
_path
_version
_getMessageTypeForMessageID
_setMessageTypeForMessageID
_setMessageIDForSettingSync
_setMessageIDForSettingBackup
_setMessageIDForFileBackup
_untrackSettingsSyncMessage
_untrackSettingsBackupMessage
_untrackFileBackupMessage
_untrackSettingsSyncForMessageID
_untrackSettingsBackupForMessageID
_untrackFileBackupForMessageID
_removeMessageFromMessageTypeTable
_setNullMessageIDForSettingSync
_setNullMessageIDForSettingBackup
_setNullMessageIDForFileBackup
_getSettingsSyncForMessageID
_getSettingsBackupForMessageID
_getFileBackupForMessageID
_getSettingsSyncWithNullMessageID
_getSettingsBackupWithNullMessageID
_getFileBackupWithNullMessageID
_stashSettingsSyncData
_getStashedSettingSyncData
_flushStashedSettingSyncData
_purgeMessageTypeTable
_purgeSettingsSyncTable
_purgeSettingsBackupTable
_purgeFileBackupTable
UTF8String
stringWithUTF8String:
bytes
length
dataWithBytes:length:
nps_defaultPairedDevice
sharedInstance
nonActiveDeviceForIDSDevice:
nps_nrDevice
description
dictionaryRepresentation
stringWithFormat:
dictionary
allocWithZone:
isMemberOfClass:
copyWithZone:
readFrom:
writeTo:
copyTo:
hash
mergeFrom:
setKey:
twoWaySync
setTwoWaySync:
isPrefix
setIsPrefix:
isCloudEnabled
setIsCloudEnabled:
syncGroups
setSyncGroups:
_twoWaySync
_isPrefix
_isCloudEnabled
_key
_syncGroups
keyArrays
setKeyArrays:
keyPrefixArrays
setKeyPrefixArrays:
_keyArrays
_keyPrefixArrays
notificationNames
setNotificationNames:
_notificationNames
keys
setKeys:
keyPrefixes
setKeyPrefixes:
_keys
_keyPrefixes
domains
setDomains:
_domains
mutableCopy
domainShouldSyncFirst:key:
removeObject:
defaultManager
stringByAppendingPathComponent:
fileExistsAtPath:isDirectory:
contentsOfDirectoryAtPath:error:
predicateWithFormat:
filteredArrayUsingPredicate:
objectForInfoDictionaryKey:
count
arrayWithObject:
boolValue
isEqualToString:
preprocessItemSyncGroups:forDomain:key:
array
unionSet:
stringByAppendingString:
backupableUserDefaultDomainForContainer:domain:
loadSettingsBundles
backupableUserDefaultKeyForContainer:domain:key:
syncedUserDefaults
setSyncedUserDefaults:
whitelisedUserDefaults
setWhitelisedUserDefaults:
backupableUserDefaultContainers
setBackupableUserDefaultContainers:
backupableFiles
setBackupableFiles:
backupableDirectories
setBackupableDirectories:
_syncedUserDefaults
_whitelisedUserDefaults
_backupableUserDefaultContainers
_backupableFiles
_backupableDirectories
processInfo
environment
dataWithContentsOfFile:options:error:
unarchiveObjectOfClasses:withData:
unarchivedObjectOfClasses:fromData:error:
numberWithUnsignedInteger:
archivedDataWithRootObject:requiringSecureCoding:error:
unarchiveObjectOfClasses:withFile:
archiveObject:
setLaunchNotificationsEnabled:
currentRunLoop
numberWithBool:
setValue:
hasValue
setHasTwoWaySync:
hasTwoWaySync
value
_value
_has
defaultCenter
_registryChanged:
addObserver:selector:name:object:
checkForActiveDeviceChange
waitForActiveDevice
valueForProperty:
compatibilityState
createDirectoryIfNeeded:
objectAtIndexedSubscript:
initWithDomain:
name
activeDeviceSelectorBlock
getAllDevicesWithArchivedDevicesMatching:
firstObject
fileExistsAtPath:
dictionaryWithObjects:forKeys:count:
createDirectoryAtPath:withIntermediateDirectories:attributes:error:
initWithNPSServer:
startMonitoringPairingEventsWithQueue:
waitForPairedOrPairingDevice
isPaired
lastActiveDate
pairingID
pairingDataStore
pairingDevice
perGizmoCacheDirectoryPath
globalCacheDirectoryPath
domainAccessor
databasePath
queue
activeDeviceID
setActiveDeviceID:
activeDevice
setActiveDevice:
shouldRun
hasCheckedInWithNanoRegistry
setHasCheckedInWithNanoRegistry:
alreadyExistingAssertion
setAlreadyExistingAssertion:
setPairingDataStore:
setDomainAccessor:
setPerGizmoCacheDirectoryPath:
setGlobalCacheDirectoryPath:
setDatabasePath:
registryChangedSemaphores
setRegistryChangedSemaphores:
server
setServer:
_shouldRun
_hasCheckedInWithNanoRegistry
_queue
_activeDeviceID
_activeDevice
_alreadyExistingAssertion
_pairingDataStore
_domainAccessor
_perGizmoCacheDirectoryPath
_globalCacheDirectoryPath
_databasePath
_registryChangedSemaphores
_server
setFileURL:
setFileData:
hasFileURL
hasFileData
fileURL
fileData
_fileData
_fileURL
createFileAtPath:contents:attributes:
fileHandleForWritingToURL:error:
fileHandleForReadingFromURL:error:
writeData:
readDataOfLength:
closeFile
offsetInFile
initWithPathToCreateBlobFile:
initWithPathToLoadBlobFile:
writeBlob:
readBlob
close
isFileGood
_offset
_done
tempFilePath
losslessFileCompressionFrom:to:shouldCompress:
UUIDString
fileURLWithPath:
dataWithLength:
subdataWithRange:
appendData:
removeItemAtURL:error:
initWithPathToCreateBackup:
initWithPathToLoadBackup:
writeMessage:data:
enumerateMessages:
doneWriting
compressedPath
_uncompressedPath
_compressedPath
setKind:
setFeature:
setSetting:
setRestriction:
setUserSettingsAndRestrictions:
hasKind
hasFeature
hasSetting
hasRestriction
hasUserSettingsAndRestrictions
kind
feature
setting
restriction
userSettingsAndRestrictions
_feature
_kind
_restriction
_setting
_userSettingsAndRestrictions
class
self
performSelector:
performSelector:withObject:
performSelector:withObject:withObject:
isProxy
isKindOfClass:
conformsToProtocol:
respondsToSelector:
retain
release
autorelease
retainCount
zone
superclass
debugDescription
service:account:incomingOpportunisticData:withIdentifier:fromID:context:
service:didSendOpportunisticDataWithIdentifier:toIDs:
service:account:incomingMessage:fromID:context:
service:account:incomingData:fromID:context:
service:account:incomingUnhandledProtobuf:fromID:context:
service:account:incomingResourceAtURL:fromID:context:
service:account:incomingResourceAtURL:metadata:fromID:context:
service:account:incomingPendingMessageOfType:fromID:context:
service:activeAccountsChanged:
service:devicesChanged:
service:nearbyDevicesChanged:
service:connectedDevicesChanged:
service:account:identifier:didSendWithSuccess:error:
service:account:identifier:didSendWithSuccess:error:context:
service:account:identifier:sentBytes:totalBytes:
service:account:identifier:hasBeenDeliveredWithContext:
service:account:identifier:fromID:hasBeenDeliveredWithContext:
service:account:inviteReceivedForSession:fromID:
service:account:inviteReceivedForSession:fromID:withOptions:
service:account:inviteReceivedForSession:fromID:withContext:
service:account:receivedGroupSessionParticipantUpdate:
service:account:receivedGroupSessionParticipantDataUpdate:
serviceSpaceDidBecomeAvailable:
serviceAllowedTrafficClassifiersDidReset:
service:didSwitchActivePairedDevice:acknowledgementBlock:
synchronizeUserDefaultsDomain:keys:container:appGroupContainer:cloudEnabled:
backupFileAtPath:withCompletionHandler:
backupUserDefaultsDomain:keys:container:
saveBackupToFile:withCompletionHandler:
loadBackupFromFile:withCompletionHandler:
initCore:
resetIfActiveDeviceChanged
initWithMachServiceName:
setDelegate:
initWithService:
handleUserDefaultsMsg:
setProtobufAction:forIncomingRequestsOfType:
handleManagedConfigurationMsg:
handleUserDefaultsBackupMsg:
resume
addDelegate:queue:
handleActiveDeviceChangedVersionNotification
handleAppChangedRestrictions
resendMessagesForMessageID:
checkActiveDeviceChangedVersion
boolForKey:
setBool:forKey:
stringForKey:
systemBuildVersion
deviceRegistry
timeIntervalSinceReferenceDate
integerForKey:
syncCompletedWithError:withDevice:
registerSyncMessageWithIdentifier:size:
setHasPerformedInitialSync:updateBuildVersion:withDevice:
numberWithUnsignedLongLong:
null
shouldAllowSyncOfItemWithSyncGroups:allowedSyncGroups:
hasPrefix:
usingPrefsFromDomain:
sendSettingsInDomain:keys:cloudEnabled:backupFile:
sendWUDSettingsInDomain:keys:backupFile:
hasPerformedInitialSync
performFirstLaunchIntoNewBuildTasks
allowedGroups
startPrefsSyncWithGroups:backupWriter:
sendMessageData:messageType:queueOneIdentifier:identifier:urgentPriorityOverride:cloudEnabled:
initWithProtobufData:type:isResponse:
maxSendTimeout
numberWithDouble:
idsService
setWithObject:
sendProtobuf:toDestinations:priority:options:identifier:error:
errorWithDomain:code:userInfo:
code
unsignedLongLongValue
removeObjectForKey:
purgeRetryDelay
endTransaction
beginTransaction
sendSettingsBackupInDomain:keys:container:isInitialSync:backupFile:
minusSet:
backupFileAtPath:backupFile:
intValue
handleFileBackupMessage:resourceURL:backupFile:
context
outgoingResponseIdentifier
data
handleUserDefaultsMsgData:backupFile:
initWithData:
handleWhitelistedUserDefaultsMsg:messageData:overwriteNewerTimestamps:backupFile:
hasTimestamp
timestamp
readCacheFromDiskForDomain:isPerGizmo:
doubleValue
compare:
writeCache:toDiskForDomain:isPerGizmo:
managedConfigurationSettings
containsObject:
logManagedConfigurationDictionary:
validateIncomingManagedConfigurationDictionary:
sharedConnection
removeBoolSetting:
setParametersForSettingsByType:
applyRestrictionDictionary:clientType:clientUUID:localizedClientDescription:localizedWarningMessage:outRestrictionChanged:outEffectiveSettingsChanged:outError:
handleUserDefaultsBackupMsgData:backupFile:
checkIfFileIsWhitelistedAsBackupable:
writeToURL:atomically:
stringByDeletingLastPathComponent
moveItemAtURL:toURL:error:
setResourceValue:forKey:error:
handleRestoreOfSyncingUserDefaultsMsg:backupFile:
interfaceWithProtocol:
arrayWithObjects:count:
setClasses:forSelector:argumentIndex:ofReply:
setExportedInterface:
valueForEntitlement:
setExportedObject:
setInvalidationHandler:
setInterruptionHandler:
cachePathForDomain:isPerGizmo:
dataWithContentsOfFile:
propertyListWithData:options:format:error:
deleteCacheForDomain:isPerGizmo:
dataWithPropertyList:format:options:error:
writeToFile:options:error:
removeItemAtPath:error:
setTimestamp:
queueOneIdentifierForUserDefaultsMsg:
updateCacheForDomain:keys:twoWaySyncTimestamp:isPerGizmo:
allObjects
sortedArrayUsingSelector:
initWithString:
appendString:
queueOneIdentifierForUserDefaultsBackupMsg:
sendMessageData:messageType:queueOneIdentifier:identifier:cloudEnabled:
appendFormat:
registerInitialSyncMessage:ofSize:orReportInitialSyncFailureWithError:
addKey:
fileURLWithPath:isDirectory:
standardizedURL
getResourceValue:forKey:error:
dataWithContentsOfURL:
queueOneIdentifierForFileBackupMsg:
numberWithInt:
sendResourceAtURL:metadata:toDestinations:priority:options:identifier:error:
sendSetting:keys:allowedSyncGroups:messageIdentifier:messageData:cloudEnabled:backupFile:
setLaunchNotification:enabled:
allValues
subpathsAtPath:
isManagedConfigurationSettingWhitelistedForKind:feature:
listener:shouldAcceptNewConnection:
handleFileBackupMessage:
handleFullBackupMessage:resourceURL:
applyStashedSettingsSyncMessages
totalDataToSyncInBytes
setTotalDataToSyncInBytes:
remainingDataToSyncInBytes
setRemainingDataToSyncInBytes:
syncSessionProgressDictionary
syncTransaction
setSyncTransaction:
workQueue
setWorkQueue:
settings
setSettings:
xpcListener
setXpcListener:
setIdsService:
setDeviceRegistry:
database
setDatabase:
purgeTimer
setPurgeTimer:
setAllowedGroups:
currentlyUsedDomain
setCurrentlyUsedDomain:
_totalDataToSyncInBytes
_remainingDataToSyncInBytes
_syncSessionProgressDictionary
_syncTransaction
_workQueue
_settings
_xpcListener
_idsService
_deviceRegistry
_database
_purgeTimer
_allowedGroups
_currentlyUsedDomain
removeAllObjects
objectAtIndex:
initWithCapacity:
keysCount
clearKeys
keyAtIndex:
keyType
setHasTimestamp:
_timestamp
hasContainer
Could not resolve containerPath for container (%@)
Synchronized user defaults domain (%@) for containerPath: (%@); ret: (%d).
Synchronized user defaults domain (%@); ret: (%d).
Read containerized user default <%@, %@> for containerPath: (%@); value: (%@)
Read user default <%@, %@>; value: (%@)
Written containerized user default <%@, %@> for containerPath: (%@); value: (%@)
Written user default <%@, %@>; value: (%@)
Failed to serialized value (%@) with error: %@ 
Failed to unserialized data (%@) with error: %@
SQL Error: (%d) %s
Error fetching schema version: %d (%s)
Error opening SQLite3 DB at (%@): (%d) %s
I/O error: ACCESS
I/O error: BLOCKED
I/O error: CHECKRESERVEDLOCK
I/O error: CLOSE
I/O error: DELETE
I/O error: DIR_CLOSE
I/O error: DIR_FSYNC
I/O error: FSTAT
I/O error: FSYNC
I/O error: LOCK
I/O error: NOMEM
I/O error: RDLOCK
I/O error: READ
I/O error: SEEK
I/O error: SHMLOCK
I/O error: SHMMAP
I/O error: SHMOPEN
I/O error: SHMSIZE
I/O error: SHORT_READ
I/O error: TRUNCATE
I/O error: UNLOCK
I/O error: WRITE
sqlite3_exec(%s) Error: (%d) %s
%@ '%@': %@
%@ '%@':
Bundle directory (%@) does not exist
Bundle directory (%@) is not a directory
Bundle directory (%@) could not be open
Unable to read bundle: %@
Malformed bundle plist for bundle: %@. %@
Missing %@ or %@ entry for bundle: %@.
Cannot overwrite existing container %@ with %@ for whitelisted <%@, %@> in bundle %@.
Action %@ not supported in bundle (%@).
backupableUserDefaultContainers: (%@)
backupableFiles: (%@)
backupableDirectories: (%@)
Error (%@) reading data from (%@)
Error (%@) unarchiving expected classes (%@) with (%@) bytes data
Error (%@) archiving (%@)
Received SIGTERM
Received notification: (%@)
Paired device changed from %{public}@ to %{public}@
Failed to create directory (%@) with error: (%@)
NPSBlobReaderWriter: initWithPathToCreateBlobFile error %@
NPSBlobReaderWriter: initWithPathToLoadBlobFile error %@
File length is not right- must have been a read or write error
File length is %ld bytes as expected
NPSBackupReaderWriter writing type %d length %u
NPSBackupReaderWriter reading type %d length %u
loadBackupFromFile no entitlement
saveBackupToFile no entitlement
Launching; "NanoPreferencesSyncDaemon_Sim-261" "37"
Received notification: %s
Received unexepectedly NULL notification
Received unexpected non-dictionary type event: (%@)
setHasPerformedInitialSync: (%d, %d, %{public}@)
setHasPerformedInitialSync called but the active device isn't paired to a non-archived device.
setHasPerformedInitialSync: Paired device build version being updated from %@ to %@
setHasPerformedInitialSync: Local device build version being updated from %@ to %@
setHasPerformedInitialSync: LastActiveDate being updated from %llu -> %llu
syncCompletedWithError: Sync completed: error=%@
startPrefsSyncWithGroups: %{public}@
startPrefsSyncWithGroups: No data synced.
%s: Skipping Paired Device Version change check. Not paired.
%s: Detected first launch after pairing; Local build version: (%@)
%s: Detected local device update; Current build version: (%@); Previous: (%@)
%s: Doing new build tasks
%s: New build tasks completed
%s: lastRegisteredPairedDeviceBuildVersion: (%@); pairedDeviceBuildVersion: (%@)
%s: Doing a sync because of a build version change
%s: No build version change detected.
%s: Skipping Paired Device Version change check. Has not performed initial sync yet.
Successfully sent message with identifier: (%@)
Failed sending message with error: (%@)
service: (%@), account: (%@), identifier: (%@), success: (%d), error: (%@)
progress: (%f), total: (%llu), remaining: (%llu)
Message (%@) failed to be delivered with error: (%@)
Purge Timer fired!
messageID: (%@)
Failed re-sending settings backup for container (%@), domain (%@), keys (%@).
Failed re-sending file backup (%@) for identifier (%@)!
service: (%@); account: (%@); incomingResourceAtURL: (%@); metadata: (%@); fromID: (%@); context: (%@)
nil messageType. metadata: (%@)
Un-handled message type: (%@)
idsProtobuf: (%p); outgoingResponseIdentifier: (%@)
Could not parse incoming data
Handling User Defaults message for domain: (%@); hasTimestamp: (%d); timestamp: (%f) overwriteNewerTimestamps: (%s)
Domain (%@) not whitelisted; dropping incoming message
Key (%@) in domain (%@) not whitelisted; dropping incoming message
Received User Defaults value for <%@, %@>: (%@)
Discarding cached timestamp for <%@, %@> since it is set to the future; cached: (%f); current: (%f)
Discarding incoming setting for <%@, %@>, local value is more recent
Local expects <%@, %@> to be 2-way-synced, but remote doesn't
Skipping key (%@) since incoming value is un-changed
Posting (%@) for domain (%@)
Handling Restore of User Defaults message for domain: (%@); hasTimestamp: (%d); timestamp: (%f)
Domain (%@) not synced; dropping incoming message
Key (%@) in domain (%@) not synced; dropping incoming message
Kind: (%@)
Feature: (%@); Value: (%@)
No feature whitelisted for kind (%@). Discarding incoming features (%@).
MC Feature (%@, %@) not whitelisted; Skipping.
Incoming userSettingsAndRestrictions is not an array! (%@)
Incoming setting MC user settings:
Incoming setting MC restrictions:
Removing: %@ - %@
Applying updated MC restrictions
Failed to apply ManagedConfiguration restrictions (%@): %@
Handling User Defaults Backup message for container: (%@); domain: (%@)
Domain (%@) in container (%@) not restore-able
Failed to instantiate setting accessor for domain: (%@); container: (%@)
Message has key: (%@); Serialized value: (%lu bytes)
<%@, %@> is not whitelisted for restore
Posting (%@)
Handling file backup message for path: (%@); Temporary URL: (%@)
Restoring file at (%@) with file at temporary location (%@)
File does not exist at temporary location (%@)!!!!!!
Failed to create parent directory (%@) with error: (%@)
Failed to remove existing file at restore path (%@) with error: (%@)
Failed to restore file from temporary location (%@) to (%@) with error: (%@)
Failed to set protection for file (%@) with error (%@); result: (%d) 
listener: (%p); connection: (%p)
Connection invalidated: (%p)
Failed to resolve cache path for domain: (%@); isPerGizmo: (%d)
Reading cache for domain: (%@); isPerGizmo: (%d)
Failed to unserialized domain cache (%@) %@
Read cache: (%@)
Writing cache for domain: (%@); isPerGizmo: (%d)
Cache to be written: (%@)
Failed to serialize updated domain cache dictionary (%@) with error: (%@)
Failed to write updated domain cache (%@) with error: (%@)
Deleting cache for domain: (%@); isPerGizmo: (%d)
Cache for domain (%@) does not exist.
Failed to delete cache for domain: %@
Key (%@) is not a String.
Domain (%@) in container (%@) not whitelisted for backups
<%@, %@> is not backup-able
File path (%@) is not backup-able
File path should not be nil
File URL (%@) should not be nil
File (%@) is a directory
Failed to retrieve file protection for file URL: (%@) with error: (%@); result: (%d)
File at URL (%@) has unsupported protection (%@) for file backup purposes
Failed sending resource with error: (%@)
Successfully sent resource; identifier: (%@)
domain: (%@); keys: (%@); container: (%@); appGroupContainer: (%@); cloudEnabled: (%d)
Domain (%@) should not be nil, and keys (%@) should not be nil or empty.
Container should not be nil when specifing an app group container (%@) for domain (%@) and keys (%@).
setLaunchNotification: %@ launch notification %@
backupUserDefaultsDomain: domain: (%@); keys: (%@); container: (%@)
filePath: (%@); completionHandler: (%p)
loadBackupFromFile
loadBackupFromFile processed %llu messages
saveBackupToFile
Backup all synced settings
Backup all "backupable" settings
Backup all whitelisted files
Backup all the files in whitelisted directories
Done backing up
NPSSettingAccessor
NPSDatabase
NPSFullBackupMsg
NSCopying
UserDefaultsKey
UserDefaultsDomain
WhitelistedUserDefaultsKey
WhitelistedUserDefaultsDomain
BackupableUserDefaultsKey
BackupableUserDefaultsDomain
BackupableUserDefaultsContainer
NPSSettings
NPSKeyedArchiverUtil
NPSUserDefaultsMsgKey
NPSDeviceRegistry
NPSFileBackupMsg
NPSBlobReaderWriter
NPSBackupReaderWriter
NPSManagedConfigurationMsg
NPSIDSBlackHole
IDSServiceDelegate
NSObject
NPSGizmoNoBackupProxy
NPSGizmoServerProtocol
NPSServerProtocol
NPSServer
NSXPCListenerDelegate
NPSUserDefaultsMsg
NPSUserDefaultsBackupMsgKey
NPSUserDefaultsBackupMsg
@32@0:8@16^@24
@40@0:8@16@24@32
@32@0:8@16@24
B16@0:8
@24@0:8@16
v32@0:8@16@24
@16@0:8
v16@0:8
v24@0:8@16
q16@0:8
v24@0:8q16
v20@0:8B16
@"NSString"
B28@0:8i16@20
B32@0:8^i16@24
B24@0:8@16
v44@0:8@16@24@32B40
v36@0:8@16@24B32
v48@0:8@16@24@32@40
v40@0:8@16@24@32
v32@0:8@16@?24
v52@0:8@16@24@32B40d44
v24@0:8@?16
i16@0:8
Q16@0:8
^{sqlite3=}16@0:8
v24@0:8^{sqlite3=}16
^{sqlite3_stmt=}16@0:8
v24@0:8^{sqlite3_stmt=}16
^{sqlite3=}
^{sqlite3_stmt=}
@24@0:8^{_NSZone=}16
@"NSSet"
@"NSMutableDictionary"
@"NSMutableSet"
@"BackupableUserDefaultsDomain"
@"BackupableUserDefaultsContainer"
B32@0:8@16@24
@"NSData"
{?="twoWaySync"b1}
@"NSObject<OS_dispatch_queue>"
@"NSUUID"
@"NRDevice"
@"NRActiveDeviceAssertion"
@"NPSDomainAccessor"
@"NSMutableArray"
@"NPSServer"
@"NSFileHandle"
B36@0:8@16@24B32
v32@0:8Q16@24
B24@0:8@?16
@"NPSBlobReaderWriter"
@"NSURL"
#16@0:8
@24@0:8:16
@32@0:8:16@24
@40@0:8:16@24@32
B24@0:8#16
B24@0:8:16
Vv16@0:8
^{_NSZone=}16@0:8
B24@0:8@"Protocol"16
@"NSString"16@0:8
v64@0:8@16@24@32@40@48@56
v56@0:8@16@24@32@40@48
v56@0:8@16@24q32@40@48
v52@0:8@16@24@32B40@44
v60@0:8@16@24@32B40@44@52
v56@0:8@16@24@32q40q48
v40@0:8@16@24@?32
v64@0:8@"IDSService"16@"IDSAccount"24@"NSData"32@"NSString"40@"NSString"48@"IDSMessageContext"56
v40@0:8@"IDSService"16@"NSString"24@"NSArray"32
v56@0:8@"IDSService"16@"IDSAccount"24@"NSDictionary"32@"NSString"40@"IDSMessageContext"48
v56@0:8@"IDSService"16@"IDSAccount"24@"NSData"32@"NSString"40@"IDSMessageContext"48
v56@0:8@"IDSService"16@"IDSAccount"24@"IDSProtobuf"32@"NSString"40@"IDSMessageContext"48
v56@0:8@"IDSService"16@"IDSAccount"24@"NSURL"32@"NSString"40@"IDSMessageContext"48
v64@0:8@"IDSService"16@"IDSAccount"24@"NSURL"32@"NSDictionary"40@"NSString"48@"IDSMessageContext"56
v56@0:8@"IDSService"16@"IDSAccount"24q32@"NSString"40@"IDSMessageContext"48
v32@0:8@"IDSService"16@"NSSet"24
v32@0:8@"IDSService"16@"NSArray"24
v52@0:8@"IDSService"16@"IDSAccount"24@"NSString"32B40@"NSError"44
v60@0:8@"IDSService"16@"IDSAccount"24@"NSString"32B40@"NSError"44@"IDSMessageContext"52
v56@0:8@"IDSService"16@"IDSAccount"24@"NSString"32q40q48
v48@0:8@"IDSService"16@"IDSAccount"24@"NSString"32@40
v56@0:8@"IDSService"16@"IDSAccount"24@"NSString"32@"NSString"40@48
v48@0:8@"IDSService"16@"IDSAccount"24@"IDSSession"32@"NSString"40
v56@0:8@"IDSService"16@"IDSAccount"24@"IDSSession"32@"NSString"40@"NSDictionary"48
v56@0:8@"IDSService"16@"IDSAccount"24@"IDSSession"32@"NSString"40@"NSData"48
v40@0:8@"IDSService"16@"IDSAccount"24@"IDSGroupSessionParticipantUpdate"32
v24@0:8@"IDSService"16
v40@0:8@"IDSService"16@"IDSDevice"24@?<v@?>32
v52@0:8@16@24@32@40B48
v52@0:8@"NSString"16@"NSSet"24@"NSString"32@"NSString"40B48
v40@0:8@"NSString"16@"NSSet"24@"NSString"32
v32@0:8@"NSString"16@?<v@?>24
v32@0:8@"NSURL"16@?<v@?@"NSError">24
d16@0:8
v24@0:8^{NSDictionary=#}16
^{NSDictionary=#}24@0:8^{NSDictionary=#}16
v28@0:8@16B24
B32@0:8@"NSXPCListener"16@"NSXPCConnection"24
v32@0:8B16B20@24
v40@0:8@16Q24@32
v32@0:8@16Q24
@48@0:8@16i24@28^@36B44
@52@0:8@16i24@28^@36B44B48
B44@0:8@16@24B32@36
@28@0:8@16B24
B28@0:8@16B24
@68@0:8@16@24@32^@40^@48B56@60
@52@0:8@16@24@32B40@44
v44@0:8@16@24B32@36
v24@0:8Q16
@"NSObject<OS_os_transaction>"
@"NPSSettings"
@"NSXPCListener"
@"IDSService"
@"NPSDeviceRegistry"
@"NPSDatabase"
@"NSObject<OS_dispatch_source>"
@"NSDictionary"
v24@0:8d16
@24@0:8Q16
{?="timestamp"b1}
hasChangesToWrite
TB,N,V_hasChangesToWrite
domain
T@"NSString",&,N,V_domain
type
Tq,N,V_type
container
T@"NSString",&,N,V_container
appGroupContainer
T@"NSString",&,N,V_appGroupContainer
containerPath
T@"NSString",&,N,V_containerPath
(nil)
BEGIN EXCLUSIVE TRANSACTION
ROLLBACK TRANSACTION
COMMIT TRANSACTION
v32@?0@"NSString"8@"NSSet"16^B24
v32@?0@"NSString"8@"NSDictionary"16^B24
meta
SELECT COUNT(*) FROM meta
Unknown Error
PRAGMA journal_mode=WAL;
CREATE TABLE IF NOT EXISTS meta (version INTEGER PRIMARY KEY AUTOINCREMENT, tstamp REAL)
CREATE TABLE IF NOT EXISTS sync_msgs (domain TEXT NOT NULL, key TEXT NOT NULL, messageID TEXT, PRIMARY KEY(domain, key))
CREATE TABLE IF NOT EXISTS backup_msgs (container TEXT NOT NULL DEFAULT (''), domain TEXT NOT NULL, key TEXT NOT NULL, messageID TEXT, PRIMARY KEY(container, domain, key))
CREATE TABLE IF NOT EXISTS msgs_type (messageID TEXT NOT NULL PRIMARY KEY, type INTEGER NOT NULL)
CREATE INDEX sync_msgs_messageID_idx ON sync_msgs (messageID ASC)
CREATE INDEX backup_msgs_messageID_idx ON backup_msgs (messageID ASC)
INSERT INTO meta (tstamp) VALUES (datetime('now'))
CREATE TABLE IF NOT EXISTS file_backup_msgs (path TEXT NOT NULL, messageID TEXT, PRIMARY KEY(path))
CREATE INDEX file_backup_msgs_messageID_idx ON file_backup_msgs (messageID ASC)
CREATE TABLE IF NOT EXISTS stashed_sync_msgs (domain TEXT NOT NULL, key TEXT NOT NULL, data BLOB, two_way_sync INTEGER, timestamp DOUBLE, PRIMARY KEY(domain, key))
ALTER TABLE sync_msgs ADD COLUMN cloudEnabled INTEGER
SELECT type FROM msgs_type WHERE messageID=?
INSERT INTO msgs_type (messageID, type) VALUES (?, ?)
INSERT OR REPLACE INTO sync_msgs (domain, key, messageID, cloudEnabled) VALUES (?, ?, ?, ?)
INSERT OR REPLACE INTO backup_msgs (container, domain, key, messageID) VALUES (?, ?, ?, ?)
INSERT OR REPLACE INTO file_backup_msgs (path, messageID) VALUES (?, ?)
DELETE FROM sync_msgs WHERE domain=? AND key=? AND cloudEnabled=?
DELETE FROM backup_msgs WHERE container=? AND domain=? AND key=?
DELETE FROM file_backup_msgs WHERE path=?
DELETE FROM sync_msgs WHERE messageID=?
DELETE FROM backup_msgs WHERE messageID=?
DELETE FROM file_backup_msgs WHERE messageID=?
DELETE FROM msgs_type WHERE messageID=?
UPDATE sync_msgs SET messageID=NULL WHERE messageID=?
UPDATE backup_msgs SET messageID=NULL WHERE messageID=?
UPDATE file_backup_msgs SET messageID=NULL WHERE messageID=?
SELECT domain, key, cloudEnabled FROM sync_msgs WHERE messageID=?
SELECT container, domain, key FROM backup_msgs WHERE messageID=?
SELECT path FROM file_backup_msgs WHERE messageID=?
SELECT domain, key, cloudEnabled FROM sync_msgs WHERE messageID IS NULL
SELECT container, domain, key FROM backup_msgs WHERE messageID IS NULL
SELECT path FROM file_backup_msgs WHERE messageID IS NULL
INSERT OR REPLACE INTO stashed_sync_msgs (domain, key, data) VALUES (?, ?, ?)
SELECT domain, key, data, two_way_sync, timestamp FROM stashed_sync_msgs
DELETE FROM stashed_sync_msgs
DELETE FROM msgs_type
DELETE FROM sync_msgs
DELETE FROM backup_msgs
DELETE FROM file_backup_msgs
path
T@"NSString",&,N,V_path
T^{sqlite3=},N,V_db
getMessageTypeForMessageID
T^{sqlite3_stmt=},N,V_getMessageTypeForMessageID
setMessageTypeForMessageID
T^{sqlite3_stmt=},N,V_setMessageTypeForMessageID
setMessageIDForSettingSync
T^{sqlite3_stmt=},N,V_setMessageIDForSettingSync
setMessageIDForSettingBackup
T^{sqlite3_stmt=},N,V_setMessageIDForSettingBackup
setMessageIDForFileBackup
T^{sqlite3_stmt=},N,V_setMessageIDForFileBackup
untrackSettingsSyncMessage
T^{sqlite3_stmt=},N,V_untrackSettingsSyncMessage
untrackSettingsBackupMessage
T^{sqlite3_stmt=},N,V_untrackSettingsBackupMessage
untrackFileBackupMessage
T^{sqlite3_stmt=},N,V_untrackFileBackupMessage
untrackSettingsSyncForMessageID
T^{sqlite3_stmt=},N,V_untrackSettingsSyncForMessageID
untrackSettingsBackupForMessageID
T^{sqlite3_stmt=},N,V_untrackSettingsBackupForMessageID
untrackFileBackupForMessageID
T^{sqlite3_stmt=},N,V_untrackFileBackupForMessageID
removeMessageFromMessageTypeTable
T^{sqlite3_stmt=},N,V_removeMessageFromMessageTypeTable
setNullMessageIDForSettingSync
T^{sqlite3_stmt=},N,V_setNullMessageIDForSettingSync
setNullMessageIDForSettingBackup
T^{sqlite3_stmt=},N,V_setNullMessageIDForSettingBackup
setNullMessageIDForFileBackup
T^{sqlite3_stmt=},N,V_setNullMessageIDForFileBackup
getSettingsSyncForMessageID
T^{sqlite3_stmt=},N,V_getSettingsSyncForMessageID
getSettingsBackupForMessageID
T^{sqlite3_stmt=},N,V_getSettingsBackupForMessageID
getFileBackupForMessageID
T^{sqlite3_stmt=},N,V_getFileBackupForMessageID
getSettingsSyncWithNullMessageID
T^{sqlite3_stmt=},N,V_getSettingsSyncWithNullMessageID
getSettingsBackupWithNullMessageID
T^{sqlite3_stmt=},N,V_getSettingsBackupWithNullMessageID
getFileBackupWithNullMessageID
T^{sqlite3_stmt=},N,V_getFileBackupWithNullMessageID
stashSettingsSyncData
T^{sqlite3_stmt=},N,V_stashSettingsSyncData
getStashedSettingSyncData
T^{sqlite3_stmt=},N,V_getStashedSettingSyncData
flushStashedSettingSyncData
T^{sqlite3_stmt=},N,V_flushStashedSettingSyncData
purgeMessageTypeTable
T^{sqlite3_stmt=},N,V_purgeMessageTypeTable
purgeSettingsSyncTable
T^{sqlite3_stmt=},N,V_purgeSettingsSyncTable
purgeSettingsBackupTable
T^{sqlite3_stmt=},N,V_purgeSettingsBackupTable
purgeFileBackupTable
T^{sqlite3_stmt=},N,V_purgeFileBackupTable
version
TQ,R,N,V_version
%@ %@
System/Library/PreferencesSyncBundles
NPSDomains
NPSAction
NPSDefaultsDomain
NPSDefaultsKeys
NPSDefaultsKeyPrefixes
NPSChangeNotificationName
NPSContainer
NPSAppGroupContainer
NPSCloudEnabled
NPSSyncGroups
OneWaySync
TwoWaySync
Whitelist
Backup
Local
First
NPSFileBackup
NPSFilePaths
NPSDirectoryPaths
<%@: %p key = "%@" twoWaySync = %d
%@%@>
T@"NSString",&,N,V_key
twoWaySync
TB,N,V_twoWaySync
isPrefix
TB,N,V_isPrefix
isCloudEnabled
TB,N,V_isCloudEnabled
syncGroups
T@"NSSet",&,N,V_syncGroups
<%@: %p domain = "%@" _keys = "%@"
keyArrays
T@"NSMutableDictionary",&,N,V_keyArrays
keyPrefixArrays
T@"NSMutableDictionary",&,N,V_keyPrefixArrays
<%@: %p key = "%@" notificationNames = "%@" twoWaySync = %d
notificationNames
T@"NSMutableSet",&,N,V_notificationNames
keys
T@"NSMutableDictionary",&,N,V_keys
keyPrefixes
T@"NSMutableDictionary",&,N,V_keyPrefixes
T@"BackupableUserDefaultsDomain",W,N,V_domain
T@"BackupableUserDefaultsContainer",W,N,V_container
domains
T@"NSMutableDictionary",&,N,V_domains
self ENDSWITH '.bundle'
B44@?0@"NSBundle"8@"NSString"16B24@"<NSObject>"28#36
Key %@ not found when expected.
Item in container for key %@ expected to be of type %@.
Key %@ expected to be of type %@.
v28@?0@"NSString"8B16@"NSString"20
syncedUserDefaults
T@"NSMutableDictionary",&,N,V_syncedUserDefaults
whitelisedUserDefaults
T@"NSMutableDictionary",&,N,V_whitelisedUserDefaults
backupableUserDefaultContainers
T@"NSMutableDictionary",&,N,V_backupableUserDefaultContainers
backupableFiles
T@"NSMutableSet",&,N,V_backupableFiles
backupableDirectories
T@"NSMutableSet",&,N,V_backupableDirectories
SIMULATOR_ROOT
value
-[NPSUserDefaultsMsgKey writeTo:]
/BuildRoot/Library/Caches/com.apple.xbs/Sources/NanoPreferencesSyncDaemon_Sim/NanoPreferencesSync-261/nanoprefsyncd-shared/Protocols/NPSUserDefaultsMsgKey.m
nil != self->_key
hasValue
TB,R,N
T@"NSData",&,N,V_value
hasTwoWaySync
TB,N
NanoPreferencesSync
Cache/
database.db
-[NPSDeviceRegistry startMonitoringPairingEventsWithQueue:]
/BuildRoot/Library/Caches/com.apple.xbs/Sources/NanoPreferencesSyncDaemon_Sim/NanoPreferencesSync-261/nanoprefsyncd-shared/NPSDeviceRegistry.m
queue
v8@?0
hasCheckedInWithNanoRegistry
TB,N,V_hasCheckedInWithNanoRegistry
activeDevice
T@"NRDevice",&,N,V_activeDevice
alreadyExistingAssertion
T@"NRActiveDeviceAssertion",W,N,V_alreadyExistingAssertion
activeDeviceID
T@"NSUUID",&,N,V_activeDeviceID
pairingDataStore
T@"NSString",&,N,V_pairingDataStore
domainAccessor
T@"NPSDomainAccessor",&,N,V_domainAccessor
perGizmoCacheDirectoryPath
T@"NSString",&,N,V_perGizmoCacheDirectoryPath
globalCacheDirectoryPath
T@"NSString",&,N,V_globalCacheDirectoryPath
databasePath
T@"NSString",&,N,V_databasePath
registryChangedSemaphores
T@"NSMutableArray",&,N,V_registryChangedSemaphores
server
T@"NPSServer",W,N,V_server
T@"NSObject<OS_dispatch_queue>",R,N,V_queue
paired
TB,R,N,GisPaired
lastActiveDate
T@"NSDate",R,N
shouldRun
TB,R,N,V_shouldRun
fileURL
fileData
hasFileURL
T@"NSData",&,N,V_fileURL
hasFileData
T@"NSData",&,N,V_fileData
compressedPath
T@"NSURL",R,N,V_compressedPath
kind
feature
setting
restriction
userSettingsAndRestrictions
hasKind
T@"NSString",&,N,V_kind
hasFeature
T@"NSString",&,N,V_feature
hasSetting
T@"NSData",&,N,V_setting
hasRestriction
T@"NSData",&,N,V_restriction
hasUserSettingsAndRestrictions
T@"NSData",&,N,V_userSettingsAndRestrictions
com.apple.nanoprefsync
com.apple.private.alloy.preferencessync
content
UserDefaults/
UserDefaultsBackup/
FileBackup/
local-device-build-version
last-active-date
paired-device-build-version
timestamp
hash
TQ,R
superclass
T#,R
description
T@"NSString",R,C
debugDescription
com.apple.nanopreferencessync.backuprestore
com.apple.nanoprefsyncd.launchtransaction
com.apple.nanoprefsync.workQueue
com.apple.private.alloy.preferencessync-idswake
v16@?0@"NSObject<OS_xpc_object>"8
com.apple.notifyd.matching
Notification
com.apple.Preferences.ChangedRestrictionsEnabledStateNotification
com.apple.nanoprefsyncd.groupsynctransaction
v48@?0@"NSString"8@"UserDefaultsDomain"16@"NSString"24@"UserDefaultsKey"32@"NSMutableDictionary"40
v32@?0@"NSString"8@"NSArray"16^B24
v32@?0@"NSString"8@"NSMutableDictionary"16^B24
v32@?0@"NSString"8@"UserDefaultsDomain"16^B24
v48@?0@"NSString"8@"WhitelistedUserDefaultsDomain"16@"NSString"24@"WhitelistedUserDefaultsKey"32@"NSMutableDictionary"40
v32@?0@"NSString"8@"WhitelistedUserDefaultsKey"16^B24
v32@?0@"NSString"8@"WhitelistedUserDefaultsDomain"16^B24
-[NPSServer checkActiveDeviceChangedVersion]
MessageSendTimeout
PurgeRetryDelay
com.apple.NanoPreferencesSync
NPS should not try syncing when there is no active device
com.apple.nanoprefsyncd.idstransaction
v28@?0@"NSString"8@"NSSet"16B24
v32@?0@"NSString"8@"NSString"16@"NSSet"24
v16@?0@"NSString"8
com.apple.nanoprefsyncd.resourcetransaction
v24@?0Q8@"NSData"16
%@|%@
v44@?0@"NSString"8@"NSString"16@"NSData"24B32d36
com.apple.locationd/Restrictions
com.apple.nanoprefsyncd.synchronizeuserdefaultsdomain
com.apple.mobile.keybagd.first_unlock
enabling
disabling
com.apple.nanoprefsyncd.backupuserdefaultsdomain
com.apple.nanoprefsyncd.backupfileatpath
totalDataToSyncInBytes
TQ,N,V_totalDataToSyncInBytes
remainingDataToSyncInBytes
TQ,N,V_remainingDataToSyncInBytes
syncSessionProgressDictionary
T@"NSMutableDictionary",R,N,V_syncSessionProgressDictionary
syncTransaction
T@"NSObject<OS_os_transaction>",&,N,V_syncTransaction
workQueue
T@"NSObject<OS_dispatch_queue>",&,N,V_workQueue
settings
T@"NPSSettings",&,N,V_settings
xpcListener
T@"NSXPCListener",&,N,V_xpcListener
idsService
T@"IDSService",&,N,V_idsService
deviceRegistry
T@"NPSDeviceRegistry",&,N,V_deviceRegistry
database
T@"NPSDatabase",&,N,V_database
purgeTimer
T@"NSObject<OS_dispatch_source>",&,N,V_purgeTimer
allowedGroups
T@"NSDictionary",&,N,V_allowedGroups
currentlyUsedDomain
T@"NSString",&,N,V_currentlyUsedDomain
-[NPSUserDefaultsMsg writeTo:]
/BuildRoot/Library/Caches/com.apple.xbs/Sources/NanoPreferencesSyncDaemon_Sim/NanoPreferencesSync-261/nanoprefsyncd-shared/Protocols/NPSUserDefaultsMsg.m
nil != self->_domain
hasTimestamp
Td,N,V_timestamp
T@"NSMutableArray",&,N,V_keys
-[NPSUserDefaultsBackupMsgKey writeTo:]
/BuildRoot/Library/Caches/com.apple.xbs/Sources/NanoPreferencesSyncDaemon_Sim/NanoPreferencesSync-261/nanoprefsyncd-shared/Protocols/NPSUserDefaultsBackupMsgKey.m
-[NPSUserDefaultsBackupMsg writeTo:]
/BuildRoot/Library/Caches/com.apple.xbs/Sources/NanoPreferencesSyncDaemon_Sim/NanoPreferencesSync-261/nanoprefsyncd-shared/Protocols/NPSUserDefaultsBackupMsg.m
hasContainer
<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE plist PUBLIC "-//Apple//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd">
<plist version="1.0">
<dict>
<key>com.apple.managedconfiguration.profiled-access</key>
<true/>
<key>com.apple.private.ids.messaging</key>
<array>
<string>com.apple.private.alloy.preferencessync</string>
</array>
<key>com.apple.private.ignore-preferences-size-limits</key>
<true/>
<key>keychain-access-groups</key>
<array>
<string>apple</string>
<string>com.apple.certificates</string>
<string>com.apple.identities</string>
</array>
</dict>
</plist>
zPLR
