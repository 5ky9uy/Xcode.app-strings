@(#)PROGRAM:dyld_sim  PROJECT:dyld-927.1
*09?`
!'06Tx
(/<B<<<^
'*2;Bd
CFNW^~
,*(&$" 
D7q/;M
}Uo
+Yo,
&\8!
* qW
LwH'
L*~e
start
dyldMain.cpp
dyldMA->hasChainedFixups()
v16@?0r^{dyld_chained_starts_in_image=I[1I]}8
v24@?0r^{SegmentInfo=QQQQQ*IIb1b1b1b1b12b16}8^B16
_dyld_sim_prepare
%s in %s
terminating because inserted dylib '%s' could not be loaded: %s
v24@?0r*8^B16
v16@?0r*8
cache patch: %p = 0x%0lX
v28@?0Q8{PointerMetaData=b16b8b1b2b1}16Q20
v16@?0r^{CachePatch=II(BindTargetRef={LoaderAndOffset=b16b8b39b1}{Absolute=b63b1}Q)}8
__DATA
__dyld4
compatible libdyld.dylib not found
libdyld.dylib not found
program does not link with libSystem.B.dylib
/usr/lib/system/lib
DriverKit main entry point not set
main executable has no entry point
main executable is missing LC_MAIN
atIndex
PrebuiltLoader.h
loaderIndex < loadersArrayCount
push_back
Array.h
_usedCount < _allocCount
reserve
Vector.h
_allocator != nullptr
erase
_size > 0
operator[]
idx < _usedCount
roalloc
DyldProcessConfig.cpp
next < &roBuffer[0x8000]
dyld_file
/usr/lib/dyld
executable_file
executable_path
v20@?0i8I12I16
DYLD_FORCE_PLATFORM
arm64
ptrauth_disabled
DYLD_SKIP_MAIN
DYLD_AMFI_FAKE
DYLD_
LD_LIBRARY_PATH=
DYLD_PRINT_SEGMENTS
DYLD_PRINT_LIBRARIES
DYLD_PRINT_BINDINGS
DYLD_PRINT_INITIALIZERS
DYLD_PRINT_APIS
DYLD_PRINT_NOTIFICATIONS
DYLD_PRINT_INTERPOSING
DYLD_PRINT_LOADERS
DYLD_PRINT_SEARCHING
DYLD_PRINT_ENV
DYLD_PRINT_TO_STDERR
DYLD_PRINT_TO_FILE
dyld_flags
DYLD_SHARED_REGION
DYLD_SHARED_CACHE_DIR
private
avoid
v44@?0r^v8Q16B24r^{FileID=QQB}28r*36
/System/DriverKit/usr/lib/system/libdyld.dylib
/usr/lib/system/libdyld.dylib
initializeCachePlatformOSVersion(): libdyld.dylib not found for OS version info
marking shared cache range 0x%x permissions: 0x%09lX -> 0x%09lX
failed to mprotect shared cache due to: %d
v48@?0r^v8Q16Q24I32I36Q40
v16@?0r^{DyldSharedCache={dyld_cache_header=[16c]IIIIQQQQQQQ[16C]QIIQQQQQQQQQQQQIb8b1b1b1b1b20QQQQQQQQQQQIIQQQQQIIIIQQII[16C]QQQQII}}8
dyld4 config: 
.framework
DYLD_LIBRARY_PATH
DYLD_FRAMEWORK_PATH
DYLD_FALLBACK_FRAMEWORK_PATH
DYLD_FALLBACK_LIBRARY_PATH
DYLD_VERSIONED_FRAMEWORK_PATH
DYLD_VERSIONED_LIBRARY_PATH
DYLD_INSERT_LIBRARIES
DYLD_IMAGE_SUFFIX
DYLD_ROOT_PATH
@executable_path/
@loader_path/
/usr/local/lib
/usr/lib
/Library/Frameworks
/System/Library/Frameworks
/System/iOSSupport/
/System/iOSSupport
v28@?0r*8i16^B20
.framework/
DYLD_FRAMEWORK/LIBRARY_PATH
DYLD_VERSIONED_FRAMEWORK/LIBRARY_PATH
Catalyst prefix
simulator prefix
original path
@path expansion
@loader_path expansion
@executable_path expanstion
leaf name using rpath
DYLD_FRAMEWORK/LIBRARY_FALLBACK_PATH
default fallback
unknown
dyld[%d]: 
DyldRuntimeState.cpp
_processPrebuiltLoaderSet != nullptr
index < _processPrebuiltLoaderSet->loaderCount()
appLoadAddress
setAppLoadAddress
index < this->config.dyldCache.dylibCount
cachedDylibLoadAddress
/System/DriverKit/usr/lib/libSystem.dylib
/usr/lib/libSystem.B.dylib
__dyld_missing_symbol_abort
Kernel mapped %s
%14s (%c%c%c) 0x%012llX->0x%012llX 
v8@?0
/dev/console
v40@?0i8r*12Q20B28^B32
v32@?0^(ChainedFixupPointerOnDisk=Q(Arm64e={dyld_chained_ptr_arm64e_auth_rebase=b32b16b1b2b11b1b1}{dyld_chained_ptr_arm64e_auth_bind=b16b16b16b1b2b11b1b1}{dyld_chained_ptr_arm64e_rebase=b43b8b11b1b1}{dyld_chained_ptr_arm64e_bind=b16b16b19b11b1b1}{dyld_chained_ptr_arm64e_bind24=b24b8b19b11b1b1}{dyld_chained_ptr_arm64e_auth_bind24=b24b8b16b1b2b11b1b1})(Generic64={dyld_chained_ptr_64_rebase=b36b8b7b12b1}{dyld_chained_ptr_64_bind=b24b8b19b12b1}){Kernel64=b30b2b16b1b2b12b1}I(Generic32={dyld_chained_ptr_32_rebase=b26b5b1}{dyld_chained_ptr_32_bind=b20b6b5b1}){dyld_chained_ptr_32_cache_rebase=b30b2}{Firm32=b26b6})8r^{dyld_chained_starts_in_segment=ISSQIS[1S]}16^B24
v24@?0Q8^B16
v56@?0Q8i16C20r*24B32B36Q40^B48
%s has interposed '%s' to replacing binds to 0x%08lX with 0x%08lX
   '%s' was previously interposed, so chaining 0x%08lX to call through to 0x%08lX
%s has interposed '%s' so need to patch cache uses of 0x%08lX
v32@?0Q8Q16^B24
arm64e
called static terminator %p in %s
v12@?0I8
notifier %p called with mh=%p
bulk notifier %p called with %d images
objc-mapped-notifier called with %d images:
 objc-mapped: %p %s
remove notifier %p called with mh=%p
objc-unmapped-notifier called with image %p %s
objc-mapped-notifier called with %ld images:
objc-init-notifier called with mh=%p, path=%s
could not create thread local variables pthread key
v16@?0^{TLV_Thunk=^?QQ}8
v16@?0^{TLV_TerminatorList=^{TLV_TerminatorList}Q[7{TLV_Terminator=^?^v}]}8
DYLD4_CLOSURE_DIR
HOME
/Library/Caches/com.apple.dyld/
.dyld4
DYLD_USE_CLOSURES
executable_cdhash
PrebuiltLoaders not being used because there is no dyld shared cache
PrebuiltLoaders not being used because DYLD_ env vars are set
PrebuiltLoaders cannot be used with unsigned or old format programs
PrebuiltLoader %p found for %s in the dyld cache
PrebuiltLoader %p not used because cdHash does not match
PrebuiltLoader %p not used because Loader for %s is invalid
PrebuiltLoaderSet required for '%s' but not found at '%s'
back
_usedCount > 0
growTo
fixup: *0x%012lX = 0x%012lX <%s>
path
Loader.cpp
this->magic == kMagic
loadAddress
contains
matchesPath
fileID
dependentCount
dependent
loadDependents
getExportsTrie
hiddenFromFlat
representsCachedDylibIndex
applyFixups
overridesDylibInCache
unmap
hasBeenFixedUp
beginInitializers
runInitializers
<%s> %s
<no uuid> %s
@rpath/
find path "%s"
  found: already-loaded-by-rpath: %s
  switch to canonical cache path: %s
  possible path(%s): "%s"
tried: '%s' (relative path not allowed in hardened program)
, '%s' (relative path not allowed in hardened program)
  found: already-loaded-by-path: "%s"
  found: already-loaded-by-dylib-index: "%s" -> %s
  found: already-loaded-by-inode-mtime: "%s"
/usr/lib/system/
tried: '%s' (not a file)
tried: '%s' (no such file)
, '%s' (not a file)
, '%s' (no such file)
  found: dylib-from-disk-to-override-cache: "%s"
  found: dylib-from-disk-to-override-cache-error: "%s" => "%s"
  found: dylib-from-disk: "%s"
  found: dylib-from-disk-error: "%s" => "%s"
  found: dylib-from-cache: (0x%04X) "%s"
  found: dylib-from-cache-error: "%s" => "%s"
tried: '%s' (%s)
, '%s' (%s)
  switch to realpath: "%s"
  not found: "%s"
, (security policy does not allow @ path expansion)
@loader_path
    @loader_path not allowed in DYLD_INSERT_LIBRARIES
    @loader_path in LC_RPATH from main executable not expanded due to security policy
@executable_path
    @executable_path not expanded due to security policy
  LC_RPATH '%s' from '%s'
file system sandbox blocked stat("%s")
no such file
stat("%s") failed with errno=%d
file inode changed from 0x%llX to 0x%llX since PrebuiltLoader was built for '%s'
file mtime changed from 0x%llX to 0x%lX since PrebuiltLoader was built for '%s'
file too small for slice offset '%s'
file system sandbox blocked open("%s", O_RDONLY)
open("%s", O_RDONLY) failed with errno=%d
code signature invalid (errno=%d) sliceOffset=0x%08llX, codeBlobOffset=0x%08X, codeBlobSize=0x%08X for '%s'
fcntl(fd, F_ADDFILESIGS_RETURN) failed with errno=%d, sliceOffset=0x%08llX, codeBlobOffset=0x%08X, codeBlobSize=0x%08X for '%s'
code signature does not cover entire file up to signature
code signature in (%s) not valid for use in process: %s
vm_allocate(size=0x%0llX) failed with result=%d
Mapping %s (slice offset=0x%llX)
Mapping %s
file system sandbox blocked mmap() of '%s'
code signing blocked mmap() of '%s'
mmap(addr=0x%0llX, size=0x%08X) failed with errno=%d for %s
%14s (%c%c%c) 0x%012lX->0x%012lX
fixup: *0x%012lX = 0x%012lX
v24@?0^v8^v16
fixup: *0x%012lX = 0x%012lX <rebase>
fixup: *0x%012lX = 0x%012lX <%s/bind#%u>
v28@?0Q8I16^B20
fixup: *0x%012lX (skipping missing weak bind) <%s/weak-bind#%u>
fixup: *0x%012lX = 0x%012lX <%s/weak-bind#%u>
running initializer %p in %s
mprotect 0x%012lX->0x%012lX to read-only
Using mapping in dyld cache for %s
symbol not found in flat namespace '%s'
weak-def symbol not found '%s'
unknown library ordinal %d in %s when binding '%s'
Symbol not found: %s
  Referenced from: %s
  Expected in: %s
re-export ordinal %lld in %s out of range for %s
v44@?0r*8Q16C24C28S32^B36
  interpose replaced 0x%08lX with 0x%08lX in %s
dlsym
interpose: *%p = 0x%0llX (dyld cache patch) to %s
v20@?0I8r*12
applyCachePatchesTo
dyldCache->patchInfoVersion() == 2
cache fixup: *0x%012lX = 0x%012lX (*%s+0x%012lX = %s+0x%012lX)
v24@?0I8{PointerMetaData=b16b8b1b2b1}12Q16
cachePatch->overrideOffsetOfImpl == -1
dylib not found
Library not loaded: %s
  Referenced from: %s
  Reason: image not found
Library not loaded: %s
  Referenced from: %s
  Reason: %s
v44@?0r*8B16B20B24I28I32^B36
JustInTimeLoader.cpp
dyldCache != nullptr
dependentKind
depIndex < this->depCount
!this->allDepsAreNormal
v24@?0I8I12r^{ResolvedSymbol=^{Loader}*QiBB}16
<none>
<%s/bind#%lu> -> %p (%s/%s)
v24@?0r^{ResolvedSymbol=^{Loader}*QiBB}8^B16
<%s/bind#%lu> -> missing-weak-bind (%s)
trying to unmap %s
force || !this->neverUnload
unmapped 0x%012lX->0x%012lX for %s
using JustInTimeLoader %p for %s
forEachBindTarget_block_invoke
targetIndex == info.targetIndex
v24@?0r^{BindTargetInfo=Ii*QBB}8^B16
overrideBindTargetIndex == info.targetIndex
wrong platform to load into process
cannot load dylib '%s'
cannot link against bundle '%s'
cannot link against a main executable '%s'
cannot dlopen a main executable '%s'
unloadable mach-o file type %d '%s'
v16@?0r^v8
BindTargetRef
PrebuiltLoader.cpp
(high2 == 0) || (high2 == 3) && "unencodeable absolute symbol value"
loaderRef
_regular.kind == 0
offset
using PrebuiltLoader %p for %s
<%s/bind#%lu> -> %p
<%s/bind#%lu> -> %p (%s+0x%08llX)
<%s/bind#%lu> -> missing-weak-bind
recursiveMarkBeingValidated
dep->isPrebuilt
found '%s' with different inode/mtime than PrebuiltLoader for '%s'
found '%s' which invalidates PrebuiltLoader for '%s'
PrebuiltLoader %p '%s' not used because a file was found that overrides it
PrebuiltLoader %p not used because file inode/mtime does not match
PrebuiltLoader %p not used because file missing
PrebuiltLoader %p not used because file '%s' cdHash changed
PrebuiltLoader %p not used because file '%s' cannot be opened
ldrState == State::fixedUp
setLoadAddress
this->ref.app && "shared cache addresses are fixed"
fixup: *0x%012lX = 0x%012lX <objc-info preoptimized>
fixup: *0x%012lX = 0x%012lX <objc-protocol>
v32@?0Q8r^{ObjCProtocol=QQQQQQQ}16^B24
fixup: *0x%012lX = 0x%012lX <objc-selector '%s'>
v24@?0Q8Q16
fixup: *0x%012lX = 0x%012lX <mark swift stable>
v52@?0Q8Q16Q24r^{ObjCClassInfo=QQQQIBB{VMAddrConverter=QqSB}}32B40^B44
v32@?0Q8r^{ObjCCategory=QQQQQQ}16^B24
false
not using PrebuiltLoaderSet %p because magic at start does not match
not using PrebuiltLoaderSet %p because versionHash (0x%08X) does not match dyld (0x%08X)
not using PrebuiltLoaderSet %p because cache UUID does not match
not using PrebuiltLoaderSet %p because process does not have a dyld cache
not using PrebuiltLoaderSet %p because existence of file '%s' invalids the PrebuiltLoaderSet
Class %s is implemented in both %s (%p) and %s (%p). One of the two will be used. Which one is undefined.
v24@?0r^(BindTargetRef={LoaderAndOffset=b16b8b39b1}{Absolute=b63b1}Q)8r^v16
zeroFill
newAllocationAddr != 0
(uint8_t*)_usageEnd + reqSize <= (uint8_t*)_vmAllocationStart + _vmAllocationSize
fixup: *0x%012lX = 0x%012lX <mark method list uniqued>
/dev/dtracehelper
/private/var/mobile/Containers/Data/
stat() failed with errno=%d
open() failed with errno=%d
mmap(size=0x%0lX) failed with errno=%d
v40@?0I8I12r^v16Q24^B32
could not mmap() part of dyld cache
no shared cache file
shared cache file open() failed
shared cache file stat() failed
shared cache file pread() failed
shared cache file has wrong magic
shared cache file is for a different platform
shared cache file mappings are invalid
shared cache data mapping was expected
shared cache text file offset is invalid
shared cache code signature size is invalid
shared cache linkedit permissions are invalid
shared cache text permissions are invalid
shared cache mappings overlap
shared cache data mappings have wrong permissions
code signature registration for shared cache failed
code signature does not cover entire shared cache file
first page of shared cache not mmap()able
first page of mmap()ed shared cache not valid
/System/DriverKit/System/Library/dyld/
/System/Library/Caches/com.apple.dyld/
dyld_sim_shared_cache_arm64
_dyld_image_count() => %d
_dyld_get_image_header(%u) => %p
_dyld_get_image_slide(%p) => 0x%lX
_dyld_get_image_vmaddr_slide(%u) => 0x%lX
_dyld_get_image_name(%u) => %s
NSVersionOfLinkTimeLibrary(%s) =>0x%08X
NSVersionOfRunTimeLibrary(%s) => 0x%08X
v20@?0I8I12I16
dyld_get_program_sdk_watch_os_version() => 0x%08X
dyld_get_program_min_watch_os_version() => 0x%08X
dyld_get_program_sdk_bridge_os_version() => 0x%08X
dyld_get_program_min_bridge_os_version() => 0x%08X
dyld_get_sdk_version(%p) => 0x%08X
dyld_get_program_sdk_version() => 0x%08X
dyld_get_min_os_version(%p) => 0x%08X
dyld_get_active_platform() => %d
dyld_get_base_platform(%d) => %d
dyld_is_simulator_platform(%d) => %d
dyld_sdk_at_least(%p, <%d,0x%08X>) => %d
dyld_minos_at_least(%p, <%d,0x%08X>) => %d
dyld_get_image_versions(%p, %p)
_dyld_get_image_uuid(%p, %p)
_NSGetExecutablePath(%p, %p)
_dyld_register_func_for_add_image(%p)
add notifier %p called with mh=%p
_dyld_register_func_for_remove_image(%p)
_dyld_objc_notify_register(%p, %p, %p)
dyld_image_header_containing_address(%p) =>%p
dyld_image_path_containing_address(%p) => '%s'
_dyld_is_memory_immutable(%p, %lu) => %d
dladdr(%p, %p)
__dso_handle
_ZN5dyld45startEPKNS_10KernelArgsE
dlerror() => '%s'
dlerror() => NULL
dlopen("%s", 0x%08X)
IBDesignablesAgent
dlopen(%s, 0x%04X): %s
      dlopen(%s) => NULL, '%s'
      dlopen(%s) => %p
dlclose(%p)
dlclose(%p): invalid handle
dlopen_preflight(%s)
dlopen_preflight(%s) => false, %s
      dlopen_preflight(%s) => %d
dlsym(%p, "%s")
dlsym(RTLD_DEFAULT, %s): symbol not found
     dlsym("%s") => NULL
dlsym(RTLD_MAIN_ONLY, %s): symbol not found
dlsym(RTLD_NEXT, %s): called by unknown image (caller=%p)
dlsym(RTLD_NEXT, %s): symbol not found
dlsym(RTLD_SELF, %s): called by unknown image (caller=%p)
dlsym(RTLD_SELF, %s): symbol not found
dlsym(%p, %s): invalid handle
dlsym(%p, %s): symbol not found
     dlsym("%s") => %p
dyld_shared_cache_some_image_overridden() => %d
_dyld_get_shared_cache_uuid(%p)
_dyld_get_shared_cache_range(%p) => %p,0x%lX
_dyld_shared_cache_optimized() => %d
_dyld_images_for_addresses(%d, %p, %p)
_dyld_register_for_image_loads(%p)
_dyld_register_for_bulk_image_loads(%p)
add bulk notifier %p called with %d images
_dyld_find_unwind_sections(%p, %p)
__TEXT
__eh_frame
__unwind_info
dyld_process_is_restricted() => %d
dyld_shared_cache_file_path() => %s
dyld_has_inserted_or_interposing_libraries() => %d
dyld_shared_cache_find_iterate_text()
v48@?0Q8Q16[16C]24r*32^B40
v28@?0Q8S16^B20
v28@?0I8r*12r^v20
_dyld_get_prog_image_header() => %p
_dyld_has_fix_for_radar(%s)
_dyld_is_objc_constant(%d, %p)
_dyld_launch_mode() => 0x%08X
_dyld_register_driverkit_main(%p)
_dyld_register_driverkit_main() may only be called once
_dyld_register_driverkit_main() can only be called in DriverKit processes
_dyld_shared_cache_contains_path(%s) => %d
_dyld_shared_cache_real_path(%s) => '%s'
_dyld_shared_cache_is_locally_built() => %d
dyld_need_closure()
missing symbol called
obsolete dyld API called
.dylib
.symbols
DyldAPIs.cpp
i < count
OptimizerObjC.h
PrebuiltObjC.cpp
forEachClass
duplicateCountTarget.isAbsolute()
v32@?0Q8r^{ObjCMethod=QQQQ}16^B24
v16@?0Q8
/usr/lib/libobjc.A.dylib
getPreoptimizedHeaderRW
hinfoRW->entsize == sizeof(header_info_rw)
index
hi >= begin && hi < end
__OBJC
v28@?0r^{SectionInfo={SegmentInfo=QQQQQ*IIb1b1b1b1b12b16}QQ*IIIII}8B16^B20
x86_64
x86_64h
PrebuiltObjC.h
subArray
start+size <= _usedCount
~Allocator
Allocator.cpp
_vmAllocatedBytes == 0
removeRegion
i != &_regionList[_regionCount]
split
address != nullptr
size > entrySize
lastAddress() == next()->address
isolateRegion
address <= region.address
region.lastAddress() <= lastAddress()
free
metadata->allocator == this
metadata->slot1 == AllocationMetadata::kNormalPtr
operator()
popcount(alignment) == 1
alignment <= kPageSize
result.address != nullptr
dyld calling abort()
Assertion failed: (%s), file %s, line %d.
Assertion failed: (%s), function %s, file %s, line %d.
stack_guard=
stack buffer overrun
_Block_object_assign()
_Block_object_dispose()
__LINKEDIT
_proc_regionfilename
_getpid
mach_port_insert_right
_mach_port_allocate
_mach_msg
__ZN4dyldL17sNotifyReplyPortsE
__ZN4dyldL16sZombieNotifiersE
/usr/lib/system/libsystem_kernel.dylib
dyld_v1
__AUTH
/usr/lib/system/libdispatch.dylib
patchableExportCount
DyldSharedCache.cpp
forEachPatchableExport
v52@?0r^{MachOAnalyzer=IiiIIII}8r*16I24Q28Q36^B44
forEachPatchableUseOfExport
userDylib != nullptr
!dataRanges.empty()
shouldPatchClientOfImage
forEachPatchableUseOfExportInImage
userDylibImageIndex != ~0U
__objc_opt_ro
slice %d extends beyond end of file
cpu type in slice (0x%08X) does not match fat header (0x%08X)
cpu subtype in slice (0x%08X) does not match fat header (0x%08X)
!<arch>
file is static library
slice is not page aligned
fat header too large: %u entries
%s, 
not a fat file
armv7k
armv7s
armv7
arm64_32
i386
MachOFile.cpp
macOS
tvOS
watchOS
bridgeOS
MacCatalyst
iOS-sim
tvOS-sim
watchOS-sim
driverKit
/usr/lib/system/libsystem_platform.dylib
/usr/lib/system/libsystem_pthread.dylib
/usr/lib/system/libsystem_platform_debug.dylib
/usr/lib/system/libsystem_pthread_debug.dylib
/usr/lib/system/host/liblaunch_sim.dylib
v24@?0r^{load_command=II}8^B16
file does not start with MH_MAGIC[_64]
load commands exceed length of first segment
file does not start with MH_MAGIC[_64]: 0x%08X 0x%08X
malformed load command #%d of %d at %p with mh=%p, size (0x%X) too small
malformed load command #%d of %d at %p with mh=%p, size (0x%X) is too large, load commands end at %p
/System/DriverKit/usr/lib/system/
/System/DriverKit/usr/lib/libSystem.B.dylib
_PATH
entryAddrFromThreadCmd
cmd->cmd == LC_UNIXTHREAD
__interpose
interposing section %s/%s has bad size
interposing section %s/%s extends beyond the end of the segment
interposing section %s/%s is not pointer aligned
__RESTRICT
__restrict
__allow_alt_plat
malformed uleb128
uleb128 too big for uint64
malformed sleb128
fat file, but missing compatible architecture (have '%s', need '%s')
not a mach-o file
mach-o file, but is an incompatible architecture (have '%s', need '%s')
mach-o file (%s), but incompatible platform (have '%s', need '%s')
LC_DYLD_INFO load command size wrong
multiple LC_DYLD_INFO load commands
LC_DYLD_EXPORTS_TRIE load command size wrong
multiple LC_DYLD_EXPORTS_TRIE load commands
LC_DYLD_CHAINED_FIXUPS load command size wrong
multiple LC_DYLD_CHAINED_FIXUPS load commands
LC_SYMTAB load command size wrong
multiple LC_SYMTAB load commands
LC_DYSYMTAB load command size wrong
multiple LC_DYSYMTAB load commands
LC_SEGMENT_SPLIT_INFO load command size wrong
multiple LC_SEGMENT_SPLIT_INFO load commands
LC_FUNCTION_STARTS load command size wrong
multiple LC_FUNCTION_STARTS load commands
LC_DATA_IN_CODE load command size wrong
multiple LC_DATA_IN_CODE load commands
LC_CODE_SIGNATURE load command size wrong
multiple LC_CODE_SIGNATURE load commands
LC_UUID load command size wrong
multiple LC_UUID load commands
LC_VERSION_* load command size wrong
multiple LC_VERSION_MIN_* load commands
LC_BUILD_VERSION load command size wrong
LC_ENCRYPTION_INFO load command size wrong
multiple LC_ENCRYPTION_INFO load commands
LC_ENCRYPTION_INFO found in 64-bit mach-o
LC_ENCRYPTION_INFO_64 load command size wrong
multiple LC_ENCRYPTION_INFO_64 load commands
LC_ENCRYPTION_INFO_64 found in 32-bit mach-o
LC_DYSYMTAB but no LC_SYMTAB load command
re-export ordinal %lld out of range for %s
dependent dylib %lld not found for re-exported symbol %s
unsupported exported symbol kind. flags=%llu at node offset=0x%0lX
malformed trie node, child node extends past end of trie
malformed trie child, nodeOffset=0x%llX out of range
malformed trie child, cycle to nodeOffset=0x%llX
unpackTarget
MachOLoaded.cpp
this->authBind.bind == 0
this->authBind.auth == 0
signExtendedAddend
this->authBind.bind == 1
isRebase
0 && "unsupported pointer chain format"
isBind
strideSize
out of range bind ordinal %d (max %lu)
unsupported pointer chain format: 0x%04X
unknown pointer format 0x%04X
v24@?0^(ChainedFixupPointerOnDisk=Q(Arm64e={dyld_chained_ptr_arm64e_auth_rebase=b32b16b1b2b11b1b1}{dyld_chained_ptr_arm64e_auth_bind=b16b16b16b1b2b11b1b1}{dyld_chained_ptr_arm64e_rebase=b43b8b11b1b1}{dyld_chained_ptr_arm64e_bind=b16b16b19b11b1b1}{dyld_chained_ptr_arm64e_bind24=b24b8b19b11b1b1}{dyld_chained_ptr_arm64e_auth_bind24=b24b8b16b1b2b11b1b1})(Generic64={dyld_chained_ptr_64_rebase=b36b8b7b12b1}{dyld_chained_ptr_64_bind=b24b8b19b12b1}){Kernel64=b30b2b16b1b2b12b1}I(Generic32={dyld_chained_ptr_32_rebase=b26b5b1}{dyld_chained_ptr_32_bind=b20b6b5b1}){dyld_chained_ptr_32_cache_rebase=b30b2}{Firm32=b26b6})8^B16
__PAGEZERO
v64@?0r*8r^{LinkEditInfo=^{dyld_info_command}^{linkedit_data_command}^{linkedit_data_command}^{symtab_command}^{dysymtab_command}^{linkedit_data_command}^{linkedit_data_command}^{linkedit_data_command}^{linkedit_data_command}{LayoutInfo=QQQIIII}}16r^{SegmentInfo=QQQQQ*IIb1b1b1b1b12b16}24B32I36C40Q44i52^B56
__stub_helper
v28@?0Q8B16^B20
rebase opcodes terminated early at offset %d of %d
REBASE_OPCODE_DO_REBASE_IMM_TIMES
REBASE_OPCODE_DO_REBASE_ADD_ADDR_ULEB
REBASE_OPCODE_DO_REBASE_ULEB_TIMES_SKIPPING_ULEB
unknown rebase opcode 0x%02X
local relocation has wrong r_length
local relocation has wrong r_type
local relocation
local relocation has out of range r_address
v52@?0Q8B16i20r*24B32B36B40^B44
S_ATTR_SELF_MODIFYING_CODE section type only valid in old i386 binaries
section %s overflows indirect symbol table
indirect symbol[%d] = %d which is invalid symbol index
symbol[%d] string offset out of range
v100@?0r*8r^{LinkEditInfo=^{dyld_info_command}^{linkedit_data_command}^{linkedit_data_command}^{symtab_command}^{dysymtab_command}^{linkedit_data_command}^{linkedit_data_command}^{linkedit_data_command}^{linkedit_data_command}{LayoutInfo=QQQIIII}}16r^{SegmentInfo=QQQQQ*IIb1b1b1b1b12b16}24B32B36I40i44I48C52Q56C64r*68B76B80Q84^B92
BIND_OPCODE_DO_BIND
BIND_OPCODE_DO_BIND_ADD_ADDR_ULEB
BIND_OPCODE_DO_BIND_ADD_ADDR_IMM_SCALED
BIND_OPCODE_DO_BIND_ULEB_TIMES_SKIPPING_ULEB
bad bind opcode 0x%02X
bad lazy bind opcode 0x%02X
unexpected dylib ordinal in weak_bind
external relocation has wrong r_length
external relocation has wrong r_type
external relocation has out of range r_symbolnum
external relocation has r_symbolnum=%d which has out of range n_strx
external relocation
indirect symbol
indirect symbol has out of range address
v68@?0r^{LinkEditInfo=^{dyld_info_command}^{linkedit_data_command}^{linkedit_data_command}^{symtab_command}^{dysymtab_command}^{linkedit_data_command}^{linkedit_data_command}^{linkedit_data_command}^{linkedit_data_command}{LayoutInfo=QQQIIII}}8r^{SegmentInfo=QQQQQ*IIb1b1b1b1b12b16}16B24I28i32C36r*40Q48B56^B60
BIND_SUBOPCODE_THREADED_SET_BIND_ORDINAL_TABLE_SIZE_ULEB size too large
bad BIND_OPCODE_THREADED sub-opcode 0x%02X
malformed import table
malformed import table, string overflow
unknown imports format
v32@?0I8I12r*16^B24
initializer section %s/%s has bad size
initializer section %s/%s extends beyond its segment
initializer section %s/%s is not pointer aligned
no exeutable segments
-init does not point within __TEXT segment
initializer 0x%0llX does not point within executable segment
initializer 0x%0X does not point within executable segment
initializer offsets section %s/%s must be in read-only segment
initializer offsets section %s/%s has bad size
initializer offsets section %s/%s extends beyond the end of the segment
initializer offsets section %s/%s is not 4-byte aligned
initializer 0x%08X is not an offset to an executable segment
terminator section %s/%s has bad size
terminator section %s/%s extends beyond its segment
terminator section %s/%s is not pointer aligned
terminator 0x%0llX does not point within executable segment
terminator 0x%0X does not point within executable segment
__objc_imageinfo
__image_info
cstring section %s/%s extends beyond the end of the segment
load
__objc_nlclslist
__objc_nlcatlist
chainedPointerFormat
MachOAnalyzer.cpp
this->cputype == CPU_TYPE_ARM64 && (this->maskedCpuSubtype() == CPU_SUBTYPE_ARM64E) && "chainedPointerFormat() called on non-chained binary"
image does not use chained fixups
v32@?0Q8Q16r^{ObjCClassInfo=QQQQIBB{VMAddrConverter=QqSB}}24
__objc_dupclass
v104@?0r*8r^{LinkEditInfo=^{dyld_info_command}^{linkedit_data_command}^{linkedit_data_command}^{symtab_command}^{dysymtab_command}^{linkedit_data_command}^{linkedit_data_command}^{linkedit_data_command}^{linkedit_data_command}{LayoutInfo=QQQIIII}}16r^{SegmentInfo=QQQQQ*IIb1b1b1b1b12b16}24B32B36I40i44I48C52Q56C64r*68B76B80Q84B92^B96
v32@?0Q8r^{BindTargetInfo=Ii*QBB}16^B24
forEachRebase_Opcodes
leInfo.dyldInfo != nullptr
__Znwm
__ZnwmRKSt9nothrow_t
__Znam
__ZnamRKSt9nothrow_t
__ZdlPv
__ZdlPvRKSt9nothrow_t
__ZdlPvm
__ZdaPv
__ZdaPvRKSt9nothrow_t
__ZdaPvm
__ZnwmSt11align_val_t
__ZnwmSt11align_val_tRKSt9nothrow_t
__ZnamSt11align_val_t
__ZnamSt11align_val_tRKSt9nothrow_t
__ZdlPvSt11align_val_t
__ZdlPvSt11align_val_tRKSt9nothrow_t
__ZdlPvmSt11align_val_t
__ZdaPvSt11align_val_t
__ZdaPvSt11align_val_tRKSt9nothrow_t
__ZdaPvmSt11align_val_t
(null)
0123456789ABCDEF
0123456789abcdef
BUG IN CLIENT OF LIBPLATFORM: Failed to allocate memory for buffer
