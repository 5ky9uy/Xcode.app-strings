accounts/register-types-to-monitor
RegisterTypesToMonitor
BEGIN [%lld]: RegisterTypesToMonitor %@
END [%lld] %fs: RegisterTypesToMonitor %@%@
Attempted to register account monitor for types client is not authorized to access: %@
accounts/register-types-to-monitor-sync
RegisterTypesToMonitorSync
BEGIN [%lld]: RegisterTypesToMonitorSync %@
END [%lld] %fs: RegisterTypesToMonitorSync %@%@
"ACMonitoredAccountStore: Attempting to reconnect to accountsd..."
"ACMonitoredAccountStore: Failed to reconnect to accountsd: %@"
"ACMonitoredAccountStore: Reconnected to accountsd"
"ACMonitoredAccountStore: account was added: %@"
"ACMonitoredAccountStore: account was modified: %@"
"ACMonitoredAccountStore: account was removed: %@"
"ACMonitoredAccountStore: Connection to accountsd closed. Will reconnect on account change for appropriate account type"
"Remote account store returned fatal error: %{public}@"
"Remote account store depleted error attempts: %{public}@"
"Remote account store returned error: %{public}@, attemptsRemaining: %lu"
"Couldn't find the system library directory to search for plugins."
"Couldn't get value for the directory at %@: %@"
"Skipping file at %@ because it isn't a directory"
"Couldn't create plugin at %@"
"Encountered an error while scanning for plugins at %@: %@"
"Validating bundle at %@..."
"Validated bundle at %@"
"Loading AppleInternal plugins"
"Looking for AppleInternal plugin '%@' at '%@'"
accounts/account-with-identifier-sync
BEGIN [%lld]: AccountWithIdentifierSync %@
"Error returned from daemon: %@"
AccountWithIdentifierSync
END [%lld] %fs: AccountWithIdentifierSync %@%@
accounts/account-with-identifier
AccountWithIdentifier
BEGIN [%lld]: AccountWithIdentifier %@
END [%lld] %fs: AccountWithIdentifier %@%@
accounts/cached-account-with-identifier
CachedAccountWithIdentifier
BEGIN [%lld]: CachedAccountWithIdentifier %@
END [%lld] %fs: CachedAccountWithIdentifier %@%@
accounts/account-type-with-identifier-sync
BEGIN [%lld]: AccountTypeWithIdentifierSync %@
AccountTypeWithIdentifierSync
END [%lld] %fs: AccountTypeWithIdentifierSync %@%@
AccountTypeWithIdentifier
BEGIN [%lld]: AccountTypeWithIdentifier %@
END [%lld] %fs: AccountTypeWithIdentifier %@%@
accounts/all-accounts-sync
BEGIN [%lld]: AllAccountsSync 
"Error connecting to remote account store!"
AllAccountsSync
END [%lld] %fs: AllAccountsSync %@%@
accounts/accounts-with-type-sync
BEGIN [%lld]: AccountsWithTypeSync %@
AccountsWithTypeSync
END [%lld] %fs: AccountsWithTypeSync %@%@
accounts/accounts-with-type-with-options-sync
BEGIN [%lld]: AccountsWithTypeSync %@: %lu
"Error returned from daemon: %{public}@"
accounts/accounts-with-type
AccountsWithType
BEGIN [%lld]: AccountsWithType %@
END [%lld] %fs: AccountsWithType %@%@
accounts/accounts-with-type-with-options
BEGIN [%lld]: AccountsWithType %@: %lu
accounts/accounts-with-types
AccountsWithTypesWithProperties
BEGIN [%lld]: AccountsWithTypesWithProperties %@: %@
END [%lld] %fs: AccountsWithTypesWithProperties %@%@
accounts/accounts-with-types-sync
%@: %@
AccountsWithTypesWithPropertiesSync
BEGIN [%lld]: AccountsWithTypesWithPropertiesSync %@: %@
accounts/cached-accounts-with-types
%@: %lu
CachedAccountsWithType
BEGIN [%lld]: CachedAccountsWithType %@: %lu
END [%lld] %fs: CachedAccountsWithType %@%@
accounts/accounts-on-paired-device-with-types
%@ (options: %@)
AccountsOnPairedDeviceWithTypes
BEGIN [%lld]: AccountsOnPairedDeviceWithTypes %@ (options: %@)
END [%lld] %fs: AccountsOnPairedDeviceWithTypes %@%@
accounts/all-dataclasses
BEGIN [%lld]: AllDataclasses 
AllDataclasses
END [%lld] %fs: AllDataclasses %@%@
accounts/all-account-types
BEGIN [%lld]: AllAccountTypes 
AllAccountTypes
END [%lld] %fs: AllAccountTypes %@%@
VisibleAccountsWithTypes
BEGIN [%lld]: VisibleAccountsWithTypes %@
END [%lld] %fs: VisibleAccountsWithTypes %@%@
accounts/has-account-with-description
BEGIN [%lld]: HasAccountWithDescription %@
HasAccountWithDescription
END [%lld] %fs: HasAccountWithDescription %{public}@
accounts/kerberos-accounts
KerberosAccounts
BEGIN [%lld]: KerberosAccounts %@
END [%lld] %fs: KerberosAccounts %@%@
accounts/push-supported
BEGIN [%lld]: PushSupported %@
PushSupported
END [%lld] %fs: PushSupported %{public}@
accounts/accounts-with-type-exist
BEGIN [%lld]: AccountsWithTypeExist %@
AccountsWithTypeExist
END [%lld] %fs: AccountsWithTypeExist %@%@
accounts/accounts-with-type-count
BEGIN [%lld]: AccountsWithTypeCount %@
AccountsWithTypeCount
END [%lld] %fs: AccountsWithTypeCount %@%@
accounts/insert-account-type
InsertAccountType
BEGIN [%lld]: InsertAccountType %@
END [%lld] %fs: InsertAccountType %@%@
accounts/remove-account-type
RemoveAccountType
BEGIN [%lld]: RemoveAccountType %@
END [%lld] %fs: RemoveAccountType %@%@
accounts/remove-account
 AccountType=%{public,signpost.telemetry:string1,name=AccountType}@ 
RemoveAccount
BEGIN [%lld]: RemoveAccount  AccountType=%{public,signpost.telemetry:string1,name=AccountType}@ 
"Starting removal of account %@."
"Completed account removal: %@ - %@."
END [%lld] %fs: RemoveAccount %{public}@
accounts/can-save-account
CanSaveAccount
BEGIN [%lld]: CanSaveAccount 
"Checking save eligibility of account %@."
"Completed checking save eligibility: %@ - %@."
%{public}@
END [%lld] %fs: CanSaveAccount %{public}@
accounts/can-save-accounts-with-type
BEGIN [%lld]: CanSaveAccountsWithType %@
CanSaveAccountsWithType
END [%lld] %fs: CanSaveAccountsWithType %{public}@
accounts/save-account
 AccountType=%{public,signpost.telemetry:string1,name=AccountType}@ (account: %@)
SaveAccount
BEGIN [%lld]: SaveAccount  AccountType=%{public,signpost.telemetry:string1,name=AccountType}@ (account: %@)
"Starting save for account %@."
"Completed account save: %@ - %@."
END [%lld] %fs: SaveAccount %{public}@
"Account not dirty. Continue"
"Calling daemon to save"
accounts/save-verified-account
"Account not dirty, nothin' a do..."
END [%lld] %fs: SaveAccount %@%@
accounts/update-existence-cache
BEGIN [%lld]: UpdateExistenceCache %@
UpdateExistenceCache
END [%lld] %fs: UpdateExistenceCache %@%@
 %{public}@: Exceeded %{public}@ saves per %{public}@ minute(s)
accounts/request-access
RequestAccessToAccountType
BEGIN [%lld]: RequestAccessToAccountType %@ : %@
END [%lld] %fs: RequestAccessToAccountType %@%@
BEGIN [%lld]: AccessKeysForAccountType %@
AccessKeysForAccountType
END [%lld] %fs: AccessKeysForAccountType %@%@
accounts/app-permissions
BEGIN [%lld]: AppPermissionsForAccountType %@
AppPermissionsForAccountType
END [%lld] %fs: AppPermissionsForAccountType %@%@
accounts/set-permission-granted
%@: %@ -> %@
BEGIN [%lld]: PermitBundleWithAccountType %@: %@ -> %@
PermitBundleWithAccountType
END [%lld] %fs: PermitBundleWithAccountType 
accounts/clear-permission-granted
BEGIN [%lld]: ClearPermissionsForAccountType %@
ClearPermissionsForAccountType
END [%lld] %fs: ClearPermissionsForAccountType 
accounts/permission-for-type
PermissionForAccountType
BEGIN [%lld]: PermissionForAccountType %@
END [%lld] %fs: ClearPermissionsForAccountType %{public}@
accounts/granted-permissions-for-type
BEGIN [%lld]: GrantedPermissionsForAccountType %@
GrantedPermissionsForAccountType
END [%lld] %fs: GrantedPermissionsForAccountType %@%@
accounts/clear-granted-permissions-for-type
BEGIN [%lld]: ClearGrantedPermissionsForAccountType %@
ClearGrantedPermissionsForAccountType
END [%lld] %fs: ClearGrantedPermissionsForAccountType 
accounts/verify-credentials
 AccountType=%{public,signpost.telemetry:string1,name=AccountType}@  ShouldSave=%{public,signpost.telemetry:number1,name=ShouldSave}d  enableTelemetry=YES (account: %@)
VerifyCredentials
BEGIN [%lld]: VerifyCredentials  AccountType=%{public,signpost.telemetry:string1,name=AccountType}@  ShouldSave=%{public,signpost.telemetry:number1,name=ShouldSave}d  enableTelemetry=YES (account: %@)
"Starting credential verification for account %@."
"Completed account credential verification: %@ - %@."
END [%lld] %fs: VerifyCredentials %{public}@
accounts/renew-credentials
"Account %@ associated with store %@, renewing credentials on store %@"
 AccountType=%{public,signpost.telemetry:string1,name=AccountType}@  ShouldForce=%{public,signpost.telemetry:number1,name=ShouldForce}d  ShouldAvoidUI=%{public,signpost.telemetry:number2,name=ShouldAvoidUI}d  enableTelemetry=YES (account: %@)
RenewCredentials
BEGIN [%lld]: RenewCredentials  AccountType=%{public,signpost.telemetry:string1,name=AccountType}@  ShouldForce=%{public,signpost.telemetry:number1,name=ShouldForce}d  ShouldAvoidUI=%{public,signpost.telemetry:number2,name=ShouldAvoidUI}d  enableTelemetry=YES (account: %@)
"Starting credential renewal for account %@."
"Completed account credential renewal: %ld - %@."
END [%lld] %fs: RenewCredentials %{public}@
accounts/migrate-credentials
"Starting credential migration for account %@."
"Completed account credential migration: %@ - %@."
accounts/credential-for-account
BEGIN [%lld]: CredentialForAccount %@
CredentialForAccount
END [%lld] %fs: CredentialForAccount %@%@
%@ : %@
BEGIN [%lld]: CredentialForAccountWithServiceID %@ : %@
CredentialForAccountWithServiceID
END [%lld] %fs: CredentialForAccountWithServiceID %@%@
accounts/set-credential-for-account
%@ -> %@ : %@
BEGIN [%lld]: SetCredentialForAccountWithServiceID %@ -> %@ : %@
SetCredentialForAccountWithServiceID
END [%lld] %fs: SetCredentialForAccountWithServiceID %@%@
accounts/all-credential-items
BEGIN [%lld]: AllCredentialItems 
AllCredentialItems
END [%lld] %fs: AllCredentialItems %@%@
accounts/credential-item-for-account
BEGIN [%lld]: CredentialItemsForAccountWithServiceName %@ : %@
CredentialItemsForAccountWithServiceName
END [%lld] %fs: CredentialItemsForAccountWithServiceName %@%@
accounts/insert-credential-item
InsertCredentialItem
BEGIN [%lld]: InsertCredentialItem %@
"Credential item %@ associated with store %@, inserting credential item on store %@"
END [%lld] %fs: InsertCredentialItem %@%@
accounts/save-credential-item
SaveCredentialItem
BEGIN [%lld]: SaveCredentialItem %@
END [%lld] %fs: SaveCredentialItem %@%@
END [%lld] %fs: SaveCredentialItem %{public}@
"Calling daemon to save a credential item"
accounts/remove-credential-item
RemoveCredentialItem
BEGIN [%lld]: RemoveCredentialItem %@
END [%lld] %fs: RemoveCredentialItem %@%@
END [%lld] %fs: RemoveCredentialItem %{public}@
accounts/parent-account-for-account
"Account without identifier provided, bailing!"
BEGIN [%lld]: ParentAccountForAccount %@
ParentAccountForAccount
END [%lld] %fs: ParentAccountForAccount %@%@
accounts/child-accounts-for-account
BEGIN [%lld]: ChildAccountForAccounts %@
ChildAccountForAccounts
END [%lld] %fs: ChildAccountForAccounts %@%@
accounts/child-accounts-for-account-with-type
BEGIN [%lld]: ChildAccountForAccounts %@ : %@
accounts/enabled-dataclasses-for-account
BEGIN [%lld]: EnabledDataclassesForAccount %@
EnabledDataclassesForAccount
END [%lld] %fs: EnabledDataclassesForAccount %@%@
accounts/provisioned-dataclasses-for-account
BEGIN [%lld]: ProvisionedDataclassesForAccount %@
ProvisionedDataclassesForAccount
END [%lld] %fs: ProvisionedDataclassesForAccount %@%@
accounts/supported-dataclasses-for-account
BEGIN [%lld]: SupportedDataclassesForAccountType %@
SupportedDataclassesForAccountType
END [%lld] %fs: SupportedDataclassesForAccountType %@%@
accounts/syncable-dataclasses-for-account
BEGIN [%lld]: SyncableDataclassesForAccountType %@
SyncableDataclassesForAccountType
END [%lld] %fs: SyncableDataclassesForAccountType %@%@
accounts/display-type-for-account
BEGIN [%lld]: DisplayTypeForAccount %@
DisplayTypeForAccount
END [%lld] %fs: DisplayTypeForAccount %@%@
accounts/account-identifiers-enabled-for-dataclass
BEGIN [%lld]: AccountsEnabledForDataclass %@
AccountsEnabledForDataclass
END [%lld] %fs: AccountsEnabledForDataclass %@%@
accounts/account-identifiers-enabled-sync-dataclass
BEGIN [%lld]: AccountsEnabledToSyncDataclass %@
AccountsEnabledToSyncDataclass
END [%lld] %fs: AccountsEnabledToSyncDataclass %@%@
accounts/preload-dataclass-owners
PreloadDataclassOwners
BEGIN [%lld]: PreloadDataclassOwners 
END [%lld] %fs: PreloadDataclassOwners %@%@
accounts/dataclass-actions-for-account-save
BEGIN [%lld]: DataclassActionsForAccountSave %@
"Could not get dataclass actions: %@"
DataclassActionsForAccountSave
END [%lld] %fs: DataclassActionsForAccountSave %@%@
accounts/dataclass-actions-for-account-deletion
BEGIN [%lld]: DataclassActionsForAccountDeletion %@
DataclassActionsForAccountDeletion
END [%lld] %fs: DataclassActionsForAccountDeletion %@%@
accounts/is-performingdataclass-actions
BEGIN [%lld]: IsPerformingDataclassActions %@
"Could not get dataclass performing status: %@"
%@%@
IsPerformingDataclassActions
END [%lld] %fs: IsPerformingDataclassActions %@%@
accounts/is-tethered-syncing-enabled-for-dataclasse
BEGIN [%lld]: IsThetheredSyncingEnabledForDataclass %@
IsThetheredSyncingEnabledForDataclass
END [%lld] %fs: IsThetheredSyncingEnabledForDataclass %@%@
accounts/is-tethered-syncing-enabled-for-dataclass
BEGIN [%lld]: ThetheredSyncSourceTypeForDataclass %@
ThetheredSyncSourceTypeForDataclass
END [%lld] %fs: ThetheredSyncSourceTypeForDataclass %@%@
accounts/accounts-enabled-for-dataclasses-of-type
AccountsEnabledForDataclasses
BEGIN [%lld]: AccountsEnabledForDataclasses %@ : %@
END [%lld] %fs: AccountsEnabledForDataclasses %@%@
accounts/client-token-for-account
BEGIN [%lld]: ClientTokenForAccount %@
ClientTokenForAccount
END [%lld] %fs: ClientTokenForAccount %@%@
accounts/add-client-token
%@ -> %@
BEGIN [%lld]: AddClientTokenForAccount %@ -> %@
AddClientTokenForAccount
END [%lld] %fs: AddClientTokenForAccount %{public}@
accounts/discover-properties-for-account
 AccountType=%{public,signpost.telemetry:string1,name=AccountType}@  enableTelemetry=YES (account: %@)
DiscoverProperties
BEGIN [%lld]: DiscoverProperties  AccountType=%{public,signpost.telemetry:string1,name=AccountType}@  enableTelemetry=YES (account: %@)
END [%lld] %fs: DiscoverProperties %{public}@
accounts/open-authentication-url
OpenAuthURLForAccount
BEGIN [%lld]: OpenAuthURLForAccount %@ -> %@
END [%lld] %fs: OpenAuthURLForAccount %@%@
accounts/open-authentication-url-with-info
%@,%@,%@ -> %@
BEGIN [%lld]: OpenAuthURLForAccount %@,%@,%@ -> %@
accounts/paired-update-account
%@ (%@)
NotifyRemoteOfModifiedAccount
BEGIN [%lld]: NotifyRemoteOfModifiedAccount %@ (%@)
"Notified successfully!"
END [%lld] %fs: NotifyRemoteOfModifiedAccount %@%@
"Failed to notify remote of modified account!"
accounts/notify-remote-updated-credentials
NotifyRemoteOfUpdatedCredentials
BEGIN [%lld]: NotifyRemoteOfUpdatedCredentials %@ (%@)
"Notified of credential update successfully!"
END [%lld] %fs: NotifyRemoteOfUpdatedCredentials %@%@
"Failed to notify remote of updated credentials!"
accounts/paired-save-account
SaveAccountToPairedDevice
BEGIN [%lld]: SaveAccountToPairedDevice %@ (%@)
END [%lld] %fs: SaveAccountToPairedDevice %@%@
accounts/paired-remove-accounts
(%@)
RemoveAccountsFromPairedDevice
BEGIN [%lld]: RemoveAccountsFromPairedDevice (%@)
END [%lld] %fs: RemoveAccountsFromPairedDevice %@%@
"Removed successfully!"
accounts/paired-remove-account
RemoveAccountFromPairedDevice
BEGIN [%lld]: RemoveAccountFromPairedDevice %@ (%@)
END [%lld] %fs: RemoveAccountFromPairedDevice %@%@
accounts/trigger-keychain-migration
BEGIN [%lld]: TriggerMigration 
"Keychain migrated successfully!"
TriggerMigration
END [%lld] %fs: TriggerMigration %@%@
accounts/remove-obsolete-accounts
RemoveObsoleteAccounts
BEGIN [%lld]: RemoveObsoleteAccounts 
"Will remove obsolete accounts with type identifiers %@"
"Fetched obsolete accounts %@ error %@"
END [%lld] %fs: RemoveObsoleteAccounts %@%@
"Gathered account %@ potential dataclass actions for deletion %@ error %@"
"Could not find acceptable action for dataclass %@ for removal of account %@. Probably orphaning data."
"Will remove obsolete account %@ with dataclass actions %@"
"Did remove obsolete account %@ with success %@ error %@"
"Successfully saved macOSServer child account: %@"
"Failed to save macOSServer child account. Error: %@"
"Found a matching existing account %@"
accounts/handle-url
BEGIN [%lld]: HandleURL %@
HandleURL
END [%lld] %fs: HandleURL 
"Failed to handle URL: %@"
"reportTelemetryForLandmarkEvent no longer suppored"
accounts/schedule-backup
ScheduleBackup
BEGIN [%lld]: ScheduleBackup 
END [%lld] %fs: ScheduleBackup %@%@
"Backup scheduled (if nonexistent) successfully!"
accounts/reset-database-to-version
ResetDatabaseToVersion
BEGIN [%lld]: ResetDatabaseToVersion %@
END [%lld] %fs: ResetDatabaseToVersion %@%@
accounts/shutdown-accountsd
ShutdownAccountsd
BEGIN [%lld]: ShutdownAccountsd 
END [%lld] %fs: ShutdownAccountsd %@%@
"ACAccount initializer just ran into an account %@ without an account type!"
"Unexpecteed nil value for %@"
"NSObjectInaccessibleException caught inside -[ACAccount initWithManagedAccount:]"
"Failed to fetch provisioned dataclasses, error: %@"
"Multiple fetches for provisioned dataclasses, not updating cache..."
"%{private}s Deprecated method called, please file a radar!"
"Failed to fetch enabled dataclasses, error: %@"
"Multiple fetches for enabled dataclasses, not updating cache..."
"-[ACAccount isEnabledForDataclass:] should not be relied on to get the status of FMiP. It may return inaccurate results. Use AAUIDeviceLocatorService instead."
"Exchange qualified: %@"
"Failed with status %@"
"no-op: setManagingOwnerIdentifier called on child account"
"no-op: setManagingSourceName called on child account"
"NSObjectInaccessibleException caught inside -[ACAccountType initWithManagedAccountType:]"
Operation on account (%@) of type (%@) was not properly scoped.
"Bundle ID spoofing failed."
"Error signing request: %@"
"The connection to ACDOAuthSigner was interrupted."
"The connection to ACDAccountStore was interrupted."
"The connection to ACDAccountStore was invalidated."
"Error setting the client's bundle ID: %@"
"Spoofed the client's bundle ID to: %@"
"ACAccountStoreClientSideListener is ignoring credential change notification because no account ID was provided."
"Started rate limiter vacuuming (%{public}@ keys)"
"Finished rate limiter vacuuming (removed %{public}@ keys)"
"ACSystemConfigManager: failed to acquire SCPreferencesLock for %p due to error %@"
"trustRef was NULL"
"trustRef evaluated unsuccessfully: %@"
"Failed to deserialize, error: %@"
Exceeded the maximum number of connections (2) to accountsd: %d connections open. Consider switching to +[ACAccountStore defaultStore]
"Exceeded the maximum number of connections (2) to accountsd: %d connections open. Consider switching to +[ACAccountStore defaultStore]"
"NSObjectInaccessibleException caught inside -[ACCredentialItem initWithManagedCredentialItem:]"
"Removing object %@ error userInfo because it is not NSSecureCoding."
"ACZeroingString is being used with a decoder of type %@, which is not allowed."
"Writing Accounts ACLastMigrationSystemVersion version pref %@"
v24@?0@"NSArray"8@"NSError"16
_accountTypesToMonitor must be non-nil
_accountTypesToMonitor must not be empty
v8@?0
v16@?0@"<ACRemoteAccountStoreProtocol>"8
v16@?0@"NSError"8
v16@?0@"NSNotification"8
<ACDManagedAccount:%@>
com.apple.Dataclass.Mail
com.apple.Dataclass.Contacts
com.apple.Dataclass.Calendars
com.apple.Dataclass.Reminders
com.apple.Dataclass.Bookmarks
com.apple.Dataclass.Notes
com.apple.Dataclass.ContactsSearch
com.apple.Dataclass.DeviceLocator
com.apple.Dataclass.MediaStream
com.apple.Dataclass.SharedStreams
com.apple.Dataclass.Backup
com.apple.Dataclass.Ubiquity
com.apple.Dataclass.KeyValue
com.apple.Dataclass.Shoebox
com.apple.Dataclass.KeychainSync
com.apple.Dataclass.Content
com.apple.Dataclass.CKCodeService
com.apple.Dataclass.CKDatabaseService
com.apple.Dataclass.CKDeviceService
com.apple.Dataclass.CKMetricsService
com.apple.Dataclass.CKShareService
com.apple.Dataclass.CloudPhotos
com.apple.Dataclass.Availability
com.apple.Dataclass.ShareLocation
com.apple.Dataclass.Messages
com.apple.Dataclass.BackToMyMac
com.apple.Dataclass.NetworkVPN
com.apple.Dataclass.ServerDocuments
com.apple.Dataclass.Notifications
com.apple.Dataclass.News
com.apple.Dataclass.ShareMenu
com.apple.Dataclass.SmartDefaults
com.apple.Dataclass.CloudDesktop
com.apple.Dataclass.Home
com.apple.Dataclass.CoreRoutine
com.apple.Dataclass.Health
com.apple.Dataclass.Siri
com.apple.Dataclass.Photos
com.apple.Dataclass.Stocks
com.apple.Dataclass.ProtectedCloudStorage
com.apple.Dataclass.iwmb
com.apple.Dataclass.FitnessPlus
none
parent
AppleID
OAuth
Kerberos
ReasonString
ShouldForce
ShouldAvoidUI
ShouldPromptBeforeRenew
LoginURL
CallbackURL
Services
AppleIDServiceType
ProxiedAppBundleID
ACShouldSave
DiscoverPropertiesForAccountCreation
DiscoverConnectionProperties
RefreshEmailAliases
RefreshEmailRules
ShouldNotUseParentAccount
ShouldNotCoalesceRequests
AllowedSSLCertificates
changed
deleted
auth
prompt
delete-all
fetch-accounts
invalidate-fetched-accounts-cache
ACAskForReply
ACRemoteDeviceOptionAccountQueryIgnoreCache
ACRemoteDeviceOptionTargetDeviceBTUUID
ACRemoteDeviceOptionPreloadedPropertiesArray
ACShouldSuppressPrompts
ACKeepPasswordAround
%@ %@
stringValue
integerValue
unsignedIntegerValue
doubleValue
dataValue
uuidValue
dateValue
urlValue
arrayValue
setValue
dictionaryValue
void ac_dispatch_remote(id<NSXPCProxyCreating>  _Nonnull __strong, ac_remote_dispatch_block_t  _Nonnull __strong, ac_remote_error_block_t  _Nonnull __strong)
ACRemoteDispatch.m
Invalid parameter not satisfying: %@
proxyProvider
block
errorHandler
void _ac_dispatch_remote_sync_try(id<NSXPCProxyCreating>  _Nonnull __strong, ac_remote_dispatch_block_t  _Nonnull __strong, ac_remote_error_block_t  _Nullable __strong, NSUInteger)
Unexpected 0 count of remaining attempts!
void ac_dispatch_remote_sync(id<NSXPCProxyCreating>  _Nonnull __strong, ac_remote_dispatch_block_t  _Nonnull __strong, ac_remote_error_block_t  _Nullable __strong)
void _ac_dispatch_remote_try(id<NSXPCProxyCreating>  _Nonnull __strong, ac_remote_dispatch_block_t  _Nonnull __strong, ac_remote_error_block_t  _Nonnull __strong, NSUInteger)
com.apple.accounts
core
persona
signpost
<ACDManagedAccountType:%@>
AppleInternal/Library
System/Library
Accounts
bundle
B24@?0@"NSURL"8@"NSError"16
ACDAccountStoreDidChangeNotification
ACAccountStoreDidChangeNotification
ACAccountCredentialsDidChangeNotification
ACAccountIdentifierKey
ACAccountTypeIdentifierKey
AccountIdentifier
account
SMTP
SMTPAccount
ShouldUseAuthentication
OutgoingMailServerAuthentication
SMTPIdentifier
IMAP
IMAPAccount
Class
Protocol
ACAccountStoreReply
@"ACRemoteAccountStoreSession"8@?0
v24@?0@"ACAccount"8@"NSError"16
v24@?0@"ACAccountType"8@"NSError"16
%@-%lu
accountTypeIDs must be non-nil
accountTypeIDs must not be empty
v20@?0B8@"NSError"12
Account type must be non-nil
v24@?0@"NSNumber"8@"NSError"16
AccountSyncDelete
Account must be non-nil
v24@?0@"NSURL"8@"NSError"16
AccountsFramework
ACClientSaveOveruseFault
Access options are not permitted for this account type. The options argument must be nil.
Access options are required for this account type.
v24@?0@"NSSet"8@"NSError"16
v24@?0@"NSDictionary"8@"NSError"16
v24@?0@8@"NSError"16
v24@?0q8@"NSError"16
v24@?0@"ACAccountCredential"8@"NSError"16
COMPLETE
v24@?0@"ACCredentialItem"8@"NSError"16
Credential item must be non-nil
v24@?0@"NSString"8@"NSError"16
The dataclasses argument cannot be nil
The accountTypes argument cannot be nil
URL must be non-nil
Auth delegate class name must be non-nil
Bundle path must be non-nil
v28@?0B8@"NSDictionary"12@"NSError"20
v32@?0@"NSString"8@"NSArray"16^B24
%@.migrator
MCAccountIsManaged
%@:%@
NSErrorPeerCertificateChainKey
ACPropertyFullName
firstName
middleName
lastName
nickname
PersonaIdentifier
IdentityEmailAddress
Hostname
PortNumber
ServerPath
SSLEnabled
SSLIsDirect
AllowsInsecureAuthentication
AllowsRecoverableTrustCertificate
DisableDynamicConfiguration
Prevent Recents Syncing
configProfileIdentifier
shouldNeverUseSyncableCredential
childCardDAVAccountIdentifier
AutodiscoverURL
EWSExternalURL
EWSInternalURL
EWSRootFolderID
AuthenticationScheme
X-APOP
smtpHostname
smtpPort
smtpRequiresSSL
imapHostname
imapPort
imapRequiresSSL
SendingAccountIdentifier
UseMailDrop
EmailAliases
mailAliasEditingURL
DisplayName
IsEnabled
IsPrimary
IsDefault
Color
EmailAddresses
EmailAddress
SecIdentityPersistentRef
SecCertificatePersistentRefs
DAAccountHost
RemoteManagingAccountIdentifier
ManagingOwnerIdentifier
ManagingSourceName
authenticated
credential
enabledDataclasses
provisionedDataclasses
accountProperties
dataclassProperties
customProperties
username
accountDescription
active
warmingUp
lastCredentialRenewalRejectionDate
date
identifier
owningBundleID
supportsAuthentication
visible
accountType
credentialType
authenticationType
modificationID
objectID
trackedProvisionedDataclasses
wasProvisionedDataclassesReset
trackedEnabledDataclasses
wasEnabledDataclassesReset
dirtyProperties
dirtyAccountProperties
dirtyDataclassProperties
ACAccount.m
data.length != 0
%@ (%@)
en_US
type:%@
identifier: %@
accountDescription: %@
username: %@
objectID: %@
provisionedDataclasses: %@
enabledDataclasses: %@
dataclassProperties: %@
properties: %@
parentAccount: %@
owningBundleID:%@
authenticated: %@
lastCredentialRenewalRejectedDate: %@
supportsAuthentication: %@
authenticationType: %@
credentialType: %@
credential: %@
created: %@
active: %@
visible: %@
warmingUp: %@
%@ - %@
ACAccount can't be its own parent
-[ACAccount setProvisionedDataclasses:]
v16@?0@"ACMutableTrackedSet"8
You can't enable dataclasses on child accounts
-[ACAccount setEnabledDataclasses:]
%@@%@
DAAccountEmailAddress
fallback
gmail.com
apidata.googleusercontent.com
www.googleapis.com
google.com
caldav.aol.com
carddav.aol.com
aol.com
caldav.calendar.yahoo.com
carddav.address.yahoo.com
yahoo.com
webdav.facebook.com
facebook.com
dav.qq.com
qq.com
caldav.126.com
contacts.126.com
126.com
caldav.163.com
contacts.163.com
163.com
@yahoo.co.jp
caldav.calendar.yahoo.co.jp
carddav.address.yahoo.co.jp
"%@" (%@)
v32@?0@"NSString"8@"NSString"16^B24
com.apple.twitter
com.apple.sinaweibo
com.apple.facebook
com.apple.account.SubscribedCalendar
com.apple.account.CalDAV
com.apple.account.CardDAV
com.apple.account.BookmarkDAV
com.apple.account.IMAP
com.apple.account.POP
com.apple.account.SMTP
com.apple.account.Exchange
com.apple.account.Hotmail
com.apple.account.LDAP
com.apple.account.Google
com.apple.account.Yahoo
com.apple.account.OnMyDevice
com.apple.account.IMAPNotes
com.apple.account.IMAPMail
com.apple.account.AppleAccount
com.apple.account.AppleID
com.apple.account.FaceTime
com.apple.account.Madrid
com.apple.account.GameCenter
com.apple.account.iTunesStore
com.apple.account.iTunesStore.sandbox
com.apple.flickr
com.apple.vimeo
com.apple.linkedin
com.apple.tudou
com.apple.youku
com.apple.account.yelp
com.apple.account.tencentweibo
com.apple.account.IdentityServices
com.apple.account.kerberos.sso.
com.apple.account.DeviceLocator
com.apple.account.HolidayCalendar
com.apple.account.FindMyFriends
com.apple.account.AppleIDAuthentication
com.apple.account.CloudKit
com.apple.account.126
com.apple.account.163
com.apple.account.aol
com.apple.account.qq
com.apple.account.osxserver
com.apple.account.jabber
com.apple.account.yahooim
com.apple.account.aim
com.apple.account.idms
com.apple.account.mso
com.apple.account.SingleSignOn
com.apple.account.facebookLegacy
com.apple.account.CalDAVLegacy
com.apple.account.CardDAVLegacy
com.apple.account.linkedInLegacy
com.apple.account.RemoteManagement
ACFacebookAppIdKey
ACFacebookPermissionsKey
ACFacebookAudienceKey
ACLinkedInAppIdKey
ACLinkedInPermissionsKey
everyone
friends
ACTencentWeiboAppIdKey
ACLiverpoolContainerId
ACBlahblahBlahTokenId
ACBlahBlahBlahAppId
accountTypeDescription
visibility
credentialProtectionPolicy
supportsMultipleAccounts
obsolete
syncableDataclasses
supportedDataclasses
ACAccountType.m
identifier: %@
description: %@
objectID: %@
supportsAuthentication %@
supportsMultipleAccounts %@
obsolete %@
owningBundleID %@
supportedDataclasses %@
syncableDataclasses %@
v24@?0@"NSURLRequest"8@"NSError"16
com.apple.accountsd.oauthsigner
value
credentialAvailability
owningTeamID
Dirty property name '%@' not part of managed object.
object is missing required property '%@'
NSArray+Accounts.m
v32@?0@8Q16^B24
predicate
NSDictionary+Accounts.m
v32@?0@8@16^B24
oauth
oauth2
password
token
oauth-token
oauth-token-secret
oath-refresh-token
oauth-expiry-date
purpose
oauth-token-nosync
rpassword
old-password
hybrid
appleid-authentication
find-my-iphone-token
find-my-iphone-app-token
find-my-iphone-siri-token
maps-token
hsa-token
find-my-friends-token
find-my-friends-app-token
back-to-my-mac-token
cloudkit-token
token-expiry-date
heartbeat-token
continuation-key
password-reset-token
password-reset-token-backup
mdm-server-token
search-party-token
key-transparency-token
yahoo-xympki-tokens
yahoo-xympki-token
yahoo-xympki-cookie-y
yahoo-xympki-cookie-t
yahoo-xympki-cookie-crumb
tencent-weibo-client-consumer-key
container-user-id
/t/t
<ACAccountCredential:'%@'-(%@)(TouchID:%d)>
credentialItems
_requiresTouchID
ACAccountCredential.m
com.apple.iOS
type
destructive
affectedContainers
undoAlertTitle
undoAlertMessage
com.apple.accountsd.accountmanager
@"ACTrackedXPCConnection"8@?0
@"NSXPCConnection"8@?0
ACRemoteAccountStoreSession.m
connection
q24@?0@"NSDate"8@"NSDate"16
ACRateLimiter queue
ACRateLimiter vacuum queue
properties
parentAccount
ACSysConfigManagerTimerQueue
ACSysConfigManagerSCPeferencesQueue
com.apple.accounts.applicationidfrompid
com.apple.accounts.connectbeforemigrationdidfinish
com.apple.private.accounts.bundleidspoofing
com.apple.private.accounts.authdialoghost
com.apple.private.accounts.shutdowndaemon
com.apple.private.accounts.allaccounts
com.apple.accounts.twitter.defaultaccess
com.apple.accounts.appleaccount.fullaccess
com.apple.accounts.weibo.defaultaccess
com.apple.accounts.flickr.defaultaccess
com.apple.accounts.vimeo.defaultaccess
com.apple.accounts.linkedin.defaultaccess
com.apple.accounts.facebook.defaultaccess
com.apple.accounts.tudou.defaultaccess
com.apple.accounts.youku.defaultaccess
com.apple.accounts.osxserver.defaultaccess
com.apple.private.accounts.customaccesssinfo
com.apple.accounts.yelp.defaultaccess
com.apple.accounts.tencentweibo.defaultaccess
com.apple.accounts.inactive.fullaccess
com.apple.accounts.appleidauthentication.defaultaccess
com.apple.accounts.idms.fullaccess
com.apple.itunesstored.private
com.apple.private.applemediaservices
com.apple.account.remotemanagement.fullaccess
<pid:%d>
@"NSArray"32@?0@"NSString"8@"NSArray"16^B24
@"NSData"32@?0@8Q16^B24
@32@?0@"NSData"8Q16^B24
certificatesData
policiesProperties
Failed to find an account type for %@
Failed to create an account of type %@
accountIdentifier
expirationDate
serviceName
isPersistent
v32@?0@"NSString"8@16^B24
Failed to allocate memory pages (bytes=%lu)
Failed to deallocate memory pages (ptr=%p, bytes=%lu)
alertReasonTitle
alertReasonMessage
ACDataclassAction.m
ACDataclassActionCancel
ACDataclassActionCreateSyncDataStore
ACDataclassActionMergeSyncDataIntoLocalData
ACDataclassActionDeleteSyncData
ACDataclassActionCreateSyncDataStoreKeepLocalData
ACDataclassActionMergeLocalDataIntoSyncData
ACDataclassActionCreateSyncDataStoreDeleteLocalData
ACDataclassActionRefresh
ACDataclassActionLoseNonUploadedData
Unknown ACDataclassAction
ACClientConnectionOveruseFault
pair
NSSet+Accounts.m
v24@?0@8^B16
Subscribed Calendar
CalDAV
CardDAV
BookmarkDAV
Exchange
LDAP
Mail
MobileMe
Gmail
Yahoo
OnMyDevice
IMAPNotes
AppleAccount
CastleIMAP
Supported Dataclasses
Enable Actions
Disable Actions
Delete Account Actions
Show Reminders Separately
Version
Supports Multiple Stores
Display Dataclass Switch
Requires User Confirmation
None
Keep Local Data
Merge Local Data
Delete Local Data
Merge Sync Data
Delete Sync Data
Merge Data
Delete Data
Enabled Dataclasses
Identifier
Sync Identifier
Provisioned Dataclasses
Type
Username
Type String
Short Type String
Subscribed Calendars
CalendarsWereMigrated
/tmp/AccountMigrationInProgress
ChildAccounts
ChangeType
AccountID
AccountType
OriginalDataclasses
requiresTouchID
persistent
ACCredentialItem.m
accountIdentifier: %@
expirationDate: %@
serviceName: %@
persistent: %@
objectID: %@
com.apple.accounts.keychain
ACErrorInvalidPropertiesKey
ACChangeTypeAdded
ACChangeTypeRemoved
ACTrackedSet.m
coder
_underlyingSet
_changesDictionary
underlyingSet
changesDictionary
array
enumerable
Failed to allocate backing set buffer
%@ (changes: %@)
trackedSet
ACZeroingString.m
string
Failed to allocate backing character buffer
characters
bytes
encoding
cString
AC.bytes
AC.length
Index out of bounds
Range out of bounds
com.apple.accountsd
LastMigrationSystemVersion
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
ACMonitoredAccountStore
ACRemoteAccountStoreSessionDelegate
ACMonitoredAccountStoreDelegateProtocol
NSObject
ACDManagedAccount
ACManagedDefaults
ACProtobufVariableValue
NSCopying
ACDManagedAccountType
ACPluginLoader
ACAccountStore
ACAccount
ACProtobufCoding
NSCoding
NSSecureCoding
ACAccountType
ACPersonaManager
ACDOAuthSignerProtocol
ACOAuthSigner
ACProtobufVariableKeyValuePair
Accounts
ACAccountCredential
ACProtobufDataclassAction
ACAccountStoreClientProtocol
ACRemoteAccountStoreSession
NSXPCProxyCreating
ACAccountStoreClientSideListener
ACSimpleRateLimiter
ACRateLimiter
ACTimedExpirer
ACDManagedAuthorization
ACDManagedAccessOptionsKey
ACProtobufVariableValueList
ACProtobufAccount
ACSystemConfigManager
ACNotificationRebroadcaster
ACDManagedDataclass
ACProtobufCredentialItem
ACRemoteAccountStoreProtocol
ACRemoteAccountStoreInterface
ACProtobufKeyValuePair
Helpers
ACDataclassAction
ACDManagedCredentialItem
ACTrackedXPCConnection
ACProtobufVariableValueDictionary
ACProtobufAccountType
ACProtobufDate
ACProtobufURL
ACDManagedAccountProperty
ACProtobufAccountCredential
ACCredentialItem
ACTrackedSet
NSMutableCopying
ACMutableTrackedSet
ACTrackingSet
ACZeroingString
ACAccountMigrationState
ACProtobufUUID
initWithWithRemoteEndpoint:effectiveBundleID:accountTypes:delegate:
initWithRemoteEndpoint:effectiveBundleID:
dictionary
weakObjectsHashTable
addObject:
defaultCenter
removeObserver:
dealloc
code
_accountsListPopulated:
_registerForCredentialChangedNotifications
_registerAccountMonitorWithCompletion:
_registerAccountMonitorSynchronouslyWithCompletion:
allValues
objectForKeyedSubscript:
removeObject:
exceptionWithName:reason:userInfo:
count
replyQueue
remoteAccountStoreSession
registerMonitorForAccountsOfTypes:completion:
_connectionFailureError
_processAccountsListForNotifications:
setWithCapacity:
monitoredAccounts
countByEnumeratingWithState:objects:count:
identifier
monitoredAccountWithIdentifier:
modificationID
isEqualToString:
accountWasModified:
accountWasAdded:
containsObject:
accountWasRemoved:
removeAllObjects
_setAccountStore:
setObject:forKeyedSubscript:
credentialsChangedNotification:
addObserverForName:object:queue:usingBlock:
userInfo
objectForKey:
accountCredentialChanged:
_reregister
isEqual:
class
self
performSelector:
performSelector:withObject:
performSelector:withObject:withObject:
isProxy
isKindOfClass:
isMemberOfClass:
conformsToProtocol:
respondsToSelector:
retain
release
autorelease
retainCount
zone
hash
superclass
description
debugDescription
TQ,R
T#,R
T@"NSString",R,C
connectionClosed
initWithAccountTypes:delegate:
registerWithCompletion:
registerSynchronouslyWithError:
addDelegate:
removeDelegate:
connectionDelegate
.cxx_destruct
_accountTypesToMonitor
_accountsByID
_delegates
_credentialsDidChangeObserver
_remoteAccountDidChangeObserver
T@"NSArray",R
stringWithFormat:
lastCredentialRenewalRejectionDate
T@"NSDate",&,D,N
dataclassProperties
T@,&,D,N
active
T@"NSNumber",&,D,N
warmingUp
authenticated
T@"NSString",&,D,N
date
authenticationType
accountDescription
supportsAuthentication
owningBundleID
username
credentialType
childAccounts
T@"NSSet",&,D,N
provisionedDataclasses
parentAccount
T@"ACDManagedAccount",&,D,N
accountType
T@"ACDManagedAccountType",&,D,N
customProperties
enabledDataclasses
visible
standardUserDefaults
isNSNumber__
isNSString__
intValue
initWithInt:
sharedInstance
valueForManagedDefault:
setValue:forManagedDefault:
dictionaryRepresentation
setObject:forKey:
numberWithLongLong:
numberWithUnsignedLongLong:
numberWithDouble:
setStringValue:
setDataValue:
setUuidValue:
setDateValue:
setUrlValue:
setArrayValue:
setSetValue:
setDictionaryValue:
allocWithZone:
init
copyWithZone:
mergeFrom:
hasStringValue
setIntegerValue:
setHasIntegerValue:
hasIntegerValue
setUnsignedIntegerValue:
setHasUnsignedIntegerValue:
hasUnsignedIntegerValue
setDoubleValue:
setHasDoubleValue:
hasDoubleValue
hasDataValue
hasUuidValue
hasDateValue
hasUrlValue
hasArrayValue
hasSetValue
hasDictionaryValue
readFrom:
writeTo:
copyTo:
stringValue
integerValue
unsignedIntegerValue
doubleValue
dataValue
uuidValue
dateValue
urlValue
arrayValue
setValue
dictionaryValue
_doubleValue
_integerValue
_unsignedIntegerValue
_arrayValue
_dataValue
_dateValue
_dictionaryValue
_setValue
_stringValue
_urlValue
_uuidValue
_has
TB,R,N
T@"NSString",&,N,V_stringValue
TB,N
Tq,N,V_integerValue
TQ,N,V_unsignedIntegerValue
Td,N,V_doubleValue
T@"NSData",&,N,V_dataValue
T@"ACProtobufUUID",&,N,V_uuidValue
T@"ACProtobufDate",&,N,V_dateValue
T@"ACProtobufURL",&,N,V_urlValue
T@"ACProtobufVariableValueList",&,N,V_arrayValue
T@"ACProtobufVariableValueList",&,N,V_setValue
T@"ACProtobufVariableValueDictionary",&,N,V_dictionaryValue
currentHandler
stringWithUTF8String:
handleFailureInFunction:file:lineNumber:description:
synchronousRemoteObjectProxyWithErrorHandler:
remoteObjectProxyWithErrorHandler:
domain
supportsMultipleAccounts
accountTypeDescription
credentialProtectionPolicy
visibility
supportedDataclasses
permission
accounts
accessKeys
syncableDataclasses
obsolete
stringByAppendingPathComponent:
fileURLWithPath:
URLByAppendingPathComponent:isDirectory:
lastPathComponent
hasSuffix:
getResourceValue:forKey:error:
boolValue
bundleWithURL:
defaultManager
_accountsPluginDirectoryURL:inAppleInternal:
arrayWithObjects:
enumeratorAtURL:includingPropertiesForKeys:options:errorHandler:
nextObject
_validatedBundleAtURL:
_populatePluginBundles:atSubpath:inAppleInternal:
copy
_pluginWithName:inSubpath:inAppleInternal:
pluginBundlesAtSubpath:
pluginWithName:inSubpath:
expirerWithTimeout:
sharedRebroadcaster
_clearAccountCaches
postNotificationName:object:userInfo:
initWithListenerEndpoint:delegate:
effectiveBundleID
setEffectiveBundleID:
scheduleExpiration:
errorWithDomain:code:userInfo:
setNotificationsEnabled:
longLivedRemoteAccountStoreSession
accountWithIdentifier:error:
accountWithIdentifier:handler:
accountWithIdentifier:completion:
accountTypeWithAccountTypeIdentifier:error:
accountTypeWithIdentifier:handler:
setAccountStore:
accountsWithHandler:
accountsWithAccountType:handler:
accountsWithAccountType:options:completion:
accountsWithAccountTypeIdentifiers:preloadedProperties:completion:
accountsWithAccountTypeIdentifiers:preloadedProperties:error:
setWithObject:
accountsOnPairedDeviceWithAccountTypes:withOptions:completion:
accountsOnPairedDeviceWithAccountTypes:withOptions:handler:
dataclassesWithHandler:
accountTypesWithHandler:
visibleTopLevelAccountsWithAccountTypeIdentifiers:completion:
accountExistsWithDescription:completion:
kerberosAccountsForDomainFromURL:completion:
isPushSupportedForAccount:completion:
accountsWithAccountTypeIdentifierExist:
numberWithUnsignedInt:
countOfAccountsWithAccountTypeIdentifier:
numberWithInteger:
objectID
setObjectID:
insertAccountType:withHandler:
removeAccountType:withHandler:
numberWithBool:
setAccountProperty:forKey:
removeAccount:withDataclassActions:completion:
isDirty
canSaveAccount:completion:
accountTypeWithAccountTypeIdentifier:
_saveAccount:verify:dataclassActions:completion:
_unsanitizeError:
_setObjectID:
_clearCachedChildAccounts
_clearDirtyProperties
_checkSaveRateLimitForAccountType:
saveAccount:verify:dataclassActions:completion:
updateExistenceCacheOfAccountWithTypeIdentifier:withHandler:
initWithMaximum:inTimeInterval:
reservePerformActionForKey:
maximum
numberWithUnsignedInteger:
timeInterval
requestAccessToAccountsWithType:options:completion:
raise:format:
requestAccessForAccountTypeWithIdentifier:options:withHandler:
accessKeysForAccountType:handler:
appPermissionsForAccountType:withHandler:
setPermissionGranted:forBundleID:onAccountType:withHandler:
clearAllPermissionsGrantedForAccountType:withHandler:
permissionForAccountType:withHandler:
grantedPermissionsForAccountType:withHandler:
clearGrantedPermissionsForAccountType:withHandler:
verifyCredentialsForAccount:saveWhenAuthorized:withHandler:
dictionaryWithObjects:forKeys:count:
verifyCredentialsForAccount:options:completion:
_sanitizeOptionsDictionary:
_clearCachedCredentials
accountStore
renewCredentialsForAccount:options:completion:
renewCredentialsForAccount:force:reason:completion:
migrateCredentialForAccount:completion:
credentialForAccount:error:
credentialForAccountWithIdentifier:handler:
_setOwningAccount:
credentialForAccount:serviceID:error:
credentialForAccount:serviceID:handler:
setCredential:forAccount:serviceID:completion:
credentialForAccount:serviceID:
credentialItemsWithCompletion:
credentialItemForAccount:serviceName:completion:
insertCredentialItem:completion:
clearDirtyProperties
saveCredentialItem:completion:
removeCredentialItem:completion:
parentAccountForAccount:error:
parentAccountForAccountWithIdentifier:handler:
childAccountsForAccount:error:
childAccountsForAccountWithIdentifier:handler:
childAccountsWithAccountTypeIdentifier:parentAccountIdentifier:handler:
enabledDataclassesForAccount:error:
enabledDataclassesForAccountWithIdentifier:handler:
provisionedDataclassesForAccount:error:
provisionedDataclassesForAccountWithIdentifier:handler:
supportedDataclassesForAccountType:handler:
syncableDataclassesForAccountType:handler:
displayAccountTypeForAccountWithIdentifier:handler:
accountIdentifiersEnabledForDataclass:handler:
accountIdentifiersEnabledToSyncDataclass:handler:
preloadDataclassOwnersWithCompletion:
dataclassActionsForAccountSave:error:
dataclassActionsForAccountSave:completion:
dataclassActionsForAccountDeletion:error:
dataclassActionsForAccountDeletion:completion:
isPerformingDataclassActionsForAccount:error:
isPerformingDataclassActionsForAccount:completion:
isTetheredSyncingEnabledForDataclass:completion:
tetheredSyncSourceTypeForDataclass:completion:
accountIdentifiersEnabledForDataclasses:withAccountTypeIdentifiers:completion:
clientTokenForAccountIdentifier:completion:
addClientToken:forAccountIdentifier:completion:
discoverPropertiesForAccount:options:completion:
openAuthenticationURL:forAccount:shouldConfirm:completion:
openAuthenticationURLForAccount:withDelegateClassName:fromBundleAtPath:shouldConfirm:completion:
notifyRemoteDevicesOfModifiedAccount:withOptions:completion:
notifyRemoteDevicesOfModifiedAccount:withChangeType:options:completion:
notifyRemoteDevicesOfUpdatedCredentials:withOptions:
notifyRemoteDevicesOfUpdatedCredentials:withOptions:completion:
saveAccount:toPairedDeviceWithOptions:completion:
removeAccountsFromPairedDeviceWithOptions:completion:
removeAccountFromPairedDevice:withOptions:completion:
triggerKeychainMigrationIfNecessary:
arrayWithObjects:count:
_obsoleteAccountTypeIDsToRemove
mutableCopy
_removeObsoleteAccountsInternal:completion:
accountsWithAccountTypeIdentifiers:completion:
firstObject
type
enumerateKeysAndObjectsUsingBlock:
saveVerifiedAccount:error:
removeObjectAtIndex:
accountsWithAccountType:
compare:options:
qualifiedUsername
portableCopy
setAuthenticationType:
setParentAccount:
UUID
UUIDString
setIdentifier:
internalCredential
setCredential:
setCredentialType:
setSupportsAuthentication:
isAuthenticated
setAuthenticated:
setUsername:
setAccountDescription:
setOwningBundleID:
setEnabled:forDataclass:
setProvisioned:forDataclass:
accountPropertyForKey:
setAccountType:
isEnabledForDataclass:
isProvisionedForDataclass:
_createSMTPAccountForServerAccount:
initWithAccountType:
setActive:
handleURL:
scheduleBackupIfNonexistent:
resetDatabaseToVersion:withCompletion:
shutdownAccountsD:
defaultStore
_setDefaultStore:
_setConnectionTimeout:
canSaveAccountsOfAccountTypeIdentifier:
T@"ACAccountStore",&,N,S_setDefaultStore:
initWithRemoteEndpoint:
initWithEffectiveBundleID:
disconnectFromRemoteAccountStore
accountWithIdentifier:
cachedAccountWithIdentifier:completion:
accountTypeWithIdentifier:completion:
accountsWithAccountType:options:error:
accountsWithAccountType:completion:
accountsWithAccountTypeIdentifiers:error:
cachedAccountsWithAccountType:options:completion:
accountsOnPairedDeviceWithAccountType:completion:
allDataclasses
allAccountTypes
hasAccountWithDescription:
isPushSupportedForAccount:
insertAccountType:withCompletionHandler:
removeAccountType:withCompletionHandler:
removeAccount:withDeleteSync:completion:
removeAccount:withCompletionHandler:
canSaveAccount:withCompletionHandler:
saveAccount:withCompletionHandler:
saveAccount:withDataclassActions:completion:
saveAccount:withDataclassActions:doVerify:completion:
saveVerifiedAccount:withCompletionHandler:
updateExistenceCacheOfAccountWithTypeIdentifier:
requestAccessToAccountsWithType:withCompletionHandler:
accessKeysForAccountType:
appPermissionsForAccountType:
setPermissionGranted:forBundleID:onAccountType:
clearAllPermissionsGrantedForAccountType:
permissionForAccountType:
grantedPermissionsForAccountType:
clearGrantedPermissionsForAccountType:
verifyCredentialsForAccount:withHandler:
renewCredentialsForAccount:reason:completion:
renewCredentialsForAccount:completion:
renewCredentialsForAccount:services:completion:
credentialForAccount:
setCredential:forAccount:serviceID:error:
credentialForAccount:bundleID:
allCredentialItems
credentialItemForAccount:serviceName:
insertCredentialItem:withCompletionHandler:
saveCredentialItem:withCompletionHandler:
removeCredentialItem:withCompletionHandler:
parentAccountForAccount:
childAccountsForAccount:
childAccountsForAccount:withTypeIdentifier:
enabledDataclassesForAccount:
provisionedDataclassesForAccount:
supportedDataclassesForAccountType:
syncableDataclassesForAccountType:
displayTypeForAccountWithIdentifier:
accountIdentifiersEnabledForDataclass:
accountIdentifiersEnabledToSyncDataclass:
dataclassActionsForAccountSave:
dataclassActionsForAccountDeletion:
isPerformingDataclassActionsForAccount:
isTetheredSyncingEnabledForDataclass:
tetheredSyncSourceTypeForDataclass:
clientTokenForAccount:
addClientToken:forAccount:
notifyRemoteDevicesOfModifiedAccount:
notifyRemoteDevicesOfModifiedAccount:withOptions:
notifyRemoteDevicesOfUpdatedCredentials:
removeAccountsFromPairedDeviceWithCompletion:
removeAccountFromPairedDevice:withCompletion:
removeObsoleteAccounts:
_removeObsoleteOSXServerAccountForMacOS:
_removeObsoleteOSXServerAccountForiOS:
reportTelemetryForLandmarkEvent:
_daemonAccountStoreDidChangeObserver
_accountCache
_accountsWithAccountTypeCache
_endpoint
_remoteAccountStoreSession
_remoteAccountStoreSessionLock
_remoteAccountStoreSessionExpirer
_longLivedRemoteAccountStoreSession
_longLivedRemoteAccountStoreSessionLock
_longLivedRemoteAccountStoreSessionExpirer
_replyQueue
_effectiveBundleID
T@"NSObject<OS_dispatch_queue>",R,N,V_replyQueue
T@"ACRemoteAccountStoreSession",R,N
T@"<ACRemoteAccountStoreSessionDelegate>",R
T@"NSString",R,V_effectiveBundleID
T@"NSArray",R,W,N
_unsafe_markPropertyDirty:
initWithManagedAccount:
initWithManagedAccountType:
URIRepresentation
value
name
decodeObjectOfClass:forKey:
setWithObjects:
decodeObjectOfClasses:forKey:
decodeBoolForKey:
allObjects
addObjectsFromArray:
_installCredentialsChangedObserver
credentialsChanged:
encodeObject:forKey:
accountProperties
accountPropertiesTransformer
_markAccountPropertyDirty:
encodeBool:forKey:
setWithTrackedSet:
_initWithProtobuf:
hasCredential
credential
propertiesDictionary
hasLastCredentialRenewalRejectionDate
dataclassPropertiesDictionary
hasObjectID
hasParentAccount
dirtyProperties
initWithArray:
dirtyAccountProperties
dirtyDataclassProperties
length
handleFailureInMethod:object:file:lineNumber:description:
initWithData:
_encodeProtobuf
setPropertiesDictionary:
initWithDate:
setLastCredentialRenewalRejectionDate:
setWarmingUp:
setVisible:
setDataclassPropertiesDictionary:
initWithURL:
setProvisionedDataclasses:
setEnabledDataclasses:
setDate:
setDirtyProperties:
setDirtyAccountProperties:
setDirtyDataclassProperties:
setModificationID:
data
mutableCopyWithZone:
_loadAllCachedProperties
setTimeStyle:
setDateStyle:
localeWithLocaleIdentifier:
setLocale:
creationDate
stringFromDate:
parentAccountIdentifier
isActive
isVisible
isWarmingUp
isPropertyDirty:
initWithCapacity:
_unsafe_markAccountPropertyDirty:
_unsafe_markDataclassPropertyDirty:
_markPropertyDirty:
_useParentForCredentials
setGivenName:
setMiddleName:
setFamilyName:
localizedStringFromPersonNameComponents:style:options:
credentialWithError:
willChangeValueForKey:
didChangeValueForKey:
setValue:forKey:
displayAccount
arrayWithCapacity:
intersectSet:
initWithSet:
_markDataclassPropertyDirty:
propertiesForDataclass:
trackedProvisionedDataclasses
trackedEnabledDataclasses
setByAddingObjectsFromSet:
reload
allKeys
removeObjectForKey:
clientToken
addClientToken:
host
containsString:
enumerateModificationsUsingBlock:
numberWithInt:
objectAtIndexedSubscript:
childAccountsWithAccountTypeIdentifier:
supportsSecureCoding
keypathsRequiredForInitialization
_initWithProtobufData:
_encodeProtobufData
encodeWithCoder:
initWithCoder:
TB,R
initWithManagedAccount:accountStore:
fullDescription
markAllPropertiesDirty
setDirty:forProperty:
_markCredentialDirty
userFullName
setCreationDate:
setAccountProperties:
propertyForKey:
setProperty:forKey:
supportsPush
_resetParentAccount:
isEnabledToSyncDataclass:
setDataclassProperties:
setProperties:forDataclass:
takeValuesFromModifiedAccount:
refresh
accountByCleaningThirdPartyTransformations
defaultAutodiscoverDomainForChildType:
shortDebugName
_applyDirtyStateFromAccount:
_isDifferentFrom:
setSecIdentity:
copySecIdentity
setSecCertificates:
secCertificates
isDataSeparatedAccount
personaIdentifier
correctPersonaScopedForAccount
childCardDAVAccountIdentifier
setChildCardDAVAccountIdentifier:
managingOwnerIdentifier
setManagingOwnerIdentifier:
managingSourceName
setManagingSourceName:
setTrackedProvisionedDataclasses:
wasProvisionedDataclassesReset
setTrackedEnabledDataclasses:
wasEnabledDataclassesReset
setAccountPropertiesTransformer:
_accountStore
_identifier
_accountDescription
_owningBundleID
_username
_authenticationType
_credentialType
_clientToken
_accountType
_credential
_properties
_dataclassProperties
_objectID
_date
_lastCredentialRenewalRejectionDate
_modificationID
_parentAccount
_childAccounts
_trackedProvisionedDataclasses
_trackedEnabledDataclasses
_dirtyProperties
_dirtyAccountProperties
_dirtyDataclassProperties
_accountPropertiesTransformer
_haveCheckedForClientToken
_accountAccessAvailable
_authenticated
_active
_warmingUp
_supportsAuthentication
_visible
_haveCheckedForChildAccounts
_wasProvisionedDataclassesReset
_wasEnabledDataclassesReset
T@"ACTrackedSet",C,N,V_trackedProvisionedDataclasses
TB,R,N,V_wasProvisionedDataclassesReset
T@"ACTrackedSet",C,N,V_trackedEnabledDataclasses
TB,R,N,V_wasEnabledDataclassesReset
T@"ACAccountCredential",R,N
T@"NSString",R,N
T@"NSURL",R,N
T@"ACAccountStore",R,N
T@"ACAccount",&,N
T@"NSArray",R,N
T@"NSMutableSet",&,N
T@"NSDictionary",R,W,N
TB,N,GisAuthenticated
T@"ACAccount",R,W,N
TB,N,GisActive
TB,N,GisWarmingUp
dirty
TB,R,N,GisDirty
T@"NSSet",R,N
T@"NSDate",&,N
TB,N,GisVisible
T@?,C,V_accountPropertiesTransformer
T@"NSString",&
T@"NSString",R,W,N
T@"ACAccountType",&,N
T@"NSString",C,N
T@"ACAccountCredential",&,N
setWithArray:
isObsolete
setAccountTypeDescription:
setVisibility:
setCredentialProtectionPolicy:
setSupportsMultipleAccounts:
setObsolete:
allIdentifiers
T@"NSSet",R,C
initWithIdentifier:description:
initWithManagedAccountType:accountStore:
setSupportedDataclasses:
setSyncableDataclasses:
accessGranted
_accountTypeDescription
_visibility
_credentialProtectionPolicy
_supportsMultipleAccounts
_obsolete
_supportedDataclasses
_syncableDataclasses
_accessKeys
T@"NSURL",&,N,V_objectID
Ti,N
T@,C,N
T@"NSString",&,N,V_credentialType
T@"ACAccountStore",W,N,V_accountStore
Ti,N,V_supportsAuthentication
TB,N,V_supportsMultipleAccounts
T@"NSString",&,N,V_owningBundleID
TB,N,GisObsolete,V_obsolete
T@"NSSet",R,N,V_supportedDataclasses
T@"NSSet",R,N,V_syncableDataclasses
T@"NSSet",R,N,V_accessKeys
T@"NSString",R,N,V_accountTypeDescription
T@"NSString",R,N,V_identifier
performWithinPersonaForAccount:withBlock:
performWithinPersona:withBlock:
performWithinPersonaForAccountIdentifier:withBlock:
_personaGenerationID
_personaStorageLock
_enterprisePersonaUID
_personalPersonaUID
_guestPersonasUID
_dataSeparatedPersonasUIDs
_store
initWithAccount:remoteEndpoint:
_connectToRemoteOAuthSignerUsingEndpoint:
setClientBundleID:withHandler:
disconnectFromRemoteOAuthSigner
setShouldIncludeAppIdInRequest:
signURLRequest:withAccount:callingPID:timestamp:handler:
signURLRequest:withAccount:applicationID:timestamp:handler:
signedURLRequestWithURLRequest:callingPID:timestamp:
initWithMachServiceName:options:
initWithListenerEndpoint:
interfaceWithProtocol:
setRemoteObjectInterface:
setInterruptionHandler:
remoteObjectProxy
resume
invalidate
initWithAccount:
signedURLRequestWithURLRequest:applicationID:timestamp:
signedURLRequestWithURLRequest:
shouldIncludeAppIdInRequest
_connection
_account
_proxyShim
_shouldIncludeAppIdInRequest
TB,N,V_shouldIncludeAppIdInRequest
setKey:
setValue:
_key
_value
T@"NSString",&,N,V_key
T@"ACProtobufVariableValue",&,N,V_value
entity
attributesByName
valueForKey:
_obsoleteAttributes
intersectsSet:
relationshipsByName
dictionaryWithValuesForKeys:
_removeObsoleteKeysFromDictionary:
setValuesForKeysWithDictionary:
isOptional
dictionaryWithObject:forKey:
setValuesWithObject:
validateRequiredAttributesForObject:error:
enumerateObjectsUsingBlock:
indexOfObjectPassingTest:
objectAtIndex:
ac_filter:
ac_firstObjectPassingTest:
ac_map:
ac_mapNullable:
ac_mapValues:
ac_mapValuesNullable:
credentialItems
setOauthToken:
setOauthRefreshToken:
setExpiryDate:
setOauthTokenSecret:
setPassword:
componentsJoinedByString:
initWithOAuthToken:tokenSecret:
initWithPassword:
arrayByAddingObjectsFromArray:
requiresTouchID
stringWithString:
setRequiresTouchID:
initWithValue:forKey:
setCredentialItems:
_newZStringWithString:
initWithString:
credentialItemForKey:
setCredentialItem:forKey:
dateWithTimeIntervalSinceReferenceDate:
timeIntervalSinceReferenceDate
credentialWithOAuthToken:tokenSecret:
credentialWithPassword:
allSupportedKeys
supportedKeysForAccountTypeIdentifier:credentialType:
nonPersistentKeysForAccountTypeIdentifier:credentialType:
credentialPolicyForAccountTypeIdentifier:key:clientID:
credentialPolicyIsMixedForAccountTypeIdentifier:
additionalServiceSegmentForAccountTypeIdentifier:
initWithOAuth2Token:refreshToken:expiryDate:
isEmpty
keysForCredentialItems
token
setToken:
oauthToken
oauthTokenSecret
oauthTokenNoSync
setOauthTokenNoSync:
oauthRefreshToken
expiryDate
password
findMyiPhoneToken
setFindMyiPhoneToken:
mapsToken
setMapsToken:
hsaToken
setHsaToken:
mdmServerToken
setMdmServerToken:
tokenExpiryDate
setTokenExpiryDate:
setDirty:
setEmpty:
_credentialItems
_owningAccount
_requiresTouchID
_dirty
_empty
TB,N,V_requiresTouchID
TB,N,GisDirty,V_dirty
empty
TB,N,GisEmpty,V_empty
T@"NSDate",C,N
addAffectedContainers:
affectedContainersCount
clearAffectedContainers
affectedContainersAtIndex:
setUndoAlertTitle:
setUndoAlertMessage:
affectedContainersType
hasUndoAlertTitle
hasUndoAlertMessage
setType:
destructive
setDestructive:
affectedContainers
setAffectedContainers:
undoAlertTitle
undoAlertMessage
_affectedContainers
_type
_undoAlertMessage
_undoAlertTitle
_destructive
Ti,N,V_type
TB,N,V_destructive
T@"NSMutableArray",&,N,V_affectedContainers
T@"NSString",&,N,V_undoAlertTitle
T@"NSString",&,N,V_undoAlertMessage
initWithDelegate:
connectionWasInvalidated
XPCInterface
accountCredentialsDidChangeForAccountWithIdentifier:
accountDidChange:withChangeType:
setExportedInterface:
setExportedObject:
_setConnectionInterrupted
_setConnectionInvalidated
setInvalidationHandler:
_locked_configureRemoteAccountStoreWithConnection:
_locked_connection:setEffectiveBundleID:
_locked_connection:setNotificationsEnabled:
listenerEndpoint
notificationsEnabled
_connectionLock
_clientSideListener
_notificationsEnabled
_listenerEndpoint
T@"NSXPCListenerEndpoint",R,N,V_listenerEndpoint
T@"NSString",C,N,V_effectiveBundleID
TB,N,V_notificationsEnabled
_delegate
array
instanceLock
lock
rateLimitingStartDate
locked_removeDatesBefore:
sortedActionDates
locked_addDate:
unlock
dateWithTimeIntervalSinceNow:
compare:
indexOfObject:inSortedRange:options:usingComparator:
locked_indexOfFirstAfter:
removeObjectsInRange:
insertObject:atIndex:
reservePerformActionNow
isEmptyAfterFlushing
setInstanceLock:
setSortedActionDates:
_maximum
_timeInterval
_instanceLock
_sortedActionDates
T@"NSDate",R
T@"NSLock",&,V_instanceLock
T@"NSMutableArray",&,V_sortedActionDates
TQ,R,V_maximum
Td,R,V_timeInterval
simpleRateLimiterForKey:
vacuumIfNeeded
instanceQueue
keyToSimpleRateLimiter
isVacuumInProgress
nextVacuumDate
setIsVacuumInProgress:
_vacuumQueue_vacuum
vacuumTimeInterval
setNextVacuumDate:
_vacuumQueue_vacuumKey:
vacuumQueue
setKeyToSimpleRateLimiter:
_isVacuumInProgress
_instanceQueue
_vacuumQueue
_keyToSimpleRateLimiter
_vacuumTimeInterval
_nextVacuumDate
T@"NSObject<OS_dispatch_queue>",R,V_instanceQueue
T@"NSObject<OS_dispatch_queue>",R,V_vacuumQueue
T@"NSMutableDictionary",&,V_keyToSimpleRateLimiter
Td,R,V_vacuumTimeInterval
TB,V_isVacuumInProgress
T@"NSDate",&,V_nextVacuumDate
_cancelTimer
_unsafeCancelTimer
_invalidationInterval
_invalidationTimer
_invalidationTimerLock
options
grantedPermissions
bundleID
owningAccountTypes
addValue:
valuesCount
clearValues
valueAtIndex:
valueType
values
setValues:
_values
T@"NSMutableArray",&,N,V_values
addProperties:
addDataclassProperties:
addEnabledDataclasses:
addProvisionedDataclasses:
addDirtyProperties:
addDirtyAccountProperties:
addDirtyDataclassProperties:
propertiesCount
clearProperties
propertiesAtIndex:
dataclassPropertiesCount
clearDataclassProperties
dataclassPropertiesAtIndex:
enabledDataclassesCount
clearEnabledDataclasses
enabledDataclassesAtIndex:
provisionedDataclassesCount
clearProvisionedDataclasses
provisionedDataclassesAtIndex:
dirtyPropertiesCount
dirtyPropertiesAtIndex:
dirtyAccountPropertiesCount
clearDirtyAccountProperties
dirtyAccountPropertiesAtIndex:
dirtyDataclassPropertiesCount
clearDirtyDataclassProperties
dirtyDataclassPropertiesAtIndex:
propertiesType
dataclassPropertiesType
enabledDataclassesType
provisionedDataclassesType
dirtyPropertiesType
dirtyAccountPropertiesType
dirtyDataclassPropertiesType
hasAccountDescription
hasUsername
hasAuthenticationType
hasCredentialType
hasDate
hasOwningBundleID
setHasWarmingUp:
hasWarmingUp
hasModificationID
properties
setProperties:
_enabledDataclasses
_provisionedDataclasses
T@"ACProtobufAccountType",&,N,V_accountType
T@"ACProtobufAccountCredential",&,N,V_credential
T@"NSString",&,N,V_identifier
T@"NSString",&,N,V_accountDescription
T@"NSString",&,N,V_username
T@"NSMutableArray",&,N,V_properties
TB,N,V_authenticated
T@"ACProtobufDate",&,N,V_lastCredentialRenewalRejectionDate
TB,N,V_active
TB,N,V_visible
TB,N,V_supportsAuthentication
T@"NSMutableArray",&,N,V_dataclassProperties
T@"ACProtobufURL",&,N,V_objectID
T@"ACProtobufAccount",&,N,V_parentAccount
T@"NSMutableArray",&,N,V_enabledDataclasses
T@"NSMutableArray",&,N,V_provisionedDataclasses
T@"NSString",&,N,V_authenticationType
T@"ACProtobufDate",&,N,V_date
T@"NSMutableArray",&,N,V_dirtyProperties
T@"NSMutableArray",&,N,V_dirtyAccountProperties
T@"NSMutableArray",&,N,V_dirtyDataclassProperties
TB,N,V_warmingUp
T@"NSString",&,N,V_modificationID
_scheduleSharedInstanceTeardown
_tearDown
_timeoutInterval
_createSCPreferencesSession
_destroySCPreferencesSession
_livingInstance
setAccountsWithAccountTypeIdentifier:exist:
setCountOfAccounts:withAccountTypeIdentifier:
_handleSCPreferencesSessionNotification:
_getValueForKey:
_setValue:forKey:
_preferencesQueue
_preferencesSession
_applySkipCount
_beginObservingAccountStoreDidChangeNotifications
_endObservingAccountStoreDidChangeNotifications
_accountStoreDidChange:
addObserver:selector:name:object:suspensionBehavior:
removeObserver:name:object:
T@"ACNotificationRebroadcaster",R
initWithBytes:length:encoding:
objectForInfoDictionaryKey:
archivedDataWithRootObject:requiringSecureCoding:error:
unarchivedObjectOfClasses:fromData:error:
provisionedAccounts
syncableTypes
supportedTypes
enabledAccounts
setAccountIdentifier:
setExpirationDate:
setServiceName:
hasExpirationDate
setIsPersistent:
setHasIsPersistent:
hasIsPersistent
accountIdentifier
expirationDate
serviceName
isPersistent
_accountIdentifier
_expirationDate
_serviceName
_isPersistent
T@"NSString",&,N,V_accountIdentifier
T@"ACProtobufDate",&,N,V_expirationDate
T@"NSString",&,N,V_serviceName
TB,N,V_isPersistent
_buildXPCInterface
saveAccount:withHandler:
notifyRemoteDevicesOfModifiedAccount:withChangeType:
setClasses:forSelector:argumentIndex:ofReply:
T@"NSXPCInterface",R,N
T@"NSString",&,N,V_value
initWithTimeIntervalSinceReferenceDate:
absoluteString
setUrl:
T@"NSURL",&,N
initWithUUIDString:
initWithUUID:
setUuid:
uuid
T@"NSUUID",&,N
_setObject:
unsignedLongLongValue
longLongValue
initWithDictionary:
initWithObjectValue:
setObject:
object
T@,&,N
initWithObjectValue:forKey:
_convertArray:
replaceObjectAtIndex:withObject:
setArray:
setSet:
T@"NSArray",C,N
T@"NSSet",C,N
setDictionary:
pairs
setPairs:
pairsCount
T@"NSDictionary",C,N
clearCredentialItems
addCredentialItems:
credentialItemsCount
setCredentialItemsDictionary:
credentialItemsDictionary
initWithType:destructivity:affectedContainers:
actionWithType:
destructiveActionWithType:
destructiveActionWithType:affectedContainers:
_actionForError:
_isError
isDestructive
_isDestructive
_error
TB,R,G_isError
Tq,R,N,V_type
TB,R,N,V_isDestructive
T@"NSArray",R,N,V_affectedContainers
persistent
addPair:
clearPairs
pairAtIndex:
pairType
_pairs
T@"NSMutableArray",&,N,V_pairs
setHasVisibility:
hasVisibility
hasCredentialProtectionPolicy
setHasSupportsAuthentication:
hasSupportsAuthentication
setHasSupportsMultipleAccounts:
hasSupportsMultipleAccounts
setHasObsolete:
hasObsolete
T@"NSString",&,N,V_accountTypeDescription
Ti,N,V_visibility
T@"NSString",&,N,V_credentialProtectionPolicy
TB,N,V_obsolete
Td,N,V_value
owner
credentialItemsAtIndex:
credentialItemsType
T@"NSMutableArray",&,N,V_credentialItems
initWithManagedCredentialItem:
initWithManagedCredentialItem:accountStore:
initWithAccountIdentifier:serviceName:
isExpired
setPersistent:
_persistent
expired
TB,R,N,GisExpired
TB,N,GisPersistent
T@"NSSet",R,N,V_dirtyProperties
numberWithLong:
ac_secureCodingError
ac_sanitizeObject:
ac_isUnrecoverableDatabaseError
ac_isDiskFullSQLError
ac_unrecoverableDatabaseError
TB,R,N,Gac_isUnrecoverableDatabaseError
ac_diskFullSQLError
TB,R,N,Gac_isDiskFullSQLError
initWithObjects:count:
allowedClasses
setByAddingObjectsFromArray:
_initWithEnumerable:count:
member:
objectEnumerator
anyObject
isEqualToSet:
isEqualToDictionary:
enumerateObjectsWithOptions:usingBlock:
enumerateModificationsWithOptions:usingBlock:
enumerateKeysAndObjectsWithOptions:usingBlock:
_initWithUnderlyingSet:changesDictionary:
isEqualToTrackedSet:
setWithSet:
allModifications
_underlyingSet
_changesDictionary
initWithTrackedSet:
getCharacters:range:
_emptyString
decodeIntegerForKey:
bytes
encodeInteger:forKey:
_compatibleCopy
_newZStringWithCharacters:length:
classForKeyedUnarchiver
initWithCharacters:length:
initWithUTF8String:
classForKeyedArchiver
replacementObjectForCoder:
classForCoder
_allowsDirectEncoding
characterAtIndex:
characters
_characters
_length
T^S,R,V_characters
_currentSystemVersion
isMigrationFinished
writeMigrationVersionPref
migrationFinished
TB,R,GisMigrationFinished
B24@0:8@16
#16@0:8
@16@0:8
@24@0:8:16
@32@0:8:16@24
@40@0:8:16@24@32
B16@0:8
B24@0:8#16
B24@0:8:16
Vv16@0:8
Q16@0:8
^{_NSZone=}16@0:8
B24@0:8@"Protocol"16
@"NSString"16@0:8
v24@0:8@16
v24@0:8@"ACAccount"16
v16@0:8
@32@0:8@16@24
@48@0:8@16@24@32@40
v24@0:8@?16
v24@0:8^@16
@24@0:8@16
@"NSSet"
@"NSMutableDictionary"
@"NSHashTable"
@"<NSObject>"
v32@0:8@16@24
@24@0:8^{_NSZone=}16
v24@0:8q16
v20@0:8B16
v24@0:8Q16
v24@0:8d16
q16@0:8
d16@0:8
@"ACProtobufVariableValueList"
@"NSData"
@"ACProtobufDate"
@"ACProtobufVariableValueDictionary"
@"NSString"
@"ACProtobufURL"
@"ACProtobufUUID"
{?="doubleValue"b1"integerValue"b1"unsignedIntegerValue"b1}
@28@0:8@16B24
v36@0:8@16@24B32
@36@0:8@16@24B32
i24@0:8@16
q24@0:8@16
@32@0:8@16^@24
v32@0:8@16@?24
@40@0:8@16Q24^@32
v40@0:8@16Q24@?32
v40@0:8@16@24@?32
@40@0:8@16@24^@32
v36@0:8@16B24@?28
v44@0:8@16B24@28@?36
v44@0:8@16@24B32@?36
B32@0:8@16^@24
v36@0:8B16@20@28
v48@0:8@16@24@32^@40
B32@0:8@16@24
v52@0:8@16@24@32B40@?44
B24@0:8^@16
@"NSXPCListenerEndpoint"
@"ACRemoteAccountStoreSession"
{os_unfair_lock_s="_os_unfair_lock_opaque"I}
@"ACTimedExpirer"
@"NSObject<OS_dispatch_queue>"
@24@0:8@"PBCodable"16
@24@0:8@"NSData"16
@"PBCodable"16@0:8
@"NSData"16@0:8
v24@0:8@"NSCoder"16
@24@0:8@"NSCoder"16
v28@0:8B16@20
@24@0:8^@16
v24@0:8^{__SecIdentity=}16
^{__SecIdentity=}16@0:8
@?16@0:8
@"ACAccountStore"
@"ACAccountType"
@"ACAccountCredential"
@"NSURL"
@"NSDate"
@"ACAccount"
@"NSArray"
@"ACMutableTrackedSet"
@"NSMutableSet"
i16@0:8
v20@0:8i16
B32@0:8@16@?24
v56@0:8@16@24@32@40@?48
v56@0:8@"NSURLRequest"16@"ACAccount"24@"NSNumber"32@"NSDate"40@?<v@?@"NSURLRequest"@"NSError">48
v56@0:8@"NSURLRequest"16@"ACAccount"24@"NSString"32@"NSDate"40@?<v@?@"NSURLRequest"@"NSError">48
v32@0:8@"NSString"16@?<v@?B@"NSError">24
@40@0:8@16@24@32
@"NSXPCConnection"
@"<ACDOAuthSignerProtocol>"
@"ACProtobufVariableValue"
@24@0:8@?16
@"NSDictionary"
@24@0:8Q16
@"NSMutableArray"
v28@0:8@16i24
v24@0:8@"NSString"16
v28@0:8@"ACAccount"16i24
@24@0:8@?<v@?@"NSError">16
v28@0:8@16B24
@"ACAccountStoreClientSideListener"
@"<ACRemoteAccountStoreSessionDelegate>"
@32@0:8Q16d24
Q24@0:8@16
@"NSLock"
@"NSObject<OS_dispatch_source>"
@"ACProtobufAccountType"
@"ACProtobufAccountCredential"
@"ACProtobufAccount"
{?="warmingUp"b1}
v32@0:8q16@24
v20@0:8I16
^v24@0:8@16
v32@0:8^v16@24
^{__SCPreferences=}
{?="isPersistent"b1}
v48@0:8@16@24@32@?40
v24@0:8@?<v@?@"NSArray"@"NSError">16
v32@0:8@"NSString"16@?<v@?@"ACAccount"@"NSError">24
v32@0:8@"ACAccountType"16@?<v@?@"NSArray"@"NSError">24
v40@0:8@"ACAccountType"16Q24@?<v@?@"NSArray"@"NSError">32
v32@0:8@"NSString"16@?<v@?@"NSArray"@"NSError">24
v32@0:8@"NSURL"16@?<v@?@"NSArray"@"NSError">24
v32@0:8@"NSArray"16@?<v@?@"NSArray"@"NSError">24
v40@0:8@"NSArray"16@"NSArray"24@?<v@?@"NSArray"@"NSError">32
v40@0:8@"NSSet"16@"NSDictionary"24@?<v@?@"NSArray"@"NSError">32
v40@0:8@"NSString"16@"NSString"24@?<v@?@"NSArray"@"NSError">32
v32@0:8@"NSString"16@?<v@?@"ACAccountType"@"NSError">24
v32@0:8@"NSString"16@?<v@?@"ACAccountCredential"@"NSError">24
v40@0:8@"ACAccount"16@"NSString"24@?<v@?@"ACAccountCredential"@"NSError">32
v48@0:8@"ACAccountCredential"16@"ACAccount"24@"NSString"32@?<v@?B@"NSError">40
v40@0:8@"ACAccount"16@"NSString"24@?<v@?@"ACCredentialItem"@"NSError">32
v32@0:8@"ACCredentialItem"16@?<v@?@"ACCredentialItem"@"NSError">24
v32@0:8@"ACCredentialItem"16@?<v@?@"NSURL"@"NSError">24
v32@0:8@"ACCredentialItem"16@?<v@?B@"NSError">24
v32@0:8@"NSString"16@?<v@?@"NSSet"@"NSError">24
v32@0:8@"ACAccountType"16@?<v@?@"NSSet"@"NSError">24
v24@0:8@?<v@?@"NSError">16
v32@0:8@"ACAccount"16@?<v@?@"NSDictionary"@"NSError">24
v32@0:8@"ACAccount"16@?<v@?B@"NSError">24
v40@0:8@"ACAccount"16@"NSDictionary"24@?<v@?B@"NSError">32
v32@0:8@"ACAccount"16@?<v@?@"NSURL"@"NSError">24
v44@0:8@"ACAccount"16B24@"NSDictionary"28@?<v@?@"NSURL"@"NSError">36
v32@0:8@"NSString"16@?<v@?@"NSNumber"@"NSError">24
v32@0:8@"ACAccountType"16@?<v@?@"ACAccountType"@"NSError">24
v32@0:8@"ACAccountType"16@?<v@?@"NSNumber"@"NSError">24
v40@0:8@"NSString"16@"NSDictionary"24@?<v@?@"NSNumber"@"NSError">32
v32@0:8@"ACAccountType"16@?<v@?@"NSDictionary"@"NSError">24
v48@0:8@"NSNumber"16@"NSString"24@"ACAccountType"32@?<v@?@@"NSError">40
v32@0:8@"ACAccountType"16@?<v@?@"NSError">24
v32@0:8@"ACAccountType"16@?<v@?@@"NSError">24
v40@0:8@"ACAccount"16@"NSDictionary"24@?<v@?@"ACAccount"@"NSError">32
v40@0:8@"ACAccount"16@"NSDictionary"24@?<v@?@"NSNumber"@"NSError">32
v32@0:8@"NSString"16@?<v@?@"NSString"@"NSError">24
v24@0:8@"NSURL"16
v40@0:8@"NSString"16@"NSString"24@?<v@?B@"NSError">32
v44@0:8@"NSURL"16@"ACAccount"24B32@?<v@?B@"NSError">36
v52@0:8@"ACAccount"16@"NSString"24@"NSString"32B40@?<v@?B@"NSDictionary"@"NSError">44
v32@0:8@"ACAccount"16@"NSString"24
v48@0:8@"ACAccount"16@"NSString"24@"NSDictionary"32@?<v@?B@"NSError">40
v32@0:8@"NSDictionary"16@?<v@?B@"NSError">24
v24@0:8@?<v@?B@"NSError">16
v32@0:8@"NSSet"16@?<v@?@"NSArray"@"NSError">24
v32@0:8@"NSNumber"16@?<v@?B@"NSError">24
@24@0:8q16
@32@0:8q16@24
@36@0:8q16B24@28
{?="supportsAuthentication"b1"visibility"b1"obsolete"b1"supportsMultipleAccounts"b1}
@32@0:8r^@16Q24
@32@0:8@16Q24
v32@0:8Q16@?24
@32@0:8r^S16Q24
@40@0:8r^v16Q24Q32
@24@0:8r*16
S24@0:8Q16
v40@0:8^S16{_NSRange=QQ}24
^S16@0:8
#BNU
*MT[~
accounts/register-types-to-monitor
RegisterTypesToMonitor
BEGIN [%lld]: RegisterTypesToMonitor %@
%@%@
END [%lld] %fs: RegisterTypesToMonitor %@%@
Attempted to register account monitor for types client is not authorized to access: %@
accounts/register-types-to-monitor-sync
RegisterTypesToMonitorSync
BEGIN [%lld]: RegisterTypesToMonitorSync %@
END [%lld] %fs: RegisterTypesToMonitorSync %@%@
"ACMonitoredAccountStore: Attempting to reconnect to accountsd..."
"ACMonitoredAccountStore: Failed to reconnect to accountsd: %@"
"ACMonitoredAccountStore: Reconnected to accountsd"
"ACMonitoredAccountStore: account was added: %@"
"ACMonitoredAccountStore: account was modified: %@"
"ACMonitoredAccountStore: account was removed: %@"
"ACMonitoredAccountStore: Connection to accountsd closed. Will reconnect on account change for appropriate account type"
"Remote account store returned fatal error: %{public}@"
"Remote account store depleted error attempts: %{public}@"
"Remote account store returned error: %{public}@, attemptsRemaining: %lu"
"Couldn't find the system library directory to search for plugins."
"Couldn't get value for the directory at %@: %@"
"Skipping file at %@ because it isn't a directory"
"Couldn't create plugin at %@"
"Encountered an error while scanning for plugins at %@: %@"
"Validating bundle at %@..."
"Validated bundle at %@"
"Loading AppleInternal plugins"
"Looking for AppleInternal plugin '%@' at '%@'"
accounts/account-with-identifier-sync
BEGIN [%lld]: AccountWithIdentifierSync %@
"Error returned from daemon: %@"
AccountWithIdentifierSync
END [%lld] %fs: AccountWithIdentifierSync %@%@
accounts/account-with-identifier
AccountWithIdentifier
BEGIN [%lld]: AccountWithIdentifier %@
END [%lld] %fs: AccountWithIdentifier %@%@
accounts/cached-account-with-identifier
CachedAccountWithIdentifier
BEGIN [%lld]: CachedAccountWithIdentifier %@
END [%lld] %fs: CachedAccountWithIdentifier %@%@
accounts/account-type-with-identifier-sync
BEGIN [%lld]: AccountTypeWithIdentifierSync %@
AccountTypeWithIdentifierSync
END [%lld] %fs: AccountTypeWithIdentifierSync %@%@
AccountTypeWithIdentifier
BEGIN [%lld]: AccountTypeWithIdentifier %@
END [%lld] %fs: AccountTypeWithIdentifier %@%@
accounts/all-accounts-sync
BEGIN [%lld]: AllAccountsSync 
"Error connecting to remote account store!"
AllAccountsSync
END [%lld] %fs: AllAccountsSync %@%@
accounts/accounts-with-type-sync
BEGIN [%lld]: AccountsWithTypeSync %@
AccountsWithTypeSync
END [%lld] %fs: AccountsWithTypeSync %@%@
accounts/accounts-with-type-with-options-sync
%@: %lu
BEGIN [%lld]: AccountsWithTypeSync %@: %lu
"Error returned from daemon: %{public}@"
accounts/accounts-with-type
AccountsWithType
BEGIN [%lld]: AccountsWithType %@
END [%lld] %fs: AccountsWithType %@%@
accounts/accounts-with-type-with-options
BEGIN [%lld]: AccountsWithType %@: %lu
accounts/accounts-with-types
%@: %@
AccountsWithTypesWithProperties
BEGIN [%lld]: AccountsWithTypesWithProperties %@: %@
END [%lld] %fs: AccountsWithTypesWithProperties %@%@
accounts/accounts-with-types-sync
AccountsWithTypesWithPropertiesSync
BEGIN [%lld]: AccountsWithTypesWithPropertiesSync %@: %@
accounts/cached-accounts-with-types
CachedAccountsWithType
BEGIN [%lld]: CachedAccountsWithType %@: %lu
END [%lld] %fs: CachedAccountsWithType %@%@
accounts/accounts-on-paired-device-with-types
%@ (options: %@)
AccountsOnPairedDeviceWithTypes
BEGIN [%lld]: AccountsOnPairedDeviceWithTypes %@ (options: %@)
END [%lld] %fs: AccountsOnPairedDeviceWithTypes %@%@
accounts/all-dataclasses
BEGIN [%lld]: AllDataclasses 
AllDataclasses
END [%lld] %fs: AllDataclasses %@%@
accounts/all-account-types
BEGIN [%lld]: AllAccountTypes 
AllAccountTypes
END [%lld] %fs: AllAccountTypes %@%@
VisibleAccountsWithTypes
BEGIN [%lld]: VisibleAccountsWithTypes %@
END [%lld] %fs: VisibleAccountsWithTypes %@%@
accounts/has-account-with-description
BEGIN [%lld]: HasAccountWithDescription %@
%{public}@
HasAccountWithDescription
END [%lld] %fs: HasAccountWithDescription %{public}@
accounts/kerberos-accounts
KerberosAccounts
BEGIN [%lld]: KerberosAccounts %@
END [%lld] %fs: KerberosAccounts %@%@
accounts/push-supported
BEGIN [%lld]: PushSupported %@
PushSupported
END [%lld] %fs: PushSupported %{public}@
accounts/accounts-with-type-exist
BEGIN [%lld]: AccountsWithTypeExist %@
AccountsWithTypeExist
END [%lld] %fs: AccountsWithTypeExist %@%@
accounts/accounts-with-type-count
BEGIN [%lld]: AccountsWithTypeCount %@
AccountsWithTypeCount
END [%lld] %fs: AccountsWithTypeCount %@%@
accounts/insert-account-type
InsertAccountType
BEGIN [%lld]: InsertAccountType %@
END [%lld] %fs: InsertAccountType %@%@
accounts/remove-account-type
RemoveAccountType
BEGIN [%lld]: RemoveAccountType %@
END [%lld] %fs: RemoveAccountType %@%@
accounts/remove-account
 AccountType=%{public,signpost.telemetry:string1,name=AccountType}@ 
RemoveAccount
BEGIN [%lld]: RemoveAccount  AccountType=%{public,signpost.telemetry:string1,name=AccountType}@ 
"Starting removal of account %@."
"Completed account removal: %@ - %@."
END [%lld] %fs: RemoveAccount %{public}@
accounts/can-save-account
CanSaveAccount
BEGIN [%lld]: CanSaveAccount 
"Checking save eligibility of account %@."
"Completed checking save eligibility: %@ - %@."
END [%lld] %fs: CanSaveAccount %{public}@
accounts/can-save-accounts-with-type
BEGIN [%lld]: CanSaveAccountsWithType %@
CanSaveAccountsWithType
END [%lld] %fs: CanSaveAccountsWithType %{public}@
accounts/save-account
 AccountType=%{public,signpost.telemetry:string1,name=AccountType}@ (account: %@)
SaveAccount
BEGIN [%lld]: SaveAccount  AccountType=%{public,signpost.telemetry:string1,name=AccountType}@ (account: %@)
"Starting save for account %@."
"Completed account save: %@ - %@."
END [%lld] %fs: SaveAccount %{public}@
"Account not dirty. Continue"
"Calling daemon to save"
accounts/save-verified-account
"Account not dirty, nothin' a do..."
END [%lld] %fs: SaveAccount %@%@
accounts/update-existence-cache
BEGIN [%lld]: UpdateExistenceCache %@
UpdateExistenceCache
END [%lld] %fs: UpdateExistenceCache %@%@
 %{public}@: Exceeded %{public}@ saves per %{public}@ minute(s)
accounts/request-access
%@ : %@
RequestAccessToAccountType
BEGIN [%lld]: RequestAccessToAccountType %@ : %@
END [%lld] %fs: RequestAccessToAccountType %@%@
BEGIN [%lld]: AccessKeysForAccountType %@
AccessKeysForAccountType
END [%lld] %fs: AccessKeysForAccountType %@%@
accounts/app-permissions
BEGIN [%lld]: AppPermissionsForAccountType %@
AppPermissionsForAccountType
END [%lld] %fs: AppPermissionsForAccountType %@%@
accounts/set-permission-granted
%@: %@ -> %@
BEGIN [%lld]: PermitBundleWithAccountType %@: %@ -> %@
PermitBundleWithAccountType
END [%lld] %fs: PermitBundleWithAccountType 
accounts/clear-permission-granted
BEGIN [%lld]: ClearPermissionsForAccountType %@
ClearPermissionsForAccountType
END [%lld] %fs: ClearPermissionsForAccountType 
accounts/permission-for-type
PermissionForAccountType
BEGIN [%lld]: PermissionForAccountType %@
END [%lld] %fs: ClearPermissionsForAccountType %{public}@
accounts/granted-permissions-for-type
BEGIN [%lld]: GrantedPermissionsForAccountType %@
GrantedPermissionsForAccountType
END [%lld] %fs: GrantedPermissionsForAccountType %@%@
accounts/clear-granted-permissions-for-type
BEGIN [%lld]: ClearGrantedPermissionsForAccountType %@
ClearGrantedPermissionsForAccountType
END [%lld] %fs: ClearGrantedPermissionsForAccountType 
accounts/verify-credentials
 AccountType=%{public,signpost.telemetry:string1,name=AccountType}@  ShouldSave=%{public,signpost.telemetry:number1,name=ShouldSave}d  enableTelemetry=YES (account: %@)
VerifyCredentials
BEGIN [%lld]: VerifyCredentials  AccountType=%{public,signpost.telemetry:string1,name=AccountType}@  ShouldSave=%{public,signpost.telemetry:number1,name=ShouldSave}d  enableTelemetry=YES (account: %@)
"Starting credential verification for account %@."
"Completed account credential verification: %@ - %@."
END [%lld] %fs: VerifyCredentials %{public}@
accounts/renew-credentials
"Account %@ associated with store %@, renewing credentials on store %@"
 AccountType=%{public,signpost.telemetry:string1,name=AccountType}@  ShouldForce=%{public,signpost.telemetry:number1,name=ShouldForce}d  ShouldAvoidUI=%{public,signpost.telemetry:number2,name=ShouldAvoidUI}d  enableTelemetry=YES (account: %@)
RenewCredentials
BEGIN [%lld]: RenewCredentials  AccountType=%{public,signpost.telemetry:string1,name=AccountType}@  ShouldForce=%{public,signpost.telemetry:number1,name=ShouldForce}d  ShouldAvoidUI=%{public,signpost.telemetry:number2,name=ShouldAvoidUI}d  enableTelemetry=YES (account: %@)
"Starting credential renewal for account %@."
"Completed account credential renewal: %ld - %@."
END [%lld] %fs: RenewCredentials %{public}@
accounts/migrate-credentials
"Starting credential migration for account %@."
"Completed account credential migration: %@ - %@."
accounts/credential-for-account
BEGIN [%lld]: CredentialForAccount %@
CredentialForAccount
END [%lld] %fs: CredentialForAccount %@%@
BEGIN [%lld]: CredentialForAccountWithServiceID %@ : %@
CredentialForAccountWithServiceID
END [%lld] %fs: CredentialForAccountWithServiceID %@%@
accounts/set-credential-for-account
%@ -> %@ : %@
BEGIN [%lld]: SetCredentialForAccountWithServiceID %@ -> %@ : %@
SetCredentialForAccountWithServiceID
END [%lld] %fs: SetCredentialForAccountWithServiceID %@%@
accounts/all-credential-items
BEGIN [%lld]: AllCredentialItems 
AllCredentialItems
END [%lld] %fs: AllCredentialItems %@%@
accounts/credential-item-for-account
BEGIN [%lld]: CredentialItemsForAccountWithServiceName %@ : %@
CredentialItemsForAccountWithServiceName
END [%lld] %fs: CredentialItemsForAccountWithServiceName %@%@
accounts/insert-credential-item
InsertCredentialItem
BEGIN [%lld]: InsertCredentialItem %@
"Credential item %@ associated with store %@, inserting credential item on store %@"
END [%lld] %fs: InsertCredentialItem %@%@
accounts/save-credential-item
SaveCredentialItem
BEGIN [%lld]: SaveCredentialItem %@
END [%lld] %fs: SaveCredentialItem %@%@
END [%lld] %fs: SaveCredentialItem %{public}@
"Calling daemon to save a credential item"
accounts/remove-credential-item
RemoveCredentialItem
BEGIN [%lld]: RemoveCredentialItem %@
END [%lld] %fs: RemoveCredentialItem %@%@
END [%lld] %fs: RemoveCredentialItem %{public}@
accounts/parent-account-for-account
"Account without identifier provided, bailing!"
BEGIN [%lld]: ParentAccountForAccount %@
ParentAccountForAccount
END [%lld] %fs: ParentAccountForAccount %@%@
accounts/child-accounts-for-account
BEGIN [%lld]: ChildAccountForAccounts %@
ChildAccountForAccounts
END [%lld] %fs: ChildAccountForAccounts %@%@
accounts/child-accounts-for-account-with-type
BEGIN [%lld]: ChildAccountForAccounts %@ : %@
accounts/enabled-dataclasses-for-account
BEGIN [%lld]: EnabledDataclassesForAccount %@
EnabledDataclassesForAccount
END [%lld] %fs: EnabledDataclassesForAccount %@%@
accounts/provisioned-dataclasses-for-account
BEGIN [%lld]: ProvisionedDataclassesForAccount %@
ProvisionedDataclassesForAccount
END [%lld] %fs: ProvisionedDataclassesForAccount %@%@
accounts/supported-dataclasses-for-account
BEGIN [%lld]: SupportedDataclassesForAccountType %@
SupportedDataclassesForAccountType
END [%lld] %fs: SupportedDataclassesForAccountType %@%@
accounts/syncable-dataclasses-for-account
BEGIN [%lld]: SyncableDataclassesForAccountType %@
SyncableDataclassesForAccountType
END [%lld] %fs: SyncableDataclassesForAccountType %@%@
accounts/display-type-for-account
BEGIN [%lld]: DisplayTypeForAccount %@
DisplayTypeForAccount
END [%lld] %fs: DisplayTypeForAccount %@%@
accounts/account-identifiers-enabled-for-dataclass
BEGIN [%lld]: AccountsEnabledForDataclass %@
AccountsEnabledForDataclass
END [%lld] %fs: AccountsEnabledForDataclass %@%@
accounts/account-identifiers-enabled-sync-dataclass
BEGIN [%lld]: AccountsEnabledToSyncDataclass %@
AccountsEnabledToSyncDataclass
END [%lld] %fs: AccountsEnabledToSyncDataclass %@%@
accounts/preload-dataclass-owners
PreloadDataclassOwners
BEGIN [%lld]: PreloadDataclassOwners 
END [%lld] %fs: PreloadDataclassOwners %@%@
accounts/dataclass-actions-for-account-save
BEGIN [%lld]: DataclassActionsForAccountSave %@
"Could not get dataclass actions: %@"
DataclassActionsForAccountSave
END [%lld] %fs: DataclassActionsForAccountSave %@%@
accounts/dataclass-actions-for-account-deletion
BEGIN [%lld]: DataclassActionsForAccountDeletion %@
DataclassActionsForAccountDeletion
END [%lld] %fs: DataclassActionsForAccountDeletion %@%@
accounts/is-performingdataclass-actions
BEGIN [%lld]: IsPerformingDataclassActions %@
"Could not get dataclass performing status: %@"
IsPerformingDataclassActions
END [%lld] %fs: IsPerformingDataclassActions %@%@
accounts/is-tethered-syncing-enabled-for-dataclasse
BEGIN [%lld]: IsThetheredSyncingEnabledForDataclass %@
IsThetheredSyncingEnabledForDataclass
END [%lld] %fs: IsThetheredSyncingEnabledForDataclass %@%@
accounts/is-tethered-syncing-enabled-for-dataclass
BEGIN [%lld]: ThetheredSyncSourceTypeForDataclass %@
ThetheredSyncSourceTypeForDataclass
END [%lld] %fs: ThetheredSyncSourceTypeForDataclass %@%@
accounts/accounts-enabled-for-dataclasses-of-type
AccountsEnabledForDataclasses
BEGIN [%lld]: AccountsEnabledForDataclasses %@ : %@
END [%lld] %fs: AccountsEnabledForDataclasses %@%@
accounts/client-token-for-account
BEGIN [%lld]: ClientTokenForAccount %@
ClientTokenForAccount
END [%lld] %fs: ClientTokenForAccount %@%@
accounts/add-client-token
%@ -> %@
BEGIN [%lld]: AddClientTokenForAccount %@ -> %@
AddClientTokenForAccount
END [%lld] %fs: AddClientTokenForAccount %{public}@
accounts/discover-properties-for-account
 AccountType=%{public,signpost.telemetry:string1,name=AccountType}@  enableTelemetry=YES (account: %@)
DiscoverProperties
BEGIN [%lld]: DiscoverProperties  AccountType=%{public,signpost.telemetry:string1,name=AccountType}@  enableTelemetry=YES (account: %@)
END [%lld] %fs: DiscoverProperties %{public}@
accounts/open-authentication-url
OpenAuthURLForAccount
BEGIN [%lld]: OpenAuthURLForAccount %@ -> %@
END [%lld] %fs: OpenAuthURLForAccount %@%@
accounts/open-authentication-url-with-info
%@,%@,%@ -> %@
BEGIN [%lld]: OpenAuthURLForAccount %@,%@,%@ -> %@
accounts/paired-update-account
%@ (%@)
NotifyRemoteOfModifiedAccount
BEGIN [%lld]: NotifyRemoteOfModifiedAccount %@ (%@)
"Notified successfully!"
END [%lld] %fs: NotifyRemoteOfModifiedAccount %@%@
"Failed to notify remote of modified account!"
accounts/notify-remote-updated-credentials
NotifyRemoteOfUpdatedCredentials
BEGIN [%lld]: NotifyRemoteOfUpdatedCredentials %@ (%@)
"Notified of credential update successfully!"
END [%lld] %fs: NotifyRemoteOfUpdatedCredentials %@%@
"Failed to notify remote of updated credentials!"
accounts/paired-save-account
SaveAccountToPairedDevice
BEGIN [%lld]: SaveAccountToPairedDevice %@ (%@)
END [%lld] %fs: SaveAccountToPairedDevice %@%@
accounts/paired-remove-accounts
(%@)
RemoveAccountsFromPairedDevice
BEGIN [%lld]: RemoveAccountsFromPairedDevice (%@)
END [%lld] %fs: RemoveAccountsFromPairedDevice %@%@
"Removed successfully!"
accounts/paired-remove-account
RemoveAccountFromPairedDevice
BEGIN [%lld]: RemoveAccountFromPairedDevice %@ (%@)
END [%lld] %fs: RemoveAccountFromPairedDevice %@%@
accounts/trigger-keychain-migration
BEGIN [%lld]: TriggerMigration 
"Keychain migrated successfully!"
TriggerMigration
END [%lld] %fs: TriggerMigration %@%@
accounts/remove-obsolete-accounts
RemoveObsoleteAccounts
BEGIN [%lld]: RemoveObsoleteAccounts 
"Will remove obsolete accounts with type identifiers %@"
"Fetched obsolete accounts %@ error %@"
END [%lld] %fs: RemoveObsoleteAccounts %@%@
"Gathered account %@ potential dataclass actions for deletion %@ error %@"
"Could not find acceptable action for dataclass %@ for removal of account %@. Probably orphaning data."
"Will remove obsolete account %@ with dataclass actions %@"
"Did remove obsolete account %@ with success %@ error %@"
"Successfully saved macOSServer child account: %@"
"Failed to save macOSServer child account. Error: %@"
"Found a matching existing account %@"
accounts/handle-url
HandleURL
BEGIN [%lld]: HandleURL %@
END [%lld] %fs: HandleURL 
"Failed to handle URL: %@"
"reportTelemetryForLandmarkEvent no longer suppored"
accounts/schedule-backup
ScheduleBackup
BEGIN [%lld]: ScheduleBackup 
END [%lld] %fs: ScheduleBackup %@%@
"Backup scheduled (if nonexistent) successfully!"
accounts/reset-database-to-version
ResetDatabaseToVersion
BEGIN [%lld]: ResetDatabaseToVersion %@
END [%lld] %fs: ResetDatabaseToVersion %@%@
accounts/shutdown-accountsd
ShutdownAccountsd
BEGIN [%lld]: ShutdownAccountsd 
END [%lld] %fs: ShutdownAccountsd %@%@
"ACAccount initializer just ran into an account %@ without an account type!"
"Unexpecteed nil value for %@"
"NSObjectInaccessibleException caught inside -[ACAccount initWithManagedAccount:]"
"Failed to fetch provisioned dataclasses, error: %@"
"Multiple fetches for provisioned dataclasses, not updating cache..."
"%{private}s Deprecated method called, please file a radar!"
"Failed to fetch enabled dataclasses, error: %@"
"Multiple fetches for enabled dataclasses, not updating cache..."
"-[ACAccount isEnabledForDataclass:] should not be relied on to get the status of FMiP. It may return inaccurate results. Use AAUIDeviceLocatorService instead."
"Exchange qualified: %@"
"Failed with status %@"
"no-op: setManagingOwnerIdentifier called on child account"
"no-op: setManagingSourceName called on child account"
"NSObjectInaccessibleException caught inside -[ACAccountType initWithManagedAccountType:]"
Operation on account (%@) of type (%@) was not properly scoped.
"Bundle ID spoofing failed."
"Error signing request: %@"
"The connection to ACDOAuthSigner was interrupted."
"The connection to ACDAccountStore was interrupted."
"The connection to ACDAccountStore was invalidated."
"Error setting the client's bundle ID: %@"
"Spoofed the client's bundle ID to: %@"
"ACAccountStoreClientSideListener is ignoring credential change notification because no account ID was provided."
"Started rate limiter vacuuming (%{public}@ keys)"
"Finished rate limiter vacuuming (removed %{public}@ keys)"
"ACSystemConfigManager: failed to acquire SCPreferencesLock for %p due to error %@"
"trustRef was NULL"
"trustRef evaluated unsuccessfully: %@"
"Failed to deserialize, error: %@"
Exceeded the maximum number of connections (2) to accountsd: %d connections open. Consider switching to +[ACAccountStore defaultStore]
"Exceeded the maximum number of connections (2) to accountsd: %d connections open. Consider switching to +[ACAccountStore defaultStore]"
"NSObjectInaccessibleException caught inside -[ACCredentialItem initWithManagedCredentialItem:]"
"Removing object %@ error userInfo because it is not NSSecureCoding."
"ACZeroingString is being used with a decoder of type %@, which is not allowed."
"Writing Accounts ACLastMigrationSystemVersion version pref %@"
v24@?0@"NSArray"8@"NSError"16
_accountTypesToMonitor must be non-nil
_accountTypesToMonitor must not be empty
v8@?0
v16@?0@"<ACRemoteAccountStoreProtocol>"8
v16@?0@"NSError"8
v16@?0@"NSNotification"8
<ACDManagedAccount:%@>
com.apple.Dataclass.Mail
com.apple.Dataclass.Contacts
com.apple.Dataclass.Calendars
com.apple.Dataclass.Reminders
com.apple.Dataclass.Bookmarks
com.apple.Dataclass.Notes
com.apple.Dataclass.ContactsSearch
com.apple.Dataclass.DeviceLocator
com.apple.Dataclass.MediaStream
com.apple.Dataclass.SharedStreams
com.apple.Dataclass.Backup
com.apple.Dataclass.Ubiquity
com.apple.Dataclass.KeyValue
com.apple.Dataclass.Shoebox
com.apple.Dataclass.KeychainSync
com.apple.Dataclass.Content
com.apple.Dataclass.CKCodeService
com.apple.Dataclass.CKDatabaseService
com.apple.Dataclass.CKDeviceService
com.apple.Dataclass.CKMetricsService
com.apple.Dataclass.CKShareService
com.apple.Dataclass.CloudPhotos
com.apple.Dataclass.Availability
com.apple.Dataclass.ShareLocation
com.apple.Dataclass.Messages
com.apple.Dataclass.BackToMyMac
com.apple.Dataclass.NetworkVPN
com.apple.Dataclass.ServerDocuments
com.apple.Dataclass.Notifications
com.apple.Dataclass.News
com.apple.Dataclass.ShareMenu
com.apple.Dataclass.SmartDefaults
com.apple.Dataclass.CloudDesktop
com.apple.Dataclass.Home
com.apple.Dataclass.CoreRoutine
com.apple.Dataclass.Health
com.apple.Dataclass.Siri
com.apple.Dataclass.Photos
com.apple.Dataclass.Stocks
com.apple.Dataclass.ProtectedCloudStorage
com.apple.Dataclass.iwmb
com.apple.Dataclass.FitnessPlus
none
parent
AppleID
OAuth
Kerberos
ReasonString
ShouldForce
ShouldAvoidUI
ShouldPromptBeforeRenew
LoginURL
CallbackURL
Services
AppleIDServiceType
ProxiedAppBundleID
ACShouldSave
DiscoverPropertiesForAccountCreation
DiscoverConnectionProperties
RefreshEmailAliases
RefreshEmailRules
ShouldNotUseParentAccount
ShouldNotCoalesceRequests
AllowedSSLCertificates
changed
deleted
auth
prompt
delete-all
fetch-accounts
invalidate-fetched-accounts-cache
ACAskForReply
ACRemoteDeviceOptionAccountQueryIgnoreCache
ACRemoteDeviceOptionTargetDeviceBTUUID
ACRemoteDeviceOptionPreloadedPropertiesArray
ACShouldSuppressPrompts
ACKeepPasswordAround
%@ %@
stringValue
integerValue
unsignedIntegerValue
doubleValue
dataValue
uuidValue
dateValue
urlValue
arrayValue
setValue
dictionaryValue
void ac_dispatch_remote(id<NSXPCProxyCreating>  _Nonnull __strong, ac_remote_dispatch_block_t  _Nonnull __strong, ac_remote_error_block_t  _Nonnull __strong)
ACRemoteDispatch.m
Invalid parameter not satisfying: %@
proxyProvider
block
errorHandler
void _ac_dispatch_remote_sync_try(id<NSXPCProxyCreating>  _Nonnull __strong, ac_remote_dispatch_block_t  _Nonnull __strong, ac_remote_error_block_t  _Nullable __strong, NSUInteger)
Unexpected 0 count of remaining attempts!
void ac_dispatch_remote_sync(id<NSXPCProxyCreating>  _Nonnull __strong, ac_remote_dispatch_block_t  _Nonnull __strong, ac_remote_error_block_t  _Nullable __strong)
void _ac_dispatch_remote_try(id<NSXPCProxyCreating>  _Nonnull __strong, ac_remote_dispatch_block_t  _Nonnull __strong, ac_remote_error_block_t  _Nonnull __strong, NSUInteger)
com.apple.accounts
core
persona
signpost
<ACDManagedAccountType:%@>
AppleInternal/Library
System/Library
Accounts
bundle
B24@?0@"NSURL"8@"NSError"16
ACDAccountStoreDidChangeNotification
ACAccountStoreDidChangeNotification
ACAccountCredentialsDidChangeNotification
ACAccountIdentifierKey
ACAccountTypeIdentifierKey
AccountIdentifier
account
SMTP
SMTPAccount
ShouldUseAuthentication
OutgoingMailServerAuthentication
SMTPIdentifier
IMAP
IMAPAccount
Class
Protocol
ACAccountStoreReply
@"ACRemoteAccountStoreSession"8@?0
v24@?0@"ACAccount"8@"NSError"16
v24@?0@"ACAccountType"8@"NSError"16
%@-%lu
accountTypeIDs must be non-nil
accountTypeIDs must not be empty
v20@?0B8@"NSError"12
Account type must be non-nil
v24@?0@"NSNumber"8@"NSError"16
AccountSyncDelete
Account must be non-nil
v24@?0@"NSURL"8@"NSError"16
AccountsFramework
ACClientSaveOveruseFault
Access options are not permitted for this account type. The options argument must be nil.
Access options are required for this account type.
v24@?0@"NSSet"8@"NSError"16
v24@?0@"NSDictionary"8@"NSError"16
v24@?0@8@"NSError"16
v24@?0q8@"NSError"16
v24@?0@"ACAccountCredential"8@"NSError"16
COMPLETE
v24@?0@"ACCredentialItem"8@"NSError"16
Credential item must be non-nil
v24@?0@"NSString"8@"NSError"16
The dataclasses argument cannot be nil
The accountTypes argument cannot be nil
URL must be non-nil
Auth delegate class name must be non-nil
Bundle path must be non-nil
v28@?0B8@"NSDictionary"12@"NSError"20
v32@?0@"NSString"8@"NSArray"16^B24
%@.migrator
MCAccountIsManaged
%@:%@
NSErrorPeerCertificateChainKey
ACPropertyFullName
firstName
middleName
lastName
nickname
PersonaIdentifier
IdentityEmailAddress
Hostname
PortNumber
ServerPath
SSLEnabled
SSLIsDirect
AllowsInsecureAuthentication
AllowsRecoverableTrustCertificate
DisableDynamicConfiguration
Prevent Recents Syncing
configProfileIdentifier
shouldNeverUseSyncableCredential
childCardDAVAccountIdentifier
AutodiscoverURL
EWSExternalURL
EWSInternalURL
EWSRootFolderID
AuthenticationScheme
X-APOP
smtpHostname
smtpPort
smtpRequiresSSL
imapHostname
imapPort
imapRequiresSSL
SendingAccountIdentifier
UseMailDrop
EmailAliases
mailAliasEditingURL
DisplayName
IsEnabled
IsPrimary
IsDefault
Color
EmailAddresses
EmailAddress
SecIdentityPersistentRef
SecCertificatePersistentRefs
DAAccountHost
RemoteManagingAccountIdentifier
ManagingOwnerIdentifier
ManagingSourceName
authenticated
credential
enabledDataclasses
provisionedDataclasses
accountProperties
dataclassProperties
customProperties
username
accountDescription
active
warmingUp
lastCredentialRenewalRejectionDate
date
identifier
owningBundleID
supportsAuthentication
visible
accountType
credentialType
authenticationType
modificationID
objectID
trackedProvisionedDataclasses
wasProvisionedDataclassesReset
trackedEnabledDataclasses
wasEnabledDataclassesReset
dirtyProperties
dirtyAccountProperties
dirtyDataclassProperties
ACAccount.m
data.length != 0
%@ (%@)
en_US
type:%@
identifier: %@
accountDescription: %@
username: %@
objectID: %@
provisionedDataclasses: %@
enabledDataclasses: %@
dataclassProperties: %@
properties: %@
parentAccount: %@
owningBundleID:%@
authenticated: %@
lastCredentialRenewalRejectedDate: %@
supportsAuthentication: %@
authenticationType: %@
credentialType: %@
credential: %@
created: %@
active: %@
visible: %@
warmingUp: %@
%@ - %@
ACAccount can't be its own parent
-[ACAccount setProvisionedDataclasses:]
v16@?0@"ACMutableTrackedSet"8
You can't enable dataclasses on child accounts
-[ACAccount setEnabledDataclasses:]
%@@%@
DAAccountEmailAddress
fallback
gmail.com
apidata.googleusercontent.com
www.googleapis.com
google.com
caldav.aol.com
carddav.aol.com
aol.com
caldav.calendar.yahoo.com
carddav.address.yahoo.com
yahoo.com
webdav.facebook.com
facebook.com
dav.qq.com
qq.com
caldav.126.com
contacts.126.com
126.com
caldav.163.com
contacts.163.com
163.com
@yahoo.co.jp
caldav.calendar.yahoo.co.jp
carddav.address.yahoo.co.jp
"%@" (%@)
v32@?0@"NSString"8@"NSString"16^B24
com.apple.twitter
com.apple.sinaweibo
com.apple.facebook
com.apple.account.SubscribedCalendar
com.apple.account.CalDAV
com.apple.account.CardDAV
com.apple.account.BookmarkDAV
com.apple.account.IMAP
com.apple.account.POP
com.apple.account.SMTP
com.apple.account.Exchange
com.apple.account.Hotmail
com.apple.account.LDAP
com.apple.account.Google
com.apple.account.Yahoo
com.apple.account.OnMyDevice
com.apple.account.IMAPNotes
com.apple.account.IMAPMail
com.apple.account.AppleAccount
com.apple.account.AppleID
com.apple.account.FaceTime
com.apple.account.Madrid
com.apple.account.GameCenter
com.apple.account.iTunesStore
com.apple.account.iTunesStore.sandbox
com.apple.flickr
com.apple.vimeo
com.apple.linkedin
com.apple.tudou
com.apple.youku
com.apple.account.yelp
com.apple.account.tencentweibo
com.apple.account.IdentityServices
com.apple.account.kerberos.sso.
com.apple.account.DeviceLocator
com.apple.account.HolidayCalendar
com.apple.account.FindMyFriends
com.apple.account.AppleIDAuthentication
com.apple.account.CloudKit
com.apple.account.126
com.apple.account.163
com.apple.account.aol
com.apple.account.qq
com.apple.account.osxserver
com.apple.account.jabber
com.apple.account.yahooim
com.apple.account.aim
com.apple.account.idms
com.apple.account.mso
com.apple.account.SingleSignOn
com.apple.account.facebookLegacy
com.apple.account.CalDAVLegacy
com.apple.account.CardDAVLegacy
com.apple.account.linkedInLegacy
com.apple.account.RemoteManagement
ACFacebookAppIdKey
ACFacebookPermissionsKey
ACFacebookAudienceKey
ACLinkedInAppIdKey
ACLinkedInPermissionsKey
everyone
friends
ACTencentWeiboAppIdKey
ACLiverpoolContainerId
ACBlahblahBlahTokenId
ACBlahBlahBlahAppId
accountTypeDescription
visibility
credentialProtectionPolicy
supportsMultipleAccounts
obsolete
syncableDataclasses
supportedDataclasses
ACAccountType.m
identifier: %@
description: %@
objectID: %@
supportsAuthentication %@
supportsMultipleAccounts %@
obsolete %@
owningBundleID %@
supportedDataclasses %@
syncableDataclasses %@
v24@?0@"NSURLRequest"8@"NSError"16
com.apple.accountsd.oauthsigner
value
credentialAvailability
owningTeamID
Dirty property name '%@' not part of managed object.
object is missing required property '%@'
NSArray+Accounts.m
v32@?0@8Q16^B24
predicate
NSDictionary+Accounts.m
v32@?0@8@16^B24
oauth
oauth2
password
token
oauth-token
oauth-token-secret
oath-refresh-token
oauth-expiry-date
purpose
oauth-token-nosync
rpassword
old-password
hybrid
appleid-authentication
find-my-iphone-token
find-my-iphone-app-token
find-my-iphone-siri-token
maps-token
hsa-token
find-my-friends-token
find-my-friends-app-token
back-to-my-mac-token
cloudkit-token
token-expiry-date
heartbeat-token
continuation-key
password-reset-token
password-reset-token-backup
mdm-server-token
search-party-token
key-transparency-token
yahoo-xympki-tokens
yahoo-xympki-token
yahoo-xympki-cookie-y
yahoo-xympki-cookie-t
yahoo-xympki-cookie-crumb
tencent-weibo-client-consumer-key
container-user-id
/t/t
<ACAccountCredential:'%@'-(%@)(TouchID:%d)>
credentialItems
_requiresTouchID
ACAccountCredential.m
com.apple.iOS
type
destructive
affectedContainers
undoAlertTitle
undoAlertMessage
com.apple.accountsd.accountmanager
@"ACTrackedXPCConnection"8@?0
@"NSXPCConnection"8@?0
ACRemoteAccountStoreSession.m
connection
q24@?0@"NSDate"8@"NSDate"16
ACRateLimiter queue
ACRateLimiter vacuum queue
properties
parentAccount
ACSysConfigManagerTimerQueue
ACSysConfigManagerSCPeferencesQueue
com.apple.accounts.applicationidfrompid
com.apple.accounts.connectbeforemigrationdidfinish
com.apple.private.accounts.bundleidspoofing
com.apple.private.accounts.authdialoghost
com.apple.private.accounts.shutdowndaemon
com.apple.private.accounts.allaccounts
com.apple.accounts.twitter.defaultaccess
com.apple.accounts.appleaccount.fullaccess
com.apple.accounts.weibo.defaultaccess
com.apple.accounts.flickr.defaultaccess
com.apple.accounts.vimeo.defaultaccess
com.apple.accounts.linkedin.defaultaccess
com.apple.accounts.facebook.defaultaccess
com.apple.accounts.tudou.defaultaccess
com.apple.accounts.youku.defaultaccess
com.apple.accounts.osxserver.defaultaccess
com.apple.private.accounts.customaccesssinfo
com.apple.accounts.yelp.defaultaccess
com.apple.accounts.tencentweibo.defaultaccess
com.apple.accounts.inactive.fullaccess
com.apple.accounts.appleidauthentication.defaultaccess
com.apple.accounts.idms.fullaccess
com.apple.itunesstored.private
com.apple.private.applemediaservices
com.apple.account.remotemanagement.fullaccess
<pid:%d>
@"NSArray"32@?0@"NSString"8@"NSArray"16^B24
@"NSData"32@?0@8Q16^B24
@32@?0@"NSData"8Q16^B24
certificatesData
policiesProperties
Failed to find an account type for %@
Failed to create an account of type %@
accountIdentifier
expirationDate
serviceName
isPersistent
v32@?0@"NSString"8@16^B24
Failed to allocate memory pages (bytes=%lu)
Failed to deallocate memory pages (ptr=%p, bytes=%lu)
alertReasonTitle
alertReasonMessage
ACDataclassAction.m
ACDataclassActionCancel
ACDataclassActionCreateSyncDataStore
ACDataclassActionMergeSyncDataIntoLocalData
ACDataclassActionDeleteSyncData
ACDataclassActionCreateSyncDataStoreKeepLocalData
ACDataclassActionMergeLocalDataIntoSyncData
ACDataclassActionCreateSyncDataStoreDeleteLocalData
ACDataclassActionRefresh
ACDataclassActionLoseNonUploadedData
Unknown ACDataclassAction
ACClientConnectionOveruseFault
pair
NSSet+Accounts.m
v24@?0@8^B16
Subscribed Calendar
CalDAV
CardDAV
BookmarkDAV
Exchange
LDAP
Mail
MobileMe
Gmail
Yahoo
OnMyDevice
IMAPNotes
AppleAccount
CastleIMAP
Supported Dataclasses
Enable Actions
Disable Actions
Delete Account Actions
Show Reminders Separately
Version
Supports Multiple Stores
Display Dataclass Switch
Requires User Confirmation
None
Keep Local Data
Merge Local Data
Delete Local Data
Merge Sync Data
Delete Sync Data
Merge Data
Delete Data
Enabled Dataclasses
Identifier
Sync Identifier
Provisioned Dataclasses
Type
Username
Type String
Short Type String
Subscribed Calendars
CalendarsWereMigrated
/tmp/AccountMigrationInProgress
ChildAccounts
ChangeType
AccountID
AccountType
OriginalDataclasses
requiresTouchID
persistent
ACCredentialItem.m
accountIdentifier: %@
expirationDate: %@
serviceName: %@
persistent: %@
objectID: %@
com.apple.accounts.keychain
ACErrorInvalidPropertiesKey
ACChangeTypeAdded
ACChangeTypeRemoved
ACTrackedSet.m
coder
_underlyingSet
_changesDictionary
underlyingSet
changesDictionary
array
enumerable
Failed to allocate backing set buffer
%@ (changes: %@)
trackedSet
ACZeroingString.m
string
Failed to allocate backing character buffer
characters
bytes
encoding
cString
AC.bytes
AC.length
Index out of bounds
Range out of bounds
com.apple.accountsd
LastMigrationSystemVersion
ACMonitoredAccountStore
ACRemoteAccountStoreSessionDelegate
ACMonitoredAccountStoreDelegateProtocol
NSObject
ACDManagedAccount
ACManagedDefaults
ACProtobufVariableValue
NSCopying
ACDManagedAccountType
ACPluginLoader
ACAccountStore
ACAccount
ACProtobufCoding
NSCoding
NSSecureCoding
ACAccountType
ACPersonaManager
ACDOAuthSignerProtocol
ACOAuthSigner
ACProtobufVariableKeyValuePair
Accounts
ACAccountCredential
ACProtobufDataclassAction
ACAccountStoreClientProtocol
ACRemoteAccountStoreSession
NSXPCProxyCreating
ACAccountStoreClientSideListener
ACSimpleRateLimiter
ACRateLimiter
ACTimedExpirer
ACDManagedAuthorization
ACDManagedAccessOptionsKey
ACProtobufVariableValueList
ACProtobufAccount
ACSystemConfigManager
ACNotificationRebroadcaster
ACDManagedDataclass
ACProtobufCredentialItem
ACRemoteAccountStoreProtocol
ACRemoteAccountStoreInterface
ACProtobufKeyValuePair
Helpers
ACDataclassAction
ACDManagedCredentialItem
ACTrackedXPCConnection
ACProtobufVariableValueDictionary
ACProtobufAccountType
ACProtobufDate
ACProtobufURL
ACDManagedAccountProperty
ACProtobufAccountCredential
ACCredentialItem
ACTrackedSet
NSMutableCopying
ACMutableTrackedSet
ACTrackingSet
ACZeroingString
ACAccountMigrationState
ACProtobufUUID
initWithWithRemoteEndpoint:effectiveBundleID:accountTypes:delegate:
initWithRemoteEndpoint:effectiveBundleID:
dictionary
weakObjectsHashTable
addObject:
defaultCenter
removeObserver:
dealloc
code
_accountsListPopulated:
_registerForCredentialChangedNotifications
_registerAccountMonitorWithCompletion:
_registerAccountMonitorSynchronouslyWithCompletion:
allValues
objectForKeyedSubscript:
removeObject:
exceptionWithName:reason:userInfo:
count
replyQueue
remoteAccountStoreSession
registerMonitorForAccountsOfTypes:completion:
_connectionFailureError
_processAccountsListForNotifications:
setWithCapacity:
monitoredAccounts
countByEnumeratingWithState:objects:count:
identifier
monitoredAccountWithIdentifier:
modificationID
isEqualToString:
accountWasModified:
accountWasAdded:
containsObject:
accountWasRemoved:
removeAllObjects
_setAccountStore:
setObject:forKeyedSubscript:
credentialsChangedNotification:
addObserverForName:object:queue:usingBlock:
userInfo
objectForKey:
accountCredentialChanged:
_reregister
isEqual:
class
self
performSelector:
performSelector:withObject:
performSelector:withObject:withObject:
isProxy
isKindOfClass:
isMemberOfClass:
conformsToProtocol:
respondsToSelector:
retain
release
autorelease
retainCount
zone
hash
superclass
description
debugDescription
TQ,R
T#,R
T@"NSString",R,C
connectionClosed
initWithAccountTypes:delegate:
registerWithCompletion:
registerSynchronouslyWithError:
addDelegate:
removeDelegate:
connectionDelegate
.cxx_destruct
_accountTypesToMonitor
_accountsByID
_delegates
_credentialsDidChangeObserver
_remoteAccountDidChangeObserver
T@"NSArray",R
stringWithFormat:
lastCredentialRenewalRejectionDate
T@"NSDate",&,D,N
dataclassProperties
T@,&,D,N
active
T@"NSNumber",&,D,N
warmingUp
authenticated
T@"NSString",&,D,N
date
authenticationType
accountDescription
supportsAuthentication
owningBundleID
username
credentialType
childAccounts
T@"NSSet",&,D,N
provisionedDataclasses
parentAccount
T@"ACDManagedAccount",&,D,N
accountType
T@"ACDManagedAccountType",&,D,N
customProperties
enabledDataclasses
visible
standardUserDefaults
isNSNumber__
isNSString__
intValue
initWithInt:
sharedInstance
valueForManagedDefault:
setValue:forManagedDefault:
dictionaryRepresentation
setObject:forKey:
numberWithLongLong:
numberWithUnsignedLongLong:
numberWithDouble:
setStringValue:
setDataValue:
setUuidValue:
setDateValue:
setUrlValue:
setArrayValue:
setSetValue:
setDictionaryValue:
allocWithZone:
init
copyWithZone:
mergeFrom:
hasStringValue
setIntegerValue:
setHasIntegerValue:
hasIntegerValue
setUnsignedIntegerValue:
setHasUnsignedIntegerValue:
hasUnsignedIntegerValue
setDoubleValue:
setHasDoubleValue:
hasDoubleValue
hasDataValue
hasUuidValue
hasDateValue
hasUrlValue
hasArrayValue
hasSetValue
hasDictionaryValue
readFrom:
writeTo:
copyTo:
stringValue
integerValue
unsignedIntegerValue
doubleValue
dataValue
uuidValue
dateValue
urlValue
arrayValue
setValue
dictionaryValue
_doubleValue
_integerValue
_unsignedIntegerValue
_arrayValue
_dataValue
_dateValue
_dictionaryValue
_setValue
_stringValue
_urlValue
_uuidValue
_has
TB,R,N
T@"NSString",&,N,V_stringValue
TB,N
Tq,N,V_integerValue
TQ,N,V_unsignedIntegerValue
Td,N,V_doubleValue
T@"NSData",&,N,V_dataValue
T@"ACProtobufUUID",&,N,V_uuidValue
T@"ACProtobufDate",&,N,V_dateValue
T@"ACProtobufURL",&,N,V_urlValue
T@"ACProtobufVariableValueList",&,N,V_arrayValue
T@"ACProtobufVariableValueList",&,N,V_setValue
T@"ACProtobufVariableValueDictionary",&,N,V_dictionaryValue
currentHandler
stringWithUTF8String:
handleFailureInFunction:file:lineNumber:description:
synchronousRemoteObjectProxyWithErrorHandler:
remoteObjectProxyWithErrorHandler:
domain
supportsMultipleAccounts
accountTypeDescription
credentialProtectionPolicy
visibility
supportedDataclasses
permission
accounts
accessKeys
syncableDataclasses
obsolete
stringByAppendingPathComponent:
fileURLWithPath:
URLByAppendingPathComponent:isDirectory:
lastPathComponent
hasSuffix:
getResourceValue:forKey:error:
boolValue
bundleWithURL:
defaultManager
_accountsPluginDirectoryURL:inAppleInternal:
arrayWithObjects:
enumeratorAtURL:includingPropertiesForKeys:options:errorHandler:
nextObject
_validatedBundleAtURL:
_populatePluginBundles:atSubpath:inAppleInternal:
copy
_pluginWithName:inSubpath:inAppleInternal:
pluginBundlesAtSubpath:
pluginWithName:inSubpath:
expirerWithTimeout:
sharedRebroadcaster
_clearAccountCaches
postNotificationName:object:userInfo:
initWithListenerEndpoint:delegate:
effectiveBundleID
setEffectiveBundleID:
scheduleExpiration:
errorWithDomain:code:userInfo:
setNotificationsEnabled:
longLivedRemoteAccountStoreSession
accountWithIdentifier:error:
accountWithIdentifier:handler:
accountWithIdentifier:completion:
accountTypeWithAccountTypeIdentifier:error:
accountTypeWithIdentifier:handler:
setAccountStore:
accountsWithHandler:
accountsWithAccountType:handler:
accountsWithAccountType:options:completion:
accountsWithAccountTypeIdentifiers:preloadedProperties:completion:
accountsWithAccountTypeIdentifiers:preloadedProperties:error:
setWithObject:
accountsOnPairedDeviceWithAccountTypes:withOptions:completion:
accountsOnPairedDeviceWithAccountTypes:withOptions:handler:
dataclassesWithHandler:
accountTypesWithHandler:
visibleTopLevelAccountsWithAccountTypeIdentifiers:completion:
accountExistsWithDescription:completion:
kerberosAccountsForDomainFromURL:completion:
isPushSupportedForAccount:completion:
accountsWithAccountTypeIdentifierExist:
numberWithUnsignedInt:
countOfAccountsWithAccountTypeIdentifier:
numberWithInteger:
objectID
setObjectID:
insertAccountType:withHandler:
removeAccountType:withHandler:
numberWithBool:
setAccountProperty:forKey:
removeAccount:withDataclassActions:completion:
isDirty
canSaveAccount:completion:
accountTypeWithAccountTypeIdentifier:
_saveAccount:verify:dataclassActions:completion:
_unsanitizeError:
_setObjectID:
_clearCachedChildAccounts
_clearDirtyProperties
_checkSaveRateLimitForAccountType:
saveAccount:verify:dataclassActions:completion:
updateExistenceCacheOfAccountWithTypeIdentifier:withHandler:
initWithMaximum:inTimeInterval:
reservePerformActionForKey:
maximum
numberWithUnsignedInteger:
timeInterval
requestAccessToAccountsWithType:options:completion:
raise:format:
requestAccessForAccountTypeWithIdentifier:options:withHandler:
accessKeysForAccountType:handler:
appPermissionsForAccountType:withHandler:
setPermissionGranted:forBundleID:onAccountType:withHandler:
clearAllPermissionsGrantedForAccountType:withHandler:
permissionForAccountType:withHandler:
grantedPermissionsForAccountType:withHandler:
clearGrantedPermissionsForAccountType:withHandler:
verifyCredentialsForAccount:saveWhenAuthorized:withHandler:
dictionaryWithObjects:forKeys:count:
verifyCredentialsForAccount:options:completion:
_sanitizeOptionsDictionary:
_clearCachedCredentials
accountStore
renewCredentialsForAccount:options:completion:
renewCredentialsForAccount:force:reason:completion:
migrateCredentialForAccount:completion:
credentialForAccount:error:
credentialForAccountWithIdentifier:handler:
_setOwningAccount:
credentialForAccount:serviceID:error:
credentialForAccount:serviceID:handler:
setCredential:forAccount:serviceID:completion:
credentialForAccount:serviceID:
credentialItemsWithCompletion:
credentialItemForAccount:serviceName:completion:
insertCredentialItem:completion:
clearDirtyProperties
saveCredentialItem:completion:
removeCredentialItem:completion:
parentAccountForAccount:error:
parentAccountForAccountWithIdentifier:handler:
childAccountsForAccount:error:
childAccountsForAccountWithIdentifier:handler:
childAccountsWithAccountTypeIdentifier:parentAccountIdentifier:handler:
enabledDataclassesForAccount:error:
enabledDataclassesForAccountWithIdentifier:handler:
provisionedDataclassesForAccount:error:
provisionedDataclassesForAccountWithIdentifier:handler:
supportedDataclassesForAccountType:handler:
syncableDataclassesForAccountType:handler:
displayAccountTypeForAccountWithIdentifier:handler:
accountIdentifiersEnabledForDataclass:handler:
accountIdentifiersEnabledToSyncDataclass:handler:
preloadDataclassOwnersWithCompletion:
dataclassActionsForAccountSave:error:
dataclassActionsForAccountSave:completion:
dataclassActionsForAccountDeletion:error:
dataclassActionsForAccountDeletion:completion:
isPerformingDataclassActionsForAccount:error:
isPerformingDataclassActionsForAccount:completion:
isTetheredSyncingEnabledForDataclass:completion:
tetheredSyncSourceTypeForDataclass:completion:
accountIdentifiersEnabledForDataclasses:withAccountTypeIdentifiers:completion:
clientTokenForAccountIdentifier:completion:
addClientToken:forAccountIdentifier:completion:
discoverPropertiesForAccount:options:completion:
openAuthenticationURL:forAccount:shouldConfirm:completion:
openAuthenticationURLForAccount:withDelegateClassName:fromBundleAtPath:shouldConfirm:completion:
notifyRemoteDevicesOfModifiedAccount:withOptions:completion:
notifyRemoteDevicesOfModifiedAccount:withChangeType:options:completion:
notifyRemoteDevicesOfUpdatedCredentials:withOptions:
notifyRemoteDevicesOfUpdatedCredentials:withOptions:completion:
saveAccount:toPairedDeviceWithOptions:completion:
removeAccountsFromPairedDeviceWithOptions:completion:
removeAccountFromPairedDevice:withOptions:completion:
triggerKeychainMigrationIfNecessary:
arrayWithObjects:count:
_obsoleteAccountTypeIDsToRemove
mutableCopy
_removeObsoleteAccountsInternal:completion:
accountsWithAccountTypeIdentifiers:completion:
firstObject
type
enumerateKeysAndObjectsUsingBlock:
saveVerifiedAccount:error:
removeObjectAtIndex:
accountsWithAccountType:
compare:options:
qualifiedUsername
portableCopy
setAuthenticationType:
setParentAccount:
UUID
UUIDString
setIdentifier:
internalCredential
setCredential:
setCredentialType:
setSupportsAuthentication:
isAuthenticated
setAuthenticated:
setUsername:
setAccountDescription:
setOwningBundleID:
setEnabled:forDataclass:
setProvisioned:forDataclass:
accountPropertyForKey:
setAccountType:
isEnabledForDataclass:
isProvisionedForDataclass:
_createSMTPAccountForServerAccount:
initWithAccountType:
setActive:
handleURL:
scheduleBackupIfNonexistent:
resetDatabaseToVersion:withCompletion:
shutdownAccountsD:
defaultStore
_setDefaultStore:
_setConnectionTimeout:
canSaveAccountsOfAccountTypeIdentifier:
T@"ACAccountStore",&,N,S_setDefaultStore:
initWithRemoteEndpoint:
initWithEffectiveBundleID:
disconnectFromRemoteAccountStore
accountWithIdentifier:
cachedAccountWithIdentifier:completion:
accountTypeWithIdentifier:completion:
accountsWithAccountType:options:error:
accountsWithAccountType:completion:
accountsWithAccountTypeIdentifiers:error:
cachedAccountsWithAccountType:options:completion:
accountsOnPairedDeviceWithAccountType:completion:
allDataclasses
allAccountTypes
hasAccountWithDescription:
isPushSupportedForAccount:
insertAccountType:withCompletionHandler:
removeAccountType:withCompletionHandler:
removeAccount:withDeleteSync:completion:
removeAccount:withCompletionHandler:
canSaveAccount:withCompletionHandler:
saveAccount:withCompletionHandler:
saveAccount:withDataclassActions:completion:
saveAccount:withDataclassActions:doVerify:completion:
saveVerifiedAccount:withCompletionHandler:
updateExistenceCacheOfAccountWithTypeIdentifier:
requestAccessToAccountsWithType:withCompletionHandler:
accessKeysForAccountType:
appPermissionsForAccountType:
setPermissionGranted:forBundleID:onAccountType:
clearAllPermissionsGrantedForAccountType:
permissionForAccountType:
grantedPermissionsForAccountType:
clearGrantedPermissionsForAccountType:
verifyCredentialsForAccount:withHandler:
renewCredentialsForAccount:reason:completion:
renewCredentialsForAccount:completion:
renewCredentialsForAccount:services:completion:
credentialForAccount:
setCredential:forAccount:serviceID:error:
credentialForAccount:bundleID:
allCredentialItems
credentialItemForAccount:serviceName:
insertCredentialItem:withCompletionHandler:
saveCredentialItem:withCompletionHandler:
removeCredentialItem:withCompletionHandler:
parentAccountForAccount:
childAccountsForAccount:
childAccountsForAccount:withTypeIdentifier:
enabledDataclassesForAccount:
provisionedDataclassesForAccount:
supportedDataclassesForAccountType:
syncableDataclassesForAccountType:
displayTypeForAccountWithIdentifier:
accountIdentifiersEnabledForDataclass:
accountIdentifiersEnabledToSyncDataclass:
dataclassActionsForAccountSave:
dataclassActionsForAccountDeletion:
isPerformingDataclassActionsForAccount:
isTetheredSyncingEnabledForDataclass:
tetheredSyncSourceTypeForDataclass:
clientTokenForAccount:
addClientToken:forAccount:
notifyRemoteDevicesOfModifiedAccount:
notifyRemoteDevicesOfModifiedAccount:withOptions:
notifyRemoteDevicesOfUpdatedCredentials:
removeAccountsFromPairedDeviceWithCompletion:
removeAccountFromPairedDevice:withCompletion:
removeObsoleteAccounts:
_removeObsoleteOSXServerAccountForMacOS:
_removeObsoleteOSXServerAccountForiOS:
reportTelemetryForLandmarkEvent:
_daemonAccountStoreDidChangeObserver
_accountCache
_accountsWithAccountTypeCache
_endpoint
_remoteAccountStoreSession
_remoteAccountStoreSessionLock
_remoteAccountStoreSessionExpirer
_longLivedRemoteAccountStoreSession
_longLivedRemoteAccountStoreSessionLock
_longLivedRemoteAccountStoreSessionExpirer
_replyQueue
_effectiveBundleID
T@"NSObject<OS_dispatch_queue>",R,N,V_replyQueue
T@"ACRemoteAccountStoreSession",R,N
T@"<ACRemoteAccountStoreSessionDelegate>",R
T@"NSString",R,V_effectiveBundleID
T@"NSArray",R,W,N
_unsafe_markPropertyDirty:
initWithManagedAccount:
initWithManagedAccountType:
URIRepresentation
value
name
decodeObjectOfClass:forKey:
setWithObjects:
decodeObjectOfClasses:forKey:
decodeBoolForKey:
allObjects
addObjectsFromArray:
_installCredentialsChangedObserver
credentialsChanged:
encodeObject:forKey:
accountProperties
accountPropertiesTransformer
_markAccountPropertyDirty:
encodeBool:forKey:
setWithTrackedSet:
_initWithProtobuf:
hasCredential
credential
propertiesDictionary
hasLastCredentialRenewalRejectionDate
dataclassPropertiesDictionary
hasObjectID
hasParentAccount
dirtyProperties
initWithArray:
dirtyAccountProperties
dirtyDataclassProperties
length
handleFailureInMethod:object:file:lineNumber:description:
initWithData:
_encodeProtobuf
setPropertiesDictionary:
initWithDate:
setLastCredentialRenewalRejectionDate:
setWarmingUp:
setVisible:
setDataclassPropertiesDictionary:
initWithURL:
setProvisionedDataclasses:
setEnabledDataclasses:
setDate:
setDirtyProperties:
setDirtyAccountProperties:
setDirtyDataclassProperties:
setModificationID:
data
mutableCopyWithZone:
_loadAllCachedProperties
setTimeStyle:
setDateStyle:
localeWithLocaleIdentifier:
setLocale:
creationDate
stringFromDate:
parentAccountIdentifier
isActive
isVisible
isWarmingUp
isPropertyDirty:
initWithCapacity:
_unsafe_markAccountPropertyDirty:
_unsafe_markDataclassPropertyDirty:
_markPropertyDirty:
_useParentForCredentials
setGivenName:
setMiddleName:
setFamilyName:
localizedStringFromPersonNameComponents:style:options:
credentialWithError:
willChangeValueForKey:
didChangeValueForKey:
setValue:forKey:
displayAccount
arrayWithCapacity:
intersectSet:
initWithSet:
_markDataclassPropertyDirty:
propertiesForDataclass:
trackedProvisionedDataclasses
trackedEnabledDataclasses
setByAddingObjectsFromSet:
reload
allKeys
removeObjectForKey:
clientToken
addClientToken:
host
containsString:
enumerateModificationsUsingBlock:
numberWithInt:
objectAtIndexedSubscript:
childAccountsWithAccountTypeIdentifier:
supportsSecureCoding
keypathsRequiredForInitialization
_initWithProtobufData:
_encodeProtobufData
encodeWithCoder:
initWithCoder:
TB,R
initWithManagedAccount:accountStore:
fullDescription
markAllPropertiesDirty
setDirty:forProperty:
_markCredentialDirty
userFullName
setCreationDate:
setAccountProperties:
propertyForKey:
setProperty:forKey:
supportsPush
_resetParentAccount:
isEnabledToSyncDataclass:
setDataclassProperties:
setProperties:forDataclass:
takeValuesFromModifiedAccount:
refresh
accountByCleaningThirdPartyTransformations
defaultAutodiscoverDomainForChildType:
shortDebugName
_applyDirtyStateFromAccount:
_isDifferentFrom:
setSecIdentity:
copySecIdentity
setSecCertificates:
secCertificates
isDataSeparatedAccount
personaIdentifier
correctPersonaScopedForAccount
childCardDAVAccountIdentifier
setChildCardDAVAccountIdentifier:
managingOwnerIdentifier
setManagingOwnerIdentifier:
managingSourceName
setManagingSourceName:
setTrackedProvisionedDataclasses:
wasProvisionedDataclassesReset
setTrackedEnabledDataclasses:
wasEnabledDataclassesReset
setAccountPropertiesTransformer:
_accountStore
_identifier
_accountDescription
_owningBundleID
_username
_authenticationType
_credentialType
_clientToken
_accountType
_credential
_properties
_dataclassProperties
_objectID
_date
_lastCredentialRenewalRejectionDate
_modificationID
_parentAccount
_childAccounts
_trackedProvisionedDataclasses
_trackedEnabledDataclasses
_dirtyProperties
_dirtyAccountProperties
_dirtyDataclassProperties
_accountPropertiesTransformer
_haveCheckedForClientToken
_accountAccessAvailable
_authenticated
_active
_warmingUp
_supportsAuthentication
_visible
_haveCheckedForChildAccounts
_wasProvisionedDataclassesReset
_wasEnabledDataclassesReset
T@"ACTrackedSet",C,N,V_trackedProvisionedDataclasses
TB,R,N,V_wasProvisionedDataclassesReset
T@"ACTrackedSet",C,N,V_trackedEnabledDataclasses
TB,R,N,V_wasEnabledDataclassesReset
T@"ACAccountCredential",R,N
T@"NSString",R,N
T@"NSURL",R,N
T@"ACAccountStore",R,N
T@"ACAccount",&,N
T@"NSArray",R,N
T@"NSMutableSet",&,N
T@"NSDictionary",R,W,N
TB,N,GisAuthenticated
T@"ACAccount",R,W,N
TB,N,GisActive
TB,N,GisWarmingUp
dirty
TB,R,N,GisDirty
T@"NSSet",R,N
T@"NSDate",&,N
TB,N,GisVisible
T@?,C,V_accountPropertiesTransformer
T@"NSString",&
T@"NSString",R,W,N
T@"ACAccountType",&,N
T@"NSString",C,N
T@"ACAccountCredential",&,N
setWithArray:
isObsolete
setAccountTypeDescription:
setVisibility:
setCredentialProtectionPolicy:
setSupportsMultipleAccounts:
setObsolete:
allIdentifiers
T@"NSSet",R,C
initWithIdentifier:description:
initWithManagedAccountType:accountStore:
setSupportedDataclasses:
setSyncableDataclasses:
accessGranted
_accountTypeDescription
_visibility
_credentialProtectionPolicy
_supportsMultipleAccounts
_obsolete
_supportedDataclasses
_syncableDataclasses
_accessKeys
T@"NSURL",&,N,V_objectID
Ti,N
T@,C,N
T@"NSString",&,N,V_credentialType
T@"ACAccountStore",W,N,V_accountStore
Ti,N,V_supportsAuthentication
TB,N,V_supportsMultipleAccounts
T@"NSString",&,N,V_owningBundleID
TB,N,GisObsolete,V_obsolete
T@"NSSet",R,N,V_supportedDataclasses
T@"NSSet",R,N,V_syncableDataclasses
T@"NSSet",R,N,V_accessKeys
T@"NSString",R,N,V_accountTypeDescription
T@"NSString",R,N,V_identifier
performWithinPersonaForAccount:withBlock:
performWithinPersona:withBlock:
performWithinPersonaForAccountIdentifier:withBlock:
_personaGenerationID
_personaStorageLock
_enterprisePersonaUID
_personalPersonaUID
_guestPersonasUID
_dataSeparatedPersonasUIDs
_store
initWithAccount:remoteEndpoint:
_connectToRemoteOAuthSignerUsingEndpoint:
setClientBundleID:withHandler:
disconnectFromRemoteOAuthSigner
setShouldIncludeAppIdInRequest:
signURLRequest:withAccount:callingPID:timestamp:handler:
signURLRequest:withAccount:applicationID:timestamp:handler:
signedURLRequestWithURLRequest:callingPID:timestamp:
initWithMachServiceName:options:
initWithListenerEndpoint:
interfaceWithProtocol:
setRemoteObjectInterface:
setInterruptionHandler:
remoteObjectProxy
resume
invalidate
initWithAccount:
signedURLRequestWithURLRequest:applicationID:timestamp:
signedURLRequestWithURLRequest:
shouldIncludeAppIdInRequest
_connection
_account
_proxyShim
_shouldIncludeAppIdInRequest
TB,N,V_shouldIncludeAppIdInRequest
setKey:
setValue:
_key
_value
T@"NSString",&,N,V_key
T@"ACProtobufVariableValue",&,N,V_value
entity
attributesByName
valueForKey:
_obsoleteAttributes
intersectsSet:
relationshipsByName
dictionaryWithValuesForKeys:
_removeObsoleteKeysFromDictionary:
setValuesForKeysWithDictionary:
isOptional
dictionaryWithObject:forKey:
setValuesWithObject:
validateRequiredAttributesForObject:error:
enumerateObjectsUsingBlock:
indexOfObjectPassingTest:
objectAtIndex:
ac_filter:
ac_firstObjectPassingTest:
ac_map:
ac_mapNullable:
ac_mapValues:
ac_mapValuesNullable:
credentialItems
setOauthToken:
setOauthRefreshToken:
setExpiryDate:
setOauthTokenSecret:
setPassword:
componentsJoinedByString:
initWithOAuthToken:tokenSecret:
initWithPassword:
arrayByAddingObjectsFromArray:
requiresTouchID
stringWithString:
setRequiresTouchID:
initWithValue:forKey:
setCredentialItems:
_newZStringWithString:
initWithString:
credentialItemForKey:
setCredentialItem:forKey:
dateWithTimeIntervalSinceReferenceDate:
timeIntervalSinceReferenceDate
credentialWithOAuthToken:tokenSecret:
credentialWithPassword:
allSupportedKeys
supportedKeysForAccountTypeIdentifier:credentialType:
nonPersistentKeysForAccountTypeIdentifier:credentialType:
credentialPolicyForAccountTypeIdentifier:key:clientID:
credentialPolicyIsMixedForAccountTypeIdentifier:
additionalServiceSegmentForAccountTypeIdentifier:
initWithOAuth2Token:refreshToken:expiryDate:
isEmpty
keysForCredentialItems
token
setToken:
oauthToken
oauthTokenSecret
oauthTokenNoSync
setOauthTokenNoSync:
oauthRefreshToken
expiryDate
password
findMyiPhoneToken
setFindMyiPhoneToken:
mapsToken
setMapsToken:
hsaToken
setHsaToken:
mdmServerToken
setMdmServerToken:
tokenExpiryDate
setTokenExpiryDate:
setDirty:
setEmpty:
_credentialItems
_owningAccount
_requiresTouchID
_dirty
_empty
TB,N,V_requiresTouchID
TB,N,GisDirty,V_dirty
empty
TB,N,GisEmpty,V_empty
T@"NSDate",C,N
addAffectedContainers:
affectedContainersCount
clearAffectedContainers
affectedContainersAtIndex:
setUndoAlertTitle:
setUndoAlertMessage:
affectedContainersType
hasUndoAlertTitle
hasUndoAlertMessage
setType:
destructive
setDestructive:
affectedContainers
setAffectedContainers:
undoAlertTitle
undoAlertMessage
_affectedContainers
_type
_undoAlertMessage
_undoAlertTitle
_destructive
Ti,N,V_type
TB,N,V_destructive
T@"NSMutableArray",&,N,V_affectedContainers
T@"NSString",&,N,V_undoAlertTitle
T@"NSString",&,N,V_undoAlertMessage
initWithDelegate:
connectionWasInvalidated
XPCInterface
accountCredentialsDidChangeForAccountWithIdentifier:
accountDidChange:withChangeType:
setExportedInterface:
setExportedObject:
_setConnectionInterrupted
_setConnectionInvalidated
setInvalidationHandler:
_locked_configureRemoteAccountStoreWithConnection:
_locked_connection:setEffectiveBundleID:
_locked_connection:setNotificationsEnabled:
listenerEndpoint
notificationsEnabled
_connectionLock
_clientSideListener
_notificationsEnabled
_listenerEndpoint
T@"NSXPCListenerEndpoint",R,N,V_listenerEndpoint
T@"NSString",C,N,V_effectiveBundleID
TB,N,V_notificationsEnabled
_delegate
array
instanceLock
lock
rateLimitingStartDate
locked_removeDatesBefore:
sortedActionDates
locked_addDate:
unlock
dateWithTimeIntervalSinceNow:
compare:
indexOfObject:inSortedRange:options:usingComparator:
locked_indexOfFirstAfter:
removeObjectsInRange:
insertObject:atIndex:
reservePerformActionNow
isEmptyAfterFlushing
setInstanceLock:
setSortedActionDates:
_maximum
_timeInterval
_instanceLock
_sortedActionDates
T@"NSDate",R
T@"NSLock",&,V_instanceLock
T@"NSMutableArray",&,V_sortedActionDates
TQ,R,V_maximum
Td,R,V_timeInterval
simpleRateLimiterForKey:
vacuumIfNeeded
instanceQueue
keyToSimpleRateLimiter
isVacuumInProgress
nextVacuumDate
setIsVacuumInProgress:
_vacuumQueue_vacuum
vacuumTimeInterval
setNextVacuumDate:
_vacuumQueue_vacuumKey:
vacuumQueue
setKeyToSimpleRateLimiter:
_isVacuumInProgress
_instanceQueue
_vacuumQueue
_keyToSimpleRateLimiter
_vacuumTimeInterval
_nextVacuumDate
T@"NSObject<OS_dispatch_queue>",R,V_instanceQueue
T@"NSObject<OS_dispatch_queue>",R,V_vacuumQueue
T@"NSMutableDictionary",&,V_keyToSimpleRateLimiter
Td,R,V_vacuumTimeInterval
TB,V_isVacuumInProgress
T@"NSDate",&,V_nextVacuumDate
_cancelTimer
_unsafeCancelTimer
_invalidationInterval
_invalidationTimer
_invalidationTimerLock
options
grantedPermissions
bundleID
owningAccountTypes
addValue:
valuesCount
clearValues
valueAtIndex:
valueType
values
setValues:
_values
T@"NSMutableArray",&,N,V_values
addProperties:
addDataclassProperties:
addEnabledDataclasses:
addProvisionedDataclasses:
addDirtyProperties:
addDirtyAccountProperties:
addDirtyDataclassProperties:
propertiesCount
clearProperties
propertiesAtIndex:
dataclassPropertiesCount
clearDataclassProperties
dataclassPropertiesAtIndex:
enabledDataclassesCount
clearEnabledDataclasses
enabledDataclassesAtIndex:
provisionedDataclassesCount
clearProvisionedDataclasses
provisionedDataclassesAtIndex:
dirtyPropertiesCount
dirtyPropertiesAtIndex:
dirtyAccountPropertiesCount
clearDirtyAccountProperties
dirtyAccountPropertiesAtIndex:
dirtyDataclassPropertiesCount
clearDirtyDataclassProperties
dirtyDataclassPropertiesAtIndex:
propertiesType
dataclassPropertiesType
enabledDataclassesType
provisionedDataclassesType
dirtyPropertiesType
dirtyAccountPropertiesType
dirtyDataclassPropertiesType
hasAccountDescription
hasUsername
hasAuthenticationType
hasCredentialType
hasDate
hasOwningBundleID
setHasWarmingUp:
hasWarmingUp
hasModificationID
properties
setProperties:
_enabledDataclasses
_provisionedDataclasses
T@"ACProtobufAccountType",&,N,V_accountType
T@"ACProtobufAccountCredential",&,N,V_credential
T@"NSString",&,N,V_identifier
T@"NSString",&,N,V_accountDescription
T@"NSString",&,N,V_username
T@"NSMutableArray",&,N,V_properties
TB,N,V_authenticated
T@"ACProtobufDate",&,N,V_lastCredentialRenewalRejectionDate
TB,N,V_active
TB,N,V_visible
TB,N,V_supportsAuthentication
T@"NSMutableArray",&,N,V_dataclassProperties
T@"ACProtobufURL",&,N,V_objectID
T@"ACProtobufAccount",&,N,V_parentAccount
T@"NSMutableArray",&,N,V_enabledDataclasses
T@"NSMutableArray",&,N,V_provisionedDataclasses
T@"NSString",&,N,V_authenticationType
T@"ACProtobufDate",&,N,V_date
T@"NSMutableArray",&,N,V_dirtyProperties
T@"NSMutableArray",&,N,V_dirtyAccountProperties
T@"NSMutableArray",&,N,V_dirtyDataclassProperties
TB,N,V_warmingUp
T@"NSString",&,N,V_modificationID
_scheduleSharedInstanceTeardown
_tearDown
_timeoutInterval
_createSCPreferencesSession
_destroySCPreferencesSession
_livingInstance
setAccountsWithAccountTypeIdentifier:exist:
setCountOfAccounts:withAccountTypeIdentifier:
_handleSCPreferencesSessionNotification:
_getValueForKey:
_setValue:forKey:
_preferencesQueue
_preferencesSession
_applySkipCount
_beginObservingAccountStoreDidChangeNotifications
_endObservingAccountStoreDidChangeNotifications
_accountStoreDidChange:
addObserver:selector:name:object:suspensionBehavior:
removeObserver:name:object:
T@"ACNotificationRebroadcaster",R
initWithBytes:length:encoding:
objectForInfoDictionaryKey:
archivedDataWithRootObject:requiringSecureCoding:error:
unarchivedObjectOfClasses:fromData:error:
provisionedAccounts
syncableTypes
supportedTypes
enabledAccounts
setAccountIdentifier:
setExpirationDate:
setServiceName:
hasExpirationDate
setIsPersistent:
setHasIsPersistent:
hasIsPersistent
accountIdentifier
expirationDate
serviceName
isPersistent
_accountIdentifier
_expirationDate
_serviceName
_isPersistent
T@"NSString",&,N,V_accountIdentifier
T@"ACProtobufDate",&,N,V_expirationDate
T@"NSString",&,N,V_serviceName
TB,N,V_isPersistent
_buildXPCInterface
saveAccount:withHandler:
notifyRemoteDevicesOfModifiedAccount:withChangeType:
setClasses:forSelector:argumentIndex:ofReply:
T@"NSXPCInterface",R,N
T@"NSString",&,N,V_value
initWithTimeIntervalSinceReferenceDate:
absoluteString
setUrl:
T@"NSURL",&,N
initWithUUIDString:
initWithUUID:
setUuid:
uuid
T@"NSUUID",&,N
_setObject:
unsignedLongLongValue
longLongValue
initWithDictionary:
initWithObjectValue:
setObject:
object
T@,&,N
initWithObjectValue:forKey:
_convertArray:
replaceObjectAtIndex:withObject:
setArray:
setSet:
T@"NSArray",C,N
T@"NSSet",C,N
setDictionary:
pairs
setPairs:
pairsCount
T@"NSDictionary",C,N
clearCredentialItems
addCredentialItems:
credentialItemsCount
setCredentialItemsDictionary:
credentialItemsDictionary
initWithType:destructivity:affectedContainers:
actionWithType:
destructiveActionWithType:
destructiveActionWithType:affectedContainers:
_actionForError:
_isError
isDestructive
_isDestructive
_error
TB,R,G_isError
Tq,R,N,V_type
TB,R,N,V_isDestructive
T@"NSArray",R,N,V_affectedContainers
persistent
addPair:
clearPairs
pairAtIndex:
pairType
_pairs
T@"NSMutableArray",&,N,V_pairs
setHasVisibility:
hasVisibility
hasCredentialProtectionPolicy
setHasSupportsAuthentication:
hasSupportsAuthentication
setHasSupportsMultipleAccounts:
hasSupportsMultipleAccounts
setHasObsolete:
hasObsolete
T@"NSString",&,N,V_accountTypeDescription
Ti,N,V_visibility
T@"NSString",&,N,V_credentialProtectionPolicy
TB,N,V_obsolete
Td,N,V_value
owner
credentialItemsAtIndex:
credentialItemsType
T@"NSMutableArray",&,N,V_credentialItems
initWithManagedCredentialItem:
initWithManagedCredentialItem:accountStore:
initWithAccountIdentifier:serviceName:
isExpired
setPersistent:
_persistent
expired
TB,R,N,GisExpired
TB,N,GisPersistent
T@"NSSet",R,N,V_dirtyProperties
numberWithLong:
ac_secureCodingError
ac_sanitizeObject:
ac_isUnrecoverableDatabaseError
ac_isDiskFullSQLError
ac_unrecoverableDatabaseError
TB,R,N,Gac_isUnrecoverableDatabaseError
ac_diskFullSQLError
TB,R,N,Gac_isDiskFullSQLError
initWithObjects:count:
allowedClasses
setByAddingObjectsFromArray:
_initWithEnumerable:count:
member:
objectEnumerator
anyObject
isEqualToSet:
isEqualToDictionary:
enumerateObjectsWithOptions:usingBlock:
enumerateModificationsWithOptions:usingBlock:
enumerateKeysAndObjectsWithOptions:usingBlock:
_initWithUnderlyingSet:changesDictionary:
isEqualToTrackedSet:
setWithSet:
allModifications
_underlyingSet
_changesDictionary
initWithTrackedSet:
getCharacters:range:
_emptyString
decodeIntegerForKey:
bytes
encodeInteger:forKey:
_compatibleCopy
_newZStringWithCharacters:length:
classForKeyedUnarchiver
initWithCharacters:length:
initWithUTF8String:
classForKeyedArchiver
replacementObjectForCoder:
classForCoder
_allowsDirectEncoding
characterAtIndex:
characters
_characters
_length
T^S,R,V_characters
_currentSystemVersion
isMigrationFinished
writeMigrationVersionPref
migrationFinished
TB,R,GisMigrationFinished
B24@0:8@16
#16@0:8
@16@0:8
@24@0:8:16
@32@0:8:16@24
@40@0:8:16@24@32
B16@0:8
B24@0:8#16
B24@0:8:16
Vv16@0:8
Q16@0:8
^{_NSZone=}16@0:8
B24@0:8@"Protocol"16
@"NSString"16@0:8
v24@0:8@16
v24@0:8@"ACAccount"16
v16@0:8
@32@0:8@16@24
@48@0:8@16@24@32@40
v24@0:8@?16
v24@0:8^@16
@24@0:8@16
@"NSSet"
@"NSMutableDictionary"
@"NSHashTable"
@"<NSObject>"
v32@0:8@16@24
@24@0:8^{_NSZone=}16
v24@0:8q16
v20@0:8B16
v24@0:8Q16
v24@0:8d16
q16@0:8
d16@0:8
@"ACProtobufVariableValueList"
@"NSData"
@"ACProtobufDate"
@"ACProtobufVariableValueDictionary"
@"NSString"
@"ACProtobufURL"
@"ACProtobufUUID"
{?="doubleValue"b1"integerValue"b1"unsignedIntegerValue"b1}
@28@0:8@16B24
v36@0:8@16@24B32
@36@0:8@16@24B32
i24@0:8@16
q24@0:8@16
@32@0:8@16^@24
v32@0:8@16@?24
@40@0:8@16Q24^@32
v40@0:8@16Q24@?32
v40@0:8@16@24@?32
@40@0:8@16@24^@32
v36@0:8@16B24@?28
v44@0:8@16B24@28@?36
v44@0:8@16@24B32@?36
B32@0:8@16^@24
v36@0:8B16@20@28
v48@0:8@16@24@32^@40
B32@0:8@16@24
v52@0:8@16@24@32B40@?44
B24@0:8^@16
@"NSXPCListenerEndpoint"
@"ACRemoteAccountStoreSession"
{os_unfair_lock_s="_os_unfair_lock_opaque"I}
@"ACTimedExpirer"
@"NSObject<OS_dispatch_queue>"
@24@0:8@"PBCodable"16
@24@0:8@"NSData"16
@"PBCodable"16@0:8
@"NSData"16@0:8
v24@0:8@"NSCoder"16
@24@0:8@"NSCoder"16
v28@0:8B16@20
@24@0:8^@16
v24@0:8^{__SecIdentity=}16
^{__SecIdentity=}16@0:8
@?16@0:8
@"ACAccountStore"
@"ACAccountType"
@"ACAccountCredential"
@"NSURL"
@"NSDate"
@"ACAccount"
@"NSArray"
@"ACMutableTrackedSet"
@"NSMutableSet"
i16@0:8
v20@0:8i16
B32@0:8@16@?24
v56@0:8@16@24@32@40@?48
v56@0:8@"NSURLRequest"16@"ACAccount"24@"NSNumber"32@"NSDate"40@?<v@?@"NSURLRequest"@"NSError">48
v56@0:8@"NSURLRequest"16@"ACAccount"24@"NSString"32@"NSDate"40@?<v@?@"NSURLRequest"@"NSError">48
v32@0:8@"NSString"16@?<v@?B@"NSError">24
@40@0:8@16@24@32
@"NSXPCConnection"
@"<ACDOAuthSignerProtocol>"
@"ACProtobufVariableValue"
@24@0:8@?16
@"NSDictionary"
@24@0:8Q16
@"NSMutableArray"
v28@0:8@16i24
v24@0:8@"NSString"16
v28@0:8@"ACAccount"16i24
@24@0:8@?<v@?@"NSError">16
v28@0:8@16B24
@"ACAccountStoreClientSideListener"
@"<ACRemoteAccountStoreSessionDelegate>"
@32@0:8Q16d24
Q24@0:8@16
@"NSLock"
@"NSObject<OS_dispatch_source>"
@"ACProtobufAccountType"
@"ACProtobufAccountCredential"
@"ACProtobufAccount"
{?="warmingUp"b1}
v32@0:8q16@24
v20@0:8I16
^v24@0:8@16
v32@0:8^v16@24
^{__SCPreferences=}
{?="isPersistent"b1}
v48@0:8@16@24@32@?40
v24@0:8@?<v@?@"NSArray"@"NSError">16
v32@0:8@"NSString"16@?<v@?@"ACAccount"@"NSError">24
v32@0:8@"ACAccountType"16@?<v@?@"NSArray"@"NSError">24
v40@0:8@"ACAccountType"16Q24@?<v@?@"NSArray"@"NSError">32
v32@0:8@"NSString"16@?<v@?@"NSArray"@"NSError">24
v32@0:8@"NSURL"16@?<v@?@"NSArray"@"NSError">24
v32@0:8@"NSArray"16@?<v@?@"NSArray"@"NSError">24
v40@0:8@"NSArray"16@"NSArray"24@?<v@?@"NSArray"@"NSError">32
v40@0:8@"NSSet"16@"NSDictionary"24@?<v@?@"NSArray"@"NSError">32
v40@0:8@"NSString"16@"NSString"24@?<v@?@"NSArray"@"NSError">32
v32@0:8@"NSString"16@?<v@?@"ACAccountType"@"NSError">24
v32@0:8@"NSString"16@?<v@?@"ACAccountCredential"@"NSError">24
v40@0:8@"ACAccount"16@"NSString"24@?<v@?@"ACAccountCredential"@"NSError">32
v48@0:8@"ACAccountCredential"16@"ACAccount"24@"NSString"32@?<v@?B@"NSError">40
v40@0:8@"ACAccount"16@"NSString"24@?<v@?@"ACCredentialItem"@"NSError">32
v32@0:8@"ACCredentialItem"16@?<v@?@"ACCredentialItem"@"NSError">24
v32@0:8@"ACCredentialItem"16@?<v@?@"NSURL"@"NSError">24
v32@0:8@"ACCredentialItem"16@?<v@?B@"NSError">24
v32@0:8@"NSString"16@?<v@?@"NSSet"@"NSError">24
v32@0:8@"ACAccountType"16@?<v@?@"NSSet"@"NSError">24
v24@0:8@?<v@?@"NSError">16
v32@0:8@"ACAccount"16@?<v@?@"NSDictionary"@"NSError">24
v32@0:8@"ACAccount"16@?<v@?B@"NSError">24
v40@0:8@"ACAccount"16@"NSDictionary"24@?<v@?B@"NSError">32
v32@0:8@"ACAccount"16@?<v@?@"NSURL"@"NSError">24
v44@0:8@"ACAccount"16B24@"NSDictionary"28@?<v@?@"NSURL"@"NSError">36
v32@0:8@"NSString"16@?<v@?@"NSNumber"@"NSError">24
v32@0:8@"ACAccountType"16@?<v@?@"ACAccountType"@"NSError">24
v32@0:8@"ACAccountType"16@?<v@?@"NSNumber"@"NSError">24
v40@0:8@"NSString"16@"NSDictionary"24@?<v@?@"NSNumber"@"NSError">32
v32@0:8@"ACAccountType"16@?<v@?@"NSDictionary"@"NSError">24
v48@0:8@"NSNumber"16@"NSString"24@"ACAccountType"32@?<v@?@@"NSError">40
v32@0:8@"ACAccountType"16@?<v@?@"NSError">24
v32@0:8@"ACAccountType"16@?<v@?@@"NSError">24
v40@0:8@"ACAccount"16@"NSDictionary"24@?<v@?@"ACAccount"@"NSError">32
v40@0:8@"ACAccount"16@"NSDictionary"24@?<v@?@"NSNumber"@"NSError">32
v32@0:8@"NSString"16@?<v@?@"NSString"@"NSError">24
v24@0:8@"NSURL"16
v40@0:8@"NSString"16@"NSString"24@?<v@?B@"NSError">32
v44@0:8@"NSURL"16@"ACAccount"24B32@?<v@?B@"NSError">36
v52@0:8@"ACAccount"16@"NSString"24@"NSString"32B40@?<v@?B@"NSDictionary"@"NSError">44
v32@0:8@"ACAccount"16@"NSString"24
v48@0:8@"ACAccount"16@"NSString"24@"NSDictionary"32@?<v@?B@"NSError">40
v32@0:8@"NSDictionary"16@?<v@?B@"NSError">24
v24@0:8@?<v@?B@"NSError">16
v32@0:8@"NSSet"16@?<v@?@"NSArray"@"NSError">24
v32@0:8@"NSNumber"16@?<v@?B@"NSError">24
@24@0:8q16
@32@0:8q16@24
@36@0:8q16B24@28
{?="supportsAuthentication"b1"visibility"b1"obsolete"b1"supportsMultipleAccounts"b1}
@32@0:8r^@16Q24
@32@0:8@16Q24
v32@0:8Q16@?24
@32@0:8r^S16Q24
@40@0:8r^v16Q24Q32
@24@0:8r*16
S24@0:8Q16
v40@0:8^S16{_NSRange=QQ}24
^S16@0:8
