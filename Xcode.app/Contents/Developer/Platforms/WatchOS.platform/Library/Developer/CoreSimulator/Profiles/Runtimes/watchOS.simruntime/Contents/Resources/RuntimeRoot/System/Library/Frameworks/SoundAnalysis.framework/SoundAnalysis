@(#)PROGRAM:SoundAnalysis  PROJECT:SoundAnalysis-1
ESt11logic_error
St9exception
xfuapraexoba
xfuapargxoba
MbP?NSt3__117bad_function_callE
xfualmrcxoba
xfuaxtncxoba
xfuadgisxoba
xfuaftmlxoba
xfuarfmtxoba
Mb`?A
xfuamusaxoba
xfuafidaxoba
xfuanimaxoba
xfualumaxoba
nguatpnixoba
xfuatpuoxoba
mcpl)
xfuayledxoba
xfuaniagxoba
xfuangbdxoba
xfuatsetxoba
xfuaypocxoba
xfuangcvxoba
xfuammusxoba
xmuaxximxoba
xfuanjhcxoba
xfuapshcxoba
xfuapchcxoba
xfuadaedxoba
xfuatsncxoba
ltnctcbdxoba
xfuaclrsxoba
xfuapnfnxoba
cfuaccrsxoba
@`@cfualberxoba
cfuacrsfxoba
ltncvrucxoba
p?UL
+Hub?
Y@q=
^@ffffff
?fffff6t@\
@St12length_error
St18bad_variant_access
-__pn__p&&_p||_p!__p&&_v||_v!__v==_v=!_v
St9bad_alloc
St12out_of_range
St16invalid_argument
St14overflow_error
St13runtime_error
N8DSPGraph9ExceptionE
N8minijson6detail18number_parse_errorE
N8minijson6detail14encoding_errorE
N8minijson11parse_errorE
?/';
 9j*
!H"H
VrH-
GRty
]kK"
Z?Lq
12CAXException
St8bad_cast
timeRange
decibelLevel
mood
valence
arousal
dominance
confidence
%@ Mood: %.2f Valence: %.2f Arousal: %.2f Dominance: %.2f Confidence: %.2f %@
allocator<T>::allocate(size_t n) 'n' exceeds maximum supported size
com.apple.SoundAnalysis.EARAudioProcessor
initialize
/Library/Caches/com.apple.xbs/Sources/Listen_Sim/Listen-67.2/Framework/Internal/Core/DSPGraph/DSPGraph_EARAudioProcessorBox.mm
in(0).format().mSampleRate == 16000
in(0).format().mChannelsPerFrame == 1
in(0).format().mBytesPerFrame == 2
config
inputs must be 16kHz
CoreAudioUtility/Source/CADSP/DSPGraph/DSPGraph_Box.h
Box::in inIndex out of range! box %s has %zu inputs but input %u was requested
EARAudioProcessorBox
FormatMatchingNode
/Library/Caches/com.apple.xbs/Sources/Listen_Sim/Listen-67.2/Framework/Internal/Core/ProcessingTree/SoundAnalysis_FormatMatchingNode.cpp
upstreamFormat.mBlockSize == 1
downstreamFormat.mBlockSize == 1
setUpstreamFormat
formatMatchingGraph
input
channelMapper
output
v8@?0
illegal call to unavailable init selector: %s
-[SNSystemAudioAnalyzerXPCPublisher init]
v16@?0@"NSError"8
v16@?0^{OpaqueAudioQueue=}8
Applause
Babble
Cheering
Laughter
Music
Speech
Distressed Baby
Smoke Alarm
Fire Alarm
Doorbell
Buzzer
Beep
Ding Bell
Dog Bark
Cat Meow
Door Knock
Shouting
com.apple.SoundAnalysis.System
Unknown request of type %@
processBuffer
/Library/Caches/com.apple.xbs/Sources/Listen_Sim/Listen-67.2/Framework/Internal/Core/ProcessingTree/SoundAnalysis_ProcessingTree.cpp
inputBuffer.mNumFrames == expectedNumberOfFrames
treeGraph
addProcessingContext
!findAnalyzerNodeForContext(processingContext)
setProcessingContexts
format().mBlockSize > 0
removeNodeRecursively
node
removeProcessingContext
requestProcessingNode
MultiRateGraphBox
SingleRateGraphBox
getCurrentInputSampleFromGraphBox
false
convertSampleTimeToRootSampleTime
Couldn't find GraphBox containing graph
Processing tree graph is null
.dot
buildTreeGraphRecursively
downstreamNode->upstreamNode()
formatsAreEquivalent(downstreamNode->upstreamFB(), downstreamNode->upstreamNode()->downstreamFB())
deadEnd
Box::out inIndex out of range! box %s has %zu outputs but input %u was requested
GraphBoxCommon
/Library/Caches/com.apple.xbs/Sources/Listen_Sim/Listen-67.2/Framework/Internal/Core/DSPGraph/DSPGraph_GraphBox.h
inGraph
%s %s graph must have at least one input bus.
%s %s graph must have the same sample rate for all input busses to be used in a GraphBox
%s %s graph must have the same sample rate for all output busses to be used in a GraphBox
innerGraph %p
setParameter
DSPGraph parameters must have global scope and master element.
getParameter
process
isIntegral(numPacketsToWrite)
prepareGraphIOData
mGraphIODataIn.at(0).mNumFrames == inNumFrames
isIntegral(numPacketsOut)
outNumBytes <= mOutBufferList->GetCapacityBytes()
findGraphBoxContainingBox
Tick delta too large
sampleRate
blockSize
magnitudeThreshold
-[SNDetectSignalThresholdRequestImpl resultsFromBox:renderedWithFrameCount:]
/Library/Caches/com.apple.xbs/Sources/Listen_Sim/Listen-67.2/Framework/Internal/Requests/SignalDetector/SNDetectSignalThresholdRequest.mm
allBussesSignalRanges.size() == 1
allBussesSignalRanges.at(0).size() == 1
detectorEndPosition >= detectorStartPosition
Failed to create DSPGraph
signalDetector
com.apple.SoundAnalysis
SNCorrelateAudioRequest.mm
Invalid parameter not satisfying: %@
overlapFactor >= 0.f
overlapFactor < 1.f
CrossCorrelator
Failed to create graph
Failed to set properties and parameters on graph
(            
graphName "AudioCorrelator"                        
[def procSampleRate %d]            
[def blockSize %d]            
[def numChannels %d]            
[def numBuses %d]                        
in input                        
box CrossCorrelator (aufx xcor appl) [numBuses] [numBuses]            
box dead dead [numBuses] [numBuses]                        
wire input  CrossCorrelator ([procSampleRate] [numChannels] [blockSize])            
wire CrossCorrelator dead ([procSampleRate] [numChannels] [blockSize]))
Text
CoreAudioUtility/Source/PublicUtility/CABufferList.h
CopyDataFrom
com.apple.soundanalysisd
-[SNAnalysisServer init]
com.apple.SoundAnalysis.client
-[SNAnalysisClient init]
@"NSXPCConnection"24@?0@?<v@?>8@"NSObject<OS_dispatch_queue>"16
LogMelSpectrogram
logMelContext
melTransform
com.apple.SNFileSharing
FileSharingVersion
FileTransferRequest
FileTransferComplete
FileTransferDeleteFile
targetPublicKey
targetID
basePath
filePaths
enable_second_pass_recording_in_daemon
daemon_recording_path
recording_directory_maximum_size_bytes
recording_time_to_live_seconds
delete_recordings_without_detection
enable_file_server
file_server_root_directory
built_in_microphone_analysis_channel_number
/tmp/AudioCaptures/SoundAnalysis
v32@?0@"NSDictionary"8@"NSDictionary"16@"NSError"24
-[SNResourceCoordinatorXPCSubscriber init]
identifier
detected
%@: %@ detected with confidence %f at %@
%@ detected: %@
Type
DSPGraph
AUStrip
PropertyStrip
Path
IncludePaths
Substitutions
Value
-[SNResultsXPCSubscriber init]
failed to initialize instance of class %@
com.apple.SoundAnalysis.remoteanalyzer
Server connection lost
-[SNSystemAudioAnalyzerRemote init]
@"<SNSystemAudioAnalyzerProtocol>"24@?0@?<v@?>8@"NSObject<OS_dispatch_queue>"16
analyzerProcessingGraph should be non-null
ProcessingContext
/Library/Caches/com.apple.xbs/Sources/Listen_Sim/Listen-67.2/Framework/Internal/Core/ProcessingTree/SoundAnalysis_ProcessingContext.cpp
requestProcessingGraph->configured()
sharedProcessingGraph->configured()
config-model-epoch-mvn-60.json
floatToFixedConverter
speechEmotionAnalyzer
%f, %d
overlapFactor
Invalid model, userSuppliedInputFeatureNames.count = %lu
Invalid model, input feature must be a multi-array
Invalid model, input feature must be one dimensional
Invalid model, classification models must have 'predictedProbabilitesName' and 'predictedFeaturesKey' properties
-init is not a valid initializer for the class SNClassifySoundRequest
+new is not a valid class method for the class SNClassifySoundRequest
q24@?0@8@16
SNClassifySoundRequest.mm
cannot copy MLModel
cannot encode MLModel
Classifier
context
createGraphWithModel
/Library/Caches/com.apple.xbs/Sources/Listen_Sim/Listen-67.2/Framework/Internal/Requests/ClassifySound/SNClassifySoundRequest.mm
overlapFactor >= 0.0
overlapFactor < 1.0
Couldn't open audio file %@
com.apple.SoundAnalysis.FileAnalyzer
-[SNAudioFileAnalyzer analyze]
/Library/Caches/com.apple.xbs/Sources/Listen_Sim/Listen-67.2/Framework/Internal/Core/SNAudioFileAnalyzer.mm
self->_audioFile.length > self->_audioFile.framePosition
Couldn't read audio into buffer
requestType
AUNeuralNetVAD.dspg
AUNeuralNetVAD_SiriEndpointer.propstrip
AUNeuralNetVAD_Siri.austrip
NNVAD
-[SNAnalyzerHost adaptToSystemConfiguration:error:]
/Library/Caches/com.apple.xbs/Sources/Listen_Sim/Listen-67.2/Framework/Internal/Core/SNAnalyzerHost.mm
resultsBox
+[SNAnalyzerHost convertTimeRange:fromBox:usingConverter:]
clientSampleTimeEnd >= clientSampleTimeStart
Do not call %@
-[SNDSPGraphBox init]
SNDSPGraphBox.mm
graph
com.apple.soundanalysis
companion service connection interrupted
v16@?0@"RPCompanionLinkDevice"8
version
v20@?0@"RPCompanionLinkDevice"8I16
com.apple.SoundAnalysis.CanHostDaemon
@"MLModel"8@?0
SNForwardPassAudioStreamAnalyzer.mm
Audio format must be PCM
v16@?0@"<SNResult>"8
Error creating analyzer
Error configuring analyzer
Error updating tree format
Audio format changed mid-stream from %@ to %@. Please configure a new analyzer if the stream format changes.
Error configuring analysis tree
Unexpected error during analysis
yyyy-MM-dd-HHmmss
%@_%@
yyyy-MM-dd HH:mm:ss
levelMeasurer
dead
v24@?0@"CUFileResponse"8@"NSError"16
+[SNUtils copyAudioBufferList:to:frameCount:bytesPerFrame:]
/Library/Caches/com.apple.xbs/Sources/Listen_Sim/Listen-67.2/Framework/Internal/Core/SNUtils.mm
sourceBufferList->mNumberBuffers > 0
sourceBufferList->mNumberBuffers == destinationBufferList->mNumberBuffers
sourceBufferList->mBuffers[bufferIdx].mNumberChannels > 0
frameCount*bytesPerFrame <= sourceBufferList->mBuffers[bufferIdx].mDataByteSize
frameCount*bytesPerFrame <= destinationBufferList->mBuffers[bufferIdx].mDataByteSize
MultiArrayInput
MultiArrayOutput
MLModelCreatorDefinedKey
feedback_connections
soundanalysisd
InternalBuild
SELF endswith[c] '.wav'
q24@?0@"NSString"8@"NSString"16
unable to read entitlement
failed to acquire task
results
errors
completeCount
copyRecentFramesOfAudioRingBufferToAVAudioBuffer
sourceBufferStartTime <= sourceBufferEndTime
copyRecentFrames
unownedViewOfRecentFrames
numberOfRecentFrames <= sourceBuffer.frameLength
VerifyNotTrashingOwnedBuffer
-[SNResourceCoordinatorXPCPublisher init]
v16@?0@"<SNSystemAudioAnalyzerXPCProtocol>"8
-[SNDSPGraph init]
SNDSPGraph.mm
@"SNDSPGraphBox"8@?0
@"NSMutableSet"8@?0
@"NSString"8@?0
addDownstreamNodes
/Library/Caches/com.apple.xbs/Sources/Listen_Sim/Listen-67.2/Framework/Internal/Core/ProcessingTree/SoundAnalysis_ProcessingNode.cpp
!elementFoundInList(node, mDownstreamNodes)
CAStreamBasicDescription::IsEquivalent(node->upstreamFB().mFormat, downstreamFB().mFormat)
removeDownstreamNodes
elementFoundInList(node, mDownstreamNodes)
processingBox
mProcessingBox
Model must have MLMultiArray features
Error allocating MLMultiArray
Unable to compile model at @% with error %@
MLModel successfully loaded!
No CoreML model set: %@
MLModel must have at least one feature in and one feature out
MLModel must have only one user defined input. Has %@
Error creating input provider
Entering single sample mode, setting delay line to %d samples
/Library/Caches/com.apple.xbs/Sources/Listen_Sim/Listen-67.2/Framework/Internal/Core/DSPGraph/DSPGraph_CoreMLBox.mm
only supports 1 bus in 1 bus out
input must be single channel
output must be single channel
input and output sample rates must match
No CoreML model given. Bypassing.
No MLModel, bypassing this process call
inABL
outABL
inABL->mBuffers[0].mDataByteSize == mInputNumBytes
input data must be Float32
Error: Model input size (
 bytes) doesn't match audio input size (
 bytes)
prediction failed
MLModel output must have only one feature (MLMultiArray)
MLModel output must be an MLMultiArray
Error: Model output size (
unsupported CoreML data type
Audio is already running. Model will be loaded next time audio is restarted
Set CoreMLModel URL at path %@
Error creating URL from path: %@
CoreMLBox
v32@?0@"NSDictionary"8@"NSDictionary"16@?<v@?@"NSDictionary"@"NSDictionary"@"NSError">24
v24@?0@"NSArray"8@"NSError"16
-[SNCopyFilesRequest launchTaskWithQueue:completionHandler:resultsHandler:]_block_invoke
/Library/Caches/com.apple.xbs/Sources/Listen_Sim/Listen-67.2/Framework/Internal/FileServer/Copy/SNCopyFilesRequest.m
error == nil
v24@?0@"RPFileTransferItem"8@?<v@?@"NSError">16
com.apple.SoundAnalysis.AnalysisInProgress
Unexpected MultiArray size %ld
Unexpected error processing model
Must only have one input audio feature
SNVGGishFrontEndProcessingCustomModel.mm
Model needs an input constraint
Must allow %@ shaped vector as input
Must only have one output multiarray feature
Model needs an output constraint
Must allow %@ shaped vector as output
_SNVGGishFrontEndProcessingCustomModel
adjustSingleChannelIODataAhead
/Library/Caches/com.apple.xbs/Sources/Listen_Sim/Listen-67.2/Framework/Internal/CustomModels/SNVGGishFrontEndProcessingCustomModel.mm
data.mBufferList->mBuffers[0].mDataByteSize >= framesToAdjust * sizeof(float)
v24@?0^{Graph=^^?{unordered_set<std::__1::unique_ptr<DSPGraph::Box, std::__1::default_delete<DSPGraph::Box>>, std::__1::hash<std::__1::unique_ptr<DSPGraph::Box, std::__1::default_delete<DSPGraph::Box>>>, std::__1::equal_to<std::__1::unique_ptr<DSPGraph::Box, std::__1::default_delete<DSPGraph::Box>>>, std::__1::allocator<std::__1::unique_ptr<DSPGraph::Box, std::__1::default_delete<DSPGraph::Box>>>>={__hash_table<std::__1::unique_ptr<DSPGraph::Box, std::__1::default_delete<DSPGraph::Box>>, std::__1::hash<std::__1::unique_ptr<DSPGraph::Box, std::__1::default_delete<DSPGraph::Box>>>, std::__1::equal_to<std::__1::unique_ptr<DSPGraph::Box, std::__1::default_delete<DSPGraph::Box>>>, std::__1::allocator<std::__1::unique_ptr<DSPGraph::Box, std::__1::default_delete<DSPGraph::Box>>>>={unique_ptr<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::unique_ptr<DSPGraph::Box, std::__1::default_delete<DSPGraph::Box>>, void *> *> *[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::unique_ptr<DSPGraph::Box, std::__1::default_delete<DSPGraph::Box>>, void *> *> *>>>={__compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::unique_ptr<DSPGraph::Box, std::__1::default_delete<DSPGraph::Box>>, void *> *> **, std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::unique_ptr<DSPGraph::Box, std::__1::default_delete<DSPGraph::Box>>, void *> *> *>>>=^^{__hash_node_base<std::__1::__hash_node<std::__1::unique_ptr<DSPGraph::Box, std::__1::default_delete<DSPGraph::Box>>, void *> *>}{__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::unique_ptr<DSPGraph::Box, std::__1::default_delete<DSPGraph::Box>>, void *> *> *>>={__compressed_pair<unsigned long, std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::unique_ptr<DSPGraph::Box, std::__1::default_delete<DSPGraph::Box>>, void *> *> *>>=Q}}}}{__compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::unique_ptr<DSPGraph::Box, std::__1::default_delete<DSPGraph::Box>>, void *> *>, std::__1::allocator<std::__1::__hash_node<std::__1::unique_ptr<DSPGraph::Box, std::__1::default_delete<DSPGraph::Box>>, void *>>>={__hash_node_base<std::__1::__hash_node<std::__1::unique_ptr<DSPGraph::Box, std::__1::default_delete<DSPGraph::Box>>, void *> *>=^{__hash_node_base<std::__1::__hash_node<std::__1::unique_ptr<DSPGraph::Box, std::__1::default_delete<DSPGraph::Box>>, void *> *>}}}{__compressed_pair<unsigned long, std::__1::hash<std::__1::unique_ptr<DSPGraph::Box, std::__1::default_delete<DSPGraph::Box>>>>=Q}{__compressed_pair<float, std::__1::equal_to<std::__1::unique_ptr<DSPGraph::Box, std::__1::default_delete<DSPGraph::Box>>>>=f}}}{unordered_set<DSPGraph::Wire *, std::__1::hash<DSPGraph::Wire *>, std::__1::equal_to<DSPGraph::Wire *>, std::__1::allocator<DSPGraph::Wire *>>={__hash_table<DSPGraph::Wire *, std::__1::hash<DSPGraph::Wire *>, std::__1::equal_to<DSPGraph::Wire *>, std::__1::allocator<DSPGraph::Wire *>>={unique_ptr<std::__1::__hash_node_base<std::__1::__hash_node<DSPGraph::Wire *, void *> *> *[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<DSPGraph::Wire *, void *> *> *>>>={__compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<DSPGraph::Wire *, void *> *> **, std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<DSPGraph::Wire *, void *> *> *>>>=^^{__hash_node_base<std::__1::__hash_node<DSPGraph::Wire *, void *> *>}{__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<DSPGraph::Wire *, void *> *> *>>={__compressed_pair<unsigned long, std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<DSPGraph::Wire *, void *> *> *>>=Q}}}}{__compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<DSPGraph::Wire *, void *> *>, std::__1::allocator<std::__1::__hash_node<DSPGraph::Wire *, void *>>>={__hash_node_base<std::__1::__hash_node<DSPGraph::Wire *, void *> *>=^{__hash_node_base<std::__1::__hash_node<DSPGraph::Wire *, void *> *>}}}{__compressed_pair<unsigned long, std::__1::hash<DSPGraph::Wire *>>=Q}{__compressed_pair<float, std::__1::equal_to<DSPGraph::Wire *>>=f}}}{unordered_set<DSPGraph::Analyzer *, std::__1::hash<DSPGraph::Analyzer *>, std::__1::equal_to<DSPGraph::Analyzer *>, std::__1::allocator<DSPGraph::Analyzer *>>={__hash_table<DSPGraph::Analyzer *, std::__1::hash<DSPGraph::Analyzer *>, std::__1::equal_to<DSPGraph::Analyzer *>, std::__1::allocator<DSPGraph::Analyzer *>>={unique_ptr<std::__1::__hash_node_base<std::__1::__hash_node<DSPGraph::Analyzer *, void *> *> *[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<DSPGraph::Analyzer *, void *> *> *>>>={__compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<DSPGraph::Analyzer *, void *> *> **, std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<DSPGraph::Analyzer *, void *> *> *>>>=^^{__hash_node_base<std::__1::__hash_node<DSPGraph::Analyzer *, void *> *>}{__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<DSPGraph::Analyzer *, void *> *> *>>={__compressed_pair<unsigned long, std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<DSPGraph::Analyzer *, void *> *> *>>=Q}}}}{__compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<DSPGraph::Analyzer *, void *> *>, std::__1::allocator<std::__1::__hash_node<DSPGraph::Analyzer *, void *>>>={__hash_node_base<std::__1::__hash_node<DSPGraph::Analyzer *, void *> *>=^{__hash_node_base<std::__1::__hash_node<DSPGraph::Analyzer *, void *> *>}}}{__compressed_pair<unsigned long, std::__1::hash<DSPGraph::Analyzer *>>=Q}{__compressed_pair<float, std::__1::equal_to<DSPGraph::Analyzer *>>=f}}}{mutex={_opaque_pthread_mutex_t=q[56c]}}{vector<std::__1::unique_ptr<DSPGraph::InternalBuffer, std::__1::default_delete<DSPGraph::InternalBuffer>>, std::__1::allocator<std::__1::unique_ptr<DSPGraph::InternalBuffer, std::__1::default_delete<DSPGraph::InternalBuffer>>>>=^{unique_ptr<DSPGraph::InternalBuffer, std::__1::default_delete<DSPGraph::InternalBuffer>>}^{unique_ptr<DSPGraph::InternalBuffer, std::__1::default_delete<DSPGraph::InternalBuffer>>}{__compressed_pair<std::__1::unique_ptr<DSPGraph::InternalBuffer, std::__1::default_delete<DSPGraph::InternalBuffer>> *, std::__1::allocator<std::__1::unique_ptr<DSPGraph::InternalBuffer, std::__1::default_delete<DSPGraph::InternalBuffer>>>>=^{unique_ptr<DSPGraph::InternalBuffer, std::__1::default_delete<DSPGraph::InternalBuffer>>}}}{unordered_set<std::__1::unique_ptr<DSPGraph::IsoGroup, std::__1::default_delete<DSPGraph::IsoGroup>>, std::__1::hash<std::__1::unique_ptr<DSPGraph::IsoGroup, std::__1::default_delete<DSPGraph::IsoGroup>>>, std::__1::equal_to<std::__1::unique_ptr<DSPGraph::IsoGroup, std::__1::default_delete<DSPGraph::IsoGroup>>>, std::__1::allocator<std::__1::unique_ptr<DSPGraph::IsoGroup, std::__1::default_delete<DSPGraph::IsoGroup>>>>={__hash_table<std::__1::unique_ptr<DSPGraph::IsoGroup, std::__1::default_delete<DSPGraph::IsoGroup>>, std::__1::hash<std::__1::unique_ptr<DSPGraph::IsoGroup, std::__1::default_delete<DSPGraph::IsoGroup>>>, std::__1::equal_to<std::__1::unique_ptr<DSPGraph::IsoGroup, std::__1::default_delete<DSPGraph::IsoGroup>>>, std::__1::allocator<std::__1::unique_ptr<DSPGraph::IsoGroup, std::__1::default_delete<DSPGraph::IsoGroup>>>>={unique_ptr<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::unique_ptr<DSPGraph::IsoGroup, std::__1::default_delete<DSPGraph::IsoGroup>>, void *> *> *[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::unique_ptr<DSPGraph::IsoGroup, std::__1::default_delete<DSPGraph::IsoGroup>>, void *> *> *>>>={__compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::unique_ptr<DSPGraph::IsoGroup, std::__1::default_delete<DSPGraph::IsoGroup>>, void *> *> **, std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::unique_ptr<DSPGraph::IsoGroup, std::__1::default_delete<DSPGraph::IsoGroup>>, void *> *> *>>>=^^{__hash_node_base<std::__1::__hash_node<std::__1::unique_ptr<DSPGraph::IsoGroup, std::__1::default_delete<DSPGraph::IsoGroup>>, void *> *>}{__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::unique_ptr<DSPGraph::IsoGroup, std::__1::default_delete<DSPGraph::IsoGroup>>, void *> *> *>>={__compressed_pair<unsigned long, std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::unique_ptr<DSPGraph::IsoGroup, std::__1::default_delete<DSPGraph::IsoGroup>>, void *> *> *>>=Q}}}}{__compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::unique_ptr<DSPGraph::IsoGroup, std::__1::default_delete<DSPGraph::IsoGroup>>, void *> *>, std::__1::allocator<std::__1::__hash_node<std::__1::unique_ptr<DSPGraph::IsoGroup, std::__1::default_delete<DSPGraph::IsoGroup>>, void *>>>={__hash_node_base<std::__1::__hash_node<std::__1::unique_ptr<DSPGraph::IsoGroup, std::__1::default_delete<DSPGraph::IsoGroup>>, void *> *>=^{__hash_node_base<std::__1::__hash_node<std::__1::unique_ptr<DSPGraph::IsoGroup, std::__1::default_delete<DSPGraph::IsoGroup>>, void *> *>}}}{__compressed_pair<unsigned long, std::__1::hash<std::__1::unique_ptr<DSPGraph::IsoGroup, std::__1::default_delete<DSPGraph::IsoGroup>>>>=Q}{__compressed_pair<float, std::__1::equal_to<std::__1::unique_ptr<DSPGraph::IsoGroup, std::__1::default_delete<DSPGraph::IsoGroup>>>>=f}}}{vector<DSPGraph::IsoGroup *, std::__1::allocator<DSPGraph::IsoGroup *>>=^^{IsoGroup}^^{IsoGroup}{__compressed_pair<DSPGraph::IsoGroup **, std::__1::allocator<DSPGraph::IsoGroup *>>=^^{IsoGroup}}}{vector<DSPGraph::GraphInput *, std::__1::allocator<DSPGraph::GraphInput *>>=^^{GraphInput}^^{GraphInput}{__compressed_pair<DSPGraph::GraphInput **, std::__1::allocator<DSPGraph::GraphInput *>>=^^{GraphInput}}}{vector<DSPGraph::GraphOutput *, std::__1::allocator<DSPGraph::GraphOutput *>>=^^{GraphOutput}^^{GraphOutput}{__compressed_pair<DSPGraph::GraphOutput **, std::__1::allocator<DSPGraph::GraphOutput *>>=^^{GraphOutput}}}{unordered_set<DSPGraph::Box *, std::__1::hash<DSPGraph::Box *>, std::__1::equal_to<DSPGraph::Box *>, std::__1::allocator<DSPGraph::Box *>>={__hash_table<DSPGraph::Box *, std::__1::hash<DSPGraph::Box *>, std::__1::equal_to<DSPGraph::Box *>, std::__1::allocator<DSPGraph::Box *>>={unique_ptr<std::__1::__hash_node_base<std::__1::__hash_node<DSPGraph::Box *, void *> *> *[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<DSPGraph::Box *, void *> *> *>>>={__compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<DSPGraph::Box *, void *> *> **, std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<DSPGraph::Box *, void *> *> *>>>=^^{__hash_node_base<std::__1::__hash_node<DSPGraph::Box *, void *> *>}{__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<DSPGraph::Box *, void *> *> *>>={__compressed_pair<unsigned long, std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<DSPGraph::Box *, void *> *> *>>=Q}}}}{__compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<DSPGraph::Box *, void *> *>, std::__1::allocator<std::__1::__hash_node<DSPGraph::Box *, void *>>>={__hash_node_base<std::__1::__hash_node<DSPGraph::Box *, void *> *>=^{__hash_node_base<std::__1::__hash_node<DSPGraph::Box *, void *> *>}}}{__compressed_pair<unsigned long, std::__1::hash<DSPGraph::Box *>>=Q}{__compressed_pair<float, std::__1::equal_to<DSPGraph::Box *>>=f}}}{unordered_set<DSPGraph::FCBox *, std::__1::hash<DSPGraph::FCBox *>, std::__1::equal_to<DSPGraph::FCBox *>, std::__1::allocator<DSPGraph::FCBox *>>={__hash_table<DSPGraph::FCBox *, std::__1::hash<DSPGraph::FCBox *>, std::__1::equal_to<DSPGraph::FCBox *>, std::__1::allocator<DSPGraph::FCBox *>>={unique_ptr<std::__1::__hash_node_base<std::__1::__hash_node<DSPGraph::FCBox *, void *> *> *[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<DSPGraph::FCBox *, void *> *> *>>>={__compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<DSPGraph::FCBox *, void *> *> **, std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<DSPGraph::FCBox *, void *> *> *>>>=^^{__hash_node_base<std::__1::__hash_node<DSPGraph::FCBox *, void *> *>}{__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<DSPGraph::FCBox *, void *> *> *>>={__compressed_pair<unsigned long, std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<DSPGraph::FCBox *, void *> *> *>>=Q}}}}{__compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<DSPGraph::FCBox *, void *> *>, std::__1::allocator<std::__1::__hash_node<DSPGraph::FCBox *, void *>>>={__hash_node_base<std::__1::__hash_node<DSPGraph::FCBox *, void *> *>=^{__hash_node_base<std::__1::__hash_node<DSPGraph::FCBox *, void *> *>}}}{__compressed_pair<unsigned long, std::__1::hash<DSPGraph::FCBox *>>=Q}{__compressed_pair<float, std::__1::equal_to<DSPGraph::FCBox *>>=f}}}{basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>={__compressed_pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>::__rep, std::__1::allocator<char>>={__rep=(?={__long=QQ*}{__short=(?=Cc)[23c]}{__raw=[3Q]})}}}{basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>={__compressed_pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>::__rep, std::__1::allocator<char>>={__rep=(?={__long=QQ*}{__short=(?=Cc)[23c]}{__raw=[3Q]})}}}Q{vector<DSPGraph::Graph::ParameterConnection, std::__1::allocator<DSPGraph::Graph::ParameterConnection>>=^{ParameterConnection}^{ParameterConnection}{__compressed_pair<DSPGraph::Graph::ParameterConnection *, std::__1::allocator<DSPGraph::Graph::ParameterConnection>>=^{ParameterConnection}}}{vector<DSPGraph::Graph::PropertyConnection, std::__1::allocator<DSPGraph::Graph::PropertyConnection>>=^{PropertyConnection}^{PropertyConnection}{__compressed_pair<DSPGraph::Graph::PropertyConnection *, std::__1::allocator<DSPGraph::Graph::PropertyConnection>>=^{PropertyConnection}}}{unordered_map<unsigned int, DSPGraph::Graph::GraphParameter, std::__1::hash<unsigned int>, std::__1::equal_to<unsigned int>, std::__1::allocator<std::__1::pair<const unsigned int, DSPGraph::Graph::GraphParameter>>>={__hash_table<std::__1::__hash_value_type<unsigned int, DSPGraph::Graph::GraphParameter>, std::__1::__unordered_map_hasher<unsigned int, std::__1::__hash_value_type<unsigned int, DSPGraph::Graph::GraphParameter>, std::__1::hash<unsigned int>, true>, std::__1::__unordered_map_equal<unsigned int, std::__1::__hash_value_type<unsigned int, DSPGraph::Graph::GraphParameter>, std::__1::equal_to<unsigned int>, true>, std::__1::allocator<std::__1::__hash_value_type<unsigned int, DSPGraph::Graph::GraphParameter>>>={unique_ptr<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned int, DSPGraph::Graph::GraphParameter>, void *> *> *[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned int, DSPGraph::Graph::GraphParameter>, void *> *> *>>>={__compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned int, DSPGraph::Graph::GraphParameter>, void *> *> **, std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned int, DSPGraph::Graph::GraphParameter>, void *> *> *>>>=^^{__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned int, DSPGraph::Graph::GraphParameter>, void *> *>}{__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned int, DSPGraph::Graph::GraphParameter>, void *> *> *>>={__compressed_pair<unsigned long, std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned int, DSPGraph::Graph::GraphParameter>, void *> *> *>>=Q}}}}{__compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned int, DSPGraph::Graph::GraphParameter>, void *> *>, std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<unsigned int, DSPGraph::Graph::GraphParameter>, void *>>>={__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned int, DSPGraph::Graph::GraphParameter>, void *> *>=^{__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned int, DSPGraph::Graph::GraphParameter>, void *> *>}}}{__compressed_pair<unsigned long, std::__1::__unordered_map_hasher<unsigned int, std::__1::__hash_value_type<unsigned int, DSPGraph::Graph::GraphParameter>, std::__1::hash<unsigned int>, true>>=Q}{__compressed_pair<float, std::__1::__unordered_map_equal<unsigned int, std::__1::__hash_value_type<unsigned int, DSPGraph::Graph::GraphParameter>, std::__1::equal_to<unsigned int>, true>>=f}}}{unordered_map<unsigned int, DSPGraph::Graph::GraphProperty, std::__1::hash<unsigned int>, std::__1::equal_to<unsigned int>, std::__1::allocator<std::__1::pair<const unsigned int, DSPGraph::Graph::GraphProperty>>>={__hash_table<std::__1::__hash_value_type<unsigned int, DSPGraph::Graph::GraphProperty>, std::__1::__unordered_map_hasher<unsigned int, std::__1::__hash_value_type<unsigned int, DSPGraph::Graph::GraphProperty>, std::__1::hash<unsigned int>, true>, std::__1::__unordered_map_equal<unsigned int, std::__1::__hash_value_type<unsigned int, DSPGraph::Graph::GraphProperty>, std::__1::equal_to<unsigned int>, true>, std::__1::allocator<std::__1::__hash_value_type<unsigned int, DSPGraph::Graph::GraphProperty>>>={unique_ptr<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned int, DSPGraph::Graph::GraphProperty>, void *> *> *[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned int, DSPGraph::Graph::GraphProperty>, void *> *> *>>>={__compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned int, DSPGraph::Graph::GraphProperty>, void *> *> **, std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned int, DSPGraph::Graph::GraphProperty>, void *> *> *>>>=^^{__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned int, DSPGraph::Graph::GraphProperty>, void *> *>}{__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned int, DSPGraph::Graph::GraphProperty>, void *> *> *>>={__compressed_pair<unsigned long, std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned int, DSPGraph::Graph::GraphProperty>, void *> *> *>>=Q}}}}{__compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned int, DSPGraph::Graph::GraphProperty>, void *> *>, std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<unsigned int, DSPGraph::Graph::GraphProperty>, void *>>>={__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned int, DSPGraph::Graph::GraphProperty>, void *> *>=^{__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned int, DSPGraph::Graph::GraphProperty>, void *> *>}}}{__compressed_pair<unsigned long, std::__1::__unordered_map_hasher<unsigned int, std::__1::__hash_value_type<unsigned int, DSPGraph::Graph::GraphProperty>, std::__1::hash<unsigned int>, true>>=Q}{__compressed_pair<float, std::__1::__unordered_map_equal<unsigned int, std::__1::__hash_value_type<unsigned int, DSPGraph::Graph::GraphProperty>, std::__1::equal_to<unsigned int>, true>>=f}}}{unordered_map<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>, DSPGraph::FormatAndBlockSize, std::__1::hash<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>>, std::__1::equal_to<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>>, std::__1::allocator<std::__1::pair<const std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>, DSPGraph::FormatAndBlockSize>>>={__hash_table<std::__1::__hash_value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>, DSPGraph::FormatAndBlockSize>, std::__1::__unordered_map_hasher<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>, std::__1::__hash_value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>, DSPGraph::FormatAndBlockSize>, std::__1::hash<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>>, true>, std::__1::__unordered_map_equal<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>, std::__1::__hash_value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>, DSPGraph::FormatAndBlockSize>, std::__1::equal_to<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>>, true>, std::__1::allocator<std::__1::__hash_value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>, DSPGraph::FormatAndBlockSize>>>={unique_ptr<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>, DSPGraph::FormatAndBlockSize>, void *> *> *[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>, DSPGraph::FormatAndBlockSize>, void *> *> *>>>={__compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>, DSPGraph::FormatAndBlockSize>, void *> *> **, std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>, DSPGraph::FormatAndBlockSize>, void *> *> *>>>=^^{__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>, DSPGraph::FormatAndBlockSize>, void *> *>}{__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>, DSPGraph::FormatAndBlockSize>, void *> *> *>>={__compressed_pair<unsigned long, std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>, DSPGraph::FormatAndBlockSize>, void *> *> *>>=Q}}}}{__compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>, DSPGraph::FormatAndBlockSize>, void *> *>, std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>, DSPGraph::FormatAndBlockSize>, void *>>>={__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>, DSPGraph::FormatAndBlockSize>, void *> *>=^{__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>, DSPGraph::FormatAndBlockSize>, void *> *>}}}{__compressed_pair<unsigned long, std::__1::__unordered_map_hasher<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>, std::__1::__hash_value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>, DSPGraph::FormatAndBlockSize>, std::__1::hash<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>>, true>>=Q}{__compressed_pair<float, std::__1::__unordered_map_equal<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>, std::__1::__hash_value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>, DSPGraph::FormatAndBlockSize>, std::__1::equal_to<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>>, true>>=f}}}{unordered_map<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>, DSPGraph::Jack, std::__1::hash<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>>, std::__1::equal_to<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>>, std::__1::allocator<std::__1::pair<const std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>, DSPGraph::Jack>>>={__hash_table<std::__1::__hash_value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>, DSPGraph::Jack>, std::__1::__unordered_map_hasher<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>, std::__1::__hash_value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>, DSPGraph::Jack>, std::__1::hash<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>>, true>, std::__1::__unordered_map_equal<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>, std::__1::__hash_value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>, DSPGraph::Jack>, std::__1::equal_to<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>>, true>, std::__1::allocator<std::__1::__hash_value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>, DSPGraph::Jack>>>={unique_ptr<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>, DSPGraph::Jack>, void *> *> *[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>, DSPGraph::Jack>, void *> *> *>>>={__compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>, DSPGraph::Jack>, void *> *> **, std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>, DSPGraph::Jack>, void *> *> *>>>=^^{__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>, DSPGraph::Jack>, void *> *>}{__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>, DSPGraph::Jack>, void *> *> *>>={__compressed_pair<unsigned long, std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>, DSPGraph::Jack>, void *> *> *>>=Q}}}}{__compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>, DSPGraph::Jack>, void *> *>, std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>, DSPGraph::Jack>, void *>>>={__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>, DSPGraph::Jack>, void *> *>=^{__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>, DSPGraph::Jack>, void *> *>}}}{__compressed_pair<unsigned long, std::__1::__unordered_map_hasher<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>, std::__1::__hash_value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>, DSPGraph::Jack>, std::__1::hash<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>>, true>>=Q}{__compressed_pair<float, std::__1::__unordered_map_equal<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>, std::__1::__hash_value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>, DSPGraph::Jack>, std::__1::equal_to<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>>, true>>=f}}}IIQQQQQQQdBBBBBBBBq^{VPTimeFreqConverterSetup}{unordered_map<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>, DSPGraph::Box *, std::__1::hash<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>>, std::__1::equal_to<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>>, std::__1::allocator<std::__1::pair<const std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>, DSPGraph::Box *>>>={__hash_table<std::__1::__hash_value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>, DSPGraph::Box *>, std::__1::__unordered_map_hasher<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>, std::__1::__hash_value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>, DSPGraph::Box *>, std::__1::hash<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>>, true>, std::__1::__unordered_map_equal<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>, std::__1::__hash_value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>, DSPGraph::Box *>, std::__1::equal_to<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>>, true>, std::__1::allocator<std::__1::__hash_value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>, DSPGraph::Box *>>>={unique_ptr<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>, DSPGraph::Box *>, void *> *> *[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>, DSPGraph::Box *>, void *> *> *>>>={__compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>, DSPGraph::Box *>, void *> *> **, std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>, DSPGraph::Box *>, void *> *> *>>>=^^{__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>, DSPGraph::Box *>, void *> *>}{__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>, DSPGraph::Box *>, void *> *> *>>={__compressed_pair<unsigned long, std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>, DSPGraph::Box *>, void *> *> *>>=Q}}}}{__compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>, DSPGraph::Box *>, void *> *>, std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>, DSPGraph::Box *>, void *>>>={__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>, DSPGraph::Box *>, void *> *>=^{__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>, DSPGraph::Box *>, void *> *>}}}{__compressed_pair<unsigned long, std::__1::__unordered_map_hasher<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>, std::__1::__hash_value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>, DSPGraph::Box *>, std::__1::hash<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>>, true>>=Q}{__compressed_pair<float, std::__1::__unordered_map_equal<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>, std::__1::__hash_value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>, DSPGraph::Box *>, std::__1::equal_to<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>>, true>>=f}}}{unordered_map<long long, DSPGraph::Box *, std::__1::hash<long long>, std::__1::equal_to<long long>, std::__1::allocator<std::__1::pair<const long long, DSPGraph::Box *>>>={__hash_table<std::__1::__hash_value_type<long long, DSPGraph::Box *>, std::__1::__unordered_map_hasher<long long, std::__1::__hash_value_type<long long, DSPGraph::Box *>, std::__1::hash<long long>, true>, std::__1::__unordered_map_equal<long long, std::__1::__hash_value_type<long long, DSPGraph::Box *>, std::__1::equal_to<long long>, true>, std::__1::allocator<std::__1::__hash_value_type<long long, DSPGraph::Box *>>>={unique_ptr<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<long long, DSPGraph::Box *>, void *> *> *[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<long long, DSPGraph::Box *>, void *> *> *>>>={__compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<long long, DSPGraph::Box *>, void *> *> **, std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<long long, DSPGraph::Box *>, void *> *> *>>>=^^{__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<long long, DSPGraph::Box *>, void *> *>}{__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<long long, DSPGraph::Box *>, void *> *> *>>={__compressed_pair<unsigned long, std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<long long, DSPGraph::Box *>, void *> *> *>>=Q}}}}{__compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<long long, DSPGraph::Box *>, void *> *>, std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<long long, DSPGraph::Box *>, void *>>>={__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<long long, DSPGraph::Box *>, void *> *>=^{__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<long long, DSPGraph::Box *>, void *> *>}}}{__compressed_pair<unsigned long, std::__1::__unordered_map_hasher<long long, std::__1::__hash_value_type<long long, DSPGraph::Box *>, std::__1::hash<long long>, true>>=Q}{__compressed_pair<float, std::__1::__unordered_map_equal<long long, std::__1::__hash_value_type<long long, DSPGraph::Box *>, std::__1::equal_to<long long>, true>>=f}}}{unordered_map<long long, DSPGraph::Analyzer *, std::__1::hash<long long>, std::__1::equal_to<long long>, std::__1::allocator<std::__1::pair<const long long, DSPGraph::Analyzer *>>>={__hash_table<std::__1::__hash_value_type<long long, DSPGraph::Analyzer *>, std::__1::__unordered_map_hasher<long long, std::__1::__hash_value_type<long long, DSPGraph::Analyzer *>, std::__1::hash<long long>, true>, std::__1::__unordered_map_equal<long long, std::__1::__hash_value_type<long long, DSPGraph::Analyzer *>, std::__1::equal_to<long long>, true>, std::__1::allocator<std::__1::__hash_value_type<long long, DSPGraph::Analyzer *>>>={unique_ptr<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<long long, DSPGraph::Analyzer *>, void *> *> *[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<long long, DSPGraph::Analyzer *>, void *> *> *>>>={__compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<long long, DSPGraph::Analyzer *>, void *> *> **, std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<long long, DSPGraph::Analyzer *>, void *> *> *>>>=^^{__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<long long, DSPGraph::Analyzer *>, void *> *>}{__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<long long, DSPGraph::Analyzer *>, void *> *> *>>={__compressed_pair<unsigned long, std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<long long, DSPGraph::Analyzer *>, void *> *> *>>=Q}}}}{__compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<long long, DSPGraph::Analyzer *>, void *> *>, std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<long long, DSPGraph::Analyzer *>, void *>>>={__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<long long, DSPGraph::Analyzer *>, void *> *>=^{__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<long long, DSPGraph::Analyzer *>, void *> *>}}}{__compressed_pair<unsigned long, std::__1::__unordered_map_hasher<long long, std::__1::__hash_value_type<long long, DSPGraph::Analyzer *>, std::__1::hash<long long>, true>>=Q}{__compressed_pair<float, std::__1::__unordered_map_equal<long long, std::__1::__hash_value_type<long long, DSPGraph::Analyzer *>, std::__1::equal_to<long long>, true>>=f}}}{vector<std::__1::unique_ptr<DSPGraph::Subset, std::__1::default_delete<DSPGraph::Subset>>, std::__1::allocator<std::__1::unique_ptr<DSPGraph::Subset, std::__1::default_delete<DSPGraph::Subset>>>>=^{unique_ptr<DSPGraph::Subset, std::__1::default_delete<DSPGraph::Subset>>}^{unique_ptr<DSPGraph::Subset, std::__1::default_delete<DSPGraph::Subset>>}{__compressed_pair<std::__1::unique_ptr<DSPGraph::Subset, std::__1::default_delete<DSPGraph::Subset>> *, std::__1::allocator<std::__1::unique_ptr<DSPGraph::Subset, std::__1::default_delete<DSPGraph::Subset>>>>=^{unique_ptr<DSPGraph::Subset, std::__1::default_delete<DSPGraph::Subset>>}}}IIBI{AnalyzerBuilder=^^?{unordered_map<unsigned int, DSPGraph::AnalyzerBuilder::Info, std::__1::hash<unsigned int>, std::__1::equal_to<unsigned int>, std::__1::allocator<std::__1::pair<const unsigned int, DSPGraph::AnalyzerBuilder::Info>>>={__hash_table<std::__1::__hash_value_type<unsigned int, DSPGraph::AnalyzerBuilder::Info>, std::__1::__unordered_map_hasher<unsigned int, std::__1::__hash_value_type<unsigned int, DSPGraph::AnalyzerBuilder::Info>, std::__1::hash<unsigned int>, true>, std::__1::__unordered_map_equal<unsigned int, std::__1::__hash_value_type<unsigned int, DSPGraph::AnalyzerBuilder::Info>, std::__1::equal_to<unsigned int>, true>, std::__1::allocator<std::__1::__hash_value_type<unsigned int, DSPGraph::AnalyzerBuilder::Info>>>={unique_ptr<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned int, DSPGraph::AnalyzerBuilder::Info>, void *> *> *[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned int, DSPGraph::AnalyzerBuilder::Info>, void *> *> *>>>={__compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned int, DSPGraph::AnalyzerBuilder::Info>, void *> *> **, std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned int, DSPGraph::AnalyzerBuilder::Info>, void *> *> *>>>=^^{__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned int, DSPGraph::AnalyzerBuilder::Info>, void *> *>}{__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned int, DSPGraph::AnalyzerBuilder::Info>, void *> *> *>>={__compressed_pair<unsigned long, std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned int, DSPGraph::AnalyzerBuilder::Info>, void *> *> *>>=Q}}}}{__compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned int, DSPGraph::AnalyzerBuilder::Info>, void *> *>, std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<unsigned int, DSPGraph::AnalyzerBuilder::Info>, void *>>>={__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned int, DSPGraph::AnalyzerBuilder::Info>, void *> *>=^{__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned int, DSPGraph::AnalyzerBuilder::Info>, void *> *>}}}{__compressed_pair<unsigned long, std::__1::__unordered_map_hasher<unsigned int, std::__1::__hash_value_type<unsigned int, DSPGraph::AnalyzerBuilder::Info>, std::__1::hash<unsigned int>, true>>=Q}{__compressed_pair<float, std::__1::__unordered_map_equal<unsigned int, std::__1::__hash_value_type<unsigned int, DSPGraph::AnalyzerBuilder::Info>, std::__1::equal_to<unsigned int>, true>>=f}}}}{vector<DSPGraph::Graph::GraphBridge, std::__1::allocator<DSPGraph::Graph::GraphBridge>>=^{GraphBridge}^{GraphBridge}{__compressed_pair<DSPGraph::Graph::GraphBridge *, std::__1::allocator<DSPGraph::Graph::GraphBridge>>=^{GraphBridge}}}{unique_ptr<DSPGraph::Graph::profiler_t, std::__1::default_delete<DSPGraph::Graph::profiler_t>>={__compressed_pair<DSPGraph::Graph::profiler_t *, std::__1::default_delete<DSPGraph::Graph::profiler_t>>=^{profiler_t}}}{function<void (double)>={__value_func<void (double)>={type=[32C]}^{__base<void (double)>}}}{unordered_map<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>, DSPGraph::Graph::profiler_t, std::__1::hash<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>>, std::__1::equal_to<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>>, std::__1::allocator<std::__1::pair<const std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>, DSPGraph::Graph::profiler_t>>>={__hash_table<std::__1::__hash_value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>, DSPGraph::Graph::profiler_t>, std::__1::__unordered_map_hasher<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>, std::__1::__hash_value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>, DSPGraph::Graph::profiler_t>, std::__1::hash<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>>, true>, std::__1::__unordered_map_equal<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>, std::__1::__hash_value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>, DSPGraph::Graph::profiler_t>, std::__1::equal_to<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>>, true>, std::__1::allocator<std::__1::__hash_value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>, DSPGraph::Graph::profiler_t>>>={unique_ptr<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>, DSPGraph::Graph::profiler_t>, void *> *> *[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>, DSPGraph::Graph::profiler_t>, void *> *> *>>>={__compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>, DSPGraph::Graph::profiler_t>, void *> *> **, std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>, DSPGraph::Graph::profiler_t>, void *> *> *>>>=^^{__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>, DSPGraph::Graph::profiler_t>, void *> *>}{__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>, DSPGraph::Graph::profiler_t>, void *> *> *>>={__compressed_pair<unsigned long, std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>, DSPGraph::Graph::profiler_t>, void *> *> *>>=Q}}}}{__compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>, DSPGraph::Graph::profiler_t>, void *> *>, std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>, DSPGraph::Graph::profiler_t>, void *>>>={__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>, DSPGraph::Graph::profiler_t>, void *> *>=^{__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>, DSPGraph::Graph::profiler_t>, void *> *>}}}{__compressed_pair<unsigned long, std::__1::__unordered_map_hasher<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>, std::__1::__hash_value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>, DSPGraph::Graph::profiler_t>, std::__1::hash<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>>, true>>=Q}{__compressed_pair<float, std::__1::__unordered_map_equal<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>, std::__1::__hash_value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>, DSPGraph::Graph::profiler_t>, std::__1::equal_to<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>>, true>>=f}}}}8^{GraphIOData=II{AudioTimeStamp=dQdQ{SMPTETime=ssIIIssss}II}^{AudioBufferList}}16
operator()
scratchFloatSpace.size() >= multiArray.count
InvalidFormatException
com.apple.SoundAnalysis.AnalyzerQueue
BuildVersion
buildVersion
listenType
fileName
audioStringDate
confidenceValues
userFeedback
numberOfSamples
timestamp
/Library/Caches/com.apple.xbs/Sources/Listen_Sim/Listen-67.2/Framework/Internal/Core/DSPGraph/DSPGraph_ContextBox.cpp
validateFormats
Context box can't produce variable output frames.
input and output channel counts don't match
ContextBox has no inputs
mMaxFrames > 1
number of context frames must be greater than block size
isIntegral(mOutputHopSize)
inNumFrames <= mMaxFrames
inNumFrames == mMaxFrames
selfLatencyInTicks
setHistoricalBuffer
historical buffer size must match ring buffer readAvail
RPFTSource
v16@?0@"RPFileTransferProgress"8
Message transmitted!: %@
%@_%@_bus%ld_%@.caf
%@ startRecordingPort was unsuccessful
SNDSPGraphUtilities
computationalDutyCycle
graphIsDeadEnded
shouldThrowException
Throwing a fake exception to aid in unit testing
com.apple.soundanalysis.SystemAudioAnalyzer
v24@?0@"AVAudioBuffer"8@"AVAudioTime"16
Audio stream interrupted
B8@?0
@"SNDSPGraph"8@?0
classifications
-init is not a valid initializer for the class SNClassificationResult
+new is not a valid class method for the class SNClassificationResult
-init is not a valid initializer for the class SNClassification
+new is not a valid class method for the class SNClassification
/System/Library/Frameworks/AudioToolbox.framework/libAudioDSP.dylib
RegisterAudioUnits_InternalUnsearchable
SNThresholdBasedSecondPassController.m
secondPassHangoverPeriod >= 0.0
floatFormatWithContext
/Library/Caches/com.apple.xbs/Sources/Listen_Sim/Listen-67.2/Framework/Internal/Core/SNDSPGraphUtils.mm
sampleRate > 0 && blockSize > 0 && contextSize > 0
floatFormat
sampleRate > 0 && blockSize > 0
/Library/Caches/com.apple.xbs/Sources/Listen_Sim/Listen-67.2/Framework/Internal/Core/DSPGraph/DSPGraph_SignalDetectorBox.cpp
inputs must be LPCM
mInputSignalRanges.at(busIdx).at(channelIdx).capacity() >= inNumFrames
SignalDetectorBox
-[SNResultsXPCPublisher init]
failed to initialize instance of class %s
-[SNResultsXPCPublisher initWithSubscriber:]
/Library/Caches/com.apple.xbs/Sources/Listen_Sim/Listen-67.2/Framework/Internal/Core/DSPGraph/DSPGraph_LogMelTransformBox.cpp
LogMelTransformBox
-[SNSystemAudioAnalyzerXPCSubscriber init]
expected NSXPC to pass a proxy object for argument `observer`
could not add request; unknown error
block size %u
buffer %p
source port %p box %p %s
format %s
num dests %zu
%3zu dest %p, box name %s
Wire
/Library/Caches/com.apple.xbs/Sources/Listen_Sim/Listen-67.2/CoreAudioUtility/Source/CADSP/DSPGraph/DSPGraph_Wire.cpp
wire already has a source: %s %s output %u
output port already has a wire: %s %s output %u
box %s %s output %u is not connected
no format was ever set on the wire from box %s %s output %u
Wire from box %s: format
%s, %u block size
does not match the one previously set
%s, %u block size
/Library/Caches/com.apple.xbs/Sources/Listen_Sim/Listen-67.2/CoreAudioUtility/Source/CADSP/DSPGraph/Boxes/DSPGraph_CalculationBox.cpp
CalculationBox can't get input scope element 
 with parameter ID 
CalculationBox can't get output scope element 
CalculationBox can't get parameter in scope 
CalculationBox can't set input scope element 
CalculationBox can't set parameter in scope 
Resampler2 bad sample rate(s) : %11.2f %11.2f
Someone is deleting a Resampler while it is in use.
/Library/Caches/com.apple.xbs/Sources/Listen_Sim/Listen-67.2/CoreAudioUtility/Source/CADSP/DSPGraph/DSPGraph_TimeFreqBox.cpp
buffer list number of buffers doesn't match format channel count.
index %u
Port
OutputPort
InputPort
/Library/Caches/com.apple.xbs/Sources/Listen_Sim/Listen-67.2/CoreAudioUtility/Source/CADSP/DSPGraph/DSPGraph_Interpreter.cpp
expected name in 'box' command: %s
expected class name or component description in 'box' command: %s
box : box type '
' not found
expected ')' at end of component description, got '%c'
()[]{}";
NewBoxRegistry registered boxes:
NewBoxRegistry
parameter_add
parameter_subtract
parameter_negate
parameter_logical_and
parameter_logical_or
parameter_logical_not
property_logical_or
property_logical_and
property_not
property_equal
property_not_equal
wrong number of inputs for SingleRateLPCMConverterBox. must be 1.
wrong number of outputs for SingleRateLPCMConverterBox. must be 1.
There must be two inputs and one output, instead of %u and %u.
The inputs must have the same channel count, but have %u and %u.
The inputs and output must have the same channel count, but have %u and %u.
The buffer passed for input 0 should be sized to %u bytes, but is %u.
The buffer passed for input 1 should be sized to %u bytes, but is %u.
asum
wrong number of outputs for arithmetic difference box. Must be 1.
adif
amin
amul
cannot open file %s
parsing exception at line %u
param
property
wire
wireParam
wireProperty
wireGraphParam
wireGraphProperty
order
beginSubset
endSubset
graphName
componentName
format
jack
record
analysis
analysisDefine
unknown command name '%s'
expected name in 'analysisDefine' command: %s
expected class name or component description in 'analysisDefine' command: %s
expected ')' at end of port description, got '%c'
TMPDIR
/tmp/
-@/#,
constant bit rate formats must have a block size and bytes per packet.
expected ')' at end of format, got '%c'
performADryRun
recordFileType
sliceDuration
variableSliceDuration
unknown value name '%s' in 'set' command
expected integer in 'set 
' command
expected ')' at end of property endpoint, got '%c'
global
group
part
parameter endpoint : box not found: 
expected ')' at end of param endpoint, got '%c'
source port description parse failed. {%s}
wire : source "
" index 
 not found
wire : destination "
/Library/Caches/com.apple.xbs/Sources/Listen_Sim/Listen-67.2/CoreAudioUtility/Source/CADSP/DSPGraph/DSPGraph_GraphIOBox.cpp
/usr/local/lib/libAudioDiagnostics.dylib
_raw.
GraphInput
out 
GraphOutput
/Library/Caches/com.apple.xbs/Sources/Listen_Sim/Listen-67.2/CoreAudioUtility/Source/CADSP/DSPGraph/DSPGraph_Analyzers.cpp
analysis %p
Analyzer
%s%s %s
AudioStreamBasicDescription:
AudioUnitInitialize %s
AUAnalyzer
TestAnalyzer
AnalyzerBuilder
%s %p
strips
effects
aupreset
displayname
bypass
data
classname
type
subtype
manufacturer
                                                                
\x%02x
%2u ch, %6.0f Hz, 
 (0x%08X) 
unpacked in %u bytes
packed in %u bytes
%u.%u
from %u-bit source, 
%u frames/packet
%u bits/channel, %u bytes/packet, %u frames/packet, %u bytes/frame
(freq 
0123456789ABCDEF
_-+=|./:!@#$%^&*<>?~
/Library/Caches/com.apple.xbs/Sources/Listen_Sim/Listen-67.2/CoreAudioUtility/Source/CADSP/DSPGraph/DSPGraph_Utils.cpp
mABL->mNumberBuffers (%u) != toABL->mNumberBuffers (%u)
fromBytePos (%u) + numBytesToCopy (%u) > mABL->mBuffers[%u].mDataByteSize (%u)
toBytePos (%u) + numBytesToCopy (%u) > toABL->mBuffers[%u].mDataByteSize (%u)
numZeroes is greater than buffer capacity %u > %u
DSPGraph assertion failure: RingBuffer::write advancing write by more packets than provided with %u > %u
DSPGraph assertion failure: RingBuffer::write overflow %u > %u (capacity = %u, readAvail = %u, readPos = %u, writePos = %u)
DSPGraph assertion failure: RingBuffer::read underflow %u > %u (capacity = %u, readPos = %u, writePos = %u)
num buffers %u
flags %x
ABL %p
/Library/Caches/com.apple.xbs/Sources/Listen_Sim/Listen-67.2/CoreAudioUtility/Source/CADSP/DSPGraph/DSPGraph_Buffer.cpp
Buffer::copyFrom, fromABL->mNumberBuffers != toABL->mNumberBuffers
Buffer::copyFrom, fromABL->mBuffers[i].mDataByteSize > mByteCapacity
/Library/Caches/com.apple.xbs/Sources/Listen_Sim/Listen-67.2/CoreAudioUtility/Source/CADSP/DSPGraph/DSPGraph_Box.cpp
frequency data is passed through a No Frequency Safe Box-> %s %s
analysis %qd
(%s %u)
analysis 
 (%s %u)
order %s %s
true
wireProperty (%s %u %u %u) (%s %u %u %u) %s
wireParam (%s %u %u %u) (%s %u %u %u) %s
wire 
(%s %u) 
box %qd %s 
 %u %u
componentName %s %s
box %s 
B%qd -> B%qd
 [label="
B%qd [shape=box, label="%s\n
latency %f (%f)
Box::topologicalSort, There is a cycle in the graph. The graph must be acyclic.
Latency compensation of %u samples required at frequency-domain wire : %s -> %s
-latency-delay-
delay samples
DelayBox
Could not construct
parameters
This line should never be reached, please file a bug report
null
Unknown parse error
Expected opening quote
Expected UTF-16 low surrogate
Invalid escape sequence
Invalid UTF-16 character
Expected closing quote
Invalid value
Unterminated value
Expected opening bracket
Expected colon
Expected comma or closing bracket
Nested object or array not parsed
Exceeded nesting limit (32)
AudioComponentDescription
%s '%s' %qd %p 
graph %p
num inputs %u
num outputs %u
AudioUnitUninitialize in 
AudioUnitInitialize in 
AudioComponentInstanceDispose in 
AudioComponentFindNext in 
AudioComponentInstanceNew in 
AudioUnitProcess error in 
AudioUnitProcessMultiple in 
AUBox::setFormatOnUnit %s %s : %s
Could not convert
enabled %d
AU %p
num param taps %zu
ParameterTap
source %p
source      %p scope %u   element %u   ID %u
destination %p scope %u   element %u   ID %u
AUBox
GainBox input and output formats don't match (
 != 
mute
gain
dbgain
test
copy
There must be one input and output, instead of %u and %u.
The input and output ports must have the same number of channels, but have %u and %u.
freq
time
The input and output must both be frequency-domain, but are '%s' and '%s'
VectorGainBox
SumBox output channel count must be mono or matched when input is single-bus
ChannelJoinerBox output format must be 32-bit floating-point PCM or 'freq'
ChannelJoinerBox input format must be 32-bit floating-point PCM or 'freq'
ChannelJoinerBox channel mismatch: can't join %u input channels into %u output channels
outBufferIndex < outABL->mNumberBuffers
ChannelJoiner
ChannelSplitterBox channel mismatch: in has %u channels, but only has %u outs
ChannelSplitterBox output format must be non-interleaved float or 'freq' 
ChannelSplitterBox outputs must be mono 
ChannelSplitterBox output is in time-domain but input is in frequency-domain 
ChannelSplitterBox output is in frequency-domain but input is in time-domain 
ChannelSplitter
ChannelCopierBox input format must be mono, non-interleaved float
ChannelCopierBox output format must be non-interleaved float 
ChannelCopier
DeadEndBox
ConstantSourceBox output format must be non-interleaved float or 'freq'
imag value (freq domain only)
real value
ConstantSourceBox
DBValue
LinearValue
DecibelControlBox
SingleRateLPCMConverterBox input must have a non-zero number of channels
SingleRateLPCMConverterBox output format must be non-interleaved float
SingleRateLPCMConverterBox output must have a non-zero number of channels
SingleRateLPCMConverterBox input and output sample rates must match
SingleRateLPCMConverterBox
unordered_map::at: key not found
ParameterEndpoint
box %p
parameterID %u
scope %u
element %u
PropertyEndpoint
propertyID %u
min() cannot be computed with a complex LHS.
min() cannot be computed with a complex RHS.
min() cannot be computed with complex arguments.
/Library/Caches/com.apple.xbs/Sources/Listen_Sim/Listen-67.2/CoreAudioUtility/Source/CADSP/VP/Utility/vpTimeFreqConverter.cpp
Analyze
Synthesize
: Encountered total 
 frames with Non finite sample <nan> or <inf> in one audio start/stop cycle!
 frames with loud input signal (over 
 dB) in one audio start/stop cycle!
NonFiniteProtection
nfnp_key
Source/CADSP/DSPGraph/Boxes/DSPGraph_NonFiniteProtectionBox.h
print
%Y-%m-%d %H:%M:%S
%s.%d
/Library/Caches/com.apple.xbs/Sources/Listen_Sim/Listen-67.2/CoreAudioUtility/Source/CADSP/DSPGraph/DSPGraph_Box.h
: Encountered Non finite sample <nan> or <inf> in 
 frames!
: Encountered loud signal in 
NonFiniteProtectionBox
/Library/Caches/com.apple.xbs/Sources/Listen_Sim/Listen-67.2/CoreAudioUtility/Source/CADSP/DSPGraph/DSPGraph_IsoGroup.cpp
number of blocks to process is out of range  %u   %u %u
IsoGroup::topologicalSort, There is a cycle in the graph. The graph must be acyclic.
sample rates in group do not match  %u %u %s
block sizes in group do not match  %u %u %s
RamstadSRC::processMono, wrong channel count
RamstadSRC process called without preflight and arguments don't match preflight.
RamstadSRC process called for different number of output samples than preflight.
RamstadSRC process called for number of input samples than outside range of preflight.
RamstadSRC::processStereo, wrong channel count
RamstadSRC::processStereoFrac preflight prediction failed.
wire %p
file data pos %u
FileInjector
FileRecorder
ExtAudioFileGetProperty
ExtAudioFileSetProperty
ExtAudioFileRead
ExtAudioFileClose
Source/PublicUtility/CAExtAudioFile.h
Open
couldn't convert path to CFURLRef
ExtAudioFileOpenURL
%s ('%s') failed
%s failed
/Library/Caches/com.apple.xbs/Sources/Listen_Sim/Listen-67.2/CoreAudioUtility/Source/CADSP/DSPGraph/DSPGraph_Files.cpp
inject
NewAudioCapturerImpl
/Library/Caches/com.apple.xbs/Sources/Listen_Sim/Listen-67.2/CoreAudioUtility/Source/CADSP/DSPGraph/DSPGraph_Preprocessor.cpp
apply
preprocessor error: recursive call to macro %s.
preprocessor error: macro %s: wrong number of arguments expected %zu. got %zu
preprocess
WARNING: Preprocessor: redefining macro '%s'
undef
counter
letCounter
counter start value
counter step
localCounter
defined
addition
arithmetic addition overflow
multiplication
arithmetic multiplication overflow
equality
subtraction
arithmetic subtraction overflow
division
inequality
less than
less than or equal
greater than
greater than or equal
ifdef
ifset
include
preprocessor error: cannot open include file '%s'
preprocessor error: cannot find include file '%s'
preprocessor error: macro %s not found.
empty %s argument
out-of-range %s argument: %s
non-numerical characters in %s argument: %s
;()[]{}`'";\
/Library/Caches/com.apple.xbs/Sources/Listen_Sim/Listen-67.2/CoreAudioUtility/Source/CADSP/DSPGraph/DSPGraph_Graph.cpp
initialized %d
can process in place %d
num boxes %zu
num wires %zu
num internal buffers %zu
num sorted groups %zu
num graph inputs %zu
num graph outputs %zu
BOXES
WIRES
INTERNAL BUFFERS
GRAPH INPUTS
%3zu box 
GRAPH OUTPUTS
GRAPH SINKS
GRAPH PARAMETERS
%3zu %u %f %s
GRAPH PROPERTIES
%3zu %u %s
Graph
numerical cast overflow: could not retain value in conversion type
InternalBuffer
box %s %s input port is not connected.
%s %s box not connected
input and output data are identical, but graph cannot process in-place
preflight slice duration is greater than the graph's maximum slice duration.
the slice duration cannot vary, yet a different duration was supplied to preflight.
input %u packet count %u is inconsistent with preflight %u
output %u frame count %u is inconsistent with preflight %u
number of frames are different in different ports though the sample rates are the same. %u %u
AudioBufferList mDataByteSize is too small for the number of packets for input %u.  mDataByteSize %u   expectedByteSize %u
AudioBufferList mDataByteSize is too small for the number of frames for output %u.  mDataByteSize %u   expectedByteSize %u
graph property size is too large to accept: %zu bytes > %u
createIsoGroups
added
boxes within a group have different sample rates! group has sample rate %u, but box %s has sample rate %u on one of its input ports
boxes within a group have different block sizes! group has block size %u, but box %s has block size %u on one of its input ports
box %s %s output port is not connected.
boxes within a group have different sample rates! group has sample rate %u, but box %s %s has sample rate %u on one of its output ports
boxes within a group have different block sizes! group has block size %u, but box %s has block size %u on one of its output ports
IsoGroup
input port 
 on '
' box is not connected to anything
output port 
com.apple.coreaudio
couldn't open file '%s'
digraph 
Box %s not found
%s setProperty %u %u %u failed with error %d
%s setProperty %u %u %u to %u failed with error %d
%s setProperty %u %u %u to %Lu failed with error %d
%s setProperty %u %u %u to %f failed with error %d
%s setProperty %u %u %u to %lf failed with error %d
Couldn't load plist from path '%s'. CFURLCreateWithFileSystemPath failed.
Must pass property strip's resource path if plist path is relative
Couldn't create resource URL from path '%s'.
Couldn't load plist from path '%s'. CFReadStreamCreateWithFile failed.
Couldn't load plist from path '%s'. CFPropertyListCreateWithStream failed.
Must provide either a 'Value', 'Path', 'Data', or a recognized number type for properties
Float64
Float32
UInt64
UInt32
Data
Element
Scope
Number
PropertyID
Properties
Name
Boxes
/Library/Caches/com.apple.xbs/Sources/Listen_Sim/Listen-67.2/CoreAudioUtility/Source/CADSP/DSPGraph/DSPGraph_SRCBox.cpp
ResamplerSRCKernel
RamstadSRCKernel
reblocker
FreqSRCBox I/O sample rates and block sizes invalid  %u / %u <> %u / %u
isValidFreqSRCBoxConnection()
inBuf->mNumberBuffers == outBuf->mNumberBuffers
freqsrc
Decibel gain
Mapped slider value
Raw slider value
Maximum volume
Minimum volume
Transfer function
/Library/Caches/com.apple.xbs/Sources/Listen_Sim/Listen-67.2/CoreAudioUtility/Source/CADSP/DSPGraph/Boxes/DSPGraph_VolumeCurveBox.cpp
VolumeCurveBox
CA_NoVector
CA_NoVector set; Vector unit optimized routines will be bypassed
hw.optional.avx512f
hw.optional.avx2_0
hw.optional.avx1_0
hw.optional.sse4_2
hw.optional.sse4_1
hw.optional.sse3
hw.optional.sse2
spew
minutiae
details
info
notice
note
warning
error
%02X
%2d ch, %6.0f Hz, %s (0x%08X) 
 little-endian
 big-endian
 unsigned
 signed
integer
float
packed in %d bytes
unpacked in %d bytes
, deinterleaved
 low-aligned
 high-aligned
%d.%d
%s-bit%s%s %s%s%s%s%s
from %d-bit source, 
from UNKNOWN source bit depth, 
%d frames/packet
%d bits/channel, %d bytes/packet, %d frames/packet, %d bytes/frame
-@/#
Expected fractional bits following '.'
non-interleaved flag invalid for non-PCM formats
extra characters at end of format string: %s
Invalid format string: %s
Syntax of format strings is: 
Source/PublicUtility/CABufferList.h
(SNSystemAudioAnalyzerXPCPublisher:%@) addRequest:%@ withObserver:%@
(SNSystemAudioAnalyzerXPCPublisher:%@) removeRequest:%@
(SNSystemAudioAnalyzerXPCPublisher:%@) removeAllRequests
(SNSystemAudioAnalyzerXPCPublisher:%@) start
(SNSystemAudioAnalyzerXPCPublisher:%@) stop
Couldn't obtain the built-in mic UID. Skipping setting of the AQ channel assignments
Set audio queue channel assignment %u with result %d
Could register audio units. Returning nil for %@
%s:%d:%s: ASSERTION FAILURE [(mBufferCapacity == 0 || other.mBuffers[i].mDataByteSize <= mBufferCapacity) != 0 is false]: 
IncludePaths parse failed
Substitutions parse failed
SNDSPConfiguration parse failed
Applying AUStrip %@ to graph %@ failed
Error applying AUStrip. DSPGraph must be the first item in a DSPConfiguration.
Applying PropertyStrip %@ to graph %@ failed
Error applying PropertyStrip. DSPGraph must be the first item in a DSPConfiguration.
DSPGraphInfo doesn't specify either text or path
AUStripInfo doesn't specify either value or path
PropertyStripInfo doesn't specify either value or path
Instantiating SNSystemAudioAnalyzer with In-Process Computation
Instantiating SNSystemAudioAnalyzer in Daemon
(SNSystemAudioAnalyzer:%@) addRequest:%@ withObserver:%@
(SNSystemAudioAnalyzer:%@) addRequestInBackground:%@ withObserver:%@
(SNSystemAudioAnalyzer:%@) removeRequest:%@
(SNSystemAudioAnalyzer:%@) removeAllRequests
(SNSystemAudioAnalyzer:%@) start
(SNSystemAudioAnalyzer:%@) stop
(SNSystemAudioAnalyzerRemote: %@) remote analyzer invalidated: %@
(SNSystemAudioAnalyzerRemote: %@) remote analyzer invalidation attempted; stalling further activity
(SNSystemAudioAnalyzerRemote: %@) finished stalling after analyzer invalidation attempt
(SNSystemAudioAnalyzerRemote:%@) addRequest:%@ withObserver:%@
(SNSystemAudioAnalyzerRemote:%@) removeRequest:%@
(SNSystemAudioAnalyzerRemote:%@) removeAllRequests
(SNSystemAudioAnalyzerRemote:%@) start
(SNSystemAudioAnalyzerRemote:%@) stop
EAR framework returned %lu bytes instead of %d float elements
Unknown exception caught!
Caught OSStatus exception %d %4.4s
std::exception caught: %s.
Caught graph exception %d %4.4s %s in %s:%i
Companion service connection invalidated
Could not contact remote SNFileServer to query version (this may not be an issue; not all devices are expected to host SNFileServers); reason: %@
Device found %@
Version check messaged failed with error %@
Version %@
device updated: %@ with changes: %ld
Link failed to activate with error %@
error querying entitlement %@: %@
inadequate entitlements to host daemon
Activated file server with error %@
Creating model of class %@
for handler %p: result (%@) produced by request %@
for handler %p: termination (%@) received from request %@
Required shared request not found with configuration %@
request failed to adapt to system configuration %@ with error %@
failed to set processing contexts
Unknown error
Unimplemented
Unknown error processing tree
Removing %@, since it doesn't contain any detections
Failed to write results log file with error %@
Started recording graph
Failed to start recording graph
No sample rate metadata provided in model. Defaulting to %d
Feedback connection destination %@ not present in model
Feedback connection source %@ not present in model
Couldn't parse feedback connection. Should be 'source -> destination'
Failed to get files list. Giving up on directory size reduction. Error: %@
Sorting files by date failed; continuing but may have unpredictable results.
No SoundAnalysis file removal needed. Directory size approx: %lld kb.
Deleting these sound files + their associated metadata files: %@
Failed to delete audio file %@. Error: %@
Failed to delete text file %@. Error: %@
Failed to open audio file %@ with error %@
%@ didProduce %@
%@ didFailWith %@
%@ didComplete
%s:%d:%s: ASSERTION FAILURE [(mBufferMemory == __null) != 0 is false]: 
AUStrip is nil
PropertyStrip is nil
Transfer completed
Fetched local device identity
Fetched server device identity %@
File sharing messaged failed with error %@
Received a file sharing request response %@
Received a file item %@
Queue already running
Failed to create audio queue
Starting audio queue
Stopping audio queue
Completed first pass for request %@ with error %@
Resizing historical ring buffer from %d to %d frames after adding %@
Beginning second pass for request %@
Couldn't begin second pass recording with error %@
Couldn't begin recording, no path set
Completed second pass for request %@ with error %@
Beginning %f seconds of historical data catch-up for request %@
Ended historical data catch-up for request %@
Ending second pass for request %@
Resizing historical ring buffer from %d to %d frames after removing %@
Wrote file %@ at %@ with result %d.
Received version request
Received file transfer request
Progressing %@
Finished transferring files with error %@
Skipping transferring of file %@
Requested file path %@
Received file deletion request on server for file path: %@
File deletion request failed on the server: %@
Box %s doesn't exist in graph
(SNSystemAudioAnalyzerLocal:%@) addRequest:%@ withObserver:%@
(SNSystemAudioAnalyzerLocal:%@) removeRequest:%@
(SNSystemAudioAnalyzerLocal:%@) removeAllRequests
(SNSystemAudioAnalyzerLocal:%@) start
(SNSystemAudioAnalyzerLocal:%@) stop
Audio failed to start. Retrying in %d seconds
AVAudioSession interrupted %@
AVAudioSession route change %@
AVAudioSession media services lost %@
AVAudioSession media services reset %@
Graph %@ couldn't be compiled
Graph couldn't be compiled from text
Error: Unable to call RegisterAudioUnits_InternalUnsearchable from libAudioDSP.dylib.
Processor not found with configuration %@
(SNSystemAudioAnalyzerXPCSubscriber:%@) addRequest:%@ withObserver:%@
(SNSystemAudioAnalyzerXPCSubscriber:%@) removeRequest:%@
(SNSystemAudioAnalyzerXPCSubscriber:%@) removeAllRequests
(SNSystemAudioAnalyzerXPCSubscriber:%@) start
(SNSystemAudioAnalyzerXPCSubscriber:%@) stop
Base16 decoding: invalid argument exception (%s)
Base16 decoding: out of range exception (%s)
Base16 decoding: overflow exception (%s)
Base16 decoding: unexpected exception.
DSPGraph assertion failure: RingBuffer::write advancing write by more packets than provided with %u > %u
DSPGraph assertion failure: RingBuffer::write overflow %u > %u (capacity = %u, readAvail = %u, readPos = %u, writePos = %u)
DSPGraph assertion failure: RingBuffer::read underflow %u > %u (capacity = %u, readPos = %u, writePos = %u)
%s:%d:%s: _vp: vptimefreqconverter::analyze: not configured for conversion
%s:%d:%s: _vp: vptimefreqconverter::analyze: not configured for analysis
%s:%d:%s: _vp: vptimefreqconverter::synthesize: not configured for conversion
%s:%d:%s: _vp: vptimefreqconverter::synthesize: not configured for synthesis
%s:%d:%s: %s
%s:%d:%s: about to throw %s: %s
 PackednessIsSignificant only applies for PCM
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
SNLKFSResult
NSCopying
NSSecureCoding
NSCoding
SNTimeRangeProvidingWritable
SNTimeRangeProviding
NSObject
SNSpeechEmotionResult
SRSampling
SNConfidenceProvidingWritable
SNConfidenceProviding
SNResult
SNFileServerDiscoveryResult
SNResultsObservingXPCProtocol
SNSystemAudioAnalyzerXPCPublisher
SNSystemAudioAnalyzerProtocol
SNAudioQueueConfiguration
SNAudioDataSourceUtilities
SNFileDeletionResult
SNTaskCreating
SNRequest
SNFileSystem
SNDetectSignalThresholdRequest
SNAnalyzerCreating
SNDetectSignalThresholdRequestImpl
SNAnalyzing
SNProcessing
SNError
SNCorrelateAudioRequest
SNAudioCorrelator
SNSystemServiceResourceCoordinator
SNResourceCoordinatorProtocol
SNAnalysisServer
NSXPCListenerDelegate
SNAnalysisClient
SNUserDefaults
SNDeleteFilesRequest
SNMLCustomModel
SNMLModel
SNMLLockedModel
SNResourceCoordinatorXPCSubscriber
SNResourceCoordinatorXPCProtocol
SNDetectionResult
SNCustomTwoPassRequest
SNTwoPassRequest
SNAnalysisPassStrategyProviding
SNSpeechUtteranceResult
SNDSPItemInfo
SNDSPGraphInfo
SNAUStripInfo
SNPropertyStripInfo
SNDSPConfiguration
SNDSPGraphLoader
SNDictionaryAdditions
SNResultsXPCSubscriber
SNResultsObserving
SNSystemAudioAnalyzer
SNFileListingResult
SNSystemAudioAnalyzerRemote
SNFileServerInfo
SNEstimateSpeechEmotionRequest
SNSpeechEmotionEstimator
EARSyncPSRAudioProcessorDelegate
SNSystemConfiguration
SNSoundClassifier
SNClassifySoundRequest
SNAudioFileAnalyzer
SNDetectSpeechUtteranceRequest
SNSpeechUtteranceDetector
SNTimeConversionDictionaryProviding
SNAnalyzerHost
SNDSPGraphBox
SNDiscoverFileServerRequest
SNDaemon
SNLockedMLModelFactory
SNMLModelFactory
SNAnalyzerInfo
SNForwardPassAudioStreamAnalyzer
SNTimeConverting
SNMeasureLKFSRequest
SNAudioLevelMeasurer
SNListFilesRequest
SNUtils
SNResultsCollector
SNResultsPrinter
SNResultsForwarder
SNModelFeatureConnection
SNResourceCoordinatorXPCPublisher
SNDSPGraph
DSPGMLInputProvider
MLFeatureProvider
DSPGCoreMLInfo
SNFileCopyingResult
SNCopyFilesRequest
SNTwoPassConfiguration
SNAudioRecordingQueue
SNDSPGraphCustomModel
_SNVGGishFrontEndProcessingCustomModel
MLCustomModel
SNAudioStreamAnalyzer
SNUltronResultsLogger
SNFileServer
SNBoxRecordingInfo
SNDSPGraphUtilities
SNSystemAudioAnalyzerXPCProtocol
SNNullRequest
SNNullDetector
SNSystemAudioAnalyzerLocal
SNDSPGraphInterpreter
SNClassificationResult
SNClassification
SNSignalThresholdResult
SNAudioUnitRegistration
SNThresholdBasedSecondPassController
SNSecondPassController
SNProcessorCreating
SNAudioProcessorCache
SNNullResult
SNAudioCorrelationResult
SNResultsXPCPublisher
NSXPCProxyCreating
SNSystemAudioAnalyzerXPCSubscriber
allocWithZone:
init
timeRange
setTimeRange:
decibelLevel
setDecibelLevel:
isEqualToLKFSResult:
valueWithCMTimeRange:
isEqual:
hash
numberWithFloat:
decodeObjectOfClass:forKey:
decodeDoubleForKey:
CMTimeRangeValue
encodeObject:forKey:
encodeDouble:forKey:
supportsSecureCoding
copyWithZone:
encodeWithCoder:
initWithCoder:
TB,R
class
self
performSelector:
performSelector:withObject:
performSelector:withObject:withObject:
isProxy
isKindOfClass:
isMemberOfClass:
conformsToProtocol:
respondsToSelector:
retain
release
autorelease
retainCount
zone
superclass
description
debugDescription
TQ,R
T#,R
T@"NSString",R,C
T{?={?=qiIq}{?=qiIq}},R,N
T{?={?=qiIq}{?=qiIq}},N
_decibelLevel
_timeRange
Tf,N,V_decibelLevel
T{?={?=qiIq}{?=qiIq}},N,V_timeRange
mood
valence
arousal
dominance
confidence
stringWithFormat:
setMood:
setValence:
setArousal:
setDominance:
setConfidence:
isEqualToSpeechEmotionResult:
numberWithDouble:
unarchivedObjectOfClass:fromData:error:
archivedDataWithRootObject:requiringSecureCoding:error:
initWithBinarySampleRepresentation:
initWithBinarySampleRepresentation:metadata:timestamp:
binarySampleRepresentation
Td,R,N
Td,N
_confidence
_mood
_valence
_arousal
_dominance
Td,V_mood
Td,V_valence
Td,V_arousal
Td,V_dominance
Td,N,V_confidence
dataWithBytes:length:
addAudio:
endAudio
getLatestSuperVector
initWithConfigFile:configRoot:sampleRate:delegate:queue:
resetForNewRequest
setServerInfo:
setState:
initWithServerInfo:state:
serverInfo
state
.cxx_destruct
_serverInfo
_state
T@"SNFileServerInfo",&,N,V_serverInfo
TQ,N,V_state
xpcRequest:didProduceResult:completionHandler:
xpcRequest:didFailWithError:completionHandler:
xpcRequestDidComplete:completionHandler:
interfaceWithProtocol:
setClasses:forSelector:argumentIndex:ofReply:
raise:format:
initWithReceiver:
synchronousRemoteObjectProxyWithErrorHandler:
xpcAddRequest:withObserver:completionHandler:
xpcRemoveRequest:completionHandler:
xpcRemoveAllRequestsWithCompletionHandler:
xpcStartWithCompletionHandler:
xpcStopWithCompletionHandler:
addRequest:withObserver:error:
removeRequest:
removeAllRequests
start
stop
initWithSubscriber:
_subscriber
creationFlags
setCreationFlags:
configureAudioQueue
setConfigureAudioQueue:
_creationFlags
_configureAudioQueue
TI,V_creationFlags
T@?,C,V_configureAudioQueue
enableAlwaysOnAudioRouting:
setChannelAssignment:onQueue:
builtInMicrophoneAnalysisChannelNumberOrDefault:
createDefaultAudioQueueConfigurationUsingChannelNumber:
sharedInstance
availableInputs
countByEnumeratingWithState:objects:count:
portType
isEqualToString:
builtInMicrophoneDeviceUID
createSiriAudioQueueConfigurationUsingChannelNumber:
audioQueueConfiguration
T@"SNAudioQueueConfiguration",R
setFileName:
setError:
initWithFileName:error:
fileName
error
_fileName
_error
T@"NSString",&,N,V_fileName
T@"NSError",&,N,V_error
queue
launchTaskWithQueue:completionHandler:resultsHandler:
errorWithCode:underlyingError:message:
_removeRequest:error:
taskCompletionMap
valueWithPointer:
setObject:forKeyedSubscript:
objectForKey:
removeObjectForKey:
requests
addRequest:completionHandler:resultsHandler:
setRequests:
setTaskCompletionMap:
setQueue:
_requests
_taskCompletionMap
_queue
T@"NSMutableArray",&,N,V_requests
T@"NSMutableDictionary",&,N,V_taskCompletionMap
T@"NSObject<OS_dispatch_queue>",&,N,V_queue
initWithSampleRate:blockSize:magnitudeThreshold:
sampleRate
setSampleRate:
blockSize
setBlockSize:
magnitudeThreshold
setMagnitudeThreshold:
isEqualToDetectSignalThresholdRequest:
numberWithUnsignedInt:
decodeIntegerForKey:
encodeInteger:forKey:
createAnalyzerWithError:
_detector
_blockSize
_sampleRate
_magnitudeThreshold
Td,N,V_sampleRate
TI,N,V_blockSize
Td,N,V_magnitudeThreshold
array
addObject:
populateClientError:withCode:underlyingError:message:
stringWithUTF8String:
adaptToSystemConfiguration:error:
graph
T{shared_ptr<DSPGraph::Graph>=^{Graph}^{__shared_weak_count}},R,N
resultsFromBox:renderedWithFrameCount:
sharedProcessorConfiguration
resultsBox
primeGraph
T^{Box=^^?^{Graph}^{IsoGroup}^{Subset}{basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>={__compressed_pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>::__rep, std::__1::allocator<char>>={__rep=(?={__long=QQ*}{__short=(?=Cc)[23c]}{__raw=[3Q]})}}}q{vector<DSPGraph::InputPort, std::__1::allocator<DSPGraph::InputPort>>=^{InputPort}^{InputPort}{__compressed_pair<DSPGraph::InputPort *, std::__1::allocator<DSPGraph::InputPort>>=^{InputPort}}}{vector<DSPGraph::OutputPort, std::__1::allocator<DSPGraph::OutputPort>>=^{OutputPort}^{OutputPort}{__compressed_pair<DSPGraph::OutputPort *, std::__1::allocator<DSPGraph::OutputPort>>=^{OutputPort}}}{unordered_set<DSPGraph::Box *, std::__1::hash<DSPGraph::Box *>, std::__1::equal_to<DSPGraph::Box *>, std::__1::allocator<DSPGraph::Box *>>={__hash_table<DSPGraph::Box *, std::__1::hash<DSPGraph::Box *>, std::__1::equal_to<DSPGraph::Box *>, std::__1::allocator<DSPGraph::Box *>>={unique_ptr<std::__1::__hash_node_base<std::__1::__hash_node<DSPGraph::Box *, void *> *> *[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<DSPGraph::Box *, void *> *> *>>>={__compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<DSPGraph::Box *, void *> *> **, std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<DSPGraph::Box *, void *> *> *>>>=^^{__hash_node_base<std::__1::__hash_node<DSPGraph::Box *, void *> *>}{__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<DSPGraph::Box *, void *> *> *>>={__compressed_pair<unsigned long, std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<DSPGraph::Box *, void *> *> *>>=Q}}}}{__compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<DSPGraph::Box *, void *> *>, std::__1::allocator<std::__1::__hash_node<DSPGraph::Box *, void *>>>={__hash_node_base<std::__1::__hash_node<DSPGraph::Box *, void *> *>=^{__hash_node_base<std::__1::__hash_node<DSPGraph::Box *, void *> *>}}}{__compressed_pair<unsigned long, std::__1::hash<DSPGraph::Box *>>=Q}{__compressed_pair<float, std::__1::equal_to<DSPGraph::Box *>>=f}}}{vector<DSPGraph::ParameterTap, std::__1::allocator<DSPGraph::ParameterTap>>=^{ParameterTap}^{ParameterTap}{__compressed_pair<DSPGraph::ParameterTap *, std::__1::allocator<DSPGraph::ParameterTap>>=^{ParameterTap}}}{vector<DSPGraph::PropertyTap, std::__1::allocator<DSPGraph::PropertyTap>>=^{PropertyTap}^{PropertyTap}{__compressed_pair<DSPGraph::PropertyTap *, std::__1::allocator<DSPGraph::PropertyTap>>=^{PropertyTap}}}{vector<std::__1::unique_ptr<DSPGraph::FileRecorder, std::__1::default_delete<DSPGraph::FileRecorder>>, std::__1::allocator<std::__1::unique_ptr<DSPGraph::FileRecorder, std::__1::default_delete<DSPGraph::FileRecorder>>>>=^{unique_ptr<DSPGraph::FileRecorder, std::__1::default_delete<DSPGraph::FileRecorder>>}^{unique_ptr<DSPGraph::FileRecorder, std::__1::default_delete<DSPGraph::FileRecorder>>}{__compressed_pair<std::__1::unique_ptr<DSPGraph::FileRecorder, std::__1::default_delete<DSPGraph::FileRecorder>> *, std::__1::allocator<std::__1::unique_ptr<DSPGraph::FileRecorder, std::__1::default_delete<DSPGraph::FileRecorder>>>>=^{unique_ptr<DSPGraph::FileRecorder, std::__1::default_delete<DSPGraph::FileRecorder>>}}}{vector<std::__1::unique_ptr<DSPGraph::FileInjector, std::__1::default_delete<DSPGraph::FileInjector>>, std::__1::allocator<std::__1::unique_ptr<DSPGraph::FileInjector, std::__1::default_delete<DSPGraph::FileInjector>>>>=^{unique_ptr<DSPGraph::FileInjector, std::__1::default_delete<DSPGraph::FileInjector>>}^{unique_ptr<DSPGraph::FileInjector, std::__1::default_delete<DSPGraph::FileInjector>>}{__compressed_pair<std::__1::unique_ptr<DSPGraph::FileInjector, std::__1::default_delete<DSPGraph::FileInjector>> *, std::__1::allocator<std::__1::unique_ptr<DSPGraph::FileInjector, std::__1::default_delete<DSPGraph::FileInjector>>>>=^{unique_ptr<DSPGraph::FileInjector, std::__1::default_delete<DSPGraph::FileInjector>>}}}{mutex={_opaque_pthread_mutex_t=q[56c]}}{vector<std::__1::unique_ptr<DSPGraph::Analyzer, std::__1::default_delete<DSPGraph::Analyzer>>, std::__1::allocator<std::__1::unique_ptr<DSPGraph::Analyzer, std::__1::default_delete<DSPGraph::Analyzer>>>>=^{unique_ptr<DSPGraph::Analyzer, std::__1::default_delete<DSPGraph::Analyzer>>}^{unique_ptr<DSPGraph::Analyzer, std::__1::default_delete<DSPGraph::Analyzer>>}{__compressed_pair<std::__1::unique_ptr<DSPGraph::Analyzer, std::__1::default_delete<DSPGraph::Analyzer>> *, std::__1::allocator<std::__1::unique_ptr<DSPGraph::Analyzer, std::__1::default_delete<DSPGraph::Analyzer>>>>=^{unique_ptr<DSPGraph::Analyzer, std::__1::default_delete<DSPGraph::Analyzer>>}}}{Set<DSPGraph::Analyzer *>=^{Member}Q}{map<std::__1::pair<unsigned int, unsigned int>, long long, std::__1::less<std::__1::pair<unsigned int, unsigned int>>, std::__1::allocator<std::__1::pair<const std::__1::pair<unsigned int, unsigned int>, long long>>>={__tree<std::__1::__value_type<std::__1::pair<unsigned int, unsigned int>, long long>, std::__1::__map_value_compare<std::__1::pair<unsigned int, unsigned int>, std::__1::__value_type<std::__1::pair<unsigned int, unsigned int>, long long>, std::__1::less<std::__1::pair<unsigned int, unsigned int>>, true>, std::__1::allocator<std::__1::__value_type<std::__1::pair<unsigned int, unsigned int>, long long>>>=^{__tree_end_node<std::__1::__tree_node_base<void *> *>}{__compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *> *>, std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<std::__1::pair<unsigned int, unsigned int>, long long>, void *>>>={__tree_end_node<std::__1::__tree_node_base<void *> *>=^{__tree_node_base<void *>}}}{__compressed_pair<unsigned long, std::__1::__map_value_compare<std::__1::pair<unsigned int, unsigned int>, std::__1::__value_type<std::__1::pair<unsigned int, unsigned int>, long long>, std::__1::less<std::__1::pair<unsigned int, unsigned int>>, true>>=Q}}}{function<void (double)>={__value_func<void (double)>={type=[32C]}^{__base<void (double)>}}}{function<void (DSPGraph::Box *, unsigned int)>={__value_func<void (DSPGraph::Box *, unsigned int)>={type=[32C]}^{__base<void (DSPGraph::Box *, unsigned int)>}}}{function<void (DSPGraph::Box *, unsigned int)>={__value_func<void (DSPGraph::Box *, unsigned int)>={type=[32C]}^{__base<void (DSPGraph::Box *, unsigned int)>}}}BBBB{optional<unsigned long long>=(?=cQ)B}},R,N
.cxx_construct
_graph
UTF8String
dictionaryWithObjectsAndKeys:
errorWithDomain:code:userInfo:
currentHandler
handleFailureInMethod:object:file:lineNumber:description:
registerAudioUnits
initWithAudioFile:overlapFactor:
initWithAudioFile:
overlapFactor
setOverlapFactor:
_referenceAudioFile
_overlapFactor
Td,V_overlapFactor
processingFormat
length
setChannelIndex:
setPeakValue:
setPeakTime:
channelCount
_systemConfiguration
_referenceSampleRate
_channelCount
_framesProcessed
Td,R,V_overlapFactor
dictionaryWithObjects:forKeys:count:
initWithDictionary:resourcePath:
graphWithGraphInfo:
initWithPCMFormat:frameCapacity:
setFramePosition:
readIntoBuffer:error:
streamDescription
audioBufferList
createSystemAudioAnalyzer
setDelegate:
resume
endpoint
initWithListenerEndpoint:
setExportedInterface:
setExportedObject:
launchAsMachServiceWithName:
initWithMachServiceName:
launchWithResourceCoordinator:onXPCListener:
initWithResourceCoordinator:onListener:
launchDefaultServer
listener:shouldAcceptNewConnection:
connectLocally
_listener
_coordinator
initToConnectToMachServiceWithName:queue:
initWithMachServiceName:options:
setInterruptionHandler:
setInvalidationHandler:
newConnectionToMachServiceWithName:lostConnectionHandler:queue:
initWithConnectionGenerator:queue:
_handleLostConnection
setRemoteObjectInterface:
_connectionToServerWithInvalidationHandler:queue:
remoteObjectProxy
_remoteResourceCoordinatorWithInvalidationHandler:queue:
_createRemoteSystemAudioAnalyzerWithInvalidationHandler:queue:
defaultClient
createRemoteSystemAudioAnalyzerWithInvalidationHandler:queue:
_connectionToServerGenerator
_xpcConnectionToServer
_pendingInvalidationHandlers
userDefaults
boolForKey:
stringForKey:
integerForKey:
doubleForKey:
intValue
numberWithInt:
builtInMicrophoneAnalysisChannelNumber
instance
initWithSuiteName:
setUserDefaults:
registerDefaults:
enableSecondPassRecordingInDaemon
daemonRecordingPath
recordingDirectoryMaximumSizeBytes
recordingTimeToLiveSeconds
deleteRecordingsWithoutDetection
enableFileServer
fileServerRootDirectory
T@"NSString",R
Tq,R
Td,R
T@"NSNumber",R
_userDefaults
T@"NSUserDefaults",&,N,V_userDefaults
setFiles:
setServerBasePath:
setDispatchQueue:
files
serverBasePath
identifier
sendRequestID:request:destinationID:options:responseHandler:
activateWithCompletion:
invalidate
initWithFiles:serverBasePath:serverInfo:
_files
_serverBasePath
T@"NSArray",&,N,V_files
T@"NSString",&,N,V_serverBasePath
predictionFromFeatures:options:error:
modelDescription
T@"MLModelDescription",R
initWithMLCustomModel:modelDescription:
_customModel
_modelDescription
T@"MLModelDescription",R,V_modelDescription
initWithModel:
_model
_lock
xpcCreateSystemAudioAnalyzerWithCompletionHandler:
_receiver
detected
initWithIdentifier:
setDetected:
isEqualToDetectionResult:
numberWithBool:
decodeBoolForKey:
encodeBool:forKey:
_detected
_identifier
TB,N,V_detected
T@"NSString",R,N,V_identifier
createSecondPassController
twoPassConfiguration
T@"SNTwoPassConfiguration",R
analysisPassStrategy
Tq,R,N
initWithTwoPassConfiguration:createSecondPassControllerFunction:
_createSecondPassControllerFunction
_twoPassConfiguration
T@"SNTwoPassConfiguration",R,V_twoPassConfiguration
isEqualToSpeechUtteranceResult:
objectForKeyedSubscript:
stringByAppendingPathComponent:
path
text
includePaths
substitutions
setPath:
setText:
setIncludePaths:
setSubstitutions:
_path
_text
_includePaths
_substitutions
T@"NSString",&,N,V_path
T@"NSString",&,N,V_text
T@"NSArray",&,N,V_includePaths
T@"NSDictionary",&,N,V_substitutions
value
containsOnlyAUStrips:
_value
T@"NSString",R,N,V_path
T@"NSDictionary",R,N,V_value
resourcePath
_resourcePath
T@"NSString",R,N,V_resourcePath
initWithArray:resourcePath:
dspItems
setDspItems:
_dspItems
T@"NSArray",&,N,V_dspItems
applyAUStrip:toGraph:
name
applyPropertyStrip:toGraph:
compileText:withSubstitutions:includingPaths:
compileFile:withSubstitutions:includingPaths:
setAUStrip:
dictionaryWithContentsOfFile:
setPropertyStrip:withResourcePath:
graphWithConfiguration:
null
setObject:forKey:
sn_setSafeObject:forKey:
request:didProduceResult:
request:didFailWithError:
requestDidComplete:
initWithClient:queue:
selectAppropriateImplForThisProcess
initWithImpl:
configureNewAnalyzersToComputeInThisProcess:
addRequestInBackground:withObserver:
_impl
setFileItems:
initWithFileItems:
fileItems
_fileItems
T@"NSArray",&,N,V_fileItems
dictionary
initWithRemoteAnalyzerGenerator:queue:
_invalidateAnalyzer:
_invalidateActiveAnalyzer
copy
_removeAllRequests
allKeys
connectionLostError
sleepForTimeInterval:
_acquireSystemAudioAnalyzer
removeAllObjects
_addRequest:withObserver:
_removeRequest:
invalidateActiveAnalyzer
_registeredRequests
_analyzer
_generator
setIdentifier:
setIdsDeviceID:
setModel:
setName:
initWithIdentifier:idsDeviceID:model:name:
idsDeviceID
model
_idsDeviceID
_name
T@"NSString",&,N,V_identifier
T@"NSString",&,N,V_idsDeviceID
T@"NSString",&,N,V_model
T@"NSString",&,N,V_name
isEqualToSpeechEmotionRequest:
bytes
arrayWithObjects:count:
bundleForClass:
psrAudioProcessor:hasSpeakerVector:speakerVectorSize:processedAudioDurationMs:
psrAudioProcessor:finishedWithFinalSpeakerVector:speakerVectorSize:processedAudioDurationMs:
pathWithComponents:
initWithSampleRate:channelCount:
initWithDouble:
initWithUnsignedInt:
setChannelCount:
TI,N,V_channelCount
userSuppliedInputFeatureNames:
count
inputDescriptionsByName
firstObject
multiArrayConstraint
shape
predictedProbabilitiesName
predictedFeatureName
exceptionWithName:reason:userInfo:
feedbackConnections:
modelBlockSize:
outputProvider
featureValueForName:
dictionaryValue
arrayWithCapacity:
_init
doubleValue
compare:
sortedArrayUsingComparator:
subarrayWithRange:
setClassifications:
completeTimingInfoInResult:usingBox:modelBlockSize:
initWithMLModel:overlapFactor:error:
_modelBlockSize
_resultsToDiscardCount
_feedbackConnections
initWithMLModel:error:
isEqualToClassifySoundRequest:
modelSampleRate:orDefaultRate:
initForReading:commonFormat:interleaved:error:
initWithFormat:
framePosition
readIntoBuffer:frameCount:error:
sendErrorToAllRequests:
analyzeAudioBuffer:atAudioFramePosition:
frameLength
completeAnalysis
analyze
detailedDescription
initWithURL:error:
analyzeWithCompletionHandler:
cancelAnalysis
_audioFile
_streamAnalyzer
_wasCancelled
initWithRequestType:
decisionDelay
requestType
isEqualToDetectSpeechUtteranceRequest:
numberWithInteger:
_requestType
Tq,R,V_requestType
softVAD
hardVAD
TB,R,N
clientResultsFromProcessorResults:
clientSampleTimeFromSampleTime:fromBox:
clientSampleRate
dictionaryWithCapacity:
timeConversionDictionary
T@"NSDictionary",R
addEntriesFromDictionary:
valueForKey:
CMTimeValue
convertTime:fromBox:usingConverter:
valueWithCMTime:
setValue:forKey:
convertTimeRange:fromBox:usingConverter:
initWithAnalyzer:completionHandler:resultsHandler:timeConverter:
handleDSPGraphPostRenderCallbackFromBox:numFrames:
handleAnalyzerCompletion
handleAnalyzerError:
requestDidReturnError:
primeAnalyzerGraph
requestState
setRequestState:
_timeConverter
_resultsHandler
_completionHandler
_requestState
T@,R,N
Tq,N,V_requestState
initWithBox:fromGraph:
startRecordingPort:toFile:
stopRecordingPort:
startInjectingPort:toFile:shouldLoop:
stopInjectingPort:
numInputs
numOutputs
getParameterList:numParameterIDs:inScope:
getParameterInfo:forID:inScope:
getParameter:forID:scope:element:
hasParameter:scope:element:
setParameter:forID:scope:element:bufferOffset:
_box
T^{Box=^^?^{Graph}^{IsoGroup}^{Subset}{basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>={__compressed_pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>::__rep, std::__1::allocator<char>>={__rep=(?={__long=QQ*}{__short=(?=Cc)[23c]}{__raw=[3Q]})}}}q{vector<DSPGraph::InputPort, std::__1::allocator<DSPGraph::InputPort>>=^{InputPort}^{InputPort}{__compressed_pair<DSPGraph::InputPort *, std::__1::allocator<DSPGraph::InputPort>>=^{InputPort}}}{vector<DSPGraph::OutputPort, std::__1::allocator<DSPGraph::OutputPort>>=^{OutputPort}^{OutputPort}{__compressed_pair<DSPGraph::OutputPort *, std::__1::allocator<DSPGraph::OutputPort>>=^{OutputPort}}}{unordered_set<DSPGraph::Box *, std::__1::hash<DSPGraph::Box *>, std::__1::equal_to<DSPGraph::Box *>, std::__1::allocator<DSPGraph::Box *>>={__hash_table<DSPGraph::Box *, std::__1::hash<DSPGraph::Box *>, std::__1::equal_to<DSPGraph::Box *>, std::__1::allocator<DSPGraph::Box *>>={unique_ptr<std::__1::__hash_node_base<std::__1::__hash_node<DSPGraph::Box *, void *> *> *[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<DSPGraph::Box *, void *> *> *>>>={__compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<DSPGraph::Box *, void *> *> **, std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<DSPGraph::Box *, void *> *> *>>>=^^{__hash_node_base<std::__1::__hash_node<DSPGraph::Box *, void *> *>}{__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<DSPGraph::Box *, void *> *> *>>={__compressed_pair<unsigned long, std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<DSPGraph::Box *, void *> *> *>>=Q}}}}{__compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<DSPGraph::Box *, void *> *>, std::__1::allocator<std::__1::__hash_node<DSPGraph::Box *, void *>>>={__hash_node_base<std::__1::__hash_node<DSPGraph::Box *, void *> *>=^{__hash_node_base<std::__1::__hash_node<DSPGraph::Box *, void *> *>}}}{__compressed_pair<unsigned long, std::__1::hash<DSPGraph::Box *>>=Q}{__compressed_pair<float, std::__1::equal_to<DSPGraph::Box *>>=f}}}{vector<DSPGraph::ParameterTap, std::__1::allocator<DSPGraph::ParameterTap>>=^{ParameterTap}^{ParameterTap}{__compressed_pair<DSPGraph::ParameterTap *, std::__1::allocator<DSPGraph::ParameterTap>>=^{ParameterTap}}}{vector<DSPGraph::PropertyTap, std::__1::allocator<DSPGraph::PropertyTap>>=^{PropertyTap}^{PropertyTap}{__compressed_pair<DSPGraph::PropertyTap *, std::__1::allocator<DSPGraph::PropertyTap>>=^{PropertyTap}}}{vector<std::__1::unique_ptr<DSPGraph::FileRecorder, std::__1::default_delete<DSPGraph::FileRecorder>>, std::__1::allocator<std::__1::unique_ptr<DSPGraph::FileRecorder, std::__1::default_delete<DSPGraph::FileRecorder>>>>=^{unique_ptr<DSPGraph::FileRecorder, std::__1::default_delete<DSPGraph::FileRecorder>>}^{unique_ptr<DSPGraph::FileRecorder, std::__1::default_delete<DSPGraph::FileRecorder>>}{__compressed_pair<std::__1::unique_ptr<DSPGraph::FileRecorder, std::__1::default_delete<DSPGraph::FileRecorder>> *, std::__1::allocator<std::__1::unique_ptr<DSPGraph::FileRecorder, std::__1::default_delete<DSPGraph::FileRecorder>>>>=^{unique_ptr<DSPGraph::FileRecorder, std::__1::default_delete<DSPGraph::FileRecorder>>}}}{vector<std::__1::unique_ptr<DSPGraph::FileInjector, std::__1::default_delete<DSPGraph::FileInjector>>, std::__1::allocator<std::__1::unique_ptr<DSPGraph::FileInjector, std::__1::default_delete<DSPGraph::FileInjector>>>>=^{unique_ptr<DSPGraph::FileInjector, std::__1::default_delete<DSPGraph::FileInjector>>}^{unique_ptr<DSPGraph::FileInjector, std::__1::default_delete<DSPGraph::FileInjector>>}{__compressed_pair<std::__1::unique_ptr<DSPGraph::FileInjector, std::__1::default_delete<DSPGraph::FileInjector>> *, std::__1::allocator<std::__1::unique_ptr<DSPGraph::FileInjector, std::__1::default_delete<DSPGraph::FileInjector>>>>=^{unique_ptr<DSPGraph::FileInjector, std::__1::default_delete<DSPGraph::FileInjector>>}}}{mutex={_opaque_pthread_mutex_t=q[56c]}}{vector<std::__1::unique_ptr<DSPGraph::Analyzer, std::__1::default_delete<DSPGraph::Analyzer>>, std::__1::allocator<std::__1::unique_ptr<DSPGraph::Analyzer, std::__1::default_delete<DSPGraph::Analyzer>>>>=^{unique_ptr<DSPGraph::Analyzer, std::__1::default_delete<DSPGraph::Analyzer>>}^{unique_ptr<DSPGraph::Analyzer, std::__1::default_delete<DSPGraph::Analyzer>>}{__compressed_pair<std::__1::unique_ptr<DSPGraph::Analyzer, std::__1::default_delete<DSPGraph::Analyzer>> *, std::__1::allocator<std::__1::unique_ptr<DSPGraph::Analyzer, std::__1::default_delete<DSPGraph::Analyzer>>>>=^{unique_ptr<DSPGraph::Analyzer, std::__1::default_delete<DSPGraph::Analyzer>>}}}{Set<DSPGraph::Analyzer *>=^{Member}Q}{map<std::__1::pair<unsigned int, unsigned int>, long long, std::__1::less<std::__1::pair<unsigned int, unsigned int>>, std::__1::allocator<std::__1::pair<const std::__1::pair<unsigned int, unsigned int>, long long>>>={__tree<std::__1::__value_type<std::__1::pair<unsigned int, unsigned int>, long long>, std::__1::__map_value_compare<std::__1::pair<unsigned int, unsigned int>, std::__1::__value_type<std::__1::pair<unsigned int, unsigned int>, long long>, std::__1::less<std::__1::pair<unsigned int, unsigned int>>, true>, std::__1::allocator<std::__1::__value_type<std::__1::pair<unsigned int, unsigned int>, long long>>>=^{__tree_end_node<std::__1::__tree_node_base<void *> *>}{__compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *> *>, std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<std::__1::pair<unsigned int, unsigned int>, long long>, void *>>>={__tree_end_node<std::__1::__tree_node_base<void *> *>=^{__tree_node_base<void *>}}}{__compressed_pair<unsigned long, std::__1::__map_value_compare<std::__1::pair<unsigned int, unsigned int>, std::__1::__value_type<std::__1::pair<unsigned int, unsigned int>, long long>, std::__1::less<std::__1::pair<unsigned int, unsigned int>>, true>>=Q}}}{function<void (double)>={__value_func<void (double)>={type=[32C]}^{__base<void (double)>}}}{function<void (DSPGraph::Box *, unsigned int)>={__value_func<void (DSPGraph::Box *, unsigned int)>={type=[32C]}^{__base<void (DSPGraph::Box *, unsigned int)>}}}{function<void (DSPGraph::Box *, unsigned int)>={__value_func<void (DSPGraph::Box *, unsigned int)>={type=[32C]}^{__base<void (DSPGraph::Box *, unsigned int)>}}}BBBB{optional<unsigned long long>=(?=cQ)B}},R,N,V_box
T@"NSString",R,N
idsDeviceIdentifier
setLocalDeviceUpdatedHandler:
setDeviceLostHandler:
setDeviceFoundHandler:
setDeviceChangedHandler:
setWithArray:
valueForEntitlement:error:
boolValue
isCurrentProcessEntitledToHostDaemon
createFileServer
currentRunLoop
isInternalBuild
initWithRootDirectory:
_fileServer
setInterface:forSelector:argumentIndex:ofReply:
strongToWeakObjectsMapTable
sharedLockedModelWithKey:orCreateNewModelWithWithFunction:
_vendedModels
createModelOfClass:
sharedLockedModelOfClass:
request
setRequest:
resultsHandler
setResultsHandler:
completionHandler
setCompletionHandler:
analyzerHost
setAnalyzerHost:
sharedProcessor
setSharedProcessor:
configured
setConfigured:
configurationError
setConfigurationError:
_configured
_request
_analyzerHost
_sharedProcessor
_configurationError
T@"<SNAnalyzerCreating>",&,N,V_request
T@?,C,N,V_resultsHandler
T@?,C,N,V_completionHandler
T@"SNAnalyzerHost",&,N,V_analyzerHost
T@"<SNProcessing>",&,N,V_sharedProcessor
TB,N,V_configured
T@"NSError",&,N,V_configurationError
isFormatPCM:
updateProcessingTreeFormat:
stopRecording
dealloc
removeObject:
addRequest:completionHandler:resultsHandler:error:
addResult:
indexOfObjectIdenticalTo:
completionHandlerWithClientCompletionHandler:forRequest:
resultsHandlerWithClientResultsHandler:forRequest:
createAnalyzerInfoForRequest:completionHandler:resultsHandler:error:
configureAnalyzer:withFormat:
arrayByAddingObject:
arrayWithArray:
removeObjectAtIndex:
removeAnalyzerInfoForRequest:
configureAnalysisTreeWithFormat:
sharedProcessorWithConfiguration:
updateTreeProcessingContexts
format
splitBuffer:intoBuffersWithFrameCount:
handleAnalyzeAudioBufferError
date
setDateFormat:
stringFromDate:
stringByAppendingPathExtension:
initWithDirectoryPath:fileNameWithoutExtension:dateString:soundIdentifier:
initWithDSPGraph:
stopRecordingBoxesInGraph:
directoryPath
fileNameWithoutExtension
audioFileFrameCount:
detectionResults
detectionCountInResults:
defaultManager
removeItemAtPath:error:
writeResultsToFileWithAudioFrameCount:error:
analyzerInfoForRequest:
analyzeAudioBufferList:withAudioFrameCount:atAudioFramePosition:
writeDSPGraphDotFilesToDirectory:
startRecordingToDirectory:requestDescription:error:
_processorCache
_processingContexts
_processingTree
_currentFormat
_analyzerInfos
_resultsLogger
_shouldRebuildProcessingTree
startRecordingFirstBoxInGraph:toDirectory:withFileName:error:
initWithInputSensitivity:
isEqualToMeasureLKFSRequest:
inputSensitivity
_inputSensitivity
Tf,R,N,V_inputSensitivity
setQueryPath:
setServiceType:
setDestinationID:
queryPath
performQuery:
initWithServerInfo:queryPath:
_queryPath
T@"NSString",&,N,V_queryPath
mutableAudioBufferList
setFrameLength:
frameCapacity
vggishFrontEndProcessingInputShape
vggishFrontEndProcessingOutputShape
constraintWithShape:dataType:
featureDescriptionWithName:type:optional:constraints:
initWithInputDescriptions:outputDescriptions:predictedFeatureName:predictedProbabilitiesName:metadata:
metadata
floatValue
allValues
objectAtIndexedSubscript:
numberOfElements:
outputDescriptionsByName
parseFeedbackConnectionsString:
destinationFeatureName
containsObject:
sourceFeatureName
userSuppliedFeatureNames:direction:
subtractSet:from:
minusSet:
allObjects
whitespaceAndNewlineCharacterSet
componentsSeparatedByCharactersInSet:
componentsJoinedByString:
componentsSeparatedByString:
initWithSourceFeatureName:destinationFeatureName:
processInfo
processName
stringByReplacingOccurrencesOfString:withString:
stringByAppendingString:
_deleteWAVAndTextFilesInDirectory:createdBeforeDate:withRemainingDirectoryByteSizeLessThan:
contentsOfDirectoryAtPath:error:
mutableCopy
predicateWithFormat:
filterUsingPredicate:
fileCreationDate:
sortUsingComparator:
diskSpaceRemainingBytesContainingDirectory:
unsignedLongLongValue
fileSizeBytes:
stringByDeletingPathExtension
attributesOfItemAtPath:error:
attributesOfFileSystemForPath:error:
fileURLWithPath:
initForReading:error:
valueForEntitlement:fromTask:error:
silenceUnfilledFramesInBuffer:
copyAudioBufferList:to:frameCount:bytesPerFrame:
vggishFeatureEmbeddingInputShape
vggishFeatureEmbeddingOutputShape
vggishFrontEndProcessingModelDescription
modelInputBlockSize:
modelOutputBlockSize:
userSuppliedOutputFeatureNames:
isRunningInDaemon
loggingPrefixForRequest:
deleteWAVAndTextFilesInDirectory:createdBeforeDate:withRemainingDirectoryByteSizeLessThan:
automaticallyNotifiesObserversForKey:
willChangeValueForKey:
didChangeValueForKey:
results
clearResults
errors
clearErrors
clearCompleteCount
completeCount
_results
_errors
_completeCount
T@"NSArray",R,N
Tq,R,N,V_completeCount
initWithCompletionHandler:resultsHandler:
_sourceFeatureName
_destinationFeatureName
T@"NSString",R,V_sourceFeatureName
T@"NSString",R,V_destinationFeatureName
initWithStreamDescription:
setVariableSliceDuration:forSampleRate:
sliceDurationInSamples
initialized
configure
unconfigure
initialize
uninitialize
reset
getParameter:forID:
hasParameter:
setParameter:forID:
getPropertySize:isWritable:forID:
getProperty:withSize:forID:
setProperty:withSize:forID:
boxWithName:
boxes
numberOfInputs
numberOfOutputs
writeDotFileToPath:
T{shared_ptr<DSPGraph::Graph>=^{Graph}^{__shared_weak_count}},R,N,V_graph
T@"NSString",C,N
T@"NSSet",R,N
type
initWithShape:dataType:error:
featureValueWithMultiArray:
featureNames
initWithFeatureDescription:allInputFeatureNames:
setFeatureValue:forFeatureName:
input
setInput:
_featureDescription
_featureCache
_allInputFeatureNames
_input
T@"MLMultiArray",&,N,V_input
feedbackConnections
setFeedbackConnections:
inputProvider
setInputProvider:
setOutputProvider:
_inputProvider
_outputProvider
T@"<SNMLModel>",&,N,V_model
T@"NSArray",&,N,V_feedbackConnections
T@"DSPGMLInputProvider",&,N,V_inputProvider
T@"<MLFeatureProvider>",&,N,V_outputProvider
modelWithContentsOfURL:error:
dataType
dataPointer
multiArrayValue
filename
setFilename:
fileSize
setFileSize:
itemURL
setItemURL:
initWithFileItem:
_filename
_fileSize
_itemURL
T@"NSString",&,N,V_filename
Tq,N,V_fileSize
T@"NSURL",&,N,V_itemURL
setServerFilePaths:
setLocalDestinationPath:
deregisterRequestID:
registerRequestID:options:handler:
getIdentitiesWithCompletion:
edPKData
serverFilePaths
flags
setFlags:
prepareTemplateAndReturnError:
localDestinationPath
fileURLWithPath:isDirectory:
setTemporaryDirectoryURL:
setReceivedItemHandler:
setPeerPublicKey:
setTargetID:
activate
initWithServerInfo:serverBasePath:serverFilePaths:localDestinationPath:
_serverFilePaths
_localDestinationPath
T@"NSArray",&,N,V_serverFilePaths
T@"NSString",&,N,V_localDestinationPath
initWithFirstPassRequest:secondPassRequest:historicalDataAmount:
firstPassRequest
secondPassRequest
historicalDataAmount
_firstPassRequest
_secondPassRequest
_historicalDataAmount
T@"<SNRequest>",R,V_firstPassRequest
T@"<SNRequest>",R,V_secondPassRequest
Td,R,V_historicalDataAmount
handleAudioBufferCallbackForQueue:buffer:startTime:numberPacketDescriptions:packetDescriptions:
_stop
floatChannelData
initWithAudioTimeStamp:sampleRate:
initWithFormat:audioQueueConfiguration:
startWithBufferHandler:
_audioQueue
_recordFormat
_running
_audioQueueConfiguration
_clientBufferHandler
_transaction
anyObject
initWithDictionary:error:
isAllowedShape:error:
preProcessCallback
initWithModelDescription:expectedInputShape:expectedOutputShape:graph:error:
setPreProcessCallback:
_inputConstraint
_outputConstraint
_scratchFloatSpace
_modelOutput
_preProcessCallback
T@?,C,N,V_preProcessCallback
initWithModelDescription:parameterDictionary:error:
predictionsFromBatch:options:error:
removeRequestAsync:
_addRequest:completionHandler:resultsHandler:error:
_addTwoPassRequest:completionHandler:resultsHandler:error:
_addSinglePassRequest:completionHandler:resultsHandler:error:
handleBeginSecondPassForRequest:secondPassController:completionHandler:resultsHandler:
setBeginSecondPassHandler:
handleEndSecondPassForRequest:
setEndSecondPassHandler:
firstPassDidProduceResult:
dateByAddingTimeInterval:
valueWithNonretainedObject:
shouldRecordSecondPass
secondPassRecordingPath
deleteWAVAndTextFilesCreatedBeforeLastWeekInDirectory:
secondPassDidProduceResult:
_removeTwoPassRequest:
_removeSinglePassRequest:
_analyzeAudioBuffer:atAudioFramePosition:
string
appendString:
_analyzerQueue
_firstPassAnalyzer
_secondPassAnalyzers
_ringBuffer
_ringBufferWriteBufferList
createUltronResultsDictionaryFromDetectionResults:
createUltronFinalDictionaryWithDetectionResults:dateString:fileNameWithoutExtension:soundIdenfifier:frameCount:
writeDictionaryAsJSON:fileNameWithoutExtension:directoryPath:error:
numberWithLongLong:
dataWithJSONObject:options:error:
createDirectoryAtPath:withIntermediateDirectories:attributes:error:
writeToFile:options:error:
_dateString
_soundIdentifier
_wroteResults
_startingTime
_detectionResults
_directoryPath
_fileNameWithoutExtension
T@"NSString",R,V_directoryPath
T@"NSString",R,V_fileNameWithoutExtension
T@"NSArray",R,V_detectionResults
setLink:
link
setProgressHandler:
rootDirectory
addItem:
finish
server
createDefaultServer
setServer:
setRootDirectory:
_server
_link
_rootDirectory
T@"CUFileServer",&,N,V_server
T@"RPCompanionLinkClient",&,N,V_link
T@"NSString",&,N,V_rootDirectory
setRootDirectoryURL:
pathExtension
boxName
setBoxName:
busIndex
setBusIndex:
_boxName
_busIndex
T@"NSString",&,V_boxName
Tq,V_busIndex
T@"NSString",&,V_fileName
startRecordingWithBoxRecordingInfos:inGraph:toDirectory:error:
startRecordingBoxes:inGraph:toDirectory:error:
startInjectingBoxes:inGraph:error:
stopInjectingBoxesInGraph:
initWithSampleRate:blockSize:computationalDutyCycle:graphIsDeadEnded:shouldThrowException:
computationalDutyCycle
setComputationalDutyCycle:
graphIsDeadEnded
setGraphIsDeadEnded:
shouldThrowException
setShouldThrowException:
isEqualToNullRequest:
_graphIsDeadEnded
_shouldThrowException
_computationalDutyCycle
Td,N,V_computationalDutyCycle
TB,N,V_graphIsDeadEnded
TB,N,V_shouldThrowException
initWithCommonFormat:sampleRate:channels:interleaved:
defaultCenter
handleAVAudioSessionInterruption:
addObserver:selector:name:object:
handleAVAudioSessionRouteChange:
handleAVAudioSessionMediaServicesLost:
handleAVAudioSessionMediaServicesReset:
_addRequest:withObserver:error:
indexOfObject:
startAudio
stopAudio
sampleTime
handleAudioStreamInterrupted
_dispatchQueue
_recordingQueue
_recordingState
_clientStartedAnalysis
stringMapFromStringDictionary:
stringVectorFromStringArray:
_interpreter
classifications
isEqualToClassificationResult:
decodeObjectOfClasses:forKey:
_classifications
T@"NSArray",C,N,V_classifications
isEqualToClassification:
T@"NSString",C,N,V_identifier
isEqualToSignalThresholdResult:
beginSecondPassHandler
endSecondPassHandler
T@?,C
initWithSecondPassBeginThreshold:secondPassEndThreshold:secondPassHangoverPeriod:firstPassResultToComparableFunction:secondPassResultToComparableFunction:
_secondPassBeginThreshold
_secondPassEndThreshold
_secondPassHangoverPeriod
_secondPassTriggerTime
_firstResultBelowEndThresholdStartTime
_secondPassIsActive
_firstPassResultToComparableFunction
_secondPassResultToComparableFunction
_beginSecondPassHandler
_endSecondPassHandler
T@?,C,V_beginSecondPassHandler
T@?,C,V_endSecondPassHandler
audioProcessorWithConfiguration:
createAudioProcessorWithConfiguration:
createProcessorWithError:
_activeProcessorsCache
isEqualToNullResult:
peakTime
peakValue
channelIndex
_peakValue
_channelIndex
_peakTime
Td,N,V_peakValue
T{?=qiIq},N,V_peakTime
Tq,N,V_channelIndex
T{?={?=qiIq}{?=qiIq}},N,VtimeRange
remoteObjectProxyWithErrorHandler:
_remoteObservers
B16@0:8
@24@0:8^{_NSZone=}16
v24@0:8@16
@24@0:8@16
v24@0:8@"NSCoder"16
@24@0:8@"NSCoder"16
B24@0:8@16
#16@0:8
@16@0:8
@24@0:8:16
@32@0:8:16@24
@40@0:8:16@24@32
B24@0:8#16
B24@0:8:16
Vv16@0:8
Q16@0:8
^{_NSZone=}16@0:8
B24@0:8@"Protocol"16
@"NSString"16@0:8
{?={?=qiIq}{?=qiIq}}16@0:8
v64@0:8{?={?=qiIq}{?=qiIq}}16
f16@0:8
v20@0:8f16
{?="start"{?="value"q"timescale"i"flags"I"epoch"q}"duration"{?="value"q"timescale"i"flags"I"epoch"q}}
@40@0:8@16@24d32
@40@0:8@"NSData"16@"NSDictionary"24d32
@"NSData"16@0:8
d16@0:8
v24@0:8d16
@32@0:8@16Q24
v24@0:8Q16
v16@0:8
@"SNFileServerInfo"
v40@0:8@16@24@?32
v32@0:8@16@?24
v40@0:8@"<SNRequest>"16@"<SNResult>"24@?<v@?>32
v40@0:8@"<SNRequest>"16@"NSError"24@?<v@?>32
v32@0:8@"<SNRequest>"16@?<v@?>24
B40@0:8@16@24^@32
B40@0:8@"<SNRequest>"16@"<SNResultsObserving>"24^@32
v24@0:8@"<SNRequest>"16
@"<SNSystemAudioAnalyzerXPCProtocol><NSXPCProxyCreating>"
I16@0:8
v20@0:8I16
@?16@0:8
v24@0:8@?16
@20@0:8I16
v24@0:8^{OpaqueAudioQueue=}16
v28@0:8I16^{OpaqueAudioQueue=}20
@32@0:8@16@24
@"NSString"
@"NSError"
@?40@0:8@16@?24@?32
@?<v@?>40@0:8@"NSObject<OS_dispatch_queue>"16@?<v@?@"NSError">24@?<v@?@"<SNResult>">32
v40@0:8@16@?24@?32
v32@0:8@16@24
@"NSMutableArray"
@"NSMutableDictionary"
@"NSObject<OS_dispatch_queue>"
@24@0:8^@16
@"<SNAnalyzing>"24@0:8^@16
@"SNDetectSignalThresholdRequestImpl"
B32@0:8@16^@24
{shared_ptr<DSPGraph::Graph>=^{Graph}^{__shared_weak_count}}16@0:8
B32@0:8@"SNSystemConfiguration"16^@24
@28@0:8^{Box=^^?^{Graph}^{IsoGroup}^{Subset}{basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>={__compressed_pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>::__rep, std::__1::allocator<char>>={__rep=(?={__long=QQ*}{__short=(?=Cc)[23c]}{__raw=[3Q]})}}}q{vector<DSPGraph::InputPort, std::__1::allocator<DSPGraph::InputPort>>=^{InputPort}^{InputPort}{__compressed_pair<DSPGraph::InputPort *, std::__1::allocator<DSPGraph::InputPort>>=^{InputPort}}}{vector<DSPGraph::OutputPort, std::__1::allocator<DSPGraph::OutputPort>>=^{OutputPort}^{OutputPort}{__compressed_pair<DSPGraph::OutputPort *, std::__1::allocator<DSPGraph::OutputPort>>=^{OutputPort}}}{unordered_set<DSPGraph::Box *, std::__1::hash<DSPGraph::Box *>, std::__1::equal_to<DSPGraph::Box *>, std::__1::allocator<DSPGraph::Box *>>={__hash_table<DSPGraph::Box *, std::__1::hash<DSPGraph::Box *>, std::__1::equal_to<DSPGraph::Box *>, std::__1::allocator<DSPGraph::Box *>>={unique_ptr<std::__1::__hash_node_base<std::__1::__hash_node<DSPGraph::Box *, void *> *> *[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<DSPGraph::Box *, void *> *> *>>>={__compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<DSPGraph::Box *, void *> *> **, std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<DSPGraph::Box *, void *> *> *>>>=^^{__hash_node_base<std::__1::__hash_node<DSPGraph::Box *, void *> *>}{__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<DSPGraph::Box *, void *> *> *>>={__compressed_pair<unsigned long, std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<DSPGraph::Box *, void *> *> *>>=Q}}}}{__compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<DSPGraph::Box *, void *> *>, std::__1::allocator<std::__1::__hash_node<DSPGraph::Box *, void *>>>={__hash_node_base<std::__1::__hash_node<DSPGraph::Box *, void *> *>=^{__hash_node_base<std::__1::__hash_node<DSPGraph::Box *, void *> *>}}}{__compressed_pair<unsigned long, std::__1::hash<DSPGraph::Box *>>=Q}{__compressed_pair<float, std::__1::equal_to<DSPGraph::Box *>>=f}}}{vector<DSPGraph::ParameterTap, std::__1::allocator<DSPGraph::ParameterTap>>=^{ParameterTap}^{ParameterTap}{__compressed_pair<DSPGraph::ParameterTap *, std::__1::allocator<DSPGraph::ParameterTap>>=^{ParameterTap}}}{vector<DSPGraph::PropertyTap, std::__1::allocator<DSPGraph::PropertyTap>>=^{PropertyTap}^{PropertyTap}{__compressed_pair<DSPGraph::PropertyTap *, std::__1::allocator<DSPGraph::PropertyTap>>=^{PropertyTap}}}{vector<std::__1::unique_ptr<DSPGraph::FileRecorder, std::__1::default_delete<DSPGraph::FileRecorder>>, std::__1::allocator<std::__1::unique_ptr<DSPGraph::FileRecorder, std::__1::default_delete<DSPGraph::FileRecorder>>>>=^{unique_ptr<DSPGraph::FileRecorder, std::__1::default_delete<DSPGraph::FileRecorder>>}^{unique_ptr<DSPGraph::FileRecorder, std::__1::default_delete<DSPGraph::FileRecorder>>}{__compressed_pair<std::__1::unique_ptr<DSPGraph::FileRecorder, std::__1::default_delete<DSPGraph::FileRecorder>> *, std::__1::allocator<std::__1::unique_ptr<DSPGraph::FileRecorder, std::__1::default_delete<DSPGraph::FileRecorder>>>>=^{unique_ptr<DSPGraph::FileRecorder, std::__1::default_delete<DSPGraph::FileRecorder>>}}}{vector<std::__1::unique_ptr<DSPGraph::FileInjector, std::__1::default_delete<DSPGraph::FileInjector>>, std::__1::allocator<std::__1::unique_ptr<DSPGraph::FileInjector, std::__1::default_delete<DSPGraph::FileInjector>>>>=^{unique_ptr<DSPGraph::FileInjector, std::__1::default_delete<DSPGraph::FileInjector>>}^{unique_ptr<DSPGraph::FileInjector, std::__1::default_delete<DSPGraph::FileInjector>>}{__compressed_pair<std::__1::unique_ptr<DSPGraph::FileInjector, std::__1::default_delete<DSPGraph::FileInjector>> *, std::__1::allocator<std::__1::unique_ptr<DSPGraph::FileInjector, std::__1::default_delete<DSPGraph::FileInjector>>>>=^{unique_ptr<DSPGraph::FileInjector, std::__1::default_delete<DSPGraph::FileInjector>>}}}{mutex={_opaque_pthread_mutex_t=q[56c]}}{vector<std::__1::unique_ptr<DSPGraph::Analyzer, std::__1::default_delete<DSPGraph::Analyzer>>, std::__1::allocator<std::__1::unique_ptr<DSPGraph::Analyzer, std::__1::default_delete<DSPGraph::Analyzer>>>>=^{unique_ptr<DSPGraph::Analyzer, std::__1::default_delete<DSPGraph::Analyzer>>}^{unique_ptr<DSPGraph::Analyzer, std::__1::default_delete<DSPGraph::Analyzer>>}{__compressed_pair<std::__1::unique_ptr<DSPGraph::Analyzer, std::__1::default_delete<DSPGraph::Analyzer>> *, std::__1::allocator<std::__1::unique_ptr<DSPGraph::Analyzer, std::__1::default_delete<DSPGraph::Analyzer>>>>=^{unique_ptr<DSPGraph::Analyzer, std::__1::default_delete<DSPGraph::Analyzer>>}}}{Set<DSPGraph::Analyzer *>=^{Member}Q}{map<std::__1::pair<unsigned int, unsigned int>, long long, std::__1::less<std::__1::pair<unsigned int, unsigned int>>, std::__1::allocator<std::__1::pair<const std::__1::pair<unsigned int, unsigned int>, long long>>>={__tree<std::__1::__value_type<std::__1::pair<unsigned int, unsigned int>, long long>, std::__1::__map_value_compare<std::__1::pair<unsigned int, unsigned int>, std::__1::__value_type<std::__1::pair<unsigned int, unsigned int>, long long>, std::__1::less<std::__1::pair<unsigned int, unsigned int>>, true>, std::__1::allocator<std::__1::__value_type<std::__1::pair<unsigned int, unsigned int>, long long>>>=^{__tree_end_node<std::__1::__tree_node_base<void *> *>}{__compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *> *>, std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<std::__1::pair<unsigned int, unsigned int>, long long>, void *>>>={__tree_end_node<std::__1::__tree_node_base<void *> *>=^{__tree_node_base<void *>}}}{__compressed_pair<unsigned long, std::__1::__map_value_compare<std::__1::pair<unsigned int, unsigned int>, std::__1::__value_type<std::__1::pair<unsigned int, unsigned int>, long long>, std::__1::less<std::__1::pair<unsigned int, unsigned int>>, true>>=Q}}}{function<void (double)>={__value_func<void (double)>={type=[32C]}^{__base<void (double)>}}}{function<void (DSPGraph::Box *, unsigned int)>={__value_func<void (DSPGraph::Box *, unsigned int)>={type=[32C]}^{__base<void (DSPGraph::Box *, unsigned int)>}}}{function<void (DSPGraph::Box *, unsigned int)>={__value_func<void (DSPGraph::Box *, unsigned int)>={type=[32C]}^{__base<void (DSPGraph::Box *, unsigned int)>}}}BBBB{optional<unsigned long long>=(?=cQ)B}}16i24
^{Box=^^?^{Graph}^{IsoGroup}^{Subset}{basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>={__compressed_pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>::__rep, std::__1::allocator<char>>={__rep=(?={__long=QQ*}{__short=(?=Cc)[23c]}{__raw=[3Q]})}}}q{vector<DSPGraph::InputPort, std::__1::allocator<DSPGraph::InputPort>>=^{InputPort}^{InputPort}{__compressed_pair<DSPGraph::InputPort *, std::__1::allocator<DSPGraph::InputPort>>=^{InputPort}}}{vector<DSPGraph::OutputPort, std::__1::allocator<DSPGraph::OutputPort>>=^{OutputPort}^{OutputPort}{__compressed_pair<DSPGraph::OutputPort *, std::__1::allocator<DSPGraph::OutputPort>>=^{OutputPort}}}{unordered_set<DSPGraph::Box *, std::__1::hash<DSPGraph::Box *>, std::__1::equal_to<DSPGraph::Box *>, std::__1::allocator<DSPGraph::Box *>>={__hash_table<DSPGraph::Box *, std::__1::hash<DSPGraph::Box *>, std::__1::equal_to<DSPGraph::Box *>, std::__1::allocator<DSPGraph::Box *>>={unique_ptr<std::__1::__hash_node_base<std::__1::__hash_node<DSPGraph::Box *, void *> *> *[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<DSPGraph::Box *, void *> *> *>>>={__compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<DSPGraph::Box *, void *> *> **, std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<DSPGraph::Box *, void *> *> *>>>=^^{__hash_node_base<std::__1::__hash_node<DSPGraph::Box *, void *> *>}{__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<DSPGraph::Box *, void *> *> *>>={__compressed_pair<unsigned long, std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<DSPGraph::Box *, void *> *> *>>=Q}}}}{__compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<DSPGraph::Box *, void *> *>, std::__1::allocator<std::__1::__hash_node<DSPGraph::Box *, void *>>>={__hash_node_base<std::__1::__hash_node<DSPGraph::Box *, void *> *>=^{__hash_node_base<std::__1::__hash_node<DSPGraph::Box *, void *> *>}}}{__compressed_pair<unsigned long, std::__1::hash<DSPGraph::Box *>>=Q}{__compressed_pair<float, std::__1::equal_to<DSPGraph::Box *>>=f}}}{vector<DSPGraph::ParameterTap, std::__1::allocator<DSPGraph::ParameterTap>>=^{ParameterTap}^{ParameterTap}{__compressed_pair<DSPGraph::ParameterTap *, std::__1::allocator<DSPGraph::ParameterTap>>=^{ParameterTap}}}{vector<DSPGraph::PropertyTap, std::__1::allocator<DSPGraph::PropertyTap>>=^{PropertyTap}^{PropertyTap}{__compressed_pair<DSPGraph::PropertyTap *, std::__1::allocator<DSPGraph::PropertyTap>>=^{PropertyTap}}}{vector<std::__1::unique_ptr<DSPGraph::FileRecorder, std::__1::default_delete<DSPGraph::FileRecorder>>, std::__1::allocator<std::__1::unique_ptr<DSPGraph::FileRecorder, std::__1::default_delete<DSPGraph::FileRecorder>>>>=^{unique_ptr<DSPGraph::FileRecorder, std::__1::default_delete<DSPGraph::FileRecorder>>}^{unique_ptr<DSPGraph::FileRecorder, std::__1::default_delete<DSPGraph::FileRecorder>>}{__compressed_pair<std::__1::unique_ptr<DSPGraph::FileRecorder, std::__1::default_delete<DSPGraph::FileRecorder>> *, std::__1::allocator<std::__1::unique_ptr<DSPGraph::FileRecorder, std::__1::default_delete<DSPGraph::FileRecorder>>>>=^{unique_ptr<DSPGraph::FileRecorder, std::__1::default_delete<DSPGraph::FileRecorder>>}}}{vector<std::__1::unique_ptr<DSPGraph::FileInjector, std::__1::default_delete<DSPGraph::FileInjector>>, std::__1::allocator<std::__1::unique_ptr<DSPGraph::FileInjector, std::__1::default_delete<DSPGraph::FileInjector>>>>=^{unique_ptr<DSPGraph::FileInjector, std::__1::default_delete<DSPGraph::FileInjector>>}^{unique_ptr<DSPGraph::FileInjector, std::__1::default_delete<DSPGraph::FileInjector>>}{__compressed_pair<std::__1::unique_ptr<DSPGraph::FileInjector, std::__1::default_delete<DSPGraph::FileInjector>> *, std::__1::allocator<std::__1::unique_ptr<DSPGraph::FileInjector, std::__1::default_delete<DSPGraph::FileInjector>>>>=^{unique_ptr<DSPGraph::FileInjector, std::__1::default_delete<DSPGraph::FileInjector>>}}}{mutex={_opaque_pthread_mutex_t=q[56c]}}{vector<std::__1::unique_ptr<DSPGraph::Analyzer, std::__1::default_delete<DSPGraph::Analyzer>>, std::__1::allocator<std::__1::unique_ptr<DSPGraph::Analyzer, std::__1::default_delete<DSPGraph::Analyzer>>>>=^{unique_ptr<DSPGraph::Analyzer, std::__1::default_delete<DSPGraph::Analyzer>>}^{unique_ptr<DSPGraph::Analyzer, std::__1::default_delete<DSPGraph::Analyzer>>}{__compressed_pair<std::__1::unique_ptr<DSPGraph::Analyzer, std::__1::default_delete<DSPGraph::Analyzer>> *, std::__1::allocator<std::__1::unique_ptr<DSPGraph::Analyzer, std::__1::default_delete<DSPGraph::Analyzer>>>>=^{unique_ptr<DSPGraph::Analyzer, std::__1::default_delete<DSPGraph::Analyzer>>}}}{Set<DSPGraph::Analyzer *>=^{Member}Q}{map<std::__1::pair<unsigned int, unsigned int>, long long, std::__1::less<std::__1::pair<unsigned int, unsigned int>>, std::__1::allocator<std::__1::pair<const std::__1::pair<unsigned int, unsigned int>, long long>>>={__tree<std::__1::__value_type<std::__1::pair<unsigned int, unsigned int>, long long>, std::__1::__map_value_compare<std::__1::pair<unsigned int, unsigned int>, std::__1::__value_type<std::__1::pair<unsigned int, unsigned int>, long long>, std::__1::less<std::__1::pair<unsigned int, unsigned int>>, true>, std::__1::allocator<std::__1::__value_type<std::__1::pair<unsigned int, unsigned int>, long long>>>=^{__tree_end_node<std::__1::__tree_node_base<void *> *>}{__compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *> *>, std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<std::__1::pair<unsigned int, unsigned int>, long long>, void *>>>={__tree_end_node<std::__1::__tree_node_base<void *> *>=^{__tree_node_base<void *>}}}{__compressed_pair<unsigned long, std::__1::__map_value_compare<std::__1::pair<unsigned int, unsigned int>, std::__1::__value_type<std::__1::pair<unsigned int, unsigned int>, long long>, std::__1::less<std::__1::pair<unsigned int, unsigned int>>, true>>=Q}}}{function<void (double)>={__value_func<void (double)>={type=[32C]}^{__base<void (double)>}}}{function<void (DSPGraph::Box *, unsigned int)>={__value_func<void (DSPGraph::Box *, unsigned int)>={type=[32C]}^{__base<void (DSPGraph::Box *, unsigned int)>}}}{function<void (DSPGraph::Box *, unsigned int)>={__value_func<void (DSPGraph::Box *, unsigned int)>={type=[32C]}^{__base<void (DSPGraph::Box *, unsigned int)>}}}BBBB{optional<unsigned long long>=(?=cQ)B}}16@0:8
@"NSArray"28@0:8^{Box=^^?^{Graph}^{IsoGroup}^{Subset}{basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>={__compressed_pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>::__rep, std::__1::allocator<char>>={__rep=(?={__long=QQ*}{__short=(?=Cc)[23c]}{__raw=[3Q]})}}}q{vector<DSPGraph::InputPort, std::__1::allocator<DSPGraph::InputPort>>=^{InputPort}^{InputPort}{__compressed_pair<DSPGraph::InputPort *, std::__1::allocator<DSPGraph::InputPort>>=^{InputPort}}}{vector<DSPGraph::OutputPort, std::__1::allocator<DSPGraph::OutputPort>>=^{OutputPort}^{OutputPort}{__compressed_pair<DSPGraph::OutputPort *, std::__1::allocator<DSPGraph::OutputPort>>=^{OutputPort}}}{unordered_set<DSPGraph::Box *, std::__1::hash<DSPGraph::Box *>, std::__1::equal_to<DSPGraph::Box *>, std::__1::allocator<DSPGraph::Box *>>={__hash_table<DSPGraph::Box *, std::__1::hash<DSPGraph::Box *>, std::__1::equal_to<DSPGraph::Box *>, std::__1::allocator<DSPGraph::Box *>>={unique_ptr<std::__1::__hash_node_base<std::__1::__hash_node<DSPGraph::Box *, void *> *> *[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<DSPGraph::Box *, void *> *> *>>>={__compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<DSPGraph::Box *, void *> *> **, std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<DSPGraph::Box *, void *> *> *>>>=^^{__hash_node_base<std::__1::__hash_node<DSPGraph::Box *, void *> *>}{__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<DSPGraph::Box *, void *> *> *>>={__compressed_pair<unsigned long, std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<DSPGraph::Box *, void *> *> *>>=Q}}}}{__compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<DSPGraph::Box *, void *> *>, std::__1::allocator<std::__1::__hash_node<DSPGraph::Box *, void *>>>={__hash_node_base<std::__1::__hash_node<DSPGraph::Box *, void *> *>=^{__hash_node_base<std::__1::__hash_node<DSPGraph::Box *, void *> *>}}}{__compressed_pair<unsigned long, std::__1::hash<DSPGraph::Box *>>=Q}{__compressed_pair<float, std::__1::equal_to<DSPGraph::Box *>>=f}}}{vector<DSPGraph::ParameterTap, std::__1::allocator<DSPGraph::ParameterTap>>=^{ParameterTap}^{ParameterTap}{__compressed_pair<DSPGraph::ParameterTap *, std::__1::allocator<DSPGraph::ParameterTap>>=^{ParameterTap}}}{vector<DSPGraph::PropertyTap, std::__1::allocator<DSPGraph::PropertyTap>>=^{PropertyTap}^{PropertyTap}{__compressed_pair<DSPGraph::PropertyTap *, std::__1::allocator<DSPGraph::PropertyTap>>=^{PropertyTap}}}{vector<std::__1::unique_ptr<DSPGraph::FileRecorder, std::__1::default_delete<DSPGraph::FileRecorder>>, std::__1::allocator<std::__1::unique_ptr<DSPGraph::FileRecorder, std::__1::default_delete<DSPGraph::FileRecorder>>>>=^{unique_ptr<DSPGraph::FileRecorder, std::__1::default_delete<DSPGraph::FileRecorder>>}^{unique_ptr<DSPGraph::FileRecorder, std::__1::default_delete<DSPGraph::FileRecorder>>}{__compressed_pair<std::__1::unique_ptr<DSPGraph::FileRecorder, std::__1::default_delete<DSPGraph::FileRecorder>> *, std::__1::allocator<std::__1::unique_ptr<DSPGraph::FileRecorder, std::__1::default_delete<DSPGraph::FileRecorder>>>>=^{unique_ptr<DSPGraph::FileRecorder, std::__1::default_delete<DSPGraph::FileRecorder>>}}}{vector<std::__1::unique_ptr<DSPGraph::FileInjector, std::__1::default_delete<DSPGraph::FileInjector>>, std::__1::allocator<std::__1::unique_ptr<DSPGraph::FileInjector, std::__1::default_delete<DSPGraph::FileInjector>>>>=^{unique_ptr<DSPGraph::FileInjector, std::__1::default_delete<DSPGraph::FileInjector>>}^{unique_ptr<DSPGraph::FileInjector, std::__1::default_delete<DSPGraph::FileInjector>>}{__compressed_pair<std::__1::unique_ptr<DSPGraph::FileInjector, std::__1::default_delete<DSPGraph::FileInjector>> *, std::__1::allocator<std::__1::unique_ptr<DSPGraph::FileInjector, std::__1::default_delete<DSPGraph::FileInjector>>>>=^{unique_ptr<DSPGraph::FileInjector, std::__1::default_delete<DSPGraph::FileInjector>>}}}{mutex={_opaque_pthread_mutex_t=q[56c]}}{vector<std::__1::unique_ptr<DSPGraph::Analyzer, std::__1::default_delete<DSPGraph::Analyzer>>, std::__1::allocator<std::__1::unique_ptr<DSPGraph::Analyzer, std::__1::default_delete<DSPGraph::Analyzer>>>>=^{unique_ptr<DSPGraph::Analyzer, std::__1::default_delete<DSPGraph::Analyzer>>}^{unique_ptr<DSPGraph::Analyzer, std::__1::default_delete<DSPGraph::Analyzer>>}{__compressed_pair<std::__1::unique_ptr<DSPGraph::Analyzer, std::__1::default_delete<DSPGraph::Analyzer>> *, std::__1::allocator<std::__1::unique_ptr<DSPGraph::Analyzer, std::__1::default_delete<DSPGraph::Analyzer>>>>=^{unique_ptr<DSPGraph::Analyzer, std::__1::default_delete<DSPGraph::Analyzer>>}}}{Set<DSPGraph::Analyzer *>=^{Member}Q}{map<std::__1::pair<unsigned int, unsigned int>, long long, std::__1::less<std::__1::pair<unsigned int, unsigned int>>, std::__1::allocator<std::__1::pair<const std::__1::pair<unsigned int, unsigned int>, long long>>>={__tree<std::__1::__value_type<std::__1::pair<unsigned int, unsigned int>, long long>, std::__1::__map_value_compare<std::__1::pair<unsigned int, unsigned int>, std::__1::__value_type<std::__1::pair<unsigned int, unsigned int>, long long>, std::__1::less<std::__1::pair<unsigned int, unsigned int>>, true>, std::__1::allocator<std::__1::__value_type<std::__1::pair<unsigned int, unsigned int>, long long>>>=^{__tree_end_node<std::__1::__tree_node_base<void *> *>}{__compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *> *>, std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<std::__1::pair<unsigned int, unsigned int>, long long>, void *>>>={__tree_end_node<std::__1::__tree_node_base<void *> *>=^{__tree_node_base<void *>}}}{__compressed_pair<unsigned long, std::__1::__map_value_compare<std::__1::pair<unsigned int, unsigned int>, std::__1::__value_type<std::__1::pair<unsigned int, unsigned int>, long long>, std::__1::less<std::__1::pair<unsigned int, unsigned int>>, true>>=Q}}}{function<void (double)>={__value_func<void (double)>={type=[32C]}^{__base<void (double)>}}}{function<void (DSPGraph::Box *, unsigned int)>={__value_func<void (DSPGraph::Box *, unsigned int)>={type=[32C]}^{__base<void (DSPGraph::Box *, unsigned int)>}}}{function<void (DSPGraph::Box *, unsigned int)>={__value_func<void (DSPGraph::Box *, unsigned int)>={type=[32C]}^{__base<void (DSPGraph::Box *, unsigned int)>}}}BBBB{optional<unsigned long long>=(?=cQ)B}}16i24
@36@0:8d16i24d28
{shared_ptr<DSPGraph::Graph>="__ptr_"^{Graph}"__cntrl_"^{__shared_weak_count}}
@40@0:8q16@24@32
v48@0:8^@16q24@32@40
@"AVAudioFile"
@32@0:8@16d24
@"SNSystemConfiguration"
@"<SNSystemAudioAnalyzerProtocol>"16@0:8
B32@0:8@16@24
B32@0:8@"NSXPCListener"16@"NSXPCConnection"24
@"NSXPCListener"
@"SNSystemServiceResourceCoordinator"
@40@0:8@16@?24@32
@32@0:8@?16@24
@"NSXPCConnection"
q16@0:8
I20@0:8I16
@"NSUserDefaults"
@40@0:8@16@24@32
@"NSArray"
@40@0:8@16@24^@32
@"<MLFeatureProvider>"40@0:8@"<MLFeatureProvider>"16@"MLPredictionOptions"24^@32
@"MLModelDescription"16@0:8
@"<MLCustomModel>"
@"MLModelDescription"
@"<SNMLModel>"
{mutex="__m_"{_opaque_pthread_mutex_t="__sig"q"__opaque"[56c]}}
v24@0:8@?<v@?@"<SNSystemAudioAnalyzerXPCProtocol>">16
@"<SNResourceCoordinatorProtocol>"
v20@0:8B16
@"<SNSecondPassController>"16@0:8
@"SNTwoPassConfiguration"16@0:8
@32@0:8@16@?24
@"SNTwoPassConfiguration"
@"NSDictionary"
v32@0:8@"<SNRequest>"16@"<SNResult>"24
v32@0:8@"<SNRequest>"16@"NSError"24
@"<SNResultsObserving>"
@"<SNSystemAudioAnalyzerProtocol>"
@48@0:8@16@24@32@40
v48@0:8@16@24Q32Q40
v48@0:8@"EARSyncPSRAudioProcessor"16@"NSData"24Q32Q40
@28@0:8d16I24
v40@0:8@16^{Box=^^?^{Graph}^{IsoGroup}^{Subset}{basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>={__compressed_pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>::__rep, std::__1::allocator<char>>={__rep=(?={__long=QQ*}{__short=(?=Cc)[23c]}{__raw=[3Q]})}}}q{vector<DSPGraph::InputPort, std::__1::allocator<DSPGraph::InputPort>>=^{InputPort}^{InputPort}{__compressed_pair<DSPGraph::InputPort *, std::__1::allocator<DSPGraph::InputPort>>=^{InputPort}}}{vector<DSPGraph::OutputPort, std::__1::allocator<DSPGraph::OutputPort>>=^{OutputPort}^{OutputPort}{__compressed_pair<DSPGraph::OutputPort *, std::__1::allocator<DSPGraph::OutputPort>>=^{OutputPort}}}{unordered_set<DSPGraph::Box *, std::__1::hash<DSPGraph::Box *>, std::__1::equal_to<DSPGraph::Box *>, std::__1::allocator<DSPGraph::Box *>>={__hash_table<DSPGraph::Box *, std::__1::hash<DSPGraph::Box *>, std::__1::equal_to<DSPGraph::Box *>, std::__1::allocator<DSPGraph::Box *>>={unique_ptr<std::__1::__hash_node_base<std::__1::__hash_node<DSPGraph::Box *, void *> *> *[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<DSPGraph::Box *, void *> *> *>>>={__compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<DSPGraph::Box *, void *> *> **, std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<DSPGraph::Box *, void *> *> *>>>=^^{__hash_node_base<std::__1::__hash_node<DSPGraph::Box *, void *> *>}{__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<DSPGraph::Box *, void *> *> *>>={__compressed_pair<unsigned long, std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<DSPGraph::Box *, void *> *> *>>=Q}}}}{__compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<DSPGraph::Box *, void *> *>, std::__1::allocator<std::__1::__hash_node<DSPGraph::Box *, void *>>>={__hash_node_base<std::__1::__hash_node<DSPGraph::Box *, void *> *>=^{__hash_node_base<std::__1::__hash_node<DSPGraph::Box *, void *> *>}}}{__compressed_pair<unsigned long, std::__1::hash<DSPGraph::Box *>>=Q}{__compressed_pair<float, std::__1::equal_to<DSPGraph::Box *>>=f}}}{vector<DSPGraph::ParameterTap, std::__1::allocator<DSPGraph::ParameterTap>>=^{ParameterTap}^{ParameterTap}{__compressed_pair<DSPGraph::ParameterTap *, std::__1::allocator<DSPGraph::ParameterTap>>=^{ParameterTap}}}{vector<DSPGraph::PropertyTap, std::__1::allocator<DSPGraph::PropertyTap>>=^{PropertyTap}^{PropertyTap}{__compressed_pair<DSPGraph::PropertyTap *, std::__1::allocator<DSPGraph::PropertyTap>>=^{PropertyTap}}}{vector<std::__1::unique_ptr<DSPGraph::FileRecorder, std::__1::default_delete<DSPGraph::FileRecorder>>, std::__1::allocator<std::__1::unique_ptr<DSPGraph::FileRecorder, std::__1::default_delete<DSPGraph::FileRecorder>>>>=^{unique_ptr<DSPGraph::FileRecorder, std::__1::default_delete<DSPGraph::FileRecorder>>}^{unique_ptr<DSPGraph::FileRecorder, std::__1::default_delete<DSPGraph::FileRecorder>>}{__compressed_pair<std::__1::unique_ptr<DSPGraph::FileRecorder, std::__1::default_delete<DSPGraph::FileRecorder>> *, std::__1::allocator<std::__1::unique_ptr<DSPGraph::FileRecorder, std::__1::default_delete<DSPGraph::FileRecorder>>>>=^{unique_ptr<DSPGraph::FileRecorder, std::__1::default_delete<DSPGraph::FileRecorder>>}}}{vector<std::__1::unique_ptr<DSPGraph::FileInjector, std::__1::default_delete<DSPGraph::FileInjector>>, std::__1::allocator<std::__1::unique_ptr<DSPGraph::FileInjector, std::__1::default_delete<DSPGraph::FileInjector>>>>=^{unique_ptr<DSPGraph::FileInjector, std::__1::default_delete<DSPGraph::FileInjector>>}^{unique_ptr<DSPGraph::FileInjector, std::__1::default_delete<DSPGraph::FileInjector>>}{__compressed_pair<std::__1::unique_ptr<DSPGraph::FileInjector, std::__1::default_delete<DSPGraph::FileInjector>> *, std::__1::allocator<std::__1::unique_ptr<DSPGraph::FileInjector, std::__1::default_delete<DSPGraph::FileInjector>>>>=^{unique_ptr<DSPGraph::FileInjector, std::__1::default_delete<DSPGraph::FileInjector>>}}}{mutex={_opaque_pthread_mutex_t=q[56c]}}{vector<std::__1::unique_ptr<DSPGraph::Analyzer, std::__1::default_delete<DSPGraph::Analyzer>>, std::__1::allocator<std::__1::unique_ptr<DSPGraph::Analyzer, std::__1::default_delete<DSPGraph::Analyzer>>>>=^{unique_ptr<DSPGraph::Analyzer, std::__1::default_delete<DSPGraph::Analyzer>>}^{unique_ptr<DSPGraph::Analyzer, std::__1::default_delete<DSPGraph::Analyzer>>}{__compressed_pair<std::__1::unique_ptr<DSPGraph::Analyzer, std::__1::default_delete<DSPGraph::Analyzer>> *, std::__1::allocator<std::__1::unique_ptr<DSPGraph::Analyzer, std::__1::default_delete<DSPGraph::Analyzer>>>>=^{unique_ptr<DSPGraph::Analyzer, std::__1::default_delete<DSPGraph::Analyzer>>}}}{Set<DSPGraph::Analyzer *>=^{Member}Q}{map<std::__1::pair<unsigned int, unsigned int>, long long, std::__1::less<std::__1::pair<unsigned int, unsigned int>>, std::__1::allocator<std::__1::pair<const std::__1::pair<unsigned int, unsigned int>, long long>>>={__tree<std::__1::__value_type<std::__1::pair<unsigned int, unsigned int>, long long>, std::__1::__map_value_compare<std::__1::pair<unsigned int, unsigned int>, std::__1::__value_type<std::__1::pair<unsigned int, unsigned int>, long long>, std::__1::less<std::__1::pair<unsigned int, unsigned int>>, true>, std::__1::allocator<std::__1::__value_type<std::__1::pair<unsigned int, unsigned int>, long long>>>=^{__tree_end_node<std::__1::__tree_node_base<void *> *>}{__compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *> *>, std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<std::__1::pair<unsigned int, unsigned int>, long long>, void *>>>={__tree_end_node<std::__1::__tree_node_base<void *> *>=^{__tree_node_base<void *>}}}{__compressed_pair<unsigned long, std::__1::__map_value_compare<std::__1::pair<unsigned int, unsigned int>, std::__1::__value_type<std::__1::pair<unsigned int, unsigned int>, long long>, std::__1::less<std::__1::pair<unsigned int, unsigned int>>, true>>=Q}}}{function<void (double)>={__value_func<void (double)>={type=[32C]}^{__base<void (double)>}}}{function<void (DSPGraph::Box *, unsigned int)>={__value_func<void (DSPGraph::Box *, unsigned int)>={type=[32C]}^{__base<void (DSPGraph::Box *, unsigned int)>}}}{function<void (DSPGraph::Box *, unsigned int)>={__value_func<void (DSPGraph::Box *, unsigned int)>={type=[32C]}^{__base<void (DSPGraph::Box *, unsigned int)>}}}BBBB{optional<unsigned long long>=(?=cQ)B}}24q32
@40@0:8@16d24^@32
@"MLModel"
@32@0:8@16^@24
@"SNAudioStreamAnalyzer"
@24@0:8q16
@"NSDictionary"16@0:8
{?=qiIq}56@0:8{?=qiIq}16^{Box=^^?^{Graph}^{IsoGroup}^{Subset}{basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>={__compressed_pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>::__rep, std::__1::allocator<char>>={__rep=(?={__long=QQ*}{__short=(?=Cc)[23c]}{__raw=[3Q]})}}}q{vector<DSPGraph::InputPort, std::__1::allocator<DSPGraph::InputPort>>=^{InputPort}^{InputPort}{__compressed_pair<DSPGraph::InputPort *, std::__1::allocator<DSPGraph::InputPort>>=^{InputPort}}}{vector<DSPGraph::OutputPort, std::__1::allocator<DSPGraph::OutputPort>>=^{OutputPort}^{OutputPort}{__compressed_pair<DSPGraph::OutputPort *, std::__1::allocator<DSPGraph::OutputPort>>=^{OutputPort}}}{unordered_set<DSPGraph::Box *, std::__1::hash<DSPGraph::Box *>, std::__1::equal_to<DSPGraph::Box *>, std::__1::allocator<DSPGraph::Box *>>={__hash_table<DSPGraph::Box *, std::__1::hash<DSPGraph::Box *>, std::__1::equal_to<DSPGraph::Box *>, std::__1::allocator<DSPGraph::Box *>>={unique_ptr<std::__1::__hash_node_base<std::__1::__hash_node<DSPGraph::Box *, void *> *> *[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<DSPGraph::Box *, void *> *> *>>>={__compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<DSPGraph::Box *, void *> *> **, std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<DSPGraph::Box *, void *> *> *>>>=^^{__hash_node_base<std::__1::__hash_node<DSPGraph::Box *, void *> *>}{__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<DSPGraph::Box *, void *> *> *>>={__compressed_pair<unsigned long, std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<DSPGraph::Box *, void *> *> *>>=Q}}}}{__compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<DSPGraph::Box *, void *> *>, std::__1::allocator<std::__1::__hash_node<DSPGraph::Box *, void *>>>={__hash_node_base<std::__1::__hash_node<DSPGraph::Box *, void *> *>=^{__hash_node_base<std::__1::__hash_node<DSPGraph::Box *, void *> *>}}}{__compressed_pair<unsigned long, std::__1::hash<DSPGraph::Box *>>=Q}{__compressed_pair<float, std::__1::equal_to<DSPGraph::Box *>>=f}}}{vector<DSPGraph::ParameterTap, std::__1::allocator<DSPGraph::ParameterTap>>=^{ParameterTap}^{ParameterTap}{__compressed_pair<DSPGraph::ParameterTap *, std::__1::allocator<DSPGraph::ParameterTap>>=^{ParameterTap}}}{vector<DSPGraph::PropertyTap, std::__1::allocator<DSPGraph::PropertyTap>>=^{PropertyTap}^{PropertyTap}{__compressed_pair<DSPGraph::PropertyTap *, std::__1::allocator<DSPGraph::PropertyTap>>=^{PropertyTap}}}{vector<std::__1::unique_ptr<DSPGraph::FileRecorder, std::__1::default_delete<DSPGraph::FileRecorder>>, std::__1::allocator<std::__1::unique_ptr<DSPGraph::FileRecorder, std::__1::default_delete<DSPGraph::FileRecorder>>>>=^{unique_ptr<DSPGraph::FileRecorder, std::__1::default_delete<DSPGraph::FileRecorder>>}^{unique_ptr<DSPGraph::FileRecorder, std::__1::default_delete<DSPGraph::FileRecorder>>}{__compressed_pair<std::__1::unique_ptr<DSPGraph::FileRecorder, std::__1::default_delete<DSPGraph::FileRecorder>> *, std::__1::allocator<std::__1::unique_ptr<DSPGraph::FileRecorder, std::__1::default_delete<DSPGraph::FileRecorder>>>>=^{unique_ptr<DSPGraph::FileRecorder, std::__1::default_delete<DSPGraph::FileRecorder>>}}}{vector<std::__1::unique_ptr<DSPGraph::FileInjector, std::__1::default_delete<DSPGraph::FileInjector>>, std::__1::allocator<std::__1::unique_ptr<DSPGraph::FileInjector, std::__1::default_delete<DSPGraph::FileInjector>>>>=^{unique_ptr<DSPGraph::FileInjector, std::__1::default_delete<DSPGraph::FileInjector>>}^{unique_ptr<DSPGraph::FileInjector, std::__1::default_delete<DSPGraph::FileInjector>>}{__compressed_pair<std::__1::unique_ptr<DSPGraph::FileInjector, std::__1::default_delete<DSPGraph::FileInjector>> *, std::__1::allocator<std::__1::unique_ptr<DSPGraph::FileInjector, std::__1::default_delete<DSPGraph::FileInjector>>>>=^{unique_ptr<DSPGraph::FileInjector, std::__1::default_delete<DSPGraph::FileInjector>>}}}{mutex={_opaque_pthread_mutex_t=q[56c]}}{vector<std::__1::unique_ptr<DSPGraph::Analyzer, std::__1::default_delete<DSPGraph::Analyzer>>, std::__1::allocator<std::__1::unique_ptr<DSPGraph::Analyzer, std::__1::default_delete<DSPGraph::Analyzer>>>>=^{unique_ptr<DSPGraph::Analyzer, std::__1::default_delete<DSPGraph::Analyzer>>}^{unique_ptr<DSPGraph::Analyzer, std::__1::default_delete<DSPGraph::Analyzer>>}{__compressed_pair<std::__1::unique_ptr<DSPGraph::Analyzer, std::__1::default_delete<DSPGraph::Analyzer>> *, std::__1::allocator<std::__1::unique_ptr<DSPGraph::Analyzer, std::__1::default_delete<DSPGraph::Analyzer>>>>=^{unique_ptr<DSPGraph::Analyzer, std::__1::default_delete<DSPGraph::Analyzer>>}}}{Set<DSPGraph::Analyzer *>=^{Member}Q}{map<std::__1::pair<unsigned int, unsigned int>, long long, std::__1::less<std::__1::pair<unsigned int, unsigned int>>, std::__1::allocator<std::__1::pair<const std::__1::pair<unsigned int, unsigned int>, long long>>>={__tree<std::__1::__value_type<std::__1::pair<unsigned int, unsigned int>, long long>, std::__1::__map_value_compare<std::__1::pair<unsigned int, unsigned int>, std::__1::__value_type<std::__1::pair<unsigned int, unsigned int>, long long>, std::__1::less<std::__1::pair<unsigned int, unsigned int>>, true>, std::__1::allocator<std::__1::__value_type<std::__1::pair<unsigned int, unsigned int>, long long>>>=^{__tree_end_node<std::__1::__tree_node_base<void *> *>}{__compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *> *>, std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<std::__1::pair<unsigned int, unsigned int>, long long>, void *>>>={__tree_end_node<std::__1::__tree_node_base<void *> *>=^{__tree_node_base<void *>}}}{__compressed_pair<unsigned long, std::__1::__map_value_compare<std::__1::pair<unsigned int, unsigned int>, std::__1::__value_type<std::__1::pair<unsigned int, unsigned int>, long long>, std::__1::less<std::__1::pair<unsigned int, unsigned int>>, true>>=Q}}}{function<void (double)>={__value_func<void (double)>={type=[32C]}^{__base<void (double)>}}}{function<void (DSPGraph::Box *, unsigned int)>={__value_func<void (DSPGraph::Box *, unsigned int)>={type=[32C]}^{__base<void (DSPGraph::Box *, unsigned int)>}}}{function<void (DSPGraph::Box *, unsigned int)>={__value_func<void (DSPGraph::Box *, unsigned int)>={type=[32C]}^{__base<void (DSPGraph::Box *, unsigned int)>}}}BBBB{optional<unsigned long long>=(?=cQ)B}}40@48
{?={?=qiIq}{?=qiIq}}80@0:8{?={?=qiIq}{?=qiIq}}16^{Box=^^?^{Graph}^{IsoGroup}^{Subset}{basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>={__compressed_pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>::__rep, std::__1::allocator<char>>={__rep=(?={__long=QQ*}{__short=(?=Cc)[23c]}{__raw=[3Q]})}}}q{vector<DSPGraph::InputPort, std::__1::allocator<DSPGraph::InputPort>>=^{InputPort}^{InputPort}{__compressed_pair<DSPGraph::InputPort *, std::__1::allocator<DSPGraph::InputPort>>=^{InputPort}}}{vector<DSPGraph::OutputPort, std::__1::allocator<DSPGraph::OutputPort>>=^{OutputPort}^{OutputPort}{__compressed_pair<DSPGraph::OutputPort *, std::__1::allocator<DSPGraph::OutputPort>>=^{OutputPort}}}{unordered_set<DSPGraph::Box *, std::__1::hash<DSPGraph::Box *>, std::__1::equal_to<DSPGraph::Box *>, std::__1::allocator<DSPGraph::Box *>>={__hash_table<DSPGraph::Box *, std::__1::hash<DSPGraph::Box *>, std::__1::equal_to<DSPGraph::Box *>, std::__1::allocator<DSPGraph::Box *>>={unique_ptr<std::__1::__hash_node_base<std::__1::__hash_node<DSPGraph::Box *, void *> *> *[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<DSPGraph::Box *, void *> *> *>>>={__compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<DSPGraph::Box *, void *> *> **, std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<DSPGraph::Box *, void *> *> *>>>=^^{__hash_node_base<std::__1::__hash_node<DSPGraph::Box *, void *> *>}{__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<DSPGraph::Box *, void *> *> *>>={__compressed_pair<unsigned long, std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<DSPGraph::Box *, void *> *> *>>=Q}}}}{__compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<DSPGraph::Box *, void *> *>, std::__1::allocator<std::__1::__hash_node<DSPGraph::Box *, void *>>>={__hash_node_base<std::__1::__hash_node<DSPGraph::Box *, void *> *>=^{__hash_node_base<std::__1::__hash_node<DSPGraph::Box *, void *> *>}}}{__compressed_pair<unsigned long, std::__1::hash<DSPGraph::Box *>>=Q}{__compressed_pair<float, std::__1::equal_to<DSPGraph::Box *>>=f}}}{vector<DSPGraph::ParameterTap, std::__1::allocator<DSPGraph::ParameterTap>>=^{ParameterTap}^{ParameterTap}{__compressed_pair<DSPGraph::ParameterTap *, std::__1::allocator<DSPGraph::ParameterTap>>=^{ParameterTap}}}{vector<DSPGraph::PropertyTap, std::__1::allocator<DSPGraph::PropertyTap>>=^{PropertyTap}^{PropertyTap}{__compressed_pair<DSPGraph::PropertyTap *, std::__1::allocator<DSPGraph::PropertyTap>>=^{PropertyTap}}}{vector<std::__1::unique_ptr<DSPGraph::FileRecorder, std::__1::default_delete<DSPGraph::FileRecorder>>, std::__1::allocator<std::__1::unique_ptr<DSPGraph::FileRecorder, std::__1::default_delete<DSPGraph::FileRecorder>>>>=^{unique_ptr<DSPGraph::FileRecorder, std::__1::default_delete<DSPGraph::FileRecorder>>}^{unique_ptr<DSPGraph::FileRecorder, std::__1::default_delete<DSPGraph::FileRecorder>>}{__compressed_pair<std::__1::unique_ptr<DSPGraph::FileRecorder, std::__1::default_delete<DSPGraph::FileRecorder>> *, std::__1::allocator<std::__1::unique_ptr<DSPGraph::FileRecorder, std::__1::default_delete<DSPGraph::FileRecorder>>>>=^{unique_ptr<DSPGraph::FileRecorder, std::__1::default_delete<DSPGraph::FileRecorder>>}}}{vector<std::__1::unique_ptr<DSPGraph::FileInjector, std::__1::default_delete<DSPGraph::FileInjector>>, std::__1::allocator<std::__1::unique_ptr<DSPGraph::FileInjector, std::__1::default_delete<DSPGraph::FileInjector>>>>=^{unique_ptr<DSPGraph::FileInjector, std::__1::default_delete<DSPGraph::FileInjector>>}^{unique_ptr<DSPGraph::FileInjector, std::__1::default_delete<DSPGraph::FileInjector>>}{__compressed_pair<std::__1::unique_ptr<DSPGraph::FileInjector, std::__1::default_delete<DSPGraph::FileInjector>> *, std::__1::allocator<std::__1::unique_ptr<DSPGraph::FileInjector, std::__1::default_delete<DSPGraph::FileInjector>>>>=^{unique_ptr<DSPGraph::FileInjector, std::__1::default_delete<DSPGraph::FileInjector>>}}}{mutex={_opaque_pthread_mutex_t=q[56c]}}{vector<std::__1::unique_ptr<DSPGraph::Analyzer, std::__1::default_delete<DSPGraph::Analyzer>>, std::__1::allocator<std::__1::unique_ptr<DSPGraph::Analyzer, std::__1::default_delete<DSPGraph::Analyzer>>>>=^{unique_ptr<DSPGraph::Analyzer, std::__1::default_delete<DSPGraph::Analyzer>>}^{unique_ptr<DSPGraph::Analyzer, std::__1::default_delete<DSPGraph::Analyzer>>}{__compressed_pair<std::__1::unique_ptr<DSPGraph::Analyzer, std::__1::default_delete<DSPGraph::Analyzer>> *, std::__1::allocator<std::__1::unique_ptr<DSPGraph::Analyzer, std::__1::default_delete<DSPGraph::Analyzer>>>>=^{unique_ptr<DSPGraph::Analyzer, std::__1::default_delete<DSPGraph::Analyzer>>}}}{Set<DSPGraph::Analyzer *>=^{Member}Q}{map<std::__1::pair<unsigned int, unsigned int>, long long, std::__1::less<std::__1::pair<unsigned int, unsigned int>>, std::__1::allocator<std::__1::pair<const std::__1::pair<unsigned int, unsigned int>, long long>>>={__tree<std::__1::__value_type<std::__1::pair<unsigned int, unsigned int>, long long>, std::__1::__map_value_compare<std::__1::pair<unsigned int, unsigned int>, std::__1::__value_type<std::__1::pair<unsigned int, unsigned int>, long long>, std::__1::less<std::__1::pair<unsigned int, unsigned int>>, true>, std::__1::allocator<std::__1::__value_type<std::__1::pair<unsigned int, unsigned int>, long long>>>=^{__tree_end_node<std::__1::__tree_node_base<void *> *>}{__compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *> *>, std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<std::__1::pair<unsigned int, unsigned int>, long long>, void *>>>={__tree_end_node<std::__1::__tree_node_base<void *> *>=^{__tree_node_base<void *>}}}{__compressed_pair<unsigned long, std::__1::__map_value_compare<std::__1::pair<unsigned int, unsigned int>, std::__1::__value_type<std::__1::pair<unsigned int, unsigned int>, long long>, std::__1::less<std::__1::pair<unsigned int, unsigned int>>, true>>=Q}}}{function<void (double)>={__value_func<void (double)>={type=[32C]}^{__base<void (double)>}}}{function<void (DSPGraph::Box *, unsigned int)>={__value_func<void (DSPGraph::Box *, unsigned int)>={type=[32C]}^{__base<void (DSPGraph::Box *, unsigned int)>}}}{function<void (DSPGraph::Box *, unsigned int)>={__value_func<void (DSPGraph::Box *, unsigned int)>={type=[32C]}^{__base<void (DSPGraph::Box *, unsigned int)>}}}BBBB{optional<unsigned long long>=(?=cQ)B}}64@72
@48@0:8@16@?24@?32@40
v28@0:8^{Box=^^?^{Graph}^{IsoGroup}^{Subset}{basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>={__compressed_pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>::__rep, std::__1::allocator<char>>={__rep=(?={__long=QQ*}{__short=(?=Cc)[23c]}{__raw=[3Q]})}}}q{vector<DSPGraph::InputPort, std::__1::allocator<DSPGraph::InputPort>>=^{InputPort}^{InputPort}{__compressed_pair<DSPGraph::InputPort *, std::__1::allocator<DSPGraph::InputPort>>=^{InputPort}}}{vector<DSPGraph::OutputPort, std::__1::allocator<DSPGraph::OutputPort>>=^{OutputPort}^{OutputPort}{__compressed_pair<DSPGraph::OutputPort *, std::__1::allocator<DSPGraph::OutputPort>>=^{OutputPort}}}{unordered_set<DSPGraph::Box *, std::__1::hash<DSPGraph::Box *>, std::__1::equal_to<DSPGraph::Box *>, std::__1::allocator<DSPGraph::Box *>>={__hash_table<DSPGraph::Box *, std::__1::hash<DSPGraph::Box *>, std::__1::equal_to<DSPGraph::Box *>, std::__1::allocator<DSPGraph::Box *>>={unique_ptr<std::__1::__hash_node_base<std::__1::__hash_node<DSPGraph::Box *, void *> *> *[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<DSPGraph::Box *, void *> *> *>>>={__compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<DSPGraph::Box *, void *> *> **, std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<DSPGraph::Box *, void *> *> *>>>=^^{__hash_node_base<std::__1::__hash_node<DSPGraph::Box *, void *> *>}{__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<DSPGraph::Box *, void *> *> *>>={__compressed_pair<unsigned long, std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<DSPGraph::Box *, void *> *> *>>=Q}}}}{__compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<DSPGraph::Box *, void *> *>, std::__1::allocator<std::__1::__hash_node<DSPGraph::Box *, void *>>>={__hash_node_base<std::__1::__hash_node<DSPGraph::Box *, void *> *>=^{__hash_node_base<std::__1::__hash_node<DSPGraph::Box *, void *> *>}}}{__compressed_pair<unsigned long, std::__1::hash<DSPGraph::Box *>>=Q}{__compressed_pair<float, std::__1::equal_to<DSPGraph::Box *>>=f}}}{vector<DSPGraph::ParameterTap, std::__1::allocator<DSPGraph::ParameterTap>>=^{ParameterTap}^{ParameterTap}{__compressed_pair<DSPGraph::ParameterTap *, std::__1::allocator<DSPGraph::ParameterTap>>=^{ParameterTap}}}{vector<DSPGraph::PropertyTap, std::__1::allocator<DSPGraph::PropertyTap>>=^{PropertyTap}^{PropertyTap}{__compressed_pair<DSPGraph::PropertyTap *, std::__1::allocator<DSPGraph::PropertyTap>>=^{PropertyTap}}}{vector<std::__1::unique_ptr<DSPGraph::FileRecorder, std::__1::default_delete<DSPGraph::FileRecorder>>, std::__1::allocator<std::__1::unique_ptr<DSPGraph::FileRecorder, std::__1::default_delete<DSPGraph::FileRecorder>>>>=^{unique_ptr<DSPGraph::FileRecorder, std::__1::default_delete<DSPGraph::FileRecorder>>}^{unique_ptr<DSPGraph::FileRecorder, std::__1::default_delete<DSPGraph::FileRecorder>>}{__compressed_pair<std::__1::unique_ptr<DSPGraph::FileRecorder, std::__1::default_delete<DSPGraph::FileRecorder>> *, std::__1::allocator<std::__1::unique_ptr<DSPGraph::FileRecorder, std::__1::default_delete<DSPGraph::FileRecorder>>>>=^{unique_ptr<DSPGraph::FileRecorder, std::__1::default_delete<DSPGraph::FileRecorder>>}}}{vector<std::__1::unique_ptr<DSPGraph::FileInjector, std::__1::default_delete<DSPGraph::FileInjector>>, std::__1::allocator<std::__1::unique_ptr<DSPGraph::FileInjector, std::__1::default_delete<DSPGraph::FileInjector>>>>=^{unique_ptr<DSPGraph::FileInjector, std::__1::default_delete<DSPGraph::FileInjector>>}^{unique_ptr<DSPGraph::FileInjector, std::__1::default_delete<DSPGraph::FileInjector>>}{__compressed_pair<std::__1::unique_ptr<DSPGraph::FileInjector, std::__1::default_delete<DSPGraph::FileInjector>> *, std::__1::allocator<std::__1::unique_ptr<DSPGraph::FileInjector, std::__1::default_delete<DSPGraph::FileInjector>>>>=^{unique_ptr<DSPGraph::FileInjector, std::__1::default_delete<DSPGraph::FileInjector>>}}}{mutex={_opaque_pthread_mutex_t=q[56c]}}{vector<std::__1::unique_ptr<DSPGraph::Analyzer, std::__1::default_delete<DSPGraph::Analyzer>>, std::__1::allocator<std::__1::unique_ptr<DSPGraph::Analyzer, std::__1::default_delete<DSPGraph::Analyzer>>>>=^{unique_ptr<DSPGraph::Analyzer, std::__1::default_delete<DSPGraph::Analyzer>>}^{unique_ptr<DSPGraph::Analyzer, std::__1::default_delete<DSPGraph::Analyzer>>}{__compressed_pair<std::__1::unique_ptr<DSPGraph::Analyzer, std::__1::default_delete<DSPGraph::Analyzer>> *, std::__1::allocator<std::__1::unique_ptr<DSPGraph::Analyzer, std::__1::default_delete<DSPGraph::Analyzer>>>>=^{unique_ptr<DSPGraph::Analyzer, std::__1::default_delete<DSPGraph::Analyzer>>}}}{Set<DSPGraph::Analyzer *>=^{Member}Q}{map<std::__1::pair<unsigned int, unsigned int>, long long, std::__1::less<std::__1::pair<unsigned int, unsigned int>>, std::__1::allocator<std::__1::pair<const std::__1::pair<unsigned int, unsigned int>, long long>>>={__tree<std::__1::__value_type<std::__1::pair<unsigned int, unsigned int>, long long>, std::__1::__map_value_compare<std::__1::pair<unsigned int, unsigned int>, std::__1::__value_type<std::__1::pair<unsigned int, unsigned int>, long long>, std::__1::less<std::__1::pair<unsigned int, unsigned int>>, true>, std::__1::allocator<std::__1::__value_type<std::__1::pair<unsigned int, unsigned int>, long long>>>=^{__tree_end_node<std::__1::__tree_node_base<void *> *>}{__compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *> *>, std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<std::__1::pair<unsigned int, unsigned int>, long long>, void *>>>={__tree_end_node<std::__1::__tree_node_base<void *> *>=^{__tree_node_base<void *>}}}{__compressed_pair<unsigned long, std::__1::__map_value_compare<std::__1::pair<unsigned int, unsigned int>, std::__1::__value_type<std::__1::pair<unsigned int, unsigned int>, long long>, std::__1::less<std::__1::pair<unsigned int, unsigned int>>, true>>=Q}}}{function<void (double)>={__value_func<void (double)>={type=[32C]}^{__base<void (double)>}}}{function<void (DSPGraph::Box *, unsigned int)>={__value_func<void (DSPGraph::Box *, unsigned int)>={type=[32C]}^{__base<void (DSPGraph::Box *, unsigned int)>}}}{function<void (DSPGraph::Box *, unsigned int)>={__value_func<void (DSPGraph::Box *, unsigned int)>={type=[32C]}^{__base<void (DSPGraph::Box *, unsigned int)>}}}BBBB{optional<unsigned long long>=(?=cQ)B}}16i24
v24@0:8q16
@"<SNAnalyzing>"
@"<SNTimeConverting>"
@40@0:8^{Box=^^?^{Graph}^{IsoGroup}^{Subset}{basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>={__compressed_pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>::__rep, std::__1::allocator<char>>={__rep=(?={__long=QQ*}{__short=(?=Cc)[23c]}{__raw=[3Q]})}}}q{vector<DSPGraph::InputPort, std::__1::allocator<DSPGraph::InputPort>>=^{InputPort}^{InputPort}{__compressed_pair<DSPGraph::InputPort *, std::__1::allocator<DSPGraph::InputPort>>=^{InputPort}}}{vector<DSPGraph::OutputPort, std::__1::allocator<DSPGraph::OutputPort>>=^{OutputPort}^{OutputPort}{__compressed_pair<DSPGraph::OutputPort *, std::__1::allocator<DSPGraph::OutputPort>>=^{OutputPort}}}{unordered_set<DSPGraph::Box *, std::__1::hash<DSPGraph::Box *>, std::__1::equal_to<DSPGraph::Box *>, std::__1::allocator<DSPGraph::Box *>>={__hash_table<DSPGraph::Box *, std::__1::hash<DSPGraph::Box *>, std::__1::equal_to<DSPGraph::Box *>, std::__1::allocator<DSPGraph::Box *>>={unique_ptr<std::__1::__hash_node_base<std::__1::__hash_node<DSPGraph::Box *, void *> *> *[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<DSPGraph::Box *, void *> *> *>>>={__compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<DSPGraph::Box *, void *> *> **, std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<DSPGraph::Box *, void *> *> *>>>=^^{__hash_node_base<std::__1::__hash_node<DSPGraph::Box *, void *> *>}{__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<DSPGraph::Box *, void *> *> *>>={__compressed_pair<unsigned long, std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<DSPGraph::Box *, void *> *> *>>=Q}}}}{__compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<DSPGraph::Box *, void *> *>, std::__1::allocator<std::__1::__hash_node<DSPGraph::Box *, void *>>>={__hash_node_base<std::__1::__hash_node<DSPGraph::Box *, void *> *>=^{__hash_node_base<std::__1::__hash_node<DSPGraph::Box *, void *> *>}}}{__compressed_pair<unsigned long, std::__1::hash<DSPGraph::Box *>>=Q}{__compressed_pair<float, std::__1::equal_to<DSPGraph::Box *>>=f}}}{vector<DSPGraph::ParameterTap, std::__1::allocator<DSPGraph::ParameterTap>>=^{ParameterTap}^{ParameterTap}{__compressed_pair<DSPGraph::ParameterTap *, std::__1::allocator<DSPGraph::ParameterTap>>=^{ParameterTap}}}{vector<DSPGraph::PropertyTap, std::__1::allocator<DSPGraph::PropertyTap>>=^{PropertyTap}^{PropertyTap}{__compressed_pair<DSPGraph::PropertyTap *, std::__1::allocator<DSPGraph::PropertyTap>>=^{PropertyTap}}}{vector<std::__1::unique_ptr<DSPGraph::FileRecorder, std::__1::default_delete<DSPGraph::FileRecorder>>, std::__1::allocator<std::__1::unique_ptr<DSPGraph::FileRecorder, std::__1::default_delete<DSPGraph::FileRecorder>>>>=^{unique_ptr<DSPGraph::FileRecorder, std::__1::default_delete<DSPGraph::FileRecorder>>}^{unique_ptr<DSPGraph::FileRecorder, std::__1::default_delete<DSPGraph::FileRecorder>>}{__compressed_pair<std::__1::unique_ptr<DSPGraph::FileRecorder, std::__1::default_delete<DSPGraph::FileRecorder>> *, std::__1::allocator<std::__1::unique_ptr<DSPGraph::FileRecorder, std::__1::default_delete<DSPGraph::FileRecorder>>>>=^{unique_ptr<DSPGraph::FileRecorder, std::__1::default_delete<DSPGraph::FileRecorder>>}}}{vector<std::__1::unique_ptr<DSPGraph::FileInjector, std::__1::default_delete<DSPGraph::FileInjector>>, std::__1::allocator<std::__1::unique_ptr<DSPGraph::FileInjector, std::__1::default_delete<DSPGraph::FileInjector>>>>=^{unique_ptr<DSPGraph::FileInjector, std::__1::default_delete<DSPGraph::FileInjector>>}^{unique_ptr<DSPGraph::FileInjector, std::__1::default_delete<DSPGraph::FileInjector>>}{__compressed_pair<std::__1::unique_ptr<DSPGraph::FileInjector, std::__1::default_delete<DSPGraph::FileInjector>> *, std::__1::allocator<std::__1::unique_ptr<DSPGraph::FileInjector, std::__1::default_delete<DSPGraph::FileInjector>>>>=^{unique_ptr<DSPGraph::FileInjector, std::__1::default_delete<DSPGraph::FileInjector>>}}}{mutex={_opaque_pthread_mutex_t=q[56c]}}{vector<std::__1::unique_ptr<DSPGraph::Analyzer, std::__1::default_delete<DSPGraph::Analyzer>>, std::__1::allocator<std::__1::unique_ptr<DSPGraph::Analyzer, std::__1::default_delete<DSPGraph::Analyzer>>>>=^{unique_ptr<DSPGraph::Analyzer, std::__1::default_delete<DSPGraph::Analyzer>>}^{unique_ptr<DSPGraph::Analyzer, std::__1::default_delete<DSPGraph::Analyzer>>}{__compressed_pair<std::__1::unique_ptr<DSPGraph::Analyzer, std::__1::default_delete<DSPGraph::Analyzer>> *, std::__1::allocator<std::__1::unique_ptr<DSPGraph::Analyzer, std::__1::default_delete<DSPGraph::Analyzer>>>>=^{unique_ptr<DSPGraph::Analyzer, std::__1::default_delete<DSPGraph::Analyzer>>}}}{Set<DSPGraph::Analyzer *>=^{Member}Q}{map<std::__1::pair<unsigned int, unsigned int>, long long, std::__1::less<std::__1::pair<unsigned int, unsigned int>>, std::__1::allocator<std::__1::pair<const std::__1::pair<unsigned int, unsigned int>, long long>>>={__tree<std::__1::__value_type<std::__1::pair<unsigned int, unsigned int>, long long>, std::__1::__map_value_compare<std::__1::pair<unsigned int, unsigned int>, std::__1::__value_type<std::__1::pair<unsigned int, unsigned int>, long long>, std::__1::less<std::__1::pair<unsigned int, unsigned int>>, true>, std::__1::allocator<std::__1::__value_type<std::__1::pair<unsigned int, unsigned int>, long long>>>=^{__tree_end_node<std::__1::__tree_node_base<void *> *>}{__compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *> *>, std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<std::__1::pair<unsigned int, unsigned int>, long long>, void *>>>={__tree_end_node<std::__1::__tree_node_base<void *> *>=^{__tree_node_base<void *>}}}{__compressed_pair<unsigned long, std::__1::__map_value_compare<std::__1::pair<unsigned int, unsigned int>, std::__1::__value_type<std::__1::pair<unsigned int, unsigned int>, long long>, std::__1::less<std::__1::pair<unsigned int, unsigned int>>, true>>=Q}}}{function<void (double)>={__value_func<void (double)>={type=[32C]}^{__base<void (double)>}}}{function<void (DSPGraph::Box *, unsigned int)>={__value_func<void (DSPGraph::Box *, unsigned int)>={type=[32C]}^{__base<void (DSPGraph::Box *, unsigned int)>}}}{function<void (DSPGraph::Box *, unsigned int)>={__value_func<void (DSPGraph::Box *, unsigned int)>={type=[32C]}^{__base<void (DSPGraph::Box *, unsigned int)>}}}BBBB{optional<unsigned long long>=(?=cQ)B}}16{shared_ptr<DSPGraph::Graph>=^{Graph}^{__shared_weak_count}}24
B32@0:8q16@24
B24@0:8q16
B36@0:8q16@24B32
B36@0:8^I16^q24I32
B32@0:8^{AudioUnitParameterInfo=[52c]^{__CFString}I^{__CFString}IfffI}16I24I28
B36@0:8^f16I24I28I32
B28@0:8I16I20I24
B40@0:8f16I20I24I28q32
^{Box=^^?^{Graph}^{IsoGroup}^{Subset}{basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>={__compressed_pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>::__rep, std::__1::allocator<char>>={__rep=(?={__long=QQ*}{__short=(?=Cc)[23c]}{__raw=[3Q]})}}}q{vector<DSPGraph::InputPort, std::__1::allocator<DSPGraph::InputPort>>=^{InputPort}^{InputPort}{__compressed_pair<DSPGraph::InputPort *, std::__1::allocator<DSPGraph::InputPort>>=^{InputPort}}}{vector<DSPGraph::OutputPort, std::__1::allocator<DSPGraph::OutputPort>>=^{OutputPort}^{OutputPort}{__compressed_pair<DSPGraph::OutputPort *, std::__1::allocator<DSPGraph::OutputPort>>=^{OutputPort}}}{unordered_set<DSPGraph::Box *, std::__1::hash<DSPGraph::Box *>, std::__1::equal_to<DSPGraph::Box *>, std::__1::allocator<DSPGraph::Box *>>={__hash_table<DSPGraph::Box *, std::__1::hash<DSPGraph::Box *>, std::__1::equal_to<DSPGraph::Box *>, std::__1::allocator<DSPGraph::Box *>>={unique_ptr<std::__1::__hash_node_base<std::__1::__hash_node<DSPGraph::Box *, void *> *> *[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<DSPGraph::Box *, void *> *> *>>>={__compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<DSPGraph::Box *, void *> *> **, std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<DSPGraph::Box *, void *> *> *>>>=^^{__hash_node_base<std::__1::__hash_node<DSPGraph::Box *, void *> *>}{__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<DSPGraph::Box *, void *> *> *>>={__compressed_pair<unsigned long, std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<DSPGraph::Box *, void *> *> *>>=Q}}}}{__compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<DSPGraph::Box *, void *> *>, std::__1::allocator<std::__1::__hash_node<DSPGraph::Box *, void *>>>={__hash_node_base<std::__1::__hash_node<DSPGraph::Box *, void *> *>=^{__hash_node_base<std::__1::__hash_node<DSPGraph::Box *, void *> *>}}}{__compressed_pair<unsigned long, std::__1::hash<DSPGraph::Box *>>=Q}{__compressed_pair<float, std::__1::equal_to<DSPGraph::Box *>>=f}}}{vector<DSPGraph::ParameterTap, std::__1::allocator<DSPGraph::ParameterTap>>=^{ParameterTap}^{ParameterTap}{__compressed_pair<DSPGraph::ParameterTap *, std::__1::allocator<DSPGraph::ParameterTap>>=^{ParameterTap}}}{vector<DSPGraph::PropertyTap, std::__1::allocator<DSPGraph::PropertyTap>>=^{PropertyTap}^{PropertyTap}{__compressed_pair<DSPGraph::PropertyTap *, std::__1::allocator<DSPGraph::PropertyTap>>=^{PropertyTap}}}{vector<std::__1::unique_ptr<DSPGraph::FileRecorder, std::__1::default_delete<DSPGraph::FileRecorder>>, std::__1::allocator<std::__1::unique_ptr<DSPGraph::FileRecorder, std::__1::default_delete<DSPGraph::FileRecorder>>>>=^{unique_ptr<DSPGraph::FileRecorder, std::__1::default_delete<DSPGraph::FileRecorder>>}^{unique_ptr<DSPGraph::FileRecorder, std::__1::default_delete<DSPGraph::FileRecorder>>}{__compressed_pair<std::__1::unique_ptr<DSPGraph::FileRecorder, std::__1::default_delete<DSPGraph::FileRecorder>> *, std::__1::allocator<std::__1::unique_ptr<DSPGraph::FileRecorder, std::__1::default_delete<DSPGraph::FileRecorder>>>>=^{unique_ptr<DSPGraph::FileRecorder, std::__1::default_delete<DSPGraph::FileRecorder>>}}}{vector<std::__1::unique_ptr<DSPGraph::FileInjector, std::__1::default_delete<DSPGraph::FileInjector>>, std::__1::allocator<std::__1::unique_ptr<DSPGraph::FileInjector, std::__1::default_delete<DSPGraph::FileInjector>>>>=^{unique_ptr<DSPGraph::FileInjector, std::__1::default_delete<DSPGraph::FileInjector>>}^{unique_ptr<DSPGraph::FileInjector, std::__1::default_delete<DSPGraph::FileInjector>>}{__compressed_pair<std::__1::unique_ptr<DSPGraph::FileInjector, std::__1::default_delete<DSPGraph::FileInjector>> *, std::__1::allocator<std::__1::unique_ptr<DSPGraph::FileInjector, std::__1::default_delete<DSPGraph::FileInjector>>>>=^{unique_ptr<DSPGraph::FileInjector, std::__1::default_delete<DSPGraph::FileInjector>>}}}{mutex={_opaque_pthread_mutex_t=q[56c]}}{vector<std::__1::unique_ptr<DSPGraph::Analyzer, std::__1::default_delete<DSPGraph::Analyzer>>, std::__1::allocator<std::__1::unique_ptr<DSPGraph::Analyzer, std::__1::default_delete<DSPGraph::Analyzer>>>>=^{unique_ptr<DSPGraph::Analyzer, std::__1::default_delete<DSPGraph::Analyzer>>}^{unique_ptr<DSPGraph::Analyzer, std::__1::default_delete<DSPGraph::Analyzer>>}{__compressed_pair<std::__1::unique_ptr<DSPGraph::Analyzer, std::__1::default_delete<DSPGraph::Analyzer>> *, std::__1::allocator<std::__1::unique_ptr<DSPGraph::Analyzer, std::__1::default_delete<DSPGraph::Analyzer>>>>=^{unique_ptr<DSPGraph::Analyzer, std::__1::default_delete<DSPGraph::Analyzer>>}}}{Set<DSPGraph::Analyzer *>=^{Member}Q}{map<std::__1::pair<unsigned int, unsigned int>, long long, std::__1::less<std::__1::pair<unsigned int, unsigned int>>, std::__1::allocator<std::__1::pair<const std::__1::pair<unsigned int, unsigned int>, long long>>>={__tree<std::__1::__value_type<std::__1::pair<unsigned int, unsigned int>, long long>, std::__1::__map_value_compare<std::__1::pair<unsigned int, unsigned int>, std::__1::__value_type<std::__1::pair<unsigned int, unsigned int>, long long>, std::__1::less<std::__1::pair<unsigned int, unsigned int>>, true>, std::__1::allocator<std::__1::__value_type<std::__1::pair<unsigned int, unsigned int>, long long>>>=^{__tree_end_node<std::__1::__tree_node_base<void *> *>}{__compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *> *>, std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<std::__1::pair<unsigned int, unsigned int>, long long>, void *>>>={__tree_end_node<std::__1::__tree_node_base<void *> *>=^{__tree_node_base<void *>}}}{__compressed_pair<unsigned long, std::__1::__map_value_compare<std::__1::pair<unsigned int, unsigned int>, std::__1::__value_type<std::__1::pair<unsigned int, unsigned int>, long long>, std::__1::less<std::__1::pair<unsigned int, unsigned int>>, true>>=Q}}}{function<void (double)>={__value_func<void (double)>={type=[32C]}^{__base<void (double)>}}}{function<void (DSPGraph::Box *, unsigned int)>={__value_func<void (DSPGraph::Box *, unsigned int)>={type=[32C]}^{__base<void (DSPGraph::Box *, unsigned int)>}}}{function<void (DSPGraph::Box *, unsigned int)>={__value_func<void (DSPGraph::Box *, unsigned int)>={type=[32C]}^{__base<void (DSPGraph::Box *, unsigned int)>}}}BBBB{optional<unsigned long long>=(?=cQ)B}}
@"SNFileServer"
@"NSMapTable"
@24@0:8#16
@"<SNAnalyzerCreating>"
@"SNAnalyzerHost"
@"<SNProcessing>"
q32@0:8q16^{Box=^^?^{Graph}^{IsoGroup}^{Subset}{basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>={__compressed_pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>::__rep, std::__1::allocator<char>>={__rep=(?={__long=QQ*}{__short=(?=Cc)[23c]}{__raw=[3Q]})}}}q{vector<DSPGraph::InputPort, std::__1::allocator<DSPGraph::InputPort>>=^{InputPort}^{InputPort}{__compressed_pair<DSPGraph::InputPort *, std::__1::allocator<DSPGraph::InputPort>>=^{InputPort}}}{vector<DSPGraph::OutputPort, std::__1::allocator<DSPGraph::OutputPort>>=^{OutputPort}^{OutputPort}{__compressed_pair<DSPGraph::OutputPort *, std::__1::allocator<DSPGraph::OutputPort>>=^{OutputPort}}}{unordered_set<DSPGraph::Box *, std::__1::hash<DSPGraph::Box *>, std::__1::equal_to<DSPGraph::Box *>, std::__1::allocator<DSPGraph::Box *>>={__hash_table<DSPGraph::Box *, std::__1::hash<DSPGraph::Box *>, std::__1::equal_to<DSPGraph::Box *>, std::__1::allocator<DSPGraph::Box *>>={unique_ptr<std::__1::__hash_node_base<std::__1::__hash_node<DSPGraph::Box *, void *> *> *[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<DSPGraph::Box *, void *> *> *>>>={__compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<DSPGraph::Box *, void *> *> **, std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<DSPGraph::Box *, void *> *> *>>>=^^{__hash_node_base<std::__1::__hash_node<DSPGraph::Box *, void *> *>}{__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<DSPGraph::Box *, void *> *> *>>={__compressed_pair<unsigned long, std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<DSPGraph::Box *, void *> *> *>>=Q}}}}{__compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<DSPGraph::Box *, void *> *>, std::__1::allocator<std::__1::__hash_node<DSPGraph::Box *, void *>>>={__hash_node_base<std::__1::__hash_node<DSPGraph::Box *, void *> *>=^{__hash_node_base<std::__1::__hash_node<DSPGraph::Box *, void *> *>}}}{__compressed_pair<unsigned long, std::__1::hash<DSPGraph::Box *>>=Q}{__compressed_pair<float, std::__1::equal_to<DSPGraph::Box *>>=f}}}{vector<DSPGraph::ParameterTap, std::__1::allocator<DSPGraph::ParameterTap>>=^{ParameterTap}^{ParameterTap}{__compressed_pair<DSPGraph::ParameterTap *, std::__1::allocator<DSPGraph::ParameterTap>>=^{ParameterTap}}}{vector<DSPGraph::PropertyTap, std::__1::allocator<DSPGraph::PropertyTap>>=^{PropertyTap}^{PropertyTap}{__compressed_pair<DSPGraph::PropertyTap *, std::__1::allocator<DSPGraph::PropertyTap>>=^{PropertyTap}}}{vector<std::__1::unique_ptr<DSPGraph::FileRecorder, std::__1::default_delete<DSPGraph::FileRecorder>>, std::__1::allocator<std::__1::unique_ptr<DSPGraph::FileRecorder, std::__1::default_delete<DSPGraph::FileRecorder>>>>=^{unique_ptr<DSPGraph::FileRecorder, std::__1::default_delete<DSPGraph::FileRecorder>>}^{unique_ptr<DSPGraph::FileRecorder, std::__1::default_delete<DSPGraph::FileRecorder>>}{__compressed_pair<std::__1::unique_ptr<DSPGraph::FileRecorder, std::__1::default_delete<DSPGraph::FileRecorder>> *, std::__1::allocator<std::__1::unique_ptr<DSPGraph::FileRecorder, std::__1::default_delete<DSPGraph::FileRecorder>>>>=^{unique_ptr<DSPGraph::FileRecorder, std::__1::default_delete<DSPGraph::FileRecorder>>}}}{vector<std::__1::unique_ptr<DSPGraph::FileInjector, std::__1::default_delete<DSPGraph::FileInjector>>, std::__1::allocator<std::__1::unique_ptr<DSPGraph::FileInjector, std::__1::default_delete<DSPGraph::FileInjector>>>>=^{unique_ptr<DSPGraph::FileInjector, std::__1::default_delete<DSPGraph::FileInjector>>}^{unique_ptr<DSPGraph::FileInjector, std::__1::default_delete<DSPGraph::FileInjector>>}{__compressed_pair<std::__1::unique_ptr<DSPGraph::FileInjector, std::__1::default_delete<DSPGraph::FileInjector>> *, std::__1::allocator<std::__1::unique_ptr<DSPGraph::FileInjector, std::__1::default_delete<DSPGraph::FileInjector>>>>=^{unique_ptr<DSPGraph::FileInjector, std::__1::default_delete<DSPGraph::FileInjector>>}}}{mutex={_opaque_pthread_mutex_t=q[56c]}}{vector<std::__1::unique_ptr<DSPGraph::Analyzer, std::__1::default_delete<DSPGraph::Analyzer>>, std::__1::allocator<std::__1::unique_ptr<DSPGraph::Analyzer, std::__1::default_delete<DSPGraph::Analyzer>>>>=^{unique_ptr<DSPGraph::Analyzer, std::__1::default_delete<DSPGraph::Analyzer>>}^{unique_ptr<DSPGraph::Analyzer, std::__1::default_delete<DSPGraph::Analyzer>>}{__compressed_pair<std::__1::unique_ptr<DSPGraph::Analyzer, std::__1::default_delete<DSPGraph::Analyzer>> *, std::__1::allocator<std::__1::unique_ptr<DSPGraph::Analyzer, std::__1::default_delete<DSPGraph::Analyzer>>>>=^{unique_ptr<DSPGraph::Analyzer, std::__1::default_delete<DSPGraph::Analyzer>>}}}{Set<DSPGraph::Analyzer *>=^{Member}Q}{map<std::__1::pair<unsigned int, unsigned int>, long long, std::__1::less<std::__1::pair<unsigned int, unsigned int>>, std::__1::allocator<std::__1::pair<const std::__1::pair<unsigned int, unsigned int>, long long>>>={__tree<std::__1::__value_type<std::__1::pair<unsigned int, unsigned int>, long long>, std::__1::__map_value_compare<std::__1::pair<unsigned int, unsigned int>, std::__1::__value_type<std::__1::pair<unsigned int, unsigned int>, long long>, std::__1::less<std::__1::pair<unsigned int, unsigned int>>, true>, std::__1::allocator<std::__1::__value_type<std::__1::pair<unsigned int, unsigned int>, long long>>>=^{__tree_end_node<std::__1::__tree_node_base<void *> *>}{__compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *> *>, std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<std::__1::pair<unsigned int, unsigned int>, long long>, void *>>>={__tree_end_node<std::__1::__tree_node_base<void *> *>=^{__tree_node_base<void *>}}}{__compressed_pair<unsigned long, std::__1::__map_value_compare<std::__1::pair<unsigned int, unsigned int>, std::__1::__value_type<std::__1::pair<unsigned int, unsigned int>, long long>, std::__1::less<std::__1::pair<unsigned int, unsigned int>>, true>>=Q}}}{function<void (double)>={__value_func<void (double)>={type=[32C]}^{__base<void (double)>}}}{function<void (DSPGraph::Box *, unsigned int)>={__value_func<void (DSPGraph::Box *, unsigned int)>={type=[32C]}^{__base<void (DSPGraph::Box *, unsigned int)>}}}{function<void (DSPGraph::Box *, unsigned int)>={__value_func<void (DSPGraph::Box *, unsigned int)>={type=[32C]}^{__base<void (DSPGraph::Box *, unsigned int)>}}}BBBB{optional<unsigned long long>=(?=cQ)B}}24
@48@0:8@16@?24@?32^@40
@?32@0:8@?16@24
B48@0:8@16@?24@?32^@40
v36@0:8^{AudioBufferList=I[1{AudioBuffer=II^v}]}16I24q28
v32@0:8@16q24
@"SNAudioProcessorCache"
{list<SoundAnalysis::ProcessingContext, std::__1::allocator<SoundAnalysis::ProcessingContext>>="__end_"{__list_node_base<SoundAnalysis::ProcessingContext, void *>="__prev_"^{__list_node_base<SoundAnalysis::ProcessingContext, void *>}"__next_"^{__list_node_base<SoundAnalysis::ProcessingContext, void *>}}"__size_alloc_"{__compressed_pair<unsigned long, std::__1::allocator<std::__1::__list_node<SoundAnalysis::ProcessingContext, void *>>>="__value_"Q}}
{ProcessingTree="mGraph"{shared_ptr<DSPGraph::Graph>="__ptr_"^{Graph}"__cntrl_"^{__shared_weak_count}}"mProcessingContexts"{list<SoundAnalysis::ProcessingContext, std::__1::allocator<SoundAnalysis::ProcessingContext>>="__end_"{__list_node_base<SoundAnalysis::ProcessingContext, void *>="__prev_"^{__list_node_base<SoundAnalysis::ProcessingContext, void *>}"__next_"^{__list_node_base<SoundAnalysis::ProcessingContext, void *>}}"__size_alloc_"{__compressed_pair<unsigned long, std::__1::allocator<std::__1::__list_node<SoundAnalysis::ProcessingContext, void *>>>="__value_"Q}}"mFormatMatchingNodes"{list<SoundAnalysis::FormatMatchingNode, std::__1::allocator<SoundAnalysis::FormatMatchingNode>>="__end_"{__list_node_base<SoundAnalysis::FormatMatchingNode, void *>="__prev_"^{__list_node_base<SoundAnalysis::FormatMatchingNode, void *>}"__next_"^{__list_node_base<SoundAnalysis::FormatMatchingNode, void *>}}"__size_alloc_"{__compressed_pair<unsigned long, std::__1::allocator<std::__1::__list_node<SoundAnalysis::FormatMatchingNode, void *>>>="__value_"Q}}"mSharedProcessingNodes"{list<SoundAnalysis::SharedProcessingNode, std::__1::allocator<SoundAnalysis::SharedProcessingNode>>="__end_"{__list_node_base<SoundAnalysis::SharedProcessingNode, void *>="__prev_"^{__list_node_base<SoundAnalysis::SharedProcessingNode, void *>}"__next_"^{__list_node_base<SoundAnalysis::SharedProcessingNode, void *>}}"__size_alloc_"{__compressed_pair<unsigned long, std::__1::allocator<std::__1::__list_node<SoundAnalysis::SharedProcessingNode, void *>>>="__value_"Q}}"mAnalyzerNodes"{list<SoundAnalysis::AnalyzerNode, std::__1::allocator<SoundAnalysis::AnalyzerNode>>="__end_"{__list_node_base<SoundAnalysis::AnalyzerNode, void *>="__prev_"^{__list_node_base<SoundAnalysis::AnalyzerNode, void *>}"__next_"^{__list_node_base<SoundAnalysis::AnalyzerNode, void *>}}"__size_alloc_"{__compressed_pair<unsigned long, std::__1::allocator<std::__1::__list_node<SoundAnalysis::AnalyzerNode, void *>>>="__value_"Q}}"mRootNode"{RootNode="_vptr$ProcessingNode"^^?"mUpstreamNode"^{ProcessingNode}"mDownstreamNodes"{list<SoundAnalysis::ProcessingNode *, std::__1::allocator<SoundAnalysis::ProcessingNode *>>="__end_"{__list_node_base<SoundAnalysis::ProcessingNode *, void *>="__prev_"^{__list_node_base<SoundAnalysis::ProcessingNode *, void *>}"__next_"^{__list_node_base<SoundAnalysis::ProcessingNode *, void *>}}"__size_alloc_"{__compressed_pair<unsigned long, std::__1::allocator<std::__1::__list_node<SoundAnalysis::ProcessingNode *, void *>>>="__value_"Q}}"mProcessingBox"^{Box}"mUpstreamFormat"{FormatAndBlockSize="mFormat"{AudioStreamBasicDescription="mSampleRate"d"mFormatID"I"mFormatFlags"I"mBytesPerPacket"I"mFramesPerPacket"I"mBytesPerFrame"I"mChannelsPerFrame"I"mBitsPerChannel"I"mReserved"I}"mBlockSize"I}"mDownstreamFormat"{FormatAndBlockSize="mFormat"{AudioStreamBasicDescription="mSampleRate"d"mFormatID"I"mFormatFlags"I"mBytesPerPacket"I"mFramesPerPacket"I"mBytesPerFrame"I"mChannelsPerFrame"I"mBitsPerChannel"I"mReserved"I}"mBlockSize"I}}"mMaxFramesPerSlice"I"mWillInitializeCallback"{function<void (std::__1::shared_ptr<DSPGraph::Graph>, unsigned long)>="__f_"{__value_func<void (std::__1::shared_ptr<DSPGraph::Graph>, unsigned long)>="__buf_"{type="__lx"[32C]}"__f_"^{__base<void (std::__1::shared_ptr<DSPGraph::Graph>, unsigned long)>}}}"mCurrentInputSampleTime"q}
@"AVAudioFormat"
@"SNUltronResultsLogger"
@20@0:8f16
@28@0:8@16I24
v40@0:8^{AudioBufferList=I[1{AudioBuffer=II^v}]}16^{AudioBufferList=I[1{AudioBuffer=II^v}]}24I32I36
i24@0:8@16
i28@0:8@16i24
@32@0:8@16q24
v40@0:8@16@24q32
q24@0:8@16
@40@0:8@16^{__SecTask=}24^@32
@32@0:8@?16@?24
@"<SNResourceCoordinatorXPCProtocol><NSXPCProxyCreating>"
@32@0:8{shared_ptr<DSPGraph::Graph>=^{Graph}^{__shared_weak_count}}16
B32@0:8q16q24
B28@0:8^f16I24
B20@0:8I16
B24@0:8f16I20
B36@0:8^I16^B24I32
B36@0:8^v16^I24I32
B32@0:8r^v16I24I28
@"MLFeatureValue"24@0:8@"NSString"16
@"NSSet"16@0:8
@"MLFeatureDescription"
@"MLMultiArray"
@"DSPGMLInputProvider"
@"<MLFeatureProvider>"
@"NSURL"
@"<SNRequest>"
v52@0:8^{OpaqueAudioQueue=}16^{AudioQueueBuffer=I^vI^vI^{AudioStreamPacketDescription}I}24r^{AudioTimeStamp=dQdQ{SMPTETime=ssIIIssss}II}32I40r^{AudioStreamPacketDescription=qII}44
B24@0:8@?16
^{OpaqueAudioQueue=}
@"SNAudioQueueConfiguration"
@"NSObject<OS_os_transaction>"
@56@0:8@16@24@32{unique_ptr<DSPGraph::Graph, std::__1::default_delete<DSPGraph::Graph>>={__compressed_pair<DSPGraph::Graph *, std::__1::default_delete<DSPGraph::Graph>>=^{Graph}}}40^@48
@"MLMultiArrayConstraint"
{unique_ptr<DSPGraph::Graph, std::__1::default_delete<DSPGraph::Graph>>="__ptr_"{__compressed_pair<DSPGraph::Graph *, std::__1::default_delete<DSPGraph::Graph>>="__value_"^{Graph}}}
{vector<float, std::__1::allocator<float>>="__begin_"^f"__end_"^f"__end_cap_"{__compressed_pair<float *, std::__1::allocator<float>>="__value_"^f}}
@40@0:8@"MLModelDescription"16@"NSDictionary"24^@32
@"<MLBatchProvider>"40@0:8@"<MLBatchProvider>"16@"MLPredictionOptions"24^@32
@"SNDSPGraphCustomModel"
v48@0:8@16@24@?32@?40
@"SNForwardPassAudioStreamAnalyzer"
{unique_ptr<AudioRingBuffer, std::__1::default_delete<AudioRingBuffer>>="__ptr_"{__compressed_pair<AudioRingBuffer *, std::__1::default_delete<AudioRingBuffer>>="__value_"^{AudioRingBuffer}}}
{unique_ptr<CABufferList, std::__1::default_delete<CABufferList>>="__ptr_"{__compressed_pair<CABufferList *, std::__1::default_delete<CABufferList>>="__value_"^{CABufferList}}}
@56@0:8@16@24@32@40q48
B48@0:8@16@24@32^@40
B32@0:8q16^@24
{?="value"q"timescale"i"flags"I"epoch"q}
@"CUFileServer"
@"RPCompanionLinkClient"
v40@0:8@"<SNRequest>"16@"<SNResultsObservingXPCProtocol>"24@?<v@?@"NSError">32
v24@0:8@?<v@?>16
@"SNNullDetector"
@44@0:8d16I24d28B36B40
@"SNAudioRecordingQueue"
{unordered_map<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>, std::__1::hash<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>>, std::__1::equal_to<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>>, std::__1::allocator<std::__1::pair<const std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>>>>={__hash_table<std::__1::__hash_value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>>, std::__1::__unordered_map_hasher<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>, std::__1::__hash_value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>>, std::__1::hash<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>>, true>, std::__1::__unordered_map_equal<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>, std::__1::__hash_value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>>, std::__1::equal_to<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>>, true>, std::__1::allocator<std::__1::__hash_value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>>>>={unique_ptr<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>>, void *> *> *[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>>, void *> *> *>>>={__compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>>, void *> *> **, std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>>, void *> *> *>>>=^^{__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>>, void *> *>}{__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>>, void *> *> *>>={__compressed_pair<unsigned long, std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>>, void *> *> *>>=Q}}}}{__compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>>, void *> *>, std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>>, void *>>>={__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>>, void *> *>=^{__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>>, void *> *>}}}{__compressed_pair<unsigned long, std::__1::__unordered_map_hasher<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>, std::__1::__hash_value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>>, std::__1::hash<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>>, true>>=Q}{__compressed_pair<float, std::__1::__unordered_map_equal<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>, std::__1::__hash_value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>>, std::__1::equal_to<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>>, true>>=f}}}24@0:8@16
{vector<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>>>=^{basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>}^{basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>}{__compressed_pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>> *, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>>>=^{basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>}}}24@0:8@16
{unique_ptr<DSPGraph::Interpreter, std::__1::default_delete<DSPGraph::Interpreter>>="__ptr_"{__compressed_pair<DSPGraph::Interpreter *, std::__1::default_delete<DSPGraph::Interpreter>>="__value_"^{Interpreter}}}
v24@0:8@"<SNResult>"16
@?<v@?>16@0:8
@56@0:8d16d24d32@?40@?48
@"<SNProcessing>"24@0:8^@16
{?=qiIq}16@0:8
v40@0:8{?=qiIq}16
@"<SNResultsObservingXPCProtocol><NSXPCProxyCreating>"
@24@0:8@?16
@24@0:8@?<v@?@"NSError">16
