length
sharedInstance
fetchCNContactForHandleWithID:
array
phoneNumbersForCNContact:
countByEnumeratingWithState:objects:count:
setNumber:
addObject:
copy
setPhones:
emailsForCNContact:
setEmailAddress:
setEmails:
firstNameForCNContact:
setFirstName:
lastNameForCNContact:
setLastName:
middleName
setMiddleName:
fullNameForCNContact:
setFullName:
namePrefix
setPrefix:
nameSuffix
setSuffix:
nickNameForCNContact:
setNickName:
birthday
currentCalendar
dateFromComponents:
setBirthday:
messageType
address
setData:
personFromRawAddress:
displayName
setDisplayText:
setObject:
recipients
count
initWithCapacity:
_getPersonAttributeFromHandle:
sender
fullName
date
setDateSent:
subject
setSubject:
isAudioMessage
numberWithBool:
setIsAudioMessage:
setHasGroupName:
lastReadDate
setDateLastMessageReadInThread:
_messageTypeForMessage:
setMessageType:
chatGuids
firstObject
setChatIdentifier:
effect
setEffect:
hasGroupName
setGroupName:
messageID
stringWithFormat:
URLWithString:
setIdentifier:
_getSenderFromMessage:
setMsgSender:
_getRecipientsFromMessage:
setMsgRecipients:
msgRecipients
numberWithUnsignedInteger:
bundleId
setBundleId:
displayAppName
setDisplayAppName:
guid
start
outgoing
boolValue
isOutgoing
unread
isRead
compare:
_smsForIMSPIMessage:
referencedMessage
setReferencedMessage:
_appInfoForMessage:
setAppInfo:
smsGroup
groupNameId
arrayWithObject:
senders
objectAtIndex:
internalGUID
fetchCNContactWithIdentifier:
addObjectsFromArray:
canonicalizeNumber:
setResults:
_validate
_perform
dictionary
isEqual:
class
self
performSelector:
performSelector:withObject:
performSelector:withObject:withObject:
isProxy
isKindOfClass:
isMemberOfClass:
conformsToProtocol:
respondsToSelector:
retain
release
autorelease
retainCount
zone
hash
superclass
description
debugDescription
TQ,R
T#,R
T@"NSString",R,C
performWithCompletion:
performWithCompletion:serviceHelper:
performWithCompletion:serviceHelper:executionInfo:
initWithDictionary:
identifiers
initWithReason:
_validateRetrieve
identifier
setObjects:
stringByAppendingString:
isEqualToString:
syncDidEnd
setFinalAnchor:
setPostAnchors:
setDomainObjects:
string
appendFormat:
identifierForChatIdentifier:
setGroupNameId:
appendString:
resetWithValidity:
domainObjects
finalAnchor
postAnchors
indexOfObject:
setPostAnchor:
beginSyncWithAnchor:validity:forKey:beginInfo:
beginSyncWithAnchor:validity:count:forKey:beginInfo:
beginSyncWithAnchor:validity:count:forKey:beginInfo:configuration:
beginSyncWithInfo:configuration:
getChangeAfterAnchor:changeInfo:
syncSnapshotForKey:
currentSyncSnapshot
syncVerificationKeyForKey:
.cxx_destruct
_finalAnchor
_postAnchors
_domainObjects
T@"NSString",C,N,V_finalAnchor
T@"NSMutableArray",&,N,V_postAnchors
T@"NSMutableArray",&,N,V_domainObjects
_validateCancel
_cancelSMS
phones
number
UUID
UUIDString
setInternalGUID:
setObject:forKey:
emails
emailAddress
phoneNumbers
value
stringValue
label
emailAddresses
objectForKey:
containsObject:
setRecipients:
isContactLimitsFeatureEnabled
allowedToShowConversationWithHandleIDs:sync:context:
fetchCNContactForHandleID:withKeys:
initWithErrorCode:
object
clientShouldResolvePhonesAndEmails
_search
_oldSearch
smsGroupName
setSmsGroups:
setFields
addFields
removeFields
updateUsingSet:add:remove:
absoluteString
_validateUpdate
_updateSMS
addListenerID:capabilities:
blockUntilConnected
errorWithDomain:code:userInfo:
sendSMS:toAddresses:groupNameID:idsIdentifier:
smsService
existingChatWithChatIdentifier:
_ck_chatForHandles:createIfNecessary:
join
lastAddressedHandleID
lastAddressedSIMID
bestSenderIdentityForHandleIDs:
handle
accountUUID
setLastAddressedSIMID:
setLastAddressedHandleID:
shouldForceToSMS:
updateShouldForceToSMS:
initWithChat:
refreshServiceForSending
initWithString:
initWithText:subject:
messageWithComposition:
account
service
markAllMessagesAsRead
setNotificationIDSTokenURI:
setSourceApplicationID:
sendMessage:onService:newComposition:
defaultCenter
dictionaryWithObjects:forKeys:count:
postNotificationName:object:userInfo:
iMessageService
hasAlias:onAccountForService:
_connectToDaemonIfNeeded
errorWithDescription:
sendSMS:toAddresses:groupNameID:
addListenerID:forService:
isMainThread
stringGUID
urlFromString
availabilityForListenerID:forService:
_createSMSObject
initialize
x-apple-sms:guid=%lld
CKAssistant
Message has %@ recipients.
AssistantSearch - Looking at message with guid %@ [date %@, self.start %@, self.end %@] [self.outgoing %@, ougoing %@], [self.unread %@, unread %@]
AssistantSearch - Found referenced message with guid %@
AssistantSearch - Found message with guid %@
AssistantSearch - SPIQuery found %@ messages but filtered that to %@ in filterBlock
v16@?0@"NSArray"8
Searching for imessages with groupID %@
Searching for last 10 messages with IDs %@ and services %@
No senders or groups specified, searching for last 10 unread messages
CKAssistantSearch performWithCompletion
CKAssistantSearch returning %@
No identifiers to retrieve
SMSRetrieve performWithCompletion
x-apple-sms-group://
beginSyncWithAnchor: %@ validity: %@ forKey: %@
com.apple.chatkit.groups
%ld:
%@-%@
getChangeAfterAnchor: %@
Syncing index: %lu from %lu available objects.
Expected identifier to be set
Expected SASmsSms for identifier
SMSCancel performWithCompletion
Performing fast search path with recipients: %@
Found record for internal GUID %@: %@
Found number %@ for label %@
Found email %@ for label %@
v8@?0
Setting SAPerson as object on attribute: %@
recipient search result %@
blocking handles due to Screen Time policy, error code: %ld
Performing old search path with recipients: %@
Returning recipient old search result %@
CKAssistantSMSRecipientSearch has nil or empty recipients.
SMSRecipientSearch performWithCompletion
SMSRecipientSearch has nil or empty recipients
iMessage
Looking at groups with name %@ and found groups names %@
Looking at groups with name %@ but there were no named chats at all
SMS Group search returning result %@
CKAssistantSMSGroupSearch has nil or empty group name
SMSGroupSearch performWithCompletion
Could not create SMS object to update from current draft
Invalid sms identifier
Expected SASmsSms for setFields
Expected SASmsSms for addFields
Expected SASmsSms for removeFields
SMSUpdate performWithCompletion
CKAssistantSentMessageNotification
CKAssistantSentMessageNotificationMessageKey
SiriSMS
CKAssistantSMSSendErrorDomain
Trying to send sms to addresses %@, groupNameID %@, idsIdentifier %@
Found chat %@ to send message to, joining it.
Setting LastAddressedSIMID to: %@, LastAddressedHandleID: %@
Forcing to update shouldForceToSMS. iMessage is not enabled for SIM phone number = %@ or phone number is nil. 
We have existing conversation with LastAddressedSIMID = %@, LastAddressedHandleID = %@
Setting idsIdentifier provided %@ on immessageitem
com.apple.siri
Sending message with guid %@, message %@, serviceToUse %@
Siri made no message: %@, chat: %@, conversation: %@
No handles or group name provided failing to send **should have failed earlier, file a radar**
Checking if we should force to SMS for phone number: %@
kSMSCreateListener
sms:draft
x-apple-sms-draft:guid=%@
SMSCreate performWithCompletion
SMSCreate returning error imMessage not available for non-SMS capable device
SMSCreate returning %@
CKAssistantSearch
AFServiceCommand
NSObject
CKAssistantSMSRetrieve
CKAssistantSyncHandler
AFSyncHandler
CKAssistantSMSCancel
CKAssistantSMSRecipientSearch
CKAssistantSMSGroupSearch
CKAssistantSMSUpdate
CKAssistantSMSSend
CKAssistantSMSCreate
B24@0:8@16
#16@0:8
@16@0:8
@24@0:8:16
@32@0:8:16@24
@40@0:8:16@24@32
B16@0:8
B24@0:8#16
B24@0:8:16
Vv16@0:8
Q16@0:8
^{_NSZone=}16@0:8
B24@0:8@"Protocol"16
@"NSString"16@0:8
v24@0:8@?16
v32@0:8@?16@24
v40@0:8@?16@24@32
@24@0:8@16
v24@0:8@?<v@?@"NSDictionary">16
v32@0:8@?<v@?@"NSDictionary">16@"<AFServiceHelper>"24
v40@0:8@?<v@?@"NSDictionary">16@"<AFServiceHelper>"24@"AFCommandExecutionInfo"32
@24@0:8@"NSDictionary"16
v48@0:8@16@24@32@40
v56@0:8@16@24q32@40@48
v64@0:8@16@24q32@40@48@56
v32@0:8@16@24
v16@0:8
v48@0:8@"NSString"16@"NSString"24@"NSString"32@"<AFSyncBeginInfo>"40
v56@0:8@"NSString"16@"NSString"24q32@"NSString"40@"<AFSyncBeginInfo>"48
v64@0:8@"NSString"16@"NSString"24q32@"NSString"40@"<AFSyncBeginInfo>"48@"<AFSyncConfiguration>"56
v32@0:8@"<AFSyncBeginInfo>"16@"<AFSyncConfiguration>"24
v32@0:8@"NSString"16@"<AFSyncChangeInfo>"24
@"AFSyncSnapshot"24@0:8@"NSString"16
@"AFSyncSnapshot"16@0:8
@"NSString"24@0:8@"NSString"16
v24@0:8@16
@"NSString"
@"NSMutableArray"
v40@0:8@16@24@32
zPLR
 #&)
!$'*//-
length
sharedInstance
fetchCNContactForHandleWithID:
array
phoneNumbersForCNContact:
countByEnumeratingWithState:objects:count:
setNumber:
addObject:
copy
setPhones:
emailsForCNContact:
setEmailAddress:
setEmails:
firstNameForCNContact:
setFirstName:
lastNameForCNContact:
setLastName:
middleName
setMiddleName:
fullNameForCNContact:
setFullName:
namePrefix
setPrefix:
nameSuffix
setSuffix:
nickNameForCNContact:
setNickName:
birthday
currentCalendar
dateFromComponents:
setBirthday:
messageType
address
setData:
personFromRawAddress:
displayName
setDisplayText:
setObject:
recipients
count
initWithCapacity:
_getPersonAttributeFromHandle:
sender
fullName
date
setDateSent:
subject
setSubject:
isAudioMessage
numberWithBool:
setIsAudioMessage:
setHasGroupName:
lastReadDate
setDateLastMessageReadInThread:
_messageTypeForMessage:
setMessageType:
chatGuids
firstObject
setChatIdentifier:
effect
setEffect:
hasGroupName
setGroupName:
messageID
stringWithFormat:
URLWithString:
setIdentifier:
_getSenderFromMessage:
setMsgSender:
_getRecipientsFromMessage:
setMsgRecipients:
msgRecipients
numberWithUnsignedInteger:
bundleId
setBundleId:
displayAppName
setDisplayAppName:
guid
start
outgoing
boolValue
isOutgoing
unread
isRead
compare:
_smsForIMSPIMessage:
referencedMessage
setReferencedMessage:
_appInfoForMessage:
setAppInfo:
smsGroup
groupNameId
arrayWithObject:
senders
objectAtIndex:
internalGUID
fetchCNContactWithIdentifier:
addObjectsFromArray:
canonicalizeNumber:
setResults:
_validate
_perform
dictionary
isEqual:
class
self
performSelector:
performSelector:withObject:
performSelector:withObject:withObject:
isProxy
isKindOfClass:
isMemberOfClass:
conformsToProtocol:
respondsToSelector:
retain
release
autorelease
retainCount
zone
hash
superclass
description
debugDescription
TQ,R
T#,R
T@"NSString",R,C
performWithCompletion:
performWithCompletion:serviceHelper:
performWithCompletion:serviceHelper:executionInfo:
initWithDictionary:
identifiers
initWithReason:
_validateRetrieve
identifier
setObjects:
stringByAppendingString:
isEqualToString:
syncDidEnd
setFinalAnchor:
setPostAnchors:
setDomainObjects:
string
appendFormat:
identifierForChatIdentifier:
setGroupNameId:
appendString:
resetWithValidity:
domainObjects
finalAnchor
postAnchors
indexOfObject:
setPostAnchor:
beginSyncWithAnchor:validity:forKey:beginInfo:
beginSyncWithAnchor:validity:count:forKey:beginInfo:
beginSyncWithAnchor:validity:count:forKey:beginInfo:configuration:
beginSyncWithInfo:configuration:
getChangeAfterAnchor:changeInfo:
syncSnapshotForKey:
currentSyncSnapshot
syncVerificationKeyForKey:
.cxx_destruct
_finalAnchor
_postAnchors
_domainObjects
T@"NSString",C,N,V_finalAnchor
T@"NSMutableArray",&,N,V_postAnchors
T@"NSMutableArray",&,N,V_domainObjects
_validateCancel
_cancelSMS
phones
number
UUID
UUIDString
setInternalGUID:
setObject:forKey:
emails
emailAddress
phoneNumbers
value
stringValue
label
emailAddresses
objectForKey:
containsObject:
setRecipients:
isContactLimitsFeatureEnabled
allowedToShowConversationWithHandleIDs:sync:context:
fetchCNContactForHandleID:withKeys:
initWithErrorCode:
object
clientShouldResolvePhonesAndEmails
_search
_oldSearch
smsGroupName
setSmsGroups:
setFields
addFields
removeFields
updateUsingSet:add:remove:
absoluteString
_validateUpdate
_updateSMS
addListenerID:capabilities:
blockUntilConnected
errorWithDomain:code:userInfo:
sendSMS:toAddresses:groupNameID:idsIdentifier:
smsService
existingChatWithChatIdentifier:
_ck_chatForHandles:createIfNecessary:
join
lastAddressedHandleID
lastAddressedSIMID
bestSenderIdentityForHandleIDs:
handle
accountUUID
setLastAddressedSIMID:
setLastAddressedHandleID:
shouldForceToSMS:
updateShouldForceToSMS:
initWithChat:
refreshServiceForSending
initWithString:
initWithText:subject:
messageWithComposition:
account
service
markAllMessagesAsRead
setNotificationIDSTokenURI:
setSourceApplicationID:
sendMessage:onService:newComposition:
defaultCenter
dictionaryWithObjects:forKeys:count:
postNotificationName:object:userInfo:
iMessageService
hasAlias:onAccountForService:
_connectToDaemonIfNeeded
errorWithDescription:
sendSMS:toAddresses:groupNameID:
addListenerID:forService:
isMainThread
stringGUID
urlFromString
availabilityForListenerID:forService:
_createSMSObject
initialize
x-apple-sms:guid=%lld
CKAssistant
Message has %@ recipients.
AssistantSearch - Looking at message with guid %@ [date %@, self.start %@, self.end %@] [self.outgoing %@, ougoing %@], [self.unread %@, unread %@]
AssistantSearch - Found referenced message with guid %@
AssistantSearch - Found message with guid %@
AssistantSearch - SPIQuery found %@ messages but filtered that to %@ in filterBlock
v16@?0@"NSArray"8
Searching for imessages with groupID %@
Searching for last 10 messages with IDs %@ and services %@
No senders or groups specified, searching for last 10 unread messages
CKAssistantSearch performWithCompletion
CKAssistantSearch returning %@
No identifiers to retrieve
SMSRetrieve performWithCompletion
x-apple-sms-group://
beginSyncWithAnchor: %@ validity: %@ forKey: %@
com.apple.chatkit.groups
%ld:
%@-%@
getChangeAfterAnchor: %@
Syncing index: %lu from %lu available objects.
Expected identifier to be set
Expected SASmsSms for identifier
SMSCancel performWithCompletion
Performing fast search path with recipients: %@
Found record for internal GUID %@: %@
Found number %@ for label %@
Found email %@ for label %@
v8@?0
Setting SAPerson as object on attribute: %@
recipient search result %@
blocking handles due to Screen Time policy, error code: %ld
Performing old search path with recipients: %@
Returning recipient old search result %@
CKAssistantSMSRecipientSearch has nil or empty recipients.
SMSRecipientSearch performWithCompletion
SMSRecipientSearch has nil or empty recipients
iMessage
Looking at groups with name %@ and found groups names %@
Looking at groups with name %@ but there were no named chats at all
SMS Group search returning result %@
CKAssistantSMSGroupSearch has nil or empty group name
SMSGroupSearch performWithCompletion
Could not create SMS object to update from current draft
Invalid sms identifier
Expected SASmsSms for setFields
Expected SASmsSms for addFields
Expected SASmsSms for removeFields
SMSUpdate performWithCompletion
CKAssistantSentMessageNotification
CKAssistantSentMessageNotificationMessageKey
SiriSMS
CKAssistantSMSSendErrorDomain
Trying to send sms to addresses %@, groupNameID %@, idsIdentifier %@
Found chat %@ to send message to, joining it.
Setting LastAddressedSIMID to: %@, LastAddressedHandleID: %@
Forcing to update shouldForceToSMS. iMessage is not enabled for SIM phone number = %@ or phone number is nil. 
We have existing conversation with LastAddressedSIMID = %@, LastAddressedHandleID = %@
Setting idsIdentifier provided %@ on immessageitem
com.apple.siri
Sending message with guid %@, message %@, serviceToUse %@
Siri made no message: %@, chat: %@, conversation: %@
No handles or group name provided failing to send **should have failed earlier, file a radar**
Checking if we should force to SMS for phone number: %@
kSMSCreateListener
sms:draft
x-apple-sms-draft:guid=%@
SMSCreate performWithCompletion
SMSCreate returning error imMessage not available for non-SMS capable device
SMSCreate returning %@
CKAssistantSearch
AFServiceCommand
NSObject
CKAssistantSMSRetrieve
CKAssistantSyncHandler
AFSyncHandler
CKAssistantSMSCancel
CKAssistantSMSRecipientSearch
CKAssistantSMSGroupSearch
CKAssistantSMSUpdate
CKAssistantSMSSend
CKAssistantSMSCreate
B24@0:8@16
#16@0:8
@16@0:8
@24@0:8:16
@32@0:8:16@24
@40@0:8:16@24@32
B16@0:8
B24@0:8#16
B24@0:8:16
Vv16@0:8
Q16@0:8
^{_NSZone=}16@0:8
B24@0:8@"Protocol"16
@"NSString"16@0:8
v24@0:8@?16
v32@0:8@?16@24
v40@0:8@?16@24@32
@24@0:8@16
v24@0:8@?<v@?@"NSDictionary">16
v32@0:8@?<v@?@"NSDictionary">16@"<AFServiceHelper>"24
v40@0:8@?<v@?@"NSDictionary">16@"<AFServiceHelper>"24@"AFCommandExecutionInfo"32
@24@0:8@"NSDictionary"16
v48@0:8@16@24@32@40
v56@0:8@16@24q32@40@48
v64@0:8@16@24q32@40@48@56
v32@0:8@16@24
v16@0:8
v48@0:8@"NSString"16@"NSString"24@"NSString"32@"<AFSyncBeginInfo>"40
v56@0:8@"NSString"16@"NSString"24q32@"NSString"40@"<AFSyncBeginInfo>"48
v64@0:8@"NSString"16@"NSString"24q32@"NSString"40@"<AFSyncBeginInfo>"48@"<AFSyncConfiguration>"56
v32@0:8@"<AFSyncBeginInfo>"16@"<AFSyncConfiguration>"24
v32@0:8@"NSString"16@"<AFSyncChangeInfo>"24
@"AFSyncSnapshot"24@0:8@"NSString"16
@"AFSyncSnapshot"16@0:8
@"NSString"24@0:8@"NSString"16
v24@0:8@16
@"NSString"
@"NSMutableArray"
v40@0:8@16@24@32
