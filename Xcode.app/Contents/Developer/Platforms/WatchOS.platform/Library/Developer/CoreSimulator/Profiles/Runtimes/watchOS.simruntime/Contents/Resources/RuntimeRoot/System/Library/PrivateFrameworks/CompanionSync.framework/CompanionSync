%@ %@
header
syncID
-[SYRequestFullSync writeTo:]
SYRequestFullSync.m
self->_header != nil
nil != self->_syncID
v16@?0@"SYTransaction"8
 - %s
SQLiteErrorDomain
SyncErrorAlert
Pumbaa
v8@?0
Library
Logs
CompanionSync
com.apple.companionsync
general
session
transport
persistence
transactions
protocol
streams
signposts
messages
EqrsVvjcYDdxHBiQmGhAWw
<NSError %p>(domain: %@, code: %ld)
I/O error: READ
I/O error: SHORT_READ
I/O error: WRITE
I/O error: FSYNC
I/O error: DIR_FSYNC
I/O error: TRUNCATE
I/O error: FSTAT
I/O error: UNLOCK
I/O error: RDLOCK
I/O error: DELETE
I/O error: BLOCKED
I/O error: NOMEM
I/O error: ACCESS
I/O error: CHECKRESERVEDLOCK
I/O error: LOCK
I/O error: CLOSE
I/O error: DIR_CLOSE
I/O error: SHMOPEN
I/O error: SHMSIZE
I/O error: SHMLOCK
I/O error: SHMMAP
I/O error: SEEK
I/O error: DELETE_NOENT
I/O error: MMAP
I/O error: GETTEMPPATH
I/O error: CONVPATH
I/O error: VNODE
I/O error: AUTH
Lock error: SHAREDCACHE
Busy error: RECOVERY
Busy error: SNAPSHOT
Cant-open error: ISDIR
Cant-open error: NOTEMPDIR
Cant-open error: FULLPATH
Cant-open error: CONVPATH
Corrupt error: VTAB
Read-only error: CANTLOCK
Read-only error: RECOVERY
Read-only error: ROLLBACK
Read-only error: DBMOVED
Abort error: ROLLBACK
Constraint error: CHECK
Constraint error: COMMITHOOK
Constraint error: FOREIGNKEY
Constraint error: FUNCTION
Constraint error: NOTNULL
Constraint error: PRIMARYKEY
Constraint error: TRIGGER
Constraint error: UNIQUE
Constraint error: VTAB
Constraint error: ROWID
Notice: RECOVER_WAL
Notice: RECOVER_ROLLBACK
Warning: AUTOINDEX
Auth error: USER
0123456789abcdef
domain
code
-[SYLogErrorInfo writeTo:]
SYLogErrorInfo.m
nil != self->_domain
v20@?0B8@"NSError"12
startAnchor
endAnchor
decompressedFileSize
-[SYFileTransferInfo writeTo:]
SYFileTransferInfo.m
sessionID
index
changes
-[SYSyncBatch writeTo:]
SYSyncBatch.m
nil != self->_sessionID
self
v16@?0@"NSNotification"8
mobile
SELECT count(*) FROM _clients WHERE name=?
SELECT schema_version FROM _clients WHERE name=?
UPDATE _clients SET schema_version=?, tstamp=datetime('now') WHERE name=?
INSERT INTO _clients (schema_version, name, tstamp) VALUES (?, ?, datetime('now'))
CREATE TABLE IF NOT EXISTS _clients (name TEXT, schema_version TEXT, tstamp TEXT)
v16@?0^{sqlite3=}8
PRAGMA journal_mode=WAL;
v32@?0@"NSString"8@?<q@?^{sqlite3=}q>16^B24
_SYSharedServiceDB.schemaVersionForClient(_:)
_SYSharedServiceDB.setSchemaVersion(_:forClient:)
_SYSharedServiceDB._LOCKED_runSchemaUpdate(_:forClientNamed:)
_SYSharedServiceDB.updateSchemaForClient(_:usingBlock:)
_SYSharedServiceDB.withDBRef(_:)
_SYSharedServiceDB.runTransactionBlock(_:)
BEGIN EXCLUSIVE TRANSACTION
BEGIN TRANSACTION
[nil]
COMMIT TRANSACTION
exclusive
non-exclusive
ROLLBACK TRANSACTION
main
protection-class
SYZlibErrorDomain
1.2.11
userInfo
-[SYErrorInfo writeTo:]
SYErrorInfo.m
kSYDictionaryObjectSyncIDKey
Invalid dictionary
SYDictionaryObject properties dictionaries must contain an NSString for the kSYDictionaryObjectSyncIDKey key
SYDictProperties
-[SYChangeMessage writeTo:]
SYChangeMessage.m
SYChangeSerializer %@ needs to implement SYObjectWithData: to communicate with devices running WatchOS 1.x
estimatedChangeCount
-[SYBatchSyncStart writeTo:]
SYBatchSyncStart.m
name
engine
sessionQueueRunning
targetedDevice
enqueuedSyncType
transportOptions
peerID
peerGenerationID
serviceType
-[SYLogServiceState writeTo:]
SYLogServiceState.m
nil != self->_name
None
Delta
Reset
(unknown: %i)
Master
Slave
-[%@ init] is not supported.
DeviceClassNumber
companionsync_serial_qos
companionsync_serial
SYStore must be given a delegate object before it can be resumed.
SYStore does not have a serializer. You must set it.
q24@?0@"NSMutableArray"8^@16
%@ (objectIdentifier: %@, sequencer: %@, changeType: %d, wrappedObject: %@)
Unsupported URL
This API only works with file URLs.
Ensure that you pass a valid file or file-reference URL into this API.
-[SYStateProvider init] is unavailable. Please use +stateProviderWithName:type: instead.
companionsync
^{os_state_data_s=I(?=b32I){os_state_data_decoder_s=[64c][64c]}[64c][0C]}16@?0^{os_state_hints_s=I*II}8
@"NSData"16@?0@8
<object does not support property list serialization : %@ (%@ / %ld)>
<object is not a protobuf object>
SYErrorDomain
Operation was canceled
Waiting for Full Sync
Session ID mismatch
Snsseih packet lost
Sender died
Initial full sync must happen first
Deletions are not permitted for this client.
There is a full-sync pending; please terminate this delta sync.
No peer device is connected or available at this time.
The receiver has not completed its setup.
The receiver is already running.
This operation cannot complete until pairing is completed.
This message is part of a session, but that session doesn't appear to exist.
The receiver already has a session in progress, and does not believe it should cancel that one to take this message.
The received message's session ID does not match the ID of the currently active session
The transaction timed out.
This feature is not supported by this client.
The SYSession is not currently running. Either it has not been started or it has completed.
The SYSession is currently starting or restarting, and cannot perform the requested operation.
The SYSession is not in the correct state to handle this message.
One or more sync batches failed to be delivered or acknowledged.
There is no data available for the given session.
A reset sync was sent to a master device from a slave. This is not supported.
The received message was not recognized.
The received message could not be deserialized, and may have become corrupted.
The system could not generate a sync message; some data was unavailable.
The system tried to switch protocols on the fly, but failed.
Retry the operation immediately -- the SYService should be able to start a new session correctly. It's the internal swap-stuff-around that's failed.
The message was dropped due to a device switch.
A delegate object needs to implement an optional method to perform the requested action.
The session was terminated due to a device switch.
The session was canceled to make way for a requested reset sync.
The session was canceled due to losing in a collision; the winning session will begin momentarily.
A reset request was sent to a slave device, which is invalid.
v24@?0Q8@"NSString"16
 Change Enqueuer
SYDelegateProtocolName
SYDelegateMethodNames
B16@?0@"<SYChange>"8
v28@?0B8@"NSString"12@"NSError"20
This session does not support being restarted.
You cannot start an SYSession without a delegate.
v32@?0@8Q16^B24
type
suspended
inSession
buffersSessions
Messaging
FileTransfer
DirectConnection
InitialSync
UserInfo
IDSOptions
BatchIndex
SyncID
high
urgent
companionsync_serial.%p
companionsync_serial_qos.%p
Caches
SimulatorPairingStore
EnableTransmitWindow
MaxMessagesInFlight
MinMessagesInFlight
MaxBytesInFlight
com.apple.companionsync.prefsupdated
Message out of order in 
File against Pepper CompanionSync|1.0, attach all logs
v16@?0@"NMSIncomingRequest"8
v16@?0@"NMSIncomingResponse"8
Unacked batch while syncing 
File against Pepper CompanionSync|1.0
v16@?0@"NSError"8
apple-internal-install
/usr/local/bin/idstool
dump
v32@?0@"NSData"8Q16^B24
Change-list bubble detected
No delegate
failure
success
SendMessage-legacy
Delete Denied
A client attempted to send a delete message while deletes were denied.
DB changelog failure. 
Sync sent to master
Full sync sent to master device
Only the slave device should receive a full sync (from the master)
Sync request sent to slave
Full sync requested from slave device
Only the master device can send a full sync (to the slave)
Missing delegate method
The delegate on the master (alwaysWins) side must implement syncStoreAllObjects
-Master-
v20@?0@"NSError"8i16
v20@?0@"NSError"8B16
Full batched sync sent to master device
com.apple.private.alloy.addressbooksync
com.apple.private.alloy.appregistrysync
com.apple.private.alloy.eventkitsync
com.apple.private.alloy.location.auth
LocA
com.apple.private.alloy.location.wifitilesync
LocW
com.apple.private.alloy.maps.sync
Maps
com.apple.private.alloy.voicemailsync
com.apple.private.alloy.health.sync
Health
SY:degenerate
value
-[SYLogTransportOption writeTo:]
SYLogTransportOption.m
nil != self->_key
nil != self->_value
accepted
error
-[SYResetResponse writeTo:]
SYResetResponse.m
rollback
-[SYEndSyncSession writeTo:]
SYEndSyncSession.m
SYServiceOptionCompressionLevel
SYServiceOptionEnableCRC
SYServiceOptionDiskBufferProtectionClass
SYServiceOptionMessageTimeout
SYServiceOptionPriorityOverride
'W'yyyy-MM-dd'T'HH:mm:ss.SSS
CompanionSync.SYService.%@.%p
CompanionSync.SYService.%@.incoming-io
CompanionSync.SYService.%@.delegate
as Master
as Slave
CompanionSync.SYService.%@.SessionStartQueue
Exception while generating state: %@
SYLogServiceState
Service '%s'
Watch
CompanionSync.SYService.%s.delegate
SYService has already been resumed.
SYService cannot be resumed until a delegate has been set.
0BADF00D-DEAD-0000-9999-1234567890AB
delta
reset
No pairing store path is available, which usually indicates we are not paired.
Failed to create persistent store
SYFileTransfer-XXXXX
(no error)
addressbooksync
appregistrysync
eventkitsync
location.auth
location.wifitilesync
maps.sync
tccd.sync
voicemailsync
sqlitedb
com.apple.private.NanoMessagingService
NMSWindow<%p> sync queue
meta
tstamp
SELECT COUNT(*) FROM meta
meta.db
CREATE TABLE IF NOT EXISTS meta (version INTEGER PRIMARY KEY AUTOINCREMENT, tstamp TEXT)
CREATE TABLE IF NOT EXISTS in_window (expires REAL, msg_id TEXT, num_bytes INTEGER)
CREATE TABLE IF NOT EXISTS msg_queue (pk INTEGER PRIMARY KEY AUTOINCREMENT, uuid TEXT, tstamp REAL)
CREATE UNIQUE INDEX sent_by_uuid ON in_window (msg_id ASC)
CREATE INDEX expiry ON in_window (expires ASC, msg_id)
INSERT INTO meta (tstamp) VALUES (datetime('now'))
q24@?0^{sqlite3=}8q16
INSERT INTO in_window (expires, msg_id, num_bytes) VALUES (?, ?, ?)
SELECT num_bytes FROM in_window WHERE msg_id=?
DELETE FROM in_window WHERE msg_id=?
SELECT expires FROM in_window ORDER BY expires LIMIT 1
SELECT msg_id FROM in_window WHERE expires < ?
SELECT SUM(num_bytes) FROM in_window
SELECT COUNT(*) FROM in_window
INSERT INTO msg_queue (uuid, tstamp) VALUES (?, ?)
SELECT uuid FROM msg_queue ORDER BY pk ASC LIMIT 1
DELETE FROM msg_queue WHERE pk=(SELECT min(pk) FROM msg_queue)
SELECT COUNT(*) FROM msg_queue
B16@?0^{sqlite3=}8
DELETE FROM in_window
DELETE FROM msg_queue
', '
SELECT SUM(num_bytes) FROM in_window WHERE msg_id IN ('%@')
DELETE FROM in_window WHERE msg_id IN ('%@')
execute() Error: %s 
<filler>
Sync message %@; complete
Sync message %@; device ACK: %d, app ACK: %d, responded: %d
didRollback
-[SYEndSyncSessionResponse writeTo:]
SYEndSyncSessionResponse.m
cancelSessionID
-[SYResetRequest writeTo:]
SYResetRequest.m
timestamp
sender
state
version
sequenceNumber
timeout
-[SYMessageHeader writeTo:]
SYMessageHeader.m
self->_sender != nil
self->_state != nil
SYPersistentStoreErrorDomain
SYPersistentStore.SynqQ
SELECT COUNT(*) FROM %@
syncstate
INSERT INTO syncstate (remoteversion, tstamp, peer_id) VALUES (0, datetime('now'), '%s')
SELECT peer_id FROM syncstate LIMIT 1
UPDATE syncstate SET peer_id='%s'
CREATE TABLE IF NOT EXISTS meta (version INTEGER PRIMARY KEY AUTOINCREMENT, tstamp REAL)
CREATE TABLE IF NOT EXISTS syncstate (remoteversion INTEGER, tstamp INTEGER, fullsync_sent INTEGER DEFAULT 0, in_full_sync INTEGER DEFAULT 0, ttl INTEGER DEFAULT 1209600)
CREATE TABLE IF NOT EXISTS changes (version INTEGER PRIMARY KEY AUTOINCREMENT, tstamp INTEGER, type INTEGER, syncid TEXT, object BLOB)
ALTER TABLE syncstate ADD COLUMN vector_clock TEXT DEFAULT ''
ALTER TABLE syncstate ADD COLUMN peer_id TEXT DEFAULT ''
ALTER TABLE syncstate ADD COLUMN msg_seqno INTEGER DEFAULT 0
CREATE TABLE IF NOT EXISTS peer_info (peerID TEXT, last_seqno INTEGER, tstamp REAL)
CREATE TABLE IF NOT EXISTS full_sync_info (syncID TEXT, active INTEGER DEFAULT 1, time_started REAL, time_ended REAL, duration REAL)
ALTER TABLE syncstate ADD COLUMN waiting_for_sync_id TEXT
ALTER TABLE syncstate ADD COLUMN sync_user_info BLOB
ALTER TABLE syncstate ADD COLUMN sync_ids_options BLOB
CREATE INDEX sync_by_uuid ON full_sync_info (syncID ASC, active)
CREATE INDEX sync_by_start_time ON full_sync_info (time_started ASC, time_ended, syncID)
CREATE INDEX sync_by_duration ON full_sync_info (duration ASC, syncID, time_started, time_ended)
CREATE INDEX changes_by_time ON changes (tstamp ASC, version)
CREATE INDEX changes_by_syncid ON changes (syncid ASC, tstamp ASC, version)
CREATE TRIGGER remove_prior_changes BEFORE INSERT ON changes BEGIN DELETE FROM changes WHERE syncid = new.syncid; END
CREATE TRIGGER remove_old_syncs BEFORE INSERT ON full_sync_info BEGIN DELETE FROM full_sync_info WHERE syncID NOT IN (SELECT syncID FROM full_sync_info ORDER BY syncID DESC LIMIT 1) AND active=0; END
CREATE TRIGGER compute_duration AFTER UPDATE OF time_ended ON full_sync_info BEGIN UPDATE full_sync_info SET duration = new.time_ended - old.time_started WHERE syncID = old.syncID; END
ALTER TABLE full_sync_info ADD COLUMN send_complete INTEGER DEFAULT 0
ALTER TABLE full_sync_info ADD COLUMN failed INTEGER DEFAULT 0
ALTER TABLE full_sync_info ADD COLUMN error BLOB
ALTER TABLE peer_info ADD COLUMN seqno_set TEXT DEFAULT NIL
ALTER TABLE syncstate ADD COLUMN overflow_timeout REAL DEFAULT NIL
ALTER TABLE syncstate ADD COLUMN last_message_time REAL DEFAULT NIL
ALTER TABLE syncstate ADD COLUMN in_delta_sync INTEGER DEFAULT 0
CREATE TABLE IF NOT EXISTS syncstate (remoteversion INTEGER, tstamp INTEGER, fullsync_sent INTEGER DEFAULT 0, in_full_sync INTEGER DEFAULT 0, ttl INTEGER DEFAULT 86400, vector_clock TEXT DEFAULT '', peer_id TEXT DEFAULT '', msg_seqno INTEGER DEFAULT 0, waiting_for_sync_id TEXT, sync_user_info BLOB, sync_ids_options BLOB, overflow_timeout REAL DEFAULT NIL, last_message_time REAL DEFAULT NIL, in_delta_sync INTEGER DEFAULT 0)
CREATE TABLE IF NOT EXISTS peer_info (peerID TEXT, last_seqno INTEGER, tstamp REAL, seqno_set TEXT DEFAULT NIL)
CREATE TABLE IF NOT EXISTS full_sync_info (syncID TEXT, active INTEGER DEFAULT 1, time_started REAL, time_ended REAL, duration REAL, send_complete INTEGER DEFAULT 0, failed INTEGER DEFAULT 0, error BLOB)
ALTER TABLE syncstate ADD COLUMN ignored_message_id_set TEXT DEFAULT ''
UPDATE changes SET tstamp=strftime('%%s', tstamp)
DELETE FROM changes
SYPersistentStore.withDB(_:)
SYPersistentStore._inTransaction(exclusive:do:)
SELECT DISTINCT peerID FROM peer_info
DELETE FROM peer_info WHERE peerID=? AND last_seqno < (SELECT max(last_seqno) FROM peer_info WHERE peerID=?)
DELETE FROM peer_info
v32@?0{_NSRange=QQ}8^B24
SELECT seqno_set FROM peer_info WHERE peerID=?
UPDATE peer_info SET seqno_set=? WHERE peerID=?
SELECT MAX(ttl) FROM syncstate
UPDATE syncstate SET msg_seqno=%llu
UPDATE syncstate SET msg_seqno=(msg_seqno+1)
SELECT msg_seqno FROM syncstate LIMIT 1
Cannot store sequence number == 0; that value is invalid
UPDATE peer_info SET last_seqno=?, tstamp=? WHERE peerID=?
INSERT INTO peer_info (peerID, last_seqno, tstamp) VALUES (?, ?, ?)
SELECT last_seqno FROM peer_info WHERE peerID=?
DELETE FROM peer_info WHERE peerID='%s'
SELECT in_delta_sync FROM syncstate LIMIT 1
UPDATE syncstate SET in_delta_sync=%d
SELECT ignored_message_id_set FROM syncstate LIMIT 1
UPDATE syncstate SET ignored_message_id_set=%s
UPDATE syncstate SET ttl=%d
SELECT COUNT(*) FROM changes
SELECT vector_clock FROM syncstate LIMIT 1
UPDATE syncstate SET vector_clock=?
SELECT overflow_timeout FROM syncstate LIMIT 1
UPDATE syncstate SET overflow_timeout=?
SELECT last_message_time FROM syncstate LIMIT 1
UPDATE syncstate SET last_message_time=?
SELECT time_started FROM full_sync_info WHERE time_ended IS NULL ORDER BY time_started DESC LIMIT 1
com.apple.CompanionSync.full-sync
INSERT INTO full_sync_info (syncID, active, time_started) VALUES (?, ?, (julianday('now') - 2440587.5)*86400.0)
UPDATE full_sync_info SET active=0, failed=?, error=?, time_ended=(julianday('now')-2440587.5)*86400.0 WHERE syncID=?
UPDATE full_sync_info SET syncID=? WHERE active=1
SELECT COUNT(*) FROM full_sync_info WHERE active=0 AND time_ended IS NULL AND syncID=?
UPDATE full_sync_info SET send_complete=1 WHERE syncID=?
SELECT COUNT(*) FROM full_sync_info WHERE time_ended IS NULL AND send_complete=1 LIMIT 1
SELECT error FROM full_sync_info WHERE time_ended IS NOT NULL ORDER BY time_started DESC LIMIT 1
SELECT syncID FROM full_sync_info WHERE time_ended IS NULL ORDER BY time_started DESC LIMIT 1
SELECT COUNT(*) FROM full_sync_info WHERE time_ended IS NULL
SELECT syncID FROM full_sync_info WHERE time_ended IS NOT NULL ORDER BY time_ended DESC LIMIT 1
SELECT waiting_for_sync_id FROM syncstate LIMIT 1
UPDATE syncstate SET waiting_for_sync_id=?
SELECT sync_user_info FROM syncstate LIMIT 1
UPDATE syncstate SET sync_user_info=?
SELECT sync_ids_options FROM syncstate LIMIT 1
UPDATE syncstate SET sync_ids_options=?
SELECT MAX(fullsync_sent) FROM syncstate
UPDATE syncstate SET fullsync_sent=?
SELECT duration FROM full_sync_info ORDER BY time_ended DESC LIMIT 1
SELECT seq FROM sqlite_sequence WHERE name='changes'
SELECT MAX(remoteversion) FROM syncstate
INSERT INTO changes (tstamp, type, syncid) VALUES (?, ?, ?)
UPDATE syncstate SET tstamp=(julianday('now')-2440587.5)*86400.0, remoteversion=?
SELECT MIN(version) FROM changes
SELECT DISTINCT syncid FROM changes WHERE version > ?
message
SELECT COUNT(*) FROM peer_info WHERE last_seqno IS NOT NULL AND last_seqno > 0
UPDATE syncstate SET fullsync_sent=1
identifier
isSending
isReset
perMessageTimeout
fullSessionTimeout
maxConcurrentMessages
canRestart
canRollback
canceled
peer
reason
-[SYLogSessionState writeTo:]
SYLogSessionState.m
nil != self->_identifier
NotStarted
Continue
SendComplete
Cancel
Restart
Error
WaitingForStartConfirmation
WaitingForCompletionConfirmation
WaitingForBatchEnqueue
SyncComplete
StartRequest
EndRequest
Batches
SYSessionMessageStatus
Start session message enqueued, but session is in unexpected state %d
xctest
-[SYBatchSyncEnd writeTo:]
SYBatchSyncEnd.m
clocks
v32@?0@"NSString"8@"NSNumber"16^B24
Nil peer
Nil peer ID
v32@?0@"SYClock"8Q16^B24
SYTransaction
SYDeviceStateChangedNotification
SYDevicePairingIDChangedNotification
SYDeviceOSInfoChangedNotification
SYDeviceTargetabilityChangedNotification
SYDeviceRemovedNotification
SYDeviceTargetedNewDeviceNotification
_SYDeviceMonitor RWLock
B24@?0@"SYDevice"8^B16
device:
14S190
14A194
%@: %@
%@: %@ (%@). Paired=%s, Active=%s. Class='%@', Version='%@', Build='%@'.
(nil)
-[SYSyncSessionRestartResponse writeTo:]
SYSyncSessionRestartResponse.m
-[SYSyncBatchResponse writeTo:]
SYSyncBatchResponse.m
v32@?0@8@16^B24
XXXXXXXX
supportsRollback
supportsRestart
metadata
-[SYStartSyncSessionResponse writeTo:]
SYStartSyncSessionResponse.m
chunkIndex
-[SYBatchChunkAck writeTo:]
SYBatchChunkAck.m
You must use the -initWithPath:objectClass: initializer for NMSPersistentDictionary
Could not open DB
CREATE TABLE IF NOT EXISTS meta (v INTEGER PRIMARY KEY AUTOINCREMENT, t TEXT)
CREATE TABLE kvs (k0 TEXT, d0 REAL, v0 BLOB)
CREATE UNIQUE INDEX k0 ON kvs (k0)
CREATE INDEX d0 ON kvs (d0)
INSERT INTO meta (t) VALUES (datetime('now'))
ALTER TABLE kvs ADD COLUMN d1 REAL DEFAULT 0
CREATE INDEX d1 ON kvs (d1)
INSERT OR REPLACE INTO kvs (k0, d0, v0, d1) VALUES (?, ?, ?, ?)
UPDATE kvs SET v0 = ? WHERE k0 = ?
SELECT v0 FROM kvs WHERE k0 = ?
DELETE FROM kvs WHERE k0 = ?
DELETE FROM kvs
SELECT k0, d0, v0 FROM kvs ORDER BY d0 ASC
SELECT k0, d0, v0, d1 FROM kvs ORDER BY d1 ASC
%@: %@::%qu
SYServiceOption
SYEngine
%@ SYMessengerSyncEngine IDS Queue
not 
v16@?0@"NSStream"8
v24@?0@"PBCodable"8@"NSDictionary"16
v24@?0Q8^B16
entered
left
requestSyncID
inProgressSyncID
-[SYFullSyncRequestAck writeTo:]
SYFullSyncRequestAck.m
nil != self->_requestSyncID
_SYWaitingForStream
AssociatedSessionIdentifier
_SYOutputStreamer: %@
v24@?0@"NSStream"8Q16
idx (%tu) is out of range (%tu)
inReplyTo
supportedVersions
-[SYRejectedVersion writeTo:]
SYRejectedVersion.m
nil != self->_inReplyTo
UserMetadata
HeaderData
NMSErrorDomain
NMSInvalidStateException
NMSContext
_NMSDispatchQueue
<%@:%p identifier:%@>
Cannot use %@ after using -resume
com.apple.companionsync.nano-messaging-center.default-delegate-queue
v48@?0@"NSString"8@16@"NSDate"24@"NSDate"32^B40
v40@?0@"NSString"8@16@"NSDate"24^B32
com.apple.notifyd.matching
v16@?0@"NSObject<OS_xpc_object>"8
-[NMSMessageCenter _decodeIncomingRequestData:context:]
NanoMessagingService.m
!idsContext.expectsPeerResponse || idsContext.outgoingResponseIdentifier
Cannot use %@ until after -resume is sent
IncomingData
-[NMSMessageCenter service:account:incomingData:fromID:context:]
context.messageID == header.messageID
context.fromRequest == YES
IncomingFileTransfer
%@ {%@ priority, messageID=%hu, idsID=%@, data=%lu bytes}
  Priority: %@
  MessageID: %@
  Protobuf class: %@
none
  IDS ID: %@
  Send timeout: %@
  Response timeout: %@
  Should encrypt: %@
  Data: %@
  User info: %@
%@ {%@ priority, idsID=%@, URL=%@, metadata=%@
  URL: %@
  Metadata: %@
  User Info: %@
NMSIncomingRequest
  Expects response: %@
  Response message: %@
%@ {messageID=%hu, protobuf class=%@, idsID=%@, data=%lu bytes}
  Request IDS ID: %@
  Request sent: %@
  Request user info: %@
NMSOutgoingResponse
%@ {%@ priority, messageID=%hu, idsID=%@, requestID=%@, data=%lu bytes}
  Request messageID: %@
%@: {Request=%@, Response=%@}
(Nil)
-[NMSMessagePersistentContext encodeWithCoder:]
_userInfo == nil || [_userInfo isKindOfClass:[NSDictionary class]]
_idsOptions == nil || [_idsOptions isKindOfClass:[NSDictionary class]]
<%@:%p id:%hu ids:%@ date:%@ fromRequest:%d sendAcked:%d processAcked:%d idsOptions:%@ userInfo:%@>
NMSQ.%@
NMSQ.%@.Incoming
nms.%@.db
%@-window
com.apple.private.NanoMessagingService.WindowQueue
NMSLogTraffic
High
Urgent
<unknown priority: %lu>
-[SYClock writeTo:]
SYClock.m
self->_peer != nil
yyyy-MM-dd'T'HH:mm:ss.SSS
payload
-[SYOutOfBandData writeTo:]
SYOutOfBandData.m
nil != self->_payload
-[SYSyncSessionRestartRequest writeTo:]
SYSyncSessionRestartRequest.m
objectId
changeData
sequencer
-[SYChange writeTo:]
SYChange.m
nil != self->_objectId
ObjectAdded
ObjectUpdated
ObjectDeleted
%s.%p
SYLogMultiSuspendableQueueState
Multi-Suspendable Queue State
isResetSync
expectsRollbackSupport
expectsRestartSupport
sessionTimeout
-[SYStartSyncSession writeTo:]
SYStartSyncSession.m
objects
-[SYBatchSyncChunk writeTo:]
SYBatchSyncChunk.m
ContainsSession
PeerID
EnqueuedAt
SessionID
FileHeader
%@ SYFileTransferSyncEngine IDS Queue
SYFileTransferEngine Response Session
File-transfer closure
14S184
14A187
00000000-0000-0000-0000-000000000000
FileTransferOverrideTimeout
v24@?0@"NSData"8@"NSError"16
v32@?0@"PBCodable"8S16B20@"NSError"24
v12@?0B8
transport-errors
resumeCount
label
target
Do not call -[%@ %@]
_SYTimerMessageTable
v32@?0@"NSNumber"8@"NSObject<OS_dispatch_source>"16^B24
generationID
-[SYLogPeerIDPair writeTo:]
SYLogPeerIDPair.m
nil != self->_peerID
SYEngineUseMessaging
Sync Engine
ARGH, break here plz
B24@?0@"_SYQuiescenceAllocation"8^B16
Duration
Service
Type
Identifier
ChangeCount
VectorClock
IsRequest
RequestIdentifier
ChunkIndex
WantsResponse
GotResponse
WantsDeliveryAck
ProtocolVersion
MessageSequenceNumber
IsResetSyncSession
SessionMetadata
WantsRollback
RequestAccepted
statistics.db
CSStatisticsQueueCore
CSStatisticsQueue
SYUnitTestTearDown
-shm
-wal
SYStatisticStore Async Operation
SYStatisticStore Sync Operation
CREATE TABLE IF NOT EXISTS meta (version INTEGER PRIMARY KEY AUTOINCREMENT, timestamp REAL)
CREATE TABLE IF NOT EXISTS message_log (pk INTEGER PRIMARY KEY AUTOINCREMENT, service TEXT, incoming INTEGER, timestamp REAL, delivery_time REAL, type TEXT, identifier TEXT, change_count INTEGER DEFAULT 0, msg_version INTEGER, change_version INTEGER, error TEXT, complete INTEGER DEFAULT 0)
CREATE INDEX IF NOT EXISTS msg_by_id ON message_log (identifier ASC, timestamp DESC)
INSERT INTO meta (timestamp) VALUES (datetime('now'))
ALTER TABLE message_log ADD COLUMN is_request INTEGER DEFAULT 1
ALTER TABLE message_log ADD COLUMN sync_id TEXT DEFAULT ''
ALTER TABLE message_log ADD COLUMN request_id TEXT DEFAULT ''
ALTER TABLE message_log ADD COLUMN vector_clock TEXT DEFAULT ''
ALTER TABLE message_log ADD COLUMN wants_response INTEGER DEFAULT 0
ALTER TABLE message_log ADD COLUMN got_response INTEGER DEFAULT 0
CREATE INDEX msg_by_type ON message_log (type ASC, timestamp ASC)
CREATE INDEX response_by_request ON message_log (request_id ASC, timestamp DESC, identifier ASC, type ASC)
ALTER TABLE message_log ADD COLUMN wants_delivery_ack INTEGER DEFAULT 0
ALTER TABLE message_log ADD COLUMN delivery_acked INTEGER DEFAULT 0
ALTER TABLE message_log ADD COLUMN proto_version INTEGER DEFAULT 0
ALTER TABLE message_log ADD COLUMN msg_seqno INTEGER DEFAULT 0
ALTER TABLE message_log ADD COLUMN mach_time REAL DEFAULT 0
DROP INDEX msg_by_id
CREATE INDEX msg_by_id ON message_log (identifier ASC, timestamp ASC)
ALTER TABLE message_log ADD COLUMN chunk_index INTEGER
CREATE INDEX msg_by_service ON message_log (service, timestamp ASC)
CREATE VIEW receipt_sequence_info AS SELECT msg_seqno, datetime(timestamp, 'localtime'), mach_time, type, identifier, service FROM message_log WHERE incoming=1 ORDER BY service, timestamp ASC
CREATE VIEW sent_sequence_info AS SELECT msg_seqno, datetime(timestamp, 'localtime'), mach_time, type, identifier, service FROM message_log WHERE incoming=0 ORDER BY service, timestamp ASC
ALTER TABLE message_log ADD COLUMN processing_time_ms INTEGER
CREATE TABLE IF NOT EXISTS file_transfer_log (pk INTEGER PRIMARY KEY AUTOINCREMENT, file_url TEXT, service TEXT, incoming INTEGER, timestamp REAL, delivery_time REAL, identifier TEXT, error TEXT, complete INTEGER DEFAULT 0, delivery_acked INTEGER DEFAULT 0, peer_id TEXT, mach_time REAL DEFAULT 0)
CREATE INDEX file_transfer_by_service ON file_transfer_log (service, identifier, timestamp ASC)
ALTER TABLE message_log ADD COLUMN file_transfer_id TEXT DEFAULT NIL
CREATE INDEX file_transfer_messages ON message_log (service, file_transfer_id, timestamp ASC)
ALTER TABLE message_log ADD COLUMN is_reset_session INTEGER
ALTER TABLE message_log ADD COLUMN metadata TEXT
ALTER TABLE message_log ADD COLUMN rollback INTEGER
ALTER TABLE message_log ADD COLUMN accepted INTEGER
CREATE INDEX msg_by_id ON message_log (identifier ASC, timestamp DESC)
DROP INDEX response_by_request
file_transfer_log
mach_time
ALTER TABLE file_transfer_log ADD COLUMN mach_time REAL DEFAULT 0
INSERT INTO message_log (incoming, timestamp, delivery_time, service, type, identifier, change_count, vector_clock, is_request, sync_id, request_id, error, wants_response, proto_version, msg_seqno, mach_time, chunk_index, is_reset_session, metadata, rollback, accepted) VALUES (1, datetime('now'), ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
_insertIncoming
UPDATE message_log SET processing_time_ms=? WHERE pk=?
_addProcessingTimeIncoming
UPDATE message_log SET error=? WHERE pk=?
_addErrorIncoming
UPDATE message_log SET complete=1 WHERE pk=?
_markCompleteIncoming
INSERT INTO message_log (service, mach_time) VALUES ('reserving row id', ?)
_reserveRowID
UPDATE message_log SET incoming=0, timestamp=datetime('now'), service=?, type=?, change_count=?, vector_clock=?, is_request=?, sync_id=?, request_id=?, wants_response=?, wants_delivery_ack=?, proto_version=?, msg_seqno=?, chunk_index=?, is_reset_session=?, metadata=?, rollback=?, accepted=? WHERE pk=?
_insertOutgoing
UPDATE message_log SET identifier=?, mach_time=? WHERE pk=?
_updateOutgoingIdentifier
UPDATE message_log SET delivery_time=?, complete=?, got_response=?, error=? WHERE identifier=?
_updateOutgoing
SELECT timestamp FROM message_log WHERE identifier=? ORDER BY timestamp DESC LIMIT 1
_timestampForID
UPDATE message_log SET got_response=? WHERE identifier=?
_responseReceived
UPDATE message_log SET delivery_acked=1 WHERE identifier=?
_requestAcked
INSERT INTO file_transfer_log (incoming, timestamp, file_url, service, identifier, peer_id, mach_time, delivery_time) VALUES (?, datetime('now'), ?, ?, ?, ?, ?, ?)
_logFileActivity
UPDATE file_transfer_log SET delivery_time=?, complete=?, error=? WHERE identifier=?
_updateFileOutgoing
 InProgressSyncID=%@
CompanionSync.StatisticStore.ReservedRowID
<unknown>
SELECT timestamp FROM file_transfer_log WHERE identifier=? ORDER BY timestamp DESC LIMIT 1
UPDATE message_log SET identifier='FileTransfer:%@', file_transfer_id='%@', mach_time='%f' WHERE pk IN (
'%lu'
SELECT DISTINCT service FROM message_log
DELETE FROM message_log WHERE service=? ORDER BY pk DESC LIMIT -1 OFFSET 250
ROLLBACK
DELETE FROM file_transfer_log WHERE service=? ORDER BY pk DESC LIMIT -1 OFFSET 250
COMMIT
message-statistics
%@: domain=%@, code=%ld, userInfo=%@
Initial Sync
Reunion Sync
Class %@ does not implement message %@. You are using the wrong kind of session.
SYSession is an abstract class. Please instantiate the correct subclass for your use case.
%s Session Queue
SYSession
SYSession cannot encode change objects of type '%@'
SYSession does not have a serializer. You must set a serializer before starting a session.
SYSession cannot encode change objects of type '%@' for protocol version %ld
-[SYSession _onSessionStateChangedTo:do:]
<%@> %@
v32@?0@"NSString"8@"NSString"16^B24
%s Session Default Delegate Queue
SYObject %@ does not provide the required syncId!
SYChange object %@ does not provide the required objectIdentifier!
SYChangeSerializer does not implement -encodeSYChangeForBackwardCompatibility:protocolVersion: or -dataWithSYObject:
errorResolution
-[SYSyncEndResponse writeTo:]
SYSyncEndResponse.m
Ignore
Retry
deviceClass
buildVersion
-[SYPeer writeTo:]
SYPeer.m
allObjects
-[SYSyncAllObjects writeTo:]
SYSyncAllObjects.m
QueueDumper
Tracked Queue State
Unable to create an _SYLazyChangeArray object for %{public}@
Delegate: -syncSession:applyChanges:completion:
Delegate callout complete: -syncSession:applyChanges:completion:, v1 allObjects, success = %s
Client failed to process incoming SyncAllObjects, returning error: %{public}@
Error occurred while waiting for SyncAllObjects ingestion, will set error state: %{public}@
Failed to set do-not-backup property on persistent data folder: %{public}@
Error checking inclusion of client %{public}@: %{companionsync:sqlite3err}d
Error fetching schema version for %{public}@: %{companionsync:sqlite3err}d
Error setting schema version for %{public}@: %{companionsync:sqlite3err}d
Failed to open SQLite DB: %{companionsync:sqlite3err}d
Failed to open shared DB for service %{public}@: %@
Failure to begin transaction: %{companionsync:sqlite3err}d (%{public}s)
Failed to commit %s transaction: %{companionsync:sqlite3err}d (%{public}s)
Failed to rollback %s transaction: %{companionsync:sqlite3err}d (%{public}s)
Unknown stream %{public}@ is sending me (%{public}@) delegate messages...
** COMPANIONSYNC CLIENT BUG ** Deserialization attempt gave us a nil
Error destroying Mach semaphore: %d (%{public}s)
Failed to create semaphore! %d (%{public}s)
Failed to wait on semaphore, but it didn't time out or abort: %d (%{public}s)
Error draining semaphore: %d (%{public}s)
CompanionSync AddObject
CompanionSync UpdateObject
CompanionSync DeleteObject
CompanionSync Transaction
SYStore skipping full sync, already in progress.
Failed to resume SYService after switching from device %{public}@ to %{public}@: %{public}@
Beginning SYStore delta sync
Ended SYStore delta sync
SYStore shim: forwarding %lu changes to SYStoreDelegate
Sync Batch Input
SYSession (v1 Outgoing Batched)
%{public}@: Setting state to %{companionsync:SYSessionState}d
%{public}@: Setting state (quietly) to %{companionsync:SYSessionState}d
Change Concurrency Wait
Delegate: -syncSession:enqueueChanges:error:
Sending end-session message
Attaching error to end-session: %@
Delegate: -syncSession:didEndWithError:
Send timed out for message with sequence number %llu, identifier %{public}@
%{public}@ entered error state. Error = %@
%{public}@ session timeout expired
Starting %{public}@ with identifier %{public}@
SYSession (Outgoing)
Received an error SYBatchChunkAck: %@
Received an error SYSyncEndResponse: %@
Some sync batches were not acked. We sent {0-%u}, acked %{public}@
SYSession (Outgoing v1 Delta)
SYSession entered error state. Error = %@
SYSession (v1 Delta Sync, Incoming)
Delegate callout complete: -syncSession:applyChanges:completion:, v1 transaction, success = %s
Client failed to process incoming SYChangeMessage, returning error: %{public}@
An error occurred while client was processing: %{public}@
Initializing new second-generation SYStore %p
No device available from NanoRegistry at present-- SYStore will be inoperative until pairing completes.
Failed to create simulator pairing store folder: %@
CompanionSync Unpairing
NR Device Unpaired
Ignoring newly-paired device '%@' when already paired with device '%@'. Please file an enhancement request against Pepper CompanionSync for multiple-paired-device support if you see this message.
CompanionSync Pairing
NR Device Paired
Got pairing store path: %{public}@
Possible duplicate message received with seqno %qu and ID %{public}@. Comparing timestamps.
This message timestamp = %.04g (%{public}@) vs. last message timestamp = %.04g (%{public}@)
Sequence numbers were reset; clearing our received seqno set.
Message repeated (bubble): seqno = %qu, messageID: %{public}@
Received seqno=%llu, last seen=%llu
Out of order delivery or dropped message detected on receipt of message with ID %{public}@. Message sequence number = %llu, last received sequence number = %llu
Received message from unknown protocol version '%u'
Failed to store latest incoming sequence number: %{public}@
No pairingID, cannot initialize message center instance.
Got nil cacheDirPath, cannot initialize message center
Creating NanoMessageCenter
Peer responded to message %{public}@ with a version rejection. Peer is using version %u, and supports versions %{public}@
SyncRequest response: accepted=%s, inProgressSyncID=%{public}@, error=%@
In-progress sync has finished, now requesting another.
Waiting for in-progress sync %{public}@ to end before re-sending sync request.
Wait for in-progress sync %{public}@ timed out, re-sending sync request now.
Dropped messages detected upon receipt of message with ID %{public}@: missing %u ACKs of full-sync batches, specifically: %{public}@
dataIdentifier: %{public}@ didSendWithSuccess: NO error: %@
Failed to send full-sync initiation message; dropping it on the floor and leaving sync mode. Next change will trigger a full sync. Error = %{public}@
No paired device ID, cannot initialize our database.
No pairing store path for device ID %{public}@
Using device cache directory: %{public}@
CompanionSync DB Setup
SYStore has a NIL PERSISTENT STORE !!
Setting up change-list database
My vector clock is: %{public}@, my PeerID is %{public}@.
Incoming vector clock: %{public}@
My vector clock: %{public}@
Peer has a future version of my data ?? It has: %llu, I have: %llu
Accepting change list from peer that has not received my latest updates: %llu vs. %llu
Peer state doesn't match my expectation-- likely a message is missing. I have %llu, they sent %llu, there are %u changes incoming
Skipping one sync message (syncID %{public}@) while waiting for another (syncID %{public}@)
Skipping while waiting for sync; fullSyncIdentifier == '%{public}@'
Sync %{public}@ has finished, and I'm waiting for sync %{public}@ to finish, and they match. Triggering full-sync now.
Decoded nil object from change data for service %{public}@., Enable debug logging (on debug builds only) to see full info.
Failed to decode data object at index %u of message: %{public}@
Copied peer clock into our vector. Value is now: %{public}@ (my PeerID is %{public}@)
CompanionSync Change Application
Applying %d incoming changes
New message seqno: %qu, last message seqno: %qu
-handleChangeMessage:<%zu objects> -- changes are not consecutive, triggering full sync
handleChangeMessage - done, change-list bubble detected
No delegate for -handleChangeMessage:, so I have to ignore the change!! This will likely cause problems...
No object decoded from payload for change '%{public}@'
remoteStoreDidChange, objectAdded
remoteStoreDidChange, objectUpdated
remoteStoreDidChange, objectDeleted
handleChangeMessage - done
Received an unknown message: %{public}@
Ending XPC transaction around (asynchronous) message send (%s)
dataIdentifier: %{public}@ didSendWithSuccess: YES error: nil
Remote delivery confirmation for %{public}@
Failed to wrap message: %{public}@
Entering XPC transaction around (asynchronous) message-send
addObject
updateObject
deleteObject
No persistent store or message center set up yet; probably we're not paired. Therefore: I'm dumping this change on the ground.
CompanionSync HandleChangeList
CompanionSync SendChanges
CompanionSync LogChanges
Failed to log %zu changes: %@
-setNeedsFullSync called by client - SYStore %p, alwaysWins %s
Skipping full sync, already in progress
CompanionSync remoteStoreAllObjects
remoteStoreAllObjects from %{public}@, %lu objects, version %qu
Full sync sent to the master device!
No delegate set, so changes will be ignored.
Full sync requested from a slave device
Full Sync requested by Gizmo
Already in full-sync, send was complete, ignoring this request
Already in full-sync, ignoring this request
delegate shouldPerformInitialFullSync returned %s
No full-sync sent, so triggering full sync now
performFullSync
performFullSync - this is companion, let's do this
performFullSync - %lu objects, %lu finalVersion
performFullSync - remoteStoreRequestFullSync
performFullSync - done
Full-sync failed, maximum retry attempts reached.
Ending batched sync due to error, but we're unable to send a sync message due to a bad state
Sending batch chunk (%zu objects), ID %{public}@
performBatchedSync: assigned UUID %{public}@
CompanionSync BatchedFullSync
Client rejected batch attempt
Entering batch sync loop for UUID %{public}@
Error detected during batched full-sync: scheduling retry
I'm doing a batched sync, but I have no current sync ID?
Error during batched sync: %{public}@
Fetching sync batch
Batch sync client reported error: %{public}@
CompanionSync: batched full-sync restart requested
CompanionSync: full batched sync sent to master device
CompanionSync ProcessBatchSyncStart
Starting batched full-sync
CompanionSync ProcessBatchSyncEnd
Ending batched full-sync
Batch Sync: adding %zu objects for chunk %zu
CompanionSync Delivering Batch Chunk
Received batch chunk ACK: %u
Received unexpected batch sync chunk ACK: %u
Beginning SYLegacyStore delta sync
Ended SYLegacyStore delta sync
SYSession (v1 Outgoing AllObjects)
CompanionSync initializing new SYService %{public}@ %s, %{public}@ priority, generation %{public}@
Queue state assumption failed: _sessionQueue.suspended
Remote device is an 
WATCH running OS %{public}@ (%{public}@). Will use protocol v1 when communicating with this device.
Remote device is an iDevice running OS %{public}@ (%{public}@). Will use protocol v1 when communicating with this device.
Updating protocol version for device OSInfo change: will use protocol v%d
For some reason I have a pairing store path but no SYDevice??
Remote device is a %{public}@ with system version %{public}@, build %{public}@
Calling delegate willSwitchFromPairingID:%{public}@ toPairingID:%{public}@
Failed to resume store after switching devices!
SYService %p has new generation %{public}@
_deviceTargetabilityChanged:
Newly-targetable device is our existing targeted device. No switch actually occurring.
Device info: %{public}@
Targeted device became untargetable. We should get a new targetable-device notification soon.
Current device info: %{public}@
Current targeted device (%@) was removed from known devices list.
Last known paired device has unpaired. SYService can no longer function.
Delegate: -serviceDidPairDevice
Delegate: -serviceDidUnpairDevice
Canceling current sending session %{public}@ due to QWS
Sending session (%{public}@}) still active at time of QWS. State is %{companionsync:SYSessionState}ld, so I'm letting it continue so that IDS can give it a not-the-active-device error next time it sends
Canceling current receiving session %{public}@ due to QWS
Receiving session (%{public}@}) still active at time of QWS. State is %{companionsync:SYSessionState}ld, so I'm letting it continue so that IDS can give it a not-the-active-device error next time it sends
SYService resumed while already running
SYService resumed with no delegate
SYService resumed with no pairing store
Error initializing SYService DB: %{public}@
Error initializing SYService messaging: %{public}@
Queue state assumption failed: _sessionQueue.suspended == NO
LYING about peerID, because it's nil!
About to build a new session, but there's already one running! Currently-running session is %{public}@
Queue state assumption failed: _sessionQueue.suspended == YES
Delegate: -service:startSession:error:
Delegate rejected new %{public}@ with error %@
Informing sync engine of new outgoing session.
%{public}@ failed to start: %@
Start signpost %llu: Started outgoing %{public}s %{public}@ with identifier %{public}@ for service %{public}@. Reason = '%{public}@'
Failed to enqueue full-sync request: %@
Enqueued full-sync request with ID %{public}@
Failed to enqueue reset request: %@
Enqueued reset request with ID %{public}@
Delta requested
Reset requested
SYService DB Setup
Nil data store path for SYService %p
SYService has a nil persistent store!
SYService persistent store initialized. PeerID = %{public}@, vector clock = %{public}@.
SYService Sync Engine Setup
SYService Sync Engine Swap
Returning to original engine after swap error
Failed to swap to engine type %{companionsync:SYServiceEngineType}d: %{public}@
Failed to restore original engine! I can only suspend the entire service now... %{public}@
Suspending service %{public}@
The ended session (%{public}@) is not the current session. Why is that?
The current session is nil, so I'll inform the delegate anyway
Delegate: -service:sessionEnded:error:
Wrapping up %s session for service %{public}@
Wrapping up session %{public}@ is not the current session (%{public}@)
Concluding session has birthDate in the future! birthDate = %{public}@, now = %{public}@
End signpost %llu: %s session with identifier %{public}@ for service %{public}@ (reason '%{public}@') completed in %.04f seconds.
Queue state assumption failed: service->_sessionQueue.isSuspended == YES
Asking delegate about session collision preference. We have chosen %{public}@ as the winner
Delegate: -service:willPreferSession:overSession:
Delegate vetoed our decision. Session %{public}@ is now the winner
Failed to enqueue version rejection message: %{public}@
Enqueued version rejection message with ID %{public}@
Ignoring message ID %{public}@, it's in the 'cancellation failed' list
Possible duplicate message %{public}@ received with seqno %llu. Comparing timestamps.
This message timestamp = %{public}@ vs. last message timestamp = %{public}@
Message repeated (bubble): seqno = %llu, GUID = %{public}@
Unknown message arrived with SYMessageID %d (PB class '%{public}@')
Enqueueing end-session message to cancel an orphaned receiving session on peer.
Enqueued end-session message to orphaned session on peer.
SYService received OOB data, but delegate doesn't support it
Delegate: -service:incomingData:completion:
SYService received OOB file transfer, but delegate doesn't support it
Delegate: -service:incomingStream:metadata:completion:
Failed to remove file used by file-transfer after read completion: %{public}@
Received expected error for message ID %{public}@, will ignore it. Error is %{public}@
Sync error occurred: %@
Queue state assumption failed: _queuedStartSession == nil
Deferring incoming start-session (%{public}@) to allow current session (%{public}@) to finish closing.
Received %{public}@ message for another session ID
Deferring incoming session requst for a short while
A new StartSyncSession (%{public}@) arrived, but there is a current session (%{public}@) with an age of %.02f, so we are rejecting the new session.
Terrifying deferred session rejection path (enqueue).
Terrifying deferred session rejection path (dequeue).
Issuing immediate rejection of incoming session request
Cancelling current session (%{public}@) to make way for a new one (%{public}@).
Reset sync session sent to master peer
Delegate: -service:startSession:error: (receiving)
Delegate rejected incoming sync session (%{public}@) with error %{public}@
Notifying engine of incoming session
Critical failure. Session start callback gave us a nil self.
Start signpost %llu: Started incoming %{public}s %{public}@ with identifier %{public}@. Reason = '%{public}@'
%{public}@ decided not to come out and play.
A SYResetRequest was received by a slave peer, which is invalid.
Canceling current session-- cancelation was explicitly requested by a reset request.
Accepting reset request: %{public}@ sync in progress, which will be canceled to make way for the requested reset.
Rejecting sync batch: no session in progress
Rejecting sync restart: no session in progress
Rejecting sync end: no session in progress
Reset Sync request was denied: %@
No session in progress for incoming response
Delegate: -service:encounteredError:context:
Unable to switch protocols -- peer doesn't support anything I know!
Swapped-out session (version rejection) failed to start: %@
Send OOB Data
OOB Data Stream
Rejecting full-sync request: session (%{public}@) in progress
Rejecting sync-all-objects: session (%{public}@) in progress
Incoming v1 SyncAllObjects session failed to start: %{public}@. Error response message will be delivered by the session when it's completed.
Rejecting full-sync start: session (%{public}@) in progress
Delegate: -service:startSession:error
Delegate rejected incoming sync session (%{public}@) with error %@
Rejecting full-sync batch: session (%{public}@) in progress
Rejecting full-sync end: session (%{public}@) in progress
Rejecting delta change: session (%{public}@) in progress
Delegate rejected incoming v1 transaction (%{public}@) with error %@
Protocol v1 full-sync-request was DENIED with error %{public}@
Response received for rejected v1 session
addressbooksync
appregistrysync
eventkitsync
location.auth
location.wifitilesync
maps.sync
tccd.sync
voicemailsync
SYService
NMSWindowData: unable to create db file via path '%@', returning nil from -init, message windowing will FAIL.
NMSWindowData: unable to connect to shared DB for service %{public}@
SQL Error: %{companionsync:sqlite3err}d
Unable to remove obstructing file at path '%@'. Error = %{public}@
Failed to create parent folder for messaging transmission window data at '%@'. Error = %{public}@
NMSWindowData: Failed to remove un-openable DB file at '%@': %{public}@
Could not open database: (%@): %{companionsync:sqlite3err}d
Database '%@' failed to open after second try.
Path is nil!
Failed to get attrs of path '%@', will print attrs of closest non-failing parent. Error = %{public}@
Unable to get any attributes for any parent. Error = %@
Attributes for '%@': %@
Error checking for empty table %{public}@: %{companionsync:sqlite3err}d
Error fetching schema version: %{companionsync:sqlite3err}d
Error opening SQLite3 DB at (%@): %{companionsync:sqlite3err}d
Failed to update timestamp format: %{companionsync:sqlite3err}d
Clearing out change list to avoid problems later.
Failed to begin %s transaction: %{companionsync:sqlite3err}d
Failed to commit %s transaction: %{companionsync:sqlite3err}d
Failed to rollback %s transaction: %{companionsync:sqlite3err}d
SQLite error fetching incremented sequence number: %{companionsync:sqlite3err}d
Returning next sequence number: %llu
SYPersistentStore asked to store a seqno == 0, which is INVALID.
SQLite error creating peer_info insert statement: %{companionsync:sqlite3err}d
SQLite error inserting new Peer Sequence Number: %{companionsync:sqlite3err}d
SQLite error updating peer message sequence number: %{companionsync:sqlite3err}d
No peer seqno recorded, returning special value zero
SQLite error fetching peer message sequence number: %{companionsync:sqlite3err}d
SQLite error while storing new TTL value %f: %{companionsync:sqlite3err}d
Beginning XPC transaction for full-sync, to stop us being Jetsammed until it's done.
Ending XPC transaction for full-sync
Did not end full-sync xpc transaction as it was never opened.
Reassigning sync id, starting XPC transaction to stop us being Jetsammed until it's done.
Current sync ID is non-nil but we're not in a transaction. Must be left-over from a dead process? Either way, I'm entering a new transaction now. Yes, it's hacky. Hackiness is inversely proportional to the amount of coffee ingested.
SQLite error: %{companionsync:sqlite3err}d
sqlite3_exec(%s) Error: %{companionsync:sqlite3err}d %{public}s
%{public}@: Setting state from %{companionsync:SYSessionState}d to %{companionsync:SYSessionState}d
State change notification source is nil!
%{public}@: Setting state (quietly) from %{companionsync:SYSessionState}d to %{companionsync:SYSessionState}d
About to wait for change slot
Wait for change slot ended, slot is available
Wait for change slot ended, semaphore cancelled or wait timed out
Delegate callout complete after %.02f seconds: -syncSession:enqueueChanges:error:, state = %{companionsync:SYSessionState}d, %lu changes
No changes to send, setting next state %{companionsync:SYSessionState}d
Filling in the batch message IDs array for some reason...
Cancelling session timer for %{public}@
Session timeout timer fired. Session ID is %{public}@, weak session reference is %p
Session timeout timer fired. Expected to fire at %{public}@, delta is %.02f
Session timeout is %.02f seconds. Timer will fire at %{public}@
Message timeout is set to %.02f
Sending session entered error state during initialization.
Sending session canceled during initialization
Unexpected state during initialization: %{companionsync:SYSessionState}d
Start session message enqueued, but session has changed to state %{companionsync:SYSessionState}d
Received an error SYStartSyncSessionResponse: %@
We are not waiting for this start-session response (current state is %{companionsync:SYSessionState}d, so I'm not setting error state here.
Received an accepted start-session response while in unexpected state %{companionsync:SYSessionState}d
Batch %lu response doesn't have a corresponding entry in list of message IDs (which goes up to %lu)
Received an error SYSyncBatchResponse: %@
Received an error SYSyncSessionRestartResponse: %@
Restart was rejected by slave, cancelling session now.
Received an error SYEndSyncSessionResponse: %@
End session with rollback was rejected by slave: %@
%{public}s
Backtrace:
%{public}@
-[SYTransaction dealloc]: XPC transaction wasn't ended properly
SYTransaction: beginning XPC transaction, to stop us being Jetsammed until it's done.
SYTransaction: ending XPC transaction. We can now be jetsammed safely.
NRDevice property changed: %{public}@, %@ -> %@
Disregarding NR attempt to zap pairing ID
Posting SYDeviceOSInfoChangedNotification
Device %{public}@ state changed: %{companionsync:SYDeviceState}d
Device %{public}@ became %stargetable
SYSession (v1 Full Sync, Incoming)
Delegate: -syncSession:resetDataStoreWithError:
Delegate didn't reset its store: %@
SYSession (Incoming)
%{public}@: Set state from %{companionsync:SYSessionState}d to %{companionsync:SYSessionState}d
No dispatch source set up for state-change notifications!
%{public}@: _midStreamErrorHandled
%{public}@ entered error state. Error = %{public}@
Error occurred while waiting for async client operation to complete. Will send error as part of response to that operation. Error = %{public}@
Timeout while waiting for client to apply changes. Setting state to SYSessionStateErrorOccurredWhileWaitingForCompletion.
Delegate: -resetDataStoreForSyncSession:completion:
Async reset-data completion called after %.02f seconds with strongSelf = %{public}@, success = %s, error = %{public}@
Error reported from async reset-data in session %{public}@: %{public}@
Sent async reset-data message to delegate. Will continue = %s, error = %{public}@
Receiving session canceled during initialization
Receiving session entered error state during initialization
Pre-expired session arrived. Dropping.
Delegate callout complete after %.02f seconds: -syncSession:resetDataStoreWithError:
Delegate failed reset-store operation: %@
Received incoming batch %llu
Processing incoming batch %llu
Returning error state in response to a sync batch
Delegate callout complete after %.02f seconds: -syncSession:applyChanges:completion:, chunkIndex = %llu, success = %s
%{public}@: Building response for processed changes, chunkIndex = %llu, success = %s
Failed to process sync batch, returning error: %{public}@
Detected error that occurred while waiting, attaching to batch response. Error = %{public}@
Batch incoming, state == %{companionsync:SYSessionState}d
First batch arrived, we're still waiting on reset completion-- using dispatch_group_notify with block %@
Delegate: -syncSession:resetDataStoreWithError: (restart session)
Delegate callout complete after %.02f seconds: -syncSession:resetDataStoreWithError: (restart session)
Client rejected reset session restart: %@
Delegate: -syncSession:rollbackChangesWithError: (restart session)
Delegate callout complete after %.02f seconds: -syncSession:rollbackChangesWithError: (restart session)
Client rejected delta session rollback: %@
Rejecting restart request: %@
Delegate: -syncSession:rollbackChangesWithError: (session end)
Delegate callout complete after %.02f seconds: -syncSession:rollbackChangesWithError: (session end)
Error rolling back at end session: %@
Ending session with error from Master: %@
End session arrived and I have missing sync batches: %@
Failed to get shared DB for service %{public}@
Error creating parent directory: %{public}@
First open attempt failed, removing & recreating DB
Error removing existing DB: %{public}@
Could not open database (%@): %{companionsync:sqlite3err}d
Database %@ open has failed after second try.
Delegate callout complete: -syncSession:applyChanges:completion:, v1 chunkIndex = %u, success = %s
Building response for processed changes, chunkIndex = %u, success = %s
Client failed to process incoming BatchSyncChunk (%u), returning error: %{public}@
Error occurred while waiting for v1 Sync Batch ingestion, returning error: %{public}@
Failed to unarchive object. %{public}@
Target device is %snearby, caching value.
Target device is %sconnected, caching value.
Input request options: %@
Coalesced IDS options: %@
Error writing to URL for file transfer: %{public}@
Failed to delete unused file-transfer file: %{public}@
Failed to cancel outgoing message (%{public}@): %@
Error sending message with ID %{companionsync:SYMessageID}hu: %{public}@
Incoming request %{companionsync:SYMessageID}hu: %{public}@. Transit time = %.02f seconds
Incoming response to %{companionsync:SYMessageID}hu: %{public}@, responding to %{public}@. Transit time = %.02f seconds
Response handler failure reported: %@
Out of band message with nil payload found! Request data has size %lu. First 20 bytes = %{public}@
Failure dealing with OOB data: %@
Failed to store incoming sequence number: %{public}@
Incoming file: %{public}@
Failed to process incoming file transfer: %{public}@
Sent %{companionsync:SYMessageID}hu: %{public}@
Sent response to %{companionsync:SYMessageID}hu (%{public}@): %{public}@
Sent file: %{public}@
Device-level ACK for %{public}@
App-level ACK for %{public}@
Message send failure for %{public}@: %{public}@
Send failure: %{public}@, error=%{public}@
Active IDS device changed. Old = %@, new = %@
Target device %s proximity
Target device is connected
Target device is NOT connected
Output streamer %{public}@: Error from underlying stream: %{public}@
Streamer %{public}@ writing to a closed stream
Streamer %{public}@ writing to a stream in error state. Error = %{public}@
Scheduling completion block
Write to output stream failed, stream error=%{public}@.
Wrote %ld bytes to stream %{public}@
Input streamer %{public}@: Error from underlying stream: %{public}@
Reached end of input stream.
Stream is closed.
Stream is in error state: %{public}@
Stream hit EOF prior to read
Orphaned data-available event found a closed stream.
Orphaned data-available event found a stream error.
Stream in unexpected state: %{companionsync:NSStreamStatus,public}d
Stream hit EOF during read
Completing all stream read items with error '%{public}@'
Input stream encountered error: %{public}@
Input stream end encountered
Suspending %{public}s
Resuming %{public}s
Setting next expiry timer fire date to '%{public}@' (%.02f seconds from now)
Not enabling the transmission window, because we were unable to create the window metadata DB.
Opening window on message timeout: %lu bytes in flight, %lu max
Message dropped by QWS: %@
Expired message: %@
-[IDSService initWithService:%{public}@] returned nil!
IDS service is nil on entry to sendRequest. Dropping message: %{public}@
Sending %{public}@, NMS window queue is %ssuspended
Sending request: %{public}@
Request extra IDS options: %@
Request resolved IDS options: %@
Closing window: %lu bytes in flight, %lu max
For message: %{companionsync:SYMessageID}hu sending data of length: %tu. Got identifier %{public}@, error %@
IDS service is nil on entry to sendFile. Dropping message: %{public}@
Sending file: %{public}@
File extra IDS options: %@
File resolved IDS options: %@
Sending resource data from file: %@. Got identifier %{public}@, error %@
Failed to delete file-transfer file '%@' : %{public}@
IDS service is nil on entry to _sendResponse. Dropping message: %{public}@
Sending response: %{public}@
Response extra IDS options: %@
Response resolved IDS options: %@
For response to: %{companionsync:SYMessageID}hu sending data of length: %tu. Got identifier %{public}@, error %@
NMSMessageCenter stopping
Opening window: %lu bytes in flight, %lu max
Receiving %zu bytes of incoming data from service %{public}@. Identifier (in/out) = %{public}@ / %{public}@
Err, *whose* message? Got data for service %{public}@, but I'm listening for service %{public}@
Incoming data: wrapping it with an XPC transaction
Received response: %{public}@
No registered response handler for message: %{companionsync:SYMessageID}hu
Could not find context for message %{public}@, type %{companionsync:SYMessageID}hu
Releasing timer for outgoing request %{public}@ due to incoming Version Rejection message triggered by that message ID.
Received request: %{public}@
No request handler for message ID %{companionsync:SYMessageID}hu
Header bytes from message (8 bytes): %{public}@
First 100 bytes of incoming unrecognized message data: %{private}@
Unable to inform delegate about incoming request
IDS gave us a file at URL %{public}@, but our delegate doesn't respond to file transfer callbacks.
Incoming file transfer: wrapping it with an XPC transaction
IDS active device changed: %@
Must not forget about an NMSIncomingRequest without first responding to it. Request is an %{public}@
No Protobuf class mappings for message ID %{companionsync:SYMessageID}hu
Nano Messaging Service
Failed to create NMSWindowData object, so transmission window is forcibly disabled.
*** NMS State assertion failure in -[NMSMessageCenter %{public}@]
SYOutputStreamTransaction failed to clean up a temporary file at URL %@: %{public}@
Queue %{public}@ deallocated while suspended
Suspending %{public}@
%{public}@ resume count: %d
Resuming %{public}@
Over-resume detected for queue %{public}@
Closing output stream %{public}@
Failed to send file at %@ via IDS: %{public}@
Sent file at %@ via IDS, got identifier %{public}@
Output file contains no data, not sending anything.
Removing output file at %@
Outgoing file-transfer unnecessary - removing output file at URL %@
Retrying deferred incoming session with identifier %{public}@
Beginning file-transfer response session for engine %p
Failed to get new temporary item url: %{public}@
Engine %p now in an incoming file-transfer session. Response stream = %@ (%{public}@)
Ending file-transfer response session for engine %p
Beginning file-transfer request session for engine %p
Failed to get new temporary item URL: %{public}@
Engine %p now in an outgoing file-transfer session. Output stream = %@ (%@)
Ending file-transfer outgoing session for engine %p
Enqueueing %{companionsync:SYMessageID}hu for transfer using IDS messaging
Sent %{companionsync:SYMessageID}hu, got identifier %{public}@
Sent %{companionsync:SYMessageID}hu, %lu bytes: %{public}@
IDS message send failed: %{public}@
File-transfer engine caching start request %p
File-transfer engine eliding restart request %p
File-transfer engine cancelling session ending in an error
File-transfer engine creating a one-message session
Cancelling one-message file-transfer session: no IDSService or no output stream available
Enqueueing %{public}@ message
Error writing data to output file stream: %{public}@
Cancelling one-message file-transfer session, since the data couldn't be written to the file
Cancelling file-transfer session, since the session-end message couldn't be written to the file
Failed to delete unused file-transfer file '%@' : %{public}@
Failed to send file at %@ via IDS: %@
Sent OOB file: %{public}@
Failed to cancel outgoing file-transfer message (%{public}@): %@
Canceling send for any outgoing messages on the request stream.
Canceling send for any outgoing messages on the response stream.
Incoming data is all response data
File-transfer engine failed to decode incoming %{public}@ message
File-transfer engine decoded incoming %{public}@ message
Error reading from incoming file-transfer stream: %{public}@
Canceling attempt to consume remaining messages. Sequence numbers will likely be out of sync now.
Failure dealing with OOB data: %{public}@
Rejection/error somewhere caused remaining session messages to be ignored. Pulling them all out of the file to keep sequence numbers contiguous.
File-transfer engine ending session on %{public}@ message
Failed to write %{companionsync:SYMessageID}hd response to stream, error = %{public}@
Pulling remaining messages from the file to keep sequence numbers contiguous, in case this was an early return.
Deferring incoming file-transfer with identifier %{public}@ because I'm already within a file-transfer session
Incoming session stream: %{public}@, associated session ID: %{public}@
Finished handling session stream: %{public}@
Failed to take ownership of incoming resource at URL '%@': %{public}@
Keeping track of incoming file at URL %@
Transfer time for %{public}@: %.02f seconds
Engine deallocated while waiting to process incoming file at URL: %@
Failed to remove incoming file: %{public}@
No protobuf class mapping found for message ID %{companionsync:SYMessageID}hu
Incoming message CRC failure (0x%08x vs 0x%08x). Terrible things are about to happen.
CRC validated.
Incoming resource: %{public}@, replying to %{public}@
Receiving: %zu bytes, %{public}@, replying to %{public}@
File-transfer engine receiving single message with GUID %{public}@, %ld bytes
Incoming message data too small to contain protobuf header
Received a protobuf encoded by NMSMessageCenter? I have %lu bytes of data, and a header saying { msgID %hu, isResponse %hu, msgLen %u }. Header bytes (%p) = %.*P
Unknown message ID: %hu
Transit time for %{public}@: %.04f seconds
Enqueued response to %{companionsync:SYMessageID}hu, got identifier %{public}@
Sent response to %{companionsync:SYMessageID}hu: %{public}@
IDS send failed for response to %{companionsync:SYMessageID}hu, error: %{public}@
Error sending session via file-transfer: %{public}@
Send confirmation for message %{public}@: success=%s, error=%{public}@
Device-level ACK: single message, %{public}@ (success=%s, error=%{public}@)
Device-level ACK: file transfer, %{public}@ (success=%s, error=%{public}@)
Delivery confirmation for message %{public}@
App-level ACK: %{public}@
Active IDS device changed to: %@
Transport
Error checking for empty table - %{companionsync:sqlite3err, public}d
Error chowning path %{public}@, error: %d
Error coordinating deletion of existing DB: %{public}@
Failed to open statistics DB - %{companionsync:sqlite3err, public}d
Error fetching schema version - %{companionsync:sqlite3err, public}d
Statistics DB closed before an enqueued async block could run.
Statistics DB closed before an enqueued sync block could run.
Error creating parent folder: %{public}@
SQL Error preparing statement "%{public}s" - %{companionsync:sqlite3err, public}d
Error inserting incoming message - %{companionsync:sqlite3err, public}d
Error adding processing time to incoming message - %{companionsync:sqlite3err, public}d
Failed to add error to incoming message - %{companionsync:sqlite3err, public}d
Error marking incoming message as complete - %{companionsync:sqlite3err, public}d
Error reserving db row for outgoing message - %{companionsync:sqlite3err, public}d
Error inserting outgoing message - %{companionsync:sqlite3err, public}d
Error recording identifier for outgoing message - %{companionsync:sqlite3err, public}d
Error finding timestamp for ID - %{companionsync:sqlite3err, public}d
Error updating outgoing message for ID - %{companionsync:sqlite3err, public}d
Error while updating response state for outgoing message - %{companionsync:sqlite3err, public}d
Error while recording delivery confirmation for outgoing message - %{companionsync:sqlite3err, public}d
Error while recording incoming file transfer - %{companionsync:sqlite3err, public}d
Error while recording outgoing file transfer - %{companionsync:sqlite3err, public}d
Error while updating outgoing file transfer for send-success notification - %{companionsync:sqlite3err, public}d
Error bulk-updating identifiers (statement = "%{public}@") - %{companionsync:sqlite3err, public}d
sqlite3_close() failed - %{companionsync:sqlite3err, public}d
Failed to create statement - %{companionsync:sqlite3err, public}d
Error while reading service names - %{companionsync:sqlite3err, public}d
Failed to create prune statement - %{companionsync:sqlite3err, public}d
Failed to execute prune statement - %{companionsync:sqlite3err, public}d
Failed to create transaction for DB prune - %{companionsync:sqlite3err, public}d
Prune transaction failed to commit - %{companionsync:sqlite3err, public}d
sqlite3_exec(%{public}s) Error - %{companionsync:sqlite3err, public}d
-[%{public}@ dealloc]: XPC transaction wasn't ended prior to -dealloc
Simulating crash
%{public}@: beginning XPC transaction, to stop us being Jetsammed until it's done.
%{public}@: ending XPC transaction. We can now be jetsammed safely.
Asked to record a nil IDS message identifier!
Pausing %{public}@ ...
... Resuming %{public}@
Session acquiescense test: %{public}@, %{companionsync:SYSessionState}d, my generation %{public}@, new generation %{public}@
Session %{public}@ rejecting new session; not yet sent out my own start-session message
Session %{public}@ acquiescing to new session; sending, not started, already rejected
Session %{public}@ rejecting new session; sending, not started, first strike
Session %{public}@ acquiescing to new session; nil current generation
Session %{public}@ rejecting new session; no peer generation ID
Session %{public}@ acquiescing to new session; new generation ID %{public}@ does not match current %{public}@
Session %{public}@ acquiescing to new session; second strike
Session %{public}@ rejecting new session: first strike
SYObject %p does not provide the required syncId!
Nil data for SYObject, cannot decode.
SYChange object %{public}@ does not provide the required objectIdentifier!
SYChangeSerializer doesn't support -encodeSYChangeForBackwardCompatibility:protocolVersion:, but I'm being asked to encode a change for version %d
Serializing via -dataWithSYObject:, which may fail spectacularly
Nil data for SYObject, cannot decode
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
SYRequestFullSync
NSCopying
SYObjectChangeSet
SYLogs
CPSafeDescription
SYLogErrorInfo
SYIncomingSyncAllObjectsSession
SYFileTransferInfo
SYSyncBatch
Additions
_SYWeakServiceDBRef
_SYSharedServiceDB
UnitTestHelpers
_SY_NSStreamDispatchQueueIntegration
_SYStreamGuts
_SYZlibStreamInternal
NSLocking
SYDecompressingInputStream
_SYStreamRunLoopSourceHandler
NSObject
NSStreamDelegate
SYCompressionBufferOptimization
SYStreamEventHandlerBlocks
SYStreamThroughputCounter
SYStreamProgress
SYCompressingOutputStream
SYOutputCompressor
SYCompressedFileInputStream
SYCompressedFileOutputStream
SYErrorInfo
SYDictionaryObject
SYObject
NSSecureCoding
NSCoding
SYChangeMessage
_SYLazyChangeArray
_SYCountedSemaphore
SYBatchSyncStart
SYLogServiceState
SYStore
SYServiceDelegate
SYChangeSerializer
SYChangeTrackingWithErrors
SYChangeTracking
DeltaSync
SYStoreSessionOwner
SYSessionDelegate
SYStoreResetSessionOwner
SYStoreDeltaSessionOwner
SYStoreIncomingSessionOwner
SYObjectWrapper
SYChange
SYExtendedAttributes
SYStateProvider
SYError
SYOutgoingBatchSyncSession
SYOutgoingDeltaTransactionSession
SYAtomicFIFO
SYLogEngineState
SYIncomingTransactionSession
SYRetryTimer
SYLegacyStore
IDSServiceDelegate
NMSMessageCenterDelegate
FullSyncSupport
BatchedSyncSupport
ForHealthKitOnly
SYDegenerateChange
SYLogTransportOption
SYResetResponse
SYEndSyncSession
SYOutgoingSyncAllObjectsSession
_SYQueuedStartSession
SYService
SYSyncEngineResponder
SYStateLoggable
AtomicTransactions
LegacyChangeSupport
CompanionSyncProtoV1
NMSWindowData
SYMessageStatusRecord
SYEndSyncSessionResponse
SYResetRequest
SYMessageHeader
SYPersistentStore
UnitTestHelper
SYLogSessionState
SYSendingSession
SYBatchSyncEnd
SwizzledEquality
SYTransaction
_SYDeviceMonitor
SYDevice
NRDevicePropertyObserver
NMSObfuscatableDescriptionItem
NMSObfuscatableDescription
SYIncomingFullSyncSession
SYReceivingSession
SYSyncSessionRestartResponse
SYSyncBatchResponse
Convenience
SYTemporaryFileAPI
SYStartSyncSessionResponse
SYBatchChunkAck
NMSPersistentDictionary
_SYIncomingBatch
SYIncomingBatchSyncSession
SYAdditions
SYMessengerSyncEngine
SYFullSyncRequestAck
_SYStreamerThread
_SYOutputDataItem
_SYOutputStreamer
_SYStreamPropertyProxying
_SYInputDataItem
_SYInputStreamer
SYRejectedVersion
_NMSDispatchQueue
NMSMessageCenter
IDSDeviceUtilities
NMSOutgoingRequest
NMSDeviceTargetable
NMSObfuscatableDescriptionProviding
NMSOutgoingFileTransfer
NMSIncomingRequest
NMSDeviceSourced
NMSIncomingResponse
NMSIncomingFileTransfer
NMSOutgoingResponse
NMSPBMapping
NMSMessagePersistentContext
NMSError
SYClock
SYOutputStreamTransaction
SYStreamTransaction
SYInputStreamTransaction
SYOutOfBandData
SYSyncSessionRestartRequest
_SYMultiSuspendableQueue
SYStartSyncSession
SYBatchSyncChunk
_SYDeferredIncomingSession
SYFileTransferSyncEngine
SYDeletedObject
SYTransportLog
SYLogMultiSuspendableQueueState
_SYMessageTimerContext
_SYMessageTimerTable
SYLogPeerIDPair
SYSyncEngine
_SYQuiescenceAllocation
_SYQuiescenceObserver
SYStatisticStore
NSFilePresentation
NSFilePresenter
ForUnitTests
MessageUnpacking
DatabaseTidying
FromSYError
SYSession
ForSubclasses
_SYObjectCompatibilityWrapper
SYSessionAdditions
SYSyncEndResponse
SYLogDeviceState
SYVectorClock
SYPeer
SYSyncAllObjects
SYQueueDumper
description
dictionaryRepresentation
stringWithFormat:
dictionary
setObject:forKey:
setHeader:
setSyncID:
allocWithZone:
init
copyWithZone:
isMemberOfClass:
isEqual:
hash
mergeFrom:
readFrom:
writeTo:
copyTo:
header
syncID
.cxx_destruct
_header
_syncID
T@"SYMessageHeader",&,N,V_header
T@"NSString",&,N,V_syncID
initWithArray:
added
addObjectsFromArray:
minusSet:
deleted
count
countByEnumeratingWithState:objects:count:
syncId
addObject:
updated
changesBetween:and:
updateObject:
deleteObject:
transaction:
initWithChangesBetween:and:
applyToStore:
setAdded:
setUpdated:
setDeleted:
_added
_updated
_deleted
T@"NSMutableSet",C,N,V_added
T@"NSMutableSet",C,N,V_updated
T@"NSMutableSet",C,N,V_deleted
stringWithUTF8String:
stringByAppendingFormat:
dictionaryWithObjects:forKeys:count:
initWithDomain:code:userInfo:
standardUserDefaults
numberWithBool:
registerDefaults:
arrayWithObjects:count:
pathWithComponents:
initialize
logFolder
shouldDisplaySyncErrorMessage
shouldLogBubblesToAggD
shouldDumpIDSOnSyncError
domain
code
initWithFormat:
CPSafeDescription
T@"NSString",R,N
CPObfuscatedDescriptionObject
systemLocale
setLocale:
setNumberStyle:
stringFromNumber:
UTF8String
initWithBytes:length:encoding:
numberWithLongLong:
setDomain:
setCode:
_code
_domain
T@"NSString",&,N,V_domain
Tq,N,V_code
initWithService:
allObjects
copy
timestamp
setBirthDate:
setIdentifier:
wrappedUserContext
queue
sessionActivity
initWithCapacity:
serializer
initWithSYObjectDataArray:typeArray:decoder:
initWithSYError:userInfo:
setError:
setState:
targetQueue
delegate
state
error
isEqualToString:
syncSession:applyChanges:completion:
initWithService:message:completion:
_sendEndSessionResponse:
_continueProcessing
canRestart
setCanRestart:
canRollback
setCanRollback:
_allObjectsAsData
_completion
numberWithUnsignedLongLong:
setStartAnchor:
setEndAnchor:
hasStartAnchor
hasEndAnchor
startAnchor
endAnchor
decompressedFileSize
setDecompressedFileSize:
_decompressedFileSize
_endAnchor
_startAnchor
TB,R,N
T@"NSString",&,N,V_startAnchor
T@"NSString",&,N,V_endAnchor
TQ,N,V_decompressedFileSize
removeAllObjects
objectAtIndex:
addChanges:
setSessionID:
changesCount
clearChanges
changesAtIndex:
changesType
sessionID
index
setIndex:
changes
setChanges:
_index
_changes
_sessionID
T@"NSString",&,N,V_sessionID
TQ,N,V_index
T@"NSMutableArray",&,N,V_changes
setPeerID:
setGenerationID:
initWithPeerID:generation:
name
initWithServiceName:
setName:
setDb:
_name
T@"NSString",C,N,V_name
T@"_SYSharedServiceDB",W,N,V_db
defaultCenter
pairingStorePathWasReset
addObserverForName:object:queue:usingBlock:
objectForKey:
dealloc
fileURLWithPath:
setResourceValue:forKey:error:
defaultManager
stringByDeletingLastPathComponent
createDirectoryAtPath:withIntermediateDirectories:attributes:error:
_addSkipBackupAttributeToItemAtPath:error:
_LOCKED_hasSchemaVersionForClient:
_LOCKED_getClientVersion:
_LOCKED_setVersion:forClient:
_LOCKED_ensureSchemaVersionsTableInDB:
withDBRef:
stringByAppendingPathComponent:
stringByAppendingPathExtension:
_ensureParentExists:error:
fileSystemRepresentation
_LOCKED_createOrOpenDBForServiceName:error:
_LOCKED_runSchemaUpdate:forClientNamed:
enumerateKeysAndObjectsUsingBlock:
_LOCKED_ensureDBExists
setObject:forKeyedSubscript:
_runTransactionBlock:exclusive:
sharedInstanceForServiceName:
_ensureSchemaVersionsTable
schemaVersionForClient:
setSchemaVersion:forClient:
updateSchemaForClient:usingBlock:
inTransaction:
inExclusiveTransaction:
_lock
_schemaSetupCallbacks
removeObjectForKey:
initWithUTF8String:
_dbPath
_releaseSharedInstanceForServiceName:
dbPath
T@"NSString",R,N,G_dbPath
_SY_notifyOnQueue:handler:
objectForKeyedSubscript:
setEventHandler:queue:
createRunloopSourceForStream:
postStreamEvent:forStream:
storeProperty:forKey:
propertyForKey:
_runloopSource
_port
_queue
_handler
_delegate
_error
_status
_propertyStore
streamStatus
inputRoom
inputPtr
read:maxLength:
outputAvailable
outputPtr
write:maxLength:
lock
unlock
synchronized:
setInputSize:
setOutputSize:
setZlibError:forStream:
setStatusForStream:
writeInputFromBuffer:length:
writeInputFromStream:
readOutputToBuffer:length:
readOutputToStream:
_zStream
_inputSize
_outputSize
_input
_output
_writeOffset
_readOffset
Tq,R,N
T^v,R,N
Tr^v,R,N
setDelegate:
initWithData:
initWithCompressedDataStream:
isFileURL
initWithCompressedFileAtURL:
initWithURL:
close
open
stream:handleEvent:
_dispatchMyEvent:
streamError
scheduleInRunLoop:forMode:
getCFRunLoop
removeFromRunLoop:forMode:
_handlePendingInput
hasBytesAvailable
setCompletedUnitCount:
setProperty:forKey:
class
self
performSelector:
performSelector:withObject:
performSelector:withObject:withObject:
isProxy
isKindOfClass:
conformsToProtocol:
respondsToSelector:
retain
release
autorelease
retainCount
zone
superclass
debugDescription
TQ,R
T#,R
T@"NSString",R,C
_postEventToDelegate:
_internal
internal
T@"_SYStreamGuts",R,N,G_internal
inputBufferSize
setInputBufferSize:
outputBufferSize
setOutputBufferSize:
TQ,N
onOpenComplete
setOnOpenComplete:
onBytesAvailable
setOnBytesAvailable:
onSpaceAvailable
setOnSpaceAvailable:
onEndOfFile
setOnEndOfFile:
onError
setOnError:
onClose
setOnClose:
T@?,C,N
bytesThroughput
TQ,R,N
progress
setProgress:
T@"NSProgress",&,N
initWithFileAtPath:
getBuffer:length:
_stream
_onOpenComplete
_onBytesAvailable
_onSpaceAvailable
_onEndOfFile
_onError
_onClose
_progress
_byteCount
T@?,C,N,V_onOpenComplete
T@?,C,N,V_onBytesAvailable
T@?,C,N,V_onSpaceAvailable
T@?,C,N,V_onEndOfFile
T@?,C,N,V_onError
T@?,C,N,V_onClose
TQ,R,N,V_byteCount
T@"NSProgress",&,N,V_progress
initToBuffer:capacity:
initWithDestinationStream:
initToCompressedFileAtURL:shouldAppend:
initToMemory
hasSpaceAvailable
compressionLevel
setCompressionLevel:
Tq,N
initToFileAtPath:append:
initWithURL:append:
_level
Tq,N,V_level
filePathURL
absoluteURL
_url
_file
stringByStandardizingPath
initWithString:
appendFormat:
isNSString__
path
setAttributes:ofItemAtPath:error:
_append
_class
_internalLock
errorWithDomain:code:userInfo:
numberWithInt:
setUserInfo:
hasUserInfo
userInfo
_userInfo
Ti,N,V_code
T@"NSData",&,N,V_userInfo
setProperties:
raise:format:
properties
encodeObject:forKey:
decodeObjectOfClass:forKey:
supportsSecureCoding
encodeWithCoder:
initWithCoder:
TB,R
initWithProperties:
_properties
T@"NSDictionary",&,N,V_properties
SYObjectWithData:
decodeChangeData:fromProtocolVersion:ofType:
objectAtIndexedSubscript:
integerValue
changeObjectWithSerializer:encodedByVersion:
changeObjectWithSerializer:
degenerateChange
initWithSourceArray:decoder:
compatibilityVersion
setCompatibilityVersion:
_source
_types
_decoder
_isSYObjectDataArray
_compatibilityVersion
Tq,N,V_compatibilityVersion
initWithCount:
_waitSemaphoreWithTimeout:
_signalSemaphore
_ensureSemaphore
invalidate
waitWithTimeout:
signal
_sem_port
_count
_signals
_invalidated
numberWithUnsignedInt:
setEstimatedChangeCount:
setHasEstimatedChangeCount:
hasEstimatedChangeCount
estimatedChangeCount
_estimatedChangeCount
_has
TB,N
TI,N,V_estimatedChangeCount
addTransportOptions:
setEngine:
setSession:
setTargetedDevice:
transportOptionsCount
clearTransportOptions
transportOptionsAtIndex:
setPeerGenerationID:
transportOptionsType
hasEngine
hasSession
hasTargetedDevice
enqueuedSyncTypeAsString:
StringAsEnqueuedSyncType:
hasPeerID
hasPeerGenerationID
serviceType
setServiceType:
setHasServiceType:
hasServiceType
serviceTypeAsString:
StringAsServiceType:
engine
session
sessionQueueRunning
setSessionQueueRunning:
targetedDevice
enqueuedSyncType
setEnqueuedSyncType:
transportOptions
setTransportOptions:
peerID
peerGenerationID
_engine
_enqueuedSyncType
_peerGenerationID
_peerID
_serviceType
_session
_targetedDevice
_transportOptions
_sessionQueueRunning
T@"NSString",&,N,V_name
T@"SYLogEngineState",&,N,V_engine
T@"SYLogSessionState",&,N,V_session
TB,N,V_sessionQueueRunning
T@"SYLogDeviceState",&,N,V_targetedDevice
Ti,N,V_enqueuedSyncType
T@"NSMutableArray",&,N,V_transportOptions
T@"NSString",&,N,V_peerID
T@"NSString",&,N,V_peerGenerationID
Ti,N,V_serviceType
initWithService:isGStore:highPriority:
intValue
initWithService:isGStore:highPriority:isMasterStore:
initWithService:isGStore:priority:isMasterStore:
initWithService:isGStore:priority:isMasterStore:tracksChanges:
initWithService:priority:asMasterStore:options:
setDelegate:queue:
wrappedObject
encodeSYObject:
changeData
decodeSYObject:
initWithSYObject:type:
dataFromChange:
changeFromData:ofType:
syncStoreWillUpdate:
syncStoreWillUpdate:objectCount:
syncStoreDidUpdate:
syncStoreDidCompleteFullSync:
syncStoreAllObjectsDeleted:
syncStoreAllObjects:
syncStoreShouldPerformInitialFullSync:
beginSyncingAllObjectsForStore:
syncStoreShouldDeleteRemoteObjectsOnFailedFullSync:
syncStore:encounteredErrorInFullSync:
syncStore:encounteredError:context:
syncStoreDidSetupAfterPairing:
syncStoreDidUnpair:
syncStore:sentMessageWithContext:
syncStore:peerFinishedProcessingMessageWithContext:
syncStoreEnqueuedAllFullSyncMessages:context:
resume:
currentSession
priority
setPriority:
defaultMessageTimeout
setDefaultMessageTimeout:
customIDSOptions
setCustomIDSOptions:
hasPairingStore
deliveryQOS
sharedPersistentStoreForService:
inFullSync
currentSyncSendComplete
completedSync
head
setHasChangesAvailable
initWithChanges:
setContext:
setIdsOptions:
setErrorCallback:
setStore:
_signalNextQueuedSession
setOnComplete:
enqueue:
timeToLive
cancel
errorCallback
context
onComplete
changeWithObject:updateType:store:
_enqueueDeltaSessionWithChanges:contextInfo:idsOptions:blockUntilSent:reportError:
addObject:context:idsOptions:error:
addObject:context:idsOptions:
updateObject:context:idsOptions:error:
updateObject:context:idsOptions:
allowsDeletes
deleteObject:context:idsOptions:error:
deleteObject:context:idsOptions:
_transaction:context:idsOptions:blockUntilSent:reportError:
initWithStore:
changeList
setNeedsFullSyncWithContext:idsOptions:
isResetSync
setCompletedSync:
setFullSyncUserInfo:
setFullSyncIDSOptions:
setNeedsResetSync
initWithName:reason:userInfo:
dataWithSYObject:
archivedDataWithRootObject:requiringSecureCoding:error:
initWithIncomingSession:
userContext
options
setTargetQueue:
setSerializer:
idsOptions
setOptions:
setUserContext:
setFetchNextBatch:
isSending
_startIncomingSession:
_startResetSyncSession:error:
dequeue
suspend
service:startSession:error:
service:sessionEnded:error:
service:incomingData:completion:
service:incomingStream:metadata:completion:
service:encounteredError:context:
service:willPreferSession:overSession:
service:willSwitchFromPairingID:toPairingID:
service:didSwitchFromPairingID:toPairingID:
service:targetDeviceProximityChanged:
service:targetDeviceConnectionChanged:
serviceDidPairDevice:
serviceDidUnpairDevice:
encodeSYChangeForBackwardCompatibility:protocolVersion:
addObject:context:
updateObject:context:
deleteObject:context:
addObject:completion:
updateObject:completion:
deleteObject:completion:
addObject:error:
updateObject:error:
deleteObject:error:
initWithBundleIdentifier:
initWithBundleIdentifier:isGStore:highPriority:
initWithService:isGStore:highPriority:isMasterStore:tracksChanges:
initWithServiceName:priority:isMasterStore:
setTimeToLive:
customIDSDeliveryOptions
setCustomIDSDeliveryOptions:
isPaired
setDeliveryQOS:
hasCompletedFullSync
transaction:handlingError:
transaction:completion:
transaction:context:
transaction:context:idsOptions:
blockingTransaction:
blockingTransaction:handlingError:
transaction:context:idsOptions:blockUntilSent:
setNeedsFullSync
service:incomingData:identifier:completion:
service:incomingStream:metadata:identifier:completion:
maxBytesInFlight
setMaxBytesInFlight:
setAllowsDeletes:
syService
sessionOwner
setSessionOwner:
pendingResetSessionOwner
setPendingResetSessionOwner:
delegateQueue
sessionQueue
persistentStore
_qosTargetQueue
_flags
_allowsDeletes
_serializer
_maxBytesInFlight
_syService
_sessionOwner
_pendingResetSessionOwner
_delegateQueue
_sessionQueue
_persistentStore
T@"SYService",R,N,V_syService
T@"SYStoreSessionOwner",&,N,V_sessionOwner
T@"SYStoreResetSessionOwner",&,N,V_pendingResetSessionOwner
T@"NSObject<OS_dispatch_queue>",R,N,V_delegateQueue
T@"SYAtomicFIFO",R,N,V_sessionQueue
T@"SYPersistentStore",R,N,V_persistentStore
T@"<SYStoreDelegate>",W,N,V_delegate
Td,N
T@"<SYSerialization>",&,N,V_serializer
Tq,N,V_maxBytesInFlight
T@"NSDictionary",C,N
TB,N,V_allowsDeletes
paired
TB,R,N,GisPaired
TI,N
isPerformingDeltaSync
setPerformingDeltaSync:
inDeltaSync
willBeginDeltaSync
didEndDeltaSync
syncSession:enqueueChanges:error:
syncSession:didEndWithError:
syncSession:resetDataStoreWithError:
resetDataStoreForSyncSession:completion:
syncSession:rollbackChangesWithError:
syncSession:restartChanges:
syncSession:successfullySynced:
store
_context
_idsOptions
_store
_errorCallback
_onComplete
T@"NSDictionary",C,N,V_context
T@"NSDictionary",C,N,V_idsOptions
T@"SYStore",W,N,V_store
T@?,C,N,V_errorCallback
T@?,C,N,V_onComplete
T@"SYSession",&,N,V_session
removeObjectsInRange:
_sendBufferedChanges:
fetchNextBatch
_buffer
_bufferedState
_fetchNextBatch
T@?,C,N,V_fetchNextBatch
changeCount
_currentIdx
changeType
syncStore:objectAdded:
syncStore:objectUpdated:
syncStore:objectDeleted:
objectIdentifier
sequencer
_type
_wrappedObject
T@"<SYObject>",R,N,V_wrappedObject
dataUsingEncoding:
setExtendedAttributeData:forKey:atURL:error:
isFileReferenceURL
bytes
length
dataForExtendedAttribute:atURL:error:
initWithData:encoding:
data
mutableBytes
setLength:
setExtendedAttributeValue:forKey:atURL:error:
stringForExtendedAttribute:atURL:error:
absoluteString
initWithName:type:typeName:
setEncoder:
_encodedState
getBytes:length:
stateProviderWithName:type:typeName:
updateState:
encoder
_handle
_state
_encoder
T@?,C,N,V_encoder
dataWithPropertyList:format:options:error:
localizedDescription
mutableCopy
errorWithSYError:userInfo:
serviceActivity
_messageExpiredWithSeqno:identifier:
initWithQueue:timerCallback:
lastPathComponent
stringByAppendingString:
UUIDString
fullSessionTimeout
maxConcurrentMessages
perMessageTimeout
service
protocolVersion
_sendSyncBatch:nextState:
_newMessageHeader
identifier
setChunkIndex:
setObjects:
sequenceNumber
_setMessageTimerForSeqno:
syncEngine
combinedEngineOptions:
setIdentifier:forSequenceNumber:
cancelTimerForSequenceNumber:
enqueueSyncRequest:withMessageID:priority:options:userContext:callback:
initWithError:
_notifySessionComplete
removeAllIndexes
_sendSyncStart
sessionDidEnd:withError:
didCompleteSession
_setStateQuietly:
_sendSyncCompleteAndRunBlock:
_waitForMessageWindow
_sendSyncCancelled
_sendSyncRestart
_sessionComplete
dateWithTimeIntervalSinceNow:
addTimerWithFireDate:forSequenceNumber:
_processNextState
didStartSession
_installStateListener
_installTimers
_setupChangeConcurrency
chunkIndex
addIndex:
hasError
errorFromSYErrorInfo:
countOfIndexesInRange:
cancelTimerForIdentifier:
remainingSessionTime
start:
cancelWithError:
_handleBatchAck:error:
_handleBatchSyncEndResponse:error:
_sentMessageWithIdentifier:userInfo:
wasCancelled
_stateUpdateSource
_sessionTimer
_batchIndex
_ackedBatchIndices
_changeFetcherQueue
_changeConcurrencySemaphore
_changeWaitActivity
_sessionActivity
_errorIsLocal
_hasSentEnd
_timers
_sessionStartTime
_canRestart
_canRollback
_cancelled
changeWithChangeObject:serializer:encodeUsingVersion:
timerCount
_peerProcessedMessageWithIdentifier:userInfo:
firstObject
removeObjectAtIndex:
enumerateObjectsUsingBlock:
lastObject
dequeueUntil:
tail
T@,R
typeAsString:
StringAsType:
setSuspended:
setHasSuspended:
hasSuspended
setInSession:
setHasInSession:
hasInSession
setBuffersSessions:
setHasBuffersSessions:
hasBuffersSessions
type
setType:
suspended
inSession
buffersSessions
_buffersSessions
_inSession
_suspended
Ti,N,V_type
TB,N,V_suspended
TB,N,V_inSession
TB,N,V_buffersSessions
_sendComplete
_sendChanges
_sendCancelled
initWithService:transaction:completion:
_message
initWithInterval:backoffFactor:maxRetries:queue:callout:
incrementBackoff
_timer
_interval
_backoffFactor
_maxRetries
_numRetries
setTracksChanges:
setupPairingNotifications
_getPairedDeviceID
setPairedDeviceID:
pairedDeviceID
setupDatabase
sharedInstance
pairingStorePath
_setupMessageCenter_LOCKED
_listenForPrefsChangeNotifications
fullSyncActivityDictionary
removeObserver:
pairingID
fileExistsAtPath:
persistentDomainForName:
_updateMessageCenterPrefs:
boolValue
setEnableTransmissionWindow:
unsignedIntegerValue
setMaxMessagesInFlight:
setMinMessagesInFlight:
registeredNotificationHandlers
setRegisteredNotificationHandlers:
_devicePaired:
addObserver:selector:name:object:
_deviceUnpaired:
messageCenter
valueForProperty:
_obliterate
_isUsingGenericCache
_isPairedWithDevice:
setPersistentStore:
jsonRepresentation
setVectorClockJSON:
dateWithTimeIntervalSinceReferenceDate:
lastMessageReceived
sender
sequenceNumberIsDuplicate:forPeer:
timeIntervalSinceReferenceDate
earlierDate:
resetSequenceNumbersForPeer:
oslog
lastSequenceNumberForPeerID:
postUserNotification:message:
version
_postVersionRejectedForMessageID:
setLastMessageReceived:
newMessageHeader
setInReplyTo:
setSupportedVersions:count:
sendMessage:ofType:respondingTo:userInfo:idsOptions:
setLastSequenceNumber:fromPeer:error:
setOverflowResyncTime:
_pathForMessageCenterCache
initWithIDSServiceIdentifier:launchOnDemandNotification:cacheFolderPath:
mapPBRequest:toResponse:messageID:
recordIncomingMessage:forService:
pbRequest
idsIdentifier
_checkMessageHeader:messageID:
setExpectsResponse:
setRequestSyncID:
handleFullSyncRequest:response:
response
setPbResponse:
recordOutgoingMessage:forService:
send
_recordLastSeqNo:
addRequestHandlerForMessageID:usingBlock:
handleSyncAllObjects:response:
handleBatchSyncStart:
handleBatchSyncEnd:response:
handleBatchSyncChunk:response:
handleChangeMessage:
supportedVersionsCount
supportedVersionsAtIndex:
inReplyTo
pbResponse
accepted
inProgressSyncID
hasInProgressSyncID
lastSyncEndID
performFullSyncToCurrentDBVersion
setWaitingForSyncEndID:
waitingForSyncEndID
addResponseHandler:usingBlock:
processBatchChunkAck:
currentFullSyncID
clearAllChanges
exitFullSyncWithID:error:
_retrySync
_handleIDSOverflowWithError:
updateOutgoingMessageWithIdentifier:forService:sentSuccessfully:sendError:
updateOutgoingMessageWithIdentifier:didReceiveResponse:error:
persistentUserInfo
nextBatchStep
addErrorHandlerForMessageID:usingBlock:
resume
overflowResyncTime
date
timeIntervalSinceNow
performFullSyncIfNecessaryAskingDelegate:
loggingFacility
tracksChanges
initWithPath:loggingFacility:changeTrackingEnabled:
vectorClockJSON
initWithJSONRepresentation:
clocksCount
incrementClockForPeerID:
_vectorClockUpdated
hasClockForPeer:
clockForPeer:
addClocks:
clockValueForPeerID:
clockValueForPeer:
setAccepted:
setInProgressSyncID:
enterFullSyncWithID:ignoring:
remoteStoreRequestFullSync
hasPrefix:
canStartNewSyncSession
alwaysWins
_shouldIgnoreSyncID:
_syncEndedWithSyncID:
reassignCurrentSyncID:
allObjectsCount
remoteStoreAllObjects:fromPeer:clock:
setClockValue:forPeer:
processBatchSyncStart
objects
processBatchChunkAtIndex:encodedObjects:error:
processBatchSyncEnd:
_shouldSkipNonSyncMessages
performFullSync
updateLastIncomingMessageWithError:
syncStore:detectedChangeListBubbleOfSize:
objectForStore:
updateLastIncomingMessageWithProcessingTime:
assignIdentifier:toOutgoingMessage:
messageID
confirmDeliveryOfOutgoingMessage:
setPersistentUserInfo:
setSendTimeout:
requestWithMessageID:
setPbRequest:
setShouldEncrypt:
setResponseTimeout:
wrapMessage:ofType:respondingTo:userInfo:
addEntriesFromDictionary:
setExtraIDSOptions:
sendRequest:
setTimestamp:
setSender:
vectorClock
setVersion:
nextSequenceNumber
setSequenceNumber:
setContextInfo:
commitBlocking:reportError:
_allowDeltaSyncWithContext:error:
handleObjectChanges:contextInfo:idsOptions:blockUntilSent:reportError:
_handleObjectChanges:contextInfo:idsOptions:blockUntilSent:reportError:notifyingTransaction:
_transactionDidComplete:
lastSyncFailed
logChanges:
sendChanges:context:options:sentSignal:
increaseClockForPeerID:by:
logChanges:error:
setFullSyncWasRequestedBySlave:
performFullSyncIfNecessary
_postBatchEndMessageWithState:error:then:
currentLocalVersion
performBatchedSyncToCurrentDBVersion
array
setAllObjects:
fullSyncUserInfo
fullSyncIDSOptions
fullSyncWasRequestedBySlave
objectChanged:sinceVersion:
service:account:incomingOpportunisticData:withIdentifier:fromID:context:
service:didSendOpportunisticDataWithIdentifier:toIDs:
service:account:incomingMessage:fromID:context:
service:account:incomingData:fromID:context:
service:account:incomingUnhandledProtobuf:fromID:context:
service:account:incomingResourceAtURL:fromID:context:
service:account:incomingResourceAtURL:metadata:fromID:context:
service:account:incomingPendingMessageOfType:fromID:context:
service:activeAccountsChanged:
service:devicesChanged:
service:nearbyDevicesChanged:
service:connectedDevicesChanged:
service:linkedDevicesChanged:
service:account:identifier:didSendWithSuccess:error:
service:account:identifier:didSendWithSuccess:error:context:
service:account:identifier:sentBytes:totalBytes:
service:account:identifier:hasBeenDeliveredWithContext:
service:account:identifier:fromID:hasBeenDeliveredWithContext:
service:account:inviteReceivedForSession:fromID:
service:account:inviteReceivedForSession:fromID:withOptions:
service:account:inviteReceivedForSession:fromID:withContext:
service:account:receivedGroupSessionParticipantUpdate:
service:account:receivedGroupSessionParticipantDataUpdate:
serviceSpaceDidBecomeAvailable:
serviceAllowedTrafficClassifiersDidReset:
service:didSwitchActivePairedDevice:acknowledgementBlock:
messageCenter:didReceiveUnknownRequest:
messageCenter:didReceiveIncomingFileTransfer:
messageCenter:didResolveIDSIdentifierForRequest:
messageCenter:didResolveIDSIdentifier:forResponse:
messageCenter:didResolveIDSIdentifier:forFileTransfer:
messageCenter:didSuccessfullySendRequestWithIdentifier:userInfo:
messageCenter:didSuccessfullyDeliverRequestWithIdentifier:userInfo:
messageCenter:failedToSendMessageWithIdentifier:error:userInfo:
messageCenter:activeDeviceChanged:acknowledgement:
messageCenter:nearbyDevicesChanged:
messageCenter:connectedDevicesChanged:
_getPairingStorePath
_batchChunkUnackedIndices
_prefsChanged
setupMessageCenter
_copyPeerClockFromMessageHeaderIfNecessary:
peerState:fromPeer:matchesExpectationForChangeCount:offsetAmount:
setService:
databaseFileName
setDatabaseFileName:
encryptPayloads
setEncryptPayloads:
setAlwaysWins:
setQueue:
setLoggingFacility:
setMessageCenter:
setVectorClock:
setNextBatchStep:
_batchCounter
_tracksChanges
_sendSignals
_syncRetryTimer
_overflowRetryTimer
_overflowRetryError
_deferredFullSync
_transaction
_encryptPayloads
_alwaysWins
_registeredNotificationHandlers
_fullSyncWasRequestedBySlave
_priority
_service
_databaseFileName
_loggingFacility
_pairedDeviceID
_messageCenter
_vectorClock
_nextBatchStep
T@"NSString",&,N,V_service
T@"NSString",&,N,V_databaseFileName
Tq,N,V_priority
TB,N,V_encryptPayloads
TB,N,V_alwaysWins
T@"SYPersistentStore",&,N,V_persistentStore
T@"NSObject<OS_dispatch_queue>",&,N,V_queue
T^{__CFString=},N,V_loggingFacility
T@"NSUUID",&,N,V_pairedDeviceID
TB,N,V_registeredNotificationHandlers
T@"NMSMessageCenter",&,N,V_messageCenter
T@"SYVectorClock",&,N,V_vectorClock
TB,N,V_fullSyncWasRequestedBySlave
T@?,C,N,V_nextBatchStep
newFullSyncContext
_postBatchStartMessageWithState:then:
UUID
unsignedIntValue
sendCompletedForSyncWithID:
_restartBatchSyncWithState:then:
_sendBatchChunk:withState:then:
containsIndex:
removeIndex:
changeTrackingToggled:
isDegenerate:
setKey:
setValue:
value
_key
_value
T@"NSString",&,N,V_key
T@"NSString",&,N,V_value
_accepted
TB,N,V_accepted
T@"SYErrorInfo",&,N,V_error
setRollback:
setHasRollback:
hasRollback
rollback
_rollback
TB,N,V_rollback
_sessionCompleteWithError:
_fetchChanges
_sessionFailed
_changesToSend
setDateFormat:
timeZoneForSecondsFromGMT:
setTimeZone:
initWithRequest:completion:
request
completion
_request
T@"SYStartSyncSession",R,N,V_request
T@?,R,N,V_completion
initWithService:priority:qos:asMasterStore:options:
pathExtension
registerQueue:
initWithName:qosClass:serial:target:
isSuspended
_setupPairingNotifications
targetableDevice
_updateMetaProtocolInfoForDevice:
dispatchQueue
_processPendingChanges
stateForLogging
_deviceTargetabilityChanged:
_deviceRemoved:
compare:options:range:
compare:options:
_protocolVersion:supportsEngineType:
_upgradeEngineTo:
_downgradeEngineForVersion:
deviceClass
systemVersion
systemBuildVersion
_setProtocolVersionForRemoteOSVersion:build:remoteIsWatch:switchingEngines:
_deviceOSInfoChanged:
object
_pause
_suspend
_removePairingStoreDevice
_setupPairingStoreWithDevice:
_dealWithPotentiallyStallingCurrentSession
_signalPairingStoreAvailable
_continue
_ifDelegateImplements:do:then:
isTargetable
_switchToNewTargetedDevice:
knownDevices
_signalPairingStoreUnavailable
removeObserver:name:object:
_handleError:
targetIsNearby
targetConnected
_initializeServiceDB:
_initializeMessaging:
setCocoaTransportOptions:
isMasterStore
initWithService:isReset:
_sendResetRequest
_makeSessionForDeltaSync:
beginSession
reason
setSessionSignpost:
_pathForDataStore
initWithService:queue:
_makeSyncEngineOfType:
setResponder:
_whenSessionEnds:
_swapEngineTo:
_wrapUpCurrentSession:
birthDate
sessionSignpost
endSession
_handleStartSession:completion:
addMessageIDsToIgnore:
dateFromString:
timeIntervalSinceDate:
hasRejectedPeerSession
setHasRejectedPeerSession:
buffersHandshake
_chooseBetweenCollidingSessions::
_willAcquiesceToNewSessionFromPeer:
compare:
_postVersionRejectionMessageForMessageWithID:
shouldIgnoreMessageID:
removeMessageIDFromIgnoreList:
_v1_handleFullSyncRequest:completion:
_v1_handleSyncAllObjects:completion:
_v1_handleBatchSyncStart:completion:
_v1_handleBatchSyncChunk:completion:
_v1_handleBatchSyncEnd:completion:
_v1_handleChangeMessage:completion:
_handleResetRequest:completion:
_handleSyncBatch:completion:
_handleRestartSession:completion:
_handleEndSession:completion:
_peerRejectedVersion:completion:
_v1_handleFullSyncRequestAck:error:
_v1_handleBatchChunkAck:error:
_v1_handleBatchEndResponse:error:
_handleResetResponse:error:
_handleStartSessionResponse:error:
_handleSyncBatchResponse:error:
_handleRestartSessionResponse:error:
_handleEndSessionResponse:error:
URLByDeletingLastPathComponent
initFileURLWithFileSystemRepresentation:isDirectory:relativeToURL:
URLByAppendingPathComponent:
_claimOwnershipOfFileAtURL:error:
removeItemAtURL:error:
_clearOutgoingMessageUUID:
_recordOutgoingMessageUUID:
_readyToProcessIncomingMessages
barrierAsync:
hasMetadata
metadata
unarchiveMetadata:
initWithService:isReset:metadata:
generationID
peerGenerationIDs
setReason:
sessionTimeout
setFullSessionTimeout:
_sessionFromIncomingStartRequest:
_enqueueIncomingStartSessionRequest:withCompletion:
_shouldSession:fromPeer:supercedeSession:ofAge:collisionDetected:
_onSessionStateChangedTo:do:
metadataModified
sessionMetadata
setMetadata:
cancelSessionID
_request:hasValidSessionIDForSession:response:completion:
_handleSyncBatch:response:completion:
_handleRestartSession:response:completion:
_handleEndSession:response:completion:
_swapSessionForVersionChange
_supercededWithSession:
willAcceptMessageWithHeader:messageID:
handleSyncRequest:ofType:response:
handleSyncResponse:ofType:completion:
handleOutOfBandData:completion:
handleFileTransfer:metadata:completion:
handleSyncError:forMessageWithIdentifier:
enqueuedMessageWithID:context:
sentMessageWithID:context:
deliveredMessageWithID:context:
serializeForIncomingSession:
currentDeviceProximityChanged:
currentDeviceConnectionChanged:
extraTransportOptions
T@"NSDictionary",R,N
T@"PBCodable",R,N
targetIsInProximity
targetIsConnected
sessionFailedToCancelMessageUUIDs:
sessionStalenessInterval
setSessionStalenessInterval:
sendingBufferCap
setSendingBufferCap:
engineType
setEngineType:
_serviceName
_defaultPriority
_defaultOptions
_customIDSOptions
_currentSession
_incomingIOQueue
_processSignalSource
_persistentStoreLock
_syncEngine
_rejectingV1SyncSessions
_inFlightSyncRequestIdentifier
_queuedStartSession
_onSessionEnd
_serviceActivity
_stateHandle
_flagLock
_engineType
_defaultMessageTimeout
_sessionStalenessInterval
_sendingBufferCap
_generationID
T@"SYSyncEngine",R,N,V_syncEngine
T@"NSObject<OS_dispatch_queue>",R,N,V_queue
T@"SYPersistentStore",R,N
T@"_SYMultiSuspendableQueue",R,N,V_sessionQueue
T@"NSObject<OS_os_activity>",R,N,V_serviceActivity
T@"NSString",R,N,V_peerID
TI,N,V_engineType
T@"NSString",R,N,V_generationID
T@"NSString",R,N,V_serviceName
Tq,N,V_defaultPriority
Td,N,V_defaultMessageTimeout
Td,N,V_sessionStalenessInterval
T@"SYSession",R
T@"NSDictionary",&,N,V_defaultOptions
Tq,N,V_sendingBufferCap
setPayload:
sendData:options:completion:
doubleValue
outputStreamWithMetadata:priority:options:context:error:
sendData:options:identifier:error:
dataStreamWithMetadata:options:completion:
dataStreamWithMetadata:options:identifier:error:
containsObject:
_handleBatchChunk:completion:
setErrorResolution:
_handleEndSync:completion:
hasSuffix:
initWithPath:logFacility:
_openDBForceRecreate:
_ensureSchema
_prepareStatements
_withDB:
fileExistsAtPath:isDirectory:
removeItemAtPath:error:
_getSchemaVersion
_syncTransaction:block:
componentsJoinedByString:
initWithSharedDBForServiceName:
removeAllMessages
addMessageWithID:ofLength:timeoutTime:
removeAndReturnLengthOfMessageWithID:
removeAndReturnLengthOfMessagesWithIDs:
expiredMessageIDs
lengthOfAllMessagesInFlight
countOfAllMessagesInFlight
dateOfNextMessageExpiry
pushPendingMessageData:timeToLive:
popPendingMessage
countOfPendingMessages
dbRef
_path
_syncQ
_sharedDB
_addMessageInFlight
_getMessageLength
_removeMessageInFlight
_getNextExpireDate
_getExpiredMessageIDs
_getBytesInFlight
_getCountInFlight
_pushPendingMessage
_getPendingMessage
_popPendingMessage
_countPendingMessages
T@"NSArray",R,N
T@"NSDate",R,N
attributesOfItemAtPath:error:
timeIntervalSince1970
initWithTimeIntervalSince1970:
setMessageID:
initWithMessageID:
deviceACKReceived
applicationACKReceived
responseReceived
isComplete
initFiller
setDeviceACKReceived:
setApplicationACKReceived:
setResponseReceived:
_deviceACKReceived
_applicationACKReceived
_responseReceived
_messageID
T@"NSString",C,N,V_messageID
TB,N,V_deviceACKReceived
TB,N,V_applicationACKReceived
TB,N,V_responseReceived
setDidRollback:
setHasDidRollback:
hasDidRollback
didRollback
_didRollback
TB,N,V_didRollback
setCancelSessionID:
hasCancelSessionID
_cancelSessionID
T@"NSString",&,N,V_cancelSessionID
numberWithDouble:
setTimeout:
setHasTimeout:
hasTimeout
timeout
_sequenceNumber
_timeout
_timestamp
_sender
_version
Td,N,V_timestamp
T@"SYPeer",&,N,V_sender
T@"SYVectorClock",&,N,V_state
TI,N,V_version
TQ,N,V_sequenceNumber
Td,N,V_timeout
initWithKeyOptions:valueOptions:capacity:
initWithSharedDatabase:
setUnfinishedSyncTimeout:
_setupSharedDB
_openDBAtPath:
_tableEmpty:db:
_loadOrCreatePeerIDForDB:
_convertTimestamps
_fixPeerInfo
_cacheTTL
_inTransaction:do:
enumerateRangesUsingBlock:
componentsSeparatedByString:
addIndexesInRange:
_decodeIndexSet:
addIndexes:
_encodeIndexSet:
_LOCKED_storeSequenceNumberSet:forPeerID:db:error:
_sequenceNumberSetForPeerID:inDB:
_lastSequenceNumberForPeerID_LOCKED:db:
_loadIgnoreList_LOCKED:
unionSet:
_saveIgnoreList_LOCKED:
removeObject:
sy_unarchivedObjectFromData:
_verifyInTransactionForFullSync
objectId
setCachedChangedSyncIDsVersion:
cachedChangedSyncIDsVersion
cachedChangedSyncIDs
_oldestVersion
setCachedVersionStale:
cachedVersionStale
setCachedChangedSyncIDs:
_dbRef
_storeSequenceNumberSet:forPeerID:
resetSequenceNumber:
setLastSequenceNumber:fromPeer:
ignoringFullSyncWithID:
lastSyncError
durationOfLastFullSync
lastSeenRemoteVersion
logSyncCompletionToRemoteVersion:
unfinishedSyncTimeout
sharedDB
setSharedDB:
_timeToLiveCache
_changeTrackingEnabled
_peerSeqnoSets
_ignoringMessageIDs
_getInFullSync
_getChangeCount
_getNextExpireTime
_purgeExpiredChanges
_insertChange
_getFullsyncSent
_setFullsyncSent
_logSyncComplete
_getChangeIDsSinceVersion
_getLocalVersion
_getOldestVersion
_setVectorClock
_setPeerSeqNo
_getPeerSeqNo
_setPeerSeqNoSet
_enterFullSync
_exitFullSync
_getIgnoringSyncID
_getCurrentSyncID
_getCurrentSyncStartTime
_getLastEndedSyncID
_getWaitingForSyncID
_setWaitingForSyncID
_setAllSentForSyncID
_getAllSentForCurrentSync
_getLastSyncError
_setSyncUserInfo
_getSyncUserInfo
_setSyncIDSOptions
_getSyncIDSOptions
_cachedVersionStale
_unfinishedSyncTimeout
_cachedChangedSyncIDs
_cachedChangedSyncIDsVersion
T@"NSSet",&,N,V_cachedChangedSyncIDs
TQ,N,V_cachedChangedSyncIDsVersion
TB,N,V_cachedVersionStale
T@"_SYSharedServiceDB",&,N,V_sharedDB
performingDeltaSync
TB,N,GisPerformingDeltaSync
T@"NSString",&,N
T@"NSDate",C,N
Td,N,V_unfinishedSyncTimeout
T@"NSError",R,N
T@"NSString",C,N
Td,R,N
lastDBErrorInfo
initForReadingFromData:error:
initRequiringSecureCoding:
encodedData
dataWithBytes:length:
addPeer:
peersCount
clearPeers
peerAtIndex:
peerType
stateAsString:
StringAsState:
setIsReset:
setHasIsReset:
hasIsReset
setPerMessageTimeout:
setHasPerMessageTimeout:
hasPerMessageTimeout
setHasFullSessionTimeout:
hasFullSessionTimeout
setHasCanRestart:
hasCanRestart
setHasCanRollback:
hasCanRollback
setCanceled:
setHasCanceled:
hasCanceled
hasReason
setIsSending:
isReset
setMaxConcurrentMessages:
canceled
peers
setPeers:
_fullSessionTimeout
_maxConcurrentMessages
_perMessageTimeout
_identifier
_peers
_reason
_canceled
_isReset
_isSending
T@"NSString",&,N,V_identifier
Ti,N,V_state
TB,N,V_isSending
TB,N,V_isReset
Td,N,V_perMessageTimeout
Td,N,V_fullSessionTimeout
TQ,N,V_maxConcurrentMessages
T@"SYLogErrorInfo",&,N,V_error
TB,N,V_canRestart
TB,N,V_canRollback
TB,N,V_canceled
T@"NSMutableArray",&,N,V_peers
T@"NSString",&,N,V_reason
_tweakMessageHeader:
distantFuture
changeWithChangeObject:serializer:
_setLocalErrorOccurred
setObject:atIndexedSubscript:
sleepForTimeInterval:
_localErrorOccurred
_sentEnd
_sessionFinished
_setComplete
_sendEndSessionAndError:
_notifyErrorAndShutdown
stateResponders
setIsResetSync:
setExpectsRollbackSupport:
setExpectsRestartSupport:
setSessionTimeout:
_sentStart
supportsFileTransferMessageSend
_startFailedForStateChangeWithError:
_setCancelled
_cancelPendingMessagesReturningFailures
supportsRestart
supportsRollback
setSessionMetadata:
_confirmedStart
_confirmedEnd
_setMessageTimer
_resolvedIdentifierForRequest:
_resolvedIdentifier:forResponse:
_messageTimer
_batchObjectIDsByBatchIndex
_startMessageID
_endMessageID
_batchMessageIDs
_flagsLock
stringFromDate:
processInfo
processName
_setTheory_isEqual:
clocks
setWithArray:
isEqualToSet:
JSONObjectWithData:options:error:
setPeer:
unsignedLongLongValue
hasClockForPeerID:
clockForPeerID:
peer
setClockValue:forPeerID:
removeObjectsAtIndexes:
compactDictionaryRepresentation
dataWithJSONObject:options:error:
increaseClockForPeer:by:
incrementClockForPeer:
callStackSymbols
_endTransaction
_beginTransaction
contextInfo
commit
setCompletion:
_inTransaction
_contextInfo
T@"SYLegacyStore",&,N,V_store
T@"NSDictionary",C,N,V_contextInfo
T@?,C,N,V_completion
_rebuildDeviceList
_clearDeviceList
_deviceDidBecomeActive:
_deviceDidBecomeInactive:
currentTargetableDevice
getAllDevices
initWithNRDevice:
postNotificationName:object:
deviceForNRDevice:
addNRDevice:
removeNRDevice:
nrDevice
objectsPassingTest:
deviceForPairingID:
deviceBecameTargetable:
allDevices
_devices
_currentTargetDeviceUUID
deviceForIDSDevice:
substringFromIndex:
uniqueIDOverride
doesNotRecognizeSelector:
addPropertyObserver:forPropertyChanges:
_updateStateFlagsPostingNotifications:
deviceForNRDevice:fromIDSDevices:
_updateCachedStateForProperty:
isActive
setDeviceClass:
setBuildVersion:
deviceForIDSDeviceID:fromList:
device:propertyDidChange:fromValue:
T@"NSSet",R
T@"SYDevice",R
deviceCode
findMatchingIDSDeviceFromList:
lastActiveDate
hasCachedNearby
setHasCachedNearby:
cachedIsNearby
setCachedIsNearby:
hasCachedConnected
setHasCachedConnected:
cachedConnected
setCachedConnected:
_nrDevice
_pairingID
_pairingStorePath
_deviceClass
_systemVersion
_systemBuildVersion
_lastActiveDate
_hasCachedNearby
_cachedIsNearby
_hasCachedConnected
_cachedConnected
T@"NRDevice",R,N,V_nrDevice
Tq,N,V_state
targetable
TB,R,N,GisTargetable
active
TB,R,N,GisActive
T@"NSString",R,C,N,V_pairingStorePath
T@"NSUUID",R,N,V_pairingID
T@"NSString",R,N,V_deviceClass
T@"NSString",R,N,V_systemVersion
T@"NSString",R,N,V_systemBuildVersion
T@"NSDate",R,N,V_lastActiveDate
TB,N,V_hasCachedNearby
TB,N,V_cachedIsNearby
TB,N,V_hasCachedConnected
TB,N,V_cachedConnected
initWithFormat:value:obfuscated:
format
setFormat:
obfuscated
setObfuscated:
_obfuscated
_format
T@"NSString",&,N,V_format
T@"<NSObject>",&,N,V_value
TB,N,V_obfuscated
items
prefixString
appendString:
_descriptionObfuscated:
addDescriptionFormat:value:
addObfuscatedDescriptionFormat:value:
setPrefixString:
setItems:
_prefixString
_items
T@"NSMutableArray",&,N,V_items
T@"NSString",&,N,V_prefixString
_sessionEnded
_cancelSession
T@"NSObject<OS_os_activity>",R,N,V_sessionActivity
_setCompleted
_sessionCancelled
_sessionRestarted
lastIndex
_postAsyncResetRequestReturningError:
_setStarted
_hasStarted
_midStreamErrorHandled
_isMissingSyncBatches
_hasCompleted
_receivedBatchIndices
_asyncResetGroupToWaitOn
_weakBlockWaitingForReset
initWithCocoaError:
cocoaError
cocoaTransportOptions
T@"NSDictionary",&,N
_SYTemporaryFileURL:
_SYURLForNewTemporaryFile:
setSupportsRollback:
setSupportsRestart:
_metadata
_supportsRestart
_supportsRollback
TB,N,V_supportsRollback
TB,N,V_supportsRestart
T@"NSData",&,N,V_metadata
_chunkIndex
TI,N,V_chunkIndex
_ensureDBSchema
_checkSchemaVersion
_dataFromObject:
_objectFromData:
initWithPath:objectClass:loggingFacility:
initWithSharedDBForService:objectClass:
setObject:forKey:expires:
resetObject:forKey:
enumerateObjectsSortedByExpirationDate:
enumerateObjectsSortedByEnqueueDate:
_objectClass
_fetch
_insert
_reset
_remove
_removeAll
_byDate
_byEnqueueDate
initWithTimeIntervalSinceReferenceDate:
batch
setBatch:
_batch
T@"SYBatchSyncChunk",&,N,V_batch
_hasReceivedEndSync
_queueLock
_incomingBatchQueue
_myDescription
increaseBy:
increment
setWithObjects:
sy_whitelistedClasses
unarchivedObjectOfClasses:fromData:error:
weakToStrongObjectsMapTable
mapTableWithKeyOptions:valueOptions:
idsService
devices
isNearby
isConnected
_hookupMessageHandler
deviceIDFromDevice:
_wrapMessage:ofType:userInfo:
responder
setFileURL:
_fileTransferHeader
sendTimeout
setPbHeaderInfo:
sendFile:
cancelMessageWithID:error:
isInSession
suspendIncomingMessages
resumeIncomingMessages
initWithIDSServiceIdentifier:
transportActivity
setTransportActivity:
_handleError:forMessageID:
_getRequestHeader:
_suspendIncomingMessages
expectsResponse
configureResponse
_resumeIncomingMessages
enumerateIndexesUsingBlock:
_getResponseHeader:
requestIDSIdentifier
payload
subdataWithRange:
setWithObject:
setTargetDeviceIDs:
fileURL
cancelMessagesReturningFailures:
idsQueue
_lookupLock
_requestLookup
_callbackLookup
_activeDevice
_sessionDeviceID
_idsQueue
T@"NSDictionary",C,N,V_customIDSOptions
T@"NSObject<OS_dispatch_queue>",R,N,V_idsQueue
requestSyncID
_inProgressSyncID
_requestSyncID
T@"NSString",&,N,V_requestSyncID
T@"NSString",&,N,V_inProgressSyncID
start
_waitForStartup
initWithCondition:
condition
lockWhenCondition:
currentRunLoop
unlockWithCondition:
runMode:beforeDate:
streamerThread
runLoop
main
_threadRunLoop
_stopRLS
_startupLock
T@"NSRunLoop",R,N
setData:
bytesSent
setBytesSent:
callback
setCallback:
_data
_bytesSent
_callback
T@"NSData",C,N,V_data
TQ,N,V_bytesSent
T@?,C,N,V_callback
_tryToSendData
_completeAllItemsWithError:
_getCompletionBlock
setStreamProperty:forKey:
streamPropertyForKey:
initWithCompressedFileURL:callbackQueue:
writeData:completion:
whenComplete:
hasWrittenData
_callbackQueue
_hasWrittenData
TB,R,N,V_hasWrittenData
initWithLength:callback:
lengthRemaining
setLock:
_length
T{os_unfair_lock_s=I},N,V_lock
TQ,N,V_length
T@"NSMutableData",R,N,V_data
_tryToReadData
appendBytes:length:
readDataOfLength:completion:
exceptionWithName:reason:userInfo:
raise
clearSupportedVersions
addSupportedVersions:
supportedVersions
_supportedVersions
_inReplyTo
T@"NSString",&,N,V_inReplyTo
T^I,R,N
initWithName:attributes:target:
sync:
async:
TB,R,N,GisSuspended
removeDelegate:
_setNextWindowTimeoutFireDate
numberWithUnsignedShort:
setRequestClass:
setResponseClass:
laterDate:
_handleError:context:
_checkForSwitch
_updateExpireTimerWithDate:
setDelegateRequiresACKs:
addDelegate:queue:
appendData:
shouldEncrypt
extraIDSOptions
enableTransmissionWindow
expectsPeerResponse
outgoingResponseIdentifier
setIdsIdentifier:
setIdsContext:
targetDeviceIDs
_buildDataForRequest:options:
sendData:toDestinations:priority:options:identifier:error:
windowResponseTimeout
setDate:
setFromRequest:
delegateRequiresACKs
responseTimeout
pbHeaderInfo
sendResourceAtURL:metadata:toDestinations:priority:options:identifier:error:
getResourceValue:forKey:error:
setSent:
sourceDeviceID
_buildDataForResponse:options:
cancelIdentifier:error:
setSendAcked:
isFromRequest
processAcked
setProcessAcked:
sendAcked
incomingResponseIdentifier
setRequestIDSIdentifier:
setRequestSent:
setRequestPersistentUserInfo:
setSourceDeviceID:
_pbMappingForMessageID:
responseClass
_decodeIncomingRequestData:context:
messageWindowCountEnabled
setMessageWindowCountEnabled:
_timeoutWindowedMessages
requestHandlers
errorHandlers
responseHandlers
_currentBytesInFlight
_expireMessages
actionQ
dropExtantMessages
_sendResponse:
maxMessagesInFlight
minMessagesInFlight
setWindowResponseTimeout:
_serviceIdentifier
_launchNotification
_resumed
_requestHandlers
_errorHandlers
_responseHandlers
_pbMapping
_persistentContextStore
_nextExpireTimerFireDate
_expireTimer
_windowData
_windowTimeout
_windowQueue
_checkedForQWS
_idsIncomingQueue
_enableTransmissionWindow
_delegateRequiresACKs
_transportActivity
_maxMessagesInFlight
_minMessagesInFlight
_windowResponseTimeout
T@"<NMSMessageCenterDelegate>",W,N,V_delegate
TB,N,V_delegateRequiresACKs
T@"IDSService",&,N,V_service
currentBytesInFlight
TQ,R,N,G_currentBytesInFlight
T@"NSObject<OS_os_activity>",&,N,V_transportActivity
T@"IDSService",R,N
T@"NSObject<OS_dispatch_queue>",R,N
TB,N,V_enableTransmissionWindow
TQ,N,V_maxMessagesInFlight
TQ,N,V_minMessagesInFlight
TQ,N,V_maxBytesInFlight
Td,N,V_windowResponseTimeout
setSecond:
localizedStringFromDateComponents:unitsStyle:
T@"NSSet",C,N
_shouldEncrypt
_idsIdentifier
_sendTimeout
_responseTimeout
_persistentUserInfo
_extraIDSOptions
_pbRequest
T@"NMSMessageCenter",W,N,V_messageCenter
T@"NSString",C,N,V_idsIdentifier
T@,&,N,V_pbRequest
T@"NSData",&,N,V_data
TS,N,V_messageID
TQ,N,V_priority
Td,N,V_sendTimeout
Td,N,V_responseTimeout
TB,N,V_shouldEncrypt
T@"NSDictionary",&,N,V_persistentUserInfo
T@"NSDictionary",&,N,V_extraIDSOptions
T@"NSSet",C,N,VtargetDeviceIDs
_fileURL
_pbHeaderInfo
T@"NSURL",&,N,V_fileURL
T@"NSDictionary",&,N,V_metadata
T@,&,N,V_pbHeaderInfo
setTransaction:
isSent
setRequest:
idsContext
requestClass
allowsUnrepliedRequestsForUnitTesting
setAllowsUnrepliedRequestsForUnitTesting:
setResponse:
transaction
_expectsResponse
_response
_idsContext
T@"NSObject<OS_os_transaction>",&,N,V_transaction
TB,N,V_expectsResponse
T@"NMSOutgoingResponse",&,N,V_response
T@"NSString",&,N,VsourceDeviceID
T@"IDSMessageContext",&,N,V_idsContext
requestSent
requestPersistentUserInfo
_requestIDSIdentifier
_requestSent
_requestPersistentUserInfo
_pbResponse
T@,&,N,V_pbResponse
T@"NSString",C,N,V_requestIDSIdentifier
T@"NSDate",&,N,V_requestSent
T@"NSDictionary",&,N,V_requestPersistentUserInfo
T@"NSURL",C,N,V_fileURL
T@"NSDictionary",C,N,V_metadata
_makePBResponse
_sent
T@"NMSIncomingRequest",W,N,V_request
sent
TB,GisSent,V_sent
_requestClass
_responseClass
T#,&,N,V_requestClass
T#,&,N,V_responseClass
decodeIntegerForKey:
decodeObjectOfClasses:forKey:
decodeBoolForKey:
encodeInteger:forKey:
encodeBool:forKey:
_fromRequest
_sendAcked
_processAcked
_date
_targetDeviceIDs
T@"NSDictionary",&,N,V_userInfo
T@"NSDictionary",&,N,V_idsOptions
T@"NSDate",&,N,V_date
fromRequest
TB,N,GisFromRequest,V_fromRequest
TB,N,V_sendAcked
TB,N,V_processAcked
T@"NSSet",C,N,V_targetDeviceIDs
messageSent
TS,R,N
TB,R,N,GisFromRequest
initWithFormat:arguments:
boolForKey:
_peer
T@"SYPeer",&,N,V_peer
TQ,N,V_version
initWithParent:userInfo:
setTotalUnitCount:
T@"NSProgress",R,N
initWithMetadata:
prepare:
finalizeOutput:
outputStream
T@"NSURL",R,N,V_fileURL
T@"NSOutputStream",R,N,V_stream
T@"NSDictionary",R,N,V_metadata
T@"NSProgress",R,N,V_progress
progressWithTotalUnitCount:
initWithURL:metadata:decompressedSize:
inputStream
T@"NSInputStream",R,N,V_stream
_payload
T@"NSData",&,N,V_payload
setObjectId:
setChangeData:
setSequencer:
hasChangeData
hasSequencer
_changeData
_objectId
_sequencer
T@"NSString",&,N,V_objectId
T@"NSData",&,N,V_changeData
T@"NSString",&,N,V_sequencer
setResumeCount:
setLabel:
setTarget:
initWithName:qosClass:serial:
qosClass
barrierSync:
_targetQueue
_resumeCount
_logDescriptor
_latestSuspendBacktraces
_latestResumeBacktraces
TI,R,N
expectsRollbackSupport
expectsRestartSupport
_sessionTimeout
_expectsRestartSupport
_expectsRollbackSupport
_isResetSync
TB,N,V_isResetSync
TB,N,V_expectsRollbackSupport
TB,N,V_expectsRestartSupport
Td,N,V_sessionTimeout
addObjects:
objectsCount
clearObjects
objectsAtIndex:
objectsType
_objects
T@"NSMutableArray",&,N,V_objects
resourceURL
setResourceURL:
_resourceURL
T@"NSURL",C,N,V_resourceURL
T@"NSString",C,N,V_identifier
_resumeIdsQueue
idsOptions:
_crcChecksum:
numberWithUnsignedLong:
recordOutgoingFileTransferAtURL:metadata:identifier:error:forService:
setFileTransferIdentifier:forOutgoingMessagesWithRowIDs:
_handleIncomingSessionFileAtOwnedURL:metadata:identifier:idsContext:
endFileTransferForStream:atURL:target:wasCancelled:messageRows:
_sessionDeviceCanUseSingleMessages
rowIDForPartialMessage:
initWithBytes:length:
idsOptions:forFileTransfer:
_enqueueSingleMessage:withMessageID:priority:options:userContext:callback:
_handleSessionRestart:priority:options:userContext:callback:
_shouldTreatAsSessionEnd:
_reallyHandleSessionRestart:priority:options:userContext:callback:
writeToURL:options:error:
objectForKey:inDomain:
_cancelResponses
_consumeRemainingStreamDataWithIdentifier:completion:
_readNextProtobuf:
_wrapIncomingResponse:ofType:identifier:
_wrapIncomingMessage:ofType:identifier:
_wrapResponse:toRequest:ofType:
_handleError:messageID:streamer:
_handleIncomingStreamDataWithIdentifier:completion:
_handleProtobuf:ofType:identifier:isResponse:withCompletion:
recordIncomingFileTransferAtURL:metadata:identifier:forService:
beginResponseSession
_suspendIdsQueue
endResponseSession
_assumeOwnershipOfURL:error:
storageGuid
_handleIncomingSessionFileAtURL:metadata:identifier:idsContext:
_processNMSMessageData:context:
updateOutgoingFileTransferWithIdentifier:sentSuccessfully:error:
_sessionCanceled
_sessionStartMessage
_outputFileURL
_outputStream
_inputFileURL
_inputStream
_inputPriorityBoostContext
_responseFileURL
_responseStream
_responsesCanceled
_idsService
_sessionDevice
_responseDevice
_idsQueueLock
_idsQueueIsSuspended
_idsQueueResumedLock
_messageRows
_responseMessageRows
_deferredIncomingSessions
_singleMessageUUIDs
_messageMapLock
_messageIDsToSessionIDs
_closureTransaction
_responseSessionTransaction
initWithSyncId:
initWithObjectID:sequencer:
setSyncId:
_syncId
T@"NSString",&,N,V_syncId
T@"NSString",R,N,V_sequencer
_createLog
logMessage:args:
logMessage:
_logOSMessage:args:returnAddress:
facility
setFacility:
_log
_facility
_oslog
T@"NSString",C,N,V_facility
T@"NSObject<OS_os_log>",R,N,V_oslog
setHasResumeCount:
hasResumeCount
hasLabel
hasTarget
resumeCount
label
target
_label
_target
Ti,N,V_resumeCount
T@"NSString",&,N,V_label
T@"NSString",&,N,V_target
seqno
setSeqno:
_seqno
TQ,N,V_seqno
_fireCallbackForSeqno:
_cleanupTimerForSeqno:
allValues
cancelAllTimers
_rwlock
_bySeqno
_byIdent
hasGenerationID
T@"NSString",&,N,V_generationID
_responder
T@"<SYSyncEngineResponder>",W,N
T@"NSObject<OS_os_activity>",R,N,V_transportActivity
T@"SYService",R,W,N,V_service
returnAddress
setReturnAddress:
setObject:
_returnAddress
_object
T^v,N,V_returnAddress
T@,W,N,V_object
addPointer:
isQuiescenceEnabled
setQuiescenceEnabled:
waitForQuiescenceWithTimeout:
notifyOnQuiescence:
incrementAllocationCount:
decrementAllocationCount:
waitForDeallocationCompleteWithTimeout:
notifyOnDeallocationComplete:
_quiescenceQueues
_allocationGroup
_allocations
compact
isMainThread
currentMode
initWithTimeIntervalSinceNow:
initWithPath:
_initializeFilePresentation
_openDB
_letGoForUnitTests:
_closeDB
removeFilePresenter:
initFileURLWithPath:isDirectory:
initWithFilePresenter:
readingIntentWithURL:options:
writingIntentWithURL:options:
presentedItemOperationQueue
coordinateAccessWithIntents:queue:byAccessor:
_ensureCorrectFileOwnership:
createDirectoryAtURL:withIntermediateDirectories:attributes:error:
addFilePresenter:
_openDBFile:
sharedKeySetForKeys:
numberWithUnsignedInteger:
_unpackMetadata:
_keySetForMessageLogTable
dictionaryWithSharedKeySet:
_unpackPBRequest:forMessageID:intoDictionary:
_unpackPBResponse:forMessageID:intoDictionary:
_unpackMessageData:
_getMachTimestamp
longLongValue
_onQueueAsync:
_onQueueSync:
_tableEmpty:
_openDBIfNecessary
markLastIncomingMessageComplete
confirmDeliveryOfOutgoingFileTransfer:
_insertIncoming
_addProcessingTimeIncoming
_addErrorIncoming
_markCompleteIncoming
_insertOutgoing
_updateOutgoingIdentifier
_updateOutgoing
_timestampForID
_reserveRowID
_requestAcked
_logFileActivity
_updateFileOutgoing
_lastIncomingRowID
_preemption_queue
_operations_queue
_presenterOperationQueue
setUnderlyingQueue:
presentedItemURL
accommodatePresentedItemDeletionWithCompletionHandler:
presentedItemDidMoveToURL:
relinquishPresentedItemToReader:
relinquishPresentedItemToWriter:
savePresentedItemChangesWithCompletionHandler:
presentedItemDidChange
presentedItemDidChangeUbiquityAttributes:
presentedItemDidGainVersion:
presentedItemDidLoseVersion:
presentedItemDidResolveConflictVersion:
accommodatePresentedSubitemDeletionAtURL:completionHandler:
presentedSubitemDidAppearAtURL:
presentedSubitemAtURL:didMoveToURL:
presentedSubitemDidChangeAtURL:
presentedSubitemAtURL:didGainVersion:
presentedSubitemAtURL:didLoseVersion:
presentedSubitemAtURL:didResolveConflictVersion:
primaryPresentedItemURL
observedPresentedItemUbiquityAttributes
T@"NSURL",R,C
T@"NSOperationQueue",R,&
operationQ
unpackMessageData:
_LOCKED_allServiceNames
_LOCKED_pruneMessageLogForServices:
_LOCKED_pruneFileTransferLogForServices:
_pruneOldData
_usefulDescription
initWithObjects:
setPeerGenerationIDs:
sentChangeByteCount
sentChangeCount
_paused
_pendingMessageIDs
_rejectedNewSessionFromSamePeer
_sessionStarted
_stateResponders
_setDelegateLock
_options
_userContext
_sessionMetadata
_birthDate
_sessionSignpost
_peerGenerationIDs
T@"NSObject<OS_dispatch_queue>",R,V_queue
Td,N,V_birthDate
TQ,N,V_sessionSignpost
T@"NSMutableDictionary",C,N,V_peerGenerationIDs
T@"<SYSessionDelegate>",W,N,V_delegate
T@"NSObject<OS_dispatch_queue>",&,N
T@"<SYChangeSerializer>",&,N,V_serializer
T@"NSDictionary",C,N,V_options
Tq,N,V_maxConcurrentMessages
T@"NSError",&,N,V_error
TB,R,N,V_isSending
T@"NSDictionary",&,N,V_userContext
T@"NSDictionary",C,N,V_sessionMetadata
signatureWithObjCTypes:
invokeWithTarget:
initWithSYObject:changeType:
methodSignatureForSelector:
forwardInvocation:
_syObject
errorResolution
setHasErrorResolution:
hasErrorResolution
errorResolutionAsString:
StringAsErrorResolution:
_errorResolution
Ti,N,V_errorResolution
hasIdentifier
hasDeviceClass
hasBuildVersion
setHasState:
hasState
buildVersion
_buildVersion
T@"NSString",&,N,V_deviceClass
T@"NSString",&,N,V_buildVersion
TI,N,V_state
clearClocks
clocksAtIndex:
clocksType
setClocks:
_clocks
T@"NSMutableArray",&,N,V_clocks
addAllObjects:
clearAllObjects
allObjectsAtIndex:
allObjectsType
_allObjects
T@"NSMutableArray",&,N,V_allObjects
weakObjectsPointerArray
getBytes:range:
pointerAtIndex:
@24@0:8^{_NSZone=}16
@16@0:8
B24@0:8@16
v24@0:8@16
Q16@0:8
v16@0:8
@"SYMessageHeader"
@"NSString"
@32@0:8@16@24
@"NSMutableSet"
B16@0:8
q16@0:8
v24@0:8q16
@40@0:8@16@24@?32
v20@0:8B16
@"NSMutableArray"
v24@0:8Q16
#16@0:8
@24@0:8Q16
@24@0:8@16
@"_SYSharedServiceDB"
B32@0:8@16^@24
q24@0:8@16
v32@0:8q16@24
v24@0:8^{sqlite3=}16
v32@0:8@?16@24
v32@0:8@16@?24
v24@0:8@?16
B28@0:8@?16B24
B24@0:8@?16
{os_unfair_lock_s="_os_unfair_lock_opaque"I}
^{sqlite3=}
@"NSMutableDictionary"
v32@0:8Q16@24
v32@0:8@16@24
^{__CFRunLoopSource=}
@"NSObject<OS_dispatch_queue>"
@"<NSStreamDelegate>"
@"NSError"
v28@0:8i16@20
^v16@0:8
r^v16@0:8
q32@0:8r^v16q24
q32@0:8^v16q24
{z_stream_s="next_in"*"avail_in"I"total_in"Q"next_out"*"avail_out"I"total_out"Q"msg"*"state"^{internal_state}"zalloc"^?"zfree"^?"opaque"^v"data_type"i"adler"Q"reserved"Q}
@24@0:8:16
@32@0:8:16@24
@40@0:8:16@24@32
B24@0:8#16
B24@0:8:16
Vv16@0:8
^{_NSZone=}16@0:8
B24@0:8@"Protocol"16
@"NSString"16@0:8
@"_SYStreamGuts"16@0:8
v32@0:8@16Q24
v32@0:8@"NSStream"16Q24
@?16@0:8
@?<v@?@"NSStream">16@0:8
v24@0:8@?<v@?@"NSStream">16
@"NSProgress"16@0:8
v24@0:8@"NSProgress"16
q32@0:8*16Q24
B32@0:8^*16^Q24
B32@0:8@16@24
@"NSInputStream"
@"_SYZlibStreamInternal"
@"NSProgress"
@32@0:8*16Q24
@28@0:8@16B24
i16@0:8
q32@0:8r*16Q24
@"NSOutputStream"
@"NSURL"
^{gzFile_s=I*q}
@"_SYStreamGuts"
v20@0:8i16
@"NSData"
v24@0:8@"NSCoder"16
@24@0:8@"NSCoder"16
@"NSDictionary"
@40@0:8@16@24@32
@"NSArray"
@"<SYChangeSerializer>"
@24@0:8q16
B24@0:8d16
v20@0:8I16
I16@0:8
{?="estimatedChangeCount"b1}
@20@0:8i16
i24@0:8@16
@"SYLogEngineState"
@"SYLogSessionState"
@"SYLogDeviceState"
{?="serviceType"b1}
B40@0:8@16@24^@32
v40@0:8@16@24@32
v40@0:8@16@24@?32
v48@0:8@16@24@32@?40
v28@0:8@16B24
B40@0:8@"SYService"16@"SYSession"24^@32
v40@0:8@"SYService"16@"SYSession"24@"NSError"32
v40@0:8@"SYService"16@"NSData"24@?<v@?B@"NSError">32
v48@0:8@"SYService"16@"NSInputStream"24@"NSDictionary"32@?<v@?B@"NSError">40
v40@0:8@"SYService"16@"NSError"24@"NSDictionary"32
@"SYSession"40@0:8@"SYService"16@"SYSession"24@"SYSession"32
v40@0:8@"SYService"16@"NSUUID"24@"NSUUID"32
v28@0:8@"SYService"16B24
v24@0:8@"SYService"16
@32@0:8@16q24
@40@0:8@16q24q32
@"NSData"24@0:8@"<SYChange>"16
@"<SYChange>"32@0:8@"NSData"16q24
@"NSData"24@0:8@"<SYObject>"16
@"<SYObject>"24@0:8@"NSData"16
@"NSData"32@0:8@"<SYChange>"16q24
@"<SYChange>"40@0:8@"NSData"16q24q32
v24@0:8@"<SYObject>"16
v32@0:8@"<SYObject>"16@"NSDictionary"24
v40@0:8@"<SYObject>"16@"NSDictionary"24@"NSDictionary"32
v32@0:8@"<SYObject>"16@?<v@?B@"NSError">24
B48@0:8@16@24@32^@40
B32@0:8@"<SYObject>"16^@24
B48@0:8@"<SYObject>"16@"NSDictionary"24@"NSDictionary"32^@40
@32@0:8@16B24B28
@36@0:8@16B24B28B32
@40@0:8@16B24q28B36
@40@0:8@16B24B28B32B36
@44@0:8@16B24q28B36B40
@36@0:8@16q24B32
B24@0:8^@16
d16@0:8
v24@0:8d16
v52@0:8@16@24@32B40@?44
v32@0:8@?16@?24
v40@0:8@?16@24@32
v44@0:8@?16@24@32B40
v52@0:8@?16@24@32B40@?44
v56@0:8@16@24@32@40@?48
{?="delegateWillUpdate"b1"delegateWillUpdateWithCount"b1"delegateDidUpdate"b1"delegateDidCompleteFullSync"b1"delegateAllObjectsDeleted"b1"delegateAllObjects"b1"delegateShouldPerformInitialSync"b1"delegateBeginSyncingAllObjects"b1"delegateShouldDeleteOnFailedSync"b1"delegateErrorInFullSync"b1"delegateStoreEncounteredError"b1"delegateDidPair"b1"delegateDidUnpair"b1"delegateSentMessage"b1"delegatePeerProcessedMessage"b1"delegateSentLastSyncMessage"b1}
@"<SYStoreDelegate>"
@"<SYSerialization>"
@"SYService"
@"SYStoreSessionOwner"
@"SYStoreResetSessionOwner"
@"SYAtomicFIFO"
@"SYPersistentStore"
I40@0:8@16@?24^@32
I40@0:8@"SYSession"16@?<B@?@"<SYChange>">24^@32
v40@0:8@"SYSession"16@"NSArray"24@?<v@?B@"NSError">32
v32@0:8@"SYSession"16@"NSError"24
B32@0:8@"SYSession"16^@24
v32@0:8@"SYSession"16@?<v@?B@"NSError">24
v32@0:8@"SYSession"16@"NSSet"24
@"SYStore"
@"SYSession"
I24@0:8@?16
@"<SYObject>"
@40@0:8@16@24^@32
@36@0:8@16I24@28
@32@0:8q16@24
v28@0:8@16I24
@"NSObject<OS_dispatch_source>"
@"NSMutableIndexSet"
@"_SYCountedSemaphore"
@"NSObject<OS_os_activity>"
@"_SYMessageTimerTable"
@24@0:8@?16
{?="buffersSessions"b1"inSession"b1"suspended"b1}
@"SYChangeMessage"
@52@0:8d16d24i32@36@?44
v64@0:8@16@24@32@40@48@56
v56@0:8@16@24@32@40@48
v56@0:8@16@24q32@40@48
v52@0:8@16@24@32B40@44
v60@0:8@16@24@32B40@44@52
v56@0:8@16@24@32q40q48
v48@0:8@16@24@32@40
v64@0:8@"IDSService"16@"IDSAccount"24@"NSData"32@"NSString"40@"NSString"48@"IDSMessageContext"56
v40@0:8@"IDSService"16@"NSString"24@"NSArray"32
v56@0:8@"IDSService"16@"IDSAccount"24@"NSDictionary"32@"NSString"40@"IDSMessageContext"48
v56@0:8@"IDSService"16@"IDSAccount"24@"NSData"32@"NSString"40@"IDSMessageContext"48
v56@0:8@"IDSService"16@"IDSAccount"24@"IDSProtobuf"32@"NSString"40@"IDSMessageContext"48
v56@0:8@"IDSService"16@"IDSAccount"24@"NSURL"32@"NSString"40@"IDSMessageContext"48
v64@0:8@"IDSService"16@"IDSAccount"24@"NSURL"32@"NSDictionary"40@"NSString"48@"IDSMessageContext"56
v56@0:8@"IDSService"16@"IDSAccount"24q32@"NSString"40@"IDSMessageContext"48
v32@0:8@"IDSService"16@"NSSet"24
v32@0:8@"IDSService"16@"NSArray"24
v52@0:8@"IDSService"16@"IDSAccount"24@"NSString"32B40@"NSError"44
v60@0:8@"IDSService"16@"IDSAccount"24@"NSString"32B40@"NSError"44@"IDSMessageContext"52
v56@0:8@"IDSService"16@"IDSAccount"24@"NSString"32q40q48
v48@0:8@"IDSService"16@"IDSAccount"24@"NSString"32@40
v56@0:8@"IDSService"16@"IDSAccount"24@"NSString"32@"NSString"40@48
v48@0:8@"IDSService"16@"IDSAccount"24@"IDSSession"32@"NSString"40
v56@0:8@"IDSService"16@"IDSAccount"24@"IDSSession"32@"NSString"40@"NSDictionary"48
v56@0:8@"IDSService"16@"IDSAccount"24@"IDSSession"32@"NSString"40@"NSData"48
v40@0:8@"IDSService"16@"IDSAccount"24@"IDSGroupSessionParticipantUpdate"32
v24@0:8@"IDSService"16
v40@0:8@"IDSService"16@"IDSDevice"24@?<v@?>32
v32@0:8@"NMSMessageCenter"16@"NMSIncomingRequest"24
v32@0:8@"NMSMessageCenter"16@"NMSIncomingFileTransfer"24
v32@0:8@"NMSMessageCenter"16@"NMSOutgoingRequest"24
v40@0:8@"NMSMessageCenter"16@"NSString"24@"NMSOutgoingResponse"32
v40@0:8@"NMSMessageCenter"16@"NSString"24@"NMSOutgoingFileTransfer"32
v40@0:8@"NMSMessageCenter"16@"NSString"24@"NSDictionary"32
v48@0:8@"NMSMessageCenter"16@"NSString"24@"NSError"32@"NSDictionary"40
v40@0:8@"NMSMessageCenter"16@"IDSDevice"24@?<v@?>32
v32@0:8@"NMSMessageCenter"16@"NSArray"24
B48@0:8@16@24Q32^Q40
@44@0:8@16S24@28@36
v52@0:8@16S24@28@36@44
v60@0:8@16@24@32B40@?44@52
B32@0:8@16Q24
^{__CFString=}16@0:8
v24@0:8^{__CFString=}16
@"SYRetryTimer"
@"NSObject<OS_os_transaction>"
^{__CFString=}
@"NSUUID"
@"NMSMessageCenter"
@"SYVectorClock"
B36@0:8I16@20^@28
@"SYErrorInfo"
{?="rollback"b1}
@32@0:8@16@?24
@"SYStartSyncSession"
v36@0:8@16S24@?28
B32@0:8@"SYMessageHeader"16@"NSString"24
v36@0:8@"PBCodable"16S24@?<v@?@"PBCodable"@"NSDictionary">28
v36@0:8@"PBCodable"16S24@?<v@?B@"NSError">28
v32@0:8@"NSData"16@?<v@?B@"NSError">24
v40@0:8@"NSURL"16@"NSDictionary"24@?<v@?B@"NSError">32
v32@0:8@"NSError"16@"NSString"24
v32@0:8@"NSString"16@"NSDictionary"24
v24@0:8@?<v@?>16
@"NSDictionary"16@0:8
@"PBCodable"16@0:8
@44@0:8@16q24B32@36
@48@0:8@16q24I32B36@40
v40@0:8@16@24B32B36
B24@0:8i16I20
v40@0:8:16@?24@?32
@20@0:8B16
@20@0:8I16
B56@0:8@16@24@32d40^B48
@32@0:8@16^@24
B48@0:8@16@24@32@?40
@"<SYServiceDelegate>"
@"_SYMultiSuspendableQueue"
@"SYSyncEngine"
@"_SYQueuedStartSession"
@"SYDevice"
{?="isMaster"b1"hasChanges"b1"needsReset"b1"hasPairingStore"b1"isRunning"b1"registeredForPairingNotifications"b1"remoteProtocolVersion"b3"remoteDeviceIsWatch"b1"isObservingRemoteDeviceProperties"b1"requestedEngineType"b3"assignedEngineType"b3"suspendedForQWS"b1}
B48@0:8@16@24^@32^@40
@48@0:8@16@24^@32^@40
@32@0:8@16^{__CFString=}24
B28@0:8B16@?20
B20@0:8B16
v40@0:8@16Q24d32
Q24@0:8@16
v32@0:8@16d24
^{sqlite3=}16@0:8
^{sqlite3_stmt=}
{?="didRollback"b1}
@"SYPeer"
{?="timeout"b1}
B32@0:8@16^{sqlite3=}24
@24@0:8^{sqlite3=}16
@36@0:8@16r^{__CFString=}24B32
@32@0:8@16^{sqlite3=}24
B48@0:8@16@24^{sqlite3=}32^@40
B40@0:8Q16@24^@32
Q32@0:8@16^{sqlite3=}24
B32@0:8Q16@24
B24@0:8Q16
@"NSSet"
@"SYLogErrorInfo"
{?="fullSessionTimeout"b1"perMessageTimeout"b1"canRestart"b1"canRollback"b1"canceled"b1"isReset"b1}
@"SYMessageStatusRecord"
{?="state"b4"canRestart"b1"canRollback"b1"isResetSync"b1"started"b1"cancelled"b1"completed"b1"remoteStartSent"b1"remoteStartConfirmed"b1"remoteEndSent"b1"remoteEndConfirmed"b1"localErrorOccurred"b1}
v28@0:8B16@?20
@"SYLegacyStore"
v40@0:8@"NRDevice"16@"NSString"24@32
@"NRDevice"
@"NSDate"
@36@0:8@16@24B32
@"<NSObject>"
@36@0:8@16B24@28
@"NSObject<OS_dispatch_group>"
{?="state"b4"canRestart"b1"canRollback"b1"isResetSync"b1"started"b1"cancelled"b1"completed"b1"changedMetadata"b1}
@24@0:8^@16
@40@0:8@16#24^{__CFString=}32
@32@0:8@16#24
@"NSObject<OS_dispatch_semaphore>"
@"SYBatchSyncChunk"
Q24@0:8Q16
v60@0:8@16S24q28@36@44@?52
@56@0:8@16q24@32@40^@48
v28@0:8@16S24
@36@0:8@16S24@28
@"NSMapTable"
@"NSRunLoop"
@"NSConditionLock"
v32@0:8@16@"NSString"24
@24@0:8@"NSString"16
@"SYCompressedFileOutputStream"
@32@0:8Q16@?24
{os_unfair_lock_s=I}16@0:8
v20@0:8{os_unfair_lock_s=I}16
@"NSMutableData"
v32@0:8Q16@?24
@"SYCompressedFileInputStream"
^I16@0:8
I24@0:8Q16
v32@0:8^I16Q24
{?="list"^I"count"Q"size"Q}
v28@0:8S16@?20
v36@0:8#16#24S32
@20@0:8S16
@"IDSService"
@"NMSPersistentDictionary"
@"NMSWindowData"
@"_NMSDispatchQueue"
@"<NMSMessageCenterDelegate>"
@"NSSet"16@0:8
v24@0:8@"NSSet"16
@"<NSObject>"16@0:8
S16@0:8
v20@0:8S16
@"NMSOutgoingResponse"
@"IDSMessageContext"
@"NMSIncomingRequest"
v24@0:8#16
@"NSOutputStream<SYStreamEventHandlerBlocks><SYStreamThroughputCounter>"
@40@0:8@16@24Q32
@"NSInputStream<SYStreamEventHandlerBlocks><SYStreamProgress>"
@32@0:8@16I24B28
@40@0:8@16I24B28@32
v56@0:8@16q24@32@40@?48
@36@0:8@16@24S32
v48@0:8@16S24@28B36@?40
@"_SYOutputStreamer"
@"_SYInputStreamer"
v32@0:8@16[1{__va_list_tag=II^v^v}]24
v40@0:8r*16[1{__va_list_tag=II^v^v}]24^v32
@"NSObject<OS_os_log>"
{?="resumeCount"b1}
@"<SYSyncEngineResponder>"
v24@0:8^v16
@"NSPointerArray"
v36@0:8@16S24@28
v44@0:8@16@24B32@36
v36@0:8@16B24@28
@"NSOperationQueue"
@"NSURL"16@0:8
@"NSOperationQueue"16@0:8
v24@0:8@?<v@?@?<v@?>>16
v24@0:8@?<v@?@"NSError">16
v24@0:8@"NSURL"16
v24@0:8@"NSFileVersion"16
v32@0:8@"NSURL"16@?<v@?@"NSError">24
v32@0:8@"NSURL"16@"NSURL"24
v32@0:8@"NSURL"16@"NSFileVersion"24
v28@0:8I16@?20
@"<SYSessionDelegate>"
@36@0:8@16i24@28
@40@0:8@16@24q32
{?="errorResolution"b1}
{?="state"b1}
%@ %@
header
syncID
-[SYRequestFullSync writeTo:]
SYRequestFullSync.m
self->_header != nil
nil != self->_syncID
v16@?0@"SYTransaction"8
 - %s
SQLiteErrorDomain
SyncErrorAlert
Pumbaa
v8@?0
Library
Logs
CompanionSync
com.apple.companionsync
general
session
transport
persistence
transactions
protocol
streams
signposts
messages
EqrsVvjcYDdxHBiQmGhAWw
<NSError %p>(domain: %@, code: %ld)
I/O error: READ
I/O error: SHORT_READ
I/O error: WRITE
I/O error: FSYNC
I/O error: DIR_FSYNC
I/O error: TRUNCATE
I/O error: FSTAT
I/O error: UNLOCK
I/O error: RDLOCK
I/O error: DELETE
I/O error: BLOCKED
I/O error: NOMEM
I/O error: ACCESS
I/O error: CHECKRESERVEDLOCK
I/O error: LOCK
I/O error: CLOSE
I/O error: DIR_CLOSE
I/O error: SHMOPEN
I/O error: SHMSIZE
I/O error: SHMLOCK
I/O error: SHMMAP
I/O error: SEEK
I/O error: DELETE_NOENT
I/O error: MMAP
I/O error: GETTEMPPATH
I/O error: CONVPATH
I/O error: VNODE
I/O error: AUTH
Lock error: SHAREDCACHE
Busy error: RECOVERY
Busy error: SNAPSHOT
Cant-open error: ISDIR
Cant-open error: NOTEMPDIR
Cant-open error: FULLPATH
Cant-open error: CONVPATH
Corrupt error: VTAB
Read-only error: CANTLOCK
Read-only error: RECOVERY
Read-only error: ROLLBACK
Read-only error: DBMOVED
Abort error: ROLLBACK
Constraint error: CHECK
Constraint error: COMMITHOOK
Constraint error: FOREIGNKEY
Constraint error: FUNCTION
Constraint error: NOTNULL
Constraint error: PRIMARYKEY
Constraint error: TRIGGER
Constraint error: UNIQUE
Constraint error: VTAB
Constraint error: ROWID
Notice: RECOVER_WAL
Notice: RECOVER_ROLLBACK
Warning: AUTOINDEX
Auth error: USER
0123456789abcdef
domain
code
-[SYLogErrorInfo writeTo:]
SYLogErrorInfo.m
nil != self->_domain
v20@?0B8@"NSError"12
startAnchor
endAnchor
decompressedFileSize
-[SYFileTransferInfo writeTo:]
SYFileTransferInfo.m
sessionID
index
changes
-[SYSyncBatch writeTo:]
SYSyncBatch.m
nil != self->_sessionID
self
v16@?0@"NSNotification"8
mobile
SELECT count(*) FROM _clients WHERE name=?
SELECT schema_version FROM _clients WHERE name=?
UPDATE _clients SET schema_version=?, tstamp=datetime('now') WHERE name=?
INSERT INTO _clients (schema_version, name, tstamp) VALUES (?, ?, datetime('now'))
CREATE TABLE IF NOT EXISTS _clients (name TEXT, schema_version TEXT, tstamp TEXT)
v16@?0^{sqlite3=}8
PRAGMA journal_mode=WAL;
v32@?0@"NSString"8@?<q@?^{sqlite3=}q>16^B24
_SYSharedServiceDB.schemaVersionForClient(_:)
_SYSharedServiceDB.setSchemaVersion(_:forClient:)
_SYSharedServiceDB._LOCKED_runSchemaUpdate(_:forClientNamed:)
_SYSharedServiceDB.updateSchemaForClient(_:usingBlock:)
_SYSharedServiceDB.withDBRef(_:)
_SYSharedServiceDB.runTransactionBlock(_:)
BEGIN EXCLUSIVE TRANSACTION
BEGIN TRANSACTION
[nil]
COMMIT TRANSACTION
exclusive
non-exclusive
ROLLBACK TRANSACTION
main
protection-class
SYZlibErrorDomain
1.2.11
userInfo
-[SYErrorInfo writeTo:]
SYErrorInfo.m
kSYDictionaryObjectSyncIDKey
Invalid dictionary
SYDictionaryObject properties dictionaries must contain an NSString for the kSYDictionaryObjectSyncIDKey key
SYDictProperties
-[SYChangeMessage writeTo:]
SYChangeMessage.m
SYChangeSerializer %@ needs to implement SYObjectWithData: to communicate with devices running WatchOS 1.x
estimatedChangeCount
-[SYBatchSyncStart writeTo:]
SYBatchSyncStart.m
name
engine
sessionQueueRunning
targetedDevice
enqueuedSyncType
transportOptions
peerID
peerGenerationID
serviceType
-[SYLogServiceState writeTo:]
SYLogServiceState.m
nil != self->_name
None
Delta
Reset
(unknown: %i)
Master
Slave
-[%@ init] is not supported.
DeviceClassNumber
companionsync_serial_qos
companionsync_serial
SYStore must be given a delegate object before it can be resumed.
SYStore does not have a serializer. You must set it.
q24@?0@"NSMutableArray"8^@16
%@ (objectIdentifier: %@, sequencer: %@, changeType: %d, wrappedObject: %@)
Unsupported URL
This API only works with file URLs.
Ensure that you pass a valid file or file-reference URL into this API.
-[SYStateProvider init] is unavailable. Please use +stateProviderWithName:type: instead.
companionsync
^{os_state_data_s=I(?=b32I){os_state_data_decoder_s=[64c][64c]}[64c][0C]}16@?0^{os_state_hints_s=I*II}8
@"NSData"16@?0@8
<object does not support property list serialization : %@ (%@ / %ld)>
<object is not a protobuf object>
SYErrorDomain
Operation was canceled
Waiting for Full Sync
Session ID mismatch
Snsseih packet lost
Sender died
Initial full sync must happen first
Deletions are not permitted for this client.
There is a full-sync pending; please terminate this delta sync.
No peer device is connected or available at this time.
The receiver has not completed its setup.
The receiver is already running.
This operation cannot complete until pairing is completed.
This message is part of a session, but that session doesn't appear to exist.
The receiver already has a session in progress, and does not believe it should cancel that one to take this message.
The received message's session ID does not match the ID of the currently active session
The transaction timed out.
This feature is not supported by this client.
The SYSession is not currently running. Either it has not been started or it has completed.
The SYSession is currently starting or restarting, and cannot perform the requested operation.
The SYSession is not in the correct state to handle this message.
One or more sync batches failed to be delivered or acknowledged.
There is no data available for the given session.
A reset sync was sent to a master device from a slave. This is not supported.
The received message was not recognized.
The received message could not be deserialized, and may have become corrupted.
The system could not generate a sync message; some data was unavailable.
The system tried to switch protocols on the fly, but failed.
Retry the operation immediately -- the SYService should be able to start a new session correctly. It's the internal swap-stuff-around that's failed.
The message was dropped due to a device switch.
A delegate object needs to implement an optional method to perform the requested action.
The session was terminated due to a device switch.
The session was canceled to make way for a requested reset sync.
The session was canceled due to losing in a collision; the winning session will begin momentarily.
A reset request was sent to a slave device, which is invalid.
v24@?0Q8@"NSString"16
 Change Enqueuer
SYDelegateProtocolName
SYDelegateMethodNames
B16@?0@"<SYChange>"8
v28@?0B8@"NSString"12@"NSError"20
This session does not support being restarted.
You cannot start an SYSession without a delegate.
v32@?0@8Q16^B24
type
suspended
inSession
buffersSessions
Messaging
FileTransfer
DirectConnection
InitialSync
UserInfo
IDSOptions
BatchIndex
SyncID
high
urgent
companionsync_serial.%p
companionsync_serial_qos.%p
Caches
SimulatorPairingStore
EnableTransmitWindow
MaxMessagesInFlight
MinMessagesInFlight
MaxBytesInFlight
com.apple.companionsync.prefsupdated
Message out of order in 
File against Pepper CompanionSync|1.0, attach all logs
v16@?0@"NMSIncomingRequest"8
v16@?0@"NMSIncomingResponse"8
Unacked batch while syncing 
File against Pepper CompanionSync|1.0
v16@?0@"NSError"8
apple-internal-install
/usr/local/bin/idstool
dump
v32@?0@"NSData"8Q16^B24
Change-list bubble detected
No delegate
failure
success
SendMessage-legacy
Delete Denied
A client attempted to send a delete message while deletes were denied.
DB changelog failure. 
Sync sent to master
Full sync sent to master device
Only the slave device should receive a full sync (from the master)
Sync request sent to slave
Full sync requested from slave device
Only the master device can send a full sync (to the slave)
Missing delegate method
The delegate on the master (alwaysWins) side must implement syncStoreAllObjects
-Master-
v20@?0@"NSError"8i16
v20@?0@"NSError"8B16
Full batched sync sent to master device
com.apple.private.alloy.addressbooksync
com.apple.private.alloy.appregistrysync
com.apple.private.alloy.eventkitsync
com.apple.private.alloy.location.auth
LocA
com.apple.private.alloy.location.wifitilesync
LocW
com.apple.private.alloy.maps.sync
Maps
com.apple.private.alloy.voicemailsync
com.apple.private.alloy.health.sync
Health
SY:degenerate
value
-[SYLogTransportOption writeTo:]
SYLogTransportOption.m
nil != self->_key
nil != self->_value
accepted
error
-[SYResetResponse writeTo:]
SYResetResponse.m
rollback
-[SYEndSyncSession writeTo:]
SYEndSyncSession.m
SYServiceOptionCompressionLevel
SYServiceOptionEnableCRC
SYServiceOptionDiskBufferProtectionClass
SYServiceOptionMessageTimeout
SYServiceOptionPriorityOverride
'W'yyyy-MM-dd'T'HH:mm:ss.SSS
CompanionSync.SYService.%@.%p
CompanionSync.SYService.%@.incoming-io
CompanionSync.SYService.%@.delegate
as Master
as Slave
CompanionSync.SYService.%@.SessionStartQueue
Exception while generating state: %@
SYLogServiceState
Service '%s'
Watch
CompanionSync.SYService.%s.delegate
SYService has already been resumed.
SYService cannot be resumed until a delegate has been set.
0BADF00D-DEAD-0000-9999-1234567890AB
delta
reset
No pairing store path is available, which usually indicates we are not paired.
Failed to create persistent store
SYFileTransfer-XXXXX
(no error)
addressbooksync
appregistrysync
eventkitsync
location.auth
location.wifitilesync
maps.sync
tccd.sync
voicemailsync
sqlitedb
com.apple.private.NanoMessagingService
NMSWindow<%p> sync queue
meta
tstamp
SELECT COUNT(*) FROM meta
meta.db
CREATE TABLE IF NOT EXISTS meta (version INTEGER PRIMARY KEY AUTOINCREMENT, tstamp TEXT)
CREATE TABLE IF NOT EXISTS in_window (expires REAL, msg_id TEXT, num_bytes INTEGER)
CREATE TABLE IF NOT EXISTS msg_queue (pk INTEGER PRIMARY KEY AUTOINCREMENT, uuid TEXT, tstamp REAL)
CREATE UNIQUE INDEX sent_by_uuid ON in_window (msg_id ASC)
CREATE INDEX expiry ON in_window (expires ASC, msg_id)
INSERT INTO meta (tstamp) VALUES (datetime('now'))
q24@?0^{sqlite3=}8q16
INSERT INTO in_window (expires, msg_id, num_bytes) VALUES (?, ?, ?)
SELECT num_bytes FROM in_window WHERE msg_id=?
DELETE FROM in_window WHERE msg_id=?
SELECT expires FROM in_window ORDER BY expires LIMIT 1
SELECT msg_id FROM in_window WHERE expires < ?
SELECT SUM(num_bytes) FROM in_window
SELECT COUNT(*) FROM in_window
INSERT INTO msg_queue (uuid, tstamp) VALUES (?, ?)
SELECT uuid FROM msg_queue ORDER BY pk ASC LIMIT 1
DELETE FROM msg_queue WHERE pk=(SELECT min(pk) FROM msg_queue)
SELECT COUNT(*) FROM msg_queue
B16@?0^{sqlite3=}8
DELETE FROM in_window
DELETE FROM msg_queue
', '
SELECT SUM(num_bytes) FROM in_window WHERE msg_id IN ('%@')
DELETE FROM in_window WHERE msg_id IN ('%@')
execute() Error: %s 
<filler>
Sync message %@; complete
Sync message %@; device ACK: %d, app ACK: %d, responded: %d
didRollback
-[SYEndSyncSessionResponse writeTo:]
SYEndSyncSessionResponse.m
cancelSessionID
-[SYResetRequest writeTo:]
SYResetRequest.m
timestamp
sender
state
version
sequenceNumber
timeout
-[SYMessageHeader writeTo:]
SYMessageHeader.m
self->_sender != nil
self->_state != nil
SYPersistentStoreErrorDomain
SYPersistentStore.SynqQ
SELECT COUNT(*) FROM %@
syncstate
INSERT INTO syncstate (remoteversion, tstamp, peer_id) VALUES (0, datetime('now'), '%s')
SELECT peer_id FROM syncstate LIMIT 1
UPDATE syncstate SET peer_id='%s'
CREATE TABLE IF NOT EXISTS meta (version INTEGER PRIMARY KEY AUTOINCREMENT, tstamp REAL)
CREATE TABLE IF NOT EXISTS syncstate (remoteversion INTEGER, tstamp INTEGER, fullsync_sent INTEGER DEFAULT 0, in_full_sync INTEGER DEFAULT 0, ttl INTEGER DEFAULT 1209600)
CREATE TABLE IF NOT EXISTS changes (version INTEGER PRIMARY KEY AUTOINCREMENT, tstamp INTEGER, type INTEGER, syncid TEXT, object BLOB)
ALTER TABLE syncstate ADD COLUMN vector_clock TEXT DEFAULT ''
ALTER TABLE syncstate ADD COLUMN peer_id TEXT DEFAULT ''
ALTER TABLE syncstate ADD COLUMN msg_seqno INTEGER DEFAULT 0
CREATE TABLE IF NOT EXISTS peer_info (peerID TEXT, last_seqno INTEGER, tstamp REAL)
CREATE TABLE IF NOT EXISTS full_sync_info (syncID TEXT, active INTEGER DEFAULT 1, time_started REAL, time_ended REAL, duration REAL)
ALTER TABLE syncstate ADD COLUMN waiting_for_sync_id TEXT
ALTER TABLE syncstate ADD COLUMN sync_user_info BLOB
ALTER TABLE syncstate ADD COLUMN sync_ids_options BLOB
CREATE INDEX sync_by_uuid ON full_sync_info (syncID ASC, active)
CREATE INDEX sync_by_start_time ON full_sync_info (time_started ASC, time_ended, syncID)
CREATE INDEX sync_by_duration ON full_sync_info (duration ASC, syncID, time_started, time_ended)
CREATE INDEX changes_by_time ON changes (tstamp ASC, version)
CREATE INDEX changes_by_syncid ON changes (syncid ASC, tstamp ASC, version)
CREATE TRIGGER remove_prior_changes BEFORE INSERT ON changes BEGIN DELETE FROM changes WHERE syncid = new.syncid; END
CREATE TRIGGER remove_old_syncs BEFORE INSERT ON full_sync_info BEGIN DELETE FROM full_sync_info WHERE syncID NOT IN (SELECT syncID FROM full_sync_info ORDER BY syncID DESC LIMIT 1) AND active=0; END
CREATE TRIGGER compute_duration AFTER UPDATE OF time_ended ON full_sync_info BEGIN UPDATE full_sync_info SET duration = new.time_ended - old.time_started WHERE syncID = old.syncID; END
ALTER TABLE full_sync_info ADD COLUMN send_complete INTEGER DEFAULT 0
ALTER TABLE full_sync_info ADD COLUMN failed INTEGER DEFAULT 0
ALTER TABLE full_sync_info ADD COLUMN error BLOB
ALTER TABLE peer_info ADD COLUMN seqno_set TEXT DEFAULT NIL
ALTER TABLE syncstate ADD COLUMN overflow_timeout REAL DEFAULT NIL
ALTER TABLE syncstate ADD COLUMN last_message_time REAL DEFAULT NIL
ALTER TABLE syncstate ADD COLUMN in_delta_sync INTEGER DEFAULT 0
CREATE TABLE IF NOT EXISTS syncstate (remoteversion INTEGER, tstamp INTEGER, fullsync_sent INTEGER DEFAULT 0, in_full_sync INTEGER DEFAULT 0, ttl INTEGER DEFAULT 86400, vector_clock TEXT DEFAULT '', peer_id TEXT DEFAULT '', msg_seqno INTEGER DEFAULT 0, waiting_for_sync_id TEXT, sync_user_info BLOB, sync_ids_options BLOB, overflow_timeout REAL DEFAULT NIL, last_message_time REAL DEFAULT NIL, in_delta_sync INTEGER DEFAULT 0)
CREATE TABLE IF NOT EXISTS peer_info (peerID TEXT, last_seqno INTEGER, tstamp REAL, seqno_set TEXT DEFAULT NIL)
CREATE TABLE IF NOT EXISTS full_sync_info (syncID TEXT, active INTEGER DEFAULT 1, time_started REAL, time_ended REAL, duration REAL, send_complete INTEGER DEFAULT 0, failed INTEGER DEFAULT 0, error BLOB)
ALTER TABLE syncstate ADD COLUMN ignored_message_id_set TEXT DEFAULT ''
UPDATE changes SET tstamp=strftime('%%s', tstamp)
DELETE FROM changes
SYPersistentStore.withDB(_:)
SYPersistentStore._inTransaction(exclusive:do:)
SELECT DISTINCT peerID FROM peer_info
DELETE FROM peer_info WHERE peerID=? AND last_seqno < (SELECT max(last_seqno) FROM peer_info WHERE peerID=?)
DELETE FROM peer_info
v32@?0{_NSRange=QQ}8^B24
SELECT seqno_set FROM peer_info WHERE peerID=?
UPDATE peer_info SET seqno_set=? WHERE peerID=?
SELECT MAX(ttl) FROM syncstate
UPDATE syncstate SET msg_seqno=%llu
UPDATE syncstate SET msg_seqno=(msg_seqno+1)
SELECT msg_seqno FROM syncstate LIMIT 1
Cannot store sequence number == 0; that value is invalid
UPDATE peer_info SET last_seqno=?, tstamp=? WHERE peerID=?
INSERT INTO peer_info (peerID, last_seqno, tstamp) VALUES (?, ?, ?)
SELECT last_seqno FROM peer_info WHERE peerID=?
DELETE FROM peer_info WHERE peerID='%s'
SELECT in_delta_sync FROM syncstate LIMIT 1
UPDATE syncstate SET in_delta_sync=%d
SELECT ignored_message_id_set FROM syncstate LIMIT 1
UPDATE syncstate SET ignored_message_id_set=%s
UPDATE syncstate SET ttl=%d
SELECT COUNT(*) FROM changes
SELECT vector_clock FROM syncstate LIMIT 1
UPDATE syncstate SET vector_clock=?
SELECT overflow_timeout FROM syncstate LIMIT 1
UPDATE syncstate SET overflow_timeout=?
SELECT last_message_time FROM syncstate LIMIT 1
UPDATE syncstate SET last_message_time=?
SELECT time_started FROM full_sync_info WHERE time_ended IS NULL ORDER BY time_started DESC LIMIT 1
com.apple.CompanionSync.full-sync
INSERT INTO full_sync_info (syncID, active, time_started) VALUES (?, ?, (julianday('now') - 2440587.5)*86400.0)
UPDATE full_sync_info SET active=0, failed=?, error=?, time_ended=(julianday('now')-2440587.5)*86400.0 WHERE syncID=?
UPDATE full_sync_info SET syncID=? WHERE active=1
SELECT COUNT(*) FROM full_sync_info WHERE active=0 AND time_ended IS NULL AND syncID=?
UPDATE full_sync_info SET send_complete=1 WHERE syncID=?
SELECT COUNT(*) FROM full_sync_info WHERE time_ended IS NULL AND send_complete=1 LIMIT 1
SELECT error FROM full_sync_info WHERE time_ended IS NOT NULL ORDER BY time_started DESC LIMIT 1
SELECT syncID FROM full_sync_info WHERE time_ended IS NULL ORDER BY time_started DESC LIMIT 1
SELECT COUNT(*) FROM full_sync_info WHERE time_ended IS NULL
SELECT syncID FROM full_sync_info WHERE time_ended IS NOT NULL ORDER BY time_ended DESC LIMIT 1
SELECT waiting_for_sync_id FROM syncstate LIMIT 1
UPDATE syncstate SET waiting_for_sync_id=?
SELECT sync_user_info FROM syncstate LIMIT 1
UPDATE syncstate SET sync_user_info=?
SELECT sync_ids_options FROM syncstate LIMIT 1
UPDATE syncstate SET sync_ids_options=?
SELECT MAX(fullsync_sent) FROM syncstate
UPDATE syncstate SET fullsync_sent=?
SELECT duration FROM full_sync_info ORDER BY time_ended DESC LIMIT 1
SELECT seq FROM sqlite_sequence WHERE name='changes'
SELECT MAX(remoteversion) FROM syncstate
INSERT INTO changes (tstamp, type, syncid) VALUES (?, ?, ?)
UPDATE syncstate SET tstamp=(julianday('now')-2440587.5)*86400.0, remoteversion=?
SELECT MIN(version) FROM changes
SELECT DISTINCT syncid FROM changes WHERE version > ?
message
SELECT COUNT(*) FROM peer_info WHERE last_seqno IS NOT NULL AND last_seqno > 0
UPDATE syncstate SET fullsync_sent=1
identifier
isSending
isReset
perMessageTimeout
fullSessionTimeout
maxConcurrentMessages
canRestart
canRollback
canceled
peer
reason
-[SYLogSessionState writeTo:]
SYLogSessionState.m
nil != self->_identifier
NotStarted
Continue
SendComplete
Cancel
Restart
Error
WaitingForStartConfirmation
WaitingForCompletionConfirmation
WaitingForBatchEnqueue
SyncComplete
StartRequest
EndRequest
Batches
SYSessionMessageStatus
Start session message enqueued, but session is in unexpected state %d
xctest
-[SYBatchSyncEnd writeTo:]
SYBatchSyncEnd.m
clocks
v32@?0@"NSString"8@"NSNumber"16^B24
Nil peer
Nil peer ID
v32@?0@"SYClock"8Q16^B24
SYTransaction
SYDeviceStateChangedNotification
SYDevicePairingIDChangedNotification
SYDeviceOSInfoChangedNotification
SYDeviceTargetabilityChangedNotification
SYDeviceRemovedNotification
SYDeviceTargetedNewDeviceNotification
_SYDeviceMonitor RWLock
B24@?0@"SYDevice"8^B16
device:
14S190
14A194
%@: %@
%@: %@ (%@). Paired=%s, Active=%s. Class='%@', Version='%@', Build='%@'.
(nil)
-[SYSyncSessionRestartResponse writeTo:]
SYSyncSessionRestartResponse.m
-[SYSyncBatchResponse writeTo:]
SYSyncBatchResponse.m
v32@?0@8@16^B24
XXXXXXXX
supportsRollback
supportsRestart
metadata
-[SYStartSyncSessionResponse writeTo:]
SYStartSyncSessionResponse.m
chunkIndex
-[SYBatchChunkAck writeTo:]
SYBatchChunkAck.m
You must use the -initWithPath:objectClass: initializer for NMSPersistentDictionary
Could not open DB
CREATE TABLE IF NOT EXISTS meta (v INTEGER PRIMARY KEY AUTOINCREMENT, t TEXT)
CREATE TABLE kvs (k0 TEXT, d0 REAL, v0 BLOB)
CREATE UNIQUE INDEX k0 ON kvs (k0)
CREATE INDEX d0 ON kvs (d0)
INSERT INTO meta (t) VALUES (datetime('now'))
ALTER TABLE kvs ADD COLUMN d1 REAL DEFAULT 0
CREATE INDEX d1 ON kvs (d1)
INSERT OR REPLACE INTO kvs (k0, d0, v0, d1) VALUES (?, ?, ?, ?)
UPDATE kvs SET v0 = ? WHERE k0 = ?
SELECT v0 FROM kvs WHERE k0 = ?
DELETE FROM kvs WHERE k0 = ?
DELETE FROM kvs
SELECT k0, d0, v0 FROM kvs ORDER BY d0 ASC
SELECT k0, d0, v0, d1 FROM kvs ORDER BY d1 ASC
%@: %@::%qu
SYServiceOption
SYEngine
%@ SYMessengerSyncEngine IDS Queue
not 
v16@?0@"NSStream"8
v24@?0@"PBCodable"8@"NSDictionary"16
v24@?0Q8^B16
entered
left
requestSyncID
inProgressSyncID
-[SYFullSyncRequestAck writeTo:]
SYFullSyncRequestAck.m
nil != self->_requestSyncID
_SYWaitingForStream
AssociatedSessionIdentifier
_SYOutputStreamer: %@
v24@?0@"NSStream"8Q16
idx (%tu) is out of range (%tu)
inReplyTo
supportedVersions
-[SYRejectedVersion writeTo:]
SYRejectedVersion.m
nil != self->_inReplyTo
UserMetadata
HeaderData
NMSErrorDomain
NMSInvalidStateException
NMSContext
_NMSDispatchQueue
<%@:%p identifier:%@>
Cannot use %@ after using -resume
com.apple.companionsync.nano-messaging-center.default-delegate-queue
v48@?0@"NSString"8@16@"NSDate"24@"NSDate"32^B40
v40@?0@"NSString"8@16@"NSDate"24^B32
com.apple.notifyd.matching
v16@?0@"NSObject<OS_xpc_object>"8
-[NMSMessageCenter _decodeIncomingRequestData:context:]
NanoMessagingService.m
!idsContext.expectsPeerResponse || idsContext.outgoingResponseIdentifier
Cannot use %@ until after -resume is sent
IncomingData
-[NMSMessageCenter service:account:incomingData:fromID:context:]
context.messageID == header.messageID
context.fromRequest == YES
IncomingFileTransfer
%@ {%@ priority, messageID=%hu, idsID=%@, data=%lu bytes}
  Priority: %@
  MessageID: %@
  Protobuf class: %@
none
  IDS ID: %@
  Send timeout: %@
  Response timeout: %@
  Should encrypt: %@
  Data: %@
  User info: %@
%@ {%@ priority, idsID=%@, URL=%@, metadata=%@
  URL: %@
  Metadata: %@
  User Info: %@
NMSIncomingRequest
  Expects response: %@
  Response message: %@
%@ {messageID=%hu, protobuf class=%@, idsID=%@, data=%lu bytes}
  Request IDS ID: %@
  Request sent: %@
  Request user info: %@
NMSOutgoingResponse
%@ {%@ priority, messageID=%hu, idsID=%@, requestID=%@, data=%lu bytes}
  Request messageID: %@
%@: {Request=%@, Response=%@}
(Nil)
-[NMSMessagePersistentContext encodeWithCoder:]
_userInfo == nil || [_userInfo isKindOfClass:[NSDictionary class]]
_idsOptions == nil || [_idsOptions isKindOfClass:[NSDictionary class]]
<%@:%p id:%hu ids:%@ date:%@ fromRequest:%d sendAcked:%d processAcked:%d idsOptions:%@ userInfo:%@>
NMSQ.%@
NMSQ.%@.Incoming
nms.%@.db
%@-window
com.apple.private.NanoMessagingService.WindowQueue
NMSLogTraffic
High
Urgent
<unknown priority: %lu>
-[SYClock writeTo:]
SYClock.m
self->_peer != nil
yyyy-MM-dd'T'HH:mm:ss.SSS
payload
-[SYOutOfBandData writeTo:]
SYOutOfBandData.m
nil != self->_payload
-[SYSyncSessionRestartRequest writeTo:]
SYSyncSessionRestartRequest.m
objectId
changeData
sequencer
-[SYChange writeTo:]
SYChange.m
nil != self->_objectId
ObjectAdded
ObjectUpdated
ObjectDeleted
%s.%p
SYLogMultiSuspendableQueueState
Multi-Suspendable Queue State
isResetSync
expectsRollbackSupport
expectsRestartSupport
sessionTimeout
-[SYStartSyncSession writeTo:]
SYStartSyncSession.m
objects
-[SYBatchSyncChunk writeTo:]
SYBatchSyncChunk.m
ContainsSession
PeerID
EnqueuedAt
SessionID
FileHeader
%@ SYFileTransferSyncEngine IDS Queue
SYFileTransferEngine Response Session
File-transfer closure
14S184
14A187
00000000-0000-0000-0000-000000000000
FileTransferOverrideTimeout
v24@?0@"NSData"8@"NSError"16
v32@?0@"PBCodable"8S16B20@"NSError"24
v12@?0B8
transport-errors
resumeCount
label
target
Do not call -[%@ %@]
_SYTimerMessageTable
v32@?0@"NSNumber"8@"NSObject<OS_dispatch_source>"16^B24
generationID
-[SYLogPeerIDPair writeTo:]
SYLogPeerIDPair.m
nil != self->_peerID
SYEngineUseMessaging
Sync Engine
ARGH, break here plz
B24@?0@"_SYQuiescenceAllocation"8^B16
Duration
Service
Type
Identifier
ChangeCount
VectorClock
IsRequest
RequestIdentifier
ChunkIndex
WantsResponse
GotResponse
WantsDeliveryAck
ProtocolVersion
MessageSequenceNumber
IsResetSyncSession
SessionMetadata
WantsRollback
RequestAccepted
statistics.db
CSStatisticsQueueCore
CSStatisticsQueue
SYUnitTestTearDown
-shm
-wal
SYStatisticStore Async Operation
SYStatisticStore Sync Operation
CREATE TABLE IF NOT EXISTS meta (version INTEGER PRIMARY KEY AUTOINCREMENT, timestamp REAL)
CREATE TABLE IF NOT EXISTS message_log (pk INTEGER PRIMARY KEY AUTOINCREMENT, service TEXT, incoming INTEGER, timestamp REAL, delivery_time REAL, type TEXT, identifier TEXT, change_count INTEGER DEFAULT 0, msg_version INTEGER, change_version INTEGER, error TEXT, complete INTEGER DEFAULT 0)
CREATE INDEX IF NOT EXISTS msg_by_id ON message_log (identifier ASC, timestamp DESC)
INSERT INTO meta (timestamp) VALUES (datetime('now'))
ALTER TABLE message_log ADD COLUMN is_request INTEGER DEFAULT 1
ALTER TABLE message_log ADD COLUMN sync_id TEXT DEFAULT ''
ALTER TABLE message_log ADD COLUMN request_id TEXT DEFAULT ''
ALTER TABLE message_log ADD COLUMN vector_clock TEXT DEFAULT ''
ALTER TABLE message_log ADD COLUMN wants_response INTEGER DEFAULT 0
ALTER TABLE message_log ADD COLUMN got_response INTEGER DEFAULT 0
CREATE INDEX msg_by_type ON message_log (type ASC, timestamp ASC)
CREATE INDEX response_by_request ON message_log (request_id ASC, timestamp DESC, identifier ASC, type ASC)
ALTER TABLE message_log ADD COLUMN wants_delivery_ack INTEGER DEFAULT 0
ALTER TABLE message_log ADD COLUMN delivery_acked INTEGER DEFAULT 0
ALTER TABLE message_log ADD COLUMN proto_version INTEGER DEFAULT 0
ALTER TABLE message_log ADD COLUMN msg_seqno INTEGER DEFAULT 0
ALTER TABLE message_log ADD COLUMN mach_time REAL DEFAULT 0
DROP INDEX msg_by_id
CREATE INDEX msg_by_id ON message_log (identifier ASC, timestamp ASC)
ALTER TABLE message_log ADD COLUMN chunk_index INTEGER
CREATE INDEX msg_by_service ON message_log (service, timestamp ASC)
CREATE VIEW receipt_sequence_info AS SELECT msg_seqno, datetime(timestamp, 'localtime'), mach_time, type, identifier, service FROM message_log WHERE incoming=1 ORDER BY service, timestamp ASC
CREATE VIEW sent_sequence_info AS SELECT msg_seqno, datetime(timestamp, 'localtime'), mach_time, type, identifier, service FROM message_log WHERE incoming=0 ORDER BY service, timestamp ASC
ALTER TABLE message_log ADD COLUMN processing_time_ms INTEGER
CREATE TABLE IF NOT EXISTS file_transfer_log (pk INTEGER PRIMARY KEY AUTOINCREMENT, file_url TEXT, service TEXT, incoming INTEGER, timestamp REAL, delivery_time REAL, identifier TEXT, error TEXT, complete INTEGER DEFAULT 0, delivery_acked INTEGER DEFAULT 0, peer_id TEXT, mach_time REAL DEFAULT 0)
CREATE INDEX file_transfer_by_service ON file_transfer_log (service, identifier, timestamp ASC)
ALTER TABLE message_log ADD COLUMN file_transfer_id TEXT DEFAULT NIL
CREATE INDEX file_transfer_messages ON message_log (service, file_transfer_id, timestamp ASC)
ALTER TABLE message_log ADD COLUMN is_reset_session INTEGER
ALTER TABLE message_log ADD COLUMN metadata TEXT
ALTER TABLE message_log ADD COLUMN rollback INTEGER
ALTER TABLE message_log ADD COLUMN accepted INTEGER
CREATE INDEX msg_by_id ON message_log (identifier ASC, timestamp DESC)
DROP INDEX response_by_request
file_transfer_log
mach_time
ALTER TABLE file_transfer_log ADD COLUMN mach_time REAL DEFAULT 0
INSERT INTO message_log (incoming, timestamp, delivery_time, service, type, identifier, change_count, vector_clock, is_request, sync_id, request_id, error, wants_response, proto_version, msg_seqno, mach_time, chunk_index, is_reset_session, metadata, rollback, accepted) VALUES (1, datetime('now'), ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
_insertIncoming
UPDATE message_log SET processing_time_ms=? WHERE pk=?
_addProcessingTimeIncoming
UPDATE message_log SET error=? WHERE pk=?
_addErrorIncoming
UPDATE message_log SET complete=1 WHERE pk=?
_markCompleteIncoming
INSERT INTO message_log (service, mach_time) VALUES ('reserving row id', ?)
_reserveRowID
UPDATE message_log SET incoming=0, timestamp=datetime('now'), service=?, type=?, change_count=?, vector_clock=?, is_request=?, sync_id=?, request_id=?, wants_response=?, wants_delivery_ack=?, proto_version=?, msg_seqno=?, chunk_index=?, is_reset_session=?, metadata=?, rollback=?, accepted=? WHERE pk=?
_insertOutgoing
UPDATE message_log SET identifier=?, mach_time=? WHERE pk=?
_updateOutgoingIdentifier
UPDATE message_log SET delivery_time=?, complete=?, got_response=?, error=? WHERE identifier=?
_updateOutgoing
SELECT timestamp FROM message_log WHERE identifier=? ORDER BY timestamp DESC LIMIT 1
_timestampForID
UPDATE message_log SET got_response=? WHERE identifier=?
_responseReceived
UPDATE message_log SET delivery_acked=1 WHERE identifier=?
_requestAcked
INSERT INTO file_transfer_log (incoming, timestamp, file_url, service, identifier, peer_id, mach_time, delivery_time) VALUES (?, datetime('now'), ?, ?, ?, ?, ?, ?)
_logFileActivity
UPDATE file_transfer_log SET delivery_time=?, complete=?, error=? WHERE identifier=?
_updateFileOutgoing
 InProgressSyncID=%@
CompanionSync.StatisticStore.ReservedRowID
<unknown>
SELECT timestamp FROM file_transfer_log WHERE identifier=? ORDER BY timestamp DESC LIMIT 1
UPDATE message_log SET identifier='FileTransfer:%@', file_transfer_id='%@', mach_time='%f' WHERE pk IN (
'%lu'
SELECT DISTINCT service FROM message_log
DELETE FROM message_log WHERE service=? ORDER BY pk DESC LIMIT -1 OFFSET 250
ROLLBACK
DELETE FROM file_transfer_log WHERE service=? ORDER BY pk DESC LIMIT -1 OFFSET 250
COMMIT
message-statistics
%@: domain=%@, code=%ld, userInfo=%@
Initial Sync
Reunion Sync
Class %@ does not implement message %@. You are using the wrong kind of session.
SYSession is an abstract class. Please instantiate the correct subclass for your use case.
%s Session Queue
SYSession
SYSession cannot encode change objects of type '%@'
SYSession does not have a serializer. You must set a serializer before starting a session.
SYSession cannot encode change objects of type '%@' for protocol version %ld
-[SYSession _onSessionStateChangedTo:do:]
<%@> %@
v32@?0@"NSString"8@"NSString"16^B24
%s Session Default Delegate Queue
SYObject %@ does not provide the required syncId!
SYChange object %@ does not provide the required objectIdentifier!
SYChangeSerializer does not implement -encodeSYChangeForBackwardCompatibility:protocolVersion: or -dataWithSYObject:
errorResolution
-[SYSyncEndResponse writeTo:]
SYSyncEndResponse.m
Ignore
Retry
deviceClass
buildVersion
-[SYPeer writeTo:]
SYPeer.m
allObjects
-[SYSyncAllObjects writeTo:]
SYSyncAllObjects.m
QueueDumper
Tracked Queue State
"9Xw
%{public}s
Unable to create an _SYLazyChangeArray object for %{public}@
Delegate: -syncSession:applyChanges:completion:
Delegate callout complete: -syncSession:applyChanges:completion:, v1 allObjects, success = %s
Client failed to process incoming SyncAllObjects, returning error: %{public}@
Error occurred while waiting for SyncAllObjects ingestion, will set error state: %{public}@
Failed to set do-not-backup property on persistent data folder: %{public}@
Error checking inclusion of client %{public}@: %{companionsync:sqlite3err}d
Error fetching schema version for %{public}@: %{companionsync:sqlite3err}d
Error setting schema version for %{public}@: %{companionsync:sqlite3err}d
Failed to open SQLite DB: %{companionsync:sqlite3err}d
Failed to open shared DB for service %{public}@: %@
Failure to begin transaction: %{companionsync:sqlite3err}d (%{public}s)
Failed to commit %s transaction: %{companionsync:sqlite3err}d (%{public}s)
Failed to rollback %s transaction: %{companionsync:sqlite3err}d (%{public}s)
Unknown stream %{public}@ is sending me (%{public}@) delegate messages...
** COMPANIONSYNC CLIENT BUG ** Deserialization attempt gave us a nil
Error destroying Mach semaphore: %d (%{public}s)
Failed to create semaphore! %d (%{public}s)
Failed to wait on semaphore, but it didn't time out or abort: %d (%{public}s)
Error draining semaphore: %d (%{public}s)
CompanionSync AddObject
CompanionSync UpdateObject
CompanionSync DeleteObject
CompanionSync Transaction
SYStore skipping full sync, already in progress.
Failed to resume SYService after switching from device %{public}@ to %{public}@: %{public}@
Beginning SYStore delta sync
Ended SYStore delta sync
SYStore shim: forwarding %lu changes to SYStoreDelegate
Sync Batch Input
SYSession (v1 Outgoing Batched)
%{public}@: Setting state to %{companionsync:SYSessionState}d
%{public}@: Setting state (quietly) to %{companionsync:SYSessionState}d
Change Concurrency Wait
Delegate: -syncSession:enqueueChanges:error:
Sending end-session message
Attaching error to end-session: %@
Delegate: -syncSession:didEndWithError:
Send timed out for message with sequence number %llu, identifier %{public}@
%{public}@ entered error state. Error = %@
%{public}@ session timeout expired
Starting %{public}@ with identifier %{public}@
SYSession (Outgoing)
Received an error SYBatchChunkAck: %@
Received an error SYSyncEndResponse: %@
Some sync batches were not acked. We sent {0-%u}, acked %{public}@
SYSession (Outgoing v1 Delta)
SYSession entered error state. Error = %@
SYSession (v1 Delta Sync, Incoming)
Delegate callout complete: -syncSession:applyChanges:completion:, v1 transaction, success = %s
Client failed to process incoming SYChangeMessage, returning error: %{public}@
An error occurred while client was processing: %{public}@
Initializing new second-generation SYStore %p
No device available from NanoRegistry at present-- SYStore will be inoperative until pairing completes.
Failed to create simulator pairing store folder: %@
CompanionSync Unpairing
NR Device Unpaired
Ignoring newly-paired device '%@' when already paired with device '%@'. Please file an enhancement request against Pepper CompanionSync for multiple-paired-device support if you see this message.
CompanionSync Pairing
NR Device Paired
Got pairing store path: %{public}@
Possible duplicate message received with seqno %qu and ID %{public}@. Comparing timestamps.
This message timestamp = %.04g (%{public}@) vs. last message timestamp = %.04g (%{public}@)
Sequence numbers were reset; clearing our received seqno set.
Message repeated (bubble): seqno = %qu, messageID: %{public}@
Received seqno=%llu, last seen=%llu
Out of order delivery or dropped message detected on receipt of message with ID %{public}@. Message sequence number = %llu, last received sequence number = %llu
Received message from unknown protocol version '%u'
Failed to store latest incoming sequence number: %{public}@
No pairingID, cannot initialize message center instance.
Got nil cacheDirPath, cannot initialize message center
Creating NanoMessageCenter
Peer responded to message %{public}@ with a version rejection. Peer is using version %u, and supports versions %{public}@
SyncRequest response: accepted=%s, inProgressSyncID=%{public}@, error=%@
In-progress sync has finished, now requesting another.
Waiting for in-progress sync %{public}@ to end before re-sending sync request.
Wait for in-progress sync %{public}@ timed out, re-sending sync request now.
Dropped messages detected upon receipt of message with ID %{public}@: missing %u ACKs of full-sync batches, specifically: %{public}@
dataIdentifier: %{public}@ didSendWithSuccess: NO error: %@
Failed to send full-sync initiation message; dropping it on the floor and leaving sync mode. Next change will trigger a full sync. Error = %{public}@
No paired device ID, cannot initialize our database.
No pairing store path for device ID %{public}@
Using device cache directory: %{public}@
CompanionSync DB Setup
SYStore has a NIL PERSISTENT STORE !!
Setting up change-list database
My vector clock is: %{public}@, my PeerID is %{public}@.
Incoming vector clock: %{public}@
My vector clock: %{public}@
Peer has a future version of my data ?? It has: %llu, I have: %llu
Accepting change list from peer that has not received my latest updates: %llu vs. %llu
Peer state doesn't match my expectation-- likely a message is missing. I have %llu, they sent %llu, there are %u changes incoming
Skipping one sync message (syncID %{public}@) while waiting for another (syncID %{public}@)
Skipping while waiting for sync; fullSyncIdentifier == '%{public}@'
Sync %{public}@ has finished, and I'm waiting for sync %{public}@ to finish, and they match. Triggering full-sync now.
Decoded nil object from change data for service %{public}@., Enable debug logging (on debug builds only) to see full info.
Failed to decode data object at index %u of message: %{public}@
Copied peer clock into our vector. Value is now: %{public}@ (my PeerID is %{public}@)
CompanionSync Change Application
Applying %d incoming changes
New message seqno: %qu, last message seqno: %qu
-handleChangeMessage:<%zu objects> -- changes are not consecutive, triggering full sync
handleChangeMessage - done, change-list bubble detected
No delegate for -handleChangeMessage:, so I have to ignore the change!! This will likely cause problems...
No object decoded from payload for change '%{public}@'
remoteStoreDidChange, objectAdded
remoteStoreDidChange, objectUpdated
remoteStoreDidChange, objectDeleted
handleChangeMessage - done
Received an unknown message: %{public}@
Ending XPC transaction around (asynchronous) message send (%s)
dataIdentifier: %{public}@ didSendWithSuccess: YES error: nil
Remote delivery confirmation for %{public}@
Failed to wrap message: %{public}@
Entering XPC transaction around (asynchronous) message-send
addObject
updateObject
deleteObject
No persistent store or message center set up yet; probably we're not paired. Therefore: I'm dumping this change on the ground.
CompanionSync HandleChangeList
CompanionSync SendChanges
CompanionSync LogChanges
Failed to log %zu changes: %@
-setNeedsFullSync called by client - SYStore %p, alwaysWins %s
Skipping full sync, already in progress
CompanionSync remoteStoreAllObjects
remoteStoreAllObjects from %{public}@, %lu objects, version %qu
Full sync sent to the master device!
No delegate set, so changes will be ignored.
Full sync requested from a slave device
Full Sync requested by Gizmo
Already in full-sync, send was complete, ignoring this request
Already in full-sync, ignoring this request
delegate shouldPerformInitialFullSync returned %s
No full-sync sent, so triggering full sync now
performFullSync
performFullSync - this is companion, let's do this
performFullSync - %lu objects, %lu finalVersion
performFullSync - remoteStoreRequestFullSync
performFullSync - done
Full-sync failed, maximum retry attempts reached.
Ending batched sync due to error, but we're unable to send a sync message due to a bad state
Sending batch chunk (%zu objects), ID %{public}@
performBatchedSync: assigned UUID %{public}@
CompanionSync BatchedFullSync
Client rejected batch attempt
Entering batch sync loop for UUID %{public}@
Error detected during batched full-sync: scheduling retry
I'm doing a batched sync, but I have no current sync ID?
Error during batched sync: %{public}@
Fetching sync batch
Batch sync client reported error: %{public}@
CompanionSync: batched full-sync restart requested
CompanionSync: full batched sync sent to master device
CompanionSync ProcessBatchSyncStart
Starting batched full-sync
CompanionSync ProcessBatchSyncEnd
Ending batched full-sync
Batch Sync: adding %zu objects for chunk %zu
CompanionSync Delivering Batch Chunk
Received batch chunk ACK: %u
Received unexpected batch sync chunk ACK: %u
Beginning SYLegacyStore delta sync
Ended SYLegacyStore delta sync
SYSession (v1 Outgoing AllObjects)
CompanionSync initializing new SYService %{public}@ %s, %{public}@ priority, generation %{public}@
Queue state assumption failed: _sessionQueue.suspended
Remote device is an 
WATCH running OS %{public}@ (%{public}@). Will use protocol v1 when communicating with this device.
Remote device is an iDevice running OS %{public}@ (%{public}@). Will use protocol v1 when communicating with this device.
Updating protocol version for device OSInfo change: will use protocol v%d
For some reason I have a pairing store path but no SYDevice??
Remote device is a %{public}@ with system version %{public}@, build %{public}@
Calling delegate willSwitchFromPairingID:%{public}@ toPairingID:%{public}@
Failed to resume store after switching devices!
SYService %p has new generation %{public}@
_deviceTargetabilityChanged:
Newly-targetable device is our existing targeted device. No switch actually occurring.
Device info: %{public}@
Targeted device became untargetable. We should get a new targetable-device notification soon.
Current device info: %{public}@
Current targeted device (%@) was removed from known devices list.
Last known paired device has unpaired. SYService can no longer function.
Delegate: -serviceDidPairDevice
Delegate: -serviceDidUnpairDevice
Canceling current sending session %{public}@ due to QWS
Sending session (%{public}@}) still active at time of QWS. State is %{companionsync:SYSessionState}ld, so I'm letting it continue so that IDS can give it a not-the-active-device error next time it sends
Canceling current receiving session %{public}@ due to QWS
Receiving session (%{public}@}) still active at time of QWS. State is %{companionsync:SYSessionState}ld, so I'm letting it continue so that IDS can give it a not-the-active-device error next time it sends
SYService resumed while already running
SYService resumed with no delegate
SYService resumed with no pairing store
Error initializing SYService DB: %{public}@
Error initializing SYService messaging: %{public}@
Queue state assumption failed: _sessionQueue.suspended == NO
LYING about peerID, because it's nil!
About to build a new session, but there's already one running! Currently-running session is %{public}@
Queue state assumption failed: _sessionQueue.suspended == YES
Delegate: -service:startSession:error:
Delegate rejected new %{public}@ with error %@
Informing sync engine of new outgoing session.
%{public}@ failed to start: %@
Start signpost %llu: Started outgoing %{public}s %{public}@ with identifier %{public}@ for service %{public}@. Reason = '%{public}@'
Failed to enqueue full-sync request: %@
Enqueued full-sync request with ID %{public}@
Failed to enqueue reset request: %@
Enqueued reset request with ID %{public}@
Delta requested
Reset requested
SYService DB Setup
Nil data store path for SYService %p
SYService has a nil persistent store!
SYService persistent store initialized. PeerID = %{public}@, vector clock = %{public}@.
SYService Sync Engine Setup
SYService Sync Engine Swap
Returning to original engine after swap error
Failed to swap to engine type %{companionsync:SYServiceEngineType}d: %{public}@
Failed to restore original engine! I can only suspend the entire service now... %{public}@
Suspending service %{public}@
The ended session (%{public}@) is not the current session. Why is that?
The current session is nil, so I'll inform the delegate anyway
Delegate: -service:sessionEnded:error:
Wrapping up %s session for service %{public}@
Wrapping up session %{public}@ is not the current session (%{public}@)
Concluding session has birthDate in the future! birthDate = %{public}@, now = %{public}@
End signpost %llu: %s session with identifier %{public}@ for service %{public}@ (reason '%{public}@') completed in %.04f seconds.
Queue state assumption failed: service->_sessionQueue.isSuspended == YES
Asking delegate about session collision preference. We have chosen %{public}@ as the winner
Delegate: -service:willPreferSession:overSession:
Delegate vetoed our decision. Session %{public}@ is now the winner
Failed to enqueue version rejection message: %{public}@
Enqueued version rejection message with ID %{public}@
Ignoring message ID %{public}@, it's in the 'cancellation failed' list
Possible duplicate message %{public}@ received with seqno %llu. Comparing timestamps.
This message timestamp = %{public}@ vs. last message timestamp = %{public}@
Message repeated (bubble): seqno = %llu, GUID = %{public}@
Unknown message arrived with SYMessageID %d (PB class '%{public}@')
Enqueueing end-session message to cancel an orphaned receiving session on peer.
Enqueued end-session message to orphaned session on peer.
SYService received OOB data, but delegate doesn't support it
Delegate: -service:incomingData:completion:
SYService received OOB file transfer, but delegate doesn't support it
Delegate: -service:incomingStream:metadata:completion:
Failed to remove file used by file-transfer after read completion: %{public}@
Received expected error for message ID %{public}@, will ignore it. Error is %{public}@
Sync error occurred: %@
Queue state assumption failed: _queuedStartSession == nil
Deferring incoming start-session (%{public}@) to allow current session (%{public}@) to finish closing.
Received %{public}@ message for another session ID
Deferring incoming session requst for a short while
A new StartSyncSession (%{public}@) arrived, but there is a current session (%{public}@) with an age of %.02f, so we are rejecting the new session.
Terrifying deferred session rejection path (enqueue).
Terrifying deferred session rejection path (dequeue).
Issuing immediate rejection of incoming session request
Cancelling current session (%{public}@) to make way for a new one (%{public}@).
Reset sync session sent to master peer
Delegate: -service:startSession:error: (receiving)
Delegate rejected incoming sync session (%{public}@) with error %{public}@
Notifying engine of incoming session
Critical failure. Session start callback gave us a nil self.
Start signpost %llu: Started incoming %{public}s %{public}@ with identifier %{public}@. Reason = '%{public}@'
%{public}@ decided not to come out and play.
A SYResetRequest was received by a slave peer, which is invalid.
Canceling current session-- cancelation was explicitly requested by a reset request.
Accepting reset request: %{public}@ sync in progress, which will be canceled to make way for the requested reset.
Rejecting sync batch: no session in progress
Rejecting sync restart: no session in progress
Rejecting sync end: no session in progress
Reset Sync request was denied: %@
No session in progress for incoming response
Delegate: -service:encounteredError:context:
Unable to switch protocols -- peer doesn't support anything I know!
Swapped-out session (version rejection) failed to start: %@
Send OOB Data
OOB Data Stream
Rejecting full-sync request: session (%{public}@) in progress
Rejecting sync-all-objects: session (%{public}@) in progress
Incoming v1 SyncAllObjects session failed to start: %{public}@. Error response message will be delivered by the session when it's completed.
Rejecting full-sync start: session (%{public}@) in progress
Delegate: -service:startSession:error
Delegate rejected incoming sync session (%{public}@) with error %@
Rejecting full-sync batch: session (%{public}@) in progress
Rejecting full-sync end: session (%{public}@) in progress
Rejecting delta change: session (%{public}@) in progress
Delegate rejected incoming v1 transaction (%{public}@) with error %@
Protocol v1 full-sync-request was DENIED with error %{public}@
Response received for rejected v1 session
addressbooksync
appregistrysync
eventkitsync
location.auth
location.wifitilesync
maps.sync
tccd.sync
voicemailsync
SYService
NMSWindowData: unable to create db file via path '%@', returning nil from -init, message windowing will FAIL.
NMSWindowData: unable to connect to shared DB for service %{public}@
SQL Error: %{companionsync:sqlite3err}d
Unable to remove obstructing file at path '%@'. Error = %{public}@
Failed to create parent folder for messaging transmission window data at '%@'. Error = %{public}@
NMSWindowData: Failed to remove un-openable DB file at '%@': %{public}@
Could not open database: (%@): %{companionsync:sqlite3err}d
Database '%@' failed to open after second try.
Path is nil!
Failed to get attrs of path '%@', will print attrs of closest non-failing parent. Error = %{public}@
Unable to get any attributes for any parent. Error = %@
Attributes for '%@': %@
Error checking for empty table %{public}@: %{companionsync:sqlite3err}d
Error fetching schema version: %{companionsync:sqlite3err}d
Error opening SQLite3 DB at (%@): %{companionsync:sqlite3err}d
Failed to update timestamp format: %{companionsync:sqlite3err}d
Clearing out change list to avoid problems later.
Failed to begin %s transaction: %{companionsync:sqlite3err}d
Failed to commit %s transaction: %{companionsync:sqlite3err}d
Failed to rollback %s transaction: %{companionsync:sqlite3err}d
SQLite error fetching incremented sequence number: %{companionsync:sqlite3err}d
Returning next sequence number: %llu
SYPersistentStore asked to store a seqno == 0, which is INVALID.
SQLite error creating peer_info insert statement: %{companionsync:sqlite3err}d
SQLite error inserting new Peer Sequence Number: %{companionsync:sqlite3err}d
SQLite error updating peer message sequence number: %{companionsync:sqlite3err}d
No peer seqno recorded, returning special value zero
SQLite error fetching peer message sequence number: %{companionsync:sqlite3err}d
SQLite error while storing new TTL value %f: %{companionsync:sqlite3err}d
Beginning XPC transaction for full-sync, to stop us being Jetsammed until it's done.
Ending XPC transaction for full-sync
Did not end full-sync xpc transaction as it was never opened.
Reassigning sync id, starting XPC transaction to stop us being Jetsammed until it's done.
Current sync ID is non-nil but we're not in a transaction. Must be left-over from a dead process? Either way, I'm entering a new transaction now. Yes, it's hacky. Hackiness is inversely proportional to the amount of coffee ingested.
SQLite error: %{companionsync:sqlite3err}d
sqlite3_exec(%s) Error: %{companionsync:sqlite3err}d %{public}s
%{public}@: Setting state from %{companionsync:SYSessionState}d to %{companionsync:SYSessionState}d
State change notification source is nil!
%{public}@: Setting state (quietly) from %{companionsync:SYSessionState}d to %{companionsync:SYSessionState}d
About to wait for change slot
Wait for change slot ended, slot is available
Wait for change slot ended, semaphore cancelled or wait timed out
Delegate callout complete after %.02f seconds: -syncSession:enqueueChanges:error:, state = %{companionsync:SYSessionState}d, %lu changes
No changes to send, setting next state %{companionsync:SYSessionState}d
Filling in the batch message IDs array for some reason...
Cancelling session timer for %{public}@
Session timeout timer fired. Session ID is %{public}@, weak session reference is %p
Session timeout timer fired. Expected to fire at %{public}@, delta is %.02f
Session timeout is %.02f seconds. Timer will fire at %{public}@
Message timeout is set to %.02f
Sending session entered error state during initialization.
Sending session canceled during initialization
Unexpected state during initialization: %{companionsync:SYSessionState}d
Start session message enqueued, but session has changed to state %{companionsync:SYSessionState}d
Received an error SYStartSyncSessionResponse: %@
We are not waiting for this start-session response (current state is %{companionsync:SYSessionState}d, so I'm not setting error state here.
Received an accepted start-session response while in unexpected state %{companionsync:SYSessionState}d
Batch %lu response doesn't have a corresponding entry in list of message IDs (which goes up to %lu)
Received an error SYSyncBatchResponse: %@
Received an error SYSyncSessionRestartResponse: %@
Restart was rejected by slave, cancelling session now.
Received an error SYEndSyncSessionResponse: %@
End session with rollback was rejected by slave: %@
Backtrace:
%{public}@
-[SYTransaction dealloc]: XPC transaction wasn't ended properly
SYTransaction: beginning XPC transaction, to stop us being Jetsammed until it's done.
SYTransaction: ending XPC transaction. We can now be jetsammed safely.
NRDevice property changed: %{public}@, %@ -> %@
Disregarding NR attempt to zap pairing ID
Posting SYDeviceOSInfoChangedNotification
Device %{public}@ state changed: %{companionsync:SYDeviceState}d
Device %{public}@ became %stargetable
SYSession (v1 Full Sync, Incoming)
Delegate: -syncSession:resetDataStoreWithError:
Delegate didn't reset its store: %@
SYSession (Incoming)
%{public}@: Set state from %{companionsync:SYSessionState}d to %{companionsync:SYSessionState}d
No dispatch source set up for state-change notifications!
%{public}@: _midStreamErrorHandled
%{public}@ entered error state. Error = %{public}@
Error occurred while waiting for async client operation to complete. Will send error as part of response to that operation. Error = %{public}@
Timeout while waiting for client to apply changes. Setting state to SYSessionStateErrorOccurredWhileWaitingForCompletion.
Delegate: -resetDataStoreForSyncSession:completion:
Async reset-data completion called after %.02f seconds with strongSelf = %{public}@, success = %s, error = %{public}@
Error reported from async reset-data in session %{public}@: %{public}@
Sent async reset-data message to delegate. Will continue = %s, error = %{public}@
Receiving session canceled during initialization
Receiving session entered error state during initialization
Pre-expired session arrived. Dropping.
Delegate callout complete after %.02f seconds: -syncSession:resetDataStoreWithError:
Delegate failed reset-store operation: %@
Received incoming batch %llu
Processing incoming batch %llu
Returning error state in response to a sync batch
Delegate callout complete after %.02f seconds: -syncSession:applyChanges:completion:, chunkIndex = %llu, success = %s
%{public}@: Building response for processed changes, chunkIndex = %llu, success = %s
Failed to process sync batch, returning error: %{public}@
Detected error that occurred while waiting, attaching to batch response. Error = %{public}@
Batch incoming, state == %{companionsync:SYSessionState}d
First batch arrived, we're still waiting on reset completion-- using dispatch_group_notify with block %@
Delegate: -syncSession:resetDataStoreWithError: (restart session)
Delegate callout complete after %.02f seconds: -syncSession:resetDataStoreWithError: (restart session)
Client rejected reset session restart: %@
Delegate: -syncSession:rollbackChangesWithError: (restart session)
Delegate callout complete after %.02f seconds: -syncSession:rollbackChangesWithError: (restart session)
Client rejected delta session rollback: %@
Rejecting restart request: %@
Delegate: -syncSession:rollbackChangesWithError: (session end)
Delegate callout complete after %.02f seconds: -syncSession:rollbackChangesWithError: (session end)
Error rolling back at end session: %@
Ending session with error from Master: %@
End session arrived and I have missing sync batches: %@
Failed to get shared DB for service %{public}@
Error creating parent directory: %{public}@
First open attempt failed, removing & recreating DB
Error removing existing DB: %{public}@
Could not open database (%@): %{companionsync:sqlite3err}d
Database %@ open has failed after second try.
Delegate callout complete: -syncSession:applyChanges:completion:, v1 chunkIndex = %u, success = %s
Building response for processed changes, chunkIndex = %u, success = %s
Client failed to process incoming BatchSyncChunk (%u), returning error: %{public}@
Error occurred while waiting for v1 Sync Batch ingestion, returning error: %{public}@
Failed to unarchive object. %{public}@
Target device is %snearby, caching value.
Target device is %sconnected, caching value.
Input request options: %@
Coalesced IDS options: %@
Error writing to URL for file transfer: %{public}@
Failed to delete unused file-transfer file: %{public}@
Failed to cancel outgoing message (%{public}@): %@
Error sending message with ID %{companionsync:SYMessageID}hu: %{public}@
Incoming request %{companionsync:SYMessageID}hu: %{public}@. Transit time = %.02f seconds
Incoming response to %{companionsync:SYMessageID}hu: %{public}@, responding to %{public}@. Transit time = %.02f seconds
Response handler failure reported: %@
Out of band message with nil payload found! Request data has size %lu. First 20 bytes = %{public}@
Failure dealing with OOB data: %@
Failed to store incoming sequence number: %{public}@
Incoming file: %{public}@
Failed to process incoming file transfer: %{public}@
Sent %{companionsync:SYMessageID}hu: %{public}@
Sent response to %{companionsync:SYMessageID}hu (%{public}@): %{public}@
Sent file: %{public}@
Device-level ACK for %{public}@
App-level ACK for %{public}@
Message send failure for %{public}@: %{public}@
Send failure: %{public}@, error=%{public}@
Active IDS device changed. Old = %@, new = %@
Target device %s proximity
Target device is connected
Target device is NOT connected
Output streamer %{public}@: Error from underlying stream: %{public}@
Streamer %{public}@ writing to a closed stream
Streamer %{public}@ writing to a stream in error state. Error = %{public}@
Scheduling completion block
Write to output stream failed, stream error=%{public}@.
Wrote %ld bytes to stream %{public}@
Input streamer %{public}@: Error from underlying stream: %{public}@
Reached end of input stream.
Stream is closed.
Stream is in error state: %{public}@
Stream hit EOF prior to read
Orphaned data-available event found a closed stream.
Orphaned data-available event found a stream error.
Stream in unexpected state: %{companionsync:NSStreamStatus,public}d
Stream hit EOF during read
Completing all stream read items with error '%{public}@'
Input stream encountered error: %{public}@
Input stream end encountered
Suspending %{public}s
Resuming %{public}s
Setting next expiry timer fire date to '%{public}@' (%.02f seconds from now)
Not enabling the transmission window, because we were unable to create the window metadata DB.
Opening window on message timeout: %lu bytes in flight, %lu max
Message dropped by QWS: %@
Expired message: %@
-[IDSService initWithService:%{public}@] returned nil!
IDS service is nil on entry to sendRequest. Dropping message: %{public}@
Sending %{public}@, NMS window queue is %ssuspended
Sending request: %{public}@
Request extra IDS options: %@
Request resolved IDS options: %@
Closing window: %lu bytes in flight, %lu max
For message: %{companionsync:SYMessageID}hu sending data of length: %tu. Got identifier %{public}@, error %@
IDS service is nil on entry to sendFile. Dropping message: %{public}@
Sending file: %{public}@
File extra IDS options: %@
File resolved IDS options: %@
Sending resource data from file: %@. Got identifier %{public}@, error %@
Failed to delete file-transfer file '%@' : %{public}@
IDS service is nil on entry to _sendResponse. Dropping message: %{public}@
Sending response: %{public}@
Response extra IDS options: %@
Response resolved IDS options: %@
For response to: %{companionsync:SYMessageID}hu sending data of length: %tu. Got identifier %{public}@, error %@
NMSMessageCenter stopping
Opening window: %lu bytes in flight, %lu max
Receiving %zu bytes of incoming data from service %{public}@. Identifier (in/out) = %{public}@ / %{public}@
Err, *whose* message? Got data for service %{public}@, but I'm listening for service %{public}@
Incoming data: wrapping it with an XPC transaction
Received response: %{public}@
No registered response handler for message: %{companionsync:SYMessageID}hu
Could not find context for message %{public}@, type %{companionsync:SYMessageID}hu
Releasing timer for outgoing request %{public}@ due to incoming Version Rejection message triggered by that message ID.
Received request: %{public}@
No request handler for message ID %{companionsync:SYMessageID}hu
Header bytes from message (8 bytes): %{public}@
First 100 bytes of incoming unrecognized message data: %{private}@
Unable to inform delegate about incoming request
IDS gave us a file at URL %{public}@, but our delegate doesn't respond to file transfer callbacks.
Incoming file transfer: wrapping it with an XPC transaction
IDS active device changed: %@
Must not forget about an NMSIncomingRequest without first responding to it. Request is an %{public}@
No Protobuf class mappings for message ID %{companionsync:SYMessageID}hu
Nano Messaging Service
Failed to create NMSWindowData object, so transmission window is forcibly disabled.
*** NMS State assertion failure in -[NMSMessageCenter %{public}@]
SYOutputStreamTransaction failed to clean up a temporary file at URL %@: %{public}@
Queue %{public}@ deallocated while suspended
Suspending %{public}@
%{public}@ resume count: %d
Resuming %{public}@
Over-resume detected for queue %{public}@
Closing output stream %{public}@
Failed to send file at %@ via IDS: %{public}@
Sent file at %@ via IDS, got identifier %{public}@
Output file contains no data, not sending anything.
Removing output file at %@
Outgoing file-transfer unnecessary - removing output file at URL %@
Retrying deferred incoming session with identifier %{public}@
Beginning file-transfer response session for engine %p
Failed to get new temporary item url: %{public}@
Engine %p now in an incoming file-transfer session. Response stream = %@ (%{public}@)
Ending file-transfer response session for engine %p
Beginning file-transfer request session for engine %p
Failed to get new temporary item URL: %{public}@
Engine %p now in an outgoing file-transfer session. Output stream = %@ (%@)
Ending file-transfer outgoing session for engine %p
Enqueueing %{companionsync:SYMessageID}hu for transfer using IDS messaging
Sent %{companionsync:SYMessageID}hu, got identifier %{public}@
Sent %{companionsync:SYMessageID}hu, %lu bytes: %{public}@
IDS message send failed: %{public}@
File-transfer engine caching start request %p
File-transfer engine eliding restart request %p
File-transfer engine cancelling session ending in an error
File-transfer engine creating a one-message session
Cancelling one-message file-transfer session: no IDSService or no output stream available
Enqueueing %{public}@ message
Error writing data to output file stream: %{public}@
Cancelling one-message file-transfer session, since the data couldn't be written to the file
Cancelling file-transfer session, since the session-end message couldn't be written to the file
Failed to delete unused file-transfer file '%@' : %{public}@
Failed to send file at %@ via IDS: %@
Sent OOB file: %{public}@
Failed to cancel outgoing file-transfer message (%{public}@): %@
Canceling send for any outgoing messages on the request stream.
Canceling send for any outgoing messages on the response stream.
Incoming data is all response data
File-transfer engine failed to decode incoming %{public}@ message
File-transfer engine decoded incoming %{public}@ message
Error reading from incoming file-transfer stream: %{public}@
Canceling attempt to consume remaining messages. Sequence numbers will likely be out of sync now.
Failure dealing with OOB data: %{public}@
Rejection/error somewhere caused remaining session messages to be ignored. Pulling them all out of the file to keep sequence numbers contiguous.
File-transfer engine ending session on %{public}@ message
Failed to write %{companionsync:SYMessageID}hd response to stream, error = %{public}@
Pulling remaining messages from the file to keep sequence numbers contiguous, in case this was an early return.
Deferring incoming file-transfer with identifier %{public}@ because I'm already within a file-transfer session
Incoming session stream: %{public}@, associated session ID: %{public}@
Finished handling session stream: %{public}@
Failed to take ownership of incoming resource at URL '%@': %{public}@
Keeping track of incoming file at URL %@
Transfer time for %{public}@: %.02f seconds
Engine deallocated while waiting to process incoming file at URL: %@
Failed to remove incoming file: %{public}@
No protobuf class mapping found for message ID %{companionsync:SYMessageID}hu
Incoming message CRC failure (0x%08x vs 0x%08x). Terrible things are about to happen.
CRC validated.
Incoming resource: %{public}@, replying to %{public}@
Receiving: %zu bytes, %{public}@, replying to %{public}@
File-transfer engine receiving single message with GUID %{public}@, %ld bytes
Incoming message data too small to contain protobuf header
Received a protobuf encoded by NMSMessageCenter? I have %lu bytes of data, and a header saying { msgID %hu, isResponse %hu, msgLen %u }. Header bytes (%p) = %.*P
Unknown message ID: %hu
Transit time for %{public}@: %.04f seconds
Enqueued response to %{companionsync:SYMessageID}hu, got identifier %{public}@
Sent response to %{companionsync:SYMessageID}hu: %{public}@
IDS send failed for response to %{companionsync:SYMessageID}hu, error: %{public}@
Error sending session via file-transfer: %{public}@
Send confirmation for message %{public}@: success=%s, error=%{public}@
Device-level ACK: single message, %{public}@ (success=%s, error=%{public}@)
Device-level ACK: file transfer, %{public}@ (success=%s, error=%{public}@)
Delivery confirmation for message %{public}@
App-level ACK: %{public}@
Active IDS device changed to: %@
Transport
Error checking for empty table - %{companionsync:sqlite3err, public}d
Error chowning path %{public}@, error: %d
Error coordinating deletion of existing DB: %{public}@
Failed to open statistics DB - %{companionsync:sqlite3err, public}d
Error fetching schema version - %{companionsync:sqlite3err, public}d
Statistics DB closed before an enqueued async block could run.
Statistics DB closed before an enqueued sync block could run.
Error creating parent folder: %{public}@
SQL Error preparing statement "%{public}s" - %{companionsync:sqlite3err, public}d
Error inserting incoming message - %{companionsync:sqlite3err, public}d
Error adding processing time to incoming message - %{companionsync:sqlite3err, public}d
Failed to add error to incoming message - %{companionsync:sqlite3err, public}d
Error marking incoming message as complete - %{companionsync:sqlite3err, public}d
Error reserving db row for outgoing message - %{companionsync:sqlite3err, public}d
Error inserting outgoing message - %{companionsync:sqlite3err, public}d
Error recording identifier for outgoing message - %{companionsync:sqlite3err, public}d
Error finding timestamp for ID - %{companionsync:sqlite3err, public}d
Error updating outgoing message for ID - %{companionsync:sqlite3err, public}d
Error while updating response state for outgoing message - %{companionsync:sqlite3err, public}d
Error while recording delivery confirmation for outgoing message - %{companionsync:sqlite3err, public}d
Error while recording incoming file transfer - %{companionsync:sqlite3err, public}d
Error while recording outgoing file transfer - %{companionsync:sqlite3err, public}d
Error while updating outgoing file transfer for send-success notification - %{companionsync:sqlite3err, public}d
Error bulk-updating identifiers (statement = "%{public}@") - %{companionsync:sqlite3err, public}d
sqlite3_close() failed - %{companionsync:sqlite3err, public}d
Failed to create statement - %{companionsync:sqlite3err, public}d
Error while reading service names - %{companionsync:sqlite3err, public}d
Failed to create prune statement - %{companionsync:sqlite3err, public}d
Failed to execute prune statement - %{companionsync:sqlite3err, public}d
Failed to create transaction for DB prune - %{companionsync:sqlite3err, public}d
Prune transaction failed to commit - %{companionsync:sqlite3err, public}d
sqlite3_exec(%{public}s) Error - %{companionsync:sqlite3err, public}d
-[%{public}@ dealloc]: XPC transaction wasn't ended prior to -dealloc
Simulating crash
%{public}@: beginning XPC transaction, to stop us being Jetsammed until it's done.
%{public}@: ending XPC transaction. We can now be jetsammed safely.
Asked to record a nil IDS message identifier!
Pausing %{public}@ ...
... Resuming %{public}@
Session acquiescense test: %{public}@, %{companionsync:SYSessionState}d, my generation %{public}@, new generation %{public}@
Session %{public}@ rejecting new session; not yet sent out my own start-session message
Session %{public}@ acquiescing to new session; sending, not started, already rejected
Session %{public}@ rejecting new session; sending, not started, first strike
Session %{public}@ acquiescing to new session; nil current generation
Session %{public}@ rejecting new session; no peer generation ID
Session %{public}@ acquiescing to new session; new generation ID %{public}@ does not match current %{public}@
Session %{public}@ acquiescing to new session; second strike
Session %{public}@ rejecting new session: first strike
SYObject %p does not provide the required syncId!
Nil data for SYObject, cannot decode.
SYChange object %{public}@ does not provide the required objectIdentifier!
SYChangeSerializer doesn't support -encodeSYChangeForBackwardCompatibility:protocolVersion:, but I'm being asked to encode a change for version %d
Serializing via -dataWithSYObject:, which may fail spectacularly
Nil data for SYObject, cannot decode
SYRequestFullSync
NSCopying
SYObjectChangeSet
SYLogs
CPSafeDescription
SYLogErrorInfo
SYIncomingSyncAllObjectsSession
SYFileTransferInfo
SYSyncBatch
Additions
_SYWeakServiceDBRef
_SYSharedServiceDB
UnitTestHelpers
_SY_NSStreamDispatchQueueIntegration
_SYStreamGuts
_SYZlibStreamInternal
NSLocking
SYDecompressingInputStream
_SYStreamRunLoopSourceHandler
NSObject
NSStreamDelegate
SYCompressionBufferOptimization
SYStreamEventHandlerBlocks
SYStreamThroughputCounter
SYStreamProgress
SYCompressingOutputStream
SYOutputCompressor
SYCompressedFileInputStream
SYCompressedFileOutputStream
SYErrorInfo
SYDictionaryObject
SYObject
NSSecureCoding
NSCoding
SYChangeMessage
_SYLazyChangeArray
_SYCountedSemaphore
SYBatchSyncStart
SYLogServiceState
SYStore
SYServiceDelegate
SYChangeSerializer
SYChangeTrackingWithErrors
SYChangeTracking
DeltaSync
SYStoreSessionOwner
SYSessionDelegate
SYStoreResetSessionOwner
SYStoreDeltaSessionOwner
SYStoreIncomingSessionOwner
SYObjectWrapper
SYChange
SYExtendedAttributes
SYStateProvider
SYError
SYOutgoingBatchSyncSession
SYOutgoingDeltaTransactionSession
SYAtomicFIFO
SYLogEngineState
SYIncomingTransactionSession
SYRetryTimer
SYLegacyStore
IDSServiceDelegate
NMSMessageCenterDelegate
FullSyncSupport
BatchedSyncSupport
ForHealthKitOnly
SYDegenerateChange
SYLogTransportOption
SYResetResponse
SYEndSyncSession
SYOutgoingSyncAllObjectsSession
_SYQueuedStartSession
SYService
SYSyncEngineResponder
SYStateLoggable
AtomicTransactions
LegacyChangeSupport
CompanionSyncProtoV1
NMSWindowData
SYMessageStatusRecord
SYEndSyncSessionResponse
SYResetRequest
SYMessageHeader
SYPersistentStore
UnitTestHelper
SYLogSessionState
SYSendingSession
SYBatchSyncEnd
SwizzledEquality
SYTransaction
_SYDeviceMonitor
SYDevice
NRDevicePropertyObserver
NMSObfuscatableDescriptionItem
NMSObfuscatableDescription
SYIncomingFullSyncSession
SYReceivingSession
SYSyncSessionRestartResponse
SYSyncBatchResponse
Convenience
SYTemporaryFileAPI
SYStartSyncSessionResponse
SYBatchChunkAck
NMSPersistentDictionary
_SYIncomingBatch
SYIncomingBatchSyncSession
SYAdditions
SYMessengerSyncEngine
SYFullSyncRequestAck
_SYStreamerThread
_SYOutputDataItem
_SYOutputStreamer
_SYStreamPropertyProxying
_SYInputDataItem
_SYInputStreamer
SYRejectedVersion
_NMSDispatchQueue
NMSMessageCenter
IDSDeviceUtilities
NMSOutgoingRequest
NMSDeviceTargetable
NMSObfuscatableDescriptionProviding
NMSOutgoingFileTransfer
NMSIncomingRequest
NMSDeviceSourced
NMSIncomingResponse
NMSIncomingFileTransfer
NMSOutgoingResponse
NMSPBMapping
NMSMessagePersistentContext
NMSError
SYClock
SYOutputStreamTransaction
SYStreamTransaction
SYInputStreamTransaction
SYOutOfBandData
SYSyncSessionRestartRequest
_SYMultiSuspendableQueue
SYStartSyncSession
SYBatchSyncChunk
_SYDeferredIncomingSession
SYFileTransferSyncEngine
SYDeletedObject
SYTransportLog
SYLogMultiSuspendableQueueState
_SYMessageTimerContext
_SYMessageTimerTable
SYLogPeerIDPair
SYSyncEngine
_SYQuiescenceAllocation
_SYQuiescenceObserver
SYStatisticStore
NSFilePresentation
NSFilePresenter
ForUnitTests
MessageUnpacking
DatabaseTidying
FromSYError
SYSession
ForSubclasses
_SYObjectCompatibilityWrapper
SYSessionAdditions
SYSyncEndResponse
SYLogDeviceState
SYVectorClock
SYPeer
SYSyncAllObjects
SYQueueDumper
description
dictionaryRepresentation
stringWithFormat:
dictionary
setObject:forKey:
setHeader:
setSyncID:
allocWithZone:
init
copyWithZone:
isMemberOfClass:
isEqual:
hash
mergeFrom:
readFrom:
writeTo:
copyTo:
header
syncID
.cxx_destruct
_header
_syncID
T@"SYMessageHeader",&,N,V_header
T@"NSString",&,N,V_syncID
initWithArray:
added
addObjectsFromArray:
minusSet:
deleted
count
countByEnumeratingWithState:objects:count:
syncId
addObject:
updated
changesBetween:and:
updateObject:
deleteObject:
transaction:
initWithChangesBetween:and:
applyToStore:
setAdded:
setUpdated:
setDeleted:
_added
_updated
_deleted
T@"NSMutableSet",C,N,V_added
T@"NSMutableSet",C,N,V_updated
T@"NSMutableSet",C,N,V_deleted
stringWithUTF8String:
stringByAppendingFormat:
dictionaryWithObjects:forKeys:count:
initWithDomain:code:userInfo:
standardUserDefaults
numberWithBool:
registerDefaults:
arrayWithObjects:count:
pathWithComponents:
initialize
logFolder
shouldDisplaySyncErrorMessage
shouldLogBubblesToAggD
shouldDumpIDSOnSyncError
domain
code
initWithFormat:
CPSafeDescription
T@"NSString",R,N
CPObfuscatedDescriptionObject
systemLocale
setLocale:
setNumberStyle:
stringFromNumber:
UTF8String
initWithBytes:length:encoding:
numberWithLongLong:
setDomain:
setCode:
_code
_domain
T@"NSString",&,N,V_domain
Tq,N,V_code
initWithService:
allObjects
copy
timestamp
setBirthDate:
setIdentifier:
wrappedUserContext
queue
sessionActivity
initWithCapacity:
serializer
initWithSYObjectDataArray:typeArray:decoder:
initWithSYError:userInfo:
setError:
setState:
targetQueue
delegate
state
error
isEqualToString:
syncSession:applyChanges:completion:
initWithService:message:completion:
_sendEndSessionResponse:
_continueProcessing
canRestart
setCanRestart:
canRollback
setCanRollback:
_allObjectsAsData
_completion
numberWithUnsignedLongLong:
setStartAnchor:
setEndAnchor:
hasStartAnchor
hasEndAnchor
startAnchor
endAnchor
decompressedFileSize
setDecompressedFileSize:
_decompressedFileSize
_endAnchor
_startAnchor
TB,R,N
T@"NSString",&,N,V_startAnchor
T@"NSString",&,N,V_endAnchor
TQ,N,V_decompressedFileSize
removeAllObjects
objectAtIndex:
addChanges:
setSessionID:
changesCount
clearChanges
changesAtIndex:
changesType
sessionID
index
setIndex:
changes
setChanges:
_index
_changes
_sessionID
T@"NSString",&,N,V_sessionID
TQ,N,V_index
T@"NSMutableArray",&,N,V_changes
setPeerID:
setGenerationID:
initWithPeerID:generation:
name
initWithServiceName:
setName:
setDb:
_name
T@"NSString",C,N,V_name
T@"_SYSharedServiceDB",W,N,V_db
defaultCenter
pairingStorePathWasReset
addObserverForName:object:queue:usingBlock:
objectForKey:
dealloc
fileURLWithPath:
setResourceValue:forKey:error:
defaultManager
stringByDeletingLastPathComponent
createDirectoryAtPath:withIntermediateDirectories:attributes:error:
_addSkipBackupAttributeToItemAtPath:error:
_LOCKED_hasSchemaVersionForClient:
_LOCKED_getClientVersion:
_LOCKED_setVersion:forClient:
_LOCKED_ensureSchemaVersionsTableInDB:
withDBRef:
stringByAppendingPathComponent:
stringByAppendingPathExtension:
_ensureParentExists:error:
fileSystemRepresentation
_LOCKED_createOrOpenDBForServiceName:error:
_LOCKED_runSchemaUpdate:forClientNamed:
enumerateKeysAndObjectsUsingBlock:
_LOCKED_ensureDBExists
setObject:forKeyedSubscript:
_runTransactionBlock:exclusive:
sharedInstanceForServiceName:
_ensureSchemaVersionsTable
schemaVersionForClient:
setSchemaVersion:forClient:
updateSchemaForClient:usingBlock:
inTransaction:
inExclusiveTransaction:
_lock
_schemaSetupCallbacks
removeObjectForKey:
initWithUTF8String:
_dbPath
_releaseSharedInstanceForServiceName:
dbPath
T@"NSString",R,N,G_dbPath
_SY_notifyOnQueue:handler:
objectForKeyedSubscript:
setEventHandler:queue:
createRunloopSourceForStream:
postStreamEvent:forStream:
storeProperty:forKey:
propertyForKey:
_runloopSource
_port
_queue
_handler
_delegate
_error
_status
_propertyStore
streamStatus
inputRoom
inputPtr
read:maxLength:
outputAvailable
outputPtr
write:maxLength:
lock
unlock
synchronized:
setInputSize:
setOutputSize:
setZlibError:forStream:
setStatusForStream:
writeInputFromBuffer:length:
writeInputFromStream:
readOutputToBuffer:length:
readOutputToStream:
_zStream
_inputSize
_outputSize
_input
_output
_writeOffset
_readOffset
Tq,R,N
T^v,R,N
Tr^v,R,N
setDelegate:
initWithData:
initWithCompressedDataStream:
isFileURL
initWithCompressedFileAtURL:
initWithURL:
close
open
stream:handleEvent:
_dispatchMyEvent:
streamError
scheduleInRunLoop:forMode:
getCFRunLoop
removeFromRunLoop:forMode:
_handlePendingInput
hasBytesAvailable
setCompletedUnitCount:
setProperty:forKey:
class
self
performSelector:
performSelector:withObject:
performSelector:withObject:withObject:
isProxy
isKindOfClass:
conformsToProtocol:
respondsToSelector:
retain
release
autorelease
retainCount
zone
superclass
debugDescription
TQ,R
T#,R
T@"NSString",R,C
_postEventToDelegate:
_internal
internal
T@"_SYStreamGuts",R,N,G_internal
inputBufferSize
setInputBufferSize:
outputBufferSize
setOutputBufferSize:
TQ,N
onOpenComplete
setOnOpenComplete:
onBytesAvailable
setOnBytesAvailable:
onSpaceAvailable
setOnSpaceAvailable:
onEndOfFile
setOnEndOfFile:
onError
setOnError:
onClose
setOnClose:
T@?,C,N
bytesThroughput
TQ,R,N
progress
setProgress:
T@"NSProgress",&,N
initWithFileAtPath:
getBuffer:length:
_stream
_onOpenComplete
_onBytesAvailable
_onSpaceAvailable
_onEndOfFile
_onError
_onClose
_progress
_byteCount
T@?,C,N,V_onOpenComplete
T@?,C,N,V_onBytesAvailable
T@?,C,N,V_onSpaceAvailable
T@?,C,N,V_onEndOfFile
T@?,C,N,V_onError
T@?,C,N,V_onClose
TQ,R,N,V_byteCount
T@"NSProgress",&,N,V_progress
initToBuffer:capacity:
initWithDestinationStream:
initToCompressedFileAtURL:shouldAppend:
initToMemory
hasSpaceAvailable
compressionLevel
setCompressionLevel:
Tq,N
initToFileAtPath:append:
initWithURL:append:
_level
Tq,N,V_level
filePathURL
absoluteURL
_url
_file
stringByStandardizingPath
initWithString:
appendFormat:
isNSString__
path
setAttributes:ofItemAtPath:error:
_append
_class
_internalLock
errorWithDomain:code:userInfo:
numberWithInt:
setUserInfo:
hasUserInfo
userInfo
_userInfo
Ti,N,V_code
T@"NSData",&,N,V_userInfo
setProperties:
raise:format:
properties
encodeObject:forKey:
decodeObjectOfClass:forKey:
supportsSecureCoding
encodeWithCoder:
initWithCoder:
TB,R
initWithProperties:
_properties
T@"NSDictionary",&,N,V_properties
SYObjectWithData:
decodeChangeData:fromProtocolVersion:ofType:
objectAtIndexedSubscript:
integerValue
changeObjectWithSerializer:encodedByVersion:
changeObjectWithSerializer:
degenerateChange
initWithSourceArray:decoder:
compatibilityVersion
setCompatibilityVersion:
_source
_types
_decoder
_isSYObjectDataArray
_compatibilityVersion
Tq,N,V_compatibilityVersion
initWithCount:
_waitSemaphoreWithTimeout:
_signalSemaphore
_ensureSemaphore
invalidate
waitWithTimeout:
signal
_sem_port
_count
_signals
_invalidated
numberWithUnsignedInt:
setEstimatedChangeCount:
setHasEstimatedChangeCount:
hasEstimatedChangeCount
estimatedChangeCount
_estimatedChangeCount
_has
TB,N
TI,N,V_estimatedChangeCount
addTransportOptions:
setEngine:
setSession:
setTargetedDevice:
transportOptionsCount
clearTransportOptions
transportOptionsAtIndex:
setPeerGenerationID:
transportOptionsType
hasEngine
hasSession
hasTargetedDevice
enqueuedSyncTypeAsString:
StringAsEnqueuedSyncType:
hasPeerID
hasPeerGenerationID
serviceType
setServiceType:
setHasServiceType:
hasServiceType
serviceTypeAsString:
StringAsServiceType:
engine
session
sessionQueueRunning
setSessionQueueRunning:
targetedDevice
enqueuedSyncType
setEnqueuedSyncType:
transportOptions
setTransportOptions:
peerID
peerGenerationID
_engine
_enqueuedSyncType
_peerGenerationID
_peerID
_serviceType
_session
_targetedDevice
_transportOptions
_sessionQueueRunning
T@"NSString",&,N,V_name
T@"SYLogEngineState",&,N,V_engine
T@"SYLogSessionState",&,N,V_session
TB,N,V_sessionQueueRunning
T@"SYLogDeviceState",&,N,V_targetedDevice
Ti,N,V_enqueuedSyncType
T@"NSMutableArray",&,N,V_transportOptions
T@"NSString",&,N,V_peerID
T@"NSString",&,N,V_peerGenerationID
Ti,N,V_serviceType
initWithService:isGStore:highPriority:
intValue
initWithService:isGStore:highPriority:isMasterStore:
initWithService:isGStore:priority:isMasterStore:
initWithService:isGStore:priority:isMasterStore:tracksChanges:
initWithService:priority:asMasterStore:options:
setDelegate:queue:
wrappedObject
encodeSYObject:
changeData
decodeSYObject:
initWithSYObject:type:
dataFromChange:
changeFromData:ofType:
syncStoreWillUpdate:
syncStoreWillUpdate:objectCount:
syncStoreDidUpdate:
syncStoreDidCompleteFullSync:
syncStoreAllObjectsDeleted:
syncStoreAllObjects:
syncStoreShouldPerformInitialFullSync:
beginSyncingAllObjectsForStore:
syncStoreShouldDeleteRemoteObjectsOnFailedFullSync:
syncStore:encounteredErrorInFullSync:
syncStore:encounteredError:context:
syncStoreDidSetupAfterPairing:
syncStoreDidUnpair:
syncStore:sentMessageWithContext:
syncStore:peerFinishedProcessingMessageWithContext:
syncStoreEnqueuedAllFullSyncMessages:context:
resume:
currentSession
priority
setPriority:
defaultMessageTimeout
setDefaultMessageTimeout:
customIDSOptions
setCustomIDSOptions:
hasPairingStore
deliveryQOS
sharedPersistentStoreForService:
inFullSync
currentSyncSendComplete
completedSync
head
setHasChangesAvailable
initWithChanges:
setContext:
setIdsOptions:
setErrorCallback:
setStore:
_signalNextQueuedSession
setOnComplete:
enqueue:
timeToLive
cancel
errorCallback
context
onComplete
changeWithObject:updateType:store:
_enqueueDeltaSessionWithChanges:contextInfo:idsOptions:blockUntilSent:reportError:
addObject:context:idsOptions:error:
addObject:context:idsOptions:
updateObject:context:idsOptions:error:
updateObject:context:idsOptions:
allowsDeletes
deleteObject:context:idsOptions:error:
deleteObject:context:idsOptions:
_transaction:context:idsOptions:blockUntilSent:reportError:
initWithStore:
changeList
setNeedsFullSyncWithContext:idsOptions:
isResetSync
setCompletedSync:
setFullSyncUserInfo:
setFullSyncIDSOptions:
setNeedsResetSync
initWithName:reason:userInfo:
dataWithSYObject:
archivedDataWithRootObject:requiringSecureCoding:error:
initWithIncomingSession:
userContext
options
setTargetQueue:
setSerializer:
idsOptions
setOptions:
setUserContext:
setFetchNextBatch:
isSending
_startIncomingSession:
_startResetSyncSession:error:
dequeue
suspend
service:startSession:error:
service:sessionEnded:error:
service:incomingData:completion:
service:incomingStream:metadata:completion:
service:encounteredError:context:
service:willPreferSession:overSession:
service:willSwitchFromPairingID:toPairingID:
service:didSwitchFromPairingID:toPairingID:
service:targetDeviceProximityChanged:
service:targetDeviceConnectionChanged:
serviceDidPairDevice:
serviceDidUnpairDevice:
encodeSYChangeForBackwardCompatibility:protocolVersion:
addObject:context:
updateObject:context:
deleteObject:context:
addObject:completion:
updateObject:completion:
deleteObject:completion:
addObject:error:
updateObject:error:
deleteObject:error:
initWithBundleIdentifier:
initWithBundleIdentifier:isGStore:highPriority:
initWithService:isGStore:highPriority:isMasterStore:tracksChanges:
initWithServiceName:priority:isMasterStore:
setTimeToLive:
customIDSDeliveryOptions
setCustomIDSDeliveryOptions:
isPaired
setDeliveryQOS:
hasCompletedFullSync
transaction:handlingError:
transaction:completion:
transaction:context:
transaction:context:idsOptions:
blockingTransaction:
blockingTransaction:handlingError:
transaction:context:idsOptions:blockUntilSent:
setNeedsFullSync
service:incomingData:identifier:completion:
service:incomingStream:metadata:identifier:completion:
maxBytesInFlight
setMaxBytesInFlight:
setAllowsDeletes:
syService
sessionOwner
setSessionOwner:
pendingResetSessionOwner
setPendingResetSessionOwner:
delegateQueue
sessionQueue
persistentStore
_qosTargetQueue
_flags
_allowsDeletes
_serializer
_maxBytesInFlight
_syService
_sessionOwner
_pendingResetSessionOwner
_delegateQueue
_sessionQueue
_persistentStore
T@"SYService",R,N,V_syService
T@"SYStoreSessionOwner",&,N,V_sessionOwner
T@"SYStoreResetSessionOwner",&,N,V_pendingResetSessionOwner
T@"NSObject<OS_dispatch_queue>",R,N,V_delegateQueue
T@"SYAtomicFIFO",R,N,V_sessionQueue
T@"SYPersistentStore",R,N,V_persistentStore
T@"<SYStoreDelegate>",W,N,V_delegate
Td,N
T@"<SYSerialization>",&,N,V_serializer
Tq,N,V_maxBytesInFlight
T@"NSDictionary",C,N
TB,N,V_allowsDeletes
paired
TB,R,N,GisPaired
TI,N
isPerformingDeltaSync
setPerformingDeltaSync:
inDeltaSync
willBeginDeltaSync
didEndDeltaSync
syncSession:enqueueChanges:error:
syncSession:didEndWithError:
syncSession:resetDataStoreWithError:
resetDataStoreForSyncSession:completion:
syncSession:rollbackChangesWithError:
syncSession:restartChanges:
syncSession:successfullySynced:
store
_context
_idsOptions
_store
_errorCallback
_onComplete
T@"NSDictionary",C,N,V_context
T@"NSDictionary",C,N,V_idsOptions
T@"SYStore",W,N,V_store
T@?,C,N,V_errorCallback
T@?,C,N,V_onComplete
T@"SYSession",&,N,V_session
removeObjectsInRange:
_sendBufferedChanges:
fetchNextBatch
_buffer
_bufferedState
_fetchNextBatch
T@?,C,N,V_fetchNextBatch
changeCount
_currentIdx
changeType
syncStore:objectAdded:
syncStore:objectUpdated:
syncStore:objectDeleted:
objectIdentifier
sequencer
_type
_wrappedObject
T@"<SYObject>",R,N,V_wrappedObject
dataUsingEncoding:
setExtendedAttributeData:forKey:atURL:error:
isFileReferenceURL
bytes
length
dataForExtendedAttribute:atURL:error:
initWithData:encoding:
data
mutableBytes
setLength:
setExtendedAttributeValue:forKey:atURL:error:
stringForExtendedAttribute:atURL:error:
absoluteString
initWithName:type:typeName:
setEncoder:
_encodedState
getBytes:length:
stateProviderWithName:type:typeName:
updateState:
encoder
_handle
_state
_encoder
T@?,C,N,V_encoder
dataWithPropertyList:format:options:error:
localizedDescription
mutableCopy
errorWithSYError:userInfo:
serviceActivity
_messageExpiredWithSeqno:identifier:
initWithQueue:timerCallback:
lastPathComponent
stringByAppendingString:
UUIDString
fullSessionTimeout
maxConcurrentMessages
perMessageTimeout
service
protocolVersion
_sendSyncBatch:nextState:
_newMessageHeader
identifier
setChunkIndex:
setObjects:
sequenceNumber
_setMessageTimerForSeqno:
syncEngine
combinedEngineOptions:
setIdentifier:forSequenceNumber:
cancelTimerForSequenceNumber:
enqueueSyncRequest:withMessageID:priority:options:userContext:callback:
initWithError:
_notifySessionComplete
removeAllIndexes
_sendSyncStart
sessionDidEnd:withError:
didCompleteSession
_setStateQuietly:
_sendSyncCompleteAndRunBlock:
_waitForMessageWindow
_sendSyncCancelled
_sendSyncRestart
_sessionComplete
dateWithTimeIntervalSinceNow:
addTimerWithFireDate:forSequenceNumber:
_processNextState
didStartSession
_installStateListener
_installTimers
_setupChangeConcurrency
chunkIndex
addIndex:
hasError
errorFromSYErrorInfo:
countOfIndexesInRange:
cancelTimerForIdentifier:
remainingSessionTime
start:
cancelWithError:
_handleBatchAck:error:
_handleBatchSyncEndResponse:error:
_sentMessageWithIdentifier:userInfo:
wasCancelled
_stateUpdateSource
_sessionTimer
_batchIndex
_ackedBatchIndices
_changeFetcherQueue
_changeConcurrencySemaphore
_changeWaitActivity
_sessionActivity
_errorIsLocal
_hasSentEnd
_timers
_sessionStartTime
_canRestart
_canRollback
_cancelled
changeWithChangeObject:serializer:encodeUsingVersion:
timerCount
_peerProcessedMessageWithIdentifier:userInfo:
firstObject
removeObjectAtIndex:
enumerateObjectsUsingBlock:
lastObject
dequeueUntil:
tail
T@,R
typeAsString:
StringAsType:
setSuspended:
setHasSuspended:
hasSuspended
setInSession:
setHasInSession:
hasInSession
setBuffersSessions:
setHasBuffersSessions:
hasBuffersSessions
type
setType:
suspended
inSession
buffersSessions
_buffersSessions
_inSession
_suspended
Ti,N,V_type
TB,N,V_suspended
TB,N,V_inSession
TB,N,V_buffersSessions
_sendComplete
_sendChanges
_sendCancelled
initWithService:transaction:completion:
_message
initWithInterval:backoffFactor:maxRetries:queue:callout:
incrementBackoff
_timer
_interval
_backoffFactor
_maxRetries
_numRetries
setTracksChanges:
setupPairingNotifications
_getPairedDeviceID
setPairedDeviceID:
pairedDeviceID
setupDatabase
sharedInstance
pairingStorePath
_setupMessageCenter_LOCKED
_listenForPrefsChangeNotifications
fullSyncActivityDictionary
removeObserver:
pairingID
fileExistsAtPath:
persistentDomainForName:
_updateMessageCenterPrefs:
boolValue
setEnableTransmissionWindow:
unsignedIntegerValue
setMaxMessagesInFlight:
setMinMessagesInFlight:
registeredNotificationHandlers
setRegisteredNotificationHandlers:
_devicePaired:
addObserver:selector:name:object:
_deviceUnpaired:
messageCenter
valueForProperty:
_obliterate
_isUsingGenericCache
_isPairedWithDevice:
setPersistentStore:
jsonRepresentation
setVectorClockJSON:
dateWithTimeIntervalSinceReferenceDate:
lastMessageReceived
sender
sequenceNumberIsDuplicate:forPeer:
timeIntervalSinceReferenceDate
earlierDate:
resetSequenceNumbersForPeer:
oslog
lastSequenceNumberForPeerID:
postUserNotification:message:
version
_postVersionRejectedForMessageID:
setLastMessageReceived:
newMessageHeader
setInReplyTo:
setSupportedVersions:count:
sendMessage:ofType:respondingTo:userInfo:idsOptions:
setLastSequenceNumber:fromPeer:error:
setOverflowResyncTime:
_pathForMessageCenterCache
initWithIDSServiceIdentifier:launchOnDemandNotification:cacheFolderPath:
mapPBRequest:toResponse:messageID:
recordIncomingMessage:forService:
pbRequest
idsIdentifier
_checkMessageHeader:messageID:
setExpectsResponse:
setRequestSyncID:
handleFullSyncRequest:response:
response
setPbResponse:
recordOutgoingMessage:forService:
send
_recordLastSeqNo:
addRequestHandlerForMessageID:usingBlock:
handleSyncAllObjects:response:
handleBatchSyncStart:
handleBatchSyncEnd:response:
handleBatchSyncChunk:response:
handleChangeMessage:
supportedVersionsCount
supportedVersionsAtIndex:
inReplyTo
pbResponse
accepted
inProgressSyncID
hasInProgressSyncID
lastSyncEndID
performFullSyncToCurrentDBVersion
setWaitingForSyncEndID:
waitingForSyncEndID
addResponseHandler:usingBlock:
processBatchChunkAck:
currentFullSyncID
clearAllChanges
exitFullSyncWithID:error:
_retrySync
_handleIDSOverflowWithError:
updateOutgoingMessageWithIdentifier:forService:sentSuccessfully:sendError:
updateOutgoingMessageWithIdentifier:didReceiveResponse:error:
persistentUserInfo
nextBatchStep
addErrorHandlerForMessageID:usingBlock:
resume
overflowResyncTime
date
timeIntervalSinceNow
performFullSyncIfNecessaryAskingDelegate:
loggingFacility
tracksChanges
initWithPath:loggingFacility:changeTrackingEnabled:
vectorClockJSON
initWithJSONRepresentation:
clocksCount
incrementClockForPeerID:
_vectorClockUpdated
hasClockForPeer:
clockForPeer:
addClocks:
clockValueForPeerID:
clockValueForPeer:
setAccepted:
setInProgressSyncID:
enterFullSyncWithID:ignoring:
remoteStoreRequestFullSync
hasPrefix:
canStartNewSyncSession
alwaysWins
_shouldIgnoreSyncID:
_syncEndedWithSyncID:
reassignCurrentSyncID:
allObjectsCount
remoteStoreAllObjects:fromPeer:clock:
setClockValue:forPeer:
processBatchSyncStart
objects
processBatchChunkAtIndex:encodedObjects:error:
processBatchSyncEnd:
_shouldSkipNonSyncMessages
performFullSync
updateLastIncomingMessageWithError:
syncStore:detectedChangeListBubbleOfSize:
objectForStore:
updateLastIncomingMessageWithProcessingTime:
assignIdentifier:toOutgoingMessage:
messageID
confirmDeliveryOfOutgoingMessage:
setPersistentUserInfo:
setSendTimeout:
requestWithMessageID:
setPbRequest:
setShouldEncrypt:
setResponseTimeout:
wrapMessage:ofType:respondingTo:userInfo:
addEntriesFromDictionary:
setExtraIDSOptions:
sendRequest:
setTimestamp:
setSender:
vectorClock
setVersion:
nextSequenceNumber
setSequenceNumber:
setContextInfo:
commitBlocking:reportError:
_allowDeltaSyncWithContext:error:
handleObjectChanges:contextInfo:idsOptions:blockUntilSent:reportError:
_handleObjectChanges:contextInfo:idsOptions:blockUntilSent:reportError:notifyingTransaction:
_transactionDidComplete:
lastSyncFailed
logChanges:
sendChanges:context:options:sentSignal:
increaseClockForPeerID:by:
logChanges:error:
setFullSyncWasRequestedBySlave:
performFullSyncIfNecessary
_postBatchEndMessageWithState:error:then:
currentLocalVersion
performBatchedSyncToCurrentDBVersion
array
setAllObjects:
fullSyncUserInfo
fullSyncIDSOptions
fullSyncWasRequestedBySlave
objectChanged:sinceVersion:
service:account:incomingOpportunisticData:withIdentifier:fromID:context:
service:didSendOpportunisticDataWithIdentifier:toIDs:
service:account:incomingMessage:fromID:context:
service:account:incomingData:fromID:context:
service:account:incomingUnhandledProtobuf:fromID:context:
service:account:incomingResourceAtURL:fromID:context:
service:account:incomingResourceAtURL:metadata:fromID:context:
service:account:incomingPendingMessageOfType:fromID:context:
service:activeAccountsChanged:
service:devicesChanged:
service:nearbyDevicesChanged:
service:connectedDevicesChanged:
service:linkedDevicesChanged:
service:account:identifier:didSendWithSuccess:error:
service:account:identifier:didSendWithSuccess:error:context:
service:account:identifier:sentBytes:totalBytes:
service:account:identifier:hasBeenDeliveredWithContext:
service:account:identifier:fromID:hasBeenDeliveredWithContext:
service:account:inviteReceivedForSession:fromID:
service:account:inviteReceivedForSession:fromID:withOptions:
service:account:inviteReceivedForSession:fromID:withContext:
service:account:receivedGroupSessionParticipantUpdate:
service:account:receivedGroupSessionParticipantDataUpdate:
serviceSpaceDidBecomeAvailable:
serviceAllowedTrafficClassifiersDidReset:
service:didSwitchActivePairedDevice:acknowledgementBlock:
messageCenter:didReceiveUnknownRequest:
messageCenter:didReceiveIncomingFileTransfer:
messageCenter:didResolveIDSIdentifierForRequest:
messageCenter:didResolveIDSIdentifier:forResponse:
messageCenter:didResolveIDSIdentifier:forFileTransfer:
messageCenter:didSuccessfullySendRequestWithIdentifier:userInfo:
messageCenter:didSuccessfullyDeliverRequestWithIdentifier:userInfo:
messageCenter:failedToSendMessageWithIdentifier:error:userInfo:
messageCenter:activeDeviceChanged:acknowledgement:
messageCenter:nearbyDevicesChanged:
messageCenter:connectedDevicesChanged:
_getPairingStorePath
_batchChunkUnackedIndices
_prefsChanged
setupMessageCenter
_copyPeerClockFromMessageHeaderIfNecessary:
peerState:fromPeer:matchesExpectationForChangeCount:offsetAmount:
setService:
databaseFileName
setDatabaseFileName:
encryptPayloads
setEncryptPayloads:
setAlwaysWins:
setQueue:
setLoggingFacility:
setMessageCenter:
setVectorClock:
setNextBatchStep:
_batchCounter
_tracksChanges
_sendSignals
_syncRetryTimer
_overflowRetryTimer
_overflowRetryError
_deferredFullSync
_transaction
_encryptPayloads
_alwaysWins
_registeredNotificationHandlers
_fullSyncWasRequestedBySlave
_priority
_service
_databaseFileName
_loggingFacility
_pairedDeviceID
_messageCenter
_vectorClock
_nextBatchStep
T@"NSString",&,N,V_service
T@"NSString",&,N,V_databaseFileName
Tq,N,V_priority
TB,N,V_encryptPayloads
TB,N,V_alwaysWins
T@"SYPersistentStore",&,N,V_persistentStore
T@"NSObject<OS_dispatch_queue>",&,N,V_queue
T^{__CFString=},N,V_loggingFacility
T@"NSUUID",&,N,V_pairedDeviceID
TB,N,V_registeredNotificationHandlers
T@"NMSMessageCenter",&,N,V_messageCenter
T@"SYVectorClock",&,N,V_vectorClock
TB,N,V_fullSyncWasRequestedBySlave
T@?,C,N,V_nextBatchStep
newFullSyncContext
_postBatchStartMessageWithState:then:
UUID
unsignedIntValue
sendCompletedForSyncWithID:
_restartBatchSyncWithState:then:
_sendBatchChunk:withState:then:
containsIndex:
removeIndex:
changeTrackingToggled:
isDegenerate:
setKey:
setValue:
value
_key
_value
T@"NSString",&,N,V_key
T@"NSString",&,N,V_value
_accepted
TB,N,V_accepted
T@"SYErrorInfo",&,N,V_error
setRollback:
setHasRollback:
hasRollback
rollback
_rollback
TB,N,V_rollback
_sessionCompleteWithError:
_fetchChanges
_sessionFailed
_changesToSend
setDateFormat:
timeZoneForSecondsFromGMT:
setTimeZone:
initWithRequest:completion:
request
completion
_request
T@"SYStartSyncSession",R,N,V_request
T@?,R,N,V_completion
initWithService:priority:qos:asMasterStore:options:
pathExtension
registerQueue:
initWithName:qosClass:serial:target:
isSuspended
_setupPairingNotifications
targetableDevice
_updateMetaProtocolInfoForDevice:
dispatchQueue
_processPendingChanges
stateForLogging
_deviceTargetabilityChanged:
_deviceRemoved:
compare:options:range:
compare:options:
_protocolVersion:supportsEngineType:
_upgradeEngineTo:
_downgradeEngineForVersion:
deviceClass
systemVersion
systemBuildVersion
_setProtocolVersionForRemoteOSVersion:build:remoteIsWatch:switchingEngines:
_deviceOSInfoChanged:
object
_pause
_suspend
_removePairingStoreDevice
_setupPairingStoreWithDevice:
_dealWithPotentiallyStallingCurrentSession
_signalPairingStoreAvailable
_continue
_ifDelegateImplements:do:then:
isTargetable
_switchToNewTargetedDevice:
knownDevices
_signalPairingStoreUnavailable
removeObserver:name:object:
_handleError:
targetIsNearby
targetConnected
_initializeServiceDB:
_initializeMessaging:
setCocoaTransportOptions:
isMasterStore
initWithService:isReset:
_sendResetRequest
_makeSessionForDeltaSync:
beginSession
reason
setSessionSignpost:
_pathForDataStore
initWithService:queue:
_makeSyncEngineOfType:
setResponder:
_whenSessionEnds:
_swapEngineTo:
_wrapUpCurrentSession:
birthDate
sessionSignpost
endSession
_handleStartSession:completion:
addMessageIDsToIgnore:
dateFromString:
timeIntervalSinceDate:
hasRejectedPeerSession
setHasRejectedPeerSession:
buffersHandshake
_chooseBetweenCollidingSessions::
_willAcquiesceToNewSessionFromPeer:
compare:
_postVersionRejectionMessageForMessageWithID:
shouldIgnoreMessageID:
removeMessageIDFromIgnoreList:
_v1_handleFullSyncRequest:completion:
_v1_handleSyncAllObjects:completion:
_v1_handleBatchSyncStart:completion:
_v1_handleBatchSyncChunk:completion:
_v1_handleBatchSyncEnd:completion:
_v1_handleChangeMessage:completion:
_handleResetRequest:completion:
_handleSyncBatch:completion:
_handleRestartSession:completion:
_handleEndSession:completion:
_peerRejectedVersion:completion:
_v1_handleFullSyncRequestAck:error:
_v1_handleBatchChunkAck:error:
_v1_handleBatchEndResponse:error:
_handleResetResponse:error:
_handleStartSessionResponse:error:
_handleSyncBatchResponse:error:
_handleRestartSessionResponse:error:
_handleEndSessionResponse:error:
URLByDeletingLastPathComponent
initFileURLWithFileSystemRepresentation:isDirectory:relativeToURL:
URLByAppendingPathComponent:
_claimOwnershipOfFileAtURL:error:
removeItemAtURL:error:
_clearOutgoingMessageUUID:
_recordOutgoingMessageUUID:
_readyToProcessIncomingMessages
barrierAsync:
hasMetadata
metadata
unarchiveMetadata:
initWithService:isReset:metadata:
generationID
peerGenerationIDs
setReason:
sessionTimeout
setFullSessionTimeout:
_sessionFromIncomingStartRequest:
_enqueueIncomingStartSessionRequest:withCompletion:
_shouldSession:fromPeer:supercedeSession:ofAge:collisionDetected:
_onSessionStateChangedTo:do:
metadataModified
sessionMetadata
setMetadata:
cancelSessionID
_request:hasValidSessionIDForSession:response:completion:
_handleSyncBatch:response:completion:
_handleRestartSession:response:completion:
_handleEndSession:response:completion:
_swapSessionForVersionChange
_supercededWithSession:
willAcceptMessageWithHeader:messageID:
handleSyncRequest:ofType:response:
handleSyncResponse:ofType:completion:
handleOutOfBandData:completion:
handleFileTransfer:metadata:completion:
handleSyncError:forMessageWithIdentifier:
enqueuedMessageWithID:context:
sentMessageWithID:context:
deliveredMessageWithID:context:
serializeForIncomingSession:
currentDeviceProximityChanged:
currentDeviceConnectionChanged:
extraTransportOptions
T@"NSDictionary",R,N
T@"PBCodable",R,N
targetIsInProximity
targetIsConnected
sessionFailedToCancelMessageUUIDs:
sessionStalenessInterval
setSessionStalenessInterval:
sendingBufferCap
setSendingBufferCap:
engineType
setEngineType:
_serviceName
_defaultPriority
_defaultOptions
_customIDSOptions
_currentSession
_incomingIOQueue
_processSignalSource
_persistentStoreLock
_syncEngine
_rejectingV1SyncSessions
_inFlightSyncRequestIdentifier
_queuedStartSession
_onSessionEnd
_serviceActivity
_stateHandle
_flagLock
_engineType
_defaultMessageTimeout
_sessionStalenessInterval
_sendingBufferCap
_generationID
T@"SYSyncEngine",R,N,V_syncEngine
T@"NSObject<OS_dispatch_queue>",R,N,V_queue
T@"SYPersistentStore",R,N
T@"_SYMultiSuspendableQueue",R,N,V_sessionQueue
T@"NSObject<OS_os_activity>",R,N,V_serviceActivity
T@"NSString",R,N,V_peerID
TI,N,V_engineType
T@"NSString",R,N,V_generationID
T@"NSString",R,N,V_serviceName
Tq,N,V_defaultPriority
Td,N,V_defaultMessageTimeout
Td,N,V_sessionStalenessInterval
T@"SYSession",R
T@"NSDictionary",&,N,V_defaultOptions
Tq,N,V_sendingBufferCap
setPayload:
sendData:options:completion:
doubleValue
outputStreamWithMetadata:priority:options:context:error:
sendData:options:identifier:error:
dataStreamWithMetadata:options:completion:
dataStreamWithMetadata:options:identifier:error:
containsObject:
_handleBatchChunk:completion:
setErrorResolution:
_handleEndSync:completion:
hasSuffix:
initWithPath:logFacility:
_openDBForceRecreate:
_ensureSchema
_prepareStatements
_withDB:
fileExistsAtPath:isDirectory:
removeItemAtPath:error:
_getSchemaVersion
_syncTransaction:block:
componentsJoinedByString:
initWithSharedDBForServiceName:
removeAllMessages
addMessageWithID:ofLength:timeoutTime:
removeAndReturnLengthOfMessageWithID:
removeAndReturnLengthOfMessagesWithIDs:
expiredMessageIDs
lengthOfAllMessagesInFlight
countOfAllMessagesInFlight
dateOfNextMessageExpiry
pushPendingMessageData:timeToLive:
popPendingMessage
countOfPendingMessages
dbRef
_path
_syncQ
_sharedDB
_addMessageInFlight
_getMessageLength
_removeMessageInFlight
_getNextExpireDate
_getExpiredMessageIDs
_getBytesInFlight
_getCountInFlight
_pushPendingMessage
_getPendingMessage
_popPendingMessage
_countPendingMessages
T@"NSArray",R,N
T@"NSDate",R,N
attributesOfItemAtPath:error:
timeIntervalSince1970
initWithTimeIntervalSince1970:
setMessageID:
initWithMessageID:
deviceACKReceived
applicationACKReceived
responseReceived
isComplete
initFiller
setDeviceACKReceived:
setApplicationACKReceived:
setResponseReceived:
_deviceACKReceived
_applicationACKReceived
_responseReceived
_messageID
T@"NSString",C,N,V_messageID
TB,N,V_deviceACKReceived
TB,N,V_applicationACKReceived
TB,N,V_responseReceived
setDidRollback:
setHasDidRollback:
hasDidRollback
didRollback
_didRollback
TB,N,V_didRollback
setCancelSessionID:
hasCancelSessionID
_cancelSessionID
T@"NSString",&,N,V_cancelSessionID
numberWithDouble:
setTimeout:
setHasTimeout:
hasTimeout
timeout
_sequenceNumber
_timeout
_timestamp
_sender
_version
Td,N,V_timestamp
T@"SYPeer",&,N,V_sender
T@"SYVectorClock",&,N,V_state
TI,N,V_version
TQ,N,V_sequenceNumber
Td,N,V_timeout
initWithKeyOptions:valueOptions:capacity:
initWithSharedDatabase:
setUnfinishedSyncTimeout:
_setupSharedDB
_openDBAtPath:
_tableEmpty:db:
_loadOrCreatePeerIDForDB:
_convertTimestamps
_fixPeerInfo
_cacheTTL
_inTransaction:do:
enumerateRangesUsingBlock:
componentsSeparatedByString:
addIndexesInRange:
_decodeIndexSet:
addIndexes:
_encodeIndexSet:
_LOCKED_storeSequenceNumberSet:forPeerID:db:error:
_sequenceNumberSetForPeerID:inDB:
_lastSequenceNumberForPeerID_LOCKED:db:
_loadIgnoreList_LOCKED:
unionSet:
_saveIgnoreList_LOCKED:
removeObject:
sy_unarchivedObjectFromData:
_verifyInTransactionForFullSync
objectId
setCachedChangedSyncIDsVersion:
cachedChangedSyncIDsVersion
cachedChangedSyncIDs
_oldestVersion
setCachedVersionStale:
cachedVersionStale
setCachedChangedSyncIDs:
_dbRef
_storeSequenceNumberSet:forPeerID:
resetSequenceNumber:
setLastSequenceNumber:fromPeer:
ignoringFullSyncWithID:
lastSyncError
durationOfLastFullSync
lastSeenRemoteVersion
logSyncCompletionToRemoteVersion:
unfinishedSyncTimeout
sharedDB
setSharedDB:
_timeToLiveCache
_changeTrackingEnabled
_peerSeqnoSets
_ignoringMessageIDs
_getInFullSync
_getChangeCount
_getNextExpireTime
_purgeExpiredChanges
_insertChange
_getFullsyncSent
_setFullsyncSent
_logSyncComplete
_getChangeIDsSinceVersion
_getLocalVersion
_getOldestVersion
_setVectorClock
_setPeerSeqNo
_getPeerSeqNo
_setPeerSeqNoSet
_enterFullSync
_exitFullSync
_getIgnoringSyncID
_getCurrentSyncID
_getCurrentSyncStartTime
_getLastEndedSyncID
_getWaitingForSyncID
_setWaitingForSyncID
_setAllSentForSyncID
_getAllSentForCurrentSync
_getLastSyncError
_setSyncUserInfo
_getSyncUserInfo
_setSyncIDSOptions
_getSyncIDSOptions
_cachedVersionStale
_unfinishedSyncTimeout
_cachedChangedSyncIDs
_cachedChangedSyncIDsVersion
T@"NSSet",&,N,V_cachedChangedSyncIDs
TQ,N,V_cachedChangedSyncIDsVersion
TB,N,V_cachedVersionStale
T@"_SYSharedServiceDB",&,N,V_sharedDB
performingDeltaSync
TB,N,GisPerformingDeltaSync
T@"NSString",&,N
T@"NSDate",C,N
Td,N,V_unfinishedSyncTimeout
T@"NSError",R,N
T@"NSString",C,N
Td,R,N
lastDBErrorInfo
initForReadingFromData:error:
initRequiringSecureCoding:
encodedData
dataWithBytes:length:
addPeer:
peersCount
clearPeers
peerAtIndex:
peerType
stateAsString:
StringAsState:
setIsReset:
setHasIsReset:
hasIsReset
setPerMessageTimeout:
setHasPerMessageTimeout:
hasPerMessageTimeout
setHasFullSessionTimeout:
hasFullSessionTimeout
setHasCanRestart:
hasCanRestart
setHasCanRollback:
hasCanRollback
setCanceled:
setHasCanceled:
hasCanceled
hasReason
setIsSending:
isReset
setMaxConcurrentMessages:
canceled
peers
setPeers:
_fullSessionTimeout
_maxConcurrentMessages
_perMessageTimeout
_identifier
_peers
_reason
_canceled
_isReset
_isSending
T@"NSString",&,N,V_identifier
Ti,N,V_state
TB,N,V_isSending
TB,N,V_isReset
Td,N,V_perMessageTimeout
Td,N,V_fullSessionTimeout
TQ,N,V_maxConcurrentMessages
T@"SYLogErrorInfo",&,N,V_error
TB,N,V_canRestart
TB,N,V_canRollback
TB,N,V_canceled
T@"NSMutableArray",&,N,V_peers
T@"NSString",&,N,V_reason
_tweakMessageHeader:
distantFuture
changeWithChangeObject:serializer:
_setLocalErrorOccurred
setObject:atIndexedSubscript:
sleepForTimeInterval:
_localErrorOccurred
_sentEnd
_sessionFinished
_setComplete
_sendEndSessionAndError:
_notifyErrorAndShutdown
stateResponders
setIsResetSync:
setExpectsRollbackSupport:
setExpectsRestartSupport:
setSessionTimeout:
_sentStart
supportsFileTransferMessageSend
_startFailedForStateChangeWithError:
_setCancelled
_cancelPendingMessagesReturningFailures
supportsRestart
supportsRollback
setSessionMetadata:
_confirmedStart
_confirmedEnd
_setMessageTimer
_resolvedIdentifierForRequest:
_resolvedIdentifier:forResponse:
_messageTimer
_batchObjectIDsByBatchIndex
_startMessageID
_endMessageID
_batchMessageIDs
_flagsLock
stringFromDate:
processInfo
processName
_setTheory_isEqual:
clocks
setWithArray:
isEqualToSet:
JSONObjectWithData:options:error:
setPeer:
unsignedLongLongValue
hasClockForPeerID:
clockForPeerID:
peer
setClockValue:forPeerID:
removeObjectsAtIndexes:
compactDictionaryRepresentation
dataWithJSONObject:options:error:
increaseClockForPeer:by:
incrementClockForPeer:
callStackSymbols
_endTransaction
_beginTransaction
contextInfo
commit
setCompletion:
_inTransaction
_contextInfo
T@"SYLegacyStore",&,N,V_store
T@"NSDictionary",C,N,V_contextInfo
T@?,C,N,V_completion
_rebuildDeviceList
_clearDeviceList
_deviceDidBecomeActive:
_deviceDidBecomeInactive:
currentTargetableDevice
getAllDevices
initWithNRDevice:
postNotificationName:object:
deviceForNRDevice:
addNRDevice:
removeNRDevice:
nrDevice
objectsPassingTest:
deviceForPairingID:
deviceBecameTargetable:
allDevices
_devices
_currentTargetDeviceUUID
deviceForIDSDevice:
substringFromIndex:
uniqueIDOverride
doesNotRecognizeSelector:
addPropertyObserver:forPropertyChanges:
_updateStateFlagsPostingNotifications:
deviceForNRDevice:fromIDSDevices:
_updateCachedStateForProperty:
isActive
setDeviceClass:
setBuildVersion:
deviceForIDSDeviceID:fromList:
device:propertyDidChange:fromValue:
T@"NSSet",R
T@"SYDevice",R
deviceCode
findMatchingIDSDeviceFromList:
lastActiveDate
hasCachedNearby
setHasCachedNearby:
cachedIsNearby
setCachedIsNearby:
hasCachedConnected
setHasCachedConnected:
cachedConnected
setCachedConnected:
_nrDevice
_pairingID
_pairingStorePath
_deviceClass
_systemVersion
_systemBuildVersion
_lastActiveDate
_hasCachedNearby
_cachedIsNearby
_hasCachedConnected
_cachedConnected
T@"NRDevice",R,N,V_nrDevice
Tq,N,V_state
targetable
TB,R,N,GisTargetable
active
TB,R,N,GisActive
T@"NSString",R,C,N,V_pairingStorePath
T@"NSUUID",R,N,V_pairingID
T@"NSString",R,N,V_deviceClass
T@"NSString",R,N,V_systemVersion
T@"NSString",R,N,V_systemBuildVersion
T@"NSDate",R,N,V_lastActiveDate
TB,N,V_hasCachedNearby
TB,N,V_cachedIsNearby
TB,N,V_hasCachedConnected
TB,N,V_cachedConnected
initWithFormat:value:obfuscated:
format
setFormat:
obfuscated
setObfuscated:
_obfuscated
_format
T@"NSString",&,N,V_format
T@"<NSObject>",&,N,V_value
TB,N,V_obfuscated
items
prefixString
appendString:
_descriptionObfuscated:
addDescriptionFormat:value:
addObfuscatedDescriptionFormat:value:
setPrefixString:
setItems:
_prefixString
_items
T@"NSMutableArray",&,N,V_items
T@"NSString",&,N,V_prefixString
_sessionEnded
_cancelSession
T@"NSObject<OS_os_activity>",R,N,V_sessionActivity
_setCompleted
_sessionCancelled
_sessionRestarted
lastIndex
_postAsyncResetRequestReturningError:
_setStarted
_hasStarted
_midStreamErrorHandled
_isMissingSyncBatches
_hasCompleted
_receivedBatchIndices
_asyncResetGroupToWaitOn
_weakBlockWaitingForReset
initWithCocoaError:
cocoaError
cocoaTransportOptions
T@"NSDictionary",&,N
_SYTemporaryFileURL:
_SYURLForNewTemporaryFile:
setSupportsRollback:
setSupportsRestart:
_metadata
_supportsRestart
_supportsRollback
TB,N,V_supportsRollback
TB,N,V_supportsRestart
T@"NSData",&,N,V_metadata
_chunkIndex
TI,N,V_chunkIndex
_ensureDBSchema
_checkSchemaVersion
_dataFromObject:
_objectFromData:
initWithPath:objectClass:loggingFacility:
initWithSharedDBForService:objectClass:
setObject:forKey:expires:
resetObject:forKey:
enumerateObjectsSortedByExpirationDate:
enumerateObjectsSortedByEnqueueDate:
_objectClass
_fetch
_insert
_reset
_remove
_removeAll
_byDate
_byEnqueueDate
initWithTimeIntervalSinceReferenceDate:
batch
setBatch:
_batch
T@"SYBatchSyncChunk",&,N,V_batch
_hasReceivedEndSync
_queueLock
_incomingBatchQueue
_myDescription
increaseBy:
increment
setWithObjects:
sy_whitelistedClasses
unarchivedObjectOfClasses:fromData:error:
weakToStrongObjectsMapTable
mapTableWithKeyOptions:valueOptions:
idsService
devices
isNearby
isConnected
_hookupMessageHandler
deviceIDFromDevice:
_wrapMessage:ofType:userInfo:
responder
setFileURL:
_fileTransferHeader
sendTimeout
setPbHeaderInfo:
sendFile:
cancelMessageWithID:error:
isInSession
suspendIncomingMessages
resumeIncomingMessages
initWithIDSServiceIdentifier:
transportActivity
setTransportActivity:
_handleError:forMessageID:
_getRequestHeader:
_suspendIncomingMessages
expectsResponse
configureResponse
_resumeIncomingMessages
enumerateIndexesUsingBlock:
_getResponseHeader:
requestIDSIdentifier
payload
subdataWithRange:
setWithObject:
setTargetDeviceIDs:
fileURL
cancelMessagesReturningFailures:
idsQueue
_lookupLock
_requestLookup
_callbackLookup
_activeDevice
_sessionDeviceID
_idsQueue
T@"NSDictionary",C,N,V_customIDSOptions
T@"NSObject<OS_dispatch_queue>",R,N,V_idsQueue
requestSyncID
_inProgressSyncID
_requestSyncID
T@"NSString",&,N,V_requestSyncID
T@"NSString",&,N,V_inProgressSyncID
start
_waitForStartup
initWithCondition:
condition
lockWhenCondition:
currentRunLoop
unlockWithCondition:
runMode:beforeDate:
streamerThread
runLoop
main
_threadRunLoop
_stopRLS
_startupLock
T@"NSRunLoop",R,N
setData:
bytesSent
setBytesSent:
callback
setCallback:
_data
_bytesSent
_callback
T@"NSData",C,N,V_data
TQ,N,V_bytesSent
T@?,C,N,V_callback
_tryToSendData
_completeAllItemsWithError:
_getCompletionBlock
setStreamProperty:forKey:
streamPropertyForKey:
initWithCompressedFileURL:callbackQueue:
writeData:completion:
whenComplete:
hasWrittenData
_callbackQueue
_hasWrittenData
TB,R,N,V_hasWrittenData
initWithLength:callback:
lengthRemaining
setLock:
_length
T{os_unfair_lock_s=I},N,V_lock
TQ,N,V_length
T@"NSMutableData",R,N,V_data
_tryToReadData
appendBytes:length:
readDataOfLength:completion:
exceptionWithName:reason:userInfo:
raise
clearSupportedVersions
addSupportedVersions:
supportedVersions
_supportedVersions
_inReplyTo
T@"NSString",&,N,V_inReplyTo
T^I,R,N
initWithName:attributes:target:
sync:
async:
TB,R,N,GisSuspended
removeDelegate:
_setNextWindowTimeoutFireDate
numberWithUnsignedShort:
setRequestClass:
setResponseClass:
laterDate:
_handleError:context:
_checkForSwitch
_updateExpireTimerWithDate:
setDelegateRequiresACKs:
addDelegate:queue:
appendData:
shouldEncrypt
extraIDSOptions
enableTransmissionWindow
expectsPeerResponse
outgoingResponseIdentifier
setIdsIdentifier:
setIdsContext:
targetDeviceIDs
_buildDataForRequest:options:
sendData:toDestinations:priority:options:identifier:error:
windowResponseTimeout
setDate:
setFromRequest:
delegateRequiresACKs
responseTimeout
pbHeaderInfo
sendResourceAtURL:metadata:toDestinations:priority:options:identifier:error:
getResourceValue:forKey:error:
setSent:
sourceDeviceID
_buildDataForResponse:options:
cancelIdentifier:error:
setSendAcked:
isFromRequest
processAcked
setProcessAcked:
sendAcked
incomingResponseIdentifier
setRequestIDSIdentifier:
setRequestSent:
setRequestPersistentUserInfo:
setSourceDeviceID:
_pbMappingForMessageID:
responseClass
_decodeIncomingRequestData:context:
messageWindowCountEnabled
setMessageWindowCountEnabled:
_timeoutWindowedMessages
requestHandlers
errorHandlers
responseHandlers
_currentBytesInFlight
_expireMessages
actionQ
dropExtantMessages
_sendResponse:
maxMessagesInFlight
minMessagesInFlight
setWindowResponseTimeout:
_serviceIdentifier
_launchNotification
_resumed
_requestHandlers
_errorHandlers
_responseHandlers
_pbMapping
_persistentContextStore
_nextExpireTimerFireDate
_expireTimer
_windowData
_windowTimeout
_windowQueue
_checkedForQWS
_idsIncomingQueue
_enableTransmissionWindow
_delegateRequiresACKs
_transportActivity
_maxMessagesInFlight
_minMessagesInFlight
_windowResponseTimeout
T@"<NMSMessageCenterDelegate>",W,N,V_delegate
TB,N,V_delegateRequiresACKs
T@"IDSService",&,N,V_service
currentBytesInFlight
TQ,R,N,G_currentBytesInFlight
T@"NSObject<OS_os_activity>",&,N,V_transportActivity
T@"IDSService",R,N
T@"NSObject<OS_dispatch_queue>",R,N
TB,N,V_enableTransmissionWindow
TQ,N,V_maxMessagesInFlight
TQ,N,V_minMessagesInFlight
TQ,N,V_maxBytesInFlight
Td,N,V_windowResponseTimeout
setSecond:
localizedStringFromDateComponents:unitsStyle:
T@"NSSet",C,N
_shouldEncrypt
_idsIdentifier
_sendTimeout
_responseTimeout
_persistentUserInfo
_extraIDSOptions
_pbRequest
T@"NMSMessageCenter",W,N,V_messageCenter
T@"NSString",C,N,V_idsIdentifier
T@,&,N,V_pbRequest
T@"NSData",&,N,V_data
TS,N,V_messageID
TQ,N,V_priority
Td,N,V_sendTimeout
Td,N,V_responseTimeout
TB,N,V_shouldEncrypt
T@"NSDictionary",&,N,V_persistentUserInfo
T@"NSDictionary",&,N,V_extraIDSOptions
T@"NSSet",C,N,VtargetDeviceIDs
_fileURL
_pbHeaderInfo
T@"NSURL",&,N,V_fileURL
T@"NSDictionary",&,N,V_metadata
T@,&,N,V_pbHeaderInfo
setTransaction:
isSent
setRequest:
idsContext
requestClass
allowsUnrepliedRequestsForUnitTesting
setAllowsUnrepliedRequestsForUnitTesting:
setResponse:
transaction
_expectsResponse
_response
_idsContext
T@"NSObject<OS_os_transaction>",&,N,V_transaction
TB,N,V_expectsResponse
T@"NMSOutgoingResponse",&,N,V_response
T@"NSString",&,N,VsourceDeviceID
T@"IDSMessageContext",&,N,V_idsContext
requestSent
requestPersistentUserInfo
_requestIDSIdentifier
_requestSent
_requestPersistentUserInfo
_pbResponse
T@,&,N,V_pbResponse
T@"NSString",C,N,V_requestIDSIdentifier
T@"NSDate",&,N,V_requestSent
T@"NSDictionary",&,N,V_requestPersistentUserInfo
T@"NSURL",C,N,V_fileURL
T@"NSDictionary",C,N,V_metadata
_makePBResponse
_sent
T@"NMSIncomingRequest",W,N,V_request
sent
TB,GisSent,V_sent
_requestClass
_responseClass
T#,&,N,V_requestClass
T#,&,N,V_responseClass
decodeIntegerForKey:
decodeObjectOfClasses:forKey:
decodeBoolForKey:
encodeInteger:forKey:
encodeBool:forKey:
_fromRequest
_sendAcked
_processAcked
_date
_targetDeviceIDs
T@"NSDictionary",&,N,V_userInfo
T@"NSDictionary",&,N,V_idsOptions
T@"NSDate",&,N,V_date
fromRequest
TB,N,GisFromRequest,V_fromRequest
TB,N,V_sendAcked
TB,N,V_processAcked
T@"NSSet",C,N,V_targetDeviceIDs
messageSent
TS,R,N
TB,R,N,GisFromRequest
initWithFormat:arguments:
boolForKey:
_peer
T@"SYPeer",&,N,V_peer
TQ,N,V_version
initWithParent:userInfo:
setTotalUnitCount:
T@"NSProgress",R,N
initWithMetadata:
prepare:
finalizeOutput:
outputStream
T@"NSURL",R,N,V_fileURL
T@"NSOutputStream",R,N,V_stream
T@"NSDictionary",R,N,V_metadata
T@"NSProgress",R,N,V_progress
progressWithTotalUnitCount:
initWithURL:metadata:decompressedSize:
inputStream
T@"NSInputStream",R,N,V_stream
_payload
T@"NSData",&,N,V_payload
setObjectId:
setChangeData:
setSequencer:
hasChangeData
hasSequencer
_changeData
_objectId
_sequencer
T@"NSString",&,N,V_objectId
T@"NSData",&,N,V_changeData
T@"NSString",&,N,V_sequencer
setResumeCount:
setLabel:
setTarget:
initWithName:qosClass:serial:
qosClass
barrierSync:
_targetQueue
_resumeCount
_logDescriptor
_latestSuspendBacktraces
_latestResumeBacktraces
TI,R,N
expectsRollbackSupport
expectsRestartSupport
_sessionTimeout
_expectsRestartSupport
_expectsRollbackSupport
_isResetSync
TB,N,V_isResetSync
TB,N,V_expectsRollbackSupport
TB,N,V_expectsRestartSupport
Td,N,V_sessionTimeout
addObjects:
objectsCount
clearObjects
objectsAtIndex:
objectsType
_objects
T@"NSMutableArray",&,N,V_objects
resourceURL
setResourceURL:
_resourceURL
T@"NSURL",C,N,V_resourceURL
T@"NSString",C,N,V_identifier
_resumeIdsQueue
idsOptions:
_crcChecksum:
numberWithUnsignedLong:
recordOutgoingFileTransferAtURL:metadata:identifier:error:forService:
setFileTransferIdentifier:forOutgoingMessagesWithRowIDs:
_handleIncomingSessionFileAtOwnedURL:metadata:identifier:idsContext:
endFileTransferForStream:atURL:target:wasCancelled:messageRows:
_sessionDeviceCanUseSingleMessages
rowIDForPartialMessage:
initWithBytes:length:
idsOptions:forFileTransfer:
_enqueueSingleMessage:withMessageID:priority:options:userContext:callback:
_handleSessionRestart:priority:options:userContext:callback:
_shouldTreatAsSessionEnd:
_reallyHandleSessionRestart:priority:options:userContext:callback:
writeToURL:options:error:
objectForKey:inDomain:
_cancelResponses
_consumeRemainingStreamDataWithIdentifier:completion:
_readNextProtobuf:
_wrapIncomingResponse:ofType:identifier:
_wrapIncomingMessage:ofType:identifier:
_wrapResponse:toRequest:ofType:
_handleError:messageID:streamer:
_handleIncomingStreamDataWithIdentifier:completion:
_handleProtobuf:ofType:identifier:isResponse:withCompletion:
recordIncomingFileTransferAtURL:metadata:identifier:forService:
beginResponseSession
_suspendIdsQueue
endResponseSession
_assumeOwnershipOfURL:error:
storageGuid
_handleIncomingSessionFileAtURL:metadata:identifier:idsContext:
_processNMSMessageData:context:
updateOutgoingFileTransferWithIdentifier:sentSuccessfully:error:
_sessionCanceled
_sessionStartMessage
_outputFileURL
_outputStream
_inputFileURL
_inputStream
_inputPriorityBoostContext
_responseFileURL
_responseStream
_responsesCanceled
_idsService
_sessionDevice
_responseDevice
_idsQueueLock
_idsQueueIsSuspended
_idsQueueResumedLock
_messageRows
_responseMessageRows
_deferredIncomingSessions
_singleMessageUUIDs
_messageMapLock
_messageIDsToSessionIDs
_closureTransaction
_responseSessionTransaction
initWithSyncId:
initWithObjectID:sequencer:
setSyncId:
_syncId
T@"NSString",&,N,V_syncId
T@"NSString",R,N,V_sequencer
_createLog
logMessage:args:
logMessage:
_logOSMessage:args:returnAddress:
facility
setFacility:
_log
_facility
_oslog
T@"NSString",C,N,V_facility
T@"NSObject<OS_os_log>",R,N,V_oslog
setHasResumeCount:
hasResumeCount
hasLabel
hasTarget
resumeCount
label
target
_label
_target
Ti,N,V_resumeCount
T@"NSString",&,N,V_label
T@"NSString",&,N,V_target
seqno
setSeqno:
_seqno
TQ,N,V_seqno
_fireCallbackForSeqno:
_cleanupTimerForSeqno:
allValues
cancelAllTimers
_rwlock
_bySeqno
_byIdent
hasGenerationID
T@"NSString",&,N,V_generationID
_responder
T@"<SYSyncEngineResponder>",W,N
T@"NSObject<OS_os_activity>",R,N,V_transportActivity
T@"SYService",R,W,N,V_service
returnAddress
setReturnAddress:
setObject:
_returnAddress
_object
T^v,N,V_returnAddress
T@,W,N,V_object
addPointer:
isQuiescenceEnabled
setQuiescenceEnabled:
waitForQuiescenceWithTimeout:
notifyOnQuiescence:
incrementAllocationCount:
decrementAllocationCount:
waitForDeallocationCompleteWithTimeout:
notifyOnDeallocationComplete:
_quiescenceQueues
_allocationGroup
_allocations
compact
isMainThread
currentMode
initWithTimeIntervalSinceNow:
initWithPath:
_initializeFilePresentation
_openDB
_letGoForUnitTests:
_closeDB
removeFilePresenter:
initFileURLWithPath:isDirectory:
initWithFilePresenter:
readingIntentWithURL:options:
writingIntentWithURL:options:
presentedItemOperationQueue
coordinateAccessWithIntents:queue:byAccessor:
_ensureCorrectFileOwnership:
createDirectoryAtURL:withIntermediateDirectories:attributes:error:
addFilePresenter:
_openDBFile:
sharedKeySetForKeys:
numberWithUnsignedInteger:
_unpackMetadata:
_keySetForMessageLogTable
dictionaryWithSharedKeySet:
_unpackPBRequest:forMessageID:intoDictionary:
_unpackPBResponse:forMessageID:intoDictionary:
_unpackMessageData:
_getMachTimestamp
longLongValue
_onQueueAsync:
_onQueueSync:
_tableEmpty:
_openDBIfNecessary
markLastIncomingMessageComplete
confirmDeliveryOfOutgoingFileTransfer:
_insertIncoming
_addProcessingTimeIncoming
_addErrorIncoming
_markCompleteIncoming
_insertOutgoing
_updateOutgoingIdentifier
_updateOutgoing
_timestampForID
_reserveRowID
_requestAcked
_logFileActivity
_updateFileOutgoing
_lastIncomingRowID
_preemption_queue
_operations_queue
_presenterOperationQueue
setUnderlyingQueue:
presentedItemURL
accommodatePresentedItemDeletionWithCompletionHandler:
presentedItemDidMoveToURL:
relinquishPresentedItemToReader:
relinquishPresentedItemToWriter:
savePresentedItemChangesWithCompletionHandler:
presentedItemDidChange
presentedItemDidChangeUbiquityAttributes:
presentedItemDidGainVersion:
presentedItemDidLoseVersion:
presentedItemDidResolveConflictVersion:
accommodatePresentedSubitemDeletionAtURL:completionHandler:
presentedSubitemDidAppearAtURL:
presentedSubitemAtURL:didMoveToURL:
presentedSubitemDidChangeAtURL:
presentedSubitemAtURL:didGainVersion:
presentedSubitemAtURL:didLoseVersion:
presentedSubitemAtURL:didResolveConflictVersion:
primaryPresentedItemURL
observedPresentedItemUbiquityAttributes
T@"NSURL",R,C
T@"NSOperationQueue",R,&
operationQ
unpackMessageData:
_LOCKED_allServiceNames
_LOCKED_pruneMessageLogForServices:
_LOCKED_pruneFileTransferLogForServices:
_pruneOldData
_usefulDescription
initWithObjects:
setPeerGenerationIDs:
sentChangeByteCount
sentChangeCount
_paused
_pendingMessageIDs
_rejectedNewSessionFromSamePeer
_sessionStarted
_stateResponders
_setDelegateLock
_options
_userContext
_sessionMetadata
_birthDate
_sessionSignpost
_peerGenerationIDs
T@"NSObject<OS_dispatch_queue>",R,V_queue
Td,N,V_birthDate
TQ,N,V_sessionSignpost
T@"NSMutableDictionary",C,N,V_peerGenerationIDs
T@"<SYSessionDelegate>",W,N,V_delegate
T@"NSObject<OS_dispatch_queue>",&,N
T@"<SYChangeSerializer>",&,N,V_serializer
T@"NSDictionary",C,N,V_options
Tq,N,V_maxConcurrentMessages
T@"NSError",&,N,V_error
TB,R,N,V_isSending
T@"NSDictionary",&,N,V_userContext
T@"NSDictionary",C,N,V_sessionMetadata
signatureWithObjCTypes:
invokeWithTarget:
initWithSYObject:changeType:
methodSignatureForSelector:
forwardInvocation:
_syObject
errorResolution
setHasErrorResolution:
hasErrorResolution
errorResolutionAsString:
StringAsErrorResolution:
_errorResolution
Ti,N,V_errorResolution
hasIdentifier
hasDeviceClass
hasBuildVersion
setHasState:
hasState
buildVersion
_buildVersion
T@"NSString",&,N,V_deviceClass
T@"NSString",&,N,V_buildVersion
TI,N,V_state
clearClocks
clocksAtIndex:
clocksType
setClocks:
_clocks
T@"NSMutableArray",&,N,V_clocks
addAllObjects:
clearAllObjects
allObjectsAtIndex:
allObjectsType
_allObjects
T@"NSMutableArray",&,N,V_allObjects
weakObjectsPointerArray
getBytes:range:
pointerAtIndex:
@24@0:8^{_NSZone=}16
@16@0:8
B24@0:8@16
v24@0:8@16
Q16@0:8
v16@0:8
@"SYMessageHeader"
@"NSString"
@32@0:8@16@24
@"NSMutableSet"
B16@0:8
q16@0:8
v24@0:8q16
@40@0:8@16@24@?32
v20@0:8B16
@"NSMutableArray"
v24@0:8Q16
#16@0:8
@24@0:8Q16
@24@0:8@16
@"_SYSharedServiceDB"
B32@0:8@16^@24
q24@0:8@16
v32@0:8q16@24
v24@0:8^{sqlite3=}16
v32@0:8@?16@24
v32@0:8@16@?24
v24@0:8@?16
B28@0:8@?16B24
B24@0:8@?16
{os_unfair_lock_s="_os_unfair_lock_opaque"I}
^{sqlite3=}
@"NSMutableDictionary"
v32@0:8Q16@24
v32@0:8@16@24
^{__CFRunLoopSource=}
@"NSObject<OS_dispatch_queue>"
@"<NSStreamDelegate>"
@"NSError"
v28@0:8i16@20
^v16@0:8
r^v16@0:8
q32@0:8r^v16q24
q32@0:8^v16q24
{z_stream_s="next_in"*"avail_in"I"total_in"Q"next_out"*"avail_out"I"total_out"Q"msg"*"state"^{internal_state}"zalloc"^?"zfree"^?"opaque"^v"data_type"i"adler"Q"reserved"Q}
@24@0:8:16
@32@0:8:16@24
@40@0:8:16@24@32
B24@0:8#16
B24@0:8:16
Vv16@0:8
^{_NSZone=}16@0:8
B24@0:8@"Protocol"16
@"NSString"16@0:8
@"_SYStreamGuts"16@0:8
v32@0:8@16Q24
v32@0:8@"NSStream"16Q24
@?16@0:8
@?<v@?@"NSStream">16@0:8
v24@0:8@?<v@?@"NSStream">16
@"NSProgress"16@0:8
v24@0:8@"NSProgress"16
q32@0:8*16Q24
B32@0:8^*16^Q24
B32@0:8@16@24
@"NSInputStream"
@"_SYZlibStreamInternal"
@"NSProgress"
@32@0:8*16Q24
@28@0:8@16B24
i16@0:8
q32@0:8r*16Q24
@"NSOutputStream"
@"NSURL"
^{gzFile_s=I*q}
@"_SYStreamGuts"
v20@0:8i16
@"NSData"
v24@0:8@"NSCoder"16
@24@0:8@"NSCoder"16
@"NSDictionary"
@40@0:8@16@24@32
@"NSArray"
@"<SYChangeSerializer>"
@24@0:8q16
B24@0:8d16
v20@0:8I16
I16@0:8
{?="estimatedChangeCount"b1}
@20@0:8i16
i24@0:8@16
@"SYLogEngineState"
@"SYLogSessionState"
@"SYLogDeviceState"
{?="serviceType"b1}
B40@0:8@16@24^@32
v40@0:8@16@24@32
v40@0:8@16@24@?32
v48@0:8@16@24@32@?40
v28@0:8@16B24
B40@0:8@"SYService"16@"SYSession"24^@32
v40@0:8@"SYService"16@"SYSession"24@"NSError"32
v40@0:8@"SYService"16@"NSData"24@?<v@?B@"NSError">32
v48@0:8@"SYService"16@"NSInputStream"24@"NSDictionary"32@?<v@?B@"NSError">40
v40@0:8@"SYService"16@"NSError"24@"NSDictionary"32
@"SYSession"40@0:8@"SYService"16@"SYSession"24@"SYSession"32
v40@0:8@"SYService"16@"NSUUID"24@"NSUUID"32
v28@0:8@"SYService"16B24
v24@0:8@"SYService"16
@32@0:8@16q24
@40@0:8@16q24q32
@"NSData"24@0:8@"<SYChange>"16
@"<SYChange>"32@0:8@"NSData"16q24
@"NSData"24@0:8@"<SYObject>"16
@"<SYObject>"24@0:8@"NSData"16
@"NSData"32@0:8@"<SYChange>"16q24
@"<SYChange>"40@0:8@"NSData"16q24q32
v24@0:8@"<SYObject>"16
v32@0:8@"<SYObject>"16@"NSDictionary"24
v40@0:8@"<SYObject>"16@"NSDictionary"24@"NSDictionary"32
v32@0:8@"<SYObject>"16@?<v@?B@"NSError">24
B48@0:8@16@24@32^@40
B32@0:8@"<SYObject>"16^@24
B48@0:8@"<SYObject>"16@"NSDictionary"24@"NSDictionary"32^@40
@32@0:8@16B24B28
@36@0:8@16B24B28B32
@40@0:8@16B24q28B36
@40@0:8@16B24B28B32B36
@44@0:8@16B24q28B36B40
@36@0:8@16q24B32
B24@0:8^@16
d16@0:8
v24@0:8d16
v52@0:8@16@24@32B40@?44
v32@0:8@?16@?24
v40@0:8@?16@24@32
v44@0:8@?16@24@32B40
v52@0:8@?16@24@32B40@?44
v56@0:8@16@24@32@40@?48
{?="delegateWillUpdate"b1"delegateWillUpdateWithCount"b1"delegateDidUpdate"b1"delegateDidCompleteFullSync"b1"delegateAllObjectsDeleted"b1"delegateAllObjects"b1"delegateShouldPerformInitialSync"b1"delegateBeginSyncingAllObjects"b1"delegateShouldDeleteOnFailedSync"b1"delegateErrorInFullSync"b1"delegateStoreEncounteredError"b1"delegateDidPair"b1"delegateDidUnpair"b1"delegateSentMessage"b1"delegatePeerProcessedMessage"b1"delegateSentLastSyncMessage"b1}
@"<SYStoreDelegate>"
@"<SYSerialization>"
@"SYService"
@"SYStoreSessionOwner"
@"SYStoreResetSessionOwner"
@"SYAtomicFIFO"
@"SYPersistentStore"
I40@0:8@16@?24^@32
I40@0:8@"SYSession"16@?<B@?@"<SYChange>">24^@32
v40@0:8@"SYSession"16@"NSArray"24@?<v@?B@"NSError">32
v32@0:8@"SYSession"16@"NSError"24
B32@0:8@"SYSession"16^@24
v32@0:8@"SYSession"16@?<v@?B@"NSError">24
v32@0:8@"SYSession"16@"NSSet"24
@"SYStore"
@"SYSession"
I24@0:8@?16
@"<SYObject>"
@40@0:8@16@24^@32
@36@0:8@16I24@28
@32@0:8q16@24
v28@0:8@16I24
@"NSObject<OS_dispatch_source>"
@"NSMutableIndexSet"
@"_SYCountedSemaphore"
@"NSObject<OS_os_activity>"
@"_SYMessageTimerTable"
@24@0:8@?16
{?="buffersSessions"b1"inSession"b1"suspended"b1}
@"SYChangeMessage"
@52@0:8d16d24i32@36@?44
v64@0:8@16@24@32@40@48@56
v56@0:8@16@24@32@40@48
v56@0:8@16@24q32@40@48
v52@0:8@16@24@32B40@44
v60@0:8@16@24@32B40@44@52
v56@0:8@16@24@32q40q48
v48@0:8@16@24@32@40
v64@0:8@"IDSService"16@"IDSAccount"24@"NSData"32@"NSString"40@"NSString"48@"IDSMessageContext"56
v40@0:8@"IDSService"16@"NSString"24@"NSArray"32
v56@0:8@"IDSService"16@"IDSAccount"24@"NSDictionary"32@"NSString"40@"IDSMessageContext"48
v56@0:8@"IDSService"16@"IDSAccount"24@"NSData"32@"NSString"40@"IDSMessageContext"48
v56@0:8@"IDSService"16@"IDSAccount"24@"IDSProtobuf"32@"NSString"40@"IDSMessageContext"48
v56@0:8@"IDSService"16@"IDSAccount"24@"NSURL"32@"NSString"40@"IDSMessageContext"48
v64@0:8@"IDSService"16@"IDSAccount"24@"NSURL"32@"NSDictionary"40@"NSString"48@"IDSMessageContext"56
v56@0:8@"IDSService"16@"IDSAccount"24q32@"NSString"40@"IDSMessageContext"48
v32@0:8@"IDSService"16@"NSSet"24
v32@0:8@"IDSService"16@"NSArray"24
v52@0:8@"IDSService"16@"IDSAccount"24@"NSString"32B40@"NSError"44
v60@0:8@"IDSService"16@"IDSAccount"24@"NSString"32B40@"NSError"44@"IDSMessageContext"52
v56@0:8@"IDSService"16@"IDSAccount"24@"NSString"32q40q48
v48@0:8@"IDSService"16@"IDSAccount"24@"NSString"32@40
v56@0:8@"IDSService"16@"IDSAccount"24@"NSString"32@"NSString"40@48
v48@0:8@"IDSService"16@"IDSAccount"24@"IDSSession"32@"NSString"40
v56@0:8@"IDSService"16@"IDSAccount"24@"IDSSession"32@"NSString"40@"NSDictionary"48
v56@0:8@"IDSService"16@"IDSAccount"24@"IDSSession"32@"NSString"40@"NSData"48
v40@0:8@"IDSService"16@"IDSAccount"24@"IDSGroupSessionParticipantUpdate"32
v24@0:8@"IDSService"16
v40@0:8@"IDSService"16@"IDSDevice"24@?<v@?>32
v32@0:8@"NMSMessageCenter"16@"NMSIncomingRequest"24
v32@0:8@"NMSMessageCenter"16@"NMSIncomingFileTransfer"24
v32@0:8@"NMSMessageCenter"16@"NMSOutgoingRequest"24
v40@0:8@"NMSMessageCenter"16@"NSString"24@"NMSOutgoingResponse"32
v40@0:8@"NMSMessageCenter"16@"NSString"24@"NMSOutgoingFileTransfer"32
v40@0:8@"NMSMessageCenter"16@"NSString"24@"NSDictionary"32
v48@0:8@"NMSMessageCenter"16@"NSString"24@"NSError"32@"NSDictionary"40
v40@0:8@"NMSMessageCenter"16@"IDSDevice"24@?<v@?>32
v32@0:8@"NMSMessageCenter"16@"NSArray"24
B48@0:8@16@24Q32^Q40
@44@0:8@16S24@28@36
v52@0:8@16S24@28@36@44
v60@0:8@16@24@32B40@?44@52
B32@0:8@16Q24
^{__CFString=}16@0:8
v24@0:8^{__CFString=}16
@"SYRetryTimer"
@"NSObject<OS_os_transaction>"
^{__CFString=}
@"NSUUID"
@"NMSMessageCenter"
@"SYVectorClock"
B36@0:8I16@20^@28
@"SYErrorInfo"
{?="rollback"b1}
@32@0:8@16@?24
@"SYStartSyncSession"
v36@0:8@16S24@?28
B32@0:8@"SYMessageHeader"16@"NSString"24
v36@0:8@"PBCodable"16S24@?<v@?@"PBCodable"@"NSDictionary">28
v36@0:8@"PBCodable"16S24@?<v@?B@"NSError">28
v32@0:8@"NSData"16@?<v@?B@"NSError">24
v40@0:8@"NSURL"16@"NSDictionary"24@?<v@?B@"NSError">32
v32@0:8@"NSError"16@"NSString"24
v32@0:8@"NSString"16@"NSDictionary"24
v24@0:8@?<v@?>16
@"NSDictionary"16@0:8
@"PBCodable"16@0:8
@44@0:8@16q24B32@36
@48@0:8@16q24I32B36@40
v40@0:8@16@24B32B36
B24@0:8i16I20
v40@0:8:16@?24@?32
@20@0:8B16
@20@0:8I16
B56@0:8@16@24@32d40^B48
@32@0:8@16^@24
B48@0:8@16@24@32@?40
@"<SYServiceDelegate>"
@"_SYMultiSuspendableQueue"
@"SYSyncEngine"
@"_SYQueuedStartSession"
@"SYDevice"
{?="isMaster"b1"hasChanges"b1"needsReset"b1"hasPairingStore"b1"isRunning"b1"registeredForPairingNotifications"b1"remoteProtocolVersion"b3"remoteDeviceIsWatch"b1"isObservingRemoteDeviceProperties"b1"requestedEngineType"b3"assignedEngineType"b3"suspendedForQWS"b1}
B48@0:8@16@24^@32^@40
@48@0:8@16@24^@32^@40
@32@0:8@16^{__CFString=}24
B28@0:8B16@?20
B20@0:8B16
v40@0:8@16Q24d32
Q24@0:8@16
v32@0:8@16d24
^{sqlite3=}16@0:8
^{sqlite3_stmt=}
{?="didRollback"b1}
@"SYPeer"
{?="timeout"b1}
B32@0:8@16^{sqlite3=}24
@24@0:8^{sqlite3=}16
@36@0:8@16r^{__CFString=}24B32
@32@0:8@16^{sqlite3=}24
B48@0:8@16@24^{sqlite3=}32^@40
B40@0:8Q16@24^@32
Q32@0:8@16^{sqlite3=}24
B32@0:8Q16@24
B24@0:8Q16
@"NSSet"
@"SYLogErrorInfo"
{?="fullSessionTimeout"b1"perMessageTimeout"b1"canRestart"b1"canRollback"b1"canceled"b1"isReset"b1}
@"SYMessageStatusRecord"
{?="state"b4"canRestart"b1"canRollback"b1"isResetSync"b1"started"b1"cancelled"b1"completed"b1"remoteStartSent"b1"remoteStartConfirmed"b1"remoteEndSent"b1"remoteEndConfirmed"b1"localErrorOccurred"b1}
v28@0:8B16@?20
@"SYLegacyStore"
v40@0:8@"NRDevice"16@"NSString"24@32
@"NRDevice"
@"NSDate"
@36@0:8@16@24B32
@"<NSObject>"
@36@0:8@16B24@28
@"NSObject<OS_dispatch_group>"
{?="state"b4"canRestart"b1"canRollback"b1"isResetSync"b1"started"b1"cancelled"b1"completed"b1"changedMetadata"b1}
@24@0:8^@16
@40@0:8@16#24^{__CFString=}32
@32@0:8@16#24
@"NSObject<OS_dispatch_semaphore>"
@"SYBatchSyncChunk"
Q24@0:8Q16
v60@0:8@16S24q28@36@44@?52
@56@0:8@16q24@32@40^@48
v28@0:8@16S24
@36@0:8@16S24@28
@"NSMapTable"
@"NSRunLoop"
@"NSConditionLock"
v32@0:8@16@"NSString"24
@24@0:8@"NSString"16
@"SYCompressedFileOutputStream"
@32@0:8Q16@?24
{os_unfair_lock_s=I}16@0:8
v20@0:8{os_unfair_lock_s=I}16
@"NSMutableData"
v32@0:8Q16@?24
@"SYCompressedFileInputStream"
^I16@0:8
I24@0:8Q16
v32@0:8^I16Q24
{?="list"^I"count"Q"size"Q}
v28@0:8S16@?20
v36@0:8#16#24S32
@20@0:8S16
@"IDSService"
@"NMSPersistentDictionary"
@"NMSWindowData"
@"_NMSDispatchQueue"
@"<NMSMessageCenterDelegate>"
@"NSSet"16@0:8
v24@0:8@"NSSet"16
@"<NSObject>"16@0:8
S16@0:8
v20@0:8S16
@"NMSOutgoingResponse"
@"IDSMessageContext"
@"NMSIncomingRequest"
v24@0:8#16
@"NSOutputStream<SYStreamEventHandlerBlocks><SYStreamThroughputCounter>"
@40@0:8@16@24Q32
@"NSInputStream<SYStreamEventHandlerBlocks><SYStreamProgress>"
@32@0:8@16I24B28
@40@0:8@16I24B28@32
v56@0:8@16q24@32@40@?48
@36@0:8@16@24S32
v48@0:8@16S24@28B36@?40
@"_SYOutputStreamer"
@"_SYInputStreamer"
v32@0:8@16*24
v40@0:8r*16*24^v32
@"NSObject<OS_os_log>"
{?="resumeCount"b1}
@"<SYSyncEngineResponder>"
v24@0:8^v16
@"NSPointerArray"
v36@0:8@16S24@28
v44@0:8@16@24B32@36
v36@0:8@16B24@28
@"NSOperationQueue"
@"NSURL"16@0:8
@"NSOperationQueue"16@0:8
v24@0:8@?<v@?@?<v@?>>16
v24@0:8@?<v@?@"NSError">16
v24@0:8@"NSURL"16
v24@0:8@"NSFileVersion"16
v32@0:8@"NSURL"16@?<v@?@"NSError">24
v32@0:8@"NSURL"16@"NSURL"24
v32@0:8@"NSURL"16@"NSFileVersion"24
v28@0:8I16@?20
@"<SYSessionDelegate>"
@36@0:8@16i24@28
@40@0:8@16@24q32
{?="errorResolution"b1}
{?="state"b1}
