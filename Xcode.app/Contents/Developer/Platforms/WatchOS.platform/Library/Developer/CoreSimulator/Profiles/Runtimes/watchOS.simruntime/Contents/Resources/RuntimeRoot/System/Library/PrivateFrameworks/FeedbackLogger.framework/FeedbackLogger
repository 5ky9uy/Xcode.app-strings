@(#)PROGRAM:FeedbackLogger  PROJECT:FeedbackLogger-1
v32@?0@"FLSQLitePersistence"8Q16^B24
done sucessfully
failed
FLErrorDomain
FLCloseAllStores
FLCloseStore
v8@?0
com.apple.feedbacklogger.write
completed successfully
bundleIdentifier
persistentStores
T@"NSMutableDictionary",&,N,V_persistentStores
context
T@"NSObject<FLLoggingContext>",&,N,V_context
T@"NSObject<OS_os_log>",&,N,V_log
persistentStoreCacheTTLTimer
T@"NSObject<OS_dispatch_source>",&,N,V_persistentStoreCacheTTLTimer
persistentStoreCacheTTL
TQ,N,V_persistentStoreCacheTTL
notificationCenter
T@"NSDistributedNotificationCenter",&,N,V_notificationCenter
batchIdentifier
T@"NSString",C,N,V_batchIdentifier
timestampReferenceIdentifier
T@"NSString",C,N,V_timestampReferenceIdentifier
batchSize
TQ,N,V_batchSize
batchStatus
Ti,N,V_batchStatus
processedAttempts
TQ,N,V_processedAttempts
dateCreated
T@"NSString",C,N,V_dateCreated
dateLateProcessed
T@"NSString",C,N,V_dateLateProcessed
dateUploaded
T@"NSString",C,N,V_dateUploaded
open
closed
processing
uploaded
disallowed
dropped
unknown
SELECT batchId FROM batchStatus WHERE status=? ORDER BY rowid ASC;
SELECT batchId FROM batchStatus ORDER BY rowid ASC;
SELECT s.batchId, s.timestampRefId, COALESCE(sum(length(r.payload)), 0), s.status, s.processedAttempts, s.dateCreated, s.dateUploaded, s.dateLastProcessed FROM batchStatus s LEFT JOIN records r ON s.batchId = r.batchId WHERE s.batchId=? group by s.batchId;
@"NSString"12@?0i8
UPDATE batchStatus SET status=? WHERE batchId=?;
UPDATE batchStatus SET processedAttempts=processedAttempts+1 WHERE batchId=?;
UPDATE batchStatus SET dateLastProcessed=datetime('now') WHERE batchId=?;
UPDATE batchStatus SET dateUploaded=datetime('now') WHERE batchId=?;
data_version
INSERT INTO batchStatus(batchId, timestampRefId, dateCreated) VALUES (?, ?, datetime('now'));
UPDATE batchStatus SET status=1 WHERE status=0;
UPDATE batchStatus SET status=1 WHERE status=2;
DELETE FROM records WHERE batchId IN (SELECT batchId FROM batchStatus WHERE (dateUploaded < datetime('now', '-1 day') OR processedAttempts>3 OR dateCreated < datetime('now', '-7 day'))); DELETE FROM batchStatus WHERE batchId IN (SELECT batchId FROM batchStatus WHERE (dateUploaded < datetime('now', '-1 day') OR processedAttempts>3 OR dateCreated < datetime('now', '-7 day')));
BEGIN TRANSACTION;
DELETE FROM records WHERE batchId=?;
DELETE FROM batchStatus WHERE batchId=?;
END TRANSACTION;
ROLLBACK;
DELETE FROM records;
DELETE FROM batchStatus;
PRAGMA user_version = %i;
B12@?0i8
DROP TABLE IF EXISTS records; DROP TABLE IF EXISTS batchStatus;
CREATE TABLE batchStatus(batchId TEXT NOT NULL PRIMARY KEY, timestampRefId TEXT NOT NULL, status INT DEFAULT 0, processedAttempts INT DEFAULT 0, dateCreated TEXT, dateUploaded TEXT, dateLastProcessed TEXT);CREATE TABLE records(batchId TEXT NOT NULL, payload BLOB, FOREIGN KEY (batchId) REFERENCES batchStatus(batchId));
user_version
page_size
page_count
PRAGMA max_page_count = %i;
PRAGMA journal_mode=WAL;
PRAGMA foreign_keys=ON;
INSERT INTO records (batchId, payload) VALUES (?, ?);
SELECT payload FROM records WHERE batchId=?;
v32@?0@"NSString"8Q16^B24
PRAGMA %@;
databasePath
T@"NSString",R,C,N,V_databasePath
T^{sqlite3=},N,V_db
insertRecordsStatement
T^{sqlite3_stmt=},N,V_insertRecordsStatement
iteratePayloadStatement
T^{sqlite3_stmt=},N,V_iteratePayloadStatement
T@"FLLoggingContext",&,N,V_context
T@"NSString",R,C,N,V_bundleIdentifier
configured
TAB,N,V_configured
isEntitled
TI,N,V_isEntitled
maxBatchPayloadInBytes
TQ,N,V_maxBatchPayloadInBytes
maxAllowedDatabaseSizeInBytes
TQ,N,V_maxAllowedDatabaseSizeInBytes
currentBatchIdentifier
T@"NSString",C,N,V_currentBatchIdentifier
currentBatchPayloadSize
TQ,N,V_currentBatchPayloadSize
com.apple.parsecd
FLLogger
@"NSDictionary"8@?0
hash
TQ,R
superclass
T#,R
description
T@"NSString",R,C
debugDescription
TQ,R,N
T@"NSString",R,C,N
fileManager
T@"NSFileManager",R,N
queue
T@"NSObject<OS_dispatch_queue>",R,N
userDefaults
T@"NSUserDefaults",R,N
T@"NSFileManager",&,N,V_fileManager
T@"NSObject<OS_dispatch_queue>",R,N,V_queue
T@"NSUserDefaults",R,N,V_userDefaults
Signposts
com.apple.feedbacklogger
data.sqlite
feedbackLoggerDirectoryURL
T@"NSURL",R,N
kern.bootsessionuuid
Purge batch (%@) %@
Close batch (%@) %@
Received persist request from application (%@) for %lu bytes
Persist request from application (%@) for %lu bytes %@
Received notification to close stores for %@
Purging persistent store cache after inactivity
Received notification to close all stores, closing
Can't getBatchIdsWithStatus, initializeConnection failed
getBatchIdsWithStatus failed
Can't getBatchIdsWithAllStatuses, initializeConnection failed
getBatchIdsWithAllStatuses failed
Can't getBatchIds, no statement
Can't getBatchSize, initialization failed
getBatchMetadata failed
Failed to update status for batch
Failed to update status metadata for batch
Could not infer data_version, assuming 1
Couldn't close open batches, failing
Couldn't prepare batch initializer statement, failing
SQLite initialize new batch failed: %d
Can't purgeBatch, initializeConnection failed
Can't purgeBatch, couldn't begin transaction
Failed to purgeBatch, rolling back transaction
purgeBatch (%s) failed: %d
Can't purgeBatch (%s), statement prep failed
Can't purgeAllBatches, initializeConnection failed
Schema updateVersion failed
Received unexpected schema version, failing migration
Could not infer schema_version, assuming 0
Couldn't infer page_size, failing request to set database size limit
Initialized SQLite persistent store manager for %@
Can't persist blob sizes(%lu) greater than maximum allowed(%llu)
Can't persist, initialization failed
Missing entitlement, skipping persist request
Detected necessary rollover, but couldn't succeed, failing persist request
data persisted
Database quota exceeded, using %llu out of %llu bytes, failing persist request
database quota exceeded
persist request failed
SQLite insertion failed: %d
SQLite open failed: %d
Opened SQLite store %@
Re-using already opened SQLite store %@
Rolled over to new batch with Id(%s)
SQLite statement (%s) prep failed: %d
SQL statement failed - SQL:%s error-code: %d error-message: %s
Failed to execute (%@) in set, rolling back
SQLite iterate payload for batch (%s) failed: %d
SQLite payload blob iteration OOM
Could not infer PRAGMA %@
zPLR
zPLR
zPLR
BatchManagement
FLLogger
BatchMetadata
BatchManager
SchemaManager
FLSQLitePersistence
FLLoggingContext
FLTelemetryReporter
NSObject
FeedbackLogger
persistentStores
allValues
closeOpenBatches
enumerateObjectsUsingBlock:
persistentStoreForApplication:
purgeBatch:
purgeBatchFromBundle:withIdentifier:
closeOpenBatchForBundle:
init
defaultCenter
closeAllStores
addObserver:selector:name:object:
closeStoreForApplicationFromNotification:
removeObserver:
context
queue
dealloc
report:application:onComplete:
length
__dispatched_persistentStoreForApplication:
persist:
errorWithDomain:code:userInfo:
initWithContext:
resetStoreCacheTimer
objectForKeyedSubscript:
pathForApplication:
initWithPath:application:loggingContext:
setObject:forKeyedSubscript:
fileManager
urlForApplication:
URLByStandardizingPath
path
userInfo
objectForKey:
removeObjectForKey:
setPersistentStoreCacheTTLTimer:
persistentStoreCacheTTLTimer
removeAllObjects
persistentStoreCacheTTL
sharedLogger
report:application:
setPersistentStores:
setContext:
setLog:
setPersistentStoreCacheTTL:
notificationCenter
setNotificationCenter:
.cxx_destruct
_persistentStores
_context
_log
_persistentStoreCacheTTLTimer
_persistentStoreCacheTTL
_notificationCenter
batchIdentifier
setBatchIdentifier:
timestampReferenceIdentifier
setTimestampReferenceIdentifier:
batchSize
setBatchSize:
batchStatus
setBatchStatus:
processedAttempts
setProcessedAttempts:
dateCreated
setDateCreated:
dateLateProcessed
setDateLateProcessed:
dateUploaded
setDateUploaded:
_batchStatus
_batchIdentifier
_timestampReferenceIdentifier
_batchSize
_processedAttempts
_dateCreated
_dateLateProcessed
_dateUploaded
initializeConnectionForUseBy:
tryPrepare:preparedStatement:
_getBatchIdsHelper:
initWithUTF8String:
addObject:
UTF8String
_updateMetadataHelperForBatch:query:
_updateStatusHelperForBatch:toStatus:
getIntValueForPragma:into:
UUID
UUIDString
setCurrentBatchIdentifier:
setCurrentBatchPayloadSize:
executeSQLStatement:
executeSQLStatement:usingTransaction:
__purgeStatementHelper:forBatchId:
executeInTransactionMultipleSQLStatements:
getBatchIdsWithStatus:
getBatchIdsWithAllStatuses
getBatchMetadata:batchMetadata:
updateStatusForBatch:toStatus:
getDataVersion
initializeNewBatch
recoverOrphanedProcessingBatches
doBatchesHousekeeping
purgeAllBatches
batchStatusDescription:
getSchemaVersion
updateSchema
stringWithFormat:
maxAllowedDatabaseSizeInBytes
prepareSchema
getCurrentDatabaseSize
setDatabaseSizeLimit
copy
open
prepareStatements
tryRolloverBatchIfNecessary:
bytes
databasePath
dataWithBytes:length:
iteratePayloadForBatch:codeblock:
setDb:
insertRecordsStatement
setInsertRecordsStatement:
iteratePayloadStatement
setIteratePayloadStatement:
bundleIdentifier
configured
setConfigured:
isEntitled
setIsEntitled:
maxBatchPayloadInBytes
setMaxBatchPayloadInBytes:
setMaxAllowedDatabaseSizeInBytes:
currentBatchIdentifier
currentBatchPayloadSize
_configured
_isEntitled
_databasePath
_insertRecordsStatement
_iteratePayloadStatement
_bundleIdentifier
_maxBatchPayloadInBytes
_maxAllowedDatabaseSizeInBytes
_currentBatchIdentifier
_currentBatchPayloadSize
defaultManager
initWithSuiteName:
isEqual:
class
self
performSelector:
performSelector:withObject:
performSelector:withObject:withObject:
isProxy
isKindOfClass:
isMemberOfClass:
conformsToProtocol:
respondsToSelector:
retain
release
autorelease
retainCount
zone
hash
superclass
description
debugDescription
report:payload:
userDefaults
initWithFileManager:
setFileManager:
_queue
_userDefaults
_fileManager
URLForDirectory:inDomain:appropriateForURL:create:error:
URLByAppendingPathComponent:isDirectory:
feedbackLoggerDirectoryURL
dictionaryWithObjects:forKeys:count:
createDirectoryAtURL:withIntermediateDirectories:attributes:error:
B16@0:8
B32@0:8@16@24
B24@0:8@16
@16@0:8
@24@0:8@16
v16@0:8
v32@0:8@16@24
v40@0:8@16@24@?32
v24@0:8@16
Q16@0:8
v24@0:8Q16
@"NSMutableDictionary"
@"NSObject<FLLoggingContext>"
@"NSObject<OS_os_log>"
@"NSObject<OS_dispatch_source>"
@"NSDistributedNotificationCenter"
i16@0:8
v20@0:8i16
@"NSString"
@20@0:8i16
@24@0:8^{sqlite3_stmt=}16
B32@0:8@16N^@24
B28@0:8@16i24
B32@0:8@16r*24
B32@0:8r*16@24
@40@0:8@16@24@32
B20@0:8i16
B24@0:8Q16
B32@0:8r*16N^^{sqlite3_stmt}24
B28@0:8r*16B24
B24@0:8r*16
B32@0:8@16@?24
B32@0:8@16N^i24
^{sqlite3=}16@0:8
v24@0:8^{sqlite3=}16
^{sqlite3_stmt=}16@0:8
v24@0:8^{sqlite3_stmt=}16
v20@0:8B16
I16@0:8
v20@0:8I16
^{sqlite3=}
^{sqlite3_stmt=}
@"FLLoggingContext"
#16@0:8
@24@0:8:16
@32@0:8:16@24
@40@0:8:16@24@32
B24@0:8#16
B24@0:8:16
Vv16@0:8
^{_NSZone=}16@0:8
B24@0:8@"Protocol"16
@"NSString"16@0:8
v32@0:8@"NSString"16@"NSDictionary"24
@"NSFileManager"16@0:8
@"NSObject<OS_dispatch_queue>"16@0:8
@"NSUserDefaults"16@0:8
@"NSObject<OS_dispatch_queue>"
@"NSUserDefaults"
@"NSFileManager"
