@(#)PROGRAM:CryptoKitPrivate  PROJECT:CryptoKit-1
?__C
ccss_shamir_share_generator
ccss_shamir_share
ccss_shamir_parameters
ccec_cp
ccspake_ctx
ccec_pub_ctx
Errors
ccss_shamir_share_bag
cczp
ccrng_state
HybridShareParameterSelection
suiteParams
ShamirGeneratorPrimeField
Ciphersuite
CiphersuiteDefaults
Backing
BackingHeader
CryptoKitPrivate
SecureBytes
Index
Zeroization
Padme
KeySchedule
APSIC
SupportedCurves
Client
DHPrimitive
PublicKey
DHPrivateKey
DHPublicKey
EphemeralPrivateKey
DHKEM
init(_:)
init(_:)l
init(_:)1W
ShamirShare
CKShamirShareSharedInternalState
ShamirShareGenerator
ShamirShareSecretReconstructor
AEADSealedBox
Nonce
Cipher
Key SealedBox Nonce
RSAPSSSPKI_Bridging
SecretSharingError
SecretSharingErrorType
AlishaSPAKE2Prover
AlishaSPAKE2ProverConfirmed
CryptoKitSecretSharing_HybridSecretSharingGeneratorSerialization
CryptoKitSecretSharing_HybridSecretSharingSharedState
SealedBox
CryptoKitSecretSharing_ShamirShareGeneratorSerialization
Ciphersuite
SecKeySEPInteropErrors
AEAD
Scrypt
HPKE
Sender
Recipient
Context
CryptoKitError
CryptoKitASN1Error
init(_:)G
init(_:)L
init(_:)P
init(_:)T
init(_:)X
init(_:)b
init(_:)B
init(_:)
init(_:)
init(_:)
init(pro
init(pro
init(pro
CKSecretSharing
CKHybridSecretShareInternalState
HybridGenerator
HybridReconstructor
HybridSecretShare
SymmetricKeySize
SymmetricKey
PublicKey
KEMPublicKey
fromKEM
KEMPrivateKey
com.apple.cryptokit.rsabssa
Unexpected Salt Size
corecrypto_error
AESGCMKeyForCKHybridSecretSharing
AESGCMNonceForCKHybridSecretSharing
_TtCV16CryptoKitPrivate11SecureBytes7Backing
CryptoKitPrivate/HPKE-AEAD.swift
ExportOnly should not return a nonce size.
Serialized Share not large enough
/Library/Caches/com.apple.xbs/Sources/CryptoKit_Sim/CryptoKit-85.40.2/CryptoKitPrivate/Secret Sharing/CKRawShamirSecretSharing.swift
Serialized share's version is not supported
Failed in ccss_shamir_share_generator_init with error 
init(threshold:secret:supportedPrime:)
Failed in ccss_shamir_share_generator_init secret is not smaller than prime
Share index must be greater than 0 and less than 
generateShare(shareIndex:)
CoreCrypto Error in call to underlying CryptoKit calls with error 
 in generateShares
generateShares(_:)
Underlying CryptoKit call had incorrect parameter size in generateShares?
_TtCO16CryptoKitPrivate15CKSecretSharing32CKShamirShareSharedInternalState
threshold
prime
params
Failed in ccss_shamir_share_bag_add_share with error 
recoverSecretFromShamirShares(shares:)
numberOfShares must be at least the threshold
Failed in ccss_shamir_share_bag_recover_secret with error 
Failed in ccss_sizeof_shamir_share_generator_serialization
ccss_shamir_share_generator_serialize failed with error 
Share Index must be greater than 0
generateShamirShare(shareIndex:)
Unexpected error: Shamir Share Generator failed to generate share
Only Protobuf version 1 is supported, provided version 
Unsupported prime and associated parameters in Protobuf Deserialized ShamirSecretSharingSharedState. Must be .p2E128M159
Failed in ccss_shamir_share_generator_deserialize with error 
Failed in ccss_shamir_parameters_init with error 
init(threshold:supportedPrime:)
Threshold must be in [
CryptoKitPrivate/RSASPKI-Bridging.swift
Fatal error
RSAPSSKI_Bridging: Unexpected Hash Function
CryptoKitPrivate.RSAPSSSPKI_Bridging
_TtC16CryptoKitPrivate19RSAPSSSPKI_Bridging
@32@0:8@16^@24
Q16@0:8
r^{ccdigest_info=QQQQ*^v^?^?}16@0:8
v16@0:8
backingStruct
The scrypt derivation did not return a result of the expected length, or failed.
CryptoKitPrivate.AlishaSPAKE2Prover
init()
CryptoKitPrivate.AlishaSPAKE2ProverConfirmed
_TtC16CryptoKitPrivate18AlishaSPAKE2Prover
@48@0:8@16@24@32Q40
@16@0:8
@32@0:8@16@24
spakeCtxData
z0_self
z1_self
_TtC16CryptoKitPrivate27AlishaSPAKE2ProverConfirmed
alishaKey
KEnc
KMac
KRMac
SymmetricLTS
Kble_intro
Kble_oob_master
T@"NSData",N,R,ValishaKey
T@"NSData",N,R,VKEnc
T@"NSData",N,R,VKMac
T@"NSData",N,R,VKRMac
T@"NSData",N,R,VSymmetricLTS
T@"NSData",N,R,VKble_intro
T@"NSData",N,R,VKble_oob_master
T@"NSData",N,R,VM2
CryptoKitSecretSharing.ShamirShareGeneratorSerialization
CryptoKitSecretSharing.HybridSecretSharingGeneratorSerialization
version
sharedState
keyToBeShared
sealedBox
CryptoKitSecretSharing.HybridSecretSharingGeneratorSerialization.SealedBox
nonce
ciphertext
CryptoKitSecretSharing.HybridSecretSharingSharedState
ciphersuite
includeThreshold
includeAuthenticatedData
authenticatedData
insecureToChangeIncludeMessageEntropy
shamirGeneratorState
AES_GCM_256_128
ExportOnly should not return a tag size.
_TtC16CryptoKitPrivate6Scrypt
@56@0:8@16@24q32Q40I48I52
init(threshold:secret:associatedData:includeADInShares:includeThresholdInShares:ciphersuite:insecureToChangeIncludeMessageEntropy:)
/Library/Caches/com.apple.xbs/Sources/CryptoKit_Sim/CryptoKit-85.40.2/CryptoKitPrivate/Secret Sharing/CKHybridSecretSharing.swift
 Only support version 1 serializations, this is version 
 Serialization must contain sharedState 
 and a sealedBox 
 Serialized key length does not match provided ciphersuite parameters 
 vs. expected (state.cSuiteParams.gcmKeyByteCount)
 Serialized nonce length does not match provided ciphersuite parameters 
 Serialized sealed box nonce length does not match provided ciphersuite parameters 
 Serialized sealed box tag length does not match provided ciphersuite parameters 
 Failure creating nonce from serialized data
Share Index must be greater than 0 and <= 
 in recoverSecret
recoverSecret(shares:)
Error with Authentication in opening  GCM sealed box contained in ciphertext in recoverSecret
Underlying CryptoKit call had incorrect parameter size in recoverSecret?
Recomputed GCM Ciphertext does not match the one embedded in shares
numberOfShares must be greater than threshold
Failure to create protobuf from serialized data
CryptoKitPrivate/CKHybridSecretSharing.swift
_TtCO16CryptoKitPrivate15CKSecretSharingP33_CE506D4359C10354E8EAAF853DBEE0AA32CKHybridSecretShareInternalState
includeADInShares
includeAccessStructureInShare
highEntropySecrets
associatedData
cipherSuite
cSuiteParams
tempShare
ccShamirState
recoverHybridSecretKeyFromShamirShares(shareArray:)
Shares numbers (not necessarily indexes) 
 in the array are inconsistent
generateBaseShareofHybridKey(shareIndex:)
Unsupported Version in Protobuf Deserialized HybridSecretSharingSharedState
Unsupported ciphersuite in Protobuf Deserialized HybridSecretSharingSharedState. Must be .aesGcm256128
Failed in ccss_shamir_parameters_init_bridge (ccss_shamir_parameters_init) with error 
init(threshold:authenticatedData:includeADInShares:includeThresholdInShares:ciphersuite:insecureToChangeIncludeMessageEntropy:)
GSg_SiSvSgtXCSg
$ss12CaseIterableP
$sSx
$sSm
$sSM
$sSk
$sSK
$sST
$sSl
$s10Foundation12DataProtocolP
ySay
ySay
GAC_G
$s16CryptoKitPrivate11ZeroizationP
_pSg
9PublicKey
$s16CryptoKitPrivate3KEMP
$s16CryptoKitPrivate11DHPrimitiveP
$s16CryptoKitPrivate12DHPrivateKeyP
9PublicKey
$s16CryptoKitPrivate11DHPublicKeyP
19EphemeralPrivateKey
_06PublicC0
19EphemeralPrivateKey
19EphemeralPrivateKey
_06PublicC0
AabcDQZ
ySay
ySo9CKSSShareCG
$s16CryptoKitPrivate13KEMPrivateKeyP
$s16CryptoKitPrivate12KEMPublicKeyP
$s16CryptoKitPrivate13AEADSealedBoxP
5Nonce
$s16CryptoKitPrivate6CipherP
5Nonce
9SealedBox
So8NSObjectC
yypG
So6NSDataC
ySi_
Sg_ABt
Sg_ABt
$sSY
12sharedSecret_
12encapsulatedt
5error_t
ySay
GAC_G_Sit
ySay
GACG
9PublicKey
7fromKEM
_9PublicKey
7fromKEM
is_prover
aad_len
state
bitlen
funcs
threshold
field
degree
generate
params
share_count
inconsistentParameters
exportOnlyMode
inconsistentPSKInputs
expectedPSK
unexpectedPSK
outOfRangeSequenceNumber
ciphertextTooShort
AllCases
AESGCM_256_128
thresholdMin
thresholdMax
maxNumOfShares
gcmKeyByteCount
shareRandomnessByteCount
gcmIVByteCount
gcmTagByteCount
prime
gcmKeyLabel
gcmNonceLabel
P2E128M159
AllCases
aead
P256_SHA256_AES_GCM_128
P384_SHA384_AES_GCM_256
P521_SHA512_AES_GCM_256
Curve25519_SHA256_ChachaPoly
count
capacity
backing
Stride
SubSequence
Element
Index
Indices
Iterator
Regions
offset
sequenceNumber
nonce
exporterSecret
ciphersuite
AllCases
p256
p384
p521
curveParams
pointSizeBytes
publicKeyBytes
apsicStateBytes
apsicCastPtr
AllCases
HKDF_SHA256
HKDF_SHA384
HKDF_SHA512
PublicKey
version
threshold
prime
params
tempShare
ccShamirState
state
PublicKey
EphemeralPrivateKey
fromKEM
backingStruct
type
corecryptoError
cryptoKitError
line
function
file
description
genericSecretSharingError
incorrectParameterSize
authenticationFailure
underlyingCoreCryptoError
incorrectThresholdSize
fewerSharesThanThreshold
tooManySharesRequested
underlyingSecurityError
notEnoughSharesForReconstruction
sharesAreInconsistent
invalidShares
issueInSecretReconstruction
underlyingCryptoKitError
shareADandProvidedADareInconsistent
underlyingProtobufError
unsupportedShareVersionNumber
noSecretProvidedToInitializerForShareGeneration
errorInDeserializationParameters
unsupportedVersion
spakeCtxData
z0_self
z1_self
alishaKey
KEnc
KMac
KRMac
SymmetricLTS
Kble_intro
Kble_oob_master
version
prime
threshold
shamirGeneratorState
unknownFields
nonce
ciphertext
ciphersuite
includeThreshold
includeAuthenticatedData
authenticatedData
insecureToChangeIncludeMessageEntropy
keyToBeShared
_sharedState
_sealedBox
AllCases
UNRECOGNIZED
aesGcm256128
RawValue
missingSecKeyAttributes
missingTokenOID
AES_GCM_128
AES_GCM_256
chaChaPoly
exportOnly
AllCases
context
encapsulatedKey
AllCases
P256_HKDF_SHA256
P384_HKDF_SHA384
P521_HKDF_SHA512
Curve25519_HKDF_SHA256
keySchedule
encapsulated
PublicKey
EphemeralPrivateKey
fromKEM
underlyingCoreCryptoError
incorrectKeySize
incorrectParameterSize
authenticationFailure
wrapFailure
unwrapFailure
invalidFieldIdentifier
unexpectedFieldType
invalidObjectIdentifier
invalidASN1Object
invalidASN1IntegerEncoding
truncatedASN1Field
unsupportedFieldLength
invalidPEMDocument
includeADInShares
includeAccessStructureInShare
highEntropySecrets
threshold
associatedData
cipherSuite
cSuiteParams
params
tempShare
ccShamirState
state
keyToBeShared
sealedBox
version
shareNumber
shamirSecretShare
nonce
ciphertext
authenticatedData
bitCount
RSABSSATokenBlinder
RSABSSATokenWaitingActivation
RSABSSATokenReady
RSABSSATokenIssuer
initWithLength:
bytes
length
mutableBytes
errorWithDomain:code:userInfo:
hashFunction
saltByteCount
numberWithUnsignedLongLong:
dictionaryWithObjects:forKeys:count:
init
keyIDFromSPKI:
initWithData:error:
publicKeyBytes
setParamsForSize:params:error:
verifyFullyParsedASN1:end:error:
dataWithLength:
numberWithInteger:
initWithBlindingInverse:blindedMessage:tokenContent:tokenBlinder:ciphersuite:
publicKey
initWithPublicKey:error:
tokenWaitingActivationWithContent:error:
keyId
.cxx_destruct
_ciphersuite
_ciphersuiteModulusByteCount
_publicKey
_keyId
T@"NSData",R,&,N,V_keyId
blindingInverse
tokenBlinder
tokenContent
initWithTokenContent:tokenSignature:keyId:
activateTokenWithServerResponse:error:
blindedMessage
_blindedMessage
_blindingInverse
_tokenBlinder
_tokenContent
T@"NSData",R,&,N,V_blindingInverse
T@"RSABSSATokenBlinder",R,&,N,V_tokenBlinder
T@"NSData",R,&,N,V_tokenContent
T@"NSData",R,&,N,V_blindedMessage
signature
_signature
T@"NSData",R,&,N,V_signature
initWithKeyByteCount:
blindSign:error:
setPublicKey:
_rsaPrivateKey
T@"NSData",&,N,V_publicKey
initWithBytes:length:
initWithParams:x:y:
share
initWithParams:share:
dealloc
dataUsingEncoding:
subdataWithRange:
initWithPassword:salt:authenticatedData:keyDerivationCost:
getX
processResponseWithY:M1:
alishaKey
KEnc
KMac
KRMac
SymmetricLTS
Kble_intro
Kble_oob_master
deriveKeyWithPassword:salt:outputSize:cost:blockSize:parallelization:
initWithData:
version
hasThreshold
hasAssociatedData
shareX
shareY
ciphertext
associatedData
threshold
setVersion:
setShareX:
setShareY:
setHasThreshold:
setAssociatedData:
setIv:
setCiphertext:
setTag:
data
setThreshold:
@24@0:8@16
^{ccrsa_pub_ctx=QQ^{cczp_funcs}[0Q]}16@0:8
B40@0:8r*16r*24^@32
B40@0:8Q16@24^@32
@32@0:8@16^@24
@16@0:8
v16@0:8
r^{ccrsabssa_ciphersuite=}
[514{ccrsa_pub_ctx="pb_n"Q"pb_bitlen"Q"pb_funcs"^{cczp_funcs}"pb_ccn"[0Q]}]
@"NSData"
@56@0:8@16@24@32@40r^{ccrsabssa_ciphersuite=}48
@"RSABSSATokenBlinder"
@40@0:8@16@24@32
@24@0:8Q16
v24@0:8@16
[167{ccrsa_full_ctx="pb_n"Q"pb_bitlen"Q"pb_funcs"^{cczp_funcs}"pb_ccn"[0Q]}]
