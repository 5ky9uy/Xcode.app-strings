x-apple-reminderkit
-[RemindersAssistantRetrieveReminder performWithCompletion:]
hash
TQ,R
superclass
T#,R
description
T@"NSString",R,C
debugDescription
tel:
facetime:
facetime-audio:
%@%@
mailto:%@?subject=%@
mailto:%@
sms:%@
RMActionForSAPayload
payload.userActivity.internalGUID is unexpectedly nil
v24@?0@"NSUserActivity"8@"NSError"16
v32@?0@"NSUUID"8@"NSString"16@"NSError"24
failed to fetch user activity for id: %@
mailto
RMSAPayloadForActionURL
com.apple.reminders.fakeUserActivityUUID
RMDateComponentsFromOffset
RMEKReminderFromSAReminder
RMEKReminderFromSAReminder has been deprecated
RMSAReminderFromEKReminder
RMEKCalendarFromSAReminderList
RMEKCalendarFromSAReminderList has been deprecated
subject
Could not fetch reminder to delete: %@
Unable to delete reminder: %@
Unable to delete list: %@
No such object to delete
-[RemindersAssistantSearch performWithCompletion:]
Error searching for reminder: %@
We weren't granted access to EventKit. %@
+[EKEventStore(RemindersAssistant) _ra_performBlock:]_block_invoke
v20@?0B8@"NSError"12
-[RemindersAssistantListSearch _perform]
com.apple.reminders.assistant
List disambiguation snippet title - list name w/account name in parens
%@ (%@)
-[RemindersAssistantListSearch performWithCompletion:]
%ld:
x-apple-reminder-list://
com.apple.reminder.list.name
q24@?0@"EKCalendar"8@"EKCalendar"16
eventStore
T@"EKEventStore",&,N,V_eventStore
finalAnchor
T@"NSString",&,N,V_finalAnchor
postAnchors
T@"NSMutableArray",&,N,V_postAnchors
domainObjects
T@"NSMutableArray",&,N,V_domainObjects
Failed to save snooze update: %@
Reminders should at least have a subject
Lists should at least have a title
Failed to commit reminder: %@
-[RemindersAssistantCommitReminder commitReminder:]
Could not commit reminder due to an unknown error.
Failed to fetch an account to add list to: %@
No accounts that support list creation found
Failed to commit list: %@
Could not commit list due to an unknown error.
-[RemindersAssistantCommitReminder updateReminderFromSAReminder:withSaveRequest:fromStore:failure:]
No list to add reminder to.
-[RemindersAssistantCommitReminder createReminderFromSAReminder:withSaveRequest:fromStore:failure:]
-[RemindersAssistantCommitReminder listForSAReminder:fromStore:]
-[RemindersAssistantCommitReminder setDueDateComponentForSAReminder:onChangeItem:]
-[RemindersAssistantCommitReminder setRecurrenceRuleForSAReminder:onChangeItem:failure:]
We got a recurrence from the server that didn't have a known frequency.
-[RemindersAssistantCommitReminder setDateTimeAlarmForSAReminderDateTimeTrigger:onChangeItem:]
com.apple.reminders
init
identifiers
countByEnumeratingWithState:objects:count:
identifier
scheme
isEqualToString:
host
cdEntityName
objectIDWithURL:
fetchReminderWithObjectID:error:
saReminderFromReminder:
addObject:
fetchListWithObjectID:error:
listObject
objectID
urlRepresentation
setIdentifier:
name
setName:
setObjects:
dictionary
isEqual:
class
self
performSelector:
performSelector:withObject:
performSelector:withObject:withObject:
isProxy
isKindOfClass:
isMemberOfClass:
conformsToProtocol:
respondsToSelector:
retain
release
autorelease
retainCount
zone
hash
superclass
description
debugDescription
performWithCompletion:
performWithCompletion:serviceHelper:
initWithDictionary:
recipient
URLFragmentAllowedCharacterSet
stringByAddingPercentEncodingWithAllowedCharacters:
phoneCallType
stringWithFormat:
recipientsTo
componentsJoinedByString:
subject
recipients
count
objectAtIndex:
URLWithString:
userActivity
internalGUID
initWithUUIDString:
commandFailedWithReason:
_fetchUserActivityWithUUID:completionHandler:
_currentUserActivityUUIDWithOptions:completionHandler:
userActivityPayload
setInternalGUID:
setIsEligibleForReminders:
setUserActivity:
offsetValue
intValue
offsetTimeUnit
setYear:
setMonth:
setDay:
setHour:
setMinute:
setSecond:
object
title
setSubject:
calendar
arrayWithObject:
setLists:
phonePayload
resourceSpecifier
stringByRemovingPercentEncoding
setRecipient:
emailPayload
rangeOfString:
substringFromIndex:
substringToIndex:
componentsSeparatedByString:
setRecipientsTo:
smsPayload
setRecipients:
initWithStore:
updateReminder:
removeFromList
saveSynchronouslyWithError:
domainObjectDeleteCompleted
updateList:
removeFromParent
titleAsString
priority
setImportant:
type
setPayload:
universalLink
list
setDueDateAndRecurrenceOnSaReminder:fromReminder:
setTriggersOnSaReminder:fromReminder:
dueDateComponents
date
setDueDate:
timeZone
setDueDateTimeZoneId:
recurrenceRules
firstObject
recurrence
frequency
setFrequencyTimeUnit:
interval
setInterval:
daysOfTheWeek
arrayWithCapacity:
dayOfTheWeek
setDaysOfTheWeek:
daysOfTheMonth
setDaysOfTheMonth:
monthsOfTheYear
setMonthsOfTheYear:
weeksOfTheYear
setWeeksOfTheYear:
daysOfTheYear
setDaysOfTheYear:
setRecurrence:
alarms
trigger
compositeTrigger
dateTimeTrigger
dateComponents
setDate:
setTimeZoneId:
dateTimeTriggerOffset
setOffsetTimeUnit:
timeInterval
numberWithLong:
setOffsetValue:
setDateTimeTrigger:
locationTrigger
structuredLocation
location
setLabel:
latitude
numberWithDouble:
setLatitude:
longitude
setLongitude:
setLocation:
proximity
setTiming:
event
setMobileSpace:
setLocationTrigger:
setTrigger:
completionStatus
boolValue
listName
dueAfter
dueBefore
fetchRemindersMatchingTitle:dueAfter:dueBefore:isCompleted:hasLocation:location:error:
initWithCapacity:
searchCompleted
setResults:
initWithEKOptions:
requestAccessToEntityType:completion:
_ra_eventStoreWithError:
_ra_performBlock:
fetchAccountsWithError:
fetchListsWithError:
addObjectsFromArray:
initWithSearchString:
dictionaryWithCapacity:
matches:matchType:
lowercaseString
objectForKey:
setObject:forKey:
allValues
account
bundleWithIdentifier:
localizedStringForKey:value:table:
listSearchCompleted
_perform
syncDidEnd
dealloc
appendFormat:
length
appendString:
calendarIdentifier
stringByAppendingString:
_sortedArrayOfReminderLists
arrayWithArray:
null
removeObject:
calculateFinalAnchor:
resetWithValidity:
identifierForCalendar:
indexOfObject:
setObject:
setPostAnchor:
readWriteCalendarsForEntityType:
compare:
sortedArrayUsingComparator:
beginSyncWithAnchor:validity:forKey:beginInfo:
beginSyncWithAnchor:validity:count:forKey:beginInfo:
beginSyncWithAnchor:validity:count:forKey:beginInfo:configuration:
beginSyncWithInfo:configuration:
getChangeAfterAnchor:changeInfo:
syncSnapshotForKey:
currentSyncSnapshot
syncVerificationKeyForKey:
.cxx_destruct
eventStore
setEventStore:
finalAnchor
setFinalAnchor:
postAnchors
setPostAnchors:
domainObjects
setDomainObjects:
_eventStore
_finalAnchor
_postAnchors
_domainObjects
offset
currentCalendar
dateByAddingComponents:toDate:options:
timeIntervalSinceDate:
reminderIdentifierList
snoozeFromNowForTimeInterval:
commandSucceeded
commitReminder:
commitList:
_validateReminder:
updateReminderFromSAReminder:withSaveRequest:fromStore:failure:
createReminderFromSAReminder:withSaveRequest:fromStore:failure:
domainObjectCommitCompleted
_validateList:
inactive
updateAccount:
addListWithName:toAccountChangeItem:
initWithString:
setTitle:
completed
isCompleted
setCompleted:
toList
addReminderChangeItem:
payload
setUserActivityFromFromSAPayload:onChangeItem:failure:
accountCapabilities
supportsReminderActions
setActionFromFromSAPayload:onChangeItem:
listChangeItem
setAlarmsForSAReminder:onChangeItem:failure:
setRecurrenceRuleForSAReminder:onChangeItem:failure:
listForSAReminder:fromStore:
addReminderWithTitle:toListChangeItem:
important
setPriority:
setDueDateComponentForSAReminder:onChangeItem:
lists
fetchDefaultListWithError:
initWithUserActivity:
initWithUniversalLink:
dueDate
dueDateTimeZoneId
timeZoneWithName:
localTimeZone
initWithCalendarIdentifier:
setTimeZone:
components:fromDate:
setDueDateComponents:
frequencyTimeUnit
dayOfWeek:
addRecurrenceRuleWithFrequency:interval:daysOfTheWeek:daysOfTheMonth:monthsOfTheYear:weeksOfTheYear:daysOfTheYear:setPositions:end:
removeAllAlarms
setDateTimeAlarmForSAReminderDateTimeTrigger:onChangeItem:
setLocationAlarmForSAReminderLocationTrigger:onChangeItem:failure:
relativeTimeOffset
calendarWithIdentifier:
timeIntervalSinceReferenceDate
dateWithTimeIntervalSinceReferenceDate:
initWithDateComponents:
initWithTrigger:
copy
dateFromComponents:
addAlarm:
locationAlarmForSAReminderLocationTrigger:forAccountCapabilities:failure:
mobileSpace
timing
initWithEvent:
authorizationStatusForBundleIdentifier:
setAuthorizationStatus:forBundleIdentifier:
commandFailedWithErrorCode:
supportsLocation
city
countryCode
postalCode
stateCode
street
postalAddressWithDictionaryRepresentation:
stringFromPostalAddress:style:
whitespaceAndNewlineCharacterSet
stringByTrimmingCharactersInSet:
label
initWithTitle:
doubleValue
initWithStructuredLocation:proximity:
%s Object identifier being retrieved: %@
%s Failed to fetch desired list with error: %@
%s Failed to fetch desired list, no objectID
%s Got action URL: %@
%s Unknown payload: %@
%s Using offset value for date time trigger: %@
%s WARNING: Called deprecated RMEKReminderFromSAReminder
%s WARNING: Called deprecated RMSAReminderFromEKReminder
%s WARNING: Called deprecated RMEKCalendarFromSAReminderList
%s In [RemindersAssistantSearch performWithCompletion:]
%s Creating search predicate with title %@, listTitle %@, limitToCompletedOrIncomplete %d, completed %d, dueAfter %@, dueBefore %@
%s Found %lu reminders
%s Reminder %@ has due date %@
%s %@
%s Reminder account fetch failed with error: %@
%s Reminder list fetch failed with error: %@
%s lists by name: %@
%s results: %@
%s In [RemindersAssistantListSearch performWithCompletion:]
%s Failed with failure: %@
%s Updateing reminder title
%s Updateing reminder completed
%s Could not set action payload %@ on reminder because its source, %@, does not support it
%s Failed to fetch desired list, list has no identifier
%s Failed to fetch default list
%s Populating due date for %@...
%s Reminder has a recurrence %@
%s Adding day of week %@...
%s Frequency: %ld
%s Recurrence: %@
%s dueDate %@, alarmDate %@
RemindersAssistantRetrieveReminder
AFServiceCommand
NSObject
RemindersAssistantDeleteReminder
RemindersAssistantReminderKitConversion
RemindersAssistantUpdate
RemindersAssistantCreateReminder
RemindersAssistantSearch
RemindersAssistant
RemindersAssistantListSearch
RemindersAssistantSyncHandler
AFSyncHandler
RemindersAssistantSnooze
RemindersAssistantCommitReminder
B24@0:8@16
#16@0:8
@16@0:8
@24@0:8:16
@32@0:8:16@24
@40@0:8:16@24@32
B16@0:8
B24@0:8#16
B24@0:8:16
Vv16@0:8
Q16@0:8
^{_NSZone=}16@0:8
B24@0:8@"Protocol"16
@"NSString"16@0:8
v24@0:8@?16
v32@0:8@?16@24
@24@0:8@16
v24@0:8@?<v@?@"NSDictionary">16
v32@0:8@?<v@?@"NSDictionary">16@"<AFServiceHelper>"24
@24@0:8@"NSDictionary"16
v32@0:8@16@24
@24@0:8^@16
v48@0:8@16@24@32@40
v56@0:8@16@24q32@40@48
v64@0:8@16@24q32@40@48@56
v16@0:8
v48@0:8@"NSString"16@"NSString"24@"NSString"32@"<AFSyncBeginInfo>"40
v56@0:8@"NSString"16@"NSString"24q32@"NSString"40@"<AFSyncBeginInfo>"48
v64@0:8@"NSString"16@"NSString"24q32@"NSString"40@"<AFSyncBeginInfo>"48@"<AFSyncConfiguration>"56
v32@0:8@"<AFSyncBeginInfo>"16@"<AFSyncConfiguration>"24
v32@0:8@"NSString"16@"<AFSyncChangeInfo>"24
@"AFSyncSnapshot"24@0:8@"NSString"16
@"AFSyncSnapshot"16@0:8
@"NSString"24@0:8@"NSString"16
v24@0:8@16
@"EKEventStore"
@"NSString"
@"NSMutableArray"
@48@0:8@16@24@32^@40
@32@0:8@16@24
v40@0:8@16@24^@32
@40@0:8@16@24^@32
zPLR
