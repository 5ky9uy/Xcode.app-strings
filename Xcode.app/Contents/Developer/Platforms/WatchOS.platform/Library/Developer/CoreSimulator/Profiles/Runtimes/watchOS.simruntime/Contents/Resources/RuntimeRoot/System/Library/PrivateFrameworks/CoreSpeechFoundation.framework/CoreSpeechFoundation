@(#)PROGRAM:CoreSpeechFoundation  PROJECT:CoreSpeech-1
Trial
assetDownloadfailed
assetFetchfailed
VoiceId
satinitfailed
satmodelfilefailed
satvectorfailed
tdsrfailed
tdsrtimeout
retrainsatfailed
explicituttrejected
toolessaudiofiles
unrecognizedmetadata
delayedscores
missinghomeidforclouduser
voiceidstaleprofiledetected
Audio
didStartWatchDogFire
didStopWatchDogFire
streamDeallocDuringStreaming
resourceNotAvailable
recordStoppedBySessionInterruption
InsufficientPriority
VoiceTrigger
secondPassCompleteWatchDogFire
APLeak
APStuckInTransition
launchSlow
Endpointer
endpointerModelVersionIsNil
v8@?0
CSSampleCountHostTimeConverter
%@-%@
-[CSOSTransaction initWithDescription:]
-[CSOSTransaction dealloc]
corespeech.json
assets.json
speakerRecognition.json
adBlockerPayload.bin
hybridendpointer.json
hybridendpointer_marsh.json
/System/Library/PrivateFrameworks/CoreSpeech.framework
+[CSAsset fallBackAssetResourcePath]
defaultFallbackHearst
defaultFallbackAdBlocker
-[CSAsset initWithResourcePath:configFile:configVersion:assetProvderType:]
+[CSAsset decodeJson:]
-[CSAsset getNumberForKey:category:default:]
-[CSAsset getStringForKey:category:default:]
configVersion:%@ resourcePath:%@ path:%@
MobileAssets
Unknown
+[CSAsset isLeftConfigVersion:newerThanRightConfigVersion:]
Premium
nohash
((?:[a-z]|[0-9])*)\.asset
-[CSAsset assetHashInResourcePath:]
com.apple.corespeech
Framework
::: Initializing CoreSpeech logging...
en_US_POSIX
yyyyMMdd-HHmmss
CSLogInitIfNeeded_block_invoke
com.apple.ssr
::: Initializing SSR logging...
SSRLogInitIfNeeded_block_invoke
-[CSAudioCircularBuffer initWithNumChannels:recordingDuration:samplingRate:]
-[CSAudioCircularBuffer copySamplesFromHostTime:]
-[CSAudioCircularBuffer copySamplesFrom:to:]
-[CSAudioCircularBuffer copySamplesFrom:to:channelIdx:]
-[CSAudioCircularBuffer copybufferFrom:to:]
-[CSAudioCircularBuffer copyBufferWithNumSamplesCopiedIn:]
-[CSAudioCircularBuffer reset]
copySamples
-[CSAudioChunk chunkForChannel:]
-[CSAudioChunk subChunkFrom:numSamples:forChannel:]
-[CSAudioChunk subChunkFrom:numSamples:]
-[CSAudioChunk splitAudioChunkSuchThatNumSamplesReceivedSoFar:reachesACountOf:completionHandler:]
numChannels
numSamples
sampleByteDepth
startSampleCount
hostTime
arrivalHostTimeToAudioRecorder
wasBufferedAudio
data
remoteVAD
-[NSDictionary(XPCObject) _cs_initWithXPCObject:]
-[NSDictionary(XPCObject) _cs_initWithXPCObject:]_block_invoke
B24@?0r*8@"NSObject<OS_xpc_object>"16
-[NSDictionary(XPCObject) _cs_xpcObject]_block_invoke
v32@?0@8@16^B24
CSInitialContinousZeros
CSMaxContinousZeros
CSMidSegmentContinousZeros
start
allocator<T>::allocate(size_t n) 'n' exceeds maximum supported size
+[CSFTimeUtils hostTimeFromSampleCount:anchorHostTime:anchorSampleCount:sampleRate:]
+[CSFTimeUtils sampleCountFromHostTime:anchorHostTime:anchorSampleCount:sampleRate:]
+[CSFTimeUtils macHostTimeFromBridgeHostTime:]
com.apple.da
liveOnHomePod
U+73bmG4kBGj6kpreQXUTQ
InternalBuild
CSSafeSetOutErrorWithNSError
+N9mZUAHooNvMiQnjeTJ8g
+[CSUtils supportHybridEndpointer]
PTQ+ABwag03BwO/CKvIK/A
4D8XW4YwJI7QvyPhv1TEdw
+[CSUtils isIOSDeviceSupportingBargeIn]_block_invoke
BuildVersion
IOPlatformExpertDevice
+[CSUtils deviceHwRevision]
config-number
yyyyMMdd
BluetoothFeatures
AnnounceTelephony
i32@?0^I8^{AudioBufferList=I[1{AudioBuffer=II^v}]}16^^{AudioStreamPacketDescription}24
-[NSNumber(XPCObject) _cs_initWithXPCObject:]
-[NSNumber(XPCObject) _cs_xpcObject]
CSAudioFileReader Queue
-[CSAudioFileReader initWithURL:]
-[CSAudioFileReader prepareRecording:]
-[CSAudioFileReader startRecording]
-[CSAudioFileReader _readAudioBufferAndFeed]
-[CSAudioFileReader stopRecording]
Serial CSPolicy queue
-[CSDispatchGroup leave]
-[NSString(XPCObject) _cs_initWithXPCObject:]
-[NSArray(XPCObject) _cs_initWithXPCObject:]
-[NSArray(XPCObject) _cs_initWithXPCObject:]_block_invoke
B24@?0Q8@"NSObject<OS_xpc_object>"16
-[NSArray(XPCObject) _cs_xpcObject]_block_invoke
v32@?0@8Q16^B24
-[NSData(XPCObject) _cs_initWithXPCObject:]
-[CSAudioChunkForTV initWithXPCObject:]
avgPower
peakPower
timeStamp
audioFormat
streamHandleID
packets
com.apple.voicetrigger
com.apple.voicetrigger.notbackedup
kCSPreferencesJarvisTriggerModeDidChangeDarwinNotification
Phrase Detector Enabled
AttentiveSiri Enabled
AttentiveSiri AudioLogging Enabled
Enable Two Shot Notification
com.apple.demo-settings
StoreDemoMode
File Logging Level
Library
Logs/CrashReporter/VoiceTrigger/audio/
/Logs/CrashReporter/Assistant/smartSiriVolumeContextAwareLogs/
Logs/CrashReporter/Assistant/smartSiriVolumeContextAwareLogs/
-[CSFPreferences getSSVLogFilePathWithSessionIdentifier:]
/tmp
%@/SSV_%@.json
VoiceTrigger/TrialAssetData
VoiceTrigger/adBlocker
/Logs/CrashReporter/Assistant/
SpeechLogs
-[CSFPreferences assistantAudioFileLogDirectory]
siriBC
Second Pass Audio Logging Enabled
Speaker Recognition Audio Logging Enabled
Jarvis Audio Logging Enabled
Jarvis Trigger Mode
Enable SoS Audio Logging
Force VoiceTrigger AP Mode
-[CSFPreferences forceVoiceTriggerAPMode]_block_invoke
Force VoiceTrigger AOP Mode
-[CSFPreferences forceVoiceTriggerAOPMode]_block_invoke
com.apple.corespeech.CSPreferencesSetValueForKey
mobile
com.apple.corespeech._CSNotBackedupPreferencesSetValueForKey
Logs/CrashReporter/CoreSpeech/sos/
-[CSFPreferences getStartOfSpeechAudioLogFilePath]
yyyyMMdd_HHmmss.SSS
%@/%@
Remote VoiceTrigger Delay
Remote VoiceTrigger Endpoint Timeout
VoiceTrigger/interstitial
Myriad File Logging Enabled
Audio Injection Enabled
Programmable Audio Injection Enabled
-[CSFPreferences enableAudioInjection:withKey:]
-[CSFPreferences setAudioInjectionFilePath:]
Audio Injection File Path
-[CSFPreferences audioInjectionFilePath]
-[CSFPreferences audioInjectionFilePath]_block_invoke
SpeakerId Enabled
SpeakerId Score Type
SmartSiriVolume SoftVolume Enabled
HomePod
Mosquito
Audio Session Activation Delay
Max Number Logging Files
Max Number Grading Files
Enable SiriActivation HomePod
Enable SiriActivation watchOS
Overwrite Remote VAD Score
Hearst First Pass Model Version
Hearst Second Pass Model Version
Hearst Fake Model Path
VoiceTrigger Companion Sync Enabled
Enable OpportuneSpeakListener Bypass
Bypass Personalized HeySiri
MultiPhraseVTEnabled
MultiChannelAudioLoggingEnabled
Enable AdBlocker Audio Logging
Is Staggered CAT Download Enabled
Enable Self Trigger Audio Logging
%s Creating OS Transaction for %{public}@
%s Release OS Transaction for %{public}@
%s Fallback asset resource path : %{public}@
%s %{public}@
%s Cannot find corespeech asset from resourcePath : %{public}@
%s Configuration file is not exists : %{public}@
%s Cannot read configuration file : %{public}@
%s Cannot decode configuration json file : %{public}@
%s Configuration json file is not expected format
%s Cannot access to %{public}@ %{public}@ using default value=%{public}@
%s Comparing %{public}@ with %{public}@
%s Invalid rightConfig syntax : %{public}@
%s Invalid leftConfig syntax : %{public}@
%s Not comparable with %{public}@, ignore
%s Failed to create regular expression : %{public}@
%s ::: CoreSpeech logging initialized (%s)
%s ::: SSR logging initialized (%s)
%s numChannels: %{public}lu, recordingDuration: %{public}f, sampleRate: %{public}f
%s Cannot copy samples since this is empty
%s Could NOT copyFrom: %{public}lu to: %{public}lu, retSampleCount: %{public}lu
%s copyBuffer: oldestSample: %{public}lu latestSample: %{public}lu, numSamplesCopied: %{public}lu
%s CSAudioCircularBuffer.reset
%s Invalid request: reqStartSample=%{public}lu, reqEndSample=%{public}lu, oldestSampleInBuffer: %{public}lu, latestSampleInBuffer=%{public}lu
%s channelId %d out of bound %d
%s Cannot generate subChunk since channel(%{public}tu) is larger than number of channels(%{public}tu)
%s Cannot generate subChunk if it reuqest more than it has : %{public}tu %{public}tu %{public}tu
%s SpkrId:: Processing ended at: numSamplesProcessed=%lu, totalSampleCountToReach=%lu
%s xpc object should be XPC_TYPE_DICTIONARY
%s xpcObject key or value is NULL
%s Cannot decode non-plist types of XPC object
%s Cannot encode non-plist types into XPC object : %{public}@
%s Cannot encode key into xpcobject since the key is not NSString class type
%s Delta is larger than anchorHostTime: anchorSampleCount = %{public}lld, sampleTime = %{public}lld, anchorHostTime = %{public}lld
%s Delta is larger than anchorSampleCount
%s Not supported on this platform
%s ERR: %{public}@
%s HEP enabled=%d
%s Device supporting barge-in ? %{public}@
%s Failed to find matching service to IOPlatformExpertDevice
%s Fetched hardware revision : %{public}@
%s Failed to find property "config-number"
%s Cannot create NSNumber if xpcObject is NULL
%s XPC object type should be BOOL, DOUBLE, INT64, or UINT64
%s Cannot create xpcObject if objcType is NULL
%s Cannot create xpcObject since there is no matching type
%s ::: Error reading file %@, err: %d
%s CSAudioFileReader requires prepare recording settings to feed audio
%s CSAudioFileReader only support LinearPCM to feed
%s Setting ExtAudioFileSetProperty failed : %d
%s Starting audio file feed timer, bufferDuration = %f sampleRate = %f, bytesPerFrame = %d, channelsPerFrame = %d
%s ::: Error reading data from audio file : %d
%s Reach to EOF, chunkSize = %d
%s Stopping audio file feed timer
%s unbalanced dispatch_group_enter and leave : ignore we are ignore dispatch_group_leave
%s xpc object string return nil
%s xpc object should be XPC_TYPE_STRING
%s xpc object should be XPC_TYPE_ARRAY
%s xpcObject value is NULL
%s Cannot create NSData with size 0
%s xpc object should be XPC_TYPE_DATA
%s invalid packets
%s Couldn't create SSV log directory at path %{public}@ %{public}@
%s Couldn't create speech log directory at path %{public}@ %{public}@
%s Force enabling VoiceTrigger AP mode ? %{public}@
%s Force enabling VoiceTrigger AOP mode ? %{public}@
%s Couldn't create SoS log directory at path %{public}@ %{public}@
%s enableAudioInection: is only available on internal builds
%s setAudioInjectionFilePath: is only available on internal builds
%s kCSAudioInjectionFilePathKey is not array type
%s kCSAudioInjectionFilePathKey array size = %d
%s kCSAudioInjectionFilePathKey doesn't have NSString as an array entry
zPLR
zPLR
zPLR
zPLR
CSAudioPowerMeter
CSDiagnosticReporter
CSAudioTimeConverter
CSOSTransaction
CSAsset
CSAudioCircularBuffer
CSAudioChunk
CSVoiceTriggerEventInfoProvider
XPCObject
CSAudioZeroFilter
CSFTimeUtils
CSUtils
CSAudioDecoder
CSAudioFileReader
CSPolicy
CSEventMonitorDelegate
NSObject
CSPowerAssertionAccessory
CSDispatchGroup
CSFLPCMTypeConverter
CSAudioChunkForTV
CSFPreferences
CSConfig
init
_reset
_scaleDecayConstants:
_savePeaks:averagePower:maxSample:
peakValueSinceLastCall
setPeakValueSinceLastCall:
setSawNotANumber:
setSawInfinity:
_zapgremlins:
_linearToDB:
_ampToDB:
initWithSampleRate:
reset
processShortBuffer:stride:inFrameToProcess:
processFloatBuffer:stride:inFrameToProcess:
getPeakPowerDB
getAveragePowerDB
.cxx_destruct
_averagePowerI
_averagePowerF
_instantaneousMode
_peak
_maxPeak
_decay
_peakDecay
_averagePowerPeak
_peakHoldCount
_sampleRate
_previousBlockSize
_decay1
_peakDecay1
_clipping
sharedInstance
submitVoiceIdIssueReport:
submitAudioIssueReport:
submitVoiceTriggerIssueReport:
submitEndpointerIssueReport:
submitTrialIssueReport:
inputRecordingSampleRate
hostTimeFromSampleCount:anchorHostTime:anchorSampleCount:sampleRate:
sampleCountFromHostTime:anchorHostTime:anchorSampleCount:sampleRate:
processSampleCount:hostTime:
hostTimeFromSampleCount:
sampleCountFromHostTime:
queue
setQueue:
anchorSampleCount
setAnchorSampleCount:
anchorHostTime
setAnchorHostTime:
_queue
_anchorSampleCount
_anchorHostTime
T@"NSObject<OS_dispatch_queue>",&,N,V_queue
TQ,N,V_anchorSampleCount
TQ,N,V_anchorHostTime
copy
UUID
UUIDString
stringWithFormat:
UTF8String
dealloc
initWithDescription:
_transaction
_description
assetForAssetType:resourcePath:configVersion:assetProvider:
hybridEndpointerAssetFilename
defaultManager
contentsOfDirectoryAtPath:error:
count
firstObject
initWithResourcePath:configFile:configVersion:assetProvderType:
fallBackAssetResourcePath
componentsSeparatedByString:
objectAtIndexedSubscript:
integerValue
stringByAppendingPathComponent:
fileExistsAtPath:
decodeJson:
dataWithContentsOfFile:
JSONObjectWithData:options:error:
localizedDescription
dictionary
objectForKeyedSubscript:
numberWithBool:
getNumberForKey:category:default:
boolValue
resourcePath
assetHashInResourcePath:
path
isEqualToString:
regularExpressionWithPattern:options:error:
length
firstMatchInString:options:range:
numberOfRanges
rangeAtIndex:
substringWithRange:
assetForAssetType:resourcePath:configVersion:
getConfigFileNameForAssetType:
defaultFallBackAssetForSmartSiriVolume
defaultFallBackAssetForHearst
defaultFallBackAssetForAdBlocker
parseCompatibilityFromConfigVersion:
isLeftConfigVersion:newerThanRightConfigVersion:
getBoolForKey:category:default:
getStringForKey:category:default:
containsKey:category:
containsCategory:
hashFromResourcePath
description
isEqualAsset:
stringForCurrentAssetProviderType
configVersion
assetProvider
_decodedInfo
_path
_resourcePath
_configVersion
_assetProvider
T@"NSString",R,N,V_path
T@"NSString",R,N,V_resourcePath
T@"NSDictionary",R,N
T@"NSString",R,N
T@"NSString",R,N,V_configVersion
TQ,R,N,V_assetProvider
localeWithLocaleIdentifier:
setLocale:
setDateFormat:
inputRecordingNumberOfChannels
inputRecordingDurationInSecs
initWithNumChannels:recordingDuration:samplingRate:
addSamples:numSamples:atHostTime:
sampleCount
copySamplesFrom:to:
dataWithBytes:length:
initWithData:numChannels:numSamples:sampleByteDepth:startSampleCount:hostTime:arrivalHostTimeToAudioRecorder:wasBuffered:remoteVAD:
numSamples
data
createAudioCircularBufferWithDefaultSettings
addSamples:numSamples:
copySamplesFromHostTime:
copySamplesFrom:to:channelIdx:
copybufferFrom:to:
copyBufferWithNumSamplesCopiedIn:
bufferLength
setBufferLength:
.cxx_construct
_csAudioCircularBufferImpl
_bufferLength
TQ,N,V_bufferLength
initWithBytes:length:
bytes
dataForChannel:
subdataWithRange:
dataWithLength:
dataWithCapacity:
appendData:
inputRecordingIsFloat
apply12dBGainToFloatBuffer:
apply12dBGainToShortBuffer:
subChunkFrom:numSamples:
initWithData:numChannels:numSamples:sampleByteDepth:startSampleCount:hostTime:remoteVAD:
initWithXPCObject:
xpcObject
chunkForChannel:
dataWithRemoteVADWithScaleFactor:numAudioSamplesPerRemoteVAD:
remoteVADAvailable
subChunkFrom:numSamples:forChannel:
remoteVADSubChunkFrom:numSamples:numAudioSamplesPerRemoteVAD:
gainCompensatedChunk
skipSamplesAtStartSuchThatNumSamplesReceivedSoFar:reachesACountOf:completionHandler:
splitAudioChunkSuchThatNumSamplesReceivedSoFar:reachesACountOf:completionHandler:
numChannels
sampleByteDepth
startSampleCount
hostTime
arrivalHostTimeToAudioRecorder
wasBuffered
remoteVAD
setRemoteVAD:
_wasBuffered
_data
_numChannels
_numSamples
_sampleByteDepth
_startSampleCount
_hostTime
_arrivalHostTimeToAudioRecorder
_remoteVAD
T@"NSData",R,N,V_data
TQ,R,N,V_numChannels
TQ,R,N,V_numSamples
TQ,R,N,V_sampleByteDepth
TQ,R,N,V_startSampleCount
TQ,R,N,V_hostTime
TQ,R,N,V_arrivalHostTimeToAudioRecorder
TB,R,N,V_wasBuffered
TB,R,N
T@"NSData",&,N,V_remoteVAD
T@"NSObject<OS_xpc_object>",R,N
voiceTriggerInfo
setVoiceTriggerInfo:
rtsTriggerInfo
setRtsTriggerInfo:
triggerNotifiedMachTime
setTriggerNotifiedMachTime:
remoteDeviceId
setRemoteDeviceId:
_voiceTriggerInfo
_rtsTriggerInfo
_triggerNotifiedMachTime
_remoteDeviceId
T@"NSDictionary",C,N,V_voiceTriggerInfo
T@"NSDictionary",C,N,V_rtsTriggerInfo
TQ,N,V_triggerNotifiedMachTime
T@"NSString",C,N,V_remoteDeviceId
stringWithUTF8String:
_cs_initWithXPCObject:
setObject:forKey:
initWithDictionary:
_cs_xpcObject
enumerateKeysAndObjectsUsingBlock:
array
numberWithUnsignedLong:
dictionaryWithObjects:forKeys:count:
addObject:
initWithZeroWindowSize:approxAbsSpeechThreshold:numHostTicksPerAudioSample:
filterZerosInAudioPacket:atBufferHostTime:filteredPacket:
endAudioAndFetchAnyTrailingZerosPacket:
metrics
_audioZeroFilterImpl
getHostClockFrequency
secondsToHostTime:
hostTimeToSeconds:
hostTimeToTimeInterval:
macHostTimeFromBridgeHostTime:
supportRaiseToSpeak
supportHearstVoiceTrigger
supportPremiumWatchAssets
shouldRunVTOnCS
supportTTS
supportJarvisVoiceTrigger
supportBluetoothDeviceVoiceTrigger
rootQueueWithFixedPriority:
supportHybridEndpointer
initWithData:encoding:
characterSetWithCharactersInString:
componentsSeparatedByCharactersInSet:
dateWithTimeIntervalSinceNow:
stringFromDate:
supportContinuousVoiceTrigger
supportKeywordDetector
supportPremiumAssets
supportOpportunisticZLL
supportSelfTriggerSuppression:refChannelIdx:
supportCSTwoShotDecision
supportEndpointerWhileHostAsleep
supportSmartVolume
supportSAT
supportCompactPlus
isIOSDeviceSupportingBargeIn
supportAdBlocker
supportContinuousAudioFingerprint
supportPremiumModel
supportPhatic
shouldDelayPhaticForMyriadDecision
supportSessionActivateDelay
supportLanguageDetector
shouldDownloadVTAssetsOnDaemon
supportLazySessionActivation
supportMyriadLightHouse
supportAcousticProgressiveChecker
hasRemoteCoreSpeech
shouldDeinterleaveAudioOnCS
supportCircularBuffer
supportBeepCanceller:
supportZeroFilter:
getFixedPrioritySerialQueueWithLabel:fixedPriority:
getFixedHighPrioritySerialQueueWithLabel:priority:
deviceProductType
deviceProductVersion
systemUpTime
deviceUserAssignedName
deviceBuildVersion
deviceHwRevision
timeStampWithSaltGrain
supportsSpeakerRecognitionAssets
supportsSiriLiminal
supportHandsFree
supportsVoiceTriggerFides
deviceRequirePowerAssertionHeld
initWithLength:
mutableBytes
convertToFloatLPCMBufFromShortLPCMBuf:
audioDecoderDidDecodePackets:audioStreamHandleId:buffer:remoteVAD:timestamp:arrivalTimestampToAudioRecorder:wasBuffered:receivedNumChannels:
initWithInASBD:outASBD:
addPackets:audioStreamHandleId:remoteVAD:timestamp:arrivalTimestampToAudioRecorder:wasBuffered:receivedNumChannels:
delegate
setDelegate:
_decoder
_inASBD
_outASBD
_delegate
T@"<CSAudioDecoderDelegate>",W,V_delegate
initWithBool:
initWithDouble:
initWithLongLong:
initWithUnsignedLongLong:
objCType
longLongValue
unsignedLongLongValue
doubleValue
unsignedIntegerValue
floatValue
unsignedIntValue
_readAudioBufferAndFeed
audioFileReaderDidStartRecording:successfully:error:
audioFileReaderBufferAvailable:buffer:atTime:
audioFileReaderDidStopRecording:forReason:
close
initWithURL:
setRecordBufferDuration:
prepareRecording:
startRecording
stopRecording
readSamplesFromChannelIdx:
_fFile
_audioFeedTimer
_bufferDuration
T@"<CSAudioFileReaderDelegate>",W,N,V_delegate
countByEnumeratingWithState:objects:count:
removeObserver:
addObserver:
_checkAllConditionsEnabled
type
isEqual:
class
self
performSelector:
performSelector:withObject:
performSelector:withObject:withObject:
isProxy
isKindOfClass:
isMemberOfClass:
conformsToProtocol:
respondsToSelector:
retain
release
autorelease
retainCount
zone
hash
superclass
debugDescription
TQ,R
T#,R
T@"NSString",R,C
CSEventMonitorDidReceiveEvent:
setCallback:
addConditions:
subscribeEventMonitor:
isEnabled
notifyCallback:option:
notifyCallbackWithOption:
_monitors
_conditions
_callback
initWithName:timeout:
invalidate
enter
leave
waitWithTimeout:
_dispatchGroup
_dispatchGroupCounter
initWithUTF8String:
initWithArray:
enumerateObjectsUsingBlock:
applyGain:toShortBuffer:
applyGain:toFloatBuffer:
convertToShortLPCMBufFromFloatLPCMBuf:
applyNegative12dBGainToShortBuffer:
applyNegative12dBGainToFloatBuffer:
packets
setPackets:
avgPower
setAvgPower:
peakPower
setPeakPower:
timeStamp
setTimeStamp:
setNumChannels:
audioFormat
setAudioFormat:
streamHandleID
setStreamHandleID:
_avgPower
_peakPower
_audioFormat
_packets
_timeStamp
_streamHandleID
T@"NSArray",&,N,V_packets
Tf,N,V_avgPower
Tf,N,V_peakPower
TQ,N,V_timeStamp
TI,N,V_numChannels
TI,N,V_audioFormat
TQ,N,V_streamHandleID
_storeModeEnabled
setFileLoggingLevel:
fileLoggingLevel
intValue
baseDir
fileExistsAtPath:isDirectory:
createDirectoryAtPath:withIntermediateDirectories:attributes:error:
assistantLogDirectory
myriadHashDirectory
numberWithInteger:
date
stringByReplacingOccurrencesOfString:withString:
interstitialRelativeDirForLevel:
enableAudioInjection:withKey:
audioInjectionEnabledWithKey:
smartSiriVolumeContextAwareEnabled
sharedPreferences
fileLoggingIsEnabled
voiceTriggerEnabled
phraseSpotterEnabled
isAttentiveSiriEnabled
isAttentiveSiriAudioLoggingEnabled
twoShotNotificationEnabled
setFileLoggingIsEnabled:
voiceTriggerAudioLogDirectory
ssvLogDirectory
getSSVLogFilePathWithSessionIdentifier:
trialBaseAssetDirectory
getCatAdBlockerAssetUpdateDirectory
assistantAudioFileLogDirectory
myriadHashFilePath
secondPassAudioLoggingEnabled
speakerRecognitionAudioLoggingEnabled
jarvisAudioLoggingEnabled
setJarvisTriggerMode:
getJarvisTriggerMode
startOfSpeechAudioLoggingEnabled
forceVoiceTriggerAPMode
forceVoiceTriggerAOPMode
getStartOfSpeechAudioLogFilePath
_isDirectory:
remoteVoiceTriggerDelayTime
remoteVoiceTriggerEndpointTimeoutWithDefault:
interstitialAbsoluteDirForLevel:
myriadFileLoggingEnabled
enableAudioInjection:
audioInjectionEnabled
enableProgrammableAudioInjection:
programmableAudioInjectionEnabled
setAudioInjectionFilePath:
audioInjectionFilePath
isPHSSupported
_isRemoteVoiceTriggerAvailable
isSpeakerRecognitionAvailable
speakerIdScoreReportingType
smartSiriVolumeSoftVolumeEnabled
smartSiriVolumeContextAwareLoggingEnabled
audioSessionActivationDelay
maxNumLoggingFiles
maxNumGradingFiles
useSiriActivationSPIForHomePod
useSiriActivationSPIForwatchOS
shouldOverwriteRemoteVADScore
overwritingRemoteVADScore
setHearstFirstPassModelVersion:
setHearstSecondPassModelVersion:
fakeHearstModelPath
companionSyncVoiceTriggerUtterancesEnabled
opportuneSpeakListenerBypassEnabled
bypassPersonalizedHeySiri
isMultiPhraseVTEnabled
isMultiChannelAudioLoggingEnabled
isAdBlockerAudioLoggingEnabled
isStaggeredCATDownloadEnabled
isSelfTriggerFileLoggingEnabled
inputRecordingSampleByteDepth
inputRecordingFramesPerPacket
inputRecordingSampleRateNarrowBand
inputRecordingBytesPerFrame
inputRecordingBytesPerPacket
hearstNumberOfBytesPerChunk
hearstNumberOfSamplesPerChunk
inputRecordingSampleBitDepth
EncryptionAudioSampleByteDepth
inputRecordingEncoderAudioQuality
inputRecordingSampleRateConverterAlgorithm
inputRecordingBufferDuration
audioConverterBitrate
channelForOutputReference
channelForProcessedInput
zeroFilterWindowSizeInMs
zeroFilterWindowSizeInMsForReport
zeroFilterApproxAbsSpeechThreshold
csAudioProcessingQueuePriority
daysBeforeRemovingLogFiles
remoteVADDuration
serverLoggingChannelBitset
defaultContinousFingerprintBufferDuration
@20@0:8f16
v16@0:8
v20@0:8i16
v32@0:8r^s16i24i28
v32@0:8r^f16i24i28
v28@0:8i16i20i24
d16@0:8
d24@0:8d16
v24@0:8^d16
@"CSAudioUnitMeterClipping"
@16@0:8
v24@0:8@16
v32@0:8Q16Q24
Q24@0:8Q16
Q16@0:8
v24@0:8Q16
@"NSObject<OS_dispatch_queue>"
@24@0:8@16
@"NSObject<OS_os_transaction>"
@"NSString"
@40@0:8Q16@24@32
@24@0:8Q16
@48@0:8Q16@24@32Q40
Q24@0:8@16
B32@0:8@16@24
@48@0:8@16@24@32Q40
@40@0:8@16@24@32
B36@0:8@16@24B32
B24@0:8@16
@"NSDictionary"
@32@0:8Q16f24f28
v32@0:8r^v16Q24
v40@0:8r^v16Q24Q32
@32@0:8Q16Q24
@40@0:8Q16Q24Q32
@24@0:8^Q16
{unique_ptr<corespeech::CSAudioCircularBufferImpl<unsigned short>, std::__1::default_delete<corespeech::CSAudioCircularBufferImpl<unsigned short>>>="__ptr_"{__compressed_pair<corespeech::CSAudioCircularBufferImpl<unsigned short> *, std::__1::default_delete<corespeech::CSAudioCircularBufferImpl<unsigned short>>>="__value_"^{CSAudioCircularBufferImpl<unsigned short>}}}
@84@0:8@16Q24Q32Q40Q48Q56Q64B72@76
@72@0:8@16Q24Q32Q40Q48Q56@64
@28@0:8f16Q20
B16@0:8
v40@0:8Q16Q24@?32
@"NSData"
@36@0:8Q16S24d28
Q40@0:8@16Q24^@32
Q24@0:8^@16
{unique_ptr<CSAudioZeroFilterImpl<unsigned short>, std::__1::default_delete<CSAudioZeroFilterImpl<unsigned short>>>="__ptr_"{__compressed_pair<CSAudioZeroFilterImpl<unsigned short> *, std::__1::default_delete<CSAudioZeroFilterImpl<unsigned short>>>="__value_"^{CSAudioZeroFilterImpl<unsigned short>}}}
Q20@0:8f16
f24@0:8Q16
d24@0:8Q16
Q44@0:8Q16Q24Q32f40
B32@0:8Q16Q24
B24@0:8Q16
@20@0:8i16
@28@0:8@16i24
@96@0:8{AudioStreamBasicDescription=dIIIIIIII}16{AudioStreamBasicDescription=dIIIIIIII}56
v64@0:8@16Q24@32Q40Q48B56I60
^{OpaqueAudioConverter=}
{AudioStreamBasicDescription="mSampleRate"d"mFormatID"I"mFormatFlags"I"mBytesPerPacket"I"mFramesPerPacket"I"mBytesPerFrame"I"mChannelsPerFrame"I"mBitsPerChannel"I"mReserved"I}
@"<CSAudioDecoderDelegate>"
B24@0:8d16
@20@0:8I16
^{OpaqueExtAudioFile=}
@"NSObject<OS_dispatch_source>"
@"<CSAudioFileReaderDelegate>"
#16@0:8
@24@0:8:16
@32@0:8:16@24
@40@0:8:16@24@32
B24@0:8#16
B24@0:8:16
Vv16@0:8
^{_NSZone=}16@0:8
B24@0:8@"Protocol"16
@"NSString"16@0:8
v24@0:8@?16
v28@0:8B16Q20
@"NSMutableArray"
@32@0:8@16d24
q24@0:8Q16
@"NSObject<OS_dispatch_group>"
v28@0:8f16@20
f16@0:8
v20@0:8f16
I16@0:8
v20@0:8I16
@"NSArray"
v20@0:8B16
v24@0:8q16
q16@0:8
@24@0:8q16
B20@0:8B16
B28@0:8B16^{__CFString=}20
B24@0:8^{__CFString=}16
S16@0:8
i16@0:8
