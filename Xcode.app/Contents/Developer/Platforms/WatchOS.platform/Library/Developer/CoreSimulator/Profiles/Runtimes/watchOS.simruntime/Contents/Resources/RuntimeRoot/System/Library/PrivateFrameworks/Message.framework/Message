Password
Domain
Class
Type
DisplayName
Username
Hostname
AccountInfoDidChange
AccountOfflineStatusDidChange
AuthenticationScheme
SSLEnabled
SSLClientIdentity
SSLEnabledIsEditable
SSLIsDirect
SMIMEEnabled
PerMessageSMIMEEnabled
SMIMESigningEnabled
SMIMEEncryptionEnabled
SMIMESigningIdentity
SMIMEEncryptionIdentity
SMIMESigningUserOverrideable
SMIMESigningIdentityUserOverrideable
SMIMEEncryptByDefaultUserOverrideable
SMIMEEncryptionIdentityUserOverrideable
PortNumber
NumberOfDaysToKeepTrash
DeliveryHostname
DeliverySSLEnabled
DeliveryPortNumber
ManagedTag
mcProfileUUID
MFRestrictMessageTransfersToOtherAccounts
MFRestrictSendingFromExternalProcesses
Prevent Recents Syncing
MFAccountSupportsMailDrop
showAlertNow
dateLastFetchAceDB
OAuth2Token
OAuth2RefreshToken
ASStoreDraftsOnServer
MFServerSSLCertificateIsTrusted
v8@?0
B16@?0@"ECAuthenticationScheme"8
com.apple.Message.ReleaseAllConnections
Account.m
Cannot set persistent account on account with unsaved account properties
<%@ %p> ID=%@
 displayName=%@
Account
%@:%@@%@
NOT 
, error:
v24@?0q8@"NSError"16
success
failure
v20@?0B8@"NSError"12
v16@?0@"NSHashTable"8
-[MFAccount certUIService]
/Library/Caches/com.apple.xbs/Sources/Mail_Message_Sim/Mail-3654.0.3.1.12/Message/Accounts.subproj/Account.m
0 && "Must be implemented by subclass"
NO_PASSWORD_PROVIDED_FOR_USER_FORMAT
NO_PASSWORD_PROVIDED_FOR_ACCOUNT_FORMAT
PASSWORD_INACCESSIBLE_FOR_ACCOUNT_FORMAT
LOGIN_DISABLED_FOR_ACCOUNT_FORMAT
  account : %@
hash
TQ,R
superclass
T#,R
description
T@"NSString",R,C
debugDescription
emailAddressStrings
T@"NSArray",R,C,N
hostname
T@"NSString",C,N
password
identifier
T@"NSString",R,C,N
systemAccount
T@"ACAccount",R,C,N
statisticsKind
primaryiCloudAccount
TB,R,N
username
T@"NSString",R
domain
T@"NSString",R,N
oauth2Token
ef_publicDescription
currentConnections
T@"EFLocked",R,N,V_currentConnections
accountForRenewingCredentials
T@"ACAccount",R
persistentAccount
parentAccount
parentAccountIdentifier
baseAccount
T@"ECAccount",R,N,V_baseAccount
managed
TB,R,N,GisManaged
properties
T@"NSDictionary",R
uniqueID
syncStoreIdentifier
type
personaIdentifier
managedTag
T@"NSString",&
displayName
T@"NSString",&,N
connectionsAreConstrained
T@"NSString",R,&,N
sourceApplicationBundleIdentifier
T@"NSString",C,N,V_sourceApplicationBundleIdentifier
preferredAuthScheme
T@"ECAuthenticationScheme",&,N
T@"NSArray",R,C,N,VemailAddressStrings
Protocol
Incoming
Outgoing
account
T@"MailAccount",&,N,V_account
deliveryAccount
T@"DeliveryAccount",&,N,V_deliveryAccount
localizedNotes
T@"NSDictionary",&,N,V_localizedNotes
AccountConfigUsernameIncludesDomain
POPAccount
IMAPAccount
name
service
note
unsupported
null
UTF-8
TestAccountConfiguration
EasySetupHost
mdev.apple.com
EasySetupUseSSL
iphone-services.apple.com
https
http
/iconfig/conf
POST
Apple iPhone MailConfig v%@
User-agent
domain=%@&version=1
EmailDomains
protocol
IMAP
requires
port
authentication
usernameIncludesDomain
SMTP
lang
content
v20@?0@"MFAccount"8B16
FAILED_LOGIN
Delayed
SMTP_CONNECTION_FAILED_MESSAGE_FORMAT
Assistant
CONNECTION_FAILED_MESSAGE_FORMAT
CHECKING_CONNECTION
Checking connection
performsValidationInBackground
validationInvocation
T@"MFMonitoredInvocation",R,N
delegate
T@"<MFAccountValidatorDelegate>",W,N,V_delegate
accountIsValid
accountSupportsSSL
error
T@"MFError",R,N
T@"MFAccount",R,N
MonitoredActivityStarted
MonitoredActivityEnded
MonitoredActivityDidAddActivityTarget
MonitoredActivityDidRemoveActivityTarget
MonitoredActivityPrimaryTargetChanged
MonitoredActivityMessage
NetworkConnectionEstablished
MonitoredActivityDictMessage
MonitoredActivityCurrentCount
MonitoredActivityMaxCount
MonitoredActivityReset
MonitoredActivityCurrentItemProgress
MonitoredActivityOldPrimaryTarget
MonitoredActivityNewPrimaryTarget
MonitoredActivityInvocation
MonitoredActivityReasonCompacting
MonitoredActivityReasonFetching
MonitoredActivityReasonArchiving
MonitoredActivityReasonDeleting
MonitoredActivityReasonJunking
MonitoredActivityReasonMoving
MF_INDETERMINATE_PROGRESS_FORMAT
%@...
RESET
[%@] %@
AddedTarget
RemovedTarget
currentMonitor
T@"MFActivityMonitor",R
mailbox
T@"MFMailboxUid",&,V_mailbox
startedFetch
T@?,C,V_startedFetch
gotNewMessagesState
TQ,N
activityTarget
T@,&,N
primaryTarget
changeCount
Ti,R,N
startTime
Td,R,N
percentDone
Td,N
expectedLength
statusMessage
canBeCancelled
TB,N
shouldCancel
isRemoteSearch
TB,N,V_isRemoteSearch
bytesRead
TQ,R,N
bytesWritten
transportType
Tq,R,N,V_transportType
T@"MFError",&,N
CRAM-MD5
GSSAPI
KERBEROS_V4
X-APOP
NTLM
DIGEST-MD5
size
TI,R,N,V_currentSize
maximumSize
TI,N,V_maximumSize
maximumLatency
Td,N,V_maximumLatency
MFReloadNetworkLoggingNotification
LogActivityOnAllPorts
LogActivityOnPort
LogActivityOnHost
logLock
v12@?0i8
%@ _socket: %p
-[MFConnection _setupSocketWithSettings:]
/Library/Caches/com.apple.xbs/Sources/Mail_Message_Sim/Mail-3654.0.3.1.12/Message/Accounts.subproj/Connection.m
_socket
v12@?0B8
B24@?0^{__SecTrust=}8^@16
DONT_KNOW_SERVICE_PORT
AUTH_NOT_SUPPORTED_FORMAT
AUTH=
-[MFConnection writeBytes:length:dontLogBytesInRange:]
Z_STREAM_ERROR != err
Internal error: -[%@ %@] needs to be implemented in a concrete subclass.
-[MFConnection startCompression]
zlibStream
1.2.11
==== Connection State ====
    Host: %@
    Port Number: %u
    SSL Version: %@
    Socket: %@
    Thread: %p
authenticationMechanisms
T@"NSArray",R,N
securityProtocol
loginDisabled
isFetching
lastUsedTime
capabilities
accountLogString
T@"NSString",R,N,V_accountLogString
isValid
hasBytesAvailable
isCellularConnection
isConstrained
usesOpportunisticSockets
%@<%@>:%d %s SSL (%s)%s%s%s%@
direct
indirect
 (opportunistic)
 disallows trust prompt
, source application: 
certUIService
T@"NSString",C,N,V_certUIService
T@"NSString",C,N,V_hostname
serviceName
T@"NSString",C,N,V_serviceName
clientCertificates
T@"NSArray",C,N,V_clientCertificates
accountIdentifier
T@"NSString",C,N,V_accountIdentifier
networkAccountIdentifier
T@"NSString",C,N,V_networkAccountIdentifier
portNumber
TI,N,V_portNumber
usesSSL
TB,N,V_usesSSL
TB,N,V_usesOpportunisticSockets
tryDirectSSL
TB,N,V_tryDirectSSLConnection
allowsTrustPrompt
TB,N,V_allowsTrustPrompt
CONNECTED
READ
READ(encrypted)
WROTE
WROTE(encrypted)
CONNECTION_TIMED_OUT
HOST_UNREACHABLE
MF_SSL_CONNECTION_FAILURE
CONNECTION_REFUSED
CONNECTION_FAILED
SSL_CERT_CHAIN_INVALID_FORMAT
The certificate for the server is invalid.
SSL_BAD_CERT_FORMAT
The format of the certificate for the server is bad.
SSL_UNKNOWN_ROOT_CERT_FORMAT
The root certificate for this server could not be verified.
SSL_NO_ROOT_CERT_FORMAT
There is no root certificate for this server.
SSL_CERT_EXPIRED_FORMAT
The certificate for this server has expired.
SSL_HOST_MISMATCH_MESSAGE
SSL_GENERIC_READ_ERROR
SSL_ALERT_TITLE_FORMAT
Unable to verify SSL server %@
[Omitted]
SSL_GENERIC_WRITE_ERROR
_fillBuffer
MESSAGE_AUTH_CRAM_MD5
MD5 Challenge-Response
%02x
NOT (%@)
SELECT messages.ROWID FROM %@ WHERE %@
messages.ROWID IN (%@)
 UNION 
mailbox IN (SELECT rowid FROM mailboxes WHERE url IN (%@))
 AND 
 OR 
NULL
%@ %@ NULL
IS NOT
CriterionAdditions.m
Only =, <, > are supported for date comparision
Magic comparision must be $magicString,$field,$offset
%@ %@ (%@ + %lf)
messages.ROWID NOT IN (%@)
messages.ROWID
messages.external_id
cpsearch(subject, '%@', %d)
messages.message_id
%@ %@ %lld
messages.message_id IN (%@)
messages.message_id NOT IN (%@)
%@ %@ %@
messages.global_message_id IN (%@)
messages.global_message_id NOT IN (%@)
messages.global_message_id
sender LIKE '%%%@%%'
cpsearch(sender, '%@', %d)
Only MessageRuleIsEqualTo is supported for ListIDHashCriterionType
messages.list_id_hash = %lld
Only MessageRuleIsEqualTo is supported for DocumentIDCriterionType
messages.document_id = '%@'
cpsearch(IFNULL(sender, '') || ' ' || IFNULL(subject, '') || ' ' || IFNULL(_to, '') || ' ' || IFNULL(cc, ''), '%@', %d)
messages.conversation_id IN (%@)
messages.conversation_id NOT IN (%@)
(_to LIKE '%%%@%%' OR cc LIKE '%%%@%%')
cpsearch(IFNULL(_to, '') || ' ' || IFNULL(cc, ''), '%@', %d)
(messages.flags & %@) = %@
read = %d
flagged = %d
unlikely
likely
%@(deleted = %d)
%@(journaled = %d)
sender_vip = %d
messages.conversation_id in (select rowid from conversations where flags = 1)
messages.conversation_id in (select rowid from conversations where flags = 4)
((messages.flags&(63<<10))>>10) BETWEEN 1 AND 62
(messages.flags&(1<<39)) > 0
(messages.flags&(1<<40)) > 0
(messages.flags&(3<<39)) > 0
and64
not and64
%@(messages.flags, %@)
flag_color = %d
unsupported criterion type %ld
Qualifier not supported
mailbox %@ IFNULL((SELECT ROWID FROM mailboxes WHERE %@), -1)
mailbox IN (SELECT ROWID FROM mailboxes WHERE %@)
LIKE
NOT LIKE
'%@'
'%%%@%%'
'%@%%'
'%%%@'
ASHTTPConnectionErrorDomain
T@"MFError",&,N,V_error
status
Tq,R,N,V_status
TQ,R,N,V_bytesRead
TQ,R,N,V_bytesWritten
com.apple.email
T@"NSObject<OS_os_log>",R
70FB9178-576E-4CAA-A08E-F68D57BFD01E
DAFolderID
DAMailboxUid
MFWalkUpDAErrorChain
/Library/Caches/com.apple.xbs/Sources/Mail_Message_Sim/Mail-3654.0.3.1.12/Message/DataAccess/DAMailAccount.m
error && "Error ref passed in to here must not be NULL."
ExchangeActiveSync
%@%@
Exchange ActiveSync
Exchange
DAChangedFolders
SEARCH_ALL_MAILBOXES
Main
kDAMailAccountAllMailboxesFolderID
com.apple.Preferences
com.apple.dataaccess.dataaccessd
com.apple.Accounts
com.apple.datamigrator
com.apple.managedconfiguration.profiled
junk
junk e-mail
junk email
DAMailAccount.m
should never make account conduits in %@.
folderID must be non-nil
v16@?0@"MFDAFolderChangeResult"8
&<>:;/()+'"\
MAILBOX_NAME_INCLUDES_SPECIAL_CHARACTERS
mbox
MCAccountIsManaged
FolderID
v32@?0@"EFPair"8Q16^B24
Archive
Junk
requested relative path for unsupported mailbox type %ld
exchangeAccountIcon
outlookAccountIcon
HatesAppleDesign
@apple.com
.apple.com
appleAccountIcon
@"NSString"16@?0@"MFMailboxUid"8
Expected a DAMailbox
reachable
unreachable
SMIME_MISSING_REMOTE_ENCRYPTION_CERT_MESSAGE
v24@?0@"NSArray"8^B16
MIME_GENERIC_REMOTE_ENCRYPTION_CERT_MESSAGE
An error occurred while retrieving the encryption certificate.
SMIME_CANT_ENCRYPT_TITLE
Unable to Encrypt
Invalid parameter not satisfying: %@
[message isKindOfClass:[MFMailMessage class]]
virtualAllSearchMailbox
T@"MFMailboxUid",&,N,V_virtualAllSearchMailbox
RelativePath
-[MFDAMailbox displayName]
INBOX_SPECIAL_MAILBOX_NAME
Inbox
 folderID=%@
folderID
T@"NSString",C
MFDAMailAccountConsumer_doneCondition
_MFDAResolveRecipientsConsumer_Lock
T@"NSError",R
MaxMessageBytes
DeliveryAccounts
ShouldUseAuthentication
DeliveryAccountWillBeRemoved
DeliveryAccountsDidChange
%@:%@
SMTPServers
%@@%@
maximumMessageBytes
HTTP MD5 Digest
realm
nonce
cnonce
digest-uri
response
maxbuf
charset
utf-8
stale
algorithm
md5-sess
cipher-opts
rspauth
auth
auth-int
auth-conf
%08x
%@/%@
Digest session key to server-to-client signing key magic constant
Digest session key to client-to-server signing key magic constant
AUTHENTICATE
<HTML><BODY>
</BODY></HTML>
From 
AppleTextBreakLocale
<BLOCKQUOTE type="cite">
<SPAN>
 &nbsp; &nbsp;
&nbsp;
&lt;
&gt;
&amp;
</SPAN><BR>
</BLOCKQUOTE>
System/Library/PrivateFrameworks/DataDetectorsCore.framework/DataDetectorsCore
DDURLifier
ja_JP_TRADITIONAL
REPLY_ATTRIBUTION_SENDER
%@ <%@>
REPLY_ATTRIBUTION
On %@, at %@, %@ wrote:
InvocationQueue_lock
DebugWorkerThreads
MFInvocationQueue starting invocation %p [%s %s]
MFInvocationQueue finished invocation %p [%s %s] in %5.5fs
==== %@Invocation Queue <%@: %p> ====
Shared 
number of running threads: %d
==== Queued ====
  %@
(empty)
maxThreadCount
threadPriorityTrigger
Ti,N,V_threadPriorityTrigger
threadRecycleTimeout
Td,N,V_threadRecycleTimeout
invocationCount
threadCount
TQ,R,N,V_numThreads
temp-
 libraryID=%lld remoteID=%@
LibraryMessage.m
Expected message %@ to be self %@
persistentID
subject
T@"ECSubject",R,C,N
from
senders
dateReceived
T@"NSDate",R,N
dateSent
listUnsubscribe
remoteID
T@"<ECMailbox>",R,N
conversationID
Tq,R,N
isServerSearchResult
flags
T@"ECMessageFlags",R,N
partOfExistingThread
TB,R,N,GisPartOfExistingThread
bodyPart
T@"<ECMimePart>",R,N
headersDictionary
T@"NSDictionary",R,C,N
messageIDHeader
messageIDHeaderHash
T@"ECAngleBracketIDHash",R,N
labels
T@"NSSet",R
T@"<ECMailAccount>",R,N
headers
T@"<ECMessageHeaders>",R,N
references
documentID
T@"NSUUID",R,C,N
numberOfAttachments
listIDHash
T@"<EDIndexableAccount>",R,N
T@"<EDIndexableMailbox>",R,N
fileSize
persistedMessageID
globalMessageID
conversationFlags
T@"MFMailboxUid",R,D,N
T@"MailAccount",R,D,N
T@"MFMessageHeaders",R,D,N
T@"NSArray",C,N,V_references
T@"NSUUID",R,C,D,N
%@ = %@
= '%@*'cdwt
= '*%@'cdwt
= '%@'cd
!= '%@'cd
= '*%@*'c
< %@
> %@
-[MFMessageCriterion(MFLibrarySearchableIndexAdditions) _comparisonOperationMatchingValue:qualifier:]
/Library/Caches/com.apple.xbs/Sources/Mail_Message_Sim/Mail-3654.0.3.1.12/Message/Library.subproj/LibrarySearchableIndex.m
0 && "unexpected qualifier type"
@"NSString"16@?0@"NSString"8
%@ %@
v32@?0@"MFMessageCriterion"8Q16^B24
@"NSNumber"16@?0@"MFMessageCriterion"8
v32@?0@"NSString"8@"NSMutableArray"16^B24
@"NSString"16@?0@"MFMessageCriterion"8
$time.absolute(%f)
!(%@)
fullTextSearchableCriterion
TB,R,N,GisFullTextSearchableCriterion
spotlightQueryString
LibraryStore.m
messages shouldn't have a zero generation number.
FetchWithoutLimits
oldFlagsByMessage
multipart
SUCCESS
FAILED
X-Apple-Content-Length: %lu
Q24@?0@"MFMessage"8q16
q24@?0@8@16
earliestReceivedDate
T@"NSDate",&,N,V_earliestReceivedDate
LocalAccountId
Mailboxes
local:
Local
PERSONAL_MAILBOXES
Local Mailboxes
MAILBOX_EXISTS_FORMAT
x-apple-transient-drafts
localAccount
T@"LocalAccount",R,N
EmailAddresses
ReceiveEmailAliasAddresses
LastEmailAliasesSyncDate
FullUserName
SMTPIdentifier
SMTPCarrierFallbackAllowed
SMTPDisabled
CustomSignature
SMTPAlternateIdentifiers
DraftsMailboxName
SentMessagesMailboxName
TrashMailboxName
ArchiveMailboxName
JunkMailboxName
AccountIcon
SaveSentMessages
ArchiveMessages
CachePolicy
DefaultSendingAccount
MFMailDefaultSendingAccountDidChange
defaultAddress
MFNameKey
MailAccounts
MailAccountInvalidateMeetingCache
MailboxUserInfoDidChange
AccountMailboxListingDidChange
AccountMailboxListingWillLoad
AccountMailboxListingDidLoad
AccountMailboxListingWillFetch
AccountMailboxListingDidFetch
mboxes
MailboxAttributes
MailboxChildren
MailboxName
MailboxExtraAttributes
MailAccountContentsDidChange
MailAccountContentsDidChangeUids
MailboxUpdatedWithNoChanges
MailAccountContentsDidChangeNotificationPayload
MFMailAccountPushedMailboxUidsDidChange
.mboxCache.plist
SendingIdentities
EncryptionIdentities
CacheAllMessages
CacheMessagesAsRead
CacheNoMessages
CacheAllBodies
B16@?0@"MailAccount"8
@16@?0@"NSString"8
Outbox
@"MFMailboxUid"16@?0@"MailAccount"8
AccountPath
CachedMailboxenLock
MailAccountDeletionLock
MailAccount LibraryID Lock
@16@?0@"MFMailboxUid"8
com.apple.mail.account
%@-%@@%@
@"NSArray"16@?0@"NSString"8
@"NSSet"8@?0
SYNCHRONIZING_WITH_FILE_SYSTEM_FORMAT
Synchronizing with file system
B16@?0@"MFMailboxUid"8
q24@?0@"MFMailboxUid"8@"MFMailboxUid"16
MAILBOX_NAME_INCLUDES_PATH_SEPARATOR
RENAME_FAILED
DELETE_FAILED_FORMAT
-[MailAccount storeClass]
/Library/Caches/com.apple.xbs/Sources/Mail_Message_Sim/Mail-3654.0.3.1.12/Message/Accounts.subproj/MailAccount.m
Account URL is nil
plist
-[MailAccount libraryID]
0 && "account must have a library ID"
MFMailboxDictClientCount
MFMailboxDictLock
ChokeLock
-[MailAccount didFinishActionForChokePoint:coalescePoint:withResult:]
Active Dataclasses Lock
OldChildren
NewChildren
 path=%@
-%@-(%@)
INBOX
Drafts
Sent Messages
Deleted Messages
LogDeleteActivity
 (%@)
otherAccountIcon
com.apple.MailAccount-ExtProperties
-[MailAccount _setValueInAccountLookAsideProperties:forKey:subKey:]
[dictionary isKindOfClass:[NSDictionary class]]
-[MailAccount archiveDestinationForMailbox:]
[self supportsArchiving] && "only accounts that support archiving should call into this"
@"NSDictionary"8@?0
mail-automation: MailAccount
Account Info
isManaged
sourceIsManaged
emailAddresses
smtpIdentifier
isLocalAccount
shouldArchiveByDefault
csAccountTypeString
lock
T^{os_unfair_recursive_lock_s={os_unfair_lock_s=I}I},R
cacheHasBeenRead
mailboxCacheWriteScheduler
T@"<EFScheduler>",&,N,V_mailboxCacheWriteScheduler
replayHandler
T@"MFLocalActionReplayHandler",R,N,V_replayHandler
TB,R
defaultPath
moveSupported
rootMailboxUid
T@"MFMailboxUid",R,N
mailboxPathExtension
supportsRemoteAppend
supportsFastRemoteBodySearch
TB,R,N,V_supportsFastRemoteBodySearch
needsRemoteSearchResultsVerification
"%@"
com.apple.email.MailAccount
MailAccount.cachedMailboxUIDs
_readMailboxCache
self->_rootMailboxUid
BOOL _readMailboxCache(MailAccount *__strong)
MailAccount.m
InvalidMailboxUidType
RootlessMailboxUid
GenericMailboxUid
JunkMailboxUid
ArchiveMailboxUid
TrashMailboxUid
SentMessagesUid
DraftsMailboxUid
OutboxUid
InboxUid
RootMailboxUid
INBOXSpecialMailboxUid
JunkSpecialMailboxUid
ArchiveSpecialMailboxUid
TrashSpecialMailboxUid
SentMessagesSpecialMailboxUid
DraftsSpecialMailboxUid
OutboxSpecialMailboxUid
MailboxUidDidBecomeInvalidNotification
MFMailboxUidWasRenamedNotification
Info.plist
*** Orphaned mailbox %@
DRAFTS_SPECIAL_MAILBOX_NAME
SENT_MESSAGES_SPECIAL_MAILBOX_NAME
Sent
TRASH_SPECIAL_MAILBOX_NAME
Trash
OUTBOX_SPECIAL_MAILBOX_NAME
ARCHIVE_SPECIAL_MAILBOX_NAME
JUNK_SPECIAL_MAILBOX_NAME
URLString
Notes
IncludeDefaultSecurePortNumber
 relativePath=%@
<%@ %p> ID=%lld type=%@ attributes=%d
IsDirty
suggestionsLostMessageSearchResultCount
suggestionsLostMessageSearchTimestamp
T@"NSURL",R,N
objectID
T@"EMObjectID",R,N
extraAttributes
T@"NSArray",&,N,V_extraAttributes
mailboxType
%@ (
SEND_MESSAGE_FORMAT
Sending message: %@
NO_SUBJECT
No subject
INTERNAL_DELIVERY_ERROR_FORMAT
NO_RECIPIENTS
compositionSpecification
T@"NSDictionary",&,N,V_compositionSpecification
TQ,N,V_conversationFlags
isUserRequested
TB,N,V_isUserRequested
originalMessageObjectID
T@"EMMessageObjectID",&,N,V_originalMessageObjectID
originalMessage
T@"MFMailMessage",&,N,V_originalMessage
action
Tq,N,V_action
shouldSign
TB,N,V_shouldSign
shouldEncrypt
TB,N,V_shouldEncrypt
T@,W,N
FORWARDED_MESSAGE_PREFIX
Begin forwarded message:
TI,R,N
dateReceivedInterval
dateSentInterval
conversationHash
mailboxID
messageIDHash
flagged
read
deleted
senderVIP
knownToHaveAttachments
TB,R,N,GisKnownToHaveAttachments
libraryMessage
TB,R,N,GisLibraryMessage
libraryID
T@"EMMessageObjectID",R,N
modSequenceNumber
shouldUseMailDrop
TB,N,V_shouldUseMailDrop
messageFlags
Tq,N,V_globalMessageID
T@"MailAccount",R,N
TI,R,D,N
Tq,R,D,N
_Encoding
Envelope Index
Protected Index
subjects
sender
summaries
protected_message_data
conversations
MFColumnAlias
MailMessageLibraryConversationHasMerged
MailMessageLibraryNotificationsConversationIDKey
MailMessageLibraryNotificationsOldConversationIDKey
MailMessageLibraryMessagesHaveNewData
MailMessageLibraryNotificationsMessagesKey
MailMessageLibraryWillBecomeUnavailable
MailMessageLibraryDidBecomeAvailable
MailMessageLibraryDidFinishReconciliation
MailMessageLibraryDidFinishReconciliationOfMailbox
MailMessageLibraryReconciledMailboxKey
MailMessageLibraryProtectedDataAvailibilityKey
MailMessageLibraryPreviousProtectedDataAvailibilityKey
.reset-database
com.apple.message.journal-reconciliation
NeedToMigrateFiles
UseLegacyMessageIDHashFormat
com.apple.email.signposts
MailMessageLibrary.m
userAgent
@"MFLibraryMessage"16@?0@"NSNumber"8
com.apple.message.library
com.apple.message.library.stats
com.apple.message.library.keybag
com.apple.message.library.conversationcalculation
com.apple.message.library.fileRemovalAfterCompaction
ROWID
remote_id
date_received
date_sent
subject_prefix
comment
sender_comment
address
sender_address
summary
original_mailbox
content_type
conversation_id
encoding
external_id
global_message_id
message_id
unique_id
conversation_flags
list_id_hash
document_id
com.apple.mail.Persistence.MessageIDHashFormat
useLegacyFormat
%s can only be called from unit tests
-[MFMailMessageLibrary test_tearDown]
B16@?0@"EDPersistenceDatabaseConnection"8
UPDATE messages SET flags = (flags|:flags) WHERE rowid = :rowid
:flags
:rowid
setting flags
SELECT flags FROM messages WHERE ROWID = ?;
Q16@?0Q8
, flag_color = NULL
, flag_color = %@
, flag_color = %lu
UPDATE messages SET flags = ((flags | ?) & ?)%@%@ WHERE mailbox = (SELECT ROWID FROM mailboxes WHERE url = ?)
mass updating flags
v40@?0r^v8{_NSRange=QQ}16^B32
@"MFSearchableIndexItem_iOS"16@?0@"MFLibraryMessage"8
SELECT messages.ROWID, messages.message_id, messages.conversation_id, messages.subject_prefix, subjects.subject, addresses.comment, addresses.address, messages.date_sent FROM messages JOIN subjects ON messages.subject = subjects.ROWID JOIN addresses ON messages.sender = addresses.ROWID WHERE subjects.subject = ? AND messages.mailbox = ?
v32@?0@"EFSQLRow"8Q16^B24
querying subject references for threads
v32@?0@"NSNumber"8@"MFMessageReferenceContext"16^B24
message_references
message
reference
is_originator
v24@?0q8^B16
inserting message_references
UPDATE messages SET conversation_id = ?, content_index_transaction_id = NULL, flags = flags & ~(1<<33) WHERE rowid = ?
inserting conversation id into message row
INSERT OR IGNORE INTO conversations (conversation_id) VALUES (?)
inserting row into conversations table
INSERT OR IGNORE INTO conversation_id_message_id (conversation_id, message_id) SELECT ?, reference FROM message_references WHERE message = ?
inserting row into conversation_id_message_id table (1)
INSERT OR REPLACE INTO conversation_id_message_id (conversation_id, message_id, date_sent) VALUES (?, ?, ?)
inserting row into conversation_id_message_id table (2)
UPDATE messages SET conversation_id = ?, content_index_transaction_id = NULL, flags = flags & ~(1<<33) WHERE conversation_id = ?
udpating other conversations to point to this one
UPDATE OR IGNORE conversation_id_message_id SET conversation_id = ? WHERE conversation_id = ?
v32@?0@"NSNumber"8@"NSArray"16^B24
deleting row from conversations table
SELECT addresses.comment AS sender_comment, addresses.address AS sender_address, subjects.subject, messages.remote_mailbox, messages.original_mailbox, content_type, messages.message_id, messages.external_id, messages.unique_id, messages.list_id_hash, messages.document_id FROM messages LEFT OUTER JOIN addresses ON messages.sender = addresses.ROWID LEFT OUTER JOIN subjects ON messages.subject = subjects.ROWID WHERE messages.ROWID = ?
remote_mailbox
Fetching fields for message
v32@?0@"NSString"8Q16^B24
INSERT INTO messages (remote_id, sender, subject_prefix, global_message_id, subject, summary, date_sent, date_received, mailbox, remote_mailbox, original_mailbox, flags, read, flagged, flag_color, deleted, sender_vip, visible, size, encoding, content_type, message_id, sequence_identifier, external_id, unique_id, list_id_hash, journaled, document_id) values (:remote_id, :sender, :subject_prefix, :global_message_id, :subject, :summary, :date_sent, :date_received, :mailbox, :remote_mailbox, :original_mailbox, :flags, :read, :flagged, :flag_color, :deleted, :sender_vip, :visible, :size, :encoding, :content_type, :message_id, :sequence_identifier, :external_id, :unique_id, :list_id_hash, :journaled, :document_id)
:remote_id
:sender
:subject_prefix
:global_message_id
:subject
:summary
:date_sent
:date_received
:mailbox
:remote_mailbox
:original_mailbox
:visible
:size
:content_type
:sequence_identifier
:external_id
:unique_id
:list_id_hash
:journaled
:document_id
Inserting message
INSERT OR REPLACE INTO pop_uids (mailbox, uid, date_added) VALUES (?, ?, ?);
inserting POP UID
v24@?0q8q16
@16@?0@"<ECMessage>"8
v32@?0@"MFMailboxUid"8@"NSArray"16^B24
INSERT INTO recipients (message, address, type, position) VALUES (?, ?, ?, ?)
Inserting address
v32@?0@"_MFEmailAddress"8Q16^B24
B24@?0@"NSArray"8Q16
SELECT ROWID FROM addresses WHERE address = ? AND comment = ?
Looking up address ROWID
INSERT INTO addresses (address, comment) VALUES (?, ?)
SELECT ROWID FROM %@ WHERE %@ = ?
Looking up %@ ROWID
INSERT INTO %@ (%@) VALUES (?)
Inserting %@
INSERT OR IGNORE INTO conversation_id_message_id (conversation_id, message_id) VALUES (?, ?)
inserting row into conversation_id_message_id table (3)
messages
SELECT ROWID FROM message_global_data WHERE message_id = ?
Got a confict trying to set global message ID %llu, but couldn't find conflicting row
SELECT message_id FROM messages WHERE rowid = ?
pulling out the faked message-id
The message didn't get updated
%@ AS %@
v24@?0#8:16
SELECT %@ 
SELECT messages.conversation_id 
SELECT rowid, date_received, date_sent, messages.conversation_id, mailbox, messages.flags, messages.message_id 
SELECT COUNT(DISTINCT(message_id)) 
loading messages
error performing query: %@
SELECT date_received FROM messages WHERE mailbox = (SELECT ROWID FROM mailboxes WHERE url = ?) AND flags & 128 = 0 ORDER BY date_received ASC LIMIT 1;
SELECT date_received FROM messages JOIN searchable_messages ON messages.ROWID = searchable_messages.message_id WHERE mailbox = (SELECT ROWID FROM mailboxes WHERE url = ?) AND flags & 128 = 0 AND searchable_messages.transaction_id != 0 ORDER BY date_received ASC LIMIT 1
SELECT rowid, date_received, date_sent, conversation_id, mailbox, flags, message_id FROM messages WHERE mailbox = (SELECT rowid FROM mailboxes WHERE url = ?) AND deleted = '0' AND journaled = '0' AND flags & 128 = 0
%@: Unable to form query for criteria
attached
not attached
SELECT COUNT() %@;
SELECT mailboxes.url, COUNT(DISTINCT(messages.message_id)) %@ GROUP BY 1;
SELECT conversation_id FROM messages WHERE mailbox = ifnull((SELECT rowid FROM mailboxes WHERE url = :url), -1) GROUP BY conversation_id ORDER BY MAX(date_received) LIMIT 1
:url
SELECT rowid FROM messages WHERE mailbox = ifnull((SELECT rowid FROM mailboxes WHERE url = :url), -1) ORDER BY date_received ASC LIMIT 1
SELECT messages.ROWID, addresses.comment, addresses.address FROM messages JOIN addresses ON messages.sender = addresses.ROWID WHERE messages.mailbox = IFNULL((SELECT ROWID FROM mailboxes WHERE url = :url), -1) AND messages.conversation_id = :hash ORDER BY messages.read, messages.date_received
:hash
SELECT messages.ROWID, addresses.comment, addresses.address FROM messages JOIN addresses ON messages.sender = addresses.ROWID WHERE messages.conversation_id = :hash ORDER BY messages.read, messages.date_received
 LIMIT %ld
INSERT INTO temp_selected_messages SELECT rowid FROM messages WHERE mailbox = ifnull((SELECT rowid FROM mailboxes WHERE url = :url), -1) AND deleted = '0' ORDER BY date_received DESC, ROWID DESC LIMIT :limit OFFSET :offset;
:limit
:offset
SELECT messages.ROWID, remote_id, date_received, date_sent, flags, size, messages.subject_prefix, subjects.subject, sender.comment AS sender_comment, sender.address AS sender_address, mailbox, original_mailbox, content_type, summaries.summary, encoding FROM temp_selected_messages AS selection LEFT OUTER JOIN messages ON selection.message_id = messages.rowid LEFT OUTER JOIN addresses AS sender ON messages.sender = sender.ROWID LEFT OUTER JOIN subjects ON messages.subject = subjects.ROWID LEFT OUTER JOIN summaries ON messages.summary = summaries.ROWID;
DELETE FROM temp_selected_messages;
messagesWithSummariesForMailbox
INSERT INTO temp_selected_messages SELECT rowid FROM messages WHERE mailbox = ifnull((SELECT rowid FROM mailboxes WHERE url = :url), -1) AND deleted = '0';
SELECT messages.ROWID, remote_id, date_received, date_sent, flags, size, messages.subject_prefix, subjects.subject, sender.comment AS sender_comment, sender.address AS sender_address, mailbox, original_mailbox, content_type, NULL AS summary, encoding FROM temp_selected_messages AS selection LEFT OUTER JOIN messages ON selection.message_id = messages.rowid LEFT OUTER JOIN addresses AS sender ON messages.sender = sender.ROWID LEFT OUTER JOIN subjects ON messages.subject = subjects.ROWID WHERE messages.summary IS NULL;
INSERT INTO temp_selected_messages SELECT rowid FROM messages WHERE mailbox = ifnull((SELECT rowid FROM mailboxes WHERE url = :url), -1) AND deleted = '0' AND rowID >= :rowID LIMIT :limit
:rowID
SELECT messages.ROWID, remote_id, date_received, date_sent, flags, size, messages.subject_prefix, subjects.subject, sender.comment AS sender_comment, sender.address AS sender_address, mailbox, original_mailbox, content_type, summaries.summary, encoding FROM temp_selected_messages AS selection LEFT OUTER JOIN messages ON selection.message_id = messages.rowid LEFT OUTER JOIN addresses AS sender ON messages.sender = sender.ROWID LEFT OUTER JOIN subjects ON messages.subject = subjects.ROWID LEFT OUTER JOIN summaries ON messages.summary = summaries.ROWID ORDER BY ROWID ASC;
INSERT INTO temp_selected_messages SELECT rowid FROM messages WHERE rowid >= 0 AND rowid <= :maxRowId ORDER BY rowid DESC LIMIT :limit;
:maxRowId
 FROM temp_selected_messages AS selection LEFT OUTER JOIN messages ON selection.message_id = messages.rowid LEFT OUTER JOIN addresses AS sender ON messages.sender = sender.ROWID LEFT OUTER JOIN subjects ON messages.subject = subjects.ROWID;
orderedBatchOfMessagesEndingAtRowId
INSERT INTO temp_selected_messages SELECT rowid FROM messages WHERE mailbox = ifnull((SELECT rowid FROM mailboxes WHERE url = :url), -1) AND deleted = '0' AND rowid >= :rowID;
SELECT messages.ROWID, remote_id, date_received, date_sent, flags, size, messages.subject_prefix, subjects.subject, sender.comment AS sender_comment, sender.address AS sender_address, mailbox, original_mailbox, content_type, NULL AS summary, encoding FROM temp_selected_messages AS selection LEFT OUTER JOIN messages ON selection.message_id = messages.rowid LEFT OUTER JOIN addresses AS sender ON messages.sender = sender.ROWID LEFT OUTER JOIN subjects ON messages.subject = subjects.ROWID WHERE messages.summary IS NULL ORDER BY ROWID ASC LIMIT %u;
messagesWithoutSummariesForMailbox
error performing query: %@: %@
UPDATE mailboxes SET unread_count = ? WHERE url = ?
updating cached unread count
@"MFMessageCriterion"16@?0@"NSString"8
SELECT COUNT(DISTINCT(message_id)) FROM messages WHERE flags&%llu = 0 AND mailbox IN (%@)
SELECT COUNT(DISTINCT(message_id)) FROM messages WHERE (flags&16 > 0 AND flags&2 = 0) AND mailbox IN (%@)
SELECT COUNT(DISTINCT(message_id)) FROM messages WHERE ((((flags&(63<<10))>>10) BETWEEN 1 AND 62) AND flags&1 = 0) AND mailbox IN (%@)
SELECT COUNT(DISTINCT(message_id)) FROM messages WHERE ((flags&(3<<39)>>39) > 0 AND flags&1 = 0) AND mailbox IN (%@)
url = %Q
SELECT ROWID FROM mailboxes WHERE %@
SELECT unread_count FROM mailboxes WHERE url = ?
SELECT flagged_count FROM mailboxes WHERE url = ?
SELECT attachment_count FROM mailboxes WHERE url = ?
SELECT to_cc_count FROM mailboxes WHERE url = ?
SELECT deleted_count FROM mailboxes WHERE url = ?
SELECT COUNT(DISTINCT(message_id)) FROM messages WHERE (((flags&(63<<10))>>10) BETWEEN 1 AND 62) AND mailbox IN (%@)
SELECT count(messages.rowid) FROM messages JOIN mailboxes ON messages.mailbox = mailboxes.rowid WHERE url = ? AND (flags & %llu = 0) AND deleted = '0'
SELECT COUNT(messages.rowid) FROM messages JOIN mailboxes ON messages.mailbox = mailboxes.rowid WHERE url = ? AND flags & %llu AND deleted = '0'
SELECT COUNT(DISTINCT(message_id)) FROM messages WHERE (flags & %llu = 0) AND (deleted = '0') AND mailbox IN (%@)
SELECT count(messages.rowid) FROM messages JOIN mailboxes ON messages.mailbox = mailboxes.rowid WHERE url = ? AND read = '0'
SELECT server_unread_count FROM mailboxes WHERE url = ?
SELECT count() FROM (SELECT searchable_messages.transaction_id FROM messages JOIN searchable_messages ON messages.ROWID = searchable_messages.message_id WHERE mailbox IN (SELECT ROWID FROM mailboxes WHERE url = ?) ORDER BY ROWID DESC LIMIT %lu) WHERE transaction_id != 0
SELECT count() FROM messages JOIN searchable_messages ON messages.ROWID = searchable_messages.message_id JOIN mailboxes ON messages.mailbox = mailboxes.rowid WHERE url = ? AND searchable_messages.transaction_id != 0
UPDATE mailboxes SET server_unread_count = ? WHERE url = ?
updating server unread-only-on-server count
SELECT most_recent_status_count - last_sync_status_count FROM mailboxes WHERE url = ?
mailboxes
last_sync_status_count
most_recent_status_count
SELECT most_recent_status_count FROM mailboxes WHERE url = ?
UPDATE mailboxes SET most_recent_status_count = ? WHERE rowid = ?
setting unseen count
%@ FROM messages WHERE mailbox = (SELECT ROWID FROM mailboxes WHERE url = ?) ORDER BY messages.date_received LIMIT 1
finding message with earliest date
%@ FROM messages WHERE remote_mailbox = (SELECT ROWID FROM mailboxes WHERE url = ?) AND messages.remote_id = ? LIMIT 1
finding message for UID
v24@?0@"NSString"8^B16
%@ FROM messages %s WHERE remote_mailbox = (SELECT ROWID FROM mailboxes WHERE url = %@) AND messages.remote_id IN (%@)
SELECT remote_id, flags FROM messages WHERE remote_mailbox = (SELECT ROWID FROM mailboxes WHERE url = ?) ORDER BY remote_id DESC
finding maximum remote ID
SELECT remote_id, flags FROM messages WHERE remote_mailbox = (SELECT ROWID FROM mailboxes WHERE url = ?) ORDER BY remote_id
SELECT sequence_identifier FROM mailboxes WHERE url = ?
loading mailbox sequence identifier
UPDATE mailboxes SET sequence_identifier = ? WHERE ROWID = ?
setting mailbox sequence identifier
SELECT MIN(messages.sequence_identifier) FROM messages JOIN mailboxes ON messages.mailbox = mailboxes.rowid WHERE url = ? AND remote_id IN (?
%llu
loading per-message minimum sequence identifier
UPDATE messages SET sequence_identifier = ? WHERE ROWID = ?
setting per-message sequence identifier
UPDATE messages SET sequence_identifier = ? WHERE MAILBOX = (SELECT ROWID FROM mailboxes WHERE url = ?) AND remote_id IN(?
setting en masse per-message sequence identifier
SELECT ROWID, remote_id, flags, mailbox, date_received, date_sent, conversation_id, message_id, external_id FROM messages WHERE remote_mailbox = (SELECT ROWID FROM mailboxes WHERE url = ?) ORDER BY remote_id
SELECT ROWID, remote_id, flags, mailbox, date_received, date_sent, conversation_id, message_id, external_id FROM messages WHERE remote_mailbox = (SELECT ROWID FROM mailboxes WHERE url = ?) AND remote_id >= ? AND remote_id <= ? ORDER BY remote_id
fetching message details
SELECT ROWID, remote_id, flags, mailbox, date_received, date_sent, conversation_id, message_id, external_id FROM messages WHERE remote_mailbox = (SELECT ROWID FROM mailboxes WHERE url = ?) AND remote_id >= ? AND remote_id <= ? ORDER BY remote_id DESC LIMIT ?
Unsupported option for fetching message
%@FROM messages%s
, messages.mailbox 
%@ %@ WHERE messages.ROWID = ?%@ LIMIT 1
 AND mailbox = ?
 AND mailbox IN (SELECT ROWID FROM mailboxes WHERE url = ?)
%@ %@ WHERE messages.ROWID = ? LIMIT 1
Fetching message for library ID
SELECT conversation_id FROM messages WHERE rowid IN (SELECT message FROM message_references WHERE reference IN (SELECT reference FROM message_references WHERE message = ?));
Ref Ref Error! Ref!
SELECT conversation_id FROM messages WHERE message_id IN (SELECT reference FROM message_references WHERE message = ?);
Ref Error!
SELECT messages.conversation_id FROM message_references, messages WHERE reference IN (SELECT message_id FROM messages WHERE rowid = ?) AND messages.rowid = message_references.message;
Deref error!
SELECT conversation_id FROM messages WHERE message_id = ? AND rowid != ?;
Message error!
SELECT message_references.message, reference FROM message_references LEFT OUTER JOIN messages ON reference = messages.message_id WHERE message_references.message IN (SELECT rowid FROM messages WHERE conversation_id in (SELECT conversation_id FROM messages WHERE rowid = ?)) AND messages.rowid IS NULL
Getting references that do not exist in the DB in this conversation.
v32@?0@"NSNumber"8@"EFMutableInt64Set"16^B24
SELECT ROWID, url FROM mailboxes
selecting mailbox URLs
SELECT url FROM mailboxes WHERE ROWID = ?;
urlForMailboxID is nil
-[MFMailMessageLibrary mailboxURLsForIDs:]
/Library/Caches/com.apple.xbs/Sources/Mail_Message_Sim/Mail-3654.0.3.1.12/Message/Library.subproj/MailMessageLibrary.m
urlsByID.count == mailboxIDs.count
v32@?0@"NSNumber"8@"NSString"16^B24
SELECT rowid FROM mailboxes WHERE url = ?;
SELECT ROWID FROM messages WHERE (ROWID IN (%@)) AND (flags & %llu != 0)
SELECT conversation_id, sync_key FROM conversations WHERE sync_key NOT NULL
SELECT flags FROM conversations WHERE conversation_id = ?
fetching conversation flags
UPDATE conversations SET flags = ? WHERE conversation_id = ?
setting conversation flags
UPDATE conversations SET flags = ?, sync_key = ? WHERE conversation_id = ?
setting conversation flags and sync key
%lld
SELECT DISTINCT(conversation_id) FROM conversation_id_message_id WHERE message_id IN (%@)
finding conversation id
SELECT value FROM properties WHERE key = ?
INSERT OR REPLACE INTO properties (key, value) VALUES (?,?)
DELETE FROM properties WHERE key = ?
%@ property %@
updating
deleting
UPDATE pop_uids SET flags = ? WHERE mailbox = ? AND uid = ?
Clearing flags in pop_uids
v32@?0@"MFMailboxUid"8@"NSNumber"16^B24
messages.count <= EDMessageBatchSize
@"NSString"16@?0@"MFLibraryMessage"8
SELECT sender, subject, summary FROM messages WHERE ROWID IN (%@)
Fetching messages to delete
SELECT DISTINCT address FROM recipients WHERE message IN (%@)
Fetching recipient addresses for messages
DELETE FROM messages WHERE ROWID IN (%@)
Deleting messages
recipients
addresses
Transaction for removing files after compaction
v24@?0@"NSNumber"8^B16
v24@?0@"MailAccount"8^B16
v32@?0@"MailAccount"8@"NSMutableSet"16^B24
SELECT DISTINCT %@ FROM %@ WHERE %@ IN (%@)
Fetching value
DELETE FROM %@ WHERE ROWID IN (%@)
Deleting rows
UPDATE mailboxes SET url = '%q' WHERE url = '%q';
DELETE FROM mailboxes WHERE url = '%q'
deleting mailbox URL
renaming mailbox
deleting mailbox
partial.emlx
full.emlx
%@.%@
emlxpart
Attempting to store summary in protected message data table
SELECT rowid FROM message_data WHERE message_id = ? AND part = ?
searching for existing message_data entry
INSERT INTO message_data (message_id, part, partial, complete, length) VALUES (:message_id, :part, :partial, :complete, :length)
UPDATE message_data SET message_id = :message_id, part = :part, partial = :partial, complete = :complete, length = :length WHERE rowid = :rowid
:message_id
:part
:partial
:complete
:length
inserting message data (unprotected)
preparing insert statement
INSERT OR REPLACE INTO protected_message_data (ROWID, data) VALUES (%lld, NULL);
INSERT OR REPLACE INTO protected_message_data (ROWID, data) VALUES (%lld, X'%s');
INSERT OR REPLACE INTO protected_message_data (ROWID, data) VALUES (%lld, %Q);
Inserting into protected_message_data
Could not get mailbox for message %p (store: %p)
Checking for message existence when setting summary
UPDATE messages SET summary = ? WHERE ROWID = ?
Setting summary
Attempting to load summary from protected message data table
SELECT data FROM protected_message_data WHERE ROWID = (SELECT ROWID FROM message_data WHERE message_id = ? AND part = ?)
Fetching message data
@16@?0@"NSData"8
SELECT complete FROM message_data WHERE message_id = ? and part = ?
SELECT length, complete, partial FROM message_data WHERE message_id = ? AND part IS NULL
length
complete
partial
checking message_data
addresses AS sender JOIN messages ON sender.ROWID = messages.sender %s
addresses AS recipient JOIN recipients ON recipient.ROWID = recipients.address JOIN messages ON recipients.message = messages.ROWID %s
attachments AS attachment JOIN messages ON attachment.message_id = messages.ROWID %s
mailboxes JOIN messages ON mailboxes.ROWID = messages.mailbox %s
messages %s
@"MFMessageCriterion"16@?0@"MFMessageCriterion"8
%@ FROM %@ WHERE %@
%@ FROM %@ WHERE %@%@
 ORDER BY date_received%s, messages.ROWID%s
 DESC
 LIMIT %lu
 OFFSET %lu
FALSE
INSERT INTO accounts (text_id) VALUES (?)
creating an entry for an account
SELECT ROWID FROM accounts WHERE text_id = ? LIMIT 1
getting an account library ID
DELETE FROM accounts WHERE text_id = ?
deleting an account entry
 AND +messages.mailbox IN (SELECT ROWID FROM mailboxes WHERE %@) 
@"EFSQLBinaryExpression"16@?0@"MailAccount"8
UPDATE pop_uids SET del = 1 WHERE mailbox = (SELECT ROWID FROM mailboxes WHERE url = ?) AND uid = ?;
setting pop_uid.del = 1
SELECT uid FROM pop_uids WHERE mailbox = (SELECT ROWID FROM mailboxes WHERE url = ?) AND del NOT NULL;
SELECT uid FROM pop_uids WHERE mailbox = (SELECT ROWID FROM mailboxes WHERE url = ?);
SELECT uid FROM pop_uids AS uid LEFT OUTER JOIN messages AS message ON uid.mailbox = message.remote_mailbox AND uid.uid = message.remote_id WHERE uid.mailbox = (SELECT ROWID FROM mailboxes WHERE url = ?) AND message.rowid IS NULL OR (message.flags & 2) > 0;
SELECT message_id FROM messages_deleted
collecting deleted message identifiers
DELETE FROM protected_message_data WHERE ROWID IN (SELECT message_data_id FROM message_data_deleted)
DELETE FROM message_data_deleted
cleaning up protected tables
checking database consistency
q16@?0@"NSString"8
SELECT COUNT(*) from messages WHERE rowid NOT IN (SELECT rowid FROM protected.messages);
SELECT COUNT(*) from message_data WHERE rowid NOT IN (SELECT rowid FROM protected.message_data);
SELECT COUNT(*) from protected_message_data WHERE rowid NOT IN (SELECT rowid FROM message_data);
SELECT COUNT(*) FROM messages
SELECT COUNT(*) FROM message_data
SELECT COUNT(*) FROM message_data_deleted
SELECT COUNT(*) FROM messages WHERE journaled = '1'
SELECT COUNT(*) FROM mailboxes WHERE reconcile = '1'
SELECT COUNT(*) FROM protected_message_data
LogDatabaseStats
v16@?0@"NSObject<OS_xpc_object>"8
Wrong kind of database connection
protected
PRAGMA %@.freelist_count;
PRAGMA %@.page_count;
PRAGMA %@.incremental_vacuum(%lld);
main
#Performance Moving database files
SavedFolders
#Performance Removing 
DELETE FROM conversations WHERE sync_key IS NULL AND conversation_id NOT IN (SELECT DISTINCT(conversation_id) FROM conversation_id_message_id WHERE date_sent > ?) AND conversation_id NOT IN (SELECT DISTINCT(conversation_id) FROM messages)
pruning conversation tables
(:identifier
:identifier
 ROWID IN (:rowid
%@ FROM messages %s WHERE %@ %@ ORDER BY %@%@
%@ FROM messages %s WHERE %@ %@%@
%@ FROM messages %s ORDER BY %@%@
%@ FROM messages %s %@
v32@?0@"MFLibraryMessage"8Q16^B24
%@.%lld
SELECT url FROM mailboxes
getting mailbox URLs
SELECT addresses.address, addresses.comment, recipients.type FROM recipients JOIN addresses ON recipients.address = addresses.ROWID WHERE recipients.message = ? ORDER BY recipients.position
Fetching recipients
Must include at least one recipient type
SELECT addresses.address, addresses.comment, recipients.type, recipients.message FROM recipients JOIN addresses ON recipients.address = addresses.ROWID WHERE recipients.message IN (%@) AND type IN (%@) ORDER BY recipients.position
stringValue
Unknown recipient type
SELECT * FROM mailboxes;
url: %@
  total Count: %@
total_count
  unread Count: %@
unread_count
  deleted Count: %@
deleted_count
  flagged Count: %@
flagged_count
  server Unread Count: %@
server_unread_count
  last Sync Status Count: %@
  most Recent Status Count: %@
Selecting mailboxes
SELECT length FROM message_data WHERE message_id = ? AND part = ?
SELECT length FROM message_data WHERE message_id = ? AND part IS NULL
signpostID
signpostLog
canUsePersistence
defaultInstance
T@"MFMailMessageLibrary",R
searchableIndexScheduler
T@"EDSearchableIndexScheduler",&,N,V_searchableIndexScheduler
queryParser
T@"EDMessageQueryParser",&,N,V_queryParser
fileRemovalAfterCompactionScheduler
T@"<EFScheduler>",&,N,V_fileRemovalAfterCompactionScheduler
currentAddedMessagesMap
T@"NSMutableDictionary",&,N,V_currentAddedMessagesMap
bodyMigrator
T@"MFMessageBodyMigrator",&,V_bodyMigrator
hookRegistry
T@"EDPersistenceHookRegistry",R,N
persistence
T@"EDPersistence",R,V_persistence
database
T@"MFPersistenceDatabase_iOS",R,V_database
messageChangeManager
T@"MFMessageChangeManager_iOS",R
protectedDataAvailability
allowedToAccessProtectedData
TB,R,N,V_allowedToAccessProtectedData
pendingIndexItemsCount
start
Td,N,V_start
duration
Td,N,V_duration
protectedDataAvailable
TB,N,V_protectedDataAvailable
TQ,N,V_messages
protectedMessages
TQ,N,V_protectedMessages
messageData
TQ,N,V_messageData
protectedMessageData
TQ,N,V_protectedMessageData
messagesDeleted
TQ,N,V_messagesDeleted
messageDataDeleted
TQ,N,V_messageDataDeleted
messagesMarkedAsJournaled
TQ,N,V_messagesMarkedAsJournaled
mailboxesNeedingReconcilication
TQ,N,V_mailboxesNeedingReconcilication
transmogrifier
T@?,C,N,V_transmogrifier
SELECT 1 FROM messages WHERE ROWID = ?;
testing for message existence
DELETE FROM message_data WHERE message_id = ? AND part = ?
DELETE FROM message_data WHERE message_id = ? AND part IS NULL
deleting message data
fullAddress
T@"NSString",R,C,N,V_address
T@"NSString",R,C,N,V_displayName
toRecipients
toRecipientStrings
ccRecipients
ccRecipientStrings
bccRecipients
bccRecipientStrings
class
T#,N,V_class
property
T:,N,V_property
T@"MFLibraryMessage",R,N,V_libraryMessage
urlString
T@"NSString",R,C,N,V_urlString
T@"NSString",R,C,D,N
T@"ECSubject",R,C,D,N
T@"NSArray",R,C,D,N
T@"NSDate",R,D,N
T@"<ECMailbox>",R,D,N
T@"ECMessageFlags",R,D,N
TB,R,D,N,GisPartOfExistingThread
T@"<ECMimePart>",R,D,N
T@"NSDictionary",R,C,D,N
T@"NSSet",R,D
T@"<ECMailAccount>",R,D,N
T@"<ECMessageHeaders>",R,D,N
TQ,R,D,N
T@"ECAngleBracketIDHash",R,D,N
com.apple.message.statisticsLogging
UPDATE messages SET flags = :flags, read = :read, flagged = :flagged, flag_color = :flag_color, deleted = :deleted, sender_vip = :sender_vip, encoding = :encoding, remote_id = :uid
 WHERE ROWID = :rowid
:read
:flagged
:flag_color
:deleted
:sender_vip
:uid
:encoding
sender_vip
, %@ = '%d'
v32@?0@"NSString"8@16^B24
text
audio
video
application
INSERT INTO mailboxes (url) values ('%q')
inserting mailbox URL
 LEFT OUTER JOIN subjects ON messages.subject = subjects.ROWID
 LEFT OUTER JOIN addresses AS sender ON messages.sender = sender.ROWID
 JOIN mailboxes AS mailbox ON messages.mailbox = mailbox.ROWID
 LEFT OUTER JOIN summaries ON messages.summary = summaries.ROWID
 JOIN conversations AS conversations ON messages.conversation_id = conversations.conversation_id
%s%s%s%s%s%s%s
@"NSString"16@?0@"NSNumber"8
SELECT ROWID, url FROM mailboxes WHERE ROWID IN (%@);
preparing statement for fetching mailbox URLs
iterating results for mailbox URLs
_dataForMessageAndPart
![part isEqualToString:MFMessagePartNameSummary]
SELECT %@ FROM message_data AS a JOIN protected_message_data AS b ON a.rowid = b.rowid AND a.message_id = ? AND %@
b.data, a.complete
part = ?
part IS NULL
b.data
part = ? AND complete IS NOT NULL
part IS NULL AND complete IS NOT NULL
%@ AND partial IS NULL
Fetching data for message part
handleIterativeSearchRow
c->handlerWantsMessageObjects
loading UIDs to delete
com.apple.message.db.vacuum
_writeDataHolderForMessageAndPart
directory
BOOL _writeDataHolderForMessageAndPart(MFMailMessageLibrary *__strong, EDPersistenceDatabaseConnection *__strong, EMDatabaseID, EMGlobalMessageID, NSString *__strong, NSString *__strong, MFDataHolder *__strong, BOOL, BOOL, MFFileCompressionQueue *__strong, MailAccount *__strong)
cannot write partial MIME parts.
previous earliest received date
MailMessageStoreMessageFlagsChanged
MailMessageStoreStructureChanged
MailMessageStoreMessagesAdded
MailMessageStoreMessagesWillBeCompacted
MailMessageStoreMessagesRemoved
MailMessageStoreMessagesAttachmentStorageLocationChanged
MailMessageStoreDidOpen
MailMessageStoreDidClose
MailMessageStore.m
block
Cancelled
Failed
Succeeded
<%@:%p (
result:%@
transfered:%@
failed:%@)>
resultCode
TQ,R,N,V_resultCode
failedMessages
T@"NSArray",R,N,V_failedMessages
transferedMessages
T@"NSArray",R,N,V_transferedMessages
+[MFMailMessageStore createEmptyStoreForPath:]
/Library/Caches/com.apple.xbs/Sources/Mail_Message_Sim/Mail-3654.0.3.1.12/Message/MessageStores.subproj/MailMessageStore.m
+[MFMailMessageStore storeAtPathIsWritable:]
mailbox uid is passed in as nil
-[MFMailMessageStore openSynchronously]
-[MFMailMessageStore writeUpdatedMessageDataToDisk]
MAILBOX_DISPLAY_FORMAT
%@ --- %@
<%@: %p (uid=%@)>
deleting messages from non-library stores doesn't make sense
%@|%lu|%@|%d
com.apple.message.fetchMobileSynchronously
-[MFMailMessageStore _fetchHeaderDataForMessage:downloadIfNecessary:]
-[MFMailMessageStore _rebuildTableOfContentsSynchronously]
-[MFMailMessageStore appendMessages:unsuccessfulOnes:]
&aid=%@
format
flowed
delsp
Partial message, part %@ of %@
To read this message, select all of the parts of the message and select the Message --> MIME --> Combine Messages menu item.
number
total
VIPCriterion
ThreadNotifyCriterionName
ThreadMuteCriterionName
FlaggedCriterion
FlagColorCriterion
UnreadCriterion
ReadCriterion
IncludesMeCriterion
ToMeCriterionName
CcMeCriterionName
HasAttachmentsCriterion
TodayCriterion
YesterdayCriterion
LastWeekCriterion
MFPropertyMapperLookupKeyCriterionType
--compare-field
CriterionUniqueId
Header
GlobalMessageID
MessageIdHash
Expression
Qualifier
Name
AllCriteriaMustBeSatisfied
Criteria
DateUnitType
DateIsRelative
AccountURL
To or Cc
Body
SenderIsInAddressBook
SenderIsNotInAddressBook
SenderIsMemberOfGroup
SenderIsNotMemberOfGroup
SenderHeader
AnyMessage
Mailbox
AnyRecipient
DateSent
DateReceived
SenderIsInAddressHistory
SenderIsNotInAddressHistory
AnyRecipientIncludesFullName
NoRecipientIncludesFullName
IsDigitallySigned
IsEncrypted
PriorityIsNormal
PriorityIsHigh
PriorityIsLow
AnyAttachment
MessageNumber
ExternalID
Negation
Compound
Flag
FlagColor
NotInTrashMailbox
ContainsAttachments
InSpecialMailbox
NotInASpecialMailbox
SpotlightSearch
ConversationID
ListIDHash
DocumentID
ToRecipient
CcRecipient
DateLastViewed
BeginsWith
EndsWith
IsEqualTo
IsNotEqualTo
DoesNotContain
Contains
ASCIIContains
IsLessThan
IsGreaterThan
(none)
%@Criterion: %@
%@%@  All criteria must be satisfied: %@
%@  Criteria: %@
%@  Name: %@
%@Criterion: %@
%@ Sub-Criterion: 
%@Criterion: %@
%@  Qualifier: %@
%@  Expression: %@
<%@: %p> %@
From
 or 
@"MFMessageCriterion"16@?0@"MFMailboxUid"8
criterionType
Tq,N
criterionIdentifier
qualifier
Ti,N,V_qualifier
expression
expressionLanguages
T@"NSArray",C,N,V_expressionLanguages
libraryIdentifiers
T@"EFMutableInt64Set",&,N,V_libraryIdentifiers
preferFullTextSearch
TB,N,V_preferFullTextSearch
useFlaggedForUnreadCount
TB,N,V_useFlaggedForUnreadCount
includeRelatedMessages
TB,N,V_includeRelatedMessages
expressionIsSanitized
TB,N,V_expressionIsSanitized
includeRemoteBodyContent
TB,N,V_includeRemoteBodyContent
T@"NSString",&,N,V_name
criteria
T@"NSArray",C,N
    
MessageIsRead
MessageIsDeleted
MessageIsJournaled
MessageIsFlagged
MessageFlagColor
MessageWasRepliedTo
MessageWasForwarded
MessageWasRedirected
MessagePriorityLevel
MessageIsEncrypted
MessageIsSigned
MessageSenderIsVIP
MessageToContainsAccountAddress
MessageCcContainsAccountAddress
MessageToOrCcContainsAccountAddress
MFMessageHasAttachments
MessageIsJunk
MessageIsNotJunk
MessageNumberOfAttachmentsChanged
MessageFontSizeDelta
MessageHighlightTextInTOC
MessageHasBeenViewed
MessageViewedDate
MessageIsServerSearchResult
MessageIsThreadSearchResult
EMMessageDeliveryStatusInProgress
MessageQueuedForDelivery
shouldUseICSRepresentation
MessageConversationIsVIP
MessageConversationIsMuted
MessageChangeReason
0x%llx (%s
unread
, junk
, not-junk
, deleted
, answered
, forwarded
, redirected
, flagged
, flagColor=%lu
, VIP
, encrypted
, signed
, recent
, draft
, server search result
, thread search result
, priority=%x
, partial
, delivery
, temp UID
, indexed message body
v16@?0@"<ECMessageFlagsBuilder>"8
v32@?0@"NSString"8@"NSNumber"16^B24
v16@?0@"<ECMessageFlagChangeBuilder>"8
MFUIFocusedMessageDidChange
x-apple-msg-load
Library
Mail
folder
trash
paperplane
tray
archivebox
xmark.bin
tray.2
star
flag
flag.fill
paperclip
bell.slash
bell
clock
calendar
envelope.badge
chevron.forward
chevron.down
square.and.pencil
magnifyingglass
plus
meeting
meeting data
meeting metadata
TB,N,GisPartial,V_partial
TB,N,GisComplete,V_complete
dataHolder
T@"MFDataHolder",&,N,V_dataHolder
partName
T@"NSString",&,N,V_partName
com.apple.Message
Message
MFSignerInfoErrorKey
SMIME_DAMAGED_SIG
SMIME_UNREADABLE_SIG
There was a problem reading the digital signature for this message.
SMIME_SIG_TITLE
Unable to verify message signature
signingCertificateTrustInfo
T@"MFCertificateTrustInfo",R,N,V_signingCertificateTrustInfo
encryptionCertificateTrustInfo
T@"MFCertificateTrustInfo",R,N,V_encryptionCertificateTrustInfo
T@"NSString",R,N,V_sender
readstatus
received-date
UseFormatFlowedForWrapping
plain
mixed
@16@?0@8
html
related
alternative
attachment
inline
-[MFMessageWriter setMessageClassToInstantiate:]
/Library/Caches/com.apple.xbs/Sources/Mail_Message_Sim/Mail-3654.0.3.1.12/Message/Message.subproj/MessageWriter.m
T@,W,N,V_delegate
T@"NSDictionary",R,N,V_compositionSpecification
shouldWriteAttachmentPlaceholders
TB,N,V_shouldWriteAttachmentPlaceholders
BAD_CHARSET_FORMAT
BAD_CHARSET_TITLE
Invalid Text Encoding
filename
external-body
local-file
access-type
x-unix-mode
octet-stream
remote-image
unknown
x-apple-content-length
base64
boundary
signed
binary
8bit
7bit
quoted-printable
MFAccountLoaderErrorDomain
MailServices
InstantiableMailAccountClasses
AOLAccount
GmailAccount
YahooAccount
SMTPAccount
MFUpdateAccountsInPlaceKey
persistentStore
T@"ACAccountStore",R
satisfied
TB,R,N,GisSatisfied
conditionsObservable
T@"EFObservable",R,N
v16@?0@"<MFActivityConditionBuilder>"8
MFActivityCondition.m
builderBlock
com.apple.mail.MFActivityCondition
v16@?0@"NSNumber"8
@"NSNumber"16@?0@"NSArray"8
v16@?0@"NSError"8
requireExternalPower
requireWiFi
requireScreenLocked
requireLowPowerModeDisabled
minBatteryLevel
Tf,N
maxThermalPressureLevel
alwaysSatisfiedCondition
T@"<MFActivityCondition>",R,N
TB,N,V_requireExternalPower
TB,N,V_requireWiFi
TB,N,V_requireScreenLocked
TB,N,V_requireLowPowerModeDisabled
Tf,N,V_minBatteryLevel
Tq,N,V_maxThermalPressureLevel
TB,N,GisSatisfied,V_satisfied
cancellationToken
T@"EFCancelationToken",&,N,V_cancellationToken
scheduler
T@"<EFScheduler>",&,N,V_scheduler
com.apple.message.applicationStateMonitor
v16@?0@"NSDictionary"8
@"MFAppStateMonitor"16@?0@"NSNumber"8
appStateObservable
foreground
TB,R,N,GisForeground
Unknown
Terminated
Background Task Suspended
Background Running
Foreground Running
com.apple.mobileconfig
com.apple.mobileprovision
com.apple.ical.ics
com.apple.ical.vcs
com.apple.iwork
MFAttachmentIsSinglePagePDFKey
<%@: %p> url=%@, path=%@, contentID=%@, mimeType=%@, mimePart=%@, isMailDrop=%d
x-uuencode
v24@?0@"NSData"8@"NSError"16
x-attach-maildrop
x-attach-maildrop-image
MFAttachmentIsPlaceholder
MFAttachmentMailDropMetaData
DisableAttachmentFilters
VERSION:1.0
VERSION:2.0
text/calendar
_MFEventUniqueID
_MFMeetingStorePersistentID
_MFICSRepresentation
x-attach-RFC822
message/rfc822
message/delivery-status
x-attach-compose
MFAttachmentFileNameKey
MFAttachmentPathKey
MFAttachmentRemoteImageFileNameKey
MFAttachmentUTTypeKey
application/zip
v16@?0@"NSString"8
MFAttachmentMimetypeKey
MFAttachmentDecodedFileSizeKey
MFAttachmentEncodedFileSizeKey
text/html
text/
_MFAttachmentEncodingKey
isContainedInRFC822
isContainedInCompose
contentID
T@"NSURL",&,N,V_url
part
T@"MFMimePart",&,N,V_part
fileName
T@"NSString",C,D,N
path
T@"NSString",R,D
mimeType
disposition
T@"NSString",C,N,V_disposition
remoteImageFileName
decodedFileSize
encodedFileSize
isDataAvailableLocally
shouldAutoDownload
inferredMimeType
fileUTType
isAutoArchive
TB,R,V_isAutoArchive
isPlaceholder
TB,D
placeholder
T@"MFAttachmentPlaceholder",&,N,V_placeholder
attachmentDataProvider
T@"NSItemProvider",&,N,V_attachmentDataProvider
mailDropMetadata
T@"EMMailDropMetadata",&,D,N
fetchCompletionBlock
T@?,C,N,V_fetchCompletionBlock
customConsumer
T@"<MFDataConsumer>",&,N,V_customConsumer
wantsCompletionBlockOffMainThread
TB,N,V_wantsCompletionBlockOffMainThread
isImageFile
isVideoFile
isMediaFile
isRFC822
isCalendarFile
eventID
meetingStorePersistentID
icsRepresentation
imageDimensions
T{CGSize=dd},N,V_imageDimensions
T@"MFAttachment",R,N,V_attachment
downloadProgress
T@"NSProgress",R,N,V_downloadProgress
T@?,R,C,N,V_fetchCompletionBlock
TB,R,N,V_wantsCompletionBlockOffMainThread
lastProgressBytes
Tq,N,V_lastProgressBytes
lastProgressTime
Td,N,V_lastProgressTime
v24@?0B8@"NSError"12B20
apple_ak
enc_base_image
enc_model
B24@?0^{__CFString=}8^{CGImageMetadataTag=}16
MFMailAttachmentUploadLimitKey
MFMailAttachmentMessageLimitKey
MFMailAttachmentMailDropThresholdKey
MFMailAttachmentPlaceholderThresholdKey
MFMailAttachmentPlaceholdersAvailableKey
MFMailAttachmentMailDropAvailableKey
MFMailAttachmentMailDropConfiguredKey
MailDropShortExp
mailDrop
whitelistedDownloadDomains
.digitalhub.com
.icloud.com
.icloud-content.com
AttachmentPlaceholderLowerLimit
attachmentDownloadQueue
T@"MFInvocationQueue",R,N
com.apple.mail.attachmentComposeManagerAttachmentURLArray
fractionCompleted
FetchDataForURL
com.apple.message.MFAttachmentComposeManager
x-attach-compose://%@
MFAttachmentComposeManager.m
mimeType || mimeType.length > 0
contextID
T@"NSString",R,N,V_contextID
attachmentsBaseURL
T@"NSURL",&,N,V_attachmentsBaseURL
attachmentsManager
T@"MFAttachmentManager",&,N,V_attachmentsManager
attachments
MFAttachmentDataProviderErrorDomain
T@"NSURL",&,V_url
v32@?0Q8Q16Q24
Could not retrieve library data for attachment.
No Data Found
Invalid attachment URL.
Invalid Attachment URL
messageLibrary
T@"MFMessageLibrary",W,V_messageLibrary
x-attach
MFLocalizedDescriptionKey
MFErrorTitleKey
Could not find a provider for the given URL.
No Provider Found
x-attach://
MFAttachmentCollectionFilterKey
MFAttachmentAttachmentKey
MFAttachmentPrimaryConsumerKey
MFAttachmentMonitorKey
MFAttachmentSyncLockKey
MFAttachmentInvocationURLKey
MFAttachmentInvocationFilterKey
MFAttachmentContentIDKey
MFMailAttachmentCachedSizesChangedNotification
com.apple.mail.attachmentManagerAttachmentArray
com.apple.message.attachmentManager.imagescaling
Invalid attachment URL.  Too few parts.
v32@?0@"NSURL"8@"NSDictionary"16^B24
-[MFAttachmentManager _fetchDataForAttachment:withProvider:request:syncLock:]
/Library/Caches/com.apple.xbs/Sources/Mail_Message_Sim/Mail-3654.0.3.1.12/Message/Library.subproj/MFAttachmentManager.m
B16@?0@"_MFAttachmentActiveRequest"8
v16@?0@"_MFAttachmentActiveRequest"8
B32@?0@"_MFAttachmentActiveRequest"8Q16^B24
Download Canceled.
Download Canceled
-[MFAttachmentManager attachmentForItemProvider:mimeType:fileName:contentID:context:]
=FA=CA=DE{
fileURL
application/x-apple-placeholder
%@ %lu [%@] @ %@ : %@ [%s]
MailDrop
@"<EFFuture>"16@?0@"NSData"8
AttachmentPlaceholders
data
T@"NSData",&,N,V_data
T@"NSString",&,N,V_fileName
T@"NSString",&,N,V_mimeType
T@"NSString",C,N,V_contentID
/MobileMailAttachments
XXXXXXXXXXXXXXXX
MFAttachmentUtilities.m
Path is too long.
XXXXX.%@
Invalid placeholder
@"MFAttachmentPlaceholder"16@?0^@8
B24@?0@"NSURL"8@"NSError"16
B16@?0@"NSError"8
v16@?0@"NSURL"8
MFCertificateTrustInfo.m
trust
certificateType
TQ,R,N,V_certificateType
T@"NSString",R,C,N,V_sender
trustEvaluation
T@"ECSecureMIMETrustEvaluation",R,N
T^{__SecTrust=},R,N
MFCertificateTrustInfoEMCertificateTrustInformationTransformer.m
certificateTrustInfo
MFCertificateTrustDidChangeNotification
trustInformation
T@"EMCertificateTrustInformation",R,N,V_trustInformation
keychainManager
T@"CertUITrustManager",R,N,V_keychainManager
hasTrustException
keychainStatus
canSaveCertificateToKeychain
addressForSaving
T@"NSString",R,C,N,V_addressForSaving
Could not find data for compose attachment.
MFContentErrorDocument.m
mimePart
CANNOT_DECODE_MULTIPART_MESSAGE
This message cannot be displayed because of the way it is formatted. Ask the sender to send it again using a different format or email program.
%@/%@
T@"NSError",R,N,V_error
_MFDAFolderChangeConsumer_Lock
MFDAFolderChangeConsumer.m
%@ should not be called twice
%@ status %ld, error %@, folderID "%@", folderName "%@"
statusCode
Tq,R,V_statusCode
T@"NSError",R,V_error
T@"NSString",R,V_folderID
folderName
T@"NSString",R,V_folderName
MFDAMailAccountSyncConsumer.m
we failed to find a sync actions consumer! requests: %@
DOWNLOADING_STATUS
Downloading
T@"NSString",C,N,V_tag
streamConsumer
T@"<DAMailboxStreamingContentConsumer>",&,N,V_streamConsumer
moreAvailable
TB,R,N,V_moreAvailable
@sum.size
DAMailMessage
T@"DAMailMessage",R,N,V_DAMailMessage
MFDAMessageContentConsumer.m
sanity check 
 removal
sanity check 
 removal.
requestedFormat
Ti,N,V_requestedFormat
dataConsumer
T@"<MFCollectingDataConsumer>",&,N,V_dataConsumer
alternatePartConsumer
T@"<MFCollectingDataConsumer>",&,N,V_alternatePartConsumer
consumerFactory
T@"<MFMessageDataConsumerFactory>",&,N,V_consumerFactory
T@"DAMailMessage",R,N,V_message
bodyData
T@"NSMutableData",R,N,V_bodyData
timeOfLastActivity
Td,R,N,V_timeOfLastActivity
191AF69B-0088-47D2-AD66-6C9D08949C46
meeting.ics
-[MFDAMessageStore fetchNumMessages:preservingUID:options:]
/Library/Caches/com.apple.xbs/Sources/Mail_Message_Sim/Mail-3654.0.3.1.12/Message/DataAccess/MFDAMessageStore.m
[[self library] isKindOfClass:[MFMailMessageLibrary class]]
MFDAMessageStore.m
update consumer queue should be empty at this point.
-[MFDAMessageStore _remoteIDsMatchingSearchText:predicate:limit:offset:filterByDate:handler:]
v24@?0q8@"MFMailMessageStoreSearchResult"16
-[MFDAMessageStore replayFlagChange:forRemoteIDs:error:completed:]
should only have LibraryMessages in %s
-[MFDAMessageStore loadMeetingExternalIDForMessage:]
-[MFDAMessageStore loadMeetingDataForMessage:]
-[MFDAMessageStore loadMeetingMetadataForMessage:]
rfc822
was cancelled
timed out
-[MFDAMessageStore _fetchDataForMimePart:range:isComplete:consumer:]
backedByVirtualAllSearchMailbox
TB,N,V_backedByVirtualAllSearchMailbox
shouldSend
fetchable messages should have non-zero generationNumer
monitor
T@"MFActivityMonitor",&,N,Vmonitor
T@"MFError",&,N,Verror
should only reach here in the error case.
done
@"<NSCopying>"16@?0@"MFDAMessage"8
latestDateToAdd
T@"NSDate",&,N,VlatestDateToAdd
earliestDateAdded
T@"NSDate",R,N,VearliestDateAdded
searchResult
T@"MFMailMessageStoreSearchResult",R,N,VsearchResult
succeeded
TB,R,N,V_succeeded
store
T@"MFDAMessageStore",&,N,V_store
should not have error and response
should not get streaming responses
T@"<MFDAStreamingContentConsumer>",&,N,V_streamConsumer
hasLocalCopyOfData
TB,N,V_hasLocalCopyOfData
library
T@"MFMessageLibrary",&,N,V_library
T@"MFMessage",&,N,V_message
progressFilter
T@"MFProgressFilterDataConsumer",&,N,V_progressFilter
TQ,N,V_expectedLength
dataWasBase64
TB,R,V_dataWasBase64
fetchSucceeded
TB,R,V_fetchSucceeded
multipart/alternative; boundary="%@"
Unknown remote identifier. No valid longID or serverID found
v32@?0@8@16^B24
Tq,R,N,V_statusCode
MFDAStoreDraftConsumer.m
got non-successful status code %ld for response
got a successful response with no server id
%s %d : Caught exception %@
/Library/Caches/com.apple.xbs/Sources/Mail_Message_Sim/Mail-3654.0.3.1.12/Message/DataAccess/MFDAStoreDraftConsumer.m
serverId
T@"NSString",R,N,V_serverId
T@"MFError",R,N,V_error
TB,R,N,V_success
v16@?0@"<ECTransferMessageActionResultsBuilder>"8
v16@?0@"<ECServerMessageBuilder>"8
MFDATransferActionReplayer.m
Copy is not supported for DA accounts
v32@?0@"NSString"8@"ECTransferMessageActionItem"16^B24
@"MFLibraryMessage"16@?0@"ECTransferMessageActionItem"8
Success
Failures 
Interrupted
Journal
Vault
-[MFDbJournal _processJournalFile:connection:]
/Library/Caches/com.apple.xbs/Sources/Mail_Message_Sim/Mail-3654.0.3.1.12/Message/Library.subproj/MFDbJournal.m
buf && "failed to allocate buffer during journal merge"
opening journal file
executing SQL statement from journal (%s)
SELECT url FROM mailboxes WHERE reconcile = '1'
getting mailboxes to be reconciled
UPDATE mailboxes SET reconcile = ? WHERE url = ?
last capabilities
T@"NSString",&,N,V_identifier
lastKnownCapabilities
T@"NSArray",&,N,V_lastKnownCapabilities
mailAccount
T@"MailAccount",&,N,V_mailAccount
Could not retrieve decrypted data for attachment.
EMMessageDeliveryStatusFatalError
EMMessageDeliveryStatusTransientError
EMMessageDeliveryStatusPermanentError
EMMessageDeliveryStatusCancelled
EMMessageDeliveryStatusConfigurationError
EMMessageDeliveryStatusSucceeded
EMMessageDeliveryStatusQueued
EMMessageDeliveryStatusMailDropIncomplete
status: %@, duration:%f, bytesSent: %d, isWifi: %d
Tq,N,V_status
bytesSent
TQ,N,V_bytesSent
isWifi
TB,N,V_isWifi
attributes
Tq,N,V_attributes
MFMessageErrorDomain
UserFriendlyErrorDescription
RecoveryAttemptorClassName
RequestedWebLoginURLKey
MFAccountsWithErrorsKey
_MFMoreInfo
_MFShortDescription
MFNoErrorLog
@"NSString"16@?0q8
MSG_SERVER_ERROR
The server error encountered was: %@
MFSSLErrorCertificateKey
MFSSLErrorCertificateDigestKey
Account Is Locked Out
Unrecoverable Server Error
User Cancelled
Internal
Generic
Unknown Service
Authentication Failed
Server Unavailable
Command Failed
Unsupported Feature
Encryption
Signature
User Confirmation Required
Character Set
No Internet Connection
No Host
Socket Read
Invalid Sender
No Recipients
Invalid Recipient
Sender Mailbox Full
Missing Password
Inaccessible Password
Login Disabled
Account In Use
No Delivery Accounts Configured
Missing Identity
Message Rejected
Message Too Large
Data Blocked By Call
Account Needs Web Login
Multiple Account Errors
Unknown Error Code %ld
@16@?0@"<EDAccount>"8
mailAccounts
orderedAccounts
displayedAccounts
T@"NSSet",R,C,N
autofetchAccounts
displayingMultipleAccounts
TB,R,N,GisDisplayingMultipleAccounts
receivingAddresses
T@"NSArray",C,N,V_mailAccounts
T@"NSArray",C,N,V_orderedAccounts
T@"NSSet",C,N,V_displayedAccounts
T@"NSSet",C,N,V_autofetchAccounts
%@://%@
account://test
test-hostname
test-username
fakedisplayname
test
MFFakeMailAccount
TB,N,GisManaged,V_managed
fakeFullPath
T@"NSString",C,N,V_fakeFullPath
fakeURLString
T@"NSString",C,N,V_fakeURLString
fakeIsSpecialMailboxUid
TB,N,V_fakeIsSpecialMailboxUid
fakeMailboxID
Tq,N,V_fakeMailboxID
T@"NSString",&,N,V_displayName
fakeHeaders
T@"MFMessageHeaders",&,N,V_fakeHeaders
T@"MFMessageHeaders",&,N
T@"MFMailboxUid",&,N,V_mailbox
<%@: %p> min=%lu, max=%lu, remaining=%lu
fetchMinBytes
TQ,N,V_fetchMinBytes
fetchMaxBytes
TQ,N,V_fetchMaxBytes
minBytesLeft
TQ,N,V_minBytesLeft
isPurgeable
TB,N,V_isPurgeable
MFFileArchiveDomain
Input range:%lu:%lu
Input data:%lu
Output data:%lu
MFFileArchiveStatusOK
MFFileArchiveStatusFatal
MFFileArchiveStatusFailed
MFFileArchiveStatusWarn
MFFileArchiveStatusRetry
MFFileArchiveStatusFailedHeaderWrite
MFFileArchiveStatusFailedDataWrite
MFFileArchiveStatusUnknown
Failed to close archive
hdrcharset=UTF-8:zip:compression=deflate
inputData
T@"NSData",&,N,V_inputData
inputRange
T{_NSRange=QQ},N,V_inputRange
outputData
T@"NSMutableData",&,N,V_outputData
readerBlock
T@?,C,N,V_readerBlock
writerBlock
T@?,C,N,V_writerBlock
Class:%@
URL:%@
Entries[%@]
B32@?0@8Q16^B24
__MACOSX/
contents
T@"NSData",&,N,V_contents
T@"NSError",R,&,N,V_error
%@ Path:%@ Data:%lu Uncompressed:%lu Range:[%lu:%lu]
T@"NSString",&,V_path
uncompressedSize
Tq,V_uncompressedSize
compressedRange
T{_NSRange=QQ},V_compressedRange
isDeflated
TB,V_isDeflated
isDirectory
TB,V_isDirectory
T@"NSData",&,V_contents
sharedInstance
T@"MFFileCompressionQueue",R
fileCompressionQueue
T@"NSMutableArray",&,N,V_fileCompressionQueue
B8@?0
com.apple.message.fileCompressionQueueActivity
Reconciling all messages
Reconciling context based messages
Reconciling inbox messages
@16@?0@"EFQuery"8
@"NSNumber"16@?0@"MFLibraryMessage"8
journaled
Cleaning up messages after reconciliation
@16@?0@"NSPredicate"8
@16@?0@"MailAccount"8
numberOfUnreconciledMessages
com.apple.message.library.reconciliationcleanup
Reconciling threads
threads
conversation
scope
date
MFListUnsubscribeMessageGenerator_iOS.m
command
-[MFLocalActionPersistence_iOS initWithDatabase:gmailLabelPersistence:]
/Library/Caches/com.apple.xbs/Sources/Mail_Message_Sim/Mail-3654.0.3.1.12/Message/iOS Persistence/MFLocalActionPersistence_iOS.m
-[MFLocalActionPersistence_iOS initWithDatabase:]
-[MFLocalActionPersistence_iOS labelNameForLabelID:]
T@"MFMailMessageLibrary",W,N,V_library
com.apple.mobilemail.localActionReplayScheduler
%@ for account: %@
T@"MFMailMessageLibrary",&,N,V_library
T@"MailAccount",W,N,V_account
actionsToReplay
T@"NSMutableArray",&,N,V_actionsToReplay
replayScheduler
T@"<EFScheduler>",R,N,V_replayScheduler
needToCheckForNewActions
TB,N,V_needToCheckForNewActions
replayingActions
TB,V_replayingActions
<BR>
Reply-To
Subject
Date
Attachments
Resent-To
Resent-Cc
Resent-From
&nbsp; 
<B>%@:</B> 
<B>%@</B><BR>
%@<BR>
com.apple.message.lockStateMonitor
com.apple.message.lockStateMonitor.notifyq
com.apple.springboard.lockstate
lockStateObservable
locked
TB,R,GisLocked
@"NSNumber"16@?0@"EMMailboxObjectID"8
T@"EDPersistenceDatabase",R,N,V_database
T@"MFMailMessageLibrary",R,W,N,V_library
mailboxProvider
T@"MFMailboxProvider",&,D,N
MFMailboxProvider
com.apple.mail.MFMailboxProviderQueue
v16@?0@"MailAccount"8
@16@?0@"EMObjectID"8
allMailboxObjectIDs
T@"NSSet",R,N
T@"<EDMailboxProviderDelegate>",W,N
accountsProvider
T@"<EDAccountsProvider>",W,N,V_accountsProvider
mailboxUidTransformer
T@"MFMailboxUidTransformer",&,N,V_mailboxUidTransformer
uidToMailboxMap
T@"NSMapTable",&,V_uidToMailboxMap
objectIDToUidMap
T@"NSMapTable",&,V_objectIDToUidMap
allMailboxCache
T@"NSArray",&,V_allMailboxCache
mailboxCacheQueue
T@"NSObject<OS_dispatch_queue>",R,N,V_mailboxCacheQueue
observerScheduler
T@"<EFScheduler>",&,N,V_observerScheduler
T@"<EDMailboxProviderDelegate>",W,N,Vdelegate
v16@?0@"<EMMailboxBuilder>"8
com.apple.mobilemail.MailDropDownload
com.apple.mobilemail.MailDropDownloadWIFIOnly
downloadPromise
primaryConsumer
kMFMailDropServiceKey
MainAccount
MailDropDeliveryStateKey
com.apple.largeattachment
mailAttachment
contentType
uploadDate
v24@?0@"CKRecordZoneID"8@"NSError"16
v40@?0@"CKRecordID"8@"NSString"16@"CKAsset"24@"NSError"32
filesize
v24@?0@"CKRecord"8d16
v24@?0@"CKRecord"8@"NSError"16
@"EFFuture"16@?0@"CKRecord"8
v16@?0@"NSArray"8
v32@?0@"NSArray"8@"NSArray"16@"NSError"24
v24@?0@"CKRecordZone"8@"NSError"16
Could not get zoneID to create zone.
T@"NSArray",&,N,V_attachments
imageArchiveMetadata
T@"EMMailDropMetadata",&,N,V_imageArchiveMetadata
mailDropState
Tq,N,V_mailDropState
https://www.icloud.com/attachment/
https://
expiration-date
x-mac-auto-archive
${f}
${uk}
CREATE INDEX IF NOT EXISTS messages_journaled_conversation_id_date_received_index ON messages(journaled, conversation_id, date_received);
Creating messages_journaled_conversation_id_date_received_index
DROP INDEX IF EXISTS messages_journaled_conversation_id_index;
Dropping messages_journaled_conversation_id_index
DROP TABLE attachments
Dropping attachments
CREATE TABLE attachments (ROWID INTEGER PRIMARY KEY AUTOINCREMENT, message INTEGER NOT NULL REFERENCES messages(ROWID) ON DELETE CASCADE, attachment_id TEXT COLLATE BINARY, name TEXT COLLATE BINARY, UNIQUE(message, attachment_id) ON CONFLICT ABORT);
Creating attachments
CREATE INDEX IF NOT EXISTS attachments_message_attachment_id_index ON attachments(message, attachment_id);
Creating attachments_message_attachment_id_index
CREATE INDEX IF NOT EXISTS attachments_message_name_index ON attachments(message, name);
Creating attachments_message_name_index
CREATE INDEX IF NOT EXISTS searchable_attachments_attachment_index ON searchable_attachments(attachment);
Creating searchable_attachments_attachment_index
CREATE INDEX IF NOT EXISTS searchable_attachments_message_id_index ON searchable_attachments(message_id);
Creating searchable_attachments_message_id_index
ALTER TABLE searchable_message_tombstones RENAME TO searchable_message_tombstones_old;
Renaming searchable_message_tombstones
CREATE TABLE searchable_message_tombstones (ROWID INTEGER PRIMARY KEY AUTOINCREMENT, type INTEGER NOT NULL, identifier TEXT COLLATE BINARY NOT NULL, transaction_id INTEGER, UNIQUE(type, identifier) ON CONFLICT ABORT);
Creating searchable_message_tombstones_new
INSERT INTO searchable_message_tombstones SELECT * FROM searchable_message_tombstones_old;
Copying searchable_message_tombstones to new table
DROP TABLE searchable_message_tombstones_old;
Dropping searchable_message_tombstones_old
CREATE INDEX IF NOT EXISTS searchable_message_tombstones_transaction_id_type_identifier_index ON searchable_message_tombstones(transaction_id, type, identifier);
Creating searchable_message_tombstones_transaction_id_type_identifier_index
CREATE TABLE IF NOT EXISTS searchable_messages (message_id INTEGER PRIMARY KEY, message INTEGER REFERENCES messages(ROWID) ON DELETE SET NULL, transaction_id INTEGER NOT NULL, message_body_indexed INTEGER NOT NULL, reindex_type INTEGER NOT NULL);
Creating searchable_messages table
CREATE INDEX IF NOT EXISTS searchable_messages_message_reindex_type_transaction_id_index ON searchable_messages(message, reindex_type, transaction_id);
Creating searchable_messages_message_reindex_type_transaction_id_index
CREATE INDEX IF NOT EXISTS searchable_messages_message_id_reindex_type_index ON searchable_messages(message_id, reindex_type);
Creating searchable_messages_message_id_reindex_type_index
CREATE TABLE IF NOT EXISTS searchable_message_tombstones (ROWID INTEGER PRIMARY KEY AUTOINCREMENT, type INTEGER NOT NULL, identifier TEXT NOT NULL, transaction_id INTEGER, UNIQUE(type, identifier));
Creating searchable_message_tombstones table
CREATE TABLE IF NOT EXISTS attachments (ROWID INTEGER PRIMARY KEY AUTOINCREMENT, message INTEGER NOT NULL REFERENCES messages(ROWID) ON DELETE CASCADE, attachment_id TEXT, name TEXT, UNIQUE(message, attachment_id));
Creating attachments table
CREATE TABLE IF NOT EXISTS searchable_attachments (attachment_id INTEGER PRIMARY KEY, attachment INTEGER REFERENCES attachments(ROWID) ON DELETE SET NULL, message_id INTEGER, transaction_id INTEGER NOT NULL);
Creating searchable_attachments table
DROP TABLE IF EXISTS spotlight_tombstones;
Dropping spotlight_tombstones table
DROP TABLE IF EXISTS spotlight_message_reindex;
Dropping spotlight_message_reindex table
ssms_mem
DETACH DATABASE ssms_mem
Detaching ssms_mem database
date_last_viewed
visible
sequence_identifier
content_index_transaction_id
flag_color
@"NSMutableArray"16@?0@"NSArray"8
@"EFSQLIndexedColumnSchema"16@?0@"NSString"8
attachment_count
to_cc_count
reconcile
position
sync_key
conversation_id_message_id
value
message_data
message_data_deleted
message_data_id
pop_uids
date_added
accounts
text_id
spotlight_tombstones
transaction_id
spotlight_message_reindex
MFMailMessageLibraryAdoptSharedSchemaMigrationStep.m
Protected database must be attached
CREATE TABLE IF NOT EXISTS protected.messages (message_id INTEGER PRIMARY KEY, sender, subject, _to, cc, bcc)
Creating protected messages
CREATE TABLE IF NOT EXISTS protected.message_data (message_data_id INTEGER PRIMARY KEY, data)
Creating protected message_data
ALTER TABLE main.messages RENAME TO messages_old
Moving messages table aside
ALTER TABLE mailboxes RENAME TO mailboxes_old
Moving mailboxes table aside
ALTER TABLE conversations RENAME TO conversations_old
Moving conversations table aside
ALTER TABLE conversation_id_message_id RENAME TO conversation_id_message_id_old
Moving conversation_id_message_id table aside
ALTER TABLE properties RENAME TO properties_old
Moving properties table aside
ALTER TABLE main.message_data RENAME TO message_data_old
Moving message_data table aside
ALTER TABLE message_data_deleted RENAME TO message_data_deleted_old
Moving message_data_deleted_old table aside
ALTER TABLE pop_uids RENAME TO pop_uids_old
Moving pop_uids table aside
ALTER TABLE accounts RENAME TO accounts_old
Moving accounts table aside
ALTER TABLE spotlight_tombstones RENAME TO spotlight_tombstones_old
Moving spotlight_tombstones table aside
ALTER TABLE spotlight_message_reindex RENAME TO spotlight_message_reindex_old
Moving spotlight_message_reindex table aside
Unable to create new tables
Unable to create new protected tables
ATTACH DATABASE ':memory:' AS ssms_mem
Unable to create in-memory database
CREATE TABLE ssms_mem.parsed_subjects ( original PRIMARY KEY ON CONFLICT IGNORE, prefix TEXT COLLATE BINARY, unprefixed TEXT COLLATE RTRIM ) WITHOUT ROWID
Creating ssms_mem.parsed_subjects table
CREATE TABLE ssms_mem.summary_id_by_message ( message INTEGER PRIMARY KEY, summary_id INTEGER )
Creating ssms_mem.summary_id_by_message table
CREATE TABLE ssms_mem.parsed_addresses ( fullAddress TEXT NOT NULL PRIMARY KEY ON CONFLICT IGNORE, address TEXT, comment TEXT ) WITHOUT ROWID
Creating ssms_mem.parsed_addresses table
DROP TABLE ssms_mem.parsed_subjects
Dropping ssms_mem.subject_prefixes table
DROP TABLE ssms_mem.parsed_addresses
Dropping ssms_mem.parsed_addresses table
DROP TABLE ssms_mem.summary_id_by_message
Dropping ssms_mem.summary_id_by_message table
INSERT INTO message_references (message, reference, is_originator) SELECT message_id, ifnull(reference, 0), ifnull(is_originator, 0) FROM threads
Populating message_references
INSERT INTO mailboxes (ROWID, url, total_count, unread_count, deleted_count, sequence_identifier, flagged_count, to_cc_count, server_unread_count, last_sync_status_count, most_recent_status_count, reconcile) SELECT ROWID, url, ifnull(total_count, 0), ifnull(unread_count, 0), ifnull(deleted_count, 0), sequence_identifier, ifnull(flagged_count, 0), ifnull(to_cc_count, 0), ifnull(server_unread_count, 0), ifnull(last_sync_status_count, 0), ifnull(most_recent_status_count, 0), ifnull(reconcile, 0) FROM mailboxes_old
Populating mailboxes
INSERT INTO conversations (conversation_id, flags, sync_key) SELECT conversation_id, (ifnull(flags, 0) & ~0x2) | ((ifnull(flags, 0) & 0x2) << 1), sync_key FROM conversations_old 
Populating conversations
INSERT INTO conversation_id_message_id (conversation_id, message_id, date_sent) SELECT conversation_id, message_id, ifnull(date_sent, 0) FROM conversation_id_message_id_old
Populating conversation_id_message_id
INSERT INTO properties (key, value) SELECT key, value FROM properties_old
Populating properties
INSERT INTO main.message_data (ROWID, message_id, part, partial, complete, length) SELECT ROWID, message_id, part, partial, complete, length FROM message_data_old WHERE part != 'summary' 
Populating message_data
INSERT INTO message_data_deleted (message_data_id) SELECT message_data_id FROM message_data_deleted_old
Populating message_data_deleted
INSERT INTO pop_uids (mailbox, uid, date_added, flags, del) SELECT mailbox, uid, date_added, flags, del FROM pop_uids_old
Populating pop_uids
INSERT INTO accounts (ROWID, text_id) SELECT ROWID, text_id FROM accounts_old
Populating accounts
INSERT INTO spotlight_tombstones (ROWID, type, identifier, transaction_id) SELECT ROWID, type, identifier, transaction_id FROM spotlight_tombstones_old
Populating spotlight_tombstones
INSERT INTO spotlight_message_reindex (message_id, type) SELECT message_id, type FROM spotlight_message_reindex_old
Populating spotlight_message_reindex
SELECT DISTINCT subject FROM protected.messages JOIN main.messages_old ON main.messages_old.ROWID = protected.messages.message_id 
INSERT INTO ssms_mem.parsed_subjects (original, prefix, unprefixed) VALUES (?1, ?2, ?3)
INSERT INTO ssms_mem.parsed_subjects (original, prefix, unprefixed) VALUES (?1, NULL, ?1)
Inserting into ssms_mem.parsed_subjects
Populating ssms_mem.parsed_subjects
INSERT OR IGNORE INTO protected.subjects (subject) SELECT unprefixed FROM ssms_mem.parsed_subjects
Populating protected.subjects table
CREATE TABLE ssms_mem.temp_summaries ( message INTEGER PRIMARY KEY, summary TEXT NOT NULL )
Creating ssms_mem.temp_summaries table
INSERT INTO ssms_mem.temp_summaries (message, summary) SELECT main.message_data_old.message_id, protected.message_data.data FROM main.message_data_old JOIN protected.message_data ON protected.message_data.message_data_id = main.message_data_old.ROWID WHERE main.message_data_old.part = 'summary' AND protected.message_data.data IS NOT NULL 
Populating ssms_mem.temp_summaries
INSERT OR IGNORE INTO protected.summaries (summary) SELECT summary FROM ssms_mem.temp_summaries 
Populating protected.summaries
INSERT INTO ssms_mem.summary_id_by_message (message, summary_id) SELECT ssms_mem.temp_summaries.message, protected.summaries.ROWID FROM ssms_mem.temp_summaries JOIN protected.summaries ON protected.summaries.summary = ssms_mem.temp_summaries.summary 
Populating ssms_mem.summary_id_by_message
DROP TABLE ssms_mem.temp_summaries
Dropping ssms_mem.temp_summaries table
rawAddress
error creating user function rawAddress
error creating user function displayName
CREATE TABLE ssms_mem.temp_recipients ( message INTEGER NOT NULL, fullAddress TEXT NOT NULL, type INTEGER NOT NULL, position INTEGER NOT NULL )
Creating ssms_mem.temp_recipients table
INSERT INTO ssms_mem.temp_recipients (message, fullAddress, type, position) VALUES (?, ?, ?, ?)
Inserting recipient into ssms_mem.temp_recipients
B28@?0i8r*12Q20
B32@?0q8r*16Q24
SELECT protected.messages.message_id, protected.messages._to, protected.messages.cc, protected.messages.bcc FROM protected.messages JOIN main.messages_old ON main.messages_old.ROWID = protected.messages.message_id 
Populating ssms_mem.temp_recipients
INSERT INTO ssms_mem.parsed_addresses (fullAddress) SELECT sender FROM protected.messages JOIN main.messages_old ON main.messages_old.ROWID = protected.messages.message_id WHERE sender IS NOT NULL UNION ALL SELECT fullAddress FROM ssms_mem.temp_recipients WHERE fullAddress IS NOT NULL 
Populating ssms_mem.parsed_addresses
UPDATE ssms_mem.parsed_addresses SET address = rawAddress(fullAddress), comment = displayName(fullAddress)
Parsing addresses in ssms_mem.parsed_addresses
INSERT OR IGNORE INTO protected.addresses (address, comment) SELECT address, comment FROM ssms_mem.parsed_addresses
Populating protected.addresses
INSERT INTO main.recipients (message, address, type, position) SELECT ssms_mem.temp_recipients.message, protected.addresses.ROWID, ssms_mem.temp_recipients.type, ssms_mem.temp_recipients.position FROM ssms_mem.temp_recipients JOIN ssms_mem.parsed_addresses ON ssms_mem.parsed_addresses.fullAddress = ssms_mem.temp_recipients.fullAddress JOIN protected.addresses ON protected.addresses.address = ssms_mem.parsed_addresses.address AND protected.addresses.comment = ssms_mem.parsed_addresses.comment 
Populating main.recipients
DROP TABLE ssms_mem.temp_recipients
Dropping ssms_mem.temp_recipients table
error deleting user function rawAddress
error deleting user function displayName
DELETE FROM protected.messages WHERE ROWID IN (SELECT message_id FROM messages_deleted)
Deleting rows from protected.messages
messages_old
messages_old.ROWID
ifnull(messages_old.message_id, 0)
protected.addresses.ROWID
ssms_mem.parsed_subjects.prefix
protected.subjects.ROWID
ssms_mem.summary_id_by_message.summary_id
ifnull(flags, 0)
ifnull(read, 0)
ifnull(flagged, 0)
ifnull(deleted, 0)
ifnull(size, 0)
ifnull(conversation_id, 0)
CASE WHEN messages_old.flags & 16 THEN ((messages_old.flags & (7 << 41)) >> 41) ELSE NULL END
v32@?0@"NSString"8@"NSString"16^B24
INSERT INTO main.messages (%@) SELECT %@ FROM messages_old JOIN protected.messages ON messages_old.ROWID = protected.messages.message_id JOIN ssms_mem.parsed_subjects ON ssms_mem.parsed_subjects.original = ifnull(protected.messages.subject, '') JOIN protected.subjects ON protected.subjects.subject = ssms_mem.parsed_subjects.unprefixed LEFT OUTER JOIN ssms_mem.parsed_addresses ON ssms_mem.parsed_addresses.fullAddress = protected.messages.sender LEFT OUTER JOIN protected.addresses ON protected.addresses.address = ssms_mem.parsed_addresses.address AND protected.addresses.comment = ssms_mem.parsed_addresses.comment LEFT OUTER JOIN ssms_mem.summary_id_by_message ON ssms_mem.summary_id_by_message.message = messages_old.ROWID 
Populating messages
Unable to create new indexes
DROP TABLE IF EXISTS messages_old
Dropping old messages table
DROP TABLE IF EXISTS mailboxes_old
Dropping old mailboxes table
DROP TABLE IF EXISTS threads
Dropping threads table
DROP TABLE IF EXISTS conversations_old
Dropping old conversations table
DROP TABLE IF EXISTS conversation_id_message_id_old
Dropping old conversation_id_message_id table
DROP TABLE IF EXISTS properties_old
Dropping old properties table
DROP TABLE IF EXISTS message_data_old
Dropping old message_data table
DROP TABLE IF EXISTS message_data_deleted_old
Dropping old message_data_deleted table
DROP TABLE IF EXISTS pop_uids_old
Dropping old pop_uids table
DROP TABLE IF EXISTS accounts_old
Dropping old accounts table
DROP TABLE IF EXISTS spotlight_tombstones_old
DROP TABLE IF EXISTS spotlight_message_reindex_old
DROP TABLE IF EXISTS messages_deleted
Dropping messages_deleted table
DROP TABLE IF EXISTS protected.messages
Dropping protected.messages
DROP TABLE IF EXISTS protected.message_data
Dropping protected.message_data
connection
T@"EDPersistenceDatabaseConnection",&,N,V_connection
protectedDatabaseName
T@"NSString",R,C,N,V_protectedDatabaseName
schema
T@"EFSQLSchema",R,N
protectedSchema
Creating new pop_uids table
INSERT OR REPLACE INTO pop_uids (mailbox, uid, date_added, flags, del) SELECT mailbox, uid, date_added, flags, del FROM pop_uids_old ORDER BY ROWID ASC 
DROP TABLE pop_uids_old
Dropping pop_uids_old
Creating pop_uids indexes
CREATE TABLE message_global_data (ROWID INTEGER PRIMARY KEY AUTOINCREMENT,
message_id INTEGER,
UNIQUE(message_id) ON CONFLICT ABORT)
Creating message_global_data
INSERT INTO message_global_data (message_id) SELECT DISTINCT message_id FROM messages
Populating message_global_data table
DROP TRIGGER IF EXISTS after_delete_message;
Dropping trigger
ALTER TABLE messages RENAME TO messages_old
Adding new messages table
INSERT INTO messages (ROWID, message_id, global_message_id, remote_id, document_id, sender, subject_prefix, subject, summary, date_sent, date_received, mailbox, remote_mailbox, flags, read, flagged, deleted, size, conversation_id, date_last_viewed, original_mailbox, visible, sender_vip, encoding, content_type, sequence_identifier, external_id, unique_id, content_index_transaction_id, list_id_hash, journaled, flag_color, searchable_message) SELECT messages_old.ROWID, messages_old.message_id, message_global_data.ROWID, remote_id, document_id, sender, subject_prefix, subject, summary, date_sent, date_received, mailbox, remote_mailbox, flags, read, flagged, deleted, size, conversation_id, date_last_viewed, original_mailbox, visible, sender_vip, encoding, content_type, sequence_identifier, external_id, unique_id, content_index_transaction_id, list_id_hash, journaled, flag_color, searchable_message FROM messages_old JOIN message_global_data ON messages_old.message_id = message_global_data.message_id
Copying messages to new table
DROP TABLE messages_old
Adding trigger
INSERT INTO properties  (key, value) VALUES ("NeedToMigrateFiles",1)
Setting need to upgrade property
CREATE TABLE messages (ROWID INTEGER PRIMARY KEY AUTOINCREMENT,
message_id INTEGER NOT NULL DEFAULT 0,
global_message_id INTEGER NOT NULL REFERENCES message_global_data(ROWID) ON DELETE CASCADE,
remote_id INTEGER,
document_id TEXT COLLATE BINARY,
sender INTEGER,
subject_prefix TEXT COLLATE BINARY,
subject INTEGER NOT NULL,
summary INTEGER,
date_sent INTEGER,
date_received INTEGER,
mailbox INTEGER NOT NULL,
remote_mailbox INTEGER,
flags INTEGER NOT NULL DEFAULT 0,
read INTEGER NOT NULL DEFAULT 0,
flagged INTEGER NOT NULL DEFAULT 0,
deleted INTEGER NOT NULL DEFAULT 0,
size INTEGER NOT NULL DEFAULT 0,
conversation_id INTEGER NOT NULL DEFAULT 0,
date_last_viewed INTEGER,
original_mailbox INTEGER,
visible INTEGER,
sender_vip INTEGER,
encoding INTEGER,
content_type INTEGER,
sequence_identifier INTEGER DEFAULT 0,
external_id TEXT COLLATE BINARY,
unique_id INTEGER,
content_index_transaction_id INTEGER,
list_id_hash INTEGER,
journaled INTEGER,
flag_color INTEGER,
searchable_message INTEGER REFERENCES searchable_messages(message_id) ON DELETE SET NULL);
CREATE INDEX messages_message_id_mailbox_index ON messages(message_id, mailbox);
CREATE INDEX messages_global_message_id_mailbox_index ON messages(global_message_id, mailbox);
CREATE INDEX messages_document_id_index ON messages(document_id);
CREATE INDEX messages_sender_index ON messages(sender);
CREATE INDEX messages_subject_index ON messages(subject);
CREATE INDEX messages_summary_index ON messages(summary);
CREATE INDEX messages_date_received_index ON messages(date_received);
CREATE INDEX messages_mailbox_date_received_index ON messages(mailbox, date_received);
CREATE INDEX messages_mailbox_conversation_id_date_received_deleted_index ON messages(mailbox, conversation_id, date_received, deleted);
CREATE INDEX messages_remote_mailbox_remote_id_index ON messages(remote_mailbox, remote_id);
CREATE INDEX messages_read_index ON messages(read);
CREATE INDEX messages_flagged_index ON messages(flagged);
CREATE INDEX messages_deleted_date_received_index ON messages(deleted, date_received);
CREATE INDEX messages_conversation_id_mailbox_read_date_received_deleted_index ON messages(conversation_id, mailbox, read, date_received, deleted);
CREATE INDEX messages_date_last_viewed_index ON messages(date_last_viewed);
CREATE INDEX messages_conversation_id_mailbox_flagged_deleted_index ON messages(conversation_id, mailbox, flagged, deleted);
CREATE INDEX messages_conversation_id_mailbox_deleted_index ON messages(conversation_id, mailbox, deleted);
CREATE INDEX messages_conversation_id_mailbox_sender_date_received_deleted_index ON messages(conversation_id, mailbox, sender, date_received, deleted);
CREATE INDEX messages_conversation_id_mailbox_flags_deleted_index ON messages(conversation_id, mailbox, flags, deleted);
CREATE INDEX messages_mailbox_deleted_journaled_read_sender_vip_flags_conversation_id_date_sent_message_id_date_received_rowid_index ON messages(mailbox, deleted, journaled, read, sender_vip, flags, conversation_id, date_sent, message_id, date_received DESC, ROWID DESC);
CREATE INDEX messages_mailbox_visible_date_received_rowid_index ON messages(mailbox, visible, date_received DESC, ROWID DESC);
CREATE INDEX messages_content_index_transaction_id_deleted_date_received_rowid_index ON messages(content_index_transaction_id, deleted, date_received DESC, ROWID);
CREATE INDEX messages_mailbox_remote_id_sequence_identifier_index ON messages(mailbox, remote_id, sequence_identifier);
CREATE INDEX messages_mailbox_content_index_transaction_id_flags_date_received_index ON messages(mailbox, content_index_transaction_id, flags, date_received ASC);
CREATE INDEX messages_list_id_hash_index ON messages(list_id_hash);
CREATE INDEX messages_journaled_conversation_id_date_received_index ON messages(journaled, conversation_id, date_received);
CREATE INDEX messages_mailbox_conversation_id_flag_color_date_received_journaled_index ON messages(mailbox, conversation_id, flag_color, date_received, journaled);
CREATE INDEX messages_message_id_deleted_journaled_read_mailbox_index ON messages(message_id, deleted, journaled, read, mailbox);
CREATE INDEX messages_deleted_conversation_id_date_received_index ON messages(deleted, conversation_id, date_received);
CREATE INDEX messages_deleted_journaled_mailbox_index ON messages(deleted, journaled, mailbox);
CREATE INDEX messages_deleted_mailbox_date_received_index ON messages(deleted, mailbox, date_received);
CREATE INDEX messages_deleted_sender_vip_date_received_index ON messages(deleted, sender_vip, date_received);
CREATE INDEX messages_deleted_read_journaled_mailbox_conversation_id_sender_vip_index ON messages(deleted, read, journaled, mailbox, conversation_id, sender_vip);
CREATE INDEX messages_flagged_deleted_journaled_mailbox_index ON messages(flagged, deleted, journaled, mailbox);
CREATE INDEX messages_conversation_id_read_deleted_journaled_index ON messages(conversation_id, read, deleted, journaled);
CREATE INDEX messages_sender_vip_deleted_journaled_read_message_id_index ON messages(sender_vip, deleted, journaled, read, message_id) WHERE (sender_vip = 1 AND journaled = 0 AND deleted = 0 AND read = 0);
CREATE INDEX messages_date_received_deleted0_journaled0_read0_index ON messages(date_received) WHERE (deleted = 0 AND journaled = 0 AND read = 0);
CREATE INDEX messages_mailbox_date_received_deleted0_journaled0_read0_index ON messages(mailbox, date_received) WHERE (deleted = 0 AND journaled = 0 AND read = 0);
CREATE INDEX messages_journaled_deleted_date_received_index ON messages(journaled, deleted, date_received) WHERE (journaled = 1 AND deleted = 0);
CREATE INDEX messages_searchable_message_deleted_index ON messages(searchable_message, deleted);
CREATE INDEX messages_mailbox_deleted_date_received_index ON messages(mailbox, deleted, date_received) WHERE journaled = 0;
Adding index
CREATE TRIGGER after_delete_message AFTER DELETE ON messages
    BEGIN
        DELETE FROM message_data WHERE message_id = OLD.ROWID;
    END;
Creating server messages and local actions tables
DROP TABLE offline_cache_operations
Dropping offline_cache_operations
DROP TABLE offline_cache_replay_data
Dropping offline_cache_replay_data
messages.mailbox
messages.remote_id
messages.flags & 1
(messages.flags & (1 << 1)) != 0
replied
(messages.flags & (1 << 2)) != 0
(messages.flags & (1 << 4)) != 0
draft
(messages.flags & (1 << 6)) != 0
forwarded
(messages.flags & (1 << 8)) != 0
redirected
(messages.flags & (1 << 9)) != 0
junk_level_set_by_user
junk_level
(((messages.flags & (1 << 21)) != 0) AND ((messages.flags & (1 << 31)) == 0)) | ((((messages.flags & (1 << 21)) == 0) AND ((messages.flags & (1 << 31)) != 0)) << 1)
((messages.flags & (1 << 32)) == 0) AND (mailboxes.url LIKE 'imap://%%')
INSERT OR IGNORE INTO server_messages (%@) SELECT %@ FROM messages JOIN mailboxes ON messages.mailbox = mailboxes.ROWID WHERE %@
Creating server_messages from messages
SELECT operation_data FROM offline_cache_operations WHERE completed = '0' ORDER BY rowid ASC
getting offline cache operations
CREATE TABLE IF NOT EXISTS server_messages (ROWID INTEGER PRIMARY KEY AUTOINCREMENT, message INTEGER REFERENCES messages(ROWID) ON DELETE SET NULL, mailbox INTEGER NOT NULL REFERENCES mailboxes(ROWID) ON DELETE CASCADE, sequence_identifier INTEGER, read INTEGER NOT NULL, deleted INTEGER NOT NULL, replied INTEGER NOT NULL, flagged INTEGER NOT NULL, draft INTEGER NOT NULL, forwarded INTEGER NOT NULL, redirected INTEGER NOT NULL, junk_level_set_by_user INTEGER NOT NULL, junk_level INTEGER NOT NULL, flag_color INTEGER NOT NULL, remote_id INTEGER NOT NULL, UNIQUE(mailbox, remote_id) ON CONFLICT ABORT);
CREATE INDEX IF NOT EXISTS server_messages_message_index ON server_messages(message);
CREATE TABLE IF NOT EXISTS server_labels (server_message INTEGER REFERENCES server_messages(ROWID) ON DELETE CASCADE, label INTEGER REFERENCES mailboxes(ROWID) ON DELETE CASCADE, PRIMARY KEY(server_message, label)) WITHOUT ROWID;
CREATE TABLE IF NOT EXISTS local_message_actions (ROWID INTEGER PRIMARY KEY AUTOINCREMENT, mailbox INTEGER REFERENCES mailboxes(ROWID) ON DELETE CASCADE, source_mailbox INTEGER REFERENCES mailboxes(ROWID) ON DELETE CASCADE, destination_mailbox INTEGER REFERENCES mailboxes(ROWID) ON DELETE CASCADE, action_type INTEGER, user_initiated INTEGER);
CREATE INDEX IF NOT EXISTS local_message_actions_mailbox_rowid_index ON local_message_actions(mailbox, ROWID);
CREATE TABLE IF NOT EXISTS action_messages (ROWID INTEGER PRIMARY KEY, action INTEGER REFERENCES local_message_actions(ROWID) ON DELETE CASCADE, action_phase INTEGER, message INTEGER REFERENCES messages(ROWID) ON DELETE SET NULL, remote_id INTEGER, destination_message INTEGER REFERENCES messages(ROWID) ON DELETE CASCADE);
CREATE INDEX IF NOT EXISTS action_messages_action_index ON action_messages(action);
CREATE INDEX IF NOT EXISTS action_messages_message_index ON action_messages(message);
CREATE INDEX IF NOT EXISTS action_messages_destination_message_index ON action_messages(destination_message);
CREATE TABLE IF NOT EXISTS action_labels (ROWID INTEGER PRIMARY KEY, action INTEGER REFERENCES local_message_actions(ROWID) ON DELETE CASCADE, do_add INTEGER, label INTEGER REFERENCES mailboxes(ROWID) ON DELETE CASCADE);
CREATE INDEX IF NOT EXISTS action_labels_action_index ON action_labels(action);
CREATE INDEX IF NOT EXISTS action_labels_label_index ON action_labels(label);
CREATE TABLE IF NOT EXISTS action_flags (ROWID INTEGER PRIMARY KEY, action INTEGER REFERENCES local_message_actions(ROWID) ON DELETE CASCADE, flag_type INTEGER, flag_value INTEGER);
CREATE INDEX IF NOT EXISTS action_flags_action_index ON action_flags(action);
SELECT ROWID, mailbox FROM messages WHERE remote_id = ? LIMIT 1
Fetching database ID and mailbox for message
supportsSecureCoding
-[_MFDADeferredSetFlagsOperation initWithCoder:]
/Library/Caches/com.apple.xbs/Sources/Mail_Message_Sim/Mail-3654.0.3.1.12/Message/Library.subproj/MFMailMessageLibraryLocalActionsTablesMigrationStep.m
[aDecoder allowsKeyedCoding] && "aDecoder must allow keyed coding"
OnFlags
OffFlags
MessageID
-[_MFDADeferredSetFlagsOperation encodeWithCoder:]
[aCoder allowsKeyedCoding] && "aCoder must allow keyed coding"
INSERT INTO local_message_actions (action_type, mailbox, source_mailbox, destination_mailbox, user_initiated) VALUES (3, ?, NULL, NULL, 0)
Inserting flag change action
INSERT INTO action_flags (action, flag_type, flag_value) VALUES (?, 1, ?)
Inserting read flag change
INSERT INTO action_flags (action, flag_type, flag_value) VALUES (?, 4, ?)
Inserting flagged flag change
INSERT INTO action_messages (action, message, remote_id, destination_message, action_phase) VALUES (?, ?, ?, NULL, 0)
Inserting message for flag change
%@ message-id "%@", on-flags %llu, off-flags %llu
-[_MFDADeferredDeleteMessageOperation initWithCoder:]
-[_MFDADeferredDeleteMessageOperation encodeWithCoder:]
INSERT INTO local_message_actions (action_type, mailbox, source_mailbox, destination_mailbox, user_initiated) VALUES (5, ?, ?, NULL, 0)
Inserting delete action
INSERT INTO action_messages (action, message, remote_id, destination_message, action_phase) VALUES (?, ?, ?, NULL, 4)
Inserting message for delete
%@ message-id "%@"
-[MFDADeferredMessageMoveOperation initWithCoder:]
SourceMailbox
DestinationMailbox
SourceRemoteIDs
OriginalFlags
TemporaryIDs
-[MFDADeferredMessageMoveOperation encodeWithCoder:]
SELECT messages.ROWID, messages.mailbox, mailboxes.url FROM messages JOIN mailboxes ON messages.mailbox = mailboxes.ROWID WHERE remote_id IN (%@)
ef_quotedSQLEscapedString
Selecting messages with temporary remote IDs
SELECT ROWID FROM mailboxes WHERE URL = ? LIMIT 1
Selecting source mailbox
INSERT INTO local_message_actions (action_type, mailbox, source_mailbox, destination_mailbox, user_initiated) VALUES (6, ?, ?, ?, 0)
Inserting move action
INSERT INTO action_messages (action, message, remote_id, destination_message, action_phase) VALUES (?, NULL, ?, ?, 3)
Inserting message for move
v32@?0@"NSNumber"8Q16^B24
%@ source "%@", destination "%@", %lu messages
-[MFDADeferredStoreDraftOperation initWithCoder:]
-[MFDADeferredStoreDraftOperation encodeWithCoder:]
SELECT ROWID, mailbox FROM messages JOIN WHERE message_id = ? LIMIT 1
Selecting message for append
INSERT INTO local_message_actions (action_type, mailbox, source_mailbox, destination_mailbox, user_initiated) VALUES (2, ?, NULL, ?, 0)
Inserting append action
INSERT INTO action_messages (action, message, remote_id, destination_message, action_phase) VALUES (?, NULL, NULL, ?, 3)
Inserting message for append
-[_MFDADeferredNewMailboxOperation initWithCoder:]
ParentFolderID
TemporaryFolderID
-[_MFDADeferredNewMailboxOperation encodeWithCoder:]
%@ display-name "%@", parent-folder-id "%@", temporary-folder-id "%@"
-[_MFDADeferredDeleteMailboxOperation initWithCoder:]
-[_MFDADeferredDeleteMailboxOperation encodeWithCoder:]
%@ folder-id "%@"
-[_MFDADeferredModifyMailboxOperation initWithCoder:]
NewParentFolderID
NewDisplayName
-[_MFDADeferredModifyMailboxOperation encodeWithCoder:]
%@ folder-id "%@", new-parent-folder-id "%@", new-display-name "%@"
-[_MFDADeferredSelectMailboxOperation initWithCoder:]
-[_MFDADeferredSelectMailboxOperation encodeWithCoder:]
SELECT url FROM mailboxes WHERE %@
sqliteConnection
T@"EDPersistenceDatabaseConnection",&,N,V_sqliteConnection
MobileMailMigratorNeedsSpotlightReIndexKey
com.apple.message.MFMailMessageLibraryMigrator.contentProtectionQueue
PRAGMA foreign_keys = OFF;
disabling foreign keys
PRAGMA foreign_keys = ON;
v16@?0@"EDPersistenceDatabaseConnection"8
TellurideVersion
SundanceConversationHashesMustBeNonZeroVersion
SundanceCreateMessageInfosCoveringIndexVersion
SundanceMessagesHaveVIPSenderFlag
InnsbruckMessagesHaveUniqueRemoteID
InnsbruckMessagesHaveContentTransactionID
InnsbruckBetterMessageConversationIndexes
InnsbruckCondStoreSequenceIdentifierIndex
InnsbruckFlaggedAndAttachmentCounts
InnsbruckToCcCounts
InnsbruckServerOnlyUnreadCounts
SochiFixFlaggedCount
SochiFixFlaggedCount2
OkemoConversationFlags
MonarchAddSuggestionsProcessingStateColumn
MonarchResetSuggestionsProcessingStateColumn
MonarchDuplicatesSuppression
MonarchRestoreTriggers
MonarchUpdateMessageInfoCoveringIndex
MonarchUnreadCountDuplicateSuppression
MonarchUnreadCountIgnoreSearchResult
MonarchUnreadCountPreventNegativeValue
MonarchFasterSpotlightIndexing
MonarchOldestNonIndexedMessagesLookup
MonarchForceSpotlightReindex
BoulderAddSpotlightTombstones
BoulderForceSpotlightReindex
BoulderForceSpotlightReindex2
BoulderForceSpotlightReindex3
BoulderZeroOutPOPServerUnreadCount
BoulderForceSpotlightReindex4
WhitetailAddListIDColumn
WhitetailRemoveDecluttering
WhitetailForceSpotlightReindex
WhitetailForceSpotlightReindex2
TigrisForceSpotlightReindexConversationID
TigrisAddUnseenCountColumn
TigrisAddReconcileColumn
TigrisAddSpotlightReindexTable
TigrisAddMBLQueueTable
TigrisForceSpotlightReindexSupportDND
TigrisRemoveMBDLQueueTable
TigrisAddUnmergedColumn
TigrisResetStatusCountsForDrafts
TigrisSetSpotlightDataTypes
TigrisUpgradePadding70
TigrisUpgradePadding71
TigrisUpgradePadding72
LastDeprecatedNumberingScheme
EmetBaseline
EmetSetSpotlightDataOwner
PeaceBaseline
PeaceAddMessageJournaledIndex
PeaceAddMessageJournaledConversationIndex
YukonBaseline
YukonAddDocumentIDColumn
YukonUpdateMuteThreadFlagBit
YukonAddMessageJournaledIndex
YukonAddLocalMessageActionsTables
YukonMessageInteractionMetricsColumns
YukonAddCategoryColumnsNoLongerUsed
YukonFixBrokenUpgradesFromPeace
YukonAddCategoryColumns
YukonRemoveOfflineCacheTables
YukonModifyColumnDefinitions
YukonAdoptSharedSchema
YukonAddProtectedDataIndexes
YukonAddInteractionLogTable
YukonAddReadLaterTable
Renaming threads to message_references
YukonRenameThreadsTable
Creating messages deleted date received index
YukonAddMessageDeletedDateReceivedIndex
Creating searchable index tables
YukonAddSearchableIndexTables
YukonAddJournaledConversationIDDateReceivedIndex
Adding thread tables
YukonAddThreadTables
YukonAddThreadsScopeConverationDateIndex
YukonMigrateEmailUserDefaults
Setting conflict resolution for primary key of thread_senders and thread_recipients
YukonSetConflictResolutionForThreadSendersAndRecipients
Reset sequence_identifier for messages
YukonResetSequenceIdentifierForFlagColors
YukonAddThreadSendersAndRecipientsIndexes
Adding flag support to threads
YukonAddThreadFlagColorsColumns
YukonAddThreadJournaledColumn
YukonAddMessageIndexesForThreadQueries
YukonAddMessageIDIndex
YukonSenderVIPCountQueryIndex
YukonRemoveCategorySchema
YukonModifyDeletedMailboxIndex
YukonAddJournaledUndeletedIndex
YukonCachedMetadataTableUnused1
YukonRemoveReadLaterSchema
YukonRemoveReadLaterSchemaDotsubmission
YukonCachedMetadataTableUnused2
YukonAddTableMetadataTable
YukonCachedMetadataTable
YukonFixPopUidsUniquenessConstraint
YukonAddThreadJournaledDateIndex
YukonMigrateBlockedSenderEnabledToActionEnum
YukonAddUnreadCountIndexes
YukonAddAppBadgeCountIndexes
YukonResetThreadScopes
YukonResetSummary
YukonAddSenderVIPAndConversationIndexes
YukonResetThreadScopes2
YukonAddFilterIndexesAndRemoveTriggers
Removing deleted column from threads
YukonResetThreadScopes3
YukonCDEBaseline
Adding searchable_message column to messages
YukonCDEAddMessagesSearchableMessageColumn
YukonCDEModifyMessagesSearchableMessageIndex
YukonCDEAddInMemoryThreadIndex
AzulBaseline
Adding global data table
AzulAddMessageGlobalData
AzulResetMessageMetadata
Adding remote_content_links table
AzulAddRemoteContentLinksTable
AzulRecreateMessageIndices
AzulSetUseLegacyMessageIDHashFormat
AzulReindexMessagesMailMessageID
AzulRemoveRemoteContentLinksTable
Adding searchable_messages index
AzulUpdateSearchableMessagesIndex
Updating globalMessageID index
PRAGMA foreign_key_check
Checking foreign keys
_MFTTRUserPromptLastResponseUserDefaultsKey
_MFTTRUserPromptLastResponseVersionUserDefaultsKey
currentVersion
Ti,R
T@"<MFMailMessageLibraryMigratorDelegate>",R,W,N,V_delegate
contentProtectionQueue
T@"NSObject<OS_dispatch_queue>",R,N,V_contentProtectionQueue
migrationState
T@"NSConditionLock",R,N,V_migrationState
SELECT value FROM properties WHERE key = 'version'
INSERT OR REPLACE INTO properties (key, value) values ('version', ?)
setting library version
preparing library version insert statement
performing statements from schema definition
triggers.sql
performing statements from file "triggers.sql"
PRAGMA page_size = 4096;
setting page_size
setting auto_vacuum
PRAGMA journal_mode=WAL
setting journal mode
PRAGMA auto_vacuum=1
SELECT rowid FROM messages WHERE conversation_id = 0 or conversation_id is NULL
gathering library ids of messages without conversation hashes
UPDATE messages SET conversation_id = ?, content_index_transaction_id = NULL WHERE rowid = ?
updating messages with new conversation hashes
DROP INDEX message_deleted_index
dropping message deleted index
ALTER TABLE messages ADD COLUMN sender_vip;
adding sender_vip column
ALTER TABLE messages ADD COLUMN unique_id;
adding unique_id column
ALTER TABLE messages ADD COLUMN content_index_transaction_id INTEGER;
adding content_index_transaction_id column
CREATE INDEX message_content_index_transaction_id_index ON messages(content_index_transaction_id);
adding content_index_transaction_id index
DROP INDEX IF EXISTS message_conversation_id_index;
CREATE INDEX message_conversation_id_index ON messages(conversation_id, mailbox, read, date_received);
DROP INDEX IF EXISTS message_oldest_conversation_index;
CREATE INDEX message_oldest_conversation_index on messages(mailbox, conversation_id, date_received);
replacing conversation indexes
DROP INDEX IF EXISTS message_sequence_identifier_index;
CREATE INDEX message_sequence_identifier_index ON messages(mailbox, remote_id, sequence_identifier);
adding sequence identifier index
ALTER TABLE mailboxes ADD COLUMN flagged_count INTEGER DEFAULT 0; ALTER TABLE mailboxes ADD COLUMN attachment_count INTEGER DEFAULT 0;
altering mailboxes table
update mailboxes set flagged_count = (select count(*) from messages where mailbox = mailboxes.rowid AND flags&16 > 0);
updating flagged_count
update mailboxes set attachment_count = (select count(*) from messages where mailbox = mailboxes.rowid AND (((flags&(63<<10))>>10) BETWEEN 1 AND 62) AND flags&1 = 0);
updating attachment_count
ALTER TABLE mailboxes ADD COLUMN to_cc_count INTEGER DEFAULT 0;
INSERT OR REPLACE INTO properties (key, value) VALUES ('MaxRowIdForMigrationToVersion31', (SELECT MAX(rowid) FROM messages));
adding maxrowid property
ALTER TABLE mailboxes ADD COLUMN server_unread_count INTEGER DEFAULT 0;
UPDATE mailboxes SET flagged_count = (select count(*) FROM messages WHERE mailbox = mailboxes.rowid AND flags&16 > 0 AND flags&2 == 0);
CREATE TABLE conversations (conversation_id INTEGER PRIMARY KEY, flags INTEGER DEFAULT 0, sync_key TEXT);
CREATE TABLE conversation_id_message_id (conversation_id INTEGER, message_id INTEGER, date_sent INTEGER DEFAULT 0, UNIQUE (conversation_id, message_id), FOREIGN KEY (conversation_id) REFERENCES conversations(conversation_id) ON DELETE CASCADE ON UPDATE CASCADE);
CREATE INDEX conversation_id_message_id_index ON conversation_id_message_id(conversation_id, message_id); CREATE INDEX message_id_conversation_id_index ON conversation_id_message_id(message_id, conversation_id);
INSERT INTO conversations (conversation_id) SELECT DISTINCT(conversation_id) FROM messages;
INSERT OR IGNORE INTO conversation_id_message_id (conversation_id,message_id,date_sent) SELECT conversation_id, message_id, date_sent FROM messages;
INSERT OR IGNORE INTO conversation_id_message_id (conversation_id,message_id) SELECT messages.conversation_id, threads.reference FROM messages, threads WHERE messages.rowid = threads.message_id;
creating conversations and conversation_id_message_id tables
DROP INDEX IF EXISTS message_infos_index;
CREATE INDEX message_infos_index ON messages(mailbox, deleted, journaled, sender_vip, flags, conversation_id, date_sent, message_id, date_received DESC, ROWID DESC);
updating message_infos_index covering index
UPDATE mailboxes SET total_count = (SELECT COUNT(DISTINCT(message_id)) FROM messages WHERE (mailbox = mailboxes.ROWID));
UPDATE mailboxes SET unread_count = (SELECT COUNT(DISTINCT(message_id)) FROM messages WHERE (flags&1 = 0) AND (mailbox = mailboxes.ROWID));
UPDATE mailboxes SET deleted_count = (SELECT COUNT(DISTINCT(message_id)) FROM messages WHERE (flags&2 > 0) AND (mailbox = mailboxes.ROWID));
UPDATE mailboxes SET flagged_count = (SELECT COUNT(DISTINCT(message_id)) FROM messages WHERE (flags&16 > 0 AND flags&2 = 0) AND (mailbox = mailboxes.ROWID));
UPDATE mailboxes SET attachment_count = (SELECT COUNT(DISTINCT(message_id)) FROM messages WHERE ((((flags&(63<<10))>>10) BETWEEN 1 AND 62) AND flags&1 = 0) AND (mailbox = mailboxes.ROWID));
UPDATE mailboxes SET to_cc_count = (SELECT COUNT(DISTINCT(message_id)) FROM messages WHERE ((flags&(3<<39)>>39) > 0 AND flags&1 = 0) AND (mailbox = mailboxes.ROWID));
updating mailboxes counts
UPDATE mailboxes SET unread_count = (SELECT COUNT(DISTINCT(message_id)) FROM messages WHERE (flags&1 = 0 AND flags&128 = 0 AND flags&1048576 = 0) AND (mailbox = mailboxes.ROWID));
updating mailboxes unread_count
DROP INDEX message_content_index_transaction_id_index;
CREATE INDEX message_content_index_transaction_id_index ON messages(content_index_transaction_id, deleted, date_received DESC, ROWID);
updating message_content_index_transaction_id
CREATE INDEX message_mailbox_content_index ON messages (mailbox, content_index_transaction_id, flags, date_received ASC)
adding message_mailbox_content_index
DROP TABLE IF EXISTS spotlight_tombstones
CREATE TABLE spotlight_tombstones (ROWID INTEGER PRIMARY KEY AUTOINCREMENT,
                                   type INTEGER,
                                   identifier TEXT,
                                   transaction_id INTEGER,
                                   UNIQUE(type, identifier))
CREATE INDEX spotlight_tombstones_transaction_index ON spotlight_tombstones(transaction_id, type, identifier)
adding spotlight tombstones table
UPDATE mailboxes SET server_unread_count = 0 WHERE url LIKE "pop:%";
ALTER TABLE messages ADD COLUMN list_id_hash INTEGER;
adding list_id_hash column
CREATE INDEX message_list_id_hash_index ON messages(list_id_hash);
adding message_list_id_hash_index index
ALTER TABLE mailboxes ADD COLUMN last_sync_status_count INTEGER DEFAULT 0;
ALTER TABLE mailboxes ADD COLUMN most_recent_status_count INTEGER DEFAULT 0;
adding mailboxes status count columns
SELECT DISTINCT mailbox FROM messages WHERE flags&64 = 64;
finding mailbox IDs of draft mailboxes
UPDATE mailboxes SET last_sync_status_count = unread_count + server_unread_count, most_recent_status_count = unread_count + server_unread_count WHERE url LIKE 'imap:%%' AND rowid NOT IN (%s)
updating count columns for non-draft mailboxes
UPDATE mailboxes SET last_sync_status_count = unread_count + server_unread_count, most_recent_status_count = unread_count + server_unread_count WHERE url LIKE 'imap:%'
updating count columns
ALTER TABLE mailboxes ADD COLUMN reconcile;
adding reconcile column
CREATE TABLE spotlight_message_reindex (message_id INTEGER,
                                        type INTEGER,
                                        UNIQUE(message_id),
                                        FOREIGN KEY (message_id) REFERENCES messages(ROWID) ON DELETE CASCADE);
CREATE INDEX spotlight_message_reindex_index ON spotlight_message_reindex(message_id, type);
adding spotlight message reindex table
DROP TABLE IF EXISTS mbl_queue;
removing mbl_queue table
ALTER TABLE messages ADD COLUMN journaled DEFAULT '0';
adding journaled column
UPDATE mailboxes SET last_sync_status_count = 0, most_recent_status_count = 0 WHERE url LIKE 'imap:%%' AND rowid IN (%s)
DROP TABLE IF EXISTS offline_cache_operations;
DROP TABLE IF EXISTS offline_cache_replay_data;
DROP TRIGGER after_delete_account;
removing offline cache tables
CREATE INDEX IF NOT EXISTS messages_subject_index ON messages(subject);
CREATE INDEX IF NOT EXISTS messages_summary_index ON messages(summary);
CREATE INDEX IF NOT EXISTS recipients_address_index ON recipients(address);
Creating indexes to protected data
CREATE INDEX IF NOT EXISTS thread_senders_address_thread_index ON thread_senders(address, thread);
CREATE INDEX IF NOT EXISTS thread_senders_thread_priority_date_index ON thread_senders(thread, priority, date);
CREATE INDEX IF NOT EXISTS thread_recipients_address_thread_index ON thread_recipients(address, thread);
CREATE INDEX IF NOT EXISTS thread_recipients_thread_priority_date_index ON thread_recipients(thread, priority, date);
Creating indexes for thread_senders and thread_recipients
ALTER TABLE threads ADD COLUMN journaled INTEGER NOT NULL DEFAULT 0;
CREATE INDEX IF NOT EXISTS threads_journaled_scope_date_conversation_index ON threads(journaled, scope, date, conversation);
CREATE INDEX IF NOT EXISTS threads_journaled_date_scope_conversation_index ON threads(journaled, date, scope, conversation) WHERE journaled = 1;
DROP INDEX IF EXISTS threads_scope_read_date_conversation_index;
DROP INDEX IF EXISTS threads_scope_flagged_date_conversation_index;
DROP INDEX IF EXISTS threads_scope_has_red_flag_date_conversation_index;
DROP INDEX IF EXISTS threads_scope_has_orange_flag_date_conversation_index;
DROP INDEX IF EXISTS threads_scope_has_yellow_flag_date_conversation_index;
DROP INDEX IF EXISTS threads_scope_has_green_flag_date_conversation_index;
DROP INDEX IF EXISTS threads_scope_has_blue_flag_date_conversation_index;
DROP INDEX IF EXISTS threads_scope_has_purple_flag_date_conversation_index;
DROP INDEX IF EXISTS threads_scope_has_gray_flag_date_conversation_index;
CREATE INDEX IF NOT EXISTS messages_mailbox_conversation_id_flag_color_date_received_journaled_index ON messages(mailbox, conversation_id, flag_color, date_received, journaled);
DROP INDEX IF EXISTS messages_mailbox_conversation_id_flag_color_date_received_index;
Adding threads.journaled and tweaking some indexes
@"NSString"16@?0@"EFSQLIndexSchema"8
Creating messages_message_id_deleted_journaled_read_mailbox_index
Creating messages_sender_vip_deleted_journaled_read_message_id_index
DROP INDEX IF EXISTS messages_deleted_mailbox_index;
Creating messages_deleted_mailbox_date_received_index
Creating messages_journaled_deleted_date_received_index
DROP TABLE IF EXISTS message_metadata;
Dropping table message_metadata.
CREATE TABLE message_metadata (message_id INTEGER PRIMARY KEY, timestamp INTEGER NOT NULL, json_values TEXT COLLATE BINARY NOT NULL);
Creating message_metadata table.
CREATE INDEX message_metadata_timestamp_index ON message_metadata(timestamp);
Creating message_metadata index.
CREATE TABLE IF NOT EXISTS table_metadata (table_name TEXT COLLATE BINARY NOT NULL,
                                           largest_deleted_rowid INTEGER NOT NULL DEFAULT 0,
                                           PRIMARY KEY(table_name)) WITHOUT ROWID;
creating table_metadata table
Creating threads_journaled_date_scope_conversation_index
Creating indexes for conversations and message unread counts
CREATE INDEX IF NOT EXISTS
   messages_mailbox_deleted_journaled_read_sender_vip_flags_conversation_id_date_sent_message_id_date_received_rowid_index
   ON messages(
       mailbox, deleted, journaled, read, sender_vip, flags, conversation_id,
       date_sent, message_id, date_received DESC, ROWID DESC);
DROP INDEX IF EXISTS
   messages_mailbox_deleted_journaled_sender_vip_flags_conversation_id_date_sent_message_id_date_received_rowid_index;
Updating indexes for unread counts
thread_mailboxes
DROP INDEX IF EXISTS messages_flagged_deleted_journaled_index
Creating indexes for app badge count
UPDATE messages SET summary = NULL WHERE summary in (select rowid from protected.summaries where summary = 'This message has no content');
DELETE FROM protected.summaries where summary = 'This message has no content'
Deleting all summaries = 'This message has no content' in protected data
Adding sender_vip/conversation message indexes
DROP INDEX IF EXISTS messages_mailbox_conversation_id_date_received_index;
DROP INDEX IF EXISTS messages_conversation_id_mailbox_read_date_received_index;
DROP INDEX IF EXISTS messages_conversation_id_mailbox_flagged_index;
DROP INDEX IF EXISTS messages_conversation_id_mailbox_sender_date_received_index;
DROP INDEX IF EXISTS messages_conversation_id_mailbox_flags_index;
Adding deleted to conversation_id indexes
messages_date_received_deleted0_journaled0_read0_index
messages_mailbox_date_received_deleted0_journaled0_read0_index
newest_read_message
display_message
DROP TRIGGER IF EXISTS after_add_message;
DROP TRIGGER IF EXISTS after_update_message;
CREATE TRIGGER after_delete_message AFTER DELETE ON messages
    BEGIN
        DELETE FROM message_data WHERE message_id = OLD.ROWID;
    END;
Creating indexes for unread filters and dropping triggers
DROP INDEX IF EXISTS messages_deleted_searchable_message_index;
CREATE INDEX IF NOT EXISTS messages_searchable_message_deleted_index ON messages(searchable_message, deleted);
Replacing messages_deleted_searchable_message_index with messages_searchable_message_deleted_index
CREATE INDEX IF NOT EXISTS messages_mailbox_deleted_date_received_index ON messages(mailbox, deleted, date_received) WHERE journaled = 0;
Adding messages_mailbox_deleted_date_received_index
DELETE FROM message_metadata;
Removing all entries from message_metadata.
INSERT INTO properties (key, value) VALUES ('UseLegacyMessageIDHashFormat', 1) ON CONFLICT(key) DO UPDATE SET value = 1;
Inserting UseLegacyMessageIDHashFormat property.
DROP TABLE IF EXISTS remote_content_links;
Removing remote_content_links table.
DROP INDEX IF EXISTS messages_global_message_id_index;
Unable to drop index messages_global_message_id_index
Unable to add index messages_global_message_id_mailbox_index
server_messages
server_labels
server_message
label
local_message_actions
action_messages
action_labels
action_flags
source_mailbox
destination_mailbox
destination_message
action_type
user_initiated
action_phase
do_add
flag_type
flag_value
ALTER TABLE server_messages RENAME TO server_messages_old
Renaming old server_messages
Creating new server_messages
INSERT INTO server_messages SELECT * FROM server_messages_old
Populating new server_messages from old server_messages
DROP TABLE IF EXISTS server_messages_old
Dropping old server_messages
Creating new indexes for server_messages
ALTER TABLE local_message_actions RENAME TO local_message_actions_old
Renaming old local_message_actions
Creating new local_message_actions
INSERT INTO local_message_actions SELECT * FROM local_message_actions_old
Populating new local_message_actions from old local_message_actions
DROP TABLE IF EXISTS local_message_actions_old
Dropping old local_message_actions
Creating new indexes for local_message_actions
criterionConverter
T@"MFMessageCriterionConverter",&,N,V_criterionConverter
messagePersistence
T@"EDMessagePersistence",R,W,N,V_messagePersistence
thread_scopes
has_red_flag
has_orange_flag
has_yellow_flag
has_green_flag
has_blue_flag
has_purple_flag
has_gray_flag
has_unflagged
has_attachments
count
v32@?0@"NSString"8@"EFSQLTableSchema"16Q24
v24@?0@"NSString"8@"EFSQLTableSchema"16
DROP TABLE threads
Dropping threads
DELETE FROM thread_scopes
Clearing thread_scopes
DELETE FROM thread_mailboxes
Clearing thread_mailboxes
DELETE FROM thread_senders
Clearing thread_senders
DELETE FROM thread_recipients
Clearing thread_recipients
Creating new threads
DROP INDEX messages_message_id_mailbox_index;
DROP INDEX messages_global_message_id_index;
DROP INDEX messages_document_id_index;
DROP INDEX messages_sender_index;
DROP INDEX messages_subject_index;
DROP INDEX messages_summary_index;
DROP INDEX messages_date_received_index;
DROP INDEX messages_mailbox_date_received_index;
DROP INDEX messages_mailbox_conversation_id_date_received_deleted_index;
DROP INDEX messages_remote_mailbox_remote_id_index;
DROP INDEX messages_read_index;
DROP INDEX messages_flagged_index;
DROP INDEX messages_deleted_date_received_index;
DROP INDEX messages_conversation_id_mailbox_read_date_received_deleted_index;
DROP INDEX messages_date_last_viewed_index;
DROP INDEX messages_conversation_id_mailbox_flagged_deleted_index;
DROP INDEX messages_conversation_id_mailbox_deleted_index;
DROP INDEX messages_conversation_id_mailbox_sender_date_received_deleted_index;
DROP INDEX messages_conversation_id_mailbox_flags_deleted_index;
DROP INDEX messages_searchable_message_deleted_index;
DROP INDEX messages_mailbox_deleted_journaled_read_sender_vip_flags_conversation_id_date_sent_message_id_date_received_rowid_index;
DROP INDEX messages_mailbox_visible_date_received_rowid_index;
DROP INDEX messages_content_index_transaction_id_deleted_date_received_rowid_index;
DROP INDEX messages_mailbox_remote_id_sequence_identifier_index;
DROP INDEX messages_mailbox_content_index_transaction_id_flags_date_received_index;
DROP INDEX messages_list_id_hash_index;
DROP INDEX messages_journaled_conversation_id_date_received_index;
DROP INDEX messages_mailbox_conversation_id_flag_color_date_received_journaled_index;
DROP INDEX messages_message_id_deleted_journaled_read_mailbox_index;
DROP INDEX messages_deleted_conversation_id_date_received_index;
DROP INDEX messages_deleted_journaled_mailbox_index;
DROP INDEX messages_deleted_mailbox_date_received_index;
DROP INDEX messages_deleted_sender_vip_date_received_index;
DROP INDEX messages_deleted_read_journaled_mailbox_conversation_id_sender_vip_index;
DROP INDEX messages_flagged_deleted_journaled_mailbox_index;
DROP INDEX messages_conversation_id_read_deleted_journaled_index;
DROP INDEX messages_sender_vip_deleted_journaled_read_message_id_index;
DROP INDEX messages_date_received_deleted0_journaled0_read0_index;
DROP INDEX messages_mailbox_date_received_deleted0_journaled0_read0_index;
DROP INDEX messages_journaled_deleted_date_received_index;
DROP INDEX messages_mailbox_deleted_date_received_index;
CREATE INDEX messages_global_message_id_index ON messages(global_message_id);
UPDATE messages SET sequence_identifier = 0
thread_senders
thread
priority
thread_recipients
v32@?0@"EFSQLTableSchema"8@"NSString"16@"EFSQLTableSchema"24
ALTER TABLE thread_senders RENAME TO thread_senders_old
Renaming thread_senders
ALTER TABLE thread_recipients RENAME TO thread_recipients_old
Renaming thread_recipients
Creating new thread_senders and thread_recipients
INSERT INTO thread_senders SELECT * FROM thread_senders_old
Repopulating thread_senders
INSERT INTO thread_recipients SELECT * FROM thread_recipients_old
Repopulating thread_recipients
DROP TABLE thread_senders_old
Dropping old thread_senders
DROP TABLE thread_recipients_old
Dropping old thread_recipients
threadSendersTableSchema
T@"EFSQLTableSchema",R,N
threadRecipientsTableSchema
ALTER TABLE messages ADD COLUMN flag_color INTEGER
Adding messages.flag_color
CREATE INDEX IF NOT EXISTS messages_mailbox_conversation_id_flag_color_date_received_index ON messages(mailbox, conversation_id, flag_color, date_received)
Creating messages_mailbox_conversation_id_flag_color_date_received_index
UPDATE messages SET flag_color = ((flags & (7 << 41)) >> 41) WHERE (flags & 16) != 0
Setting flag_color
DROP TABLE thread_flag_colors
Dropping thread_flag_colors
UPDATE thread_scopes SET needs_update = 1
Resetting thread_scopes
v32@?0@"MFMailboxUid"8@"NSMutableSet"16^B24
mailboxToRemoteIdDictionary
T@"NSMutableDictionary",&,N,V_mailboxToRemoteIdDictionary
continueOffset
T@"NSDate",&,N,V_continueOffset
Messages
com.apple.email.MFMessageBodyMigrator
emlx
v24@?0@"MFLibraryMessage"8^B16
B16@?0@"NSString"8
@"NSMutableArray"8@?0
directoryContentCache
T@"EFLazyCache",&,N,V_directoryContentCache
backgroundMigrationScheduler
T@"<EFScheduler>",&,N,V_backgroundMigrationScheduler
mailboxesToCheck
T@"NSMutableArray",&,N,V_mailboxesToCheck
B16@?0@"<ECMessage>"8
MFMessageChangeManager_iOS.m
[messages.firstObject isKindOfClass:[MFMessage class]]
v32@?0@"MFMailMessage"8@"MFLibraryMessage"16^B24
B32@?0@"<ECMessage>"8Q16^B24
[message isKindOfClass:[MFLibraryMessage class]]
@"NSDictionary"16@?0@"EMMessage"8
@"NSArray"16@?0@"NSArray"8
@"NSString"16@?0@"<ECEmailAddressConvertible>"8
q24@?0@"NSString"8@"NSString"16
v32@?0@"<ECMailbox>"8@"NSMutableArray"16^B24
-[MFMessageChangeManager_iOS addLabels:removeLabels:toMessagesInDatabase:]
/Library/Caches/com.apple.xbs/Sources/Mail_Message_Sim/Mail-3654.0.3.1.12/Message/iOS Persistence/MFMessageChangeManager_iOS.m
MFMessageCollectionInfo.m
comparator
<%@ %p> hash=%lld messageInfoSet=%@
Trying to add a messageInfo that has a different conversationHash from this collectionInfo
Something is horribly wrong the messageInfo should have been at this index path
firstMessage
T@"MFMessageInfo",R,N
lastMessage
visibleMessageInfo
uniqueMessageInfos
allMessageInfos
isEmpty
messagesCount
messageCountWithDuplicates
state
messageCollectionHash
Tq,R,N,V_messageCollectionHash
duplicatePreferenceComparator
T@?,C,N
contentURL
T@"NSURL",&,N,V_contentURL
relatedContentItems
T@"NSArray",&,N,V_relatedContentItems
cleanupInvocable
T@"<EFInvocable>",&,N,V_cleanupInvocable
publicMessageURL
T@"NSURL",&,N,V_publicMessageURL
maild.isMailDropAttachmentPresent
v16@?0@"EFCancelationToken"8
@"EFFuture"16@?0@"MFMessageLoadingContextEvent"8
v16@?0@"EMContentRepresentation"8
@"EFFuture"16@?0@"NSString"8
@"EFFuture"16@?0@"NSError"8
@"EFFuture"16@?0@"<MFCollectingDataConsumer>"8
v16@?0@"EFFuture"8
v24@?0@"NSDictionary"8@"NSError"16
v24@?0@"NSArray"8@"NSError"16
@"EFFuture"16@?0@"_MFLoadingContextEventResult"8
v24@?0@"EMContentRepresentation"8@"NSError"16
@"NSProgress"16@?0@?<v@?@"EMContentRepresentation"@"NSError">8
@"NSProgress"24@?0Q8@?<v@?@"NSError">16
@"NSProgress"32@?0@"EMContentRequestOptions"8@"<EMContentItemRequestDelegate>"16@?<v@?@"EMContentRepresentation"@"NSError">24
@"NSProgress"8@?0
%@://%@%@
T@"<EFScheduler>",R,N,V_scheduler
T@"EMMessageObjectID",R,N,V_objectID
T@"EDMessagePersistence",R,N,V_messagePersistence
legacyMessage
T@"MFMailMessage",R,N,V_legacyMessage
messageTransformer
T@"MFMessageTransformer",R,N,V_messageTransformer
clientIdentifier
T@"NSString",R,N,V_clientIdentifier
options
T@"EMContentRequestOptions",R,N,V_options
mailDropAttachmentGenerator
T@"EDMailDropMetadataGenerator",R,N,V_mailDropAttachmentGenerator
listUnsubscribeHandler
T@"EDListUnsubscribeHandler",R,N,V_listUnsubscribeHandler
T@"<EMContentItemRequestDelegate>",R,N,V_delegate
T@"EDMessagePersistence",&,N,V_messagePersistence
MFMessageCriterion+MailboxPrediction.m
NSNumber variable required, got %@
NSString variable required, got %@
ECAngleBracketIDHash variable required, got %@
NSSet variable required, got %@
Should not have reached this case, check the previous switch!
BccRecipient
senderAddress.emailAddressValue.simpleAddress
Spotlight
body
subject.subjectWithoutPrefix
IsRead
HasAttachments
Flagged
@"NSPredicate"16@?0@"NSString"8
@"NSPredicate"16@?0@"MFMessageCriterion"8
@"MFMessageCriterion"16@?0@"NSPredicate"8
T@"<MFMessageCriterionConverterDelegate>",W,N,V_delegate
<%@:%p libraryID=%u uid=%u flags=0x%x>
TI,R,N,Vuid
TQ,R,N,VmessageFlags
T@"MFMailboxUid",R,W,N
TI,R,N,VdateReceived
TI,R,N,VdateSent
externalID
T@"NSString",R,N,VexternalID
Tq,R,N,VconversationHash
Tq,R,N,VmailboxID
Tq,R,N,VmessageIDHash
Tq,R,N,VlibraryID
-[MFMessageInfo hash]
/Library/Caches/com.apple.xbs/Sources/Mail_Message_Sim/Mail-3654.0.3.1.12/Message/Message.subproj/MFMessageInfo.m
0 && "Tried to get the hash of an object that had no UID"
, sortUid=%lld
, sortReceived=%u
<%@: %p; uid=%lld; mailboxID=%lld; conversation=%@; messageID=%@; received=%u%@%@; %@;>
read=%@
, flagged=YES
, isVIP=YES
, hasAttachments=YES
flags={ %@%@%@%@ }
q24@?0@"MFMessageInfo"8@"MFMessageInfo"16
generationNumber
Tq,R,N,V_generationNumber
Tq,N,V_uid
TI,N,V_dateReceivedInterval
TI,N,V_dateSentInterval
Tq,N,V_conversationHash
Tq,N,V_mailboxID
Tq,N,V_messageIDHash
uidIsLibraryID
isVIP
TB,N,GisKnownToHaveAttachments
sortUid
Tq,N,V_sortUid
sortDateReceivedInterval
TI,N,V_sortDateReceivedInterval
MFMessageInfoOrderedSet.m
messageInfo.messageIDHash != 0
Inconsitency: this messageID was in _knownMessageIDs, it must be in _mutableMessageInfos
messageID mismatch, did not find the real duplicate
v24@?0Q8^B16
messageInfo != nil
replacementMessageInfo != nil
messageInfo.conversationHash == replacementMessageInfo.conversationHash
Could not find the original message info
We just tried to swap the message info, Y U NO at the same index?
Added replacement is a duplicate?! Impossibru!
@"NSArray"16@?0@"MFMessageInfo"8
B32@?0@"MFMessageInfo"8Q16^B24
<%@: %p> (
| dupe=%@
T@?,C,N,V_comparator
T@?,C,N,V_duplicatePreferenceComparator
countWithDuplicates
<%@: %p> message %@
 hLCB=%@ hLBAP=%@ remainingBytes=%lu
 error: %@
 SMIME error: %@
 error: %@/%ld
 SMIME error: %@/%ld
 content: %@
 %lu content items
context
T@"MFMessageLoadingContext",W,N,V_context
T@"NSArray",C,N,V_content
hasLoadedCompleteBody
TB,N,V_hasLoadedCompleteBody
hasLoadedBestAlternativePart
TB,N,V_hasLoadedBestAlternativePart
remainingBytes
TQ,N,V_remainingBytes
Tq,N,V_transportType
T@"NSError",&,N,V_error
smimeError
T@"NSError",R,N
loadedPart
T@"MFMimePart",&,N,V_loadedPart
loadedBody
T@"MFMimeBody",&,N,V_loadedBody
T@"MFMailMessage",R,N
MFMessageLoadingContext.m
_inputObservable must not already be configured
B16@?0@"MFMessageLoadingContextEvent"8
v16@?0@"MFMessageLoadingContextEvent"8
body must be a MIME body
T@"MFMailMessage",&,N,S_setMessage:,V_message
messageBody
T@"MFMimeBody",&,N,S_setMessageBody:,V_messageBody
attachmentManager
T@"MFAttachmentManager",&,N,S_setAttachmentManager:,V_attachmentManager
contentOffset
TQ,N,V_contentOffset
hasLoadedSomeContent
TB,N,V_hasLoadedSomeContent
hasLoadedCompleteMessage
TB,N,V_hasLoadedCompleteMessage
outgoingMessage
TB,R,N,GisOutgoingMessage,V_outgoingMessage
draftMessage
TB,R,N,GisDraftMessage,V_draftMessage
editableMessage
TB,R,N,GisEditableMessage,V_editableMessage
contentObservable
T@"EFObservable",R,N,V_contentObservable
@"EMMessageSigner"16@?0@"MFMessageSigner"8
com.apple.email.messagePersistence.contentLoad.network
com.apple.email.messagePersistence.contentLoad.offline
SummaryLoaderQueue
(NOT A CRASH) see <rdar://problem/48898701> : Internal Settings Switch to execute SQL query from EDMessageQueryParser
Predicate: %@
SQL Query: %@
Conversion Database IDs
Criterion Database IDs
B16@?0@"EMMessage"8
client_%d
v16@?0@"<EMContentRequestOptionsBuilder>"8
@"NSNumber"8@?0
queryTransformer
T@"MFMailMessageLibraryQueryTransformer",&,N,V_queryTransformer
libraryMessageTransformer
T@"MFMessageTransformer",&,N,V_libraryMessageTransformer
networkContentLoadScheduler
T@"<EFScheduler>",&,N,V_networkContentLoadScheduler
offlineContentLoadScheduler
T@"<EFScheduler>",&,N,V_offlineContentLoadScheduler
requestSummaryQueue
T@"NSObject<OS_dispatch_queue>",&,N,V_requestSummaryQueue
summaryLoaderProvider
T@"<MFMessageSummaryLoaderProvider>",&,N,V_summaryLoaderProvider
messageSet
T@"NSMutableIndexSet",&,N,V_messageSet
handler
T@?,R,C,N,V_handler
T@"NSMutableIndexSet",R,N,V_messageSet
T@"MFMailMessage",&,N,V_message
Tq,N,V_libraryID
T@"ECSubject",C,N,V_subject
T@"EFMutableInt64Set",&,N,V_references
messageIDsBySubject
T@"NSMutableDictionary",&,N,V_messageIDsBySubject
conversationIDHash
Tq,N,V_conversationIDHash
conversationFlagsRef
T^Q,N,V_conversationFlagsRef
Td,N,V_dateSentInterval
senderList
T@"NSArray",C,N,V_senderList
toList
T@"NSArray",C,N,V_toList
ccList
T@"NSArray",C,N,V_ccList
bccList
T@"NSArray",C,N,V_bccList
T@"<ECEmailAddressConvertible>",C,N,V_sender
T@"<ECEmailAddressConvertible>",C,N,V_to
T@"<ECEmailAddressConvertible>",C,N,V_cc
T@"<ECEmailAddressConvertible>",C,N,V_bcc
participants
MFMessageTransformer.m
message != nil
@"NSDate"24@?0@"NSDate"8@"NSDate"16
T@"MFMailboxProvider",&,N,V_mailboxProvider
T@"NSMutableSet",&,N,V_mailboxes
T@"NSMutableArray",&,N,V_flags
dates
T@"NSMutableArray",&,N,V_dates
B16@?0@"EMMailbox"8
v16@?0@"<EMMessageBuilder>"8
@"EMMessage"16@?0@"<EDPersistedMessage>"8
T@"MFMailboxProvider",R,N,V_mailboxProvider
userProfileProvider
T@"<EMUserProfileProvider>",R,N,V_userProfileProvider
blockedSenderManager
T@"EMBlockedSenderManager",R,N,V_blockedSenderManager
NetworkConfigurationDidChangeNotification
MFCarrierBundleChangedNotification
MFNetworkSimulationBitfieldKey
NetworkSymptonsHasAlternativeAdvice
com.apple.message.mfnetworkcontroller
cellular-data
wi-fi
com.apple.wifi.plist
com.apple.message.MFNetworkController.dataStatus
com.apple.mail.radioPreferences
B16@?0@"CTXPCServiceSubscriptionContext"8
com.apple.symptoms.hasAlternateAdvice
-[MFNetworkController dealloc]
/Library/Caches/com.apple.xbs/Sources/Mail_Message_Sim/Mail-3654.0.3.1.12/Message/Utilities.subproj/MFNetworkController.m
NULL == _store
NULL == _reachability
@"<EFCancelable>"16@?0@"<EFObserver>"8
@"NSNumber"16@?0@"MFNetworkController"8
Network Controller State
Data Status
0x%02x
Reachability Flags
WiFi Enabled
Cell Data
Data Status Indicator
Roaming Allowed
Active Calls
Background WiFi Clients
Core Telephony Client
@"NSMutableDictionary"8@?0
isDataAvailable
isNetworkUp
isFatPipe
isOnWWAN
inAirplaneMode
is3GConnection
is4GConnection
dataIndicator
Ti,R,V_dataIndicator
Tq,R
hasAlternateAdvice
networkObservable
wifiObservable
awdNetworkDiagnosticReport
T@"AWDMailNetworkDiagnosticsReport",R,N
%s (%d)
None
2.5G
3.5G
3.75G
H Plus
T@"MFMutableMessageHeaders",&,N,V_headers
placeholders
T@"NSArray",&,N,V_placeholders
libraryContent
T@"MFOutgoingLibraryMessageContent",R,N
richtextContent
T@"MFOutgoingRichtextMessageContent",R,N
multipartContent
T@"MFOutgoingMultipartRelatedContent",R,N
T@"MFLibraryMessage",&,N,V_libraryMessage
textPartsAreHTML
TB,N,V_textPartsAreHTML
plaintextAlternative
T@"MFPlainTextDocument",&,N,V_plaintextAlternative
mixedContent
T@"NSArray",&,N,V_mixedContent
htmlBody
T@"NSString",&,N,V_htmlBody
com.apple.mobilemail.sentMessageSize
T@"<MFDeliveryDelegate>",W,N,V_delegate
attachmentContext
T@"MFAttachmentCompositionContext",&,N,V_attachmentContext
originalConversationId
Tq,N,V_originalConversationId
MFPersistence_iOS.m
-[MFPersistence_iOS test_tearDown]
mailboxPersistence
T@"EDMailboxPersistence",&,N,V_mailboxPersistence
T@"<EDAccountsProvider>",&,N,V_accountsProvider
T@"EDListUnsubscribeHandler",&,N,V_listUnsubscribeHandler
T@"<EMUserProfileProvider>",&,N,V_userProfileProvider
MFPersistenceDatabase_iOS.m
Trying to access the database in MobileMail
Got wrong type of connection
CREATE TEMPORARY TABLE temp_selected_messages (message_id INTEGER);
migrationLock
T@,R,N,V_migrationLock
migrationHasRun
TB,N,V_migrationHasRun
createdTempTable
TB,N,V_createdTempTable
postMigrationSteps
T@"NSMutableArray",&,N,V_postMigrationSteps
enabling extended error codes
setting cache_size
configuring sql connection for %@
Access to protected data went away during transaction (NOT a crash)
PRAGMA cache_size = 100;
searchable_message
mailboxesTableSchema
messageDataTableSchema
messageDataDeletedTableSchema
popUIDsTableSchema
accountsTableSchema
MFPowerStateDidChange
MFBatteryLevelDidChange
MFPowerAssertionDidExpire
MFBatterySaverModeDidChange
com.apple.message.MFPowerController.state
com.apple.message.MFPowerController.power
v16@?0@"MFAppStateMonitor"8
+[MFPowerController sharedInstance]
/Library/Caches/com.apple.xbs/Sources/Mail_Message_Sim/Mail-3654.0.3.1.12/Message/Utilities.subproj/MFPowerController.m
instance != nil
plugged in
unplugged
MFPowerController.m
assertion IS NOT NULL
assertion timer IS NOT nil
com.apple.message.preventSleep
assertion IS NULL
assertion timer IS nil
task assertion IS NOT NULL
com.apple.message.backgroundTaskAssertion
task assertion IS NULL
@16@?0@"NSNotification"8
@"NSNumber"16@?0@"MFPowerController"8
@"NSNumber"16@?0@8
==== Power State ====
  charging: %@
  low-power mode: %@
  holding assertion: %@
==== Internal Assertions ====
  %@: %d
pluggedInObservable
lowPowerModeObservable
batteryLevelObservable
batteryLevel
Tf,R,N,V_batteryLevel
pluggedIn
TB,R,GisPluggedIn
batterySaverModeEnabled
TB,R,GisBatterySaverModeEnabled
holdingAssertion
TB,R,GisHoldingAssertion
journal
requestPairs
T@"NSMutableArray",&,N,V_requestPairs
Could not retrieve RFC822 data for attachment.
@"EDSearchableIndexItem"16@?0@"<EDPersistedMessage>"8
@"NSNull"16@?0@8
com.apple.mobilemail.contentIndex
dataSourceRefreshReasons
purgeReasons
exclusionReasons
currentReasons
index
T@"EDSearchableIndex",&,N,V_index
T@"EDSearchableIndexPersistence",&,N,V_persistence
T@"EDSearchableIndexScheduler",&,N,V_scheduler
likely(deleted = '0')
deleted = '0' AND messages.ROWID IN (%@)
ShouldSign
ShouldEncrypt
SigningIdentity
EncryptionIdentity
RecipientCertificates
IdentityRef
IdentityError
ErrorsByRecipient
CertificatesByRecipient
MFSecureMIMECompositionManager_lock
com.apple.mobilemail.MFSecureMIMECompositionManagerQueue
-[MFSecureMIMECompositionManager _determineSigningStatusWithSendingAddress:]
/Library/Caches/com.apple.xbs/Sources/Mail_Message_Sim/Mail-3654.0.3.1.12/Message/Authentication.subproj/MFSecureMIMECompositionManager.m
_signingStatusSemaphore > 0
-[MFSecureMIMECompositionManager _determineEncryptionStatusWithSendingAddress:]
_encryptionStatusSemaphore > 0
-[MFSecureMIMECompositionManager _determineEncryptionStatusWithNewRecipients:]
-[MFSecureMIMECompositionManager compositionSpecification]
_signingIdentity
_encryptionIdentity
SMIME_MISSING_SIGNING_IDENTITY_FORMAT
SMIME_MISSING_ENCRYPTION_IDENTITY_FORMAT
SMIME_OTHER_ENCRYPTION_CERT_ERROR_MESSAGE
SMIME_MISSING_ENCRYPTION_CERT_MESSAGE
T@"<MFSecureMIMECompositionManagerDelegate>",W
sendingAddress
sendingAccount
T@"MailAccount",R
signingPolicy
encryptionPolicy
signingStatus
encryptionStatus
MF_SMIME_CERTIFICATE_NOT_YET_VALID_FORMAT
MF_SMIME_CERTIFICATE_EXPIRED_FORMAT
checkCertificateExpiration
com.apple.private.accounts.allaccounts
GSDeviceName
_SIMULATOR
%@_%@
DEFAULT_SIGNATURE
DEFAULT_SIGNATURE_IPHONE
Sent from my iPhone
SignatureKey
com.apple.mail.MailAccountSignaturesChanged
UseAccountSignatures
<br/><br/>
X-AOL-OUTBOX-COPY
PIPELINING
SMTPUTF8
ENHANCEDSTATUSCODES
CHUNKING
DisableCHUNKING
SIZE
AUTH
STARTTLS
FAILED_SEND_SSL_NEEDED
FAILED_SEND_TITLE
Cannot Send Mail
BDAT %lu LAST
B32@?0r*8Q16B24B28
> SMTPUTF8
 imapmailbox="%@"
SMTP_INVALID_SENDER_ADDRESS
SMTP_SENDING_CONTENT_FAILED
Sending the message content to the server failed.
SMTP_1_BAD_RECIPIENT
SMTPFailureReason
SMTP_SENDING_CONTENT_LATER
Mail will try to send the message again later.
SMTP_BAD_RECIPIENTS
The recipients were rejected by the server.
SMTP_RECIPIENTS_UNRECOGNIZED
Verify that you have addressed this message correctly. Check your SMTP server settings in Mail Preferences and verify any advanced settings with your system administrator.
SMTP_SENDING_FAILED_TITLE
Unable to Send Email
SMTP_GENERIC_ERROR_FORMAT
^([0-9]+)([- ])?(.*)$
MFSMTPConnection.m
Unable to init regular expression from %@
-[MFSMTPConnection _readResponseRange:isContinuation:]
/Library/Caches/com.apple.xbs/Sources/Mail_Message_Sim/Mail-3654.0.3.1.12/Message/Delivery.subproj/MFSMTPConnection.m
[match numberOfRanges] == 4
FAILED_SEND
localhost.localdomain
SSNT
B16@?0@"MFMessageReferenceContext"8
q24@?0@"MFMessageReferenceContext"8@"MFMessageReferenceContext"16
probe_message_update
probe_message_add
probe_message_delete
CREATE TEMPORARY TRIGGER probe_message_update AFTER UPDATE OF flags ON messages BEGIN SELECT probe_message_update(OLD.ROWID, OLD.flags, NEW.flags, NEW.message_id, NEW.mailbox); END
CREATE TEMPORARY TRIGGER probe_message_add AFTER INSERT ON messages BEGIN SELECT probe_message_add(NEW.ROWID, NEW.flags, NEW.message_id, NEW.mailbox); END
CREATE TEMPORARY TRIGGER probe_message_delete AFTER DELETE ON messages BEGIN SELECT probe_message_delete(OLD.ROWID, OLD.flags, OLD.message_id, OLD.mailbox); END
ROW: %lld; 
Count: %ld -> %ld; 
Flags: %llu -> %llu (
R: %@ -> %@ | 
SR: %@ -> %@ | 
TSR: %@ -> %@ ); 
dup msgs: %lu;
#Update
SELECT message_id FROM messages WHERE message_id = ? AND rowid != ? AND flags&2 > 0 AND mailbox = ? AND (flags&1 = 0 AND flags&128 = 0 AND flags&1048576 = 0)
SELECT unread_count FROM mailboxes WHERE ROWID = ?
Flags: %llu (
R: %@ | 
SR: %@ | 
TSR: %@ ); 
#Add
#Delete
com.apple.mobilemail
ReplyToSelf
AuthSchemeKey
BlockRemoteImages
CollapseReadConversationMessages
ConversationViewExcludesRelatedMessages
ConversationViewShowsNewestAtTop
Deceleration
DisableQuoteIncrease
DisableThreading
IncludeAttachmentReplies
IncludeAttachmentRepliesAlways
IncludeAttachmentRepliesAsk
IncludeAttachmentRepliesNever
IncludeAttachmentRepliesWhenAdding
LeftEdgeSwipeAction
LinesOfPreview
MailDefaultsChangedNotification
MarkAsRead
MoveToArchiveOrDelete
MutedThreadActionKey
NoNotification
POPDeleteIntervalKey
RightEdgeSwipeAction
ShowMessageDeleteConfirmation
ShowToCCIndicators
SwipeActionAlternateDestructiveAction
SwipeActionArchive
SwipeActionFlag
SwipeActionMove
SwipeActionNone
SwipeActionRead
SwipeActionTrash
outgoing_key
MFLibraryCompressorDefaultsUpgradeStateKey
MobileMailVersion
Preferences
Found
Not Found
MailAccountExtPropertiesMigratedToSharedAppGroup
DeviceIdentifier
maild
com.apple.EmailFoundation
T@"<NSCopying>",C,N,V_key
cache
T@"MFWeakObjectCache",W,N,V_cache
MFWeakObjectCache.m
couldn't create a weak reference for %@
bold
italic
fixed
smaller
bigger
x-tad-bigger
x-tad-smaller
fontfamily
color
underline
nofill
excerpt
param
x-fontsize
superscript
subscript
paragraph
signature
heading
footing
no-op
</U>
<SUP>
</SUP>
<SUB>
</SUB>
<SPAN style="
color: %s; 
font-size: %dpt; 
</SPAN>
&nbsp;&nbsp;&nbsp;&nbsp;
<br/>
-[MFMimeEnrichedReader setupFontStackEntry:]
/Library/Caches/com.apple.xbs/Sources/Mail_Message_Sim/Mail-3654.0.3.1.12/Message/Message.subproj/MIME.subproj/MimeEnrichedReader.m
NULL != stackEntry
font-weight: bold
font-style: italic
rgba(%d, %d, %d, 1)
font-family: 
font-face: Helvetica
<%@:%p
_commandStack = %p (%ld entries):
[%@ parameter=%@]
_outputBuffer=%@
_outputString=%@
-------------------------------------------------------------------
v16@?0@"NSNotification"8
<%@: %p priority: %lu target: %@ selector: %s>
T@"MFActivityMonitor",R,N,V_monitor
powerAssertionId
T@"NSString",C,N,V_powerAssertionId
MFMessageKeychainManagerCertificateDeniedDomain
keychainLock
1.2.840.113635.100.6.7
B16@?0^{__SecIdentity=}8
S/MIME Encryption for %@
%@-%d.%@
%@-%d
<br>
future
T@"EFFuture",R,N
T@"NSURLResponse",R,N,V_response
MESSAGE_AUTH_NTLM
smtp
MESSAGE_AUTH_PLAIN_TEXT
LOGIN
user
pass
string
quoteLevel
ProgressiveMimeParseErrorDomain
Data is not as long as reported
Unable to parse Content-type header in top-level part
No Content-type header found in top-level part
Invalid parser state (%d)
x-apple-smime-error
x-apple-smime-signers
sha-256
SMIMEError
--%@
SMIME_CANT_DECRYPT_MESSAGE
This message is encrypted.  Install a profile containing your encryption identity to decrypt this message.
x-attach-SMIME
SecureMimePart.m
The message body should be a MFMimeBody.
SMIME_CANT_DECRYPT_TITLE
Unable to decrypt message
(Unknown)
lastSecCMSError
Ti,R,N,V_SecCMSError
signers
T@"NSArray",R,N,V_signers
SMIME_CANT_SIGN_MESSAGE
application/pkcs7-signature
micalg
pkcs7-signature
smime.p7s
SMIME_CANT_SIGN_TITLE
Unable to Sign
SMIME_CANT_ENCRYPT_MESSAGE
An error occurred while trying to encrypt your message. Verify that you have valid certificates in your keychain for all of the recipients.
pkcs7-mime
smime.p7m
enveloped-data
smime-type
storagePath
NO_SMTP_HOST
You have not specified an SMTP server in Mail Preferences. You must specify a server before you can send mail.
SMTP_NO_CONNECTION
MF_SMTP_RECIPIENT_INVALID_ADDRESS
MESSAGE_TOO_LARGE
Your message has size %@, which exceeds %@, the maximum allowed by the server.
MailErrorHandlerDoNotSanitize
SMTPFailureReasonUserUnknown
SMTPFailureReasonRelayingNotAllowed
SMTPFailureReasonInvalidAddress
SMTPFailureReasonSendingLimitExceeded
SMTPFailureNoAuthCommandGiven
SMTPFailureInvalidSenderAddress
SMTPFailureReasonBadCredentials
SMTPFailureReasonWebLoginRequired
SMTPFailureReasonUnknown
^([0-9]+)\.([0-9]+)\.([0-9]+)([ ]+)(.*)
SMTPResponse.m
MF_SMTP_RECIPIENT_UNKNOWN
MF_SMTP_RECIPIENT_RELAYING_NOT_ALLOWED
MF_SMTP_SENDING_LIMIT_EXCEEDED
Sending the message failed because you exceeded your sending limit.
NO_PASSWORD_PROVIDED_ERROR
No password provided.
Please go to Mail Account Settings and enter a password.
%d (%d.%d.%d) %@
%d %@
Ti,R,N,V_status
statusClass
TI,R,N,V_statusClass
statusSubject
TI,R,N,V_statusSubject
statusDetail
TI,R,N,V_statusDetail
statusString
T@"NSString",R,N,V_statusString
continuationResponses
T@"NSArray",&,N,V_continuationResponses
sending limit
from address is not one of your addresses
SELECT ROWID from mailboxes WHERE url = ?;
SELECT 1 FROM pop_uids WHERE mailbox = ? AND uid = ? AND flags IS NULL;
SELECT uid FROM pop_uids WHERE mailbox = ? AND date_added < ?;
SELECT uid FROM pop_uids WHERE mailbox = ?;
DELETE FROM pop_uids WHERE mailbox = ? AND uid = ?;
SELECT COUNT() FROM pop_uids WHERE mailbox = ?;
DELETE FROM pop_uids WHERE mailbox = ?;
SELECT flags FROM pop_uids WHERE mailbox = ? AND uid = ?;
lastMatcher
T@"CPSearchMatcher",&,N,V_lastMatcher
lastSearchString
T*,N,V_lastSearchString
lastSearchStringLength
TQ,N,V_lastSearchStringLength
matchers
T@"NSMutableDictionary",&,N,V_matchers
-journal
-wal
-shm
 Journals
MFWebAttachmentSource_AttachmentLock
<%@ %p>, attachments=%@
x-msg://%ul/
MFWebMessageDocument/%ul
visuallyEmpty
TB,GisVisuallyEmpty,V_visuallyEmpty
baseURL
T@"NSURL",R,V_baseURL
mimeBody
T@"MFMimeBody",R,V_mimeBody
T@"MFMimePart",R,V_htmlPart
htmlData
T@"NSData",R,V_htmlData
preferredEncoding
TI,V_preferredEncoding
T@"MFAttachmentManager",&,N,V_attachmentManager
Encountered error while fetching credential for %@ (will %screate new credential): %{public}@
Creating new credential for account %{public}@
Credential renewal result: %ld%@%@
Renewing credential for account: %{public}@ with force:%{public}@ avoidUI:%{public}@
Web login result: %@%@%@
#ACE-DB using url %s
#ACE-DB payload is %s
#ACE-DB response is %s
#ACE-DB error retrieving configuration: %{public}@
Account database: failed to parse db file
Account database: couldn't find path to db file
#ACE-DB ignoring service because capability '%s' is not satisfied
#Warning Activity monitor cancelled on the Main Thread.  Why?
%{public}s <%{public}@:%p> [%@:%u%{public}@]
%{public}s <%{public}@:%p> [%@:%u%{public}@] %{mobilemail:networkData}.*P
#Network %d for %@
#Network low data mode (constrained): %d
Making sure buffer is empty, currently has %lu bytes
deflateInit2 failed with error %d
inflateInit2 failed with error %d
#Network <%{public}@:%p> Got SecTrustResultType %u for %@
#Network trust manager said DENY for connection %p (error: %@)
#Network user said DENY for connection %p (error: %@)
Unsupported header criterion %@
#Warning unsupported qualifier %d in flag criterion
unsupported operator %d
Sending message with type: %{public}u, folderID: %{public}@, originalMessageID: %{public}@, originalLongID: %{public}@, useSmartTask: %{public}d
#Warning warning, %@ got ping for folder ID %{public}@, but can't find mailboxUid with that ID.
mailbox listing has changed for account %{public}@
Enqueing request pairs %@ for mailbox %@
Performing %lu mailbox requests with %{public}@, folder-id %{public}@, anchor %@, user requested %s
Mail db had no sync anchor for %{public}@, folderID %{public}@.  Will erase local messages, perform full sync.
server returned null sync key for sync of %{public}@, folderID %{public}@.  Will erase local messages, perform full sync.
setting sync key %@ for mailbox %{public}@
canceled mailbox request for %{public}@, folderID %{public}@
DAMAilAccount %p is invalidating
DAMailAccount %p is deallocating
watched folder IDs changed: %@
account %{public}@ will NOT start listening for notifications: Not in maild
account %{public}@ will NOT start listening for notifications: battery-saver mode is ON
Requesting push for folders: %@
#Warning mailboxForFolderID returned nil (folderId = %@)
#Warning Missing folder ID for mailbox: %{public}@
Add user focus mailbox: %{public}@
Remove user focus mailbox: %@
%@: Network became %s
%s [10463402] fixing bogus EAS inbox name for %{public}@
reslove recipients task %@ failed with code %ld
*** Missing rspauth value in server message
*** Bogus rspauth value returned from the server
*** Unexpected character '%c', aborting
*** Duplicate value for %@. Ignoring
*** Unexpected value %@ for %@. Ignoring
*** Unable to parse %@. Ignoring
*** Unable to parse %@. Aborting
*** Parse failure(unexpected character '%c'). Ignoring
*** Missing algorithm=md5-sess in server response
*** ECSASLPrivacySecurityLevel is not supported.
Bad line break index
#Warning Failed to load DataDetectorsCore.framework (%s)
#Warning NSClassFromString(@"DDURLifier") returned Nil
#Warning failed to create date formatter
#Warning failed to create time formatter
Bad arguments to %@, %@
#Warning %@: Cannot set library to %@. See rdar://problem/42167098.
#CacheLoads requesting data for MIME part %{public}@:%{public}@
#CacheLoads found full cached data for %{public}@:%{public}@
#CacheLoads found part data in database %{public}@:%{public}@
#CacheLoads extracted part data from full body data in database %{public}@:%{public}@
#CacheLoads downloading part data from server %{public}@:%{public}@
#CacheLoads %@ downloading part data from server %{public}@:%{public}@
#CacheLoads extracted part data from full body data via download %{public}@:%{public}@
Storing data for MIME part: %{public}@ of message: %{public}@ complete: %{public}d
#CacheLoads returning cached full body data for %@
#CacheLoads returning cached body data for %{public}@
#CacheLoads returning body data from Library for %{public}@
#CacheLoads fetching body data from network (download=%d) for %{public}@
[LogMessageDeletionTimes] Deleting %lu messages took %4.5f seconds (%4.5f s/msg)
[LogMessageDeletionTimes] Searching for and deleting %lu messages in %@ took: %fs
updateAutoFetchSettings was called. Backtrace:
%{public}@
#Warning Returned unhandled email addresses %@
failed to remove path %@
Mailbox UID from account: cache miss. ('%@')
#Warning <%@ %p>: no library!
Account: %@ willPerformActionForChokePoint: %@ - coalescePoint: %@
Clients for choke point - %@
Waiting for existing fetch to finish for choke point: %@
Result: %@ returned for chokepoint: %@
Removing choke point from current actions: %@
Account: %@ didFinishActionForChokePoint: %@ - coalescePoint: %@ - result: %@
Updating result for for choke point: %@ - result: %@
#Warning <rdar://problem/17733540> _currentChokedActions: %@
mailboxDict: %@
Finished writting to disk mailbox cache %{public}@
Removing lookaside properties for accounts with identifiers: %@
Clearing mailbox UID from account cache.
Exception while getting all email addresses: %@
Read mailbox cache from disk %{public}@
Failed to read cached info for %{public}@: %@
change in mailbox type [Inbox -> Generic]: %@
Unexpected flag key "%@"
#Library access to protected data is allowed
#Library access to protected data is not allowed
Using legacy message-id hash format
found message flags discrepancy
#Library could not set protection class for %@
#Library wrote wrong number of bytes to file %@!
#Library failed to open a file for message data at path %@, (error: %d, %s)
Threading %lld: found conversation from fuzzy matching: messageID: %lld, conversationID: %lld, subject: %{public}@
Threading %lld: adding in previously tracked messages IDs with the same subject: %@
Threading: inserted message references for message with databaseID %lld: %@
Threading %lld: resolving for message (database ID: %lld), mailbox: %lld, subject: %{public}@, explicitReferences: %@
Threading %lld: adding external conversation ID to explicit references: %lld
Threading %lld: found conversation ID from explicit references: %lld
Threading %lld: Merging current conversation %lld with another conversation %lld
Threading %lld: Using current conversation %lld
Threading %lld: Using external conversation ID %lld
Threading %lld: Merging with existing conversation %lld
Threading %lld: Setting conversation ID to message ID
Threading %lld: Using newly created conversation ID %lld
Threading %lld: Resolved message's conversation ID to %lld
adding message references took %.2f (messageID: %lld)
Threading %lld: deleting merged conversations from table: %@
#Library source mailbox is nil
#Library couldn't load headers for %@, skipping
#Library failed to find mailbox row for message %{public}@: mailboxURL = %@ for %{public}@
#Library Adding message with message_id: %lld, globalMessageID: %lld, remote_id: %@, subject: %@, sender: %@, summary: %@
#Warning [addMessages] setting conversation id for message with library id %lld failed
#Library error importing message %{public}@, aborting
#Library inserting message failed, rolling back transaction
#Library Found database ID %lld in cache for table: %{public}@, column: %{public}@
#Library Inserted new database ID %lld in database for table: %{public}@, column: %{public}@
#Library Found database ID %lld in database for table: %{public}@, column: %{public}@
Threading %lld: updating message's conversationID from %lld to %lld
The message didn't get updated: message.conversationID: %lld, resolved conversationID: %lld
#Warning [updateThreadingInfoForMessage] updating conversation id for message with library id %lld failed
#SQLite #Performance %.3f seconds to load first batch of %lu messages
#SQLite #Performance loaded %d messages in %.3f seconds
#Library criterion %@ couldn't be turned into a query, <db:%p, protected %@>
#Library Could not execute sqlite statement: %@
#Library criterion %ld couldn't be turned into a query, <db:%p, protected %@>
#Warning Error setting the protection class on "%@": %@
#Library could not update sequence identifier for mailbox %@
#Library couldn't load message with libraryID %lld because protected data is unavailable
Threading %lld: conversation IDs of messages in the same thread: %@
#Library Error %d performing query: %s
#SQLite #Performance %0.4f seconds to perform query %@
#Library Compacted %lu messages (%f seconds)
Update largest_deleted_rowid for %{public}@ to %lld
Failed to delete attachments at %@ with error %{public}@
Summary updated for %lld
#Library Could not get mailbox for message %{public}@ (store: %@)
#Library Skipping summary update for non-existent message with row ID: %lld; summary: %@
#Library Updating summary for message with row ID: %lld; summary: %@
#Library Fetching partName: %@ for message: %@
#Library Result row `%@:%@` for query: %@
#Library Protected Data Not Available while fetching partName %@ for message %@
#Library Loaded Meeting data %@ for message : %@
#Library Loaded Exchange Calendar externalID: %@ for message: %@
#Library Loaded Exchange Calendar meeting data %@ for message : %@
#CacheLoads body data from file of length %lu for message %{public}@
#CacheLoads data from file of length %lu for message %{public}@ part %{public}@
#CacheLoads data from file at path %@ had error: %{public}@
Failed to convert the predicate to SQL: %{private}@
 Exception: %{public}@. See <rdar://problem/48813824>.
%{public}@: Unable to form query for criteria, protected data available: %{public}@
#Library Posting %@
#Library cleanupProtectedTables took %.4f seconds
#Library skipping cleaning up protected tables because protected data is not available
#Library Database consistency check failed, the following statement returned a non-zero count (%ld): %@
#Library STATS %.2fs j:%lu m:%lu pm:%lu md:%lu pmd:%lu mdel:%lu mddel:%lu mbox:%lu
#Library STATS %.2fs j:%lu m:%lu pm:* md:%lu pmd:* mdel:%lu mddel:%lu mbox:%lu
#Library Key bag locked
#Library Key bag unlocked
#Library register %@ activity
#Warning #Library Unable to transition %@ activity to state 'done'
#Warning #Library Unable to transition %@ activity to state 'continue'
#Library cancelling %@ activity
#Library Failed to open %s (error: %d). Retrying %d more times.
Threading %lld: resolving threads after journal reconciliation
#Library Updated conversation hashes on %lu messages (%.4f seconds)
Threading: deferring thread resolution until unlock for message database ID %lld
#Library Starting incremental vacuum for %@ database
#Library Skipping incremental vacuum because protected tables are not available
#Library Skipping incremental vacuum because free count (%lld) is below limit (256)
#Library Skipping incremental vacuum because load factor (%.2f) is above threshold (0.85)
#Library Error performing incremental vacuum: %s
#Library Successfully performed incremental vacuum on %@ database
Abort if mobilemail
Could not open fd for %@
Could not set protection class on %@
#Library Mail db will be reset on next launch
Could not create %@
#Library pruned %d conversations
#Warning SearchableIndex: Skipping message search request until we have determined our active non-local accounts
SearchableIndex: Failed to prepare statement: %@
#Library No externalID for %@
Message has no subject: %lld
Message has no sender: %lld
Sanitized path for libraryID %lld - %@
Storing message: %{public}@ in database part: %{public}@, is complete: %{public}d, in the database: %{public}@
Exception occurred while message with ID %lld: %@
writing out no data since existing data is equally long
not saving message data for non-existent message
Writing message: %{public}@, part: %{public}@ (incomplete: %{public}d to disk at path: %{public}@
storage path is nil! _libary: %@ _message: %@ _part: %@ _partial: %@ messageUrl: %@
Error attempting to write to file "%@": %{public}@
Couldn't make complete path "%@"
Exception occurred while writing to "%@": %@
Created rowid %lld from mailbox: %{public}@
#Library Empty message data
#CacheLoads data from database of length %lu for message %{public}@ part %{public}@
%@ : took %fs
Writing body data for message database ID: %{public}lld, partial: %{public}d, part: %{public}@, fileName: %{public}@
Issuing fetch for mailbox: %@
#UnreadCount _unreadMessageCount went negative
[LogJunkMailActivity] '%{public}@' is addressed to known full name '%s'
#Warning Unhandled qualifier %ld for type %ld
#Warning Unhandled criterion type %ld
#Warning Could not open fd for %@
#Warning Could not set protection class on %@
#SMIMEErrors Verification was not good (%ld)
#SMIMEErrors Verification went south (%ld)
Exception raised during message encoding: %@
*** BAD!!! Used old attachments for %@
*** Unexpected object <%@:%p>
#Warning Must be called with a subclass of MFOutgoingMessage.  You provided %@
Unable to encode %@ as a MIME attachment
Loaded bundle at %@
Ignoring MailServices bundle %@ for %@
Missing account type for identifier %@
Failed to fetch accounts for types [%@]: %{public}@
Failed to load account for persistent account "%@"%s%{public}@
"%@" has Non-ASCII username - Disabling Notes for account (%@)
Saved account "%@" (%@)
Failed to save account "%@" (%@) error: %{public}@
Nothing to save for account "%@" (%@)
Removed account "%@" (%@)
Failed to remove account "%@" (%@) error: %{public}@
Received %@ notification
lpm:%d locked:%d wifi:%d onpower:%d thermals:%lu battery:%.2f
error occurred while observing conditions: %{public}@
invalid battery-level value (%f)
transitioning from %@ to %@
#Attachments %@ performing no conversion (isDataAvailableLocally=%d, isContainedInRFC822=%d, isMailDrop=%d, part=%p, contentTransferEncoding=%{public}@)
#Attachments %@ stripping line endings (contentTransferEncoding=%{public}@)
#Attachments %@ quoted-printable
#Attachments %@ base64
#Attachments %@ uuencode
#Attachments %@ unknown encoding (contentTransferEncoding=%{public}@)
#Attachments Failed to fetch data for attachment [%@]
FIXME: calls that come from the main thread should use fetchLocalData
#Attachments Failed to fetch data for attachment [%@] due to %{public}@
#Attachments Using placeholder file for '%{mask.hash}@'.
#Attachments Failed to get attachment data for '%{mask.hash}@'.
#Attachments Unable to create temp file for data (%{bytes}llu) for '%{mask.hash}@'.
#Attachments Failed to fetch candidate placeholder contents for attachment [%@]
#Attachments Unable to obtain data provider for attachemnt [%@] due to %{public}@
UTType [%@] for filename:[%@] via extension:[%@] mimeType:[%@]
UTType [%@] for filename:[%@] could not derive extension
UTType [%@] for filename:[%@] extension:[%@] via mimeType:[%@]
#Attachments UTType for filename:[%@] extension:[%@] mimeType:[%@] indeterminate
UTType [%@] for filename:[%@] via cache
#Attachments Failed to create path %@ for attachment [%p, %@]: %{public}@
#Attachments Failed to create file URL for path %@
#Attachments Failed to create directory %@ for attachment [%@]: %{public}@
#Attachments Unable to read file URL [%@] due to error: %{public}@
#Attachments requesting download of attachment %p with URL %@ (primaryConsumer: %@)
#Attachments not writing attachment %p %@ to disk (no-existing-attachment-dictionary)
#Attachments not writing attachment %p %@ to disk (shouldWriteToDisk=%d, success=%d, data.length=%lu, error=%@)
Calling progress block for %@.  %lu/%lu
#Attachments ContextID was nil for filename:%@ contentID:%@
#Attachments Data was nil for filename:%@ contentID:%@
#Attachments nil path detected in initializer
#Attachments Failed to create file for attachment %@: %@
#Attachments Failed to create directory for attachment %@: %@
#Attachments failed to find a store for message %{public}@, things may behave unexpectedly
#Attachments FIXME: Blocking call requested on the main thread
removing attachment %@
Canceling download for attachment %@
#Attachments Exception thrown when writing file: %@ : %@
#Attachments Exception thrown when writing data: %@ : %@
#Attachments Failed to deserialize placeholder
#Attachments Failed to serialize placeholder
#Attachments Failed obtain data for temporary file
#Attachments Attempted to resolve placeholder for non-existant file: %@
#Attachments Placeholder attachment data write error %{public}@
#Attachments Unable to set resource values on placeholder attachment data: %{public}@
#Attachments Failed to remove temporary file
#Attachments Failed to create placeholder directory %@
#Attachments Unable to create base dir for temp files: %{public}@
#Attachments Path '%{public}s' is too long.
#Attachments Unable to create temp dir: %{errno}d.
#Attachments Created temp directory '%@'.
#Attachments Failed to create temporary directory.
#Attachments Failed to create temporary file (%{bytes}llu): %{public}@
#Attachments Failed 2nd attempt to create temporary file: %{public}@
#Attachments Error acquiring attachment placeholder for file: %@, Error: %@
#Attachments Error acquiring attachment security scope for fileURL: %@, Error: %@
#Attachments Failed to enumerate URL [%@] due to error [%{public}@]
#Attachments Failed to read bundle URL [%@]
#Attachments Failed to archive bundle attachment URL: %@ due to error: %{public}@
#Attachments Failed to read attachment URL: %@
#Attachments Failed to access attachment URL: %@
#Attachments URL is not a bundle: %@
NSFileCoordinator ops can block, the caller should move to a background thread
#Attachments Error accessing secure write URL [%{public}@]
#Attachments Error confirming URL is writeable [%@]
#Attachments Error accessing secure read URL [%{public}@]
#Attachments Error confirming URL is readable [%@]
#Attachments Failed to create temporary read URL [%@] error [%{public}@]
#Attachments Failed to create temporary read directory [%@]
Failed to remove temporary read URL [%@] error [%@]
Failed to remove temporary read directory [%@] error [%@]
Added trust exception for %@
Removed trust exception for %@
Error when retrieving encryption certificate for %@: %{public}@
failed to get attachment data for [%@], error:%@
No attachment for [%@]
Zero length attachment for [%@]
server indicated invalid sync state for task %@ (code %ld).  resetting mailbox sync key.
server has reset the sync state %@ times in the same sync attempt, giving up.
#Power [New Message] subject=%@;
About to process remote ids matching searchtext:%@ predicate: %@
Invalid search returned for predicate: %@
%@ Seems like the server exhausted the search results (%ld of %lu), un-setting a continue offset
Attempted to fetch messages from DA without basic search convertable criteria: %@
Searching for criterion: %@
Predicate is not supported, bailing.
Caller did not supply searchText. Generated basic search text:%@ from criterion:%@
Attempted to fetch messages from DA without searchText
Replaying flag change %@ for remote ids: %@
Adding flag change requests: %@
Adding delete requests: %@
No request needed for flag change: %@
No folder ID for mailbox: %@
Fetching body data for remote id: %@
failed to download body for message "%@"
Fetching body data for search result %@ in folder %@
Search result body fetch for message %@ %s
Fetching body data for message %@. format: %d
Successfully downloaded body for message: %@. format: %d
Failed to download body for message "%@"
#Warning DAMessageStore: this is not a MFLibraryMessage: %@
#Warning DAMessageStore: this is not a MFMailMessage: %@
Downloading headers for messages
#Warning Error while fetching headers for message %@: %@
#Warning don't know how to fetch data for mime part %@
Attempting to store text/html data as message part 2
Erasing locally cached messages for folderID %@
Failed erasing messages for folderID %@ - no such local mailbox.
received a redundant SyncAddAction for a message with remote-id %@
#Warning Caught exception %@
error syncing folder: %@
DAMessageStore - allMailboxes searchQuery returned result with invalid folderID: %@
Inserting Exchange Calendar meeting Data %@ for message : %@
Move succeeded but missing new remote ID for message ID: %{public}@
got %@ with untracked sourceID "%@"
Deleting source messages from transfer: %{public}@
message %@ was successfully transferred, but we don't have a new remote ID for it
Transfer action completed with successful items: %@. Failed items: %@. StatusCode: %lu
Transfer failed with Invalid Source Error. Moving the messages locally
#Library processing journal file %@
#Library read wrong number of version bytes from journal, expected: %lu actual: %zd
#Library found journal file of wrong version, expected: %d actual: %lu
#Library realloc failed when merging journal with database
#Library read wrong number of bytes from journal, expected: %lu actual: %zd
#Library Could not find mailbox for %@
#Library MFProtectedDatabaseMergeResult %@
#Library An error occurred while processing %@ (error %d: %s)
#Library An error occurred while committing transaction for %@ (sqlite error %d)
#Library Successfully reconciled journal file %@
#Library Skipping empty journal file %@
#Library No journal files found
#Library Error %d %@ at path %@: %s
Created error: %{public}@
#Attachments Couldn't create archive, input is not a directory.
#Attachments Couldn't add file to archive. Error: %{public}@
#Attachments Failed to write entire data buffer
#Attachments Failed to validate archive central header
#Attachments Failed to validate archive central directory
Failed to mark file as purgeable before compression: %@
Mail File Compression Queue Activity
Failed to transition from state %ld to state %ld.
Registering File Compression Activity
Unregistering File Compression Activity
Running File Compression Queue Activity. %ld files in the queue
Deferring based on system conditions
Compressed all files in File Compression Queue
Stopped before compressing all files in File Compression Queue.
Exiting Compression Queue Activity. %ld files left in the queue
Starting message reconciliation for all messages
Starting all message reconciliation enableTelemetry=YES 
Reconciling all journaled messages
Finished message reconciliation for all messages. Reconciled %lu messages
MessagesReconciled=%{public,signpost.telemetry:number1}lu enableTelemetry=YES 
MFLibraryMessageAllMessageReconciliation
Starting context based message reconciliation
Starting context based reconciliation enableTelemetry=YES 
MFLibraryMessageContextBasedReconciliation
Finished context based message reconciliation. Reconciled %lu messages
Starting inbox reconciliation
Starting inbox reconciliation enableTelemetry=YES 
Finished inbox reconciliation. Reconciled %lu messages
Failed to create criterion based on query: %@
Reconciling for query
reconciled %llu messages
Reconciled all messages. Cleaning up...
Starting library reconciliation
MFLibraryReconciliation
Library reconciliation finished
Starting context based library message reconciliation
Starting context based library message reconciliation enableTelemetry=YES 
Context based library message reconciliation finished. Reconciled %lu conversations
ContextType=%{public,signpost.telemetry:number1}ld Conversations=%{public,signpost.telemetry:number2}lu enableTelemetry=YES 
MFLibraryContextBasedReconciliation
Starting context based library thread reconciliation
Context based library thread reconciliation finished. Reconciled %lu conversations
Starting context based library inbox reconciliation
Starting inbox library reconciliation
Inbox library reconciliation finished. Reconciled %lu conversations
Starting library reconciliation for remaining entries
Starting library all remaining entries reconciliation enableTelemetry=YES 
Finished library reconciliation for remaining entries
MFLibraryAllRemainingReconciliation
Starting thread reconciliation for all threads
Starting reconciliation of all threads enableTelemetry=YES 
Finished thread reconciliation for all threads. Reconciled %lu threads
ThreadsReconciled=%{public,signpost.telemetry:number1}lu enableTelemetry=YES 
MFLibraryThreadReconciliation
Starting context based thread reconciliation for threads
Finished context based thread reconciliation for threads. Reconciled %lu threads
MFLibraryThreadContextBasedReconciliation
Created %{public}@ for account %{public}@
%{public}@ connection established
%{public}@ added action %{public}@
Replaying all actions %@: %ld action(s) to replay
%{public}@ replaying action %{public}@
%{public}@ Did not get results back for action: %{public}@. Will stop replaying actions.
%{public}@ action %{public}@ finished, needToReplayAction = %d
%{public}@ Finished replaying actions. %ld action(s) left to replay
populated cache: %lu
_needsToInvalidate = YES
_invalidateCache invalidated
Downloading Mail Drop attachment: %@ using URL session: %@
Canceling download for Mail Drop attachment %@
#Attachments Mail Drop couldn't create zone. Error: %{public}@
#Attachments Mail Drop couldn't create file for attachment '%{mask.hash}@'. Ignoring attachment.
#Attachments Mail Drop added record '%{mask.hash}@' for attachment '%{mask.hash}@'.
#Attachments Adding attachment '%{mask.hash}@' as image.
#Attachments Mail Drop couldn't create archive. Error: %{public}@
#Attachments Mail Drop couldn't create record.
Mail Drop attachment: %@
#Attachments Mail Drop error publishing asset. %{public}@
Mail Drop asset URL: %@
Mail Drop progress %f for record:%@
#Attachments Mail Drop error for record: %{public}@
#Attachments Mail Drop complete for record:%@
#Attachments Mail Drop error with upload. %{public}@
Start uploading records to CloudKit database [%@] ...
#Attachments Failure encountered during Mail Drop processing [%{public}@]
Start fetching CloudKit record zone for ID [%@] ...
#Attachments Error encountered while fetching CloudKit record zone [%{public}@]
#Attachments Error encountered while saving CloudKit record zone [%{public}@]
#Attachments failed to get zone identifier from keychain: %{public}@
wrong number of arguments (%d) to rawAddress
wrong number of arguments (%d) to displayName
#Library Exception thrown while unarchiving offline cache operation: %@
DAMessageID: %@ and corresponding mailboxNumber not found.
Not enough _sourceRemoteIDs(%ld) or _temporaryRemoteIDs(%ld) to migrate for source mailbox %{public}@
Unable to find source mailbox in database for source mailbox id: %{public}@
Unable to find source mailbox URL for source mailbox id: %{public}@
#MobileMailMigrator: No Legacy Path For Account %{public}@, skipping migration...
#MobileMailMigrator: Start Migrating Mailbox FilePath for Account %{public}@ from %@ to %@...
#MobileMailMigrator Failed to Rename Path from %@ to %@ Due to Error %{public}@. Deleting the legacyMailboxPath.
#MobileMailMigrator: Finished Migrating Mailbox FilePath for Account: %{public}@
#MobileMailMigrator: Start Migrating Mailbox URLs for Account: %{public}@
#MobileMailMigrator: Finish Migrating Mailbox URLs for Account: %{public}@ with result %d
#MobileMailMigrator: Starting Purge of Orphaned Mailboxes...
#MobileMailMigrator: Finished Purge of Orphaned Mailboxes...
#MobileMailMigrator Could not migrate Mailbox URLs due to sqlite error: (%d)
#MobileMailMigrator For Account %{public}@ Renaming Mailboxes From URL %@ To %@
#MobileMailMigrator No Mailboxes found for account %{public}@ to migrate.
#MobileMailMigrator Updating mailbox table from Old URL %@ to New URL %@ failed with sqlite code (%d).
#MobileMailMigrator Purging Orphaned Mailbox storage at Directory URL %@
#MobileMailMigrator Unable to delete Orphaned Mailbox storage at Directory URL %@ due to Error: %@.
Error: invalid connection
Error initializing database parameters: %{public}@
Database is already at current version %lld. No migration needed.
Starting migration
Starting migration steps from version %lld, attempt %lu
Finished migration
Failed migration
Starting write transaction at version %lld
Initializing schema
Upgrading from %lu (%s)
Migrated to current version %lu
Error: Downgrading from version %d to version %ld is not supported
Error: Migration is not supported for version %d
Rebuilding triggers
Rebuilding Message Info Index
Updating library version
Protected Index unavailable
Foreign key violation on row %lld of table %{public}@ with reference to table %{public}@
Error attaching protected index while migrating: %{public}@
Protected Index became available
Error %d %{public}@: %{public}s
Error: failed to get contents of "%@": %{public}@
Error: failed to find "%@"
Got error %@ creating body file directory
Got error %@ creating attachment parent directory
Got error %@ moving attachment directory %@
No externalID for message %{public}@
Notifying CoreDuet about %lu new messages in %{public}@
messagesInMailboxURLCriterion is nil for mailboxURL %@
content not available for unknown representation type %{public}@ content for message %{public}@
returning raw representation %{public}@ for message %@
reading raw content for message %{public}@
Network usage is not allowed. Setting shouldDownload to NO
Duplicate content IDs for content items: %@. Ignoring
decoded HTML data with preferred encoding %x, used encoding %x
failed to decode HTML data with length %lu and preferred encoding %x
EMContentItemRequestDelegate failed! %{public}@
failed to generate snippets for attachments: %{public}@
failed to generate snippets for attachments: nil delegate
Could not create a body subset from partials for message: %{public}@
Did not find any content for message: %{public}@, using placeholder html
generated initial HTML content at URL %@: %lu bytes
EMContentItemRequestDelegate failed generating MailDrop attachments: %{public}@
failed to generate snippets for mail drop attachments: %{public}@
MailDrop node insertion to original HTML content failed with error %{public}@
MailDrop node parsing finished with error %{public}@
requesting %{public}@ content for message %{public}@
MailDrop: Received MailDrop Nodes %@
Begin work on scheduler
End work on scheduler
MFMessageContentRequestScheduler
#MessageCriteria Received unexpected qualifier %d for MessageIsRead criterion.
#MessageCriteria Received unknown criterion type for criterion: %@
#MessageCriteria Attempted to handle unsupported criterion %@
#MessageCriteria Returning criterion:%@ result:%@
#MessageCriteria Compound Criterion should not appear here - should be an NSCompoundPredicate
Received unknown criterion type for predicate: %@
Attempted to handle unsupported predicate %@
#MailServices Cannot currently handle a NOT predicate with more than one sub
Got unexpected Predicate: %@
#MessageCriteria Received unhandled MessageRuleQualifier value:%d - assuming contains
#MessageCriteria Received unhandled NSPredicateOperatorType value:%lu - assuming contains
%@ Will replace %{public}@, ours=%{public}@ with %{public}@ (inPlace=%d) in set: %@
unable to get an event with external id %@ after it was successfully reconstituted.
Download supported, getting body
Download not supported, getting body if available
Failed to get the body for messageID %{public}@
Message body download not complete. Remaining bytes: %ld
MFMessageLoadingContextEvent hasLoadedCompleteMessage %{BOOL}d, hasLoadedBestAlternativePart %{BOOL}d, transportType %ld
requestContent: no library message for objectID %{public}@
requesting %{public}@ content for message %{public}@ (%{public}@)
Requesting summary immediately for: %@
Retrying the request %{public}@ content for message %{public}@ with network
Skipping the retry for message content with network
Cannot create summary loader. No Library Message for object ID: %@
Could not find mailbox for message with database ID %lld
Unable to find mailboxes for legacy message database id: %@
#Warning #Network SCDynamicStoreCreateRunLoopSource failed - returned NULL.
#Warning #Network Could not create SCDynamicStore
#Network retrieved CT subscription info: %@ with error: %@
#Network failed to get data status for context %@ with error: %@
#Network failed to find data-preferred context
#Network setting data status: %@
#Network failed to aquire network assertion
#Network copyCarrierBundleValue returned error: %@
#Network could not get subscription info: %@
#Network failed to bring up data context (context: %@, connection: %u, error: %d
#Network preferred data sim was changed to slot %lu
#Network SIM is now ready (slot %lu)
#Network %d active calls
User agent says canUseSpotlightIndex - Enabling searchable index.
Couldn't reset file protection of protected database. The device is probably locked. %{public}@
Failed to reset file protection of protected database: %{public}@
Resetting mailbox cache after database transaction failed
#Warning %@
#Warning %@/%@ bytes (free/total)
#Warning failure to get file system size: %@
Device is now %@
Listening for low-power mode notifications
Low-power mode changed to %@
#Assertions [*] cancel power assertion timer
#Assertions [*] schedule %d sec power assertion timer
#Assertions [*] power assertion timer expired
#Assertions [+] %@
#Assertions [-] %@
#Assertions Active Assertions: %lu
RequestClass=%{signpost.description:attribute,public}@ RequestType=%{public, signpost.telemetry:number1}lu RequestCount=%{public, signpost.telemetry:number2}lu enableTelemetry=YES 
REQUEST QUEUE
#Warning Exception raised while processing requests: %@
fetching attachment %@
#SMIMEErrors SecIdentityCopyCertificate could not find certificate for %@, returned %d
#SMIMEErrors SecCertificateCreateWithData() failed for %@
#SMIMEErrors SecTrustCreateWithCertificates returned %ld
#SMIMEErrors Certificate %@ for address %@ is not currently valid: %{public}@
SMTP error for recipient %@: %@
SMTP delivery:%d valid recipients; invalid recipients = %@
--- Got unexpected EHLO response ESMTP params %@
Acquired task assertion: %{public}@
could not aquire task assertion: %{public}@
#Warning Error %d: %s
#UnreadCount [UnreadCount] %@ %s
MobileMail container path not found - Skipping extProperties migration.
extPropertiesDomain %{public}@ at path: %@
Migrating extPropertiesDomain to shared app group.
Migrated following extPropertiesDomain defaults to shared app group: %@
No keys found to migrate in extPropertiesDomain.
extPropertiesDomain already migrated to shared app group.
Migrating %@ to %@ with default %@
No default for key %@
Ignoring unmatched </%@> command
elapsed time %gs (input length=%ld, output length=%lu)
deallocating %p %@
Exception raised during monitored invocation of %{public}@, %{public}@
Stack:
%{public}@
#Warning SecItemCopyMatching result: %d
SecItemCopyMatching succeeded with empty results
#Warning SecItemAdd result: %ld
#Warning SecItemUpdate result: %ld
#Warning SecItemDelete result: %ld
#SMIMEErrors Found %lu (out of %lu) matching signing identities for "%@"
#SMIMEErrors Found %lu (out of %lu) matching encryption identities for "%@"
#SMIMEErrors SecItemCopyMatching returned %ld
#SMIMEErrors Found no certificates for "%@" (%ld)
#SMIMEErrors Found %s certificate for "%@".
#SMIMEErrors Error saving encryption certificate for "%@": %@
NTLM authentication succeeded
NTLM authentication failed
start NTLM authentication
*** Unexpected server response during NTLM authentication
NTLM - respond to server challenge; user = %@; domain = %@
*** Error %ld occurred during NTLM authentication
#SMIMEErrors Missing signed data!
#SMIMEErrors Missing signature part!
#SMIMEErrors decodeMultipartSigned failed with %{public}@
#SMIMEErrors There was no error while decrypting the message but there was no body either!
#SMIMEErrors decodeApplicationPkcs7_mime failed with %{public}@
#SMIMEErrors SecCmsDecoderCreate returned %ld
#SMIMEErrors SecCmsDecoderUpdate returned %ld for %lu bytes
#SMIMEErrors SecCmsDecoderFinish returned %ld
#SMIMEErrors SecCmsDigestContextStartMultiple failed
#SMIMEErrors -appendData: called on _MFSecCMSDecoder after an error has occurred!
#SMIMEErrors -appendData: called on _MFSecCMSDecoder with no signed or enveloped data!
#SMIMEErrors SecCmsSignedDataSetDigestContext on -done returned %ld
#SMIMEErrors _MFSecCMSDecoder asked to verify with pending error (%ld)
#SMIMEErrors There were no digests in the message
#SMIMEErrors The message sender is missing
#SMIMEErrors SecCmsSignedDataVerifySignerInfo returned %ld for #%d:%@
#SMIMEErrors There was a signing error %{public}@
#SMIMEErrors newSignedPart... failed with %{public}@
#SMIMEErrors newEncryptedPart... failed with %{public}@
#SMIMEErrors Found no identity for "%@"
#SMIMEErrors SecCmsMessageCreate for signing failed
#SMIMEErrors SecCmsSignedDataCreate failed
#SMIMEErrors SecCmsContentInfoSetContentSignedData returned %ld
#SMIMEErrors SecCmsContentInfoSetContentData for signing returned %ld
#SMIMEErrors SecCmsSignerInfoCreate failed
#SMIMEErrors SecCmsSignerInfoIncludeCerts returned %ld
#SMIMEErrors SecCmsSignedDataAddCertChain returned %ld
#SMIMEErrors SecCmsMessageCreate for encryption failed
#SMIMEErrors SecCmsEnvelopedDataCreate failed
#SMIMEErrors SecCmsContentInfoSetContentEnvelopedData returned %ld
#SMIMEErrors SecCmsContentInfoSetContentData for encryption returned %ld
#SMIMEErrors Failed to create all the required recipients
#SMIMEErrors -appendData: called on _MFSecCMSEncoder after an error has occurred!
#SMIMEErrors SecCmsMessageEncode returned %ld
#SMIMEErrors -appendData: called twice _MFSecCMSEncoder (only once is allowed for now)!
#SMIMEErrors SecCmsEncoderFinish on -done returned %ld
#SMIMEErrors SecTrustCreateWithCertificates returned %d
#SMIMEErrors SecTrustCreateWithCertificates returned a null SecTrustRef
Enabling SMTPUTF8 support for message delivery: %@
SMTP Delivery for messageID %@ failed with error %{public}@
no entry for mailbox %@?
Error %d on connection %p %{public}@: %{public}s - I/O error %d (%s)
Error %d on connection %p %{public}@: %{public}s
#Library Renaming database %@ to %@
?333333
?333333
L=AUTH 
STARTTLS
RCPT TO:<
NOOP
QUIT
MAIL FROM:<
DATA
SSNT
EHLO 
RSET
HELO 
MbP?
Q0&&
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
MFAccount
EDAccount
ECMailAccount
NSObject
NSCopying
ECAuthenticatableAccount
EFPubliclyDescribable
_MFAccountInformation
MFAccountValidator
MFActivityMonitor
EFCancelable
_MFActivityMonitorMultiTarget
MFAuthScheme
MFBufferedQueue
MFConnection
ECAuthenticatableConnection
MFDiagnosticsGenerator
MFConnectionSettings
MFCRAM_MD5AuthScheme
MFCRAM_MD5Authenticator
_MFSQLGenerationContext
LibraryAdditions
PrivateLibraryAdditions
DADeliveryAccount
MFDADeliveryConsumer
DAMessageSendConsumer
DAActionConsumer
MFDADelivery
EFLoggable
DAMailAccount
ECLocalActionReplayerDelegate
MFDAMailbox
MFDAMailAccountConsumer
MFDARequestQueue
MFDAMessagePayloadFetchResponseImpl
MFDAMessagePayloadFetchResponse
_MFDAResolveRecipientsConsumer
DAResolveRecipientsConsumer
DeliveryAccount
EDDeliveryAccount
MFDigestMD5AuthScheme
_MFDigestMD5Authenticator
FormatFlowedSupportInternal
FormatFlowedSupport
_MFFormatFlowedWriter
Goodies
MFInvocationQueue
MFLibraryMessage
EDPersistedMessage
EDIndexableMessage
ECMessage
MFLibrarySearchableIndexAdditions
EDSearchableCriterion
MFLibraryStore
LocalAccount
_MFRootlessMailboxUid
MailAccount
EDReceivingAccount
EDIndexableAccount
SortedMailboxes
MFMailboxUid
EDIndexableMailbox
ECMailbox
_MFMailboxUidEnumerator
_MFMailboxUidChildrenEnumerator
MFMailDelivery
MFMailDataMessageStore
MFMailMessage
MFBaseMessage
UnreadCountCriterion
MFMailMessageLibrary
EDMessageChangeHookResponder
EFSignpostable
EFContentProtectionObserver
_MFMailMessageLibraryStatistics
_MFMessageCollector
MessageConsumer
QueryProgressMonitor
_MFBlockIterationHandler
MFSearchResultHandler
_MFDataCollector
MFGuaranteedCollectingDataConsumer
MFCollectingDataConsumer
MFDataConsumer
_MFEmailAddress
_MFRecipientCollection
_MFObjectProperty
_MFAddableMessage
StoreEnumeration
MFMessageTransferResult
MFMailMessageStore
MFMailMimePart
DecodeMessage
MFMailMimeTextAttachment
MFMessageCriterion
_MFMessageFlags
NSCoding
MFMessageLibrary
MFBasicMessageDataSection
MFMessageDataSection
MFMessageSigner
MFMessageWriter
_MFOutgoingMessageBody
MFOutgoingMessage
MFAccountFactory_iOS
EDAccountFactory
MFAccountLoader
iTunesSync
MFAccountStore
_MFSatisfiedActivityCondition
MFActivityCondition
MFActivityConditionBuilder
MFAppStateMonitor
MFAttachment
_MFAttachmentActiveRequest
MFAttachmentCapabilities
MFAttachmentComposeManager
MFAttachmentCompositionContext
MFAttachmentDataProvider
MFAttachmentLibraryDataProvider
MFAttachmentDataProviderProtocol
MFAttachmentLibraryManager
MFAttachmentManager
MFAttachmentPlaceholder
MFAttachmentRaw
MFAttachmentUtilities
MFAttachmentBundle
MFAttachmentSecurityScope
MFCertificateTrustInfo
MFCertificateTrustInfoEMCertificateTrustInformationTransformer
MFCertificateTrustInformationKeychainManager
MFComposeAttachmentDataProvider
MFContentErrorDocument
MFDAFolderChangeConsumer
DAFolderChangeConsumer
MFDAFolderChangeResult
MFDASyncResponseConsumer
MFRequestQueueResponseConsumer
MFDASyncActionsConsumer
MFDAMailAccountSyncConsumer
DAMailboxRequestConsumer
DAMailboxStreamingContentConsumer
MFDAMessage
MFDAMessageContentConsumer
MFDAStreamingContentConsumer
MFDAMessageStore
MFAdditions
_MFDAMessageStoreGetUpdatesRequest
MFDAMailAccountRequest
_MFDAMessageStoreSetFlagsRequest
_MFDAMessageStoreDeleteRequest
_MFDAMessageStoreFetchHeadersRequest
_MFDAMessageStoreFetchRequest
_MFDAMessageStoreFetchUsingRemoteIDRequest
_MFDAMSBasicConsumer
_MFDAMSUpdateConsumer
_MFDAMSSearchResponseConsumer
DASearchQueryConsumer
_MFDAMessageHeaderFetchConsumer
_MFDAMessageBodyFetchConsumer
DAMailAccountStreamConsumerFactory
_MFDALibraryConsumerFactory
MFMessageDataConsumerFactory
_MFDAMessageFetchAttachmentConsumer
DAMessageFetchAttachmentConsumer
_MFDAMessageStoreSearchResultBodyConsumer
DAMailboxFetchSearchResultConsumer
MFDADraftMessage
MFDAMessageStoreSaveDraftRequest
MFDAMoveResponseConsumer
DAMessageMoveRequestConsumer
MFDAStoreDraftConsumer
MFDATransferActionReplayer
ECTransferActionReplayerSubclassMethods
MFDbJournal
MFDebugAccountState
MFDecryptedAttachmentDataProvider
MFDeliveryResult
MFError
MessageAdditions
MFFakeAccountsProvider
MFAccountsProvider
EDAccountsProvider
MFFakeLibraryMessage
MFFakeMailAccount
MFFakeMailboxUid
MFFakeMailMessage
MFFetchLimits
MFFile
MFFileArchive
MFFileArchiveDirectory
MFFileArchiveEntry
MFFileCompressionQueue
MFFileCompressionQueueActivityManager
MFLibraryMessageReconciler
MFLibraryReconciler
EDProtectedDataReconciliationHookResponder
EDDatabaseChangeHookResponder
MFLibraryThreadReconciler
MFListUnsubscribeMessageGenerator_iOS
MFLocalActionPersistence_iOS
MFLocalActionReplayHandler
MFLocalizedMessageHeaders
MFLockStateMonitor
MFMailboxPersistence_iOS
MFMailboxProvider
EDMailboxProvider
EMMailboxTypeResolver
MFMailboxUidTransformer
MFMailDropAttachmentDataProvider
NSURLSessionDownloadDelegate
NSURLSessionTaskDelegate
NSURLSessionDelegate
MFMailDropAttachmentPreviewDataProvider
MFMailDropMailDelivery
MFMailDropMailParser
MFMailMessageLibraryAddJournaledConversationIDDateReceivedUpgradeStep
EDTableUpgradeStep
MFMailMessageLibraryAddSearchableIndexTablesUpgradeStep
MFMailMessageLibraryAdoptSharedSchemaMigrationStep
MFMailMessageLibraryFixPopUidsUniquenessConstraintUpgradeStep
MFMailMessageLibraryGlobalDataUpgradeStep
MFMailMessageLibraryLocalActionsTablesMigrationStep
_MFOfflineCacheOperation
NSSecureCoding
_MFDADeferredSetFlagsOperation
_MFDADeferredDeleteMessageOperation
MFDADeferredMessageMoveOperation
MFDADeferredStoreDraftOperation
_MFDADeferredNewMailboxOperation
_MFDADeferredDeleteMailboxOperation
_MFDADeferredModifyMailboxOperation
_MFDADeferredSelectMailboxOperation
MFMailMessageLibraryMailboxURLMigrationStep
MFMailMessageLibraryMigrator
MFMailMessageLibraryModifyColumnDefinitionsMigrationStep
MFMailMessageLibraryQueryTransformer
MFMessageCriterionConverterDelegate
MFMailMessageLibraryRebuildThreadsTableUpgradeStep
MFMailMessageLibraryRecreateMessageIndicesUpgradeStep
MFMailMessageLibraryResetSequenceNumberMigrationStep
MFMailMessageLibrarySetThreadSendersRecipientsConflictResolutionUpgradeStep
MFMailMessageLibraryThreadFlagColorsUpgradeStep
MFMailMessageStoreSearchResult
MFMessageBodyMigrator
MFMessageChangeManager_iOS
EDMessageChangeManagerSubClassMethods
MFMessageCollectionInfo
_MFLoadingContextEventResult
MFMessageContentRequest
_MFMessageContentRequestScheduler
EFScheduler
_MFDASearchCriterionConverterDelegate
DASearch
MailboxPrediction
MFMessageCriterionConverter
MFMessageDetails
MFMessageInfo
MFMessageInfoOrderedSet
MFMessageLoadingContextEvent
MFMessageLoadingContext
MFMessageLoadingContextToEMSecurityInformationTransformer
MFMessagePersistence_iOS
_MFMessagePersistenceQueryIterator
_MFFlushableMessageSetIterator
_MFMessageQueryConversionIterator
_MFPersistedMessageForwardingIterator
MFMessageReferenceContext
MFMessageSignerEMMessageSignerTransformer
_MFMailMessageDuplicateInfo
MFMessageTransformer
MFMigrationPersistence
MFNetworkController
RadiosPreferencesDelegate
CXCallObserverDelegate
_MFNetworkObserver
MFOutgoingMessageContent
MFOutgoingLibraryMessageContent
MFOutgoingRichtextMessageContent
MFOutgoingMultipartRelatedContent
MFOutgoingMessageDelivery
MFPersistence_iOS
MFPersistenceDatabase_iOS
MFMailMessageLibraryMigratorDelegate
MFPersistenceDatabaseConnection_iOS
MFPersistenceDatabaseSchema_iOS
EDPersistenceDatabaseSchemaProvider
MFPowerController
MFProtectedDatabasePersistence_iOS
MFRequestQueue
MFRFC822AttachmentDataProvider
MFSearchableIndex_iOS
MFSearchableIndexItem_iOS
MFSearchableIndexManager_iOS
EDSearchableIndexReasonProvider
MFSearchableIndexPersistence_iOS
MFSecureMIMECompositionManager
MFServerMessagePersistenceFactory_iOS
MFSignatures
MFSMTPConnection
MFTaskAssertion
MFThreadFuzzyMatcher
MFUnreadCountProbe
MFUserDefaultMigrator
_MFWeakObjectCacheRef
MFWeakObjectCache
MFMimeEnrichedReader
MimeEnrichedReader
MailExtensions
MFMonitoredInvocation
MFMessageKeychainManager
NSStringUtils
AttachmentURLUtilities
MFMessageURLConnectionDelegate
MFNTLMAuthScheme
_MFNTLMAuthenticator
MFDirectoryPathUtils
MFSharedResourcesDirectoryPathUtils
MFPlainAuthScheme
_MFPlainAuthenticator
_MFLoginAuthenticator
MFPlainTextFragment
MFPlainTextDocument
MFProgressiveMimeParser
SMIMESupport
SMIMEDecoding
SMIMEDecodingPrivate
_MFSecCMSDecoder
SMIMEEncoding
_MFSecCMSEncoder
_MFSecDataMessageStore
SMTPAccount
MFSMTPDelivery
MFSMTPResponse
MFSqliteMessageIDStore
_MFSearchMatcherContext
MFWebAttachmentSource
MFWebMessageDocument
code
domain
isEqualToString:
shouldHealAccounts
accountWithProperties:
setWithObjects:
initWithProperties:
knownSchemes
canAuthenticateAccountClass:connection:
ef_filter:
initWithPersistentAccount:
mutableCopy
_accountClass
setObject:forKey:
_setAccountProperties:
_newPersistentAccount
init
setPersistentAccount:
accountWithSystemAccount:
weakObjectsHashTable
initWithObject:
uniqueID
hash
sharedAccountStore
existingAccountWithPersistentAccount:
accountTypeIdentifier
newPersistentAccountWithAccountTypeIdentifier:
supportedDataclassesWithAccountTypeIdentifier:
countByEnumeratingWithState:objects:count:
setProvisioned:forDataclass:
setEnabled:forDataclass:
setAuthenticated:
serialDispatchQueueSchedulerWithName:qualityOfService:
currentHandler
handleFailureInMethod:object:file:lineNumber:description:
releaseAllConnectionsScheduler
releaseAllConnections
performBlock:
baseAccount
setSystemAccount:
persistentAccountDidChange:previousAccount:
savePersistentAccountWithAccount:
removePersistentAccountWithAccount:
accountPropertyForKey:
systemAccount
parentAccount
parentAccountIdentifier
doesNotRecognizeSelector:
_objectForAccountInfoKey:
stringWithFormat:
ef_sha256Digest
ef_hexString
_privacySafeDescription
stringByAppendingFormat:
currentDevice
isInternal
description
persistentAccount
properties
_basicPropertyForKey:persistentAccount:
objectForKey:
_setBasicProperty:forKey:persistentAccount:
setAccountProperty:forKey:
setValue:forKey:
removeObjectForKey:
identifier
username
accountDescription
setIdentifier:
setUsername:
setAccountDescription:
accountTypeString
displayedAccountTypeString
accountInfoDidChange
cancelPreviousPerformRequestsWithTarget:selector:object:
performSelector:withObject:afterDelay:
initWithData:encoding:
setOAuth2Token:refreshToken:
excludedAccountPropertyKeys
containsObject:
setPassword:
isEqual:
addressListFromEncodedString:
_queueAccountInfoDidChange
removeAccountPropertyForKey:
usesSSL
numberWithBool:
password
componentsJoinedByString:
allKeys
boolValue
isActive
setActive:
hostname
displayName
length
mf_stringWithNoExtraSpaces
isManaged
_boolForAccountInfoKey:defaultValue:
credendtial
_credentialCreateIfNecessary:error:
credentialWithError:
ef_publicDescription
setCredential:
preferredAuthScheme
requiresPassword
_password
_passwordWithError:
mf_isInaccessibleAccountCredentialError
oauthToken
sourceApplicationBundleIdentifier
accountForRenewingCredentials
persistentStore
dictionaryWithObjects:forKeys:count:
errorWithDomain:code:localizedDescription:title:userInfo:
objectForKeyedSubscript:
renewCredentialsForAccount:options:completion:
dictionaryWithDictionary:
dictionary
primaryiCloudAccount
setObject:forKeyedSubscript:
_renewCredentialsWithOptions:completion:
openAuthenticationURL:forAccount:shouldConfirm:completion:
personaIdentifier
authenticatedConnection
name
intValue
defaultSecurePortNumber
defaultPortNumber
portNumber
predefinedValueForKey:
_shouldTryDirectSSLConnectionOnPort:
copyIdentityForPersistentReference:error:
copyClientSSLIdentityForHostName:error:
arrayWithObjects:count:
count
objectAtIndex:
persistentReferenceForIdentity:error:
defaultCenter
postNotificationName:object:userInfo:
requiresAuthentication
schemeWithName:
connectionClass
currentConnections
addObject:
performWhileLocked:
connectionClassForAccountClass:
_newConnection
_connectAndAuthenticate:
isValid
isConstrained
setUsesSSL:
setHostname:
setPortNumber:
certUIService
setCertUIService:
clientCertificates
setClientCertificates:
setTryDirectSSL:
tryDirectSSL
secureServiceName
serviceName
setServiceName:
connectionServiceType
setConnectionServiceType:
allowsTrustPrompt
setAllowsTrustPrompt:
setAccountIdentifier:
networkAccountIdentifier
setNetworkAccountIdentifier:
setSourceApplicationBundleIdentifier:
defaultConnectionSettings
credentialAccessibility
currentMonitor
localizedDescription
customDescriptionForError:authScheme:defaultDescription:
setLocalizedDescription:
setError:
shouldCancel
connectUsingFallbacksForAccount:
authenticateUsingAccount:
disconnect
error
reportAuthenticationError:authScheme:
aa_isAccountClass:
enabledDataclasses
isEnabledForDataclass:
initWithFormat:
missingPasswordErrorWithTitle:
setShouldHealAccounts:
newAccountWithDictionary:
authSchemesForAccountClass
accountWithPersistentAccount:
existingAccountForUniqueID:
isPredefinedAccountType
propertiesWhichRequireValidation
displayedShortAccountTypeString
legacyKeychainProtocol
accountPropertiesValueForKey:value:
isCommonPortNumber:
isSSLEditable
saslProfileName
supportedDataclasses
class
self
performSelector:
performSelector:withObject:
performSelector:withObject:withObject:
isProxy
isKindOfClass:
isMemberOfClass:
conformsToProtocol:
respondsToSelector:
retain
release
autorelease
retainCount
zone
superclass
debugDescription
copyWithZone:
emailAddressStrings
canAuthenticateWithCurrentCredentials
hasPasswordCredential
savePersistentAccount
statisticsKind
setMissingPasswordError
oauth2Token
shouldFetchACEDBInfoForError:
removePersistentAccount
type
accountClass
setValueInAccountProperties:forKey:
removeValueInAccountPropertiesForKey:
valueInAccountPropertiesForKey:
canGoOffline
setDisplayName:
managedTag
supportsMailDrop
_credential
_credentialCreateIfNecessary:
renewCredentialsWithOptions:completion:
promptUserForWebLoginWithURL:shouldConfirm:completionHandler:
fetchTokensIfNecessary:
releaseAllForcedConnections
setDomain:
setPreferredAuthScheme:
connectionsAreConstrained
applySettingsAsDefault:
alternateConnectionSettings
insecureConnectionSettings
secureConnectionSettings
syncStoreIdentifier
nameForMailboxUid:
shouldEnableAfterError:
enableAccount
shouldDisplayHostnameInErrorMessages
inaccessiblePasswordErrorWithTitle:
loginDisabledErrorWithTitle:
isSyncingNotes
copyDiagnosticInformation
.cxx_destruct
_persistentAccount
_persistentAccountLock
_unsavedAccountProperties
_descriptionLock
_privacyDescriptionLock
_cachedPrivacySafeDescription
_cachedDescription
_baseAccount
_sourceApplicationBundleIdentifier
_currentConnections
mf_isMissingAccountCredentialError
UUID
UUIDString
account
setAccount:
deliveryAccount
setDeliveryAccount:
localizedNotes
setLocalizedNotes:
_account
_deliveryAccount
_localizedNotes
rangeOfString:
substringWithRange:
bytes
UTF8String
emailAddressValue
lowercaseString
array
standardUserDefaults
boolForKey:
stringForKey:
setScheme:
setHost:
setPath:
requestWithURL:
setHTTPMethod:
addValue:forHTTPHeaderField:
dataUsingEncoding:
setHTTPBody:
bundleForClass:
pathForResource:ofType:
fileSystemRepresentation
stringWithUTF8String:
indexOfObject:
initWithUTF8String:
initWithPerformsValidationInBackground:
stop
dealloc
accountValidator:finishedValidationOfAccount:usedSSL:
validateAccount:useSSL:withCompletion:
_validateAccount:withFallbacks:
validateAccountWithoutFallbacks:withCompletion:
authenticationSchemesForAccount:connection:
shouldUseAuthentication
initWithArray:
initWithObjects:
connectUsingAccount:
arrayWithCapacity:
addObjectsFromArray:
errorWithDomain:code:localizedDescription:
removeObject:
userInfo
pep_getInvocation:
_backgroundValidateAccountFinished:authSchemes:
retainArguments
invoke
performSelectorOnMainThread:withObject:waitUntilDone:
cancel
_validateAccount:
_validateAccountWithoutFallbacks:
invocationWithSelector:target:object:taskName:priority:canBeCancelled:
monitor
setCanBeCancelled:
performsValidationInBackground
sharedInvocationQueue
addInvocation:
_outgoingServerValid
_incomingServerValid
validateAccount:useSSL:
validateAccountWithoutFallbacks:
cancelValidation
_ispAccountInfo
accountValidationCanceled
validationInvocation
accountIsValid
accountSupportsSSL
delegate
setDelegate:
_accountValidationActivity
_validationInvocation
_completionBlock
_flags
_incomingServerValidationError
_smtpServerValidationError
_incomingServerAuthSchemes
_smtpServerAuthSchemes
_delegate
copy
arrayByAddingObjectsFromArray:
shouldTryFallbacksAfterError:
hasEncryption
firstObject
quit
postNotificationName:object:
initWithObjectsAndKeys:
mf_lock
currentThread
mf_unlock
threadDictionary
resetConnectionStats
postActivityStarting
mf_clearLocks
postActivityFinished:
numberWithUnsignedInteger:
numberWithFloat:
userInfoForNotification
postDidChangeWithUserInfo:
_ntsThrottledUserInfoDict
setSupportsPerItemProgress:
setWithSet:
percentDone
setStatusMessage:percentDone:
setStatusMessage:percentDone:withKey:
setPercentDone:withKey:
setDisplayName:maxCount:
addActivityTarget:
_lockedAddActivityTarget:
dictionaryWithObjectsAndKeys:
removeActivityTarget:
primaryTarget
setPrimaryTarget:
allTargets
isMainThread
_cancelAssociatedCancelables
cancelMessage
performSelector:onThread:withObject:waitUntilDone:
didCancel:
_didChange
makeObjectsPerformSelector:
setShouldCancel:
currentDesignator
pushNewDesignator
destroyCurrentDesignator
setStatusMessage:withKey:
pushNewMonitor
destroyMonitor
startActivity
finishedActivity:
notifyConnectionEstablished
setMaxCount:
setCurrentCount:
setPercentDoneOfCurrentItem:
reset
setGotNewMessagesState:
gotNewMessagesState
addReason:
hasReason:
reasons
changeCount
setStatusMessage:
statusMessage
setPercentDone:
startTime
setExpectedLength:
expectedLength
setActivityTarget:
activityTarget
addActivityTargets:
activityTargets
canBeCancelled
addCancelable:
removeCancelable:
setInvocationQueue:
acquireExclusiveAccessKey
relinquishExclusiveAccessKey:
recordBytesRead:
recordBytesWritten:
bytesRead
bytesWritten
recordTransportType:
mailbox
setMailbox:
startedFetch
setStartedFetch:
isRemoteSearch
setIsRemoteSearch:
transportType
_runningThread
_displayName
_statusMessage
_descriptionString
_ourQueue
_percentDone
_key
_canCancel
_shouldCancel
_isActive
_changeCount
_target
_error
_expectedLength
_maxCount
_currentCount
_currentItemPercentDone
_supportsPerItemProgress
_mailbox
_lastTime
_startTime
_gotNewMessagesState
_bytesRead
_bytesWritten
_reasons
_associatedCancelables
_isRemoteSearch
_startedFetch
_transportType
allObjects
_primaryTarget
_allTargets
initWithMaximumSize:latency:
sizeForItem:
flushIfNecessary
removeAllObjects
handleItems:
_flush
addItem:
flush
isEmpty
size
maximumSize
setMaximumSize:
maximumLatency
setMaximumLatency:
_maximumSize
_maximumLatency
_timeOfLastFlush
_queue
_currentSize
lock
stringArrayForKey:
componentsSeparatedByString:
unlock
initWithName:andDelegate:
readLoggingDefaults
securityProtocol
sharedController
addDiagnosticsGenerator:
close
isCellularConnection
enableThroughputMonitoring:
usesOpportunisticSockets
setUsesOpportunisticSockets:
accountIdentifier
setSecurityProtocol:
networkActivityStarted:
networkActivityEnded:
setNetworkActivityChangeBlock:
_evaluateTrust:errorPtr:
setServerTrustHandler:
_setupSocketWithSettings:
sharedInstance
inAirplaneMode
connectToHost:withPort:service:
connectUsingSettings:
authenticatorForAccount:connection:
authenticationMechanisms
saslName
authenticateUsingAccount:authenticator:
securityLayer
humanReadableName
capabilities
rangeOfString:options:range:
substringFromIndex:
uppercaseString
encryptionBufferSize
appendBytes:length:
initWithCapacity:
createEncryptedDataForBytes:length:
setLength:
appendData:
writeBytes:length:
errorWithException:
writeBytes:length:dontLogBytesInRange:
writeData:dontLogBytesInRange:
stopActivity
_clearBuffer
endCompression
isReadable
service
_certificateIsTrustedForAccount:
defaultTrustManager
remoteHostname
rawTrustResultForSSLTrust:hostname:service:
_setCertificateIsTrusted:forAccount:
setService:
setTrust:
allowTrust:forHost:service:
showPromptWithOptions:responseBlock:
appendString:
appendFormat:
remotePortNumber
initialize
logConnection:type:data:
flushLog
logClasses
setLogClasses:
logAllSocketActivity
setLogAllSocketActivity:
logActivityOnPorts
setLogActivityOnPorts:
logActivityOnHosts
setLogActivityOnHosts:
loginDisabled
isFetching
setIsFetching:
writeData:
setDesiredReadBufferLength:
logReadChars:length:
readLineIntoData:
readBytesIntoData:desiredLength:
startTLSForAccount:
enableSSL
startCompression
hasBytesAvailable
lastUsedTime
connectionSettings
setConnectionSettings:
accountLogString
_securityLayer
_connectionSettings
_socket
_lastUsedTime
_buffer
_bufferRemainingBytes
_bufferStart
_bufferLength
_desiredBufferLength
_deflater
_inflater
_zbuffer
_readBytesNotLogged
_isFetching
_compressionEnabled
_accountLogString
_hostname
_serviceName
_certUIService
_clientCertificates
_portNumber
_connectionServiceType
_usesSSL
_usesOpportunisticSockets
_tryDirectSSLConnection
_allowsTrustPrompt
_accountIdentifier
_networkAccountIdentifier
serverCertificates
mf_isUserCancelledError
setUserInfoObject:forKey:
setShortDescription:
data
logBytes:length:
createDecryptedDataForBytes:length:
getBytes:length:
raise
readBytesIntoBuffer:maxLength:
authenticatorClass
sendsPlainTextPasswords
responseForServerData:
searchableIndex
mailboxIDs
tables
baseTable
propertyMapper
usedBaseTable
haveLibraryIDCriterion
protectedDataAvailable
simplifiedCriterion
fixOnce
_criterionForSQL
identifiersMatchingCriterion:
indexSet
integerValue
addIndex:
initWithType:qualifier:expression:
setLibraryIdentifiers:
criterionType
libraryIdentifiers
qualifier
indexSetWithIndex:
addIndexes:
intersectIndexes:
isFullTextSearchableCriterion
_evaluateFTSCriterionWithIndex:mailboxIDs:
criteria
allCriteriaMustBeSatisfied
_resolveWithIndex:mailboxIDs:
subarrayWithRange:
arrayWithArray:
setCriterionType:
setAllCriteriaMustBeSatisfied:
setCriteria:
_collapsedMessageNumberCriterion:allMustBeSatisfied:collapsedIndexes:
removeObjectsAtIndexes:
insertObject:atIndex:
hasLibraryIDCriterion
SQLExpressionWithContext:depth:
expression
bestBaseTable
_addCriteriaSatisfyingPredicate:toCollector:
objectAtIndexedSubscript:
includesCriterionSatisfyingPredicate:restrictive:
criterionByApplyingTransform:
lastObject
criteriaSatisfyingPredicate:
orCompoundCriterionWithCriteria:
unreadMessageCriterion
criterionForSQL
SQLExpressionWithTables:baseTable:protectedDataAvailable:searchableIndex:mailboxIDs:propertyMapper:
extractedDateCriterion
extractedUnreadCriterion
ef_SQLExpression
numberWithInteger:
columnNameForLookupKey:value:
hasPrefix:
doubleValue
criterionTypeForString:
dateIsRelative
dateUnits
setDateUnits:
setDateIsRelative:
andCompoundCriterionWithCriteria:
date
currentCalendar
components:fromDate:
setDay:
hour
setHour:
minute
setMinute:
second
setSecond:
dateByAddingComponents:toDate:options:
weekday
setMonth:
setYear:
month
timeIntervalSince1970
criterionIdentifier
ef_SQLEscapedString
longLongValue
_SQLExpressionForMailboxCriterion
expressionIsSanitized
initWithName:
equalTo:
beginsWith:caseSensitive:
endsWith:caseSensitive:
contains:caseSensitive:
doesNotContain:caseSensitive:
newDeliveryWithMessage:
setDAMailAccount:
newDeliveryWithHeaders:mixedContent:textPartsAreHTML:
newDeliveryWithHeaders:HTML:plainTextAlternative:other:
initWithDAMailAccount:
deliveryClass
mailAccountIfAvailable
_DAMailAccount
setDone:
actionFailed:forTask:error:
messageDidSendWithContext:
messageDidSendWithContext:sentBytesCount:receivedBytesCount:
status
_status
newMessageWriter
setAllowsQuotedPrintable:
message
messageIDHeaderInFortyBytesOrLess
originalMessage
_updateBasedOnOriginalMessage:
action
shouldSign
shouldEncrypt
messageDataHolder
accountConduit
isUserRequested
sendMessageWithRFC822Data:messageID:outgoingMessageType:originalMessageFolderID:originalMessageItemID:originalMessageLongID:originalAccountID:useSmartTasksIfPossible:isUserRequested:consumer:context:
waitUntilDone
initWithStatus:
setDuration:
setBytesSent:
supportsThreadOperations
conversationFlags
mailboxUidOfType:createIfNeeded:
messageStore
DAMailMessage
longID
remoteID
folderID
isSearchResultWithBogusRemoteId
folderIDForFetching
deliverSynchronously
_library
_folderID
_accountID
_originalMessageID
_originalLongID
defaultAccountDirectory
stringByAppendingPathComponent:
mf_betterStringByResolvingSymlinksInPath
componentsWithString:
setUser:
setPort:
absoluteString
initWithLibrary:persistentAccount:
isMobileMail
sharedNetworkObserver
_reachabilityChanged:
addNetworkReachableObserver:selector:
isNetworkReachable
accountID
initWithPath:
setDAAccount:
object
mailboxForFolderID:
backingAccountInfo
allMailboxUids
resetSpecialMailboxes
mainBundle
localizedStringForKey:value:table:
initWithName:attributes:account:folderID:
rootMailboxUid
setParent:
virtualAllSearchMailbox
emptyFrequencyForMailboxType:
bundleIdentifier
numberWithInt:
_loadChildrenForParent:fromMap:intoArray:replacingInbox:withID:
folderName
isRunningInDisallowedBundle
_isUnitTesting
mf_invocationWithSelector:target:object:
mailboxes
inboxFolder
sentItemsFolder
deletedItemsFolder
draftsFolder
allValues
supportsServerDrafts
parentFolderID
caseInsensitiveCompare:
_loadMailboxListingIntoCache:attributes:children:parent:
_writeMailboxCacheWithPrejudice:
startListeningForNotifications
foldersContentsChanged:
_accountConduitClass
initWithDAAccount:
addObserver:selector:name:object:
accountHierarchyChanged:
stopListeningForNotifications
canUsePersistence
sharedConnection
updateFolderListForAccountID:andDataclasses:
_ensureWeHaveLoadedInitialMailboxList
_copyMailboxUidWithParent:name:attributes:existingMailboxUid:dictionary:
setFolderID:
_newMailboxWithParent:name:attributes:dictionary:withCreationOption:
folderIDForMailbox:
initFolderChangeWithChangeType:folderId:parentFolderId:displayName:dataclass:consumer:
wasSuccessful
_performFolderChange:completion:
_renameMailbox:newName:parent:
setConsumer:
performFolderChange:isUserRequested:
waitForResult
newMailboxNameIsAcceptable:reasonForFailure:
characterSetWithCharactersInString:
rangeOfCharacterFromSet:
_URLScheme
encryptionIdentityPersistentReference
accountBoolPropertyForKey:
isHotmailAccount
persistentUUID
enabledForDADataclass:
emailAddress
emailAddresses
supportsMailboxSearch
supportsEmailFlagging
mailNumberOfPastDaysToSync
pathComponents
removeObjectsInRange:
pathWithComponents:
pairWithFirst:second:
addRequests:mailbox:
addRequests:mailbox:combine:
initWithAccount:folderID:
addRequests:combine:
performRequests:mailbox:
syncAnchorForFolderID:mailbox:
first
enumerateObjectsUsingBlock:
initWithCurrentTag:accountID:requests:
performMailboxRequests:mailbox:previousTag:clientWinsOnSyncConflict:isUserRequested:consumer:
cancelTaskWithID:
tokenWithCancelationBlock:
setSyncAnchor:forFolderID:mailbox:
moreAvailable
shouldRetryRequest
_relativePathForType:
mailboxUidForRelativePath:create:
isMailboxLocalForType:
_localMailboxNameForType:usingDisplayName:
localAccount
_relativePathSpecialMailboxUidWithType:create:
mailboxUidForRelativePath:create:withOption:
setRepresentedAccount:
primaryMailboxUid
supportsDraftFolderSync
featureEnabled:
supportsUniqueServerId
uniqueServerIdForMessage:
dictionaryWithObject:forKey:
dictionaryWithObjects:forKeys:
shutdown
invalidate
isAppleInternalInstall
hasSuffix:
removeNetworkReachableObserver:
mf_invocationWithSelector:target:
loadMeetingData
mailboxUid
reattemptInvitationLinkageForMetaData:inFolderWithId:
unactionableICSRepresentationForMetaData:inFolderWithId:outSummary:
folderIDsThatExternalClientsCareAboutForDataclasses:withTag:
_inboxFolderID
isEqualToSet:
isMaild
isBatterySaverModeEnabled
pushedFoldersPrefsChanged:
_updateWatchedFolderIdsAndNotify:
canReceiveNewMailNotifications
monitorFoldersForUpdates:persistent:
stopMonitoringAllFolders
library
URLString
sequenceIdentifierForMailbox:
setSequenceIdentifier:forMailbox:
supportsConversations
performSearchQuery:
cancelSearchQuery:
_watchedFolderIds
ef_compactMap:
_folderIdsForMailboxUids:
setFolderIdsThatExternalClientsCareAboutAdded:deleted:foldersTag:
stopMonitoringFoldersForUpdates:
globalAsyncScheduler
replayHandler
connectionEstablished
afterDelay:performBlock:
signingIdentityPersistentReference
setSigningIdentityPersistentReference:
setEncryptionIdentityPersistentReference:
initWithString:
simpleAddress
initWithEmailAddresses:
performResolveRecipientsRequest:consumer:
waitForResolvedRecipients
resolvedEmailToX509Certs
ef_flatten
ef_enumerateObjectsInBatchesOfSize:block:
isFatPipe
isPluggedIn
is4GConnection
is3GConnection
setFetchMaxBytes:
mailboxURL
mailboxUidForURL:
storeForMailboxUid:
initWithAction:
replayActionUsingStore:
_remoteIDsForFlagChangeAction:
flagChange
replayFlagChange:forRemoteIDs:error:completed:
initWithError:
remoteIDs
messages
messageDataIsComplete:downloadIfNecessary:
accountWithURL:
legacyPathForAccountIdentifier:withHostname:username:
csAccountTypeString
accountIDForDirectoryName:isAccountDirectory:
messageDataForMessage:
moveSupportedFromMailboxURL:toURL:
URLStringFromLegacyURLString:
uniqueIdForPersistentConnection
allMailMailboxUid
finishedInitialMailboxListLoad
fetchMailboxList
storeClass
_copyMailboxWithParent:name:attributes:dictionary:
_synchronouslyLoadListingForParent:
renameMailbox:newName:parent:
_deleteMailbox:
shouldAppearInMailSettings
mailboxPathExtension
syncAnchorForMailbox:
supportsRemoteAppend
supportsMailboxEditing
_infoForMatchingURL:
mailboxUidForInfo:
addRequest:consumer:mailbox:
processRequests:mailbox:
_specialMailboxUidWithType:create:
supportsMessageFlagging
shouldArchiveByDefault
sourceIsManaged
shouldFetchAgainWithError:foregroundRequest:
needsRemoteSearchResultsVerification
iconString
derivesDeliveryAccountInfoFromMailAccount
reconstituteOrphanedMeetingInMessage:
unactionableInvitationICSRepresentationInMessage:summary:
meetingStorePersistentID
shouldRestoreMessagesAfterFailedDelete
supportsServerSearch
daysToSync
supportsUserPushedMailboxes
pushedMailboxUids
changePushedMailboxUidsAdded:deleted:
addUserFocusMailbox:
removeUserFocusMailbox:
signingIdentityPersistentReferenceForAddress:
setSigningIdentityPersistentReference:forAddress:
encryptionIdentityPersistentReferenceForAddress:
setEncryptionIdentityPersistentReference:forAddress:
perMessageEncryptionEnabledForAddress:
secureCompositionSigningPolicyForAddress:
secureCompositionEncryptionPolicyForAddress:
copyDataForRemoteEncryptionCertificatesForAddresses:errors:
copyDataForRemoteEncryptionCertificatesForAddress:error:
restrictedFromTransferingMessagesToOtherAccounts
restrictedFromSendingExternally
restrictedFromSyncingRecents
fetchLimits
unsupportedHandoffTypes
moveSupported
replayAction:
setVirtualAllSearchMailbox:
_accountConduit
_daAccount
_isNetworkReachable
_cachedAccountID
_cachedAccountPersistentUUID
_cachedDisplayName
_cachedEmailAddress
_cachedEmailAddresses
_cachedIconString
_cachedIsActive
_cachedIsHotmailAccount
_cachedCalendarEnabled
_cachedPerMessageEncryptionEnabled
_cachedSecureMIMEShouldSign
_cachedSecureMIMEShouldEncrypt
_cachedRestrictMessageTransfersToOtherAccounts
_cachedRestrictSendingFromExternalProcesses
_cachedRestrictSyncingRecents
_cachedIsManaged
_cachedSupportsMailDrop
_cachedArchiveByDefault
_cachedSourceIsManaged
_cachedStoreDraftsOnServer
_cachedInboxFolderID
_cachedSentMessagesFolderID
_cachedTrashFolderID
_cachedJunkFolderID
_cachedDraftsFolderID
_temporaryInbox
_loadedInitialMailboxList
_receivedInitialMailboxUpdate
_doneInitialInboxCheck
_observingPushedFoldersPrefsChanged
_supportsServerSearch
_supportsMessageFlagging
_supportsConversations
_supportsServerDrafts
_supportsUniqueServerId
_daysToSync
_requestQueuesByFolderID
_watchedFolderIdsLock
_userFocusMailboxIds
_folderTag
_virtualAllSearchMailbox
initWithName:attributes:forAccount:extraAttributes:
mergeWithUserInfo:
saveUserInfo
flushCriteria
userInfoObjectForKey:
URLForInfo:
mutableDictionaryRepresentation
URLWithAccount:
dictionaryRepresentation
initWithAlwaysReportFailures:
initWithName:condition:andDelegate:
unlockWithCondition:
lockWhenCondition:beforeDate:
lockWhenCondition:
taskFailed:statusCode:error:
waitUntilDoneBeforeDate:
_doneCondition
_shouldRetryRequest
_alwaysReportFailures
shouldSend
filterRequests:
bodyFormat
processRequests:
streaming
streamingDone
initWithData:streaming:streamingDone:
resolvedRecipientsByEmailAddress:
_conditionLock
_resolvedRecipientsByEmailAddress
notificationWithName:object:userInfo:
postNotification:
_postDeliveryAccountsHaveChanged
notificationWithName:object:
deliveryAccounts
accountWithIdentifier:
accountWithHostname:username:lookForExistingAccounts:
existingAccountWithHostname:username:
_updateAccountDescriptionWithUsername:hostname:
addDeliveryAccount:
copyCarrierBundleValue:
substringToIndex:
initWithMessage:
initWithHeaders:mixedContent:textPartsAreHTML:
initWithHeaders:HTML:plainTextAlternative:other:
setShouldUseAuthentication:
unsignedLongLongValue
maximumMessageBytes
numberWithUnsignedLongLong:
mailAccounts
reloadDeliveryAccounts
removeDeliveryAccount:
accountWithUniqueId:
existingAccountWithIdentifier:
accountWithHostname:username:
carrierDeliveryAccount
newDefaultInstance
setMaximumMessageBytes:
hasNoReferences
displayHostname
canBeFallbackAccount
hasEnoughInformationForEasySetup
supportsOutboxCopy
shouldUseSaveSentForAccount:
accountsWithTypeIdentifiers:error:
mainThreadScheduler
performSyncBlock:
setAuthenticationState:
authenticationState
setSecurityLevel:
securityLevel
setMaxBuffer:
setCryptInfo:
setExpectedResponse:
_maxbuf
_securityLevel
_expectedResponse
_cryptInfo
mf_appendCString:
mf_encodeBase64WithoutLineBreaks
mf_lineBreakBeforeIndex:withinRange:
mf_nextWordFromIndex:forward:
whitespaceAndNewlineCharacterSet
getLineStart:end:contentsEnd:forRange:
characterAtIndex:
setString:
mf_convertFromFlowedText:visuallyEmpty:
newWithPlainTextDocument:encoding:
outputString
addedTrailingSpaces
quotedString
getFormatFlowedString:insertedTrailingSpaces:encoding:
quotedString:
urlMatchesForString:
range
rangeOfComposedCharacterSequenceAtIndex:
_findLineBreakInRange:maxCharWidthCount:endIsURL:
deleteCharactersInRange:
replaceOccurrencesOfString:withString:options:range:
fragmentCount
getString:quoteLevel:ofFragmentAtIndex:
_outputQuotedParagraph:range:withQuoteLevel:
_inputDocument
_encoding
_outputString
_quotedString
_addedTrailingSpaces
_lineString
currentLocale
localeIdentifier
getCharacters:
initWithCharacters:length:
ec_descriptionForMimeHeaders
localeWithLocaleIdentifier:
mf_descriptionForMimeHeaders
mf_replyPrefixForSender:
mf_boolForKey:
mf_integerForKey:
mf_setBool:forKey:
mf_setInteger:forKey:
mf_addObject:forKey:
mf_objectForKey:ofClass:
stringValue
initWithMaxThreadCount:
setThreadRecycleTimeout:
condition
priority
_drainQueue:
initWithTarget:selector:object:
setQualityOfService:
start
mf_shouldLogInvocation
target
selector
initWithTimeIntervalSinceNow:
removeObjectAtIndex:
currentRunLoop
dateWithTimeIntervalSinceNow:
runUntilDate:
flushAllInvocationQueues
setMaxThreadCount:
maxThreadCount
invocationCount
removeAllItems
threadCount
threadPriorityTrigger
setThreadPriorityTrigger:
threadRecycleTimeout
_lock
_items
_numThreads
_maxThreads
_threadPriorityTrigger
_threadRecycleTimeout
initWithLibraryID:
originalMailboxID
urlForMailboxID:
mailboxUidForMessage:
rangeOfString:options:
_updateUID
libraryID
numberWithUnsignedInt:
setRemoteID:
commit
setMessage:isPartial:
areMessageContentsLocallyAvailable:fullContentsAvailble:
setPreferredEncoding:
hasTemporaryUid
messageFlags
setFlags:forMessage:
summary
setSummary:
setSummary:forMessage:
setMessageFlagsWithoutCommitting:
dataPathForMessage:
dataPathForMessage:part:
sharedInstanceIfExists
accountForMessage:
setFlagsFromDictionary:forMessages:
originalMailboxURL
mailboxUidFromActiveAccountsForURL:
setData:forMessage:isPartial:
dataConsumerForMessage:part:
copyMessageInfo
setUid:
mailboxID
setMailboxID:
setUidIsLibraryID:
messageBasePathForAccount:
globalMessageID
supportsPurge
attachmentDataDirectoryURLForGlobalMessageID:basePath:purgeable:
path
_attachmentStorageLocation
messageWithLibraryID:options:inMailbox:
_forceLoadOfMessageSummaryFromProtectedStore
loadCachedHeaderValuesFromHeaders:
fileAttributesForMessage:
fileSize
references
messageWithLibraryID:
bestAlternativePart:
persistentID
subject
from
senders
dateReceived
dateSent
listUnsubscribe
conversationID
isServerSearchResult
flags
isPartOfExistingThread
bodyPart
headersDictionary
messageIDHeader
messageIDHeaderHash
labels
headers
documentID
numberOfAttachments
listIDHash
persistedMessageID
messageID
setOriginalMailboxID:
messageSize
setMessageSize:
uniqueRemoteId
setUniqueRemoteId:
isPartial
setIsPartial:
isMessageContentsLocallyAvailable
setHasTemporaryUid:
mailboxName
compareByUidWithMessage:
setMessageFlags:
setFlags:
setMutableInfoFromMessage:
dataPathForMimePart:
markAsViewed
markAsNotViewed
markAsFlagged
markAsNotFlagged
markAsReplied
markAsForwarded
preferredAccountToUseForReplying
setConversationFlags:
setRemoteID:flags:size:mailboxID:originalMailboxID:
setMessageData:isPartial:
dataConsumerForMimePart:
isLibraryMessage
attachmentStorageLocation
setReferences:
_libraryID
_remoteID
_uid
_uniqueRemoteId
_size
_mailboxID
_originalMailboxID
_messageID
_conversationFlags
_references
hasNonFullTextSearchableCriterion
_spotlightQueryString
queryStringByJoiningQueries:withOperand:
em_stringForQuotingWithCharacter:
ef_stringByRemovingQuotesForLanguages:
_queryWithAttributes:matchingValue:qualifier:
searchWordsForPhrase:languages:
_queryWithAttributes:matchingValue:
ef_map:
_comparisonOperationMatchingValue:qualifier:
enumerateKeysAndObjectsUsingBlock:
criteriaForSpotlightCriteria:
_attributesForHeaderCriterion
expressionLanguages
_wordQueryWithAttributes:languages:expression:
dateWithTimeIntervalSince1970:
timeIntervalSinceReferenceDate
spotlightQueryString
preferFullTextSearch
criterion
initWithCriterion:mailbox:readOnly:
initWithMailboxUid:readOnly:
initWithMailbox:
removeObserver:name:object:
_queueMessagesAdded:
_queueMessageFlagsChanged:
_queueMessagesWillBeCompacted:
_queueMessagesWereCompacted:
invalidateFetchWindow
mailboxType
didOpen
groupedMessagesCountForCriterion:groupBy:
nonDeletedCountForMailbox:includeServerSearchResults:includeThreadSearchResults:
allNonDeleteCountForMailbox:includeServerSearchResults:includeThreadSearchResults:
messagesWithSummariesForMailbox:range:
arrayWithObject:
messageIsDeletedCriterion:
messageIsServerSearchResultCriterion:
messagesMatchingCriterion:options:range:
setMessageStore:
generationNumber
copyMessageInfosForMailbox:
copyOfMessagesInRange:options:generation:
copyOfMessagesInRange:options:
messagesWereAdded:
addCountsForMessages:shouldUpdateUnreadCount:
copyOfAllMessagesWithOptions:
messagesWithoutSummariesForMailbox:fromRowID:limit:
copyOfAllMessages
setCriterionIdentifier:
messagesMatchingCriterion:options:
makeObjectsPerformSelector:withObject:
copyMessagesWithRemoteIDs:options:inMailbox:
copyMessagesWithRemoteIDs:options:inRemoteMailbox:
serverSearchResultMessagesForMailbox:
dateOfOldestNonIndexedNonSearchResultMessageInMailbox:
dateOfOldestNonSearchResultMessageInMailbox:
setEarliestReceivedDate:
_fetchWindowMultiple
_fetchWindowMinimum
allNonDeletedCountIncludingServerSearch:andThreadSearch:
fetchWindowCap
fetchWindow
shouldGrowFetchWindow
_calculateFetchWindowWithAdditionalMultiple:
em_userDefaults
filterContiguousMessages:forCriterion:options:
messagesWereAdded:earliestReceivedDate:
filterMessagesByMembership:
_handleFlagsChangedForMessages:flags:oldFlagsByMessage:
messageFlagsDidChange:flags:
allMessageFlagsDidChange:
_memberMessagesWithCompactionNotification:
messagesWereCompacted:
messagesWillBeCompacted:
setLibrary:
messageWithMessageID:options:inMailbox:
headerDataForMessage:
bodyDataForMessage:andHeaderDataIfReadilyAvailable:
initWithConsumer:
dataForMimePart:inRange:isComplete:withConsumer:downloadIfNecessary:didDownload:
done
mimeBody
partNumber
parentPart
fullBodyDataForMessage:andHeaderDataIfReadilyAvailable:isComplete:downloadIfNecessary:usePartDatas:didDownload:
_cachedBodyDataContainerForMessage:valueIfNotPresent:
mf_subdataWithRange:
dataForMimePart:isComplete:
_fetchDataForMimePart:range:isComplete:consumer:
dataConsumerForMessage:part:incomplete:
firstChildPart
nextSiblingPart
isAttachment
dataForMimePart:inRange:isComplete:downloadIfNecessary:didDownload:
decodedDataForData:
appendDataForMimePart:toData:withPartData:
fullBodyDataForMessage:andHeaderDataIfReadilyAvailable:
initWithData:partial:incomplete:
messageBodyUpdatingFlags:
messageBodyIfAvailableUpdatingFlags:
topLevelPart
_copyDataFromMimePart:threshold:downloadIfNecessary:
_fetchFullBodyDataForMessage:andHeaderDataIfReadilyAvailable:downloadIfNecessary:didDownload:
_cachedHeaderDataForMessage:valueIfNotPresent:
bodyDataForMessage:andHeaderDataIfReadilyAvailable:isComplete:
_fetchBodyDataForMessage:andHeaderDataIfReadilyAvailable:downloadIfNecessary:partial:
messageChangeManager
moveMessages:destinationMailboxURL:userInitiated:
deleteMessages:
messagesForMailbox:olderThanNumberOfDays:
compactMessages:
hasChanges
applyFlagChange:toMessages:
setFlagsLocallyFromDictionary:forMessages:
setFlagsFromDictionary:forMessagesInMailboxURLString:
setNumberOfAttachments:isSigned:isEncrypted:forMessage:
canCompact
isOpened
compactMailbox:
defaultManager
mf_makeCompletePath:mode:
mf_canWriteToDirectoryAtPath:
serverUnreadOnlyOnServerCount
unreadCount
unreadCountMatchingCriterion:
externalID
setKeyGenerator:
setComparator:
_cachedHeadersForMessage:valueIfNotPresent:
nonDeletedCountForMailbox:
purgeMessages:
hasMessageForAccount:
handleMessagesAdded:earliestReceivedDate:
_addInvocationToQueue:
handleMessageFlagsChanged:
handleMessagesWillBeCompacted:
handleMessagesCompacted:
hasCompleteDataForMimePart:
defaultLoadOptions
storeWithMailbox:
createEmptyStoreForPath:
storeAtPathIsWritable:
openSynchronously
totalCount
nonDeletedCountIncludingServerSearch:andThreadSearch:
copyOfMessageInfos
copyOfAllMessagesForBodyLoadingFromRowID:limit:
mutableCopyOfAllMessages
copyMessagesMatchingText:options:
copyMessagesMatchingCriterion:options:
copyMessagesWithRemoteIDs:options:
serverSearchResults
dateOfOldestNonIndexedNonSearchResultMessage
willFetchMessages
growFetchWindow
messageForMessageID:options:
bodyFetchRequiresNetworkActivity
_fetchHeaderDataForMessage:downloadIfNecessary:
storeData:forMimePart:isComplete:
fullBodyDataForMessage:andHeaderDataIfReadilyAvailable:isComplete:downloadIfNecessary:didDownload:
bodyDataForMessage:isComplete:isPartial:downloadIfNecessary:
indexOfMessage:
deleteMessages:moveToTrash:
deleteMessagesOlderThanNumberOfDays:compact:
setFlagsForAllMessagesFromDictionary:
allowsAppend
doCompact
writeUpdatedMessageDataToDisk
updateMetadata
_setNeedsAutosave
newObjectCache
_cachedBodyForMessage:valueIfNotPresent:
purgeMessagesBeyondLimit:keepingMessage:
earliestReceivedDate
_earliestReceivedDate
_criterion
_fetchWindow
defaultInstance
_loadEntriesFromFileSystemPath:parent:
isContainer
attributes
setAttributes:
_setChildren:forMailboxUid:
childWithName:
mf_isSubdirectoryOfPath:
isStore
fullPath
pathExtension
mf_stringByExpandingTildeWithSharedResourcesDirectoryInPath
fileExistsAtPath:isDirectory:
setMailboxType:
initWithAccount:
mutableCopyOfChildren
setChildren:
lastPathComponent
transientDraftsFolderShouldCreate:
saveState
resourceSpecifier
stringByRemovingPercentEncoding
legacyPathNameForAccountWithHostname:username:
legacySQLExpressionToMatchAllMailboxes
isLocalAccount
canFetch
_shouldConfigureMailboxCache
mailboxUidForFileSystemPath:
transientDraftsFolder
deleteInPlaceForMailbox:
supportsAppend
supportsArchiving
displayNameAtPath:
mutableCopyWithZone:
_addAccountToSortedPaths:
_loadDataAccessAccountsWithError:
existingDAMailAccountForDAAccount:
_removeLookAsideValuesNotInAccountList:
accountDidLoad
da_accountsWithAccountTypeIdentifiers:outError:
disableMailboxListingNotifications
_loadAllAccountsWithOptions:error:
_setMailAccounts:saveIfChanged:alreadyLocked:
enableMailboxListingNotifications:
mailAccountsWithError:
reloadAccounts
setMailAccounts:saveIfChanged:
setMaxConcurrentOperationCount:
indexOfObjectIdenticalTo:
_setupSortedPathsForAccounts:
addOperationWithBlock:
waitUntilAllOperationsAreFinished
notifyOfAccountsAdded:accountsRemoved:changedAccounts:
activeAccountsWithError:
ef_firstObjectPassingTest:
persistence
hookRegistry
accountsAdded:
accountsRemoved:
accountsChanged:
isEquivalentTo:hostname:username:
isAccountClassEquivalentTo:
isHostnameEquivalentTo:
isUsernameEquivalentTo:
compare:options:
activeAccounts
resetMailboxTimer
callStackSymbols
emailAddressesAndAliasesList
fullUserName
_accountContainingEmailAddress:matchingAddress:fullUserName:includingInactive:
copyAddressListForResentFrom
accountContainingEmailAddress:includingInactive:
headersIfAvailable
accountForHeaders:message:includingInactive:
copyAddressListForTo
copyAddressListForCc
_setOutboxMailboxUid:
outboxMailboxUid
allMailboxUidsForAccounts:
purgeableAccounts
removeLastObject
setCacheHasBeenRead:
isActiveWithPersistentAccount:
_didBecomeActive:
_invalidateCachedMailboxen
newAccountWithPath:
deliveryAccountWillBeRemoved:
setupLibrary
storeClassForMailbox:
initWithBlock:
initWithLibrary:account:
_registerStateCaptureHandler
_setPath:
initWithLibrary:path:
mailAccountDirectory
baseAccountDirectoryForPersonaIdentifier:
defaultPath
_defaultMailAccountForDeliveryIncludingRestricted:
defaultMailAccountForDelivery
_deliveryAccountCreateIfNeeded:
initWithBool:
primaryDeliveryAccountIsDynamic
defaultEmailAddress
string
emailAddressesDictionary
receiveEmailAliasAddresses
fromEmailAddressesIncludingDisabled
initWithDouble:
lastEmailAliasesSyncDate
timeIntervalSinceNow
updateEmailAliases
addEntriesFromDictionary:
mf_emailAddressesWithEquivalentDomains
ef_flatMap:
setWithArray:
objectForKey:generator:
_assignSpecialMailboxToAppropriateIvar:forType:
invalidateAccount:
arrayByApplyingSelector:
allLocalMailboxUids
deleteMailboxes:account:
deleteMailbox:
outboxMessageStore:
accountThatMessageIsFrom:
deleteAccount:
_deleteHook
deleteDeliveryAccountIfNeeded
_invalidateAndDeleteAccountData:
_asynchronouslyInvalidateAndDeleteAccountData:
_mailboxPathPrefix
emptyTrash
_synchronizeMailboxListWithFileSystem
invocationWithSelector:target:taskName:priority:canBeCancelled:
deliveryAccountInUseByOtherAccounts:
deliveryAccountAlternates
isStandardizedMailboxUid
_cachedSpecialMailboxOfType:
ownsMailboxUidWithURL:
exchangeObjectAtIndex:withObjectAtIndex:
suggestionsLostMessageSearchTimestamp
suggestionsLostMessageSearchResultCount
sortedArrayUsingComparator:
_setSpecialMailbox:forType:
_canEmptyMessagesFromMailboxUid:
_emptyFrequencyForKey:defaultValue:
_setEmptyFrequency:forKey:
firstEmailAddress
deleteMessagesFromMailboxUid:olderThanNumberOfDays:
_pathComponentForUidName:
mailboxListingNotificationAreEnabled
_resetSpecialMailboxes
parent
depthFirstEnumerator
_uidNameForPathComponent:
setName:
stringByDeletingLastPathComponent
ef_pathByReplacingRelativePathWithFolderName:
fileExistsAtPath:
renameMailboxes:to:
stringByDeletingPathExtension
mf_stringByReallyAbbreviatingSharedResourcesDirectoryWithTildeInPath
cacheHasBeenRead
nextObject
_incrementCacheDirtyCount
accountRelativePath
_resetAllMailboxURLs:
childWithExtraAttribute:
_childOfMailbox:withComponentName:
scheme
ef_hostNilForEmpty
_URLForInfo:
sharedReporter
reportIssueType:description:
URLWithString:
infoForURL:
setLastEmailAliasesSyncDate:
dataWithContentsOfFile:
propertyListWithData:options:format:error:
standardAccountClass:valueForKey:
libraryIDForAccount:
createLibraryIDForAccount:
cachePolicy
newActionsAdded
addNewAction:
partiallyRedactedStringForString:
setWithObject:
mailboxUidForFileSystemPath:create:
_removeAccountFromSortedPaths:
accountBecameActive:
accountBecameInactive:
unsignedIntValue
replaceObjectAtIndex:withObject:
ef_insertObject:usingSortFunction:context:allowDuplicates:
hasChildren
_cleanInboxDuplication:
contentsOfDirectoryAtPath:error:
_writeMailboxCacheWithPrejudice:completionHandler:
mf_makeDirectoryWithMode:
mailboxCachePath
children
_writeCustomInfoToMailboxCache:
mailboxCacheWriteScheduler
dataWithPropertyList:format:options:error:
writeToFile:options:error:
specialMailboxNameForType:
_setSpecialMailboxName:forType:
_defaultSpecialMailboxNameForType:
ef_accountAllowedCharacterSet
stringByAddingPercentEncodingWithAllowedCharacters:
relativePath
globalMessageURL
pathRelativeToMailbox:
canMoveMessagesFromAccount:toAccount:profileConnection:
mayOpenFromManagedToUnmanaged
mayOpenFromUnmanagedToManaged
initWithResultCode:failedMessages:transferedMessage:
dictionaryForKey:
removeObjectsInArray:
removeObjectsForKeys:
synchronize
valueInAccountLookAsidePropertiesForKey:
setValueInAccountLookAsideProperties:forKey:
_setValueInAccountLookAsideProperties:forKey:subKey:
preventArchiveForMailbox:
canArchiveForMailbox:
MCIsManaged
emailAddressesFromStrings:invalidAddresses:
stateCaptureTitle
debugAccountState
lastKnownCapabilities
initWithStateEventDictionary:identifier:lastKnownCapabilities:
setMailAccountLoadOptions:
lastMailAccountsReloadDate
lastMailAccountsReloadError
setMailAccounts:
existingAccountWithType:hostname:username:
resetMailboxTimers
updateAutoFetchSettings
allEmailAddressesIncludingFullUserName:includeReceiveAliases:
accountContainingEmailAddress:
accountUsingHeadersFromMessage:
accountThatMessageIsFrom:includingInactive:
addressesThatReceivedMessage:
allPurgeableMailboxUids
allActivePrimaryMailboxUids
accountWithPath:
setGlobalPathForAccounts:
defaultMailAccountForDeliveryExcludingRestricted
defaultDeliveryAccount
saveStateForAllAccounts
synchronouslyEmptyMailboxUidType:inAccounts:
accountWithURLString:
updateEmailAliasesForActiveAccounts
usernameIsEmailAddress
getConfigurationFromServerForEmail:
_accountWithPath:
setDataclassesConsideredActive:
canMoveMessagesFromAccount:toAccount:
mailboxForType:
containsMailboxWithURL:
smtpIdentifier
test_tearDown
setFullUserName:
isPrimaryDeliveryAccountDisabled
setPrimaryDeliveryAccountDisabled:
setDeliveryAccountAlternates:
canUseDeliveryAccount:
setCanUseCarrierDeliveryFallback:
canUseCarrierDeliveryFallback
setDefaultEmailAddress:
setEnabled:forEmailAddress:
pushUpdateForAliasData
setEmailAddresses:
receiveEmailAliasAddressesList
setReceiveEmailAliasAddresses:
fromEmailAddresses
emailAddressesAndAliases
copyReceivingEmailAddresses
invalidateAndDelete
nowWouldBeAGoodTimeToStartBackgroundSynchronization
forceFetchMailboxList
canAppendMessages
shouldExpungeMessagesOnDelete
isSpecialMailbox:
mailboxesForSuggestionsLostMessageSearchPriorToTime:
transferDisabledMailboxUids
setMailboxUid:forMailboxType:
setEmptyFrequency:forMailboxType:
displayNameForMailboxUid:
canCreateNewMailboxes
canMailboxBeRenamed:
canMailboxBeDeleted:
moveMailbox:intoParent:
renameMailbox:newName:
resetMailboxURLs
setConnectionError:
connectionError
transferNotificationSessionToAccount:
systemDidWake
systemWillSleep
canForwardWithoutDownload
supportsSyncingReadState
setCachePolicy:
displayUsername
archiveSentMessages
deleteInPlaceForAllMailboxes
displayNameUsingSpecialNamesForMailboxUid:
persistentNameForMailbox:
loggingIdentifier
_registerPushNotificationPrefix:forMailboxNames:
willPerformActionForChokePoint:coalescePoint:result:
didFinishActionForChokePoint:coalescePoint:withResult:
_mailboxesWereRemovedFromTree:withFileSystemPaths:
setMailboxCachePath:
powerAssertionIdentifierWithPrefix:
_shouldLogDeleteActivity
_readCustomInfoFromMailboxCache:
URLForMessage:
newMailboxWithParent:name:
moveMessages:fromMailbox:toMailbox:markAsRead:
shouldFetchBodiesWhenMovingToTrash
saveSentFolder
customSignature
setCustomSignature:
archiveDestinationForMailbox:
supportsHandoffType:
supportsFastRemoteBodySearch
setMailboxCacheWriteScheduler:
_path
_nonPersistentPath
_rootMailboxUid
_flagsLock
_inboxMailboxUid
_draftsMailboxUid
_sentMessagesMailboxUid
_trashMailboxUid
_archiveMailboxUid
_junkMailboxUid
_cachedMailboxenLock
_deletionLock
_lastConnectionError
_currentChokedActions
_mailboxCachePath
_messageStoresCache
_cachedLibraryID
_cachedLibraryIDLock
_supportsFastRemoteBodySearch
_mailboxCacheWriteScheduler
_replayHandler
mf_indexOfMailboxDictionaryWithName:
setCountLimit:
initWithContentsOfFile:options:error:
handleFailureInFunction:file:lineNumber:description:
stringByAppendingPathExtension:
fileURLWithPath:
_initWithName:attributes:forAccount:
extraAttributes
_dictionaryRepresentation
retainedReference
specialNameForType:
representedAccount
serverUnreadOnlyOnServerCountForMailbox:
unreadCountForMailbox:
unreadCountForMailbox:matchingCriterion:
statusCountDeltaForMailbox:
defaultScheduler
mostRecentStatusCountForMailbox:
setMostRecentStatusCount:forMailbox:
_mutableChildren
childEnumeratorIncludingHiddenChildren:
_initWithMailbox:includeHiddenChildren:
numberOfDescendants
isEqualToArray:
URLStringNonNil
fullPathNonNil
sortUsingFunction:context:
reference
topMailbox
rootMailbox
removeChild:
isStandardizedMailboxUidType:
isSentMailboxType:
isOutgoingMailboxType:
ancestralAccount
initWithURL:
mailboxIDForURLString:
initWithContentsOfFile:
_loadUserInfo
keyEnumerator
criterionForMailboxURL:
addToPostOrderTraversal:
unsignedIntegerValue
numberWithDouble:
fullyRedactedStringForString:
fileURLForMailboxURL:
isDraftsMailboxType:
typeIsValidTransferDestination:
uniqueId
displayNameUsingSpecialNames
accountDisplayName
nonDeletedCount
statusCountDelta
updateMostRecentStatusCount:
shouldUseNonDeletedForUnreadCount
childEnumerator
numberOfChildren
childAtIndex:
indexOfChild:
descendantWithExtraAttribute:
sortChildren
isSpecialMailboxUid
isSentMailboxUid
isOutgoingMailboxUid
isNotesMailboxUid
realFullPath
pathRelativeToMailboxForDisplay:
oldURLString
objectID
compareWithMailboxUid:
indexToInsertChildMailboxUid:
isDescendantOfMailbox:
isVisible
userInfoBoolForKey:
setUserInfoBool:forKey:
userInfoDictionary
setUserInfoWithDictionary:
userInfoForSerialization
setCriterion:
store
isShared
alwaysWriteFullMessageFile
updateSuggestionsLostMessageSearchResultCount:
redactedName:
setExtraAttributes:
_pathComponent
_attributes
_parent
_children
_representedAccount
_realFullPath
_extraAttributes
_pendingLevel
_type
_userInfo
_mailboxes
_index
_includeHidden
compare:
compare:options:range:locale:
weakReferenceWithObject:
ef_sanitizedFileName
newWithMessage:
updateOriginalMessageFromHeaders:
stripInternalHeaders
setMessageBody:
compositionSpecification
initWithCompositionSpecification:
createMessageWithHTMLStringAndMIMECharset:plainTextAlternative:otherHtmlStringsAndAttachments:headers:
createMessageWithPlainTextDocumentsAndAttachments:headers:
setDateSentTimeIntervalSince1970:
originalHeaders
removeHeaderForKey:
firstHeaderForKey:
setHeader:forKey:
subjectString
headersForDelivery
messageBody
rawData
appendHeaderData:andRecipients:
dataHolderWithData:
addData:
deliverMessageData:toRecipients:
setStatus:
addNewMessages:mailboxURL:userInitiated:
initWithBase64EncodedData:options:
objectIDFromSerializedRepresentation:
newWithHeaders:mixedContent:textPartsAreHTML:
newWithHeaders:HTML:plainTextAlternative:other:
deliverMessage:
archiveAccount
setArchiveAccount:
deliveryStatus
deliveryResult
deliverAsynchronously
setCellDataOnly:
archive
setCompositionSpecification:
setIsUserRequested:
originalMessageObjectID
setOriginalMessageObjectID:
setOriginalMessage:
setAction:
setShouldSign:
setShouldEncrypt:
_message
_archiveAccount
_result
_headers
_compositionSpecification
_mixedContent
_textPartsAreHTML
_htmlString
_plainTextAlternative
_otherStringsAndAttachments
_threaded
_useCellDataOnly
_isUserRequested
_shouldSign
_shouldEncrypt
_originalMessageObjectID
_originalMessage
_action
firstSenderAddress
classForMimePart
mailboxScopeForMailboxObjectIDs:forExclusion:
initWithGlobalMessageID:mailboxScope:
validatePriority:
headersForMessage:fetchIfNotAvailable:
setPriorityFromHeaders:
setMessageIDHash:
componentsWithEmailAddress:
mailMessageStore
loadMeetingExternalIDForMessage:
loadMeetingDataForMessage:
loadMeetingMetadataForMessage:
URLPathAllowedCharacterSet
removeCharactersInString:
setPercentEncodedPath:
setSubject:to:cc:bcc:sender:dateReceived:dateSent:summary:withOptions:
dateReceivedAsTimeIntervalSince1970
setDateReceivedInterval:
dateSentAsTimeIntervalSince1970
setDateSentInterval:
setConversationHash:
messageIDHash
setIsVIP:
setRead:
setFlagged:
setKnownToHaveAttachments:
contentToOffset:resultOffset:downloadIfNecessary:asHTML:isComplete:
bestAlternativeInPart:
isVisuallyEmpty
htmlData
preferredEncoding
stringWithString:
listUnsubscribeCommands
hasHeaderForKey:
hasReplyPrefix
headersForKey:
forwardedMessagePrefixWithSpacer:
dataMessageStoreToUse
displayablePriorityForPriority:
dateReceivedInterval
dateSentInterval
conversationHash
flagged
read
deleted
senderVIP
isKnownToHaveAttachments
modSequenceNumber
setModSequenceNumber:
preferredEmailAddressToReplyWith
loadMeetingExternalID
loadMeetingMetadata
setSourceIsManaged:
remoteMailboxURL
shouldSetSummary
externalConversationID
bestAlternativePart
answered
junk
conversationVIP
conversationMuted
shouldUseMailDrop
setShouldUseMailDrop:
setGlobalMessageID:
_messageFlags
_modSequenceNumber
_info
_globalMessageURL
_useInternalSourceIsManaged
_sourceIsManaged
_shouldUseMailDrop
_globalMessageID
useFlaggedForUnreadCount
unreadCountCriterion
signpostLog
renameOrRemoveDatabaseIfNeeded
initWithPath:inMemoryIdentifier:library:propertyMapper:
registerMessageChangeHookResponder:
database
setSetupIsComplete:
isAllowedToAccessProtectedData
URLByAppendingPathComponent:
allowedToAccessProtectedData
_setProtectedDataAvailabilityState:
initWithPath:inMemoryIdentifier:userAgent:
_cancelPendingJournalReconciliation
closeDatabaseConnections
messagesTableName
registerColumnName:table:lookupKeys:forClass:property:
prefix
subjectWithoutPrefix
address
contentType
persistenceDidInvalidate
unregisterAllHookResponders
fileRemovalAfterCompactionScheduler
reconcileJournalWithCompletionBlock:
applicationWillResume
storedIntegerPropertyWithName:
initWithLibrary:
setBodyMigrator:
bodyMigrator
startMigratingBodies
setBool:forKey:
invalidateAndWait
setDefaultInstance:
setStoredIntegerPropertyWithName:value:
pendingIndexItemsCount
searchableIndexManager
index
performWriteBlock:
postOldFlags:newFlags:forMessage:
preparedStatementForQueryString:
compiled
handleSQLResult:message:
postFlagsChangedForMessages:flags:oldFlagsByMessage:
removeSearchableItemsForMessages:
updateFlagsForMessages:changes:transformer:
transactionGeneration
insertGeneration:
persistenceDidUpdateProperties:message:generationWindow:
enumerateByteRangesUsingBlock:
itemWithMessage:bodyData:fetchBody:
indexItems:
numberWithLongLong:
messageIDsBySubject
numberValue
int64Value
setConversationIDHash:
initWithPrefix:subjectWithoutPrefix:
setSubject:
setSender:
executeWithIndexedBindings:usingBlock:error:
handleError:message:
_recipientsForMessagesWithDatabaseIDs:includeTo:includeCC:includeBCC:
toRecipientStrings
setTo:
ccRecipientStrings
setCc:
bccRecipientStrings
setBcc:
matchMessageReferenceContext:withCandidateMessageReferenceContexts:
conversationIDHash
_insertThreadReferences:toMessageWithLibraryID:usingDatabaseConnection:
initWithTable:
addValue
enumerateIndexesUsingBlock:
executeInsertStatement:error:
conversationFlagsRef
isProtectedDataAvailable:
prefixLength
_addMessageToThreadAtUnlock:
_addThreadingInfoWithContext:usingDatabaseConnection:
conversationIDsOfMessagesInSameThreadAsMessageWithLibraryID:messageIDHash:
_conversationIdForMessageIds:
removeIndex:
firstIndex
persistenceWillChangeConversationID:messages:
checkForConnectionErrorWithMessage:
setConversationID:
flagsForConversationId:
criterionForNotDeletedConversationID:
indexGreaterThanIndex:
setFlags:forConversationId:
persistenceIsChangingConversationID:messages:generationWindow:
column:
initWithTable:where:
executeDeleteStatement:error:
messageDataHolderIsComplete:downloadIfNecessary:
initWithAddress:displayName:
objectValue
_recipientsForMessageWithDatabaseID:connection:
initWithLibraryMessage:messageIDHash:mailboxURL:
persistenceWillAddMessage:fromExistingMessage:
copyAddressListForSender
initWithAddress:
addToRecipient:
addCCRecipient:
copyAddressListForBcc
addBCCRecipient:
copyFirstStringValueForKey:
parseContentTypeHeader:type:subtype:
null
ef_UUID
referencesFromHeaders:
_findOrCreateDatabaseIDForAddress:comment:cache:connection:
_findOrCreateDatabaseIDForGlobalData:cache:connection:
_findOrCreateDatabaseIDForSubject:cache:connection:
_findOrCreateDatabaseIDForSummary:cache:connection:
executeWithNamedBindings:usingBlock:error:
lastInsertedDatabaseID
ec_partiallyRedactedStringForSubjectOrSummary:
_addRecipients:toMessageWithDatabaseID:cache:connection:
setMessage:
setLibraryID:
subjectWithString:
setMessageIDsBySubject:
setConversationFlagsRef:
fullAddress
notifyConversation:hasMergedIntoConversation:
addReferenceForContext:usingDatabaseConnection:generationWindow:mergeHandler:
messageDataDirectoryURLForGlobalMessageID:basePath:purgeable:
partName
dataHolder
isComplete
_writeEmlxFile:withBodyData:protectionClass:
_libraryMessageWithLibraryID:wasCached:
setGenerationNumber:
sendersIfCached
toIfCached
ccIfCached
bccIfCached
setSubject:to:cc:bcc:sender:dateReceived:dateSent:summary:
setContentType:
setExternalID:
initWithHash:
setListIDHash:
setMessageIDHeader:
persistenceIsAddingMessages:journaled:generationWindow:
ef_groupBy:
toRecipients
ccRecipients
bccRecipients
formattedAddressWithName:email:useQuotes:
messageGlobalDataTableName
_findOrCreateDatabaseIDForValue:inTable:column:cache:connection:created:
_removeDataFilesForGlobalID:
removeItemAtURL:error:
setWhereClause:
executeUpdateStatement:error:
databaseIDValue
setSenderList:
setToList:
setCcList:
setBccList:
persistenceDidChangeGlobalMessageID:orConversationID:message:generationWindow:
qualifiedColumnExpressionsForClass:property:availableTables:
hasLookupKey:class:property:
valueForLookupKey:class:property:
_selectExpressionForMessageWithAvailableTables:
sqlDB
executeUsingBlock:error:
_iterateStatement:connection:withProgressMonitor:andRowHandler:context:
newMessagesAvailable:
_messagesForMailbox:olderThanNumberOfDays:limit:
sendMessagesMatchingCriterion:to:options:baseTable:range:
sendMessagesMatchingCriterion:to:options:baseTable:
performReadBlock:
distantFuture
_firstDateForQuery:inMailbox:
queryForCriterion:connection:options:
queryForCriterion:connection:options:baseTable:
setExpressionIsSanitized:
copyMessageInfosMatchingCriterion:
_int64ForQuery:connection:textArgument:
criterionForMailboxPredictionMessageQuery:variable:
queryForCriterion:connection:options:baseTable:isSubquery:
setAllowedExecutionTime:
_libraryIDForOldestKnownMessageInMailbox:
_sendMessagesForStatement:connection:to:options:timestamp:
stringByAppendingString:
_computeUnreadCountForMailboxes:
unreadCountForAggregatedMailboxes:matchingCriterion:
unreadCountForAggregatedMailboxes:
_flaggedCountForAggregatedMailboxes:
_attachmentCountForAggregatedMailboxes:
_includesMeCountForAggregatedMailboxes:
includeRelatedMessages
countOfRelatedMessagesMatchingCriterion:forConversationsContainingMessagesMatchingCriterion:forMailboxCriterion:
anyObject
_queryForMailboxesIDsFromMailboxes:
_integerForQuery:withTextArgument:
flaggedCountForMailbox:
attachmentCountForMailbox:
includesMeCountForMailbox:
countMessagesMatchingCriterion:
nonDeletedCountForAggregatedMailboxes:includeServerSearchResults:includeThreadSearchResults:
persistenceDidUpdateServerCount:forMailboxWithObjectID:generationWindow:
persistenceDidUpdateLastSyncAndMostRecentStatusCount:forMailboxWithObjectID:generationWindow:
dataPathForMessage:type:
mf_protectFileAtPath:withClass:error:
persistenceDidUpdateMostRecentStatusCount:forMailboxWithObjectID:generationWindow:
_selectClauseForOptions:protectedDataAvailable:
_messageForRow:options:timestamp:connection:isProtectedDataAvailable:
_canSelectMessagesWithOptions:connection:
ef_quotedSQLEscapedString
copyMessages
getDetailsForMessagesWithRemoteIDInRange:fromMailbox:
_keyForOptions:protectedDataAvailable:mailboxAvailable:mailboxCached:
_copyReferenceHashesWithoutMessagesForMessageWithConversation:
_getReferencesForHashesWithOwners:
containsIndex:
remoteStoreForMessage:
canFetchMessageIDs
fetchMessagesWithMessageIDs:andSetFlags:
stringForQuery:monitor:
reloadMailboxCacheWithConnection:
mailboxURLForMessage:
_schedulePeriodicStatisticsLogging
_scheduleIncrementalVacuum
addPostMigrationStep:
ef_addObjectIfAbsent:
_notifyDidCompact:messages:mailboxes:
_deleteMessages:connection:
persistenceIsDeletingMessages:generationWindow:
_removeSearchableItemsWithLibraryIDs:
cleanupProtectedTables
_addAddressesFromRecipientsForMessages:toSet:connection:
_deleteMessages:andCleanUpAddresses:subjects:summaries:connection:
_removeGlobalDataForMessagesIfNecessary:connection:
executeStatementString:errorMessage:
_existingValuesForColumn:table:fromValues:connection:
minusSet:
_deleteRows:fromTable:connection:
transactionWithDescription:
initWithResultColumn:table:
setWhere:
executeSelectStatement:withBlock:error:
_maxRowIDInSet:
updateLargestDeletedRowID:forTableName:withConnection:
persistenceIsDeletingAllMessagesInMailboxWithURL:generationWindow:
persistenceDidDeleteAllMessagesInMailboxesWithURLs:generationWindow:
removeAllMessagesFromMailbox:removeMailbox:andNotify:
removeSearchableItemsForMailbox:
URLByDeletingLastPathComponent
rootMessageDataDirectoryForBasePath:purgeable:
migrateBodyForMessageIfNecessary:
attributesOfItemAtPath:error:
mf_sizeForDirectoryAtURL:error:
initWithLibrary:message:part:partial:incomplete:relaxDataProtection:compressionQueue:
dataConsumerForMessage:isPartial:
cStringUsingEncoding:
_setSummary:forMessageWithRowID:connection:
initWithResult:table:
setLimit:
dataValue
originalString
loadData:forMessage:usingBlock:
unarchivedObjectOfClasses:fromData:error:
mf_rangeOfRFC822HeaderData
bodyDataAtPath:headerData:
headerDataAtPath:
dataWithContentsOfFile:options:error:
_equalToMailboxIDsFromCriterion:
_activeAccountsClause
queryForCriterion:connection:options:baseTable:isSubquery:range:
sendMessagesMatchingCriterion:to:options:baseTable:range:success:
queryParser
sqlQueryForQuery:
predicate
sqlQueryWithConversionLogForQuery:
handleMessage:
schema
protectedSchema
accountsProvider
vipManager
messagePersistence
mailboxPersistence
initWithSchema:protectedSchema:searchableIndex:accountsProvider:vipManager:messagePersistence:mailboxPersistence:
iterateMessagesMatchingCriterion:withResultHandler:options:withMonitor:
sendMessagesMatchingCriterion:to:options:range:
sendMessagesMatchingCriterion:to:options:
removeSearchableItemsForAccount:
initWithExpressions:
rebuildActiveAccountMailboxesExpression:
rebuildActiveAccountsClauseWithActiveAccounts:inactiveAccounts:
disqualified
_mailboxesClauseForAccounts:
suspend
resume
refresh
enableIndexingAndBeginScheduling:
setPersistenceAvailable:
setStart:
setProtectedDataAvailable:
setMessages:
setMessageData:
setMessageDataDeleted:
setMessagesMarkedAsJournaled:
setMailboxesNeedingReconcilication:
setProtectedMessages:
setProtectedMessageData:
_collectStatistics_nts
duration
messagesMarkedAsJournaled
protectedMessages
messageData
protectedMessageData
messagesDeleted
messageDataDeleted
mailboxesNeedingReconcilication
_shouldLogDatabaseStats
_logStatistics
protectedDatabaseAttached
_scheduleJournalReconciliation
updateThreadingInfoForMessage:fromHeaders:
openConnectionIsWriter:
performIncrementalVacuumForSchema:
closeAllConnections
removeLibraryOnNextLaunch
_renameLibraryAtPath:
removeItemAtPath:error:
globalAsyncSchedulerWithQualityOfService:
createFileAtPath:contents:attributes:
mf_uniqueFilenameWithRespectToFilenames:
_nonLocalAccountsClause
removeSearchableItemsForAccount:mailboxID:
removeItemsForDomainIdentifier:
_stringsForIndexSet:
removeItemsWithIdentifiers:
reindexSearchableItemsWithIdentifiers:acknowledgementHandler:
reindexAllSearchableItemsWithAcknowledgementHandler:
objectForKey:wasCached:
columnExistsWithName:
initWithUUIDString:
setDateReceivedTimeIntervalSince1970:
setDocumentID:
persistenceWillReadMessage:fromRow:
addToRecipientWithAddress:displayName:
addCCRecipientWithAddress:displayName:
addBCCRecipientWithAddress:displayName:
valueForKey:
persistenceWillBeginUpdates
persistenceDidFinishUpdates
persistenceDidAddMessages:generationWindow:
persistenceDidReconcileJournaledMessages:generationWindow:
persistenceDidUpdateData:message:
persistenceDidDeleteMessages:generationWindow:
persistenceWillChangeFlags:messages:
persistenceIsChangingFlags:messages:generationWindow:
persistenceDidChangeFlags:messages:generationWindow:
persistenceDidChangeConversationNotificationLevel:conversationID:generationWindow:
persistenceDidAddLabels:removeLabels:messages:generationWindow:
persistenceWillTransferMessages:transferType:destinationMailboxURL:userInitiated:
signpostID
contentProtectionStateChanged:previousState:
_setSuspendedUnderLock:
bodyMigrationFinished
updateFlagsForMessagesInPlace:success:
notifyNewDataAvailableForMessages:
addMessages:withMailbox:newMessagesByOldMessage:remoteIDs:setFlags:addPOPUIDs:dataSectionsByMessage:generationWindow:
willStartPersistenceDidAddMessages:
didFinishPersistenceDidAddMessages:
updateAdditionalThreadingInfoForSentMessageWithHeaders:externalConversationID:
iterateStatement:connection:withProgressMonitor:andRowHandler:context:
messagesForMailbox:limit:
copyMessageInfosForConversationsContainingMessagesMatchingCriterion:forMailbox:
groupedMessagesCountByMailboxMatchingQuery:variable:
oldestKnownConversationInMailbox:
oldestKnownMessageInMailbox:
sendersByLibraryIDForConversation:mailbox:limit:
messagesWithoutSummariesForMailbox:
messagesWithSummariesForMailbox:fromRowID:limit:
orderedBatchOfMessagesEndingAtRowId:limit:success:
recomputeUnreadCountForMailboxWithURL:
countDistinctMessagesMatchingCriterion:
deletedCountForMailbox:
attachmentCountForMailboxes:
nonDeletedCountForAggregatedMailboxes:
totalCountForMailbox:
unseenCountForMailbox:
indexedCountForMailbox:limit:
setServerUnreadOnlyOnServerCount:forMailbox:
setLastSyncAndMostRecentStatusCount:forMailbox:
increaseProtectionOnFileForMessage:
oldestMessageInMailbox:
messageWithRemoteID:inRemoteMailbox:
maximumRemoteIDForMailbox:
canProvideMinimumRemoteID
minimumRemoteIDForMailbox:
sequenceIdentifierForMessagesWithRemoteIDs:inMailbox:
setSequenceIdentifier:forMessageWithLibraryID:
setSequenceIdentifier:forMessagesWithRemoteIDs:inMailbox:
getDetailsForMessages:absoluteBottom:topOfDesiredRange:range:fromMailbox:
getDetailsForAllMessagesFromMailbox:
messagesWithMessageIDHeader:
messageWithLibraryID:options:inMailbox:temporarilyUnavailable:
missingReferencesForConversationContainingMessage:
countOfMessagesMissingFromThreadContainingMessage:
loadMoreMessagesForThreadContainingMessage:hasNoMoreMessages:
stringForQuery:
reloadMailboxCacheIfNecessaryWithConnection:
mailboxURLsForIDs:
mailboxIDForURLString:createIfNecessary:
clearServerSearchFlagsForMessagesWithLibraryIDs:
scheduleRecurringActivity
syncedConversations
setConversationInfo:syncKey:flags:
compactMessages:permanently:
messageWithMessageID:inMailbox:
deleteAttachmentsForMessage:inMailboxFileURL:
dataConsumerForMessage:
setData:forMessageToAppend:
_setMessageData:libraryID:part:partial:complete:connection:
bodyDataForMessage:
queryForCriterion:connection:options:range:
iterateMessagesMatchingQuery:withResultHandler:options:withMonitor:
iterateMessagesMatchingCriterion:options:handler:
messagesMatchingCriterion:options:range:success:
messagesMatchingCriterion:options:success:
rebuildActiveAccountsClausesAndExpressionsWithAccounts:
enabledAccountMailboxesExpression
deletePOPUID:inMailbox:
UIDsToDeleteInMailbox:
allUIDsInMailbox:
hiddenPOPUIDsInMailbox:
protectedDataAvailability
_indexSetOfMessagesDeleted
checkDatabaseConsistency
_canAccessProtectedData
journalWasReconciled
migrate
journalReconciliationFailed
handleFailedMigration
pruneConversationTables:
_prepareBatchStatement:pattern:objects:count:
_prepareBatchStatement:pattern:libraryIDs:batchSize:
indexableMessagesWhere:sortedBy:limit:options:
allMailboxURLStrings
_libraryMessageCache
firstMessageMatchingCriterion:
stringFromAllMailboxUnreadCount
messageDataExistsInDatabaseForMessageLibraryID:part:length:
searchableIndexScheduler
setSearchableIndexScheduler:
setQueryParser:
setFileRemovalAfterCompactionScheduler:
currentAddedMessagesMap
setCurrentAddedMessagesMap:
_mailboxCache
_statsQueue
_activeAccountClause
_nonLocalAccountClause
_enabledAccountMailboxesExpression
_protectedDataAvailability
_keyBagQueue
_conversationCalculationQueue
_messagesToThreadAtUnlock
_lastStats
_compressionQueue
_searchableIndex
_searchableIndexLock
_suspendedUnderLock
_mailboxLock
_addedMessagesMapLock
_mailboxURLsToMailboxIDs
_optionsToQueries
_allowedToAccessProtectedData
_persistence
_database
_searchableIndexScheduler
_queryParser
_fileRemovalAfterCompactionScheduler
_currentAddedMessagesMap
_bodyMigrator
setMessagesDeleted:
_protectedDataAvailable
_start
_duration
_messages
_protectedMessages
_messageData
_protectedMessageData
_messagesDeleted
_messageDataDeleted
_messagesMarkedAsJournaled
_mailboxesNeedingReconcilication
transmogrifier
setTransmogrifier:
_monitor
_transmogrifier
_block
_cancelled
pathForStorage
_consumer
_part
_partial
_incomplete
_relaxDataProtection
stringByTrimmingCharactersInSet:
ef_stringByTrimmingOuterQuotes
_address
_bcc
setClass:
setProperty:
objectPropertyWithClass:property:
property
_class
_property
libraryMessage
urlString
forwardingTargetForSelector:
_messageIDHash
_libraryMessage
_urlString
persistenceIsAddingMailboxWithDatabaseID:objectID:generationWindow:
initWithUid:mailboxID:messageID:dateReceivedInterval:dateSentInterval:conversationHash:read:knownToHaveAttachments:flagged:isVIP:
initWithData:
initWithFile:account:
addFile:
mf_dictionaryWithMessagesSortedByStore
mf_enumerateByStoreUsingBlock:
resultCode
transferedMessages
failedMessages
_resultCode
_failedMessages
_transferedMessages
createEmptyStoreIfNeededForPath:
distantPast
serverMessageCount
hasMoreFetchableMessages
storeSearchResultMatchingCriterion:limit:offset:error:
_updateFlagForMessage:key:value:
retainAssertionWithIdentifier:withAccount:
fetchNumMessages:preservingUID:options:
releaseAssertionWithIdentifier:
fetchMobileSynchronously:preservingUID:options:
_flushAllMessageData
_setOrGetBody:forMessage:updateFlags:
calculateAttachmentInfoFromBody:
_shouldChangeComponentMessageFlagsForMessage:
_shouldChangeComponentMessageFlags
headersClass
openAsynchronously
cancelOpen
storePathRelativeToAccount
isReadOnly
isDrafts
structureDidChange
deletedCount:andSize:
serverUnreadCount
serverNonDeletedCount
copyOfMessagesInRange:
copyMessagesMatchingText:
canFetchSearchResults
fetchMessagesMatchingCriterion:limit:
storeSearchResultMatchingSearchText:criterion:limit:offset:error:
remoteIDsFromUniqueRemoteIDs:
fetchMessagesWithRemoteIDs:andSetFlags:
undeleteMessages:
messagesWereDeleted:
messageForRemoteID:
messageForRemoteID:inMailbox:
uniqueRemoteIDsForMessages:
headerDataForMessage:downloadIfNecessary:
hasCachedDataForMimePart:
setFlag:state:forMessages:
setFlagsCancelled:forMessages:
updateServerUnreadCountClosingConnection:
fetchMobileSynchronously:
setPreferredEncoding:forMessage:
shouldDownloadBodyDataForMessage:
shouldDeleteInPlace
shouldArchive
archiveDestination
_rebuildTableOfContentsSynchronously
messageIdRollCall:
appendMessages:unsuccessfulOnes:
_state
_mailboxUid
_deletedMessagesSize
_deletedMessageCount
_unreadMessageCount
_generationNumber
_lastFetchCount
_openMonitor
mf_stringFromMimeRichTextString:asHTML:
initWithMimePart:htmlData:encoding:
mf_stringFromMimeEnrichedString:asHTML:
copyBodyDataToOffset:resultOffset:downloadIfNecessary:isComplete:
textEncoding
htmlContentToOffset:resultOffset:downloadIfNecessary:
mf_dataUsingEncoding:
setVisuallyEmpty:
bodyData
fileWrapperForcingDownload:
attachmentFilename
setPreferredFilename:
preferredFilename
setFilename:
configureFileWrapper:
fileWrapper
fileWrapperForDecodedObject:withFileData:
bodyParameterForKey:
setURL:
isPlaceholder
createDirectoryAtPath:withIntermediateDirectories:attributes:error:
regularFileContents
fileAttributes
isRecognizedClassForContent:
initWithMimePart:
_shouldContinueDecodingProcess
attachmentClass
decodeTextRichtext
decodeTextEnriched
decodeTextHtml
htmlContentToOffset:resultOffset:
htmlContent
decodeTextPlain
decodeTextCalendar
decodeMultipartAppledouble
storeData:inMessage:isComplete:
decodeText
messageWithRFC822Data:withParentPart:
messageURL
setMessageURL:
initWithMessageData:parentPart:
allManagers
addProvider:forBaseURL:
isGenerated
contentToOffset:resultOffset:asHTML:isComplete:
decodeMessageDelivery_status
decodeMessageRfc822
decodeMessagePartial
decodeMessageExternal_body
hasBeenDownloaded
isOnWWAN
_displayedMimePart
approximateRawSize
shouldDownloadAttachmentOnDisplay
criteriaFromDefaultsArray:removingRecognizedKeys:
initWithDictionary:andRemoveRecognizedKeysIfMutable:
initWithDictionary:
setExpression:
setQualifier:
initWithCriterion:expression:
messageRuleQualifierForString:
includeRemoteBodyContent
descriptionWithDepth:
_qualifierString
dictionaryWithCapacity:
stringForCriterionType:
stringForMessageRuleQualifier:
commaSeparatedString
uniqueHeaderKeyStringForString:
doesMessageSatisfyCriterion:
_headersRequiredForEvaluation
copyHeadersForKey:
isStructuredHeaderKey:
_evaluatePartOfStructure:
firstSender
localizedCaseInsensitiveCompare:
rangeOfString:options:range:locale:
attachments
mimePart
setWeekOfYear:
_evaluateCompoundCriterion:
_evaluateFlagCriterion:
_evaluateAddressBookCriterion:
_evaluateHeaderCriterion:
_evaluateSenderHeaderCriterion:
_evaluateAccountCriterion:
_evaluateDateCriterion:
_evaluateAddressHistoryCriterion:
_evaluateFullNameCriterion:
_evaluateIsDigitallySignedCriterion:
_evaluateIsEncryptedCriterion:
_evaluatePriorityIsNormalCriterion:
_evaluatePriorityIsHighCriterion:
_evaluatePriorityIsLowCriterion:
_evaluateAttachmentCriterion:
_evaluateConversationIDCriterion:
_evaluateMailboxCriterion:
simplifyOnce
criterionForMailbox:
notCriterionWithCriterion:
criterionForConversationID:
setUseFlaggedForUnreadCount:
_todayDateComponents
_criterionForDateReceivedBetweenDateComponents:endDateComponents:
dateFromComponents:
_criterionForDateReceivedBetween:endDate:
criterionForDateReceivedNewerThanDate:
criterionForDateReceivedOlderThanDate:
expressionForDate:
criteriaFromDefaultsArray:
defaultsArrayFromCriteria:
criterionFromDefaultsDictionary:
defaultsDictionaryFromCriterion:
_updateAddressComments:
criterionForAccount:
criterionExcludingMailboxes:
messageIsJournaledCriterion:
criterionForLibraryID:
criterionForDocumentID:
VIPSenderMessageCriterion
threadNotifyMessageCriterion
threadMuteMessageCriterion
flaggedMessageCriterion
criterionForFlagColor:
readMessageCriterion
includesMeCriterion
toMeCriterion
ccMeCriterion
hasAttachmentsCriterion
todayMessageCriterion
yesterdayMessageCriterion
lastWeekMessageCriterion
matchEverythingCriterion
matchNothingCriterion
dateFromExpression
isVIPCriterion
setExpressionLanguages:
setPreferFullTextSearch:
setIncludeRelatedMessages:
setIncludeRemoteBodyContent:
_criterionIdentifier
_qualifier
_name
_uniqueId
_expression
_criteria
_dateUnitType
_allCriteriaMustBeSatisfied
_dateIsRelative
_includeRelatedMessages
_requiredHeaders
_preferFullTextSearch
_useFlaggedForUnreadCount
_expressionIsSanitized
_includeRemoteBodyContent
_expressionLanguages
_libraryIdentifiers
stringWithCapacity:
decodeValueOfObjCType:at:
encodeValueOfObjCType:at:
encodeWithCoder:
initWithCoder:
realFlags
setDeleted:
setReplied:
setFlagColor:
setDraft:
setForwarded:
setRedirected:
setJunkLevel:
initWithBuilder:
replied
flagColor
draft
forwarded
redirected
junkLevel
changesReadTo:
changesDeletedTo:
changesRepliedTo:
changesFlaggedTo:
changesFlagColorTo:
changesForwardedTo:
changesRedirectedTo:
changesJunkLevelTo:
setReason:
readChanged
deletedChanged
repliedChanged
flaggedChanged
flagColorChanged
forwardedChanged
redirectedChanged
junkLevelChanged
reason
draftChanged
initFileURLWithPath:
duplicateMessages:newRemoteIDs:forMailbox:setFlags:createNewCacheFiles:
flagsChangedForMessages:flags:oldFlagsByMessage:
duplicateMessages:newRemoteIDs:forMailbox:setFlags:clearFlags:messageFlagsForMessages:createNewCacheFiles:
libraryExists
isBusy
lockDBForWriting
dataProvider
_attachmentDataProvider
setData:
setDataHolder:
setPartial:
setComplete:
setPartName:
_dataHolder
_complete
_partName
bundleWithIdentifier:
initWithCertificateType:trust:sender:
sender
initWithSender:signingTrust:encryptionTrust:verification:
signingCertificateTrustInfo
encryptionCertificateTrustInfo
_signingCertificateTrustInfo
_encryptionCertificateTrustInfo
_sender
senderAddressComment
setType:
setSubtype:
addSubpart:
mf_utf8HTMLStringWithString:
charset
callStackReturnAddresses
subtype
setBodyParameter:forKey:
subparts
disposition
setContentID:
setMutableHeaders:
isSubclassOfClass:
createMessageWithString:headers:
createMessageWithHtmlString:plainTextAlternative:otherHtmlStringsAndAttachments:headers:
createMessageWithHtmlString:attachments:headers:
newDataForMimePart:withPartData:
allows8BitMimeParts
setAllows8BitMimeParts:
allowsBinaryMimeParts
setAllowsBinaryMimeParts:
allowsQuotedPrintable
setWriteSizeDispositionParameter:
setMessageClassToInstantiate:
shouldWriteAttachmentPlaceholders
setShouldWriteAttachmentPlaceholders:
_messageClassToInstantiate
_allows8BitMimeParts
_allowsBinaryMimeParts
_writeSizeDispositionParameter
_allowsQuotedPrintable
_shouldWriteAttachmentPlaceholders
isLastCharacterNewLine
_rawData
_count
_lastNewLine
encodedHeaders
dataWithCapacity:
mf_makeImmutable
mutableHeaders
messageBodyIfAvailable
messageData:messageSize:isComplete:downloadIfNecessary:
messageDataHolder:messageSize:isComplete:downloadIfNecessary:
_messageBody
_messageHeaders
mf_bestMimeCharsetUsingHint:
cfStringEncoding
charsetForEncoding:
mf_bestMimeCharsetForMessageDeliveryUsingSubtype:
charsetName
stringByReplacingOccurrencesOfString:withString:
isImageFile
setDispositionParameter:forKey:
setDisposition:
isSymbolicLink
symbolicLinkDestination
isRegularFile
contentID
mimeType
setMimeType:
setPathExtension:
osType
setOsType:
metadataValueForKey:
fileName
mailDropMetadata
fetchPlaceholderData
fetchDataSynchronously:stripPrivateMetadata:
setFileName:
contentTransferEncoding
setStandardLineBreak
setAllowSlash:
setPadChar:
ef_lossyDefaultCStringBytes
setContentTransferEncoding:
isReadableText
mf_dataByConvertingUnixNewlinesToNetwork
setForTextPart:
initWithBytesNoCopy:length:freeWhenDone:
messageWriter:willGenerateHeadersForMimePart:
copyNewMimeBoundary
bodyParameterKeys
dataUsingEncoding:allowLossyConversion:
mf_appendRFC2231CompliantValue:forKey:
dispositionParameterKeys
dispositionParameterForKey:
contentDescription
languages
contentLocation
messageWriter:willEncodeHeaders:forMimePart:
insertString:atIndex:
newSignedPartWithData:sender:compositionSpecification:signatureData:
newEncryptedPartWithData:compositionSpecification:encryptedData:
mf_messageIDStringWithDomainHint:
versionString
accountClassForPersistentAccount:error:
_accountClassStringWithPersistentAccount:error:
_accountClassForString:error:
errorWithDomain:code:userInfo:
loadBundleForAccountClassString:error:
_bundlePathForAccountClassString:
bundleWithPath:
loadAndReturnError:
bundlePath
accountWithPersistentAccount:error:
accountWithAccountTypeIdentifier:error:
setPersistentStore:
_accountsStoreChanged:
accountTypeWithAccountTypeIdentifier:
initWithAccountType:
accountsWithAccountTypeIdentifiers:error:
_shouldUpdateAccountsInPlace
_accountWithPersistentAccount:useExisting:
_accountWithAccountClass:persistentAccount:useExisting:
accountType
isDirty
saveVerifiedAccount:withCompletionHandler:
removeAccount:withCompletionHandler:
_accountStoreLock
_accountStore
observableWithResult:
isSatisfied
conditionsObservable
_isValidConfiguration
setSatisfied:
subscribeWithResultBlock:
scheduler
lowPowerModeObservable
pluggedInObservable
batteryLevelObservable
wifiObservable
lockStateObservable
processInfo
mf_thermalStateObservable
combineLatest:
floatValue
requireExternalPower
minBatteryLevel
requireLowPowerModeDisabled
requireWiFi
requireScreenLocked
maxThermalPressureLevel
map:
distinctUntilChanged
doOnError:
observeOn:
alwaysSatisfiedCondition
setRequireExternalPower:
setRequireWiFi:
setRequireScreenLocked:
setRequireLowPowerModeDisabled:
setMinBatteryLevel:
setMaxThermalPressureLevel:
cancellationToken
setCancellationToken:
setScheduler:
_requireExternalPower
_requireWiFi
_requireScreenLocked
_requireLowPowerModeDisabled
_satisfied
_minBatteryLevel
_maxThermalPressureLevel
_cancellationToken
_scheduler
initWithBundleId:
observableObserver
initWithBundleIDs:states:
applicationStateForApplication:
_updateApplicationState:observer:
setHandler:
observerDidReceiveResult:
appStateObservable
isForeground
_appState
_appStateMonitor
_observable
part
isMailDrop
metadataForAttachment:forKey:
setMetadataForAttachment:toValue:forKey:
filterWithConsumer:
isDataAvailableLocally
isContainedInRFC822
fetchDataForAttachment:
fetchLocalData:stripPrivateMetadata:
isContainedInCompose
promise
discreteProgressWithTotalUnitCount:
_dataProvider
fetchDataForAttachment:consumer:progress:completion:
future
result:
readFromDisk
filterData:
fileURL
fetchCompletionBlock
finishWithResult:error:
setFetchCompletionBlock:
fetchDataSynchronouslyForAttachment:
isPlaceholderSerializedRepresentation:
placeholderFromSerializedRepresentation:
dataForPlaceholder:
setPlaceholder:
placeholder
fetchDataSynchronously:
writeData:toTemporaryFileURLWithFileName:
fetchLocalData
initRegularFileWithContents:
directUrl
rawDataForContentID:
rangedFilterWithConsumer:range:
serializedRepresentation
placeholdersAvailable
setMetadataValue:forKey:
encodedFileSize
progressWithTotalUnitCount:
setCompletedUnitCount:
fileURLWithPath:isDirectory:
contentTypeConformsToEventVCS
filterVCSData:
rangeOfData:options:range:
replaceBytesInRange:withBytes:length:
isInvalid
isExpired
isCached
icsRepresentation
eventID
_dataProviderForAttachmentURL:error:
dataProviderWithURL:
exists
messageForAttachment:
fetchMaxBytes
currentDownloadLimit
mf_stringForMimeTypeFromFileName:
conformsToType:
isVideoFile
fileNameByStrippingZipIfNeeded:
_filePathForAttachment:
_fileUTTypeForFileName:
_contentIDForAttachment:
setContentID:forAttachment:
isPDFFile
isSinglePagePDF:
_isSinglePagePDFFileFetchLocalData:
sizeOnDisk
decodedFileSize
numberWithUnsignedLong:
compressionQueue
dataWithContentsOfURL:options:error:
textEncodingGuessWithData:
fileUTType
contentTypeConformsToEventICS
initWithURL:attachmentManager:
decodeFilterWithDataConsumer:
fetchData
fetchDataToURL:
fileWrapperUsingFetchedLocalData
isMailDropPhotoArchive
setIsPlaceholder:
setMailDropMetadata:
newDownloadProgress
filterICSData:
isAvailable
isCalendarFile
setEventID:
setMeetingStorePersistentID:
setIcsRepresentation:
hasCalendarMetadata
shouldAutoDownload
inferredMimeType
isRFC822
isMediaFile
remoteImageFileName
setRemoteImageFileName:
attachmentContentTypeForFileName:
isSinglePagePDFFile
setDecodedFileSize:
setEncodedFileSize:
writeToDiskWithData:
textEncodingNameForData:mimeType:
contentTypeConformsToVCard
contentTypeConformsToEvent
contentTypeConformsToProvisionment
contentTypeConformsToMarkup
contentTypeConformsToPassbook
contentTypeConformsToIWork
setUrl:
setPart:
isAutoArchive
attachmentDataProvider
setAttachmentDataProvider:
customConsumer
setCustomConsumer:
wantsCompletionBlockOffMainThread
setWantsCompletionBlockOffMainThread:
imageDimensions
setImageDimensions:
_attachmentManager
_placeholder
_isAutoArchive
_wantsCompletionBlockOffMainThread
_url
_disposition
_fetchCompletionBlock
_customConsumer
_imageDimensions
initWithAttachment:
completeWithData:error:
attachment
downloadProgress
lastProgressBytes
setLastProgressBytes:
lastProgressTime
setLastProgressTime:
_attachment
_downloadProgress
_lastProgressBytes
_lastProgressTime
finishWithResult:
finishWithError:
capabilitiesDictionary
mailDropAvailableForAccount:
_mailDropLimit
mailDropAvailable
aa_primaryAppleAccount
_isMailDropDevice
mailDropConfigured
mailDropPreferences
currentUploadLimit
currentMessageLimit
mailDropThreshold
currentPlaceholderThreshold
attachmentCapabilities
currentUploadLimitForAccount:
mailDropExpiration
allowedMailDropDownloadDomains
attachmentDownloadQueue
addDataConsumer:
isReadableFileAtPath:
initWithCondition:
initWithMainConsumer:
completedUnitCount
totalUnitCount
_callProgressBlockForAttachmentURL:withBytes:expectedSize:
ef_observeKeyPath:options:usingBlock:
ef_connectionInterruptedError
_fetchCompletedForAttachment:error:
_fetchInvocationCallUsingBlock:
setPowerAssertionId:
_queueForAttachment:
attachmentForURL:error:
componentsWithURL:resolvingAgainstBaseURL:
setQuery:
attachmentForContentID:preferredSchemes:
_contentIDWithoutBracket:
addData:forContentID:
initWithData:forContentID:
_filenameWithExtensionForFilename:mimeType:
sharedMappings
MIMETypeForExtension:
addDataItemProvider:forContentID:
initWithAttachmentDataItemProvider:forContentID:
attachmentForCID:
attachmentForData:mimeType:fileName:contentID:context:
removeDataForAttachment:
_composeAttachmentDataProviderForContext:
recordPasteboardDataForAttachments:
recordUndoDataForAttachments:
_fetchDataForAttachment:withProvider:request:syncLock:
attachmentsForContext:
attachmentForItemProvider:mimeType:fileName:contentID:context:
loadAttachmentURL:forContextID:
updateAttachment:withNewData:
removeAttachmentForURL:
recordPasteboardAttachmentsForURLs:forContextID:
recordUndoAttachmentsForURLs:forContextID:
_defaultDownloadQueue
_composeAttachmentURLs
_composeAttachmentsQueue
attachmentsManager
clearMetadataForAttachment:
attachmentsBaseURL
removeProviderForBaseURL:
initWithContextID:
contextID
attachmentForContentID:
setHostIdentifier:forAttachment:
attachmentForHostIdentifier:
setAttachmentsBaseURL:
setAttachmentsManager:
_hostIdentifierToAttachmentContentIDMap
_contextID
_attachmentsBaseURL
_attachmentsManager
isFileURL
_isFileURL
_fileAttributes:
dataProviderWithPath:
errorWithMessage:code:
save:
setMessageLibrary:
mf_lastPartNumber
partWithNumber:
setTotalUnitCount:
initWithConsumers:expectedSize:
setProgressBlock:
dataForMimePart:inRange:withConsumer:downloadIfNecessary:
mf_rowID
messageLibrary
fetchLocalDataForAttachment:
storageLocationForAttachment:withMessage:
_messageLibrary
_messageAttachmentStorageLocationsDidChangeNotification:
partURL
attachmentForURL:withMimeBody:error:
initWithPrimaryLibrary:
attachmentsForMessage:withSchemes:
mf_isValidAttachmentURL
storagePath
mf_partNumbers
_setupAttachment:withMimeBody:error:
addChild:withPendingUnitCount:
_cancelFetchForAttachment:
setCancellationHandler:
tryLockWhenCondition:
ef_partition:
indexesOfObjectsPassingTest:
objectsAtIndexes:
supportedDocumentUTIs
removeProvider:
imageScalingQueue
attachmentsForURLs:error:
attachmentForTextAttachment:error:
_arrayAccessQueue
_providers
_attachments
_metadata
_metaDataLock
_imageScalingQueue
makeAttachmentPlaceholder:fileSize:mimeType:contentID:
securityScopeForFileURL:
startWriteAccess
cloneFileAtURL:toPlaceholderURL:
stopAccess
writeData:forURL:
fileURLString
useMailDrop
placeholderDirectory
subdataWithRange:
JSONObjectWithData:options:error:
_setJSONDictionary:
dataWithBytes:length:
_placeholderMagic
dataWithJSONObject:options:error:
dataWithData:
securityScopedURL:withToken:
futureWithResult:
completionHandlerAdapter
securityScopeForPlaceholderURL:completionBlock:
then:
writeToURL:options:error:
copyItemAtURL:toURL:error:
dataWithContentsOfURL:
setResourceValues:error:
setResourceValue:forKey:error:
removePlaceholderForFileURL:
mf_canonicalizedAbsolutePath
_localStoreURLForFileData:contentID:
setFileSize:
setFileURLString:
attachmentPlaceholderForFileURL:fileName:fileSize:type:contentID:
attachmentPlaceholderForData:fileName:type:contentID:
hasPlaceholderRepresentation:
placeholderRepresentations:
setFileProtectionForFileAt:error:
removePlaceholder:
serializedPlaceholderForFileName:fileSize:mimeType:contentID:
setUseMailDrop:
_jsonDictionary
attachmentData:fileName:mimeType:contentID:
attachmentData:fileName:mimeType:
_data
_fileName
_mimeType
_contentID
temporaryDirectory
createDirectoryAtURL:withIntermediateDirectories:attributes:error:
URLByAppendingPathComponent:isDirectory:
fileURLWithFileSystemRepresentation:isDirectory:relativeToURL:
_temporaryDirectoryUniqueURL
initFileURLWithPath:isDirectory:
placeholderAttachmentForFileName:fileSize:mimeType:contentID:completionBlock:
lazyFutureWithBlock:
temporaryFileURLWithExtension:
mimeTypeForFileName:
shouldCreatePlaceholderAttachmentForAttachmentWithSize:
securityScopedURL:
isBundle
isFileBundleURL:
archiveDirectory
enumeratorAtURL:includingPropertiesForKeys:options:errorHandler:
getResourceValue:forKey:error:
_stripBundlePath:entryPath:
initWithContents:path:
setArchiveEntry:
contents
compressContents:completion:
resultWithTimeout:error:
dataForFileBundleURL:
initWithSecurityScopedURL:withToken:
_attachSecurityScope
startAccessingSecurityScopedResource
coordinateWritingItemAtURL:options:error:byAccessor:
isWritableFileAtPath:
checkPromisedItemIsReachableAndReturnError:
_temporaryReadURL:error:
coordinateReadingItemAtURL:options:error:byAccessor:
linkItemAtURL:toURL:error:
stopAccessingSecurityScopedResource
_removeTemporaryReadURL
initWithBytesNoCopy:length:
securityScopeToken
startReadAccess
_fileCoordinator
_securityScopedURL
_securityScopeToken
_secureReadURL
_securedRead
_secureWriteURL
_securedWrite
evaluateTrust:withOptions:signerEmailAddress:
trustEvaluation
trust
certificateType
_unevaluatedTrust
_trustEvaluation
_uncommentedSender
_certificateType
initWithTrust:certificateType:sender:
certificateTrustInformationFromMFCertificateTrustInfo:
newTrustManager
trustInformation
keychainManager
addressForSaving
actionForSMIMETrust:sender:
_hasExceptionsForSMIMETrust:sender:
addSMIMETrust:sender:
removeSMIMETrust:sender:
canSaveCertificateToKeychain
certificate
saveEncryptionCertificate:forAddress:
copyEncryptionCertificateForAddress:error:
initWithTrustInformation:
hasTrustException
addTrustException
removeTrustException
saveCertificateToKeychain
removeCertificateFromKeychain
keychainStatus
_addressForSaving
_trustInformation
_keychainManager
_commonInitWithDataProvider:forContentID:
isEqualToData:
dataForContentID:
registeredTypeIdentifiers
loadDataRepresentationForTypeIdentifier:completionHandler:
_dataForAttachment:
_attachmentsData
_attachmentsPlaceholderData
_attachmentsPasteboardData
_attachmentsUndoData
mf_decodeFailedErrorWithUserInfo:
content
folderId
initWithStatusCode:error:folderID:folderName:
folderChange:finishedWithStatus:error:
statusCode
_statusCode
_folderName
mf_alwaysReportFailures
setTag:
handleResponse:error:
drainMailbox
receiveSyncActions:
commitSyncActions
actionsConsumer
initWithItemChangeType:changedItem:serverId:
serverId
originalThreadMonitor
handleSyncResponses:
setStreamConsumer:
requestType
streamingContentConsumer
streamConsumer
shouldBeginStreamingForMailMessage:format:
consumeData:length:format:mailMessage:
didEndStreamingForMailMessage:
refreshFolderHierarchyAndWait:
updateFolderListForAccountID:andDataclasses:requireChangedFolders:isUserRequested:
resultsForMailbox:newTag:actions:responses:percentComplete:moreAvailable:
resultsForMailbox:newTag:actions:responses:percentComplete:moreAvailable:sentBytesCount:receivedBytesCount:
partialResultsForMailbox:actions:responses:percentComplete:moreAvailable:
_requestPairs
_bodyData
_receivedFirstItem
_firstSyncBatch
_syncKeyResets
_serverErrors
_syncResponseConsumersByMessageId
_accountHierarchyLock
_moreAvailable
_tag
_streamConsumer
conversationId
mf_encodeBase64
rfc822Data
messageWithRFC822Data:
lastVerb
meetingRequestUUID
bodySize
valueForKeyPath:
initWithDAMailMessage:mailbox:
_rfc822CreatedMessage
_externalConversationID
_DAMailMessage
consumerFactory
dataConsumerForPart:
setAlternatePartConsumer:
alternatePartConsumer
dataConsumer
succeeded
didBeginStreaming
timeOfLastActivity
setDataConsumer:
setConsumerFactory:
requestedFormat
setRequestedFormat:
_requestedFormat
_dataConsumer
_alternatePartConsumer
_consumerFactory
_triedCreatingAlternatePartConsumer
_didBeginStreaming
_succeeded
_timeOfLastActivity
setMonitor:
initRequestForBodyFormat:withBodySizeLimit:isUserRequested:
isEqualToDate:
setLatestDateToAdd:
backedByVirtualAllSearchMailbox
mailboxSearchQueryWithSearchString:predicate:consumer:
setBodyType:
setCollectionID:
setMIMESupport:
setRange:
setTruncationSize:
setPriorToDate:
setDeepTraversal:
resetDoneCondition
searchResult
setContinueOffset:
daBasicSearchString
daSearchPredicate
_remoteIDsMatchingSearchText:predicate:limit:offset:filterByDate:handler:
initRequestWithSetFlags:unsetFlags:message:
initRequestWithMessageID:
isMostDefinitelyBase64ed
setIsGenerated:
initRequestForBodyFormat:withMessageID:withBodySizeLimit:
initRequestForBodyFormat:withFolderID:withServerID:withLongID:withBodySizeLimit:
performFetchMessageSearchResultRequests:consumer:
hasLocalCopyOfData
_fetchBodyDataForSearchResult:folderID:format:streamConsumer:
_fetchBodyDataForNormalMessage:format:part:streamConsumer:
initWithHeaderData:encoding:
setStore:
initWithActivityMonitor:
initWithAttachmentName:andMessageServerID:
initWithConsumer:expectedSize:
progressBlock
setProgressFilter:
performFetchAttachmentRequest:consumer:
fetchSucceeded
dataWasBase64
decryptedTopLevelPartForPart:
defaultAlternativeForPart:
copyBodyDataToOffset:resultOffset:downloadIfNecessary:
alternativeAtIndex:
bestAlternativeForPart:
isHTML
wantsLineEndingConversionForMIMEPart:
fetchBodyDataForRemoteID:
_downloadHeadersForMessages:
messageCanBeTriaged:
setBackedByVirtualAllSearchMailbox:
_DAFolder
_backedByVirtualAllSearchMailbox
initRequestForBodyFormat:withBodySizeLimit:
deferredOperation
consumer
format
partial
numNewMessages
itemChangeType
isDraft
readIsSet
flaggedIsSet
verbIsSet
clearRead
reflectFlagChanges:forMessages:
setRead
clearFlagged
setFlagged
setReplied
setForwarded
reflectDeletedMessages:
earlierDate:
serverID
addRemoteID:mailbox:
searchQuery:returnedResults:
searchQuery:finishedWithError:
searchQuery:returnedTotalCount:
latestDateToAdd
earliestDateAdded
doneCondition
timeReceivedLastResponse
changedItem
wantsData
_store
setHasLocalCopyOfData:
_hasLocalCopyOfData
progressFilter
consumeData:ofContentType:forAttachmentNamed:ofMessageWithServerID:
attachmentFetchCompletedWithStatus:forAttachmentNamed:ofMessageWithServerID:dataWasBase64:
attachmentFetchCompletedWithStatus:forAttachmentNamed:ofMessageWithServerID:dataWasBase64:sentBytesCount:receivedBytesCount:
_progressFilter
_accumulatedLength
_dataWasBase64
_fetchSucceeded
searchResultFetchedWithResponses:
setAddressListForSender:
setAddressListForTo:
setAddressListForCc:
setAddressListForBcc:
body
smimeType
meetingRequestMetaData
meetingRequestIsActionable
archivedDataWithRootObject:requiringSecureCoding:error:
didReflectNewMessages:
initWithMailMessage:clientID:
replyTo
clientID
setClientID:
bodyType
_clientID
initWithRequestType:message:send:
initWithMessage:mailbox:
_messageIDHeader
unionSet:
sourceID
destID
resultsForMessageMove:
initWithSourceRemoteIDs:destinationRemoteIDsBySourceRemoteIDs:failures:
_sourceRemoteIDs
_destinationRemoteIDsBySourceRemoteIDs
_failures
success
_success
_serverId
replayAction
setPhaseForResults:
setFailedItems:
destinationMessage
setMessagePersistentID:
initWithServerMessageBuilder:
setCompletedItems:
setCreatedServerMessages:
itemsToDelete
sourceRemoteID
sourceMessage
itemsToCopy
sourceMailboxURL
destinationMailboxURL
initMoveRequestWithMessage:fromFolder:toFolder:
performMoveRequests:consumer:
isRecoverableError:
fetchBodyDataForRemoteID:mailboxURL:
downloadFailed
copyItems:destinationMailboxURL:
moveItems:destinationMailboxURL:
appendItem:mailboxURL:
deleteSourceMessagesFromTransferItems:
legacyJournal
_journalForMailbox:
mergeUsingConnection:
_processJournalFile:connection:
performWithOptions:transactionError:block:
_markMailboxForReconciliation:connection:
mergeAllJournalsUsingConnection:
sortedArrayUsingFunction:context:
mailAccount
setLastKnownCapabilities:
setMailAccount:
_identifier
_lastKnownCapabilities
_mailAccount
setMimeBody:
initWithDecryptedMessage:
bytesSent
isWifi
setIsWifi:
_isWifi
_bytesSent
initWithString:charset:
ef_setDecoder:forDomain:
initWithDomain:code:userInfo:
mf_moreInfo
mf_shortDescription
recoveryAttempter
setMoreInfo:
useGenericDescription:
_moreUserInfo
ef_isCancelledError
mf_isSMIMEError
mf_shouldBeReportedToUser
mf_shouldFailDownload
displayedAccounts
orderedAccounts
autofetchAccounts
isDisplayingMultipleAccounts
receivingAddresses
setOrderedAccounts:
setDisplayedAccounts:
setAutofetchAccounts:
_mailAccounts
_orderedAccounts
_displayedAccounts
_autofetchAccounts
initWithMailboxUid:library:account:
messageWithRFC822Data:mailboxUid:library:account:
messageWithRFC822Data:mailboxUid:library:
initWithURL:rootMailboxUid:
host
setUnreadCount:forMailbox:
_nameForMailboxUid:
minID
setCachedConnection:
connectionForStore:delegate:options:failedToSelectMailbox:
flagChangesForMailboxPath:UID:connectTime:
setManaged:
_URL
_cachedConnection
_managed
initWithAccount:URLString:fullPath:isSpecial:
initWithAccount:URLString:fullPath:isSpecial:mailboxID:
setFakeURLString:
setFakeFullPath:
setFakeIsSpecialMailboxUid:
setFakeMailboxID:
fakeMailboxID
fakeURLString
fakeFullPath
fakeIsSpecialMailboxUid
initWithAccount:URLString:fullPath:
_fakeIsSpecialMailboxUid
_fakeFullPath
_fakeURLString
_fakeMailboxID
fakeHeaders
setFakeHeaders:
setHeaders:
_persistentID
_fakeHeaders
fetchMinBytes
setFetchMinBytes:
minBytesLeft
setMinBytesLeft:
_fetchMinBytes
_fetchMaxBytes
_minBytesLeft
markPurgeableWithError:
isPurgeable
setIsPurgeable:
_isPurgeable
unregisterBlocks
readerBlock
writerBlock
outputData
rangeOfCentralDirectoryInData:
_compressionArchive
_compressContents:withArchive:error:
_errorForArchiveStatus:
_compressContents:error:
setContents:
contentsOfDirectoryAtURL:includingPropertiesForKeys:options:error:
initWithDirectoryPath:
archiveEntries
isDirectory
_archiveDirectoryName:withArchive:error:
_compressContents:fileName:withArchive:error:
_compressionCompleteForArchive:error:
_compressionArchiveEntryWithName:length:isDirectory:
_decompressionArchive
_decompressArchive:intoArchiveDirectory:error:
_decompressionCompleteForArchive:error:
_decompressContents:inMemoryWithError:mainEntry:
stringWithCString:encoding:
registerBlocks:writer:
compressFolder:error:
_compressWithArchive:error:
decompressContents:completion:
inputData
setInputData:
inputRange
setInputRange:
setOutputData:
setReaderBlock:
setWriterBlock:
_inputData
_outputData
_readerBlock
_writerBlock
_inputRange
inputWithData:
_rangeOfCentralDirectory:
_centralDirectory:
_entriesFromCentralDictionary:inData:archiveData:
_centralHeader:
archiveEntryWithCentralHeader:archiveData:
_scrubContentDirectory
indexOfObjectPassingTest:
uncompressedSize
merge:
_hasZipSignature:
inputWithURL:
mainEntry
setMainEntry:
scrubbedArchiveEntries
_entries
_scrubbedEntries
_mainEntry
_contents
archiveEntry
initWithBytes:length:encoding:
setUncompressedSize:
setIsDeflated:
setCompressedRange:
compressedRange
isDeflated
compressedSize
setIsDirectory:
_isDeflated
_isDirectory
_uncompressedSize
_compressedRange
scheduleActivityIfNeeded
hasNext
nextFile
fileCompressionQueue
setFileCompressionQueue:
_fileCompressionQueueLock
_fileCompressionQueue
_registerXPCActivity
_unregisterXPCActivity
compressFilesInQueue:shouldDefer:
compressFile:error:
unregisterXPCActivity
sources
calendarItemsWithExternalIdentifier:
calendar
source
rowID
initWithMessagePersistence:
criterionForQuery:
sqlConnection
executeStatementString:error:
subpredicates
leftExpression
rightExpression
predicateOperatorType
keyPath
constantValue
initWithLibrary:accountsProvider:
numberOfUnreconciledMessages
reconcileAllObjectsWithWindow:
reconcileWithMessageReconciliationQueries:window:
reconcileWithThreadReconciliationQueries:window:
reconcileInboxMessagesWithWindow:
_hookRegistry
_accountsProvider
_transformer
initWithHookRegistry:persistence:
registerProtectedDataReconciliationHookResponder:
registerDatabaseChangeHookResponder:
messageReconciliationQueries
threadReconciliationQueries
reconcileWithThreadsWithConversationIDs:window:
persistenceWillReplaceDatabaseID:with:forTable:column:
persistenceDidReconcileProtectedData
persistenceIsInitializingDatabaseWithConnection:
persistenceDidInitializeConversationSubscriptionProvider
initWithLibrary:queryProvider:accountsProvider:
_reconciliationCleanupScheduler
_queryProvider
_messageReconciler
_threadReconciler
threadPersistence
addResultColumn:
orderByColumn:ascending:
threadScopesByDatabaseID
initWithConversationID:threadScope:
setPriorityForDisplayMessageSenderForThreadObjectID:
persistenceIsReconcilingJournaledThreadsWithObjectIDs:generationWindow:
persistenceDidFinishThreadUpdates
_threadPersistence
messageHeadersWithCommand:headersFactory:
localizedBodyForCommand:
appendString:withQuoteLevel:
originalMessageHeaders
firstRecipient
deliveryForCommand:
senderForCommand:
gmailLabelPersistence
initWithDatabase:gmailLabelPersistence:
initWithLibrary:database:
initWithDatabase:
messageForDatabaseID:
mailboxURLForDatabaseID:
mailboxDatabaseIDForURL:
labelNameForLabelID:
handledFailedCopyForMessages:
actionsToReplay
replayingActions
setNeedToCheckForNewActions:
_replayAllActions
setReplayingActions:
replayScheduler
_checkForNewActions
persistResults:forAction:
needToCheckForNewActions
messageActionPersistentID
localActionPersistence
messageActionsForAccountURL:previousActionID:
setActionsToReplay:
_replayingActions
_needToCheckForNewActions
_actionsToReplay
_replayScheduler
copyFormattedHeaderValueFromAddressList:
basicHeaders
_capitalizedKeyForKey:
appendHeaderMarkupForKey:value:toString:
localizedHeaders
localizedHeadersFromEnglishHeaders:
englishHeadersFromLocalizedHeaders:
markupString
subjectStringForDisplayForSubjectString:
mf_copyDateInCommonFormatsWithString:
_receiveLockState:
isLocked
startWith:
_token
_isLocked
initWithMailboxProvider:
mailboxProvider
legacyMailboxForObjectID:
allMailboxesScope
allMailboxObjectIDsWithMailboxTypeResolver:forExclusion:
mailboxDatabaseIDsForMailboxObjectIDs:createIfNecessary:
notIn:
mailboxesTableName
initWithMailboxProvider:database:library:
createMailbox:parentMailboxID:
moveMailbox:newParentMailboxID:
serverCountsForMailboxScope:block:
_mailboxInvalidated:
_willReloadMailboxList:
_didReloadMailboxList:
_didChangeMailboxList:
_willFetchMailboxList:
_didFetchMailboxList:
_beginDeferringInvalidation
weakToStrongObjectsMapTable
weakToWeakObjectsMapTable
transformMailboxUid:uidToMailboxMap:objectIDToUidMap:
enumerateAccountsWithBlock:
setUidToMailboxMap:
setObjectIDToUidMap:
setAllMailboxCache:
_endDeferringInvalidation
allMailboxCache
_populateCache
mailboxesFromLegacyMailboxes:
uidToMailboxMap
mailboxFromLegacyMailbox:
legacyMailboxesForObjectIDs:
objectIDToUidMap
_invalidateCache
_isDeferringInvalidation
observerScheduler
mailboxListInvalidated
allMailboxes
ef_mapSelector:
mailboxForObjectID:
mailboxObjectIDsForMailboxType:
mailboxTypeForMailboxObjectID:
allMailboxObjectIDs
fetchMailboxes
initWithAccountsProvider:
invalidateMailboxes
setAccountsProvider:
mailboxUidTransformer
setMailboxUidTransformer:
mailboxCacheQueue
setObserverScheduler:
_deferringInvalidationCount
_needsToInvalidate
_mailboxUidTransformer
_uidToMailboxMap
_objectIDToUidMap
_allMailboxCache
_mailboxCacheQueue
_observerScheduler
canContainMessages
initWithRepresentedObjectID:
setCanContainMessages:
initWithObjectID:repository:name:accountIdentifier:type:builder:
isMailbox:equalTo:uidToMailboxMap:
_defaultDownloadSessionForAttachment:
downloadTaskWithURL:
setTaskDescription:
sessionWithConfiguration:delegate:delegateQueue:
taskDescription
URLSession:didBecomeInvalidWithError:
URLSession:didReceiveChallenge:completionHandler:
URLSessionDidFinishEventsForBackgroundURLSession:
URLSession:task:willBeginDelayedRequest:completionHandler:
URLSession:taskIsWaitingForConnectivity:
URLSession:task:willPerformHTTPRedirection:newRequest:completionHandler:
URLSession:task:didReceiveChallenge:completionHandler:
URLSession:task:needNewBodyStream:
URLSession:task:didSendBodyData:totalBytesSent:totalBytesExpectedToSend:
URLSession:task:didFinishCollectingMetrics:
URLSession:task:didCompleteWithError:
URLSession:downloadTask:didFinishDownloadingToURL:
URLSession:downloadTask:didWriteData:totalBytesWritten:totalBytesExpectedToWrite:
URLSession:downloadTask:didResumeAtOffset:expectedTotalBytes:
_requests
backgroundSessionConfigurationWithIdentifier:
set_sourceApplicationBundleIdentifier:
setTimeoutIntervalForRequest:
setTimeoutIntervalForResource:
setAllowsCellularAccess:
fullResolutionStorageLocationForAttachmentWithMimePart:withMessage:
fullResolutionAttachmentURLForAttachmentURL:
fullResolutionAttachmentForAttachment:
attachmentURLs
_processAttachments
deliverSynchronouslyWithCompletion:
containerWithIdentifier:
privateCloudDatabase
ckDatabase
initWithRecordType:zoneID:
initWithFileURL:
recordID
_uploadAttachmentsViaCloudKit:zone:records:zippedPhotos:attachmentRecords:images:
scaledImages:
setAttachments:
_recordZoneIDInDatabase:completionHandler:
updateMessageWithAttachmentsSynchronously
initWithRecordIDs:
setConfiguration:
setRequestedTTL:
setFileNamesByAssetFieldNames:
downloadURL
parseURL:intoMetadata:
imageArchiveMetadata
setAssetPublishedBlock:
addOperation:
setImageArchiveMetadata:
initWithRecordsToSave:recordIDsToDelete:
setDatabase:
setQueuePriority:
values
setPerRecordProgressBlock:
setPerRecordCompletionBlock:
publishRecord:database:attachmentRecords:images:allowsCellularAccess:
join:
addSuccessBlock:
addFailureBlock:
setModifyRecordsCompletionBlock:
_mailDropZone
initWithZoneName:ownerName:
initWithZoneID:
saveRecordZone:completionHandler:
fetchRecordZoneWithID:completionHandler:
addPassword:forServiceName:accountName:keychainAccessibility:synchronizable:error:
passwordForServiceName:accountName:synchronizable:error:
mailDropState
setMailDropState:
_imageArchiveMetadata
_mailDropState
query
whitespaceCharacterSet
parseExpiration:
setExpiration:
setAutoArchive:
_domainIsAllowed:
_parseWrappedURL:intoMetadata:
_parseDirectURL:intoMetadata:
setIsInvalid:
setWrappedUrl:
_parseURLQuery:
ef_defaultAllowedCharacterSet
setDirectUrl:
setUUID:
parseHeaderValue:forField:
runWithConnection:
databaseIsAttached:
_messagesTableSchema
_recipientsTableSchema
_messageReferencesTableSchema
_conversationsTableSchema
_conversationIDMessageIDTableSchema
_spotlightMessageReindexTableSchema
columnForName:
setAsForeignKeyForTable:onDelete:onUpdate:
_mailboxesTableSchema
_propertiesTableSchema
_messageDataTableSchema
_messageDataDeletedTableSchema
_popUIDsTableSchema
_accountsTableSchema
_spotlightTombstonesTableSchema
initWithTables:
integerColumnWithName:nullable:defaultValue:
integerColumnWithName:nullable:
textColumnWithName:collation:nullable:
initWithName:rowIDType:columns:
initWithColumnName:
addIndexForColumns:
initWithColumnName:orderDirection:
initWithTableName:indexedColumns:
addUniquenessConstraintForColumns:conflictResolution:
initWithName:rowIDType:rowIDAlias:columns:
initWithName:columns:primaryKeyColumns:
blobColumnWithName:nullable:
_addressesTableSchema
_subjectsTableSchema
_summariesTableSchema
_protectedMessageDataTableSchema
connection
_initializeOldProtectedSchema
_transformSchema
_transformProtectedSchema
_createTemporaryTables
_migrateData
_dropTemporaryTables
_createIndexes
_cleanupOldSchema
definitionWithDatabaseName:includeIndexes:
protectedDatabaseName
definitionWithDatabaseName:
_migrateNonMessages
_migrateSubjects
_migrateSummaries
_migrateSendersAndRecipients
_migrateMessages
initWithBytesNoCopy:length:encoding:freeWhenDone:
prefixLengthForSubject:
columnExists:inTable:type:
indexDefinitionsWithDatabaseName:
cleanUpAfterMigrationWithConnection:
initWithSQLiteConnection:protectedDatabaseName:
performMigrationStep
setConnection:
_connection
_protectedDatabaseName
ef_SQLiteErrorWithCode:
rawAddressFromFullAddress:cacheResults:
displayNameFromAddress:cacheResults:
_messagesTableDefinition
_recreateMessagesIndices:
_triggerDefinition
_serverMessagesTableDefinition
_serverMessagesMessageIndexDefinition
_serverLabelsTableDefinition
_localMessageActionsTableDefinition
_localMessageActionsMailboxRowIDIndexDefinition
_actionMessagesTableDefinition
_actionMessagesActionIndexDefinition
_actionMessagesMessageIndexDefinition
_actionMessagesDestinationMessageIndexDefinition
_actionLabelsTableDefinition
_actionLabelsActionIndexDefinition
_actionLabelsLabelIndexDefinition
_actionFlagsTableDefinition
_actionFlagsActionIndexDefinition
_populateServerMessages
_offlineCacheOperations
translateToLocalActionWithConnection:
unarchivedObjectOfClass:fromData:error:
initWithSQLiteConnection:
supportsSecureCoding
databaseID:andMailbox:forMessageWithRemoteID:connection:
allowsKeyedCoding
decodeInt64ForKey:
decodeObjectOfClass:forKey:
encodeInt64:forKey:
encodeObject:forKey:
_onFlags
_offFlags
decodeObjectOfClasses:forKey:
_originalFlags
_temporaryRemoteIDs
_sourceMailboxID
_destinationMailboxID
initWithMessageIDHeader:mailbox:
_parentFolderID
_temporaryFolderID
initWithFolderID:newParentFolderID:newDisplayName:
_newParentFolderID
_newDisplayName
_renameMailboxDataFolders:
moveItemAtPath:toPath:error:
_renameMailboxURLsForMailAccount:inSQLiteDB:
_purgeFoldersMatchingPatterns:
_updateMailboxURLsInSQLitedb:withOldURLToNewURLMap:
regularExpressionWithPattern:options:error:
numberOfMatchesInString:options:range:
sqliteConnection
setSqliteConnection:
_sqliteConnection
migrationState
_runMigrationStepsFromVersion:connection:schema:
indexGreaterThanOrEqualToIndex:
attachProtectedDatabaseWithConnection:
detachProtectedDatabaseWithConnection:
addPostMigrationBlock:
noteNeedsSpotlightReindex
mailMessageLibraryMigrator:isInitializingDatabaseWithConnection:
noteRebuildMessageInfoIndex
noteNeedsRebuildTriggers
resetTTRPromptAndForceReindex
_checkForeignKeysWithConnection:
needsRebuildTriggers
needsRebuildMessageInfoIndex
runPostMigrationBlocksWithConnection:
needsSpotlightReindex
mailMessageLibraryMigratorScheduleSpotlightReindex:
_checkContentProtectionState
contentProtectionQueue
mailMessageLibraryMigrator:attachProtectedDatabaseWithName:connection:error:
mailMessageLibraryMigrator:detachProtectedDatabaseWithConnection:
currentVersion
initWithDelegate:
migrateWithDatabaseConnection:schema:
_needsSpotlightReindex
_needsRebuildTriggers
_needsRebuildMessageInfoIndex
_postMigrationBlocks
_contentProtectionQueue
_migrationState
initWithContentsOfFile:encoding:error:
propertiesToMigrate
migrateDefaults:
initWithTableName:columnNames:
initWithTableName:columnNames:where:unique:
initWithName:tableName:indexedColumns:where:unique:
messagesTableStubSchema
mailboxesTableStubSchema
serverMessagesTableSchema
serverLabelsTableSchema
localMessageActionsTableSchema
actionMessagesTableSchema
actionLabelsTableSchema
actionFlagsTableSchema
tableForName:
messageObjectIDCriterionExpressionForPredicateValue:
criterionConverter
messageCriterionFromPredicate:
sortDescriptors
ascending
messageCriterionConverter:predicateKeysForCriterionType:
messageCriterionConverter:willUsePredicateOperatorType:forKey:
messageCriterionConverter:criterionTypeForKey:
messageCriterionConverter:expressionForConstantValue:withCriterionType:
mailAccountForIdentifier:
optionsForQuery:
setCriterionConverter:
_criterionConverter
_messagePersistence
_threadsTableSchemaWithMessagesTable:conversationsTable:threadScopesTable:
initWithName:columns:primaryKeyColumns:conflictResolution:
threadSendersTableSchema
threadRecipientsTableSchema
_schemaWithThreadsTable:
mailboxToRemoteIdDictionary
enumerateMailboxesAndRemoteIDsUsingBlock:
continueOffset
setMailboxToRemoteIdDictionary:
_continueOffset
_mailboxToRemoteIdDictionary
initWithCountLimit:
backgroundMigrationScheduler
mailboxesToCheck
_mailboxHasUnmigratedFiles:
_migrateAllFilesForMailbox:
_migrateDataFilesForMessage:
_filesForMessage:
moveItemAtURL:toURL:error:
legacyAttachmentDirectoryForMessage:
_directoryContentsForPath:
directoryContentCache
setDirectoryContentCache:
setBackgroundMigrationScheduler:
setMailboxesToCheck:
_upgradeLock
_directoryContentCache
_backgroundMigrationScheduler
_mailboxesToCheck
initWithDatabase:localActionPersistence:messagePersistence:serverMessagePersistenceFactory:hookResponder:
copyMessages:destinationMailboxURL:userInitiated:
mailboxURLIsInRemoteAccount:
mailboxURL:isInSameAccountAsMailboxURL:
ef_objectsPassingTest:
messagesForPersistedMessages:mailboxScope:
identifierKey
incomingKey
subjectKey
senderAddress
senderKey
toList
ccList
bccList
ef_uniquifyWithComparator:
recipientsKey
representedObjectID
accountIdentifierKey
keyPathForRecentEmails
userContext
isGmailAccount
accountForMailboxURL:
messagesForRemoteIDs:mailboxURL:
iterateMessagesInMailboxURLs:excludingMessages:batchSize:returnMessagesForFlagChange:handler:
persistNewMessages:mailboxURL:oldMessagesByNewMessage:fromSyncing:
deletePersistedMessages:
haveCompleteMIMEForMessage:
applyFlagChange:toMessagesInDatabase:
resetStatusCountsForMailboxWithURL:
addLabels:removeLabels:toMessagesInDatabase:
setRemoteID:onMessageWithDatabaseID:
setData:onMessage:
checkForNewActionsInMailboxID:
actionHasChangedAccount:
displayErrorForTransferAction:withResults:
messageWasAppended:
mailboxIsAllMail:
mailboxPartOfAllMail:
initWithLibrary:database:localActionPersistence:messagePersistence:serverMessagePersistenceFactory:hookResponder:
messagesToJournalForMessages:inMailbox:
initWithComparator:
messagesCount
firstMessage
lastMessage
countWithDuplicates
uniqueMessageInfos
allMessageInfos
messageCollectionHash
addMessageInfo:
indexOfMessageInfo:
removeMessageInfo:
indexWhereMessageInfoWouldBeInserted:
messageInfoAtIndex:
messageInfoEquivalentToMessageInfo:
duplicatesOfMessageInfo:
stateForMessages:
duplicatePreferenceComparator
setDuplicatePreferenceComparator:
initWithHash:comparator:
messageCountWithDuplicates
visibleMessageInfo
mergeWithCollection:
state
_messageInfoSet
_messageCollectionHash
contentURL
setContentURL:
relatedContentItems
setRelatedContentItems:
cleanupInvocable
setCleanupInvocable:
publicMessageURL
setPublicMessageURL:
_contentURL
_relatedContentItems
_cleanupInvocable
_publicMessageURL
cachedMetadataJSONForKey:messageID:
setCachedMetadataJSON:forKey:messageID:
isMessageKnownToHaveNoMailDropAttachment:
setIsMailDropAttachmentPresent:forMessage:
onScheduler:requestID:requestContentForObjectID:messagePersistence:legacyMessage:messageTransformer:mailDropAttachmentGenerator:listUnsubscribeHandler:clientIdentifier:options:delegate:completionHandler:
_init
initWithScheduler:requestID:messagePersistence:
beginRequestWithCompletionHandler:
synchronousRemoteObjectProxyWithErrorHandler:
options
requestedRepresentation
requestRawRepresentationWithCompletionHandler:
requestHTMLRepresentationWithCompletionHandler:
legacyMessage
isCanceled
_dataHolderWithCancelationToken:
clientIdentifier
initWithData:clientIdentifier:preferredFilename:extension:relatedItems:securityInformation:
setTransportType:
copyAddressListForReplyTo
setReplyToList:
performCancelableBlock:
networkUsage
contentObservable
skip:
firstResultObserverAdapter
subscribe:
futureWithError:
_contentRepresentationForLoadingEvent:existingRepresentation:
initWithMessage:attachmentManager:
_generateRepresentationForLoadingContext:existingRepresentation:completion:
load:scheduler:shouldDownload:
recover:
context
attachmentManager
_contentItemForAttachment:manager:managed:
preferredCharacterSet
delegateWithErrorHandler:
contentObjectID:generateHTMLSnippetsForRelatedContentItems:completionHandler:
em_unknownError
loadedBody
hasLoadedBestAlternativePart
hasLoadedCompleteBody
contentObjectID:placeholderHTMLForEmptyContentWithCompletionHandler:
temporaryURLWithData:clientIdentifier:preferredFilename:pathExtension:cleanupInvocable:error:
_processContentLoadingContextEvent:
mailDropAttachmentGenerator
ef_isTimeoutError
_attachmentContentItemsForMailDropNodes:withContext:
insertMailDropAttachmentViewForContentURL:HTMLByContentID:completionHandler:
contentObjectID:generateHTMLSnippetsForMailDropContentItems:completionHandler:
generateMailDropMetadataForContentURL:completionHandler:
_contentRepresentationForEvent:contentURL:relatedItems:existingRepresentation:invocable:
securityInformationFromMFMessageLoadingContextEvent:
initWithContentURL:relatedItems:securityInformation:
addInvalidationHandler:
_includeSuggestionItemsIfNeededForRepresentation:message:
_includeHeadersIfNeededForRepresentation:message:options:
setHasMoreContent:
remainingBytes
setRemainingByteCount:
replaceItemAtURL:withItemAtURL:backupItemName:options:resultingItemURL:error:
mergeUpdatedRepresentation:
requestMoreContentBlock
setRequestMoreContentBlock:
unsubscribeCommand
listUnsubscribeHandler
unsubscribeWithCommand:completion:
ignoreWithCommand:completion:
setListUnsubscribeBlock:
includeSuggestionItems
suggestionsSearchableItemWithMessage:
setSearchableItem:
commandForMessage:
setUnsubscribeCommand:
requestedHeaderKeys
requestAllHeaders
allHeaderKeys
initWithHeaders:
setRequestedHeaders:
messageTransformer
mailboxScope
onScheduler:requestContentForObjectID:messagePersistence:legacyMessage:messageTransformer:mailDropAttachmentGenerator:listUnsubscribeHandler:clientIdentifier:options:delegate:completionHandler:
transformLegacyMailMessage:mailboxScope:loaderBlock:
initWithMessageData:parentPart:managed:
_messageForLegacyMessage:
initWithContentMessage:data:clientIdentifier:preferredFilename:extension:
setUTType:
setIsAvailableLocally:
setDataTransferByteCount:
setStorageByteCount:
UTType
ef_conformsToUTType:
setExchangeEventUID:
setAvailableRepresentations:
exchangeEventUID
setLoaderBlock:
_requestContentForAttachment:manager:options:managed:completion:
_maildropMetadataFromContext:
metadataWithDictionary:
_attachmentForMailDropMetaData:context:
_objectID
_legacyMessage
_messageTransformer
_clientIdentifier
_options
_mailDropAttachmentGenerator
_listUnsubscribeHandler
performBlockWithActivity:requestID:
performDatabaseWorkInBlockWithHighPriority:
performSyncBarrierBlock:
performVoucherPreservingBlock:
onScheduler:performWithObject:
performWithObject:
initWithScheduler:messagePersistence:
setMessagePersistence:
_requestID
_shouldConvertEqualsToContainsForKey:
predicateFromMessageCriterion:
compoundPredicateType
initWithType:subpredicates:
expressionForConstantValue:
_proposedPredicateOperatorType:forKey:
predicateWithLeftExpression:rightExpression:modifier:type:options:
_predicateForKey:value:qualifier:
_simplifiedCompoundPredicateOfType:forSubqueries:
_defaultKeysForCriterionType:
_predicateKeysForCriterion:
_searchPredicateForCriterion:
_orPredicateForAttributes:matchingValue:qualifier:
notPredicateWithSubpredicate:
spotlightRecipientSearchPredicateForValue:operator:
spotlightSenderSearchPredicateForValue:operator:
spotlightSubjectSearchPredicateForValue:operator:
spotlightBodySearchPredicateForValue:
orPredicateWithSubpredicates:
expressionForKeyPath:
_defaultCriterionTypeForKey:
expressionType
_criterionTypeForKey:
_criterionTypeFromExpression:
ef_matchesEverything
ef_matchesNothing
_messageCriterionForCompoundPredicate:
_messageCriterionForComparisonPredicate:
predicateWithFormat:
spotlightSearchPredicateForValue:
messageCriterionFromPredicateFormatString:
isVIP
uidIsLibraryID
_flagDescription
newGenerationNumber
generationCompare:
sortUid
setSortUid:
sortDateReceivedInterval
setSortDateReceivedInterval:
_flagged
_read
_deleted
_uidIsLibraryID
_hasAttachments
_isVIP
_isHighPriority
_dateSentInterval
_dateReceivedInterval
_sortDateReceivedInterval
_conversationHash
_sortUid
_invalidate
comparator
ef_insertObject:usingComparator:allowDuplicates:
setObject:atIndexedSubscript:
_addMessageInfoToDuplicates:
_removeDuplicatesForMessageInfo:
ef_removeObject:usingComparator:
_scanForMessageInfoSimilarTo:
removeMessageInfoAtIndex:
enumerateIndexesWithOptions:usingBlock:
ef_indexOfObject:usingComparator:
ef_indexWhereObjectWouldBeInserted:usingComparator:
ef_objectSameAs:usingComparator:
_duplicateMessageInfosForMessageInfo:
enumerateObjectsWithOptions:usingBlock:
removeMessageInfosAtIndexes:
removeAllMessageInfos
replaceMessageInfo:withReplacement:inPlace:
allDuplicatesOfMessageInfo:
enumerateUniqueMessageInfosWithOptions:usingBlock:
_knownMessageIDs
_mutableMessageInfos
_duplicateMessageInfos
_comparator
_duplicatePreferenceComparator
SMIMEError
smimeError
_descriptionForDebugging:
setContext:
setContent:
setHasLoadedCompleteBody:
setHasLoadedBestAlternativePart:
setRemainingBytes:
loadedPart
setLoadedPart:
setLoadedBody:
_hasLoadedCompleteBody
_hasLoadedBestAlternativePart
_context
_content
_remainingBytes
_loadedPart
_loadedBody
_setupMeetingData
_setupObservableStreams
calendarItemExternalIdentifier
title
replay:
assignAttachmentManagerToContent:
processMeetingInvitations:
filter:
connect
observerWithResultBlock:completionBlock:failureBlock:
immediateScheduler
onScheduler:addLoadObserver:
load:scheduler:
setHasLoadedSomeContent:
_load:shouldDownload:
_reallyLoad:shouldDownload:
addCancelationBlock:
_setMessageBody:
contentOffset
totalTextSize
_nextOffsetForOffset:totalLength:requestedAmount:
defaultAlternativeInPart:
setContentOffset:
rfc822DecodedMessageBody
numberOfAttachmentsSigned:encrypted:
setNumberOfAttachments:isSigned:isEncrypted:
setHasLoadedCompleteMessage:
setAttachmentManager:
addLoadObserver:
load:
_setMessage:
_setAttachmentManager:
hasLoadedSomeContent
hasLoadedCompleteMessage
isOutgoingMessage
isDraftMessage
isEditableMessage
_cancelable
_inputObservable
_eventUniqueID
_meetingName
_meetingStorePersistentID
_eventICSRepresentation
_hasLoadedSomeContent
_hasLoadedCompleteMessage
_outgoingMessage
_draftMessage
_editableMessage
_contentObservable
_contentOffset
copySigners
messageSignerFromMFMessageSigner:
hasEncryptedDescendantPart
initWithSigners:isEncrypted:hasEncryptedDescendantPart:smimeError:
initWithMailboxPersistence:database:
userProfileProvider
blockedSenderManager
initWithMailboxProvider:userProfileProvider:blockedSenderManager:
queryTransformer
_countOfMessagesMatchingCriteria:includingDuplicates:
initWithMessagePersistence:query:batchSize:firstBatchSize:limit:handler:
_iterateMessagesMatchingQuery:options:cancelationToken:resultHandler:monitor:
initWithHandler:
queryWithExpandedMailboxesFromQuery:
queryOptions
initWithMessagePersistence:query:
messageSet
removeAllCancelationBlocks
libraryMessageTransformer
transformLegacyMailMessages:mailboxScope:
libraryMessageForMessageObjectID:
em_itemNotFoundError
currentConnection
processIdentifier
isCancelled
requestSummaryQueue
summaryLoaderProvider
messageSummaryLoaderForMessage:
requestSummaryImmediatelyFromDownloadedMessage:
securityInformation
hasMoreContent
networkContentLoadScheduler
setNetworkUsage:
copyWithBuilder:
offlineContentLoadScheduler
_requestSummaryForLibraryMessage:
requestSummary
persistedMessagesForMessageObjectIDs:requireProtectedData:temporarilyUnavailableMessageObjectIDs:
cachedObjectForKey:
join:sourceColumn:targetColumn:
table:column:
noMailboxesScope
initWithMailboxPersistence:database:hookRegistry:library:
countOfMessagesWithGlobalMessageID:matchingQuery:
countOfMessagesMatchingQuery:
iterateMessagesMatchingQuery:batchSize:firstBatchSize:limit:cancelationToken:handler:
iteratePersistedMessagesMatchingQuery:limit:cancelationToken:handler:
persistedMessagesForDatabaseIDs:requireProtectedData:temporarilyUnavailableDatabaseIDs:
persistedMessageForOutgoingMessage:isDraft:
requestContentForMessageObjectID:requestID:options:delegate:completionHandler:
requestSummaryForMessageObjectID:
cachedDatabaseIDsDictionaryForGlobalMessageIDs:
globalIDForMessageWithDatabaseID:mailboxScope:
setSummaryLoaderProvider:
setQueryTransformer:
setLibraryMessageTransformer:
setNetworkContentLoadScheduler:
setOfflineContentLoadScheduler:
setRequestSummaryQueue:
_summaryLock
_summaryLoaders
_obsoleteGlobalMessageIDToDatabaseIDMap
_summaryLoaderProvider
_queryTransformer
_libraryMessageTransformer
_networkContentLoadScheduler
_offlineContentLoadScheduler
_requestSummaryQueue
addPersistedMessage:
setMessageSet:
_messageSet
handler
_handler
senderList
participants
_senderList
_toList
_ccList
_bccList
_subject
_messageIDsBySubject
_conversationIDHash
_conversationFlagsRef
initWithSigningTrust:encryptionTrust:
dates
ef_notEmpty
combinedFlagsForMessageListItemFlags:forDisplay:
laterDate:
ef_reduce:
addMessage:
combinedMailboxes
combinedMessageFlags
combinedDate
setMailboxProvider:
setMailboxes:
setDates:
_mailboxProvider
_dates
_transformLegacyMailMessage:mailboxScope:duplicateInfo:loaderBlock:
scopeContainsMailbox:
setDate:
isEmailAddressBlocked:
setIsBlocked:
setHasAttachments:
conversationNotificationLevelForConversationFlags:
setConversationNotificationLevel:
set_internalID:
isMyEmailAddressContainedInAddressList:
setIsToMe:
setIsCCMe:
initWithObjectID:builder:
_userProfileProvider
_blockedSenderManager
initWithBasePath:hookRegistry:
initWithBasePath:databaseName:maxConcurrentReaders:schema:protectedSchema:propertyMapper:protectedDatabasePersistence:
migrateDatabaseAtPath:
addNetworkObserverBlock:queue:
initWithObjects:count:
_checkKeys:forStore:
initWithQueue:
_inititializeWifiManager
_setupSymptons
getSubscriptionInfoWithError:
subscriptions
userDataPreferred
getDataStatus:error:
_setDataStatus_nts:
setDelegate:queue:
_updateActiveCalls
indicator
roamAllowed
attached
_initializeDataStatus
_isNetworkUp_nts
dataStatus
_simulationOverrideForType:actualValue:
isNetworkUp
dataIndicator
execute
_networkAssertionWithIdentifier:
initWithBundleType:
copyCarrierBundleValue:key:bundleType:error:
initWithBlock:queue:
removeNetworkObserver:
observableWithBlock:
networkObservable
_updateWifiClientType
_carrierBundleDidChange
slotID
calls
hasEnded
setReachabilityFlags:
setDnsEnabled:
setWifiEnabled:
setCellData:
setDataIndicator:
setRoamingAllowed:
setNumActiveCalls:
setNumBackgroundWifiClients:
networkAssertionWithIdentifier:
airplaneModeChanged
callObserver:callChanged:
isDataAvailable
hasAlternateAdvice
_setFlags:forReachability:
_handleWiFiNotification:
addBackgroundWifiClient:
removeBackgroundWifiClient:
connectionActivationError:connection:error:
preferredDataSimChanged:
dataStatus:dataStatusInfo:
simStatusDidChange:status:
awdNetworkDiagnosticReport
_observers
_dns
_activeCalls
_backgroundWifiClients
_wiFiPreferences
_hasCellDataCapability
_hasWiFiCapability
_isWiFiEnabled
_isRoamingAllowed
_alternateAdviceState
_radiosPreferences
_prefsQueue
_symptomsToken
_ctc
_dataStatusQueue
_cellularDataAvailable
_stateCancelable
_reachability
_store_source
_callObserver
_dataIndicator
setPlaceholders:
libraryContent
richtextContent
multipartContent
placeholders
_placeholders
setLibraryMessage:
setPlaintextAlternative:
setMixedContent:
textPartsAreHTML
setTextPartsAreHTML:
plaintextAlternative
mixedContent
_plaintextAlternative
setHtmlBody:
htmlBody
_htmlBody
_currentDeliveryObject
sharedAggregateDictionary
pushValue:forKey:
_deliverSynchronouslyWithCurrentSettings:
notifyUserDeliverySucceeded:
_deliveryAccountForInitializers
attachmentContext
setAttachmentContext:
originalConversationId
setOriginalConversationId:
_otherHTMLAndAttachments
_attachmentContext
_originalConversationId
initWithDatabase:hookRegistry:
_configureSearchableIndexManagerIfNecessary
serverMessagePersistenceFactory
initWithMessagePersistence:database:hookRegistry:vipManager:blockedSenderManager:
canUseSpotlightIndex
initWithDatabase:hookResponder:
setUpWithMailboxProvider:remoteSearchProvider:
conversationPersistence
setMailboxPersistence:
remoteSearchProvider
setUserProfileProvider:
setListUnsubscribeHandler:
_conversationPersistence
_localActionPersistence
_mailboxPersistence
_messageChangeManager
_remoteSearchProvider
_searchableIndexManager
_serverMessagePersistenceFactory
checkOutConnectionIsWriter:
checkInConnection:
basePath
databaseName
initWithBasePath:databaseName:isWriter:delegate:
open
migrationLock
migrationHasRun
_migrateWithDatabaseConnection:migrator:
setMigrationHasRun:
createdTempTable
setCreatedTempTable:
postMigrationSteps
databaseMigrationCompleted:
fileProtectionForDatabaseType:
protectedDatabasePath
urlForDatabasePath:type:fileProtection:
attachProtectedDatabaseWithName:url:error:
detachProtectedDatabase
urlForDatabasePath:type:
setFileProtection:forDatabaseAtURL:error:
enforceDataProtection
setPostMigrationSteps:
_migrationHasRun
_createdTempTable
_migrationLock
_postMigrationSteps
configureSQLConnection
_handleCorruptDatabase
_handleFullDatabase
_handleProtectedDataIOError
_handleInvalidDatabaseIOError
_handleDetachedDatabaseIOError
_handleIOError
_handleBusyError
_logFileSystemStats
attributesOfFileSystemForPath:error:
transactionTypeForWriting
_ICUSearchContext
_CPSearchContext
_messagesTableSchemaAndForeignKeysToResolve:associationsToResolve:
recipientsTableSchemaAndForeignKeysToResolve:associationsToResolve:
attachmentsTableSchemaAndForeignKeysToResolve:
messageGlobalDataTableSchema
mailboxesTableSchema
messageDataTableSchema
messageDataDeletedTableSchema
popUIDsTableSchema
accountsTableSchema
propertiesTableSchema
partialMessagesTableSchemaAndForeignKeysToResolve:associationsToResolve:
removeColumn:
addColumn:
partialMailboxesTableSchema
additionalSchemaProviders
tablesAndForeignKeysToResolve:associationsToResolve:
_applicationForegroundStateChanged:
observerWithResultBlock:
_releasePowerAssertion_nts
_retainPowerAssertion_nts
_lowPowerModeChangedNotification:
isLowPowerModeEnabled
_assertionTimeout
assertionDidExpire
_setupAssertionTimer:
_retainTaskAssertion_nts
retainAssertionWithIdentifier:
_releaseTaskAssertion_nts
_applicationForegroundStateChanged_nts:
observableOnDefaultNotificationCenterWithName:object:
powerObservable
batteryLevelStateChangeNotificationObservable
batteryLevel
countForObject:
powerlog:eventData:
_setPluggedIn:
isHoldingAssertion
_isHoldingTaskAssertion
startListeningForBatterySaverNotifications
_powerQueue
_pluggedIn
_powerToken
_batteryNotificationToken
_identifiers
_appStateCancelable
_isForeground
_batteryLevel
finishJournalReconciliation:
addAdditionalCriteriaToCleanupActivity:
journalDatabaseName
supportsJournaling
sendRequests:
_processRequests:
processRequest:
addRequests:
addRequest:
requestPairs
setRequestPairs:
messageWithRFC822Data:withParentPart:generateMessageIDHash:
initWithMessage:parentPart:
bodyForMessage:fetchIfNotAvailable:updateFlags:
initWithMessage:parentPart:managed:
_parentPart
initWithName:dataSource:reasonProvider:
initWithMessage:bodyData:fetchBody:
setIndexingType:
isIncrementalIndexingType:
indexItems:immediately:
_indexMessage:includeBody:indexingType:
indexMessages:includeBody:indexingType:
canIndexAttachments
logPowerEventWithIdentifier:eventData:
shouldCancelSearchQuery
addSearchQueryCancelable:
removeSearchQueryCancelable:
searchableIndexItemWithIdentifier:message:type:
searchableItem
itemWithIdentifier:message:bodyData:fetchBody:
shouldExcludeFromIndex
setNeedsAllAttributesIndexingType
setAttachmentTypes:
setAttachmentNames:
setAttachmentPaths:
indexingType
nullFuture
_shouldAutoDownloadAttachment:
searchableIndexItemsFromMessages:type:
preprocess
addAttachmentAttributesToAttributeSet:
fetchIndexableAttachments
defaultConfiguration
enableIndexingAndBeginScheduling:budgetConfiguration:
setIndex:
setSearchableIndexBundleID:
initWithSchedulable:budgetConfiguration:
setSchedulableDelegate:
dataSourceRefreshReasons
purgeReasons
exclusionReasons
currentReasons
setPersistence:
_indexLock
setTransactionID:
setDateReceived:
rawAddressFromFullAddress:
setToEmailAddresses:
_verificationDataFromMessage:messageIDTransactionIDDictionary:
additionalFilterClause
messagesWhere:sortedBy:limit:
attachmentItemMetadataForAttachmentID:messagePersistentID:name:mailboxID:result:
verificationDataSamplesFromMessageIDTransactionIDDictionary:
initWithSendingAccount:signingPolicy:encryptionPolicy:
_updateSigningStatus_nts
_updateEncryptionStatus_nts
_notifyDelegateEncryptionStatusDidChange:certsByRecipient:errorsByRecipient:identity:error:
_determineEncryptionStatusWithNewRecipients:
_notifyDelegateSigningStatusDidChange:identity:error:
_determineIdentitiesWithSendingAddress:forSigning:encryption:
_determineSigningStatusWithSendingAddress:
_determineEncryptionStatusWithSendingAddress:
copySigningIdentityForAccount:sendingAddress:error:
copyEncryptionIdentityForAccount:sendingAddress:error:
_nts_setSigningIdentity:error:
_nts_setEncryptionIdentity:error:
evaluateTrustForSigningCertificate:sendingAddress:
_nts_copySigningIdentity:error:
_determineTrustStatusForSigningIdentity:sendingAddress:
secureMIMECompositionManager:signingStatusDidChange:context:
_nts_copyEncryptionIdentity:error:certificatesByRecipient:errorsByRecipient:
copyEncryptionCertificatesForAccount:recipientAddresses:errorsByAddress:
secureMIMECompositionManager:encryptionStatusDidChange:context:
_shouldAllowSend_nts
_shouldSign_nts
_shouldEncrypt_nts
copySMIMESigningPolicyForAddress:
trustResult
initWithSigningPolicy:encryptionPolicy:
addRecipients:
removeRecipients:
setSendingAddress:
sendingAddress
sendingAccount
signingPolicy
encryptionPolicy
signingStatus
encryptionStatus
recipients
shouldAllowSend
_sendingAccount
_sendingAddress
_signingIdentity
_signingIdentityError
_encryptionIdentity
_encryptionIdentityError
_recipients
_errorsByRecipient
_certificatesByRecipient
_signingPolicy
_encryptionPolicy
_signingStatus
_encryptionStatus
_encryptionStatusSemaphore
_signingStatusSemaphore
_invalidated
dateWithTimeIntervalSinceReferenceDate:
setDateStyle:
setTimeStyle:
stringFromDate:
mailboxIDForMailboxURL:useNumericSearch:supportsLabels:
_modelSpecificLocalizedStringKeyForKey:
_getValue:
defaultSignature
signature
signatureForAccount:
useAccountSignatures
plainTextFromHTMLSnippet:
setSignature:forAccount:
signatureForSendingEmailAddress:
signatureMarkupFormat:
signaturePlainTextFormat:
setSignature:
clearSignature
setUseAccountSignatures:
setSignature:forEmailAddress:
signatureMarkupForSendingEmailAddress:
signaturePlainTextForSendingEmailAddress:
_hasParameter:forKeyword:
_supportsSaveSentExtension
_supportsExtension:
usesBase64EncodeResponseData
justSentPlainTextPassword
_sendCommand:length:argument:trailer:
_getReply
lastResponseLine
mf_decodeBase64
errorForResponse:
_connectUsingAccount:
_doHandshakeUsingAccount:
numberOfNewlinesNeedingConversion:
setTimeout:
_sendData:progressHandler:
enumerateConvertingNewlinesUsingBlock:
_trailerForMailFromWithEmailAddressFormatStyle:
_dataForCommand:length:argument:trailer:
supportsChunking
initWithStyle:
stringFromEmailAddressConvertible:
supportsPipelining
dataForMailFrom:emailFormatStyle:
dataForRcptTo:
dataForDataCmd
_sendData:
errorMessageWithAddress:defaultMessage:
failureReason
sendBData:
sendData:
mailFrom:emailFormatStyle:
rcptTo:
_setLastResponse:
_sendBytes:length:progressHandler:
precomposedStringWithCanonicalMapping
_readResponseRange:isContinuation:
setLastResponseLine:
setContinuationResponses:
initWithPattern:options:error:
firstMatchInString:options:range:
numberOfRanges
rangeAtIndex:
timeout
isWritable
lastResponse
domainName
setDomainName:
supportsSMTPUTF8
supportsEnhancedStatusCodes
noop
abort
mailFrom:recipients:withData:host:emailFormatStyle:errorTitle:errorMessage:serverResponse:displayError:errorCode:errorUserInfo:
timeLastCommandWasSent
setUseSaveSent:toFolder:
_lastResponse
_serviceExtensions
_mdata
_domainName
_saveSentMbox
_originalSocketTimeout
_lastCommandTimestamp
_hideLoggedData
_useSaveSent
_dislikesSaveSentMbox
initWithPID:flags:reason:name:withHandler:
initWithName:expiration:preventIdleSleep:
cancelTimer
valid
initWithName:preventIdleSleep:
_transaction
_assertion
_timer
isEqualToSubjectIgnoringPrefix:
intersectsSet:
intersectSet:
addProbeWithConnection:
applicationProxyForIdentifier:
dataContainerURL
oldKeysToNewKeysMap
migrateDefaultsFromOldKeysToNewKeys:
_keysToMigrateToSharedAppGroup
_migrateExtPropertiesPlist
currentDeviceIdentifer
migratePropertyForOldKey:newKey:
mobileMailDefaultForKey:
removeMobileMailDefaultForKey:
migratePreferencesToSharedAppGroup
objectForKey:shouldGenerate:wasCached:
setKey:
cache
setCache:
_cache
weakObjectCacheRefForKey:
_dictionary
currentFont
parenSet
parseParameterString:
initWithFloat:
nowWouldBeAGoodTimeToAppendToTheAttributedString
handleNoParameterCommand:
setupFontStackEntry:
mismatchError:
scannerWithString:
scanHexInt:
scanString:intoString:
punctuationSet
appendNewLine:
resetStateWithString:outputString:
readTokenInto:
beginCommand:
endCommand:
appendStringToBuffer:
closeUpQuoting
setWantsHTML:
convertRichTextString:intoOutputString:
convertEnrichedString:intoOutputString:
_inputBuffer
_currentIndex
_inputLength
_noFillLevel
_eatOneNewline
_insideComment
_wantsPlainText
_lastQuoteLevel
_commandStack
_outputBuffer
_prependHTML
_postpendHTML
_indentWidth
methodSignatureForSelector:
invocationWithMethodSignature:
setSelector:
setTarget:
methodSignature
numberOfArguments
setArgument:atIndex:
mf_invocationWithSelector:target:object1:object2:
setPriority:
addObserverForName:object:queue:usingBlock:
removeObserver:
invocationWithSelector:target:object1:object2:taskName:priority:canBeCancelled:
setShouldLogInvocation:
powerAssertionId
_shouldLogInvocation
_powerAssertionId
mf_waitForLock
_passwordForHost:username:port:keychainProtocol:
_passwordForGenericAccount:service:error:
passwordForServiceName:accountName:error:
_matchSSLClientIdentity:withHostname:
validateSigningIdentity:forAddress:error:
_copyAllIdentitiesWithError:usingBlock:
validateEncryptionIdentity:forAddress:error:
_validateIdentity:forAddress:policy:usage:error:
copySMIMEEncryptionPolicyForAddress:
initWithObjects:forKeys:count:
_copyCertificateForPersistent:error:
_removeCertificateForPersistent:
_addCertificate:persistent:
_addPersistentMapping:forAddress:
passwordForHost:username:port:keychainProtocol:
setPassword:forHost:username:port:keychainProtocol:keychainAccessibility:
removePasswordForHost:username:port:keychainProtocol:
passwordForServiceName:accountName:
setPassword:forServiceName:accountName:keychainAccessibility:
removePasswordForServiceName:accountName:
copyAllSigningIdentitiesForAddress:error:
copyAllEncryptionIdentitiesForAddress:error:
mf_addImmediateObserver:selector:name:object:
mf_removeObservers:
stringByEncodingDomainName:
getFileSystemRepresentation:maxLength:
getCharacters:range:
mf_containsSubstring:options:
mf_fileSystemString
mf_stringByEscapingHTMLCodes
mf_containsSubstring:
mf_stringByTrimmingWhitespaceAndNewlineCharacters
mf_prefixToString:
mf_stringRepresentationForBytes:
mf_stringWithAttachmentCharacter
ef_hasScheme:
mf_isResourceURL
mf_firstPartNumber
URLSession:dataTask:didReceiveResponse:completionHandler:
URLSession:dataTask:didReceiveData:
response
_responseBody
_promise
_response
ephemeralSessionConfiguration
dataTaskWithRequest:
invalidateAndCancel
_ntlmGeneratorRef
_ntlmError
mf_stringByAbbreviatingSharedResourcesDirectoryWithTildeInPath
stringByResolvingSymlinksInPath
stringWithFileSystemRepresentation:length:
stringWithCharacters:length:
initWithAuthenticationScheme:account:connection:
_justSentPassword
_range
_quoteLevel
archivedRepresentation
appendArchivedRepresentation:
_text
_fragments
_initializeTopLevelPartWithHeaders:
_continueParsing
progressiveMimeParser:beganMimePart:
progressiveMimeParser:finishedMimePart:
progressiveMimeParser:beganDataForMimePart:
progressiveMimeParser:failedWithError:
_reportError:
mf_rangeOfCString:options:range:
_currentBoundary
mf_rangeOfData:options:range:
_continueParsingStartOfPart
_continueParsingHeaders
_continueParsingBody
initWithBodyData:topLevelHeaders:headersToPreserve:
noteDataLengthChanged:
currentPart
_preserveHeaders
_cursor
_lastLength
_topLevelPart
_currentPart
_parserFlags
contentsForTextSystem
_needsSignatureVerification:
usesKnownSignatureProtocol
dataForMimePart:
signedData
initWithPartData:error:
containsSignedContent
lastSecCMSError
verifyAgainstSenders:signingError:
signers
_setSigners:
_setSMIMEError:
decryptedMessageBodyIsEncrypted:isSigned:
isContentEncrypted
isContentSigned
mf_convertNetworkLineEndingsToUnix
setMessageClassForStore:
setStoragePath:
setMessagePropertiesFromMessage:
_setDecryptedMessageBody:isEncrypted:isSigned:
setSigners:
setIsEncrypted:
decodeMultipartSigned
decodeApplicationPkcs7_mime
_setObjectInOtherIvars:forKey:
_SecCMSError
_digest
_signers
_signedData
_envelopedData
_isEncrypted
initForSigningWithSender:compositionSpecification:error:
initForEncryptionWithCompositionSpecification:error:
_appendBytes:length:
_encoder
_singleShot
_defaultSettingsWithPort:useSSL:directSSL:
connectionSettingsForAuthentication:secure:insecure:
setSupportsPipelining:
setSupportsOutboxCopy:
disconnect:
connectionExpired:
scheduledTimerWithTimeInterval:target:selector:userInfo:repeats:
setTimer
_isAppleServiceDeliveryHostname:
registerAppleServiceDeliveryHostname:
setDeliveryClass:
customAuthenticationErrorStringForError:authScheme:
authenticatedConnection:
_deliveryClass
_lastTimerSetTime
_supportsPipelining
_supportsOutboxCopy
initWithDomain:type:
_openConnection
headersRequiringSMTPUTF8Support
ef_any:
stopActivityWithSuccess:
_updateEnhancedStatusCodesFromLastResponse
statusClass
statusSubject
statusDetail
statusString
continuationResponses
_lastResponseLine
_statusClass
_statusSubject
_statusDetail
_statusString
_continuationResponses
_loadMailboxRowidIfNecessary:
objectEnumerator
initWithLibrary:URLString:
knownMessageIDsFromSet:
messageIDsAddedBeforeDate:
deleteUIDsNotInArray:
numberOfMessageIDs
deleteAllUIDs
flagsForUID:
_mailboxRowid
lastMatcher
setLastMatcher:
lastSearchString
setLastSearchString:
lastSearchStringLength
setLastSearchStringLength:
matchers
setMatchers:
_lastMatcher
_lastSearchString
_lastSearchStringLength
_matchers
initWithSearchString:options:
matches:matchType:
_setOfAllSources
allSources
attachmentForURL:
setAttachment:forURL:
_attachmentsLock
_attachmentsByURL
textHtmlPart
_initWithMimePart:htmlData:
initWithString:relativeToURL:
absoluteURL
mimePartForURL:
initWithMimeBody:
attachmentsInDocument
baseURL
_baseURL
_mimeBody
_htmlPart
_htmlData
_partsByURL
_partsByFilename
_preferredEncoding
_visuallyEmpty
v20@0:8B16
B16@0:8
@24@0:8@16
@16@0:8
@32@0:8@16@24
B40@0:8@16@24@32
^v16@0:8
I16@0:8
B20@0:8I16
B24@0:8@16
#16@0:8
@24@0:8:16
@32@0:8:16@24
@40@0:8:16@24@32
B24@0:8#16
B24@0:8:16
Vv16@0:8
Q16@0:8
^{_NSZone=}16@0:8
B24@0:8@"Protocol"16
@"NSString"16@0:8
@24@0:8^{_NSZone=}16
v24@0:8@16
@"ACAccount"16@0:8
@"NSArray"16@0:8
v24@0:8@"NSString"16
v16@0:8
v32@0:8@16@24
B28@0:8@16B24
@20@0:8B16
@28@0:8B16^@20
@24@0:8^@16
B32@0:8@16@?24
B36@0:8@16B24@?28
B24@0:8^@16
v20@0:8I16
^{__CFString=}16@0:8
@40@0:8@16@24@32
@"ACAccount"
{os_unfair_lock_s="_os_unfair_lock_opaque"I}
@"NSMutableDictionary"
@"NSString"
@"NSArray"
@"ECAccount"
@"EFLocked"
@"MailAccount"
@"DeliveryAccount"
@"NSDictionary"
v28@0:8@16B24
v36@0:8@16B24@?28
v32@0:8@16@?24
@"MFAccount"
@"MFActivityMonitor"
@"MFMonitoredInvocation"
{?="useSSL"b1"incomingServerSupportsSSL"b1"smtpServerSupportsSSL"b1"canceled"b1"performsValidationInBackground"b1"unused"b27}
@"MFError"
@"<MFAccountValidatorDelegate>"
v24@0:8Q16
v24@0:8d16
i16@0:8
v32@0:8@16d24
d16@0:8
v32@0:8@16Q24
v20@0:8i16
v36@0:8@16d24i32
v28@0:8@16i24
v28@0:8d16i24
v24@0:8q16
@?16@0:8
v24@0:8@?16
q16@0:8
@"NSThread"
@"MFInvocationQueue"
@"MFMailboxUid"
@"NSMutableSet"
@28@0:8I16d20
Q24@0:8@16
@"NSMutableArray"
v40@0:8@16q24@32
B48@0:8r*16Q24{_NSRange=QQ}32
B40@0:8@16{_NSRange=QQ}24
v32@0:8r*16Q24
B32@0:8@16Q24
B32@0:8@16@24
v28@0:8B16@20
B32@0:8^{__SecTrust=}16^@24
@"<ECSASLSecurityLayer>"
@"MFConnectionSettings"
@"<ECNWConnectionWrapper>"
^{z_stream_s=*IQ*IQ*^{internal_state}^?^?^viQQ}
v24@0:8^{__CFString=}16
^{__CFString=}
B32@0:8#16@24
@"EDSearchableIndex"
@"EFMutableInt64Set"
@"EFSQLPropertyMapper"
@36@0:8@16B24^@28
@56@0:8^I16I24B28@32@40@48
v32@0:8^?16@24
@24@0:8^?16
B28@0:8^?16B24
@24@0:8@?16
@28@0:8@16I24
@36@0:8@16@24B32
@48@0:8@16@24@32@40
@"DAMailAccount"
v40@0:8q16@24@32
v40@0:8q16@24@"NSError"32
v40@0:8@16Q24Q32
@"NSObject<OS_os_log>"16@0:8
@"MFMessageLibrary"
@32@0:8@16^B24
@"NSData"24@0:8@"<ECMessage>"16
B32@0:8@"NSURL"16@"NSURL"24
i20@0:8i16
v56@0:8@16@24@32@40@48
@44@0:8@16@24I32@36
@52@0:8@16@24I32@36@44
@48@0:8@16@24I32@36i44
B32@0:8@16^@24
B36@0:8@16@24B32
@20@0:8i16
@24@0:8i16B20
B20@0:8i16
@32@0:8@16^@24
v40@0:8@16@24^@32
i24@0:8@16
@"NSObject<ASAccountActorMessages>"
@"DAAccount"
@"MFDAMailbox"
@"NSLock"
@"NSSet"
@"NSCountedSet"
@44@0:8@16I24@28@36
@"NSConditionLock"
@"NSData"16@0:8
@32@0:8@16B24B28
@"NSData"
v24@0:8@"NSDictionary"16
@"MFConditionLock"
@"NSError"
v24@0:8^v16
Q40@0:8Q16{_NSRange=QQ}24
Q28@0:8Q16B24
@28@0:8I16^B20
v36@0:8^@16^B24I32
@20@0:8I16
Q44@0:8{_NSRange=QQ}16Q32B40
v44@0:8@16{_NSRange=QQ}24I40
@"MFPlainTextDocument"
@"NSMutableString"
v28@0:8i16@20
@32@0:8@16#24
@24@0:8Q16
v24@0:8i16
@24@0:8q16
@24@0:8^B16
@"NSString"24@0:8^B16
@"ECSubject"16@0:8
@"NSDate"16@0:8
@"<ECMailbox>"16@0:8
@"ECMessageFlags"16@0:8
@"<ECMimePart>"16@0:8
@"NSDictionary"16@0:8
@"ECAngleBracketIDHash"16@0:8
@"NSSet"16@0:8
@"<ECMailAccount>"16@0:8
@"<ECMessageHeaders>"16@0:8
@"NSUUID"16@0:8
@"<EDIndexableAccount>"16@0:8
@"<EDIndexableMailbox>"16@0:8
q24@0:8@16
v52@0:8@16Q24I32q36q44
@28@0:8@16i24
@36@0:8@16@24i32
@28@0:8@16B24
Q24@0:8B16B20
@44@0:8{_NSRange=QQ}16I32^Q36
@36@0:8{_NSRange=QQ}16I32
@28@0:8q16I24
@36@0:8@16I24@28
Q20@0:8B16
v40@0:8@16@24@32
@44@0:8@16^@24B32^B36
B56@0:8@16{_NSRange=QQ}24^B40@48
@60@0:8@16{_NSRange=QQ}24^B40B48^B52
B68@0:8@16{_NSRange=QQ}24^B40@48B56^B60
@32@0:8@16I24B28
@56@0:8@16^@24^B32B40B44^B48
@52@0:8@16^@24^B32B40^B44
@44@0:8@16^B24^B32B40
v24@0:8i16B20
v36@0:8I16B20B24@28
v32@0:8Q16@24
@"MFMailMessageLibrary"
@"NSDate"
@"MFMessageCriterion"
@32@0:8@16B24i28
^{os_unfair_recursive_lock_s={os_unfair_lock_s=I}I}16@0:8
@32@0:8Q16^@24
v32@0:8@16B24B28
@24@0:8B16B20
@44@0:8@16^@24^@32B40
@32@0:8#16@24
@"<EDDeliveryAccount>"16@0:8
v24@0:8@"<EDDeliveryAccount>"16
@"<ECMailbox>"24@0:8q16
B24@0:8@"NSURL"16
@24@0:8d16
v28@0:8@16I24
v24@0:8i16i20
#24@0:8@16
B40@0:8@16@24^@32
i32@0:8@16@24
B44@0:8@16I24@28@36
v28@0:8B16@?20
B28@0:8@16i24
@44@0:8@16@24@32B40
@28@0:8i16@20
{?="cacheDirtyCount"b16"synchronizationThreadIsRunning"b1"cacheHasBeenRead"b1"disableCacheWrite"b1"_UNUSED_"b13}
@"MFLock"
@"MFWeakObjectCache"
@"<EFScheduler>"
@"MFLocalActionReplayHandler"
@"NSURL"16@0:8
@"MFWeakReferenceHolder"
@"NSNumber"
@"MFMailMessage"
@"MFDeliveryResult"
@"MFMutableMessageHeaders"
@"ECHTMLStringAndMIMECharset"
@"EMMessageObjectID"
I20@0:8i16
@"MFMessageInfo"16@0:8
v84@0:8@16@24@32@40@48d56d64@72I80
@"MFMessageInfo"
@"NSURL"
v36@0:8@16B24@28
v40@0:8q16q24@32
v48@0:8@16@24@32@40
v32@0:8q16@24
v48@0:8q16q24@32@40
v44@0:8@16q24@32B40
v28@0:8@"<ECMessage>"16B24
v36@0:8@"NSArray"16B24@"EDPersistenceDatabaseGenerationWindow"28
v32@0:8@"NSArray"16@"EDPersistenceDatabaseGenerationWindow"24
v32@0:8@"NSData"16@"<EDPersistedMessage>"24
v40@0:8@"NSArray"16@"<EDPersistedMessage>"24@"EDPersistenceDatabaseGenerationWindow"32
v32@0:8@"NSURL"16@"EDPersistenceDatabaseGenerationWindow"24
v32@0:8@"ECMessageFlagChange"16@"NSArray"24
v40@0:8@"ECMessageFlagChange"16@"NSArray"24@"EDPersistenceDatabaseGenerationWindow"32
v40@0:8q16q24@"EDPersistenceDatabaseGenerationWindow"32
v48@0:8@"NSSet"16@"NSSet"24@"NSArray"32@"EDPersistenceDatabaseGenerationWindow"40
v32@0:8q16@"NSArray"24
v40@0:8q16@"NSArray"24@"EDPersistenceDatabaseGenerationWindow"32
v48@0:8q16q24@"<EDPersistedMessage>"32@"EDPersistenceDatabaseGenerationWindow"40
v44@0:8@"NSArray"16q24@"NSURL"32B40
v32@0:8@16^B24
@40@0:8@16@24@?32
B36@0:8@16@24i32
v32@0:8q16q24
B40@0:8@16q24@32
q48@0:8@16@24@32@?40
@76@0:8@16@24@32@40Q48B56@60@68
B48@0:8@16q24@32@40
q48@0:8@16@24@32@40
q40@0:8q16@24@32
q40@0:8@16@24@32
q64@0:8@16@24@32@40@48^B56
v32@0:8@16q24
@24@0:8I16B20
v56@0:8@16@24@32^?40r^{?=@@@IfQdII^{sqlite3}B@B}48
v56@0:8^{sqlite3_stmt=}16@24@32^?40^v48
v52@0:8@16@24@32I40Q44
@32@0:8@16Q24
@36@0:8@16i24Q28
I40@0:8@16@24@32
@32@0:8Q16@24
@40@0:8q16@24q32
@40@0:8@16{_NSRange=QQ}24
@36@0:8@16q24I32
@36@0:8q16I24^B28
I32@0:8@16@24
I24@0:8@16
I32@0:8@16B24B28
Q32@0:8@16Q24
@40@0:8{_NSRange=QQ}16@32
@56@0:8Q16Q24Q32^{_NSRange=QQ}40@48
@32@0:8I16B20B24B28
@44@0:8q16I24@28^B36
@32@0:8q16q24
q32@0:8@16^B24
q28@0:8@16B24
B28@0:8I16@20
Q24@0:8q16
v32@0:8Q16q24
v40@0:8q16@24Q32
v36@0:8B16@20@28
B56@0:8@16@24@32@40@48
q32@0:8@16@24
v36@0:8@16@24B32
B56@0:8@16q24@32B40B44@48
@40@0:8@16^@24^B32
B32@0:8@16^B24
@60@0:8@16@24I32I36B40{_NSRange=QQ}44
@44@0:8@16@24I32I36B40
@40@0:8@16@24I32I36
@52@0:8@16@24I32{_NSRange=QQ}36
@36@0:8@16@24I32
v64@0:8@16@24I32I36{_NSRange=QQ}40^B56
v56@0:8@16@24I32I36{_NSRange=QQ}40
v40@0:8@16@24I32I36
v52@0:8@16@24I32{_NSRange=QQ}36
v36@0:8@16@24I32
v44@0:8@16@24I32@36
v36@0:8@16I24@?28
@44@0:8@16I24{_NSRange=QQ}28
@52@0:8@16I24{_NSRange=QQ}28^B44
@36@0:8@16I24^B28
^{sqlite3_stmt=}48@0:8@16@24^@32Q40
^{sqlite3_stmt=}48@0:8@16@24^q32Q40
@44@0:8@16@24q32I40
@32@0:8q16^B24
@48@0:8@16I24Q28@36B44
@32@0:8q16@24
@36@0:8@16B24B28B32
B40@0:8q16@24^Q32
@"NSObject<OS_dispatch_queue>"
@"<EFSQLValueExpressable>"
@"_MFMailMessageLibraryStatistics"
@"MFFileCompressionQueue"
@"MFLibrarySearchableIndex"
@"NSCache"
@"EDPersistence"
@"MFPersistenceDatabase_iOS"
@"EDSearchableIndexScheduler"
@"EDMessageQueryParser"
@"MFMessageBodyMigrator"
v24@0:8@"NSArray"16
B24@0:8@"MFLibraryMessage"16
q24@0:8@"NSData"16
@60@0:8@16@24@32B40B44B48@52
@"MFLibraryMessage"
@"MFBufferedDataConsumer"
@32@0:8#16:24
v24@0:8#16
:16@0:8
v24@0:8:16
@40@0:8@16q24@32
@40@0:8Q16@24@32
v32@0:8^Q16^Q24
@32@0:8{_NSRange=QQ}16
q28@0:8@16I24
@44@0:8@16I24@28^@36
@52@0:8@16@24I32@36^@44
q32@0:8@16Q24
q40@0:8Q16@24Q32
q24@0:8Q16
Q32@0:8@16@24
{?="isReadOnly"b1"hasUnsavedChangesToMessageData"b1"haveOpenLockFile"b1"compacting"b1"cancelInvalidation"b1"forceInvalidation"b1"isWritingChangesToDisk"b1"isTryingToClose"b1"compactOnClose"b1"reserved"b23}
@36@0:8Q16^Q24B32
@32@0:8Q16^Q24
@48@0:8Q16^Q24B32B36^B40
@36@0:8q16i24@28
v24@0:8@"NSCoder"16
@24@0:8@"NSCoder"16
@52@0:8@16@24@32Q40B48
@68@0:8@16@24@32Q40Q48@56B64
@36@0:8q16I24@28
v40@0:8Q16Q24@32
@"MFAttachmentLibraryDataProvider"
@"MFDataHolder"16@0:8
@"MFDataHolder"
@44@0:8@16^{__SecTrust=}24^{__SecTrust=}32i40
@"MFCertificateTrustInfo"
B44@0:8^@16^Q24^B32B40
@"MFMessageBody"
@"<EDAccount>"24@0:8@"NSString"16
@"<EDAccount>"24@0:8@"ACAccount"16
#32@0:8@16^@24
@36@0:8#16@24B32
@"ACAccountStore"
@"EFObservable"16@0:8
f16@0:8
v20@0:8f16
@"EFCancelationToken"
@"BKSApplicationStateMonitor"
@"EFObservable<EFObserver>"
@28@0:8^@16B24
B20@0:8B16
{CGSize=dd}16@0:8
v32@0:8{CGSize=dd}16
@"MFAttachmentManager"
@"MFAttachmentPlaceholder"
@"MFMimePart"
@"NSItemProvider"
@"<MFDataConsumer>"
{CGSize="width"d"height"d}
@"MFAttachment"
@"NSProgress"
@48@0:8@16@24@32^@40
v40@0:8@16q24q32
@56@0:8@16@24@32@40@48
@32@0:8@16q24
v48@0:8@16@24@32@?40
v48@0:8@"MFAttachment"16@"<MFDataConsumer>"24@"NSProgress"32@?<v@?B@"NSError"B>40
@"NSData"24@0:8@"MFAttachment"16
@"MFMessage"24@0:8@"MFAttachment"16
@"NSString"32@0:8@"MFAttachment"16@"MFMessage"24
@40@0:8@16@24^@32
@56@0:8@16@24q32@40@48
@48@0:8@16q24@32@40
B24@0:8q16
@"NSFileCoordinator"
@40@0:8Q16^{__SecTrust=}24@32
^{__SecTrust=}16@0:8
^{__SecTrust=}
@"ECSecureMIMETrustEvaluation"
@"EMCertificateTrustInformation"
@"CertUITrustManager"
v40@0:8@"DAFolderChange"16q24@"NSError"32
@"MFDAFolderChangeResult"
@48@0:8q16@24@32@40
v32@0:8@16@"MFError"24
v60@0:8@16@24@32@40d48B56
v76@0:8@16@24@32@40d48B56Q60Q68
v60@0:8@"NSString"16@"NSString"24@"NSArray"32@"NSArray"40d48B56
v76@0:8@"NSString"16@"NSString"24@"NSArray"32@"NSArray"40d48B56Q60Q68
v40@0:8*16i24i28@32
B28@0:8@"DAMailMessage"16i24
v40@0:8*16i24i28@"DAMailMessage"32
v24@0:8@"DAMailMessage"16
v52@0:8@16@24@32d40B48
B24@0:8Q16
@"NSMutableData"
@"<DAMailboxStreamingContentConsumer>"
@"MFMessage"
@"DAMailMessage"
@"<MFCollectingDataConsumer>"
@"<MFMessageDataConsumerFactory>"
v56@0:8@16@24I32@36B44@?48
B48@0:8@16@24^@32^B40
@44@0:8@16@24i32@36
@44@0:8@16i24@28@36
@"DAFolder"
@28@0:8i16i20B24
@"<MFRequestQueueResponseConsumer>"
@"MFDAMessageStore"
@"<MFRequestQueueResponseConsumer><DAMailAccountStreamConsumerFactory>"
v32@0:8@"DASearchQuery"16@"NSArray"24
v32@0:8@"DASearchQuery"16@"NSError"24
v32@0:8@"DASearchQuery"16@"NSNumber"24
@"MFMailMessageStoreSearchResult"
@"<DAMailboxStreamingContentConsumer>"16@0:8
@"<MFDAStreamingContentConsumer>"
@"<MFCollectingDataConsumer>"24@0:8@"NSString"16
v44@0:8q16@24@32B40
v60@0:8q16@24@32B40Q44Q52
v48@0:8@"NSData"16@"NSString"24@"NSString"32@"NSString"40
v44@0:8q16@"NSString"24@"NSString"32B40
v60@0:8q16@"NSString"24@"NSString"32B40Q44Q52
@"MFProgressFilterDataConsumer"
@"NSData"32@0:8@"NSString"16@"NSURL"24
B24@0:8@"NSError"16
@"ECTransferMessageActionResults"32@0:8@"NSDictionary"16@"NSURL"24
@"ECTransferMessageActionResults"32@0:8@"ECTransferMessageActionItem"16@"NSURL"24
B24@0:8@"NSArray"16
B28@0:8B16@20
{_opaque_pthread_mutex_t="__sig"q"__opaque"[56c]}
@56@0:8@16q24@32@40@48
v28@0:8I16@20
@44@0:8@16@24i32^B36
@36@0:8@16I24d28
@"MFIMAPConnection"
@52@0:8@16@24@32B40q44
@"MFMessageHeaders"
v32@0:8@?16@?24
^{archive=}16@0:8
i40@0:8@16^{archive=}24^@32
i32@0:8^{archive=}16^@24
^{archive_entry=}36@0:8@16Q24B32
i48@0:8@16@24^{archive=}32^@40
B36@0:8@16^@24B32
B40@0:8^{archive=}16@24^@32
{_NSRange=QQ}16@0:8
v32@0:8{_NSRange=QQ}16
{_NSRange="location"Q"length"Q}
{_NSRange=QQ}24@0:8@16
@40@0:8^{CentralDirectory=[4C]SSSSIIS}16@24@32
^{CentralHeader=[4C]CCCCSSIIIISSSSSII*}24@0:8@16
^{CentralDirectory=[4C]SSSSIIS}24@0:8@16
{_NSRange=QQ}24@0:8q16
@"MFFileArchiveEntry"
@32@0:8^{CentralHeader=[4C]CCCCSSIIIISSSSSII*}16@24
@"EDPersistenceHookRegistry"
@"EDPersistenceDatabase"
@"<MFAccountsProvider>"
@"MFMailMessageLibraryQueryTransformer"
v48@0:8q16q24@"NSString"32@"NSString"40
v24@0:8@"EDPersistenceDatabaseConnection"16
@"<EDReconciliationQueryProvider>"
@"MFLibraryMessageReconciler"
@"MFLibraryThreadReconciler"
@"EDThreadPersistence"
@"NSSet"24@0:8q16
q24@0:8@"EMObjectID"16
@"EMMailbox"24@0:8@"EMObjectID"16
@"<ECMailbox>"24@0:8@"EMObjectID"16
@"<EDMailboxProviderDelegate>"16@0:8
v24@0:8@"<EDMailboxProviderDelegate>"16
@"<EDMailboxProviderDelegate>"
@"<EDAccountsProvider>"
@"MFMailboxUidTransformer"
@"NSMapTable"
v40@0:8@16@24@?32
v32@0:8@"NSURLSession"16@"NSError"24
v40@0:8@"NSURLSession"16@"NSURLAuthenticationChallenge"24@?<v@?q@"NSURLCredential">32
v24@0:8@"NSURLSession"16
v56@0:8@16@24@32@40@?48
v56@0:8@16@24q32q40q48
v48@0:8@"NSURLSession"16@"NSURLSessionTask"24@"NSURLRequest"32@?<v@?q@"NSURLRequest">40
v32@0:8@"NSURLSession"16@"NSURLSessionTask"24
v56@0:8@"NSURLSession"16@"NSURLSessionTask"24@"NSHTTPURLResponse"32@"NSURLRequest"40@?<v@?@"NSURLRequest">48
v48@0:8@"NSURLSession"16@"NSURLSessionTask"24@"NSURLAuthenticationChallenge"32@?<v@?q@"NSURLCredential">40
v40@0:8@"NSURLSession"16@"NSURLSessionTask"24@?<v@?@"NSInputStream">32
v56@0:8@"NSURLSession"16@"NSURLSessionTask"24q32q40q48
v40@0:8@"NSURLSession"16@"NSURLSessionTask"24@"NSURLSessionTaskMetrics"32
v40@0:8@"NSURLSession"16@"NSURLSessionTask"24@"NSError"32
v48@0:8@16@24q32q40
v40@0:8@"NSURLSession"16@"NSURLSessionDownloadTask"24@"NSURL"32
v56@0:8@"NSURLSession"16@"NSURLSessionDownloadTask"24q32q40q48
v48@0:8@"NSURLSession"16@"NSURLSessionDownloadTask"24q32q40
@52@0:8@16@24@32@40B48
B64@0:8@16@24@32@40@48@56
@"EMMailDropMetadata"
i24@0:8@"EDPersistenceDatabaseConnection"16
@"EDPersistenceDatabaseConnection"
B48@0:8^@16^@24@32@40
B24@0:8^{sqlite3=}16
B32@0:8@16^{sqlite3=}24
B32@0:8^{sqlite3=}16@24
q36@0:8i16@20@28
@"<MFMailMessageLibraryMigratorDelegate>"
Q40@0:8@16Q24@32
@40@0:8@16@24q32
@"NSArray"32@0:8@"MFMessageCriterionConverter"16q24
Q40@0:8@"MFMessageCriterionConverter"16Q24@"NSString"32
q32@0:8@"MFMessageCriterionConverter"16@"NSString"24
@"NSString"40@0:8@"MFMessageCriterionConverter"16@24q32
@"MailAccount"24@0:8@"NSString"16
@"MFMessageCriterionConverter"
@"EDMessagePersistence"
@"EFLazyCache"
@56@0:8@16@24Q32@40@?48
B44@0:8@16@24@32B40
q24@0:8@"NSURL"16
@"<EDReceivingAccount>"24@0:8@"NSURL"16
@"<EDPersistedMessage>"24@0:8q16
@"NSArray"32@0:8@"NSArray"16@"NSURL"24
@"NSDictionary"56@0:8@"NSArray"16@"NSArray"24Q32@"ECMessageFlagChange"40@?<v@?@"NSArray">48
B44@0:8@"NSArray"16@"NSURL"24@"NSMutableDictionary"32B40
B24@0:8@"<ECMessage>"16
@"NSArray"32@0:8@"ECMessageFlagChange"16@"NSArray"24
v24@0:8@"NSURL"16
@"NSArray"40@0:8@"NSSet"16@"NSSet"24@"NSArray"32
v32@0:8@"NSString"16q24
v32@0:8@"NSData"16@"<ECMessage>"24
v24@0:8@"ECLocalMessageAction"16
v32@0:8@"ECTransferMessageAction"16@"ECTransferMessageActionResults"24
v24@0:8@"<ECMessage>"16
@64@0:8@16@24@32@40@48@56
@32@0:8q16@?24
@"MFMessageInfoOrderedSet"
@"<EFInvocable>"
@104@0:8@16@24@32@40@48@56@64@72@80@88@?96
@112@0:8@16Q24@32@40@48@56@64@72@80@88@96@?104
@52@0:8@16@24@32B40@?44
@"MFMessageTransformer"
@"EMContentRequestOptions"
@"EDMailDropMetadataGenerator"
@"EDListUnsubscribeHandler"
@"<EMContentItemRequestDelegate>"
@32@0:8d16@?24
v24@0:8@?<v@?>16
@"<EFCancelable>"24@0:8@?<v@?@"EFCancelationToken">16
@"<EFCancelable>"32@0:8d16@?<v@?>24
@40@0:8@16Q24@32
v32@0:8@?16Q24
Q32@0:8Q16@24
@"<MFMessageCriterionConverterDelegate>"
@72@0:8q16q24q32I40I44q48B56B60B64B68
Q24@0:8Q16
v32@0:8Q16@?24
@"MFMessageLoadingContext"
@"MFMimeBody"
Q40@0:8Q16Q24Q32
@32@0:8@16@?24
v36@0:8q16@24B32
v28@0:8q16B24
@28@0:8q16B24
@"EFObservable"
q32@0:8q16@24
Q28@0:8@16B24
v64@0:8@16q24q32q40@48@?56
v48@0:8@16q24@32@?40
v52@0:8@16I24@28@36@44
@56@0:8@16Q24@32@40@?48
q32@0:8q16^@24
@"<MFMessageSummaryLoaderProvider>"
@"NSMutableIndexSet"16@0:8
@"NSMutableIndexSet"
^Q16@0:8
v24@0:8^Q16
@"<ECEmailAddressConvertible>"
@"ECSubject"
@"MFMailboxProvider"
@48@0:8@16@24@32@?40
@"<EMUserProfileProvider>"
@"EMBlockedSenderManager"
v32@0:8@"CXCallObserver"16@"CXCall"24
B28@0:8Q16B24
v28@0:8I16^{__SCNetworkReachability=}20
v32@0:8@16^{__SCDynamicStore=}24
@32@0:8@?16@24
v32@0:8@16i24i28
^{__CFRunLoop=}
^{__SCPreferences=}
@"RadiosPreferences"
@"CoreTelephonyClient"
@"<EFCancelable>"
^{__SCNetworkReachability=}
^{__SCDynamicStore=}
^{__CFRunLoopSource=}
@"CXCallObserver"
@"MFMailDelivery"
@"<MFDeliveryDelegate>"
@"MFAttachmentCompositionContext"
@"EDConversationPersistence"
@"EDLocalActionPersistence"
@"EDMailboxPersistence"
@"EDMessageChangeManager"
@"<EDRemoteSearchProvider>"
@"EDSearchableIndexManager"
@"EDServerMessagePersistenceFactory"
B48@0:8@16@24@32^@40
B48@0:8@"MFMailMessageLibraryMigrator"16@"NSString"24@"EDPersistenceDatabaseConnection"32^@40
v32@0:8@"MFMailMessageLibraryMigrator"16@"EDPersistenceDatabaseConnection"24
v24@0:8@"MFMailMessageLibraryMigrator"16
@72@0:8@16@24Q32@40@48@56@64
B40@0:8Q16^@24@?32
@"_MFSearchMatcherContext"
@32@0:8^@16^@24
@"NSArray"32@0:8^@16^@24
v36@0:8@16B24q28
@"EDSearchableIndexPersistence"
v56@0:8@16@24@32q40@?48
^{__SecIdentity=}40@0:8@16@24^@32
I32@0:8^{__SecCertificate=}16@24
@24@0:8i16i20
@32@0:8@16i24i28
v32@0:8^{__SecIdentity=}16@24
v36@0:8i16^{__SecIdentity=}20@28
v32@0:8^^{__SecIdentity}16^@24
v48@0:8^^{__SecIdentity}16^@24^@32^@40
v52@0:8i16@20@28^{__SecIdentity=}36@44
^{__SecIdentity=}
@"<MFSecureMIMECompositionManagerDelegate>"
q40@0:8@16^B24^B32
r*24@0:8q16
i32@0:8@16q24
q104@0:8@16@24@32@40q48^@56^@64^@72^B80^i88^@96
i40@0:8r*16Q24@?32
i32@0:8@16@?24
@48@0:8r*16Q24@32r*40
i48@0:8r*16Q24@32r*40
i32@0:8^{_NSRange=QQ}16^B24
@"MFSMTPResponse"
@36@0:8@16d24B32
@"EFProcessTransaction"
@"BKSProcessAssertion"
@"NSObject<OS_dispatch_source>"
@"<NSCopying>"
@36@0:8@16B24^B28
^{__CFCharacterSet=}16@0:8
v24@0:8r^{?=@b1b1b1b2}16
v24@0:8^{_CommandStackEntry=^{?}@}16
i24@0:8^@16
{?="buffer"[64S]"theString"^{__CFString}"directUniCharBuffer"^S"directCStringBuffer"*"rangeToBuffer"{?="location"q"length"q}"bufferedRangeStart"q"bufferedRangeEnd"q}
^{__CFArray=}
@48@0:8:16@24@32@40
@52@0:8:16@24@32i40B48
@60@0:8:16@24@32@40i48B56
@68@0:8:16@24@32@40@48i56B64
@44@0:8@16@24i32^{__CFString=}36
@44@0:8@16@24i32^v36
v60@0:8@16@24@32i40^v44^v52
v44@0:8@16@24i32^v36
@44@0:8@16@24B32^@36
B60@0:8@16@24@32^v40B48^@52
v48@0:8@16@24@32^v40
^{__SecPolicy=}24@0:8@16
^{__SecIdentity=}32@0:8@16^@24
@32@0:8^{__SecIdentity=}16^@24
B32@0:8^{__SecIdentity=}16@24
@32@0:8^@16@?24
B40@0:8^{__SecIdentity=}16@24^@32
B52@0:8^{__SecIdentity=}16@24^{__SecPolicy=}32I40^@44
^{__SecCertificate=}32@0:8@16^@24
@32@0:8^{__SecCertificate=}16^@24
@32@0:8^{__SecCertificate=}16@24
@48@0:8@16:24@32@40
@"EFPromise"
@"NSURLResponse"
^{NtlmGenerator=}
v40@0:8^@16^I24Q32
{?="delegateBeganMimePart"b1"delegateFinishedMimePart"b1"delegateBeganData"b1"delegateFailed"b1"state"b3}
^{SecCmsMessageStr=}
^{SecCmsDigestContextStr=}
^{SecCmsSignedDataStr=}
^{SecCmsEnvelopedDataStr=}
v32@0:8r^v16Q24
^{SecCmsEncoderStr=}
@28@0:8I16B20B24
@36@0:8B16@20@28
@"MFSMTPConnection"
@"NSTimer"
*16@0:8
v24@0:8*16
@"CPSearchMatcher"
