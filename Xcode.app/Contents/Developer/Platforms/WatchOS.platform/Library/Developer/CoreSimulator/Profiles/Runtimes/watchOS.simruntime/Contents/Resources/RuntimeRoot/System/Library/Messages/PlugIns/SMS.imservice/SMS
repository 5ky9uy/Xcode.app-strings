@(#)PROGRAM:SMS  PROJECT:SMS-
$@q=
softlink:r:path:/System/Library/PrivateFrameworks/DeviceManagement.framework/DeviceManagement
type
content-id
content-location
data
text/plain
application/smil
chat-style
room
chat
plain-body
xhtml
subject
handle
service
guid
replyToGUID
incomingRelayMessage
outgoingRelayMessage
filtered
smsfp
smsft
SMSMsgDict
SMSRequiresUpload
BlockList
filtering message for handle: %@ = %@
Setting up SMS service
Setting up push handler
...done
Dealloc
-[SMSServiceSession sessionDidBecomeActive]
Daemon is ready registering for incoming messages
Daemon is not yet ready, watching for notification to register for incoming messages
-[SMSServiceSession sessionWillBecomeInactiveWithAccount:]
SMServiceSession
Relay service set to sms relay, accounts count %@ devices count %@
Relay service set to sms watch service relay , accounts count %@ devices count %@
SMSServiceSession: Error no IDS Service available for SMS Relay
  => Done: %@
Trying to add default paired device to allowed list
Added to paired list %@
Finished setting Up Relay Service (Service: %@), number of accounts: %lu
com.apple.private.alloy.sms.watch
Finished setting Up SMS Watch Relay Service (Service: %@), number of accounts: %lu
The AppleID account is not active, we can not use SMS Relay
Status Of Remote Approval for Relay is %@
Does this device have SMS Relay capable devices on its account? %@
Found Caller ID %@
Account Maps Currently Reads  %@
iMessage
iMessage Account Current reads  %@
iMessage Caller ID Guid reads  %@
Unable to locate CallerID Account in Prefered Account Map
Registering for Account alias changes
Account %@ aliases has changes
aliases for AppleID account are %@
Found %d Relayable Devices
localDeviceSupportsSMS YES for Alt Account
isSMSEnabled %@
isSMSEnabled %@ Has valid Phone Number %@
isSMSEnabled %@ Does not have phone number to send with %@
Adding reflect only key and forwarding message to peers
Warning, missing %@ to add to %s
messageDict
_forwardMessageToPeers: Not compressing data
_forwardMessageToPeers: Compressing data
_SMSServiceRelayToWatchOnly
outgoing-message
message-guid
local _forwardMessageToPeers: Not compressing data
local _forwardMessageToPeers: Compressing data
Sending local outgoing download message
local-outgoing-download-message
Sending local outgoing plain text message
local-outgoing-message
dict
local-type
Trying to relay dictionary to peers, requiresUpload: %@
 => Not sending data for recived message, we have no peer devices
 => Not sending data for recived message, we have no devices on the allowed list
 => Not sending data for recived message, smsRelay not enabled
This message is from an emergency number, but we have a Watch connected over BT %@, relaying message %@
This message is from an emergency number, not relaying to peer %@
No watch paired connected over Bluetooth, skipping relaying emergency SMS
Recipients: %@
  Recipient: %@
One of the recipients was an emergency number, this message should not be relayed
 Going to forward our recived Message onto our other peers
Saved File to Path %@
Starting Upload to MMCS Now
MMS dictionary uploaded complected with success: %@ and error %@
v76@?0@"NSString"8B16@"NSError"20@"NSString"28@"NSString"36@"NSData"44@"NSString"52@"NSData"60q68
Relaying to local device, requiresUpload %@
Relaying dict containing MMS to local device. %@ 
incomming-message
local-incoming-download-message
local-incomming-message
D:%@
iCloud DSID is %@, imessage DSID is %@
com.apple.sms
allowedOnce
Device is not on HSA2 trusted list, not approving it for SMS relay %@
(HSA2 Trusted) Already added device to paired list once %@
(HSA2 Trusted) Added to paired list %@
 Checking if Account %@ has alias %@ 
 comparing alias %@ and alias %@ 
 Positive match on alias %@ 
 We have a prefered Alias %@
 This alias appears to be a phone number, we will send to that destination %@
 This prefered alias is not a phone number, but we outselves support SMS, So we sent this one out using %@ instead
 This prefered alias is not a phone number, using %@ instead
 This prefered alias is not the IDS registered number, and we support SMS, So we sent this one out using %@ instead
 We have no prefered alias, we are going to use the dominant phone number one
 Found IDS account %@ with phone number %@
 Unable to find IDS phone number account
finding account and phoneAlias shouldFilterRecipients: %@ requestProxySend: %@ for accounts %@
dominentPhoneAlias is this: %@
 Found Accounts %@ for SMS Relay Service 
 Ensuring that the account picked matches the callerID %@
 Going to use account %@ For sending this message
 Account is nil, getting phone account from IDS
Account is nil but not finding new account based on phone number IDS account based on parameters shouldFilter %@ requestProxy %@
 => Not sending data, we have no peer devices
 We have a phone alias override, looking for new account that matches callerID %@
 Updating sending account, Now Going to use account %@ For sending this message
updatedSendOptions
 Not Adding %@ to the devices to send this message to, They were the original person who sent this message to us in the first place
 Not Adding %@ to the devices to send this message to, since we only need to relay it to the active watch
 Adding %@ name %@ the devices to send this message to 
SMS relay data sent to: %@   success: %@   error: %@   account: %@  identifier %@
 => No account available for sending With Phone number alias, failing
SMS relay data sent to: %@   success: %@ account:%@  error: %@  identifier %@
self-token:%@/%@
MessageDelivery
Sending message to local device => dictionary: %@
Sending message to local account (error %@) success: %@ with Identifier %@
No Local Device Found, unable to send message
Looking For Local Devices that are nearby
Found Default paired Device which is nearby %@
I Have more than 1 account, I am registered for Proxy Push
Found the local account, it is our only account, This means we are NOT proxy resgiered
Found the AppleID account
The AppleID account is NOT active
The AppleID Account has no usable alias's
Result of check if myself is proxy registered is %@
Device %@ has identities %@
The default paired device has no identities, this means it is NOT proxy registered for SMS
mailto:__localURI__@__local__URI.com
The default paired device has an identity, but is is the local account, it is NOT proxy registered for SMS
 Adding Message with GUID: %@ to originated Message Map
 Removing Message with GUID: %@ from originated Message Map
Storage context present for message with GUID %@
hasBeenApprovedForSMSRelay
SMS Service Session received Incoming Plain Text Message From Push Handler: %@
This relay message has come from an emergency number, Not processing message
One of the recipients was an emergency number, this message should never have been relayed, not processing message
v16@?0B8B12
v16@?0@?<v@?>8
I am nano. Ignoring incoming MMS download message. Will handle it over local handler.
SMS Service Session Recived Incoming download Message From Push Handler
Sucessfully Retrieved binary NSDictionary Attachment for incoming message at path %@
Unable to download incoming message: %@
v44@?0@"NSString"8@"NSString"16B24@"NSError"28@"NSString"36
SMS Service Session Recived Outgoing Plain Text Message From Push Handler From %@ To %@
Is Message from device on the allowed proxy list? %@ isInProxyMode %@
Message Type is a plain text outgoing message
Message %@ was being replayed not forwarding to peers
@16@?0@8
Found Recipient %@
One of the recipients of this outgoing message is an emergency number, Not processing message
Will send SMS, recipient is Emergency %@, shouldRelayEmergencyTextFromPairedDevice: %@, isDefaultPairedDeviceRelayingLocally: %@, isInProxyMode %@ 
Found a Message with the same GUID %@ and Fail %@
Found duplicate message for GUID %@ on Service %@ and it did not have an error
Found duplicate message for GUID %@ on Service %@ but allowing it to be processed since original message had an error
We received an outgoing message and we are only reflecting it, setting shouldForceToSMS on chat %@ to NO
We received an outgoing message and we are only reflecting it, setting shouldForceToSMS on chat %@ to YES
This messag was addressed to me, however I was told to reflect it only
  => Done marking message as sending: %@
Message %@ is being replayed. Not sending out over CT
v16@?0@"IMMessageItem"8
send message with guid: %@  to identifier: %@   chat: %@
Reflecting outgoing SMS with Guid: %@
 Unable to create message item from message dictionary
This device is not on the allowed list, it should not have been trying to send an SMS, sending a message back to it to tell it to not send SMS in the future
v12@?0B8
 Outgoing message request from %@
 This message was destined for me to send out, I am the gatekeeper
 Device %@ is on the allowed list, Telling the block to continue
 Device %@ is on the blockList, sending back a failure
 This message was likely from a local device, looking for fromID: %@
 This message was not for us to gatekeep, we should reflect it only if it came from one of our devices (senderDevice %s) isInProxyMode %@
Not Nil
SMS Service Session Recived Outgoing download Message From Push Handler
Is Message from device on the allowed proxy list? %@
SMSAttachmentController complete, success: %@   error: %d
Will relay SMS message with guid %@   to identifier: %@   chat: %@
Noting relayed SMS message with guid %@ to identifier: %@   chat: %@
v32@?0@"IMMessageItem"8@"NSString"16B24I28
Alert said no, sending back a failure 
 Outgoing Download message request from %@
 This message was not for us to gatekeep, it was not addressed to us (Addressed To: %@
SMS Service Session received Message ID sent: %@
  => Empty message ID, ignoring
IncomingReadReceiptAssertion
Told to mark message ID %@ as read with timestamp %@
SMS Service Session Recived Message ID:%@ Send Failure Message From Push Handler, from:%@ to:%@
Received a delete command, but it was not from one of our own devices From: %@
wasReportedAsJunk
SMSService
iCloudSync not enabled and not reported as junk, dropping delete command: %@
Handling delete command: %@ (cloudKitSyncEnabled: %d, wasReportedJunk: %d)
Received remote file response %@
Received remote file request %@
SMS Service Session Recived Local incomming SMS Message
SMS Service Session recived Local outgoing Download SMS Message message %@
SMS Service Session recived Local outgoing SMS Message
SMS Service Session Recived Local incomming download MMS Message
SMS Service Session Recived Message ID Send Failure Message From Push Handler
SMS Service Session Recived an incomming approval request from:%@ to:%@
********** We received an imcomming pin code alert from a non SMS Device
The device that sent this request was %@
SMS Service Session Recived a request to enroll a device into SMS Relay from:%@ to:%@
********** We received an Enroll me Request from a device that we do not recognize
SMS Relay Enrollment
Received request to enroll a device into SMS Relay, However we already have this device in our allowed list, Not doing anything
Received request to enroll a device into SMS Relay, However this device has requested to be enrolled before, Not allowing it to try again
Automatically enrolling for SMS relay with requesting device: %@
Received request to enroll a device into SMS Relay, This is your first time trying, You only get 1 chance
SMS Service Session Recived an incomming approval response from:%@ to:%@
Device %@ Told us that they have turned off SMS Relay for us, but we determined they are not allowed to. Ignoring!
Device %@ Told us that they have turned off SMS Relay for us, revoking them now 
This response indicated to us that we tried to send when we shouldnt have tried to send, Pulling out the guid and marking that message as a failure 
Telling message GUID %@ that it's a failure
The response was %@ Was it a cancelation/revokation? %@ 
Device %@ was not found in our relay service!
Validation: Attempting To Validate Message
Validation: Message has no attachments or it is a rich link, fine to send
Validation: Attempting to validate a message with UTIs %@
Validation: Is MMS Valid %@ With error %zd
PNIsValidPhoneNumberForCountry
CorePhoneNumbers
Cleaning up symbols from unformatted phone number %@ based on phoneNumberIsValid %d and phoneNumberIsShortCode %d
Message sending...
Trying to send a CTMessage from not an embedded device
My CT Phone Number from FTDevice is: %@
Updating
Registration
Service
Updating SMS service with number: %@
Checking if Alias %@ is active for SMS Relay 
Checking Device %@
Checking linked URI: %@
LinkedURI is active for SMS Relay, Returning %@
This device has the linkedURI we are looking for, return %@
empty deviceID passed in
SMS Service Session Recived Request To Enroll %@ Into SMS Relay 
Automatically enrolling HSA trusted device %@ 
SMS Service Session Recived Request To Un Enroll %@ Into SMS Relay 
com.apple.sms.smsRelayDevices.changed
SMS Service Session Recived Request To Enroll ourselves for SMS Relay
allowed
ignored
hasChallenged
Told to add an item but we allready have its ID, moving on
_addDeviceToAllowedSMSRelay: newAllowedDeviceUUIDs count: %d allowedDeviceUUIDs count: %d
_addDeviceToAllowedSMSRelay: going to write an empty dictionary to the kSMSDefaultsAllowedKey
_removeDeviceFromAllowedSMSRelay: newAllowedDeviceUUIDs count: %d allowedDeviceUUIDs count: %d
_removeDeviceFromAllowedSMSRelay: going to write an empty dictionary to the kSMSDefaultsAllowedKey
Told to add an iteam but we allready have its ID, moving on
_addDeviceToAllowedSMSRelay: newIgnoredDeviceUUIDs count: %d ignoredDeviceUUIDs count: %d
_addDeviceToIgnoredSMSRelay: going to write an empty dictionary to the kSMSDefaultsAllowedKey
_removeDeviceFromIgnoredSMSRelay: newIgnoredDeviceUUIDs count: %d ignoredDeviceUUIDs count: %d
_removeDeviceFromIgnoredSMSRelay: going to write an empty dictionary to the kSMSDefaultsAllowedKey
Tried to enroll a device that doesnt excist in our set of devices or was nil %@
Enter the code shown on your %@ to allow iPhone text messages to also be sent and received on \U201C%@\U201D.
SMSLocalizable
Text Message Forwarding
Title: Text Message Forwarding
Allow
Enable Text Message Forwarding: Allow button
Cancel
Enable Text Message Forwarding: Cancel button
SMSRelayCodeInput
User Notificaion has been completed with information %@
Unable to create a code number from the user inputed information or we have no pin to compare against, this will fail validation
The Code Is Correct, Welcome
The Code Is Incorrect, Goodbye
The user entered no code... or the code entered was not an NSString
You Tapped Cancel, Goodbye!!
v16@?0@"IMUserNotification"8
We were unable to send the PIN to the other device to be displayed, Sorry
_pendingCodesToDevicesForApproval
Sending a Pin Code To Device %@  to display to enroll them into SMS Relay
SMS Service session recived reques to enroll ourselves into SMS Relay
This device has a callerID set to a phone number, That phone number is SMS Relay enabled, we should use that 
This device does not have a callerID set, so we are going to use the Dominent phone number one if possible 
It is possible to use the Dominent phone number alias, thats awesome, lets go for it
We have an alias, we know where to send this request, lets go for it
Asking for device %@  to enroll me into SMS Relay
We are unable to send any request for enabling SMS Relay for ourselves, we know of no phone with an alias we can use!!!!!
Sending an Approval response message to device %@  With information %@ 
Sending an Un-Approve message to device %@ 
This is a non telphony device trying to enroll itself into SMS Relay
SMS relay Enrollment data sent to: %@   success: %@   error: %@   account: %@  identifier %@
device:
Stripping FZIDPrefix, after: %@
Cannot store completion block for guid as either guid or completion block is invalid
Using existing mapping mapping from %@ to %@
Generated mapping from %@ to %@
SMSServiceSession
executeSpamCompletionBlockForMessageGuid: %@ Aready ran completion block, not doing anything
Clearing spam block mapping for %@
Cannot store spam relay completion block for guid as either guid or completion block is invalid
Using existing spam relay mapping from %@ to %@
Generated mapping spam relay from %@ to %@
_executeSpamRelayCompletionBlockForMessageGuid: %@ Aready ran completion block?, not doing anything
Clearing spam relay block mapping for %@
com.apple.MobileSMS
IncomingMessageAlertSpamFiltration
spamFiltrationExtensionID
spamFiltrationExtensionName
(%@)
_shouldCheckForSMSSpam: not checking for sms spam, filter is off
_shouldCheckForSMSSpam: not checking sms spam, chatid %@ has known participants
_shouldCheckForSMSSpam: not checking sms spam, chatid %@ has 3 replies or more
_shouldCheckForSMSSpam: checking SMS spam for chatid %@
v8@?0
Performed spam extension query request for: %@ and received error: %@
Performed spam extension query request for: %@ and received response: %ld
v24@?0@8@"NSError"16
IdentityLookup framework not found
Clearing mapping for %@
MessageService
 Enqueued item for key: %@    timeout: %f
Request to invite person: %@   chat: %@  style: %c
Request to join chat: %@  style: %c handleInfo: %@ lastAddressedHandle %@ lastAddressedSIMID %@
Request to leave chat: %@  style: %c
Marking message as read: %@
Have Peer devices, passing on local read recipet for: %@
The Last Addressed Handle For This Chat Was %@
local-message-read
Not sending delivered quietly receipt for item: %@
Not sending notify recipient command for item: %@
Marking message as played: %@
Marking message as saved: %@
Not sending delivery receipt
Not sending syndication action
Not handling, blastdoor not supported in SMS yet
We don't have any file transfer guids for message so skipping transcoding and calling completion
We have a 3rd party message and need to transcode the payload data
@"NSString"16@?0@"NSString"8
v40@?0@"NSArray"8@"NSString"16@"NSError"24B32B36
We have transfers for this message and this is not a 3rd party message, so let's try and transcode them
Attachments
fallback transcoded %@ to %@
v56@?0@"NSURL"8@"NSArray"16@"NSArray"24@"NSError"32B40B44@"NSDictionary"48
v16@?0@"NSURL"8
disable-expressive-bc
Disabling backwards compatibility from server bag
Enabling backwards compatibility
com.apple.madrid
FailSendingSMSMessages
 ** FailSendingSMSMessages is enabled, failing send message after %f seconds
 ** FailSendingSMSMessages is enabled, failing send message
send message: %@  guid: %@  to identifier: %@   chat: %@
Not sending unfinished message to chat: %@
com.apple.messages.URLBalloonProvider
 ** New Feature, and backwards compat is not enabled
Failed to unarchive attributionInfo. Error: %@
messageText
Activity sharing payload doesn't have message text to send. Bailing
Sending activity sharing fallback for message %@
Message with Guid: %@  is an invalid MMS message, marking as failed and not forwarding to clients
Message with Guid %@  is a valid MMS Message, allowing to forward 
Processed message, result: %@
local device supports SMS = %@, this might be an SOS message: sendEmergencyMessageOverCT = %@, supportsCellularData = %@, useStandalone = %@
The Last Addressed Handle For This Chat is %@ and lastAddressedSIMID is %@
Has multiple active subscriptions %@, has at least one active %@
We have a last addressed alias for this chat, and its one of our active aliases, setting callerID to %@
We have a last addressed alias for this chat with at least one subscription active, setting callerID to %@
We do not have a valid lastAddressedHandle %@ so using lastAddressedSIMID to send %@
Both simID and phoneNumber are not valid to send with.
Updating last address handle for chats with identifier %@ to be %@
Updating last address handle for chats with identifier %@ to be my phone number %@
sendMessage destinationCallerID: %@ mycallerID: %@
DECISION: Can Send : %@ sendEmergencyMessageOverCT %@ My Phone # : %@ My Caller ID : %@  is My CallerID A Phone Number : %@  Should I Send? %@ shouldSendWithoutNumber %@ hasMultipleActiveSubscriptions && isLastAddressedAliasOneOfMyActiveAliases %@ %@
This is an emergency message asked to be sent over CT: Sending Message via CT
My Caller ID & Phone Number are the same, I am SMS Capable, My callerID is a phone number: Sending Message via CT
Subscription on chat cannot be found in active subscriptions but message must be sent because it is an SOS message.
I do not have a phone number, however I am sms capable: Sending Message via CT
My CallerID is not set to phone number However I am SMS Capable: Sending Message via CT
My device is capable of sending SMS but is not on correct subscription. Failing message
: Calling Did Send Message, Another device will relay this message for me
v16@?0@"NSArray"8
This recipient is %@, are they an Emergency Number? %@
This recipient is an Emergency Number
We have peer devices, relaying message...
None of our peer devices are on the allowed list, Not relaying message
Message with Guid %@ contains attachments, uploading to MMCS
Message Transcode and Upload complete, Parts: %@
Relaying attachment to SMS capable device.
Failed to create an Message Dictionary from the IM Message, Original Message: %@
Message Failed To process attachments for peer relay, Original Message: %@
Failed to process and upload attachments for peer relay: %@
v24@?0@"NSArray"8B16I20
Message Failed To Transcode and upload, error: %@
v32@?0@"NSError"8@"NSString"16q24
No attachments or rich links, relaying message with guid %@
Disabling ScreenTime restrictions as relaying message to an Emergency number
Enabling Emergency Mode reported %@ when relaying message to an Emergency number with error: %@
Success sending data to peers: %@
SMS was not sent out and message was force failed so that user can pick correct subscription to send with %@
We have no peer devices, or this message was intended for an emergency number, not relaying message
Failed processing message for sending
%s (%@)
-[SMSServiceSession loginServiceSessionWithAccount:]
SMS: %@
%@: Log in.
-[SMSServiceSession logoutServiceSessionWithAccount:]
%@: Logging out.
Enablement
MMS enabled: %@ MMS
This is the watch. Reading synced value
Calling IMSynchronizeMMSCapabilityToWatch isMMSEnabled %@
MMSRelayEnabled
_syncedMMSEnabledValue %@
_syncedMMSEnabledValue does not exist. Defaulting to %@
com.apple.MobileSMS.MMSCapable
Setting MMS token to: %@
 * Date is the same as current (%@ vs %@)
 * Clamping date %@ to current date (%@)
 * Date descending vs current (%@ vs %@)
Converting IM Message to NSDictionary
Starting parse
Done parse
Plain: %@
messageString: %@
sendXMLVersion: %@
Converting Dictionary to IM Message
      xhtml parsed body: %@  file tranfer GUIDs: %@
**** Invalid payload, ignoring.
IMMessagesToTrack
IMDaemonCore
**** invalid country code on incoming SMS, please file a radar ****
received message with sender: %@, %d parts, type: %@  msgCountryCode: %@ service center: %@  incoming code: %@
Unknown
Localizable string for an unknown SMS sender (spaces are not allowed)
Created number ref: %@  for ID: %@
    => Country code: %@
      => Normalized: %@
WhitelistEmailInternalPhishing
*** Blocking likely phishing SMS message from sender: %@
*** Blocking message from sender: %@
*** Blocking message with too many participants from sender: %@
  Part:
      content type: %@
        content ID: %@
  content location: %@
Sanitized ID %@  sanitized loc %@
  * This is a text part (%@)
  * There's no trailing newline here, we'll make sure to append one next
  * This is a SMIL part
  * Out body: %@
  => Appending body %@
  => Empty
Two SMILs found in MMS - this should not happen!
  * This is an attachment part
  *** Empty filename!
Attachment
  *** Filename has no extension: %@
  Proposed extension: %@
  * Replacement filename: %@
         filename: %@
      data length: %d
    transfer name: %@
             guid: %@
  => Writing data to path: %@
Failed to write data of length: %d   to path: %@
Set transfer local url to: %@
  => Start finalizing file transfer: %@
No file transfer generated for guid: %@
Could not locate file for transfer: %@
Failed building file transfer guid for part: %@
IMTransferServicesController_Preview
Generated preview for SMS attachment part, success %@ error %@
v44@?0@"NSString"8B16{CGSize=dd}20@"NSError"36
Generating preview for attachment part
After parsing the SMS, we have:
  orderedParts = %@
  contentIDToParts = %@
  contentLocToParts = %@
  allParts = %@
Examining part %@
 Found attachmentPart %@
 Did not find attachment's attributed string!
 Found textPart %@
 Appending text %@
 Did not find textPart's attributed string!
 Found embedded text %@
Found unordered part: %@
  * Trimming trailing newline
 => CTMessage UUID: (%@)
    => No UUID specified, using our own: %@
 => Transfers: %@
 => Ordered parts: %@
 => Result message: %@
My number: %@
My email: %@
My sim ID: %@
      ** This is my number, ignoring
My Original Alias is %@
      ** My number is the service center, ignoring
      ** This is my email, ignoring
      ** This is my email (via proxy), ignoring
  => Canonical: %@
Group messaging is disabled, ensuring the sender is in the participant set: %@
SMS: Unblackholing an SMS chat %@
Unblackholing sibling iMessage chat (%@) on reception of SMS message.
   participants: %@
   found chat: %@ (%@)
   isGroupChat: %@
   chatIdentifier: %@
processDictCompletionBlock called for chatid %@ needsToRegister %@ category %ld, extensionName %@
Generated new chatIdentifier for group: %@ filteredSender: %@ filteredSenderUnformatted: %@
Generated new filtered chat identifier: %@
 => This is a replace message for ID: %d
v28@?0B8q12@"NSString"20
MessageServiceSession
Checking if chats with chatIdentifier %@ and style %hhu need to have shouldForceToSMS updated to %@.
Checking if chats with chatIdentifier %@ and style %hhu need to have their last addressed handle updated to %@ or their last addressed sim id updated to %@
  ** Updating sim ID for chat with guid %@ to be: %@
Last address handle is nil, not updating iMessage to nil last addressed handle
  ** Updating caller ID for chat with guid %@ to be: %@ from %@
Updating chat with guid %@ to have shouldForceToSMS = NO
Updating chat with guid %@ to have shouldForceToSMS = YES
Updated simID on chat %@ to %@ but phoneNumber is nil so force updating IMChat to have nil lastAddressedHandle
Not updating chats with identifier %@ and style %hhu as both last addressed handle and last addressed sim id are nil
Failed to send relay message ID guid (timed out): %@
Error sending message: %@ SMS Relay timed out
Clearning incoming message queaue from CT
Device capabilities changed
IDS Devices changed: %@ on Service:%@
Active accounts of service %@ changed to %@
SMSRelayPushHandler
Message with ID %@ Sent Success %@
iCloud syncing not enbabled droping delete command to all other devices, (command %@)
Forwarding delete command to all other devices
Forwarding delete command :%@
groupID
Blocklisted GroupID: %@
removing chat: %@
chat-clear
guids
clearing messages for chat IDS:%@ on services:%@
message
deleteing %lu: messages
parts
Deleting message parts from %lu messages: %@
messageGuid
deleteSubject
v16@?0@"NSString"8
Removing transfer %@
Removed parts from old item %@
Got new item %@
DeleteParts couldn't find item %@
v16@?0q8
Not relaying to peers since we're checking for spam
Not relaying to peers as we are message is being replayed.
MessageReplay
Replaying stored CT SMS message %@
Replaying stored SMS replay message %@
Device is nearby: %@
Device is NOT nearby: %@
isDefaultPairedDevice = %@, isConnected = %@, isNearby = %@
ILMessageFilterQueryRequest
IdentityLookup
ILMessageFilter
ILMessageFilterQueryResponse
DMFEmergencyModeMonitor
Class getDMFEmergencyModeMonitorClass(void)_block_invoke
SMSServiceSession.m
Unable to find class %s
void *DeviceManagementLibrary(void)
/System/Library/PrivateFrameworks/DeviceManagement.framework/DeviceManagement
/System/Library/PrivateFrameworks/DeviceManagement.framework/Contents/MacOS/DeviceManagement
Converting timestamp: %@ to date
  => seconds: %f
  => Returning date: %@
  => Returning current date, failed sanity
Carrier bundle value for maxReceipients was 0 or INT_MAX (%llu), falling back to iMessage maximum
md-max-chat-participants-incoming
Filtering message due to excessive receipient count: %llu maxReceipients: %llu
{CGSize=dd}
SuperToMessage
outHTML
<html>
<body
background-color:%@;
color:%@;
 style="%@"
 dir="rtl"
 dir="ltr"
<a href="
font-weight: bold;
font-style: italic;
text-decoration: underline;
text-decoration: line-through;
font-family: '%@';
font-size: %dpx;
color: %@;
background-color: %@;
<span style="
&#160;
<br/>
</span>
</a>
Parser
Filename from transferred file name: %@
Filename from local path: %@
Filename from last path component: %@
<FILE name="%@" width="%ld" height="%ld" datasize="%llu"
x-apple-anim-emoji
 %@="%@"
mime-type
uti-type
decryption-key
mmcs-url
mmcs-signature-hex
mmcs-owner
file-size
v32@?0@8@16^B24
Parsed file transfer: %@    user info: %@
</body></html>
SMSToSuper
SMILToSuper
Unexpected lack of PART, creating one
Adding attachmentPart %@ to latestPart %@
Found PART with attributes: %@
    element name: %@
    namespaceURI: %@
   qualifiedName: %@
         smsPart: %@
Ending SMSPart: %@
Found text part with attributes: %@
      latestPart: %@
        textPart: %@
CurrentTextPart %@ is eating found characters %@
SMS text parser found unexpected characters without a corresponding textPart! %@
Ending SMSPart(%@)'s textPart: %@
Found image part with attributes: %@
Ending SMSPart(%@)'s attachmentPart: %@
Found audio part with attributes: %@
Found video part with attributes: %@
Found ref part with attributes: %@
Type
Data
Filename
Path
Duration
text
audio
video
transfer-guid
transferredFilename
transfer-type
   Maximum byte length for attachments is: %d
     Part byte length for %d attachments will be: %d
     There are no attachments to consider
Enumerating parts in body %@
Found attribute. Value = [%@], string in range: %@
Found GUID for attachment part: %@
Found path for attachment part: %@
Invalid path %@ for file transfer: %@   error: %@
public.3gpp
public.3gp
public.png
public.jpg
public.jpeg
   Error: %@
   Output URLs: %@
   Output Contexts: %@
Renaming file %@ as it is too long
New path %@ old Path %@
Error moving file from path %@ to new path %@ with error %@
Error generating new file name. Not renaming 
updating content location. old content location %@
content location updated to using outPutPath %@ content location %@
Part:
  =>              Path: %@
  =>               UTI: %@
  =>               Tag: %@
  =>  Content Location: %@
  =>              MIME: %@
  =>         File Size: %llu
    Generated part: %@
  Setting part %@ into parts at index: %d
Failed transcoding file transfer: %@   error: %@
Error cleaning up linked path: %@  error: %@
Found text part. Generate text parts? %@
text_%d.txt
v40@?0@8{_NSRange=QQ}16^B32
Appending expressive send style message part for message %@
  All done part generation set for: %@   success: %@
SMSAttachment
AttachmentController: Told To Transcode and upload Parts of a Message to MMCS 
AttachmentController: Told To Transcode but the message had no parts, don't wake me up. 
Big size: %d    Small Size: %d
Source URL: %@  Link: %@
Transcode processing complete for transfer: %@  (Attempted Transcode: %@)
Transcoding succeeded with output URLs: %@
          Setting transferred filename: %@
Transcoding failed with error: %@
Failed transcoding transfer: %@
Transcoding
All URLs: %@
Compressed attachment: %@
           Input Path: %@
          Output Path: %@
              Success: %@
Send progress updated to %lld of %lld (%lld bps)
v32@?0Q8Q16Q24
Failed uploading transfer: %@   success: %@  error: %@
transfer data url: %@
Time taken: %f
Finished uploading transfer: %@   success: %@  error: %@
%@-%d
MMCS
  setting userinfo: %@  on transfer: %@
  setting complete success to NO because of attachment send result. (Error: %@)
Error cleaning up transcoded path: %@  error: %@
Error cleaning up output path: %@  error: %@
v40@?0@"NSURL"8@"NSURL"16@"NSError"24B32B36
  All done url set for: %@   success: %@
Failed coordinated read of: %@  (Error: %@)
No transfer found for guid: %@
OutgoingMessagesPowerAssertion
  All done transfer set for: %@   success: %@
Found already stored message: %@
   Has attachments present: %@
   We're missing an attachment at path: %@
   We're missing a transfer for guid: %@
   We already have all these transfers, just moving along as a success!
   We don't have all the attachments yet, we'll just re-download.
SMSAttachments
Starting network availablity check...
Network availability check complete: %@
   Cell available: %@
   WiFi available: %@
Checking message file tranfers: %@
 => No signature found, nothing to download here
 => Settled on signature: %@
SMSLocalAttachments
Starting local transfer of attachments
Received response for message GUID: %@ index: %lu
Attachment failed to be retrieved from paired device for message GUID: %@ index: %lu
v52@?0@"NSString"8Q16@"NSString"24@"NSData"32B40@"NSError"44
Small
v16@?0Q8
 Requesting file attachments for transfer %@
attachment-index
remote-file-request
SMSLocalAttacments
We have the sms service session %@ %@
_%lu
LocalAttachments
 Failed to send message to local device for Transfer %@, Failing
Attempting to locate message with Message Guid %@ and index %lu
Located Mesage with Message Guid %@
Message with Guid  is unfinished %@, Retrying it a bit 
Message with Guid is unfinished %@, No retried remain 
Located message with guid %@ attachments,  
Attempting to locate file transfer with guid %@ 
Located Transfer with Guid %@ 
Located Completed transfer with %@ 
Forwarding Attachment with guid %@ to local peer. Filepath %@
message-data
remote-file-response
Got success? %@
Transcoding Failed for Peer Relay:
Transfer Guid %@ for Message with %@ is not yet complete, Retrying it a bit 
Transfer Guid %@ for Message with %@ is not yet complete, no retries remain 
We have the message but no transfer guids - %@
Unable To locate Message with GUID %@, adding to pending requests to retry later
Received remote file response message %@
 Incomming response for message %@ attachment index %lu 
 Found completion block for attachment
 No completion block for attachment found
jpeg
cid:
MessageAttachmentSendableUTIs called with resourcePath %@
MessageSendableUTIs
plist
looking at path: %@
%@ %@
exists!
does not exist >__<
MessageAttachmentSendableUTIs got dict %@ from %@
Got sendable UTI list: %@
Transcoder received request to transcode: %@  transcodeInfo: %@
File doesn't exist at source path (%@), failing transcoding
Input URL is a directory, not transcoding
local-message-sent
local-message-error
<data of length %lu>
v44@?0@"SMSRelayPushHandler"8@"NSDictionary"16@"NSDictionary"24@32B40
Using Block Incoming Message
Exception: %@ in handler: %@ while executing: %@
Exception handling incoming message push: %@
Using Block Incoming Downlaod Message
Exception handling incoming download message  push: %@
Using Block Outgoing Message
Exception handling outgoing message  push: %@
Using Block Outgoing Download Message
Exception handling outgoing download message push: %@
Using Block Message Sent Message
Exception handling message sent push: %@
Using Block Read Reciept Message
Exception handling message read push: %@
Using Block Message Failures Message
Exception handling message send failure push: %@
Using Block Incomming Display Pin Code 
Using Block Incomming Enroll Me Request
_handleDeleteCommand: %@
Exception handling delete command: %@
Using Block Incomming pin Code Approval Response
Exception handling incomming local message push: %@
Exception handling incomming local outgoing push: %@
Using outDownloadMessageBlock
Using localIncomingDownloadMessageBlock
Exception handling incomming local sent message push: %@
Exception handling incomming local message read push: %@
Exception handling incoming local message error push: %@
Using block local remote file request
Exception handling incomming Remote File Request push: %@
Using block local remote file response
Exception handling incomming Remote File Response push: %@
Initing Push Handler %p
Deallocing Push Handler %p
Accepting incoming pushes
No longer accepting incoming pushes
Changing SMS Push Hander Regiration State to: %@
SMSReplayPushHandler
Received dictionary to replay %@
SMSReplay: Something was null. service %@ account %@ message %@ fromID %@
SMSReplay: Something was null. service %@ account %@ data %@ fromID %@
IncomingMessagePowerAssertion
Received IDS Nice message (Local Message) 
 Attempting to locate block for local message of type %@ 
Received message %@ for service %@ on account %@ with type %d 
Received message before first unlock. Storing it to replay
ReplayController: Got error trying to store sms relay message %@ error %@
Received Incomming Data %@ for service %@ on account %@ with type %d and context %@
SMSRelayMessageToSuper
name
width
height
datasize
inline-file
Updating SMS service with number: %@
Failed type check! {key: %@, class: %@}
zPLR
zPLR
zPLR
IMFeature__smsMmsBlastDoorEnabled
SMSServiceSession
IDSServiceDelegate
NSObject
IDSAccountRegistrationDelegate
SMSRelayPushHandlerListener
SuperToSMSRelayMessageParser
SMSToSuperParserContext
SMSToSuper_Default_Frame
SMSToSuper_PAR_Frame
SMSToSuper_TEXT_Frame
SMSToSuper_IMG_Frame
SMSToSuper_AUDIO_Frame
SMSToSuper_VIDEO_Frame
SMSToSuper_REF_Frame
SMSAttachmentController
SMSPart
SMSAttachmentPart
SMSTextPart
SMSRelayTranscodeController
SMSDictionaryLogging
SMSRelayPushHandler
IDSServiceDelegatePrivate
SMSRelayMessageToSuperParser
SMSRelayMessageToSuper_Default_Frame
SMSRelayMessageToSuper_FILE_Frame
_stripFZIDPrefix
sharedInstance
smsMmsBlastDoorEnabled
__im_ff_smsMmsBlastDoorEnabled
initWithAccount:service:
_setUpRelay
_updateRelayStatus
_registerForAccountChanges
_updatePhoneNumberCallerID
IMSynchronizePreferredSubscriptionMMSCapabilityToWatch
addListener:
setRegistered:
defaultCenter
_handleCapabilitiesChanged:
addObserver:selector:name:object:
allValues
invalidate
makeObjectsPerformSelector:
removeListener:
removeObserver:name:object:
dealloc
devices
countByEnumeratingWithState:objects:count:
deviceType
isLocallyPaired
arrayWithObjects:count:
_isConnectedOverBT:
sharedDaemon
isSetup
_registerForIncomingMessages:
sessionDidBecomeActive
sessionWillBecomeInactiveWithAccount:
length
_clearTimoutTimerForRelayMessageID:
_messageTimedOut:
scheduledTimerWithTimeInterval:target:selector:userInfo:repeats:
setObject:forKey:
objectForKey:
removeObjectForKey:
accounts
count
numberWithUnsignedInteger:
_checkAndSetRelayService
isDefaultPairedDevice
_addDeviceToAllowedSMSRelay:shouldSendApproval:
initWithService:
addDelegate:queue:
accountType
isActive
_hasRelayDevice
_hasPhoneNumberAliasActive
account
writeAccountDefaults:
updateMMSCapability
_callerIDAccountFromSettings
accountWithUniqueID:
displayName
im_registeredURIs
_appearsToBePhoneNumber
_isAliasActiveForSMSRelay:
addObject:
localizedCaseInsensitiveCompare:
sortedArrayUsingSelector:
firstObject
addRegistrationDelegate:queue:
isEqualToString:
supportsSMSRelay
supportsMMSRelay
_myCTPhoneNumber
_forwardMessageToPeers:messageType:guid:originalSender:hasAttachment:watchOnly:
isSMSRelayEnabled
initWithDictionary:
_FTCopyGzippedData
numberWithInteger:
numberWithBool:
dictionaryWithObjectsAndKeys:
sendDataToPeers:forcedCallerID:shouldFilterRecepients:requestProxySend:dontSendTo:
localDevice
isLocalDeviceProxyRegistered
integerValue
sendToLocalPeers:
_hasPeerDevices
_allowedDevicesforSMSRelay
isPhoneNumberEmergencyNumber:
defaultManager
_randomTemporaryPathWithFileName:
writeToFile:atomically:
numberWithDouble:
sendFilePath:topic:userInfo:transferID:encryptFile:progressBlock:completionBlock:
addEntriesFromDictionary:
profileID
stringWithFormat:
arrayWithArray:
uniqueID
_isDeviceATrustedHSA2Device:
isIDInList:ArrayToCheck:
isEqualToIgnoringCase:
accountHasAlias:aliastoCheck:
canSend
_localDeviceSupportsSMS
initWithFirst:second:
_dominentPhoneNumberAlias
_callerIDForRelay
phoneAliasForDominentPhoneAlias:registeredPhoneNumber:preferedCallerID:CTPhoneNumber:
accountForAlias:fromAccounts:
retrievePhoneAccountAndPhoneAliasFromIDSAccounts:
retrieveAccountAndPhoneAliasForAccounts:shouldFilterRecepients:requestProxySend:
first
second
objectForKeyedSubscript:
boolValue
mutableCopy
_deviceForCallerID:
_destinationForDevice:forcedIdentity:
dictionary
__imSetFromArray
sendMessage:fromAccount:toDestinations:priority:options:identifier:error:
_allowedIDSDevicesforSMSRelay
name
setWithArray:
pushToken
__imHexString
initWithObjects:
anyObject
identities
_stringForKey:
_setClearMessageSendTimer
removeObject:
_clearInactivityTimer
cancelPreviousPerformRequestsWithTarget:selector:object:
performSelector:withObject:afterDelay:
noteLastItemFromStorage:
noteItemFromStorage:
_approveSelfForSMSRelay
watchConnectedOverBT
_processReceivedDictionary:storageContext:withCompletionBlock:
_enqueueBlock:withTimeout:
stringGUID
initWithContentsOfFile:
receiveFileTransfer:topic:path:requestURLString:ownerID:signature:decryptionKey:fileSize:progressBlock:completionBlock:
handler:outgoingPlainTextMessage:toIdentifier:fromIdentifier:fromToken:messageGUID:timeStamp:isBeingReplayed:isInProxyMode:storageContext:
idsDeviceFromPushToken:
_forwardMessageToPeers:messageType:guid:originalSender:
_convertIMMessageItemDictionaryToIMMessageItem:
setTime:
guid
_markFromStorageIfNeeded:messageGUID:
__imArrayByApplyingBlock:
_isDefaultPairedDeviceRelayingLocally:
messageWithGUID:
errorCode
service
chatRegistry
generateUnusedChatIdentifierForGroupChatWithAccount:
__imFirstObject
numberWithInt:
existingChatForIDs:account:style:
existingChatForID:account:
chatIdentifier
style
canonicalizeChatIdentifier:style:
didJoinChat:style:displayName:groupID:handleInfo:
_numberForKey:
intValue
_updateShouldForceToSMSForChatWithIdentifier:style:shouldForceToSMS:
loginID
setSender:
_callerIDUsingFromIdentifier:
setDestinationCallerID:
lastAddressedLocalHandle
date
time
didSendMessage:forChat:style:forceDate:
sendCTMessageFromIMMessageItem:forChat:chat:style:
processMessageForSending:toChat:style:allowWatchdog:completionBlock:
_updateLastAddressedIDsIfNeededForChatWithIdentifier:style:lastAddressedHandle:lastAddressedSIMID:
sendUnApproveToDevice:extraKeys:
idsDeviceForFromID:
retrieveAttachmentsForMessage:displayID:token:completionBlock:
containsObject:
notifyDidSendMessageID:shouldNotify:
_removeOriginatedMessage:
initWithIdentifier:timeout:
didReceiveMessageReadForMessageID:date:completionBlock:
didReceiveError:forMessageID:forceError:
objectAtIndex:
cloudKitSyncingEnabled
_handleDeleteCommandWithMessageDictionary:
remoteFileResponse:
remotefileRequest:attempts:
handler:outgoingDownloadMessage:toIdentifier:fromIdentifier:fromToken:messageGUID:timeStamp:isBeingReplayed:storageContext:
handler:messageIDSent:toIdentifier:fromIdentifier:timeStamp:storageContext:
handler:messageIDRead:timeStamp:toIdentifier:fromIdentifier:storageContext:
linkedUserURIs
stringWithLTREmbedding
_challengedDevicesforSMSRelay
isHSATrusted
_addDeviceToChallengedSMSRelay:
_sendPinCodeToDeviceAndPromptForResponse:
_deviceAllowedToDisableRelay:
fileTransferGUIDs
balloonBundleID
transferForGUID:
type
_isValidPhoneNumber:forCountryCode:
hasPrefix:
telephoneNumber
dictionaryWithObject:forKey:
idsDeviceFromUniqueID:
_removeDeviceFromAllowedSMSRelay:
sendApprovalEnrollMe
sendApprovalResponseToDevice:enteredCorrectly:wasCancelled:
sendApprovalDisplayPinToDevice:
bundleForClass:
modelIdentifier
marketingNameForModel:
arrayWithObject:
userNotificationWithIdentifier:timeout:alertLevel:displayFlags:displayInformation:
response
responseInformation
numberFromString:
isEqualToNumber:
addUserNotification:listener:completionHandler:
randomSixDigitCode
sendEnrollmentRelatedMessageOverIDS:deviceToSendTo:
isEqualToData:
deviceForFromID:
broadcaster
accountID
capabilities
account:capabilitiesChanged:
copy
_isMessageCategorized:
_getSpamExtensionName
_clearSpamMapForMessageGUID:
_executeSpamRelayCompletionBlockForMessageGuid:category:
_clearSpamRelayMapForMessageGUID:
stringByAppendingFormat:
_storeSpamCompletionBlock:forMessageGUID:
_checkIfMessageIsSpam:fromSender:withGuid:shouldRegister:
isFilterUnknownSendersEnabled
_isSpamFilteringEnabled
_areAllParticipantsUnknown:fromSender:
_numberOfRepliesFor:fallbackFilterCategory:
_createNewChatIdentifierFromChatIdentifier:andCategoryLabel:
getNumberOfTimesRespondedToThread
_executeSpamCompletionBlockForMessageGuid:category:shouldRegister:
_getSpamExtensionID
initWithExtensionIdentifier:
string
setMessageBody:
action
isMainThread
performQueryRequest:completion:
addBlock:withTimeout:forKey:description:
destinationCallerID
didChangeMemberStatus:forHandle:fromHandle:unformattedNumber:countryCode:forChat:style:account:destinationCallerID:
joinChat:handleInfo:style:groupID:joinProperties:
joinChat:handleInfo:style:groupID:lastAddressedHandle:lastAddressedSIMID:joinProperties:
didJoinChat:style:displayName:groupID:lastAddressedHandle:lastAddressedSIMID:handleInfo:
didLeaveChat:style:
chatForChatIdentifier:style:
timeRead
didSendMessageReadReceiptForMessageID:
didSendDeliveredQuietlyReceiptForMessageID:
didSendNotifyRecipientCommandForMessageID:
didSendMessagePlayedReceiptForMessageID:
didSendMessageSavedReceiptForMessageID:
payloadData
localPath
array
lastObject
guidForNewOutgoingTransferWithLocalURL:
initWithString:
appendAttributedString:
copyForBackwardsCompatibility
expressiveSendStyleID
setExpressiveSendStyleID:
setFileTransferGUIDs:
setBody:
transcodeFallbackFileTransferPayloadData:balloonBundleID:attachments:completionBlock:
isAutoloopVideo
lastAddressedSIMID
IMMMSMaximumMessageByteCountForPhoneNumber:simID:
initWithCapacity:
localURL
_generateLinkForURL:
transcoderUserInfo
transcodeFallbackFileTransferContents:utiType:allowUnfilteredUTIs:target:sizes:commonCapabilities:maxDimension:transcoderUserInfo:representations:completionBlock:
coordinateReadingItemAtURL:options:error:byAccessor:
indexOfObject:
replaceObjectAtIndex:withObject:
sharedInstanceForBagType:
setErrorCode:
didSendMessage:forChat:style:
sendMessage:toChat:style:
body
trackEvent:
isFinished
associatedMessageType
isSticker
_enableBackwardsCompatibility
initForReadingFromData:error:
decodeObjectOfClasses:forKey:
sender
flags
initWithSender:time:body:attributes:fileTransferGUIDs:flags:error:guid:threadIdentifier:
isValidMMS:
useStandalone
_addOriginatedMessage:
setUseStandalone:
supportsCellularData
_isOneOfMyActiveAlias:
_localDeviceSupportsSMSAndDoesNotHaveAPhoneNumberForSIMID:
notificationIDSTokenURI
setNotificationIDSTokenURI:
_setTimeoutTimerForRelayMessageID:timeout:
allExistingSupportedServiceChatsWithIdentifier:style:
updateLastSeenMessageGuidIfNeeded:
isInternationalSpamFilteringEnabled
allExistingChatsWithIdentifier:style:
receivedBlackholeError
updateReceivedBlackholeError:
broadcasterForChatListeners
account:chat:style:chatProperties:messageUpdated:
remapMessageError:toError:forChat:completion:
participants
unformattedID
countryCode
_convertIMMessageItemToDictionary:
isProxyRegistered
_clearMapForMessageGUID:
processAttachmentsForPeerRelayForMessage:lastAddressHandle:lastAddressedSIMID:completionBlock:uploadFailureBlock:
_forwardMessageToPeers:messageType:guid:originalSender:watchOnly:
sharedMonitor
enableEmergencyModeWithError:
refreshServiceCapabilities
serviceSessionDidLoginWithAccount:
serviceLoginStatus
setLoginStatus:message:
serviceSessionDidLogoutWithAccount:
IMMMSEnabledForPhoneNumber:simID:
_syncedMMSEnabledValue
IMSynchronizeMMSCapabilityToWatch:
_checkMMSEnablementForPhoneNumber:simID:
_synchronizeMMSCapabilityToWatch:
compare:
handle
subject
replyToGUID
initWithAttributedString:
parseContext:
outHTML
isSimpleString
setHandle:
setService:
setGuid:
setFlags:
setPlainBody:
setSubject:
initWithContent:
setReplyToGUID:
acquireAssertionToUnsuspendProcess
addMessagesID:
_arrayForKey:
_dataForKey:
initWithData:encoding:
newlineCharacterSet
characterAtIndex:
characterIsMember:
appendString:
trimmedString
orderedParts
addObjectsFromArray:
stringByRemovingURLEscapes
pathExtension
defaultHFSFileManager
pathExtensionForMIMEType:
stringByAppendingPathExtension:
lastPathComponent
guidForNewIncomingTransferWithFilename:isDirectory:totalBytes:hfsType:hfsCreator:hfsFlags:
assignTransfer:toAccount:otherPerson:
acceptTransfer:path:
fileExistsAtPath:
fileURLWithPath:
_setLocalURL:
startFinalizingTransfer:
failTransfer:error:
failTransferPreviewGeneration:
updateTransfer:withPreviewSize:forConstraints:
generatePreviewForTransfer:attachmentPath:balloonBundleID:completionBlock:
attachmentParts
contentLocation
removeObjectIdenticalTo:
textParts
text
deleteCharactersInRange:
removeAttribute:range:
initWithString:attributes:
arrayByApplyingSelector:
setAccountID:
setReplaceID:
IMMMSGroupTextOnlyMessagesSendAsMMSForPhoneNumber:simID:
IMMMSEmailAddressToMatchForPhoneNumber:simID:
_extractSMSSenderAddress:
isBlackholed
updateIsBlackholed:
smsHandshakeState
trackSpamEvent:
updateSMSHandshakeState:
existingiMessageChatForID:withChatStyle:
createHandleInfoForParticipants:unformattedIDs:countryCodes:isGroupChat:
didJoinChat:style:displayName:groupID:handleInfo:category:spamExtensionName:
existingChatWithIdentifier:account:
_updateCategoryForChat:andMessage:category:shouldRegister:spamExtensionName:
_updateLastAddressedIDsIfNeededForChatWithIdentifier:style:lastAddressedHandle:lastAddressedSIMID:iMessageCapability:
didReceiveReplaceMessageID:forChat:style:
numberWithLong:
dictionaryWithObjects:forKeys:count:
trackEvent:withDictionary:
sendNotificationMessageIfNeededForIncomingMessageFromChatIdentifier:
didReceiveMessage:forChat:style:fromIDSID:
updateSMSCategory:
updateSMSSpamExtensionNameChatProperty:
updateShouldForceToSMS:
updateLastAddressedSIMID:
serviceName
updateLastAddressedHandle:
updateLastAddressedHandle:forceUpdate:
userInfo
characterSetWithCharactersInString:
stringByRemovingCharactersFromSet:
_addDefaultPairedDeviceToAllowedSMSRelayList
existingChatWithGUID:
_sendMessageToAllSMSRelayDevicesWithOptions:
blocklistGroupId:
removeChat:
leftChat:
existingChatsWithGroupID:
_copyForEnumerating
deleteMessagesWithChatIdentifiers:style:onServices:
historicalMessageGUIDsDeleted:chatGUIDs:queryID:
deleteMessageGUIDs:
objectAtIndexedSubscript:
_convertDeletedPartsDict:toIndexSet:toMap:
_removeAndDeleteFileTransferWithGUID:
_messageItemWithIndexesDeleted:subRangesToDeleteMapping:deleteSubject:deleteTransferCallback:createItemCallback:fromMessageItem:
_updateMessage:messageContext:
initWithObjectsAndKeys:
setObject:forKeyedSubscript:
relayDictionaryToPeers:requiresUpload:
_receivedSMSDictionary:requiresUpload:isBeingReplayed:
replayMessage:
isConnected
isNearby
isEqual:
class
self
performSelector:
performSelector:withObject:
performSelector:withObject:withObject:
isProxy
isKindOfClass:
isMemberOfClass:
conformsToProtocol:
respondsToSelector:
retain
release
autorelease
retainCount
zone
hash
superclass
description
debugDescription
TQ,R
T#,R
T@"NSString",R,C
service:account:incomingOpportunisticData:withIdentifier:fromID:context:
service:didSendOpportunisticDataWithIdentifier:toIDs:
service:account:incomingMessage:fromID:context:
service:account:incomingData:fromID:context:
service:account:incomingUnhandledProtobuf:fromID:context:
service:account:incomingResourceAtURL:fromID:context:
service:account:incomingResourceAtURL:metadata:fromID:context:
service:account:incomingPendingMessageOfType:fromID:context:
service:activeAccountsChanged:
service:devicesChanged:
service:nearbyDevicesChanged:
service:connectedDevicesChanged:
service:linkedDevicesChanged:
service:account:identifier:didSendWithSuccess:error:
service:account:identifier:didSendWithSuccess:error:context:
service:account:identifier:sentBytes:totalBytes:
service:account:identifier:hasBeenDeliveredWithContext:
service:account:identifier:fromID:hasBeenDeliveredWithContext:
service:account:inviteReceivedForSession:fromID:
service:account:inviteReceivedForSession:fromID:withOptions:
service:account:inviteReceivedForSession:fromID:withContext:
service:account:receivedGroupSessionParticipantUpdate:
service:account:receivedGroupSessionParticipantDataUpdate:
serviceSpaceDidBecomeAvailable:
serviceAllowedTrafficClassifiersDidReset:
service:didSwitchActivePairedDevice:acknowledgementBlock:
account:registrationStatusInfoChanged:
account:aliasesChanged:
account:vettedAliasesChanged:
account:profileChanged:
account:loginChanged:
account:displayNameChanged:
account:pseudonymsChanged:
refreshRegistrationForAccount:
handler:incomingPlainTextMessage:toIdentifier:fromIdentifier:timeStamp:storageContext:
handler:incomingDownloadMessage:toIdentifier:fromIdentifier:timeStamp:storageContext:
handler:outgoingPlainTextMessage:toIdentifier:fromIdentifier:fromToken:messageGUID:timeStamp:isBeingReplayed:storageContext:
handler:deleteCommand:toIdentifier:fromIdentifier:fromToken:timeStamp:needsDeliveryReceipt:deliveryContext:storageContext:
handler:messageIDSendFailure:toIdentifier:fromIdentifier:timeStamp:storageContext:
handler:localIncommingMessage:storageContext:
handler:localOutgoingMessage:isBeingReplayed:storageContext:
handler:localOutgoingDownloadMessage:isBeingReplayed:storageContext:
handler:localIncomingDownloadMessage:storageContext:
handler:localMessageSent:storageContext:
handler:localMessageRead:storageContext:
handler:localMessageError:storageContext:
handler:localFileRequest:storageContext:
handler:localFileResponse:storageContext:
handler:incomingDisplayPinCode:toIdentifier:fromIdentifier:fromToken:messageGUID:timeStamp:storageContext:
handler:incomingEnrollMeRequest:toIdentifier:fromIdentifier:fromToken:messageGUID:timeStamp:storageContext:
handler:incomingResponseForApproval:toIdentifier:fromIdentifier:fromToken:messageGUID:timeStamp:storageContext:
_isUsingSMSWatchService
_localDeviceSupportsSMSAndHasAPhoneNumber
_localDeviceSupportsRelay
_areiMessageAndiCloudAccountTheSame:
_enableSMSRelayForDevice:
_shouldAutoEnableDevicesforSMSRelay:
_addHSA2PairedDevicesToAllowedSMSRelayList
_IDSService
_cleanUnformattedPhoneNumber:countryCode:
enrollDeviceInSMSRelay:
unEnrollDeviceInSMSRelay:
enrollSelfDeviceInSMSRelay
_ignoredDevicesforSMSRelay
_ignoredIDSDevicesforSMSRelay
_challengedIDSDevicesforSMSRelay
_addDeviceToIgnoredSMSRelay:
_removeDeviceFromIgnoredSMSRelay:
_removeDeviceFromChallengedSMSRelay:
_storeSpamRelayCompletionBlock:forMessageGUID:
_smsSpamCheck:withMessageBody:withGuid:sender:shouldRegister:
_shouldCheckChatForSMSSpam:shouldRegister:participants:sender:fallbackFilterCategory:
invitePersonInfo:withMessage:toChat:style:
joinChat:handleInfo:style:joinProperties:
leaveChat:style:
sendReadReceiptForMessage:toChatID:identifier:style:
sendDeliveredQuietlyReceiptForMessage:forIncomingMessageFromIDSID:toChatGuid:identifier:style:withWillSendToDestinationsHandler:
sendNotifyRecipientCommandForMessage:toChatGuid:identifier:style:
sendPlayedReceiptForMessage:toChatID:identifier:style:
sendSavedReceiptForMessage:toChatID:identifier:style:
sendDeliveryReceiptForMessageID:toID:deliveryContext:needsDeliveryReceipt:callerID:account:
sendSyndicationAction:toChatsWithIdentifiers:
_blastDoorProcessingWithIMMessageItem:chat:account:fromToken:fromIDSID:fromIdentifier:toIdentifier:participants:groupName:groupID:isEncrypted:isFromMe:isLastFromStorage:isFromStorage:hideLockScreenNotification:wantsCheckpointing:needsDeliveryReceipt:messageBalloonPayloadAttachmentDictionary:inlineAttachments:attributionInfoArray:nicknameDictionary:availabilityVerificationRecipientChannelIDPrefix:messageContext:completionBlock:
loginServiceSessionWithAccount:
logoutServiceSessionWithAccount:
_registerForCTNotifications
_unregisterForCTNotifications
_readMMSUserOverrideForSingleSubscription
_clearPendingIncomingMessageQueue
sendDeleteCommand:forChatGUID:
_getStorageDictionaryUsingMsgDict:requiresUpload:
enqueReplayMessageCallback:
scheduleTransactionLogTask:
setChatRegistry:
_outgoingRelayMessageTimerMap
_outgoingMessageMap
_outgoingMessageBlockMap
_outgoingMessageFailureMap
_incomingMessageMultiQueue
_spamBlockMap
_spamRelayBlockMap
_isRegistered
_hasClearedMesageQueue
_relayService
_smsRelayService
_smsWatchService
_currentRelayDevices
_currentRelayAccounts
_smsRelayPushHandler
_originatedMessages
_pendingOriginatedMessagesTimer
_pendingRelayApprovalRequests
_pendingCodesToDevicesForApproval
_chatRegistry
T@"IMDChatRegistry",&,N,V_chatRegistry
TB,R,N
unsignedIntValue
currentHandler
stringWithUTF8String:
handleFailureInFunction:file:lineNumber:description:
unsignedLongLongValue
dateWithTimeIntervalSince1970:
IMMMSMaxRecipientsForPhoneNumber:simID:
unsignedIntegerValue
valueWithBytes:objCType:
arrayWithObjects:
appendFormat:
absoluteString
parser:foundAttributes:inRange:fileTransferGUID:filename:bookmark:width:height:emoji:
transferredFilename
attributesOfItemAtPath:error:
fileSize
stringValue
MIMETypeOfPath:
UTITypeOfPath:
enumerateKeysAndObjectsUsingBlock:
dictionaryWithDictionary:
resultsForLogging
parserDidStart:bodyAttributes:
parser:foundAttributes:inRange:characters:
parser:foundAttributes:inRange:fileTransferGUID:filename:bookmark:width:height:
parserDidEnd:
shouldPreprocess
parser:preprocessedAttributesForAttributes:range:
_outHTML
_isSimpleString
T@"NSString",R,&,N,V_outHTML
TB,R,N,V_isSimpleString
_addPart:
_orderedParts
_currentTextPart
T@"NSArray",R,&,N,V_orderedParts
parser:context:foundCharacters:
initWithContentLocation:
addAttachmentPart:
_addAttachmentPartWithSource:toContext:
parser:context:didStartElement:namespaceURI:qualifiedName:attributes:
parser:context:didEndElement:namespaceURI:qualifiedName:
addTextPart:
appendText:
lowercaseString
IMiMessageMaxTransferFileSizeForWifiForPhoneNumber:cellSize:serverConfigurationBag:phoneNumber:simID:
IMiMessageMaxTransferAudioFileSizeForWifiForPhoneNumber:cellSize:serverConfigurationBag:phoneNumber:simID:
IMiMessageMaxTransferVideoFileSizeForWifiForPhoneNumber:cellSize:serverConfigurationBag:phoneNumber:simID:
substringWithRange:
attribute:atIndex:effectiveRange:
startTransfer:
endTransfer:
errorWithDomain:code:userInfo:
pathExtensionForUTIType:
mimeType
stringByDeletingPathExtension
path
stringByDeletingLastPathComponent
substringToIndex:
stringByAppendingPathComponent:
moveItemAtPath:toPath:error:
doubleValue
setMessageGUID:
updateTransfer:currentBytes:totalBytes:
removeItemAtURL:error:
transcodeFileTransferContents:utiType:allowUnfilteredUTIs:target:sizes:commonCapabilities:maxDimension:transcoderUserInfo:representations:completionBlock:
dataUsingEncoding:
enumerateAttribute:inRange:options:usingBlock:
_localizedBackwardsCompatibleExpressiveSendText
_setNeedsWrapper:
_sizeLimitsForTransfer:bigSize:smallSize:
shouldSendLowResolutionOnly
setTransferredFilename:
failTransfer:reason:
timeIntervalSinceReferenceDate
stringByResolvingAndStandardizingPath
transferDataURL
code
setUserInfo:
filename
removeItemAtPath:error:
compressFileTransfer:completionBlock:
transcodeFileTransferContents:utiType:transcoderUserInfo:highQualityMaxByteSize:lowQualityMaxByteSize:representations:completionBlock:
isScreenLit
retrieveLocalFileTransfer:attachmentIndex:path:requestURLString:ownerID:signature:decryptionKey:requestedSize:fileSize:progressBlock:completionBlock:
initWithFlags:options:timeout:wifiTimeout:completionBlock:
start
sharedAccountController
anySessionForServiceName:
internalName
pendingRemoteFileRequests
setPendingRemoteFileRequests:
dataWithContentsOfFile:
maxTransferFileSizeForWifi:cell:
maxTransferAudioFileSizeForWifi:cell:
maxTransferVideoFileSizeForWifi:cell:
processAttachmentsForMessage:generateTextParts:lastAddressedHandle:lastAddressedSIMID:completionBlock:
_connectionMap
_fileTransferMap
_contextMap
_blockMap
_peerCompletionBlocks
_pendingRemoteFileRequests
T@"NSMutableSet",&,N,V_pendingRemoteFileRequests
replaceOccurrencesOfString:withString:options:range:
hasSuffix:
_textParts
_attachmentParts
T@"NSArray",R,&,N,V_textParts
T@"NSArray",R,&,N,V_attachmentParts
init
_contentLocation
T@"NSString",R,&,N,V_contentLocation
_processReceivedDictionaryInBlastDoor:storageContext:withCompletionBlock:
dictionaryWithContentsOfFile:
_text
T@"NSString",R,&,N,V_text
fileExistsAtPath:isDirectory:
resourcePath
numberWithUnsignedLong:
_copyMessageDictionaryForLogging
copyHandlersForEnumerating
_IDSDataFromBase64String:
removeDelegate:
commandToHandlerBlock
allKeys
initWithService:commands:
_updateListenerIfNeeded
_acceptIncomingPushes
_ignoreIncomingPushes
containsObjectIdenticalTo:
nonRetainingArray
initWithData:accountUniqueID:fromID:loginID:serviceName:
initWithDictionary:accountUniqueID:fromID:loginID:serviceName:
dictionaryValue
fromID
_service:account:incomingTopLevelMessage:fromID:messageContext:isBeingReplayed:
dataValue
_service:account:incomingData:fromID:context:isBeingReplayed:
_FTOptionallyDecompressData
localCommandToHandlerBlock
isUnderFirstDataProtectionLock
isRecordingReplayDB
_messageReplayObjectWithService:account:incomingTopLevelMessage:fromID:
storeMessage:type:error:
outgoingResponseIdentifier
originalCommand
_messageReplayObjectWithService:account:incomingData:fromID:
service:account:messageIdentifier:alternateCallbackID:updatedWithResponseCode:error:lastCall:
service:account:messageIdentifier:alternateCallbackID:updatedWithResponseCode:error:lastCall:messageContext:
service:account:identifier:alternateCallbackID:willSendToDestinations:skippedDestinations:registrationPropertyToDestinations:
service:account:incomingTopLevelMessage:fromID:messageContext:
service:token:time:error:
service:didFlushCacheForRemoteURI:fromURI:guid:
service:didHintCheckingTransportLogWithReason:
service:didUpdatePseudonymsWithChanges:
initWithIDSAccount:
registered
_account
_handlers
_registeredForPush
_isListening
TB,N
registration
removeObjectsForKeys:
longLongValue
appendInlineImageWithGUID:filename:width:height:emoji:
B16@0:8
B24@0:8@16
#16@0:8
@16@0:8
@24@0:8:16
@32@0:8:16@24
@40@0:8:16@24@32
B24@0:8#16
B24@0:8:16
Vv16@0:8
Q16@0:8
^{_NSZone=}16@0:8
B24@0:8@"Protocol"16
@"NSString"16@0:8
v64@0:8@16@24@32@40@48@56
v40@0:8@16@24@32
v56@0:8@16@24@32@40@48
v56@0:8@16@24q32@40@48
v32@0:8@16@24
v52@0:8@16@24@32B40@44
v60@0:8@16@24@32B40@44@52
v56@0:8@16@24@32q40q48
v48@0:8@16@24@32@40
v24@0:8@16
v40@0:8@16@24@?32
v64@0:8@"IDSService"16@"IDSAccount"24@"NSData"32@"NSString"40@"NSString"48@"IDSMessageContext"56
v40@0:8@"IDSService"16@"NSString"24@"NSArray"32
v56@0:8@"IDSService"16@"IDSAccount"24@"NSDictionary"32@"NSString"40@"IDSMessageContext"48
v56@0:8@"IDSService"16@"IDSAccount"24@"NSData"32@"NSString"40@"IDSMessageContext"48
v56@0:8@"IDSService"16@"IDSAccount"24@"IDSProtobuf"32@"NSString"40@"IDSMessageContext"48
v56@0:8@"IDSService"16@"IDSAccount"24@"NSURL"32@"NSString"40@"IDSMessageContext"48
v64@0:8@"IDSService"16@"IDSAccount"24@"NSURL"32@"NSDictionary"40@"NSString"48@"IDSMessageContext"56
v56@0:8@"IDSService"16@"IDSAccount"24q32@"NSString"40@"IDSMessageContext"48
v32@0:8@"IDSService"16@"NSSet"24
v32@0:8@"IDSService"16@"NSArray"24
v52@0:8@"IDSService"16@"IDSAccount"24@"NSString"32B40@"NSError"44
v60@0:8@"IDSService"16@"IDSAccount"24@"NSString"32B40@"NSError"44@"IDSMessageContext"52
v56@0:8@"IDSService"16@"IDSAccount"24@"NSString"32q40q48
v48@0:8@"IDSService"16@"IDSAccount"24@"NSString"32@40
v56@0:8@"IDSService"16@"IDSAccount"24@"NSString"32@"NSString"40@48
v48@0:8@"IDSService"16@"IDSAccount"24@"IDSSession"32@"NSString"40
v56@0:8@"IDSService"16@"IDSAccount"24@"IDSSession"32@"NSString"40@"NSDictionary"48
v56@0:8@"IDSService"16@"IDSAccount"24@"IDSSession"32@"NSString"40@"NSData"48
v40@0:8@"IDSService"16@"IDSAccount"24@"IDSGroupSessionParticipantUpdate"32
v24@0:8@"IDSService"16
v40@0:8@"IDSService"16@"IDSDevice"24@?<v@?>32
v32@0:8@"NSString"16@"NSDictionary"24
v32@0:8@"NSString"16@"NSArray"24
v32@0:8@"NSString"16@"NSString"24
v24@0:8@"NSString"16
v84@0:8@16@24@32@40@48@56@64B72@76
v88@0:8@16@24@32@40@48@56@64@72@80
v44@0:8@16@24B32@36
v80@0:8@16@24@32@40@48@56@64@72
v64@0:8@"SMSRelayPushHandler"16@"NSDictionary"24@"NSString"32@"NSString"40@"NSNumber"48@"NSNumber"56
v84@0:8@"SMSRelayPushHandler"16@"NSDictionary"24@"NSString"32@"NSString"40@"NSData"48@"NSString"56@"NSNumber"64B72@"NSNumber"76
v88@0:8@"SMSRelayPushHandler"16@"NSDictionary"24@"NSString"32@"NSString"40@"NSData"48@"NSNumber"56@"NSNumber"64@"NSDictionary"72@"NSNumber"80
v64@0:8@"SMSRelayPushHandler"16@"NSString"24@"NSString"32@"NSString"40@"NSNumber"48@"NSNumber"56
v64@0:8@"SMSRelayPushHandler"16@"NSString"24@"NSNumber"32@"NSString"40@"NSString"48@"NSNumber"56
v40@0:8@"SMSRelayPushHandler"16@"NSDictionary"24@"NSNumber"32
v44@0:8@"SMSRelayPushHandler"16@"NSDictionary"24B32@"NSNumber"36
v40@0:8@"SMSRelayPushHandler"16@"NSString"24@"NSNumber"32
v80@0:8@"SMSRelayPushHandler"16@"NSDictionary"24@"NSString"32@"NSString"40@"NSData"48@"NSString"56@"NSNumber"64@"NSNumber"72
@32@0:8@16@24
v16@0:8
v32@0:8@16d24
v48@0:8@16q24@32@40
v52@0:8@16q24@32@40B48
v56@0:8@16q24@32@40B48B52
B28@0:8@16B24
v24@0:8@?16
B32@0:8@16@24
@48@0:8@16@24@32@40
@24@0:8@16
@32@0:8@16B24B28
B48@0:8@16@24B32B36@40
v88@0:8@16@24@32@40@48@56@64B72B76@80
v44@0:8@16@24@32C40
v28@0:8@16B24
v32@0:8@16B24B28
B32@0:8@?16@24
v36@0:8@16q24B32
v32@0:8@16q24
B24@0:8q16
v52@0:8@?16@24@32@40B48
B52@0:8@16B24@28@36^q44
q32@0:8@16^q24
v44@0:8@16@24@32B40
v32@0:8@?16d24
v44@0:8@16@24C32@36
v52@0:8@16@24C32@36@44
v68@0:8@16@24C32@36@44@52@60
v28@0:8@16C24
v60@0:8@16@24@32@40C48@?52
v184@0:8@16@24@32@40@48@56@64@72@80@88B96B100B104B108B112B116@120@128@136@144@152@160@168@?176
v48@0:8@16@24C32B36@?40
v36@0:8@16@24C32
C16@0:8
v20@0:8B16
@44@0:8@16@24@32B40
v52@0:8@16@24q32B40@44
v32@0:8@16C24B28
v44@0:8@16C24@28@36
v52@0:8@16C24@28@36q44
@28@0:8@16B24
@"NSMutableDictionary"
@"IMMultiQueue"
@"IDSService"
@"NSArray"
@"NSSet"
@"SMSRelayPushHandler"
@"NSMutableSet"
@"IMDChatRegistry"
v56@0:8@16@24{_NSRange=QQ}32@48
v88@0:8@16@24{_NSRange=QQ}32@48@56@64@72@80
v96@0:8@16@24{_NSRange=QQ}32@48@56@64@72@80@88
@48@0:8@16@24{_NSRange=QQ}32
@"NSMutableString"
@"NSMutableArray"
@"SMSTextPart"
v32@0:8^Q16^Q24
Q32@0:8^Q16^Q24
v40@0:8@16^Q24^Q32
v52@0:8@16B24@28@36@?44
v56@0:8@16@24@32@?40@?48
v48@0:8@16@24@32@?40
v104@0:8@16Q24@32@40@48@56@64@72Q80@?88@?96
@"NSString"
v72@0:8@16@24@32Q40Q48q56@?64
v68@0:8@16@24@32@40q48@56B64
v76@0:8@16@24@32@40q48@56B64@68
v72@0:8@16@24@32@40@48@56@64
v48@0:8@16@24d32@40
v68@0:8@"IDSService"16@"IDSAccount"24@"NSString"32@"NSString"40q48@"NSError"56B64
v76@0:8@"IDSService"16@"IDSAccount"24@"NSString"32@"NSString"40q48@"NSError"56B64@"IDSMessageContext"68
v72@0:8@"IDSService"16@"IDSAccount"24@"NSString"32@"NSString"40@"NSArray"48@"NSArray"56@"NSDictionary"64
v56@0:8@"IDSService"16@"IDSAccount"24@"NSDictionary"32@"NSString"40@48
v48@0:8@"IDSService"16@"NSString"24d32@"NSError"40
v48@0:8@"IDSService"16@"NSString"24@"NSString"32@"NSString"40
v32@0:8@"IDSService"16q24
v60@0:8@16@24@32@40@48B56
@"IDSAccount"
