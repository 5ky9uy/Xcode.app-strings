HMBMirrorInput
block: %@ / %lu
updateModel: %@.%@ externalID: %@
removeModelWithID: %@
removeModelWithExternalID: %@
commiting with options: %@
commit failed with error: %@
commit succeeded!
block aborted!
localZone
T@"HMBLocalZone",R,W,N,V_localZone
block
T@"HMBLocalSQLContextInputBlock",R,N,V_block
activity
T@"HMFActivity",R,N,V_activity
HMBPBO.m
HMBPBO.label
HMBPBO.enqueue
HMBPBO.delegate
HMBPBO.parent
HMBPBO.block
HMBPBO.mn
HMBPBO.mp
HMBPBO.qos
HMBPBO.mi
HMBPBO.r
v32@?0@"NSString"8@16^B24
<%@ message: %@ identifier: %@>
<%@ label: %@>
supportsSecureCoding
TB,R
label
T@"NSString",&,N,V_label
messagePayload
T@"NSDictionary",&,N,V_messagePayload
messageName
T@"NSString",&,N,V_messageName
messageResponseHandler
T@?,C,N,V_messageResponseHandler
messageTransactionIdentifier
T@"NSUUID",&,N,V_messageTransactionIdentifier
enqueueExternalOutput
TB,N,V_enqueueExternalOutput
performDelegateCallbacks
TB,N,V_performDelegateCallbacks
rollbackIfUnpushedForMirror
TB,N,V_rollbackIfUnpushedForMirror
changeSource
TQ,R,N,V_changeSource
qualityOfService
Tq,N,V_qualityOfService
T@"HMFActivity",&,N,V_activity
mirror trigered by: %@
<HMBProcessingOptionsMirror: row: %lu parent: %@>
parentOptions
T@"HMBProcessingOptions",&,N,V_parentOptions
blockRow
TQ,N,V_blockRow
mirrorOutputResult
T@"NAFuture",R,N,V_mirrorOutputResult
actions
T@"NAFuture",R,N,V_actions
zoneID
needsZoneCreation
v8@?0
cloudZone
T@"HMBCloudZone",W,N,V_cloudZone
T@"HMBCloudZoneID",&,D,N
T@"NSNumber",&,D,N
share
T@"CKShare",&,D,N
Failed Sanity (model or modelID must not be nil): %@ %@
Failed Sanity (provided model ID does not match model's model ID: %@ %@
Failed Sanity (provided model's parentModelID does not match provided parent's modelID: %@ %@
Failed init parent.
Failed model population %@
HMBUI.u
HMBUI.t
HMBUI.c
HMBUI.czi
HMBUI.dc
HMBShareInvitation
Share URL
Token
Context
Cloud Zone ID
Date Created
Could not initialize from decoded shareURL: %@ token: %@ context: %@ cloudZoneID: %@ dateCreated: %@
shareURL
T@"NSURL",R,N,V_shareURL
token
T@"CKDeviceToDeviceShareInvitationToken",R,N,V_token
context
T@"HMBShareInvitationContext",R,N,V_context
cloudZoneID
T@"HMBCloudZoneID",R,N,V_cloudZoneID
dateCreated
T@"NSDate",R,N,V_dateCreated
TQ,R,N,V_blockRow
type
TQ,R,N,V_type
optionsData
T@"NSData",R,N,V_optionsData
<RowItem: %lu  eid: %@  ed: %@  encoding: %lu data: %@>
itemRow
TQ,R,N,V_itemRow
externalID
T@"NSData",R,N,V_externalID
externalData
T@"NSData",R,N,V_externalData
modelData
T@"NSData",R,N,V_modelData
modelEncoding
TQ,R,N,V_modelEncoding
previous
T@"HMBModel",R,N,V_previous
update
T@"HMBModel",R,N,V_update
recordRow
TQ,N,V_recordRow
TQ,N,V_itemRow
modelID
T@"NSUUID",R,N,V_modelID
modelSchema
T@"NSUUID",R,N,V_modelSchema
@"NSError"16@?0@"HMBLocalSQLContext"8
Rolling back block row: %lu
Processing input block row: %lu
Processing local block row: %lu
lost self for processing block!
v16@?0@"NAPromise"8
__processRecords
Unable to fetch block row %lu from %@: %@
Block %lu has not been marked as complete. Ignoring process request.
Failed to unarchive processing options from options data: %@
unable to cleanup corrupt block: %@
unable to fetch transaction entries for %lu / %@: %@
No rows to process!
Fetched %lu objects to process for blockRow: %lu options: %@
unable to determine modelID for %lu / %@: %@
unable to flush bogus row for %lu / %@: %@
unable to unarchive object for %lu / %@: %@
Found modelID %@ to %@ for row: %@
delete
update/insert
unable to find existing model with modelID %@ for %lu / %@: %@
Did not find existing record for modelID %@
Found existing record for modelID %@: %@
Unable to unarchive record row %lu: %@
Unable to remove corrupt record row %lu: %@
Updating model %lu / %@ / %@
Unable to merge old record with new values %@ / %@: %@
Deleting model %lu / %@ / %@
Inserting model %@
Unable to encode options %@ for rollback: %@
Unable to write rollback entries: %@
Updating record row: %lu %lu %lu %@ %@ %@
Inserting record row: %lu %lu %lu %@ %@ %@ %@ %@
No record row to update or updated model to insert
unable to update / insert row for %lu / %@: %@
Sending deletion delegate callback for: %@
@"NAFuture"8@?0
Sending update delegate callback for: %@
unable to cleanup processed block: %@
Combined action future: %@
Unable to encode options for output: %@
Unable to update block to enqueue output: %@
Triggering output for output block row %lu
[LocalZone] unable to cleanup rollback block: (lost self)
Rolling back block %lu due to push failure: %@
No block fetched! (no block found)
Rollback completed successfully for block %lu.
Failed to get block for rollback: %@
Removing unused rollback block %lu
Unable to cleanup rollback block: %@
v24@?0@"HMBMirrorOutputResult"8@"NSError"16
Unable to determine options for rollback block (%@)
rollback options: %@
invalidating push for block %lu
Rollback is having issues. Expected to find a record row %lu / %@, but we didn't
reverting record row %lu / %@ to %lu / %@
Failed to rollback block: %@
Failed to remove rollback block: %@
HMBLocalSQLContextInputBlock
zone: %lu  block: %lu  type: %lu
attempting to add additional entries on invalidated block!: %lu.%@
attempting to add additional entries on %lu.%@ failed: %@
attempting to update additional entries on invalidated block!: %lu.%@
attempting to update additional entries on %lu.%@ failed: %@
commit on nil block!
committing block.
commit failed: %@
success!
abort on nil block!
aborting block.
abort failed: %@
owner
T@"HMBLocalSQLContext",W,N,V_owner
zoneRow
TQ,R,N,V_zoneRow
You must override %@ in a subclass
%@ got a delete message: %@
%@ got an %@ message: %@
insert
%@ property %@ changed from %@ to %@ with options: %@
Processing child: %@
fetchChildren
store %p.%@ got a delete message: %@
self or child: %@
handled via meta protocol.
store %p.%@ got an %@ message: %@
hash
TQ,R
superclass
T#,R
description
T@"NSString",R,C
debugDescription
hmbMetaProtocol
T@"HMBBackedObjectMetaProtocol",R,N,V_hmbMetaProtocol
hmbLocalZone
T@"HMBLocalZone",R,N
hmbRoot
T@"HMBBackedObjectRoot",R,N
hmbParent
T@"HMBBackedObject",R,N
hmbModelID
T@"NSUUID",R,N,V_hmbModelID
hmbParentModelID
T@"NSUUID",R,N,V_hmbParentModelID
Invalid parameter not satisfying: %@
cloudDatabase
state
_database
Deallocating
@"NAFuture"16@?0@"NSNull"8
Starting up with local zone: %@
HMBCloudZone First Fetch
HMBCloudZone Startup Fetch
Successfully started up with local zone
Failed to start up with local zone: %@
v24@?0@8@"NSError"16
Starting up with model container: %@
Successfully started up with model container
Failed to start up with model container: %@
modelContainer
HMBCloudZoneShareModel
HMBCloudZoneShareParticipantModel
Asked to handle unexpected updated model: %@
Unable to update received internal models: %@
Asked to handle unexpected deleted model: %@
Unable to remove internal models: %@
CloudZone
HMBCloudZone
Zone ID
T@"<HMBLocalZoneID>",R,N
startUp
T@"NAFuture",R,N
database
T@"CKDatabase",R,N,V_database
T@"HMBCloudDatabase",W,N,V_cloudDatabase
stateZone
T@"HMBLocalZone",W,N,V_stateZone
T@"HMBCloudZoneStateModel",R,N,V_state
T@"HMBCloudZoneShareModel",&,N,V_share
currentLeafRecord
T@"CKRecord",R,N,V_currentLeafRecord
T@"HMBCloudZoneID",&,N,V_zoneID
shareParticipants
T@"NSMutableDictionary",R,N,V_shareParticipants
modelClassToRequiresPostProcessingMap
T@"NSMapTable",R,N,V_modelClassToRequiresPostProcessingMap
inflightPushOperations
T@"NSMapTable",&,N,V_inflightPushOperations
propertyLock
T@"HMFUnfairLock",R,N,V_propertyLock
deviceIdentifier
T@"NSString",R,N,V_deviceIdentifier
shutdownFuture
T@"NAFuture",&,N,V_shutdownFuture
destroyFuture
T@"NAFuture",&,N,V_destroyFuture
T@"HMBModelContainer",&,N,V_modelContainer
delegate
T@"<HMBCloudZoneDelegate>",W,N,V_delegate
T@"HMBLocalZone",W,N,V_localZone
T@"NAFuture",R,N,V_startUp
Unable to fetch share participant models for zoneID %@: %@
v24@?0@"HMBCloudZoneShareParticipantModel"8^B16
Unable to fetch share models for zoneID %@: %@
Unexpectedly found more than one share model for zoneID %@: %@
@"NSUUID"16@?0@"HMBCloudZoneShareModel"8
Failed to remove existing share modelIDs: %@
Found existing share model with zoneID %@: %@
Did not find existing share model with zoneID %@
lock
Creating share model with zoneID: %@
Received conflict when pushing updated share, so assuming server version is correct: %@
Failed to push share model: %@
Successfully pushed share model
@"NAFuture"16@?0@"HMBCloudZoneRecordPushResult"8
client
T@"CKRecord",R,N,V_client
server
T@"CKRecord",R,N,V_server
ancestor
T@"CKRecord",R,N,V_ancestor
v32@?0@"CKRecordID"8@"NSError"16^B24
updated
T@"NSSet",R,N,V_updated
deleted
T@"NSSet",R,N,V_deleted
partialErrors
T@"NSDictionary",R,N,V_partialErrors
conflicts
T@"NSDictionary",R,N,V_conflicts
error
T@"NSError",R,N,V_error
fatalError
TB,R,N,V_fatalError
Pushing with updates: %@ removes: %@
single-part push: %@
[%@] Pushing update for record: %@
about to update: %@
[%@] Pushing removal for record: %@
about to remove: %@
[%@] Failed to push record %@: %@
[%@] Successfully pushed record: %@
v24@?0@"CKRecord"8@"NSError"16
[%@] CKModifyRecordsOperation failed: %@
[%@] CKModifyRecordsOperation will be retried
deferred
[%@] CKModifyRecordsOperation failed and cannot be retried: %@
failed with error: %@
[%@] CKModifyRecordsOperation succeeded
success
v32@?0@"NSArray"8@"NSArray"16@"NSError"24
updatedValue
T@"HMBModel",R,N,V_updatedValue
previousValue
T@"HMBModel",R,N,V_previousValue
deallocating: %@
Notifying delegate object: %@
Notifying registered object: %@
Notifying registered %@ object: %@
parent
v24@?0@"NSNull"8@"NSError"16
Failed to archive options %@: %@
Failed to encode processing options %@: %@
@16@?0#8
Failed to stage remove all for types: %@
store
<HMBLocalZone: %@/%@>
HMBLocalZone
objectLookup
T@"NSMapTable",R,N,V_objectLookup
T@"HMBLocalSQLContext",W,N,V_sql
shutdownFutures
T@"NSMutableArray",&,N,V_shutdownFutures
localDatabase
T@"HMBLocalDatabase",W,N,V_localDatabase
T@"HMBModelContainer",R,N,V_modelContainer
T@"<HMBLocalZoneID>",R,N,V_zoneID
mirror
T@"<HMBMirrorProtocol>",R,N,V_mirror
T@"<HMBLocalZoneDelegate>",W,N,V_delegate
Unable to determine CKRecordID for model ID %@: %@
Unable to decode CKRecordID from external ID %@: %@
Unable to natively store a %@ in a manatee record.
v32@?0@"NSString"8@"HMBModelField"16^B24
Creating new cloud record %@.%@ to store model %@.%@
Failed to decode locally stored Manatee record: %@
Updating cloud record %@.%@ to store model %@.%@
Unable to find version metadata field on record %@
Unable to decode version metadata for record %@: %d
Unable to determine encoding from version metadata: %@. Defaulting to %lu encoding
Could not find data for encoding %lu in CKRecord %@
CKRecord HMB metadata: %@
Unable to uncompress data for %@
Received CKRecord with a HMBModelCloudReference field (%@) where the CKRecord field (%@) is set but the model field is not set.
Received CKRecord with a HMBModelCloudReference field (%@) where zone name for reference stored in the CKRecord field (%@) does not match the zone name in the HMBModel field (%@!=%@)
Unexpectedly found %@ in field %@ of %@ which we expected to be a CKReference (ignoring).
<HMBLocalZoneIDUnshared: %@>
labels
T@"NSArray",R,N
T@"NSData",R,N
name
T@"NSString",R,N
HMBLocalZoneIDUnshared
T@"NSString",R,N,V_name
container
Record
_reserved_BackingStoreTransactionResult
551E3F88-0C11-4402-A486-6D1EB759AADD
message
expecting internal storage to be a NSData, but it's a %@
should not have a internally handled type of NSObject (but we hit one for key %@)
Associaiting with a container with a different data version (%@ != %@).
Unable to associate model (%@) with a nil container.
Property '%@' set but made unavailable by associating with a container of version %@
pathStack
errorText
(%@ not a valid type within an aggregate type)
[%lu]
(key must be of string type (is %@))
Cannot prepare model for container because modelID or parentModelID are missing: %@
info
hmbModelID and hmbParentModelID must be set prior to encoding
Cannot prepare model for container because hmbDataVersion is missing: %@
hmbDataVersion must be set prior to encoding
/%@ (Cannot encode non-standard type %@ as NSObject generic)
Cannot prepare model for container: %@
Top level objects to be auto-encoded to NSData must support secureCoding (%@ does not)
/%@ (property could not be validated): %@
/%@ (property could not be encoded as NSData)
Model %@.%@.%@ suppressing validity check due to HMDBackingStoreModelObject backport.
Model %@.%@.%@ is not valid for storage (modelID is not set).
Model %@.%@.%@ is not valid for storage (parentModelID is not set).
Model %@.%@.%@ is not valid for storage (field %@ is not set).
[HMBModel hmbMerge:from] called with nil container on target (worrysome in production code).
[HMBModel hmbMerge:from] called with nil container on source (worrysome in production code).
Cannot merge from model class, %@, to model class, %@
Model %@ from cloud contained local only property %@, dropping
[HMBModel hmbType] called without having an associated id<HMBModelContainer>.
Unable to set property %@ of %@ from type %@ (no such property exists)
Unable to set property %@ of %@ from type %@ (property is unavailable)
Unable to set property %@ of %@ from type %@ (property is read-only)
Unable to set property %@ of %@ from type %@ (does not match the expected type %@)
Unable to get default value of property %@ from type %@ (no such property exists)
<%@ uuid:%@ version:%@>
<UNSET>
%@/%@
<NULL>
<NSArray: %lu items>
<NSDictionary: %lu items>
<NSData: %lu bytes>
<%@ / NSData: %lu bytes>
<%@>
%@:%@
 (inferred)
  uuid: %@
  parent: %@
  version: %@%s
 (override)
  dependents:
 (default)
 (read-only)
  %@%@%@: %@
Unable to determine externality of property %@ from type %@ (no such property exists)
%@%@
%@.%@/%@
Model
v@:@
hmbShouldLogPrivateInformation
TB,N
hmbExternalProperties
T@"NSSet",R,N
hmbSchemaHashRoot
T@"NSUUID",R,N
hmbExternalRecordType
hmbProperties
T@"NSDictionary",R,N
hmbReadonlyBefore
T@"HMFVersion",R,N
hmbGenericRepresentation
T#,R,N
hmbReserved
T@"NSMutableDictionary",&,N,V_hmbReserved
hmbContainerDataVersion
T@"HMFVersion",&,N,V_hmbContainerDataVersion
hmbDataVersion
T@"HMFVersion",&,N,V_hmbDataVersion
T@"NSUUID",&,N,V_hmbModelID
T@"NSUUID",&,N,V_hmbParentModelID
hmbType
T@"NSString",&,N,V_hmbType
hmbLogRow
TQ,N,V_hmbLogRow
hmbRecordRow
TQ,N,V_hmbRecordRow
hmbExternallyFetched
hmbDependentUUIDs
hmbCanonicalType
hmbSetProperties
hmbDescription
hmbIsModelReadOnly
TB,R,N
hmbIsModelGenericRepresentation
values: (%@%@)
  version: %@
  %@ (read-only) (unsupported): %@
Attempting to read property %@ from %@, unavailable in homed data version %@ (returning nil).
Attempting to read property %@ from %@, does not appear defined.
Attempting to write property %@ from %@, unwritable in homed data version %@.
Property for parameter %@ has a class of %@ not %@
Property for parameter %@ has a class of <UNDETERMINED> not %@
@@:@@@
selector
T:,N,V_selector
@@:@@
Updated:previously:options:
Deleted:options:
T@"HMFUnfairLock",R,N,V_lock
updateMap
T@"NSMapTable",R,N,V_updateMap
deleteMap
T@"NSMapTable",R,N,V_deleteMap
processResult
T@"NAFuture",R,N,V_processResult
<%lu: %@>
<%lu.%@>
TQ,N,V_zoneRow
identifier
T@"<HMBLocalZoneID>",&,N,V_identifier
replication
T@"NSUUID",&,N,V_replication
4.0.0
1.0.0
remapped (or explicit map) is not a subclass of HMBModel (%@ is not a sub-class of HMBModel)
0.0.0
expecting a versioning key named %@ but one does not exist
internalAllowedTypes
allowedTypes
T@"<HMBMirrorProtocol>",R,W,N,V_mirror
classToNameTransform
T@"NSMapTable",C,N,V_classToNameTransform
nameToClassTransform
T@"NSMapTable",C,N,V_nameToClassTransform
objectPropertyHashLookup
T@"NSMapTable",&,N,V_objectPropertyHashLookup
legacyDataVersion
T@"HMFVersion",R,C,N,V_legacyDataVersion
dataVersion
T@"HMFVersion",R,C,N,V_dataVersion
HMBCID.s
HMBCID.c
HMBCID.n
HMBCID.m
759390E3-198F-48EB-AD00-31296DACBBA6
%@.%@.%@
Name
Model ID
containerID
T@"CKContainerID",R,N,V_containerID
scope
Tq,R,N,V_scope
shouldUpdateClients
TB,N,V_shouldUpdateClients
TB,D,N
participant
T@"HMBShareParticipant",&,D,N
Unable to create input context for conflict records: %@
Unable to generate model for cloudRecord: %@
Server Record: %@
Client Record: %@
Ancestor Record: %@
Unable to generate externalID for cloudRecord: %@
Unable to generate externalData for cloudRecord: %@
Queueing server verson of conflicted record %@ / %@ due to confict.
Unable to update model for input block: %@
Conflicted record resolution.
Unable to commit change: %@
Unable to abort change: %@
Asked to accept invitation %@
Fetched share metadata with result %@
Unexpectedly got back nil result querying for share metadata of %@
Accepted invitation with result %@
Unexpectedly got back nil result after accepting share of %@
Adding zone state model: %@
Unable to add zone state model: %@
@"NAFuture"16@?0@"NSDictionary"8
Unable to create our local storage: %@.
com.apple.homed.hmbmanager.%@
@"HMBLocalZone"56@?0@"HMBLocalDatabase"8@"<HMBLocalZoneID>"16Q24@"<HMBLocalZoneDelegate>"32@"HMBModelContainer"40@"<HMBMirrorProtocol>"48
Asked to create or open zone with ID: %@
Returning existing zone: %@
No existing zone found with ID %@. Creating new zone
Asked to open existing zone with ID: %@
Asked to create or open zone with mirror: %@
Asked to open existing zone with mirror: %@
Asked to remove local zone: %@
Destroying mirror: %@
Successfully removed local zone
Failed to remove local zone %@: %@
Destroying local zone: %@
HMBLocalDatabase
Local.%@
queue
T@"NSOperationQueue",&,N,V_queue
local
T@"HMBLocalSQLContext",&,N,V_local
openZonesByZoneID
T@"NSMapTable",R,N,V_openZonesByZoneID
localZoneFactory
T@?,C,N,V_localZoneFactory
T@"<HMBLocalDatabaseDelegate>",W,N,V_delegate
Cannot set a new delegate on local zone with identifier %@ because that local zone has already been opened with a different delegate
Unable to startup mirror %@ of freshly opened localZone: %@
Unable to clean up and queue any blocks enqueued prior to shutdown: %@
Using default options for cloud pull.
default options for cloud pull
lost self.
[%@] Lost self.
v16@?0@"NSError"8
v16@?0@"HMBProcessingResult"8
v16@?0@"HMBCloudZonePullResult"8
%s (%@)
__performCloudPull
[%@] Starting CKFetchRecordZoneChangesOperation with token: %@ options: %@
sa00
sa01
parent_record
[%@] Failed to create a new pull record: %@
failed block creation
[%@] Received record of type %@ with recordChangeTag %@ recordID %@, but failed to decode: %@
[%@] Received record of type %@ with recordChangeTag %@ recordID %@ / %@.%@
[%@] Failed to encode externalID from record %@: %@
[%@] Failed to encode externalData from record %@: %@
[%@] Failed to add model to update to block: %@
v16@?0@"CKRecord"8
[%@] Received record deletion for record type %@ with recordID %@
[%@] Failed to encode externalID from recordID %@: %@
[%@] Failed to add model to remove to block: %@
v24@?0@"CKRecordID"8@"NSString"16
[%@] Failed to fetch newest records: %@
[%@] Successfully fetched newest records with moreComing: %@ and serverChangeToken: %@
v44@?0@"CKRecordZoneID"8@"CKServerChangeToken"16@"NSData"24B32@"NSError"36
[%@] Performing cloud pull again with nil change token due to expired change token error: %@
[%@] CKFetchDatabaseChangesOperation will be retried
[%@] Received cloud zone deletion error: %@
[%@] Failed to abort pull: %@
failed (abort).
[%@] Failed to fetch record zone changes: %@
[%@] Committing mirror input block
[%@] Failed to commit block: %@
failed (commit).
[%@] Successfully commited block. Handling %lu internal models updates.
[%@] CKFetchRecordZoneChangesOperation succeeded
com.apple.homed.aps
A089A5B9-6D32-4A0E-B611-0492B7D9F3D5
databaseStateModelsByScope
zoneStateModels
_publicDatabaseState
_privateDatabaseState
_sharedDatabaseState
Creating cloud database with localDatabase: %@ containerID: %@ isManateeContainer: %@
Failed to create state zone for database: %@
Performing initial cloud sync
Successfully performed initial cloud sync
Failed to perform initial cloud sync: %@
Cannot find zone model to update server change for with zone ID %@
Unable to update server change token for zone %@: %@
Asked to perform administrative fetch for unsupported database scope: %@
connection: %@  didReceiveToken: %@  forTopic: %@  identifier: %@
connection: %@  didReceivePublicToken: %@
connection: %@  didReceiveIncomingMessage: %@
Received message that did not translate to a CKNotification; deferring to delegate: %@
Ignoring CKNotification for irrelevant container identifier %@: %@
Handling message with user info: %@
Database APS Notification
activity %@ handling CKDatabaseNotification: %@
Record Zone APS Notification
activity %@ handling CKRecordZoneNotification: %@
updating zone: %@
activity %@ starting zone update for: %@
Got Notification for a query: %@
Unable to process APS message with userInfo: %@ notification: %@
Got update for a zone ID %@ we don't have state for. All zone state: %@
Have an open HMBCloudZone for zoneID %@
SubscriptionCloudFetch
No open HMBCloudZone exists for zoneID %@
Asked to open or create private zone with ID: %@
Asked to open existing private zone with ID: %@
Asked to open existing shared zone with ID: %@
Not retrying failed CloudKit operation
Will retry cloud operation after %f seconds
Removing state for zone ID %@
Asked to remove state for zoneID %@ that has already been removed
Unable to determine children of zone state model %@ with ID %@: %@
Unable to remove cloud zone state models for zone ID %@: %@
CloudDatabase
Container
initialCloudSyncFuture
T@"NAFuture",&,N,V_initialCloudSyncFuture
T@"HMBLocalDatabase",R,N,V_localDatabase
manateeContainer
TB,R,N,GisManateeContainer,V_manateeContainer
T@"HMBLocalZone",R,N,V_stateZone
privateDatabaseState
T@"HMBCloudDatabaseStateModel",&,N,V_privateDatabaseState
sharedDatabaseState
T@"HMBCloudDatabaseStateModel",&,N,V_sharedDatabaseState
publicDatabaseState
T@"HMBCloudDatabaseStateModel",&,N,V_publicDatabaseState
zoneStateByZoneID
T@"NSMutableDictionary",R,N,V_zoneStateByZoneID
T@"CKContainer",R,N,V_container
sharedDatabase
T@"CKDatabase",R,N,V_sharedDatabase
privateDatabase
T@"CKDatabase",R,N,V_privateDatabase
publicDatabase
T@"CKDatabase",R,N,V_publicDatabase
apsConnection
T@"APSConnection",&,N,V_apsConnection
manateeAvailabilityFuture
T@"NAFuture",&,N,V_manateeAvailabilityFuture
T@"<HMBCloudDatabaseDelegate>",W,N,V_delegate
T@"CKContainerID",R,N
defaultOperationConfiguration
T@"CKOperationConfiguration",R,N,V_defaultOperationConfiguration
Unable to load cloud database states: %@
Created public database state model with cloudID %@: %@
Created private database state model with cloudID %@: %@
Created shared database state model with cloudID %@: %@
Unable to update cloud database models: %@
Unable to load zone model state: %@
[HMBCloudDatabase] Failed to resolve preferred CloudKit environment with error: %@
[HMBCloudDatabase] Lost self.
[HMBCloudDatabase] Default APS environment unset (using %@)
Registering APS Connection for %@: %@
com.apple.icloud-container.
com.apple.willowd
v24@?0@"NSString"8@"NSError"16
v24@?0@"NSArray"8@"NSError"16
__administrativeFetch_block_invoke
[%@] Starting administrative fetch for %@ with force=%@
[%@] Skipping administrative fetch for %@ because force=%@ and last administrative fetch was %@
[%@] Processing administrative fetch
starting process of results.
v16@?0@"NSSet"8
[%@] Zone with ID %@ was deleted
v32@?0@"HMBCloudZoneID"8@"HMBCloudZoneStateModel"16^B24
[%@] Zone with ID %@ was created
[%@] Unable to update zone models in local DB %@: %@
[%@] Unable to remove zone models from local DB %@: %@
v16@?0@8
Ignoring unexpected subscription on %@: %@
[HMBCloudDatabase] Could not find zone state model for zone subscription: %@
[HMBCloudDatabase] Got unexpected subscription %@
No cloud zone found with ID %@
Creating state for cloud zone with ID %@
Unable to save new zone to database: %@
Cannot set a delegate on cloud zone with identifier %@ because that cloud zone has already been opened with a different delegate
Returning existing cloud zone: %@
Creating cloud zone with ID %@
Failed to open local zone with ID %@: %@
Failed to remove local data for zone %@: %@
Attempting to create zone for %@
Attempting to remove zone for %@
__fetchAllCloudZones
[%@] Starting CKFetchRecordZonesOperation
[%@] CKFetchRecordZonesOperation failed: %@
[%@] CKFetchRecordZonesOperation will be retried
[%@] CKFetchRecordZonesOperation failed and cannot be retried: %@
[%@] CKFetchRecordZonesOperation succeeded with %ld zones
v24@?0@"NSDictionary"8@"NSError"16
__modifyRecordZoneOperation
[%@] Starting CKModifyRecordZonesOperation with save: %@ remove: %@
[%@] CKModifyRecordZonesOperation failed: %@
[%@] CKModifyRecordZonesOperation will be retried
[%@] CKModifyRecordZonesOperation failed and cannot be retried: %@
[%@] CKModifyRecordZonesOperation succeeded
Asked to register subscription with force: %@
Asked to unregister subscription with force: %@
<HMBLocalZoneOutputTuple: %lu.%lu model: %@>
TQ,R,V_recordRow
outputBlockRow
TQ,R,V_outputBlockRow
model
T@"HMBModel",R,N,V_model
T@"NSData",C,N,V_externalID
T@"NSData",C,N,V_externalData
<HMBLocalZoneOutputRecords: %@ options: %@>
groupID
T@,R,N,V_groupID
options
T@"HMBProcessingOptions",R,N,V_options
Unable to fetch options for block at row %lu.%@: %@
Failed to unarchive transaction options from options data: %lu.%@: %@
HMB.m
self.localZone
HMB.a
HMB.r
Unable to get referenced HMBModelReference (%@): unassociated or invalid local zone
Unable to determine modelID of CKRecordID: %@
reference
Looking for referenced model %@ in localZone %@
Error fetching model %@
No local model for %@, fetching via CKReference %@
Unable to find referenced model %@, no local model and no CKReference to fetch
unresolved
<HMBModelCloudReference: %@ (%@) / %@>
<HMBModelCloudReference: unresolved (%@) / %@>
action
TQ,N,V_action
T@"CKReference",&,N,V_reference
validate
none
<unknown %lu>
Waiting for Manatee availability
Handling CKAccountChangedNotification
Fetching account info
Failed to fetch account info: %@
Fetched account info: %@
Manatee is not currently available; waiting for CKAccountChangedNotification to check again
v24@?0@"CKAccountInfo"8@"NSError"16
HMBUIC.pci
HMBUIC.li
User Client Identifier
Lookup Info
lookupInfo
T@"CKUserIdentityLookupInfo",R,V_lookupInfo
participantClientIdentifier
T@"NSUUID",R,C,V_participantClientIdentifier
@"NAFuture"16@?0@"NSSet"8
models
Fetching complete models with force=%@: %@
Failed to fetch record rows for model IDs %@: %@
Fetched %lu record rows %@ but requested %lu model IDs %@
Trying to perform a cloud fetch for a record (%@/%@) that has not been pushed.
Failed to decode encoded record ID %@: %@
recordID
recordIDs
Unable to encode recordID %@ (%@).
Unable to fetch modelID for recordID %@ (%@).
@"NAFuture"16@?0@"NSArray"8
__fetchRecordsWithRecordIDs
[%@] Starting CKFetchRecordsOperation with record IDs: %@ and desired keys: %@
[%@] Failed to fetch record with ID %@: %@
[%@] Successfully fetched record with ID %@: %@
v32@?0@"CKRecord"8@"CKRecordID"16@"NSError"24
[%@] CKFetchRecordsOperation failed: %@
[%@] CKFetchRecordsOperation will be retried
[%@] CKFetchRecordsOperation failed and cannot be retried: %@
[%@] CKFetchRecordsOperation succeeded
succeeded
Record Row
External ID
External Data
Model Encoding
Model Data
Model Schema
Model Type
Push Encoding
Push Block Row
Push Data
TQ,R,N,V_recordRow
modelType
T@"NSString",R,N,V_modelType
pushEncoding
TQ,R,N,V_pushEncoding
pushData
T@"NSData",R,N,V_pushData
pushBlockRow
TQ,R,N,V_pushBlockRow
C8AE15D1-FA59-4811-8437-6F8BE2815E1E
FDB10518-1C8B-440B-837E-489902B4E477
E0AF74A3-368B-4E7B-B4B8-131073EAA5A9
HMBCZID.z
[zoneID.ownerName isEqualToString:CKCurrentUserDefaultName] == NO
%@.%@.%@/%@
T@"CKRecordZoneID",R,C,V_zoneID
T@"NSData",R,N,V_token
saved
T@"NSArray",R,N,V_saved
removed
T@"NSArray",R,N,V_removed
DBSubscription_%@.%@
ZoneSubscription_%@.%@.%@
__fetchSubscriptions
[%@] Starting CKFetchSubscriptionsOperation
[%@] CKFetchSubscriptionsOperation failed: %@
[%@] CKFetchSubscriptionsOperation will be retried
[%@] CKFetchSubscriptionsOperation failed and cannot be retried: %@
[%@] CKFetchSubscriptionsOperation succeeded with result: %@
__modifySubscriptionOperation
[%@] Starting CKModifySubscriptionsOperation with saves: %@ removes: %@
[%@] CKModifySubscriptionsOperation failed: %@
[%@] CKModifySubscriptionsOperation will be retried
[%@] CKModifySubscriptionsOperation failed and cannot be retried: %@
lost self for trigger output for output row.
Ignoring push request for block row %lu. Appears to be in-progress.
v24@?0@"HMBCloudZonePushResult"8@"NSError"16
Unable to fetch next group to push to the cloud: %@
starting cloud push for block: %lu
options: %@
starting cloud push for block %lu: %@
Unable to fetch next batch of records to push to the cloud: %@
Skipping cloud push for output block row %lu because no tuples were found
preparing to remove: %@
Unable to encode record for update: %@
activity %@ saving record for re-processing: %@ %@
Unable to encode recordID for update: %@
preparing to update: %@.%@ / %@
Aborting block %lu due to encoding error of some sort.
push mark as abort failed: %@
Abort update for block %lu failed with error: %@
activity %@ no valid records to push. aborting.
activity %@ cloud push failed: %@
Unable to complete push: %@
activity %@ cloud push chunk failed: %@
cloud push chunk failed: %@
activity %@ unable to encode recordID for %@: %@
unable to encode recordID for %@: %@
activity %@ unable to encode externalData for %@: %@
unable to encode externalData for %@: %@
Recieved unexpected updated record: %@
updating record %@
Unable to decode internal record %@: %@
activity %@ queueing internal model: %@ %@
activity %@ queueing reprocess model: %@ %@
activity %@ internal models processed.
internal models processed.
push mark as completed failed: %@
Unable to mark records as pushed: %@
push completed
Cloud-push modified records.
activity %@ queueing reprocessed models.
activity %@ reprocess failed with error: %@
activity %@ reprocess succeeded
v16@?0@"NSNull"8
activity %@ nothing to reprocess
v16@?0@"HMBCloudZoneRecordPushResult"8
Records push failed immediately: %@
[%s.%lu] Lost self reference.
__pushWithRecovery_block_invoke
Drop all cloud records requested by conflict resolution delegate callback.
Dropping cloud push record %@ / %@ due to conflict.
Unable to mark conflicted tuple for %@ as sent: %@
Dropping cloud push record %@ due to conflict.
v32@?0@"CKRecordID"8@"HMBCloudZoneConflict"16^B24
Unable to mark entire group %lu as completed: %@
HMBLocalSQLContextOutputBlock
zone: %lu  block: %lu
attempting to update on invalidated block!
attempting to update block failed: %@
No delegate supplied for '- (BOOL)shouldLogPrivateInformation' returning NO.
HMBManager detected local corruption: %@
Updating share participant models using updated share: %@
Removing share participant model that is no longer on share: %@
Updating CKShareParticipant on participant %@ to %@
Unable to update participant models: %@
ownerParticipant
T@"CKShareParticipant",R,N
currentParticipant
self.startUp.isFinished
Creating invitation with context: %@.
Unable to create a invitation on %@ (not private).
Returning existing pending invitation: %@
Asked to create an invitation for client identifier that already has an accepted participant: %@
Failed to fetch any participants with lookup info: %@
Unable to decode model from share %@: %@
B16@?0@"CKShareParticipant"8
Unable to find updated share participant on share %@
Unable to find invitation token on share participant %@
Created invitation: %@
Unable to encode participant model %@: %@
@"NAFuture"16@?0@"CKShare"8
Did not receive exactly 1 updated record from cloud push: %@
Successfully uploaded participant record %@
Unable to decode model from record %@: %@
Revoking share for participant: %@
Failed to push changes for revoking share participant: %@
Successfully pushed changes for participant removal with result: %@
Unable to decode model from updated record %@: %@
Decoded model from updated record %@ was not of class %@: %@
Did not receive exactly 1 deleted record from cloud push: %@
participants
Removing participant %@ because it already exists on share %@
Failed to remove participant from share: %@
Did not receive exactly 1 updated share from cloud push: %@
Successfully removed participant %@ from share %@
Successfully added participant %@ to share %@
serverChangeToken
subscription
wantsSubscription
T@"CKServerChangeToken",&,D,N
T@"CKSubscription",&,D,N
hmbModelCache
T@"NSMutableDictionary",&,N,V_hmbModelCache
hmbTransactionLock
T@"HMFUnfairLock",R,N,V_hmbTransactionLock
__findParticipants
[%@] Starting CKFetchShareParticipantsOperation for lookup infos: %@
[%@] Fetched share participant: %@
v16@?0@"CKShareParticipant"8
[%@] CKFetchShareParticipantsOperation failed: %@
[%@] CKFetchShareParticipantsOperation will be retried
[%@] CKFetchShareParticipantsOperation failed and cannot be retried: %@
[%@] CKFetchShareParticipantsOperation succeeded with participants: %@
finished
__fetchShareMetadata
[%@] Starting CKFetchShareMetadataOperation for invitations: %@
[%@] Failed to fetch share metadata for url %@: %@
received error fetching share metadata: %@
[%@] Fetched share metadata for url %@: %@
v32@?0@"NSURL"8@"CKShareMetadata"16@"NSError"24
[%@] CKFetchShareMetadataOperation failed: %@
[%@] CKFetchShareMetadataOperation will be retried
[%@] CKFetchShareMetadataOperation failed and cannot be retried: %@
[%@] CKFetchShareMetadataOperation succeeded with result: %@
__acceptInvitations
[%@] Starting CKAcceptSharesOperation for shares: %@
[%@] Failed to accept share metadata %@: %@
received error accepting share metadata: %@
[%@] Successfully accepted share for share metadata %@: %@
v32@?0@"CKShareMetadata"8@"CKShare"16@"NSError"24
[%@] CKAcceptSharesOperation failed: %@
[%@] CKAcceptSharesOperation will be retried
[%@] CKAcceptSharesOperation failed and cannot be retried: %@
[%@] CKAcceptSharesOperation succeeded with result: %@
__fetchUserRecord
[%@] Starting CKFetchRecordsOperation for user record
[%@] Fetched user record: %@
[%@] Failed to fetch user record: %@
[%@] CKFetchRecordsOperation did not retrieve user record, but no error was returned
[%@] CKFetchRecordsOperation succeeded with record: %@
remove
TB,R,N,V_remove
T@"CKShareParticipant",R,N,V_participant
rootShare is nil. HMBCloudZone hasn't finished starting up!
Unexpectedly didn't get back results from update!
Unexpectedly didn't get back new share from update!
Failed to update local zone with share model %@: %@
RequestUUID
ServerErrorDescription
%@.%@
%@/%@/%@
None
DeleteSelf
Validate
<UNKNOWN: %lu>
1.2.11
Could not initialize zlib for compression, error %ld
Failed to compress, error %ld
Could not initialize zlib for uncompression, error %ld
<%lu>
[%@]
T@"HMBModel",&,N,V_model
T@"NSUUID",&,N,V_modelID
parentModelID
T@"NSUUID",&,N,V_parentModelID
dependentModels
T@"NSMutableSet",&,N,V_dependentModels
mark
TQ,N,V_mark
hmbIsSQLiteConstraintError
hmbIsCloudKitError
hmbIsCKZoneDeletedError
hmbIsCKChangeTokenExpiredError
hmbIsCKPartialFailureError
hmbIsCKNetworkFailureError
hmbCloudKitRetryDelay
Td,R
Possible circular dependency in %@, trying to continue
Cannot fetch updated zones for unsupported database scope: %@
[%@] Starting CKFetchDatabaseChangesOperation
[%@] Zone with ID %@ changed
v16@?0@"CKRecordZoneID"8
[%@] Got a zone deletion for a non-extant state model: %@
Fetch database changes operation completed with token: %@ moreComing: %@ error: %@
[%@] CKFetchDatabaseChangesOperation failed: %@
[%@] Retrying CKFetchDatabaseChangesOperation with nil change token due to expired change token error
[%@] CKFetchDatabaseChangesOperation failed and cannot be retried: %@
[%@] Failed to add created zone models to local DB %@: %@
[%@] Failed to remove zone model IDs from local DB %@: %@
[%@] CKFetchDatabaseChangesOperation succeeded
v28@?0@"CKServerChangeToken"8B16@"NSError"20
encoded
T@"NSData",&,N,V_encoded
Asked to update models: %@ remove model IDs: %@
updating %lu to %@.%@
Unable to create zone with ID %@ on a non-private database.
Removing cloud zone with ID %@
Unable to remove zone with ID %@ on a non-private database.
Asked to fetch zones with force: %@
privateZoneIDs
sharedZoneIDs
HM.encoding
HM.device
HM.type
HM.isInternal
HM.modelID
HM.parentModelID
k%02lu
Unable to encode model (%@.%@): %@
initBlock
T@?,C,N,V_initBlock
BEGIN;
COMMIT;
ROLLBACK;
SQLBlock
lock acquired
SQLTransaction
begin completed with result: ROW
begin completed with result: OK
begin completed with result: DONE
begin completed with result: %lu
begin reset (failed) completed with result: ROW
begin reset (failed) completed with result: OK
begin reset (failed) completed with result: DONE
begin reset (failed) completed with result: %lu
begin reset (succeeded) completed with result: ROW
begin reset (succeeded) completed with result: OK
begin reset (succeeded) completed with result: DONE
begin reset (succeeded) completed with result: %lu
commit completed with result: ROW
commit completed with result: OK
commit completed with result: DONE
commit completed with result: %lu
commit reset (failed) completed with result: ROW
commit reset (failed) completed with result: OK
commit reset (failed) completed with result: DONE
commit reset (failed) completed with result: %lu
commit reset (succeeded) completed with result: ROW
commit reset (succeeded) completed with result: OK
commit reset (succeeded) completed with result: DONE
commit reset (succeeded) completed with result: %lu
commit attempted on %s (ignored)
null context
no open transaction
rollback completed with result: ROW
rollback completed with result: OK
rollback completed with result: DONE
rollback completed with result: %lu
rollback reset completed with result: ROW
rollback reset completed with result: OK
rollback reset completed with result: DONE
rollback reset completed with result: %lu
rollback attempted on %s (ignored)
run exec begin for %@
run exec completed with result: ROW
run exec completed with result: OK
run exec completed with result: DONE
run exec completed with result: %lu
Got Error %@ on %s
exec step begin for %s
exec step completed with result: ROW
exec step completed with result: OK
exec step completed with result: DONE
exec step completed with result: %lu
exec step reset completed with result: ROW
exec step reset completed with result: OK
exec step reset completed with result: DONE
exec step reset completed with result: %lu
ignoring run due to previous error %s
run exec begin for %s
ignoring exec due to previous error %s
exec last row step begin for %s
exec last row reset (failure) completed with result: ROW
exec last row reset (failure) completed with result: OK
exec last row reset (failure) completed with result: DONE
exec last row reset (failure) completed with result: %lu
exec last row was %lu
exec last row reset (success) completed with result: ROW
exec last row reset (success) completed with result: OK
exec last row reset (success) completed with result: DONE
exec last row reset (success) completed with result: %lu
ignoring fetch due to previous error %s
Ignoring fetch due to previous error: %@
unlimited fetch began on %s
fetch limited to %lu rows began on %s
fetch step completed with result: ROW
fetch block failed: %@
fetch reset (block failure) completed with result: ROW
fetch reset (block failure) completed with result: OK
fetch reset (block failure) completed with result: DONE
fetch reset (block failure) completed with result: %lu
fetch reset (fetch success) completed with result: ROW
fetch reset (fetch success) completed with result: OK
fetch reset (fetch success) completed with result: DONE
fetch reset (fetch success) completed with result: %lu
fetch reset (fetch failure) completed with result: ROW
fetch reset (fetch failure) completed with result: OK
fetch reset (fetch failure) completed with result: DONE
fetch reset (fetch failure) completed with result: %lu
ignoring single row fetch due to previous error %s
single row fetch began on %s
single row primary step completed with result: ROW
single row primary step completed with result: OK
single row primary step completed with result: DONE
single row primary step completed with result: %lu
single row fetch reset (no rows) completed with result: ROW
single row fetch reset (no rows) completed with result: OK
single row fetch reset (no rows) completed with result: DONE
single row fetch reset (no rows) completed with result: %lu
single row fetch reset (block failure) completed with result: ROW
single row fetch reset (block failure) completed with result: OK
single row fetch reset (block failure) completed with result: DONE
single row fetch reset (block failure) completed with result: %lu
single row fetch reset (step failure) completed with result: ROW
single row fetch reset (step failure) completed with result: OK
single row fetch reset (step failure) completed with result: DONE
single row fetch reset (step failure) completed with result: %lu
single row secondary step completed with result: ROW
single row secondary step completed with result: OK
single row secondary step completed with result: DONE
single row secondary step completed with result: %lu
single row fetch reset (no secondary row) completed with result: ROW
single row fetch reset (no secondary row) completed with result: OK
single row fetch reset (no secondary row) completed with result: DONE
single row fetch reset (no secondary row) completed with result: %lu
single row fetch reset (unexpected second row) completed with result: ROW
single row fetch reset (unexpected second row) completed with result: OK
single row fetch reset (unexpected second row) completed with result: DONE
single row fetch reset (unexpected second row) completed with result: %lu
single row fetch reset (secondary step failure) completed with result: ROW
single row fetch reset (secondary step failure) completed with result: OK
single row fetch reset (secondary step failure) completed with result: DONE
single row fetch reset (secondary step failure) completed with result: %lu
T^{sqlite3=},N,V_context
T@"HMFUnfairLock",&,N,V_lock
T@"NSURL",R,N,V_url
readOnly
TB,R,N,V_readOnly
T@"NSOperationQueue",R,N,V_queue
[HMBSQLManager] Expecting parameter to open be a sub-class of HMBSQLContext
SQLOpen
lock acquired (already opened)
lock acquired (needing open)
Database creation failed with error: %@
PRAGMA journal_mode=WAL;
turning on WAL FAILED: %@
turning on WAL result: %@
Failed re-open of WAL enabled database: %@
PRAGMA foreign_keys = ON;
Unable to turn on foreign key enforcement: %@
v16@?0@"HMBSQLContext"8
manager initialization failed: %@
unable to prepare context: %@
Opening SQLite datastore at: %@
Failed to close database, status: %d
contexts
T@"NSHashTable",R,N
contextLock
T@"HMFUnfairLock",R,N
extcode
text
statement
statement cannot contain nameless parameters (%ld is nameless)
bind parameter %s is not of a recognized type %@ is not a (NSNull, NSData, NSString, or NSNumber)
column %ld is of SQLite3 type %ld (not recognized)
v32@?0@"NSArray"8@"<HMBSearchableEntry>"16^B24
@"NSError"16@?0@"HMBSQLContext"8
Ignoring SQL block request due to previous error: %@
INSERT INTO store_v2 (label, identifier_data, replication_data) VALUES (?1, ?2, ?3)
DELETE FROM store_v2 WHERE id=?1;
SELECT id, label, identifier_data, replication_data FROM store_v2 WHERE id=?1;
SELECT id, label, identifier_data, replication_data FROM store_v2;
UPDATE store_v2 SET replication_data=?2 WHERE id=?1;
INSERT INTO block_v2 (store_v2_id, type) VALUES (?1, ?2);
SELECT id, type, options_data FROM block_v2 WHERE id=?1;
DELETE FROM block_v2 WHERE id=?1;
DELETE FROM block_v2 WHERE store_v2_id=?1;
UPDATE block_v2 SET options_data=?2 WHERE id=?1;
SELECT id, options_data FROM block_v2 WHERE store_v2_id=?1 AND type=?2 AND options_data IS NOT NULL ORDER BY id;
SELECT id, type, options_data FROM block_v2 WHERE store_v2_id=?1 AND type!=0 AND options_data IS NOT NULL ORDER BY id;
DELETE FROM block_v2 WHERE store_v2_id=?1 AND options_data IS NULL;
INSERT INTO transaction_v2 (store_v2_id, block_id, type, external_id, external_data, model_encoding, model_data) VALUES (?1, ?2, ?3, ?4, ?5, ?6, ?7);
INSERT INTO transaction_v2 (store_v2_id, block_id, type, external_id, model_encoding, model_data) SELECT ?1, ?2, ?3, COALESCE(external_id, randomblob(16)), 0, uuid FROM record_v2 WHERE type = ?4 AND model_data IS NOT NULL;
INSERT OR REPLACE INTO transaction_v2 (store_v2_id, block_id, type, external_id, external_data, model_encoding, model_data) VALUES (?1, ?2, ?3, ?4, ?5, ?6, ?7);
DELETE FROM transaction_v2 WHERE id=?1;
DELETE FROM transaction_v2 where block_id=?1;
DELETE FROM transaction_v2 WHERE store_v2_id=?1 AND type=?2;
DELETE FROM transaction_v2 WHERE store_v2_id=?1 AND type=?2 AND external_id=?3;
SELECT id, external_id, external_data, model_encoding, model_data FROM transaction_v2 WHERE  store_v2_id=?1 AND type=?2 AND external_id=?3;
SELECT id, external_id, external_data, model_encoding, model_data FROM transaction_v2 WHERE  block_id=?1 AND id>?2 ORDER BY id LIMIT ?3;
SELECT id, external_id, external_data, model_encoding, model_data FROM transaction_v2 WHERE  block_id=?1;
DELETE FROM transaction_v2 WHERE block_id IN (SELECT id FROM block_v2 WHERE store_v2_id=?1 AND options_data IS NULL)
DELETE FROM transaction_v2 WHERE block_id IN (SELECT id FROM block_v2 WHERE store_v2_id=?1 AND type=?2 AND options_data IS NULL)
INSERT INTO record_v2                                         (store_v2_id, external_id, external_data, uuid, parent_uuid, type, model_encoding, model_data, model_schema, push_encoding, push_data, push_block_id)                                         VALUES (?1, ?2, ?3, ?4, ?5, ?6, ?7, ?8, ?9, ?10, ?11, ?12);
UPDATE record_v2 SET model_encoding=?2, model_data=?3, model_schema=?4 WHERE id=?1
UPDATE record_v2 SET external_id=?2, external_data=?3 WHERE id=?1
UPDATE record_v2 SET external_id=?3, external_data=?4, push_data = NULL, push_encoding = 0, push_block_id = 0 WHERE id=?1 AND push_block_id=?2;
UPDATE record_v2 SET external_data=?3 WHERE store_v2_id=?1 AND external_id=?2
UPDATE record_v2 SET external_data=?3 WHERE store_v2_id=?1 AND uuid=?2
UPDATE record_v2 SET push_encoding = ?2, push_data = ?3, push_block_id = ?4 WHERE id = ?1;
UPDATE record_v2 SET  push_encoding = ?3, push_data = ?4, push_block_id = ?5 WHERE store_v2_id = ?1 AND uuid=?2;
UPDATE record_v2 SET push_encoding = 0, push_data = NULL, push_block_id = NULL WHERE push_block_id=?1
DELETE FROM record_v2 WHERE id=?1;
DELETE FROM record_v2 WHERE id=?1 and push_block_id=?2;
DELETE FROM record_v2 WHERE store_v2_id=?1 AND uuid=?2;
DELETE FROM record_v2 WHERE store_v2_id=?1 AND external_id=?2;
DELETE FROM record_v2 WHERE store_v2_id=?1;
DELETE FROM record_v2 WHERE store_v2_id = ?1 AND (model_encoding = 0 OR model_data IS NULL) AND push_block_id IS NULL;
SELECT uuid FROM record_v2 WHERE store_v2_id=?1 AND external_id=?2
SELECT id, external_id, external_data, model_encoding, model_data, model_schema, type, push_encoding, push_data, push_block_id, uuid FROM record_v2 WHERE  push_block_id=?1
SELECT id, external_id, external_data, model_encoding, model_data, model_schema, type, push_encoding, push_data, push_block_id, uuid FROM record_v2 WHERE  store_v2_id=?1 and uuid=?2
SELECT id, external_id, external_data, model_encoding, model_data, model_schema, type, push_encoding, push_data, push_block_id, uuid FROM record_v2 WHERE  store_v2_id=?1 and external_id=?2
SELECT id, external_id, external_data, model_encoding, model_data, model_schema, type, push_encoding, push_data, push_block_id, uuid FROM record_v2 WHERE  store_v2_id=?1 and parent_uuid=?2
SELECT id, external_id, external_data, model_encoding, model_data, model_schema, type, push_encoding, push_data, push_block_id, uuid FROM record_v2 WHERE  store_v2_id=?1 and type=?2
SELECT id, external_id, external_data, model_encoding, model_data, model_schema, type, push_encoding, push_data, push_block_id, uuid FROM record_v2 WHERE  store_v2_id=?1 AND parent_uuid=?3 AND type=?2
SELECT id, external_id, external_data, model_encoding, model_data, model_schema, type, push_encoding, push_data, push_block_id, uuid FROM record_v2 WHERE  store_v2_id=?1
unable to prepare SQL statements: %@
^%@(?:|-shm|-wal)(\..*)?$
unable to compile expression: %@
unable to get files in %@ (%@)
unable to instantiate SQLite datastore %@: %@
@"NSError"16@?0^{sqlite3_stmt=}8
removing all records and transactions from local
DELETE FROM transaction_v2
DELETE FROM record_v2
DELETE FROM block_v2
DELETE FROM store_v2
HMBLocalSQLContext
SELECT name FROM sqlite_master WHERE type = 'table' and name in ('zone_v2', 'zone_subscription_v2', 'db_subscription_v2', 'fetch_v2', 'queue_v2', 'scoreboard_v2', 'xact_v2', 'xact_block_v2')
Unable to determine if old tables are in the database: %@
zone_v2
zone_subscription_v2
db_subscription_v2
fetch_v2
queue_v2
scoreboard_v2
xact_v2
store_v2
block_v2
transaction_v2
record_v2
xact_block_v2
DROP TABLE %@;
Unable to remove old table %@: %@
unable to initialize SQL table: %@ with error: %@
unable to initialize SQL index: %@ with error: %@
CREATE TABLE IF NOT EXISTS store_v2 (                               id                  INTEGER PRIMARY KEY AUTOINCREMENT,                label               STRING  NOT NULL,                                 identifier_data     BLOB UNIQUE NOT NULL,                             replication_data    BLOB                                              );
CREATE TABLE IF NOT EXISTS block_v2 (                               id                  INTEGER PRIMARY KEY AUTOINCREMENT,                store_v2_id         INTEGER NOT NULL CONSTRAINT fetch_store_v2_id_fkey REFERENCES store_v2 (id) ON DELETE RESTRICT,             type                INTEGER NOT NULL,                                 options_data        BLOB                                              );
CREATE TABLE IF NOT EXISTS transaction_v2 (                         id                  INTEGER PRIMARY KEY AUTOINCREMENT,                store_v2_id         INTEGER NOT NULL CONSTRAINT fetch_store_v2_id_fkey REFERENCES store_v2 (id) ON DELETE RESTRICT,             block_id            INTEGER NOT NULL CONSTRAINT transaction_v2_block_v2_id_fkey REFERENCES block_v2 (id) ON DELETE RESTRICT,             type                INTEGER NOT NULL,                                 external_id         BLOB    NOT NULL,                                 external_data       BLOB,                                             model_encoding      INTEGER NOT NULL,                                 model_data          BLOB                                              );
CREATE TABLE IF NOT EXISTS record_v2 (                              id                  INTEGER PRIMARY KEY AUTOINCREMENT,                store_v2_id         INTEGER NOT NULL CONSTRAINT record_v2_group_id_fkey REFERENCES store_v2 (id) ON DELETE RESTRICT,             uuid                BLOB    NOT NULL,                                 parent_uuid         BLOB    NOT NULL,                                 type                TEXT,                                             model_schema        BLOB,                                             external_id         BLOB,                                             external_data       BLOB,                                             model_encoding      INTEGER NOT NULL,                                 model_data          BLOB,                                             push_encoding       INTEGER NOT NULL,                                 push_data           BLOB,                                             push_block_id       INTEGER CONSTRAINT record_v2_block_v2_fkey REFERENCES block_v2 (id) ON DELETE RESTRICT             );
CREATE UNIQUE INDEX IF NOT EXISTS transaction_v2_ukey ON transaction_v2 (store_v2_id, type, external_id);
CREATE UNIQUE INDEX IF NOT EXISTS record_v2_external_store_v2_id_ukey ON record_v2 (store_v2_id, external_id);
CREATE UNIQUE INDEX IF NOT EXISTS record_v2_uuid_store_v2_id_ukey ON record_v2 (store_v2_id, uuid);
CREATE INDEX IF NOT EXISTS block_v2_store_type ON block_v2 (store_v2_id, type, id);
CREATE INDEX IF NOT EXISTS transaction_v2_block_id ON transaction_v2 (block_id, id);
CREATE INDEX IF NOT EXISTS record_v2_push_id ON record_v2 (push_block_id, id);
CREATE INDEX IF NOT EXISTS record_v2_store ON record_v2 (store_v2_id);
CREATE INDEX IF NOT EXISTS record_v2_store_uuid ON record_v2 (store_v2_id, uuid);
CREATE INDEX IF NOT EXISTS record_v2_store_parent_uuid ON record_v2 (store_v2_id, parent_uuid);
CREATE INDEX IF NOT EXISTS record_v2_store_type_parent_uuid ON record_v2 (store_v2_id, parent_uuid, type);
CREATE INDEX IF NOT EXISTS record_v2_store_external ON record_v2 (store_v2_id, external_id);
HMBLZR.name
HMBLZR.token
HMBLocalZoneIDRow
cloudID
lastAdministrativeFetch
lastSubscriptionPush
T@"CKDatabase",W,N,V_database
T@"HMBCloudID",&,D,N
T@"NSDate",&,D,N
HMBUI.cksp
HMBUI.ci
HMBUI.pi
CK Share Participant
Client Identifier
Pending Invitation
ckShareParticipant
T@"CKShareParticipant",R,C,V_ckShareParticipant
pendingInvitation
T@"HMBShareInvitation",C,V_pendingInvitation
clientIdentifier
T@"NSUUID",R,C,V_clientIdentifier
<HMBModelField class: %@
 optional: YES
 recordField: %@
 loggingVisibility: %ld
 defaultValue: %@
 readonlyVersion: %@
 unavailableVersion: %@
Unable to set a default value %@ of type %@ when the stored type is %@
optional
TB,N,GisOptional,V_optional
loggingVisibility
TQ,N,V_loggingVisibility
defaultValue
T@,&,N,V_defaultValue
readonlyVersion
T@"HMFVersion",C,N,V_readonlyVersion
unavailableVersion
T@"HMFVersion",C,N,V_unavailableVersion
externalRecordField
T@"NSString",&,N,V_externalRecordField
encrypted
TB,N,V_encrypted
excludeFromCloudStorage
TB,N,V_excludeFromCloudStorage
classObj
T#,R,N,V_classObj
TB,D,N,GisOptional
TQ,D,N
T@,&,D,N
T@"HMFVersion",C,D,N
fieldName
T@"NSString",R,N,V_fieldName
TB,R,N,V_encrypted
default
redacted
debug
<UNKNOWN %lu>
Built new subscription: %@
Unable to save state for admin model %@: %@
zoneModel
Asked to register private subscription with force: %@
Asked to register shared subscription with force: %@
Asked to unregister private subscription with force: %@
Asked to unregister shared subscription with force: %@
__modifySubscriptions
preparing to modify subscriptions on %@: %@
updating %@: %@
removing %@: %@
update %@ reported: %@
updating state
updating states %@
updating state %@ adding db subscription for %@ (%@)
updating state %@ removing db subscription for %@
updating state %@ adding zone subscription for %@ (%@)
updating state %@ removing zone subscription for %@
unable to update state (subscriptions): %@
@"NAFuture"16@?0@"HMBCloudDatabaseSubscriptionResult"8
%{public}@%{public}@
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
HMBMirrorInput
HMBMirrorOutputResult
HMBProcessingOptions
NSSecureCoding
NSCoding
HMBProcessingOptionsMirror
Replication
HMBProcessingResult
Record
HMBCloudZoneStateModel
HMBCloudZoneShareModel
HMBBackedObject
HMBShareInvitation
NSCopying
HMBLocalSQLContextRowBlock
HMBLocalSQLContextRowItem
HMBLocalZoneProcessTuple
Process
ShareModel
HMBLocalSQLContextInputBlock
HMBBackedObjectBase
HMBLocalZoneUpdateProtocol
NSObject
HMBCloudZone
HMFLogging
HMBMirrorProtocol
HMBCloudZoneConflict
HMBCloudZoneRecordPushResult
CloudRecord
HMBLocalZoneReplicationItem
HMBLocalZone
Manatee
HMBLocalZoneID
HMBSearchableEntry
HMBLocalZoneIDUnshared
HMBModel
HMBModelProperties
HMBModelUnsupported
HMBBackedObjectMetaProtocolUpdate
HMBBackedObjectMetaProtocolDelete
HMBBackedObjectMetaProtocol
HMBCloudZonePushResult
HMBCloudZonePullResult
HMBLocalSQLContextRowZone
HMBModelContainer
NSMutableCopying
HMBMutableModelContainer
MirrorInput
HMBCloudID
HMBAction
HMBMutableAction
HMBCloudZoneShareParticipantModel
Default
User
HMBLocalDatabase
Pull_Internal
Pull
HMBCloudDatabase
APSConnectionDelegate
CloudZone
Subscription
HMBMirrorOutputTuple
HMBMirrorOutputGroup
ExternalOutput
HMBModelReference
HMBModelCloudReference
ManateeAvailability
HMBShareInvitationContext
Fetch
Fetch_Internal
Query
HMBLocalSQLContextRowRecord
HMBCloudZoneID
HMBCloudDatabaseSubscriptionResult
CloudSubscription
Push
HMBLocalSQLContextOutputBlock
Delegate
User_Internal
HMBCloudStateModel
HMBBackedObjectRoot
HMBLocalZoneDelegate
CloudUser
HMBLocalSQLContextRecord
HMBCloudDatabaseParticipantChange
Block
HMBModelSortItem
DependencySort
ZoneFetch
HMBLocalZoneRawUpdateEntry
Model
Zone_Internal
Zone
V4Cloud
HMBSQLContextConcrete
HMBSQLContext
HMBSQLFile
sqlite3
HMBEntrySearch
HMBLocalSQLContext
HMBLocalZoneIDRow
HMBCloudDatabaseStateModel
HMBShareParticipant
HMBModelField
HMBMutableModelField
HMBModelFieldDeprecatedField
HMBModelFieldOptionExternalRecordField
HMBModelFieldOptionExcludeFromCloudStorage
HMBModelFieldOption
Subscription_Internal
init
initWithName:
activity
identifier
UUIDString
blockRow
markWithFormat:
block
abort
dealloc
localZone
modelContainer
bestModelEncodingFor:
hmbCanonicalType
hmbModelID
base64EncodedStringWithOptions:
dataFromModel:encoding:destination:updatedModelIDs:error:
updateExternalID:externalData:modelEncoding:modelData:
UUID
data
archivedDataWithRootObject:requiringSecureCoding:error:
finishWithError:
commit:
markWithReason:
triggerProcessForBlockRow:
completionHandlerAdapter
addCompletionBlock:
initWithLocalZone:block:
updateModel:externalID:externalData:
updateModelData:modelEncoding:externalID:externalData:
removeModelWithModelID:
removeModelWithExternalID:
commit:promise:error:
.cxx_destruct
_localZone
_block
_activity
count
dictionaryWithCapacity:
countByEnumeratingWithState:objects:count:
setObject:forKey:
enumerateKeysAndObjectsUsingBlock:
alloc
initWithLabel:
name
optionsWithLabel:
messagePayload
setMessagePayload:
setMessageName:
transactionIdentifier
performSelector:
setMessageTransactionIdentifier:
responseHandler
setMessageResponseHandler:
decodeObjectOfClass:forKey:
internalAllowedTypes
decodeObjectOfClasses:forKey:
decodeBoolForKey:
setEnqueueExternalOutput:
setPerformDelegateCallbacks:
decodeIntegerForKey:
setQualityOfService:
setRollbackIfUnpushedForMirror:
label
encodeObject:forKey:
messageTransactionIdentifier
messageName
enqueueExternalOutput
encodeBool:forKey:
performDelegateCallbacks
qualityOfService
encodeInteger:forKey:
rollbackIfUnpushedForMirror
stringWithFormat:
messageResponseHandler
supportsSecureCoding
optionsWithMessage:
encodeWithCoder:
initWithCoder:
description
callMessageResponseHandlerWithPayload:error:
setLabel:
changeSource
setActivity:
_enqueueExternalOutput
_performDelegateCallbacks
_rollbackIfUnpushedForMirror
_label
_messagePayload
_messageName
_messageResponseHandler
_messageTransactionIdentifier
_changeSource
_qualityOfService
initWithParentOptions:blockRow:
parentOptions
optionsWithParentOptions:blockRow:
setParentOptions:
setBlockRow:
_parentOptions
_blockRow
notifyReplicationWithToken:updates:
replicationToken
updateReplicationToken:
calculateUpdatedTokenFrom:updates:
initWithMirrorOutputFuture:actions:
mirrorOutputResult
actions
_mirrorOutputResult
_actions
decodeShareModelFromShare:
decodeManateeCloudFrom:fullyPopulatedRecord:error:
hmbAssociateWithContainer:
encodeShareModel:
encodeManateeCloudModel:externalData:createdRecords:error:
decodeModelFrom:fullyPopulatedRecord:error:
encodeCloudFrom:externalData:createdRecords:error:
hmbProperties
mutableCopy
fieldWithClass:
dictionaryWithObjects:forKeys:count:
addEntriesFromDictionary:
initWithModelID:parentModelID:dataVersion:
numberWithBool:
setNeedsZoneCreation:
cloudZone
setCloudZone:
_cloudZone
hmbExternalRecordType
internal
isEqual:
hmbParentModelID
initWithModelID:
hmbPopulateFromModel:
hmbStore
registerObject:modelID:
initWithParent:modelID:model:
hmbParent
initWithParent:modelID:
initWithParent:model:
_hmbParent
initWithURL:token:context:cloudZoneID:
date
initWithURL:token:context:cloudZoneID:dateCreated:
shareURL
initWithName:value:
token
context
cloudZoneID
dateCreated
arrayWithObjects:count:
isEqualToDate:
hash
shortDescription
copyWithZone:
initWithURL:
attributeDescriptions
_context
_cloudZoneID
_dateCreated
_shareURL
_token
initWithBlockRow:type:options:
type
optionsData
_type
_optionsData
hmbDataWithSQLite3Column:column:
initWithItemRow:externalID:externalData:modelEncoding:modelData:
itemRow
externalID
hmbDescription
externalData
modelEncoding
modelData
initWithStatement:returning:
_itemRow
_modelData
_modelEncoding
_externalID
_externalData
initWithPrevious:update:recordRow:itemRow:modelID:modelSchema:externalID:externalData:
previous
update
recordRow
setRecordRow:
setItemRow:
modelID
modelSchema
_previous
_update
_recordRow
_modelID
_modelSchema
zoneRow
_selectReadyBlocksWithZoneRow:error:
_deleteNullItemsWithZoneRow:error:
_deleteNullBlocksWithZoneRow:error:
sqlBlockWithActivity:block:
reverseObjectEnumerator
_deleteZombieRecordsWithZoneRow:error:
localDatabase
queue
hmfErrorWithCode:
blockOperationWithBlock:
addOperation:
globalAsyncScheduler
futureWithBlock:scheduler:
queueIncompleteProcesses
local
_selectBlockWithRow:error:
unarchivedObjectOfClass:fromData:error:
removeBlockWithRow:error:
_insertBlockWithZoneRow:type:error:
_selectItemsWithBlockRow:returning:error:
finishWithResult:
arrayWithCapacity:
bytes
initWithUUIDBytes:
_selectRecordModelIDWithZoneRow:externalID:error:
_deleteItemWithRow:error:
objectFromData:encoding:recordRowID:logRowID:error:
fetchRecordRowWithModelID:returning:error:
addObject:
length
_deleteRecordWithRow:error:
copy
hmbMerge:from:
_insertBlockWithZoneRow:type:options:items:error:
sqlTransactionWithActivity:block:
schemaHashForModel:
_updateRecordWithRow:modelEncoding:modelData:modelSchema:error:
_updateRecordWithRow:pushBlockRow:pushData:pushEncoding:error:
_updateRecordWithRow:externalID:externalData:error:
hmbType
_insertRecordWithZoneRow:externalID:externalData:modelID:parentModelID:modelType:modelEncoding:modelData:modelSchema:pushEncoding:pushData:pushBlockRow:error:
zoneID
findObjectToNotifyForModelID:
localZone:deletedModel:options:
findObjectToNotifyForModel:
localZone:updatedModel:previousModel:options:
delegate
localZone:processingDidComplete:mirrorOutputFuture:actions:
combineAllFutures:ignoringErrors:scheduler:
_updateBlockWithRow:options:error:
mirror
triggerOutputForOutputRow:options:
fetchItemsInBlock:error:
_updateRecordsClearPushWithPushBlockRow:error:
_selectRecordWithZoneRow:modelID:returning:error:
share
recordID
recordName
isEqualToString:
initWithUUIDString:
state
initWithModelID:parentModelID:
setShare:
owner
_insertItemWithZoneRow:blockRow:type:externalID:externalData:modelEncoding:modelData:error:
_updateItemWithZoneRow:blockRow:type:externalID:externalData:modelEncoding:modelData:error:
invalidate
_deleteItemsWithBlockRow:error:
_deleteBlockWithRow:error:
initWithOwner:zoneRow:blockRow:type:
insertExternalID:externalData:modelEncoding:modelData:
setOwner:
_owner
_zoneRow
metaProtocolForTargetClass:
exceptionWithName:reason:userInfo:
hmbModelClassForDataVersion:
hmbModelWithModelID:parentModelID:dataVersion:
hmbEmptyModelWithDataVersion:
hmbPopulateModel:forDataVersion:
hmbValidForStorage:
hmbDependentsWithDataVersion:
arrayWithArray:
hmbModelWithDataVersion:
insertObject:atIndex:
registerSelectorsWithRoot:targetClass:modelClass:
hmbRoot
dumpDebug:
futureWithNoResult
hmbSetProperties
hmbPropertyNamed:isSet:
propertyDiffersFrom:to:
hmbPropertyChangedWithKey:from:to:options:
formattedStringForValue:
futureWithResult:
hmbLocalZone
fetchModelsWithParentModelID:error:
hmbMarkObjectForRemoval:
hmbDefaultValueForObject:named:
hmbPropertyIsAvailableForObject:named:
hmbPropertyIsReadOnlyForObject:named:
hmbPropertyForObject:named:isSet:
hmbPropertyWasSetForObject:named:
hmbSetPropertyForObject:named:to:
hmbSetPropertyIfNotNilForObject:named:to:
hmbRemoveModelWithID:
hmbUpdateModel:
hmbRunTransaction:block:
hmbRunBlock:
hmbMetaProtocol
sendDeletedTo:deleted:options:
hmbModelDeleted:options:
sendUpdatedTo:updated:previously:options:
hmbModelUpdated:previously:options:
hmbRegisterSelector:modelClass:
class
self
performSelector:withObject:
performSelector:withObject:withObject:
isProxy
isKindOfClass:
isMemberOfClass:
conformsToProtocol:
respondsToSelector:
retain
release
autorelease
retainCount
zone
superclass
debugDescription
parentModelID
hmbModelAndDependentsWithDataVersion:
hmbFetchChildren
hmbMarkForRemoval
hmbDefaultValueForPropertyNamed:
hmbPropertyIsAvailable:
hmbPropertyIsReadOnly:
hmbPropertyWasSet:
hmbSetProperty:named:
hmbSetPropertyIfNotNil:named:
hmbPropertyNamed:
_hmbModelID
_hmbMetaProtocol
_hmbParentModelID
scope
privateDatabase
sharedDatabase
publicDatabase
stateZone
strongToStrongObjectsMapTable
dictionary
startUp
recoverIgnoringError
shutdownFuture
flatMap:
destroyFuture
_triggerOutputForOutputRow:options:
setLocalZone:
setModelContainer:
updateMirror:
array
cloudDatabase
performInitialCloudSync
addObjectsFromArray:
serverChangeToken
lazyPerformCloudPullWithFetchToken:options:
lazyFutureWithBlock:scheduler:
chainFutures:
finishWithResult:error:
propertyLock
database
operationQueue
waitUntilAllOperationsAreFinished
finishWithNoResult
shareParticipants
participant
clientIdentifier
setObject:forKeyedSubscript:
update:
handleUpdatedShare
remove:
handleRemovedZoneIDs:
categoryWithName:
logCategory
logIdentifier
startupWithLocalZone:error:
destroy
flush
shutdown
initWithCloudDatabase:state:
startupWithModelContainer:error:
isInternalModel:
handleUpdatedInternalModels:
handleDeletedInternalModels:
addDatabaseOperation:
handleDeletion
setCloudDatabase:
setDelegate:
setStateZone:
currentLeafRecord
setZoneID:
modelClassToRequiresPostProcessingMap
inflightPushOperations
setInflightPushOperations:
deviceIdentifier
setShutdownFuture:
setDestroyFuture:
_startUp
_cloudDatabase
_delegate
_database
_stateZone
_state
_share
_currentLeafRecord
_zoneID
_shareParticipants
_modelClassToRequiresPostProcessingMap
_inflightPushOperations
_propertyLock
_deviceIdentifier
_shutdownFuture
_destroyFuture
_modelContainer
fetchModelsWithParentModelID:ofType:error:
enumerateObjectsUsingBlock:
needsZoneCreation
boolValue
createPrivateZoneWithID:
na_map:
allObjects
anyObject
performBlock:
futureWithError:
removePrivateZoneWithID:
initWithRecordZoneID:
pushRecordsToUpdate:recordIDsToRemove:configuration:
updated
conflicts
allValues
firstObject
server
error
fetchReadyBlocksWithType:error:
userInfo
objectForKey:
initWithError:
client
ancestor
_client
_server
_ancestor
hmbIsCKPartialFailureError
domain
code
initWithUpdated:deleted:conflicts:error:
deleted
partialErrors
fatalError
_fatalError
_updated
_deleted
_partialErrors
_conflicts
_error
operationConfigurationWithProcessingOptions:
initWithRecordsToSave:recordIDsToDelete:
setConfiguration:
setSavePolicy:
setPerRecordCompletionBlock:
retryCloudKitOperationAfterError:retryBlock:
setWithArray:
setModifyRecordsCompletionBlock:
updatedValue
previousValue
_updatedValue
_previousValue
lock
strongToWeakObjectsMapTable
updateLocalZone:
objectLookup
removeObjectForKey:
fetchModelWithModelID:recordRow:error:
_selectRecordWithZoneRow:parentModelID:modelType:returning:error:
sqlBlockWithActivity:error:block:
_selectRecordWithZoneRow:parentModelID:returning:error:
_selectRecordsWithZoneRow:returning:error:
_selectRecordsWithZoneRow:modelType:returning:error:
fetchRecordRowWithExternalID:returning:error:
_updateRecordWithZoneRow:modelID:externalData:error:
_updateRecordWithZoneRow:externalID:externalData:error:
_deleteItemWithZoneRow:error:
_deleteRecordsWithZoneRow:error:
_deleteBlocksWithZoneRow:error:
_deleteZoneWithRow:error:
addOperationWithBlock:
insertBlockWithType:options:items:error:
update:remove:options:
typeNameForModelClass:
insertBlockToRemoveAllModelsWithType:modelTypes:options:error:
setSql:
shutdownFutures
shouldLogPrivateInformation
categoryWithName:inSubsystem:
initWithLocalDatabase:zoneID:zoneRow:delegate:modelContainer:mirror:
unregisterObjectWithModelID:
fetchModelWithModelID:error:
fetchModelWithModelID:ofType:error:
fetchAllModelsWithError:
fetchModelsOfType:error:
externalDataForModelID:error:
externalDataForExternalID:error:
externalIDForModelID:error:
modelIDForExternalID:error:
setExternalData:forModelID:
setExternalData:forExternalID:
update:options:
remove:options:
removeAllModelsOfTypes:options:
isShutdown
isShuttingDown
setLocalDatabase:
setShutdownFutures:
_localDatabase
_mirror
_objectLookup
_sql
_shutdownFutures
setWithCapacity:
initWithRecordName:zoneID:
externalRecordField
classObj
recordIDFromExternalID:error:
action
initWithRecordID:action:
setReference:
reference
containsObject:
isManateeContainer
encrypted
encryptedValuesByKey
cloudMetadataForModel:usingEncoding:
errorWithDomain:code:userInfo:
populateV4CloudRecord:withModel:metadataFieldData:startEncoding:endEncoding:error:
recordIDForModel:
initWithRecordType:recordID:
recordFromExternalData:error:
recordType
populateManateeCloudRecord:withModel:createdRecords:error:
hmf_numberForKey:
unsignedIntegerValue
cloudFieldForEncoding:
hmbUncompress
modelFromData:encoding:error:
associateWithContainer:
zoneName
setHmbExternallyFetched:
dataUsingEncoding:
labels
_name
compare:
isLessThan:
isGreaterThan:
isGreaterThanOrEqualTo:
isLessThanOrEqualTo:
properties
setHmbReserved:
valueForKey:
setHmbModelID:
setHmbParentModelID:
setHmbType:
hmbDataVersion
setHmbContainerDataVersion:
hmbReserved
removeObjectsForKeys:
allowedTypes
allKeys
initForReadingFromData:error:
finishDecoding
setValue:forKey:
hmbContainerDataVersion
dataVersion
_hmbAssociateWithContainer:
hasPrefix:
setWithObject:
string
_validateType:error:
arrayWithObject:
appendFormat:
setString:
excludeFromCloudStorage
hmbPrepareFor:
versionString
hmf_dictionaryForKey:
readonlyVersion
unavailableVersion
validateType:path:
isValidForContainer:updatedModelIDs:
encodeForSibling:error:
hmbGenericRepresentation
characterAtIndex:
hmbIsModelGenericRepresentation
hmbReadonlyBefore
hmbIsModelReadOnly
isOptional
hmbCanonicalTypeInferred
isSubclassOfClass:
null
defaultValue
unarchivedObjectOfClasses:fromData:error:
appendString:
hmbDependentUUIDs
hmbShouldLogPrivateInformation
loggingVisibility
hmf_boolForKey:
debugString:
componentsSeparatedByString:
resolveInstanceMethod:
setHmbShouldLogPrivateInformation:
hmbSchemaHashRoot
hmbExternalProperties
populateModelWithDictionary:
prepareFor:using:updatedModelIDs:error:
hmbMerge:
hmbDiff:differingFields:
hmbExternallyFetched
hmbPropertyIsExternal:
dumpDebug
setHmbDataVersion:
hmbLogRow
setHmbLogRow:
hmbRecordRow
setHmbRecordRow:
_hmbReserved
_hmbType
_hmbDataVersion
_hmbLogRow
_hmbRecordRow
_hmbContainerDataVersion
objectAtIndex:
isBackingStorageEqual:
substringWithRange:
lowercaseString
stringByAppendingString:
signatureWithObjCTypes:
invocationWithMethodSignature:
setTarget:
selector
setSelector:
setArgument:atIndex:
invoke
getReturnValue:
initWithSelector:
_selector
deleteMap
updateMap
metaProtocolLock
metaProtocolStorage
setSelectorsFor:update:delete:
_lock
_updateMap
_deleteMap
initWithProcessResult:
processResult
_processResult
initWithName:token:
initWithZoneRow:
initWithZoneRow:name:token:
setIdentifier:
setZoneRow:
replication
setReplication:
_identifier
_replication
setWithSet:
setByAddingObject:
initWithVersionString:
initWithDataVersion:legacyDataVersion:
classToNameTransform
nameToClassTransform
encodeAsNSDictionary:error:
encodeAsOPACK:error:
modelClassForTypeName:
hmf_stringForKey:
legacyDataVersion
decodeAsNSDictionary:error:
decodeAsOPACK:error:
modelFromDictionary:typeName:error:
modelFromData:encoding:type:error:
setClassToNameTransform:
setNameToClassTransform:
sortedArrayUsingSelector:
appendData:
hmf_UUIDWithNamespace:data:
mutableCopyWithZone:
objectPropertyHashLookup
setObjectPropertyHashLookup:
_legacyDataVersion
_dataVersion
_classToNameTransform
_nameToClassTransform
_objectPropertyHashLookup
setTypeName:forModelClass:
createInputBlockWithType:error:
inputContext:
environment
containerIdentifier
initWithContainerID:scope:name:modelID:
containerID
initWithContainerID:scope:
_containerID
_scope
setShouldUpdateClients:
shouldUpdateClients
allocWithZone:
shouldUpdateClientsAction
_shouldUpdateClients
newlineCharacterSet
componentsSeparatedByCharactersInSet:
externalID:
externalData:
resolveConflicts:options:
fetchShareMetadataForInvitations:
acceptInvitations:
initWithContainerID:scope:zoneID:
sharedDatabaseState
zoneStateByZoneID
acceptInvitation:
declineInvitation:
openWithURL:readOnly:error:
initWithLocalSQLContext:modelContainer:
setMaxConcurrentOperationCount:
path
setName:
_fetchAllZones:
removeLocalDataForZone:error:
immediateScheduler
localDatabase:willRemoveZoneWithID:
initWithDatastorePath:readOnly:modelContainer:
fetchZonesWithError:
openOrCreateZoneWithZoneID:delegate:error:
openExistingZoneWithZoneID:delegate:error:
openedZoneWithZoneID:
openOrCreateZoneWithMirror:delegate:error:
openExistingZoneWithMirror:delegate:error:
openedZoneWithMirror:
removeZone:
setQueue:
setLocal:
openZonesByZoneID
localZoneFactory
setLocalZoneFactory:
_queue
_local
_openZonesByZoneID
_localZoneFactory
assertOwner
_insertZoneWithIdentification:name:error:
future
addFailureBlock:
addSuccessBlock:
performCloudPullWithNilFetchToken:
performCloudPull:
setDesiredKeys:
setPreviousServerChangeToken:
initWithRecordZoneIDs:configurationsByRecordZoneID:
recordChangeTag
setRecordChangedBlock:
setRecordWithIDWasDeletedBlock:
setRecordZoneFetchCompletionBlock:
hmbIsCKChangeTokenExpiredError
hmbIsCKZoneDeletedError
updateServerChangeToken:forZoneWithID:error:
setFetchRecordZoneChangesCompletionBlock:
extantDatabasesLock
initWithOptions:capacity:
publicCloudDatabase
numberWithInteger:
objectForKeyedSubscript:
setDatabase:
privateCloudDatabase
sharedCloudDatabase
setDiscretionaryNetworkBehavior:
setUseZoneWidePCS:
initWithContainerID:options:
initWithLocalDatabase:stateZone:container:defaultOperationConfiguration:isManateeContainer:databaseStateModelsByScope:zoneStateModels:
container
initialCloudSyncFuture
setInitialCloudSyncFuture:
waitForManateeAvailability
updateSubscriptions:
setServerChangeToken:
privateDatabaseState
apsConnection
notificationFromRemoteNotificationDictionary:
cloudDatabase:didReceiveMessageWithUserInfo:
databaseScope
performCloudPullForScope:
recordZoneID
handleUpdatedZonesIDs:
cloudDatabase:didCreateZoneWithID:
performAdministrativeFetchForDatabaseScope:withForce:
removeStateForZoneID:
cloudDatabase:didRemoveZoneWithID:
hmbCloudKitRetryDelay
defaultOperationConfiguration
extantDatabases
connection:didReceivePublicToken:
connection:didReceiveToken:forTopic:identifier:
connection:didReceiveIncomingMessage:
connection:didReceiveMessageForTopic:userInfo:
connection:didSendOutgoingMessage:
connection:didFailToSendOutgoingMessage:error:
connection:didChangeConnectedStatus:
connectionDidReconnect:
initWithLocalDatabase:containerID:defaultOperationConfiguration:isManateeContainer:
performAdministrativeFetchForAllDatabases:
handleCreatedZoneIDs:
openOrCreatePrivateZoneWithID:delegate:error:
openExistingPrivateZoneWithID:delegate:error:
openExistingSharedZoneWithID:delegate:error:
setPrivateDatabaseState:
setSharedDatabaseState:
publicDatabaseState
setPublicDatabaseState:
setApsConnection:
manateeAvailabilityFuture
setManateeAvailabilityFuture:
_manateeContainer
_defaultOperationConfiguration
_initialCloudSyncFuture
_privateDatabaseState
_sharedDatabaseState
_publicDatabaseState
_zoneStateByZoneID
_container
_sharedDatabase
_privateDatabase
_publicDatabase
_apsConnection
_manateeAvailabilityFuture
cloudID
setCloudID:
hmbConciseCKError
initWithEnvironmentName:namedDelegatePort:queue:
enabledTopics
setEnabledTopics:
requestTokenForTopic:identifier:
serverPreferredPushEnvironmentWithCompletionHandler:
combineAllFutures:scheduler:
stringWithUTF8String:
lastAdministrativeFetch
timeIntervalSinceNow
fetchZonesOn:
fetchSubscriptionsOn:
subscription
setSubscription:
setLastAdministrativeFetch:
update:remove:
setWantsSubscription:
ownerName
initWithZoneID:
createCloudZone:on:
removeCloudZone:on:
fetchAllRecordZonesOperation
setFetchRecordZonesCompletionBlock:
setRecordZonesToSave:
setRecordZoneIDsToDelete:
setModifyRecordZonesCompletionBlock:
setSubscription:forZoneWithID:force:
registerSubscription:
unregisterSubscription:
outputBlockRow
model
initWithOutputBlockRow:recordRow:model:externalID:externalData:
setExternalID:
setExternalData:
_model
_outputBlockRow
numberWithUnsignedInteger:
groupID
options
initWithBlockRow:options:
_groupID
_options
_selectRecordsWithBlockRow:returning:error:
fetchOptionsForOutputBlock:error:
fetchRecordsForOutputBlock:error:
markGroupAsSentWithOutputBlock:tuples:
markTupleAsSent:
_deleteRecordWithRow:expectedOutputBlockRow:error:
referencedModelFrom:error:
referenceAction
setAction:
hmfErrorWithCode:userInfo:
fetchCompleteModelForRecordID:
initWithModelID:action:
referencedModelFromCloudZone:allowExternalFetch:
_reference
_action
defaultCenter
handleAccountChangedNotification:
addObserver:selector:name:object:
supportsDeviceToDeviceEncryption
removeObserver:name:object:
accountInfoWithCompletionHandler:
initWithEmailAddress:
initWithParticipantClientIdentifier:lookupInfo:
initWithPhoneNumber:
initWithUserRecordID:
participantClientIdentifier
lookupInfo
initWithParticipantClientIdentifier:emailAddress:
initWithParticipantClientIdentifier:phoneNumber:
initWithParticipantClientIdentifier:userRecordID:
_participantClientIdentifier
_lookupInfo
fetchCompleteModels:force:
fetchRecordRowsWithModelIDs:error:
fetchCompleteModelsForRecordIDs:
unionSet:
fetchCompleteModel:force:
fetchRecordsWithRecordIDs:desiredKeys:
removeObject:
initWithRecordIDs:
setFetchRecordsCompletionBlock:
hmbUUIDWithSQLite3Column:column:
hmbStringWithSQLite3Column:column:
initWithRecordRow:externalID:externalData:modelID:modelEncoding:modelData:modelSchema:modelType:pushEncoding:pushData:pushBlockRow:
modelType
pushEncoding
pushBlockRow
pushData
_pushEncoding
_pushData
_pushBlockRow
_modelType
initWithZoneName:ownerName:
initWithContainerID:scope:zoneID:name:modelID:
initWithSaved:removed:error:
saved
removed
_saved
_removed
modifySubscriptionsUpdate:remove:on:
subscriptionIDForCloudID:
subscriptionIDForZoneID:
fetchAllSubscriptionsOperation
setFetchSubscriptionCompletionBlock:
setSubscriptionsToSave:
setSubscriptionIDsToDelete:
setModifySubscriptionsCompletionBlock:
cloudZone:didEncounterConflicts:options:
_updateRecordWithZoneRow:modelID:pushEncoding:pushData:pushBlockRow:error:
initWithOwner:zoneRow:blockRow:
updateModelID:modelEncoding:modelData:
localDatabaseShouldLogPrivateInformation:
localDatabase:detectedLocalCorruptionWithInfo:
detectedLocalCorruptionWithInfo:
currentUserParticipant
participants
participantID
ckShareParticipant
acceptanceStatus
pendingInvitation
initWithCKShareParticipant:clientIdentifier:
setParticipant:
setPendingInvitation:
ownerParticipant
currentParticipant
_createInvitationWithContext:
isFinished
fetchParticipants:
na_firstObjectPassingTest:
invitationToken
_revokeShareForParticipant:
removeParticipant:
createInvitationWithContext:
revokeShareForParticipant:
addParticipant:
initWithLocalZone:modelID:parentModelID:model:
localZone:didUpdateFromToken:delta:
initWithLocalZone:model:
initWithLocalZone:modelID:parentModelID:
hmbValidLocalZone
hmbModelCache
setHmbModelCache:
hmbTransactionLock
_parentModelID
_hmbLocalZone
_transactionLock
_modelCache
_modifiedModels
_removedModelIDs
_hmbModelCache
_hmbTransactionLock
fetchUserRecordOn:
setUserIdentityLookupInfos:
setShareParticipantFetchedBlock:
setFetchShareParticipantsCompletionBlock:
setShareURLs:
setShareInvitationTokensByShareURL:
setPerShareMetadataBlock:
setFetchShareMetadataCompletionBlock:
setShareMetadatas:
setPerShareCompletionBlock:
setAcceptSharesCompletionBlock:
fetchCurrentUserRecordOperation
initWithModel:externalID:
initWithParticipant:remove:
remove
_remove
_participant
setPermission:
updateParticipant:
sqlTransactionWithActivity:error:block:
_insertItemWithZoneRow:blockRow:type:modelType:error:
_selectReadyBlocksWithZoneRow:type:error:
_selectItemsWithBlockRow:rowGreaterThan:limit:returning:error:
createOutputBlockWithError:
fetchItemsInBlock:after:limit:error:
initRequiringSecureCoding:
encodeSystemFieldsWithCoder:
finishEncoding
encodedData
initWithCapacity:
appendBytes:length:
hmbCompress
initWithModel:
setModel:
setModelID:
setParentModelID:
dependentModels
setDependentModels:
mark
setMark:
_dependentModels
_mark
sort:
integerValue
hmbIsCloudKitError
doubleValue
hmbIsCKNetworkFailureError
hmbIsSQLiteConstraintError
initWithMajorVersion:minorVersion:updateVersion:
versionWithHMDVersion:
getUUIDBytes:
dataWithBytes:length:
removeAllObjects
setArray:
databaseStateForDatabaseScope:
initWithPreviousServerChangeToken:
setFetchAllChanges:
setRecordZoneWithIDChangedBlock:
setRecordZoneWithIDWasDeletedBlock:
setFetchDatabaseChangesCompletionBlock:
initWithModel:encoded:
encoded
setEncoded:
_encoded
_deleteRecordWithZoneRow:modelID:error:
privateZoneIDs
sharedZoneIDs
fetchZones:
initBlock
initialize
setInitBlock:
_initBlock
close
close:
prepare
initWithName:parent:
begin
commit
rollback
hmbErrorWithSQLite3Statement:
UTF8String
hmbErrorWithSQLite3Context:statement:
fetchSQLite3:limit:error:block:
initWithURL:readOnly:
_prepareFrom:
_unprepare
sqlBlock:
sqlTransaction:
runSQLite3:
execSQLite3:
runSQLite3:error:
execSQLite3:error:
fetchSQLite3:error:block:
fetchSQLite3One:error:block:
setContext:
readOnly
setLock:
_begin
_commit
_rollback
_readOnly
_url
contextLock
contexts
objectEnumerator
fileSystemRepresentation
hmbErrorWithSQLite3Status:
unlock
absoluteURL
open:
open:readOnly:error:initializer:
open:readOnly:using:error:
numberWithInt:
longLongValue
numberWithLongLong:
numberWithDouble:
dataWithBytesNoCopy:length:freeWhenDone:
hmbDataWithSQLite3ColumnNoCopy:column:
hmbErrorWithSQLite3Context:
hmbErrorWithSQLContext:
hmbErrorWithSQLContext:statement:
stringWithCapacity:
_selectRecordWithZoneRow:externalID:returning:error:
compare:options:range:
searchEntries:for:options:
searchEntries:for:
absoluteString
lastPathComponent
regularExpressionWithPattern:options:error:
defaultManager
stringByDeletingLastPathComponent
contentsOfDirectoryAtPath:error:
firstMatchInString:options:range:
rangeAtIndex:
stringByAppendingPathComponent:
removeItemAtPath:error:
unlinkDatastoreAt:everything:
_selectZoneWithRow:error:
_updateZoneWithRow:replication:error:
_deleteItemWithZoneRow:type:externalID:error:
_selectItemWithZoneRow:type:externalID:returning:error:
_deleteNullItemsWithZoneRow:type:error:
_updateRecordWithRow:expectedOutputBlockRow:externalID:externalData:error:
_deleteRecordWithZoneRow:externalID:error:
flush:
insertStore
deleteStore
selectStore
selectStores
updateStoreReplicationData
insertBlock
selectBlock
deleteBlock
deleteBlocksStore
updateBlock
selectReadyBlocks
selectReadyInputBlocks
deleteNullBlocks
insertItem
insertItemForModel
updateItem
deleteItem
deleteItemsBlock
deleteItemsStore
deleteItemStoreExternal
selectItemBlockExteral
selectItemsBlock
selectItemsBlockLimit
deleteNullItems
deleteNullItemsType
insertRecord
updateRecord
updateRecordExternal
updateRecordExternalPush
updateRecordExternalExternal
updateRecordExternalUUID
updateRecordPush
updateRecordPushUUID
updateRecordsClearPush
deleteRecord
deleteRecordBlock
deleteRecordUUID
deleteRecordExternal
deleteRecordsStore
deleteZombieRecords
selectRecordUUIDExternal
selectRecordUUID
selectRecordExternal
selectRecordsPushBlock
selectRecordsParentUUID
selectRecordsParentUUIDType
selectRecordsOfType
selectRecords
cStringUsingEncoding:
arrayWithObjects:
distantPast
setLastSubscriptionPush:
_clientIdentifier
_pendingInvitation
_ckShareParticipant
applyTo:
initWithClass:options:
setOptional:
setLoggingVisibility:
setDefaultValue:
setReadonlyVersion:
setUnavailableVersion:
setExternalRecordField:
optionalFieldWithClass:
fieldWithClass:options:
optionalFieldWithClass:options:
deprecatedField
setEncrypted:
setExcludeFromCloudStorage:
_encrypted
_excludeFromCloudStorage
_optional
_classObj
_externalRecordField
_loggingVisibility
_defaultValue
_readonlyVersion
_unavailableVersion
fieldName
initWithExternalRecordField:encrypted:
_fieldName
externalRecordField:
encryptedExternalRecordField:
lastSubscriptionPush
wantsSubscription
initWithSubscriptionID:
subscriptionID
initWithZoneID:subscriptionID:
registerPrivateSubscription:
registerSharedSubscription:
unregisterPrivateSubscription:
unregisterSharedSubscription:
@32@0:8@16@24
v16@0:8
@40@0:8@16@24@32
@48@0:8@16Q24@32@40
@24@0:8@16
B40@0:8@16@24^@32
@16@0:8
@"HMBLocalZone"
@"HMBLocalSQLContextInputBlock"
@"HMFActivity"
B16@0:8
v24@0:8@16
v24@0:8@"NSCoder"16
@24@0:8@"NSCoder"16
v32@0:8@16@24
@?16@0:8
v24@0:8@?16
v20@0:8B16
Q16@0:8
q16@0:8
v24@0:8q16
@"NSString"
@"NSDictionary"
@"NSUUID"
@32@0:8@16Q24
v24@0:8Q16
@"HMBProcessingOptions"
@"NAFuture"
@36@0:8@16B24^@28
@48@0:8@16@24@32^@40
@"HMBCloudZone"
@"HMBBackedObjectBase"
@24@0:8^{_NSZone=}16
@48@0:8@16@24@32@40
@56@0:8@16@24@32@40@48
B24@0:8@16
@"HMBShareInvitationContext"
@"HMBCloudZoneID"
@"NSDate"
@"NSURL"
@"CKDeviceToDeviceShareInvitationToken"
@40@0:8Q16Q24@32
@"NSData"
@56@0:8Q16@24@32Q40@48
@32@0:8^{sqlite3_stmt=}16Q24
@80@0:8@16@24Q32Q40@48@56@64@72
@"HMBModel"
@24@0:8Q16
@48@0:8@16Q24Q32Q40
@48@0:8@16@24Q32@40
@"HMBLocalSQLContext"
#24@0:8@16
v32@0:8@16#24
#16@0:8
@24@0:8:16
@32@0:8:16@24
@40@0:8:16@24@32
B24@0:8#16
B24@0:8:16
Vv16@0:8
^{_NSZone=}16@0:8
B24@0:8@"Protocol"16
@"NSString"16@0:8
@"NAFuture"48@0:8@"HMBLocalZone"16@"HMBModel"24@"HMBModel"32@"HMBProcessingOptions"40
@"NAFuture"40@0:8@"HMBLocalZone"16@"HMBModel"24@"HMBProcessingOptions"32
B32@0:8@16@24
@32@0:8@16^B24
@32@0:8@16@?24
@"HMBBackedObjectMetaProtocol"
@"HMFLogCategory"16@0:8
B32@0:8@16^@24
@32@0:8Q16@24
B32@0:8@"HMBLocalZone"16^@24
@"NAFuture"16@0:8
@"NAFuture"32@0:8Q16@"HMBProcessingOptions"24
@"<HMBLocalZoneID>"16@0:8
@"HMBCloudDatabase"
@"<HMBCloudZoneDelegate>"
@"CKDatabase"
@"HMBCloudZoneStateModel"
@"HMBCloudZoneShareModel"
@"CKRecord"
@"NSMutableDictionary"
@"NSMapTable"
@"HMFUnfairLock"
@"HMBModelContainer"
@"NSSet"
@"NSError"
@64@0:8@16@24Q32@40@48@56
@32@0:8@16^@24
@40@0:8@16#24^@32
@24@0:8^@16
@32@0:8#16^@24
@"HMBLocalDatabase"
@"<HMBLocalZoneID>"
@"<HMBMirrorProtocol>"
@"<HMBLocalZoneDelegate>"
@"NSMutableArray"
B48@0:8@16@24@32^@40
@"NSArray"16@0:8
@"NSData"16@0:8
v32@0:8@16@"NSString"24
@24@0:8@"NSString"16
@32@0:8@"NSString"16^B24
B24@0:8@"NSString"16
@48@0:8Q16@24@32^@40
@20@0:8B16
@"HMFVersion"
:16@0:8
v24@0:8:16
@24@0:8#16
v40@0:8@16#24#32
v40@0:8#16:24:32
@40@0:8Q16@24@32
Q24@0:8Q16
@56@0:8@16Q24Q32@40^@48
@40@0:8@16@24^@32
@48@0:8@16Q24@32^@40
@40@0:8@16Q24^@32
@32@0:8@16q24
@48@0:8@16q24@32@40
@"CKContainerID"
@36@0:8@16B24@28
@"<HMBLocalDatabaseDelegate>"
@"NSOperationQueue"
B32@0:8@16@?24
v48@0:8@16@24@32@40
v40@0:8@16@24@32
v28@0:8@16B24
v32@0:8@"APSConnection"16@"NSData"24
v48@0:8@"APSConnection"16@"NSData"24@"NSString"32@"NSString"40
v32@0:8@"APSConnection"16@"APSIncomingMessage"24
v40@0:8@"APSConnection"16@"NSString"24@"NSDictionary"32
v32@0:8@"APSConnection"16@"APSOutgoingMessage"24
v40@0:8@"APSConnection"16@"APSOutgoingMessage"24@"NSError"32
v28@0:8@"APSConnection"16B24
v24@0:8@"APSConnection"16
@68@0:8@16@24@32@40B48@52@60
@44@0:8@16@24@32B40
@28@0:8q16B24
@"<HMBCloudDatabaseDelegate>"
@"CKOperationConfiguration"
@"HMBCloudDatabaseStateModel"
@"CKContainer"
@"APSConnection"
@56@0:8Q16Q24@32@40@48
@32@0:8Q16^@24
@28@0:8@16B24
@"CKReference"
@"CKUserIdentityLookupInfo"
@104@0:8Q16@24@32@40Q48@56@64@72Q80@88Q96
@56@0:8@16q24@32@40@48
@40@0:8@16q24@32
@"CKRecordZoneID"
@"NSArray"
@40@0:8@16Q24Q32
@40@0:8@16Q24@32
@"NSUUID"40@0:8@"HMBLocalZone"16@"NSUUID"24@"NSSet"32
v48@0:8@"HMBLocalZone"16@"HMBProcessingOptions"24@"NAFuture"32@"NAFuture"40
@40@0:8@16@24^B32
@"NSMutableSet"
@"CKShareParticipant"
Q48@0:8Q16@24@32^@40
@48@0:8@16@24Q32^@40
B32@0:8Q16^@24
d16@0:8
@24@0:8q16
@56@0:8@16Q24Q32Q40^@48
B64@0:8@16@24@32Q40Q48^@56
@24@0:8@?16
@24@0:8r*16
@24@0:8^{sqlite3_stmt=}16
B32@0:8r*16^@24
Q32@0:8^{sqlite3_stmt=}16^@24
B40@0:8^{sqlite3_stmt=}16^@24@?32
B48@0:8^{sqlite3_stmt=}16Q24^@32@?40
^{sqlite3=}16@0:8
v24@0:8^{sqlite3=}16
^{sqlite3_stmt=}
^{sqlite3=}
@44@0:8@16B24^@28@?36
@44@0:8@16B24#28^@36
@28@0:8^{sqlite3_stmt=}16i24
@32@0:8@16r*24
@24@0:8^{sqlite3=}16
@32@0:8^{sqlite3=}16r*24
@20@0:8i16
@40@0:8@16^Q24^@32
@40@0:8@16@24Q32
B40@0:8@16^@24@?32
Q40@0:8@16@24^@32
B40@0:8Q16@24^@32
Q40@0:8Q16Q24^@32
@40@0:8Q16Q24^@32
Q56@0:8Q16Q24@32@40^@48
Q80@0:8Q16Q24Q32@40@48Q56@64^@72
Q56@0:8Q16Q24Q32@40^@48
B80@0:8Q16Q24Q32@40@48Q56@64^@72
B48@0:8Q16Q24@32^@40
@56@0:8Q16Q24@32Q40^@48
@56@0:8Q16Q24Q32Q40^@48
B40@0:8Q16Q24^@32
Q120@0:8Q16@24@32@40@48@56Q64@72@80Q88@96Q104^@112
B48@0:8Q16@24@32^@40
B56@0:8Q16Q24@32@40^@48
B64@0:8Q16@24Q32@40Q48^@56
B56@0:8Q16Q24@32Q40^@48
@40@0:8Q16@24^@32
@48@0:8Q16@24Q32^@40
@56@0:8Q16@24@32Q40^@48
@"HMBShareInvitation"
@32@0:8#16@24
@32@0:8B16@20B28
