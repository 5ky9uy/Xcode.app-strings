NSt3__120__shared_ptr_emplaceI19CLConnectionMessageNS_9allocatorIS1_EEEE
NSt3__120__shared_ptr_emplaceI28CLConnectionEntitlementCacheNS_9allocatorIS1_EEEE
21CLCallbackDropManager
NSt3__120__shared_ptr_emplaceIiNS_9allocatorIiEEEE
NSt3__120__shared_ptr_emplaceI26CLConnectionClientInternalNS_9allocatorIS1_EEEE
@(#)PROGRAM:LocationSupport  PROJECT:CoreLocation-2388.0.20
CLSettingsManager
hash
TQ,R
superclass
T#,R
description
T@"NSString",R,C
debugDescription
valid
TB,N
manager
T@"<CLSettingsManagerProtocol>",&,N,V_manager
universe
T@"CLIntersiloUniverse",&,N,V_universe
settingsChangeHandler
T@?,C,N,V_settingsChangeHandler
TB,N,V_valid
v16@?0@"NSObject<OS_xpc_object>"8
v8@?0
v24@?0{shared_ptr<CLConnectionMessage>=^{CLConnectionMessage}^{__shared_weak_count}}8
com.apple.LocationSupport
Connection
XPC_TYPE_NULL
XPC_TYPE_BOOL
XPC_TYPE_INT64
XPC_TYPE_UINT64
XPC_TYPE_DOUBLE
XPC_TYPE_DATE
XPC_TYPE_DATA
XPC_TYPE_STRING
XPC_TYPE_UUID
XPC_TYPE_FD
XPC_TYPE_SHMEM
XPC_TYPE_ARRAY
XPC_TYPE_DICTIONARY
Unknown type
assert
32 > numArguments
%s:%d: assertion failure in %s
/BuildRoot/Library/Caches/com.apple.xbs/Sources/CoreLocationFramework_Sim/CoreLocation-2388.0.20/Shared/Intersilo/CLIntersiloInterface.mm
-[CLIntersiloInterfaceSelectorInfo initWithSelector:andMethodSignature:]
syncget
0 != returnValueSize
0 == returnValueSize
withReply:
0 == _returnAddressIndex
T:,R,N,V_sel
replyBlockIndex
Ti,R,N,V_replyBlockIndex
returnAddressIndex
Ti,R,N,V_returnAddressIndex
T@"NSMethodSignature",R,&,N,V_sig
typeStr
T@"NSString",R,C,D,N
v16@?0^{unordered_map<SEL *, CLIntersiloInterfaceSelectorInfo *, std::__1::hash<SEL *>, std::__1::equal_to<SEL *>, std::__1::allocator<std::__1::pair<SEL *const, CLIntersiloInterfaceSelectorInfo *> > >={__hash_table<std::__1::__hash_value_type<SEL *, CLIntersiloInterfaceSelectorInfo *>, std::__1::__unordered_map_hasher<SEL *, std::__1::__hash_value_type<SEL *, CLIntersiloInterfaceSelectorInfo *>, std::__1::hash<SEL *>, true>, std::__1::__unordered_map_equal<SEL *, std::__1::__hash_value_type<SEL *, CLIntersiloInterfaceSelectorInfo *>, std::__1::equal_to<SEL *>, true>, std::__1::allocator<std::__1::__hash_value_type<SEL *, CLIntersiloInterfaceSelectorInfo *> > >={unique_ptr<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<SEL *, CLIntersiloInterfaceSelectorInfo *>, void *> *> *[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<SEL *, CLIntersiloInterfaceSelectorInfo *>, void *> *> *> > >={__compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<SEL *, CLIntersiloInterfaceSelectorInfo *>, void *> *> **, std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<SEL *, CLIntersiloInterfaceSelectorInfo *>, void *> *> *> > >=^^{__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<SEL *, CLIntersiloInterfaceSelectorInfo *>, void *> *>}{__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<SEL *, CLIntersiloInterfaceSelectorInfo *>, void *> *> *> >={__compressed_pair<unsigned long, std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<SEL *, CLIntersiloInterfaceSelectorInfo *>, void *> *> *> >=Q}}}}{__compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<SEL *, CLIntersiloInterfaceSelectorInfo *>, void *> *>, std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<SEL *, CLIntersiloInterfaceSelectorInfo *>, void *> > >={__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<SEL *, CLIntersiloInterfaceSelectorInfo *>, void *> *>=^{__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<SEL *, CLIntersiloInterfaceSelectorInfo *>, void *> *>}}}{__compressed_pair<unsigned long, std::__1::__unordered_map_hasher<SEL *, std::__1::__hash_value_type<SEL *, CLIntersiloInterfaceSelectorInfo *>, std::__1::hash<SEL *>, true> >=Q}{__compressed_pair<float, std::__1::__unordered_map_equal<SEL *, std::__1::__hash_value_type<SEL *, CLIntersiloInterfaceSelectorInfo *>, std::__1::equal_to<SEL *>, true> >=f}}}8
__objc_no
-[CLIntersiloInterface extendSelectorInfoWithProtocol:bases:]
iter != selectorMap.end()
-[CLIntersiloInterface getInfoForSelector:]_block_invoke
Intersilo
allocator<T>::allocate(size_t n) 'n' exceeds maximum supported size
CohortToNameMapFile
CohortToNameMap
NameToCohortMap
CLSilo: %@
/BuildRoot/Library/Caches/com.apple.xbs/Sources/CoreLocationFramework_Sim/CoreLocation-2388.0.20/Shared/Intersilo/CLSilo.m
-[CLSilo assertInside]
-[CLSilo assertOutside]
-[CLSilo suspend]
-[CLSilo resume]
-[CLSilo currentLatchedAbsoluteTimestamp]
-[CLSilo newTimer]
-[CLSilo async:]
-[CLSilo sync:]
-[CLSilo afterInterval:async:]
identifier
T@"NSString",R,N,V_identifier
com.apple.locationd.Support
Support
[%@ %@]
cprofile_set_current_identifier
/System/Library/PrivateFrameworks/CProfileRuntime.framework/CProfileRuntime
CPROFILE_ENABLE
locationd became fatally blocked. Implicated services: %s
CLSettingsManagerInternalSilo
-[CLSettingsManagerInternal updateClientsWithDictionary:]
/BuildRoot/Library/Caches/com.apple.xbs/Sources/CoreLocationFramework_Sim/CoreLocation-2388.0.20/Daemon/Shared/Utilities/CLSettingsManagerInternal.m
![dictionary isKindOfClass:[NSMutableDictionary class]]
clients
T@"NSMutableSet",&,V_clients
settingsDictionary
T@"NSMutableDictionary",&,V_settingsDictionary
v16@?0@"NSTimer"8
timer
T@"CLTimer",W,N
underlyingTimer
T@"NSTimer",&,N,V_underlyingTimer
fireBlock
T@?,C,N,V_fireBlock
runloop
T@"NSRunLoop",&,N,V_runloop
T@"CLTimer",W,N,V_timer
threadId
T^{_opaque_pthread_t=q^{__darwin_pthread_handler_rec}[8176c]},R,N,V_threadId
underlyingRunLoop
T@"NSRunLoop",R,N,V_underlyingRunLoop
underlyingThread
T@"NSThread",R,N,V_underlyingThread
shouldCancelThread
TB,R,N,V_shouldCancelThread
default
%@(%@)
v16@?0@"NSMutableDictionary"8
_siloThread
/BuildRoot/Library/Caches/com.apple.xbs/Sources/CoreLocationFramework_Sim/CoreLocation-2388.0.20/Shared/Intersilo/CLRunLoopSilo.m
-[CLRunLoopSilo initWithIdentifier:]
RunLoop: %p
-[CLRunLoopSilo getTimeCoercibleVariantInstance]
-[CLRunLoopSilo assertInside]
[NSRunLoop currentRunLoop] == _siloThread.underlyingRunLoop
-[CLRunLoopSilo assertOutside]
[NSRunLoop currentRunLoop] != _siloThread.underlyingRunLoop
-[CLRunLoopSilo suspend]
-[CLRunLoopSilo resume]
CLRunLoopSilo: %@ - %@
_handler
/BuildRoot/Library/Caches/com.apple.xbs/Sources/CoreLocationFramework_Sim/CoreLocation-2388.0.20/Shared/Intersilo/CLTimer.m
-[CLTimer shouldFire]
handler
T@?,C,N,V_handler
nextFireDelay
Td,N,V_nextFireDelay
fireInterval
Td,N,V_fireInterval
nextFireTime
Td,D,N
Timer
__null == fConnection
/BuildRoot/Library/Caches/com.apple.xbs/Sources/CoreLocationFramework_Sim/CoreLocation-2388.0.20/Shared/IPC/CLConnection.mm
~CLConnection
__null == fDestructionHandler
fEventQueue
initializeConnection_nl
activity
fPaused
start
!fPaused
pause
<Indeterminate>
kCLConnectionMessageNameKey
kCLConnectionMessageInfoKey
kCLConnectionMessageFileDescriptorKey
((void *)0)
/BuildRoot/Library/Caches/com.apple.xbs/Sources/CoreLocationFramework_Sim/CoreLocation-2388.0.20/Shared/Intersilo/CLIntersiloService.m
+[CLIntersiloService getSilo]
+[CLIntersiloService performSyncOnSilo:invoker:]
-[CLIntersiloService init]
!_silo
-[CLIntersiloService setSilo:]
!_vendor
-[CLIntersiloService setVendor:]
Silo: %@
silo
T@"CLSilo",R,N
vendor
T@"CLServiceVendor",R,N
T@"<CLIntersiloUniverse>",R,N
T@"CLSilo",R,N,V_silo
T@"CLServiceVendor",R,N,V_vendor
!_inUse
-[CLIntersiloServiceMockPayload setInUse:]
inUse
TB,N,V_inUse
expectation
T@"XCTestExpectation",R,N,V_expectation
inputDictionary
T@"NSDictionary",R,N,V_inputDictionary
outputDictionary
T@"NSDictionary",R,N,V_outputDictionary
self.keyedPayloads
-[CLIntersiloServiceMock setPayload:forKey:]
![self.keyedPayloads objectForKey:key]
payload
-[CLIntersiloServiceMock getPayloadForKey:]
-[CLIntersiloServiceMock removePayloadForKey:]
keyedPayloads
T@"NSMutableDictionary",&,N,V_keyedPayloads
v16@?0@"NSNotification"8
notificationObserver
T@,&,N,V_notificationObserver
v32@?0@8@16^B24
~CLConnectionClientInternal
/BuildRoot/Library/Caches/com.apple.xbs/Sources/CoreLocationFramework_Sim/CoreLocation-2388.0.20/Shared/IPC/CLConnectionClient.mm
!fIsValid
dictionary
T@"NSDictionary",&,N,V_internal
-[CLDispatchTimerScheduler reflectNextFireDelay:fireInterval:]
/BuildRoot/Library/Caches/com.apple.xbs/Sources/CoreLocationFramework_Sim/CoreLocation-2388.0.20/Shared/Intersilo/CLDispatchSilo.m
_source
source
T@"NSObject<OS_dispatch_source>",&,N,V_source
T@"CLTimer",W,N,Vtimer
T@"CLTimer",R,W,N,V_timer
MainSilo
%@.NSOperationQueue
CLDispatchSilo: %s
B24@?0@8@"NSDictionary"16
timerHolders
T@"NSMutableArray",R,N,V_timerHolders
peer
T@"CLIntersiloProxy",R,N,V_peer
T@"CLIntersiloProxy",R,W,N,V_peer
postInit == initiatorProxy
/BuildRoot/Library/Caches/com.apple.xbs/Sources/CoreLocationFramework_Sim/CoreLocation-2388.0.20/Shared/Intersilo/CLIntersiloProxy.m
+[CLIntersiloProxy proxyForRecipientObject:inSilo:recipientName:]
postInit == recipientProxy
![inv argumentsRetained]
-[CLIntersiloProxy forwardInvocation:]
_delegate
_delegateSilo
CLService: Block was not compiled using a compiler that inserts type information about arguments. (%@)
v16@?0@"NSInvocation"8
(id)[NSNull null] != _delegate
_delegate == (id)[NSNull null] && !_delegateSilo
-[CLIntersiloProxy registerDelegate:inSilo:]
<%@: peer silo:%@, peer name:<REDACTED>>
-[CLIntersiloProxy peer]
delegate
T@"<CLIntersiloProxyDelegateProtocol>",R,W,N,V_delegate
delegateSilo
T@"CLSilo",R,W,N,V_delegateSilo
svcClass
T#,R,N,V_svcClass
residentCount
Ti,N,V_residentCount
synCount
Ti,R,N,V_synCount
ackCount
Ti,R,N,V_ackCount
/BuildRoot/Library/Caches/com.apple.xbs/Sources/CoreLocationFramework_Sim/CoreLocation-2388.0.20/Shared/Intersilo/CLServiceVendor.mm
+[_Locationd performSyncOnSilo:invoker:]
0 <= dewrappedDeficit
validateTrackedSilos_block_invoke
record.svcClass
v32@?0@"CLSilo"8@"CLServiceVendorHeartbeatRecord"16^B24
locationd: Heartbeat underflow
q24@?0@8@16
Adapter
_CLUnSupportedService
CLServiceVendorQueue
CLServiceVendor.HeartbeatCheckInterval
HeartAttackStackshot
IsInternalInstall
IsLocationServicesEnabled
0 == [_catalog count]
-[CLServiceVendor enableTimeCoercion]
!_timeCoercibleSilos
remapping
-[CLServiceVendor setServiceReplacementMap:missBehavior:]_block_invoke
newEffectiveSvcName
oldEffectiveSvcName
[oldEffectiveSvcName isEqual:newEffectiveSvcName]
Test
Mock
supportsSecureCoding
TB,R
cppObjectPtr
Tr^v,N,V_cppObjectPtr
destructor
T@?,C,N,V_destructor
serialized
T@"NSData",C,N,V_serialized
compatibilityInfo
T@,C,N,V_compatibilityInfo
encoder
T@?,C,N,V_encoder
Couldn't create XPC service
Got error: %{public}s
Unexpected event type %{public}s
{"msg%{public}.0s":"Too many arguments to selector in IntersiloInterface", "event":%{public, location:escape_only}s, "condition":%{private, location:escape_only}s}
{"msg%{public}.0s":"Methods beginning 'syncget...' must return non-void", "event":%{public, location:escape_only}s, "condition":%{private, location:escape_only}s}
{"msg%{public}.0s":"Methods returning non-void must begin 'syncget...'", "event":%{public, location:escape_only}s, "condition":%{private, location:escape_only}s}
{"msg%{public}.0s":"Assertion failed", "event":%{public, location:escape_only}s, "condition":%{private, location:escape_only}s}
{"msg%{public}.0s":"Selector extension failed!", "proto":%{public, location:escape_only}@, "bases":%{public, location:escape_only}@, "event":%{public, location:escape_only}s, "condition":%{private, location:escape_only}s}
{"msg%{public}.0s":"getInfoForSelector called on a missing selector", "event":%{public, location:escape_only}s, "condition":%{private, location:escape_only}s}
CLRunLoopSilo initialization timed out
{"msg%{public}.0s":"CLRunLoopSiloThread failed to init", "event":%{public, location:escape_only}s, "condition":%{private, location:escape_only}s}
{"msg%{public}.0s":"CLRunLoopSilo doesn't support time coercion. See rdar://problem/45973444", "event":%{public, location:escape_only}s, "condition":%{private, location:escape_only}s}
{"msg%{public}.0s":"CLRunLoopSilo doesn't support suspend. See rdar://problem/45973444", "event":%{public, location:escape_only}s, "condition":%{private, location:escape_only}s}
{"msg%{public}.0s":"CLRunLoopSilo doesn't support resume. See rdar://problem/45973444", "event":%{public, location:escape_only}s, "condition":%{private, location:escape_only}s}
{"msg%{public}.0s":"No handler set for the CLTimer.", "event":%{public, location:escape_only}s, "condition":%{private, location:escape_only}s}
{"msg%{public}.0s":"deferredDelete() should have nulled out connection", "event":%{public, location:escape_only}s, "condition":%{private, location:escape_only}s}
{"msg%{public}.0s":"deferredDelete() should have nulled out handler", "event":%{public, location:escape_only}s, "condition":%{private, location:escape_only}s}
{"msg%{public}.0s":"CLConnections must always have event queues", "event":%{public, location:escape_only}s, "condition":%{private, location:escape_only}s}
#Warning Unhandled message %s
CL: CLConnection::handleInterruption
{"msg%{public}.0s":"CLConnection::handleInterruption", "event":%{public, location:escape_only}s}
CL: CLConnection::handleDisconnection
{"msg%{public}.0s":"CLConnection::handleDisconnection", "event":%{public, location:escape_only}s}
CL: CLConnection::sendMessageInternal
{"msg%{public}.0s":"CLConnection::sendMessageInternal", "event":%{public, location:escape_only}s, "name":%{public, location:escape_only}s}
Couldn't create XPC message
Error on message reply (sync) for %{public}s (%{public}s)
Dropping unexpected response (not a dictionary)
{"msg%{public}.0s":"Cannot call start() on an unpaused CLConnection.", "event":%{public, location:escape_only}s, "condition":%{private, location:escape_only}s}
{"msg%{public}.0s":"Cannot call pause() on a paused CLConnection.", "event":%{public, location:escape_only}s, "condition":%{private, location:escape_only}s}
#Warning The client name could not be determined.
The received data object is invalid: %{private}@
Unable to send reply, a reply message does not exist.
#Warning Connection interrupted!
#Warning Location connection invalid!
Got unexpected location event
Error on message reply (%{public}s)
Ignoring unexpected event
{"msg%{public}.0s":"-becameFatallyBlocked:index: was not overriden", "class":%{public, location:escape_only}@}
{"msg%{public}.0s":"The silo associated with a CLIntersiloService may not be changed once set", "event":%{public, location:escape_only}s, "condition":%{private, location:escape_only}s}
{"msg%{public}.0s":"The vendor associated with a CLIntersiloService may not be changed once set", "event":%{public, location:escape_only}s, "condition":%{private, location:escape_only}s}
{"msg%{public}.0s":"Payloads can't be reused!", "event":%{public, location:escape_only}s, "condition":%{private, location:escape_only}s}
{"msg%{public}.0s":"Overrider didn't call up to super for beginService?", "event":%{public, location:escape_only}s, "condition":%{private, location:escape_only}s}
{"msg%{public}.0s":"Only one payload per key at at time", "event":%{public, location:escape_only}s, "condition":%{private, location:escape_only}s}
{"msg%{public}.0s":"A payload must be ready for this key", "event":%{public, location:escape_only}s, "condition":%{private, location:escape_only}s}
{"msg%{public}.0s":"A payload must be around to remove for this key", "event":%{public, location:escape_only}s, "condition":%{private, location:escape_only}s}
Setting handler for message %s
CL: CLConnectionClient::sendMessage(cache)
{"msg%{public}.0s":"CLConnectionClient::sendMessage(cache)", "event":%{public, location:escape_only}s}
CL: CLConnectionClient::sendMessage(reply) (Fallback)
{"msg%{public}.0s":"CLConnectionClient::sendMessage(reply)", "event":%{public, location:escape_only}s}
received daemon start notification for service %@
Invalidating connection
#Warning Sending an un-cached message '%{public}s' without first clearing the previously cached value
{"msg%{public}.0s":"Trying to cache a reply message", "messageName":%{public, location:escape_only}s}
Creating connection
CL: Sending cached messages to daemon
{"msg%{public}.0s":"Sending cached messages to daemon", "event":%{public, location:escape_only}s}
#Warning stackshot only available on device
#Warning Time should not be moved backwards; systems based on monotonic time (like CLTimer) will misbehave.
{"msg%{public}.0s":"Intersilo proxy init changed self", "event":%{public, location:escape_only}s, "condition":%{private, location:escape_only}s}
{"msg%{public}.0s":"Delegate is necessary for reply delivery", "event":%{public, location:escape_only}s, "condition":%{private, location:escape_only}s}
{"msg%{public}.0s":"Silo is necessary for reply delivery", "event":%{public, location:escape_only}s, "condition":%{private, location:escape_only}s}
{"msg%{public}.0s":"A delegate must be set before sending messages with byref return address parameters", "event":%{public, location:escape_only}s, "condition":%{private, location:escape_only}s}
{"msg%{public}.0s":"The object passed to byref return address parameters MUST BE the registered delegate", "event":%{public, location:escape_only}s, "condition":%{private, location:escape_only}s}
{"msg%{public}.0s":"Didn't expect the arguments to be retained before now", "event":%{public, location:escape_only}s, "condition":%{private, location:escape_only}s}
{"msg%{public}.0s":"Once registered, delegate may not be changed", "event":%{public, location:escape_only}s, "condition":%{private, location:escape_only}s}
{"msg%{public}.0s":"-peer should never be invoked at this level...", "event":%{public, location:escape_only}s, "condition":%{private, location:escape_only}s}
_Locationd should come last?!
{"msg%{public}.0s":"Don't message _Locationd", "event":%{public, location:escape_only}s, "condition":%{private, location:escape_only}s}
{"msg%{public}.0s":"Heartbeat tracking commenced", "silo":%{public, location:escape_only}@}
{"msg%{public}.0s":"Heartbeat tracking terminated", "silo":%{public, location:escape_only}@}
{"msg%{public}.0s":"Deltafied deficit should be non-negative", "event":%{public, location:escape_only}s, "condition":%{private, location:escape_only}s}
{"msg%{public}.0s":"#Warning Heartbeat underflow; going to crash now!", "silo":%{public, location:escape_only}@}
{"msg%{public}.0s":"Only living, non-nil services should be heart-beaten", "event":%{public, location:escape_only}s, "condition":%{private, location:escape_only}s}
{"msg%{public}.0s":"#Warning Heartbeat underflow", "silo":%{public, location:escape_only}@, "deficit":%{public}d}
{"msg%{public}.0s":"Heartbeat tracking already enabled", "interval":"%{public}f"}
{"msg%{public}.0s":"Heartbeat tracking resumed", "interval":"%{public}f"}
{"msg%{public}.0s":"Heartbeat tracking suspended"}
{"msg%{public}.0s":"Heartbeat tracking already disabled"}
{"msg%{public}.0s":"Enabling Time Coercion must be done before any services are started", "event":%{public, location:escape_only}s, "condition":%{private, location:escape_only}s}
{"msg%{public}.0s":"Only enable Time Coercion once, eh?", "event":%{public, location:escape_only}s, "condition":%{private, location:escape_only}s}
{"msg%{public}.0s":"Service replacement map must be non-nil if set", "event":%{public, location:escape_only}s, "condition":%{private, location:escape_only}s}
{"msg%{public}.0s":"Existing services must not fail to map under new mapping and behavior", "event":%{public, location:escape_only}s, "condition":%{private, location:escape_only}s}
{"msg%{public}.0s":"Should be impossible for an existing service to fail to map under existing mapping and behavior, and must be non-nil for next test", "event":%{public, location:escape_only}s, "condition":%{private, location:escape_only}s}
{"msg%{public}.0s":"Old and new mappings and behaviors must agree about any service which has started", "event":%{public, location:escape_only}s, "condition":%{private, location:escape_only}s}
{"msg%{public}.0s":"Configuring service replacement map", "ReplacementMap":%{public, location:escape_only}@, "MissBehavior":%{public}d}
{"msg%{public}.0s":"Test and Mock services may only be looked up indirectly via -setServiceReplacementMap:", "RequestedServiceName":%{public, location:escape_only}@}
{"msg%{public}.0s":"Unavailable service requested", "RequestedServiceName":%{public, location:escape_only}@}
{"msg%{public}.0s":"Service replacement map does not include requested service", "RequestedServiceName":%{public, location:escape_only}@, "ReplacementMap":%{public, location:escape_only}@}
{"msg%{public}.0s":"Looking up service identified by name", "ServiceName":%{public, location:escape_only}@}
{"msg%{public}.0s":"Tried to look up a service by name that doesn't exist", "RequestedServiceName":%{public, location:escape_only}@, "EffectiveServiceName":%{public, location:escape_only}@}
{"msg%{public}.0s":"Requested service not isSupported", "RequestedServiceName":%{public, location:escape_only}@, "EffectiveServiceName":%{public, location:escape_only}@}
{"msg%{public}.0s":"Trying to start an unavailable service", "RequestedServiceName":%{public, location:escape_only}@, "UnavailableServices":%{public, location:escape_only}@}
{"msg%{public}.0s":"Reusing replacement service under new name", "RequestedServiceName":%{public, location:escape_only}@, "EffectiveServiceName":%{public, location:escape_only}@, "ReusedFromServiceName":%{public, location:escape_only}@}
CL: #Manufacturing service
{"msg%{public}.0s":"#Manufacturing service", "event":%{public, location:escape_only}s, "RequestedServiceName":%{public, location:escape_only}@, "EffectiveServiceName":%{public, location:escape_only}@}
{"msg%{public}.0s":"Failed to alloc and init key class for service", "RequestedServiceName":%{public, location:escape_only}@, "EffectiveServiceName":%{public, location:escape_only}@}
{"msg%{public}.0s":"#Manufacturing service complete", "EffectiveServiceName":%{public, location:escape_only}@}
{"msg%{public}.0s":"#Warning Service retired redundantly or without ever having been started", "RequestedServiceName":%{public, location:escape_only}@}
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
CLSettingsMirror
CLSettingsManagerClientProtocol
CLIntersiloClientProtocol
CLIntersiloProxyDelegateProtocol
NSObject
CLSettingsManagerMockProtocol
CLSettingsManagerProtocol
CLIntersiloServiceProtocol
CLSettingsManagerMock
CLExtensions
CLIntersiloInterfaceSelectorInfo
CLIntersiloInterface
CLSilo
NSCopying
CLSettingsManagerInternal
CLRunLoopTimerScheduler
CLTimerScheduler
CLRunLoopSiloThread
CLRunLoopSilo
CLTimer
DeprecatedWalltimeBasedTimerAPIs
CLIntersiloService
CLIntersiloUniverse
CLIntersiloServiceMockPayload
CLIntersiloServiceMock
CLIntersiloServiceMockProtocol
CLSettingsManager
CLSettingsDictionary
CLDispatchTimerScheduler
CLTimerWeakHolder
CLDispatchSilo
CLTimeCoercibleDispatchSilo
MainSilo
CLIntersiloProxyToRecipient
CLIntersiloProxyToInitiator
CLIntersiloProxy
CLServiceVendorHeartbeatRecord
_Locationd
_CLMainService
_CLUnSupportedService
CLServiceVendor
CLCppContainer
NSSecureCoding
NSCoding
CLCppEncodableDataContainer
init
setValid:
setUniverse:
vendor
proxyForService:
setManager:
silo
registerDelegate:inSilo:
syncgetSettingsAndRegisterForUpdates:
setDictionary:
unregisterForUpdates:
setSettingsChangeHandler:
invalidate
dealloc
manager
syncgetSetValue:forKey:withoutNotifying:
numberWithBool:
setValue:forKey:
numberWithShort:
numberWithInt:
numberWithLong:
numberWithFloat:
numberWithDouble:
isEqual:
class
self
performSelector:
performSelector:withObject:
performSelector:withObject:withObject:
isProxy
isKindOfClass:
isMemberOfClass:
conformsToProtocol:
respondsToSelector:
retain
release
autorelease
retainCount
zone
hash
superclass
description
debugDescription
valid
didUpdateSettings:
initInUniverse:
setBool:forKey:
setShort:forKey:
setInt:forKey:
setLong:forKey:
setFloat:forKey:
setDouble:forKey:
setString:forKey:
setDictionary:forKey:
settingsChangeHandler
universe
_valid
_settingsChangeHandler
_manager
_universe
stringWithUTF8String:
isSupported
getSilo
becameFatallyBlocked:index:
performSyncOnSilo:invoker:
beginService
endService
setDelegateEntityName:
flush
refresh
setSettings:
initWithInboundProtocol:outboundProtocol:
cl_deepMutableCopy
setSettingsDictionary:
settingsDictionary
dictionaryWithDictionary:
updateClientsWithDictionary:
rangeOfString:options:
hasSuffixInsensitive:
numberOfArguments
methodReturnLength
hasPrefix:
getArgumentTypeAtIndex:
_typeString
initWithSelector:andMethodSignature:
typeStr
.cxx_destruct
replyBlockIndex
returnAddressIndex
_replyBlockIndex
_returnAddressIndex
_sel
_sig
signatureWithObjCTypes:
countByEnumeratingWithState:objects:count:
sharedInterface
extendSelectorInfoWithProtocol:bases:
getInfoForSelector:
objectForKeyedSubscript:
inputStreamWithFileAtPath:
open
propertyListWithStream:options:format:error:
close
setObject:forKeyedSubscript:
whitespaceAndNewlineCharacterSet
componentsSeparatedByCharactersInSet:
dictionaryWithObjects:forKeys:count:
stringWithFormat:
setGlobalConfiguration:
globalConfiguration
copyWithZone:
initWithIdentifier:
assertInside
assertOutside
suspend
resume
currentLatchedAbsoluteTimestamp
newTimer
async:
sync:
afterInterval:async:
identifier
_identifier
selector
initWithFormat:
UTF8String
count
objectAtIndexedSubscript:
setClients:
removeObject:
addObject:
clients
_clients
_settingsDictionary
runloop
updateLatchedAbsoluteTimestamp
timer
shouldFire
timerWithTimeInterval:repeats:block:
dateWithTimeIntervalSinceNow:
setFireDate:
addTimer:forMode:
reflectNextFireDelay:fireInterval:
setTimer:
initWithRunLoopSilo:
underlyingTimer
setUnderlyingTimer:
fireBlock
setFireBlock:
setRunloop:
_underlyingTimer
_fireBlock
_runloop
_timer
currentRunLoop
initWithBlock:
start
currentThread
getCFRunLoop
cancel
initWithRunLoop:
initWithCurrentThread
threadId
underlyingRunLoop
underlyingThread
shouldCancelThread
_threadId
_underlyingRunLoop
_underlyingThread
_shouldCancelThread
initWithCurrentRunLoopAndIdentifier:
initInSilo:withScheduler:
performBlock:
performSelector:withObject:afterDelay:
initWithUnderlyingRunLoop:
getTimeCoercibleVariantInstance
_currentLatchedAbsoluteTimestamp
_siloThread
dictionary
updateScheduler
fireInterval
setNextFireDelay:interval:
nextFireDelay
copy
setNextFireDelay:
setFireInterval:
nextFireDelayRaw
handler
setHandler:
_delaySetAtTime
_nextFireDelay
_silo
_scheduler
_handler
_fireInterval
setNextFireTime:interval:
nextFireTime
setNextFireTime:
removeObjectForKey:
removeAllObjects
setByAddingObjectsFromSet:
setWithObject:
dataWithBytes:length:
initForReadingFromData:error:
decodeTopLevelObjectOfClasses:forKey:error:
archivedDataWithRootObject:requiringSecureCoding:error:
bytes
length
initWithObjects:
arrayWithObjects:count:
setSilo:
setVendor:
_vendor
setObject:forKey:
initWithExpectation:inputDictionary:
setOutput:forKey:
setInUse:
expectation
inputDictionary
outputDictionary
inUse
_inUse
_expectation
_inputDictionary
_outputDictionary
setKeyedPayloads:
keyedPayloads
objectForKey:
getPayloadForKey:
setPayload:forKey:
removePayloadForKey:
setPayload:forSelector:
removePayloadForSelector:
syncgetPayloadForSelector:
syncgetPayloadForKey:
getPayloadForSelector:
_keyedPayloads
queue
setUnderlyingQueue:
defaultCenter
addObserverForName:object:queue:usingBlock:
setNotificationObserver:
notificationObserver
removeObserver:
standardUserDefaults
dictionaryRepresentation
_notificationObserver
enumerateKeysAndObjectsUsingBlock:
initWithSilo:vendor:
sharedInstance
newIsolatedUniverseWithOnlySilo:
newSharedVendorUniverseWithSilo:
alloc
initWithDictionary:
settingsWithDictionary:
boolValue
shortValue
intValue
longValue
floatValue
doubleValue
stringValue
hasValueForKey:
dictionaryForKey:defaultValue:
boolForKey:defaultValue:
shortForKey:defaultValue:
intForKey:defaultValue:
longForKey:defaultValue:
floatForKey:defaultValue:
doubleForKey:defaultValue:
stringForKey:defaultValue:
_internal
initWithDispatchSilo:
source
setSource:
_source
initWithTimer:
holderWithTimer:
initWithUnderlyingQueue:
setName:
initMain
_setLatchedAbsoluteTimestamp:
operationQueue
_queue
_operationQueue
array
predicateWithBlock:
filterUsingPredicate:
addObjectsFromArray:
setLatchedAbsoluteTimestamp:
timerHolders
_timerHolders
main
initWithUninitializedPeer:
peer
_peer
initWithDelegateObject:delegateSilo:
initWithDelegateObject:delegateSilo:uninitializedPeer:
initiatorRepresentingClass
recipientRepresentingClass
null
argumentsRetained
getArgument:atIndex:
raise:format:
setTarget:
retainArguments
invoke
setArgument:atIndex:
delegateSilo
delegate
offsiloHandleInvocation:selectorInfo:peer:
invokeWithTarget:
proxyForRecipientObject:inSilo:recipientName:
methodSignatureForSelector:
forwardInvocation:
_delegate
_delegateSilo
initTrackingServiceClass:
svcClass
residentCount
setResidentCount:
synCount
ackCount
_synCount
_ackCount
_residentCount
_svcClass
compare:
sortUsingComparator:
stringByAppendingString:
allKeys
setWithArray:
unionSet:
containsString:
containsObject:
isEqualToString:
getServiceWithName:
initialize
rereadConfiguration:
enableTimeCoercion
isTimeCoercionEnabled
setServiceReplacementMap:missBehavior:
setRecordingTriggerMap:outputPathBase:
retireServiceWithName:
isServiceEnabled:
isServiceRunning:
ensureServiceIsRunning:
proxyForService:forClient:
setCurrentGlobalLatchedAbsoluteTimestamp:
_catalog
_serviceReplacementMap
_unavailableServiceNames
_timeCoercibleSilos
_missBehavior
_currentGlobalLatchedAbsoluteTimestamp
_recordingFromTriggersByTo
_recordingToTriggersByFrom
initWithObject:destructor:
setCppObjectPtr:
setDestructor:
destructor
containerWithObject:destructor:
supportsSecureCoding
encodeWithCoder:
initWithCoder:
cppObjectPtr
_cppObjectPtr
_destructor
initWithObject:cppDataEncoder:destructor:
setEncoder:
setSerialized:
setCompatibilityInfo:
encoder
decodeObjectForKey:
containerWithObject:cppDataEncoder:destructor:
serialized
compatibilityInfo
_serialized
_compatibilityInfo
_encoder
B24@0:8@16
#16@0:8
@16@0:8
@24@0:8:16
@32@0:8:16@24
@40@0:8:16@24@32
B16@0:8
B24@0:8#16
B24@0:8:16
Vv16@0:8
Q16@0:8
^{_NSZone=}16@0:8
B24@0:8@"Protocol"16
@"NSString"16@0:8
v20@0:8B16
v24@0:8@16
v24@0:8@"NSDictionary"16
@24@0:8@16
v16@0:8
v32@0:8@16@24
v28@0:8B16@20
v28@0:8s16@20
v28@0:8i16@20
v32@0:8q16@24
v28@0:8f16@20
v32@0:8d16@24
@?16@0:8
v24@0:8@?16
@"<CLSettingsManagerProtocol>"
@"CLIntersiloUniverse"
v32@0:8@16Q24
v32@0:8@16@?24
v24@0:8r*16
@"CLSilo"16@0:8
v32@0:8@"NSArray"16Q24
v32@0:8@"CLSilo"16@?<v@?>24
v32@0:8@"<CLIntersiloProxyDelegateProtocol>"16@"CLSilo"24
v24@0:8R@16
@24@0:8R@16
@40@0:8@16@24R@32
v24@0:8R@"<CLSettingsManagerClientProtocol>"16
@"NSDictionary"24@0:8R@"<CLSettingsManagerClientProtocol>"16
@"NSDictionary"40@0:8@16@"NSString"24R@"<CLSettingsManagerClientProtocol>"32
:16@0:8
i16@0:8
@"NSMethodSignature"
@24@0:8^{_NSZone=}16
d16@0:8
v32@0:8d16@?24
@"NSString"
@"NSMutableSet"
@"NSMutableDictionary"
v32@0:8d16d24
@"CLTimer"16@0:8
v24@0:8@"CLTimer"16
@"NSTimer"
@"NSRunLoop"
@"CLTimer"
@24@0:8^{__CFRunLoop=}16
^{_opaque_pthread_t=q^{__darwin_pthread_handler_rec}[8176c]}16@0:8
^{_opaque_pthread_t=q^{__darwin_pthread_handler_rec}[8176c]}
@"NSThread"
@"CLRunLoopSiloThread"
@32@0:8@16@24
v24@0:8d16
@"CLSilo"
@"<CLTimerScheduler>"
@"CLServiceVendor"16@0:8
@"CLServiceVendor"
@"XCTestExpectation"
@"NSDictionary"
v32@0:8@16:24
v24@0:8:16
v32@0:8@"CLIntersiloServiceMockPayload"16:24
v32@0:8@"CLIntersiloServiceMockPayload"16@"NSString"24
v24@0:8@"NSString"16
@"CLIntersiloServiceMockPayload"24@0:8:16
@"CLIntersiloServiceMockPayload"24@0:8@"NSString"16
B28@0:8@16B24
s28@0:8@16s24
i28@0:8@16i24
q32@0:8@16q24
f28@0:8@16f24
d32@0:8@16d24
@"NSObject<OS_dispatch_source>"
@"NSObject<OS_dispatch_queue>"
@"NSOperationQueue"
@"NSMutableArray"
@"CLIntersiloProxy"
@40@0:8@16@24@32
B40@0:8@16@24@32
@"<CLIntersiloProxyDelegateProtocol>"
@24@0:8#16
v20@0:8i16
v28@0:8@16i24
@32@0:8^v16@?24
v24@0:8@"NSCoder"16
@24@0:8@"NSCoder"16
r^v16@0:8
v24@0:8r^v16
@40@0:8^v16@?24@?32
@"NSData"
