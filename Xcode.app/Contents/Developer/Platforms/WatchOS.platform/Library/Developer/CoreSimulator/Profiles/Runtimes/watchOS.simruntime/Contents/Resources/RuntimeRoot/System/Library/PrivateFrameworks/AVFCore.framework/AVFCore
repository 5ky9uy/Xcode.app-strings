<<<< AVOutputDeviceGroup (AVOutputContext) >>>> %s: called (self=%p)
-[AVOutputContextLocalOutputDeviceGroupImpl _contextOutputDevicesDidChange:]
<<<< AVOutputDeviceGroup (AVOutputContext) >>>> %s: called (self=%p, outputDevice=%@, options=%@)
-[AVOutputContextLocalOutputDeviceGroupImpl addOutputDevice:withOptions:completionHandler:]
v16@?0@"AVOutputContextDestinationChange"8
-[AVOutputContextLocalOutputDeviceGroupImpl removeOutputDevice:withOptions:completionhandler:]
v16@?0@"NSNotification"8
avplayerlooper_trace
com.apple.avfoundation
<<<< AVPlayerLooper >>>> %s: Create with player %p and item %p
-[AVPlayerLooper initWithPlayer:templateItem:timeRange:]
invalid parameter not satisfying: %s
player != nil
itemToLoop != nil
! CMTIMERANGE_IS_EMPTY(loopRange)
! CMTIMERANGE_IS_INDEFINITE(loopRange)
CMTIME_COMPARE_INLINE(loopRange.start, >=, kCMTimeZero)
<<<< AVPlayerLooper >>>> %s: AVPlayerLooperInternal allocation failed
com.apple.avplayerlooper.ivars
<<<< AVPlayerLooper >>>> %s: ivarAccessQueue allocation failed
<<<< AVPlayerLooper >>>> %s: loopingItemCopies allocation failed
duration
<<<< AVPlayerLooper >>>> %s: Couldn't set up for looping. Change status to Failed
-[AVPlayerLooper initWithPlayer:templateItem:timeRange:]_block_invoke_2
<<<< AVPlayerLooper >>>> %s: Couldn't load asset duration. Change status to Failed
v8@?0
<<<< AVPlayerLooper >>>> %s: Change to Failed status with error %@
-[AVPlayerLooper _changeStatusToFailedWithError:]
error
status
<<<< AVPlayerLooper >>>> %s: Already in Failed state so not updating error
-[AVPlayerLooper _changeStatusToFailedWithError:]_block_invoke
<<<< AVPlayerLooper >>>> %s: Time range duration is %1.3f
-[AVPlayerLooper _calculateNumberOfCopiesNeeded]
<<<< AVPlayerLooper >>>> %s: Loop item duration is %1.3f
<<<< AVPlayerLooper >>>> %s: Using loop duration of %1.3f
<<<< AVPlayerLooper >>>> %s: Looping item duration is 0. Can't loop
<<<< AVPlayerLooper >>>> %s: Loop duration is less than minimum so capped number of copies to %d
<<<< AVPlayerLooper >>>> %s: Need %d copies for looping
<<<< AVPlayerLooper >>>> %s: The minimum number of copies (%d) is sufficient for looping
<<<< AVPlayerLooper >>>> %s: Loop time range starts past item duration
-[AVPlayerLooper _setupLoopingReturningError:]
Loop range must start within [0, item duration]
<<<< AVPlayerLooper >>>> %s: Loop time range end is past item duration
Loop range must be within [0, item duration]
<<<< AVPlayerLooper >>>> %s: Need to create %d item copies
<<<< AVPlayerLooper >>>> %s: Can't loop with 0 item copies
Template AVPlayerItem's duration must not be 0
<<<< AVPlayerLooper >>>> %s: Failed to allocate item copy
loopingPlayerItems
<<<< AVPlayerLooper >>>> %s: Pausing player (current rate: %1.1f) during set up
<<<< AVPlayerLooper >>>> %s: Changing player's action-at-end to Advance
<<<< AVPlayerLooper >>>> %s: In Failed or cancelled state so cannot advance to Ready
-[AVPlayerLooper _setupLoopingReturningError:]_block_invoke_2
currentItem
AVPlayerLooperObservationCurrentItemContext
AVPlayerLooperObservationItemStatusContext
<<<< AVPlayerLooper >>>> %s: Restoring player rate(%1.1f)
<<<< AVPlayerLooper >>>> %s: observeValueForKeyPath:ofObject:change:context: called for %@
-[AVPlayerLooper observeValueForKeyPath:ofObject:change:context:]
<<<< AVPlayerLooper >>>> %s: Looping turned off and not waiting for looping copy to finish so ignoring
loopCount
<<<< AVPlayerLooper >>>> %s: Looping item(%p) failed to become ready so disabling looping
<<<< AVPlayerLooper >>>> %s: Unknown context(%p). Ignoring
<<<< AVPlayerLooper >>>> %s: [%p]Disabling looping since item(%p) failed to play to end with error %@
_avplLoopingItemFailedToPlayToEndTimeNotificationHandler
trackOutput != nil
[[trackOutput mediaType] isEqualToString:AVMediaTypeMetadata]
Cannot initialize an instance of %@ with a track output which was used to initialize another instance of %@
Cannot initialize an instance of %@ with a track output which has already progressed beyond AVAssetReaderStatusUnknown
cannot call method until the track output is attached to an asset reader and -startReading has been called on that asset reader
AVOutputDeviceDiscoverySessionAvailableOutputDevicesDidChangeNotification
AVOutputDeviceDiscoverySessionAvailableOutputDeviceGroupsDidChangeNotification
outputdevicediscoverysession_trace
<<<< AVOutputDeviceDiscoverySession >>>> %s: called (self=%p, impl=%@)
-[AVOutputDeviceDiscoverySession initWithOutputDeviceDiscoverySessionImpl:]
com.apple.avfoundation.avodds.ivars
<<<< AVOutputDeviceDiscoverySession >>>> %s: *** nil impl! ***
-[AVOutputDeviceDiscoverySession impl]
<<<< AVOutputDeviceDiscoverySession >>>> %s: called (targetAudioSession=%@)
-[AVOutputDeviceDiscoverySession setTargetAudioSession:]
<<<< AVOutputDeviceDiscoverySession >>>> %s: called (discoveryMode=%d)
-[AVOutputDeviceDiscoverySession setDiscoveryMode:]
q24@?0@8@16
<<<< AVOutputDeviceDiscoverySession >>>> %s: Available output devices: %@
-[AVOutputDeviceDiscoverySession availableOutputDevices]
<<<< AVOutputDeviceDiscoverySession >>>> %s: Returning %@
-[AVOutputDeviceDiscoverySession devicePresenceDetected]
<<<< AVOutputDeviceDiscoverySession >>>> %s: Posting %@
-[AVOutputDeviceDiscoverySession outputDeviceDiscoverySessionImplDidChangeAvailableOutputDevices:]
-[AVOutputDeviceDiscoverySession outputDeviceDiscoverySessionImplDidChangeAvailableOutputDeviceGroups:]
<<<< AVOutputDeviceDiscoverySession >>>> %s: recentlyUsedDevices = %@
-[AVOutputDeviceDiscoverySessionAvailableOutputDevices recentlyUsedDevices]
<<<< AVOutputDeviceDiscoverySession >>>> %s: otherDevices = %@
-[AVOutputDeviceDiscoverySessionAvailableOutputDevices otherDevices]
<<<< AVOutputDevice (APSyncController) >>>> %s: Registering local device listeners.
+[AVAPSyncControllerOutputDeviceImpl registerLocalDeviceDidChangeListener:]
<<<< AVOutputDevice (APSyncController) >>>> %s: Failed to copy SyncController with error: %d
<<<< AVOutputDevice (APSyncController) >>>> %s: called (self=%p, syncController=%p, backupImpl=%@)
-[AVAPSyncControllerOutputDeviceImpl initWithSyncController:secondaryImpl:]
<<<< AVOutputDevice (APSyncController) >>>> %s: called (self=%p)
-[AVAPSyncControllerOutputDeviceImpl dealloc]
<<<< AVOutputDevice (APSyncController) >>>> %s: Device description for device with ID %@, type %@ and name %@ not constructed.
-[AVAPSyncControllerOutputDeviceImpl clusteredDeviceDescriptions]
<<<< AVOutputDevice (APSyncController) >>>> %s: called (self=%p, ID=%@, endpointID=%@)
-[AVAPSyncControllerOutputDeviceImpl _volumeDidChangeForEndpointWithID:]
-[AVAPSyncControllerOutputDeviceImpl _volumeControlSupportedDidChangeForEndpointWithID:]
-[AVAPSyncControllerOutputDeviceImpl _volumeControlTypeDidChangeForEndpointWithID:]
-[AVAPSyncControllerOutputDeviceImpl _proposedGroupIDDidChangeForEndpointWithID:]
<<<< AVOutputDevice (APSyncController) >>>> %s: called (inLocalSpeakerUUID = %@, inError = %d)
AVAPSyncControllerOutputDeviceImplGetLocalDeviceCompletion
<<<< AVOutputDevice (APSyncController) >>>> %s: called (endpointID=%{private}@)
AVAPSyncControllerOutputDeviceImplVolumeDidChange
AVAPSyncControllerOutputDeviceImplVolumeControlSupportedDidChange
AVAPSyncControllerOutputDeviceImplVolumeControlTypeDidChange
AVAPSyncControllerOutputDeviceImplProposedGroupIDDidChange
<<<< AVOutputDevice (APSyncController) >>>> %s: called
AVAPSyncControllerOutputDeviceImplLocalDeviceDidChange
AVPlayerLayerVisibilityDidChangeNotification
AVPlayerLayerIsPartOfForegroundSceneDidChangeNotification
UISceneDidEnterBackgroundNotification
UISceneWillEnterForegroundNotification
avplayerlayer_trace
AVPlayerLayerQueue
com.apple.avfoundation.playerlayer.configuration
AVPlayerLayer <%p>
AVPlayerLayer <%p> (videoLayer)
AVPlayerLayer <%p> (closedCaptionLayer)
FigSubtitleCALayer
<<<< AVPlayerLayer >>>> %s: <%p> Hiding video layer since the presentation size is 0x0
-[AVPlayerLayer init]
contentsAreFlipped
AVPlayerLayerContentsAreFlippedObservationContext
UIWindow
<AVPlayerLayer %p%@>
, player %p
<<<< AVPlayerLayer >>>> %s: called (self=%p)
-[AVPlayerLayer layoutSublayers]
<<<< AVPlayerLayer >>>> %s:  <%p> Hiding video layer since the presentation size for player %p is 0x0
<<<< AVPlayerLayer >>>> %s: %@ frame is { %f, %f }
<<<< AVPlayerLayer >>>> %s: <%p> Unhiding video layer since the presentation size for player %p is { %f, %f }
<<<< AVPlayerLayer >>>> %s: <%p> Setting closed caption layer bounds to %@
<<<< AVPlayerLayer >>>> %s: <%p> Using box filter downscale
<<<< AVPlayerLayer >>>> %s: Called (self=%p, bounds=%@)
-[AVPlayerLayer setBounds:]
@16@?0@8
bounds.size
bounds
position
sublayerTransform.scale.x
sublayerTransform.scale.y
%@_x
%@_y
sublayerTransform
AVPlayerLayer_MaskLayer_Bounds_%@
AVPlayerLayer_MaskLayer_Position_%@
AVPlayerLayer_ClosedCaptionLayer_Position_%@
AVPlayerLayer_ClosedCaptionLayer_SublayerTransform_%@
AVPlayerLayer_VideoLayer_Position_%@
AVPlayerLayer_VideoLayer_SublayerTransform_%@
v16@?0@"CAPropertyAnimation"8
AVPlayerLayer_VideoLayer_SublayerTransform_%@_x
AVPlayerLayer_VideoLayer_SublayerTransform_%@_y
AVPlayerLayer_ClosedCaptionLayer_SublayerTransform_%@_x
AVPlayerLayer_ClosedCaptionLayer_SublayerTransform_%@_y
<<<< AVPlayerLayer >>>> %s: Display Size is %f x %f scale is %f
-[AVPlayerLayer _displaySize]
<<<< AVPlayerLayer >>>> %s: %p notifying player %p about new display size %@
-[AVPlayerLayer _notifyPlayerOfDisplaySize]
playerCurrentItemPresentationSize
player
cachedPresentationSizeOfCurrentItem
<<<< AVPlayerLayer >>>> %s: Called (self=%p)
-[AVPlayerLayer _applyCurrentItemPresentationSizeChangeAndForceUpdate:]
<<<< AVPlayerLayer >>>> %s: <%p> size needs update from { %f, %f } to { %f, %f } (force=%s)
-[AVPlayerLayer _applyCurrentItemPresentationSizeChangeAndForceUpdate:]_block_invoke
<<<< AVPlayerLayer >>>> %s: <%p> size needs no update using cached value { %f, %f }
<<<< AVPlayerLayer >>>> %s: %@ commence player <%p> observation
-[AVPlayerLayer _startObservingPlayer:]
@"AVPropertyValuePublisher"16@?0@"AVPlayerItem"8
v16@?0@"NSValue"8
v16@?0@"AVPlayerItem"8
v16@?0@"NSNumber"8
<<<< AVPlayerLayer >>>> %s: %@ resign player <%p> observation over currentItem.presentationSize
-[AVPlayerLayer _stopObservingPlayer:]
<<<< AVPlayerLayer >>>> %s: <%p> Did cancel all observation of old player
<<<< AVPlayerLayer >>>> %s: called (keyPath=%@, object=%@, change=%@, context=%p
-[AVPlayerLayer observeValueForKeyPath:ofObject:change:context:]
<<<< AVPlayerLayer >>>> %s: %@ AVPlayerLayer's net flip status does not match CoreAnimation default; adding a flip at videoLayer
<<<< AVPlayerLayer >>>> %s: %@ AVPlayerLayer's net flip status does match CoreAnimation default
<<<< AVPlayerLayer >>>> %s: <%p> Not applying new value of AVPlayer.currentItem.nonForcedSubtitleDisplayEnabled for player %p not currently being observed (expected %p)
-[AVPlayerLayer _handleNonForcedSubtitleDisplayDidChange:player:]_block_invoke
<<<< AVPlayerLayer >>>> %s: <%p> Not applying new value of AVPlayer.isDisplayingClosedCaptions for player %p not currently being observed (expected %p)
-[AVPlayerLayer _handleIsDisplayingClosedCaptionsDidChange:player:]_block_invoke
<<<< AVPlayerLayer >>>> %s: <%p> %@ closed caption layer
-[AVPlayerLayer _handleIsDisplayingClosedCaptionsDidChange:player:]_block_invoke_2
Showing
Hiding
AVPlayerLayerPlayerDidChangeNotification
<<<< AVPlayerLayer >>>> %s: %@ setting player to <%p> forPIP:%d
-[AVPlayerLayer _setPlayer:forPIP:]
<<<< AVPlayerLayer >>>> %s: Setting readyForDisplay to NO due to detaching from player %@ (self=%p)
readyForDisplay
<<<< AVPlayerLayer >>>> %s: sync to player (self=%p, player=%p)
-[AVPlayerLayer _setPlayer:forPIP:]_block_invoke
<<<< AVPlayerLayer >>>> %s: %@ setting self on player <%p>
<<<< AVPlayerLayer >>>> %s: <%p> called
-[AVPlayerLayer layerDidBecomeVisible:]
<<<< AVPlayerLayer >>>> %s: %@ visibility became YES
<<<< AVPlayerLayer >>>> %s: %@ visibility became NO
<<<< AVPlayerLayer >>>> %s: <%p> finished
<<<< AVPlayerLayer >>>> %s: called (self=%p, item=%p, readyForDisplay=%d)
-[AVPlayerLayer _updateReadyForDisplayForPlayerCurrentItem]_block_invoke
<<<< AVPlayerLayer >>>> %s: requesting the pixelBufferAttributes property on a presentation layer is invalid
-[AVPlayerLayer pixelBufferAttributes]
<<<< AVPlayerLayer >>>> %s: creating interstitialLayer %p for primary playerLayer %p
-[AVPlayerLayer _interstitialLayer]
videoRect
<<<< AVPlayerLayer >>>> %s: Setting interstitialLayer %p visibility to %d and primary (mask) layer %p visibility to %d
-[AVPlayerLayer _setShowInterstitialInstead:]_block_invoke
<<<< AVPlayerLayer >>>> %s: scalingFactor(%d) is not between 2 and 8
-[AVPlayerLayer setLanczosFilterDownscaleFactor:]
videoGravity
<<<< AVPlayerLayer >>>> %s: setting forScrubbingOnly = %d
-[AVPlayerLayer setForScrubbingOnly:]
<<<< AVPlayerLayer >>>> %s: Window scene containing layer <%p> did enter background
-[AVPlayerLayer _windowSceneDidEnterBackground:]
<<<< AVPlayerLayer >>>> %s: Window scene containing layer <%p> will enter foreground
-[AVPlayerLayer _windowSceneWillEnterForeground:]
<<<< AVPlayerLayer >>>> %s: <%p> layer active state changed to %d
-[AVPlayerLayer _setIsPartOfForegroundScene:]_block_invoke
{?=qiIq}
CMTime: %@
[coder allowsKeyedCoding]
CMTime
{?={?=qiIq}{?=qiIq}}
CMTimeRange: %@
CMTimeRange
{?={?={?=qiIq}{?=qiIq}}{?={?=qiIq}{?=qiIq}}}
CMTimeMapping: {%@, %@}
CMTimeMapping
avtimebaseobserver_trace
timebase
A time observer token object was released without first being removed from the object it was created from using -removeTimeObserver:
<<<< AVTimebaseObserver >>>> %s: engage timebase <%p> notifications for <%p>
-[AVTimebaseObserver _finishInitializationWithTimerEventHandler:]
((Boolean)(((interval).flags & (kCMTimeFlags_Valid | kCMTimeFlags_ImpliedValueFlagsMask)) == kCMTimeFlags_Valid))
((Boolean)(CMTimeCompare(interval, kCMTimeZero) > 0))
block != ((void *)0)
<<<< AVTimebaseObserver >>>> %s: firing at time == %@
-[AVPeriodicTimebaseObserver _fireBlockForTime:]
<<<< AVTimebaseObserver >>>> %s: timebase rate change from [%f] to [%f]
-[AVPeriodicTimebaseObserver _effectiveRateChanged]
<<<< AVTimebaseObserver >>>> %s: Playback stopped. Observe immediate.
<<<< AVTimebaseObserver >>>> %s: Playback resumed. Observe immediate.
<<<< AVTimebaseObserver >>>> %s: rescheduling after non-periodic firing near time == %@
-[AVPeriodicTimebaseObserver _resetNextFireTime]
<<<< AVTimebaseObserver >>>> %s: rescheduling after periodic firing at time == %@
<<<< AVTimebaseObserver >>>> %s: scheduling for == %@
<<<< AVTimebaseObserver >>>> %s: Periodic Observer <%p>: Detected stop time jump to the last time where rate fell to zero and have winnowed this event
-[AVPeriodicTimebaseObserver _handleTimeDiscontinuity]
<<<< AVTimebaseObserver >>>> %s: Periodic Observer <%p> Jumped to time [%f]
[times count] > 0
-[AVOccasionalTimebaseObserver _effectiveRateChanged]
<<<< AVTimebaseObserver >>>> %s: Playback direction did change. Resetting timer
B32@?0@8Q16^B24
<<<< AVTimebaseObserver >>>> %s: Occasional timebase observer <%p> with source <%p> at current time [%f] nextfire [%f]
-[AVOccasionalTimebaseObserver _resetNextFireTime]
block
<<<< AVTimebaseObserver >>>> %s: Absolute timebase observer <%p> with source <%p> at current time [%f] nextfire [%f]
-[AVOnceTimebaseObserver _resetNextFireTime]_block_invoke
<<<< AVTimebaseObserver >>>> %s: Timebase returned time(%@), clamped from time(%@)
AVTimebaseObserver_figTimebaseGetTime
<<<< AVTimebaseObserver >>>> %s: Timebase returned time(%@)
<<<< AVTimebaseObserver >>>> %s: Timebase returned non-numeric time (%lld/%d/%#x/%lld)) so setting to kCMTimeZero
<<<< AVTimebaseObserver >>>> %s: Timebase returned time with non-zero epoch(%lld) so setting to kCMTimeZero
avplayeritemmetadatacollector_trace
com.apple.avplayeritemmetadatacollector.ivars
newDelegateQueue == NULL
newDelegateQueue != NULL
playerItem != nil
v16@?0@8
obtainCoordinator != nil
com.apple.avplayeriteminterstitialeventcollector.ivars
comn
title
creator
subject
description
publisher
contributor
creationDate
lastModifiedDate
type
format
identifier
source
language
relation
location
copyrights
albumName
author
artist
artwork
make
model
software
accessibilityDescription
com.apple.quicktime.udta
udta
@alb
@arg
@ART
@aut
@chp
@cmt
@com
@cpy
@day
@des
@dir
@dis
@enc
@nam
@gen
@hst
@inf
@key
@mak
@mod
@ope
@fmt
@src
@prf
@prd
@pub
@PRD
@swr
@req
@trk
@wrn
@wrt
@url
@xyz
tnam
@phg
name
tagc
@ade
org.mp4ra
uiso
cprt
date
ades
auth
perf
gnre
yrrc
loci
titl
dscp
coll
urat
thmb
albm
kywd
clsf
rtng
com.apple.quicktime.mdta
mdta
com.apple.quicktime.author
com.apple.quicktime.comment
com.apple.quicktime.copyright
com.apple.quicktime.creationdate
com.apple.quicktime.director
com.apple.quicktime.displayname
com.apple.quicktime.information
com.apple.quicktime.keywords
com.apple.quicktime.producer
com.apple.quicktime.publisher
com.apple.quicktime.album
com.apple.quicktime.artist
com.apple.quicktime.artwork
com.apple.quicktime.description
com.apple.quicktime.software
com.apple.quicktime.year
com.apple.quicktime.genre
info.ixml.xml
com.apple.quicktime.location.ISO6709
com.apple.quicktime.make
com.apple.quicktime.model
com.apple.quicktime.arranger
com.apple.quicktime.encodedby
com.apple.quicktime.originalartist
com.apple.quicktime.performer
com.apple.quicktime.composer
com.apple.quicktime.credits
com.apple.quicktime.phonogramrights
com.apple.quicktime.camera.identifier
com.apple.quicktime.camera.framereadouttimeinmicroseconds
com.apple.quicktime.live-photo.video-stabilization-crop-percentage-numerator
com.apple.quicktime.live-photo.video-stabilization-crop-percentage-denominator
com.apple.quicktime.live-photo.vitality-disabled
com.apple.quicktime.is-montage
com.apple.quicktime.title
com.apple.quicktime.collection.user
com.apple.quicktime.rating.user
com.apple.quicktime.location.name
com.apple.quicktime.location.body
com.apple.quicktime.location.note
com.apple.quicktime.location.role
com.apple.quicktime.location.date
com.apple.quicktime.direction.facing
com.apple.quicktime.direction.motion
com.apple.quicktime.content.identifier
com.apple.quicktime.spatial-overcapture.group-identifier
com.apple.quicktime.contains-spatial-overcapture
com.apple.quicktime.accessibility.description
com.apple.itunes
itsk
itlk
covr
@st3
@too
aART
akID
apID
atID
cnID
cpil
disk
geID
grup
plID
tmpo
trkn
@ard
@lyr
@cak
@con
@equ
@lnt
@sne
@sol
@thx
@xpd
org.id3
AENC
APIC
ASPI
COMM
COMR
ENCR
EQUA
EQU2
ETCO
GEOB
GRID
IPLS
LINK
MCDI
MLLT
OWNE
PRIV
PCNT
POPM
POSS
RBUF
RVAD
RVA2
RVRB
SEEK
SIGN
SYLT
SYTC
TALB
TBPM
TCOM
TCON
TCOP
TDAT
TDEN
TDLY
TDOR
TDRC
TDRL
TDTG
TENC
TEXT
TFLT
TIME
TIPL
TIT1
TIT2
TIT3
TKEY
TLAN
TLEN
TMCL
TMED
TMOO
TOAL
TOFN
TOLY
TOPE
TORY
TOWN
TPE1
TPE2
TPE3
TPE4
TPOS
TPRO
TPUB
TRCK
TRDA
TRSN
TRSO
TSIZ
TSOA
TSOP
TSOT
TSRC
TSSE
TSST
TYER
TXXX
UFID
USER
USLT
WCOM
WCOP
WOAF
WOAR
WOAS
WORS
WPAY
WPUB
WXXX
StreamTitle
StreamUrl
com.apple.quicktime.HLS
lsdr
m3u8
NAME
caaf
public.unknown
HREF
dataType
dataTypeNamespace
pictureType
baseURL
info
CurrentEventDidChangeNotification
EventsDidChangeNotification
AVPlayerWaitingDuringInterstitialEventReason
CMTIME_IS_NUMERIC(time)
date != nil
date != nil || CMTIME_IS_NUMERIC(time)
<%@: %p, primaryItem = %p, ctx = %p, templateItems = %p>
Cannot create an InterstitialEventMonitor for an interstitial player.
Could not obtain the interstitial player.
Use %@ instead.
com.apple.avplayerinterstitialeventcontroller
/Library/Caches/com.apple.xbs/Sources/AVFoundation_AVFCore_Sim/AVFoundation-2036.2.2/Fig/AVPlayerInterstitialEventController.m %s:  Unrecognized notification: %@
avplayerinterstitialeventmonitor_fpNotificationCallback
<<<< AVSampleBufferVideoOutput >>>> %s: FigVisualContextCreate failed: %d
-[AVSampleBufferVideoOutput setUpWithOutputSettings:outputSettingsArePixelBufferAttributes:withExceptionReason:]
<<<< AVSampleBufferVideoOutput >>>> %s: FigVisualContextSetImageAvailableImmediateCallback failed: %d
com.apple.avfoundation.avsamplebuffervideooutput
avsamplebuffervideooutput_trace
delegateQueue == NULL
delegateQueue != NULL
<<<< AVSampleBufferVideoOutput >>>> %s: Unable to copy next image from visual context. Bailing.
-[AVSampleBufferVideoOutput _copyPixelBufferForItemTimeWithOptions:itemTimeForDisplay:options:]
<<<< AVSampleBufferVideoOutput >>>> %s: FigVisualContextCopyImageForTime did not provide a imageOriginalTimeOut value. Bailing.
<<<< AVSampleBufferVideoOutput >>>> %s: copyPixelBufferForSourceTime requestTime %1.3f pb %p time %1.3f
-[AVSampleBufferVideoOutput copyLastPixelBuffer:]
<<<< AVSampleBufferVideoOutput >>>> %s: FigVideoQueueSetProperty for kFigVideoQueueProperty_VisualContextArray failed: %d
-[AVSampleBufferVideoOutput _configureWithVideoQueue:]
<<<< AVSampleBufferVideoOutput >>>> %s: FigVideoQueueSetProperty for kFigVideoQueueProperty_VisualContextArrayOptions failed: %d
<<<< AVSampleBufferVideoOutput >>>> %s: Dispatching -outputSequenceWasFlushed:
-[AVSampleBufferVideoOutput _dispatchOutputSequenceWasFlushed]
<<<< AVSampleBufferVideoOutput >>>> %s: Sending -outputSequenceWasFlushed: to delegate
-[AVSampleBufferVideoOutput _dispatchOutputSequenceWasFlushed]_block_invoke
important
default
avassetstoragemanager_trace
storageManagementPolicy != nil
downloadStorageURL != nil
bundleIdentifier != nil
Not a fileURL %@
No file at %@
<<<< AVAssetDownloadStorageManager >>>> %s: Set storageManagementPolicy %@ for asset at URL %@
-[AVAssetDownloadStorageManager setStorageManagementPolicy:forURL:]
<<<< AVAssetDownloadStorageManager >>>> %s: StorageManagementPolicy for asset at URL %@ is  %@ 
-[AVAssetDownloadStorageManager storageManagementPolicyForURL:]
<%@: %p, ExpirationDate: %@ Priority: %@>
ExpirationDate
Priority
AVOutputDeviceGroupAddOutputDeviceOptionAuthorizationToken
AVOutputDeviceGroupAddOutputDeviceOptionCancelIfAuthRequiredKey
AVOutputDeviceGroupAddOutputDeviceOptionInitiator
AVOutputDeviceGroupRemoveOutputDeviceOptionInitiator
AVOutputDeviceGroupRemoveOutputDeviceOptionContinuePlayingAfterLastDeviceRemoved
AVOutputDeviceGroupVolumeDidChangeNotification
AVOutputDeviceGroupVolumeControlTypeDidChangeNotification
AVOutputDeviceGroupOutputDevicesDidChangeNotification
AVOutputDeviceGroupMembershipChangeInitiator
AVOutputDeviceGroupMembershipChangeResultCancellationReasonAuthorizationSkipped
outputdevicegroup_trace
<<<< AVOutputDeviceGroup >>>> %s: called (self=%p, impl=%@)
-[AVOutputDeviceGroup initWithOutputDeviceGroupImpl:]
<%@: %p>
<<<< AVOutputDeviceGroup >>>> %s: outputDevices = %@
-[AVOutputDeviceGroup outputDevices]
<<<< AVOutputDeviceGroup >>>> %s: Posting %{public}@ with initiator %{public}@
-[AVOutputDeviceGroup outputDeviceGroupImpl:didChangeOutputDevicesWithInitiator:]
<<<< AVOutputDeviceGroup >>>> %s: called (device=%{private}@ authToken? %d cancelIfAuthRequired=%{public}@, initiator=%{public}@)
-[AVOutputDeviceGroup addOutputDevice:withOptions:completionHandler:]
<<<< AVOutputDeviceGroup >>>> %s: Result: %{public}@
-[AVOutputDeviceGroup addOutputDevice:withOptions:completionHandler:]_block_invoke
v16@?0@"AVOutputDeviceGroupMembershipChangeResult"8
<<<< AVOutputDeviceGroup >>>> %s: called (device=%{private}@, initiator=%{public}@
-[AVOutputDeviceGroup removeOutputDevice:withOptions:completionHandler:]
-[AVOutputDeviceGroup removeOutputDevice:withOptions:completionHandler:]_block_invoke
<<<< AVOutputDeviceGroup >>>> %s: Posting %{public}@
-[AVOutputDeviceGroup outputDeviceGroupImplDidChangeVolume:]
-[AVOutputDeviceGroup outputDeviceGroupImplDidChangeVolumeControlType:]
MIMEtype
languageCode
<<<< AVMetadataItem >>>> %s: Value %p does not conform to NSObject and/or NSCopying
-[AVMetadataItem(AVMetadataItem_Local) _valueFromCFType:]
<<<< AVMetadataItem >>>> %s: Value %@ for kFigMetadataItemProperty_Keyspace must be an instance of NSString
-[AVMetadataItem(AVMetadataItem_Local) _extractPropertiesFromDictionary:]
<<<< AVMetadataItem >>>> %s: Value %@ for kFigMetadataItemProperty_Key must conform to NSObject and NSCopying
<<<< AVMetadataItem >>>> %s: Value %@ for kFigMetadataItemProperty_Locale must be an instance of NSLocale
<<<< AVMetadataItem >>>> %s: Value %@ for kFigMetadataItemProperty_ExtendedLanguageTag must be an instance of NSString
<<<< AVMetadataItem >>>> %s: Value %@ for kFigMetadataItemProperty_LanguageCode must be an instance of NSString or of NSNumber
<<<< AVMetadataItem >>>> %s: Value %@ for kFigMetadataItemProperty_Value must be CMBoxedMetadata or conform to NSObject and NSCopying
<<<< AVMetadataItem >>>> %s: Value %@ for kFigMetadataItemProperty_DataTypeNamespace must be an instance of NSString
<<<< AVMetadataItem >>>> %s: Value %@ for kFigMetadataItemProperty_ConformingDataTypes must be an instance of NSArray
<<<< AVMetadataItem >>>> %s: Value %@ for kFigMetadataItemProperty_DataLength must be an instance of NSNumber
<<<< AVMetadataItem >>>> %s: Identifier value %@ must be an instance of NSString
<<<< AVMetadataItem >>>> %s: Value %@ for kFigMetadataItemProperty_Timestamp must be an instance of CFDictionary
<<<< AVMetadataItem >>>> %s: Value %@ for kFigMetadataItemProperty_Duration must be an instance of CFDictionary
<<<< AVMetadataItem >>>> %s: Value %@ for kFigMetadataItemProperty_Date must be an instance of NSDate
<<<< AVMetadataItem >>>> %s: Value %@ for kFigMetadataItemProperty_DiscoveryTimestamp must be an instance of NSDate
avmetadataitem_trace
<<<< AVMetadataItem >>>> %s: *** Could not canonicalize language: %@. ***
+[AVMetadataItem metadataItemsFromArray:filteredAndSortedAccordingToPreferredLanguages:]
v24@?0Q8^B16
v16@?0@"AVMetadataItemValueRequest"8
 length=%lu
<%@: %p, identifier=%@, keySpace=%@, key class = %@, key=%@, commonKey=%@, extendedLanguageTag=%@, dataType=%@, time=%@, duration=%@, startDate=%@, extras=%@, value class=%@, value%@>
Metadata item %p has no data type
Metadata item %p has no identifier.  If the item was given a key and key space, use +[%@ %@] to check whether an identifier can be made from that key and key space
+[NSJSONSerialization isValidJSONObject:] returned NO for the AVMetadataItem's value
Bad identifier. Identifier should be of the form "<keySpace>/<key>". Try using +%@ to generate an identifier from key and keySpace.
keySpace
com.apple.avfoundation.avmetadataitem
<<<< AVMetadataItem >>>> %s: <%p> initiating asynchronous loading of lazily-loaded metadata value
-[AVLazyValueLoadingMetadataItem loadValuesAsynchronouslyForKeys:completionHandler:]_block_invoke_2
<<<< AVMetadataItem >>>> %s: <%p> completed asynchronous loading of lazily-loaded metadata value
-[AVLazyValueLoadingMetadataItem loadValuesAsynchronouslyForKeys:completionHandler:]_block_invoke_3
value
com.apple.avfoundation.avchaptermetadataitem
<%@: %p, chapterType=%@, locale identifier=%@, value=%@, time=%@, duration=%@, extras=%@>
extraAttributes
<<<< AVMetadataItem >>>> %s: keyspace not found %@
+[AVMetadataItemFilterForSharing addIdentifier:toWhitelistDictionary:]
<<<< AVMetadataItem >>>> %s: key not found %@
com.apple.iTunes.iTunSMPB
com.apple.iTunes.iTunNORM
ludt
AVMetadataMakeMetadataObjectFromBoxedMetadata
/System/Library/PrivateFrameworks/AVFCapture.framework/AVFCapture
%s signalled err=%d (%s) (%s) at %s:%d
kFigMetadataReaderError_AllocationFailed
Failed to allocate buffer for FigBoxedMetadata -> CFData conversion
AVMetadataItemMakeDataFromBoxedMetadata
/Library/Caches/com.apple.xbs/Sources/AVFoundation_AVFCore_Sim/AVFoundation-2036.2.2/Fig/AVMetadataItem.m
AVMetadataMakeDependentSpecificationsForValue
AVMetadataObjectCreateBoxedMetadataFromObjectAndFormatDescription
Value
http
https
v32@?0@"NSData"8@"NSURLResponse"16@"NSError"24
moop
mpvr
AVURLAssetPreferPreciseDurationAndTimingKey
AVURLAssetReferenceRestrictionsKey
AVURLAssetTypeKey
AVURLAssetClientBundleIdentifierKey
AVURLAssetClientAuditTokenKey
AVURLAssetParentNetworkActivityKey
AVURLAssetAlternativeConfigurationOptionsKey
ServiceIdentifier
HierarchyToken
MediaIdentifier
ContentProvider
iTunesServiceMonitoringKey
ServiceInformationKey
AVURLAssetInspectorLoaderKey
AVURLAssetProtectedContentSupportStorageURLKey
AVURLAssetCacheKey
AVURLAssetShouldMatchDataInCacheByURLPathComponentOnlyKey
AVURLAssetShouldMatchDataInCacheByURLWithoutQueryComponentKey
AVURLAssetOutOfBandMIMETypeKey
AVURLAssetAllowableTypeCategoriesKey
AVAssetRequiresInProcessOperationKey
AVURLAssetHTTPHeaderFieldsKey
AVURLAssetHTTPCookiesKey
AVURLAssetAllowsCellularAccessKey
AVURLAssetAllowsExpensiveNetworkAccessKey
AVURLAssetAllowsConstrainedNetworkAccessKey
AVURLAssetURLRequestAttributionKey
AVURLAssetByteRangeInFileKey
AVURLAssetClientURLLoadingRepresentsAccurateNetworkStatistics
AVURLAssetVideoNotEligibleForAppRecordingKey
AVURLAssetRequiresCustomURLLoadingKey
AVURLAssetUseClientURLLoadingExclusively
AVURLAssetCacheUseNonPurgeableMemoryKey
AVURLAssetCacheNonPurgeableMemoryLimitKey
AVURLAssetUsesNoPersistentCacheKey
AVURLAssetPreloadDurationWhenNextItemKey
AVURLAssetDownloadDestinationURLKey
AVURLAssetDownloadIsLowPriorityKey
AVURLAssetPurchaseBundleKey
AVURLAssetAirPlayAuthorizationInfoKey
AVURLAssetMaxSizeAllowedForCellularAccessKey
AVURLAssetNetworkProbeRequestDisabledKey
AVURLAssetReadAheadOnByteStreamCreationEnabledKey
AVURLAssetRemoteCustomURLHandlerContextKey
AVURLAssetSSLPropertiesKey
AVURLAssetNetworkLatencyMitigationKeyPodcastsOnly
AVURLAssetDownloadCompleteSuccessNotification
AVURLAssetDownloadCompleteFailedNotification
AVURLAssetDownloadCompleteNotificationErrorKey
AVURLAssetDownloadTokenKey
AVURLAssetBoundNetworkInterfaceName
AVURLAssetUseAppleWirelessDirectLinkKey
AVURLAssetInheritURIQueryComponentFromReferencingURIKey
AVURLAssetAllowedHTTPProtocolTypesKey
AVURLAssetApplicationTransportSecurityKey
AVURLAssetOptimizeAccessForLinearMoviePlaybackKey
AVURLAssetiTunesStoreContentInfoKey
AVURLAssetiTunesStoreContentIDKey
AVURLAssetiTunesStoreContentTypeKey
AVURLAssetiTunesStoreContentUserAgentKey
AVURLAssetiTunesStoreContentDownloadParametersKey
AVURLAssetiTunesStoreContentDSIDKey
AVURLAssetiTunesStoreContentPurchasedMediaKindKey
AVURLAssetiTunesStoreContentRentalIDKey
AVURLAssetiTunesStoreContentAlternateContentInfoKey
AVURLAssetiTunesStoreContentAlternateContentInfoAssetURLStringKey
AVURLAssetiTunesStoreContentHLSAssetURLStringKey
AVAssetPreferPreciseDurationAndTimingKey
AVAssetReferenceRestrictionsKey
AVAssetMediaServicesWereResetNotification
AVAssetMediaServicesWereResetErrorKey
AVAssetPrepareForIncrementalFragmentsKey
chap
tmcd
ssrc
fall
sbtl
forc
cdsc
folw
AVURLAssetOutOfBandAlternateTracksKey
MediaSelectionOptionsName
MediaSelectionOptionsExtendedLanguageTag
MediaSelectionOptionsIsDefault
MediaSelectionOptionsTaggedMediaCharacteristics
MediaSelectionOptionsClientIdentifier
MediaSelectionOptionsURL
AVMetadataFormatTypedID3Metadata
AVAssetDurationDidChangeNotification
AVAssetChapterMetadataGroupsDidChangeNotification
AVAssetMediaSelectionGroupsDidChangeNotification
AVURLAssetEnableQUICKey
AVURLAssetForceQUICKey
AVURLAssetWhitelistQUICKey
AVURLAssetPreferLargeResourceRequests
AVURLAssetLoggingIdentifier
AVURLAssetUnitTestOptions
contentType != nil
[data length] > 0
avasset_trace
streaming
tracks
naturalSize
availableMediaCharacteristicsWithMediaSelectionOptions
v16@?0@"NSError"8
<<<< AVAsset >>>> %s: <%p> called for property list %@, mediaSelectionOptionOut = <%p>
-[AVAsset mediaSelectionGroupForPropertyList:mediaSelectionOption:]
<<<< AVAsset >>>> %s: <%p> resolved to group %@ and option %@
availableMetadataFormats
AVChapterGroupTypeKey
AVChapterGroupLanguageCodeKey
AVChapterGroupExtendedLanguageTagKey
AVChapterGroupPerChapterInfoKey
AVChapterGroupChaptersKey
<<<< AVAsset >>>> %s: *** Could not canonicalize language: %@. ***
-[AVAsset(AVAssetChapterInspection) _chapterMetadataGroupsBestMatchingPreferredLanguages:containingItemsWithCommonKeys:]
availableChapterLocales
index %d out of bounds.
com.apple.MediaToolbox
MediaValidator.plist
<<<< AVAsset >>>> %s: *** MediaValidator.plist was not loaded for this platform! Defaulting to no video support. ***
+[AVURLAsset _avfValidationPlist]_block_invoke
public.playlist
AVURLAssetMaxSizeAllowedForCellularAccessKey and AVURLAssetAllowsCellularAccessKey options are incompatible
<<<< AVAsset >>>> %s: asset created with AVAssetRequiresInProcessOperationKey
+[AVURLAsset _getFigAssetCreationOptionsFromURLAssetInitializationOptions:assetLoggingIdentifier:figAssetCreationFlags:error:]
AVURLAssetDownloadDestinationURLKey and AVURLAssetUsesNoPersistentCacheKey options are incompatible
AVURLAssetHasSecurityScopedURLKey
com.apple.avurlasset.tracks
<<<< AVAsset >>>> %s: %@ <%p> FigAssetCopyAssetWithDownloadToken for downloadToken %llu returned %d
-[AVURLAsset initWithURL:options:]
<<<< AVAsset >>>> %s: creating AVAssetInspectorLoader
<<<< AVAsset >>>> %s: using custom AVAssetInspectorLoader
Cannot honor specified AVURLAsset initialization options for AVURLAsset <%p>%@
: %@
<<<< AVAsset >>>> %s: %@ creating AVFigAssetInspectorLoader
<<<< AVAsset >>>> %s: %@ Created %p
<<<< AVAsset >>>> %s: Cannot create AVAssetDownloadCache when an AVManagedAssetCache is already present.
-[AVURLAsset _ensureAssetDownloadCache]_block_invoke
<<<< AVAsset >>>> %s: %@ Received notification for %@
figLoaderNotificationHandler
<<<< AVAsset >>>> %s: %s
*** SHOULD NOT receive kFigAssetNotification_PropertyRevised / kFigStdAssetProperty_Duration notification from %s, if you see this message please file a radar with logs and repro steps and assign it to AVFoundation ***
<%@: %p, URL = %@>
^{OpaqueFigAsset=}8@?0
<<<< AVAsset >>>> %s: _URLAsset->resourceLoader was unexpectedly non-nil
-[AVURLAsset(AVURLAssetURLHandlingInternal) _resourceLoaderWithRemoteHandlerContext:]_block_invoke
com.apple.avfoundation.avurlasset.instanceIdentifierMapping
+[AVDataAsset _getFigAssetCreationOptionsFromDataAssetInitializationOptions:figAssetCreationFlags:]
Data length cannot exceed %llu bytes
AVErrorUnknown
self.figAsset NULL
-[AVURLAsset(AVURLAssetContentKeyEligibility) _attachToContentKeySession:failedSinceAlreadyAttachedToAnotherSession:]
/Library/Caches/com.apple.xbs/Sources/AVFoundation_AVFCore_Sim/AVFoundation-2036.2.2/Fig/AVAsset.m
AVURLAssetItemProviderURLWrapperKey
AVURLAssetItemProviderAssetInitializationOptionsKey
com.apple.avfoundation.urlasset
Reading data from the type identifier %@ is not supported by AVURLAsset.
Reading file representations for the type identifier %@ is not supported by AVURLAsset.
Writing to NSItemProviders is not supported for non file:/// scheme URLs: %@
Loading data from the type identifier %@ is not supported by AVURLAsset.
Loading file representations for the type identifier %@ is not supported by AVURLAsset.
minimumCutOffFrequency < maximumCutOffFrequency
0. <= bypassThreshold && bypassThreshold <= 1.
0. <= sweepValue && sweepValue <= 1.
CleanAperture
ProductionAperture
EncodedPixels
aig_trace
com.apple.avfoundation.requestsqueue
com.apple.avfoundation.imagerequestqueue
com.apple.avfoundation.generateimagesasyncqueue
<<<< AVAssetImageGenerator >>>> %s: Creating FigAssetImageGenerator from FigAsset
-[AVAssetImageGenerator _ensureFigAssetImageGeneratorAllowingSynchronousPropertyLoad:error:]
<<<< AVAssetImageGenerator >>>> %s: called
-[AVAssetImageGenerator copyCGImageAtTime:actualTime:error:]
<<<< AVAssetImageGenerator >>>> %s: composition => using AVAssetReader
<<<< AVAssetImageGenerator >>>> %s: not a composition => using FigAssetImageGenerator
<<<< AVAssetImageGenerator >>>> %s: calling FigAssetImageGeneratorCopyCGImageAtTime time %.3f options %@
<<<< AVAssetImageGenerator >>>> %s: no FigAssetImageGenerator instance!
-[AVAssetImageGenerator generateCGImagesAsynchronouslyForTimes:completionHandler:]
handler != nil
-[AVAssetImageGenerator generateCGImagesAsynchronouslyForTimes:completionHandler:]_block_invoke
RequestID
RequestedTime
CompletionHandler
Self
<<<< AVAssetImageGenerator >>>> %s: calling FigAssetImageGeneratorRequestCGImageAtTimeAsync time %.3f options %@
<<<< AVAssetImageGenerator >>>> %s: calling handler with failed status, error %@
-[AVAssetImageGenerator cancelAllCGImageGeneration]
AVAssetImageGenerator can't use a video composition with a renderScale other than 1.0
<<<< AVAssetImageGenerator >>>> %s: calling handler with succeeded status, actualTime %.3f
-[AVAssetImageGenerator _didGenerateCGImage:]
<<<< AVAssetImageGenerator >>>> %s: calling handler with cancelled status
-[AVAssetImageGenerator _failedToGenerateCGImage:]
<<<< AVAssetImageGenerator >>>> %s: calling handler with failed status, error %d
<<<< AVOutputDeviceCommunicationChannel (FigRemoteControlSession) >>>> %s: called (dataLength=%d)
-[AVFigEndpointRemoteControlSessionOutputDeviceCommunicationChannelImpl _didReceiveData:]
<<<< AVOutputDeviceCommunicationChannel (FigRemoteControlSession) >>>> %s: called
-[AVFigEndpointRemoteControlSessionOutputDeviceCommunicationChannelImpl _didCloseCommunicationChannel]
<<<< AVOutputDeviceCommunicationChannel (FigRemoteControlSession) >>>> %s: Sending %d bytes through comm channel via FigEndpointRemoteControlSessionSendMessage
-[AVFigEndpointRemoteControlSessionOutputDeviceCommunicationChannelImpl sendData:completionHandler:]
<<<< AVOutputDeviceCommunicationChannel (FigRemoteControlSession) >>>> %s: called (inEventType=%{public}@, dataLength=%d)
AVFigEndpointRemoteControlSessionOutputDeviceCommunicationChannelImplHandleEvent
<<<< AVOutputDeviceCommunicationChannel (FigRemoteControlSession) >>>> %s: Unrecognized event type: %@
<<<< AVOutputDeviceCommunicationChannel (FigRemoteControlSession) >>>> %s: FigEndpointRemoteControlSessionSendMessage finished with response params %{public}@ (err=%d)
AVFigEndpointRemoteControlSessionOutputDeviceCommunicationChannelImplSendDataCompletion
vmap
mdep
AVAssetTrackTimeRangeDidChangeNotification
AVAssetTrackSegmentsDidChangeNotification
AVAssetTrackTrackAssociationsDidChangeNotification
AVAssetTrackMetadataDidChangeNotification
<%@: %p, trackID = %d, mediaType = %@>
segments
availableTrackAssociationTypes
/Library/Caches/com.apple.xbs/Sources/AVFoundation_AVFCore_Sim/AVFoundation-2036.2.2/Fig/AVAssetTrack.m %s: %s
assetTrackNotificationHandler
*** SHOULD NOT receive kFigAssetTrackNotification_PropertyRevised / kFigStdTrackProperty_TimeRange notification from %s, if you see this message please file a radar with logs and repro steps and assign it to AVFoundation ***
*** SHOULD NOT receive kFigAssetTrackNotification_PropertyRevised / kFigAssetTrackProperty_EditSegmentData notification from %s, if you see this message please file a radar with logs and repro steps and assign it to AVFoundation ***
AVPlayerWaitingToMinimizeStallsReason
AVPlayerWaitingWhileEvaluatingBufferingRateReason
AVPlayerWaitingWithNoItemToPlayReason
AVPlayerWaitingForCoordinatedPlaybackReason
An AVPlayerItem can occupy only one position in a player's queue at a time.
AVPlayerCurrentItemDidChangeNotification
ReasonForCurrentItemDidChange
ReasonAddToPlayQueue
ReasonRemoveFromPlayqueue
ReasonAdvanceAtEnd
ReasonAdvanceDueToError
ReasonUnknown
AVPlayerPlaybackWasInterruptedNotification
MatchMultichannelTrackPreferenceToAudioDevice
PreferStereo
PreferAC3ViaExclusivePassthrough
CoreTextSubtitleRenderer
CaptionDisplayService
CFAttributedStrings
FigCaptions
AVPlayerRateDidChangeNotification
AVPlayerRateDidChangeReasonKey
AVPlayerRateDidChangeRateChangeIdentifierKey
AVPlayerRateDidChangeOriginatingParticipantKey
AVPlayerRateDidChangeReasonAudioSessionInterrupted
AVPlayerRateDidChangeReasonSetRateCalled
AVPlayerRateDidChangeReasonSetRateFailed
AVPlayerRateDidChangeReasonAppBackgrounded
AVPlayerRateDidChangeReasonRouteChanged
AVPlayerRateDidChangeReasonPlaybackResumed
AVPlayerRateDidChangeReasonPlaybackStalled
AVPlayerRateDidChangeReasonPauseAtItemEnd
AVPlayerRateDidChangeReasonStatusChanged
AVPlayerRateDidChangeReasonCoordinatedPlayback
AVPlayerBackgroundPIPAuthorizationTokenDidChangeNotification
AVPlayerAudiovisualBackgroundPlaybackPolicyDidChangeNotification
Scanning
avplayer_trace
Item must be an instance of AVPlayerItem.
B24@?0^B8^@16
AvoidConcurrentKVOForAVPlayerCurrentItem
com.apple.avplayer.figplayer
com.apple.avplayer.playerlayer
com.apple.avplayer.ivars
com.apple.avplayer.current-item-properties
com.apple.avplayer.configuration
com.apple.avplayer.layers
avplayer_logperformance
AVPlayer %p deallocated while a pending preroll is still in progress; leaking completion handler. Use -cancelPendingPrerolls to deallocate an AVPlayer safely while a preroll is still pending.
masterClock
sourceClock
<<<< AVPlayer >>>> %s: Player status changed to failed with error: %lu
-[AVPlayer _changeStatusToFailedWithError:]
rate
<<<< AVPlayer >>>> %s: Posting AVPlayerRateDidChangeNotification for status change
<<<< AVPlayer >>>> %s: called on <%@>. Setting attributes on decoder to:
<%@>
-[AVPlayer _updateDecoderPixelBufferAttributes:onFigPlayer:]
AVPlayerCurrentItemDidChangeForPublishersNotification
isDisplayingClosedCaptions
AVPlayerIsDisplayingClosedCaptionsDidChangeNotification
<<<< AVPlayer >>>> %s: %@ called (self = %p, new current item = %@)
-[AVPlayer _setCurrentItem:]
<<<< AVPlayer >>>> %s: currentItem KVO: %{public}@ updating current item from %{public}@ to %{public}@
<<<< AVPlayer >>>> %s: currentItem KVO: %{public}@ will willChange AVPlayer.currentItem
-[AVPlayer _runOnIvarAccessQueueOperationThatMayChangeCurrentItemWithPreflightBlock:modificationBlock:error:]_block_invoke
<<<< AVPlayer >>>> %s: currentItem KVO: %{public}@ did willChange AVPlayer.currentItem
timeControlStatus
reasonForWaitingToPlay
<<<< AVPlayer >>>> %s: currentItem KVO: %{public}@ will didChange AVPlayer.currentItem
<<<< AVPlayer >>>> %s: currentItem KVO: %{public}@ did didChange AVPlayer.currentItem
<<<< AVPlayer >>>> %s: dispatching call to -_applyPlayQueueChangesToFigPlayerWithCompletionHandler: (self=%p)
v16@?0@"NSArray"8
-[AVPlayer _runOnIvarAccessQueueOperationThatMayChangeCurrentItemWithPreflightBlock:modificationBlock:error:]
<<<< AVPlayer >>>> %s: Item <%p> Now ReadyToPlay. Reevaluting if okay to play while transition to background.
-[AVPlayer _itemIsReadyToPlay:]_block_invoke
<<<< AVPlayer >>>> %s: Item <%p> Reevalution complete. Not okay to play while transition to background. Pausing.
-[AVPlayer _itemIsReadyToPlay:]_block_invoke_2
<<<< AVPlayer >>>> %s: currentItem KVO: %{public}@ called
-[AVPlayer _advanceCurrentItemAccordingToFigPlaybackItem:]
<<<< AVPlayer >>>> %s: The FigPlaybackItem that posted ItemBecameCurrent has already been removed from the queue; fall back to identifying the current item using FigPlayerCopyPlayQueueItem
<<<< AVPlayer >>>> %s: Handling removal of item %@ (self = %@)
<<<< AVPlayer >>>> %s: %@ New current item: %@ %@ (self = %@)
-[AVPlayer _advanceToNextItem]
<<<< AVPlayer >>>> %s: removed current item, now have %@
Item must be a non-nil instance of AVPlayerItem.
<<<< AVPlayer >>>> %s: %@ called (self = %@)
-[AVPlayer prepareItem:withCompletionHandler:]
v16@?0q8
<<<< AVPlayer >>>> %s: currentItem KVO: %{public}@ called with %{public}@ (afterItem = %{public}@)
-[AVPlayer _insertItem:afterItem:]
<<<< AVPlayer >>>> %s: now have %@
<<<< AVPlayer >>>> %s: Error inserting item: %@
surrogate_player_disabled
<<<< AVPlayer >>>> %s: Surrogate player enabled = %d
+[AVPlayer _createFigPlayerWithType:options:player:]
<<<< AVPlayer >>>> %s: Creating instance of %s
FigPlayer_File
FigPlayer_Stream
coordinator_player_disabled
<<<< AVPlayer >>>> %s: Coordinator player disabled
<<<< AVPlayer >>>> %s: %@ called (self=%p)
-[AVPlayer _createAndConfigureFigPlayerWithType:completionHandler:]
<<<< AVPlayer >>>> %s: %@ Dispatching FigPlayer copy property block (self=%p) to a background queue if necessary
<<<< AVPlayer >>>> %s: Dispatching FigPlayer configuration block (self=%p) to state dispatch queue
-[AVPlayer _createAndConfigureFigPlayerWithType:completionHandler:]_block_invoke
<<<< AVPlayer >>>> %s: %@ Will update status (self=%p)
-[AVPlayer _createAndConfigureFigPlayerWithType:completionHandler:]_block_invoke_2
<<<< AVPlayer >>>> %s: %@ setting up FigPlayer <%p>
airPlayVideoActive
externalPlaybackActive
mxSessionID
avplaybackcoordinator_always
AVPlayer_FigPlayerProperty_Rate
AVPlayer_FigPlayerProperty_RateOptions
<<<< AVPlayer >>>> %s: underlying FigPlayer did not implement SetRateWithOptions. Fall back to SetRateWithFade
-[AVPlayer _createAndConfigureFigPlayerWithType:completionHandler:]_block_invoke_4
<<<< AVPlayer >>>> %s: underlying FigPlayer did neither implement SetRateWithOptions nor SetRateWithFade. Fall back to SetRate
<<<< AVPlayer >>>> %s: Failed adding playback item of %@ to play queue immediately (self = %@), will remove item
-[AVPlayer _createAndConfigureFigPlayerWithType:completionHandler:]_block_invoke_8
v24@?0@"NSArray"8@"NSArray"16
<<<< AVPlayer >>>> %s: figplayer creation failed [%d]
<<<< AVPlayer >>>> %s: %@ Did update status to %d (self=%p)
<<<< AVPlayer >>>> %s: setExpectedAssetTypes %@
-[AVPlayer setExpectedAssetTypes:]
AVPlayer's expectedAssetTypes can't be after any AVPlayerItems have been enqueued or after the AVPlayer's status changes from AVPlayerStatusUnknown.
<<<< AVPlayer >>>> %s: sawFileType = %d, sawStreamingType = %d
-[AVPlayer setExpectedAssetTypes:]_block_invoke_2
AVPlayer.m
Invalid parameter not satisfying: %@
item != nil
-[AVPlayer _applyPlayQueueChangesToFigPlayerWithCompletionHandler:]
-[AVPlayer _applyPlayQueueChangesToFigPlayerWithCompletionHandler:]_block_invoke
<<<< AVPlayer >>>> %s: currentItem KVO: %{public}@ called with %{public}@
-[AVPlayer _removeItem:]
<<<< AVPlayer >>>> %s: %@ removed %@ %@, now have %@
-[AVPlayer replaceCurrentItemWithPlayerItem:]
<<<< AVPlayer >>>> %s: Error replacing current item: %@
v24@?0@"AVPlayerItem"8^B16
<<<< AVPlayer >>>> %s: %@ called. Rate is now [%f], changed because %s
-[AVPlayer _updatePlayerRate:rateChangeReason:rateChangeIdentifier:figPlayerSetRateHandler:]
<<<< AVPlayer >>>> %s: Posting AVPlayerRateDidChangeNotification with payload %@
-[AVPlayer setRate:withVolumeRampDuration:playImmediately:rateChangeReason:affectsCoordinatedPlayback:]_block_invoke_2
<<<< AVPlayer >>>> %s: current event %@ %f
-[AVPlayer _updateWaitingReasonAccordingToInterstitialEventCoordinator:forTimeControlStatus:]
<<<< AVPlayer >>>> %s: %@ called. oldReason %@ newReason %@ for timeControlStatus %ld to %ld
<<<< AVPlayer >>>> %s: %@ _setUsesLegacyAutomaticWaitingBehavior: %s
-[AVPlayer _setUsesLegacyAutomaticWaitingBehavior:]
AVPlayer's _usesLegacyAutomaticWaitingBehavior can't be set after any AVPlayerItems have been enqueued or after the AVPlayer's status changes from AVPlayerStatusUnknown.
<<<< AVPlayer >>>> %s: seekToDate called without any attached item
-[AVPlayer seekToDate:completionHandler:]
<<<< AVPlayer >>>> %s: seekToTime called without any attached item
-[AVPlayer seekToTime:completionHandler:]
-[AVPlayer seekToTime:toleranceBefore:toleranceAfter:completionHandler:]
AVPlayer cannot service a synchronized playback request via setRate:time:atHostTime: until its status is AVPlayerStatusReadyToPlay.
AVPlayer cannot service a synchronized playback request via setRate:time:atHostTime: when automaticallyWaitsToMinimizeStalling is YES
AVPlayer cannot service a preroll request until its status is AVPlayerStatusReadyToPlay.
<<<< AVPlayer >>>> %s: Obtaining volume for category [%@]
-[AVPlayer _userVolume]
AVPlayerActionAtItemEndAdvance is not allowed for a player of class %@
%d is not a valid actionAtItemEnd for a player of class %@
<<<< AVPlayer >>>> %s: %@ setting to %d
-[AVPlayer setShouldReduceResourceUsage:]
<<<< AVPlayer >>>> %s: %@ setting from %d to %d
-[AVPlayer setResourceConservationLevelWhilePaused:]
<<<< AVPlayer >>>> %s: setting to %@
-[AVPlayer setPlayerRole:synchronously:]
<<<< AVPlayer >>>> %s: Unrecognized player role %@
<<<< AVPlayer >>>> %s: Player role %@ set synchronously before we had a fig player.
<<<< AVPlayer >>>> %s: %@ Trying to set picker id : %@
-[AVPlayer setOutputContext:]
<<<< AVPlayer >>>> %s: No figPlayer found, cannot set picker id
block != nil
v32@?0{?=qiIq}8
<<<< AVPlayer >>>> %s: %@ called (self = <%p>, time observer = <%p>)
-[AVPlayer removeTimeObserver:]
An instance of AVPlayer cannot remove a time observer that was added by a different instance of AVPlayer.
You did not supply a reference to an object returned by either -addPeriodicTimeObserverForInterval:queue:usingBlock: or -addBoundaryTimeObserverForTimes:queue:usingBlock:
<<<< AVPlayer >>>> %s: closedCaptionLayers array snapshot:%@
-[AVPlayer _closedCaptionLayers]
<<<< AVPlayer >>>> %s: videoLayers array snapshot:%@
-[AVPlayer _videoLayers]
<<<< AVPlayer >>>> %s: %@ dispatching (self = %p)
-[AVPlayer _evaluateDisplaySizeOfAllAttachedLayers]
<<<< AVPlayer >>>> %s: %@ maximumLayerDisplaySize = %@ (self = %p)
-[AVPlayer _evaluateDisplaySizeOfAllAttachedLayers]_block_invoke
<<<< AVPlayer >>>> %s: %@ attached video layer array with %lu layers on FigPlayer
-[AVPlayer _attachVideoLayersToFigPlayer]
<<<< AVPlayer >>>> %s: %@ detached video layer array from FigPlayer
-[AVPlayer _detachVideoLayersFromFigPlayer:]
<<<< AVPlayer >>>> %s: %@ AVPlayerLayer(%p) and its closedCaptionLayer(%p)
-[AVPlayer _addLayer:]
<<<< AVPlayer >>>> %s: %@ updating video layers due to adding layer %p (self=%@)
-[AVPlayer _addLayer:]_block_invoke_2
<<<< AVPlayer >>>> %s: %@ not updating video layers, despite adding layer %p (self=%@)
++++++++++++++++++++++++++++++++++++++++++
------------------------------------------
<<<< AVPlayer >>>> %s: Posting AVPlayerAudiovisualBackgroundPlaybackPolicyDidChangeNotification for policy change
-[AVPlayer setAudiovisualBackgroundPlaybackPolicy:]
<<<< AVPlayer >>>> %s: availableHDRModes returning %d
+[AVPlayer availableHDRModes]
<<<< AVPlayer >>>> %s: Returning hasAVPlayerLayerInPIPMode: %s
-[AVPlayer(AVPlayerMultitaskSupport) _hasAssociatedAVPlayerLayerInPIPMode]
UIApplication
-[AVPlayer(AVPlayerMultitaskSupport) _applicationHasExternallyDisplayedAVPlayerLayerAndIsUnderDeviceLock]
<<<< AVPlayer >>>> %s: Not suspended under lock
com.apple.iapd.notify.extendedMode
<<<< AVPlayer >>>> %s: Player <%@ %@> audiovisual background policy set to ContinuesIfPossible
-[AVPlayer(AVPlayerMultitaskSupport) _canContinuePlaybackInBackgrounBasedOnAudiovisualBackgroundPlaybackPolicy:]
<<<< AVPlayer >>>> %s: Player <%@ %@> audiovisual background policy set to Automatic, use coordinator other participant count %lu to decide
<<<< AVPlayer >>>> %s: Player <%@ %@> audiovisual background policy set to Pauses
<<<< AVPlayer >>>> %s: Item <%@ %@> can continue to play with Player <%@ %@> as the application transitions to background reason: [ No associated video layers ]
-[AVPlayer(AVPlayerMultitaskSupport) _itemOkayToPlayWhileTransitioningToBackground:]
<<<< AVPlayer >>>> %s: Item <%@ %@> can continue to play with Player <%@ %@> as the application transitions to background reason: [ MMP SPI says so ]
<<<< AVPlayer >>>> %s: Item <%@ %@> can continue to play with Player <%@ %@> as an associated AVPlayerLayer is in PIP mode
<<<< AVPlayer >>>> %s: Item <%@ %@> can continue to play with Player <%@ %@> as the application transitions to background reason: [ CarPlay is active ]
<<<< AVPlayer >>>> %s: Item <%@ %@> can continue to play with Player <%@ %@> as the application transitions to background reason: [ Under device lock and playing to external display ]
<<<< AVPlayer >>>> %s: Item <%@ %@> can continue to play with Player <%@ %@> as the application transitions to background reason: [ IAP extended mode is active ]
<<<< AVPlayer >>>> %s: Item <%@ %@> can continue to play with Player <%@ %@> as the application transitions to background reason: [ policy set to %ld ] 
<<<< AVPlayer >>>> %s: Item <%@ %@> can continue to play with Player <%@ %@> as the application transitions to background reason: [ No enabled video ]
<<<< AVPlayer >>>> %s: Item <%@ %@> can continue to play with Player <%@ %@> as the application transitions to background: %d
<<<< AVPlayer >>>> %s: %@ PIP mode is active
-[AVPlayer(AVPlayerMultitaskSupport) _shouldDetachVideoLayersFromFigPlayer]
<<<< AVPlayer >>>> %s: %@ Under device lock and has external display active
<<<< AVPlayer >>>> %s: %@ Extended mode is active
<<<< AVPlayer >>>> %s: %@ Host application is in foreground with foreground layers
<<<< AVPlayer >>>> %s: %@ Should Detach: [%@]
<<<< AVPlayer >>>> %s: %@ has no more foreground layers left, detaching video layers
-[AVPlayer(AVPlayerMultitaskSupport) _layerForegroundStateChanged:]_block_invoke
<<<< AVPlayer >>>> %s: %@ has foreground layers, attaching video layers
<<<< AVPlayer >>>> %s: called
-[AVPlayer(AVPlayerMultitaskSupport) _didEnterBackground:]
<<<< AVPlayer >>>> %s: scheduling _didFinishSuspension block
-[AVPlayer(AVPlayerMultitaskSupport) _didEnterBackground:]_block_invoke
<<<< AVPlayer >>>> %s: synthesizing _didFinishSuspension notification
-[AVPlayer(AVPlayerMultitaskSupport) _didEnterBackground:]_block_invoke_2
<<<< AVPlayer >>>> %s: skipping _didFinishSuspension
-[AVPlayer(AVPlayerMultitaskSupport) _didFinishSuspension:]
<<<< AVPlayer >>>> %s: Item <%@ %p> Pausing since cannot transition to background
-[AVPlayer(AVPlayerMultitaskSupport) _detachVideoLayersForSuspension]_block_invoke_3
<<<< AVPlayer >>>> %s: Item <%@ %p> Unable to evaluate if okay to play while transition to background. Will reevaluate when ReadyToPlay
-[AVPlayer(AVPlayerMultitaskSupport) _willEnterForeground:]
MusicPlayer
<<<< AVPlayer >>>> %s: %@ called. Set rate to 1.0 because %s
-[AVPlayer(AVPlayerSupportForMediaPlayer) _resumePlayback:error:]
audioSession != nil
Cannot set preservesAudioSessionSampleRate after the AVPlayer has begun preparing for playback.
Not available.  Use %@ or %@ instead
<<<< AVPlayer >>>> %s: Posting AVPlayerBackgroundPIPAuthorizationTokenDidChangeNotification for token change
-[AVPlayer(AVPlayerPIPSupport) setBackgroundPIPAuthorizationToken:]
<<<< AVPlayer >>>> %s: replaced local interstitialEventCoordinator %p with remote %p
-[AVPlayer(AVPlayerInterstitialSupport_Internal) _setInterstitialPlayer:]_block_invoke
AVPlayerItem *AVPlayerFindItemMatchingFigPlaybackItem(NSArray *, FigPlaybackItemRef, NSArray **)
figPlaybackItemToFind != NULL
<<<< AVPlayer >>>> %s: called (asset=%p)
AVPlayerGetFigPlayerTypeForAsset
<<<< AVPlayer >>>> %s: %@ called (self = %@, inNotificationName = %@, inNotificationPayload = %@)
avplayer_fpInterstitialCoordinatorNotificationCallback
<<<< AVPlayer >>>> %s: %@ called (self = %@, inNotificationName = %@)
avplayer_fpInterstitialCoordinatorNotificationCallback_block_invoke
avplayer_fpNotificationCallback
avplayer_fpNotificationCallback_block_invoke
AVController_Volume
_AVPlayer_Volume
<<<< AVPlayer >>>> %s: Posting _AVPlayer_VolumeDidChangeNotification with payload %@
_AVPlayer_VolumeDidChangeNotification
<<<< AVPlayer >>>> %s: %@ kFigPlayerNotification_MutedDidChange (self = %@ value [%d])
muted
<<<< AVPlayer >>>> %s: Posting AVPlayerCurrentItemDidChangeNotification with reason %@
<<<< AVPlayer >>>> %s: %@ kFigPlayerNotification_CurrentItemDidChange (self = %@, FigPlaybackItem = %p
<<<< AVPlayer >>>> %s: %@ kFigPlayerNotification_CurrentItemDidChange due to AddTo/RemoveFrom-PlayQueue. No need to advance current item to match Fig
<<<< AVPlayer >>>> %s: %@ player <%p> failed to create fig sub item (error: %@)
outputObscuredDueToInsufficientExternalProtection
<<<< AVPlayer >>>> %s: Posting AVPlayerPlaybackWasInterruptedNotification
avplayer_fpNotificationCallback_block_invoke_2
isSilencedDueToConflictWithOtherPlayback
<<<< AVPlayer >>>> %s: %@ called (self = %@, notification = %@)
avplayer_iapdNotificationCallback
avplayer_iapdNotificationCallback_block_invoke
<<<< AVPlayer >>>> %s: %@ AVPlayer <%p>: iapd extended mode has changed. Conditions to maintain videoLayer->figPlayer don't hold. Detaching.
avplayer_iapdNotificationCallback_block_invoke_3
<<<< AVPlayer >>>> %s: %@ AVPlayer <%p>: iapd extended mode has changed. Conditions to maintain videoLayer->figPlayer do hold. Attaching.
avplayer_iapdNotificationCallback_block_invoke_4
<<<< AVPlayer >>>> %s: %@ AVPlayer <%p>: has no layers or no figPlayer. Nothing to attach/detach for iapd
com.apple.avfoundation.avplayer.iapd
can be encoded only by a NSXPCCoder
variantQualifiers
isPrimaryContentConfig
mediaSelections
can be decoded only by a NSXPCCoder
downloadToken
artworkData
primaryContentConfig
auxiliaryContentConfigs
optimizesAuxiliaryContentConfigs
avasynchronouskeyvalueloading_trace
Unexpected terminal status %d
AVSampleBufferAudioRendererWasFlushedAutomaticallyNotification
AVSampleBufferAudioRendererFlushTimeKey
<<<< AVSampleBufferAudioRenderer >>>> %s: adding notification listener to %p with listener %p
-[AVSampleBufferAudioRenderer _installNotificationHandlers]
<<<< AVSampleBufferAudioRenderer >>>> %s: removing notification listener to %p with listener %p
-[AVSampleBufferAudioRenderer _uninstallNotificationHandlers]
avsamplebufferaudiorenderer_trace
<<<< AVSampleBufferAudioRenderer >>>> %s: called
-[AVSampleBufferAudioRenderer init]
<<<< AVSampleBufferAudioRenderer >>>> %s: [%p] created
<<<< AVSampleBufferAudioRenderer >>>> %s: [%p]
-[AVSampleBufferAudioRenderer dealloc]
<<<< AVSampleBufferAudioRenderer >>>> %s: [%p] Transitioning to status: %d
-[AVSampleBufferAudioRenderer _transitionToStatus:error:]
<<<< AVSampleBufferAudioRenderer >>>> %s: [%p] called
-[AVSampleBufferAudioRenderer status]
-[AVSampleBufferAudioRenderer error]
<<<< AVSampleBufferAudioRenderer >>>> %s: [%p] called: %@
-[AVSampleBufferAudioRenderer setAudioOutputDeviceUniqueID:]
audioOutputDeviceUniqueID != nil
-[AVSampleBufferAudioRenderer audioOutputDeviceUniqueID]
-[AVSampleBufferAudioRenderer setAudioTimePitchAlgorithm:]
newAudioTimePitchAlgorithm != nil
-[AVSampleBufferAudioRenderer audioTimePitchAlgorithm]
<<<< AVSampleBufferAudioRenderer >>>> %s: [%p] called: %1.3f
-[AVSampleBufferAudioRenderer setVolume:]
<<<< AVSampleBufferAudioRenderer >>>> %s: [%p] called: content is now marked as %s
-[AVSampleBufferAudioRenderer setIsUnaccompaniedByVisuals:]
audio only (UnaccompaniedByVisuals)
audiovisual
-[AVSampleBufferAudioRenderer volume]
<<<< AVSampleBufferAudioRenderer >>>> %s: [%p] called: %d
-[AVSampleBufferAudioRenderer setMuted:]
-[AVSampleBufferAudioRenderer isMuted]
-[AVSampleBufferAudioRenderer timebase]
-[AVSampleBufferAudioRenderer copyFigSampleBufferAudioRenderer:]
-[AVSampleBufferAudioRenderer setRenderSynchronizer:error:]
<<<< AVSampleBufferAudioRenderer >>>> %s: [%p] trying to add to a synchronizer (%p) when we already are added to a synchronizer (%p).
The AudioRenderer cannot be added to a Synchronizer when it has already been added to a Synchronizer.
<<<< AVSampleBufferAudioRenderer >>>> %s: [%p] called: %p
-[AVSampleBufferAudioRenderer enqueueSampleBuffer:]
sampleBuffer != NULL
Sample buffer has media type '%@' instead of '%@'
-[AVSampleBufferAudioRenderer flush]
completionHandler != nil
-[AVSampleBufferAudioRenderer flushFromSourceTime:completionHandler:]
-[AVSampleBufferAudioRenderer isReadyForMoreMediaData]
-[AVSampleBufferAudioRenderer requestMediaDataWhenReadyOnQueue:usingBlock:]
queue != NULL
-[AVSampleBufferAudioRenderer stopRequestingMediaData]
assetwriterinputmetadataadaptor_trace
input != nil
[[input mediaType] isEqual:AVMediaTypeMetadata]
Cannot create a new metadata adaptor with an asset writer input that is already attached to a metadata adaptor
Cannot create a new metadata adaptor with an asset writer input that has already started writing
Cannot create a new metadata adaptor with an asset writer that does not carry a source format hint
%@ only knows how to produce data with media subtype '%@', so it must be initialized with an instance of AVAssetWriterInput that is expecting data in that format
<%@: %p, assetWriterInput = %@>
group != nil
CMTIME_IS_NUMERIC([group timeRange].start)
! CMTIME_IS_NEGATIVE_INFINITY([group timeRange].duration)
Cannot invoke method before the attached asset writer input has been added to an asset writer and -startWriting has been called on that asset writer
<<<< AVAssetWriterInputMetadataAdaptor >>>> %s: Unrecognized asset writer status %d
-[AVAssetWriterInputMetadataAdaptor appendTimedMetadataGroup:]
Cannot write to file timed metadata group %p%@
AVExternalProtectionMonitorExternalProtectionStateChangedNotification
AVPlayerItemTimebaseChangedNotification
GaplessInfoHeuristicInfoKey
GaplessInfoEncodingDelayInFramesKey
GaplessInfoEncodingDrainInFramesKey
GaplessInfoDurationInFramesKey
GaplessInfoLastPacketsResyncKey
RampInOutInfoInDuration
RampInOutInfoOutDuration
AudibleDRMInfoGroupID
AVPlayerItemTimeJumpedNotification
AVPlayerItemTimeJumpedOriginatingParticipantKey
AVPlayerItemDidPlayToEndTimeNotification
AVPlayerItemFailedToPlayToEndTimeNotification
AVPlayerItemFailedToPlayToEndTimeErrorKey
AVPlayerItemPlaybackStalledNotification
AVPlayerItemRecommendedTimeOffsetFromLiveDidChangeNotification
AVPlayerItemNewAccessLogEntry
AVPlayerItemNewErrorLogEntry
AVPlayerItemMediaSelectionDidChangeNotification
AVProtectedContentProviderFairPlay
AVInitializeProtectedContentPlaybackSupportStorageURLKey
AVInitializeProtectedContentPlaybackSupportVideoKey
AVInitializeProtectedContentPlaybackSupportExternalProtectionKey
AVPlayerItemBecameCurrentNotification
AVPlayerItemStoppedBeingCurrentNotification
AVPlayerItemVariantChangedNotification
AVPlayerItemSuppressesVideoLayersDidChangeNotification
AVPlayerItemHasEnqueuedVideoFrameDidChangeNotification
AVPlayerItemPreferredPixelBufferAttributesDidChangeNotification
AVPlayerItemSpatialAudioRenderingDidChangeNotification
SessionID
PlayInfo
avplayeritem_trace
%@ does not support playback via AVPlayer
com.apple.avplayeritem.ivars
com.apple.avplayeritem.figplaybackitem
com.apple.avplayeritem.figplaybackitem.accessor
com.apple.avplayeritem.figplaybackitem.setter
com.apple.avplayeritem.seek
<<<< AVPlayerItem >>>> %s: %@ AVPlayerItem <%p> created with asset at URL [%@], automatically loaded asset keys %@
-[AVPlayerItem initWithAsset:automaticallyLoadedAssetKeys:]
<<<< AVPlayerItem >>>> %s: currentItem KVO: called
-[AVPlayerItem dealloc]
<<<< AVPlayerItem >>>> %s: currentItem KVO: %{public}@
AVPlayerItem %p deallocated while a pending seek is still in progress; leaking completion handler. Use -cancelPendingSeeks to deallocate an AVPlayerItem safely while a seek operation is still pending.
<%@: %p, %@>
asset = %@
URL = %@
with no asset and no URL
_externalProtectionRequiredForPlayback
timedMetadata
-[AVPlayerItem _configurePlaybackItem]
<<<< AVPlayerItem >>>> %s: %@ Requesting automatic loading of FigAsset properties %@
-[AVPlayerItem _configurePlaybackItemAndReturnError:]
<<<< AVPlayerItem >>>> %s: %@ Requesting automatic loading of FigAssetTrack properties %@
<<<< AVPlayerItem >>>> %s: %@ FigPlaybackItemSeekToDate() failed for initial date
<<<< AVPlayerItem >>>> %s: %@ FigPlaybackItemSetProperty() failed witih %d for initial estimated date
<<<< AVPlayerItem >>>> %s: %@ called (self = %p) attaching player %p weak ref %p
-[AVPlayerItem _attachToPlayer:]
<<<< AVPlayerItem >>>> %s: %@ item (self = %p) already attached to a different player, new weak ref %p old weak ref %p
An AVPlayerItem cannot be associated with more than one instance of AVPlayer
<<<< AVPlayerItem >>>> %s: %@ item (self = %p) already attached to same player, new weak ref %p old weak ref %p
<<<< AVPlayerItem >>>> %s: We have neither a FigAsset, URL, nor FigFormatReader, so cannot create a FigPlaybackItem
+[AVPlayerItem _createFigPlaybackItemForFigPlayer:asset:URL:flags:options:playbackItem:]
<<<< AVPlayerItem >>>> %s: %@ called (self = %p)
-[AVPlayerItem _attachToFigPlayer]
-[AVPlayerItem _addToPlayQueueOfFigPlayerOfPlayer:afterFigPlaybackItemOfItem:]
<<<< AVPlayerItem >>>> %s: %@ Adding playback item of %p to play queue immediately (player = %@)
AVPlayerItem.m
previousItem != nil
presentationSize
AVPlayerItemPresentationSizeDidChangeNotification
AVPlayerItemTracksDidChangeNotification
isNonForcedSubtitleDisplayEnabled
AVPlayerItemNonForcedSubtitleDisplayEnabledDidChangeNotification
asset
%@, 
See -[AVPlayerItem errorLog] for %d events
<<<< AVPlayerItem >>>> %s: %@ item <%p> status changing to AVPlayerItemStatusFailed with error %@
-[AVPlayerItem _changeStatusToFailedWithError:]
<<<< AVPlayerItem >>>> %s: %@ Item <%p> is fetching TrackIDArray
-[AVPlayerItem _tracks]
<<<< AVPlayerItem >>>> %s: %@ called (self = %p) to invoke %d handlers
-[AVPlayerItem _invokeReadyForEnqueueingHandlers]
-[AVPlayerItem _makeReadyForEnqueueingWithCompletionHandler:]
<<<< AVPlayerItem >>>> %s: %@ basics already ready
<<<< AVPlayerItem >>>> %s: %@ initialSamples already ready
<<<< AVPlayerItem >>>> %s: %@ CPEProtector already ready
<<<< AVPlayerItem >>>> %s: Either everything necessary is already ready, or making it all ready has failed
<<<< AVPlayerItem >>>> %s: Copying completion handler for later invocation in response to readiness notifications
<<<< AVPlayerItem >>>> %s: %@ Item <%p> is fetching its dimensions
-[AVPlayerItem _presentationSize]
<<<< AVPlayerItem >>>> %s: Invoking completion handler for cancelled seek %d
-[AVPlayerItem _cancelPendingSeekAndRegisterSeekCompletionHandler:]
<<<< AVPlayerItem >>>> %s: Invoking seek completion handler for seek id %d
-[AVPlayerItem _unregisterInvokeAndReleasePendingSeekCompletionHandlerForSeekID:completeAnyPendingSeek:finished:]
Seeking is not possible to time %@
toleranceBefore seekToTime must be valid
toleranceBefore seekToTime may not be negative
toleranceAfter seekToTime must be valid
toleranceAfter seekToTime may not be negative
<<<< AVPlayerItem >>>> %s: %@ Item <%p> Seek to time %1.3f with tolerance <%1.3f, %1.3f>
-[AVPlayerItem seekToTime:toleranceBefore:toleranceAfter:completionHandler:]
<<<< AVPlayerItem >>>> %s: %@ Using seek ID %d
<<<< AVPlayerItem >>>> %s: %@ FigPlaybackItemSeekToDateWithID() failed
-[AVPlayerItem seekToDate:completionHandler:]
<<<< AVPlayerItem >>>> %s: can't create looping timebase! item will not loop.
-[AVPlayerItem _updateTimebase]_block_invoke_2
preferredForwardBufferDuration >= 0.0
<<<< AVPlayerItem >>>> %s: Unknown AVAudioMixEffectParameters type.
-[AVPlayerItem _setAudioEffectParameters:forTrackID:]
AVVideoCompositions using AVVideoCompositionCoreAnimationTool cannot be used with AVPlayerItem. AVVideoCompositionCoreAnimationTool is for offline rendering only.
<<<< AVPlayerItem >>>> %s: %@ setting video composition instructions to %@
-[AVPlayerItem _setVideoCompositionInstructions:]
BytesStillNeededToEnd
DurationFromNowToEnd
CurrentMeasuredBytesPerSecond
RawMeasuredBytesPerSecond
BandwidthSlopFactor
EstimatedTimeToLikelyToKeepUp
RemoteIPAddress
Default
<<<< AVPlayerItem >>>> %s: %@ called (self=%p, option=%@, group=%@)
-[AVPlayerItem _selectMediaOption:usingFigSelectedMediaArrayObtainedFromGroup:]
<<<< AVPlayerItem >>>> %s: Neither applied nor cached media option. Selection will be discarded.
-[AVPlayerItem _selectMediaOption:inGroup:cacheIfAppropriate:]
<<<< AVPlayerItem >>>> %s: %@ <%p> with asset <%p> called for media selection option %@ in group %@
-[AVPlayerItem selectMediaOption:inMediaSelectionGroup:]
<<<< AVPlayerItem >>>> %s: %@ <%p> with asset <%p> called for media selection group %@
-[AVPlayerItem selectMediaOptionAutomaticallyInMediaSelectionGroup:]
<<<< AVPlayerItem >>>> %s: %@ Item <%p> avoided synchronous FigAsset/FigAssetTrack property fetch while forumlating currentMediaSelection
-[AVPlayerItem _currentMediaSelectionFromFigSelectedMediaArray:]
<<<< AVPlayerItem >>>> %s: Posting AVPlayerItemMediaSelectionDidChangeNotification
-[AVPlayerItem _setCurrentMediaSelection:]
<<<< AVPlayerItem >>>> %s: %@ <%p> returning %@
-[AVPlayerItem currentMediaSelection]
^{OpaqueFigPlayerInterstitialCoordinator=}8@?0
<<<< AVPlayerItem >>>> %s: %@ item <%p> updateStatusToReadyToPlay:%d
-[AVPlayerItem _updateCanPlayAndCanStepPropertiesWhenReadyToPlayWithNotificationPayload:updateStatusToReadyToPlay:]
canPlaySlowForward
canPlayFastForward
canPlayReverse
canPlaySlowReverse
canPlayFastReverse
canStepForward
canStepBackward
<<<< AVPlayerItem >>>> %s: %@ item <%p> status changing to AVPlayerItemStatusReadyToPlay
-[AVPlayerItem _updateCanPlayAndCanStepPropertiesWhenReadyToPlayWithNotificationPayload:updateStatusToReadyToPlay:]_block_invoke
<<<< AVPlayerItem >>>> %s: %@ item <%p> set can and step flags
<<<< AVPlayerItem >>>> %s: %@ item <%p> updateStatusToReadyToPlay:%d complete
<<<< AVPlayerItem >>>> %s: self %@: setting coordination identifier to %@
-[AVPlayerItem _updateItemIdentifierForCoordinatedPlayback]_block_invoke
AVPlayerItem does not support the specified protected content provider
v32@?0@8@16^B24
AVPlayerItem could not uninitialize the specified protected content support session
AVPlayerItem._externalProtectionRequiredForPlayback can only be set to YES
Cannot get rental expiration date information from an AVPlayerItem that does not contain rental content
Cannot get rental playback date information from an AVPlayerItem that does not contain rental content or when rental playback has not started
playerReference != nil
playerItemReference != nil
<%@: %p, player = %@, playerItem = %@>
Player connections are one-shot objects.  Cannot connect a player connection that was already disconnected.  To re-connect an AVPlayerItem to an AVPlayer, create a new player AVPlayerConnection object
Cannot connect a player connection that is already connected
<<<< AVPlayerItem >>>> %s: Not calling FigPlayerAddToPlayQueue because item's status is the failure status (item = %@ %@, previous item = %@ %@, FigPlaybackItem = %p)
-[AVPlayerConnection addItemToPlayQueueAfterPlaybackItemOfItem:]
<<<< AVPlayerItem >>>> %s: Calling FigPlayerAddToPlayQueue (item = %@ %@, previous item = %@ %@, FigPlaybackItem = %p)
Cannot disconnect a player connection that was already disconnected
<<<< AVPlayerItem >>>> %s: Failed to set kFigPlaybackItemProperty_MetadataOutputsDictionary
-[AVPlayerItem(AVPlayerItemOutputs) _evaluateMetadataOutputs]_block_invoke
Cannot attach AVPlayerItemSampleBufferOutput to AVPlayerItem
Cannot attach an output that is already attached or nil output
Cannot attach a collector that is already attached
newAVKitData == nil || [newAVKitData conformsToProtocol:@protocol(NSObject)]
newAVKitData == nil || [newAVKitData conformsToProtocol:@protocol(NSCopying)]
None
Adaptive
LivePhoto
DigitalZoom
<<<< AVPlayerItem >>>> %s: Video Enhancement mode is not valid
-[AVPlayerItem(AVPlayerItemVideoEnhancement) setVideoEnhancementMode:]
<<<< AVPlayerItem >>>> %s: Posting AVPlayerItemTimeJumpedNotification
cmTimebaseNotificationCallback_TimeJumped
basics
<<<< AVPlayerItem >>>> %s: %@ item <%p> ready for inspection of %@
avplayeritem_fpItemNotificationCallback_block_invoke
<<<< AVPlayerItem >>>> %s: %@ item <%p> ready for playback
hasEnabledAudio
hasEnabledVideo
hasVideo
nonForcedSubtitleDisplayEnabled
<<<< AVPlayerItem >>>> %s: Posting AVPlayerItemTimebaseChangedNotification
<<<< AVPlayerItem >>>> %s: %@ item <%p> failed to become ready for %@ (error: %@)
playback
inspection
<<<< AVPlayerItem >>>> %s: %@ item <%p> failed to create fig sub item (error: %@)
<<<< AVPlayerItem >>>> %s: %@ NewRecommendedTimeOffsetFromLive: %@
<<<< AVPlayerItem >>>> %s: %@ stream likely to keep up: YES
playbackLikelyToKeepUp
<<<< AVPlayerItem >>>> %s: %@ stream likely to keep up: NO
<<<< AVPlayerItem >>>> %s: %@ stream buffer empty: YES
playbackBufferEmpty
<<<< AVPlayerItem >>>> %s: %@ stream buffer full: YES
playbackBufferFull
<<<< AVPlayerItem >>>> %s: %@ playback stalled
<<<< AVPlayerItem >>>> %s: Posting AVPlayerItemPlaybackStalledNotification
<<<< AVPlayerItem >>>> %s: %@ seekable ranges changed
seekableTimeRanges
seekableTimeRangesLastModifiedTime
<<<< AVPlayerItem >>>> %s: %@ playback buffer Full: NO
<<<< AVPlayerItem >>>> %s: %@ playback buffer empty: NO
<<<< AVPlayerItem >>>> %s: %@ loaded ranges changed
loadedTimeRanges
<<<< AVPlayerItem >>>> %s: %@ dimensions changed to %@
<<<< AVPlayerItem >>>> %s: Posting AVPlayerItemDidPlayToEndTimeNotification
avplayeritem_fpItemNotificationCallback_block_invoke_2
<<<< AVPlayerItem >>>> %s: Posting AVPlayerItemFailedToPlayToEndTimeNotification with error %@
<<<< AVPlayerItem >>>> %s: Posting AVPlayerItemNewAccessLogEntryNotification
<<<< AVPlayerItem >>>> %s: Posting AVPlayerItemNewErrorLogEntryNotification
<<<< AVPlayerItem >>>> %s: Posting AVPlayerItemTimeJumpedNotification for seek with originator
<<<< AVPlayerItem >>>> %s: %@ FigPlaybackItem <%p> became the FigPlayer's current item
<<<< AVPlayerItem >>>> %s: %@ FigPlaybackItem <%p> stopped being the FigPlayer's current item
<<<< AVPlayerItem >>>> %s: %@ FigPlaybackItem <%p> was removed from the FigPlayer's item queue
AVPlayerItemWasRemovedFromPlayQueueNotification
<<<< AVPlayerItem >>>> %s: %@ alternate stream changed
<<<< AVPlayerItem >>>> %s: %@ Chosen tracks changed
<<<< AVPlayerItem >>>> %s: %@ Display non-forced subtitles changed
<<<< AVPlayerItem >>>> %s: %@ ExternalProtectionRequiredForPlayback changed
<<<< AVPlayerItem >>>> %s: %@ item <%p> hasEnabledAudio changed
<<<< AVPlayerItem >>>> %s: %@ item <%p> hasEnabledVideo changed
<<<< AVPlayerItem >>>> %s: %@ item <%p> hasVideo changed to YES
<<<< AVPlayerItem >>>> %s: %@ item selected media options changed
avplayeritemtrack_trace
<%@: %p, assetTrack = %@>
VideoEnhancementFilterOptions
DisableColorMatching
ActiveHapticChannelIndex
Volume
Cannot add any AVPlayerItemOutput other than AVPlayerItemSampleBufferOutput to AVPlayerItemTrack
<<<< AVPlayerItemTrack >>>> %s: attached output %@ with extractionID %d
-[AVPlayerItemTrack(AVPlayerItemOutputs) addOutput:]
Cannot remove any AVPlayerItemOutput other than AVPlayerItemSampleBufferOutput from AVPlayerItemTrack
<<<< AVPlayerItemTrack >>>> %s: removed output %@
-[AVPlayerItemTrack(AVPlayerItemOutputs) removeOutput:]
avqueueplayer_trace
<<<< AVQueuePlayer >>>> %s: called (self = %@, item = %@, afterItem = %@
-[AVQueuePlayer insertItem:afterItem:]
<<<< AVQueuePlayer >>>> %s: called (self = %@, item = %@)
-[AVQueuePlayer removeItem:]
<<<< AVQueuePlayer >>>> %s: called (self = %@)
-[AVQueuePlayer removeAllItems]
<<<< AVQueuePlayer >>>> %s: %p %@. NO since action-at-end is NOT advance
-[AVQueuePlayer(AVPlayerAdvanceWithOverlap) canOverlapPlaybackFromPlayerItem:toPlayerItem:]
<<<< AVQueuePlayer >>>> %s: %p %@. NO since AirPlay Video is active
<<<< AVQueuePlayer >>>> %s: %p %@. NO since one of items is HLS
<<<< AVQueuePlayer >>>> %s: %p %@. NO since one of items doesn't have 1 track
<<<< AVQueuePlayer >>>> %s: %p %@. NO since one of items doesn't have audio track
<<<< AVLoggingIdentifier >>>> %s: nil specifiedName
-[AVSpecifiedLoggingIdentifier initWithSpecifiedName:]
Identifier name must be 6 chars or less
Identifier name must not contain more than one period
Identifier name must not contain non-numeric character after period
avloggingidentifier_trace
<<<< AVLoggingIdentifier >>>> %s: Identifier string is %@
%@.%02d
I/%@
-[AVAssetLoggingIdentifier init]
P/%@
-[AVPlayerLoggingIdentifier init]
ABCDEFGHIJKLMNOPQRSTUVWXYZ
<<<< AVLoggingIdentifier >>>> %s: Failed to allocate char string of length %d
makeRandomCharacterString
composition_trace
<<<< AVComposition >>>> %s: [%p] called
-[AVComposition _initWithComposition:]
<%@: %p tracks = %@>
-[AVComposition mutableCopyWithZone:]
Cannot honor specified AVURLAsset initialization options for AVMutableComposition <%p>%@
<<<< AVComposition >>>> %s: [%p] called mutableComposition: %p asset: %p timeRange.start: %.3f timeRange.duration: %.3f startTime: %.3f
-[AVMutableComposition insertTimeRange:ofAsset:atTime:error:]
<<<< AVComposition >>>> %s: [%p] called mutableComposition: %p timeRange.start: %.3f timeRange.duration: %.3f
-[AVMutableComposition insertEmptyTimeRange:]
-[AVMutableComposition removeTimeRange:]
<<<< AVComposition >>>> %s: [%p] called mutableComposition: %p timeRange.start: %.3f timeRange.duration: %.3f duration: %.3f
-[AVMutableComposition scaleTimeRange:toDuration:]
<<<< AVComposition >>>> %s: [%p] called mutableComposition: %p mediaType: %@ preferredTrackID: %d
-[AVMutableComposition addMutableTrackWithMediaType:preferredTrackID:]
<<<< AVComposition >>>> %s: [%p] called mutableComposition: %p track: %p trackID: %d
-[AVMutableComposition removeTrack:]
<<<< AVComposition >>>> %s: [%p] called mutableComposition: %p track: %p trackAssetURL: %@ trackID: %d
-[AVMutableComposition mutableTrackCompatibleWithTrack:]
<<<< AVComposition >>>> %s: AVAsset with nil _absoluteURL and NULL _mutableComposition
URLAssetInitializationOptions
compositionMetadataArray
mediaType
trackID
naturalTimeScale
extendedLanguageTag
preferredTransform
preferredVolume
alternateGroupID
formatDescriptionReplacements
originalFormatDescription
replacementFormatDescription
trackMetadataArray
%c%c%c
root
avplayeritemmetadataoutput_trace
[identifiers count] > 0
com.apple.avplayeritemmetadataoutput.ivars
com.apple.avplayeritemmetadataoutput.accumulationqueue
<<<< AVPlayerItemMetadataOutput >>>> %s: metadata output flushed
-[AVPlayerItemMetadataOutput(AVPlayerItemMetadataOutput_Internal) _signalFlush]_block_invoke
<<<< AVPlayerItemMetadataOutput >>>> %s: Notifying delegate of a flush
-[AVPlayerItemMetadataOutput(AVPlayerItemMetadataOutput_Internal) _signalFlush]_block_invoke_3
<<<< AVPlayerItemMetadataOutput >>>> %s: Invoking metadata delegate %p with %@ dictionary from %@ item track
-[AVPlayerItemMetadataOutput(AVPlayerItemMetadataOutput_Internal) _pushTimedMetadataGroups:fromPlayerItemTrack:]_block_invoke_3
<%@: %p trackID = %d, mediaType = %@, editCount = %d>
/Library/Caches/com.apple.xbs/Sources/AVFoundation_AVFCore_Sim/AVFoundation-2036.2.2/Fig/AVCompositionTrack.m %s: [%p] called
-[AVMutableCompositionTrack setSegments:]
/Library/Caches/com.apple.xbs/Sources/AVFoundation_AVFCore_Sim/AVFoundation-2036.2.2/Fig/AVCompositionTrack.m %s: [%p] called mutableComposition: %p destTrackID: %d track: %p timeRange.start: %.3f timeRange.duration: %.3f startTime: %.3f
-[AVMutableCompositionTrack insertTimeRange:ofTrack:atTime:error:]
kFigBaseObjectError_ParamErr
Invalid asset track
/Library/Caches/com.apple.xbs/Sources/AVFoundation_AVFCore_Sim/AVFoundation-2036.2.2/Fig/AVCompositionTrack.m
Count of timeRanges array and count of tracks array do not match.
-[AVMutableCompositionTrack insertTimeRanges:ofTracks:atTime:error:]
/Library/Caches/com.apple.xbs/Sources/AVFoundation_AVFCore_Sim/AVFoundation-2036.2.2/Fig/AVCompositionTrack.m %s: [%p] called mutableComposition: %p destTrackID: %d timeRange.start: %.3f timeRange.duration: %.3f
-[AVMutableCompositionTrack insertEmptyTimeRange:]
-[AVMutableCompositionTrack removeTimeRange:]
/Library/Caches/com.apple.xbs/Sources/AVFoundation_AVFCore_Sim/AVFoundation-2036.2.2/Fig/AVCompositionTrack.m %s: [%p] called mutableComposition: %p destTrackID: %d timeRange.start: %.3f timeRange.duration: %.3f duration: %.3f
-[AVMutableCompositionTrack scaleTimeRange:toDuration:]
-[AVMutableCompositionTrack validateTrackSegments:error:]
originalFormatDescription != NULL
Media type of the new format description must match that of the existing format description
<<<< AVPubSub >>>> %s: Adding observer for %@ in %@
-[AVNotificationSubscription initWithObject:notificationName:callbackBlock:]
<<<< AVPubSub >>>> %s: Notification observer calling callback in %@
-[AVNotificationSubscription initWithObject:notificationName:callbackBlock:]_block_invoke
<<<< AVPubSub >>>> %s:  called for %@
-[AVNotificationSubscription cancel]
<<<< AVPubSub >>>> %s: Removing observer in %@
<%@: %p object=%@>
avpubsub_trace
<<<< AVPubSub >>>> %s: Calling subscriber block because %@ fired for %@
-[AVPropertyValuePublisher subscribeRequestingInitialValue:block:]_block_invoke
<<<< AVPubSub >>>> %s: Calling subscriber block with initial value for %@
-[AVPropertyValuePublisher subscribeRequestingInitialValue:block:]
<%@: %p key=%@, object=%@, notification=%@>
<<<< AVPubSub >>>> %s: Calling subscriber block for %@
-[AVMapPublisher subscribeRequestingInitialValue:block:]_block_invoke
<%@: %p upstream=%@>
<<<< AVPubSub >>>> %s: Calling subscriber block from output publisher for %@
-[AVSwitchToLatestPublisher subscribeRequestingInitialValue:block:]_block_invoke_2
<<<< AVPubSub >>>> %s: Not publishing stale value to subscriber block for %@
<<<< AVPubSub >>>> %s: Calling subscriber block with nil publisher for %@
-[AVSwitchToLatestPublisher subscribeRequestingInitialValue:block:]_block_invoke
v16@?0@"AVPublisher"8
<%@: %p upstream=%@
-[AVSinkSubscriber cancel]
<%@: %p publisher=%@>
MediaUIStyle
MediaUIFullWidth
MediaUIFormatTemplate
arab
-[AVTimeFormatter stringFromTimeInterval:]: unsupported style
%@+%@
-[AVTimeFormatter setStyle:]: unsupported style
AVCrackTime
AVTimeFormatter.m
time >= 0.0
<%@: %p timeRange [%.3f,+%.3f] 
is empty
from trackID %d of asset %@ sourceTimeRange [%.3f,+%.3f]
sourceURL
sourceTrackID
/Library/Caches/com.apple.xbs/Sources/AVFoundation_AVFCore_Sim/AVFoundation-2036.2.2/Fig/AVMovieTrack.m %s: FigCreate3x3MatrixArrayFromCGAffineTransform returned a NULL matrix.
-[AVMutableMovieTrack setPreferredTransform:]
/Library/Caches/com.apple.xbs/Sources/AVFoundation_AVFCore_Sim/AVFoundation-2036.2.2/Fig/AVMovieTrack.m %s: Layer value passed to setLayer: is too large.
-[AVMutableMovieTrack setLayer:]
/Library/Caches/com.apple.xbs/Sources/AVFoundation_AVFCore_Sim/AVFoundation-2036.2.2/Fig/AVMovieTrack.m %s: CFNumberCreate returned a NULL number.
/Library/Caches/com.apple.xbs/Sources/AVFoundation_AVFCore_Sim/AVFoundation-2036.2.2/Fig/AVMovieTrack.m %s: Alternate group ID value passed to setAlternateGroupID: is too large.
-[AVMutableMovieTrack setAlternateGroupID:]
trackGroups
<%@: %p, trackID = %d, mediaType = %@, sampleReferenceBaseURL = %@>
formatDescription != NULL
newFormatDescription != NULL
Source asset must have a value of YES for providesPreciseDurationAndTiming
Media type of sample buffer must match receiver's media type ("%@")
CMSampleBuffers containing image buffers are not supported; you must provide CMSampleBuffers containing encoded video
CMSampleBuffers containing caption groups are not supported; you must provide CMSampleBuffers containing encoded media data
data != nil
the tracks being associated must belong to the same movie
the tracks being dissociated must belong to the same movie
asset != nil
%@ status read/write queue
Cannot initialize an instance of %@ with an asset at non-local URL '%@'
formatReader
<%@: %p, asset = %@, outputs = %@>
cannot be called after reading has started
cannot add an output that has already been added to the receiver
cannot add an output after reading has started
cannot add an output that has already been added to another AVAssetReader
output != nil
finished
v24@?0@"AVAssetReader"8@"NSDictionary"16
cannot be called again after reading has already started
assetreaderoutput_trace
AVAssetReaderOutput.m
The receiver cannot already be attached to an AVAssetReader.
v32@?0@8Q16^B24
cannot copy next sample buffer before adding this output to an instance of AVAssetReader (using -addOutput:) and calling -startReading on that asset reader
<<<< AVAssetReaderOutput >>>> %s: FigAssetReaderExtractAndRetainNextSampleBuffer returned %d, extractionComplete=%d, sampleBuffer=%p, self=%p
-[AVAssetReaderOutput copyNextSampleBuffer]
timeRanges != nil
Each entry in timeRanges must be an instance of %@
Start time of each time range must be numeric - see CMTIME_IS_NUMERIC
Duration of each time range must be nonnegative & numeric or positive infinity - see CMTIME_IS_NUMERIC
Start time of each time range must be greater than or equal to the end time of the previous time range
cannot be called before reading has started
cannot be called until all samples have been read (i.e. %@ returns NULL)
cannot be called without setting %@ to YES
cannot be called after calling %@
track != nil
%@ does not currently support AVVideoCleanApertureKey or AVVideoPixelAspectRatioKey
%@ does not currently support AVVideoScalingModeKey
Output settings are not compatible with media type %@
AVAssetReaderOutput does not currently support compressed output
AVAssetReaderOutput does not support AVSampleRateConverterAudioQualityKey
<%@: %p, track = %@, outputSettings = %@>
audioTimePitchAlgorithm must be one of: %@
cannot copy sample buffers when attached to an adaptor
audioTracks != nil
[audioTracks count] >= 1
tracks must all have media type AVMediaTypeAudio
tracks must all be part of the same AVAsset
<%@: %p, audioTracks = %@, audioSettings = %@>
track must be one of the tracks used to create the receiver
videoTracks != nil
[videoTracks count] >= 1
tracks must all have media type AVMediaTypeVideo
%@ does not currently support AVVideoDecompressionPropertiesKey
<%@: %p, videoTracks = %@>
AVAssetReaderVideoCompositionOutput can't use a video composition with a renderScale other than 1.0
*** AVAssetReaderVideoCompositionOutput.videoComposition needs to be set
<%@: %p, track = %@>
<<<< AVAssetReaderOutput >>>> %s: %p received %@, extractionID=%d
figAssetReaderSampleBufferDidBecomeAvailable
<<<< AVAssetReaderOutput >>>> %s: %p received %@
figAssetReaderDecodeError
figAssetReaderFailed
assetwriter_trace
outputURL != nil
[outputURL isFileURL]
outputFileType != nil
outputContentType != nil
%@ helper read/write queue
<%@: %p, outputURL = %@, outputFileType = %@>
helper
CMTIME_COMPARE_INLINE(interval, >=, kCMTimeZero)
(CMTIME_IS_NUMERIC(hint) && CMTIME_COMPARE_INLINE(hint, >=, kCMTimeZero)) || CMTIME_IS_INVALID(hint)
movieTimeScale >= 0
0 < sequenceNumber
fileSize > 0
mediaDataSize > 0
<<<< AVAssetWriter >>>> %s: called (self=%p)
-[AVAssetWriter addInput:]
inputGroup != nil
-[AVAssetWriter addInputGroup:]
-[AVAssetWriter startWriting]
CMTIME_IS_NUMERIC(startTime)
-[AVAssetWriter startSessionAtSourceTime:]
CMTIME_IS_NUMERIC(endTime)
-[AVAssetWriter endSessionAtSourceTime:]
-[AVAssetWriter cancelWriting]
-[AVAssetWriter finishWriting]
-[AVAssetWriter finishWritingWithCompletionHandler:]
-[AVAssetWriter flush]
-[AVAssetWriter flushSegment]
-flushSegment can be called only if the delegate method to output segment data is implemented.
-flushSegment can be called only if the value of the preferredOutputSegmentInterval property is kCMTimeIndefinite.
[configurationState mediaFileType] != nil
[configurationState inputs] != nil
[configurationState inputGroups] != nil
[configurationState metadataItems] != nil
The output file type %@ does not support mutually exclusive relationships among tracks.
At least one AVAssetWriterInput in the given inputGroup is also present in an inputGroup already added.
At least one provisional AVAssetWriterInput in the given inputGroup is also present as a provisional input in an inputGroup already added.
figFragmentedMediaDataReportDict != nil
<<<< AVAssetWriter >>>> %s: invalid file extension in outputURL
-[AVAssetWriterWritingHelper initWithConfigurationState:error:]
com.apple.avfoundation.avassetwriter.writing.assetwriteraccessqueue
The outputURL and the delegate method to output segment data cannot be specified at same time. Only one of them must be specified.
The outputURL and the delegate method to produce fragmented data cannot be specified at same time. Only one of them must be specified.
The delegate method to output segment data and the delegate method to produce fragmented data cannot be specified at same time. Only one of them must be specified.
Neither the outputURL nor the delegate method to output segment data is specified. One of them must be specified.
The value of the outputFileTypeProfile property must be file type profile AppleHLS or CMAFCompliant to output segment data.
The value of the outputFileType must be AVFileTypeMPEG4 for file type profile %@.
The value of the preferredOutputSegmentInterval property must be kCMTimeIndefinite or a positive numeric time to output segment data.
The value of the initialSegmentStartTime property must be a numeric time to output segment data.
AVAssetWriter supports file type profile %@ if the delegate method to output segment data is implemented. Please use -initWithContentType: initializer and implement -assetWriter:didOutputSegmentData:segmentType:segmentReport: or -assetWriter:didOutputSegmentData:segmentType: delegate method.
The preferredOutputSegmentInterval property is used if the delegate method to output segment data is implemented. Please use -initWithContentType: initializer and implemen -assetWriter:didOutputSegmentData:segmentType:segmentReport: or -assetWriter:didOutputSegmentData:segmentType: delegate method.
Media type '%@' is not allowed for file type profile %@.
More than one track is not allowed for file type profile %@.
Closed caption track is not allowed for file type profile %@.
More than one video track is not allowed for file type profile %@.
More than one audio track is not allowed for file type profile %@.
More than one closed caption track is not allowed for file type profile %@.
Closed caption track must accompany video track for file type profile %@.
AVAssetWriter does not support encoding of video track and passthrough of audio track at same time for file type profile %@. Please match both AVAssetWriterInput's output settings.
AVAssetWriter does not support encoding of audio track and passthrough of video track at same time for file type profile %@. Please match both AVAssetWriterInput's output settings.
If the value of the preferredOutputSegmentInterval property is a positive numeric time, AVAssetWriter does not support passthrough of video track and audio track at same time for file type profile %@. Please specify a non-nil output settings dictionary for both AVAssetWriterInput. Otherwise, please add one of them.
If the value of the preferredOutputSegmentInterval property is kCMTimeIndefinite, AVAssetWriter only supports pssthrough for file type profile %@. Please specify nil for all AVAssetWriterInput's output settings.
Cannot end a session without first starting a session
<<<< AVAssetWriter >>>> %s: -[NSFileManager removeItemAtURL:] failed: %s
-[AVAssetWriterWritingHelper cancelWriting]
WARNING: -finishWriting should not be called on the main thread.
<<<< AVAssetWriter >>>> %s: Calling FigAssetWriterFinish
-[AVAssetWriterWritingHelper finishWriting]_block_invoke
<<<< AVAssetWriter >>>> %s: FigAssetWriterFinish failed: %d
q16@?0^@8
com.apple.avfoundation.assetwriter.finishwriting
<<<< AVAssetWriter >>>> %s: calling completion handler
-[AVAssetWriterWritingHelper finishWritingWithCompletionHandler:]_block_invoke
Finish writing file at %@, initiated by %@
Prepare for finishing input %@
assetWriter != nil
figAssetWriter != NULL
Call finish-writing delegate
<<<< AVAssetWriter >>>> %s: Invalidating FigAssetWriter, to ensure that audio files are finalized properly
+[AVAssetWriterWritingHelper finalStepWorkaroundOperationWithFigAssetWriter:]_block_invoke
Invalidate FigAssetWriter, to ensure that audio files are finalized properly
<<<< AVAssetWriter >>>> %s: "Transition to terminal status" operation invoked
-[AVAssetWriterFinishWritingHelper initWithConfigurationState:finishWritingOperations:]_block_invoke
Transition to terminal status
-[AVAssetWriterFinishWritingHelper _finishWritingOperationsDidFinish]
Not available.  Use %@ instead.
-[AVFigAssetWriterFinishWritingAsyncOperation start]
<<<< AVAssetWriter >>>> %s: calling FigAssetWriterFinishAsync (self=%p)
<<<< AVAssetWriter >>>> %s: FigAssetWriterFinishAsync showed cancellation (self=%p)
<<<< AVAssetWriter >>>> %s: FigAssetWriterFinishAsync failed: %d
<<<< AVAssetWriter >>>> %s: called, self=%p
-[AVFigAssetWriterFinishWritingAsyncOperation cancel]
-[AVFigAssetWriterFinishWritingAsyncOperation didEnterTerminalState]
<<<< AVAssetWriter >>>> %s: Unexpected terminal status %d
<<<< AVAssetWriter >>>> %s: called, success=%d, error=%@ (self=%p)
-[AVFigAssetWriterFinishWritingAsyncOperation didReceiveFigAssetWriterNotificationWithSuccess:error:]
terminalError != nil
(terminalStatus == AVAssetWriterStatusCompleted) || (terminalStatus == AVAssetWriterStatusCancelled)
configurationState != nil
Cannot call method when status is %d
media type %@ is not allowed for this asset writer
In order to perform passthrough to file type %@, please provide a format hint in the AVAssetWriterInput initializer
AVAssetWriter does not support passthrough for media type %@ to file type %@.
  Please specify a non-nil output settings dictionary.
AVAssetWriter does not support passthrough of media with type '%@' and subtype '%@' to file type %@
AVAssetWriter currently does not support writing uncompressed video in a specific format.
Output settings must match supplied media type.  Media type %@ is not compatible with output settings %@.
output file type %@ does not support track associations
inputs != nil
[inputs count] > 0
defaultInput == nil || [inputs containsObject:defaultInput]
metadata
trackReferences
options
! [[NSSet setWithArray:inputs] intersectsSet:[NSSet setWithArray:provisionalInputs]]
[inputs count] > 0 || [provisionalInputs count] > 0
displaysNonForcedSubtitles
<<<< AVAssetWriter >>>> %s: called with payload %@
AVAssetWriterFigAssetWriterHandleCompletedNotification
AVAssetWriterFigAssetWriterHandleFailedNotification
AVAssetWriterInputGroupOptionsChangedContext
UnsafeUnretainedPointerData
AVCoordinatedPlaybackSuspensionReasonAudioSessionInterrupted
AVCoordinatedPlaybackSuspensionReasonStallRecovery
AVCoordinatedPlaybackSuspensionReasonPlayingInterstitial
AVCoordinatedPlaybackSuspensionReasonCoordinatedPlaybackNotPossible
AVCoordinatedPlaybackSuspensionReasonUserActionRequired
AVCoordinatedPlaybackSuspensionReasonUserIsChangingCurrentTime
AVPlaybackCoordinatorOtherParticipantsDidChangeNotification
AVPlaybackCoordinatorSuspensionReasonsDidChangeNotification
Identifier
OriginatorUUID
Time
NetworkTime
Rate
PrerollRate
SeekPrecision
LamportTimestamp
IsAuthoritative
UUID
ProtocolVersion
SuspensionReasons
CoordinatingStart
ReadyToSetNonZeroRate
CurrentIdentifier
NextIdentifier
ExpectedEndTime
Cannot initialize AVCoordinatedPlaybackSuspension with nil reason.
<<<< AVPlaybackCoordinator >>>> %s: Could not create FigTimelineCoordinatorSuspensionRef
-[AVCoordinatedPlaybackSuspension initWithCoordinator:reason:]
avplaybackcoordinator_trace
-[AVPlaybackCoordinator init] unavailable
AVPlaybackCoordinatorDidIssueCommandToPlaybackObjectNotification
AVPlaybackCoordinatorItemIdentifierForCoordinatedPlaybackDidChangeNotification
AVPlaybackCoordinatorDidIssueCommandToPlaybackObjectKeyParticipantUUID
AVPlaybackCoordinatorDidIssueCommandToPlaybackObjectKeyCommand
AVPlaybackCoordinatorDidIssueCommandToPlaybackObjectKeyRate
AVPlaybackCoordinatorDidIssueCommandToPlaybackObjectKeyTime
AVPlaybackCoordinatorPlaybackObjectCommandSetRate
AVPlaybackCoordinatorPlaybackObjectCommandSetTime
AVPlaybackCoordinatorPlaybackObjectCommandSetRateAndTime
com.apple.avplaybackcoordinator.ivars
com.apple.avplaybackcoordinator.figplaybackcoordinator.config
<<<< AVPlaybackCoordinator >>>> %s: called (self = %@, for SuspensionReasonsChanged notification, with payload = %@)
-[AVPlayerPlaybackCoordinator _addFigPlaybackCoordinatorListeners:]_block_invoke
<<<< AVPlaybackCoordinator >>>> %s: called (self = %@, for ParticipantsChanged notification, with payload = %@)
<<<< AVPlaybackCoordinator >>>> %s: called (self = %@, for DidIssueCommandToFigPlayer notification, with payload = %@)
-[AVPlayerPlaybackCoordinator _addFigPlaybackCoordinatorListeners:]_block_invoke_2
figPlaybackCoordinator != NULL
FigPlaybackCoordinator associated with an AVPlayer should not change
<<<< AVPlaybackCoordinator >>>> %s: Posting AVPlaybackCoordinatorItemIdentifierForCoordinatedPlaybackDidChangeNotification in response to delegate change
-[AVPlayerPlaybackCoordinator setDelegate:]
<<<< AVPlaybackCoordinator >>>> %s: %@ Setting IsExpanseMediaSession %s on AVAudioSession error %@
-[AVPlayerPlaybackCoordinator _setIsInExpanseMediaPlaybackOnAVAudioSession]
true
false
B32@?0@"AVCoordinatedPlaybackParticipant"8Q16^B24
<<<< AVPlaybackCoordinator >>>> %s: FigPlaybackCoordinator gave a participantID which is not present in otherParticipants
-[AVPlayerPlaybackCoordinator participantForIdentifier:]_block_invoke
B32@?0@"NSDictionary"8Q16^B24
<<<< AVPlaybackCoordinator >>>> %s: <%p> beginning suspension with reason %@
-[AVPlayerPlaybackCoordinator beginSuspensionForReason:]
<<<< AVPlaybackCoordinator >>>> %s: <%p> ending figSuspension %p
-[AVPlayerPlaybackCoordinator _endSuspension:]
<<<< AVPlaybackCoordinator >>>> %s: <%p> ending figSuspension %p proposing new time %f
-[AVPlayerPlaybackCoordinator _endSuspension:proposingNewTime:]
<<<< AVPlaybackCoordinator >>>> %s: <%p> setting waiting policies %@ on playback coordinator
-[AVPlayerPlaybackCoordinator _setWaitingPolicies:onFigPlaybackCoordinator:]
<<<< AVPlaybackCoordinator >>>> %s: <%p> setting pauseSnapsToMediaTimeOfOrginator:%@ on playback coordinator
-[AVPlayerPlaybackCoordinator setPauseSnapsToMediaTimeOfOriginator:]_block_invoke
<<<< AVPlaybackCoordinator >>>> %s: FigPlaybackCoordinator trying to broadcast transport state but coordination medium delegate is nil
AVPlayerPlaybackCoordinatorBroadcastTransportControlStateCallback
<<<< AVPlaybackCoordinator >>>> %s: FigPlaybackCoordinator trying to broadcast participant state but coordination medium delegate is nil
AVPlayerPlaybackCoordinatorBroadcastParticipantStateCallback
<<<< AVPlaybackCoordinator >>>> %s: FigPlaybackCoordinator trying to fetch timeline state but coordination medium delegate is nil
AVPlayerPlaybackCoordinatorAsynchronouslyReloadTransportControlStateCallback
AVOutputDeviceAuthorizationRequestRetryReasonIncorrectAuthorizationToken
AVOutputDeviceAuthorizationTokenTypePassword
AVOutputDeviceAuthorizationTokenTypePIN
outputdeviceauthorizationsession_trace
<<<< AVOutputDeviceAuthorizationSession >>>> %s: called (self=%p)
-[AVOutputDeviceAuthorizationSession initWithOutputDeviceAuthorizationSessionImpl:]
com.apple.avfoundation.outputdeviceauthorizationsession.ivars
<<<< AVOutputDeviceAuthorizationSession >>>> %s: called (self=%p, delegate=%@)
-[AVOutputDeviceAuthorizationSession setDelegate:]
<<<< AVOutputDeviceAuthorizationSession >>>> %s: Calling -outputDeviceAuthorizationSession:didProvideAuthorizationRequest: on delegate (request/ID=%{public}@, request/outputDevice=%{private}@, request/authorizationTokenType=%{public}@)
-[AVOutputDeviceAuthorizationSession outputDeviceAuthorizationSessionImpl:didProvideAuthorizationRequest:]
<<<< AVOutputDeviceAuthorizationSession >>>> %s: Not messaging delegate because there is no delegate or it does not respond to -outputDeviceAuthorizationSession:didProvideAuthorizationRequest:
<<<< AVOutputDeviceAuthorizationSession >>>> %s: Calling -outputDeviceAuthorizationSession:shouldRetryAuthorizationRequest:reason: on delegate (request/ID=%{public}@, reason=%{public}@)
-[AVOutputDeviceAuthorizationSession outputDeviceAuthorizationSessionImpl:shouldRetryAuthorizationRequest:reason:]
<<<< AVOutputDeviceAuthorizationSession >>>> %s: Not messaging delegate because there is no delegate or it does not respond to -outputDeviceAuthorizationSession:shouldRetryAuthorizationRequest:reason:
<<<< AVOutputDeviceAuthorizationSession >>>> %s: self=%p, impl=%@, replacementImpl=%@
-[AVOutputDeviceAuthorizationSession outputDeviceAuthorizationSessionImplDidExpireWithReplacementImpl:]
com.apple.avfoundation.output-device-auth-session.ivars
<%@: %p, ID=%@, outputDevice=%@, tokenType=%@>
<<<< AVOutputDeviceAuthorizationSession >>>> %s: called (authorizationToken=%{private}@)
-[AVOutputDeviceAuthorizationRequest respondWithAuthorizationToken:completionHandler:]
<<<< AVOutputDeviceAuthorizationSession >>>> %s: Result: %d (error: %{public}@)
-[AVOutputDeviceAuthorizationRequest respondWithAuthorizationToken:completionHandler:]_block_invoke
v24@?0q8@"NSError"16
<<<< AVOutputDeviceAuthorizationSession >>>> %s: called
-[AVOutputDeviceAuthorizationRequest cancel]
AVAssetWriterInputMediaDataLocationInterleavedWithMainMediaData
AVAssetWriterInputMediaDataLocationBeforeMainMediaDataNotInterleaved
AVAssetWriterInputMediaDataLocationSparselyInterleavedWithMainMediaData
assetwriterinput_trace
mediaType != nil
The media type of sourceFormatHint must match mediaType
Width and height of video format hint must be positive
Output settings must match supplied media type
AVAssetWriterInput does not currently support AVVideoScalingModeFit
AVAssetWriterInput does not support AVSampleRateConverterAudioQualityKey
AVAssetWriterInput does not support AVVideoDecompressionPropertiesKey
<%@: %p> helper queue
<%@: %p> "number of append failures" read/write queue
currentPassDescription
<%@: %p, mediaType = %@, outputSettings = %@>
<<<< AVAssetWriterInput >>>> %s: called, old=%@ new=%@
-[AVAssetWriterInput _setHelper:]_block_invoke
mediaTimeScale >= 0
naturalSize.width >= 0.0 && naturalSize.height >= 0.0
Cannot set marksOutputTrackAsEnabled of the receiver in an input group
media chunk duration must be numeric.  See CMTIME_IS_NUMERIC
media chunk duration must be a positive value
AVAssetWriterInput.m
preferredMediaChunkAlignment >= 0
preferredMediaChunkSize >= 0
<<<< AVAssetWriterInput >>>> %s: called, self=%p
-[AVAssetWriterInput _prepareToFinishWritingReturningError:]
canPerformMultiplePasses
readyForMoreMediaData
pixelBufferPool
<<<< AVAssetWriterInput >>>> %s: called (self=%p, queue=%p, block=%p)
-[AVAssetWriterInput respondToEachPassDescriptionOnQueue:usingBlock:]
cannot be called more than once.
<<<< AVAssetWriterInput >>>> %s: Informing pass description responder to respond to initial pass description
<<<< AVAssetWriterInput >>>> %s: Not responding to initial pass description, per helper %@
<<<< AVAssetWriterInput >>>> %s: called (self=%p)
-[AVAssetWriterInput requestMediaDataWhenReadyOnQueue:usingBlock:]
-[AVAssetWriterInput appendSampleBuffer:]
Cannot append sample buffer: %@
<<<< AVAssetWriterInput >>>> %s: Client will see -appendSampleBuffer: fail with error %@
-[AVAssetWriterInput markAsFinished]
-[AVAssetWriterInput markCurrentPassAsFinished]
trackAssociationType != nil
[configurationState trackReferences] != nil
Cannot set a non-default media time scale on an asset writer input with media type AVMediaTypeAudio
languageCode %@ does not conform to the ISO 639-2/T language code
extendedLanguageTag %@ does not conform to the IETF BCP 47 (RFC 4646) language identifier
performsMultiPassEncodingIfSupported
Associations of type AVTrackAssociationTypeForcedSubtitlesOnly are supported only between tracks with media type AVMediaTypeSubtitle or AVMediaTypeText.
Associations of type AVTrackAssociationTypeSelectionFollower are supported only between AVMediaTypeAudio and AVMediaTypeSubtitle tracks.
Associations of type AVTrackAssociationTypeChapterList are supported only between (AVMediaTypeVideo/AVMediaTypeAudio) and (AVMediaTypeVideo/AVMediaTypeMetadata/AVMediaTypeText) tracks.
Associations of type AVTrackAssociationTypeMetadataReferent are supported only between tracks of mediaType AVMediaTypeMetadata and other tracks.
trackAssociationType %@ must be 4 characters long.
cannot be called before attaching to an instance of AVAssetWriter and calling -startWriting on this attached asset writer
assetWriterTrack != nil
AVAssetWriterInputWritingHelperMediaDataRequester
AVAssetWriterInputWritingHelperReadyForMoreMediaDataObserver
assetWriterTrack
aboveHighWaterLevel
<<<< AVAssetWriterInput >>>> %s: called (keyPath=%@, object=%@, change=%@, contect=%p)
-[AVAssetWriterInputWritingHelper observeValueForKeyPath:ofObject:change:context:]
<<<< AVAssetWriterInput >>>> %s: called (self = %p)
-[AVAssetWriterInputWritingHelper appendSampleBuffer:error:]
readyForMoreMediaData is NO.
-[AVAssetWriterInputWritingHelper appendPixelBuffer:withPresentationTime:]
A pixel buffer cannot be appended when readyForMoreMediaData is NO.
<<<< AVAssetWriterInput >>>> %s: Client will see -appendPixelBuffer: fail with error %@
<<<< AVAssetWriterInput >>>> %s: Transitioning to terminal status %d (self = %p)
-[AVAssetWriterInputWritingHelper transitionToAndReturnTerminalHelperWithTerminalStatus:]
<<<< AVAssetWriterInput >>>> %s: Dispatching request block one extra time, to make sure client sees the failure
A pixel buffer pool cannot be created with the receiver's sourcePixelBufferAttributes. The pixel buffer attributes must specify a width, height, and either a pixel format or a pixel format description.
writingHelper != nil
<<<< AVAssetWriterInput >>>> %s: end pass operation succeeded, nextPassDescription=%@
-[AVAssetWriterInputInterPassAnalysisHelper startPassAnalysis]_block_invoke
v28@?0B8@"AVAssetWriterInputPassDescription"12@"NSError"20
cannot be called between the invocation of %@ and the beginning of the next pass
not allowed between the invocation of %@ and the beginning of the next pass
Cannot call %@ more than once for the same pass
cannot be called when no media data is being requested.  Check the value of %@.
not allowed when no media data is being requested.  Check the value of %@.
cannot be called after the final pass
(terminalStatus == AVAssetWriterStatusCompleted) || (terminalStatus == AVAssetWriterStatusCancelled) || (terminalStatus == AVAssetWriterStatusFailed)
cannot be called after canceling or finishing writing
-[AVAssetWriterInputTerminalHelper appendSampleBuffer:error:]
<<<< AVAssetWriterInput >>>> %s: Client will see -appendSampleBuffer: return NO due to input already having transitioned to terminal status
-[AVAssetWriterInputTerminalHelper appendPixelBuffer:withPresentationTime:]
<<<< AVAssetWriterInput >>>> %s: Client will see -appendPixelBuffer: return NO due to input already having transitioned to terminal status
<%@: %p, status=%d>
[[input mediaType] isEqualToString:AVMediaTypeVideo] || [[input mediaType] isEqualToString:AVMediaTypeAuxiliaryPicture]
Cannot create a new pixel buffer adaptor with an asset writer input that is already attached to a pixel buffer adaptor
Cannot create a new pixel buffer adaptor with an asset writer input that has already started writing
<%@: %p, assetWriterInput = %@, sourcePixelBufferAttributes = %@>
assetWriterInput
pixelBuffer != NULL
CMTIME_IS_NUMERIC(presentationTime)
mediaFileType != nil
<%@: %p> water level queue
com.apple.avfoundation.assetwriterinput
<<<< AVAssetWriterInput >>>> %s: FigAssetWriterIsTrackQueueAboveHighWaterLevel returned %d (self=%p)
-[AVFigAssetWriterTrack _refreshAboveHighWaterLevel]_block_invoke
Input buffer must be in an uncompressed format when outputSettings is not nil
First input buffer must have an appropriate kCMSampleBufferAttachmentKey_TrimDurationAtStart since the codec has encoder delay
Must start a session (using -[AVAssetWriter startSessionAtSourceTime:) first
Must start a session (using -[AVAssetWriter startSessionAtSourceTime:) before appending pixel buffers
-[AVFigAssetWriterTrack endPassWithCompletionHandler:]
com.apple.avfoundation.assetwriterinput.endpass
<<<< AVAssetWriterInput >>>> %s: setting kFigFormatWriterTrackProperty_FormatDescriptionArray to %@
-[AVFigAssetWriterTrack setFormatDescriptions:]
com.apple.avfoundation.mediadatarequester.ivars
<<<< AVAssetWriterInput >>>> %s: Invoking request block normally
-[AVAssetWriterInputMediaDataRequester requestMediaDataIfNecessary]
<<<< AVAssetWriterInput >>>> %s: Client exited request block
<<<< AVAssetWriterInput >>>> %s: Dispatching request block because previous request block invocation returned before filling the buffer queue or marking input finished (delegate = %@)
<<<< AVAssetWriterInput >>>> %s: We thought we might want to invoke the request block, but we are not actually going to
AVAssetWriterInputPassDescriptionResponder serialization queue
-[AVAssetWriterInputPassDescriptionResponder respondToNewPassDescription:]
-[AVAssetWriterInputPassDescriptionResponder respondToNewPassDescription:]_block_invoke
<<<< AVAssetWriterInput >>>> %s: will invoke per-pass block (self=%p)
-[AVAssetWriterInputPassDescriptionResponder respondToNewPassDescription:]_block_invoke_2
<<<< AVAssetWriterInput >>>> %s: did invoke per-pass block (self=%p)
trackID != kCMPersistentTrackID_Invalid
-[AVAssetWriterInputFigAssetWriterEndPassOperation dealloc]
-[AVAssetWriterInputFigAssetWriterEndPassOperation start]
<<<< AVAssetWriterInput >>>> %s: registering for kFigAssetWriterNotification_PassFinished on FigAssetWriter %p
<<<< AVAssetWriterInput >>>> %s: Calling FigAssetWriterEndPass
<<<< AVAssetWriterInput >>>> %s: called (self=%p, trackID=%d)
-[AVAssetWriterInputFigAssetWriterEndPassOperation _notifyWhetherMorePassesAreNeeded:timeRanges:forTrackWithID:]
<<<< AVAssetWriterInput >>>> %s: unregistering from kFigAssetWriterNotification_PassFinished
<%@: %p, sourceTimeRanges=%@>
AVAssetWriterInputCurrentPassDescriptionChangeContext
AVAssetWriterInputWritingHelperNudgeMediaDataRequesterObservationContext
<<<< AVAssetWriterInput >>>> %s: Received kFigAssetWriterNotification_PassFinished
AVAssetWriterInputFigAssetWriterEndPassOperationPassFinished
VideoCompositor_DeviceSpecific
VideoCompositor_Basic
VideoCompositor_OpenGL
StartTime
EndTime
BackgroundColorARGB
BackgroundColorICCProfile
LayerStack
ContainsTweening
InstructionIdentifier
RequiredSampleDataTrackIDArray
SourceVideoTrackID
ConstantOpacity
TweenedOpacity
ConstantAffineMatrix
TweenedAffineMatrix
EnablePostProcessing
RequiredVideoTrackIDArray
PassthroughSourceVideoTrackID
AVVideoCompositionInstruction
TweenedCropRectangle
<<<< AVVideoComposition >>>> %s: dictionaryRepresentation only accepts RGB color space for backgroundColor
-[AVVideoCompositionInstruction dictionaryRepresentation]
AVVideoCompositionInstruction %@
AVVideoCompositionLayerTrackID
AVVideoCompositionLayerTransformRamps
AVVideoCompositionLayerOpacityRamps
AVVideoCompositionLayerCropRectangleRamps
The timeRange of a transform ramp must not overlap the timeRange of an existing transform ramp.
StartTransform
EndTransform
The time of a transform setting must be numeric.
The timeRange of a transform ramp must have a numeric start time and a numeric duration.
The timeRange of an opacity ramp must not overlap the timeRange of an existing opacity ramp.
The time of an opacity setting must be numeric.
The timeRange of an opacity ramp must have a numeric start time and a numeric duration.
The timeRange of a crop rectangle ramp must not overlap the timeRange of an existing crop rectangle ramp.
StartCropRectangle
EndCropRectangle
The time of a crop rectangle setting must be numeric.
The timeRange of a crop rectangle ramp must have a numeric start time and a numeric duration.
ConstantCropRectangle
avvideocomposition_trace
<<<< AVVideoComposition >>>> %s: Using video compositor: %@
-[AVVideoComposition init]
<<<< AVVideoComposition >>>> %s: Unknown video compositor name for FigRemaker: %@
-[AVVideoComposition _copyFigVideoCompositor:andSession:recyclingSession:forFigRemaker:error:]
video composition must have a positive renderSize
video composition must have a positive renderScale
video composition must have a positive frameDuration
video composition must have a positive sourceTrackIDForFrameTiming
customVideoCompositorClass
renderSize
renderScale
frameDuration
sourceTrackIDForFrameTiming
instructions
handler
AVAssetExportPresetLowQuality
AVAssetExportPresetMediumQuality
AVAssetExportPresetHighestQuality
AVAssetExportPreset640x480
AVAssetExportPreset1280x720
AVAssetExportPreset960x540
AVAssetExportPreset1920x1080
AVAssetExportPreset3840x2160
AVAssetExportPresetHEVCHighestQuality
AVAssetExportPresetHEVCHighestQualityWithAlpha
AVAssetExportPresetHEVC1920x1080
AVAssetExportPresetHEVC1920x1080WithAlpha
AVAssetExportPresetHEVC3840x2160
AVAssetExportPresetHEVC3840x2160WithAlpha
AVAssetExportPresetAppleM4A
AVAssetExportPresetVoiceMemoALAC
AVAssetExportPresetPassthrough
AVAssetExportPresetPhotoStream
AVAssetExportPresetPhotoStreamHD
AVAssetExportPresetICPL
AVAssetExportPresetICPLHD
AVAssetExportPresetICPLHEVC1280x1280WithHDR
AVAssetExportPresetICPLHEVC1920x1080
AVAssetExportPresetICPLHEVC1920x1920WithHDR
AVAssetExportPresetICPLAux
AVAssetExportPresetICPLAuxHD
AVAssetExportPresetAuxSmall
AVAssetExportPresetMMS
AVAssetExportPreset3GPRelease6MMS
AVAssetExportPresetAudioOnlyMMS
AVAssetExportPresetYouTube
AVAssetExportPresetMail
AVAssetExportPresetHEVCAnimojiWithAlpha
AVAssetExportPresetAVCAnimoji
AVAssetExportPresetYouTubeHD
AVAssetExportPresetMessage
AVAssetExportPresetMessageHEVCWithHDR
AVAssetExportPresetMessageAudio
AVAssetExportPresetMessageAux
handler cannot be nil
completionHandler is nil
avexport_trace
<%@: %p, asset = %@, presetName = %@, outputFileType = %@
Cannot alter output file type attribute on an AVAssetExportSession after an export has started.
Cannot set outputFileType to nil
Invalid output file type
Cannot alter output URL attribute on an AVAssetExportSession after an export has started.
Cannot set outputURL to nil
Cannot call exportAsynchronouslyWithCompletionHandler: more than once.
outputURL cannot be nil
outputFileType cannot be nil
Cannot alter time range attribute on an AVAssetExportSession after an export has started.
Cannot alter min frame duration attribute on an AVAssetExportSession after an export has started.
Cannot set non-numeric min video frame duration.
Min video frame duration must be greater than zero.
Cannot alter max frame duration attribute on an AVAssetExportSession after an export has started.
Invalid frame rate conversion algorithm.
Cannot alter preserve sync frame attribute on an AVAssetExportSession after an export has started.
timeRange
Cannot alter metadata attribute on an AVAssetExportSession after an export has started.
Cannot alter metadataItemFilter attribute on an AVAssetExportSession after an export has started.
Cannot alter output file length limit attribute on an AVAssetExportSession after an export has started.
<<<< AVAssetExportSession >>>> %s: fileLengthLimit: %lld
-[AVAssetExportSession setFileLengthLimit:]
<<<< AVAssetExportSession >>>> %s: maximize power efficiency %s
-[AVAssetExportSession setMaximizePowerEfficiency:]
Cannot alter audio time pitch algorithm attribute on an AVAssetExportSession after an export has started.
Cannot alter audio mix attribute on an AVAssetExportSession after an export has started.
Cannot alter video composition attribute on an AVAssetExportSession after an export has started.
video composition must have composition instructions
renderScale must be 1.0 when used with AVAssetExportSession.
Cannot alter optimize for network use attribute on an AVAssetExportSession after an export has started.
Cannot alter canPerformMultiplePassesOverSourceMediaData attribute on an AVAssetExportSession after an export has started.
Cannot alter directoryForTemporaryFiles attribute on an AVAssetExportSession after an export has started.
mediaDataConsumer != nil
requestQueue != NULL
requestBlock != nil
[mediaDataConsumer respondsToSelector:@selector(isReadyForMoreMediaData)]
<<<< AVOutputDeviceCommunicationChannelManager (APSync) >>>> %s: called (self=%p)
-[AVAPSyncOutputDeviceCommunicationChannelManager initWithDeviceID:syncController:]
com.apple.avfoundation.device-comm-channel-manager
<<<< AVOutputDeviceCommunicationChannelManager (APSync) >>>> %s: initialized (self=%p)
-[AVAPSyncOutputDeviceCommunicationChannelManager dealloc]
<<<< AVOutputDeviceCommunicationChannelManager (APSync) >>>> %s: called (self=%p, options=%@, completionHandler=%p)
-[AVAPSyncOutputDeviceCommunicationChannelManager openCommunicationChannelWithOptions:completionHandler:]
<<<< AVOutputDeviceCommunicationChannelManager (APSync) >>>> %s: Calling APSyncControllerOpenSpeakerCommChannel (controlType: %d, clientTypeUUID: %@)
<<<< AVOutputDeviceCommunicationChannelManager (APSync) >>>> %s: APSyncControllerOpenSpeakerCommChannel finished for comm channel ID %{public}@ (err=%d)
-[AVAPSyncOutputDeviceCommunicationChannelManager openCommunicationChannelWithOptions:completionHandler:]_block_invoke
v36@?0^{OpaqueAPSyncController=}8i16^{__CFString=}20^{__CFDictionary=}28
<<<< AVOutputDeviceCommunicationChannelManager (APSync) >>>> %s: called (commChannelUUID=%{public}@ dataLength=%d)
-[AVAPSyncOutputDeviceCommunicationChannelManager _didReceiveData:fromDeviceWithID:fromChannelWithUUID:]
<<<< AVOutputDeviceCommunicationChannelManager (APSync) >>>> %s: Removing comm channel UUID %@ for device with ID %@
-[AVAPSyncOutputDeviceCommunicationChannelManager _didCloseCommChannelWithUUID:forDeviceWithID:]
<<<< AVOutputDeviceCommunicationChannelManager (APSync) >>>> %s: No comm channel found for ID %@ for device %@, synthesizing one for the delegate.
-[AVAPSyncOutputDeviceCommunicationChannelManager _didCloseCommChannelWithUUID:forDeviceWithID:]_block_invoke
<<<< AVOutputDeviceCommunicationChannelManager (APSync) >>>> %s: called (commChannelUUID=%{public}@)
<<<< AVOutputDeviceCommunicationChannelManager (APSync) >>>> %s: Sending %d bytes through comm channel ID %{public}@ via APSyncControllerSendSpeakerData
-[AVAPSyncOutputDeviceCommunicationChannelImpl sendData:completionHandler:]
<<<< AVOutputDeviceCommunicationChannelManager (APSync) >>>> %s: called (syncController=%p, commChannelUUID=%@, cancellationResponse=%@, refCon=%p, err=%d)
AVAPSyncOutputDeviceCommunicationChannelManagerOpenCompletion
AVAPSyncOutputDeviceCommunicationChannelManagerDidReceiveData
AVAPSyncOutputDeviceCommunicationChannelManagerDidCloseCommChannel
<<<< AVOutputDeviceCommunicationChannelManager (APSync) >>>> %s: APSyncControllerSendSpeakerData finished for comm channel ID %{public}@ (err=%d)
AVAPSyncOutputDeviceCommunicationChannelSendDataCompletion
AVSynchronizedLayerQueue
common/title
common/creator
common/subject
common/description
common/publisher
common/contributor
common/creationDate
common/lastModifiedDate
common/type
common/format
common/identifier
common/source
common/language
common/relation
common/location
common/copyrights
common/albumName
common/author
common/artist
common/artwork
common/make
common/model
common/software
common/accessibilityDescription
udta/%A9alb
udta/%A9arg
udta/%A9ART
udta/%A9aut
udta/%A9chp
udta/%A9cmt
udta/%A9com
udta/%A9cpy
udta/%A9day
udta/%A9des
udta/%A9dir
udta/%A9dis
udta/%A9enc
udta/%A9nam
udta/%A9gen
udta/%A9hst
udta/%A9inf
udta/%A9key
udta/%A9mak
udta/%A9mod
udta/%A9ope
udta/%A9fmt
udta/%A9src
udta/%A9prf
udta/%A9prd
udta/%A9pub
udta/%A9PRD
udta/%A9swr
udta/%A9req
udta/%A9trk
udta/%A9wrn
udta/%A9wrt
udta/%A9url
udta/%A9xyz
udta/tnam
udta/%A9phg
udta/name
udta/tagc
udta/%A9ade
uiso/cprt
uiso/date
uiso/tagc
uiso/ades
uiso/auth
uiso/perf
uiso/gnre
uiso/yrrc
uiso/loci
uiso/titl
uiso/dscp
uiso/coll
uiso/urat
uiso/thmb
uiso/albm
uiso/kywd
uiso/clsf
uiso/rtng
mdta/com.apple.quicktime.author
mdta/com.apple.quicktime.comment
mdta/com.apple.quicktime.copyright
mdta/com.apple.quicktime.creationdate
mdta/com.apple.quicktime.director
mdta/com.apple.quicktime.displayname
mdta/com.apple.quicktime.information
mdta/com.apple.quicktime.keywords
mdta/com.apple.quicktime.producer
mdta/com.apple.quicktime.publisher
mdta/com.apple.quicktime.album
mdta/com.apple.quicktime.artist
mdta/com.apple.quicktime.artwork
mdta/com.apple.quicktime.description
mdta/com.apple.quicktime.software
mdta/com.apple.quicktime.year
mdta/com.apple.quicktime.genre
mdta/info.ixml.xml
mdta/com.apple.quicktime.location.ISO6709
mdta/com.apple.quicktime.make
mdta/com.apple.quicktime.model
mdta/com.apple.quicktime.arranger
mdta/com.apple.quicktime.encodedby
mdta/com.apple.quicktime.originalartist
mdta/com.apple.quicktime.performer
mdta/com.apple.quicktime.composer
mdta/com.apple.quicktime.credits
mdta/com.apple.quicktime.phonogramrights
mdta/com.apple.quicktime.camera.identifier
mdta/com.apple.quicktime.camera.framereadouttimeinmicroseconds
mdta/com.apple.quicktime.title
mdta/com.apple.quicktime.collection.user
mdta/com.apple.quicktime.rating.user
mdta/com.apple.quicktime.location.name
mdta/com.apple.quicktime.location.body
mdta/com.apple.quicktime.location.note
mdta/com.apple.quicktime.location.role
mdta/com.apple.quicktime.location.date
mdta/com.apple.quicktime.direction.facing
mdta/com.apple.quicktime.direction.motion
mdta/com.apple.quicktime.detected-face
mdta/com.apple.quicktime.detected-human-body
mdta/com.apple.quicktime.detected-cat-body
mdta/com.apple.quicktime.detected-dog-body
mdta/com.apple.quicktime.detected-salient-object
mdta/com.apple.quicktime.preferred-affine-transform
mdta/com.apple.quicktime.video-orientation
mdta/com.apple.quicktime.content.identifier
mdta/com.apple.quicktime.accessibility.description
mdta/com.apple.quicktime.core-motion
mdta/com.apple.quicktime.camera-debug-info
mdta/com.apple.quicktime.live-photo.video-stabilization-crop-percentage-numerator
mdta/com.apple.quicktime.live-photo.video-stabilization-crop-percentage-denominator
mdta/com.apple.quicktime.is-montage
mdta/com.apple.quicktime.live-photo.auto
mdta/com.apple.quicktime.live-photo.vitality-score
mdta/com.apple.quicktime.live-photo.vitality-scoring-version
mdta/com.apple.quicktime.spatial-overcapture.quality-score
mdta/com.apple.quicktime.spatial-overcapture.quality-scoring-version
mdta/com.apple.quicktime.location.accuracy.horizontal
itsk/%A9alb
itsk/%A9ART
itsk/%A9cmt
itsk/covr
itsk/cprt
itsk/%A9day
itsk/%A9enc
itsk/gnre
itsk/%A9gen
itsk/%A9nam
itsk/%A9st3
itsk/%A9too
itsk/%A9wrt
itsk/aART
itsk/akID
itsk/apID
itsk/atID
itsk/cnID
itsk/cpil
itsk/disk
itsk/geID
itsk/grup
itsk/plID
itsk/rtng
itsk/tmpo
itsk/trkn
itsk/%A9ard
itsk/%A9arg
itsk/%A9aut
itsk/%A9lyr
itsk/%A9cak
itsk/%A9con
itsk/%A9des
itsk/%A9dir
itsk/%A9equ
itsk/%A9lnt
itsk/%A9mak
itsk/%A9ope
itsk/%A9phg
itsk/%A9prd
itsk/%A9prf
itsk/%A9pub
itsk/%A9sne
itsk/%A9sol
itsk/%A9src
itsk/%A9thx
itsk/%A9url
itsk/%A9xpd
id3/AENC
id3/APIC
id3/ASPI
id3/COMM
id3/COMR
id3/ENCR
id3/EQUA
id3/EQU2
id3/ETCO
id3/GEOB
id3/GRID
id3/IPLS
id3/LINK
id3/MCDI
id3/MLLT
id3/OWNE
id3/PRIV
id3/PCNT
id3/POPM
id3/POSS
id3/RBUF
id3/RVAD
id3/RVA2
id3/RVRB
id3/SEEK
id3/SIGN
id3/SYLT
id3/SYTC
id3/TALB
id3/TBPM
id3/TCOM
id3/TCON
id3/TCOP
id3/TDAT
id3/TDEN
id3/TDLY
id3/TDOR
id3/TDRC
id3/TDRL
id3/TDTG
id3/TENC
id3/TEXT
id3/TFLT
id3/TIME
id3/TIPL
id3/TIT1
id3/TIT2
id3/TIT3
id3/TKEY
id3/TLAN
id3/TLEN
id3/TMCL
id3/TMED
id3/TMOO
id3/TOAL
id3/TOFN
id3/TOLY
id3/TOPE
id3/TORY
id3/TOWN
id3/TPE1
id3/TPE2
id3/TPE3
id3/TPE4
id3/TPOS
id3/TPRO
id3/TPUB
id3/TRCK
id3/TRDA
id3/TRSN
id3/TRSO
id3/TSIZ
id3/TSOA
id3/TSOP
id3/TSOT
id3/TSRC
id3/TSSE
id3/TSST
id3/TYER
id3/TXXX
id3/UFID
id3/USER
id3/USLT
id3/WCOM
id3/WCOP
id3/WOAF
id3/WOAR
id3/WOAS
id3/WORS
id3/WPAY
id3/WPUB
id3/WXXX
icy/StreamTitle
icy/StreamUrl
m3u8/NAME
AVOutputDeviceBatteryLevelCaseKey
AVOutputDeviceBatteryLevelLeftKey
AVOutputDeviceBatteryLevelRightKey
AVOutputDeviceSupportsDataOverACLProtocolKey
AVOutputDeviceIsInEarKey
AVOutputDeviceBluetoothListeningModeNormal
AVOutputDeviceBluetoothListeningModeActiveNoiseCancellation
AVOutputDeviceBluetoothListeningModeAudioTransparency
AVOutputDeviceVolumeDidChangeNotification
AVOutputDeviceCanSetVolumeDidChangeNotification
AVOutputDeviceVolumeControlTypeDidChangeNotification
AVOutputDeviceProposedGroupIDDidChangeNotification
AVOutputDeviceLocalDeviceDidChangeNotification
AVOutputDeviceConfigurationOptionCancelConfigurationIfAuthRequired
AVOutputDeviceConfigurationCancellationReasonAuthorizationSkipped
AVOutputDeviceSecondDisplayModeDefault
AVOutputDeviceSecondDisplayModeMediaPresentation
AVOutputDeviceCommunicationChannelOptionControlType
AVOutputDeviceCommunicationChannelOptionCancelIfAuthRequired
AVOutputDeviceCommunicationChannelOptionCorrelationID
AVOutputDeviceCommunicationChannelOptionInitiator
AVOutputDeviceCommunicationChannelOptionUsePerCommChannelDelegate
AVOutputDeviceCommunicationChannelControlTypeDirect
AVOutputDeviceCommunicationChannelControlTypeRelayed
AVOutputDeviceCommunicationChannelOpenCancellationReasonAuthorizationSkipped
AVOutputDeviceHeadTrackedSpatialAudioModeNever
AVOutputDeviceHeadTrackedSpatialAudioModeAlways
AVOutputDeviceHeadTrackedSpatialAudioModeAutomatic
AVOutputDeviceHeadTrackedSpatialAudioModeMultichannelOnly
outputdevice_trace
Not available
<<<< AVOutputDevice >>>> %s: called (self=%p, impl=%@)
-[AVOutputDevice initWithOutputDeviceImpl:commChannelManager:]
%@: %@
<<<< AVOutputDevice >>>> %s: called (enabled=%d)
-[AVOutputDevice setSecondDisplayEnabled:]
<<<< AVOutputDevice >>>> %s: setting second display mode to %{public}@...
-[AVOutputDevice setSecondDisplayMode:completionHandler:]
<<<< AVOutputDevice >>>> %s: ...done setting second display mode (token=%{public}@, error=%{public}@/%d)
-[AVOutputDevice setSecondDisplayMode:completionHandler:]_block_invoke
non-nil
v24@?0@8@"NSError"16
<<<< AVOutputDevice >>>> %s: Posting %{public}@
-[AVOutputDevice outputDeviceImplDidChangeVolume:]
-[AVOutputDevice outputDeviceImplDidChangeCanChangeVolume:]
-[AVOutputDevice outputDeviceImplDidChangeVolumeControlType:]
+[AVOutputDevice localDeviceDidChange]
<<<< AVOutputDevice >>>> %s: called (volume=%f)
-[AVOutputDevice setVolume:]
-[AVOutputDevice outputDeviceImplDidChangeProposedGroupID:]
<<<< AVOutputDevice >>>> %s: called (allows=%d)
-[AVOutputDevice setAllowsHeadTrackedSpatialAudio:error:]
<<<< AVOutputDevice >>>> %s: called (mode=%{public}@)
-[AVOutputDevice setHeadTrackedSpatialAudioMode:error:]
-[AVOutputDevice setCurrentBluetoothListeningMode:]
-[AVOutputDevice setCurrentBluetoothListeningMode:error:]
<<<< AVOutputDevice >>>> %s: called (device=%{private}@, cancelIfAuthRequired=%{public}@, correlationID=%{private}@, initiator=%{private}@)
-[AVOutputDevice _openPerCommunicationChannelDelegateChannelWithOptions:completionHandler:]
-[AVOutputDevice _openPerCommunicationChannelDelegateChannelWithOptions:completionHandler:]_block_invoke
<<<< AVOutputDevice >>>> %s: Open comm channel completed (err=%d)
<<<< AVOutputDevice >>>> %s: No System Remote Pool to add to!
Error retrieving system remote pool context.
<<<< AVOutputDevice >>>> %s: called (self=%p, options=%@, completionHandler=%p)
-[AVOutputDevice openCommunicationChannelWithOptions:completionHandler:]
<<<< AVOutputDevice >>>> %s: called (delegate? %d)
-[AVOutputDevice setCommunicationChannelDelegate:]
<<<< AVOutputDevice >>>> %s: Invoking -outputDevice:didReceiveData:fromCommunicationChannel: with %d bytes
-[AVOutputDevice communicationChannelManager:didReceiveData:fromCommunicationChannel:]
<<<< AVOutputDevice >>>> %s: Delegate missing or does not implement -outputDevice:didReceiveData:fromCommunicationChannel
<<<< AVOutputDevice >>>> %s: Invoking -outputDevice:didCloseCommunicationChannel:
-[AVOutputDevice communicationChannelManager:didCloseCommunicationChannel:]
<<<< AVOutputDevice >>>> %s: Delegate missing or does not implement -outputDevice:didCloseCommunicationChannel:
<<<< AVOutputDevice >>>> %s: called (cancelIfAuthRequired=%{public}@)
-[AVOutputDevice configureUsingBlock:options:completionHandler:]
<<<< AVOutputDevice >>>> %s: result=%d, cancellationReason=%{public}@, error=%{public}@
-[AVOutputDevice configureUsingBlock:options:completionHandler:]_block_invoke
v40@?0q8@"<AVOutputDeviceConfigurationRetrieval>"16@"NSString"24@"NSError"32
<<<< AVOutputDevice >>>> %s: called
-[AVOutputDevice configureUsingBlock:completionHandler:]
-[AVOutputDevice configureUsingBlock:completionHandler:]_block_invoke
FrecencyScore
LastUsedTimestamp
Frecents
%@.plist
com.apple.avfoundation.frecents
<<<< AVOutputDevice >>>> %s: Using frecents file at %{public}@
+[AVOutputDeviceFrecencyManager _frecentsFilePath]_block_invoke
<<<< AVOutputDevice >>>> %s: Using legacy CFPreferences-based frecents
+[AVOutputDeviceFrecencyManager _frecentsReaderAfterMigrationIfNecessary]_block_invoke
<<<< AVOutputDevice >>>> %s: Migrating frecents from CFPreferences to %{public}@
+[AVOutputDeviceFrecencyManager _migrateFrecentsFromCFPreferencesToFrecentsFilePath:]
My Device
-[AVOutputDeviceCommunicationChannel setDelegate:]
<<<< AVOutputDevice >>>> %s: Invoking -communicationChannel:didReceiveData: with %d bytes
-[AVOutputDeviceCommunicationChannel communicationChannelImpl:didReceiveData:]
<<<< AVOutputDevice >>>> %s: Delegate missing or does not implement -communicationChannel:didReceiveData:
<<<< AVOutputDevice >>>> %s: Invoking -communicationChannelDidClose:
-[AVOutputDeviceCommunicationChannel communicationChannelImplDidClose:]
<<<< AVOutputDevice >>>> %s: Delegate missing or does not implement -communicationChannelDidClose:
_UIApplicationDidFinishSuspensionSnapshotNotification
UIApplicationDidEnterBackgroundNotification
UIApplicationWillResignActiveNotification
UIApplicationWillEnterForegroundNotification
adts
avutilities_trace
<<<< AVUtilities >>>> %s: called (queue=%p, currentQueue=%p, dispatch_get_main_queue()=%p, NSThread isMainThread=%d)
AVSerializeOnQueueAsyncIfNecessary
<<<< AVUtilities >>>> %s: running block synchronously
<<<< AVUtilities >>>> %s: dispatching block to queue
<<<< AVUtilities >>>> %s: dispatching to background queue
AVEnsureNotOnMainThread
AVFoundationErrorDomain
AVErrorDeviceKey
AVErrorTimeKey
AVErrorFileSizeKey
AVErrorPIDKey
AVErrorRecordingSuccessfullyFinishedKey
AVErrorRecordingFailureDomainKey
AVErrorMediaTypeKey
AVErrorMediaSubTypeKey
AVErrorPresentationTimeStampKey
AVErrorPersistentTrackIDKey
AVErrorFileTypeKey
AVErrorExceptionKey
AVErrorFourCharCode
AVError
_Description
_FailureReason
_RecoverySuggestion
/Library/Caches/com.apple.xbs/Sources/AVFoundation_AVFCore_Sim/AVFoundation-2036.2.2/Fig/AVError.m %s: Could not load localized failure reason for %@ %ld (%@)
AVLocalizedError
/Library/Caches/com.apple.xbs/Sources/AVFoundation_AVFCore_Sim/AVFoundation-2036.2.2/Fig/AVError.m %s: Could not load localized description for %@ %ld (%@)
/Library/Caches/com.apple.xbs/Sources/AVFoundation_AVFCore_Sim/AVFoundation-2036.2.2/Fig/AVError.m %s: Could not load localized recovery suggestion or failure reason for %@ %ld (%@)
/Library/Caches/com.apple.xbs/Sources/AVFoundation_AVFCore_Sim/AVFoundation-2036.2.2/Fig/AVError.m %s: Could not load localized recovery suggestion for %@ %ld (%@)
Source frame missing
Render dimensions unknown
Source frame unsupported format
Destination frame unsupported format
Invalid parameter
Invalid composition instruction
Blitting failed
No output callback
Frame was cancelled
No custom callbacks
Custom compositor failed with client NSError
Media format - invalid parameter
Media format - sample description is invalid (e.g. invalid size)
Media format - format description is invalid (e.g. invalid size)
Media format - format description has an incompatible format (e.g. unknown format / incompatible atom)
Media format - sample description is unsupported for the specified format flavor
Media format - slice has an invalid value
Media writing - no such property
Media writing - read only property
Media writing - no such track
Media writing - invalid timestamp
Media writing - invalid format
Media writing - invalid edit
Media writing - predetermined file size too small
Media writing - predetermined media data size too small
Media writing - segment is not allowed to star with a non-sync sample.
Cannot append media data after ending session
JSON format error
iTT requires languageCode or extendedLanguageTag property to be set
AVErrorOutOfMemory
AVErrorSessionNotRunning
AVErrorDeviceAlreadyUsedByAnotherSession
AVErrorNoDataCaptured
AVErrorSessionConfigurationChanged
AVErrorDiskFull
AVErrorDeviceWasDisconnected
AVErrorMediaChanged
AVErrorMaximumDurationReached
AVErrorMaximumFileSizeReached
AVErrorMediaDiscontinuity
AVErrorMaximumNumberOfSamplesForFileFormatReached
AVErrorDeviceNotConnected
AVErrorDeviceInUseByAnotherApplication
AVErrorDeviceLockedForConfigurationByAnotherProcess
AVErrorSessionWasInterrupted
AVErrorMediaServicesWereReset
AVErrorRecordingNotAllowedWhenMultipleAppsAreForeground
AVErrorExportFailed
AVErrorDecodeFailed
AVErrorInvalidSourceMedia
AVErrorFileAlreadyExists
AVErrorCompositionTrackSegmentsNotContiguous
AVErrorInvalidCompositionTrackSegmentDuration
AVErrorInvalidCompositionTrackSegmentSourceStartTime
AVErrorInvalidCompositionTrackSegmentSourceDuration
AVErrorFileFormatNotRecognized
AVErrorFileFailedToParse
AVErrorMaximumStillImageCaptureRequestsExceeded
AVErrorContentIsProtected
AVErrorNoImageAtTime
AVErrorDecoderNotFound
AVErrorEncoderNotFound
AVErrorContentIsNotAuthorized
AVErrorApplicationIsNotAuthorized
AVErrorDeviceIsNotAvailableInBackground
AVErrorFileChecksumFailed
AVErrorOperationNotSupportedForAsset
AVErrorDecoderTemporarilyUnavailable
AVErrorEncoderTemporarilyUnavailable
AVErrorInvalidVideoComposition
AVErrorReferenceForbiddenByReferencePolicy
AVErrorInvalidFileAtDownloadDestinationURL
AVErrorInvalidOutputURLPathExtension
AVErrorTorchLevelUnavailable
AVErrorOperationInterrupted
AVErrorIncompatibleAsset
AVErrorFailedToLoadMediaData
AVErrorServerIncorrectlyConfigured
AVErrorApplicationIsNotAuthorizedToUseDevice
AVErrorFailedToParse
AVErrorFileTypeDoesNotSupportSampleReferences
AVErrorUndecodableMediaData
AVErrorClientProgrammingError
AVErrorAirPlayControllerRequiresInternet
AVErrorAirPlayReceiverRequiresInternet
AVErrorVideoCompositorFailed
AVErrorRecordingAlreadyInProgress
AVErrorUnsupportedOutputSettings
AVErrorOperationNotAllowed
AVErrorContentIsUnavailable
AVErrorFileWritingExceededPredeterminedSize
AVErrorMediaDataWritingExceededPredeterminedSize
AVErrorFormatUnsupported
AVErrorMalformedDepth
AVErrorIncorrectPIN
AVErrorIncorrectPassword
AVErrorContentNotUpdated
AVErrorNoLongerPlayable
AVErrorNoCompatibleAlternatesForExternalDisplay
AVErrorNoSourceTrack
AVErrorExternalPlaybackNotSupportedForAsset
AVErrorOperationNotSupportedForPreset
AVErrorOperationRequiresBothBudsInEar
AVErrorIncorrectlyConfigured
AVErrorSegmentStartedWithNonSyncSample
AVErrorRosettaNotInstalled
AVErrorOperationCancelled
'%@'
AVSampleBufferVideoRendererDidFailToDecodeNotification
AVSampleBufferVideoRendererDidFailToDecodeNotificationErrorKey
AVSampleBufferVideoRendererRequiresFlushToResumeDecodingDidChangeNotification
AVSampleBufferVideoRendererOutputObscuredDueToInsufficientExternalProtectionDidChangeNotification
AVSampleBufferVideoRendererVisibilityDidChangeNotification
avsamplebuffervideorenderer_trace
The control timebase can not be changed after the display layer or video renderer has been added to a synchronizer
The display layer or video renderer cannot be added to a synchronizer if the control timebase has already been set.
AVSBVR failed with err=%d at %s.
FigVideoQueueCreate
FigVideoQueueStart
FVQSetProperty(ControlTimebase)
<<<< AVSampleBufferVideoRenderer >>>> %s: failed to create video queue: %d
-[AVSampleBufferVideoRenderer _createVideoQueue:]
<<<< AVSampleBufferVideoRenderer >>>> %s: output obscured: %d, post notification: %@
-[AVSampleBufferVideoRenderer _setOutputObscuredDueToInsufficientExternalProtection:]
AVSampleBufferVideoRenderer serial
AVSampleBufferVideoRenderer videoQueue
AVSampleBufferVideoRenderer layerQueue
AVSampleBufferVideoRendererCallbackListQueue
AVSampleBufferVideoRendererFlushCallbackQueue
AVSampleBufferVideoRendererQueueForProtectingPrerollCompleteCallback
AVSampleBufferVideoRendererQueueForCallingPrerollCompleteCallback
_initializeTimebases
bail error check
An object conforming to AVQueuedSampleBufferRendering, configured to request more media data via requestMediaDataWhenReadyOnQueue:usingBlock:, was released without first having been messaged stopRequestingMediaData:.
<<<< AVSampleBufferVideoRenderer >>>> %s: visibility changed: %s, post notification: %@
-[AVSampleBufferVideoRenderer setDisplayLayerVisibility:]_block_invoke
visible
NOT visible
<<<< AVSampleBufferVideoRenderer >>>> %s: [%p] trying to add to a synchronizer (%p) when we already are added to a synchronizer (%p).
-[AVSampleBufferVideoRenderer setRenderSynchronizer:error:]
The DisplayLayer cannot be added to a Synchronizer when it has already been added to a Synchronizer.
<<<< AVSampleBufferVideoRenderer >>>> %s: UpcomingPTSExpectation is enabled, but enqueuePTS:%.3f is smaller than expectedMinimumUpcomingPTS:%.3f
-[AVSampleBufferVideoRenderer _enqueueSingleSampleBuffer:bufferEnqueueingInfo:]
<<<< AVSampleBufferVideoRenderer >>>> %s: enqueueFrame failed, returned %d
An AVSampleBufferDisplayLayer or video target must be added to the AVSampleBufferVideoRenderer prior to enqueueing sample buffers.
Ignoring enqueueSampleBuffer: because status is "failed"
<<<< AVSampleBufferVideoRenderer >>>> %s: FigVideoQueueFlush returned %d
-[AVSampleBufferVideoRenderer flushWithRemovalOfDisplayedImage:completionHandler:]
<<<< AVSampleBufferVideoRenderer >>>> %s: flush completed but no pending callback block found
-[AVSampleBufferVideoRenderer _flushComplete]
<<<< AVSampleBufferVideoRenderer >>>> %s: no pending preroll callback
-[AVSampleBufferVideoRenderer _completedDecodeForPrerollForRequestID:]_block_invoke
<<<< AVSampleBufferVideoRenderer >>>> %s: skip stale callback, requestId(%d) != pendingPrerollRequestID (%d)
<<<< AVSampleBufferVideoRenderer >>>> %s: Adding %p
-[AVSampleBufferVideoRenderer addSampleBufferDisplayLayer:]
Cannot add AVSampleBufferDisplayLayer while enqueueing sample buffers.
An AVSampleBufferDisplayLayer is already attached to the AVSampleBufferVideoRenderer.  Only 1 is allowed at a time.
addSampleBufferDisplayLayer failed to set content layer
<<<< AVSampleBufferVideoRenderer >>>> %s: Setting %d video targets.
-[AVSampleBufferVideoRenderer _updateVideoTargetsOnVideoQueue]
Failed to set video target array on video queue.
-[AVSampleBufferVideoRenderer addVideoTarget:]
Cannot add video target while enqueueing sample buffers.
The FigVideoTarget is already attached to the AVSampleBufferVideoRenderer.
<<<< AVSampleBufferVideoRenderer >>>> %s: Setting display layer %p.
-[AVSampleBufferVideoRenderer _setContentLayerOnFigVideoQueue:]
The AVSampleBufferDisplayLayer's content layer is nil.
<%@: %p, AVSBDLs = %d, FVTs = %d>
<<<< AVSampleBufferVideoRenderer >>>> %s:  Unable to set expectMinimumUpcomingSampleBufferPresentationTime because minimumUpcomingPresentationTime is not numeric 
-[AVSampleBufferVideoRenderer(PowerOptimization) expectMinimumUpcomingSampleBufferPresentationTime:]
The AVSampleBufferVideoOutput has already been added to the AVSampleBufferVideoRenderer.
<<<< AVSampleBufferVideoRenderer >>>> %s: Adding %p.
-[AVSampleBufferVideoRenderer(AVSampleBufferVideoRendererOutputs) addOutput:]
The video target was removed, but not already attached to AVSampleBufferVideoRenderer.
<<<< AVSampleBufferVideoRenderer >>>> %s: Removing %p.
-[AVSampleBufferVideoRenderer(AVSampleBufferVideoRendererOutputs) removeOutput:]
<<<< AVSampleBufferVideoRenderer >>>> %s: Received decode error from video queue, %@
_figVideoQueueDecodeError
<<<< AVSampleBufferVideoRenderer >>>> %s: [%p] handling VideoQueueFailed with error (%d).
_figVideoQueueFailed
nil reference
_enqueueSingleSampleBufferStatic
/Library/Caches/com.apple.xbs/Sources/AVFoundation_AVFCore_Sim/AVFoundation-2036.2.2/Fig/AVSampleBufferVideoRenderer.m
AVVideoCodecKey
avc1
jpeg
ap4h
apcn
apch
apcs
apco
hvc1
muxa
AVVideoWidthKey
AVVideoHeightKey
AVVideoPixelAspectRatioKey
AVVideoPixelAspectRatioHorizontalSpacingKey
AVVideoPixelAspectRatioVerticalSpacingKey
AVVideoCleanApertureKey
AVVideoCleanApertureWidthKey
AVVideoCleanApertureHeightKey
AVVideoCleanApertureHorizontalOffsetKey
AVVideoCleanApertureVerticalOffsetKey
AVVideoScalingModeKey
AVVideoScalingModeFit
AVVideoScalingModeResize
AVVideoScalingModeResizeAspect
AVVideoScalingModeResizeAspectFill
AVVideoColorPropertiesKey
ColorPrimaries
ITU_R_709_2
SMPTE_C
P3_D65
ITU_R_2020
TransferFunction
SMPTE_ST_2084_PQ
ITU_R_2100_HLG
YCbCrMatrix
ITU_R_601_4
AVVideoAllowWideColorKey
AVVideoCompressionPropertiesKey
AverageBitRate
Quality
MaxKeyFrameInterval
MaxKeyFrameIntervalDuration
AppleProRAWBitDepthKey
ProfileLevel
H264_Baseline_3_0
H264_Baseline_3_1
H264_Baseline_4_1
H264_Baseline_AutoLevel
H264_Main_3_0
H264_Main_3_1
H264_Main_3_2
H264_Main_4_1
H264_Main_AutoLevel
H264_High_4_0
H264_High_4_1
H264_High_AutoLevel
H264EntropyMode
CAVLC
CABAC
ExpectedFrameRate
AllowFrameReordering
AverageNonDroppableFrameRate
AVVideoDecompressionPropertiesKey
AVVideoMinimumFrameDuration
AVVideoFrameRateConversionAlgorithm
AVVideoFrameRateConversionAlgorithmFast
AVVideoFrameRateConversionAlgorithmPrecise
PerceptualQualityOptimization
AVVideoEmitSequencesAtSyncFramesOnly
AVVideoMinimumIntervalForSyncFrames
<<<< AVOutputDevice (FigEndpoint) >>>> %s: RouteUID %@ or RouteName %@ is nil, can't construct description.
AVOutputDeviceDescriptionsFromFigDescriptions
<<<< AVOutputDevice (FigEndpoint) >>>> %s: called (self=%p, figEndpoint=%@)
-[AVFigEndpointOutputDeviceImpl initWithFigEndpoint:]
figEndpoint != NULL
<<<< AVOutputDevice (FigEndpoint) >>>> %s: Endpoint property '%@' not supported
-[AVFigEndpointOutputDeviceImpl _figEndpointPropertyValueForKey:]
<<<< AVOutputDevice (FigEndpoint) >>>> %s: Endpoint property '%@' has value: %@
<<<< AVOutputDevice (FigEndpoint) >>>> %s: Warning: FigEndpoint implementation is only intended for use on macOS.  Only a subset of possible device types can be communicated by FigEndpoint
-[AVFigEndpointOutputDeviceImpl deviceType]
<<<< AVOutputDevice (FigEndpoint) >>>> %s: Warning: FigEndpoint implementation is only intended for use on macOS.  There is no way to discover detailed device subtype for most devices from FigEndpoint
-[AVFigEndpointOutputDeviceImpl deviceSubType]
<<<< AVOutputDevice (FigEndpoint) >>>> %s: Warning: FigEndpoint implementation is only intended for use on macOS.  There is no way to get DataOverACL information from FigEndpoint
-[AVFigEndpointOutputDeviceImpl supportsDataOverACLProtocol]
<<<< AVOutputDevice (FigEndpoint) >>>> %s: Warning: FigEndpoint implementation is only intended for use on macOS.  There is no way to get isInEar information from FigEndpoint
-[AVFigEndpointOutputDeviceImpl isInEar]
<<<< AVOutputDevice (FigEndpoint) >>>> %s: Warning: FigEndpoint implementation is only intended for use on macOS.  There is no way to discover connected paired devices from FigEndpoint
-[AVFigEndpointOutputDeviceImpl isInUseByPairedDevice]
-[AVFigEndpointOutputDeviceImpl connectedPairedDevices]
<<<< AVOutputDevice (FigEndpoint) >>>> %s: Setting %@ = %@
AVOutputDeviceSetAllowsHeadTrackedSpatialAudioOnEndpoint
<<<< AVOutputDevice (FigEndpoint) >>>> %s: Unrecognized mode %@
AVOutputDeviceHeadTrackedSpatialAudioModeFromFigMode
AVOutputDeviceSetHeadTrackedSpatialAudioModeOnEndpoint
<<<< AVOutputDevice (FigEndpoint) >>>> %s: setting kFigEndpointProperty_ListeningMode to %d
-[AVFigEndpointOutputDeviceImpl setCurrentBluetoothListeningMode:]
-[AVFigEndpointOutputDeviceImpl setCurrentBluetoothListeningMode:error:]
Output device %@ screen %@
enable
disable
<<<< AVOutputDevice (FigEndpoint) >>>> %s: calling FigEndpointBorrowScreen (clientName=%{public}@, reason=%{private}@)
AVOutputDeviceSetSecondDisplayEnabledOnEndpoint
<<<< AVOutputDevice (FigEndpoint) >>>> %s: calling FigEndpointUnborrowScreen (clientName=%{public}@, reason=%{private}@)
v12@?0i8
<<<< AVOutputDevice (FigEndpoint) >>>> %s: called (self=%p, ID=%@, endpointID=%@)
-[AVFigEndpointOutputDeviceImpl _volumeDidChangeForEndpointWithID:]
-[AVFigEndpointOutputDeviceImpl _canSetEndpointVolumeDidChangeForEndpointWithID:]
<<<< AVOutputDevice (FigEndpoint) >>>> %s: called (self=%p, configuratorBlock=%@, options=%@, completionHandler=%@)
-[AVFigEndpointOutputDeviceImpl configureUsingBlock:options:completionHandler:]
FigRoutingContext is not available on this platform
<<<< AVOutputDevice (FigEndpoint) >>>> %s: called (endpoint=%@)
+[AVOutputDevice(AVOutputDeviceFigEndpointImplFetching) outputDeviceWithFigEndpoint:]
+[AVOutputDevice(AVOutputDeviceFigEndpointImplFetching) outputDeviceWithFigEndpoint:routingContextFactory:]
(error %d)
(name: %@, ID: %@)
<<<< AVOutputDevice (FigEndpoint) >>>> %s: Unrecognized head-tracked spatial audio mode %@
AVOutputDeviceCopyFigModeForSpatialAudioMode
request
B32@?0@"NSString"8Q16^B24
v24@?0@"NSError"8d16
Accept
identity
Accept-Encoding
Keep-Alive
Connection
bytes=%llu-
Range
bytes=%llu-%llu
v32@?0@"NSURLSessionDataTask"8@"AVAssetCustomURLRequest"16^B24
com.apple.avfoundation.customurl.nsurlsession
com.apple.avfoundation.customurl.cfurlconnection
User-Agent
com.apple.avfoundation.authkeychain.callback
com.apple.avfoundation.authkeychain
Content-Range
bytes
Content-Length
<%@: %p, %@, target = %@>
empty
source = %@
timeMapping
description=AVFoundation_AVFCore_Sim-2036.2.2
<%@: %p, input parameters = %@>
<%@: %p, track ID = %d, volume mix: %@>
effectParameters == nil || [effectParameters isMemberOfClass:[AVAudioMixSweepFilterEffectParameters class]]
The timeRange of a volume ramp must have a numeric start time and a numeric duration.
The time of a volume setting must be numeric.
introFadeDuration must be numeric and >= 0
fadeOutStart must be >= 0 if numeric
fadeOutDuration must be numeric and >= 0
AVOutputContextDeviceGroupControlOptionCancelAddDeviceIfAuthRequired
AVOutputContextDestinationChangeInitiatedNotification
AVOutputContextDestinationChangeKey
AVOutputContextOutputDeviceDidChangeNotification
AVOutputContextGlobalOutputDeviceConfigurationDidChangeNotification
AVOutputContextOutputDevicesDidChangeNotification
AVOutputContextDestinationChangeInitiatorKey
AVOutputContextSetOutputDevicePasswordKey
AVOutputContextSetOutputDeviceCancelIfAuthRequiredKey
AVOutputContextSetOutputDeviceSuppressUserInteractionOnSenderOnlyKey
AVOutputContextSetOutputDeviceInitiatorKey
AVOutputContextSetOutputDevicesOptionInitiator
AVOutputContextAddOutputDeviceOptionAuthorizationToken
AVOutputContextAddOutputDeviceCancelIfAuthRequiredKey
AVOutputContextAddOutputDeviceOptionInitiator
AVOutputContextAddOutputDeviceOptionCorrelationID
AVOutputContextRemoveOutputDeviceOptionInitiator
AVOutputContextRemoveOutputDeviceOptionContinuePlayingAfterLastDeviceRemoved
AVOutputContextSetOutputDeviceFadePlaybackKey
AVOutputContextSetOutputDevicesOptionFadePlayback
AVOutputContextAddOutputDeviceOptionFadePlayback
AVOutputContextRemoveOutputDeviceOptionFadePlayback
AVOutputContextDestinationChangeReasonKey
AVOutputContextDestinationChangeDeviceIDKey
AVOutputContextDestinationChangePreviousDeviceIDsKey
AVOutputContextDestinationChangeReasonIdleDisconnect
AVOutputContextPredictedOutputDeviceDidChangeNotification
AVOutputContextManagerOutputContextDidFailToConnectToOutputDeviceNotification
AVOutputContextManagerOutputDeviceKey
AVOutputContextManagerFailureReasonKey
AVOutputContextDeviceConnectionFailureReasonDeviceInUse
AVOutputContextDeviceConnectionFailureReasonDeviceOutOfRange
AVOutputContextDeviceConnectionFailureReasonNotAPeerInHomeGroup
AVOutputContextDeviceConnectionFailureReasonDeviceNotConnectedToInternet
AVOutputContextDeviceConnectionFailureReasonDeviceNotMFiCertified
AVOutputContextDeviceConnectionFailureReasonIPAliasingNotSupported
AVOutputContextTypeSharedSystemAudio
AVOutputContextTypeSharedSystemScreen
AVOutputContextTypeSharedAudioPresentation
AVOutputContextTypeAudio
AVOutputContextTypeVideo
AVOutputContextTypeScreen
AVOutputContextTypeGroupControl
AVOutputContextProvidesControlForAllVolumeFeaturesDidChangeNotification
AVOutputContextVolumeDidChangeNotification
AVOutputContextCanSetVolumeDidChangeNotification
AVOutputContextCommunicationChannelOptionControlType
AVOutputContextCommunicationChannelControlTypeDirect
AVOutputContextCommunicationChannelControlTypeRelayed
AVOutputContextDestinationChangeCancellationReasonAuthorizationSkipped
outputcontext_trace
<<<< AVOutputContext >>>> %s: Defaulting to AVOutputContext impl %@
+[AVOutputContext defaultOutputContextImplClass]
com.apple.UIKit.screenpicker
com.apple.avfoundation.allow-system-wide-context
<<<< AVOutputContext >>>> %s: called (self=%p, impl=%@)
-[AVOutputContext initWithOutputContextImpl:]
com.apple.avfoundation.outputcontext.ivars
<<<< AVOutputContext >>>> %s: called (self=%p)
-[AVOutputContext initWithCoder:]
AVOutputContextSerializationKeyContextID
AVOutputContextSerializationKeyContextType
-[AVOutputContext encodeWithCoder:]
<%@: %p, ID=%@, type=%@>
<<<< AVOutputContext >>>> %s: contextID = %@
-[AVOutputContext ID]
<<<< AVOutputContext >>>> %s: setting applicationProcessID to %d)
-[AVOutputContext setApplicationProcessID:]
<<<< AVOutputContext >>>> %s: outputDevice = %@
-[AVOutputContext outputDevice]
<<<< AVOutputContext >>>> %s: called (outputDevice=%{private}@, password? %d, cancelIfAuthRequired=%{public}@, suppressUserInteractionOnSenderOnly=%{public}@, initiator=%{public}@, fadePlayback=%{public}@)
-[AVOutputContext setOutputDevice:options:completionHandler:]
<<<< AVOutputContext >>>> %s: Result: %{public}@
-[AVOutputContext setOutputDevice:options:completionHandler:]_block_invoke
<<<< AVOutputContext >>>> %s: called (outputDevice=%{private}@, features=%d)
-[AVOutputContext setOutputDevice:forFeatures:]
-[AVOutputContext setOutputDevice:options:]
<<<< AVOutputContext >>>> %s: called
+[AVOutputContext resetOutputDeviceForAllOutputContexts]
<<<< AVOutputContext >>>> %s: Posting %{public}@ with destination change %{public}@
-[AVOutputContext outputContextImpl:didInitiateDestinationChange:]
<<<< AVOutputContext >>>> %s: Posting %{public}@ with initiator %{public}@
-[AVOutputContext outputContextImpl:didChangeOutputDeviceWithInitiator:]
-[AVOutputContext outputContextImplDidChangeGlobalOutputDeviceConfiguration:]
<<<< AVOutputContext >>>> %s: Posting %{public}@)
<<<< AVOutputContext >>>> %s: outputDevices = %@
-[AVOutputContext outputDevices]
<<<< AVOutputContext >>>> %s: Posting %{public}@ with initiator %{public}@, reason %{public}@, deviceID %{private}@, and previousDeviceIDs %{private}@
-[AVOutputContext outputContextImpl:didChangeOutputDevicesWithInitiator:reason:deviceID:previousDeviceIDs:]
<<<< AVOutputContext >>>> %s: called (devices=%{private}@)
-[AVOutputContext setOutputDevices:]
<<<< AVOutputContext >>>> %s: called (devices=%{private}@, initiator=%{public}@, fadePlayback=%{public}@)
-[AVOutputContext setOutputDevices:options:completionHandler:]
-[AVOutputContext setOutputDevices:options:completionHandler:]_block_invoke
<<<< AVOutputContext >>>> %s: called (device=%{private}@, authToken? %d, cancelIfAuthRequired=%{public}@, initiator=%{public}@, fadePlayback=%{public}@)
-[AVOutputContext addOutputDevice:options:completionHandler:]
-[AVOutputContext addOutputDevice:options:completionHandler:]_block_invoke
<<<< AVOutputContext >>>> %s: called (device=%{private}@)
-[AVOutputContext addOutputDevice:]
<<<< AVOutputContext >>>> %s: called (device=%{private}@, initiator=%{public}@, fadePlayback=%{public}@)
-[AVOutputContext removeOutputDevice:options:completionHandler:]
-[AVOutputContext removeOutputDevice:options:completionHandler:]_block_invoke
-[AVOutputContext removeOutputDevice:]
<<<< AVOutputContext >>>> %s: predictedOutputDevice = %@
-[AVOutputContext predictedOutputDevice]
<<<< AVOutputContext >>>> %s: Posting %{public}@
-[AVOutputContext outputContextImplDidChangePredictedOutputDevice:]
-[AVOutputContext resetPredictedOutputDevice]
-[AVOutputContext outputContextImplDidChangeProvidesControlForAllVolumeFeatures:]
-[AVOutputContext outputContextImplDidChangeVolume:]
-[AVOutputContext outputContextImplDidChangeCanSetVolume:]
-[AVOutputContext pausePlaybackOnAllOutputDevicesWithCompletionHandler:]
<<<< AVOutputContext >>>> %s: pause finished (error=%{public}@)
-[AVOutputContext pausePlaybackOnAllOutputDevicesWithCompletionHandler:]_block_invoke
-[AVOutputContext muteAllOutputDevicesWithCompletionHandler:]
<<<< AVOutputContext >>>> %s: mute finished (error=%{public}@)
-[AVOutputContext muteAllOutputDevicesWithCompletionHandler:]_block_invoke
<<<< AVOutputContext >>>> %s: called (controlType=%{public}@)
-[AVOutputContext openCommunicationChannelWithOptions:error:]
<<<< AVOutputContext >>>> %s: called (delegate? %d>)
-[AVOutputContext setCommunicationChannelDelegate:]
-[AVOutputContext outputContextImplOutgoingCommunicationChannelDidBecomeAvailable:]
<<<< AVOutputContext >>>> %s: Invoking -outputContextOutgoingCommunicationChannelDidBecomeAvailable:
<<<< AVOutputContext >>>> %s: Delegate missing or does not implement -outputContextOutgoingCommunicationChannelDidBecomeAvailable:
<<<< AVOutputContext >>>> %s: called (self=%p, impl=%@, data=%@, channel=%@)
-[AVOutputContext outputContextImpl:didReceiveData:fromCommunicationChannel:]
<<<< AVOutputContext >>>> %s: Invoking -outputContext:didReceiveData:fromCommunicationChannel: with %d bytes
<<<< AVOutputContext >>>> %s: Delegate missing or does not implement -outputContext:didReceiveData:fromCommunicationChannel:
<<<< AVOutputContext >>>> %s: called (self=%p, impl=%@, channel=%@)
-[AVOutputContext outputContextImpl:didCloseCommunicationChannel:]
<<<< AVOutputContext >>>> %s: Invoking -outputContext:didCloseCommunicationChannel:
<<<< AVOutputContext >>>> %s: Delegate missing or does not implement -outputContext:didCloseCommunicationChannel:
<<<< AVOutputContext >>>> %s: called (self=%p, impl=%@, replacementImpl=%@)
-[AVOutputContext outputContextImpl:didExpireWithReplacement:]
server death
<<<< AVOutputContext >>>> %s: sending %d bytes
-[AVOutputContextCommunicationChannel sendData:completionHandler:]
com.apple.avfoundation.outputcontext.destinationchange
<%@: %p, status=%d, cancellationReason=%@>
<<<< AVOutputContext >>>> %s: called (self=%p, status=%d)
-[AVOutputContextDestinationChange _setStatus:cancellationReason:]
com.apple.avfoundation.outputcontextmanager.ivars
<<<< AVOutputContext >>>> %s: Posting %{public}@ with outputDevice: %{private}@ failureReason: %{public}@
-[AVOutputContextManager outputContextManagerImpl:observedFailureToConnectToOutputDevice:reason:]
AVRunLoopConditionSignalRunLoopMode
AVLayerVideoGravityResize
AVLayerVideoGravityResizeAspect
AVLayerVideoGravityResizeAspectFill
vide
soun
text
clcp
meta
mobj
muxx
hapt
dpth
auxv
scen
AVVideoRangeSDR
AVVideoRangeHLG
AVVideoRangePQ
AVMediaCharacteristicVisual
AVMediaCharacteristicAudible
AVMediaCharacteristicLegible
AVMediaCharacteristicFrameBased
public.uses-wide-gamut-color-space
public.contains-hdr-video
public.contains-alpha-channel
public.main-program-content
public.auxiliary-content
public.original-content
public.subtitles.forced-only
public.accessibility.transcribes-spoken-dialog
public.accessibility.describes-music-and-sound
public.easy-to-read
public.accessibility.describes-video
com.apple.has-language-display-name-as-name
public.binaural-for-headphones
public.downmix
public.translation
public.translation.dubbed
public.translation.voice-over
com.apple.quicktime.video-map
com.apple.quicktime.video-map.depth
com.apple.quicktime-movie
public.mpeg-4
com.apple.m4v-video
com.apple.m4a-audio
public.3gpp
public.3gpp2
com.apple.coreaudio-format
com.microsoft.waveform-audio
public.aiff-audio
public.aifc-audio
org.3gpp.adaptive-multi-rate-audio
public.ac3-audio
public.enhanced-ac3-audio
public.au-audio
public.mp3
public.jpeg
com.adobe.raw-image
public.heic
public.avci
public.heif
public.tiff
org.w3.webvtt
com.apple.streamingkeydelivery.contentkey
com.apple.streamingkeydelivery.persistentcontentkey
MPEG4AppleHLS
MPEG4CMAFCompliant
assetinspector_trace
<<<< AVAssetInspector >>>> %s: %p cannot create AVAssetVariant for %@
-[AVFigAssetInspector variants]
<%@: %p, volume mix: %@>
The timeRange of a volume ramp must not overlap the timeRange of an existing volume ramp.
through
, changing instantaneously to 
, holding steady at 
, interpolated linearly to 
volume %1.3f %@ time %1.3f%@ with %@ ramp style
avoperation_trace
com.apple.avfoundation.avoperation.ivars
<<<< AVOperation >>>> %s: already cancelled (self=%p)
-[AVOperation evaluateDependenciesAndMarkAsExecuting]
<<<< AVOperation >>>> %s: marking as failed due to previous failure in dependency (self=%@)
<<<< AVOperation >>>> %s: marking as cancelled due to cancellation of dependency (self=%@)
requestedStatus != AVOperationStatusUnknown
isExecuting
isFinished
<<<< AVOperation >>>> %s: advancing status from %d to %d (self=%p)
-[AVOperation _setStatus:error:resultingStatus:failureReason:]_block_invoke
<<<< AVOperation >>>> %s: called (self=%@)
-[AVOperation didEnterTerminalState]
-[AVOperation markAsCompleted]
<<<< AVOperation >>>> %s: called (self=%@, error=%@)
-[AVOperation markAsFailedWithError:]
-[AVOperation markAsCancelled]
<<<< AVOperation >>>> %s: Got unrecognized status %d
+[AVOperation(ArrayOfOperations) statusOfOperations:error:]
<<<< AVOperation >>>> %s: called (self=%p)
-[AVBlockOperation start]
<<<< AVOperation >>>> %s: Client block cancelled with status %d (self=%p)
<<<< AVOperation >>>> %s: called (self=%p, name=%@)
-[AVBlockOperation cancel]
com.apple.avfoundation.globaloperationqueue.%p
<%@: %p, unfinishedOperations=%@>
AVDepartureAnnouncingObjectMonitorKey
com.apple.avfoundation.waitForNotificationOrDeallocationOperation
<<<< AVOperation >>>> %s: Ignoring attempt to cancel before execution has begun.  The expectation is that the implementation will notice the cancelled state as part of normal execution
AVOperationStatusResolveOldAndNew
Cannot enter a terminal state until the receiver starts executing
Cannot regress from a terminal state %d to a non-terminal state %d
<<<< AVOperation >>>> %s: ignoring attempt to move from terminal status %d to status %d
delegateutils_trace
<%@: %p> delegate serialization queue
-[AVWeakReferencingDelegateStorage _delegate]
/Library/Caches/com.apple.xbs/Sources/AVFoundation_AVFCore_Sim/AVFoundation-2036.2.2/Fig/Utilities/AVDelegateUtilities.m
-[AVWeakReferencingDelegateStorage _setDelegateViaWeakReference:]
<<<< AVDelegateUtilities >>>> %s: called (newDelegate=%@, newDelegateQueue=%p
-[AVWeakReferencingDelegateStorage setDelegate:queue:]
<<<< AVDelegateUtilities >>>> %s: called (delegateStorage = %@, expectedDelegateQueue = %p, delegateCallbackBlock = %p)
AVPerformDelegateCallbackSynchronouslyForDelegateStorageIfCurrentDelegateQueueIsQueueElseDispatchToCurrentDelegateQueue
<<<< AVDelegateUtilities >>>> %s: current delegate: %@, current delegate queue: %p
<<<< AVDelegateUtilities >>>> %s: Invoking delegate callback synchronously
<<<< AVDelegateUtilities >>>> %s: Dispatching to queue %p
assetinspectorloader_trace
keys
AVAsynchronousLoadingPropertyBatchIDKey
AVAsynchronousLoadingCompletionHandlerKey
com.apple.avfoundation.avasset.completionsQueue
trackPropertyForMediaSelectionOptions
<<<< AVAssetInspectorLoader >>>> %s: <%p> FigAssetGetStatusOfValueForProperty for property <%@> returned %d and load error %d - %@
-[AVFigAssetInspectorLoader _loadStatusForProperty:figAsset:error:]
<<<< AVAssetInspectorLoader >>>> %s: <%p> status requested for key %@ after loading was canceled
-[AVFigAssetInspectorLoader _statusOfValueForKey:error:firstNonLoadedDependencyKey:]
-[AVAsset statusOfValueForKey:error:] invoked with unrecognized key %@.
v24@?0@8^B16
%@ invoked with unrecognized keys %@.
<<<< AVAssetInspectorLoader >>>> %s: called (self: %p, keys: %{public}@, keysForCollectionKeys: %{public}@, handler: %{public}@)
-[AVFigAssetInspectorLoader loadValuesAsynchronouslyForKeys:keysForCollectionKeys:completionHandler:]
(keys == nil) || [keys isKindOfClass:[NSArray class]]
[keysForCollectionKeys isKindOfClass:[NSDictionary class]]
[[keysForCollectionKeys objectForKey:thisKey] isKindOfClass:[NSArray class]]
<<<< AVAssetInspectorLoader >>>> %s: <%p> loadValuesAsynchronouslyForKeys:%@ keysForCollectionKeys:%@ completionHandler:<%p>
-[AVAsset loadValuesAsynchronouslyForKeys:completionHandler:]
-[AVAsset loadValuesAsynchronouslyForKeys:keysForCollectionKeys:completionHandler:] invoked with unrecognized AVAssetTrack keys %@.
<<<< AVAssetInspectorLoader >>>> %s: Calling FigAssetLoadValuesAsyncForProperties for properties %{public}@
<<<< AVAssetInspectorLoader >>>> %s: Batch %p: asset batch ID = %ld (err=%d, alreadyLoaded=%d)
<<<< AVAssetInspectorLoader >>>> %s: Calling FigAssetLoadValuesAsyncForTrackProperties for properties %{public}@
<<<< AVAssetInspectorLoader >>>> %s: Batch %p: track batch ID = %ld (err=%d, alreadyLoaded=%d)
AVAsynchronousLoadingTrackPropertyBatchIDKey
<<<< AVAssetInspectorLoader >>>> %s: <%p> storing completion handler [%p] for later invocation
<<<< AVAssetInspectorLoader >>>> %s: <%p> storing loading batch [%p] with %@
<<<< AVAssetInspectorLoader >>>> %s: <%p> invoking completion handler [%p] immediately
<<<< AVAssetInspectorLoader >>>> %s: Batch %p: invoking completion handler immediately
<<<< AVAssetInspectorLoader >>>> %s: Been waiting for key "%{public}@" to load since %{public}@.  Current status is %d.  First non-loaded dependency key is "%{public}@"
-[AVFigAssetInspectorLoader _ensureAllDependenciesOfKeyAreLoaded:]
exportable
readable
composable
, batchID = %ld
, track batchID = %ld
<<<< AVAssetInspectorLoader >>>> %s: Batch %p: dispatching completion handler%{public}@%{public}@
-[AVFigAssetInspectorLoader _invokeCompletionHandlerForLoadingBatches:]
<<<< AVAssetInspectorLoader >>>> %s: <%p> dispatching completion handler [%p]
<<<< AVAssetInspectorLoader >>>> %s: No completion handler to invoke
<<<< AVAssetInspectorLoader >>>> %s: No completed batches
assetCache
shouldMatchDataInCacheByURLPathComponentOnly
shouldMatchDataInCacheByURLWithoutQueryComponent
cacheKey
downloadDestinationURL
isProxy
variants
contentKeySpecifiersEligibleForPreloading
preferredRate
preferredSoundCheckVolumeNormalization
providesPreciseDurationAndTiming
referenceRestrictions
lyrics
commonMetadata
ID3Metadata
preferredMediaSelection
allMediaSelections
hasProtectedContent
playable
compatibleWithSavedPhotosAlbum
compatibleWithAirPlayVideo
audioAlternatesTrackGroup
subtitleAlternatesTrackGroup
alternateTrackGroups
identifyingTag
identifyingTagClass
instanceIdentifier
resolvedURL
SHA1Digest
figAsset
playbackItem
canContainFragments
containsFragments
canContainMovieFragments
containsMovieFragments
firstFragmentSequenceNumber
fragmentCount
overallDurationHint
moovAtomSize
propertyListForProxy
supportsAnalysisReporting
assetAnalysisMessages
maximumVideoResolution
availableVideoDynamicRanges
minimumTimeOffsetFromLive
resourceLoader
mayRequireContentKeysForMediaDataProcessing
<<<< AVAssetInspectorLoader >>>> %s: FigAssetCreateWithURL for URL <%@> returned %d
createFigAsset
<<<< AVAssetInspectorLoader >>>> %s: <%p> got notification <%@>
handleAndReflectFigAssetNotification
<<<< AVAssetInspectorLoader >>>> %s: Received kFigAssetNotification_BatchPropertyLoadComplete (payload: %{public}@)
handleFigAssetLoadingNotification
<<<< AVAssetInspectorLoader >>>> %s: Received %@ from %p (payload: %@)
<<<< AVAssetInspectorLoader >>>> %s: <%p> got notification <%@> for batchID %@
<<<< AVAssetInspectorLoader >>>> %s: <%p> loading batch [%p] has count of %d on entry
handleFigAssetLoadingNotification_block_invoke
<<<< AVAssetInspectorLoader >>>> %s: Batch %p: Marking asset batch ID %ld as complete
<<<< AVAssetInspectorLoader >>>> %s: <%p> loading batch [%p] has count of %d on exit with %@
<<<< AVAssetInspectorLoader >>>> %s: Batch %p: Marking track batch ID %ld as complete
AVRoutingSessionManagerCurrentSessionDidChangeNotification
AVRoutingSessionManagerLikelyExternalDestinationsDidChangeNotification
AVRoutingSessionManagerAllLikelyDestinationsDidChangeNotification
routingsession_trace
<<<< AVRoutingSessionManager >>>> %s: Using non-FigRoutingSessionManager path
+[AVRoutingSessionManager initialize]
<<<< AVRoutingSessionManager >>>> %s: called
+[AVRoutingSessionManager longFormVideoRoutingSessionManager]
<<<< AVRoutingSessionManager >>>> %s: Returning %@
<<<< AVRoutingSessionManager >>>> %s: called (self=%p)
-[AVRoutingSessionManager dealloc]
<%@: %p, currentRoutingSession=%@, likelyExternalDestinations=%@>
-[AVRoutingSessionManager currentRoutingSession]
<<<< AVRoutingSessionManager >>>> %s: returning %@ (self=%p)
-[AVRoutingSessionManager likelyExternalDestinations]
-[AVRoutingSessionManager allLikelyDestinations]
-[AVRoutingSessionManager prefersLikelyDestinationsOverCurrentRoutingSession]
<<<< AVRoutingSessionManager >>>> %s: returning %d (self=%p)
-[AVRoutingSessionManager updateCurrentRoutingSessionFromLikelyDestinationsWithCompletionHandler:]
<<<< AVRoutingSessionManager >>>> %s: invoking completion handler with error %{public}@
Missing required entitlement com.apple.avfoundation.allow-identifying-output-device-details
-[AVRoutingSessionManager startRoutingSessionForHighConfidenceExternalDestinationIfPresentWithCompletionHandler:]
<<<< AVRoutingSessionManager >>>> %s: called (deviceDescriptions=%{private}@)
-[AVRoutingSessionManager startRoutingSessionWithOutputDeviceDescriptions:error:]
-[AVRoutingSessionManager startSuppressingLikelyDestinationsUntilNextPlayEventAndReturnError:]
-[AVRoutingSessionManager stopSuppressingLikelyDestinationsAndReturnError:]
com.apple.avfoundation.allows-set-output-device
<<<< AVAssetTrackInspector >>>> %s: Created track inspector of class %@ 
+[AVAssetTrackInspector assetTrackInspectorWithAsset:trackID:trackIndex:]
assettrackinspector_trace
<<<< AVAssetTrackInspector >>>> %s: can't get FigTrackReader; invalid trackID and negative trackIndex
-[AVTrackReaderInspector _initWithAsset:trackID:trackIndex:]
%c%c%c%c
formatDescriptions
decodable
playabilityValidationResult
enabled
selfContained
totalSampleDataLength
mediaPresentationTimeRange
mediaDecodeTimeRange
requiresFrameReordering
estimatedDataRate
peakDataRate
mediaCharacteristics
dimensions
loudnessInfo
nominalFrameRate
minFrameDuration
segmentsExcludeAudioPrimingAndRemainderDurations
gaplessSourceTimeRange
segmentsAsPresented
layer
defaultAlternateGroupID
provisionalAlternateGroupID
excludedFromAutoselectionInTrackGroup
locale
containsMixedSubtitles
containsOnlyForcedSubtitles
fallbackTrack
associatedSubtitleTrack
pairedForcedOnlySubtitlesTrack
hasAudibleBooksContent
isAudibleBooksContentAuthorized
canProvideSampleCursors
<<<< AVAssetTrackInspector >>>> %s: can't get FigAssetTrack; invalid trackID and negative trackIndex
-[AVFigAssetTrackInspector _initWithAsset:trackID:trackIndex:]
com.apple.avfoundation.avassettrack.completionsQueue
<<<< AVAssetTrackInspector >>>> %s: FigAssetTrackGetStatusOfValueForProperty for property <%@> returned %d and load error %d - %@
-[AVFigAssetTrackInspector _loadStatusForFigAssetTrackProperty:error:]
-[AVAssetTrack statusOfValueForKey:error:] invoked with unrecognized key %@.
-[AVAssetTrack loadValuesAsynchronouslyForKeys:completionHandler:] invoked with unrecognized keys %@.
<<<< AVAssetTrackInspector >>>> %s: FigAssetTrackLoadValuesAsyncForProperties for properties %@ returned %d with loaded == %@ and batchID == %d
-[AVFigAssetTrackInspector loadValuesAsynchronouslyForKeys:completionHandler:]
<<<< AVAssetTrackInspector >>>> %s: storing completion handler [%p] for later invocation
<<<< AVAssetTrackInspector >>>> %s: storing loading batch [%p] with %@
<<<< AVAssetTrackInspector >>>> %s: dispatching completion handler [%p]
-[AVFigAssetTrackInspector _invokeCompletionHandlerForLoadingBatches:]
<<<< AVAssetTrackInspector >>>> %s: [%p] called
-[AVCompositionTrackReaderInspector segments]
<<<< AVAssetTrackInspector >>>> %s: got notification <%@> for batchID %@
handleFigAssetTrackNotification
<<<< AVAssetTrackInspector >>>> %s: loading batch [%p] has count of %d on entry
handleFigAssetTrackNotification_block_invoke
<<<< AVAssetTrackInspector >>>> %s: loading batch [%p] has count of %d on exit with %@
%c[%@ %@]
*** -%@ cannot be sent to an abstract object of class %@: Create a concrete instance!
*** -%@ only defined for abstract class.  Define %@!
*** initialization method -%@ cannot be sent to an abstract object of class %@: Create a concrete instance!
com.apple.AVFCore
xxxxDefaultValuexxxx
/Library/Caches/com.apple.xbs/Sources/AVFoundation_AVFCore_Sim/AVFoundation-2036.2.2/Fig/Utilities/AVBundleResources.m %s: AVLocalizedStringFromTableWithLocale unable to find a localized string; returning an empty string
AVLocalizedStringFromTableWithLocale
<%@: %p, referencedObject = %@>
avsamplebuffergenerator_trace
com.apple.avfoundation.samplegenerator.generation
com.apple.avfoundation.samplegenerator.callback
request != nil
[request startCursor] != nil
requests != nil
sampleHandler != nil
com.apple.avfoundation.avsamplebuffergenerator.data-ready-notifications
{CGPoint=dd}
{CGRect={CGPoint=dd}{CGSize=dd}}
{CGSize=dd}
figSampleInformationoDict != nil
figSegmentTrackReportDict != nil
figSegmentReportDict != nil
ccr_trace
%@ read/write queue
callbackContext != nil
<<<< AVCallbackContextRegistry >>>> %s: registering observer %p (token %p), new observer count %d (self=%p)
-[AVCallbackContextRegistry registerCallbackContextObject:]_block_invoke
callbackContextToken != AVCallbackContextTokenInvalid
<<<< AVCallbackContextRegistry >>>> %s: unregistering callback context token %p, new observer count %d (self=%p)
-[AVCallbackContextRegistry unregisterCallbackContextForToken:]_block_invoke
Cannot unregister token %p that was not vended by %@.  Break on AVCallbackContextRegistryUnrecognizedTokenBreak() to debug.
Cannot look up token %p that was not vended by %@.  Break on AVCallbackContextRegistryUnrecognizedTokenBreak() to debug.
avplayeritemmediadatacollector_trace
%@ only supports listening to notifications from CMNotificationCenterGetDefaultLocalCenter
cmNotificationCenter != NULL
com.apple.avfoundation.avcmnotificationdispatcher.ivars
Cannot remove a listener %@ (callback %p) for %@ from object %p that was never added.  Break on AVCMNotificationDispatcherUnbalancedUnregistrationBreak() to debug.
avblockserializer_trace
<<<< AVBlockScheduler >>>> %s: Some thread is already running a block with this serializer.  Enqueued this block and letting that thread execute it
-[AVSerializedMostlySynchronousReentrantBlockScheduler scheduleBlock:]
%@ %@
*** %@
avtimedmetadatagroup_trace
Cannot create format description for metadata group %p%@
<%@: %p, timeRange=%@, items=%@>
<%@: %p, startDate=%@, endDate=%@ classifyingLabel=%@ uniqueID=%@ items=%@>
[propertyList isKindOfClass:[NSDictionary class]]
<<<< AVTimedMetadataGroup >>>> %s: Value %@ for kFigPlaybackItemTaggedRangeMetadataKey_StartDate must be an instance of NSDate
-[AVDateRangeMetadataGroup(AVDateRangeMetadataGroup_Local) _extractPropertiesFromTaggedRangeMetadataDictionary:]
<<<< AVTimedMetadataGroup >>>> %s: Value %@ for kFigPlaybackItemTaggedRangeMetadataKey_Duration must be an instance of NSNumber
<<<< AVTimedMetadataGroup >>>> %s: Value %@ for kFigPlaybackItemTaggedRangeMetadataKey_MetadataArray must be an instance of NSArray
<<<< AVTimedMetadataGroup >>>> %s: Value %@ for kFigPlaybackItemTaggedRangeMetadataKey_Class must be an instance of NSString
<<<< AVTimedMetadataGroup >>>> %s: Value %@ for kFigPlaybackItemTaggedRangeMetadataKey_ID must be an instance of NSString
<<<< AVTimedMetadataGroup >>>> %s: Value %@ for kFigPlaybackItemTaggedRangeMetadataKey_DiscoveryTimestamp must be an instance of NSDate
<<<< AVTimedMetadataGroup >>>> %s: Value %@ for kFigPlaybackItemTaggedRangeMetadataKey_ModificationTimestamp must be an instance of NSDate
The identifier for one or more of the following items is invalid: %@.  See +[%@ %@] for a way to construct a valid identifier from a key and key space
Data type "%@" does not conform to any built-in data type.  See CMMetadataDataTypeRegistryRegisterDataType.
Metadata item %p has no value
No entry in format description %p for metadata item %p with identifier %@, data type %@ and extended language tag %@.  If you created this format description using -[%@ %@], make sure the instance of %@ used to create the format description contains a representative sample of metadata items which includes an item with the same combination of identifier, dataType, and extended language tag as this one
Value "%@" of class %@ in metadata item %p is not compatible with base data type %@
avassetcache_trace
<<<< AVAssetCache >>>> %s: Initialized with URL %@
-[AVManagedAssetCache initWithURL:enableCRABSCache:enableHLSCache:]
<<<< AVAssetCache >>>> %s: Set maxSize = %lld
-[AVManagedAssetCache setMaxSize:]
<<<< AVAssetCache >>>> %s: Set maxEntrySize = %lld
-[AVManagedAssetCache setMaxEntrySize:]
<<<< AVAssetCache >>>> %s: Remove entry with key = %@
-[AVManagedAssetCache removeEntryForKey:]
B32@?0@"AVMediaSelectionOption"8Q16^B24
AVPlatformIdentifierMacOS
AVPlatformIdentifierIOS
AVPlatformIdentifierWatchOS
AVPlatformIdentifierTVOS
platformutilities_trace
AVExecutionEnvironmentCurrentPlatformIdentifierKey
-[AVDelegatingPlaybackCoordinatorPlaybackControlCommand init] unavailable
-[AVDelegatingPlaybackCoordinatorPlayCommand init] unavailable
-[AVDelegatingPlaybackCoordinatorBufferingCommand init] unavailable
-[AVDelegatingPlaybackCoordinatorPauseCommand init] unavailable
-[AVDelegatingPlaybackCoordinatorSeekCommand init] unavailable
/Library/Caches/com.apple.xbs/Sources/AVFoundation_AVFCore_Sim/AVFoundation-2036.2.2/Fig/AVDelegatingPlaybackCoordinator.m %s: %@ Setting IsExpanseMediaSession %s on AVAudioSession error %@
-[AVDelegatingPlaybackCoordinator _setIsInExpanseMediaPlaybackOnAVAudioSession]
com.apple.avfoundation.avdelegatingplaybackcoordinator.timelinecontrol
com.apple.avdelegatingplaybackcoordinator.figtimelinecoordinator.config
com.apple.avfoundation.avdelegatingplaybackcoordinator.ivars
/Library/Caches/com.apple.xbs/Sources/AVFoundation_AVFCore_Sim/AVFoundation-2036.2.2/Fig/AVDelegatingPlaybackCoordinator.m %s: called (self = %@, for SuspensionReasonsChanged notification, with payload = %@)
-[AVDelegatingPlaybackCoordinator initWithPlaybackControlDelegate:]_block_invoke
/Library/Caches/com.apple.xbs/Sources/AVFoundation_AVFCore_Sim/AVFoundation-2036.2.2/Fig/AVDelegatingPlaybackCoordinator.m %s: called (self = %@, for ParticipantsChanged notification, with payload = %@)
/Library/Caches/com.apple.xbs/Sources/AVFoundation_AVFCore_Sim/AVFoundation-2036.2.2/Fig/AVDelegatingPlaybackCoordinator.m %s: called (self = %@, for DidIssueCommandToTimelineControl notification, with payload = %@)
-[AVDelegatingPlaybackCoordinator initWithPlaybackControlDelegate:]_block_invoke_2
/Library/Caches/com.apple.xbs/Sources/AVFoundation_AVFCore_Sim/AVFoundation-2036.2.2/Fig/AVDelegatingPlaybackCoordinator.m %s: Error creating timeline coordinator: %d
-[AVDelegatingPlaybackCoordinator initWithPlaybackControlDelegate:]
/Library/Caches/com.apple.xbs/Sources/AVFoundation_AVFCore_Sim/AVFoundation-2036.2.2/Fig/AVDelegatingPlaybackCoordinator.m %s: FigTimelineCoordinator gave a participantID which is not present in otherParticipants
-[AVDelegatingPlaybackCoordinator participantForIdentifier:]_block_invoke
/Library/Caches/com.apple.xbs/Sources/AVFoundation_AVFCore_Sim/AVFoundation-2036.2.2/Fig/AVDelegatingPlaybackCoordinator.m %s: <%p> beginning suspension with reason %@
-[AVDelegatingPlaybackCoordinator beginSuspensionForReason:]
/Library/Caches/com.apple.xbs/Sources/AVFoundation_AVFCore_Sim/AVFoundation-2036.2.2/Fig/AVDelegatingPlaybackCoordinator.m %s: <%p> ending figSuspension %p
-[AVDelegatingPlaybackCoordinator _endSuspension:]
/Library/Caches/com.apple.xbs/Sources/AVFoundation_AVFCore_Sim/AVFoundation-2036.2.2/Fig/AVDelegatingPlaybackCoordinator.m %s: <%p> ending figSuspension %p proposing new time %f
-[AVDelegatingPlaybackCoordinator _endSuspension:proposingNewTime:]
/Library/Caches/com.apple.xbs/Sources/AVFoundation_AVFCore_Sim/AVFoundation-2036.2.2/Fig/AVDelegatingPlaybackCoordinator.m %s: <%p> setting waiting policies %@ on playback coordinator
-[AVDelegatingPlaybackCoordinator _setWaitingPolicies:]
/Library/Caches/com.apple.xbs/Sources/AVFoundation_AVFCore_Sim/AVFoundation-2036.2.2/Fig/AVDelegatingPlaybackCoordinator.m %s: <%p> setting pauseSnapsToMediaTimeOfOrginator:%@ on playback coordinator
-[AVDelegatingPlaybackCoordinator setPauseSnapsToMediaTimeOfOriginator:]_block_invoke
/Library/Caches/com.apple.xbs/Sources/AVFoundation_AVFCore_Sim/AVFoundation-2036.2.2/Fig/AVDelegatingPlaybackCoordinator.m %s: FigTimelineCoordinator trying to broadcast timeline state but coordination medium delegate is nil
AVDelegatingPlaybackCoordinatorBroadcastTimelineStateCallback
/Library/Caches/com.apple.xbs/Sources/AVFoundation_AVFCore_Sim/AVFoundation-2036.2.2/Fig/AVDelegatingPlaybackCoordinator.m %s: FigTimelineCoordinator trying to broadcast participant state but coordination medium delegate is nil
AVDelegatingPlaybackCoordinatorBroadcastParticipantStateCallback
/Library/Caches/com.apple.xbs/Sources/AVFoundation_AVFCore_Sim/AVFoundation-2036.2.2/Fig/AVDelegatingPlaybackCoordinator.m %s: FigTimelineCoordinator trying to reload timeline state but coordination medium delegate is nil
AVDelegatingPlaybackCoordinatorAsynchronouslyReloadTimelineStateCallback
AVFragmentedMovieDurationDidChangeNotification
AVFragmentedMovieWasDefragmentedNotification
AVFragmentedMovieContainsMovieFragmentsDidChangeNotification
AVFragmentedMovieTrackTimeRangeDidChangeNotification
AVFragmentedMovieTrackSegmentsDidChangeNotification
AVExternalPlaybackMonitorAirPlayVideoActiveDidChangeNotification
AVExternalPlaybackMonitorAirPlayVideoPlayingDidChangeNotification
playbackmonitor_trace
<<<< AVExternalPlaybackMonitor >>>> %s: Using non-FigRoutingSessionManager path
+[AVExternalPlaybackMonitor initialize]
<<<< AVExternalPlaybackMonitor >>>> %s: called
+[AVExternalPlaybackMonitor longFormVideoExternalPlaybackMonitor]
<<<< AVExternalPlaybackMonitor >>>> %s: returning %@
<<<< AVExternalPlaybackMonitor >>>> %s: called (self=%p)
-[AVExternalPlaybackMonitor dealloc]
<%@: %p, airPlayVideoActive=%d, airPlayVideoPlaying=%d>
-[AVExternalPlaybackMonitor isAirPlayVideoActive]
<<<< AVExternalPlaybackMonitor >>>> %s: returning %d (self=%p)
-[AVExternalPlaybackMonitor isAirPlayVideoPlaying]
Audio/Video
UserInterfaceSoundEffects
LiveAudio
Ringtone
RingtonePreview
PhoneCall
TTYCall
AVAudioSessionMediaPlayerOnlyModeMoviePlayback
AVAudioSessionMediaPlayerOnlyModeSpokenAudio
FindMyPhone
AVAudioSessionPickableRoutesDidChangeNotification
AVAudioSessionCanEnterPIPModeDidChangeNotification
avaudiosessionmediaplayeronly_trace
<<<< AVAudioSessionMediaPlayerOnly >>>> %s: <%p> setActive figPlayer <%p>
-[AVAudioSessionMediaPlayerOnly setActive:withFlags:error:]
<<<< AVAudioSessionMediaPlayerOnly >>>> %s: <%p> called with category = %@%@
-[AVAudioSessionMediaPlayerOnly setCategory:error:]
 from
<<<< AVAudioSessionMediaPlayerOnly >>>> %s: audio category set %@
property
<<<< AVAudioSessionMediaPlayerOnly >>>> %s: <%p> called with mode = %@%@
-[AVAudioSessionMediaPlayerOnly setMode:error:]
 from
<<<< AVAudioSessionMediaPlayerOnly >>>> %s: mode set %@
<<<< AVAudioSessionMediaPlayerOnly >>>> %s: Attempt to attach AVAudioSessionMediaPlayerOnly to AVPlayer <%p> with no FigPlayer
-[AVAudioSessionMediaPlayerOnly _attachToPlayer:]
<<<< AVAudioSessionMediaPlayerOnly >>>> %s: set category failed
<<<< AVAudioSessionMediaPlayerOnly >>>> %s: set mode failed
<<<< AVAudioSessionMediaPlayerOnly >>>> %s: Attempt to attach AVAudioSessionMediaPlayerOnly to AVPlayer <%p> when already attached
<<<< AVAudioSessionMediaPlayerOnly >>>> %s: called (self = %@, inNotificationName = %@)
avaudiosession_fpNotificationCallback
non-resumable
avmediaselectiongroup_trace
<%@: %p, options = %@, allowsEmptySelection = %@>
<<<< AVMediaSelectionGroup >>>> %s: *** Could not canonicalize language: %@. ***
+[AVMediaSelectionGroup mediaSelectionOptionsFromArray:filteredAndSortedAccordingToPreferredLanguages:]
AVMediaSelectionTrackOptionCharacteristicsKey
<<<< AVMediaSelectionGroup >>>> %s: <%p> called with property list %@
-[AVAssetMediaSelectionGroup mediaSelectionOptionWithPropertyList:]
AVMediaSelectionTrackOptionTrackIDKey
AVMediaSelectionTrackOptionSettingsKey
AVMediaSelectionKeyValueOptionMediaTypeKey
AVMediaSelectionKeyValueOptionGroupIDKey
<<<< AVMediaSelectionGroup >>>> %s: <%p> resolved to option %@
<%@: %p, language = %@%@>
, title = %@
, associated language = %@
, tagged media characteristics = {%@}
, default = YES
, auxiliary = YES
, fallback track or variant IDs = {%@}
, forced subtitles only
, associated forced-only option = <%@: %p>
'%c%c%c%c'
, mediaSubTypes = {%@}
, mediaType = '%@'%@%@%@%@%@%@%@
SUBTITLE_TRACK_DISPLAY_FORMAT
AVMediaSelectionOption
SDH_SUBTITLE_FORMAT
FORCEDONLY_SUBTITLE_FORMAT
EASYTOREAD_SUBTITLE_FORMAT
CC_SUBTITLE_FORMAT
DESCRIBESVIDEO_AUDIO_FORMAT
VOICEOVERTRANSLATION_AUDIO_FORMAT
AUDIOENCODING_AUDIO_FORMAT
UNKNOWN_LANGUAGE
displayNameWithLocale requires an NSLocale
nil selection option for the following group: %@
inspector_trace
Output settings dictionary is empty and valid
Output settings dictionary is valid
Output settings dictionary contains one or more invalid keys: %@
outputSettingsDictionary != nil
Output settings dictionary does not contain any recognized keys
<%@: %p, outputSettingsDictionary=%@>
UTI != nil
Invalid file type UTI.  Available file types are: %@
<%@: %p, UTI = %@>
formatDesc != NULL
fileType != nil
Format ID '%@' is not compatible with file type %@
Cannot write non-interleaved audio to a file
[[fileType UTI] isEqualToString:AVFileTypeWAVE]
WAVE files cannot contain floating-point LPCM
WAVE files cannot contain big-endian LPCM
[[fileType UTI] isEqualToString:AVFileTypeAIFF]
AIFF files cannot contain floating-point LPCM
AIFF files cannot contain little-endian LPCM
[[fileType UTI] isEqualToString:AVFileTypeAIFC]
AIFC files cannot contain little-endian LPCM
The video codec %@ is not compatible with file type %@
Uncompressed video is not allowed for file type %@
not implemented
avAudioSettingsDictionary != nil
AVAudioSettings dictionary must contain AVFormatIDKey
Cannot specify both AVEncoderBitRateKey and AVEncoderBitRatePerChannelKey
If one of AVLinearPCMIsFloatKey and AVLinearPCMBitDepthKey is specified, both must be specified
Bit depth can only be one of: %@
Bit depth hint can only be one of: %@
Bit rate strategy can only be one of: %@
Value for AVEncoderAudioQualityForVBRKey must be an instance of %@
Cannot specify a value for AVEncoderAudioQualityForVBRKey without also specifying AVAudioBitRateStrategy_Variable for AVEncoderBitRateStrategyKey
Floating-point LPCM must be 32-bit
Channel count must be positive
AudioChannelLayout is invalid
AudioChannelLayout channel count must be positive
AudioChannelLayout channel count does not match AVNumberOfChannelsKey channel count
Invalid value %.2f for AVSampleRateKey; sample rate must be between 8.0 and 192.0 kHz inclusive
Value for AVSampleRateConverterAlgorithmKey must be an instance of NSString
Unrecognized value "%@" for AVSampleRateConverterAlgorithmKey
The following keys are not allowed when format ID is '%@': %@
%g Hz is not a valid sample rate for Format ID '%@'.  Use kAudioFormatProperty_AvailableEncodeSampleRates (<AudioToolbox/AudioFormat.h>) to enumerate available rates for a given format.
%d is not a valid channel count for Format ID '%@'.  Use kAudioFormatProperty_AvailableEncodeNumberChannels (<AudioToolbox/AudioFormat.h>) to enumerate available channel counts for a given format.
Channel layout is not valid for Format ID '%@'.  Use kAudioFormatProperty_AvailableEncodeChannelLayoutTags (<AudioToolbox/AudioFormat.h>) to enumerate available channel layout tags for a given format.
Missing required key %@
/Library/Caches/com.apple.xbs/Sources/AVFoundation_AVFCore_Sim/AVFoundation-2036.2.2/Fig/Utilities/AVAudioOutputSettings.m %s: Need to either provide fully-formed dictionary or source format description
-[AVAVAudioSettingsAudioOutputSettings getAudioStreamBasicDescription:forAudioFileTypeID:sourceFormatDescription:]
/Library/Caches/com.apple.xbs/Sources/AVFoundation_AVFCore_Sim/AVFoundation-2036.2.2/Fig/Utilities/AVAudioOutputSettings.m %s: Invalid source format flags - not one of the supported lossless bit depths
Unrecognized bit rate strategy
Unrecognized value for %@: %@
Pixel buffer attributes width and height must be nonnegative
Value for AVVideoScalingModeKey must be one of: %@
Value for kCVPixelBufferMetalCompatibilityKey must be an NSNumber wrapping a BOOL
Compression property %@ is not supported for video codec type %@
Video codec type %@ expects a value for compression property %@ in a particular numeric range, but property value %@ is not numeric
Video codec type %@ does not allow values for %@ that are numerically less than %@
Video codec type %@ does not allow values for %@ that are numerically greater than %@
For compression property %@, video codec type %@ only allows the following values: %@
av_kVTPropertyInitialValueKey
For compression property %@, video codec type %@ only allows the value %@
avVideoSettingsDictionary != nil
AVVideoSettings dictionary must contain AVVideoCodecKey
AVVideoSettings dictionary must specify a height if it specifies a width
AVVideoSettings dictionary must specify a width if it specifies a height
AVVideoSettings dictionary must specify a positive width
AVVideoSettings dictionary must specify a positive height
AVVideoCompressionPropertiesKey dictionary must specify a positive value for AVVideoAverageBitRateKey
AVVideoCompressionPropertiesKey dictionary must specify a value between 0.0 and 1.0 for AVVideoQualityKey
AVVideoCompressionPropertiesKey dictionary must specify a non-negative value for AVVideoMaxKeyFrameIntervalDurationKey
AVVideoCompressionPropertiesKey dictionary must specify a positive value for AVVideoMaxKeyFrameIntervalKey
Value for AVVideoH264EntropyModeKey must be an instance of NSString
Value for AVVideoExpectedSourceFrameRateKey must be an instance of NSNumber
Value for AVVideoAllowFrameReorderingKey must be an instance of NSNumber
Value for AVVideoAverageNonDroppableFrameRateKey must be an instance of NSNumber
Dictionary for AVVideoPixelAspectRatioKey contains one or more unrecognized keys: %@
Value for AVVideoPixelAspectRatioKey must be an instance of NSDictionary
Dictionary for AVVideoPixelAspectRatioKey must specify a positive value for AVVideoPixelAspectRatioHorizontalSpacingKey
Dictionary for AVVideoPixelAspectRatioKey must specify a positive value for AVVideoPixelAspectRatioVerticalSpacingKey
Dictionary for AVVideoPixelAspectRatioKey must contain NSNumber values for both AVVideoPixelAspectRatioHorizontalSpacingKey and AVVideoPixelAspectRatioVerticalSpacingKey
Dictionary for AVVideoCleanApertureKey contains one or more unrecognized keys: %@
Clean aperture region must be contained within the bounds specified by width & height
Value for AVVideoCleanApertureKey must be an instance of NSDictionary
Dictionary for AVVideoCleanApertureKey must specify a value for AVVideoCleanApertureWidthKey
Dictionary for AVVideoCleanApertureKey must specify a value for AVVideoCleanApertureHeightKey
Dictionary for AVVideoCleanApertureKey must specify a value for AVVideoCleanApertureHorizontalOffsetKey
Dictionary for AVVideoCleanApertureKey must specify a value for AVVideoCleanApertureVerticalOffsetKey
Value for AVVideoCleanApertureWidthKey must be an instance of NSNumber
Value for AVVideoCleanApertureHeightKey must be an instance of NSNumber
Value for AVVideoCleanApertureHorizontalOffsetKey must be an instance of NSNumber
Value for AVVideoCleanApertureVerticalOffsetKey must be an instance of NSNumber
Dictionary for AVVideoCleanApertureKey must specify a positive value for AVVideoCleanApertureWidthKey
Dictionary for AVVideoCleanApertureKey must specify a positive value for AVVideoCleanApertureHeightKey
Dictionary for AVVideoColorPropertiesKey must contain all three color keys (AVVideoColorPrimariesKey, AVVideoTransferFunctionKey, AVVideoYCbCrMatrixKey) and it may not contain any other keys
Value for AVVideoColorPrimariesKey must be one of: %@
Value for AVVideoTransferFunctionKey must be one of: %@
Value for AVVideoYCbCrMatrixKey must be one of: %@
Dictionary for AVVideoColorPropertiesKey must be an NSDictionary
Dictionary for AVVideoAllowWideColorKey must be an NSNumber
AVVideoMinimumFrameDuration must be numeric
AVVideoMinimumFrameDuration must be greater than kCMTimeZero
Dictionary for AVVideoMinimumFrameDuration must be an NSDictionary
AVVideoFrameRateConversionAlgorithm must be either AVVideoFrameRateConversionAlgorithmFast or AVVideoFrameRateConversionAlgorithmPrecise
String for AVVideoFrameRateConversionAlgorithm must be an NSString
kVTDecompressionPropertyKey_FieldMode must be one of: kVTDecompressionProperty_FieldMode_BothFields, kVTDecompressionProperty_FieldMode_TopFieldOnly, kVTDecompressionProperty_FieldMode_BottomFieldOnly, kVTDecompressionProperty_FieldMode_SingleField, or kVTDecompressionProperty_FieldMode_DeinterlaceFields
String for kVTDecompressionPropertyKey_FieldMode must be an NSString
Value for kVTDecompressionPropertyKey_PropagatePerFrameHDRDisplayMetadata must be an NSNumber
AVVideoEmitSequencesAtSyncFramesOnly must be greater than zero
AVVideoEmitSequencesAtSyncFramesOnly must be an NSNumber
AVVideoPixelAspectRatioKey can only be specified at the top level of the dictionary or in the AVVideoCompressionPropertiesKey sub-dictionary, not both
Pixel aspect ratio can only be specified once
Value for pixel aspect ratio must be an instance of NSDictionary
AVVideoCleanApertureKey can only be specified at the top level of the dictionary or in the AVVideoCompressionPropertiesKey sub-dictionary, not both
Clean aperture can only be specified once
Value for clean aperture must be an instance of NSDictionary
<%@: %p, minimum = %f, maximum = %f>
AVAssetDownloadSessionDownloadSucceededNotification
AVAssetDownloadSessionDownloadFailedNotification
AVAssetDownloadSessionFileSizeAvailableNotification
AVAssetDownloadSessionLoadedTimeRangesChangedNotification
AVAssetDownloadSessionCurrentLoadedTimeRangesKey
AVAssetDownloadSessionNewlyLoadedTimeRangeKey
AVAssetDownloadSessionTimeRangeExpectedToLoadKey
AVAssetDownloadSessionDidResolveMediaSelectionNotification
AVAssetDownloadSessionPriorityKey
AVAssetDownloadSessionProtectedContentSupportStorageURLKey
AVAssetDownloadSessionPurchaseBundleKey
AVAssetDownloadSessionAirPlayAuthorizationInfoKey
AVAssetDownloadSessionCachePrimingDownloadTokenKey
AVAssetDownloadSessioniTunesStoreContentInfoKey
AVAssetDownloadSessioniTunesStoreContentIDKey
AVAssetDownloadSessioniTunesStoreContentTypeKey
AVAssetDownloadSessioniTunesStoreContentUserAgentKey
AVAssetDownloadSessioniTunesStoreContentDownloadParametersKey
AVAssetDownloadSessioniTunesStoreContentDSIDKey
AVAssetDownloadSessioniTunesStoreContentPurchasedMediaKindKey
AVAssetDownloadSessionHTTPCookiesKey
AVAssetDownloadSessionClientBundleIdentifierKey
AVAssetDownloadSessionHTTPHeaderFieldsKey
AVAssetDownloadSessionClientAuditTokenKey
AVAssetDownloadSessionMaxSizeAllowedForCellularAccessKey
AVAssetDownloadSessionAllowsCellularAccessKey
AVAssetDownloadSessionAllowsExpensiveNetworkAccessKey
AVAssetDownloadSessionAllowsConstrainedNetworkAccessKey
AVAssetDownloadSessionMinimumRequiredMediaBitrateKey
AVAssetDownloadSessionMediaSelectionKey
AVAssetDownloadSessionDeleteDownloadWhenAssetFinalizesKey
AVAssetDownloadSessionLinkAssetURLToDestinationURLKey
AVAssetDownloadSessionShouldStoreEligibleContentKeysKey
AVAssetDownloadSessionAssetNameKey
AVAssetDownloadSessionAssetImageDataKey
AVAssetDownloadSessionOptimizeAccessForLinearMoviePlaybackKey
AVAssetDownloadSessionAlternativeConfigurationOptionsKey
AVAssetDownloadSessionMediaSelectionPrefersMultichannelKey
AVAssetDownloadSessionDebugIdentifierKey
AVAssetDownloadTaskMinimumRequiredMediaBitrateKey
AVAssetDownloadTaskMediaSelectionKey
AVAssetDownloadTaskShouldStoreEligibleContentKeysKey
AVAssetDownloadTaskDestinationURLKey
AVAssetDownloadTaskMinimumRequiredPresentationSizeKey
AVAssetDownloadTaskAllowHighDynamicRangeKey
AVAssetDownloadTaskMediaSelectionPrefersMultichannelKey
AVAssetDownloadTaskMediaSelectionPrefersMultichannelOnlyKey
AVAssetDownloadTaskMediaSelectionPrefersMultichannelForMostPreferredLanguageOnlyKey
AVAssetDownloadTaskMediaSelectionsForMultichannelKey
AVAssetDownloadTaskPrefersHDRKey
AVAssetDownloadTaskMinimumRequiredMediaBitrateForHEVCKey
AVAssetDownloadTaskPrefersMostCompatibleRenditionKey
AVAssetDownloadSessionRetryErrorKey
AVAssetDownloadTaskClientIsCatalyst
AVAssetDownloadTaskPrefersLosslessAudioKey
AVAssetDownloadTaskMaximumAudioSampleRateKey
AVAssetDownloadTaskDownloadConfigurationKey
download_trace
<%@: %p> read/write queue
com.apple.avfoundation.avassetdownloadsession
URL != nil
[destinationURL isFileURL]
<<<< AVAssetDownloadSession >>>> %s: [%p] Download from %@ to %@
-[AVAssetDownloadSession initWithURL:destinationURL:options:]
AVAssetDownloadSessionMaxSizeAllowedForCellularAccessKey and AVAssetDownloadSessionAllowsCellularAccessKey options are incompatible
<<<< AVAssetDownloadSession >>>> %s: [%p] FigAssetCreateWithURL for URL <%@> returned %d
downloadToken > 0
<<<< AVAssetDownloadSession >>>> %s: [%p] Called with %lld
-[AVAssetDownloadSession initWithDownloadToken:]
AVAssetDownloadTaskDownloadConfiguration
asset != nil || options[@"AVAssetDownloadTaskDownloadConfiguration"] != nil || options[AVAssetDownloadTaskDownloadConfigurationKey] != nil
(asset != nil && [asset isKindOfClass:[AVURLAsset class]]) || asset == nil
mediaSelections == nil || [mediaSelections isKindOfClass:[NSArray class]]
<<<< AVAssetDownloadSession >>>> %s: [%p] Called with asset:%@ destinationURL:%@
-[AVAssetDownloadSession initWithAsset:mediaSelections:destinationURL:options:]
<<<< AVAssetDownloadSession >>>> %s: Failed to start - %@
-[AVAssetDownloadSession start]
<<<< AVAssetDownloadSession >>>> %s: [%p] Pause download
-[AVAssetDownloadSession pause]_block_invoke
<<<< AVAssetDownloadSession >>>> %s: [%p] Stop download
-[AVAssetDownloadSession stop]_block_invoke
<<<< AVAssetDownloadSession >>>> %s: [%p] Download %s
-[AVAssetDownloadSession(AVAssetDownloadSession_StreamingAssetOrchestratorSupport) _transitionToTerminalStatusForDelegateCallbacksWithStatus:error:]_block_invoke
completed
failed
<<<< AVAssetDownloadSession >>>> %s: [%p] loaded assetType:[%s] loadingStatus:%d error:%@
-[AVAssetDownloadSession(AVAssetDownloadSession_Local) _setupFigClientObjectAsync:]_block_invoke_2
file
NULL figAsset
-[AVAssetDownloadSession(AVAssetDownloadSession_Local) _setFileFigAsset:]
/Library/Caches/com.apple.xbs/Sources/AVFoundation_AVFCore_Sim/AVFoundation-2036.2.2/Fig/AVAssetDownloadSession.m
figAsset already set
<<<< AVAssetDownloadSession >>>> %s: [%p] Start download
-[AVAssetDownloadSession(AVAssetDownloadSession_Local) _startOnQueueFirstTime]
<<<< AVAssetDownloadSession >>>> %s: [%p] Going from paused to start download
-[AVAssetDownloadSession(AVAssetDownloadSession_Local) _startOnQueue]
-[AVAssetDownloadSession(AVAssetDownloadSession_Local) _transitionToTerminalStatus:error:]_block_invoke
<<<< AVAssetDownloadSession >>>> %s: [%p] Called
-[AVAssetDownloadSession(AVAssetDownloadSession_Local) _primeCacheOnDispatchQueue]
<<<< AVAssetDownloadSession >>>> %s: Failed to prime cache - %@
-[AVAssetDownloadSession(AVAssetDownloadSession_Local) _primeCache]
<<<< AVAssetDownloadSession >>>> %s: [%p] Priming cache with download token %@
-[AVAssetDownloadSession(AVAssetDownloadSession_Local) _readyForInspection]
<<<< AVAssetDownloadSession >>>> %s: Must initialize AVAssetDownloadSession with initWithAsset:destinationURL:options: for streaming assets.
-[AVAssetDownloadSession(AVAssetDownloadSession_Local) _verifyDownloadConfigurationForAssetType]
<<<< AVAssetDownloadSession >>>> %s: [%p] called with notification name %@
avAssetDownloadSession_figAssetNotificationCallback
<<<< AVAssetDownloadSession >>>> %s: Failed to load property %@ - %@
<<<< AVAssetDownloadSession >>>> %s: Failed to download to destination - %@
<<<< AVAssetDownloadSession >>>> %s: [%p] called with notification name %@ payload %@
avAssetDownloadSession_figPlaybackItemNotificationCallback
<<<< AVAssetDownloadSession >>>> %s: Failed to make ready for inspection - %@
avsamplecursor_trace
<%@: %p, PTS = %@, DTS = %@>
<<<< AVSampleCursor >>>> %s: FigSampleCursorStepByDecodeTime failed (%d)
-[AVSampleCursor stepByDecodeTime:wasPinned:]
<<<< AVSampleCursor >>>> %s: FigSampleCursorStepByPresentationTime failed (%d)
-[AVSampleCursor stepByPresentationTime:wasPinned:]
<<<< AVSampleCursor >>>> %s: FigSampleCursorCreateSampleBuffer failed (%d)
-[AVSampleCursor createSampleBufferForCurrentSampleReturningError:]
-[AVSampleCursor createSampleBufferFromCurrentSampleToEndCursor:error:]
avplayeritemoutput_trace
<%@: %p> timebase read/write queue
<<<< AVPlayerItemOutput >>>> %s: Unable to convert host time stamp to item time. Client sees kCMTimeInvalid.
-[AVPlayerItemOutput _itemTimeForHostTimeAsCMTime:]
AVPlayerItemVideoOutput does not support compressed output
<<<< AVPlayerItemOutput >>>> %s: FigVisualContextCreate failed: %d
-[AVPlayerItemVideoOutput setUpWithOutputSettings:outputSettingsArePixelBufferAttributes:withExceptionReason:]
<<<< AVPlayerItemOutput >>>> %s: FigVisualContextSetImageAvailableSequentialCallback failed: %d
AVPlayerItemOutput queue
<<<< AVPlayerItemOutput >>>> %s:  Error: requestNotificationOfMediaDataChangeAsSoonAsPossible was valid when requesting requestNotificationOfMediaDataChangeWithAdvanceInterval. requestNotificationOfMediaDataChangeAsSoonAsPossible has been deactivated
-[AVPlayerItemVideoOutput requestNotificationOfMediaDataChangeWithAdvanceInterval:]_block_invoke
<<<< AVPlayerItemOutput >>>> %s: scheduled wakeup for now
<<<< AVPlayerItemOutput >>>> %s: scheduled wakeup in %.3f s
<<<< AVPlayerItemOutput >>>> %s:  Error: requestNotificationOfMediaDataChangeWithAdvanceInterval was valid when requesting requestNotificationOfMediaDataChangeAsSoonAsPossible. requestNotificationOfMediaDataChangeWithAdvanceInterval is deactivated
-[AVPlayerItemVideoOutput requestNotificationOfMediaDataChangeAsSoonAsPossible]_block_invoke
<<<< AVPlayerItemOutput >>>> %s: Unable to copy next image from visual context. Bailing.
-[AVPlayerItemVideoOutput _copyPixelBufferForItemTimeWithOptions:itemTimeForDisplay:options:]
<<<< AVPlayerItemOutput >>>> %s: FigVisualContextCopyImageForTime did not provide a imageOriginalTimeOut value. Bailing.
<<<< AVPlayerItemOutput >>>> %s: Sending -outputMediaDataWillChange: to delegate
-[AVPlayerItemVideoOutput _dispatchOutputMediaDataWillChange]_block_invoke
<<<< AVPlayerItemOutput >>>> %s: Dispatching -outputSequenceWasFlushed:
-[AVPlayerItemVideoOutput _dispatchOutputSequenceWasFlushed]
<<<< AVPlayerItemOutput >>>> %s: Sending -outputSequenceWasFlushed: to delegate
-[AVPlayerItemVideoOutput _dispatchOutputSequenceWasFlushed]_block_invoke
AVPlayerItemVideoOutput_timebaseNotificationCallback_block_invoke
AVPlayerItemVideoOutput_figVCSequentialAvailable_block_invoke_3
com.apple.avfoundation.avfragmentedassetminder
An %@ cannot mind fragmented assets more frequently than once per millisecond (requested interval was %f)
An %@ cannot mind instances of %@
%@ cannot add an %@ that's already being minded by another fragment minder
*** -[%@ addFragmentedAsset:] specifies an asset that's already associated with a fragment minder. Ignoring.
AVPixelBufferAttributeMediatorPixelBufferAttributesDidChangeNotification
avpixelbufferattributemediator_trace
AVSampleBufferDisplayLayerFailedToDecodeNotification
AVSampleBufferDisplayLayerFailedToDecodeNotificationErrorKey
AVSampleBufferDisplayLayerRequiresFlushToResumeDecodingDidChangeNotification
AVSampleBufferDisplayLayerOutputObscuredDueToInsufficientExternalProtectionDidChangeNotification
AVSampleBufferDisplayLayerVideoRectDidChangeNotification
AVSampleBufferDisplayLayerVisibilityDidChangeNotification
<<<< AVSampleBufferDisplayLayer >>>> %s: Hiding contentLayer because bounds is CGSizeZero
-[AVSampleBufferDisplayLayer _updateLayerTreeGeometryWithVideoGravity:presentationSize:videoGravityShouldTriggerAnimation:]
<<<< AVSampleBufferDisplayLayer >>>> %s: Unhiding contentLayer because bounds is nonzero
<<<< AVSampleBufferDisplayLayer >>>> %s: Setting position(%d,%d), bounds(%dx%d), transform scale(%.3fx%.3f), offset(%d,%d)
avsamplebufferdisplaylayer_trace
AVSampleBufferDisplayLayerQueue
AVSampleBufferDisplayLayer <%p>
AVSampleBufferDisplayLayer <%p> (content layer)
<<<< AVSampleBufferDisplayLayer >>>> %s: [%p] created
-[AVSampleBufferDisplayLayer init]
<<<< AVSampleBufferDisplayLayer >>>> %s: [%p]
-[AVSampleBufferDisplayLayer dealloc]
<<<< AVSampleBufferDisplayLayer >>>> %s: AVSBDL did become visible: %d
-[AVSampleBufferDisplayLayer layerDidBecomeVisible:]
<<<< AVSampleBufferDisplayLayer >>>> %s: videoRect: (%d, %d, %d, %d)
-[AVSampleBufferDisplayLayer videoRect]
<<<< AVSampleBufferDisplayLayer >>>> %s: post notification: %@
-[AVSampleBufferDisplayLayer postVideoRectDidChangeNotification]
sampleBufferVideoRenderer.status
sampleBufferVideoRenderer.error
sampleBufferVideoRenderer.outputObscuredDueToInsufficientExternalProtection
AVSampleBufferDisplayLayer: No formatDescription found in sampleBuffer
StreamingContentKeyRequestRequiresPersistentKey
StreamingContentKeyRequiresiTunesProvisioningKey
endpoint
NSXPCCoder returned NULL endpoint
customURLHandlerObjectID
authHandlerObjectID
contentKeySessionHandlerObjectID
avassetresourceloader_trace
com.apple.avfoundation.avassetresourceloader.state
com.apple.avfoundation.avassetresourceloader.contentInformationCaching
com.apple.avfoundation.avassetresourceloader.handler
AVAssetResourceLoader
com.apple.avfoundation.avassetresourceloader.authhandler
AVAssetResourceLoader-authentication
not an AVAssetResourceLoaderRemoteHandlerContext
-[AVAssetResourceLoader initWithURLRequestHelper:asset:remoteCustomURLHandlerContext:]
/Library/Caches/com.apple.xbs/Sources/AVFoundation_AVFCore_Sim/AVFoundation-2036.2.2/Fig/AVAssetResourceLoader.m
NULL delegateQueue passed
delegate
delegateQueue
<<<< AVAssetResourceLoader >>>> %s: AVAssetResourceLoader delegate does not respond to selector %@
-[AVAssetResourceLoader _performDelegateSelector:withObject:representingNewRequest:key:fallbackHandler:]_block_invoke
v16@?0@"<AVAssetResourceLoaderDelegate>"8
v12@?0B8
The specified challenge must be an instance of NSURLAuthenticationChallenge previously provided by AVAssetResourceLoader
The specified credential must be an instance of NSURLCredential
<%@: %p, content type = "%@", content length = %lld, byte range access supported = %@, disk caching permitted = %@, renewal date = %@>
Accept-Ranges
no-cache
Content-Type
com.apple.avfoundation.avassetresourceloadingdatarequest
<%@: %p, requested offset = %lld, requested length = %lld, requests all data to end of resource = %@, current offset = %lld>
<<<< AVAssetResourceLoader >>>> %s: data for current offset %lld of length %lld provided to %@
-[AVAssetResourceLoadingDataRequest respondWithData:]
com.apple.avfoundation.avassetresourceloadingrequest.dataCaching
AVAssetResourceLoadingRequest %p deallocated while a streaming content key request is still being generated; leaking completion handler. Either keep a retain of the AVAssetResourceLoadingRequest in -generateStreamingContentKeyRequestDataAsynchronouslyForApp's completionHandler or wait until completionHandler is called before calling -finishLoading/-finishLoadingWithError:.
<%@: %p, URL request = %@, request ID = %llu, content information request = %@, data request = %@>
<<<< AVAssetResourceLoader >>>> %s: caching data for current offset %lld of length %lld that was provided to %@
-[AVAssetResourceLoadingRequest _appendToCachedData:]
<<<< AVAssetResourceLoader >>>> %s: cached data has grown to length %lld for %@
-[AVAssetResourceLoadingRequest _appendToCachedData:]_block_invoke
Already have a cachedContentInformation
FCUP_Response_RequestID
FCUP_Response_URL
FCUP_Response_Headers
FCUP_Response_IsContentKeyRequest
<<<< AVAssetResourceLoader >>>> %s: swallowing sendResponseInfo for cancelled request %@
-[AVAssetResourceLoadingRequest _sendResponseInfoToCustomURLHandler]
<<<< AVAssetResourceLoader >>>> %s: swallowing sendData with data of len %lu for cancelled request %@
-[AVAssetResourceLoadingRequest _sendDataToCustomURLHandler:]
<<<< AVAssetResourceLoader >>>> %s: swallowing finishLoading for cancelled request %@
-[AVAssetResourceLoadingRequest _sendFinishLoadingToCustomURLHandlerWithError:]
no contentKeySession
<<<< AVAssetResourceLoader >>>> %s: called on %@
-[AVAssetResourceLoadingRequest finishLoading]
*** -[AVAssetResourceLoadingRequest finishLoading] was sent to an instance of AVAssetResourceLoadingRequest that was already finished. Ignoring.
Must respond with a contentType contained in AVAssetResourceLoadingContentInformationRequest.allowedContentTypes.
<<<< AVAssetResourceLoader >>>> %s: [AVAssetResourceLoadingRequest finishLoading] is called for a content key request while an AVContentKeySession instance is attached to AVURLAsset. Generating event
<<<< AVAssetResourceLoader >>>> %s: called with error %@ on %@
-[AVAssetResourceLoadingRequest finishLoadingWithError:]
*** -[AVAssetResourceLoadingRequest finishLoadingWithError:] was sent to an instance of AVAssetResourceLoadingRequest that was already finished. Ignoring.
StreamingContentKeyIsForAirPlayKey
CSKRO_RemoteContext
kFigCPEError_InvalidState
Cryptor is not available to create key request.
-[AVAssetResourceLoadingRequest keyRequestDataUsingCryptorForApp:contentIdentifier:options:performAsync:error:]
Cannot generate content key request when AVAsset is attached to AVContentKeySession
appIdentifier != nil
contentIdentifier != nil
A streaming content key request is already being generated on this AVAssetResourceLoadingRequest.
keyVendorResponse != NULL
-[AVAssetResourceLoadingRequest persistentContentKeyFromKeyVendorResponse:options:error:]
<<<< AVAssetResourceLoader >>>> %s: called with handlingClient: %@, handler: %@, requestInfo: <%p>, requestID %llu
customURLHandlerHandleRequestCallback
not an AVAssetResourceLoader
mismatched handler
customURLHandlerRequestCancelled
customURLAuthHandlerHandleRequestCallback
customURLAuthHandlerRequestCancelled
AVSampleBufferRenderSynchronizerRateDidChangeNotification
avsamplebufferrendersynchronizer_trace
<<<< AVSampleBufferRenderSynchronizer >>>> %s: called
-[AVSampleBufferRenderSynchronizer init]
com.apple.avfoundation.avsamplebufferrendersynchronizer.ratequeue
com.apple.avfoundation.avsamplebufferrendersynchronizer.synchronizeraccessqueue
com.apple.avfoundation.avsamplebufferrendersynchronizer.rendererlistqueue
<<<< AVSampleBufferRenderSynchronizer >>>> %s: Failed to create FigSampleBufferRenderSynchronizer: %@
<<<< AVSampleBufferRenderSynchronizer >>>> %s: [%p] created (internal: %p)
<<<< AVSampleBufferRenderSynchronizer >>>> %s: [%p] dealloc
-[AVSampleBufferRenderSynchronizer dealloc]
newRate >= 0.0
Invalid renderer configuration; forcing rate to 0. rather than %1.3f
<<<< AVSampleBufferRenderSynchronizer >>>> %s: error: %@
-[AVSampleBufferRenderSynchronizer _setRate:time:atHostTime:]
<<<< AVSampleBufferRenderSynchronizer >>>> %s: [%p] rate: %1.3f; time: %1.3f; hostTime: %1.3f; fig error: %d
<<<< AVSampleBufferRenderSynchronizer >>>> %s: [%p] Setting self as render synchronizer on renderer (%p) failed
-[AVSampleBufferRenderSynchronizer(AVSampleBufferRenderSynchronizerRendererManagement) _addRenderer:error:]
<<<< AVSampleBufferRenderSynchronizer >>>> %s: [%p] Error adding an AudioRenderer to the FigSynchronizer: %d
-[AVSampleBufferRenderSynchronizer(AVSampleBufferRenderSynchronizerRendererManagement) _addRenderer:error:]_block_invoke
invalid renderer
Cannot add renderer %p %@
<<<< AVSampleBufferRenderSynchronizer >>>> %s: [%p] Failed to add Renderer %@; error returned from _addRenderer: %@
-[AVSampleBufferRenderSynchronizer(AVSampleBufferRenderSynchronizerRendererManagement) addRenderer:]
<<<< AVSampleBufferRenderSynchronizer >>>> %s: [%p] removalBlock called; weakToSelf: %p; weakToRenderer: %p
-[AVSampleBufferRenderSynchronizer(AVSampleBufferRenderSynchronizerRendererManagement) _createOnceTimebaseObserverForRemovalOfRenderer:atTime:]_block_invoke
<<<< AVSampleBufferRenderSynchronizer >>>> %s: [%p] called for renderer %p; time: %1.3f
-[AVSampleBufferRenderSynchronizer(AVSampleBufferRenderSynchronizerRendererManagement) _scheduleTimedRendererRemovalAtTime:atTime:withClientCompletionHandler:]
<<<< AVSampleBufferRenderSynchronizer >>>> %s: unknown renderer: %p
<<<< AVSampleBufferRenderSynchronizer >>>> %s: [%p] old once observer already fired before we could invalidate it (renderer: %p)
<<<< AVSampleBufferRenderSynchronizer >>>> %s: [%p] invalidated old scheduled removal of renderer %p
<<<< AVSampleBufferRenderSynchronizer >>>> %s: [%p] successfully scheduled removal of renderer %p at time %1.3f
<<<< AVSampleBufferRenderSynchronizer >>>> %s: [%p] Trying to add a renderer (%p) to same synchronizer
-[AVSampleBufferRenderSynchronizer(AVSampleBufferRenderSynchronizerRendererRestrictions) _canAddRendererInternal:error:]
The SampleBufferRenderer cannot be added to a Synchronizer more than once.
<<<< AVSampleBufferRenderSynchronizer >>>> %s: [%p] Trying to add multiple audio renderers when disallowed
Multiple AudioRenderers not allowed when using Long Form Routing Policy.
<<<< AVSampleBufferRenderSynchronizer >>>> %s: [%p] Too many audio renderers
-[AVSampleBufferRenderSynchronizer(AVSampleBufferRenderSynchronizerRendererRestrictions) _rendererConfigurationIsValid:]
<<<< AVSampleBufferRenderSynchronizer >>>> %s: called (self = <%p>, time observer = <%p>)
-[AVSampleBufferRenderSynchronizer(AVSampleBufferRenderSynchronizerTimeObservation) removeTimeObserver:]
An instance of AVSampleBufferRenderSynchronizer cannot remove a time observer that was added by a different instance of AVSampleBufferRenderSynchronizer.
<<<< AVSampleBufferRenderSynchronizer >>>> %s: called (center=%@, listener=%p, name=%@, object=%p, payload=%@)
avrendersynchronizer_timebaseRateChanged
renderer
onceTimebaseObserver
clientCompletionHandler
<<<< AVSampleBufferRenderSynchronizer >>>> %s: Cleaning-up renderer %p for synchronizerInternal %p
avrendersynchronize_cleanUpAllAddedRenderers
AVSampleBufferRenderSynchronizerFigFactoryKey
BOOL AVCanWriteFilesToDirectoryAtURL(NSURL *, NSError **)
AVFileSystemUtilities.m
directoryURL != nil
filesystemutilities_trace
TemporaryFileForAVFoundation
<<<< AVFileSystemUtilities >>>> %s: Failed to remove temporary file at %@: %@
AVCanWriteFilesToDirectoryAtURL
variant
hlsvariant_trace
one of the constituent parts of %@ are not supported by AVAssetVariantQualifier error:%@
predicate
mediaSelectionOption != nil
Channel count predicate cannot be encoded by non-keyed archivers
channelCount
mediaSelectionOption
operator
Channel count predicateChannel count predicate cannot be decoded by non-keyed archivers
<<<< AVAssetVariant >>>> %s: %@: encountered invalid obj: %p while evaluating
-[AVAssetVariantChannelCountPredicate evaluateWithObject:substitutionVariables:]
creation using format string is not supported
Predicate for channel count:%d operator:%@ option:%@
AVCGColorAttributes
Not available.  Use %@ instead
<%@: %p
, principalMediaCharacteristics = %@
, preferredLanguages = %@
, preferredMediaCharacteristics = %@
, preferredMediaSubTypes = %@
, precludedMediaSubTypes = %@
, preferMultichannelAudio
, precludeMultichannelAudio
preferredLanguages must contain only items of type NSString
preferredMediaCharacteristics must contain only items of type NSString
principalMediaCharacteristics must contain only items of type NSString
preferredMediaSubTypes must contain only items of type NSNumber
precludedMediaSubTypes must contain only items of type NSNumber
<<<< AVCoreImageFilterCustomVideoCompositor >>>> %s: source CIImage %@ (colorSpace %@) from CVPixelBuffer %@ (attachments %@)
-[AVAsynchronousCIImageFilteringRequest sourceImage]
<<<< AVCoreImageFilterCustomVideoCompositor >>>> %s: called with CIImage %@
-[AVAsynchronousCIImageFilteringRequest finishWithImage:context:]
filteredImage != nil
<<<< AVCoreImageFilterCustomVideoCompositor >>>> %s: CIImage %@ (colorSpace %@) already has a CVPixelBuffer %@ (attachments %@)
<<<< AVCoreImageFilterCustomVideoCompositor >>>> %s: rendered CIImage %@ (colorSpace %@) to CVPixelBuffer %@ (attachments %@)
<<<< AVCoreImageFilterCustomVideoCompositor >>>> %s: called with error %@
-[AVAsynchronousCIImageFilteringRequest finishWithError:]
avcifilter_trace
com.apple.AVStorylineCustomVideoCompositor._renderContextQ
<<<< AVCoreImageFilterCustomVideoCompositor >>>> %s: called
-[AVCoreImageFilterCustomVideoCompositor renderContextChanged:]
<<<< AVCoreImageFilterCustomVideoCompositor >>>> %s: called with request %@
-[AVCoreImageFilterCustomVideoCompositor startVideoCompositionRequest:]
Expecting video composition to contain only AVCoreImageFilterVideoCompositionInstruction
B8@?0
@"CIContext"8@?0
<<<< AVCoreImageFilterCustomVideoCompositor >>>> %s: cancelling begin
-[AVCoreImageFilterCustomVideoCompositor cancelAllPendingVideoCompositionRequests]
<<<< AVCoreImageFilterCustomVideoCompositor >>>> %s: cancelling done
AVPlayerItemLegibleOutputTextStylingResolutionDefault
AVPlayerItemLegibleOutputTextStylingResolutionSourceAndRulesOnly
avplayeritemlegibleoutput_trace
subtypes != nil
com.apple.avplayeritemlegibleoutput.ivars
[mediaSubtypeObject isKindOfClass:[NSNumber class]]
integerValueAppearsToBeAFourCC
Native representation is not available for media subtype 'c608'
"%@"
<<<< AVPlayerItemLegibleOutput >>>> %s: Invoking legible delegate %p with %d attributed string(s) and %d native sample(s) at time %f:%@
-[AVPlayerItemLegibleOutput _pushAttributedStrings:andSampleBuffers:atItemTime:]_block_invoke
<<<< AVPlayerItemLegibleOutput >>>> %s: called
-[AVPlayerItemLegibleOutput _signalFlush]
<<<< AVPlayerItemLegibleOutput >>>> %s: Notifying delegate of a flush
-[AVPlayerItemLegibleOutput _signalFlush]_block_invoke
Invalid text styling resolution %@
AVOutputSettingsPreset640x480
AVOutputSettingsPreset960x540
AVOutputSettingsPreset1280x720
AVOutputSettingsPreset1920x1080
AVOutputSettingsPreset3840x2160
AVOutputSettingsPresetHEVC1920x1080
AVOutputSettingsPresetHEVC1920x1080WithAlpha
AVOutputSettingsPresetHEVC3840x2160
AVOutputSettingsPresetHEVC3840x2160WithAlpha
CMTIME_IS_NUMERIC(sourceVideoAverageFrameDuration)
CMTIME_COMPARE_INLINE(sourceVideoAverageFrameDuration, >, kCMTimeZero)
CMTIME_IS_NUMERIC(sourceVideoMinFrameDuration)
CMTIME_COMPARE_INLINE(sourceVideoMinFrameDuration, >, kCMTimeZero)
AVMediaSelection_DefaultSelection
[propertyList isKindOfClass:[NSArray class]]
 %@ : %@ 
<%@: %p, group characteristics and selected options = %@>
<<<< AVExternalDevice >>>> %s: Endpoint HID input mode: %@
-[AVExternalDeviceHID _figEndpointHIDInputMode]
<<<< AVExternalDevice >>>> %s: called with externalDevice %p hidDictionary %@
-[AVExternalDeviceHID initWithExternalDeviceAndHIDDictionary:hidDictionary:]
<<<< AVExternalDevice >>>> %s: Endpoint HID Setting inputMode to %@
-[AVExternalDeviceHID setInputMode:]
<<<< AVExternalDevice >>>> %s: called with dictionary %@
-[AVExternalDeviceIcon initWithDictionary:]
widthPixels
heightPixels
imageData
prerendered
Knobs
LowFidelityTouch
HighFidelityTouch
Touchpad
softKeyboard
softPhoneKeypad
nonMusicLists
musicLists
japanMaps
ExternalDevice_ScreenBecameAvailable
ExternalDevice_ScreenBecameUnavailable
ExternalDevice_NightModeChangedNotification
ExternalDevice_LimitedUIChangedNotification
ExternalDevice_OwnsTurnByTurnNavigationChangedNotification
ExternalDevice_PerformanceReportNotificationPosted
ExternalDevice_MFiCertificateSerialNumberChangedNotification
ExternalDevice_ElectronicTollCollectionChangedNotification
ExternalDevice_NavigationAidedDrivingChangedNotification
enhancedRequestCarUI
<<<< AVExternalDevice >>>> %s: called with externalDevice %p client %@ reason %@
-[AVExternalDeviceScreenBorrowToken initWithExternalDevice:client:reason:]
-[AVExternalDeviceScreenBorrowToken dealloc]
<<<< AVExternalDevice >>>> %s: called with externalDevice %p
-[AVExternalDeviceTurnByTurnToken initWithExternalDevice:]
-[AVExternalDeviceTurnByTurnToken dealloc]
externaldevice_trace
com.apple.AVFoundation.AVExternalDevice
com.apple.AVFoundation.AVExternalDevice.ViewAreas
viewAreaIndex
adjacentViewAreas
<<<< AVExternalDevice >>>> %s: Endpoint property '%@' not supported
-[AVExternalDevice _figEndpointPropertyValueForKey:]
<<<< AVExternalDevice >>>> %s: Endpoint property '%@' has value: %@
<<<< AVExternalDevice >>>> %s: Endpoint screen IDs: %@
-[AVExternalDevice screenIDs]
<<<< AVExternalDevice >>>> %s: Endpoint capabilities: %@
-[AVExternalDevice screenInputCapabilities]
-[AVExternalDevice screenPrimaryInputDevices]
<<<< AVExternalDevice >>>> %s: adding endpointDeviceHID: %@
-[AVExternalDevice externalDeviceHIDs]_block_invoke
active
com.apple.springboard
InitialCarPlayConnection
TestTakeScreenAway
payload
TestNotification
<<<< AVExternalDevice >>>> %s: Invalid Siri Requested Action: %@
figEndpointNotificationCallback
uuid
avplayercaptionlayer_trace
AVPlayerCaptionLayerQueue
com.apple.avfoundation.playercaptionlayer.configuration
AVPlayerCaptionLayer <%p>
<<<< AVPlayerCaptionLayer >>>> %s: Called (self=%p, bounds=%@)
-[AVPlayerCaptionLayer setBounds:]
<<<< AVPlayerCaptionLayer >>>> %s: old player=%p, new player=%p
-[AVPlayerCaptionLayer setPlayer:]
<<<< AVPlayerCaptionLayer >>>> %s: <%p> Observing isDisplayingClosedCaptions on player %p
-[AVPlayerCaptionLayer _startObservingPlayer:]
<<<< AVPlayerCaptionLayer >>>> %s: <%p> Did cancel all observation of old player
-[AVPlayerCaptionLayer _stopObservingPlayer:]
<<<< AVPlayerCaptionLayer >>>> %s: called (keyPath=%@, object=%@, change=%@, context=%p
-[AVPlayerCaptionLayer observeValueForKeyPath:ofObject:change:context:]
<<<< AVPlayerCaptionLayer >>>> %s: <%p> Not applying new value of AVPlayer.currentItem.nonForcedSubtitleDisplayEnabled for player %p not currently being observed (expected %p)
-[AVPlayerCaptionLayer observeValueForKeyPath:ofObject:change:context:]_block_invoke
<<<< AVPlayerCaptionLayer >>>> %s: <%p> Not applying new value of AVPlayer.isDisplayingClosedCaptions for player %p not currently being observed (expected %p)
<<<< AVPlayerCaptionLayer >>>> %s: <%p> %@ closed caption layer
-[AVPlayerCaptionLayer observeValueForKeyPath:ofObject:change:context:]_block_invoke_2
avcc_trace
<<<< AVCustomCompositor >>>> %s: videoComposition %p
-[AVCustomVideoCompositorSession initWithVideoComposition:]
<<<< AVCustomCompositor >>>> %s: creating instance of "%@"
com.apple.avcustomvideocompositorsession.clientcustomcompositorq
com.apple.avcustomvideocompositorsession.rendercontextq
com.apple.avcustomvideocompositorsession.clienterrorq
com.apple.avcustomvideocompositorsession.videocompositionq
com.apple.avcustomvideocompositorsession.finishedrequestq
sourcePixelBufferAttributes must not be nil. (AVVideoCompositing=%p)
sourcePixelBufferAttributes must be an NSDictionary. (AVVideoCompositing=%p)
sourcePixelBufferAttributes must contain kCVPixelBufferPixelFormatTypeKey. (AVVideoCompositing=%p)
Value of kCVPixelBufferPixelFormatTypeKey in AVVideoCompositing sourcePixelBufferAttributes must contain at least one item. (AVVideoCompositing=%p)
Value of kCVPixelBufferPixelFormatTypeKey in AVVideoCompositing sourcePixelBufferAttributes must be either an NSArray or an NSNumber. (AVVideoCompositing=%p)
requiredPixelBufferAttributesForRenderContext must not be nil. (AVVideoCompositing=%p)
requiredPixelBufferAttributesForRenderContext must contain kCVPixelBufferPixelFormatTypeKey. (AVVideoCompositing=%p)
Value of kCVPixelBufferPixelFormatTypeKey in requiredPixelBufferAttributesForRenderContext must contain at least one item. (AVVideoCompositing=%p)
Value of kCVPixelBufferPixelFormatTypeKey in requiredPixelBufferAttributesForRenderContext must be either an NSArray or an NSNumber. (AVVideoCompositing=%p)
<<<< AVCustomCompositor >>>> %s: src pixel buffer attributes %@
-[AVCustomVideoCompositorSession commitCustomVideoCompositorPropertiesAndReturnError:]
<<<< AVCustomCompositor >>>> %s: canConformColorOfSourceFrames %d
<<<< AVCustomCompositor >>>> %s: intializing new render context (videoCompositionDidChange %d
-[AVCustomVideoCompositorSession(AVCustomVideoCompositorSession_FigCallbackHandling) _compositionFrame:atTime:requiresRenderUsingSources:requiresSampleBuffersUsingSources:withInstruction:]_block_invoke
<<<< AVCustomCompositor >>>> %s: render context no longer suitable, need to create a new one
-[AVCustomVideoCompositorSession(AVCustomVideoCompositorSession_FigCallbackHandling) _customCompositorFigPropertyDidChange]_block_invoke
This instance is never deallocated
observedObject != nil
keyPath != nil
dependentProperty
<<<< AVKVODispatcher >>>> %s: called (self=%p, keyPath=%@, object=%@, change=%@, context=%p)
-[AVKVODispatcher observeValueForKeyPath:ofObject:change:context:]
v16@?0@"NSDictionary"8
v24@?0@"NSObject<AVWeakObservable>"8@"NSDictionary"16
callbackContextRegistry != nil
observer != nil
object != nil
<<<< AVKVODispatcher >>>> %s: %p no longer observing %@ with observer %@, for key path %@, and context %p
-[AVClientBlockKVONotifier dealloc]
<<<< AVKVODispatcher >>>> %s: %p observing %@ with observer %@, for key path %@, options %d, and context %p
-[AVClientBlockKVONotifier start]
-[AVClientBlockKVONotifier cancelCallbacks]
*** Weakly-observed object %p was deallocated without cancelling outstanding registration %p.  You are most likely about to get an exception from KVO.  To fix, make sure that %p properly implements the %@ protocol
-[AVWeaklyObservedObjectClientBlockKVONotifier start]
*** Received KVO for object %p that is being deallocated.  This can cause other objects to get a reference to %p while it is in an inconsistent state.  Break on AVKVODispatcherKVODuringObjectTeardownBreak() to debug
-[AVWeaklyObservedObjectClientBlockKVONotifier cancelCallbacks]
v24@?0@"NSObject"8@"NSDictionary"16
Cannot safely use %@ with %@ or its subclasses, due to rdar://problem/26865139, until we
 stop supporting legacy versions of iWork apps
kvodispatcher_trace
dependentPropertyKey != nil
dependencyKeyPath != nil
com.apple.avfoundation.keypathdependency.registration
<%@: %p, target=%@, dependentKey="%@", dependencyKeyPath="%@">
<deallocated>
Must invoke with object passed to initializer
v32@?0@"AVKeyPathDependency"8@"NSObject<AVWeakObservable>"16@"NSDictionary"24
<<<< AVKVODispatcher >>>> %s: Registering for %@ (self = %@)
-[AVKeyPathDependency _startObservingSecondLevelPropertyOnNewCurrentValueForTopLevelDependencyProperty:]
v24@?0@"AVKeyPathDependency"8@"NSDictionary"16
<<<< AVKVODispatcher >>>> %s: Calling -willChange for %@.%@, in response to top-level property change (self=%p)
-[AVKeyPathDependency _reactToTopLevelPropertyChange:]
<<<< AVKVODispatcher >>>> %s: cancelling second-level observation
-[AVKeyPathDependency _reactToTopLevelPropertyChange:]_block_invoke
<<<< AVKVODispatcher >>>> %s: Calling -willChange for %@.%@, in response to second-level property change (self=%p)
-[AVKeyPathDependency _reactToSecondLevelPropertyChange:]
<<<< AVKVODispatcher >>>> %s: Calling -didChange for %@.%@, in response to second-level property change (self=%p)
%@.%@
topLevelDependencyProperty
observedObject
unfinished AVAsynchronousVideoCompositionRequest deallocated - should have called finishWithComposedVideoFrame:, finishWithError: or finishCancelledRequest
finishWithComposedVideoFrame requires a CVPixelBuffer
ignored -[AVAsynchronousVideoCompositionRequest finishWithComposedVideoFrame:] because already finished
ignored -[AVAsynchronousVideoCompositionRequest finishWithError:] because already finished
ignored -[AVAsynchronousVideoCompositionRequest finishCancelledRequest:] because already finished
AVRouteDetectorMultipleRoutesDetectedDidChangeNotification
routedetector_trace
com.apple.avfoundation.avroutedetector.ivars
/Library/Caches/com.apple.xbs/Sources/AVFoundation_AVFCore_Sim/AVFoundation-2036.2.2/Fig/AVVideoCompositionRenderContext.m %s: CVPixelBufferPoolCreatePixelBufferWithAuxAttributes failed (error %d)
-[AVVideoCompositionRenderContext newPixelBuffer]_block_invoke
/Library/Caches/com.apple.xbs/Sources/AVFoundation_AVFCore_Sim/AVFoundation-2036.2.2/Fig/AVVideoCompositionRenderContext.m %s: initializing
-[AVVideoCompositionRenderContext(Internal) initWithFigVideoCompositor:clientRequiredPixelBufferAttributes:videoComposition:pixelBufferPool:]
com.apple.avvideocompositionrendercontext.pixelbufferpoolq
/Library/Caches/com.apple.xbs/Sources/AVFoundation_AVFCore_Sim/AVFoundation-2036.2.2/Fig/AVVideoCompositionRenderContext.m %s: kFigVideoCompositorProperty_RenderDimensions = %d %d
/Library/Caches/com.apple.xbs/Sources/AVFoundation_AVFCore_Sim/AVFoundation-2036.2.2/Fig/AVVideoCompositionRenderContext.m %s: kFigVideoCompositorProperty_RenderScale = %f
/Library/Caches/com.apple.xbs/Sources/AVFoundation_AVFCore_Sim/AVFoundation-2036.2.2/Fig/AVVideoCompositionRenderContext.m %s: kFigVideoCompositorProperty_RenderPixelAspectRatio = %d %d
/Library/Caches/com.apple.xbs/Sources/AVFoundation_AVFCore_Sim/AVFoundation-2036.2.2/Fig/AVVideoCompositionRenderContext.m %s: kFigVideoCompositorProperty_RenderEdgeProcessingPixels = %f %f %f %f
/Library/Caches/com.apple.xbs/Sources/AVFoundation_AVFCore_Sim/AVFoundation-2036.2.2/Fig/AVVideoCompositionRenderContext.m %s: kFigVideoCompositorProperty_HighQualityRendering = %d
/Library/Caches/com.apple.xbs/Sources/AVFoundation_AVFCore_Sim/AVFoundation-2036.2.2/Fig/AVVideoCompositionRenderContext.m %s: kFigVideoCompositorProperty_DestinationPixelBufferDesiredAttributes = %@
/Library/Caches/com.apple.xbs/Sources/AVFoundation_AVFCore_Sim/AVFoundation-2036.2.2/Fig/AVVideoCompositionRenderContext.m %s: kFigVideoCompositorProperty_DestinationPixelBufferDesiredYCbCrMatrix = %@
/Library/Caches/com.apple.xbs/Sources/AVFoundation_AVFCore_Sim/AVFoundation-2036.2.2/Fig/AVVideoCompositionRenderContext.m %s: kFigVideoCompositorProperty_DestinationPixelBufferDesiredColorPrimaries = %@
/Library/Caches/com.apple.xbs/Sources/AVFoundation_AVFCore_Sim/AVFoundation-2036.2.2/Fig/AVVideoCompositionRenderContext.m %s: kFigVideoCompositorProperty_DestinationPixelBufferDesiredTransferFunction = %@
/Library/Caches/com.apple.xbs/Sources/AVFoundation_AVFCore_Sim/AVFoundation-2036.2.2/Fig/AVVideoCompositionRenderContext.m %s: kFigVideoCompositorProperty_BlendingTransferFunction = %@
/Library/Caches/com.apple.xbs/Sources/AVFoundation_AVFCore_Sim/AVFoundation-2036.2.2/Fig/AVVideoCompositionRenderContext.m %s: Failed to resolve pixel buffer attributes (error %d), required client attributes %@, desired destination attributes %@
-[AVVideoCompositionRenderContext(Internal) pixelBufferPool]
LowQualityZeroLatency
TimeDomain
Spectral
Varispeed
AVMovieReferenceRestrictionsKey
AVMovieShouldPrepareToOptimizeForExclusivePlaybackKey
AVMovieShouldSupportAliasDataReferencesKey
avmovie_trace
<<<< AVMovie >>>> %s: AVMovie %p, AVAssetInspectorLoader %p
-[AVMovie init]
-[AVMovie initWithURL:options:]
-[AVMovie initWithData:options:]
[[AVMovie movieTypes] containsObject:contentType]
-[AVMovie _initWithFigAsset:]
-[AVMovie _initWithFormatReader:URL:data:options:]
-[AVMovie _initWithFigError:userInfo:]
<<<< AVMovie >>>> %s: AVMutableMovie %p, FigMutableMovie %p, FigAsset %p, FigFormatReader %p
-[AVMutableMovie initWithURL:options:error:]
<<<< AVMovie >>>> %s: AVMutableMovie %p failed initialization with error %@
-[AVMutableMovie initWithData:options:error:]
-[AVMutableMovie initWithSettingsFromMovie:options:error:]
-[AVMutableMovie _initWithFormatReader:URL:data:options:]
![self isMemberOfClass:[AVMutableMovie class]]
<<<< AVMovie >>>> %s: FigCreate3x3MatrixArrayFromCGAffineTransform returned a NULL matrix.
-[AVMutableMovie setPreferredTransform:]
<%@: %p defaultMediaDataStorage = %@, tracks = %@ >
<%@: %p tracks = %@ >
Can't copy settings from an AVAssetTrack with a non-matching media type
existingTracks != nil
[track isKindOfClass:[AVAssetTrack class]]
avsamplebufferoutput_trace
AVPlayerItemSampleBufferOutput state
<<<< AVPlayerItemSampleBufferOutput >>>> %s: %p: wrong trackID %d (right trackID is %d)
-[AVPlayerItemSampleBufferOutput copyNextSampleBufferForTrackID:flags:]
<<<< AVPlayerItemSampleBufferOutput >>>> %s: FigPlaybackItemExtractAndRetainNextSampleBuffer returned %d, sampleBuffer=%p, self=%p
<<<< AVPlayerItemSampleBufferOutput >>>> %s: No delegate
-[AVPlayerItemSampleBufferOutput _figPlaybackItemTrackSampleBufferDidBecomeAvailableForTrackID:extractionID:]_block_invoke_2
<<<< AVPlayerItemSampleBufferOutput >>>> %s: Sending -outputMediaDataAvailable:trackID: to delegate
<<<< AVPlayerItemSampleBufferOutput >>>> %s: Delegate does not implement -outputMediaDataAvailable:trackID:
-[AVPlayerItemSampleBufferOutput _figPlaybackItemTrackOutputSequenceWasFlushedForTrackID:extractionID:]_block_invoke_2
<<<< AVPlayerItemSampleBufferOutput >>>> %s: Sending -outputSequenceWasFlushed:trackID: to delegate
<<<< AVPlayerItemSampleBufferOutput >>>> %s: Delegate does not implement -outputSequenceWasFlushed:trackID:
<<<< AVPlayerItemSampleBufferOutput >>>> %s: %p received %@, extractionID=%d
figPlaybackItemTrackSampleBufferDidBecomeAvailable
figPlaybackItemTrackResetSampleBufferExtraction
FairPlayStreaming
ClearKeySystem
AuthorizationTokenSystem
ProtocolVersionsKey
RequiresValidationDataInSecureTokenKey
RequiresExtendedValidationDataInSecureTokenKey
ServerChallenge
CreateDecryptorUsingFormatDescription
ReceivedKeyResponseAfterSPCTimedOut
ReceivedKeyResponseWithExpiredLease
ReceivedObsoleteKeyResponse
%@ does not support key persistence
HLSMethodKey
<<<< AVContentKeySession >>>> %s: %p reportGroup:%p created request %p with identifier: %{public}@ initializationData: %p
-[AVContentKeyRequest initWithContentKeySession:reportGroup:identifier:contentIdentifier:keyIDFromInitializationData:initializationData:preloadingRequestOptions:providesPersistableKey:]
Cryptor is not ready to start key loading process at this time.
+[AVContentKeyRequest _prepareCryptor:forRenewal:andReturnKeyRequestID:]
/Library/Caches/com.apple.xbs/Sources/AVFoundation_AVFCore_Sim/AVFoundation-2036.2.2/Fig/AVContentKeySession.m
<<<< AVContentKeySession >>>> %s: %p %p cryptor:%p cryptorUUID:%{public}@ keyRequestId: %llu
-[AVContentKeyRequest initWithContentKeySession:reportGroup:customURLHandler:identifier:requestInfo:requestID:providesPersistableKey:isRenewalRequest:]
<%@: %p status:%d>
<<<< AVContentKeySession >>>> %s: %p %p did fail content key request %{public}@
-[AVContentKeyRequest _setError:]_block_invoke
v16@?0@"<AVContentKeySessionDelegate>"8
<<<< AVContentKeySession >>>> %s: %p %p retrying key request because %@. status is set to retried
-[AVContentKeyRequest _handleKeyResponseError:]_block_invoke
<<<< AVContentKeySession >>>> %s: %p %p key request failed since the client did not retry
<<<< AVContentKeySession >>>> %s: %p %p key request did succeed
-[AVContentKeyRequest _handleKeyResponseSuccess]_block_invoke
<<<< AVContentKeySession >>>> %s: cryptor is NULL
-[AVContentKeyRequest ensureCryptorWithFormatDescription:error:]
<<<< AVContentKeySession >>>> %s: %p %p cryptor:%p cryptorUUID:%{public}@ cryptorKeyRequestID:%lld
value against AVContentKeyRequestProtocolVersionsKey should be an array of NSNumber objects
ISO_23001_7
SAMPLE-AES
value against AVContentKeyRequestHLSMethodKey is not recognized
value against AVContentKeySessionServerPlaybackContextOptionServerChallenge should be a NSData instance
Server challenge should be 8 bytes in length
AVContentKeyRequestRequiresExtendedValidationDataInSecureTokenKey value should be an object of NSData class
valid completionHandler is required
valid appIdentifier is required
<<<< AVContentKeySession >>>> %s: %p %p created key request:%p key-request-length:%lu for contentId:%{public}@ options:%{public}@ err:%{public}@
-[AVContentKeyRequest makeStreamingContentKeyRequestDataForApp:contentIdentifier:options:completionHandler:]_block_invoke
valid responseData is required
key request was already cancelled or failed
<<<< AVContentKeySession >>>> %s: %p %p setting content key response data %p to renew at %{public}@
-[AVContentKeyRequest processContentKeyResponseData:renewalDate:error:]
Could not set KeyResponseReceived state on cryptor.
valid keyResponse is required
contentKeySession's keySystem does not match with that of keyResponse's
%@ does not support this operation
keyResponse should be an object of AVContentKeyResponseFairPlayStreaming class
valid FPS key response data is required
keyResponse should be an object of AVContentKeyResponseClearKey class
valid ClearKey key data is required
keyResponse should be an object of AVContentKeyResponseAuthorizationToken class
identifier and authorizationTokenData must be valid
identifier should be an object of NSString class
<<<< AVContentKeySession >>>> %s: %p %p processing content key response with data %p
-[AVContentKeyRequest processContentKeyResponse:]
%@ does not support key renewal
client's delegate should respond to contentKeySession:didProvidePersistableContentKeyRequest: method in order to be able to request persistable content key request
<<<< AVContentKeySession >>>> %s: %p %p requesting persistable key request
-[AVContentKeyRequest respondByRequestingPersistableContentKeyRequestAndReturnError:]
displays is nil
key request has not succeeded. value not available.
-[AVContentKeyRequest(AVContentKeyRequest_ExternalProtectionStateSupport) willOutputBeObscuredDueToInsufficientExternalProtectionForDisplays:]
cryptor is NULL
-[AVContentKeyRequest(AVContentKeyRequest_ExternalProtectionStateSupport) externalContentProtectionStatus]
<<<< AVContentKeySession >>>> %s: %p %p set report group success:%d
-[AVContentKeyRequest(AVContentKeyReportGroupSupport) setReportGroup:]
valid keyVendorResponse is required
persistable content key cannot be created at this time
<<<< AVContentKeySession >>>> %s: %p %p key-respone:%p length:%lu offline-key:%p offline-key-legth:%lu err:%d
-[AVPersistableContentKeyRequest persistableContentKeyFromKeyVendorResponse:options:error:]
FairPlay Streaming is not supported on simulators
<<<< AVContentKeySession >>>> %s: failed to copy default secure stop manager due to error: %d
+[AVContentKeySession copyDefaultSecureStopManagerForAppIdentifier:storageDirectoryAtURL:]
avcontentkeysession_trace
input keySystem is not supported
%@ does not support storage URL
com.apple.AVContentKeySession._threadSafetyQ
<%@: %p> contentkeysession delegate serialization queue
<<<< AVContentKeySession >>>> %s: %p: created with %{public}@ storageURL:%{public}@
-[AVContentKeySession initWithKeySystem:storageDirectoryAtURL:]
<%@: %p expired:%d>
valid delegateQueue is required
cannot add this object as an AVContentKeyRecipient
<<<< AVContentKeySession >>>> %s: %p added content key recipient %p
-[AVContentKeySession addContentKeyRecipient:]_block_invoke
Content key session is already expired or failed
Can't add object as an AVContentKeyRecipient after it has established its own content protection
Content key recipient cannot be associated with more than one instance of AVContentKeySession
<<<< AVContentKeySession >>>> %s: %p: failed to add %p as a content key recipient with error:%@
-[AVContentKeySession addContentKeyRecipient:]
<<<< AVContentKeySession >>>> %s: %p removed content key recipient %p
-[AVContentKeySession removeContentKeyRecipient:]_block_invoke
<<<< AVContentKeySession >>>> %s: %p expiring recipient %p
-[AVContentKeySession expire]
<<<< AVContentKeySession >>>> %s: %p expiring session
valid contentKeyRequest is required
Cannot renew content key request since there's no delegate set on the content key session
Cannot renew content key request using an expired content key session
Cannot renew content key request that was previously cancelled or failed
Cannot renew while content key request is waiting for a response
<<<< AVContentKeySession >>>> %s: %p %p failed to renew due to %{public}@
-[AVContentKeySession renewExpiringResponseDataForContentKeyRequest:]
<<<< AVContentKeySession >>>> %s: %p %p issuing renewable key request
-[AVContentKeySession renewExpiringResponseDataForContentKeyRequest:]_block_invoke
<<<< AVContentKeySession >>>> %s: %p %p renewing with err:%d
<<<< AVContentKeySession >>>> %s: %p errored out trying to renew key request %@
valid completion handler is required
valid persistableContentKeyData is required
<<<< AVContentKeySession >>>> %s: %p token:%p token-length:%lu error:%{public}@
-[AVContentKeySession makeSecureTokenForExpirationDateOfPersistableContentKey:completionHandler:]_block_invoke
<<<< AVContentKeySession >>>> %s: %{public}@ token:%p token-length:%lu error:%{public}@
-[AVContentKeySession invalidatePersistableContentKey:options:completionHandler:]_block_invoke
valid application certificate is required
-[AVContentKeySession invalidateAllPersistableContentKeysForApp:options:completionHandler:]_block_invoke
valid storageURL is required
kFigSSMError_InvalidState
failed to query records due to an internal error
+[AVContentKeySession(AVContentKeySessionPendingExpiredSessionReports) pendingExpiredSessionReportsWithAppIdentifier:storageDirectoryAtURL:]
<<<< AVContentKeySession >>>> %s: %p copying expired session reports for appIdentifier:%p storageURL:%{public}@ reports:%p
expiredSessionReports should be an array of NSData objects
failed to remove records due to an internal error
+[AVContentKeySession(AVContentKeySessionPendingExpiredSessionReports) removePendingExpiredSessionReports:withAppIdentifier:storageDirectoryAtURL:]
<<<< AVContentKeySession >>>> %s: %p remove pending session reports for appIdentifier:%p storageURL:%@
<<<< AVContentKeySession >>>> %s: %p issuing session report generation note
-[AVContentKeySession(AVContentKeySessionPendingExpiredSessionReports) _handleSecureStopDidFinalizeRecordCallback]_block_invoke
%@_%llu
<<<< AVContentKeySession >>>> %s: %p issuing updated offline key %p for %{public}@
-[AVContentKeySession(AVContentKeySessionPrivateUtilities) _handleUpdateToPersistentKey:forKeyIdentifier:]_block_invoke
<<<< AVContentKeySession >>>> %s: %p issuing content protection identifier change for report group: %p
-[AVContentKeySession(AVContentKeySessionPrivateUtilities) _handleContentProtectionSessionIdentifierDidChange:]_block_invoke
<<<< AVContentKeySession >>>> %s: %p issuing content protection identifier change
appIdentifier can't change once set
<<<< AVContentKeySession >>>> %s: %p failed to issue content key request due to an internal error
-[AVContentKeySession(AVContentKeyRequestSupport) issueContentKeyRequests:forInitializationData:]
<<<< AVContentKeySession >>>> %s: %p failed to issue content key request because delegate's already gone
<<<< AVContentKeySession >>>> %s: %p issuing multiple key requests: %{public}@
-[AVContentKeySession(AVContentKeyRequestSupport) issueContentKeyRequests:forInitializationData:]_block_invoke
<<<< AVContentKeySession >>>> %s: %p %p issuing key request
-[AVContentKeySession(AVContentKeyRequestSupport) issueContentKeyRequest:toDelegateWithCallbackSelector:]
<<<< AVContentKeySession >>>> %s: %p %p issuing persistable key request
-[AVContentKeySession(AVContentKeyRequestSupport) issuePersistableContentKeyRequest:]
-[AVContentKeySession(AVContentKeyRequestSupport) issueRenewableContentKeyRequest:]
<<<< AVContentKeySession >>>> %s: %p initializing content key request with identifier %@ and initialization data %@
-[AVContentKeySession(AVContentKeyRequestSupport) issueContentKeyRequestWithPreloadingRequestOptions:identifier:initializationData:providesPersistableKey:]
<<<< AVContentKeySession >>>> %s: %p Ignore produced contentKey (%@) because content key session is expired
-[AVContentKeySession(AVContentKeyRequestSupport) contentKeyRequestDidProduceContentKey:]_block_invoke_2
<<<< AVContentKeySession >>>> %s: %p issued content key %{public}@
valid delegate is required to deliver a key request
-[AVContentKeySession(AVContentKeySession_Internal) issueContentKeyRequestForInitializationData:]
-[AVContentKeySession(AVContentKeySession_Internal) issueContentKeyRequestForInitializationData:]_block_invoke
<<<< AVContentKeySession >>>> %s: %p reusing preloaded cryptor %p for cryptor %p
-[AVContentKeySession(AVContentKeySession_Internal) _handleRequest:withRequestID:fromHandler:willHandleRequest:]
no figAsset
-[AVContentKeySession(AVContentKeySession_Internal) createAndInstallCustomURLHandlerForAsset:outHandler:]
com.apple.avfoundation.avcontentkeysession.handler
AVContentKeySession
<<<< AVContentKeySession >>>> %s: %p creating content key group: %p
-[AVContentKeySession(AVContentKeyGroup_Support) makeContentKeyGroup]
<<<< AVContentKeySession >>>> %s: %p creating cryptor using sinfs
-[AVContentKeyReportGroup cryptorOptionsForIdentifier:initializationData:formatDescription:hlsMethod:]
mpts
<<<< AVContentKeySession >>>> %s: Invalid key system used in AVContentKeySystem
<<<< AVContentKeySession >>>> %s: %@ failed to process content key request for identifier %@ and initialization data %@ due to %@
-[AVContentKeyReportGroup failProcessingContentKeyRequestWithIdentifier:initializationData:error:]
identifier or initializationData must be valid
An expired content key session cannot process content key request
AVContentKeySession is nil
<<<< AVContentKeySession >>>> %s: %p reportGroup:%p processing key request with identifier %{public}@ and initData %{public}@ options %{public}@
-[AVContentKeyReportGroup processContentKeyRequestWithIdentifier:initializationData:options:]
Failed to parse key requests from PSSH
Failed to parse keyID from SINF array
<<<< AVContentKeySession >>>> %s: %p associate key request %p to reportGroup:%p
-[AVContentKeyReportGroup associateContentKeyRequest:]
<<<< AVContentKeySession >>>> %s: %p expire reportGroup:%p
-[AVContentKeyReportGroup expire]
com.apple.avfoundation.avcontentkeyreportgroup
<<<< AVContentKeySession >>>> %s: %p created reportGroup:%p with figCKS: %p
-[AVContentKeyReportGroup(AVContentKeyReportGroupPrivateUtilities) initWithKeySystem:keySession:storageDirectoryAtURL:]
<<<< AVContentKeySession >>>> %s: setting authorizationToken failed due to err=%d
-[AVContentKeyReportGroup(AVContentKeyReportGroupPrivateUtilities) _setAuthorizationToken:forIdentifier:error:]
sample buffer does not have format description
Content key is not valid
Failed to query for authorization
initializationData is nil
avcks_decodeInitializationDataAndCopyInformation
failed to convert initializationData to a JSON object
sinf
codc
mtyp
cont
pssh
expected initialization data to be a JSON dictionary containing an array of SINF data
badly formatted key request init data - sinf array not found
badly formatted key request init data - codecType not valid
badly formatted key request init data - mediaType not valid
badly formatted key request init data - containerType not valid
badly formatted PSSH data
<<<< AVContentKeySession >>>> %s: badly formatted key request init data (encoded sinf not UTF8)
<<<< AVContentKeySession >>>> %s: badly formatted key request init data (encoded sinf not base64)
<<<< AVContentKeySession >>>> %s: called with handlingClient: %@, handler: %@, requestInfo: %@, requestID %llu
not an AVContentKeySession
<<<< AVContentKeySession >>>> %s: called with callbackClient: %@, cryptorUUID: %@, cryptorRequestID: %llu, keyResponseError: %@
avckrg_keyResponseErrorCallback
not an AVContentKeyReportGroup
<<<< AVContentKeySession >>>> %s: called with callbackClient: %@, cryptorUUID: %@, cryptorRequestID: %llu
avckrg_keyResponseSuccessfullyProcessedCallback
<<<< AVContentKeySession >>>> %s: called with callbackClient: %@, cryptKeyIdentifier: %@, updatedPersistentKey: %@
avckrg_persistentKeyUpdatedCallback
<<<< AVContentKeySession >>>> %s: called with callbackClient: %@
avckrg_secureStopDidFinalizeRecordCallback
avckrg_externalProtectionStateChangedCallback
<<<< AVOutputDeviceGroup (APSyncController) >>>> %s: outputDevices=%@
-[AVAPSyncControllerRemoteOutputDeviceGroupImpl outputDevices]
<<<< AVOutputDeviceGroup (APSyncController) >>>> %s: called (propertyName=%@, qualifier=%@)
-[AVAPSyncControllerRemoteOutputDeviceGroupImpl _outputDevicesFromProperty:withQualifier:]
<<<< AVOutputDeviceGroup (APSyncController) >>>> %s: called (deviceID=%@)
-[AVAPSyncControllerRemoteOutputDeviceGroupImpl _outputDeviceForID:]
<<<< AVOutputDeviceGroup (APSyncController) >>>> %s: called (self=%p, groupID=%@)
-[AVAPSyncControllerRemoteOutputDeviceGroupImpl _groupMembersChangedForGroupWithID:]
<<<< AVOutputDeviceGroup (APSyncController) >>>> %s: called (self=%p, groupID=%@, groupLeader=%@)
-[AVAPSyncControllerRemoteOutputDeviceGroupImpl groupLeader]
<<<< AVOutputDeviceGroup (APSyncController) >>>> %s: called (self=%p, outputDevice=%@, options=%@)
-[AVAPSyncControllerRemoteOutputDeviceGroupImpl addOutputDevice:withOptions:completionHandler:]
-[AVAPSyncControllerRemoteOutputDeviceGroupImpl removeOutputDevice:withOptions:completionhandler:]
-[AVAPSyncControllerRemoteOutputDeviceGroupImpl _volumeChangedForGroupWithID:]
-[AVAPSyncControllerRemoteOutputDeviceGroupImpl _volumeControlTypeChangedForGroupWithID:]
<<<< AVOutputDeviceGroup (APSyncController) >>>> %s: called (groupID=%{private}@)
AVAPSyncControllerRemoteOutputDeviceGroupImplGroupMembersChanged
<<<< AVOutputDeviceGroup (APSyncController) >>>> %s: called (inResult = %d)
AVAPSyncControllerRemoteOutputDeviceGroupImplSetSpeakerGroupCallback
AVAPSyncControllerRemoteOutputDeviceGroupImplVolumeChanged
AVAPSyncControllerRemoteOutputDeviceGroupImplVolumeControlTypeChanged
MbP?
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
AVOutputContext
AVOutputContextLocalOutputDeviceGroupImpl
AVOutputDeviceGroupImpl
NSObject
AVPlayerLooperInternal
AVPlayerLooper
AVResult
AVAssetReaderOutputMetadataAdaptorInternal
AVAssetReaderOutputMetadataAdaptor
AVAssetReaderOutputAdaptor
AVVideoPerformanceMetricsInternal
AVVideoPerformanceMetrics
AVOutputDeviceDiscoverySessionInternal
AVOutputDeviceDiscoverySessionAvailableOutputDevicesInternal
AVOutputDeviceDiscoverySession
AVEmptyOutputDeviceDiscoverySessionAvailableOutputDevices
AVOutputDeviceDiscoverySessionAvailableOutputDevicesImpl
AVOutputDeviceDiscoverySessionAvailableOutputDevices
AVAPSyncControllerOutputDeviceImpl
AVOutputDeviceImpl
AVPlayerLayerIntermediateLayer
AVPlayerLayerInternal
AVPlayerLayer
AVKeyPathDependencyHost
AVWeakObservable
CMTimeAsValue
CMTimeRangeAsValue
CMTimeMappingAsValue
NSValueCMTimeExtensions
AVTimeCoding
AVTimebaseObserver
AVPeriodicTimebaseObserver
AVOccasionalTimebaseObserver
AVOnceTimebaseObserver
AVPlayerItemMetadataCollectorMetadataItemFiltering
AVPlayerItemMetadataCollectorInternal
AVPlayerItemMetadataCollector
AVPlayerItemMediaDataCollector_Internal
AVPlayerItemInterstitialEventCollector
AVPlayerInterstitialEvent
AVPlayerInterstitialEventMonitor
AVPlayerInterstitialEventObserver
AVPlayerInterstitialEventController
AVSampleBufferVideoOutputInternal
AVSampleBufferVideoOutput
AVAssetDownloadStorageManager
AVAssetDownloadStorageManagementPolicy
NSCopying
NSMutableCopying
AVMutableAssetDownloadStorageManagementPolicy
AVAssetDownloadStorageManagementPolicyInternal
AVOutputDeviceGroup
AVOutputDeviceGroupMembershipChangeResult
AVMetadataItemInternal
AVMetadataItem_Local
AVMetadataItemTypeCoercion
AVMetadataItem
AVAsynchronousKeyValueLoading
AVMutableMetadataItem
AVLazyValueLoadingMetadataItemInternal
AVLazyValueLoadingMetadataItem
AVMetadataItemValueRequestInternal
AVMetadataItemValueRequest
AVMetadataItemLazyValueLoading
AVChapterMetadataItemInternal
AVChapterMetadataItem
AVMetadataItemFilterForSharing
AVMetadataItemFilterInternal
AVMetadataItemFilter
AVAssetProxy
AVAssetProxyInternal
AVAssetInternal
AVAsset
AVAssetChapterInspection
AVAsset_ExportAndSerializationSupport
AVAssetMovieAtomInfo_Private
AVAssetFragmentInternal
AVAssetFragment
AVFragmentedAssetsArray
AVAssetFragmentSequenceInfo_Private
AVURLAssetInternal
AVURLAsset
AVAssetCache
AVURLAssetCache_Private
AVAssetVariantInspection
AVURLAssetURLHandlingInternal
AVURLAssetURLHandling
AVAssetClientURLRequestHelper
AVURLAssetInstanceIdentiferMapping
AVDataAsset
AVAssetTrackEnumerator
AVURLAssetContentKeyEligibility
AVContentKeyRecipient
AVURLAssetCustomURLHandling
AVURLAssetItemProviderData
NSSecureCoding
NSCoding
NSItemProvider
AVURLAssetLoggingIdentifier
AVAudioMixEffectParameters
AVAudioMixSweepFilterEffectParameters
AVAudioMixSweepFilterEffectParametersInternal
AVAssetImageGeneratorInternal
AVAssetImageGenerator
AVFigEndpointRemoteControlSessionOutputDeviceCommunicationChannelImpl
AVOutputDeviceCommunicationChannelImpl
AVAssetTrackInternal
AVAssetTrack
AVAssetTrack_ExportAndSerializationSupport
AVPlayerInternal
AVPlayer
AVPlayerVideoDisplaySleepPrevention
AVPlayerProtectedContentPrivate
AVPlayerAudioPlaybackRateLimits
AVPlayerMultitaskSupport
AVPlayerSupportForMediaPlayer
AVAudioSessionMediaPlayerOnly
AVPlayerPixelBufferPoolSharing
AVPlayerFormatRestrictions
AVPlayerAutomaticMediaSelection
AVPlayerAutomaticMediaSelectionPrivate
AVPlayerAudioDeviceSupport
AVPlayerOutOfBandTextTrackRendering
AVPlayerMultichannelAudioStrategy
AVPlayerCaptionStrategySelection
AVPlayerAudioSessionParticipant
AVAudioSessionParticipant
AVPlayerQueueModificationDescription
AVPlayerVideoDecoderGPUSupport
AVPlayerLoggingIdentifier
AVPlayerAutoPauseOnRouteRemoval
AVPlayerImplicitInterruption
AVPlayerSTSLabel
AVPlayerPIPSupport
FigVideoTargetSupport
AVPlayerInterstitialSupport_Internal
PlaybackCoordination
AVAssetDownloadContentConfiguration
AVAssetDownloadConfiguration
Internal
AVVideoCompositionRenderHintInternal
AVVideoCompositionRenderHint
AVSampleBufferAudioRendererInternal
AVSampleBufferAudioRenderer
AVMediaDataRequesterConsumer
AVQueuedSampleBufferRenderingInternal
AVQueuedSampleBufferRendering
AVAssetWriterInputMetadataAdaptorInternal
AVAssetWriterInputMetadataAdaptor
AVExternalProtectionMonitorInternal
AVExternalProtectionMonitor
AVPlayerItemInternal
AVPlayerItem
AVPlayerItemProtectedContent
AVPlayerItemProtectedContentPrivate
AVPlayerItemLogging
AVPlayerConnection
AVPlayerItemSupportForMediaPlayer
AVPlayerItemOutputs
AVPlayerItemMediaDataCollectors
AVPlayerItemServiceIdentifier_Private
LegibleOutputSupport
MetadataOutputSupport
AVPlayerItemAVKit
AVPlayerItemVideoEnhancement
AVPlayerInterstitialSupport
AVPlayerItemTrackInternal
AVPlayerItemTrack
AVQueuePlayer
AVQueuePlayerInternal
AVPlayerAdvanceWithOverlap
AVSpecifiedLoggingIdentifierInternal
AVSpecifiedLoggingIdentifier
AVLoggingIdentifier
AVLoggingDerivedIdentifier
AVAssetLoggingIdentifierInternal
AVAssetLoggingIdentifier
AVPlayerLoggingIdentifierInternal
AVCompositionInternal
AVComposition
AVMutableCompositionInternal
AVMutableComposition
AVCompositionFormatReaderInspector
AVComposition_NSCoding
AVPlayerItemMetadataOutputInternal
AVPlayerItemMetadataOutput
AVPlayerItemMetadataOutput_Internal
AVCompositionTrackFormatDescriptionReplacement
AVCompositionTrackInternal
AVCompositionTrack
AVMutableCompositionTrackInternal
AVMutableCompositionTrack
AVNotificationSubscription
AVCancellable
AVPublisher
AVPropertyValuePublisher
AVMapPublisher
AVSwitchToLatestPublisher
AVSinkSubscriber
AVTimeFormatterInternal
AVTimeFormatter
AVCompositionTrackSegmentInternal
AVCompositionTrackSegment
AVMovieTrackInternal
AVMovieTrack
AVMutableMovieTrackInternal
AVMutableMovieTrack
AVMutableMovieTrackFormatDescriptions
AVMutableMovieTrack_FormatDescriptions
AVMutableMovieTrackTrackLevelEditing
AVMutableMovieTrackSampleLevelEditing
AVMutableMovieTrack_SampleLevelEditingPrivate
AVMutableMovieTrackMetadataEditing
AVMutableMovieTrackTrackAssociations
AVAssetReaderInternal
AVAssetReader
AVAssetReaderOutputInternal
AVAssetReaderOutput
AVAssetReaderTrackOutputInternal
AVDecodedVideoSettingsForFig
AVAssetReaderTrackOutput
AVAssetReaderAudioMixOutputInternal
AVAssetReaderAudioMixOutput
AVAssetReaderVideoCompositionOutputInternal
AVAssetReaderVideoCompositionOutput
AVAssetReaderSampleReferenceOutputInternal
AVAssetReaderSampleReferenceOutput
AVAssetWriterConfigurationState
AVAssetWriterInternal
AVAssetWriter
AVAssetWriterUnknownHelper
AVAssetWriterFigAssetWriterNotificationHandler
AVFragmentedMediaDataReportInternal
AVFragmentedMediaDataReport
AVAssetWriterWritingHelper
AVAssetWriterFigAssetWriterNotificationHandlerDelegate
AVWorkaroundNSBlockOperation
AVAssetWriterFinishWritingHelper
AVFigAssetWriterFinishWritingAsyncOperation
AVAssetWriterTerminalHelper
AVAssetWriterFailedTerminalHelper
AVAssetWriterClientInitiatedTerminalHelper
AVAssetWriterHelper
AVAssetWriterInputGroupInternal
AVAssetWriterInputGroup
AVAssetWriterInputSelectionOption
AVCoordinatedPlaybackSuspension
AVCoordinatedPlaybackParticipant
AVPlaybackCoordinator
AVPlayerPlaybackCoordinator
AVOutputDeviceAuthorizationSessionInternal
AVOutputDeviceAuthorizationSession
AVOutputDeviceAuthorizationRequestInternal
AVOutputDeviceAuthorizationRequest
AVAssetWriterInputConfigurationState
AVAssetWriterInputInternal
AVAssetWriterInput
AVAssetWriterInputUnknownHelper
AVAssetWriterInputWritingHelper
AVAssetWriterInputMediaDataRequesterDelegate
AVAssetWriterInputInterPassAnalysisHelper
AVAssetWriterInputNoMorePassesHelper
AVAssetWriterInputTerminalHelper
AVAssetWriterInputHelper
AVAssetWriterInputPixelBufferAdaptorInternal
AVAssetWriterInputPixelBufferAdaptor
AVFigAssetWriterTrack
AVFigAssetWriterAudioTrack
AVFigAssetWriterVideoTrack
AVFigAssetWriterGenericTrack
AVAssetWriterInputMediaDataRequester
AVAssetWriterInputPassDescriptionResponder
AVAssetWriterInputFigAssetWriterEndPassOperation
AVAssetWriterInputPassDescriptionInternal
AVAssetWriterInputPassDescription
AVVideoCompositionInstructionInternal
AVVideoCompositionInstruction
AVMutableVideoCompositionInstruction
AVVideoCompositionLayerInstructionInternal
AVVideoCompositionLayerInstruction
AVMutableVideoCompositionLayerInstruction
AVVideoCompositionInternal
AVVideoCompositing
AVVideoComposition
AVVideoCompositionColorimetery
AVVideoCompositionColorimeteryUtilities
AVVideoCompositionFiltering
AVMutableVideoComposition
AVVideoCompositionCoreAnimationTool
AVVideoCompositionCoreAnimationToolInternal
AVAssetVideoCompositionUtility
AVAssetExportSessionInternal
AVAssetExportSession
AVMediaDataRequester
AVAPSyncOutputDeviceCommunicationChannelManager
AVOutputDeviceCommunicationChannelManager
AVAPSyncOutputDeviceCommunicationChannelImpl
AVSynchronizedLayerInternal
AVSynchronizedLayer
AVOutputDeviceInternal
AVOutputDevice
AVOutputDeviceFrecencyManager
AVOutputDeviceFrecentsReader
AVOutputDeviceFrecentsReading
AVOutputDeviceFrecentsWriter
AVOutputDeviceFrecentsWriting
AVOutputDeviceLegacyFrecentsReader
AVOutputDeviceLegacyFrecentsWriter
AVOutputDeviceAuthorizedPeerInternal
AVOutputDeviceAuthorizedPeer
AVPairedDeviceInternal
AVPairedDevice
AVLocalOutputDeviceImpl
AVOutputDeviceCommunicationChannel
AVClusterComponentOutputDeviceDescription
AVOutputDeviceDescription
AVSampleBufferVideoRenderer
AVSampleBufferVideoRendererProtectedContent
AVSampleBufferVideoRendererImageProtection
AVSampleBufferVideoRendererVideoDisplaySleepPrevention
PowerOptimization
AVSampleBufferVideoRendererOutputs
AVMetadataEnumerator
AVFigEndpointOutputDeviceImpl
AVOutputDeviceFigEndpointImplFetching
AVFigEndpointSecondDisplayModeToken
AVAssetCustomURLRequest
AVAssetCustomURLBridgeForNSURLSession
NSURLSessionDataDelegate
NSURLSessionTaskDelegate
NSURLSessionDelegate
AVNSURLProtocolRequest
AVAssetCustomURLBridgeForNSURLProtocol
AVAssetCustomURLAuthentication
AVAssetTrackSegment
AVAudioMix
AVMutableAudioMix
AVAudioMixInternal
AVAudioMixInputParameters
AVAudioMixInputParametersInternal
AVMutableAudioMixInputParameters
AVAudioMixCrossFadeUtility
AVOutputContextInternal
AVOutputContextCommunicationChannelInternal
AVOutputContextCommunicationChannel
AVOutputContextDestinationChangeInternal
AVOutputContextDestinationChange
AVOutputContextManagerInternal
AVOutputContextManager
AVRunLoopConditionRunLoopState
AVRunLoopCondition
AVAssetInspector
AVFormatReaderInspector
AVPlaybackItemInspector
AVStreamingResourceInspector
AVFigAssetInspector
AVScheduledAudioParametersInternal
AVScheduledAudioParameters
AVScheduledAudioParameters_Internal
AVMutableScheduledAudioParameters
AVOperation
ArrayOfOperations
AVBlockOperation
AVGlobalOperationQueue
AVOperationQueueWithFundamentalDependency
AVDepartureAnnouncingObjectMonitor
AVWaitForNotificationOrDeallocationOperation
AVObjectMonitoring
AVWeakReferencingDelegateStorage
AVDelegateStorage
AVAssetInspectorLoader
AVAssetSynchronousInspectorLoader
AVAssetMakeReadyForInspectionLoader
AVPlaybackItemInspectorLoader
AVFigAssetInspectorLoader
AVUnreachableAssetInspectorLoader
AVRoutingSessionManager
AVRoutingSession
AVRoutingSessionDestination
AVAssetTrackInspector
AVTrackReaderInspector
AVFigAssetTrackInspector
AVCompositionTrackReaderInspector
AVPlaybackItemTrackInspector
AVWeakReference
AVRetainReleaseWeakReference
AVSampleBufferGeneratorInternal
AVSampleBufferGenerator
AVSampleBufferRequestInternal
AVSampleBufferRequest
AVAssetSegmentReportSampleInformation
AVAssetSegmentTrackReport
AVAssetSegmentReport
AVCallbackContextRegistry
AVPlayerItemMediaDataCollectorInternal
AVPlayerItemMediaDataCollector
AVCMNotificationDispatcher
AVCMNotificationDispatcherListenerKey
AVSynchronousBlockScheduler
AVBlockScheduler
AVSerializedMostlySynchronousReentrantBlockScheduler
AVEventWaiter
AVDispatchOnce
AVAssetTrackGroupInternal
AVAssetTrackGroup
AVMetadataGroup
AVMetadataGroupSerializationSupport
AVMetadataGroupIdentification
AVTimedMetadataGroupInternal
AVTimedMetadataGroup
AVTimedMetadataGroupSerializationSupport
AVMutableTimedMetadataGroup
AVDateRangeMetadataGroupInternal
AVDateRangeMetadataGroup
AVDateRangeMetadataGroup_Private
AVDateRangeMetadataGroup_Internal
AVDateRangeMetadataGroup_Local
AVMutableDateRangeMetadataGroup
AVManagedAssetCacheInternal
AVManagedAssetCache
AVAssetDownloadCacheInternal
AVAssetDownloadCache
AVExecutionEnvironment
AVDelegatingPlaybackCoordinatorPlaybackControlCommand
AVDelegatingPlaybackCoordinatorPlayCommand
AVDelegatingPlaybackCoordinatorBufferingCommand
AVDelegatingPlaybackCoordinatorPauseCommand
AVDelegatingPlaybackCoordinatorSeekCommand
AVDelegatingPlaybackCoordinator
AVPlayerItemAccessLogInternal
AVPlayerItemAccessLog
AVPlayerItemAccessLogEventInternal
AVPlayerItemAccessLogEvent
AVPlayerItemAccessLogEventServiceIdentifier_Private
AVFragmentedMovie
AVFragmentMinding
AVFragmentedMovieMinder
AVFragmentedMovieTrackInternal
AVFragmentedMovieTrack
AVPlayerItemErrorLogInternal
AVPlayerItemErrorLog
AVPlayerItemErrorLogEventInternal
AVPlayerItemErrorLogEvent
AVExternalPlaybackMonitor
AVAudioSessionMediaPlayerOnlyInternal
AVMediaSelectionGroupInternal
AVMediaSelectionGroup
AVAssetMediaSelectionGroup
AVMediaSelectionOptionInternal
AVMediaSelectionOption
AVMediaSelectionTrackOption
AVMediaSelectionKeyValueOption
AVMediaSelectionNilOption
AVFigObjectInspector
AVOutputSettings
AVFormatSpecification
AVMediaFileType
AVMediaFileOutputSettingsValidator
AVOutputSettingsValidation
AVWAVEOutputSettingsValidator
AVAIFFOutputSettingsValidator
AVAIFCOutputSettingsValidator
AVISOOutputSettingsValidator
AVGenericMediaFileOutputSettingsValidator
AVAudioOutputSettings
AVAVAudioSettingsAudioOutputSettings
AVReencodedAudioSettingsForFig
AVDecodedAudioSettingsForFig
AVVideoOutputSettings
AVPixelBufferAttributesVideoOutputSettings
AVAVVideoSettingsVideoOutputSettings
AVReencodedVideoSettingsForFig
AVAudioSettingsValueConstrainer
AVFloat64Range
AVAggregateAssetDownloadTask
AVAssetDownloadSessionInternal
AVAssetDownloadSession
AVAssetDownloadSession_DelegateSupport
AVAssetDownloadSession_StreamingAssetOrchestratorSupport
AVAssetDownloadSession_Local
AVSampleCursorInternal
AVSampleCursor
AVPlayerItemOutputInternal
AVPlayerItemOutput
AVPlayerItemVideoOutputInternal
AVPlayerItemVideoOutput
AVFragmentedAssetInternal
AVFragmentedAsset
AVFragmentedAssetMinderInternal
AVFragmentedAssetMinder
AVFragmentedAssetTrackInternal
AVFragmentedAssetTrack
AVPixelBufferAttributeMediator
AVSampleBufferDisplayLayerContentLayer
AVSampleBufferDisplayLayer
AVSampleBufferDisplayLayerQueueManagement
ProtectedContent
AVSampleBufferDisplayLayerImageProtection
AVSampleBufferDisplayLayerVideoDisplaySleepPrevention
AVSampleBufferDisplayLayerPowerOptimization
AVSampleBufferDisplayLayerOutput
AVAssetResourceLoaderRemoteHandlerContext
AVURLAuthenticationChallenge
AVAssetResourceLoaderRequest
AVAssetResourceLoaderInternal
AVAssetResourceLoader
AVAssetResourceLoaderContentKeySupport
AVAssetResourceLoaderURLAuthenticationChallengeSender
NSURLAuthenticationChallengeSender
AVAssetResourceLoaderContentInformationCache
AVAssetResourceLoaderURLSessionSupport
AVAssetResourceLoaderRemoteHandlerSupport
AVAssetResourceLoadingContentInformationRequestInternal
AVAssetResourceLoadingContentInformationRequest
AVAssetResourceLoadingDataRequestInternal
AVAssetResourceLoadingDataRequest
AVAssetResourceLoadingRequestInternal
AVAssetResourceLoadingRequest
AVAssetResourceLoadingRequestorInternal
AVAssetResourceRenewalRequest
AVAssetResourceLoadingRequestor
AVSampleBufferRenderSynchronizerInternal
AVSampleBufferRenderSynchronizer
AVSampleBufferRenderSynchronizerRendererManagement
AVSampleBufferRenderSynchronizerRendererRestrictions
AVSampleBufferRenderSynchronizerTimeObservation
Simulation
AVLocalFigSampleBufferRenderSynchronizerFactory
AVFigSampleBufferRenderSynchronizerFactory
AVAssetVariant
AVAssetVariantVideoAttributes
AVAssetVariantAudioAttributes
AVAssetVariantAudioRenditionSpecificAttributes
AVAssetVariantQualifier
AVAssetVariantChannelCountPredicate
AVTextStyleRuleInternal
AVTextStyleRule
AVPlayerMediaSelectionCriteria
FigDictionaryRepresentation
AVAsynchronousCIImageFilteringRequestInternal
AVAsynchronousCIImageFilteringRequest
AVCoreImageFilterVideoCompositionInstruction
AVCoreImageFilterCustomVideoCompositor
AVPlayerItemLegibleOutputRealDependencyFactory
AVPlayerItemLegibleOutputDependencyFactory
AVPlayerItemLegibleOutputInternal
AVPlayerItemLegibleOutput
AVOutputSettingsAssistantInternal
AVOutputSettingsAssistant
Dependencies
AVExportSettingsOutputSettingsAssistantBaseSettings
AVOutputSettingsAssistantBaseSettingsProvider
AVExportSettingsOutputSettingsAssistantVideoSettingsAdjuster
AVOutputSettingsAssistantVideoSettingsAdjuster
AVIOKitOutputSettingsAssistantVideoEncoderCapabilities
AVOutputSettingsAssistantVideoEncoderCapabilities
AVMediaSelectionInternal
AVMediaSelection_Local
AVMediaSelection
AVMutableMediaSelection
AVExternalDeviceHIDInternal
AVExternalDeviceHID
AVExternalDeviceIconInternal
AVExternalDeviceIcon
AVExternalDeviceInternal
AVExternalDeviceScreenBorrowToken
AVExternalDeviceTurnByTurnToken
AVExternalDevice
AVFigEndpointOutputDeviceDiscoverySessionAvailableOutputDevicesImpl
AVOutputDeviceDiscoverySessionAvailableOutputDevices_FigEndpointImpl
AVPlayerCaptionLayer
AVVideoCompositingParameterValidationDelegate
AVCustomVideoCompositorSession
AVCustomVideoCompositorSession_FigCallbackHandling
AVDisplayCriteriaInternal
AVDisplayCriteria
_AVDisplayCriteriaPrivateMethods
AVKVODispatcher
AVObservationBlockFactory
AVWeakObservationBlockFactory
AVClientBlockKVONotifier
AVKVONotifier
AVCallbackCancellation
AVKVOIntrospection
AVWeaklyObservedObjectClientBlockKVONotifier
AVWeakObservableCallbackCancellationHelper
LegacyCallbackMethod
AVKeyPathDependencyManager
AVKeyPathDependencyRegistration
AVKeyPathDependency
AVTwoPartKeyPath
AVKeyPath
AVKeyPathFlattener
AVKeyPathFlattenerKVOIntrospectionShim
AVAsynchronousVideoCompositionRequestInternal
AVAsynchronousVideoCompositionRequest
AVRouteDetectorInternal
AVRouteDetector
AVVideoCompositionRenderContextInternal
AVVideoCompositionRenderContext
AVMediaDataStorageInternal
AVMediaDataStorage
AVMovieInternal
AVMovie
AVMovieMovieHeaderSupport
AVMutableMovieInternal
AVMutableMovie
AVMutableMovieMovieLevelEditing
AVMutableMovieTrackLevelEditing
AVMutableMovieMetadataEditing
AVPlayerItemSampleBufferOutputInternal
AVPlayerItemSampleBufferOutput
AVPlayerItemSampleBufferOutput_Internal
AVContentKeyRequestInternal
AVContentKeyRequest
AVContentKeyRequest_ExternalProtectionStateSupport
AVContentKeyReportGroupSupport
AVPersistableContentKeyRequest
AVContentKeyResponseFairPlayStreaming
AVContentKeyResponseClearKey
AVContentKeyResponseAuthorizationToken
AVContentKeyResponseInternal
AVContentKeyResponse
AVContentKeySessionInternal
AVContentKeySession
AVContentKeySessionPendingExpiredSessionReports
AVContentKeySessionPrivateUtilities
AVContentKeyRequestSupport
AVContentKeySession_Internal
AVContentKeyGroup_Support
AVContentKeyReportGroup
AVContentKeyReportGroup_Internal
AVContentKeyReportGroupPrivateUtilities
AVContentKeySpecifier
AVContentKey
APSyncController
AVAPSyncControllerRemoteOutputDeviceGroupImpl
sharedAudioPresentationOutputContext
initWithOutputContext:
initWithOutputDeviceGroupImpl:
sharedAudioPresentationOutputGroup
init
dealloc
outputDevices
userInfo
objectForKey:
parentOutputDeviceGroup
outputDeviceGroupImpl:didChangeOutputDevicesWithInitiator:
addOutputDevice:options:completionHandler:
dictionary
objectForKeyedSubscript:
setObject:forKey:
removeOutputDevice:options:completionHandler:
volume
outputDeviceGroupImplDidChangeVolume:
setVolume:
canSetVolume
outputDeviceGroupImplDidChangeVolumeControlType:
isEqual:
class
self
performSelector:
performSelector:withObject:
performSelector:withObject:withObject:
isProxy
isKindOfClass:
isMemberOfClass:
conformsToProtocol:
respondsToSelector:
retain
release
autorelease
retainCount
zone
hash
superclass
description
debugDescription
TQ,R
T#,R
T@"NSString",R,C
addOutputDevice:withOptions:completionHandler:
removeOutputDevice:withOptions:completionhandler:
volumeControlType
setParentOutputDeviceGroup:
receivesLongFormAudioFromLocalDevice
groupLeader
T@"AVOutputDeviceGroup",W
TB,R
T@"NSArray",R
T@"AVOutputDevice",R
Tf,R
_contextOutputDevicesDidChange:
_contextVolumeDidChange
_contextCanSetVolumeDidChange
.cxx_destruct
_outputContext
_parentOutputDeviceGroup
T@"AVOutputDeviceGroup",W,V_parentOutputDeviceGroup
defaultCenter
addObserverForName:object:queue:usingBlock:
status
cancellationReason
isEqualToString:
initWithStatus:cancellationReason:
loopingPlayer
loopingItem
loopingItemCopies
loopRange
loopCount
ivarAccessQueue
playerOriginalActionAtItemEnd
forwardPlaybackStartTime
lastEnqueuedLoopingItem
waitingForLastLoopingCopyToFinish
error
playerCurrentItemKVOInvoker
loopingItemStatusKVOInvokers
weakReference
listeningForItemFailedToPlayToEndTime
initWithPlayer:templateItem:timeRange:
stringWithFormat:
exceptionWithName:reason:userInfo:
initWithCapacity:
initWithReferencedObject:
asset
dispatchQueue
statusOfValueForKey:error:
_setupLoopingReturningError:
_changeStatusToFailedWithError:
loadValuesAsynchronouslyForKeys:completionHandler:
notificationDispatcherForCMNotificationCenter:
countByEnumeratingWithState:objects:count:
removeListenerWithWeakReference:callback:name:object:
removeItem:
setActionAtItemEnd:
willChangeValueForKey:
copy
didChangeValueForKey:
_turnOffLooping
arrayWithArray:
setReversePlaybackEndTime:
setForwardPlaybackEndTime:
seekToTime:toleranceBefore:toleranceAfter:completionHandler:
duration
dictionaryWithObjects:forKeys:count:
_calculateNumberOfCopiesNeeded
arrayWithCapacity:
copyWithZone:
addObject:
addObjectsFromArray:
rate
setRate:
actionAtItemEnd
currentItem
_configureLoopingItem:
insertItem:afterItem:
sharedKVODispatcher
startObservingObject:weakObserver:forKeyPath:options:context:
addListenerWithWeakReference:callback:name:object:flags:
_isWaitingForLastCopyToFinishSet
cancelCallbacks
null
indexOfObjectIdenticalTo:
_cleanupAfterPlayingLastLoopingCopy
initialize
playerLooperWithPlayer:templateItem:timeRange:
playerLooperWithPlayer:templateItem:
disableLooping
loopingPlayerItems
observeValueForKeyPath:ofObject:change:context:
_looper
Tq,R
T@"NSError",R
T@"NSArray",R,N
getStatus:error:
markAsCompleted
markAsFailedWithError:
isFailed
_ivarAccessLock
_status
_error
failed
TB,R,GisFailed
trackOutput
initWithAssetReaderTrackOutput:
mediaType
_isAttachedToAdaptor
_setAttachedAdaptor:
track
trackID
_copyNextSampleBufferForAdaptor
initWithSampleBuffer:
assetReaderOutputMetadataAdaptorWithAssetReaderTrackOutput:
addExtractionForOutput:figAssetReader:options:withOutputExtactionID:
assetReaderTrackOutput
nextTimedMetadataGroup
_internal
T@"AVAssetReaderTrackOutput",R,N
_metricsDictionary
initWithDictionary:
unsignedLongValue
doubleValue
totalNumberOfVideoFrames
numberOfDroppedVideoFrames
numberOfCorruptedVideoFrames
numberOfDisplayCompositedVideoFrames
numberOfNonDisplayCompositedVideoFrames
totalFrameDelay
_performanceMetricsInternal
TQ,R,N
Td,R,N
impl
discoveryMode
_recentlyUsedDevices
_otherDevices
initWithDeviceFeatures:
outputDeviceDiscoverySessionFactory
outputDeviceDiscoverySessionOfClass:withDeviceFeatures:
setParentOutputDeviceDiscoverySession:
targetAudioSession
setTargetAudioSession:
outputDeviceDiscoverySessionDidChangeDiscoveryMode:
array
availableOutputDevicesObject
recentlyUsedDevices
otherDevices
name
localizedStandardCompare:
sortUsingComparator:
availableOutputDeviceGroups
devicePresenceDetected
notificationWithName:object:userInfo:
postNotification:
outputDeviceDiscoverySessionImplDidChangeAvailableOutputDevices:
initWithOutputDeviceDiscoverySessionImpl:
setDiscoveryMode:
availableOutputDevices
outputDeviceDiscoverySessionImpl:didExpireWithReplacement:
outputDeviceDiscoverySessionImplDidChangeAvailableOutputDeviceGroups:
_outputDeviceDiscoverySession
Tq,N
T@"AVAudioSession",&,N
T@"AVOutputDeviceDiscoverySessionAvailableOutputDevices",R,N
TB,R,N
allDevices
initWithOutputDeviceDiscoverySessionAvailableOutputDevicesImpl:
isEqualToArray:
frecencyScore
count
sharedLocalDevice
_loadOutputDevices
_availableOutputDevices
secondaryImpl
deviceType
boolValue
deviceSubType
manufacturer
modelID
serialNumber
firmwareVersion
identifyingMACAddress
objectAtIndex:
intValue
initWithDeviceID:deviceName:deviceSubType:isClusterLeader:modelID:
producesLowFidelityAudio
batteryLevel
caseBatteryLevel
leftBatteryLevel
rightBatteryLevel
supportsDataOverACLProtocol
isInEar
airPlayProperties
isInUseByPairedDevice
connectedPairedDevices
deviceFeatures
requiresAuthorization
automaticallyAllowsConnectionsFromPeersInHomeGroup
onlyAllowsConnectionsFromPeersInHomeGroup
canAccessRemoteAssets
canAccessAppleMusic
canAccessiCloudMusicLibrary
supportsBufferedAirPlay
canPlayEncryptedProgressiveDownloadAssets
canFetchMediaDataFromSender
presentsOptimizedUserInterfaceWhenPlayingFetchedAudioOnlyAssets
supportsBluetoothSharing
availableBluetoothListeningModes
currentBluetoothListeningMode
setCurrentBluetoothListeningMode:error:
setSecondDisplayEnabled:
setSecondDisplayMode:completionHandler:
HAPConformance
supportsHeadTrackedSpatialAudio
allowsHeadTrackedSpatialAudio
setAllowsHeadTrackedSpatialAudio:error:
headTrackedSpatialAudioMode
setHeadTrackedSpatialAudioMode:error:
isHeadTrackedSpatialAudioActive
floatValue
implEventListener
outputDeviceImplDidChangeVolume:
outputDeviceImplDidChangeVolumeControlType:
outputDeviceImplDidChangeCanChangeVolume:
canBeGrouped
outputDeviceImplDidChangeProposedGroupID:
groupID
groupContainsGroupLeader
logicalDeviceID
isLogicalDeviceLeader
canCommunicateWithAllLogicalDeviceMembers
canRelayCommunicationChannel
configureUsingBlock:options:completionHandler:
localDeviceWithCompletion:
registerLocalDeviceDidChangeListener:
setImplEventListener:
clusterType
configuredClusterSize
clusteredDeviceDescriptions
isClusterLeader
clusterID
proposedGroupID
canBeGroupLeader
isGroupLeader
participatesInGroupPlayback
T@"<AVOutputDeviceImplSupport>",W
T@"NSString",R,C,N
Tq,R,N
T@"NSString",R,N
T@"NSData",R,C,N
T@"NSNumber",R,N
T@"NSDictionary",R,N
inUseByPairedDevice
TB,R,N,GisInUseByPairedDevice
T@"NSArray",R,C,N
headTrackedSpatialAudioActive
TB,R,N,GisHeadTrackedSpatialAudioActive
initWithSyncController:secondaryImpl:
_volumeDidChangeForEndpointWithID:
_volumeControlSupportedDidChangeForEndpointWithID:
_volumeControlTypeDidChangeForEndpointWithID:
_proposedGroupIDDidChangeForEndpointWithID:
_syncController
_secondaryImpl
_implEventListener
T@"<AVOutputDeviceImpl>",R,V_secondaryImpl
T@"<AVOutputDeviceImplSupport>",W,V_implEventListener
localDeviceDidChange
serialQueue
isPresentationLayer
isReadyForDisplayMutex
configurationQueue
dependencyManager
playerItemHasEnqueuedVideoFrameListener
windowSceneDidEnterBackgroundListener
windowSceneWillEnterForegroundListener
player
videoGravity
pixelBufferAttributes
lanczosDownscalingEnabled
lanczosDownscalingFactor
maskLayer
videoLayer
subtitleLayer
closedCaptionLayer
interstitialLayer
isForScrubbingOnly
isPartOfForegroundScene
showInterstitialInstead
isReadyForDisplay
playerBeingObserved
latestAppliedPresentationSize
legibleContentInsets
honorContentScale
screenScale
isVisible
playerCurrentItemSink
currentItemPresentationSizeSink
currentItemTracksSink
currentItemNonForcedSubtitlesEnabledSink
playerIsDisplayingClosedCaptionsSink
setPlayer:
setEdgeAntialiasingMask:
setMasksToBounds:
addSublayer:
setVideoGravity:
setName:
setBackgroundColor:
setBorderColor:
setBorderWidth:
setSubtitleGravityNonObscuring:
setHidden:
addObserver:forKeyPath:options:context:
hasEnqueuedVideoFrameChanged:
_windowSceneDidEnterBackground:
_windowSceneWillEnterForeground:
initWithDependencyHost:
dependencyHostIsFullyInitialized
initWithLayer:
_getMaskLayer:videoLayer:subtitleLayer:closedCaptionLayer:interstitialLayer:
bounds
_playerCurrentItemPresentationSize
begin
activateBackground:
setDisableActions:
setFrame:
setVideosize:
setVideoRelativeToViewport:
setViewport:
setShouldResizeVideoLayer:
setBounds:
setNeedsLayout
_compactDescription
frame
setPosition:
setSublayerTransform:
isLanczosFilterDownscalingEnabled
_videoLayer
sublayers
firstObject
setMinificationFilter:
commit
_updateClosedCaptionLayerBounds:videoRelativeToViewport:captionsAvoidanceMargins:
layoutSublayers
_notifyPlayerOfDisplaySize
setContentsScale:
isAdditive
setKeyPath:
setDelegate:
addAnimation:forKey:
sizeValue
valueWithPoint:
rectValue
numberWithDouble:
setFromValue:
setToValue:
valueWithCATransform3D:
_maskLayer
_addBoundsAnimationToLayer:usingAnimation:forKey:
_addPositionAnimationToLayer:usingAnimation:forKey:
_closedCaptionLayer
sublayerTransform
_addSublayerTransformAnimationToLayer:fromTransform:usingAnimation:gravity:presentationSize:forKey:
keyPath
animations
_forBoundsAnimations:applyBlock:
_addAnimationsForMaskLayer:forKey:
_addAnimationsForVideoLayer:size:gravity:forKey:
_addAnimationsForClosedCaptionLayer:gravity:forKey:
addAnimations:forKey:
animationForKey:
removeAnimationForKey:
removeAnimationsForKey:
removeAllAnimations
addCallbackToCancel:
_stopObservingPlayer:
removeObserver:
cancelAllCallbacks
_removeLayer:videoLayer:closedCaptionLayer:subtitleLayer:interstitialLayer:
removeObserver:forKeyPath:
contentsScale
context
convertRect:toLayer:
_displaySize
_evaluateDisplaySizeOfAllAttachedLayers
valueForKey:dependsOnValueAtKeyPath:
_cachedPresentationSizeOfCurrentItem
currentItemPublisher
presentationSizePublisher
mapPublisherWithUpstream:transform:
switchToLatestPublisherWithUpstream:
_applyCurrentItemPresentationSizeChangeAndForceUpdate:
initWithPublisher:requestingInitialValue:sink:
_handlePlayerCurrentItemDidChangeForPlayer:
nonForcedSubtitleDisplayEnabledPublisher
_handleNonForcedSubtitleDisplayDidChange:player:
closedCaptionsDisplayPublisher
_handleIsDisplayingClosedCaptionsDidChange:player:
cancel
contentsAreFlipped
setGeometryFlipped:
_subtitleLayer
updateNonForcedSubtitleDisplayEnabled:
clear
_updateReadyForDisplayForPlayerCurrentItem
propertyValuePublisherWithObject:key:notificationName:
_setPlayer:forPIP:
_removeLayer:
_startObservingPlayer:
notificationWithName:object:
_addLayer:
_updateIsPartOfForegroundScene
layerDidBecomeVisible:
object
_hasEnqueuedVideoFrame
superlayer
disableActions
animation
_pixelBufferAttributesDidChangeForLayer:
removeFromSuperlayer
_setShowInterstitialInstead:
isOverscanSubtitleSupportEnabled
setOverscanSubtitleSupportEnabled:
setWithObjects:
videoRect
setCaptionsAvoidanceMargins:
setForScrubbingOnly:
setToneMapToStandardDynamicRange:
contextId
_windowWithContextId:
windowScene
activationState
_setIsPartOfForegroundScene:
_currentWindowSceneIsForeground
_isPartOfForegroundScene
_notifyPlayerOfLayerForegroundStateChange
playerLayerWithPlayer:
makeClosedCaptionLayer
keyPathsForValuesAffectingVideoRect
declareKeyPathDependenciesWithRegistry:
addCallbackToCancelDuringDeallocation:
playerPublisher
setPixelBufferAttributes:
_interstitialLayer
_showInterstitialInstead
setLanczosFilterDownscalingEnabled:
lanczosFilterDownscaleFactor
setLanczosFilterDownscaleFactor:
_videoRectForBounds:
setLegibleContentInsets:
_playerLayer
T@"AVPlayer",&,N
T@"NSString",C
readyForDisplay
TB,R,N,GisReadyForDisplay
T{CGRect={CGPoint=dd}{CGSize=dd}},R,N
T@"NSDictionary",C,N
fromValue
toValue
byValue
setByValue:
values
setValues:
charValue
unsignedCharValue
shortValue
unsignedShortValue
unsignedIntValue
longValue
longLongValue
unsignedLongLongValue
integerValue
unsignedIntegerValue
CMTimeValue
valueWithCMTime:
allowsKeyedCoding
decodeCMTimeForKey:
encodeCMTime:forKey:
supportsSecureCoding
getValue:
objCType
isEqualToValue:
initWithCoder:
encodeWithCoder:
classForCoder
_time
CMTimeRangeValue
valueWithCMTimeRange:
decodeCMTimeRangeForKey:
encodeCMTimeRange:forKey:
_timeRange
CMTimeMappingValue
valueWithCMTimeMapping:
decodeCMTimeMappingForKey:
encodeCMTimeMapping:forKey:
_timeMapping
encodeObject:forKey:
decodeObjectOfClasses:forKey:
initWithObjects:
invalidate
invalidated
_reallyInvalidate
_removeTimebaseFromTimerSource
_stopObservingTimebaseNotifications
_attachTimerSourceToTimebase
_startObservingTimebaseNotifications
_effectiveRateChanged
_weakReference
initWithTimebase:queue:
timebase
_resetNextFireTime
_handleTimeDiscontinuity
_finishInitializationWithTimerEventHandler:
_timerQueue
_timerSource
_timebase
_isObservingTimebase
_lastRate
_currentRate
_invalid
T@"AVWeakReference",R,N,G_weakReference,V_weakReference
T^{OpaqueCMTimebase=},R
_fireBlockForTime:
drain
initWithTimebase:interval:queue:block:
_intervalRequested
_lastIntervalUsed
_lastPeriodicFireTime
_lastNonperiodicFireTime
_lastStopTime
_sequenceNum
_block
sortedArrayUsingComparator:
_fireBlock
indexOfObjectPassingTest:
_nextFiringTimeAfterTime:
_previousFiringTimeBeforeTime:
initWithTimebase:times:queue:block:
_times
initWithTimebase:fireTime:queue:block:
didFire
_fireTime
_didFire
identifier
containsObject:
metadataItemsFromArray:filteredByIdentifiers:
delegateStorage
identifiers
classifyingLabels
mostRecentlyModifiedMetadataGroupTimestamp
weakReferenceToPlayerItem
initWithIdentifiers:classifyingLabels:
initWithTimeIntervalSinceReferenceDate:
setDelegate:queue:
delegate
delegateQueue
_metadataCollectorInternal
T@"<AVPlayerItemMetadataCollectorPushDelegate>",R,W,N
T@"NSObject<OS_dispatch_queue>",R,N
indexSet
_initWithTaggedRangeMetadataDictionary:items:
classifyingLabel
modificationTimestamp
items
mutableCopy
setItems:
discoveryTimestamp
timeIntervalSinceReferenceDate
indexOfObject:
addIndex:
_getFilteredMetadataGroups:fromIdentifiers:andClassifyingLabels:modifiedIndexesOut:newIndexesOut:
_isAttachedToPlayerItem
metadataCollector:didCollectDateRangeMetadataGroups:indexesOfNewGroups:indexesOfModifiedGroups:
invokeDelegateCallbackWithBlock:
_attachToPlayerItem:
_detatchFromPlayerItem
_updateTaggedRangeMetadataArray:
initWithCoordinatorGenerator:
_ivarAccessQueue
_obtainCoordinator
_weakReferenceToPlayerItem
initWithPrimaryItem:identifier:time:date:templateItems:restrictions:resumptionOffset:playoutLimit:userDefinedAttributes:
initWithPrimaryItemAndFigEvent:templateItems:figEvent:
_figAsset
primaryItem
interstitialEventWithPrimaryItem:identifier:time:templateItems:restrictions:resumptionOffset:playoutLimit:
interstitialEventWithPrimaryItem:identifier:time:templateItems:restrictions:resumptionOffset:playoutLimit:userDefinedAttributes:
interstitialEventWithPrimaryItem:identifier:date:templateItems:restrictions:resumptionOffset:playoutLimit:
interstitialEventWithPrimaryItem:identifier:date:templateItems:restrictions:resumptionOffset:playoutLimit:userDefinedAttributes:
interstitialEventWithPrimaryItem:templateItems:figEvent:
time
date
templateItems
restrictions
resumptionOffset
playoutLimit
userDefinedAttributes
figEvent
_primaryItem
_figEvent
_templateItems
T@"AVPlayerItem",R,W,N
T{?=qiIq},R,N
T@"NSDate",R,N
initWithPrimaryPlayer:
_isInterstitialPlayer
interstitialPlayer
retainInterstitialEventCoordinator
_addMonitorListeners:
_removeMonitorListeners
interstitialEventMonitorWithPrimaryPlayer:
primaryPlayer
events
currentEvent
_primaryPlayer
_interstitialPlayer
_observedCoord
T@"AVPlayer",R,W,N
T@"AVQueuePlayer",R,N
T@"AVPlayerInterstitialEvent",R
interstitialEventObserverWithPrimaryPlayer:
interstitialEventControllerWithPrimaryPlayer:
setEvents:
cancelCurrentEventWithResumptionOffset:
_ivarQueue
T@"NSArray",C
pixelBufferConformer
stateQueue
lastImageTime
dictionaryWithObjectsAndKeys:
setUpWithOutputSettings:outputSettingsArePixelBufferAttributes:withExceptionReason:
_copyPixelBufferForItemTimeWithOptions:itemTimeForDisplay:options:
copyPixelBufferForSourceTime:sourceTimeForDisplay:
outputSequenceWasFlushed:
setOutputDelegate:queue:
outputDelegate
hasNewPixelBufferForSourceTime:
copyLastPixelBuffer:
_configureWithVideoQueue:
_resetLastImageTime
_visualContext
_dispatchOutputSequenceWasFlushed
_videoOutputInternal
T@"<AVSampleBufferVideoOutputPullDelegate>",R,W,N
referencedObject
mainBundle
bundleIdentifier
defaultManager
isFileURL
path
fileExistsAtPath:
expirationDate
priority
setExpirationDate:
setPriority:
sharedDownloadStorageManager
setStorageManagementPolicy:forURL:
storageManagementPolicyForURL:
allocWithZone:
_setPolicyDictionary:
_policyDictionary
isEqualToDictionary:
setValue:forKey:
mutableCopyWithZone:
_storageManagementPolicy
T@"NSDate",R,C,N
T@"NSString",C,N
T@"NSDate",C,N
policyDictionary
postNotificationName:object:userInfo:
postNotificationName:object:
removeOutputDevice:withOptions:completionHandler:
_impl
_cancellationReason
T@"NSString",R
reader
itemIndex
keySpace
commonKey
locale
extendedLanguageTag
languageCode
value
startDate
dataType
extras
_extractPropertiesFromDictionary:
_valueFromCFType:
JSONObjectWithData:options:error:
identifierForKey:keySpace:
localeWithLocaleIdentifier:
_updateCommonKey
removeObjectForKey:
_makeValueReady
_makePropertiesReady
_updateIdentifier
_updateLanguageInformationFromLocale:
_updateLanguageInformationFromExtendedLanguageTag:
_keyAsString
stringValue
absoluteString
setLocale:
numberFromString:
dataWithPropertyList:format:options:error:
numberValue
dateValue
dataValue
imageValue
T@"NSData",R,N
localeIdentifier
arrayWithObjects:count:
metadataItemsFromArray:filteredAndSortedAccordingToPreferredLanguages:
canonicalLocaleIdentifierFromString:
unicodeLanguageIdentifier
unicodeLanguageCode
indexesOfObjectsPassingTest:
containsIndex:
enumerateIndexesUsingBlock:
addIndexes:
keySpaceForIdentifier:
keyForIdentifier:
metadataItemsFromArray:withKey:keySpace:
objectsAtIndexes:
whitelist
valueForKey:
_metadataItemWithFigMetadataDictionary:containerURL:securityOptions:
_initWithFigMetadataDictionary:valueLoadingHandler:
_initWithFigMetadataDictionary:
_figMetadataDictionary
length
intrinsicAttributesOfExtraAttributes:
extraAttributes
_areExtraAttributesOf:comparableToExtraAttributesOf:
dictionaryWithDictionary:
_copyValueAsCFTypeWithFormatDescription:error:
_figMetadataDictionaryWithValue:diviningValueDataType:
_serializationDataType
_conformingDataTypes
pointValue
_createJSONEncodedDataFromValue:error:
isValidJSONObject:
dataWithJSONObject:options:error:
_clientExpectsISOUserDataKeysInQuickTimeUserDataKeySpace
_isoUserDataKeysRequiringKeySpaceConversion
setWithObject:
setKeySpace:
_replaceQuickTimeUserDataKeySpaceWithISOUserDataKeySpaceIfRequired:
_figMetadataFormat
allKeys
fastestEncoding
dataTypeForValue:
metadataItemsFromArray:withLocale:
metadataItemsFromArray:filteredByIdentifier:
metadataItemsFromArray:withStringValue:
metadataItemsFromArray:filteredByMetadataItemFilter:
_metadataItemWithFigMetadataDictionary:
_figMetadataPropertyFromMetadataItems:
_initWithReader:itemIndex:
_figMetadataSpecificationReturningError:
cancelLoading
_priv
T@"NSLocale",R,C,N
T@"<NSObject><NSCopying>",R,C,N
T@"NSDictionary",R,C,N
setKey:
setExtraAttributes:
metadataItem
keyPathsForValuesAffectingIdentifier
setIdentifier:
setExtendedLanguageTag:
setTime:
setDuration:
setStartDate:
setValue:
setDataType:
_mutablePriv
T@"NSLocale",C,N
T{?=qiIq},N
T@"<NSObject><NSCopying>",C,N
valueRequest
valueLoadingHandler
valueStatus
valueLoadingError
loadingCompletionHandlers
readWriteQueue
metadataItemValueRequestWithMetadataItem:
_valueForKeyDependsOnMetadataValue:
_valueStatus
arrayWithObject:
_waitForLoadingOfValueDependentKey:
metadataItemWithPropertiesOfMetadataItem:valueLoadingHandler:
_valueRequestDidFinish
_lazyMetadataItem
weakReferenceToMetadataItem
initWithMetadataItem:
respondWithValue:dataType:
respondWithValue:
respondWithError:
_valueRequest
T@"AVMetadataItem",R,W
figAsset
chapterGroupIndex
chapterIndex
chapterType
chapterDataType
valueErrorCode
completions
_initWithAsset:chapterGroupIndex:chapterIndex:chapterType:extendedLanguageTag:languageCode:chapterDataType:time:duration:
_addFigAssetNotifications
_removeFigAssetNotifications
_ensureValueLoadedSync
initWithObjectsAndKeys:
_setValueStatus:figErrorCode:
removeAllObjects
_takeValueFrom:
_chapterGroupIndex
_chapterIndex
_privChapter
addKeySpace:key:toWhitelistDictionary:
addIdentifier:toWhitelistDictionary:
metadataItemFilterForSharing
_itemFilterInternal
T@"NSDictionary",R
dataWithLength:
mutableBytes
rangeOfString:options:
URLWithString:
URLWithString:relativeToURL:
dictionaryWithObject:forKey:
sharedSession
scheme
statusCode
MIMEType
dataTaskWithURL:completionHandler:
resume
assetProxyWithPropertyList:
_assetInspector
propertyListForProxy
makePropertyListForProxyWithOptions:
T@,R,N
loader
tracks
makeTracksArrayOnce
numberWithShort:
initWithPropertyList:
initWithFigAsset:forAsset:
_formatReader
assetInspector
_classForTrackInspectors
trackCount
_initWithAsset:trackIndex:
runBlockOnce:
makePropertyListForMovieProxyHeader:name:
_playbackItem
_assetInspectorLoader
_assetProxy
loadChapterInfoOnce
chapterGroupInfo
anchorChapterType
availableChapterLanguages
availableCanonicalizedChapterLanguages
availableChapterLocales
loggingIdentifier
URLAssetWithURL:options:
initWithURL:options:
initWithURL:playbackItem:trackIDs:dynamicBehavior:
initWithData:contentType:options:
makeAssetLoggingIdentifier
valueWithNonretainedObject:
_isStreaming
numberWithBool:
valueForUndefinedKey:
loadValuesAsynchronouslyForKeys:keysForCollectionKeys:completionHandler:
_mindsFragments
_fragmentMindingInterval
_setFragmentMindingInterval:
_setIsAssociatedWithFragmentMinder:
preferredRate
preferredVolume
preferredSoundCheckVolumeNormalization
preferredTransform
maximumVideoResolution
availableVideoDynamicRanges
minimumTimeOffsetFromLive
_ensureAllDependenciesOfKeyAreLoaded:
tracksWithMediaType:
naturalSize
naturalTimeScale
providesPreciseDurationAndTiming
alternateTrackGroups
initWithAsset:trackIDs:
trackGroups
trackIDs
trackWithTrackID:
_firstTrackGroupWithMediaTypes:
_mediaSelectionGroupDictionaries
allObjects
mediaSelectionGroupWithAsset:dictionary:
mediaSelectionGroupForMediaCharacteristic:
_plistHasOptionIdentifier:
mediaSelectionOptionWithPropertyList:
_initWithAsset:
preferredMediaSelection
availableMediaCharacteristicsWithMediaSelectionOptions
options
selectMediaOption:inMediaSelectionGroup:
trackReferences
creationDate
lyrics
commonMetadata
availableMetadataFormats
arrayByAddingObject:
metadataForFormat:
arrayByAddingObjectsFromArray:
_initWithAsset:trackID:
initWithAsset:mediaType:
tracksWithMediaCharacteristics:
tracksWithMediaCharacteristic:
initWithAsset:mediaCharacteristics:
compatibleTrackForCompositionTrack:
hasProtectedContent
isPlayable
isExportable
isReadable
isComposable
isCompatibleWithPhotosTranscodingServiceWithOptions:
isCompatibleWithSavedPhotosAlbum
isCompatibleWithAirPlayVideo
canContainFragments
containsFragments
overallDurationHint
supportsAnalysisReporting
_assetAnalysisMessages
assetWithURL:
assetWithURL:figPlaybackItem:trackIDs:dynamicBehavior:
assetWithData:contentType:options:
_assetCreationOptionsRequiresInProcessOperation:
expectsPropertyRevisedNotifications
supportsPlayerItems
_setLoggingIdentifier:
_nameForLogging
_comparisonToken
statusOfValueForKey:
_loadValuesSynchronouslyForKeys:trackKeys:
_absoluteURL
_mutableComposition
_needsLegacyChangeNotifications
referenceRestrictions
audioAlternatesTrackGroup
subtitleAlternatesTrackGroup
loadMediaSelectionGroupForMediaCharacteristic:completionHandler:
mediaSelectionGroupForPropertyList:mediaSelectionOption:
allMediaSelections
loadMetadataForFormat:completionHandler:
metadata
_ID3Metadata
_tracksWithClass:
_tracksDidChange
loadTrackWithTrackID:completionHandler:
loadTracksWithMediaType:completionHandler:
loadTracksWithMediaCharacteristic:completionHandler:
findCompatibleTrackForCompositionTrack:completionHandler:
_requiresInProcessOperation
_hasResourceLoaderDelegate
_handleURLRequest:
preferredDisplayCriteria
_asset
_preferredDisplayCriteria
Tf,R,N
T{CGAffineTransform=dddddd},R,N
T{CGSize=dd},R,N
T@"AVDisplayCriteria",R,N,V_preferredDisplayCriteria
figChapterGroupInfo
figChapters
initWithLocaleIdentifier:
_loadChapterInfo
timeRange
canonicalLanguageIdentifierFromString:
_chapterDataTypeForMediaSubType:
initWithItems:timeRange:
replaceObjectAtIndex:withObject:
_addChapterMetadataItem:timeRange:toChapters:fromIndex:
_chapterMetadataGroupsWithFigChapterGroups:titleLanguage:containingItemsWithCommonKeys:
_availableCanonicalizedChapterLanguages
_chapterMetadataGroupsWithTitleLanguage:containingItemsWithCommonKeys:
_chapterMetadataGroupsBestMatchingPreferredLanguages:containingItemsWithCommonKeys:
chapterMetadataGroupsBestMatchingPreferredLanguages:
chapterMetadataGroupsWithTitleLocale:containingItemsWithCommonKeys:
loadChapterMetadataGroupsBestMatchingPreferredLanguages:completionHandler:
loadChapterMetadataGroupsWithTitleLocale:containingItemsWithCommonKeys:completionHandler:
formatDescriptions
resolvedURL
_chapterTracks
_containsAtLeastOnePlayableAudioTrack
_containsAtLeastOnePlayableVideoTrack
_exportURL
moovAtomSize
_sequenceNumber
initWithSequenceNumber:
fragmentWithSequenceNumber:
sequenceNumber
initWithCount:firstSequenceNumber:
numberWithInteger:
_count
_firstSequenceNumber
_cachedFragments
firstFragmentSequenceNumber
fragmentCount
fragments
URLRequestHelper
customURLBridgeForNSURLProtocol
customURLAuthenticationUsingKeychain
resourceLoader
makeOneResourceLoaderOnly
assetCache
makeOneAssetDownloadCacheOnly
tracksAccessQueue
initializationOptions
hasInstanceIdentifierMapping
requiresSecurityScopeRelease
sessionReference
propertyList:isValidForFormat:
_figFileMIMETypes
unionSet:
_figStreamingMIMETypes
_figStreamingUTIs
_figFileUTIs
_figFilePathExtensions
allFileTypeIdentifiers
_fileUTTypes
_streamingUTTypes
_UTTypes
_figMIMETypes
audiovisualMIMETypes
_avfValidationPlist
_getFigAssetiTunesStoreContentInfoFromURLAssetiTunesStoreContentInfo:
numberWithInt:
whitespaceCharacterSet
stringByTrimmingCharactersInSet:
componentsSeparatedByString:
isProgressiveDownloadCacheEnabled
isHTTPLiveStreamingCacheEnabled
properties
startAccessingSecurityScopedResource
initWithAsset:
_classForFigAssetInspectorLoader
initWithFigError:userInfo:
_setAssetInspectorLoader:
_getFigAssetCreationOptionsFromURLAssetInitializationOptions:assetLoggingIdentifier:figAssetCreationFlags:error:
code
reason
initWithURL:figAssetCreationFlags:figAssetCreationOptions:avAssetInitializationOptions:forAsset:
initWithFigAsset:
_resourceLoaderWithRemoteHandlerContext:
numberWithLongLong:
_errorForFigNotificationPayload:key:
UTF8String
_removeUserInfoObject
stopAccessingSecurityScopedResource
setFigAssetProvider:
_classForAssetTracks
absoluteURL
contentKeySpecifiersEligibleForPreloading
_figHFSFileTypes
audiovisualTypes
isPlayableExtendedMIMEType:
initWithFileURL:offset:length:options:
_ensureAssetDownloadCache
creationOptions
_URLAsset
T@"NSURL",R,C,N
_managedAssetCache
shouldMatchDataInCacheByURLPathComponentOnly
shouldMatchDataInCacheByURLWithoutQueryComponent
identifyingTagClass
identifyingTag
_instanceIdentifier
originalNetworkContentURL
downloadToken
SHA1Digest
cacheKey
downloadDestinationURL
_shouldOptimizeAccessForLinearMoviePlayback
_clientURLLoadingRepresentsAccurateNetworkStatistics
variants
initWithURLRequestHelper:asset:remoteCustomURLHandlerContext:
T@"AVAssetResourceLoader",R,N
URLAsset
setResourceLoader:
figAssetProvider
_weakReferenceToSelf
_weakReferenceToAsset
_figAssetProvider
_weakReferenceToResourceLoader
T@?,C,N,V_figAssetProvider
T@"AVAssetResourceLoader",W,N
Tr^{OpaqueFigAsset=},R,N
initWithKeyOptions:valueOptions:capacity:
_setUserInfoObject:
instanceIdentifierMapTable
userInfoObjectForURLAssetInstanceIdentifier:
setUserInfoObject:forURLAsset:
userInfoObjectForURLAsset:
_getFigAssetCreationOptionsFromDataAssetInitializationOptions:figAssetCreationFlags:
_dataLengthLimit
initWithData:contentType:
_initializationOptions
_loader
_allocateTracksOnceOnly
_tracks
objectEnumerator
setMediaType:
setMediaCharacteristics:
nextObject
hasMediaCharacteristics:
trackEnumeratorWithAsset:
_mediaType
_mediaCharacteristics
_enumerator
_contentKeyGroups
_figContentKeySession
createAndInstallCustomURLHandlerForAsset:outHandler:
_setContentKeySessionCustomURLHandler:
isInternal
mayRequireContentKeysForMediaDataProcessing
_attachToContentKeySession:failedSinceAlreadyAttachedToAnotherSession:
contentKeySession
_attachedToExternalContentKeySession
expire
contentKeySession:didProvideContentKey:
setMaxConcurrentOperationCount:
setUnderlyingQueue:
sessionWithConfiguration:delegate:delegateQueue:
setSession:
_installHandlerForNSURLSessionConfiguration:queue:
initWithURL:readonly:
initWithURL:assetInitializationOptions:
decodeObjectOfClass:forKey:
itemProviderDataWithURL:assetInitializationOptions:
securityScopedURL
assetInitializationOptions
_securityScopedURLWrapper
_assetInitializationOptions
T@"NSURL",R,N
T@"NSDictionary",R,N,V_assetInitializationOptions
caseInsensitiveCompare:
unarchivedObjectOfClass:fromData:error:
addEntriesFromDictionary:
archivedDataWithRootObject:requiringSecureCoding:error:
loadDataWithTypeIdentifier:forItemProviderCompletionHandler:
_loadFileRepresentationOfTypeIdentifier:forItemProviderCompletionHandler:
readableTypeIdentifiersForItemProvider
objectWithItemProviderData:typeIdentifier:error:
_preferredRepresentationForItemProviderReadableTypeIdentifier:
_objectWithItemProviderFileURL:typeIdentifier:isInPlace:error:
writableTypeIdentifiersForItemProvider
itemProviderVisibilityForRepresentationWithTypeIdentifier:
_preferredRepresentationForItemProviderWritableTypeIdentifier:
T@"<AVLoggingIdentifier>",R,&,N
_audioEffect
initWithMinimumCutOffFrequency:maximumCutOffFrequency:bypassThreshold:sweepValue:
sweepFilterEffectParametersWithMinimumCutOffFrequency:maximumCutOffFrequency:bypassThreshold:sweepValue:
sweepValue
minimumCutOffFrequency
maximumCutOffFrequency
bypassThreshold
sweepFilterEffectWithSweepValue:
_sweepFilterAudioEffect
Ti,R,N
generator
appliesPreferredTrackTransform
maximumSize
apertureMode
requestedTimeToleranceBefore
requestedTimeToleranceAfter
requests
requestsQueue
nextRequestID
videoComposition
customVideoCompositorSession
imageRequestQueue
cancelledRequestIDThreshold
generateImagesAsyncQueue
prefersStandardDynamicRange
_NSErrorForError:
setObject:forKeyedSubscript:
renderSize
_scaledSizeForRenderSize:
_videoSettingWithSize:
assetReaderWithAsset:error:
initWithArray:
assetReaderVideoCompositionOutputWithVideoTracks:videoSettings:
_setVideoComposition:customVideoCompositorSession:
setVideoComposition:
assetReaderTrackOutputWithTrack:outputSettings:
setAppliesPreferredTrackTransform:
addOutput:
_makeAutoreleasedAssetReader
_copyCGImageAtTime:usingAssetReader:error:
_optionsDictionary
_ensureFigAssetImageGeneratorAllowingSynchronousPropertyLoad:error:
removeObject:
_isValidReturningExceptionReason:
renderScale
_copyFigVideoCompositor:andSession:recyclingSession:forFigRemaker:error:
customVideoCompositor
_requestWithRequestID:
outputs
setTimeRange:
_setReadSingleSample:
startReading
copyNextSampleBuffer
cancelReading
assetImageGeneratorWithAsset:
copyCGImageAtTime:actualTime:error:
generateCGImagesAsynchronouslyForTimes:completionHandler:
cancelAllCGImageGeneration
setPrefersStandardDynamicRange:
setMaximumSize:
setApertureMode:
setRequestedTimeToleranceBefore:
setRequestedTimeToleranceAfter:
_didGenerateCGImage:
_failedToGenerateCGImage:
_serverDied
T@"AVAsset",R,N
TB,N
T{CGSize=dd},N
T@"AVVideoComposition",C,N
T@"<AVVideoCompositing>",R,N
close
parentChannel
communicationChannelImpl:didReceiveData:
communicationChannelImplDidClose:
sendData:completionHandler:
setParentChannel:
T@"AVOutputDeviceCommunicationChannel",W
initWithRemoteControlSession:
_didReceiveData:
_didCloseCommunicationChannel
_remoteControlSession
_parentChannel
T@"AVOutputDeviceCommunicationChannel",W,V_parentChannel
weakReferenceToSelf
trackInspector
assetWeakReference
figAssetTrackNotificationListenerWeakReference
figAssetTrackNotificationSource
arrayWithObjects:
_figAssetTrack
assetTrackInspectorWithAsset:trackID:trackIndex:
_startListeningToFigAssetTrackNotifications
_initWithAsset:trackID:trackIndex:
_stopListeningToFigAssetTrackNotifications
_figTrackReader
isDecodable
playabilityValidationResult
isEnabled
isSelfContained
totalSampleDataLength
mediaCharacteristics
hasMediaCharacteristic:
mediaPresentationTimeRange
mediaDecodeTimeRange
latentBaseDecodeTimeStampOfFirstTrackFragment
requiresFrameReordering
hasAudioSampleDependencies
estimatedDataRate
peakDataRate
dimensions
layer
loudnessInfo
nominalFrameRate
minSampleDuration
mediaCharacteristicsForMediaTypes
segments
segmentForTrackTime:
segmentsExcludeAudioPrimingAndRemainderDurations
gaplessSourceTimeRange
segmentsAsPresented
samplePresentationTimeForTrackTime:
alternateGroupID
defaultAlternateGroupID
provisionalAlternateGroupID
isExcludedFromAutoselectionInTrackGroup
associatedTracksOfType:
_firstAssociatedTrackWithAssociationType:
_trackReferences
hasAudibleBooksContent
isAudibleBooksContentAuthorized
canProvideSampleCursors
makeSampleCursorWithPresentationTimeStamp:
makeSampleCursorAtFirstSampleInDecodeOrder
makeSampleCursorAtLastSampleInDecodeOrder
_assetTrackInspector
keyPathsForValuesAffectingTimeRange
_subtitleFormatDescriptionMatchesTextDisplayFlags:flagsMask:
minFrameDuration
loadSegmentForTrackTime:completionHandler:
loadSamplePresentationTimeForTrackTime:completionHandler:
_fallbackTrack
_followingTrackAmongTracks:
_pairedForcedOnlySubtitlesTrack
availableTrackAssociationTypes
loadAssociatedTracksOfType:completionHandler:
_track
T@"AVAsset",R,W,N
timeMapping
_hasMultipleEdits
_hasScaledEdits
_hasEmptyEdits
_hasMultipleDistinctFormatDescriptions
_firstFormatDescriptionIsLPCM
pixelBufferAttributeMediator
stateDispatchQueue
figConfigurationQueue
layerInteractionQueue
currentItemPropertyUpdateQueue
layersQ
proxyTimebase
logPerformanceData
didFinishSuspensionNotificationToken
didEnterBackgroundNotificationToken
willEnterForegroundNotificationToken
audioSessionMediaPlayerOnly
IAPDCallbackToken
prerollIDMutex
layerForegroundingChangeToken
KVOChangeSerializer
lastItem
queueModifications
pendingFigPlayerProperties
audioSession
vibrationPattern
outputContext
IOwnTheFigPlayer
audiovisualBackgroundPlaybackPolicy
handlersToCallWhenReadyToPlay
shouldReduceResourceUsage
resourceConservationLevelWhilePaused
playerRole
externalPlaybackVideoGravity
userVolume
minRateForAudioPlayback
maxRateForAudioPlayback
autoSwitchStreamVariants
preparesItemsForPlaybackAsynchronously
allowsOutOfBandTextTrackRendering
muted
closedCaptionDisplayEnabled
appliesMediaSelectionCriteriaAutomatically
dynamicallyChoosesInitialVariant
limitsBandwidthForCellularAccess
usesAudioOnlyModeForExternalPlayback
allowsPixelBufferPoolSharing
disallowsAMRAudio
disallowsHardwareAcceleratedVideoDecoder
layerDestinationIsTVOut
preventsDisplaySleepDuringVideoPlayback
disallowsVideoLayerDisplayCompositing
allowsExternalPlayback
usesExternalPlaybackWhileExternalScreenIsActive
captionPipelineStrategy
audioOutputDeviceUniqueID
clientName
STSLabel
multichannelAudioStrategy
clientPriority
PIPModePossible
isDisplayingClosedCaptions
externalPlaybackActive
airPlayVideoActive
isConnectedToPhysicalSecondScreen
outputObscuredDueToInsufficientExternalProtection
externalProtectionStatus
ancillaryPerformanceInformationForDisplay
rateChangeIdentifier
automaticallyWaitsToMinimizeStalling
usesLegacyAutomaticWaitingBehavior
timeControlStatus
reasonForWaitingToPlay
currentItemPresentationSize
currentItemNonForcedSubtitlesEnabled
preferredVideoDecoderGPURegistryID
disallowsAutoPauseOnRouteRemovalIfNoAudio
ensuresActiveAudioSessionWhenStartingPlayback
hostApplicationInForeground
preservesAudioSessionSampleRate
silencesOtherPlaybackDuringPIP
prefersPlayingSilentlyWhenConflictingWithOtherPlayback
suppressesAudioRendering
isInterstitialPlayer
isSilencedDueToConflictWithOtherPlayback
mxSessionID
videoTargets
playbackCoordinator
clientRequestedPlaybackCoordinator
backgroundPIPAuthorizationToken
rateDidChangeNotificationIncludesExtendedDiagnosticPayload
interstitialEventCoordinator
videoLayers
subtitleLayers
closedCaptionLayers
avPlayerLayers
nextPrerollIDToGenerate
pendingPrerollID
prerollCompletionHandler
currentItemSuppressesVideoLayersNotificationToken
currentItemPreferredPixelBufferAttributesNotificationToken
figPlayer
figPlaybackItemToIdentifyNextCurrentItem
needsToCreateFigPlayer
cachedFigMediaSelectionCriteriaProperty
itemsInFigPlayQueue
expectedAssetTypes
reevaluateBackgroundPlayback
hadAssociatedOnscreenPlayerLayerWhenSuspended
suspensionExpected
rateUpdateDuringTransitionDecided
videoLayersAreAttached
figMasterClock
captionRenderingStrategy
displaysUsedForPlayback
initWithURL:
initWithPlayerItem:
_attachToPlayer:
_addItemToLinkedList_invokeOnIvarAccessQueue:afterItem:
_runOnIvarAccessQueueOperationThatMayChangeCurrentItemWithPreflightBlock:modificationBlock:error:
playerItemWithURL:
worksAroundConcurrentKVOCrash
weakObjectsHashTable
makePlayerLoggingIdentifier
setAllowsExternalPlayback:
setAppliesMediaSelectionCriteriaAutomatically:
_setPendingFigPlayerProperty:forKey:
setAutomaticallyWaitsToMinimizeStalling:
initWithPlayer:
_didFinishSuspension:
_didEnterBackground:
_willEnterForeground:
_layerForegroundStateChanged:
sharedCallbackContextRegistry
registerCallbackContextObject:
_addFPListeners
initWithFigPlayer:
unregisterCallbackContextForToken:
_removeFPListeners
_stopObservingPropertiesOfCurrentItem:
_removeAllLayers
_removeFPInterstitialCoordinatorListeners
_stateDispatchQueue
removeObserver:forKeyPath:context:
masterClock
sourceClock
setMasterClock:
setSourceClock:
setValue:forUndefinedKey:
_items
_playerChangeStatusToFailedWithError:
makeObjectsPerformSelector:withObject:
_rateDidChangeNotificationPayloadForAVFRateChangeReason:reasonIsExtendedDiagnostic:rateChangeIdentifier:rateChangeOriginator:
_copyFigPlayer
removeRequestedPixelBufferAttributesAttributesForKey:
_preferredPixelBufferAttributes
_suppressesVideoLayers
setRequestedPixelBufferAttributes:forKey:
setLayersAreSuppressed:
mediatedPixelBufferAttributes
_updateDecoderPixelBufferAttributes:onFigPlayer:
_startObservingPropertiesOfCurrentItem:
_isReadyForInspectionOfPresentationSize
_getCachedPresentationSize:
_getCachedNonForcedSubtitleEnabled:
_copyProxyTimebase
_synchronizeWithNewCurrentItem
_updateCurrentItemPreferredPixelBufferAttributesAndVideoLayerSuppression
_inferredTimeControlStatusAndWaitingReason:forRate:
_removeItem:
_applyPlayQueueChangesToFigPlayerWithCompletionHandler:
_updateProxyTimebaseFromNewCurrentItem
scheduleBlock:
_itemOkayToPlayWhileTransitioningToBackground:
_hostApplicationInForeground
pause
_removeItemFromLinkedList_invokeOnIvarAccessQueue:
_makeReadyForEnqueueingWithCompletionHandler:
_createAndConfigureFigPlayerWithType:completionHandler:
_preservesAudioSessionSampleRate
_pendingFigPlayerPropertyForKey:
_createFigPlayerWithType:options:player:
_isAirPlayVideoActive
isExternalPlaybackActive
_clientRequestedPlaybackCoordinator
setFigPlaybackCoordinator:
_pendingFigPlayerProperties
_hasForegroundLayers
_isVideoPlaybackAllowedWhileInBackground
_attachVideoLayersToFigPlayer
_setNeroVideoGravityOnFigPlayer
_addToPlayQueueOfFigPlayerOfPlayer:afterFigPlaybackItemOfItem:
_applyLinkedListOfItemsToFigPlayerUsingBlock:
_interstitialPlayerIfCreated
linkInterstitialFigPlayersOnQueue
_retainInterstitialCoordinatorIfCreated
currentHandler
handleFailureInMethod:object:file:lineNumber:description:
_insertAfterItem:
_setCurrentItem:
modificationForInsertingItem:afterItem:
_enqueuePlayQueueModification_invokeOnIvarAccessQueue:
_items_invokeOnIvarAccessQueue
item
modificationType
afterItem
_removeFromPlayQueueOfFigPlayerOfAttachedPlayer
_nextItem
_previousItem
_removeFromItems
modificationForRemovingItem:
_enumerateItemsUsingBlock:
_rateDidChangeNotificationIncludesExtendedDiagnosticPayload
_playbackCoordinatorWithoutTriggeringFullSetup
participantForIdentifier:
_rateDidChangeNotificationPayloadForFigRateChangeReason:rateChangeIdentifier:rateChangeOriginator:
numberWithFloat:
_updatePlayerRate:rateChangeReason:rateChangeIdentifier:figPlayerSetRateHandler:
setRate:withVolumeRampDuration:playImmediately:rateChangeReason:affectsCoordinatedPlayback:
_updateWaitingReasonAccordingToInterstitialEventCoordinator:forTimeControlStatus:
_usesLegacyAutomaticWaitingBehavior
_timeControlStatusAndWaitingReason:forPlaybackState:
currentTime
currentUnfoldedTime
seekToDate:completionHandler:
seekToTime:completionHandler:
_createPrerollID
_cancelPendingPrerollAndRegisterPrerollCompletionHandler:
_unregisterAndReturnRetainedPrerollCompletionHandler
category
playerAVAudioSession
sharedAVSystemController
getVolume:forCategory:
isMuted
figPlayerActionForActionAtItemEnd:
_setActionAtItemEnd:allowingAdvance:
isClosedCaptionDisplayEnabled
setPlayerRole:synchronously:
outputContextForID:
contextID
_detachVideoLayersFromFigPlayer:
_closedCaptionLayers
_attachClosedCaptionLayersToFigPlayer
_avPlayerLayers
opacity
_maximumAVPlayerLayerDisplaySize
_subtitleLayers
_videoLayers
_isIAPDExtendedModeActive
_updatePixelBufferAttributesForLayer:
setCaptionRenderingStrategy:
_externalPlaybackVideoGravity
_fpNotificationNames
_copyPerformanceDataForCurrentItem
_dynamicallyChoosesInitialVariant
_limitsBandwidthForCellularAccess
setPausesAudiovisualPlaybackInBackground:
pausesAudiovisualPlaybackInBackground
setAudiovisualBackgroundPlaybackPolicy:
playerWithURL:
playerWithPlayerItem:
playerWithFigPlayer:
automaticallyNotifiesObserversOfCurrentItem
automaticallyNotifiesObserversOfRate
automaticallyNotifiesObserversOfUsesLegacyAutomaticWaitingBehavior
automaticallyNotifiesObserversOfUserVolume
automaticallyNotifiesObserversOfVibrationPattern
keyPathsForValuesAffectingVolume
keyPathsForValuesAffectingMuted
keyPathsForValuesAffectingActionAtItemEnd
keyPathsForValuesAffectingClosedCaptionDisplayEnabled
automaticallyNotifiesObserversOfExternalPlaybackActive
automaticallyNotifiesObserversOfUsesAudioOnlyModeForExternalPlayback
automaticallyNotifiesObserversOfAirPlayVideoActive
automaticallyNotifiesObserversOfUsesAirPlayVideoWhileAirPlayScreenIsActive
availableHDRModes
initWithDispatchQueue:
_noteNewPresentationSizeForPlayerItem:
_cachedNonForcedSubtitleDisplayEnabledForCurrentItem
_noteNewNonForcedSubtitleDisplayEnabledForPlayerItem:
_itemIsReadyToPlay:
_advanceCurrentItemAccordingToFigPlaybackItem:
_advanceToNextItem
prepareItem:withCompletionHandler:
_insertItem:afterItem:
setExpectedAssetTypes:
_setAncillaryPerformanceInformationForDisplay:
_ancillaryPerformanceInformationForDisplay
replaceCurrentItemWithPlayerItem:
_removeAllItems
_rate
setRate:withVolumeRampDuration:
playImmediatelyAtRate:
pauseWithoutAffectingCoordinatedPlayback
_setRateDidChangeNotificationIncludesExtendedDiagnosticPayload:
_timeControlStatusAndWaitingReason:
_setUsesLegacyAutomaticWaitingBehavior:
seekToDate:
seekToTime:
seekToTime:toleranceBefore:toleranceAfter:
setRate:time:atHostTime:
prerollAtRate:completionHandler:
cancelPendingPrerolls
prerollOperationDidComplete:notificationPayload:
_userVolume
_setUserVolume:
setVibrationPattern:
_playerVolume
_isMuted
setMuted:
setClosedCaptionDisplayEnabled:
_isDisplayingClosedCaptions
setShouldReduceResourceUsage:
setResourceConservationLevelWhilePaused:
setPlayerRole:
setUsesExternalPlaybackWhileExternalScreenIsActive:
_externalPlaybackActive
externalPlaybackType
setUsesAudioOnlyModeForExternalPlayback:
setOutputContext:
allowsAirPlayVideo
setAllowsAirPlayVideo:
_airPlayVideoActive
isAirPlayVideoActive
usesAirPlayVideoWhileAirPlayScreenIsActive
setUsesAirPlayVideoWhileAirPlayScreenIsActive:
play
addPeriodicTimeObserverForInterval:queue:usingBlock:
addBoundaryTimeObserverForTimes:queue:usingBlock:
removeTimeObserver:
_pixelBufferAttributeMediator
_addCaptionLayer:subtitleLayer:
_removeCaptionLayer:subtitleLayer:
_attachFigPlayerToSubtitleLayers
_detachFigPlayerFromSubtitleLayers
_detachClosedCaptionLayersFromFigPlayer:
_performanceDictionary
setExternalPlaybackVideoGravity:
_addFPInterstitialCoordinatorListeners
_setFigPlaybackItemToMakeCurrent:
_getDisplayVideoRange:displaySize:refreshRate:
_shouldLogPerformanceData
_logPerformanceDataForPreviousItem
_logPerformanceDataForCurrentItem
_setDynamicallyChoosesInitialVariant:
_setLimitsBandwidthForCellularAccess:
_setPausesAudioVisualPlaybackInBackground:
_pausesAudioVisualPlaybackInBackground
_suppressesAudioRendering
_setSuppressesAudioRendering:
_player
T@"NSError",R,N
setPreventsDisplaySleepDuringVideoPlayback:
_extractFPExternalProtectionStatus:
allKeysForObject:
_playbackDisplaysForFigPlayer
_displaysUsedForPlayback
_setDisplaysUsedForPlayback:
_externalProtectionStatusCopiedFromFig
_externalProtectionStatus
T@"NSArray",C,N,S_setDisplaysUsedForPlayback:
removeAudioPlaybackRateLimits
isAudioPlaybackEnabledAtAllRates
setMinRateForAudioPlayback:
setMaxRateForAudioPlayback:
audioPlaybackEnabledAtAllRates
TB,R,N,GisAudioPlaybackEnabledAtAllRates
currentCarPlayExternalDevice
otherParticipants
_CALayerDestinationIsTVOut
_hasAssociatedAVPlayerLayerInPIPMode
_carplayIsActive
_applicationHasExternallyDisplayedAVPlayerLayerAndIsUnderDeviceLock
_canContinuePlaybackInBackgrounBasedOnAudiovisualBackgroundPlaybackPolicy:
assetTrack
_detachVideoLayersForSuspension
_ensureVideoLayersAreAttached
_setHostApplicationInForeground:
_hasAssociatedOnscreenAVPlayerLayer
_shouldDetachVideoLayersFromFigPlayer
_clientName
_hasEnabledVideo
setActive:error:
_rateUpdateDuringTransitionDecided
isIAPDExtendedModeActive
_clientPriority
_setCALayerDestinationIsTVOut:
errorWithDomain:code:userInfo:
_setWantsVolumeChangesWhenPausedOrInactive:
_setEQPreset:
_setStoppingFadeOutDuration:
_setClientName:
_setClientPriority:
_setPreventsSleepDuringVideoPlayback:
_preventsSleepDuringVideoPlayback
_setPreferredLanguageList:
_resumePlayback:error:
setAllowsPixelBufferPoolSharing:
setDisallowsAMRAudio:
setDisallowsHardwareAcceleratedVideoDecoder:
figDictionary
initWithFigDictionary:
setMediaSelectionCriteria:forMediaCharacteristic:
mediaSelectionCriteriaForMediaCharacteristic:
defaultMediaSelectionCriteriaForMediaCharacteristic:
setAudioOutputDeviceUniqueID:
setAutoSwitchStreamVariants:
setPreparesItemsForPlaybackAsynchronously:
automaticallyNotifiesObserversOfAutoSwitchStreamVariants
setAllowsOutOfBandTextTrackRendering:
setMultichannelAudioStrategy:
setCaptionPipelineStrategy:
setAudioSession:
_setPreservesAudioSessionSampleRate:
T@"AVAudioSession",&
TB,N,G_preservesAudioSessionSampleRate,S_setPreservesAudioSessionSampleRate:
initWithModificationType:item:afterItem:
_modificationType
_item
_afterItem
Tq,R,N,V_modificationType
T@"AVPlayerItem",R,N,V_item
T@"AVPlayerItem",R,N,V_afterItem
setPreferredVideoDecoderGPURegistryID:
TQ,N
setLoggingIdentifier:
T@"<AVLoggingIdentifier>",&,N
_setDisallowsAutoPauseOnRouteRemovalIfNoAudio:
_disallowsAutoPauseOnRouteRemovalIfNoAudio
TB,N,G_disallowsAutoPauseOnRouteRemovalIfNoAudio,S_setDisallowsAutoPauseOnRouteRemovalIfNoAudio:
_setEnsuresActiveAudioSessionWhenStartingPlayback:
_ensuresActiveAudioSessionWhenStartingPlayback
_STSLabel
_setSTSLabel:
T@"NSString",&,N,G_STSLabel,S_setSTSLabel:
setPrefersPlayingSilentlyWhenConflictingWithOtherPlayback:
_silencesOtherPlaybackDuringPIP
_setSilencesOtherPlaybackDuringPIP:
setBackgroundPIPAuthorizationToken:
TB,N,G_silencesOtherPlaybackDuringPIP,S_setSilencesOtherPlaybackDuringPIP:
_updateVideoTargetOnFigPlayer
addVideoTarget:
removeVideoTarget:
sharedInstance
_setIsInterstitialPlayer:
_setInterstitialPlayerGuts:
syncAudioSessionToInterstitialPlayer:
_setInterstitialPlayer:
_noteRemoteInterstitialEvents:forItem:
_noteCurrentRemoteInterstitialEvent:
_copyFigPlaybackCoordinator
T@"AVPlayerPlaybackCoordinator",R
stringWithUTF8String:
handleFailureInFunction:file:lineNumber:description:
_copyFigPlaybackItem
_setTimedMetadata:
cancelPendingSeeks
initWithUUIDString:
callbackContextForToken:
setAutomaticallyHandlesInterstitialEvents:
_setTemplatePlayerItem:
setVariantQualifiers:
setMediaSelections:
encodeBool:forKey:
propertyList
decodeBoolForKey:
initWithAsset:propertyList:
environmentalConditions
_predicate
_variant
_figAlternate
_selectedMediaArray
_createFigContentConfigForEnvironmentalCondition:
_setupFigContentConfigsInDownloadConfig:environmentalCondition:
setIsPrimaryContentConfig:
_setupFigContentConfigsInDownloadConfig:
variantQualifiers
mediaSelections
_variantQualifiers
_mediaSelections
_isPrimaryContentConfig
T@"NSArray",C,N,V_variantQualifiers
T@"NSArray",C,N,V_mediaSelections
initWithAsset:title:
encodeInt64:forKey:
decodeInt64ForKey:
numberWithUnsignedLongLong:
downloadConfigurationWithAsset:title:
artworkData
setArtworkData:
primaryContentConfiguration
auxiliaryContentConfigurations
setAuxiliaryContentConfigurations:
optimizesAuxiliaryContentConfigurations
setOptimizesAuxiliaryContentConfigurations:
_title
_artworkData
_primaryContentConfiguration
_auxiliaryContentConfigurations
_optimizesAuxiliaryContentConfigurations
T@"NSData",C,N,V_artworkData
T@"AVAssetDownloadContentConfiguration",R,N,V_primaryContentConfiguration
T@"NSArray",C,N,V_auxiliaryContentConfigurations
TB,N,V_optimizesAuxiliaryContentConfigurations
_optionsDictionaryForDownloadConfig
_startCompositionTime
_endCompositionTime
_subsequentStartCompositionTime
_subsequentEndCompositionTime
initWithStartCompositionTime:endCompositionTime:subsequentStartCompositionTime:subsequentEndCompositionTime:
startCompositionTime
endCompositionTime
subsequentStartCompositionTime
subsequentEndCompositionTime
audioTimePitchAlgorithm
allowedAudioSpatializationFormats
mediaDataRequester
scheduledAudioParameters
readOnlyControlTimebase
weakReferenceToSynchronizer
figAudioRenderer
startRequestingMediaData
_initializeTimebase
setAudioTimePitchAlgorithm:
_installNotificationHandlers
_uninstallNotificationHandlers
opaqueSessionID
retrieveSessionWithID:
_transitionToStatus:error:
_transitionToFailedStatusWithOSStatus:
initWithMediaDataConsumer:requestQueue:requestBlock:
sampleBufferAudioRenderer
isReadyForMoreMediaData
copyFigSampleBufferAudioRenderer:
setRenderSynchronizer:error:
enqueueSampleBuffer:
flush
requestMediaDataWhenReadyOnQueue:usingBlock:
stopRequestingMediaData
hasSufficientMediaDataForReliablePlaybackStart
T^{OpaqueCMTimebase=},R,&
readyForMoreMediaData
TB,R,GisReadyForMoreMediaData
_triggerMediaRequestCallback
_wasFlushedAutomaticallyAtTime:
setIsUnaccompaniedByVisuals:
flushFromSourceTime:completionHandler:
setAllowedAudioSpatializationFormats:
_audioRendererInternal
_allowedAudioSpatializationFormats
TQ,N,V_allowedAudioSpatializationFormats
input
initWithAssetWriterInput:
sourceFormatHint
assetWriterInput
_createSerializedRepresentationWithFormatDescription:error:
_appendSampleBuffer:error:
_tellAssetWriterToTransitionToFailedStatusWithError:
assetWriterInputMetadataAdaptorWithAssetWriterInput:
appendTimedMetadataGroup:
T@"AVAssetWriterInput",R,N
externalProtectionState
_monitor
figPlaybackItemAccessorQueue
figPlaybackItemSetterQueue
seekQueue
seekIDMutex
proxyUnfoldedTimebase
proxyFoldedTimebase
automaticallyLoadedAssetKeys
wasInitializedWithURL
figPlaybackItem
cachedTracks
syncLayers
itemOutputs
itemVideoOutputs
itemLegibleOutputsForKeys
itemMetadataOutputsForKeys
suppressesVideoLayers
foldedTimebase
unfoldedFigTimebase
didBecomeReadyForInspectionOfTracks
didBecomeReadyForInspectionOfPresentationSize
didBecomeReadyForInspectionOfDuration
figAssetDidBecomeReadyForInspectionOfMediaSelectionOptions
didBecomeReadyForInspectionOfRecommendedTimeOffsetFromLive
assetWithFigPlaybackItem
trackIDsForAssetWithFigPlaybackItem
needTimedMetadataNotification
didBecomeReadyForBasicInspection
audioMix
forwardPlaybackEndTime
reversePlaybackEndTime
advanceTimeForOverlappedPlayback
advanceTimeForOverlappedPlaybackWasSet
preservesTimeOffsetFromLive
configuredTimeOffsetFromLive
recommendedTimeOffsetFromLive
seekingWaitsForVideoCompositionRendering
textStyleRules
textHighlightArray
initialFigTimePitchAlgorithm
canUseNetworkResourcesForLiveStreamingWhilePaused
maximumForwardBufferDuration
maximumTrailingBufferDuration
preferredPeakBitRate
preferredPeakBitRateForExpensiveNetworks
startsOnFirstEligibleVariant
itemCollectors
itemMetadataCollectors
interstitialEventCollector
RTCReportingFlags
gaplessInfo
soundCheckVolumeNormalization
volumeAdjustment
audioProcessingTap
initialLimitReadAhead
mediaKind
reversesMoreVideoFramesInMemory
reversesMoreVideoFramesInMemoryWasSet
aggressivelyCachesVideoFrames
aggressivelyCachesVideoFramesWasSet
decodesAllFramesDuringOrdinaryPlayback
decodesAllFramesDuringOrdinaryPlaybackWasSet
initialContinuesPlayingDuringPrerollForSeek
initialContinuesPlayingDuringPrerollForRateChange
usesIFrameOnlyPlaybackForHighRateScaledEditsWasSet
usesIFrameOnlyPlaybackForHighRateScaledEdits
minimumIntervalForIFrameOnlyPlayback
minimumIntervalForIFrameOnlyPlaybackWasSet
speedThresholdForIFrameOnlyPlayback
speedThresholdForIFrameOnlyPlaybackWasSet
initialDate
initialEstimatedDate
requiresAccessLog
suppressesAudioOnlyVariants
prefersOfflinePlayableVariants
variantPreferences
preferredMaximumAudioSampleRate
imageQueueInterpolationCurve
imageQueueInterpolationCurveWasSet
blendsVideoFrames
blendsVideoFramesWasSet
appliesPerFrameHDRDisplayMetadata
appliesPerFrameHDRDisplayMetadataWasSet
videoApertureMode
usesMinimalLatencyForVideoCompositionRendering
initialAlwaysMonitorsPlayability
initialPlaybackLikelyToKeepUpTrigger
savesDownloadedDataToDiskWhenDone
networkUsuallyExceedsMaxBitRate
allowProgressiveSwitchUp
allowProgressiveStartup
allowProgressiveResume
IFramePrefetchTargetDimensions
AVKitData
preferredMaximumResolution
preferredMaximumResolutionForExpensiveNetworks
preferredMinimumResolution
canPlayFastForward
canPlayFastReverse
canPlayReverse
canPlaySlowReverse
canPlaySlowForward
canStepForward
canStepBackward
presentationSize
playbackBufferEmpty
playbackBufferFull
playbackLikelyToKeepUp
restrictsAutomaticMediaSelectionToAvailableOfflineOptions
nonForcedSubtitlesEnabled
hasEnabledVideo
hasVideo
hasEnabledAudio
hasEnqueuedVideoFrame
externalProtectionRequested
automaticallyHandlesInterstitialEvents
seekableTimeRanges
seekableTimeRangesLastModifiedTime
loadedTimeRanges
loopTimeRange
currentMediaSelection
videoEnhancementMode
isRenderingSpatialAudio
playerPlaybackCoordinator
coordinatedPlaybackIdentifierChangeNotificationToken
needToSeekAfterCreatingFigPlaybackItem
initialTime
initialSetTimeFlags
initialMinSnapTime
initialMaxSnapTime
nextSeekIDToGenerate
pendingSeekID
seekCompletionHandler
previousItem
nextItem
playerConnection
initialWillNeverSeekBackwardsHint
clientsOriginalVideoComposition
figVideoCompositor
interstitialTemplate
eqPreset
rampInOutInfo
audibleDRMInfo
initialVariantIndex
currentStableVariantID
mediaOptionsSelectedByClient
serviceIdentifier
timedMetadata
handlersToCallWhenReadyForEnqueueing
haveInitialSamples
haveCPEProtector
didInformObserversAboutAvailabilityOfTracks
didFireKVOForAssetForNonStreamingItem
mostRecentlyAppliedAudioMix
playerReference
didSetAssetToAssetWithFigPlaybackItem
figCPEProtector
initWithAsset:automaticallyLoadedAssetKeys:
_hasOverrideForSelector:
makeDerivedIdentifier
_setURL:
_setAsset:
_removeFAListeners
_removeFoldedTBListeners
_removeInterstitialEventCollector
setAudioMix:
setTextStyleRules:
setTextHighlightArray:
setRequiresAccessLog:
setSuppressesAudioOnlyVariants:
setPrefersOfflinePlayableVariants:
setAdvanceTimeForOverlappedPlayback:
automaticallyPreservesTimeOffsetFromLive
setAutomaticallyPreservesTimeOffsetFromLive:
setConfiguredTimeOffsetFromLive:
setImageQueueInterpolationCurve:
setBlendsVideoFrames:
setAppliesPerFrameHDRDisplayMetadata:
setReversesMoreVideoFramesInMemory:
setAggressivelyCachesVideoFrames:
setDecodesAllFramesDuringOrdinaryPlayback:
setLoudnessInfo:
setAVKitData:
setServiceIdentifier:
setSoundCheckVolumeNormalization:
setVolumeAdjustment:
setMediaKind:
setRestrictions:
continuesPlayingDuringPrerollForRateChange
setContinuesPlayingDuringPrerollForRateChange:
continuesPlayingDuringPrerollForSeek
setContinuesPlayingDuringPrerollForSeek:
setUsesIFrameOnlyPlaybackForHighRateScaledEdits:
setMinimumIntervalForIFrameOnlyPlayback:
setSpeedThresholdForIFrameOnlyPlayback:
setVariantPreferences:
setPreferredMaximumAudioSampleRate:
isNonForcedSubtitleDisplayEnabled
setNonForcedSubtitleDisplayEnabled:
selectedMediaOptionInMediaSelectionGroup:
setVideoEnhancementMode:
setStartsOnFirstEligibleVariant:
_URL
_isExternalProtectionRequiredForPlayback
commitCustomVideoCompositorPropertiesAndReturnError:
_mapAssetKeys:toFigAssetPropertySet:figAssetTrackPropertySet:callerName:
setSavesDownloadedDataToDiskWhenDone:
_updateLoopTimeRangeOnFigPlaybackItem
_updateForwardPlaybackEndTimeOnFigPlaybackItem
_updateReversePlaybackEndTimeOnFigPlaybackItem
_updateAdvanceTimeForOverlappedPlaybackOnFigPlaybackItem
_updateImageQueueInterpolationCurveOnFigPlaybackItem
_updateBlendsVideoFramesOnFigPlaybackItem
_updateAppliesPerFrameHDRDisplayMetadataOnFigPlaybackItem
_updateReversesMoreVideoFramesInMemoryOnFigPlaybackItem
_updateAggressivelyCachesVideoFramesOnFigPlaybackItem
_updateDecodesAllFramesDuringOrdinaryPlaybackOnFigPlaybackItem
_updateContinuesPlayingDuringPrerollForSeekOnFigPlaybackItem
_updateContinuesPlayingDuringPrerollForRateChangeOnFigPlaybackItem
_updateUsesIFrameOnlyPlaybackForHighRateScaledEditsOnFigPlaybackItem
_updateMinimumIntervalForIFrameOnlyPlaybackOnFigPlaybackItem
_updateSpeedThresholdForIFrameOnlyPlaybackOnFigPlaybackItem
_updateCanUseNetworkResourcesForLiveStreamingWhilePausedOnFigPlaybackItem
_updatePreservesTimeOffsetFromLive:
_updateConfiguredTimeOffsetFromLiveOnFigPlaybackItem:
frameDuration
_setVideoCompositionFrameDuration:
sourceTrackIDForFrameTiming
_setVideoCompositionSourceTrackIDForFrameTiming:
_setVideoCompositionRenderSize:
_setVideoCompositionRenderScale:
_configureVideoCompositionColorProperties
_serializableInstructions
_setVideoCompositionInstructions:
sourceSampleDataTrackIDs
_setVideoCompositionSourceSampleDataTrackIDs:
_setVideoCompositor:
_applyCurrentAudioMix
_updateSeekingWaitsForVideoCompositionRenderingOnFigPlaybackItem
_quietlySetEQPreset:
_updatePlaybackPropertiesOnFigPlaybackItem
_quietlySetVariantIndex:
_updateSoundCheckVolumeNormalizationOnFigPlaybackItem
_updateVolumeAdjustmentOnFigPlaybackItem
_updateFigTimePitchAlgorithmOnFigPlaybackItem
_updateLoudnessInfoOnFigPlaybackItem
_updateAudioTapProcessorOnFigPlaybackItem
_applyMediaSelectionOptions
_updateTextStyleRulesOnFigPlaybackItem
_updateTextHighlightArrayOnFigPlaybackItem
_updateMediaKindOnFigPlaybackItem
_updateRestrictionsOnFigPlaybackItem
_quietlySetServiceIdentifier:
_setSyncLayersOnFigPlaybackItem:
_updateTimebase
_updateIFramePrefetchTargetDimensionsOnFigPlaybackItem
_updatePreferredPeakBitRateOnFigPlaybackItem
_updatePreferredPeakBitRateForExpensiveNetworksOnFigPlaybackItem
_updatePreferredMaximumResolutionOnFigPlaybackItem
_updatePreferredMaximumResolutionForExpensiveNetworksOnFigPlaybackItem
_updatePreferredMinimumResolutionOnFigPlaybackItem
_updateMaximumTrailingBufferDurationOnFigPlaybackItem
_updateMaximumForwardBufferDurationOnFigPlaybackItem
_updateVideoApertureModeOnFigPlaybackItem
_updateVariantPreferencesOnFigPlaybackItem
_updatePreferredMaximumAudioSampleRateOnFigPlaybackItem
_updateRTCReportingFlagsOnFigPlaybackItem
_metadataCollectors
numberWithUnsignedInteger:
_updateVideoEnhancementModeOnFigPlaybackItem
_updateStartsOnFirstEligibleVariantOnFigPlaybackItem
_createFigPlaybackItemForFigPlayer:asset:URL:flags:options:playbackItem:
_configurePlaybackItemAndReturnError:
_updateLimitReadAheadOnFigPlaybackItem
playbackLikelyToKeepUpTrigger
_updatePlaybackLikelyToKeepUpTriggerOnFigPlaybackItem
willNeverSeekBackwardsHint
_updateWillNeverSeekBackwardsHintOnFigPlaybackItem
alwaysMonitorsPlayability
_updateAlwaysMonitorsPlayabilityOnFigPlaybackItem
_updateNonForcedSubtitleDisplayEnabledOnFigPlaybackItem
_updateUsesMinimalLatencyForVideoCompositionRenderingOnFigPlaybackItem
_updateRestrictsAutomaticMediaSelectionToAvailableOfflineOptions
_cachedTracks
_attachToFigPlaybackItemOfPlayerItem:
_evaluateVideoOutputs
_evaluateLegibleOutputs
_evaluateMetadataOutputs
_respondToBecomingReadyForBasicInspection
_addInterstitialEventCollector
_attachToFigPlayer
initWithWeakReferenceToPlayer:weakReferenceToPlayerItem:
addItemToPlayQueueAfterPlaybackItemOfItem:
removeItemFromPlayQueue
mediaSelectionNilOptionForGroup:
_addFAListeners
_isReadyForInspectionOfDuration
_markAsReadyForInspectionOfDuration
_duration
_markAsReadyForInspectionOfTracks
_markFigAssetAsReadyForInspectionOfMediaSelectionOptions
_informObserversAboutAvailabilityOfCurrentMediaSelection
_forStreamingItemsVendAssetWithFigPlaybackItem
_forNonStreamingURLsFireKVOForAssetWhenReadyForInspection
_presentationSize
_isFigAssetReadyForInspectionOfMediaSelectionOptionsAndFigPlaybackItemIsReadyForInspection
_figSelectedMediaArray
_currentMediaSelectionFromFigSelectedMediaArray:
_setCurrentMediaSelection:
errorLog
string
appendFormat:
domain
_ensureAssetWithFigPlaybackItemWithTrackIDs:
playerItemTrackWithFigPlaybackItem:readyForInspection:trackID:asset:playerItem:
_isReadyForInspectionOfTracks
_tracksWithFPTrackIDArray:fromFigPlaybackItem:
_tracksFromAssetTrackIDs
_copyFoldedTimebase
_respondToBecomingReadyForBasicInspectionWithDuration:
_informObserversAboutAvailabilityOfDuration:
_markAsReadyForBasicInspection
_markAsReadyForInspectionOfPresentationSize
_respondToFigPlaybackItemBecomingReadyForInpection
makeObjectsPerformSelector:
_kickAssetObserversIfAppropriate
_informObserversAboutAvailabilityOfTracks:
_informObserversAboutAvailabilityOfPresentationSize
_isReadyForBasicInspection
_invokeReadyForEnqueueingHandlers
_canStepForward
_isReadyForInspectionOfRecommendedTimeOffsetFromLive
_currentTimeWithOptionalFoldedTimebase:
_CreateSeekID
playerItem:shouldSeekToTime:toleranceBefore:toleranceAfter:
_cancelPendingSeekAndRegisterSeekCompletionHandler:
_unregisterInvokeAndReleasePendingSeekCompletionHandlerForSeekID:completeAnyPendingSeek:finished:
_copyProxyFoldedTimebase
_copyProxyUnfoldedTimebase
_copyTimebaseFromFigPlaybackItem:
_addFoldedTBListeners
limitReadAhead
setMaximumForwardBufferDuration:
_audioVolumeCurve
inputParameters
_audioMixInputParametersForTrackID:
audioMixInputParameters
setTrackID:
_setAudioCurvesAccordingToInputParameters:forTrackID:
audioTapProcessor
_setAudioTapProcessor:forTrackID:
_setAudioTimePitchAlgorithm:forTrackID:
effectParameters
_setAudioEffectParameters:forTrackID:
_copyStateDispatchQueue
animationTool
_changeSeed
_deepCopy
detachVideoComposition
propertyListForTextStyleRules:
_seekableTimeRangesFromFPSeekableTimeIntervals:
_loadedTimeRangesFromFPPlaybableTimeIntervals:
_playbackProperties
_mediaOptionsSelectedByClient
_selectMediaOption:inMediaSelectionGroup:cacheIfAppropriate:
_isStreamingGroup
_setMediaOptionsSelectedByClient:forKey:
allowsEmptySelection
_mediaOptionsSelectedByClientForKey:
_propertyListForMediaSelection:forGroup:
_matchesGroupID:mediaType:
_selectMediaOption:usingFigSelectedMediaArrayObtainedFromGroup:
_cacheMediaSelectionOption:forMediaSelectionGroup:
_selectMediaOption:inGroup:cacheIfAppropriate:
_allowSelectMediaOptionsAutomaticallyUsingFigSelectedMediaArrayObtainedFromGroup:
_clearCachedMediaSelectionGroup:
_propertyListForSelectedMediaOptionUsingFigSelectedMediaArrayObtainedFromGroup:
_hasSelectionInCachedMediaSelectionGroup:
_representsNilSelection
defaultOption
_isFigAssetReadyForInspectionOfMediaSelectionOptions
_initWithAsset:selectedMediaArray:
_initWithDeferredLoadingOfAsset:selectedMediaArray:
_initWithAssetWithoutGroupDictionaries:
getAndClearClientError
suppressesPlayerRendering
_suppressionForOutputs:
_setSuppressesVideoLayers:
setPreferredPeakBitRate:
setPreferredMaximumResolution:
_videoOutputs
_legibleOutputsForKeys
allValues
_updateVideoSuppressionOnFigPlaybackItem:basedOnOutputs:
_updateLegibleSuppressionOnFigPlaybackItem:basedOnOutputs:
addMediaDataCollector:
removeMediaDataCollector:
_canPlayFastForward
_canPlayReverse
_canPlayFastReverse
_canStepBackward
_playbackCoordinator
identifierForPlayerItem:
_updateItemIdentifierForCoordinatedPlayback
playerItemWithAsset:
playerItemWithAsset:automaticallyLoadedAssetKeys:
automaticallyNotifiesObserversOfSavesDownloadedDataToDiskWhenDone
automaticallyNotifiesObserversOfUsesMinimalLatencyForVideoCompositionRendering
automaticallyNotifiesObserversOfVariantIndex
automaticallyNotifiesObserversOfHasEnabledVideo
automaticallyNotifiesObserversOfHasEnabledAudio
automaticallyNotifiesObserversOfNetworkUsuallyExceedsMaxBitRate
automaticallyNotifiesObserversOfAllowProgressiveSwitchUp
automaticallyNotifiesObserversOfAllowProgressiveStartup
automaticallyNotifiesObserversOfAllowProgressiveResume
automaticallyNotifiesObserversOfStatus
automaticallyNotifiesObserversOfAsset
automaticallyNotifiesObserversOfPlaybackLikelyToKeepUp
automaticallyNotifiesObserversOfPlaybackBufferEmpty
automaticallyNotifiesObserversOfPlaybackBufferFull
automaticallyNotifiesObserversOfSeekableTimeRanges
automaticallyNotifiesObserversOfLoadedTimeRanges
automaticallyNotifiesObserversOfPresentationSize
automaticallyNotifiesObserversOfTracks
_playerConnection
tracksPublisher
_markAsNeedingNewAssetWithFigPlaybackItem
_setAssetToAssetWithFigPlaybackItemIfAppropriate
_markAssetWithFigPlaybackItemAsNeedingNewTracks
_trackWithTrackID:
_enabledTrackFormatDescriptions
_isAFileBasedItemThatsReadyToPlay
_configuredTimeOffsetFromLive
_markAsReadyForInspectionOfRecommendedTimeOffsetFromLive
_recommendedTimeOffsetFromLive
currentDate
setInitialDate:
currentEstimatedDate
setInitialEstimatedDate:
stepByCount:
_copyUnfoldedFigTimebase
unfoldedTimebase
setRTCReportingFlags:
setLimitReadAhead:
allowsExtendedReadAhead
setAllowsExtendedReadAhead:
preferredForwardBufferDuration
setPreferredForwardBufferDuration:
setMaximumTrailingBufferDuration:
setAlwaysMonitorsPlayability:
setPlaybackLikelyToKeepUpTrigger:
setWillNeverSeekBackwardsHint:
_setVideoCompositionColorPrimaries:
_setVideoCompositionColorYCbCrMatrix:
_setVideoCompositionColorTransferFunction:
setSeekingWaitsForVideoCompositionRendering:
setUsesMinimalLatencyForVideoCompositionRendering:
isPlaybackLikelyToKeepUp
isPlaybackBufferFull
isPlaybackBufferEmpty
progressTowardsPlaybackLikelyToKeepUp
setCanUseNetworkResourcesForLiveStreamingWhilePaused:
playabilityMetrics
setLoopTimeRange:
_seekableTimeRanges
_loadedTimeRanges
setGaplessInfo:
configurationGroup
variantIndex
liveUpdateInterval
setVariantIndex:
_removeMediaOptionsSelectedByClient
selectMediaOptionAutomaticallyInMediaSelectionGroup:
playerAppliesAutomaticMediaSelectionToGroup:
setRestrictsAutomaticMediaSelectionToAvailableOfflineOptions:
_isNonForcedSubtitleDisplayEnabled
_figCPEProtector
_removeSyncLayer:
_addSyncLayer:
_playbackItemNotificationPayloadToError:
_hasEnabledAudio
setNetworkUsuallyExceedsMaxBitRate:
setAllowProgressiveSwitchUp:
setAllowProgressiveStartup:
setAllowProgressiveResume:
setIFramePrefetchTargetDimensions:
setPreferredPeakBitRateForExpensiveNetworks:
maximumBitRate
setMaximumBitRate:
preferredPeakPresentationSize
setPreferredPeakPresentationSize:
setPreferredMaximumResolutionForExpensiveNetworks:
setPreferredMinimumResolution:
_renderingSuppressionDidChangeForOutput:
setVideoApertureMode:
setAudioTapProcessor:
_updateCanPlayAndCanStepPropertiesWhenReadyToPlayWithNotificationPayload:updateStatusToReadyToPlay:
_setPlaybackCoordinator:
_playerItem
isAuthorizationRequiredForPlayback
isApplicationAuthorizedForPlayback
isContentAuthorizedForPlayback
authorizationRequiredForPlayback
TB,R,N,GisAuthorizationRequiredForPlayback
applicationAuthorizedForPlayback
TB,R,N,GisApplicationAuthorizedForPlayback
contentAuthorizedForPlayback
TB,R,N,GisContentAuthorizedForPlayback
enumerateKeysAndObjectsUsingBlock:
_isExternalProtectionRequiredForPlaybackInternal
_setExternalProtectionRequiredForPlayback:
_isRental
_rentalStartDate
_rentalExpirationDate
_isRentalPlaybackStarted
_rentalPlaybackStartedDate
_rentalPlaybackExpirationDate
_initializeProtectedContentPlaybackSupportSessionAsynchronouslyForProvider:withOptions:
_uninitializeProtectedContentPlaybackSupportSession:
_externalProtectionRequiredForPlayback
TB,N,G_isExternalProtectionRequiredForPlayback,S_setExternalProtectionRequiredForPlayback:
_rental
TB,R,N,G_isRental
_rentalPlaybackStarted
TB,R,N,G_isRentalPlaybackStarted
initWithLogArray:
accessLog
playerItem
_playerReference
_playerItemReference
_setRampInOutInfo:
_setAudibleDRMInfo:
_fileSize
_availableFileSize
dictionaryWithCapacity:
_figLegibleOutputsDictionaryOptions
_metadataOutputsForKeys
_figMetadataOutputsDictionaryOptions
videoCompositionOutputColorPropertiesWithCustomCompositor:formatDescriptions:colorPrimaries:transferFunction:yCbCrMatrix:
_pixelBufferAttributes
_addVideoOutput:
_addLegibleOutput:
_addMetadataOutput:
_setTimebase:
_detachFromPlayerItem
_removeVideoOutput:
_removeLegibleOutput:
_removeMetadataOutput:
removeOutput:
_addMetadataCollector:
_removeMetadataCollector:
mediaDataCollectors
_updateTaggedMetadataArray:
_legibleOutputForKey:
_pushAttributedStrings:andSampleBuffers:atItemTime:
_signalFlush
_figPlaybackItem:didOutputAttributedStrings:nativeSampleBuffers:atItemTime:withLegibleOutputsDictionaryKey:
_figPlaybackItem:didFlushLegibleOutputWithDictionaryKey:
_metadataOutputForKey:
_pushTimedMetadataGroups:fromPlayerItemTrack:
_figPlaybackItem:didOutputSampleBuffers:fromTrackWithID:forMetadataOutputWithDictionaryKey:
_figPlaybackItem:didFlushMetadataOutputWithDictionaryKey:
T@"<NSObject><NSCopying>",&
templatePlayerItem
T@"AVPlayerItem",R,N
pathWithComponents:
figPlaybackItemIsReadyForInspection
videoFieldMode
videoEnhancementFilterOptions
enabled
enabledWasSet
disableColorMatching
disableColorMatchingWasSet
activeHapticChannelIndex
activeHapticChannelIndexWasSet
hapticVolume
hapticVolumeWasSet
sampleBufferOutputs
_initWithFigPlaybackItem:readyForInspection:trackID:asset:playerItem:
_transferEnabledToFig
_transferLoudnessInfoToFig
_transferVideoEnhancementOptionsToFig
_transferDisableColorMatchingToFig
_transferActiveHapticChannelIndexToFig
_transferHapticVolumeToFig
_extractionID
_updateTrackExtractionIDArrayProperty
_transferCachedValuesToFig
setEnabled:
fallbackTrack
currentVideoFrameRate
effectiveLoudnessInfo
setVideoEnhancementFilterOptions:
setDisableColorMatching:
setActiveHapticChannelIndex:
setHapticVolume:
_playerItemTrack
T@"AVAssetTrack",R,N
TB,N,GisEnabled
_setTrackID:
_setExtractionID:
_attachToPlayerItemTrack:figPlaybackItem:
_detachFromPlayerItemTrack
initWithItems:
queuePlayerWithItems:
_defaultActionAtItemEnd
advanceToNextItem
canInsertItem:afterItem:
removeAllItems
_queuePlayer
canOverlapPlaybackFromPlayerItem:toPlayerItem:
identifierName
derivedIdentifierCounter
characterAtIndex:
stringWithString:
initWithSpecifiedName:
_specifiedLoggingIdentifier
initWithFormat:
initWithCString:encoding:
mutableComposition
formatReaderInitializationOnce
assetInspectorInitializationOnce
tracksInitializationOnce
formatReader
assetInspectorLoader
URLAssetInitializationOptions
figAssetInitializationOnce
_createEmptyMutableCompositionIfNeeded
_initWithComposition:
initWithFormatReader:
initWithAssetInspector:
_loadAssetInspectorAndLoaderOnce
_newTrackForIndex:
_mutableTracks
_clientProvidesNaturalSize
_setNaturalSize:
_setURLAssetInitializationOptions:error:
_notifyTracksThatSegmentsWillChange:
_notifyTracksThatSegmentsDidChange:successfully:
removeObjectAtIndex:
composition
compositionWithURLAssetInitializationOptions:
setNaturalSize:
setMetadata:
insertTimeRange:ofAsset:atTime:error:
insertEmptyTimeRange:
removeTimeRange:
scaleTimeRange:toDuration:
addMutableTrackWithMediaType:preferredTrackID:
removeTrack:
mutableTrackCompatibleWithTrack:
setSegments:
setNaturalTimeScale:
setLanguageCode:
setPreferredTransform:
setPreferredVolume:
setAlternateGroupID:
replaceFormatDescription:withFormatDescription:
formatDescriptionReplacements
originalFormatDescription
replacementFormatDescription
getCString:maxLength:encoding:
componentsFromLocaleIdentifier:
stringByReplacingOccurrencesOfString:withString:
compare:options:
lowercaseString
metadataIdentifiers
accumulationQueue
weakReferenceToHost
advanceInterval
accumulatedMetadataGroups
initWithIdentifiers:
_collectUncollectables
advanceIntervalForDelegateInvocation
setAdvanceIntervalForDelegateInvocation:
_metadataOutputInternal
T@"<AVPlayerItemMetadataOutputPushDelegate>",R,W,N
Td,N
metadataOutput:didOutputTimedMetadataGroups:fromPlayerItemTrack:
figMetadataOutputsDictionaryOptions
T@"NSDictionary",R,N,G_figMetadataOutputsDictionaryOptions
initWithOriginalFormatDescription:andReplacementFormatDescription:
_originalFormatDescription
_replacementFormatDescription
Tr^{opaqueCMFormatDescription=},R
_notifyAssetThatDurationWillChange
_notifyAssetThatDurationDidChangeWithSuccess:
_setTrackReaderPropertyValue:forKey:
sourceURL
sourceTrackID
_notifySelfThatSegmentsWillChange
_notifySelfThatSegmentsDidChangeWithSuccess:
_updateTrackAssociationToTrack:type:operation:
insertTimeRange:ofTrack:atTime:error:
insertTimeRanges:ofTracks:atTime:error:
validateTrackSegments:error:
addTrackAssociationToTrack:type:
removeTrackAssociationToTrack:type:
Ti,N
T{CGAffineTransform=dddddd},N
Tf,N
T@"NSArray",C,N
initWithObject:notificationName:callbackBlock:
_object
_observerToken
_callback
_cancelMutex
subscribeRequestingInitialValue:block:
initWithObject:key:notificationName:
_key
_notificationName
initWithUpstream:transform:
_upstream
_transform
initWithUpstream:
_callbackMutex
_outputPublisherSubscription
_publisherIndex
_publisher
_sink
_token
style
formatTemplate
isFullWidth
isRightToLeft
cachedDateFormatterFormat
cachedDateFormatterTemplate
numberFormatterWithOneMinimumIntegerDigits
numberFormatterWithTwoMinimumIntegerDigits
decodeIntegerForKey:
decodeDoubleForKey:
encodeInteger:forKey:
encodeDouble:forKey:
setStyle:
setFullWidth:
setFormatTemplate:
stringFromSeconds:
stringFromTimeInterval:
currentLocale
setCachedDateFormatterFormat:
setCachedDateFormatterTemplate:
setNumberFormatterWithOneMinimumIntegerDigits:
setMinimumIntegerDigits:
setNumberStyle:
setNumberFormatterWithTwoMinimumIntegerDigits:
stringByAppendingFormat:
stringByAppendingString:
dateFormatFromTemplate:options:locale:
whitespaceAndNewlineCharacterSet
numberWithUnsignedInt:
stringFromNumber:
stringFromCMTime:
stringForObjectValue:
getObjectValue:forString:errorDescription:
setIsRightToLeft:
fullWidth
TB,N,GisFullWidth
editAssetURL
editAssetTrackID
initWithURL:trackID:sourceTimeRange:targetTimeRange:
initWithTimeRange:
_initWithTimeMapping:
isEmpty
appendString:
decodeInt32ForKey:
encodeInt32:forKey:
compositionTrackSegmentWithURL:trackID:sourceTimeRange:targetTimeRange:
compositionTrackSegmentWithTimeRange:
empty
TB,R,N,GisEmpty
metadataWaitingSemaphore
mediaDataStorage
_movieTrackInternal
T{?={?=qiIq}{?=qiIq}},R,N
figMutableMovie
figAssetTrack
initWithTrackID:forMovie:
_figMutableMovie
_addFigAssetTrackNotifications
_removeFigAssetTrackNotifications
_stringForProperty:
_sizeForProperty:
_setString:forProperty:
_setSize:forProperty:
sampleReferenceBaseURL
trackWithTrackID:forMovie:
_signalMetadataUpdated
timescale
cleanApertureDimensions
productionApertureDimensions
encodedPixelsDimensions
isModified
preferredMediaChunkSize
preferredMediaChunkDuration
preferredMediaChunkAlignment
setSampleReferenceBaseURL:
setMediaDataStorage:
setTimescale:
setCleanApertureDimensions:
setProductionApertureDimensions:
setEncodedPixelsDimensions:
setLayer:
setModified:
setPreferredMediaChunkSize:
setPreferredMediaChunkDuration:
setPreferredMediaChunkAlignment:
_mutableMovieTrackInternal
T@"AVMediaDataStorage",C,N
T@"NSURL",C,N
modified
TB,N,GisModified
isCompatibleWithFormatDescription:
insertTimeRange:ofTrack:atTime:copySampleData:error:
appendSampleBuffer:decodeTime:presentationTime:error:
insertMediaTimeRange:intoTimeRange:
appendMediaData:dataOffset:
metadataEnumeratorWithMetadataReader:
removeObjectsInArray:
figAssetReader
readSingleSample
outputFinishedCallbackInvokers
errorThatOccurredBeforeStartReading
statusReadWriteQueue
initWithAsset:error:
_errorForOSStatus:
_tearDownFigAssetReader
_transitionToStatus:failureError:
_canAddOutput:exceptionReason:
_attachToWeakReferenceToAssetReader:
_outputDidFinish:
observationBlockForWeakObserver:passedToBlock:
startObservingValueAtKeyPath:ofObject:options:usingBlock:
_isFinished
_prepareForReadingReturningError:
_readSingleSample
_cancelReading
_failWithError:
canAddOutput:
_figAssetReader
T^{OpaqueFigAssetReader=},R,N,G_figAssetReader
TB,N,G_readSingleSample,S_setReadSingleSample:
T@"AVAsset",R,&,N
T{?={?=qiIq}{?=qiIq}},N
alwaysCopiesSampleData
supportsRandomAccess
currentTimeRanges
weakReferenceToAssetReader
extractionID
sampleBufferAvailabilityCondition
currentConfigurationIsFinal
extractionCompleteForCurrentConfiguration
finished
maximizePowerEfficiency
_setFigAssetReader:
_weakReferenceToAssetReader
_trimsSampleDurations
videoScalingProperties
colorPropertiesConsideringFormatDescriptions:colorPrimaries:transferFunction:ycbcrMatrix:
enumerateObjectsUsingBlock:
_enableTrackExtractionReturningError:
_markAsFinished
lock
signal
unlock
markConfigurationAsFinal
_updateTimeRangesOnFigAssetReaderReturningError:
_figAssetReaderVideoScalingPropertiesFromVideoSettings:withFormatDescription:
setAlwaysCopiesSampleData:
setMaximizePowerEfficiency:
setSupportsRandomAccess:
_figAssetReaderExtractionOptions
_figAssetReaderSampleBufferDidBecomeAvailableForExtractionID:
resetForReadingTimeRanges:
_figAssetReaderDecodeError
_figAssetReaderFailed
T@"AVWeakReference",R,N,G_weakReferenceToAssetReader
Ti,N,G_extractionID,S_setExtractionID:
figAssetReaderExtractionOptions
T@"NSDictionary",R,N,G_figAssetReaderExtractionOptions
trimsSampleDurations
TB,R,N,G_trimsSampleDurations
outputSettings
weakReferenceToAttachedAdaptor
initWithTrack:outputSettings:
_outputSettingsWithOutputSettingsDictionary:mediaType:exceptionReason:
compatibleMediaTypes
willYieldCompressedSamples
outputSettingsDictionary
componentsJoinedByString:
frameRateConversionAlgorithm
fieldMode
videoCodecType
width
height
videoEncoderSpecification
pixelTransferProperties
videoCompressionProperties
minimumFrameDuration
_formatDescriptions
getAudioStreamBasicDescription:forAudioFileTypeID:sourceFormatDescription:
copyAudioChannelLayoutForSourceFormatDescription:audioChannelLayoutSize:
audioOptions
_getUniformMediaSubtypeIfExists
_attachedAdaptor
_trackOutputInternal
attachedToAdaptor
TB,R,N,G_isAttachedToAdaptor
audioTracks
audioVolumeCurvesForTracks
audioTimePitchAlgorithmsForTracks
audioTapProcessorsForTracks
audioOutputSettings
initWithAudioTracks:audioSettings:
_audioOutputSettingsWithAudioSettingsDictionary:exceptionReason:
audioSettings
audioSettingsDictionary
_setAudioVolumeCurve:forTrack:
_setAudioTimePitchAlgorithm:forTrack:
_setAudioTapProcessor:forTrack:
_audioVolumeCurveForTrack:
_audioTimePitchAlgorithmForTrack:
_audioTapProcessorForTrack:
assetReaderAudioMixOutputWithAudioTracks:audioSettings:
_audioMixOutputInternal
T@"AVAudioMix",C,N
videoTracks
sampleDataTrackIDs
videoOutputSettings
initWithVideoTracks:videoSettings:
_videoOutputSettingsWithVideoSettingsDictionary:exceptionReason:
videoSettingsDictionary
_setVideoComposition:
_copyFigVideoCompositor
isValidForAsset:timeRange:validationDelegate:
_videoCompositionProcessorColorProperties
_hasLayerAsAuxiliaryTrack
_auxiliaryTrackLayer
_hasPostProcessingLayers
_postProcessingRootLayer
_auxiliaryTrackID
_postProcessingVideoLayers
videoSettings
_videoCompositionOutputInternal
initWithTrack:
assetReaderSampleReferenceOutputWithTrack:
_sampleReferenceOutputInternal
setURL:
mediaFileType
setMediaFileType:
movieFragmentInterval
setMovieFragmentInterval:
setOverallDurationHint:
shouldOptimizeForNetworkUse
setShouldOptimizeForNetworkUse:
directoryForTemporaryFiles
setDirectoryForTemporaryFiles:
metadataItems
setMetadataItems:
movieTimeScale
setMovieTimeScale:
setPreferredRate:
singlePassFileSize
setSinglePassFileSize:
singlePassMediaDataSize
setSinglePassMediaDataSize:
inputs
setInputs:
inputGroups
setInputGroups:
preferredOutputSegmentInterval
setPreferredOutputSegmentInterval:
initialSegmentStartTime
setInitialSegmentStartTime:
outputFileTypeProfile
setOutputFileTypeProfile:
initialMovieFragmentSequenceNumber
setInitialMovieFragmentSequenceNumber:
producesCombinableFragments
setProducesCombinableFragments:
_delegate
_mediaFileType
_movieFragmentInterval
_overallDurationHint
_shouldOptimizeForNetworkUse
_directoryForTemporaryFiles
_metadataItems
_movieTimeScale
_preferredTransform
_preferredVolume
_preferredRate
_singlePassFileSize
_singlePassMediaDataSize
_inputs
_inputGroups
_preferredOutputSegmentInterval
_initialSegmentStartTime
_outputFileTypeProfile
_initialMovieFragmentSequenceNumber
_producesCombinableFragments
T@"NSURL",C,N,V_URL
T@"<AVAssetWriterDelegate>",W,V_delegate
T@"AVMediaFileType",C,N,V_mediaFileType
T{?=qiIq},N,V_movieFragmentInterval
T{?=qiIq},N,V_overallDurationHint
TB,N,V_shouldOptimizeForNetworkUse
T@"NSURL",C,N,V_directoryForTemporaryFiles
T@"NSArray",C,N,V_metadataItems
Ti,N,V_movieTimeScale
T{CGAffineTransform=dddddd},N,V_preferredTransform
Tf,N,V_preferredVolume
Tf,N,V_preferredRate
Tq,N,V_singlePassFileSize
Tq,N,V_singlePassMediaDataSize
T@"NSArray",C,N,V_inputs
T@"NSArray",C,N,V_inputGroups
T{?=qiIq},N,V_preferredOutputSegmentInterval
T{?=qiIq},N,V_initialSegmentStartTime
T@"NSString",C,N,V_outputFileTypeProfile
Tq,N,V_initialMovieFragmentSequenceNumber
TB,N,V_producesCombinableFragments
helper
helperReadWriteQueue
keyPathDependencyManager
finishWritingDelegate
initWithURL:fileType:error:
_initInternalObject
_mediaFileTypeWithFileTypeIdentifier:exceptionReason:
initWithURL:fileType:
setWeakReferenceToAssetWriter:
outputURL
outputFileType
_setHelper:ifCurrentHelper:withBlock:
_helper
availableMediaTypes
supportsSampleReferences
automaticallyNotifiesObserversForKey:
assetWriter:didProduceFragmentedHeaderData:
assetWriter:didProduceFragmentedMediaData:fragmentedMediaDataReport:
canApplyOutputSettings:forMediaType:
canAddInput:
addInput:
canAddInputGroup:
addInputGroup:
startWriting
startSessionAtSourceTime:
endSessionAtSourceTime:
cancelWriting
finishWriting
finishWritingWithCompletionHandler:
transitionToFailedStatusWithError:
assetWriter:didOutputSegmentData:segmentType:segmentReport:
assetWriter:didOutputSegmentData:segmentType:
flushSegment
assetWriterWithURL:fileType:error:
initWithContentType:
initWithFileType:error:
_setHelper:ifCurrentHelper:
_supportsSampleReferencesReturningError:
setWritesSinglePassUsingPredeterminedFileSize:mediaDataSize:
setFinishWritingDelegate:
_transitionToFailedStatusWithError:
T@"AVAssetWriterHelper",R,&,G_helper
initWithConfigurationState:
setDefaultPropertyValuesToConfigurationState:outputURL:fileType:
configurationState
_outputSettingsObject
_canApplyOutputSettings:forMediaType:sourceFormat:exceptionReason:
_canApplyTrackReferences:exceptionReason:
_canAddInput:exceptionReason:
weakReferenceToAssetWriter
_setWeakReferenceToAssetWriter:
setWithArray:
provisionalInputs
intersectsSet:
_canAddInputGroup:exceptionReason:
defaultInput
setMarksOutputTrackAsEnabled:
_setAlternateGroupID:
_setProvisionalAlternateGroupID:
initWithConfigurationState:error:
_transitionToClientInitiatedTerminalStatus:
_alternateGroupID
_weakReferenceToDelegate
_setWeakReferenceToDelegate:
_teardownNotificationHandlers
didReceiveFigAssetWriterNotificationWithSuccess:error:
_callDelegateIfNotCalledWithSuccess:error:
initWithFigAssetWriter:
_handleCompletedWritingNotification
_handleFailedNotificationWithError:
_figAssetWriter
_didNotCallDelegate
_notificationHandlersAreRegistered
weakReferenceToDelegate
T@"AVWeakReference",&,G_weakReferenceToDelegate,S_setWeakReferenceToDelegate:,V_weakReferenceToDelegate
T@"<AVAssetWriterFigAssetWriterNotificationHandlerDelegate>",W
figFragmentedMediaDataReportDict
initWithFigFragmentedMediaDataReportDictionary:
numberOfBytesToEndOfFirstVideoFrame
pathExtension
checkConfigurationToOutputSegmentDataReturningDebugDescription:
figFormatReaderFileFormat
figFileTypeProfileFromAVFileTypeProfile:
expectsMediaDataInRealTime
_prepareForWritingWithFigAssetWriter:mediaFileType:error:
figTrackReferences
checkAVAssetWriterInputConfigurationToOutputSegmentDataForOutputFileTypeProfile:preferredOutputSegmentInterval:returningDebugDescription:
outputTrackID
keyEnumerator
_retainedFigAssetWriter
_didStartInitialSession
_prepareToEndSession
removeItemAtURL:error:
currentThread
mainThread
initWithBlock:
_makeFinishWritingOperationsWithCustomFigAssetWriterFinishOperation:
_transitionToFinishWritingHelperWithFinishWritingOperations:
addOperations:waitUntilFinished:
addOperation:
waitUntilFinished
defaultQueue
setCompletionBlock:
enqueueOperation:
finishWritingDelegateOperationWithAssetWriter:andFigAssetWriter:andDelegate:
prepareInputsOperationsWithInputs:
finalStepWorkaroundOperationWithFigAssetWriter:
addDependency:
initWithConfigurationState:finishWritingOperations:
transitionToTerminalStatusOperation
_prepareToFinishWritingReturningError:
assetWriterInput:shouldReplaceFormatDescription:replacementFormatDescription:
_figAssetWriterAccessQueue
_startSessionCalled
_notificationHandler
_callbackContextToken
dependencies
isFinished
isReady
_finishWritingOperationsDidFinish
blockOperationWithBlock:
statusOfOperations:error:
_finishWritingOperations
_transitionToTerminalStatusOperation
T@"NSOperation",R,N,V_transitionToTerminalStatusOperation
evaluateDependenciesAndMarkAsExecuting
markAsCancelled
isAsynchronous
start
didEnterTerminalState
initWithConfigurationState:terminalError:
_terminalError
initWithConfigurationState:terminalStatus:
_terminalStatus
supportedMediaTypes
supportsFormat:
supportsOutputSettings:reason:
_transitionToTerminalStatus:
_configurationState
_weakReferenceToAssetWriter
T@"AVAssetWriterConfigurationState",R,N,V_configurationState
T@"AVWeakReference",&,V_weakReferenceToAssetWriter
T@"AVMediaFileType",R,N
T@"<AVAssetWriterDelegate>",W
initWithInputs:defaultInput:
_startObservingInputPropertiesThatMayChangeValueOfOptions
_stopObservingInputPropertiesThatMayChangeValueOfOptions
assetWriterInputSelectionOptionWithAssetWriterInput:displaysNonForcedSubtitles:
assetWriterInputSelectionOptionWithAssetWriterInput:
initWithInputs:provisionalInputs:defaultInput:
getBytes:length:
assetWriterInputGroupWithInputs:defaultInput:
assetWriterInputGroupWithInputs:provisionalInputs:defaultInput:
initWithAssetWriterInput:displaysNonForcedSubtitles:
marksOutputTrackAsEnabled
_hasEqualValueForKey:asObject:
_taggedCharacteristics
dataWithBytes:length:
_ancillaryDescription
mediaSubTypes
_isAuxiliaryContent
_isDesignatedDefault
associatedMediaSelectionOptionInMediaSelectionGroup:
displaysNonForcedSubtitles
_input
_outputSettings
_sourceFormatHint
_languageCode
_extendedLanguageTag
_metadata
_displaysNonForcedSubtitles
_enabled
T@"NSString",R,N,V_mediaType
T@"NSDictionary",R,N,V_outputSettings
T^{opaqueCMFormatDescription=},R,N,V_sourceFormatHint
T@"NSString",R,N,V_languageCode
T@"NSString",R,N,V_extendedLanguageTag
T@"NSArray",R,N,V_metadata
T@"NSDictionary",R,N,V_trackReferences
TB,R,N,V_displaysNonForcedSubtitles
T@"AVAssetWriterInput",R,N,V_input
initWithFigSegmentReportDictionary:
isEqualToSet:
UUIDString
_endSuspension:
_endSuspension:proposingNewTime:
initWithCoordinator:reason:
_figSuspension
endProposingNewTime:
beginDate
_reason
_coordinator
_beginDate
T@"NSString",R,N,V_reason
T@"NSDate",R,N,V_beginDate
isReadyToPlay
suspensionReasons
initWithParticipantIdentifier:readyToPlay:suspensionReasons:
_suspensionReasons
_readyToPlay
_identifier
T@"NSArray",R,N,V_suspensionReasons
readyToPlay
TB,R,N,GisReadyToPlay,V_readyToPlay
T@"NSUUID",R,N,V_identifier
initInternal
beginSuspensionForReason:
expectedItemTimeAtHostTime:
setParticipantLimit:forWaitingOutSuspensionsWithReason:
participantLimitForWaitingOutSuspensionsWithReason:
setSuspensionReasonsThatTriggerWaiting:
suspensionReasonsThatTriggerWaiting
setPauseSnapsToMediaTimeOfOriginator:
pauseSnapsToMediaTimeOfOriginator
_updateSuspensionReasons:
_updateOtherParticipantsUsingFigParticipantUUIDs:
_removeFigPlaybackCoordinatorListeners
_setMediumCallbacksOnFigPlaybackCoordinator:
_addFigPlaybackCoordinatorListeners:
trackedTransportControlStateDictionaries
participantStates
coordinationMediumDelegate
localParticipantUUIDForPlaybackCoordinator:
_setLocalParticipantUUID:onFigPlaybackCoordinator:
playbackCoordinator:identifierForPlayerItem:
setIsExpanseMediaSession:error:
avfParticipantsForFigParticipantsUUIDs:
_setIsInExpanseMediaPlaybackOnAVAudioSession
objectAtIndexedSubscript:
_addTransportControlStateDictionary:
_transportControlStateForItemIdentifier:
_addParticipantState:
_replaceParticipantStates:
_removeUnusedTransportControlStates
_removeParticipantStateWithIdentifier:
_doesSuspensionReasonTriggerWaiting:
_setWaitingPolicies:onFigPlaybackCoordinator:
setCoordinationMediumDelegate:
setMediumLoggingIdentifier:
mediumLoggingIdentifier
handleNewTransportControlStateDictionary:
handleNewParticipantStateDictionary:
handleReplacementParticipantStateDictionaries:
handleRemovalOfParticipant:
_weakPlayer
_figPlaybackCoordinatorConfigQueue
_figPlaybackCoordinator
_otherParticipants
_controlStates
_participantStates
_participantLimitPerSuspensionReason
_suspensionReasonsThatTriggerWaiting
_pauseSnapsToMediaTimeOfOriginator
_suspensionsChangedNotificationToken
_participantsChangedNotificationToken
_didIssueCommandToPlaybackObjectNotificationToken
_coordinationMediumDelegate
_isInExpanseMediaPlayback
_mediumLoggingIdentifier
T@"<AVPlayerPlaybackCoordinatorDelegate>",W
playbackCoordinator:broadcastTransportControlStateDictionary:forItemWithIdentifier:
playbackCoordinator:broadcastLocalParticipantStateDictionary:
playbackCoordinator:reloadTransportControlStateForItemWithIdentifier:completionHandler:
setParentAuthorizationSession:
outputDeviceAuthorizationSession:didProvideAuthorizationRequest:
outputDevice
authorizationTokenType
outputDeviceAuthorizationSession:shouldRetryAuthorizationRequest:reason:
sharedAuthorizationSession
initWithOutputDeviceAuthorizationSessionImpl:
outputDeviceAuthorizationSessionImpl:didProvideAuthorizationRequest:
outputDeviceAuthorizationSessionImpl:shouldRetryAuthorizationRequest:reason:
outputDeviceAuthorizationSessionImplDidExpireWithReplacementImpl:
_ivars
T@"<AVOutputDeviceAuthorizationSessionDelegate>",W
respondWithAuthorizationToken:completionHandler:
initWithOutputDeviceAuthorizationRequestImpl:
T@"AVOutputDevice",R,N
setOutputSettings:
setSourceFormatHint:
sourcePixelBufferAttributes
setSourcePixelBufferAttributes:
transform
setTransform:
mediaTimeScale
setMediaTimeScale:
setExpectsMediaDataInRealTime:
setProvisionalAlternateGroupID:
setTrackReferences:
performsMultiPassEncodingIfSupported
setPerformsMultiPassEncodingIfSupported:
mediaDataLocation
setMediaDataLocation:
_trackID
_sourcePixelBufferAttributes
_mediaTimeScale
_expectsMediaDataInRealTime
_naturalSize
_marksOutputTrackAsEnabled
_layer
_provisionalAlternateGroupID
_performsMultiPassEncodingIfSupported
_chunkDuration
_chunkAlignment
_chunkSize
_mediaDataLocation
_sampleReferenceBaseURL
_maximizePowerEfficiency
T@"NSString",C,N,V_mediaType
T@"AVOutputSettings",C,N,V_outputSettings
T^{opaqueCMFormatDescription=},&,N,V_sourceFormatHint
Ti,N,V_trackID
T@"NSDictionary",C,N,V_sourcePixelBufferAttributes
T{CGAffineTransform=dddddd},N,V_transform
Ti,N,V_mediaTimeScale
TB,N,V_expectsMediaDataInRealTime
T{CGSize=dd},N,V_naturalSize
T@"NSString",C,N,V_languageCode
T@"NSString",C,N,V_extendedLanguageTag
TB,N,V_marksOutputTrackAsEnabled
Tq,N,V_layer
Ts,N,V_alternateGroupID
Ts,N,V_provisionalAlternateGroupID
T@"NSDictionary",C,N,V_trackReferences
TB,N,V_performsMultiPassEncodingIfSupported
T{?=qiIq},N,V_chunkDuration
Tq,N,V_chunkAlignment
Tq,N,V_chunkSize
T@"NSString",C,N,V_mediaDataLocation
T@"NSURL",C,N,V_sampleReferenceBaseURL
TB,N,V_maximizePowerEfficiency
helperQueue
numberOfAppendFailures
markAsFinishedCalled
appendFailureReadWriteQueue
passDescriptionResponder
initWithMediaType:outputSettings:
initWithMediaType:outputSettings:sourceFormatHint:
canFullySpecifyOutputFormatReturningReason:
setWeakReferenceToAssetWriterInput:
pixelBufferPool
encoderIsAvailableOnCurrentSystemReturningError:
formatSpecificationWithOutputSettings:sourceFormatDescription:
assetWriterTrackWithFigAssetWriter:mediaType:mediaFileType:formatSpecification:sourcePixelBufferAttributes:multiPass:attachedAdaptor:error:
setSampleBufferCoalescingInterval:
initWithConfigurationState:assetWriterTrack:error:
_setHelper:
didStartInitialSession
prepareToEndSession
prepareToFinishWritingReturningError:
transitionToAndReturnTerminalHelperWithTerminalStatus:
canPerformMultiplePasses
currentPassDescription
canStartRespondingToEachPassDescriptionReturningReason:
initWithCallbackQueue:block:
shouldRespondToInitialPassDescription
respondToNewPassDescription:
appendSampleBuffer:error:
appendPixelBuffer:withPresentationTime:
stopRespondingToPassDescriptions
markAsFinished
markCurrentPassAsFinished
canAddTrackAssociationWithTrackOfInput:type:
addTrackAssociationWithTrackOfInput:type:
associatedInputsWithTrackAssociationType:
assetWriterInputWithMediaType:outputSettings:
assetWriterInputWithMediaType:outputSettings:sourceFormatHint:
writesMediaDataToBeginningOfFile
setWritesMediaDataToBeginningOfFile:
_pixelBufferPool
_setSourcePixelBufferAttributes:
respondToEachPassDescriptionOnQueue:usingBlock:
appendSampleBuffer:
_appendPixelBuffer:withPresentationTime:
_markAsFinishedCalled
TB,R,G_markAsFinishedCalled
T@"AVAssetWriterInputHelper",&,N,G_helper,S_setHelper:
T@"NSDictionary",C,N,G_sourcePixelBufferAttributes,S_setSourcePixelBufferAttributes:
T^{__CVPixelBufferPool=},R,N,G_pixelBufferPool
outputSettingsObject
T@"AVOutputSettings",R,N,G_outputSettingsObject
Tq,R,N,G_status
T@"AVWeakReference",&,N,G_weakReferenceToAssetWriter,S_setWeakReferenceToAssetWriter:
Ts,N,G_alternateGroupID,S_setAlternateGroupID:
Ts,N,G_provisionalAlternateGroupID,S_setProvisionalAlternateGroupID:
T@"NSDictionary",R,N,G_trackReferences
Tr^{opaqueCMFormatDescription=},R,N
TB,R,N,GisReadyForMoreMediaData
_validateLanguageCode:
_canAddTrackAssociationWithTrackOfInput:type:exceptionReason:
keyPathsForValuesAffectingCanPerformMultiplePasses
setFormatDescriptions:
setFigMetadata:
setExcludeFromAutoSelection:
setFigTrackMatrix:
setFigDimensions:
setTrackVolume:
setPreferredChunkDuration:
setPreferredChunkAlignment:
setPreferredChunkSize:
initWithTimeRanges:
_assetWriterTrack
encoderSupportsMultiPass
isAboveHighWaterLevel
initWithRequestQueue:requestBlock:
_startObservingReadyForMoreMediaDataKeyPath
_nudgeMediaDataRequesterIfAppropriate:
_stopObservingReadyForMoreMediaDataKeyPath
requestQueue
requestMediaDataIfNecessary
weakReferenceToAssetWriterInput
beginPassIfAppropriate
beginPassReturningError:
transitionAssetWriterAndAllInputsToFailedStatusWithError:
addSampleBuffer:error:
addPixelBuffer:atPresentationTime:error:
markEndOfDataReturningError:
initWithWritingHelper:
startPassAnalysis
markAsFinishedAndTransitionCurrentHelper:
requestMediaDataOnceIfNecessaryWithMediaDataRequester:
mediaDataRequesterShouldRequestMediaData
setCurrentPassDescription:
_mediaDataRequester
_observingSelf
_currentPassDescription
_keyPathDependencyManager
_mediaDataRequesterSerialQueue
_readyForMoreMediaDataObserverSerialQueue
assetWriterTrack
T@"AVFigAssetWriterTrack",R,N,G_assetWriterTrack,V_assetWriterTrack
T@"AVAssetWriterInputPassDescription",&,N,V_currentPassDescription
endPassWithCompletionHandler:
_writingHelper
_initialPassDescription
_didRequestMediaDataOnce
_weakReferenceToAssetWriterInput
T@"AVAssetWriterInputConfigurationState",R,N,V_configurationState
T@"AVWeakReference",&,V_weakReferenceToAssetWriterInput
T@"AVOutputSettings",R,N
T^{opaqueCMFormatDescription=},R,N
Ts,N
T@"AVAssetWriterInputPassDescription",R,N
T^{__CVPixelBufferPool=},R,N
initWithAssetWriterInput:sourcePixelBufferAttributes:
assetWriterInputPixelBufferAdaptorWithAssetWriterInput:sourcePixelBufferAttributes:
initWithFigAssetWriter:mediaType:mediaFileType:formatSpecification:sourcePixelBufferAttributes:multiPass:error:
_attachToFigAssetWriterUsingFormatSpecification:sourcePixelBufferAttributes:multiPass:error:
_refreshAboveHighWaterLevel
figAssetWriter
initWithFigAssetWriter:trackID:
descriptionForNextPass
_figAssetWriterDidDropBelowLowWaterLevelForTrackID:
sampleBufferCoalescingInterval
_aboveHighWaterLevelQueue
_aboveHighWaterLevel
_sampleBufferCoalescingInterval
_operationQueue
T^{OpaqueFigAssetWriter=},R,N,V_figAssetWriter
T@"AVMediaFileType",R,N,V_mediaFileType
Ti,R,N,V_trackID
aboveHighWaterLevel
TB,R,GisAboveHighWaterLevel
T{?=qiIq},N,V_sampleBufferCoalescingInterval
sourceFormatDescription
audioFileTypeID
_flushPendingSampleBuffersReturningError:
_pendingAudioSampleBuffers
_collectUncollectables_invokedFromDeallocAndFinalize
_requestQueue
_requestBlock
T@"NSObject<OS_dispatch_queue>",R,N,V_requestQueue
T@"<AVAssetWriterInputMediaDataRequesterDelegate>",W
_hasStoppedResponding
_releaseAndClearCallbackBlock_invokeOnSerializationQueue
_callbackQueue
_stoppedResponding
_serializationQueue
_hasRespondedAtLeastOnce
_mostRecentPassDescription
_callbackBlock
_notifyWhetherMorePassesAreNeeded:timeRanges:forTrackWithID:
_nextPassDescription
T@"AVAssetWriterInputPassDescription",R,N,V_nextPassDescription
timeRanges
sourceTimeRanges
bytes
backgroundColor
layerInstructions
enablePostProcessing
blendingTransferFunction
requiredSourceSampleDataTrackIDs
setVersion:
setEnablePostProcessing:
_setValuesFromDictionary:
dictionaryRepresentation
setLayerInstructions:
dictionaryRepresentationWithTimeRange:
setRequiredSourceSampleDataTrackIDs:
_setValuesFromDictionary:timeRange:
containsTweening
requiredSourceTrackIDs
passthroughTrackID
setBlendingTransferFunction:
_instruction
T^{CGColor=},R,&,N
videoCompositionInstruction
_mutableInstruction
T^{CGColor=},&,N
transformRamps
opacityRamps
cropRectangleRamps
_setTransformRamps:
_setOpacityRamps:
_setCropRectangleRamps:
insertObject:atIndex:
_setTransformRampFromStartTransform:toEndTransform:timeRange:selector:
_setOpacityRampFromStartOpacity:toEndOpacity:timeRange:selector:
_setCropRectangleRampFromStartCropRectangle:toEndCropRectangle:timeRange:selector:
setTransform:atTime:
setOpacity:atTime:
setCropRectangle:atTime:
setTransformRampFromStartTransform:toEndTransform:timeRange:
setOpacityRampFromStartOpacity:toEndOpacity:timeRange:
setCropRectangleRampFromStartCropRectangle:toEndCropRectangle:timeRange:
getTransformRampForTime:startTransform:endTransform:timeRange:
getOpacityRampForTime:startOpacity:endOpacity:timeRange:
getCropRectangleRampForTime:startCropRectangle:endCropRectangle:timeRange:
_layerInstruction
videoCompositionLayerInstructionWithAssetTrack:
videoCompositionLayerInstruction
_mutableLayerInstruction
changeSeed
builtInCompositorName
customCompositorClass
colorPrimaries
colorYCbCrMatrix
colorTransferFunction
instructions
auxiliaryTrackLayerSetLast
sourceSampleDataTracks
videoCompositionWithPropertiesOfAsset:
videoCompositionWithPropertiesOfAsset:videoGravity:
setBuiltInCompositorName:
customVideoCompositorClass
setCustomVideoCompositorClass:
setFrameDuration:
setSourceTrackIDForFrameTiming:
setRenderSize:
setRenderScale:
setColorPrimaries:
setColorYCbCrMatrix:
setColorTransferFunction:
setInstructions:
setAnimationTool:
setSourceSampleDataTrackIDs:
sessionWithVideoComposition:recyclingSession:
videoComposition:shouldContinueValidatingAfterFindingInvalidValueForKey:
renderContextChanged:
startVideoCompositionRequest:
requiredPixelBufferAttributesForRenderContext
cancelAllPendingVideoCompositionRequests
anticipateRenderingUsingHint:
prerollForRenderingUsingHint:
supportsWideColorSourceFrames
supportsHDRSourceFrames
canConformColorOfSourceFrames
videoComposition:shouldContinueValidatingAfterFindingEmptyTimeRange:
videoComposition:shouldContinueValidatingAfterFindingInvalidTimeRangeInInstruction:
videoComposition:shouldContinueValidatingAfterFindingInvalidTrackIDInInstruction:layerInstruction:asset:
_bumpChangeSeed
_postProcessingVideoLayer
instructionForFigInstruction:
_setFrameDurationForFrameRate:sourceTrackIDForFrameTiming:
_videoComposition
T#,R,N
T@"AVVideoCompositionCoreAnimationTool",R,&,N
initWithTimeRange:sourceTrackIDs:handler:
setSourceTrackPreferredTransform:
_mutableVideoCompositionWithAsset:applyingCIFiltersWithHandler:
videoCompositionWithAsset:applyingCIFiltersWithHandler:
videoCompositionWithPropertiesOfAsset:prototypeInstruction:
sortedArrayUsingFunction:context:
lastObject
_mutableVideoComposition
T#,&,N
T@"AVVideoCompositionCoreAnimationTool",&,N
initWithMagicTrackID:animationLayer:videoLayers:
videoCompositionCoreAnimationToolWithAdditionalLayer:asTrackID:
videoCompositionCoreAnimationToolWithPostProcessingAsVideoLayer:inLayer:
videoCompositionCoreAnimationToolWithPostProcessingAsVideoLayers:inLayer:
_videoCompositionTool
animationLayer
auxiliaryTrackID
postProcessingVideoLayers
unusedTrackID
findUnusedTrackIDWithCompletionHandler:
figExportSession
metadataItemFilter
handler
initWithAsset:presetName:
presetName
allExportPresets
exportPresetsCompatibleWithAsset:
determineCompatibilityOfExportPreset:withAsset:outputFileType:completionHandler:
exportSessionWithAsset:presetName:
maximumDurationForPreset:properties:
estimatedOutputFileLengthForPreset:duration:properties:
keyPathsForValuesAffectingEstimatedOutputFileLength
estimateMaximumDurationWithCompletionHandler:
estimateOutputFileLengthWithCompletionHandler:
supportedFileTypes
determineCompatibleFileTypesWithCompletionHandler:
setOutputFileType:
setOutputURL:
progress
AVExportSessionExportAsynchronouslyCompletionHandler
exportAsynchronouslyWithCompletionHandler:
cancelExport
maxDuration
setMinVideoFrameDuration:
minVideoFrameDuration
setVideoFrameRateConversionAlgorithm:
videoFrameRateConversionAlgorithm
setPreserveSyncFrames:
preserveSyncFrames
estimatedOutputFileLength
setMetadataItemFilter:
fileLengthLimit
setFileLengthLimit:
canPerformMultiplePassesOverSourceMediaData
setCanPerformMultiplePassesOverSourceMediaData:
_exportSession
_requestMediaDataIfReady
requestBlock
_mediaDataConsumer
T@?,R,N,V_requestBlock
initWithDeviceID:channelUUID:syncController:
initWithOutputDeviceCommunicationChannelImpl:
_saveCommChannel:forUUID:
parentOutputDevice
communicationChannelManager:didReceiveData:fromCommunicationChannel:
communicationChannelManager:didCloseCommunicationChannel:
openCommunicationChannelWithOptions:completionHandler:
setParentOutputDevice:
T@"AVOutputDevice",W
initWithDeviceID:syncController:
_didReceiveData:fromDeviceWithID:fromChannelWithUUID:
_didCloseCommChannelWithUUID:forDeviceWithID:
_parentOutputDevice
_deviceID
_communicationChannelsForUUIDs
T@"AVOutputDevice",W,V_parentOutputDevice
_commChannelUUID
setPlayerItem:
setInheritsTiming:
_removeSelfFromPlayerItem
synchronizedLayerWithPlayerItem:
_syncLayer
T@"AVPlayerItem",&,N
MACAddress
communicationChannelDelegate
commChannelManager
initWithOutputDeviceImpl:commChannelManager:
deviceID
sharedSystemRemotePoolContext
_openPerCommunicationChannelDelegateChannelWithOptions:completionHandler:
outputDevice:didReceiveData:fromCommunicationChannel:
outputDevice:didCloseCommunicationChannel:
updateFrecencyListForDeviceID:
frecencyScoreForDeviceID:
deviceName
hasBatteryLevel
modelSpecificInformation
setCurrentBluetoothListeningMode:
setCommunicationChannelDelegate:
configureUsingBlock:completionHandler:
updateFrecencyScore
_outputDevice
_frecentsReaderAfterMigrationIfNecessary
_frecentsWriter
deviceIDs
frecencyInfoForDeviceWithID:
timeIntervalSinceDate:
setFrecencyInfo:forDeviceID:
numberOfKeysToBeSet
removeFrecencyInfoForDeviceID:
persistToDiskReturningError:
stringWithCString:encoding:
_applicationSupportPath
stringByAppendingPathComponent:
createDirectoryAtPath:withIntermediateDirectories:attributes:error:
_frecentsContainerPath
stringByAbbreviatingWithTildeInPath
sharedExecutionEnvironment
platformIdentifier
_frecentsFilePath
initWithFrecentsFilePath:error:
_migrateFrecentsFromCFPreferencesToFrecentsFilePath:
defaultFrecentsReader
defaultFrecentsWriter
initWithFrecentsFilePath:
dataWithContentsOfFile:options:error:
propertyListWithData:options:format:error:
_frecents
writeToFile:options:error:
_updatedFrecentsList
_keysToRemove
publicKey
isAdmin
initWithID:publicKey:hasAdministratorPrivileges:
peerID
isEqualToData:
hasAdministratorPrivileges
playing
productName
pairedDeviceID
pairedDevicesConnectedToOutputDevice:
initWithName:ID:modelID:playing:productName:
isPlaying
TB,R,N,GisPlaying
_implSupportEventListener
T@"<AVOutputDeviceImplSupport>",W,V_implSupportEventListener
communicationChannel:didReceiveData:
communicationChannelDidClose:
T@"<AVOutputDeviceCommunicationChannelDelegate>",W
_deviceName
_deviceType
_deviceSubType
_isClusterLeader
_modelID
T@"NSString",R,N,V_deviceName
T@"NSString",R,N,V_deviceID
Tq,R,N,V_deviceType
Tq,R,N,V_deviceSubType
TB,R,N,V_isClusterLeader
T@"NSString",R,N,V_modelID
getBytes:maxLength:usedLength:encoding:options:range:remainingRange:
isMainThread
stringByDeletingPathExtension
stringByAppendingPathExtension:
subarrayWithRange:
_web_errorWithDomain:code:URL:
localizedName
_setContentLayerOnFigVideoQueue:
_readOnlyVideoQueueTimebase
_copyVideoQueue
_setStatus:error:
_initializeTimebases
_createVideoQueue:
_addFigVideoQueueListeners
_callOldPrerollCompletionHandlerWithSuccess:andSetNewPrerollCompletionHandler:forRequestID:
_removeFigVideoQueueListeners
_setSynchronizerTimebase:error:
enqueueSampleBuffer:bufferEnqueueingInfo:
flushWithRemovalOfDisplayedImage:completionHandler:
_resetStatusWithOSStatus:
_setRequiresFlushToResumeDecoding:
resetUpcomingSampleBufferPresentationTimeExpectations
_hasEverEnqueued
_updateVideoTargetsOnVideoQueue
_contentLayer
setControlTimebase:
_setOutputObscuredDueToInsufficientExternalProtection:
controlTimebase
setDisplayLayerVisibility:
setSTSLabel:
_enqueueSingleSampleBuffer:bufferEnqueueingInfo:
flushAndRemoveImage
_flushComplete
_completedDecodeForPrerollForRequestID:
prerollDecodeWithCompletionHandler:
requiresFlushToResumeDecoding
addSampleBufferDisplayLayer:
_videoQueue
_outputObscured
_weakDisplayLayer
_figVideoTargets
_preventsDisplaySleepDuringVideoPlayback
_requiresFlushToResumeDecoding
_isRequestingMediaData
_serialQueue
_videoQueueQueue
_layerQueue
_weakReferenceToSynchronizer
_addedToSynchronizer
_controlTimebaseSetByUserIsInUse
_controlTimebaseSetByUser
_readOnlyRenderingTimebase
_flushCallbackListQueue
_flushCallbackQueue
_flushCallbacks
_queueForProtectingPrerollCompleteCallback
_pendingPrerollCompleteCallback
_pendingPrerollRequestID
_queueForCallingPrerollCompleteCallback
_upcomingPTSExpectation
_minimumUpcomingPTS
_didFinishSuspensionNotificationToken
setPreventsCapture:
preventsCapture
_setUpcomingPresentationTimeExpectations:minimumPresentationTime:
expectMinimumUpcomingSampleBufferPresentationTime:
expectMonotonicallyIncreasingUpcomingSampleBufferPresentationTimes
_updateVideoOutputs
initWithMetadataReader:
initWithArray:key:keySpace:locale:
initWithMetadataReader:array:key:keySpace:locale:
_setMetadataReader:
_setArrayEnumerator:
_setKey:
_setKeySpace:
_setLocale:
metadataEnumeratorWithArray:key:keySpace:locale:
_reader
_arrayEnumerator
_keySpace
_locale
_index
initWithFigEndpoint:
figEndpoint
_figEndpointPropertyValueForKey:
processInfo
processName
initWithEndpoint:
_canSetEndpointVolumeDidChangeForEndpointWithID:
_weakObserver
_figEndpoint
figEndpointOutputDeviceImpl
outputDeviceWithFigEndpoint:
outputDeviceWithFigEndpoint:routingContextFactory:
_endpoint
initWithRequest:id:
requestWithRequest:id:
customURLRequest
setCustomURLRequest:
customURLResponse
setCustomURLResponse:
requestID
metrics
setMetrics:
_requestID
_customURLRequest
_customURLResponse
_metrics
TQ,R,N,V_requestID
T@"NSURLSessionTaskMetrics",&,N,V_metrics
session
sendH2Ping:pongHandler:
setValue:forHTTPHeaderField:
dataTaskWithRequest:
_registerRequest:id:forDataTask:
_unregisterRequestForDataTask:
_lookupRequestForDataTask:
allHeaderFields
transactionMetrics
networkProtocolName
URLSession:didBecomeInvalidWithError:
URLSession:didReceiveChallenge:completionHandler:
URLSessionDidFinishEventsForBackgroundURLSession:
URLSession:task:willBeginDelayedRequest:completionHandler:
URLSession:taskIsWaitingForConnectivity:
URLSession:task:willPerformHTTPRedirection:newRequest:completionHandler:
URLSession:task:didReceiveChallenge:completionHandler:
URLSession:task:needNewBodyStream:
URLSession:task:didSendBodyData:totalBytesSent:totalBytesExpectedToSend:
URLSession:task:didFinishCollectingMetrics:
URLSession:task:didCompleteWithError:
URLSession:dataTask:didReceiveResponse:completionHandler:
URLSession:dataTask:didBecomeDownloadTask:
URLSession:dataTask:didBecomeStreamTask:
URLSession:dataTask:didReceiveData:
URLSession:dataTask:willCacheResponse:completionHandler:
_handleRequest:requestID:canHandleRequestOut:
_cancelRequestID:
_taskToRequest
_session
_handler
T@"NSURLSession",&,N,V_session
connection
setConnection:
bridge
setBridge:
_bridge
_connection
T@"AVAssetCustomURLBridgeForNSURLProtocol",W,N,V_bridge
T^{_CFURLConnection=},N
_handleRequest:requestID:
_didFinish:error:
_willSendRequest:request:redirectionResponse:
_didReceiveResponse:response:
_didReceiveData:data:
_requestIDToDownload
copyKeychainCredentialForUrl:
sendAuthResponse:requestID:disposition:credential:authHandler:
host
port
initWithData:encoding:
initWithUser:password:persistence:
_handleAuthChallenge:requestID:canHandleRequestOut:
expectedContentLength
scannerWithString:
scanString:intoString:
scanUnsignedLongLong:
characterSetWithCharactersInString:
scanCharactersFromSet:intoString:
isAtEnd
T{?={?={?=qiIq}{?=qiIq}}{?={?=qiIq}{?=qiIq}}},R,N,V_timeMapping
setInputParameters:
_audioMix
_mutableAudioMix
_volumeCurveAsString
_setScheduledAudioParameters:
setEffectParameters:
setVolumeRampFromStartVolume:toEndVolume:timeRange:rampMode:
setVolume:atTime:
_setVolumeRampFromStartVolume:toEndVolume:timeRange:rampMode:
_setVolume:atTime:
getVolumeRampForTime:startVolume:endVolume:timeRange:rampMode:
setVolumeRampFromStartVolume:toEndVolume:timeRange:
getVolumeRampForTime:startVolume:endVolume:timeRange:
_inputParameters
Tr^{opaqueMTAudioProcessingTap=},R,&,N
audioMixInputParametersWithTrack:
_mutableInputParameters
Tr^{opaqueMTAudioProcessingTap=},&,N
audioMixInputParametersWithAssetTrack:introFadeDuration:fadeOutStart:fadeOutDuration:
outputDeviceFeatures
applicationPID
applicationPIDWasSet
defaultOutputContextImplClass
platformDependentScreenOrVideoContext
initWithOutputContextImpl:
auxiliaryOutputContext
sharedSystemAudioContext
sharedSystemScreenContext
iTunesAudioContext
addSharedAudioOutputContextImpl
allSharedAudioOutputContextImpls
defaultSharedOutputContextImpl
outputContextImplForControllingOutputDeviceGroupWithID:options:
outputContextForControllingOutputDeviceGroupWithID:options:
outputContextImplForID:type:
setParentOutputContext:
outputContextType
getApplicationProcessID:
outputContextDidChangeApplicationProcessID:
supportsMultipleOutputDevices
setOutputDevice:options:completionHandler:
resetOutputDeviceForAllOutputContexts
outputContextExistsWithRemoteOutputDevice
supportsMultipleBluetoothOutputDevices
setOutputDevices:options:completionHandler:
predictedOutputDevice
resetPredictedOutputDevice
providesControlForAllVolumeFeatures
pausePlaybackOnAllOutputDevicesWithCompletionHandler:
muteAllOutputDevicesWithCompletionHandler:
outgoingCommunicationChannel
openCommunicationChannelWithOptions:error:
outputContextOutgoingCommunicationChannelDidBecomeAvailable:
outputContext:didReceiveData:fromCommunicationChannel:
outputContext:didCloseCommunicationChannel:
outputContextImpl:didChangeOutputDevicesWithInitiator:reason:deviceID:previousDeviceIDs:
outputContextImplDidChangeGlobalOutputDeviceConfiguration:
addSharedAudioOutputContext
allSharedAudioOutputContexts
defaultSharedOutputContext
outputContextForControllingOutputDeviceGroupWithID:
applicationProcessID
setApplicationProcessID:
setOutputDevice:forFeatures:
setOutputDevice:options:
outputContextImpl:didInitiateDestinationChange:
outputContextImpl:didChangeOutputDeviceWithInitiator:
setOutputDevices:
addOutputDevice:
removeOutputDevice:
outputContextImplDidChangePredictedOutputDevice:
outputContextImplDidChangeProvidesControlForAllVolumeFeatures:
outputContextImplDidChangeVolume:
outputContextImplDidChangeCanSetVolume:
outputContextImplOutgoingCommunicationChannelDidBecomeAvailable:
outputContextImpl:didReceiveData:fromCommunicationChannel:
outputContextImpl:didCloseCommunicationChannel:
outputContextImpl:didExpireWithReplacement:
setParentCommunicationChannel:
initWithOutputContextCommunicationChannelImpl:
T@"<AVOutputContextCommunicationChannelImpl>",R,N
_setStatus:cancellationReason:
markAsInProgress
markAsFailed
markAsCancelledWithReason:
setParentOutputContextManager:
outputContextManagerForAllOutputContexts
initWithOutputContextManagerImpl:
outputContextManagerImpl:observedFailureToConnectToOutputDevice:reason:
outputContextManagerImplDidExpireWithReplacementImpl:
initWithRunLoop:
runLoopStateWithRunLoop:
runLoop
signalSource
setSignalSource:
signaled
setSignaled:
_runLoop
_signalSource
_signaled
T^{__CFRunLoop=},R,N,V_runLoop
T^{__CFRunLoopSource=},N,V_signalSource
TB,N,V_signaled
waitInMode:
waitUntilDate:inMode:
_waitInMode:untilDate:
compare:
timeIntervalSinceNow
_signalRunLoopWithState:
wait
waitUntilDate:
broadcast
_runLoopStateList
mediaSelectionGroupDictionaries
T@"NSArray",R,N,G_mediaSelectionGroupDictionaries
T@"AVMetadataItem",R,N
playable
TB,R,N,GisPlayable
exportable
TB,R,N,GisExportable
readable
TB,R,N,GisReadable
composable
TB,R,N,GisComposable
compatibleWithSavedPhotosAlbum
TB,R,N,GisCompatibleWithSavedPhotosAlbum
compatibleWithAirPlayVideo
TB,R,N,GisCompatibleWithAirPlayVideo
instanceIdentifier
T@"NSString",R,N,G_instanceIdentifier
assetAnalysisMessages
T@"NSArray",R,N,G_assetAnalysisMessages
_setFormatReader:
_timeForProperty:
_floatForProperty:defaultValue:
_affineTransformForProperty:
_SInt32ForProperty:
_booleanForProperty:
_nonNilArrayForProperty:
_dictionaryForProperty:
_hasQTSaveRestriction
_valueAsCFTypeForProperty:
didCheckForSaveRestriction
hasSaveRestriction
T^{OpaqueFigFormatReader=},&,N,G_formatReader,S_setFormatReader:
_setPlaybackItem:
_arrayForProperty:
initWithPlaybackItem:trackIDs:
_trackIDs
playbackItem
T^{OpaqueFigPlaybackItem=},&,N,G_playbackItem,S_setPlaybackItem:
initWithFigAlternate:
_timeForProperty:defaultValue:
_nonNilDictionaryForProperty:
_tollFreeBridgedObjectForProperty:
contentKeySpecifierForKeySystem:identifier:options:
lastPathComponent
_dataForProperty:
_nameForProxy
_formatReaderOnce
_checkIsStreamingOnce
T^{OpaqueFigAsset=},R,N,G_figAsset
T^{OpaqueFigFormatReader=},R,N,G_formatReader
streaming
TB,R,N,G_isStreaming
ramps
_setRamps:
_ramps
_scheduledParametersInternal
T@"NSArray",C,N,G_ramps,S_setRamps:
_mutableScheduledParametersInternal
_setStatus:error:resultingStatus:failureReason:
isCancelled
isExecuting
unfinishedOperations
operations
T@"NSArray",R,C
initWithFundamentalOperation:
_fundamentalOperation
initWithMonitoringObject:
attachDepartureAnnouncingObjectMonitorToObject:monitoringObject:
_weakReferenceToMonitoringObject
_registerForObjectNotifications
_balanceMonitoringIsFinishedSemaphore
_unregisterForObjectNotifications
_signalMonitoringIsFinishedIfNeeded
_waitUntilFinishedIfNeeded
monitoredObjectHasDeparted
initWithObject:notificationNames:
_monitoredObject
main
_weakReferenceToMonitoredObject
_operationStateSerializationQueue
_monitoringIsFinishedSemaphore
_notificationNames
_registeredForObjectNotifications
_started
_finished
getRetainedDelegate:retainedDelegateQueue:
_setDelegateViaWeakReference:
invokeDelegateCallbackWithBlock:synchronouslyIfDelegateQueueIsQueue:
_delegateReadWriteQueue
_detectorForWeakReferenceToDelegate
_delegateQueue
isAssociatedWithFragmentMinder
_createAVErrorForError:andFigErrorCode:
T@"AVWeakReference",R,N,G_weakReference
T^{OpaqueFigPlaybackItem=},R,N,G_playbackItem
classForTrackInspectors
T#,R,N,G_classForTrackInspectors
associatedWithFragmentMinder
TB,R,N,GisAssociatedWithFragmentMinder
fragmentMindingInterval
Td,N,G_fragmentMindingInterval,S_setFragmentMindingInterval:
_setStatus:figErrorCode:
_copyFormatReaderFromFigObjectWithFigErrorCode:
_dictionaryOfSpecialGettersForKeyValueStatus
_statusOfValueWhileMutexLockedForKey:error:
_statusOfValuesIsTerminalWhileMutexLockedForKeys:
_inspectionRequiresAFormatReader
_updateStatusWhileMutexLocked:figErrorCode:
_getAndPruneCompletionsWhileMutexLocked
setWithCapacity:
_dictionaryOfSpecialLoadingMethodsForKeys
_loadValuesUsingDefaultLoadingMethodWhileMutexLockedForKeys:
_loadValuesWhileMutexLockedForKeys:
_loadingMutex
_providesAccurateTiming
_statusOfValueForKeyThatIsAlwaysLoaded
_keysAwaitingCompletion
_basicInspectionFailureCode
_addFigObjectNotifications
_removeFigObjectNotifications
objectsForKeys:notFoundMarker:
_playbackItemPropertiesForKeys:
_shouldCacheDuration
_cachedDuration
_figAssetTrackMediaSelectionPropertiesArray
_figAssetMediaSelectionPropertiesArray
_statusOfValueForKey:error:firstNonLoadedDependencyKey:
_figAssetPropertiesForKeys
_loadStatusForProperty:figAsset:error:
_figAssetTrackPropertiesForKeys
dateWithTimeIntervalSinceNow:
_completionHandlerQueue
_loadingBatches
_invokeCompletionHandlerForLoadingBatches:
_figAssetCreationStatus
_assetInspectorOnce
_loadingCanceled
_registeredForFigAssetNotifications
_fragmentMinderAssociationCount
initForUnitTests
_figError
_figErrorUserInfo
_statusOfValueForKeyReturnsLoaded
value:withObjCType:
removeObjectsAtIndexes:
currentRoutingSession
likelyExternalDestinations
longFormVideoRoutingSessionManager
allLikelyDestinations
prefersLikelyDestinationsOverCurrentRoutingSession
updateCurrentRoutingSessionFromLikelyDestinationsWithCompletionHandler:
startRoutingSessionForHighConfidenceExternalDestinationIfPresentWithCompletionHandler:
startRoutingSessionWithOutputDeviceDescriptions:error:
startSuppressingLikelyDestinationsUntilNextPlayEventAndReturnError:
stopSuppressingLikelyDestinationsAndReturnError:
T@"AVRoutingSession",R
destination
establishedAutomaticallyFromLikelyDestination
T@"AVRoutingSessionDestination",R
outputDeviceDescriptions
probability
providesExternalVideoPlayback
_figMediaType
_getFigSampleCursorServiceReportingTimeAccuracy:
sampleCursorWithFigSampleCursor:
_synthesizeMediaCharacteristicsOnce
_cachedMediaCharacteristics
figMediaType
TI,R,N,G_figMediaType
figTrackReader
T^{OpaqueFigTrackReader=},R,N,G_figTrackReader
T^{OpaqueFigAssetTrack=},R,N,G_figAssetTrack
decodable
TB,R,N,GisDecodable
TB,R,N,GisEnabled
selfContained
TB,R,N,GisSelfContained
T@"NSLocale",R,N
excludedFromAutoselectionInTrackGroup
TB,R,N,GisExcludedFromAutoselectionInTrackGroup
decodabilityValidationResult
_longLongForProperty:
_floatForProperty:
_sizeForProperty:defaultValue:
_SInt16ForProperty:
_trackReader
_copySampleCursorServiceOnce
_figSampleCursorService
_sampleCursorTimeAccuracyIsExact
_addFigNotifications
_removeFigNotifications
_loadStatusForFigAssetTrackProperty:error:
_figFormatReader
_timeRangeForProperty:
_segmentsForProperty:
_copyFigFormatReaderOnce
_copyFigTrackReaderOnce
_figMutableComposition
T^{OpaqueFigMutableComposition=},R,N,G_mutableComposition
raise:format:
bundleWithIdentifier:
localizedStringForKey:value:table:
T@,R,W
_cachedReferencedObjectDescription
_weakStorage
figSampleGenerator
weakReferenceToAsset
batchGenerationQueue
batchCallbackQueue
initWithAsset:timebase:
startCursor
mode
_figSampleCursor
preferredMinSampleCount
maxSampleCount
direction
limitCursor
notifyOfDataReadyForSampleBuffer:completionHandler:
createSampleBufferForRequest:
generateSampleBuffersForRequests:sampleHandler:
_generator
overrideTime
initWithStartCursor:
sampleBufferRequestWithStartCursor:
setDirection:
setLimitCursor:
setPreferredMinSampleCount:
setMaxSampleCount:
setMode:
setOverrideTime:
_request
T@"AVSampleCursor",R,&,N
T@"AVSampleCursor",&,N
valueWithBytes:objCType:
initWithFigSegmentReportSampleInformationDictionary:
presentationTimeStamp
offset
isSyncSample
_presentationTimeStamp
_offset
_length
_isSyncSample
T{?=qiIq},R,N,V_presentationTimeStamp
Tq,R,N,V_offset
Tq,R,N,V_length
TB,R,N,V_isSyncSample
initWithFigSegmentTrackReportDictionary:
earliestPresentationTimeStamp
firstVideoSampleInformation
_earliestPresentationTimeStamp
_firstVideoSampleInformation
T{?=qiIq},R,N,V_earliestPresentationTimeStamp
T{?=qiIq},R,N,V_duration
T@"AVAssetSegmentReportSampleInformation",R,N,V_firstVideoSampleInformation
segmentType
trackReports
_segmentType
_trackReports
Tq,R,N,V_segmentType
T@"NSArray",R,N,V_trackReports
valueWithPointer:
_contextsForTokens
_currentToken
_readWriteQueue
_collectorInternal
initWithCMNotificationCenter:
CMNotificationCenter
listenerKeyWithWeakReferenceToListener:callback:name:object:
_copyAndRemoveObserverForWeakReferenceToListener:callback:name:object:
_cmNotificationCenter
_listenerObjectsQueue
_observersForListenerKeys
T^{opaqueCMNotificationCenter=},R,N
initWithWeakReferenceToListener:callback:name:object:
_weakReferenceToListener
_name
indexSetWithIndex:
initWithInsertIndexes:insertedObjects:removeIndexes:removedObjects:
arrayByApplyingDifference:
_blocks
_blockSerializationLock
initWithFormat:arguments:
markEventAsCompleted
waitUntilEventIsCompleted
_condition
_eventCompleted
_lock
_testFlag
assetComparisonToken
_assetComparisonToken
_assetTrackGroup
copyFormatDescription
uniqueID
backingSBuf
_timedMetadataGroupInternal
timedMetadataGroupInternal
T@"AVTimedMetadataGroupInternal",R,N,G_timedMetadataGroupInternal
endDate
extraFigProperties
initWithItems:startDate:endDate:
_taggedRangeMetadataDictionary
_extractPropertiesFromTaggedRangeMetadataDictionary:
_figMetadataArrayForMetadataItems:
dateByAddingTimeInterval:
_metadataItemsForFigMetadataArray:
_dateRangeMetadataGroupInternal
dateRangeMetadataGroupInternal
T@"AVDateRangeMetadataGroupInternal",R,N,G_dateRangeMetadataGroupInternal
setEndDate:
assetCacheWithURL:
assetCacheForHTTPLiveStreamingWithURL:
assetCacheForProgressiveDownloadWithURL:
assetCacheForProgressiveDownloadAndHTTPLiveStreamingWithURL:
_init
mediaSelectionOptionsInMediaSelectionGroup:
isPlayableOffline
maxSize
maxEntrySize
currentSize
removeEntryForKey:
sizeOfEntryForKey:
lastModifiedDateOfEntryForKey:
playableOffline
TB,R,N,GisPlayableOffline
enableHLSCache
enableCRABSCache
initWithURL:enableCRABSCache:enableHLSCache:
setMaxSize:
setMaxEntrySize:
assetCacheInspector
currentPlatformIdentifier
setPlatformIdentifier:forQueue:
resetPlatformIdentifierForQueue:
originator
expectedCurrentItemIdentifier
T@"AVCoordinatedPlaybackParticipant",R,N
initWithCoordinator:originator:expectedCurrentItemIdentifier:commandOrderIndex:rate:itemTime:hostClockTime:
itemTime
hostClockTime
_originator
_expectedCurrentItemIdentifier
_commandOrderIndex
_itemTime
_hostClockTime
Tf,R,N,V_rate
T{?=qiIq},R,N,V_itemTime
T{?=qiIq},R,N,V_hostClockTime
initWithCoordinator:originator:expectedCurrentItemIdentifier:commandOrderIndex:anticipatedPlaybackRate:completionDueDate:
anticipatedPlaybackRate
completionDueDate
_anticipatedPlaybackRate
_completionDueDate
Tf,R,N,V_anticipatedPlaybackRate
T@"NSDate",R,N,V_completionDueDate
initWithCoordinator:originator:expectedCurrentItemIdentifier:commandOrderIndex:shouldBufferInAnticipationOfPlayback:anticipatedPlaybackRate:
shouldBufferInAnticipationOfPlayback
_shouldBufferInAnticipationOfPlayback
TB,R,N,V_shouldBufferInAnticipationOfPlayback
initWithCoordinator:originator:expectedCurrentItemIdentifier:commandOrderIndex:itemTime:shouldPause:shouldBufferInAnticipationOfPlayback:anticipatedPlaybackRate:completionDueDate:
_shouldPause
_participantStateForIdentifier:
_setWaitingPolicies:
initWithPlaybackControlDelegate:
playbackControlDelegate
_latestRateCommandOrderIndex
_latestSeekCommandOrderIndex
coordinateRateChangeToRate:options:
coordinateSeekToTime:options:
currentItemIdentifier
transitionToItemWithIdentifier:proposingInitialTimingBasedOnTimebase:
reapplyCurrentItemStateToPlaybackControlDelegate
_figTimelineCoordinator
_timelineControlQueue
_figTimelineCoordinatorConfigQueue
_currentItemIdentifier
T@"<AVPlaybackCoordinatorPlaybackControlDelegate>",R,W,N
playbackCoordinator:didIssuePlayCommand:completionHandler:
playbackCoordinator:didIssueSeekCommand:completionHandler:
playbackCoordinator:didIssuePauseCommand:completionHandler:
playbackCoordinator:didIssueBufferingCommand:completionHandler:
logArray
_common_init
extendedLogData
extendedLogDataStringEncoding
canBeConvertedToEncoding:
dataUsingEncoding:allowLossyConversion:
_accessLogArray
_playerItemAccessLog
dict
numberOfMediaRequests
numberOfSegmentsDownloaded
playbackStartDate
serverAddress
numberOfServerAddressChanges
playbackSessionID
playbackStartOffset
segmentsDownloadedDuration
durationWatched
numberOfStalls
numberOfBytesTransferred
transferDuration
observedBitrate
currentObservedBitrate
indicatedBitrate
indicatedAverageBitrate
averageVideoBitrate
averageAudioBitrate
startupTime
downloadOverdue
entryReasonCode
observedMaxBitrate
observedMinBitrate
observedBitrateStandardDeviation
playbackType
mediaRequestsWWAN
switchBitrate
_playerItemAccessLogEvent
_classForMovieTracks
initWithMovie:mindingInterval:
initWithAsset:mindingInterval:
mindingInterval
setMindingInterval:
assets
addFragmentedAsset:
removeFragmentedAsset:
fragmentedMovieMinderWithMovie:mindingInterval:
_throwsWhenAlreadyMindedAssetIsAdded
movies
addFragmentedMovie:
removeFragmentedMovie:
_fragmentedMovieTrack
_errorLogArray
_playerItemErrorLog
errorStatusCode
errorDomain
errorComment
_playerItemErrorLogEvent
isAirPlayVideoPlaying
longFormVideoExternalPlaybackMonitor
TB,R,GisAirPlayVideoActive
airPlayVideoPlaying
TB,R,GisAirPlayVideoPlaying
isAppAudioSession
isActive
activationContext
usingLongFormAudio
setActive:withFlags:error:
setApplicationAudioSession:
setCategory:error:
setMode:error:
setActivationContext:error:
setUsingLongFormAudio:error:
setPreferredHardwareSampleRate:error:
setPreferredIOBufferDuration:error:
preferredHardwareSampleRate
preferredIOBufferDuration
inputIsAvailable
currentHardwareSampleRate
currentHardwareInputNumberOfChannels
currentHardwareOutputNumberOfChannels
isApplicationAudioSession
canEnterPIPMode
_audioSession
T@"<AVAudioSessionDelegateMediaPlayerOnly>"
Td,R
beginInterruptionFromInterruptor:
beginInterruption
rangeOfString:
endInterruptionFromInterruptor:category:flags:
endInterruptionWithFlags:
endInterruption
initWithAsset:dictionary:
_groupMediaCharacteristics
_groupID
_groupMediaType
mediaSelectionOptionsFromArray:filteredAndSortedAccordingToPreferredLanguages:
playableMediaSelectionOptionsFromArray:
mediaSelectionOptionsFromArray:withLocale:
mediaSelectionOptionsFromArray:withMediaCharacteristics:
mediaSelectionOptionsFromArray:withoutMediaCharacteristics:
_primaryMediaCharacteristic
_optionWithID:displaysNonForcedSubtitles:
_mediaSelectionGroup
T@"AVMediaSelectionOption",R,N
mediaSelectionOptionForAsset:group:dictionary:hasUnderlyingTrack:
optionID
fallbackIDs
outOfBandIdentifier
outOfBandSource
_optionWithID:identifier:source:displaysNonForcedSubtitles:
_dictionary
_options
_defaultOption
_displayName
_displayNameLocaleIdentifier
_optionMediaCharacteristics
initWithAsset:group:dictionary:
initWithGroup:
group
_taggedMediaCharacteristics
associatedExtendedLanguageTag
preferredLanguages
associatedPersistentIDs
_isMainProgramContent
_preferredMetadataTitleAccordingToPreferredLanguages:fallingBackToMatchingEmptyLocale:excludeM3U8Metadata:
displayNameForKey:value:
_languageDisplayNameFromMetadataAccordingToPreferredLanguages:fallingBackToMatchingEmptyLocale:
_displayNameWithLocale:fallingBackToMatchingUndeterminedAndMultilingual:
associatedUnicodeLanguageIdentifier
displayNameWithLocale:
displayName
_mediaSelectionOption
_weakReferenceToGroup
_optionMediaType
localizedStringForLanguage:context:
registeredOutputSettingsClasses
eligibleOutputSettingsDictionaryKeys
_validateOutputSettingsDictionary:compatibilityDescription:
setWithSet:
supportsEmptyOutputSettingsDictionary
intersectSet:
minusSet:
defaultAudioOutputSettings
defaultVideoOutputSettings
initWithOutputSettingsDictionary:exceptionReason:
validateOutputSettingsDictionary:
outputSettingsWithOutputSettingsDictionary:mediaType:
defaultOutputSettingsForMediaType:
validateUsingOutputSettingsValidator:reason:
_outputSettingsDictionary
T@"NSSet",R,N
T@"NSDictionary",R,N,V_outputSettingsDictionary
initWithOutputSettings:sourceFormatDescription:
_sourceFormatDescription
initWithFileTypeIdentifier:exceptionReason:
mediaFileOutputSettingsValidatorForFileType:
mediaFileTypeWithFileTypeIdentifier:
isoFileTypes
defaultFileExtension
_uti
_supportsSampleReferencesOnce
_supportsSampleReferences
TI,R,N
initWithFileType:
fileType
validateAudioOutputSettings:reason:
validateVideoOutputSettings:reason:
_fileType
initWithTrustedAVAudioSettingsDictionary:
audioOutputSettingsWithAudioSettingsDictionary:
audioOutputSettingsWithTrustedAudioSettingsDictionary:
audioConverterPropertiesForAudioSettingsDictionary:
initWithAudioSettingsDictionary:exceptionReason:
initWithAVAudioSettingsDictionary:exceptionReason:
setInputPropertiesFromASBD:
setOutputFormat:
setOutputFormatFlags:
setOutputBitsPerChannel:
setOutputSampleRate:
setOutputChannelCount:
setOutputDataRate:
availableOutputChannelCountForDesiredChannelCount:rounding:
applicableOutputSampleRateForDesiredSampleRate:rounding:
initWithTrustedPixelBufferAttributes:
initWithTrustedAVVideoSettingsDictionary:
videoOutputSettingsWithVideoSettingsDictionary:
setWithObjects:count:
allowWideColor
_validValuesForScalingMode
videoOutputSettingsWithTrustedVideoSettingsDictionary:
initWithVideoSettingsDictionary:exceptionReason:
pixelAspectRatioDictionary
cleanApertureDictionary
dimensionsAreBoundingBox
setByAddingObjectsFromSet:
initWithPixelBufferAttributes:exceptionReason:
dictionaryWithValuesForKeys:
_VTPixelAspectRatioDictionary
_VTCleanApertureDictionary
initWithAVVideoSettingsDictionary:exceptionReason:
_validateVideoCompressionProperties:againstSupportedPropertyDictionary:forCodecType:exceptionReason:
_adaptedVideoCompressionProperties
minimum
_buildAudioConverter
_fetchApplicableOutputDataRates
_buildAvailableSampleRates
_buildApplicableDataRatesForSampleRates
_bringUpToDate
outputDataRate
_getAvailableOutputSampleRateFor:rounding:
float64RangeWithMinimum:maximum:
outputSampleRate
outputFormat
outputFormatFlags
outputBitsPerChannel
outputChannelCount
_inputASBD
_outputASBD
_audioConverter
_outputDataRate
_needNewConverter
_needAvailableSampleRates
_needApplicableParameters
_availableOutputSampleRates
_availableOutputDataRates
_applicableOutputSampleRatesForDataRate
_applicableOutputDataRatesForSampleRate
TI,N
initWithMinimum:maximum:
initWithAudioValueRange:
maximum
float64RangeWithAudioValueRange:
_minimum
_maximum
Td,R,N,V_minimum
Td,R,N,V_maximum
T@"AVURLAsset",R,N,V_URLAsset
originalRequest
T@"NSURLRequest",R,C
currentRequest
response
T@"NSURLResponse",R,C
assetTypeLoadingStatus
didStartLoadingMetadata
figCallbackQueue
destinationURL
cachePrimingDownloadTokenNum
assetDownloader
_setFileFigAsset:
_setupFigClientObjectAsync:
_removeFigAssetListeners
_removeFigPlaybackItemListeners
initWithURL:destinationURL:options:
initWithDownloadToken:
initWithAsset:mediaSelections:destinationURL:options:
_startOnQueue
_transitionToTerminalStatus:error:
_startLoadingMetadataOnQueue
availableFileSize
assetDownloadSessionWithURL:destinationURL:options:
assetDownloadSessionWithDownloadToken:
assetDownloadSessionWithAsset:destinationURL:options:
registerDownloadLocation:forURLAsset:
assetDownloadSessionWithAsset:mediaSelections:destinationURL:options:
stop
startLoadingMetadata
fileSize
countOfBytesReceived
resolvedMediaSelection
T@"AVMediaSelection",R,N
assetDownloadSessionDidFinishDownload:
assetDownloadSession:didFailWithError:
assetDownloadSession:didLoadTimeRange:totalTimeRangesLoaded:timeRangeExpectedToLoad:forMediaSelection:
assetDownloadSession:didResolveMediaSelection:
assetDownloadSession:didFinishDownloadForMediaSelection:
assetDownloadSession:didUpdateProgressWithExpectedBytes:bytesDownloaded:
assetDownloadSession:willDownloadVariants:
_sendDownloadSuccessToDelegate
_sendDownloadFailureToDelegateWithError:
_sendLoadedTimeRangesChangedToDelegateWithNewlyLoadedTimeRange:currentLoadedTimeRanges:timeRangeExpectedToLoad:selectedMediaArray:
_sendDidResolveMediaSelectionWithMediaSelection:
_sendDidFinishDownloadForMediaSelectionWithMediaSelection:
_sendProgessUpdateWithExpectedBytesToDownload:bytesDownloaded:
_sendWillDownloadVariants:
_transitionToTerminalStatusForDelegateCallbacksWithStatus:error:
_downloadSuccessCallback
_downloadFailureCallbackWithError:
_createDuplicateFigAssetFromAVAsset:
_addFigAssetListeners
_setupFigClientObjectForStreaming:
_setupFigClientObjectForFileDownload:
_startOnQueueFirstTime
_transitionToTerminalStatusAsync:error:
_addFigPlaybackItemListeners
_verifyDownloadConfigurationForAssetType
_primeCache
_readyForInspection
_figAssetNotificationNames
_figPlaybackItemNotificationNames
_primeCacheOnDispatchQueue
_loadedTimeRangesFromFigLoadedTimeRanges:
_errorFromAssetNotificationPayload:
figSampleCursor
implementsGetDecodeTimeStamp
implementsGetDuration
implementsGetDependencyInfo
implementsTestReorderingBoundary
implementsCreateSampleBuffer
implementsCopyChunkDetails
implementsCopySampleLocation
implementsGetMPEG2FrameType
initWithFigSampleCursor:
decodeTimeStamp
stepByDecodeTime:wasPinned:
stepByPresentationTime:wasPinned:
currentSampleStorageRange
stepInDecodeOrderByCount:
stepInPresentationOrderByCount:
stepByDecodeTime:
stepByPresentationTime:
comparePositionInDecodeOrderWithPositionOfCursor:
samplesWithEarlierDecodeTimeStampsMayHaveLaterPresentationTimeStampsThanCursor:
samplesWithLaterDecodeTimeStampsMayHaveEarlierPresentationTimeStampsThanCursor:
canProvideSampleBuffers
createSampleBufferForCurrentSampleReturningError:
createSampleBufferFromCurrentSampleToEndCursor:error:
currentSampleDuration
copyCurrentSampleFormatDescription
currentSampleSyncInfo
currentSampleDependencyInfo
currentSampleAudioDependencyInfo
currentSampleDependencyAttachments
currentChunkStorageURL
currentChunkStorageRange
currentChunkInfo
currentSampleIndexInChunk
samplesRequiredForDecoderRefresh
_sampleCursor
timebaseReadWriteQueue
_copyTimebase
_itemTimeForHostTimeAsCMTime:
itemTimeForHostTime:
itemTimeForMachAbsoluteTime:
setSuppressesPlayerRendering:
_outputInternal
currentRate
playerItemWeakReference
delegateWakeupSource
advanceWakeUpInterval
advanceWakeUpIntervalIsValid
wakeUpImageTime
immediateWakeUp
clientStateOnRequestedMediaDataChangeNotification
shouldTagBuffersWithInfo
_dispatchOutputMediaDataWillChange
initWithPixelBufferAttributes:
_respondToPlayerItemFormatDescriptionsChange
hasNewPixelBufferForItemTime:
_stopObservingTimebaseNotificationsForTimebase:
_startObservingTimebaseNotificationsForTimebase:
outputMediaDataWillChange:
initWithOutputSettings:
earliestAvailablePixelBufferItemTime
requestNotificationOfMediaDataChangeWithAdvanceInterval:
requestNotificationOfMediaDataChangeAsSoonAsPossible
copyPixelBufferForItemTime:itemTimeForDisplay:
copyPixelBufferForItemTime:remove:itemTimeForDisplay:
_setTagBuffersWithConversionInformation
T@"<AVPlayerItemOutputPullDelegate>",R,W
fragmentedAssetWithURL:options:
_fragmentedAsset
accessSerializer
_setMindingInterval:removeAllAssets:
fragmentedAssetMinderWithAsset:mindingInterval:
_fragmentedAssetMinder
_fragmentedAssetTrack
_mediator
defaultActionForKey:
actionForKey:
_destRectForAspectRatio:
animationKeys
hasPrefix:
timingFunction
animationWithKeyPath:
setTimingFunction:
postVideoRectDidChangeNotification
_updateLayerTreeGeometryWithVideoGravity:presentationSize:videoGravityShouldTriggerAnimation:
_sampleBufferVideoRenderer
keyPathsForValuesAffectingStatus
keyPathsForValuesAffectingError
keyPathsForValuesAffectingOutputObscuredDueToInsufficientExternalProtection
_updatePresentationSize:
_sampleBufferDisplayLayerInternal
_videoGravity
_bounds
_videoOutput
sampleBufferVideoRenderer
T@"AVSampleBufferVideoRenderer",R,N,G_sampleBufferVideoRenderer,V_sampleBufferVideoRenderer
T^{OpaqueCMTimebase=},&
output
setOutput:
T@"AVSampleBufferVideoOutput",N
decodeXPCObjectForKey:
initWithEndpoint:customURLHandlerObjectID:authHandlerObjectID:contentKeySessionHandlerObjectID:
encodeXPCObject:forKey:
endpoint
customURLHandlerObjectID
authHandlerObjectID
contentKeySessionHandlerObjectID
_customURLHandlerObjectID
_authHandlerObjectID
_contentKeySessionHandlerObjectID
T@"NSObject<OS_xpc_object>",R,N,V_endpoint
TQ,R,N,V_customURLHandlerObjectID
TQ,R,N,V_authHandlerObjectID
TQ,R,N,V_contentKeySessionHandlerObjectID
initWithAuthenticationChallenge:sender:requestInfo:requestID:
initWithAuthenticationChallenge:sender:
resourceLoader:didCancelAuthenticationChallenge:
sender
cancelAuthenticationChallenge:
_selectorForInformingDelegateOfCancellationByFig
_requestInfo
_performCancellationByClient
_shouldInformDelegateOfFigCancellation
initWithProtectionSpace:proposedCredential:previousFailureCount:failureResponse:error:sender:
T^{__CFDictionary=},R,N,V_requestInfo
customURLLoader
customURLHandler
authHandler
contentKeySessionCustomURLHandler
loadingCancelled
pendingRequests
contentInformationCachingQueue
contentInformationCache
preloadsEligibleContentKeys
URLSession
bridgeBetweenHandlerAndSession
URLSessionOperationQueue
initWithURLRequestHelper:asset:
_setDelegateOnStateQueue:
_getDelegateOnStateQueue
_performDelegateCallbackSynchronouslyIfCurrentDelegateQueueIsQueue:delegateCallbackBlock:
instanceMethodSignatureForSelector:
invocationWithMethodSignature:
setSelector:
setTarget:
setArgument:atIndex:
invoke
methodReturnLength
getReturnValue:
_performDelegateSelector:withObject:representingNewRequest:key:fallbackHandler:
_cancelRequestWithKey:fallbackHandler:
resourceLoader:shouldWaitForRenewalOfRequestedResource:
resourceLoader:shouldWaitForLoadingOfRequestedResource:
resourceLoader:shouldWaitForResponseToAuthenticationChallenge:
performDefaultHandlingForAuthenticationChallenge:
_poseAuthenticationChallengeWithKey:challenge:fallbackHandler:
initWithResourceLoader:requestInfo:requestID:
_issueLoadingRequestWithKey:loadingRequest:isRenewalRequest:fallbackHandler:
_authHandler
_customURLHandler
_customURLLoader
_cancelRequest:requestID:
_poseAuthenticationChallengeWithRequestInfo:requestID:challenge:
_noteFinishingOfRequest:
_handleRequest:requestID:willHandleRequest:
_contentKeySessionCustomURLHandler
_resourceLoader
T@"<AVAssetResourceLoaderDelegate>",R,W,N
setPreloadsEligibleContentKeys:
_sendAuthResponseForChallenge:disposition:credential:error:
useCredential:forAuthenticationChallenge:
continueWithoutCredentialForAuthenticationChallenge:
rejectProtectionSpaceAndContinueWithChallenge:
cacheContentInformation:forURL:
cachedContentInformationForURL:
URLSessionDataDelegate
URLSessionDataDelegateQueue
setURLSession:
T@"<NSURLSessionDataDelegate>",R,N
T@"NSOperationQueue",R,N
T@"NSURLSession",&,N
remoteCustomURLHandlerContextForPID:
contentType
allowedContentTypes
contentLength
entireLengthAvailableOnDemand
byteRangeAccessSupported
renewalDate
diskCachingPermitted
initWithLoadingRequest:allowedContentTypes:
isByteRangeAccessSupported
isDiskCachingPermitted
setContentType:
setContentLength:
setByteRangeAccessSupported:
setRenewalDate:
setDiskCachingPermitted:
setEntireLengthAvailableOnDemand:
isEntireLengthAvailableOnDemand
_contentInformationRequest
TB,N,GisByteRangeAccessSupported
requestedOffset
requestedLength
currentOffset
dataResponseQueue
requestsAllDataToEndOfResource
canSupplyIncrementalDataImmediately
weakReferenceToLoadingRequest
initWithLoadingRequest:requestedOffset:requestedLength:requestsAllDataToEndOfResource:canSupplyIncrementalDataImmediately:
_loadingRequest
_sendDataToCustomURLHandler:
_appendToCachedData:
respondWithData:
_dataRequest
weakReferenceToResourceLoader
requestInfo
responseInfoSentOnceToken
URLRequest
redirect
dataCachingQueue
cachedData
cachedContentInformation
contentInformationRequest
dataRequest
cancelled
sentContentInfo
streamingKeyRequestCompletionHandler
figCryptor
requestor
cryptorKeyRequestID
initWithResourceLoader:URL:httpRequestHeaders:requestOffset:requestLength:allowedContentTypes:figCryptor:cryptorKeyRequestID:
setAllHTTPHeaderFields:
_setContentInformationRequest:
_setDataRequest:
request
_tryToMarkAsCancelled
resourceLoader:didCancelLoadingRequest:
finishLoadingWithError:
appendData:
_isRequestForContentKey
_canSetOrUseCachedContentInformation
allHTTPHeaderFields
_sendResponseInfoToCustomURLHandler
_ensureResponseInfoSentToCustomURLHandler
_cacheContentInformation:
_sendFinishLoadingToCustomURLHandlerWithError:
_contentKeySessionIsAttached
forwardRequestToContentKeySession
_getAndClearCachedData
_sendFinishLoadingToCustomURLHandler
setResponse:
setRedirect:
finishLoading
keyRequestDataUsingCryptorForApp:contentIdentifier:options:performAsync:error:
initWithRequestInfo:
serializableRepresentation
finishLoadingWithResponse:data:redirect:
streamingContentKeyRequestDataForApp:contentIdentifier:options:error:
generateStreamingContentKeyRequestDataAsynchronouslyForApp:contentIdentifier:options:completionHandler:
persistentContentKeyFromKeyVendorResponse:options:error:
T@"NSURLRequest",R,N
TB,R,N,GisFinished
TB,R,N,GisCancelled
T@"AVAssetResourceLoadingContentInformationRequest",R,N
T@"AVAssetResourceLoadingDataRequest",R,N
T@"NSURLResponse",C,N
T@"NSURLRequest",C,N
T@"AVAssetResourceLoadingRequestor",R,N
providesExpiredSessionReports
_requestor
weakObserver
readOnlyTimebase
rateQueue
mostRecentlySetTime
rendererListQueue
renderers
timedRenderRemovals
figSynchronizerAccessQueue
figSynchronizer
currentFigRenderSynchronizerFactory
createRenderSynchronizerWithAllocator:options:error:
setRate:time:
_setRate:time:atHostTime:
_rendererConfigurationIsValid:
_updateRateFromTimebase
setRate:time:atHostTime:error:
delaysRateChangeUntilHasSufficientMediaData
setDelaysRateChangeUntilHasSufficientMediaData:
_synchronizerInternal
_canAddRendererInternal:error:
_addRenderer:error:
_performRendererRemoval:
_getTimebaseObserverForRenderer:
_getClientCompletionHandlerForRenderer:
_removeTimebaseObserverForRenderer:
_createOnceTimebaseObserverForRemovalOfRenderer:atTime:
_storeObserver:clientCompletionHandler:forRenderer:
removeRenderer:atTime:completionHandler:
_scheduleTimedRendererRemovalAtTime:atTime:withClientCompletionHandler:
addRenderer:
removeRenderer:atTime:withCompletionHandler:
_multipleAudioRenderersDisallowed
_addedAudioRendererCountInternal
_addedAudioRendererCount
routeSharingPolicy
setFigRenderSynchronizerFactory:forQueue:
URLByAppendingPathComponent:
data
writeToURL:options:error:
peakBitRate
averageBitRate
videoAttributes
initWithFigAlternateObjC:
audioAttributes
_figAlternateObjC
_videoAttributes
_audioAttributes
_mutex
T@"AVAssetVariantVideoAttributes",R,N
T@"AVAssetVariantAudioAttributes",R,N
figAlternate
videoRange
codecTypes
formatIDs
initWithFigAlternateObjC:mediaSelectionOption:
renditionSpecificAttributesForMediaOption:
_renditionSpecificAttributesForMediaSelection
channelCountForMediaOption:
channelCount
initWithPredicate:
validateWithError:
_validatePredicate:error:
initWithVariant:predicate:
initWithChannelCount:mediaSelectionOption:operatorType:
assetVariantQualifierWithPredicate:
assetVariantQualifierWithVariant:
predicateForChannelCount:mediaSelectionOption:operatorType:
setEnvironmentalConditions:
_environmentalConditions
Tq,N,V_environmentalConditions
operatorWithType:modifier:options:
requiresSecureCoding
performOperationUsingObject:andObject:
visitPredicate:
evaluateWithObject:substitutionVariables:
acceptVisitor:flags:
predicateFormat
_channelcount
_mediaSelectionOptionPlist
_operator
textSelector
textMarkupAttributes
_dictionaryPlistRepresentation
textStyleRuleWithTextMarkupAttributes:textSelector:
initWithTextMarkupAttributes:textSelector:
textStyleRulesFromPropertyList:
textStyleRuleWithTextMarkupAttributes:
initWithTextMarkupAttributes:
_textStyleRule
initWithPreferredLanguages:preferredMediaCharacteristics:
initWithPreferredLanguages:preferredMediaCharacteristics:preferredMediaSubTypes:precludedMediaSubTypes:
principalMediaCharacteristics
preferredMediaCharacteristics
preferredMediaSubTypes
precludedMediaSubTypes
preferMultichannelAudio
precludeMultichannelAudio
initWithPrincipalMediaCharacteristics:preferredLanguages:preferredMediaCharacteristics:
initWithPreferredLanguages:preferredMediaCharacteristics:preferredMediaSubTypes:precludedMediaSubTypes:preferMultichannelAudio:precludeMultichannelAudio:
initWithPreferredLanguages:preferredMediaCharacteristics:fallbackPreferredLanguages:fallbackPreferredMediaCharacteristics:captionDisplayType:
_criteriaInternal
_willDeallocOrFinalize
compositingRequest
setCompositingRequest:
cancellationTest
setCancellationTest:
defaultCIContextProvider
setDefaultCIContextProvider:
completionHandler
setCompletionHandler:
sourceCIImage
setSourceCIImage:
sourcePBuf
setSourcePBuf:
_compositingRequest
_cancellationTest
_defaultCIContextProvider
_completionHandler
_sourceCIImage
_sourcePBuf
T@"AVAsynchronousVideoCompositionRequest",&,N,V_compositingRequest
T@?,C,N,V_cancellationTest
T@?,C,N,V_defaultCIContextProvider
T@?,C,N,V_completionHandler
T@"CIImage",&,N,V_sourceCIImage
T^{__CVBuffer=},&,N,V_sourcePBuf
renderContext
size
colorWithRed:green:blue:
imageWithColor:
sourceTrackPreferredTransform
extent
imageByApplyingTransform:
renderTransform
colorSpace
compositionTime
pixelBuffer
newPixelBuffer
render:toCVPixelBuffer:
finishWithComposedVideoFrame:
finishCancelledRequest
finishWithError:
initUsingCompositingRequest:sourceFrame:cancellationTest:defaultCIContextProvider:completionHandler:
sourceImage
finishWithImage:context:
T@"CIImage",R,N
_requiredSourceTrackIDs
_sourceTrackPreferredTransform
T@?,R,N,V_handler
T{CGAffineTransform=dddddd},N,V_sourceTrackPreferredTransform
T{?={?=qiIq}{?=qiIq}},R,N,V_timeRange
TB,R,D,N
T@"NSArray",R,N,V_requiredSourceTrackIDs
Ti,R,D,N
shouldCancelAllRequests
sourceTrackIDs
sourceFrameByTrackID:
defaultCIContext
filteringRequestsInFlight
setShouldCancelAllRequests:
_filteringRequestsInFlight
_shouldCancelAllRequests
_defaultCIContextThreadSafety
_defaultCIContext
TB,V_shouldCancelAllRequests
T@"NSObject<OS_dispatch_group>",R,V_filteringRequestsInFlight
imageWithCVPixelBuffer:
playerItemOutputHostForPlayerItem:
dependencyFactory
nativeRepresentationSubtypes
textStylingResolution
initWithMediaSubtypesForNativeRepresentation:
initWithDependencyFactory:mediaSubtypesForNativeRepresentation:
legibleOutput:didOutputAttributedStrings:nativeSampleBuffers:forItemTime:
setTextStylingResolution:
_legibleOutputInternal
T@"<AVPlayerItemLegibleOutputPushDelegate>",R,W,N
baseSettingsProvider
videoSettingsAdjuster
sourceVideoFormat
sourceAudioFormat
sourceVideoAverageFrameDuration
sourceVideoMinFrameDuration
_allOutputSettingsPresets
baseSettingsProviderForPreset:
initWithPreset:
videoSettingsAdjusterForPreset:
baseAudioSettings
baseVideoSettings
averageBitRateForSourceFormatDescription:andTargetFrameRate:andEncoderSpecification:
videoEncoderCapabilities
averageNonDroppableFrameIntervalIsSupportedByDefaultEncoderForVideoCodec:
colorSpaceFromSourceFormatDescriptions:andRendererColorSpace:
validatesSourceVideoMinFrameDuration
availableOutputSettingsPresets
outputSettingsAssistantWithPreset:
setSourceAudioFormat:
setSourceVideoFormat:
setSourceVideoAverageFrameDuration:
setSourceVideoMinFrameDuration:
setVideoEncoderSpecification:
initWithOutputSettingsPreset:
_exportSettings
_outputSettingsPresetIdentifier
groupDictionaries
selectedMediaArray
_loadiVarsIfNeeded
_createDefaultMediaSelectionOptions
_groupDictionaries
_dictionaryGroupsWithSelectedOption
_propertyListForSelectedMediaOptionInMediaSelectionGroup:
mediaSelectionCriteriaCanBeAppliedAutomaticallyToMediaSelectionGroup:
_mediaSelection
_validatedGroupIdentifierKey:
_isValidMediaSelectionOption:forMediaSelectionGroup:
weakReferenceToExternalDevice
UUID
screenID
inputMode
_externalDevice
_figEndpointHIDInputMode
initWithExternalDeviceAndHIDDictionary:hidDictionary:
setInputMode:
_externalDeviceHID
_size
_data
_prerendered
pixelSize
imageData
isPrerendered
_externalDeviceIcon
prerendered
TB,R,N,GisPrerendered
_HIDs
_makeHIDsOnlyOnce
_MFiCertSerial
_queue
_oemIcons
_screenInfo
_viewAreasQueue
_currentViewAreas
_makeIconsOnlyOnce
initWithExternalDevice:client:reason:
client
_client
T@"NSString",R,N,V_client
initWithExternalDevice:
screenIDs
setViewAreaIndex:andAdjacentViewAreas:forScreenID:
valueWithRect:
externalDeviceHIDs
OEMIcons
requestCarUIForURL:withUUID:
currentExternalDevice
screenViewAreas
screenSafeAreas
screenInputCapabilities
screenPrimaryInputDevices
externalDeviceHIDWithUUID:
OEMIcon
OEMIconLabel
OEMIconVisible
modelName
nightMode
nightModeSupported
rightHandDrive
limitedUIElements
limitedUI
ownsTurnByTurnNavigation
ownsScreen
recognizingSpeech
supportedFeatures
electronicTollCollection
navigationAidedDriving
transportType
MFiCertificateSerialNumber
requestCarUI
requestCarUIForURL:
requestViewArea:forScreenID:
requestTurnByTurnNavigationOwnership
borrowScreenForClient:reason:
takeScreenForClient:reason:
takeScreenForConnection
sendCommand:withParameters:
_triggerFakeNotificationNamed:withPayload:
T@"<AVExternalDeviceDelegate>",N
iOSUIRequestedForApplicationURL:
siriRequestedWithAction:
initWithAvailableFigEndpoints:
_figEndpoints
outputDeviceDiscoverySessionAvailableOutputDevicesWithAvailableFigEndpoints:
startObservingObject:weakObserver:forTwoPartKeyPath:options:context:
captionLayerWithPlayer:
setCaptionContentInsets:
captionContentInsets
_configurationQueue
_playerBeingObserved
_KVOInvokers
_legibleContentInsets
T{NSEdgeInsets=dddd},N
overscanSubtitleSupportEnabled
TB,N,GisOverscanSubtitleSupportEnabled
initWithVideoComposition:
_setupFigCallbacks
_validateSourcePixelBufferAttributes:andReturnException:
_validateRequiredPixelBufferAttributesForRenderContext:andReturnException:
customVideoCompositor:wouldHaveTriggeredException:
_cleanupFigCallbacks
_colorPropertiesAreSetInVideoComposition:
compositionFrame:didFinishWithComposedPixelBuffer:
compositionFrame:didFinishWithError:
compositionFrameDidCancel:
_figCustomCompositor
_hasRegisteredFigCustomCompositorCallbacks
_clientRequiredPixelBufferAttributes
_weakSelf
_videoCompositionQ
_videoCompositionDidChange
_clientCustomCompositorQ
_clientCustomCompositor
_clientErrorQ
_clientError
_renderContextQ
_renderContext
_finishedRequestQ
initWithFigVideoCompositor:clientRequiredPixelBufferAttributes:videoComposition:pixelBufferPool:
initUsingSession:withRenderContext:compositionFrame:atTime:usingSources:instruction:withSampleBuffers:
hasEqualPropertiesToFigVideoCompositor:
_compositionFrame:atTime:requiresRenderUsingSources:requiresSampleBuffersUsingSources:withInstruction:
_customCompositorShouldAnticipateRenderingFromTime:toTime:andThenFromTime:toTime:
_customCompositorShouldPrerollForRenderingFromTime:toTime:andThenFromTime:toTime:requestID:
_customCompositorShouldCancelPendingFrames
_customCompositorFigPropertyDidChange
processIdentifier
initWithRefreshRate:videoDynamicRange:
videoDynamicRange
refreshRate
_displayCriteria
Ti,R
initWithDescriptionOfHowAllObservedPropertyChangesAreSerializedWithDispatcherDeallocation:
initWithCallbackContextRegistry:observer:object:keyPath:options:block:
initForObservingValueAtKeyPath:onObject:
initWithObservedObject:realNotifier:
callbackDidFireWithChangeDictionary:
startObservingValueAtTwoPartKeyPath:ofObject:options:usingBlock:
startObservingValueAtKeyPath:withoutKeepingAliveObservedObject:options:usingBlock:
_callbackContextRegistry
weakObservationBlockForWeakObserver:passedToBlock:
observedObject
T@"NSObject",R,N
_observer
_keyPath
_weakReferenceToObject
_unsafeUnretainedObject
_callbackRegistrations
keyPathString
initializationIsCompleteForObject:
initWithObject:thatHasPropertyWithKey:whoseValueDependsOnValueAtKeyPath:
_weakReferenceToDependencyHost
_callbackCancellationHelper
_keyPathDependencies
topLevelPropertyKey
_reactToTopLevelPropertyChange:
_startObservingSecondLevelPropertyOnNewCurrentValueForTopLevelDependencyProperty:
secondLevelPropertyKey
_reactToSecondLevelPropertyChange:
_subObjectRegistrationQueue
_KVODispatcher
_dependentKey
_dependencyKeyPath
_leafPropertyChangeNotifier
initWithTopLevelPropertyKey:secondLevelPropertyKey:
_topLevelKey
_secondLevelKey
T@"NSString",R,N,V_topLevelKey
T@"NSString",R,N,V_secondLevelKey
valueForKeyForKVO:
topLevelDependencyProperty
dependentProperty
_dependencyManager
_observedObject
_realNotifier
setRenderContext:
compositionFrame
setCompositionFrame:
setCompositionTime:
sourcesByTrackID
setSourcesByTrackID:
sourceTrackIDsInClientOrder
setSourceTrackIDsInClientOrder:
sampleBufferSourcesByTrackID
setSampleBufferSourcesByTrackID:
sourceSampleBufferTrackIDsInClientOrder
setSourceSampleBufferTrackIDsInClientOrder:
instruction
setInstruction:
setIsFinished:
_compositionFrame
_compositionTime
_sourcesByTrackID
_sourceTrackIDsInClientOrder
_sampleBufferSourcesByTrackID
_sourceSampleBufferTrackIDsInClientOrder
T@"AVWeakReference",&,N,V_session
T@"AVVideoCompositionRenderContext",&,N,V_renderContext
T^{OpaqueFigVideoCompositorFrame=},N,V_compositionFrame
T{?=qiIq},N,V_compositionTime
T@"NSDictionary",&,N,V_sourcesByTrackID
T@"NSArray",&,N,V_sourceTrackIDsInClientOrder
T@"NSDictionary",&,N,V_sampleBufferSourcesByTrackID
T@"NSArray",&,N,V_sourceSampleBufferTrackIDsInClientOrder
T@"<AVVideoCompositionInstruction>",&,N,V_instruction
TB,N,V_isFinished
sourceSampleBufferByTrackID:
sourceTimedMetadataByTrackID:
T@"AVVideoCompositionRenderContext",R,N
T@"<AVVideoCompositionInstruction>",R,N
multipleRoutesDetected
outputDeviceDiscoverySession
outputDevicesChangeNotificationToken
_updateMultipleRoutesDetected
isRouteDetectionEnabled
setRouteDetectionEnabled:
_routeDetectorInternal
routeDetectionEnabled
TB,GisRouteDetectionEnabled
_basisProperties
_renderTransform
_renderScale
_pixelAspectRatio
_edgeWidths
_highQualityRendering
_destinationDesiredPixelBufferAttributes
_destinationDesiredPixelBufferYCbCrMatrix
_destinationDesiredPixelBufferColorPrimaries
_destinationDesiredPixelBufferTransferFunction
_blendingTransferFunction
pixelFormatFamily
_pixelAspectRatioDict
_cleanApertureDict
_destinationPixelBufferDimensions
_bufferPoollInitMutex
_pixelBufferPoolQ
isBufferYCbCr:
pixelAspectRatio
edgeWidths
highQualityRendering
T{?=qq},R,N
T{?=dddd},R,N
T@"AVVideoComposition",R,N
renderContextPropertiesFromFigCompositor:
_mediaDataStorageInternal
_startListeningToLoaderNotifications
initWithData:options:
movieTypes
_initWithFormatReader:URL:data:options:
_stopListeningToLoaderNotifications
movieWithURL:options:
movieWithData:options:
_initWithFigAsset:
_initWithFigError:userInfo:
_figMutableMovieFromFormatReader:
defaultMediaDataStorage
canContainMovieFragments
containsMovieFragments
_movie
T@"AVMediaDataStorage",R,N
_mutableMovieForFileType:
movieHeaderWithFileType:error:
writeMovieHeaderToURL:fileType:options:error:
isCompatibleWithFileType:
trackWaitingSemaphore
initWithURL:options:error:
initWithData:options:error:
initWithSettingsFromMovie:options:error:
movieWithURL:options:error:
movieWithData:options:error:
movieWithSettingsFromMovie:options:error:
initWithSettingsFromMovie:options:
initWithFileType:copySettingsFromMovie:options:
_signalTracksUpdated
interleavingPeriod
setInterleavingPeriod:
setDefaultMediaDataStorage:
_mutableMovieInternal
insertTimeRange:ofAsset:atTime:copySampleData:error:
_addMutableTrackWithMediaType:copySettingsFromTrack:options:
addMutableTrackWithMediaType:copySettingsFromTrack:options:
addMutableTracksCopyingSettingsFromTracks:options:
weakReferenceToPlayerItemTrack
_figPlaybackItem
outputMediaDataAvailable:trackID:
outputSequenceWasFlushed:trackID:
_setFigPlaybackItem:
_weakReferenceToPlayerItemTrack
copyNextSampleBufferForTrackID:flags:
_figPlaybackItemTrackSampleBufferDidBecomeAvailableForTrackID:extractionID:
_figPlaybackItemTrackOutputSequenceWasFlushedForTrackID:extractionID:
T@"<AVPlayerItemSampleBufferOutputDelegate>",R,W
reportGroup
keyIDFromInitializationData
initializationData
responseInfoSent
providesPersistableKey
preloadingRequestOptions
customURLRequestID
isRenewalRequest
cryptorUUID
stateMutex
hasAnyKeyRequestSucceeded
contentKeySpecifier
contentKey
contentIdentifier
keySystem
_validateProtocolVersionList:
_validateHLSEncryptionMethod:
initForKeySystem:identifier:options:
_keySystem
_setWeakReferenceForContentKeyRequest:withCryptorUUID:
initWithContentKeySession:reportGroup:identifier:contentIdentifier:keyIDFromInitializationData:initializationData:preloadingRequestOptions:providesPersistableKey:
_copyAndStoreCryptorUUID
initWithSpecifier:andCryptor:
contentKeyRequestDidProduceContentKey:
_clearContext
_prepareCryptor:forRenewal:andReturnKeyRequestID:
_setStatus:
_finishLoadingCustomURLRequestWithError:
contentKeySession:contentKeyRequest:didFailWithError:
_invokeDelegateCallbackWithBlock:synchronouslyWhenDelegateQueueIsNULL:
_getRetryReasonForError:
contentKeySession:shouldRetryContentKeyRequest:reason:
_setError:
contentKeySession:contentKeyRequestDidSucceed:
createCryptorIfNecessaryForIdentifier:initializationData:formatDescription:hlsMethod:error:
_ensureProtocolVersionList:
_validateServerChallenge:
setAppIdentifier:
configureAppIdentifier:
_mergePreloadingRequestOptions:withCreateKeyRequestOptions:
ensureCryptorWithFormatDescription:error:
_createKeyRequestDictionaryForApp:persistentKey:serverChallenge:cryptorKeyRequestID:purpose:
createProtectorSessionIdentifierIfNecessary
contentKeyRequestDataForApp:contentIdentifier:options:error:
processContentKeyResponseData:renewalDate:error:
_setContentKeyRequest:forCryptorUUID:cryptorKeyRequestID:
_finishLoadingCustomURLRequestWithResponseData:renewalDate:
_setAuthorizationToken:forIdentifier:error:
_handleKeyResponseError:
renewExpiringResponseDataForContentKeyRequest:
clientCanReceivePersistableContentKeyRequest
_canRespondByRequestingPersistableContentKeyRequest
issueContentKeyRequestWithCustomURLHandler:identifier:requestInfo:requestID:providesPersistableKey:
issueContentKeyRequestWithPreloadingRequestOptions:identifier:initializationData:providesPersistableKey:
respondByRequestingPersistableContentKeyRequestAndReturnError:
_sendResponseInfoToCustomURLHandlerWithRenewalDate:
initWithContentKeySession:reportGroup:customURLHandler:identifier:requestInfo:requestID:providesPersistableKey:isRenewalRequest:
_prepareForKeyRenewal
renewsExpiringResponseData
canProvidePersistableContentKey
_handleKeyResponseSuccess
makeStreamingContentKeyRequestDataForApp:contentIdentifier:options:completionHandler:
processContentKeyResponseData:
processContentKeyResponse:
processContentKeyResponseError:
renewExpiringContentKeyResponseData
respondByRequestingPersistableContentKeyRequest
_contentKeyRequest
T@,R
T@"NSDictionary",R,C
T@"AVContentKeySpecifier",R
T@"AVContentKey",R
externalProtectionStatusForCryptor:withDisplays:
willOutputBeObscuredDueToInsufficientExternalProtectionForDisplays:
externalContentProtectionStatus
setReportGroup:
persistableContentKeyFromKeyVendorResponse:options:error:
initWithKeySystem:
initWithKeyData:renewalDate:
_keyData
_renewalDate
initWithKeyData:initializationVector:
_initializationVector
initWithAuthorizationTokenData:
_authorizationTokenData
contentKeyResponseWithFairPlayStreamingKeyResponseData:
contentKeyResponseWithFairPlayStreamingKeyResponseData:renewalDate:
contentKeyResponseWithClearKeyData:initializationVector:
contentKeyResponseWithAuthorizationTokenData:
_keyResponse
_delegateStorage
_storageURL
_appIdentifier
_isExpired
_defaultContentKeyGroup
_threadSafetyQ
_contentKeyRecipients
keyRequestsByRequestID
cryptorUUIDToContentKeyRequestMap
contentKeySessionWithKeySystem:
initWithKeySystem:storageDirectoryAtURL:
strongToWeakObjectsMapTable
initWithKeySystem:keySession:storageDirectoryAtURL:
contentProtectionSessionIdentifier
processContentKeyRequestWithIdentifier:initializationData:options:
contentKeySession:didProvideRenewingContentKeyRequest:
copyDefaultSecureStopManagerForAppIdentifier:storageDirectoryAtURL:
contentKeySessionWithKeySystem:storageDirectoryAtURL:
initWithStorageDirectoryAtURL:
storageURL
addContentKeyRecipient:
removeContentKeyRecipient:
contentKeyRecipients
makeSecureTokenForExpirationDateOfPersistableContentKey:completionHandler:
invalidatePersistableContentKey:options:completionHandler:
invalidateAllPersistableContentKeysForApp:options:completionHandler:
T@"<AVContentKeySessionDelegate>",R,W
T@"NSObject<OS_dispatch_queue>",R
T@"NSURL",R
T@"NSData",R
contentKeySessionDidGenerateExpiredSessionReport:
_handleSecureStopDidFinalizeRecordCallback
_handleExternalProtectionStateChangedCallbackForCryptKeyIdentifier:
pendingExpiredSessionReportsWithAppIdentifier:storageDirectoryAtURL:
removePendingExpiredSessionReports:withAppIdentifier:storageDirectoryAtURL:
_uniqueIDForCyptorUUID:cryptorKeyRequestID:
_contentKeyRequestForCryptorUUID:cryptorKeyRequestID:
_removeContentKeyRequestForCryptorUUID:cryptorKeyRequestID:
contentKeySession:didUpdatePersistableContentKey:forContentKeyIdentifier:
contentKeySession:contentProtectionSessionIdentifierDidChangeForReportGroup:
contentKeySessionContentProtectionSessionIdentifierDidChange:
_internalQueue
_handleKeyResponseError:forCryptorUUID:andCryptorKeyRequestID:
_handleKeyResponseSuccessfullyProcessedForCryptorUUID:andCryptorKeyRequestID:
_handleUpdateToPersistentKey:forKeyIdentifier:
_handleContentProtectionSessionIdentifierDidChange:
contentKeySession:didProvidePersistableContentKeyRequest:
contentKeySession:didProvideContentKeyRequests:forInitializationData:
contentKeySession:didProvideContentKeyRequest:
issueContentKeyRequests:forInitializationData:
issueContentKeyRequest:toDelegateWithCallbackSelector:
issuePersistableContentKeyRequest:
issueRenewableContentKeyRequest:
issueContentKeyRequest:
hasProtector
copyCryptorForIdentifier:initializationData:
copyCryptorForInitializationData:
copyCryptorForCryptKeyAttributes:
_sendFinishLoadingForPreloadedKeyRequest:withRequestID:fromHandler:
initWithKeySystem:storageDirectoryAtURL:internal:
issueContentKeyRequestForInitializationData:
createCryptorIfNecessaryForInitializationData:formatDescription:error:
_handleRequest:withRequestID:fromHandler:willHandleRequest:
internal
TB,R,N,GisInternal
defaultContentKeyGroup
makeContentKeyGroup
T@"AVContentKeyReportGroup",R
_contentKeySession
failProcessingContentKeyRequestWithIdentifier:initializationData:error:
_processContentKeyRequestWithKeyRequestFromPSSH:decryptFormatType:initializationData:options:
_processContentKeyRequestWithIdentifier:contentIdentifier:keyIDFromInitializationData:initializationData:options:
cryptorOptionsForIdentifier:initializationData:formatDescription:hlsMethod:
associateContentKeyRequest:
_contentKeySessionWeakReference
_protectorSessionIdentifier
_cryptorsList
T@"NSString",R,VkeySystem
T@,R,Videntifier
T@"NSDictionary",R,Voptions
contentKeyWithSpecifier:andCryptor:
getCryptor
_cryptor
T@"AVContentKeySpecifier",R,VcontentKeySpecifier
dataUsingEncoding:
initWithBase64EncodedData:options:
initWithRemoteGroupID:syncController:
outputDeviceGroupWithRemoteGroupID:syncController:
_outputDevicesFromProperty:withQualifier:
_outputDeviceForID:
_groupMembersChangedForGroupWithID:
_volumeChangedForGroupWithID:
_volumeControlTypeChangedForGroupWithID:
@16@0:8
B24@0:8@16
#16@0:8
@24@0:8:16
@32@0:8:16@24
@40@0:8:16@24@32
B16@0:8
B24@0:8#16
B24@0:8:16
Vv16@0:8
Q16@0:8
^{_NSZone=}16@0:8
B24@0:8@"Protocol"16
@"NSString"16@0:8
v40@0:8@16@24@?32
v20@0:8f16
q16@0:8
v24@0:8@16
f16@0:8
v40@0:8@"AVOutputDevice"16@"NSDictionary"24@?<v@?@"AVOutputDeviceGroupMembershipChangeResult">32
@"AVOutputDeviceGroup"16@0:8
v24@0:8@"AVOutputDeviceGroup"16
@"NSArray"16@0:8
@"AVOutputDevice"16@0:8
@24@0:8@16
v16@0:8
@"AVOutputContext"
@"AVOutputDeviceGroup"
@"AVQueuePlayer"
@"AVPlayerItem"
@"NSMutableArray"
{?="start"{?="value"q"timescale"i"flags"I"epoch"q}"duration"{?="value"q"timescale"i"flags"I"epoch"q}}
@"NSObject<OS_dispatch_queue>"
{?="value"q"timescale"i"flags"I"epoch"q}
@"NSError"
@"<AVCallbackCancellation>"
@"AVWeakReference"
@80@0:8@16@24{?={?=qiIq}{?=qiIq}}32
@32@0:8@16@24
i16@0:8
B24@0:8^@16
v48@0:8@16@24@32^v40
@"AVPlayerLooperInternal"
v32@0:8^q16^@24
^{OpaqueFigSimpleMutex=}
@"AVAssetReaderTrackOutput"
i48@0:8@16^{OpaqueFigAssetReader=}24@32^i40
i48@0:8@"AVAssetReaderTrackOutput"16^{OpaqueFigAssetReader=}24@"NSDictionary"32^i40
@"AVAssetReaderOutputMetadataAdaptorInternal"
@"NSDictionary"
d16@0:8
@"AVVideoPerformanceMetricsInternal"
@"<AVOutputDeviceDiscoverySessionImpl>"
@"<AVOutputDeviceDiscoverySessionAvailableOutputDevicesImpl>"
@24@0:8Q16
v24@0:8q16
v32@0:8@16@24
@"AVOutputDeviceDiscoverySessionInternal"
@"AVOutputDeviceDiscoverySessionAvailableOutputDevicesInternal"
v24@0:8@?16
v24@0:8#16
v20@0:8B16
v32@0:8@16@?24
B28@0:8B16^@20
B32@0:8@16^@24
v40@0:8@?16@24@?32
v32@0:8@"NSString"16@?<v@?@@"NSError">24
B32@0:8@"NSString"16^@24
v40@0:8@?<v@?@"<AVOutputDeviceConfigurationModification>">16@"NSDictionary"24@?<v@?q@"<AVOutputDeviceConfigurationRetrieval>"@"NSString"@"NSError">32
@"<AVOutputDeviceImplSupport>"16@0:8
v24@0:8@"<AVOutputDeviceImplSupport>"16
@"NSData"16@0:8
@"NSNumber"16@0:8
@"NSDictionary"16@0:8
@32@0:8^{OpaqueAPSyncController=}16@24
v24@0:8^{__CFString=}16
^{OpaqueAPSyncController=}
@"<AVOutputDeviceImpl>"
@"<AVOutputDeviceImplSupport>"
@"AVKeyPathDependencyManager"
@"AVPlayer"
@"NSString"
@"FigBaseCALayer"
@"FigVideoContainerLayer"
@"FigSubtitleCALayer"
@"AVPlayerLayer"
{CGSize="width"d"height"d}
{NSEdgeInsets="top"d"left"d"bottom"d"right"d}
@"AVSinkSubscriber"
v24@0:8@"<AVKeyPathDependencyRegistration>"16
v24@0:8@"<AVCallbackCancellation>"16
v48@0:8{CGRect={CGPoint=dd}{CGSize=dd}}16
v24@0:8d16
v40@0:8@16@24@32
v192@0:8@16{CATransform3D=dddddddddddddddd}24@152@160{CGSize=dd}168@184
v56@0:8@16{CGSize=dd}24@40@48
{CGSize=dd}16@0:8
v28@0:8B16@20
v28@0:8@16B24
v56@0:8^@16^@24^@32^@40^@48
{CGRect={CGPoint=dd}{CGSize=dd}}16@0:8
{CGRect={CGPoint=dd}{CGSize=dd}}48@0:8{CGRect={CGPoint=dd}{CGSize=dd}}16
v48@0:8{NSEdgeInsets=dddd}16
{NSEdgeInsets=dddd}16@0:8
@"AVPlayerLayerInternal"
@40@0:8{?=qiIq}16
{?=qiIq}16@0:8
v24@0:8^v16
r*16@0:8
c16@0:8
C16@0:8
s16@0:8
S16@0:8
I16@0:8
@24@0:8^{_NSZone=}16
@64@0:8{?={?=qiIq}{?=qiIq}}16
{?={?=qiIq}{?=qiIq}}16@0:8
@112@0:8{?={?={?=qiIq}{?=qiIq}}{?={?=qiIq}{?=qiIq}}}16
{?={?={?=qiIq}{?=qiIq}}{?={?=qiIq}{?=qiIq}}}16@0:8
{?="source"{?="start"{?="value"q"timescale"i"flags"I"epoch"q}"duration"{?="value"q"timescale"i"flags"I"epoch"q}}"target"{?="start"{?="value"q"timescale"i"flags"I"epoch"q}"duration"{?="value"q"timescale"i"flags"I"epoch"q}}}
v48@0:8{?=qiIq}16@40
{?=qiIq}24@0:8@16
v72@0:8{?={?=qiIq}{?=qiIq}}16@64
{?={?=qiIq}{?=qiIq}}24@0:8@16
v120@0:8{?={?={?=qiIq}{?=qiIq}}{?={?=qiIq}{?=qiIq}}}16@112
{?={?={?=qiIq}{?=qiIq}}{?={?=qiIq}{?=qiIq}}}24@0:8@16
@32@0:8^{OpaqueCMTimebase=}16@24
^{OpaqueCMTimebase=}16@0:8
@"NSObject<OS_dispatch_source>"
^{OpaqueCMTimebase=}
@64@0:8^{OpaqueCMTimebase=}16{?=qiIq}24@48@?56
v40@0:8{?=qiIq}16
@48@0:8^{OpaqueCMTimebase=}16@24@32@?40
{?=qiIq}40@0:8{?=qiIq}16
@"NSArray"
@"AVWeakReferencingDelegateStorage"
@"NSDate"
@"AVPlayerItemMetadataCollectorInternal"
@56@0:8@16@24@32^@40^@48
@24@0:8@?16
@120@0:8@16@24{?=qiIq}32@56Q64{?=qiIq}72{?=qiIq}96
@128@0:8@16@24{?=qiIq}32@56Q64{?=qiIq}72{?=qiIq}96@120
@104@0:8@16@24@32@40Q48{?=qiIq}56{?=qiIq}80
@112@0:8@16@24@32@40Q48{?=qiIq}56{?=qiIq}80@104
@40@0:8@16@24^{OpaqueFigPlayerInterstitialEvent=}32
@136@0:8@16@24{?=qiIq}32@56@64Q72{?=qiIq}80{?=qiIq}104@128
^{OpaqueFigPlayerInterstitialEvent=}16@0:8
^{OpaqueFigPlayerInterstitialEvent=}
v24@0:8^{OpaqueFigPlayerInterstitialCoordinator=}16
^{OpaqueFigPlayerInterstitialCoordinator=}
^{OpaqueFigVisualContext=}
^{OpaqueVTPixelBufferConformer=}
B36@0:8@16B24^@28
^{__CVBuffer=}52@0:8{?=qiIq}16^{?=qiIq}40I48
B40@0:8{?=qiIq}16
^{__CVBuffer=}48@0:8{?=qiIq}16^{?=qiIq}40
^{__CVBuffer=}24@0:8^{?=qiIq}16
B24@0:8^{OpaqueFigVideoQueue=}16
^{OpaqueFigVisualContext=}16@0:8
@"AVSampleBufferVideoOutputInternal"
@"AVAssetDownloadStorageManagementPolicyInternal"
@"NSMutableDictionary"
@"<AVOutputDeviceGroupImpl>"
@32@0:8q16@24
^{OpaqueFigMetadataReader=}
@"<NSObject><NSCopying>"
@"NSLocale"
@24@0:8^v16
^{CGImage=}16@0:8
@40@0:8@16@24@32
@36@0:8@16@24I32
q32@0:8@16^@24
q32@0:8@"NSString"16^@24
v32@0:8@"NSArray"16@?<v@?>24
@32@0:8^{OpaqueFigMetadataReader=}16q24
B32@0:8@16@24
@24@0:8B16B20
@24@0:8^@16
^v32@0:8^{opaqueCMFormatDescription=}16^@24
@32@0:8@16^@24
@"AVMetadataItemInternal"
@"AVMutableMetadataItemInternal"
@"AVMetadataItemValueRequest"
@32@0:8@16@?24
@"AVLazyValueLoadingMetadataItemInternal"
@"AVMetadataItemValueRequestInternal"
^{OpaqueFigAsset=}
@120@0:8@16q24q32@40@48@56@64{?=qiIq}72{?=qiIq}96
v28@0:8q16i24
@"AVChapterMetadataItemInternal"
@"AVMetadataItemFilterInternal"
@"AVAssetInspectorLoader"
@"AVDispatchOnce"
^{OpaqueFigAsset=}16@0:8
^{OpaqueFigFormatReader=}16@0:8
^{OpaqueFigPlaybackItem=}16@0:8
@"AVAssetProxyInternal"
@"<AVLoggingIdentifier>"
@44@0:8@16^{OpaqueFigPlaybackItem=}24@32B40
q24@0:8@16
^{OpaqueFigMutableComposition=}16@0:8
{CGAffineTransform=dddddd}16@0:8
@24@0:8#16
@20@0:8i16
v28@0:8i16@?20
@"AVAssetInternal"
@"AVDisplayCriteria"
Q88@0:8@16{?={?=qiIq}{?=qiIq}}24@72Q80
@24@0:8q16
@"AVAssetFragmentInternal"
@32@0:8Q16Q24
@"AVAssetClientURLRequestHelper"
@"AVAssetCustomURLBridgeForNSURLProtocol"
@"AVAssetCustomURLAuthentication"
@"NSURL"
@"AVAssetResourceLoader"
@"AVAssetCache"
@48@0:8@16@24^Q32^@40
@48@0:8@16q24q32@40
@32@0:8^{__CFDictionary=}16^{__CFString=}24
@"AVURLAssetInternal"
r^{OpaqueFigAsset=}16@0:8
@?16@0:8
@32@0:8@16^Q24
@"NSEnumerator"
i32@0:8@16^B24
v32@0:8@"AVContentKeySession"16@"AVContentKey"24
v24@0:8@"NSCoder"16
@24@0:8@"NSCoder"16
@"NSSecurityScopedURLWrapper"
@40@0:8@16@24^@32
@44@0:8@16@24B32^@36
@"AVAudioMixEffectParametersInternal"
@32@0:8I16I20f24f28
@20@0:8f16
@"AVAudioMixSweepFilterEffectParametersInternal"
^{OpaqueFigAssetImageGenerator=}
@"AVAsset"
@"AVVideoComposition"
@"AVCustomVideoCompositorSession"
@32@0:8{CGSize=dd}16
^{CGImage=}56@0:8{?=qiIq}16^{?=qiIq}40^@48
v32@0:8{CGSize=dd}16
{CGSize=dd}32@0:8{CGSize=dd}16
^{CGImage=}56@0:8{?=qiIq}16@40^@48
@"AVAssetImageGeneratorInternal"
v32@0:8@"NSData"16@?<v@?@"NSError">24
@"AVOutputDeviceCommunicationChannel"16@0:8
v24@0:8@"AVOutputDeviceCommunicationChannel"16
@24@0:8^{OpaqueFigEndpointRemoteControlSession=}16
^{OpaqueFigEndpointRemoteControlSession=}
@"AVOutputDeviceCommunicationChannel"
@"AVAssetTrackInspector"
^{OpaqueFigAssetTrack=}
@36@0:8@16i24q28
@28@0:8@16i24
@32@0:8@16q24
^{OpaqueFigTrackReader=}16@0:8
^{OpaqueFigAssetTrack=}16@0:8
B24@0:8I16I20
v48@0:8{?=qiIq}16@?40
@"AVAssetTrackInternal"
@"AVPixelBufferAttributeMediator"
@"AVAudioSessionMediaPlayerOnly"
@"<AVBlockScheduler>"
@"NSMutableSet"
@"AVAudioSession"
@"NSNumber"
@"AVPlayerPlaybackCoordinator"
@"NSHashTable"
^{OpaqueFigPlayer=}
^{OpaqueFigPlaybackItem=}
^{OpaqueCMClock=}
@24@0:8^{OpaqueFigPlayer=}16
i40@0:8q16r^{__CFDictionary=}24^^{OpaqueFigPlayer}32
^{OpaqueFigPlayer=}16@0:8
v48@0:8@16@24Q32^v40
v32@0:8@16^{OpaqueFigPlayer=}24
B40@0:8@?16@?24^@32
v24@0:8^{OpaqueFigPlaybackItem=}16
v32@0:8q16@?24
@44@0:8@16B24@28@36
@36@0:8i16@20@28
v40@0:8f16i20@24@?32
v56@0:8f16{?=qiIq}20B44i48B52
v44@0:8f16{?=qiIq}20
q32@0:8^@16q24
q28@0:8^@16i24
q28@0:8^@16f24
q24@0:8^@16
v88@0:8{?=qiIq}16{?=qiIq}40{?=qiIq}64
v96@0:8{?=qiIq}16{?=qiIq}40{?=qiIq}64@?88
v68@0:8f16{?=qiIq}20{?=qiIq}44
i24@0:8@?16
v28@0:8f16@?20
v28@0:8B16^{__CFDictionary=}20
^{OpaqueCMClock=}16@0:8
v24@0:8^{OpaqueCMClock=}16
^{__CFString=}24@0:8q16
v28@0:8q16B24
@56@0:8{?=qiIq}16@40@?48
@40@0:8@16@24@?32
v40@0:8@16r^{CGRect={CGPoint=dd}{CGSize=dd}}24r^{NSEdgeInsets=dddd}32
v24@0:8^{OpaqueFigPlayer=}16
v56@0:8@16@24@32@40@48
B40@0:8^@16^{CGSize=dd}24^@32
@"AVPlayerInternal"
B24@0:8q16
v20@0:8i16
B32@0:8d16^@24
@"AVAudioSession"16@0:8
v24@0:8@"AVAudioSession"16
@40@0:8q16@24@32
v24@0:8Q16
v24@0:8^{OpaqueFigVideoTarget=}16
^{OpaqueFigPlayerInterstitialCoordinator=}16@0:8
r^v24@0:8q16
v32@0:8^v16q24
@"AVURLAsset"
@"NSData"
@"AVAssetDownloadContentConfiguration"
@112@0:8{?=qiIq}16{?=qiIq}40{?=qiIq}64{?=qiIq}88
@"AVVideoCompositionRenderHintInternal"
{?="mutex"^{OpaqueFigSimpleMutex}"requester"@"AVMediaDataRequester"}
@"AVScheduledAudioParameters"
^{OpaqueFigSampleBufferAudioRenderer=}
v24@0:8^^{OpaqueFigSampleBufferAudioRenderer}16
B32@0:8@"AVSampleBufferRenderSynchronizer"16^@24
v24@0:8^{opaqueCMSampleBuffer=}16
v32@0:8@"NSObject<OS_dispatch_queue>"16@?<v@?>24
v32@0:8q16@24
@"AVSampleBufferAudioRendererInternal"
@"AVAssetWriterInput"
@"AVAssetWriterInputMetadataAdaptorInternal"
@"AVExternalProtectionMonitorInternal"
^{OpaqueVTPixelBufferAttributesMediator=}
@"<AVPlayerItemDelegate>"
@"AVAudioMix"
^{__CFString=}
@"AVPlayerItemInterstitialEventCollector"
^{opaqueMTAudioProcessingTap=}
@"AVMediaSelection"
@"AVPlayerConnection"
^{OpaqueFigCPEProtector=}
i60@0:8^{OpaqueFigPlayer=}16@24@32I40^{__CFDictionary=}44^^{OpaqueFigPlaybackItem}52
^{OpaqueCMTimebase=}24@0:8^{OpaqueFigPlaybackItem=}16
B24@0:8^{CGSize=dd}16
B24@0:8^B16
@32@0:8@16^{OpaqueFigPlaybackItem=}24
{?=qiIq}24@0:8^{OpaqueCMTimebase=}16
v28@0:8i16B20B24
B32@0:8@16@?24
v20@0:8I16
v28@0:8@16i24
v28@0:8^{opaqueMTAudioProcessingTap=}16i24
v64@0:8{?={?=qiIq}{?=qiIq}}16
v36@0:8@16@24B32
^{OpaqueFigCPEProtector=}16@0:8
@24@0:8^{__CFDictionary=}16
v32@0:8^{OpaqueFigPlaybackItem=}16@24
^{opaqueMTAudioProcessingTap=}16@0:8
v24@0:8^{opaqueMTAudioProcessingTap=}16
@"AVPlayerItemInternal"
v72@0:8^{OpaqueFigPlaybackItem=}16@24@32{?=qiIq}40@64
v44@0:8^{OpaqueFigPlaybackItem=}16@24i32@36
@48@0:8^{OpaqueFigPlaybackItem=}16B24i28@32@40
@"AVPlayerItemTrackInternal"
@"AVQueuePlayerInternal"
@"AVSpecifiedLoggingIdentifierInternal"
@"AVAssetLoggingIdentifierInternal"
@"AVPlayerLoggingIdentifierInternal"
^{OpaqueFigMutableComposition=}
^{OpaqueFigFormatReader=}
@"AVAssetInspector"
@"AVCompositionInternal"
B104@0:8{?={?=qiIq}{?=qiIq}}16@64{?=qiIq}72^@96
v88@0:8{?={?=qiIq}{?=qiIq}}16{?=qiIq}64
@"AVMutableCompositionInternal"
^{__CFDictionary=}
@"AVPlayerItemMetadataOutputInternal"
@32@0:8^{opaqueCMFormatDescription=}16^{opaqueCMFormatDescription=}24
r^{opaqueCMFormatDescription=}16@0:8
^{opaqueCMFormatDescription=}
@"AVCompositionTrackInternal"
B64@0:8@16@24{?=qiIq}32^@56
v32@0:8^v16^{__CFString=}24
v64@0:8{CGAffineTransform=dddddd}16
v40@0:8@16@24q32
v32@0:8^{opaqueCMFormatDescription=}16^{opaqueCMFormatDescription=}24
@"AVMutableCompositionTrackInternal"
@"NSObject"
@28@0:8B16@?20
@"AVPublisher"
^{OpaqueFigReentrantMutex=}
@"AVNotificationSubscription"
@36@0:8@16B24@?28
@"<AVCancellable>"
@"NSNumberFormatter"
@24@0:8d16
B40@0:8o^@16@24o^@32
@"AVTimeFormatterInternal"
@124@0:8@16i24{?={?=qiIq}{?=qiIq}}28{?={?=qiIq}{?=qiIq}}76
@"AVCompositionTrackSegmentInternal"
@"NSObject<OS_dispatch_semaphore>"
@"AVMovieTrackInternal"
^{OpaqueFigMutableMovie=}
@28@0:8i16@20
^{OpaqueFigMutableMovie=}16@0:8
{CGSize=dd}24@0:8^{__CFString=}16
v40@0:8{CGSize=dd}16^{__CFString=}32
@24@0:8^{__CFString=}16
v32@0:8@16^{__CFString=}24
@"AVMutableMovieTrackInternal"
B24@0:8^{opaqueCMFormatDescription=}16
B108@0:8{?={?=qiIq}{?=qiIq}}16@64{?=qiIq}72B96^@100
B48@0:8^{opaqueCMSampleBuffer=}16^{?=qiIq}24^{?=qiIq}32^@40
B112@0:8{?={?=qiIq}{?=qiIq}}16{?={?=qiIq}{?=qiIq}}64
B32@0:8@16^q24
^{OpaqueFigAssetReader=}
^{OpaqueFigAssetReader=}16@0:8
@"AVAssetReaderInternal"
@"AVRunLoopCondition"
v24@0:8^{OpaqueFigAssetReader=}16
^{opaqueCMSampleBuffer=}16@0:8
@"AVAssetReaderOutputInternal"
@"AVAssetTrack"
@"AVOutputSettings"
@"AVAssetReaderTrackOutputInternal"
@"AVAudioOutputSettings"
^{opaqueMTAudioProcessingTap=}24@0:8@16
v32@0:8^{opaqueMTAudioProcessingTap=}16@24
@"AVAssetReaderAudioMixOutputInternal"
@"AVVideoOutputSettings"
@"AVAssetReaderVideoCompositionOutputInternal"
@"AVAssetReaderSampleReferenceOutputInternal"
@"<AVAssetWriterDelegate>"
@"AVMediaFileType"
{CGAffineTransform="a"d"b"d"c"d"d"d"tx"d"ty"d}
@"AVAssetWriterHelper"
@"<AVAssetWriterFinishWritingDelegate>"
B40@0:8@16@24@?32
v32@0:8q16q24
@"AVAssetWriterInternal"
@24@0:8^{OpaqueFigAssetWriter=}16
^{OpaqueFigAssetWriter=}
@"AVFragmentedMediaDataReportInternal"
@40@0:8@16^{OpaqueFigAssetWriter=}24@32
v28@0:8B16@"NSError"20
B56@0:8@16{?=qiIq}24^@48
^{OpaqueFigAssetWriter=}16@0:8
@"AVAssetWriterFigAssetWriterNotificationHandler"
@"NSOperation"
B48@0:8@16@24^{opaqueCMFormatDescription=}32^@40
@"AVAssetWriterConfigurationState"
@"AVAssetWriterInputGroupInternal"
@28@0:8@16B24
^{opaqueCMFormatDescription=}16@0:8
^{OpaqueFigTimelineCoordinatorSuspension=}16@0:8
@"AVPlaybackCoordinator"
^{OpaqueFigTimelineCoordinatorSuspension=}
@36@0:8@16B24@28
@"NSUUID"
v24@0:8^{OpaqueFigTimelineCoordinatorSuspension=}16
v48@0:8^{OpaqueFigTimelineCoordinatorSuspension=}16{?=qiIq}24
v24@0:8^{OpaqueFigPlaybackCoordinator=}16
^{OpaqueFigPlaybackCoordinator=}16@0:8
v32@0:8@16^{OpaqueFigPlaybackCoordinator=}24
^{OpaqueFigPlaybackCoordinator=}
@"<AVPlayerPlaybackCoordinatorDelegate>"
@"<AVPlaybackCoordinationMediumDelegate>"
@"<AVOutputDeviceAuthorizationSessionDelegate>"
@"<AVOutputDeviceAuthorizationSessionImpl>"
B40@0:8@16@24@32
@"AVOutputDeviceAuthorizationSessionInternal"
@"<AVOutputDeviceAuthorizationRequestImpl>"
@"AVOutputDeviceAuthorizationRequestInternal"
v24@0:8^{opaqueCMFormatDescription=}16
v20@0:8s16
@"AVAssetWriterInputHelper"
@"AVAssetWriterInputPassDescriptionResponder"
@40@0:8@16@24^{opaqueCMFormatDescription=}32
^{__CVPixelBufferPool=}16@0:8
B40@0:8^{OpaqueFigAssetWriter=}16@24^@32
q32@0:8^{opaqueCMSampleBuffer=}16^@24
B24@0:8^{opaqueCMSampleBuffer=}16
B48@0:8^{__CVBuffer=}16{?=qiIq}24
@"AVAssetWriterInputInternal"
B40@0:8@16@24^@32
@"AVFigAssetWriterTrack"
@"AVAssetWriterInputMediaDataRequester"
^{__CVPixelBufferPool=}
@"AVAssetWriterInputPassDescription"
@"AVAssetWriterInputWritingHelper"
@"AVAssetWriterInputConfigurationState"
@"AVAssetWriterInputPixelBufferAdaptorInternal"
@76@0:8^{OpaqueFigAssetWriter=}16@24@32@40@48B56@60^@68
@68@0:8^{OpaqueFigAssetWriter=}16@24@32@40@48B56^@60
B32@0:8^{opaqueCMSampleBuffer=}16^@24
B56@0:8^{__CVBuffer=}16{?=qiIq}24^@48
i44@0:8@16@24B32^@36
@"NSOperationQueue"
@28@0:8^{OpaqueFigAssetWriter=}16i24
v32@0:8B16@20i28
@"AVAssetWriterInputPassDescriptionInternal"
^{CGColor=}
^{CGColor=}16@0:8
v24@0:8^{CGColor=}16
@"AVVideoCompositionInstructionInternal"
@"AVMutableVideoCompositionInstructionInternal"
v168@0:8{CGAffineTransform=dddddd}16{CGAffineTransform=dddddd}64{?={?=qiIq}{?=qiIq}}112:160
v88@0:8{CGAffineTransform=dddddd}16{?=qiIq}64
v160@0:8{CGAffineTransform=dddddd}16{CGAffineTransform=dddddd}64{?={?=qiIq}{?=qiIq}}112
B64@0:8{?=qiIq}16^{CGAffineTransform=dddddd}40^{CGAffineTransform=dddddd}48^{?={?=qiIq}{?=qiIq}}56
v80@0:8f16f20{?={?=qiIq}{?=qiIq}}24:72
v72@0:8f16f20{?={?=qiIq}{?=qiIq}}24
B64@0:8{?=qiIq}16^f40^f48^{?={?=qiIq}{?=qiIq}}56
v136@0:8{CGRect={CGPoint=dd}{CGSize=dd}}16{CGRect={CGPoint=dd}{CGSize=dd}}48{?={?=qiIq}{?=qiIq}}80:128
v72@0:8{CGRect={CGPoint=dd}{CGSize=dd}}16{?=qiIq}48
v128@0:8{CGRect={CGPoint=dd}{CGSize=dd}}16{CGRect={CGPoint=dd}{CGSize=dd}}48{?={?=qiIq}{?=qiIq}}80
B64@0:8{?=qiIq}16^{CGRect={CGPoint=dd}{CGSize=dd}}40^{CGRect={CGPoint=dd}{CGSize=dd}}48^{?={?=qiIq}{?=qiIq}}56
v72@0:8@16{?={?=qiIq}{?=qiIq}}24
@"AVVideoCompositionLayerInstructionInternal"
@"AVMutableVideoCompositionLayerInstructionInternal"
@"AVVideoCompositionCoreAnimationTool"
v24@0:8@"AVVideoCompositionRenderContext"16
v24@0:8@"AVAsynchronousVideoCompositionRequest"16
v24@0:8@"AVVideoCompositionRenderHint"16
B52@0:8r^^v16^@24@32B40^@44
B80@0:8@16{?={?=qiIq}{?=qiIq}}24@72
v24@0:8f16i20
@"AVVideoCompositionInternal"
v56@0:8@16@24^@32^@40^@48
@"AVMutableVideoCompositionInternal"
@"AVVideoCompositionCoreAnimationToolInternal"
@"CALayer"
^{OpaqueFigAssetExportSession=}
@"AVMetadataItemFilter"
v48@0:8@16@24@32@?40
{?=qiIq}32@0:8@16@24
q56@0:8@16{?=qiIq}24@48
@"AVAssetExportSessionInternal"
@"<AVMediaDataRequesterConsumer>"
v32@0:8@"NSDictionary"16@?<v@?@"AVOutputDeviceCommunicationChannel"@"NSError"@"NSString">24
v24@0:8@"AVOutputDevice"16
@32@0:8@16^{OpaqueAPSyncController=}24
v40@0:8^{__CFData=}16^{__CFString=}24^{__CFString=}32
v32@0:8^{__CFString=}16^{__CFString=}24
@"AVOutputDevice"
@40@0:8@16^{__CFString=}24^{OpaqueAPSyncController=}32
@"AVSynchronizedLayerInternal"
@"<AVOutputDeviceCommunicationChannelDelegate>"
@"<AVOutputDeviceCommunicationChannelManager>"
v32@0:8@?16@?24
@"AVOutputDeviceInternal"
d24@0:8@16
@"NSDictionary"24@0:8@"NSString"16
v32@0:8@"NSDictionary"16@"NSString"24
v24@0:8@"NSString"16
@36@0:8@16@24B32
@"AVOutputDeviceAuthorizedPeerInternal"
@52@0:8@16@24@32B40@44
@"AVPairedDeviceInternal"
@"<AVOutputDeviceCommunicationChannelImpl>"
@52@0:8@16@24q32B40@44
v24@0:8^{OpaqueCMTimebase=}16
B32@0:8^{OpaqueCMTimebase=}16^@24
i24@0:8^^{OpaqueFigVideoQueue}16
^{OpaqueFigVideoQueue=}16@0:8
i32@0:8^{opaqueCMSampleBuffer=}16^{?={CGRect={CGPoint=dd}{CGSize=dd}}{CGRect={CGPoint=dd}{CGSize=dd}}}24
v32@0:8^{opaqueCMSampleBuffer=}16^{?={CGRect={CGPoint=dd}{CGSize=dd}}{CGRect={CGPoint=dd}{CGSize=dd}}}24
v28@0:8B16@?20
v32@0:8B16@?20i28
i24@0:8^{OpaqueFigVideoQueue=}16
^{OpaqueFigVideoQueue=}
@"AVSampleBufferDisplayLayer"
^{__CFArray=}
@"AVMediaDataRequester"
@"AVSampleBufferRenderSynchronizer"
B44@0:8i16{?=qiIq}20
@24@0:8^{OpaqueFigMetadataReader=}16
@48@0:8@16@24@32@40
@56@0:8^{OpaqueFigMetadataReader=}16@24@32@40@48
v24@0:8^{OpaqueFigMetadataReader=}16
@24@0:8^{OpaqueFigEndpoint=}16
^{OpaqueFigEndpoint=}16@0:8
^{OpaqueFigEndpoint=}
@32@0:8^{OpaqueFigEndpoint=}16@24
@32@0:8^{__CFDictionary=}16Q24
^{__CFDictionary=}16@0:8
v24@0:8^{__CFDictionary=}16
@"NSURLSessionTaskMetrics"
v32@0:8@"NSURLSession"16@"NSError"24
v40@0:8@"NSURLSession"16@"NSURLAuthenticationChallenge"24@?<v@?q@"NSURLCredential">32
v24@0:8@"NSURLSession"16
v56@0:8@16@24@32@40@?48
v56@0:8@16@24q32q40q48
v48@0:8@"NSURLSession"16@"NSURLSessionTask"24@"NSURLRequest"32@?<v@?q@"NSURLRequest">40
v32@0:8@"NSURLSession"16@"NSURLSessionTask"24
v56@0:8@"NSURLSession"16@"NSURLSessionTask"24@"NSHTTPURLResponse"32@"NSURLRequest"40@?<v@?@"NSURLRequest">48
v48@0:8@"NSURLSession"16@"NSURLSessionTask"24@"NSURLAuthenticationChallenge"32@?<v@?q@"NSURLCredential">40
v40@0:8@"NSURLSession"16@"NSURLSessionTask"24@?<v@?@"NSInputStream">32
v56@0:8@"NSURLSession"16@"NSURLSessionTask"24q32q40q48
v40@0:8@"NSURLSession"16@"NSURLSessionTask"24@"NSURLSessionTaskMetrics"32
v40@0:8@"NSURLSession"16@"NSURLSessionTask"24@"NSError"32
v48@0:8@"NSURLSession"16@"NSURLSessionDataTask"24@"NSURLResponse"32@?<v@?q>40
v40@0:8@"NSURLSession"16@"NSURLSessionDataTask"24@"NSURLSessionDownloadTask"32
v40@0:8@"NSURLSession"16@"NSURLSessionDataTask"24@"NSURLSessionStreamTask"32
v40@0:8@"NSURLSession"16@"NSURLSessionDataTask"24@"NSData"32
v48@0:8@"NSURLSession"16@"NSURLSessionDataTask"24@"NSCachedURLResponse"32@?<v@?@"NSCachedURLResponse">40
v40@0:8^{__CFDictionary=}16Q24@32
i40@0:8^{__CFDictionary=}16Q24^B32
i24@0:8Q16
@24@0:8^{OpaqueFigAsset=}16
@"NSURLSession"
^{OpaqueFigCustomURLHandler=}
^{_CFURLConnection=}16@0:8
v24@0:8^{_CFURLConnection=}16
^{_CFURLConnection=}
^{__CFError=}
i32@0:8^{__CFDictionary=}16Q24
v32@0:8@16^{__CFError=}24
B40@0:8@16^{_CFURLRequest=}24^{_CFURLResponse=}32
v32@0:8@16^{_CFURLResponse=}24
v32@0:8@16^{__CFData=}24
i56@0:8^{__CFDictionary=}16Q24q32@40^{OpaqueFigCustomURLHandler=}48
i40@0:8^{__CFDictionary=}16Q24*32
@"AVAudioMixInternal"
@"AVMutableAudioMixInternal"
r^{opaqueMTAudioProcessingTap=}16@0:8
v80@0:8f16f20{?={?=qiIq}{?=qiIq}}24q72
B72@0:8{?=qiIq}16^f40^f48^{?={?=qiIq}{?=qiIq}}56^q64
@"AVAudioMixInputParametersInternal"
@"AVMutableScheduledAudioParameters"
@"AVAudioMixEffectParameters"
@"AVMutableAudioMixInputParametersInternal"
@96@0:8@16{?=qiIq}24{?=qiIq}48{?=qiIq}72
@"<AVOutputContextImpl>"
@"<AVOutputContextCommunicationChannelDelegate>"
B24@0:8^i16
B32@0:8@16Q24
@"AVOutputContextInternal"
@"<AVOutputContextCommunicationChannelImpl>"
@"AVOutputContextCommunicationChannelInternal"
@"AVOutputContextDestinationChangeInternal"
@"<AVOutputContextManagerImpl>"
@"AVOutputContextManagerInternal"
@24@0:8^{__CFRunLoop=}16
^{__CFRunLoop=}16@0:8
^{__CFRunLoopSource=}16@0:8
v24@0:8^{__CFRunLoopSource=}16
^{__CFRunLoop=}
^{__CFRunLoopSource=}
@24@0:8^{OpaqueFigFormatReader=}16
v24@0:8^{OpaqueFigFormatReader=}16
^v24@0:8^{__CFString=}16
@32@0:8^{OpaqueFigPlaybackItem=}16@24
@"AVScheduledAudioParametersInternal"
@"AVMutableScheduledAudioParametersInternal"
B48@0:8q16@24^q32^@40
v32@0:8^@16^@24
v32@0:8@?16@24
^{OpaqueConcurrentAccessDetector=}
^{OpaqueFigSimpleMutex=}16@0:8
^{OpaqueFigFormatReader=}24@0:8^i16
B28@0:8q16i24
v48@0:8@16@24@32@40
@56@0:8@16Q24@32@40@48
@32@0:8^{OpaqueFigAsset=}16@24
q40@0:8@16^{OpaqueFigAsset=}24^@32
q40@0:8@16^@24^@32
@"AVRoutingSessionManagerInternal"
@"AVRoutingSessionInternal"
@"AVRoutingSessionDestinationInternal"
^{OpaqueFigSampleCursorService=}24@0:8^B16
^{OpaqueFigTrackReader=}
^{OpaqueFigSampleCursorService=}
^{OpaqueFigSampleGenerator=}
v32@0:8^{opaqueCMSampleBuffer=}16@?24
@32@0:8@16^{OpaqueCMTimebase=}24
^{opaqueCMSampleBuffer=}24@0:8@16
@"AVSampleBufferGeneratorInternal"
@"AVSampleCursor"
@"AVSampleBufferRequestInternal"
@"AVAssetSegmentReportSampleInformation"
^v24@0:8@16
@"AVPlayerItemMediaDataCollectorInternal"
@24@0:8^{opaqueCMNotificationCenter=}16
^{opaqueCMNotificationCenter=}16@0:8
v52@0:8@16^?24^{__CFString=}32^v40I48
v48@0:8@16^?24^{__CFString=}32^v40
@48@0:8@16^?24^{__CFString=}32^v40
^{opaqueCMNotificationCenter=}
@48@0:8@16^?24@32^v40
v24@0:8@?<v@?>16
@"NSCondition"
{os_unfair_lock_s="_os_unfair_lock_opaque"I}
@"AVAssetTrackGroupInternal"
^{opaqueCMSampleBuffer=}
@72@0:8@16{?={?=qiIq}{?=qiIq}}24
@24@0:8^{opaqueCMSampleBuffer=}16
@"AVTimedMetadataGroupInternal"
^{opaqueCMSampleBuffer=}32@0:8^{opaqueCMFormatDescription=}16^@24
@"AVDateRangeMetadataGroupInternal"
@32@0:8@16B24B28
@"AVManagedAssetCacheInternal"
^{CMBaseObject=}
@"AVAssetDownloadCacheInternal"
@100@0:8@16@24@32q40f48{?=qiIq}52{?=qiIq}76
@"AVDelegatingPlaybackCoordinator"
@"AVCoordinatedPlaybackParticipant"
@60@0:8@16@24@32q40f48@52
@56@0:8@16@24@32q40B48f52
@92@0:8@16@24@32q40{?=qiIq}48B72B76f80@84
v28@0:8f16Q20
v48@0:8{?=qiIq}16Q40
v32@0:8@16^{OpaqueCMTimebase=}24
^{OpaqueFigTimelineCoordinator=}
@"<AVPlaybackCoordinatorPlaybackControlDelegate>"
@"AVPlayerItemAccessLogInternal"
@"AVPlayerItemAccessLogEventInternal"
@32@0:8@16d24
@"AVFragmentedMovieTrackInternal"
@"AVPlayerItemErrorLogInternal"
@"AVPlayerItemErrorLogEventInternal"
@"AVExternalPlaybackMonitorInternal"
@"<AVAudioSessionDelegateMediaPlayerOnly>"
B36@0:8B16q20^@28
@"AVAudioSessionMediaPlayerOnlyInternal"
@"AVMediaSelectionGroupInternal"
@44@0:8@16@24@32B40
@"AVMediaSelectionOption"
@"AVMediaSelectionOptionInternal"
{?=qiIq}48@0:8^{__CFString=}16{?=qiIq}24
{?=qiIq}24@0:8^{__CFString=}16
{?={?=qiIq}{?=qiIq}}24@0:8^{__CFString=}16
f28@0:8^{__CFString=}16f24
f24@0:8^{__CFString=}16
s24@0:8^{__CFString=}16
i24@0:8^{__CFString=}16
q24@0:8^{__CFString=}16
C24@0:8^{__CFString=}16
{CGSize=dd}40@0:8^{__CFString=}16{CGSize=dd}24
{CGAffineTransform=dddddd}24@0:8^{__CFString=}16
Q24@0:8@16
Q32@0:8@16^@24
@32@0:8@16^{opaqueCMFormatDescription=}24
^{__CFString=}24@0:8@16
B32@0:8@"AVAudioOutputSettings"16^@24
B32@0:8@"AVVideoOutputSettings"16^@24
v36@0:8^{AudioStreamBasicDescription=dIIIIIIII}16I24^{opaqueCMFormatDescription=}28
^{AudioChannelLayout=III[1{AudioChannelDescription=II[3f]}]}32@0:8^{opaqueCMFormatDescription=}16^Q24
v48@0:8@16^@24^@32^@40
B48@0:8@16@24@32^@40
v56@0:8{AudioStreamBasicDescription=dIIIIIIII}16
f28@0:8f16q20
I28@0:8I16q20
{AudioStreamBasicDescription="mSampleRate"d"mFormatID"I"mFormatFlags"I"mBytesPerPacket"I"mFramesPerPacket"I"mBytesPerFrame"I"mChannelsPerFrame"I"mBitsPerChannel"I"mReserved"I}
^{OpaqueAudioConverter=}
@32@0:8d16d24
@32@0:8{AudioValueRange=dd}16
@"AVAssetDownloadSessionInternal"
v32@0:8Q16Q24
i24@0:8^{OpaqueFigAsset=}16
^{OpaqueFigAsset=}24@0:8@16
^{OpaqueFigSampleCursor=}
@24@0:8^{OpaqueFigSampleCursor=}16
^{OpaqueFigSampleCursor=}16@0:8
q24@0:8q16
{?=qiIq}48@0:8{?=qiIq}16^B40
^{opaqueCMSampleBuffer=}24@0:8^@16
^{opaqueCMSampleBuffer=}32@0:8@16^@24
{?=BBB}16@0:8
{?=BBBBBB}16@0:8
{?=Bq}16@0:8
{?=qq}16@0:8
{?=qBBB}16@0:8
@"AVSampleCursorInternal"
{?=qiIq}24@0:8d16
{?=qiIq}24@0:8q16
@"AVPlayerItemOutputInternal"
^{__CVBuffer=}52@0:8{?=qiIq}16B40^{?=qiIq}44
@"AVPlayerItemVideoOutputInternal"
@"AVFragmentedAssetInternal"
v28@0:8d16B24
@"AVFragmentedAssetMinderInternal"
@"AVFragmentedAssetTrackInternal"
v44@0:8@16{CGSize=dd}24B40
{CGRect={CGPoint=dd}{CGSize=dd}}32@0:8{CGSize=dd}16
@"AVSampleBufferDisplayLayerInternal"
{CGRect="origin"{CGPoint="x"d"y"d}"size"{CGSize="width"d"height"d}}
@"AVSampleBufferVideoRenderer"
@"AVSampleBufferVideoOutput"
@48@0:8@16Q24Q32Q40
@"NSObject<OS_xpc_object>"
:16@0:8
@"AVWeakReference"16@0:8
@48@0:8@16@24^{__CFDictionary=}32Q40
@64@0:8@16@24q32@40@48@56
^{OpaqueFigCustomURLLoader=}
@"AVAssetCustomURLBridgeForNSURLSession"
^{OpaqueFigCustomURLHandler=}16@0:8
^{OpaqueFigCustomURLLoader=}16@0:8
v52@0:8:16@24B32@36@?44
v32@0:8^{__CFDictionary=}16Q24
v44@0:8@16@24B32@?36
v40@0:8^{__CFDictionary=}16Q24^B32
v24@0:8^{OpaqueFigCustomURLHandler=}16
@"AVAssetResourceLoaderInternal"
v48@0:8@16q24@32@40
v32@0:8@"NSURLCredential"16@"NSURLAuthenticationChallenge"24
v24@0:8@"NSURLAuthenticationChallenge"16
@"AVAssetResourceLoadingContentInformationRequestInternal"
@48@0:8@16q24q32B40B44
@"AVAssetResourceLoadingDataRequestInternal"
@"NSMutableURLRequest"
@"NSURLResponse"
@"NSURLRequest"
@"NSMutableData"
@"AVAssetResourceLoadingContentInformationRequest"
@"AVAssetResourceLoadingDataRequest"
^{OpaqueFigCPECryptor=}
@"AVAssetResourceLoadingRequestor"
@40@0:8@16^{__CFDictionary=}24Q32
@80@0:8@16@24@32@40@48@56^{OpaqueFigCPECryptor=}64Q72
@52@0:8@16@24@32B40^@44
@48@0:8@16@24@32^@40
@"AVAssetResourceLoadingRequestInternal"
@"AVAssetResourceLoadingRequestorInternal"
^{OpaqueFigSampleBufferRenderSynchronizer=}
B76@0:8f16{?=qiIq}20{?=qiIq}44^@68
i68@0:8f16{?=qiIq}20{?=qiIq}44
@"AVSampleBufferRenderSynchronizerInternal"
@?24@0:8@16
v40@0:8@16@?24@32
@48@0:8@16{?=qiIq}24
B56@0:8@16{?=qiIq}24@?48
v56@0:8@16{?=qiIq}24@?48
^{OpaqueFigSampleBufferRenderSynchronizer=}40@0:8r^{__CFAllocator=}16r^{__CFDictionary=}24^@32
@"FigAlternateObjC"
@"AVAssetVariantVideoAttributes"
@"AVAssetVariantAudioAttributes"
@24@0:8^{OpaqueFigAlternate=}16
^{OpaqueFigAlternate=}16@0:8
@40@0:8q16@24Q32
@"NSPredicate"
@"AVAssetVariant"
v32@0:8@16Q24
@"NSPredicateOperator"
@"AVTextStyleRuleInternal"
@56@0:8@16@24@32@40B48B52
@56@0:8@16@24@32@40q48
^{__CVBuffer=}16@0:8
v24@0:8^{__CVBuffer=}16
@"AVAsynchronousVideoCompositionRequest"
@"CIImage"
^{__CVBuffer=}
@56@0:8@16^{__CVBuffer=}24@?32@?40@?48
@"AVAsynchronousCIImageFilteringRequestInternal"
@80@0:8{?={?=qiIq}{?=qiIq}}16@64@?72
@"NSObject<OS_dispatch_group>"
@"CIContext"
@"<AVPlayerItemOutputHost>"24@0:8@"AVPlayerItem"16
@"<AVPlayerItemLegibleOutputDependencyFactory>"
v56@0:8@16@24{?=qiIq}32
@"AVPlayerItemLegibleOutputInternal"
@"<AVOutputSettingsAssistantBaseSettingsProvider>"
@"<AVOutputSettingsAssistantVideoSettingsAdjuster>"
@"AVOutputSettingsAssistantInternal"
q36@0:8^{opaqueCMFormatDescription=}16f24@28
q36@0:8^{opaqueCMFormatDescription=}16f24@"NSDictionary"28
@"NSDictionary"32@0:8@"NSArray"16@"NSDictionary"24
B24@0:8@"NSString"16
@"AVMediaSelectionInternal"
@"AVExternalDeviceHIDInternal"
@"AVExternalDeviceIconInternal"
@"<AVExternalDeviceDelegate>"
@"AVExternalDevice"
@"AVExternalDeviceInternal"
@"AVPlayerLayerIntermediateLayer"
@"NSSet"
v32@0:8@"<AVVideoCompositing>"16@"NSException"24
^{OpaqueFigVideoCompositor=}16@0:8
v32@0:8^{OpaqueFigVideoCompositorFrame=}16^{__CVBuffer=}24
v32@0:8^{OpaqueFigVideoCompositorFrame=}16@24
v24@0:8^{OpaqueFigVideoCompositorFrame=}16
^{OpaqueFigVideoCompositor=}
@"<AVVideoCompositing>"
@"AVVideoCompositionRenderContext"
i72@0:8^{OpaqueFigVideoCompositorFrame=}16{?=qiIq}24@48@56^v64
i112@0:8{?=qiIq}16{?=qiIq}40{?=qiIq}64{?=qiIq}88
i120@0:8{?=qiIq}16{?=qiIq}40{?=qiIq}64{?=qiIq}88q112
@24@0:8f16i20
@"AVDisplayCriteriaInternal"
@48@0:8@16@24Q32@?40
@"AVCallbackContextRegistry"
@?32@0:8@16@?24
v24@0:8@"NSDictionary"16
@"NSObject"16@0:8
@64@0:8@16@24@32@40Q48@?56
@"NSObject<AVWeakObservable>"
@56@0:8@16@24@32Q40^v48
v32@0:8@"NSString"16@"AVTwoPartKeyPath"24
@"AVWeakObservableCallbackCancellationHelper"
@"AVKVODispatcher"
@"AVTwoPartKeyPath"
@"<AVKVOIntrospection><AVCallbackCancellation>"
^{OpaqueFigVideoCompositorFrame=}16@0:8
^{OpaqueFigVideoCompositorFrame=}
@"<AVVideoCompositionInstruction>"
^{__CVBuffer=}20@0:8i16
^{opaqueCMSampleBuffer=}20@0:8i16
@"AVAsynchronousVideoCompositionRequestInternal"
@88@0:8@16@24^{OpaqueFigVideoCompositorFrame=}32{?=qiIq}40@64@72@80
@"AVOutputDeviceDiscoverySession"
@"AVRouteDetectorInternal"
{?="horizontalSpacing"q"verticalSpacing"q}
{?="left"d"top"d"right"d"bottom"d}
{?="width"i"height"i}
{?=dddd}16@0:8
@"AVVideoCompositionRenderContextInternal"
@48@0:8^{OpaqueFigVideoCompositor=}16@24@32^{__CVPixelBufferPool=}40
B24@0:8^{OpaqueFigVideoCompositor=}16
B24@0:8^{__CVBuffer=}16
@24@0:8^{OpaqueFigVideoCompositor=}16
@"AVMediaDataStorageInternal"
@48@0:8^{OpaqueFigFormatReader=}16@24@32@40
^{OpaqueFigMutableMovie=}24@0:8^{OpaqueFigFormatReader=}16
@"AVMovieInternal"
^{OpaqueFigMutableMovie=}24@0:8@16
B48@0:8@16@24Q32^@40
@"AVMutableMovieInternal"
^{opaqueCMSampleBuffer=}28@0:8i16^I20
v24@0:8i16i20
@"AVPlayerItemSampleBufferOutputInternal"
v32@0:8@16^{OpaqueFigPlaybackItem=}24
@"AVContentKeySession"
@"AVContentKeyReportGroup"
@"AVContentKeySpecifier"
@"AVContentKey"
i36@0:8^{OpaqueFigCPECryptor=}16B24^Q28
@52@0:8@16@24@32Q40i48
@76@0:8@16@24@32@40@48@56@64B72
@72@0:8@16@24^{OpaqueFigCustomURLHandler=}32@40^{__CFDictionary=}48Q56B64B68
^{OpaqueFigCPECryptor=}16@0:8
B32@0:8^{opaqueCMFormatDescription=}16^@24
@"AVContentKeyRequestInternal"
@"AVContentKeyResponseInternal"
@"NSMapTable"
^{OpaqueFigSecureStopManager=}32@0:8@16@24
@"AVContentKeySessionInternal"
v40@0:8@16@24Q32
@32@0:8@16Q24
v28@0:8@?16B24
i24@0:8@16
v32@0:8@16:24
v52@0:8^{OpaqueFigCustomURLHandler=}16@24^{__CFDictionary=}32Q40B48
v44@0:8@16@24@32B40
v40@0:8^{__CFDictionary=}16Q24^{OpaqueFigCustomURLHandler=}32
r^{OpaqueFigCPECryptor=}24@0:8@16
r^{OpaqueFigCPECryptor=}40@0:8@16^{opaqueCMFormatDescription=}24^@32
^{OpaqueFigCPECryptor=}24@0:8@16
v48@0:8^{__CFDictionary=}16Q24^{OpaqueFigCustomURLHandler=}32^B40
i32@0:8@16^^{OpaqueFigCustomURLHandler}24
@48@0:8@16@24^{opaqueCMFormatDescription=}32@40
@56@0:8@16@24@32@40@48
^{OpaqueFigContentKeySession=}
r^{OpaqueFigCPECryptor=}56@0:8@16@24^{opaqueCMFormatDescription=}32@40^@48
r^{OpaqueFigCPECryptor=}32@0:8@16@24
r^{OpaqueFigContentKeySession=}16@0:8
I32@0:8^{OpaqueFigCPECryptor=}16@24
@32@0:8@16^{OpaqueFigCPECryptor=}24
@32@0:8^{__CFString=}16^{OpaqueAPSyncController=}24
@32@0:8^{__CFString=}16^{__CFString=}24
v024
f024
ARGB
024x
02fx
