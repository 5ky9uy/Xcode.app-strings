@(#)PROGRAM:notifyutil  PROJECT:Libnotify-279
<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE plist PUBLIC "-//Apple//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd">
<plist version="1.0">
<dict>
<key>com.apple.private.libnotify.statecapture</key>
<true/>
</dict>
</plist>
Watch Q
-help
timer value must be supplied following -z
-z %s is invalid
timer value must be an integer
-port
-file
-sig
-signal
-signal %s is invalid
signals must be specified as integer values
-dispatch
-check
-plain
name required following -p
name required following %s
name required following -g
name required following -s
value required following -s name
value following -s name must be a 64-bit integer
--dump
unrecognized option: %s
%s: Failed with code %d
Can't allocate memory!
%s %llu
v8@?0
[%d]
%llu
%d.%s
: Failed with code %d
unknown
port
file
dispatch
signal
check
plain
v12@?0i8
SIGNAL %u
/var/run/notifyd.status
Notifyd dump success! New file created at /var/run/notifyd.status
Notifyd dump failed with %x
usage: %s [-q] [-v] [-z msec] [-M] [-R] [command ...]
    -q             quiet mode
    -v             verbose - prints time, key, state value, and type
    -z msec        pause msec milliseconds after posting [default 100]
    -M             multiplex notifications from notifyd over a single mach port
    -R             regenerate registrations if notifyd restarts
commands:
    -port          switch to mach port for subsequent registrations [default]
    -file          switch to file descriptor for subsequent registrations
    -check         switch to shared memory for subsequent registrations
    -signal [#]    switch to signal [#] for subsequent registrations
                   initial default for signal is 1 (SIGHUP)
    -dispatch      switch to dispatch for subsequent registrations
    -p key         post a notification for key
    -w key         register for key and report notifications
    -# key         (# is an integer value, eg "-1") register for key and report # notifications
    -g key         get state value for key
    -s key val     set state value for key
    --dump         dumps metadata to a file in /var/run/
