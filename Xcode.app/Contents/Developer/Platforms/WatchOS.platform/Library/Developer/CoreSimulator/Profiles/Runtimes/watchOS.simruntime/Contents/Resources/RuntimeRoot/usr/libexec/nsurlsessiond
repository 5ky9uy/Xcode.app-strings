@(#)PROGRAM:nsurlsessiond  PROJECT:CFNetwork-1098.6
fffff*
<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE plist PUBLIC "-//Apple//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd">
<plist version="1.0">
<dict>
<key>BuildMachineOSBuild</key>
<string>18A391011</string>
<key>CFBundleExecutable</key>
<string>nsurlsessiond</string>
<key>CFBundleIdentifier</key>
<string>com.apple.nsurlsessiond</string>
<key>CFBundleInfoDictionaryVersion</key>
<string>6.0</string>
<key>CFBundleName</key>
<string>nsurlsessiond</string>
<key>CFBundlePackageType</key>
<string>APPL</string>
<key>CFBundleShortVersionString</key>
<string>1098.6</string>
<key>CFBundleSupportedPlatforms</key>
<array>
<string>WatchSimulator</string>
</array>
<key>CFBundleVersion</key>
<string>1098.6</string>
<key>DTCompiler</key>
<string>com.apple.compilers.llvm.clang.1_0</string>
<key>DTPlatformBuild</key>
<string>11L374m</string>
<key>DTPlatformName</key>
<string>watchsimulator</string>
<key>DTPlatformVersion</key>
<string>6.0</string>
<key>DTSDKBuild</key>
<string>17R573</string>
<key>DTSDKName</key>
<string>watchsimulator6.0.internal</string>
<key>DTXcode</key>
<string>1100</string>
<key>DTXcodeBuild</key>
<string>11L374m</string>
<key>MinimumOSVersion</key>
<string>6.0</string>
<key>NSAppTransportSecurity</key>
<dict>
<key>NSAllowsArbitraryLoads</key>
<true/>
</dict>
<key>UIDeviceFamily</key>
<array>
<integer>4</integer>
</array>
</dict>
</plist>
<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE plist PUBLIC "-//Apple//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd">
<plist version="1.0">
<dict>
<key>application-identifier</key>
<string>com.apple.nsurlsessiond</string>
<key>com.apple.carousel.defaulturlsessionpolicy</key>
<true/>
<key>com.apple.coreduetd.allow</key>
<true/>
<key>com.apple.duet.activityscheduler.allow</key>
<true/>
<key>com.apple.frontboard.launchapplications</key>
<true/>
<key>com.apple.mobile.keybagd.UserManager.sync</key>
<true/>
<key>com.apple.multitasking.systemappassertions</key>
<true/>
<key>com.apple.networkd.configure_connection_pool</key>
<true/>
<key>com.apple.networkd.join_connection_pool</key>
<true/>
<key>com.apple.networkd.set_account_identifier</key>
<true/>
<key>com.apple.networkrelay.companionLink.isEnabled</key>
<true/>
<key>com.apple.private.CacheDelete</key>
<array>
<string>CLIENT_ENTITLEMENT</string>
<string>PURGEABLE_ENTITLEMENT</string>
<string>PURGE_ENTITLEMENT</string>
<string>CANCEL_PURGE_ENTITLEMENT</string>
<string>SERVICE_ENTITLEMENT</string>
</array>
<key>com.apple.private.InstallCoordination.allowed</key>
<true/>
<key>com.apple.private.MobileContainerManager.allowed</key>
<true/>
<key>com.apple.private.MobileContainerManager.userManagedAssets</key>
<true/>
<key>com.apple.private.accounts.allaccounts</key>
<true/>
<key>com.apple.private.accounts.bundleidspoofing</key>
<true/>
<key>com.apple.private.dark-wake-network-reachability</key>
<true/>
<key>com.apple.private.ids.messaging</key>
<array>
<string>com.apple.private.alloy.nsurlsessionproxy</string>
</array>
<key>com.apple.private.ids.messaging.high-priority</key>
<array>
<string>com.apple.private.alloy.nsurlsessionproxy</string>
</array>
<key>com.apple.private.ids.nearby</key>
<true/>
<key>com.apple.private.ids.prefer-infrawifi</key>
<array>
<string>com.apple.private.alloy.nsurlsessionproxy</string>
</array>
<key>com.apple.private.ids.self-session</key>
<array>
<string>com.apple.private.alloy.nsurlsessionproxy</string>
</array>
<key>com.apple.private.network.interface-control</key>
<true/>
<key>com.apple.private.network.socket-delegate</key>
<true/>
<key>com.apple.private.nsurlsession-allow-override-connection-pool</key>
<true/>
<key>com.apple.private.nsurlsession.impersonate</key>
<true/>
<key>com.apple.private.nsurlsession.set-task-priority</key>
<true/>
<key>com.apple.rootless.storage.com.apple.MobileAsset.DuetExpertCenterAsset</key>
<true/>
<key>com.apple.rootless.storage.nsurlsessiond</key>
<true/>
<key>com.apple.security.exception.mach-lookup.global-name</key>
<array>
<string>com.apple.nano.nanoregistry.paireddeviceregistry</string>
<string>com.apple.terminusd</string>
<string>com.apple.awdd</string>
</array>
<key>com.apple.security.network.client</key>
<true/>
<key>com.apple.telephony.cupolicy-monitor-access</key>
<true/>
<key>com.apple.usermanagerd.persona.background</key>
<true/>
<key>com.apple.wifi.manager-access</key>
<true/>
<key>seatbelt-profiles</key>
<array>
<string>nsurlsessiond</string>
</array>
</dict>
</plist>
__CFN_DiskMetricsCollector
PDURLSessionProxyOpenSocket
NSCopying
NDPowerlogReporter
PDURLSessionProxyDidReceiveChallengeReply
PDURLSessionProxyCreateSession
PDURLSessionProxyClient
NSURLSessionDelegate_Internal
NSURLSessionDelegate
NSObject
NSURLSessionDataDelegatePrivate
NSURLSessionDataDelegate
NSURLSessionTaskDelegate
NDBackgroundSessionProtocol
nsurlsessiond_Additions
PDURLSessionProxySetTaskPriority
PDURLSessionProxyMessageInfo
PDURLSessionProxyService
IDSServiceDelegate
PDURLSessionProxyDataTaskWithRequestReply
PDURLSessionProxyDataTaskWithRequest
PDURLSessionProxyGetAuthHeaders
NDSessionManager
NDBackgroundSessionDelegate
NDBackgroundSessionManagerProtocol
NDBackgroundSession
NDCredentialStorageDelegate
NSURLSessionDownloadDelegate_Private
NSURLSessionTaskDelegatePrivate
NSURLSessionDownloadDelegate
NSURLSessionDataDelegate_Internal
NDCallbackQueueDelegate
NDApplicationObserver
PDURLSessionProxyStartedUp
PDURLSessionProxyGetAuthHeadersReply
PDURLSessionProxyClientService
NSXPCListenerDelegate
PDURLSessionProxyDidReceiveData
PDURLSessionProxyDidReceiveResponse
PDURLSessionProxyResumeTask
PDURLSessionProxySetTaskDescription
NDStatusMonitor
NDUserEventAgentConnection
NSCoding
NSSecureCoding
PDURLSessionProxyCommon
NSURLSessionProxyAdditions
PDURLSessionProxySocketDisconnected
NDFileUtilities
PDURLSessionProxyOpenSocketReply
PDURLSessionProxyResponse
NDApplication
NDWatchKitExtension
NDSpringBoardApplication
NDSpringBoardAppObserver
PDURLSessionProxyDidReceiveResponseReply
PDURLSessionProxyWillPerformRedirectionReply
PDURLSessionProxyRequest
PDURLSessionProxyCredential
PDURLSessionProxyTaskWaiting
PDURLSessionProxyDidReceiveDataReply
PDURLSessionProxySuspendTask
PDURLSessionProxyInvalidateSession
PDURLSessionProxyClientManager
PDURLSessionProxyClientDelegate
NDCredentialStorage
PDURLSessionProxyWillSendRequest
PDURLSessionProxyOpenBodyStream
PDURLSessionProxyDidSendBodyData
PDURLSessionProxyCancelTask
PDURLSessionProxyTaskMessage
NDTaskMonitor
PDURLSessionProxyDidReceiveChallenge
PDURLSessionProxyError
Daemon
NDSessionManagerDelegate
LSApplicationWorkspaceObserverProtocol
PDURLSessionProxyUploadBodyData
NDSpringBoard
PDURLSessionProxySessionMessage
PDURLSessionProxyTaskWillBeRetried
PDURLSessionProxyConnectedToServer
PDURLSessionProxyAuthChallenge
SZExtractor
PendingCallback
NDCallbackQueue
PDURLSessionProxySessionBecameInvalid
DummyQueue
PDURLSessionProxyTaskCompleted
PDURLSessionProxyWillPerformRedirection
stageURL
T@"NSURL",&,N,V_stageURL
reportHandler
T@?,C,N,V_reportHandler
diskUsage
T@"NSMutableDictionary",&,N,V_diskUsage
lastSubmissionDate
T@"NSDate",&,N,V_lastSubmissionDate
lastSaveDate
T@"NSDate",&,N,V_lastSaveDate
metricsQueue
T@"NSObject<OS_dispatch_queue>",&,N,V_metricsQueue
reportTimeInterval
Td,V_reportTimeInterval
stageTimeInterval
Td,V_stageTimeInterval
cachedDiskUsage
com.apple.CFNetwork.DiskMetrics
hasSession
TB,R,N
session
T@"PDURLSessionProxySessionMessage",&,N,V_session
hasSocketUUID
socketUUID
T@"NSString",&,N,V_socketUUID
hasHost
host
T@"NSString",&,N,V_host
hasPort
TB,N
port
TI,N,V_port
%@ %@
hasTask
task
T@"PDURLSessionProxyTaskMessage",&,N,V_task
hasDisposition
disposition
Ti,N,V_disposition
hasCredential
credential
T@"PDURLSessionProxyCredential",&,N,V_credential
(unknown: %i)
RejectProtectionSpace
CancelAuthenticationChallenge
PerformDefaultHandling
UseCredential
hasConfiguration
configuration
T@"NSData",&,N,V_configuration
hasSupportsRedirects
supportsRedirects
TB,N,V_supportsRedirects
hasDelegateImplementsWillSendRequest
delegateImplementsWillSendRequest
TB,N,V_delegateImplementsWillSendRequest
hasDelegateImplementsSessionAuthChallenge
delegateImplementsSessionAuthChallenge
TB,N,V_delegateImplementsSessionAuthChallenge
hasDelegateImplementsTaskAuthChallenge
delegateImplementsTaskAuthChallenge
TB,N,V_delegateImplementsTaskAuthChallenge
hasDelegateImplementsWillPerformRedirection
delegateImplementsWillPerformRedirection
TB,N,V_delegateImplementsWillPerformRedirection
hasDelegateImplementsDidReceiveResponse
delegateImplementsDidReceiveResponse
TB,N,V_delegateImplementsDidReceiveResponse
delegate
T@"<PDURLSessionProxyClientDelegate>",R,V_delegate
identifier
T@"NSString",R
_networkPolicyEffectiveBundleIdentifier
T@"NSString",C,V__networkPolicyEffectiveBundleIdentifier
hash
TQ,R
superclass
T#,R
description
T@"NSString",R,C
debugDescription
-[PDURLSessionProxyClient releaseWiFi]
/BuildRoot/Library/Caches/com.apple.xbs/Sources/nsnetworkd_Sim/CFNetwork-1098.6/nsurlsessiond/SessionProxy/PDURLSessionProxyClient.mm
_isRetainingWiFi
-[PDURLSessionProxyClient retainWiFi]
!_isRetainingWiFi
v24@?0@"PBCodable"8@"NSError"16
DisallowCellularDueToSystemPolicy
_kCFNetworkATSClientID
mediaserverd
com.apple.WebKit
com.apple.private.nsurlsession.set-max-watch-cell-transfer-size
com.apple.private.network.socket-delegate
effectiveConfig
_kCFNetworkProxySessionNeedsNewBodyStreamSignal
v20@?0i8@"NSError"12
com.apple.cloudd
com.apple.cloudkit.cloudd
NSURLSessionDelegateImplementsDidReceiveResponseKey
v12@?0i8
v24@?0B8@"NSObject<OS_dispatch_data>"12i20
v32@?0@"NSNumber"8@"NSMutableArray"16^B24
Task <?>.<%lu>
Task <%@>.<%lu>
Session <%@>
NSURLSessionDelegateImplementsWillPerformRedirectionKey
NSURLSessionDelegateImplementsTaskAuthChallengeKey
NSURLSessionDelegateImplementsSessionAuthChallengeKey
NSURLSessionDelegateImplementsWillSendRequestForEstablishedConnectionKey
%@|%@
%02x
_nsurlsessiondErrorDomain
_unsafe
com.apple.nsurlsessiond
background
proxy
--privileged
--postlogoutsync
hasPriority
priority
TI,N,V_priority
message
T@"PBCodable",C,V_message
type
TS,V_type
queue
T@"NSObject<OS_dispatch_queue>",&,V_queue
connected
TB,GisConnected,V_connected
launchUUID
T@"NSString",&,V_launchUUID
v16@?0@"PBCodable"8
IDSSendMessageOptionMetricReportIdentifier
NSURLSessionProxyClientBundleIdentifier
com.apple.private.alloy.nsurlsessionproxy
com.apple.nsurlsessiond.NSURLSessionProxyService-Queue
hasTaskInfo
taskInfo
T@"NSData",&,N,V_taskInfo
hasOriginalRequest
originalRequest
T@"PDURLSessionProxyRequest",&,N,V_originalRequest
hasCurrentRequest
currentRequest
T@"PDURLSessionProxyRequest",&,N,V_currentRequest
hasTaskSequenceNumber
taskSequenceNumber
TQ,N,V_taskSequenceNumber
hasResponse
response
T@"PDURLSessionProxyResponse",&,N,V_response
.tmp
CFNetworkDownload_
TMPDIR
/tmp/
com.apple.nsurlsessiond-cachedelete
^{__CFDictionary=}20@?0i8^{__CFDictionary=}12
q24@?0@"NSDate"8@"NSDate"16
CACHE_DELETE_AMOUNT
CACHE_DELETE_VOLUME
xpcConn
T@"NSXPCConnection",W,V_xpcConn
T@"<NDSessionManagerDelegate>",W,V_delegate
isSpringBoardApp
TB,V_isSpringBoardApp
obliterationCompletion
T@?,C,V_obliterationCompletion
options.plist
configuration.plist
NDBackgroundSessionManagerRestoredStateKeyTLSSessionCachePrefix
NDBackgroundSessionManagerKeySessionUUID
NDBackgroundSessionManagerRestoredStateKeyTasks
kNSURLSessionImmediateInvalidationErrorKey
kNSURLSessionThrowImmediateAVExceptionKey
com.apple.security.application-groups
com.apple.private.nsurlsession.allow-duet-preauthorization
com.apple.private.nsurlsession-allow-override-connection-pool
com.apple.private.dark-wake-network-reachability
com.apple.private.nsurlsession.allow-discretionary-cellular
com.apple.private.nsurlsession.impersonate
Holding boost for %@
com.apple.OTACrashCopier
downloadDirectoryPath.plist
sessions.plist
com.apple.nsurlsessiond.session-manager
com.apple.nsurlsessiond.session-archive-queue
T@"<NDBackgroundSessionDelegate>",W,V_delegate
uuid
T@"NSUUID",R,V_uuid
T@"NSString",R,V_identifier
clientBundleID
T@"NSString",R,V_clientBundleID
monitoredAppBundleID
T@"NSString",R,V_monitoredAppBundleID
secondaryID
T@"NSString",R,V_secondaryID
invalidateReply
T@?,C,V_invalidateReply
sharedContainerIdentifier
T@"NSString",C,V_sharedContainerIdentifier
v32@?0@"NSNumber"8@"__NSCFLocalSessionTask"16^B24
__NSCFURLLocalSessionConnection
no longer
v16@?0q8
trailers
v16@?0@"NSURLRequest"8
NSURLAuthenticationMethodServerTrust
NSURLAuthenticationMethodClientCertificate
NSURLAuthenticationMethodNegotiate
NSURLAuthenticationMethodNTLM
com.apple.private.nsurlsession.set-discretionary-override-value
com.apple.private.nsurlsession.set-task-priority
v16@?0@"NSData"8
v32@?0@"NSURLProtectionSpace"8@"NSURLCredential"16^B24
__com.apple.CFNetwork.prefix__
%@%@%@
CFNetworkUpload_%@
Task <?>.<0>
New task
_NSURLRequestIsDiscretionaryOverrideValue
v32@?0@"NSNumber"8@"__NSCFURLSessionTaskInfo"16^B24
com.apple.mobileassetd
com.apple.sharingd
v12@?0B8
NSURLErrorBackgroundTaskCancelledReasonKey
__NSCFLocalUploadTask
__NSCFLocalDataTask
__NSCFLocalDownloadTask
pathToDownloadTaskFile
NSKeyedArchiveRootObjectKey
Unknown (%llu)
Network quality
In battery saver mode
Blocked by proxy
Network unavailable
Opportunistic
Connection pool is full
Required data protection level is locked
Conflicting parameters
Thermal conditions are not good
Cellular service is unavailable
Link quality too poor
Waiting for non-cellular network
Waiting for inexpensive network
Waiting for power
Duration expired
Waiting for start time
Duet Said No
VPN not connected
%@ [allowsCellularAccess: %d]
%@ [delay: %f, duration: %f, allowsCellularAccess: %d]
tasks.plist
Library/Caches/com.apple.nsurlsessiond/Downloads
NSURLSessionDelegateImplementsWillBeginDelayedRequestKey
Uploads
NSURLSessionBackgroundPoolName-sync-%d
NSURLSessionBackgroundPoolName
hasVersion
version
TI,N,V_version
hasLaunchUUID
T@"NSString",&,N,V_launchUUID
hasHeaderData
headerData
T@"NSData",&,N,V_headerData
hasContinueLoad
continueLoad
TB,N,V_continueLoad
v32@?0@"NSString"8@"PDURLSessionProxyClientManager"16^B24
-[PDURLSessionProxyClientService releaseDirectWiFi]_block_invoke
/BuildRoot/Library/Caches/com.apple.xbs/Sources/nsnetworkd_Sim/CFNetwork-1098.6/nsurlsessiond/SessionProxy/PDURLSessionProxyClientService.mm
self->_directWiFiRetainCount > 0
NSURLSessionProxyWiFiToken
com.apple.nsurlsessiond.NSURLSessionProxyService
is not
hasReceivedData
receivedData
T@"NSData",&,N,V_receivedData
hasAdditionalProperties
additionalProperties
T@"NSData",&,N,V_additionalProperties
hasTaskDescription
taskDescription
T@"NSString",&,N,V_taskDescription
com.apple.nsurlsessiond.status-monitor
com.apple.nsurlsessiond-events.message-type
v16@?0@"NSObject<OS_xpc_object>"8
com.apple.nsurlsessiond-events.registered-clients
com.apple.nsurlsessiond-launchondemand
com.apple.nsurlsessiond.UserEventAgentConnectionQueue
supportsSecureCoding
TB,R
DisableInfraWiFi
DisableDirectWiFi
UseProxySocket
v32@?0@8@16^B24
NSErrorClientCertificateChainKey
NSErrorPeerCertificateChainKey
_actualConfiguration
T@"NSURLSessionConfiguration",&,S_setActualConfiguration:
_actualAdditionalProperties
T@"NSDictionary",&,S_setActualAdditionalProperties:
_actualTaskInfo
T@"__NSCFURLSessionTaskInfo",&,S_setActualTaskInfo:
_actualAuthHeaders
T@"NSDictionary",&,S_setActualAuthHeaders:
com.apple.nsurlsessionproxy.cancelError
https
http
### Failed to Soft Linked: /System/Library/PrivateFrameworks/InstallCoordination.framework/InstallCoordination
### Failed to Soft Linked: /System/Library/PrivateFrameworks/StreamingZip.framework/StreamingZip
__NSCFURLSessionConfiguration
NSURLSessionConfiguration
nsurlsessiond
com.apple.nsurlsessiond.szmodtime
com.apple.nsurlsessiond.purged
/nsurlsessiond.launch
com.apple.nsurlsessiond/Downloads
-launchd
com.apple.nsnetworkd
hasStreamErrorDomain
streamErrorDomain
Ti,N,V_streamErrorDomain
hasStreamErrorCode
streamErrorCode
Ti,N,V_streamErrorCode
hasArchiveList
archiveList
T@"NSData",&,N,V_archiveList
bundleIdentifier
T@"NSString",&,V_bundleIdentifier
currentRequestDelay
Td,V_currentRequestDelay
isInTransitionalDiscretionaryPeriod
TB,VisInTransitionalDiscretionaryPeriod
com.apple.nsurlsessiond.NDSpringBoardApplication.request-delay-queue
BecomeDownload
Allow
Cancel
hasRequest
request
T@"PDURLSessionProxyRequest",&,N,V_request
hasReason
reason
TI,N,V_reason
hasShouldCancel
shouldCancel
TB,N,V_shouldCancel
v32@?0@"NSString"8@"PDURLSessionProxyClient"16^B24
T@"<NDCredentialStorageDelegate>",W,V_delegate
bundleID
T@"NSString",C,V_bundleID
v16@?0@"NSURLCredential"8
v24@?0@"NSDictionary"8@"NSDictionary"16
com.apple.nsurlsessiond.credential-storage-queue
hasHasBodyStream
hasBodyStream
TB,N,V_hasBodyStream
hasBytesSent
bytesSent
TQ,N,V_bytesSent
hasTotalBytesSent
totalBytesSent
TQ,N,V_totalBytesSent
hasTotalBytesExpectedToSend
totalBytesExpectedToSend
TQ,N,V_totalBytesExpectedToSend
hasTaskIdentifier
taskIdentifier
TQ,N,V_taskIdentifier
basePriority
Tq,V_basePriority
hasChallenge
challenge
T@"PDURLSessionProxyAuthChallenge",&,N,V_challenge
hasDomain
domain
T@"NSString",&,N,V_domain
hasCode
code
TQ,N,V_code
hasUserInfo
userInfo
T@"NSData",&,N,V_userInfo
T@"NSObject<OS_dispatch_queue>",R,V_queue
privileged
TB,GisPrivileged,V_privileged
inSyncBubble
TB,GisInSyncBubble,V_inSyncBubble
com.apple.nsurlsessiond.started
v8@?0
v32@?0@"NSString"8@"NDSessionManager"16^B24
q24@?0@8@16
NDTaskInfo
bundles.plist
com.apple.nsurlsessiond.daemon-queue
com.apple.nsurlsessiond-xpc-transaction-queue
hasBodyData
bodyData
T@"NSData",&,N,V_bodyData
UIApplicationLaunchOptionsURLSessionKey
com.apple.nsurlsessiond.handlesession %@
could not find
found
v32@?0@8@"BKSProcessAssertion"16^B24
v32@?0@"NSString"8@"NSArray"16^B24
v32@?0@"NSString"8@"NSNumber"16^B24
KeepAppsUpToDateAppList
com.apple.mt
v16@?0@"NSDictionary"8
com.apple.nsnetwork.SpringBoard-queue
kKeepAppsUpToDateEnabledChangedNotification
hasSessionIdentifier
sessionIdentifier
T@"NSString",&,N,V_sessionIdentifier
hasUuidString
uuidString
T@"NSString",&,N,V_uuidString
hasSequenceNumber
sequenceNumber
TQ,N,V_sequenceNumber
hasIdsPriority
idsPriority
Tq,N,V_idsPriority
hasError
error
T@"PDURLSessionProxyError",&,N,V_error
extractorDelegate
T@"<SZExtractorDelegate>",W,N
doesConsumeExtractedData
SZExtractor
/System/Library/PrivateFrameworks/StreamingZip.framework/StreamingZip
nw_activityUUID
TimeoutIntervalForResource
v24@?0Q8@"NSError"16
/System/Library/PrivateFrameworks/InstallCoordination.framework/InstallCoordination
CountOfBytesClientExpectsToReceive
CountOfBytesClientExpectsToSend
EarliestBeginDate
PublishingURL
StatusCodes
com.apple.nsurlsessiond.disablePDURLSessionClient
Ti,V_type
TQ,V_taskIdentifier
args
T@"NSArray",C,V_args
hasBeenDrained
TB,V_hasBeenDrained
T@"<NDCallbackQueueDelegate>",W,V_delegate
v20@?0B8@"NSDictionary"12
v24@?0q8@"NSURLRequest"16
v16@?0@"NSError"8
v16@?0@"NSFileHandle"8
v24@?0@"NSURLRequest"8@"NSFileHandle"16
v24@?0q8@"NSURLCredential"16
_reportTimeInterval
_stageTimeInterval
_stageURL
_reportHandler
_diskUsage
_lastSubmissionDate
_lastSaveDate
_metricsQueue
initWithStageURL:reportHandler:
readMetrics
saveMetrics
deleteMetrics
recordBytes:bundleID:
.cxx_destruct
reportTimeInterval
setReportTimeInterval:
stageTimeInterval
setStageTimeInterval:
stageURL
setStageURL:
reportHandler
setReportHandler:
diskUsage
setDiskUsage:
lastSubmissionDate
setLastSubmissionDate:
lastSaveDate
setLastSaveDate:
metricsQueue
setMetricsQueue:
dictionary
countByEnumeratingWithState:objects:count:
timeIntervalSinceDate:
date
setObject:forKeyedSubscript:
numberWithUnsignedLongLong:
unsignedLongLongValue
objectForKeyedSubscript:
removeItemAtURL:error:
defaultManager
writeToURL:options:error:
dataWithPropertyList:format:options:error:
dictionaryWithObjects:forKeys:count:
propertyListWithData:options:format:error:
dataWithContentsOfURL:
_host
_port
_session
_socketUUID
_has
copyWithZone:
hasSession
hasSocketUUID
hasHost
setPort:
setHasPort:
hasPort
description
dictionaryRepresentation
readFrom:
writeTo:
copyTo:
isEqual:
hash
mergeFrom:
session
setSession:
socketUUID
setSocketUUID:
host
setHost:
port
allocWithZone:
numberWithUnsignedInt:
setObject:forKey:
stringWithFormat:
_task
_hasStarted
_lastUpdateTime
_lastSuspendTime
_suspendedDurationSinceLastUpdate
initWithTask:
taskWillResume
taskWillSuspend
taskTransferredData:countOfBytesReceived:
cancel
_credential
_disposition
hasTask
disposition
setDisposition:
setHasDisposition:
hasDisposition
dispositionAsString:
StringAsDisposition:
hasCredential
task
setTask:
credential
setCredential:
isEqualToString:
_configuration
_delegateImplementsDidReceiveResponse
_delegateImplementsSessionAuthChallenge
_delegateImplementsTaskAuthChallenge
_delegateImplementsWillPerformRedirection
_delegateImplementsWillSendRequest
_supportsRedirects
hasConfiguration
setSupportsRedirects:
setHasSupportsRedirects:
hasSupportsRedirects
setDelegateImplementsWillSendRequest:
setHasDelegateImplementsWillSendRequest:
hasDelegateImplementsWillSendRequest
setDelegateImplementsSessionAuthChallenge:
setHasDelegateImplementsSessionAuthChallenge:
hasDelegateImplementsSessionAuthChallenge
setDelegateImplementsTaskAuthChallenge:
setHasDelegateImplementsTaskAuthChallenge:
hasDelegateImplementsTaskAuthChallenge
setDelegateImplementsWillPerformRedirection:
setHasDelegateImplementsWillPerformRedirection:
hasDelegateImplementsWillPerformRedirection
setDelegateImplementsDidReceiveResponse:
setHasDelegateImplementsDidReceiveResponse:
hasDelegateImplementsDidReceiveResponse
configuration
setConfiguration:
supportsRedirects
delegateImplementsWillSendRequest
delegateImplementsSessionAuthChallenge
delegateImplementsTaskAuthChallenge
delegateImplementsWillPerformRedirection
delegateImplementsDidReceiveResponse
numberWithBool:
_clientBundleID
_watchAppBundleIDForClientBundleID
_fullIdentifier
_uuidString
_sessionConfiguration
_clientProxy
_xpcConnection
_postInvalidationHandler
_queue
_tasks
_identifiersToTaskUniqueIdentifiers
_resourceTimers
_watchdogTimers
_outstandingTaskIDs
_deviceConnections
_pendingMessagesByTask
_bodyStreamHandles
_identifiersToLocalTasks
_localTasksToIdentifiers
_identifiersToBodyStreamsFromCallback
_identifiersToDeviceConnections
_identifiersUsingDirectWiFi
_delegateOptions
_localSession
_taskSequenceNumber
_isInvalid
_shouldCancel
_expectingInvalidation
_shouldResendCreateSession
_isRetainingWiFi
_delegate
__networkPolicyEffectiveBundleIdentifier
_URLSession:openFileAtPath:mode:completionHandler:
_URLSession:companionAvailabilityChanged:
_URLSession:needConnectedSocketToHost:port:completionHandler:
_URLSession:task:getAuthHeadersForResponse:completionHandler:
URLSession:didBecomeInvalidWithError:
URLSession:didReceiveChallenge:completionHandler:
URLSessionDidFinishEventsForBackgroundURLSession:
debugDescription
class
self
performSelector:
performSelector:withObject:
performSelector:withObject:withObject:
isProxy
isKindOfClass:
isMemberOfClass:
conformsToProtocol:
respondsToSelector:
retain
release
autorelease
retainCount
zone
superclass
URLSession:_willRetryBackgroundDataTask:withError:
URLSession:_willRetryBackgroundDataTask:
URLSession:dataTask:didReceiveResponse:completionHandler:
URLSession:dataTask:didBecomeDownloadTask:
URLSession:dataTask:didBecomeStreamTask:
URLSession:dataTask:didReceiveData:
URLSession:dataTask:willCacheResponse:completionHandler:
URLSession:task:willBeginDelayedRequest:completionHandler:
URLSession:taskIsWaitingForConnectivity:
URLSession:task:willPerformHTTPRedirection:newRequest:completionHandler:
URLSession:task:didReceiveChallenge:completionHandler:
URLSession:task:needNewBodyStream:
URLSession:task:didSendBodyData:totalBytesSent:totalBytesExpectedToSend:
URLSession:task:didFinishCollectingMetrics:
URLSession:task:didCompleteWithError:
downloadTaskWithRequest:originalRequest:downloadFilePath:identifier:uniqueIdentifier:reply:
uploadTaskWithRequest:originalRequest:fromFile:sandboxExtensionData:identifier:uniqueIdentifier:potentialCredentials:reply:
dataTaskWithRequest:originalRequest:identifier:uniqueIdentifier:reply:
downloadTaskWithResumeData:identifier:uniqueIdentifier:reply:
cancelTaskWithIdentifier:
cancelTaskWithIdentifier:byProducingResumeData:
suspendTaskWithIdentifier:
resumeTaskWithIdentifier:withProperties:
setDescription:forTask:
setPriority:forTaskWithIdentifier:
setLoadingPoolPriority:forTaskWithIdentifier:
setBytesPerSecondLimit:forTaskWithIdentifier:
setExpectedProgressTarget:forTaskWithIdentifier:
setDiscretionaryOverride:forTaskWithIdentifier:
setTLSSessionCachePrefix:
resetStorageWithReply:
invalidateWithReply:
setPropertyOnStreamWithIdentifier:propDict:propKey:withReply:
retainWiFi
releaseWiFi
avAssetDownloadTaskWithDownloadToken:URL:destinationURL:temporaryDestinationURL:assetTitle:assetArtworkData:options:identifier:uniqueIdentifier:reply:
avAggregateAssetDownloadTaskWithDownloadToken:serializedMediaSelections:assetTitle:assetArtworkData:options:childDownloadSessionIdentifier:identifier:uniqueIdentifier:reply:
initWithConfiguration:bundleID:clientProxy:delegateOptions:delegate:
configuartionForCompanion
updateCreateSessionMessageFromDelegateOptions:
getTaskInformation
messagePriorityForTaskWithIdentifier:isReply:
sourceApplicationBundleIdentifier
IDSMessageTimeout
messageLoggableDescriptionForTaskWithIdentifier:
identifier
setXPCConnection:
baseMessage
taskMessageForIdentifier:
descriptionForTaskWithIdentifier:
cancelEverything
devicesConnected
devicesDisconnected
withTaskQOS:do:
completeInvalidation
resendCreateSessionMessage
resendPendingMessage:forWithIdentifier:
performNextReadFromBodyStreamForTaskIdentifier:
startReadingBodyStreamFromFileHandle:forTaskIdentifier:
shouldUseDirectConnection:
taskIsUsingDirectWiFi:
taskIdentifierForLocalTask:
inputStreamWithFileHandle:
handleMessage:ofType:withReply:
handleFailedMessageSend:ofType:
handleDidReceiveChallengeMessage:forTaskIdentifier:withReply:
handleWillSendRequestMessage:forTaskIdentifier:withReply:
handleOpenBodyStreamMessage:forTaskIdentifier:
handleWillPerformRedirectionMessage:forTaskIdentifier:withReply:
handleDidReceiveResponseMessage:forTaskIdentifier:withReply:
handleDidSendBodyDataMessage:forTaskIdentifier:
handleDidCompleteWithErrorMessage:forTaskIdentifier:
handleDidReceiveDataMessage:forTaskIdentifier:withReply:
handleWillRetryMessage:forTaskIdentifier:
handleBecameInvalidMessage:
handleConnectionWaitingMessage:forTaskIdentifier:
handleGetAuthHeadersMessage:forTaskIdentifier:withReply:
startResourceTimerForTaskWithIdentifier:overriddenStartTime:
touchWatchdogTimerForTaskWithIdentifier:
cancelResourceTimerForTaskWithIdentifier:
cancelWatchdogTimerForTaskWithIdentifier:
closeBodyStreamForTaskWithIdentifier:
taskWithIdentifier:taskInfo:completedWithError:
sendTaskCreationMessage:forTaskIdentifier:
deliverImmediateCancelledErrorForTaskWithIdentifier:
setupIDSSocketForHost:port:completion:
sanitizeTaskProperties:
resumeTaskAfterClientInterfaceAllowedCheckWithIdentifier:withProperties:shouldContinue:cellularAllowed:withQOS:
failTaskWithNotConnectedToInternetError:
_URLSession:dataTask:didReceiveData:completionHandler:
URLSession:task:_isWaitingForConnectionWithReason:
URLSession:task:_willSendRequestForEstablishedConnection:completionHandler:
delegate
_networkPolicyEffectiveBundleIdentifier
set_networkPolicyEffectiveBundleIdentifier:
backgroundTask:getAuthHeadersForResponse:reply:
remoteObjectProxyWithErrorHandler:
backgroundTask:_willSendRequestForEstablishedConnection:reply:
setHTTPBodyStream:
mutableCopy
close
open
HTTPBody
streamStatus
numberWithUnsignedInteger:
backgroundTask:hasConnectionWaitingWithReason:
removeObject:
containsObject:
removeObjectForKey:
backgroundTask:needNewBodyStream:withReply:
backgroundTask:didSendBodyData:totalBytesSent:totalBytesExpectedToSend:
backgroundTask:didReceiveChallenge:reply:
backgroundDataTask:didReceiveData:withReply:
length
backgroundTask:willPerformHTTPRedirection:withNewRequest:reply:
backgroundTask:didReceiveResponse:transactionMetrics:reply:
removeAllObjects
finishTasksAndInvalidate
set_expectedProgressTarget:
set_priority:
_web_errorWithDomain:code:URL:
_sourceApplicationSecondaryIdentifier
resume
setQos:
set_forceWatchNoCellular:
defaultURLSessionPolicyForPID:
auditToken
currentConnection
setHTTPCookieStorage:
setURLCache:
set_requiresSustainedDataDelivery:
bytes
set_sourceApplicationAuditTokenData:
dataWithBytes:length:
set_disablesUseOfProxySession:
set_atsContext:
hasPrefix:
_atsContext
set_maximumWatchCellularTransferSize:
_maximumWatchCellularTransferSize
_sourceApplicationAuditTokenData
set_sourceApplicationSecondaryIdentifier:
set_sourceApplicationBundleIdentifier:
_sourceApplicationBundleIdentifier
suspend
doubleValue
_askForConnectedSocketLater
set_uniqueIdentifier:
dataTaskWithRequest:
inputStreamWithData:
data
boolValue
propertyForKey:inRequest:
addObject:
UUIDString
UUID
initSocketWithDevice:options:completionHandler:queue:
numberWithInteger:
_loggableDescription
backgroundTask:didCompleteWithError:taskMetrics:info:reply:
_metrics
errorWithDomain:code:userInfo:
timeoutIntervalForResource
timeIntervalSinceReferenceDate
backgroundTask:hasConnectionWaitingWithError:
willRetryBackgroundDataTask:withError:transactionMetrics:
setCountOfBytesReceived:
countOfBytesReceived
setCountOfBytesSent:
_ignoreDidReceiveResponseDisposition
fileDescriptor
numberWithUnsignedShort:
_shouldPreserveBackgroundSessionDisposition
_allowsRetryForBackgroundDataTasks
closeFile
unsignedIntegerValue
boundInterfaceIdentifier
_CTDataConnectionServiceType
_preventsDirectWiFiAccess
companionAvailabilityChanged:
enumerateKeysAndObjectsUsingBlock:
copy
setInvalidationHandler:
invalidate
_IDSMessageTimeout
_requiresSustainedDataDelivery
set_companionAppBundleIdentifier:
set_watchAppBundleIdentifier:
set_watchExtensionBundleIdentifier:
companionApplicationIdentifier
applicationProxyForIdentifier:
containingBundle
pluginKitProxyForIdentifier:
setIdentifier:
sessionWithConfiguration:delegate:delegateQueue:
UTF8String
_connectionHasEntitlement:
setWithObjects:
unionSet:
fileExistsAtPath:
stringByDeletingLastPathComponent
lastPathComponent
stringByAppendingString:
stringByAppendingPathComponent:
fileSystemRepresentation
dataWithContentsOfFile:
unarchivedObjectOfClasses:fromData:error:
_safe_unarchiveObjectWithFile:
stringWithCapacity:
appendFormat:
uppercaseString
_sha1Hash
integerValue
numberWithInt:
_isRecoverableErrorForBackgroundTask
_isPriorityChangedError
_shouldRemoveCacheFileForError
_errorShouldSuppressWake
_errorShouldBeRewritten
_cancelledReasonForError
_errorForPowerlog
_priorityValue
_setPriority:withMonitoredApplication:
valueForEntitlement:
initWithMachServiceName:
_setQueue:
currentRunLoop
_priority
setPriority:
setHasPriority:
hasPriority
priority
_type
_message
initWithMessage:type:
message
setMessage:
type
setType:
init
_idsService
_outstandingReplies
_outstandingMessages
_startupMessageIdentifier
_outgoingSequenceNumbersByPriority
_incomingSequenceNumbersByPriority
_receivedLaunchUUIDs
_currentRemoteLaunchUUID
_prefersInfraWiFi
_startupMessageFailed
_haveReceivedLegacyStartupMessage
_haveReceivedMessage
_connected
_launchUUID
service:account:incomingOpportunisticData:withIdentifier:fromID:context:
service:didSendOpportunisticDataWithIdentifier:toIDs:
service:account:incomingMessage:fromID:context:
service:account:incomingData:fromID:context:
service:account:incomingUnhandledProtobuf:fromID:context:
service:account:incomingResourceAtURL:fromID:context:
service:account:incomingResourceAtURL:metadata:fromID:context:
service:account:incomingPendingMessageOfType:fromID:context:
service:activeAccountsChanged:
service:devicesChanged:
service:nearbyDevicesChanged:
service:connectedDevicesChanged:
service:account:identifier:didSendWithSuccess:error:
service:account:identifier:didSendWithSuccess:error:context:
service:account:identifier:sentBytes:totalBytes:
service:account:identifier:hasBeenDeliveredWithContext:
service:account:identifier:fromID:hasBeenDeliveredWithContext:
service:account:inviteReceivedForSession:fromID:
service:account:inviteReceivedForSession:fromID:withOptions:
service:account:inviteReceivedForSession:fromID:withContext:
service:account:receivedGroupSessionParticipantUpdate:
service:account:receivedGroupSessionParticipantDataUpdate:
serviceSpaceDidBecomeAvailable:
serviceAllowedTrafficClassifiersDidReset:
service:didSwitchActivePairedDevice:acknowledgementBlock:
start
devicesDidUnpair:
newDeviceBecameActive:
_onqueue_sendStartupMessage
withWorkQueue:
defaultPairedDevice
_onqueue_updateDeviceState
_onqueue_devicesConnected
_onqueue_devicesDisconnected
_onqueue_remoteDeviceStartedUp
_onqueue_receivedNewLaunchUUID:isStartupMessage:
_onqueue_setPrefersInfraWiFi:
_onqueue_priorityForMessage:ofType:isReply:
_onqueue_sourceApplicationForMessage:
_onqueue_IDSTimoutForMessage:
_onqueue_loggableDescriptionForMessage:
bumpAndReturnOutgoingSequenceNumberForPriority:
verifyAndUpdateIncomingSequenceNumber:forPriority:
_onqueue_sendMessage:ofType:responseIdentifier:forSourceApplication:withUrgency:withIDSMessageTimeout:withReply:
sendProtobufMessage:ofType:withReply:
_onqueue_handleReceivedMessage:ofType:withReply:
_onqueue_handleFailedMessageSend:ofType:
_onqueue_handleReceivedReply:forIdentifier:ofType:withError:
_onqueue_messageWithIdentifier:didSendWithSuccess:error:
queue
setQueue:
isConnected
setConnected:
launchUUID
setLaunchUUID:
incomingResponseIdentifier
initWithData:
alloc
outgoingResponseIdentifier
isResponse
sendProtobuf:toDestinations:priority:options:identifier:error:
setWithObject:
initWithProtobufData:type:isResponse:
numberWithLongLong:
setPreferInfraWiFi:
isNearby
isDefaultPairedDevice
devices
numberWithDouble:
addDelegate:queue:
initWithService:
_taskInfo
hasTaskInfo
taskInfo
setTaskInfo:
_currentRequest
_originalRequest
hasOriginalRequest
hasCurrentRequest
setTaskSequenceNumber:
setHasTaskSequenceNumber:
hasTaskSequenceNumber
originalRequest
setOriginalRequest:
currentRequest
setCurrentRequest:
taskSequenceNumber
_response
hasResponse
response
setResponse:
hasSuffix:
numberWithUnsignedLong:
fileURLWithPath:
addEntriesFromDictionary:
dateWithTimeIntervalSinceNow:
earlierDate:
compare:
keysSortedByValueUsingComparator:
fileURLWithPath:isDirectory:relativeToURL:
moveItemAtURL:toURL:error:
arrayWithObjects:count:
contentsOfDirectoryAtURL:includingPropertiesForKeys:options:error:
longLongValue
stringWithUTF8String:
fileURLWithPath:isDirectory:
getResourceValue:forKey:error:
_sessions
_reconnectingProxies
_bundleDirectory
_sessionArchiveQueue
_boost
_isSpringBoardApp
_xpcConn
_obliterationCompletion
sessionCompleted:withCompletionHandler:
boost
dropBoost
createSessionWithConfiguration:clientProxy:cachesDirectory:options:reply:
sendPendingCallbacksForIdentifier:reply:
releaseAssertionForSession:reply:
okayToSendPendingCallbacksForIdentifier:reply:
getActiveSessionIdentifiersWithReply:
obliterateAllSessionsWithReply:
initWithDelegate:bundleID:isSpringBoardApp:
dealloc
archivePath
downloadDirectoryDataPath
restoreOptionsFromArchivePath:
restoreState:
archiveState
copyAndSanitizeClientConfiguration:
connection:canUseSharedContainerIdentifier:
cleanupWithCompletionHandler:
getSessionWithIdentifier:
clientApplicationWasReinstalled
obliterate
xpcConn
setXpcConn:
setDelegate:
isSpringBoardApp
setIsSpringBoardApp:
obliterationCompletion
setObliterationCompletion:
allKeys
writeToFile:atomically:
archivedDataWithRootObject:requiringSecureCoding:error:
_supportsAVAssetDownloads
set_duetPreauthorized:
_duetPreauthorized
set_directoryForDownloadedFiles:
_isSafeDirectoryForDownloads:withToken:
processIdentifier
_directoryForDownloadedFiles
set_connectionPoolName:
_connectionPoolName
set_allowsPowerNapScheduling:
_allowsPowerNapScheduling
set_respectsAllowsCellularAccessForDiscretionaryTasks:
_respectsAllowsCellularAccessForDiscretionaryTasks
endActivity:
processInfo
beginActivityWithOptions:reason:
addObjectsFromArray:
fileExistsAtPath:isDirectory:
array
path
URLByAppendingPathComponent:
_userInitiatedSession
_discretionaryPrioritySession
_credentialStorage
_archiveQueue
_clientApplication
_connectedExtension
_tasksToIdentifiers
_identifiersToTasks
_identifiersToMonitors
_identifiersToStreams
_identifiersToStreamQueues
_lastArchiveTime
_sessionDirectory
_downloadDirectory
_uploadsDirectory
_performsEVCertCheck
_clientImplementsWillSendRequest
_clientImplementsWillBeginDelayedRequest
_clientImplementsSessionChallenge
_clientImplementsTaskChallenge
_sendsLaunchEvents
_discretionary
_obliterated
_cleanedUp
_hasBeenSignalledToDeliverPendingEvents
_infersDiscretionary
_shouldPullInitialCredentials
_completeReconnectionBlock
_clientPID
_watchExtensionBundleIdentifier
_retryDataTasks
_workQueue
_callbackQueue
_monitoredApplication
_identifiersToTaskInfo
_companionAvailable
_uuid
_identifier
_monitoredAppBundleID
_secondaryID
_invalidateReply
_sharedContainerIdentifier
getClientProxy
_URLSession:downloadTask:didReceiveResponse:
_URLSession:downloadTaskNeedsDownloadDirectory:
URLSession:task:_schemeUpgraded:completionHandler:
URLSession:task:_isWaitingForConnectionWithError:
URLSession:_taskIsWaitingForConnection:
URLSession:task:_conditionalRequirementsChanged:
URLSession:downloadTask:didWriteData:totalBytesWritten:totalBytesExpectedToWrite:
URLSession:downloadTask:didResumeAtOffset:expectedTotalBytes:
URLSession:downloadTask:didFinishDownloadingToURL:
wakeUpClient
errorOccurredDuringFinishedCallbackDelivery:
errorOccurredDuringAuthCallbackDelivery:completionHandler:
clientAcknowledgedTerminalCallbackForTask:
applicationWasQuitFromAppSwitcher:
backgroundUpdatesDisabledForApplication:
backgroundUpdatesEnabledForApplication:
applicationWasSuspended:
applicationEnteredForeground:
applicationNoLongerInForeground:
applicationEndedNonDiscretionaryBackgroundGracePeriod:
applicationEndedExtendedNonDiscretionaryBackgroundGracePeriod:
applicationEndedTransitionalDiscretionaryBackgroundPeriod:
defaultWindowDurationForResourceTimeout:
configurationWithClientConfiguration:discretionary:
initWithConfiguration:bundleID:isSpringBoardApp:downloadDirectory:options:clientProxy:delegate:workQueue:archiveQueue:
sessionForDiscretionaryStatus:
hasConnectedClient
setupDownloadDirectory
cleanupSessionWithCompletionHandler:
tasksArchivePath
archiveTaskInfo:
descriptionForRequest:
descriptionForTCPConnectionWaitingReason:
requestWithAdjustedWindowForTaskInfo:
updateTaskInfoBasedOnCurrentDiscretionaryStatus:
adjustDiscretionaryStatusForTaskInfo:
configureAdditionalPropertiesOnTask:taskInfo:
configureTask:withTaskInfo:
ensureSessionDownloadDirectoryExists
createNewTaskFromInfo:
restoreInProgressTask:
restoreCompletedTask:
restoreTask:isOutstanding:
restoreTasksFromArchivedInfo:
restoreTasks:
clientErrorForError:
retryTask:originalError:transactionMetrics:
removeDownloadFileForTaskInfo:
removeUploadFileForTaskInfo:
sessionHasOutstandingTasks
clientIsActive
handleCompletionOfTask:identifier:taskInfo:isRecoverable:suppressWake:
finalizeTaskCompletionWithSuppressedWake:
cancelTasksRequiringClientConnectionAndResumeUnstartedTasks
clientDidDisconnect
reconnectClient:withCompletion:
allowReconnect
fillInByteCountsForTaskInfo:withTaskID:
fillInPropertiesForTaskInfo:withTaskID:
getTasksForReconnection
getTLSSessionCachePrefix
priorityForDiscretionaryStatus:
currentDiscretionaryStatus:withOptionalTaskInfo:
cancelMonitorForTask:
handleEarliestBeginDateForTaskWithIdentifier:completionHandler:
handleWillBeginDelayedRequestForTaskWithIdentifier:completionHandler:
taskShouldResume:
taskShouldSuspend:
enqueueTaskWithIdentifier:
addOutstandingTaskWithIdentifier:
removeOutstandingTaskWithIdentifier:
requeueTask:skipResume:
requeueTask:
makeTempUploadFile:withExtensionData:
inputStreamWithFileHandle:taskIdentifier:
errorIfTooManyBytesForInterface:byteCount:
setupDASPropertiesOnTask:taskInfo:discretionaryStatus:
performCommonSetupForTask:taskInfo:identifier:discretionaryStatus:
shouldContinueDownloadBasedOnDiskSpace:
trustPassesExtendedValidation:
uuid
clientBundleID
monitoredAppBundleID
secondaryID
invalidateReply
setInvalidateReply:
sharedContainerIdentifier
setSharedContainerIdentifier:
cancel_with_error:
error:code:
establishedConnection
cfConn
arrayWithObjects:
backgroundTask:didReceiveResponse:transactionMetrics:
currentTransactionMetrics
countOfBytesExpectedToReceive
statusCode
HTTPBodyStream
setShouldCancelOnDisconnect:
shouldCancelOnDisconnect
taskKind
setEstablishedConnection:
countOfBytesSent
backgroundDownloadTask:didWriteData:totalBytesWritten:totalBytesExpectedToWrite:
setExpectingResumeCallback:
backgroundDownloadTask:didResumeAtOffset:expectedTotalBytes:
expectingResumeCallback
arrayWithObject:
_hasSZExtractor
setTaskKind:
backgroundDataTaskDidBecomeDownloadTask:
setDownloadFileURL:
downloadFile
terminateExtractorWithError:completion:
_extractorFinishedDecoding
objectForKey:
taskMetrics
null
_backgroundTrailers
set_backgroundTrailers:
_trailers
setState:
set_doesSZExtractorConsumeExtractedData:
_doesSZExtractorConsumeExtractedData
set_hasSZExtractor:
set_extractor:
_extractor
disablesRetry
downloadFileURL
setDisablesRetry:
set_legacySocketStreamProperties:
_legacySocketStreamProperties
_copySocketStreamProperties
_groupConfiguration
_taskGroup
scheme
isDiscretionary
proposedCredential
previousFailureCount
credentialForTrust:
serverTrust
authenticationMethod
protectionSpace
set_tlsSessionCachePrefix:
setMayBeDemotedToDiscretionary:
setDiscretionaryOverride:
set_discretionaryOverride:
setExpectedProgressTarget:
setBytesPerSecondLimit:
set_bytesPerSecondLimit:
setLoadingPriority:
set_loadingPriority:
setDiscretionary:
_requiresPowerPluggedIn
allowsCellularAccess
_socketStreamProperties
hasStarted
setProperty:forKey:
startResourceTimer
backgroundTaskDidResume:
setSuspendCount:
suspendCount
state
backgroundTaskDidSuspend:
setResumedAndWaitingForEarliestBeginDate:
cancelByProducingResumeData:
initWithDataTask:uniqueIdentifier:bundleID:sessionID:
setFileURL:
sharedCredentialStorage
credentialWithUser:password:persistence:
initWithHost:port:protocol:realm:authenticationMethod:
realm
protocol
password
user
initWithUploadTask:uniqueIdentifier:bundleID:sessionID:
uploadTaskWithStreamedRequest:
uploadTaskWithRequest:fromFile:
_isSafeFileForBackgroundUpload:withToken:
initWithDownloadTask:uniqueIdentifier:bundleID:sessionID:
_downloadTaskWithRequest:downloadFilePath:
_isSafeRequestForBackgroundDownload
downloadTaskWithResumeData:
_requestFromResumeData
setForceWatchNoCellular:
_allowsWCA
_effectiveConfiguration
setCreationTime:
set_pathToDownloadTaskFile:
pathToDownloadTaskFile
set_storagePartitionIdentifier:
storagePartitionIdentifier
uniqueIdentifier
startedUserInitiated
_onBehalfOfPairedDevice
_timeWindowDelay
set_DuetActivityProperties:
_connectionIsCompanionLink
copyItemAtURL:toURL:error:
getBytes:length:
resumedAndWaitingForEarliestBeginDate
setHasStarted:
setStartedUserInitiated:
publish
unpublish
progress
_backgroundPublishingURL
updateCurrentRequest:
setRespondedToWillBeginDelayedRequestCallback:
respondedToWillBeginDelayedRequestCallback
timeIntervalSinceNow
earliestBeginDate
discretionaryOverride
_propertyForKey:
_tlsSessionCachePrefix
setCountOfBytesExpectedToReceive:
setCountOfBytesExpectedToSend:
countOfBytesExpectedToSend
resourceTimeoutError
fileURL
setRetryCount:
retryCount
lowThroughputTimerRetryCount
setLowThroughputTimerRetryCount:
set_metrics:
forceWatchNoCellular
expectedProgressTarget
bytesPerSecondLimit
loadingPriority
setStartTime:
creationTime
setCountOfBytesClientExpectsToReceive:
countOfBytesClientExpectsToReceive
setCountOfBytesClientExpectsToSend:
countOfBytesClientExpectsToSend
setEarliestBeginDate:
initWithBackgroundTaskInfo:taskGroup:
defaultTaskGroup
encodedData
encodeObject:forKey:
initRequiringSecureCoding:
createResumeInformation:
immutableEffectiveConfigurationFromSessionConfig:
mayBeDemotedToDiscretionary
_setTimeWindowDelay:
_setTimeWindowDuration:
_timeWindowDuration
URLByAppendingPathComponent:isDirectory:
groupContainerURLs
setPath:
_allowsExpensiveAccess
allowsExpensiveNetworkAccess
timeoutIntervalForRequest
_infersDiscretionaryFromOriginatingClient
_useTLSSessionCacheFromSession:
_sessionSendsLaunchOnDemandEvents
sessionSendsLaunchEvents
setSkip_download_unlink:
set_socketStreamProperties:
set_forcedNetworkServiceType:
set_clientIsNotExplicitlyDiscretionary:
_clientIsNotExplicitlyDiscretionary
set_duetPreClearedMode:
_duetPreClearedMode
set_allowsSensitiveLogging:
_allowsSensitiveLogging
set_requiresClientToOpenFiles:
set_requiresPowerPluggedIn:
set_shouldSkipPreferredClientCertificateLookup:
_shouldSkipPreferredClientCertificateLookup
set_timingDataOptions:
_timingDataOptions
set_preventsIdleSleepOnceConnected:
set_longLivedConnectionCachePurgeTimeout:
set_connectionCachePurgeTimeout:
set_tcpConnectionPoolName:
set_multipathAlternatePort:
_multipathAlternatePort
setAllowsConstrainedNetworkAccess:
allowsConstrainedNetworkAccess
setAllowsExpensiveNetworkAccess:
set_allowsConstrainedNetworkAccess:
_allowsConstrainedNetworkAccess
set_allowsExpensiveAccess:
setShouldUseExtendedBackgroundIdleMode:
setWaitsForConnectivity:
setAllowsCellularAccess:
setURLCredentialStorage:
set_companionProxyPreference:
_companionProxyPreference
set_allowsWCA:
set_disablesOutOfProcessDirectWiFiUsage:
set_shouldPreserveBackgroundSessionDisposition:
set_prefersInfraWiFi:
set_alwaysPerformDefaultTrustEvaluation:
_alwaysPerformDefaultTrustEvaluation
set_IDSMessageTimeout:
set_onBehalfOfPairedDevice:
set_TCPAdaptiveWriteTimeout:
_TCPAdaptiveWriteTimeout
set_TCPAdaptiveReadTimeout:
_TCPAdaptiveReadTimeout
set_reportsDataStalls:
_reportsDataStalls
set_allowsTLSFallback:
_allowsTLSFallback
set_allowsTLSFalseStart:
_allowsTLSFalseStart
set_authenticatorStatusCodes:
_authenticatorStatusCodes
setNetworkServiceType:
networkServiceType
setHTTPMaximumConnectionsPerHost:
HTTPMaximumConnectionsPerHost
setHTTPAdditionalHeaders:
HTTPAdditionalHeaders
setTLSMaximumSupportedProtocol:
TLSMaximumSupportedProtocol
setTLSMinimumSupportedProtocol:
TLSMinimumSupportedProtocol
setConnectionProxyDictionary:
connectionProxyDictionary
setTimeoutIntervalForResource:
setTimeoutIntervalForRequest:
defaultSessionConfiguration
_version
setVersion:
setHasVersion:
hasVersion
hasLaunchUUID
version
_headerData
_continueLoad
hasHeaderData
setContinueLoad:
setHasContinueLoad:
hasContinueLoad
headerData
setHeaderData:
continueLoad
_sessionManagers
_directWiFiRetainCount
listener:shouldAcceptNewConnection:
retainDirectWiFi
releaseDirectWiFi
setExportedObject:
setExportedInterface:
bgSessionManagerInterface
fileURLWithFileSystemRepresentation:isDirectory:relativeToURL:
removeWiFiAutoAssociationClientToken:
removeWoWClient:
sharedInstance
shouldAssertWiFi
addWiFiAutoAssociationClientToken:
addWoWClient:
sharedService
_receivedData
hasReceivedData
receivedData
setReceivedData:
_additionalProperties
hasAdditionalProperties
additionalProperties
setAdditionalProperties:
_taskDescription
hasTaskDescription
taskDescription
setTaskDescription:
_dynamicStoreSource
_blocksToExecuteAfterNetworkChange
_networkChangeEventCount
_symptomToken
performBlockAfterNetworkChangedEvent:numberOfPreviousRetries:
performBlockAfterNetworkChangedEvent:delay:
handleDynamicStoreCallback:changedKeys:
handleBetterNetworkEvent
startMonitoringDynamicStore
stopMonitoringDynamicStore
stop
sharedMonitor
_connection
_listener
_registeredClients
_pendingWakes
handleNewConnection:
canLaunchProcessWithIdentifier:
launchProcessWithIdentifier:sessionIdentifier:
wakeClientUponNotification:sessionIdentifier:
removePendingWakeForClient:sessionIdentifier:
sharedUserEventAgentConnection
encodeWithCoder:
initWithCoder:
supportsSecureCoding
whitelistedClassesForUnarchiving
getComponentsForFullIdentifier:bundleIdentifier:sessionIdentifier:
messageSubclassForMessageType:isReply:
objectAtIndex:
componentsSeparatedByString:
setWithArray:
setClassName:forClass:
_nsurlsessionproxy_secureArchivedDataWithRootObject:
initForReadingFromData:error:
setByAddingObject:
decodeObjectOfClasses:forKey:
_nsurlsessionproxy_secureUnarchiveObjectOfClass:withData:
_nsurlsessionproxy_requiresBackgroundSession
_nsurlsessionproxy_cancelWithError:
_nsurlsessionproxy_clearError
_nsurlsessionproxy_error
lowercaseString
_nsurlsessionproxy_isSafeRequest
_nsurlsessionproxy_launchUUID
_nsurlsessionproxy_setLaunchUUID:
_nsurlsessionproxy_sessionUUID
_nsurlsessionproxy_setSessionUUID:
_nsurlsessionproxy_sessionIdentifier
_nsurlsessionproxy_taskIdentifier
_nsurlsessionproxy_sequenceNumber
_nsurlsessionproxy_setSequenceNumber:
_nsurlsessionproxy_messagePriority
_nsurlsessionproxy_setMessagePriority:
_initWithActualError:
_actualError
_initWithActualRequest:
_actualRequest
_initWithActualResponse:
_actualResponse
_initWithActualAuthChallenge:
_actualAuthChallenge
_initWithActualCredential:
_actualCredential
_actualConfiguration
_setActualConfiguration:
_actualAdditionalProperties
_setActualAdditionalProperties:
_actualTaskInfo
_setActualTaskInfo:
_actualAuthHeaders
_setActualAuthHeaders:
oldDaemonPath
oldNonDataVaultDaemonPath
nsurlsessiondPath
bundleManagerPath:
sessionPath:forBundleID:
nsurlsessiondLaunchdPath
removeItemAtPath:
removeItemAtURL:
createDataVaultDirectoryAtPath:
createDirectoryAtPath:
createDirectoryAtURL:
defaultDownloadDirectoryContainer
defaultDownloadDirectoryForBundleID:
setDaemonWorkState:
updateStreamingZipModificationDate:
removeStreamingZipModificationDate:
fetchStreamingZipModificationDate:
markItemAsPurged:
itemShouldBePurged:
dateWithTimeIntervalSinceReferenceDate:
removeItemAtPath:error:
createFileAtPath:contents:attributes:
URLForDirectory:inDomain:appropriateForURL:create:error:
createDirectoryAtURL:withIntermediateDirectories:attributes:error:
createDirectoryAtPath:withIntermediateDirectories:attributes:error:
cStringUsingEncoding:
_streamErrorCode
_streamErrorDomain
setStreamErrorDomain:
setHasStreamErrorDomain:
hasStreamErrorDomain
setStreamErrorCode:
setHasStreamErrorCode:
hasStreamErrorCode
streamErrorDomain
streamErrorCode
_archiveList
hasArchiveList
archiveList
setArchiveList:
_bundleIdentifier
_observers
isInTransitionalDiscretionaryPeriod
_currentRequestDelay
initWithIdentifier:
containerURL
supportsWakes
wakeForSessionIdentifier:withSessionUUID:
hasForegroundBackgroundStates
isForeground
isAwake
canBeSuspended
isSuspended
isBeingDebugged
hasBackgroundTaskCompletion
isHandlingBackgroundURLSessionWithIdentifier:withSessionUUID:
addObserver:
removeObserver:
invokeSelectorForAllObservers:
backgroundUpdatesEnabled
_onqueue_resetRequestDelay
setIsInTransitionalDiscretionaryPeriod:
bundleIdentifier
setBundleIdentifier:
currentRequestDelay
setCurrentRequestDelay:
removeObjectAtIndex:
indexOfObject:
initialize
applicationWithIdentifier:
springboardApplicationWithBundleIdentifier:
springBoardApplicationExistsWithIdentifier:
watchKitExtensionApplicationWithBundleIdentifier:
launchBundleIdentifier
setupDelayTimer
requestDelayQueue
dataContainerURL
_delayTimer
_nonDiscretionaryGracePeriodTimer
_extendedNonDiscretionaryGracePeriodTimer
_transitionalDiscretionaryStateTimer
_containingApplication
applicationBackgroundUpdatesTurnedOff:
applicationBackgroundUpdatesTurnedOn:
setupNonDiscretionaryGracePeriodTimer
disableNonDiscretionaryGracePeriodTimer
startNonDiscretionaryGracePeriodTimer
setupTransitionalDiscretionaryPeriodTimer
disableTransitionalDiscretionaryPeriodTimer
startTransitionalDiscretionaryPeriodTimer
_request
hasRequest
request
setRequest:
_reason
setReason:
setHasReason:
hasReason
reason
setShouldCancel:
setHasShouldCancel:
hasShouldCancel
shouldCancel
_boostReply
proxyClientBecameInvalid:withCompletionHandler:
initWithBundleID:
sessionForIdentifier:
boost:
_cachedCredentials
_cachedDefaultCredentialUsers
_bundleID
initWithDelegate:forBundleID:
populateWithInitialCredentials
credentialsForProtectionSpace:
allCredentials
setCredential:forProtectionSpace:
removeCredential:forProtectionSpace:
defaultCredentialForProtectionSpace:
setDefaultCredential:forProtectionSpace:
reset
bundleID
setBundleID:
credStorage_setDefaultCredential:forProtectionSpace:
credStorage_defaultCredentialForProtectionSpace:reply:
synchronousRemoteObjectProxyWithErrorHandler:
credStorage_setCredential:forProtectionSpace:
dictionaryWithDictionary:
credStorage_allCredentialsWithReply:
credStorage_credentialsForProtectionSpace:reply:
credStorage_getInitialCredentialDictionariesWithReply:
_hasBodyStream
setHasBodyStream:
setHasHasBodyStream:
hasHasBodyStream
hasBodyStream
_bytesSent
_totalBytesExpectedToSend
_totalBytesSent
setBytesSent:
setHasBytesSent:
hasBytesSent
setTotalBytesSent:
setHasTotalBytesSent:
hasTotalBytesSent
setTotalBytesExpectedToSend:
setHasTotalBytesExpectedToSend:
hasTotalBytesExpectedToSend
bytesSent
totalBytesSent
totalBytesExpectedToSend
_taskIdentifier
setTaskIdentifier:
setHasTaskIdentifier:
hasTaskIdentifier
taskIdentifier
_clientBundleIdentifier
_clientSecondaryIdentifier
_throughputTimer
_progressTimestamps
_progressValues
_throughputInterval
_throughputMonitoringStartTime
_startedDuetReporter
_connectionIsCellular
_hasTransferredData
_explicitlyDiscretionary
_performsNonDiscretionaryThrougputMonitoring
_mayBeDemotedToDiscretionary
_powerMonitorToken
_basePriority
initWithTask:taskInfo:clientBundleIdentifier:secondaryIdentifier:monitoredApplication:priority:options:queue:
currentThroughputThreshold
currentIntervalEndDelta
calculateThroughput
setThroughputTimerForCurrentInterval
startThroughputMonitoring
stopThroughputMonitoring
startThroughputMonitoringIfAppropriate
basePriority
setBasePriority:
removeLastObject
lastObject
firstObject
_challenge
hasChallenge
challenge
setChallenge:
_code
_domain
_userInfo
hasDomain
setCode:
setHasCode:
hasCode
hasUserInfo
domain
setDomain:
code
userInfo
setUserInfo:
_clients
_transactionQueue
_createdDataVault
_privileged
_inSyncBubble
managerBecameEmpty:bundleID:withCompletionHandler:
applicationInstallsDidStart:
applicationInstallsDidChange:
applicationInstallsDidUpdateIcon:
applicationsWillInstall:
applicationsDidInstall:
pluginsDidInstall:
applicationsDidFailToInstall:
applicationsWillUninstall:
pluginsWillUninstall:
applicationsDidUninstall:
pluginsDidUninstall:
applicationsDidFailToUninstall:
applicationInstallsArePrioritized:arePaused:
applicationInstallsDidPause:
applicationInstallsDidResume:
applicationInstallsDidCancel:
applicationInstallsDidPrioritize:
applicationStateDidChange:
applicationIconDidChange:
networkUsageChanged:
observeLaunchProhibitedApps
deviceManagementPolicyDidChange:
createDaemonDirectory
archivePathOldNonDataVault
applicationIsInstalled:
setupNewClassMappingsForUnarchiver
restoreState
getSessionWithIdentifier:forBundleID:
addTransaction
releaseTransaction
bundleIDsForAppProxies:
waitUntilDeviceIsUnlocked
isPrivileged
setPrivileged:
isInSyncBubble
setInSyncBubble:
pluginIdentifier
plugInKitPlugins
applicationIdentifier
endTransaction
beginTransaction
setInterruptionHandler:
isValid
appState
sessionID
sortedArrayUsingComparator:
setClass:forClassName:
isAppUpdate
isPlaceholder
defaultWorkspace
bundleURL
setAttributes:ofItemAtPath:error:
sharedDaemon
_bodyData
hasBodyData
bodyData
setBodyData:
_monitor
_service
_assertions
_launchActivities
_appStates
_observedBackgroundSettings
_backgroundUpdatesAllowed
_monitoredBundleIDs
_assertion_lock
setupMonitor
getBackgroundSettingsAppList
handleBackgroundSettingsChange
handleApplicationStateChange:
addObserver:forApplication:
removeObserver:forApplication:
startMonitoringBundleID:
stopMonitoringBundleID:
applicationStateForBundleID:
applicationIsForeground:
applicationIsAwake:
applicationIsSuspended:
applicationIsBeingDebugged:
isValidAssertion:withReason:name:
application:hasAssertion:withName:
applicationHasBackgroundTaskCompletion:
application:isHandlingBackgroundSessionWithIdentifier:withSessionUUID:
applicationBackgroundUpdatesEnabled:
_onqueue_releaseAssertionForBundleID:sessionID:
releaseAssertionForBundleID:sessionID:
removePendingLaunchTasksForBundleID:sessionID:cancel:
assertionNameForSessionUUID:
takeAssertionForBundleID:sessionID:sessionUUID:
wakeUpApp:forSession:withSessionUUID:
identifierIsForSpringBoardApplication:
activateApplication:options:withResult:
activationOptionsForNSURLSessionWithIdentifier:
dictionaryWithObject:forKey:
acquire
initWithBundleIdentifier:flags:reason:name:
unsignedIntValue
applicationInfoForApplication:
NameForReason:
valid
name
isApplicationBeingDebugged:
applicationStateForApplication:
updateInterestedBundleIDs:
allObjects
intValue
isEqualToNumber:
isAutomaticAppUpdatesAllowed
sharedConnection
persistentDomainForName:
standardUserDefaults
resetStandardUserDefaults
sharedSpringBoard
setHandler:
defaultCenter
_idsPriority
_sequenceNumber
_sessionIdentifier
hasSessionIdentifier
hasUuidString
setSequenceNumber:
setHasSequenceNumber:
hasSequenceNumber
setIdsPriority:
setHasIdsPriority:
hasIdsPriority
sessionIdentifier
setSessionIdentifier:
uuidString
setUuidString:
sequenceNumber
idsPriority
_error
hasError
error
setError:
consumeExtractedDataIfNeeded
prepareForExtractionToPath:completionBlock:
doesConsumeExtractedData
prepareForExtraction:
supplyBytes:withCompletionBlock:
suspendStreamWithCompletionBlock:
finishStreamWithCompletionBlock:
terminateStreamWithError:completionBlock:
extractorDelegate
setExtractorDelegate:
knownSZExtractorImplementations
_extractorPreparedForExtraction
set_extractorPreparedForExtraction:
set_timeoutIntervalForResource:
set_disallowCellular:
getUUIDBytes:
set_nw_activity:
_watchAppBundleIdentifier
_companionAppBundleIdentifier
_onqueue_adoptEffectiveConfiguration:
initializeHTTPAuthenticatorWithAppleIDContext:statusCodes:
set_authenticatorConfiguredViaTaskProperty:
set_backgroundPublishingURL:
_DuetActivityProperties
_hasBeenDrained
_args
initWithCallbackType:taskIdentifier:args:
args
setArgs:
hasBeenDrained
setHasBeenDrained:
decodeObjectOfClass:forKey:
decodeIntegerForKey:
encodeInteger:forKey:
_callbacks
initWithDelegate:
performCallback:
drainCallback:
addPendingCallbackToFront:
addPendingCallback:forceWakeup:
performAllCallbacks
drainCallbacksForTaskIdentifier:
count
insertObject:atIndex:
objectAtIndexedSubscript:
backgroundTask:willBeginDelayedRequest:reply:
openFileAtPath:mode:withReply:
backgroundSessionDidFinishAppWake:reply:
backgroundSessionDidStartAppWake:reply:
backgroundDownloadTask:didFinishDownloadingToURL:reply:
initWithDispatchQueue:
addOperationWithBlock:
maxConcurrentOperationCount
@"NSURL"
@"NSMutableDictionary"
@"NSDate"
@"NSObject<OS_dispatch_queue>"
@32@0:8@16@?24
v16@0:8
v32@0:8Q16@24
d16@0:8
v24@0:8d16
@16@0:8
v24@0:8@16
@?16@0:8
v24@0:8@?16
@"NSString"
@"PDURLSessionProxySessionMessage"
{?="port"b1}
@24@0:8^{_NSZone=}16
B16@0:8
v20@0:8I16
v20@0:8B16
B24@0:8@16
Q16@0:8
I16@0:8
@"NSURLSessionTask"
@24@0:8@16
v32@0:8Q16Q24
@"PDURLSessionProxyCredential"
@"PDURLSessionProxyTaskMessage"
{?="disposition"b1}
i16@0:8
v20@0:8i16
@20@0:8i16
i24@0:8@16
@"NSData"
{?="delegateImplementsDidReceiveResponse"b1"delegateImplementsSessionAuthChallenge"b1"delegateImplementsTaskAuthChallenge"b1"delegateImplementsWillPerformRedirection"b1"delegateImplementsWillSendRequest"b1"supportsRedirects"b1}
@"NSURLSessionConfiguration"
@"<NDBackgroundSessionClient><PDURLSessionCompatibilityProtocol><NSXPCProxyCreating>"
@"NSXPCConnection"
@"NSMutableSet"
@"NSDictionary"
@"NSURLSession"
@"<PDURLSessionProxyClientDelegate>"
v48@0:8@"NSURLSession"16@"NSURLSessionTask"24@"NSURLResponse"32@?<v@?B@"NSDictionary">40
v44@0:8@"NSURLSession"16@"NSString"24i32@?<v@?i>36
v28@0:8@"NSURLSession"16B24
v48@0:8@"NSURLSession"16@"NSString"24Q32@?<v@?i{?=qi}>40
v44@0:8@16@24i32@?36
v28@0:8@16B24
v48@0:8@16@24Q32@?40
v48@0:8@16@24@32@?40
v32@0:8@"NSURLSession"16@"NSError"24
v40@0:8@"NSURLSession"16@"NSURLAuthenticationChallenge"24@?<v@?q@"NSURLCredential">32
v24@0:8@"NSURLSession"16
v32@0:8@16@24
v40@0:8@16@24@?32
#16@0:8
@24@0:8:16
@32@0:8:16@24
@40@0:8:16@24@32
B24@0:8#16
B24@0:8@"Protocol"16
B24@0:8:16
Vv16@0:8
^{_NSZone=}16@0:8
@"NSString"16@0:8
v40@0:8@"NSURLSession"16@"NSURLSessionDataTask"24@"NSError"32
v32@0:8@"NSURLSession"16@"NSURLSessionDataTask"24
v40@0:8@16@24@32
v48@0:8@"NSURLSession"16@"NSURLSessionDataTask"24@"NSURLResponse"32@?<v@?q>40
v40@0:8@"NSURLSession"16@"NSURLSessionDataTask"24@"NSURLSessionDownloadTask"32
v40@0:8@"NSURLSession"16@"NSURLSessionDataTask"24@"NSURLSessionStreamTask"32
v40@0:8@"NSURLSession"16@"NSURLSessionDataTask"24@"NSData"32
v48@0:8@"NSURLSession"16@"NSURLSessionDataTask"24@"NSCachedURLResponse"32@?<v@?@"NSCachedURLResponse">40
v48@0:8@"NSURLSession"16@"NSURLSessionTask"24@"NSURLRequest"32@?<v@?q@"NSURLRequest">40
v32@0:8@"NSURLSession"16@"NSURLSessionTask"24
v56@0:8@"NSURLSession"16@"NSURLSessionTask"24@"NSHTTPURLResponse"32@"NSURLRequest"40@?<v@?@"NSURLRequest">48
v48@0:8@"NSURLSession"16@"NSURLSessionTask"24@"NSURLAuthenticationChallenge"32@?<v@?q@"NSURLCredential">40
v40@0:8@"NSURLSession"16@"NSURLSessionTask"24@?<v@?@"NSInputStream">32
v56@0:8@"NSURLSession"16@"NSURLSessionTask"24q32q40q48
v40@0:8@"NSURLSession"16@"NSURLSessionTask"24@"NSURLSessionTaskMetrics"32
v40@0:8@"NSURLSession"16@"NSURLSessionTask"24@"NSError"32
v56@0:8@16@24@32@40@?48
v56@0:8@16@24q32q40q48
v64@0:8@"NSURLRequest"16@"NSURLRequest"24@"NSString"32Q40@"NSUUID"48@?<v@?B>56
v80@0:8@"NSURLRequest"16@"NSURLRequest"24@"NSURL"32@"NSData"40Q48@"NSUUID"56@"NSDictionary"64@?<v@?B>72
v56@0:8@"NSURLRequest"16@"NSURLRequest"24Q32@"NSUUID"40@?<v@?B>48
v48@0:8@"NSData"16Q24@"NSUUID"32@?<v@?B>40
v24@0:8Q16
v32@0:8Q16@?<v@?@"NSData">24
v32@0:8Q16@"NSDictionary"24
v32@0:8@"NSString"16Q24
v32@0:8q16Q24
v32@0:8d16Q24
v24@0:8@"NSString"16
v24@0:8@?<v@?>16
v48@0:8Q16@"NSDictionary"24@"NSString"32@?<v@?B>40
v96@0:8Q16@"NSURL"24@"NSURL"32@"NSURL"40@"NSString"48@"NSData"56@"NSDictionary"64Q72@"NSUUID"80@?<v@?B>88
v88@0:8Q16@"NSArray"24@"NSString"32@"NSData"40@"NSDictionary"48@"NSString"56Q64@"NSUUID"72@?<v@?B>80
v64@0:8@16@24@32Q40@48@?56
v80@0:8@16@24@32@40Q48@56@64@?72
v56@0:8@16@24Q32@40@?48
v48@0:8@16Q24@32@?40
v32@0:8Q16@?24
v32@0:8@16Q24
v48@0:8Q16@24@32@?40
v96@0:8Q16@24@32@40@48@56@64Q72@80@?88
v88@0:8Q16@24@32@40@48@56Q64@72@?80
@56@0:8@16@24@32@40@48
q28@0:8Q16B24
q16@0:8
@24@0:8Q16
B24@0:8Q16
Q24@0:8@16
v36@0:8@16S24@?28
v28@0:8@16S24
v40@0:8@16Q24@?32
v32@0:8Q16d24
v40@0:8Q16@24@32
v44@0:8Q16@24B32B36I40
v40@0:8@16@24q32
v32@0:8q16@24
{?="priority"b1}
@"PBCodable"
@28@0:8@16S24
S16@0:8
v20@0:8S16
@"IDSService"
v64@0:8@"IDSService"16@"IDSAccount"24@"NSData"32@"NSString"40@"NSString"48@"IDSMessageContext"56
v40@0:8@"IDSService"16@"NSString"24@"NSArray"32
v56@0:8@"IDSService"16@"IDSAccount"24@"NSDictionary"32@"NSString"40@"IDSMessageContext"48
v56@0:8@"IDSService"16@"IDSAccount"24@"NSData"32@"NSString"40@"IDSMessageContext"48
v56@0:8@"IDSService"16@"IDSAccount"24@"IDSProtobuf"32@"NSString"40@"IDSMessageContext"48
v56@0:8@"IDSService"16@"IDSAccount"24@"NSURL"32@"NSString"40@"IDSMessageContext"48
v64@0:8@"IDSService"16@"IDSAccount"24@"NSURL"32@"NSDictionary"40@"NSString"48@"IDSMessageContext"56
v56@0:8@"IDSService"16@"IDSAccount"24q32@"NSString"40@"IDSMessageContext"48
v32@0:8@"IDSService"16@"NSSet"24
v32@0:8@"IDSService"16@"NSArray"24
v52@0:8@"IDSService"16@"IDSAccount"24@"NSString"32B40@"NSError"44
v60@0:8@"IDSService"16@"IDSAccount"24@"NSString"32B40@"NSError"44@"IDSMessageContext"52
v56@0:8@"IDSService"16@"IDSAccount"24@"NSString"32q40q48
v48@0:8@"IDSService"16@"IDSAccount"24@"NSString"32@40
v56@0:8@"IDSService"16@"IDSAccount"24@"NSString"32@"NSString"40@48
v48@0:8@"IDSService"16@"IDSAccount"24@"IDSSession"32@"NSString"40
v56@0:8@"IDSService"16@"IDSAccount"24@"IDSSession"32@"NSString"40@"NSDictionary"48
v56@0:8@"IDSService"16@"IDSAccount"24@"IDSSession"32@"NSString"40@"NSData"48
v40@0:8@"IDSService"16@"IDSAccount"24@"IDSGroupSessionParticipantUpdate"32
v24@0:8@"IDSService"16
v40@0:8@"IDSService"16@"IDSDevice"24@?<v@?>32
v64@0:8@16@24@32@40@48@56
v56@0:8@16@24@32@40@48
v56@0:8@16@24q32@40@48
v52@0:8@16@24@32B40@44
v60@0:8@16@24@32B40@44@52
v56@0:8@16@24@32q40q48
v48@0:8@16@24@32@40
q32@0:8@16S24B28
q24@0:8@16
Q24@0:8q16
B32@0:8Q16q24
v64@0:8@16S24@28@36B44q48@?56
v44@0:8@16@24S32@36
v36@0:8@16B24@28
@"PDURLSessionProxyRequest"
{?="taskSequenceNumber"b1}
@"PDURLSessionProxyResponse"
@"<NDSessionManagerDelegate>"
v32@0:8@"NDBackgroundSession"16@?<v@?>24
v32@0:8@16@?24
v56@0:8@"NSURLSessionConfiguration"16@"<NDBackgroundSessionClient>"24@"NSURL"32@"NSDictionary"40@?<v@?@"<NDBackgroundSessionProtocol>"@"NSDictionary"B>48
v32@0:8@"NSString"16@?<v@?>24
v24@0:8@?<v@?@"NSArray">16
@36@0:8@16@24B32
@24@0:8^B16
B32@0:8@16@24
@"NDCredentialStorage"
@"NDApplication"
@"NSMutableArray"
@"NDCallbackQueue"
@"<NSXPCProxyCreating><NDBackgroundSessionClient>"
@"<NDBackgroundSessionDelegate>"
@"NSUUID"
@"<NSXPCProxyCreating><NDBackgroundSessionClient>"16@0:8
v40@0:8@"NSURLSession"16@"NSURLSessionDownloadTask"24@"NSURLResponse"32
@"NSURL"32@0:8@"NSURLSession"16@"NSURLSessionDownloadTask"24
@32@0:8@16@24
v48@0:8@"NSURLSession"16@"NSURLSessionTask"24@"NSURLRequest"32@?<v@?@"NSURLRequest">40
v40@0:8@"NSURLSession"16@"NSURLSessionTask"24q32
v36@0:8@"NSURLSession"16@"NSURLSessionTask"24B32
v36@0:8@16@24B32
v40@0:8@"NSURLSession"16@"NSURLSessionDownloadTask"24@"NSURL"32
v56@0:8@"NSURLSession"16@"NSURLSessionDownloadTask"24q32q40q48
v48@0:8@"NSURLSession"16@"NSURLSessionDownloadTask"24q32q40
v48@0:8@16@24q32q40
v48@0:8@"NSURLSession"16@"NSURLSessionDataTask"24@"NSData"32@?<v@?>40
v24@0:8@"NSError"16
v32@0:8@"NSError"16@?<v@?q@"NSURLCredential">24
@"NSString"24@0:8Q16
v24@0:8@"NDApplication"16
d24@0:8d16
@28@0:8@16B24
@84@0:8@16@24B32@36@44@52@60@68@76
@20@0:8B16
@24@0:8q16
@32@0:8@16^B24
B40@0:8@16@24@32
v48@0:8@16Q24@32B40B44
B20@0:8B16
q20@0:8B16
v28@0:8Q16B24
@32@0:8@16Q24
B32@0:8@16q24
v44@0:8@16@24Q32B40
B24@0:8^{__SecTrust=}16
{?="version"b1}
{?="continueLoad"b1}
B32@0:8@"NSXPCListener"16@"NSXPCConnection"24
^{__CFRunLoopSource=}
v32@0:8@?16Q24
v32@0:8@?16q24
v32@0:8^{__SCDynamicStore=}16^{__CFArray=}24
@"NSObject<OS_xpc_object>"
v24@0:8@"NSCoder"16
@24@0:8@"NSCoder"16
v40@0:8@16^@24^@32
#24@0:8S16B20
@32@0:8#16@24
v24@0:8q16
{?="streamErrorCode"b1"streamErrorDomain"b1}
v24@0:8:16
@"NSObject<OS_dispatch_source>"
@"NDSpringBoardApplication"
{?="reason"b1}
{?="shouldCancel"b1}
v32@0:8@"PDURLSessionProxyClient"16@?<v@?>24
@"<NDCredentialStorageDelegate>"
{?="hasBodyStream"b1}
{?="bytesSent"b1"totalBytesExpectedToSend"b1"totalBytesSent"b1}
{?="taskIdentifier"b1}
@"__NSCFURLSessionTaskInfo"
@80@0:8@16@24@32@40@48q56Q64@72
@"PDURLSessionProxyAuthChallenge"
{?="code"b1"version"b1}
v40@0:8@"NDSessionManager"16@"NSString"24@?<v@?>32
v24@0:8@"NSArray"16
v32@0:8@"NSArray"16@"NSArray"24
@"BKSApplicationStateMonitor"
@"BKSSystemService"
{os_unfair_lock_s="_os_unfair_lock_opaque"I}
I24@0:8@16
B36@0:8@16I24@28
{?="idsPriority"b1"sequenceNumber"b1}
@"PDURLSessionProxyError"
v24@0:8@?<v@?Q@"NSError">16
v32@0:8@"NSData"16@?<v@?@"NSError"B>24
v24@0:8@?<v@?@"NSError">16
v32@0:8@"NSError"16@?<v@?@"NSError">24
@"<SZExtractorDelegate>"16@0:8
v24@0:8@"<SZExtractorDelegate>"16
v32@0:8@"NSString"16@?<v@?Q@"NSError">24
@"NSArray"
@36@0:8i16Q20@28
@"<NDCallbackQueueDelegate>"
[Disk Metrics] file writing error: %@
[Disk Metrics] file reading error: %@
%{public}@ client responded to willSendRequest callback with request %@, file handle %@
Need socket for host %@ port %u
invalidateWithReply: for %@
%{public}@ setPriority:forTaskWithIdentifier priority = %lld
%{public}@ has policy restrictions for client %@
%{public}@ failed since client %@ is not allowed to use network by policy
%{public}@ resumeTaskWithIdentifier, props %@
%{public}@ has restrictions since process is not eligible (likely in background). PID of client is %d
%{public}@ unrestricted (%d). PID of client is %d
Client %@ tried to set _sourceApplicationBundleIdentifier but is missing the com.apple.private.network.socket-delegate entitlement
Client %@ tried to set _sourceApplicationSecondaryIdentifier but is missing the com.apple.private.network.socket-delegate entitlement
Client %@ tried to set _sourceApplicationAuditTokenData but is missing the com.apple.private.network.socket-delegate entitlement
Client %@ tried to set _maximumWatchCellularTransferSize but is missing the necessary entitlement
Failed to create dict from ATS context error=%@
Failed to create valid ATS dictionary from context
Failed to create data from ATS dict error=%@
ATS data updated for client %@
ATS context not updated for client %@
%{public}@ suspendTaskWithIdentifier
%{public}@ cancelTaskWithIdentifier
Task <%{public}@>.<%lu> for <%@> dataTaskWithRequest request = %@
Session %@ changing UUID since remote device re-started. New UUID: %@
Session %@ already has an outstanding task with identifier %lu
Received proxy transfer request %@ with a non-http URL scheme. Rejecting request.
Got socket %d, error %@
%{public}@ is being serviced by %{public}@ on paired device
%{public}@ failed to get taskInfo, replyMessage %@
%{public}@ completed with error %@ [%ld]
%{public}@ client acknowledged task completion
%{public}@ watchdog timer fired
Adjusting resource timer by %f seconds to account for actual start time
%{public}@ resource timer fired
%{public}@ getAuthHeadersForResponse
%{public}@ waiting for connection with reason %lld
Session %@ becameInvalid
Waiting for local session invalidation before delivering invalidation callback
Session %@ received unexpected BecameInvalid message
%{public}@ willRetry after error %@ [%ld]
%{public}@ didReceiveData of length %lu
%{public}@ didReceiveResponse %@
%{public}@ client responded to didReceiveResponse callback with disposition %d
%{public}@ willPerformHTTPRedirection response %@, new request %@
%{public}@ client responded to redirect with request %@
%{public}@ needs new body stream
%{public}@ received file handle %@ (%d) from client
%{public}@ willSendRequestForEstablishedConnection request = %@
%{public}@ didReceiveChallenge %@
%{public}@ will re-send task-specific message once devices are re-connected, or after 10 seconds is devices are connected
%{public}@ forcing -997 error since message pertaining to that task failed to send
%{public}@ re-sending message. Devices are connected.
%{public}@ waiting until we get a notification that devices are nearby before re-sending message, since devices not nearby after 10 seconds
PDURLSessionProxyClient Session %@ received message with non-matching session UUID; dropping message
Created stream with file descriptor: %d
%{public}@ using fd %d for body stream
%{public}@ encountered error %d reading from body stream
%{public}@ read body stream data of length %lu
Read bytes from pipe fd %d when current expected fd is %d
Session %@ changing UUID and re-sending CreateSession message since we're re-sending a task message and the initial CreateSession message failed to send. New UUID: %@
XPC Connection for %@ invalidated
Invalidating session %@ since client exited
Using bundle ID %@ for client source application audit token with pid %d (client bundle %@)
Failed to get bundle ID for client source application audit token with pid %d (client bundle %@)
Session %@ using UUID of %@
Failure trying to unarchive file at %@ error: %@ [%d]
Error %d renaming item at %@ to %@
Error %d renaming item at %@ to %@. Won't try to unarchive.
SIGTERM received, shutting down.
%@: didSwitchActivePairedDevice
%@: activeAccountsChanged: %@
%@::%@ success = %c, identifier = %{public}@, error = %@ [%ld]
Failed to send PDURLSessionProxy startup message, error %@
%@::%@ outgoingResponseIdentifier = %{public}@, type = %u, isResponse = %c, data length = %lu
%@ received protobuf of type %u which could not be decoded! isResponse = %c, data length = %lu
Received PDURLSession Startup message with launchUUID %@
Received PDURLSessionProxy message with new launchUUID %@
Dropping NSURLSessionProxy message with old launchUUID %@
Received PDURLSessionProxy Startup message (without a launchUUID)
%{public}@ receiving NSURLSession proxy message, identifier = %{public}@, type = %u, isReply = %c, data length = %lu
Incoming (non-reply) message with identifier %{public}@ has priority %lld and sequence number %llu
Received a reply with identifier %@ but don't have a corresponding reply block
Subclass did not handle message send failure for message %@
Subclass did not handle message %@ of type %u
%@::%@ type = %u, connected = %c, isReply = %c, sourceApplication = %@, msgTO = %ld
Unable to determine source application for message
Failed to send message! Type = %u, error = %@ [%ld]
%{public}@ sent NSURLSessionProxy message, identifier = %{public}@, type = %u, isReply = %c, data length = %lu, result = %c
Timed out waiting for reply for message, identifier = %{public}@, type = %u
Received a message of priority %ld with lower sequence number %llu than existing sequence number %llu. Dropping message.
PDURLSessionProxyService setting preferInfraWiFi to %c
%@ Updated device state connected = %c
%@ sent startup message with identifier %@
sendProtobuf: returned NO for PDURLSessionProxy startup message, error %@ [%ld]
%@: Device became active
%@: Devices unpaired
CacheDelete callback registration succeeded.
CacheDelete callback registration failed!
CacheDelete request - Purged %@ [%zu bytes]
Purged %lld bytes on volume %@.  CacheDelete requested %lld.
Informing CacheDelete purgable bytes %lld on %@
Obliterating session manager for bundle ID: %@
Removing session with identifier: %@ for bundle id: %@
obliterateAllSessions for bundleID %@
Signalled that it is okay to send pending callbacks for session %@ that we have no record of. This shouldn't happen
releaseAssertionForSession: %@
sendPendingCallbacksForIdentifier: %@
Asked to send pending callbacks for session %@ that we have no record of. This shouldn't happen
Session with identifier: %@ for bundle id: %@ already has a connected client, returning nil proxy object to client
Reconnecting session with identifier: %@ for bundle id: %@
Creating session with identifier: %@ for bundle id: %@
Coudn't create session with identifier: %@ for bundle id: %@
Client specified shared container identifier %@. %@ can access: %d
Client %@ tried to specify a shared container that it cannot access: %@
Client tried to set _sourceApplicationBundleIdentifier but is missing the %@ entitlement
Client tried to set _sourceApplicationSecondaryIdentifier but is missing the %@ entitlement
Client tried to set _sourceApplicationAuditTokenData but is missing the %@ entitlement
Client tried to set _respectsAllowsCellularAccessForDiscretionaryTasks but is missing the %@ entitlement
Client tried to set _allowsPowerNapScheduling but is missing the %@ entitlement
Client tried to set _connectionPoolName but is missing the %@ entitlement
Client tried to set _directoryForDownloadedFiles but does not have access to directory %@
Client tried to set _duetPreauthorized but is missing the %@ entitlement
Client tried to set _maximumWatchCellularTransferSize but is missing the necessary entitlement
Ending boost activity from %@
Capturing boost activity from %@
Not restoring session with identifier: %@ for bundleID: %@ since it does not have any tasks
Coudn't restore session with identifier: %@ for bundle id: %@
Missing or invalid configuration.plist for bundleID: %@, sessionID: %@. Removing session directory
No directory for bundleID: %@, sessionID: %@
Launching application %@ since we could not restore session %@
Companion is %@ available [%c]
%{public}@ getAuthHeadersForResponse for %@ _sendsLaunchEvents=%s [_clientApplication supportsWakes]=%s
%{public}@ waking %@ for auth headers
%{public}@ getAuthHeadersForResponse does not have a remote object and does not support app wakes, canceling.
%{public}@ received auth headers for response, continueLoad: %d
Failed to communicate with HTTP Authenticator for Client %@
Need file descriptor for file at path %@
Client %@ does not support app wakes, cannot get file descriptor for download file!
Client %@ does not support app wakes, but it is still running. Will attempt to get file descriptor for download file.
%{public}@ download for client %@ received response, status code: %d
%{public}@ for client %@ conditions changed - satisfied: %d
%{public}@ for client %@ is waiting for connection - reason: %lld
%{public}@ for client %@ _willSendRequestForEstablishedConnection
Client does not implement _willSendRequestForEstablishedConnection, so using proposed request
%{public}@ established a connection which requires the client to be running, but it isn't running and doesn't support app wakes. Canceling the task.
Perhaps the client %@ was uninstalled?
%{public}@ using proposed request since the client application is not running and doesn't support wakes
%{public}@ didResumeAtOffset: %lld expectedTotalBytes: %lld
%{public}@ finished downloading to %@
%{public}@ became download task
%{public}@ did receive data (%lld of %lld total bytes)
%{public}@ received data and there is no connected client. Canceling task.
%{public}@ didReceiveResponse: %@, status code: %d
%{public}@ received data task didReceiveResponse callback and there is no connected client. Canceling task.
%{public}@ client responded to didReceiveResponse with disposition %d
%{public}@ client disconnected with didReceiveResponse outstanding, responding with a cancel disposition
%{public}@ for client %@ will be retried after error %@ - code: %ld
%{public}@ failed to retry
%{public}@ completed with error %@ [%ld]. C(%c)
%{public}@ for client %@ was cancelled
%{public}@ for client %@ completed with error - code: %ld
%{public}@ for client %@ completed successfully
%{public}@ modifying conditional connection properties since new request %@ is to a different host than previous request %@
%{public}@ willPerformHTTPRedirection, response: %@, new request: %@
%{public}@ didReceiveChallenge: %@ protection space: %@ for client %@ received auth challenge with type %@
%{public}@ performing Extended Validation Trust evaluation
%{public}@ Extended Validation Trust evaluation succeeded
%{public}@ Extended Validation Trust evaluation failed
%{public}@ client doesn't implement session-level or task-level auth challenge delegate, performing default handling for auth challenge
%{public}@ client doesn't implement task-level auth challenge delegate, performing default handling for auth challenge
%{public}@ client is not running and doesn't support app wakes, performing default handling for auth challenge
%{public}@ client is not running and trust is valid, performing default handling for auth challenge
%{public}@ client is not running and challenge has a previousFailureCount of 0 and a proposedCredential, performing default handling for auth challenge
Invalid trust status: %ld
Extended trust validation failed
Session %@ didBecomeInvalidWithError: %@ [%ld]
InvalidateWithReply: for session %@ bundle ID %@
Cleaning up and invalidating immediately since there are no tasks
%{public}@ setting discretionaryOverrride to %c
%{public}@ attempted to set discretionaryOverrride to %c but lacks required entitlement %@
%{public}@ setting limit of %lld bytes per second
%@ tried to set the loading priority of a task but is missing the %@ entitlement
%{public}@ setting loading priority to %f
%@ tried to set the priority of a task but is missing the %@ entitlement
%{public}@ setting priority to %ld
%{public}@ setPropertyOnStreamWithIdentifier, client %@ property %@
%{public}@ cancelling, as we are low on disk space
%{public}@ resuming, QOS(0x%x)
%{public}@ unable to get the space available on disk
%{public}@ received resume data
Task <%{public}@>.<%lu> dataTaskWithRequest: %@
Task <%{public}@>.<%lu> uploadTaskWithRequest: %@ fromFile: %@
Received a background upload request for a file that the client cannot read: %@ from %@
Task <%{public}@>.<%lu> downloadTaskWithRequest: %@
Received an unsafe request for background download: %@ from %@
Received a background download request from unsafe resume data from %@
Couldn't create task or taskInfo: task = %@, taskInfo = %@
%{public}@ enqueueing
%{public}@ adding delay of %f
%{public}@ is duet preauthorized
Not waking up client %@ since sessionSendsLaunchEvents is NO
Not waking up client %@ since it doesn't support app wakes
Not waking up client %@ since session is obliterated
Not waking up client %@ since it's already connected
Not waking up client %@ since background updates are not enabled
Waking up the client app: %@
Failed to wake app: %@
%{public}@ skipping acknowledgement teardown since it's not actually complete
Couldn't deliver auth challenge to client, performing default handling
%{public}@ too many bytes for high powered interface: %lld.
Failed to consume sandbox extension %s for fileURL %@
Error copying upload file: %@ [%ld]
%{public}@ suspending
%{public}@ cannot resume because task: %@ or taskInfo: %@ is nil
%{public}@ resuming
%{public}@ will begin
%{public}@ cannot handle delayed request callback because task: %@ or taskInfo: %@ is nil
%{public}@ already replied to delayed request callback - not calling again
%{public}@ receiving delayed request callback
%{public}@ client is not running and doesn't support wakes, continuing load for delayed request
%{public}@ skipping delayed request callback - delegate not implemented
%{public}@ using new request from delayed request callback
%{public}@ will be canceled due to delayed request callback
%{public}@ continuing load from delayed request callback
%{public}@ should not begin before %@
%{public}@ can begin immediately - begin date is in past
%{public}@ has not requested a begin delay
%{public}@ can now begin - earliest begin date satisfied
%{public}@ no longer has a valid task or taskInfo, no need to begin
%{public}@ ignoring stale delay begin timer
%{public}@ for %@ is overriding discretionary status by request - forcing to %c
%{public}@ for %@ is overriding discretionary status - forcing to %c
%{public}@ current discretionary status for %@ is non-discretionary, since the app is being debugged
%{public}@ current discretionary status for %@ is non-discretionary, since nsurlsessiond is running in EDU sync mode
%{public}@ current discretionary status for %@ is discretionary (opt-in: %d)
%{public}@ current discretionary status for %@ is non-discretionary
Session: %@ get tasks for reconnection: %@
Received signal to deliver pending events for client session: <%@>.<%@>
Delivering pending events for client session: <%@>.<%@>
Application %@ is not handling a background URLSession but we still received a signal to deliver pending events
Delivering pending events immediately for client session: <%@>.<%@>. Signalled already: %d, isHandlingBackgroundSession: %d
Waiting for notification to deliver pending events for client session: <%@>.<%@>
%{public}@ not resumed but client disconnected, terminating it with timeout
%{public}@ not resumed but client disconnected, resuming it implicitly
%{public}@ will retry after %lld seconds
Download directory for bundle %@ has moved to %@, but saved download file path is %@. Need to fix download path
New download path: %@
%{public}@ completed with error %@ [%ld] (was active before nsurlsessiond exit)
Couldn't recreate existing task with identifier: %@ in session: <%@>.<%@>
Exception caught while restoring a task: %@
%{public}@ restoring, which had never been started, will resume implicitly
%{public}@ restored but never started, terminating with timeout
%{public}@ error creating resume data: %@
%{public}@ could not create resume data. The server might not support resumable downloads. Will retry full download
%{public}@ download created from resume data
%{public}@ couldn't create new task. task: %@, path: %@
%{public}@ couldn't create new task becuase adjusted request is nil, taskInfo.currentRequest = %@
Session <%@>.<%@> download path %@ did not exist, recreating.
%{public}@ potentially discretionary, re-scheduling, was discretionary: %d, is now discretionary: %d
%{public}@ %f seconds past start time, new delay: %f, new window: %f
Obliterating session: <%@>.<%@>
Application %@ was reinstalled, adjusting download paths
Couldn't find out download directory for re-installed application %@. It must not have been re-installed properly. Obliterating session
PlugIn %@ connected to session <%@>.<%@>
Client %@ is a WatchKit extension for %@
Client %@ is acting on behalf of application %@, impersonatingSpringBoardApp: %d
Client %@ is a SpringBoard application
Client %@ is a daemon or non-SpringBoard application
Couldn't find out download directory for %@. Not creating session
Session <%{public}@> is for <%@>.<%@> using resource timeout: %f, request timeout: %f allowsCellularAccess: %d, allowsExpensiveAccess: %d [%d] _sourceApplicationBundleIdentifier: %@, _sourceApplicationSecondaryIdentifier: %@
Failed to get bundle ID for client with pid %d because it might not have the application-identifier entitlement
Received connection from %@
Received NSURLSessionProxy message type = %u, fullIdentifier = %@
NSURLSessionProxy message of type %u received for unknown session %@
Removing WiFi Auto-Association Client
Adding WiFi Auto-Association Client
WiFi Auto-Association Client %s required
SCDynamicStoreCreateRunLoopSource failed: %s [%d]
SCDynamicStoreSetNotificationKeys failed: %s [%d]
Simulating network change event since %lld seconds have passed
Will wake client %@ for session %@ if we receive a notification that it supports launch-on-demand
Attempting to launch client %@ for session %@
Couldn't launch application %@ because we don't have an xpc connection to UserEventAgent
Received a new connection from UserEventAgent! Canceling the old one
Updated Registered Launch-On-Demand Clients: %@
Created xpc listener: %@
Received xpc event
NDUserEventAgentConnection received connection
Could not break full NSURLSession identifier %@ into bundle ID and session ID components
Error %@ [%ld] deserializing auth headers
Failed to unarchive data of class %@, length %lu
Error getting caches directory: %@ [%ld]
Failed to set mode 700 on path %s.  errno=%d
Failed to convert %s to a data-vault directory.  errno=%d
Couldn't create directory at %@, error: %@ [%ld]
Failed to create data-vault directory.  errno=%d
Couldn't create directory.  Unable to extract C-string from path argument: %@
Couldn't create directory.  No path provided.
Error removing item at url: %@, error: %@ [%ld]
Error removing item at path: %@, error: %@ [%ld]
Resetting request delay for %@
Set request delay for %@ to %f
Resetting request delay and clearing pending wake requests for %@ since it came into the foreground
Application %@ has been in background for %lu seconds. Will reevaluate discretionary downloads
Application %@ has been in background for %lu seconds. Will reschedule uploads as discretionary
Application %@ has been in background for %lu seconds. Will reschedule downloads as discretionary
Resetting request delay and clearing pending wake requests for %@ since the first observer is being added
Removing session %@ for client %@
Client %@ reconnecting to existing session %@
Client %@ creating session with identifier %@
Client %@ sessionID %@ is on behalf of pid %d [%@]
Client %@ sessionID %@ is on behalf of %@
An XPC error occurred when obtaining the default credential: %@
An XPC error occurred when obtaining all credentials %@
An XPC error occurred when obtaining a credential: %@
%{public}@ canceling because of low throughput monitoring! Current throughput: %f bytes/sec, current threshold: %f bytes/sec, samples %@/%@
nsurlsessiond started
Bundle %@ uninstalled. Need to obliterate
Bundle %@ re-installed. Need to adjust download paths
Process with pid %d does not have a bundle ID, rejecting connection
Process with bundleID %@ [pid %d] does not have a bundle path, rejecting connection
<%@>.<%@> Lost connection to app -- connection interrupted or invalidated
Failed to write archive to path: %@
Bundle ID Archive %@ has unexpected format
NDSessionManager for client %@ was empty, not restoring
Application %@ is not installed, removing directory
No directory for bundleID: %@
Could not set attributes of directory at %@, error: %@ [%ld]
Non-directory file exists at: %@. Removing it.
Failed to open application, error: %@
Successfully opened app
Couldn't create process assertion for %@
We already have an assertion for bundleID: %@, sessionID: %@. This shouldn't happen.
took assertion for %@, session %@, uuid %@
Invalidating assertion for bundleID: %@. sessionID: %@
looking for background session %@ for bundle id %@
looking for background task completion for bundle id %@
%s assertion with reason %@ for bundle id %@
validating assertion %@
Application %@ no longer foreground
Application %@ entered foreground
Application %@ was suspended
Application %@ was quit in the app switcher
Background updates are on
Background updates were turned off
Background update setting for %@ was changed to %@
Notifying observers for %@ that background update setting was turned off
Notifying observers for %@ that background update setting was turned on
%{public}@ Updating configuration on daemon
%{public}@ initialized appleIDAuthenticator, status codes = %@
%{public}@ StreamingZip - not yet prepared for extraction while setting additional properties
%{public}@ StreamingZip - terminating lingering extractor from previous download attempt
%{public}@ StreamingZip - preparing for extraction to %@
%{public}@ Failed to prepare for extraction - timed-out.
%{public}@ StreamingZip - no path available.  Wait for init with resume-info for the path.
%{public}@ Object does not support SZExtractor protocol.  Dropping this object. Class=%@
%{public}@ StreamingZip - already prepared for extraction while setting additional properties
[Telemetry]: Assiging taskMetrics on the daemon side
%{public}@ Extractor prepare - Offset: %lld, error: %@ [%ld]
IPSec mode disabled - using IDS for proxied tasks
Acting on behalf of watch extension: %@, watch app: %@, companion app: %@
%{public}@ draining authentication challenge callback
%{public}@ draining willSendRequest callback
%{public}@ draining openFileAtPath callback
%{public}@ performing auth challenge callback, challenge %@
%{public}@ performing did start app wake callback.
%{public}@ performing did finish app wake callback.
%{public}@ performing will send request callback, request %@
Performing open file at path callback for path %@ mode %d
%{public}@ performing begin delayed request callback
%{public}@ performing get auth headers for response callback.
%{public}@ client responded to getAuthHeadersForResponse callback with continueLoad=%@, authHeaders=%@
%{public}@ failed to ask client for getAuthHeadersForResponse. Error=%@
%{public}@ client responded to delayed request callback with disposition %d
%{public}@ failed to ask client for delayed request disposition, continuing load
Client responded to open file callback with handle %@
%{public}@ client responded to will send request callback with request %@ handle %@
%{public}@ failed to ask client for modified request, using original proposed request
%{public}@ client responded to task challenge with disp %d, cred %@
%{public}@ client acknowledged file download
%{public}@ client acknowledged completion
zPLR
zPLR
