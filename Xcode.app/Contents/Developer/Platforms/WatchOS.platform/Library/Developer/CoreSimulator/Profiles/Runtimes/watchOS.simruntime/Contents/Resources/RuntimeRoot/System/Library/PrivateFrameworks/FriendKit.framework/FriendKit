@(#)PROGRAM:FriendKit  PROJECT:NanoPeople-1
v8@?0
FKFriendsManagerChangedNotification
FKFriendsChangedExternallyNotification
FKFriendsManagerPersonAdded
FKFriendsManagerPersonUpdated
FKFriendsManagerPersonDeleted
FKFriendsManagerPersonMoved
FKFriendsManagerDestinationStatusUpdatedNotification
FKFriendsManagerDestinationStatusUpdatedDestinationsKey
FKFriendsManagerGroupListChanged
FKFriendGroupTitleChangedExternallyNotification
FKFriendGroupTitleChangedNotification
FriendList
DidNormalizeFriendListDestinations
FKMaxGroupCount
FKGroupSize
FKEmptyTrailingGroupEnabled
FKFriendsChangedExternallyNotificationName
FKFriendGroupTitleChangedExternallyNotificationName
ETFriendGroupTitles
FKDeduplicateFriendListEnabled
FKRemoveDestinationlessFriendsEnabled
FKRefreshAgainstContactsOnInitEnabled
ABSequenceNumber
-[FKFriendsManager initWithDomain:]
com.apple.FriendKit.FKFriendsManager.Save
com.apple.FriendKit.FKFriendsManager.ChangeLog
-[FKFriendsManager reloadFriendList]
-[FKFriendsManager _loadFriendList]
 for the first time
-[FKFriendsManager _curatedFriendList]_block_invoke
FKFriendsManager.m
newFriend
v16@?0^v8
-[FKFriendsManager _curatedFriendList]
v32@?0@"FKPerson"8Q16^B24
NUMBERED_FAVORITES_FORMAT_STRING
FAVORITES
v32@?0@"FKFriendGroup"8Q16^B24
-[FKFriendsManager syncFriendGroup:]
com.apple.et.friendList.size
com.apple.et.friendGroups.count
-[FKFriendsManager _save]
-[FKFriendsManager setServiceName:]
-[FKFriendsManager refreshDestinationStatuses]_block_invoke
-[FKFriendsManager refreshDestinationStatuses]
-[FKFriendsManager idStatusUpdatedForDestinations:]
v32@?0@"NSString"8@"NSNumber"16^B24
com.apple.et.unreachableFriends.count
-[FKFriendsManager statusForPerson:requery:]
-[FKFriendsManager _queryDestinations:]_block_invoke
-[FKFriendsManager _idsQueryTimeoutTimerFired]
ETSkipHasGizmoCheck
v32@?0@8Q16^B24
-[FKFriendsManager _postChangeNotificationIfNecessary]_block_invoke
entry
entries
-[FKFriendsManager _friendsChangedExternally]
-[FKFriendsManager _groupTitleChangedExternally]
-[FKFriendsManager _addressBookChanged:]
AllValues
-[FKFriendsManager _updateFriends:]_block_invoke
-[FKFriendsManager _deduplicateFriendListIfNecessary]_block_invoke
-[FKFriendsManager _removeDestinationlessFriendsIfNecessary]_block_invoke
v24@?0Q8^B16
v32@?0@"FKPerson"8@"NSSet"16^B24
-[FKFriendsManager refreshAgainstAddressBook]
CNContactStoreDidChangeNotification
/System/Library/Frameworks/Contacts.framework/Contacts
unspecified
unknown
valid
invalid
FriendKitAddressBookQueue
-[FKAddressBook init]_block_invoke
mailto:
tel:
com.apple.ET
com.apple.FriendKit
FKPersonValuesChangedNotification
FKPersonUnlinkedFromAddressBookNotification
UnlinkedABGUID
abid
abguid
abdbuid
com.apple.FriendKit.FKPerson.metadata
ABRecordID
ABRecordGUID
ABDatabaseUID
Name
ReplyAs
Monogram
Metadata
-[FKPerson _updateFromDictionaryRepresentation:shouldLogUpdates:]
-[FKPerson _updateFromDictionaryRepresentation:shouldLogUpdates:]_block_invoke
-[FKPerson setPreferredReplyAs:]
<%@: %p [%@]:%@>
-[FKPerson _reconcile:canPostChangeNotification:shouldLogUpdates:]
v32@?0@8@16^B24
main
-[FKFriendGroup addFriend:error:]
-[FKFriendGroup setFriend:atPosition:error:]
-[FKFriendGroup removeFriendAtPosition:]
%s (%d) "Softlinking failure for CNContactStoreDidChangeNotification; we won't be able to listen for contact database changes."
%s (%d) "a friend list reload was requested"
%s (%d) "loaded friend list%@"
%s (%d) "friend list does not yet exist, starting with an empty list"
%s (%d) "friend list has%@ changes"
%s (%d) "processing %tu phone favorites for Digital Touch friend import"
%s (%d) "not importing phone favorite [%@ | %@] with record GUID %@; person was already imported"
%s (%d) "imported phone favorite [%@ | %@] with record ID %d and GUID %@"
%s (%d) "no phone favorites found to import to Digital Touch friends"
%s (%d) "phone favorites import complete with %tu Digital Touch friends"
%s (%d) @"%@ was moved to position %u in group %u"
%s (%d) "friend list saved"
%s (%d) "setting service name for reachability queries to %@"
%s (%d) "faking IDS status update"
%s (%d) "not starting batch query because high priority query is in progress for [ %@ ]"
%s (%d) "IDS statusues updated: %@"
%s (%d) "%@ has cached best status of: %@"
%s (%d) "faking IDS status update for [ %@ ]"
%s (%d) "IDS Query took too long to respond, clearing request queues"
%s (%d) "posting %@ with %u changelog %@"
%s (%d) "Handling external friends-changed event."
%s (%d) "Handling external group-title-changed event."
%s (%d) "received %@"
%s (%d) "[%@] [ABGUID=%@] was displaced and removed"
%s (%d) "deduplicating friend [%@] [ABGUID=%@] at index %lu as it is already present in the set of friend ABGUIDs analyzed so far: %@"
%s (%d) "culling friend [%@] [ABGUID=%@] since its destination set has become empty"
%s (%d) "refreshing friends against address book"
%s (%d) "FriendKit failed to create an address book instance: %@"
%s (%d) "%@ is being marked as updated due to abRecordGUID: %@ -> %@"
%s (%d) "%@ is being marked as updated due to abDatabaseUID: %@ -> %@"
%s (%d) "%@ is being marked as updated due to name: '%@' -> '%@'"
%s (%d) "%@ is being marked as updated due to allValues: %@ -> %@"
%s (%d) "%@ is being marked as updated due to _preferredReplyAs: '%@' -> '%@'"
%s (%d) "%@ is being marked as updated due to initials: [%@] -> [%@]"
%s (%d) "%@ is being marked as updated due to metadata: %@ -> %@"
%s (%d) "updating preferredReplyAs for [%@] (GUID %@): %@ -> %@"
%s (%d) "updating AB record ID for friend with GUID %@: %d -> %d"
%s (%d) "updating name for friend with GUID %@: [%@] -> [%@]"
%s (%d) "updated destinations for friend with GUID %@: %@ -> %@"
%s (%d) "friend needs a full AB lookup, searching with name: %@"
%s (%d) "found a best match using name (recordID = %d)"
%s (%d) "unable to find matching record using name"
%s (%d) "updating monogram for friend with GUID %@: [%@] -> [%@]"
%s (%d) "unable to add friend: capacity reached"
%s (%d) "unable to add friend at position %tu: out of range"
%s (%d) "setting empty slot in friend list at position %tu"
%s (%d) "setting [%@] in friend list at position %tu"
%s (%d) "Position %lu is already empty"
%s (%d) "Removing friend [%@] from position %lu in friend group"
zPLR
zPLR
zPLR
FKUtility
FKDelayedOperation
FriendKit
FKFriendsManager
FKFriendGroupDelegate
NSObject
FKAddressBook
IDSDestinationParsing
FKPerson
NSCopying
NSSecureCoding
NSCoding
FKFriendGroup
containsFriendWithABRecordGUID:
numberWithInt:
objectForKey:
allValuesForPerson:
count
numberWithUnsignedInteger:
setObject:forKey:
unsignedIntegerValue
setGivenName:
setFamilyName:
_nameFormatter
setStyle:
set_ignoresFallbacks:
stringFromPersonNameComponents:
length
localizedUppercaseString
isRomanString:
substringWithRange:
letterCharacterSet
rangeOfCharacterFromSet:
isEqualToString:
bytes
dataWithBytes:length:
base64EncodedStringWithOptions:
shouldAllowAddingFriendWithRecordID:withFriendListManager:addressBook:personValueCache:
personHasLinkages:
initialsForPerson:
initialForString:
compressPhoneNumberString:
hashFromData:
init
_queue_executeBlock
_queue_updateLastExecution
initWithQueue:delay:block:
execute
invalidate
.cxx_destruct
_block
_queue
_blockEnqueued
_lastExecution
_timerSource
_delay
countByEnumeratingWithState:objects:count:
fkMessageDestinationType
fkMessageCanonicalRawAddress
addObject:
fkSanitizedDestinationSet
dictionary
initWithDomain:
defaultCenter
_addressBookChanged:
addObserver:selector:name:object:
_personValuesChanged:
hashTableWithOptions:
strongToStrongObjectsMapTable
_createEmptyFriendList
_loadFriendList
_loadGroupTitles
removeObserver:
dealloc
initWithDelegate:groupSize:
null
setObject:atIndexedSubscript:
_postGroupListChangedNotification
array
_addEmptyGroup
_updateFriends:
markFriendListAsNormalized
_curatedFriendList
_addCuratedFriends:
save
_updateFriendGroups
_changeLogCount
refreshAgainstAddressBook
_cleanUpFriendListIfNecessary
_postChangeNotificationIfNecessary
_createAddressToPersonDictionary
_aggdLogFriendCount
_aggdLogFriendGroupCount
sharedInstance
entries
initWithFavorite:addressBook:
abRecordGUID
containsObject:
displayName
value
_abUid
performBlock:
removeObjectsInRange:
copy
enumerateObjectsUsingBlock:
localizedStringForKey:value:table:
setTitle:
stringWithFormat:
saveFriendGroupTitles
lastObject
_canAddFriendGroup
subarrayWithRange:
objectAtIndexedSubscript:
setFriends:
_shouldAddEmptyGroup
isFull
indexOfObject:
removeObjectAtIndex:
friends
_removeGroupAtIndex:
_numberOfFriendsInList:
_aggdSetValue:forScalarKey:
postNotificationName:object:
numberWithBool:
personFromContact:
_indexForPosition:inGroup:
removeObject:
_addEntryToChangeLogForPerson:changeType:
groupIndexContainingFriend:
_removePersonFromIdentifiersToPersonMap:
replaceObjectsInRange:withObjectsFromArray:
objectEnumerator
allObjects
addFriend:error:
_friendAtPosition:
isLikePerson:
objectAtIndex:
saveOperation
_save
setSaveOperation:
arrayWithArray:
dictionaryRepresentation
needsSave
setWithObject:
synchronizeUserDefaultsDomain:keys:
_incrementExternalChangePostCount
_notificationForExternalListChange
setNeedsSave:
setWithArray:
keyEnumerator
firstObjectCommonWithArray:
initWithDestinations:addressBook:
_storeSourcedPerson:
initWithABRecordGUID:addressBook:
_addPersonToIdentifiersToPersonMap:
allValues
removeObjectForKey:
removeAllObjects
fkMessageIDSIdentifier
_destinations
numberWithInteger:
setObject:forKeyedSubscript:
idStatusUpdatedForDestinations:
componentsJoinedByString:
_stopIDSQueryTimeoutTimer
addEntriesFromDictionary:
dictionaryWithObjects:forKeys:count:
postNotificationName:object:userInfo:
integerValue
enumerateKeysAndObjectsUsingBlock:
intersectsSet:
allKeys
_shouldBypassDestinationStatusCheck
_compareStatus:toStatus:
_queryDestinations:
setWithSet:
intersectSet:
setValue:forKey:
_idsQueryTimeoutTimerFired
scheduledTimerWithTimeInterval:target:selector:userInfo:repeats:
standardUserDefaults
persistentDomainForName:
boolValue
_copyAndResetChangeLog
object
name
isValid
initWithDictionaryRepresentation:addressBook:
isEqualToDictionaryRepresentation:
updateFromDictionaryRepresentation:
indexSetWithIndexesInRange:
enumerateObjectsAtIndexes:options:usingBlock:
removeObjectsAtIndexes:
_changeLogContainsFriendAdditionsOrUpdates
_deduplicateFriendListIfNecessary
_removeDestinationlessFriendsIfNecessary
indexSet
addIndex:
_removeFriendsAtIndices:
allValuesCount
friendGroups
positionOfFriendInGroup:
removeFriendAtPosition:
enumerateIndexesUsingBlock:
changeLog
dictionaryWithDictionary:
setChangeLog:
setByAddingObjectsFromSet:
intValue
_lastKnownAddressBookSequenceNumber
_addressBookSequenceNumberDidChange
refreshWithAddressBook:
_updateLastKnownAddressBookSequenceNumber:
title
managerForDomain:
setMaxGroupCount:domain:
setGroupSize:domain:
setEnableEmptyTrailingGroup:domain:
setFriendsChangedExternallyNotificationName:domain:
setFriendGroupTitleChangedExternallyNotificationName:domain:
setRefreshAgainstContactsOnInitEnabled:domain:
collapseChangeLogsIntoChangeLog:
isEqual:
class
self
performSelector:
performSelector:withObject:
performSelector:withObject:withObject:
isProxy
isKindOfClass:
isMemberOfClass:
conformsToProtocol:
respondsToSelector:
retain
release
autorelease
retainCount
zone
hash
superclass
description
debugDescription
TQ,R
T#,R
T@"NSString",R,C
friendGroup:didSetFriend:atPosition:
friendGroup:didRemoveFriend:atPosition:
friendGroup:didMoveFriends:
reloadFriendList
canAddFriend
syncFriendGroup:
purgeEmptyFriendGroups
shouldAllowAddingContact:withContactStore:personValueCache:
allPeople
addFriend:
isPersonFriend:
personLikePerson:
personWithDestinations:
personWithABRecordGUID:
setServiceName:
refreshDestinationStatuses
statusForPerson:requery:
reachableDestinationsForPerson:
_startIDSQueryTimeoutTimer
_firstEmptyPosition
_friendsChangedExternally
_groupTitleChangedExternally
setRefreshAgainstContactsEnabled:
isRefreshAgainstContactsEnabled
didLastLoadHaveChanges
setLastLoadHadChanges:
serviceName
_domain
_maxFriendGroups
_maxFriendsPerGroup
_shouldAddEmptyTrailingGroup
_friendsChangedExternallyNotificationName
_friendGroupTitleChangedExternallyNotificationName
_shouldDeduplicateFriendList
_shouldRemoveDestinationlessFriends
_friendList
_friendGroups
_npsManager
_addressBookRefreshTimer
_saveQueue
_changeLogQueue
_postCount
_sourcedPersons
_identifiersToPersonMap
_needsFriendListSync
_needsAddressBookRefresh
_didCompleteInitialLoading
_highPriorityDestinations
_pendingDestinations
_cachedStatuses
_idsQueryTimeoutTimer
_refreshAgainstContactsEnabled
_lastLoadHadChanges
_serviceName
_saveOperation
_changeLog
T@"FKDelayedOperation",&,N,V_saveOperation
T@"NSMutableDictionary",&,N,V_changeLog
refreshAgainstContactsEnabled
TB,N,GisRefreshAgainstContactsEnabled,V_refreshAgainstContactsEnabled
lastLoadHadChanges
TB,N,GdidLastLoadHaveChanges,V_lastLoadHadChanges
T@"NSString",&,N,V_serviceName
operationQueue
addressBook
setAddressBook:
setOperationQueue:
_addressBook
_operationQueue
T^v,N,V_addressBook
T@"NSObject<OS_dispatch_queue>",&,N,V_operationQueue
containsString:
decimalDigitCharacterSet
fkMessageIsIDSIdentifier
fkMessageIsRawAddress
fkMessageRawAddress
bundleWithIdentifier:
_updateFromDictionaryRepresentation:shouldLogUpdates:
_reconcile:canPostChangeNotification:shouldLogUpdates:
encodeObject:forKey:
encodeInt64:forKey:
decodeObjectOfClass:forKey:
decodeInt64ForKey:
arrayWithObjects:count:
decodeObjectOfClasses:forKey:
_setABRecordGUID:
isEqualToSet:
sharedMetadataQueue
isEqualToDictionary:
_metadataDictionary
dictionaryWithObjectsAndKeys:
primaryDestination
_allPhoneValuesInSet:
_allEmailValuesInSet:
_postChangeNotification
preferredNameForPerson:
_recordMatchDictionaryFromCFArray:followLinks:addressBook:
_bestRecordMatchFromDictionary:addressBook:
_allEmailValuesForRecord:
_allPhoneValuesForRecord:
addObjectsFromArray:
mutableCopy
_allValuesMatchScore:
supportsSecureCoding
addValue:withLabel:toPerson:property:
copyWithZone:
encodeWithCoder:
initWithCoder:
TB,R
setPreferredReplyAs:
metadataValueForKey:
setMetadataValue:forKey:
addMetadataEntriesFromDictionary:
removeAllMetadataValues
metadata
copyABPersonWithAddressBook:
abDatabaseUID
initials
hasName
hasUnreadMessages
preferredReplyAs
_primaryDestination
_initials
_phoneNumberCount
_emailAddressCount
_abRecordID
_abRecordGUID
_abDatabaseUID
_name
_allValues
_metadata
_hasUnreadMessages
_needsSave
_preferredReplyAs
TB,N,V_needsSave
TB,R,N,V_hasUnreadMessages
T@"NSString",&,N,V_preferredReplyAs
T@"NSDictionary",R,C,N
bundleIdentifier
UTF8String
initWithGroupSize:
setFriend:atPosition:error:
delegate
friendAtPosition:
componentsSeparatedByString:
positionOfFriend:
containsFriend:
displayNameForGroupWithSeparator:
selectedPosition
setSelectedPosition:
setDelegate:
_friendsManager
_groupSize
_title
_selectedPosition
_delegate
T@"<FKFriendGroupDelegate>",W,N,V_delegate
T@"NSString",&,N,V_title
TQ,N,V_selectedPosition
B44@0:8i16@20^v28@36
B24@0:8^v16
@16@0:8
@24@0:8^v16
@24@0:8@16
B24@0:8@16
@40@0:8@16d24@?32
v16@0:8
@"NSObject<OS_dispatch_queue>"
@"NSObject<OS_dispatch_source>"
v32@0:8Q16@24
v28@0:8B16@20
v32@0:8@16@24
#16@0:8
@24@0:8:16
@32@0:8:16@24
@40@0:8:16@24@32
B16@0:8
B24@0:8#16
B24@0:8:16
Vv16@0:8
Q16@0:8
^{_NSZone=}16@0:8
B24@0:8@"Protocol"16
@"NSString"16@0:8
v40@0:8@16@24Q32
v40@0:8@"FKFriendGroup"16@"FKPerson"24Q32
v32@0:8@"FKFriendGroup"16@"NSArray"24
v24@0:8@16
Q24@0:8@16
v24@0:8Q16
v32@0:8q16^{__CFString=}24
B40@0:8@16@24@32
@24@0:8Q16
^{__CFString=}16@0:8
q32@0:8q16q24
q28@0:8@16B24
Q32@0:8Q16@24
q16@0:8
i16@0:8
v20@0:8i16
v20@0:8B16
@"NSString"
^{__CFString=}
@"NSMutableArray"
@"NPSManager"
@"NSTimer"
@"NSHashTable"
@"NSMapTable"
@"NSMutableSet"
@"NSArray"
@"NSMutableDictionary"
@"FKDelayedOperation"
v24@0:8@?16
^v16@0:8
v24@0:8^v16
i44@0:8^v16^{__CFString=}24^v32i40
@24@0:8^{_NSZone=}16
v24@0:8@"NSCoder"16
@24@0:8@"NSCoder"16
@32@0:8@16^v24
B28@0:8@16B24
^v24@0:8^v16
v32@0:8^v16B24B28
@36@0:8^{__CFArray=}16B24^v28
f24@0:8@16
^v32@0:8@16^v24
@"NSNumber"
@"NSSet"
@32@0:8@16Q24
v32@0:8@16^I24
v40@0:8@16Q24^I32
@"<FKFriendGroupDelegate>"
