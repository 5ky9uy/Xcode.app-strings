CalDAVAccountVersion
CalDAVHostKey
CalDAVSchemeKey
CalDAVPortKey
CalDAVMainPrincipalUID
CalDAVPrincipals
CalDAVMobileAccountCollectionSetName
CalDAVMobileAccountSearchPropertySet
CalDAVMobileAccountSearchPropertySetKey_CoreDAV
CalDAVMobileAccountIsWritable
CalDAVMobileAccountServerVersion
CalDAVMobileAccountOverriddenServer
CalDAVMobileAccountOverriddenPort
CalDAVMobileAccountOverriddenScheme
CalDAVMobileAccountDelegatePrincipalPath
RDCalDAVMobileAccountRefreshDidCompleteNotificationName
CalDAVCalendarConstraints
CalDAVCalendarConstraintsNoComments
CalDAVCalendarConstraintsNoSchedule
CalDAVCalendarConstraintsNoScheduleNoComments
FutureLimitedCalDAVCalendarConstraints
FutureLimitedCalDAVCalendarConstraintsNoComments
FutureLimitedCalDAVCalendarConstraintsNoSchedule
FutureLimitedCalDAVCalendarConstraintsNoScheduleNoComments
WasUpgradedFromLegacy
SubscribedCalendars
v8@?0
CalDAVHTTPTraffic
MobileCalDAVAccount.m
Nothing to see here, buddy. Just turn around and leave quietly.
Account was deallocated while still refreshing. Ouch
absoluteString
%@://%@:%ld
http
subscribed 
VTODO
VEVENT
plist
v24@?0B8B12@"NSError"16
com.apple.mobilecal
com.apple.reminders
I didn't order a refresh, so why is there one on my menu?
We should have an actor at this point
com.apple.remindd.caldav.syncFinished
success
downloadedItemsCount
duration
errorCode
errorDomain
migration 
 (principal only)
 (calendars only)
parent
DAAccountHost
v20@?0B8@"NSError"12
/calendar/dav/%@/user/
/.well-known/caldav
/principals/
_caldav._tcp.
_caldavs._tcp.
calendar-access
ACCOUNT_UNIQUE_CONSTRAINT_FAILED_BODY_FORMAT_CALDAV
DataAccess
INVALID_PASSWORD_BODY_CALDAV
mailto:%@
v32@?0@8@"MobileCalDAVPrincipal"16^B24
PreferredCalendarUserAddresses
PreferredCalendarUserAddressesPerCalendar
FullName
CalendarHomeURL
PrincipalPath
DefaultCalendarURL
NotificationCollectionURL
NotificationCollectionCTag
InboxURL
InboxCTag
OutboxURL
DropBoxURL
NotificationsURLString
PushTransports
CalendarHomePushKey
APSTopic
APSEnv
APSSubscriptionURL
SupportsPush
Delegate
Writable
CanCreateCalendars
Enabled
ExpandPropertyReportSupported
SupportsCalendarUserSearch
SupportsFreebusy
SupportsSyncToken
QuotaFreeBytes
SupportedCalendarComponentSets
PrincipalURL
MobileCalDAVPrincipal.m
Cannot create a principal with a nil account
v24@?0@"NSDictionary"8^B16
v32@?0@"NSString"8@"NSSet"16^B24
CardDAViCloudDaemonAccount
v24@?0@"CalDAVCalendarUserAddress"8^B16
v32@?0@8@16^B24
Cannot create a calendar without a URL
DEFAULT_CALENDAR_NAME
DEFAULT_TASK_CALENDAR_NAME
APSD
PRODUCTION
production
SANDBOX
DEVELOPMENT
development
demo
mailto
v24@?0q8@"NSError"16
MobileCalUserAddressAddressURL
EventRef
ChangeID
ChangeRowid
ExternalID
UniqueIdentifier
SignificantAttributeChange
OldCalendarID
EntityType
%@ [%@] remObjectID=%@
(not loaded)
%@ [%@] remObjectID=%@ title="%@"
v16@?0@"REMListChangeItem"8
v16@?0@"REMReminderChangeItem"8
__untitled__
MobileCalDAVCalendar.m
ERROR: LOOKATME: _createActionsForItems: items.count (%@) does not equal reminders.count (%@).
ERROR: LOOKATME: _createActionsForItems: has ill-paired DA-items and backing reminders (item.objectID: %@, backing.objectID)
v32@?0@"REMSharee"8Q16^B24
v24@?0@"NSArray"8@"NSArray"16
ERROR: LOOKATME: [ForcedRefreshSyncForTruncatedHistory]: batchedItems.count (%@) does not equal batchedReminders.count (%@).
ERROR: LOOKATME: [ForcedRefreshSyncForTruncatedHistory]: has ill-paired DA-items and backing reminders (item.objectID: %@, backing.objectID)
ERROR: LOOKATME: prepareMergeSyncActions: batchedItems.count (%@) does not equal batchedReminders.count (%@).
ERROR: LOOKATME: prepareMergeSyncActions: has ill-paired DA-items and backing reminders (item.objectID: %@, backing.objectID)
-//Apple Inc.//iOS %@//EN
Can't create path: %@ (%@)
mailto:
DACalDAVREMReminderProxy.m
Invalid parameter not satisfying: %@
reminder
[reminder.objectID isEqual:self.objectID]
<%@: %p, objectID: %@, UID: %@, etag: %@>
%@:<%@>
MobileCalDAVAccountRefreshActor.m
There should not be any active task groups when the actor is deallocated
There should not be any active tasks when the actor is deallocated
CalDiagAccountSync
There should not be any active task groups at a state transition
There should not be any active tasks at a state transition
MobileCalDAVAccountRefreshActor tried to transition out of the finished state. What does that even mean?
We were told to refresh, but we already started a refresh!
v16@?0@"<CalDAVCalendar>"8
v32@?0@"NSString"8@"CalDAVMove"16^B24
We should have only finished once
cancelled
complete
RefreshActorStateBeginningRefresh
RefreshActorStateRefreshingAccountProperties
RefreshActorStateRefreshingDelegateAccountProperties
RefreshActorStateRefreshingPrincipalProperties
RefreshActorStateSendingMoves
RefreshActorStateSyncingRegularCalendars
RefreshActorStateUploadAttachments
RefreshActorStateSyncingSpecialCalendars
RefreshActorStateFinished
master
TimeChanged
DateChanged
v32@?0@"REMCalDAVNotification"8Q16^B24
v16@?0@"REMMutableCalDAVNotification"8
MobileCalDAVNotificationCalendar.m
Woah buddy- we shouldn't be setting a schedule tag on a notification item!
notificationContext
__untitled_shared__
dtstart
time
date
ACTION
ATTACH
ATTENDEE
CALSCALE
CATEGORIES
CLASS
COMMENT
COMPLETED
CONTACT
CREATED
DESCRIPTION
DTEND
DTSTAMP
DTSTART
DURATION
EXDATE
EXRULE
FREEBUSY
LAST-MODIFIED
LOCATION
METHOD
ORGANIZER
PERCENT-COMPLETE
PRIORITY
PRODID
RDATE
RECURRENCE-ID
RELATED-TO
REPEAT
REQUEST-STATUS
RESOURCES
RRULE
SEQUENCE
STATUS
SUMMARY
TRANSP
TRIGGER
TZID
TZNAME
TZOFFSETFROM
TZOFFSETTO
TZURL
VERSION
SCOPE
MAXRESULTS
MAXRESULTSSIZE
QUERY
QUERYNAME
TARGET
X-CALENDARSERVER-MASK-UID
ALTREP
CUTYPE
DELEGATED-FROM
DELEGATED-TO
ENCODING
FMTTYPE
FBTYPE
LANGUAGE
MEMBER
PARTSTAT
SCHEDULE-STATUS
RANGE
RELATED
RELTYPE
ROLE
RSVP
SCHEDULE-FORCE-SEND
SENT-BY
VALUE
UNTIL
COUNT
INTERVAL
BYMONTH
BYWEEKNO
BYYEARDAY
BYMONTHDAY
BYDAY
BYHOUR
BYMINUTE
BYSECOND
BYSETPOS
WKST
X-APPLE-DROPBOX
X-WR-ATTENDEE
X-WR-LANG
X-WR-RELCALID
X-WR-CALNAME
X-WR-CALDESC
X-WR-CALTYPE
X-WR-EXPIRATION
X-WR-TIMEZONE
X-WR-TEMPLATE
X-WR-ICONINFO
X-WR-PARENT
X-WR-UNTIL
X-WR-COUNT
X-WR-INTERVAL
X-WR-BYMONTH
X-WR-BYWEEKNO
X-WR-BYYEARDAY
X-WR-BYMONTHDAY
X-WR-BYDAY
X-WR-BYHOUR
X-WR-BYMINUTE
X-WR-BYSECOND
X-WR-BYSETPOS
X-WR-WEEKSTART
X-WR-CACHEDENDDATE
X-WR-ITIPSTATUSML
X-WR-ITIPSTATUSATTENDEEML
X-WR-ITIPALREADYSENT
X-WR-RSVPNEEDED
X-WR-DONTSCHEDULE
X-CALENDARSERVER-ACCESS
X-WR-ALARMUID
X-WR-OCCTRIGGER
X-WR-OCCDATEID
X-WR-CANCELID
X-WR-INVITATIONID
X-APPLE-SORT-ORDER
X-APPLE-FILENAME
X-APPLE-AUTOARCHIVED
X-APPLE-ATTACHMENTID
X-APPLE-CALENDAR-COLOR
X-APPLE-AUTO-REFRESH
X-APPLE-IGNORE-ON-RESTORE
X-APPLE-NEEDS-REPLY
X-CALENDARSERVER-ATTENDEE-COMMENT
X-CALENDARSERVER-ATTENDEE-REF
X-CALENDARSERVER-DTSTAMP
X-CALENDARSERVER-PRIVATE-COMMENT
EMAIL
X-APPLE-NEEDS-SERVER-CONFIRMATION
X-APPLE-EWS-ITEMID
X-APPLE-EWS-PERMISSION
X-APPLE-CHANGEKEY
X-APPLE-SELF-INVITED
X-NUM-GUESTS
ItemBridgeOptions
CalDAVChangeEvent
CalDAVChangeTask
CalDAVChangeAlarm
CalDAVChangeAttendee
CalDAVChangeOrganizer
CalDAVChangeAttachment
CalDAVChangeRecurrence
%@ - (path: %@)
DACalDAViCalItem.m
You should be calling the calendar specific version of this call
_rem_reminderItem
_rem_reminderItem.objectID should not be nil when trying to populate dataPayload
Given reminder does not match with this item's _rem_reminderItem.objectID (itemID: %@, reminderID: %@)
INDIVIDUAL
GROUP
RESOURCE
ROOM
UNKNOWN
@"CoreDAVItem"12@?0i8
Unexpected parsing of calendar-user-address-set: %@
urn:uuid:
%@ <%@> (%@)
CalDAVCalendarServerUserItem+REMShareeConversion.m
list
remSharee
MobileCalDAVDelegateUserInfo   displayName: %@ allowWrite: %d, uid: %@, principalPath: %@
No main principal found in the account properties for "%@". Creating a new one.
Upgrading principal URL from %@
New principal URL is %@
Error saving daWasMigrated: %@
Adding %@calendar %p with url %@
Removing %@calendar %p at url %@
Removing calendar with url %@
MobileCalDAVAccount: Failed to fetch lists from account {%@}
MobileCalDAVAccount: Created calendar %@ from REM %@ with url %@ guid %@
MobileCalDAVAccount: Loaded calendar %p with URL %@ guid %@
Caught an exception while trying to get the calendars for account %@: %@
Setting CalDAV server version to '%@' (currently '%@')
Updating calendar store and saving account properties since CalDAV server version changed
Error saving CalendarHomeSyncToken: %{public}@
Error saving account properties: %{public}@
MobileCalDAVAccount: _rem_createAccountStore: Error from updateAccountWithAccountID: %{public}@, error: %{public}@
MobileCalDAVAccount: Done updateAccountWithAccountID: %{public}@, didAdd: %{public}@, didUpdate: %{public}@
MobileCalDAVAccount: Account missing. Calling _rem_createAccountStore now which is not quite a use case we expect for DA in remindd nowadays {accountID: %{public}@}
Couldn't update ReminderKit account because one doesn't exist in the database {accountID: %{public}@}
CalDAV.sync
Canceling MobileCalDAVAccount refresh for account "%@" (%{public}@)
CalDAV task manager has been shut down.
Principal %{public}@ is dirty
Principal %{public}@ was deleted.
Principals changed
Saving accounts to update push information from an upgrade
Saving accounts to update push information
The refresh actor says we should save accounts
==== CalDAV refresh completed successfully for "%@" (%{public}@)
CalDAV refresh finished for account "%@" (%{public}@): Total sync time: %0.2f seconds. Number of downloaded items: %lu
Some calendars failed to sync. Keeping the migration flag around so that we attempt a merge sync the next time
Clearing migrated flag on the calendar store
==== CalDAV refresh FAILED for "%@" (%{public}@): %@. [Error Domain:%{public}@ Code:%{public}@]
Not saving our account properties because the refresh was canceled.
Saving our account properties
Ignoring refresh request because we're already in the middle of a refresh
==== Beginning %@refresh for CalDAV account%@ "%@" (%@)
Our store has %lu items in it.
We're already refreshing or a refresh is pending, so we're going to ignore this refresh request.
Delegate with principalPath %@ was successfully added.
Delegate with principalPath %@ failed to add.
Delegate with principalPath %@ could not be saved.
Delegate with account ID %@ was successfully removed
Delegate with account ID %@ failed to be removed
Search task %p was cancelled
CalDAV search query %p returning results
An unknown task just finished. What just happened? %@
Refusing to send out search query because the server doesn't support searching
CalDAV search query "%@" (%p) enqueuing
Dropping search query %@ because it is not the right type
cancelling search query %@
_reallyCancelAllSearchQueries is complete. All search queries have been cancelled.
DiscoveryTaskGroup %@ got account info %@ with error %@
Autodiscover called on account %@, but that account does not have a host set and username does not seems to resemble email address. Ignoring autodiscovery request
Autodiscover called on account %@, but that account does not have a host. Ignoring autodiscovery request
account %@ is checking validity with group %@ on behalf of %@
Dropping power assertion release for %@ since the retain count isn't positive
Change Tracking Helper - creating one for {principal=%@, account=%@}
Change Tracking Helper - marking consumed and clearing Change Tracking helper for {principal=%@, account=%@}
prepareCalendarsForSync - prepare calendars for sync with guid-calendar-map: %{public}@
prepareCalendarsForSync - ADDED ReminderKit calendars: %{public}@
prepareCalendarsForSync - Couldn't get a cached calendar of added calendar %{public}@ {guid: %{public}@}
prepareCalendarsForSync - UPDATED ReminderKit calendars: %{public}@
prepareCalendarsForSync - Couldn't get a cached calendar of modified calendar {guid: %{public}@}
prepareCalendarsForSync - DELETED ReminderKit calendars: %{public}@
prepareCalendarsForSync - Couldn't obtain a URL of deleted calendar {externalID: %{public}@}
RDDataacess doesn't care about inbox calendar (yet) {url: %@}
RDDataacess doesn't care about subscribed calendar (yet) {url: %@}
TODO - Notification calendar being created here is only a barebone implementation {url: %@}
Asked to create a calendar of a type we don't know about: %d
Marking principal as dirty: %@
Deleting calendar with guid %{public}@ or extID %@
MobileCalDAVCalendar: ERROR: Failed to save delete of list {listID: %{public}@, guid: %{public}@, extID: %@, error: %{public}@}
MobileCalDAVCalendar: SUCCESS: Deleted list of calendar URL: %@ {objectID=%{public}@}
MobileCalDAVCalendar: Couldn't find the backing list of the calendar to delete {guid %{public}@, extID %@}.
Marking calendar "%@" as dirty.
MobileCalDAVCalendar: Set URL on calendar (guid=%{public}@, listID=%{public}@)
MobileCalDAVCalendar: Could not find the backing REM list to set a URL on calendar (calendar=%{public}@)
Found a list that should indeed be a subscribed calendar due to 50659315 {guid: %{public}@, url: %@, listID: %{public}@}
ERROR: Failed to save delete of list {listID: %{public}@, guid: %{public}@, extID: %@, error: %{public}@}
The unexpected subscribed calendar list is now deleted and marked as event calendar: {url: %@, objectID: %{public}@}
Empty calendar title receieved. Setting calendar title to %@. Calendar URL: %@
MobileCalDAVCalendar: LOOKATME: No .notes to set in REMList for now {setvalue=%@, calendar=%@, stack=%@}
MobileCalDAVCalendar: LOOKATME: Verifying color format being set to REM: %@, rawValue:%@, remValue: %@, calendar: %@.
MobileCalDAVCalendar: LOOKATME: Verifying symbolic color name being set to REM: %@, rawValue: %@, remValue: %@, calendar: %@.
MobileCalDAVCalendar: LOOKATME: REMList has no sharing (calenderFlags::canBePublished) to set yet {setvalue=%d, stack=%@}
MobileCalDAVCalendar: LOOKATME: REMList has no sharing (calenderFlags::canBeShared) to set yet {setvalue=%d, stack=%@}
MobileCalDAVCalendar: LOOKATME: REMList has no (calenderFlags::isFamilyCalendar) to set yet {setvalue=%d, stack=%@}
MobileCalDAVCalendar: LOOKATME: REMList has no (calenderFlags::isMarkedUndeletable) to set yet {setvalue=%d, stack=%@}
MobileCalDAVCalendar: LOOKATME: REMList has no (calenderFlags::isMarkedImmutableSharees) to set yet {setvalue=%d, stack=%@}
MobileCalDAVCalendar: LOOKATME: REMList has no (isPublished) to set yet {setvalue=%d, stack=%@}
MobileCalDAVCalendar: LOOKATME: REMList has no (publishURL) to set yet {setvalue=%@, stack=%@}
MobileCalDAVCalendar: ERROR: Invalid REMListSharingStatus value: %{public}@ (calendar: %{public}@)
MobileCalDAVCalendar: Updating sharee %@ to calendar "%@"
MobileCalDAVCalendar: Removing sharee %@ from calendar "%@" 
MobileCalDAVCalendar: Adding sharee %@ to calendar "%@"
MobileCalDAVCalendar: Setting new .sharees to REMList (%@, calendar=%{public}@).
MobileCalDAVCalendar: Failed to save changes to sharees to calendar {calendar=%{public}@, error=%{public}@}.
MobileCalDAVCalendar: Couldn't get a REM list for calendar %{public}@
MobileCalDAVCalendar: ERROR: Couldn't fetch all reminders for calendar %{public}@, listID: %{public}@
allItemURLs: Probably in merge-sync {wasMigrated=%{public}@, cal=%{public}@, urls=%@}
MobileCalDAVCalendar: ERROR: Could not find a REM list that matched %{public}@
MobileCalDAVCalendar: Reminder does not exist when trying to set externalModificationTag {url: %@, list: %{public}@}.
MobileCalDAVCalendar: ERROR: Could not fetch reminders in lists to get externalModificationTag {list: %{public}@, error: %{public}@}.
MobileCalDAVCalendar: ERROR: Try to get reminder with nil uniqueIdentifier {calendar: %{public}@, stack: %@}.
MobileCalDAVCalendar: ERROR: Failed to fetch reminder with UUID: %{public}@, list: %{public}@, error: %{public}@
MobileCalDAVCalendar: Could not find a reminder with UUID: %{public}@, list: %{public}@
MobileCalDAVCalendar: ERROR: Try to get reminder with nil externalID {calendar: %{public}@, stack: %@}.
MobileCalDAVCalendar: Calendar has no backing REM list when trying to fetch reminder with externalID {calendar: %{public}@, reminder.externalID: %@}.
MobileCalDAVCalendar: Could not find a reminder with externalID {calendar: %{public}@, reminder.externalID: %@}.
MobileCalDAVCalendar: ERROR: Could not fetch reminder with externalID {calendar: %{public}@, reminder.externalID: %@, error: %{public}@}.
MobileCalDAVCalendar: ERROR: Could not find a calendar that matched %{public}@
MobileCalDAVCalendar: ERROR: Could not set url to reminder: %{public}@ %@
MobileCalDAVCalendar: Couldn't set url for reminder %{public}@ because it doesn't exist in our ReminderKit database {calendar: %{public}@}.
MobileCalDAVCalendar: ERROR: Could not set etag to reminder: %{public}@ %@
MobileCalDAVCalendar: Couldn't set etag for the reminder at %@ because it doesn't exist in our ReminderKit database {calendar: %{public}@}.
XXXXXXXXXX: Do we really need setScheduleTag for reminders? {tag: %@, url: %@, stack: %@}
MobileCalDAVCalendar: Nil or empty resources param for updateResourcesFromServer %{public}@
resourceCount=%{public, signpost.telemetry:number1, Name=Count}ld
MobileCalDAVCalendar: Could not find a list that matched to updateResourcesFromServer %{public}@
Dropping server change for %@ on the floor because we have a move change for it
The event at %@ was modified locally. Forcing it to the server.
Saved resource from %@ to the database. Etag is %{public}@
Failed to save batchSaveRequest {error: %{public}@}
CalDav.updateBatch
MobileCalDAVCalendar: ERROR: Failed to save delete of reminder {reminder: %{public}@, calendar: %{public}@, error: %{public}@}.
MobileCalDAVCalendar: Couldn't remove reminder at %@ because it doesn't exist in our ReminderKit database {calendar: %{public}@}.
MobileCalDAVCalendar: ERROR: LOOKATME: Unexpected call -hasEvents {stack=%@}.
MobileCalDAVCalendar: ERROR: LOOKATME: Unexpected call -isHidden {stack=%@}.
MobileCalDAVCalendar: ERROR: LOOKATME: Unexpected call -displayColor {stack=%@}.
MobileCalDAVCalendar: ERROR: Could not get an account. Cowardly refusing to create a calendar with UID %{public}@. Error: %{public}@.
MobileCalDAVCalendar: SUCCESS: Created list %{public}@ for %@.
MobileCalDAVCalendar: ERROR: Failed to create list for calendar: %@.
Could not obtain a calendar ref for {guid: %{public}@, url: %@}.
MobileCalDAVCalendar: ERROR: LOOKATME: Readonly calendars is not supported by DA in remindd. Check why principal is not writable. {url: %@, stack: %@}
MobileCalDAVCalendar: ******Creating calendar with url %@ %@
MobileCalDAVCalendar: Merged calendar titled %@ with calDAV
Couldn't get an REMStore ref. This isn't the time to create a calendar
MobileCalDAVCalendar: Found a cached list object ID (%{public}@) for url %@
ERROR: MobileCalDAVCalendar: Could not fetch list with object ID %{public}@. Url: %@. Error: %{public}@, Stack Trace: %@.
MobileCalDAVCalendar: Could not find a list with object ID %{public}@. Url: %@, Stack Trace: %@.
ERROR: MobileCalDAVCalendar: Could not get account %{public}@. Error: %{public}@, Stack Trace: %@.
MobileCalDAVCalendar: Couldn't find the backing REM list of calendar with url %@, Stack Trace: %@.
MobileCalDAVCalendar: SUCCESS: Got the backing REM list of calendar with url %@ {objectID=%{public}@}.
Couldn't find calendar with url %@.
MobileCalDAVCalendar: CalDAV principal.account is not a MobileCalDAVAccount: %@
MobileCalDAVCalendar: Cannot get ReminderKit account from principle.account: %@
MobileCalDAVCalendar: Failed to fetch all lists for migrated account: {remAccount: %{public}@, daAccount: %@}
%lu added calendars found
%lu modified calendars found
MobileCalDAVCalendar: ERROR: Could not find a REM list with that matched %{public}@
MobileCalDAVCalendar: ERROR: Could not fetch reminders from list %{public}@ with that matched %{public}@, error: %{public}@.
MobileCalDAVCalendar: Collected a DELETED ReminderKit reminder change in calendar {externalID: %@, calendar: %{public}@}
Clearing event changes
MobileCalDAVCalendar: Couldn't find the REM list of this calendar when adding changed reminder {calendar: %{public}@, reminder: %{public}@}.
MobileCalDAVCalendar: Collected an INSERTED or MODIFIED ReminderKit reminder change in calendar: {reminder: %{public}@, calendar: %{public}@}.
MobileCalDAVCalendar: ERROR: Got a nil changed reminder in calendar %{public}@.
MobileCalDAVCalendar: Created server ID for {reminderID: %{public}@, url: %@, calendar: %{public}@}
MobileCalDAVCalendar: Added actions for item {actionType: %{public}@, reminderID: %{public}@, url: %@, calendar: %{public}@}
Couldn't find a reminder for an added reminder: %@
MobileCalDAVCalendar: ERROR: Batch save pending send reminders failed: (error: %{public}@, batch: %@)
MobileCalDAVCalendar: Batch saved pending send reminders successfully: (batchSize: %{public}@)
MobileCalDAVCalendar: ERROR: Refetch updated pending send reminders failed: (error: %{public}@, batch: %@)
MobileCalDAVCalendar: ERROR: Refetched reminders count doesn't match with reminders count updated: (updated: %@, refetched: %@)
MobileCalDAVCalendar: Updated reminder reference in DACalDAViCalItem: (reminderID: %{public}@, serverID: %@)
Encountered error %{public}@ when putting item to %@
Received a 409 conflict for the event at %@. Creating a new UUID and trying again.
MobileCalDAVCalendar: LOOKATME: Couldn't get a REM reminder item to set UUID in this case of CoreDAVHTTPStatusCode_Conflict {iCalItem: %@, calendar: %@}.
Marking calendar as dirty because we just received a 409 conflict error
Put of item at %@ succeeded without error
Encountered error %{public}@ when deleting item from %@
Delete of item at %@ succeeded without error
_collectShareeActions > _addShareeWithObjectID: Collected ADDed/UPDATEd sharee and found record to add {list: %{public}@, shareeID: %{public}@}
_collectShareeActions > _addShareeWithObjectID: Sharee not found in {list: %{public}@, shareeID: %{public}@}
MobileCalDAVCalendar: _collectShareeActions: Calendar has no backing REM list when trying to collect sharee actions {list: %{public}@}.
MobileCalDAVCalendar: _collectShareeActions: LOOKATME: Unexpectedly got UPDATEs on REMSharee, sharees are supposed to be immutable value types in REM!
MobileCalDAVCalendar: _collectShareeActions: Collecting added and modified sharees {list: %{public}@, addedIds: %{public}@, modifiedIds: %{public}@, deletedKeys: %{public}@}.
_collectShareeActions: deletionKey is not for this list {list: %{public}@, sharee.owningListIdentifier: %{public}@, shareeID: %{public}@}
_collectShareeActions: Collected DELETEd sharee for this list {list: %{public}@, shareeID: %{public}@}.
_collectShareeActions: ERROR: The sharee tombstone has no object identifier, faking a uuid for it {list: %{public}@, shareeTombstone: %{public}@}
_collectShareeActions: ERROR: Couldn't get a URL for the deleted sharee, so we're going to skip it {list: %{public}@, shareeTombstone: %{public}@}
MobileCalDAVCalendar: _collectShareeActions: LOOKATME: Found duplicated objectIDs in deletes vs addsAndMods, this is unexpected as the change tracking should have consolidated them {calendar: %{public}@, duplicates: %{public}@}
MobileCalDAVCalendar: Collected %lu deleted reminders from REM change tracking {modified: %@}.
Sending up a delete for the item at URL %@
Couldn't get a URL for the delete of "%@"
Found %lu deleted items
MobileCalDAVCalendar: Collected %lu added reminders from REM change tracking {added: %@}.
Found %lu added items
MobileCalDAVCalendar: Collected %lu modified reminders from REM change tracking {modified: %@}.
Found %lu modified items
MobileCalDAVCalendar: [ForcedRefreshSyncForTruncatedHistory]: Force a 'refresh sync' as change history was truncated or error, let's try hard to upload local reminders changes... {account: %@, calendar: %@}
MobileCalDAVCalendar: [ForcedRefreshSyncForTruncatedHistory]: Gathered DA item with nil REMReminder is not quite expected (remID: %{public}@, serverID: %@)
MobileCalDAVCalendar: [ForcedRefreshSyncForTruncatedHistory]: Found (%{public}@) in this batch which exists on the server at %@
MobileCalDAVCalendar: [ForcedRefreshSyncForTruncatedHistory]: Found (%{public}@) in this batch which does not exist on the server
MobileCalDAVCalendar: [ForcedRefreshSyncForTruncatedHistory]: Found %lu ADDs reminders in this batch for our force refresh sync
MobileCalDAVCalendar: [ForcedRefreshSyncForTruncatedHistory]: Found %lu MODs reminders in this batch for our force refresh sync
Preparing merge sync actions...
prepareMergeSyncActions: Gathered DA item with nil REMReminder is not quite expected (remID: %{public}@, serverID: %@)
prepareMergeSyncActions: Found %{public}@ in this batch which exists on the server at %@
prepareMergeSyncActions: Found %{public}@ in this batch which does not exist on the server
prepareMergeSyncActions: Found %lu adds in this batch for our merge sync
prepareMergeSyncActions: Found %lu mods in this batch for our merge sync
MobileCalDAVCalendar: ChangedKeys is empty, no effective changes to this list change item, skipping -save {listOD: %{public}@}.
MobileCalDAVCalendar: ERROR: Failed to set REMList properties {changedKeys=%{public}@, GUID=%{public}@, listID=%{public}@, url=%@, error=%{public}@, stack=%@}
MobileCalDAVCalendar: Couldn't find an REMList to set property {calendar: %{public}@, stack: %@}.
Couldn't get an REMStore from %{public}@.
Couldn't get an REMSaveRequest from %{public}@.
Error when fetching account from ReminderKit %{public}@.
Could not find account from ReminderKit %{public}@.
MobileCalDAVAccountRefreshActor: DATransaction starting, ID: %@
Refresh actor starting up. (forced: %s)
CalDAV actor was told to cancel
There weren't any outstanding tasks, so we're going to call our cancel completion block now.
Refresh actor tearing down...
Checking if we should continue before transitioning from state %d
Ignoring calendar refresh task because we have no password.
Bailing out of refresh because we were told to cancel
Encountered an error while refreshing. Bailing out of the refresh. The error was %@
Waiting to make state transition from state %@ with %lu outstanding task groups and %lu outstanding tasks
Refresh actor changed state {%@ -> %@}
%@ refreshPrincipalOnly : begin
%@ refreshCalendarsOnly : begin
Refreshing properties for account with CoreDAV
Error refreshing properties for principal: %@
Properties were refreshed for principal "%@" on account "%@"
Getting delegates for account with CoreDAV
%@: This server does not support delegates.
Delegates were refreshed for account "%@"
Scheduling calendar refresh operation
CalDAV FinishRefresh
Error refreshing calendar properties for account: %@
Calendars properties were refreshed for account "%@"
Calendar properties were updated. Saving the database [not actually calling save nowadays as we moved to REM DB]
Preparing sync actions for calendar "%@"
Calendar "%@" has local changes and needs to be synced
LOOKATME: Principal is not MobileCalDAVPrincipal, we can't get REM change tracking helper {principal: %@}.
Calendars to refresh in this sync are: %@
Error moving event from %@ to %@: %@
New etag from move task is %@
XXXXXXXXX: ERROR: LOOKATME: RDDataAccess doesn't support MOVE yet!
Skipping refresh of inbox because this server doesn't support automatic scheduling
Syncing calendars: %@
Starting a calendar sync for "%@"
Error refreshing the calendar at %@: %@
Hit a precondition error while performing a bulk upload of events. Attempting a resync of the calendar
Hit a precondition error on our second bulk upload attempt. Waiting a bit before retrying again
We've backed off for too long. We're just giving up for now.
Calendar "%@" requested a resync, so we're going to sync it again
Calendar collections were refreshed for account "%@"
XXXXXXXXX: This version of remindd.DataAccess does NOT support cleaning out-of-filter-range items yet {startDate: %@}.
Error clearing calendar changes for "%@"
CalDAV refresh task failed with error %@
Refresh actor %s. Invoking result callback
Dispatching result callback on the main queue...
Result sent to actor. No cancellation completion block was set, so we're done here.
CalDAVNotificationCalendar: Initializing a notif calendar for {url: %@, list: %{public}@, account: %@}.
CalDAVNotificationCalendar: Failed to set this notification calendar list as daIsNotificationsCollection=YES, bailing (url: %@, error: %{public}@).
CalDAVNotificationCalendar: Could not find an REMList for the notification calendar (%@, account: %@)
CalDAVNotificationCalendar: Could not find a calendar of this notification calendar to perform -etagsForItemURLs: (%@, account: %@)
CalDAVNotificationCalendar: Could not find a calendar of this notification calendar to perform -setEtag:forItemAtURL: (%@, account: %@)
CalDAVNotificationCalendar: Setting etag (%{public}@) for item at {url: %@, account: %@}.
CalDAVNotificationCalendar: Couldn't set etag for the item at %@ because it doesn't exist in our database for account %@
CalDAVNotificationCalendar: Could not find a calendar of this notification calendar to perform -setURL:forResourceWithUUID: (%@, account: %@)
CalDAVNotificationCalendar: Setting url (%@) for item with {uuid: %{public}@, account: %@}.
CalDAVNotificationCalendar: Couldn't set url for the item %{public}@ because it doesn't exist in our database for account %@
CalDAVNotificationCalendar: Could not find a REMList of this notification calendar to perform -updateResourcesFromServer: (%@, account: %@)
CalDAVNotificationCalendar: Could not find a calendar of this notification calendar to perform -removeCalendarItemWithURL: (%@, account: %@)
CalDAVNotificationCalendar: Removing notification item with url %@ {account: %@}
CalDAVNotificationCalendar: ERROR: Failed to fetch invitation REMList with url %@ when trying to -_removeCalendarItemWithURL: {notifItem: %@, account: %@}
CalDAVNotificationCalendar: Could not find the invitation REMList with url %@ when trying to -_removeCalendarItemWithURL: {notifItem: %@, account: %@}
CalDAVNotificationCalendar: _removeCalendarItemWithURL: Now removing the invitation REMList with url %@ {listID: %{public}@, notifItem: %@, account: %@}
CalDAVNotificationCalendar: ERROR: Remove host REMList and notification item failed when trying to -_removeCalendarItemWithURL: {hostURL: %@, notifItem: %@, account: %@}
CalDAVNotificationCalendar: Successfully performed -_removeCalendarItemWithURL: to remove invitation REMList and notification item {hostURL: %@, notifItem: %@, account: %@}
CalDAVNotificationCalendar: Couldn't get the calendar notification item to remove with {url: %@, account: %@}
CalDAVNotificationCalendar: Clearing notification changes
CalDAVNotificationCalendar: Preparing sync actions for notification calendar {calendar: %@, account: %@}.
CalDAVNotificationCalendar: Collected DELETED notification items for for this notification calendar {calendar: %@, account: %@, extIDs: %@}.
CalDAVNotificationCalendar: Sending up a delete for the notification at URL %@
CalDAVNotificationCalendar: _handleInviteNotification: Could not get an REMList of this notification calendar to perform -_handleInviteNotification:withResource:uid: (cal: %@, account: %@)
CalDAVNotificationCalendar: _handleInviteNotification: Handling CalDAVCalendarServerInviteNotificationItem for {inviteStatus: %{public}@, extID: %@, uid: %{public}@, url: %@, account: %@}.
CalDAVNotificationCalendar: ERROR: _handleInviteNotification: Could not fetch list with url {url: %@, account: %@, error: %{public}@}.
CalDAVNotificationCalendar: LOOKATME: _handleInviteNotification: We don't have a hostURL for this invitation {uid: %{public}@, extID: %@, account: %@}
CalDAVNotificationCalendar: LOOKATME: _handleInviteNotification: The shared calendar should only be either VTODO or VEVENT {supportedComponentString: %{public}@, uid: %{public}@}.
CalDAVNotificationCalendar: _handleInviteNotification: Does not seems to be an invitation for VTODO/Reminders, so we stop handling this {uid: %{public}@, extID: %@, hostURL: %@, account: %@}.
CalDAVNotificationCalendar: SUCCESS: _handleInviteNotification: Created or updated shared invite-pending list {isCreate: %{public}@, hostURL: %@, objectID: %{public}@, account: %@}.
CalDAVNotificationCalendar: ERROR: _handleInviteNotification: Failed to create or updated shared list for {isCreate: %{public}@, hostURL: %@, account: %@, error: %{public}@}
CalDAVNotificationCalendar: ERROR: _handleInviteNotification: Failed to save delete of the shared invite-pending calendar {hostURL: %@, account: %@, error: %@}
CalDAVNotificationCalendar: SUCCESS:_handleInviteNotification: Deleted shared invite-pending calendar of {hostURL: %@, objectID: %{public}@, account: %@}
CalDAVNotificationCalendar: _handleInviteNotification: Failed to create and save notification object when -_handleInviteNotification:withResource:uid: {uid: %{public}@, extID: %@, cal: %@, account: %@}
CalDAVNotificationCalendar: _handleInviteNotification: Successfully added an REMCalDAVNotification (%{public}@) (inviteStatus: %{public}@, uid: %{public}@, account: %@).
CalDAVNotificationCalendar: _handleInviteNotification: Failed to fetch the invitation REMList object: {listID: %{public}@, extID: %@, account: %@}
CalDAVNotificationCalendar: _handleInviteReply: Received CalDAVCalendarServerInviteReplyItem for {replyString: %@, extID: %@, uid: %{public}@, calendar: %@, replyItem: %@}.
CalDAVNotificationCalendar: _handleInviteReply: Showing user notification for {extID: %@, acceptedURL: %@, address: %@}
CalDAVNotificationCalendar: _handleInviteReply: Failed to fetch the host REMList object: {extID: %@, account: %@}
CalDAVNotificationCalendar: LOOKATME! (Should this be Events only?!)LOOKATME! (Should this be Events only?!) Handling CalDAVCalendarServerResourceChangedItem for {extID: %@, uid: %{public}@, calendar: %@}.
CalDAVNotificationCalendar: LOOKATME! CalDAVCalendarServerResourceChangedItem {uid: %{public}@, createdItem: %@}.
CalDAVNotificationCalendar: LOOKATME! CalDAVCalendarServerResourceChangedItem {uid: %{public}@, updatedItem: %@}.
CalDAVNotificationCalendar: LOOKATME! CalDAVCalendarServerResourceChangedItem {uid: %{public}@, deletedItem: %@}.
CalDAVNotificationCalendar: LOOKATME! CalDAVCalendarServerResourceChangedItem {uid: %{public}@, collectionChanges: %@}.
CalDAVNotificationCalendar: LOOKATME! CalDAVCalendarServerResourceChangedItem {uid: %{public}@, collectionUpdates: %@}.
DACalDAViCalItem: LOOKATME: We should have set the reminder GUID upfront to batch with other properties changes in -[MobileCalDAVCalendar _createActionsForItems:withActions:...] when we discover it, and not doing this ad-hoc lazily which is bad in performance. Review if we have a missed case. {reminderID: %{public}@, callstack: %@}
DACalDAViCalItem: LOOKATME: Trying to get uniqueIdentifier from a DAViCalItem with neither reminder/cal DB item {iCalItem: %@, stack: %@}
DACalDAViCalItem: Do we really need get -scheduleTag for reminders? {remItem: %{public}@, stack: %@}
DACalDAViCalItem: Do we really need -setScheduleTag for reminders? {remItem: %{public}@, scheduleTag: %@, stack: %@}
DACalDAViCalItem: Couldn't get an REMStore from %{public}@.
ERROR: mobileCalendar object is not an instance of MobileCalDAVAccount: %{public}@
k_REM_CalCalendarMergeFields: trying to match local reminder {uid: %{public}@, cache.count: %{public}@, calendar: %{public}@}
k_REM_CalCalendarMergeFields: mobileCalendar.rem_cachedFetchedRemindersForMergeSync is unexpectedly nil {calendar: %{public}@}
k_REM_CalCalendarMergeFields: ERROR: Couldn't fetch all reminders for {guid: %{public}@, listID: %{public}@, error: %{public}@}
k_REM_CalCalendarMergeFields: Considering candidate title {candidate: %{public}@, uid: %{public}@}
k_REM_CalCalendarMergeFields: Considering candidate due {candidate: %{public}@, uid: %{public}@, candidate.due: '%@', ics.due: '%@', candidate.timezone: %@, ics.timezone: %@}
k_REM_CalCalendarMergeFields: Found identity match of reminder {uid: %{public}@, reminder:%{public}@, list: %{public}@}
k_REM_CalCalendarMergeFields: Comparing if local reminder is more recent {localLastMod: %@, remoteLastMod: %@, uid: %{public}@, reminder:%{public}@}
k_REM_CalCalendarMergeFields: Local reminder is more recent. Refusing to update the reminder. {uid: %{public}@, reminder:%{public}@}
Couldn't find a task with UID %{public}@ in the reminders database. Creating a new one {reminder: %{public}@}.
Updating existing reminder with UID id %{public}@ from ICS {reminder: %{public}@}.
ERROR: Couldn't create a reminder change item for ICS with UID id %{public}@.
Adding or modifying todo with {guid: %{public}@, shouldMerge: %{public}@}
Could not create REMReminder for %@.
Could not create an ICSDocument from the data from the server: %{public}@. Data: %@
Processing component %@
The task %{public}@ will be synced. ICSTodos are synced by default.
DACalDAViCalItem: LOOKATME: We should no longer support CalDB calendar as container for tasks {container: %@, todo.uid: %{public}@}.
Error adding or modifying todo with uid %{public}@
NULL component passed to processComponent:
CalDAV.updateSingleItem
DACalDAViCalItem: Exported ICS -dataPayload for the reminder {reminderID: %{public}@}
DACalDAViCalItem: ERROR: Couldn't create an ICS calendar for the reminder {reminderID: %{public}@}
DACalDAViCalItem: LOOKATME: We should avoid lazy populating dataPayload because that means we are probably fetching reminders one-by-one in a loop while they could have been fetching them in a batch instead for better performance {reminder: %{public}@, stack: %@}
DACalDAViCalItem: ERROR: Couldn't the reminder for this DA item to export payload {reminder: %{public}@}
DACalDAViCalItem: LOOKATME: We have a DACalDAViCalItem without either a backing REM or CalDB item: {iCalItem: %@, rem_clientID: %{public}@, account: %@} call stack: %@
DACalDAViCalItem: loadLocalItemWithAccount: Fetched reminder (%{public}@) times for DACalDAViCalItem instance (%p).
DACalDAViCalItem: ChangedKeys is empty, no effective changes to this reminder change item, skipping -save {reminderID: %{public}@}.
DACalDAViCalItem: ERROR: Save reminder %{public}@ property failed: %{public}@. (stack=%@)
DACalDAViCalItem: ERROR: Failed to set REMReminder properties {changedKeys=%{public}@, UID=%{public}@, reminderID=%{public}@, serverID=%@, error=%{public}@, stack=%@}
DACalDAViCalItem: Couldn't find an REMReminder to set property {serverID=%@, iCalItem=%@, error=%{public}@, stack=%@}.
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
MobileCalDAVAccount
MobileCalDAVPrincipal
CoreDAVAccountInfoProvider
NSObject
CoreDAVOAuthInfoProvider
CalDAVPrincipal
MobileCalUserAddress
MobileCalDAVCalendar
CalDAVCalendar
CalNSStringEmailAddressAdditions
DASearch
DACalDAVREMReminderProxy
DACalDAViCalItemUpdatableBackingModel
DACalDAViCalItemBackingModel
ReminderKitExtensions
REMDAAccountInfo
REMDAAccountProviding
CalDAVHTTPTrafficLog
MobileCalDAVAccountRefreshActor
CalDAVAccountPropertyRefreshDelegate
CoreDAVTaskGroupDelegate
CalDAVCalendarPropertyRefreshDelegate
CalDAVCalendarSyncDelegate
CalDAVAccountDelegatesRefreshDelegate
CalDAVRefreshContext
MobileCalDAVNotificationCalendar
DACalDAViCalItem
CoreDAVLeafDataPayload
DADataElement
CalDAVCalendarItemProtocol
CalDAVPrincipalResult
ShareeConversion
CalDAVMove
CalDAVAccountDelegatesRefreshOperation
MobileCalDAVDelegateUserInfo
setMPrincipals:
mainPrincipal
setMainPrincipal:
objectForKeyedSubscript:
allKeys
countByEnumeratingWithState:objects:count:
valueForKey:
initWithConfiguration:account:
mPrincipals
setObject:forKeyedSubscript:
isEqualToString:
backingAccountInfo
accountDescription
addPrincipal:
setWithArray:
initWithStringProperties:
setSearchPropertySet:
intValue
setIsWritable:
versionWithPropertyValue:
setServerVersion:
setNeedsAccountPropertyRefresh:
initWithBackingAccountInfo:
sharedLogger
registerWithiCalendar
registerDefaultLoggerWithCoreDAV
filenameWithBasename:
initWithFilename:
setCoreDAVLogger:
setSearchTaskSet:
currentHandler
handleFailureInMethod:object:file:lineNumber:description:
teardown
_setSpinning:
releasePowerAssertion
cancelTaskGroup
dealloc
accountIntPropertyForKey:
legacy_principalURL
setPrincipalURL:
principalURL
setAccountIntProperty:forKey:
saveModifiedPropertiesOnBackingAccount
upgradeAccount
calendarUserAddresses
allObjects
overriddenServer
overriddenPort
numberWithInt:
overriddenScheme
principalPath
setPrincipalPath:
absoluteString
hasPrefix:
scheme
host
port
stringWithFormat:
URLWithString:
setUseSSL:
setHost:
integerValue
setPort:
setShouldDoInitialAutodiscovery:
saveAccountProperties
setAccountDescription:
_updateCalendarStore:
searchPropertySet
stringProperties
compare:
sortedArrayUsingSelector:
boolValue
numberWithBool:
rem_account
daWasMigrated
rem_saveRequest
updateAccount:
setDaWasMigrated:
saveSynchronouslyWithError:
isSubscribed
calendarURLString
calendars
addObject:
deleteCalendar
removeObject:
copy
calendarURL
removeCalendar:
mCalendars
fetchListsIncludingSpecialContainersWithError:
calendarWithREMList:principal:
guid
setMCalendars:
accountID
setAccount:
mutableCopy
configuration
removeObjectForKey:
serverVersion
isEqual:
propertyValue
supportsTimeRangeFilter
preferredEventDaysToSync
shouldFilterEventSyncTimeRange
supportsTimeRangeFilterOnInbox
calDAVRemindersForAll
type
supportedCalendarComponentSets
allowedCalendars:contains:
initWithAccount:
supportsCalendarHomeSync
alwaysUseCalendarHomeSync
username
supportsTimeRangeFilterWithoutEndDate
supportsAutoSchedule
supportsPrivateComments
bundleForClass:
_calendarConstraintsResource
pathForResource:ofType:
externalModificationTag
calendarHomeSyncToken
setExternalModificationTag:
setName:
setExternalIdentifier:
_calendarConstraintsPath
setDaConstraintsDescriptionPath:
canCreateCalendars
setDaAllowsCalendarAddDeleteModify:
supportsSharing
setDaSupportsSharedCalendars:
changedKeys
count
rem_store
updateAccountWithAccountID:restartDA:completion:
_rem_createAccountStore_whichReallyShouldNotHappen
isDelegate
_rem_updateAccountProperties
refreshContext
setIsPrincipalOnly:
_updateCalendarStoreNoDBOpen:
isSpinning
setIsSpinning:
sync
shutdown
actor
cancelWithCompletion:
principals
allValues
isDirty
_saveModifiedPrincipalsOnBackingAccount
isRefreshing
_syncEndedWithError:
APSTopic
length
supportsPush
setSupportsPush:
shouldUpdatePushDelegate
setShouldUpdatePushDelegate:
_saveModifiedSubscribedCalendarsOnBackingAccount
context
shouldSaveAccounts
startTime
numDownloadedElements
numberWithUnsignedInteger:
numberWithDouble:
dictionaryWithObjects:forKeys:count:
wasMigrated
isPrincipalOnly
isCalendarsOnly
calendarFailedToSync
setWasMigrated:
setShouldSave:
code
numberWithInteger:
domain
flushCaches
setIsDirty:
setCalendarsAreDirty:
mItemIDsToMoveActions
removeAllObjects
mMovedItemURLStrings
setRefreshContext:
setIsRefreshing:
setActor:
defaultCenter
postNotificationName:object:
setMItemIDsToMoveActions:
setMMovedItemURLStrings:
setStartTime:
_collectMoveActions
setIsCalendarsOnly:
localItems
retainPowerAssertion
_syncStarted
initWithAccount:context:
refresh
childAccounts
delegateUserInfos
initWithArray:
accountPropertyForKey:
containsObject:
identifier
accountTypeWithAccountTypeIdentifier:
initWithAccountType:
setParentAccount:
setAccountProperty:forKey:
setActive:
setAuthenticationType:
saveVerifiedAccount:withCompletionHandler:
canSaveAccount:withCompletionHandler:
accountWithIdentifier:
removeAccount:withCompletionHandler:
searchContext
consumerForTask:
array
multiStatus
responses
resultFromResponse:
convertToDAContactSearchResultElement
searchQuery:returnedResults:
searchQuery:finishedWithError:
searchTaskSet
removeConsumerForTask:
supportsPropertySearch
supportsWellKnownType:
consumer
errorWithDomain:code:userInfo:
searchString
setShouldUseOpportunisticSockets:
setWithObject:
collectionSetURL
initWithSearchStrings:searchTypes:serverSupportSet:atURL:
setDelegate:
setAccountInfoProvider:
setSearchContext:
taskManager
submitIndependentCoreDAVTask:
setConsumer:forTask:
cancelTask:
checkValidityTaskGroup
shouldDoInitialAutodiscovery
setIsDelegate:
setUsername:
serverHeaders
versionWithHTTPHeaders:
retryDiscoveryTask:
account:isValid:validationError:
setCheckValidityTaskGroup:
arrayWithObjects:
da_appendSlashIfNeeded
insertObject:atIndex:
performDiscoveryWithHostname:username:consumer:
resemblesEmailAddress
hostFromEmail
userFromEmail
wellKnownPaths
cdvArrayWithIntegers:
useSSL
initWithAccountInfoProvider:taskManager:httpPorts:httpsPorts:httpServiceString:httpsServiceString:wellKnownPaths:requiredComplianceClass:
setTimeoutInterval:
startTaskGroup
persistentUUID
sharedPowerAssertionManager
_powerAssertionContext
_powerAssertionGroupIdentifier
retainPowerAssertion:withGroupIdentifier:
powerAssertionRetainCount:
releasePowerAssertion:
dropPowerAssertionsForGroupIdentifier:
reattainPowerAssertionsForGroupIdentifier:
accountHasSignificantPropertyChangesFromOldAccountInfo:
daAccountSubclassWithBackingAccountInfo:
localizedStringForKey:value:table:
resetStatusReport
statusReport
sharedLogging
addLogDelegate:forAccountInfoProvider:
removeLogDelegate:forAccountInfoProvider:
enabled
coreDAVLogger
logSnippet:
calendarUserAddressIsEquivalentToURL:
enumerateKeysAndObjectsUsingBlock:
ingestBackingAccountInfoProperties
init
setSubscribedCalendars:
subscribedCalendars
movedItemURLStrings
itemIDsToMoveActions
emailAddresses
setOverriddenServer:
setOverriddenPort:
setOverriddenScheme:
serverBaseURL
noteHomeSetOnDifferentHost:
setCollectionSetURL:
isWritable
addCalendar:
removeCalendarWithURL:
reloadCalendars
removePrincipal:
viewedTimeZone
shouldFilterSyncTimeRangeForInbox
supportsReminders
supportsEvents
shouldUseCalendarHomeSyncReport
setCalendarHomeSyncToken:
spinnerIdentifiers
cancelRefreshWithCompletion:
refreshActor:didCompleteWithError:
refreshWithContext:
updateDelegates
task:didFinishWithError:
_reallyPerformSearchQuery:
_reallyCancelSearchQuery:
_reallyCancelAllSearchQueries
_reallySearchQueriesRunning
discoveryTask:gotAccountInfo:error:
discoverInitialPropertiesWithConsumer:
dropPowerAssertions
reattainPowerAssertions
isCalDAVAccount
isEqualToAccount:
localizedIdenticalAccountFailureMessage
localizedInvalidPasswordMessage
onBehalfOfBundleIdentifier
addToCoreDAVLoggingDelegates
removeFromCoreDAVLoggingDelegates
coreDAVLogLevel
coreDAVOutputLevel
coreDAVLogDiagnosticMessage:atLevel:
shouldLogTransmittedData
coreDAVLogTransmittedDataPartial:
coreDAVTransmittedDataFinished
addressIsAccountOwner:
setPreferredEventDaysToSync:
preferredToDoDaysToSync
setPreferredToDoDaysToSync:
setDelegateUserInfos:
needsAccountPropertyRefresh
searchQueriesShouldCancel
setSearchQueriesShouldCancel:
.cxx_destruct
_wasMigrated
_principals
_itemIDsToMoveActions
_mMovedItemURLStrings
_calendars
_serverVersion
_usernameForDiscovery
_hostForDiscovery
_needsAccountPropertyRefresh
_isRefreshing
_searchQueriesShouldCancel
_isSpinning
_preferredEventDaysToSync
_preferredToDoDaysToSync
_movedItemURLStrings
_mainPrincipal
_delegateUserInfos
_searchPropertySet
_refreshContext
_checkValidityTaskGroup
_actor
_searchTaskSet
_coreDAVLogger
T@"CoreDAVDiscoveryTaskGroup",&,N,V_checkValidityTaskGroup
T@"MobileCalDAVAccountRefreshActor",&,N,V_actor
TB,N,V_isSpinning
T@"NSMutableSet",&,N,V_searchTaskSet
T@"DACoreDAVLogger",&,N,V_coreDAVLogger
T@"NSMutableDictionary",&,N,V_principals
T@"NSMutableDictionary",&,N,V_itemIDsToMoveActions
T@"NSMutableSet",&,N,V_movedItemURLStrings
T@"NSMutableSet",&,N,V_calendars
T@"MobileCalDAVPrincipal",&,N,V_mainPrincipal
T@"NSDictionary",R,N
T@"NSDictionary",&,N,V_delegateUserInfos
T@"DACoreDAVTaskManager",R,N
T@"NSURL",&,N
T@"CalDAVPrincipalSearchPropertySet",&,N,V_searchPropertySet
T@"NSString",&,N
Ti,N
TB,N
TB,N,V_needsAccountPropertyRefresh
TB,N,V_isRefreshing
T@"NSSet",R,N
T@"NSString",C,N
T@"CalDAVServerVersion",&,N,V_serverVersion
Ti,N,V_preferredEventDaysToSync
Ti,N,V_preferredToDoDaysToSync
T@"NSTimeZone",R,N
TB,R,N
T@"CalDAVRefreshContext",&,N,V_refreshContext
T@"NSURL",R,N
T@"NSArray",R,N
T@"NSDictionary",&,N
TB,N,V_searchQueriesShouldCancel
da_removeSlashIfNeeded
caseInsensitiveCompare:
relativePath
path
isEqualToNumber:
rangeOfString:
da_newGUID
unpackCalDAVUserAdress:
enumerateObjectsUsingBlock:
parentAccount
accountType
initWithIdentifier:
setObject:forKey:
preferredCalendarUserAddresses
packCalDAVUserAdress:
calendarUserAddressesPerCalendar
fullName
calendarHomeURL
defaultCalendarURL
notificationCollectionURL
notificationCollectionCTag
inboxURL
inboxCTag
outboxURL
dropBoxURL
notificationURLString
pushTransports
calendarHomePushKey
isEnabled
isExpandPropertyReportSupported
supportsCalendarUserSearch
supportsFreebusy
supportsSyncToken
quotaFreeBytes
account
address
da_isEqualToDAVURL:
preferred
_userAddressSet:isEqualToSet:
setPreferredCalendarUserAddress:
setPreferredCalendarEmailAddress:
setPreferredCalendarPhoneNumber:
daAccount
addUsernameToURL:
da_urlBySettingPath:
isEnabledForDataclass:
supportsExtendedCalendarQuery
initWithCalendarIdentifier:
timeZoneWithName:
setTimeZone:
date
dateWithTimeInterval:sinceDate:
components:fromDate:
setDay:
dateByAddingComponents:toDate:options:
_startDateFromDaysToSync:
_eventSyncEndDate
sharedManager
rem_storeProvider
rem_storeForDataAccess
rem_provideAccountInfo
initWithREMDAAccount:clientName:withREMStore:
fetchChangesSinceLastConsumed
markChangesConsumed
addedCalendars
setAddedCalendars:
modifiedCalendars
setModifiedCalendars:
deletedCalendarURLs
setDeletedCalendarURLs:
rem_changeTracking
rem_addedCalendarsWithChangeTrackingHelper:inPrincipal:
arrayByAddingObjectsFromArray:
setWasModifiedLocally:
needsPublishUpdate
setNeedsPublishUpdate:
rem_modifiedCalendarsWithChangeTrackingHelper:inPrincipal:
rem_deletedCalendarsWithChangeTrackingHelper:inPrincipal:
da_absoluteURLForChildLeastInfoRepresentationRelativeToParentURL:
clear_rem_changeTracking
initWithCalendarURL:principal:
uppercaseString
preferredAddress:
preferredCalendarUserAddress
resourceSpecifier
lowercaseString
compareAddressURL:localString:
user
password
identityPersist
additionalHeaderValues
customConnectionProperties
oauth2Token
isValidating
dropAssertionsAndRenewCredentialsInQueue:withHandler:
clientToken
clientTokenRequestedByServer
webLoginRequestedAtURL:reasonString:inQueue:completionBlock:
handleTrustChallenge:
handleTrustChallenge:completionHandler:
shouldFailAllTasks
copyStorageSession
shouldSendClientInfoHeaderForURL:
compressRequests
supportsRequestCompression
shouldUseOpportunisticSockets
noteSuccessfulRequestWithNumDownloadedElements:numUploadedElements:
noteFailedNetworkRequest
noteFailedProtocolRequest
noteTimeSpentInNetworking:
class
self
performSelector:
performSelector:withObject:
performSelector:withObject:withObject:
isProxy
isKindOfClass:
isMemberOfClass:
conformsToProtocol:
respondsToSelector:
retain
release
autorelease
retainCount
zone
hash
superclass
description
debugDescription
TQ,R
T#,R
T@"NSString",R,C
serverRoot
serverComplianceClasses
userAgentHeader
promptUserForNewCoreDAVPasswordWithCompletionBlock:
handleCertificateError:
clientCertificateInfoProvider
oauthInfoProvider
handleAuthenticateAgainstProtectionSpace:
shouldRetryUnauthorizedTask:
handleShouldUseCredentialStorage
shouldHandleHTTPCookiesForURL:
shouldTurnModalOnBadPassword
shouldTryRenewingCredential
renewCredential
noteSuccessfulRequestWithNumDownloadedElements:forTask:
noteFailedNetworkRequestForTask:
noteFailedProtocolRequestForTask:
noteTimeSpentInNetworking:forTask:
noteSuccessfulRequestWithNumDownloadedElements:
shouldCompressRequests
getAppleIDSession
newOAuth1CredentialForChallenge:
oauthVariant
calendarOfType:atURL:withOptions:
removecalendarWithURL:
setPreferredCalendarUserAddresses:
setFullName:
setCalendarHomeURL:
setDefaultCalendarURL:
setNotificationCollectionURL:
setNotificationCollectionCTag:
setInboxURL:
setInboxCTag:
setOutboxURL:
setDropBoxURL:
setNotificationURLString:
setPushTransports:
setCalendarHomePushKey:
setQuotaFreeBytes:
setSupportedCalendarComponentSets:
setCanCreateCalendars:
setIsEnabled:
isMergeSync
isEnabledForEvents
isEnabledForTodos
eventFilterStartDate
eventFilterEndDate
setIsExpandPropertyReportSupported:
setSupportsFreebusy:
setSupportsCalendarUserSearch:
prepareCalendarsForSyncWithCompletionBlock:
defaultEventCalendarTitle
defaultTodoCalendarTitle
defaultTimedAlarms
setDefaultTimedAlarms:
defaultAllDayAlarms
setDefaultAllDayAlarms:
alarmsDirty
setAlarmsDirty:
needsDefaultTimedAlarmUpdate
setNeedsDefaultTimedAlarmUpdate:
needsDefaultAllDayAlarmUpdate
setNeedsDefaultAllDayAlarmUpdate:
T@"NSString",R,N
T@"<CalDAVAccount>",R,N
T@"<CoreDAVTaskManager>",R,N
T@"NSSet",&,N
T@"NSNumber",&,N
T@"NSDateComponents",R,N
subCalPropertiesByURL
setSupportsSyncToken:
clearCalendarChanges
preferredCalendarUserAddressesForCalendar:
setPreferredCalendarUserAddresses:forCalendar:
calendarsAreDirty
APSSubscriptionURL
APSEnv
preferredCalendarEmailAddress
preferredCalendarPhoneNumber
hasCalendarUserAddress:
setUid:
shouldRefreshPrincipalSearchProperties
setShouldRefreshPrincipalSearchProperties:
setCalendarUserAddressesPerCalendar:
setLegacy_principalURL:
appleIDSession
setAppleIDSession:
_rem_changeTracking
_calendarsAreDirty
_isDelegate
_isWritable
_isEnabled
_canCreateCalendars
_isExpandPropertyReportSupported
_supportsCalendarUserSearch
_supportsFreebusy
_supportsSyncToken
_supportsPush
_shouldRefreshPrincipalSearchProperties
_shouldUpdatePushDelegate
_isDirty
_calendarHomeURL
_deletedCalendarURLs
_notificationCollectionURL
_notificationCollectionCTag
_inboxURL
_outboxURL
_dropBoxURL
_defaultCalendarURL
_uid
_account
_preferredCalendarUserAddresses
_fullName
_principalPath
_inboxCTag
_notificationURLString
_pushTransports
_calendarHomePushKey
_quotaFreeBytes
_supportedCalendarComponentSets
_calendarUserAddressesPerCalendar
_preferredCalendarUserAddress
_preferredCalendarEmailAddress
_preferredCalendarPhoneNumber
_addedCalendars
_modifiedCalendars
_legacy_principalURL
_appleIDSession
T@"NSString",&,N,V_uid
T@"<CalDAVAccount>",W,N,V_account
T@"MobileCalDAVAccount",R,N
T@"NSMutableDictionary",&,N,V_calendarUserAddressesPerCalendar
T@"NSURL",&,N,V_preferredCalendarUserAddress
T@"NSString",&,N,V_preferredCalendarEmailAddress
T@"NSString",&,N,V_preferredCalendarPhoneNumber
T@"NSMutableSet",&,N,V_deletedCalendarURLs
T@"NSMutableSet",&,N,V_addedCalendars
T@"NSMutableSet",&,N,V_modifiedCalendars
T@"NSURL",&,N,V_legacy_principalURL
T@"AKAppleIDSession",&,N,V_appleIDSession
T@"NSSet",&,N,V_preferredCalendarUserAddresses
T@"NSString",&,N,V_fullName
T@"NSURL",&,N,V_calendarHomeURL
T@"NSString",&,N,V_principalPath
T@"NSURL",&,N,V_defaultCalendarURL
T@"NSURL",&,N,V_notificationCollectionURL
T@"NSString",&,N,V_notificationCollectionCTag
T@"NSURL",&,N,V_inboxURL
T@"NSString",&,N,V_inboxCTag
T@"NSURL",&,N,V_outboxURL
T@"NSURL",&,N,V_dropBoxURL
T@"NSString",&,N,V_notificationURLString
T@"NSDictionary",&,N,V_pushTransports
T@"NSString",&,N,V_calendarHomePushKey
T@"NSNumber",&,N,V_quotaFreeBytes
T@"NSString",&,N,V_supportedCalendarComponentSets
TB,N,V_isDelegate
TB,N,V_isWritable
TB,N,V_isEnabled
TB,N,V_canCreateCalendars
TB,N,V_isExpandPropertyReportSupported
TB,N,V_supportsCalendarUserSearch
TB,N,V_supportsFreebusy
TB,N,V_supportsSyncToken
TB,N,V_supportsPush
TB,N,V_shouldRefreshPrincipalSearchProperties
TB,N,V_shouldUpdatePushDelegate
TB,N,V_isDirty
TB,N,V_calendarsAreDirty
setAddress:
initWithAddress:account:
setValue:forKey:
userAddress:forAccount:
userAddressFromDictionaryRepresentation:forAccount:
dictionaryRepresentation
_address
T@"NSURL",C,N,V_address
T@"MobileCalDAVAccount",W,N,V_account
sharingStatus
name
externalIdentifier
daIsNotificationsCollection
initWithCalendarURL:list:principal:title:
setPrincipal:
principal
da_leastInfoStringRepresentationRelativeToParentURL:
rem_getCalCalendar
rem_initCalCalendarWithTitle:
rem_calCalendar
_rem_updateCalendarOwnerInfo
daExternalIdentificationTag
setGuid:
objectID
rem_cacheListObjectID:forCalendarURLString:
setURLToEtagMap:
_rem_calURLToREMObjectIDCache
title
updateList:
removeFromParent
localizedDescription
setRem_calCalendar:
setDaExternalIdentificationTag:
rem_setListPropertiesWithBlock:error:
rem_removeListObjectIDCacheEntryForCalendarURLString:
setCalendarURLString:
setDaIsEventOnlyContainer:
daIsEventOnlyContainer
isEventContainer
_setSupportsEvents:supportsTodos:
isTaskContainer
ekColor
daHexString
initWithDASymbolicColorName:daHexString:
setColor:
daSymbolicColorName
daPushKey
pushKey
setDaPushKey:
daBulkRequests
bulkRequests
isEqualToDictionary:
setDaBulkRequests:
sharedOwnerAddress
owner
setSharedOwnerAddress:
daSupportsSharedCalendars
canBePublished
canBeShared
isFamilyCalendar
isMarkedUndeletable
isMarkedImmutableSharees
isPublished
publishURL
sharedOwnerName
ownerDisplayName
setSharedOwnerName:
_preferredAddress
daPrincipal
systemTimeZone
daDisplayOrder
order
setDaDisplayOrder:
setSharingStatus:
shareeContext
sharees
acceptedURL
href
payloadAsFullURL
rem_updatedREMShareeFromREMSharee:
commonName
payloadAsString
rem_shareeForREMList:
removeAllSharees
addSharee:
rem_reloadCalCalendar
initWithREMSharee:
daIsReadOnly
isEditable
setDaIsReadOnly:
daIsImmutable
isRenameable
setDaIsImmutable:
isForced
ctag
daSyncToken
syncToken
setDaSyncToken:
fetchRemindersWithError:
setRem_cachedFetchedRemindersForMergeSync:
fetchRemindersWithExternalIdentifiers:error:
objectAtIndexedSubscript:
fetchReminderWithDACalendarItemUniqueIdentifier:inList:error:
fetchReminderWithExternalIdentifier:error:
_rem_copyReminderWithUniqueIdentifier:inList:
setURL:forResourceWithUUID:reminderChangeItem:
_rem_copyReminderWithExternalID:
setEtag:forItemAtURL:reminderChangeItem:
serverID
saveWithLocalObject:toContainer:shouldMergeProperties:outMergeDidChooseLocalProperties:account:calendar:batchSaveRequest:
syncKey
rem_invalidateCalCalendarWithReload:
setNumDownloadedElements:
updateReminder:
removeFromList
_removeCalendarItemWithURL:
color
fetchAccountWithExternalIdentifier:error:
addListWithName:toAccountChangeItem:
fetchListIncludingSpecialContainerWithObjectID:error:
rem_cachedListObjectIDForURLString:
fetchListIncludingSpecialContainerWithExternalIdentifier:error:
rem_changeTrackingBehaviors
fetchListsWithError:
arrayWithArray:
changedIdentifiersOfModelClass:ofChangeType:
changedModelObjectsOfModelClass:ofChangeType:
_rem_changedListsOfChangeType:withChangeTrackingHelper:inPrincipal:
objectForKey:
initWithREMReminder:inContainer:
_addChangedReminder:toArrayIfNeeded:
null
setDeletedCalendarItems:
list
rem_clientID
dictionary
rem_reminderItem
daCalendarItemUniqueIdentifier
filenameWithUniqueIdentifier:
URLByAppendingPathComponent:
setServerID:
setDaCalendarItemUniqueIdentifier:
populateDataPayloadWithReminder:
initWithAction:context:
numberWithUnsignedInt:
fetchRemindersWithObjectIDs:error:
updatableBackingModel
updatePropertiesWithReminder:
numUploadedElements
setNumUploadedElements:
rem_setReminderPropertiesWithBlock:error:
setEtag:forItemAtURL:
_forceRefreshNextSync
_collectShareeActions
setShareeActions:
setByAddingObjectsFromArray:
_addShareeWithObjectID:toDictionaryIfNeeded:
uuid
owningListIdentifier
objectIdentifier
stringAddingMailto
displayName
initWithHREF:commonName:inviteStatus:access:
UUID
objectIDWithUUID:
intersectSet:
changeSet
isTruncated
error
fetchAndInitializeChangeTrackingStateIfNeeded
_prepareForcedRefreshSyncActionsForTruncatedHistoryWithTrackingState:completionBlock:
copyDeletedItems
_createActionsForItems:withAction:backingReminders:alreadySentItems:createServerIDs:shouldSave:
addObjectsFromArray:
copyAddedItemsWithBatchHandler:
supportsCalendarAudit
copyModifiedItemsWithBatchHandler:
lastConsumedDate
loadLocalItemWithAccount:
lastModifiedDate
earlierDate:
isEqualToDate:
copyAllItemsWithBatchHandler:
setIsMigrate:
uniqueIdentifier
setUuidsToAddActions:
setHrefsToModDeleteActions:
URLToEtagMap
setSyncActions:
rem_clearListObjectIDCache
callStackSymbols
fetchListWithObjectID:error:
etagsForItemURLs:
setScheduleTag:forItemAtURL:
setURL:forResourceWithUUID:
updateResourcesFromServer:
deleteResourcesAtURLs:
hasCalendarUserAddressEquivalentToURL:
setCalendarURL:
setTitle:
notes
setNotes:
symbolicColorName
setSymbolicColorName:
setPushKey:
setOwner:
setOwnerDisplayName:
setPublishURL:
prePublishURL
setPrePublishURL:
timeZone
setBulkRequests:
setOrder:
setSharees:
setIsTaskContainer:
setIsEventContainer:
setIsSubscribed:
isManagedByServer
setIsManagedByServer:
isScheduleInbox
setIsScheduleInbox:
isScheduleOutbox
setIsScheduleOutbox:
isNotification
setIsNotification:
isPoll
setIsPoll:
setIsEditable:
setIsRenameable:
setIsPublished:
isAffectingAvailability
setIsAffectingAvailability:
setCanBePublished:
setCanBeShared:
setIsFamilyCalendar:
setIsMarkedUndeletable:
setIsMarkedImmutableSharees:
wasModifiedLocally
needsResync
setNeedsResync:
setCtag:
setSyncToken:
syncActions
shareeActions
itemsToReportAsJunk
uuidsToAddActions
hrefsToModDeleteActions
allItemURLs
appSpecificCalendarItemClass
prepareMergeSyncActionsWithCompletionBlock:
clearShareeActions
syncDidFinishWithError:
putAction:completedWithError:
deleteAction:completedWithError:
recurrenceSplitAction:completedWithUpdatedETag:updatedScheduleTag:createdURL:createdETag:createdScheduleTag:
recurrenceSplitAction:failedWithError:
recurrenceSplitActionsCompletedWithError:
recurrenceSplitActions
maxAttendees
setMaxAttendees:
needsIsAffectingAvailabilityUpdate
T@"<CalDAVPrincipal>",R,N
T@"NSTimeZone",&,N
Tq,N
initWithCalendarURL:principal:title:
ownerEmailAddress
ownerPhoneNumber
hasEvents
isHidden
displayColor
clearEventChanges
prepareSyncActionsWithCompletionBlock:
recordDiagnosticsForAccountSync:
didResync
setDidResync:
deletedCalendarItems
setItemsToReportAsJunk:
rem_cachedFetchedRemindersForMergeSync
_principal
_calendarURLString
_isScheduleOutbox
_isAffectingAvailability
_wasModifiedLocally
_needsResync
_didResync
_needsPublishUpdate
_guid
_numDownloadedElements
_numUploadedElements
_deletedCalendarItems
_syncActions
_shareeActions
_itemsToReportAsJunk
_hrefsToModDeleteActions
_uuidsToAddActions
_URLToEtagMap
_rem_calCalendar
_rem_cachedFetchedRemindersForMergeSync
T@"MobileCalDAVPrincipal",R,N
T@"<CalDAVPrincipal>",W,N
T@"NSString",&,N,V_calendarURLString
T@"NSMutableDictionary",&,N,V_deletedCalendarItems
T@"NSArray",&,N,V_syncActions
T@"NSArray",&,N,V_shareeActions
T@"NSArray",&,N,V_itemsToReportAsJunk
T@"NSDictionary",&,N,V_hrefsToModDeleteActions
T@"NSDictionary",&,N,V_uuidsToAddActions
T@"NSMutableDictionary",&,N,V_URLToEtagMap
T@"REMAccount",R,N
T@"REMList",&,N,V_rem_calCalendar
T@"NSArray",&,N,V_rem_cachedFetchedRemindersForMergeSync
T@"NSString",&,N,V_guid
TB,N,V_isScheduleOutbox
TB,N,V_isAffectingAvailability
TB,N,V_wasModifiedLocally
TB,N,V_needsResync
TB,N,V_didResync
TB,N,V_needsPublishUpdate
TQ,N,V_numDownloadedElements
TQ,N,V_numUploadedElements
initWithFormat:
defaultManager
fileExistsAtPath:isDirectory:
createDirectoryAtPath:withIntermediateDirectories:attributes:error:
stringByExpandingTildeInPath
isWritableFileAtPath:
stringByDeletingLastPathComponent
da_hasPrefixCaseInsensitive:
rangeOfString:options:range:
hasMailto
stringByAppendingString:
substringFromIndex:
stringRemovingMailto
firstName
setFirstName:
lastName
setLastName:
setDisplayName:
emailAddress
setEmailAddress:
preferredCUAddress
setPreferredUserAddress:
cuAddresses
setCuAddresses:
preferredUserAddress
setIdentifierOnServer:
setObjectID:
T@"REMObjectID",R,N
initWithReminder:
T@"REMObjectID",&,N,VobjectID
T@"NSString",C,N,VdaCalendarItemUniqueIdentifier
T@"NSString",C,N,VexternalModificationTag
rem_saveRequestForDataAccess
initWithAccountID:remAccountObjectID:accountDescription:
loggingDescription
rem_accountObjectID
setAccountID:
setRem_accountObjectID:
_accountID
_rem_accountObjectID
_accountDescription
T@"NSString",&,N,V_accountID
T@"REMObjectID",&,N,V_rem_accountObjectID
T@"NSString",&,N,V_accountDescription
setCurLogger:
curLogger
dataUsingEncoding:
initWithFormat:arguments:
logString:
instance
finishSnippets
logStringWithFormat:
logData:
_curLogger
T@"DACoreDAVLogger",&,N,V_curLogger
transactionId
setContext:
setOutstandingTaskGroups:
setOutstandingTasks:
setOutstandingOperationGroup:
outstandingTaskGroups
outstandingTasks
initWithDomain:code:userInfo:
finishEarlyWithError:
setShouldCancel:
state
setCompletionBlock:
_teardownAllOutstandingOperations
completionBlock
setError:
_sendResultToAccount
shouldCancel
_refreshShouldContinue
setState:
_refreshCalendarProperties
_refreshDelegateAccountProperties
_sendMoveTasks
_attachmentUUIDsToUpload
setAttachmentUUIDsToUpload:
_refreshRegularCalendars
_uploadAttachments
_refreshSpecialCalendars
_calendarCollectionsWereRefreshed
outstandingOperationGroup
sharedRunLoop
getCFRunLoop
refreshing
setRefreshing:
_refreshAccountProperties
_waitForStateTransition
initWithPrincipal:
setFetchPrincipalSearchProperties:
refreshProperties
setShouldSaveAccounts:
supportsCalendarProxy
setMdelegate:
refreshDelegates
setUseCalendarHomeSyncReport:
refreshCalendarProperties
setPathsToCTags:
setPathsToSyncTokens:
calendarSyncForPrincipal:calendar:completedWithError:
clearCachedModelObjectResultsForModelClass:
setCalendarsToRefresh:
calendarsToRefresh
_sendMoveForItem:
destinationURL
responseHeaders
CDVObjectForKeyCaseInsensitive:
_clearMoveChange:
_syncCalendar:
pathsToCTags
pathsToSyncTokens
_refreshedCtagForCalendar:
_refreshedSyncTokenForCalendar:
initWithPrincipal:calendar:nextCtag:nextSyncToken:
syncCalendar
shouldSave
setCalendarFailedToSync:
retryTime
setRetryTime:
setShouldRetry:
accountSyncDiagnostics
defaultTimeZone
dateFromComponents:
taskGroup:didFinishWithError:
propertyRefreshForPrincipal:completedWithError:
calendarRefreshForPrincipal:completedWithNewCTags:newSyncTokens:calendarHomeSyncToken:updatedCalendars:error:
calendarRefreshShouldRetryMkCalendarForPrincipal:calendar:error:
calendarRefreshFoundUpdatedContainerWithIgnoredEntityType:
calendarRefreshFoundUpdatedSpecialContainer:
calendarRefreshFoundDeletedContainerURL:
delegateRefreshForPrincipal:completedWithError:
_handleMoveTaskComplete:moveItem:
didFinish
setDidFinish:
setAccountSyncDiagnostics:
attachmentUUIDsToUpload
_transaction
_shouldCancel
_didFinish
_refreshing
_state
_context
_completionBlock
_pathsToCTags
_pathsToSyncTokens
_calendarsToRefresh
_outstandingOperationGroup
_outstandingTaskGroups
_outstandingTasks
_calendarHomeSyncToken
_accountSyncDiagnostics
T@"CalDAVRefreshContext",&,N,V_context
TB,N,V_shouldCancel
TB,N,V_didFinish
TB,N,V_refreshing
T@?,C,N,V_completionBlock
T@"NSMutableDictionary",&,N,V_pathsToCTags
T@"NSMutableDictionary",&,N,V_pathsToSyncTokens
T@"NSMutableArray",&,N,V_calendarsToRefresh
T@"NSObject<OS_dispatch_group>",&,N,V_outstandingOperationGroup
T@"NSMutableSet",&,N,V_outstandingTaskGroups
T@"NSMutableSet",&,N,V_outstandingTasks
Ti,N,V_state
T@"NSString",&,N,V_calendarHomeSyncToken
T@"CalDiagAccountSync",&,N,V_accountSyncDiagnostics
T@"NSArray",&,N,V_attachmentUUIDsToUpload
defaultContext
setIsForced:
wasUserRequested
setWasUserRequested:
wasDueToPush
setWasDueToPush:
didDownloadEvents
setDidDownloadEvents:
didSaveDatabase
setDidSaveDatabase:
shouldRetry
setLocalItems:
_isForced
_wasUserRequested
_wasDueToPush
_isPrincipalOnly
_isCalendarsOnly
_didDownloadEvents
_didSaveDatabase
_shouldSave
_shouldSaveAccounts
_calendarFailedToSync
_shouldRetry
_retryTime
_startTime
_error
_localItems
TB,N,V_isForced
TB,N,V_wasUserRequested
TB,N,V_wasDueToPush
TB,N,V_isPrincipalOnly
TB,N,V_isCalendarsOnly
TB,N,V_didDownloadEvents
TB,N,V_didSaveDatabase
TB,N,V_shouldSave
TB,N,V_shouldSaveAccounts
TB,N,V_calendarFailedToSync
Td,N,V_startTime
TB,N,V_shouldRetry
Ti,N,V_retryTime
T@"NSError",&,N,V_error
TQ,N,V_localItems
setDaIsNotificationsCollection:
calDAVNotificationContext
calDAVNotifications
_accountLoggingDescription
_notifications
uuidString
_copyNotificationWithExternalID:
updateCalDAVNotification:withBlock:
_copyNotificationWithUniqueIdentifier:
dataPayload
initWithRootElementNameSpace:name:parseClass:baseURL:
processData:forTask:
rootElement
lastPathComponent
content
_handleInviteNotification:withResource:uid:
_handleInviteReply:withResource:owningNotification:uid:
_handleResourceChanged:withResource:uid:
hostURL
removeCalDAVNotication:
store
inviteStatus
supportedCalendarComponentSet
componentsAsString
organizer
summary
addCalDAVNotificationWithUUIDString:hostURL:externalIdentifier:externalModificationTag:
rem_userNotificationPresentingProvider
rem_notificationPresentingForDataAccess
calDAVSharedListNotificationContentWithList:
localizedStringWithFormat:
setBody:
showNotificationWithIdentifier:content:completion:
recurrences
recurrenceID
changes
changedProperties
nameAttribute
typeAttribute
created
updated
deleted
collectionChanges
collectionUpdates
_changedAttributesFromCalendarChanges:
mostRecentNotificationChangeIndex
setMostRecentNotificationChangeIndex:
_mostRecentNotificationChangeIndex
Ti,N,V_mostRecentNotificationChangeIndex
setSyncKey:
setDataPayload:
setRem_LocalItem:
stringByAppendingPathExtension:
stringByAddingPercentEscapesUsingEncoding:
stringByReplacingOccurrencesOfString:withString:
originatingChangeItems
titleAsString
dueDateComponents
components
systemTimeZoneForDate:
rem_dateWithDateComponents:timeZone:
last_modified
rem_dateAsUTC
addReminderWithTitle:toListChangeItem:
dictionaryWithObject:forKey:
displayAccount
updateReminderChangeItem:fromICSTodo:icsCalendar:isNew:withOptions:
initWithData:options:error:
setDocument:
calendar
componentKeys
componentForKey:
_addOrModifyTask:inICSCalendar:withList:shouldMergeProperties:outMergeDidChooseLocalProperties:inMobileCalendar:batchSaveRequest:
setProdid:
isMigrate
attendee
setScheduleagent:
componentOccurrencesForKey:
arrayWithObjects:count:
exportICSCalendarFromReminders:
_fixUpCalendarForServer:
initWithCalendar:
ICSDataWithOptions:
fetchReminderWithObjectID:error:
setRem_clientID:
debugReminderFetchCount
setDebugReminderFetchCount:
numberWithUnsignedLong:
initWithURL:eTag:dataPayload:inContainerWithURL:withAccountInfoProvider:
childrenOrder
sourceURL
setSourceURL:
setDestinationURL:
T@"NSData",R,N
saveWithLocalObject:toContainer:shouldMergeProperties:outMergeDidChooseLocalProperties:account:
saveServerIDToExistingItem
deleteFromContainer:
scheduleTag
setScheduleTag:
scheduleChanges
setScheduleChanges:
createdBy
setCreatedBy:
updatedBy
setUpdatedBy:
T@"CalDAVCalendarServerScheduleChangesItem",&,N
T@"CalDAVUpdateOwnerItem",&,N
filename
setOriginatingChangeItems:
addChangeOfType:forChangeRowid:
document
statusChanged
setStatusChanged:
setUniqueIdentifier:
setFilename:
_scheduleTag
_originatingChangeItems
_dataPayload
_isMigrate
_statusChanged
_syncKey
_scheduleChanges
_serverID
_rem_clientID
_rem_reminderItem
_document
_createdBy
_updatedBy
_uniqueIdentifier
_filename
_debugReminderFetchCount
T@"NSString",&,N,V_syncKey
T@"NSData",&,N,V_dataPayload
T@"ICSDocument",&,N,V_document
TB,N,V_statusChanged
T@"NSString",&,N,V_uniqueIdentifier
T@"NSString",&,N,V_filename
TQ,N,V_debugReminderFetchCount
T@"NSURL",&,N,V_serverID
T@"REMObjectID",&,N,V_rem_clientID
T@"<DACalDAViCalItemBackingModel>",R,N,V_rem_reminderItem
T@"CalDAVCalendarServerScheduleChangesItem",&,N,V_scheduleChanges
T@"CalDAVUpdateOwnerItem",&,N,V_createdBy
T@"CalDAVUpdateOwnerItem",&,N,V_updatedBy
T@"NSMutableDictionary",C,N
TB,N,V_isMigrate
setResultType:
setMCUAddresses:
setMEmailAddresses:
successfulPropertiesToValues
namespaceAndNameForWellKnownType:
CDVObjectForKeyWithNameSpace:andName:
firstHref
payloadAsOriginalURL
da_pathWithoutTrailingRemovingSlash
da_trimWhiteSpace
resultTypeForRecordType:
addEmail:
hrefs
addCUAddress:
initWithResponse:
mCUAddresses
mEmailAddresses
resultType
setEmailAddresses:
_firstName
_lastName
_displayName
_resultType
_emailAddresses
_mCUAddresses
_mEmailAddresses
T@"NSMutableArray",&,N,V_mCUAddresses
T@"NSMutableArray",&,N,V_mEmailAddresses
T@"NSString",&,N,V_firstName
T@"NSString",&,N,V_lastName
T@"NSString",&,N,V_displayName
T@"NSString",&,N,V_resultType
T@"NSArray",&,N,V_emailAddresses
status
accessLevel
access
newObjectID
initShareeWithObjectID:accountID:listID:displayName:firstName:lastName:address:status:accessLevel:
listID
setSourceCalendarID:
setItemID:
setOldExternalID:
setChangeID:
setObjectType:
initWithSourceCalendarID:itemID:oldExternalID:changeID:objectType:
sourceCalendarID
itemID
oldExternalID
changeID
objectType
_sourceCalendarID
_itemID
_changeID
_oldExternalID
_objectType
Ti,N,V_sourceCalendarID
Ti,N,V_itemID
T@"NSString",&,N,V_oldExternalID
Ti,N,V_changeID
Tq,N,V_objectType
initWithAccountInfoProvider:principalURL:taskManager:
setServerSupportsExpandPropertyReport:
readWritePrincipalDetails
infoFromCalDAVDetails:allowWrite:
readOnlyPrincipalDetails
dictionaryWithDictionary:
mdelegate
finishCoreDAVTaskGroupWithError:delegateCallbackBlock:
_mdelegate
T@"<CalDAVAccountDelegatesRefreshDelegate>",N,V_mdelegate
setAllowWrite:
initWithPrincipalPath:displayName:allowWrite:
allowWrite
_allowWrite
TB,N,V_allowWrite
v16@0:8
@24@0:8@16
@16@0:8
B16@0:8
v24@0:8@16
v20@0:8i16
i16@0:8
v20@0:8B16
B20@0:8B16
v24@0:8@?16
v32@0:8@16@24
v40@0:8@16@24@32
B24@0:8@16
q16@0:8
v32@0:8@16q24
@"NSMutableDictionary"
@"NSMutableSet"
@"CalDAVServerVersion"
@"NSString"
@"MobileCalDAVPrincipal"
@"NSDictionary"
@"CalDAVPrincipalSearchPropertySet"
@"CalDAVRefreshContext"
@"CoreDAVDiscoveryTaskGroup"
@"MobileCalDAVAccountRefreshActor"
@"DACoreDAVLogger"
B32@0:8@16@24
#16@0:8
@24@0:8:16
@32@0:8:16@24
@40@0:8:16@24@32
B24@0:8#16
B24@0:8:16
Vv16@0:8
Q16@0:8
^{_NSZone=}16@0:8
B24@0:8@"Protocol"16
@"NSString"16@0:8
B32@0:8@16@?24
v32@0:8q16@24
v32@0:8d16@24
v24@0:8q16
v24@0:8d16
^{__CFURLStorageSession=}16@0:8
v48@0:8@16@24@32@?40
@"NSData"16@0:8
@"NSURL"16@0:8
@"NSSet"16@0:8
v24@0:8@?<v@?i>16
B24@0:8@"NSError"16
@"NSDictionary"16@0:8
@"<CoreDAVClientCertificateInfoProvider>"16@0:8
@"<CoreDAVOAuthInfoProvider>"16@0:8
B32@0:8@"NSURLAuthenticationChallenge"16@?<v@?q@"NSURLCredential">24
B24@0:8@"NSURLProtectionSpace"16
B24@0:8@"NSURLSessionTask"16
v24@0:8@"NSURL"16
B24@0:8@"NSURL"16
v32@0:8q16@"CoreDAVTask"24
v24@0:8@"CoreDAVTask"16
v32@0:8d16@"CoreDAVTask"24
v48@0:8@"NSURL"16@"NSString"24@"NSObject<OS_dispatch_queue>"32@?<v@?i>40
@"AKAppleIDSession"16@0:8
^{_CFURLCredential=}24@0:8@16
^{_CFURLCredential=}24@0:8@"NSURLAuthenticationChallenge"16
@36@0:8i16@20@28
@"<CalDAVCalendar>"36@0:8i16@"NSURL"20@"NSDictionary"28
v24@0:8@"<CalDAVCalendar>"16
@"<CalDAVAccount>"16@0:8
@"<CoreDAVTaskManager>"16@0:8
v24@0:8@"NSSet"16
v24@0:8@"NSString"16
v24@0:8@"NSDictionary"16
@"NSNumber"16@0:8
v24@0:8@"NSNumber"16
@"NSDateComponents"16@0:8
v24@0:8@?<v@?@"<CalDAVPrincipal>">16
@32@0:8@16@24
@20@0:8i16
v32@0:8q16q24
@"REMDAChangeTrackingHelper"
@"NSURL"
@"<CalDAVAccount>"
@"NSSet"
@"NSNumber"
@"AKAppleIDSession"
@"MobileCalDAVAccount"
@40@0:8q16@24@32
v64@0:8@16@24@32@40@48@56
@"NSDictionary"24@0:8@"NSArray"16
B32@0:8@"NSString"16@"NSURL"24
B32@0:8@"NSURL"16@"NSString"24
B24@0:8@"NSSet"16
@"<CalDAVPrincipal>"16@0:8
@"NSTimeZone"16@0:8
v24@0:8@"NSTimeZone"16
@"NSArray"16@0:8
v24@0:8@?<v@?@"<CalDAVCalendar>">16
v24@0:8@"NSError"16
v32@0:8@"CoreDAVAction"16@"NSError"24
v64@0:8@"CalDAVRecurrenceSplitAction"16@"NSString"24@"NSString"32@"NSURL"40@"NSString"48@"NSString"56
v32@0:8@"CalDAVRecurrenceSplitAction"16@"NSError"24
@48@0:8@16@24@32@40
@40@0:8@16@24@32
v24@0:8B16B20
B40@0:8@16@24@32
@56@0:8@16i24@28@36B44^B48
v32@0:8@16@?24
B32@0:8@?16^@24
v24@0:8Q16
@"NSArray"
@"REMList"
@"<DACalDAViCalItemUpdatableBackingModel>"16@0:8
@"REMObjectID"16@0:8
v24@0:8@"REMReminder"16
@"REMObjectID"
v32@0:8@"CoreDAVTaskGroup"16@"NSError"24
v32@0:8@"<CalDAVPrincipal>"16@"NSError"24
v64@0:8@"<CalDAVPrincipal>"16@"NSDictionary"24@"NSDictionary"32@"NSString"40@"NSSet"48@"NSError"56
B40@0:8@"<CalDAVPrincipal>"16@"<CalDAVCalendar>"24@"NSError"32
v24@0:8@"CalDAVContainer"16
v40@0:8@"<CalDAVPrincipal>"16@"<CalDAVCalendar>"24@"NSError"32
@?16@0:8
@"DATransaction"
@"NSMutableArray"
@"NSObject<OS_dispatch_group>"
@"CalDiagAccountSync"
d16@0:8
@"NSError"
B48@0:8@16@24@32@40
@56@0:8@16@24@32@40@48
@56@0:8@"NSURL"16@"NSString"24@"NSData"32@"NSURL"40@"<CoreDAVAccountInfoProvider>"48
B52@0:8^v16^v24B32^B36@44
B24@0:8^v16
B52@0:8^v16^v24B32^B36@"DAAccount"44
v24@0:8@"<DACalDAViCalItemBackingModel>"16
B24@0:8@"DAAccount"16
@"CalDAVCalendarServerScheduleChangesItem"16@0:8
v24@0:8@"CalDAVCalendarServerScheduleChangesItem"16
@"CalDAVUpdateOwnerItem"16@0:8
v24@0:8@"CalDAVUpdateOwnerItem"16
v28@0:8@16i24
@68@0:8@16@24@32B40^B44@52@60
@68@0:8^v16^v24B32^B36@44@52@60
@"NSData"
@"CalDAVCalendarServerScheduleChangesItem"
@"<DACalDAViCalItemBackingModel>"
@"ICSDocument"
@"CalDAVUpdateOwnerItem"
@44@0:8i16i20@24i32q36
@"<CalDAVAccountDelegatesRefreshDelegate>"
@28@0:8@16B24
@36@0:8@16@24B32
