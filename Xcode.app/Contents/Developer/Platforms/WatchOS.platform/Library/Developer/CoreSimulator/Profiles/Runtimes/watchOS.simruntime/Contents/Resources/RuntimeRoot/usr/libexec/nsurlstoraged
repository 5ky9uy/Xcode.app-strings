@(#)PROGRAM:nsurlstoraged  PROJECT:CFNetwork-1121
<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE plist PUBLIC "-//Apple//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd">
<plist version="1.0">
<dict>
<key>BuildMachineOSBuild</key>
<string>18A391011</string>
<key>CFBundleExecutable</key>
<string>nsurlstoraged</string>
<key>CFBundleIdentifier</key>
<string>com.apple.nsurlstoraged</string>
<key>CFBundleInfoDictionaryVersion</key>
<string>6.0</string>
<key>CFBundleName</key>
<string>nsurlstoraged</string>
<key>CFBundleSupportedPlatforms</key>
<array>
<string>WatchSimulator</string>
</array>
<key>DTCompiler</key>
<string>com.apple.compilers.llvm.clang.1_0</string>
<key>DTPlatformBuild</key>
<string>11L374m</string>
<key>DTPlatformName</key>
<string>watchsimulator</string>
<key>DTPlatformVersion</key>
<string>6.1</string>
<key>DTSDKBuild</key>
<string>17S73</string>
<key>DTSDKName</key>
<string>watchsimulator6.1.internal</string>
<key>DTXcode</key>
<string>1100</string>
<key>DTXcodeBuild</key>
<string>11L374m</string>
<key>MinimumOSVersion</key>
<string>6.1</string>
<key>UIDeviceFamily</key>
<array>
<integer>4</integer>
</array>
</dict>
</plist>
<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE plist PUBLIC "-//Apple//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd">
<plist version="1.0">
<dict>
<key>com.apple.private.assets.accessible-asset-types</key>
<array>
<string>com.apple.MobileAsset.TopLevelDomainDafsa</string>
</array>
<key>com.apple.private.security.storage-exempt.heritable</key>
<true/>
<key>com.apple.private.security.storage.HomeKit</key>
<true/>
<key>com.apple.private.security.storage.containers</key>
<true/>
<key>com.apple.private.security.storage.cookies</key>
<true/>
<key>com.apple.security.system-groups</key>
<array>
<string>systemgroup.com.apple.nsurlstoragedresources</string>
</array>
<key>mach-issue-extension</key>
<true/>
<key>seatbelt-profiles</key>
<array>
<string>nsurlstoraged</string>
</array>
</dict>
</plist>
__CFN_DiskMetricsCollector
TLDMobileAssetManager
NSURLStorageDB
NSURLStorageTaskCopyAllPartitionNames
NSURLStorageTaskManager
NSURLStorageTaskDeleteResponseForRequest
NetworkStorageXPCProtocol
NSURLStorageCacheClient
NSObject
NSXPCListenerDelegate
NetStorageXPCListenerDelegate
NetStorageXPCObjectHandler
NSURLStorageTask
NSURLStorageTaskDeleteResponsesSinceDate
NSURLStorageTaskDeleteAllResponses
NSURLStorageTaskShrink
NSURLStorageTaskCopyHostNames
NSURLWriteStorageTaskManager
NSURLStorageTaskSchemaCheck
NSURLReadStorageTaskManager
NSURLStorageTaskDeleteHostNames
NSURLStorageURLCacheDB
WriteCacheItem
NSURLStorageTaskWrite
stageURL
T@"NSURL",&,N,V_stageURL
reportHandler
T@?,C,N,V_reportHandler
diskUsage
T@"NSMutableDictionary",&,N,V_diskUsage
lastSubmissionDate
T@"NSDate",&,N,V_lastSubmissionDate
lastSaveDate
T@"NSDate",&,N,V_lastSaveDate
metricsQueue
T@"NSObject<OS_dispatch_queue>",&,N,V_metricsQueue
reportTimeInterval
Td,V_reportTimeInterval
stageTimeInterval
Td,V_stageTimeInterval
cachedDiskUsage
com.apple.CFNetwork.DiskMetrics
installedAssetVersion
TQ,V_installedAssetVersion
DafsaData.bin
Library/dafsaData.bin
systemgroup.com.apple.nsurlstoragedresources
v16@?0q8
com.apple.MobileAsset.TopLevelDomainDafsa
dbPathDirectory
T@"NSString",&,V_dbPathDirectory
dbPathFile
T@"NSString",&,V_dbPathFile
isDBOpen
TB,V_isDBOpen
maxDBSize
Tq,V_maxDBSize
auditToken
T{?=[8I]},V_auditToken
UNEXPECTED: close of sql read connection result=%d
_closeDBWriteConnections: UNEXPECTED close result for sql write connection. result=%d
_closeDBWriteConnections: Trying to close the DB connection but unexpected results returned. result=%d
CLOSE-WRITE-ERROR: self=%p _dbWriteConnection=%p, result=%d
NetworkStorageDB:openReadWriteConnection: failed to open read connection to DB @ %s.  Error=%d. Cause=%s
NetworkStorageDB:_openDBReadConnections: failed to open read connection to DB @ %s.  Error=%d. Cause=%s
NetworkStorageDB:_openDBWriteConnections: failed to open write connection to DB @ %s.  Error=%d. Cause=%s
file-read-data
realpath() returned NULL for %s
Unable to access path %s
%@/Cache.db
com.apple.CFNetwork.cache.copyAllPartitionNames
persistentDB
T@"NSURLStorageURLCacheDB",&,V_persistentDB
xpcConnectionToRemoteEndpoint
T@"NSXPCConnection",&,V_xpcConnectionToRemoteEndpoint
sandboxExtensionData
T@"NSData",&,V_sandboxExtensionData
Failed to consume the sandbox extension for path-=%@.  Errno:%d
Failed to allocate extension-token for path-=%@.  Errno:%d
com.apple.CFNetwork.cache.deleteResponseForRequestWithKey
hash
TQ,R
superclass
T#,R
description
T@"NSString",R,C
debugDescription
com.apple.nsurlstorage-cache
memoryPressureSource
T@"NSObject<OS_dispatch_source>",&,V_memoryPressureSource
lastMemoryPressureEvent
TQ,V_lastMemoryPressureEvent
idleTime
Td,V_idleTime
clientBundleID
T@"NSString",&,N,V_clientBundleID
xpcConnection
T@"NSXPCConnection",R,W,V_xpcConnection
v16@?0@"NSArray"8
v12@?0B8
CC11
ERROR: failed to decode data into dictionary for key=%@. Error=%@
file-write-data
com.apple.CFNetwork.cache.idleTimeoutExtension
com.apple.nsurlstoraged.IdleExitTimerQueue
keyForRequest
T@"NSString",&,V_keyForRequest
com.apple.CFNetwork.cache.deleteResponsesSinceDate
com.apple.CFNetwork.cache.deleteAllResponses
com.apple.CFNetwork.cache.shrink
NSURLWriteStorageTaskManager
com.apple.CFNetwork.cache.copyHostNames
cachedKeyAndDataToWrite
T@"NSMutableArray",&,N,V_cachedKeyAndDataToWrite
com.apple.CFNetwork.cache.schemaCheck
Failed to consume the sandbox extension for path=%@.  Errno:%d
Failed to allocate extension-token for path=%@.  Errno:%d
com.apple.CFNetwork.cache.deleteAllHostNames
currentFSBackedUsage
TQ,V_currentFSBackedUsage
currentSQLiteDBUsage
TQ,V_currentSQLiteDBUsage
currentTotalPersistentCacheUsage
TQ,V_currentTotalPersistentCacheUsage
minSizeForFileSystemBackedCacheItem
Tq,V_minSizeForFileSystemBackedCacheItem
performingShrink
TC,V_performingShrink
recentTimeStampLookups
T@"NSMutableSet",&,VrecentTimeStampLookups
performTimeRelativeLookups
TC,VperformTimeRelativeLookups
PRAGMA secure_delete=true;
ERROR: _activateSecureDelete: DB=%@ failed to set PRAGMA secure_delete=true - %s. ErrCode: %d.
COMMIT TRANSACTION;
BEGIN IMMEDIATE TRANSACTION;
ERROR: _purgeAllFileSystemCacheData - failed to get the path to the FS cached data at %@
Error: execSQLStatement:onConnection:toCompletionWithRetry:writeLockHelp - SQL=%s, error-code=%d, error-message=%s
Error: stepSQLStatement:toCompletionWithRetry - stepping returned unhandled result=%d, DB=%@
ERROR: stepSQLStatement:toCompletionWithRetry - nil statement, nothing to step.
ERROR: NSURLStorageURLCacheDB deleteAllResponses: dbConnection=%p DB=%@ Truncate Database failed:%s ErrCode: %d.
SELECT receiver_data from cfurl_cache_receiver_data WHERE isDataOnFS > 0 AND entry_ID in (SELECT entry_ID FROM cfurl_cache_response WHERE time_stamp >= "%s")
BEGIN IMMEDIATE;
DELETE from cfurl_cache_receiver_data WHERE entry_ID in (SELECT entry_ID FROM cfurl_cache_response WHERE time_stamp >= "%s")
DELETE from cfurl_cache_blob_data WHERE entry_ID in (SELECT entry_ID FROM cfurl_cache_response WHERE time_stamp >= "%s")
DELETE from cfurl_cache_response WHERE time_stamp >= "%s"
COMMIT;
PRAGMA incremental_vacuum(500);
PRAGMA wal_checkpoint;
ERROR: NSURLStorageURLCacheDB deleteResponsesSinceDate: dbConnection=%p DB=%@ Pragma checkpoint failed:%s ErrCode: %d.
ERROR: NSURLStorageURLCacheDB deleteResponsesSinceDate: dbConnection=%p DB=%@ Vacuum failed:%s ErrCode: %d.
ERROR: NSURLStorageURLCacheDB deleteResponsesSinceDate: dbConnection=%p DB=%@ Commit transaction failed:%s ErrCode: %d.
ERROR: NSURLStorageURLCacheDB deleteResponsesSinceDate: dbConnection=%p DB=%@ Delete failed:%s ErrCode: %d.
ERROR: NSURLStorageURLCacheDB deleteResponsesSinceDate: dbConnection=%p DB=%@ Begin transaction failed:%s ErrCode: %d.
ERROR: NSURLStorageURLCacheDB deleteResponsesSinceDate: dbConnection=%p DB=%@ Select for FS data failed:%s ErrCode: %d.
SELECT partition FROM cfurl_cache_response
INFO: did not get an result from the select for partition names.
ERROR:  unable to create a string to hold the partition name.  Tried to allocate a %d string.
SELECT request_key FROM cfurl_cache_response WHERE partition='%s'
SELECT request_key from cfurl_cache_response
ERROR:  did not get an result from the select.
ERROR:  unable to create string URL.
ERROR:  unable to create a URL from string.
ERROR:  cannot create cannonical URL from %@
ERROR:  did not get an result array to write into.
SELECT receiver_data from cfurl_cache_receiver_data WHERE isDataOnFS > 0 AND entry_ID in 
 (SELECT entry_ID from cfurl_cache_response WHERE request_key=%s AND partition=%s)
SELECT receiver_data from cfurl_cache_receiver_data WHERE isDataOnFS > 0 AND entry_ID in 
 (SELECT entry_ID from cfurl_cache_response WHERE request_key=%s)
BEGIN IMMEDIATE
DELETE from cfurl_cache_receiver_data WHERE entry_ID in 
 (SELECT entry_ID from cfurl_cache_response WHERE request_key like %s AND 
 partition='%s')
DELETE from cfurl_cache_receiver_data WHERE entry_ID in 
 (SELECT entry_ID from cfurl_cache_response WHERE request_key like %s)
DELETE from cfurl_cache_blob_data WHERE entry_ID in
 (SELECT entry_ID FROM cfurl_cache_response WHERE request_key like %s AND 
 partition='%s')
DELETE from cfurl_cache_blob_data WHERE entry_ID in
 (SELECT entry_ID FROM cfurl_cache_response WHERE request_key like %s)
DELETE from cfurl_cache_response WHERE request_key like %s AND 
 partition='%s'
DELETE from cfurl_cache_response WHERE request_key like %s
COMMIT
pragma wal_checkpoint;
deleteAllHostNames - ERROR(%d): %s
'%%%@%%'
'%@'
SELECT receiver_data, entry_ID from cfurl_cache_receiver_data WHERE isDataOnFS > 0 AND entry_ID in 
 (SELECT entry_ID from cfurl_cache_response WHERE entry_ID > 0 ORDER BY time_stamp ASC LIMIT %d)
DELETE from %s WHERE entry_ID in (%s)
cfurl_cache_blob_data
cfurl_cache_receiver_data
cfurl_cache_response
SELECT entry_ID from cfurl_cache_receiver_data WHERE isDataOnFS < 1 AND entry_ID in 
 (SELECT entry_ID from cfurl_cache_response WHERE entry_ID > 0 ORDER BY time_stamp ASC LIMIT %d)
ERROR: shrinkDB - unable to start a DB transaction.  Error-code=%d
ERROR: shrinkDB - shrink of file system cache did not fully complete.  Result: %d
ERROR: unable to allocate receiver data.
-[NSURLStorageURLCacheDB writeDBwithCachedResponse_NoLock:withKey:taskManager:]
/BuildRoot/Library/Caches/com.apple.xbs/Sources/CFNetwork_nsurlstorage_Sim/CFNetwork-1121/NetworkStorages/Cache_Storage/NSURLStorageURLCacheDB.mm
lenUserInfo == CFDataGetLength(dataUserInfo)
dataResponseObjectLength == CFDataGetLength(dataResponseObjectBytes)
dataRequestObjectLength == CFDataGetLength(dataRequestObjectBytes)
dataProtoPropsLength == CFDataGetLength(dataProtoPropsBytes)
writeDBwithCachedResponse-ERROR: task-mgr=%@ (_dbWriteConnection=%p) insert SQL stmnt. is nil for storage: %@
writeDBwithCachedResponse-stored into DB FAILED-for item: %@. Error-code=%d
INSERT: ERROR: unable to obtain the persistent store directory.
ERROR: failed to write cached response to %@. Falling back to old persistent store mechanism.
ERROR: writeDBwithCachedResponse -bind Receiver-receiverData: %d
writeDBwithCachedResponse-ERROR with UPDATE for item: %@.  Error-code:%d
writeDBwithCachedResponse-ERROR: bind of 0 partition value for item: %@
writeDBwithCachedResponse-ERROR: bind of partition value for item: %@
writeDBwithCachedResponse-ERROR: NO key for item: %@
writeDBwithCachedResponse-ERROR: bind of key for item: %@
writeDBwithCachedResponse-ERROR: bind of storage policy for item: %@
writeDBwithCachedResponse-ERROR: bind of hash for item: %@
writeDBwithCachedResponse-ERROR: %d bind of response version for item: %@
writeDBwithCachedResponse - invalid partition value provided
CC13
writeDBwithCachedResponse - no proto props data provided
CC12
writeDBwithCachedResponse - no proto props length provided
writeDBwithCachedResponse - no request data provided
CC10
writeDBwithCachedResponse - no request length provided
writeDBwithCachedResponse - no response data provided
writeDBwithCachedResponse - no response object length provided
writeDBwithCachedResponse - no receiver data provided
writeDBwithCachedResponse - receiver data length mismatch
writeDBwithCachedResponse - no receiver data length provided
writeDBwithCachedResponse - no user info data provided
writeDBwithCachedResponse - no user info length provided
writeDBwithCachedResponse - no storage policy provided
writeDBwithCachedResponse - no hash key provided
ERROR: the provided task-manager is not valid.  Cannot shrink.
DELETE from cfurl_cache_response WHERE entry_ID=%s;
DELETE from cfurl_cache_blob_data WHERE entry_ID=%s;
DELETE from cfurl_cache_receiver_data WHERE entry_ID=%s;
SELECT r.version, r.storage_policy, b.response_object, b.proto_props, d.isDataOnFS, d.receiver_data, b.request_object, b.user_info, r.time_stamp FROM cfurl_cache_response r, cfurl_cache_blob_data b, cfurl_cache_receiver_data d WHERE r.request_key=%q AND b.entry_ID=r.entry_ID AND b.entry_ID=d.entry_ID;
SELECT r.version, r.storage_policy, b.response_object, b.proto_props,d.isDataOnFS, d.receiver_data, b.request_object, b.user_info, r.request_key FROM cfurl_cache_response r, cfurl_cache_blob_data b, cfurl_cache_receiver_data d WHERE r.time_stamp=%q AND b.entry_ID=r.entry_ID AND b.entry_ID=d.entry_ID LIMIT 200;
INSERT into cfurl_cache_response (version, hash_value, storage_policy, 
 request_key, partition) VALUES (%q, %q, %q, %q, %q);
INSERT into cfurl_cache_blob_data (entry_ID, response_object, request_object,
 proto_props, user_info) 
 VALUES (%q, %q, %q, %q, %q);
INSERT into cfurl_cache_receiver_data (entry_ID, isDataOnFS, receiver_data) 
 VALUES (%q, %q, %q);
UPDATE cfurl_cache_response SET version=%q, hash_value=%q, storage_policy=%q, partition=%q
 WHERE entry_ID=%q;
UPDATE cfurl_cache_blob_data SET response_object=%q, request_object=%q,
 proto_props=%q, user_info=%q WHERE entry_ID=%q;
UPDATE cfurl_cache_receiver_data SET receiver_data=%q, isDataOnFS=%q WHERE entry_ID=%q;
SELECT r.entry_ID, d.receiver_data, d.isDataOnFS FROM cfurl_cache_response r, cfurl_cache_receiver_data d WHERE r.request_key=%q AND d.entry_ID=r.entry_ID
SELECT isDataOnFS,receiver_data FROM cfurl_cache_receiver_data WHERE entry_ID=%q
SELECT receiver_data from %s WHERE isDataOnFS > 0 AND entry_ID in 
 (SELECT entry_ID from cfurl_cache_response WHERE entry_ID > 0 ORDER BY time_stamp ASC LIMIT %q)
INIT-FAIL: _sqlInsertStmtResponse=%p, DB=%@, error-code:%d.
PRAGMA auto_vacuum = 2;
PRAGMA journal_mode=WAL;
DROP table IF EXISTS cfurl_cache_schema_version;
CREATE table cfurl_cache_schema_version(schema_version INTEGER);
DROP table IF EXISTS cfurl_cache_response;
CREATE table cfurl_cache_response(entry_ID INTEGER PRIMARY KEY AUTOINCREMENT UNIQUE, 
 version INTEGER, hash_value INTEGER, storage_policy INTEGER, request_key TEXT UNIQUE, 
 time_stamp NOT NULL DEFAULT CURRENT_TIMESTAMP, partition TEXT);
DROP table IF EXISTS cfurl_cache_blob_data;
CREATE table cfurl_cache_blob_data(entry_ID INTEGER PRIMARY KEY, response_object BLOB, request_object BLOB, 
  proto_props BLOB, user_info BLOB);
DROP table IF EXISTS cfurl_cache_receiver_data;
CREATE table cfurl_cache_receiver_data(entry_ID INTEGER PRIMARY KEY, isDataOnFS INTEGER, receiver_data BLOB);
CREATE INDEX request_key_index ON cfurl_cache_response(request_key);
CREATE INDEX time_stamp_index ON cfurl_cache_response(time_stamp);
CREATE INDEX proto_props_index ON cfurl_cache_blob_data(entry_ID);
CREATE INDEX receiver_data_index ON cfurl_cache_receiver_data(entry_ID);
INSERT INTO cfurl_cache_schema_version VALUES (%d)
ERROR: NSURLStorageURLCacheDB _setDBSchema: DB=%@ table schema version string - %s. ErrCode: %d.
ERROR: NSURLStorageURLCacheDB _setDBSchema: DB=%@ table schema version - %s. ErrCode: %d.
ERROR: NSURLStorageURLCacheDB _setDBSchema: DB=%@ table index on receiver_data - %s. ErrCode: %d.
ERROR: NSURLStorageURLCacheDB _setDBSchema: DB=%@ table index on blob_data - %s. ErrCode: %d.
ERROR: NSURLStorageURLCacheDB _setDBSchema: DB=%@ table index on time_stamp - %s. ErrCode: %d.
ERROR: NSURLStorageURLCacheDB _setDBSchema: DB=%@ index on request_key - %s. ErrCode: %d.
ERROR: NSURLStorageURLCacheDB _setDBSchema: DB=%@ receiver_data create - %s. ErrCode: %d.
ERROR: NSURLStorageURLCacheDB _setDBSchema: DB=%@ blob_data create - %s. ErrCode: %d.
ERROR: NSURLStorageURLCacheDB _setDBSchema: DB=%@ response create - %s. ErrCode: %d.
ERROR: NSURLStorageURLCacheDB _setDBSchema: DB=%@ version create - %s. ErrCode: %d.
ERROR: NSURLStorageURLCacheDB _setDBSchema: _dbWriteConnection=%p DB=%@ drop schema table - %s. ErrCode: %d.
ERROR: NSURLStorageURLCacheDB _setDBSchema: DB=%@ pragma wal enable - %s. ErrCode: %d.
ERROR: NSURLStorageURLCacheDB _setDBSchema: _dbWriteConnection=%p DB=%@ pragma auto vacuum - %s. ErrCode: %d.
SELECT schema_version from cfurl_cache_schema_version
The read-connection to the DB=%@ is NOT valid.  Unable to determine schema version.
SCHEMA:  SQL schema version read failed. Recoverable error. rc=%d
DEBUG: there is no SQL cache DB located at %@.
%@-wal
%@-shm
ERROR: failed to get the path to the FS cached data at %@
NetworkStorageURLCacheDB-openAndPrepareWriteCacheDB_NoLock: size of DB specified too small (%ld).  No persistent DB opened at %@.
NetworkStorageURLCacheDB-openCacheDB: size of DB specified too small (%ld).  No persistent DB opened at %@.
CFNETWORK_STORAGED_TIMERELOFF
PerformTimeRelativeLookups
com.apple.nsurlstoraged
T@"NSString",&,N,V_key
dictData
T@"NSDictionary",&,N,V_dictData
NetworkStorageTaskWrite-run: no cached response or request.  Told to write but nothing was provided to persist.
v8@?0
com.apple.CFNetwork.cache.processWriteItems
_reportTimeInterval
_stageTimeInterval
_stageURL
_reportHandler
_diskUsage
_lastSubmissionDate
_lastSaveDate
_metricsQueue
initWithStageURL:reportHandler:
readMetrics
saveMetrics
deleteMetrics
recordBytes:bundleID:
.cxx_destruct
reportTimeInterval
setReportTimeInterval:
stageTimeInterval
setStageTimeInterval:
stageURL
setStageURL:
reportHandler
setReportHandler:
diskUsage
setDiskUsage:
lastSubmissionDate
setLastSubmissionDate:
lastSaveDate
setLastSaveDate:
metricsQueue
setMetricsQueue:
dictionary
countByEnumeratingWithState:objects:count:
timeIntervalSinceDate:
date
setObject:forKeyedSubscript:
numberWithUnsignedLongLong:
unsignedLongLongValue
objectForKeyedSubscript:
removeItemAtURL:error:
defaultManager
writeToURL:options:error:
dataWithPropertyList:format:options:error:
dictionaryWithObjects:forKeys:count:
propertyListWithData:options:format:error:
dataWithContentsOfURL:
_installedAssetVersion
queryAndFindBestAsset
findBestAssetFrom:
downloadAsset:
moveFileAtomicallyAndCheckIntegrity:toLocation:
moveInstalledAsset:withVersion:
installedAssetVersion
setInstalledAssetVersion:
URLByAppendingPathComponent:
stringWithCString:encoding:
getLocalFileUrl
UTF8String
path
fileURLWithFileSystemRepresentation:isDirectory:relativeToURL:
removeItemAtPath:error:
dataWithContentsOfFile:
writeToFile:options:error:
code
localizedDescription
dataWithContentsOfURL:options:error:
startDownload:
intValue
attributes
purge:
state
startCatalogDownload:then:
count
results
timeIntervalSinceNow
lastFetchDate
queryMetaDataSync
returnTypes:
initWithType:
_dbReadConnection
_dbWriteConnection
_dbReadConnectionLock
_dbWriteConnectionLock
_isDBOpen
_dbPathDirectory
_dbPathFile
_maxDBSize
_auditToken
init
initWithDBPath:maxSize:auditToken:
initWithDBPath:maxSize:auditToken:schemaCheck:
dealloc
checkAccessToDatabaseFile
_openDBWriteConnections
_openDBReadConnections
openReadWriteConnection
closeConnection:
_closeDB
_closeDBWriteConnections
_closeDBReadConnections
dbPathDirectory
setDbPathDirectory:
dbPathFile
setDbPathFile:
isDBOpen
setIsDBOpen:
maxDBSize
setMaxDBSize:
auditToken
setAuditToken:
cStringUsingEncoding:
stringByDeletingLastPathComponent
fileSystemRepresentation
fileExistsAtPath:
stringWithFormat:
copy
initWithTaskManager:
runWithCompletion:
addOperation:
addExecutionBlock:
setQualityOfService:
setQueuePriority:
_sandboxExtensionHandle
_persistentDB
_xpcConnectionToRemoteEndpoint
_sandboxExtensionData
initWithPersistentPath:maxSize:sandboxExtension:auditToken:
updateFileSystemUsageCounters
persistentDB
setPersistentDB:
xpcConnectionToRemoteEndpoint
setXpcConnectionToRemoteEndpoint:
sandboxExtensionData
setSandboxExtensionData:
getBytes:length:
length
_key
initWithRequestKey:andTaskManager:
createStorageTaskManagerForPath:maxSize:extension:
addCachedResponseWithDictionary:key:
deleteResponseForRequestWithKey:completionHandler:
deleteAllResponses
deleteResponsesSinceDate:
deleteAllHostNames:forOptionalPartition:
copyAllHostNamesForOptionalPartition:completionHandler:
copyAllPartitionNamesWithCompletionHandler:
setMaxSize:
currentDiskUsageWithCompletionHandler:
setMinSizeForVMCachedResource:
performSchemaCheckAndUpdate
totalBytesWrittenToDiskWithCompletionHandler:
flushWithCompletionHandler:
notifyCachedURLResponseBecameFileBacked:filePath:forUUID:
notifyCacheClientOfTimeRelativeResponses:
debugDescription
isEqual:
class
self
performSelector:
performSelector:withObject:
performSelector:withObject:withObject:
isProxy
isKindOfClass:
isMemberOfClass:
conformsToProtocol:
respondsToSelector:
retain
release
autorelease
retainCount
zone
hash
superclass
description
listener:shouldAcceptNewConnection:
resume
setInterruptionHandler:
setInvalidationHandler:
setClasses:forSelector:argumentIndex:ofReply:
setWithObjects:
remoteObjectInterface
setRemoteObjectInterface:
setExportedObject:
setExportedInterface:
interfaceWithProtocol:
initWithMachServiceName:
setDelegate:
_readTaskManager
_writeTaskManager
_xpcConnection
_memoryPressureSource
_lastMemoryPressureEvent
_idleTime
_clientBundleID
initWithConnection:
cleanupTaskManagers
touchTimers
setupMemoryPressureHandler
xpcConnection
memoryPressureSource
setMemoryPressureSource:
lastMemoryPressureEvent
setLastMemoryPressureEvent:
idleTime
setIdleTime:
clientBundleID
setClientBundleID:
addDependency:
operations
blockOperationWithBlock:
unlock
currentConnection
lock
invalidate
timeIntervalSinceReferenceDate
touchIdleExitTimer
cancelAllOperations
_resetIdleExitTimer
_taskManager
_keyForRequest
keyForRequest
setKeyForRequest:
_date
initWithDate:andTaskManager:
_cacheDBInstanceToUpdate
setCacheDBInstanceToUpdateAfterShrink:
operationCount
_partition
initWithOptionalPartition:andTaskManager:
_cachedKeyAndDataToWrite
removeAllPendingWriteItems
cachedKeyAndDataToWrite
setCachedKeyAndDataToWrite:
removeAllObjects
setMaxConcurrentOperationCount:
array
_dbPath
_dbSize
_token
initWithTaskManager:path:size:
initWithPath:size:auditToken:sandboxExtension:
_hostNames
initWithHostNames:optionalPartition:andTaskManager:
_sqlUpdateReceiverDataStmt
_sqlInsertStmtResponse
_sqlInsertStmtBlobData
_sqlInsertStmtReceiverData
_sqlUpdateResponseStmt
_sqlUpdateBlobDataStmt
_sqlSelectStmt
_sqlSelectEntry_idAndRecevierDataForKeyStmt
_sqlSelectIsDataOnFSForEntry_IDStmt
_sqlSelectFileSystemFileForDeletionStmt
_sqlSelectTimeStmt
_sqlDeleteStmtResponse
_sqlDeleteStmtBlobData
_sqlDeleteStmtReceiverData
_schemaVersion
_entryIDsToDelete
performTimeRelativeLookups
_performingShrink
recentTimeStampLookups
_currentFSBackedUsage
_currentSQLiteDBUsage
_currentTotalPersistentCacheUsage
_minSizeForFileSystemBackedCacheItem
cleanupAndShutdown_Lock
cleanupWriteConnections_NoLock
openCacheDB
openAndPrepareWriteCacheDB_NoLock
openAndPrepareReadCacheDB
updateFSBackedCacheUsageOnDisk
updateSQLiteDBCacheUsageOnDisk
getcurrentTotalPersistentCacheUsage
isSchemaCurrent
_setDBSchemaAndPragmas
_prepareDBStatements
_prepareDBInsertUpdateStatements
_prepareDBSelectStatements
_prepareDBDeleteStatements
_finalizeAllDBStatements
_finalizeWriteConnectionDBStatements
_finalizeDBInsertUpdateStatements
_finalizeDBSelectStatements
_finalizeDBDeleteStatements
_ensureDBCapacityConstraints:
writeDBwithCachedResponse_NoLock:withKey:taskManager:
getEntryIDandReceiverDataForRequestKey:
getMinSizeForVMCachedResource
shrinkDB
copyHostNamesForOptionalPartition:
copyAllPartitionNames
deleteResponseForRequestWithKey:
stepSQLStatement:toCompletionWithRetry:
execSQLStatement:onConnection:toCompletionWithRetry:writeLockHeld:
updateToCurrentSchema
_purgeAllFileSystemCacheData
beginTransaction_NoLock
commitTransaction_NoLock
writeLock
writeUnlock
_activateSecureDelete
setRecentTimeStampLookups:
setPerformTimeRelativeLookups:
currentFSBackedUsage
setCurrentFSBackedUsage:
currentSQLiteDBUsage
setCurrentSQLiteDBUsage:
currentTotalPersistentCacheUsage
setCurrentTotalPersistentCacheUsage:
minSizeForFileSystemBackedCacheItem
setMinSizeForFileSystemBackedCacheItem:
performingShrink
setPerformingShrink:
addObject:
componentsJoinedByString:
remoteObjectProxy
initWithString:
objectForKey:
integerValue
attributesOfItemAtPath:error:
boolValue
persistentDomainForName:
standardUserDefaults
setWithCapacity:
initWithCapacity:
_dictData
initWithKey:dictData:
setKey:
dictData
setDictData:
writeCacheItemWithKey:dictData:
_cacheData
initWithTaskManager:cacheData:key:
processWriteItems:
removeObjectsInRange:
arrayWithArray:
@"NSURL"
@"NSMutableDictionary"
@"NSDate"
@"NSObject<OS_dispatch_queue>"
@32@0:8@16@?24
v16@0:8
v32@0:8Q16@24
d16@0:8
v24@0:8d16
@16@0:8
v24@0:8@16
@?16@0:8
v24@0:8@?16
v32@0:8@16@24
v32@0:8@16Q24
Q16@0:8
v24@0:8Q16
^{sqlite3=}
{os_unfair_lock_s="_os_unfair_lock_opaque"I}
@"NSString"
{?="val"[8I]}
@64@0:8@16q24{?=[8I]}32
@68@0:8@16q24{?=[8I]}32B64
B16@0:8
^{sqlite3=}16@0:8
v24@0:8^{sqlite3=}16
v20@0:8B16
q16@0:8
v24@0:8q16
{?=[8I]}16@0:8
v48@0:8{?=[8I]}16
@24@0:8@16
@"NSURLStorageURLCacheDB"
@"NSXPCConnection"
@"NSData"
@72@0:8@16q24@32{?=[8I]}40
@32@0:8@16@24
v40@0:8@"NSString"16q24@"NSData"32
v32@0:8@"NSDictionary"16@"NSString"24
v32@0:8@"NSString"16@?<v@?B>24
v24@0:8@"NSDate"16
v32@0:8@"NSArray"16@"NSString"24
v32@0:8@"NSString"16@?<v@?@"NSArray">24
v24@0:8@?<v@?@"NSArray">16
v24@0:8@?<v@?q>16
v24@0:8@?<v@?Q>16
v24@0:8@?<v@?>16
v40@0:8@16q24@32
v32@0:8@16@?24
v40@0:8@"NSString"16@"NSString"24@"NSString"32
v24@0:8@"NSArray"16
v40@0:8@16@24@32
B24@0:8@16
#16@0:8
@24@0:8:16
@32@0:8:16@24
@40@0:8:16@24@32
B24@0:8#16
B24@0:8@"Protocol"16
B24@0:8:16
Vv16@0:8
^{_NSZone=}16@0:8
@"NSString"16@0:8
B32@0:8@"NSXPCListener"16@"NSXPCConnection"24
B32@0:8@16@24
@"NSURLReadStorageTaskManager"
@"NSURLWriteStorageTaskManager"
@"NSObject<OS_dispatch_source>"
@"NSURLStorageTaskManager"
@"NSMutableArray"
@40@0:8@16@24q32
@72@0:8@16q24{?=[8I]}32@64
@"NSArray"
@40@0:8@16@24@32
^{sqlite3_stmt=}
@"NSMutableSet"
B40@0:8@16@24@32
^{_entry_idAndRecevierDataInfo=q*iB}24@0:8r*16
i32@0:8^{sqlite3_stmt=}16q24
i44@0:8r*16^{sqlite3=}24q32B40
C16@0:8
v20@0:8C16
@"NSDictionary"
[Disk Metrics] file writing error: %@
[Disk Metrics] file reading error: %@
Error reading the TLD Asset version
TLD versions different. Old: [%u] New: [%d]  
Read Asset at %@
Error getting the system group container for Group ID %@ 
Unable to get the system container for nsurlstoraged
Reading from a file at location %@ failed. Error is %@ [%ld]
Writing to file at location %@ failed. Error is %@ [%ld]
The file contents of dafsa file are not the same as the mobile asset file
Asset download requested
Asset download completed. Asset Version downloaded is %lu
Asset download failed. Result  %ld
Asset (state %ld  Version %ld),  Current version %ld,  best installed version %ld,  best not installed version %ld
Asset version %lu has compatibilty version set to %lu. Not supported on the current OS
Purging asset version %@
Download best not installed asset ver %lu
Read installed asset ver %lu
Asset version %@ purged
Failed to purge the asset with version %@. Purge result = %ld
Empty results for asset update query
Catalogue fetch succeeded
Catalogue fetch failed with result %ld. Fall back to the currently installed asset
zPLR
