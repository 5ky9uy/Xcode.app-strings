o@N3SVG12ShapeElementE
N3SVG12PresentationE
`)@HP
+'A@
1w-!
@NSt3__110__function6__funcIZN3SVGL31GlyphRecordingCreateWithElementERKNS2_8DocumentERKNS2_7ElementEE3$_0NS_9allocatorIS9_EEFvRKNS2_22ApplyPresentationStateEEEE
ZN3SVGL31GlyphRecordingCreateWithElementERKNS_8DocumentERKNS_7ElementEE3$_0
NSt3__120__shared_ptr_pointerIPN3SVG14GlyphRecordingENS_10shared_ptrIS2_E27__shared_ptr_default_deleteIS2_S2_EENS_9allocatorIS2_EEEE
NSt3__110shared_ptrIN3SVG14GlyphRecordingEE27__shared_ptr_default_deleteIS2_S2_EE
NSt3__110__function6__baseIFvRKN3SVG22ApplyPresentationStateEEEE
N3SVG9DrawImageE
N3SVG8FillPathE
N3SVG18DrawLinearGradientE
N3SVG18DrawRadialGradientE
N3SVG10ClipToMaskE
N3SVG9SaveStateE
N3SVG12RestoreStateE
N3SVG9ConcatCTME
N3SVG7CommandE
CN3SVG14PatternElementE
Avz4-
?N3SVG6GetCTME
N3SVG22BeginTransparencyLayerE
N3SVG20EndTransparencyLayerE
N3SVG8SetAlphaE
@N3SVG8GElementE
N3SVG15GradientElementE
N3SVG11MaskElementE
N3SVG10DiscovererE
NSt3__120__shared_ptr_emplaceIN3SVG5TableENS_9allocatorIS2_EEEE
lpo1
?N3SVG7SetFillE
?N3SVG10RecordBaseE
N3SVG6RecordE
NSt3__120__shared_ptr_pointerIPN3SVG11ClipToPaths12LeafClipNodeENS_14default_deleteIS3_EENS_9allocatorIS3_EEEE
NSt3__114default_deleteIN3SVG11ClipToPaths12LeafClipNodeEEE
NSt3__110__function6__funcIZN3SVG6Record19processPresentationERKNS2_7ElementERKNS2_12PresentationEE3$_2NS_9allocatorISA_EEFvRKNS2_22ApplyPresentationStateEEEE
ZN3SVG6Record19processPresentationERKNS_7ElementERKNS_12PresentationEE3$_2
N3SVG11ClipToPaths12BaseClipNodeE
N3SVG11ClipToPaths12LeafClipNodeE
N3SVG11PathElementE
N3SVG15PolyLineElementE
N3SVG7ElementE
N3SVG13CircleElementE
?N3SVG14EllipseElementE
N3SVG21LinearGradientElementE
N3SVG15ClipPathElementE
N3SVG11ClipToPaths14ParentClipNodeE
NSt3__120__shared_ptr_emplaceIN3SVG11ClipToPaths14ParentClipNodeENS_9allocatorIS3_EEEE
NSt3__120__shared_ptr_emplaceIN3SVG11ClipToPaths12LeafClipNodeENS_9allocatorIS3_EEEE
?N3SVG21RadialGradientElementE
N3SVG12ImageElementE
NSt3__120__shared_ptr_emplaceIN3SVG9RecordingENS_9allocatorIS2_EEEE
NSt3__120__shared_ptr_pointerIPN3SVG8DocumentENS_10shared_ptrIS2_E27__shared_ptr_default_deleteIS2_S2_EENS_9allocatorIS2_EEEE
NSt3__110shared_ptrIN3SVG8DocumentEE27__shared_ptr_default_deleteIS2_S2_EE
?N3SVG11RectElementE
N3SVG14PolygonElementE
N3SVG11DefsElementE
N3SVG10SVGElementE
N3SVG10UseElementE
N3SVG11LineElementE
;Y@-C
6J?N3SVG11ClipToPathsE
N3SVG5ImageE
N3SVG4BaseE
N3SVG4PathE
N3SVG11StopElementE
defer
none
xMinYMin
xMidYMin
xMaxYMin
xMinYMid
xMidYMid
xMaxYMid
xMinYMax
xMidYMax
xMaxYMax
meet
slice
clip
clip-path
clip-rule
color
color-interpolation
color-rendering
display
fill
fill-opacity
fill-rule
image-rendering
mask
opacity
overflow
shape-rendering
stop-color
stop-opacity
stroke
stroke-dasharray
stroke-dashoffset
stroke-linecap
stroke-linejoin
stroke-miterlimit
stroke-opacity
stroke-width
visibility
inherit
auto
rect
nonzero
evenodd
sRGB
linearRGB
optimizeSpeed
optimizeQuality
inline
block
currentColor
icc-color
visible
hidden
crispEdges
geometricPrecision
butt
round
square
miter
bevel
collapse
var(
transform
glyph
SaveState
ConcatCTM 
DrawImage
FillPath
    
DrawLinearGradient
DrawRadialGradient
ClipToMask
RestoreState
viewBox
preserveAspectRatio
width
height
patternUnits
patternContentUnits
patternTransform
href
http://www.w3.org/1999/xlink
GetCTM
BeginTransparencyLayer
EndTransparencyLayer
SetAlpha 
matrix
translate
scale
rotate
skewX
skewY
transform
gradientUnits
gradientTransform
spreadMethod
reflect
repeat
maskUnits
maskContentUnits
SetFill
    Pattern
pathLength
points
http://www.w3.org/2000/svg
transform
clipPathUnits
data
defs
image
path
circle
ellipse
line
polyline
polygon
linearGradient
radialGradient
stop
pattern
clipPath
element
 000000000000
userSpaceOnUse
objectBoundingBox
transform
ClipToPaths
offset
aliceblue
antiquewhite
aqua
aquamarine
azure
beige
bisque
black
blanchedalmond
blue
blueviolet
brown
burlywood
cadetblue
chartreuse
chocolate
coral
cornflowerblue
cornsilk
crimson
cyan
darkblue
darkcyan
darkgoldenrod
darkgray
darkgreen
darkgrey
darkkhaki
darkmagenta
darkolivegreen
darkorange
darkorchid
darkred
darksalmon
darkseagreen
darkslateblue
darkslategray
darkslategrey
darkturquoise
darkviolet
deeppink
deepskyblue
dimgray
dimgrey
dodgerblue
firebrick
floralwhite
forestgreen
fuchsia
gainsboro
ghostwhite
gold
goldenrod
gray
green
greenyellow
grey
honeydew
hotpink
indianred
indigo
ivory
khaki
lavender
lavenderblush
lawngreen
lemonchiffon
lightblue
lightcoral
lightcyan
lightgoldenrodyellow
lightgray
lightgreen
lightgrey
lightpink
lightsalmon
lightseagreen
lightskyblue
lightslategray
lightslategrey
lightsteelblue
lightyellow
lime
limegreen
linen
magenta
maroon
mediumaquamarine
mediumblue
mediumorchid
mediumpurple
mediumseagreen
mediumslateblue
mediumspringgreen
mediumturquoise
mediumvioletred
midnightblue
mintcream
mistyrose
moccasin
navajowhite
navy
oldlace
olive
olivedrab
orange
orangered
orchid
palegoldenrod
palegreen
paleturquoise
palevioletred
papayawhip
peachpuff
peru
pink
plum
powderblue
purple
rosybrown
royalblue
saddlebrown
salmon
sandybrown
seagreen
seashell
sienna
silver
skyblue
slateblue
slategray
slategrey
snow
springgreen
steelblue
teal
thistle
tomato
turquoise
violet
wheat
white
whitesmoke
yellow
yellowgreen
_OTSVGParserDelegate
NSXMLParserDelegate
NSObject
init
setErrorOccurred:
setSkipDepth:
setUnitsPerEm:
setRoot:
setStack:
setNamespaces:
skipDepth
namespaces
isEqualToString:
root
unitsPerEm
stack
abortParsing
errorOccurred
isEqual:
class
self
performSelector:
performSelector:withObject:
performSelector:withObject:withObject:
isProxy
isKindOfClass:
isMemberOfClass:
conformsToProtocol:
respondsToSelector:
retain
release
autorelease
retainCount
zone
hash
superclass
description
debugDescription
TQ,R
T#,R
T@"NSString",R,C
parserDidStartDocument:
parserDidEndDocument:
parser:foundNotationDeclarationWithName:publicID:systemID:
parser:foundUnparsedEntityDeclarationWithName:publicID:systemID:notationName:
parser:foundAttributeDeclarationWithName:forElement:type:defaultValue:
parser:foundElementDeclarationWithName:model:
parser:foundInternalEntityDeclarationWithName:value:
parser:foundExternalEntityDeclarationWithName:publicID:systemID:
parser:didStartElement:namespaceURI:qualifiedName:attributes:
parser:didEndElement:namespaceURI:qualifiedName:
parser:didStartMappingPrefix:toURI:
parser:didEndMappingPrefix:
parser:foundCharacters:
parser:foundIgnorableWhitespace:
parser:foundProcessingInstructionWithTarget:data:
parser:foundComment:
parser:foundCDATA:
parser:resolveExternalEntityName:systemID:
parser:parseErrorOccurred:
parser:validationErrorOccurred:
initWithUnitsPerEm:
.cxx_destruct
.cxx_construct
TB,VerrorOccurred
TI,VskipDepth
TI,VunitsPerEm
T^v,Vroot
T{vector<std::reference_wrapper<SVG::Element>, std::allocator<std::reference_wrapper<SVG::Element>>>=^v^v{__compressed_pair<std::reference_wrapper<SVG::Element> *, std::allocator<std::reference_wrapper<SVG::Element>>>=^v}},Vstack
T{unordered_map<std::string, std::stack<std::string>, std::hash<std::string>, std::equal_to<std::string>, std::allocator<std::pair<const std::string, std::stack<std::string>>>>={__hash_table<std::__hash_value_type<std::string, std::stack<std::string>>, std::__unordered_map_hasher<std::string, std::__hash_value_type<std::string, std::stack<std::string>>, std::hash<std::string>, std::equal_to<std::string>, true>, std::__unordered_map_equal<std::string, std::__hash_value_type<std::string, std::stack<std::string>>, std::equal_to<std::string>, std::hash<std::string>, true>, std::allocator<std::__hash_value_type<std::string, std::stack<std::string>>>>={unique_ptr<std::__hash_node_base<std::__hash_node<std::__hash_value_type<std::string, std::stack<std::string>>, void *> *> *[], std::__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<std::string, std::stack<std::string>>, void *> *> *>>>={__compressed_pair<std::__hash_node_base<std::__hash_node<std::__hash_value_type<std::string, std::stack<std::string>>, void *> *> **, std::__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<std::string, std::stack<std::string>>, void *> *> *>>>=^^v{__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<std::string, std::stack<std::string>>, void *> *> *>>={__compressed_pair<unsigned long, std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<std::string, std::stack<std::string>>, void *> *> *>>=Q}}}}{__compressed_pair<std::__hash_node_base<std::__hash_node<std::__hash_value_type<std::string, std::stack<std::string>>, void *> *>, std::allocator<std::__hash_node<std::__hash_value_type<std::string, std::stack<std::string>>, void *>>>={__hash_node_base<std::__hash_node<std::__hash_value_type<std::string, std::stack<std::string>>, void *> *>=^v}}{__compressed_pair<unsigned long, std::__unordered_map_hasher<std::string, std::__hash_value_type<std::string, std::stack<std::string>>, std::hash<std::string>, std::equal_to<std::string>, true>>=Q}{__compressed_pair<float, std::__unordered_map_equal<std::string, std::__hash_value_type<std::string, std::stack<std::string>>, std::equal_to<std::string>, std::hash<std::string>, true>>=f}}},Vnamespaces
initWithData:
setShouldProcessNamespaces:
setShouldReportNamespacePrefixes:
setDelegate:
parse
UTF8String
countByEnumeratingWithState:objects:count:
objectForKeyedSubscript:
initWithBase64EncodedString:options:
B24@0:8@16
#16@0:8
@16@0:8
@24@0:8:16
@32@0:8:16@24
@40@0:8:16@24@32
B16@0:8
B24@0:8#16
B24@0:8:16
Vv16@0:8
Q16@0:8
^{_NSZone=}16@0:8
B24@0:8@"Protocol"16
@"NSString"16@0:8
v24@0:8@16
v48@0:8@16@24@32@40
v56@0:8@16@24@32@40@48
v40@0:8@16@24@32
v32@0:8@16@24
@40@0:8@16@24@32
v24@0:8@"NSXMLParser"16
v48@0:8@"NSXMLParser"16@"NSString"24@"NSString"32@"NSString"40
v56@0:8@"NSXMLParser"16@"NSString"24@"NSString"32@"NSString"40@"NSString"48
v40@0:8@"NSXMLParser"16@"NSString"24@"NSString"32
v56@0:8@"NSXMLParser"16@"NSString"24@"NSString"32@"NSString"40@"NSDictionary"48
v32@0:8@"NSXMLParser"16@"NSString"24
v32@0:8@"NSXMLParser"16@"NSData"24
@"NSData"40@0:8@"NSXMLParser"16@"NSString"24@"NSString"32
v32@0:8@"NSXMLParser"16@"NSError"24
@20@0:8I16
v20@0:8B16
I16@0:8
v20@0:8I16
^v16@0:8
v24@0:8^v16
{vector<std::reference_wrapper<SVG::Element>, std::allocator<std::reference_wrapper<SVG::Element>>>=^v^v{__compressed_pair<std::reference_wrapper<SVG::Element> *, std::allocator<std::reference_wrapper<SVG::Element>>>=^v}}16@0:8
v40@0:8{vector<std::reference_wrapper<SVG::Element>, std::allocator<std::reference_wrapper<SVG::Element>>>=^v^v{__compressed_pair<std::reference_wrapper<SVG::Element> *, std::allocator<std::reference_wrapper<SVG::Element>>>=^v}}16
{unordered_map<std::string, std::stack<std::string>, std::hash<std::string>, std::equal_to<std::string>, std::allocator<std::pair<const std::string, std::stack<std::string>>>>={__hash_table<std::__hash_value_type<std::string, std::stack<std::string>>, std::__unordered_map_hasher<std::string, std::__hash_value_type<std::string, std::stack<std::string>>, std::hash<std::string>, std::equal_to<std::string>, true>, std::__unordered_map_equal<std::string, std::__hash_value_type<std::string, std::stack<std::string>>, std::equal_to<std::string>, std::hash<std::string>, true>, std::allocator<std::__hash_value_type<std::string, std::stack<std::string>>>>={unique_ptr<std::__hash_node_base<std::__hash_node<std::__hash_value_type<std::string, std::stack<std::string>>, void *> *> *[], std::__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<std::string, std::stack<std::string>>, void *> *> *>>>={__compressed_pair<std::__hash_node_base<std::__hash_node<std::__hash_value_type<std::string, std::stack<std::string>>, void *> *> **, std::__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<std::string, std::stack<std::string>>, void *> *> *>>>=^^v{__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<std::string, std::stack<std::string>>, void *> *> *>>={__compressed_pair<unsigned long, std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<std::string, std::stack<std::string>>, void *> *> *>>=Q}}}}{__compressed_pair<std::__hash_node_base<std::__hash_node<std::__hash_value_type<std::string, std::stack<std::string>>, void *> *>, std::allocator<std::__hash_node<std::__hash_value_type<std::string, std::stack<std::string>>, void *>>>={__hash_node_base<std::__hash_node<std::__hash_value_type<std::string, std::stack<std::string>>, void *> *>=^v}}{__compressed_pair<unsigned long, std::__unordered_map_hasher<std::string, std::__hash_value_type<std::string, std::stack<std::string>>, std::hash<std::string>, std::equal_to<std::string>, true>>=Q}{__compressed_pair<float, std::__unordered_map_equal<std::string, std::__hash_value_type<std::string, std::stack<std::string>>, std::equal_to<std::string>, std::hash<std::string>, true>>=f}}}16@0:8
v56@0:8{unordered_map<std::string, std::stack<std::string>, std::hash<std::string>, std::equal_to<std::string>, std::allocator<std::pair<const std::string, std::stack<std::string>>>>={__hash_table<std::__hash_value_type<std::string, std::stack<std::string>>, std::__unordered_map_hasher<std::string, std::__hash_value_type<std::string, std::stack<std::string>>, std::hash<std::string>, std::equal_to<std::string>, true>, std::__unordered_map_equal<std::string, std::__hash_value_type<std::string, std::stack<std::string>>, std::equal_to<std::string>, std::hash<std::string>, true>, std::allocator<std::__hash_value_type<std::string, std::stack<std::string>>>>={unique_ptr<std::__hash_node_base<std::__hash_node<std::__hash_value_type<std::string, std::stack<std::string>>, void *> *> *[], std::__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<std::string, std::stack<std::string>>, void *> *> *>>>={__compressed_pair<std::__hash_node_base<std::__hash_node<std::__hash_value_type<std::string, std::stack<std::string>>, void *> *> **, std::__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<std::string, std::stack<std::string>>, void *> *> *>>>=^^v{__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<std::string, std::stack<std::string>>, void *> *> *>>={__compressed_pair<unsigned long, std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<std::string, std::stack<std::string>>, void *> *> *>>=Q}}}}{__compressed_pair<std::__hash_node_base<std::__hash_node<std::__hash_value_type<std::string, std::stack<std::string>>, void *> *>, std::allocator<std::__hash_node<std::__hash_value_type<std::string, std::stack<std::string>>, void *>>>={__hash_node_base<std::__hash_node<std::__hash_value_type<std::string, std::stack<std::string>>, void *> *>=^v}}{__compressed_pair<unsigned long, std::__unordered_map_hasher<std::string, std::__hash_value_type<std::string, std::stack<std::string>>, std::hash<std::string>, std::equal_to<std::string>, true>>=Q}{__compressed_pair<float, std::__unordered_map_equal<std::string, std::__hash_value_type<std::string, std::stack<std::string>>, std::equal_to<std::string>, std::hash<std::string>, true>>=f}}}16
v16@0:8
{vector<std::reference_wrapper<SVG::Element>, std::allocator<std::reference_wrapper<SVG::Element>>>="__begin_"^v"__end_"^v"__end_cap_"{__compressed_pair<std::reference_wrapper<SVG::Element> *, std::allocator<std::reference_wrapper<SVG::Element>>>="__value_"^v}}
{unordered_map<std::string, std::stack<std::string>, std::hash<std::string>, std::equal_to<std::string>, std::allocator<std::pair<const std::string, std::stack<std::string>>>>="__table_"{__hash_table<std::__hash_value_type<std::string, std::stack<std::string>>, std::__unordered_map_hasher<std::string, std::__hash_value_type<std::string, std::stack<std::string>>, std::hash<std::string>, std::equal_to<std::string>, true>, std::__unordered_map_equal<std::string, std::__hash_value_type<std::string, std::stack<std::string>>, std::equal_to<std::string>, std::hash<std::string>, true>, std::allocator<std::__hash_value_type<std::string, std::stack<std::string>>>>="__bucket_list_"{unique_ptr<std::__hash_node_base<std::__hash_node<std::__hash_value_type<std::string, std::stack<std::string>>, void *> *> *[], std::__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<std::string, std::stack<std::string>>, void *> *> *>>>="__ptr_"{__compressed_pair<std::__hash_node_base<std::__hash_node<std::__hash_value_type<std::string, std::stack<std::string>>, void *> *> **, std::__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<std::string, std::stack<std::string>>, void *> *> *>>>="__value_"^^v"__value_"{__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<std::string, std::stack<std::string>>, void *> *> *>>="__data_"{__compressed_pair<unsigned long, std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<std::string, std::stack<std::string>>, void *> *> *>>="__value_"Q}}}}"__p1_"{__compressed_pair<std::__hash_node_base<std::__hash_node<std::__hash_value_type<std::string, std::stack<std::string>>, void *> *>, std::allocator<std::__hash_node<std::__hash_value_type<std::string, std::stack<std::string>>, void *>>>="__value_"{__hash_node_base<std::__hash_node<std::__hash_value_type<std::string, std::stack<std::string>>, void *> *>="__next_"^v}}"__p2_"{__compressed_pair<unsigned long, std::__unordered_map_hasher<std::string, std::__hash_value_type<std::string, std::stack<std::string>>, std::hash<std::string>, std::equal_to<std::string>, true>>="__value_"Q}"__p3_"{__compressed_pair<float, std::__unordered_map_equal<std::string, std::__hash_value_type<std::string, std::stack<std::string>>, std::equal_to<std::string>, std::hash<std::string>, true>>="__value_"f}}}
o@N3SVG12ShapeElementE
N3SVG12PresentationE
`)@HP
+'A@
1w-!
v@NSt3__110__function6__funcIZN3SVGL31GlyphRecordingCreateWithElementERKNS2_8DocumentERKNS2_7ElementEE3$_0NS_9allocatorIS9_EEFvRKNS2_22ApplyPresentationStateEEEE
ZN3SVGL31GlyphRecordingCreateWithElementERKNS_8DocumentERKNS_7ElementEE3$_0
NSt3__120__shared_ptr_pointerIPN3SVG14GlyphRecordingENS_10shared_ptrIS2_E27__shared_ptr_default_deleteIS2_S2_EENS_9allocatorIS2_EEEE
NSt3__110shared_ptrIN3SVG14GlyphRecordingEE27__shared_ptr_default_deleteIS2_S2_EE
NSt3__114default_deleteIN3SVG14GlyphRecordingEEE
NSt3__110__function6__baseIFvRKN3SVG22ApplyPresentationStateEEEE
N3SVG9DrawImageE
N3SVG8FillPathE
N3SVG18DrawLinearGradientE
N3SVG18DrawRadialGradientE
N3SVG10ClipToMaskE
N3SVG9SaveStateE
N3SVG12RestoreStateE
N3SVG9ConcatCTME
N3SVG7CommandE
N3SVG14PatternElementE
Avz4-
?N3SVG6GetCTME
N3SVG22BeginTransparencyLayerE
N3SVG20EndTransparencyLayerE
N3SVG8SetAlphaE
?N3SVG8GElementE
N3SVG15GradientElementE
N3SVG11MaskElementE
N3SVG10DiscovererE
NSt3__120__shared_ptr_emplaceIN3SVG5TableENS_9allocatorIS2_EEEE
lpo1
?N3SVG7SetFillE
?N3SVG10RecordBaseE
N3SVG6RecordE
NSt3__120__shared_ptr_pointerIPN3SVG11ClipToPaths12LeafClipNodeENS_14default_deleteIS3_EENS_9allocatorIS3_EEEE
NSt3__114default_deleteIN3SVG11ClipToPaths12LeafClipNodeEEE
NSt3__110__function6__funcIZN3SVG6Record19processPresentationERKNS2_7ElementERKNS2_12PresentationEE3$_2NS_9allocatorISA_EEFvRKNS2_22ApplyPresentationStateEEEE
ZN3SVG6Record19processPresentationERKNS_7ElementERKNS_12PresentationEE3$_2
N3SVG11ClipToPaths12BaseClipNodeE
N3SVG11ClipToPaths12LeafClipNodeE
N3SVG11PathElementE
N3SVG15PolyLineElementE
N3SVG7ElementE
N3SVG13CircleElementE
N3SVG14EllipseElementE
N3SVG21LinearGradientElementE
N3SVG15ClipPathElementE
N3SVG11ClipToPaths14ParentClipNodeE
NSt3__120__shared_ptr_emplaceIN3SVG11ClipToPaths14ParentClipNodeENS_9allocatorIS3_EEEE
NSt3__120__shared_ptr_emplaceIN3SVG11ClipToPaths12LeafClipNodeENS_9allocatorIS3_EEEE
N3SVG21RadialGradientElementE
N3SVG12ImageElementE
NSt3__120__shared_ptr_emplaceIN3SVG9RecordingENS_9allocatorIS2_EEEE
NSt3__120__shared_ptr_pointerIPN3SVG8DocumentENS_10shared_ptrIS2_E27__shared_ptr_default_deleteIS2_S2_EENS_9allocatorIS2_EEEE
NSt3__110shared_ptrIN3SVG8DocumentEE27__shared_ptr_default_deleteIS2_S2_EE
NSt3__114default_deleteIN3SVG8DocumentEEE
?N3SVG11RectElementE
N3SVG14PolygonElementE
N3SVG11DefsElementE
N3SVG10SVGElementE
N3SVG10UseElementE
N3SVG11LineElementE
;Y@N3SVG11ClipToPathsE
N3SVG5ImageE
N3SVG4BaseE
N3SVG4PathE
N3SVG11StopElementE
defer
none
xMinYMin
xMidYMin
xMaxYMin
xMinYMid
xMidYMid
xMaxYMid
xMinYMax
xMidYMax
xMaxYMax
meet
slice
clip
clip-path
clip-rule
color
color-interpolation
color-rendering
display
fill
fill-opacity
fill-rule
image-rendering
mask
opacity
overflow
shape-rendering
stop-color
stop-opacity
stroke
stroke-dasharray
stroke-dashoffset
stroke-linecap
stroke-linejoin
stroke-miterlimit
stroke-opacity
stroke-width
visibility
inherit
auto
rect
nonzero
evenodd
sRGB
linearRGB
optimizeSpeed
optimizeQuality
inline
block
currentColor
icc-color
visible
hidden
crispEdges
geometricPrecision
butt
round
square
miter
bevel
collapse
var(
transform
glyph
SaveState
ConcatCTM 
DrawImage
FillPath
    
DrawLinearGradient
DrawRadialGradient
ClipToMask
RestoreState
viewBox
preserveAspectRatio
width
height
patternUnits
patternContentUnits
patternTransform
href
http://www.w3.org/1999/xlink
GetCTM
BeginTransparencyLayer
EndTransparencyLayer
SetAlpha 
matrix
translate
scale
rotate
skewX
skewY
transform
gradientUnits
gradientTransform
spreadMethod
reflect
repeat
maskUnits
maskContentUnits
SetFill
    Pattern
pathLength
points
http://www.w3.org/2000/svg
transform
clipPathUnits
data
defs
image
path
circle
ellipse
line
polyline
polygon
linearGradient
radialGradient
stop
pattern
clipPath
element
 000000000000
userSpaceOnUse
objectBoundingBox
transform
ClipToPaths
offset
aliceblue
antiquewhite
aqua
aquamarine
azure
beige
bisque
black
blanchedalmond
blue
blueviolet
brown
burlywood
cadetblue
chartreuse
chocolate
coral
cornflowerblue
cornsilk
crimson
cyan
darkblue
darkcyan
darkgoldenrod
darkgray
darkgreen
darkgrey
darkkhaki
darkmagenta
darkolivegreen
darkorange
darkorchid
darkred
darksalmon
darkseagreen
darkslateblue
darkslategray
darkslategrey
darkturquoise
darkviolet
deeppink
deepskyblue
dimgray
dimgrey
dodgerblue
firebrick
floralwhite
forestgreen
fuchsia
gainsboro
ghostwhite
gold
goldenrod
gray
green
greenyellow
grey
honeydew
hotpink
indianred
indigo
ivory
khaki
lavender
lavenderblush
lawngreen
lemonchiffon
lightblue
lightcoral
lightcyan
lightgoldenrodyellow
lightgray
lightgreen
lightgrey
lightpink
lightsalmon
lightseagreen
lightskyblue
lightslategray
lightslategrey
lightsteelblue
lightyellow
lime
limegreen
linen
magenta
maroon
mediumaquamarine
mediumblue
mediumorchid
mediumpurple
mediumseagreen
mediumslateblue
mediumspringgreen
mediumturquoise
mediumvioletred
midnightblue
mintcream
mistyrose
moccasin
navajowhite
navy
oldlace
olive
olivedrab
orange
orangered
orchid
palegoldenrod
palegreen
paleturquoise
palevioletred
papayawhip
peachpuff
peru
pink
plum
powderblue
purple
rosybrown
royalblue
saddlebrown
salmon
sandybrown
seagreen
seashell
sienna
silver
skyblue
slateblue
slategray
slategrey
snow
springgreen
steelblue
teal
thistle
tomato
turquoise
violet
wheat
white
whitesmoke
yellow
yellowgreen
_OTSVGParserDelegate
NSXMLParserDelegate
NSObject
init
setErrorOccurred:
setSkipDepth:
setUnitsPerEm:
setRoot:
setStack:
setNamespaces:
skipDepth
namespaces
isEqualToString:
root
unitsPerEm
stack
abortParsing
errorOccurred
isEqual:
class
self
performSelector:
performSelector:withObject:
performSelector:withObject:withObject:
isProxy
isKindOfClass:
isMemberOfClass:
conformsToProtocol:
respondsToSelector:
retain
release
autorelease
retainCount
zone
hash
superclass
description
debugDescription
TQ,R
T#,R
T@"NSString",R,C
parserDidStartDocument:
parserDidEndDocument:
parser:foundNotationDeclarationWithName:publicID:systemID:
parser:foundUnparsedEntityDeclarationWithName:publicID:systemID:notationName:
parser:foundAttributeDeclarationWithName:forElement:type:defaultValue:
parser:foundElementDeclarationWithName:model:
parser:foundInternalEntityDeclarationWithName:value:
parser:foundExternalEntityDeclarationWithName:publicID:systemID:
parser:didStartElement:namespaceURI:qualifiedName:attributes:
parser:didEndElement:namespaceURI:qualifiedName:
parser:didStartMappingPrefix:toURI:
parser:didEndMappingPrefix:
parser:foundCharacters:
parser:foundIgnorableWhitespace:
parser:foundProcessingInstructionWithTarget:data:
parser:foundComment:
parser:foundCDATA:
parser:resolveExternalEntityName:systemID:
parser:parseErrorOccurred:
parser:validationErrorOccurred:
initWithUnitsPerEm:
.cxx_destruct
.cxx_construct
TB,VerrorOccurred
TI,VskipDepth
TI,VunitsPerEm
T^v,Vroot
T{vector<std::reference_wrapper<SVG::Element>, std::allocator<std::reference_wrapper<SVG::Element>>>=^v^v{__compressed_pair<std::reference_wrapper<SVG::Element> *, std::allocator<std::reference_wrapper<SVG::Element>>>=^v}},Vstack
T{unordered_map<std::string, std::stack<std::string>, std::hash<std::string>, std::equal_to<std::string>, std::allocator<std::pair<const std::string, std::stack<std::string>>>>={__hash_table<std::__hash_value_type<std::string, std::stack<std::string>>, std::__unordered_map_hasher<std::string, std::__hash_value_type<std::string, std::stack<std::string>>, std::hash<std::string>, std::equal_to<std::string>, true>, std::__unordered_map_equal<std::string, std::__hash_value_type<std::string, std::stack<std::string>>, std::equal_to<std::string>, std::hash<std::string>, true>, std::allocator<std::__hash_value_type<std::string, std::stack<std::string>>>>={unique_ptr<std::__hash_node_base<std::__hash_node<std::__hash_value_type<std::string, std::stack<std::string>>, void *> *> *[], std::__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<std::string, std::stack<std::string>>, void *> *> *>>>={__compressed_pair<std::__hash_node_base<std::__hash_node<std::__hash_value_type<std::string, std::stack<std::string>>, void *> *> **, std::__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<std::string, std::stack<std::string>>, void *> *> *>>>=^^v{__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<std::string, std::stack<std::string>>, void *> *> *>>={__compressed_pair<unsigned long, std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<std::string, std::stack<std::string>>, void *> *> *>>=Q}}}}{__compressed_pair<std::__hash_node_base<std::__hash_node<std::__hash_value_type<std::string, std::stack<std::string>>, void *> *>, std::allocator<std::__hash_node<std::__hash_value_type<std::string, std::stack<std::string>>, void *>>>={__hash_node_base<std::__hash_node<std::__hash_value_type<std::string, std::stack<std::string>>, void *> *>=^v}}{__compressed_pair<unsigned long, std::__unordered_map_hasher<std::string, std::__hash_value_type<std::string, std::stack<std::string>>, std::hash<std::string>, std::equal_to<std::string>, true>>=Q}{__compressed_pair<float, std::__unordered_map_equal<std::string, std::__hash_value_type<std::string, std::stack<std::string>>, std::equal_to<std::string>, std::hash<std::string>, true>>=f}}},Vnamespaces
initWithData:
setShouldProcessNamespaces:
setShouldReportNamespacePrefixes:
setDelegate:
parse
UTF8String
countByEnumeratingWithState:objects:count:
objectForKeyedSubscript:
initWithBase64EncodedString:options:
B24@0:8@16
#16@0:8
@16@0:8
@24@0:8:16
@32@0:8:16@24
@40@0:8:16@24@32
B16@0:8
B24@0:8#16
B24@0:8:16
Vv16@0:8
Q16@0:8
^{_NSZone=}16@0:8
B24@0:8@"Protocol"16
@"NSString"16@0:8
v24@0:8@16
v48@0:8@16@24@32@40
v56@0:8@16@24@32@40@48
v40@0:8@16@24@32
v32@0:8@16@24
@40@0:8@16@24@32
v24@0:8@"NSXMLParser"16
v48@0:8@"NSXMLParser"16@"NSString"24@"NSString"32@"NSString"40
v56@0:8@"NSXMLParser"16@"NSString"24@"NSString"32@"NSString"40@"NSString"48
v40@0:8@"NSXMLParser"16@"NSString"24@"NSString"32
v56@0:8@"NSXMLParser"16@"NSString"24@"NSString"32@"NSString"40@"NSDictionary"48
v32@0:8@"NSXMLParser"16@"NSString"24
v32@0:8@"NSXMLParser"16@"NSData"24
@"NSData"40@0:8@"NSXMLParser"16@"NSString"24@"NSString"32
v32@0:8@"NSXMLParser"16@"NSError"24
@20@0:8I16
v20@0:8B16
I16@0:8
v20@0:8I16
^v16@0:8
v24@0:8^v16
{vector<std::reference_wrapper<SVG::Element>, std::allocator<std::reference_wrapper<SVG::Element>>>=^v^v{__compressed_pair<std::reference_wrapper<SVG::Element> *, std::allocator<std::reference_wrapper<SVG::Element>>>=^v}}16@0:8
v40@0:8{vector<std::reference_wrapper<SVG::Element>, std::allocator<std::reference_wrapper<SVG::Element>>>=^v^v{__compressed_pair<std::reference_wrapper<SVG::Element> *, std::allocator<std::reference_wrapper<SVG::Element>>>=^v}}16
{unordered_map<std::string, std::stack<std::string>, std::hash<std::string>, std::equal_to<std::string>, std::allocator<std::pair<const std::string, std::stack<std::string>>>>={__hash_table<std::__hash_value_type<std::string, std::stack<std::string>>, std::__unordered_map_hasher<std::string, std::__hash_value_type<std::string, std::stack<std::string>>, std::hash<std::string>, std::equal_to<std::string>, true>, std::__unordered_map_equal<std::string, std::__hash_value_type<std::string, std::stack<std::string>>, std::equal_to<std::string>, std::hash<std::string>, true>, std::allocator<std::__hash_value_type<std::string, std::stack<std::string>>>>={unique_ptr<std::__hash_node_base<std::__hash_node<std::__hash_value_type<std::string, std::stack<std::string>>, void *> *> *[], std::__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<std::string, std::stack<std::string>>, void *> *> *>>>={__compressed_pair<std::__hash_node_base<std::__hash_node<std::__hash_value_type<std::string, std::stack<std::string>>, void *> *> **, std::__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<std::string, std::stack<std::string>>, void *> *> *>>>=^^v{__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<std::string, std::stack<std::string>>, void *> *> *>>={__compressed_pair<unsigned long, std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<std::string, std::stack<std::string>>, void *> *> *>>=Q}}}}{__compressed_pair<std::__hash_node_base<std::__hash_node<std::__hash_value_type<std::string, std::stack<std::string>>, void *> *>, std::allocator<std::__hash_node<std::__hash_value_type<std::string, std::stack<std::string>>, void *>>>={__hash_node_base<std::__hash_node<std::__hash_value_type<std::string, std::stack<std::string>>, void *> *>=^v}}{__compressed_pair<unsigned long, std::__unordered_map_hasher<std::string, std::__hash_value_type<std::string, std::stack<std::string>>, std::hash<std::string>, std::equal_to<std::string>, true>>=Q}{__compressed_pair<float, std::__unordered_map_equal<std::string, std::__hash_value_type<std::string, std::stack<std::string>>, std::equal_to<std::string>, std::hash<std::string>, true>>=f}}}16@0:8
v56@0:8{unordered_map<std::string, std::stack<std::string>, std::hash<std::string>, std::equal_to<std::string>, std::allocator<std::pair<const std::string, std::stack<std::string>>>>={__hash_table<std::__hash_value_type<std::string, std::stack<std::string>>, std::__unordered_map_hasher<std::string, std::__hash_value_type<std::string, std::stack<std::string>>, std::hash<std::string>, std::equal_to<std::string>, true>, std::__unordered_map_equal<std::string, std::__hash_value_type<std::string, std::stack<std::string>>, std::equal_to<std::string>, std::hash<std::string>, true>, std::allocator<std::__hash_value_type<std::string, std::stack<std::string>>>>={unique_ptr<std::__hash_node_base<std::__hash_node<std::__hash_value_type<std::string, std::stack<std::string>>, void *> *> *[], std::__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<std::string, std::stack<std::string>>, void *> *> *>>>={__compressed_pair<std::__hash_node_base<std::__hash_node<std::__hash_value_type<std::string, std::stack<std::string>>, void *> *> **, std::__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<std::string, std::stack<std::string>>, void *> *> *>>>=^^v{__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<std::string, std::stack<std::string>>, void *> *> *>>={__compressed_pair<unsigned long, std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<std::string, std::stack<std::string>>, void *> *> *>>=Q}}}}{__compressed_pair<std::__hash_node_base<std::__hash_node<std::__hash_value_type<std::string, std::stack<std::string>>, void *> *>, std::allocator<std::__hash_node<std::__hash_value_type<std::string, std::stack<std::string>>, void *>>>={__hash_node_base<std::__hash_node<std::__hash_value_type<std::string, std::stack<std::string>>, void *> *>=^v}}{__compressed_pair<unsigned long, std::__unordered_map_hasher<std::string, std::__hash_value_type<std::string, std::stack<std::string>>, std::hash<std::string>, std::equal_to<std::string>, true>>=Q}{__compressed_pair<float, std::__unordered_map_equal<std::string, std::__hash_value_type<std::string, std::stack<std::string>>, std::equal_to<std::string>, std::hash<std::string>, true>>=f}}}16
v16@0:8
{vector<std::reference_wrapper<SVG::Element>, std::allocator<std::reference_wrapper<SVG::Element>>>="__begin_"^v"__end_"^v"__end_cap_"{__compressed_pair<std::reference_wrapper<SVG::Element> *, std::allocator<std::reference_wrapper<SVG::Element>>>="__value_"^v}}
{unordered_map<std::string, std::stack<std::string>, std::hash<std::string>, std::equal_to<std::string>, std::allocator<std::pair<const std::string, std::stack<std::string>>>>="__table_"{__hash_table<std::__hash_value_type<std::string, std::stack<std::string>>, std::__unordered_map_hasher<std::string, std::__hash_value_type<std::string, std::stack<std::string>>, std::hash<std::string>, std::equal_to<std::string>, true>, std::__unordered_map_equal<std::string, std::__hash_value_type<std::string, std::stack<std::string>>, std::equal_to<std::string>, std::hash<std::string>, true>, std::allocator<std::__hash_value_type<std::string, std::stack<std::string>>>>="__bucket_list_"{unique_ptr<std::__hash_node_base<std::__hash_node<std::__hash_value_type<std::string, std::stack<std::string>>, void *> *> *[], std::__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<std::string, std::stack<std::string>>, void *> *> *>>>="__ptr_"{__compressed_pair<std::__hash_node_base<std::__hash_node<std::__hash_value_type<std::string, std::stack<std::string>>, void *> *> **, std::__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<std::string, std::stack<std::string>>, void *> *> *>>>="__value_"^^v"__value_"{__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<std::string, std::stack<std::string>>, void *> *> *>>="__data_"{__compressed_pair<unsigned long, std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<std::string, std::stack<std::string>>, void *> *> *>>="__value_"Q}}}}"__p1_"{__compressed_pair<std::__hash_node_base<std::__hash_node<std::__hash_value_type<std::string, std::stack<std::string>>, void *> *>, std::allocator<std::__hash_node<std::__hash_value_type<std::string, std::stack<std::string>>, void *>>>="__value_"{__hash_node_base<std::__hash_node<std::__hash_value_type<std::string, std::stack<std::string>>, void *> *>="__next_"^v}}"__p2_"{__compressed_pair<unsigned long, std::__unordered_map_hasher<std::string, std::__hash_value_type<std::string, std::stack<std::string>>, std::hash<std::string>, std::equal_to<std::string>, true>>="__value_"Q}"__p3_"{__compressed_pair<float, std::__unordered_map_equal<std::string, std::__hash_value_type<std::string, std::stack<std::string>>, std::equal_to<std::string>, std::hash<std::string>, true>>="__value_"f}}}
