@(#)PROGRAM:SiriPlaybackControlIntents  PROJECT:SiriPlaybackControls-1
?__C
DeviceProximity
NowPlayingMediaType
NowPlayingState
NLMediaType
VolumeSettingType
SiriPlaybackControlIntents
SetVolumeLevelIntentResponseCode
Port
NAVAudioSessionPort
GroupType
SkipTimeFlowStrategy
ResumeMediaDeviceDisambiguationStrategy
DeviceContextProvider
DefaultConfirmIntentStrategy
NLIntentType NLContextProvider
DeviceDisambiguationStrategy
NLIntentType NLContextProvider
DeviceSelectingUtil
PauseMediaHandleIntentStrategy
DeviceNLContextProviding
Speaker
CodingKeys
PauseMediaDeviceDisambiguationStrategy
SettingsFlowProvider
UserDefaultsProvider
UserDefaultsProviderImpl
Bfff?
SetVolumeLevelIntentHandler
AnalyticsService
AnalyticsServiceImpl
SelectedBy
PauseMediaIntent
ResumeMediaIntent
SeekTimeIntent
SkipTimeIntent
SkipContentIntent
SetRepeatStateIntent
SetShuffleStateIntent
GetVolumeLevelIntent
SetVolumeLevelIntent
SetSubtitleStateIntent
SetAudioLanguageIntent
WhatDidTheySayIntent
AddSpeakerIntent
ContextIntent
VolumeLevelNeedsValueStrategy
SkipContentIntentHandler
LanguageDisambiguationStrategy
SetRepeatStateIntentHandler
ResumeMediaFlowStrategy
SetVolumeLevelHandleIntentStrategy
VolumeLevelNeedsConfirmationStrategy
MatchedLanguageResult
SkipTimeDeviceDisambiguationStrategy
ConfirmableIntent
DeviceSelectionControlType
ContextItem
SetSubtitleStateUnsupportedValueStrategy
Device
InProcessHandlingStrategy
IntentHandler
SetVolumeLevelUnsupportedValueStrategy
SimulatedContextProvider
SkipTimeIntentHandler
MediaPlayerFlowProvider
AddSpeakerIntentHandler
ControlsFlowProvider
ControlsAppResolutionService
HomeAutomationCapableIntent
HomeAutomationNodes
DeviceType
PlaceHint
DeviceQuantifier
FromEntity
FromEntityType
AddSpeakerHandleIntentStrategy
MediaDeviceNLContextProvider
GetVolumeLevelFlowStrategy
SkipContentDeviceDisambiguationStrategy
ResumeMediaHandleIntentStrategy
ResumeMediaConfirmIntentStrategy
DialogProviding
BaseDialogProvider
ResumeMediaIntentHandler
SetRepeatStateConfirmIntentStrategy
SetAudioLanguageIntentHandler
SetAudioLanguageHandleIntentStrategy
LanguageNLContextProvider
WhatDidTheySayHandleIntentStrategy
GetVolumeLevelIntentHandler
PauseMediaFlowStrategy
SetShuffleStateIntentHandler
SetAudioLanguageConfirmIntentStrategy
GetVolumeLevelUnsupportedValueStrategy
MediaFlowProvider
SetRepeatStateDeviceDisambiguationStrategy
SkipTimeHandleIntentStrategy
SetShuffleStateFlowStrategy
FloatSettingName
Verb
ConfirmationStateValue
NumericSettingState
NumericSettingQualifier
SettingAttribute
NumericSettingUnit
SettingNLIntent
.@WhatDidTheySayIntentHandler
SeekTimeFlowStrategy
SeekTimeHandleIntentStrategy
AceServiceHelper
VolumeControlsDialogProvider
GetVolumeLevelParams
SetVolumeParameters
SetVolumeLevelErrorParameters
CodingKeys
AudioSessionProviding
AudioSessionProvider
LanguageControlsDialogProvider
DeviceDisambiguationAudioLanguageParameters
ConfirmWhatDidTheySayParameters
AudioLanguageNotAvailableParameters
IntentConfirmationSetSubtitleStateParams
DeviceDisambiguationSubtitlesParameters
SubtitleSetSuccessfullyParameters
SubtitleFailedToToggleParameters
DeviceDisambiguationWhatDidTheySayParameters
IntentConfirmationSetAudioLanguageParams
WhatDidTheySayHandledParameters
AudioSetSuccessfullyParameters
NoRelevantDeviceParameters
SubtitleAlreadyOnParameters
SubtitleLanguageNotAvailableParameters
CodingKeys
SkipTimeConfirmIntentStrategy
SetVolumeLevelFlowStrategy
GetVolumeLevelHandleIntentStrategy
WhatDidTheySayFlowStrategy
SkipContentFlowStrategy
RCHNamespace
AddSpeakerFlowStrategy
SetSubtitleStateIntent
SetAudioLanguageIntent
LanguageSelectableIntent
WhatDidTheySayDeviceDisambiguationStrategy
SeekTimeUnsupportedValueStrategy
DeviceContext
SetSubtitleStateHandleIntentStrategy
PauseMediaIntent
ResumeMediaIntent
SeekTimeIntent
SkipTimeIntent
SkipContentIntent
SetRepeatStateIntent
SetShuffleStateIntent
SetVolumeLevelIntent
SetSubtitleStateIntent
SetAudioLanguageIntent
GetVolumeLevelIntent
WhatDidTheySayIntent
DeviceDisambiguatableIntent
DeviceSelectableIntent
SingleDeviceSelectableIntent
SetSubtitleStateFlowStrategy
PauseMediaConfirmIntentStrategy
AppBundleIdentifiers
MusicBundleIds
PodcastsBundleIds
AudioBooksBundleIds
AddSpeakerUnsupportedValueStrategy
SetSubtitleStateDeviceDisambiguationStrategy
SetSubtitleStateIntentHandler
SetShuffleStateHandleIntentStrategy
.music
.podcast
.playlis
.musicVi
.song
.audioBo
.video
.iTunesU
.compila
.album
.radioSh
.show
.tvShow
.radioSt
.podcast
.musicPl
.station
.episode
.single
.genre
.news
.rington
.sounds
.movie
.unknown
podcast
playlist
musicVid
song
audioBoo
video
iTunesU
compilat
album
radioSho
show
tvShow
radioSta
podcastS
musicPla
station
episode
single
genre
news
ringtone
sounds
movie
SetSubtitleStateConfirmIntentStrategy
ControlsDialogParameters
SmartControlsDialogParameters
WholeHouseAudioDialogParameters
Name
Signpost
ControlsError
SetAudioLanguageUnsupportedValueStrategy
DefaultNeedsConfirmationStrategy
NLIntentType
SetShuffleStateDeviceDisambiguationStrategy
SetRepeatStateHandleIntentStrategy
WhatDidTheySayUnsupportedValueStrategy
GroupingUtil
MediaPlayerDeviceNLContextProvider
SetAudioLanguageFlowStrategy
PauseMediaIntent
ResumeMediaIntent
SeekTimeIntent
SkipTimeIntent
SkipContentIntent
SetRepeatStateIntent
SetShuffleStateIntent
SetSubtitleStateIntent
SetAudioLanguageIntent
GetVolumeLevelIntent
SetVolumeLevelIntent
AddSpeakerIntent
DeviceQueryableIntent
SetRepeatStateFlowStrategy
SeekTimeDeviceDisambiguationStrategy
ConfirmationCapableNLIntent
Attributes
BoolSettingState
BoolSettingVerb
Verb
MediaType
Reference
ConfirmationStateValue
MediaPlayerNLIntent
MobileGestalt
DeviceType
SeekTimeConfirmIntentStrategy
WhatDidTheySayConfirmIntentStrategy
DialogProvider
DeviceDisambiguationPauseParams
IntentConfirmationPauseParams
DeviceDisambiguationResumeParams
IntentConfirmationResumeParams
DeviceDisambiguationSeekTimeParams
IntentConfirmationSeekParams
DeviceDisambiguationRepeatParams
IntentConfirmationRepeatParams
DeviceDisambiguationSkipTimeParams
IntentConfirmationSkipTimeParams
DeviceDisambiguationSkipContentParams
IntentConfirmationSkipContentParams
DeviceDisambiguationShuffleStateParams
IntentConfirmationShuffleParams
CannotSkipLimitExceededParameters
CannotSkipAdvertisementParameters
SkipToPreviousParameters
SkipToNextParameters
ToggleRepeatParameters
RepeatErrorParameter
ToggleShuffleParameters
ShuffleErrorParameters
NoSpeakerFoundParameters
SeekParameters
SeekErrorParameters
SkipBackwardParameters
SkipForwardParameters
SkipErrorParameters
ResumeParameters
AddSpeakerParameters
SpeakerFailedOperationParameters
PausedParameters
CodingKeys
RepeatMode
Duration
SetShuffleStateConfirmIntentStrategy
SkipContentConfirmIntentStrategy
ContextProviding
ContextUtil
DeviceGroup
SetAudioLanguageDeviceDisambiguationStrategy
SkipContentHandleIntentStrategy
LocUtil
PauseMediaIntentHandler
ControlsFlowFactory
ControlsFlowFactoryImpl
QuestionAttributes
ViewOption
Verb
ConfirmationStateValue
MediaNLIntent
NLContextProviding
ItemType
SettingNLContextProvider
N@SeekTimeIntentHandler
homeAutomationRoom
homeAutomationZone
homeAutomationAccessory
homeAutomationService
homeAutomationServiceGroup
unknown
this
in_here
room_hint
house_hint
common_rooms
hall
kitchen
livingroom
diningroom
entrance
bathroom
office
bedroom
masterBedroom
basement
yard
play_room
tv_room
workshop
pausable
resumable
videoControls
volumeControls
apple_tv
television
homepod
speaker
airport_express
iPad
iPhone
airplay_speaker
bluetooth_speaker
both
some
except
com.apple.siri.nl.Media
com.apple.siri.nl.HomeAutomationRoom
com.apple.siri.nl.HomeAutomationPlaceHint
com.apple.siri.nl.HomeAutomationDeviceQuantifier
com.apple.siri.nl.MediaConfirmation
com.apple.siri.nl.MediaConfirmation.Value.CANCEL
com.apple.siri.nl.MediaConfirmation.Value.YES
com.apple.siri.nl.MediaConfirmation.Value.NO
com.apple.siri.nl.MediaReference
com.apple.siri.nl.MediaLanguage
com.apple.siri.nl.MediaViewOption
volume
voice
mediaType
less
maximum
mean
minimum
more
mute
unmute
cancel
read
percent
a_little
a_lot
referentialTo
com.apple.siri.nl.MediaPlayerReference
com.apple.siri.nl.MediaPlayerConfirmation
com.apple.siri.nl.MediaPlayerConfirmation.Value.CANCEL
com.apple.siri.nl.MediaPlayerConfirmation.Value.YES
com.apple.siri.nl.MediaPlayerConfirmation.Value.NO
play
pause
resume
stop
skip
previous
seek
skipForward
skipBackward
repeat
shuffle
moveSpeaker
addSpeaker
music
podcast
playlist
musicVideo
song
audioBook
video
iTunesU
compilation
album
tvShow
show
radioShow
podcastStation
musicPlaylist
station
episode
single
genre
news
ringtone
sounds
movie
toggle
enable
disable
many
again
ending
none
get attribute value
audio
subtitles
previous audio
com.apple.siri.nl.FloatSettingValue
com.apple.siri.nl.FloatSettingState
com.apple.siri.nl.FloatSettingQualifier
com.apple.siri.nl.SettingAttribute
com.apple.siri.nl.SettingConfirmation
com.apple.siri.nl.FloatSettingReference
com.apple.siri.nl.SettingConfirmation.Value.CANCEL
com.apple.siri.nl.SettingConfirmation.Value.YES
com.apple.siri.nl.SettingConfirmation.Value.NO
OS_dispatch_source_timer
SAClientBoundCommand
v24@0:8@16
B16@0:8
appId
T@"NSString",N,C
callbacks
T@"NSArray",N,C
@"NSString"16@0:8
v24@0:8@"NSString"16
@"NSArray"16@0:8
v24@0:8@"NSArray"16
SAServerBoundCommand
SASTTemplateItem
OS_dispatch_source
SAAceCommand
aceId
refId
SAAceReferable
SAAceSerializable
@40@0:8:16@24@32
B24@0:8#16
B24@0:8:16
Vv16@0:8
Q16@0:8
^{_NSZone=}16@0:8
hash
Tq,N,R
superclass
T#,N,R
description
T@"NSString",N,R
debugDescription
B24@0:8@"Protocol"16
AceObject
@24@0:8@16
@32@0:8@16@24
@24@0:8@"NSDictionary"16
@32@0:8@"NSDictionary"16@"<AceContext>"24
@"NSMutableDictionary"16@0:8
NSCopying
@24@0:8^{_NSZone=}16
NSMutableCopying
NSSecureCoding
supportsSecureCoding
TB,N,R
NSCoding
v24@0:8@"NSCoder"16
@24@0:8@"NSCoder"16
_TtC26SiriPlaybackControlIntents20SkipTimeFlowStrategy
Received non NLv3IntentOnly parse
SkipTimeFlowStrategy.makeIntentFromParse() called
Finished creating intent from parse
SkipTimeFlowStrategy.actionForInput() called
_TtC26SiriPlaybackControlIntents39ResumeMediaDeviceDisambiguationStrategy
DeviceDisambiguationStrategy.makePromptForDisambiguation() called
ResumeMediaDeviceDisambiguationStrategy.makeDialogForDisambiguation() called
ResumeMediaDeviceDisambiguationStrategy.makeContextUpdate() called
destinationDeviceId
com.apple.siri.nl.DestinationDeviceId
homeAutomationPlaceHint
homeAutomationDeviceQuantifier
v16@?0@"NSArray"8
Encoding routeIds
enableTelemetry=YES
SiriPlaybackControlIntents/NLContextProviding.swift
Descriptive hint was not built with an id value or display value
No device matched specified destinationId: %s
Found matching device from previous request, injecting it in the intent: %@
DeviceDisambiguationStrategy.parseDisambiguationResult() called
v16@?0@"NSDictionary"8
Failed to decode destinationDeviceId
Ignoring action due to missing destinationDeviceId in NL intent
Intent indicates we should cancel out of disambiguation
DeviceDisambiguationStrategy.actionForInput() called
PlaybackControls#ConfirmationCancelled
DeviceDisambiguationStrategy.makeFlowCancelledResponse()
DeviceDisambiguationStrategy.makeContextUpdate() called
mapDevicesToAFServiceDeviceContext
Got nil context array
fetchContext
Returning %ld context(s): %@
Got mediaContext for %ld devices
Device %s is in interrupted state, treating as paused.
Mapping device context %ld: %@
DeviceDisambiguationStrategy.makeDisambiguationItemContainer() called
Unexpected disambiguation item type
Could not convert disambiguation item to INObject
MediaStream { groupLeader: 
SiriPlaybackControlIntents
Merging streams %s failed. Could not find any group leaders
_TtC26SiriPlaybackControlIntents19DeviceSelectingUtil
contextUtil
groupingUtil
analyticsService
Contexts found, but primary context is not included... shouldControlPrimary: false.
Primary does not satisfy user query and thus is not a valid fallback. shouldControlPrimary: false
.any request and primary is playing something == %{bool}d, nothing else is playing and primary is the only resumable == %{bool}d. shouldControlPrimary: %{bool}d
.resumable request and primary is the only resumable context == %{bool}d. shouldControlPrimary: %{bool}d
.pausable request and primary is playing something == %{bool}d. shouldControlPrimary: %{bool}d
Pausable Contexts: %s, Resumable Contexts :%s
Primary now playing state is unknown. shouldControlPrimary: false
Primary context is the only context we have and user asked for controls other than .pausable. shouldControlPrimary: true
User asked for volume controls, always return local device. shouldControlPrimary: true
User asked for video controls on appleTV. shouldControlPrimary: true
This is a CarPlay request. shouldControlPrimary: true
No contexts found and user asked for controls. shouldControlPrimary: true
Determining if we should short circuit and control the primary device immediately
Primary device context is nil. Primary IS a valid fallback
A deviceType: %s is specified. Cannot assume that the primary matches that device type. Primary is NOT a valid fallback
primary hasMatchingNowPlayingMediaTypeQueued: %{bool}d. isPrimaryValidFallback: %{bool}d
No mediaType nor device types specified. Primary IS a valid fallback
ControlType is volumeControls, so primary should always be a valid fallback.
Deciding wether the primary is an acceptable candidate for controls using controlType: %{public}s, deviceType: %{public}s, mediaTypeFilter: %{public}s and primaryContext: %s
Resolving destination groups for add
Found other entities in the intent. Choosing those as the destination: %s
Setting excludeGroup to true for: %@
containsExcludeGroups set and found a superset group. Returning all ambiguous entities with excludeGroup flag applied to smaller entities: %s
No entities are found in the intent after filtering out the source group. Local device is the destination
Local device is the source, no other devices are found in the intent. Cannot determine the destination
Local device is the source. This is a "add this to the rest of the room/zone" request. Choosing ambiguous entities as the destination
Local device is the source. Checking if this is a "add this to the rest of the room/zone" request
Group: %s is a superset of all other groups. Choosing it as the destination
isSuperset: %{bool}d
Entity/Group with the most amount of devices found is: %s. Determining if it is a superset of all other groups
No groups passed in so there is no superset group
Found 2 or more distinct groups playing.
All entities in the intent are paused. Local device is also paused. Attempting to get a source from the context
All entities in the intent are paused. Local device is playing something. Choosing it as the source
All entities in the intent are paused. Determining if local is possible source
All entities in the intent are paused. Context lookup is disabled, cannot determine the source.
Some entities in the intent are playing in a stream and others are paused. Choosing the playing group as the source
All entities in the intent are playing in the same group and the local device is not playing anything. Group is source and primary should be the destination
All entities in the intent are playing in one stream and the local device is playing something different. Returning both as possible sources
All entities in the intent are playing in the same stream and the local device is part of that group. Cannot determine the source
All entities in the intent are playing in the same group (1 group found).
resolveAddSourceFromAmbiguousEntities called with empty ambiguousEntities. Cannot determine the source
Resolving add source from ambiguous entities
Found pausable devices from context: %s. Creating device groups
No pausable contexts were found. Cannot determine the source
Local device is playing. Choosing local device as the source
Resolving add source from context
Predicates already contain condition with routeId: %s, a duplicate will not be added.
Multiple sources found, but one of them contains the local device. Choosing that one as the source
Found explicit source streams in the intent: %@
Disambiguated Intent with destinationDeviceId: %s
Error while resolving devices: %s
No devices found, returning failure
select() resolutionResult is success with device(s): %s
select() resolutionResult is disambiguating with devices: %s
resolveDevice
Created predicate: %s
Using predicates: %s
Forcing disambiguation based on predicate device type
Resolving devices: %@
No devices provided in intent, resolving with local device
Resolved devices: %@
Resolving source groups for add speaker request with explicit sources: %s and ambiguousEntities: %s
No specific device type specified. Returning filtering DeviceCategory: .everything
smartDeviceSelection
Short circuiting and controlling the local device
No predicates could be generated from context, primary is a logical candidate! Selecting the local device
Non-empty device context expected for smart device selection, returning local device
Select devices with deviceType=%{public}s, controlType=%{public}s
User asked for .resumable or .any devices to control but we couldn't find any. Returning the local device
resolvedDevice count: %ld
LOCATION_EVERYWHERE
More than 1 device. Adding everywhere for pause control
LOCATION_IN_HERE
Primary device is a logical candidate. Adding back the local device to the list of devices elligible for controlling
%ld devices matching media type %{public}s: %s
Filtering devices %s using mediaTypeFilter %{public}s
mediaType: %{public}s is ambiguous or unspecified, filtering skipped.
Found no context for item: %s, filtering skipped for this item.
Using device queries: %s
No device queries in intent, returning failure.
Matched devices: %@
_TtC26SiriPlaybackControlIntents30PauseMediaHandleIntentStrategy
userDefaultsProvider
Unrecognized intentresponse code %{public}ld
PlaybackControls#NothingIsPlaying
PlaybackControls#PauseFailed
PauseMediaHandleIntentStrategy.makeFailureHandlingIntentResponse()
No device found in intent
PauseMediaHandleIntentStrategy.makeIntentHandledResponse()
suppressSnippets
Updating parameters for smart controls
Smart selected more than 1 device?! count = %ld
SiriPlaybackControlIntents/ControlsDialogParameters.swift
Proximity not supported!
Everywhere: Smart pause of all devices or groups
Cannot update dialog parameters using an empty device list
Unsupported deviceType for native playback controls!
hasThreeOrMoreRooms
firstSpeakerName
secondSpeakerName
_TtC26SiriPlaybackControlIntents38PauseMediaDeviceDisambiguationStrategy
PauseMediaDeviceDisambiguationStrategy.makeDialogForDisambiguation() called
PauseMediaDeviceDisambiguationStrategy.makeContextUpdate() called
Received non-NLv3Intent parse: %s
Making flow from parse
Not a media volume request
Could not find any verbs in the setting intent for the volume request. Returning getVolume flow
previousVolumeLevel
com.apple.siri.playbackcontrols
No devices resolved. Returning failure
resolvedVolumeOutput or currentVolume is undefined or could not be cast to float. Returning failure
Unknown volume setting type: %s, returning failure.
Volume is already at 0%%. Skip setting volume.
Volume is already at 100%%. Skip setting volume.
Volume settingType: %s, increase: %{bool}d, decrease: %{bool}d, resolved output: %s
Could not map any routeIds. Returning failure
SetVolumeLevel.SetVolumeLevelIntentHandler.handle() called
SetVolumeLevel.SetVolumeLevelIntentHandler.confirm() called
Can't do volume controls on CarPlay, returning unsupported.
Resolving devices for SetVolume
Resolving volume level for SetVolume
_TtC26SiriPlaybackControlIntents27SetVolumeLevelIntentHandler
playbackController
aceServiceHelper
Nothing to unmute
Volume Level retrieved from stash: %f
Already Muted
Found unexpected volumeSettingState: %{public}s. Returning failure
resolveVolumeLevelUsingQualifiers volume set to mean
resolveVolumeLevelUsingQualifiers volume set to min
resolveVolumeLevelUsingQualifiers volume set to max
resolveVolumeLevelUsingQualifiers increase by %f
resolveVolumeLevelUsingQualifiers decrease by %f
Intent does not contain a volumeSettingValue. Cannot resolve volume level from numeric input
This is an absolute volume adjust intent
This is a relative volume adjust intent
User specified a numeric value in the intent: %@
Calculated delta value: %f
Recalculating delta based on percent of current value
Calculating delta based on percent of current value
Using value directly as delta because value is less than normalizedMinimumValueToUseAsMultiplier or current volume is 0
Normalizing floatSettingValue percentage value
Percent not specified so increase/decrease based on defaultRelativeChangeStepSize and value
Could not find a resolveVolumeOutput in the intent. shouldPresentLoudVolumeWarning = false
Volume level is too loud, device has very loud audio output (hence should present warning): %{bool}d
User asked to change the volume relative to the current volume, we've reached the loud volume range, but the delta between the current volume and the target volume is not big enough to to confirm. shouldPresentLoudVolumeWarning = false
Expected volume output = %f is smaller than the loud volume range start value of %f. shouldPresentLoudVolumeWarning = false
Checking if we should be presenting loud volume warning for expectedOutputVolume = %f, currentVolumeOutput = %s, device = %@
Request is to decrease volume, skip loud volume confirmation
isHomePodFromDeviceType: %{bool}d, isHomePodFromDeviceState: %{bool}d, isAudioRouteToHeadphone: %{bool}d. hasVeryLoudAudioOutput=%{bool}d
Determining if device: %@ has very loud audio output
resolvedVolumeOutput = %f
Error getting the volume resolution result
User did not specify a numeric volume level in the intent, but intent has qualifiers. Trying to resolve volume level using qualifiers
User did not specify neither a numeric value in the intent nor any qualifiers. Returning .needsValue
User specified a numeric value in the intent. Trying to resolve the volume level from numeric input
resolveVolumeLevel: An error occurred in the GetVolumeLevel media remote call: %{public}s
Can't do volume controls on Apple TV, returning unsupported.
Multiple devices selected.
Attempting to set the volume for local device to %f for routeId: %s
An error occurred in the SetVolumeLevel media remote call: %{public}s
Attempting to change the volume by %f for routeIds: %s
Attempting to set the volume to %f for routeIds: %s isLocal: %{bool}d
floatVolumeLevel: %f deceeds minimum level. This is okay, we'll still try to set it to the min value
floatVolumeLevel: %f exceeds maximum level. This is okay, we'll still try to set it to the max value
SetVolumeLevelIntentHandling
v32@0:8@"SetVolumeLevelIntent"16@?<v@?@"SetVolumeLevelIntentResponse">24
v32@0:8@"SetVolumeLevelIntent"16@?<v@?@"NSArray">24
v32@0:8@"SetVolumeLevelIntent"16@?<v@?@"SetVolumeLevelVolumeLevelResolutionResult">24
_TtC26SiriPlaybackControlIntents20AnalyticsServiceImpl
com.apple.siri.playbackcontrols.numberOfDevicesFiltered
@"NSDictionary"8@?0
sending com.apple.siri.playbackcontrols.numberOfDevicesFiltered with filterName: %s devicesBefore: %ld devicesAfter: %ld devicesFiltered: %ld
com.apple.siri.playbackcontrols.disambiguatedDeviceProximities
sending com.apple.siri.playbackcontrols.disambiguatedDeviceProximities with counts [P, I, N, F, U]: [%ld, %ld, %ld, %ld, %ld] and is present: [%ld, %ld, %ld, %ld, %ld]
primaryProximityCount
immediateProximityCount
nearProximityCount
farProximityCount
unknownProximityCount
primaryProximityPresent
immediateProximityPresent
nearProximityPresent
farProximityPresent
unknownProximityPresent
sending eventType: %s with event: %s
com.apple.siri.playbackcontrols.selectedDeviceProximity
sending com.apple.siri.playbackcontrols.selectedDeviceProximity for intent: %s with proximity: %s and selectedBy: %s
selectedDeviceProximity
Unable to get turnId or convert to UUID
Unable to create SISchemaUUFRCompletion object
Finished logging UUFR
com.apple.siri.playbackcontrols.contextDeviceProximities
sending com.apple.siri.playbackcontrols.contextDeviceProximities with proximityCounts: %@
_TtC26SiriPlaybackControlIntents29VolumeLevelNeedsValueStrategy
deviceState
volumeControlsDialogProvider
Unknown parameter found: %{public}s. Unable to make prompt value.
VolumeControls#VolumeLevelNeedsValue
Making prompt value for "volumeLevel"
VolumeLevelNeedsValueStrategy.makePromptForValue()
Unknown parameter found: %{public}s. Unable to parse response value
Could not get volumeSettingValue from intent
VolumeLevelNeedsValueStrategy.parseResponseValue()
Unknown parameter found: %s. Returning .ignore()
Parse is not NLV3IntentOnly. ActionForInput = ignore()
Could not find a numericSettingState nor a numericSettingValue in the response. ActionForInput = ignore()
VolumeLevelNeedsValueStrategy.actionForInput()
handleSkipItem
Resolving devices for skip content
_TtC26SiriPlaybackControlIntents24SkipContentIntentHandler
v16@0:8
deviceSelector
No devices found in intent, returning failure
Skip direction not provided in intent, returning failure
SkipContentIntentHandling
v32@0:8@"SkipContentIntent"16@?<v@?@"SkipContentIntentResponse">24
v32@0:8@"SkipContentIntent"16@?<v@?@"NSArray">24
@32@0:8:16@24
dialogProviding
languageDialogProvider
LanguageControls#DisambiguateLanguage
LanguageDisambiguationStrategy.makePromptForDisambiguation() called
Unable to select a language from previous items, returning failure
User selected language: %@
LanguageDisambiguationStrategy.parseDisambiguationResult() called
Intent is missing language, ignoring
Comparing %{public}s against: %{public}s
LanguageDisambiguationStrategy.makeDisambiguationItemContainer() called
LanguageDisambiguationStrategy.makeFlowCancelledResponse()
LanguageDisambiguationStrategy.actionForInput() called
handleRepeatMedia
Resolving devices for set repeat state
_TtC26SiriPlaybackControlIntents27SetRepeatStateIntentHandler
Uknown repeat mode
Handling repeatState with value: %{public}ld
SetRepeatStateIntentHandling
v32@0:8@"SetRepeatStateIntent"16@?<v@?@"SetRepeatStateIntentResponse">24
v32@0:8@"SetRepeatStateIntent"16@?<v@?@"NSArray">24
q16@0:8
#16@0:8
@24@0:8:16
_TtC26SiriPlaybackControlIntents23ResumeMediaFlowStrategy
contextProvider
Received non NLv3IntentOnly or NLv3IntentPlusServerConversion parse
ResumeMediaFlowStrategy.makeIntentFromParse() called
Found destination device id in the intent. parsing the routes and setting disambiguated to true
Found home automation nodes, attempting to map them to SiriKit intent
ResumeMediaFlowStrategy.actionForInput() called
_TtC26SiriPlaybackControlIntents34SetVolumeLevelHandleIntentStrategy
volumeControlsDialogs
Did not receive devices in intent
SetVolumeLevel.HandleIntentStrategy.makeFailureHandlingIntentResponse() called
Updating parameters for Volume control
Did not receive volume level from response
VolumeControls#AlreadyAtMinimum
VolumeControls#AlreadyAtMaximum
SetVolumeLevel.HandleIntentStrategy.makeIntentHandledResponse() called
_TtC26SiriPlaybackControlIntents36VolumeLevelNeedsConfirmationStrategy
DefaultNeedsConfirmationStrategy.makeConfirmationRejectedResponse()
Could not find any devices or volume level in the intent for confirmation
Unable to generate views for confirmation
VolumeControls#ConfirmSetLoudVolume
VolumeLevelNeedsConfirmationStrategy.makePromptForConfirmation()
Unexpected parse type: %s
DefaultNeedsConfirmationStrategy.parseConfirmationResponse()
No confirmation response in the intent, ignoring input
Cancelling due to confirmation value in intent
DefaultNeedsConfirmationStrategy.actionForInput()
Filtered %ld options against %{public}s to: %{public}@
Error when getting language options: %{public}s
Unable to autoselect a language, returning all options: %@
Found already enabled language: %s
_TtC26SiriPlaybackControlIntents36SkipTimeDeviceDisambiguationStrategy
Missing direction in intent
SkipTimeDeviceDisambiguationStrategy.makeDialogForDisambiguation() called
_TtC26SiriPlaybackControlIntents40SetSubtitleStateUnsupportedValueStrategy
LanguageControls#FailedToRetrieveOptions
SetSubtitleStateUnsupportedValueStrategy.makeUnsupportedValueOutput()
Unable to create SettingNLIntent from parse, ignoring input
Incorrect verb in intent for flow, ignoring input
SetVolumeLevel.shouldHandle() called
Intent Device { name: 
, disambiguated: 
, skipConfirmation: 
Device missing identifier, skipping conversion: %s
Context missing route ID while converting to Intent Device: %@. Skipping device.
Context contains duplicate routeId: %s with context: %@. Keeping only last processed context: %@
_TtC26SiriPlaybackControlIntents38SetVolumeLevelUnsupportedValueStrategy
VolumeControls#VolumeLevelUnsupportedOnCarPlay
VolumeControls#VolumeLevelUnsupportedOnAppleTV
Returning %ld contexts: %@
nowPlayingMediaType
handleSkipTimeMedia
Resolving devices for skip time
_TtC26SiriPlaybackControlIntents21SkipTimeIntentHandler
v32@0:8@16@?24
Unable to get time from intent, returning failure
Unknown skip direction provided in intent, returning failure
Missing routeId in intent, returning failure
responseCodeFromResult for SkipTimeIntentResponseCode
SkipTimeIntentHandling
v32@0:8@"SkipTimeIntent"16@?<v@?@"SkipTimeIntentResponse">24
v32@0:8@"SkipTimeIntent"16@?<v@?@"NSArray">24
v32@0:8@"SkipTimeIntent"16@?<v@?@"SignedDurationResolutionResult">24
handleAddSpeakerIntent
resolveAddSpeakerSource
resolveAddSpeakerDestiantions
AddSpeakerIntentHandler.confirm() called
_TtC26SiriPlaybackControlIntents23AddSpeakerIntentHandler
Could not find a device query or could not find add source in the intent. Returning error
AddSpeakerIntentHandler.resolveDestination() called
Success resolving destination: %s.
Could not resolve any destination for add speaker request.
Could not find any device queries in the intent. Returning error
AddSpeakerIntentHandler.resolveSource() called with intent: %s
Multiple sources found for add request.
Success resolving source: %@.
Could not find a source stream for the add request.
Could not find a valid source and/or destinations in the intent
Failed to get the device id of the source. Returning error
Source device is is not TV or HomePod. Sending a move command instead of add
Empty destination ids found after filtration. Returning error
Resolved Source: %s, Resolved Destinations: %s
AddSpeakerIntentHandler.handle() called
Success adding output devices to group
Failed to add output devices to group. Error: %s
AddSpeakerIntentHandling
v32@0:8@"AddSpeakerIntent"16@?<v@?@"AddSpeakerIntentResponse">24
v32@0:8@"AddSpeakerIntent"16@?<v@?@"AddSpeakerSourceResolutionResult">24
v32@0:8@"AddSpeakerIntent"16@?<v@?@"NSArray">24
NSObject
makeFlow
makeFlow(for parse:)
Received unexpected parse type
com.apple.siri.DirectInvocation.PlaybackControls.StopMedia
Unexpected invocation identifieir: %s
Returninig PauseMediaFlow for stop direct invocation
Unexpected nl domain: %s, returning no delegate
Attempting to make frame from settings NL intent
Attempting to make frame from mediaPlayer NL intent
Attempting to make frame from media NL intent
Ignoring check for ambiguous INPlayMediaIntent due to unsupported platform
com.apple.siri.SiriPlaybackControlIntents.ControlsIntentExtension
homeAutomationSpeakerService
homeAutomationFromEntity
homeAutomationServiceName
homeAutomationAccessoryName
homeAutomationHome
Not rendering the controls platter due to enabled suppressSnippets user default
Setting sash applicationBundleIdentifier to: %{public}s
_TtC26SiriPlaybackControlIntents30AddSpeakerHandleIntentStrategy
AddSpeakerHandleIntentStrategy.makeFailureHandlingIntentResponse() called
Destination #2: Destination type is unknown. Ignoring...
Destination #2: Destination is a room or zone. Setting speaker.firstRoom to the groupName
Destination #2: Destination is an accesory. Setting speaker.firstSpeakerName to the groupName
Destination #1: Destination type is unknown. Ignoring...
Destination #1: Destination is a room or zone. Setting speaker.firstRoom to the groupName
Destination #1: Destination is an accesory. Setting speaker.firstSpeakerName to the groupName
Destination resolved as the local device. Setting speaker.isInHere to true
More than 2 rooms mentioned in the intent. Setting speaker.hasThreeOrMoreRooms to true
User mentioned "everywhere" in the intent. Setting speaker.isAllSpeakers to true
No destinations found to populate speaker parameter.
Updating destination parameters for WHA dialog
Unable to find any destinations in the intent. Returning a failure
AddSpeakerHandleIntentStrategy.makeIntentHandledResponse() called
resolveVolumeLevelUsingQualifiers a lot triggered
resolveVolumeLevelUsingQualifiers a little triggered
volumeSettingState not specified in the intent. isIncreaseOrDecreaseVolumeIntent = false
mediaConfirmation
_TtC26SiriPlaybackControlIntents26GetVolumeLevelFlowStrategy
GetVolumeLevelFlowStrategy.makeIntentFromParse() called
Device queries are empty, skip adding to intent.
GetVolumeLevelFlowStrategy.actionForInput() called
_TtC26SiriPlaybackControlIntents39SkipContentDeviceDisambiguationStrategy
SkipContentDeviceDisambiguationStrategy.makeDialogForDisambiguation() called
_TtC26SiriPlaybackControlIntents31ResumeMediaHandleIntentStrategy
PlaybackControls#ResumeFailed
ResumeMediaHandleIntentStrategy.makeFailureHandlingIntentResponse()
ResumeMediaHandleIntentStrategy.makeIntentHandledResponse()
_TtC26SiriPlaybackControlIntents32ResumeMediaConfirmIntentStrategy
dialogProvider
ConfirmIntentStrategy.makeFlowCancelledResponse()
ConfirmIntentStrategy.makeConfirmationRejectedResponse()
ConfirmIntentStrategy.makePromptForConfirmation() called
Could not find any devices in the intent for confirmation
Confirming devices: %s
ResumeMediaConfirmIntentStrategy.makeDialogForConfirmation()
ConfirmIntentStrategy.parseConfirmationResponse()
ConfirmIntentStrategy.actionForInput()
DeviceGroup { groupName: 
, excludeGroup: 
unmapped NowPlayingMediaType case (
MRMediaRemoteMediaTypeMusic
MRMediaRemoteMediaTypePodcast
MRMediaRemoteMediaTypeAudioBook
MRMediaRemoteMediaTypeITunesU
kMRMediaRemoteMediaTypeITunesRadio
kMRMediaRemoteNowPlayingInfoTypeAudio
kMRMediaRemoteNowPlayingInfoTypeVideo
Found an unknown media type playing: "%{public}s". Treating as unknown
_TtC26SiriPlaybackControlIntents18BaseDialogProvider
testMode
testGlobals
globals
isMultiUserEnabled
requiresUserGrounding
executeCAT
Executing CAT: %s with params: %s
Error while executing dialog: %{public}s
handleResumeMedia
Resolving devices for resume media
_TtC26SiriPlaybackControlIntents24ResumeMediaIntentHandler
App bundle id for mediaType %{public}s on %{public}s is nil. Returning failure
Handling resume media
Handling resume for devices: %@
Resuming in here
Failed to handle Resume intent
User asked to "Resume [mediaType]", however no devices with a matching nowPlayingMediaType was found. Falling back to resuming the corresponding first party app locally
Prepare for audio handoff came back with result: %{bool}d
More than one device found in the intent or primary device not found. shouldResumeLocalFirstPartyAppForMediaType = false
shouldResumeLocalFirstPartyAppForMediaType = %{bool}d
Determining if we should resume the local first party app using %s and mediaType %{public}s.
ResumeMediaIntentHandling
v32@0:8@"ResumeMediaIntent"16@?<v@?@"ResumeMediaIntentResponse">24
v32@0:8@"ResumeMediaIntent"16@?<v@?@"NSArray">24
_TtC26SiriPlaybackControlIntents35SetRepeatStateConfirmIntentStrategy
Unexpected repeat mode found
SetRepeatStateConfirmIntentStrategy.makeDialogForConfirmation()
handleSetAudioLanguage
resolveAudioLanguage
setAudioLanguage
_TtC26SiriPlaybackControlIntents29SetAudioLanguageIntentHandler
@16@0:8
No device found in intent, returning failure
Language already found in intent, returning it
Resolving language for set audio language
No language resolved and user requested to enable subtitles, returning failure
SetAudioLanguageIntentHandling
v32@0:8@"SetAudioLanguageIntent"16@?<v@?@"SetAudioLanguageIntentResponse">24
v32@0:8@"SetAudioLanguageIntent"16@?<v@?@"SetAudioLanguageDeviceResolutionResult">24
v32@0:8@"SetAudioLanguageIntent"16@?<v@?@"SetAudioLanguageLanguageResolutionResult">24
B24@0:8@16
_TtC26SiriPlaybackControlIntents36SetAudioLanguageHandleIntentStrategy
LanguageControls#AudioFailedToChange
No device present in intent
SetAudioLanguageHandleIntentStrategy.makeIntentHandledResponse()
_TtC26SiriPlaybackControlIntents34WhatDidTheySayHandleIntentStrategy
controlsDialogProvider
WhatDidTheySayHandleIntentStrategy.makeFailureHandlingIntentResponse()
WhatDidTheySayHandleIntentStrategy.makeIntentHandledResponse()
Missing routeId in intent
Getting the volume for route Id: %s
GetVolumeLevel.GetVolumeLevelIntentHandler.handle() called
GetVolumeLevel.GetVolumeLevelIntentHandler.resolveDevices() called
GetVolumeLevel.GetVolumeLevelIntentHandler.confirm() called
_TtC26SiriPlaybackControlIntents27GetVolumeLevelIntentHandler
Multiple devices selected, returning unsupported.
The current volume level from GetVolumeLevel media remote call is: %f
An error occurred in the GetVolumeLevel media remote call: %{public}s
GetVolumeLevelIntentHandling
v32@0:8@"GetVolumeLevelIntent"16@?<v@?@"GetVolumeLevelIntentResponse">24
v32@0:8@"GetVolumeLevelIntent"16@?<v@?@"GetVolumeLevelDeviceResolutionResult">24
Intent LanguageOption { name: 
, languageIdentifier: 
_TtC26SiriPlaybackControlIntents22PauseMediaFlowStrategy
Unexpected parse type in makeIntentFromParse: %s
Unexpected direct invocation identifier
PauseMediaFlowStrategy.makeIntentFromParse() called
Didn't recieve an NLv3IntentOnly parse or direct invocation.
PauseMediaFlowStrategy.actionForInput() called
handleShuffleMedia
Resolving devices for set shuffle state
_TtC26SiriPlaybackControlIntents28SetShuffleStateIntentHandler
Uknown shuffle mode
Unexpected shuffle mode
responseCodeFromResult for SetShuffleStateIntentHandler
SetShuffleStateIntentHandling
v32@0:8@"SetShuffleStateIntent"16@?<v@?@"SetShuffleStateIntentResponse">24
v32@0:8@"SetShuffleStateIntent"16@?<v@?@"NSArray">24
_TtC26SiriPlaybackControlIntents37SetAudioLanguageConfirmIntentStrategy
Confirming device: %@
SetAudioLanguageConfirmIntentStrategy.makeDialogForDisambiguation()
_TtC26SiriPlaybackControlIntents38GetVolumeLevelUnsupportedValueStrategy
VolumeControls#GetVolumeLevelError
VolumeControls#GetVolumeLevelUnsupportedOnMultipleDevices
GetVolumeLevelUnsupportedValueStrategy.makeUnsupportedValueOutput() called
_TtC26SiriPlaybackControlIntents42SetRepeatStateDeviceDisambiguationStrategy
SetRepeatStateDeviceDisambiguationStrategy.makeDialogForDisambiguation() called
_TtC26SiriPlaybackControlIntents28SkipTimeHandleIntentStrategy
SkipTimeHandleIntentStrategy.makeFailureHandlingIntentResponse()
Could not create skip error params
callIntentHandledFailedUnsupportedCommand in SkipTimeDialogTemplatingService
callGenericIntentHandledFailed in SkipTimeDialogTemplatingService
Did not receive valid duration
SkipTimeHandleIntentStrategy.makeIntentHandledResponse()
_TtC26SiriPlaybackControlIntents27SetShuffleStateFlowStrategy
SetShuffleStateFlowStrategy.makeIntentFromParse() called
SetShuffleStateFlowStrategy.actionForInput() called
settingAttribute
floatSettingValue
floatSettingQualifier
floatSettingState
settingConfirmation
floatSettingVerb
Unsupported parse while creating SettingNLIntent: %s
floatSettingName
Found language in intent, mapping it to SiriKit intent
handleWhatDidTheySayIntent
_TtC26SiriPlaybackControlIntents27WhatDidTheySayIntentHandler
timer
queue
assertion
What did they say timer
MediaQuotationIntentHandler
v8@?0
v24@?0@"RBSAssertion"8@"NSError"16
Acquired RB assertion
Error acquiring assertion %{public}s
Error disabling subtitles for 'What did they say' request
Successfully disabled subtitles for 'What did they say' request
Missing device in intent
Handling What did they say
Error getting matching subtitle options: %{public}s
Calculated %f seconds as the duration to skip back
Unable to infer a language option. Trying to match %{public}s against options: %{public}s
Setting subtitle language
Skipping language change due to already enabled language
Error while performing rewind command
WhatDidTheySayIntentHandling
v32@0:8@"WhatDidTheySayIntent"16@?<v@?@"WhatDidTheySayIntentResponse">24
v32@0:8@"WhatDidTheySayIntent"16@?<v@?@"WhatDidTheySayDeviceResolutionResult">24
_TtC26SiriPlaybackControlIntents20SeekTimeFlowStrategy
SeekTimeFlowStrategy.makeIntentFromParse() called
SeekTimeFlowStrategy.actionForInput() called
_TtC26SiriPlaybackControlIntents28SeekTimeHandleIntentStrategy
SeekTimeHandleIntentStrategy.makeFailureHandlingIntentResponse()
Did not receive valid playheadPosition
SeekTimeHandleIntentStrategy.makeIntentHandledResponse()
_TtC26SiriPlaybackControlIntents16AceServiceHelper
aceService
Local device not found in devices to control. Skipping prepareForAudioHandoff
Local device found in devices to control. Asking to prepareForAudioHandoff
iOSOnly is set and the device is not an iOS device. Skipping prepareForAudioHandoff
DeviceQuery: %@ is a serviceName, serviceGroup, or unknown placeHint. Creating wildcard predicates for it.
VolumeControls#SetVolumeLevelError
VolumeControls#SetVolumeLevel
VolumeControls#GetVolumeLevel
VolumeControls#AlreadyUnmuted
smartControlFarRooms
isHomePodLocalOnly
preferSpeakerName
requestedVolumeLevel
requestedStateIsCurrentState
_TtC26SiriPlaybackControlIntents20AudioSessionProvider
audioSession
LanguageControls#SubtitleLanguageNotAvailable
LanguageControls#SubtitleAlreadyOn
LanguageControls#NoRelevantDevice
LanguageControls#AudioSetSuccessfully
LanguageControls#WhatDidTheySayHandled
LanguageControls#ConfirmSetAudioLanguage
LanguageControls#DeviceDisambiguationWhatDidTheySay
LanguageControls#SubtitleFailedToToggle
LanguageControls#SubtitleSetSuccessfully
LanguageControls#DeviceDisambiguationSubtitles
LanguageControls#ConfirmSetSubtitleState
LanguageControls#AudioLanguageNotAvailable
LanguageControls#ConfirmWhatDidTheySay
LanguageControls#DeviceDisambiguationAudioLanguage
requestedLanguage
isClosedCaptionRequest
deviceIsInferred
isEnableSubtitles
_TtC26SiriPlaybackControlIntents29SkipTimeConfirmIntentStrategy
Unexpected skip time direction
SkipTimeConfirmIntentStrategy.makePromptForConfirmation()
_TtC26SiriPlaybackControlIntents26SetVolumeLevelFlowStrategy
SetVolumeLevel.FlowStrategy.makeIntentFromParse() called
SetVolumeLevel.FlowStrategy.actionForInput() called
_TtC26SiriPlaybackControlIntents34GetVolumeLevelHandleIntentStrategy
GetVolumeLevel.HandleIntentStrategy.makeFailureHandlingIntentResponse() called
An error occurred in generating the error dialog for GetVolumeLevel: %{public}s
Did not receive device in intent
Did not receive the volume level
Current volume level in the intent response is: %s
GetVolumeLevel.HandleIntentStrategy.makeIntentHandledResponse() called
An error occurred in generating the dialog for GetVolumeLevel: %{public}s
_TtC26SiriPlaybackControlIntents26WhatDidTheySayFlowStrategy
WhatDidTheySayFlowStrategy.makeIntentFromParse() called
WhatDidTheySayFlowStrategy.actionForInput() called
_TtC26SiriPlaybackControlIntents23SkipContentFlowStrategy
SkipContentFlowStrategy.makeIntentFromParse() called
SkipContentFlowStrategy.actionForInput() called
_TtC26SiriPlaybackControlIntents22AddSpeakerFlowStrategy
AddSpeakerFlowStrategy.makeIntentFromParse() called
AddSpeakerFlowStrategy.actionForInput() called
_TtC26SiriPlaybackControlIntents42WhatDidTheySayDeviceDisambiguationStrategy
WhatDidTheySayDeviceDisambiguationStrategy.makeDialogForDisambiguation() called
_TtC26SiriPlaybackControlIntents32SeekTimeUnsupportedValueStrategy
playheadPosition
Did not receive intent response for seekTime or devices not populated!
SeekTimeUnsupportedValueStrategy.makeUnsupportedValueOutput()
DeviceContext { routeId: 
, nowPlayingState: 
, nowPlayingTimestamp: 
, nowPlayingMediaType: 
exactMediaTypeFound: %{bool}d, isAmbiguousMediaType: %{bool}d, unknownMediaTypeQueued: %{bool}d, acceptAmbiguousMediaType: %{bool}d, acceptUnknownNowPlayingMediaType: %{bool}d. hasMatchingNowPlayingMediaTypeQueued: %{bool}d
_TtC26SiriPlaybackControlIntents36SetSubtitleStateHandleIntentStrategy
SetSubtitleStateHandleIntentStrategy.makeFailureHandlingIntentResponse()
SetSubtitleStateHandleIntentStrategy.makeIntentHandledResponse()
No resolved devices were found in the intent. Skipping confirmation step
Intent indicates confirmation is not necessary
Confirm intent condition returning true
Checking confirm intent condition
ConfirmableIntent.shouldConfirm: %{bool}d
shouldSkipUserConfirmation is set to true. Skipping confirmation step
DeviceQueryableIntent.shouldConfirm: %{bool}d
_TtC26SiriPlaybackControlIntents28SetSubtitleStateFlowStrategy
SetSubtitleStateFlowStrategy.makeIntentFromParse() called
SetSubtitleStateFlowStrategy.actionForInput() called
CONFIRMATION_CONFIRM
Failed to localize labels for confirmation dialog.
CONFIRMATION_CANCEL
Unexpected device type, returning empty views
Making views for watch
Making views for TV with confirmUtterance: %s and cancelUtterance: %s
Making SAUIConfirmationView with confirmUtterance: %s and cancelUtterance: %s
_TtC26SiriPlaybackControlIntents31PauseMediaConfirmIntentStrategy
PauseMediaConfirmIntentStrategy.makePromptForConfirmation() called
PauseMediaConfirmIntentStrategy.makeDialogForConfirmation()
Device type is nil. Returning nil for getLocalBundleIdentifier
Could not get bunlde id for type: %{public}s
Getting app identifier for mediaType %{public}s and deviceType: %{public}s
com.apple.iBooks
com.apple.iBooksX
com.apple.NanoBooks
com.apple.podcasts
com.apple.TVMusic
com.apple.NanoMusic
_TtC26SiriPlaybackControlIntents34AddSpeakerUnsupportedValueStrategy
PlaybackControls#NoWholeHouseAudioMentionedInIntent
PlaybackControls#TooManyStreamsInHome
AddSpeakerUnsupportedValueStrategy.makeUnsupportedValueOutput() called
_TtC26SiriPlaybackControlIntents44SetSubtitleStateDeviceDisambiguationStrategy
LanguageControls#DisambiguateDevices
SetSubtitleStateDeviceDisambiguationStrategy.makeDialogForDisambiguation() called
handleVideoCaptioning
resolveSubtitleLanguageForVideoCaptioning
setSubtitleState
_TtC26SiriPlaybackControlIntents29SetSubtitleStateIntentHandler
Did not request to enable subtitles
Resolving language for set subtitle state
Disambiguating languages: %s
Resolving successfully with: %s
No languages matched
Received .matched response with languages: %s
Received .allAvailable response with languages: %s
Returning .alreadyEnabled response code
Received failure response when resolving language
The requested language was already enabled
SetSubtitleStateIntentHandling
v32@0:8@"SetSubtitleStateIntent"16@?<v@?@"SetSubtitleStateIntentResponse">24
v32@0:8@"SetSubtitleStateIntent"16@?<v@?@"SetSubtitleStateDeviceResolutionResult">24
v32@0:8@"SetSubtitleStateIntent"16@?<v@?@"SetSubtitleStateLanguageResolutionResult">24
_TtC26SiriPlaybackControlIntents35SetShuffleStateHandleIntentStrategy
Unexpected shuffle state found
SetShuffleStateHandleIntentStrategy.makeFailureHandlingIntentResponse()
Did not receive intent response for shuffle request or devices not populated!
SetShuffleStateHandleIntentStrategy.makeIntentHandledResponse()
unmapped NLMediaType case (
Cannot convert value "%{public}s" to NLMediaType
_TtC26SiriPlaybackControlIntents37SetSubtitleStateConfirmIntentStrategy
SetSubtitleStateConfirmIntentStrategy.makeDialogForConfirmation()
encodeRouteIds
handlePauseMedia
handleSeekTimeMedia
_TtC26SiriPlaybackControlIntents40SetAudioLanguageUnsupportedValueStrategy
SetAudioLanguageUnsupportedValueStrategy.makeUnsupportedValueOutput()
Device queries created from intent: %s
From entity device queries: %s
_TtC26SiriPlaybackControlIntents43SetShuffleStateDeviceDisambiguationStrategy
SetShuffleStateDeviceDisambiguationStrategy.makeDialogForDisambiguation() called
_TtC26SiriPlaybackControlIntents34SetRepeatStateHandleIntentStrategy
SetRepeatStateHandleIntentStrategy.makeFailureHandlingIntentResponse()
Did not receive intent response for repeat request or devices not populated!
Unexpected repeat mode during handle dialog
SetRepeatStateHandleIntentStrategy.makeIntentHandledResponse()
_TtC26SiriPlaybackControlIntents38WhatDidTheySayUnsupportedValueStrategy
WhatDidTheySayUnsupportedValueStrategy.makeUnsupportedValueOutput()
GetVolumeLevel.shouldHandle() called
_TtC26SiriPlaybackControlIntents12GroupingUtil
ambiguousGroupsSync
Found primary context and creating a 'this' DeviceGroup for the local device.
Device queries contain a reference for 'this'.
Multiple predicates found, filtering out .allDevices
Getting ambiguous groups for deviceQueries: %s, includeFromEntities: %{bool}d
Could not find any groups for %s
%s has multiple groups but none are zone/room/accessory. GroupTypes: %s
Adding deduplicated group for %s: %@
Groups for %s: %@
Returning ambiguousGroups: %@
Adding a group includingTVs: %{bool}d for streams: %s
Adding a stream for paused devices: %@
Playing streams: %s
Selecting devices based on predicate: %s
No devices found in group: %s. Skipping this group.
Creating stream for groupId: %s from devicesInGroup: %s
Grouping devices into streams
FromEntity DeviceQueries: %s
Returning sourceStreams: %@
mediaPlayerReference
mediaPlayerConfirmation
com.apple.siri.nl.MediaPlayer
_TtC26SiriPlaybackControlIntents28SetAudioLanguageFlowStrategy
SetAudioLanguageFlowStrategy.makeIntentFromParse() called
SetAudioLanguageFlowStrategy.actionForInput() called
_TtC26SiriPlaybackControlIntents26SetRepeatStateFlowStrategy
SetRepeatStateFlowStrategy.makeIntentFromParse() called
SetRepeatStateFlowStrategy.actionForInput() called
_TtC26SiriPlaybackControlIntents36SeekTimeDeviceDisambiguationStrategy
SeekTimeDeviceDisambiguationStrategy.makeDialogForDisambiguation() called
USER_DIDNT_ACTUALLY_SAY_MUSIC
No mediaType found the intent.
Returning mediaType = %s
MediaType: %s found in the intent but it was not explicitly mentioned by the user. Returning nil mediaType
Getting MediaType. ignoreWhenNotExplicitlyMentioned = %{bool}d
MediaType node is not inferred, or could not find origin details. isMediaTypeExplicitlyMentioned: true.
MediaType inferred, but no explanation found or explanation shows it was mentioned by the user. isMediaTypeExplicitlyMentioned: true
MediaType inferred, and the user didn't explicitly mention it. This is possibly a SmartPlay reformation. isMediaTypeExplicitlyMentioned: false
mediaPlayerAttributes
mediaPlayerSkipInterval
mediaPlayerBoolSettingState
mediaPlayerBoolSettingVerb
DeviceClassNumber
_TtC26SiriPlaybackControlIntents29SeekTimeConfirmIntentStrategy
SeekTimeConfirmIntentStrategy.makePromptForConfirmation()
_TtC26SiriPlaybackControlIntents35WhatDidTheySayConfirmIntentStrategy
WhatDidTheySayConfirmIntentStrategy.makeDialogForConfirmation()
_TtC26SiriPlaybackControlIntents14DialogProvider
PlaybackControls#SpeakerAdd
PlaybackControls#CannotSkipAdvertisement
PlaybackControls#CannotShuffle
PlaybackControls#UnableToSeekToPlaybackPosition
PlaybackControls#SkipBackward
PlaybackControls#CannotSkipBackward
PlaybackControls#CannotSkipForward
PlaybackControls#CannotSkipLimitExceeded
PlaybackControls#SkipToPrevious
PlaybackControls#SkipToNext
PlaybackControls#ConfirmShuffleState
PlaybackControls#DeviceDisambiguationShuffleState
PlaybackControls#ConfirmSkipContent
PlaybackControls#DeviceDisambiguationSkipContent
PlaybackControls#ConfirmSkipTime
PlaybackControls#DeviceDisambiguationSkipTime
PlaybackControls#SkipForward
PlaybackControls#ToggleShuffle
PlaybackControls#ConfirmRepeatState
PlaybackControls#DeviceDisambiguationRepeat
PlaybackControls#ToggleRepeat
PlaybackControls#CannotRepeat
PlaybackControls#NoSpeakerFound
PlaybackControls#SpeakerFailedOperation
PlaybackControls#ConfirmSeekTime
PlaybackControls#DeviceDisambiguationSeekTime
PlaybackControls#Seek
PlaybackControls#ConfirmResume
PlaybackControls#DeviceDisambiguationResume
PlaybackControls#Resume
PlaybackControls#ConfirmPause
PlaybackControls#DeviceDisambiguationPause
PlaybackControls#Paused
isMultipleSpeakers
skipBackwardDuration
isShuffleEnabled
isSkipToPrevious
skipForwardDuration
isDestinationMissing
DeviceQuery { roomName: 
, accessoryName: 
, serviceGroup: 
, deviceQuantifier: 
, isFromEntity: 
Device query did not match device: %@
Device query matches device mediaType for: %@
Device query matches device type for: %@
Device query matches device name for: %@
_TtC26SiriPlaybackControlIntents36SetShuffleStateConfirmIntentStrategy
SetShuffleStateConfirmIntentStrategy.makeDialogForConfirmation()
_TtC26SiriPlaybackControlIntents32SkipContentConfirmIntentStrategy
Unexpected skip content direction
SkipContentConfirmIntentStrategy.makePromptForConfirmation()
_TtC26SiriPlaybackControlIntents11ContextUtil
resumeLongWindowDuration
resumeShortWindowDuration
autoResumableProximitiesInLongWindow
autoResumableProximitiesInShortWindow
Devices %s are autoresumable. Setting skipConfirmation to true
Most recent resumable context in short window = %{public}s
Contexts in selection window %s
Selection window [%{public}s - %{public}s]
Excluding context %@ with no timestamp
Excluding item %s with no context
Found same room devices with video up on the screen, returning those devices: %s
No devices selected for "any" type of control
Selecting the pausable primary or immediate device context
Adding back local device to the filtered resumable devices
Smart Selecting devices of type: %{public}s
Auto resumable device found, don't disambiguate with local!
No resumable device found in long resumable window. Include local device
Local device is playing. Don't disambiguate with local device since it is already resumed.
The resumable devices contain the primary device. Don't include local device again
Selecting most recent resumable deviceContexts: %s
Selected pausable devices: %s
Could not find immediate devices, look near and far
Selecting primary device context
Skipping item with missing proximity: %s
Selected and grouped devices: %s
Video control received on homepod! Removing this device (primary) if it was selected
Adding device types for devices in room %s
ROOM_NAME_SPEAKER
LOCATION_ROOM_AND_N_OTHER_ROOMS
LOCATION_ROOM_AND_ONE_OTHER_ROOM
Could not find device contexts for group %s...skipping this group
Group %s: unique rooms: %s
Error getting the first room name in a group. groupRoomCount %ld...skipping this group
Group %s: Skipping context %@
Grouping devices in group %s
Single device in group, adding it to grouped device list
Group %s has primary or immediate device. Adding it.
Error generating group name...skipping this group
Cannot group empty device list
Picking device %@ as the group representing device
ShortResumeTimeWindow
RecentTimeWindow
!!!!! Simulated context is being used !!!!!
_TtC26SiriPlaybackControlIntents44SetAudioLanguageDeviceDisambiguationStrategy
SetAudioLanguageDeviceDisambiguationStrategy.makeDialogForDisambiguation() called
_TtC26SiriPlaybackControlIntents31SkipContentHandleIntentStrategy
SkipContentHandleIntentStrategy.makeFailureHandlingIntentResponse()
SkipContentHandleIntentStrategy.callIntentHandledFailedUnsupportedCommand()
SkipContentHandleIntentStrategy.callGenericIntentHandledFailed()
SkipContentHandleIntentStrategy.makeIntentHandledResponse()
_TtC26SiriPlaybackControlIntents7LocUtil
Localizing key: %{public}s from table: %{public}s using languageCode: %{public}s
Resolving devices for pause media
_TtC26SiriPlaybackControlIntents23PauseMediaIntentHandler
No devices found in intent, returning nothing is playing, but also sending a pause command to the local device just in case...
Local device selected with unknown playstate. Returning nothing is playing, but also sending a pause command to the local device just in case...
Handling pause media
Handling pause for devices: %@
Pausing everywhere using context %@
Failed to handle Pause intent
Executing pause for devices: %s, deviceContext: %s
PauseMediaIntentHandling
v32@0:8@"PauseMediaIntent"16@?<v@?@"PauseMediaIntentResponse">24
v32@0:8@"PauseMediaIntent"16@?<v@?@"NSArray">24
Initializing WhatDidTheySayFlow
RCHChildFlowProducers.whatDidTheySayFlowProducers() called
Initializing SetSubtitleStateFlow
RCHChildFlowProducers.setSubtitleStateFlowProducers() called
SiriPlaybackControlIntents/RCHChildFlowProducers+SetSubtitleState.swift
Fatal error
Unexpected parameter while generating disambiguation strategy
getDisambiguationStrategy() for SetSubtitleState called
Initializing SetAudioLanguageFlow
RCHChildFlowProducers.setAudioLanguageFlowProducers() called
SiriPlaybackControlIntents/RCHChildFlowProducers+SetAudioLanguage.swift
getDisambiguationStrategy() for SetAudioLanguage called
Initializing AddSpeakerFlow
RCHChildFlowProducers.addSpeakerFlowProducers() called
Initializing ResumeMediaFlow
RCHChildFlowProducers.resumeMediaFlowProducers() called
Initializing SkipTimeFlow
RCHChildFlowProducers.skipTimeFlowProducers() called
Initializing SkipContentFlow
RCHChildFlowProducers.skipContentFlowProducers() called
Initializing SeekTimeFlow
RCHChildFlowProducers.seekTimeFlowProducers() called
Initializing SetRepeatStateFlow
RCHChildFlowProducers.setRepeatStateFlowProducers() called
Initializing SetShuffleStateFlow
RCHChildFlowProducers.setShuffleStateFlowProducers() called
Initializing SetVolumeLevelFlow
RCHChildFlowProducers.setVolumeLevelFlowProducers() called
Initializing GetVolumeLevelFlow
RCHChildFlowProducers.getVolumeLevelFlowProducers() called
Initializing PauseMediaFlow
RCHChildFlowProducers.pauseMediaFlowProducers() called
mediaQuestionAttributes
com.apple.siri.nl.Setting
Resolving devices for seek time
Playhead position doesn't exist in intent.
Multiple devices in intent, can't get duration info
Resolving playHeadPosition for seek time
_TtC26SiriPlaybackControlIntents21SeekTimeIntentHandler
Content has no duration, can't skip to end
Missing duration info or elapsed duration is within 15 seconds of the end. Seeking to end of duration
Could not find time to seek in intent or it was invalid, returning failure
Can't seek to end on multiple devices, returning failure
Seeking to: %@
Handling seek to time
responseCodeFromResult for SeekTimeIntentHandler
SeekTimeIntentHandling
v32@0:8@"SeekTimeIntent"16@?<v@?@"SeekTimeIntentResponse">24
v32@0:8@"SeekTimeIntent"16@?<v@?@"NSArray">24
v32@0:8@"SeekTimeIntent"16@?<v@?@"SeekTimePlayheadPositionResolutionResult">24
$sSY
So8NSStringC
$ss21_ObjectiveCBridgeableP
So14SkipTimeIntentC
$s11SiriKitFlow19IntentErrorHandlingP
So22SkipTimeIntentResponseC
$s11SiriKitFlow026RouteConfirmIntentResponseC8StrategyP
$s11SiriKitFlow28IntentExtensionCommunicatingP
$s26SiriPlaybackControlIntents25InProcessHandlingStrategyP
ySo14SkipTimeIntentC
_pGIegg_
So17ResumeMediaIntentC
$s11SiriKitFlow27ParameterResolutionHandlingP
ySo6DeviceCG
So25ResumeMediaIntentResponseC
So6DeviceC
$s11SiriKitFlow019NeedsDisambiguationC8StrategyP
$s26SiriPlaybackControlIntents28DeviceDisambiguationStrategyP
ySo6DeviceCG
So24INIntentResolutionResultC
_pGIegn_
Iegn_
SaySo6DeviceCG
Gz_Xx
GIegg_
SaySSGIegg_
SaySSGIegn_
ySSG
_pSg
ySo9SAAceViewCG
ySo20SAClientBoundCommand_pG
ySo20SAServerBoundCommand_pG
So20SAServerBoundCommand_p
So20SAClientBoundCommand_p
ySo17ResumeMediaIntentCG
ySo17ResumeMediaIntentCGG
ySo17ResumeMediaIntentCGG
ySo6DeviceCG
SSSg
SSSgz_Xx
So21OS_dispatch_semaphoreC
SaySo19SAUIHideSiriOverlayCG
ySo19SAUIHideSiriOverlayCG
So16PauseMediaIntentC
ySo16PauseMediaIntentCG
ySo16PauseMediaIntentCGG
ySo16PauseMediaIntentCGG
ySo11DeviceQueryCG
SaySo11DeviceQueryCG
ySo14LanguageOptionCG
ySo14SkipTimeIntentCG
ySo14SkipTimeIntentCGG
ySo14SkipTimeIntentCGG
ySo11DeviceGroupCG
ySSSgG
So17SkipContentIntentC
ySo17SkipContentIntentCG
ySo17SkipContentIntentCGG
ySo17SkipContentIntentCGG
So20SetRepeatStateIntentC
ySo20SetRepeatStateIntentCG
ySo20SetRepeatStateIntentCGG
ySo20SetRepeatStateIntentCGG
So20WhatDidTheySayIntentC
ySo20WhatDidTheySayIntentCG
ySo20WhatDidTheySayIntentCGG
ySo20WhatDidTheySayIntentCGG
So22SetSubtitleStateIntentC
ySo22SetSubtitleStateIntentCG
ySo22SetSubtitleStateIntentCGG
ySo22SetSubtitleStateIntentCGG
So21SetShuffleStateIntentC
ySo21SetShuffleStateIntentCG
ySo21SetShuffleStateIntentCGG
ySo21SetShuffleStateIntentCGG
So14SeekTimeIntentC
ySo14SeekTimeIntentCG
ySo14SeekTimeIntentCGG
ySo14SeekTimeIntentCGG
So22SetAudioLanguageIntentC
ySo22SetAudioLanguageIntentCG
ySo22SetAudioLanguageIntentCGG
ySo22SetAudioLanguageIntentCGG
SaySo11MediaStreamCG
ySo13DeviceContextCG
SaySo11DeviceGroupCG
ySo11MediaStreamCG
ySo22DeviceResolutionResultCG
ySo38AddSpeakerDestinationsResolutionResultCG
ySo37SetVolumeLevelDevicesResolutionResultCG
ySo22AFServiceDeviceContextCG
ySDyS2SGG
SDyS2SG
SaySo22AFServiceDeviceContextCGIegg_
SaySo22AFServiceDeviceContextCGIegn_
SaySSG
SaySo13DeviceContextCGIegg_
SaySo13DeviceContextCGIegn_
ypSg
$s26SiriPlaybackControlIntents28DefaultConfirmIntentStrategyP
10IntentType
17NLContextProvider
12NLIntentType
31DisambiguationItemContainerType
10IntentType
17NLContextProvider
12NLIntentType
So6DeviceCSg
SaySo6DeviceCGSg
So11MediaStreamC
SaySo13DeviceContextCG
SaySo11DeviceGroupCGIegg_
SaySo11MediaStreamCGIegg_
SaySo11MediaStreamCGz_Xx
So7NSArrayCIeyBy_
SaySo22DeviceResolutionResultCGIegg_
ySaySo22DeviceResolutionResultCG
_pGIegg_
ySaySo6DeviceCG_Sbt
_pGIegg_
ySaySo6DeviceCG_Sbt
_pGIegn_
ySaySo6DeviceCG
_pGIegg_
ySaySo6DeviceCG
_pGIegn_
So13DeviceContextCSg
So24PauseMediaIntentResponseC
$s11SiriKitFlow012HandleIntentC8StrategyP
$s26SiriPlaybackControlIntents24DeviceNLContextProvidingP
SiSg
$s26SiriPlaybackControlIntents20UserDefaultsProviderP
So14NSUserDefaultsCSg
SaySo37SetVolumeLevelDevicesResolutionResultCGIegg_
So20SetVolumeLevelIntentC
So014SetVolumeLevelbC16ResolutionResultCIegg_
So8NSObjectC
ySo12SAUIListItemCG
So8NSNumberCSg
So014SetVolumeLevelbC16ResolutionResultCIeyBy_
So28SetVolumeLevelIntentResponseCIeyBy_
So28SetVolumeLevelIntentResponseCIegg_
GSpySo8NSObjectCGSgSpyypGSgytIeglllr_
$s26SiriPlaybackControlIntents16AnalyticsServiceP
ySS_So8NSObjectCtG
3key_yp5valuetSg
$s26SiriPlaybackControlIntents13ContextIntentP
So8INIntentC
So28SetVolumeLevelIntentResponseC
$s11SiriKitFlow010NeedsValueC8StrategyP
ySo20SetVolumeLevelIntentCGSg
ySo20SetVolumeLevelIntentCGSg
ySo20SetVolumeLevelIntentCG
So25SkipContentIntentResponseCIegg_
So25SkipContentIntentResponseCIegn_
So25SkipContentIntentResponseCIeyBy_
So16INIntentResponseC
So14LanguageOptionC
ySo14LanguageOptionCG
ySo14LanguageOptionCG
yxq_G
G0R2_
G1R2_
ySo14LanguageOptionCG
_pGIegn_
So28SetRepeatStateIntentResponseCIegg_
So28SetRepeatStateIntentResponseCIegn_
So28SetRepeatStateIntentResponseCIeyBy_
ySo17ResumeMediaIntentC
_pGIegg_
$s11SiriKitFlow017NeedsConfirmationC8StrategyP
$s26SiriPlaybackControlIntents32DefaultNeedsConfirmationStrategyP
SaySo9SAAceViewCG
ySo20SetVolumeLevelIntentCG
ySo20SetVolumeLevelIntentCG
Iegg_
ySay
$s26SiriPlaybackControlIntents17ConfirmableIntentP
$s26SiriPlaybackControlIntents11ContextItemP
So30SetSubtitleStateIntentResponseC
$s11SiriKitFlow016UnsupportedValueC8StrategyP
ySSSo13DeviceContextCG
13IntentHandler
So22SkipTimeIntentResponseCIegg_
So22SkipTimeIntentResponseCIegn_
So22SkipTimeIntentResponseCIeyBy_
So24AddSpeakerIntentResponseCIegg_
So24AddSpeakerIntentResponseCIegn_
So24AddSpeakerIntentResponseCIeyBy_
So32AddSpeakerSourceResolutionResultCIegg_
So32AddSpeakerSourceResolutionResultCIegn_
So32AddSpeakerSourceResolutionResultCIeyBy_
SaySo38AddSpeakerDestinationsResolutionResultCGIegg_
SaySo38AddSpeakerDestinationsResolutionResultCGIegn_
ySo22SAUIConfirmationOptionCG
$ss12CaseIterableP
$s26SiriPlaybackControlIntents27HomeAutomationCapableIntentP
ySSG
ySo13SFCardSectionCG
So8SAUISashC
So13SACardSnippetC
ySaySo9SAAceViewCG
_pGIegg_
SSIegg_
So16AddSpeakerIntentC
So24AddSpeakerIntentResponseC
ySSSgG
ySSG
$s26SiriPlaybackControlIntents18NLContextProvidingP
So20GetVolumeLevelIntentC
So28GetVolumeLevelIntentResponseC
ySo20GetVolumeLevelIntentC
_pGIegg_
So25SkipContentIntentResponseC
$s11SiriKitFlow013ConfirmIntentC8StrategyP
ySo17ResumeMediaIntentCG
ySo17ResumeMediaIntentCG
ySo20SetRepeatStateIntentCG
ySo20SetRepeatStateIntentCG
ySo22SetAudioLanguageIntentCG
ySo22SetAudioLanguageIntentCG
ySo14SkipTimeIntentCG
ySo14SkipTimeIntentCG
ySo16PauseMediaIntentCG
ySo16PauseMediaIntentCG
ySo22SetSubtitleStateIntentCG
ySo22SetSubtitleStateIntentCG
ySo14SeekTimeIntentCG
ySo14SeekTimeIntentCG
ySo20WhatDidTheySayIntentCG
ySo20WhatDidTheySayIntentCG
ySo21SetShuffleStateIntentCG
ySo21SetShuffleStateIntentCG
ySo17SkipContentIntentCG
ySo17SkipContentIntentCG
SaySo11MediaStreamCGSg
ySS_
$s26SiriPlaybackControlIntents15DialogProvidingP
SDySSypG
_pGIegn_
_pSg
So25ResumeMediaIntentResponseCIegg_
So25ResumeMediaIntentResponseCIegn_
So25ResumeMediaIntentResponseCIeyBy_
So28SetRepeatStateIntentResponseC
So30SetAudioLanguageIntentResponseCIegg_
So30SetAudioLanguageIntentResponseCIegn_
So30SetAudioLanguageIntentResponseCIeyBy_
So38SetAudioLanguageDeviceResolutionResultCIegg_
So016SetAudioLanguageC16ResolutionResultCIegg_
So016SetAudioLanguageC16ResolutionResultCIegn_
So016SetAudioLanguageC16ResolutionResultCIeyBy_
So38SetAudioLanguageDeviceResolutionResultCIeyBy_
So30SetAudioLanguageIntentResponseC
SaySo13SABaseCommandCG
ySo13SABaseCommandCG
So28WhatDidTheySayIntentResponseC
So28GetVolumeLevelIntentResponseCIegg_
So36GetVolumeLevelDeviceResolutionResultCIegg_
So36GetVolumeLevelDeviceResolutionResultCIeyBy_
So28GetVolumeLevelIntentResponseCIeyBy_
ySo16PauseMediaIntentC
_pGIegg_
So29SetShuffleStateIntentResponseCIegg_
So29SetShuffleStateIntentResponseCIegn_
So29SetShuffleStateIntentResponseCIeyBy_
So29SetShuffleStateIntentResponseC
ySo21SetShuffleStateIntentC
_pGIegg_
So36WhatDidTheySayDeviceResolutionResultCIegg_
So28WhatDidTheySayIntentResponseCIegg_
So28WhatDidTheySayIntentResponseCIegn_
So28WhatDidTheySayIntentResponseCIeyBy_
So24OS_dispatch_source_timer_pSg
So17OS_dispatch_queueCSg
So12RBSAssertionCSg
ySo12RBSAttributeCG
So36WhatDidTheySayDeviceResolutionResultCIeyBy_
So22SeekTimeIntentResponseC
ySo14SeekTimeIntentC
_pGIegg_
$s26SiriPlaybackControlIntents21AudioSessionProvidingP
So14AVAudioSessionC
ySo20SetVolumeLevelIntentC
_pGIegg_
ySo20WhatDidTheySayIntentC
_pGIegg_
ySo17SkipContentIntentC
_pGIegg_
$s26SiriPlaybackControlIntents12RCHNamespaceP
ySo16AddSpeakerIntentC
_pGIegg_
$s26SiriPlaybackControlIntents24LanguageSelectableIntentP
Sg_ABt
Sg_ABt
$s26SiriPlaybackControlIntents27DeviceDisambiguatableIntentP
$s26SiriPlaybackControlIntents22DeviceSelectableIntentP
$s26SiriPlaybackControlIntents28SingleDeviceSelectableIntentP
ySo22SetSubtitleStateIntentC
_pGIegg_
ySo16SASTTemplateItem_pG
So16SASTTemplateItem_p
ySo10SAUIButtonCG
z_Xx
$s26SiriPlaybackControlIntents20AppBundleIdentifiersP
_pSg
So30SetSubtitleStateIntentResponseCIegg_
So30SetSubtitleStateIntentResponseCIegn_
So30SetSubtitleStateIntentResponseCIeyBy_
So38SetSubtitleStateDeviceResolutionResultCIegg_
So40SetSubtitleStateLanguageResolutionResultCIegg_
So40SetSubtitleStateLanguageResolutionResultCIegn_
So40SetSubtitleStateLanguageResolutionResultCIeyBy_
So38SetSubtitleStateDeviceResolutionResultCIeyBy_
_SStG
ySSypG
SS_ypt
ySS_
ySSSo8NSObjectCG
$s26SiriPlaybackControlIntents24ControlsDialogParametersP
$s26SiriPlaybackControlIntents29SmartControlsDialogParametersP
$s26SiriPlaybackControlIntents31WholeHouseAudioDialogParametersP
12NLIntentType
So17OS_dispatch_queueC
SaySo11DeviceGroupCGz_Xx
So17OS_dispatch_groupC
ySo22SetAudioLanguageIntentC
_pGIegg_
$s26SiriPlaybackControlIntents21DeviceQueryableIntentP
ySo20SetRepeatStateIntentC
_pGIegg_
$s26SiriPlaybackControlIntents27ConfirmationCapableNLIntentP
$s26SiriPlaybackControlIntents16ContextProvidingP
ySnySiGG
ySSSgSay
ySSSgSaySo6DeviceCGG
Ieg_
ySSSgSaySo11DeviceGroupCGG
ySSSgSaySo11MediaStreamCGG
z_Xx
z_Xx
So24PauseMediaIntentResponseCIegg_
So24PauseMediaIntentResponseCIegn_
So24PauseMediaIntentResponseCIeyBy_
$s26SiriPlaybackControlIntents19ControlsFlowFactoryP
ySo20WhatDidTheySayIntentCSo0abcdE8ResponseCG
ySo20WhatDidTheySayIntentCSo0abcdE8ResponseCG
ySo22SetSubtitleStateIntentCSo0abcD8ResponseCG
ySo22SetSubtitleStateIntentCSo0abcD8ResponseCG
ySo22SetSubtitleStateIntentCSo0abcD8ResponseCG
ACSo24INIntentResolutionResultCSSSi
yACGIegg_Ieggggggyg_
ySo22SetSubtitleStateIntentCSo0abcD8ResponseCG
ySo22SetAudioLanguageIntentCSo0abcD8ResponseCG
ySo22SetAudioLanguageIntentCSo0abcD8ResponseCG
ySo22SetAudioLanguageIntentCSo0abcD8ResponseCG
ACSo24INIntentResolutionResultCSSSi
yACGIegg_Ieggggggyg_
ySo22SetAudioLanguageIntentCSo0abcD8ResponseCG
ySo16AddSpeakerIntentCSo0abC8ResponseCG
ySo16AddSpeakerIntentCSo0abC8ResponseCG
ySo17ResumeMediaIntentCSo0abC8ResponseCG
ySo17ResumeMediaIntentCSo0abC8ResponseCG
ySo14SkipTimeIntentCSo0abC8ResponseCG
ySo14SkipTimeIntentCSo0abC8ResponseCG
ySo17SkipContentIntentCSo0abC8ResponseCG
ySo17SkipContentIntentCSo0abC8ResponseCG
ySo14SeekTimeIntentCSo0abC8ResponseCG
ySo14SeekTimeIntentCSo0abC8ResponseCG
ySo20SetRepeatStateIntentCSo0abcD8ResponseCG
ySo20SetRepeatStateIntentCSo0abcD8ResponseCG
ySo21SetShuffleStateIntentCSo0abcD8ResponseCG
ySo21SetShuffleStateIntentCSo0abcD8ResponseCG
ySo20SetVolumeLevelIntentCSo0abcD8ResponseCG
ySo20SetVolumeLevelIntentCSo0abcD8ResponseCG
ySo20GetVolumeLevelIntentCSo0abcD8ResponseCG
ySo20GetVolumeLevelIntentCSo0abcD8ResponseCG
ySo16PauseMediaIntentCSo0abC8ResponseCG
ySo16PauseMediaIntentCSo0abC8ResponseCG
So8INObjectC
8ItemType
So22SeekTimeIntentResponseCIegg_
So22SeekTimeIntentResponseCIegn_
So22SeekTimeIntentResponseCIeyBy_
So40SeekTimePlayheadPositionResolutionResultCIegg_
So40SeekTimePlayheadPositionResolutionResultCIeyBy_
RawValue
_rawValue
_ObjectiveCType
contextProvider
IntentType
IntentResponseType
IntentHandler
deviceState
dialogProvider
IntentType
IntentResponseType
ItemType
DisambiguationItemContainerType
NLIntentType
NLContextProvider
analyticsService
deviceSelector
deviceState
contextUtil
groupingUtil
analyticsService
deviceState
dialogProvider
userDefaultsProvider
IntentType
IntentHandler
IntentResponseType
hasRoutes
hasThreeOrMoreRooms
isAllSpeakers
isInHere
firstSpeakerName
secondSpeakerName
firstRoom
secondRoom
otherRoomsCount
deviceState
dialogProvider
IntentType
IntentResponseType
ItemType
DisambiguationItemContainerType
NLIntentType
NLContextProvider
flowFactory
userDefaults
deviceSelector
analyticsService
deviceState
playbackController
userDefaultsProvider
audioSession
aceServiceHelper
confirmation
disambiguation
direct
deviceState
volumeControlsDialogProvider
IntentType
IntentResponseType
playbackController
deviceSelector
analyticsService
aceServiceHelper
deviceState
dialogProviding
languageDialogProvider
IntentType
IntentResponseType
ItemType
DisambiguationItemContainerType
playbackController
deviceSelector
analyticsService
contextProvider
IntentType
IntentResponseType
IntentHandler
volumeControlsDialogs
deviceState
IntentType
IntentHandler
IntentResponseType
deviceState
dialogProvider
volumeControlsDialogProvider
IntentType
IntentResponseType
NLIntentType
allAvailable
matched
failure
autoSelectionAlreadyEnabled
deviceState
dialogProvider
IntentType
IntentResponseType
ItemType
DisambiguationItemContainerType
NLIntentType
NLContextProvider
pausable
resumable
videoControls
volumeControls
RawValue
deviceState
languageDialogProvider
IntentType
IntentResponseType
deviceState
volumeControlsDialogProvider
IntentType
IntentResponseType
playbackController
deviceSelector
analyticsService
aceServiceHelper
flowFactory
deviceSelector
analyticsService
playbackController
deviceState
aceServiceHelper
flowFactory
playbackController
contextProvider
contextUtil
settingsFlowProvider
mediaFlowProvider
mediaPlayerFlowProvider
RawValue
AllCases
appleTv
television
homepod
speaker
airportExpress
iPad
iPhone
airplaySpeaker
bluetoothSpeaker
this
here
room
house
commonRooms
hall
kitchen
livingRoom
diningRoom
entrance
bathroom
office
bedroom
masterBedroom
basement
yard
playRoom
tvRoom
workshop
both
some
except
type
value
homeAutomationRoom
homeAutomationZone
homeAutomationAccessory
homeAutomationService
homeAutomationServiceGroup
unknown
dialogProvider
deviceState
IntentType
IntentHandler
IntentResponseType
ItemType
contextProvider
IntentType
IntentResponseType
IntentHandler
deviceState
dialogProvider
IntentType
IntentResponseType
ItemType
DisambiguationItemContainerType
NLIntentType
NLContextProvider
deviceState
dialogProvider
userDefaultsProvider
IntentType
IntentHandler
IntentResponseType
deviceState
dialogProvider
IntentType
IntentResponseType
NLIntentType
NLContextProvider
testMode
testGlobals
globals
playbackController
deviceSelector
analyticsService
aceServiceHelper
deviceState
dialogProvider
IntentType
IntentResponseType
NLIntentType
NLContextProvider
playbackController
deviceSelector
analyticsService
aceServiceHelper
deviceState
languageDialogProvider
IntentType
IntentHandler
IntentResponseType
ItemType
deviceState
languageDialogProvider
controlsDialogProvider
IntentType
IntentHandler
IntentResponseType
deviceSelector
analyticsService
playbackController
deviceState
aceServiceHelper
contextProvider
IntentType
IntentResponseType
IntentHandler
playbackController
deviceSelector
analyticsService
aceServiceHelper
deviceState
dialogProvider
languageDialogProvider
IntentType
IntentResponseType
NLIntentType
NLContextProvider
deviceState
volumeControlsDialogProvider
IntentType
IntentResponseType
flowFactory
deviceState
dialogProvider
IntentType
IntentResponseType
ItemType
DisambiguationItemContainerType
NLIntentType
NLContextProvider
deviceState
dialogProvider
userDefaultsProvider
playbackController
IntentType
IntentHandler
IntentResponseType
contextProvider
IntentType
IntentResponseType
IntentHandler
percent
referentialTo
aLittle
aLot
less
maximum
mean
minimum
more
mute
unmute
cancel
read
volume
voice
mediaType
intent
AllCases
RawValue
playbackController
deviceSelector
timer
queue
assertion
analyticsService
deviceState
aceServiceHelper
contextProvider
IntentType
IntentResponseType
IntentHandler
deviceState
dialogProvider
userDefaultsProvider
playbackController
IntentType
IntentHandler
IntentResponseType
deviceState
aceService
dialogProvider
isSameRoomOnly
smartControlFarRooms
isIOS
isTV
isHomePodLocalOnly
speaker
preferSpeakerName
requestedVolumeLevel
isMediaPlaying
isIncreaseLevel
isDecreaseLevel
requestedStateIsCurrentState
volumeLevel
deviceState
audioSession
dialogProvider
requestedLanguage
isClosedCaptionRequest
deviceIsInferred
isIOS
isTV
isHomePodLocalOnly
speaker
isSameRoomOnly
smartControlFarRooms
rooms
hasInHere
isOn
isEnable
isEnableSubtitles
deviceState
dialogProvider
IntentType
IntentResponseType
NLIntentType
NLContextProvider
contextProvider
IntentType
IntentResponseType
IntentHandler
volumeControlsDialogs
deviceState
IntentType
IntentHandler
IntentResponseType
contextProvider
IntentType
IntentResponseType
IntentHandler
contextProvider
IntentType
IntentResponseType
IntentHandler
contextProvider
IntentType
IntentResponseType
IntentHandler
deviceState
dialogProvider
languageDialogProvider
IntentType
IntentResponseType
ItemType
DisambiguationItemContainerType
NLIntentType
NLContextProvider
deviceState
dialogProvider
IntentType
IntentResponseType
deviceState
languageDialogProvider
IntentType
IntentHandler
IntentResponseType
contextProvider
IntentType
IntentResponseType
IntentHandler
deviceState
dialogProvider
IntentType
IntentResponseType
NLIntentType
NLContextProvider
homePod
appleTV
macOS
watchOS
deviceState
dialogProvider
IntentType
IntentResponseType
deviceState
dialogProvider
languageDialogProvider
IntentType
IntentResponseType
ItemType
DisambiguationItemContainerType
NLIntentType
NLContextProvider
playbackController
deviceSelector
analyticsService
aceServiceHelper
deviceState
dialogProvider
userDefaultsProvider
IntentType
IntentHandler
IntentResponseType
deviceState
dialogProvider
languageDialogProvider
IntentType
IntentResponseType
NLIntentType
NLContextProvider
name
unknown
deviceState
languageDialogProvider
IntentType
IntentResponseType
deviceState
dialogProvider
IntentType
IntentResponseType
ItemType
DisambiguationItemContainerType
NLIntentType
NLContextProvider
deviceState
dialogProvider
userDefaultsProvider
IntentType
IntentHandler
IntentResponseType
deviceState
languageDialogProvider
IntentType
IntentResponseType
deviceSelector
ItemType
contextProvider
IntentType
IntentResponseType
IntentHandler
contextProvider
IntentType
IntentResponseType
IntentHandler
deviceState
dialogProvider
IntentType
IntentResponseType
ItemType
DisambiguationItemContainerType
NLIntentType
NLContextProvider
cancel
many
music
podcast
playlist
musicVideo
song
audioBook
video
iTunesU
compilation
album
tvShow
show
radioShow
podcastStation
musicPlaylist
station
episode
extendedPlay
longPlay
single
genre
news
ringtone
sounds
movie
play
pause
resume
stop
skip
previous
seek
skipForward
skipBackward
repeat
shuffle
moveSpeaker
addSpeaker
toggle
enable
disable
again
ending
intent
AllCases
RawValue
iPhone
iPad
homePod
appleTV
watch
deviceState
dialogProvider
IntentType
IntentResponseType
NLIntentType
NLContextProvider
deviceState
dialogProvider
languageDialogProvider
IntentType
IntentResponseType
NLIntentType
NLContextProvider
dialogProvider
isIOS
isTV
isHomePodLocalOnly
speaker
requestedStateIsCurrentState
isSameRoomOnly
smartControlFarRooms
isMultipleSpeakers
skipForwardDuration
skipBackwardDuration
playheadPosition
isSourceMissing
isDestinationMissing
isEnableShuffle
shuffleEnabled
isEnableRepeat
repeatMode
rooms
isShuffleEnabled
hasInHere
isSkipToPrevious
isSkipPrevious
isFastForward
appName
secs
none
RawValue
deviceState
dialogProvider
IntentType
IntentResponseType
NLIntentType
NLContextProvider
deviceState
dialogProvider
IntentType
IntentResponseType
NLIntentType
NLContextProvider
analyticsService
deviceState
resumeLongWindowDuration
resumeShortWindowDuration
autoResumableProximitiesInLongWindow
autoResumableProximitiesInShortWindow
groupControlDevice
roomCount
deviceState
dialogProvider
languageDialogProvider
IntentType
IntentResponseType
ItemType
DisambiguationItemContainerType
NLIntentType
NLContextProvider
deviceState
dialogProvider
userDefaultsProvider
playbackController
IntentType
IntentHandler
IntentResponseType
playbackController
deviceSelector
analyticsService
aceServiceHelper
cancel
enable
disable
getAttributeValue
audio
subtitles
closedCaptioning
subtitlesForDeafHardHearing
previousAudio
intent
AllCases
RawValue
ItemType
playbackController
deviceSelector
analyticsService
aceServiceHelper
ShuffleStateResolutionResult
Device
DeviceResolutionResult
SkipContentIntent
SkipContentIntentResponse
ResumeMediaIntent
ResumeMediaIntentResponse
DeviceQuery
DeviceQueryResolutionResult
LanguageOption
LanguageOptionResolutionResult
SubtitleStateResolutionResult
SetShuffleStateIntent
SetShuffleStateIntentResponse
SetSubtitleStateIntent
SetSubtitleStateIntentResponse
SetSubtitleStateDeviceResolutionResult
SetSubtitleStateLanguageResolutionResult
VolumeLevel
VolumeLevelResolutionResult
DeviceProximityResolutionResult
VolumeSettingTypeResolutionResult
VolumeSettingStateResolutionResult
SetAudioLanguageIntent
SetAudioLanguageIntentResponse
SetAudioLanguageDeviceResolutionResult
SetAudioLanguageLanguageResolutionResult
DeviceGroup
DeviceGroupResolutionResult
SeekTimeIntent
SeekTimeIntentResponse
SeekTimePlayheadPositionResolutionResult
NLMediaTypeResolutionResult
GetVolumeLevelIntent
GetVolumeLevelIntentResponse
GetVolumeLevelDeviceResolutionResult
SetRepeatStateIntent
SetRepeatStateIntentResponse
GroupTypeResolutionResult
NowPlayingMediaTypeResolutionResult
SignedDuration
SignedDurationResolutionResult
DeviceContext
DeviceContextResolutionResult
WhatDidTheySayIntent
WhatDidTheySayIntentResponse
WhatDidTheySayDeviceResolutionResult
VolumeSettingQualifierResolutionResult
NowPlayingStateResolutionResult
PauseMediaIntent
PauseMediaIntentResponse
RepeatStateResolutionResult
AddSpeakerIntent
AddSpeakerIntentResponse
AddSpeakerSourceResolutionResult
AddSpeakerDestinationsResolutionResult
SkipTimeIntent
SkipTimeIntentResponse
DirectionResolutionResult
VolumeSettingAttributeResolutionResult
SubtitleTypeResolutionResult
VolumeSettingUnitResolutionResult
SetVolumeLevelIntent
SetVolumeLevelIntentResponse
SetVolumeLevelDevicesResolutionResult
SetVolumeLevelVolumeLevelResolutionResult
MediaStream
MediaStreamResolutionResult
successWithResolvedValue:
confirmationRequiredWithValueToConfirm:
successWithResolvedShuffleState:
confirmationRequiredWithShuffleStateToConfirm:
name
T@"NSString",C,D,N
roomName
zoneNames
T@"NSArray",C,D,N
type
routeId
currentHome
T@"NSNumber",C,D,N
currentRoom
numberOfAffectedRooms
isDeviceSelectedUsingContext
context
T@"DeviceContext",C,D,N
disambiguated
confirmed
skipConfirmation
successWithResolvedObject:
disambiguationWithObjectsToDisambiguate:
confirmationRequiredWithObjectToConfirm:
successWithResolvedDevice:
disambiguationWithDevicesToDisambiguate:
confirmationRequiredWithDeviceToConfirm:
devices
direction
Tq,D,N
deviceContext
mediaType
deviceQueries
init
setUserActivity:
initWithCode:userActivity:
code
setCode:
_code
Tq,N,V_code
targetBundleIdentifier
accessoryName
zoneName
placeHint
deviceQuantifier
serviceName
serviceGroup
deviceType
reference
isFromEntity
successWithResolvedDeviceQuery:
disambiguationWithDeviceQuerysToDisambiguate:
confirmationRequiredWithDeviceQueryToConfirm:
languageIdentifier
languageTag
isActive
successWithResolvedLanguageOption:
disambiguationWithLanguageOptionsToDisambiguate:
confirmationRequiredWithLanguageOptionToConfirm:
successWithResolvedSubtitleState:
confirmationRequiredWithSubtitleStateToConfirm:
shuffleState
device
T@"Device",C,D,N
enable
language
T@"LanguageOption",C,D,N
unsupportedWithReason:
unsupportedForReason:
volumeSettingValue
volumeSettingState
volumeSettingUnit
volumeSettingQualifier
resolvedVolumeOutput
currentVolumeOutput
volumeSettingType
successWithResolvedVolumeLevel:
disambiguationWithVolumeLevelsToDisambiguate:
confirmationRequiredWithVolumeLevelToConfirm:
successWithResolvedDeviceProximity:
confirmationRequiredWithDeviceProximityToConfirm:
successWithResolvedVolumeSettingType:
confirmationRequiredWithVolumeSettingTypeToConfirm:
successWithResolvedVolumeSettingState:
confirmationRequiredWithVolumeSettingStateToConfirm:
groupName
streams
includesTVs
excludeGroup
successWithResolvedDeviceGroup:
disambiguationWithDeviceGroupsToDisambiguate:
confirmationRequiredWithDeviceGroupToConfirm:
playheadPosition
shouldStartPlaybackAfterSeek
isSkipToEnd
successWithResolvedNLMediaType:
confirmationRequiredWithNLMediaTypeToConfirm:
currentVolumeLevel
repeatState
successWithResolvedGroupType:
confirmationRequiredWithGroupTypeToConfirm:
successWithResolvedNowPlayingMediaType:
confirmationRequiredWithNowPlayingMediaTypeToConfirm:
duration
successWithResolvedSignedDuration:
disambiguationWithSignedDurationsToDisambiguate:
confirmationRequiredWithSignedDurationToConfirm:
proximity
nowPlayingState
nowPlayingTimestamp
T@"NSDate",C,D,N
nowPlayingMediaType
groupId
successWithResolvedDeviceContext:
disambiguationWithDeviceContextsToDisambiguate:
confirmationRequiredWithDeviceContextToConfirm:
startTime
successWithResolvedVolumeSettingQualifier:
confirmationRequiredWithVolumeSettingQualifierToConfirm:
successWithResolvedNowPlayingState:
confirmationRequiredWithNowPlayingStateToConfirm:
isDirectInvocation
successWithResolvedRepeatState:
confirmationRequiredWithRepeatStateToConfirm:
source
T@"MediaStream",C,D,N
destinations
T@"SignedDuration",C,D,N
successWithResolvedDirection:
confirmationRequiredWithDirectionToConfirm:
successWithResolvedVolumeSettingAttribute:
confirmationRequiredWithVolumeSettingAttributeToConfirm:
successWithResolvedSubtitleType:
confirmationRequiredWithSubtitleTypeToConfirm:
successWithResolvedVolumeSettingUnit:
confirmationRequiredWithVolumeSettingUnitToConfirm:
volumeLevel
T@"VolumeLevel",C,D,N
settingAttribute
groupLeader
roomCount
successWithResolvedMediaStream:
disambiguationWithMediaStreamsToDisambiguate:
confirmationRequiredWithMediaStreamToConfirm:
appId
setAppId:
callbacks
setCallbacks:
requiresResponse
aceId
setAceId:
refId
setRefId:
isEqual:
hash
superclass
class
self
performSelector:
performSelector:withObject:
performSelector:withObject:withObject:
isProxy
isKindOfClass:
isMemberOfClass:
conformsToProtocol:
respondsToSelector:
retain
release
autorelease
retainCount
zone
description
debugDescription
initWithDictionary:
initWithDictionary:context:
dictionary
properties
encodedClassName
groupIdentifier
copyWithZone:
mutableCopyWithZone:
supportsSecureCoding
encodeWithCoder:
initWithCoder:
encodeHashedRouteUIDs:completion:
setItems:
setTitle:
setUtterance:
setCommands:
setDisambiguated:
setDevices:
decodeHashedRouteUIDs:completion:
setDevice:
mediaRouteIdentifier
serializedContextByKey
initWithSerializedBackingStore:
initWithIdentifier:displayString:
setProximity:
setNowPlayingTimestamp:
playbackState
setNowPlayingState:
setNowPlayingMediaType:
setRouteId:
setGroupId:
disambiguationItems
setGroupLeader:
setExcludeGroup:
setType:
setIncludesTVs:
setStreams:
notRequired
setContext:
setRoomName:
setIsDeviceSelectedUsingContext:
boolForKey:
objectForKey:
initWithSuiteName:
floatValue
unsupported
dealloc
handleSetVolumeLevel:completion:
confirmSetVolumeLevel:completion:
resolveDevicesForSetVolumeLevel:withCompletion:
resolveVolumeLevelForSetVolumeLevel:withCompletion:
.cxx_destruct
removeObjectForKey:
setFloat:forKey:
setVolumeSettingType:
setCurrentVolumeOutput:
setResolvedVolumeOutput:
resolutionResultConfirmationRequiredWithItemToConfirm:
needsValue
setVolumeLevel:
sharedAnalytics
logEventWithType:context:
setCompletionStatus:
logInstrumentation:machAbsoluteTime:turnIdentifier:
setDeviceContext:
handleSkipContent:completion:
resolveDevicesForSkipContent:withCompletion:
confirmSkipContent:completion:
handleSetRepeatState:completion:
resolveDevicesForSetRepeatState:withCompletion:
confirmSetRepeatState:completion:
setMediaType:
integerValue
autoupdatingCurrentLocale
unsupportedReason
setName:
synchronize
arrayForKey:
setDirection:
handleSkipTime:completion:
resolveDurationForSkipTime:withCompletion:
resolveDevicesForSkipTime:withCompletion:
confirmSkipTime:completion:
handleAddSpeaker:completion:
resolveSourceForAddSpeaker:withCompletion:
resolveDestinationsForAddSpeaker:withCompletion:
confirmAddSpeaker:completion:
commands
setConfirmCommands:
setDenyCommands:
label
setConfirmText:
setDenyText:
setCancelTrigger:
setAllConfirmationOptions:
setLabel:
setIconType:
setPlaybackRouteUniqueIdentifier:
setPlaybackRouteUniqueIdentifierIsEncrypted:
setApplicationBundleIdentifier:
setSash:
setDeviceQueries:
setShuffleState:
bundleForClass:
handleResumeMedia:completion:
resolveDevicesForResumeMedia:withCompletion:
confirmResumeMedia:completion:
setTargetBundleIdentifier:
handleSetAudioLanguage:completion:
resolveDeviceForSetAudioLanguage:withCompletion:
resolveLanguageForSetAudioLanguage:withCompletion:
confirmSetAudioLanguage:completion:
handleGetVolumeLevel:completion:
resolveDeviceForGetVolumeLevel:withCompletion:
confirmGetVolumeLevel:completion:
setCurrentVolumeLevel:
setLanguageTag:
setLanguageIdentifier:
setIsActive:
setIsDirectInvocation:
handleSetShuffleState:completion:
resolveDevicesForSetShuffleState:withCompletion:
confirmSetShuffleState:completion:
setLanguage:
resolveDeviceForWhatDidTheySay:withCompletion:
handleWhatDidTheySay:completion:
confirmWhatDidTheySay:completion:
currentProcess
attributeWithDomain:name:
initWithExplanation:target:attributes:
isValid
acquireWithInvalidationHandler:
invalidate
JSONObjectWithData:options:error:
currentRoute
outputs
portType
setStartTime:
setEnable:
setIsSkipToEnd:
setPlayheadPosition:
setShouldStartPlaybackAfterSeek:
setConfirmed:
setCentered:
setAction:
setText:
setDecoratedLabel:
setTemplateItems:
handleSetSubtitleState:completion:
resolveDeviceForSetSubtitleState:withCompletion:
resolveLanguageForSetSubtitleState:withCompletion:
confirmSetSubtitleState:completion:
setDuration:
setVolumeSettingState:
setVolumeSettingQualifier:
setVolumeSettingUnit:
setSettingAttribute:
setVolumeSettingValue:
setZoneName:
setAccessoryName:
setServiceName:
setServiceGroup:
setDeviceType:
setReference:
setDeviceQuantifier:
setPlaceHint:
setIsFromEntity:
setRepeatState:
setZoneNames:
setCurrentHome:
setCurrentRoom:
setGroupName:
setSkipConfirmation:
doubleForKey:
sharedInstance
localizedStringForKey:table:bundle:languageCode:
handlePauseMedia:completion:
resolveDevicesForPauseMedia:withCompletion:
confirmPauseMedia:completion:
successWithResolvedTimeInterval:
handleSeekTime:completion:
resolveDevicesForSeekTime:withCompletion:
resolvePlayheadPositionForSeekTime:withCompletion:
confirmSeekTime:completion:
@24@0:8q16
@24@0:8@16
@32@0:8q16@24
q16@0:8
v24@0:8q16
first
second
third
fourth
fifth
sixth
seventh
eighth
ninth
tenth
eleventh
twelfth
thirteenth
fourteenth
fifteenth
sixteenth
seventeenth
eighteenth
nineteenth
twentieth
twenty first
twenty second
twenty third
twenty fourth
twenty fifth
first
second
third
fourth
fifth
sixth
seventh
eighth
ninth
tenth
eleventh
twelfth
thirteenth
fourteenth
fifteenth
sixteenth
seventeenth
eighteenth
nineteenth
twentieth
twenty first
twenty second
twenty third
twenty fourth
twenty fifth
first
second
third
fourth
fifth
sixth
seventh
eighth
ninth
tenth
eleventh
twelfth
thirteenth
fourteenth
fifteenth
sixteenth
seventeenth
eighteenth
nineteenth
twentieth
twenty first
twenty second
twenty third
twenty fourth
twenty fifth
mediaReference
